
aa851c981bc9bc8a06bc84c649c4dae5c4b3057400a2a70d8b76f663921ad64c.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	jae    0x411045
  411002:	lock aad 0x66
  411005:	sbb    eax,0xfc2502df
  41100a:	lahf   
  41100b:	pop    es
  41100c:	push   ebp
  41100d:	repz cmp ebp,DWORD PTR [esi+0x765adbea]
  411014:	pop    eax
  411015:	pop    ss
  411016:	scas   al,BYTE PTR es:[edi]
  411017:	into   
  411018:	mov    esi,0xe07b8466
  41101d:	and    ecx,DWORD PTR [esi]
  41101f:	call   0x30724b4
  411024:	jl     0x410fb4
  411026:	in     eax,dx
  411027:	int    0xb9
  411029:	mov    al,0xae
  41102b:	mov    edi,0x125f78e
  411030:	pop    ebx
  411031:	jno    0x41102c
  411033:	mov    eax,ds:0x70d8427e
  411038:	push   esi
  411039:	cld    
  41103a:	inc    esi
  41103b:	test   eax,0xd4deaa5c
  411040:	cwde   
  411041:	dec    ebp
  411042:	les    esi,FWORD PTR cs:[edi-0x4919f59]
  411049:	in     al,0x22
  41104b:	add    al,0x20
  41104d:	shr    BYTE PTR [edx-0x5186d24e],0x85
  411054:	or     eax,0x55e871e0
  411059:	cmp    ebp,DWORD PTR [edi-0x1cd8be80]
  41105f:	sahf   
  411060:	mov    bh,0x64
  411062:	mov    DWORD PTR [ebx],edx
  411064:	int3   
  411065:	fstp   TBYTE PTR [edx-0x55b7f6be]
  41106b:	jmp    0x6e84:0x309beac8
  411072:	ds mov ecx,0x791d90a5
  411078:	scas   al,BYTE PTR es:[edi]
  411079:	adc    eax,0xcc4b0bc5
  41107e:	and    al,BYTE PTR [ebx+ebx*1]
  411081:	push   ecx
  411082:	pop    edi
  411083:	in     al,dx
  411084:	adc    eax,0x2cc3a6c0
  411089:	push   esi
  41108a:	ins    BYTE PTR es:[edi],dx
  41108b:	or     BYTE PTR [esp+esi*8],0x4
  41108f:	inc    esi
  411090:	xor    eax,0x9ac9b1d4
  411095:	iret   
  411096:	dec    eax
  411097:	in     al,0x7e
  411099:	inc    eax
  41109a:	hlt    
  41109b:	sti    
  41109c:	and    eax,0x57279c9
  4110a1:	sbb    eax,0x62f299c3
  4110a6:	xor    eax,0x840f36e5
  4110ab:	into   
  4110ac:	repz mov edi,0x89c4af5e
  4110b2:	cmp    BYTE PTR [ecx+0x63af66ae],bh
  4110b8:	push   esp
  4110b9:	scas   al,BYTE PTR es:[edi]
  4110ba:	mov    esp,0x95aca6d2
  4110bf:	sahf   
  4110c0:	sub    al,0x51
  4110c2:	fwait
  4110c3:	loope  0x41104f
  4110c5:	push   ds
  4110c6:	or     eax,0xf7cc77e2
  4110cb:	rcr    DWORD PTR [eax-0x5e],1
  4110ce:	repz lock dec edx
  4110d1:	jns    0x4110af
  4110d3:	xlat   BYTE PTR ds:[ebx]
  4110d4:	and    DWORD PTR [ebp-0x6e4abcb7],ebp
  4110da:	xchg   edx,eax
  4110db:	pop    es
  4110dc:	lds    ebx,FWORD PTR [ecx+edi*8]
  4110df:	pusha  
  4110e0:	fabs   
  4110e2:	in     al,0xe6
  4110e4:	aad    0xd8
  4110e6:	jo     0x41111e
  4110e8:	mov    DWORD PTR [edx-0x4619275d],esp
  4110ee:	inc    ebx
  4110ef:	or     al,0xa3
  4110f1:	or     ebp,DWORD PTR [ecx]
  4110f3:	inc    edi
  4110f4:	and    eax,ebx
  4110f6:	mov    ds:0xcf5f9483,eax
  4110fb:	adc    eax,0xec75b8b6
  411100:	vpackuswb ymm7,ymm7,YMMWORD PTR [ebx+0x3e46364d]
  411108:	cvtdq2ps xmm3,xmm3
  41110b:	int3   
  41110c:	stc    
  41110d:	push   0x770c024d
  411112:	fist   DWORD PTR [esi+0x507bec9d]
  411118:	pop    ss
  411119:	mov    esp,0xc37d3807
  41111e:	and    al,BYTE PTR [esi+eiz*2+0x6b]
  411122:	push   cs
  411123:	clc    
  411124:	pop    edx
  411125:	aad    0x79
  411127:	mov    esp,0x43ddf7be
  41112c:	xor    BYTE PTR [ebx+0x60],bh
  41112f:	popf   
  411130:	mov    eax,0xdbe6ed3f
  411135:	jg     0x411114
  411137:	imul   esi,edx,0xffffffc2
  41113a:	adc    al,0xbb
  41113c:	mov    bh,0x21
  41113e:	stc    
  41113f:	aam    0xfc
  411141:	ins    DWORD PTR es:[edi],dx
  411142:	pop    esp
  411143:	outs   dx,DWORD PTR ds:[esi]
  411144:	js     0x41118e
  411146:	pop    edi
  411147:	enter  0xa7e3,0x1f
  41114b:	xchg   esi,eax
  41114c:	jbe    0x411116
  41114e:	add    al,0xeb
  411150:	inc    ecx
  411151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411152:	lods   eax,DWORD PTR ds:[esi]
  411153:	stc    
  411154:	pop    edi
  411155:	inc    eax
  411156:	(bad)  
  411157:	cmp    DWORD PTR [ebx-0x66],eax
  41115a:	adc    dl,bh
  41115c:	push   esi
  41115d:	icebp  
  41115e:	cdq    
  41115f:	push   ss
  411160:	xor    al,0x28
  411162:	or     eax,0x9e942d3b
  411167:	sar    BYTE PTR [ebp+0x6f],cl
  41116a:	lods   al,BYTE PTR ds:[esi]
  41116b:	bound  eax,QWORD PTR [esi-0x7b49ac3]
  411171:	cli    
  411172:	shl    DWORD PTR [ecx],1
  411174:	inc    esi
  411175:	repz loope 0x411187
  411178:	pop    edi
  411179:	das    
  41117a:	xchg   esp,eax
  41117b:	idiv   ah
  41117d:	jno    0x4111af
  41117f:	pop    esi
  411180:	nop
  411181:	sar    DWORD PTR [edx+0x71d0cdd5],1
  411187:	xor    BYTE PTR [ebx+esi*8-0x4a26044c],al
  41118e:	call   0x2451:0xd4417212
  411195:	sub    al,0x4a
  411197:	scas   al,BYTE PTR es:[edi]
  411198:	jge    0x41116a
  41119a:	ins    DWORD PTR es:[edi],dx
  41119b:	fs dec esi
  41119d:	mov    cl,0xb3
  41119f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a0:	sbb    eax,0x2e86c583
  4111a5:	rcl    dl,1
  4111a7:	out    0x9a,eax
  4111a9:	cmp    al,0x53
  4111ab:	or     BYTE PTR [ebx+0x46dad354],al
  4111b1:	pop    ds
  4111b2:	sub    DWORD PTR [ebp+0x2b953baf],esi
  4111b8:	in     al,0x32
  4111ba:	xchg   ecx,eax
  4111bb:	scas   eax,DWORD PTR es:[edi]
  4111bc:	repnz cmp DWORD PTR [esi-0x3d],ebx
  4111c0:	ror    eax,1
  4111c2:	push   es
  4111c3:	add    al,cl
  4111c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c6:	push   ss
  4111c7:	das    
  4111c8:	mov    ebx,0xfe235ebd
  4111cd:	push   esi
  4111ce:	pop    eax
  4111cf:	adc    al,BYTE PTR [eax+0x7459375f]
  4111d5:	jg     0x4111ca
  4111d7:	jge    0x411257
  4111d9:	div    DWORD PTR [edx]
  4111db:	jmp    FWORD PTR [ecx-0x6de19c92]
  4111e1:	xor    DWORD PTR [ebp+0x78],0x31
  4111e5:	xchg   edx,eax
  4111e6:	mov    cl,0x7b
  4111e8:	mov    bh,0x8d
  4111ea:	(bad)  
  4111eb:	lods   eax,DWORD PTR ds:[esi]
  4111ec:	jl     0x4111a0
  4111ee:	mov    ebx,0xa5d23fa9
  4111f3:	jns    0x4111f6
  4111f5:	into   
  4111f6:	(bad)  
  4111f7:	es fs xchg ebx,eax
  4111fa:	sub    eax,esp
  4111fc:	dec    edi
  4111fd:	das    
  4111fe:	enter  0x9dae,0xba
  411202:	lds    eax,FWORD PTR [edx]
  411204:	(bad)  
  411205:	sar    DWORD PTR [esi],cl
  411207:	xchg   ebx,eax
  411208:	stos   DWORD PTR es:[edi],eax
  411209:	sub    al,0xfa
  41120b:	lea    eax,[esi+0xb]
  41120e:	jecxz  0x41126f
  411210:	mov    DWORD PTR ds:0x676650b8,ebx
  411216:	nop
  411217:	pop    ebp
  411218:	sub    al,0xeb
  41121a:	sbb    dh,bl
  41121c:	test   al,0xe1
  41121e:	ret    
  41121f:	xor    ebx,DWORD PTR [edi]
  411221:	inc    ebp
  411222:	pusha  
  411223:	in     al,dx
  411224:	add    eax,0x435c36d5
  411229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41122a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41122b:	pusha  
  41122c:	and    eax,0xaddb4edc
  411231:	cdq    
  411232:	mov    bl,0x7d
  411234:	dec    ecx
  411235:	pop    ebx
  411236:	jecxz  0x4111d0
  411238:	aam    0x5f
  41123a:	imul   edx,ebp,0x18
  41123d:	neg    BYTE PTR [ebp+0x19720fa9]
  411243:	cmp    ah,cl
  411245:	mov    cl,0x2a
  411247:	or     DWORD PTR [ecx+0x1c3eebac],ecx
  41124d:	jne    0x411224
  41124f:	sub    ebp,DWORD PTR [ecx-0x14641996]
  411255:	ins    DWORD PTR es:[edi],dx
  411256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411257:	fcmovnbe st,st(4)
  411259:	mov    ebp,0xbc6217
  41125e:	pusha  
  41125f:	inc    edx
  411260:	sub    DWORD PTR [ecx-0x59bc309],ebx
  411266:	sub    al,0x3e
  411268:	mov    BYTE PTR ds:0xe48325f6,dh
  41126e:	xchg   edx,eax
  41126f:	adc    eax,0x8036e90e
  411274:	cmp    edi,DWORD PTR [esp+esi*2-0x68]
  411278:	inc    ecx
  411279:	adc    DWORD PTR [edi],0x39
  41127c:	hlt    
  41127d:	enter  0xcb4e,0xa
  411281:	inc    ebx
  411282:	xor    ebp,edx
  411284:	pop    ss
  411285:	mov    ch,BYTE PTR [ebx+0x185ea46c]
  41128b:	arpl   WORD PTR [ebx],si
  41128d:	xchg   ecx,eax
  41128e:	jg     0x411222
  411290:	ja     0x411234
  411292:	stc    
  411293:	jg     0x4112c5
  411295:	push   es
  411296:	leave  
  411297:	dec    ecx
  411298:	stc    
  411299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129a:	fcom   DWORD PTR [eax]
  41129c:	xchg   esp,eax
  41129d:	ret    0x5e5c
  4112a0:	or     al,0x53
  4112a2:	(bad)  
  4112a3:	push   esp
  4112a4:	mov    cl,0x15
  4112a6:	dec    esi
  4112a7:	repz sub ebx,0x34fb4376
  4112ae:	daa    
  4112af:	dec    ecx
  4112b0:	adc    al,0x51
  4112b2:	sub    DWORD PTR [ebp-0x74cd39f5],edx
  4112b8:	xor    eax,0xf0a8dcf4
  4112bd:	push   DWORD PTR [edx-0x12]
  4112c0:	ficom  DWORD PTR [esi+0x3309eee7]
  4112c6:	cmp    BYTE PTR [esi+ecx*1+0x3145bc6e],dl
  4112cd:	imul   ebx,DWORD PTR [edx+0x14],0xd9f0f466
  4112d4:	test   eax,0xa0ac925c
  4112d9:	add    esp,esp
  4112db:	push   es
  4112dc:	das    
  4112dd:	(bad)  
  4112de:	clc    
  4112df:	mov    ah,0x11
  4112e1:	pop    ebx
  4112e2:	iret   
  4112e3:	fdivr  DWORD PTR [edx]
  4112e5:	ja     0x411338
  4112e7:	icebp  
  4112e8:	cmp    BYTE PTR [esi-0x1c],dl
  4112eb:	add    dl,BYTE PTR [eax+0x53]
  4112ee:	push   ecx
  4112ef:	cs xor esi,eax
  4112f2:	gs jmp 0x73ae:0xf20845b5
  4112fa:	out    dx,al
  4112fb:	push   ecx
  4112fc:	xchg   ebp,eax
  4112fd:	jae    0x4112cb
  4112ff:	sbb    eax,0x5e282a88
  411304:	push   edi
  411305:	fcmovnbe st,st(7)
  411307:	pusha  
  411308:	int    0x59
  41130a:	fst    DWORD PTR [ebp+0x68]
  41130d:	pop    edx
  41130e:	(bad)  
  41130f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411310:	or     dh,BYTE PTR [edi-0x45903de1]
  411316:	push   cs
  411317:	xchg   ebx,eax
  411318:	imul   edi,DWORD PTR [eax+esi*1],0x35739353
  41131f:	mov    dh,0x63
  411321:	cli    
  411322:	shl    BYTE PTR [ebx-0xc8e99e1],1
  411328:	pushf  
  411329:	add    BYTE PTR [esi-0x72],bh
  41132c:	rcr    DWORD PTR [eax+0x3bcbe40d],0x98
  411333:	rol    ah,1
  411335:	cmp    ebp,DWORD PTR [edi-0x7b]
  411338:	mov    dl,0xfe
  41133a:	in     al,dx
  41133b:	xor    eax,0xbed3713a
  411340:	jmp    0x41139a
  411342:	mov    ss:0x957b27ee,eax
  411348:	mov    ebx,0x55eda9c7
  41134d:	popf   
  41134e:	fwait
  41134f:	outs   dx,DWORD PTR ds:[esi]
  411350:	jne    0x41134b
  411352:	xchg   edi,eax
  411353:	pop    ds
  411354:	xchg   edi,eax
  411355:	dec    edi
  411356:	dec    edi
  411357:	xlat   BYTE PTR ds:[ebx]
  411358:	fild   WORD PTR [edi-0x5b]
  41135b:	add    DWORD PTR [ebp+0x14],esi
  41135e:	psubq  mm5,QWORD PTR [ebx+0x7b6aea02]
  411365:	and    BYTE PTR [edx],al
  411367:	cwde   
  411368:	or     DWORD PTR [esi],edi
  41136a:	out    dx,al
  41136b:	xchg   ebx,eax
  41136c:	sub    BYTE PTR ds:0x4751a66f,dl
  411372:	cwde   
  411373:	daa    
  411374:	inc    eax
  411375:	inc    ebp
  411376:	hlt    
  411377:	mov    cl,0x79
  411379:	fistp  DWORD PTR [edi+0x69aa4c4f]
  41137f:	push   ds
  411380:	inc    DWORD PTR [eax-0x7c]
  411383:	outs   dx,BYTE PTR ds:[esi]
  411384:	pop    esp
  411385:	jne    0x4113bd
  411387:	mov    bh,bh
  411389:	in     al,0x1d
  41138b:	push   eax
  41138c:	stos   BYTE PTR es:[edi],al
  41138d:	sar    cl,0x11
  411390:	fmul   DWORD PTR [edi-0x28f0c779]
  411396:	push   ds
  411397:	fistp  DWORD PTR [ebx-0x69d9044a]
  41139d:	aam    0xd5
  41139f:	pop    eax
  4113a0:	shl    DWORD PTR [eax+ecx*8-0x55d0ea42],cl
  4113a7:	or     eax,0x562f9c35
  4113ac:	inc    eax
  4113ad:	in     eax,dx
  4113ae:	push   esi
  4113af:	add    BYTE PTR [ecx-0x1d],ah
  4113b2:	inc    esp
  4113b3:	sahf   
  4113b4:	(bad)  
  4113b6:	mov    DWORD PTR [edi-0x9],esp
  4113b9:	rol    BYTE PTR [esi+0x3c85b2e],1
  4113bf:	inc    ebx
  4113c0:	daa    
  4113c1:	inc    ebx
  4113c2:	clc    
  4113c3:	jge    0x41138a
  4113c5:	push   ecx
  4113c6:	test   DWORD PTR [edi-0x42ea2d68],0xd7a36d40
  4113d0:	ins    DWORD PTR es:[edi],dx
  4113d1:	sti    
  4113d2:	shl    DWORD PTR [edx-0x1d],cl
  4113d5:	lahf   
  4113d6:	sar    DWORD PTR [edi+0x5ce0a06f],0x13
  4113dd:	add    eax,0x3d6385c2
  4113e2:	pop    ecx
  4113e3:	jae    0x4113f8
  4113e5:	leave  
  4113e6:	pop    ebx
  4113e7:	sar    DWORD PTR [ebx+edi*1-0x3b64ce97],cl
  4113ee:	add    al,0xe
  4113f0:	push   0xfe85ef09
  4113f5:	popa   
  4113f6:	jmp    0xe01e:0xc61043ac
  4113fd:	rdpmc  
  4113ff:	(bad)  
  411400:	sbb    DWORD PTR [eax+0x5cb3e3a3],edi
  411406:	rol    ah,1
  411408:	push   esi
  411409:	jge    0x4113f3
  41140b:	retf   0x4512
  41140e:	inc    ecx
  41140f:	cs pop esi
  411411:	inc    esi
  411412:	sbb    eax,0xb3d65914
  411417:	xchg   esp,eax
  411418:	push   ss
  411419:	adc    esi,DWORD PTR [eax+esi*2+0x14]
  41141d:	sbb    ebp,DWORD PTR [ebx+0x67]
  411420:	mov    edi,0x513f7613
  411425:	cmp    BYTE PTR ds:0x63fa6d15,ch
  41142b:	mov    ds:0x3ad2204f,eax
  411430:	and    eax,0x69bf26f7
  411435:	mov    ecx,0x44925aaf
  41143a:	aad    0x8a
  41143c:	jnp    0x41145c
  41143e:	rol    ebx,0x8b
  411441:	sar    DWORD PTR [eax-0x11],1
  411444:	cmp    DWORD PTR [ecx+0x1a],ebp
  411447:	sbb    DWORD PTR [edx-0x353eb89d],ebx
  41144d:	cld    
  41144e:	out    0x7d,al
  411450:	jecxz  0x411450
  411452:	mov    bh,0x34
  411454:	int3   
  411455:	push   0xdf3c9fc2
  41145a:	(bad)  
  41145b:	mov    esi,0x6bd22d99
  411460:	shl    BYTE PTR [ecx-0x29],1
  411463:	jb     0x411486
  411465:	and    al,0x2
  411467:	push   ss
  411468:	idiv   BYTE PTR [ecx]
  41146a:	(bad)  
  41146b:	stc    
  41146c:	lds    eax,FWORD PTR [ecx+0xb]
  41146f:	arpl   cx,di
  411471:	loopne 0x4114d3
  411473:	inc    eax
  411474:	inc    esp
  411475:	jo     0x411496
  411477:	xchg   ecx,eax
  411478:	mov    dh,0x3b
  41147a:	ins    BYTE PTR es:[edi],dx
  41147b:	dec    eax
  41147c:	xor    ebx,DWORD PTR [ebx+0x2]
  41147f:	call   0x17632347
  411484:	push   ecx
  411485:	icebp  
  411486:	cdq    
  411487:	jnp    0x41149a
  411489:	mov    eax,ds:0xebd8fd1e
  41148e:	mov    eax,0xf0239b71
  411494:	jmp    0x4114e5
  411496:	(bad)  
  411497:	and    eax,0xd31bcabb
  41149c:	loope  0x4114b4
  41149e:	sbb    cl,BYTE PTR [ecx]
  4114a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a1:	cmp    ebp,DWORD PTR [edx+ecx*4-0x41]
  4114a5:	dec    edi
  4114a6:	cmp    ah,bl
  4114a8:	addr16 shl bh,0x3
  4114ac:	mov    eax,ds:0xe0c9d4aa
  4114b1:	push   ecx
  4114b2:	mov    DWORD PTR [ebx],0xf382fec1
  4114b8:	ins    DWORD PTR es:[edi],dx
  4114b9:	clc    
  4114ba:	mov    ebx,0x28cabcfa
  4114bf:	ins    DWORD PTR es:[edi],dx
  4114c0:	pop    ebx
  4114c1:	aaa    
  4114c2:	mov    DWORD PTR [esi],ecx
  4114c4:	add    eax,0xd9be7e29
  4114c9:	dec    ecx
  4114ca:	enter  0xb3fb,0xc8
  4114ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114cf:	imul   esi,DWORD PTR [ecx+0x12],0xffffff97
  4114d3:	daa    
  4114d4:	mov    esi,0xa8f1f2f5
  4114d9:	lock inc ecx
  4114db:	outs   dx,BYTE PTR ds:[esi]
  4114dc:	es push edx
  4114de:	imul   eax,DWORD PTR [edx-0x29eb8486],0xa7ef34dd
  4114e8:	jnp    0x411491
  4114ea:	mov    ah,0xd1
  4114ec:	dec    esp
  4114ed:	xor    DWORD PTR [ebx],0x3a
  4114f0:	push   0x52f331d
  4114f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f6:	out    0xea,eax
  4114f8:	push   edx
  4114f9:	fst    DWORD PTR ds:0xf2114baa
  4114ff:	pop    es
  411500:	out    dx,al
  411501:	sub    al,bh
  411503:	and    BYTE PTR [ebx-0x6e879456],cl
  411509:	les    ebx,FWORD PTR [ebp-0x65059c56]
  41150f:	or     eax,DWORD PTR [ebp+ebp*4+0x72]
  411513:	pop    ds
  411514:	push   edx
  411515:	push   esi
  411516:	push   edi
  411517:	fs dec edi
  411519:	push   0x49
  41151b:	adc    BYTE PTR [ecx+0x3beadced],dh
  411521:	xlat   BYTE PTR ds:[ebx]
  411522:	xchg   ebx,eax
  411523:	and    eax,0xa76f6437
  411529:	jb     0x411550
  41152b:	and    ecx,DWORD PTR [edi-0x6a]
  41152e:	leave  
  41152f:	test   BYTE PTR [ebx],ch
  411531:	sub    DWORD PTR [ecx],eax
  411533:	enter  0x2f46,0x2f
  411537:	dec    esi
  411538:	mov    esp,0x8dc5cb5c
  41153d:	in     eax,0xa4
  41153f:	adc    DWORD PTR [ebx-0x7fa00b37],edx
  411545:	and    eax,0xe933fd70
  41154a:	daa    
  41154b:	sbb    al,BYTE PTR [edi+eax*1-0x2a]
  41154f:	mov    dh,BYTE PTR [eax]
  411551:	jle    0x41156d
  411553:	xchg   ebp,eax
  411554:	test   DWORD PTR [esi],edx
  411556:	scas   eax,DWORD PTR es:[edi]
  411557:	xor    BYTE PTR [eax-0x75966c2],ah
  41155d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155e:	and    ecx,esi
  411560:	pop    ebx
  411561:	xor    eax,0x944b1cd9
  411566:	xchg   esi,eax
  411567:	dec    edx
  411568:	out    dx,al
  411569:	outs   dx,DWORD PTR ds:[esi]
  41156a:	push   ebp
  41156b:	sbb    al,0x7c
  41156d:	pop    es
  41156e:	xor    eax,ecx
  411570:	mov    edi,0x8e3d8ce6
  411575:	es jb  0x4114fc
  411578:	and    BYTE PTR [ecx+edx*1+0x771c82b3],cl
  41157f:	or     cl,BYTE PTR [ecx-0x2]
  411582:	pop    ds
  411583:	lock push esi
  411585:	addr16 pushf 
  411587:	dec    ebp
  411588:	nop
  411589:	lock loopne 0x411531
  41158c:	xchg   ebp,eax
  41158d:	and    BYTE PTR [ebx-0x20],dl
  411590:	js     0x41160c
  411592:	in     eax,0x4b
  411594:	aam    0xac
  411596:	pusha  
  411597:	push   es
  411598:	mov    esp,DWORD PTR [ecx]
  41159a:	and    ebx,eax
  41159c:	jne    0x411550
  41159e:	push   esp
  41159f:	stc    
  4115a0:	out    0x26,eax
  4115a2:	in     eax,dx
  4115a3:	or     DWORD PTR [ecx+esi*1+0x56003f72],edi
  4115aa:	push   ebx
  4115ab:	and    dl,BYTE PTR [eax-0x2122fab8]
  4115b1:	lods   al,BYTE PTR ds:[esi]
  4115b2:	out    dx,eax
  4115b3:	icebp  
  4115b4:	push   ebx
  4115b5:	(bad)  
  4115b6:	mov    ah,0x22
  4115b8:	outs   dx,DWORD PTR ds:[esi]
  4115b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ba:	adc    bl,BYTE PTR [ecx-0x34fe6d37]
  4115c0:	push   edi
  4115c1:	adc    DWORD PTR [eax],esp
  4115c3:	bound  edx,QWORD PTR [ebp+0x6a]
  4115c6:	nop
  4115c7:	test   eax,0xa066c029
  4115cc:	out    0xbf,eax
  4115ce:	ret    
  4115cf:	stos   DWORD PTR es:[edi],eax
  4115d0:	cdq    
  4115d1:	sub    eax,0xef969f92
  4115d6:	sub    eax,0xd5759deb
  4115db:	jl     0x411591
  4115dd:	push   ds
  4115de:	sub    ah,ah
  4115e0:	xchg   edi,eax
  4115e1:	addr16 and esp,esp
  4115e4:	repz mov dh,0xf5
  4115e7:	xor    DWORD PTR [edx+0x1ee339a6],esi
  4115ed:	xchg   esi,eax
  4115ee:	xchg   ebx,eax
  4115ef:	pop    ebp
  4115f0:	ds dec esp
  4115f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f3:	push   cs
  4115f4:	mov    esi,0x49dcfa35
  4115f9:	js     0x41164c
  4115fb:	xor    eax,edx
  4115fd:	shl    BYTE PTR [eax],1
  4115ff:	loope  0x4115e3
  411601:	repnz and ebx,ebx
  411604:	mov    ebp,0x37793dee
  411609:	pop    ecx
  41160a:	pop    ds
  41160b:	outs   dx,BYTE PTR ds:[esi]
  41160c:	cdq    
  41160d:	loopne 0x411626
  41160f:	mov    BYTE PTR [esi],bl
  411611:	jle    0x4115bb
  411613:	test   esi,0x7c7f31c4
  411619:	cmp    ebp,DWORD PTR [edx+edx*1]
  41161c:	mov    ah,0xa5
  41161e:	inc    edi
  41161f:	rcr    DWORD PTR [edi],cl
  411621:	add    dl,0x5d
  411624:	test   DWORD PTR [edi],ecx
  411626:	call   0xb0201ce5
  41162b:	mov    edx,0x6e52537c
  411630:	jecxz  0x411620
  411632:	inc    edi
  411633:	scas   eax,DWORD PTR es:[edi]
  411634:	inc    edi
  411635:	jne    0x41166e
  411637:	push   0xffffffa7
  411639:	pop    eax
  41163a:	(bad)  
  41163b:	shl    DWORD PTR [eax-0x54],0x8f
  41163f:	ss mov esi,ecx
  411642:	mov    edx,0x2b332a37
  411647:	(bad)  
  411648:	pusha  
  411649:	(bad)  
  41164a:	imul   esi,DWORD PTR [ebx+0x7a],0xffffff95
  41164e:	mov    ss,WORD PTR [edx]
  411650:	pop    ebp
  411651:	sub    ch,BYTE PTR [edi-0x617c3afa]
  411657:	mov    esi,0x26ab7981
  41165c:	xchg   esp,eax
  41165d:	xchg   ebx,eax
  41165e:	jp     0x411671
  411660:	aam    0x57
  411662:	cmp    ebx,DWORD PTR [ebx]
  411664:	mov    bl,0x34
  411666:	outs   dx,DWORD PTR ds:[esi]
  411667:	inc    edi
  411668:	add    al,0x3c
  41166a:	dec    edi
  41166b:	jg     0x411601
  41166d:	in     eax,0x57
  41166f:	clc    
  411670:	jmp    0x49a1:0x9ca59b74
  411677:	aas    
  411678:	fs ret 
  41167a:	jge    0x411670
  41167c:	rcr    ebx,cl
  41167e:	fld    DWORD PTR [edx-0x2c]
  411681:	fsubp  st(1),st
  411683:	mov    WORD PTR [ebp+ebx*1+0x33520695],ss
  41168a:	aas    
  41168b:	or     DWORD PTR [ebx-0x2584b876],0x20
  411692:	retf   0x6d21
  411695:	out    0x4d,al
  411697:	sbb    al,0xb9
  411699:	loopne 0x411667
  41169b:	mov    ecx,0x9b766ac0
  4116a0:	icebp  
  4116a1:	jl     0x411694
  4116a3:	xchg   edi,eax
  4116a4:	std    
  4116a5:	mov    edx,0x6fc3d746
  4116aa:	sbb    eax,0xb9147622
  4116af:	jae    0x41165e
  4116b1:	in     eax,0xc8
  4116b3:	outs   dx,DWORD PTR ds:[esi]
  4116b4:	dec    edx
  4116b5:	imul   BYTE PTR [ecx+0x6c5a0c6c]
  4116bb:	dec    edx
  4116bc:	pop    ds
  4116bd:	mov    ebx,0x9eefc871
  4116c2:	lods   eax,DWORD PTR ds:[esi]
  4116c3:	dec    ebx
  4116c4:	sub    ebp,ecx
  4116c6:	stos   BYTE PTR es:[edi],al
  4116c7:	mov    al,ds:0xbdb5a2af
  4116cc:	cmp    ebp,0x28
  4116cf:	(bad)  
  4116d1:	call   0x18c4fbd8
  4116d6:	dec    ebx
  4116d7:	xchg   esp,eax
  4116d8:	scas   al,BYTE PTR es:[edi]
  4116d9:	neg    BYTE PTR [edx+ebx*2-0x11]
  4116dd:	mov    ch,0xb9
  4116df:	sahf   
  4116e0:	pushf  
  4116e1:	jae    0x411711
  4116e3:	mov    dh,BYTE PTR [ebp+0x1a]
  4116e6:	jmp    0xa5eaa137
  4116eb:	pop    esp
  4116ec:	jge    0x4116b2
  4116ee:	mov    dl,0xfc
  4116f0:	dec    esi
  4116f1:	cmp    bl,BYTE PTR fs:[edi-0x527439c2]
  4116f8:	sub    eax,0xa67689e0
  4116fd:	fnstsw WORD PTR [ebx-0x68]
  411700:	mov    cl,BYTE PTR [eax+0x42]
  411703:	pop    ds
  411704:	adc    DWORD PTR [edi+eax*1+0x7b2b41db],ebp
  41170b:	sbb    al,0x34
  41170d:	hlt    
  41170e:	sub    ecx,edi
  411710:	and    al,0x65
  411712:	sub    DWORD PTR [ecx],edx
  411714:	inc    edx
  411715:	ret    0xa0e2
  411718:	bound  eax,QWORD PTR [ecx]
  41171a:	ds mov esp,0xc655ce0b
  411720:	xor    eax,0xd1de1a39
  411725:	retf   
  411726:	dec    eax
  411727:	inc    ebp
  411728:	shl    DWORD PTR [esi],1
  41172a:	(bad)  
  41172b:	jmp    0x19f3:0xcdc5830
  411732:	nop
  411733:	(bad)  
  411734:	shr    al,cl
  411736:	add    DWORD PTR [edx-0x4b009d42],ebx
  41173c:	clc    
  41173d:	imul   eax,DWORD PTR [edi+ebx*8+0x52f4cf0d],0x28
  411745:	jg     0x411761
  411747:	test   eax,0xe832195e
  41174c:	cmp    al,0xaf
  41174e:	data16 add al,0x85
  411751:	xchg   edi,eax
  411752:	ret    
  411753:	cmp    al,al
  411755:	loop   0x41171d
  411757:	mov    cl,0xcd
  411759:	mov    dl,0xef
  41175b:	sbb    al,BYTE PTR [ebx+0x6b]
  41175e:	shl    edi,1
  411760:	add    ecx,edi
  411762:	fmul   QWORD PTR [ebx+0x54]
  411765:	cmp    BYTE PTR [edx+0x38],ah
  411768:	jmp    0x411740
  41176a:	jmp    0x76c8f5b4
  41176f:	mov    edx,DWORD PTR [esp+esi*2]
  411772:	sahf   
  411773:	push   eax
  411774:	push   ss
  411775:	cdq    
  411776:	mov    dl,0x93
  411778:	out    0x35,eax
  41177a:	push   ebx
  41177b:	cmc    
  41177c:	xor    eax,DWORD PTR [edi-0x635c2f71]
  411782:	dec    esp
  411783:	xor    bh,BYTE PTR [edx]
  411785:	ror    DWORD PTR [ecx+0x30],0x93
  411789:	shr    BYTE PTR [edx],0x26
  41178c:	push   0x255eff1d
  411791:	push   edx
  411792:	in     al,dx
  411793:	jmp    0x41173c
  411795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411796:	sahf   
  411797:	in     al,0x54
  411799:	push   ecx
  41179a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41179b:	stos   BYTE PTR es:[edi],al
  41179c:	imul   ecx
  41179e:	mov    esi,0xbf7eb71e
  4117a3:	sar    BYTE PTR [ecx],cl
  4117a5:	jae    0x411800
  4117a7:	dec    BYTE PTR [edx-0x60523765]
  4117ad:	rcl    BYTE PTR [edx+0x4efcd344],cl
  4117b3:	mov    esp,0x4cc5d5f3
  4117b8:	retf   0xb0f5
  4117bb:	sub    al,0x68
  4117bd:	lock xor ecx,edx
  4117c0:	mov    dl,dh
  4117c2:	dec    ebp
  4117c3:	pop    ecx
  4117c4:	and    al,0xfe
  4117c6:	add    ch,ah
  4117c8:	push   ss
  4117c9:	call   0x1afd:0x278eda70
  4117d0:	iret   
  4117d1:	and    esp,ecx
  4117d3:	push   esp
  4117d4:	xlat   BYTE PTR ds:[ebx]
  4117d5:	jmp    0xff15889c
  4117da:	test   DWORD PTR [edi+0x5a],edi
  4117dd:	repz icebp 
  4117df:	(bad)  
  4117e0:	out    0x72,al
  4117e2:	dec    eax
  4117e3:	ror    BYTE PTR [ecx-0x32f3d3d],0xd4
  4117ea:	fs and eax,0x7910ec94
  4117f0:	in     eax,dx
  4117f1:	(bad)  
  4117f3:	sub    DWORD PTR [ebx],esi
  4117f5:	jno    0x41183a
  4117f7:	int3   
  4117f8:	lock in eax,0x77
  4117fb:	int    0xe1
  4117fd:	nop
  4117fe:	ins    BYTE PTR es:[edi],dx
  4117ff:	pop    es
  411800:	add    edx,DWORD PTR [ecx+0x3d]
  411803:	and    ecx,DWORD PTR [ebx+eiz*2+0x117c7668]
  41180a:	xor    eax,0x3ac9b0dd
  41180f:	sbb    al,0x25
  411811:	xor    eax,0xa2b59dbd
  411816:	icebp  
  411817:	ret    
  411818:	or     esi,DWORD PTR [edx+0x46]
  41181b:	sbb    ebx,DWORD PTR [ecx-0x1dca50b5]
  411821:	adc    eax,0xcb57d42
  411826:	fdiv   st(4),st
  411828:	xor    ah,dh
  41182a:	mov    eax,0x1820698e
  41182f:	add    al,0xec
  411831:	mov    eax,ds:0x40980bdb
  411836:	sub    eax,0x16d8eb3f
  41183b:	inc    ecx
  41183c:	mov    ch,0x3d
  41183e:	sub    ch,BYTE PTR [eax+0x69]
  411841:	std    
  411842:	shl    BYTE PTR [edi-0x6c534419],0xd7
  411849:	add    edx,edi
  41184b:	mov    eax,0xec871998
  411850:	pop    ecx
  411851:	mov    ebx,0xcc171276
  411856:	out    0x65,eax
  411858:	outs   dx,DWORD PTR ds:[esi]
  411859:	(bad)  [ebp+0x3a]
  41185c:	cmp    ebp,DWORD PTR [edi-0x2]
  41185f:	fwait
  411860:	push   esi
  411861:	sub    DWORD PTR [ecx],eax
  411863:	dec    eax
  411864:	pop    es
  411865:	jmp    0x6ca8:0x6c2770e1
  41186c:	inc    esp
  41186d:	jl     0x41188e
  41186f:	aas    
  411870:	pusha  
  411871:	jbe    0x41183f
  411873:	pop    esi
  411874:	in     al,0x8e
  411876:	stos   DWORD PTR es:[edi],eax
  411877:	jmp    0xaa7b:0xdab82e19
  41187e:	sub    eax,0xaee6f276
  411883:	out    0xbb,eax
  411885:	xchg   edx,eax
  411886:	cs jl  0x4118b0
  411889:	push   edi
  41188a:	fdivrp st(6),st
  41188c:	dec    esi
  41188d:	sbb    ebx,DWORD PTR [ecx+edx*2-0x10]
  411891:	(bad)  
  411892:	into   
  411893:	retf   0x593d
  411896:	sbb    cl,BYTE PTR [esi-0x595dbb70]
  41189c:	cwde   
  41189d:	mov    dh,bh
  41189f:	inc    ebp
  4118a0:	fcomp  DWORD PTR [edx]
  4118a2:	cmc    
  4118a3:	outs   dx,BYTE PTR ds:[esi]
  4118a4:	shl    BYTE PTR [ebx-0x7a],cl
  4118a7:	(bad)  
  4118a8:	hlt    
  4118a9:	test   eax,0x87d44247
  4118ae:	or     al,0x7b
  4118b0:	adc    BYTE PTR [ebx+edi*1],al
  4118b3:	dec    edx
  4118b4:	lods   al,BYTE PTR ds:[esi]
  4118b5:	add    DWORD PTR [eax-0x5c],ebp
  4118b8:	adc    DWORD PTR [ebx],ebp
  4118ba:	jb     0x41183c
  4118bc:	dec    eax
  4118bd:	mov    edx,0x5737a55
  4118c2:	jle    0x41186b
  4118c4:	cmp    al,0x59
  4118c6:	sbb    al,ch
  4118c8:	mov    esp,0xa22d5b59
  4118cd:	dec    edi
  4118ce:	adc    eax,0x6641618d
  4118d3:	js     0x4118b2
  4118d5:	into   
  4118d6:	pop    es
  4118d7:	sub    DWORD PTR [edx-0x6a],esp
  4118da:	jo     0x4118c8
  4118dc:	pop    eax
  4118dd:	ss into 
  4118df:	mov    dh,0x1d
  4118e1:	mov    bl,ch
  4118e3:	aaa    
  4118e4:	add    al,0x97
  4118e6:	mov    bl,0x57
  4118e8:	out    dx,eax
  4118e9:	popf   
  4118ea:	adc    dl,cl
  4118ec:	fsubp  st(7),st
  4118ef:	cmp    bl,BYTE PTR [esi-0x78]
  4118f2:	pop    ecx
  4118f3:	leave  
  4118f4:	call   0xab1965d4
  4118f9:	fidivr WORD PTR [ebx+0x50c90911]
  4118ff:	jno    0x4118e9
  411901:	xchg   edi,eax
  411902:	dec    esp
  411903:	push   ebx
  411904:	imul   esi,DWORD PTR [ecx],0xffffff89
  411907:	and    eax,0x7d29cb99
  41190c:	jle    0x411909
  41190e:	enter  0x3b3a,0x16
  411912:	sbb    DWORD PTR [ebx-0x10186dd0],0x61
  411919:	call   0xd4b60e27
  41191e:	loop   0x4118ea
  411920:	dec    esi
  411921:	xor    BYTE PTR [edx+0x7d],0xcf
  411925:	repnz and dh,dl
  411928:	iret   
  411929:	mov    es,WORD PTR [edx]
  41192b:	sti    
  41192c:	mov    BYTE PTR [eax-0x155e66b],ah
  411932:	lahf   
  411933:	pop    esp
  411934:	cmp    edx,eax
  411936:	xor    BYTE PTR [esi-0x38],ch
  411939:	xchg   edi,eax
  41193a:	adc    ebx,ecx
  41193c:	jle    0x4119b4
  41193e:	inc    ebx
  41193f:	jle    0x411954
  411941:	push   ebp
  411942:	lea    eax,[eax-0x40]
  411945:	in     al,0x50
  411947:	xchg   edi,eax
  411948:	sahf   
  411949:	mov    ds:0xad4d7eed,al
  41194e:	xor    eax,0x72375acf
  411953:	mov    ebp,0xbbcfc2
  411958:	mov    bh,0xa3
  41195a:	dec    ebx
  41195b:	or     BYTE PTR [ebp-0x9],dh
  41195e:	mov    dh,0xc1
  411960:	scas   al,BYTE PTR es:[edi]
  411961:	mov    al,ds:0x446a65de
  411966:	jne    0x411992
  411968:	sub    BYTE PTR [edx],bl
  41196a:	retf   0xda55
  41196d:	int    0x2e
  41196f:	push   ebp
  411970:	bound  eax,QWORD PTR [esi-0x3b]
  411973:	mov    gs,WORD PTR [edx+ebp*8+0x939d948]
  41197a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41197b:	add    bh,ah
  41197d:	repnz mov ebx,DWORD PTR [eax+edi*1+0xa]
  411982:	cdq    
  411983:	xchg   ebp,eax
  411984:	xchg   ebx,eax
  411985:	jp     0x41194e
  411987:	adc    DWORD PTR es:[esi],0x806a9fe6
  41198e:	push   esi
  41198f:	test   eax,0x3746b2e1
  411994:	ds push ebp
  411996:	dec    ebx
  411997:	fdiv   DWORD PTR [ebx]
  411999:	fmul   QWORD PTR [ecx]
  41199b:	push   ss
  41199c:	loopne 0x41197e
  41199e:	sbb    DWORD PTR [edx-0x12],0xfffffffc
  4119a2:	cs cmp eax,0x3e4f9295
  4119a8:	inc    esi
  4119a9:	sub    BYTE PTR ds:0xf74d68c6,al
  4119af:	test   al,0x64
  4119b1:	jp     0x411992
  4119b3:	pop    eax
  4119b4:	lods   eax,DWORD PTR ds:[esi]
  4119b5:	inc    edx
  4119b6:	dec    ecx
  4119b7:	fwait
  4119b8:	in     al,0xaf
  4119ba:	pop    eax
  4119bb:	aas    
  4119bc:	cli    
  4119bd:	(bad)  
  4119be:	dec    esi
  4119bf:	test   al,0x6
  4119c1:	ins    BYTE PTR es:[edi],dx
  4119c2:	loopne 0x4119f1
  4119c4:	int3   
  4119c5:	mov    es,WORD PTR es:0xbaf4e17
  4119cc:	in     eax,0xed
  4119ce:	loope  0x411976
  4119d0:	ss push ebp
  4119d2:	daa    
  4119d3:	sub    dh,al
  4119d5:	ja     0x4119f5
  4119d7:	sub    bl,0x95
  4119da:	nop
  4119db:	lahf   
  4119dc:	xor    DWORD PTR [edi+0x22],ebx
  4119df:	add    al,0xc1
  4119e1:	ror    DWORD PTR [edi+0x23e5631],1
  4119e7:	pop    edx
  4119e8:	rcl    BYTE PTR [eax-0x58],1
  4119eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ec:	mov    WORD PTR [edx],?
  4119ee:	int3   
  4119ef:	aas    
  4119f0:	pop    eax
  4119f1:	aam    0xbe
  4119f3:	cwde   
  4119f4:	rcr    BYTE PTR [eax],1
  4119f6:	xchg   ebp,eax
  4119f7:	test   eax,0x57a03b53
  4119fc:	add    al,0x63
  4119fe:	sti    
  4119ff:	and    BYTE PTR [eax-0xdac35cd],0xad
  411a06:	push   esp
  411a07:	jno    0x4119f3
  411a09:	push   ds
  411a0a:	xchg   DWORD PTR [ebx-0x44],edi
  411a0d:	push   ebp
  411a0e:	dec    eax
  411a0f:	enter  0x21a7,0x5a
  411a13:	out    dx,eax
  411a14:	cdq    
  411a15:	scas   eax,DWORD PTR es:[edi]
  411a16:	add    al,0xd5
  411a19:	ja     0x411a1d
  411a1b:	dec    edi
  411a1c:	sbb    al,0x5
  411a1e:	sub    al,0x51
  411a20:	rcl    BYTE PTR [edi+0x5b579761],0xde
  411a27:	test   BYTE PTR [edi-0x1c2c4763],0x45
  411a2e:	xchg   esp,eax
  411a2f:	xor    edi,DWORD PTR [eax]
  411a31:	xchg   BYTE PTR [eax],al
  411a33:	dec    edi
  411a34:	ds pop edx
  411a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a37:	icebp  
  411a38:	dec    ebp
  411a39:	sbb    eax,0xc2cd7010
  411a3e:	jle    0x4119cb
  411a40:	mov    ss,WORD PTR [ebx+0x1b46f0a4]
  411a46:	jne    0x411a1a
  411a48:	rcl    BYTE PTR [eax+0x5f3e9caf],1
  411a4e:	mov    eax,0x909c0833
  411a53:	push   0xb231838c
  411a58:	rol    DWORD PTR [esi-0x330204d5],0x47
  411a5f:	std    
  411a60:	sbb    DWORD PTR [edi+edi*8],ebx
  411a63:	fistp  DWORD PTR [ecx+0x4c]
  411a66:	push   esi
  411a67:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a69:	mov    al,ds:0x96d8597c
  411a6e:	mov    BYTE PTR [esi-0x341031f9],bl
  411a74:	nop
  411a75:	sbb    DWORD PTR [ebp-0x12],esp
  411a78:	jecxz  0x411ac5
  411a7a:	les    edi,FWORD PTR [esi+0x77]
  411a7d:	dec    eax
  411a7e:	loop   0x411ab9
  411a80:	jae    0x411a91
  411a82:	dec    esp
  411a83:	adc    esi,esi
  411a85:	sub    al,BYTE PTR [esi]
  411a87:	imul   esp,DWORD PTR cs:[esi-0x78],0x59
  411a8c:	js     0x411a81
  411a8e:	nop
  411a8f:	xor    al,0x2c
  411a91:	out    0xe8,al
  411a93:	sbb    al,0xa
  411a95:	add    BYTE PTR [eax+0x1b],dh
  411a98:	dec    esp
  411a99:	popa   
  411a9a:	or     DWORD PTR [eax+0x49f4decf],esp
  411aa0:	add    DWORD PTR [eax],ebx
  411aa2:	pop    es
  411aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa4:	mov    edi,0xddb38eb8
  411aa9:	ins    BYTE PTR es:[edi],dx
  411aaa:	shl    DWORD PTR [esi],cl
  411aac:	nop
  411aad:	(bad)  
  411aae:	sbb    ebp,DWORD PTR [edi+0x5af5779d]
  411ab4:	mov    dl,0x15
  411ab6:	lea    ebp,[edi]
  411ab8:	push   esp
  411ab9:	jge    0x411b28
  411abb:	mov    fs:0xa9d26d31,al
  411ac1:	pop    esi
  411ac2:	adc    al,0xb8
  411ac4:	fistp  QWORD PTR [eax-0x12]
  411ac7:	repnz xchg ebx,eax
  411ac9:	ror    DWORD PTR [ebp+0x184046c7],0x1a
  411ad0:	inc    esp
  411ad1:	fld    DWORD PTR [ebx-0x6629fb85]
  411ad7:	inc    ebx
  411ad8:	xor    BYTE PTR [ebp+0xf16af23],bl
  411ade:	hlt    
  411adf:	cmp    al,0xaf
  411ae1:	mov    bh,0x2c
  411ae3:	add    DWORD PTR [edi-0x5c844425],ecx
  411ae9:	mov    dh,0x33
  411aeb:	leave  
  411aec:	xor    eax,0xc8a24122
  411af1:	and    al,0x30
  411af3:	les    esi,FWORD PTR [ebx]
  411af5:	(bad)  
  411af6:	and    eax,0x4440eb89
  411afb:	(bad)  
  411afc:	aas    
  411afd:	mov    BYTE PTR [ebp-0x75],dh
  411b00:	jae    0x411b19
  411b02:	sbb    al,0xf1
  411b04:	or     eax,0x8307e40d
  411b09:	imul   esi,DWORD PTR [esi+0x61],0x2a073f55
  411b10:	xchg   ebp,eax
  411b11:	and    DWORD PTR [ebx],ecx
  411b13:	test   eax,0x6127e876
  411b19:	adc    edi,DWORD PTR [edx]
  411b1b:	xchg   edx,eax
  411b1c:	xor    al,bh
  411b1e:	dec    ebp
  411b1f:	mov    esi,0x2d2352b1
  411b24:	rcl    ebx,1
  411b26:	cmp    esi,ebx
  411b28:	adc    ebp,DWORD PTR [edx-0x4e]
  411b2b:	jno    0x411b29
  411b2d:	sbb    al,0x74
  411b2f:	mov    ebx,0x8673854c
  411b34:	sbb    BYTE PTR ds:0x4b61abc,dh
  411b3a:	repz enter 0x9bff,0xb5
  411b3f:	sub    al,0x7c
  411b41:	jmp    0x411b0a
  411b43:	fidiv  WORD PTR [edi+0x64c6e776]
  411b49:	push   esp
  411b4a:	mov    eax,0xb386c14
  411b4f:	in     al,0xed
  411b51:	xor    bl,BYTE PTR [esi-0x10a980f1]
  411b57:	xor    ebx,DWORD PTR [edx]
  411b59:	shl    BYTE PTR es:[esi-0x617a9218],1
  411b60:	fadd   QWORD PTR [ebp+ebp*8-0x16b63dff]
  411b67:	adc    ecx,ebp
  411b69:	data16 out 0x0,al
  411b6c:	inc    ecx
  411b6d:	pushf  
  411b6e:	jbe    0x411b0d
  411b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b71:	push   ebp
  411b72:	fwait
  411b73:	xchg   ecx,eax
  411b74:	(bad)  
  411b75:	loopne 0x411bef
  411b77:	jne    0x411b17
  411b79:	mov    WORD PTR [ecx+ecx*8+0xe],gs
  411b7d:	call   0x8ec18a6b
  411b82:	test   eax,0x9dec3291
  411b87:	sti    
  411b88:	xor    BYTE PTR [edx+0x7c952d64],ah
  411b8e:	jae    0x411b8a
  411b90:	inc    ebp
  411b91:	cmp    esi,DWORD PTR [eax+0x54]
  411b94:	out    dx,eax
  411b95:	or     edi,DWORD PTR [ebx]
  411b97:	loop   0x411b86
  411b99:	push   cs
  411b9a:	sti    
  411b9b:	hlt    
  411b9c:	mov    esp,0x83f669ed
  411ba1:	dec    ebx
  411ba2:	push   cs
  411ba3:	jne    0x411bcc
  411ba5:	jge    0x411b82
  411ba7:	jl     0x411baf
  411ba9:	arpl   WORD PTR [esi],ax
  411bab:	jp     0x411bc4
  411bad:	pop    ds
  411bae:	retf   0x3bd6
  411bb1:	div    ebp
  411bb3:	daa    
  411bb4:	test   al,0xc5
  411bb6:	(bad)  
  411bb7:	fsub   DWORD PTR [edx-0x4]
  411bba:	scas   al,BYTE PTR es:[edi]
  411bbb:	shr    BYTE PTR [esi+0x39b58bb7],1
  411bc1:	imul   ebp,DWORD PTR [edx-0x5e],0x30
  411bc5:	jmp    0x411c0b
  411bc7:	sar    ah,1
  411bc9:	outs   dx,DWORD PTR ds:[esi]
  411bca:	cmc    
  411bcb:	fistp  WORD PTR [eax]
  411bcd:	jnp    0x411ba3
  411bcf:	dec    eax
  411bd0:	call   FWORD PTR [eax+eiz*2-0x3392cd1c]
  411bd7:	in     al,0xa2
  411bd9:	pushf  
  411bda:	stos   DWORD PTR es:[edi],eax
  411bdb:	(bad)  
  411bdc:	pop    ds
  411bdd:	into   
  411bde:	cli    
  411bdf:	cmp    dh,BYTE PTR [eax-0x5b]
  411be2:	dec    ebx
  411be3:	sbb    eax,0x307234cb
  411be8:	dec    eax
  411be9:	pop    eax
  411bea:	imul   ecx,ebp,0x85c6ccde
  411bf0:	sub    BYTE PTR [eax],cl
  411bf2:	nop
  411bf3:	repz (bad) 
  411bf5:	mov    ch,0x5a
  411bf7:	xor    edi,DWORD PTR [ecx+0x1]
  411bfa:	aaa    
  411bfb:	sub    eax,0xfb481e76
  411c00:	mov    edx,0x650d3829
  411c05:	das    
  411c06:	ins    BYTE PTR es:[edi],dx
  411c07:	and    ch,BYTE PTR [ebp-0x6c]
  411c0a:	outs   dx,DWORD PTR ds:[esi]
  411c0b:	jp     0x411c0b
  411c0d:	fiadd  DWORD PTR [esp+ecx*2]
  411c10:	xor    DWORD PTR [edi],esp
  411c12:	add    eax,0x481b5819
  411c17:	(bad)  
  411c18:	gs jl  0x411c11
  411c1b:	sub    al,0x82
  411c1d:	(bad)  
  411c1e:	push   esi
  411c1f:	sub    DWORD PTR [edx-0x19550d00],0x41fc11cd
  411c29:	pop    ecx
  411c2a:	xor    eax,0x442e34bc
  411c2f:	cdq    
  411c30:	ss pop eax
  411c32:	and    bl,BYTE PTR [esp+esi*1-0x52]
  411c36:	mov    ah,0x93
  411c38:	neg    DWORD PTR [edx+0x3f]
  411c3b:	dec    eax
  411c3c:	mov    ecx,0x6d0e0231
  411c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c42:	mov    dl,0xc2
  411c44:	adc    ebp,DWORD PTR [esi+0x1a7cdf6f]
  411c4a:	cmp    al,0x1b
  411c4d:	sar    BYTE PTR [eax-0x11],cl
  411c50:	sub    al,0xd6
  411c52:	gs pushw ss
  411c55:	pop    esi
  411c56:	arpl   WORD PTR [ecx+ebx*2+0x41],dx
  411c5a:	add    dl,ch
  411c5c:	not    ah
  411c5e:	and    bl,BYTE PTR [edi+ecx*1]
  411c61:	mov    ds:0x7b149b55,eax
  411c66:	mov    al,BYTE PTR [edi-0x653ce52]
  411c6c:	out    dx,al
  411c6d:	(bad)  
  411c6e:	jae    0x411c3e
  411c70:	add    eax,0x9a9b063e
  411c75:	pop    esi
  411c76:	lds    eax,FWORD PTR [edi-0x3]
  411c79:	mov    DWORD PTR [eax+edx*2+0x2d],ebp
  411c7d:	jl     0x411c6a
  411c7f:	inc    ebp
  411c80:	aam    0x6b
  411c82:	je     0x411ccb
  411c84:	and    ah,BYTE PTR [ebx+ebp*2-0x2d2b48ea]
  411c8b:	leave  
  411c8c:	aaa    
  411c8d:	fstp   TBYTE PTR [eax]
  411c8f:	dec    eax
  411c90:	dec    esi
  411c91:	int3   
  411c92:	jnp    0x411ca4
  411c94:	xchg   esi,eax
  411c95:	jne    0x411c50
  411c97:	push   ebp
  411c98:	test   eax,0x81efcd1b
  411c9d:	hlt    
  411c9e:	aas    
  411c9f:	or     edi,DWORD PTR [ebx]
  411ca1:	mov    eax,0x30ffcc58
  411ca6:	sbb    BYTE PTR [esi+0x6],cl
  411ca9:	jnp    0x411d0e
  411cab:	fcomip st,st(0)
  411cad:	jp     0x411d2b
  411caf:	aad    0x7d
  411cb1:	ret    
  411cb2:	leave  
  411cb3:	push   0x5641804a
  411cb8:	mov    ebp,0xf906ef84
  411cbd:	cmc    
  411cbe:	cwde   
  411cbf:	dec    eax
  411cc0:	pop    ebp
  411cc1:	scas   al,BYTE PTR es:[edi]
  411cc2:	jbe    0x411ccb
  411cc4:	xchg   esi,eax
  411cc5:	test   eax,0x3437bcdf
  411cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ccb:	nop
  411ccc:	pop    edx
  411ccd:	arpl   WORD PTR [eax-0x4f15b55e],di
  411cd3:	xchg   bl,bl
  411cd5:	test   ch,bl
  411cd7:	pop    ss
  411cd8:	mov    eax,0xeb4183ea
  411cdd:	lods   eax,DWORD PTR fs:[esi]
  411cdf:	out    dx,eax
  411ce0:	call   0x9e5a8280
  411ce5:	retf   0x1dd4
  411ce8:	pop    ecx
  411ce9:	mov    esp,0x1a0fba29
  411cee:	cmp    BYTE PTR [ebx+0x69],ah
  411cf1:	outs   dx,BYTE PTR ds:[esi]
  411cf2:	repz mov ah,0x8d
  411cf5:	mov    ch,0x2e
  411cf7:	test   al,0x82
  411cf9:	mov    ebx,0xf4ecf5ad
  411cfe:	inc    edi
  411cff:	aad    0x2b
  411d01:	cwde   
  411d02:	jle    0x411cc1
  411d04:	jmp    0x411cef
  411d06:	xlat   BYTE PTR ds:[ebx]
  411d07:	push   es
  411d08:	add    al,0x69
  411d0a:	jbe    0x411cd6
  411d0c:	dec    ebx
  411d0d:	push   ebx
  411d0e:	mov    bl,0xaf
  411d10:	jmp    0xb1e6f593
  411d15:	add    DWORD PTR [ebx+edi*4+0x71849183],esp
  411d1c:	jo     0x411cf9
  411d1e:	aaa    
  411d1f:	ins    BYTE PTR es:[edi],dx
  411d20:	leave  
  411d21:	cmp    DWORD PTR [ebp-0x16c1d107],ebx
  411d27:	stos   DWORD PTR es:[edi],eax
  411d28:	outs   dx,BYTE PTR gs:[esi]
  411d2a:	fist   DWORD PTR [edi-0x4342a838]
  411d31:	xor    eax,0x936ca88a
  411d36:	addr16 jg 0x411d55
  411d39:	dec    eax
  411d3a:	js     0x411da8
  411d3c:	bound  ebp,QWORD PTR [ebp-0x714358e1]
  411d42:	frstor ds:0x1277d0a4
  411d48:	and    BYTE PTR [ecx],0x6c
  411d4b:	add    BYTE PTR [eax-0x40],bl
  411d4e:	scas   eax,DWORD PTR es:[edi]
  411d4f:	repnz mov ah,BYTE PTR [ebp-0x57d51c0e]
  411d56:	lea    edi,[eax-0x30cc70f4]
  411d5c:	(bad)  
  411d5d:	mov    al,0xff
  411d5f:	xchg   ecx,eax
  411d60:	test   eax,0xa0fc0cf6
  411d65:	int3   
  411d66:	lahf   
  411d67:	mov    ds:0x6fd84fb1,al
  411d6c:	cmp    al,0xbd
  411d6e:	inc    esp
  411d6f:	in     eax,0xba
  411d71:	jns    0x411dbb
  411d73:	pop    edx
  411d74:	pop    edx
  411d75:	bound  edi,QWORD PTR [eax]
  411d77:	sub    eax,0xe8200dd7
  411d7c:	push   ebp
  411d7d:	nop
  411d7e:	ret    0xb0df
  411d81:	sbb    BYTE PTR [ebp+0xe],dl
  411d84:	adc    BYTE PTR [ecx-0x1],cl
  411d87:	aas    
  411d88:	cwde   
  411d89:	mov    edx,0xae27f570
  411d8e:	test   BYTE PTR [ebx-0x1776cc63],bl
  411d94:	mov    edx,0x71ce77c6
  411d99:	(bad)  [ebp-0xa28d1b9]
  411d9f:	pushf  
  411da0:	dec    edx
  411da1:	mov    ebx,0xca3fd8d
  411da6:	jle    0x411db3
  411da8:	hlt    
  411da9:	icebp  
  411daa:	daa    
  411dab:	xor    DWORD PTR [ecx],esi
  411dad:	jae    0x411d6b
  411daf:	adc    al,0x4e
  411db1:	and    BYTE PTR [ecx+0x1f],dl
  411db4:	xor    BYTE PTR [esi],ch
  411db6:	push   ds
  411db7:	xor    DWORD PTR [edx-0x14376573],edx
  411dbd:	fisubr WORD PTR fs:[edx]
  411dc0:	hlt    
  411dc1:	xchg   ebx,eax
  411dc2:	repnz test BYTE PTR [esi],al
  411dc5:	sbb    ah,dl
  411dc7:	mov    ebx,0xa6c58ae8
  411dcc:	mov    ebp,0x1c566795
  411dd1:	and    eax,0x6660d92a
  411dd6:	bound  esp,QWORD PTR [ebx-0x10]
  411dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dda:	ret    
  411ddb:	out    dx,al
  411ddc:	call   0x8fd43f32
  411de1:	scas   al,BYTE PTR es:[edi]
  411de2:	dec    ecx
  411de3:	ret    
  411de4:	ins    DWORD PTR es:[edi],dx
  411de5:	bound  edx,QWORD PTR [ecx]
  411de7:	nop
  411de8:	(bad)  
  411de9:	repz dec ebp
  411deb:	mov    WORD PTR [ecx+0x4],?
  411dee:	xchg   DWORD PTR [ecx-0xa],ebx
  411df1:	inc    esi
  411df2:	icebp  
  411df3:	sbb    eax,DWORD PTR [esp+ebp*8+0x28344ce4]
  411dfa:	stos   BYTE PTR es:[edi],al
  411dfb:	rcr    DWORD PTR [ecx-0x3488ca22],cl
  411e01:	xor    cl,BYTE PTR [ebx]
  411e03:	stc    
  411e04:	test   cl,ah
  411e06:	aaa    
  411e07:	sub    ebx,DWORD PTR [ebx-0x59]
  411e0a:	or     DWORD PTR [ecx],edx
  411e0c:	(bad)  
  411e0d:	jne    0x411def
  411e0f:	jbe    0x411e7d
  411e11:	stos   DWORD PTR es:[edi],eax
  411e12:	retf   
  411e13:	data16 aas 
  411e15:	repnz mov ebx,0xaf4ad87b
  411e1b:	int3   
  411e1c:	push   ebp
  411e1d:	xor    DWORD PTR [esi+0x732da422],ebx
  411e23:	pop    edi
  411e24:	add    BYTE PTR [edx],bl
  411e26:	stc    
  411e27:	dec    ebx
  411e28:	mov    bh,0x21
  411e2a:	pop    edx
  411e2b:	jmp    FWORD PTR [edi-0x25e18607]
  411e31:	sbb    DWORD PTR [eax],esp
  411e33:	popa   
  411e34:	xchg   ecx,eax
  411e35:	dec    ebx
  411e36:	add    eax,0x265bc40d
  411e3b:	loope  0x411eb4
  411e3d:	ins    DWORD PTR es:[edi],dx
  411e3e:	adc    eax,0x82e31015
  411e43:	mov    esp,0xf53fe54
  411e48:	lods   al,BYTE PTR ds:[esi]
  411e49:	mov    ebp,0x38b25000
  411e4e:	push   0x5d
  411e50:	aam    0xf7
  411e52:	push   0xf6590f25
  411e57:	sub    al,0xe2
  411e59:	shl    DWORD PTR cs:[ebp+0x22],1
  411e5d:	push   0xffffff88
  411e5f:	or     al,cl
  411e61:	push   ecx
  411e62:	lock push ebx
  411e64:	and    BYTE PTR [edi-0x7d],0xca
  411e68:	in     al,dx
  411e69:	sub    al,0xa2
  411e6b:	push   ebx
  411e6c:	ja     0x411e28
  411e6e:	sbb    DWORD PTR [ebx],edx
  411e70:	shl    BYTE PTR [ebx-0x6a],1
  411e73:	frstor [ebx+0x403e89d7]
  411e79:	sub    DWORD PTR [ebx],ebx
  411e7b:	jge    0x411eb3
  411e7d:	pop    edx
  411e7e:	es jl  0x411e73
  411e81:	xchg   esp,eax
  411e82:	iret   
  411e83:	ret    0xaa06
  411e86:	es inc edx
  411e88:	push   ebp
  411e89:	mov    bl,0xec
  411e8b:	int    0xe8
  411e8d:	lds    edx,FWORD PTR [edi-0x22]
  411e90:	ret    0x7a3e
  411e93:	stos   DWORD PTR es:[edi],eax
  411e94:	outs   dx,BYTE PTR ds:[esi]
  411e95:	pop    ds
  411e96:	xor    eax,0x5b018f87
  411e9b:	mov    eax,ds:0xf8e13121
  411ea0:	out    0xcf,al
  411ea2:	mov    cl,0x6
  411ea4:	sbb    DWORD PTR [edx+0x1e1a4f07],ebx
  411eaa:	test   eax,0x21eb9ad8
  411eaf:	add    bh,BYTE PTR [ebx-0x3]
  411eb2:	(bad)  
  411eb3:	pop    edi
  411eb4:	xlat   BYTE PTR ds:[ebx]
  411eb5:	scas   eax,DWORD PTR es:[edi]
  411eb6:	jle    0x411eeb
  411eb8:	xor    al,0x9b
  411eba:	ret    
  411ebb:	mov    ds:0x7a58870b,eax
  411ec0:	fisub  DWORD PTR [edx-0x25]
  411ec3:	ins    BYTE PTR es:[edi],dx
  411ec4:	addr16 (bad) 
  411ec6:	mov    ds:0x4bb2bd3b,al
  411ecb:	out    0xf,al
  411ecd:	xchg   edi,eax
  411ece:	retf   0x9806
  411ed1:	or     cl,BYTE PTR [edx+0x68107c8c]
  411ed7:	les    ebp,FWORD PTR [edx-0xd]
  411eda:	jo     0x411e96
  411edc:	into   
  411edd:	inc    esp
  411ede:	stos   DWORD PTR es:[edi],eax
  411edf:	adc    DWORD PTR [ebp-0x309303b4],esp
  411ee5:	int    0x5
  411ee7:	mov    al,ds:0xb66f4e52
  411eec:	jge    0x411ec2
  411eee:	jmp    0x2568:0xc98e0d63
  411ef5:	loope  0x411f04
  411ef7:	je     0x411ee8
  411ef9:	xor    DWORD PTR [edi+0x6b600bbb],esp
  411eff:	clc    
  411f00:	out    0xfa,eax
  411f02:	xor    eax,0x29766f31
  411f07:	aam    0x8e
  411f09:	jno    0x411eba
  411f0b:	retf   
  411f0c:	jecxz  0x411f6c
  411f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0f:	dec    esp
  411f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f11:	stc    
  411f12:	test   eax,0xc3328d08
  411f17:	pop    ecx
  411f18:	cmp    BYTE PTR [ebp-0x6a],ah
  411f1b:	mov    edi,DWORD PTR [esi-0x4411c69a]
  411f21:	xchg   ebx,eax
  411f23:	loope  0x411f43
  411f25:	(bad)  
  411f26:	aas    
  411f27:	fidiv  DWORD PTR [esi]
  411f29:	int    0xe2
  411f2b:	stos   BYTE PTR es:[edi],al
  411f2c:	loopne 0x411ed5
  411f2e:	push   esp
  411f2f:	sub    ebx,ecx
  411f31:	dec    edi
  411f32:	sbb    ebx,ecx
  411f34:	push   ebp
  411f35:	or     eax,0x6e8fac8a
  411f3a:	push   edi
  411f3b:	xor    eax,0x1b40ba69
  411f40:	loope  0x411f93
  411f42:	test   BYTE PTR [esp+edi*4-0xffda3cd],bh
  411f49:	sbb    ebx,DWORD PTR [ecx]
  411f4b:	test   BYTE PTR [eax],0xc1
  411f4e:	rep lods eax,DWORD PTR ds:[esi]
  411f50:	sbb    al,0x98
  411f52:	add    cl,BYTE PTR ds:0x4c62d40c
  411f58:	div    eax
  411f5a:	push   ds
  411f5b:	inc    ebx
  411f5c:	sbb    BYTE PTR [eax+esi*1-0x19],dl
  411f60:	addr16 mov ah,0xee
  411f63:	add    edx,DWORD PTR [ebx-0x293bbfcb]
  411f69:	mov    cl,0xf4
  411f6b:	mov    ch,0x91
  411f6d:	mov    al,0xcf
  411f6f:	or     ebp,0xffffffca
  411f72:	call   0x87f5:0x3fb59ff2
  411f79:	cmp    cl,BYTE PTR [edx-0x1c57826d]
  411f7f:	sbb    DWORD PTR [ebx-0x44cde0eb],ebx
  411f85:	sbb    edx,DWORD PTR [ebp-0x6a]
  411f88:	xchg   ebp,eax
  411f89:	push   ss
  411f8a:	mov    bh,0x15
  411f8c:	aas    
  411f8d:	js     0x411fdb
  411f8f:	pop    es
  411f90:	lock and DWORD PTR [ecx+0x20e17a8b],ebp
  411f97:	push   edi
  411f98:	cmp    DWORD PTR [esi],esp
  411f9a:	jbe    0x411fea
  411f9c:	std    
  411f9d:	dec    ecx
  411f9e:	push   0x60
  411fa0:	mov    ds:0x5d0f7c6c,al
  411fa5:	push   ecx
  411fa6:	push   es
  411fa7:	push   0x28
  411fa9:	inc    ecx
  411faa:	push   ss
  411fab:	iret   
  411fac:	mov    dh,0x49
  411fae:	sbb    ah,BYTE PTR [ebx*1-0xbd9b7f]
  411fb5:	mov    dh,bl
  411fb7:	(bad)  
  411fb8:	std    
  411fb9:	outs   dx,BYTE PTR ds:[esi]
  411fba:	inc    esi
  411fbb:	and    eax,ebp
  411fbd:	cmp    bl,bl
  411fbf:	xor    DWORD PTR [ecx],ebp
  411fc1:	(bad)  
  411fc2:	jmp    0x1a311be
  411fc7:	jg     0x411fee
  411fc9:	fld    QWORD PTR [ebx+0x2eb4fadb]
  411fcf:	pushf  
  411fd0:	mov    cl,0xf1
  411fd2:	stos   DWORD PTR es:[edi],eax
  411fd3:	cld    
  411fd4:	sbb    cl,BYTE PTR [esi-0x10]
  411fd7:	ins    BYTE PTR es:[edi],dx
  411fd8:	and    DWORD PTR [ebx-0x73],0xffffffe9
  411fdc:	jl     0x411f88
  411fde:	inc    ebx
  411fdf:	fild   QWORD PTR [esi+0x20]
  411fe2:	inc    esi
  411fe3:	mov    esp,0xcb471396
  411fe8:	xchg   bh,ah
  411fea:	sbb    BYTE PTR [edx-0x3d],cl
  411fed:	jle    0x412010
  411fef:	test   BYTE PTR [esi-0x44],al
  411ff2:	pushf  
  411ff3:	pusha  
  411ff4:	div    BYTE PTR [ebx]
  411ff6:	or     DWORD PTR [ebx+0x5e],ecx
  411ff9:	pop    edi
  411ffa:	call   0x4ac8:0x61cee887
  412001:	in     al,0xc0
  412003:	push   esp
  412004:	cmp    esp,ebx
  412006:	not    BYTE PTR [edi]
  412008:	add    edx,DWORD PTR [ebp+ecx*1-0x3543eb5e]
  41200f:	outs   dx,DWORD PTR ds:[esi]
  412010:	retf   
  412011:	mov    ebx,0xdbc47df6
  412016:	xor    DWORD PTR [eax-0x43],edi
  412019:	jo     0x41208f
  41201b:	mov    edx,DWORD PTR [esi+0x72906f70]
  412021:	and    bl,bh
  412023:	mov    ah,0xc5
  412025:	inc    edi
  412026:	mov    al,0x35
  412028:	adc    dl,BYTE PTR [ebx]
  41202a:	ret    0xf98a
  41202d:	xor    ecx,ebp
  41202f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412030:	or     DWORD PTR [ecx+ecx*2],edx
  412033:	add    dl,dl
  412035:	dec    esp
  412036:	daa    
  412037:	fild   QWORD PTR [eax]
  412039:	aas    
  41203a:	jg     0x4120b1
  41203c:	scas   eax,DWORD PTR es:[edi]
  41203d:	mov    ds:0x4e669ff1,al
  412042:	repz jae 0x41204d
  412045:	(bad)  
  412046:	(bad)  [edx-0x17]
  412049:	(bad)  
  41204a:	out    dx,al
  41204b:	sub    esi,ecx
  41204d:	test   DWORD PTR [ecx+0x5e],esi
  412050:	adc    DWORD PTR [edx+0x35],edx
  412053:	and    eax,0x1fad9dc4
  412058:	dec    eax
  412059:	sub    edx,esp
  41205b:	cmp    ch,BYTE PTR [ebx-0x4df3a85]
  412061:	sbb    DWORD PTR [edx-0x1555b5ab],edx
  412067:	addr16 cs call 0x3fe1d05a
  41206e:	or     bh,BYTE PTR [esi+0x78]
  412071:	lods   al,BYTE PTR ds:[esi]
  412072:	imul   edi,DWORD PTR [eax+ecx*1-0x25d014bc],0xb2157b83
  41207d:	nop
  41207e:	fistp  WORD PTR [ebp+0x5fd1d226]
  412084:	das    
  412085:	mov    ecx,0x25826032
  41208a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41208b:	cmc    
  41208c:	jne    0x41202d
  41208e:	addr16 hlt 
  412090:	and    bh,BYTE PTR [eax]
  412092:	dec    DWORD PTR [edx+0x3ba465d]
  412098:	out    0x62,eax
  41209a:	or     bh,cl
  41209c:	mov    al,ds:0xf4dd2c21
  4120a1:	test   DWORD PTR [esi-0xac9006e],esi
  4120a7:	xor    al,0xcf
  4120a9:	cs aad 0xd9
  4120ac:	ss pop es
  4120ae:	mov    eax,0x3489c0b
  4120b3:	pop    eax
  4120b4:	dec    ebp
  4120b5:	popf   
  4120b6:	sub    al,0xd8
  4120b8:	cmp    DWORD PTR [esp+ebp*2-0x67],edi
  4120bc:	add    edx,edx
  4120be:	mov    al,0xa9
  4120c0:	jns    0x412064
  4120c2:	xchg   ecx,eax
  4120c3:	or     eax,0xf4a4261a
  4120c8:	pop    ebp
  4120c9:	retf   0x734
  4120cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120cd:	(bad)  
  4120cf:	sbb    DWORD PTR ds:0xe5409563,edi
  4120d5:	jmp    0xa2b63ea4
  4120da:	jge    0x41210d
  4120dc:	adc    cl,ah
  4120de:	mov    ds,WORD PTR [edi-0x33903120]
  4120e4:	and    eax,0x28efb437
  4120e9:	dec    ebx
  4120ea:	or     DWORD PTR [eiz*1+0x3e234e0f],edi
  4120f1:	mov    al,0xa9
  4120f3:	imul   esp
  4120f5:	sub    al,0x50
  4120f7:	clc    
  4120f8:	out    dx,eax
  4120f9:	pop    ebx
  4120fa:	pop    es
  4120fb:	add    BYTE PTR fs:[ebx+0x182598e5],0x19
  412103:	pushf  
  412104:	cmp    DWORD PTR [ebp+0x34696100],0x56
  41210b:	sbb    BYTE PTR [ecx+0x4ec1ac96],bl
  412111:	in     al,dx
  412112:	int3   
  412113:	ins    DWORD PTR es:[edi],dx
  412114:	xor    DWORD PTR [edi],esp
  412116:	mov    BYTE PTR [ebx*1-0x1d89056a],al
  41211d:	into   
  41211e:	jmp    0x8dc0e750
  412123:	ss loope 0x412173
  412126:	call   0x13d:0x4f34a613
  41212d:	and    dl,BYTE PTR [ebx+0x79]
  412130:	cs pop eax
  412132:	retf   0xbc4c
  412135:	js     0x41210b
  412137:	adc    eax,esp
  412139:	pop    esi
  41213a:	hlt    
  41213b:	jo     0x412161
  41213d:	shr    DWORD PTR [esi-0x44],1
  412140:	out    0x17,eax
  412142:	int    0x48
  412144:	jge    0x4120d3
  412146:	push   ebp
  412147:	cdq    
  412148:	sub    ebp,ebx
  41214a:	jmp    esp
  41214c:	(bad)  
  41214d:	lea    edi,[eax]
  41214f:	or     BYTE PTR [eax+ecx*4-0x3c6862b9],bl
  412156:	pop    es
  412157:	or     bl,cl
  412159:	jecxz  0x412182
  41215b:	arpl   WORD PTR [edx+0x7412770e],ax
  412161:	hlt    
  412162:	mov    WORD PTR [ebp-0x24432552],?
  412168:	aam    0xf7
  41216a:	enter  0x34b2,0x8c
  41216e:	hlt    
  41216f:	lea    ebp,[edx+0x77ab770d]
  412175:	pop    esp
  412176:	pop    eax
  412177:	fdiv   st,st(5)
  412179:	pop    ds
  41217a:	ss jp  0x41212f
  41217d:	mov    ebx,DWORD PTR [edi-0x1bff3b58]
  412183:	xor    BYTE PTR [eax-0x4fec543e],dl
  412189:	xor    dl,dl
  41218b:	(bad)  
  41218c:	cdq    
  41218d:	adc    cl,BYTE PTR [esi-0x61fe1422]
  412193:	jge    0x4121aa
  412195:	mov    ds,WORD PTR [eax]
  412197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412198:	cli    
  412199:	les    esp,FWORD PTR [eax-0x455c275]
  41219f:	and    eax,0x3074a25e
  4121a4:	xchg   edi,eax
  4121a5:	int    0x7b
  4121a7:	jo     0x412186
  4121a9:	push   ss
  4121aa:	adc    eax,0x77d48235
  4121af:	mov    bh,0x6c
  4121b1:	push   ecx
  4121b2:	add    eax,0xe8e2e771
  4121b7:	dec    ebp
  4121b8:	(bad)  
  4121b9:	pop    edx
  4121ba:	jae    0x41216e
  4121bc:	popf   
  4121bd:	call   0x3ff1:0x30de0833
  4121c4:	les    esp,FWORD PTR [ebx-0x1b825358]
  4121ca:	pop    eax
  4121cb:	and    BYTE PTR [esi+0x15],cl
  4121ce:	cdq    
  4121cf:	sbb    eax,0xdf31f728
  4121d4:	mov    cs,WORD PTR [ecx]
  4121d6:	pop    ss
  4121d7:	bound  edx,QWORD PTR [eax]
  4121d9:	mov    ds:0x296c173f,al
  4121de:	sbb    eax,0x4b4b5f96
  4121e3:	mov    ecx,DWORD PTR [ebx-0x2c]
  4121e6:	push   edx
  4121e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e8:	stos   BYTE PTR es:[edi],al
  4121e9:	adc    al,0xf8
  4121eb:	pop    esp
  4121ec:	dec    ebp
  4121ed:	inc    esi
  4121ee:	(bad)  [ecx+0x4a]
  4121f1:	(bad)  
  4121f2:	mov    ebx,0x6551e19f
  4121f7:	push   cs
  4121f8:	fs jb  0x4121aa
  4121fb:	mov    edi,0x6d3d0bbe
  412200:	pop    es
  412201:	bnd jbe 0x22849bf7
  412208:	test   BYTE PTR [ebx+0x7a1e3629],bl
  41220e:	fsub   DWORD PTR [ecx]
  412210:	fst    st(0)
  412212:	xor    eax,0x98ae104e
  412217:	or     ebx,0xffffffe1
  41221a:	push   eax
  41221b:	leave  
  41221c:	cmc    
  41221d:	push   cs
  41221e:	call   0x33de:0xd0d9f5d8
  412225:	fs dec ecx
  412227:	mov    BYTE PTR [ecx-0x38],ch
  41222a:	jg     0x4121ac
  41222c:	in     al,dx
  41222d:	mov    edx,0x96da2c23
  412232:	dec    ebp
  412233:	sub    eax,0x2d7c8fc4
  412238:	and    DWORD PTR [ebp-0x67],esp
  41223b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41223c:	aam    0x69
  41223e:	in     al,0xfa
  412240:	nop
  412241:	fild   WORD PTR [edx+0x4e3cc5d7]
  412247:	test   eax,0x2cf04d82
  41224c:	int3   
  41224d:	out    0xf8,eax
  41224f:	and    esp,DWORD PTR [ecx-0x30]
  412252:	ds adc eax,0xc05b3df4
  412258:	cmc    
  412259:	aad    0xd0
  41225b:	mov    esp,0x8255baf8
  412260:	or     DWORD PTR [eax-0x5748942a],ebx
  412266:	xor    eax,0x766ead9d
  41226b:	mov    edi,DWORD PTR [ebp+ebx*4+0x76]
  41226f:	add    BYTE PTR [ecx],bh
  412271:	test   esi,0xf6a9f877
  412277:	daa    
  412278:	jo     0x412214
  41227a:	rcr    DWORD PTR [edx-0x50],cl
  41227d:	mov    ebx,0x7337c6f7
  412282:	cli    
  412283:	rol    DWORD PTR [eax+0x4e],cl
  412286:	lock jmp 0xebe8621b
  41228c:	addr16 push ds
  41228e:	dec    eax
  41228f:	or     BYTE PTR ss:[ecx],cl
  412292:	(bad)  
  412293:	iret   
  412294:	dec    ebp
  412295:	inc    esi
  412296:	call   0x51cb5013
  41229b:	xor    BYTE PTR [edi+0x2f],dh
  41229e:	sub    DWORD PTR [edi-0x51],eax
  4122a1:	(bad)  
  4122a3:	(bad)  
  4122a4:	idiv   DWORD PTR [ebx]
  4122a6:	call   0x17101
  4122ab:	js     0x4122eb
  4122ad:	cmp    ah,BYTE PTR [ebx-0x62]
  4122b0:	lods   eax,DWORD PTR ds:[esi]
  4122b1:	inc    edi
  4122b2:	push   eax
  4122b3:	push   ecx
  4122b4:	mov    al,ds:0x40c7ed31
  4122b9:	std    
  4122ba:	mov    ebx,0xc15f84bc
  4122bf:	fbld   TBYTE PTR [ebx-0x3827a162]
  4122c5:	mov    dh,0x31
  4122c7:	mov    edi,0xec8a194
  4122cc:	jne    0x412293
  4122ce:	mov    fs,WORD PTR ds:0xc255d627
  4122d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122d5:	xchg   ebx,eax
  4122d6:	pop    esi
  4122d7:	xor    dl,ah
  4122d9:	jnp    0x4122f8
  4122db:	jmp    0xbf1:0x136227ea
  4122e2:	pop    ds
  4122e3:	addr16 push 0xcbffcedc
  4122e9:	dec    ebx
  4122ea:	push   eax
  4122eb:	add    eax,0x294091ed
  4122f0:	and    al,al
  4122f2:	test   DWORD PTR [edi-0xd27596b],esp
  4122f8:	pop    esi
  4122f9:	and    BYTE PTR [ebx],ah
  4122fb:	ret    
  4122fc:	mov    bl,0x42
  4122fe:	(bad)
  412301:	jg     0x412288
  412303:	dec    esp
  412304:	jmp    0x9b77:0x6d526959
  41230b:	sub    BYTE PTR [ecx+edx*8-0x18ad6fbf],ch
  412312:	cs in  al,dx
  412314:	add    al,0xe2
  412316:	sub    al,0x6a
  412318:	in     al,0xd0
  41231a:	mov    ss,WORD PTR [eax+0x42bf4bac]
  412320:	(bad)  
  412321:	fisttp DWORD PTR [edx+0x5b8c0bd3]
  412327:	xchg   edx,eax
  412328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412329:	mov    BYTE PTR [ecx-0x33e1509],ch
  41232f:	xchg   esi,eax
  412330:	xchg   esp,eax
  412331:	or     BYTE PTR [ebx-0x3840c5de],cl
  412337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412338:	out    dx,eax
  412339:	xor    edx,esi
  41233b:	sbb    dl,BYTE PTR [ebx+0xc]
  41233e:	cmp    DWORD PTR [ecx-0x2a],esp
  412341:	mov    cl,0x3d
  412343:	test   dl,0x2
  412346:	adc    ch,BYTE PTR [ecx]
  412348:	mov    edi,0x264d21a0
  41234d:	adc    eax,DWORD PTR [edi-0x6cede313]
  412353:	sub    BYTE PTR [esi],0x6d
  412356:	mov    ah,0xc3
  412358:	call   0xb6bb991e
  41235d:	in     eax,0x74
  41235f:	(bad)  
  412360:	fsub   DWORD PTR [ebx]
  412362:	jg     0x41234d
  412364:	sub    esp,DWORD PTR [edx]
  412366:	cmp    edx,DWORD PTR [edx-0x29]
  412369:	pusha  
  41236a:	leave  
  41236b:	fldenv [esi+0x48]
  41236e:	into   
  41236f:	dec    esp
  412370:	adc    eax,0x24cace41
  412375:	mov    cl,0x6f
  412377:	imul   ebx,DWORD PTR cs:0xde1b1a44,0x62a2fee7
  412382:	(bad)  
  412383:	jecxz  0x41235b
  412385:	mov    al,0x4c
  412387:	xchg   edi,eax
  412388:	inc    esi
  412389:	int    0x69
  41238b:	cld    
  41238c:	test   eax,0x1029299b
  412391:	mov    ds:0xb61f631d,eax
  412396:	sbb    eax,0x436895bf
  41239b:	push   ebx
  41239c:	cmp    edx,DWORD PTR [ebp+0x78]
  41239f:	lds    eax,FWORD PTR ds:0xc0fc44b
  4123a5:	and    ebp,DWORD PTR [esi+0x60]
  4123a8:	mov    esp,0x1f2a2de8
  4123ad:	test   eax,0xf8fbee93
  4123b2:	jge    0x4123e9
  4123b4:	bound  esp,QWORD PTR [edx]
  4123b6:	fwait
  4123b7:	scas   al,BYTE PTR es:[edi]
  4123b8:	jae    0x412418
  4123ba:	xor    al,0x4b
  4123bc:	mov    ebp,0xda35b00e
  4123c1:	(bad)  
  4123c5:	xchg   esp,eax
  4123c6:	mov    edx,0x6c6e832e
  4123cb:	jo     0x412418
  4123cd:	inc    esi
  4123ce:	cmp    eax,0xfee33d74
  4123d3:	and    BYTE PTR [edi],0xf9
  4123d6:	or     BYTE PTR [edi-0x1e012ce8],dl
  4123dc:	mov    eax,0xa5451dcd
  4123e1:	icebp  
  4123e2:	scas   eax,DWORD PTR es:[edi]
  4123e3:	scas   al,BYTE PTR es:[edi]
  4123e4:	push   0x77
  4123e6:	and    ecx,DWORD PTR [ebx+0x75]
  4123e9:	outs   dx,BYTE PTR ds:[esi]
  4123ea:	adc    DWORD PTR [ecx],esp
  4123ec:	sub    al,0x44
  4123ee:	add    BYTE PTR [ebx],dh
  4123f0:	push   es
  4123f1:	loope  0x4123d1
  4123f3:	pextrw ecx,(bad),0xc5
  4123f5:	or     dh,cl
  4123f7:	jecxz  0x4123e1
  4123f9:	aad    0x62
  4123fb:	sar    bl,1
  4123fd:	icebp  
  4123fe:	push   edx
  4123ff:	xchg   ebp,eax
  412400:	es mov al,0xb3
  412403:	fs popa 
  412405:	and    al,0x9c
  412407:	call   0x4d526d10
  41240c:	cmp    BYTE PTR [edi],cl
  41240e:	lea    eax,[edx-0x5]
  412411:	push   cs
  412412:	cs pop esi
  412414:	jmp    0x9a99d83a
  412419:	jl     0x4123a4
  41241b:	daa    
  41241c:	push   esi
  41241d:	mov    bl,0x2a
  41241f:	mov    dl,0xd2
  412421:	sub    DWORD PTR [eax-0x6d017877],esp
  412427:	icebp  
  412428:	loope  0x412438
  41242a:	push   ebx
  41242b:	push   edx
  41242c:	repnz pop esp
  41242e:	fistp  WORD PTR ds:0x5fac40c9
  412434:	(bad)  [ebx-0x3fe0728b]
  41243a:	fild   WORD PTR [esp+ebp*8+0x62598884]
  412441:	ss push ebp
  412443:	mov    ebp,0x1a41a908
  412448:	shl    BYTE PTR [ecx],0x60
  41244b:	and    al,0x10
  41244d:	(bad)  
  41244e:	lods   eax,DWORD PTR ds:[esi]
  41244f:	jecxz  0x4124a8
  412451:	push   cs
  412452:	cmp    al,0xb3
  412454:	jmp    ebp
  412456:	stos   BYTE PTR es:[edi],al
  412457:	aad    0xa
  412459:	sub    BYTE PTR [eax],ch
  41245b:	mov    cl,0x97
  41245d:	push   es
  41245e:	and    BYTE PTR [eax],ah
  412460:	sbb    bl,BYTE PTR [edx+0x4a9a7f0e]
  412466:	ja     0x412484
  412468:	sub    ch,BYTE PTR [edi-0x20]
  41246b:	leave  
  41246c:	daa    
  41246d:	(bad)  
  41246e:	clc    
  41246f:	dec    edi
  412470:	es xor dl,bh
  412473:	xchg   esp,eax
  412474:	popf   
  412475:	inc    eax
  412476:	lds    esi,FWORD PTR [ecx]
  412478:	jle    0x4124c3
  41247a:	pop    ebx
  41247b:	adc    esp,DWORD PTR [edx-0x1a0dc534]
  412481:	dec    esp
  412482:	mov    ebp,0xd91072d9
  412487:	and    BYTE PTR [ebp+0x59],0xa7
  41248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41248c:	js     0x4124c8
  41248e:	loope  0x4124e2
  412490:	mov    WORD PTR [esi+0x2],cs
  412493:	rol    BYTE PTR [eax+0x15],0x79
  412497:	or     eax,DWORD PTR [edi-0x21]
  41249a:	addr16 (bad) 
  41249c:	out    dx,al
  41249d:	lods   eax,DWORD PTR ds:[esi]
  41249e:	sar    BYTE PTR [eax],1
  4124a0:	adc    DWORD PTR [edi-0x1e33440b],ebx
  4124a6:	lods   al,BYTE PTR ds:[esi]
  4124a7:	repnz sbb eax,0xa68914b2
  4124ad:	int    0x14
  4124af:	(bad)  
  4124b0:	mov    eax,ds:0x76d84b89
  4124b5:	push   eax
  4124b6:	or     eax,0xa6817629
  4124bb:	in     eax,0x31
  4124bd:	mov    ch,0x20
  4124bf:	xor    ebx,DWORD PTR [eax]
  4124c1:	int3   
  4124c2:	scas   eax,DWORD PTR es:[edi]
  4124c3:	push   cs
  4124c4:	icebp  
  4124c5:	add    eax,0xf909f854
  4124ca:	in     eax,dx
  4124cb:	imul   ebx,DWORD PTR [ecx+0x35f63815],0x8
  4124d2:	inc    esi
  4124d3:	jecxz  0x41254e
  4124d5:	mov    esp,DWORD PTR [bp+si-0x39]
  4124d9:	jb     0x412552
  4124db:	inc    esi
  4124dc:	ja     0x4124a2
  4124de:	out    0xf3,eax
  4124e0:	pop    ecx
  4124e1:	inc    edi
  4124e2:	loope  0x412467
  4124e4:	adc    eax,0x83d713c7
  4124e9:	fcom   QWORD PTR [ebx-0x6cb72a33]
  4124ef:	or     BYTE PTR [ecx-0x3c],ch
  4124f2:	sub    bh,BYTE PTR [edx]
  4124f4:	test   al,0x29
  4124f6:	xchg   BYTE PTR [edi],bh
  4124f8:	mov    ebx,0x59a56856
  4124fd:	imul   ah
  4124ff:	fistp  DWORD PTR [eax-0x21facdce]
  412505:	xchg   ebx,eax
  412506:	retf   0x5d5a
  412509:	mov    al,0xe5
  41250b:	jp     0x4124bf
  41250d:	dec    ecx
  41250e:	(bad)  
  41250f:	call   0x54ae:0xe2c0fc77
  412516:	adc    edi,DWORD PTR [ecx]
  412518:	xor    al,BYTE PTR [ebx-0x2b]
  41251b:	jle    0x412519
  41251d:	icebp  
  41251e:	clc    
  41251f:	cwde   
  412520:	aad    0x43
  412522:	sbb    BYTE PTR [eax],ah
  412524:	jno    0x412523
  412526:	xor    al,0x17
  412528:	(bad)
  41252c:	dec    edx
  41252d:	sti    
  41252e:	pop    edi
  41252f:	dec    eax
  412530:	xchg   esp,eax
  412531:	push   ebp
  412532:	push   cs
  412533:	lods   eax,DWORD PTR ds:[esi]
  412534:	imul   esp,DWORD PTR [edx-0x17],0xe54d928e
  41253b:	add    edi,ecx
  41253d:	cli    
  41253e:	out    0xdf,eax
  412540:	pop    edx
  412541:	xor    BYTE PTR ds:0x331fe927,0x43
  412548:	push   ds
  412549:	and    BYTE PTR [ebp-0x19],0x56
  41254d:	std    
  41254e:	sbb    BYTE PTR [ebp+0xd],0xa9
  412552:	dec    edi
  412553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412554:	xchg   edx,eax
  412555:	xor    dh,bh
  412557:	jle    0x4125b7
  412559:	and    ebx,ebx
  41255b:	shr    DWORD PTR [ecx],1
  41255d:	inc    DWORD PTR [ebp+0x35]
  412560:	shl    ah,cl
  412562:	adc    ebp,esi
  412564:	jns    0x4125c7
  412566:	xchg   ebx,eax
  412567:	mov    al,ds:0x2d5917c4
  41256c:	pop    ds
  41256d:	push   0xffffffe3
  41256f:	arpl   WORD PTR [edi],ax
  412571:	(bad)  
  412573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412574:	inc    ecx
  412575:	bound  edi,QWORD PTR [edx+0x63]
  412578:	aad    0x24
  41257a:	xor    dl,BYTE PTR [ecx]
  41257c:	cmp    al,BYTE PTR [edi+0x412a7b3f]
  412582:	mov    cl,0xdb
  412584:	rcl    DWORD PTR [eax-0x1b9e1bae],cl
  41258a:	sbb    bh,BYTE PTR [esi]
  41258c:	sahf   
  41258d:	ret    
  41258e:	push   edx
  41258f:	in     eax,dx
  412590:	call   0x30aa:0xd608edcb
  412597:	add    eax,0xa8653656
  41259c:	jb     0x412549
  41259e:	mov    eax,0x4ad6f22d
  4125a3:	mov    ds:0xdb6acdfb,eax
  4125a8:	xor    DWORD PTR [edi],ebp
  4125aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125ab:	xlat   BYTE PTR ds:[ebx]
  4125ac:	and    DWORD PTR [esp+esi*8-0x25],esp
  4125b0:	fs ins BYTE PTR es:[edi],dx
  4125b2:	mov    ah,BYTE PTR [ebx-0x53462d17]
  4125b8:	add    BYTE PTR [ecx+0x6d],cl
  4125bb:	pop    ebp
  4125bc:	or     al,0x7f
  4125be:	mov    dl,0xbb
  4125c0:	jmp    0x338d:0xcd283af4
  4125c7:	adc    al,0x37
  4125c9:	jb     0x41255e
  4125cb:	xchg   esp,eax
  4125cc:	dec    esp
  4125cd:	sbb    eax,0xff96108a
  4125d2:	mov    BYTE PTR [esi],dl
  4125d4:	cld    
  4125d5:	mov    ch,0x8c
  4125d7:	mov    DWORD PTR [esi+ebp*1],ebp
  4125da:	jmp    0x1e3:0x2b3da3ba
  4125e1:	mov    al,0x9f
  4125e3:	test   al,0x98
  4125e5:	std    
  4125e6:	cmp    BYTE PTR [ebx+0x2e],0x4e
  4125ea:	mov    edi,DWORD PTR [edi+0x2c]
  4125ed:	xor    eax,eax
  4125ef:	adc    BYTE PTR [ebx],ch
  4125f1:	sub    eax,0x7120d253
  4125f6:	pop    ebx
  4125f7:	mov    ch,0xd7
  4125f9:	pop    esp
  4125fa:	inc    ebp
  4125fb:	and    edx,ebp
  4125fd:	mov    edi,0x2ebaa1d6
  412602:	imul   edi,DWORD PTR [ecx],0xfffffff3
  412605:	jmp    0xb4243ff7
  41260a:	repnz pop eax
  41260c:	cmp    DWORD PTR ds:0x3d6d9538,ecx
  412612:	mov    WORD PTR [esi-0x61],?
  412615:	or     DWORD PTR [ebx+0x4],0xcba17845
  41261c:	mov    dh,0xac
  41261e:	ins    DWORD PTR es:[edi],dx
  41261f:	aad    0x56
  412621:	pop    esp
  412622:	pop    ss
  412623:	leave  
  412624:	mov    ecx,0xa77cf987
  412629:	fistp  QWORD PTR [esi]
  41262b:	cs inc ebx
  41262d:	je     0x412676
  41262f:	jmp    0xc0d8:0x3250a28b
  412636:	bound  edx,QWORD PTR [ecx]
  412638:	push   ebx
  412639:	js     0x4125d5
  41263b:	pushf  
  41263c:	test   BYTE PTR [ebx],dl
  41263e:	mov    eax,es:0xbe18820f
  412644:	jb     0x412632
  412646:	leave  
  412647:	test   al,0x9e
  412649:	mov    ah,0x54
  41264b:	gs int 0x46
  41264e:	add    eax,0x95958fa3
  412653:	stos   BYTE PTR es:[edi],al
  412654:	ins    DWORD PTR es:[edi],dx
  412655:	ins    DWORD PTR es:[edi],dx
  412656:	adc    dl,BYTE PTR ds:0x11fea460
  41265c:	mov    ds:0xd2d61ec0,al
  412661:	push   es
  412662:	dec    eax
  412663:	imul   edx,DWORD PTR ds:0xfba4a25c,0xffffffe1
  41266a:	leave  
  41266b:	add    eax,0x3477c29b
  412670:	push   0x69
  412672:	xor    al,0x5a
  412674:	or     edi,DWORD PTR [ecx]
  412676:	dec    edx
  412677:	add    eax,0xdc4240b7
  41267c:	and    ecx,0x38
  41267f:	pop    ecx
  412680:	add    edi,DWORD PTR [ebx+0x2df08f15]
  412686:	pusha  
  412687:	(bad)  
  412688:	aad    0x49
  41268a:	test   DWORD PTR [ebx+0x6af24f0b],ebx
  412690:	xor    cl,BYTE PTR [eax-0x37]
  412693:	sbb    al,0xc
  412695:	(bad)  
  412697:	cli    
  412698:	xor    ah,BYTE PTR [ecx+0x3]
  41269b:	push   eax
  41269c:	arpl   WORD PTR [esi],dx
  41269e:	aam    0xc6
  4126a0:	jmp    0x5ab9:0x49d11c9e
  4126a7:	sbb    eax,0x18c87959
  4126ac:	popa   
  4126ad:	mov    edx,0x45d8b1ef
  4126b2:	scas   al,BYTE PTR es:[edi]
  4126b3:	fidivr WORD PTR [eax]
  4126b5:	call   0x5865ec03
  4126ba:	xchg   ebp,eax
  4126bb:	cmp    dl,BYTE PTR [edi+0x5c]
  4126be:	cmp    cl,dl
  4126c0:	fisub  DWORD PTR [esi+ebp*8]
  4126c3:	push   ss
  4126c4:	retf   0x8b3
  4126c7:	addr16 dec esi
  4126c9:	les    esi,FWORD PTR ds:0xb73837c3
  4126cf:	(bad)  
  4126d1:	dec    edx
  4126d2:	cmp    esp,DWORD PTR [esi-0xb13f92c]
  4126d8:	add    ecx,DWORD PTR ds:0x547bc3b3
  4126de:	or     eax,0xdef83b44
  4126e3:	inc    ebp
  4126e4:	dec    esi
  4126e5:	ss es or ecx,edi
  4126e9:	fcom   QWORD PTR [edi+0x1818e5bb]
  4126ef:	imul   edi,DWORD PTR [edi-0x37955023],0x32
  4126f6:	dec    ebx
  4126f7:	lea    ebx,[ebp+eiz*2-0x19]
  4126fb:	jge    0x4126f0
  4126fd:	dec    edx
  4126fe:	(bad)  
  4126ff:	lock sti 
  412701:	xlat   BYTE PTR ds:[ebx]
  412702:	cmp    dh,0xf1
  412705:	xor    eax,0x3d4895b4
  41270a:	and    al,0x2
  41270c:	inc    edi
  41270d:	push   esi
  41270e:	leave  
  41270f:	add    esp,DWORD PTR [edi+0x6b]
  412712:	mov    bl,0xc8
  412714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412715:	ret    
  412716:	mov    eax,DWORD PTR [ecx-0x5b]
  412719:	jae    0x412758
  41271b:	mov    cl,0x25
  41271d:	lock (bad) 
  41271f:	pop    edx
  412720:	pop    edx
  412721:	iret   
  412722:	bsr    ebx,DWORD PTR [ecx]
  412725:	cwde   
  412726:	lock int3 
  412728:	push   esp
  412729:	out    dx,al
  41272a:	xchg   DWORD PTR [edx],ecx
  41272c:	popf   
  41272d:	sub    DWORD PTR [esi],ebp
  41272f:	xor    bl,dh
  412731:	dec    esp
  412732:	sub    cl,cl
  412734:	ins    DWORD PTR es:[edi],dx
  412735:	inc    edx
  412736:	adc    ebx,DWORD PTR [edx+esi*8]
  412739:	pop    edx
  41273a:	ret    0x2438
  41273d:	jno    0x41271f
  41273f:	xor    ebp,ebx
  412741:	push   0x371c6272
  412746:	ret    
  412747:	push   ecx
  412748:	enter  0xce7e,0x4e
  41274c:	mov    bl,0x9b
  41274e:	add    dh,dl
  412750:	xor    al,0xe9
  412752:	(bad)  
  412753:	into   
  412754:	xor    BYTE PTR [ebx+edi*4],ah
  412757:	adc    ebp,DWORD PTR [edi]
  412759:	xchg   esi,eax
  41275a:	mov    esp,0x4e49bb3f
  41275f:	je     0x41271c
  412761:	or     eax,0x926f273e
  412766:	rcr    cl,cl
  412768:	mov    esp,0x950caa9
  41276d:	pop    esi
  41276e:	mov    ds:0xe520e740,al
  412773:	add    ebx,0xfffffff5
  412776:	sub    bh,BYTE PTR ds:0xac5bb0cc
  41277c:	fs (bad) 
  41277f:	mov    al,0xe5
  412781:	add    DWORD PTR [edi],esi
  412783:	addr16 cld 
  412785:	jmp    0xe571:0xdf21bff2
  41278c:	addr16 std 
  41278e:	(bad)  
  41278f:	sbb    ebx,DWORD PTR [edi+0x22]
  412792:	std    
  412793:	stos   DWORD PTR es:[edi],eax
  412794:	enter  0xf0f6,0xd5
  412798:	ror    BYTE PTR [ecx+0x67],cl
  41279b:	outs   dx,BYTE PTR ds:[esi]
  41279c:	dec    eax
  41279d:	fnstenv [eax]
  41279f:	xchg   edx,eax
  4127a0:	cmp    ecx,DWORD PTR [ecx]
  4127a2:	dec    esp
  4127a3:	pop    es
  4127a4:	sbb    al,BYTE PTR [edx]
  4127a6:	pop    ds
  4127a7:	call   0xfd34:0xd746aba3
  4127ae:	mov    ah,0x9b
  4127b0:	mov    ds:0xb5dba831,al
  4127b5:	and    al,bh
  4127b7:	ds add al,0x21
  4127ba:	pop    edi
  4127bb:	push   cs
  4127bc:	sub    eax,0xebea6328
  4127c1:	inc    ebx
  4127c2:	test   dl,ah
  4127c4:	xchg   edx,eax
  4127c5:	xchg   ebp,eax
  4127c6:	sub    DWORD PTR [edx],edx
  4127c8:	pushf  
  4127c9:	(bad)  
  4127cb:	pop    eax
  4127cc:	jae    0x4127e7
  4127ce:	ins    DWORD PTR es:[edi],dx
  4127cf:	mov    WORD PTR cs:[esi+0x78],cs
  4127d3:	lods   al,BYTE PTR ds:[esi]
  4127d4:	pop    es
  4127d5:	fnop   
  4127d7:	sub    DWORD PTR [ecx+edx*4],0xffffffea
  4127db:	jecxz  0x412796
  4127dd:	ins    DWORD PTR es:[edi],dx
  4127de:	js     0x41278b
  4127e0:	cli    
  4127e1:	or     al,BYTE PTR [edx]
  4127e3:	jae    0x412844
  4127e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e6:	dec    ebp
  4127e7:	and    eax,0xccbb1ca5
  4127ec:	mov    edx,DWORD PTR [esi+0x780f0f7d]
  4127f2:	(bad)  
  4127f3:	fadd   QWORD PTR [esi]
  4127f5:	sbb    eax,0xd66c42a1
  4127fa:	(bad)  [eax]
  4127fc:	cwde   
  4127fd:	lea    ebx,[edi+0x4a68b194]
  412803:	lahf   
  412804:	xchg   esi,eax
  412805:	pop    esi
  412806:	xor    BYTE PTR [edi+edx*2+0x7fb9e0b6],0x1d
  41280e:	rcl    ebx,0xe5
  412811:	or     eax,0x8ed96b3
  412816:	sub    edx,ebp
  412818:	mov    al,ds:0x84918e4f
  41281d:	mov    al,ds:0x2173f386
  412822:	dec    ebp
  412823:	imul   edx,DWORD PTR [eax+eiz*1+0x6e77c0fc],0x50e90bb1
  41282e:	in     eax,0xea
  412830:	or     al,0xe4
  412832:	mov    edx,0x32950079
  412837:	pop    esp
  412838:	into   
  412839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283a:	mov    ch,0x7f
  41283c:	clc    
  41283d:	xchg   esi,eax
  41283e:	sbb    BYTE PTR [ebx+0x60b18664],dl
  412844:	lea    esi,[esi-0x78]
  412847:	mov    al,ds:0x4cf1ed36
  41284c:	cmp    bl,BYTE PTR [esi-0x41df6642]
  412852:	in     eax,0xab
  412854:	int3   
  412855:	jg     0x41287d
  412857:	outs   dx,BYTE PTR ds:[esi]
  412858:	xor    ch,cl
  41285a:	into   
  41285b:	out    dx,al
  41285c:	ret    0x3c8b
  41285f:	lfs    edi,FWORD PTR [eax-0xdc592d1]
  412866:	das    
  412867:	in     eax,0xc3
  412869:	add    esi,DWORD PTR [esi+0x16e2f9e1]
  41286f:	ud2    
  412871:	pop    es
  412872:	dec    edi
  412873:	sbb    ch,BYTE PTR [ebx]
  412875:	mov    ecx,0xbeef8f30
  41287a:	aam    0x5c
  41287c:	loope  0x412882
  41287e:	ret    
  41287f:	mov    al,0x67
  412881:	pop    edi
  412882:	xor    ebx,DWORD PTR [eax]
  412884:	lahf   
  412885:	or     dl,BYTE PTR ds:0x8c73aeb0
  41288b:	pop    ebx
  41288c:	pop    ds
  41288d:	ja     0x412828
  41288f:	add    eax,0x5e33a0b4
  412894:	(bad)  
  412895:	or     ch,BYTE PTR [esi]
  412897:	stc    
  412898:	fs das 
  41289a:	jmp    0x6251:0xae0f9ecb
  4128a1:	cmp    esi,DWORD PTR [ecx+0x5c6e535]
  4128a7:	(bad)  
  4128a8:	out    dx,al
  4128a9:	xor    dl,BYTE PTR [edi]
  4128ab:	dec    edx
  4128ac:	sbb    eax,0x74bdf1f2
  4128b1:	mov    eax,0xaf410ab3
  4128b6:	xchg   esp,eax
  4128b7:	stc    
  4128b8:	aad    0x47
  4128ba:	shr    BYTE PTR [ebp-0x8e2a841],0x5
  4128c1:	lahf   
  4128c2:	rol    DWORD PTR [eax+0xb645d72],0x30
  4128c9:	arpl   cx,cx
  4128cb:	jp     0x4128a3
  4128cd:	sahf   
  4128ce:	ret    0xc6c3
  4128d1:	(bad)  
  4128d2:	dec    edi
  4128d3:	push   edx
  4128d4:	pushf  
  4128d5:	fild   QWORD PTR [ebx+edx*1]
  4128d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128da:	loope  0x41290d
  4128dc:	sbb    eax,0x2d76a031
  4128e1:	in     eax,dx
  4128e2:	daa    
  4128e3:	sar    esp,cl
  4128e5:	xchg   edx,eax
  4128e6:	sbb    ebp,0x640cb727
  4128ec:	sbb    DWORD PTR [edi+edx*8+0x1cfd79f7],ecx
  4128f3:	dec    ebp
  4128f4:	and    BYTE PTR [edx+0x31adccee],dh
  4128fa:	and    DWORD PTR [ecx-0x62ced426],0x9b8f15b4
  412904:	jne    0x412952
  412906:	imul   edx,DWORD PTR [ecx-0x6b],0x772e670f
  41290d:	and    dl,al
  41290f:	es out dx,eax
  412911:	hlt    
  412912:	stc    
  412913:	ja     0x4128b2
  412915:	imul   ebp,DWORD PTR [eax+0x241ad6de]
  41291c:	or     bl,BYTE PTR [eax+0x6d907b64]
  412922:	xchg   DWORD PTR [edx+edx*4+0x1b],edi
  412926:	or     edi,DWORD PTR [edx]
  412928:	in     eax,dx
  412929:	dec    esp
  41292a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292b:	or     dh,dl
  41292d:	lds    ebx,FWORD PTR [esi]
  41292f:	int3   
  412930:	cmc    
  412931:	and    al,0x14
  412934:	and    al,0xaa
  412936:	aas    
  412937:	and    eax,DWORD PTR [ebx]
  412939:	add    ebp,DWORD PTR [esi-0x77]
  41293c:	clc    
  41293d:	fst    DWORD PTR [ecx+0x1b]
  412940:	dec    ebp
  412941:	pop    ebp
  412942:	test   eax,0x6fba9c0e
  412947:	cmp    eax,0x7f2c209b
  41294c:	cmp    DWORD PTR [edi+0x39cac399],ebp
  412952:	add    al,0x91
  412954:	xlat   BYTE PTR ds:[ebx]
  412955:	add    bh,BYTE PTR [eax+0x64949345]
  41295b:	cs sahf 
  41295d:	and    eax,0xd37a76d2
  412962:	hlt    
  412963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412964:	mov    DWORD PTR [eax+ebp*1],esi
  412967:	icebp  
  412968:	pop    ss
  412969:	xor    BYTE PTR ds:0xb6a1dc2f,0x2b
  412970:	mov    esi,0xc9533ad8
  412975:	jae    0x4129ef
  412977:	retw   
  412979:	sbb    DWORD PTR [ecx-0x34],ecx
  41297c:	test   DWORD PTR [edx],esi
  41297e:	mov    esi,0x50199f0
  412983:	ss out dx,eax
  412985:	out    dx,al
  412986:	inc    ebx
  412987:	fst    st(5)
  412989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41298a:	xchg   esp,eax
  41298b:	fbstp  TBYTE PTR [ecx+0x67]
  41298e:	push   eax
  41298f:	jmp    0x412982
  412991:	dec    ebp
  412992:	dec    edx
  412993:	jo     0x412968
  412995:	jmp    0xc1c8:0xa02744d8
  41299c:	in     al,0x9e
  41299e:	push   esp
  41299f:	xor    esp,DWORD PTR ds:0x84c6fb4d
  4129a5:	xchg   ebx,eax
  4129a6:	and    ebp,DWORD PTR ds:0x1db2f3d5
  4129ac:	out    dx,al
  4129ad:	aas    
  4129ae:	test   BYTE PTR [edi+0x11],dh
  4129b1:	push   0xffffffb6
  4129b3:	sub    al,0x56
  4129b5:	cmp    al,0x16
  4129b7:	pop    esp
  4129b8:	mov    ds:0xa0d9604,al
  4129bd:	icebp  
  4129be:	sub    esp,DWORD PTR [eax]
  4129c0:	add    edx,eax
  4129c2:	(bad)  
  4129c3:	repz sbb ecx,DWORD PTR [edx]
  4129c6:	mul    BYTE PTR [ecx+0x7414bae]
  4129cc:	inc    ebp
  4129cd:	inc    edi
  4129ce:	imul   BYTE PTR [ebp+0x5b1983e0]
  4129d4:	mov    ch,0x3f
  4129d6:	test   BYTE PTR [ebx],al
  4129d8:	test   eax,ecx
  4129da:	xchg   edi,esi
  4129dc:	pop    ebp
  4129dd:	lods   al,BYTE PTR ds:[esi]
  4129de:	fidiv  WORD PTR [edx-0x175e1904]
  4129e4:	imul   BYTE PTR [esp+ecx*4+0x28]
  4129e8:	mov    cl,0xaf
  4129ea:	jnp    0x41297f
  4129ec:	lahf   
  4129ed:	cmp    edi,DWORD PTR [eax+edi*4-0x6a]
  4129f1:	xor    esp,eax
  4129f3:	jbe    0x412a4e
  4129f5:	sti    
  4129f6:	inc    ecx
  4129f7:	es push ss
  4129f9:	jne    0x4129ca
  4129fb:	inc    ecx
  4129fc:	add    ecx,edi
  4129fe:	retf   
  4129ff:	mov    BYTE PTR [ebx-0x4709f253],0xf4
  412a06:	lahf   
  412a07:	into   
  412a08:	mov    ?,ebp
  412a0a:	popa   
  412a0b:	and    al,0x20
  412a0d:	inc    esp
  412a0e:	inc    esi
  412a0f:	idiv   BYTE PTR [eax-0x173923a9]
  412a15:	cmp    DWORD PTR ds:0xc0cdfcbc,ebx
  412a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a1c:	and    DWORD PTR [esi],ecx
  412a1e:	or     eax,0x5fd3daf7
  412a23:	rep stos BYTE PTR es:[edi],al
  412a25:	je     0x412a76
  412a27:	pushf  
  412a28:	adc    BYTE PTR [esp+edi*2-0x70],0x7
  412a2d:	and    al,0xfd
  412a2f:	or     al,0xbf
  412a31:	sbb    ch,BYTE PTR [eax]
  412a33:	adc    ecx,ecx
  412a35:	mov    cs,WORD PTR [esi-0x14]
  412a38:	mov    ds:0x76291322,eax
  412a3d:	xor    eax,0x4a073c8
  412a42:	imul   BYTE PTR [ecx*2+0x2882e53d]
  412a49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a4a:	mov    al,ds:0x99944697
  412a4f:	pop    ecx
  412a50:	cmp    BYTE PTR [ebx-0x452213d9],ah
  412a56:	mov    ebx,0x9e18dea9
  412a5b:	sub    dl,BYTE PTR [esi]
  412a5d:	mov    DWORD PTR ds:0xe8e6449d,ecx
  412a63:	pushf  
  412a64:	imul   ebx,DWORD PTR [edx+0x9],0xe4471528
  412a6b:	or     DWORD PTR [ecx+0x33e8611a],ecx
  412a71:	xor    al,0xab
  412a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a74:	add    esp,DWORD PTR [ebx-0x59eaa87f]
  412a7a:	scas   al,BYTE PTR es:[edi]
  412a7b:	push   ecx
  412a7c:	loopne 0x412a61
  412a7e:	add    al,0xd5
  412a80:	outs   dx,BYTE PTR ds:[esi]
  412a81:	jmp    0x412ab8
  412a83:	jle    0x412ac8
  412a85:	adc    eax,0xd780b307
  412a8a:	inc    esp
  412a8b:	mov    edi,0xbf1e9ec6
  412a90:	push   es
  412a91:	inc    esi
  412a92:	aas    
  412a93:	mov    edi,0x62fc6936
  412a98:	in     eax,dx
  412a99:	lahf   
  412a9a:	sbb    BYTE PTR [esi-0x43],0xbc
  412a9e:	sbb    ch,BYTE PTR [ecx-0xe77485d]
  412aa4:	xchg   ebx,eax
  412aa5:	std    
  412aa6:	addr16 jge 0x412a42
  412aa9:	clc    
  412aaa:	or     al,0x6b
  412aac:	sub    al,0x19
  412aae:	out    dx,al
  412aaf:	sbb    DWORD PTR [edi+0x17],edx
  412ab2:	dec    ecx
  412ab3:	sub    DWORD PTR [ebx-0x1609acbf],ecx
  412ab9:	dec    eax
  412aba:	daa    
  412abb:	test   al,0xc5
  412abd:	cld    
  412abe:	mov    ebx,0xad75532b
  412ac3:	adc    ebx,ebp
  412ac5:	cld    
  412ac6:	sub    al,0xed
  412ac8:	repz pushf 
  412aca:	add    bl,al
  412acc:	adc    bl,BYTE PTR [ebp+0xd]
  412acf:	push   es
  412ad0:	add    eax,0x94956c1f
  412ad5:	fnsave ds:0xe6a99140
  412adb:	das    
  412adc:	mov    ds:0xe6efabf9,eax
  412ae1:	test   DWORD PTR [edi],ebp
  412ae3:	mov    esi,0xd1f1d6dc
  412ae8:	xor    ebx,esi
  412aea:	in     eax,dx
  412aeb:	adc    eax,0x9494d91f
  412af0:	push   eax
  412af1:	jg     0x412b02
  412af3:	(bad)  
  412af4:	jmp    0x412b48
  412af6:	mov    al,ds:0x87fb309
  412afb:	pcmpgtd mm1,QWORD PTR [edx-0xb]
  412aff:	xor    ch,BYTE PTR [edi]
  412b01:	cs leave 
  412b03:	mov    cl,0xcb
  412b05:	push   esp
  412b06:	jbe    0x412a8d
  412b08:	pop    edx
  412b09:	pop    ds
  412b0a:	(bad)  
  412b0b:	jmp    0xf22:0x4c23338b
  412b12:	cs mov esp,0xc5f54de9
  412b18:	or     dh,BYTE PTR [esi]
  412b1a:	xchg   ecx,eax
  412b1b:	stos   DWORD PTR es:[edi],eax
  412b1c:	adc    bl,BYTE PTR ds:0x7e51aae1
  412b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b23:	arpl   WORD PTR [edx+0xecbbb3d],ax
  412b29:	inc    DWORD PTR [esi-0x9]
  412b2c:	and    ebp,DWORD PTR [ecx]
  412b2e:	add    esp,DWORD PTR [ecx+0x5a4bce13]
  412b34:	out    0xfb,ax
  412b37:	int    0x16
  412b39:	jno    0x412b1b
  412b3b:	jns    0x412b0b
  412b3d:	in     al,0x91
  412b3f:	out    dx,eax
  412b40:	or     al,0x89
  412b42:	cdq    
  412b43:	mov    ds:0x91297578,al
  412b48:	loope  0x412ae9
  412b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4b:	jnp    0x412ae5
  412b4d:	aad    0x67
  412b4f:	in     al,0x7
  412b51:	ins    DWORD PTR es:[edi],dx
  412b52:	jo     0x412bd1
  412b54:	mov    DWORD PTR [esi],ebx
  412b56:	mov    al,0x9f
  412b58:	xchg   ebp,eax
  412b59:	loope  0x412b73
  412b5b:	and    dx,dx
  412b5e:	mov    ebp,0xd55c2b92
  412b63:	icebp  
  412b64:	cld    
  412b65:	adc    al,0x49
  412b67:	adc    DWORD PTR [ebx-0x3eb1cf34],esp
  412b6d:	dec    esp
  412b6e:	cmp    cl,cl
  412b70:	mov    edi,0x9efe3583
  412b75:	shl    DWORD PTR [edx+edi*4+0x8a68d5e],cl
  412b7c:	jmp    0x660a:0x3a6fcd86
  412b83:	push   es
  412b84:	adc    eax,0x1abb9c01
  412b89:	cmp    BYTE PTR [eax],bl
  412b8b:	or     dl,BYTE PTR [ebp+0x74dda811]
  412b91:	cwde   
  412b92:	jge    0x412b90
  412b94:	pusha  
  412b95:	mov    dl,0xc5
  412b97:	jo     0x412bb4
  412b99:	(bad)  
  412b9a:	cmp    BYTE PTR [ebx+0x39],bh
  412b9d:	fwait
  412b9e:	mov    BYTE PTR cs:[ebp+0xd],0x84
  412ba3:	ds jge 0x412bbf
  412ba6:	repnz or ah,BYTE PTR [esi-0x780a1818]
  412bad:	mov    esp,0xe523a766
  412bb2:	sub    al,BYTE PTR [esi-0x22]
  412bb5:	xor    ch,bl
  412bb7:	fcomi  st,st(4)
  412bb9:	imul   esi,DWORD PTR [eax],0xf
  412bbc:	xor    ecx,DWORD PTR [ebx+0x67]
  412bbf:	clc    
  412bc0:	aaa    
  412bc1:	call   0xeed0:0xeee21c5f
  412bc8:	pop    edx
  412bc9:	aad    0xaf
  412bcb:	je     0x412bf4
  412bcd:	or     DWORD PTR ds:0xd10030e,eax
  412bd3:	shl    DWORD PTR [ebx-0x2b],cl
  412bd6:	mulps  xmm2,xmm7
  412bd9:	aam    0x5f
  412bdb:	mov    al,0x58
  412bdd:	cmp    ah,BYTE PTR [ebp-0x78]
  412be0:	push   0x63371278
  412be5:	mov    ecx,0xd084ccee
  412bea:	cmp    eax,0xb7f8660c
  412bef:	and    dl,bh
  412bf1:	mov    esi,0x83454c80
  412bf6:	jne    0x412bd0
  412bf8:	jae    0x412c54
  412bfa:	jmp    0x412b99
  412bfc:	ret    
  412bfd:	in     al,dx
  412bfe:	sahf   
  412bff:	mov    ch,0x39
  412c01:	pop    ebp
  412c02:	mov    esi,0x397c152
  412c07:	hlt    
  412c08:	and    eax,esp
  412c0a:	mov    ah,0xf4
  412c0c:	cmp    al,0xd4
  412c0e:	cmp    edx,ebp
  412c10:	pop    ss
  412c11:	sub    ah,ah
  412c13:	mov    ds:0x4ee0b807,al
  412c18:	push   edx
  412c19:	out    0xb,al
  412c1b:	ret    
  412c1c:	adc    ah,0x6f
  412c1f:	test   al,0x4f
  412c21:	js     0x412be2
  412c23:	sbb    eax,0x463245b
  412c28:	mul    edi
  412c2a:	fcomp  DWORD PTR [ebp+0x7c]
  412c2d:	lods   al,BYTE PTR ds:[esi]
  412c2e:	mov    ch,0x6b
  412c30:	fisttp DWORD PTR [ebx+0x71]
  412c33:	pop    edi
  412c34:	ret    0x5c00
  412c37:	xchg   BYTE PTR [edx],ch
  412c39:	mov    esi,0x9e0f7b48
  412c3e:	add    eax,0xf492f2db
  412c43:	sahf   
  412c44:	mov    al,ds:0xd939cf2
  412c49:	cmp    al,0x40
  412c4b:	push   edi
  412c4c:	push   eax
  412c4d:	rcl    DWORD PTR [eax+0x7],1
  412c50:	ret    0xe025
  412c53:	sub    dl,BYTE PTR [ecx+0x5f5d2309]
  412c59:	jg     0x412c23
  412c5b:	adc    ecx,ebp
  412c5d:	mov    esi,0x23f25718
  412c62:	les    esp,FWORD PTR [ebx+eiz*8+0x71d7f2eb]
  412c69:	mov    DWORD PTR [eax],edi
  412c6b:	ficom  DWORD PTR [eax+0x7cfd68d1]
  412c71:	push   cs
  412c72:	sub    dh,BYTE PTR [edx-0x12]
  412c75:	sbb    BYTE PTR [eax],0x7c
  412c78:	mov    dh,0xd4
  412c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c7b:	frstor ds:0xae33efc5
  412c81:	dec    ebx
  412c82:	jmp    0x1093:0x358a4a82
  412c89:	mov    DWORD PTR [ecx],edx
  412c8b:	lods   eax,DWORD PTR ds:[esi]
  412c8c:	dec    esi
  412c8d:	push   eax
  412c8e:	sbb    al,0xa8
  412c90:	push   esi
  412c91:	call   0x4b69:0xf122ee6
  412c98:	js     0x412d11
  412c9a:	inc    edx
  412c9b:	fiadd  WORD PTR [eax+0x41]
  412c9e:	mov    ecx,0x8b199a21
  412ca3:	loope  0x412c43
  412ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca6:	inc    edi
  412ca7:	or     cl,BYTE PTR [esi+0x25]
  412caa:	ror    DWORD PTR [ecx-0x615e4fb2],1
  412cb0:	ja     0x412d17
  412cb2:	jle    0x412c64
  412cb4:	fadd   DWORD PTR [edx-0x20]
  412cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cb8:	jne    0x412d01
  412cba:	jo     0x412d30
  412cbc:	pusha  
  412cbd:	xchg   DWORD PTR [ebx+0x5cf4f15e],eax
  412cc3:	or     BYTE PTR [ebx+0x6ba06ced],bh
  412cc9:	dec    BYTE PTR [ecx]
  412ccb:	push   ebp
  412ccc:	fisub  DWORD PTR [ebx-0x7bbcf1ba]
  412cd2:	jb     0x412d40
  412cd4:	cmp    BYTE PTR [eax+0x62],ah
  412cd7:	inc    esi
  412cd8:	out    dx,eax
  412cd9:	aam    0x35
  412cdb:	adc    BYTE PTR [edx+esi*8+0x78],cl
  412cdf:	xor    edx,DWORD PTR [ebp+0x20]
  412ce2:	mov    ecx,0x214690d4
  412ce7:	inc    ebp
  412ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce9:	cli    
  412cea:	push   ecx
  412ceb:	and    DWORD PTR [esi],0x74
  412cee:	mov    al,0x7d
  412cf0:	mov    al,ds:0xd2e9a90
  412cf5:	(bad)  
  412cf6:	pop    ebx
  412cf7:	loop   0x412c82
  412cf9:	pop    edi
  412cfa:	mov    ebx,0xd2c7b989
  412cff:	jae    0x412ce1
  412d01:	mov    ss,WORD PTR [ebp-0x1bbd25a3]
  412d07:	and    eax,0x706a2fcb
  412d0c:	sbb    esp,edx
  412d0e:	mov    edx,0xea01859f
  412d13:	xchg   ebx,eax
  412d14:	pop    ebx
  412d15:	jge    0x412d37
  412d17:	xchg   edi,eax
  412d18:	imul   ebx,edx,0x31
  412d1b:	jecxz  0x412cb4
  412d1d:	xchg   esp,eax
  412d1e:	stos   BYTE PTR es:[edi],al
  412d1f:	hlt    
  412d20:	inc    ebp
  412d21:	pop    ss
  412d22:	sbb    BYTE PTR [edx+ecx*4],0x45
  412d26:	retf   
  412d27:	dec    ebp
  412d28:	jmp    0xbbf4f702
  412d2d:	sub    ch,dh
  412d2f:	jle    0x412d57
  412d31:	lahf   
  412d32:	int3   
  412d33:	hlt    
  412d34:	jb     0x412d22
  412d36:	jmp    0x412d79
  412d38:	inc    ebp
  412d39:	cmp    edi,0x5a
  412d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d3d:	push   es
  412d3e:	push   0x12291298
  412d43:	xlat   BYTE PTR ds:[ebx]
  412d44:	test   BYTE PTR [esi+0x329c00d7],bh
  412d4a:	mov    WORD PTR [eax+0x2e7bcbda],?
  412d50:	aad    0x65
  412d52:	sbb    BYTE PTR [edx],dl
  412d54:	les    ebp,FWORD PTR [esp+esi*4]
  412d57:	nop
  412d58:	add    eax,0x80835c3d
  412d5d:	ret    
  412d5e:	or     DWORD PTR [edx+edi*4],eax
  412d61:	ins    DWORD PTR es:[edi],dx
  412d62:	xchg   ecx,eax
  412d63:	in     eax,0xa7
  412d65:	push   ecx
  412d66:	mov    al,0xc7
  412d68:	xor    DWORD PTR [edx+edx*1],0xa0671791
  412d6f:	sar    DWORD PTR [esi+0x1c906e9a],0xae
  412d76:	inc    edi
  412d77:	xor    eax,0x1dea648c
  412d7c:	(bad)  
  412d7d:	jmp    0x4b6d0bfb
  412d82:	scas   eax,DWORD PTR es:[edi]
  412d83:	dec    esp
  412d84:	ja     0x412dc7
  412d86:	es in  al,0x1f
  412d89:	xchg   ebx,eax
  412d8a:	mov    ecx,DWORD PTR [eax]
  412d8c:	test   al,0x17
  412d8e:	and    BYTE PTR [eax-0xe09303a],0xac
  412d95:	jl     0x412d45
  412d97:	xchg   edx,eax
  412d98:	mov    dl,0x76
  412d9a:	or     ebx,edi
  412d9c:	cmp    dl,BYTE PTR [ebx+0x288fb860]
  412da2:	test   DWORD PTR [eax+0x51f478c3],ecx
  412da8:	push   0x4b
  412daa:	ss xchg ebx,eax
  412dac:	sbb    edx,ebx
  412dae:	or     eax,eax
  412db0:	mov    dh,0x24
  412db2:	mov    eax,ds:0xb8b859ae
  412db7:	jno    0x412df1
  412db9:	mov    eax,ds:0x28ed1bdc
  412dbe:	jmp    0xd110:0x97040bf0
  412dc5:	je     0x412d5a
  412dc7:	aam    0xcd
  412dc9:	mov    eax,0x495412d0
  412dce:	loopne 0x412d57
  412dd0:	pusha  
  412dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd2:	jmp    0xc1d9329e
  412dd7:	pop    edi
  412dd8:	and    eax,0x40e0d1b
  412ddd:	mov    cl,0xff
  412ddf:	outs   dx,DWORD PTR ds:[esi]
  412de0:	lahf   
  412de1:	aaa    
  412de2:	xchg   edi,eax
  412de3:	push   eax
  412de4:	pop    eax
  412de5:	add    al,0x26
  412de7:	mov    edi,0xd67e7e0
  412dec:	push   esp
  412ded:	mov    DWORD PTR [eax+edi*1],0xe8e09d70
  412df4:	arpl   WORD PTR [ecx+0x26],sp
  412df7:	adc    BYTE PTR [ebp+0x4d],bh
  412dfa:	dec    esp
  412dfb:	dec    ebp
  412dfc:	push   ds
  412dfd:	sar    DWORD PTR [eax+0x54],cl
  412e00:	test   esi,ecx
  412e02:	retf   
  412e03:	pop    ecx
  412e04:	inc    ebx
  412e05:	shr    DWORD PTR [esi],0x7c
  412e08:	adc    bh,ch
  412e0a:	nop
  412e0b:	or     BYTE PTR [ebx+0x54],0xd6
  412e0f:	pop    ss
  412e10:	cmp    DWORD PTR [ebp+0x65],0xd083aad
  412e17:	dec    ebx
  412e18:	mov    cl,0xa
  412e1a:	sub    cl,ch
  412e1c:	or     DWORD PTR [ecx-0x5b630fe5],edx
  412e22:	xchg   esi,eax
  412e23:	cs push ds
  412e25:	out    dx,al
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	and    al,0x43
  412e29:	test   BYTE PTR [esp+eax*1-0x2d],ch
  412e2d:	mov    ah,0x85
  412e2f:	push   edi
  412e30:	loope  0x412e4d
  412e32:	mov    DWORD PTR [edx],ebp
  412e34:	fbld   TBYTE PTR [ebp-0x269fd40c]
  412e3a:	stos   BYTE PTR es:[edi],al
  412e3b:	or     al,0x2b
  412e3d:	pop    edx
  412e3e:	test   DWORD PTR [esi+edx*2],0xf323c1d1
  412e45:	gs std 
  412e47:	repz add DWORD PTR [ebp+edi*4+0x35],ebx
  412e4c:	pop    esp
  412e4d:	mov    dl,0xbd
  412e4f:	std    
  412e50:	scas   al,BYTE PTR es:[edi]
  412e51:	mov    gs,esp
  412e53:	pop    ds
  412e54:	adc    bh,BYTE PTR [ebx]
  412e56:	dec    esp
  412e57:	jae    0x412eb2
  412e59:	retf   
  412e5a:	xchg   edi,eax
  412e5b:	cwde   
  412e5c:	jno    0x412def
  412e5e:	ds xchg esp,eax
  412e60:	push   cs
  412e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e62:	mov    ebp,0x494be653
  412e67:	xchg   esi,eax
  412e68:	aas    
  412e69:	push   ecx
  412e6a:	mov    bh,0x66
  412e6c:	jo     0x412ea3
  412e6e:	es (bad) 
  412e70:	xchg   ebp,eax
  412e71:	rcr    BYTE PTR [eax+0x3f],0xe9
  412e75:	icebp  
  412e76:	and    BYTE PTR [ecx-0x6b4f69d3],0x74
  412e7d:	adc    ebp,ebx
  412e7f:	adc    BYTE PTR [ebp+0x228cdda2],ch
  412e85:	aas    
  412e86:	xchg   esi,eax
  412e87:	mov    edx,0xf5a44972
  412e8c:	and    bh,bl
  412e8e:	test   eax,0x70c17f3d
  412e93:	xchg   esp,eax
  412e94:	cmc    
  412e95:	loope  0x412eed
  412e97:	jne    0x412e28
  412e99:	and    al,0xf7
  412e9b:	es dec edx
  412e9d:	cmp    ebx,DWORD PTR [eax+eiz*2]
  412ea0:	scas   al,BYTE PTR es:[edi]
  412ea1:	mov    cl,0x9d
  412ea3:	fistp  DWORD PTR [ecx+0x6a]
  412ea6:	mov    bl,0xc
  412ea8:	shl    cl,cl
  412eaa:	jecxz  0x412f09
  412eac:	dec    ecx
  412ead:	push   eax
  412eae:	sahf   
  412eaf:	sub    DWORD PTR [esi+0x64],eax
  412eb2:	xor    ebx,esi
  412eb4:	sbb    bl,BYTE PTR [esi+0x3afbbd1d]
  412eba:	mov    dl,0x61
  412ebc:	pop    esi
  412ebd:	mov    ebx,0xcc2767da
  412ec2:	mov    ebp,0x1a380ec3
  412ec7:	mov    ah,0x3d
  412eca:	sbb    ecx,DWORD PTR [ecx+0x9904914]
  412ed0:	hlt    
  412ed1:	loop   0x412e6b
  412ed3:	call   0x20a826ef
  412ed8:	rcr    DWORD PTR [edi],cl
  412eda:	pop    esi
  412edb:	pop    edx
  412edc:	(bad)  [ebp-0x986310c]
  412ee2:	sub    al,0x96
  412ee4:	xchg   edx,eax
  412ee5:	sub    eax,0x494f1e37
  412eea:	or     eax,0x67d4fae8
  412eef:	add    BYTE PTR [edi-0x4c97c286],0x54
  412ef6:	call   0xfaba4a1a
  412efb:	cwde   
  412efc:	loope  0x412eee
  412efe:	sbb    DWORD PTR [edi],edx
  412f00:	outs   dx,BYTE PTR ds:[esi]
  412f01:	retf   0xb5a7
  412f04:	push   eax
  412f05:	leave  
  412f06:	mov    edi,0x8deff4d1
  412f0b:	in     al,0xa8
  412f0d:	addr16 retf 
  412f0f:	ins    BYTE PTR es:[edi],dx
  412f10:	mov    ch,0xdf
  412f12:	push   0xffffffd7
  412f14:	push   0x4d393c1b
  412f19:	or     dh,BYTE PTR [ebp+0x34]
  412f1c:	push   ebp
  412f1d:	dec    ebp
  412f1e:	and    DWORD PTR [edx],0x388bbb19
  412f24:	in     al,0x15
  412f26:	les    eax,FWORD PTR [ebx]
  412f28:	fld    QWORD PTR [edi]
  412f2a:	add    DWORD PTR ds:0x7ec36c44,ebx
  412f30:	stc    
  412f31:	cdq    
  412f32:	xor    BYTE PTR [edx-0x4e],cl
  412f35:	in     eax,0x3
  412f37:	jno    0x412ec6
  412f39:	pop    ds
  412f3a:	sub    DWORD PTR [esi+edi*1+0x66],0xbdb42e94
  412f42:	fiadd  DWORD PTR [esi+edx*4-0x44458090]
  412f49:	cdq    
  412f4a:	push   ss
  412f4b:	mov    ah,0x39
  412f4d:	xor    eax,0x5802fe5e
  412f52:	dec    ecx
  412f53:	adc    al,0x82
  412f55:	iret   
  412f56:	daa    
  412f57:	or     DWORD PTR [edi+0x69],0x5996aca4
  412f5e:	fisubr WORD PTR [ebp-0x51aee7d3]
  412f64:	push   ecx
  412f65:	ja     0x412ee7
  412f67:	jp     0x412efe
  412f69:	out    dx,al
  412f6a:	pop    ebp
  412f6b:	mov    al,0x27
  412f6d:	dec    esi
  412f6e:	dec    edi
  412f6f:	out    dx,eax
  412f70:	or     al,0xc8
  412f72:	repnz outs dx,BYTE PTR ds:[esi]
  412f74:	call   0x52f:0x27239c9d
  412f7b:	arpl   WORD PTR [edx],cx
  412f7d:	in     eax,0xcb
  412f7f:	add    al,0x20
  412f81:	adc    bl,BYTE PTR ds:0x2751f306
  412f87:	push   0xa0f10d58
  412f8c:	cmp    ebp,edi
  412f8e:	or     eax,DWORD PTR [esi]
  412f90:	sbb    bl,al
  412f92:	es (bad) 
  412f94:	mov    edx,0x7e4ea0b8
  412f99:	div    DWORD PTR [eax-0x20329afb]
  412f9f:	dec    edx
  412fa0:	out    0xb0,al
  412fa2:	repnz lods al,BYTE PTR ds:[esi]
  412fa4:	mov    eax,0x7294d975
  412fa9:	mov    edx,0x46735ead
  412fae:	pop    edi
  412faf:	fiadd  WORD PTR [edx]
  412fb1:	scas   al,BYTE PTR es:[edi]
  412fb2:	inc    edx
  412fb3:	jl     0x412f39
  412fb5:	xchg   ecx,eax
  412fb6:	stos   DWORD PTR es:[edi],eax
  412fb7:	jmp    0x824a758c
  412fbc:	mov    esp,0xa4c59129
  412fc1:	pop    eax
  412fc2:	cwde   
  412fc3:	shl    ah,cl
  412fc5:	push   edx
  412fc6:	repz jns 0x413005
  412fc9:	sub    esi,DWORD PTR [esi+ecx*1-0x3b43852e]
  412fd0:	inc    eax
  412fd1:	or     ecx,ebx
  412fd3:	out    dx,eax
  412fd4:	push   0x36
  412fd6:	jmp    0xac66:0xd763b75e
  412fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fde:	xchg   ecx,eax
  412fdf:	pusha  
  412fe0:	pusha  
  412fe1:	adc    DWORD PTR [ebx],edx
  412fe3:	cmp    al,0xf6
  412fe6:	xchg   DWORD PTR [edi],edi
  412fe8:	cdq    
  412fe9:	xor    eax,0x54ec0ce3
  412fee:	stos   DWORD PTR es:[edi],eax
  412fef:	or     BYTE PTR [eax],bl
  412ff1:	mov    al,ds:0xa56d64b
  412ff6:	dec    edi
  412ff7:	cmp    ah,ah
  412ff9:	cli    
  412ffa:	and    eax,0x858789a1
  412fff:	stos   BYTE PTR es:[edi],al
  413000:	and    ebx,DWORD PTR [edx]
  413002:	add    eax,0xa1a9bed1
  413007:	xchg   edx,eax
  413008:	ja     0x412fb5
  41300a:	lds    ebp,FWORD PTR [ebx+0x4c]
  41300d:	pop    ecx
  41300e:	pop    ebx
  41300f:	mov    esi,0x8d7e6b5d
  413014:	pop    esi
  413015:	(bad)  
  413016:	cmp    DWORD PTR [eax+0x21],ebx
  413019:	mov    eax,0xa9896198
  41301e:	and    esp,ebp
  413020:	into   
  413021:	gs out dx,eax
  413023:	dec    esp
  413024:	mov    ch,0xd
  413026:	clc    
  413027:	shl    dh,0x38
  41302a:	ds inc esi
  41302c:	xlat   BYTE PTR ds:[ebx]
  41302d:	or     al,cl
  41302f:	pusha  
  413030:	aam    0x3
  413032:	adc    cl,ah
  413034:	outs   dx,DWORD PTR ds:[esi]
  413035:	imul   esp,DWORD PTR ss:[ebx],0xd0eda0ec
  41303c:	in     al,dx
  41303d:	enter  0xb941,0x87
  413041:	and    eax,0xa6a24383
  413046:	setne  BYTE PTR [esi]
  413049:	in     eax,0x31
  41304b:	or     ebp,edx
  41304d:	arpl   WORD PTR [esi+0x4a],bx
  413050:	ficom  WORD PTR [eax-0x74]
  413053:	xor    eax,0x4081259f
  413058:	jb     0x41302d
  41305a:	ficom  DWORD PTR [ebp-0x6a]
  41305d:	mov    dh,0x6b
  41305f:	bound  ebx,QWORD PTR [ebp+0x1a5224a9]
  413065:	and    BYTE PTR [ecx-0xbd20b58],cl
  41306b:	shr    BYTE PTR [esi+0x542fb638],cl
  413071:	mov    edx,0x2c04ed71
  413076:	adc    DWORD PTR [eax+0x355152f6],edx
  41307c:	xchg   esi,eax
  41307d:	mov    BYTE PTR [ebx+0x67],ah
  413080:	jge    0x41301c
  413082:	or     bl,0x50
  413085:	test   eax,0x4165abc9
  41308a:	or     eax,0xb2b3aaeb
  41308f:	lods   al,BYTE PTR ds:[esi]
  413090:	mov    dh,BYTE PTR fs:[ecx+0x30]
  413094:	das    
  413095:	xchg   ebp,eax
  413096:	int3   
  413097:	and    DWORD PTR [esi+ebx*2],0x9e08768a
  41309e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41309f:	cdq    
  4130a0:	mov    cl,ah
  4130a2:	dec    edi
  4130a3:	data16 int3 
  4130a5:	sbb    DWORD PTR [edx+0x12f46983],esi
  4130ab:	ret    
  4130ac:	sub    DWORD PTR [esi-0x158ece0a],esi
  4130b2:	pop    es
  4130b3:	fwait
  4130b4:	stos   BYTE PTR es:[edi],al
  4130b5:	sub    bl,BYTE PTR [edx-0x3e]
  4130b8:	dec    esi
  4130b9:	stc    
  4130ba:	push   edx
  4130bb:	jns    0x413058
  4130bd:	jle    0x4130d7
  4130bf:	jb     0x4130b0
  4130c1:	add    eax,0x7d5630bf
  4130c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c7:	pop    esi
  4130c8:	repnz fscale 
  4130cb:	lock add DWORD PTR [esi-0x62d880d],edx
  4130d2:	xor    BYTE PTR [edx-0x1a2362db],al
  4130d8:	xchg   esp,eax
  4130d9:	test   al,0xb1
  4130db:	fwait
  4130dc:	push   0x2d4b48b6
  4130e1:	mov    eax,0x71f96362
  4130e6:	cs push 0x7021e2b0
  4130ec:	adc    ecx,DWORD PTR [esi]
  4130ee:	mov    bh,0x39
  4130f0:	aaa    
  4130f1:	dec    ecx
  4130f2:	xor    cl,BYTE PTR [eax]
  4130f4:	push   ebp
  4130f5:	jg     0x413153
  4130f7:	dec    esi
  4130f8:	mov    bh,0x3a
  4130fa:	and    DWORD PTR [edi+eiz*2],eax
  4130fd:	sahf   
  4130fe:	aas    
  4130ff:	cwde   
  413100:	sub    bh,dh
  413102:	pop    ds
  413103:	jmp    0x413164
  413105:	jae    0x413186
  413107:	push   edx
  413108:	mov    ebx,0xff39dfc5
  41310d:	iret   
  41310e:	pop    edi
  41310f:	add    ecx,DWORD PTR [ebp-0x6d414916]
  413115:	cli    
  413116:	cs in  al,dx
  413118:	daa    
  413119:	cmp    dh,BYTE PTR [ebp-0x65]
  41311c:	nop
  41311d:	and    al,BYTE PTR [edi+0x33]
  413120:	mov    DWORD PTR [edx+eax*1+0x2062b49d],esp
  413127:	mov    DWORD PTR [esi+ebx*1],ecx
  41312a:	pop    ebp
  41312b:	push   0xe283b6be
  413130:	xor    eax,0x50b0ffec
  413135:	xlat   BYTE PTR ds:[ebx]
  413136:	mov    ds:0xdbf230a8,al
  41313b:	retf   0xae75
  41313e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41313f:	xchg   ecx,eax
  413140:	dec    ebp
  413141:	bound  esp,QWORD PTR [edi]
  413143:	adc    edi,edx
  413145:	lock dec edx
  413147:	aaa    
  413148:	loop   0x4130d2
  41314a:	enter  0x813e,0xfc
  41314e:	or     cl,ch
  413150:	dec    esi
  413151:	or     eax,0x8d072129
  413156:	pop    edx
  413157:	in     al,dx
  413158:	out    0xf3,al
  41315a:	cld    
  41315b:	cld    
  41315c:	xchg   esp,eax
  41315d:	mov    al,0x61
  41315f:	mov    ah,0xaf
  413161:	in     eax,0x9e
  413163:	push   ecx
  413164:	enter  0xeaa2,0xa9
  413168:	jmp    0x82da:0xd806c138
  41316f:	or     bl,0x55
  413172:	pop    eax
  413173:	(bad)  
  413174:	aas    
  413175:	adc    al,0xad
  413177:	clc    
  413178:	jle    0x413131
  41317a:	adc    eax,0xe65240ee
  41317f:	mov    ah,0x10
  413181:	sub    al,0xab
  413183:	in     eax,0xa9
  413185:	adc    DWORD PTR [eax],esp
  413187:	adc    BYTE PTR [edx],bl
  413189:	cmc    
  41318a:	aas    
  41318b:	xchg   edx,eax
  41318c:	popf   
  41318d:	sub    esp,DWORD PTR [ebx-0x2f8cc8d0]
  413193:	lods   al,BYTE PTR ds:[esi]
  413194:	aas    
  413195:	or     edx,edi
  413197:	cmp    al,0x93
  413199:	mov    eax,0xdbb69660
  41319e:	addr16 dec ebp
  4131a0:	inc    edi
  4131a1:	pop    esi
  4131a2:	fsubr  DWORD PTR [edi-0x4a]
  4131a5:	(bad)  
  4131a6:	push   0x24aeaf09
  4131ab:	or     BYTE PTR [edx],dl
  4131ad:	fidivr WORD PTR [ebx+0x74a81f98]
  4131b3:	popf   
  4131b4:	loop   0x4131e8
  4131b6:	data16 or ch,BYTE PTR [edx+0x3a]
  4131ba:	and    al,0x89
  4131bc:	fst    st(0)
  4131be:	pop    es
  4131bf:	stc    
  4131c0:	fsub   DWORD PTR [eax+0x7310a331]
  4131c6:	sahf   
  4131c7:	adc    BYTE PTR [edx+0x40890a16],bl
  4131cd:	lods   al,BYTE PTR ds:[esi]
  4131ce:	adc    BYTE PTR [edi-0x9a85fb1],0xdb
  4131d5:	int3   
  4131d6:	lods   eax,DWORD PTR ds:[esi]
  4131d7:	fnstenv [edx+edi*2+0x2596deaa]
  4131de:	inc    edi
  4131df:	xor    DWORD PTR [esi],0x55038e30
  4131e5:	aaa    
  4131e6:	mov    edi,0xf31756c5
  4131eb:	xchg   ebx,eax
  4131ec:	xor    ebx,DWORD PTR [edx]
  4131ee:	clc    
  4131ef:	mov    BYTE PTR [esi],cl
  4131f1:	popa   
  4131f2:	adc    DWORD PTR [edi+ebx*1+0x43],ebx
  4131f6:	or     BYTE PTR [edx],dh
  4131f8:	dec    edi
  4131f9:	sub    al,0xc0
  4131fb:	cld    
  4131fc:	pushf  
  4131fd:	call   0xa6ce36ed
  413202:	or     al,0x62
  413204:	push   es
  413205:	add    esp,DWORD PTR [edx]
  413207:	adc    eax,0x13168219
  41320c:	cmp    DWORD PTR [edx-0x7176935f],edx
  413212:	test   eax,0x27f619eb
  413217:	or     al,0x83
  413219:	push   cs
  41321a:	mov    al,ds:0x995c409d
  41321f:	xor    edi,esp
  413221:	adc    al,0xf6
  413223:	sub    eax,0x6148c315
  413228:	rol    BYTE PTR [esi],1
  41322a:	jp     0x4131ac
  41322c:	and    esp,esp
  41322e:	add    DWORD PTR [ecx+0x1a],0x75
  413232:	test   al,0x25
  413234:	adc    ebp,DWORD PTR [esi-0x493ac805]
  41323a:	sbb    DWORD PTR [edx+0x53],esi
  41323d:	enter  0x90a4,0x93
  413241:	cwde   
  413242:	mov    esp,0xe187e457
  413247:	retf   
  413248:	adc    bl,BYTE PTR ss:[ecx+eax*8]
  41324c:	lahf   
  41324d:	dec    edx
  41324e:	or     ah,ch
  413250:	xchg   edx,eax
  413251:	cld    
  413252:	dec    edi
  413253:	test   eax,0xf10dc816
  413258:	xchg   ebp,eax
  413259:	add    cl,BYTE PTR [edi-0x2c36640c]
  41325f:	rcr    BYTE PTR [eax-0x70],1
  413262:	xor    ebx,DWORD PTR [ebx]
  413264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413265:	cwde   
  413266:	add    BYTE PTR [edx+ecx*1+0x5f],bh
  41326a:	sbb    dl,BYTE PTR [ecx-0x7490b691]
  413270:	mov    bl,0x61
  413272:	and    ah,BYTE PTR [edx+0xbfa5280]
  413278:	mov    ebx,0xf641bb01
  41327d:	mov    dh,0x15
  41327f:	sbb    dl,dl
  413281:	(bad)  
  413282:	pushf  
  413283:	mov    ah,0x17
  413285:	cmp    bh,BYTE PTR [edi+0x50]
  413288:	add    esi,DWORD PTR [edx-0x3f]
  41328b:	shl    DWORD PTR [ecx+edi*1-0x763332a1],0x54
  413293:	cwde   
  413294:	mov    fs,edx
  413296:	sub    esi,eax
  413298:	out    0x41,al
  41329a:	popa   
  41329b:	push   ecx
  41329c:	fnstsw WORD PTR ds:[ecx+0x17]
  4132a0:	cmp    dh,dh
  4132a2:	mov    eax,ds:0xcf8b3926
  4132a7:	mov    ebp,0xdf296068
  4132ac:	inc    ebp
  4132ad:	lds    edi,FWORD PTR [ebx+0x5b]
  4132b0:	leave  
  4132b1:	fild   QWORD PTR es:[eax+ebx*1-0x78]
  4132b6:	pop    ebp
  4132b7:	push   ebx
  4132b8:	jns    0x4132ae
  4132ba:	sub    edi,edx
  4132bc:	popa   
  4132bd:	hlt    
  4132be:	in     al,dx
  4132bf:	pop    ebx
  4132c0:	pop    ebp
  4132c1:	inc    ebp
  4132c2:	cld    
  4132c3:	xchg   DWORD PTR [edx-0x65],eax
  4132c6:	dec    edx
  4132c7:	or     dl,BYTE PTR [ebp+0x67]
  4132ca:	into   
  4132cb:	inc    eax
  4132cc:	xchg   edx,eax
  4132cd:	jae    0x413311
  4132cf:	test   DWORD PTR [edx],ebp
  4132d1:	in     eax,dx
  4132d2:	aam    0xb1
  4132d4:	xchg   esi,eax
  4132d5:	fistp  QWORD PTR [esi]
  4132d7:	add    BYTE PTR [ebp-0x76],0xfb
  4132db:	outs   dx,BYTE PTR ds:[esi]
  4132dc:	ja     0x41334d
  4132de:	lods   al,BYTE PTR ds:[esi]
  4132df:	cmc    
  4132e0:	jno    0x413330
  4132e2:	push   0xffffff9b
  4132e4:	clc    
  4132e5:	outs   dx,BYTE PTR ds:[esi]
  4132e6:	es pop eax
  4132e8:	es mov esi,0xa5f569f0
  4132ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ef:	mov    DWORD PTR [eax],esp
  4132f1:	pop    edi
  4132f2:	add    eax,0x21b1132
  4132f7:	jns    0x413375
  4132f9:	ds inc eax
  4132fb:	mov    esi,ebp
  4132fd:	push   edx
  4132fe:	mov    eax,0xf2b49580
  413303:	and    esi,DWORD PTR [esp+esi*8]
  413306:	and    BYTE PTR [ecx-0x1d34cf5b],ch
  41330c:	retf   
  41330d:	adc    DWORD PTR [ebp-0x21],ecx
  413310:	sar    edx,0x3c
  413313:	dec    ecx
  413314:	pop    ebp
  413315:	adc    BYTE PTR [esi+0x1a],dh
  413318:	mov    dh,0x1e
  41331a:	xchg   ebx,eax
  41331b:	ret    
  41331c:	or     BYTE PTR [ebp-0x31fbfdc],dh
  413322:	mov    dl,0xca
  413324:	pop    ss
  413325:	mov    ecx,DWORD PTR [ecx+eax*2+0x60bfd7b3]
  41332c:	cmp    eax,DWORD PTR [esi+0x11]
  41332f:	push   esp
  413330:	test   eax,0x9f99b18b
  413335:	imul   ecx,edx,0xffffff92
  413338:	pop    ebx
  413339:	jb     0x413337
  41333b:	mov    BYTE PTR [ebx+0x63335fbc],al
  413341:	fist   WORD PTR gs:[eax+0x5fd21319]
  413348:	jae    0x413399
  41334a:	mov    esp,DWORD PTR es:[ebp+0x105ddc9c]
  413351:	je     0x41330c
  413353:	in     al,0x2
  413355:	pop    DWORD PTR ss:[ebp+0x537379a8]
  41335c:	jge    0x4133d6
  41335e:	jle    0x4133da
  413360:	cmp    esp,DWORD PTR [edx]
  413362:	ins    DWORD PTR es:[edi],dx
  413363:	push   ss
  413364:	pop    ecx
  413365:	arpl   WORD PTR es:0x4ff54fb0,dx
  41336c:	pop    eax
  41336d:	call   0xb84d:0x2304cd94
  413374:	push   0x6fa18a5
  413379:	sub    DWORD PTR [edi+0x46],esi
  41337c:	test   BYTE PTR [edi],0x89
  41337f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413380:	shl    DWORD PTR [ecx],0x10
  413383:	(bad)  
  413384:	arpl   WORD PTR [edx-0x75f242e9],di
  41338a:	push   0x5f018656
  41338f:	fsub   st,st(5)
  413391:	adc    al,0xcf
  413393:	clc    
  413394:	and    ebx,DWORD PTR [ecx-0x30]
  413397:	mov    ch,0xc0
  413399:	pop    es
  41339a:	shr    BYTE PTR [eax-0xd],0xd1
  41339e:	xor    al,0x20
  4133a0:	in     eax,0x5a
  4133a2:	and    DWORD PTR [ecx+0x7d],edi
  4133a5:	aas    
  4133a6:	mov    bh,0x58
  4133a8:	and    DWORD PTR [edx-0x1d7f026b],ecx
  4133ae:	scas   eax,DWORD PTR es:[edi]
  4133af:	into   
  4133b0:	stc    
  4133b1:	or     al,0x96
  4133b3:	test   DWORD PTR [edx-0x55e98cba],ebp
  4133b9:	mov    edx,0x55560c88
  4133be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133bf:	std    
  4133c0:	mov    esp,0xb634dbe
  4133c5:	stos   BYTE PTR es:[edi],al
  4133c6:	loopne 0x413390
  4133c8:	jne    0x41337a
  4133ca:	sub    eax,0x95fc259a
  4133cf:	repnz sub DWORD PTR [ebp-0x40],edi
  4133d3:	add    BYTE PTR [edx],al
  4133d5:	sbb    al,0x98
  4133d7:	mov    bh,0x4d
  4133d9:	or     DWORD PTR [edi-0x27],eax
  4133dc:	push   ebx
  4133dd:	ror    BYTE PTR [edx],0xd9
  4133e0:	sbb    al,0xc
  4133e2:	jno    0x4133ed
  4133e4:	daa    
  4133e5:	test   al,0xf9
  4133e7:	jno    0x4133e9
  4133e9:	mov    dh,0xa1
  4133eb:	dec    BYTE PTR [eax+0x6]
  4133ee:	mov    DWORD PTR [edi-0x57],ebx
  4133f1:	loope  0x41345c
  4133f3:	jle    0x4133f5
  4133f5:	inc    ecx
  4133f6:	pop    ebp
  4133f7:	inc    ecx
  4133f8:	adc    BYTE PTR [eax],bh
  4133fa:	jbe    0x413418
  4133fc:	pop    edi
  4133fd:	(bad)  
  4133ff:	jnp    0x41341b
  413401:	adc    DWORD PTR [ecx+0x7542be8e],ebx
  413407:	fistp  WORD PTR [ebx-0x252cb35b]
  41340d:	ret    0xe85
  413410:	je     0x4133a3
  413412:	mov    ?,WORD PTR [edi-0x29507d69]
  413418:	push   esp
  413419:	push   edi
  41341a:	fcmovnbe st,st(6)
  41341c:	or     BYTE PTR [ebp-0x65d43873],ch
  413422:	jo     0x413424
  413424:	stc    
  413425:	jo     0x41345e
  413427:	sub    ch,dl
  413429:	ror    DWORD PTR [edx-0x7b],cl
  41342c:	ss mov bh,0xd2
  41342f:	ss push es
  413431:	sub    edi,DWORD PTR [ecx+ecx*1-0x23]
  413435:	ja     0x41342d
  413437:	and    ecx,ecx
  413439:	outs   dx,BYTE PTR ds:[esi]
  41343a:	push   0x4a192573
  41343f:	sbb    al,0x2e
  413441:	mov    ds:0x9a4f6a7d,eax
  413446:	sub    dl,BYTE PTR [ecx+0x9]
  413449:	into   
  41344a:	dec    edx
  41344b:	js     0x41349c
  41344d:	adc    DWORD PTR [eax],eax
  41344f:	xchg   edi,eax
  413450:	(bad)  
  413451:	mov    ch,0x7a
  413453:	aaa    
  413454:	add    eax,0x5f8bd4ee
  413459:	js     0x4134ce
  41345b:	mov    BYTE PTR [esi-0x1d7aa697],al
  413461:	shl    DWORD PTR [ebp-0x5456876f],0xcf
  413468:	push   edi
  413469:	xchg   BYTE PTR [edi-0x1e08cefd],ah
  41346f:	mov    dh,0x31
  413471:	xchg   edi,eax
  413472:	out    0xf9,eax
  413474:	and    eax,0xd50f5e1b
  413479:	adc    eax,0xefab400b
  41347e:	or     BYTE PTR [edi+0xa],al
  413481:	jne    0x413491
  413483:	jl     0x41341d
  413485:	(bad)  
  413487:	ins    BYTE PTR es:[edi],dx
  413488:	cmp    bh,BYTE PTR [esi]
  41348a:	push   ecx
  41348b:	ror    BYTE PTR [esi],cl
  41348d:	adc    ebx,DWORD PTR [esi+0x5a]
  413490:	pop    esi
  413491:	jbe    0x41349c
  413493:	pop    esp
  413494:	ret    
  413495:	sbb    eax,0x602a938a
  41349a:	mov    eax,ds:0xb5deb0a8
  41349f:	(bad)  
  4134a0:	jbe    0x4134a9
  4134a2:	aaa    
  4134a3:	mov    eax,0x21bad33e
  4134a8:	enter  0x6c07,0x70
  4134ac:	(bad)  
  4134ae:	adc    edx,edi
  4134b0:	xchg   BYTE PTR ds:0x7d8532ca,bh
  4134b6:	push   esi
  4134b7:	adc    al,ah
  4134b9:	sbb    DWORD PTR [eax+0x33b7c890],ecx
  4134bf:	cmc    
  4134c0:	inc    eax
  4134c1:	lods   eax,DWORD PTR ds:[esi]
  4134c2:	mul    BYTE PTR [edx-0x70]
  4134c5:	gs push eax
  4134c7:	jmp    0x9eb8fa31
  4134cc:	retf   
  4134cd:	retf   0xf575
  4134d0:	cmp    esi,0x76a2643c
  4134d6:	and    bh,BYTE PTR [ebp+0x19]
  4134d9:	mov    ebp,0xdbb73dec
  4134de:	xchg   BYTE PTR [edi+0x3d],bl
  4134e1:	call   0xfd95133d
  4134e6:	loop   0x41350a
  4134e8:	in     eax,0xe9
  4134ea:	cs into 
  4134ec:	shr    BYTE PTR [esi],cl
  4134ee:	push   esi
  4134ef:	cmp    al,0x45
  4134f1:	out    dx,eax
  4134f2:	cmp    DWORD PTR [ebp+0x2e],0xa3cd6132
  4134f9:	dec    ecx
  4134fa:	popa   
  4134fb:	call   0x116e:0x1fece9cb
  413502:	mov    ds:0x833ed056,al
  413507:	dec    ebp
  413508:	je     0x4134f5
  41350a:	dec    esi
  41350b:	mov    BYTE PTR [ebp-0x3690544e],bh
  413511:	cld    
  413512:	dec    ebx
  413513:	mov    ah,0x6b
  413515:	sub    ch,BYTE PTR [ecx+0x75]
  413518:	and    ebx,DWORD PTR ds:0xae2cf6ba
  41351e:	fst    QWORD PTR [eax]
  413520:	push   ds
  413521:	or     ebx,edx
  413523:	mov    dh,0x8e
  413525:	sbb    al,0xdb
  413527:	pop    esp
  413528:	push   edi
  413529:	clc    
  41352a:	lock push ss
  41352c:	stos   DWORD PTR es:[edi],eax
  41352d:	fwait
  41352e:	in     al,dx
  41352f:	mov    ds,WORD PTR [esi+edi*2]
  413532:	or     al,0x41
  413534:	dec    esi
  413535:	call   FWORD PTR [edi]
  413537:	(bad)  
  413538:	addr16 test ecx,ebx
  41353b:	inc    ebx
  41353c:	or     BYTE PTR [ecx],al
  41353e:	push   es
  41353f:	add    BYTE PTR [eax+0x33],dh
  413542:	and    al,0x3
  413544:	or     edx,DWORD PTR [edx-0x28]
  413547:	fwait
  413548:	pop    es
  413549:	test   di,cx
  41354c:	inc    edx
  41354d:	adc    al,0xf5
  41354f:	test   bh,0x5d
  413552:	fsubr  QWORD PTR [eax]
  413554:	rol    BYTE PTR [bx+si],1
  413557:	hlt    
  413558:	call   0x29e1:0x7cd03c3
  41355f:	(bad)  
  413560:	and    dh,bl
  413562:	push   es
  413563:	pop    esp
  413564:	fs mov al,0x21
  413567:	arpl   WORD PTR [edi],dx
  413569:	pop    edi
  41356a:	cmp    eax,0xe4b31437
  41356f:	(bad)  
  413570:	mov    edi,0x646ed3c9
  413575:	or     BYTE PTR [ebp-0x51],dl
  413578:	lea    edi,[ecx+0x41ff5cfa]
  41357e:	xor    dl,al
  413580:	inc    eax
  413581:	inc    ebp
  413582:	mov    esp,0x2697bf79
  413587:	pop    ds
  413588:	mov    edi,?
  41358a:	mov    al,0xdc
  41358c:	sbb    bh,BYTE PTR [ebp+0x391d10d3]
  413592:	jecxz  0x41355f
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	jle    0x413555
  413597:	mov    dh,0xb1
  413599:	fdiv   QWORD PTR [ecx-0x62]
  41359c:	ss out dx,al
  41359e:	fcomp  DWORD PTR [ecx]
  4135a0:	xchg   edx,eax
  4135a1:	pop    ss
  4135a2:	inc    edi
  4135a3:	test   eax,0xcf4b398c
  4135a8:	ins    BYTE PTR es:[edi],dx
  4135a9:	adc    DWORD PTR [ecx+0x59],ecx
  4135ac:	pop    es
  4135ad:	dec    eax
  4135ae:	aas    
  4135af:	jp     0x41356d
  4135b1:	hlt    
  4135b2:	mov    WORD PTR [ebx-0x29],cs
  4135b5:	fisttp WORD PTR [edi]
  4135b7:	sbb    bh,BYTE PTR [ecx]
  4135b9:	ret    0xc859
  4135bc:	shl    eax,cl
  4135be:	mov    eax,ss
  4135c0:	jnp    0x41363b
  4135c2:	in     eax,dx
  4135c3:	push   edx
  4135c4:	sub    eax,esi
  4135c6:	add    eax,ecx
  4135c8:	cmp    al,0xb5
  4135ca:	mov    ebx,0x8ea313aa
  4135cf:	cmp    DWORD PTR ds:0x90a6a168,esp
  4135d5:	std    
  4135d6:	jne    0x4135d0
  4135d8:	inc    edi
  4135d9:	xchg   BYTE PTR [ebx-0x8],dh
  4135dc:	xor    eax,0x911b550d
  4135e1:	(bad)  
  4135e2:	dec    edi
  4135e3:	je     0x413664
  4135e5:	sbb    bl,bh
  4135e7:	jne    0x4135a7
  4135e9:	bound  esp,QWORD PTR [eax]
  4135eb:	dec    eax
  4135ec:	sub    DWORD PTR [ebx],esp
  4135ee:	test   BYTE PTR [edi],0xe0
  4135f1:	push   ecx
  4135f2:	sub    dl,BYTE PTR [ebp+0x5a]
  4135f5:	(bad)  
  4135f7:	fnstenv [edi+0x2599f220]
  4135fd:	mov    BYTE PTR [edx-0x50],ah
  413600:	inc    esi
  413601:	mov    edi,0xd407cd0e
  413606:	sbb    bl,BYTE PTR [ecx-0x5a]
  413609:	jg     0x413620
  41360b:	ret    
  41360c:	xchg   ebp,eax
  41360d:	jmp    0x86ca1085
  413612:	les    eax,FWORD PTR [ebx]
  413614:	sbb    eax,0xa884a9f5
  413619:	es fcmovu st,st(0)
  41361c:	aam    0x3c
  41361e:	push   es
  41361f:	je     0x413688
  413621:	arpl   WORD PTR [ebx-0x6ffeda07],bp
  413627:	push   edx
  413628:	add    ebx,ebp
  41362a:	push   0xffffffd4
  41362c:	int    0xdf
  41362e:	inc    ecx
  41362f:	sub    dl,al
  413631:	pushf  
  413632:	sahf   
  413633:	xchg   esi,eax
  413634:	and    eax,0x5c1bf7ee
  413639:	(bad)  [ebx]
  41363b:	int3   
  41363c:	push   0x4e349738
  413641:	rcr    DWORD PTR [ecx+0x34],1
  413644:	jge    0x41367b
  413646:	pusha  
  413647:	js     0x413626
  413649:	mov    al,0x61
  41364b:	loop   0x413621
  41364d:	inc    ebp
  41364e:	sub    eax,0x65adadf8
  413654:	bound  ecx,QWORD PTR [ebx+0x72598868]
  41365a:	dec    ebp
  41365b:	pop    ds
  41365c:	cdq    
  41365d:	mov    ds:0x66f8253e,eax
  413662:	imul   ecx,DWORD PTR [esp+eax*8],0xa4b15e77
  413669:	ins    DWORD PTR es:[edi],dx
  41366a:	xchg   DWORD PTR [ebx-0x5e],ecx
  41366d:	std    
  41366e:	xchg   esp,eax
  41366f:	icebp  
  413670:	popa   
  413671:	sbb    DWORD PTR [edi-0x423cc90e],eax
  413677:	leave  
  413678:	sub    al,0x27
  41367a:	xchg   esp,eax
  41367b:	cmp    bl,0xd3
  41367e:	dec    edi
  41367f:	push   esp
  413680:	cmp    al,0x1d
  413682:	fdivr  st(2),st
  413684:	rcr    BYTE PTR [esi-0x12],cl
  413687:	in     al,0x87
  413689:	mov    eax,DWORD PTR [edx]
  41368b:	mov    ebx,0xa75e750a
  413690:	mov    cl,0xd6
  413692:	xchg   ebp,eax
  413693:	bound  edx,QWORD PTR ss:[ecx]
  413696:	dec    esp
  413697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413698:	mov    dh,0x27
  41369a:	add    al,0xa2
  41369c:	aaa    
  41369d:	sub    esp,DWORD PTR [esi+ecx*2-0x14]
  4136a1:	mov    dh,0xa6
  4136a3:	icebp  
  4136a4:	pop    es
  4136a5:	and    eax,0x6c38fc1b
  4136aa:	in     al,dx
  4136ab:	mov    ah,0x92
  4136ad:	scas   eax,DWORD PTR es:[edi]
  4136ae:	xchg   ebp,eax
  4136af:	mov    dh,0xdd
  4136b1:	out    0x3b,eax
  4136b3:	cmp    eax,0x424f13e6
  4136b8:	(bad)  
  4136b9:	jns    0x41367f
  4136bb:	and    ah,ch
  4136bd:	fs push ebp
  4136bf:	arpl   WORD PTR ds:[edx],bx
  4136c2:	xlat   BYTE PTR ds:[ebx]
  4136c3:	ror    BYTE PTR [edx-0x31ac11a5],1
  4136c9:	xchg   BYTE PTR [ebx+0x740617d2],dl
  4136cf:	push   0x1688ae8a
  4136d4:	or     al,0x89
  4136d6:	imul   ebp
  4136d8:	hlt    
  4136d9:	push   edx
  4136da:	fs cwde 
  4136dc:	(bad)  
  4136dd:	pop    ebx
  4136de:	mov    cl,0x52
  4136e0:	aad    0xd5
  4136e2:	pop    esi
  4136e3:	in     al,0x74
  4136e5:	cwde   
  4136e6:	pop    ss
  4136e7:	add    BYTE PTR [ebp-0x7773c6c0],ch
  4136ed:	stos   BYTE PTR es:[edi],al
  4136ee:	imul   BYTE PTR [esi+ebx*1-0x58]
  4136f2:	dec    edx
  4136f3:	bound  edi,QWORD PTR [eax-0x4e506cdd]
  4136f9:	not    BYTE PTR [edx+0x6ca20c30]
  4136ff:	xor    BYTE PTR [esi-0x345f0e32],0x74
  413706:	loope  0x41373d
  413708:	mov    ebx,0x82ad3d50
  41370d:	nop
  41370e:	in     al,dx
  41370f:	xchg   edx,eax
  413710:	mov    ds:0x3aa9d850,eax
  413715:	dec    dl
  413717:	popaw  
  413719:	cmp    dl,BYTE PTR [ecx+0x6]
  41371c:	(bad)  
  41371d:	jge    0x4136e6
  41371f:	in     al,0x9f
  413721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413722:	stos   DWORD PTR es:[edi],eax
  413723:	inc    edx
  413724:	jmp    0xcc39099f
  413729:	retf   0x5e63
  41372c:	adc    eax,0x8f1dbb2e
  413731:	(bad)  
  413733:	cmp    DWORD PTR [ecx-0x5],esp
  413736:	add    DWORD PTR [edi+0x7e],esi
  413739:	sub    al,0xbf
  41373b:	mov    ch,0xa6
  41373d:	call   0xf6e5:0xb70ab6d4
  413744:	rol    DWORD PTR [esi+edx*4],cl
  413747:	sar    BYTE PTR ds:0x3deef162,1
  41374d:	enter  0xbae9,0x18
  413751:	mov    dl,BYTE PTR [ecx-0x6db49ac9]
  413757:	clc    
  413758:	retf   
  413759:	or     ebx,DWORD PTR es:[esi-0x556ad38d]
  413760:	mov    ebp,0x1ec64513
  413765:	mov    ds:0x71271864,eax
  41376a:	xor    ah,BYTE PTR [ebp+0x38]
  41376d:	mov    edi,DWORD PTR [ebx+0x68084097]
  413773:	dec    ecx
  413774:	(bad)  
  413775:	in     eax,0xc6
  413777:	mov    bh,0xf9
  413779:	test   edx,0x5dafa98c
  41377f:	xor    DWORD PTR [esi],ecx
  413781:	mov    ebx,DWORD PTR ds:0x760fb4e1
  413787:	and    edi,DWORD PTR [esi-0x55]
  41378a:	add    BYTE PTR [esp+ebx*2-0x8],al
  41378e:	xchg   edi,eax
  41378f:	(bad)  [eax]
  413791:	lock pop ecx
  413793:	ret    
  413794:	ret    
  413795:	ret    
  413796:	inc    edx
  413797:	lock sub DWORD PTR [esi-0x50],ebx
  41379b:	and    BYTE PTR [edx],ah
  41379d:	adc    eax,0x7b662b47
  4137a2:	push   edx
  4137a3:	push   ecx
  4137a4:	not    esp
  4137a6:	lock sbb DWORD PTR [ecx-0x4dc99b0],0x2ffaefdb
  4137b1:	jecxz  0x413820
  4137b3:	dec    edx
  4137b4:	add    ah,bl
  4137b6:	loop   0x41375a
  4137b8:	shl    DWORD PTR [ecx-0x7d6afca2],1
  4137be:	and    ebp,DWORD PTR [eax+0x3f]
  4137c1:	dec    ebp
  4137c2:	pop    ss
  4137c3:	shl    BYTE PTR [edx],1
  4137c5:	dec    esp
  4137c6:	inc    ecx
  4137c7:	push   0x68
  4137c9:	xor    eax,0x4202640c
  4137ce:	mov    al,ds:0xa36783fc
  4137d3:	jne    0x41376d
  4137d5:	out    dx,eax
  4137d6:	xchg   bl,dl
  4137d8:	push   es
  4137d9:	jmp    0x2f86:0xda7341e4
  4137e0:	nop
  4137e1:	ja     0x413845
  4137e3:	fcom   DWORD PTR [esi+0xf]
  4137e6:	sbb    eax,0xf885f2ef
  4137eb:	or     DWORD PTR [ecx-0x49],eax
  4137ee:	nop
  4137ef:	fstp   DWORD PTR [ebp+0x57]
  4137f2:	pop    ds
  4137f3:	lahf   
  4137f4:	pop    ebp
  4137f5:	sti    
  4137f6:	cld    
  4137f7:	xor    BYTE PTR ds:0x69e1db55,dh
  4137fd:	test   eax,0x7702c6e2
  413802:	ja     0x413791
  413804:	xchg   esp,eax
  413805:	fdiv   QWORD PTR [edx]
  413807:	inc    eax
  413808:	icebp  
  413809:	cdq    
  41380a:	daa    
  41380b:	jmp    0xe1b1:0xfe9fe5b0
  413812:	mov    bh,0xbd
  413814:	retf   
  413815:	in     eax,dx
  413816:	jo     0x413870
  413818:	repz dec esi
  41381a:	xchg   ecx,eax
  41381b:	mov    ebx,0x713bb6ab
  413820:	outs   dx,BYTE PTR ds:[esi]
  413821:	ret    0xd91e
  413824:	ret    0xcaee
  413827:	dec    ebx
  413828:	push   DWORD PTR [edi-0x61]
  41382b:	js     0x4137e1
  41382d:	push   esp
  41382e:	lahf   
  41382f:	jg     0x413823
  413831:	add    eax,0x22792045
  413836:	cdq    
  413837:	xchg   ebp,eax
  413838:	xchg   esi,eax
  413839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41383a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383b:	fs out 0x53,eax
  41383e:	sbb    eax,0xacc328f3
  413843:	sub    eax,0x63663cc7
  413848:	outs   dx,BYTE PTR ds:[esi]
  413849:	jbe    0x4137d8
  41384b:	bound  edi,QWORD PTR [esi+0x6d]
  41384e:	jne    0x41388e
  413850:	xor    DWORD PTR [esi+0xf867ee5],esp
  413856:	pop    ebp
  413857:	out    dx,eax
  413858:	add    eax,0xde92c6e4
  41385d:	sub    DWORD PTR [esi],ebx
  41385f:	push   0x57f850cf
  413864:	push   0x3c952424
  413869:	sub    ch,BYTE PTR [ebp-0x3e10fe19]
  41386f:	test   BYTE PTR [ebp+0x5e022789],bh
  413875:	push   ebx
  413877:	mov    ds:0xa1a8b87,al
  41387c:	push   ebx
  41387d:	bound  esp,QWORD PTR [ebx+0x10]
  413880:	out    dx,eax
  413881:	gs push ebx
  413883:	ins    DWORD PTR es:[edi],dx
  413884:	test   BYTE PTR [edx-0x383d8a5a],bh
  41388a:	repz mov ds:0x351154ab,eax
  413890:	(bad)  
  413891:	fdivr  st,st(7)
  413893:	jmp    0x7102:0xdf35a4be
  41389a:	test   BYTE PTR [ecx+0x2f861c70],0x65
  4138a1:	imul   ebx,DWORD PTR [esi-0x2d],0xffffff9a
  4138a5:	test   eax,0x8043554e
  4138aa:	pop    es
  4138ab:	xchg   edi,eax
  4138ac:	lahf   
  4138ad:	cld    
  4138ae:	cmp    eax,0x2899a50c
  4138b3:	mov    al,0xdf
  4138b5:	arpl   bx,bx
  4138b7:	out    dx,al
  4138b8:	jmp    0xdd61:0x260ef7be
  4138bf:	inc    esi
  4138c0:	xchg   ebx,eax
  4138c1:	iret   
  4138c2:	cmp    BYTE PTR [esi+0x35],dh
  4138c5:	idiv   BYTE PTR [ebx-0x8bd9f4d]
  4138cb:	cmp    eax,0xbd134fe2
  4138d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d1:	dec    esi
  4138d2:	inc    edi
  4138d3:	sub    DWORD PTR [edx],esi
  4138d5:	stc    
  4138d6:	xor    BYTE PTR [ecx+0x10],dh
  4138d9:	or     BYTE PTR [eax-0x76],0xe1
  4138dd:	sti    
  4138de:	test   al,0xb1
  4138e0:	dec    esp
  4138e1:	addr16 cwde 
  4138e3:	pop    esp
  4138e4:	cmp    al,0xb7
  4138e6:	data16 jl 0x413904
  4138e9:	pop    eax
  4138ea:	push   eax
  4138eb:	ret    0x57e5
  4138ee:	and    eax,0x90c0be28
  4138f3:	sub    eax,0x40a48e6c
  4138f8:	hlt    
  4138f9:	sub    DWORD PTR [edi],ebx
  4138fb:	jbe    0x41397b
  4138fd:	ins    BYTE PTR es:[edi],dx
  4138fe:	shl    ch,cl
  413900:	out    0x85,eax
  413902:	sub    BYTE PTR [ecx+0x5d52d63e],0x57
  413909:	jge    0x413959
  41390b:	xchg   ecx,eax
  41390c:	stc    
  41390d:	sbb    edx,DWORD PTR [eax+ecx*1-0x5e]
  413911:	jbe    0x413942
  413913:	mov    ebp,0xdf9579a4
  413918:	cmp    DWORD PTR [edx+0x62],esi
  41391b:	(bad)  
  41391c:	sub    DWORD PTR [esi],ecx
  41391e:	mov    al,0x67
  413920:	and    DWORD PTR [esi+eiz*4+0x2c],ecx
  413924:	mov    ah,BYTE PTR [edx-0x16]
  413927:	inc    esi
  413928:	mov    ch,0x91
  41392a:	in     al,0xec
  41392c:	sti    
  41392d:	push   eax
  41392e:	jl     0x413939
  413930:	mov    eax,ds:0x809af73c
  413935:	fld    TBYTE PTR [ebp+0x5a]
  413938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413939:	lds    ebx,FWORD PTR [esi-0x126c5b54]
  41393f:	dec    eax
  413940:	adc    bl,dl
  413942:	xlat   BYTE PTR ds:[ebx]
  413943:	mov    es,WORD PTR [esi-0x57]
  413946:	ss inc ebp
  413948:	inc    esp
  413949:	xchg   esp,eax
  41394a:	sub    DWORD PTR [ebx-0x257ed5f3],ebp
  413950:	or     DWORD PTR [edx],ecx
  413952:	dec    eax
  413953:	adc    ch,BYTE PTR [edx+edx*2]
  413956:	mov    ebp,0x4a9716b8
  41395b:	mov    dl,0xa6
  41395d:	mov    dl,0x84
  41395f:	mov    bl,0xc7
  413961:	out    dx,al
  413962:	sar    dl,cl
  413964:	retf   0x6512
  413967:	(bad)  
  413969:	jge    0x4e5507fa
  41396f:	pop    ds
  413970:	cs pop ebx
  413972:	adc    BYTE PTR [edi+esi*4-0x35540891],ch
  413979:	lea    ebp,[ecx+0x1a09b399]
  41397f:	dec    DWORD PTR [esi+0x39]
  413982:	add    eax,0x8dde1214
  413987:	add    eax,0x8def12de
  41398c:	or     eax,0xc6e700b4
  413991:	(bad)  
  413992:	push   0x5887f42b
  413997:	inc    eax
  413998:	hlt    
  413999:	stos   DWORD PTR es:[edi],eax
  41399a:	sbb    ch,dl
  41399c:	ins    BYTE PTR es:[edi],dx
  41399d:	iret   
  41399e:	ret    0xc38a
  4139a1:	cs into 
  4139a3:	ret    
  4139a4:	jns    0x413960
  4139a6:	mov    WORD PTR [ebx],?
  4139a8:	imul   bp,di,0xff4e
  4139ad:	xchg   cl,bh
  4139af:	or     DWORD PTR [edi+esi*2-0x497e2c53],edi
  4139b6:	je     0x4139ec
  4139b8:	add    al,0x34
  4139ba:	xchg   ebx,eax
  4139bb:	or     eax,0xd53ecfac
  4139c0:	pusha  
  4139c1:	cmp    edx,DWORD PTR [ecx-0x1d]
  4139c4:	push   cs
  4139c5:	(bad)  
  4139c7:	not    dl
  4139c9:	xchg   esp,eax
  4139ca:	mov    eax,0x4282a4d2
  4139cf:	out    dx,eax
  4139d0:	(bad)  
  4139d1:	fcom   QWORD PTR [ebx+0x2b]
  4139d4:	es cmc 
  4139d6:	sbb    DWORD PTR [ebx-0x1669c52d],eax
  4139dc:	mov    ebx,0xb5a80b1b
  4139e1:	jbe    0x4139f4
  4139e3:	xchg   DWORD PTR [esi],eax
  4139e5:	fnsave [ebp+0x7d]
  4139e8:	cmp    eax,0x7e990b68
  4139ed:	not    BYTE PTR [edi-0x3a]
  4139f0:	cwde   
  4139f1:	push   cs
  4139f2:	sub    ebp,ecx
  4139f4:	in     eax,0x9f
  4139f6:	or     eax,eax
  4139f8:	xor    bl,BYTE PTR [esi+0x771e822b]
  4139fe:	pushf  
  4139ff:	sub    DWORD PTR [esi+0x75e0602b],edi
  413a05:	test   eax,0x7330cda
  413a0a:	and    ah,BYTE PTR [ebp+0x17]
  413a0d:	or     eax,0x436eedf7
  413a12:	sbb    ecx,0xbb8668a0
  413a18:	test   eax,0xb656656d
  413a1d:	adc    esp,ebp
  413a1f:	cmp    al,0xe6
  413a21:	adc    al,0xae
  413a23:	gs pop ebp
  413a25:	leave  
  413a26:	add    al,BYTE PTR [esi+0x6b]
  413a29:	les    ecx,FWORD PTR [edi]
  413a2b:	inc    esp
  413a2c:	sbb    BYTE PTR [ebx],al
  413a2e:	ficomp WORD PTR [edi-0x6208e3ef]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	add    BYTE PTR [ebx-0x55942e0a],ch
  413a3b:	adc    eax,0x60e67404
  413a40:	inc    edx
  413a41:	add    edx,DWORD PTR [ebx+0x6e]
  413a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a45:	fwait
  413a46:	push   ebp
  413a47:	test   al,0xa3
  413a49:	mov    ebp,0xf9627e7
  413a4e:	pop    ebp
  413a4f:	es cwde 
  413a51:	stos   DWORD PTR es:[edi],eax
  413a52:	mov    edx,0x9f4387b8
  413a57:	dec    edx
  413a58:	je     0x413a53
  413a5a:	sti    
  413a5b:	leave  
  413a5c:	mov    edi,edx
  413a5e:	mov    bh,BYTE PTR [ebp-0x66]
  413a61:	fidivr DWORD PTR [ebx+0x7e8521d5]
  413a67:	imul   ebx,ecx,0xfffffff8
  413a6a:	fnstsw WORD PTR [eax+ebx*2]
  413a6d:	pop    ecx
  413a6e:	sbb    dh,BYTE PTR [edi-0x3f0ecbe]
  413a74:	aam    0x1c
  413a76:	out    dx,al
  413a77:	or     DWORD PTR [ecx+0x1],eax
  413a7a:	mov    al,ds:0xd9d9c141
  413a7f:	scas   eax,DWORD PTR es:[edi]
  413a80:	dec    eax
  413a81:	sbb    dh,bh
  413a83:	or     dh,al
  413a85:	jecxz  0x413a3d
  413a87:	mov    ecx,0xf4430e20
  413a8c:	mov    esi,0x9311dc59
  413a91:	out    0x91,al
  413a93:	ins    BYTE PTR es:[edi],dx
  413a94:	mov    al,ds:0x7bd241e0
  413a99:	and    ebx,DWORD PTR [eax]
  413a9b:	in     eax,0x1a
  413a9d:	in     al,dx
  413a9e:	retf   
  413a9f:	cmp    ecx,DWORD PTR [eax+0x66]
  413aa2:	sub    al,0x3c
  413aa4:	sub    BYTE PTR [eax-0x59],0x3c
  413aa8:	jg     0x413a89
  413aaa:	sbb    dl,bh
  413aac:	mov    dl,0xb0
  413aae:	stos   BYTE PTR es:[edi],al
  413aaf:	pop    es
  413ab0:	test   al,0xd9
  413ab2:	out    dx,eax
  413ab3:	mov    al,0x41
  413ab5:	sub    BYTE PTR [esp+eiz*8-0x52d63b9a],dh
  413abc:	(bad)  
  413abd:	ins    DWORD PTR es:[edi],dx
  413abe:	(bad)  
  413abf:	ficomp WORD PTR ds:0x213879f3
  413ac5:	adc    bl,BYTE PTR [ebx]
  413ac7:	pop    esi
  413ac8:	mov    WORD PTR [esi-0x6f037292],gs
  413ace:	(bad)  
  413acf:	adc    eax,0x8ba361f2
  413ad4:	sub    al,0xe8
  413ad6:	sar    DWORD PTR [esi*8-0x8695a76],0xb1
  413ade:	ins    BYTE PTR es:[edi],dx
  413adf:	add    edx,edx
  413ae1:	into   
  413ae2:	loope  0x413af2
  413ae4:	mov    cl,0xf6
  413ae6:	sbb    dl,ch
  413ae8:	ror    BYTE PTR [edx+0x5e4d069f],1
  413aee:	clc    
  413aef:	stos   BYTE PTR es:[edi],al
  413af0:	in     eax,0x7
  413af2:	pop    ebp
  413af3:	in     al,dx
  413af4:	inc    edi
  413af5:	mov    edx,0x8650f024
  413afa:	xchg   BYTE PTR [ebx-0x32],cl
  413afd:	push   eax
  413afe:	dec    ebx
  413aff:	dec    eax
  413b00:	dec    ebp
  413b01:	lods   al,BYTE PTR ds:[esi]
  413b02:	jcxz   0x413aba
  413b05:	mov    bl,0x5f
  413b07:	lods   eax,DWORD PTR ds:[esi]
  413b08:	inc    edx
  413b09:	xchg   edx,eax
  413b0a:	int3   
  413b0b:	jecxz  0x413b7b
  413b0d:	xor    BYTE PTR [eax+0x34],0xa9
  413b11:	and    DWORD PTR [esp+eax*2],eax
  413b14:	aam    0xe1
  413b16:	add    BYTE PTR [ecx+0x69],0xf3
  413b1a:	dec    ebx
  413b1b:	adc    al,BYTE PTR [esp+ebx*2]
  413b1e:	mov    cl,0x75
  413b20:	arpl   WORD PTR [edi+0x768986f8],bx
  413b26:	ins    BYTE PTR es:[edi],dx
  413b27:	cmp    BYTE PTR [ebx+0x0],ah
  413b2a:	stos   DWORD PTR es:[edi],eax
  413b2b:	cdq    
  413b2c:	imul   esp,DWORD PTR [eax+0x78cdf0cc],0xa7f5a0e
  413b36:	xor    esi,esi
  413b38:	fsubr  QWORD PTR fs:[edx]
  413b3b:	les    edi,FWORD PTR ds:0x90f77293
  413b41:	es inc ebx
  413b43:	out    0x57,eax
  413b45:	push   esp
  413b46:	aas    
  413b47:	jp     0x413b9a
  413b49:	stos   DWORD PTR es:[edi],eax
  413b4a:	(bad)  
  413b4b:	or     al,0x86
  413b4d:	push   edi
  413b4e:	cwde   
  413b4f:	lahf   
  413b50:	mov    bh,0xb6
  413b52:	pop    ecx
  413b53:	(bad)  
  413b54:	jg     0x413b9e
  413b56:	jle    0x413ba9
  413b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b59:	div    DWORD PTR [edx+esi*1+0x35]
  413b5d:	xchg   DWORD PTR [edi],ebx
  413b5f:	or     dh,BYTE PTR [ebx]
  413b61:	mov    edi,0x319fcb3d
  413b66:	(bad)  
  413b68:	repnz and DWORD PTR [ebp+ebx*1+0x455c7132],ebx
  413b70:	sub    al,0x3a
  413b72:	add    BYTE PTR [esi],bh
  413b74:	leave  
  413b75:	or     ecx,DWORD PTR [edi-0x795a51a7]
  413b7b:	int3   
  413b7c:	(bad)  
  413b7d:	out    0x9c,eax
  413b7f:	mov    bh,0x56
  413b81:	dec    edi
  413b82:	out    0x45,eax
  413b84:	stc    
  413b85:	(bad)  
  413b86:	(bad)  
  413b87:	push   cs
  413b88:	and    al,0x28
  413b8a:	xchg   edi,eax
  413b8b:	xor    edx,DWORD PTR [ebx]
  413b8d:	sbb    BYTE PTR [edi-0x1413fa94],ah
  413b93:	mov    edi,0x78afd1b5
  413b98:	lods   al,BYTE PTR ds:[esi]
  413b99:	iret   
  413b9a:	xchg   edi,eax
  413b9b:	mov    WORD PTR [ecx+ecx*8-0x292608f9],fs
  413ba2:	pop    eax
  413ba3:	push   cs
  413ba4:	enter  0xf42f,0xd3
  413ba8:	or     al,0xe0
  413baa:	adc    DWORD PTR [ebx-0xd7b35b7],esp
  413bb0:	push   0x8f6d1bcf
  413bb5:	test   DWORD PTR [ecx-0x7551bdae],edi
  413bbb:	fs ins DWORD PTR es:[edi],dx
  413bbd:	sub    ecx,ecx
  413bbf:	int3   
  413bc0:	adc    DWORD PTR [ecx],0xffffffea
  413bc3:	sub    al,0x6c
  413bc5:	lock xchg esp,esp
  413bc8:	stos   DWORD PTR es:[edi],eax
  413bc9:	pop    esp
  413bca:	xchg   ebp,eax
  413bcb:	or     al,BYTE PTR [ebx-0x4de76efa]
  413bd1:	es jae 0x413bb5
  413bd4:	in     eax,dx
  413bd5:	cmp    DWORD PTR [eax+eax*2],ecx
  413bd8:	push   0xffffff92
  413bda:	cmp    eax,0x30479d1b
  413bdf:	jge    0x413be9
  413be1:	imul   eax,DWORD PTR [esi+0x6f],0x3c
  413be5:	pop    edx
  413be6:	fldcw  WORD PTR [ecx+0x5]
  413be9:	jg     0x413bd7
  413beb:	sub    eax,0xb9fe9fcf
  413bf0:	fistp  WORD PTR [ebx+0x696976bb]
  413bf6:	mov    bl,0xc3
  413bf8:	bound  edi,QWORD PTR [ebx]
  413bfa:	and    edi,DWORD PTR [esi-0x6e907c5c]
  413c00:	shr    BYTE PTR [ebx+0x65],0xb5
  413c04:	or     DWORD PTR [ebp-0xe],esp
  413c07:	xchg   ebx,eax
  413c08:	aad    0x67
  413c0a:	stos   DWORD PTR es:[edi],eax
  413c0b:	ficom  DWORD PTR [esi-0x4a]
  413c0e:	sbb    esi,edx
  413c10:	cmp    al,0xcc
  413c12:	je     0x413be5
  413c14:	dec    edi
  413c15:	(bad)  
  413c16:	cs mov cl,0x7e
  413c19:	jecxz  0x413c21
  413c1b:	add    eax,ebp
  413c1d:	jbe    0x413bd2
  413c1f:	lods   al,BYTE PTR ds:[esi]
  413c20:	lods   al,BYTE PTR ds:[esi]
  413c21:	adc    esp,esp
  413c23:	stos   DWORD PTR es:[edi],eax
  413c24:	cwde   
  413c25:	call   0x4a12a664
  413c2a:	push   ecx
  413c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c2c:	mov    dh,0x88
  413c2e:	mov    ah,ah
  413c30:	cwde   
  413c31:	mov    ebx,0x3659c4c5
  413c36:	sub    esp,eax
  413c38:	cmp    eax,0x96d27de5
  413c3d:	cld    
  413c3e:	aas    
  413c3f:	jae    0x413bef
  413c41:	rol    BYTE PTR [esi],cl
  413c43:	ss mov esp,0x9164708
  413c49:	and    eax,0x5db59236
  413c4e:	cmp    al,0x76
  413c50:	xchg   esi,eax
  413c51:	fwait
  413c52:	sbb    BYTE PTR ds:0xa377cd53,0xdf
  413c59:	pop    eax
  413c5a:	jl     0x413cc0
  413c5c:	cmp    al,ah
  413c5e:	dec    ebp
  413c5f:	cwde   
  413c60:	(bad)  
  413c61:	push   ds
  413c62:	jl     0x413cb5
  413c64:	lea    eax,[edi-0x3c]
  413c67:	(bad)  
  413c68:	jmp    0xb3f2:0x9369c5df
  413c6f:	push   esp
  413c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c71:	sbb    eax,esi
  413c73:	mov    dl,0x9a
  413c75:	sbb    eax,0xc18b6106
  413c7a:	mov    dh,BYTE PTR [ebp+eiz*4-0xe560a7b]
  413c81:	ins    BYTE PTR es:[edi],dx
  413c82:	hlt    
  413c83:	dec    esp
  413c84:	push   ss
  413c85:	or     bl,BYTE PTR [esi]
  413c87:	pop    edx
  413c88:	pop    edi
  413c89:	jb     0x413c0f
  413c8b:	loop   0x413c69
  413c8d:	popa   
  413c8e:	or     edi,ebx
  413c90:	or     al,0x66
  413c92:	(bad)  
  413c93:	xor    DWORD PTR [eax-0x6a5f66e2],eax
  413c99:	push   esp
  413c9a:	cmp    bl,BYTE PTR [ecx]
  413c9c:	cmp    al,0x82
  413c9e:	mov    esi,DWORD PTR [esi+edx*2-0x1a]
  413ca2:	xor    eax,0x4bd4a1f7
  413ca7:	sar    DWORD PTR [eax-0x2e2ffd11],1
  413cad:	inc    ecx
  413cae:	fwait
  413caf:	nop
  413cb0:	push   ds
  413cb1:	lock or ecx,eax
  413cb4:	loop   0x413d2f
  413cb6:	dec    ebp
  413cb7:	sti    
  413cb8:	ret    
  413cb9:	cmp    DWORD PTR [edi+0xcd42f63],ecx
  413cbf:	ds pushf 
  413cc1:	iret   
  413cc2:	and    ebx,DWORD PTR [eax-0x6f025d0c]
  413cc8:	je     0x413cf1
  413cca:	xor    DWORD PTR [ebp-0x1],edx
  413ccd:	xor    bl,BYTE PTR [ecx]
  413ccf:	stc    
  413cd0:	cmp    al,0xa9
  413cd2:	int3   
  413cd3:	lods   al,BYTE PTR ds:[esi]
  413cd4:	fimul  WORD PTR [eax-0x593cf296]
  413cda:	outs   dx,BYTE PTR ds:[esi]
  413cdb:	cmc    
  413cdc:	repz add BYTE PTR [ecx],ah
  413cdf:	push   ebp
  413ce0:	test   DWORD PTR [edx+0x466cd486],edx
  413ce6:	cmp    BYTE PTR [edi],bh
  413ce8:	mov    DWORD PTR [edi],edi
  413cea:	jmp    0x413d51
  413cec:	sbb    eax,0x898b455f
  413cf1:	(bad)  
  413cf2:	pop    edi
  413cf3:	test   eax,0xb289ecd8
  413cf8:	cwde   
  413cf9:	mov    eax,ds:0x48997b4c
  413cfe:	xor    eax,0xeea7068d
  413d03:	cmp    BYTE PTR [eax],0x8f
  413d06:	mov    ss,ebx
  413d08:	(bad)
  413d0b:	repz xchg ecx,esp
  413d0e:	jg     0x413d07
  413d10:	scas   al,BYTE PTR es:[edi]
  413d11:	arpl   WORD PTR [eax+eiz*1+0x659f2204],bp
  413d18:	es mov eax,0xa5fd3e06
  413d1e:	sti    
  413d1f:	or     ebx,DWORD PTR [ebp+edi*1-0x75226f90]
  413d26:	mov    edx,0x54907775
  413d2b:	inc    esp
  413d2c:	xchg   DWORD PTR ss:[eax+0x161dd942],esp
  413d33:	clc    
  413d34:	cs jne 0x413d27
  413d37:	and    eax,0x5416fa2f
  413d3c:	pop    es
  413d3d:	xchg   ebx,eax
  413d3e:	fbstp  TBYTE PTR [ebx+edx*8+0x52758b57]
  413d45:	inc    ebx
  413d46:	and    ecx,DWORD PTR [ecx]
  413d48:	xor    BYTE PTR [edx-0x728f2509],0xde
  413d4f:	aam    0x65
  413d51:	mov    bl,0xc0
  413d53:	pop    ebx
  413d54:	(bad)  
  413d55:	imul   DWORD PTR [edi+0x1f]
  413d58:	push   ds
  413d59:	xor    DWORD PTR [ebp-0x69],0xf85a8525
  413d60:	enter  0x6194,0x18
  413d64:	jns    0x413d5f
  413d66:	loope  0x413d33
  413d68:	push   esi
  413d69:	jle    0x413d94
  413d6b:	dec    ecx
  413d6c:	and    eax,DWORD PTR [ecx-0x13]
  413d6f:	push   edi
  413d70:	loopne 0x413d88
  413d72:	or     esi,DWORD PTR [edx-0x21]
  413d75:	push   es
  413d76:	add    BYTE PTR [ebx+0x4d],0xc6
  413d7a:	inc    edx
  413d7b:	hlt    
  413d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d7d:	xchg   edi,eax
  413d7e:	jbe    0x413d59
  413d80:	je     0x413d79
  413d82:	lods   al,BYTE PTR ds:[esi]
  413d83:	lods   al,BYTE PTR ds:[esi]
  413d84:	mov    ch,0x7b
  413d86:	lock icebp 
  413d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d89:	dec    ebp
  413d8a:	pop    edi
  413d8b:	push   eax
  413d8c:	jg     0x413d65
  413d8e:	push   cs
  413d8f:	es xor ch,ah
  413d92:	inc    edx
  413d93:	add    al,0x36
  413d95:	push   cs
  413d96:	fsub   st,st(3)
  413d98:	jo     0x413d1b
  413d9a:	(bad)  
  413d9b:	cmc    
  413d9c:	ret    
  413d9d:	sbb    DWORD PTR [edi-0x67],esp
  413da0:	bnd jg 0x413def
  413da3:	cmp    eax,0x340f7a8c
  413da8:	adc    al,ch
  413daa:	jecxz  0x413dc9
  413dac:	in     al,0x68
  413dae:	xchg   esi,eax
  413daf:	shl    BYTE PTR [ebx+0x28],cl
  413db2:	rcl    BYTE PTR [edx+0x29a55c9e],1
  413db8:	fsub   QWORD PTR [esi]
  413dba:	or     ebp,0xffffff84
  413dbd:	sbb    DWORD PTR [ecx-0x93b76db],0x7b
  413dc4:	inc    edi
  413dc5:	dec    esi
  413dc6:	lahf   
  413dc7:	mov    ecx,0x9881cc09
  413dcc:	sbb    eax,0x2c18d879
  413dd1:	xchg   BYTE PTR [edx+0x7a903ced],ah
  413dd7:	dec    edi
  413dd8:	add    al,0x15
  413dda:	ret    
  413ddb:	in     al,dx
  413ddc:	stos   BYTE PTR es:[edi],al
  413ddd:	int    0xa5
  413ddf:	addr16 pop ebp
  413de1:	imul   ebx,DWORD PTR [ebx-0x31],0x60
  413de5:	mov    ebx,0xf7bd2f6e
  413dea:	jg     0x413e42
  413dec:	lahf   
  413ded:	mov    edx,DWORD PTR [esi-0xddc4d06]
  413df3:	xchg   BYTE PTR [eax-0x69ba7119],al
  413df9:	sub    DWORD PTR [edi],edi
  413dfb:	inc    esp
  413dfc:	inc    eax
  413dfd:	adc    al,ah
  413dff:	mov    eax,ds:0xb4f0d1aa
  413e04:	and    al,0x12
  413e06:	push   ebp
  413e07:	mov    eax,0x564706b8
  413e0c:	sbb    DWORD PTR [ecx-0x707cabbf],ebx
  413e12:	push   es
  413e13:	mul    DWORD PTR [esi+edx*4]
  413e16:	clc    
  413e17:	xor    eax,esi
  413e19:	sar    BYTE PTR ds:0xbd7611c8,1
  413e1f:	adc    eax,0xc95869f7
  413e24:	sub    bh,bh
  413e26:	pusha  
  413e27:	stc    
  413e28:	scas   al,BYTE PTR es:[edi]
  413e29:	(bad)  
  413e2a:	push   0x43
  413e2c:	jge    0x413e59
  413e2e:	pushf  
  413e2f:	cli    
  413e30:	adc    ebp,DWORD PTR [ebx-0x47094f5d]
  413e36:	cmp    eax,DWORD PTR [ecx+0x693b452c]
  413e3c:	inc    edx
  413e3d:	inc    eax
  413e3e:	pop    edx
  413e3f:	or     ah,BYTE PTR [eax-0x3e8d24d1]
  413e45:	pop    ss
  413e46:	scas   al,BYTE PTR es:[edi]
  413e47:	and    BYTE PTR [ebx-0x5a557a00],dh
  413e4d:	or     DWORD PTR [ebx+ecx*8+0xc],eax
  413e51:	xchg   ebx,eax
  413e52:	push   ebp
  413e53:	ret    
  413e54:	sub    ah,ah
  413e56:	(bad)  
  413e57:	call   0x6a7b5dd4
  413e5c:	cli    
  413e5d:	xor    ah,BYTE PTR [edi-0x3ba80a25]
  413e63:	aaa    
  413e64:	aaa    
  413e65:	loop   0x413e21
  413e67:	xchg   esi,eax
  413e68:	sub    al,dl
  413e6a:	gs inc ebp
  413e6c:	adc    BYTE PTR [edx+0x141e6ec1],bl
  413e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e73:	or     BYTE PTR es:[ebx+0x1b065e15],al
  413e7a:	mov    al,ds:0xa06f0fe4
  413e7f:	sub    eax,0xccbfbb2d
  413e84:	add    BYTE PTR [ebx-0x4bb9b766],dl
  413e8a:	or     ebp,esp
  413e8c:	pusha  
  413e8d:	lods   eax,DWORD PTR ds:[esi]
  413e8e:	aaa    
  413e8f:	sbb    BYTE PTR [eax-0x27d02c93],dh
  413e95:	mov    edi,DWORD PTR [eax+edi*2+0x1c]
  413e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e9a:	(bad)  
  413e9b:	ja     0x413e49
  413e9d:	(bad)  
  413e9e:	mov    dh,0x8e
  413ea0:	cdq    
  413ea1:	sub    BYTE PTR [ecx],ch
  413ea3:	pop    ss
  413ea4:	fiadd  WORD PTR [esp+ebp*8-0x1793848e]
  413eab:	sahf   
  413eac:	loope  0x413e8d
  413eae:	xor    ecx,ebx
  413eb0:	outs   dx,BYTE PTR ds:[esi]
  413eb1:	cmc    
  413eb2:	xchg   edi,eax
  413eb3:	dec    edi
  413eb4:	and    DWORD PTR [ecx-0x198f492c],0x35
  413ebb:	aam    0x51
  413ebd:	out    0xfc,eax
  413ebf:	adc    esp,ebx
  413ec1:	sar    BYTE PTR [ecx-0x68ac3c8a],1
  413ec7:	repz pop ds
  413ec9:	pop    ds
  413eca:	sbb    al,0xd2
  413ecc:	cmc    
  413ecd:	les    eax,FWORD PTR ds:0xcd3cb772
  413ed3:	loopne 0x413e84
  413ed5:	and    al,0x64
  413ed7:	xchg   edi,eax
  413ed8:	inc    edx
  413ed9:	(bad)  
  413eda:	aad    0x50
  413edc:	out    dx,eax
  413edd:	mov    ah,0x6f
  413edf:	pushf  
  413ee0:	and    eax,0x8f3de3a2
  413ee5:	pop    ebp
  413ee6:	mov    bh,0x47
  413ee8:	shr    DWORD PTR [edx+0x2d4df90e],0x5f
  413eef:	cwde   
  413ef0:	dec    ebx
  413ef1:	dec    ecx
  413ef2:	inc    esp
  413ef3:	loope  0x413f36
  413ef5:	dec    edx
  413ef6:	sbb    al,0x98
  413ef8:	and    edx,ecx
  413efa:	sbb    al,0x51
  413efc:	retf   
  413efd:	dec    ebp
  413efe:	dec    edx
  413eff:	popf   
  413f00:	xchg   ebx,eax
  413f01:	lahf   
  413f02:	ds or  al,0xcf
  413f05:	jecxz  0x413f69
  413f07:	xor    al,0x55
  413f09:	and    eax,0x3cf99e42
  413f0e:	mov    esp,0x1af28983
  413f13:	mov    cl,0x45
  413f15:	clc    
  413f16:	sti    
  413f17:	fild   DWORD PTR [edi]
  413f19:	jae    0x413ef0
  413f1b:	aad    0xa2
  413f1d:	(bad)  
  413f1e:	mov    ss:0x24e8462d,al
  413f24:	sbb    al,0x67
  413f26:	mov    esi,0x4562c9b3
  413f2b:	mov    dl,dh
  413f2d:	pop    esi
  413f2e:	(bad)  
  413f2f:	jne    0x413f44
  413f31:	leave  
  413f32:	inc    edx
  413f33:	ds leave 
  413f35:	add    eax,0x7c91473c
  413f3a:	cmp    dh,BYTE PTR [ebp+0x2e]
  413f3d:	jp     0x413ed1
  413f3f:	outs   dx,BYTE PTR ds:[esi]
  413f40:	das    
  413f41:	cmp    cl,BYTE PTR [ecx+ebx*1]
  413f44:	add    ecx,DWORD PTR ds:0x1e4b92b8
  413f4a:	xchg   ebx,eax
  413f4b:	das    
  413f4c:	pop    edi
  413f4d:	loopne 0x413ed2
  413f4f:	pop    esi
  413f50:	xchg   edx,eax
  413f51:	les    edi,FWORD PTR [edx+0x52]
  413f54:	xor    al,BYTE PTR es:[ebp+0x53de1db0]
  413f5b:	nop
  413f5c:	mov    ds:0x27a54322,eax
  413f61:	test   WORD PTR [eax-0x5b],0x8f59
  413f67:	mov    dh,0xf1
  413f69:	xchg   esi,eax
  413f6a:	scas   eax,DWORD PTR es:[edi]
  413f6b:	lods   eax,DWORD PTR ds:[esi]
  413f6c:	daa    
  413f6d:	repnz cwde 
  413f6f:	(bad)  
  413f70:	jge    0x413f67
  413f72:	mul    bl
  413f74:	mov    ds:0x345eb365,eax
  413f79:	aad    0x12
  413f7b:	fild   DWORD PTR [esi+0x37]
  413f7e:	popf   
  413f7f:	stos   DWORD PTR es:[edi],eax
  413f80:	out    0x91,al
  413f82:	outs   dx,BYTE PTR ds:[esi]
  413f83:	mov    ch,0x67
  413f85:	mov    ds:0xc1afc017,al
  413f8a:	sub    ecx,DWORD PTR [esi+edi*4]
  413f8d:	push   ds
  413f8e:	sub    ecx,DWORD PTR [edx-0x9]
  413f91:	test   DWORD PTR [ebp-0x40a322bf],0xea5071c0
  413f9b:	ss in  eax,dx
  413f9d:	jmp    0x4e5c:0x2f2f8f91
  413fa4:	fwait
  413fa5:	das    
  413fa6:	push   cs
  413fa7:	(bad)  
  413fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa9:	jmp    0x3fff:0x9c655a5b
  413fb0:	or     BYTE PTR [esi+0x41],ch
  413fb3:	cmp    ecx,ebx
  413fb5:	jge    0x413f5a
  413fb7:	js     0x41401e
  413fb9:	inc    edi
  413fba:	(bad)  
  413fbb:	cmp    DWORD PTR [esi+eiz*4],edi
  413fbe:	hlt    
  413fbf:	repnz fist DWORD PTR [ebx+0x73]
  413fc3:	mov    esi,0x9e3bed41
  413fc8:	sub    eax,0x42b26932
  413fcd:	mov    eax,ds:0x81ace9ca
  413fd2:	inc    ebp
  413fd3:	mov    ebp,0x36a48653
  413fd8:	cmp    dl,0x59
  413fdb:	add    cl,BYTE PTR [edi]
  413fdd:	popa   
  413fde:	enter  0x4aa2,0x61
  413fe2:	loopne 0x414056
  413fe4:	mov    al,0xf0
  413fe6:	mov    ch,0x4d
  413fe8:	ror    BYTE PTR [ebp-0x48],1
  413feb:	rcl    eax,cl
  413fed:	cmp    BYTE PTR [ebx],bl
  413fef:	mov    ecx,0x8335826d
  413ff4:	mov    esp,0x2ea6cc05
  413ff9:	ret    0xbe79
  413ffc:	daa    
  413ffd:	xchg   ecx,eax
  413ffe:	sub    BYTE PTR [ecx+0x65f915bb],0xb0
  414005:	push   0x6931c4ae
  41400a:	or     eax,0x5c656130
  41400f:	out    dx,al
  414010:	(bad)  
  414011:	cs movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414014:	xor    al,0x64
  414016:	pop    edi
  414017:	xchg   esp,eax
  414018:	sbb    DWORD PTR [ecx-0x23],ebp
  41401b:	cld    
  41401c:	add    BYTE PTR [edi+0x23],dl
  41401f:	cdq    
  414020:	jle    0x414036
  414022:	add    eax,0xc6638abe
  414027:	fs push 0x19
  41402a:	fidiv  WORD PTR [edx+0x44923107]
  414030:	mov    bl,0x1d
  414032:	jle    0x414042
  414034:	add    BYTE PTR [edx-0x17eeabbd],dl
  41403a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41403b:	pop    eax
  41403c:	(bad)  
  41403d:	mov    ah,0xf8
  41403f:	call   0x8e1:0xf00b5195
  414046:	mov    al,ds:0x49e5ea97
  41404b:	mov    al,ds:0xf33c9441
  414050:	inc    eax
  414051:	dec    esp
  414052:	mov    bl,0xb
  414054:	les    eax,FWORD PTR [ebx]
  414056:	cmp    al,BYTE PTR [ebx-0x76515433]
  41405c:	mov    cl,0x34
  41405e:	stos   BYTE PTR es:[edi],al
  41405f:	xchg   esi,eax
  414060:	cmp    edx,ecx
  414062:	(bad)  
  414063:	js     0x4140d2
  414065:	push   0xe04e5da0
  41406a:	outs   dx,DWORD PTR ds:[esi]
  41406b:	ds inc ebx
  41406d:	leave  
  41406e:	out    dx,eax
  41406f:	cpuid  
  414071:	cdq    
  414072:	mov    al,0x99
  414074:	popa   
  414075:	cdq    
  414076:	arpl   WORD PTR [esi-0x1],dx
  414079:	ret    0x18cb
  41407c:	cld    
  41407d:	pop    eax
  41407e:	scas   eax,DWORD PTR es:[edi]
  41407f:	stc    
  414080:	sub    ebp,esp
  414082:	popf   
  414083:	mov    ds:0xe5d93dbf,eax
  414088:	jnp    0x4140b6
  41408a:	arpl   WORD PTR ds:0x20d2f49b,di
  414090:	xor    al,0xb4
  414092:	pop    es
  414093:	arpl   cx,bx
  414095:	fsub   DWORD PTR [eax-0x67]
  414098:	pop    ds
  414099:	or     ch,ah
  41409b:	cmp    al,0xfb
  41409d:	ins    DWORD PTR es:[edi],dx
  41409e:	sbb    edx,DWORD PTR [eax+0x41]
  4140a1:	xchg   edi,eax
  4140a2:	dec    esi
  4140a3:	dec    ebx
  4140a4:	rcr    DWORD PTR [esi-0x40],0x40
  4140a8:	fld    QWORD PTR [ecx+0x31]
  4140ab:	add    eax,0xab230737
  4140b0:	xchg   edi,eax
  4140b1:	lock or ebp,DWORD PTR [edi-0x1e1ba2e2]
  4140b8:	retf   0x4045
  4140bb:	jno    0x4140b2
  4140bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140be:	int    0xf2
  4140c0:	or     BYTE PTR [ecx],dl
  4140c2:	mov    ds:0x4448881d,al
  4140c7:	push   ebx
  4140c8:	dec    eax
  4140c9:	add    bh,bl
  4140cb:	add    edx,DWORD PTR [edi]
  4140cd:	shl    BYTE PTR [eax-0x363fbade],cl
  4140d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140d4:	ja     0x414076
  4140d6:	jno    0x4140e1
  4140d8:	out    0xcd,al
  4140da:	cmc    
  4140db:	mov    al,0xb3
  4140dd:	sub    ecx,DWORD PTR [ebp-0xe]
  4140e0:	pop    ds
  4140e1:	dec    eax
  4140e2:	cdq    
  4140e3:	sbb    BYTE PTR ds:0x136d76af,dl
  4140e9:	(bad)  
  4140ea:	loope  0x4140d7
  4140ec:	loop   0x4140af
  4140ee:	push   esp
  4140ef:	retf   
  4140f0:	arpl   WORD PTR [ebp+edi*4-0x19883f8d],si
  4140f7:	push   0x86b10340
  4140fc:	mov    DWORD PTR [edx-0x64],edx
  4140ff:	ret    
  414100:	call   0x3059d56c
  414105:	xchg   edx,eax
  414106:	sbb    DWORD PTR [ebx+0x27],eax
  414109:	pop    eax
  41410a:	xchg   DWORD PTR [ecx-0x11],ebx
  41410d:	jae    0x4140d0
  41410f:	sahf   
  414110:	jl     0x414175
  414112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414113:	mov    edx,0xe1e528dc
  414118:	shl    BYTE PTR [edx+0x1b],cl
  41411b:	pusha  
  41411c:	jg     0x414184
  41411e:	ins    DWORD PTR es:[edi],dx
  41411f:	dec    esp
  414120:	sbb    DWORD PTR [esi-0x14],ecx
  414123:	xchg   esi,eax
  414124:	or     dh,BYTE PTR [eax]
  414126:	retf   
  414127:	and    BYTE PTR [ebp-0x51],ch
  41412a:	test   BYTE PTR [edi-0x7f],ch
  41412d:	das    
  41412e:	mov    db0,ecx
  414131:	xor    DWORD PTR [ecx],ebp
  414133:	push   ebx
  414134:	mov    bl,0xed
  414136:	sti    
  414137:	fisubr WORD PTR [ebx-0x19]
  41413a:	xor    al,ah
  41413c:	dec    edx
  41413d:	popa   
  41413e:	cmp    eax,0xc64e4f34
  414143:	xor    edx,DWORD PTR [ecx]
  414145:	add    DWORD PTR [bp+si+0x48b2],edi
  41414a:	test   DWORD PTR [ecx],ecx
  41414c:	cmp    dh,bl
  41414e:	mov    ah,0x7f
  414150:	add    eax,0x42c7f136
  414155:	dec    ecx
  414156:	hlt    
  414157:	sbb    BYTE PTR [ecx],ch
  414159:	or     ah,BYTE PTR [ecx-0x45]
  41415c:	xor    ah,BYTE PTR [ebx+0x4f6ed68e]
  414162:	int3   
  414163:	cmp    BYTE PTR [ecx],dl
  414165:	scas   al,BYTE PTR es:[edi]
  414166:	loope  0x414150
  414168:	div    cl
  41416a:	mov    eax,edi
  41416c:	dec    esp
  41416d:	xchg   DWORD PTR [eax+0x14],esp
  414170:	sbb    esp,0xd9ed3007
  414176:	xor    BYTE PTR [ecx-0x70],dl
  414179:	(bad)  
  41417a:	out    0x0,eax
  41417c:	xchg   esi,eax
  41417d:	cmp    bh,BYTE PTR [ebx]
  41417f:	add    edi,DWORD PTR [eax+0x59]
  414182:	mov    ds:0x5d2148ee,al
  414187:	xchg   ebx,eax
  414188:	lea    ecx,[ebx-0x22872f3f]
  41418e:	xlat   BYTE PTR ds:[ebx]
  41418f:	out    dx,eax
  414190:	int    0xed
  414192:	cmp    al,0xda
  414194:	in     al,dx
  414195:	out    dx,al
  414196:	xor    DWORD PTR [edi+0x66],edx
  414199:	aaa    
  41419a:	fwait
  41419b:	repz sbb DWORD PTR [edi-0x74e7b7a9],edx
  4141a2:	or     BYTE PTR [ebp+0x13],0x23
  4141a6:	test   BYTE PTR [edi+eiz*1+0x70],dh
  4141aa:	cmp    eax,0x2d63aeaf
  4141af:	push   ds
  4141b0:	sbb    esp,DWORD PTR [esi+0x45fd418]
  4141b6:	and    DWORD PTR [edx+0x30],esi
  4141b9:	push   ss
  4141ba:	lock pop eax
  4141bc:	cmp    ch,0x9e
  4141bf:	icebp  
  4141c0:	jl     0x4141ab
  4141c2:	icebp  
  4141c3:	sahf   
  4141c4:	or     al,BYTE PTR [eax-0x16]
  4141c7:	or     BYTE PTR [ecx-0x30ba3965],dl
  4141cd:	test   eax,0x88e3709d
  4141d2:	mov    edx,0xda01f3da
  4141d7:	adc    al,0x89
  4141d9:	shr    ah,cl
  4141db:	pop    esp
  4141dc:	dec    ebx
  4141dd:	fwait
  4141de:	add    BYTE PTR [edi-0x6291c64e],dl
  4141e4:	inc    edi
  4141e5:	sub    bl,BYTE PTR [edi-0x2e]
  4141e8:	push   ebp
  4141e9:	mov    eax,0x86de3270
  4141ee:	rol    BYTE PTR [ecx-0x6b90ba47],0x95
  4141f5:	xchg   esp,eax
  4141f6:	adc    DWORD PTR [eax],esi
  4141f8:	pop    eax
  4141f9:	jae    0x4141de
  4141fb:	repnz stos BYTE PTR es:[edi],al
  4141fd:	mov    dh,0x1a
  4141ff:	(bad)  
  414200:	call   0x19aa295f
  414205:	push   eax
  414206:	retw   
  414208:	pushf  
  414209:	cs loopne 0x41427e
  41420c:	sub    BYTE PTR [esi-0x25a8f416],dh
  414212:	loope  0x414242
  414214:	jae    0x41428c
  414216:	shr    cl,1
  414218:	pop    ss
  414219:	adc    bh,bl
  41421b:	fisub  WORD PTR [ebx+edx*1+0x7]
  41421f:	sbb    al,0x2
  414221:	mov    eax,0x5e9df5d3
  414226:	imul   esi,ecx,0xf45731e7
  41422c:	inc    ecx
  41422d:	mov    bh,BYTE PTR [ecx+0x7e]
  414230:	in     eax,0xa0
  414232:	and    al,0xd6
  414234:	jne    0x4142ac
  414236:	inc    ebp
  414237:	xchg   edi,eax
  414238:	ins    BYTE PTR es:[edi],dx
  414239:	sbb    al,0xb3
  41423b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41423c:	xor    eax,0xe77df10b
  414241:	adc    DWORD PTR [ecx-0x360542b4],ebx
  414247:	jmp    0x5035dfc6
  41424c:	add    al,0xb6
  41424e:	and    si,sp
  414251:	shufps xmm6,XMMWORD PTR [edi-0x14fed979],0x63
  414259:	lds    eax,FWORD PTR [ebx+edx*2]
  41425c:	ficomp WORD PTR [ebx]
  41425e:	adc    eax,0x3f974a45
  414263:	(bad)  
  414264:	out    0xcb,eax
  414266:	sti    
  414267:	cmp    DWORD PTR [edx],eax
  414269:	in     al,dx
  41426a:	xor    dh,BYTE PTR [ecx-0x6c]
  41426d:	cdq    
  41426e:	sub    al,0xd
  414270:	sub    DWORD PTR ds:0xd04b3754,eax
  414276:	shl    ebp,cl
  414278:	aam    0xa6
  41427a:	push   ss
  41427b:	sbb    bl,BYTE PTR ds:0xff07dd99
  414281:	push   0xffffff89
  414283:	mov    esp,0x28dee5e7
  414288:	inc    esi
  414289:	int3   
  41428a:	mov    ds:0x9fb66aca,al
  41428f:	inc    ebp
  414290:	adc    BYTE PTR [ebx+0x58],cl
  414293:	xor    edi,ebp
  414295:	mov    cl,0xf2
  414297:	mov    cl,0xa2
  414299:	cdq    
  41429a:	jmp    FWORD PTR [ebx-0x1d]
  41429d:	inc    eax
  41429e:	dec    ebx
  41429f:	pushf  
  4142a0:	pop    edx
  4142a1:	or     al,0x18
  4142a3:	dec    ebp
  4142a4:	ins    BYTE PTR es:[edi],dx
  4142a5:	mov    ch,0x1c
  4142a7:	scas   eax,DWORD PTR es:[edi]
  4142a8:	or     dx,WORD PTR [ebx]
  4142ab:	out    dx,al
  4142ac:	cmp    ecx,DWORD PTR [edi-0x75]
  4142af:	stos   DWORD PTR es:[edi],eax
  4142b0:	pop    esi
  4142b1:	push   cs
  4142b2:	sub    bl,BYTE PTR [eax+0x5028617f]
  4142b8:	pop    ebx
  4142b9:	push   cs
  4142ba:	sub    al,0xd4
  4142bc:	test   edx,esi
  4142be:	fidiv  DWORD PTR [esi+0x6902e999]
  4142c4:	mov    esp,0x17022257
  4142c9:	lods   al,BYTE PTR ds:[esi]
  4142ca:	retf   
  4142cb:	cmp    dl,BYTE PTR [esi+edi*8+0x76]
  4142cf:	mov    ebp,0xa3f780
  4142d4:	pushf  
  4142d5:	pop    edi
  4142d6:	jb     0x41425a
  4142d8:	mov    bh,0x6c
  4142da:	test   ch,cl
  4142dc:	push   esi
  4142dd:	lea    esi,[edi]
  4142df:	into   
  4142e0:	(bad)  [ecx]
  4142e2:	aam    0x62
  4142e4:	sbb    ecx,ebp
  4142e6:	je     0x414345
  4142e8:	call   FWORD PTR [esi]
  4142ea:	push   0xa065d3f6
  4142ef:	inc    eax
  4142f0:	push   ss
  4142f1:	inc    eax
  4142f2:	test   al,0xe4
  4142f4:	xor    eax,0x66d32f5e
  4142f9:	mov    dl,0xf3
  4142fb:	push   edi
  4142fc:	add    DWORD PTR [edx],edi
  4142fe:	inc    ebp
  4142ff:	cmp    ebx,edi
  414301:	ja     0x4142fe
  414303:	scas   al,BYTE PTR es:[edi]
  414304:	xchg   ebp,eax
  414305:	dec    edi
  414306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414307:	adc    eax,0x821ffd3b
  41430c:	sub    eax,0x22ad748d
  414311:	adc    al,0xa
  414313:	pop    eax
  414314:	loop   0x4142b8
  414316:	mov    WORD PTR [ebx],gs
  414318:	sub    al,0xea
  41431a:	xchg   ecx,eax
  41431b:	jne    0x41432f
  41431d:	imul   esp,DWORD PTR [ecx-0x7c],0x23af468d
  414324:	icebp  
  414325:	in     eax,0xdc
  414327:	loope  0x41436f
  414329:	cmp    eax,0x8aa95e10
  41432e:	jmp    0xc29eb532
  414333:	pusha  
  414334:	mov    ecx,0x6d20c3f9
  414339:	xor    ecx,esi
  41433b:	mov    edi,ds
  41433d:	into   
  41433e:	shl    BYTE PTR [ecx+0x70],cl
  414341:	ret    
  414342:	(bad)  
  414343:	leave  
  414344:	adc    DWORD PTR [edi+esi*2],eax
  414347:	mov    ebx,ebp
  414349:	ret    
  41434a:	xchg   BYTE PTR [edi],bl
  41434c:	and    eax,0xe0232a3d
  414351:	loope  0x414399
  414353:	(bad)  [ebx-0x14]
  414356:	xchg   ebx,eax
  414357:	sbb    dh,dh
  414359:	pop    esi
  41435a:	ret    0x9262
  41435d:	sahf   
  41435e:	mov    ds:0x8825592c,al
  414363:	dec    esp
  414364:	shl    DWORD PTR [ecx-0x32d17ef0],cl
  41436a:	pop    edx
  41436b:	push   ebx
  41436c:	cmp    dh,al
  41436e:	imul   edi,ebx,0xffffffc2
  414371:	or     al,0xaf
  414373:	xlat   BYTE PTR ds:[ebx]
  414374:	pop    ss
  414375:	outs   dx,DWORD PTR ds:[esi]
  414376:	push   edi
  414377:	fld    DWORD PTR [eax+edx*4-0x1ed919f3]
  41437e:	add    al,0xc9
  414380:	and    BYTE PTR [edx-0x6d],0xbf
  414384:	push   eax
  414385:	mov    ch,0xc8
  414387:	dec    esi
  414388:	in     al,dx
  414389:	pop    ecx
  41438a:	add    eax,0x572a15ae
  41438f:	push   ebp
  414390:	cmp    dh,BYTE PTR [ebx+edi*4+0x14]
  414394:	jp     0x414379
  414396:	leave  
  414397:	outs   dx,BYTE PTR ds:[esi]
  414398:	test   BYTE PTR [ebx+0x60ef7924],bh
  41439e:	sbb    al,dl
  4143a0:	jne    0x414412
  4143a2:	lea    ebx,[ebx-0x171f1226]
  4143a8:	popa   
  4143a9:	mov    ecx,0x519aab63
  4143ae:	dec    ebx
  4143af:	mov    DWORD PTR [ebx-0x6d],ebp
  4143b2:	int3   
  4143b3:	arpl   WORD PTR [esi],bp
  4143b5:	push   ebx
  4143b6:	jmp    0xdcf6:0x6b62a0cc
  4143bd:	je     0x414427
  4143bf:	test   eax,0x2a7cf32d
  4143c4:	add    eax,0xf0f0350c
  4143c9:	loop   0x4143e0
  4143cb:	outs   dx,DWORD PTR ds:[esi]
  4143cc:	faddp  st(2),st
  4143ce:	ins    DWORD PTR es:[edi],dx
  4143cf:	or     ebp,ebx
  4143d1:	and    eax,DWORD PTR [edx-0x53]
  4143d4:	xchg   edi,eax
  4143d5:	mov    esp,0x260166d7
  4143da:	daa    
  4143db:	in     eax,dx
  4143dc:	loop   0x414431
  4143de:	xchg   esp,eax
  4143df:	in     al,0x35
  4143e1:	dec    eax
  4143e2:	add    ebp,edi
  4143e4:	push   ecx
  4143e5:	push   0xbeac6541
  4143ea:	push   ebx
  4143eb:	std    
  4143ec:	sub    eax,0x4d22e760
  4143f1:	adc    eax,0xe0cc43a3
  4143f6:	ins    BYTE PTR es:[edi],dx
  4143f7:	icebp  
  4143f8:	xor    al,0x71
  4143fa:	push   ss
  4143fb:	int3   
  4143fc:	mov    esi,ds
  4143fe:	sbb    ah,BYTE PTR cs:[edi]
  414401:	mov    ds:0x5f2c4621,al
  414406:	inc    eax
  414407:	and    al,0xc
  414409:	pusha  
  41440a:	scas   eax,DWORD PTR es:[edi]
  41440b:	cmp    eax,0xc39ac3dc
  414410:	fnsave [esi+0x3]
  414413:	dec    ebp
  414414:	dec    ebx
  414415:	inc    ebx
  414416:	sbb    al,0x1f
  414418:	cmp    BYTE PTR [ecx-0xd1cb599],ah
  41441e:	xlat   BYTE PTR ds:[ebx]
  41441f:	inc    ebx
  414420:	sub    al,BYTE PTR [esi-0x57c4ffa6]
  414426:	loop   0x41448a
  414428:	adc    al,0xc8
  41442a:	sbb    DWORD PTR [ecx-0x2d],ecx
  41442d:	ss xchg esi,eax
  41442f:	nop    eax
  414432:	rcr    ch,cl
  414434:	mov    eax,0xef46ccb
  414439:	mov    ds,WORD PTR [eax+0x24]
  41443c:	xor    ah,BYTE PTR [ebx]
  41443e:	mov    ds:0x35590a65,eax
  414443:	pop    esi
  414444:	jbe    0x414489
  414446:	pusha  
  414447:	or     al,0x89
  414449:	cmp    ebx,ecx
  41444b:	or     dl,al
  41444d:	arpl   di,dx
  41444f:	dec    edx
  414450:	mov    BYTE PTR [eax-0x4e62fed2],bh
  414456:	rcr    ebx,0x0
  414459:	jns    0x414479
  41445b:	lods   eax,DWORD PTR ds:[esi]
  41445c:	sub    cl,ch
  41445e:	clc    
  41445f:	in     al,0x6e
  414461:	daa    
  414462:	or     DWORD PTR [ecx-0x363612be],ebp
  414468:	push   cs
  414469:	(bad)  
  41446a:	add    eax,0x4d33dd5
  41446f:	push   esi
  414470:	out    0x5c,eax
  414472:	leave  
  414473:	fstp   DWORD PTR [ebx+0x0]
  414476:	cld    
  414477:	int3   
  414478:	and    BYTE PTR [ecx-0x76],ch
  41447b:	pushf  
  41447c:	sbb    bh,BYTE PTR [eax-0x50655525]
  414482:	fnstsw WORD PTR [ebx+eiz*2-0x3ccbe026]
  414489:	xor    eax,0x996ab435
  41448e:	jmp    0x4144e4
  414490:	stc    
  414491:	aas    
  414492:	mov    al,dh
  414494:	stos   DWORD PTR es:[edi],eax
  414495:	int    0xe1
  414497:	mov    al,ds:0xf056459b
  41449c:	cwde   
  41449d:	sub    al,0xb3
  41449f:	dec    eax
  4144a0:	lea    esp,[edx+esi*8+0xa]
  4144a4:	test   BYTE PTR [esi+ebx*4-0x700456ca],dl
  4144ab:	test   BYTE PTR [ebp-0x40],ah
  4144ae:	push   edx
  4144af:	out    dx,al
  4144b0:	popa   
  4144b1:	or     bh,BYTE PTR [eax+0x7a770737]
  4144b7:	out    dx,eax
  4144b8:	or     eax,DWORD PTR [edi+0x5e]
  4144bb:	xcrypt-cbc (bad)
  4144bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144bd:	xchg   edi,eax
  4144be:	je     0x41447c
  4144c0:	adc    eax,0x17c77bec
  4144c5:	pop    ss
  4144c6:	imul   esp,DWORD PTR [eax+0x28],0xc
  4144ca:	das    
  4144cb:	iret   
  4144cc:	pop    edx
  4144cd:	adc    dh,BYTE PTR [ebx+0x801fdb3]
  4144d3:	inc    edi
  4144d4:	sub    DWORD PTR [ebx],esp
  4144d6:	inc    edx
  4144d7:	and    esp,ecx
  4144d9:	shl    DWORD PTR [edx-0x538f9515],0x84
  4144e0:	mov    ?,WORD PTR [esi]
  4144e2:	cwde   
  4144e3:	jnp    0x4144df
  4144e5:	mov    ebp,0xd13c719d
  4144ea:	mov    al,ds:0xfa27fdcb
  4144ef:	and    esi,DWORD PTR [ecx+0x40d00a41]
  4144f5:	sub    al,0x28
  4144f7:	fucomp st(6)
  4144f9:	ret    
  4144fa:	retf   
  4144fb:	lds    edx,FWORD PTR [ebx-0x6896ab1b]
  414501:	jb     0x414501
  414503:	xchg   esi,eax
  414504:	popf   
  414505:	mov    bh,0xfd
  414507:	and    eax,0xa4a5d9be
  41450c:	fnstenv [edi+0x69]
  41450f:	mov    DWORD PTR [edx],ecx
  414511:	xchg   edx,eax
  414512:	out    0x66,eax
  414514:	dec    esi
  414515:	mov    ebx,0xe3f8d810
  41451a:	mov    eax,0x44891cda
  41451f:	adc    edx,eax
  414521:	mov    bh,0xc9
  414523:	shr    esp,0x94
  414526:	jge    0x414596
  414528:	pop    ss
  414529:	mov    ebp,0x67d3b104
  41452e:	sbb    ecx,DWORD PTR [edi+0x1751e0a6]
  414534:	pushf  
  414535:	cmp    eax,0x1ed75904
  41453a:	ss iret 
  41453c:	add    esp,esi
  41453e:	je     0x4144e2
  414540:	lahf   
  414541:	sbb    DWORD PTR [eax],edi
  414543:	mov    ch,0x8f
  414545:	pop    edi
  414546:	test   al,0xe1
  414548:	mov    ebp,ebp
  41454a:	and    al,BYTE PTR [edx+edi*2+0x69]
  41454e:	sub    BYTE PTR [eax+0x44b16ab7],cl
  414554:	out    dx,al
  414555:	jb     0x41457c
  414557:	fs xlat BYTE PTR gs:[ebx]
  41455a:	dec    ebp
  41455b:	ss jnp 0x4145cd
  41455e:	mov    ecx,0xefb88a2c
  414563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414564:	scas   al,BYTE PTR es:[edi]
  414565:	pop    eax
  414566:	jmp    0xb2654465
  41456b:	idiv   dl
  41456d:	adc    DWORD PTR [esp+ebp*1-0x5dc50cd4],esp
  414574:	inc    ebp
  414575:	je     0x4145a0
  414577:	(bad)  
  414578:	xor    dh,bh
  41457a:	cmp    eax,0xacda6171
  41457f:	aad    0x20
  414581:	xchg   edi,eax
  414582:	add    DWORD PTR [edi*1-0x609c1a50],esp
  414589:	adc    eax,0x3036be25
  41458e:	mov    bl,0xb
  414590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414591:	push   esi
  414592:	fwait
  414593:	loopne 0x4145c2
  414595:	pop    esp
  414596:	mov    DWORD PTR ds:0x49bf13db,esi
  41459c:	stc    
  41459d:	inc    ebp
  41459e:	and    cl,BYTE PTR [ecx-0x1a]
  4145a1:	(bad)  
  4145a2:	fdiv   DWORD PTR [esi-0x23]
  4145a5:	dec    ebp
  4145a6:	into   
  4145a7:	xchg   DWORD PTR ds:0x86e22d55,ebp
  4145ad:	mov    edx,0x9a757e36
  4145b2:	dec    ecx
  4145b3:	adc    al,0xc8
  4145b5:	xchg   esp,eax
  4145b6:	int    0x74
  4145b8:	xor    BYTE PTR [edi+eax*2],cl
  4145bb:	xor    esi,esp
  4145bd:	push   ebx
  4145be:	jno    0x414616
  4145c0:	jle    0x414591
  4145c2:	mov    ds:0xb81236ee,eax
  4145c7:	dec    ebx
  4145c8:	sub    BYTE PTR [ebx],dh
  4145ca:	mov    ebx,0x4c93f005
  4145cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d0:	mov    dh,0xa8
  4145d2:	scas   al,BYTE PTR es:[edi]
  4145d3:	sbb    eax,0xa4b38cf6
  4145d8:	pusha  
  4145d9:	inc    ebp
  4145da:	call   0x3512:0x55cd0824
  4145e1:	mov    ch,0x37
  4145e3:	inc    ebp
  4145e4:	inc    esp
  4145e5:	mov    ebp,0xaf3a926d
  4145ea:	dec    ecx
  4145eb:	test   BYTE PTR [ebx-0x25],0x7
  4145ef:	loop   0x4145bc
  4145f1:	daa    
  4145f2:	rol    bh,0x18
  4145f5:	js     0x41460a
  4145f7:	sub    ebx,edx
  4145f9:	push   edi
  4145fa:	dec    eax
  4145fb:	or     al,bh
  4145fd:	jmp    0xa763:0x2f00c18a
  414604:	ins    DWORD PTR es:[edi],dx
  414605:	pop    ebx
  414606:	inc    DWORD PTR ds:0x9355fbd6
  41460c:	popf   
  41460d:	lods   al,BYTE PTR ds:[esi]
  41460e:	cmp    ch,BYTE PTR [edx-0xd3aa0f9]
  414614:	retf   
  414615:	ret    
  414616:	push   edx
  414617:	inc    esi
  414618:	mov    dl,0x37
  41461a:	in     al,dx
  41461b:	ins    BYTE PTR es:[edi],dx
  41461c:	aad    0xef
  41461e:	neg    DWORD PTR [ebx-0x7e31b607]
  414624:	pop    eax
  414625:	clc    
  414626:	(bad)  
  414627:	cs shl edx,cl
  41462a:	fxch   st(2)
  41462c:	xchg   esp,eax
  41462d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41462e:	or     DWORD PTR [edx-0x41b635be],0x174de8f7
  414638:	xchg   ebx,edx
  41463a:	push   ss
  41463b:	(bad)  
  41463c:	sub    ebp,DWORD PTR ds:[edi]
  41463f:	ins    BYTE PTR es:[edi],dx
  414640:	push   ebp
  414641:	(bad)  
  414642:	inc    DWORD PTR [ecx]
  414644:	pop    ds
  414645:	dec    ecx
  414646:	in     al,dx
  414647:	or     eax,0xf5be2cb8
  41464c:	inc    edi
  41464d:	pop    es
  41464e:	inc    esi
  41464f:	adc    esi,DWORD PTR [edi-0x75f8fbb0]
  414655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414656:	hlt    
  414657:	jb     0x414694
  414659:	pop    esp
  41465a:	xchg   edi,eax
  41465b:	rcl    BYTE PTR [ebp-0x7ce65b67],cl
  414661:	gs iret 
  414663:	or     BYTE PTR [edi+ecx*2+0x37],bl
  414667:	stos   DWORD PTR es:[edi],eax
  414668:	in     al,dx
  414669:	outs   dx,BYTE PTR ds:[esi]
  41466a:	cmp    BYTE PTR [ebx-0x78],cl
  41466d:	xchg   DWORD PTR [eax+ecx*4],edi
  414670:	xchg   esp,eax
  414671:	in     eax,dx
  414672:	inc    ecx
  414673:	fimul  WORD PTR [esi-0x6b517a7f]
  414679:	or     DWORD PTR [edx-0x66],0x555bc491
  414680:	loop   0x414658
  414682:	cs mov ds,esp
  414685:	pop    es
  414686:	ins    DWORD PTR es:[edi],dx
  414687:	retf   0x1e4
  41468a:	hlt    
  41468b:	xor    edi,DWORD PTR [edx-0x7267f23c]
  414691:	shl    DWORD PTR [edi-0x4e],1
  414694:	in     al,dx
  414695:	leave  
  414696:	mov    WORD PTR [edx-0x5d],?
  414699:	xchg   ebx,eax
  41469a:	fwait
  41469b:	mov    ebp,DWORD PTR [eax+eiz*8]
  41469e:	inc    esi
  41469f:	cmp    edi,DWORD PTR [esi+0x7f82cb8e]
  4146a5:	cmp    BYTE PTR [esp],ch
  4146a8:	(bad)  
  4146aa:	or     eax,0xaf40f380
  4146af:	dec    ebp
  4146b0:	dec    edx
  4146b1:	scas   eax,DWORD PTR es:[edi]
  4146b2:	push   cs
  4146b3:	in     al,0x29
  4146b5:	sub    esp,ebx
  4146b7:	push   esp
  4146b8:	aam    0x6f
  4146ba:	adc    eax,0x2ad433ad
  4146bf:	adc    esi,ecx
  4146c1:	outs   dx,DWORD PTR ds:[esi]
  4146c2:	jae    0x4146ac
  4146c4:	lods   eax,DWORD PTR ds:[esi]
  4146c5:	mov    esp,0x564652b5
  4146ca:	or     DWORD PTR [esi+0x1a],0xfffffff7
  4146ce:	push   ss
  4146cf:	aam    0xe8
  4146d1:	imul   esi,DWORD PTR [esi],0xffffffc8
  4146d4:	dec    ebp
  4146d5:	push   ss
  4146d6:	adc    eax,0x96c74bdd
  4146db:	push   edx
  4146dc:	ret    
  4146dd:	test   al,0x72
  4146df:	mov    ebx,0x18e59234
  4146e4:	add    cl,BYTE PTR [edi+ebx*4+0x4a20b18a]
  4146eb:	adc    eax,0x7e6a675d
  4146f0:	(bad)  
  4146f1:	imul   ebp
  4146f3:	cmp    ebp,edx
  4146f5:	sub    BYTE PTR [esi-0x5b5d6c60],cl
  4146fb:	js     0x414699
  4146fd:	stos   DWORD PTR es:[edi],eax
  4146fe:	or     DWORD PTR [eax+0x6999accc],edi
  414704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414705:	in     al,dx
  414706:	mov    ebx,0xe45c0315
  41470b:	dec    ebx
  41470c:	add    DWORD PTR [eax-0x18b73883],0xffffff8a
  414713:	pushf  
  414714:	cmp    ah,BYTE PTR [edi+edi*2+0x1ebcc3ca]
  41471b:	retf   0x5315
  41471e:	mov    DWORD PTR [ecx+0x4a],ebp
  414721:	push   es
  414722:	or     BYTE PTR [esi],0x8c
  414725:	ins    BYTE PTR es:[edi],dx
  414726:	ja     0x4146f5
  414728:	xchg   esi,eax
  414729:	xor    esp,DWORD PTR [esi+0x32]
  41472c:	push   ds
  41472d:	fwait
  41472e:	inc    edx
  41472f:	test   eax,0xd017a71b
  414734:	idiv   al
  414736:	pop    eax
  414737:	pop    ecx
  414738:	mov    ds:0xa95a2c1d,al
  41473d:	mov    ebp,0x2cee288
  414742:	ss mov ah,0x8b
  414745:	dec    esi
  414746:	pshufw mm4,QWORD PTR [esi-0x59b8e905],0x72
  41474e:	add    DWORD PTR [ebp+0x33],ebp
  414751:	aam    0xd2
  414753:	fsub   DWORD PTR [eax+0x69503379]
  414759:	pop    edx
  41475a:	shl    BYTE PTR [eax],1
  41475c:	mov    eax,0xaf908d5e
  414761:	dec    esp
  414762:	fs fs push ss
  414765:	adc    al,BYTE PTR [ecx-0x76cfe4a1]
  41476b:	mov    dh,0x35
  41476d:	jo     0x41479c
  41476f:	rcr    BYTE PTR [edx],cl
  414771:	js     0x414771
  414773:	push   es
  414774:	pop    esp
  414775:	pop    esi
  414776:	iret   
  414777:	ds ret 
  414779:	shl    BYTE PTR [ebx+0x5b],0x33
  41477d:	retf   0x7ec6
  414780:	ret    0x2186
  414783:	xchg   ecx,eax
  414784:	jge    0x4147f9
  414786:	add    al,ah
  414788:	mov    dh,0xf6
  41478a:	push   es
  41478b:	mov    DWORD PTR [ecx],edx
  41478d:	enter  0xb3e6,0xbb
  414791:	cld    
  414792:	ja     0x414762
  414794:	imul   eax,DWORD PTR [edi+0x60],0xffffffa7
  414798:	fs xor ah,bl
  41479b:	sbb    DWORD PTR [edi],ebx
  41479d:	and    ch,ch
  41479f:	lea    ecx,[ebx]
  4147a1:	lods   eax,DWORD PTR ds:[esi]
  4147a2:	mov    ebx,0xbbb92703
  4147a7:	add    esp,DWORD PTR [edx+0x1ea5d7ce]
  4147ad:	lods   eax,DWORD PTR ds:[esi]
  4147ae:	std    
  4147af:	jbe    0x414747
  4147b1:	push   0x90336f7
  4147b6:	mov    edx,0x2cb58a79
  4147bb:	dec    edx
  4147bc:	mov    ecx,0x1e626a2b
  4147c1:	xchg   esi,eax
  4147c2:	adc    DWORD PTR [edi],esp
  4147c4:	mov    al,0xd0
  4147c6:	scas   al,BYTE PTR es:[edi]
  4147c7:	adc    DWORD PTR [edi+0x4c],ecx
  4147ca:	mov    ch,0x5b
  4147cc:	jbe    0x414759
  4147ce:	lahf   
  4147cf:	stos   BYTE PTR es:[edi],al
  4147d0:	gs jne 0x41481a
  4147d3:	xor    DWORD PTR [esi-0x5981f7b5],0xffffffeb
  4147da:	push   ecx
  4147db:	out    0xe8,al
  4147dd:	xchg   edi,eax
  4147de:	iret   
  4147df:	lea    ebx,ds:0xcc91b5e3
  4147e5:	push   es
  4147e6:	mov    dh,BYTE PTR [ecx+edi*8+0x1fd4702e]
  4147ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ee:	mov    eax,0x17291d8d
  4147f3:	adc    edi,ebp
  4147f5:	sbb    ah,al
  4147f7:	mov    edi,0xe55c0b20
  4147fc:	fsubp  st(4),st
  4147fe:	add    eax,0x29e65899
  414803:	pop    esp
  414804:	mov    bh,bh
  414806:	out    dx,eax
  414807:	sub    edx,DWORD PTR [eax+0x8]
  41480a:	or     al,0x48
  41480c:	test   dl,ch
  41480e:	pop    esp
  41480f:	dec    esi
  414810:	fcomp  DWORD PTR [edi+0x6373c21b]
  414816:	dec    eax
  414817:	xchg   DWORD PTR [edi-0x4e],ebx
  41481a:	xor    edi,DWORD PTR [edx+eax*1-0x1aba7e00]
  414821:	adc    al,0x47
  414823:	lea    ecx,[ecx+0x32]
  414826:	jnp    0x414865
  414828:	or     eax,0x8b0c39f4
  41482d:	xchg   ebp,eax
  41482e:	jno    0x4147b4
  414830:	(bad)  
  414832:	add    DWORD PTR [esi-0x64],eax
  414835:	retf   
  414836:	repz loopne 0x414812
  414839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41483a:	xchg   esp,eax
  41483b:	scas   eax,DWORD PTR es:[edi]
  41483c:	in     eax,0x5d
  41483e:	jns    0x4147e3
  414840:	push   esi
  414841:	iret   
  414842:	jl     0x414802
  414844:	adc    ebp,DWORD PTR [eax+0x2b]
  414847:	add    eax,0xd62d228d
  41484c:	popf   
  41484d:	(bad)
  414851:	daa    
  414852:	shl    DWORD PTR [ebx],0xaf
  414855:	shr    ebx,0xa8
  414858:	(bad)  
  414859:	xor    BYTE PTR [ebx-0x4e938a18],ch
  41485f:	(bad)  
  414860:	out    0x55,eax
  414862:	adc    al,BYTE PTR [ecx-0x6d3ad8ab]
  414868:	ret    0x8765
  41486b:	sbb    esi,DWORD PTR [edx-0x4b]
  41486e:	or     BYTE PTR [edi],dh
  414870:	jne    0x41485a
  414872:	dec    edx
  414873:	mov    ds:0x2f6cf8aa,al
  414878:	ror    BYTE PTR [edi],cl
  41487a:	add    edi,DWORD PTR [esi]
  41487c:	ss and eax,0x7f165a22
  414882:	idiv   BYTE PTR gs:[eax+0x4078bda8]
  414889:	jg     0x4148cf
  41488b:	push   edi
  41488c:	out    0xd0,al
  41488e:	mov    al,ds:0xa31beac3
  414893:	in     al,0x57
  414895:	dec    DWORD PTR [edi+0x6f8a30a8]
  41489b:	mov    dl,0x2
  41489d:	push   edx
  41489e:	push   edi
  41489f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a0:	inc    esp
  4148a1:	and    BYTE PTR [esi+edi*8+0x182d516a],ch
  4148a8:	in     eax,dx
  4148a9:	push   esp
  4148aa:	xor    BYTE PTR [ebp-0x6cf68c7a],bl
  4148b0:	ret    0x1df5
  4148b3:	(bad)  
  4148b4:	lods   eax,DWORD PTR ds:[esi]
  4148b5:	jmpw   0x9695
  4148b9:	scas   eax,DWORD PTR es:[edi]
  4148ba:	js     0x414840
  4148bc:	push   ebx
  4148bd:	jmp    FWORD PTR [edi]
  4148bf:	push   ds
  4148c0:	loope  0x4148d2
  4148c2:	mov    BYTE PTR [ecx+0x55dea5cd],dl
  4148c8:	fcmovbe st,st(7)
  4148ca:	std    
  4148cb:	ins    BYTE PTR es:[edi],dx
  4148cc:	xchg   ecx,eax
  4148cd:	lock cld 
  4148cf:	(bad)  
  4148d0:	dec    edx
  4148d1:	or     edx,ebp
  4148d3:	std    
  4148d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148d5:	mov    dl,BYTE PTR [ebx-0x13cd783b]
  4148db:	dec    esi
  4148dc:	cmp    ah,dh
  4148de:	push   cs
  4148df:	mov    edx,DWORD PTR [eax+0x6a]
  4148e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e3:	jmp    0x54c497ce
  4148e8:	clc    
  4148e9:	xor    eax,0xc6f80542
  4148ee:	aas    
  4148ef:	test   DWORD PTR [edi],esi
  4148f1:	adc    dh,BYTE PTR [esi+0x4e]
  4148f4:	into   
  4148f5:	test   eax,0xc34d7baa
  4148fa:	mov    bh,0x82
  4148fc:	lahf   
  4148fd:	popa   
  4148fe:	dec    edx
  4148ff:	dec    ebp
  414900:	ss xchg edi,eax
  414902:	xor    eax,0xa2ef9f6a
  414907:	rcr    ch,1
  414909:	outs   dx,BYTE PTR ds:[esi]
  41490a:	dec    edi
  41490b:	hlt    
  41490c:	imul   ecx,ebp,0xf3aecfd7
  414912:	mov    esp,0xce4674fe
  414917:	(bad)  
  414919:	dec    edx
  41491a:	lock cli 
  41491c:	cwde   
  41491d:	scas   al,BYTE PTR es:[edi]
  41491e:	pop    edx
  41491f:	sub    BYTE PTR [edx+esi*2],dh
  414922:	cmp    DWORD PTR [eax+0x265cc0da],esi
  414928:	loop   0x4149a2
  41492a:	sbb    eax,0x6c82cb34
  41492f:	lea    ebx,[edi]
  414931:	(bad)  
  414932:	jbe    0x414917
  414934:	or     eax,0x46e5984e
  414939:	or     bh,BYTE PTR [eax]
  41493b:	(bad)  
  41493d:	fiadd  DWORD PTR [eax+0x39]
  414940:	adc    ch,bl
  414942:	ret    
  414943:	and    BYTE PTR [esi+0x2d],cl
  414946:	add    edx,DWORD PTR ds:0xfbb6d666
  41494c:	je     0x414950
  41494e:	mov    WORD PTR [edi],gs
  414950:	jne    0x4149b8
  414952:	leave  
  414953:	nop
  414954:	jns    0x414910
  414956:	mov    ah,0x81
  414958:	sub    DWORD PTR [ebx+0x63537a4],edx
  41495e:	xor    ebx,DWORD PTR [edx-0x4]
  414961:	and    bl,BYTE PTR [edi+0x77]
  414964:	mov    ds:0x6b8749e2,eax
  414969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496a:	clc    
  41496b:	loop   0x4149d5
  41496d:	pop    es
  41496e:	cld    
  41496f:	cmp    BYTE PTR [ebp-0xe],ah
  414972:	inc    ecx
  414973:	pushf  
  414974:	mov    ecx,0x17ca90ba
  414979:	ins    DWORD PTR es:[edi],dx
  41497a:	or     eax,0x6ee8f4a
  41497f:	fistp  DWORD PTR [eax+0x14]
  414982:	inc    esi
  414983:	sub    ch,BYTE PTR [eax+esi*4]
  414986:	mov    WORD PTR [eax],?
  414988:	xchg   ebx,eax
  414989:	into   
  41498a:	jne    0x4149ca
  41498c:	xor    dl,BYTE PTR [edx]
  41498e:	(bad)  
  414990:	outs   dx,BYTE PTR ds:[esi]
  414991:	sar    BYTE PTR [ebx],cl
  414993:	inc    ebx
  414994:	inc    ecx
  414995:	out    dx,al
  414996:	push   ecx
  414997:	js     0x414a04
  414999:	out    dx,al
  41499a:	(bad)  
  41499b:	test   eax,0x57d44860
  4149a0:	mov    fs,edx
  4149a2:	jb     0x4149fb
  4149a4:	push   0x68341298
  4149a9:	xor    esp,DWORD PTR [ecx+ebp*4-0x41ae0750]
  4149b0:	sub    esp,DWORD PTR [ebx+0x52]
  4149b3:	xor    edx,ebx
  4149b5:	sbb    DWORD PTR [ebp-0xe],edx
  4149b8:	inc    ebp
  4149b9:	pop    eax
  4149ba:	sub    ah,BYTE PTR [edi]
  4149bc:	scas   eax,DWORD PTR es:[edi]
  4149bd:	xor    BYTE PTR [ecx-0x63],bl
  4149c0:	lahf   
  4149c1:	or     eax,0xab4d6e3e
  4149c6:	fcomi  st,st(4)
  4149c8:	cs int3 
  4149ca:	in     al,dx
  4149cb:	ret    
  4149cc:	jmp    0xa12e:0xf8f377f9
  4149d3:	ror    bh,cl
  4149d5:	outs   dx,DWORD PTR ds:[esi]
  4149d6:	arpl   WORD PTR [ebx+esi*8],cx
  4149d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149da:	add    bh,0xb1
  4149dd:	nop
  4149de:	mov    bh,0x62
  4149e0:	ss inc edi
  4149e2:	dec    esp
  4149e3:	sbb    al,0x24
  4149e5:	daa    
  4149e6:	xchg   DWORD PTR [ebp+edx*1+0x6f],ebp
  4149ea:	adc    bl,BYTE PTR [edi+0x7d2b4ae7]
  4149f0:	test   eax,0x339c1bf8
  4149f5:	mov    al,ds:0xb6882da7
  4149fa:	out    0xc8,eax
  4149fc:	dec    esp
  4149fd:	cmp    DWORD PTR [edx-0x5a],ebp
  414a00:	push   0xffffffe0
  414a02:	out    dx,eax
  414a03:	loopne 0x414a20
  414a05:	ins    DWORD PTR es:[edi],dx
  414a06:	mov    eax,ds:0xf3789bca
  414a0b:	aam    0x42
  414a0d:	sub    BYTE PTR [edi-0x31],0x31
  414a11:	scas   eax,DWORD PTR es:[edi]
  414a12:	std    
  414a13:	cmp    eax,0x7d4ec2c5
  414a18:	adc    bl,BYTE PTR [ebx+0x74]
  414a1b:	inc    ecx
  414a1c:	ds popf 
  414a1e:	sbb    BYTE PTR [ebx-0x7852f33b],dl
  414a24:	aas    
  414a25:	rcl    BYTE PTR [ebx+edi*2-0x7e0e4fa7],cl
  414a2c:	push   ds
  414a2d:	push   ss
  414a2e:	mov    ah,0x3
  414a30:	imul   edx,esp,0x90ee65ae
  414a36:	dec    edi
  414a37:	mov    eax,0x8e7eee9f
  414a3c:	leave  
  414a3d:	lea    ebp,[edx+0x6b82075f]
  414a43:	sti    
  414a44:	pop    ebp
  414a45:	arpl   si,di
  414a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a48:	fs sahf 
  414a4a:	aad    0x9c
  414a4c:	enter  0xd17e,0x24
  414a50:	add    ebp,DWORD PTR [ebx+ebp*4-0x9]
  414a54:	pushf  
  414a55:	dec    edi
  414a56:	or     al,0xd
  414a58:	push   ebp
  414a59:	xchg   edx,eax
  414a5a:	pop    edx
  414a5b:	xor    DWORD PTR [eax+ebx*4+0xa004dcb],esp
  414a62:	leave  
  414a63:	out    dx,eax
  414a64:	sub    DWORD PTR [esi+0x178bb1a9],0xffffffa6
  414a6b:	sahf   
  414a6c:	push   ds
  414a6d:	loope  0x4149f2
  414a6f:	les    edi,FWORD PTR [ecx+0x111bdb6b]
  414a75:	icebp  
  414a76:	sub    BYTE PTR [edx-0x4b0f1ed3],0x3
  414a7d:	rcr    BYTE PTR [esi+0x2b26c45],cl
  414a83:	dec    eax
  414a84:	arpl   WORD PTR [ebx-0x2b],cx
  414a87:	sahf   
  414a88:	mov    ah,0xdc
  414a8a:	sub    ah,0x7b
  414a8d:	xor    ch,BYTE PTR [edi+0x78]
  414a90:	addr16 dec ebx
  414a92:	clc    
  414a93:	(bad)  
  414a94:	xor    DWORD PTR [eax-0x5b],esp
  414a97:	inc    ebp
  414a98:	in     al,dx
  414a99:	pusha  
  414a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a9b:	test   DWORD PTR [edi+ebp*4-0x472d3647],ecx
  414aa2:	nop
  414aa3:	rcr    DWORD PTR [eax-0x49],1
  414aa6:	push   ebx
  414aa7:	lds    esp,FWORD PTR [edi+0x6b]
  414aaa:	pop    edi
  414aab:	pop    esp
  414aac:	pop    edi
  414aad:	out    0x95,eax
  414aaf:	stos   DWORD PTR es:[edi],eax
  414ab0:	popf   
  414ab1:	loopne 0x414a6b
  414ab3:	xchg   edi,eax
  414ab4:	dec    eax
  414ab5:	fbstp  TBYTE PTR [edi-0xa4af9c2]
  414abb:	jl     0x414ab4
  414abd:	fist   DWORD PTR [esi]
  414abf:	mov    bh,al
  414ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac2:	push   0xfffffff7
  414ac4:	or     BYTE PTR [ebp-0x56],dl
  414ac7:	int3   
  414ac8:	daa    
  414ac9:	jno    0x414aff
  414acb:	inc    ecx
  414acc:	mov    bh,0x2e
  414ace:	test   ah,cl
  414ad0:	jg     0x414b3b
  414ad2:	retf   
  414ad3:	cmp    esi,DWORD PTR [eax]
  414ad5:	cdq    
  414ad6:	clc    
  414ad7:	sbb    al,ch
  414ad9:	push   esi
  414ada:	add    ecx,DWORD PTR [ebx]
  414adc:	cmp    edx,DWORD PTR [ebx]
  414ade:	lds    esp,FWORD PTR [ebp-0x5d]
  414ae1:	ins    BYTE PTR es:[edi],dx
  414ae2:	daa    
  414ae3:	fnstenv [edi]
  414ae5:	pusha  
  414ae6:	es dec edx
  414ae8:	test   ebx,0xe51cce39
  414aee:	xchg   BYTE PTR [ebx+0x5],cl
  414af1:	add    edx,DWORD PTR [eax+ecx*4+0x10]
  414af5:	aas    
  414af6:	aad    0xa0
  414af8:	sti    
  414af9:	hlt    
  414afa:	mov    esp,0xe85f383c
  414aff:	fld    QWORD PTR [ecx-0x5]
  414b02:	test   edx,esi
  414b04:	push   es
  414b05:	mov    bh,0x54
  414b07:	jb     0x414a92
  414b09:	mov    edi,0xa824d3ad
  414b0e:	mov    ebp,0x2fc6c4f0
  414b13:	mov    bh,0x7f
  414b15:	shr    dh,cl
  414b17:	and    DWORD PTR [eax-0x7fd42323],ebp
  414b1d:	fidivr DWORD PTR [ebx+0x2a]
  414b20:	lock out 0x35,al
  414b23:	aam    0xfb
  414b25:	mov    al,ds:0xc5d4f1de
  414b2a:	add    BYTE PTR [edi-0x1e],dh
  414b2d:	add    DWORD PTR [esi],esp
  414b2f:	shl    DWORD PTR ds:0xf9b24a5a,0x27
  414b36:	dec    ecx
  414b37:	sub    ah,BYTE PTR [eax+0x3c]
  414b3a:	aaa    
  414b3b:	or     BYTE PTR [eax],cl
  414b3d:	(bad)  
  414b3e:	push   ss
  414b3f:	retf   0xd849
  414b42:	dec    edx
  414b43:	int3   
  414b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b45:	std    
  414b46:	xor    DWORD PTR [edx+0x1b],ecx
  414b49:	popf   
  414b4a:	inc    esi
  414b4b:	mov    ch,0x8b
  414b4d:	jmp    0x414af6
  414b4f:	adc    al,0xae
  414b51:	lahf   
  414b52:	ins    BYTE PTR es:[edi],dx
  414b53:	pop    ds
  414b54:	das    
  414b55:	xor    ebp,DWORD PTR [ebp*2-0x562e6ceb]
  414b5c:	xlat   BYTE PTR ds:[ebx]
  414b5d:	push   0x6ded70ac
  414b62:	iret   
  414b63:	pop    ebx
  414b64:	push   ebx
  414b65:	aas    
  414b66:	mov    esi,0xc7c77cf0
  414b6b:	repz xor edx,esp
  414b6e:	cld    
  414b6f:	in     eax,dx
  414b70:	es (bad) 
  414b73:	mov    cl,0xf3
  414b75:	cmc    
  414b76:	mov    dl,0x47
  414b78:	xchg   ebp,eax
  414b79:	out    0x44,eax
  414b7b:	jmp    0x9ae1:0x704541a9
  414b82:	add    al,0x15
  414b84:	mov    eax,ds:0xbdff2b31
  414b89:	push   ecx
  414b8a:	mov    al,ds:0x3be8d78f
  414b8f:	imul   DWORD PTR [ebx+0x57]
  414b92:	test   BYTE PTR [esi-0x32],0xed
  414b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b97:	inc    edi
  414b98:	jmp    0x55390e98
  414b9d:	scas   eax,DWORD PTR es:[edi]
  414b9e:	loope  0x414c1a
  414ba0:	push   edx
  414ba1:	xchg   ebx,eax
  414ba2:	retf   
  414ba3:	outs   dx,BYTE PTR ds:[esi]
  414ba4:	fiadd  DWORD PTR [edx-0x43]
  414ba7:	jns    0x414c19
  414ba9:	and    al,0x14
  414bab:	and    BYTE PTR [edi-0x14],bh
  414bae:	sub    DWORD PTR [eax],0x74
  414bb1:	xchg   DWORD PTR [esi-0xddb0b44],ebp
  414bb7:	sub    DWORD PTR [ebx+eiz*8+0x77e6d143],esi
  414bbe:	add    eax,0xc7672557
  414bc3:	(bad)  
  414bc4:	push   0xfffffffc
  414bc6:	mov    al,ds:0x94d3ee49
  414bcb:	push   ss
  414bcc:	ret    0x45f3
  414bcf:	mov    al,ds:0x1e5d0a3f
  414bd4:	push   ds
  414bd5:	xchg   esi,eax
  414bd6:	fs jmp 0x8449:0x519854cb
  414bde:	add    eax,0x4ab11c26
  414be3:	or     eax,0xd05d5853
  414be8:	gs mov bl,0x88
  414beb:	leave  
  414bec:	add    ecx,0x27
  414bef:	sbb    ecx,DWORD PTR [eax+0x1a]
  414bf2:	sub    ecx,ecx
  414bf4:	xchg   ecx,eax
  414bf5:	jne    0x414bb9
  414bf7:	push   esi
  414bf8:	pop    esi
  414bf9:	add    BYTE PTR [ecx+0x4d47a670],ah
  414bff:	adc    bl,bl
  414c01:	xchg   esp,eax
  414c02:	das    
  414c03:	scas   al,BYTE PTR es:[edi]
  414c04:	xchg   ebp,eax
  414c05:	push   cs
  414c06:	iret   
  414c07:	cdq    
  414c08:	test   al,cl
  414c0a:	xrstor [ebp+0x1bc4728]
  414c11:	mov    edx,0x905cc40a
  414c16:	arpl   WORD PTR [edi+ebx*4],ax
  414c19:	sbb    DWORD PTR [ecx+ebx*8-0x59],edi
  414c1d:	fisttp QWORD PTR [ecx-0x694ad922]
  414c23:	cmp    dh,BYTE PTR [ebx+0x5dd4e756]
  414c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c2a:	imul   esi,DWORD PTR [esi+0x67],0x2d
  414c2e:	in     eax,dx
  414c2f:	xchg   esp,eax
  414c30:	stc    
  414c31:	(bad)  
  414c32:	in     eax,dx
  414c33:	sub    BYTE PTR [ebp-0x3d],0xc3
  414c37:	adc    al,0xe2
  414c39:	cld    
  414c3a:	out    0x64,eax
  414c3c:	cs enter 0x7f0c,0xe4
  414c41:	adc    dl,bl
  414c43:	ffreep st(4)
  414c45:	js     0x414cb6
  414c47:	mov    WORD PTR [ebx+0x7cf4c1d8],es
  414c4d:	das    
  414c4e:	dec    BYTE PTR [eax+0x9e4f89e]
  414c54:	mov    edi,0x4718963c
  414c59:	outs   dx,DWORD PTR ds:[esi]
  414c5a:	ja     0x414c8a
  414c5c:	(bad)  
  414c5d:	das    
  414c5e:	and    al,0xdf
  414c60:	scas   eax,DWORD PTR es:[edi]
  414c61:	dec    esi
  414c62:	push   ds
  414c63:	lods   eax,DWORD PTR ds:[esi]
  414c64:	pop    eax
  414c65:	ins    DWORD PTR es:[edi],dx
  414c66:	xor    ebp,DWORD PTR [ebx]
  414c68:	sub    BYTE PTR [edi],dh
  414c6a:	push   ds
  414c6b:	std    
  414c6c:	mov    DWORD PTR [eax+0x7c2873eb],0x941291b3
  414c76:	neg    BYTE PTR [eax-0x17]
  414c79:	test   eax,0x228fd200
  414c7e:	in     al,0x8d
  414c80:	(bad)  
  414c81:	cld    
  414c82:	sahf   
  414c83:	scas   eax,DWORD PTR es:[edi]
  414c84:	xchg   ebx,eax
  414c85:	fwait
  414c86:	sub    al,0xb1
  414c88:	pop    edx
  414c89:	aad    0x3c
  414c8b:	mov    esp,0xdca24597
  414c90:	mov    dh,0x6e
  414c92:	shl    eax,0xc1
  414c95:	inc    ebx
  414c96:	fcmovnu st,st(5)
  414c98:	div    BYTE PTR [edi+ebp*8+0x5f]
  414c9c:	add    ebx,DWORD PTR [edx]
  414c9e:	cmc    
  414c9f:	enter  0x89bb,0x4
  414ca3:	cmp    DWORD PTR [eax+0x28bb09cd],edx
  414ca9:	das    
  414caa:	(bad)  
  414cab:	fsubr  DWORD PTR [edx]
  414cad:	sub    eax,0x7857634
  414cb2:	aaa    
  414cb3:	test   edx,esi
  414cb5:	lds    eax,FWORD PTR ds:0x827eae8f
  414cbb:	adc    al,0x30
  414cbd:	rol    DWORD PTR [eax],cl
  414cbf:	cmp    DWORD PTR [edi+0x42],esp
  414cc2:	jb     0x414cf8
  414cc4:	loope  0x414ca9
  414cc6:	daa    
  414cc7:	test   BYTE PTR [eax-0x6d],bl
  414cca:	mov    DWORD PTR [eax],edi
  414ccc:	or     ebp,DWORD PTR [ecx-0x665992a5]
  414cd2:	popf   
  414cd3:	dec    ebp
  414cd4:	jbe    0x414c94
  414cd6:	aaa    
  414cd7:	xlat   BYTE PTR ds:[ebx]
  414cd8:	push   ds
  414cd9:	jmp    0x284d:0xc6808607
  414ce0:	mov    eax,0x48d8966f
  414ce5:	bound  eax,QWORD PTR [edi]
  414ce7:	xor    al,0x0
  414ce9:	dec    ebx
  414cea:	das    
  414ceb:	scas   al,BYTE PTR es:[edi]
  414cec:	pop    ds
  414ced:	pop    si
  414cef:	sar    BYTE PTR [edi-0x37],0xde
  414cf3:	retf   0x3e68
  414cf6:	pop    esp
  414cf7:	pop    es
  414cf8:	stc    
  414cf9:	sti    
  414cfa:	pop    ds
  414cfb:	mov    ah,bl
  414cfd:	lods   al,BYTE PTR ds:[esi]
  414cfe:	xchg   ebp,eax
  414cff:	cmp    DWORD PTR [edx-0x1e5be612],ebx
  414d05:	mov    esi,0xdf9b8310
  414d0a:	(bad)
  414d0d:	les    ebp,FWORD PTR [esi]
  414d0f:	sbb    ah,BYTE PTR [ebp-0x648feb42]
  414d15:	daa    
  414d16:	push   ds
  414d17:	sbb    eax,0x467d0b7a
  414d1c:	jnp    0x414cd9
  414d1e:	push   ds
  414d1f:	mov    bh,0x17
  414d21:	into   
  414d22:	jne    0x414ccc
  414d24:	int    0xe5
  414d26:	fs push cs
  414d28:	loop   0x414d3a
  414d2a:	inc    edi
  414d2b:	adc    al,0x52
  414d2d:	mov    cl,0x39
  414d2f:	push   cs
  414d30:	fdiv   DWORD PTR [eax]
  414d32:	sbb    al,ch
  414d34:	imul   edx,edi,0x6d
  414d37:	cdq    
  414d38:	sbb    ebx,ebx
  414d3a:	adc    edi,DWORD PTR [ebx]
  414d3c:	cmc    
  414d3d:	daa    
  414d3e:	mov    ebp,0x79fcef19
  414d43:	std    
  414d44:	ins    BYTE PTR es:[edi],dx
  414d45:	clc    
  414d46:	pop    ebp
  414d47:	jl     0x414cf6
  414d49:	sbb    ch,BYTE PTR [esi-0x12622b]
  414d4f:	jmp    0x9eeadb03
  414d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d55:	mov    ch,0x7
  414d57:	test   eax,0xa3a8bae5
  414d5c:	add    eax,0x96f96660
  414d61:	outs   dx,DWORD PTR ds:[esi]
  414d62:	outs   dx,DWORD PTR ds:[esi]
  414d63:	call   0xb130:0xb7267550
  414d6a:	pop    ebp
  414d6b:	cld    
  414d6c:	es sti 
  414d6e:	pop    esi
  414d6f:	jb     0x414d2f
  414d71:	inc    esi
  414d72:	je     0x414df3
  414d74:	repnz in eax,0xb9
  414d77:	ins    BYTE PTR es:[edi],dx
  414d78:	push   edi
  414d79:	cli    
  414d7a:	fwait
  414d7b:	in     al,0xb1
  414d7d:	mov    DWORD PTR [ebx+esi*8+0x7f244f12],ebp
  414d84:	dec    esi
  414d85:	(bad)  
  414d86:	dec    esi
  414d87:	pop    ss
  414d88:	leave  
  414d89:	ficomp DWORD PTR [edi-0xab9d97b]
  414d8f:	jg     0x414dbd
  414d91:	mov    edx,0xdaefc533
  414d96:	neg    BYTE PTR [ecx-0x4d]
  414d99:	cmp    ebp,DWORD PTR [eax]
  414d9b:	adc    eax,0xaf337e1a
  414da0:	jmp    0x3521:0x82adc59f
  414da7:	or     al,0x3c
  414da9:	lea    esp,[ebx-0x3d85411c]
  414daf:	jbe    0x414d78
  414db1:	ror    DWORD PTR [edx],0x39
  414db4:	gs call 0x56bc:0xc21b6095
  414dbc:	lods   al,BYTE PTR ds:[esi]
  414dbd:	rcr    ebp,1
  414dbf:	lahf   
  414dc0:	mov    dh,0x9a
  414dc2:	mov    DWORD PTR [ecx],ecx
  414dc4:	nop
  414dc5:	mov    bh,0x94
  414dc7:	ret    
  414dc8:	mov    WORD PTR [esi-0x17],?
  414dcb:	mov    edx,0xffdc5646
  414dd0:	loopne 0x414dff
  414dd2:	(bad)
  414dd6:	cmp    al,BYTE PTR [eax*2-0x137e4f6a]
  414ddd:	pop    ss
  414dde:	xor    al,0xb7
  414de0:	inc    edi
  414de1:	out    0x41,eax
  414de3:	out    0x1d,eax
  414de5:	xor    eax,0xcc9bb058
  414dea:	test   eax,0x8a84eaaf
  414def:	fmul   QWORD PTR [eax-0x5198c99a]
  414df5:	iret   
  414df6:	rcl    al,1
  414df8:	dec    edi
  414df9:	test   DWORD PTR [edi],0x508a2b7a
  414dff:	jnp    0x414e59
  414e01:	hlt    
  414e02:	aas    
  414e03:	std    
  414e04:	lods   al,BYTE PTR ds:[esi]
  414e05:	mov    dl,0x32
  414e07:	push   es
  414e08:	es out dx,eax
  414e0a:	jbe    0x414dce
  414e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e0d:	adc    al,0x4a
  414e0f:	fs sbb al,0x27
  414e12:	push   0xffffffec
  414e14:	xchg   esi,eax
  414e15:	inc    eax
  414e16:	rcl    eax,cl
  414e18:	xor    cl,BYTE PTR [ebx+eiz*1]
  414e1b:	addr16 push esp
  414e1d:	mov    bh,0x78
  414e1f:	dec    DWORD PTR [esi]
  414e21:	mov    WORD PTR [edi+0x57],?
  414e24:	push   0x77cdd308
  414e29:	or     eax,0xae926941
  414e2e:	idiv   BYTE PTR [ebx+eiz*2]
  414e31:	repz add dh,BYTE PTR [edi]
  414e34:	clc    
  414e35:	mov    ecx,0x5f53b433
  414e3a:	adc    ecx,ecx
  414e3c:	into   
  414e3d:	add    eax,DWORD PTR [eax]
  414e3f:	daa    
  414e40:	mov    dh,0xb6
  414e42:	mov    gs,WORD PTR [edx+0x42925e4e]
  414e48:	neg    edx
  414e4a:	inc    esi
  414e4b:	xor    cl,BYTE PTR [eax-0x1a]
  414e4e:	inc    esi
  414e4f:	or     BYTE PTR [edi-0x2f],dl
  414e52:	cmc    
  414e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e55:	mov    bh,0x3a
  414e57:	mov    ebp,0x1e50203a
  414e5c:	sub    BYTE PTR [ecx+0x594ce064],dl
  414e62:	sub    DWORD PTR [ecx+0x64],esp
  414e65:	in     eax,0x9d
  414e67:	xor    dh,BYTE PTR [ecx+0x36]
  414e6a:	or     al,0x9b
  414e6c:	sub    BYTE PTR fs:[ebp+0x21],ah
  414e70:	inc    esp
  414e71:	fdivr  QWORD PTR [edx]
  414e73:	mov    esp,0xa8346a83
  414e78:	sbb    DWORD PTR [edx+0x39298fc],esp
  414e7e:	sahf   
  414e7f:	jge    0x414efd
  414e81:	mov    edi,0x47980898
  414e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e87:	jmp    0xed5d0bcd
  414e8c:	fstp   TBYTE PTR [ebx-0x22]
  414e8f:	loop   0x414e60
  414e91:	inc    eax
  414e92:	or     al,0x66
  414e94:	and    eax,DWORD PTR [ecx]
  414e96:	cld    
  414e97:	or     eax,0x39bbaca5
  414e9c:	lahf   
  414e9d:	in     eax,0x90
  414e9f:	adc    ch,bh
  414ea1:	cdq    
  414ea2:	pop    ds
  414ea3:	inc    esp
  414ea4:	pop    ss
  414ea5:	test   al,0x6d
  414ea7:	and    ch,0x69
  414eaa:	ror    BYTE PTR [ebp-0x68],1
  414ead:	cmp    cl,BYTE PTR [esp+eiz*2-0x756260fe]
  414eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb5:	aam    0x9b
  414eb7:	xchg   edx,eax
  414eb8:	test   dl,bh
  414eba:	out    dx,al
  414ebb:	test   bh,ch
  414ebd:	mov    edx,0x61d878ea
  414ec2:	ficom  DWORD PTR [ecx]
  414ec4:	sbb    eax,0x3288b552
  414ec9:	mov    WORD PTR [ebp+edi*2-0x1551bf43],?
  414ed0:	dec    edx
  414ed1:	ins    DWORD PTR es:[edi],dx
  414ed2:	sbb    BYTE PTR [edi+0x3a],al
  414ed5:	in     eax,dx
  414ed6:	test   BYTE PTR [esi+0x77],0x75
  414eda:	pop    eax
  414edb:	imul   ebp,DWORD PTR [eax],0x7354a448
  414ee1:	or     esp,edx
  414ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee4:	sbb    al,0x70
  414ee6:	femms  
  414ee8:	jo     0x414f3e
  414eea:	fisub  DWORD PTR [edx-0x2be2a3ff]
  414ef0:	sub    al,0xf9
  414ef2:	ds or  al,0xca
  414ef5:	cli    
  414ef6:	mov    WORD PTR [edi+0x56],ds
  414ef9:	fs in  al,0x2f
  414efc:	call   0x2431:0xe19c4fb2
  414f03:	stos   DWORD PTR es:[edi],eax
  414f04:	(bad)  
  414f05:	int    0xfc
  414f07:	iret   
  414f08:	icebp  
  414f09:	hlt    
  414f0a:	xchg   edx,eax
  414f0b:	cmp    DWORD PTR [esi+ecx*2-0x42],esi
  414f0f:	mov    ch,0x4c
  414f11:	sbb    ecx,esi
  414f13:	lods   al,BYTE PTR ds:[esi]
  414f14:	in     al,dx
  414f15:	mov    bh,dh
  414f17:	xor    edi,esi
  414f19:	cmp    eax,0xbf23c021
  414f1e:	mov    al,0x23
  414f20:	hlt    
  414f21:	jle    0x414f4e
  414f23:	push   eax
  414f24:	dec    ebp
  414f25:	xor    al,dl
  414f27:	dec    edi
  414f28:	popa   
  414f29:	xchg   esi,eax
  414f2a:	and    ebp,DWORD PTR [edx]
  414f2c:	jae    0x414ed4
  414f2e:	ret    
  414f2f:	cmp    eax,0x3d588fd6
  414f34:	pop    es
  414f35:	enter  0x27a,0xc7
  414f39:	sbb    DWORD PTR [esi],ebx
  414f3b:	mov    ebx,0x9ac9697f
  414f40:	retf   0xf3cd
  414f43:	or     eax,0x2f0f96b8
  414f48:	ja     0x414f9b
  414f4a:	xchg   edi,eax
  414f4b:	das    
  414f4c:	dec    ecx
  414f4d:	in     eax,dx
  414f4e:	adc    BYTE PTR ds:0x882a9a28,bh
  414f54:	mov    bl,0x1a
  414f56:	and    eax,0x2ee0b670
  414f5b:	dec    esi
  414f5c:	rcr    BYTE PTR [edi+0x7],0x4d
  414f60:	lods   eax,DWORD PTR ds:[esi]
  414f61:	dec    esi
  414f62:	sub    al,BYTE PTR [ecx+0x1df0172f]
  414f68:	imul   edi,DWORD PTR [ecx+edx*4+0x45],0xb68a4c47
  414f70:	mov    ch,0xea
  414f72:	jp     0x414f80
  414f74:	xchg   BYTE PTR [eax+ebp*4+0x7b],bh
  414f78:	retf   0xfbbf
  414f7b:	jae    0x414f08
  414f7d:	imul   edx,DWORD PTR [edx],0xcf36ac31
  414f83:	bnd jo 0xae4c01d0
  414f8a:	adc    ch,dl
  414f8c:	dec    ebx
  414f8d:	sbb    ecx,0x13
  414f90:	shr    DWORD PTR [edi],1
  414f92:	pop    esi
  414f93:	pop    ss
  414f94:	rol    BYTE PTR [ebp+0x28],cl
  414f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f98:	xchg   edx,eax
  414f99:	mov    esp,0xf6d32512
  414f9e:	or     ah,BYTE PTR ds:[ecx+esi*1]
  414fa2:	mov    ebx,0x71dd861b
  414fa7:	pop    ecx
  414fa8:	xchg   esi,eax
  414fa9:	(bad)  [ebx]
  414fab:	pop    esi
  414fac:	pop    esi
  414fad:	inc    edi
  414fae:	jl     0x414f70
  414fb0:	lods   al,BYTE PTR ds:[esi]
  414fb1:	or     dh,BYTE PTR [esp+esi*1-0x4c]
  414fb5:	ja     0x415008
  414fb7:	mov    ebp,0x57f09dee
  414fbc:	sar    bl,cl
  414fbe:	push   0x8397ab34
  414fc3:	jle    0x414fd1
  414fc5:	xchg   esp,eax
  414fc6:	pop    ecx
  414fc7:	(bad)  
  414fc8:	sbb    bh,BYTE PTR [edx]
  414fca:	push   0x4749f87a
  414fcf:	hlt    
  414fd0:	mov    WORD PTR [esi],fs
  414fd2:	mov    al,BYTE PTR [ebp+0x45d30bd1]
  414fd8:	inc    esp
  414fd9:	jecxz  0x414fa9
  414fdb:	popf   
  414fdc:	pop    ecx
  414fdd:	test   al,0x14
  414fdf:	mov    db6,ebp
  414fe2:	adc    eax,0xe6e6d43e
  414fe7:	mov    ebx,0xeaf82efa
  414fec:	nop
  414fed:	pop    ds
  414fee:	push   ss
  414fef:	in     al,dx
  414ff0:	into   
  414ff1:	mov    al,0xed
  414ff3:	(bad)  
  414ff4:	jae    0x414fe7
  414ff6:	enter  0xac2d,0x48
  414ffa:	repnz stos BYTE PTR es:[edi],al
  414ffc:	inc    esp
  414ffd:	sti    
  414ffe:	je     0x414fc3
  415000:	lods   eax,DWORD PTR ds:[esi]
  415001:	test   BYTE PTR [ebx+esi*4+0x33],0x1a
  415006:	call   0x390d:0x38f5e978
  41500d:	mov    BYTE PTR [ebp+ecx*8+0x26b46c0],0x37
  415015:	fcomp  QWORD PTR [edi+eax*8-0xca2bb7d]
  41501c:	retf   0xafa1
  41501f:	jae    0x415081
  415021:	xchg   esp,eax
  415022:	sub    ebp,0x1ed4f9f0
  415028:	sbb    BYTE PTR [eax+0x2114b1d9],cl
  41502e:	xlat   BYTE PTR ds:[ebx]
  41502f:	mov    ebp,0xbf672efe
  415034:	and    al,0xac
  415036:	push   ds
  415037:	push   0xa17f89b1
  41503c:	aas    
  41503d:	mov    ds:0xad754b49,al
  415042:	das    
  415043:	and    eax,0xd96d28a6
  415048:	pop    ecx
  415049:	jo     0x414fe3
  41504b:	push   es
  41504c:	mov    cl,0x37
  41504e:	dec    eax
  41504f:	inc    ecx
  415050:	int    0x45
  415052:	pop    ebx
  415053:	and    al,0x30
  415055:	jo     0x414ff1
  415057:	jp     0x415095
  415059:	xchg   edi,eax
  41505a:	(bad)  
  41505c:	xor    eax,0x6e032814
  415061:	push   edi
  415062:	add    eax,0x2996805
  415067:	pop    edi
  415068:	mov    gs,WORD PTR [edi-0x8]
  41506b:	mov    ds:0x122cda6,al
  415070:	aam    0x27
  415072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415073:	shr    BYTE PTR [edi],0x4d
  415076:	and    ebx,DWORD PTR [edi+eiz*8]
  415079:	fisub  WORD PTR [edx]
  41507b:	dec    edi
  41507c:	enter  0xc4b1,0x71
  415080:	push   ebx
  415081:	inc    eax
  415082:	mov    al,0xc6
  415084:	cmp    BYTE PTR [edi],ah
  415086:	fs scas al,BYTE PTR es:[edi]
  415088:	cmp    al,0x6
  41508a:	ret    
  41508b:	mov    WORD PTR [eax],es
  41508d:	lds    ecx,FWORD PTR [edx-0x5]
  415090:	push   ss
  415091:	test   al,0x86
  415093:	fnsave [eax*8-0x738592d1]
  41509a:	loop   0x415088
  41509c:	ficom  DWORD PTR [esi]
  41509e:	mov    ecx,0x9081cb6a
  4150a3:	scas   al,BYTE PTR es:[edi]
  4150a4:	inc    edi
  4150a5:	sbb    esp,DWORD PTR [edi+0x54]
  4150a8:	mov    ecx,0xa097513d
  4150ad:	pop    ebp
  4150ae:	cld    
  4150af:	popf   
  4150b0:	loop   0x4150ab
  4150b2:	jmp    0x4150cf
  4150b4:	das    
  4150b5:	lods   al,BYTE PTR ds:[esi]
  4150b6:	nop
  4150b7:	dec    eax
  4150b8:	inc    esp
  4150b9:	lea    ebx,[edx-0x56]
  4150bc:	inc    eax
  4150bd:	pop    esp
  4150be:	dec    ebx
  4150bf:	jmp    0x41509f
  4150c1:	add    dh,BYTE PTR [edi-0x44]
  4150c4:	std    
  4150c5:	cmp    DWORD PTR [edi+0x77],esp
  4150c8:	outs   dx,BYTE PTR ds:[esi]
  4150c9:	sbb    DWORD PTR [edx+0x58d46259],eax
  4150cf:	push   cs
  4150d0:	cmc    
  4150d1:	mov    ds:0x3b81db8e,eax
  4150d6:	rcl    BYTE PTR [ebx],1
  4150d8:	(bad)  
  4150d9:	push   ds
  4150da:	push   eax
  4150db:	jbe    0x4150f3
  4150dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150de:	leave  
  4150df:	xchg   esi,eax
  4150e0:	mov    al,0x34
  4150e2:	hlt    
  4150e3:	sbb    DWORD PTR [edx-0xd],esi
  4150e6:	cmp    BYTE PTR [ebp-0x431c4cd7],dl
  4150ec:	popf   
  4150ed:	idiv   BYTE PTR [eax]
  4150ef:	add    al,0x1e
  4150f1:	xchg   BYTE PTR [ebp+ebx*1+0x46],dh
  4150f5:	ins    BYTE PTR es:[edi],dx
  4150f6:	(bad)  
  4150f8:	lds    esi,FWORD PTR [edi]
  4150fa:	arpl   WORD PTR [ebx+0x17719931],si
  415100:	icebp  
  415101:	lahf   
  415102:	pop    ecx
  415103:	sbb    al,0xaf
  415105:	and    ebp,edx
  415107:	pop    edx
  415108:	setp   BYTE PTR [ebp-0x4f6fe1b4]
  41510f:	push   es
  415110:	fist   WORD PTR [edi]
  415112:	push   ebx
  415113:	cli    
  415114:	mov    ebp,0x150cec2b
  415119:	adc    al,0x68
  41511b:	sub    bl,BYTE PTR [eax+edx*4+0x61]
  41511f:	push   ecx
  415120:	mov    dl,0xb4
  415122:	in     al,0xa7
  415124:	(bad)  
  415125:	enter  0x47ac,0x25
  415129:	mov    esp,DWORD PTR [eax+0x69]
  41512c:	jmp    0x415137
  41512e:	xchg   ecx,eax
  41512f:	sub    DWORD PTR [ecx-0x4f722ff8],0x5de5b113
  415139:	clc    
  41513a:	adc    esi,DWORD PTR [ecx+0x6a]
  41513d:	test   DWORD PTR [eax-0x61d4c9d5],ecx
  415143:	sbb    dh,BYTE PTR [esi]
  415145:	push   esp
  415146:	push   0xffffffbf
  415148:	mov    ebx,0x12c896a0
  41514d:	mov    edi,fs
  41514f:	or     edx,ebp
  415151:	cld    
  415152:	rol    DWORD PTR [esi],0x31
  415155:	pop    ss
  415156:	loopne 0x4151c7
  415158:	mov    edx,0x9b3d6bff
  41515d:	shl    BYTE PTR ds:0x1ca47a41,1
  415163:	mov    esi,0x604d810
  415168:	cmp    eax,0x493e8280
  41516d:	cmp    eax,0x7f324988
  415172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415173:	ficomp DWORD PTR [eax-0x77]
  415176:	es lahf 
  415178:	push   edx
  415179:	dec    edx
  41517a:	pop    ecx
  41517b:	sar    BYTE PTR [ebx],1
  41517d:	mov    esp,0xcb79ff4c
  415182:	mov    esi,ebx
  415184:	add    ebp,DWORD PTR [edi+0x3451e0f8]
  41518a:	cmp    eax,0x72aa4e25
  41518f:	shr    DWORD PTR [ecx],1
  415191:	cmp    DWORD PTR [edi+0x1501775a],esi
  415197:	nop
  415198:	inc    eax
  415199:	sub    BYTE PTR [ecx+0x72b0450f],al
  41519f:	jae    0x41515e
  4151a1:	mov    BYTE PTR [esi-0x1880a249],dl
  4151a7:	fs imul edi,esp,0xcf781594
  4151ae:	fmul   st(3),st
  4151b0:	push   edi
  4151b1:	jmp    0x85f01a2a
  4151b6:	test   al,0x9d
  4151b8:	push   ds
  4151b9:	ret    
  4151ba:	aam    0x7d
  4151bc:	xchg   edx,eax
  4151bd:	mov    ah,0xef
  4151bf:	cvttps2pi mm7,QWORD PTR [ebp-0x1be57638]
  4151c6:	cmp    ebx,ebp
  4151c8:	in     al,0x5e
  4151ca:	(bad)  
  4151cc:	fwait
  4151cd:	push   cs
  4151ce:	cmp    dl,BYTE PTR [ebx+eiz*4+0x42]
  4151d2:	adc    esi,eax
  4151d4:	addr16 xchg esp,eax
  4151d6:	jae    0x4151fb
  4151d8:	push   edi
  4151d9:	mov    bh,0xdf
  4151db:	js     0x4151a3
  4151dd:	mov    edx,0x45f46322
  4151e2:	out    0xf0,eax
  4151e4:	out    dx,eax
  4151e5:	xor    eax,0xfe011f1b
  4151ea:	sbb    ebx,ebx
  4151ec:	xor    eax,0x3ddee9e
  4151f1:	mov    dh,BYTE PTR [esi+eax*2]
  4151f4:	(bad)  
  4151f5:	mov    BYTE PTR [esi+0x329ad574],ah
  4151fb:	mov    eax,ds:0x226dc023
  415200:	adc    al,BYTE PTR [ebp+0x75ecd216]
  415206:	sub    BYTE PTR [esi-0x2],0xc1
  41520a:	dec    eax
  41520b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41520c:	(bad)  
  41520d:	or     DWORD PTR es:[ecx-0x7f7f57ce],esi
  415214:	mov    bh,0xa1
  415216:	push   bp
  415218:	mov    BYTE PTR [esi-0x4b],0x69
  41521c:	sbb    eax,0x8b64ba8d
  415221:	and    al,0x56
  415223:	cdq    
  415224:	sar    DWORD PTR [eax],0x5c
  415227:	fs jmp 0x27bb:0xb15e6d08
  41522f:	fs (bad) 
  415231:	je     0x415206
  415233:	add    DWORD PTR [eax-0x23b0b929],esi
  415239:	jmp    0x1baaf4ce
  41523e:	stc    
  41523f:	mov    ds:0x4e2a1971,al
  415244:	jle    0x4152c5
  415246:	xor    DWORD PTR [ebp+0x58],0xa98ddb13
  41524d:	gs fs daa 
  415250:	push   0x45ada206
  415255:	clc    
  415256:	mov    dh,0x2e
  415258:	lods   eax,DWORD PTR ds:[esi]
  415259:	or     BYTE PTR [edx],0x7e
  41525c:	push   eax
  41525d:	push   edx
  41525e:	add    eax,0x6ac51320
  415263:	push   esp
  415264:	arpl   WORD PTR [edi],bx
  415266:	mov    cl,0x7a
  415268:	mov    ds:0x6513c29,al
  41526d:	shl    BYTE PTR [esi-0x3418cdeb],1
  415273:	xchg   edi,eax
  415274:	in     al,0xe
  415276:	push   es
  415277:	retf   0x442b
  41527a:	es (bad) 
  41527c:	pop    ecx
  41527d:	ja     0x41526f
  41527f:	sbb    ch,BYTE PTR [ecx+0x20b450c3]
  415285:	daa    
  415286:	adc    edi,0x23
  415289:	pop    ecx
  41528a:	xor    BYTE PTR [esi],0xe0
  41528d:	adc    ebp,DWORD PTR [edx+0x4b616786]
  415293:	adc    bl,BYTE PTR [esi+0x3]
  415296:	retf   
  415297:	xor    bl,0xff
  41529a:	les    ebx,FWORD PTR [ebp+0xa67d7c8]
  4152a0:	int3   
  4152a1:	jb     0x41531a
  4152a3:	cmp    eax,0x344bfd37
  4152a8:	lods   al,BYTE PTR ds:[esi]
  4152a9:	fidivr DWORD PTR [esp+ebx*4-0x66]
  4152ad:	push   0xffffffca
  4152af:	sbb    eax,0x766e67f2
  4152b4:	and    eax,edi
  4152b6:	imul   ebp,DWORD PTR [ebx+ecx*1+0xe6905f1],0x7d
  4152be:	xor    bl,ah
  4152c0:	test   al,0x2a
  4152c2:	ja     0x4152d3
  4152c4:	shl    BYTE PTR [edi],0x7c
  4152c7:	call   0xfb3d:0x3b071aeb
  4152ce:	sub    DWORD PTR [ecx+0x72],esp
  4152d1:	ret    0xc9be
  4152d4:	or     eax,0x20700218
  4152d9:	sub    edx,ebp
  4152db:	retf   
  4152dc:	adc    esi,esp
  4152de:	adc    ebp,DWORD PTR ds:0x868950b2
  4152e4:	jmp    0x415348
  4152e6:	inc    ecx
  4152e7:	outs   dx,DWORD PTR ds:[esi]
  4152e8:	inc    edi
  4152e9:	adc    eax,0x62843fe6
  4152ee:	mov    eax,0x9ae6f660
  4152f3:	xchg   edi,eax
  4152f4:	rcl    DWORD PTR [ecx+edx*4],cl
  4152f7:	dec    ecx
  4152f8:	clc    
  4152f9:	push   edx
  4152fa:	out    dx,al
  4152fb:	fst    DWORD PTR [ecx-0x71c2816e]
  415301:	pop    edi
  415302:	scas   eax,DWORD PTR es:[edi]
  415303:	xchg   BYTE PTR [edx+0xb],cl
  415306:	xor    BYTE PTR [ebp-0x29],dh
  415309:	adc    al,0x2d
  41530b:	pusha  
  41530c:	aaa    
  41530d:	ins    BYTE PTR es:[edi],dx
  41530e:	mov    gs,WORD PTR [ecx+0x34da7a]
  415314:	or     esp,DWORD PTR [edi+ecx*4-0x6c]
  415318:	(bad)  
  415319:	mov    cl,0xd3
  41531b:	inc    ecx
  41531c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41531d:	xchg   DWORD PTR [esi+0xd],eax
  415320:	arpl   WORD PTR ds:0x7784263d,bp
  415326:	lock sbb eax,0x91a12680
  41532c:	jmp    0x1f454c4a
  415331:	sub    al,0xd0
  415333:	xor    DWORD PTR [esi+0x32],0xe883292e
  41533a:	mov    bh,0xa4
  41533c:	lfs    esp,FWORD PTR [ebp-0x35351683]
  415343:	inc    edx
  415344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415345:	mov    edi,0xe207b083
  41534a:	and    BYTE PTR [ecx+ecx*8-0x30],dh
  41534e:	or     eax,0x66e2345d
  415353:	jmp    0x2eef:0xcd533cca
  41535a:	mov    edx,0x6e8283bd
  41535f:	jae    0x415343
  415361:	xchg   ebx,eax
  415362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415363:	and    eax,0xa05e862
  415368:	add    edx,DWORD PTR [edx-0x63bc59fd]
  41536e:	and    eax,0x803212c1
  415373:	in     al,0x93
  415375:	xor    eax,0x5e352627
  41537a:	cmp    dh,cl
  41537c:	fisubr DWORD PTR [ecx+0x32]
  41537f:	mov    dl,0x86
  415381:	pop    esp
  415382:	xor    DWORD PTR [edx-0x8],ebx
  415385:	test   al,0x67
  415387:	popf   
  415388:	jns    0x4153ba
  41538a:	jge    0x41537c
  41538c:	into   
  41538d:	icebp  
  41538e:	fisub  WORD PTR gs:[edi+0x27c62fbc]
  415395:	rcr    ah,0x7c
  415398:	mov    dh,0xef
  41539a:	aas    
  41539b:	aad    0xb3
  41539d:	mov    ebp,0xb9f0eedd
  4153a2:	stc    
  4153a3:	mov    esi,0x56fcc65b
  4153a8:	int3   
  4153a9:	addr16 in al,0x51
  4153ac:	jnp    0x4153b5
  4153ae:	call   0xa369:0x9e8b34d8
  4153b5:	xlat   BYTE PTR ds:[ebx]
  4153b6:	repnz das 
  4153b8:	sub    bl,ah
  4153ba:	dec    eax
  4153bb:	repnz push edx
  4153bd:	stos   DWORD PTR es:[edi],eax
  4153be:	jg     0x41537f
  4153c0:	not    esi
  4153c2:	sub    ebp,DWORD PTR [ebx+0x60]
  4153c5:	test   ecx,esp
  4153c7:	scas   al,BYTE PTR es:[edi]
  4153c8:	ins    BYTE PTR es:[edi],dx
  4153c9:	mov    esi,0x9fd91b5
  4153ce:	mov    bl,0x37
  4153d0:	retf   0xe6ca
  4153d3:	mov    eax,DWORD PTR [ebp+0x7acf8318]
  4153d9:	mov    edi,0xae9041fb
  4153de:	sbb    BYTE PTR [ecx-0x7a992f29],0x7c
  4153e5:	inc    edi
  4153e6:	adc    BYTE PTR [ecx],cl
  4153e8:	or     eax,0x6cb356b2
  4153ed:	aaa    
  4153ee:	adc    al,BYTE PTR [edx+0x732b0e8]
  4153f4:	scas   eax,DWORD PTR es:[edi]
  4153f5:	sub    bh,BYTE PTR [esi+0x1b6bb17]
  4153fb:	push   ds
  4153fc:	cmp    al,0x85
  4153fe:	pop    eax
  4153ff:	push   cs
  415400:	or     eax,0x87e63c55
  415405:	mov    edx,DWORD PTR ds:0xab4738b2
  41540b:	das    
  41540c:	adc    BYTE PTR [ebp+0x2065efa6],bl
  415412:	lock sbb DWORD PTR [edx-0x1a],ebp
  415416:	ret    
  415417:	clc    
  415418:	cli    
  415419:	push   cs
  41541a:	mov    ch,0xa5
  41541c:	sbb    ecx,DWORD PTR [esi]
  41541e:	push   ss
  41541f:	loopne 0x415414
  415421:	push   ss
  415422:	jle    0x4153b8
  415424:	or     al,0xcf
  415426:	outs   dx,DWORD PTR ds:[esi]
  415427:	add    ah,dh
  415429:	inc    ecx
  41542a:	cld    
  41542b:	pop    ss
  41542c:	in     al,0xee
  41542e:	push   ds
  41542f:	pop    ebp
  415430:	ret    
  415431:	rcl    BYTE PTR [eax-0x78],1
  415434:	xor    al,0x1f
  415436:	outs   dx,BYTE PTR ds:[esi]
  415437:	ja     0x41541a
  415439:	repz inc edi
  41543b:	(bad)  
  41543c:	sub    eax,0x7e7e398e
  415441:	ret    
  415442:	xchg   esp,eax
  415443:	lods   al,BYTE PTR ds:[esi]
  415444:	sub    ch,BYTE PTR [edi-0x79d44fb6]
  41544a:	xchg   esp,eax
  41544b:	cmp    DWORD PTR [eax],0xd78d071f
  415451:	inc    ebx
  415452:	sbb    eax,0x38960071
  415457:	and    DWORD PTR [eax+0x88f9185],edx
  41545d:	shr    BYTE PTR [edx+eiz*4+0x59],0x8
  415462:	ss mov esp,0x4ae151fe
  415468:	aas    
  415469:	jmp    FWORD PTR [ecx+0x5151f795]
  41546f:	adc    BYTE PTR [ebx-0x23388afe],dh
  415475:	lahf   
  415476:	cmp    DWORD PTR [ebp+esi*2-0x5eea789b],0xffffffea
  41547e:	inc    ebp
  41547f:	jae    0x4154df
  415481:	cmp    esi,DWORD PTR [ecx-0x1af22b6f]
  415487:	jb     0x4154e8
  415489:	gs (bad) 
  41548b:	sub    al,0xd4
  41548d:	mov    ebp,0x2f5b0d0b
  415492:	mov    eax,ds:0xc64986f6
  415497:	call   0xc865975d
  41549c:	loopne 0x415515
  41549e:	push   esi
  41549f:	gs cld 
  4154a1:	sub    ah,BYTE PTR [ebp+0x57]
  4154a4:	adc    DWORD PTR [eax+0x6],eax
  4154a7:	jge    0x4154fe
  4154a9:	rcl    DWORD PTR [ebx-0xf],1
  4154ac:	xlat   BYTE PTR ds:[ebx]
  4154ad:	or     al,0xc
  4154af:	test   DWORD PTR [esi-0x9ab86f1],esp
  4154b5:	lods   eax,DWORD PTR ds:[esi]
  4154b6:	jmp    0x415487
  4154b8:	mov    dl,0xf5
  4154ba:	clc    
  4154bb:	aaa    
  4154bc:	sbb    eax,0xf6c245c0
  4154c1:	dec    esi
  4154c2:	pop    edi
  4154c3:	xchg   ebp,eax
  4154c4:	sub    eax,0x40094c03
  4154c9:	call   0x329c:0xa98e7bb2
  4154d0:	jg     0x415498
  4154d2:	xchg   ecx,eax
  4154d3:	xchg   esp,eax
  4154d4:	out    dx,eax
  4154d5:	jb     0x415466
  4154d7:	sub    BYTE PTR [ebx+ebx*8+0x3f],ah
  4154db:	push   0xa3bb7e75
  4154e0:	(bad)  
  4154e1:	lahf   
  4154e2:	test   al,0xfa
  4154e4:	jb     0x415532
  4154e6:	push   es
  4154e7:	repnz dec ebx
  4154e9:	sbb    DWORD PTR [edi+0x1415b034],eax
  4154ef:	fiadd  WORD PTR [ebp+0x66]
  4154f2:	in     al,dx
  4154f3:	repz mov ds:0x169ed970,eax
  4154f9:	adc    al,0x5f
  4154fb:	dec    ebx
  4154fc:	or     ecx,ebx
  4154fe:	xchg   edx,eax
  4154ff:	repz std 
  415501:	fidiv  DWORD PTR [ecx+0x6a]
  415504:	lea    eax,[ebx-0x3d8b716d]
  41550a:	test   DWORD PTR [edx-0x59dd61d3],ecx
  415510:	pop    esp
  415511:	cmp    eax,0x142172a3
  415516:	adc    ch,al
  415518:	xchg   si,ax
  41551a:	pop    esi
  41551b:	cmp    ecx,ecx
  41551d:	push   edx
  41551e:	leave  
  41551f:	repz call 0xdd4bc660
  415525:	adc    cl,ch
  415527:	mov    ds:0x4ee3c9b6,al
  41552c:	ficom  DWORD PTR [ebx-0x2a]
  41552f:	hlt    
  415530:	pop    ecx
  415531:	stc    
  415532:	and    ah,0x4e
  415535:	xchg   ebp,eax
  415536:	pop    esi
  415537:	(bad)  [eax]
  415539:	xchg   esp,eax
  41553a:	jle    0x41559b
  41553c:	dec    esp
  41553d:	inc    edi
  41553e:	mov    ds:0xeba352fd,eax
  415543:	arpl   bp,bx
  415545:	inc    ebp
  415546:	shl    BYTE PTR [esi-0x5],1
  415549:	push   ds
  41554a:	scas   eax,DWORD PTR es:[edi]
  41554b:	out    dx,al
  41554c:	jecxz  0x415500
  41554e:	addr16 sti 
  415550:	pusha  
  415551:	enter  0x9608,0xa8
  415555:	je     0x415555
  415557:	mov    ecx,0x9e2a5181
  41555c:	dec    ecx
  41555d:	sub    BYTE PTR [esi-0x34],bh
  415560:	push   eax
  415561:	imul   BYTE PTR [edi+0x47]
  415564:	loope  0x41559c
  415566:	out    dx,eax
  415567:	out    0xba,eax
  415569:	cld    
  41556a:	pop    esp
  41556b:	jbe    0x4155c6
  41556d:	push   ss
  41556e:	(bad)  
  41556f:	fsubr  DWORD PTR [esi]
  415571:	(bad)
  415574:	mov    al,ds:0xf756bad
  415579:	inc    ecx
  41557a:	inc    eax
  41557b:	push   es
  41557c:	or     al,BYTE PTR [ecx+0x293022c1]
  415582:	aaa    
  415583:	cmp    DWORD PTR [ebx-0x2c],ebx
  415586:	adc    DWORD PTR [edi],0x65
  415589:	xchg   ebx,eax
  41558a:	xchg   esi,eax
  41558b:	fisub  DWORD PTR gs:[ebx]
  41558e:	dec    eax
  41558f:	xchg   esi,eax
  415590:	aad    0x57
  415592:	mov    dh,0xce
  415594:	xor    cl,BYTE PTR [edx]
  415596:	(bad)  
  415597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415598:	mov    dh,0x2a
  41559a:	mov    eax,0xe6ffcbeb
  41559f:	push   esi
  4155a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a1:	or     eax,0x2b960177
  4155a6:	scas   eax,DWORD PTR es:[edi]
  4155a7:	pushf  
  4155a8:	fnstenv [edx+ebx*2+0x26d65918]
  4155af:	jle    0x415551
  4155b1:	(bad)  
  4155b3:	or     eax,ecx
  4155b5:	stos   DWORD PTR es:[edi],eax
  4155b6:	aam    0x67
  4155b8:	imul   esi,DWORD PTR [ebx+ebx*8+0x69336c38],0xffffff90
  4155c0:	rcr    BYTE PTR [eax],0x15
  4155c3:	inc    eax
  4155c4:	xchg   DWORD PTR [edi-0x41bf44a5],esp
  4155ca:	push   ebp
  4155cb:	ins    DWORD PTR es:[edi],dx
  4155cc:	ins    BYTE PTR es:[edi],dx
  4155cd:	jge    0x415625
  4155cf:	lea    edi,[esi-0x3ec3da04]
  4155d5:	out    0xe2,eax
  4155d7:	jle    0x4155e6
  4155d9:	or     al,0xe9
  4155db:	jg     0x415601
  4155dd:	or     bh,BYTE PTR [ebp+0x447f5572]
  4155e3:	push   0xffffff90
  4155e5:	nop
  4155e6:	xchg   edx,eax
  4155e7:	mov    esp,0x7efd4ba0
  4155ec:	test   edx,ebx
  4155ee:	test   BYTE PTR [eax+0x34],0x33
  4155f2:	mov    bl,0x3f
  4155f4:	stos   DWORD PTR es:[edi],eax
  4155f5:	add    ebx,DWORD PTR [ebx+esi*1+0x6fc9bde3]
  4155fc:	stc    
  4155fd:	ficom  DWORD PTR [ebx]
  4155ff:	pop    ebp
  415600:	gs std 
  415602:	mov    eax,DWORD PTR [eax-0x4f3b7394]
  415608:	push   ecx
  415609:	sub    al,0x7f
  41560b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41560c:	stos   DWORD PTR es:[edi],eax
  41560d:	nop
  41560e:	hlt    
  41560f:	push   esi
  415610:	pop    edi
  415611:	and    BYTE PTR [ebx-0xd1dd708],bl
  415617:	xchg   ebp,eax
  415618:	call   0x6195:0xdb68f26c
  41561f:	in     al,dx
  415620:	stos   BYTE PTR es:[edi],al
  415621:	and    al,0x69
  415623:	inc    esi
  415624:	push   0xbf15a4a
  415629:	lods   al,BYTE PTR ds:[esi]
  41562a:	mov    edi,0xea8bf123
  41562f:	sti    
  415630:	mov    BYTE PTR [ecx+0x3d],dh
  415633:	xchg   esi,eax
  415634:	and    al,0x4c
  415636:	mov    es,WORD PTR [eax-0x23e233b1]
  41563c:	push   esi
  41563d:	shl    BYTE PTR ds:0x216250e7,0x4a
  415644:	lds    esi,FWORD PTR [ebp-0x7f]
  415647:	mov    esp,DWORD PTR [esi]
  415649:	sub    DWORD PTR [edi+edx*1],ebp
  41564c:	or     BYTE PTR [edx+esi*1-0x1b26b942],ah
  415653:	push   edx
  415654:	ins    BYTE PTR es:[edi],dx
  415655:	data16 xlat BYTE PTR ds:[ebx]
  415657:	adc    ch,BYTE PTR [esi+0x63f01fc3]
  41565d:	cmp    eax,0xac7e0f73
  415662:	jl     0x41563d
  415664:	rcl    DWORD PTR [edi-0x5d],1
  415667:	pop    esi
  415668:	add    dh,bl
  41566a:	jecxz  0x415616
  41566c:	push   ecx
  41566d:	mov    ecx,0xdb8086c1
  415672:	pop    ss
  415673:	push   ss
  415674:	lahf   
  415675:	mov    ebx,0x929ed880
  41567a:	int3   
  41567b:	xchg   esi,eax
  41567c:	in     al,dx
  41567d:	cwde   
  41567e:	fwait
  41567f:	imul   ebx,DWORD PTR [edx+0x14],0x7f3c62d5
  415686:	mov    ds:0x4bdfab20,al
  41568b:	stos   DWORD PTR es:[edi],eax
  41568c:	mov    al,ds:0xa8752285
  415691:	shr    dl,0x7d
  415694:	pop    eax
  415695:	pop    ebx
  415696:	call   0x1085:0x532c6874
  41569d:	daa    
  41569e:	mov    dl,0x69
  4156a0:	or     DWORD PTR [edx-0x5c],edi
  4156a3:	xor    ebx,0x74
  4156a6:	jno    0x415648
  4156a8:	repnz add BYTE PTR [edx],0x7d
  4156ac:	repz inc edi
  4156ae:	imul   ebp,DWORD PTR [ebx-0x1643498a],0x59
  4156b5:	sub    BYTE PTR [edx],dl
  4156b7:	xchg   ecx,eax
  4156b8:	sysenter 
  4156ba:	bound  ebx,QWORD PTR [edi]
  4156bc:	sub    eax,0x8692407b
  4156c1:	lea    esp,[ebx+0x72]
  4156c4:	pushf  
  4156c5:	adc    al,bh
  4156c7:	inc    edx
  4156c8:	add    BYTE PTR [eax-0x75063231],ch
  4156ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cf:	adc    DWORD PTR [ebp-0x30],0x65
  4156d3:	neg    DWORD PTR [esi-0x6fb4a3a3]
  4156d9:	addr16 pop es
  4156db:	scas   eax,DWORD PTR es:[edi]
  4156dc:	mov    al,0x11
  4156de:	imul   edi,DWORD PTR [esi],0xa42425bb
  4156e4:	dec    edi
  4156e5:	mov    WORD PTR [eax-0x72],cs
  4156e8:	or     ecx,DWORD PTR [esi+0x51574cd9]
  4156ee:	sub    cl,BYTE PTR [edx+0x7a]
  4156f1:	jp     0x4156da
  4156f3:	jge    0x41569e
  4156f5:	push   ebx
  4156f6:	in     eax,dx
  4156f7:	mov    edx,esi
  4156f9:	or     esp,esi
  4156fb:	cmp    al,0xc3
  4156fd:	mov    eax,0x89a6da4
  415702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415703:	in     eax,0xa4
  415705:	call   0x6e6c905a
  41570a:	fbstp  TBYTE PTR [esi-0x16b28526]
  415710:	dec    eax
  415711:	ds nop
  415713:	xchg   ebp,eax
  415714:	pop    ecx
  415715:	int3   
  415716:	scas   eax,DWORD PTR es:[edi]
  415717:	mov    edi,0x4d2c1762
  41571c:	mov    bh,0xd1
  41571e:	loope  0x41574d
  415720:	mov    dl,0xe8
  415722:	mov    ds:0x499d2d92,al
  415727:	mov    al,ds:0x8c9fc6ca
  41572c:	jbe    0x4156f7
  41572e:	push   cs
  41572f:	push   ds
  415730:	repnz fs in al,dx
  415733:	xlat   BYTE PTR ds:[ebx]
  415734:	add    bh,bl
  415736:	add    esi,DWORD PTR [ebx+0xb5ad4ec]
  41573c:	add    DWORD PTR [ecx+0x4f],ebp
  41573f:	rcl    DWORD PTR [ebp-0x6],0x5a
  415743:	or     eax,0xfb436a76
  415748:	retf   0xa121
  41574b:	lds    edi,FWORD PTR [edx]
  41574d:	mov    eax,0x132ebe2
  415752:	sbb    cl,BYTE PTR [ebx-0x7b]
  415755:	dec    esp
  415756:	or     BYTE PTR [esi+0x2c62a783],al
  41575c:	xor    al,0xb2
  41575e:	hlt    
  41575f:	xchg   ecx,eax
  415760:	je     0xc9ade840
  415766:	jle    0x415704
  415768:	push   ebp
  415769:	ss push eax
  41576b:	add    edx,DWORD PTR [edi-0x46]
  41576e:	dec    ebp
  41576f:	cmc    
  415770:	fisub  DWORD PTR [eax]
  415772:	mov    bl,0xf0
  415774:	inc    ebx
  415775:	inc    esp
  415776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415778:	sub    eax,0xb8f2dbf1
  41577d:	mov    ah,0xcb
  41577f:	in     eax,0xb8
  415781:	sub    al,0x46
  415783:	imul   edi,DWORD PTR [ebp+0x68],0xffffffae
  415787:	mov    ebx,0x1b99d347
  41578c:	call   0x38effd17
  415791:	jbe    0x415763
  415793:	(bad)  
  415794:	mov    ss,WORD PTR [edx-0x59]
  415797:	daa    
  415798:	mov    ch,0x2e
  41579a:	inc    eax
  41579b:	lods   al,BYTE PTR ds:[esi]
  41579c:	push   esp
  41579d:	lock and al,0x7f
  4157a0:	in     al,0x8c
  4157a2:	and    BYTE PTR [eax+0x41b623a8],dl
  4157a8:	add    ebp,esp
  4157aa:	lea    ecx,[edi+0x4b]
  4157ad:	pusha  
  4157ae:	icebp  
  4157af:	adc    eax,0x89c60943
  4157b4:	lds    esi,FWORD PTR [ecx+0x1be7d3f1]
  4157ba:	push   ebp
  4157bb:	cwde   
  4157bc:	mov    es,esp
  4157be:	dec    edx
  4157bf:	sub    al,0x9f
  4157c1:	in     al,dx
  4157c2:	xlat   BYTE PTR ds:[ebx]
  4157c3:	and    eax,0xf42cc21e
  4157c8:	cmp    al,0xf9
  4157ca:	pop    es
  4157cb:	xor    eax,0x421506ad
  4157d0:	call   FWORD PTR [ebx+0x4]
  4157d3:	cli    
  4157d4:	mov    ebx,0x842c338
  4157d9:	or     bl,BYTE PTR [ebx-0x5b]
  4157dc:	sahf   
  4157dd:	js     0x41582f
  4157df:	add    BYTE PTR [ecx+0x69c9c6b],al
  4157e5:	pop    edi
  4157e6:	mov    eax,ds:0x72dc9bff
  4157eb:	pop    esi
  4157ec:	dec    ebx
  4157ed:	ins    DWORD PTR es:[edi],dx
  4157ee:	loopne 0x415778
  4157f0:	push   ds
  4157f1:	(bad)  
  4157f2:	jmp    0x52f535d0
  4157f7:	mov    esi,DWORD PTR [ebx+ebp*4-0x4eac6c56]
  4157fe:	iret   
  4157ff:	pusha  
  415800:	jg     0x41586c
  415802:	adc    BYTE PTR [esi-0x64],0xef
  415806:	inc    esi
  415807:	mov    esi,0x8fe576fb
  41580c:	sub    eax,0xe130c7f6
  415811:	fs sbb eax,0xba9fba5a
  415817:	push   edi
  415818:	or     ah,BYTE PTR [ebp-0x3a3b5da0]
  41581e:	pop    es
  41581f:	push   ds
  415820:	cdq    
  415821:	jge    0x415802
  415823:	mov    esp,0xd15ea63c
  415828:	xor    bl,ah
  41582a:	inc    ebx
  41582b:	rcr    BYTE PTR [ebx+0x5efb632c],0x1e
  415832:	and    ch,al
  415834:	sbb    BYTE PTR [ecx+eiz*2-0x3a],cl
  415838:	addr16 (bad) 
  41583a:	div    DWORD PTR [esi+0x1]
  41583d:	push   ss
  41583e:	popa   
  41583f:	mov    ds:0xd6cf7523,eax
  415844:	inc    eax
  415845:	pop    ds
  415846:	jmp    0x49daaab2
  41584b:	inc    ecx
  41584c:	(bad)  
  41584d:	sbb    al,0xdc
  41584f:	sub    BYTE PTR [ecx+0x41248990],0x55
  415856:	dec    esi
  415857:	mov    BYTE PTR [edx+0x1384148c],bh
  41585d:	leave  
  41585e:	xor    BYTE PTR [edx+0x5322f4d7],bl
  415864:	sbb    eax,0xfd926cea
  415869:	popf   
  41586a:	das    
  41586b:	loopne 0x4158e6
  41586d:	loope  0x415845
  41586f:	ret    
  415870:	push   edi
  415871:	and    ebx,DWORD PTR [edi+0x2c]
  415874:	pusha  
  415875:	sbb    ebx,DWORD PTR [edi+0x5f]
  415878:	mov    ebx,0x68b69e34
  41587d:	mov    bl,0x96
  41587f:	xor    BYTE PTR [eax-0xaac225a],bl
  415885:	cwde   
  415886:	std    
  415887:	je     0x415908
  415889:	mov    eax,ds:0x3cbf1873
  41588e:	imul   ebp,ebx,0x74
  415891:	mov    ebp,0x8d736fcd
  415896:	pop    ebp
  415897:	addr16 sbb al,0x66
  41589a:	stos   BYTE PTR es:[edi],al
  41589b:	dec    ecx
  41589c:	mov    ds:0xa43c057e,al
  4158a1:	xor    edi,DWORD PTR [eax-0x2677145a]
  4158a7:	jmp    0x4158c4
  4158a9:	sbb    al,dl
  4158ab:	int3   
  4158ac:	sbb    eax,0xb7a6b74c
  4158b1:	fld    DWORD PTR [edx+ebx*1+0x70e64726]
  4158b8:	adc    ebp,esi
  4158ba:	dec    ecx
  4158bb:	mov    dh,0x77
  4158bd:	cli    
  4158be:	fist   DWORD PTR ds:0x53bdce6e
  4158c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c5:	inc    edx
  4158c6:	add    ecx,DWORD PTR [eax+ebp*8-0x4654bbf4]
  4158cd:	xor    eax,0x974d7768
  4158d2:	jnp    0x41589d
  4158d4:	jge    0x415913
  4158d6:	nop
  4158d7:	cld    
  4158d8:	jmp    FWORD PTR [ebx]
  4158da:	and    BYTE PTR [eax+0x58],bl
  4158dd:	push   0x4c337179
  4158e2:	test   DWORD PTR [edx],ebx
  4158e4:	mov    ch,0xdf
  4158e6:	mov    esi,DWORD PTR [edx]
  4158e8:	inc    edi
  4158e9:	lea    ebx,ds:0xf2ba5838
  4158ef:	cmp    BYTE PTR [ebp-0x722e3cc2],bh
  4158f5:	(bad)  
  4158f6:	pop    ss
  4158f7:	lock fisubr WORD PTR [ebp-0x1156b1a9]
  4158fe:	fiadd  DWORD PTR [edx+0x6e]
  415901:	lods   al,BYTE PTR ds:[esi]
  415902:	icebp  
  415903:	sub    eax,0xaa08e120
  415908:	fs cmp DWORD PTR ss:[eax],0xf2ccf9ac
  415910:	mov    edx,0xe7b26091
  415915:	mov    cs,WORD PTR [ecx-0x56d3921c]
  41591b:	push   ss
  41591c:	mov    cl,0xb0
  41591e:	int3   
  41591f:	lds    eax,FWORD PTR [esp+edx*2]
  415922:	clc    
  415923:	dec    ecx
  415924:	mov    DWORD PTR [ecx+0x4371daff],ebp
  41592a:	mov    eax,eax
  41592c:	pop    ebx
  41592d:	sbb    eax,DWORD PTR [edx-0x5b]
  415930:	mov    ds:0xa6a0a73b,eax
  415935:	je     0x4158fd
  415937:	movhlps xmm2,xmm7
  41593a:	xchg   ecx,eax
  41593b:	mov    ebx,edi
  41593d:	pextrw ebx,(bad),0xc5
  41593f:	cwde   
  415940:	push   esi
  415941:	mov    ebp,0x1ab9a314
  415946:	xor    cl,dh
  415948:	cdq    
  415949:	mov    ch,BYTE PTR [esi+0x3c]
  41594c:	scas   eax,DWORD PTR es:[edi]
  41594d:	(bad)  
  41594f:	or     edx,eax
  415951:	pop    ebx
  415952:	out    0xc5,eax
  415954:	cs cmp al,0xd0
  415957:	adc    DWORD PTR [edi],eax
  415959:	ds dec esp
  41595b:	dec    esi
  41595c:	into   
  41595d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595e:	mov    al,ds:0xa40d8baa
  415963:	(bad)  
  415964:	cwde   
  415965:	dec    ecx
  415966:	mov    gs,esp
  415968:	push   esi
  415969:	stos   BYTE PTR es:[edi],al
  41596a:	pop    es
  41596b:	(bad)  
  41596c:	aaa    
  41596d:	iret   
  41596e:	adc    BYTE PTR [ecx-0x58],0x9f
  415972:	pop    ebp
  415973:	lods   eax,DWORD PTR ds:[esi]
  415974:	in     al,0x36
  415976:	mov    al,ds:0x94764aa4
  41597b:	adc    DWORD PTR [edi+eiz*8-0x78],esp
  41597f:	inc    ebx
  415980:	sub    edi,DWORD PTR [edi+edi*8-0x37]
  415984:	adc    al,dh
  415986:	js     0x4159b4
  415988:	ins    BYTE PTR es:[edi],dx
  415989:	imul   ecx,DWORD PTR [eax+ebp*4],0xa
  41598d:	push   cs
  41598e:	cmp    DWORD PTR [ecx+0x42],esi
  415991:	lods   eax,DWORD PTR ds:[esi]
  415992:	inc    edx
  415993:	push   ecx
  415994:	xor    DWORD PTR [eax+0x4a4b5f6c],ecx
  41599a:	jmp    0xeb1d:0xa3b23fa3
  4159a1:	or     eax,esi
  4159a3:	add    bl,BYTE PTR [edx]
  4159a5:	sahf   
  4159a6:	mov    al,0xc0
  4159a8:	mov    ss,WORD PTR ss:[ebx]
  4159ab:	adc    eax,0x1bc885fc
  4159b0:	repz dec DWORD PTR [ecx-0x3d6dd690]
  4159b7:	mov    bl,0x9b
  4159b9:	int    0x8b
  4159bb:	sbb    eax,0xc1962b5a
  4159c0:	out    dx,al
  4159c1:	in     eax,0xb9
  4159c3:	adc    DWORD PTR [ebx-0x43432360],esp
  4159c9:	je     0x4159ad
  4159cb:	dec    edi
  4159cc:	jae    0x415a35
  4159ce:	jle    0x415990
  4159d0:	sub    ebx,DWORD PTR [eax+edx*2+0x6c]
  4159d4:	cmc    
  4159d5:	xchg   edi,eax
  4159d6:	loop   0x415a2f
  4159d8:	mov    ds:0x15611a3c,al
  4159dd:	jecxz  0x415a3b
  4159df:	jp     0x415a03
  4159e1:	daa    
  4159e2:	jge    0x4159e5
  4159e4:	test   al,0x1c
  4159e6:	dec    esi
  4159e7:	mov    eax,ds:0x4299e79e
  4159ec:	mov    cl,0xa
  4159ee:	sbb    al,0x5f
  4159f0:	stos   DWORD PTR es:[edi],eax
  4159f1:	sub    dl,dl
  4159f3:	repnz dec edx
  4159f5:	sub    eax,0x3f6bc556
  4159fa:	adc    DWORD PTR [edi],ecx
  4159fc:	test   eax,0xcf047c1d
  415a01:	sub    eax,0xe4816819
  415a06:	sbb    eax,0xc8154a28
  415a0b:	out    dx,eax
  415a0c:	jg     0x415a71
  415a0e:	mov    ebp,fs
  415a10:	sahf   
  415a11:	pop    ss
  415a12:	out    dx,eax
  415a13:	mov    ebx,0x7d201c77
  415a18:	xor    BYTE PTR [esi+0x63261e2d],0xb5
  415a1f:	sub    BYTE PTR [ebx],0x5c
  415a22:	sub    edi,0xfffffffe
  415a25:	test   al,0xa6
  415a27:	sbb    eax,DWORD PTR [eax]
  415a29:	mov    DWORD PTR [ebx+0x2c],esp
  415a2c:	pop    esp
  415a2d:	out    0x6e,eax
  415a2f:	mov    edi,0x44d01efd
  415a34:	ins    BYTE PTR es:[edi],dx
  415a35:	mov    al,ds:0x4cebe01b
  415a3a:	and    eax,0x92e44895
  415a3f:	mov    edi,0xca10da41
  415a44:	sub    eax,0xcd2d01ea
  415a49:	mov    esp,0x120ffbfd
  415a4e:	xchg   esp,eax
  415a4f:	cwde   
  415a50:	sub    al,0x81
  415a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a53:	inc    ebx
  415a54:	sub    DWORD PTR [ebx+0x6b1dd558],esi
  415a5a:	jne    0x4159eb
  415a5c:	pop    ebp
  415a5d:	clc    
  415a5e:	nop
  415a5f:	test   BYTE PTR [edx-0x21],dl
  415a62:	cs es push esi
  415a65:	inc    ecx
  415a66:	daa    
  415a67:	outs   dx,BYTE PTR ds:[esi]
  415a68:	push   ecx
  415a69:	inc    ebx
  415a6a:	es sti 
  415a6c:	(bad)  
  415a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6e:	jno    0x415a0e
  415a70:	dec    esi
  415a71:	js     0x415a7f
  415a73:	sti    
  415a74:	pushf  
  415a75:	loop   0x415a00
  415a77:	hlt    
  415a78:	xchg   esp,eax
  415a79:	jge    0x415adf
  415a7b:	aad    0x29
  415a7d:	dec    edx
  415a7e:	aam    0x7c
  415a80:	push   ss
  415a81:	stc    
  415a82:	xchg   ebp,eax
  415a83:	mov    ds:0xd7b2cced,eax
  415a88:	aad    0xc9
  415a8a:	cmp    edi,DWORD PTR [ebx-0x76]
  415a8d:	dec    ebx
  415a8e:	inc    esi
  415a8f:	bound  esi,QWORD PTR ds:0x8a18b74
  415a95:	mov    edx,0x14299d4
  415a9a:	xchg   edi,eax
  415a9b:	pop    ecx
  415a9c:	shr    BYTE PTR [ebx],0xc7
  415a9f:	dec    eax
  415aa0:	or     al,0x6d
  415aa2:	mov    dl,0x33
  415aa4:	js     0x415acc
  415aa6:	cmp    edx,edx
  415aa8:	jbe    0x415b0c
  415aaa:	cmp    ebp,DWORD PTR [ebp+0x35b74ca8]
  415ab0:	xchg   ebx,eax
  415ab1:	inc    edx
  415ab2:	rol    BYTE PTR [ecx],cl
  415ab4:	xchg   ecx,eax
  415ab5:	inc    esp
  415ab6:	mov    cl,0x1f
  415ab8:	adc    al,0x59
  415aba:	es pushf 
  415abc:	mov    ah,0xdc
  415abe:	aas    
  415abf:	mov    edi,0x25871908
  415ac4:	add    DWORD PTR [edi-0x381d4a1f],ebx
  415aca:	xor    BYTE PTR [eax],ah
  415acc:	xor    DWORD PTR ds:0xd3842e24,esp
  415ad2:	ds ins DWORD PTR es:[edi],dx
  415ad4:	xor    cl,BYTE PTR [eax-0x2d739bed]
  415ada:	shl    BYTE PTR [esi-0x41],cl
  415add:	cmp    al,0x9f
  415adf:	scas   eax,DWORD PTR es:[edi]
  415ae0:	adc    DWORD PTR [edi+0x962e44a],eax
  415ae6:	push   edx
  415ae7:	mov    ecx,0x570e593d
  415aec:	or     al,0x53
  415aee:	(bad)  
  415af0:	jg     0x415ab2
  415af2:	add    eax,0x8a40f5bd
  415af7:	add    ecx,DWORD PTR [ecx-0x7b188d1c]
  415afd:	push   eax
  415afe:	and    BYTE PTR ds:0x38b873bb,dl
  415b04:	lock repz jl 0x415aea
  415b08:	cmp    bh,BYTE PTR [ecx-0xaf64a55]
  415b0e:	pop    edi
  415b0f:	and    esp,ebx
  415b11:	jb     0x415b0e
  415b13:	dec    eax
  415b14:	push   esp
  415b15:	add    BYTE PTR [ebx+0x5c514913],dh
  415b1b:	out    dx,al
  415b1c:	mov    dh,0x4c
  415b1e:	lods   al,BYTE PTR ds:[esi]
  415b1f:	loop   0x415b2e
  415b21:	addr16 push eax
  415b23:	mov    ch,BYTE PTR [ecx*2+0x45c478e]
  415b2a:	cmp    al,0x80
  415b2c:	out    dx,al
  415b2d:	lahf   
  415b2e:	ins    DWORD PTR es:[edi],dx
  415b2f:	inc    esp
  415b30:	inc    eax
  415b31:	test   DWORD PTR [ebx],0x51e2fe08
  415b37:	fwait
  415b38:	test   al,0x94
  415b3a:	ins    BYTE PTR es:[edi],dx
  415b3b:	mov    esi,0x12fe9a34
  415b40:	nop
  415b41:	jnp    0x415b7d
  415b43:	sub    esi,DWORD PTR ds:0xeb6c995b
  415b49:	dec    esp
  415b4a:	inc    eax
  415b4b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415b4d:	fchs   
  415b4f:	inc    edi
  415b50:	push   edx
  415b51:	ror    BYTE PTR ds:0x9b75f20f,cl
  415b57:	or     BYTE PTR [eax-0x43],bh
  415b5a:	push   ss
  415b5b:	aad    0x1d
  415b5d:	dec    esi
  415b5e:	add    eax,0x837d7e7d
  415b63:	(bad)  
  415b64:	call   0xf642994c
  415b69:	pop    es
  415b6a:	dec    ebx
  415b6b:	mov    bh,0x9f
  415b6d:	jbe    0x415b85
  415b6f:	std    
  415b70:	and    esi,ebp
  415b72:	test   BYTE PTR [eax],dh
  415b74:	lea    edx,[esi-0xc4abb53]
  415b7a:	pusha  
  415b7b:	ja     0x415ba3
  415b7d:	and    DWORD PTR [ebp-0x3],0xffffffbd
  415b81:	inc    ebp
  415b82:	out    0x4,eax
  415b84:	sub    BYTE PTR [eax+ebx*1-0x311ca5e1],dl
  415b8b:	aas    
  415b8c:	xor    DWORD PTR [eax+0x4b],0xba13bf64
  415b93:	in     eax,0x5e
  415b95:	xor    DWORD PTR [edi-0x56],esi
  415b98:	inc    ecx
  415b99:	loope  0x415b87
  415b9b:	popf   
  415b9c:	xchg   edi,eax
  415b9d:	sub    eax,0x406688c5
  415ba2:	ss push edi
  415ba4:	fcmovnbe st,st(2)
  415ba6:	push   esp
  415ba7:	dec    ecx
  415ba8:	jmp    0xa438:0x9d401a62
  415baf:	push   es
  415bb0:	stc    
  415bb1:	aaa    
  415bb2:	sub    edx,DWORD PTR [ebp-0x296c7ae6]
  415bb8:	arpl   WORD PTR ds:0xde99d0c9,bp
  415bbe:	adc    dl,0x82
  415bc1:	xor    cl,dh
  415bc3:	out    dx,al
  415bc4:	cwde   
  415bc5:	mov    bh,0xb2
  415bc7:	popa   
  415bc8:	jp     0x415b75
  415bca:	rcl    ch,0x5
  415bcd:	cmp    al,0x74
  415bcf:	fnsave [ebx+0x14531bfb]
  415bd5:	aas    
  415bd6:	add    eax,0x441e124a
  415bdb:	out    0xeb,al
  415bdd:	cmp    BYTE PTR [edi],dh
  415bdf:	pop    ds
  415be0:	int3   
  415be1:	in     eax,dx
  415be2:	cmp    esi,DWORD PTR [edx]
  415be4:	ins    DWORD PTR es:[edi],dx
  415be5:	jp     0x415c0a
  415be7:	pop    edx
  415be8:	inc    edx
  415be9:	fs pop esi
  415beb:	mov    DWORD PTR [eax+0x69313396],esp
  415bf1:	(bad)  
  415bf2:	scas   eax,DWORD PTR es:[edi]
  415bf3:	pusha  
  415bf4:	je     0x415beb
  415bf6:	(bad)  
  415bf7:	mov    esi,0x6a4870e4
  415bfc:	dec    ebp
  415bfd:	ins    BYTE PTR es:[edi],dx
  415bfe:	pushf  
  415bff:	adc    dl,BYTE PTR [esi]
  415c01:	(bad)  
  415c03:	(bad)  
  415c04:	call   0x9c4e:0x597a8fd5
  415c0b:	sbb    al,BYTE PTR [edi]
  415c0d:	push   ebx
  415c0e:	fadd   DWORD PTR ds:0x3702e6a
  415c14:	mov    ds:0xdc54e9b2,al
  415c19:	push   esi
  415c1a:	push   ds
  415c1b:	fst    DWORD PTR [edx+esi*1+0x27]
  415c1f:	pushf  
  415c20:	fmul   QWORD PTR [eax]
  415c22:	stos   DWORD PTR es:[edi],eax
  415c23:	loopne 0x415c7c
  415c25:	clc    
  415c26:	ja     0x415c66
  415c28:	xchg   edx,eax
  415c29:	repnz in al,dx
  415c2b:	adc    esp,DWORD PTR [ebp-0x71]
  415c2e:	push   0xffffff9a
  415c30:	xchg   BYTE PTR [ebx+0x5be3f917],bh
  415c36:	xchg   ebp,eax
  415c37:	shl    BYTE PTR [edi+esi*2],1
  415c3a:	cmc    
  415c3b:	sub    DWORD PTR [ebx],edx
  415c3d:	std    
  415c3e:	cdq    
  415c3f:	pushf  
  415c40:	and    BYTE PTR [edi+0x4f],ah
  415c43:	fptan  
  415c45:	mov    esp,0xd105c25b
  415c4a:	jle    0x415c43
  415c4c:	stos   BYTE PTR es:[edi],al
  415c4d:	jo     0x415c55
  415c4f:	or     esp,esi
  415c51:	sbb    al,0x1c
  415c53:	ja     0x415be8
  415c55:	fild   WORD PTR [edi]
  415c57:	push   0xd0679778
  415c5c:	mov    ah,0x9b
  415c5e:	inc    ebp
  415c5f:	inc    ecx
  415c60:	xchg   ebp,eax
  415c61:	inc    eax
  415c62:	add    eax,0xf0917b20
  415c67:	call   0x7ce5:0x31e4d6d0
  415c6e:	stos   DWORD PTR es:[edi],eax
  415c6f:	xchg   DWORD PTR [esp+edi*4-0x5c],ecx
  415c73:	and    al,0x17
  415c75:	sbb    DWORD PTR ds:0xacf1c223,eax
  415c7b:	lods   al,BYTE PTR ds:[esi]
  415c7c:	out    0x7,al
  415c7e:	cmp    eax,0xfaa43628
  415c83:	xchg   edi,eax
  415c84:	outs   dx,DWORD PTR ds:[esi]
  415c85:	xor    al,0x47
  415c87:	sbb    eax,0xef9ecaa
  415c8c:	cs cmp ch,al
  415c8f:	cmp    DWORD PTR [ebx-0x1855ae02],edx
  415c95:	xchg   ecx,eax
  415c96:	push   ss
  415c97:	shl    BYTE PTR [edx+ecx*1+0x6a],cl
  415c9b:	mov    esp,0xa9b9255
  415ca0:	pop    ds
  415ca1:	mov    edx,0x213c4e5c
  415ca6:	mov    esi,0x5e41e263
  415cab:	pop    es
  415cac:	rcr    DWORD PTR [edx-0x72],0x64
  415cb0:	gs add eax,esp
  415cb3:	dec    esp
  415cb5:	jl     0x415c80
  415cb7:	(bad)  
  415cb8:	push   ds
  415cb9:	push   ds
  415cba:	mov    ds:0xee923065,al
  415cbf:	ja     0x415c51
  415cc1:	pop    ecx
  415cc2:	aas    
  415cc3:	pop    eax
  415cc4:	mov    DWORD PTR ds:[ecx],ebp
  415cc7:	int    0x23
  415cc9:	mov    ah,0x31
  415ccb:	mov    DWORD PTR [ebp+0x51],esp
  415cce:	or     bh,cl
  415cd0:	mov    dh,0xa5
  415cd2:	adc    BYTE PTR fs:[esi+0x5b],ah
  415cd6:	rcr    BYTE PTR [esi+0x48eefce6],1
  415cdc:	int3   
  415cdd:	loop   0x415c6c
  415cdf:	dec    eax
  415ce0:	cmp    eax,0xe000650a
  415ce5:	pop    es
  415ce6:	in     eax,dx
  415ce7:	mov    DWORD PTR [eax+0x1316689],eax
  415ced:	jmp    0x713e:0x999814cc
  415cf4:	cmp    DWORD PTR [edx],edi
  415cf6:	inc    eax
  415cf7:	sar    DWORD PTR [eax+0x2336e8a0],cl
  415cfd:	adc    bh,BYTE PTR [eax+0x14]
  415d00:	mov    DWORD PTR [esi+0x58],ebp
  415d03:	in     al,0x68
  415d05:	cmp    ebp,DWORD PTR [edi]
  415d07:	lods   al,BYTE PTR ds:[esi]
  415d08:	sbb    DWORD PTR [eax+0x46],0xc2b1e5ff
  415d0f:	xchg   ecx,eax
  415d10:	aas    
  415d11:	ja     0x415d22
  415d13:	xchg   BYTE PTR [eax+0x64],al
  415d16:	and    eax,0x2b0a3b40
  415d1b:	push   esi
  415d1c:	fs push ebx
  415d1e:	xchg   edx,eax
  415d1f:	popf   
  415d20:	pop    ecx
  415d21:	cmp    DWORD PTR [bp-0x46],ebx
  415d25:	push   es
  415d26:	xor    BYTE PTR [ebx+edi*4-0x69],ah
  415d2a:	mov    ch,0xd4
  415d2c:	cmc    
  415d2d:	xchg   edx,eax
  415d2e:	cmp    eax,0xbd0107f4
  415d33:	add    al,0xab
  415d35:	arpl   sp,si
  415d37:	dec    esp
  415d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d39:	in     al,dx
  415d3a:	dec    ebx
  415d3b:	jp     0x415d80
  415d3d:	mov    ds:0xa6021091,eax
  415d42:	sub    ebp,edi
  415d44:	push   ebp
  415d45:	xor    BYTE PTR [eax-0x6770394],cl
  415d4b:	shr    DWORD PTR [edi-0x80],0xae
  415d4f:	das    
  415d50:	fwait
  415d51:	xchg   DWORD PTR [esp+edi*8+0x5b2bd151],eax
  415d58:	out    dx,al
  415d59:	addr16 push eax
  415d5b:	out    0x9f,al
  415d5d:	fsubr  DWORD PTR [ebp-0x1a]
  415d60:	test   BYTE PTR [esi],bh
  415d62:	and    ecx,esp
  415d64:	mov    es,WORD PTR [esi]
  415d66:	xlat   BYTE PTR ds:[ebx]
  415d67:	test   DWORD PTR [edi+0x57],ebp
  415d6a:	pop    edi
  415d6b:	push   edx
  415d6c:	test   al,0x6f
  415d6e:	lods   al,BYTE PTR ds:[esi]
  415d6f:	aad    0x75
  415d71:	add    dh,BYTE PTR [esi-0x4d9aa6c2]
  415d77:	mov    ds:0x995bead0,eax
  415d7c:	pop    eax
  415d7d:	mov    eax,0x737cd0c9
  415d82:	adc    BYTE PTR [ebp+0x5dab0442],0x3
  415d89:	out    dx,eax
  415d8a:	fdiv   st,st(7)
  415d8c:	aam    0x93
  415d8e:	sbb    BYTE PTR [esi+0x6a],al
  415d91:	sbb    eax,DWORD PTR [eax]
  415d93:	sti    
  415d94:	lea    eax,[ebx-0x20889d28]
  415d9a:	cli    
  415d9b:	int3   
  415d9c:	and    ch,BYTE PTR [edi-0x78]
  415d9f:	daa    
  415da0:	(bad)
  415da4:	jno    0x415d65
  415da6:	sub    BYTE PTR [edx+0x343cab96],cl
  415dac:	sahf   
  415dad:	jns    0x415d93
  415daf:	dec    esp
  415db0:	add    ebx,DWORD PTR [ebx+ebp*4-0x5a]
  415db4:	nop
  415db5:	jns    0x415d64
  415db7:	dec    ebx
  415db8:	or     BYTE PTR [esi*4-0x3406e4cd],cl
  415dbf:	(bad)  
  415dc0:	pushf  
  415dc1:	rcl    ch,cl
  415dc3:	int3   
  415dc4:	sbb    ebx,DWORD PTR [edx+0xd]
  415dc7:	mov    dl,0x99
  415dc9:	mov    bh,dl
  415dcb:	push   esp
  415dcc:	mov    ecx,0x83cb22c0
  415dd1:	mov    bl,0xab
  415dd3:	lods   al,BYTE PTR ds:[esi]
  415dd4:	cmp    eax,0x2a98417e
  415dd9:	repz push ss
  415ddb:	inc    ebx
  415ddc:	aam    0x84
  415dde:	pop    esi
  415ddf:	mov    ch,0xcf
  415de1:	repnz aam 0xe3
  415de4:	mov    bh,0xbe
  415de6:	sub    al,0x11
  415de8:	xor    BYTE PTR [esi],0x61
  415deb:	push   0x8ba270af
  415df0:	icebp  
  415df1:	call   0x986a:0x10dabd4f
  415df8:	fnsave [eax+0x158b3e75]
  415dfe:	xor    BYTE PTR [ecx-0x2e],bh
  415e01:	iret   
  415e02:	imul   edi,DWORD PTR [ecx-0x2],0x2b
  415e06:	rol    DWORD PTR [ebx+0x2d],1
  415e09:	fwait
  415e0a:	mov    al,0x98
  415e0c:	lds    eax,FWORD PTR [ebx]
  415e0e:	jl     0x415db4
  415e10:	mov    cl,0xba
  415e12:	jo     0x415de5
  415e14:	cmp    bl,BYTE PTR [ecx-0x761429fc]
  415e1a:	pushf  
  415e1b:	data16 stos BYTE PTR es:[edi],al
  415e1d:	into   
  415e1e:	icebp  
  415e1f:	xor    ecx,DWORD PTR [edi-0x1b]
  415e22:	pop    ds
  415e23:	fs sar ebp,cl
  415e26:	dec    edx
  415e27:	in     eax,dx
  415e28:	and    al,0xd
  415e2a:	push   edi
  415e2b:	xchg   edx,eax
  415e2c:	fldcw  WORD PTR [ecx]
  415e2e:	jg     0x415dd8
  415e30:	inc    esi
  415e31:	push   0xffffffa2
  415e33:	xchg   ecx,eax
  415e34:	ret    
  415e35:	(bad)  
  415e36:	fwait
  415e37:	sub    DWORD PTR [edx-0x50],ebx
  415e3a:	adc    ebp,esi
  415e3c:	sub    al,0xa1
  415e3e:	in     al,0xc4
  415e40:	cmc    
  415e41:	inc    esi
  415e42:	add    eax,0xf1db3824
  415e47:	jmp    0x227c:0xbfd073c3
  415e4e:	popa   
  415e4f:	xor    al,0xf1
  415e51:	into   
  415e52:	fucom  st(1)
  415e54:	(bad)  
  415e55:	adc    BYTE PTR ds:0x61d4fe4a,ch
  415e5b:	or     DWORD PTR [ecx-0x5d],0x2713bd9f
  415e62:	cmp    cl,BYTE PTR [ebx-0x4e839cc8]
  415e68:	or     al,BYTE PTR [edi+eax*1-0x25]
  415e6c:	sar    DWORD PTR [esi+esi*8],cl
  415e6f:	push   esp
  415e70:	mov    esp,DWORD PTR [esi+eax*8]
  415e73:	fist   WORD PTR [ecx-0xb275ad3]
  415e79:	retf   0xc658
  415e7c:	mov    cl,BYTE PTR [ebx-0xa]
  415e7f:	pop    ds
  415e80:	xchg   ebp,eax
  415e81:	out    0x9b,eax
  415e83:	mov    ecx,0x599dd7af
  415e88:	or     al,0xb7
  415e8a:	sbb    esi,DWORD PTR ds:0xf1bfe7dd
  415e90:	pop    edi
  415e91:	ins    BYTE PTR es:[edi],dx
  415e92:	xchg   edi,eax
  415e93:	jmp    0x157264ca
  415e98:	ror    DWORD PTR [ebp-0x530e02c3],1
  415e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea0:	inc    esp
  415ea1:	sub    al,0x8a
  415ea3:	test   eax,0xdcdd8aef
  415ea8:	nop
  415ea9:	shl    BYTE PTR [edx+0x6d1d23a6],1
  415eaf:	adc    edx,ebx
  415eb1:	xor    ah,BYTE PTR [edi-0x72]
  415eb4:	fcom   QWORD PTR [ebx-0x14ab425e]
  415eba:	cdq    
  415ebb:	fiadd  DWORD PTR [edi+0x20]
  415ebe:	es addr16 jge 0x415e4c
  415ec2:	test   eax,0x8ecbbcfb
  415ec7:	xchg   edi,eax
  415ec8:	mov    edi,0xc57ad8fe
  415ecd:	gs dec edi
  415ecf:	pop    ds
  415ed0:	mov    eax,ds:0xad9d3343
  415ed5:	aas    
  415ed6:	mov    eax,ds:0xb203bd53
  415edb:	adc    eax,0x1c5e6707
  415ee0:	je     0x415f2c
  415ee2:	mov    bl,0xd7
  415ee4:	int3   
  415ee5:	or     ebx,DWORD PTR [esp+ebx*2]
  415ee8:	adc    DWORD PTR [ecx-0x3b1ac24c],0x1f9d535e
  415ef2:	inc    ebx
  415ef3:	push   eax
  415ef4:	sub    dh,bh
  415ef6:	jle    0x415f66
  415ef8:	and    al,0xbd
  415efa:	adc    eax,0xa90e5f7f
  415eff:	inc    edi
  415f00:	(bad)  
  415f01:	cmc    
  415f02:	inc    esp
  415f03:	int    0x2e
  415f05:	pop    ebx
  415f06:	xchg   edx,eax
  415f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f08:	mov    eax,DWORD PTR [ebx+0x55b050eb]
  415f0e:	push   ds
  415f0f:	inc    BYTE PTR [ebx-0x3]
  415f12:	dec    ecx
  415f13:	or     al,0xf1
  415f15:	cmp    eax,0x38a8f161
  415f1a:	retf   0x58d
  415f1d:	ja     0x415ec0
  415f1f:	and    dl,BYTE PTR [esp+ebx*1+0x6d]
  415f23:	lds    ebp,FWORD PTR [ecx+0x23]
  415f26:	mov    ebx,0x9c55e090
  415f2b:	ret    0xcc05
  415f2e:	(bad)  
  415f2f:	xchg   ebx,eax
  415f30:	fwait
  415f31:	pop    es
  415f32:	inc    ecx
  415f33:	repz pop ds
  415f35:	dec    ebx
  415f36:	mov    bl,0x90
  415f38:	add    DWORD PTR [ecx-0x24],0xae4f55cb
  415f3f:	adc    eax,ebx
  415f41:	(bad)  [ebx]
  415f43:	jo     0x415f84
  415f45:	inc    eax
  415f46:	adc    eax,0x31523092
  415f4b:	sub    WORD PTR [eax],sp
  415f4e:	dec    esi
  415f4f:	push   ss
  415f50:	in     eax,dx
  415f51:	bound  esp,QWORD PTR [edi-0x195659f1]
  415f57:	jl     0x415f9d
  415f59:	cld    
  415f5a:	jo     0x415fd3
  415f5c:	xchg   BYTE PTR [ebp-0x38],ch
  415f5f:	dec    ecx
  415f60:	pushf  
  415f61:	jecxz  0x415fb3
  415f63:	xchg   ebp,eax
  415f64:	outs   dx,DWORD PTR ds:[esi]
  415f65:	sub    al,0xbb
  415f67:	jmp    0x92f7f6a5
  415f6c:	cmp    al,0xcd
  415f6e:	bound  ecx,QWORD PTR ds:0x978e338d
  415f74:	cmc    
  415f75:	or     dh,dl
  415f77:	dec    esp
  415f78:	hlt    
  415f79:	mov    ecx,0x75e1fc22
  415f7e:	inc    edx
  415f7f:	xchg   ebx,eax
  415f80:	rol    BYTE PTR [edx-0x5e7c2ae4],0xc8
  415f87:	mov    DWORD PTR [edx+0x1c],ebx
  415f8a:	add    eax,0x2ccea38f
  415f8f:	sbb    DWORD PTR [ebp+0x24345ff2],eax
  415f95:	sti    
  415f96:	xor    al,0x89
  415f99:	imul   eax,DWORD PTR [esi*4-0x1586b7ae],0xffffffba
  415fa1:	xchg   ebp,eax
  415fa2:	not    DWORD PTR ds:0x85160c98
  415fa9:	dec    eax
  415faa:	mov    eax,0xf5573336
  415faf:	rcl    BYTE PTR [edi-0x386141f1],cl
  415fb5:	push   0x2eddb0d6
  415fba:	ins    BYTE PTR es:[edi],dx
  415fbb:	imul   eax,DWORD PTR [edi-0x6d46ca15],0x2bbdbbf
  415fc5:	mov    cl,0x5d
  415fc7:	jmp    0x75131710
  415fcc:	pop    edi
  415fcd:	outs   dx,BYTE PTR ds:[esi]
  415fce:	test   DWORD PTR [eax-0x54],esp
  415fd1:	ror    DWORD PTR [esi+0x2b],0xe9
  415fd5:	jmp    0x3211:0xf43d38a6
  415fdc:	fld    DWORD PTR [edx]
  415fde:	dec    edx
  415fdf:	xor    ebx,DWORD PTR [ebx-0x4]
  415fe2:	shr    DWORD PTR [ebp+0x55],1
  415fe5:	push   ds
  415fe6:	mov    ch,0x26
  415fe8:	dec    edx
  415fe9:	(bad)  
  415fea:	xor    ecx,DWORD PTR [ecx+0x56]
  415fed:	call   0x1910:0x2d1f099
  415ff4:	mov    cl,BYTE PTR [eax]
  415ff6:	push   ebp
  415ff7:	pop    ss
  415ff8:	popf   
  415ff9:	dec    eax
  415ffa:	lods   al,BYTE PTR ds:[esi]
  415ffb:	pop    eax
  415ffc:	jmp    0xef737d83
  416001:	lds    edi,FWORD PTR [ecx]
  416003:	imul   ecx,DWORD PTR [edi-0x7],0xffffffd4
  416007:	pop    esp
  416008:	sti    
  416009:	pop    ecx
  41600a:	(bad)  
  41600c:	mov    ebx,0xf521bcd1
  416011:	or     edx,DWORD PTR [edx]
  416013:	in     al,0xb3
  416015:	dec    eax
  416016:	(bad)  
  416017:	iret   
  416018:	mov    eax,0x3a3dc910
  41601d:	sbb    ecx,DWORD PTR [esi+0x771882fd]
  416023:	lods   al,BYTE PTR ds:[esi]
  416024:	jle    0x416021
  416026:	cmp    DWORD PTR [ebx],0xffffffd0
  416029:	rol    dl,1
  41602b:	push   es
  41602c:	test   al,0xb4
  41602e:	mov    fs,WORD PTR [edx+0x7]
  416031:	jo     0x416097
  416033:	sub    al,0xc6
  416035:	into   
  416036:	cs jb  0x416031
  416039:	pushf  
  41603a:	xor    al,0xa8
  41603c:	mov    bh,ch
  41603e:	cmp    ebx,DWORD PTR gs:[ecx]
  416041:	out    0xa0,eax
  416043:	add    al,0x16
  416045:	outs   dx,DWORD PTR ds:[esi]
  416046:	sbb    al,0x42
  416048:	xchg   esp,eax
  416049:	aas    
  41604a:	dec    edi
  41604b:	add    DWORD PTR [esi+0x292ce7f1],esp
  416051:	cli    
  416052:	jmp    0xe37e6bf8
  416057:	clc    
  416058:	gs push ss
  41605a:	pushf  
  41605b:	inc    ebx
  41605c:	cmp    ebx,DWORD PTR [esi+0x58]
  41605f:	xchg   edx,eax
  416060:	mov    al,ds:0x23a924df
  416065:	add    al,0x2f
  416067:	pop    ebx
  416068:	js     0x415ff3
  41606a:	mov    eax,es
  41606c:	ja     0x416076
  41606e:	lea    edi,[ecx-0x3548456e]
  416074:	stos   DWORD PTR es:[edi],eax
  416075:	pop    esp
  416076:	sbb    DWORD PTR [eax+0x6],esp
  416079:	out    dx,al
  41607a:	sub    eax,0xba37a0
  41607f:	sbb    DWORD PTR [ebp+edi*8-0x3f],edi
  416083:	cs repnz scas al,BYTE PTR es:[edi]
  416086:	sbb    eax,0x38e65ea4
  41608b:	rcl    bl,1
  41608d:	adc    al,0x91
  41608f:	repz sbb BYTE PTR [ebx],ah
  416092:	pop    ebx
  416093:	arpl   WORD PTR [ecx+ebx*4+0x3de34794],sp
  41609a:	pop    edx
  41609b:	push   esp
  41609d:	sbb    al,0x74
  41609f:	aaa    
  4160a0:	xor    eax,0x1de99aaa
  4160a5:	aam    0xaa
  4160a7:	dec    ebx
  4160a8:	test   eax,0x32173d6f
  4160ad:	outs   dx,DWORD PTR ds:[esi]
  4160ae:	pop    edx
  4160af:	sahf   
  4160b0:	lods   al,BYTE PTR ds:[esi]
  4160b1:	(bad)  [eax+0x6c69184b]
  4160b7:	ja     0x41604b
  4160b9:	cld    
  4160ba:	pop    eax
  4160bb:	mov    dh,0xac
  4160bd:	popf   
  4160be:	xchg   edi,eax
  4160bf:	sbb    ah,BYTE PTR [ecx+0x3f]
  4160c2:	and    edx,DWORD PTR [edx]
  4160c4:	xor    eax,0x8a13c906
  4160c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ca:	mov    ecx,0x3b5e78aa
  4160cf:	ins    DWORD PTR es:[di],dx
  4160d1:	ret    0x3d2f
  4160d4:	icebp  
  4160d5:	jmp    0x41610a
  4160d7:	shr    DWORD PTR [edi-0x6fe8432b],1
  4160dd:	cdq    
  4160de:	cdq    
  4160df:	and    DWORD PTR [ebp-0x5f],ebp
  4160e2:	pop    ebp
  4160e3:	add    DWORD PTR [eax-0x5a],ecx
  4160e6:	rcl    BYTE PTR [ebp+0x4d],0x90
  4160ea:	inc    esi
  4160eb:	push   ebx
  4160ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160ed:	rcr    edx,0xfd
  4160f0:	jns    0x416163
  4160f2:	adc    al,BYTE PTR [edx+0x6aae3d2f]
  4160f8:	ins    DWORD PTR es:[edi],dx
  4160f9:	jl     0x416179
  4160fb:	sub    eax,0x4ee3e4a6
  416100:	jmp    DWORD PTR [edi+0x72]
  416103:	sti    
  416104:	test   BYTE PTR [edx+0x6e727497],ah
  41610a:	sahf   
  41610b:	sti    
  41610c:	mov    ebx,0x210d35c2
  416111:	mul    DWORD PTR [ecx]
  416113:	sub    esi,DWORD PTR [ebp-0x23]
  416116:	add    dl,BYTE PTR [esi]
  416118:	xor    al,0x1e
  41611a:	test   eax,0xcd512c0f
  41611f:	es popa 
  416121:	(bad)  
  416122:	stc    
  416123:	into   
  416124:	sbb    BYTE PTR [esi+0x50],ah
  416127:	mov    ds:0x710d886f,eax
  41612c:	pop    eax
  41612d:	repnz push edx
  41612f:	mov    bl,0x9b
  416131:	sub    eax,0xd6a94f0b
  416136:	cmp    BYTE PTR [eax],ch
  416138:	xchg   ecx,eax
  416139:	std    
  41613a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613b:	retf   0xffe4
  41613e:	(bad)  
  416140:	cli    
  416141:	(bad)  
  416142:	push   esi
  416143:	fistp  QWORD PTR [ecx+edi*8+0x703230c9]
  41614a:	push   ss
  41614b:	dec    ebx
  41614c:	outs   dx,DWORD PTR ds:[esi]
  41614d:	mov    ds,WORD PTR [edi+0x3f]
  416150:	je     0x4160de
  416152:	dec    edx
  416153:	xchg   esi,eax
  416154:	test   eax,0xcceeec64
  416159:	mov    bh,0x7b
  41615b:	inc    ebx
  41615c:	(bad)  
  41615d:	data16 loope 0x4161bb
  416160:	sub    al,0x1a
  416162:	xor    al,0xa2
  416164:	xchg   edi,eax
  416165:	(bad)  
  416166:	cli    
  416167:	jmp    0x416198
  416169:	js     0x41611b
  41616b:	fld1   
  41616d:	cmp    eax,0x63aa976f
  416172:	loope  0x416143
  416174:	and    DWORD PTR [eax+0x30],0x13de4f01
  41617b:	leave  
  41617c:	cmp    al,0x96
  41617e:	fs push edi
  416180:	into   
  416181:	lock imul ebp,DWORD PTR [ebx-0x77e2db49],0xe2d5b2db
  41618c:	pop    ebx
  41618d:	mov    bh,0x9b
  41618f:	push   ebp
  416190:	iret   
  416191:	and    al,0xda
  416193:	inc    edi
  416194:	jmp    0xfe87:0xf15d2ce1
  41619b:	das    
  41619c:	xchg   edi,eax
  41619d:	leave  
  41619e:	sbb    al,0x31
  4161a0:	out    0x1,al
  4161a2:	test   eax,0x3baf1bfd
  4161a7:	cs xchg edx,eax
  4161a9:	dec    ecx
  4161aa:	fs lahf 
  4161ac:	jl     0x416197
  4161ae:	(bad)  
  4161af:	mov    ah,0x97
  4161b1:	xor    ebx,DWORD PTR [ebx+eax*1]
  4161b4:	jb     0x416170
  4161b6:	push   ecx
  4161b7:	mov    al,ds:0x711e4500
  4161bc:	sub    DWORD PTR [eax+esi*1-0x7a],ebp
  4161c0:	and    bh,bl
  4161c2:	pop    es
  4161c3:	lea    ebp,[esi]
  4161c5:	pop    edx
  4161c7:	xchg   BYTE PTR [eax+0x5c025937],dh
  4161cd:	dec    ebp
  4161ce:	icebp  
  4161cf:	mov    ah,0x41
  4161d1:	mov    esi,0x46dcc019
  4161d6:	imul   DWORD PTR [edi+0x6]
  4161d9:	pop    ebp
  4161da:	inc    edi
  4161db:	and    eax,0x60f19901
  4161e0:	jmp    0x6ab7:0xc130c4ff
  4161e7:	je     0x41622a
  4161e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ea:	(bad)  
  4161eb:	sbb    esp,ebx
  4161ed:	mov    edi,0xda87374e
  4161f2:	adc    BYTE PTR [edi-0x7eb4b4ea],ch
  4161f8:	rol    DWORD PTR [eax+0x3831be6f],0xae
  4161ff:	inc    esp
  416200:	cmp    BYTE PTR ds:0x98dcd943,dl
  416206:	jle    0x41623e
  416208:	(bad)  
  416209:	pop    edx
  41620a:	push   edi
  41620b:	sbb    BYTE PTR cs:[edi-0x3b],dh
  41620f:	fadd   st,st(4)
  416211:	sbb    esp,DWORD PTR [ebp+0x24]
  416214:	mov    eax,0x49eebbb4
  416219:	mov    esp,0x942dacc8
  41621e:	and    dl,BYTE PTR [esp+ebx*1+0x519a2fb0]
  416225:	pop    ebp
  416226:	cwde   
  416227:	inc    ecx
  416228:	shl    DWORD PTR [ecx],0xac
  41622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41622c:	jg     0x4161c8
  41622e:	push   cs
  41622f:	rcr    ebx,0x1e
  416232:	jmp    0x6f1fb6ec
  416237:	adc    eax,0x70ab07c
  41623c:	mov    esp,0xb3e58f06
  416241:	js     0x4161de
  416243:	cmc    
  416244:	push   ebx
  416245:	daa    
  416246:	popa   
  416247:	or     eax,0x75f7318a
  41624c:	and    al,0x69
  41624e:	mov    edx,DWORD PTR [esi+0x804dd4]
  416254:	xor    al,BYTE PTR [edx]
  416256:	sub    al,0xdf
  416258:	adc    DWORD PTR [edx-0x60],esi
  41625b:	jl     0x4161e4
  41625d:	jmp    0xf9981bab
  416262:	mov    ah,0xc3
  416264:	sbb    al,0xe4
  416266:	add    esi,ebp
  416268:	jle    0x4162e4
  41626a:	cwde   
  41626b:	call   0x1f56:0xa73ba8a4
  416272:	mov    eax,0xc098517f
  416277:	gs push ss
  416279:	xchg   ebp,eax
  41627a:	xor    eax,0xae8041aa
  41627f:	les    esp,FWORD PTR [ecx+esi*1-0x3d0e011d]
  416286:	mov    esp,0x92cfdfbb
  41628b:	stc    
  41628c:	mov    BYTE PTR [edx+0x4dc80aa6],ah
  416292:	(bad)  
  416293:	shr    BYTE PTR [eax+0x7e],cl
  416296:	mov    bl,0x34
  416298:	mov    al,ds:0x535c7008
  41629d:	sub    al,BYTE PTR [edi-0x4d02cf00]
  4162a3:	cwde   
  4162a4:	inc    esp
  4162a5:	push   esi
  4162a6:	dec    eax
  4162a7:	inc    eax
  4162a8:	xor    al,BYTE PTR [eax]
  4162aa:	push   edx
  4162ab:	mov    bh,0x98
  4162ad:	sub    al,0xa7
  4162af:	push   0xffffff88
  4162b1:	rol    BYTE PTR [ebp+0x41],1
  4162b4:	test   al,0xf0
  4162b6:	scas   al,BYTE PTR es:[edi]
  4162b7:	(bad)  
  4162b8:	icebp  
  4162b9:	xchg   DWORD PTR [edi],edx
  4162bb:	sahf   
  4162bc:	inc    eax
  4162bd:	mov    edx,0x2fede79a
  4162c2:	sub    eax,0xb0627414
  4162c7:	fsubr  QWORD PTR [edi]
  4162c9:	rcr    bl,cl
  4162cb:	clc    
  4162cc:	xlat   BYTE PTR ds:[ebx]
  4162cd:	and    ebx,DWORD PTR [edi+eiz*2+0x5f62a576]
  4162d4:	jge    0x4162ca
  4162d6:	dec    ecx
  4162d7:	push   cs
  4162d8:	add    al,BYTE PTR [ecx]
  4162da:	xchg   esp,eax
  4162db:	xchg   esp,eax
  4162dc:	mov    dh,BYTE PTR [edx-0x5b]
  4162df:	xor    ah,bh
  4162e1:	mov    esi,0x2c09afa5
  4162e6:	es out 0x92,eax
  4162e9:	jno    0x416281
  4162eb:	pushf  
  4162ec:	mov    ?,WORD PTR [edi]
  4162ee:	xor    BYTE PTR [eax-0x33ef3a8e],bl
  4162f4:	jle    0x4162db
  4162f6:	sub    al,0xd2
  4162f8:	cdq    
  4162f9:	shl    cl,cl
  4162fb:	mov    ds:0x6f3f3029,al
  416300:	fwait
  416301:	mov    al,ds:0xbe8a0ba4
  416306:	shr    BYTE PTR [ecx],cl
  416308:	adc    DWORD PTR [esi],eax
  41630a:	lock popa 
  41630c:	cli    
  41630d:	pop    esp
  41630e:	mov    dl,0xf9
  416310:	mov    ds:0x651c5ec7,al
  416315:	inc    edx
  416316:	xchg   ecx,eax
  416317:	dec    eax
  416318:	inc    ebp
  416319:	push   esi
  41631a:	pop    ss
  41631b:	and    ah,dh
  41631d:	in     al,0x24
  41631f:	push   cs
  416320:	jp     0x4162b4
  416322:	cmp    cl,BYTE PTR [edx]
  416324:	cmovbe edx,DWORD PTR [ebx-0x1ce41022]
  41632b:	mov    WORD PTR [ebp-0x4864496e],ss
  416331:	jmp    0xd773:0x48809875
  416338:	jmp    0x5b09:0xc20eaf77
  41633f:	lds    ecx,FWORD PTR [ebx+0x2071f702]
  416345:	inc    eax
  416346:	jb     0x4163a4
  416348:	hlt    
  416349:	(bad)  
  41634a:	fs hlt 
  41634c:	push   es
  41634d:	cmp    bh,BYTE PTR [edi+0x7c507b51]
  416353:	les    eax,FWORD PTR [ecx]
  416355:	adc    ch,BYTE PTR [ebx]
  416357:	dec    esi
  416358:	mov    BYTE PTR [ebx],ah
  41635a:	(bad)  
  41635b:	bound  ebx,QWORD PTR [ecx+0x426ca8ae]
  416361:	mov    dh,0x14
  416363:	and    DWORD PTR [bp+di-0x6d],ecx
  416367:	fdivr  st,st(6)
  416369:	inc    edi
  41636a:	test   BYTE PTR [esi+eax*8+0x66b5f9f1],cl
  416371:	or     ebp,ecx
  416373:	lds    esp,FWORD PTR [ebx-0x2a]
  416376:	inc    esi
  416377:	dec    ebx
  416378:	and    al,0xbe
  41637a:	inc    ebp
  41637b:	fiadd  WORD PTR [ebp-0x69cac2ba]
  416381:	int    0xd3
  416383:	xor    eax,0xb7d2706d
  416388:	shr    al,0x3a
  41638b:	ret    
  41638c:	je     0x41638c
  41638e:	jne    0x416396
  416390:	inc    edi
  416391:	mov    al,ds:0xefea814d
  416396:	xor    al,0x21
  416398:	xchg   ecx,eax
  416399:	push   bp
  41639b:	fdiv   DWORD PTR [ecx+0x102a1c32]
  4163a1:	lahf   
  4163a2:	js     0x41639d
  4163a4:	icebp  
  4163a5:	into   
  4163a6:	fcom   QWORD PTR [edx-0x9]
  4163a9:	adc    eax,0x8f1ffdb4
  4163ae:	xchg   ebx,eax
  4163af:	jge    0x4163be
  4163b1:	inc    edi
  4163b2:	shl    DWORD PTR [eax-0x64],1
  4163b5:	repz pop ss
  4163b7:	lock sbb BYTE PTR [edi+0x57e5e68f],cl
  4163be:	jnp    0x4163e1
  4163c0:	repnz mov ah,BYTE PTR [edx-0x70fe783f]
  4163c7:	gs sar al,cl
  4163ca:	inc    ebp
  4163cb:	sub    DWORD PTR [esi+0x5a],ebp
  4163ce:	jge    0x4163a3
  4163d0:	js     0x416448
  4163d2:	pop    ds
  4163d3:	dec    ecx
  4163d4:	push   es
  4163d5:	pop    ebp
  4163d6:	sub    al,0x94
  4163d8:	fcom   DWORD PTR [edx+0x66]
  4163db:	sub    DWORD PTR [ebp+0x3d7000b6],ebx
  4163e1:	ins    DWORD PTR es:[edi],dx
  4163e2:	std    
  4163e3:	fucomp st(5)
  4163e5:	mov    eax,0xe8f40e9
  4163ea:	adc    eax,0xfde8d756
  4163ef:	and    al,0x27
  4163f1:	mov    ch,0x7
  4163f3:	inc    esi
  4163f4:	cmp    BYTE PTR [esi+ebp*4],cl
  4163f7:	xor    edx,esi
  4163f9:	xlat   BYTE PTR ds:[ebx]
  4163fa:	ror    DWORD PTR [edi+0x7c],0x84
  4163fe:	cmp    edx,DWORD PTR [edi]
  416400:	out    0xa6,al
  416402:	and    eax,0xb1a31f27
  416407:	add    ch,dh
  416409:	push   0x136f0bc1
  41640e:	mov    al,ds:0x9816e534
  416413:	(bad)  
  416414:	sahf   
  416415:	data16 cmp al,0x1c
  416418:	jl     0x41647b
  41641a:	and    DWORD PTR ds:[eax-0x3c987a4b],edi
  416421:	scas   al,BYTE PTR es:[edi]
  416422:	xor    DWORD PTR ds:0x5841920b,edx
  416428:	loope  0x4163d6
  41642a:	push   ebx
  41642b:	dec    esi
  41642c:	imul   eax,DWORD PTR [edx],0xffffffdf
  41642f:	sbb    eax,0xbea887ab
  416434:	push   esp
  416435:	jb     0x4163f0
  416437:	ins    DWORD PTR es:[edi],dx
  416438:	push   es
  416439:	mov    al,0x9e
  41643b:	loop   0x416481
  41643d:	push   0x35883acd
  416442:	xchg   edi,eax
  416443:	popa   
  416444:	mov    bh,0x31
  416446:	lahf   
  416447:	sar    BYTE PTR [edi+0x5e],0xa9
  41644b:	push   ebp
  41644c:	mov    dl,0x9
  41644e:	fnstcw WORD PTR [edi-0x38]
  416451:	push   esp
  416452:	add    DWORD PTR [ebx],ebp
  416454:	dec    esp
  416455:	mov    eax,ds:0xb1d8101a
  41645a:	sub    ch,bh
  41645c:	inc    ebx
  41645d:	mov    gs,WORD PTR [esp+esi*4]
  416460:	xchg   edx,eax
  416461:	mov    ds:0xebfde8af,eax
  416466:	fbld   TBYTE PTR [ecx+0x4e]
  416469:	lods   eax,DWORD PTR ds:[esi]
  41646a:	xor    DWORD PTR [ecx],ebx
  41646c:	dec    edx
  41646d:	leave  
  41646e:	fstp   TBYTE PTR [edi+0x35ea9270]
  416474:	dec    ebx
  416475:	into   
  416476:	inc    esp
  416477:	out    0x91,al
  416479:	inc    ebx
  41647a:	vminsd xmm3,xmm0,QWORD PTR [ebx]
  41647e:	and    bh,BYTE PTR [eax+0x3c]
  416481:	xchg   esp,eax
  416482:	imul   ecx,DWORD PTR [eax],0xa06405b1
  416488:	push   ds
  416489:	ja     0x416413
  41648b:	pop    ss
  41648c:	call   0x23f9:0x8b8785d9
  416493:	inc    edx
  416494:	mov    esi,0x7d69a317
  416499:	adc    eax,DWORD PTR [edx]
  41649b:	(bad)  
  41649c:	cmp    dl,BYTE PTR [eax+0x22466821]
  4164a2:	dec    edx
  4164a3:	jmp    0x8a1f:0xbe8c4f50
  4164aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ab:	das    
  4164ac:	sub    eax,0x6f6e37f8
  4164b1:	ret    
  4164b2:	scas   eax,DWORD PTR es:[edi]
  4164b3:	or     esi,esi
  4164b5:	jge    0x416519
  4164b7:	(bad)  
  4164b8:	jno    0x41649f
  4164ba:	test   al,0x1d
  4164bc:	fcmovne st,st(1)
  4164be:	test   al,al
  4164c0:	or     edi,DWORD PTR cs:[ecx+0x4a]
  4164c4:	imul   ecx,DWORD PTR [esi+eax*8+0x6947d526],0xffffffe9
  4164cc:	js     0x416527
  4164ce:	dec    edx
  4164cf:	and    al,BYTE PTR [ebx+0x69]
  4164d2:	or     ah,BYTE PTR [ecx]
  4164d4:	clc    
  4164d5:	mov    ds:0x15e7143,al
  4164da:	pushf  
  4164db:	js     0x4164a0
  4164dd:	leave  
  4164de:	jp     0x416465
  4164e0:	retf   0x339a
  4164e3:	cmp    bl,BYTE PTR [ebp+0x42]
  4164e6:	leave  
  4164e7:	mov    cl,0x8b
  4164e9:	or     BYTE PTR [ebp+eiz*8+0x374698bb],0xff
  4164f1:	aas    
  4164f2:	into   
  4164f3:	xor    DWORD PTR [esi-0x14051de2],0xffffffee
  4164fa:	pop    ecx
  4164fb:	or     ch,BYTE PTR [ebx]
  4164fd:	out    dx,eax
  4164fe:	lds    ebp,FWORD PTR [edx+0x13]
  416501:	mov    fs,edx
  416503:	mov    DWORD PTR [eax],ecx
  416505:	mov    dh,BYTE PTR [edx-0x45b67cc6]
  41650b:	fistp  WORD PTR [esi-0x2c31661c]
  416511:	push   edi
  416512:	xchg   esi,eax
  416513:	inc    edx
  416514:	mov    edi,0xa612a830
  416519:	pop    edx
  41651a:	loopne 0x416591
  41651c:	hlt    
  41651d:	rcl    BYTE PTR [edx],0x63
  416520:	retf   
  416521:	retf   
  416522:	mov    edx,0x2402da1f
  416527:	gs adc ebp,esi
  41652a:	adc    DWORD PTR [edx+edx*8-0x2f],eax
  41652e:	add    dl,ch
  416530:	call   0xe62fa727
  416535:	rcl    BYTE PTR [ebx-0xa],cl
  416538:	mov    cl,0x63
  41653a:	add    DWORD PTR [ebp-0x6f],ebx
  41653d:	mov    ds:0x72c6d807,al
  416542:	push   ds
  416543:	mov    DWORD PTR [ecx],ebx
  416545:	add    ebx,DWORD PTR [ecx-0x12b70420]
  41654b:	pop    ebx
  41654c:	sbb    dh,BYTE PTR [edi+eiz*2]
  41654f:	dec    edx
  416550:	rol    DWORD PTR [eax],0x7a
  416553:	data16 cmc 
  416555:	and    al,0x86
  416557:	mov    dl,0x33
  416559:	stc    
  41655a:	push   ecx
  41655b:	xchg   esi,eax
  41655c:	dec    edi
  41655d:	cli    
  41655e:	call   DWORD PTR [edx+0x0]
  416561:	in     al,dx
  416562:	mov    dh,0xf
  416564:	mov    bh,0x92
  416566:	and    edi,DWORD PTR [edx-0x4196b84a]
  41656c:	add    BYTE PTR [ebp-0x57a28a2d],ch
  416572:	mov    cs,WORD PTR [edx+edx*4+0x445b34e9]
  416579:	jl     0x41658e
  41657b:	xor    dh,0xcd
  41657e:	icebp  
  41657f:	gs pushf 
  416581:	push   edi
  416582:	xchg   ecx,eax
  416583:	arpl   WORD PTR [ecx+ecx*4],bp
  416586:	ds cli 
  416588:	out    dx,al
  416589:	mov    bl,0x6a
  41658b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41658c:	add    BYTE PTR [esi+0x3b5ad87b],bh
  416592:	push   ebp
  416593:	dec    edi
  416594:	hlt    
  416595:	dec    ebx
  416596:	push   eax
  416597:	lods   al,BYTE PTR ds:[esi]
  416598:	shl    DWORD PTR [edx],1
  41659a:	lods   al,BYTE PTR ds:[esi]
  41659b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41659c:	or     BYTE PTR [eax-0x1a],bh
  41659f:	fild   QWORD PTR [ecx+0x373ca41f]
  4165a5:	xchg   DWORD PTR [ebx-0x46],edi
  4165a8:	fnstenv [si-0x44]
  4165ac:	mov    ebp,0x57c814f1
  4165b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b2:	sbb    ch,BYTE PTR [ecx+0x26]
  4165b5:	fild   QWORD PTR [eax-0x67]
  4165b8:	adc    eax,DWORD PTR [esp]
  4165bb:	adc    DWORD PTR [ecx+eax*4],ebp
  4165be:	adc    al,0xa7
  4165c0:	call   0x79fe:0xa8bd366
  4165c7:	push   ecx
  4165c8:	push   edi
  4165c9:	and    eax,0xd805f323
  4165ce:	lds    eax,FWORD PTR [edi+edx*4]
  4165d1:	fsqrt  
  4165d3:	and    ebx,DWORD PTR [ecx+0x1d]
  4165d6:	repnz leave 
  4165d8:	retf   0x255e
  4165db:	lds    ecx,FWORD PTR [ebx-0x74]
  4165de:	xchg   esp,eax
  4165df:	imul   esi,DWORD PTR [edi],0x63737b87
  4165e5:	cdq    
  4165e6:	arpl   WORD PTR [esp+edi*8-0x3ac80036],bp
  4165ed:	repnz test al,0xb4
  4165f1:	push   edx
  4165f2:	mov    bl,dl
  4165f4:	aam    0x9d
  4165f6:	mov    al,ds:0x7733ac7a
  4165fb:	xchg   edx,eax
  4165fc:	fsub   DWORD PTR [ebx]
  4165fe:	xor    ebx,DWORD PTR [edi-0x48]
  416601:	jae    0x416658
  416603:	div    ebx
  416605:	ret    0xabda
  416608:	aam    0x8e
  41660a:	imul   esi,DWORD PTR [ebx],0x99291d3e
  416610:	mul    ah
  416612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416613:	mov    dh,0xb1
  416615:	aad    0x2
  416617:	sub    bp,dx
  41661a:	test   BYTE PTR [ecx],bh
  41661c:	cmp    DWORD PTR [edi+edx*1],esp
  41661f:	jno    0x416651
  416621:	and    dh,BYTE PTR [esi]
  416623:	xor    esp,DWORD PTR [eax]
  416625:	cmc    
  416626:	dec    ecx
  416627:	repnz call 0x7391:0x1955b2a3
  41662f:	jae    0x41663a
  416631:	hlt    
  416632:	cdq    
  416633:	mov    dl,0x3a
  416635:	inc    esi
  416636:	inc    edi
  416637:	cmp    eax,0xd240a44d
  41663c:	adc    cl,BYTE PTR [ecx-0x4e]
  41663f:	mov    ds,WORD PTR [ecx+0x5919827b]
  416645:	jns    0x4166bd
  416647:	push   0x39
  416649:	mov    ch,0xa9
  41664b:	inc    eax
  41664c:	repnz add esp,DWORD PTR [eax]
  41664f:	inc    edx
  416650:	das    
  416651:	dec    ebp
  416652:	and    ch,ch
  416654:	push   ebp
  416655:	push   cs
  416656:	stos   BYTE PTR es:[edi],al
  416657:	xlat   BYTE PTR ds:[ebx]
  416658:	inc    ebp
  416659:	xlat   BYTE PTR ds:[ebx]
  41665b:	or     esi,ebp
  41665d:	pop    eax
  41665e:	jl     0x4166cf
  416660:	cmp    eax,0xbb2ed13d
  416665:	jmp    0x3d7e1b8f
  41666a:	mov    bl,0xc
  41666c:	jp     0x41668e
  41666e:	mov    bl,al
  416670:	je     0x4166a4
  416672:	in     al,0x87
  416674:	repnz inc esi
  416676:	add    BYTE PTR [ecx-0x3eddbdac],0x24
  41667d:	lds    edx,FWORD PTR [eax]
  41667f:	jge    0x4166bc
  416681:	push   ebx
  416682:	lods   al,BYTE PTR ds:[esi]
  416683:	sbb    eax,0xdac10d8e
  416688:	xchg   ecx,eax
  416689:	loop   0x416660
  41668b:	pop    edi
  41668c:	pop    ebx
  41668d:	cmp    ebp,eax
  41668f:	shr    DWORD PTR [esi],1
  416691:	jg     0x41667a
  416693:	jmp    0x7ff88306
  416698:	sar    BYTE PTR [edi],cl
  41669a:	(bad)  
  41669b:	repnz scas eax,DWORD PTR es:[edi]
  41669d:	retf   
  41669e:	push   esp
  41669f:	mov    ds:0x376be364,al
  4166a4:	loopne 0x416643
  4166a6:	mov    DWORD PTR [edx],ecx
  4166a8:	xchg   DWORD PTR [eax-0x60],edi
  4166ab:	jmp    0x7180:0xef4d93dd
  4166b2:	loop   0x4166b0
  4166b4:	pop    esi
  4166b5:	fld    DWORD PTR [ebx+eiz*1]
  4166b8:	mov    dl,0xe5
  4166ba:	(bad)  
  4166bb:	cmp    eax,0x2250b794
  4166c0:	xchg   edi,eax
  4166c1:	pop    edx
  4166c2:	mov    al,ds:0x5a3eaeff
  4166c7:	or     bh,bl
  4166c9:	xchg   esp,eax
  4166ca:	addr16 xchg ebx,eax
  4166cc:	cmp    al,0xa7
  4166ce:	jbe    0x416724
  4166d0:	jne    0x41666a
  4166d2:	(bad)  
  4166d3:	jle    0x41674e
  4166d5:	cmp    DWORD PTR [eax],eax
  4166d7:	loop   0x4166d9
  4166d9:	retf   
  4166da:	mov    ecx,0x487ac3ac
  4166df:	ss dec eax
  4166e1:	mov    ebx,0xac1c958e
  4166e6:	cdq    
  4166e7:	dec    eax
  4166e8:	test   al,0x12
  4166ea:	cdq    
  4166eb:	xchg   edi,eax
  4166ec:	sbb    DWORD PTR [ebx+0x18],ebp
  4166ef:	test   BYTE PTR [eax],bl
  4166f1:	push   esp
  4166f2:	adc    al,0x99
  4166f4:	in     eax,0x18
  4166f6:	and    al,0xef
  4166f8:	ins    DWORD PTR es:[edi],dx
  4166f9:	and    ebx,esp
  4166fb:	jno    0x41668a
  4166fd:	fisttp DWORD PTR [eax+0x1a319556]
  416703:	sbb    BYTE PTR [esi],ah
  416705:	mov    ch,BYTE PTR [ebx]
  416707:	pop    ebx
  416708:	adc    BYTE PTR [ecx+edi*1-0x38],0x40
  41670d:	outs   dx,BYTE PTR ds:[esi]
  41670e:	arpl   WORD PTR [ecx-0x72],di
  416711:	sbb    esp,esp
  416713:	xlat   BYTE PTR ds:[ebx]
  416714:	mov    bl,0xae
  416716:	std    
  416717:	push   ebp
  416718:	mov    esi,0x985d03d7
  41671d:	lods   al,BYTE PTR ds:[esi]
  41671e:	sbb    eax,0x582d4e47
  416723:	nop
  416724:	or     DWORD PTR [ebx],eax
  416726:	std    
  416727:	fidivr WORD PTR [edi+edx*8]
  41672a:	loopne 0x4166ed
  41672c:	aam    0xf2
  41672e:	lods   eax,DWORD PTR ds:[esi]
  41672f:	cmc    
  416730:	adc    edi,DWORD PTR [edx+ebx*8]
  416733:	sbb    al,0x78
  416735:	lods   eax,DWORD PTR ds:[esi]
  416736:	sub    BYTE PTR [esi+0x2d],dl
  416739:	(bad)  
  41673a:	loop   0x4166c9
  41673c:	loop   0x4166c8
  41673e:	jo     0x4166f7
  416740:	add    BYTE PTR [ebp+0x24],dl
  416743:	jbe    0x4166f5
  416745:	std    
  416746:	test   dh,0x80
  416749:	push   edx
  41674a:	sbb    dh,dh
  41674c:	sbb    esi,edx
  41674e:	xchg   esi,eax
  41674f:	xchg   edx,eax
  416750:	mov    edx,0x58848d8e
  416755:	repz sub BYTE PTR [eax-0x4b],dh
  416759:	sbb    DWORD PTR [esi],ebp
  41675b:	cmp    eax,0x6c837df1
  416760:	test   DWORD PTR [edi],0xbe10a0e
  416766:	shl    ebp,0x27
  416769:	jne    0x4167c5
  41676b:	inc    esp
  41676c:	adc    eax,0xd3de4d63
  416771:	mov    WORD PTR [edi-0x36],cs
  416774:	fs mov al,0x1
  416777:	inc    edi
  416778:	xor    al,BYTE PTR [edx+0x694f10da]
  41677e:	in     al,dx
  41677f:	pop    esp
  416780:	stc    
  416781:	adc    al,0xdc
  416783:	jmp    0xf0c4c712
  416788:	mov    dh,0xb8
  41678a:	mov    dh,dh
  41678c:	mov    cl,0x8c
  41678e:	test   al,0xa
  416790:	mov    edx,DWORD PTR [ecx+0x6806c89]
  416796:	repnz into 
  416798:	xchg   ecx,eax
  416799:	enter  0x311e,0x57
  41679d:	or     BYTE PTR [eax-0x13],bl
  4167a0:	into   
  4167a1:	xlat   BYTE PTR ds:[ebx]
  4167a2:	pop    esi
  4167a3:	sbb    al,0xa
  4167a5:	into   
  4167a6:	or     edx,DWORD PTR [ebx-0x7b]
  4167a9:	dec    edx
  4167aa:	cld    
  4167ab:	les    edx,FWORD PTR [ebp+0x52cd0770]
  4167b1:	icebp  
  4167b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b3:	and    eax,edx
  4167b5:	and    BYTE PTR [esi-0x22],bh
  4167b8:	inc    ebx
  4167b9:	sbb    DWORD PTR [ebx-0x6cee0484],esp
  4167bf:	cmp    esp,DWORD PTR [esi]
  4167c1:	enter  0x33a0,0x77
  4167c5:	call   0xbc09da24
  4167ca:	(bad)  
  4167cb:	fcom   QWORD PTR [eax]
  4167cd:	pop    ebx
  4167ce:	pop    ebp
  4167cf:	in     eax,0x1f
  4167d1:	into   
  4167d2:	add    al,0x6
  4167d4:	ins    DWORD PTR es:[edi],dx
  4167d5:	sub    al,BYTE PTR [ebx+edi*2+0x32]
  4167d9:	jns    0x41679e
  4167db:	test   dl,dh
  4167dd:	xor    DWORD PTR [ecx],ebp
  4167df:	jne    0x416776
  4167e1:	inc    eax
  4167e2:	jnp    0x4167dd
  4167e4:	inc    ecx
  4167e5:	jecxz  0x416795
  4167e7:	rol    DWORD PTR [esi-0x35],cl
  4167ea:	shr    DWORD PTR [edx],1
  4167ec:	mov    BYTE PTR [ebx],ch
  4167ee:	adc    DWORD PTR [ebp+ebx*2-0x23],0xfffffffc
  4167f3:	inc    edi
  4167f4:	mov    ebx,db5
  4167f7:	mov    esi,0x9f562570
  4167fc:	scas   eax,DWORD PTR es:[edi]
  4167fd:	lods   al,BYTE PTR ds:[esi]
  4167fe:	pop    ebx
  4167ff:	(bad)  
  416800:	jg     0x4167be
  416802:	jmp    0x4167f2
  416804:	or     ah,BYTE PTR [ebx+0x74b85f3a]
  41680a:	std    
  41680b:	xchg   edi,eax
  41680c:	call   0xe9cee0c0
  416811:	mov    eax,ds:0x6dba4163
  416816:	xor    DWORD PTR [ebx],0x14cd78e7
  41681c:	pushf  
  41681d:	mov    DWORD PTR cs:[esp+ebp*8],ecx
  416821:	mov    ch,dl
  416823:	aaa    
  416824:	jl     0x416879
  416826:	or     cl,BYTE PTR [ecx+edi*8+0x2bb2c482]
  41682d:	xor    eax,0x8960487a
  416832:	cwde   
  416833:	adc    DWORD PTR ds:0x58a406b9,esi
  416839:	add    bh,BYTE PTR [eax]
  41683b:	inc    esp
  41683c:	add    bh,bl
  41683e:	jae    0x416828
  416840:	vmptrld QWORD PTR [esp+ebx*2-0x66ea8c5d]
  416848:	pop    ebx
  416849:	xchg   edx,eax
  41684a:	inc    eax
  41684b:	mov    bh,0xfa
  41684d:	sbb    eax,0x1cb354a0
  416852:	and    bh,BYTE PTR [ebx]
  416854:	push   es
  416855:	mov    dh,0x52
  416857:	popa   
  416858:	arpl   si,ax
  41685a:	push   cs
  41685b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685c:	enter  0xd8fc,0x7d
  416860:	push   edi
  416861:	cmp    al,0xf0
  416863:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416865:	mov    ?,esi
  416867:	sub    al,0x53
  416869:	mov    al,ds:0xa9a1b7ed
  41686e:	das    
  41686f:	adc    esi,esi
  416871:	pushf  
  416872:	push   ds
  416873:	and    eax,0xff3dbffb
  416878:	int    0xee
  41687a:	pop    es
  41687b:	gs repz call 0xe45c:0xb16e560
  416884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416885:	nop
  416886:	xor    ebp,DWORD PTR [edi]
  416888:	in     al,0x3e
  41688a:	jns    0x416815
  41688c:	mov    al,ds:0xaf032d69
  416891:	jmp    0x41684f
  416893:	stc    
  416894:	(bad)  
  416895:	xchg   esp,eax
  416896:	mov    ch,0x48
  416898:	push   eax
  416899:	xchg   BYTE PTR [ecx+0x58cff556],dh
  41689f:	push   eax
  4168a0:	and    dl,BYTE PTR [esi+0x66]
  4168a3:	inc    ecx
  4168a4:	add    BYTE PTR [eax],ah
  4168a6:	mov    cl,0x64
  4168a8:	out    dx,eax
  4168a9:	pop    edx
  4168aa:	aad    0x9a
  4168ac:	imul   ecx,edx,0x14
  4168af:	jmp    0x5f44067e
  4168b4:	pop    eax
  4168b5:	mov    ch,0x9f
  4168b7:	shl    DWORD PTR [esi-0x3c],1
  4168ba:	push   cs
  4168bb:	mov    ebp,DWORD PTR [ebx]
  4168bd:	cwde   
  4168be:	fwait
  4168bf:	or     BYTE PTR [edi],ah
  4168c1:	jp     0x41688d
  4168c3:	in     al,0x89
  4168c5:	xchg   edx,eax
  4168c6:	loopne 0x41688a
  4168c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c9:	sub    ecx,ecx
  4168cb:	mov    al,0x60
  4168cd:	je     0x416869
  4168cf:	inc    eax
  4168d0:	xchg   esp,eax
  4168d1:	xchg   ebx,eax
  4168d2:	inc    esp
  4168d3:	or     BYTE PTR [ebx],0xb0
  4168d6:	out    0xa4,eax
  4168d8:	stos   BYTE PTR es:[edi],al
  4168d9:	inc    ebp
  4168da:	punpcklbw mm0,DWORD PTR [ecx]
  4168dd:	mov    ebp,0x820a9568
  4168e2:	aaa    
  4168e3:	aas    
  4168e4:	add    eax,DWORD PTR [esi+0x3f]
  4168e7:	lods   eax,DWORD PTR ds:[esi]
  4168e8:	adc    BYTE PTR ds:0xc8f8551a,dh
  4168ee:	pop    ds
  4168ef:	test   BYTE PTR [esi+0x5a],bl
  4168f2:	and    eax,0xb7d23c0d
  4168f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f8:	mov    ds:0x7cfecdeb,al
  4168fd:	mov    eax,ds:0xa575c608
  416902:	in     al,0xaa
  416904:	pop    ebp
  416905:	scas   eax,DWORD PTR es:[edi]
  416906:	add    al,0xf1
  416908:	add    edi,DWORD PTR [esi]
  41690a:	add    ebx,esp
  41690c:	es jg  0x4168fd
  41690f:	mov    ds:0xc578ccc,eax
  416914:	shl    BYTE PTR [esi],0xb9
  416917:	out    dx,al
  416918:	sti    
  416919:	sbb    BYTE PTR [eax-0x2a5da7cd],al
  41691f:	shr    esi,1
  416921:	leave  
  416922:	sbb    eax,0xd12ed62f
  416927:	ins    DWORD PTR es:[edi],dx
  416928:	pop    ecx
  416929:	push   edi
  41692a:	mov    BYTE PTR [ebx+0x594708df],0x9f
  416931:	stc    
  416932:	cmp    DWORD PTR [esp+edi*2],ecx
  416935:	retf   0x8ef0
  416938:	cmp    al,0x35
  41693a:	test   eax,0xbe06ed4d
  41693f:	ds and eax,0xdb29458
  416945:	push   ebp
  416946:	(bad)  
  416948:	xchg   DWORD PTR [ebx+0x21],edi
  41694b:	jno    0x416936
  41694d:	dec    eax
  41694e:	push   0xffffffa5
  416950:	and    BYTE PTR [edx],bl
  416952:	je     0x4169af
  416954:	fild   WORD PTR [edx-0x60943617]
  41695a:	inc    esp
  41695b:	cdq    
  41695c:	pop    ds
  41695d:	dec    esi
  41695e:	hlt    
  41695f:	dec    ecx
  416960:	mov    ecx,0xfb594c43
  416965:	sub    eax,0x44eb7d0b
  41696a:	cmp    eax,DWORD PTR [ecx+0x301c6957]
  416970:	xor    BYTE PTR [ecx-0x32],ch
  416973:	dec    ebx
  416974:	xchg   ecx,eax
  416975:	fadd   QWORD PTR [edi+ebx*8-0x7fac668f]
  41697c:	jbe    0x4169bb
  41697e:	retf   
  41697f:	sbb    al,0x77
  416981:	into   
  416982:	aam    0xc1
  416984:	sbb    BYTE PTR [edx],dh
  416986:	jnp    0x416920
  416988:	add    eax,0x4efded76
  41698d:	ret    0xcb04
  416990:	push   cs
  416991:	aaa    
  416992:	cmp    DWORD PTR [esi],0xd6e82816
  416998:	mov    edx,0xbe25dd8f
  41699d:	push   esp
  41699e:	ror    ecx,1
  4169a0:	or     dh,BYTE PTR [edx+0x645db922]
  4169a6:	pop    ebp
  4169a7:	inc    esi
  4169a8:	mov    eax,0x6d9aea42
  4169ad:	hlt    
  4169ae:	pusha  
  4169af:	push   0xfffffff8
  4169b1:	pusha  
  4169b2:	fld    TBYTE PTR [ebp-0x7ca2a4af]
  4169b8:	and    eax,edi
  4169ba:	popa   
  4169bb:	loope  0x4169ba
  4169bd:	or     al,0xba
  4169bf:	jecxz  0x416949
  4169c1:	sbb    ebx,DWORD PTR [edx-0x72]
  4169c4:	les    ecx,FWORD PTR [eax+0x1a]
  4169c7:	rcr    edx,cl
  4169c9:	popa   
  4169ca:	cld    
  4169cb:	mov    ds:0x481987ba,al
  4169d0:	stos   DWORD PTR es:[edi],eax
  4169d1:	sbb    edi,DWORD PTR [edi+edx*1+0x7a]
  4169d5:	hlt    
  4169d6:	ret    
  4169d7:	sub    bl,BYTE PTR [eax*2+0x4e18f044]
  4169de:	add    al,0x32
  4169e0:	pop    edi
  4169e1:	mov    esi,gs
  4169e3:	into   
  4169e4:	xor    eax,0x2adc5a36
  4169e9:	push   0x36a75ef5
  4169ee:	push   eax
  4169ef:	xchg   ecx,eax
  4169f0:	cmc    
  4169f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169f2:	nop
  4169f3:	fwait
  4169f4:	bound  edi,QWORD PTR ds:0x7e722dff
  4169fa:	call   ebp
  4169fc:	xor    al,0x6e
  4169fe:	jg     0x4169a3
  416a00:	and    BYTE PTR [bx+si],dh
  416a03:	xchg   edx,eax
  416a04:	xchg   esp,eax
  416a05:	push   ds
  416a06:	jae    0x416a85
  416a08:	jns    0x416a0e
  416a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0b:	test   al,0x34
  416a0d:	cmp    dl,ch
  416a0f:	int3   
  416a10:	cmp    esi,DWORD PTR [eax]
  416a12:	jno    0x416a20
  416a14:	sbb    ebp,DWORD PTR [eax-0x2dac5a42]
  416a1a:	mov    dh,0x1d
  416a1c:	mov    ebp,eax
  416a1e:	push   0x52
  416a20:	ret    
  416a21:	jnp    0x4169d1
  416a23:	push   cs
  416a24:	inc    ebp
  416a25:	xor    ebx,DWORD PTR [edx+0x41bb9334]
  416a2b:	je     0x416a16
  416a2d:	call   0x492b:0x23202f61
  416a34:	sti    
  416a35:	js     0x4169be
  416a37:	mov    ch,0x16
  416a39:	pop    ecx
  416a3a:	test   DWORD PTR [edx],eax
  416a3c:	retf   0xe30
  416a3f:	jbe    0x416a75
  416a41:	fdivr  QWORD PTR [edx]
  416a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a44:	mov    bh,0x55
  416a46:	(bad)  
  416a47:	jp     0x416a10
  416a49:	call   DWORD PTR [ebp+0x34]
  416a4c:	aaa    
  416a4d:	push   0x15
  416a4f:	push   edi
  416a50:	add    al,BYTE PTR [esi-0x51]
  416a53:	pop    ss
  416a54:	xor    eax,0xe3a9cdca
  416a59:	mov    fs,WORD PTR [edx-0x1c]
  416a5c:	jle    0x4169f2
  416a5e:	jb     0x4169f8
  416a60:	mov    edx,0xe04292bb
  416a65:	out    dx,al
  416a66:	sub    eax,0xe3f40a58
  416a6b:	inc    esi
  416a6c:	fldenv [edi+0x12]
  416a6f:	int3   
  416a70:	cdq    
  416a71:	arpl   di,sp
  416a73:	xchg   esi,eax
  416a74:	push   ds
  416a75:	fdiv   st(7),st
  416a77:	and    edx,DWORD PTR [ebp+0x7a]
  416a7a:	add    BYTE PTR [eax],dl
  416a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7d:	xor    eax,0x6b31c685
  416a82:	gs jge 0x416a91
  416a85:	ret    
  416a86:	daa    
  416a87:	push   esi
  416a88:	shl    DWORD PTR [eax-0x3922220d],cl
  416a8e:	fs dec edx
  416a90:	in     al,dx
  416a91:	pop    ebx
  416a92:	jns    0x416ac5
  416a94:	sbb    al,0x20
  416a96:	rol    BYTE PTR [ebx],1
  416a98:	jnp    0x416b09
  416a9a:	adc    dh,BYTE PTR [ebx]
  416a9c:	dec    esi
  416a9d:	cdq    
  416a9e:	sub    eax,0xad1c19f8
  416aa3:	aam    0x71
  416aa5:	mov    bl,0x56
  416aa7:	outs   dx,BYTE PTR ds:[esi]
  416aa8:	or     eax,0x874821c1
  416aad:	sahf   
  416aae:	retf   0x5eba
  416ab1:	mov    ah,0xce
  416ab3:	lods   eax,DWORD PTR ds:[esi]
  416ab4:	outs   dx,BYTE PTR ds:[esi]
  416ab5:	pop    edi
  416ab6:	jl     0x416b36
  416ab8:	test   DWORD PTR [ebx-0x44],0x22ef5987
  416abf:	add    esp,DWORD PTR [eax+0x58]
  416ac2:	pop    ebp
  416ac3:	fisttp WORD PTR [ecx-0x2a4fbd91]
  416ac9:	cwde   
  416aca:	jg     0x416b43
  416acc:	das    
  416acd:	mov    eax,0x5435005e
  416ad2:	cmp    al,BYTE PTR [esp+edi*2-0x73]
  416ad6:	aas    
  416ad7:	lods   al,BYTE PTR ds:[esi]
  416ad8:	mov    ebx,0xb6c4d754
  416add:	xor    esi,DWORD PTR [eax+ebx*1+0x39352ea4]
  416ae4:	push   ebp
  416ae5:	fidivr DWORD PTR [ecx]
  416ae7:	imul   ebx,ecx,0x1dc8379f
  416aed:	jl     0x416b3e
  416aef:	or     al,0x7
  416af1:	fistp  DWORD PTR [eax]
  416af3:	lods   al,BYTE PTR ds:[esi]
  416af4:	out    dx,eax
  416af5:	retf   0x5a2d
  416af8:	stos   DWORD PTR es:[edi],eax
  416af9:	out    0x3a,eax
  416afb:	ret    
  416afc:	sbb    al,BYTE PTR ds:0x33d0c973
  416b02:	xlat   BYTE PTR ds:[ebx]
  416b03:	push   ds
  416b04:	push   es
  416b05:	iret   
  416b06:	arpl   WORD PTR [edx+0x26fb3487],cx
  416b0c:	dec    edi
  416b0d:	pop    es
  416b0e:	mov    cl,0xc3
  416b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b11:	scas   eax,DWORD PTR es:[edi]
  416b12:	and    BYTE PTR [esp+esi*8],dh
  416b15:	loop   0x416b13
  416b17:	repnz push esi
  416b19:	(bad)  
  416b1b:	call   0xa1d7cb53
  416b20:	aad    0x70
  416b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b24:	into   
  416b25:	xchg   ecx,eax
  416b26:	mov    BYTE PTR [ebp-0x28473cc],al
  416b2c:	adc    BYTE PTR [eax+0x779c8543],0x95
  416b33:	inc    edi
  416b34:	sub    BYTE PTR [edx-0x21],0x8f
  416b38:	fcmovnb st,st(6)
  416b3a:	inc    eax
  416b3b:	push   ebp
  416b3c:	stc    
  416b3d:	xor    BYTE PTR [edi+0x3ef93ce0],dh
  416b43:	or     bl,cl
  416b45:	(bad)  
  416b46:	cld    
  416b47:	lahf   
  416b48:	retf   
  416b49:	or     bh,BYTE PTR gs:[esi+0x5add7804]
  416b50:	inc    ebp
  416b51:	mov    cl,0x49
  416b53:	or     dh,BYTE PTR [edi]
  416b55:	outs   dx,BYTE PTR ds:[esi]
  416b56:	fmul   QWORD PTR [eax]
  416b58:	mov    al,0x1a
  416b5a:	pop    esp
  416b5b:	xchg   ebp,eax
  416b5c:	xchg   ecx,eax
  416b5d:	retf   0x217
  416b60:	mov    ecx,0x35fa9746
  416b65:	clc    
  416b66:	add    dh,dh
  416b68:	pop    ss
  416b69:	clc    
  416b6a:	sub    DWORD PTR [ebp-0x6d],ebp
  416b6d:	mov    eax,ds:0xa46e6202
  416b72:	ret    
  416b73:	rol    BYTE PTR [ebx],1
  416b75:	fwait
  416b76:	add    dh,BYTE PTR [ebx+0x7e]
  416b79:	sbb    DWORD PTR [eax+0x25],esi
  416b7c:	test   DWORD PTR [edx-0x6a],edx
  416b7f:	stc    
  416b80:	mov    bh,0x6e
  416b82:	xlat   BYTE PTR ds:[ebx]
  416b83:	sbb    al,0x5a
  416b85:	adc    BYTE PTR [edx],dh
  416b87:	rcr    DWORD PTR ds:0x87e5f1d6,cl
  416b8d:	outs   dx,DWORD PTR ds:[esi]
  416b8e:	jl     0x416b9b
  416b90:	inc    esp
  416b91:	fucomip st,st(4)
  416b93:	in     al,0xfc
  416b95:	loop   0x416b3f
  416b97:	fsubr  QWORD PTR [edi-0x4313d8ef]
  416b9d:	lock pop esp
  416b9f:	dec    edx
  416ba0:	pop    edx
  416ba1:	retf   0xc62d
  416ba4:	cmp    ebp,DWORD PTR ds:0x9850156e
  416baa:	or     esp,DWORD PTR [ecx+0x707734da]
  416bb0:	mov    edx,DWORD PTR [ecx+0x57]
  416bb3:	sub    DWORD PTR fs:[ecx*1+0x3d479a5f],0xea33c68f
  416bbf:	in     eax,0x22
  416bc1:	adc    al,0xc9
  416bc3:	pusha  
  416bc4:	into   
  416bc5:	add    cl,bl
  416bc7:	push   0xdd166593
  416bcc:	sti    
  416bcd:	pop    es
  416bce:	dec    edx
  416bcf:	fst    QWORD PTR [ebx+esi*8]
  416bd2:	xor    ebx,DWORD PTR [eax]
  416bd4:	add    eax,0x17a034bd
  416bd9:	jno    0x416bd5
  416bdb:	mov    es,WORD PTR [esi]
  416bdd:	inc    ebx
  416bde:	pusha  
  416bdf:	inc    ebp
  416be0:	(bad)  
  416be1:	cmp    edi,DWORD PTR [edi+esi*8-0x5f99c29a]
  416be8:	loopne 0x416b72
  416bea:	iret   
  416beb:	stos   DWORD PTR es:[edi],eax
  416bec:	add    DWORD PTR gs:[eax],0xa1f08046
  416bf3:	xor    eax,0x3dfa01ca
  416bf8:	ins    BYTE PTR es:[edi],dx
  416bf9:	mov    cl,0x2f
  416bfb:	out    0x31,eax
  416bfd:	inc    esi
  416bfe:	rcr    BYTE PTR [ebx+0x8],cl
  416c01:	xchg   edx,eax
  416c02:	sub    eax,0x5bd3b87a
  416c07:	mov    ch,0x39
  416c09:	mov    edi,DWORD PTR [edx-0x6f]
  416c0c:	enter  0xd05d,0xd2
  416c10:	jns    0x416bc6
  416c12:	or     al,0xc3
  416c14:	aaa    
  416c15:	or     eax,0xb0889aef
  416c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c1b:	lea    edx,[ebx+0x42036b81]
  416c21:	pop    ebp
  416c22:	push   esi
  416c23:	loop   0x416bc9
  416c25:	xchg   ecx,eax
  416c26:	push   cs
  416c27:	stc    
  416c28:	outs   dx,DWORD PTR ds:[esi]
  416c29:	adc    esp,DWORD PTR [edx]
  416c2b:	int    0xd4
  416c2d:	xor    BYTE PTR ds:0xa8fa7797,bl
  416c33:	fwait
  416c34:	or     DWORD PTR [esi],ebx
  416c36:	jbe    0x416be5
  416c38:	into   
  416c39:	mov    al,0x10
  416c3b:	fiadd  WORD PTR ds:0xad44ca4b
  416c41:	fstp   TBYTE PTR [edx-0x15a04c51]
  416c47:	std    
  416c48:	aam    0x4f
  416c4a:	in     eax,dx
  416c4b:	pop    edx
  416c4c:	test   eax,0x1e3ed203
  416c51:	rol    DWORD PTR [ebx+0x6],cl
  416c54:	js     0x416c9a
  416c56:	imul   DWORD PTR [eax-0x5944d5d5]
  416c5c:	push   ss
  416c5d:	std    
  416c5e:	pop    ss
  416c5f:	gs jl  0x416cd4
  416c62:	fs pushw es
  416c65:	addr16 (bad) 
  416c67:	fwait
  416c68:	in     al,0xa6
  416c6a:	loope  0x416c27
  416c6c:	scas   al,BYTE PTR es:[edi]
  416c6d:	int    0xb3
  416c6f:	jmp    0xb0a74f7
  416c74:	ins    BYTE PTR es:[edi],dx
  416c75:	xchg   ecx,eax
  416c76:	(bad)  
  416c77:	std    
  416c78:	std    
  416c79:	cmp    edi,DWORD PTR ds:0xdd4a077b
  416c7f:	mov    bl,0x1b
  416c81:	ret    0x8f42
  416c84:	mov    al,ds:0xfadfa07
  416c89:	push   esp
  416c8a:	faddp  st(5),st
  416c8c:	push   ecx
  416c8d:	jo     0x416cc9
  416c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c90:	clc    
  416c91:	jno    0x416c7c
  416c93:	aad    0x79
  416c95:	in     al,0x74
  416c97:	xchg   ebp,eax
  416c98:	add    al,0x40
  416c9a:	enter  0x2ea0,0x5a
  416c9e:	mov    BYTE PTR [ecx],ah
  416ca0:	(bad)  
  416ca1:	scas   al,BYTE PTR es:[edi]
  416ca2:	sti    
  416ca3:	stc    
  416ca4:	jno    0x416cd2
  416ca6:	jmp    0x90c3a1bb
  416cab:	xchg   esp,eax
  416cac:	nop
  416cad:	dec    esp
  416cae:	(bad)  
  416caf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cb1:	leave  
  416cb2:	out    0x4d,al
  416cb4:	loope  0x416d22
  416cb6:	cs stos DWORD PTR es:[edi],eax
  416cb8:	and    cl,BYTE PTR [ebp+0x22]
  416cbb:	or     BYTE PTR [ecx+0x7de87c5d],0x13
  416cc2:	jle    0x416c4b
  416cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cc5:	adc    al,0x7b
  416cc7:	push   0xffffff88
  416cc9:	pop    ebx
  416cca:	popa   
  416ccb:	in     al,dx
  416ccc:	icebp  
  416ccd:	dec    edx
  416cce:	sbb    dl,bl
  416cd0:	pop    edx
  416cd1:	ins    DWORD PTR es:[edi],dx
  416cd2:	(bad)  
  416cd3:	shr    BYTE PTR [ebx],0xc
  416cd6:	or     ch,BYTE PTR [esi]
  416cd8:	sahf   
  416cd9:	inc    edi
  416cda:	xchg   ecx,eax
  416cdb:	adc    al,0x20
  416cdd:	and    eax,0xc4a73cdf
  416ce2:	sub    eax,0xa5258158
  416ce7:	hlt    
  416ce8:	outs   dx,BYTE PTR ds:[esi]
  416ce9:	sti    
  416cea:	adc    eax,0xec4d70dc
  416cef:	and    eax,0x545adb92
  416cf4:	dec    esp
  416cf5:	imul   ebx,DWORD PTR [edx-0x75c4ef5f],0x71
  416cfc:	ins    DWORD PTR es:[edi],dx
  416cfd:	xchg   ecx,eax
  416cfe:	outs   dx,DWORD PTR ds:[esi]
  416cff:	push   esp
  416d00:	sub    eax,0xb27ea237
  416d05:	push   ds
  416d06:	mov    esp,ecx
  416d08:	lods   al,BYTE PTR ds:[esi]
  416d09:	in     eax,dx
  416d0a:	push   ebx
  416d0b:	and    esp,edi
  416d0d:	jmp    0x1c687772
  416d12:	pop    ebx
  416d13:	outs   dx,BYTE PTR ds:[esi]
  416d14:	cmp    ecx,DWORD PTR [esi]
  416d16:	xor    BYTE PTR [ebp+0x44032190],0xf
  416d1d:	push   edi
  416d1e:	sbb    al,0x96
  416d20:	pop    eax
  416d21:	dec    edi
  416d22:	pushf  
  416d23:	test   ah,dh
  416d25:	in     eax,0x8b
  416d27:	fidiv  DWORD PTR [ebp+eiz*8+0x7200af26]
  416d2e:	sbb    BYTE PTR [eax+0x714c647a],dh
  416d34:	lods   eax,DWORD PTR ds:[esi]
  416d35:	addr16 (bad) 
  416d37:	jno    0x416d67
  416d39:	mov    edi,0x3c42a717
  416d3e:	fdiv   DWORD PTR [edx]
  416d40:	popf   
  416d41:	dec    ecx
  416d42:	mov    DWORD PTR [edx],ebp
  416d44:	mov    cl,0x9a
  416d46:	test   al,0x55
  416d48:	je     0x416cff
  416d4a:	nop
  416d4b:	adc    edi,edi
  416d4d:	sub    BYTE PTR [edx+edi*8],ch
  416d50:	mov    ds:0x37bed3fa,eax
  416d55:	xor    al,0xf1
  416d57:	mov    eax,0xe3754d9f
  416d5c:	cld    
  416d5d:	mov    edx,0x268010
  416d62:	std    
  416d63:	pushf  
  416d64:	mov    ecx,0x1b61aaa
  416d69:	retf   0xbe81
  416d6c:	lds    edx,FWORD PTR [edx+ecx*8]
  416d6f:	mov    fs,WORD PTR [eax-0x59a3271e]
  416d75:	sbb    BYTE PTR [esi],al
  416d77:	inc    ebx
  416d78:	xchg   edx,eax
  416d79:	adc    bh,BYTE PTR [ecx]
  416d7b:	and    eax,0x44e43c62
  416d80:	and    DWORD PTR [ebp-0x3a],ecx
  416d83:	icebp  
  416d84:	push   edx
  416d85:	js     0x416d60
  416d87:	ins    BYTE PTR es:[edi],dx
  416d88:	pop    esp
  416d89:	jnp    0x416da5
  416d8b:	ficomp WORD PTR [edx+0x1f7df1cc]
  416d91:	xchg   ecx,eax
  416d92:	dec    esp
  416d93:	jo     0x416d44
  416d95:	int3   
  416d96:	and    edx,DWORD PTR [esi]
  416d98:	dec    ecx
  416d99:	sbb    eax,0x232dd5de
  416d9e:	adc    al,0xb
  416da0:	mov    dl,dl
  416da2:	cmp    al,0x51
  416da4:	retf   0xf232
  416da7:	retf   0x7eb1
  416daa:	mov    BYTE PTR [ebx],dh
  416dac:	jns    0x416dce
  416dae:	inc    ebp
  416daf:	mov    BYTE PTR [ebp-0x7a],0xb4
  416db3:	aaa    
  416db4:	inc    ebx
  416db5:	mov    edi,0x2b8baf7c
  416dba:	xlat   BYTE PTR ds:[ebx]
  416dbb:	sbb    al,0xcc
  416dbd:	pop    ebx
  416dbe:	and    dh,BYTE PTR [ebp-0xf942422]
  416dc4:	int    0x61
  416dc6:	push   esp
  416dc7:	leave  
  416dc8:	ins    DWORD PTR es:[edi],dx
  416dc9:	fwait
  416dca:	call   0x14d2:0x6fd5f14a
  416dd1:	jne    0x416e0d
  416dd3:	xchg   ebp,eax
  416dd4:	and    al,0x21
  416dd6:	mov    bh,0x6
  416dd8:	outs   dx,DWORD PTR ds:[esi]
  416dd9:	add    BYTE PTR ds:0x3941a725,0xd7
  416de0:	mov    eax,esi
  416de2:	loop   0x416e3c
  416de4:	and    al,BYTE PTR [esp+edi*2+0x3c9c9eef]
  416deb:	mov    ebx,DWORD PTR [eax]
  416ded:	or     DWORD PTR [edi-0x37],eax
  416df0:	popa   
  416df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df2:	mov    esp,0x16cc5be9
  416df7:	jge    0x416e02
  416df9:	popa   
  416dfa:	dec    edx
  416dfb:	ins    DWORD PTR es:[edi],dx
  416dfc:	mov    al,0xc2
  416dfe:	rcl    ecx,0x51
  416e01:	adc    al,0x7d
  416e03:	fs adc ah,dh
  416e06:	cmp    eax,0xed7327aa
  416e0b:	jne    0x416e3a
  416e0d:	(bad)  
  416e0e:	fstp   DWORD PTR [esi]
  416e10:	sub    esp,DWORD PTR [esi]
  416e12:	mov    esi,0x687ac116
  416e17:	add    dh,BYTE PTR ds:0xdce0d708
  416e1d:	jmp    0xc50d:0x2f7ccd70
  416e24:	mov    BYTE PTR [ebx+0x57],0xd7
  416e28:	lahf   
  416e29:	mov    ?,WORD PTR [esi-0xe275223]
  416e2f:	and    ch,BYTE PTR [eax]
  416e31:	push   esp
  416e32:	jle    0x416e9e
  416e34:	xchg   esp,eax
  416e35:	data16 loop 0x416e3a
  416e38:	and    al,0x54
  416e3a:	stos   DWORD PTR es:[edi],eax
  416e3b:	fcomp  DWORD PTR [ebp+0x10]
  416e3e:	in     eax,0xba
  416e40:	stos   BYTE PTR es:[edi],al
  416e41:	push   ebx
  416e42:	ins    DWORD PTR es:[edi],dx
  416e43:	xor    DWORD PTR [edx+0x3b],edi
  416e46:	sbb    eax,0x5b061193
  416e4b:	(bad)  
  416e4c:	mov    ah,0x35
  416e4e:	stos   BYTE PTR es:[edi],al
  416e4f:	bound  edi,QWORD PTR [edi+edx*4+0x6d]
  416e53:	(bad)  
  416e54:	imul   eax,DWORD PTR [eax+0x6a],0x68
  416e58:	adc    ch,BYTE PTR [edi+0x37cec108]
  416e5e:	mov    cs,ebx
  416e60:	jnp    0x416ed6
  416e62:	push   ecx
  416e63:	xor    ebx,0x6b
  416e66:	jae    0x416deb
  416e68:	pushf  
  416e69:	fistp  WORD PTR [eax-0x72]
  416e6c:	push   ss
  416e6d:	add    ah,bl
  416e6f:	in     al,dx
  416e70:	dec    edx
  416e71:	repnz call 0x244d:0x70fe569f
  416e79:	jle    0x416ea0
  416e7b:	inc    edi
  416e7c:	js     0x416e90
  416e7e:	push   es
  416e7f:	enter  0xa4e7,0x53
  416e83:	call   0x1ad6cf82
  416e88:	mov    edx,0x626f13e0
  416e8d:	aam    0x5f
  416e8f:	sub    eax,0xcf0eb760
  416e94:	in     al,0xd4
  416e96:	test   al,0xbe
  416e98:	inc    BYTE PTR [edx]
  416e9a:	jmp    FWORD PTR [eax]
  416e9c:	pop    ds
  416e9d:	jge    0x416e81
  416e9f:	nop
  416ea0:	stos   DWORD PTR es:[edi],eax
  416ea1:	adc    BYTE PTR [esi],ch
  416ea3:	adc    BYTE PTR [esi],0xb
  416ea6:	int    0x5e
  416ea8:	push   esi
  416ea9:	jo     0x416ef2
  416eab:	aad    0xea
  416ead:	jecxz  0x416ee9
  416eaf:	fadd   DWORD PTR ds:[ebp+esi*4-0x1d]
  416eb4:	pop    eax
  416eb5:	sbb    bh,dh
  416eb7:	(bad)  
  416eb9:	jb     0x416f31
  416ebb:	ret    0xf3fe
  416ebe:	call   0x2ecccfd5
  416ec3:	adc    esi,ebx
  416ec5:	sub    al,0xcd
  416ec7:	adc    al,0x63
  416ec9:	cmp    al,0xaf
  416ecb:	mov    esp,DWORD PTR [ebx+0x5e]
  416ece:	lock mov ah,0xce
  416ed1:	inc    ebx
  416ed2:	es es sub eax,0x71f8aff4
  416ed9:	jge    0x416f58
  416edb:	popf   
  416edc:	jae    0x416eab
  416ede:	jo     0x416ed2
  416ee0:	sub    al,BYTE PTR [edx]
  416ee2:	(bad)  
  416ee3:	push   ds
  416ee4:	inc    ebx
  416ee5:	mov    BYTE PTR ss:[ebx+0x78],bh
  416ee9:	mov    ebx,0x193f1a7c
  416eee:	inc    ecx
  416eef:	push   ecx
  416ef0:	and    al,0xb5
  416ef2:	mov    ?,WORD PTR [eax]
  416ef4:	scas   al,BYTE PTR es:[edi]
  416ef5:	js     0x416ec2
  416ef7:	jbe    0x416ee0
  416ef9:	jge    0x416ec1
  416efb:	adc    ah,bl
  416efd:	push   ds
  416efe:	mov    dh,0xbb
  416f00:	dec    ebx
  416f01:	ds aad 0xc4
  416f04:	das    
  416f05:	adc    bl,BYTE PTR [edi]
  416f07:	hlt    
  416f08:	aam    0xfa
  416f0a:	addr16 int 0xa9
  416f0d:	dec    esi
  416f0e:	pushf  
  416f0f:	(bad)  [ecx]
  416f11:	out    dx,eax
  416f12:	js     0x416e9b
  416f14:	sbb    DWORD PTR [ebx-0x3a2ca805],ebp
  416f1a:	je     0x416f5e
  416f1c:	pop    edx
  416f1d:	das    
  416f1e:	sbb    al,0x88
  416f20:	or     BYTE PTR [eax],dl
  416f22:	mov    dl,0x52
  416f24:	ror    BYTE PTR [ecx-0x1],cl
  416f27:	push   esi
  416f28:	jns    0x416f61
  416f2a:	pop    edi
  416f2b:	das    
  416f2c:	ja     0x416f4d
  416f2e:	mov    eax,0xd0eb1e8b
  416f33:	addr16 loop 0x416ed2
  416f36:	mov    ebp,0x8baacdd6
  416f3b:	retf   0xad9a
  416f3e:	push   ecx
  416f3f:	mov    fs,WORD PTR [edx-0x26]
  416f42:	xchg   esi,eax
  416f43:	sub    al,0xec
  416f45:	inc    ebp
  416f46:	and    eax,0x15728cba
  416f4b:	sbb    bh,ah
  416f4d:	xor    al,0xe1
  416f4f:	ret    
  416f50:	in     al,dx
  416f51:	jnp    0x416f7c
  416f53:	inc    esi
  416f54:	xor    esi,edx
  416f56:	xchg   esp,eax
  416f57:	push   edx
  416f58:	fild   QWORD PTR [ebx-0x3]
  416f5b:	inc    eax
  416f5c:	pop    es
  416f5d:	cmp    ebp,ecx
  416f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f60:	lods   eax,DWORD PTR ds:[esi]
  416f61:	sbb    DWORD PTR ds:0xe2be7671,eax
  416f67:	dec    eax
  416f68:	mov    edi,0xdff8053
  416f6d:	mov    edi,0x56ec1767
  416f72:	mov    ch,0x4e
  416f74:	dec    ebx
  416f75:	or     eax,0x88763e50
  416f7a:	inc    ecx
  416f7b:	dec    ecx
  416f7c:	in     al,dx
  416f7d:	test   esi,esi
  416f7f:	push   ecx
  416f80:	push   eax
  416f81:	pop    ss
  416f82:	ds (bad) 
  416f84:	lahf   
  416f85:	in     eax,dx
  416f86:	inc    edx
  416f87:	xor    al,0x2
  416f89:	fbld   TBYTE PTR [esi]
  416f8b:	xchg   edx,eax
  416f8c:	aam    0xa3
  416f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8f:	xor    cl,bh
  416f91:	loopne 0x416f4f
  416f93:	lds    esi,FWORD PTR [ecx+0x211e0ead]
  416f99:	and    BYTE PTR [ecx-0x19def8b8],ah
  416f9f:	cmp    BYTE PTR [ecx-0x3e],bh
  416fa2:	lahf   
  416fa3:	js     0x416fee
  416fa5:	add    DWORD PTR [ebx+0x140a01eb],ebp
  416fab:	(bad)  
  416fac:	retf   
  416fad:	ret    0x13c6
  416fb0:	cmp    eax,0x7c01fed1
  416fb5:	sbb    ch,BYTE PTR [esi-0x22]
  416fb8:	pusha  
  416fb9:	imul   edx,ebp,0x76086ca7
  416fbf:	iret   
  416fc0:	cli    
  416fc1:	scas   eax,DWORD PTR es:[edi]
  416fc2:	inc    eax
  416fc3:	sbb    eax,0xe94034ae
  416fc8:	int    0xe3
  416fca:	add    eax,0x96081b6f
  416fcf:	push   ebx
  416fd0:	les    edx,FWORD PTR [ebx]
  416fd2:	push   edi
  416fd3:	inc    edi
  416fd4:	or     al,0x4b
  416fd6:	clc    
  416fd7:	iret   
  416fd8:	adc    ecx,edx
  416fda:	add    al,0x12
  416fdc:	loope  0x417035
  416fde:	int    0x48
  416fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe1:	sbb    edx,edi
  416fe3:	xor    DWORD PTR [ebx],eax
  416fe5:	into   
  416fe6:	pop    ss
  416fe7:	xchg   esi,eax
  416fe8:	aam    0xfe
  416fea:	std    
  416feb:	imul   ebx,edx,0xda9367c8
  416ff1:	xor    esi,DWORD PTR [ecx+0x1]
  416ff4:	sbb    al,0x67
  416ff6:	ins    DWORD PTR es:[edi],dx
  416ff7:	pop    ecx
  416ff8:	test   ah,dl
  416ffa:	xlat   BYTE PTR ds:[ebx]
  416ffb:	jns    0x417021
  416ffd:	xor    al,0x98
  416fff:	data16 shl BYTE PTR [ecx-0x5b],1
  417003:	jae    0x416fda
  417005:	add    DWORD PTR [esi],0xffffffbd
  417008:	or     BYTE PTR [ebp+0x68],0xf5
  41700c:	imul   ebx,DWORD PTR [eax+0x736d08ef],0xbc5ffe9e
  417016:	imul   ebp,DWORD PTR [eax-0x16e605aa],0xffffffca
  41701d:	push   ebp
  41701e:	loop   0x417024
  417020:	rcl    BYTE PTR [ebp-0x354a86ac],0xd1
  417027:	push   cs
  417028:	es cmp eax,0xcf7998ea
  41702e:	cmp    BYTE PTR [ecx+0x6b988361],bh
  417034:	shr    DWORD PTR [ebx+ebp*2+0x7],cl
  417038:	xchg   edi,eax
  417039:	mov    cl,0x33
  41703b:	push   ss
  41703c:	out    dx,al
  41703d:	xor    ah,BYTE PTR [ebx+0x47d661d6]
  417043:	jo     0x416ff2
  417045:	ror    DWORD PTR [edi],cl
  417047:	dec    esp
  417048:	cmp    DWORD PTR [eax+0x39b3d58d],ebp
  41704e:	mov    ds:0xba8d6e26,eax
  417053:	mov    dh,0xdf
  417055:	sahf   
  417056:	mov    ?,WORD PTR [edx+eiz*1-0x21c3ba8b]
  41705d:	adc    bh,bl
  41705f:	inc    ecx
  417060:	sbb    BYTE PTR [edx+0x6f],ah
  417063:	bts    DWORD PTR [ebp+0x34],esp
  417067:	fadd   QWORD PTR [ebp+0x24]
  41706a:	sub    BYTE PTR [esp+esi*4],0x4a
  41706e:	pop    edi
  41706f:	lahf   
  417070:	mov    ebx,0xc4cc8396
  417075:	mov    ch,0xcc
  417077:	mov    ebp,0xebe69547
  41707c:	sti    
  41707d:	cmp    ch,BYTE PTR [edx-0x592064ed]
  417083:	adc    cl,bl
  417085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417086:	ror    BYTE PTR [esi],1
  417088:	into   
  417089:	in     eax,dx
  41708a:	mov    bl,0xa
  41708c:	test   eax,0x1544d3a3
  417091:	stos   DWORD PTR es:[edi],eax
  417092:	mov    bh,0x87
  417094:	stc    
  417095:	xor    al,0xc1
  417097:	popf   
  417098:	scas   al,BYTE PTR es:[edi]
  417099:	mov    ch,BYTE PTR [edi-0x1e]
  41709c:	mov    bl,0x67
  41709e:	or     DWORD PTR [esi+0x600b4eda],edx
  4170a4:	add    edx,DWORD PTR ds:0xef7d3bd6
  4170aa:	test   al,0x54
  4170ac:	cld    
  4170ad:	loop   0x417127
  4170af:	iret   
  4170b0:	inc    esi
  4170b1:	sahf   
  4170b2:	jo     0x4170fb
  4170b4:	dec    ebp
  4170b5:	lock jnp 0x41709a
  4170b8:	test   DWORD PTR [ecx],ebp
  4170ba:	pop    esp
  4170bb:	mov    ecx,0x9dfe3504
  4170c0:	int3   
  4170c1:	sub    eax,0x303a6934
  4170c6:	pop    esp
  4170c7:	pop    edx
  4170c8:	(bad)  
  4170c9:	scas   al,BYTE PTR es:[edi]
  4170ca:	fild   WORD PTR [edi-0x61275213]
  4170d0:	pop    ss
  4170d1:	xor    al,0xc8
  4170d3:	add    al,0x56
  4170d5:	and    ah,BYTE PTR [esi-0x4b]
  4170d8:	mov    WORD PTR ss:[eax-0x30],?
  4170dc:	cmp    eax,0x99d8d34f
  4170e1:	repz sbb DWORD PTR [ebp+edx*4-0x3515f3d5],eax
  4170e9:	sbb    DWORD PTR [eax+0x39],ecx
  4170ec:	scas   al,BYTE PTR es:[edi]
  4170ed:	sub    eax,0xf8df61f2
  4170f2:	sub    DWORD PTR [ebx-0x3f],eax
  4170f5:	aas    
  4170f6:	retf   0xec50
  4170f9:	jns    0x417133
  4170fb:	inc    ebp
  4170fc:	sub    eax,0xd65d98db
  417101:	fnstsw WORD PTR [ecx-0x197ae05e]
  417107:	and    BYTE PTR [ebx+0x22869e1c],bh
  41710d:	inc    eax
  41710e:	(bad)  
  41710f:	in     eax,dx
  417110:	push   ds
  417111:	push   ss
  417112:	push   ds
  417113:	or     al,BYTE PTR [eax]
  417115:	scas   eax,DWORD PTR es:[edi]
  417116:	into   
  417117:	jae    0x417116
  417119:	push   ebx
  41711a:	mov    cl,0xd9
  41711c:	jns    0x4170b6
  41711e:	xor    al,0x92
  417120:	jne    0x4170c1
  417122:	lods   eax,DWORD PTR ds:[esi]
  417123:	add    eax,0x569d0e38
  417128:	es lock out 0x11,eax
  41712c:	arpl   WORD PTR [edx],di
  41712e:	mov    ebx,0x28c479bc
  417133:	pop    edi
  417134:	push   0x981c582a
  417139:	mov    esi,0xe96ab131
  41713e:	lds    edi,FWORD PTR ds:0xa66088d5
  417144:	mov    ebx,0x4d68d53c
  417149:	sbb    BYTE PTR ds:0xf0fff9d2,bh
  41714f:	adc    eax,DWORD PTR [ecx+0x48]
  417152:	sub    eax,0x37eaca98
  417157:	or     edx,DWORD PTR [eax+0xd]
  41715a:	ret    
  41715b:	pop    ebp
  41715c:	add    esi,DWORD PTR [ebx]
  41715e:	loopne 0x417167
  417160:	push   esi
  417161:	jno    0x417102
  417163:	fcomp  QWORD PTR [eax+0x3c7a85c4]
  417169:	rcl    BYTE PTR [ebx+0x1f],0x17
  41716d:	add    BYTE PTR [edx],bh
  41716f:	add    bh,BYTE PTR [ebx]
  417171:	gs mov esp,0x6f09688f
  417177:	neg    BYTE PTR [eax+0x3c1d495]
  41717d:	xchg   ebp,eax
  41717e:	pushf  
  41717f:	dec    ecx
  417180:	xor    eax,0xa1c42b0b
  417185:	aad    0x37
  417187:	xchg   esi,esi
  417189:	cmp    al,0xbf
  41718b:	(bad)  
  41718d:	test   al,0x34
  41718f:	test   BYTE PTR [edx],0x43
  417192:	mov    eax,ds:0xf59a72d2
  417197:	mov    ch,0x6e
  417199:	ins    DWORD PTR es:[edi],dx
  41719a:	bnd jnp 0x4171d9
  41719d:	jge    0x4171d2
  41719f:	sub    al,0xeb
  4171a1:	lods   al,BYTE PTR ds:[esi]
  4171a2:	jns    0x4171a4
  4171a4:	outs   dx,BYTE PTR ds:[esi]
  4171a5:	adc    DWORD PTR [ebx],edi
  4171a7:	retf   0xe37b
  4171aa:	cmc    
  4171ab:	push   ebx
  4171ac:	int3   
  4171ad:	adc    eax,0xaed86a1f
  4171b2:	iret   
  4171b3:	inc    ebp
  4171b4:	push   ecx
  4171b5:	(bad)  
  4171b6:	fild   QWORD PTR [ebp+0x18]
  4171b9:	push   edx
  4171ba:	jp     0x4171b6
  4171bc:	jbe    0x4171fe
  4171be:	add    ebx,0x21
  4171c1:	(bad)  
  4171c2:	and    DWORD PTR [ebx-0x3d489730],ebp
  4171c8:	into   
  4171c9:	pusha  
  4171ca:	xchg   ebx,eax
  4171cb:	dec    ebx
  4171cc:	outs   dx,BYTE PTR ds:[esi]
  4171cd:	pusha  
  4171ce:	xor    edx,ecx
  4171d0:	(bad)  
  4171d1:	jo     0x41721f
  4171d3:	aam    0x9b
  4171d5:	sbb    al,0x3f
  4171d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d8:	sar    DWORD PTR [ecx+eiz*2+0x7bab279c],cl
  4171df:	inc    ebx
  4171e0:	hlt    
  4171e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e2:	mov    WORD PTR ds:0xa16c785,gs
  4171e8:	inc    ebx
  4171e9:	jmp    0x4171a8
  4171eb:	retfw  0xf345
  4171ef:	inc    esi
  4171f0:	loop   0x417269
  4171f2:	mov    DWORD PTR [ecx],ebp
  4171f4:	push   edx
  4171f5:	pop    edi
  4171f6:	ss mov dl,0x67
  4171f9:	nop
  4171fa:	mov    eax,ds:0xdd2e38d8
  4171ff:	aaa    
  417200:	adc    BYTE PTR [ebp+0x58],ch
  417203:	je     0x417234
  417205:	sbb    DWORD PTR [ebx+esi*4+0x213ab3ba],0xffffffd7
  41720d:	push   ecx
  41720e:	test   al,0x93
  417210:	ret    
  417211:	push   ds
  417212:	in     al,0xd0
  417214:	mov    dh,BYTE PTR [ecx-0x65e9d97b]
  41721a:	pop    ebp
  41721b:	inc    edi
  41721c:	add    DWORD PTR [edi+0x6aa9d0e8],0xe24502f8
  417226:	mov    esp,0xa866b077
  41722b:	repz test dl,al
  41722e:	xor    ebx,edx
  417230:	or     esi,esi
  417232:	mov    WORD PTR [eax-0x24ac1157],ss
  417238:	jge    0x41726e
  41723a:	push   0x3bbfb36b
  41723f:	mov    ds:0xc4f25aa3,al
  417244:	mov    ch,0xde
  417246:	jecxz  0x417253
  417248:	fadd   st(0),st
  41724a:	sbb    BYTE PTR [esi],0xc9
  41724d:	push   0xcaf9b105
  417252:	xchg   DWORD PTR [ecx+eiz*8-0x73],esp
  417256:	mov    ds:0x4142842e,al
  41725b:	sysexit 
  41725d:	pusha  
  41725e:	inc    esp
  41725f:	xor    al,al
  417261:	push   eax
  417262:	dec    ebp
  417263:	div    BYTE PTR [ebp-0x45]
  417266:	and    dl,ah
  417268:	loope  0x41720e
  41726a:	mov    ebp,0x683dfbe1
  41726f:	addr16 aam 0xbc
  417272:	push   esi
  417273:	jmp    0x4172d6
  417275:	les    ecx,FWORD PTR [edi-0x72]
  417278:	mov    eax,0xefb6db6c
  41727d:	lods   eax,DWORD PTR ds:[esi]
  41727e:	fisttp QWORD PTR [edx-0x80]
  417281:	inc    sp
  417283:	test   al,0x57
  417285:	(bad)  
  417286:	mov    ebp,DWORD PTR [edi-0x729d49a4]
  41728c:	retf   
  41728d:	lds    ebx,FWORD PTR [edi-0x2b7c16]
  417293:	ins    DWORD PTR es:[edi],dx
  417294:	pop    ss
  417295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417296:	popf   
  417297:	aad    0xa4
  417299:	cwde   
  41729a:	push   edx
  41729b:	jmp    0x4172ed
  41729d:	jge    0x417297
  41729f:	sub    edi,DWORD PTR [ebx]
  4172a1:	mov    bl,0x31
  4172a3:	rcl    DWORD PTR [ebx],1
  4172a5:	cmp    ch,BYTE PTR [eax]
  4172a7:	cwde   
  4172a8:	iret   
  4172a9:	inc    ebp
  4172aa:	fsubr  DWORD PTR [ecx-0x1a1b9c6]
  4172b0:	mov    edx,DWORD PTR [ecx+0x7e8033ca]
  4172b6:	outs   dx,DWORD PTR ds:[esi]
  4172b7:	push   esp
  4172b8:	mov    DWORD PTR [eax+ebp*2-0x286fb508],0xf8334c5
  4172c3:	mov    dl,0x84
  4172c5:	mov    ch,0xa5
  4172c7:	scas   al,BYTE PTR es:[edi]
  4172c8:	dec    si
  4172ca:	xchg   BYTE PTR [ecx+0x41],al
  4172cd:	loopne 0x41724f
  4172cf:	div    DWORD PTR [ecx-0x47690d64]
  4172d5:	retf   0x9931
  4172d8:	push   0x4475e24f
  4172dd:	les    esi,FWORD PTR [eax-0x4a]
  4172e0:	jmp    0x8e69:0x2fd363ab
  4172e7:	add    dl,BYTE PTR es:[edi-0x476bb8a1]
  4172ee:	mov    esp,0x19b389d2
  4172f3:	loopne 0x4172d0
  4172f5:	jecxz  0x4172e7
  4172f7:	imul   ecx,DWORD PTR [edi-0x12eda197],0x8789c0e1
  417301:	or     esi,DWORD PTR [ebx-0x13beb4a6]
  417307:	pushf  
  417308:	lds    edx,FWORD PTR [eax-0x7a]
  41730b:	popa   
  41730c:	rol    BYTE PTR [eax],1
  41730e:	loope  0x41735c
  417310:	fsubr  DWORD PTR [edx]
  417312:	xor    BYTE PTR [edx+0x20e4f95c],bh
  417318:	cmc    
  417319:	dec    ebx
  41731a:	push   esi
  41731b:	pop    esp
  41731c:	xor    eax,0xf41ecb20
  417321:	push   eax
  417322:	in     al,0xdc
  417324:	pop    ecx
  417325:	push   0xbe085187
  41732a:	fisttp QWORD PTR [eax]
  41732c:	add    ah,BYTE PTR [eax+ebp*8-0x2]
  417330:	hlt    
  417331:	add    ecx,ebx
  417333:	sahf   
  417334:	bound  edx,QWORD PTR [ecx]
  417336:	imul   edx,ebx,0x2a
  417339:	xchg   DWORD PTR [ebx-0x181a6c4b],eax
  41733f:	ds loopne 0x417331
  417342:	sbb    dl,BYTE PTR [edx]
  417344:	cmp    eax,0x4aea08e9
  417349:	dec    edx
  41734a:	je     0x417357
  41734c:	enter  0x8469,0xae
  417350:	pop    ecx
  417351:	test   ebx,0xbee5e07d
  417357:	xchg   edi,eax
  417358:	push   edx
  417359:	jae    0x417312
  41735b:	sbb    DWORD PTR [edx],esi
  41735d:	xchg   BYTE PTR [ecx+0x563a0465],dl
  417363:	les    ebp,FWORD PTR [ecx-0x6]
  417366:	jmp    0xdefb:0x5edf7ddb
  41736d:	pushf  
  41736e:	xchg   esi,eax
  41736f:	jp     0x417344
  417371:	mov    ebp,0x1c8979ec
  417376:	aam    0x7c
  417378:	movzx  edi,BYTE PTR [esi+0x49f63501]
  41737f:	clc    
  417380:	lock xchg edx,eax
  417382:	lods   al,BYTE PTR ds:[esi]
  417383:	adc    dl,dl
  417385:	dec    edx
  417386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417388:	jns    0x417387
  41738a:	cmp    DWORD PTR [ecx+0x3031665f],esi
  417390:	xchg   BYTE PTR [ebp+0x5e],cl
  417393:	mov    ebp,0x73ef7900
  417398:	cli    
  417399:	fisttp QWORD PTR [ebx+0x3208d1dc]
  41739f:	ret    0xcf1e
  4173a2:	(bad)  [esi]
  4173a4:	mov    edx,0xe23040c3
  4173a9:	aad    0xcf
  4173ab:	sbb    eax,DWORD PTR [eax-0x3b]
  4173ae:	and    al,0xd1
  4173b0:	aas    
  4173b1:	outs   dx,BYTE PTR ds:[esi]
  4173b2:	fstp   DWORD PTR [eax-0x51]
  4173b5:	jmp    0x1efaeee
  4173ba:	mov    bh,0x6d
  4173bc:	inc    eax
  4173bd:	mov    dh,0x69
  4173bf:	adc    eax,0x9cabc821
  4173c4:	sbb    ax,0xfb10
  4173c8:	push   esi
  4173c9:	mov    edx,0x7baecbb1
  4173ce:	clc    
  4173cf:	jle    0x417396
  4173d1:	mov    BYTE PTR [edi],dh
  4173d3:	push   esp
  4173d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d5:	arpl   WORD PTR ds:0xbc5d5930,di
  4173db:	mov    es,edx
  4173dd:	jg     0x417426
  4173df:	ins    BYTE PTR es:[edi],dx
  4173e0:	add    bl,BYTE PTR ds:0x9315541f
  4173e6:	mov    dh,0x14
  4173e8:	cmp    BYTE PTR [edx],0xc
  4173eb:	jbe    0x4173ec
  4173ed:	nop
  4173ee:	sub    DWORD PTR [edx+0x34ff4c3d],edx
  4173f4:	fsubrp st(5),st
  4173f6:	mov    ebp,ebx
  4173f8:	sbb    ecx,edx
  4173fa:	add    bh,dh
  4173fc:	nop
  4173fd:	cmp    DWORD PTR [edx+0x3b34d3a2],0xffffff96
  417404:	pop    ecx
  417405:	dec    edi
  417406:	ret    0x25a5
  417409:	cmp    eax,0xd077ee23
  41740e:	sub    bh,BYTE PTR [ebp+edi*2-0xe08122]
  417415:	xor    ah,BYTE PTR [ebx-0x7d]
  417418:	mov    esi,0x6b922e2f
  41741d:	aaa    
  41741e:	call   0xd41e7e5d
  417423:	scas   al,BYTE PTR es:[edi]
  417424:	retf   0xbcc2
  417427:	push   ecx
  417428:	pop    esi
  417429:	test   DWORD PTR [eax-0x28],0x631c2ef6
  417430:	jne    0x417434
  417432:	dec    ebp
  417433:	stos   BYTE PTR es:[edi],al
  417434:	mov    al,ds:0xae96f177
  417439:	fwait
  41743a:	call   0x128503d1
  41743f:	or     dh,BYTE PTR [edx]
  417441:	xchg   ebp,eax
  417442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417443:	sub    eax,DWORD PTR [ebx]
  417445:	cmp    al,0xae
  417447:	das    
  417448:	inc    ecx
  417449:	mov    WORD PTR [esp],ss
  41744c:	push   edx
  41744d:	cdq    
  41744e:	out    dx,eax
  41744f:	pop    esi
  417450:	adc    eax,DWORD PTR es:[edi+0x4b]
  417454:	and    ecx,DWORD PTR [ebp+0x534fcf72]
  41745a:	adc    BYTE PTR [edi-0x25c8ef86],dh
  417460:	jb     0x41746f
  417462:	lahf   
  417463:	mov    edi,0x7b80d47e
  417468:	mov    ch,0x45
  41746a:	and    eax,0x37b9da96
  41746f:	and    edx,ebp
  417471:	sub    DWORD PTR [edi],0xffffffff
  417474:	fsubr  DWORD PTR ds:0x2366d4be
  41747a:	dec    ebp
  41747b:	and    BYTE PTR [eax+0x453d19ed],cl
  417481:	mov    BYTE PTR [edx-0x31039cfc],bl
  417487:	rcl    BYTE PTR [eax+0x2e],1
  41748a:	in     eax,0xbe
  41748c:	aam    0x9
  41748e:	push   0xffffffb6
  417490:	mov    esp,0x66b5594c
  417495:	scas   al,BYTE PTR es:[edi]
  417496:	jmp    0x417468
  417498:	adc    dh,dl
  41749a:	rcl    DWORD PTR [ecx-0x6d787c56],1
  4174a0:	(bad)
  4174a3:	mov    ch,0x55
  4174a5:	add    edx,DWORD PTR [edx-0x62]
  4174a8:	aad    0x7f
  4174aa:	sub    al,ch
  4174ac:	xor    esi,0xffffffc7
  4174af:	mov    dl,0xf1
  4174b1:	(bad)  
  4174b2:	popa   
  4174b3:	leave  
  4174b4:	jnp    0x41744a
  4174b6:	mov    esp,0x9f40d3ad
  4174bb:	inc    esi
  4174bc:	retf   
  4174bd:	or     bh,BYTE PTR [ebx-0x61]
  4174c0:	pusha  
  4174c1:	xor    al,0x40
  4174c3:	ret    
  4174c4:	lods   eax,DWORD PTR ds:[esi]
  4174c5:	std    
  4174c6:	sub    cl,ah
  4174c8:	lahf   
  4174c9:	push   ecx
  4174ca:	repnz (bad) 
  4174cc:	pop    edi
  4174cd:	in     eax,0xac
  4174cf:	xchg   edx,eax
  4174d0:	and    eax,0x762ec705
  4174d5:	jo     0x4174f8
  4174d7:	mov    al,0x74
  4174d9:	push   0xb1ce98ed
  4174de:	into   
  4174df:	pop    esi
  4174e0:	sub    eax,0x1718b547
  4174e5:	pmullw mm6,mm6
  4174e8:	(bad)
  4174eb:	das    
  4174ec:	ins    DWORD PTR es:[edi],dx
  4174ed:	add    al,0x2e
  4174ef:	out    dx,al
  4174f0:	and    eax,0x7569721f
  4174f5:	and    DWORD PTR ds:0xc786c90f,0x77baa878
  4174ff:	adc    al,0x56
  417501:	mov    eax,0xb4a20abb
  417506:	jne    0x417507
  417508:	out    dx,al
  417509:	pop    esp
  41750a:	int    0xf9
  41750c:	ret    
  41750d:	ret    0xba0a
  417510:	mov    bl,0xd9
  417512:	or     DWORD PTR [ecx-0x970d2af],0xffffffc9
  417519:	jmp    0x41757e
  41751b:	mov    ds:0x636c2eeb,eax
  417520:	mov    ecx,0xe330ca6d
  417525:	pop    es
  417526:	stos   BYTE PTR es:[edi],al
  417527:	mov    al,0xd1
  417529:	pop    ebp
  41752a:	jge    0x4174e5
  41752c:	fwait
  41752d:	xchg   ebx,eax
  41752e:	push   0xc9b95b87
  417533:	and    cl,ah
  417535:	ins    DWORD PTR es:[edi],dx
  417536:	or     al,0x88
  417538:	and    BYTE PTR [edx+0xd35dfb9],cl
  41753e:	cwde   
  41753f:	pushf  
  417540:	push   0x6fb9f7a0
  417545:	arpl   WORD PTR [ebx+0x63],bx
  417548:	idiv   esp
  41754a:	loop   0x4174cf
  41754c:	ja     0x417553
  41754e:	or     ecx,DWORD PTR [edi+edi*8+0x7d7697b3]
  417555:	rol    DWORD PTR [esi-0x35682bd0],0xc8
  41755c:	pop    esp
  41755d:	shl    DWORD PTR [edx],cl
  41755f:	jae    0x41754e
  417561:	(bad)  
  417563:	ret    0xf72e
  417566:	xchg   ebp,eax
  417567:	sub    BYTE PTR [ebx],al
  417569:	ret    
  41756a:	push   0x43c0bfe2
  41756f:	add    ebp,ebp
  417571:	or     eax,esp
  417573:	je     0x4175dc
  417575:	and    ebp,DWORD PTR [ebx+0x6a]
  417578:	pop    ss
  417579:	mov    eax,0xa5fd9083
  41757e:	jmp    0x1f633784
  417583:	rol    ecx,0x4c
  417586:	jns    0x41754b
  417588:	cwde   
  417589:	clc    
  41758a:	push   edx
  41758b:	pop    ebp
  41758c:	mov    ebx,0x98b42a46
  417591:	sbb    BYTE PTR [edi+0x7e],bh
  417594:	xor    bh,dh
  417596:	mov    esi,0xe1d6a96d
  41759b:	repnz ffreep st(6)
  41759e:	xchg   edx,eax
  41759f:	and    al,cl
  4175a1:	lods   al,BYTE PTR ds:[esi]
  4175a2:	ret    0x2ab2
  4175a5:	sbb    BYTE PTR [ebx+ecx*8+0x6f],dl
  4175a9:	icebp  
  4175aa:	mov    ecx,0x693a8e4b
  4175af:	mov    ebp,0x7c427e45
  4175b4:	clc    
  4175b5:	fwait
  4175b6:	push   edx
  4175b7:	stc    
  4175b8:	inc    eax
  4175b9:	xchg   ecx,ebp
  4175bb:	(bad)  
  4175bd:	jg     0x4175fe
  4175bf:	inc    esp
  4175c0:	icebp  
  4175c1:	xor    DWORD PTR [esi+0x6e26247f],ebx
  4175c7:	int3   
  4175c8:	ins    DWORD PTR es:[edi],dx
  4175c9:	inc    esp
  4175ca:	(bad)  
  4175cb:	ja     0x417597
  4175cd:	in     al,0x6c
  4175cf:	daa    
  4175d0:	jo     0x4175dc
  4175d2:	sbb    al,0xda
  4175d4:	fstp   DWORD PTR [eax]
  4175d6:	and    bl,dh
  4175d8:	pop    edi
  4175d9:	ins    DWORD PTR es:[edi],dx
  4175da:	dec    edi
  4175db:	mov    esp,0xa1f02c28
  4175e0:	or     BYTE PTR [ebx+0x5c],ah
  4175e3:	cdq    
  4175e4:	push   cs
  4175e5:	cmc    
  4175e6:	sbb    ah,cl
  4175e8:	je     0x41761a
  4175ea:	fisubr WORD PTR ds:0xfcafc689
  4175f0:	mov    ebx,DWORD PTR [eax+0x7c]
  4175f3:	addr16 xchg edx,eax
  4175f5:	loopne 0x417659
  4175f7:	fcmovu st,st(4)
  4175f9:	push   esi
  4175fa:	jmp    0x2ec2ea02
  4175ff:	and    eax,0x9e086cc3
  417604:	int3   
  417605:	xchg   esp,eax
  417606:	call   0x95403aac
  41760b:	pop    ecx
  41760c:	pop    esi
  41760d:	outs   dx,DWORD PTR ds:[esi]
  41760e:	mov    ch,0x41
  417610:	sti    
  417611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417612:	add    dl,BYTE PTR [ecx]
  417614:	fisub  WORD PTR [esi]
  417616:	or     DWORD PTR [edx],ebp
  417618:	ror    esi,0xf8
  41761b:	or     al,dh
  41761d:	cwde   
  41761e:	pop    ecx
  41761f:	stc    
  417620:	jne    0x417668
  417622:	push   ss
  417623:	fld    QWORD PTR ds:0x724e2a0b
  417629:	dec    esi
  41762a:	fdivr  st(2),st
  41762c:	js     0x41767e
  41762e:	(bad)  
  41762f:	rcr    BYTE PTR [ebx],1
  417631:	test   al,0x6e
  417633:	jmp    0x417626
  417635:	mov    WORD PTR [esi-0x2aac5cdb],?
  41763b:	fcomi  st,st(2)
  41763d:	push   0xc8c57776
  417642:	lea    esi,[ebx]
  417644:	xchg   edi,ecx
  417646:	mov    bl,0x2c
  417648:	hlt    
  417649:	loope  0x417628
  41764b:	jne    0x4176c0
  41764d:	sub    cl,BYTE PTR [ecx+ebx*2]
  417650:	xor    DWORD PTR [esi],eax
  417652:	xchg   ebx,eax
  417653:	(bad)  
  417654:	mov    al,0xc0
  417656:	add    BYTE PTR [esi],bl
  417658:	cld    
  417659:	cmp    edx,DWORD PTR [eax-0x2949936d]
  41765f:	mov    WORD PTR [edi],fs
  417661:	push   ebx
  417662:	fisttp QWORD PTR [ebx]
  417664:	dec    ebx
  417665:	jge    0x417609
  417667:	cmp    bl,BYTE PTR [eax+0x4fbdfdc7]
  41766d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41766e:	leave  
  41766f:	out    dx,al
  417670:	sbb    eax,0xa478b68
  417675:	imul   DWORD PTR [esi]
  417677:	pop    ds
  417678:	cmp    bl,BYTE PTR [ecx+eiz*8-0x68f48648]
  41767f:	into   
  417680:	adc    al,0x4e
  417682:	add    bl,0x0
  417685:	popf   
  417686:	(bad)  
  417687:	into   
  417688:	out    0x4e,al
  41768a:	jnp    0x417632
  41768c:	mov    DWORD PTR [ebx],esi
  41768e:	or     BYTE PTR [eax],dl
  417690:	lds    edi,FWORD PTR [eax-0x1]
  417693:	push   0xeffa4b1f
  417698:	stos   DWORD PTR es:[edi],eax
  417699:	sub    esi,DWORD PTR [eax+0x3d]
  41769c:	mov    ebx,0x785d4de7
  4176a1:	and    DWORD PTR [eax],0x7f9add03
  4176a7:	xlat   BYTE PTR ds:[ebx]
  4176a8:	lods   eax,DWORD PTR ds:[esi]
  4176a9:	sbb    eax,0x4230070
  4176ae:	xchg   edi,eax
  4176af:	pop    ecx
  4176b0:	aas    
  4176b1:	push   edi
  4176b2:	or     DWORD PTR [edx-0x77],eax
  4176b5:	iret   
  4176b6:	je     0x4176bc
  4176b8:	pop    edi
  4176b9:	and    eax,0x2cce187c
  4176be:	mov    dh,dl
  4176c0:	rol    BYTE PTR [esi],cl
  4176c2:	fld    st(3)
  4176c4:	cmp    dh,BYTE PTR [edx-0x4b]
  4176c7:	(bad)  
  4176c8:	mov    ch,0xd1
  4176ca:	(bad)
  4176cd:	and    BYTE PTR [edx],al
  4176cf:	iret   
  4176d0:	jmp    0x4176db
  4176d2:	sar    DWORD PTR [eax],0xe2
  4176d5:	or     edi,ebx
  4176d7:	mov    cl,0x71
  4176d9:	pop    esp
  4176da:	inc    eax
  4176db:	loopne 0x41769e
  4176dd:	dec    esp
  4176de:	bound  ecx,QWORD PTR [ebp-0x7a]
  4176e1:	mov    bh,0x5e
  4176e3:	xchg   ebp,eax
  4176e4:	add    DWORD PTR [edi-0x7b],ecx
  4176e7:	push   edx
  4176e8:	(bad)  
  4176e9:	les    ebp,FWORD PTR [ecx+0x2f]
  4176ec:	jl     0x417678
  4176ee:	mov    cl,0xae
  4176f0:	into   
  4176f1:	imul   esp,ebx,0x31bb533
  4176f7:	push   es
  4176f8:	mov    edx,0xc978eaa9
  4176fd:	mov    ds:0x177ef319,al
  417702:	rcl    BYTE PTR [edi-0x64],1
  417705:	jl     0x41771b
  417707:	mov    al,0xf2
  417709:	fisub  DWORD PTR [ebx]
  41770b:	cdq    
  41770c:	pop    edi
  41770d:	ds cld 
  41770f:	gs pop ds
  417711:	fstp   QWORD PTR [eax+0x7c5fa074]
  417717:	ins    BYTE PTR es:[edi],dx
  417718:	scas   al,BYTE PTR es:[edi]
  417719:	push   ebp
  41771a:	xchg   ebp,eax
  41771b:	cdq    
  41771c:	add    BYTE PTR [eax+0x12],ah
  41771f:	mov    es:0x61522afe,al
  417725:	mov    al,0x85
  417727:	pop    ecx
  417728:	pop    es
  417729:	jns    0x417730
  41772b:	jno    0x4176ec
  41772d:	fdivr  DWORD PTR [eax+0x1db65a98]
  417733:	je     0x417722
  417735:	cld    
  417736:	mov    ah,0x5
  417738:	imul   ecx,DWORD PTR [edi],0x75
  41773b:	in     eax,dx
  41773c:	xor    cx,WORD PTR [ecx+0x41]
  417740:	push   ss
  417741:	inc    eax
  417742:	jmp    0x9c41:0x6fb03918
  417749:	stc    
  41774a:	lea    esi,[edi+0x6c]
  41774d:	and    ebp,ecx
  41774f:	jo     0x417770
  417751:	jmp    0xd6016524
  417756:	xchg   ebp,eax
  417757:	test   al,0x3c
  417759:	jno    0x417742
  41775b:	jmp    FWORD PTR [eax+edx*1+0x34]
  41775f:	fs rol dh,1
  417762:	jb     0x417739
  417764:	cmc    
  417765:	and    eax,DWORD PTR ds:0x2da8e61e
  41776b:	xchg   edi,eax
  41776c:	xor    DWORD PTR [esi],0x944dc5ff
  417772:	add    edx,DWORD PTR [edx]
  417774:	mov    esi,0xc497bf6b
  417779:	jmp    0x63e2:0xbb3a7e87
  417780:	stc    
  417781:	or     eax,0x4d7e5cf2
  417786:	sub    eax,0x77f06617
  41778b:	arpl   WORD PTR [ebx-0x18c05e43],dx
  417791:	icebp  
  417792:	js     0x417737
  417794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417795:	xor    al,0xb3
  417797:	sbb    ch,BYTE PTR [esi]
  417799:	mov    al,ds:0xdf7e546a
  41779e:	nop
  41779f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a0:	xchg   bh,bh
  4177a2:	mov    ah,0x41
  4177a4:	mov    eax,ds:0x9e8113d5
  4177a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177aa:	add    edi,DWORD PTR ds:0x61fe32f4
  4177b0:	mov    al,0xe2
  4177b2:	mov    dl,0xd
  4177b4:	clc    
  4177b5:	shr    BYTE PTR ds:0xc5bd4629,1
  4177bb:	jp     0x417825
  4177bd:	fldlg2 
  4177bf:	mov    ch,0xd0
  4177c1:	gs xchg edi,eax
  4177c3:	fisub  WORD PTR [eax-0x61e9a1e2]
  4177c9:	cli    
  4177ca:	loopne 0x417844
  4177cc:	adc    eax,0xd03d7648
  4177d1:	jp     0x41780f
  4177d3:	jecxz  0x417853
  4177d5:	cmp    al,0x44
  4177d7:	out    0xe4,al
  4177d9:	xor    al,0x28
  4177db:	aaa    
  4177dc:	in     eax,dx
  4177dd:	sub    ebx,ecx
  4177df:	xchg   esp,eax
  4177e0:	sbb    ebp,DWORD PTR [ecx]
  4177e2:	mov    al,ds:0x935ada27
  4177e7:	icebp  
  4177e8:	push   eax
  4177e9:	pop    esp
  4177ea:	ss loop 0x417797
  4177ed:	or     BYTE PTR [eax+ecx*4-0xa920535],ah
  4177f4:	ins    DWORD PTR es:[edi],dx
  4177f5:	loop   0x417821
  4177f7:	push   0xfffffff3
  4177f9:	fist   DWORD PTR [ebx-0x5035742e]
  4177ff:	sub    BYTE PTR ss:[edx-0x36],bl
  417803:	aaa    
  417804:	mov    dh,0x14
  417806:	retf   
  417807:	lea    ebx,es:[ebp+0x1d]
  41780b:	mov    ecx,edx
  41780d:	int    0x8d
  41780f:	push   edx
  417810:	pop    esi
  417811:	push   0xbb76a6bd
  417816:	cmp    al,0x66
  417818:	push   esi
  417819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41781a:	and    dh,bh
  41781c:	data16 fist DWORD PTR [edx+0x7ef65260]
  417823:	and    dh,BYTE PTR [esi]
  417825:	pop    esp
  417826:	and    eax,0xd72309ba
  41782b:	sbb    DWORD PTR [esp+ecx*8-0x21],esi
  41782f:	or     DWORD PTR [edx+0x1cd11998],esi
  417835:	idiv   BYTE PTR [esi+0x128f90bc]
  41783b:	sbb    DWORD PTR [ebp-0x6a],eax
  41783e:	mov    ah,0x96
  417840:	adc    BYTE PTR [bx+si],0xf4
  417844:	std    
  417845:	(bad)  
  417847:	fidivr WORD PTR [edi+0x2a]
  41784a:	in     al,dx
  41784b:	xchg   DWORD PTR [edi],ecx
  41784d:	mov    dh,0x30
  41784f:	sbb    BYTE PTR [edi-0x616478c2],cl
  417855:	inc    ebp
  417856:	das    
  417857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417858:	sub    eax,0x4db3d1ea
  41785d:	sar    BYTE PTR [eax],0xb8
  417860:	add    esi,DWORD PTR cs:[edi+0x54]
  417864:	dec    ecx
  417865:	mov    ds:0x2fa65d7a,eax
  41786a:	outs   dx,BYTE PTR ds:[esi]
  41786b:	call   0x3591875e
  417870:	retf   0x43c
  417873:	loope  0x41784f
  417875:	(bad)  
  417876:	in     eax,0xe6
  417878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417879:	cmp    bl,al
  41787b:	mov    bh,0xc1
  41787d:	bound  ebx,QWORD PTR [edi]
  41787f:	das    
  417880:	adc    DWORD PTR [eax+0x6f515b23],0xcfcdb8fa
  41788a:	lahf   
  41788b:	js     0x417872
  41788d:	mov    dh,0x5a
  41788f:	mov    ah,cl
  417891:	sub    DWORD PTR [edx+0x2c],eax
  417894:	xchg   edx,eax
  417895:	jns    0x417915
  417897:	scas   eax,DWORD PTR es:[edi]
  417898:	(bad)  [edi+0x72f05bcb]
  41789e:	adc    DWORD PTR [edi+edx*8],ecx
  4178a1:	jns    0x4178da
  4178a3:	mov    ebx,0xf79aab98
  4178a8:	fwait
  4178a9:	add    BYTE PTR [ebx-0x8],dh
  4178ac:	daa    
  4178ad:	cmc    
  4178ae:	and    DWORD PTR [ebx-0x376f19db],edx
  4178b4:	test   al,0xbb
  4178b6:	out    dx,eax
  4178b7:	jne    0x41787e
  4178b9:	ficom  WORD PTR [ebx-0x4c]
  4178bc:	adc    al,0xdd
  4178be:	pop    es
  4178bf:	push   esp
  4178c0:	xlat   BYTE PTR ds:[ebx]
  4178c1:	xlat   BYTE PTR ds:[ebx]
  4178c2:	fdiv   QWORD PTR [edi]
  4178c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c5:	sbb    al,0x47
  4178c7:	fwait
  4178c8:	mov    ecx,0x1057cbc1
  4178cd:	xchg   ebx,eax
  4178ce:	je     0x41788d
  4178d0:	adc    eax,0x6d057fd7
  4178d5:	mov    dh,0x17
  4178d7:	(bad)  
  4178d8:	push   eax
  4178d9:	mov    ah,0x8a
  4178db:	pop    edi
  4178dc:	jl     0x41788f
  4178de:	cmp    eax,0xccbf21e6
  4178e3:	sahf   
  4178e4:	pop    es
  4178e5:	ins    BYTE PTR es:[edi],dx
  4178e6:	test   DWORD PTR [edx-0x51cf8d0a],esi
  4178ec:	fld    DWORD PTR [ebx-0x64bd8bbb]
  4178f2:	fwait
  4178f3:	dec    ecx
  4178f4:	call   0xfc4a:0x85067533
  4178fb:	dec    edi
  4178fc:	jbe    0x417885
  4178fe:	xchg   esp,eax
  4178ff:	fisubr WORD PTR [ecx+0x5b]
  417902:	push   esi
  417903:	fmul   DWORD PTR [ebp+0xc]
  417906:	cdq    
  417907:	fucomi st,st(1)
  417909:	cmc    
  41790a:	inc    esp
  41790b:	mov    bh,0x5c
  41790d:	mov    ebp,ds
  41790f:	add    eax,0xc23b67c2
  417914:	xchg   esp,eax
  417915:	and    eax,0xc587c62f
  41791a:	lods   eax,DWORD PTR ds:[esi]
  41791b:	push   DWORD PTR [esi]
  41791d:	ret    
  41791e:	test   DWORD PTR [esi],ebp
  417920:	dec    eax
  417921:	addr16 enter 0x3133,0xf5
  417926:	or     DWORD PTR [eax+0x5b],ebp
  417929:	(bad)  
  41792a:	(bad)  
  41792b:	out    dx,al
  41792c:	rcr    BYTE PTR ds:0xfe609ab4,1
  417932:	test   DWORD PTR [edx],ebp
  417934:	in     eax,dx
  417935:	ins    BYTE PTR es:[edi],dx
  417936:	imul   esp,DWORD PTR [ecx],0xd92d8cbe
  41793c:	or     dl,bl
  41793e:	push   edx
  41793f:	out    dx,eax
  417940:	mov    ds:0x86de577e,eax
  417945:	loopne 0x417911
  417947:	push   esi
  417948:	xor    dh,BYTE PTR [ebx-0x508749c9]
  41794e:	scas   al,BYTE PTR es:[edi]
  41794f:	xchg   ebx,eax
  417950:	fnstcw WORD PTR [ecx+ecx*8-0x25396471]
  417957:	cpuid  
  417959:	xchg   DWORD PTR [eax+0x61],edi
  41795c:	or     al,BYTE PTR [ecx-0x2b]
  41795f:	or     DWORD PTR [esi+0x2a9ad64f],ebp
  417965:	in     eax,dx
  417966:	or     al,0x5d
  417968:	adc    al,0x83
  41796a:	fiadd  WORD PTR [ecx]
  41796c:	mov    BYTE PTR [esi-0x641aea33],0xa8
  417973:	sahf   
  417974:	das    
  417975:	(bad)  
  417976:	push   esi
  417977:	aas    
  417978:	and    ebx,DWORD PTR [edi+0x767d662f]
  41797e:	xor    al,0x1a
  417980:	add    edx,DWORD PTR [edx-0x23d2fa1c]
  417986:	dec    edx
  417987:	in     eax,0x14
  417989:	jmp    0x41799d
  41798b:	push   0xffffffd3
  41798d:	mov    bl,0xec
  41798f:	push   ss
  417990:	or     al,bl
  417992:	sub    ecx,DWORD PTR [ecx-0x27cceb29]
  417998:	sar    edi,1
  41799a:	cmc    
  41799b:	pop    es
  41799c:	enter  0x2c1f,0x90
  4179a0:	(bad)  
  4179a1:	xor    DWORD PTR [eax-0x58],ebx
  4179a4:	dec    ebp
  4179a5:	xchg   ebx,eax
  4179a6:	in     eax,dx
  4179a7:	mov    al,0xd8
  4179a9:	mov    WORD PTR [ecx+0xf],ds
  4179ac:	out    0x11,eax
  4179ae:	jge    0x417995
  4179b0:	div    DWORD PTR ds:0x5d420abb
  4179b6:	xchg   ebx,eax
  4179b7:	fisubr DWORD PTR [esi]
  4179b9:	popa   
  4179ba:	rcr    DWORD PTR [esi-0x5a36eab9],0x37
  4179c1:	dec    ebp
  4179c2:	(bad)  
  4179c4:	push   cs
  4179c5:	push   ebp
  4179c6:	xor    ebp,DWORD PTR [esi]
  4179c8:	sbb    BYTE PTR [eax+ebp*2-0x5de1ba5e],ch
  4179cf:	repz int 0xf8
  4179d2:	mov    dl,0x1c
  4179d4:	dec    ebp
  4179d5:	int    0x6c
  4179d7:	xchg   esp,eax
  4179d8:	sahf   
  4179d9:	mov    edx,0x71181bb3
  4179de:	cmove  edx,DWORD PTR [esi-0x6b]
  4179e2:	popf   
  4179e3:	mov    ebx,fs
  4179e5:	xchg   DWORD PTR [edx],ecx
  4179e7:	inc    esi
  4179e8:	xlat   BYTE PTR ds:[ebx]
  4179e9:	popf   
  4179ea:	xchg   esi,esi
  4179ec:	add    al,0x9c
  4179ee:	cld    
  4179ef:	xchg   BYTE PTR [esp+edx*2],bh
  4179f2:	arpl   WORD PTR ds:[ecx+edi*1+0x25edb29c],bp
  4179fa:	cmp    BYTE PTR [ecx-0x59],0x8c
  4179fe:	std    
  4179ff:	dec    ebx
  417a00:	retf   
  417a01:	sbb    cl,BYTE PTR ds:0x7f911aba
  417a07:	push   0xea8d580b
  417a0c:	and    eax,0xcb956403
  417a11:	pop    edi
  417a12:	push   0x1
  417a14:	pop    ds
  417a15:	xor    edi,ebx
  417a17:	sbb    DWORD PTR [edi+edi*4-0x6e4fb3c8],ebp
  417a1e:	and    DWORD PTR [ebp+0x32],edi
  417a21:	dec    ebx
  417a22:	inc    ebx
  417a23:	inc    ecx
  417a24:	sub    esp,esp
  417a26:	in     al,0xdf
  417a28:	idiv   ebp
  417a2a:	jbe    0x417a23
  417a2c:	(bad)  
  417a2d:	sub    al,0x4e
  417a2f:	mov    ds:0xc5c19860,eax
  417a34:	in     eax,dx
  417a35:	cs aas 
  417a37:	push   ecx
  417a38:	add    bl,dl
  417a3a:	dec    ecx
  417a3b:	in     al,dx
  417a3c:	ss dec esi
  417a3e:	shl    al,cl
  417a40:	or     edx,DWORD PTR [ecx+0x1f]
  417a43:	or     al,0xa6
  417a45:	xor    edx,DWORD PTR ss:[eax-0x1546b8dc]
  417a4c:	dec    ebx
  417a4d:	and    eax,0x369879a1
  417a52:	mov    DWORD PTR [ebp-0x67],edi
  417a55:	jl     0x417a20
  417a57:	repz and cl,BYTE PTR [ecx+0x4cc3d4ec]
  417a5e:	lds    ecx,FWORD PTR [ebp+0x24]
  417a61:	daa    
  417a62:	pusha  
  417a63:	sbb    al,0xaf
  417a65:	mov    edx,0x97a6f62e
  417a6a:	scas   al,BYTE PTR es:[edi]
  417a6b:	int    0x99
  417a6d:	push   eax
  417a6e:	push   ebp
  417a6f:	(bad)  
  417a70:	push   ecx
  417a71:	out    0x7a,eax
  417a73:	jecxz  0x417a5d
  417a75:	pop    ebx
  417a76:	std    
  417a77:	call   0xeddbc11f
  417a7c:	mov    al,0xae
  417a7e:	and    eax,0x5c8e2395
  417a83:	retf   0x80a4
  417a86:	pop    DWORD PTR [ecx]
  417a88:	xor    al,0x77
  417a8a:	or     BYTE PTR [eax-0x11539550],0x9a
  417a91:	popf   
  417a92:	cmp    bh,BYTE PTR [eax-0x43]
  417a95:	and    esp,esi
  417a97:	addr16 mov dl,0x33
  417a9a:	add    dl,BYTE PTR [ebx+0x6e8f8f0f]
  417aa0:	(bad)  
  417aa1:	mov    ebp,0x5c3edddb
  417aa6:	mov    dh,0x62
  417aa8:	pop    esp
  417aa9:	data16 add dh,BYTE PTR [ebp-0x69]
  417aad:	xor    eax,0xe14902bf
  417ab2:	push   ebx
  417ab3:	fwait
  417ab4:	aam    0x7f
  417ab6:	js     0x417a67
  417ab8:	(bad)  
  417ab9:	imul   esp,DWORD PTR [esi-0x2f],0xffffffd7
  417abd:	out    0x6f,eax
  417abf:	les    ecx,FWORD PTR [edi]
  417ac1:	ficom  WORD PTR [esp+edx*1-0x59bc7014]
  417ac8:	cmp    al,0xd5
  417aca:	loop   0x417a82
  417acc:	les    ebx,FWORD PTR [esi-0x39]
  417acf:	in     al,dx
  417ad0:	in     eax,0x4c
  417ad2:	ins    DWORD PTR es:[edi],dx
  417ad3:	(bad)  
  417ad4:	fisttp WORD PTR [esi+edx*8-0x4fa8b158]
  417adb:	pop    ebx
  417adc:	push   ecx
  417add:	sub    BYTE PTR [edi],bh
  417adf:	add    BYTE PTR [ecx-0x37],dh
  417ae2:	sahf   
  417ae3:	cmp    DWORD PTR [edi+0x77],esp
  417ae6:	daa    
  417ae7:	and    DWORD PTR [ebx],esp
  417ae9:	ins    BYTE PTR es:[edi],dx
  417aea:	xchg   BYTE PTR [ebx+ecx*2+0x53da510],bl
  417af1:	pop    ss
  417af2:	xor    DWORD PTR [bx+si+0xf],edi
  417af6:	fsub   DWORD PTR [ecx]
  417af8:	lods   al,BYTE PTR ds:[esi]
  417af9:	xchg   esp,eax
  417afa:	sbb    al,0xf0
  417afc:	fcomi  st,st(6)
  417afe:	ja     0x417b0a
  417b00:	fcmove st,st(2)
  417b02:	xlat   BYTE PTR ds:[ebx]
  417b03:	pop    ecx
  417b04:	(bad)  [esi]
  417b06:	or     esp,edx
  417b08:	sub    al,0xac
  417b0a:	cld    
  417b0b:	inc    ebp
  417b0c:	hlt    
  417b0d:	fiadd  WORD PTR [ecx]
  417b0f:	(bad)  
  417b10:	fnstcw WORD PTR [esi+0x52]
  417b13:	int3   
  417b14:	clc    
  417b15:	in     al,0x19
  417b17:	add    ah,BYTE PTR [ebx+edx*8-0x71]
  417b1b:	into   
  417b1c:	rcl    DWORD PTR [ebx],1
  417b1e:	int    0x51
  417b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b21:	out    0x87,eax
  417b23:	rol    edi,1
  417b25:	xchg   BYTE PTR [ecx-0x19],bh
  417b28:	retf   0xdd69
  417b2b:	mov    eax,0x1948bfca
  417b30:	cmp    eax,0xaaf57f09
  417b35:	sub    al,0x13
  417b37:	inc    eax
  417b38:	push   edi
  417b39:	push   esp
  417b3a:	xor    al,0xf5
  417b3c:	psrlq  mm4,QWORD PTR [ebp+0x1344dc48]
  417b43:	mov    bh,0x44
  417b45:	imul   edi,DWORD PTR [edx],0xb6a44231
  417b4b:	mov    dl,0xbf
  417b4d:	test   DWORD PTR [ebp+edx*4-0x4f5d14a3],ecx
  417b54:	mov    ds,WORD PTR [eax]
  417b56:	stc    
  417b57:	mov    ebp,0x816b440b
  417b5c:	or     eax,DWORD PTR [edi+0x1757df96]
  417b62:	dec    edi
  417b63:	aam    0xe0
  417b65:	mov    edi,0xa3c0de0c
  417b6a:	dec    ebp
  417b6b:	push   0xf608445e
  417b70:	xor    dl,BYTE PTR [esi-0x3cbcf579]
  417b76:	add    dh,BYTE PTR [ebp-0x2b]
  417b79:	sub    DWORD PTR [ebp+0x44],edi
  417b7c:	cwde   
  417b7d:	int    0xe5
  417b7f:	aas    
  417b80:	cli    
  417b81:	push   edx
  417b82:	scas   eax,DWORD PTR es:[edi]
  417b83:	sub    bh,BYTE PTR [esi+0x2]
  417b86:	and    bh,BYTE PTR [esi+0x295c2015]
  417b8c:	sbb    BYTE PTR [edx+0x40f49964],0x9
  417b93:	loopne 0x417b9e
  417b95:	jns    0x417b6d
  417b97:	sub    cl,cl
  417b99:	mov    DWORD PTR [ecx+0x61e29d04],ebp
  417b9f:	xor    ebx,DWORD PTR [eax-0x1f]
  417ba2:	add    DWORD PTR [edx],eax
  417ba4:	clc    
  417ba5:	inc    ebx
  417ba6:	adc    DWORD PTR [esi+0x4ba83def],edx
  417bac:	leave  
  417bad:	inc    esi
  417bae:	mov    dl,0x30
  417bb0:	dec    edx
  417bb1:	nop    DWORD PTR [eax+0x62c7968c]
  417bb8:	mov    edi,0x47869b19
  417bbd:	mov    BYTE PTR [eax+0x4c342d71],bh
  417bc3:	add    al,0x54
  417bc5:	enter  0xf3ba,0x8d
  417bc9:	inc    esi
  417bca:	xchg   DWORD PTR [ebx-0x20],edi
  417bcd:	pop    esp
  417bce:	mul    DWORD PTR [ebx]
  417bd0:	push   esi
  417bd1:	xor    al,BYTE PTR [ebp+ebx*8+0x6514ea3f]
  417bd8:	stos   DWORD PTR es:[edi],eax
  417bd9:	dec    edx
  417bda:	xchg   BYTE PTR [esi-0x72],ch
  417bdd:	mov    WORD PTR ds:0x5b909acc,gs
  417be3:	jns    0x417bb7
  417be5:	aas    
  417be6:	pop    esi
  417be7:	xchg   ebp,eax
  417be8:	mov    eax,esp
  417bea:	not    BYTE PTR [esi+0x5e]
  417bed:	scas   eax,DWORD PTR es:[edi]
  417bee:	fmul   QWORD PTR [ebp-0x3c0c4caa]
  417bf4:	mov    BYTE PTR [edi],dl
  417bf6:	repz dec esi
  417bf8:	loope  0x417c70
  417bfa:	rcr    DWORD PTR [edi],0x62
  417bfd:	sub    eax,0x47db1541
  417c02:	popf   
  417c03:	into   
  417c04:	mov    edi,DWORD PTR [esi+esi*8]
  417c07:	jnp    0x417b8c
  417c09:	scas   al,BYTE PTR es:[edi]
  417c0a:	in     al,0xa2
  417c0c:	mov    WORD PTR [ebx],ds
  417c0e:	cmp    al,0x6c
  417c10:	jle    0x417c8a
  417c12:	dec    ebx
  417c13:	je     0x417c0d
  417c15:	cwde   
  417c16:	mov    edx,0xf71d425c
  417c1b:	sbb    al,0x65
  417c1d:	push   esi
  417c1e:	ftst   
  417c20:	shr    esi,1
  417c22:	jbe    0x417c5e
  417c24:	test   al,0x68
  417c26:	addr16 dec esp
  417c28:	test   BYTE PTR [ebx+0x11],dl
  417c2b:	aaa    
  417c2c:	gs inc ecx
  417c2e:	icebp  
  417c2f:	fistp  QWORD PTR [ecx+0x79702c34]
  417c35:	inc    edx
  417c36:	jmp    0x417bcd
  417c38:	repz aad 0x60
  417c3b:	loopne 0x417c89
  417c3d:	cmp    cl,BYTE PTR [eax+eax*8-0x69a4a178]
  417c44:	sub    BYTE PTR [esi-0x4b7fe4d2],0x83
  417c4b:	dec    BYTE PTR [edi]
  417c4d:	out    dx,eax
  417c4e:	xor    DWORD PTR ds:0xf03a8a6,esi
  417c54:	les    ebp,FWORD PTR [esi]
  417c56:	imul   esi,esi,0xffffff86
  417c59:	std    
  417c5a:	mov    ebx,0x5453df4b
  417c5f:	mov    edi,0x6857f1c4
  417c64:	dec    edi
  417c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c66:	pop    esi
  417c67:	xchg   DWORD PTR [eax+0x21],ebx
  417c6a:	jge    0x417c63
  417c6c:	dec    edi
  417c6d:	test   DWORD PTR [edx+eax*2],edx
  417c70:	pop    esi
  417c71:	mov    edi,0xe7c36408
  417c76:	test   DWORD PTR [eax-0x13],ecx
  417c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c7a:	xchg   ecx,eax
  417c7b:	mov    ds:0xd08fee8a,eax
  417c80:	mov    fs,WORD PTR [eax-0x40059e17]
  417c86:	sahf   
  417c87:	xor    al,0x59
  417c89:	xor    edi,DWORD PTR [eax+0x5261c5c]
  417c8f:	jo     0x417cf5
  417c91:	aam    0x3
  417c93:	je     0x417caf
  417c95:	addr16 inc edi
  417c97:	mov    ?,WORD PTR [edi+0x208a30c]
  417c9d:	push   0x5
  417c9f:	adc    BYTE PTR ds:[edi],bl
  417ca2:	data16 (bad) 
  417ca4:	pusha  
  417ca5:	push   edi
  417ca6:	sub    eax,0x8c00df1c
  417cab:	test   al,0x33
  417cad:	ins    DWORD PTR es:[edi],dx
  417cae:	test   eax,0xef022aa7
  417cb3:	out    0x1d,eax
  417cb5:	js     0x417c7c
  417cb7:	dec    edi
  417cb8:	jl     0x417d35
  417cba:	and    cl,ch
  417cbc:	(bad)  
  417cbd:	dec    BYTE PTR [edx+ecx*8+0x39f57dc3]
  417cc4:	jmp    0x1340:0x5d4b5d2e
  417ccb:	mov    eax,0x9ec2f4c5
  417cd0:	dec    esi
  417cd1:	data16 or al,0xb
  417cd4:	push   ecx
  417cd5:	scas   al,BYTE PTR es:[edi]
  417cd6:	sub    ebp,edi
  417cd8:	mov    ebx,0xcdf091f0
  417cdd:	iret   
  417cde:	and    BYTE PTR [ebp+0x3c6ec7e6],bl
  417ce4:	repz mov ebx,0xb29d967d
  417cea:	jb     0x417d51
  417cec:	pop    edx
  417ced:	out    0x72,al
  417cef:	adc    al,0x87
  417cf1:	cmp    eax,0xf3bfe7dd
  417cf6:	mov    ds:0xd9cd80c8,al
  417cfb:	loopne 0x417d19
  417cfd:	or     eax,0xfd736ba
  417d02:	in     eax,dx
  417d03:	fwait
  417d04:	scas   al,BYTE PTR es:[edi]
  417d05:	ror    BYTE PTR [esi],1
  417d07:	mov    edx,0xa0bf9e6a
  417d0c:	dec    ebx
  417d0d:	or     eax,0x9c546bd8
  417d12:	imul   edi,DWORD PTR [edi+0x55c3412],0x97fee7d
  417d1c:	push   ecx
  417d1d:	outs   dx,BYTE PTR ds:[esi]
  417d1e:	rcl    BYTE PTR [ebx-0x21],1
  417d21:	(bad)
  417d24:	sbb    al,0xaa
  417d26:	adc    ebp,eax
  417d28:	test   BYTE PTR [eax-0x80],bl
  417d2b:	int    0xbb
  417d2d:	inc    edi
  417d2e:	(bad)  
  417d2f:	add    DWORD PTR [ecx],0x53
  417d32:	sbb    eax,0xb625b0bb
  417d37:	jne    0x417cbd
  417d39:	mov    al,ds:0x3b8fef9a
  417d3e:	bound  edi,QWORD PTR [edi+0x52b89fec]
  417d44:	lods   eax,DWORD PTR ds:[esi]
  417d45:	xchg   dl,ah
  417d47:	inc    edx
  417d48:	mov    al,0x1e
  417d4a:	loope  0x417d84
  417d4c:	pop    ss
  417d4d:	jnp    0x417dc0
  417d4f:	jno    0x417d35
  417d51:	or     dl,BYTE PTR [ebx+0x71]
  417d54:	push   ebp
  417d55:	repnz add ebx,eax
  417d58:	inc    ecx
  417d59:	cmp    DWORD PTR [edx-0x67],edx
  417d5c:	push   ss
  417d5d:	sub    DWORD PTR [ecx+0x1afe3132],esi
  417d63:	adc    al,0x9e
  417d65:	jae    0x417dbb
  417d67:	imul   esp,DWORD PTR [esp+edx*1],0x60
  417d6b:	xor    BYTE PTR [ebx-0x1f],ah
  417d6e:	sbb    edx,DWORD PTR [ecx+0x13]
  417d71:	retf   
  417d72:	cmp    al,0xca
  417d74:	adc    BYTE PTR [ebx+0x53f13a8f],dl
  417d7a:	dec    eax
  417d7b:	test   DWORD PTR ds:0x2f2753b1,0xcb7e0db4
  417d85:	les    ecx,FWORD PTR [ebp+0x6cdd0d44]
  417d8b:	jne    0x417d85
  417d8d:	dec    ebx
  417d8e:	and    DWORD PTR ds:0xd647f66a,edi
  417d94:	imul   edx,DWORD PTR [ebp+0x40],0xffffffd1
  417d98:	or     al,0x7c
  417d9a:	mov    dl,0x83
  417d9c:	pop    esp
  417d9d:	cmp    al,0xbb
  417d9f:	and    eax,0xd9593186
  417da4:	or     dl,BYTE PTR [eax]
  417da6:	sbb    DWORD PTR [ecx+0x7a],0xffffff8f
  417daa:	fiadd  WORD PTR [esi-0x2e]
  417dad:	pop    esp
  417dae:	dec    edi
  417daf:	jecxz  0x417dd5
  417db1:	mov    eax,ds:0xb7300266
  417db6:	in     eax,dx
  417db7:	mov    esp,0xce986535
  417dbc:	scas   al,BYTE PTR es:[edi]
  417dbd:	and    edi,edi
  417dbf:	leave  
  417dc0:	adc    bl,BYTE PTR [esi+edi*1]
  417dc3:	loop   0x417dfe
  417dc5:	jnp    0x417d52
  417dc7:	in     al,0x7b
  417dc9:	mov    al,BYTE PTR [ebx-0x75]
  417dcc:	out    0x86,eax
  417dce:	popa   
  417dcf:	and    ecx,DWORD PTR [ebp-0x12]
  417dd2:	xchg   edx,eax
  417dd3:	mov    ds:0xd1c3a71a,eax
  417dd8:	sbb    eax,0x24a61ac2
  417ddd:	pop    edx
  417dde:	loopne 0x417de4
  417de0:	out    0x19,eax
  417de2:	pop    ss
  417de3:	(bad)  
  417de4:	aad    0x7
  417de6:	push   0xe1429cdd
  417deb:	in     eax,0x82
  417ded:	or     ch,BYTE PTR [edi-0x6e]
  417df0:	and    ah,bl
  417df2:	mov    ch,0x52
  417df4:	pop    ds
  417df5:	je     0x417e20
  417df7:	sub    eax,0x3116b562
  417dfc:	inc    ecx
  417dfd:	mul    BYTE PTR [ebx+0x4d]
  417e00:	pop    ds
  417e01:	adc    al,0xf9
  417e03:	sar    BYTE PTR [ecx],1
  417e05:	dec    ebp
  417e06:	retf   
  417e07:	inc    edi
  417e08:	out    0xf7,eax
  417e0a:	iret   
  417e0b:	rol    BYTE PTR [ebx],0xc2
  417e0e:	jne    0x417db1
  417e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e11:	mov    edi,DWORD PTR [eax-0x643318a0]
  417e17:	(bad)  
  417e18:	fld    DWORD PTR [esp+edi*2-0x4fa6114c]
  417e1f:	jp     0x417e52
  417e21:	push   edx
  417e22:	jne    0x417e66
  417e24:	sbb    al,ch
  417e26:	push   0xd4c8eaa2
  417e2b:	adc    eax,0x6ed6edda
  417e30:	pop    ss
  417e31:	outs   dx,DWORD PTR ds:[esi]
  417e32:	push   edx
  417e33:	repz jne 0x417def
  417e36:	add    ecx,ecx
  417e38:	repz sbb al,0xd6
  417e3b:	xchg   ecx,eax
  417e3c:	sub    eax,0xdbaf41e3
  417e41:	ret    
  417e42:	and    BYTE PTR [edx],dl
  417e44:	(bad)  
  417e45:	jnp    0x417e36
  417e47:	add    dh,BYTE PTR [edi-0x7de04740]
  417e4d:	cli    
  417e4e:	(bad)  [ebx]
  417e50:	repz cmp eax,edx
  417e53:	mov    eax,0xb4bc81de
  417e58:	jl     0x417e7c
  417e5a:	pop    DWORD PTR [ebx+0x43b1bccd]
  417e60:	(bad)  
  417e61:	in     al,dx
  417e62:	push   esp
  417e63:	lods   al,BYTE PTR ds:[esi]
  417e64:	cld    
  417e65:	stos   DWORD PTR es:[edi],eax
  417e66:	mov    DWORD PTR [ecx-0x24],ebp
  417e69:	jns    0x417ea1
  417e6b:	int3   
  417e6c:	jg     0x417e9b
  417e6e:	test   eax,0x5dfd037a
  417e73:	mov    ebx,0x955ad5d5
  417e78:	pop    esi
  417e79:	ja     0x417e04
  417e7b:	xchg   ecx,eax
  417e7c:	inc    DWORD PTR [ebp-0x4d]
  417e7f:	mov    bl,0x51
  417e81:	fscale 
  417e84:	adc    al,0xd0
  417e86:	cli    
  417e87:	fwait
  417e88:	and    ebp,edi
  417e8a:	cmp    eax,eax
  417e8c:	in     eax,dx
  417e8d:	ror    DWORD PTR [eax-0x7187caa9],1
  417e93:	loop   0x417e54
  417e95:	call   0x24695ee2
  417e9a:	test   ah,ah
  417e9c:	cwde   
  417e9d:	cdq    
  417e9e:	mov    DWORD PTR [esp+esi*8-0x8],edi
  417ea2:	cmc    
  417ea3:	pop    esp
  417ea4:	std    
  417ea5:	jmp    0xa4d2:0x433c6be0
  417eac:	mov    esp,0xe3228ce9
  417eb1:	dec    ecx
  417eb2:	retf   0x6067
  417eb5:	pop    edi
  417eb6:	clc    
  417eb7:	mov    edi,0xcd80baf
  417ebc:	or     DWORD PTR [edi-0x28a0fd8a],ebp
  417ec2:	mov    esi,DWORD PTR [ecx+ebx*2+0xc]
  417ec6:	fs jmp 0x417e61
  417ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eca:	push   ebp
  417ecb:	sub    ch,BYTE PTR [esi-0x15ec7223]
  417ed1:	mov    fs,edx
  417ed3:	pushf  
  417ed4:	add    BYTE PTR [ecx],dl
  417ed6:	cdq    
  417ed7:	sahf   
  417ed8:	xor    al,0xd0
  417eda:	jns    0x417eb3
  417edc:	jle    0x417ecf
  417ede:	mov    BYTE PTR [edx],cl
  417ee0:	adc    al,0xbb
  417ee2:	jle    0x417f3d
  417ee4:	inc    ebx
  417ee5:	(bad)  
  417ee6:	adc    BYTE PTR [eax+0x3e9791ea],0x4a
  417eed:	inc    ecx
  417eee:	and    esp,DWORD PTR [ebp-0x3dede669]
  417ef4:	cs int 0x38
  417ef7:	push   esp
  417ef8:	pushf  
  417ef9:	jl     0x417f61
  417efb:	mov    ebx,0x7e797f33
  417f00:	(bad)  
  417f01:	aaa    
  417f02:	mov    ecx,0x6a5ee33f
  417f07:	and    dh,BYTE PTR [eax+0x77d7b05c]
  417f0d:	mov    ah,0x55
  417f0f:	xchg   al,dl
  417f11:	xor    eax,0xa84f7524
  417f16:	nop
  417f17:	xchg   DWORD PTR [edx],ecx
  417f19:	mov    cl,0x99
  417f1b:	mov    al,0x8b
  417f1d:	fisubr WORD PTR [edx-0x43f1905f]
  417f23:	mov    eax,0xa24fe6c0
  417f28:	or     BYTE PTR es:[esi-0x9ff24e6],bh
  417f2f:	out    0xe3,al
  417f31:	imul   esp,esp,0xfffffffc
  417f34:	pusha  
  417f35:	faddp  st(3),st
  417f37:	mov    eax,0xff18657c
  417f3c:	in     al,0x73
  417f3e:	add    eax,0xc40b9f12
  417f43:	aas    
  417f44:	stos   BYTE PTR es:[edi],al
  417f45:	pop    ss
  417f46:	dec    edx
  417f47:	jnp    0x417f5f
  417f49:	mov    BYTE PTR [eax],al
  417f4b:	cdq    
  417f4c:	nop
  417f4d:	mov    esi,0x8f91848c
  417f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f53:	retf   
  417f54:	int3   
  417f55:	stos   DWORD PTR es:[edi],eax
  417f56:	outs   dx,DWORD PTR ds:[esi]
  417f57:	xor    dl,BYTE PTR [ebx+0x15]
  417f5a:	fstp   QWORD PTR [ebx-0x6049c6e9]
  417f60:	fiadd  DWORD PTR [edx+0x12]
  417f63:	jb     0x417f48
  417f65:	out    0x5c,eax
  417f67:	js     0x417f0a
  417f69:	sbb    eax,0xf892e4f6
  417f6e:	jns    0x417efa
  417f70:	push   cs
  417f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f72:	jmp    0x76e6:0x6492552f
  417f79:	test   BYTE PTR [ebp-0x63],al
  417f7c:	outs   dx,DWORD PTR ds:[esi]
  417f7d:	data16 mov ch,0x50
  417f80:	cdq    
  417f81:	xchg   ah,al
  417f83:	mov    WORD PTR [ebx+0x74],ss
  417f86:	add    al,0x69
  417f88:	imul   eax,DWORD PTR [ebp+0x6e],0xffffffe7
  417f8c:	push   esp
  417f8d:	pushf  
  417f8e:	push   0x61
  417f90:	add    BYTE PTR [edi+0xd],al
  417f93:	enter  0x6be5,0x9d
  417f97:	cmp    ebp,esi
  417f99:	xor    eax,0xb72eca9d
  417f9e:	xchg   edx,eax
  417f9f:	sub    al,0x79
  417fa1:	cmp    eax,0xf666806b
  417fa6:	scas   al,BYTE PTR es:[edi]
  417fa7:	inc    ebp
  417fa8:	fnstcw WORD PTR [edi-0x23]
  417fab:	out    0x4b,al
  417fad:	sub    BYTE PTR [edx],dh
  417faf:	fistp  QWORD PTR [esi]
  417fb1:	dec    edi
  417fb2:	leave  
  417fb3:	sub    eax,0xa6c6f4d3
  417fb8:	xor    ch,ch
  417fba:	out    0x26,eax
  417fbc:	and    al,0x85
  417fbe:	jno    0x418024
  417fc0:	sub    DWORD PTR ss:[edi],edi
  417fc3:	(bad)  [edi+0x30b1f714]
  417fc9:	cmp    BYTE PTR [esi+0x47],0x9e
  417fcd:	adc    DWORD PTR [esi],esp
  417fcf:	dec    ebp
  417fd0:	pop    es
  417fd1:	add    DWORD PTR [edx-0x69],ecx
  417fd4:	test   ah,dh
  417fd6:	and    DWORD PTR [edi+0x41],0x73058cdb
  417fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fde:	test   DWORD PTR [edx+0x2d5b9d84],0xf8392ee4
  417fe8:	fadd   QWORD PTR [ebp-0x3ebe382c]
  417fee:	loope  0x41800c
  417ff0:	xchg   BYTE PTR [edx+0x42f51a56],dh
  417ff6:	(bad)  
  417ff7:	in     eax,dx
  417ff8:	bound  edi,QWORD PTR [esi+0x34dd2c92]
  417ffe:	xor    al,al
  418000:	jmp    0x904e:0xa2926a58
  418007:	dec    ebx
  418008:	clc    
  418009:	cmp    edx,DWORD PTR [edi]
  41800b:	or     eax,0xea068d3a
  418010:	(bad)  
  418011:	sbb    eax,DWORD PTR [edi-0x70ac380]
  418017:	fistp  WORD PTR [edx]
  418019:	mov    dh,0xc6
  41801b:	test   DWORD PTR [ecx+0x40],esi
  41801e:	lds    eax,FWORD PTR [edi-0x6a]
  418021:	mov    WORD PTR [eax],ds
  418023:	(bad)
  418026:	jns    0x417fac
  418028:	sbb    DWORD PTR [ecx-0x1cccb5b9],eax
  41802e:	push   ebx
  41802f:	into   
  418030:	sbb    al,0x13
  418032:	lods   al,BYTE PTR ds:[esi]
  418033:	inc    ax
  418035:	cmp    eax,0x15f1a90f
  41803a:	clc    
  41803b:	mov    eax,0x177f845d
  418040:	aaa    
  418041:	lods   al,BYTE PTR ds:[esi]
  418042:	push   esi
  418043:	push   0x26
  418045:	push   ds
  418046:	push   ss
  418047:	dec    ebx
  418048:	mov    dh,0xd4
  41804a:	xor    ecx,esp
  41804c:	push   esp
  41804d:	daa    
  41804e:	cwde   
  41804f:	pop    ss
  418050:	jbe    0x418002
  418052:	gs in  al,0x27
  418055:	stos   BYTE PTR es:[edi],al
  418056:	gs scas al,BYTE PTR es:[edi]
  418058:	cmp    al,0x1a
  41805a:	int    0x65
  41805c:	xor    BYTE PTR [ebx],dl
  41805e:	sbb    eax,0x5d0bf875
  418063:	ret    
  418064:	(bad)  
  418065:	popa   
  418066:	inc    eax
  418067:	and    DWORD PTR [ebx+0x48],esi
  41806a:	jbe    0x4180c4
  41806c:	(bad)  
  41806d:	clc    
  41806e:	scas   al,BYTE PTR es:[edi]
  41806f:	mov    edx,0xed7a7b27
  418074:	dec    esi
  418075:	and    bl,cl
  418077:	sbb    dh,dl
  418079:	stc    
  41807a:	lods   al,BYTE PTR ds:[esi]
  41807b:	stos   BYTE PTR es:[edi],al
  41807c:	test   DWORD PTR [esi],edx
  41807e:	ss sub ebp,DWORD PTR ss:[edx+0x4bae5059]
  418086:	inc    esi
  418087:	jbe    0x418028
  418089:	fisubr WORD PTR [ebx+eax*1+0x2d24fe8b]
  418090:	stos   BYTE PTR es:[edi],al
  418091:	scas   al,BYTE PTR es:[edi]
  418092:	push   0x2fb2f765
  418097:	inc    esi
  418098:	and    al,0xa1
  41809a:	add    eax,DWORD PTR [ebx]
  41809c:	cmc    
  41809d:	ficom  DWORD PTR [esi]
  41809f:	out    0xcf,al
  4180a1:	into   
  4180a2:	push   cs
  4180a3:	cmp    eax,0xd0e0a648
  4180a8:	jle    0x4180a9
  4180aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ab:	jnp    0x4180d9
  4180ad:	aam    0x43
  4180af:	retf   
  4180b0:	cs push cs
  4180b2:	fdiv   DWORD PTR [ebx]
  4180b4:	cld    
  4180b5:	dec    ebx
  4180b6:	mov    esi,0xdd1ae0ba
  4180bb:	fcmovu st,st(2)
  4180bd:	fcom   QWORD PTR [ecx+0x3810966f]
  4180c3:	dec    esi
  4180c4:	jmp    0xede9e219
  4180c9:	lods   al,BYTE PTR ds:[esi]
  4180ca:	ja     0x4180a9
  4180cc:	push   edi
  4180cd:	pop    ecx
  4180ce:	mov    ebp,0x2e7a97ee
  4180d3:	push   ss
  4180d4:	add    BYTE PTR [bp+di],0x1d
  4180d8:	bound  ebp,QWORD PTR [ebx-0xc]
  4180db:	sbb    DWORD PTR [ebx+0x25],ecx
  4180de:	loopne 0x418118
  4180e0:	leave  
  4180e1:	scas   eax,DWORD PTR es:[edi]
  4180e2:	pop    ecx
  4180e3:	xor    DWORD PTR [ecx-0x4d8ace08],edx
  4180e9:	fidivr DWORD PTR [esi+0x6c0b1264]
  4180ef:	sahf   
  4180f0:	and    DWORD PTR [eax],esi
  4180f2:	jmp    0x4180dd
  4180f4:	arpl   WORD PTR [edi+0xa],si
  4180f7:	loop   0x4180e0
  4180f9:	adc    DWORD PTR [edi+eax*1-0x1b8bc497],0xffffff8f
  418101:	push   edi
  418102:	scas   al,BYTE PTR es:[edi]
  418103:	and    ebp,DWORD PTR [ebx]
  418105:	pop    esp
  418106:	test   BYTE PTR [ecx+eax*8+0x31],dl
  41810a:	mov    ds:0x17d1b6cb,al
  41810f:	adc    BYTE PTR [ebx],cl
  418111:	mov    dl,0xfa
  418113:	div    dh
  418115:	push   0xffffff8e
  418117:	loope  0x418151
  418119:	xchg   esi,eax
  41811a:	mov    al,es:0xfb2b776d
  418120:	mov    ecx,0xf43abe52
  418125:	adc    eax,0xee06dc73
  41812a:	xchg   DWORD PTR ds:0x940f0c37,esi
  418130:	xor    edx,ecx
  418132:	test   DWORD PTR [edx+0x36c58323],esi
  418138:	into   
  418139:	out    dx,al
  41813a:	lock mov cl,0x3a
  41813d:	cmp    al,0xe3
  41813f:	(bad)  
  418140:	or     ch,ah
  418142:	pop    esi
  418143:	jmp    0x62e1:0x6b63eacc
  41814a:	dec    esi
  41814b:	idiv   BYTE PTR [edx-0x5fde354b]
  418151:	aaa    
  418152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418153:	ror    DWORD PTR [ecx-0x6228e30],cl
  418159:	repnz add BYTE PTR [ebp+0xc33b696],cl
  418160:	fistp  QWORD PTR ds:[eax]
  418163:	dec    bl
  418165:	lds    esi,FWORD PTR [edi-0x3e6268be]
  41816b:	sbb    cl,BYTE PTR [ebp-0x212121ff]
  418171:	(bad)  
  418172:	jno    0x418160
  418174:	inc    eax
  418175:	lock iret 
  418177:	paddq  mm0,QWORD PTR [edx]
  41817a:	mov    ecx,0x303df94
  41817f:	xor    eax,DWORD PTR [esi+0x11]
  418182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418183:	ja     0x41813e
  418185:	bound  ebx,QWORD PTR [edx]
  418187:	pop    esi
  418188:	scas   al,BYTE PTR es:[edi]
  418189:	shl    BYTE PTR [eax-0x62a2fd26],0x24
  418190:	cmp    BYTE PTR [edi-0x68d370a7],bh
  418196:	or     bh,BYTE PTR [esi-0x3a]
  418199:	pop    es
  41819a:	sahf   
  41819b:	popf   
  41819c:	fdivr  QWORD PTR [edi]
  41819e:	stc    
  41819f:	push   esp
  4181a0:	mov    ds:0x5632c88e,eax
  4181a5:	and    cl,bl
  4181a7:	cmp    al,0xf1
  4181a9:	mov    cl,0x30
  4181ab:	add    BYTE PTR [ecx],ch
  4181ad:	xchg   DWORD PTR [ebx],esi
  4181af:	aam    0x7e
  4181b1:	inc    esi
  4181b2:	push   0xd330590e
  4181b7:	imul   BYTE PTR [eax]
  4181b9:	or     BYTE PTR [edi-0x274690ec],bh
  4181bf:	mov    eax,ds:0xb37c99dc
  4181c4:	cmp    al,BYTE PTR [bp+si-0x635]
  4181c9:	out    0x31,al
  4181cb:	pop    edx
  4181cc:	mov    BYTE PTR [ebx],ah
  4181ce:	or     DWORD PTR [ecx],ebx
  4181d0:	hlt    
  4181d1:	push   ds
  4181d2:	cwde   
  4181d3:	ins    BYTE PTR es:[edi],dx
  4181d4:	jl     0x418236
  4181d6:	int3   
  4181d7:	lock pmuludq mm6,QWORD PTR ds:0xea84f2c4
  4181df:	sub    BYTE PTR [eax+ebx*1-0x4690c383],dh
  4181e6:	and    esp,esp
  4181e8:	out    0xac,eax
  4181ea:	xchg   edi,eax
  4181eb:	rol    ch,0xe5
  4181ee:	xchg   al,ah
  4181f0:	sub    DWORD PTR [edx+ecx*8],ebp
  4181f3:	jecxz  0x41818d
  4181f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f6:	adc    DWORD PTR [edx+0x5d5e5216],ebp
  4181fc:	mov    esi,0xc35d9df5
  418201:	(bad)  
  418202:	repz add DWORD PTR [esi],edi
  418205:	fs out 0x1c,eax
  418208:	jne    0x41821f
  41820a:	daa    
  41820b:	fiadd  DWORD PTR [esi]
  41820d:	repz imul edx,DWORD PTR [esi],0xc528a87
  418214:	mov    dl,0x9d
  418216:	pusha  
  418217:	sbb    ebx,DWORD PTR [ecx-0x332a371e]
  41821d:	fimul  DWORD PTR [ebp-0x64]
  418220:	daa    
  418221:	sysenter 
  418223:	addr16 jo 0x4182a1
  418226:	clc    
  418227:	daa    
  418228:	xor    BYTE PTR [edi-0x72],al
  41822b:	fbld   TBYTE PTR [edx*8+0x65d3b634]
  418232:	dec    eax
  418233:	jne    0x4181eb
  418235:	cmp    DWORD PTR [ecx+ecx*4],ecx
  418238:	jge    0x4181ff
  41823a:	sub    DWORD PTR [eax-0x32],ebx
  41823d:	mov    bl,0x5e
  41823f:	mov    ebp,0x410bb5eb
  418244:	rcr    BYTE PTR [ebx+0x204a29cb],0x54
  41824b:	mov    cl,0x3c
  41824d:	sbb    DWORD PTR [edi],0x543fc3d6
  418253:	add    bl,BYTE PTR ds:0x64979edf
  418259:	icebp  
  41825a:	add    al,0x5c
  41825c:	pop    edx
  41825d:	lods   eax,DWORD PTR ds:[esi]
  41825e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41825f:	pop    es
  418260:	mov    bl,0x24
  418262:	xor    al,0x8b
  418264:	jo     0x418261
  418266:	inc    edx
  418267:	sub    DWORD PTR [ecx-0x69],esi
  41826a:	add    BYTE PTR [ebx+0x75e0f4c2],al
  418270:	imul   edx,edx,0x2581bf34
  418276:	enter  0xdd5a,0xc0
  41827a:	inc    ebx
  41827b:	vmovdqa XMMWORD PTR [esi+0x3ed1fe0f],xmm2
  418283:	outs   dx,BYTE PTR ss:[esi]
  418285:	or     DWORD PTR [eax-0x75c7e440],ebp
  41828b:	sub    DWORD PTR [ecx],0x79
  41828e:	inc    ebx
  41828f:	aas    
  418290:	sub    eax,esp
  418292:	jmp    0x3fe3:0xbdae67c2
  418299:	mov    al,0x6d
  41829b:	adc    al,BYTE PTR [ebx-0x4b81d86b]
  4182a1:	jne    0x4182f2
  4182a3:	mov    esi,0x5434d363
  4182a8:	xor    eax,0xfac5b527
  4182ad:	js     0x4182ca
  4182af:	das    
  4182b0:	ins    BYTE PTR es:[edi],dx
  4182b1:	mov    al,0x52
  4182b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182b4:	add    DWORD PTR ds:0x1e017321,edx
  4182ba:	lods   al,BYTE PTR ds:[esi]
  4182bb:	sahf   
  4182bc:	pop    ebp
  4182bd:	out    0x16,eax
  4182bf:	shl    dl,cl
  4182c1:	dec    esp
  4182c2:	(bad)  
  4182c3:	mov    ecx,0xa057f38d
  4182c8:	jmp    0xed0:0xcb0ff199
  4182cf:	hlt    
  4182d0:	lahf   
  4182d1:	jnp    0x418298
  4182d3:	xor    esp,DWORD PTR [ebp+esi*2-0x389b562e]
  4182da:	std    
  4182db:	add    DWORD PTR [ebp+0xb876983],eax
  4182e1:	into   
  4182e2:	scas   al,BYTE PTR es:[edi]
  4182e3:	addr16 push edi
  4182e5:	adc    ah,bl
  4182e7:	sub    bh,BYTE PTR [ebx]
  4182e9:	xchg   ebp,eax
  4182ea:	sbb    al,0x19
  4182ec:	add    BYTE PTR [ecx+0x52],al
  4182ef:	push   esi
  4182f0:	jbe    0x41827a
  4182f2:	out    0x53,eax
  4182f4:	loop   0x4182a1
  4182f6:	or     al,0xa9
  4182f8:	fisub  DWORD PTR [eax-0x74]
  4182fb:	fld    st(2)
  4182fd:	adc    DWORD PTR [edx],0xffffffe8
  418300:	mov    ebp,0x6db9b66e
  418305:	cmp    bl,dh
  418307:	xchg   esp,eax
  418308:	adc    al,0x92
  41830a:	test   eax,0xaf7e6821
  41830f:	cwde   
  418310:	sbb    DWORD PTR [ebx-0x58516ce],eax
  418316:	xor    dh,BYTE PTR [edi+edi*4]
  418319:	sub    esp,DWORD PTR [edi]
  41831b:	in     eax,0xca
  41831d:	(bad)  
  41831e:	out    dx,al
  41831f:	mov    dh,0xf1
  418321:	jns    0x418347
  418323:	mov    ecx,DWORD PTR ds:0x38bc3412
  418329:	loope  0x418325
  41832b:	ja     0x418348
  41832d:	or     cl,BYTE PTR [ecx+0x33ee2a50]
  418333:	outs   dx,DWORD PTR ds:[esi]
  418334:	xor    edi,DWORD PTR [esi+0x402f47cb]
  41833a:	xor    ah,BYTE PTR [esi-0x3d]
  41833d:	aas    
  41833e:	dec    eax
  41833f:	(bad)  
  418340:	xchg   ecx,eax
  418341:	stos   BYTE PTR es:[edi],al
  418342:	dec    esi
  418343:	call   0x6c54:0xc701f5bd
  41834a:	sbb    al,0x8e
  41834c:	mov    edi,0xa02c84eb
  418351:	jb     0x418392
  418353:	push   0xffffff96
  418355:	repz and eax,0x630b50e0
  41835b:	dec    ebx
  41835c:	mov    WORD PTR [esi+ebx*4+0x339a4bf7],gs
  418363:	pop    ecx
  418364:	imul   ecx,DWORD PTR es:[edx-0x3599b2c1],0xfaee2d9a
  41836f:	add    edi,DWORD PTR [eax-0x8]
  418372:	sahf   
  418373:	jnp    0x418348
  418375:	inc    ebx
  418376:	pop    ebx
  418377:	aaa    
  418378:	enter  0xeb36,0x80
  41837c:	imul   DWORD PTR [ecx]
  41837e:	nop
  41837f:	push   DWORD PTR [ecx+0x6a]
  418382:	lds    ebx,FWORD PTR [edx+0x3e597301]
  418388:	sub    al,0xe4
  41838a:	daa    
  41838b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41838c:	in     al,dx
  41838d:	or     ah,BYTE PTR [ebx+0x191a285a]
  418393:	mov    edi,0xcdc3e7ea
  418398:	ins    BYTE PTR es:[edi],dx
  418399:	push   0x53bdb27d
  41839e:	xchg   esi,eax
  41839f:	icebp  
  4183a0:	push   si
  4183a2:	shl    ch,1
  4183a4:	loopne 0x418349
  4183a6:	fmul   DWORD PTR [eax+0x6951ea5e]
  4183ac:	and    al,0xf1
  4183ae:	pushf  
  4183af:	icebp  
  4183b0:	lds    edx,FWORD PTR [esi]
  4183b2:	xor    bh,bh
  4183b4:	and    ebp,esi
  4183b6:	ret    
  4183b7:	jbe    0x418378
  4183b9:	sbb    BYTE PTR [edx+ebp*4+0x440de500],0xf9
  4183c1:	(bad)  
  4183c2:	enter  0x7c72,0x8e
  4183c6:	jno    0x418358
  4183c8:	jns    0x418366
  4183ca:	sbb    DWORD PTR ds:0xfd73bb0d,esp
  4183d0:	pop    ebp
  4183d1:	pop    ecx
  4183d2:	imul   edx,DWORD PTR [esp+edi*2-0x2c1165d0],0xfffffffb
  4183da:	imul   ecx,DWORD PTR [ecx+0x6f43c379],0xffffffe4
  4183e1:	jo     0x418372
  4183e3:	inc    edx
  4183e4:	sub    ebx,0xfffffff5
  4183e7:	sbb    BYTE PTR [ebp+0x14d9a3a7],ah
  4183ed:	out    0xdc,al
  4183ef:	sbb    DWORD PTR [eax+eax*4-0x50],edx
  4183f3:	xchg   BYTE PTR [esi+0x7af4732e],dl
  4183f9:	in     al,dx
  4183fa:	cmp    DWORD PTR [ecx-0x204ed349],esi
  418400:	xchg   esi,eax
  418401:	push   edx
  418402:	cmc    
  418403:	push   0x14313377
  418408:	inc    esi
  418409:	int    0xb0
  41840b:	ja     0x418404
  41840d:	bound  esp,QWORD PTR [ecx-0x21]
  418410:	mov    ds:0xc05fbde5,al
  418415:	inc    edi
  418416:	cmp    eax,0x4a516963
  41841b:	mov    dl,0x15
  41841d:	sub    ch,dh
  41841f:	idiv   DWORD PTR [edx]
  418421:	jo     0x4183eb
  418423:	adc    DWORD PTR [eax-0x17],eax
  418426:	jmp    0xea8b6e02
  41842b:	fs pop edi
  41842d:	cdq    
  41842e:	pop    eax
  41842f:	jb     0x418428
  418431:	(bad)  
  418433:	mov    ss,WORD PTR [edx+0xe]
  418436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418437:	jne    0x4183e0
  418439:	or     eax,0xdcc5ff9d
  41843e:	add    eax,0x975c38e3
  418443:	add    al,0xab
  418445:	cwde   
  418446:	shl    DWORD PTR [esi-0x53],1
  418449:	xor    eax,0xa3f52fad
  41844e:	idiv   DWORD PTR [edi]
  418450:	inc    edx
  418451:	adc    al,0xc1
  418453:	out    dx,eax
  418454:	ds ret 0x548f
  418458:	in     eax,dx
  418459:	bound  ecx,QWORD PTR [ebp-0x126e9158]
  41845f:	repnz stos DWORD PTR es:[edi],eax
  418461:	xchg   ebx,eax
  418462:	jg     0x4183e9
  418464:	push   ebp
  418465:	dec    esi
  418466:	sub    eax,0x983bafa1
  41846b:	mov    bl,0x71
  41846d:	aas    
  41846e:	xchg   esp,eax
  41846f:	jle    0x418499
  418471:	adc    al,0x9a
  418473:	scas   al,BYTE PTR es:[edi]
  418474:	leave  
  418475:	fstp   DWORD PTR [edx]
  418477:	push   ebp
  418478:	inc    esi
  418479:	push   0x4a
  41847b:	cmp    ebx,DWORD PTR [esi]
  41847d:	aas    
  41847e:	inc    esi
  41847f:	gs add bl,bl
  418482:	jp     0x418502
  418484:	clc    
  418485:	xor    BYTE PTR [esi-0x6cf61464],ch
  41848b:	xchg   ebp,eax
  41848c:	ret    
  41848d:	push   ebx
  41848e:	jae    0x41847e
  418490:	add    ebp,DWORD PTR [eax]
  418492:	nop
  418493:	xlat   BYTE PTR ds:[ebx]
  418494:	out    0x14,eax
  418496:	scas   al,BYTE PTR es:[edi]
  418497:	mov    ebp,0xc1409ae
  41849c:	push   esi
  41849d:	(bad)  
  41849e:	retf   0xb3d8
  4184a1:	and    edx,DWORD PTR [esi+0x34cb1d24]
  4184a7:	mov    ebx,0x90e57d69
  4184ac:	add    ebp,DWORD PTR [bp+si-0x528d]
  4184b1:	cmc    
  4184b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b3:	mov    ?,eax
  4184b5:	xchg   edi,eax
  4184b6:	scas   al,BYTE PTR es:[edi]
  4184b7:	fucomp st(1)
  4184b9:	repnz push edx
  4184bb:	and    esp,DWORD PTR [esi-0x4e]
  4184be:	xor    ch,BYTE PTR [ebp-0x1c]
  4184c1:	adc    BYTE PTR [edx],dh
  4184c3:	mov    eax,0xc1666d45
  4184c8:	and    eax,0x3328e006
  4184cd:	stos   BYTE PTR es:[edi],al
  4184ce:	push   ebp
  4184cf:	jbe    0x4184d2
  4184d1:	push   esi
  4184d2:	cmp    al,0xd5
  4184d4:	ret    0xa15e
  4184d7:	ins    DWORD PTR es:[edi],dx
  4184d8:	(bad)  [eax+ebx*4-0x72]
  4184dc:	lds    esi,FWORD PTR [ebx]
  4184de:	sub    DWORD PTR [edx],ecx
  4184e0:	(bad)  
  4184e1:	ins    DWORD PTR es:[edi],dx
  4184e2:	or     BYTE PTR [edi+0x4b20f9c3],ah
  4184e8:	mov    ah,0x91
  4184ea:	push   cs
  4184eb:	in     al,0x3b
  4184ed:	xor    al,0x87
  4184ef:	add    ebp,esi
  4184f1:	push   esp
  4184f2:	(bad)  
  4184f3:	rol    ecx,cl
  4184f5:	mov    esp,0xff261791
  4184fa:	and    DWORD PTR [edi],esi
  4184fc:	push   ecx
  4184fd:	fptan  
  4184ff:	jle    0x41851e
  418501:	xchg   esi,eax
  418502:	jnp    0x4184d6
  418504:	gs jae 0x4184a2
  418507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418509:	or     DWORD PTR [ebx-0x1b],esi
  41850c:	ins    BYTE PTR es:[edi],dx
  41850d:	mov    ah,0x6e
  41850f:	mov    dl,0xc
  418511:	inc    ebx
  418512:	mov    esi,0xc13dcf4
  418517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418518:	ja     0x418560
  41851a:	or     DWORD PTR [edx+0x2173c1a8],esp
  418520:	xchg   esi,eax
  418521:	jns    0x418586
  418523:	jo     0x4184ef
  418525:	xchg   edi,eax
  418526:	sahf   
  418527:	je     0x41850f
  418529:	shl    BYTE PTR [ebx-0x3d93985d],1
  41852f:	lods   eax,DWORD PTR ds:[esi]
  418530:	aam    0xa8
  418532:	pop    eax
  418533:	pop    eax
  418534:	(bad)  
  418535:	out    0x86,al
  418537:	fbld   TBYTE PTR [ebx-0x8]
  41853a:	ret    0xbbbb
  41853d:	(bad)  
  41853e:	stc    
  41853f:	pop    edx
  418540:	mov    ecx,0xaaf72b1c
  418545:	sbb    BYTE PTR [ebp+0x7c118512],dh
  41854b:	fsubr  DWORD PTR [edi]
  41854d:	jecxz  0x41853d
  41854f:	(bad)  
  418551:	adc    ah,BYTE PTR [edi]
  418553:	and    eax,0x50df6c1c
  418558:	lods   eax,DWORD PTR ds:[esi]
  418559:	cli    
  41855a:	(bad)  
  41855b:	adc    ebp,DWORD PTR [eax-0x196a59e9]
  418561:	pop    ecx
  418562:	inc    esp
  418563:	fimul  WORD PTR [esi+0x695539ac]
  418569:	add    al,0x4b
  41856b:	cmp    BYTE PTR [edi],cl
  41856d:	(bad)  
  41856e:	push   ecx
  41856f:	adc    DWORD PTR [esi+0x56a42eda],esi
  418575:	push   cs
  418576:	mov    edi,DWORD PTR [edi-0x67c3271f]
  41857c:	add    al,0x28
  41857e:	rol    BYTE PTR ds:0x231c0d9a,cl
  418584:	jno    0x4185a9
  418586:	and    eax,0x2dd9c25b
  41858b:	mov    bh,0xf8
  41858d:	sbb    ah,BYTE PTR [esi+0x537f171e]
  418593:	jmp    0x418528
  418595:	sbb    al,0x67
  418597:	jmp    0xab75919a
  41859c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41859d:	pcmpgtw mm6,QWORD PTR [ebp+edx*2-0x5cc5aece]
  4185a5:	push   esp
  4185a6:	dec    eax
  4185a7:	popa   
  4185a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a9:	mov    ds:0x52ac0bd,eax
  4185ae:	pop    esi
  4185af:	les    eax,FWORD PTR ds:0x242ff9d2
  4185b5:	dec    eax
  4185b6:	or     DWORD PTR [edx],esp
  4185b8:	in     eax,dx
  4185b9:	mov    edx,0x5f1c5381
  4185be:	loop   0x41859a
  4185c0:	and    al,0x10
  4185c2:	mov    edi,0xeb1b481a
  4185c7:	mov    ebp,0xded9f6b4
  4185cc:	add    cl,ch
  4185ce:	mov    edx,eax
  4185d0:	adc    dh,0x3a
  4185d3:	pop    esp
  4185d4:	sbb    BYTE PTR [ebp-0x44],al
  4185d7:	and    eax,0x1b945710
  4185dc:	inc    edx
  4185dd:	mov    WORD PTR [ebx+0x2a],fs
  4185e0:	pop    eax
  4185e1:	jb     0x4185f9
  4185e3:	pmaxsw mm2,mm0
  4185e6:	dec    ebx
  4185e7:	xor    al,0x86
  4185e9:	fwait
  4185ea:	mov    eax,0xbfc02b9
  4185ef:	adc    al,0x6d
  4185f1:	mov    ecx,0x65bd46c2
  4185f6:	jmp    0xb772bc06
  4185fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185fc:	(bad)
  418600:	repz pop edx
  418602:	imul   edi,DWORD PTR [ecx+0x51c207],0x310c7142
  41860c:	adc    eax,0xad1cbffd
  418611:	pop    ss
  418612:	mov    dl,0x10
  418614:	jp     0x4185c3
  418616:	add    ah,BYTE PTR [ecx-0x6148c96a]
  41861c:	or     eax,0xe418ac72
  418621:	out    dx,eax
  418622:	js     0x418637
  418624:	inc    edx
  418625:	inc    ebp
  418626:	inc    esi
  418627:	fwait
  418628:	mov    al,ds:0xd6a356de
  41862d:	xchg   ecx,eax
  41862e:	add    eax,0x20dc278
  418633:	sbb    al,0xe1
  418635:	dec    esi
  418636:	mov    ds:0x11007da9,al
  41863b:	nop
  41863c:	adc    bh,dh
  41863e:	lods   eax,DWORD PTR ds:[esi]
  41863f:	fwait
  418640:	mov    esi,0xa0c02823
  418645:	sub    eax,0x2e4af2b
  41864a:	in     eax,dx
  41864b:	sti    
  41864c:	mov    ds:0x6ceb2fe1,al
  418651:	push   ss
  418652:	pop    eax
  418653:	mov    edx,0xfeb71849
  418658:	xchg   ebp,eax
  418659:	(bad)  
  41865a:	(bad)  
  41865c:	mov    ebx,0x8eba8b3c
  418661:	adc    al,0x83
  418663:	call   0x31240b53
  418668:	cmp    esi,DWORD PTR [edi+0x45]
  41866b:	pop    ebx
  41866c:	mov    ebp,0xd29bcefa
  418671:	test   eax,0x56485f83
  418676:	mov    esp,DWORD PTR [ebp+0x5c]
  418679:	fild   DWORD PTR [edi-0x539db35c]
  41867f:	call   0x971021c5
  418684:	inc    edi
  418685:	xchg   ebp,eax
  418686:	sub    BYTE PTR cs:[edx],cl
  418689:	mov    esi,0xe446777e
  41868e:	out    0xfd,al
  418690:	mov    ecx,0xbf1abea
  418695:	pop    ebx
  418696:	cli    
  418697:	aaa    
  418698:	pop    ebx
  418699:	or     BYTE PTR [edx],bh
  41869b:	dec    ebp
  41869c:	out    0xeb,al
  41869e:	and    al,0xee
  4186a0:	mov    bh,0xc6
  4186a2:	retf   0x1960
  4186a5:	dec    ebp
  4186a6:	xlat   BYTE PTR ds:[ebx]
  4186a7:	xchg   DWORD PTR cs:[ebx],ebp
  4186aa:	call   0xb9e995fe
  4186af:	and    DWORD PTR [ecx],eax
  4186b1:	fs daa 
  4186b3:	repnz fsubr QWORD PTR [eax]
  4186b6:	fimul  WORD PTR [eax-0x276e4c7d]
  4186bc:	inc    ebx
  4186bd:	cs sbb eax,0xad591448
  4186c3:	(bad)  
  4186c5:	cmp    eax,esi
  4186c7:	arpl   cx,sp
  4186c9:	lock das 
  4186cb:	fdivr  DWORD PTR ds:0x47c2b149
  4186d1:	mov    ebx,0x6d333551
  4186d6:	dec    esp
  4186d7:	add    ecx,ebx
  4186d9:	test   dh,cl
  4186db:	call   0xa765:0xa1ddbf70
  4186e2:	repz fild WORD PTR [eax-0x3]
  4186e6:	xlat   BYTE PTR ds:[ebx]
  4186e7:	sub    BYTE PTR ds:0x2df456f,bl
  4186ed:	sub    dl,cl
  4186ef:	call   0x4015:0x88ce17b1
  4186f6:	cmc    
  4186f7:	mov    cl,BYTE PTR [ecx+0x4881a341]
  4186fd:	repz sbb BYTE PTR [edi-0x56e3c020],cl
  418704:	cli    
  418705:	or     BYTE PTR [ebx-0x537cfca3],cl
  41870b:	daa    
  41870c:	sub    al,BYTE PTR [eax+0x7ba725fe]
  418712:	adc    BYTE PTR [edi+0x5b9e2f57],bh
  418718:	sbb    esp,DWORD PTR [eax]
  41871a:	dec    eax
  41871b:	inc    esp
  41871c:	xchg   ebp,eax
  41871d:	ja     0x418789
  41871f:	push   cs
  418720:	cmp    eax,0x7c
  418723:	imul   esi,edi,0x5d46b817
  418729:	or     eax,0xa6a3b9c6
  41872e:	pop    ds
  41872f:	mov    ebp,0xfcb5009a
  418734:	mov    eax,ds:0x2c9fbd95
  418739:	retf   0xaac8
  41873c:	add    al,0xee
  41873e:	sbb    al,0x70
  418740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418741:	add    DWORD PTR [ebp-0x7d621f40],ebp
  418747:	jle    0x418705
  418749:	mov    ds:0x653b4412,eax
  41874e:	loop   0x418785
  418750:	and    edx,edx
  418752:	cli    
  418753:	cdq    
  418754:	daa    
  418755:	nop
  418756:	test   BYTE PTR [ebp-0x46d36886],0x92
  41875d:	pusha  
  41875e:	jle    0x418732
  418760:	pop    es
  418761:	xlat   BYTE PTR ds:[ebx]
  418762:	ror    DWORD PTR [edx-0x72efcac5],0x2b
  418769:	scas   al,BYTE PTR es:[edi]
  41876a:	cli    
  41876b:	fcom   QWORD PTR [edi+eiz*4]
  41876e:	fadd   DWORD PTR [edi-0x3a7ba458]
  418774:	hlt    
  418775:	fadd   DWORD PTR [eax]
  418777:	inc    ecx
  418778:	popa   
  418779:	clc    
  41877a:	retf   0xaba6
  41877d:	adc    BYTE PTR [esi+0x46],0xc4
  418781:	aas    
  418782:	sbb    esi,DWORD PTR [ebx-0x7bb31365]
  418788:	xor    DWORD PTR ds:0xf456eae5,ecx
  41878e:	aas    
  41878f:	imul   edx,DWORD PTR [eax],0x7e
  418792:	or     BYTE PTR [eax+ecx*8-0x31],ah
  418796:	mov    esp,0xd6ea1d8a
  41879b:	loopne 0x41873a
  41879d:	inc    edx
  41879e:	cld    
  41879f:	jle    0x418773
  4187a1:	jno    0x41880b
  4187a3:	stos   BYTE PTR es:[edi],al
  4187a4:	nop
  4187a5:	mov    ch,BYTE PTR ds:0x7dfb3bbf
  4187ab:	fpatan 
  4187ad:	loop   0x4187cc
  4187af:	cmp    DWORD PTR [ecx],edi
  4187b1:	xchg   esp,eax
  4187b2:	ficom  DWORD PTR [eax+eax*8-0x7b5fcf82]
  4187b9:	out    0xfb,eax
  4187bb:	mov    eax,0x3e69ccfd
  4187c0:	jge    0x41876a
  4187c2:	imul   esi,DWORD PTR [edx-0x69],0x79
  4187c6:	and    cl,BYTE PTR [eax+eiz*4]
  4187c9:	loop   0x4187f3
  4187cb:	sub    eax,0x385de0d7
  4187d0:	xchg   esp,eax
  4187d1:	push   ebp
  4187d2:	das    
  4187d3:	in     eax,dx
  4187d4:	jo     0x4187dd
  4187d6:	arpl   dx,di
  4187d8:	pop    ss
  4187d9:	ja     0x418773
  4187db:	mov    ah,0x17
  4187dd:	inc    ecx
  4187de:	and    bl,al
  4187e0:	sbb    DWORD PTR [esi],ebx
  4187e2:	pusha  
  4187e3:	mov    cl,0x7b
  4187e5:	ss lahf 
  4187e7:	daa    
  4187e8:	dec    ebx
  4187e9:	inc    ecx
  4187ea:	enter  0x18f1,0xcb
  4187ee:	jmp    0xe9e8:0xd468e4e1
  4187f5:	aas    
  4187f6:	call   0xa07622da
  4187fb:	dec    edx
  4187fc:	cdq    
  4187fd:	arpl   cx,di
  4187ff:	fdivr  DWORD PTR [esi+0x7347572]
  418805:	xor    DWORD PTR [ecx-0x26b9cfd7],esi
  41880b:	jmp    0x4187aa
  41880d:	int    0x63
  41880f:	loope  0x418873
  418811:	js     0x418847
  418813:	pop    edi
  418814:	fimul  WORD PTR [eax+0x7]
  418817:	sub    eax,0x57c51dc5
  41881c:	repnz mov DWORD PTR [edi],ebp
  41881f:	scas   eax,DWORD PTR es:[edi]
  418820:	adc    DWORD PTR [esi+0x57],eax
  418823:	daa    
  418824:	fimul  WORD PTR [edx]
  418826:	imul   edi,DWORD PTR [esi-0x2],0xbcbbe658
  41882d:	and    eax,0x84993199
  418832:	cmp    al,bh
  418834:	push   edx
  418835:	adc    esp,DWORD PTR [ebp-0xc]
  418838:	call   0xf32fe2cc
  41883d:	arpl   WORD PTR [eax+esi*1],dx
  418840:	dec    edi
  418841:	inc    edx
  418842:	retf   0x2c14
  418845:	or     BYTE PTR [ecx+0x13],cl
  418848:	xchg   DWORD PTR [edx],ebp
  41884a:	shl    BYTE PTR [ebx+0x3455d7df],cl
  418850:	pop    edi
  418851:	pop    esi
  418852:	or     BYTE PTR [esi+eax*1+0x1081daa4],0xe9
  41885a:	jnp    0x418873
  41885c:	mov    ch,0xd6
  41885e:	int    0x3
  418860:	jbe    0x41881b
  418862:	mov    dh,0xd
  418864:	stc    
  418865:	xor    BYTE PTR [edx+0x6a],bh
  418868:	mov    BYTE PTR [ecx],bh
  41886a:	mov    al,cl
  41886c:	je     0x4187f4
  41886e:	out    0x76,eax
  418870:	inc    ebx
  418871:	add    esi,DWORD PTR [eax]
  418873:	loop   0x418886
  418875:	or     eax,0xbdedf30
  41887a:	js     0x41889b
  41887c:	imul   ecx,esi,0x75d191d8
  418882:	jb     0x418825
  418884:	scas   al,BYTE PTR es:[edi]
  418885:	add    cl,BYTE PTR [ebx]
  418887:	jne    0x418888
  418889:	rcl    DWORD PTR cs:0x4f4c8dcf,1
  418890:	hlt    
  418891:	psubusb mm6,mm7
  418894:	icebp  
  418895:	mov    cl,0x8e
  418897:	mov    ecx,0x5cdcaae2
  41889c:	jns    0x418845
  41889e:	cld    
  41889f:	ret    0x16c
  4188a2:	mov    dh,0x38
  4188a4:	xlat   BYTE PTR ds:[ebx]
  4188a5:	sti    
  4188a6:	adc    eax,ebp
  4188a8:	stos   BYTE PTR es:[edi],al
  4188a9:	sub    bl,BYTE PTR [esi-0x65]
  4188ac:	je     0x4188d2
  4188ae:	dec    edx
  4188af:	xchg   edx,eax
  4188b0:	call   0xe2ec:0xa26b1f99
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	cli    
  4188b9:	mov    cl,0x88
  4188bb:	mov    al,ds:0xa56c60d
  4188c0:	(bad)
  4188c3:	pop    es
  4188c4:	cwde   
  4188c5:	push   edi
  4188c6:	jmp    0x41892e
  4188c8:	dec    ebx
  4188c9:	inc    ebx
  4188ca:	std    
  4188cb:	(bad)  
  4188cc:	push   esi
  4188cd:	mov    edi,0xc663b5ff
  4188d2:	jmp    0x7c86:0xa6da98ef
  4188d9:	pop    es
  4188da:	fimul  WORD PTR [edx+0x54e9aaf6]
  4188e0:	bound  ebx,QWORD PTR [edx+0x42a49107]
  4188e6:	outs   dx,DWORD PTR ds:[esi]
  4188e7:	lds    ecx,FWORD PTR [esp+ebx*4-0x26d33b3d]
  4188ee:	sub    edx,0x1
  4188f1:	mov    cl,0x4d
  4188f3:	or     ebx,DWORD PTR [ecx]
  4188f5:	ja     0x4188ad
  4188f7:	jecxz  0x418915
  4188f9:	in     eax,dx
  4188fa:	test   al,0x1a
  4188fc:	dec    edx
  4188fd:	lea    ecx,[esi]
  4188ff:	sbb    al,0xef
  418901:	cmp    BYTE PTR [edx-0x2dfb182e],bl
  418907:	outs   dx,DWORD PTR ds:[esi]
  418908:	shl    BYTE PTR [ebx+0x5d],0xe3
  41890c:	shl    BYTE PTR [ebx+0x55],0x9f
  418910:	cwde   
  418911:	sbb    al,0xc7
  418913:	rcl    BYTE PTR [esi-0x6cb1ab83],1
  418919:	in     al,0xd0
  41891b:	add    eax,0xaa915a35
  418920:	sbb    al,BYTE PTR [ebp-0x42]
  418923:	cs es cmc 
  418926:	or     bl,BYTE PTR [edi+0x63c89118]
  41892c:	fdivp  st(6),st
  41892e:	cwde   
  41892f:	push   ds
  418930:	xchg   ecx,ebp
  418932:	sub    ebx,ebx
  418934:	push   ss
  418935:	push   esi
  418936:	iret   
  418937:	cli    
  418938:	sbb    BYTE PTR [ecx],ch
  41893a:	js     0x418990
  41893c:	xchg   BYTE PTR [esp+edx*2],bl
  41893f:	ins    BYTE PTR es:[edi],dx
  418940:	push   ebp
  418941:	sbb    BYTE PTR [edx-0x6ce36624],dl
  418947:	neg    BYTE PTR [ebx+0x70]
  41894a:	jb     0x418914
  41894c:	cs mov bh,0x6e
  41894f:	inc    esp
  418950:	fsubr  QWORD PTR [ecx+0x12]
  418953:	(bad)  
  418954:	cmp    ch,BYTE PTR [ecx]
  418956:	out    0xbf,eax
  418958:	loope  0x418998
  41895a:	add    bl,bh
  41895c:	pusha  
  41895d:	jg     0x41894a
  41895f:	mov    ds:0xb983e08,al
  418964:	inc    edi
  418965:	stos   BYTE PTR es:[edi],al
  418966:	mov    ch,BYTE PTR [esi]
  418968:	(bad)  
  418969:	and    bl,cl
  41896b:	push   eax
  41896c:	in     eax,dx
  41896d:	mov    eax,DWORD PTR [ebx]
  41896f:	(bad)  
  418970:	sbb    DWORD PTR [ebx-0x25704f2d],ecx
  418976:	sbb    al,ah
  418978:	sub    eax,0x2c2e7114
  41897d:	mov    eax,ds:0xd458cf9
  418982:	sbb    esi,esp
  418984:	sbb    dl,bh
  418986:	cmp    dl,BYTE PTR [edx-0x41]
  418989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41898a:	stos   DWORD PTR es:[edi],eax
  41898b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41898c:	shl    BYTE PTR ds:0x935ee6c7,1
  418992:	mov    ebx,0x381154d5
  418997:	lock pop ebx
  418999:	fs jne 0x4189d7
  41899c:	popa   
  41899d:	fucomip st,st(7)
  41899f:	scas   al,BYTE PTR es:[edi]
  4189a0:	push   ebp
  4189a1:	add    eax,0xa85b124b
  4189a6:	xlat   BYTE PTR ds:[ebx]
  4189a7:	dec    edx
  4189a8:	out    dx,al
  4189a9:	sub    ebx,DWORD PTR ds:0x72bb2b01
  4189af:	(bad)  
  4189b0:	in     al,dx
  4189b1:	mov    ch,0xbd
  4189b3:	mov    ch,0x5e
  4189b5:	mov    ebp,0xc7f5ca2e
  4189ba:	(bad)  
  4189bc:	jl     0x4189ee
  4189be:	adc    BYTE PTR [edi-0x41],0xb
  4189c2:	dec    edi
  4189c3:	test   eax,0xde56c616
  4189c8:	mov    edx,esi
  4189ca:	rol    BYTE PTR [ebx],cl
  4189cc:	test   al,0x65
  4189ce:	sbb    DWORD PTR [ecx+0x57d592b9],ebp
  4189d4:	fistp  WORD PTR [esp+edi*1]
  4189d7:	lea    ebp,[edx-0x26ead2f4]
  4189dd:	ja     0x41896d
  4189df:	in     al,dx
  4189e0:	mov    bl,0x5d
  4189e2:	jle    0x418a0c
  4189e4:	ja     0x418a4e
  4189e6:	lahf   
  4189e7:	push   ss
  4189e8:	inc    ebp
  4189e9:	les    ecx,FWORD PTR [eax+0x6c7d1baa]
  4189ef:	mov    al,0x10
  4189f1:	gs aas 
  4189f3:	out    0x40,al
  4189f5:	test   ebx,esi
  4189f7:	cdq    
  4189f8:	adc    eax,0xe261f330
  4189fd:	inc    edi
  4189fe:	mov    bh,0x77
  418a00:	ja     0x418a0b
  418a02:	sub    BYTE PTR [ebx],bl
  418a04:	push   edx
  418a05:	and    cl,BYTE PTR [ebx+0x56]
  418a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a09:	ss pop ebx
  418a0b:	mov    es:0xba567afc,al
  418a11:	xchg   DWORD PTR [edx-0x71],ecx
  418a14:	cli    
  418a15:	push   esp
  418a16:	arpl   WORD PTR [eax+0x0],bx
  418a19:	std    
  418a1a:	fld    DWORD PTR ds:0xc1003aa3
  418a20:	pop    eax
  418a21:	mov    es,WORD PTR fs:[eax+0x39]
  418a25:	out    0xeb,eax
  418a27:	jo     0x418a52
  418a29:	test   eax,0xe22c88f7
  418a2e:	jo     0x418a94
  418a30:	xchg   ebx,eax
  418a31:	and    DWORD PTR [eax],0xffffff80
  418a34:	adc    BYTE PTR [eax-0x68ef0dc4],ch
  418a3a:	fdiv   QWORD PTR [edx+edi*2]
  418a3d:	ds adc bl,dl
  418a40:	jmp    DWORD PTR [edx-0x6b]
  418a43:	cmp    ch,BYTE PTR [eax+0x6096fb4d]
  418a49:	test   BYTE PTR [edi],dl
  418a4b:	lahf   
  418a4c:	test   ebp,edi
  418a4e:	pop    esp
  418a50:	outs   dx,BYTE PTR ds:[esi]
  418a51:	ret    
  418a52:	xchg   ecx,eax
  418a53:	imul   ebx,esi,0x25
  418a56:	ret    0xb62a
  418a59:	nop
  418a5a:	loopne 0x418a5d
  418a5c:	into   
  418a5d:	rcr    DWORD PTR [ebp-0x140c92d2],0x2
  418a64:	shl    BYTE PTR [ebx],1
  418a66:	jo     0x418a33
  418a68:	xchg   esi,eax
  418a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a6a:	loop   0x418a37
  418a6c:	mov    edx,0xd12c0f6
  418a71:	push   ss
  418a72:	js     0x418a4f
  418a74:	or     al,0x20
  418a76:	push   es
  418a77:	and    eax,0x123c98db
  418a7c:	ret    
  418a7d:	ins    BYTE PTR es:[edi],dx
  418a7e:	popf   
  418a7f:	mov    ds:0x311dd9dc,al
  418a84:	retf   0x2176
  418a87:	cmp    BYTE PTR [eax+edx*8-0x80],dl
  418a8b:	inc    ebx
  418a8c:	outs   dx,BYTE PTR ds:[esi]
  418a8d:	fistp  QWORD PTR [ebp-0x24e9235e]
  418a93:	loope  0x418a29
  418a95:	jne    0x418a64
  418a97:	fwait
  418a98:	or     BYTE PTR [edi],0xa7
  418a9b:	push   ds
  418a9c:	inc    edx
  418a9d:	jg     0x418a8e
  418a9f:	jp     0x418ab8
  418aa1:	jecxz  0x418a57
  418aa3:	adc    ebx,0xca222def
  418aa9:	sbb    al,BYTE PTR [ebx+0x25]
  418aac:	pop    edx
  418aad:	repnz mov BYTE PTR [ebx-0x7d00ce91],dl
  418ab4:	sbb    al,0xbb
  418ab6:	mov    dh,0x6
  418ab8:	pop    ebx
  418ab9:	outs   dx,DWORD PTR ds:[esi]
  418aba:	lods   al,BYTE PTR ds:[esi]
  418abb:	sbb    edi,DWORD PTR [ecx+0x10]
  418abe:	js     0x418af4
  418ac0:	jnp    0x418a67
  418ac2:	fst    st(4)
  418ac4:	xor    esi,DWORD PTR [ebx-0x38b4e24a]
  418aca:	lock daa 
  418acc:	bound  eax,QWORD PTR [edx]
  418ace:	pusha  
  418acf:	xor    ebp,DWORD PTR [edi-0x5b]
  418ad2:	mov    al,ds:0xf4c27010
  418ad7:	lahf   
  418ad8:	ins    BYTE PTR es:[edi],dx
  418ad9:	sbb    al,bl
  418adb:	cmp    eax,0x84ade52e
  418ae0:	arpl   WORD PTR ds:0xdfb27698,si
  418ae6:	in     al,0x73
  418ae8:	in     al,0x49
  418aea:	js     0x418ac1
  418aec:	mov    BYTE PTR [esi],ah
  418aee:	and    al,0x9a
  418af0:	push   ds
  418af1:	push   0xffffffe6
  418af3:	mov    bl,0x37
  418af5:	jb     0x418b1f
  418af7:	out    0xa6,al
  418af9:	stos   DWORD PTR es:[edi],eax
  418afa:	adc    eax,0x8b67eec6
  418aff:	mov    bl,0xe5
  418b01:	outs   dx,BYTE PTR ds:[esi]
  418b02:	neg    al
  418b04:	dec    edx
  418b05:	leave  
  418b06:	rcr    DWORD PTR [ecx-0x57f96b6a],1
  418b0c:	les    esp,FWORD PTR [esi-0x1951b0a8]
  418b12:	(bad)  [eax+ebx*1]
  418b15:	ss adc ah,0xff
  418b19:	enter  0x88b2,0x7d
  418b1d:	cli    
  418b1e:	lahf   
  418b1f:	cmp    DWORD PTR [edi-0x59],ebp
  418b22:	aam    0xbe
  418b24:	mov    ds:0xb8dfc0ef,al
  418b29:	mov    ebp,0xf4c3f508
  418b2e:	push   esp
  418b2f:	push   es
  418b30:	gs pop ecx
  418b32:	push   ebp
  418b33:	imul   esp,DWORD PTR [edi-0x28],0xffffff91
  418b37:	sbb    al,BYTE PTR [ebx+ecx*2]
  418b3a:	xchg   edx,eax
  418b3b:	dec    ecx
  418b3c:	nop
  418b3d:	dec    esi
  418b3e:	jecxz  0x418b99
  418b40:	lods   al,BYTE PTR ds:[esi]
  418b41:	aas    
  418b42:	push   0x14ee29f4
  418b47:	(bad)  
  418b48:	test   eax,0xc5c1b8c1
  418b4d:	outs   dx,BYTE PTR ds:[esi]
  418b4e:	cmp    BYTE PTR [esi-0x7f],0xa2
  418b52:	iret   
  418b53:	call   0x6c0a:0x7c430855
  418b5a:	(bad)  
  418b5b:	pop    edi
  418b5c:	repnz dec edx
  418b5e:	or     DWORD PTR [eax-0x5e],ebp
  418b61:	mov    esp,0x511e847c
  418b66:	jl     0x418bcc
  418b68:	popa   
  418b69:	(bad)  
  418b6a:	cmp    BYTE PTR [esi-0x62],bh
  418b6d:	dec    ebx
  418b6e:	in     al,dx
  418b6f:	ret    0x4dca
  418b72:	call   0x56d1e6c
  418b77:	pop    ebx
  418b78:	jl     0x418bcc
  418b7a:	mov    ebx,0xc3595015
  418b7f:	ror    BYTE PTR [edx],0x8a
  418b82:	ss retf 0x824d
  418b86:	sbb    BYTE PTR [ebx+0x445434eb],cl
  418b8c:	data16 (bad) 
  418b8e:	mov    ebp,0x89a693fe
  418b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b94:	mov    dl,0xaa
  418b96:	lods   eax,DWORD PTR ds:[esi]
  418b97:	mov    edi,0x2ea8f00
  418b9c:	jmp    ebx
  418b9e:	jl     0x418bcb
  418ba0:	pop    ds
  418ba1:	test   al,0x86
  418ba3:	sbb    BYTE PTR [eax-0x3f],dh
  418ba6:	push   edx
  418ba7:	mov    al,0xed
  418ba9:	addr16 sub bl,cl
  418bac:	dec    esi
  418bad:	icebp  
  418bae:	mov    ebp,0xde8b451a
  418bb3:	aas    
  418bb4:	repnz add dh,dh
  418bb7:	cs out dx,eax
  418bb9:	mov    ebx,0x80ff204a
  418bbe:	(bad)  
  418bbf:	pop    esp
  418bc0:	push   eax
  418bc1:	outs   dx,BYTE PTR ds:[esi]
  418bc2:	adc    al,0x19
  418bc4:	mov    esp,0x1b9e7159
  418bc9:	test   BYTE PTR [edi-0x61],al
  418bcc:	mov    ch,0xc
  418bce:	jne    0x418bc0
  418bd0:	repz aad 0x16
  418bd3:	dec    ebp
  418bd4:	std    
  418bd5:	mov    ch,0x44
  418bd7:	adc    dl,0x70
  418bda:	sbb    dl,ah
  418bdc:	adc    ecx,esi
  418bde:	xchg   edx,eax
  418bdf:	xchg   edi,eax
  418be0:	xchg   ebp,eax
  418be1:	add    dl,bh
  418be3:	jnp    0x418c2d
  418be5:	push   ebx
  418be6:	call   0x96b2:0xdfda4595
  418bed:	or     bl,dh
  418bef:	out    dx,eax
  418bf0:	cmp    BYTE PTR [ebp+0x56514f00],bl
  418bf6:	lds    ebx,FWORD PTR [edx]
  418bf8:	jne    0x418c2a
  418bfa:	test   BYTE PTR [eax+ebp*1-0xd],0xc0
  418bff:	iret   
  418c00:	pop    es
  418c01:	sub    al,0x9b
  418c03:	inc    edi
  418c04:	pop    eax
  418c05:	(bad)  
  418c07:	xchg   edx,eax
  418c08:	out    dx,al
  418c09:	push   eax
  418c0a:	jo     0x418bef
  418c0c:	mov    es,WORD PTR [edi+0x76]
  418c0f:	dec    esi
  418c10:	adc    esi,ecx
  418c12:	sub    eax,0x7e32b1fa
  418c17:	jp     0x418bd5
  418c19:	sub    BYTE PTR ds:0xcac2aa88,ch
  418c1f:	pop    eax
  418c20:	mov    eax,ds:0x90f2be83
  418c25:	and    DWORD PTR [edx+0x6b],ebp
  418c28:	pop    ecx
  418c29:	popa   
  418c2a:	lahf   
  418c2b:	outs   dx,BYTE PTR ds:[esi]
  418c2c:	mov    al,ds:0xf07df174
  418c31:	cmp    edx,DWORD PTR [ebx-0x24]
  418c34:	lahf   
  418c35:	or     eax,0x4416922e
  418c3a:	cmp    al,bl
  418c3c:	(bad)  
  418c3d:	scas   al,BYTE PTR es:[edi]
  418c3e:	sub    BYTE PTR [eax+edx*8-0x66518234],0xd3
  418c46:	mov    ah,0xe1
  418c48:	iret   
  418c49:	sub    eax,0xb3e4bf07
  418c4e:	addr16 fs jno 0x418c4e
  418c52:	test   DWORD PTR [esi],esp
  418c54:	inc    ebx
  418c55:	imul   eax,DWORD PTR [edx+0x33],0xffffffc0
  418c59:	and    al,0xe
  418c5b:	or     DWORD PTR [ecx+0x2e349ee8],eax
  418c61:	sbb    al,0xa0
  418c63:	hlt    
  418c64:	lods   eax,DWORD PTR ds:[esi]
  418c65:	sub    al,0x70
  418c67:	les    edx,FWORD PTR [ebx-0x6a]
  418c6a:	mov    al,0x5
  418c6c:	push   eax
  418c6d:	push   esp
  418c6e:	jmp    0x14da1c08
  418c73:	mov    edi,0xd9c67977
  418c78:	add    DWORD PTR [esi],ebx
  418c7a:	out    dx,eax
  418c7b:	and    eax,0xe50ae950
  418c80:	lea    ebx,[edi+edi*2]
  418c83:	je     0x418cd8
  418c85:	gs push cs
  418c87:	int    0xcc
  418c89:	rcr    al,cl
  418c8b:	int    0x39
  418c8d:	inc    edx
  418c8e:	and    esp,DWORD PTR [eax+0x3ee547bb]
  418c94:	mov    bl,0x78
  418c96:	sbb    DWORD PTR [edx+0x1c],ebx
  418c99:	loop   0x418ca0
  418c9b:	and    ebp,esp
  418c9d:	ins    BYTE PTR es:[edi],dx
  418c9e:	es mov dh,0xcd
  418ca1:	and    bh,BYTE PTR [edx]
  418ca3:	ftst   
  418ca5:	lahf   
  418ca6:	push   eax
  418ca7:	loope  0x418c74
  418ca9:	add    BYTE PTR [esi+0x1f72de54],0x3e
  418cb0:	jbe    0x418d2f
  418cb2:	rol    DWORD PTR [eax-0x2b44189],cl
  418cb8:	jnp    0x418cdc
  418cba:	ja     0x418c87
  418cbc:	outs   dx,BYTE PTR ds:[esi]
  418cbd:	clc    
  418cbe:	loop   0x418c92
  418cc0:	pusha  
  418cc1:	xchg   edx,eax
  418cc2:	dec    ebp
  418cc3:	scas   al,BYTE PTR es:[edi]
  418cc4:	xchg   edi,eax
  418cc5:	pop    esp
  418cc6:	push   edx
  418cc7:	mov    ebp,0x60612359
  418ccc:	mov    dh,0x2a
  418cce:	ja     0x418c61
  418cd0:	push   0x4dcc7c95
  418cd5:	mov    esp,0xf4eebdfa
  418cda:	xor    esi,DWORD PTR [eax]
  418cdc:	outs   dx,BYTE PTR ds:[esi]
  418cdd:	push   ds
  418cde:	jo     0x418d15
  418ce0:	shr    DWORD PTR [esi-0x45e1dfc7],0x7a
  418ce7:	cmp    eax,0xad3e66b4
  418cec:	pop    edx
  418ced:	xor    al,BYTE PTR [edx]
  418cef:	aam    0x80
  418cf1:	mov    ecx,0x451aac63
  418cf6:	dec    ch
  418cf8:	pop    edx
  418cf9:	sti    
  418cfa:	bound  ebx,QWORD PTR [ebx-0x57aaba96]
  418d00:	jge    0x418d61
  418d02:	xchg   ecx,eax
  418d03:	dec    edi
  418d04:	stc    
  418d05:	xor    bh,bl
  418d07:	sub    BYTE PTR [ebx-0x5c403794],dh
  418d0d:	push   esi
  418d0e:	mov    ds:0xb83cd874,al
  418d13:	nop
  418d14:	shr    DWORD PTR [esi],0xb9
  418d17:	retf   0xc1dc
  418d1a:	rcl    DWORD PTR [edi],1
  418d1c:	cmc    
  418d1d:	xchg   edi,eax
  418d1e:	add    dh,ch
  418d20:	or     bl,cl
  418d22:	ins    DWORD PTR es:[edi],dx
  418d23:	cmp    al,BYTE PTR ds:0x4c4a2be
  418d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d2a:	shr    al,cl
  418d2c:	in     eax,dx
  418d2d:	pop    eax
  418d2e:	enter  0x60a1,0x2e
  418d32:	js     0x418d3a
  418d34:	loope  0x418cf9
  418d36:	pop    ecx
  418d37:	lea    ebp,[edx]
  418d39:	mov    ds:0x7a32d7b3,eax
  418d3e:	addr16 hlt 
  418d40:	jmp    0xb2fe:0xa0336a4e
  418d47:	xchg   edx,eax
  418d48:	mov    eax,ds:0xd6b8067d
  418d4d:	and    eax,0x51f3d237
  418d52:	or     ch,BYTE PTR [eax-0x45fd8d90]
  418d58:	iret   
  418d59:	inc    eax
  418d5a:	pop    ebp
  418d5b:	in     eax,0xc0
  418d5d:	ror    DWORD PTR [esi],0x7e
  418d60:	add    edi,DWORD PTR [ebx]
  418d62:	cwde   
  418d63:	(bad)  
  418d64:	push   eax
  418d65:	push   ecx
  418d66:	stos   BYTE PTR es:[edi],al
  418d67:	loope  0x418d19
  418d69:	nop
  418d6a:	xor    eax,DWORD PTR [esi]
  418d6c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418d6e:	ins    BYTE PTR es:[edi],dx
  418d6f:	pushf  
  418d70:	in     al,dx
  418d71:	add    al,0xfe
  418d73:	and    DWORD PTR [ecx+ebp*1-0x29],ebx
  418d77:	mov    ebp,0x971aed28
  418d7c:	sbb    esp,edi
  418d7e:	out    0xf6,al
  418d80:	cmp    eax,0x62e525a4
  418d85:	stos   DWORD PTR es:[edi],eax
  418d86:	adc    DWORD PTR [ebx-0x1d],0xf2ab4663
  418d8d:	xor    ah,bh
  418d8f:	outs   dx,DWORD PTR ds:[esi]
  418d90:	fistp  QWORD PTR [edi+esi*2-0xe]
  418d94:	inc    ebx
  418d95:	inc    ecx
  418d96:	jae    0x418e00
  418d98:	fst    DWORD PTR [ebx-0x78]
  418d9b:	sub    al,0x78
  418d9d:	push   cs
  418d9e:	or     al,0x50
  418da0:	xor    BYTE PTR [ecx+0x4a372bdb],ah
  418da6:	cld    
  418da7:	xchg   ecx,eax
  418da8:	mov    ah,0x13
  418daa:	dec    edi
  418dab:	inc    edx
  418dac:	popf   
  418dad:	outs   dx,DWORD PTR ds:[esi]
  418dae:	inc    ebx
  418daf:	cwde   
  418db0:	dec    ebp
  418db1:	call   0x151b806e
  418db6:	mov    dl,0x27
  418db8:	fs loope 0x418e01
  418dbb:	xor    ecx,ecx
  418dbd:	sub    esp,DWORD PTR [ebx+0x2cf99a51]
  418dc3:	shl    DWORD PTR [esi+0x9],0x9c
  418dc7:	pop    ss
  418dc8:	cmc    
  418dc9:	mov    bl,0x33
  418dcb:	xchg   esp,eax
  418dcc:	fxch   st(4)
  418dce:	mov    edx,0xff4748fd
  418dd3:	dec    ebx
  418dd4:	adc    BYTE PTR ds:0x9d626e64,bl
  418dda:	in     eax,0xb3
  418ddc:	sbb    ecx,DWORD PTR [ebx]
  418dde:	fidiv  WORD PTR [esi+0x12]
  418de1:	loopne 0x418d9e
  418de3:	xchg   ebx,eax
  418de4:	pop    ds
  418de5:	jge    0x418e37
  418de7:	std    
  418de8:	jecxz  0x418dce
  418dea:	cmc    
  418deb:	xchg   esp,eax
  418dec:	pop    esp
  418ded:	push   esi
  418dee:	jecxz  0x418d95
  418df0:	jmp    0x20a3:0xf9b315f4
  418df7:	mov    dl,0xe3
  418df9:	shr    ch,cl
  418dfb:	(bad)  
  418dfc:	ja     0x418e14
  418dfe:	xchg   esp,eax
  418dff:	aam    0xe1
  418e01:	(bad)  
  418e02:	std    
  418e03:	in     eax,dx
  418e04:	test   eax,0x189ea61b
  418e09:	pop    eax
  418e0a:	ins    BYTE PTR es:[edi],dx
  418e0b:	out    dx,al
  418e0c:	mov    ebp,0xb6c5ebbe
  418e11:	out    0xf9,eax
  418e13:	je     0x418df7
  418e15:	inc    ebx
  418e16:	(bad)  
  418e17:	cmp    BYTE PTR [esi],ch
  418e19:	outs   dx,BYTE PTR ds:[esi]
  418e1a:	mov    ?,WORD PTR fs:[ecx]
  418e1d:	mov    ebp,0x27eb4ff3
  418e22:	xchg   bl,bl
  418e24:	test   DWORD PTR [ebx-0x5c78caf9],ebx
  418e2a:	jmp    0xff586391
  418e2f:	mov    ecx,0x43ad9be5
  418e34:	push   ebx
  418e35:	aaa    
  418e36:	or     DWORD PTR [edx],edx
  418e38:	rol    ecx,cl
  418e3a:	lahf   
  418e3b:	mov    eax,ds:0xcfa5602d
  418e40:	push   esp
  418e41:	in     eax,0x2e
  418e43:	add    BYTE PTR [esi+0x9],bl
  418e46:	jecxz  0x418e77
  418e48:	adc    DWORD PTR [edi-0x38d8446b],esp
  418e4e:	pushf  
  418e4f:	adc    ah,BYTE PTR [eax]
  418e51:	push   ecx
  418e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e53:	cdq    
  418e54:	nop
  418e55:	ja     0x418e5f
  418e57:	add    BYTE PTR es:[edi+0x3e],bh
  418e5b:	xor    ebx,esp
  418e5d:	outs   dx,BYTE PTR ds:[esi]
  418e5e:	mov    ebp,0x1d1d0d
  418e63:	add    al,0x54
  418e65:	or     eax,0xfec8068a
  418e6a:	push   0x9
  418e6c:	aas    
  418e6d:	xchg   ebp,eax
  418e6e:	xchg   bl,ch
  418e70:	push   0x1c49c6b8
  418e75:	sub    DWORD PTR [ebx+0x39],esp
  418e78:	aas    
  418e79:	pop    ecx
  418e7a:	dec    edi
  418e7b:	inc    edx
  418e7c:	xor    eax,0xb981c2c0
  418e81:	js     0x418e40
  418e83:	push   ds
  418e84:	pop    esp
  418e85:	pop    esi
  418e86:	xchg   DWORD PTR [edx],edi
  418e88:	push   0x4c
  418e8a:	shr    DWORD PTR [esi-0x35],1
  418e8d:	mov    ah,0x62
  418e8f:	xchg   edx,eax
  418e90:	mov    al,0xc8
  418e92:	push   0xf00189e0
  418e97:	cld    
  418e98:	sub    dh,BYTE PTR ds:0xe987ae08
  418e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e9f:	dec    esp
  418ea0:	les    esp,FWORD PTR [edi]
  418ea2:	push   edi
  418ea3:	dec    ebx
  418ea4:	push   es
  418ea5:	fisub  WORD PTR [ebx]
  418ea7:	loopne 0x418e67
  418ea9:	jns    0x418e9a
  418eab:	xor    al,0x9b
  418ead:	sub    eax,0x6591f83e
  418eb2:	xchg   ecx,eax
  418eb3:	shr    ebx,cl
  418eb5:	fiadd  WORD PTR [ebp-0x4f6becdd]
  418ebb:	pop    edi
  418ebc:	sahf   
  418ebd:	or     bh,dl
  418ebf:	sti    
  418ec0:	fs out 0x5d,al
  418ec3:	jp     0x418e91
  418ec5:	ja     0x418f3f
  418ec7:	xor    al,0x6b
  418ec9:	add    dl,BYTE PTR [eax-0x72c6bd9c]
  418ecf:	enter  0x1970,0xff
  418ed3:	mov    edx,0x297331de
  418ed8:	nop
  418ed9:	push   esp
  418eda:	or     eax,0x3595a17a
  418edf:	mov    ah,0x95
  418ee1:	mov    ?,WORD PTR [esi+0x13bd1873]
  418ee7:	mov    eax,0x63f7b96b
  418eec:	xchg   ebp,eax
  418eed:	les    eax,FWORD PTR [edx-0x2b]
  418ef0:	jo     0x418ed9
  418ef2:	xor    BYTE PTR [ebx+0x7d],0xf7
  418ef6:	cmp    eax,0xbd5b8cf9
  418efb:	mov    ah,0xc4
  418efd:	push   ss
  418efe:	mov    al,0x2d
  418f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f01:	mov    eax,0x983b317d
  418f06:	dec    ebx
  418f07:	repz sbb bl,BYTE PTR [bp+0x5830]
  418f0d:	bound  esi,QWORD PTR [esp+ebp*4-0x1d]
  418f11:	(bad)  
  418f14:	sub    al,0x3e
  418f16:	(bad)  
  418f17:	mov    ah,0xcb
  418f19:	xchg   edi,eax
  418f1a:	hlt    
  418f1b:	mov    eax,ds:0x6d20e13a
  418f20:	jb     0x418f1c
  418f22:	les    ecx,FWORD PTR [edi-0x5da98bf5]
  418f28:	mov    DWORD PTR [esp+ebx*8+0x5b],ebp
  418f2c:	in     al,0x5c
  418f2e:	in     eax,0x60
  418f30:	icebp  
  418f31:	push   edx
  418f32:	test   DWORD PTR [edi],esi
  418f34:	add    ebp,DWORD PTR [edi-0x76871a9d]
  418f3a:	jmp    0x418f89
  418f3c:	sbb    edx,esi
  418f3e:	std    
  418f3f:	fmul   QWORD PTR [ecx+0xf]
  418f42:	pop    ss
  418f43:	xchg   edi,eax
  418f44:	mov    dl,0xc9
  418f46:	jb     0x418fa1
  418f48:	mov    cl,0x47
  418f4a:	sbb    al,0x24
  418f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f4d:	xor    BYTE PTR [ebp-0x4b],dh
  418f50:	js     0x418f43
  418f52:	ret    0x1204
  418f55:	xlat   BYTE PTR ds:[ebx]
  418f56:	push   ds
  418f57:	fsubr  st(4),st
  418f59:	mov    esp,0xe2c73d17
  418f5e:	push   eax
  418f5f:	test   al,0x2a
  418f61:	out    0xd4,al
  418f63:	mov    al,0x82
  418f65:	cli    
  418f66:	lock add DWORD PTR [edx+eiz*4-0x2267ce7d],ebp
  418f6e:	mov    cl,0xd3
  418f70:	add    ch,0xf4
  418f73:	pop    ecx
  418f74:	imul   ebp,DWORD PTR [edx],0x48
  418f77:	dec    ebp
  418f78:	test   cl,cl
  418f7a:	push   0x322c2c30
  418f7f:	jmp    0x418fdc
  418f81:	cmp    eax,0x1d3f4117
  418f86:	in     eax,dx
  418f87:	adc    esi,ebx
  418f89:	or     bl,dl
  418f8b:	inc    esp
  418f8c:	subps  xmm6,XMMWORD PTR [ebx+eax*2-0x11]
  418f91:	sbb    eax,0x25628cd9
  418f96:	mov    BYTE PTR [ebx+0x4b],cl
  418f99:	add    BYTE PTR [edi-0x199e876c],0xe3
  418fa0:	mov    DWORD PTR [eax-0x50c1b59d],edi
  418fa6:	sub    ebx,DWORD PTR [ecx-0x45]
  418fa9:	ds adc al,0x5
  418fac:	xchg   esp,eax
  418fad:	jne    0x41901b
  418faf:	in     al,0x2f
  418fb1:	push   edi
  418fb2:	adc    al,0x2
  418fb4:	fist   WORD PTR [edi-0x4eaad9d4]
  418fba:	cmp    BYTE PTR [esp+ecx*8-0x7a],dl
  418fbe:	mov    ?,WORD PTR [ebx+0x2]
  418fc1:	loop   0x418fb1
  418fc3:	xchg   BYTE PTR ds:[ebx-0x2a],ah
  418fc7:	push   0x1d
  418fc9:	dec    eax
  418fca:	jo     0x419037
  418fcc:	sub    eax,0xd33317c5
  418fd1:	aam    0xd
  418fd3:	or     BYTE PTR [ecx-0x5b],0x10
  418fd7:	je     0x419056
  418fd9:	imul   ebp,esi,0x200da79e
  418fdf:	ret    0xc7cf
  418fe2:	and    BYTE PTR [eax-0x26],bh
  418fe5:	xor    BYTE PTR [ebx-0x75d37c9],dl
  418feb:	push   0xffffffb7
  418fed:	mov    al,ds:0x4c97e165
  418ff2:	xlat   BYTE PTR ds:[ebx]
  418ff3:	cmp    DWORD PTR [eax],edi
  418ff5:	push   esi
  418ff6:	fcomp  QWORD PTR [eax-0x75cf224c]
  418ffc:	in     eax,0x35
  418ffe:	ror    cl,1
  419000:	xor    al,0x92
  419002:	mov    dh,0x66
  419004:	jnp    0x419073
  419006:	jne    0x41900c
  419008:	call   0xa99c847f
  41900d:	popa   
  41900e:	clc    
  41900f:	and    ecx,ebp
  419011:	or     eax,0x27140608
  419016:	or     al,0xb6
  419018:	ja     0x41904e
  41901a:	inc    esp
  41901b:	jecxz  0x419069
  41901d:	jmp    0x419029
  41901f:	xchg   esp,eax
  419020:	ret    0xd630
  419023:	sbb    DWORD PTR [eax+0x71],ebx
  419026:	or     al,0x14
  419028:	sub    DWORD PTR [eax-0x13d754f6],0xf778ffe9
  419032:	cmp    eax,edx
  419034:	or     DWORD PTR [esi-0x6fc96d7e],edi
  41903a:	fld    DWORD PTR [ecx]
  41903c:	pop    ss
  41903d:	pop    es
  41903e:	sub    DWORD PTR [edi+edx*8],edi
  419041:	add    edx,DWORD PTR ds:0x43c1ec85
  419047:	jbe    0x4190a3
  419049:	lock fidiv WORD PTR fs:[ebx-0x7b2832f7]
  419051:	and    ebx,DWORD PTR [eax-0x276d2f02]
  419057:	push   gs
  419059:	pop    edx
  41905a:	(bad)  
  41905b:	icebp  
  41905c:	or     ebx,0x66
  41905f:	stos   DWORD PTR es:[edi],eax
  419060:	inc    esi
  419061:	mov    ebx,DWORD PTR [ebx+0x21f9728b]
  419067:	xor    al,0xa5
  419069:	jbe    0x41903c
  41906b:	aam    0xc7
  41906d:	sub    eax,0xd54120ed
  419072:	jo     0x4190ad
  419074:	mov    ds:0xf36d76e9,eax
  419079:	(bad)  
  41907a:	mov    al,BYTE PTR [edx-0x76]
  41907d:	inc    esp
  41907e:	mov    dh,0x63
  419080:	mov    ah,0x54
  419082:	pop    edi
  419083:	(bad)  
  419084:	popa   
  419085:	cmp    al,0x99
  419087:	adc    al,0xc6
  419089:	ror    DWORD PTR [ecx],cl
  41908b:	pusha  
  41908c:	imul   esp,DWORD PTR [ebx+0x60],0x4e
  419090:	in     al,0x6e
  419092:	dec    ebx
  419093:	std    
  419094:	aas    
  419095:	mov    bh,0x8b
  419097:	jg     0x419067
  419099:	ins    BYTE PTR es:[edi],dx
  41909a:	dec    edx
  41909b:	mov    dh,0x57
  41909d:	adc    ecx,ebx
  41909f:	dec    edi
  4190a1:	add    DWORD PTR [esi-0xf38e3d7],ebp
  4190a7:	ins    DWORD PTR es:[edi],dx
  4190a8:	xchg   ebx,eax
  4190a9:	add    al,0x47
  4190ab:	call   0x1743:0xb609731d
  4190b2:	pop    edi
  4190b3:	mov    bh,0xac
  4190b5:	les    eax,FWORD PTR [edx]
  4190b7:	inc    esi
  4190b8:	and    al,0x49
  4190ba:	test   DWORD PTR [esp+esi*8+0x7b],ebp
  4190be:	jo     0x4190c4
  4190c0:	mov    dh,0x3a
  4190c2:	dec    eax
  4190c3:	jmp    0x25ae:0x4ff5ae09
  4190ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190cb:	fwait
  4190cc:	shl    DWORD PTR [ebx],1
  4190ce:	push   ss
  4190cf:	mov    WORD PTR [eax-0x2e],gs
  4190d2:	sub    DWORD PTR [esi-0x104db0bf],edi
  4190d8:	ret    
  4190d9:	adc    DWORD PTR [esi-0x381b3b8f],ebp
  4190df:	mov    esi,eax
  4190e1:	(bad)  
  4190e2:	stos   BYTE PTR es:[edi],al
  4190e3:	xor    al,0x3e
  4190e5:	(bad)  
  4190e6:	and    DWORD PTR [esi+0x5a],ebx
  4190e9:	mov    WORD PTR [edi-0x13],ss
  4190ec:	dec    edi
  4190ed:	repz pop ecx
  4190ef:	aam    0xfa
  4190f1:	jno    0x4190a1
  4190f3:	loop   0x419134
  4190f5:	jnp    0x419094
  4190f7:	mov    ecx,0x4c6bd582
  4190fc:	jb     0x41910e
  4190fe:	sub    DWORD PTR [edx],esp
  419100:	and    eax,0xdd747ada
  419105:	pop    edx
  419106:	call   0x5597:0x66b3eb3
  41910d:	pop    edi
  41910e:	fwait
  41910f:	je     0x4190f1
  419111:	ror    BYTE PTR [eax-0x4e],0xfd
  419115:	adc    bl,BYTE PTR [edx]
  419117:	mov    edx,0x3ff36ce
  41911c:	jp     0x419118
  41911e:	mov    al,ds:0x6356d3a5
  419123:	ds jns 0x4190bf
  419126:	mov    ebx,0xb171de04
  41912b:	test   BYTE PTR [ecx-0x10],dl
  41912e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912f:	xchg   ebx,eax
  419130:	(bad)  
  419131:	and    al,0x1a
  419133:	pop    esp
  419134:	sub    al,0xf
  419136:	loope  0x41916c
  419138:	xbegin 0xe4d26d3e
  41913e:	inc    ebx
  41913f:	push   es
  419140:	std    
  419141:	ficom  WORD PTR ds:0x8e26e3a0
  419147:	ja     0x419171
  419149:	cwde   
  41914a:	sti    
  41914b:	(bad)  
  41914c:	push   edi
  41914d:	rcl    eax,0x38
  419150:	in     eax,dx
  419151:	push   ecx
  419152:	outs   dx,BYTE PTR ds:[esi]
  419153:	cmp    eax,esi
  419155:	push   ds
  419156:	sbb    dh,0xf5
  419159:	inc    ecx
  41915a:	xor    BYTE PTR [esi-0x31],dh
  41915d:	ret    
  41915e:	cli    
  41915f:	cmc    
  419160:	pop    eax
  419161:	daa    
  419162:	push   eax
  419163:	adc    ch,bh
  419165:	mov    al,0x7f
  419167:	adc    eax,0x6faa46e
  41916c:	call   0x5f2a66e1
  419171:	dec    esp
  419172:	cdq    
  419173:	lahf   
  419174:	in     al,dx
  419175:	repz xchg cl,bl
  419178:	mov    ebx,0x5dec3ad8
  41917d:	push   esp
  41917e:	pop    edx
  41917f:	or     ah,BYTE PTR [ebx]
  419181:	daa    
  419182:	jg     0x419184
  419184:	push   esi
  419185:	test   al,0xd4
  419187:	stos   DWORD PTR es:[edi],eax
  419188:	push   edi
  419189:	outs   dx,DWORD PTR ds:[esi]
  41918a:	(bad)  
  41918c:	xor    eax,esi
  41918e:	test   eax,0xff957877
  419193:	sbb    DWORD PTR [edx-0x58d298c1],esi
  419199:	or     al,0x99
  41919b:	lds    esp,FWORD PTR [ecx-0x318e5849]
  4191a1:	push   edi
  4191a2:	or     al,0x4c
  4191a4:	sti    
  4191a5:	mov    BYTE PTR [edi],dl
  4191a7:	push   ss
  4191a8:	ja     0x419174
  4191aa:	adc    cl,BYTE PTR [esi+0x3f6c17f2]
  4191b0:	mov    esp,0x74eeb4f4
  4191b5:	out    dx,al
  4191b6:	cmp    BYTE PTR [ecx],bh
  4191b8:	inc    ebx
  4191b9:	mov    cl,0x51
  4191bb:	mov    ebp,ebp
  4191bd:	jno    0x41915f
  4191bf:	clc    
  4191c0:	(bad)  
  4191c1:	imul   ebx,DWORD PTR [edx-0x76],0xffffffb9
  4191c5:	mov    WORD PTR [edi-0x66ca7302],cs
  4191cb:	sti    
  4191cc:	nop
  4191cd:	mov    al,0xd2
  4191cf:	xchg   edi,eax
  4191d0:	js     0x4191fa
  4191d2:	mov    dl,0xf6
  4191d4:	imul   eax,DWORD PTR [eax+eax*1+0x700e7aa2],0xeb957aa2
  4191df:	xor    ebp,DWORD PTR [edi+0x17da3a3c]
  4191e5:	mov    ebp,0x4bcfd449
  4191ea:	test   DWORD PTR ss:[esi+eax*2+0x24],esi
  4191ef:	fwait
  4191f0:	or     eax,DWORD PTR es:[edi+0x18]
  4191f4:	pop    edi
  4191f5:	sar    BYTE PTR [edi+0x5e92fba5],cl
  4191fb:	jae    0x41920a
  4191fd:	shl    DWORD PTR [ebx+0x467feedf],0xed
  419204:	aas    
  419205:	lea    edi,[edi+0x41]
  419208:	(bad)  [edx]
  41920a:	sbb    ebp,eax
  41920c:	push   ss
  41920d:	cld    
  41920e:	cld    
  41920f:	test   DWORD PTR [edi-0x79e3a756],0x12206c81
  419219:	jmp    0x4191ec
  41921b:	pop    edx
  41921c:	sbb    al,0xc1
  41921e:	fstp   QWORD PTR [edi-0x1b]
  419221:	iret   
  419222:	and    BYTE PTR [ecx+0x545ec624],al
  419228:	and    ebx,eax
  41922a:	ins    BYTE PTR es:[edi],dx
  41922b:	in     al,dx
  41922c:	js     0x419211
  41922e:	frstpm(287 only) 
  419230:	fisubr DWORD PTR [ecx+edi*8+0x16873830]
  419237:	xor    esi,DWORD PTR [edi*8-0x10de8de8]
  41923e:	add    DWORD PTR ds:0x16d2406a,edx
  419244:	fstp   QWORD PTR [edi+0x101a917d]
  41924a:	cld    
  41924b:	mov    edx,0x372b7a24
  419250:	ja     0x419229
  419252:	xchg   ecx,eax
  419253:	add    eax,0x2b7054e9
  419258:	outs   dx,BYTE PTR ds:[esi]
  419259:	aaa    
  41925a:	retw   
  41925c:	bnd je 0x4192d0
  41925f:	inc    ecx
  419260:	pop    esp
  419261:	loopne 0x419291
  419263:	fidiv  DWORD PTR [esi+0x49c1a7c1]
  419269:	pusha  
  41926a:	dec    esp
  41926b:	mov    ds:0xf9e6aa16,eax
  419270:	ret    0xcee3
  419273:	add    DWORD PTR gs:[edx-0x80],esp
  419277:	add    bh,BYTE PTR [edi-0x39]
  41927a:	fs mov cl,0xa9
  41927d:	or     dh,BYTE PTR [esi+0x4b]
  419280:	popaw  
  419282:	and    BYTE PTR [ebx-0x30],ch
  419285:	jb     0x4192dd
  419287:	add    ebx,eax
  419289:	imul   edx,DWORD PTR [edi],0xfe564feb
  41928f:	or     DWORD PTR [esi],0x9954abe6
  419295:	and    edi,DWORD PTR [eax+0x45351380]
  41929b:	vpunpcklwd xmm3,xmm3,XMMWORD PTR es:0x8990bfe2
  4192a4:	mov    eax,DWORD PTR [ecx+0x4e]
  4192a7:	stc    
  4192a8:	pop    ss
  4192a9:	daa    
  4192aa:	xchg   esp,eax
  4192ab:	fimul  WORD PTR [edx+ebp*1]
  4192ae:	call   0x9dee:0x66feba80
  4192b5:	adc    esi,DWORD PTR [edx-0x16b86141]
  4192bb:	sbb    eax,0xb56f6026
  4192c0:	test   DWORD PTR [edi+0x2c7ae3b6],ebx
  4192c6:	mov    eax,cs:0x48cf8d7a
  4192cc:	rol    BYTE PTR [ebx+0x7e],1
  4192cf:	jae    0x41926b
  4192d1:	jno    0x41928f
  4192d3:	mov    BYTE PTR [eax-0x5c3ff4a6],al
  4192d9:	cs clc 
  4192db:	pop    ecx
  4192dc:	add    eax,DWORD PTR [ebp-0x20]
  4192df:	sbb    DWORD PTR [ecx],ebp
  4192e1:	shr    BYTE PTR [edi-0x4c],1
  4192e4:	rcl    ah,1
  4192e6:	sbb    DWORD PTR [ecx],0xffffffd7
  4192e9:	xchg   esp,eax
  4192ea:	adc    ebp,DWORD PTR [esi+0x15]
  4192ed:	add    al,BYTE PTR [ebp-0x601559bf]
  4192f3:	gs xchg ecx,eax
  4192f5:	mov    al,0xd3
  4192f7:	and    al,0x2d
  4192f9:	popa   
  4192fa:	dec    eax
  4192fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192fc:	dec    ecx
  4192fd:	fild   DWORD PTR [esi-0x70f4dba6]
  419303:	sbb    dl,BYTE PTR [edx]
  419305:	arpl   WORD PTR es:[esi+0x4f],di
  419309:	jl     0x4192a8
  41930b:	cmp    BYTE PTR [edx+0x14be0195],0xd4
  419312:	pop    esi
  419313:	(bad)  
  419314:	bsr    ebp,DWORD PTR [eax-0x166c94df]
  41931b:	bound  esp,QWORD PTR [ecx]
  41931d:	enter  0x697e,0xa4
  419321:	pushf  
  419322:	xchg   ebp,eax
  419323:	fcomp  QWORD PTR [ecx]
  419325:	pop    ds
  419326:	adc    DWORD PTR [edx+0x50],esp
  419329:	fistp  QWORD PTR [esi]
  41932b:	inc    esp
  41932c:	sbb    bl,BYTE PTR [ecx+0x2]
  41932f:	sub    bh,bl
  419331:	repz sbb eax,0x2600011c
  419337:	nop
  419338:	mov    al,0x75
  41933a:	mov    ch,0x92
  41933c:	pusha  
  41933d:	sub    BYTE PTR [eax],dh
  41933f:	adc    ebp,esi
  419341:	inc    ebx
  419342:	outs   dx,BYTE PTR ds:[esi]
  419343:	ret    0xd224
  419346:	arpl   WORD PTR [ecx+0x70cc1ced],dx
  41934c:	inc    ebx
  41934d:	mov    ebp,0xde4a27da
  419352:	mov    bh,0x51
  419354:	mov    DWORD PTR [edi-0x54179946],0xb2b21d07
  41935e:	leave  
  41935f:	shl    BYTE PTR [eax+0x761e7772],0x9
  419366:	out    0xf0,al
  419368:	(bad)  
  419369:	mov    bl,0x51
  41936b:	call   0xed62:0xca82628f
  419372:	adc    al,0x9a
  419374:	aas    
  419375:	hlt    
  419376:	imul   ecx,DWORD PTR [eax],0xc79982b6
  41937c:	pop    edi
  41937d:	jge    0x4193f3
  41937f:	iret   
  419380:	mov    al,ds:0xfb9f61bd
  419385:	mov    ebp,0x343df3b8
  41938a:	push   edi
  41938b:	and    ch,BYTE PTR [edi+ecx*1]
  41938e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  419390:	mov    cl,0xa2
  419392:	es pusha 
  419394:	and    ch,ch
  419396:	(bad)  
  419397:	in     eax,0x98
  419399:	push   ebp
  41939a:	mov    BYTE PTR [esi],dh
  41939c:	sar    cl,cl
  41939e:	or     eax,0xbbc83d40
  4193a3:	jbe    0x41941d
  4193a5:	mov    ah,0x0
  4193a7:	cmp    al,bh
  4193a9:	mov    eax,0xdacf383e
  4193ae:	or     ebp,ebp
  4193b0:	adc    dl,BYTE PTR [esi+ebp*4-0x3a]
  4193b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193b5:	call   0x60381cf2
  4193ba:	sub    edi,esi
  4193bc:	xchg   dl,bl
  4193be:	enter  0x3646,0x91
  4193c2:	xlat   BYTE PTR ds:[ebx]
  4193c3:	retf   
  4193c4:	jecxz  0x41938d
  4193c6:	adc    al,BYTE PTR [esi+eiz*2-0x11]
  4193ca:	adc    DWORD PTR [edx+eiz*2],esp
  4193cd:	lea    edx,[eax+ecx*2-0x69]
  4193d1:	inc    ecx
  4193d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d3:	ins    DWORD PTR es:[edi],dx
  4193d4:	call   0x9b8a:0xc2ab8855
  4193db:	retf   
  4193dc:	and    al,0xff
  4193de:	mov    bh,0xeb
  4193e0:	and    al,BYTE PTR [edi+0x59]
  4193e3:	in     eax,dx
  4193e4:	pop    edi
  4193e5:	or     eax,DWORD PTR [eax]
  4193e7:	jmp    0x419397
  4193e9:	sub    BYTE PTR [ebx],al
  4193eb:	push   0x6
  4193ed:	mov    esp,0x9ec8d583
  4193f2:	hlt    
  4193f3:	cmp    BYTE PTR [ebx+0x4d1bd412],bh
  4193f9:	dec    eax
  4193fa:	mov    dl,BYTE PTR ds:0x1e20312
  419400:	mov    ecx,ecx
  419402:	jo     0x41945c
  419404:	fsub   DWORD PTR [esi-0x17]
  419407:	dec    ecx
  419408:	pop    ebp
  419409:	pop    ds
  41940a:	dec    ebp
  41940b:	scas   eax,DWORD PTR es:[edi]
  41940c:	fld    TBYTE PTR [esi]
  41940e:	xchg   ecx,eax
  41940f:	pop    esi
  419410:	test   al,0xcc
  419412:	jo     0x419418
  419414:	and    bl,BYTE PTR [eax]
  419416:	arpl   WORD PTR [ecx+esi*4-0x5e],ax
  41941a:	push   esp
  41941b:	and    BYTE PTR [eax],bl
  41941d:	push   ecx
  41941e:	js     0x4193b2
  419420:	outs   dx,DWORD PTR ds:[esi]
  419421:	jae    0x419427
  419423:	jb     0x41949e
  419425:	xchg   BYTE PTR [ebx],al
  419427:	ja     0x41945e
  419429:	xchg   edi,eax
  41942a:	adc    esi,edi
  41942c:	fnsave [edx+0x2a4adb99]
  419432:	(bad)
  419437:	jle    0x419450
  419439:	aam    0xa0
  41943b:	cmp    esp,0xcc6ff7da
  419441:	jnp    0x41944f
  419443:	inc    edx
  419444:	sahf   
  419445:	or     DWORD PTR ds:0x9ecbd829,ebp
  41944b:	jmp    0xb37a:0x3537a6c2
  419452:	popf   
  419453:	sahf   
  419454:	shl    BYTE PTR [ecx+0x37748b73],cl
  41945a:	lock (bad) 
  41945c:	(bad)  
  41945e:	mov    cl,BYTE PTR [ecx]
  419460:	push   esi
  419461:	xchg   esp,eax
  419462:	shl    DWORD PTR [edx],1
  419464:	imul   ebx,esi,0x5a
  419467:	fst    DWORD PTR [ebp+0x1446767e]
  41946d:	popf   
  41946e:	mov    ah,BYTE PTR [edi+0x6ff4da98]
  419474:	nop
  419475:	jl     0x419499
  419477:	cmp    al,0x43
  419479:	cmp    DWORD PTR [ebx+0x2],0x7e
  41947d:	retf   0x759a
  419480:	sub    ebx,DWORD PTR [ebp+0x28a98ad0]
  419486:	mov    esi,0x5ffcaf0b
  41948b:	sub    eax,0xa23284d5
  419490:	push   eax
  419491:	or     al,0x7
  419493:	pop    ecx
  419494:	aas    
  419495:	sub    BYTE PTR [edi-0x7db90e9],ah
  41949b:	lock scas eax,DWORD PTR es:[edi]
  41949d:	sub    al,0xe0
  41949f:	call   0x860dc833
  4194a4:	xor    al,0x9f
  4194a6:	mov    al,es:0x82bc2ebe
  4194ac:	(bad)  
  4194ad:	ja     0x419448
  4194af:	mov    ebp,0xe00aea68
  4194b4:	push   cs
  4194b5:	test   DWORD PTR [esi],ecx
  4194b7:	or     bl,0x3
  4194ba:	data16 adc dh,BYTE PTR [edx+0x2c]
  4194be:	(bad)  
  4194bf:	test   al,0xc3
  4194c1:	dec    ebp
  4194c2:	jns    0x419507
  4194c4:	push   0x99a98401
  4194c9:	and    eax,0x99fe6599
  4194ce:	dec    eax
  4194cf:	mov    ds:0x81d64e5c,al
  4194d4:	lds    esp,FWORD PTR [edx+0x607bbb75]
  4194da:	xor    BYTE PTR [edx-0x15],ch
  4194dd:	pusha  
  4194de:	pop    esp
  4194df:	iret   
  4194e0:	pop    esi
  4194e1:	imul   DWORD PTR [ebx+0x60ed6bb0]
  4194e7:	ret    
  4194e8:	mov    edx,0x81f72f24
  4194ed:	sub    ah,ch
  4194ef:	lods   al,BYTE PTR ds:[esi]
  4194f0:	dec    eax
  4194f1:	daa    
  4194f2:	xchg   edx,eax
  4194f3:	addr16 mov dh,0x91
  4194f6:	and    al,0xa4
  4194f8:	inc    ebp
  4194f9:	mov    cl,0x2e
  4194fb:	iret   
  4194fc:	out    dx,eax
  4194fd:	dec    ebx
  4194fe:	mov    es,edi
  419500:	jg     0x419580
  419502:	imul   ebp,DWORD PTR [eax+0x81fe66e],0x79
  419509:	pop    ebx
  41950a:	xchg   esp,eax
  41950b:	clc    
  41950c:	test   BYTE PTR [edi+0x655e8d73],al
  419512:	or     bl,BYTE PTR [ebx]
  419514:	xchg   ebp,eax
  419515:	out    dx,eax
  419516:	jle    0x419545
  419518:	retf   
  419519:	cmp    al,0xfc
  41951b:	mov    al,ds:0xb6a1d621
  419520:	xor    BYTE PTR [esi+0x5e],bl
  419523:	xchg   esi,eax
  419524:	mov    ebx,0xc76cb039
  419529:	lods   al,BYTE PTR ds:[esi]
  41952a:	int3   
  41952b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41952c:	dec    ebp
  41952d:	jnp    0x419564
  41952f:	or     eax,DWORD PTR [esi+0x33a71572]
  419535:	xchg   esp,eax
  419536:	call   0x3dcd:0x46566788
  41953d:	rcl    al,cl
  41953f:	sbb    ebp,DWORD PTR ds:0x51bfb2d6
  419545:	xchg   edi,eax
  419546:	sahf   
  419547:	jl     0x419541
  419549:	es mov ah,0xca
  41954c:	test   eax,0x55de98ca
  419551:	push   esp
  419552:	cs ins BYTE PTR es:[edi],dx
  419554:	stc    
  419555:	xchg   esi,eax
  419556:	sbb    dh,ah
  419558:	adc    eax,0xa4fb611e
  41955d:	fdivr  QWORD PTR [ecx]
  41955f:	ror    DWORD PTR [edx-0x5814443a],cl
  419565:	pcmpeqd mm3,QWORD PTR [esi]
  419568:	aas    
  419569:	loop   0x4195b2
  41956b:	ret    
  41956c:	test   eax,0x41e4a6b
  419571:	or     ebp,DWORD PTR [ebp-0x57b84583]
  419577:	xchg   BYTE PTR [ebx+0x27dbd320],dl
  41957d:	push   edi
  41957e:	ja     0x419545
  419580:	aaa    
  419581:	and    eax,DWORD PTR [esi-0x74be37f]
  419587:	mov    gs,WORD PTR [edx+edx*1]
  41958a:	hlt    
  41958b:	xchg   BYTE PTR ds:0x3c865382,bl
  419591:	push   ss
  419592:	ss inc ebp
  419594:	mov    ds:0xdc5938fe,eax
  419599:	aam    0x54
  41959b:	dec    edx
  41959c:	push   esi
  41959d:	test   DWORD PTR [eax],0x165870d8
  4195a3:	adc    edi,esi
  4195a5:	sar    DWORD PTR [ebx],cl
  4195a7:	bound  esp,QWORD PTR [edx+0x205642d7]
  4195ad:	mul    BYTE PTR [ebx-0x9]
  4195b0:	loope  0x4195a5
  4195b2:	or     al,0xb6
  4195b4:	scas   al,BYTE PTR es:[edi]
  4195b5:	mov    ebp,0xb31bbd37
  4195ba:	jmp    0x419626
  4195bc:	aad    0xdb
  4195be:	jp     0x4195c5
  4195c0:	cs and DWORD PTR cs:0x940d2649,esi
  4195c8:	aad    0xcc
  4195ca:	inc    edx
  4195cb:	pop    eax
  4195cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195cd:	call   0xbc7c69e5
  4195d2:	(bad)  
  4195d3:	retf   
  4195d4:	mov    esi,edi
  4195d6:	ds out dx,eax
  4195d8:	push   ecx
  4195d9:	and    esp,DWORD PTR [ecx+0x304061fa]
  4195df:	jl     0x419631
  4195e1:	div    BYTE PTR [ebp+0x25948ba1]
  4195e7:	out    0x2e,al
  4195e9:	call   0xe129:0x944a8cc6
  4195f0:	jmp    0x419611
  4195f2:	out    dx,eax
  4195f3:	(bad)  
  4195f5:	(bad)  
  4195f6:	lea    ecx,[ecx-0x2956d5db]
  4195fc:	fdiv   QWORD PTR [eax-0x10]
  4195ff:	push   edx
  419600:	fimul  DWORD PTR [eax-0x2a]
  419603:	arpl   WORD PTR [eax-0x42],cx
  419606:	pop    ebx
  419607:	sub    ebx,eax
  419609:	shl    BYTE PTR [edx-0x30],cl
  41960c:	call   0x760b6492
  419611:	xchg   edx,eax
  419612:	jmp    0x1566:0x2e5e0802
  419619:	clc    
  41961a:	xchg   edi,eax
  41961b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41961c:	push   cs
  41961d:	rcl    cl,cl
  41961f:	mov    ds:0xf4d74007,eax
  419624:	call   0xef6d:0xbdcfa8cb
  41962b:	mov    ah,0x5a
  41962d:	cmp    BYTE PTR [eax-0x1d],ah
  419630:	jae    0x419644
  419632:	cld    
  419633:	jecxz  0x4195bf
  419635:	push   ds
  419636:	add    dl,BYTE PTR [ebx+0x2e9bc244]
  41963c:	sbb    cl,dh
  41963e:	jb     0x4195c4
  419640:	lods   eax,DWORD PTR ds:[esi]
  419641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419642:	pushf  
  419643:	icebp  
  419644:	(bad)  
  419645:	cld    
  419646:	and    al,0xd
  419648:	xchg   ebp,eax
  419649:	mov    ah,0xee
  41964b:	and    eax,0xb10a6fb4
  419650:	and    DWORD PTR [eax],0xfffffff5
  419653:	or     al,0xee
  419655:	icebp  
  419656:	(bad)  
  419657:	lock mov edi,0x83a48e21
  41965d:	ja     0x41963d
  41965f:	pop    edi
  419660:	inc    ecx
  419661:	pushf  
  419662:	xchg   BYTE PTR [edx+0x33],dh
  419665:	and    al,0x2b
  419667:	in     al,dx
  419668:	or     al,0xc5
  41966a:	inc    ebx
  41966b:	fild   WORD PTR [ebx]
  41966d:	push   ecx
  41966e:	or     dl,ah
  419670:	push   cs
  419671:	adc    DWORD PTR [edi-0x4b],ecx
  419674:	or     DWORD PTR [esi+0x5f],ecx
  419677:	test   al,0xb0
  419679:	ins    BYTE PTR es:[edi],dx
  41967a:	leave  
  41967b:	nop
  41967c:	or     al,0x1a
  41967e:	shr    DWORD PTR [ecx-0x438f0db2],0x7
  419685:	je     0x41962f
  419687:	ins    DWORD PTR es:[edi],dx
  419688:	inc    ebp
  419689:	sbb    edi,DWORD PTR [eax]
  41968b:	mov    al,0x3d
  41968d:	repz fisttp QWORD PTR [edx+0x38f44867]
  419694:	dec    ecx
  419695:	sub    BYTE PTR [ebp+0x17310ac8],bh
  41969b:	leave  
  41969c:	dec    esp
  41969d:	out    0xc4,eax
  41969f:	out    0xc2,eax
  4196a1:	push   eax
  4196a2:	clc    
  4196a3:	push   ebp
  4196a4:	fild   WORD PTR [ebx]
  4196a6:	stos   DWORD PTR es:[edi],eax
  4196a7:	mov    edx,0xdebfaf3c
  4196ac:	and    BYTE PTR [eax+eax*2+0x2c],bl
  4196b0:	shl    DWORD PTR [esi+0x4e],0xce
  4196b4:	add    cl,bh
  4196b6:	mov    ebp,0xf673efaa
  4196bb:	adc    BYTE PTR [esi-0x6f],al
  4196be:	nop
  4196bf:	mov    es,WORD PTR [ecx+eax*4-0x753e5372]
  4196c6:	push   eax
  4196c7:	enter  0x74ff,0x2e
  4196cb:	mov    ebx,0x5469c6e1
  4196d0:	bound  ecx,QWORD PTR [ebx+ecx*4]
  4196d3:	mov    edx,0xa997a619
  4196d8:	sbb    BYTE PTR [ecx],al
  4196da:	and    al,0x6f
  4196dc:	lods   eax,DWORD PTR ds:[esi]
  4196dd:	jmp    0x4196f2
  4196df:	xchg   edi,eax
  4196e1:	dec    edx
  4196e2:	mov    ah,0x88
  4196e4:	jb     0x4196f1
  4196e6:	dec    ecx
  4196e7:	outs   dx,DWORD PTR ds:[esi]
  4196e8:	sbb    ebx,esi
  4196ea:	mov    esi,0xa11706f
  4196ef:	and    al,0x5d
  4196f1:	inc    esp
  4196f2:	cs sti 
  4196f4:	dec    ecx
  4196f5:	dec    esi
  4196f6:	jge    0x419686
  4196f8:	push   ecx
  4196f9:	mov    ebp,DWORD PTR [ebx-0x1d]
  4196fc:	xchg   ecx,eax
  4196fe:	in     al,dx
  4196ff:	mov    ah,0x43
  419701:	or     al,0xc
  419703:	mov    bl,0xe4
  419705:	jns    0x4196f7
  419707:	push   ebp
  419708:	outs   dx,DWORD PTR ds:[esi]
  419709:	xchg   edi,eax
  41970a:	jmp    0x419705
  41970c:	iret   
  41970d:	mov    bh,0x23
  41970f:	adc    esp,DWORD PTR [edx+0x4a]
  419712:	sahf   
  419713:	push   esp
  419714:	shr    DWORD PTR [ebx+0x6c],cl
  419717:	imul   ebx,DWORD PTR ds:0x30c7af70,0x56
  41971e:	xor    DWORD PTR [edx],eax
  419720:	loop   0x419741
  419722:	rol    DWORD PTR [eax-0x40ad0703],0x38
  419729:	mov    ebx,0x652ff6be
  41972e:	push   esi
  41972f:	cmp    DWORD PTR [eax-0x5ff49307],0xffffffc6
  419736:	call   0xe066853f
  41973b:	retf   
  41973c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41973d:	jne    0x4196e8
  41973f:	dec    edi
  419740:	dec    eax
  419741:	push   0x76
  419743:	push   ebp
  419744:	in     eax,0x4
  419746:	inc    esp
  419747:	ds out 0x1b,al
  41974a:	(bad)  
  41974c:	jmp    0x4196fa
  41974e:	adc    BYTE PTR [edi+0x2d366d7a],dl
  419754:	mov    cl,0x6d
  419756:	sub    eax,0x4cb287d5
  41975b:	icebp  
  41975c:	ficomp DWORD PTR [eax-0x5138c450]
  419762:	scas   eax,DWORD PTR es:[edi]
  419763:	fadd   st(0),st
  419765:	jg     0x419708
  419767:	add    eax,0x4fe3692d
  41976c:	inc    ebx
  41976d:	iret   
  41976e:	or     edx,DWORD PTR [ebx+0x29]
  419771:	mov    al,0xd8
  419773:	repnz out dx,eax
  419775:	and    BYTE PTR [ebx-0x78],cl
  419778:	mov    cl,BYTE PTR [ebp+eax*8-0x19]
  41977c:	addr16 add esi,esp
  41977f:	(bad)  
  419780:	loopne 0x4197bd
  419782:	repnz mov dl,0xad
  419785:	lea    esp,[edi-0x45a3e38e]
  41978b:	test   DWORD PTR [edx+0x5e8e13c],ebx
  419791:	inc    eax
  419792:	(bad)  
  419793:	icebp  
  419794:	test   ecx,edi
  419796:	xor    DWORD PTR [ebx-0x3fcedd1d],0xd8cc2f0d
  4197a0:	jecxz  0x4197ab
  4197a2:	adc    eax,DWORD PTR [eax]
  4197a4:	inc    esp
  4197a5:	jmp    0xd222:0x17bdbecd
  4197ac:	fild   QWORD PTR [esi+0x27]
  4197af:	or     al,0x84
  4197b1:	mov    esp,0xfe4c6b25
  4197b6:	push   eax
  4197b7:	mov    ebx,0x6639f46
  4197bc:	inc    esp
  4197bd:	shr    DWORD PTR [eax+0x75],1
  4197c0:	sub    dl,BYTE PTR [ecx-0x8]
  4197c3:	test   al,0x37
  4197c5:	mov    dl,0xac
  4197c7:	pop    ecx
  4197c8:	push   esi
  4197c9:	pusha  
  4197ca:	loope  0x4197b5
  4197cc:	jmp    0xbdeb4773
  4197d1:	fwait
  4197d2:	lock mov ebx,0xb2c72b9d
  4197d8:	cmp    al,0xaf
  4197da:	ins    DWORD PTR es:[edi],dx
  4197db:	jb     0x4197e7
  4197dd:	sbb    BYTE PTR [ecx],bl
  4197df:	outs   dx,DWORD PTR ds:[esi]
  4197e0:	rcr    DWORD PTR [ebx-0x1534bb27],cl
  4197e6:	mov    bl,0x96
  4197e8:	and    ah,ah
  4197ea:	(bad)  
  4197eb:	push   dx
  4197ed:	mov    bh,0x4c
  4197ef:	push   esp
  4197f0:	call   0xc99a189a
  4197f5:	call   0x12d2:0x889cbf7a
  4197fc:	pushf  
  4197fd:	in     al,dx
  4197fe:	mov    ebx,DWORD PTR [edx]
  419800:	adc    DWORD PTR [esi],ebx
  419802:	xor    eax,0x8c1b6e2
  419807:	enter  0xd63e,0xf0
  41980b:	lahf   
  41980c:	ins    BYTE PTR es:[edi],dx
  41980d:	push   eax
  41980e:	cld    
  41980f:	inc    esi
  419810:	adc    ah,bh
  419812:	enter  0xa24b,0xb8
  419816:	inc    edx
  419817:	sbb    BYTE PTR [ebp+0x6f571041],al
  41981d:	xchg   esp,eax
  41981e:	aam    0x29
  419820:	xor    al,0xc2
  419822:	and    ch,BYTE PTR [esi]
  419824:	pop    ebx
  419825:	jp     0x4197b9
  419827:	shr    BYTE PTR [ebx+0x43],cl
  41982a:	into   
  41982b:	mov    ebp,0x9a64ecc2
  419830:	pop    ss
  419831:	call   DWORD PTR [eiz*2-0xa3d1a54]
  419838:	sub    ch,ch
  41983a:	xbegin 0x82dc85a9
  419840:	fadd   DWORD PTR [edi+0x53c499f1]
  419846:	dec    ebx
  419847:	or     DWORD PTR [ebp+0x61],esp
  41984a:	xchg   edi,eax
  41984b:	mov    esi,0x1023da84
  419850:	mov    ecx,0x4d07c705
  419855:	xchg   esi,eax
  419856:	jno    0x419820
  419858:	mov    esp,edi
  41985a:	sub    DWORD PTR [edx],0x38
  41985d:	test   ax,ax
  419860:	and    al,0xc8
  419862:	stos   BYTE PTR es:[edi],al
  419863:	call   0xd4c0:0xcbe86944
  41986a:	and    eax,0xfac070e
  41986f:	gs cmp al,0x36
  419872:	mov    es,WORD PTR [edx-0x145637e7]
  419878:	test   al,0x7
  41987b:	mov    edx,ebp
  41987d:	or     ebx,ebx
  41987f:	mov    edi,ds
  419881:	(bad)  
  419882:	and    esp,DWORD PTR [edx-0x45]
  419885:	(bad)  
  419887:	sbb    DWORD PTR [edx],esp
  419889:	xchg   edx,eax
  41988a:	xchg   esp,eax
  41988b:	pop    ss
  41988c:	adc    DWORD PTR [edi+0x35d9f37d],ebp
  419892:	loopne 0x4198e0
  419894:	mov    edi,0xc36d4efd
  419899:	xchg   ecx,eax
  41989a:	lock les ebp,FWORD PTR ss:[esi]
  41989e:	push   esi
  41989f:	mov    ebp,0x66425edd
  4198a4:	cld    
  4198a5:	out    dx,eax
  4198a6:	sub    BYTE PTR [ebp+ecx*1-0x1c7c8ca],al
  4198ad:	int3   
  4198ae:	xchg   esi,eax
  4198af:	push   ecx
  4198b0:	inc    esi
  4198b1:	pusha  
  4198b2:	call   0xf91b5b54
  4198b7:	sub    bl,BYTE PTR [esi+0x66378cdc]
  4198bd:	cmp    cl,BYTE PTR [ecx+0x1c37f545]
  4198c3:	cmp    eax,DWORD PTR [eax+ebx*8-0x62]
  4198c7:	pop    esp
  4198c8:	hlt    
  4198c9:	call   0xffd1:0xb9697287
  4198d0:	mov    ah,dl
  4198d2:	push   es
  4198d3:	pop    esp
  4198d4:	mov    WORD PTR [esi-0x356a4730],fs
  4198da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198db:	xor    dh,BYTE PTR [ebp-0x17c631b9]
  4198e1:	xchg   ebp,eax
  4198e2:	ds jns 0x4198cf
  4198e5:	xor    DWORD PTR [ebp-0x68],esp
  4198e8:	pop    ss
  4198e9:	sub    esi,DWORD PTR [ebx+0x4d60fdfb]
  4198ef:	dec    ebp
  4198f0:	je     0x4198af
  4198f2:	clc    
  4198f3:	mov    eax,0x9e9f66b8
  4198f8:	loop   0x419898
  4198fa:	add    al,0xd2
  4198fc:	cmp    al,0xb0
  4198fe:	inc    esi
  4198ff:	push   edx
  419900:	repz data16 mov bl,0x48
  419904:	cs mov esi,ecx
  419907:	and    DWORD PTR [eax+0x2c7c6eae],esi
  41990d:	cmp    eax,0xeeb39f63
  419912:	retf   
  419913:	or     al,0x2
  419915:	pop    ebp
  419916:	pop    ebp
  419917:	mov    ds:0x2b69491a,eax
  41991c:	cmp    ecx,DWORD PTR [eax]
  41991e:	mov    edi,0x11833b9c
  419923:	mov    ebx,0x690345bd
  419928:	xlat   BYTE PTR ds:[ebx]
  419929:	jle    0x419903
  41992b:	aas    
  41992c:	adc    cl,0x74
  41992f:	cmc    
  419930:	aam    0x34
  419932:	addr16 enter 0x1a56,0x53
  419937:	dec    edx
  419938:	xchg   ebp,eax
  419939:	clc    
  41993a:	mov    ecx,0xb946b280
  41993f:	shl    DWORD PTR es:[edi+0x78],cl
  419943:	outs   dx,BYTE PTR ds:[esi]
  419944:	imul   esp,DWORD PTR [esi+0xe],0xeb2511b5
  41994b:	xor    BYTE PTR [ebp+edx*1+0x28d388e8],al
  419952:	fs cli 
  419954:	repnz in al,0x7e
  419957:	in     al,0x87
  419959:	jl     0x41991d
  41995b:	mov    eax,0x6a320835
  419960:	gs sub eax,ebx
  419963:	inc    ebx
  419964:	arpl   WORD PTR [ebx],cx
  419966:	pop    esp
  419967:	sub    ah,BYTE PTR [edx]
  419969:	mov    WORD PTR [edi],?
  41996b:	add    DWORD PTR [edx],ecx
  41996d:	popf   
  41996e:	out    dx,al
  41996f:	sub    ebx,0xd6736efe
  419975:	inc    edx
  419976:	ds aad 0xd8
  419979:	and    cl,cl
  41997b:	imul   ebp,esp,0x43
  41997e:	and    ebx,DWORD PTR [ebx+0x40]
  419981:	arpl   WORD PTR [eax-0x41],cx
  419984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419985:	inc    esi
  419986:	xchg   edi,eax
  419987:	xchg   esp,eax
  419988:	xlat   BYTE PTR ds:[ebx]
  419989:	dec    ecx
  41998a:	sub    BYTE PTR [esi+0x254db0ad],0xe6
  419991:	mov    ds:0x73bb0cde,eax
  419996:	rcr    BYTE PTR [ebx+0x1737a6a7],0xe6
  41999d:	dec    edi
  41999e:	mov    al,ds:0xa4806c4b
  4199a3:	push   esi
  4199a4:	pusha  
  4199a5:	lds    esi,FWORD PTR [esi-0x5]
  4199a8:	xor    ch,bl
  4199aa:	lahf   
  4199ab:	push   esi
  4199ac:	push   edi
  4199ad:	xor    al,0x80
  4199af:	pop    esp
  4199b0:	jmp    0x891c:0xb92973b6
  4199b7:	imul   ebx,DWORD PTR [esi-0x4d638593],0xffffffc4
  4199be:	sbb    DWORD PTR [ebx],ebx
  4199c0:	(bad)  
  4199c1:	adc    al,0xa1
  4199c3:	repnz cmp al,0xc9
  4199c6:	adc    bl,BYTE PTR ss:[eax-0x38e067a9]
  4199cd:	xor    al,BYTE PTR [eax+ebp*8-0x7e]
  4199d1:	xor    esi,DWORD PTR [esp+eax*1-0x69ed7dd2]
  4199d8:	xor    DWORD PTR [ebx],ebx
  4199da:	int    0x2
  4199dc:	gs mov edx,0x61abf2de
  4199e2:	xchg   esp,eax
  4199e3:	ficomp WORD PTR [esi]
  4199e5:	outs   dx,DWORD PTR ds:[esi]
  4199e6:	or     BYTE PTR [esi],dh
  4199e8:	or     BYTE PTR [ecx+0x2e],bh
  4199eb:	mov    bh,0xdf
  4199ed:	imul   esp,DWORD PTR [esi],0xffffff93
  4199f0:	ss (bad) 
  4199f3:	mov    cl,0x3c
  4199f5:	ds repz (bad) 
  4199f8:	inc    edx
  4199f9:	mov    ds:0xbc64aa19,eax
  4199fe:	inc    bp
  419a00:	mov    dh,0x1b
  419a02:	into   
  419a03:	inc    esp
  419a04:	call   0x1dc421d8
  419a09:	mov    eax,ds:0xd48363a5
  419a0e:	add    dh,BYTE PTR [eax-0x24aa8ae7]
  419a14:	(bad)  
  419a15:	ins    DWORD PTR es:[edi],dx
  419a16:	in     eax,dx
  419a17:	push   ebx
  419a18:	and    al,BYTE PTR [edi+edx*1]
  419a1b:	dec    ecx
  419a1c:	dec    edi
  419a1d:	adc    al,0x89
  419a1f:	jge    0x419a14
  419a21:	(bad)  
  419a23:	jg     0x4199be
  419a25:	xor    cx,WORD PTR [ebp+0x13]
  419a29:	cmc    
  419a2a:	lock cmp DWORD PTR [edi],0x24a8b8ef
  419a31:	cmp    DWORD PTR [ebx+0x63af3057],0xd35dc2fd
  419a3b:	fistp  QWORD PTR [eax+0x44]
  419a3e:	cwde   
  419a3f:	inc    esi
  419a40:	ins    BYTE PTR es:[edi],dx
  419a41:	cmp    dl,bl
  419a43:	rol    BYTE PTR [esi],0xed
  419a46:	mov    esp,0x67e257b7
  419a4b:	inc    ecx
  419a4c:	add    al,0xa7
  419a4e:	test   eax,0xce769b8c
  419a53:	xchg   ebx,eax
  419a54:	xor    eax,0xbff7a129
  419a59:	pop    edi
  419a5a:	add    esi,DWORD PTR [edx+0x5ea1bbab]
  419a60:	xor    al,0xef
  419a62:	add    ebp,edi
  419a64:	std    
  419a65:	adc    esi,DWORD PTR [edx]
  419a67:	lock pop edx
  419a69:	imul   esp,DWORD PTR [ebp-0x4557b26c],0x34bdb704
  419a73:	aas    
  419a74:	or     dl,BYTE PTR [ebx+eiz*4-0x2e]
  419a78:	iret   
  419a79:	sar    esp,0x7d
  419a7c:	adc    dl,cl
  419a7e:	push   ebx
  419a7f:	cmp    al,dh
  419a81:	or     DWORD PTR [edx+0x4c28e12d],eax
  419a87:	bound  esi,QWORD PTR [edx-0xcff29bd]
  419a8d:	in     al,0x7b
  419a8f:	cmp    cl,BYTE PTR [bx+si+0x48]
  419a93:	dec    ebx
  419a94:	out    0xf0,eax
  419a96:	fmul   DWORD PTR [ebx]
  419a98:	mov    DWORD PTR [edi],ebp
  419a9a:	out    dx,eax
  419a9b:	sbb    eax,0x206a3f7a
  419aa0:	xor    bh,BYTE PTR [eax+0x5a]
  419aa3:	pop    edx
  419aa4:	adc    al,0x7
  419aa6:	mov    ?,WORD PTR [ebp+0x25fbc485]
  419aac:	dec    cx
  419aae:	xchg   esi,eax
  419aaf:	fprem  
  419ab1:	push   esi
  419ab2:	cld    
  419ab3:	sub    ch,BYTE PTR ds:0x28b081cd
  419ab9:	hlt    
  419aba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419abb:	cwde   
  419abc:	and    DWORD PTR [edi+0x13],eax
  419abf:	inc    ecx
  419ac0:	loopne 0x419a70
  419ac2:	cmp    edi,DWORD PTR [ebp+0x433f4b82]
  419ac8:	inc    esi
  419ac9:	jecxz  0x419b33
  419acb:	hlt    
  419acc:	shl    BYTE PTR [ebp-0x72],1
  419acf:	mov    eax,0x9ebffb59
  419ad4:	outs   dx,BYTE PTR ds:[esi]
  419ad5:	adc    DWORD PTR [ecx+0x5],edx
  419ad8:	and    bl,BYTE PTR [ecx+0x74]
  419adb:	mov    al,ds:0x8865a793
  419ae0:	retf   
  419ae1:	stc    
  419ae2:	dec    edx
  419ae3:	add    al,0x8a
  419ae5:	inc    esp
  419ae6:	repz in al,0x2e
  419ae9:	jns    0x419ae5
  419aeb:	rcl    BYTE PTR [ecx],cl
  419aed:	pop    esp
  419aee:	jmp    0x8183:0x372aaeaf
  419af5:	call   0xff309a33
  419afa:	neg    DWORD PTR [ecx+0x3ae69152]
  419b00:	or     bl,ah
  419b02:	cmp    dl,BYTE PTR ds:0x32249d6
  419b08:	cmp    ebx,DWORD PTR [ecx]
  419b0a:	and    eax,0xd8be9ed8
  419b0f:	cmp    eax,edi
  419b11:	imul   ebx,DWORD PTR ds:0xaa2861a2,0x66
  419b18:	loope  0x419ad0
  419b1a:	adc    DWORD PTR [ecx],0xffffffaf
  419b1d:	mov    ch,0xa1
  419b1f:	out    dx,al
  419b20:	jg     0x419b4d
  419b22:	mov    ecx,0x13d3a101
  419b27:	cmp    DWORD PTR [edx-0x46],ebp
  419b2a:	inc    eax
  419b2b:	cld    
  419b2c:	jnp    0x419b68
  419b2e:	mov    dl,0xb9
  419b30:	push   DWORD PTR [eax]
  419b32:	sbb    eax,0x617c7c24
  419b37:	mov    BYTE PTR [ebx],ch
  419b39:	dec    eax
  419b3a:	inc    ebp
  419b3b:	mov    al,ds:0x6a2be4a8
  419b40:	pop    ecx
  419b41:	addr16 out 0xb1,eax
  419b44:	test   al,0xc3
  419b46:	and    DWORD PTR [ebx],ebp
  419b48:	pushf  
  419b49:	jae    0x419b7f
  419b4b:	or     eax,0x707e0075
  419b50:	aam    0xfc
  419b52:	jl     0x419b85
  419b54:	pop    ebx
  419b55:	stc    
  419b56:	cwde   
  419b57:	jp     0x419b2d
  419b59:	stos   DWORD PTR es:[edi],eax
  419b5a:	pop    es
  419b5b:	arpl   bx,sp
  419b5d:	cld    
  419b5e:	or     eax,0x36eac866
  419b63:	xchg   edi,eax
  419b64:	popa   
  419b65:	inc    DWORD PTR [edx+0x776aae38]
  419b6b:	sub    al,0x32
  419b6d:	mov    fs,WORD PTR [ecx-0x9505633]
  419b73:	pop    ebx
  419b74:	xchg   ebp,eax
  419b75:	ror    DWORD PTR [ebx],0xc8
  419b78:	push   0xffffffbe
  419b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b7b:	dec    ecx
  419b7c:	push   cs
  419b7d:	jp     0x419bf1
  419b7f:	adc    dl,BYTE PTR [ebp+ebx*1+0xe]
  419b83:	pop    edi
  419b84:	pop    ecx
  419b85:	(bad)  
  419b86:	addr16 sbb al,0x27
  419b89:	rcr    BYTE PTR [ebp+ecx*8-0x5516f180],0x88
  419b91:	cli    
  419b92:	(bad)
  419b95:	dec    ecx
  419b96:	popf   
  419b97:	idiv   al
  419b99:	bswap  esp
  419b9b:	jmp    0x84b6:0xa71e71d9
  419ba2:	(bad)  
  419ba3:	cmp    al,0x33
  419ba5:	push   esi
  419ba6:	inc    eax
  419ba7:	fisub  DWORD PTR [eax+eax*2]
  419baa:	popf   
  419bab:	inc    ebp
  419bac:	mov    dh,0x64
  419bae:	cmp    BYTE PTR [ebx],bh
  419bb0:	in     al,0x7b
  419bb2:	xchg   BYTE PTR [ebx],bl
  419bb4:	xchg   ecx,eax
  419bb5:	push   ss
  419bb6:	pop    ds
  419bb7:	push   ss
  419bb8:	rol    BYTE PTR [edi+0x7952d4fc],cl
  419bbe:	ins    DWORD PTR es:[edi],dx
  419bbf:	mov    ecx,0x4d01e808
  419bc4:	mov    ebx,ecx
  419bc6:	mov    bh,0x6a
  419bc8:	or     al,0x4
  419bca:	stos   DWORD PTR es:[edi],eax
  419bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bcc:	bound  ecx,QWORD PTR [ecx]
  419bce:	mov    dl,0xd6
  419bd0:	rol    DWORD PTR cs:0xfd07db0b,1
  419bd7:	loope  0x419bd9
  419bd9:	stc    
  419bda:	(bad)  
  419bdb:	icebp  
  419bdc:	std    
  419bdd:	xchg   edx,eax
  419bde:	retf   0x85c
  419be1:	xor    eax,ebp
  419be3:	pop    ds
  419be4:	leave  
  419be5:	std    
  419be6:	adc    eax,0x1d5e7418
  419beb:	xor    ch,bl
  419bed:	call   0xe17cb6ed
  419bf2:	(bad)  
  419bf3:	into   
  419bf4:	xlat   BYTE PTR ds:[ebx]
  419bf5:	mov    WORD PTR [edx+0x48],?
  419bf8:	mov    edi,0x183f5a4e
  419bfd:	jp     0x419b9d
  419bff:	and    bh,BYTE PTR [edi+ebx*8]
  419c02:	repnz xchg ebx,eax
  419c04:	test   DWORD PTR [edi+0x6e],ebp
  419c07:	or     DWORD PTR [eax-0x1a],ebx
  419c0a:	mov    esi,DWORD PTR [eax]
  419c0c:	add    dl,BYTE PTR [edi-0x7e]
  419c0f:	es fwait
  419c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c12:	jno    0x419bed
  419c14:	ins    DWORD PTR es:[edi],dx
  419c15:	adc    eax,0x339b0558
  419c1a:	sbb    DWORD PTR [esi+0x3785980c],edx
  419c20:	push   ds
  419c21:	in     al,dx
  419c22:	loop   0x419c7b
  419c24:	mov    ebx,0x1774b6c3
  419c29:	fnsave [eax-0x49bb72da]
  419c2f:	pop    es
  419c30:	shl    DWORD PTR [ecx-0x10],0x38
  419c34:	inc    ebp
  419c35:	div    DWORD PTR [ebx+0x49]
  419c38:	call   0x7785edcb
  419c3d:	mov    WORD PTR [ecx-0x6eb689b6],cs
  419c43:	mov    dl,0x2e
  419c45:	fsub   st(6),st
  419c47:	mov    DWORD PTR [edi],0x3e28c1a5
  419c4d:	fst    QWORD PTR [edx+eiz*4]
  419c50:	loop   0x419c25
  419c52:	mov    eax,ds:0x3cd88ebf
  419c57:	fwait
  419c58:	cmp    dh,BYTE PTR [ebx]
  419c5a:	pushf  
  419c5b:	lods   al,BYTE PTR ds:[esi]
  419c5c:	cwde   
  419c5d:	(bad)  [ebp-0x7005e118]
  419c63:	cmp    esi,eax
  419c65:	imul   edi,DWORD PTR [esi],0x27
  419c68:	fnsave [eax+ecx*4+0xfba146d]
  419c6f:	push   ebp
  419c70:	fmul   DWORD PTR [esi+0x3d]
  419c73:	mov    eax,ds:0xdc2b40a5
  419c78:	pcmpeqb mm1,QWORD PTR [edx]
  419c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7c:	in     al,dx
  419c7d:	dec    eax
  419c7e:	xor    DWORD PTR [esi-0x68],ebp
  419c81:	add    bh,BYTE PTR [eax+eiz*1-0x76]
  419c85:	push   ebx
  419c86:	repnz push ebx
  419c88:	not    BYTE PTR [ecx]
  419c8a:	js     0x419c6d
  419c8c:	sub    al,0xaa
  419c8e:	sahf   
  419c8f:	dec    esp
  419c90:	outs   dx,DWORD PTR ds:[esi]
  419c91:	pop    esp
  419c92:	sub    al,0xca
  419c94:	xchg   esi,eax
  419c95:	xchg   BYTE PTR [edx],dl
  419c97:	retf   0x6122
  419c9a:	xor    eax,0x43242816
  419c9f:	mov    edi,0x2247e035
  419ca4:	sbb    BYTE PTR [edx+0x6f],0xe2
  419ca8:	push   ecx
  419ca9:	aas    
  419caa:	(bad)  
  419cab:	sub    DWORD PTR [ebx-0x3f0eec23],edx
  419cb1:	loopne 0x419c80
  419cb3:	adc    bh,BYTE PTR [edx+0x7c]
  419cb6:	adc    ah,BYTE PTR [edx]
  419cb8:	push   edi
  419cb9:	xor    edi,edx
  419cbb:	and    eax,0xacd6ef36
  419cc0:	sub    esp,DWORD PTR [ebx-0xe]
  419cc3:	or     bl,BYTE PTR [edi+0x6e]
  419cc6:	popa   
  419cc7:	mov    eax,DWORD PTR [esi+eax*1+0x43]
  419ccb:	cmc    
  419ccc:	adc    DWORD PTR [ecx+eax*1-0x727177cf],0x8cabdb5e
  419cd7:	xor    eax,0x302ea620
  419cdc:	leave  
  419cdd:	es and eax,0x4aa92920
  419ce3:	inc    edi
  419ce4:	(bad)  
  419ce5:	mov    cl,0x78
  419ce7:	xchg   edi,eax
  419ce8:	sbb    bh,BYTE PTR [ebx+esi*4-0x3ffb685b]
  419cef:	cdq    
  419cf0:	sub    esi,edi
  419cf2:	outs   dx,BYTE PTR ds:[esi]
  419cf3:	fisttp DWORD PTR [edi-0x7f]
  419cf6:	inc    DWORD PTR [edx-0x17]
  419cf9:	stos   DWORD PTR es:[edi],eax
  419cfa:	dec    edx
  419cfb:	or     eax,DWORD PTR [edx-0x3c]
  419cfe:	pushf  
  419cff:	or     BYTE PTR [esi-0x2d99f528],ah
  419d05:	cdq    
  419d06:	sub    edx,DWORD PTR [esi-0x5d]
  419d09:	inc    esi
  419d0a:	stc    
  419d0b:	dec    edi
  419d0c:	scas   eax,DWORD PTR es:[edi]
  419d0d:	xchg   edi,eax
  419d0e:	jp     0x419d3e
  419d10:	out    dx,al
  419d11:	or     ebp,ebp
  419d13:	hlt    
  419d14:	push   DWORD PTR [ecx]
  419d16:	dec    eax
  419d17:	out    dx,al
  419d18:	and    BYTE PTR [ecx],0xaf
  419d1b:	pop    edi
  419d1c:	pushf  
  419d1d:	into   
  419d1e:	jno    0x419d44
  419d20:	add    ch,0x1e
  419d23:	jne    0x419d51
  419d25:	out    dx,al
  419d26:	and    BYTE PTR [esi],bh
  419d28:	push   cs
  419d29:	loope  0x419cd0
  419d2b:	mov    ds:0xa57aac2d,eax
  419d30:	pop    es
  419d31:	sub    DWORD PTR [esi-0x789ac013],edi
  419d37:	sub    al,BYTE PTR [edi+0x73c03963]
  419d3d:	push   ebx
  419d3e:	mov    dh,0x9e
  419d40:	pop    ecx
  419d41:	pusha  
  419d42:	int3   
  419d43:	add    bh,0x91
  419d46:	cmp    al,dl
  419d48:	xor    ebp,DWORD PTR [edi+esi*4+0x72]
  419d4c:	xchg   esp,eax
  419d4d:	mov    bl,0x37
  419d4f:	inc    esi
  419d50:	dec    ecx
  419d51:	mov    al,0x1b
  419d53:	xor    al,BYTE PTR [ebx+eax*4-0x22]
  419d57:	nop
  419d58:	mov    eax,ds:0x5b57f610
  419d5d:	idiv   BYTE PTR [edx-0xc]
  419d60:	sar    bh,cl
  419d62:	mov    ebx,0x4050c9cd
  419d67:	xchg   edi,eax
  419d68:	dec    ecx
  419d69:	ror    DWORD PTR ds:0xbfc3a9ea,1
  419d6f:	mov    edi,0xa5140fb6
  419d74:	cmp    esp,DWORD PTR [eax-0x79d9d882]
  419d7a:	xor    dh,BYTE PTR [edx+0x70b264b6]
  419d80:	sar    ebx,cl
  419d82:	retf   0xe1e
  419d85:	faddp  st(1),st
  419d87:	sahf   
  419d88:	push   cs
  419d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d8a:	mov    bh,0x95
  419d8c:	push   esp
  419d8d:	mov    ds:0x5a3eacd1,eax
  419d92:	dec    ebx
  419d93:	loopne 0x419d73
  419d95:	aam    0x75
  419d97:	mov    eax,ds:0x6f91d633
  419d9c:	outs   dx,BYTE PTR ds:[esi]
  419d9d:	inc    ebx
  419d9e:	retf   
  419d9f:	jmp    0x419dff
  419da1:	inc    ecx
  419da2:	pop    ebx
  419da3:	not    DWORD PTR [ecx]
  419da5:	sbb    bl,cl
  419da7:	pop    ds
  419da8:	xchg   BYTE PTR [edi],ch
  419daa:	push   ss
  419dab:	push   cs
  419dac:	iret   
  419dad:	dec    esi
  419dae:	fdivr  DWORD PTR [ebx+0x516d76ec]
  419db4:	add    ebx,DWORD PTR [edi+0x38c2ced9]
  419dba:	cmp    DWORD PTR [edi+0x4d],edi
  419dbd:	mov    bh,0x7d
  419dbf:	in     eax,0x85
  419dc1:	or     DWORD PTR [edx],ecx
  419dc3:	mov    edx,0xa244d123
  419dc8:	aaa    
  419dc9:	add    al,0xb2
  419dcb:	rcr    DWORD PTR [esi+0x12],1
  419dce:	dec    esp
  419dcf:	shl    BYTE PTR [edi+0x76dfaf77],0x57
  419dd6:	dec    ebx
  419dd7:	mov    bl,0x9d
  419dd9:	xchg   edi,eax
  419dda:	lahf   
  419ddb:	ret    0x6b30
  419dde:	scas   al,BYTE PTR es:[edi]
  419ddf:	(bad)  
  419de0:	in     eax,dx
  419de1:	aas    
  419de2:	sbb    esi,esi
  419de4:	js     0x419d9a
  419de6:	in     eax,dx
  419de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de8:	pop    ds
  419de9:	inc    esp
  419dea:	cli    
  419deb:	or     cl,BYTE PTR [ebx-0x7d]
  419dee:	data16 jns 0x419e4e
  419df1:	lods   al,BYTE PTR ds:[esi]
  419df2:	ins    DWORD PTR es:[edi],dx
  419df3:	cmc    
  419df4:	or     ebx,DWORD PTR [ebx-0xb]
  419df7:	call   0x4e91:0x67522de7
  419dfe:	test   ecx,ebp
  419e00:	push   0xd2fbb71
  419e05:	icebp  
  419e06:	push   0x40eb2d3b
  419e0b:	cmp    ebp,esp
  419e0d:	dec    ecx
  419e0e:	xchg   BYTE PTR [ebx],dh
  419e10:	cmp    DWORD PTR [eax+0x26],esp
  419e13:	jb     0x419e19
  419e15:	add    ah,dl
  419e17:	mov    al,ds:0x505a72aa
  419e1c:	cs test al,0xb0
  419e1f:	add    eax,0xe7b4eaf1
  419e24:	cmp    ecx,DWORD PTR [esi-0x22]
  419e27:	int3   
  419e28:	sbb    al,BYTE PTR [ebx]
  419e2a:	js     0x419e5f
  419e2c:	cs inc esi
  419e2e:	sub    eax,0x1576b368
  419e33:	fisttp WORD PTR [ebp-0x1abe03a8]
  419e39:	mov    ebp,0x7756b903
  419e3e:	pusha  
  419e3f:	push   DWORD PTR [ebp-0x7382e086]
  419e45:	push   fs
  419e47:	mov    eax,0x897e0c00
  419e4c:	(bad)  
  419e4d:	and    eax,0x84de349c
  419e52:	xlat   BYTE PTR ds:[ebx]
  419e53:	dec    edx
  419e54:	dec    esp
  419e55:	jae    0x419e4a
  419e57:	xor    ch,BYTE PTR [edx+0x40]
  419e5a:	int3   
  419e5b:	(bad)  
  419e5c:	retf   0x1a5e
  419e5f:	mov    ebx,?
  419e61:	xor    BYTE PTR [eax+0x8],dh
  419e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e66:	stos   BYTE PTR es:[edi],al
  419e67:	iret   
  419e68:	sbb    eax,0x48894428
  419e6d:	int    0x88
  419e6f:	push   cs
  419e70:	sub    BYTE PTR [ebx],al
  419e72:	xchg   ebx,esi
  419e74:	mov    eax,0x11a69014
  419e79:	lods   eax,DWORD PTR ds:[esi]
  419e7b:	or     dl,BYTE PTR [ebp+0x1a0653f2]
  419e81:	or     eax,0xae0b7b49
  419e86:	mov    eax,0xadfa9eaa
  419e8b:	sub    eax,0x46363aaf
  419e90:	or     dh,BYTE PTR [eax]
  419e92:	outs   dx,DWORD PTR ds:[esi]
  419e93:	iret   
  419e94:	clc    
  419e95:	jge    0x419ecf
  419e97:	sbb    DWORD PTR [ebx-0x6],ebx
  419e9a:	loope  0x419ed5
  419e9c:	call   0xe322:0x5d491833
  419ea3:	call   0x9592389b
  419ea8:	aaa    
  419ea9:	fnsetpm(287 only) 
  419eab:	inc    esp
  419eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ead:	inc    esi
  419eae:	rcl    BYTE PTR [edi],1
  419eb0:	in     eax,0xa2
  419eb2:	cmp    al,0x1e
  419eb4:	pop    ebx
  419eb5:	xchg   ebp,eax
  419eb6:	ja     0x419ed5
  419eb8:	push   cs
  419eb9:	mov    ch,0xf4
  419ebb:	dec    edx
  419ebc:	retf   0xf695
  419ebf:	icebp  
  419ec0:	fs jmp 0xe1e2e34d
  419ec6:	mov    ebp,0xb974c702
  419ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecc:	dec    esi
  419ecd:	pop    ds
  419ece:	mov    edi,DWORD PTR [ebx]
  419ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ed1:	push   es
  419ed2:	inc    esi
  419ed3:	mov    BYTE PTR [ecx-0x14],al
  419ed6:	push   ebx
  419ed7:	fstp   TBYTE PTR [ecx+ebp*4+0x2d0ad69e]
  419ede:	add    eax,0x48461097
  419ee3:	xchg   ecx,eax
  419ee4:	cmp    cl,BYTE PTR [edi+0xb]
  419ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee8:	fadd   DWORD PTR [eax-0x57]
  419eeb:	mov    WORD PTR [ecx],fs
  419eed:	or     DWORD PTR [edx],edi
  419eef:	push   0xe4543b5f
  419ef4:	mov    al,0x1a
  419ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef7:	xchg   esp,eax
  419ef8:	retf   
  419ef9:	dec    ebx
  419efa:	(bad)  
  419efb:	mov    eax,ds:0xa7a46e6a
  419f00:	mov    BYTE PTR [edi],0xf4
  419f03:	mov    cl,0x6
  419f05:	push   cs
  419f06:	retf   
  419f07:	mov    cl,0x6c
  419f09:	(bad)  
  419f0a:	jae    0x419ee6
  419f0c:	dec    edi
  419f0d:	out    dx,eax
  419f0e:	jns    0x419eb4
  419f10:	imul   DWORD PTR [esp+ecx*2+0x42d8d400]
  419f17:	sbb    esi,eax
  419f19:	jmp    0x451e:0xfeb45874
  419f20:	xor    al,0x39
  419f22:	dec    edi
  419f23:	add    al,0xa5
  419f25:	mov    ecx,0x5cafd913
  419f2b:	mov    bl,BYTE PTR [ecx+0xb]
  419f2e:	pop    ebx
  419f2f:	rcr    edi,0x6e
  419f32:	mov    cl,0x45
  419f34:	cmc    
  419f35:	or     ecx,DWORD PTR ds:[edx]
  419f38:	xchg   esi,eax
  419f39:	ja     0x419f25
  419f3b:	fnstcw WORD PTR [eax]
  419f3d:	cmp    edx,esi
  419f3f:	xchg   ecx,eax
  419f40:	int3   
  419f41:	mov    BYTE PTR [esi-0x5dd210b4],ah
  419f47:	in     eax,dx
  419f48:	xchg   ebx,eax
  419f49:	jmp    0xbeb9:0xb9e0b80f
  419f50:	jnp    0x419ed3
  419f52:	mov    eax,ds:0x6ad64dc7
  419f57:	call   0x84b3:0x95ec307d
  419f5e:	dec    edi
  419f5f:	js     0x419f85
  419f61:	inc    ebp
  419f62:	adc    al,0x36
  419f64:	ror    DWORD PTR [edi],cl
  419f66:	dec    edx
  419f67:	icebp  
  419f68:	mov    eax,0x3552e86b
  419f6d:	sbb    ebx,0x1b
  419f70:	or     dh,BYTE PTR [edi+0x26bcedef]
  419f76:	ins    DWORD PTR es:[edi],dx
  419f77:	ds in  eax,dx
  419f79:	adc    DWORD PTR [eax-0x45],edx
  419f7c:	retf   0xfc59
  419f7f:	xchg   edi,eax
  419f80:	jl     0x419f11
  419f82:	jbe    0x41a003
  419f84:	mov    ecx,0xdf71b01f
  419f89:	pusha  
  419f8a:	xor    BYTE PTR [ecx+0x59],0x9e
  419f8e:	test   eax,0x16052775
  419f93:	aam    0xc1
  419f95:	jle    0x419fbf
  419f97:	jp     0x419fd3
  419f99:	add    eax,0xe30488c3
  419f9e:	in     eax,0x51
  419fa0:	xchg   esp,eax
  419fa1:	xchg   esp,eax
  419fa2:	xor    BYTE PTR [ebp+0x3c],cl
  419fa5:	icebp  
  419fa6:	clc    
  419fa7:	cmp    ecx,esp
  419fa9:	mov    eax,0xfdb8235f
  419fae:	and    dl,dh
  419fb0:	pusha  
  419fb1:	lods   eax,DWORD PTR ds:[esi]
  419fb2:	ja     0x419fae
  419fb4:	imul   ebx,DWORD PTR [edi],0x16e6efe5
  419fba:	pop    ecx
  419fbb:	ds popa 
  419fbd:	dec    ecx
  419fbe:	test   DWORD PTR [esi-0x2dfa8e73],eax
  419fc4:	and    eax,0xa52450c3
  419fc9:	ins    BYTE PTR es:[edi],dx
  419fca:	xor    al,cl
  419fcc:	retf   0xedd0
  419fcf:	jns    0x419f7f
  419fd1:	es inc eax
  419fd3:	jb     0x419ff4
  419fd5:	inc    ecx
  419fd6:	push   edx
  419fd7:	push   0x579ff6d1
  419fdc:	and    edx,DWORD PTR [ebp-0x32]
  419fdf:	xchg   DWORD PTR [ecx+0x20],ecx
  419fe2:	les    esp,FWORD PTR [eax]
  419fe4:	(bad)  
  419fe5:	icebp  
  419fe6:	sub    BYTE PTR [ecx+esi*1-0x80],dl
  419fea:	cmp    esi,esi
  419fec:	scas   al,BYTE PTR es:[edi]
  419fed:	jg     0x41a042
  419fef:	cmp    al,0xaf
  419ff1:	dec    edi
  419ff2:	in     al,0x61
  419ff4:	test   eax,0xe4d5b919
  419ff9:	add    DWORD PTR [esi+0x657c4ca],esi
  419fff:	inc    edi
  41a000:	sti    
  41a001:	shr    al,cl
  41a003:	sbb    dl,bl
  41a005:	ret    0x1a42
  41a008:	or     bl,BYTE PTR [ebp+0x541755f4]
  41a00e:	sub    al,BYTE PTR [ebx-0x1b]
  41a011:	cli    
  41a012:	pop    es
  41a013:	lods   al,BYTE PTR ds:[esi]
  41a014:	sbb    edx,esi
  41a016:	cmp    ch,BYTE PTR [edx]
  41a018:	inc    eax
  41a019:	inc    ebp
  41a01a:	pushf  
  41a01b:	out    0x11,al
  41a01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a01e:	(bad)  
  41a01f:	outs   dx,BYTE PTR ds:[esi]
  41a020:	sbb    eax,0xc15afef2
  41a025:	test   eax,0xaf89684a
  41a02a:	popa   
  41a02b:	adc    ebp,ebp
  41a02d:	frstor [ebp+0x71]
  41a030:	mov    DWORD PTR [esi-0x32],esi
  41a033:	stos   BYTE PTR es:[edi],al
  41a034:	ret    
  41a035:	push   ecx
  41a036:	jns    0x419ffa
  41a038:	add    DWORD PTR [ebp+0x6454eda3],esp
  41a03e:	push   esi
  41a03f:	bnd ja 0x41a0a6
  41a042:	ret    0x7384
  41a045:	outs   dx,DWORD PTR ds:[esi]
  41a046:	retf   0x7ef2
  41a049:	or     ch,BYTE PTR [edx+ecx*8+0x46]
  41a04d:	call   0xb48365be
  41a052:	addr16 mov dl,0x2a
  41a055:	lea    ecx,[eax+0x2fabb7cd]
  41a05b:	mov    eax,0x413d03bd
  41a060:	mov    ch,0xfc
  41a062:	sbb    esi,ebp
  41a064:	xchg   DWORD PTR [esi],esp
  41a066:	xchg   edi,eax
  41a067:	lea    esi,[edi-0x238ed311]
  41a06d:	pop    ds
  41a06e:	enter  0x310,0xf0
  41a072:	sbb    DWORD PTR [eax+0x2],esi
  41a075:	jo     0x41a0df
  41a077:	adc    esp,esi
  41a079:	aam    0xbd
  41a07b:	sar    DWORD PTR [ecx+0x65],0xf6
  41a07f:	loope  0x41a0dc
  41a081:	push   ebp
  41a082:	push   ebp
  41a083:	xchg   ecx,esp
  41a085:	(bad)  
  41a086:	rcl    BYTE PTR [edx-0x66],0x48
  41a08a:	retf   0x7767
  41a08d:	sub    al,0xdd
  41a08f:	xor    ebx,edi
  41a091:	jmp    0x41a09a
  41a093:	aas    
  41a094:	and    cl,BYTE PTR [ecx-0x7300925c]
  41a09a:	ficomp WORD PTR [edi]
  41a09c:	js     0x41a0d4
  41a09e:	xchg   DWORD PTR [esi+0x525b4b8],ebx
  41a0a4:	js     0x41a0fd
  41a0a6:	call   0x530e:0xf0f9f8b5
  41a0ad:	dec    eax
  41a0ae:	sbb    eax,0xdb0ca402
  41a0b3:	push   ss
  41a0b4:	shl    ah,0xe2
  41a0b7:	xchg   edi,eax
  41a0b8:	cmp    DWORD PTR ds:0x3cbd444d,0xffffffd7
  41a0bf:	scas   al,BYTE PTR es:[edi]
  41a0c0:	jo     0x41a057
  41a0c2:	scas   eax,DWORD PTR es:[edi]
  41a0c3:	sub    bh,BYTE PTR [edi]
  41a0c5:	leave  
  41a0c6:	push   esp
  41a0c7:	and    edx,esp
  41a0c9:	mov    ah,0xa2
  41a0cb:	rcl    BYTE PTR [esi+0x72],1
  41a0ce:	popf   
  41a0cf:	sti    
  41a0d0:	jmp    0x89a6e4a0
  41a0d5:	xchg   eax,ecx
  41a0d7:	dec    ecx
  41a0d8:	sub    cl,BYTE PTR [ebp-0x75]
  41a0db:	fstp   DWORD PTR [esp+ecx*4]
  41a0de:	cmp    esp,edi
  41a0e0:	stc    
  41a0e1:	mov    eax,ds:0xf42cdf72
  41a0e6:	add    DWORD PTR [esi-0x6ff77933],ebp
  41a0ec:	inc    eax
  41a0ed:	mov    esi,0x4455ab0a
  41a0f2:	fistp  WORD PTR [esi]
  41a0f4:	addr16 test eax,0x4368de43
  41a0fa:	loopne 0x41a115
  41a0fc:	mov    edi,0xf0a8d537
  41a101:	xor    ah,BYTE PTR [esi]
  41a103:	jo     0x41a159
  41a105:	adc    BYTE PTR [ecx],al
  41a107:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a109:	xchg   ebx,eax
  41a10a:	call   0xab20169d
  41a10f:	and    BYTE PTR [eax+0x26f3ddd3],ah
  41a115:	mov    cl,0xa7
  41a117:	aam    0xcf
  41a119:	mov    dl,0xd0
  41a11b:	outs   dx,BYTE PTR ds:[esi]
  41a11c:	out    dx,eax
  41a11d:	pop    edx
  41a11e:	sbb    edi,edi
  41a120:	dec    ebx
  41a121:	inc    edi
  41a122:	push   es
  41a123:	outs   dx,DWORD PTR ds:[esi]
  41a124:	push   ebx
  41a125:	jge    0x41a15e
  41a127:	sti    
  41a128:	mul    DWORD PTR [eax+0x5e]
  41a12b:	cld    
  41a12c:	ret    
  41a12d:	mov    esp,eax
  41a12f:	inc    edx
  41a130:	iret   
  41a131:	fnstsw WORD PTR [edi+esi*8+0x2d]
  41a135:	xchg   ecx,eax
  41a136:	sbb    cl,cl
  41a138:	sahf   
  41a139:	inc    edi
  41a13a:	out    dx,eax
  41a13b:	stc    
  41a13c:	pop    ebx
  41a13d:	jecxz  0x41a0c0
  41a13f:	in     al,dx
  41a140:	mov    ch,0xc7
  41a142:	or     eax,0xf067292f
  41a147:	xlat   BYTE PTR ds:[ebx]
  41a148:	mov    bh,0x5d
  41a14a:	inc    eax
  41a14b:	cmp    al,0xf9
  41a14d:	in     eax,0x20
  41a14f:	test   eax,0x1d2924dd
  41a154:	xchg   esp,eax
  41a155:	sti    
  41a156:	pop    eax
  41a157:	ds in  al,0x35
  41a15a:	jecxz  0x41a11f
  41a15c:	cwde   
  41a15d:	icebp  
  41a15e:	xor    cl,BYTE PTR [ecx-0x30ca76ca]
  41a164:	shl    BYTE PTR [edx+ecx*8],0xcd
  41a168:	dec    eax
  41a169:	dec    ebx
  41a16a:	out    0xe,eax
  41a16c:	inc    edi
  41a16d:	or     edi,DWORD PTR [edi+0x14]
  41a170:	cld    
  41a171:	adc    BYTE PTR [ebp+0x5a],al
  41a174:	aas    
  41a175:	(bad)  
  41a177:	js     0x41a184
  41a179:	out    dx,al
  41a17a:	and    esp,DWORD PTR ds:0x94a1
  41a17f:	xor    eax,0x2bf5c05f
  41a184:	xchg   DWORD PTR [edx+0x75083e6a],ebx
  41a18a:	rcr    bl,1
  41a18c:	call   0x6e66b18d
  41a191:	call   0xc5b01dd7
  41a196:	(bad)  
  41a197:	cmp    al,0x69
  41a199:	shr    BYTE PTR [eax+0x5c],cl
  41a19c:	or     cl,BYTE PTR ds:0x9bd95328
  41a1a2:	in     eax,dx
  41a1a3:	jmp    0x41a13c
  41a1a5:	ror    cl,cl
  41a1a7:	mov    edx,0x8ad18b3f
  41a1ac:	(bad)  
  41a1ad:	cmp    ebx,esi
  41a1af:	in     al,dx
  41a1b0:	xchg   esi,eax
  41a1b1:	mov    dl,0x28
  41a1b3:	mov    edi,0xc37c6a94
  41a1b8:	rcl    BYTE PTR [ebp+0x8],1
  41a1bb:	ss mov esi,0xeeed3315
  41a1c1:	shl    bh,cl
  41a1c3:	adc    edx,DWORD PTR [edx+edi*4-0x248d814f]
  41a1ca:	mov    bp,0x3e65
  41a1ce:	adc    dh,BYTE PTR [eax+edx*1]
  41a1d1:	hlt    
  41a1d2:	xchg   ecx,eax
  41a1d3:	jb     0x41a1a8
  41a1d5:	(bad)  
  41a1d6:	rcl    DWORD PTR [eax-0x5c5129],cl
  41a1dc:	ins    BYTE PTR es:[edi],dx
  41a1dd:	pop    ebx
  41a1de:	mov    edx,ds
  41a1e0:	in     al,0x5a
  41a1e2:	dec    ebx
  41a1e3:	call   0x173a:0x77d48d71
  41a1ea:	adc    DWORD PTR [eax+0x734acb6d],edi
  41a1f0:	mov    ecx,DWORD PTR [ebx-0x6674e74d]
  41a1f6:	enter  0xab9c,0xc3
  41a1fa:	adc    edi,DWORD PTR [eax-0x2f]
  41a1fd:	in     al,dx
  41a1fe:	stos   DWORD PTR es:[edi],eax
  41a1ff:	imul   ebx,DWORD PTR [esi-0x63],0x32a0341c
  41a206:	lods   al,BYTE PTR ds:[esi]
  41a207:	adc    edi,DWORD PTR [eax+0x6]
  41a20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a20b:	inc    BYTE PTR [eax-0x65]
  41a20e:	icebp  
  41a20f:	retf   
  41a210:	push   0xffffff83
  41a212:	pop    eax
  41a213:	fimul  DWORD PTR [eax]
  41a215:	scas   eax,DWORD PTR es:[edi]
  41a216:	sbb    DWORD PTR [edi+0x153f5a05],esi
  41a21c:	jmp    0x6de9af1e
  41a221:	cwde   
  41a222:	or     DWORD PTR [ebp-0x6e],ecx
  41a225:	or     bh,BYTE PTR [ebx-0x4a]
  41a228:	data16 stc 
  41a22a:	cmp    al,0x72
  41a22c:	xchg   edx,eax
  41a22d:	lea    ebx,ds:0x4919dd35
  41a233:	push   0xfffffff3
  41a235:	fbld   TBYTE PTR [eax-0x6]
  41a238:	stc    
  41a239:	gs (bad) 
  41a23c:	in     al,0x23
  41a23e:	mov    edx,0xe7c1318d
  41a243:	dec    esp
  41a244:	in     eax,0x43
  41a246:	shl    DWORD PTR [ecx],cl
  41a248:	dec    ecx
  41a249:	sti    
  41a24a:	mov    dl,0x2d
  41a24c:	arpl   WORD PTR [ecx+0x68],si
  41a24f:	cmp    ch,BYTE PTR [eax+edi*4-0x31]
  41a253:	addr16 jne 0x41a239
  41a256:	out    dx,eax
  41a257:	xchg   ebp,eax
  41a258:	dec    ebp
  41a259:	push   esp
  41a25a:	call   0x2e47:0x9fb36bdd
  41a261:	ds cdq 
  41a263:	push   ebx
  41a264:	leave  
  41a265:	xchg   esi,eax
  41a266:	jb     0x41a26f
  41a268:	sbb    ecx,esi
  41a26a:	cli    
  41a26b:	(bad)  
  41a26c:	or     eax,0xa4876199
  41a271:	pop    ds
  41a272:	ficom  WORD PTR [ebx-0x20c7b00a]
  41a278:	mov    ds:0x4b41d056,al
  41a27d:	sbb    bl,cl
  41a27f:	inc    ebp
  41a280:	add    DWORD PTR [edi-0x3a16b192],ecx
  41a286:	outs   dx,DWORD PTR ds:[esi]
  41a287:	push   ebp
  41a288:	out    0x7b,eax
  41a28a:	jl     0x41a2aa
  41a28c:	test   eax,0x18812bd3
  41a291:	stos   DWORD PTR es:[edi],eax
  41a292:	fiadd  WORD PTR [edi-0x3715aae]
  41a298:	adc    al,BYTE PTR [ecx]
  41a29a:	clc    
  41a29b:	sbb    cl,BYTE PTR [eax+esi*1-0x36]
  41a29f:	dec    ecx
  41a2a0:	cmp    esi,DWORD PTR [ebx+0x6c]
  41a2a3:	xlat   BYTE PTR ds:[ebx]
  41a2a4:	popa   
  41a2a5:	sti    
  41a2a6:	test   eax,0xf3124f79
  41a2ab:	test   DWORD PTR [ebp-0x26],eax
  41a2ae:	and    edx,ebp
  41a2b0:	xchg   BYTE PTR [edi+ebp*2-0x259028e7],ah
  41a2b7:	pop    ebp
  41a2b8:	bound  ecx,QWORD PTR [ecx-0x1c]
  41a2bb:	imul   edi,DWORD PTR [esi],0x58ed157e
  41a2c1:	push   eax
  41a2c2:	jns    0x41a2ba
  41a2c4:	into   
  41a2c5:	sbb    al,0x3f
  41a2c7:	xchg   esi,edi
  41a2c9:	daa    
  41a2ca:	and    edx,DWORD PTR [ecx]
  41a2cc:	jmp    0x41a286
  41a2ce:	push   es
  41a2cf:	shl    ebx,0xc5
  41a2d2:	daa    
  41a2d3:	jb     0x41a2f2
  41a2d5:	sub    ah,dh
  41a2d7:	nop
  41a2d8:	cmp    BYTE PTR [ebx+0x11],0x71
  41a2dc:	lds    edi,FWORD PTR [edi+0x6c]
  41a2df:	mov    ebx,0xe1852bd3
  41a2e4:	jg     0x41a294
  41a2e6:	ret    
  41a2e7:	je     0x41a287
  41a2e9:	dec    esp
  41a2ea:	stos   BYTE PTR es:[edi],al
  41a2eb:	xchg   edi,eax
  41a2ec:	xor    bl,BYTE PTR [esi-0x42d538bd]
  41a2f2:	sbb    ch,bl
  41a2f4:	pop    esi
  41a2f5:	call   0x2d79:0x5b53dc71
  41a2fc:	mov    dl,0x71
  41a2fe:	sti    
  41a2ff:	xor    bl,BYTE PTR [edx-0x450b074b]
  41a305:	dec    ebx
  41a306:	push   0x1b
  41a308:	or     esp,DWORD PTR [eax-0x23e63ce4]
  41a30e:	fs inc ebp
  41a310:	cdq    
  41a311:	push   esp
  41a312:	and    ebp,edx
  41a314:	adc    al,0x84
  41a316:	jo     0x41a36e
  41a318:	mov    esp,ebx
  41a31a:	cmc    
  41a31b:	sub    al,BYTE PTR [edi+edi*2-0x42dbb291]
  41a322:	or     DWORD PTR [ebx+0x35],esi
  41a325:	out    0x78,al
  41a327:	or     esi,ecx
  41a329:	gs push es
  41a32b:	ret    0xf2d7
  41a32e:	imul   eax,DWORD PTR [esi-0x6ae23f83],0xffffffb0
  41a335:	mov    al,ds:0xffa12e4f
  41a33a:	xchg   BYTE PTR [ebx-0x37],cl
  41a33d:	mov    ah,0xb
  41a33f:	scas   al,BYTE PTR es:[edi]
  41a340:	sbb    edx,DWORD PTR [ecx-0x30]
  41a343:	push   esi
  41a344:	clc    
  41a345:	arpl   WORD PTR [eax-0x1],ax
  41a348:	das    
  41a349:	mov    bh,0x7e
  41a34b:	rcr    BYTE PTR [ebx+0x59a5bb74],1
  41a351:	xor    ch,BYTE PTR ds:0x8aeca383
  41a357:	and    eax,0x756feb28
  41a35c:	cwde   
  41a35d:	test   al,0xcf
  41a35f:	jae    0x41a328
  41a361:	out    0xc3,eax
  41a363:	adc    eax,0xb4d446ba
  41a368:	sbb    DWORD PTR [eax-0x34],ebp
  41a36b:	sbb    BYTE PTR [ebp+0x74d01b78],dh
  41a371:	fcmovbe st,st(3)
  41a373:	sub    al,0x60
  41a375:	fistp  QWORD PTR [edi-0x6e9b4140]
  41a37b:	stos   BYTE PTR es:[edi],al
  41a37c:	sbb    edx,edi
  41a37e:	and    DWORD PTR [edi+0x7f4e2cf2],edx
  41a384:	rol    BYTE PTR [ecx-0x72daeaad],1
  41a38a:	jno    0x41a382
  41a38c:	jl     0x41a396
  41a38e:	cmc    
  41a38f:	lods   al,BYTE PTR ds:[esi]
  41a390:	mov    eax,ds:0x514726f3
  41a395:	popa   
  41a396:	push   esi
  41a397:	and    DWORD PTR [ebp-0x5d54c25f],eax
  41a39d:	repnz repz stc 
  41a3a0:	push   0xffffffdc
  41a3a2:	cmp    BYTE PTR [edi-0x1b],al
  41a3a5:	(bad)  
  41a3a6:	lock mov ds:0x759ceb39,al
  41a3ac:	sub    eax,0x1c5019f2
  41a3b1:	gs jg  0x41a40d
  41a3b4:	inc    ebx
  41a3b5:	inc    ebx
  41a3b6:	mov    eax,0x3da29e2
  41a3bb:	xor    al,0x7c
  41a3bd:	call   0x8d61:0x70a6e08d
  41a3c4:	loope  0x41a359
  41a3c6:	jp     0x41a43f
  41a3c8:	lock enter 0xd1f2,0xd4
  41a3cd:	inc    ecx
  41a3ce:	imul   ebx
  41a3d0:	out    dx,eax
  41a3d1:	jb     0x41a39e
  41a3d3:	inc    ebx
  41a3d4:	jmp    0xf3af9029
  41a3d9:	adc    al,0x45
  41a3db:	sub    BYTE PTR [esi+0x3f],bh
  41a3de:	(bad)  
  41a3df:	xlat   BYTE PTR ds:[ebx]
  41a3e0:	xor    DWORD PTR [edi-0x6d],0x7
  41a3e4:	popa   
  41a3e5:	adc    DWORD PTR [ecx],0x79
  41a3e8:	es cmp edx,esp
  41a3eb:	aad    0xa2
  41a3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ee:	data16 jns 0x41a3c2
  41a3f1:	pop    edx
  41a3f2:	and    DWORD PTR [edi+0xd79e36e],0x43da0d
  41a3fc:	lds    ebp,FWORD PTR [esp-0x672f5b88]
  41a403:	test   DWORD PTR [esi-0x6d60fd97],0x841a1ce9
  41a40d:	xchg   edx,eax
  41a40e:	sbb    BYTE PTR [ebp+ebx*4+0x7d],0x3
  41a413:	push   ss
  41a414:	mov    ecx,0x663cc362
  41a419:	xor    DWORD PTR [ebx-0x4e],edi
  41a41c:	popf   
  41a41d:	jg     0x41a3a9
  41a41f:	je     0x41a3e8
  41a421:	cmp    dl,bh
  41a423:	outs   dx,BYTE PTR ds:[esi]
  41a424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a425:	mov    WORD PTR [eax+0x2a],ss
  41a428:	imul   edi,DWORD PTR [edx-0x21],0x65
  41a42c:	aam    0x6e
  41a42e:	pop    ds
  41a42f:	repz xchg edi,eax
  41a431:	int3   
  41a432:	lea    esi,[edi-0x4e18723]
  41a438:	lods   al,BYTE PTR ds:[esi]
  41a439:	push   edx
  41a43a:	aam    0xfa
  41a43c:	mov    ah,0xdd
  41a43e:	cli    
  41a43f:	call   0x4d0f:0x1959084c
  41a446:	dec    esp
  41a447:	push   ss
  41a448:	mov    ah,0x40
  41a44a:	add    DWORD PTR [ecx-0x7bd43abe],eax
  41a450:	jno    0x41a429
  41a452:	jnp    0x41a469
  41a454:	fwait
  41a455:	sub    BYTE PTR [ecx+0x17],0xb2
  41a459:	mov    ah,0x80
  41a45b:	fldenv [edi-0x66]
  41a45e:	sbb    esp,DWORD PTR [edx+0x7]
  41a461:	test   eax,0xe76025a6
  41a466:	lods   al,BYTE PTR ds:[esi]
  41a467:	dec    esi
  41a468:	mov    ebp,0x8bbe1b97
  41a46d:	adc    al,0x17
  41a46f:	xlat   BYTE PTR gs:[ebx]
  41a471:	lock inc eax
  41a473:	fild   WORD PTR [eax-0x6a740b43]
  41a479:	inc    BYTE PTR [edi-0x37eb188b]
  41a47f:	jecxz  0x41a4a7
  41a481:	pop    eax
  41a482:	cwde   
  41a483:	(bad)  
  41a484:	mov    eax,0x5f271e13
  41a489:	aad    0x3d
  41a48b:	and    al,0x52
  41a48d:	mov    ecx,0x88747633
  41a492:	sub    ch,cl
  41a494:	lea    ebx,[esi+eiz*4-0x65]
  41a498:	sti    
  41a499:	clc    
  41a49a:	or     DWORD PTR [ebx],edx
  41a49c:	test   cl,cl
  41a49e:	mov    edx,DWORD PTR [edi]
  41a4a0:	std    
  41a4a1:	xor    al,0xaf
  41a4a3:	sub    eax,0x71577df8
  41a4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4a9:	mov    edx,0xa401629e
  41a4ae:	(bad)  
  41a4af:	xchg   esp,eax
  41a4b0:	mov    edx,0xfa51bf09
  41a4b5:	jl     0x41a446
  41a4b7:	inc    ecx
  41a4b8:	pusha  
  41a4b9:	xchg   edi,eax
  41a4ba:	test   esi,edi
  41a4bc:	mov    cl,0x20
  41a4be:	mov    ds:0xd8b9fcdb,al
  41a4c3:	popf   
  41a4c4:	mov    ecx,0x71ed98d6
  41a4c9:	sbb    al,0x26
  41a4cb:	in     eax,0xfa
  41a4cd:	dec    esi
  41a4ce:	ror    edx,1
  41a4d0:	mov    dl,0x21
  41a4d2:	pusha  
  41a4d3:	lds    ebx,FWORD PTR [ebx+0x39]
  41a4d6:	out    dx,eax
  41a4d7:	jo     0x41a4be
  41a4d9:	in     eax,dx
  41a4da:	inc    ebp
  41a4db:	or     DWORD PTR [ebx+0x21],esi
  41a4de:	aam    0xce
  41a4e0:	mov    ds:0x66f09db9,eax
  41a4e5:	popf   
  41a4e6:	stc    
  41a4e7:	cmp    ah,BYTE PTR ss:[ecx+0x6aa73668]
  41a4ee:	push   ss
  41a4ef:	lods   al,BYTE PTR ds:[esi]
  41a4f0:	leave  
  41a4f1:	aas    
  41a4f2:	fsubr  st,st(3)
  41a4f4:	nop
  41a4f5:	sub    DWORD PTR [ebx],ebp
  41a4f7:	dec    esi
  41a4f8:	repz inc ecx
  41a4fa:	mov    ebx,0xd5d0e107
  41a4ff:	jns    0x41a4dc
  41a501:	xchg   edx,eax
  41a502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a503:	adc    esp,DWORD PTR [edi]
  41a505:	sbb    ch,0x24
  41a508:	inc    ebx
  41a509:	sbb    eax,0xd4415b6a
  41a50e:	inc    eax
  41a50f:	cli    
  41a510:	daa    
  41a511:	stos   DWORD PTR es:[edi],eax
  41a512:	mov    dl,0x45
  41a514:	in     eax,dx
  41a515:	sub    bh,cl
  41a517:	xor    ah,BYTE PTR [eax+0x4b]
  41a51a:	(bad)  
  41a51b:	or     BYTE PTR [edx],al
  41a51d:	shl    BYTE PTR [ebx],cl
  41a51f:	add    bl,BYTE PTR [edx+0x47]
  41a522:	aaa    
  41a523:	data16 in al,dx
  41a525:	jecxz  0x41a519
  41a527:	jno    0x41a56d
  41a529:	aad    0xc1
  41a52b:	mov    esi,0xab5fee7b
  41a530:	js     0x41a4d5
  41a532:	cli    
  41a533:	xlat   BYTE PTR ds:[ebx]
  41a534:	xchg   esp,eax
  41a535:	jl     0x41a5a2
  41a537:	adc    edi,esp
  41a539:	sbb    eax,0x92eeee01
  41a53e:	stos   DWORD PTR es:[edi],eax
  41a53f:	push   edx
  41a540:	(bad)  
  41a541:	pop    DWORD PTR [edi+0x11]
  41a544:	jecxz  0x41a4e6
  41a546:	test   DWORD PTR [edx+0x55],edx
  41a549:	xchg   edi,eax
  41a54a:	jmp    0x9ac3:0xbaa5d305
  41a551:	push   ds
  41a552:	jecxz  0x41a56b
  41a554:	fwait
  41a555:	sub    DWORD PTR [edx],eax
  41a557:	lods   eax,DWORD PTR ds:[esi]
  41a558:	add    DWORD PTR [edx+eax*4+0x2],esi
  41a55c:	xor    DWORD PTR [esi+ebx*8-0x36a23c51],edx
  41a563:	jge    0x41a501
  41a565:	mov    dl,0x6e
  41a567:	mov    ch,0x50
  41a569:	adc    ebx,DWORD PTR [ebx+eiz*4]
  41a56c:	jmp    0x41a540
  41a56e:	out    dx,al
  41a56f:	sbb    eax,0xdd31d77a
  41a574:	dec    eax
  41a575:	jle    0x41a511
  41a577:	ret    
  41a578:	jmp    0x3871:0xb451d6c2
  41a57f:	jl     0x41a55d
  41a581:	mov    eax,DWORD PTR [ebp-0x5d4d300f]
  41a587:	cmp    eax,0xe0c6ba9a
  41a58c:	out    0x98,eax
  41a58e:	inc    eax
  41a58f:	fs push ebx
  41a591:	pushf  
  41a592:	imul   ebp,ecx,0xaf113f8e
  41a598:	mov    al,ds:0xf2bb159b
  41a59d:	cmp    cl,bl
  41a59f:	imul   BYTE PTR [ebx-0xa]
  41a5a2:	not    DWORD PTR [edi]
  41a5a4:	hlt    
  41a5a5:	mov    bh,0x91
  41a5a7:	je     0x41a59c
  41a5a9:	ins    BYTE PTR es:[edi],dx
  41a5aa:	sbb    eax,0xb4d475b8
  41a5af:	ret    0xba3a
  41a5b2:	les    esi,FWORD PTR [ebp-0x67af57b]
  41a5b8:	hlt    
  41a5b9:	xlat   BYTE PTR ds:[ebx]
  41a5ba:	jno    0x41a5a8
  41a5bc:	sbb    DWORD PTR [ebx],0x31
  41a5bf:	or     bh,ah
  41a5c1:	repnz add ch,BYTE PTR [esi+0x21d9d51]
  41a5c8:	xor    DWORD PTR [edx],0xffffff86
  41a5cb:	pop    edx
  41a5cc:	das    
  41a5cd:	xchg   esp,eax
  41a5ce:	pop    ebp
  41a5cf:	cwde   
  41a5d0:	push   ecx
  41a5d1:	(bad)  
  41a5d2:	in     eax,0xf1
  41a5d4:	jmp    0xc8af12f3
  41a5d9:	cmp    cl,bl
  41a5db:	ds jb  0x41a567
  41a5de:	jp     0x41a574
  41a5e0:	mov    eax,ds:0xdaed8537
  41a5e5:	inc    edx
  41a5e6:	(bad)  
  41a5e7:	into   
  41a5e8:	in     eax,dx
  41a5e9:	fmul   st(7),st
  41a5eb:	inc    esp
  41a5ec:	leave  
  41a5ed:	fcomi  st,st(2)
  41a5ef:	sub    bh,ah
  41a5f1:	ja     0x41a600
  41a5f3:	int3   
  41a5f4:	inc    ebp
  41a5f5:	inc    edi
  41a5f6:	adc    BYTE PTR [eax+eax*2-0x47],al
  41a5fa:	nop
  41a5fb:	out    0x8,eax
  41a5fd:	sbb    DWORD PTR [eax-0x1],0x28
  41a601:	jae    0x41a5a0
  41a603:	adc    BYTE PTR [edx],dh
  41a605:	outs   dx,DWORD PTR ds:[esi]
  41a606:	xor    DWORD PTR [edi-0x60fa861a],0x72f1a046
  41a610:	not    DWORD PTR [esi-0x165606ba]
  41a616:	call   0xc0f5f818
  41a61b:	aad    0x45
  41a61d:	cmp    esi,esp
  41a61f:	add    bh,BYTE PTR [ecx-0xb]
  41a622:	stc    
  41a623:	jp     0x41a698
  41a625:	enter  0x2438,0x80
  41a629:	mov    BYTE PTR [ecx-0x4],dl
  41a62c:	stos   DWORD PTR es:[edi],eax
  41a62d:	or     esi,DWORD PTR [esi-0x3e]
  41a630:	out    0x21,eax
  41a632:	pop    esi
  41a633:	xor    DWORD PTR [esi+0x1230d309],ecx
  41a639:	std    
  41a63a:	add    DWORD PTR [ebx+0x46bda742],ebx
  41a640:	rcl    BYTE PTR [esi-0x5cd2b177],0x30
  41a647:	pop    es
  41a648:	dec    esi
  41a649:	(bad)  
  41a64a:	fidiv  WORD PTR [ebx-0x7d]
  41a64d:	inc    ecx
  41a64e:	in     eax,dx
  41a64f:	clc    
  41a650:	jno    0x41a667
  41a652:	fldcw  WORD PTR [ebp+0x15]
  41a655:	sub    eax,0xb6837a1
  41a65a:	mov    dl,0xc5
  41a65c:	mov    esp,0xc5eddfc7
  41a661:	sbb    eax,0xd123b717
  41a666:	clc    
  41a667:	clc    
  41a668:	je     0x41a634
  41a66a:	pop    edi
  41a66b:	(bad)  
  41a66c:	xchg   ebx,eax
  41a66d:	popa   
  41a66e:	sahf   
  41a66f:	xor    ah,al
  41a671:	sbb    bh,bl
  41a673:	clc    
  41a674:	adc    eax,0x417b9689
  41a679:	xor    bl,0x58
  41a67c:	jg     0x41a653
  41a67e:	popf   
  41a67f:	pop    es
  41a680:	jge    0x41a6c7
  41a682:	into   
  41a683:	(bad)  
  41a684:	cmp    BYTE PTR [ecx-0x75],dh
  41a687:	ds jle 0x41a6c2
  41a68a:	mov    edx,0x28e4423b
  41a68f:	inc    ebp
  41a690:	aad    0x2f
  41a692:	dec    edx
  41a693:	sbb    BYTE PTR [ebp-0x73],cl
  41a696:	push   cs
  41a697:	inc    edx
  41a698:	mov    bl,dh
  41a69a:	jae    0x41a6e6
  41a69c:	xor    bh,bh
  41a69e:	sub    eax,DWORD PTR [ecx+0x8]
  41a6a1:	mov    esi,0xe85d8b8b
  41a6a6:	inc    ebx
  41a6a7:	jb     0x41a639
  41a6a9:	pushf  
  41a6aa:	or     DWORD PTR [ebp+edi*2+0x34],ecx
  41a6ae:	dec    esi
  41a6af:	mov    cs,ebx
  41a6b1:	mov    fs,WORD PTR [edx+0x9f732f7]
  41a6b7:	mov    edx,0xf20d380
  41a6bc:	inc    esp
  41a6bd:	or     BYTE PTR [ecx],al
  41a6bf:	std    
  41a6c0:	mov    cl,0x75
  41a6c2:	jbe    0x41a71f
  41a6c4:	add    al,0x90
  41a6c6:	outs   dx,DWORD PTR ds:[esi]
  41a6c7:	pop    es
  41a6c8:	add    ecx,ebx
  41a6ca:	mov    ah,0x61
  41a6cc:	xor    eax,DWORD PTR [edi-0x21]
  41a6cf:	nop
  41a6d0:	push   ecx
  41a6d1:	sbb    BYTE PTR [ecx-0x4aa3fef9],al
  41a6d7:	cdq    
  41a6d8:	dec    eax
  41a6d9:	adc    al,0x81
  41a6db:	loope  0x41a71d
  41a6dd:	fstp   TBYTE PTR [esi]
  41a6df:	xor    al,0x78
  41a6e1:	adc    DWORD PTR ds:0xc2eb70fd,0xeec10185
  41a6eb:	jbe    0x41a67a
  41a6ed:	scas   eax,DWORD PTR es:[edi]
  41a6ee:	xor    ch,BYTE PTR [ebx]
  41a6f0:	es inc ebx
  41a6f2:	inc    edx
  41a6f3:	jl     0x41a726
  41a6f5:	push   es
  41a6f6:	rcl    WORD PTR [ebx-0x480cb990],0xaa
  41a6fe:	sub    esp,edx
  41a700:	test   DWORD PTR [edi+0x37],ebp
  41a703:	hlt    
  41a704:	add    DWORD PTR [esi+0x1bd84a2],0xdd95dbda
  41a70e:	adc    esi,DWORD PTR [edi+0x7c]
  41a711:	sahf   
  41a712:	add    eax,DWORD PTR [eax+0x55208332]
  41a718:	xchg   ebp,eax
  41a719:	pop    ecx
  41a71a:	or     DWORD PTR [ecx+edx*4],eax
  41a71d:	mov    bl,0x2
  41a71f:	mov    bl,0x36
  41a721:	lods   eax,DWORD PTR ds:[esi]
  41a722:	(bad)  
  41a723:	call   0x54eeb800
  41a728:	lods   eax,DWORD PTR ds:[esi]
  41a729:	xor    eax,0x2854ded7
  41a72e:	xor    al,0x25
  41a730:	add    ah,BYTE PTR [ebx+edx*4-0x13cfeae6]
  41a737:	dec    eax
  41a738:	fldcw  WORD PTR [ecx]
  41a73a:	ins    BYTE PTR es:[edi],dx
  41a73b:	xor    al,0x3b
  41a73d:	mov    DWORD PTR [esi-0x7da334ce],0x3084c4e3
  41a747:	xor    BYTE PTR [edx-0x5815c9cd],bl
  41a74d:	mov    ds:0x5d97b87a,al
  41a752:	mov    ds:0x9d4bbe39,eax
  41a757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a758:	test   BYTE PTR [edx+0x65],ch
  41a75b:	mov    esi,0xd58f47a3
  41a760:	mov    eax,ds:0x990fed07
  41a765:	cdq    
  41a766:	clc    
  41a767:	test   DWORD PTR [eax],ecx
  41a769:	and    edx,DWORD PTR [ecx]
  41a76b:	lahf   
  41a76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a76d:	(bad)  
  41a76e:	or     ebp,DWORD PTR [edx-0x75]
  41a771:	ffree  st(0)
  41a773:	pop    edi
  41a774:	gs push cs
  41a776:	popf   
  41a777:	sub    eax,0xa8787fc5
  41a77c:	out    0xb7,al
  41a77e:	xchg   ah,dh
  41a780:	jge    0x41a7fd
  41a782:	call   0x503c:0x9abdae49
  41a789:	or     dh,dl
  41a78b:	arpl   ax,cx
  41a78d:	mov    dh,0xa1
  41a78f:	push   ss
  41a790:	js     0x41a775
  41a792:	xchg   DWORD PTR [eax+ebp*2-0x4e4a09bc],edi
  41a799:	arpl   WORD PTR [eax],sp
  41a79b:	test   eax,0xcf2c6c05
  41a7a0:	(bad)  
  41a7a1:	lock add BYTE PTR [ecx],dh
  41a7a4:	daa    
  41a7a5:	fmul   QWORD PTR [edx-0x5e]
  41a7a8:	mov    ds:0xfa431eca,eax
  41a7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ae:	and    al,0xbe
  41a7b0:	mov    edi,0x3788012f
  41a7b5:	lock inc ebx
  41a7b7:	ficomp WORD PTR [ebx-0x2562a5b9]
  41a7bd:	jp     0x41a778
  41a7bf:	push   ebx
  41a7c0:	call   0x2980:0x99fbef69
  41a7c7:	lock mov DWORD PTR [esi+0x44],0x7ff25b70
  41a7cf:	sahf   
  41a7d0:	pop    ss
  41a7d1:	fbld   TBYTE PTR [edi-0x4]
  41a7d4:	aaa    
  41a7d5:	mov    ecx,0x44b53fb5
  41a7da:	das    
  41a7db:	adc    ebp,0xbae2a351
  41a7e1:	add    DWORD PTR [ebx-0x19],0x59
  41a7e5:	pop    edx
  41a7e6:	and    al,0xba
  41a7e8:	push   esi
  41a7e9:	sbb    eax,0xfa8c77df
  41a7ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ef:	je     0x41a77a
  41a7f1:	sub    al,0x5d
  41a7f3:	inc    ebp
  41a7f4:	mov    cx,0x3459
  41a7f8:	dec    ebp
  41a7f9:	aaa    
  41a7fa:	jb     0x41a7a8
  41a7fc:	sub    edi,DWORD PTR [esi+0x7e]
  41a7ff:	mov    al,ds:0xd3826f05
  41a804:	or     BYTE PTR [ecx+0x23],ch
  41a807:	pop    edx
  41a808:	sar    BYTE PTR [esi+0x7f4d056e],cl
  41a80e:	jg     0x41a83b
  41a810:	cmp    al,0x18
  41a812:	(bad)  
  41a813:	jp     0x41a79b
  41a815:	xor    BYTE PTR [esi],0x6c
  41a818:	pop    ebx
  41a819:	lea    eax,[eax+0x66a44524]
  41a81f:	or     DWORD PTR [eax+0x2c],ebp
  41a822:	fistp  DWORD PTR [edx]
  41a824:	add    dh,BYTE PTR [eax+edx*8+0x44]
  41a828:	inc    edi
  41a829:	out    0x84,al
  41a82b:	xchg   esi,eax
  41a82c:	sti    
  41a82d:	mov    dl,0xa0
  41a82f:	cmc    
  41a830:	out    dx,eax
  41a831:	pop    eax
  41a832:	repz xor eax,0x496bfdc8
  41a838:	int    0x74
  41a83a:	xchg   esp,eax
  41a83b:	pop    esi
  41a83c:	add    bl,BYTE PTR [edi+0x14]
  41a83f:	and    BYTE PTR [ecx],cl
  41a841:	xor    eax,0xf7d0b22
  41a846:	or     esi,DWORD PTR [ecx-0x80]
  41a849:	push   ecx
  41a84a:	push   esi
  41a84b:	iret   
  41a84c:	adc    al,0xc8
  41a84e:	mov    edi,DWORD PTR [edx+0x52]
  41a851:	outs   dx,DWORD PTR ds:[esi]
  41a852:	fadd   QWORD PTR [ebx-0x69556146]
  41a858:	mov    al,0xab
  41a85a:	jno    0x41a7ea
  41a85c:	xchg   esi,eax
  41a85d:	daa    
  41a85e:	adc    eax,0xeec6a0aa
  41a863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a865:	in     eax,0xe6
  41a867:	xchg   ebp,eax
  41a868:	sub    bl,al
  41a86a:	push   eax
  41a86b:	and    esi,DWORD PTR [edx-0x25]
  41a86e:	inc    BYTE PTR [ecx]
  41a870:	shr    DWORD PTR [ebp+0x6ca734c3],0xf8
  41a877:	xchg   edx,eax
  41a878:	jle    0x41a805
  41a87a:	lahf   
  41a87b:	test   DWORD PTR [edi+eax*4],eax
  41a87e:	les    edx,FWORD PTR ds:[esi+0x443bf789]
  41a885:	add    BYTE PTR [esi+0x2a],bh
  41a888:	sbb    cl,bl
  41a88a:	xor    BYTE PTR [ecx-0x25dbff07],ah
  41a890:	xchg   esi,eax
  41a891:	or     eax,0xf81b0ae4
  41a896:	leave  
  41a897:	cmp    ch,0x5d
  41a89a:	and    dl,BYTE PTR [edx+0x4ee5be8]
  41a8a0:	mov    ebx,0xb5e17012
  41a8a5:	jnp    0x41a8cf
  41a8a7:	add    esp,ecx
  41a8a9:	test   BYTE PTR [ecx+0x3],al
  41a8ac:	mov    WORD PTR [eax+0x60281dbf],ss
  41a8b2:	popf   
  41a8b3:	out    dx,eax
  41a8b4:	xchg   esi,eax
  41a8b5:	cmp    DWORD PTR [eax+0x568d2861],esi
  41a8bb:	or     dl,BYTE PTR [ecx-0x523ee4c3]
  41a8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c2:	sbb    bl,BYTE PTR [edx+0x10]
  41a8c5:	mov    bl,0x72
  41a8c7:	ret    
  41a8c8:	add    al,BYTE PTR [ebp+0x66]
  41a8cb:	in     eax,0xa0
  41a8cd:	xchg   ebx,eax
  41a8ce:	out    0x8d,eax
  41a8d0:	scas   eax,DWORD PTR es:[edi]
  41a8d1:	into   
  41a8d2:	fmul   DWORD PTR [esi-0x7f]
  41a8d5:	test   esi,0x364bfb53
  41a8db:	clc    
  41a8dc:	(bad)  
  41a8dd:	icebp  
  41a8de:	sbb    ch,dl
  41a8e0:	retf   0x677f
  41a8e3:	adc    DWORD PTR [edi+ebp*1],eax
  41a8e6:	lahf   
  41a8e7:	pop    esi
  41a8e8:	aam    0xf9
  41a8ea:	jle    0x41a879
  41a8ec:	clc    
  41a8ed:	dec    esp
  41a8ee:	xchg   ecx,eax
  41a8ef:	outs   dx,DWORD PTR ds:[esi]
  41a8f0:	sub    dh,ah
  41a8f2:	call   0x6d2290b4
  41a8f7:	data16 mov al,ds:0x421482ed
  41a8fd:	mov    ah,0x6b
  41a8ff:	jecxz  0x41a8d6
  41a901:	addr16 daa 
  41a903:	fdiv   st,st(0)
  41a905:	ffreep st(5)
  41a907:	loop   0x41a8dc
  41a909:	ja     0x41a892
  41a90b:	cmp    DWORD PTR [edi-0x42],esp
  41a90e:	jmp    0x62ba:0x8f9ab852
  41a915:	enter  0xd899,0x71
  41a919:	pop    ebp
  41a91a:	lods   eax,DWORD PTR ds:[esi]
  41a91b:	mov    ?,WORD PTR [eax]
  41a91d:	sbb    eax,DWORD PTR [esp+esi*2]
  41a920:	sar    DWORD PTR [esp+eiz*4],cl
  41a923:	push   es
  41a924:	add    dh,al
  41a926:	imul   edi,DWORD PTR [ecx],0x4ed6d8a0
  41a92c:	fld1   
  41a92e:	xlat   BYTE PTR ds:[ebx]
  41a92f:	jle    0x41a90a
  41a931:	arpl   WORD PTR ds:0x13a36e9e,dx
  41a937:	je     0x41a912
  41a939:	in     eax,0x45
  41a93b:	push   ebp
  41a93c:	sbb    DWORD PTR [edi+0x49],edx
  41a93f:	push   ebx
  41a940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a941:	lds    esp,FWORD PTR [ebp+0x1a28676]
  41a947:	aaa    
  41a948:	inc    edi
  41a949:	sti    
  41a94a:	xchg   ecx,eax
  41a94b:	mov    ah,0x8c
  41a94d:	xchg   DWORD PTR [ebx-0x72],esp
  41a950:	inc    ecx
  41a951:	xchg   esp,eax
  41a952:	sub    esi,ebp
  41a954:	dec    ecx
  41a955:	xor    ah,ch
  41a957:	jmp    0x7588:0x212b68a0
  41a95e:	sbb    BYTE PTR [eax-0xf],al
  41a961:	sub    dl,BYTE PTR [esi+0x9888081]
  41a967:	or     eax,0x7fc9bcb0
  41a96c:	inc    eax
  41a96d:	sub    ebx,DWORD PTR [edx]
  41a96f:	pop    ebp
  41a970:	sub    eax,0xfb792f96
  41a975:	xchg   ecx,eax
  41a976:	adc    ebp,eax
  41a978:	push   0xe09a447c
  41a97d:	sub    eax,0x7e137b50
  41a982:	ds inc edx
  41a984:	inc    ebx
  41a985:	adc    al,0x5d
  41a987:	pop    esp
  41a988:	cmp    DWORD PTR [edx-0x38],ecx
  41a98b:	int    0x90
  41a98d:	lods   al,BYTE PTR ds:[esi]
  41a98e:	loope  0x41a972
  41a990:	imul   eax,DWORD PTR [edi],0x6d
  41a993:	jecxz  0x41a9af
  41a995:	pop    ss
  41a996:	sub    esp,DWORD PTR [eax+0x46]
  41a999:	aas    
  41a99a:	push   es
  41a99b:	(bad)  
  41a99c:	dec    edi
  41a99d:	test   eax,0xfa3ba535
  41a9a2:	xor    esi,DWORD PTR [ecx+0x253692]
  41a9a8:	pop    ecx
  41a9a9:	sub    esp,DWORD PTR [edi]
  41a9ab:	push   eax
  41a9ac:	add    ah,BYTE PTR [ebp-0x25]
  41a9af:	and    al,0xdf
  41a9b1:	jmp    0x41a938
  41a9b3:	add    eax,0x61c2fcb3
  41a9b8:	pop    ebx
  41a9b9:	cmp    dh,BYTE PTR [eax-0x37]
  41a9bc:	dec    ebp
  41a9bd:	mov    eax,ds:0x4ce5a73f
  41a9c2:	aad    0xf6
  41a9c4:	mov    edi,edi
  41a9c6:	lds    ecx,FWORD PTR [ecx-0x2363d95a]
  41a9cc:	add    dl,BYTE PTR [edi+0x6c]
  41a9cf:	stos   BYTE PTR es:[edi],al
  41a9d0:	pop    ebp
  41a9d1:	inc    ebp
  41a9d2:	rcr    DWORD PTR [esi+0x4f],0x9d
  41a9d6:	fimul  DWORD PTR [ecx]
  41a9d8:	enter  0xcfcc,0xb3
  41a9dc:	pop    edx
  41a9dd:	adc    eax,0x137ba9c
  41a9e2:	mov    ah,0x95
  41a9e4:	mov    ebx,0xac79530d
  41a9e9:	inc    edi
  41a9ea:	pushf  
  41a9eb:	adc    al,0xe
  41a9ed:	aas    
  41a9ee:	xchg   esp,eax
  41a9ef:	and    eax,0x12750966
  41a9f4:	sub    ecx,DWORD PTR [edi+0x285bbf87]
  41a9fa:	push   edi
  41a9fb:	dec    ecx
  41a9fc:	mov    eax,0x26db971
  41aa01:	(bad)  
  41aa02:	mov    dh,0x33
  41aa04:	xor    ch,BYTE PTR [edi]
  41aa06:	and    edx,DWORD PTR [ebp+0x448ea8bd]
  41aa0c:	andps  xmm6,XMMWORD PTR [ebp+0x15511ad3]
  41aa13:	adc    BYTE PTR [esi+ebp*8+0x7b],al
  41aa17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa18:	aam    0x6d
  41aa1a:	fstp   QWORD PTR [esi-0x282c494b]
  41aa20:	push   ebx
  41aa21:	fsubr  QWORD PTR [ecx-0x7702bb7b]
  41aa27:	jp     0x41a9d7
  41aa29:	ins    BYTE PTR es:[edi],dx
  41aa2a:	dec    edi
  41aa2b:	mov    WORD PTR [eax+0x4a],cs
  41aa2e:	and    ebp,DWORD PTR [ecx-0x5583e2b8]
  41aa34:	xor    al,0x3c
  41aa36:	xchg   esp,eax
  41aa37:	mov    BYTE PTR [edx-0x4d],al
  41aa3a:	mov    al,0xaa
  41aa3c:	cwde   
  41aa3d:	popf   
  41aa3e:	pop    ebx
  41aa3f:	add    eax,0x15bea52d
  41aa44:	ffreep st(1)
  41aa46:	stos   DWORD PTR es:[edi],eax
  41aa47:	xchg   ecx,eax
  41aa48:	jnp    0x41aa02
  41aa4a:	fidivr DWORD PTR [ecx+0x5dc0f18a]
  41aa50:	sbb    eax,0x634ba1fd
  41aa55:	sub    ah,ah
  41aa57:	cmp    ecx,ecx
  41aa59:	repz inc eax
  41aa5b:	xor    dh,BYTE PTR [ebx+0x5da3b2c9]
  41aa61:	mov    ds:0xd7408edb,al
  41aa66:	jbe    0x41aadd
  41aa68:	std    
  41aa69:	inc    ecx
  41aa6a:	or     edi,esp
  41aa6c:	es or  eax,0x9bf160bd
  41aa72:	jecxz  0x41aac9
  41aa74:	jne    0x41aa8f
  41aa76:	push   ebp
  41aa77:	push   ecx
  41aa78:	add    esp,DWORD PTR cs:[ecx]
  41aa7b:	or     al,0xc3
  41aa7d:	retf   0xf593
  41aa80:	ficomp WORD PTR [ecx+0x1eed6c57]
  41aa86:	stc    
  41aa87:	cwde   
  41aa88:	mov    al,ds:0x9a4642b9
  41aa8d:	nop
  41aa8e:	pushf  
  41aa8f:	xchg   ecx,eax
  41aa90:	rol    DWORD PTR [edi],1
  41aa92:	mov    ch,0xfb
  41aa94:	enter  0x5db3,0x33
  41aa98:	jo     0x41aa37
  41aa9a:	sahf   
  41aa9b:	xor    al,0xd
  41aa9d:	xlat   BYTE PTR ds:[ebx]
  41aa9e:	jnp    0x41aa6a
  41aaa0:	das    
  41aaa1:	call   0x86dbcfef
  41aaa6:	mov    al,ds:0xe4be5238
  41aaab:	(bad)  
  41aaad:	mov    ds:0xb734378d,eax
  41aab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab3:	cs inc ebx
  41aab5:	push   ds
  41aab6:	test   dl,ch
  41aab8:	mov    esi,0x10c64a95
  41aabd:	or     eax,0x173ec9de
  41aac2:	or     ebx,DWORD PTR [edi]
  41aac4:	lea    ecx,[esi+eiz*2-0x7f1741c4]
  41aacb:	pusha  
  41aacc:	retf   0x6277
  41aacf:	xchg   esi,eax
  41aad0:	add    cl,BYTE PTR [eax+ecx*1+0x1f]
  41aad4:	push   ecx
  41aad5:	fucomp st(4)
  41aad7:	xor    BYTE PTR [ebx+edi*4],al
  41aada:	and    eax,0x58e7d671
  41aadf:	xor    edx,DWORD PTR [ebp+0x55be717c]
  41aae5:	jno    0x41ab49
  41aae7:	jne    0x41aae2
  41aae9:	pop    ebp
  41aaea:	mov    edx,DWORD PTR [esp+esi*4-0x78]
  41aaee:	in     al,dx
  41aaef:	xlat   BYTE PTR ds:[ebx]
  41aaf0:	mov    esi,0x5ee578fc
  41aaf6:	xor    bh,BYTE PTR [eax-0x2def8fe5]
  41aafc:	lods   eax,DWORD PTR ds:[esi]
  41aafd:	loopne 0x41aaed
  41aaff:	xchg   edx,eax
  41ab00:	rol    BYTE PTR [esi+0x4],0xa1
  41ab04:	ins    DWORD PTR es:[edi],dx
  41ab05:	cld    
  41ab06:	sar    DWORD PTR [ecx-0x49446223],cl
  41ab0c:	sti    
  41ab0d:	and    ecx,esp
  41ab0f:	shl    DWORD PTR [edx+0x9],cl
  41ab12:	repnz sar DWORD PTR [ebx+0x433db3a2],0xad
  41ab1a:	xor    eax,0x54438da5
  41ab1f:	cmp    ah,BYTE PTR [edx-0x1c]
  41ab22:	xchg   edi,eax
  41ab23:	loopne 0x41ab5e
  41ab25:	pop    ebx
  41ab26:	loop   0x41ab72
  41ab28:	mov    esi,0xa1930045
  41ab2d:	cdq    
  41ab2e:	inc    ebx
  41ab2f:	ret    
  41ab30:	bound  ecx,QWORD PTR [eax-0x4d1c775a]
  41ab36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab37:	int    0x52
  41ab39:	lds    esp,FWORD PTR [edi-0x26a5fb30]
  41ab3f:	cmc    
  41ab40:	mov    ebx,0xf2fef5d4
  41ab45:	and    al,0xec
  41ab47:	sahf   
  41ab48:	dec    esi
  41ab49:	xchg   ebp,eax
  41ab4a:	rcr    ebp,0x90
  41ab4d:	mov    al,ds:0xd9ba1116
  41ab52:	bound  ebp,QWORD PTR [esi]
  41ab54:	call   0xed354979
  41ab59:	in     al,dx
  41ab5a:	pushf  
  41ab5b:	inc    ecx
  41ab5c:	sub    eax,0x2c50b991
  41ab61:	push   es
  41ab62:	xchg   ebp,eax
  41ab63:	mov    ebx,0x513a6604
  41ab68:	or     DWORD PTR [esi-0x4f],edi
  41ab6b:	xchg   esp,eax
  41ab6c:	mov    al,ds:0xe0f98d52
  41ab72:	sbb    al,0x8
  41ab74:	and    BYTE PTR [ecx],dh
  41ab76:	mov    al,0xb2
  41ab78:	sbb    eax,0x8a156ea4
  41ab7d:	fmul   st,st(2)
  41ab7f:	ror    DWORD PTR [eax],cl
  41ab81:	add    bh,BYTE PTR [ecx+0x7c99b8c7]
  41ab87:	adc    dl,bh
  41ab89:	adc    ebp,DWORD PTR [eax]
  41ab8b:	or     DWORD PTR [ebx],eax
  41ab8d:	sub    DWORD PTR [edi],ecx
  41ab8f:	es inc ecx
  41ab91:	add    ah,BYTE PTR [ebx-0x27f1dba2]
  41ab97:	sbb    edx,edx
  41ab99:	add    cl,ah
  41ab9b:	cmp    DWORD PTR [ebp+0x57],ecx
  41ab9e:	adc    DWORD PTR [ebp-0x5c],0xffffffbf
  41aba2:	mov    bh,cl
  41aba4:	(bad)  
  41aba5:	push   0xffffff87
  41aba7:	in     al,0x64
  41aba9:	fucomip st,st(6)
  41abab:	sbb    al,0x1c
  41abad:	icebp  
  41abae:	pop    ebx
  41abaf:	lahf   
  41abb0:	cmp    esi,DWORD PTR [esp+ecx*1+0x10]
  41abb4:	xchg   DWORD PTR [eax-0x35],esp
  41abb7:	pop    es
  41abb8:	or     BYTE PTR [ebx],0x62
  41abbb:	xor    ah,BYTE PTR [ebx-0xe]
  41abbe:	call   0x4c28:0xcaccdd53
  41abc5:	aad    0x96
  41abc7:	cmp    eax,0xee66d4a1
  41abcc:	lds    esp,FWORD PTR [ecx+0x5a]
  41abcf:	mov    esp,0x3f8ad72e
  41abd4:	xor    DWORD PTR [esi-0x108d03c7],ecx
  41abda:	adc    ch,bh
  41abdc:	mov    al,ds:0x349c15bd
  41abe1:	cmp    DWORD PTR [esi+0x1d],edx
  41abe4:	and    DWORD PTR [edi],0xc36ae2c
  41abea:	or     eax,0xdefce7db
  41abef:	jnp    0x41ac0e
  41abf1:	mov    eax,0x178e8ab9
  41abf6:	cli    
  41abf7:	fld    DWORD PTR [eax+esi*4+0x72]
  41abfb:	cwde   
  41abfc:	ins    BYTE PTR es:[edi],dx
  41abfd:	lds    esi,FWORD PTR [ecx+0x5433c3ea]
  41ac03:	or     bh,bl
  41ac05:	fcomp  QWORD PTR [ebp-0x6]
  41ac08:	xchg   ebx,eax
  41ac09:	push   es
  41ac0a:	fs adc al,0x70
  41ac0d:	pop    es
  41ac0e:	idiv   BYTE PTR [ebp+0x699ad738]
  41ac14:	cld    
  41ac15:	sub    BYTE PTR [edx+0x413d9081],dl
  41ac1b:	stos   BYTE PTR es:[edi],al
  41ac1c:	push   esi
  41ac1d:	cdq    
  41ac1e:	lea    esp,[ebp-0x71775d71]
  41ac24:	cmc    
  41ac25:	sub    BYTE PTR [edx-0x44763dab],cl
  41ac2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac2c:	call   0x4f6c:0x580a73e7
  41ac33:	das    
  41ac34:	jmp    0x41aca9
  41ac36:	lea    ebx,[edi-0x13]
  41ac39:	test   BYTE PTR ds:[edx+0x3c],0x33
  41ac3e:	loopne 0x41ac4a
  41ac40:	bound  esi,QWORD PTR [ebp-0xd44a673]
  41ac46:	cmp    eax,0x3b66ac82
  41ac4b:	out    dx,al
  41ac4c:	jnp    0x41ac74
  41ac4e:	jmp    0x41aca5
  41ac50:	adc    eax,0xb1cb25a1
  41ac55:	jg     0x41ac70
  41ac57:	mov    dl,0x86
  41ac59:	sub    ch,BYTE PTR ds:0x672ed790
  41ac5f:	mov    al,ds:0x278d0607
  41ac64:	jns    0x41acc8
  41ac66:	xchg   edx,eax
  41ac67:	xchg   edi,eax
  41ac68:	sub    edx,DWORD PTR [edi+0x5ad8c905]
  41ac6e:	push   cs
  41ac6f:	xor    ah,BYTE PTR [esi]
  41ac71:	sbb    BYTE PTR [edi+0x23],0x9d
  41ac75:	push   0x69
  41ac77:	imul   ecx,DWORD PTR [ebx],0x75
  41ac7a:	repnz pop ebp
  41ac7c:	dec    edx
  41ac7e:	mov    al,ds:0xc1a77f8a
  41ac83:	dec    edi
  41ac84:	push   esi
  41ac85:	jg     0x41ac44
  41ac87:	icebp  
  41ac88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac89:	xor    DWORD PTR [esi+0xf],esp
  41ac8c:	pushf  
  41ac8d:	xor    eax,0x7fbb9fab
  41ac92:	lods   eax,DWORD PTR ds:[esi]
  41ac93:	in     eax,dx
  41ac94:	jb     0x41accb
  41ac96:	xor    edx,DWORD PTR [edx]
  41ac98:	or     eax,0xa1e03245
  41ac9d:	js     0x41ad19
  41ac9f:	ins    BYTE PTR es:[edi],dx
  41aca0:	and    ecx,DWORD PTR [edi+ebx*2+0x12487a04]
  41aca7:	fistp  DWORD PTR [ebx]
  41aca9:	sar    DWORD PTR [ecx],1
  41acab:	shr    DWORD PTR [eax-0x22],0x50
  41acaf:	aaa    
  41acb0:	push   eax
  41acb1:	adc    edx,esi
  41acb3:	sub    ah,dh
  41acb5:	pop    edi
  41acb6:	daa    
  41acb7:	push   edx
  41acb8:	add    al,ch
  41acba:	push   eax
  41acbb:	jmp    0xd90f:0xd9014b76
  41acc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc3:	test   BYTE PTR [esi],0x4a
  41acc6:	call   0xe25a10b0
  41accb:	inc    ebx
  41accc:	mov    edx,0xffbd5d53
  41acd1:	imul   ecx,DWORD PTR [esi-0x45b0f816],0xffffffbf
  41acd8:	lahf   
  41acd9:	hlt    
  41acda:	inc    esi
  41acdb:	sbb    DWORD PTR [ebp+0x4d44d05a],edi
  41ace1:	repnz dec esp
  41ace3:	dec    edx
  41ace4:	pop    es
  41ace5:	jmp    0x91f591f9
  41acea:	stos   DWORD PTR es:[edi],eax
  41aceb:	mov    ?,WORD PTR [esi-0x40]
  41acee:	pusha  
  41acef:	ret    
  41acf0:	retf   0x28c6
  41acf3:	cmp    DWORD PTR [ebp-0x40475aa5],0x1962040
  41acfd:	jbe    0x41acda
  41acff:	pushf  
  41ad00:	xor    dl,bl
  41ad02:	xchg   ebx,eax
  41ad03:	fisttp WORD PTR [esi-0x3d]
  41ad06:	mov    esi,0x44da6805
  41ad0b:	ret    
  41ad0c:	ss jo  0x41ad8e
  41ad0f:	pop    edx
  41ad10:	nop
  41ad11:	out    dx,eax
  41ad12:	add    eax,0x986f81c9
  41ad17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad18:	xchg   ebp,eax
  41ad19:	jmp    0x41ad0f
  41ad1b:	retf   0x6a53
  41ad1e:	or     dl,BYTE PTR [edx+0x43e68b55]
  41ad24:	or     al,0x98
  41ad26:	push   edi
  41ad27:	pop    ebp
  41ad28:	ja     0x41acad
  41ad2a:	lods   eax,DWORD PTR ds:[esi]
  41ad2b:	inc    edi
  41ad2c:	stos   BYTE PTR es:[edi],al
  41ad2d:	xchg   edx,eax
  41ad2f:	mov    ds:0xb45f650c,al
  41ad34:	xchg   edi,eax
  41ad35:	dec    edx
  41ad36:	aad    0xb7
  41ad38:	out    dx,eax
  41ad39:	clc    
  41ad3a:	sub    al,0xc3
  41ad3c:	mov    esp,0xe417726
  41ad41:	call   0x3195:0x45905fd
  41ad48:	push   es
  41ad49:	mov    dh,0xa6
  41ad4b:	sbb    BYTE PTR [edx-0x7d0b26e9],ch
  41ad51:	fidivr WORD PTR [edi]
  41ad53:	sahf   
  41ad54:	adc    dl,cl
  41ad56:	sar    DWORD PTR [esi+0x68],1
  41ad59:	lds    esp,FWORD PTR [esi+0x157bf361]
  41ad5f:	les    esi,FWORD PTR [edx]
  41ad61:	out    0xa8,al
  41ad63:	out    0x69,al
  41ad65:	arpl   ax,si
  41ad67:	mov    dl,0x73
  41ad69:	(bad)  
  41ad6a:	dec    esi
  41ad6b:	pushf  
  41ad6c:	push   ss
  41ad6d:	push   ecx
  41ad6e:	mov    al,0x18
  41ad70:	push   edx
  41ad71:	inc    ebp
  41ad72:	inc    ebx
  41ad73:	push   eax
  41ad74:	adc    DWORD PTR [eax],edi
  41ad76:	rcr    DWORD PTR [edx+ecx*8],0x1a
  41ad7a:	dec    edi
  41ad7b:	iret   
  41ad7c:	fbld   TBYTE PTR [ebp-0x5033acfa]
  41ad82:	mov    al,0x1e
  41ad84:	sub    eax,edi
  41ad86:	mov    ebp,0x9daa8ad1
  41ad8b:	jne    0x41ad9a
  41ad8d:	dec    ebp
  41ad8e:	in     eax,dx
  41ad8f:	and    DWORD PTR [edi-0x330db478],esp
  41ad95:	mov    cl,bh
  41ad97:	xchg   edx,eax
  41ad98:	repz cs mov esi,0x8bde881
  41ad9f:	cmp    esi,eax
  41ada1:	mov    esi,0x962a30d4
  41ada6:	sub    BYTE PTR [ecx],cl
  41ada8:	jo     0x41adc9
  41adaa:	mov    bh,0x43
  41adac:	out    0x5f,al
  41adae:	outs   dx,DWORD PTR ds:[esi]
  41adaf:	mov    al,0xb3
  41adb1:	dec    ebx
  41adb2:	cmp    bh,BYTE PTR [ebp+0x47]
  41adb5:	(bad)  
  41adb7:	pop    ss
  41adb8:	dec    esp
  41adb9:	and    al,ch
  41adbb:	push   ecx
  41adbd:	lods   eax,DWORD PTR ds:[esi]
  41adbe:	les    esi,FWORD PTR [esi-0x4b7f300]
  41adc4:	push   ebx
  41adc5:	sbb    BYTE PTR [esi+0xe],bl
  41adc8:	sbb    bl,ah
  41adca:	sbb    eax,0x33b64593
  41adcf:	popa   
  41add0:	xchg   ebp,eax
  41add1:	push   ss
  41add2:	mov    esp,0x8b99d78c
  41add7:	and    eax,0x7c619da3
  41addc:	cmp    DWORD PTR [edi+0x24f0d7b5],0xfffffffc
  41ade3:	mov    esi,0x80303bc9
  41ade8:	xchg   ebp,eax
  41ade9:	mov    dl,0xc
  41adeb:	scas   eax,DWORD PTR es:[edi]
  41adec:	sub    cl,BYTE PTR [esi-0xfe6509d]
  41adf2:	shl    DWORD PTR [ebx+0x19c29d12],0x44
  41adf9:	push   edx
  41adfa:	pop    ds
  41adfb:	icebp  
  41adfc:	loopne 0x41ad93
  41adfe:	das    
  41adff:	cwde   
  41ae00:	daa    
  41ae01:	mov    al,0x3e
  41ae03:	xor    al,0x2f
  41ae05:	fwait
  41ae06:	es gs push ebp
  41ae09:	jmp    0x3803097f
  41ae0e:	(bad)  
  41ae0f:	jmp    0x41ae41
  41ae11:	push   edx
  41ae12:	push   esi
  41ae13:	pop    ds
  41ae14:	lahf   
  41ae15:	inc    eax
  41ae16:	push   0x73acab36
  41ae1b:	out    dx,al
  41ae1c:	(bad)  
  41ae1d:	mov    dh,0x21
  41ae1f:	xchg   ebp,eax
  41ae20:	mov    bl,0x5f
  41ae22:	adc    DWORD PTR [ebx],ebx
  41ae24:	int    0xbf
  41ae26:	cmp    eax,0xd6e45a2b
  41ae2b:	popf   
  41ae2c:	idiv   dh
  41ae2e:	sbb    eax,0xb0bfcd26
  41ae33:	xchg   esi,eax
  41ae34:	stc    
  41ae35:	xor    BYTE PTR [ecx+0x7b1cf8a],0xaf
  41ae3c:	or     al,0xad
  41ae3e:	(bad)  
  41ae3f:	(bad)  
  41ae40:	mov    ds:0xf67daa8f,eax
  41ae45:	dec    edi
  41ae46:	inc    edx
  41ae47:	imul   esp,DWORD PTR [eax],0x3d
  41ae4a:	in     al,dx
  41ae4b:	ins    BYTE PTR es:[edi],dx
  41ae4c:	jbe    0x41ae10
  41ae4e:	mov    dl,BYTE PTR [esi-0x5e]
  41ae51:	cmp    bl,BYTE PTR [edx]
  41ae53:	push   ss
  41ae54:	aaa    
  41ae55:	and    ebx,ecx
  41ae57:	cdq    
  41ae58:	lds    ecx,FWORD PTR [ebx+0x3a]
  41ae5b:	ins    BYTE PTR es:[edi],dx
  41ae5c:	leave  
  41ae5d:	rcl    bl,cl
  41ae5f:	aam    0xab
  41ae61:	push   edx
  41ae62:	test   BYTE PTR [ebx-0xd],dh
  41ae65:	jl     0x41aecc
  41ae67:	shl    edi,cl
  41ae69:	pusha  
  41ae6a:	fisubr WORD PTR [ebx-0x6]
  41ae6d:	inc    ebp
  41ae6e:	addr16 pop esi
  41ae70:	cld    
  41ae71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae72:	mov    esp,0x9f75dca6
  41ae77:	adc    DWORD PTR [eax],edi
  41ae79:	inc    ecx
  41ae7a:	int3   
  41ae7b:	mov    ch,0xf1
  41ae7d:	xchg   esi,eax
  41ae7e:	imul   ebp,DWORD PTR [ecx+0x60],0xaf7fa682
  41ae85:	enter  0x5e57,0xdb
  41ae89:	(bad)  
  41ae8a:	(bad)  
  41ae8b:	aad    0xa4
  41ae8d:	jns    0x41ae53
  41ae8f:	dec    DWORD PTR [ebx-0x6a]
  41ae92:	sub    DWORD PTR [edx],esp
  41ae94:	and    al,0xb1
  41ae96:	ret    0xaff5
  41ae99:	mov    al,ds:0x15341536
  41ae9e:	and    eax,0xd12ec6ca
  41aea3:	add    BYTE PTR [esi-0x53],dh
  41aea6:	push   edi
  41aea7:	out    dx,al
  41aea8:	mov    esi,0x4cd41b4b
  41aead:	(bad)  
  41aeae:	pusha  
  41aeaf:	loope  0x41ae5e
  41aeb1:	arpl   sp,ax
  41aeb3:	push   ebp
  41aeb4:	in     al,dx
  41aeb5:	ret    
  41aeb6:	repz sub al,0xf8
  41aeb9:	(bad)  
  41aeba:	mov    dh,0xba
  41aebc:	retf   
  41aebd:	mov    ecx,0x565c3543
  41aec2:	push   0x1a10018c
  41aec7:	cmp    ebp,DWORD PTR [ebx]
  41aec9:	in     eax,dx
  41aeca:	fs int 0x6b
  41aecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aece:	bound  ebp,QWORD PTR [esi-0x6f]
  41aed1:	ret    0xe6ff
  41aed4:	add    eax,0xe45b1ec9
  41aed9:	in     al,dx
  41aeda:	int3   
  41aedb:	dec    edx
  41aedc:	bound  ebx,QWORD PTR [edi+0x458c50f6]
  41aee2:	int    0x18
  41aee4:	mov    dh,0xde
  41aee6:	xchg   ebp,eax
  41aee7:	jno    0x41aecd
  41aee9:	xor    al,0x44
  41aeeb:	jnp    0x41af6c
  41aeed:	push   edx
  41aeee:	mov    al,ds:0x750ca02d
  41aef3:	dec    edx
  41aef4:	push   ebx
  41aef5:	jp     0x41af06
  41aef7:	por    mm6,QWORD PTR [ebx+0x212cd777]
  41aefe:	xor    eax,0xe0bdbb5
  41af03:	jge    0x41ae8d
  41af05:	test   al,0xe8
  41af07:	add    edi,edx
  41af09:	add    dl,BYTE PTR [esi+edx*8]
  41af0c:	(bad)  
  41af0d:	sbb    DWORD PTR [ebx+0x666128c1],esp
  41af13:	push   0x5024764a
  41af18:	jae    0x41af03
  41af1a:	shr    DWORD PTR [esi+0x4d68c7f6],0x7d
  41af21:	pop    ds
  41af22:	rol    BYTE PTR [esi+0x75],0xe1
  41af26:	stos   DWORD PTR es:[edi],eax
  41af27:	outs   dx,BYTE PTR ds:[esi]
  41af28:	popa   
  41af29:	jae    0x41af27
  41af2b:	fwait
  41af2c:	or     al,0x3e
  41af2e:	mov    bl,0xa5
  41af30:	sub    DWORD PTR [esi-0x22],eax
  41af33:	mov    DWORD PTR [edx+0x302ddf8a],edi
  41af39:	push   eax
  41af3a:	adc    DWORD PTR [edx],ebx
  41af3c:	popf   
  41af3d:	sbb    BYTE PTR [edi-0x6d],0xe0
  41af41:	jp     0x41afa4
  41af43:	mov    eax,ds:0x8a70a1de
  41af48:	jmp    0x4011:0x996ce962
  41af4f:	outs   dx,DWORD PTR ds:[esi]
  41af50:	dec    esp
  41af51:	rcl    BYTE PTR [ebp+0x36],0x3d
  41af55:	xchg   DWORD PTR [ebp-0x414fdb73],ebp
  41af5b:	xchg   edx,edi
  41af5d:	and    esi,DWORD PTR [eax-0x46]
  41af60:	and    al,0x6
  41af62:	fmul   DWORD PTR [esi+0x69]
  41af65:	sbb    ah,al
  41af67:	jb     0x41afa2
  41af69:	xchg   DWORD PTR [ebx],edi
  41af6b:	popf   
  41af6c:	mov    edi,0x7e68d054
  41af71:	sbb    al,0x48
  41af73:	mov    BYTE PTR [ebp+0x76f7c17a],al
  41af79:	aam    0x43
  41af7b:	pop    esp
  41af7c:	inc    ecx
  41af7d:	pusha  
  41af7e:	pop    esi
  41af7f:	mov    dl,0x62
  41af81:	cmp    al,0x7f
  41af83:	adc    BYTE PTR [ecx+0x382790a6],0x8c
  41af8a:	stos   DWORD PTR es:[edi],eax
  41af8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af8c:	mov    al,BYTE PTR [ebx+0x5cee427b]
  41af92:	mov    DWORD PTR [esi],ecx
  41af94:	int    0xdf
  41af96:	mov    DWORD PTR [eax+0x61],ecx
  41af99:	xor    BYTE PTR [esi+esi*1],cl
  41af9c:	stc    
  41af9d:	mov    ch,0x55
  41af9f:	lahf   
  41afa0:	xchg   ebx,eax
  41afa1:	jns    0x41af23
  41afa3:	push   esi
  41afa4:	daa    
  41afa5:	cmp    esi,ebx
  41afa7:	fist   DWORD PTR [ecx+eax*2-0x32051260]
  41afae:	rcl    BYTE PTR [eax-0x71],cl
  41afb1:	xor    eax,0x727e0c9e
  41afb6:	jle    0x41af42
  41afb8:	rol    DWORD PTR [ebx],0x2a
  41afbb:	mov    esi,0xa84d1f3b
  41afc0:	fist   DWORD PTR [edx]
  41afc2:	aas    
  41afc3:	int    0x9e
  41afc5:	shr    edx,0x20
  41afc8:	ror    BYTE PTR [ebp-0x6c],0x8e
  41afcc:	lods   al,BYTE PTR ds:[esi]
  41afcd:	jmp    0xf3f4:0xefe734b
  41afd4:	fwait
  41afd5:	inc    eax
  41afd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd7:	and    eax,0x8b43c1c4
  41afdc:	adc    dl,BYTE PTR [eax+ecx*1-0x6d]
  41afe0:	call   0x959834ff
  41afe5:	add    BYTE PTR ds:0x49dc320d,bh
  41afeb:	test   eax,0x8c750007
  41aff0:	pop    ecx
  41aff1:	sbb    esp,0xdc7f6188
  41aff7:	sbb    ebp,ecx
  41aff9:	retf   
  41affa:	cmc    
  41affb:	cld    
  41affc:	test   BYTE PTR [ecx],cl
  41affe:	(bad)  
  41afff:	sti    
  41b000:	outs   dx,BYTE PTR ds:[esi]
  41b001:	sub    DWORD PTR [edi],ecx
  41b003:	mov    ebp,0x35cab97a
  41b008:	xchg   ecx,eax
  41b009:	mov    al,ds:0x3608df94
  41b00e:	call   0x7a3596e5
  41b013:	jmp    0x468e8f53
  41b018:	lds    esi,FWORD PTR [edx]
  41b01a:	push   ebp
  41b01b:	dec    edi
  41b01c:	scas   eax,DWORD PTR es:[edi]
  41b01d:	data16 jl 0x41afdc
  41b020:	je     0x41afab
  41b022:	dec    esp
  41b023:	pop    es
  41b024:	(bad)  
  41b026:	das    
  41b027:	cmc    
  41b028:	dec    esi
  41b029:	fcomp  QWORD PTR [ecx+0x75]
  41b02c:	or     eax,0xf9a37f3c
  41b031:	call   0x4b7a4a5b
  41b036:	xchg   BYTE PTR [ebx],ch
  41b038:	mov    DWORD PTR [esi-0x56],esi
  41b03b:	scas   al,BYTE PTR es:[edi]
  41b03c:	data16 mov WORD PTR [esi-0x34d92c54],ds
  41b043:	in     eax,0x23
  41b045:	cmp    esi,esp
  41b047:	xchg   edx,eax
  41b048:	dec    esp
  41b049:	mov    dh,0x48
  41b04b:	mov    cl,0x98
  41b04d:	inc    esp
  41b04e:	shl    ebx,cl
  41b050:	jnp    0x41aff5
  41b052:	inc    edx
  41b053:	inc    ecx
  41b054:	mov    eax,0x40a5f8bf
  41b059:	mov    ebp,0x1c125c34
  41b05e:	(bad)  
  41b05f:	lock mov edi,0x98ef729c
  41b065:	adc    ebp,DWORD PTR [ebx+0x66]
  41b068:	mov    ebp,0xc4231ea
  41b06d:	int    0x28
  41b06f:	mov    eax,0x8b346863
  41b074:	(bad)  
  41b075:	lds    ebx,FWORD PTR [ebx+0xb]
  41b078:	fnstcw WORD PTR [edx-0x6bfcad22]
  41b07e:	repz ret 
  41b080:	rcr    DWORD PTR [ebp+0x0],0x3f
  41b084:	jle    0x41b074
  41b086:	mov    ?,WORD PTR [ecx]
  41b088:	icebp  
  41b089:	lock es cmp BYTE PTR ds:[ecx],ah
  41b08e:	jp     0x41b0fe
  41b090:	call   0xe892:0x93d53eba
  41b097:	(bad)  
  41b098:	ins    BYTE PTR es:[edi],dx
  41b099:	mov    esi,0xe75f98b6
  41b09e:	xor    al,0x59
  41b0a0:	pop    ebp
  41b0a1:	xor    ah,BYTE PTR [edx]
  41b0a3:	into   
  41b0a4:	out    0xc7,al
  41b0a6:	inc    eax
  41b0a7:	ficom  WORD PTR [ebx+eiz*1+0x47]
  41b0ab:	pop    ds
  41b0ac:	lods   eax,DWORD PTR ds:[esi]
  41b0ad:	mov    BYTE PTR [esi],cl
  41b0af:	in     eax,dx
  41b0b0:	push   ebp
  41b0b1:	xchg   ebx,eax
  41b0b2:	jne    0x41b0c6
  41b0b4:	pop    esi
  41b0b5:	bound  esp,QWORD PTR [ebx+eiz*8]
  41b0b8:	pop    ebx
  41b0b9:	dec    esp
  41b0ba:	push   es
  41b0bb:	ss pop ds
  41b0bd:	mov    ah,0x5c
  41b0bf:	xor    ch,BYTE PTR [eax]
  41b0c1:	dec    ebx
  41b0c2:	outs   dx,DWORD PTR ds:[esi]
  41b0c3:	push   esi
  41b0c4:	ins    BYTE PTR es:[edi],dx
  41b0c5:	jl     0x41b0ab
  41b0c7:	test   al,0x58
  41b0c9:	scas   al,BYTE PTR es:[edi]
  41b0ca:	aad    0xd6
  41b0cc:	adc    DWORD PTR [eax-0x39],0xffffff9f
  41b0d0:	fs push eax
  41b0d2:	clc    
  41b0d3:	mov    esi,0x61c3f282
  41b0d8:	pop    ebp
  41b0d9:	jmp    0x174a2a1f
  41b0de:	test   al,0x9
  41b0e0:	lock cdq 
  41b0e2:	fiadd  WORD PTR [ecx]
  41b0e4:	imul   ebp,DWORD PTR [edi-0x4b],0xffffffcd
  41b0e8:	data16 ja 0x41b0f7
  41b0eb:	sbb    ch,BYTE PTR [ecx]
  41b0ed:	add    edi,DWORD PTR [edi]
  41b0ef:	adc    BYTE PTR ds:0x3019cb5f,0x4f
  41b0f6:	push   esp
  41b0f7:	popf   
  41b0f8:	dec    ecx
  41b0f9:	pusha  
  41b0fa:	jbe    0x41b0bb
  41b0fc:	push   ecx
  41b0fd:	push   ebp
  41b0fe:	ret    0xbd22
  41b101:	jg     0x41b095
  41b103:	retf   0x9203
  41b106:	xlat   BYTE PTR ds:[ebx]
  41b107:	sub    ebp,DWORD PTR [ecx+0x27]
  41b10a:	in     eax,dx
  41b10b:	mov    al,0x3f
  41b10d:	mov    ah,0x6a
  41b10f:	xor    DWORD PTR [ebp-0x2c01b883],edi
  41b115:	mov    dh,0x53
  41b117:	fldcw  WORD PTR [eax+0x76]
  41b11a:	pop    esp
  41b11b:	sub    al,0xe2
  41b11d:	loope  0x41b106
  41b11f:	and    ecx,DWORD PTR [ebx-0x3b]
  41b122:	cs mov dh,cl
  41b125:	push   ebx
  41b126:	or     BYTE PTR [ecx-0x18],0x78
  41b12a:	cmp    dl,bh
  41b12c:	mov    BYTE PTR [ebx+eiz*2-0x59],ch
  41b130:	pop    esp
  41b131:	out    0x6d,al
  41b133:	jns    0x41b12c
  41b135:	mov    al,0xea
  41b137:	jle    0x41b118
  41b139:	dec    edi
  41b13a:	scas   eax,DWORD PTR es:[edi]
  41b13b:	ss mov edi,0x2bc665be
  41b141:	les    esi,FWORD PTR [esi-0x61]
  41b144:	dec    eax
  41b145:	adc    eax,0x1daeacf
  41b14a:	hlt    
  41b14b:	sub    ah,BYTE PTR [edi+0xf]
  41b14e:	data16 in al,0xb
  41b151:	jg     0x41b19b
  41b153:	push   0xc2410660
  41b158:	cli    
  41b159:	lods   al,BYTE PTR ds:[esi]
  41b15a:	xchg   edi,eax
  41b15b:	inc    esi
  41b15c:	mov    ch,BYTE PTR es:[eax]
  41b15f:	sbb    eax,0xfed389f2
  41b164:	call   0xd77500e2
  41b169:	(bad)  
  41b16a:	ins    DWORD PTR es:[edi],dx
  41b16b:	mov    esp,0xbcbae6c9
  41b170:	(bad)  
  41b171:	push   edi
  41b172:	cdq    
  41b173:	loop   0x41b126
  41b175:	out    0xc3,eax
  41b177:	(bad)  
  41b178:	add    DWORD PTR fs:[eax+0x75eb20ac],esi
  41b17f:	and    bh,BYTE PTR [esi-0x67af9d4d]
  41b185:	and    ecx,DWORD PTR [ecx+0x3f]
  41b188:	add    al,0x9
  41b18a:	push   ss
  41b18b:	or     al,0x85
  41b18d:	daa    
  41b18e:	jg     0x41b1e4
  41b190:	out    dx,eax
  41b191:	call   0xe8e7:0x95706fa9
  41b198:	jmp    0x41b11a
  41b19a:	sbb    edi,DWORD PTR [ecx]
  41b19c:	jle    0x41b170
  41b19e:	test   BYTE PTR [edi+edi*8+0x3f],0xa7
  41b1a3:	cmp    DWORD PTR ds:0x19394c82,esi
  41b1a9:	jecxz  0x41b14a
  41b1ab:	fisttp DWORD PTR [ecx-0x63]
  41b1ae:	in     al,0x8
  41b1b0:	sub    eax,0xc21327b1
  41b1b5:	mov    DWORD PTR [edi],esi
  41b1b7:	push   ss
  41b1b8:	adc    al,0xfa
  41b1ba:	popw   es
  41b1bc:	pop    ecx
  41b1bd:	push   eax
  41b1be:	jmp    0x41b175
  41b1c0:	(bad)  
  41b1c1:	pushf  
  41b1c2:	xor    BYTE PTR [edx-0x3abb7d0],ch
  41b1c8:	std    
  41b1c9:	jmp    0xda69:0x4db2bcf2
  41b1d0:	into   
  41b1d1:	dec    esi
  41b1d2:	xchg   edi,eax
  41b1d3:	and    bh,BYTE PTR [eax-0x5f]
  41b1d6:	lds    esp,FWORD PTR [ebx-0x2c]
  41b1d9:	out    dx,al
  41b1da:	mov    edi,0x98b0c35e
  41b1df:	mov    ss,ebp
  41b1e1:	imul   esp,ebp,0xeb4fbcf3
  41b1e7:	push   0xffffffe3
  41b1e9:	jecxz  0x41b17e
  41b1eb:	call   0x379f:0xf1274719
  41b1f2:	inc    esi
  41b1f3:	popf   
  41b1f4:	mov    edi,0x9b040c57
  41b1f9:	inc    eax
  41b1fa:	inc    ebx
  41b1fb:	xlat   BYTE PTR ds:[ebx]
  41b1fc:	mov    ah,0x8
  41b1fe:	cmp    bl,BYTE PTR [esi+0x4eb61a36]
  41b204:	jns    0x41b1c2
  41b206:	mov    ch,0xeb
  41b208:	push   ebx
  41b209:	fcomp  DWORD PTR ds:0x20949cec
  41b20f:	jo     0x41b289
  41b211:	xchg   esi,eax
  41b212:	cmc    
  41b213:	div    DWORD PTR [ebp+0x9eabc04]
  41b219:	loop   0x41b1bd
  41b21b:	jg     0x41b1e5
  41b21d:	or     edx,edi
  41b21f:	mov    bl,0x16
  41b221:	je     0x41b1b6
  41b223:	rol    DWORD PTR [edi+edx*1-0x4d],1
  41b227:	xchg   ecx,eax
  41b228:	scas   eax,DWORD PTR es:[edi]
  41b229:	pop    edi
  41b22a:	inc    cx
  41b22c:	mov    ecx,0xc9cbcf89
  41b231:	xchg   ebx,eax
  41b232:	outs   dx,DWORD PTR ds:[esi]
  41b233:	lods   al,BYTE PTR ds:[esi]
  41b234:	mov    eax,0xa9e6f35c
  41b239:	jae    0x41b220
  41b23b:	std    
  41b23c:	jle    0x41b209
  41b23e:	and    esp,ebp
  41b240:	ds addr16 ja 0x41b277
  41b244:	dec    ebx
  41b245:	jmp    0x41b289
  41b247:	mov    BYTE PTR [eax-0x5a],al
  41b24a:	mov    bh,0x11
  41b24c:	test   eax,0xb5d70d00
  41b252:	pop    es
  41b253:	enter  0x1b61,0x74
  41b257:	jns    0x41b2d6
  41b259:	jb     0x41b212
  41b25b:	(bad)  
  41b25c:	test   eax,0xdb5c50dd
  41b261:	inc    esp
  41b262:	daa    
  41b263:	jle    0x41b294
  41b265:	mov    edx,0xb8454c22
  41b26a:	mov    ah,0x8b
  41b26c:	lock adc BYTE PTR [edx+0x2fafc263],bh
  41b273:	adc    eax,0x38773aa4
  41b278:	rol    BYTE PTR [ebx+0x7e746ddc],0xe0
  41b27f:	mov    eax,0xc6f31ae4
  41b284:	push   ebx
  41b285:	inc    eax
  41b286:	push   es
  41b287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b288:	dec    ebp
  41b289:	fstp   DWORD PTR [edi]
  41b28b:	(bad)  
  41b28c:	dec    edx
  41b28d:	adc    eax,0x4dbde5ea
  41b292:	pop    esi
  41b293:	xchg   edx,eax
  41b294:	pop    ecx
  41b295:	ins    BYTE PTR es:[edi],dx
  41b296:	push   ebx
  41b297:	push   0x2393c6bf
  41b29c:	int3   
  41b29d:	inc    ebx
  41b29e:	adc    BYTE PTR [ebp-0x4a21b55b],dh
  41b2a4:	cwde   
  41b2a5:	mov    ch,0xd
  41b2a7:	cmp    al,0x5c
  41b2a9:	in     al,dx
  41b2aa:	mov    edx,0xa47d952b
  41b2af:	rol    DWORD PTR [edx],cl
  41b2b1:	mov    ecx,0x6079ec77
  41b2b6:	repz and DWORD PTR [edi*4+0x79b96e15],ebx
  41b2be:	pop    edi
  41b2bf:	jbe    0x41b2f5
  41b2c1:	ja     0x41b267
  41b2c3:	mov    ebp,0xb6238d9e
  41b2c8:	aaa    
  41b2c9:	div    BYTE PTR [esi]
  41b2cb:	inc    esi
  41b2cc:	out    dx,al
  41b2cd:	icebp  
  41b2ce:	xchg   DWORD PTR [ecx+0x6b],ecx
  41b2d1:	cmp    al,0xc3
  41b2d3:	sbb    DWORD PTR [ebx],edi
  41b2d5:	sub    BYTE PTR [esp-0x32c2b76c],cl
  41b2dc:	and    ebx,DWORD PTR [ecx+0x3d]
  41b2df:	pushf  
  41b2e0:	jne    0x41b28c
  41b2e2:	jg     0x41b2da
  41b2e4:	test   al,0x74
  41b2e6:	shl    DWORD PTR [ecx-0xc659411],0x6d
  41b2ed:	inc    esp
  41b2ee:	shl    edi,1
  41b2f0:	out    0x61,al
  41b2f2:	sbb    DWORD PTR [ebp+0x10],esi
  41b2f5:	inc    edi
  41b2f6:	add    eax,0x2c869ce9
  41b2fb:	retf   0xb3f6
  41b2fe:	ret    0x5aa1
  41b301:	or     BYTE PTR [edi],ch
  41b303:	mov    edx,0x4f58a93b
  41b308:	push   esp
  41b309:	in     al,0x1f
  41b30b:	aas    
  41b30c:	shl    DWORD PTR [ecx-0x54033f5d],0x67
  41b313:	inc    ecx
  41b314:	call   0x9b521d84
  41b319:	sar    cl,1
  41b31b:	(bad)  
  41b31c:	and    DWORD PTR [edx+0x1f876270],esi
  41b322:	cmp    BYTE PTR [ebp+0x64],ch
  41b325:	arpl   WORD PTR [edi],di
  41b327:	jle    0x41b381
  41b329:	dec    ebx
  41b32a:	or     eax,0x311d24ff
  41b32f:	das    
  41b330:	sbb    al,0x91
  41b332:	or     BYTE PTR [ecx-0x299c9730],dl
  41b338:	test   BYTE PTR [ebx],cl
  41b33a:	or     eax,0x1ace3f2c
  41b33f:	(bad)  
  41b340:	sbb    ah,ah
  41b342:	pop    ds
  41b343:	lahf   
  41b344:	into   
  41b345:	dec    esp
  41b346:	and    dh,BYTE PTR [esi+0x573943c9]
  41b34c:	cmp    BYTE PTR [ebx-0xb],cl
  41b34f:	adc    dh,dh
  41b351:	xchg   ebx,eax
  41b352:	call   0xff4a:0x8f6f5b5d
  41b359:	retf   0xa0ce
  41b35c:	inc    esp
  41b35d:	xchg   esi,eax
  41b35e:	jae    0x41b316
  41b360:	add    dl,bl
  41b362:	fldenv [eax]
  41b364:	shl    BYTE PTR [ebx-0x43faa934],0x50
  41b36b:	ins    DWORD PTR es:[edi],dx
  41b36c:	aad    0x56
  41b36e:	popa   
  41b36f:	pop    edi
  41b370:	inc    ecx
  41b371:	fwait
  41b372:	xor    eax,0xf6bb2cb1
  41b377:	hlt    
  41b378:	xor    al,0x78
  41b37b:	adc    edx,eax
  41b37d:	jne    0x41b331
  41b37f:	retf   
  41b380:	mov    dh,0x5b
  41b382:	stos   BYTE PTR es:[edi],al
  41b383:	push   0xac6a87b2
  41b388:	arpl   WORD PTR [edi+0x3a],ax
  41b38b:	in     al,0x88
  41b38d:	leave  
  41b38e:	inc    edi
  41b38f:	scas   al,BYTE PTR es:[edi]
  41b390:	xchg   ebx,eax
  41b391:	inc    edi
  41b392:	xchg   edi,eax
  41b393:	(bad)  
  41b394:	shl    ah,1
  41b396:	pop    edi
  41b397:	fdiv   QWORD PTR [eax]
  41b399:	lahf   
  41b39a:	cmp    eax,0x4398054
  41b39f:	sub    edx,0xc1675d8a
  41b3a5:	dec    ecx
  41b3a6:	mov    edx,0x7c9c4b25
  41b3ab:	mov    dl,0xe6
  41b3ad:	lea    edi,[edx+0x45]
  41b3b0:	(bad)  [esi+0x4c0e3dc0]
  41b3b6:	mov    edx,0xbaefc98f
  41b3bb:	lock adc al,0xc6
  41b3be:	inc    ecx
  41b3bf:	xor    al,0x9b
  41b3c1:	addr16 jmp 0xf73e:0x92f89b24
  41b3c9:	and    esi,DWORD PTR [ebx]
  41b3cb:	and    al,0x90
  41b3cd:	push   ss
  41b3ce:	and    al,0xf5
  41b3d0:	aad    0x8d
  41b3d2:	jmp    0x329:0xdc15f844
  41b3d9:	gs push 0xb916aae3
  41b3df:	mov    ch,0x30
  41b3e1:	or     al,0xcd
  41b3e3:	cmp    DWORD PTR [edx-0x12],0xffffff99
  41b3e7:	dec    ebx
  41b3e8:	push   ds
  41b3e9:	nop
  41b3ea:	popf   
  41b3eb:	adc    DWORD PTR [ebx+0x1d],esp
  41b3ee:	leave  
  41b3ef:	pushf  
  41b3f0:	out    0x74,al
  41b3f2:	cli    
  41b3f3:	fild   WORD PTR [edi]
  41b3f5:	xchg   edx,eax
  41b3f6:	out    dx,eax
  41b3f7:	mov    bl,0x6
  41b3f9:	popf   
  41b3fa:	pop    ds
  41b3fb:	push   es
  41b3fc:	add    BYTE PTR [esi-0x4ab64984],ah
  41b402:	pop    ds
  41b403:	out    dx,al
  41b404:	mov    cl,ah
  41b406:	clc    
  41b407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b408:	popf   
  41b409:	sbb    dh,BYTE PTR [edi-0x64efa4d]
  41b40f:	jle    0x41b46e
  41b411:	jae    0x41b3ea
  41b413:	or     eax,0x556c0f9a
  41b418:	xor    ch,BYTE PTR [esi]
  41b41a:	mov    ebx,0x28bd430d
  41b41f:	pop    ss
  41b420:	adc    dh,BYTE PTR [edi+esi*2-0x7]
  41b424:	adc    esi,DWORD PTR fs:[edi+0x2daf8345]
  41b42b:	adc    BYTE PTR [edi-0x100c1269],0xe4
  41b432:	ins    BYTE PTR es:[edi],dx
  41b433:	ins    BYTE PTR es:[edi],dx
  41b434:	popa   
  41b435:	test   DWORD PTR [ecx-0x651db25e],0xabcbf0c6
  41b43f:	dec    ecx
  41b440:	lds    ebp,FWORD PTR [edi]
  41b442:	mov    bl,0xa0
  41b444:	repnz (bad) 
  41b446:	and    eax,0x9b8e6a87
  41b44b:	jg     0x41b423
  41b44d:	sub    BYTE PTR [edi],ch
  41b44f:	aam    0x42
  41b451:	push   ebx
  41b452:	pusha  
  41b453:	xlat   BYTE PTR ds:[ebx]
  41b454:	(bad)  
  41b455:	cmp    ebx,ebx
  41b457:	inc    edi
  41b458:	adc    bl,dl
  41b45a:	xchg   DWORD PTR [ebx+0x60665218],edi
  41b460:	rcl    DWORD PTR ds:0x3d255fa9,cl
  41b466:	jb     0x41b47d
  41b468:	xor    edi,esp
  41b46a:	pop    ecx
  41b46b:	and    esp,edx
  41b46d:	scas   al,BYTE PTR es:[edi]
  41b46e:	or     DWORD PTR [eax+0x5127ce72],0x64
  41b475:	jne    0x41b43b
  41b477:	add    eax,0x16d06434
  41b47c:	lods   al,BYTE PTR ds:[esi]
  41b47d:	jl     0x41b481
  41b47f:	push   ds
  41b480:	xchg   ecx,eax
  41b481:	ror    DWORD PTR [ecx-0x4b],1
  41b484:	mov    edx,0xbc54bc04
  41b489:	adc    edi,DWORD PTR [ecx+esi*4-0xe]
  41b48d:	out    0xc4,eax
  41b48f:	ret    
  41b490:	jmp    0xded9:0xb99e68d9
  41b497:	mov    ch,0xbb
  41b499:	adc    bl,dh
  41b49b:	ret    
  41b49c:	int3   
  41b49d:	imul   eax,DWORD PTR [eax+0x4],0x6336a06
  41b4a4:	add    ch,BYTE PTR [ecx]
  41b4a6:	xor    BYTE PTR [ebx],bl
  41b4a8:	div    DWORD PTR [edx+0x1ce27c7]
  41b4ae:	mov    edx,0x88ba484e
  41b4b3:	cmp    ebx,eax
  41b4b5:	xor    BYTE PTR [esi],dl
  41b4b7:	and    DWORD PTR [esi+ecx*4-0x4156bf9b],0xffffff90
  41b4bf:	mov    ds:0x78d66a23,eax
  41b4c4:	iret   
  41b4c5:	cmp    edi,esp
  41b4c7:	data16 cmp BYTE PTR [esi-0x23de8300],dl
  41b4ce:	mov    cl,0x9c
  41b4d0:	lds    ebp,FWORD PTR ds:0x9f38fd13
  41b4d6:	shr    BYTE PTR [ecx-0x6a3f38fc],1
  41b4dc:	push   DWORD PTR [ebp+0x38]
  41b4df:	mov    ah,0xde
  41b4e1:	add    dh,ch
  41b4e3:	cs push 0xffffffdf
  41b4e6:	sti    
  41b4e7:	icebp  
  41b4e8:	sub    ebp,DWORD PTR [esi]
  41b4ea:	cmp    BYTE PTR [esp+eiz*4+0x4a],dh
  41b4ee:	std    
  41b4ef:	sbb    bh,0x85
  41b4f2:	cs scas eax,DWORD PTR es:[edi]
  41b4f4:	test   eax,ebp
  41b4f6:	sbb    ah,bl
  41b4f8:	nop
  41b4f9:	(bad)
  41b4fc:	inc    ebx
  41b4fd:	pop    ecx
  41b4fe:	shl    BYTE PTR es:[ebx],cl
  41b501:	in     eax,0xee
  41b503:	test   BYTE PTR [edx+0x361309c1],0x12
  41b50a:	(bad)
  41b50e:	and    eax,DWORD PTR [ebx+0x4183204d]
  41b514:	adc    ah,BYTE PTR [ecx-0x17]
  41b517:	repz add edi,DWORD PTR ds:0x906c10e1
  41b51e:	fs xchg ebx,eax
  41b520:	sub    edx,edi
  41b522:	aaa    
  41b523:	add    al,0x38
  41b525:	gs sbb al,0x2
  41b528:	cmp    esp,esi
  41b52a:	jns    0x41b52f
  41b52c:	jne    0x41b503
  41b52e:	dec    edi
  41b52f:	push   ss
  41b530:	sbb    eax,0x6665041d
  41b535:	or     DWORD PTR [ecx],eax
  41b537:	repz in al,0x58
  41b53a:	inc    edx
  41b53b:	stos   BYTE PTR es:[edi],al
  41b53c:	shl    BYTE PTR [esi-0x5e],cl
  41b53f:	mov    WORD PTR [ecx+0x3325bced],gs
  41b545:	bound  eax,QWORD PTR [eax+0x5b1b8a31]
  41b54b:	inc    ebp
  41b54c:	retf   
  41b54d:	stos   BYTE PTR es:[edi],al
  41b54e:	in     eax,dx
  41b54f:	ret    0x6887
  41b552:	ss jmp 0x41b5c9
  41b555:	jecxz  0x41b584
  41b557:	fsubr  st,st(0)
  41b559:	ins    DWORD PTR es:[edi],dx
  41b55a:	daa    
  41b55b:	mov    bl,0xe9
  41b55d:	sbb    al,0xef
  41b55f:	pushf  
  41b560:	ficom  WORD PTR [esi]
  41b562:	stc    
  41b563:	mov    ebp,0x224c1a89
  41b568:	adc    al,0x24
  41b56a:	fist   WORD PTR [ebx+ebx*4-0x5a]
  41b56e:	not    BYTE PTR [edx+0x7a05f0e4]
  41b574:	jmp    0x50ccb528
  41b579:	or     BYTE PTR [ecx-0x32381672],0xa1
  41b580:	mov    BYTE PTR [edx],dh
  41b582:	push   ecx
  41b583:	cmp    DWORD PTR [ebx],ebx
  41b585:	pop    ebp
  41b586:	sub    al,BYTE PTR ds:0x43c00cd2
  41b58c:	fbld   TBYTE PTR [ebp+0x16]
  41b58f:	imul   bp,WORD PTR ss:[edx],0xffe6
  41b594:	dec    edx
  41b595:	call   DWORD PTR [esi-0x4b]
  41b598:	jno    0x41b51e
  41b59a:	sub    esi,DWORD PTR [ebp-0x56]
  41b59d:	xchg   BYTE PTR [ecx-0x75e7b8a8],bh
  41b5a3:	mov    edi,0x2a51e5de
  41b5a8:	cwde   
  41b5a9:	and    eax,0xfd65268
  41b5ae:	mov    cl,BYTE PTR [ecx-0x136d1bbf]
  41b5b4:	mov    bl,0xc3
  41b5b6:	into   
  41b5b7:	iret   
  41b5b8:	les    ebx,FWORD PTR [edx+0x67]
  41b5bb:	pop    ebx
  41b5bc:	(bad)  
  41b5bd:	ins    DWORD PTR es:[edi],dx
  41b5be:	jnp    0x41b5d0
  41b5c0:	lods   eax,DWORD PTR ds:[esi]
  41b5c1:	mov    dh,0x15
  41b5c3:	mov    ebx,db7
  41b5c6:	jns    0x41b5c8
  41b5c8:	mov    al,ds:0x6dfad96
  41b5cd:	fcom   QWORD PTR [ebp+0x75]
  41b5d0:	into   
  41b5d1:	inc    ebx
  41b5d2:	mov    ebp,0xdbc1d2c3
  41b5d7:	mov    dl,0xf7
  41b5d9:	aas    
  41b5da:	jp     0x41b5da
  41b5dc:	mov    ds:0xf85276e2,eax
  41b5e1:	cmp    al,ah
  41b5e3:	test   edi,0x33679f44
  41b5e9:	mov    eax,ds:0xf4a891ee
  41b5ee:	xchg   ebp,eax
  41b5ef:	or     bh,0xf7
  41b5f2:	aaa    
  41b5f3:	jno    0x41b654
  41b5f5:	mov    eax,0x4fa88b43
  41b5fa:	dec    ebx
  41b5fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5fc:	sbb    dh,ah
  41b5fe:	(bad)  
  41b5ff:	pop    ebp
  41b600:	cmp    BYTE PTR [edx],bl
  41b602:	ret    
  41b603:	ret    
  41b604:	dec    edi
  41b605:	pusha  
  41b606:	xchg   edi,eax
  41b607:	fucomp st(0)
  41b609:	add    al,0xfb
  41b60b:	out    0x58,al
  41b60d:	lds    edx,FWORD PTR [ebp+0x27c2e3df]
  41b613:	xchg   DWORD PTR [edx],edx
  41b615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b616:	clc    
  41b617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b618:	addr16 out 0x94,al
  41b61b:	sbb    eax,0x7e60ccb6
  41b620:	pusha  
  41b621:	stos   BYTE PTR es:[edi],al
  41b622:	je     0x41b64d
  41b624:	pop    eax
  41b625:	lahf   
  41b626:	push   cs
  41b627:	jne    0x41b63c
  41b629:	ins    DWORD PTR es:[edi],dx
  41b62a:	xor    al,0xd
  41b62c:	jns    0x41b694
  41b62e:	and    ebx,ecx
  41b630:	outs   dx,DWORD PTR ds:[esi]
  41b631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b632:	ret    0x9ac6
  41b635:	fild   DWORD PTR [ebx]
  41b637:	xchg   ebx,eax
  41b638:	push   esp
  41b639:	mov    WORD PTR [edi-0x9],ss
  41b63c:	enter  0xab3b,0x16
  41b640:	cmp    al,0xde
  41b642:	scas   al,BYTE PTR es:[edi]
  41b643:	cmp    bh,BYTE PTR [edi+0x21843c0e]
  41b649:	in     eax,dx
  41b64a:	popa   
  41b64b:	shl    BYTE PTR [ebp+0x56],0x75
  41b64f:	xchg   edx,eax
  41b650:	clc    
  41b651:	mov    BYTE PTR [ebx-0x496de686],ah
  41b657:	push   es
  41b658:	stos   DWORD PTR es:[edi],eax
  41b659:	repnz sahf 
  41b65b:	bndldx (bad),[ecx+0x18]
  41b65f:	mov    DWORD PTR [edx+0x764ee53a],edi
  41b665:	xchg   ecx,eax
  41b666:	mov    ebx,0x691d2f2a
  41b66b:	jg     0x41b692
  41b66d:	sub    ecx,DWORD PTR [esi-0x65]
  41b670:	idiv   BYTE PTR [edx+0x16c06439]
  41b676:	loop   0x41b6c6
  41b678:	sub    dh,dh
  41b67a:	or     eax,0x7f727f46
  41b67f:	add    BYTE PTR [esi-0x58],ch
  41b682:	push   esi
  41b683:	inc    ebp
  41b684:	push   ebp
  41b685:	(bad)  
  41b686:	or     al,bh
  41b688:	sub    al,0x57
  41b68a:	out    0x20,al
  41b68c:	bound  ecx,QWORD PTR [esi]
  41b68e:	push   edi
  41b68f:	adc    ebp,DWORD PTR [ecx-0x39]
  41b692:	aam    0x8f
  41b694:	or     ch,BYTE PTR [eax+0x2f08a321]
  41b69a:	mov    WORD PTR [esi-0x4e],fs
  41b69d:	add    DWORD PTR [eax],edx
  41b69f:	sahf   
  41b6a0:	sar    BYTE PTR [ecx+0x71],0xc0
  41b6a4:	dec    eax
  41b6a5:	mov    bh,cl
  41b6a7:	pop    ds
  41b6a8:	xchg   edi,eax
  41b6a9:	ficomp WORD PTR [edx]
  41b6ab:	mov    al,ds:0x2bded426
  41b6b0:	or     bh,0x5e
  41b6b3:	daa    
  41b6b4:	ja     0x41b64e
  41b6b6:	sbb    eax,0x5e04bd20
  41b6bb:	in     eax,0x8e
  41b6bd:	jne    0x41b6b4
  41b6bf:	pop    eax
  41b6c0:	stos   DWORD PTR es:[edi],eax
  41b6c1:	dec    ebp
  41b6c2:	and    cl,BYTE PTR [edi+0x1a05e40c]
  41b6c8:	fwait
  41b6c9:	out    0x7f,eax
  41b6cb:	dec    ebp
  41b6cc:	adc    ecx,0x6d
  41b6cf:	test   al,0x51
  41b6d1:	xor    bl,cl
  41b6d3:	je     0x41b688
  41b6d5:	(bad)  
  41b6d6:	(bad)  
  41b6d7:	pop    eax
  41b6d8:	sar    DWORD PTR [ecx+ebp*4-0x50],0x56
  41b6dd:	adc    DWORD PTR [ebp+0x2540dab1],edx
  41b6e3:	mov    bh,0x85
  41b6e5:	jmp    0x1c200a8e
  41b6ea:	mov    esp,0x5a731245
  41b6ef:	xchg   ecx,eax
  41b6f0:	push   0x62
  41b6f2:	push   cs
  41b6f3:	(bad)
  41b6f6:	xchg   esp,eax
  41b6f7:	in     eax,0xc1
  41b6f9:	pop    edx
  41b6fa:	or     bh,bh
  41b6fc:	dec    esi
  41b6fd:	push   es
  41b6fe:	test   ah,al
  41b700:	popa   
  41b701:	mov    DWORD PTR [esi],eax
  41b703:	mov    fs,WORD PTR [ebx-0x32]
  41b706:	int    0x82
  41b708:	mov    dh,0xb6
  41b70a:	sub    al,0xdc
  41b70c:	test   eax,0x41e8cf25
  41b711:	pop    ebx
  41b712:	xor    edi,ebp
  41b714:	pop    ebx
  41b715:	std    
  41b716:	inc    esi
  41b717:	adc    ecx,ebp
  41b719:	mov    eax,0x6b12830a
  41b71e:	sub    bl,BYTE PTR [edi+0x426a2e4c]
  41b724:	xor    ecx,DWORD PTR [ecx+ebx*1+0x49]
  41b728:	inc    esp
  41b729:	fsub   st,st(2)
  41b72b:	(bad)  
  41b72c:	cli    
  41b72d:	inc    ebx
  41b72e:	xor    dl,BYTE PTR [ecx-0x4f]
  41b731:	in     al,0x6
  41b733:	sub    al,0x43
  41b735:	mov    dl,0x78
  41b737:	push   0xb7089bcd
  41b73c:	xor    BYTE PTR [edi+ebx*1],bl
  41b73f:	aas    
  41b740:	bswap  si
  41b743:	sar    DWORD PTR [edx+ecx*8+0x7936994b],1
  41b74a:	bound  ebp,QWORD PTR [esi+0x49971a21]
  41b750:	es call 0x3078fe88
  41b756:	aad    0xd7
  41b758:	ror    BYTE PTR [ebx-0x15121a84],1
  41b75e:	push   ebp
  41b75f:	jns    0x41b7cf
  41b761:	inc    esp
  41b762:	dec    ebx
  41b763:	sbb    BYTE PTR [ebx-0x18],ch
  41b766:	or     ch,ch
  41b768:	hlt    
  41b769:	xor    BYTE PTR [ebp+0x7d],dl
  41b76c:	add    BYTE PTR [ecx],0x79
  41b76f:	loopne 0x41b760
  41b771:	xchg   DWORD PTR [edx],ebp
  41b773:	xlat   BYTE PTR ds:[ebx]
  41b774:	xor    eax,DWORD PTR [ebp+0x27]
  41b777:	daa    
  41b778:	cs xchg al,cl
  41b77b:	retf   
  41b77c:	fiadd  WORD PTR [ebx+0x47]
  41b77f:	push   ecx
  41b780:	sbb    dh,BYTE PTR [edx+eiz*4]
  41b783:	or     BYTE PTR [ebp-0x6799e09d],ah
  41b789:	shl    BYTE PTR [ebx-0x14784c27],cl
  41b78f:	rdtsc  
  41b791:	mov    esi,eax
  41b793:	cmp    al,0x9c
  41b795:	fdivp  st(4),st
  41b797:	mov    esi,DWORD PTR [edi]
  41b799:	add    al,0x46
  41b79b:	(bad)  
  41b79c:	scas   al,BYTE PTR es:[edi]
  41b79d:	push   edx
  41b79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79f:	pusha  
  41b7a0:	ins    DWORD PTR es:[edi],dx
  41b7a1:	pop    eax
  41b7a2:	cld    
  41b7a3:	sbb    BYTE PTR [eax+0x3a],0x2
  41b7a7:	or     dl,BYTE PTR [ebp+ebp*2-0xc]
  41b7ab:	dec    esi
  41b7ac:	cs popa 
  41b7ae:	push   ebx
  41b7af:	mov    edx,0xef3587c7
  41b7b4:	(bad)  
  41b7b5:	or     al,0x8e
  41b7b7:	mov    dl,BYTE PTR ds:0x6aed5d68
  41b7bd:	mov    ds:0xe3b180de,eax
  41b7c2:	pop    ebp
  41b7c3:	jbe    0x41b78d
  41b7c5:	xchg   BYTE PTR ds:0x6551f407,ah
  41b7cb:	adc    ebx,esp
  41b7cd:	rcr    DWORD PTR [esi],cl
  41b7cf:	xor    DWORD PTR [edi*4+0x5e1dfae9],0x8549930b
  41b7da:	fisub  WORD PTR [ebp-0x2d]
  41b7dd:	cmp    eax,edx
  41b7df:	pushf  
  41b7e0:	fstp   st(1)
  41b7e2:	adc    al,0x33
  41b7e4:	jl     0x41b773
  41b7e6:	btr    DWORD PTR [edx+eiz*8-0xc77cf67],edi
  41b7ee:	ins    BYTE PTR es:[edi],dx
  41b7ef:	inc    ecx
  41b7f0:	inc    edi
  41b7f1:	outs   dx,BYTE PTR ds:[esi]
  41b7f2:	push   edx
  41b7f3:	test   al,0x93
  41b7f5:	pop    ss
  41b7f6:	stos   BYTE PTR es:[edi],al
  41b7f7:	mov    ds:0x5aadd93a,al
  41b7fc:	data16 jb 0x41b7ce
  41b7ff:	call   0x1423832f
  41b804:	adc    DWORD PTR [edi],ecx
  41b806:	arpl   WORD PTR [edi-0xf],ax
  41b809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80a:	xchg   BYTE PTR [ebx+0x68bfecaf],ah
  41b810:	popf   
  41b811:	push   ss
  41b812:	mov    esp,0xebd63d24
  41b817:	daa    
  41b818:	jge    0x41b819
  41b81a:	adc    BYTE PTR [esi],ch
  41b81c:	dec    edi
  41b81d:	mov    al,ds:0xce10d2c0
  41b822:	(bad)  
  41b823:	mov    dl,0x67
  41b825:	add    esp,DWORD PTR [ecx+0x13452e65]
  41b82b:	pop    ds
  41b82c:	xchg   BYTE PTR [esi],bl
  41b82e:	stc    
  41b82f:	fwait
  41b830:	xchg   edx,eax
  41b831:	clc    
  41b832:	mov    ah,0x75
  41b834:	xlat   BYTE PTR ds:[ebx]
  41b835:	scas   al,BYTE PTR es:[edi]
  41b836:	lahf   
  41b837:	stos   BYTE PTR es:[edi],al
  41b838:	mov    esi,0x8a2b29d4
  41b83d:	mov    cl,0x85
  41b83f:	fistp  QWORD PTR [ebx-0x38]
  41b842:	jge    0x41b838
  41b844:	jge    0x41b7dc
  41b846:	pop    esp
  41b847:	cs xchg ebx,eax
  41b849:	mov    dh,0x39
  41b84b:	mov    dl,0x9a
  41b84d:	out    0xe9,eax
  41b84f:	out    dx,eax
  41b850:	mov    dh,0xa0
  41b852:	(bad)  
  41b853:	jbe    0x41b811
  41b855:	loope  0x41b81f
  41b857:	lods   al,BYTE PTR ds:[esi]
  41b858:	xchg   ecx,eax
  41b859:	ins    BYTE PTR es:[edi],dx
  41b85a:	out    dx,al
  41b85b:	pop    es
  41b85c:	(bad)  
  41b85d:	hlt    
  41b85e:	in     al,dx
  41b85f:	mov    al,0x21
  41b861:	mov    eax,0xf3749ae7
  41b866:	mov    edx,0x6d05908b
  41b86b:	ja     0x41b815
  41b86d:	jo     0x41b80f
  41b86f:	js     0x41b837
  41b871:	mov    BYTE PTR [esi-0x57d5db5b],ah
  41b877:	cld    
  41b878:	push   edx
  41b879:	pushf  
  41b87a:	add    ebx,ebp
  41b87c:	push   ebx
  41b87d:	outs   dx,BYTE PTR ds:[esi]
  41b87e:	iret   
  41b87f:	sub    eax,0xe6f8c0f
  41b884:	ror    DWORD PTR [eax-0x45],cl
  41b887:	stc    
  41b888:	sub    BYTE PTR [ecx-0x66],bh
  41b88b:	test   BYTE PTR [ebx],0x2a
  41b88e:	adc    eax,0x7955943a
  41b893:	push   esi
  41b894:	test   eax,0x16d4f857
  41b899:	aam    0xa5
  41b89b:	loop   0x41b8ff
  41b89d:	rol    BYTE PTR [eax],1
  41b89f:	xor    BYTE PTR [esi+0xc],bl
  41b8a2:	mov    ebp,0x60fd280b
  41b8a7:	test   al,0x7e
  41b8a9:	sub    esi,DWORD PTR [edx+esi*1]
  41b8ac:	int3   
  41b8ad:	aam    0xdc
  41b8af:	fimul  WORD PTR [esi+0x76]
  41b8b2:	add    BYTE PTR [esi+eiz*2-0x2750b82c],al
  41b8b9:	icebp  
  41b8ba:	int    0x36
  41b8bc:	and    dl,BYTE PTR [esp+ecx*8]
  41b8bf:	xchg   ebp,eax
  41b8c0:	ins    DWORD PTR es:[edi],dx
  41b8c1:	mov    dl,0xaf
  41b8c3:	xchg   DWORD PTR [esi-0x2a],esi
  41b8c6:	xchg   ecx,eax
  41b8c7:	loop   0x41b8c3
  41b8c9:	(bad)  
  41b8ca:	pop    edi
  41b8cb:	data16 jl 0x41b8fb
  41b8ce:	data16 arpl WORD PTR [esp+edi*4+0x6f],si
  41b8d3:	loop   0x41b887
  41b8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d6:	repnz add DWORD PTR [ecx-0x38],esp
  41b8da:	arpl   WORD PTR [esi],si
  41b8dc:	inc    esp
  41b8dd:	mov    al,0x8
  41b8df:	or     ecx,DWORD PTR [esi+0x5d]
  41b8e2:	cmp    bl,dl
  41b8e4:	out    dx,eax
  41b8e5:	push   edx
  41b8e6:	fnstsw WORD PTR [ecx]
  41b8e8:	lock int 0x86
  41b8eb:	adc    BYTE PTR [ecx-0x76],bl
  41b8ee:	cld    
  41b8ef:	pusha  
  41b8f0:	mov    edi,0x54dc383e
  41b8f5:	out    0x23,al
  41b8f7:	add    eax,0x24e0b64b
  41b8fc:	mov    cl,0x10
  41b8fe:	sub    al,0xf6
  41b900:	add    eax,0xdb815a15
  41b905:	pusha  
  41b906:	mov    cl,0x33
  41b908:	or     edx,ebp
  41b90a:	mov    ebx,0xc65b0ab6
  41b90f:	mov    ecx,fs
  41b911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b912:	test   ah,dh
  41b914:	sbb    edi,DWORD PTR [edx-0x2587ccfd]
  41b91a:	cmp    esp,DWORD PTR [ebx]
  41b91c:	sub    eax,0x5391dd6b
  41b921:	hlt    
  41b922:	iret   
  41b923:	test   BYTE PTR [edx+ecx*8+0x7e],cl
  41b927:	inc    edi
  41b928:	in     al,dx
  41b929:	fs mov al,0x5f
  41b92c:	and    edx,edx
  41b92e:	lahf   
  41b92f:	sbb    ecx,DWORD PTR [esi-0x71]
  41b932:	cdq    
  41b933:	sbb    DWORD PTR [ecx-0x15],0x8e4e6e6f
  41b93a:	fiadd  DWORD PTR [edx+esi*4-0x24]
  41b93e:	in     al,0x5e
  41b940:	jmp    0x39c2:0xad77bccb
  41b947:	add    BYTE PTR [ecx],0xe0
  41b94a:	arpl   WORD PTR [edx-0x52f91b21],sp
  41b950:	lods   eax,DWORD PTR ds:[esi]
  41b951:	dec    ecx
  41b953:	inc    BYTE PTR [eax]
  41b955:	cmp    ebp,DWORD PTR [edi+0x2fa0c3f0]
  41b95b:	es icebp 
  41b95d:	leave  
  41b95e:	ins    BYTE PTR es:[edi],dx
  41b95f:	fsub   QWORD PTR [edi+0x6e]
  41b962:	lds    edi,FWORD PTR [eax+0x58ff2100]
  41b968:	xor    ebx,DWORD PTR [eax]
  41b96a:	jge    0x41b905
  41b96c:	push   ds
  41b96d:	mov    al,ds:0xdd3f24a1
  41b972:	out    dx,eax
  41b973:	mov    dl,0xe1
  41b975:	mov    eax,0xde49e9da
  41b97a:	mov    ds:0xe4a63ba,al
  41b97f:	mov    eax,0xa5d8cdb2
  41b984:	xor    bl,BYTE PTR [eax+ebp*4]
  41b987:	xchg   edx,eax
  41b988:	into   
  41b989:	out    0x3e,eax
  41b98b:	cmp    bh,ah
  41b98d:	add    DWORD PTR [edx-0x16761a2b],edx
  41b993:	dec    eax
  41b994:	gs loope 0x41b9fb
  41b997:	retf   
  41b998:	fisub  DWORD PTR [esi-0x27]
  41b99b:	mov    ds:0x3950713e,eax
  41b9a0:	push   ebx
  41b9a1:	dec    esp
  41b9a2:	or     BYTE PTR [edx-0x1164fca0],bl
  41b9a8:	(bad)  
  41b9a9:	ds in  al,dx
  41b9ab:	inc    ebx
  41b9ac:	pop    edi
  41b9ad:	loopne 0x41b950
  41b9af:	and    edi,DWORD PTR [esi+0x27]
  41b9b2:	jecxz  0x41ba15
  41b9b4:	xor    al,0x7
  41b9b6:	aas    
  41b9b7:	enter  0x422,0x1e
  41b9bb:	jmp    0x41ba29
  41b9bd:	mov    ebx,0x54df6df
  41b9c2:	mov    al,0xbc
  41b9c4:	gs mov edi,edx
  41b9c7:	jbe    0x41ba2a
  41b9c9:	add    edx,ecx
  41b9cb:	les    ebx,FWORD PTR [eax]
  41b9cd:	gs pop ebp
  41b9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d0:	jmp    0x41b9ce
  41b9d2:	push   cs
  41b9d3:	sub    al,0xb9
  41b9d5:	jns    0x41b969
  41b9d7:	pop    es
  41b9d8:	pop    eax
  41b9d9:	mov    ds:0x943b7166,al
  41b9de:	sbb    BYTE PTR [edi+0x77],al
  41b9e1:	fist   DWORD PTR [eax-0x74]
  41b9e4:	sbb    bh,al
  41b9e6:	das    
  41b9e7:	psraw  mm7,mm3
  41b9ea:	rcr    BYTE PTR [edx-0x15],0x1
  41b9ee:	mov    edi,0x795f7e25
  41b9f3:	add    DWORD PTR [edx-0x34],ecx
  41b9f6:	mov    esp,0x225be10d
  41b9fb:	sbb    DWORD PTR [edx-0x4842bd87],ebx
  41ba01:	int    0x1
  41ba03:	mov    ecx,0xf502aa1b
  41ba08:	and    DWORD PTR [ebx],ebp
  41ba0a:	icebp  
  41ba0b:	jns    0x41ba29
  41ba0d:	or     BYTE PTR [eax+0x5a],ch
  41ba10:	out    0xa0,al
  41ba12:	inc    esi
  41ba13:	cmp    eax,0xa652c44a
  41ba18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba19:	and    eax,0x9818e3f0
  41ba1e:	cmc    
  41ba1f:	fidivr DWORD PTR [ebx]
  41ba21:	scas   eax,DWORD PTR es:[edi]
  41ba22:	xchg   edx,eax
  41ba23:	pop    edi
  41ba24:	outs   dx,DWORD PTR ds:[esi]
  41ba25:	mov    eax,DWORD PTR [edx+0x5cbefd52]
  41ba2b:	ins    BYTE PTR es:[edi],dx
  41ba2c:	pusha  
  41ba2d:	lahf   
  41ba2e:	neg    DWORD PTR [esi-0x4f]
  41ba31:	xor    al,0xee
  41ba33:	retf   0x2a63
  41ba36:	mov    edx,ecx
  41ba38:	adc    al,0xe6
  41ba3a:	rcl    cl,0x13
  41ba3d:	imul   edx,esp,0x57
  41ba40:	(bad)  
  41ba41:	sbb    edx,ebp
  41ba43:	adc    al,0x1e
  41ba45:	inc    esp
  41ba46:	ret    
  41ba47:	div    BYTE PTR [ecx+edi*4+0xcf07e73]
  41ba4e:	int    0x25
  41ba50:	pusha  
  41ba51:	dec    ecx
  41ba52:	and    DWORD PTR [ecx],edi
  41ba54:	or     BYTE PTR [ebp+0x32588b03],ah
  41ba5a:	inc    ecx
  41ba5b:	in     eax,0xd9
  41ba5d:	leave  
  41ba5e:	pop    eax
  41ba5f:	daa    
  41ba60:	hlt    
  41ba61:	lods   al,BYTE PTR ds:[esi]
  41ba62:	pop    ebx
  41ba63:	add    ch,bh
  41ba65:	aaa    
  41ba66:	in     eax,0x75
  41ba68:	lahf   
  41ba69:	push   ecx
  41ba6a:	pop    ss
  41ba6b:	call   DWORD PTR [ecx-0x5e]
  41ba6e:	pushf  
  41ba6f:	aam    0x6a
  41ba71:	mov    bh,0x6e
  41ba73:	in     eax,0x6a
  41ba75:	xor    BYTE PTR ds:0x572a770b,bl
  41ba7b:	jmp    0xcde3:0xe42f234f
  41ba82:	aam    0xdb
  41ba84:	jmp    0xe228a421
  41ba89:	xchg   ebp,eax
  41ba8a:	xchg   esp,eax
  41ba8b:	out    dx,al
  41ba8c:	iret   
  41ba8d:	fnstsw WORD PTR [ebp+0x542b9e7a]
  41ba93:	(bad)  [edi+0x56]
  41ba96:	outs   dx,DWORD PTR ds:[esi]
  41ba97:	cwde   
  41ba98:	xchg   ecx,eax
  41ba99:	mov    cl,0xbe
  41ba9b:	inc    edx
  41ba9c:	sub    edx,ebp
  41ba9e:	mov    BYTE PTR [esi-0x6b],al
  41baa1:	push   DWORD PTR [ecx+ebx*2-0xc]
  41baa5:	mov    bl,0x4e
  41baa7:	(bad)  
  41baa8:	fwait
  41baa9:	ins    BYTE PTR es:[edi],dx
  41baaa:	push   edx
  41baab:	lea    esp,[ebx+edi*2]
  41baae:	push   eax
  41baaf:	int    0x38
  41bab1:	cdq    
  41bab2:	dec    esi
  41bab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab4:	int    0xf7
  41bab6:	jmp    0xc36c14a4
  41babb:	fmul   DWORD PTR [esi+0x77]
  41babe:	xchg   edi,eax
  41babf:	mov    ecx,0x8429c770
  41bac4:	mov    edi,0xc4776e0f
  41bac9:	out    dx,al
  41baca:	sub    eax,0x501e9c41
  41bacf:	sbb    dl,BYTE PTR [eax+0x56]
  41bad2:	adc    al,0xc2
  41bad4:	xor    edx,DWORD PTR [edi]
  41bad6:	inc    eax
  41bad7:	test   eax,0x522ca0fa
  41badc:	pop    ss
  41badd:	hlt    
  41bade:	xchg   edi,eax
  41badf:	and    al,0xb4
  41bae1:	leave  
  41bae2:	mov    WORD PTR ds:0x7ccc1d8e,cs
  41bae8:	aam    0xbc
  41baea:	in     al,0x1c
  41baec:	imul   edi,esi,0x4b41a34b
  41baf2:	imul   esp,esp,0xffffffb7
  41baf5:	jl     0x41bb06
  41baf7:	jne    0x41baa9
  41baf9:	test   al,0xf4
  41bafb:	xchg   edi,eax
  41bafc:	arpl   WORD PTR [ecx],bx
  41bafe:	rol    eax,0xf2
  41bb01:	sbb    DWORD PTR [edx-0x5fc5874f],eax
  41bb07:	pusha  
  41bb08:	imul   edx,DWORD PTR [esi+0x56],0x34
  41bb0c:	and    eax,0x88db67a6
  41bb11:	jns    0x41baf2
  41bb13:	lahf   
  41bb14:	retf   
  41bb15:	mov    edx,ebx
  41bb17:	aad    0xea
  41bb19:	xchg   DWORD PTR [edi],edx
  41bb1b:	in     al,0x7b
  41bb1d:	pop    ebx
  41bb1e:	push   esp
  41bb1f:	test   eax,0x33ebf840
  41bb24:	aam    0x91
  41bb26:	pop    ds
  41bb27:	jmp    0x4074:0xc2f9933e
  41bb2e:	js     0x41bb79
  41bb30:	sbb    edi,DWORD PTR [eax]
  41bb32:	add    edx,edx
  41bb34:	daa    
  41bb35:	retf   
  41bb36:	imul   esp,DWORD PTR [edx],0x4de35d65
  41bb3c:	cmp    eax,0xeac8c646
  41bb41:	sbb    esp,DWORD PTR [edx-0x1d61d3d4]
  41bb47:	stos   DWORD PTR es:[edi],eax
  41bb48:	frstor [ebp-0x80]
  41bb4b:	dec    edi
  41bb4c:	cld    
  41bb4d:	jmp    0x41bb5a
  41bb4f:	imul   ecx,esp,0x91efc51f
  41bb55:	jecxz  0x41bb11
  41bb57:	sub    BYTE PTR [ecx-0x6d],dh
  41bb5a:	out    dx,al
  41bb5b:	mov    DWORD PTR [edi],ebx
  41bb5d:	mov    dl,0x21
  41bb5f:	jnp    0x41bb95
  41bb61:	push   cs
  41bb62:	xor    eax,0xf31db8a8
  41bb67:	mov    edi,0xf2e70a3d
  41bb6c:	out    0x9a,al
  41bb6e:	sbb    DWORD PTR [ebp+0x79f585b7],0x47938d48
  41bb78:	jae    0x41bb42
  41bb7a:	jmp    0xd0ed:0xaf9f6211
  41bb81:	xor    DWORD PTR [edx-0x57],ebp
  41bb84:	enter  0x4a65,0xb8
  41bb88:	jns    0x41bbcf
  41bb8a:	out    0xb9,al
  41bb8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb8d:	pop    eax
  41bb8e:	xor    al,0xa4
  41bb90:	popa   
  41bb91:	mov    ds:0xdfe79c18,al
  41bb96:	shr    ecx,cl
  41bb98:	fistp  WORD PTR [edi-0x3fdb8693]
  41bb9e:	sti    
  41bb9f:	xchg   ecx,eax
  41bba0:	(bad)  
  41bba1:	ss mov dl,0x2e
  41bba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba6:	addr16 mov eax,ds:0x4d58
  41bbaa:	or     DWORD PTR [ebx],esi
  41bbac:	mov    ah,0x2c
  41bbae:	push   es
  41bbaf:	add    eax,0x634730bc
  41bbb4:	inc    ebx
  41bbb5:	jecxz  0x41bb61
  41bbb7:	pop    ebx
  41bbb8:	es jne 0x41bbf9
  41bbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbbc:	inc    ebx
  41bbbd:	icebp  
  41bbbe:	add    BYTE PTR [esi-0x4a74a1f6],cl
  41bbc4:	not    BYTE PTR [ecx]
  41bbc6:	int3   
  41bbc7:	int3   
  41bbc8:	or     al,0xb0
  41bbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbcb:	js     0x41bba8
  41bbcd:	inc    eax
  41bbce:	in     eax,dx
  41bbcf:	(bad)  
  41bbd0:	pop    esi
  41bbd1:	or     eax,0xbc243a0e
  41bbd6:	ss into 
  41bbd8:	adc    ecx,DWORD PTR [ebp-0x30]
  41bbdb:	arpl   bp,di
  41bbdd:	or     esp,DWORD PTR [edx]
  41bbdf:	sbb    eax,0x9d6bbf81
  41bbe4:	lahf   
  41bbe5:	inc    edi
  41bbe6:	ins    BYTE PTR es:[edi],dx
  41bbe7:	push   0x0
  41bbe9:	pop    ds
  41bbea:	cld    
  41bbeb:	retf   0xcefe
  41bbee:	xchg   ebp,eax
  41bbef:	sub    ebp,DWORD PTR [edx]
  41bbf1:	enter  0xc470,0xe6
  41bbf5:	inc    esi
  41bbf6:	xor    ebx,edi
  41bbf8:	(bad)  
  41bbfa:	aas    
  41bbfb:	cmp    eax,0x42aecde5
  41bc00:	sbb    al,BYTE PTR [ecx]
  41bc02:	jmp    0x41bc10
  41bc04:	cmp    al,0xd4
  41bc06:	cli    
  41bc07:	xchg   ecx,eax
  41bc08:	ja     0x41bc5e
  41bc0a:	jb     0x41bb8e
  41bc0c:	push   ss
  41bc0d:	push   ebx
  41bc0e:	sub    dh,BYTE PTR [ebp-0x3b]
  41bc11:	ss das 
  41bc13:	inc    ebx
  41bc14:	fisub  WORD PTR [ebx]
  41bc16:	adc    edi,DWORD PTR [esi-0x39536485]
  41bc1c:	imul   esp,DWORD PTR [edx],0xffffffca
  41bc1f:	loop   0x41bc4d
  41bc21:	and    ecx,DWORD PTR [edx-0x35]
  41bc24:	jb     0x41bc5c
  41bc26:	test   al,0x63
  41bc28:	sub    al,0x45
  41bc2a:	neg    DWORD PTR [ebp+0x3b467abb]
  41bc30:	xor    DWORD PTR [ebx-0x2e443489],ebx
  41bc36:	and    bh,BYTE PTR [esi+0x49]
  41bc39:	inc    ecx
  41bc3a:	mov    bl,0x6c
  41bc3c:	in     al,0xdf
  41bc3e:	push   ebx
  41bc3f:	push   ebp
  41bc40:	mov    BYTE PTR [ebx],bl
  41bc42:	cdq    
  41bc43:	mov    edx,0x16944f8b
  41bc48:	test   DWORD PTR [ebx-0x3c],esp
  41bc4b:	cmp    BYTE PTR [ebx],0xfa
  41bc4e:	or     eax,0xeb91ed39
  41bc53:	fcmovu st,st(1)
  41bc55:	test   al,0xff
  41bc57:	popf   
  41bc58:	ret    
  41bc59:	repnz dec edi
  41bc5b:	(bad)  
  41bc5c:	adc    al,0xda
  41bc5e:	(bad)  
  41bc5f:	xor    DWORD PTR [ecx-0x29],edi
  41bc62:	or     DWORD PTR [eax],edi
  41bc64:	mov    bh,BYTE PTR [ecx]
  41bc66:	mov    esi,0xafc37adc
  41bc6b:	jo     0x41bc28
  41bc6d:	loopne 0x41bc79
  41bc6f:	retf   
  41bc70:	std    
  41bc71:	pushf  
  41bc72:	clc    
  41bc73:	sub    BYTE PTR [eax+0x5544f18f],0x37
  41bc7a:	inc    ecx
  41bc7b:	(bad)  
  41bc7c:	jno    0x41bc7e
  41bc7e:	mov    eax,ds:0x35b341f3
  41bc83:	pop    ecx
  41bc84:	xchg   edx,eax
  41bc85:	mov    al,0xa6
  41bc87:	imul   edx,DWORD PTR [ebx-0x596c8d52],0xffffffd1
  41bc8e:	leave  
  41bc8f:	xlat   BYTE PTR ds:[ebx]
  41bc90:	xchg   edx,eax
  41bc91:	push   esi
  41bc92:	sub    ebx,eax
  41bc94:	scas   eax,DWORD PTR es:[edi]
  41bc95:	push   esp
  41bc96:	pop    ss
  41bc97:	or     bh,BYTE PTR [esi-0x26f99eea]
  41bc9d:	sub    al,0xef
  41bc9f:	sbb    DWORD PTR [ecx+0x517efe8a],edx
  41bca5:	retf   0xac1c
  41bca8:	paddw  mm3,QWORD PTR [ebp+0x53abca10]
  41bcaf:	jno    0x41bc6f
  41bcb1:	dec    edx
  41bcb2:	hlt    
  41bcb3:	push   edx
  41bcb4:	ds add DWORD PTR ds:[esi-0x3248b53],0xfffffff7
  41bcbd:	jmp    0x41bcc8
  41bcbf:	xor    dl,BYTE PTR [esi]
  41bcc1:	pop    es
  41bcc2:	call   0x205:0xac32a726
  41bcc9:	add    DWORD PTR [edi-0x3f],eax
  41bccc:	push   ebx
  41bccd:	xor    ebx,esi
  41bccf:	cld    
  41bcd0:	fsubrp st(7),st
  41bcd2:	xchg   ebp,eax
  41bcd3:	cmp    ah,BYTE PTR [esi]
  41bcd5:	loopne 0x41bca9
  41bcd7:	jmp    0x25f1:0x99a3749b
  41bcde:	jns    0x41bd13
  41bce0:	xor    BYTE PTR [esi+0x5d],ch
  41bce3:	dec    esi
  41bce4:	inc    esi
  41bce5:	mov    cl,0x86
  41bce7:	inc    ebx
  41bce8:	mov    ebx,0x76935ff2
  41bced:	mov    ah,0x26
  41bcef:	sub    bh,BYTE PTR [eax+ebp*2+0x41]
  41bcf3:	cwde   
  41bcf4:	clc    
  41bcf5:	ret    0xf935
  41bcf8:	inc    ebp
  41bcf9:	mov    ebp,0xb9e761dc
  41bcfe:	dec    ebx
  41bcff:	(bad)  
  41bd00:	dec    ecx
  41bd01:	add    edi,DWORD PTR [eax+0xd0bd325]
  41bd07:	rol    DWORD PTR [esi-0x351e556f],cl
  41bd0d:	jno    0x41bd45
  41bd0f:	ss jb  0x41bd7f
  41bd12:	daa    
  41bd13:	mov    ss,WORD PTR [edi-0x66]
  41bd16:	mov    eax,0x47c0642
  41bd1b:	dec    eax
  41bd1c:	not    DWORD PTR [ebx+0x24179379]
  41bd22:	push   ds
  41bd23:	pop    esi
  41bd24:	test   al,0x57
  41bd26:	retf   0x8ced
  41bd29:	hlt    
  41bd2a:	addr16 aas 
  41bd2c:	adc    DWORD PTR gs:[ecx],edi
  41bd2f:	in     al,dx
  41bd30:	adc    edx,DWORD PTR [eax]
  41bd32:	(bad)  [ebp-0x77]
  41bd35:	and    ebx,DWORD PTR [ebx]
  41bd37:	adc    eax,0x5ebe766d
  41bd3c:	adc    eax,0x8b128d8f
  41bd42:	mov    ebx,0xee86edc2
  41bd47:	push   esp
  41bd48:	cdq    
  41bd49:	sbb    BYTE PTR [esi],0xc4
  41bd4c:	idiv   BYTE PTR [esi-0x4399d692]
  41bd52:	fsubr  DWORD PTR [ecx]
  41bd54:	ds dec esi
  41bd56:	adc    al,0xa0
  41bd58:	pop    edi
  41bd59:	(bad)  
  41bd5a:	cmp    eax,0x4787c3b0
  41bd5f:	pop    edx
  41bd60:	xor    eax,edx
  41bd62:	aas    
  41bd63:	xor    DWORD PTR [eax+0x53],edi
  41bd66:	fnstcw WORD PTR [ecx]
  41bd68:	into   
  41bd69:	ror    DWORD PTR [esp+ebx*1-0x67],1
  41bd6d:	sbb    eax,0xeb223178
  41bd72:	mov    esi,0xaa130aef
  41bd77:	add    eax,0xa28cacbe
  41bd7c:	sbb    DWORD PTR [esi+0x289ec623],edi
  41bd82:	sbb    al,0x5c
  41bd84:	mov    BYTE PTR [ebx+0x46c7684b],dl
  41bd8a:	mov    esi,esi
  41bd8c:	jl     0x41bd84
  41bd8e:	pop    esp
  41bd8f:	cmp    al,BYTE PTR [eax]
  41bd91:	aas    
  41bd92:	push   edx
  41bd93:	lea    ecx,[edx+ecx*4-0x191b262d]
  41bd9a:	dec    ecx
  41bd9b:	add    eax,0x80cc951a
  41bda0:	push   eax
  41bda1:	pop    ss
  41bda2:	les    edi,FWORD PTR fs:0x8ec15bbf
  41bda9:	push   ebx
  41bdaa:	std    
  41bdab:	test   eax,0x5c40d82
  41bdb0:	xlat   BYTE PTR ds:[ebx]
  41bdb1:	sub    DWORD PTR [eax],edx
  41bdb3:	xor    DWORD PTR [edx+0x7b85540a],edx
  41bdb9:	xor    eax,0xffffffb4
  41bdbc:	and    BYTE PTR [esi-0x52],dh
  41bdbf:	xor    cl,al
  41bdc1:	punpckhwd mm5,QWORD PTR [eax]
  41bdc4:	jle    0x41bdeb
  41bdc6:	push   cs
  41bdc7:	add    BYTE PTR [ebx],dh
  41bdc9:	or     edi,esp
  41bdcb:	push   ecx
  41bdcc:	sti    
  41bdcd:	jne    0x41bdf1
  41bdcf:	sbb    eax,0x6cbda5fa
  41bdd4:	lds    edi,FWORD PTR [edi]
  41bdd6:	ins    DWORD PTR es:[edi],dx
  41bdd7:	sahf   
  41bdd8:	(bad)  
  41bdd9:	jns    0x41be54
  41bddb:	aad    0x53
  41bddd:	mov    dh,0xcd
  41bddf:	repz fcom st(1)
  41bde2:	inc    esp
  41bde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde4:	jns    0x41bda2
  41bde6:	je     0x41be1f
  41bde8:	lea    eax,[ebp-0x56]
  41bdeb:	xchg   esi,eax
  41bdec:	or     eax,0x56fd9023
  41bdf1:	mov    dl,0xa8
  41bdf3:	leave  
  41bdf4:	add    DWORD PTR [edx],esi
  41bdf6:	mov    cl,0x51
  41bdf8:	fwait
  41bdf9:	sub    dl,0xbf
  41bdfc:	scas   al,BYTE PTR es:[edi]
  41bdfd:	rcr    DWORD PTR [eax],cl
  41bdff:	enter  0xad12,0xbf
  41be03:	xor    ah,dh
  41be05:	and    DWORD PTR [edi+0x15fed187],0xe984a462
  41be0f:	in     eax,0x7e
  41be11:	add    BYTE PTR [edi-0x32e445b8],ah
  41be17:	imul   edi,DWORD PTR [edi-0x783ab6ae],0x3fb9ba7e
  41be21:	push   esi
  41be22:	jno    0x41be19
  41be24:	jae    0x41bdf0
  41be26:	cdq    
  41be27:	in     al,dx
  41be28:	dec    edi
  41be29:	ins    BYTE PTR es:[edi],dx
  41be2a:	cmp    dh,BYTE PTR [ebp*8-0x61d6dea6]
  41be31:	lock mov fs,WORD PTR [ebp+edi*2-0x29]
  41be36:	sub    DWORD PTR [edx-0x4c],ebx
  41be39:	sub    al,ch
  41be3b:	fisub  WORD PTR [ebx+esi*4]
  41be3e:	std    
  41be3f:	ss ds div ebx
  41be43:	(bad)  
  41be45:	stos   DWORD PTR es:[edi],eax
  41be46:	xchg   ebx,eax
  41be47:	add    al,0xa2
  41be49:	adc    edi,DWORD PTR [edx+0x3a3c8e6f]
  41be4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be50:	sub    bl,BYTE PTR [edi-0x243af70b]
  41be56:	sbb    BYTE PTR [edx],dh
  41be58:	jnp    0x41be38
  41be5a:	rol    BYTE PTR [edi-0x728d9fb2],cl
  41be60:	fwait
  41be61:	shl    bh,0x52
  41be64:	(bad)  
  41be66:	mov    eax,0xa663a9ff
  41be6b:	adc    eax,DWORD PTR [ebx-0x3c]
  41be6e:	pop    ds
  41be6f:	adc    ah,BYTE PTR [eax-0x64]
  41be72:	loop   0x41be38
  41be74:	xor    cl,al
  41be76:	test   al,0x1a
  41be78:	test   eax,0x565cfed9
  41be7d:	inc    edi
  41be7e:	cmp    BYTE PTR ds:0x3e991f1a,ch
  41be84:	int3   
  41be85:	stos   BYTE PTR es:[edi],al
  41be86:	lods   al,BYTE PTR ds:[esi]
  41be87:	retf   0x4527
  41be8a:	add    eax,0x61f969bd
  41be8f:	lds    edx,FWORD PTR [esi]
  41be91:	imul   eax,DWORD PTR ds:0xc8e5b72d,0x172bbcc2
  41be9b:	and    edi,DWORD PTR [eax+eiz*8+0x5e20f363]
  41bea2:	mov    esp,cs
  41bea4:	pop    esi
  41bea5:	jae    0x41bf1f
  41bea7:	mov    BYTE PTR [ecx+0x3e8e4bfe],bh
  41bead:	xchg   esi,eax
  41beae:	popa   
  41beaf:	jmp    0x595e430d
  41beb4:	mov    ebx,0xe7544f5b
  41beb9:	out    dx,al
  41beba:	xor    BYTE PTR [ebx],al
  41bebc:	fwait
  41bebd:	push   es
  41bebe:	inc    ecx
  41bebf:	(bad)  
  41bec0:	jecxz  0x41bee5
  41bec2:	jns    0x41be8b
  41bec4:	jmp    0x41be91
  41bec6:	add    DWORD PTR [esi+0x60],esp
  41bec9:	mov    ebp,0xe818ac24
  41bece:	or     ch,al
  41bed0:	rcl    DWORD PTR [edi],cl
  41bed2:	dec    ebx
  41bed3:	add    al,0x4e
  41bed5:	jb     0x41bee0
  41bed7:	inc    ecx
  41bed8:	mov    eax,ds:0xf9de709e
  41bedd:	jmp    0xd311:0xce61d7d3
  41bee4:	stc    
  41bee5:	inc    eax
  41bee6:	mul    BYTE PTR [edi+0x66]
  41bee9:	std    
  41beea:	into   
  41beeb:	sar    BYTE PTR ds:0xcb44fca0,cl
  41bef1:	mov    ecx,0x2361e437
  41bef6:	mov    ecx,0xf0af2e16
  41befb:	test   al,0x74
  41befd:	or     ebx,DWORD PTR [edx+0x7]
  41bf00:	aad    0x28
  41bf02:	in     eax,0x8f
  41bf04:	hlt    
  41bf05:	int    0x65
  41bf07:	push   ss
  41bf08:	retf   
  41bf09:	mov    ds:0xe9661c9d,al
  41bf0e:	scas   al,BYTE PTR es:[edi]
  41bf0f:	add    ebx,DWORD PTR [ebx+0x210175eb]
  41bf15:	jmp    0x62e7:0x967f91f9
  41bf1c:	add    eax,0x3d2a05fe
  41bf21:	repnz repnz outs dx,BYTE PTR ds:[esi]
  41bf24:	ror    DWORD PTR [ecx+ebp*1],1
  41bf27:	idiv   bl
  41bf29:	hlt    
  41bf2a:	mov    ebp,0xb594ae35
  41bf2f:	dec    esi
  41bf30:	sar    BYTE PTR [eax-0x6e],1
  41bf33:	out    0xb3,eax
  41bf35:	dec    edi
  41bf36:	scas   al,BYTE PTR es:[edi]
  41bf37:	push   esp
  41bf38:	xchg   esp,eax
  41bf39:	(bad)  [eax-0x59]
  41bf3c:	inc    ebp
  41bf3e:	push   ebx
  41bf3f:	nop
  41bf40:	inc    edi
  41bf41:	inc    esi
  41bf42:	test   BYTE PTR [esi],ch
  41bf44:	inc    esp
  41bf45:	dec    edx
  41bf46:	inc    ecx
  41bf47:	xor    al,0xbd
  41bf49:	xor    DWORD PTR [edx+0x3fb5dc48],esp
  41bf4f:	out    dx,al
  41bf50:	sbb    dl,bl
  41bf52:	jp     0x41bf2e
  41bf54:	mov    DWORD PTR [ebx-0x26],ebp
  41bf57:	pmaxub mm4,QWORD PTR [ecx-0x70cf50ea]
  41bf5e:	mov    ah,0x53
  41bf60:	mov    ebx,esp
  41bf62:	enter  0xf88e,0x2b
  41bf66:	pop    eax
  41bf67:	jp     0x41bf73
  41bf69:	cwde   
  41bf6a:	jns    0x41beee
  41bf6c:	xor    eax,0xb90e42aa
  41bf71:	jp     0x41bff1
  41bf73:	lea    eax,ds:0x10cbfb8d
  41bf79:	loope  0x41bf77
  41bf7b:	leave  
  41bf7c:	iret   
  41bf7d:	sub    eax,0x9ff8265b
  41bf82:	div    BYTE PTR [eax+0x7]
  41bf85:	(bad)  
  41bf86:	jmp    0x41bf63
  41bf88:	jp     0x41bf91
  41bf8a:	jmp    0x53053c3e
  41bf8f:	mov    edx,0x6513da96
  41bf94:	and    esi,edx
  41bf96:	mov    di,0x6388
  41bf9a:	pop    ds
  41bf9b:	lods   al,BYTE PTR ds:[esi]
  41bf9c:	inc    ecx
  41bf9d:	and    dl,BYTE PTR [edi]
  41bf9f:	xchg   ecx,eax
  41bfa0:	add    DWORD PTR [ecx-0x3f73b09d],eax
  41bfa6:	mov    ch,BYTE PTR [eax+0x410204b7]
  41bfac:	mov    esp,0x39ac268a
  41bfb1:	mov    esp,0x5fe26a97
  41bfb6:	xor    BYTE PTR [ecx-0x137a1ee6],dl
  41bfbc:	loopne 0x41c014
  41bfbe:	cmp    ebp,DWORD PTR [eax]
  41bfc0:	xor    eax,0x482e692b
  41bfc5:	popa   
  41bfc6:	dec    esp
  41bfc7:	mov    edi,0xd995059e
  41bfcc:	mov    edi,0xbcb3f290
  41bfd1:	lods   eax,DWORD PTR ds:[esi]
  41bfd2:	sbb    ecx,0xffffffc6
  41bfd5:	cmp    esp,0xffffffae
  41bfd8:	pop    edx
  41bfd9:	and    bh,al
  41bfdb:	int    0x7b
  41bfdd:	cmp    bl,BYTE PTR [ebp-0x6f4f3653]
  41bfe3:	js     0x41c013
  41bfe5:	mov    ch,0x74
  41bfe7:	jg     0x41c011
  41bfe9:	mov    ebx,0x5d02f98c
  41bfee:	or     eax,0x61bb5100
  41bff3:	mov    ebp,0xf2e82e6b
  41bff8:	cmovg  edi,DWORD PTR [edi]
  41bffb:	sub    BYTE PTR [ebp+esi*2+0x27e373e9],cl
  41c002:	push   ebp
  41c003:	rcl    DWORD PTR [esi-0x41],0x90
  41c007:	(bad)  
  41c008:	xor    al,0x76
  41c00a:	dec    edx
  41c00b:	int3   
  41c00c:	icebp  
  41c00d:	mov    ds:0x73bd119b,eax
  41c012:	out    dx,al
  41c013:	mov    ds:0x3e87990c,al
  41c018:	dec    ch
  41c01a:	mov    al,0x90
  41c01c:	pusha  
  41c01d:	dec    ecx
  41c01e:	push   esi
  41c01f:	cld    
  41c020:	inc    DWORD PTR ds:0xcd8b48c3
  41c026:	xor    al,0xce
  41c028:	dec    esi
  41c029:	neg    ebp
  41c02b:	ds jge 0x41c001
  41c02e:	jae    0x41c078
  41c030:	lods   eax,DWORD PTR ds:[esi]
  41c031:	stc    
  41c032:	mov    ebx,0x67d44d53
  41c037:	xlat   BYTE PTR ds:[ebx]
  41c038:	jl     0x41c076
  41c03a:	rol    DWORD PTR [ecx-0x1d],1
  41c03d:	cwde   
  41c03e:	or     BYTE PTR [ebx-0x357e03f8],0x44
  41c045:	sbb    al,0xa8
  41c047:	mov    cl,0x98
  41c049:	jo     0x41c04c
  41c04b:	into   
  41c04c:	(bad)  
  41c050:	jecxz  0x41c013
  41c052:	pop    ss
  41c053:	mov    DWORD PTR [edi-0x60],esi
  41c056:	loop   0x41c02f
  41c058:	popw   ss
  41c05a:	fdiv   DWORD PTR [ebx+0x4d]
  41c05d:	push   eax
  41c05e:	stos   BYTE PTR es:[edi],al
  41c05f:	hlt    
  41c060:	aam    0x72
  41c062:	jle    0x41c01d
  41c064:	mov    bl,0x3c
  41c066:	std    
  41c067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c068:	iret   
  41c069:	ins    DWORD PTR es:[edi],dx
  41c06a:	mov    eax,0x48bf23de
  41c06f:	sti    
  41c070:	hlt    
  41c071:	add    BYTE PTR [edi],bl
  41c073:	and    eax,0xd4a5ed49
  41c078:	or     bl,BYTE PTR [ebx]
  41c07a:	ror    BYTE PTR [eax-0x5c],cl
  41c07d:	sbb    al,0x2a
  41c07f:	adc    ah,bh
  41c081:	adc    DWORD PTR [ebp+0x16],ecx
  41c084:	cmp    al,0x5f
  41c086:	out    dx,eax
  41c087:	fdivr  st,st(1)
  41c089:	(bad)  
  41c08a:	and    eax,0x1def0a3
  41c08f:	dec    esi
  41c090:	sub    eax,0x53f82bfa
  41c095:	loop   0x41c065
  41c097:	adc    eax,0x8eb77987
  41c09c:	(bad)
  41c0a1:	pop    edi
  41c0a2:	dec    esp
  41c0a3:	mov    bl,0x32
  41c0a5:	jecxz  0x41c0b4
  41c0a7:	push   cs
  41c0a8:	ret    
  41c0a9:	add    BYTE PTR [edx-0x57],0x30
  41c0ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ae:	lea    ecx,[eax]
  41c0b0:	dec    DWORD PTR [ebx+0xb]
  41c0b3:	pop    ebp
  41c0b4:	sbb    DWORD PTR [esi+0x38],ecx
  41c0b7:	loope  0x41c0bc
  41c0b9:	xchg   edi,eax
  41c0ba:	sub    cl,ah
  41c0bc:	shl    BYTE PTR [eax+0x4326549f],cl
  41c0c2:	gs out dx,al
  41c0c4:	jne    0x41c05b
  41c0c6:	aaa    
  41c0c7:	fdecstp 
  41c0c9:	loop   0x41c128
  41c0cb:	adc    DWORD PTR [ebx-0x32],eax
  41c0ce:	mov    ah,0xe8
  41c0d0:	mov    ebp,0xe3f85820
  41c0d5:	add    eax,DWORD PTR [ecx]
  41c0d7:	mov    bh,0x69
  41c0d9:	retf   0xfeff
  41c0dc:	bound  edx,QWORD PTR [edi]
  41c0de:	pop    esi
  41c0df:	test   DWORD PTR [ebp-0x30],esp
  41c0e2:	xchg   esp,eax
  41c0e3:	pop    edx
  41c0e4:	sbb    al,0xfb
  41c0e6:	jo     0x41c09b
  41c0e8:	test   al,0x87
  41c0ea:	mov    cl,dl
  41c0ec:	arpl   WORD PTR [esi-0x30],bp
  41c0ef:	fnstsw WORD PTR [esi]
  41c0f1:	ss in  al,0x27
  41c0f4:	cwde   
  41c0f5:	pop    DWORD PTR [ebx+edi*2+0x461b80c2]
  41c0fc:	xor    ecx,ebx
  41c0fe:	out    dx,al
  41c0ff:	jbe    0x41c0ac
  41c101:	imul   esp,DWORD PTR ds:0x54fcf868,0x924eae78
  41c10b:	inc    eax
  41c10c:	(bad)  
  41c10d:	repnz inc esi
  41c10f:	out    dx,eax
  41c110:	inc    esp
  41c111:	mov    esi,0xc3bf4438
  41c116:	push   esi
  41c117:	(bad)  
  41c118:	retf   
  41c119:	dec    edi
  41c11a:	jge    0x41c102
  41c11c:	add    dh,dh
  41c11e:	dec    esp
  41c11f:	jmp    0x41c103
  41c121:	addr16 icebp 
  41c123:	daa    
  41c124:	scas   al,BYTE PTR es:[edi]
  41c125:	jl     0x41c11c
  41c127:	in     eax,dx
  41c128:	inc    ecx
  41c129:	cwde   
  41c12a:	fwait
  41c12b:	push   esi
  41c12c:	data16 or al,0xe6
  41c12f:	mov    cl,0x1d
  41c131:	or     ebx,DWORD PTR [esi]
  41c133:	test   eax,0xf3497301
  41c138:	std    
  41c139:	pop    edi
  41c13a:	xlat   BYTE PTR ds:[ebx]
  41c13b:	add    edi,DWORD PTR [esi+esi*4+0x3ac05195]
  41c142:	xchg   esp,eax
  41c143:	xor    edi,DWORD PTR [ebx]
  41c145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c146:	cld    
  41c147:	fs push ebp
  41c149:	test   BYTE PTR [ebx],ah
  41c14b:	addr16 das 
  41c14d:	add    eax,0x318dd9a9
  41c152:	mov    WORD PTR [edi-0xa21fdd],?
  41c158:	je     0x41c1a9
  41c15a:	jb     0x41c149
  41c15c:	js     0x41c15f
  41c15e:	cmp    BYTE PTR [ebx+0x49],dl
  41c161:	and    ebp,DWORD PTR [si]
  41c164:	(bad)  
  41c165:	or     eax,0x7aea77f
  41c16a:	or     edx,edi
  41c16c:	pushf  
  41c16d:	xor    ah,BYTE PTR [eax]
  41c16f:	jmp    0x567e27e3
  41c174:	je     0x41c1ee
  41c176:	out    0xe9,eax
  41c178:	pushf  
  41c179:	pop    edx
  41c17a:	repz sbb al,0x15
  41c17d:	cwde   
  41c17e:	lea    edi,[ecx+0x395fa72b]
  41c184:	shl    al,0x7d
  41c187:	sti    
  41c188:	mov    cl,0x4a
  41c18a:	in     al,0x17
  41c18c:	iret   
  41c18d:	and    eax,0xd5157e20
  41c192:	adc    DWORD PTR [edi+ebx*4-0x5f],ecx
  41c196:	std    
  41c197:	aam    0xc1
  41c199:	jb     0x41c202
  41c19b:	mov    bl,0xbf
  41c19d:	call   0xd091ad47
  41c1a2:	push   esp
  41c1a3:	stos   BYTE PTR es:[edi],al
  41c1a4:	dec    ebx
  41c1a5:	push   es
  41c1a6:	jns    0x41c1bc
  41c1a8:	out    dx,al
  41c1a9:	test   eax,0xd9b15b3d
  41c1ae:	sub    eax,0x63f8a2e2
  41c1b3:	push   0x796231bb
  41c1b8:	pushf  
  41c1b9:	pop    edi
  41c1ba:	lahf   
  41c1bb:	mov    al,ds:0xb12dc463
  41c1c0:	test   eax,0xa42ded2b
  41c1c5:	scas   al,BYTE PTR es:[edi]
  41c1c6:	mov    dh,0xe0
  41c1c8:	int    0x10
  41c1ca:	(bad)  
  41c1cb:	add    DWORD PTR [ecx+0x452d130a],0x10
  41c1d2:	cli    
  41c1d3:	jmp    0xd7d8:0x4c7b25a4
  41c1da:	and    ebx,DWORD PTR cs:[edi+0x38]
  41c1de:	adc    BYTE PTR [ebp-0x19],al
  41c1e1:	and    dh,al
  41c1e3:	xchg   esi,eax
  41c1e4:	pusha  
  41c1e5:	jb     0xbce75c42
  41c1eb:	xor    BYTE PTR gs:[eax],bl
  41c1ee:	ret    0x8d9f
  41c1f1:	ficomp WORD PTR [edi-0x1b]
  41c1f4:	cmp    al,0x7c
  41c1f6:	rcl    BYTE PTR [eax+0x78],0xde
  41c1fa:	enter  0xb17e,0x4a
  41c1fe:	jmp    0x4452afae
  41c203:	mov    edx,esi
  41c205:	out    dx,al
  41c206:	dec    ebx
  41c207:	scas   al,BYTE PTR es:[edi]
  41c208:	out    0x5b,eax
  41c20a:	retf   
  41c20b:	jp     0x41c227
  41c20d:	and    bl,BYTE PTR [eax+0x6c]
  41c210:	mov    eax,ds:0x2c3ade19
  41c215:	or     ebx,ebp
  41c217:	sub    DWORD PTR [edi+0x275ed987],ebp
  41c21d:	jno    0x41c248
  41c21f:	mov    BYTE PTR [ebx-0x56ebb613],dl
  41c225:	int    0x8c
  41c227:	fcomp  st(4)
  41c229:	push   0xffffffe8
  41c22b:	jo     0x41c1ae
  41c22d:	add    DWORD PTR [edx-0x35c15239],ebp
  41c233:	pop    ecx
  41c234:	bound  edx,QWORD PTR [edi+0x18]
  41c237:	pop    ds
  41c238:	repnz or eax,0xd47e72cd
  41c23e:	jo     0x41c279
  41c240:	out    0x7a,eax
  41c242:	push   edx
  41c243:	jbe    0x41c288
  41c245:	rcl    BYTE PTR [eax+0x2a],cl
  41c248:	ds dec esi
  41c24a:	mov    edx,0xd17072d4
  41c24f:	outs   dx,BYTE PTR ds:[esi]
  41c250:	cmp    ah,BYTE PTR [edx-0x15dffa40]
  41c256:	rol    esp,cl
  41c258:	jg     0x41c25c
  41c25a:	hlt    
  41c25b:	mov    al,ds:0xda590a91
  41c260:	sbb    al,0x1d
  41c262:	js     0x41c2d5
  41c264:	push   edi
  41c265:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41c267:	mov    cl,bh
  41c269:	xor    eax,0xd00e214b
  41c26e:	mov    ch,0xdd
  41c270:	add    BYTE PTR [eax-0x4c],al
  41c273:	mov    edi,0x5de2925b
  41c278:	(bad)  
  41c27a:	scas   eax,DWORD PTR es:[edi]
  41c27b:	jmp    0x3000:0x1d8493ab
  41c282:	jnp    0x41c2bc
  41c284:	fsub   QWORD PTR [edx+0x70]
  41c287:	mov    edx,0xdeca6946
  41c28c:	jne    0x41c248
  41c28e:	sub    DWORD PTR [eax],edi
  41c290:	add    edi,ebp
  41c292:	mov    eax,0x3e009150
  41c297:	sbb    esp,DWORD PTR [edi]
  41c299:	in     eax,0x9e
  41c29b:	or     eax,0x66e18c4f
  41c2a0:	das    
  41c2a1:	dec    esi
  41c2a2:	sub    dl,BYTE PTR [edi+0x1951190c]
  41c2a8:	leave  
  41c2a9:	mov    eax,ecx
  41c2ab:	mov    esi,0xd0b8fb5d
  41c2b0:	aam    0x95
  41c2b2:	pop    ebx
  41c2b3:	test   al,0x52
  41c2b5:	pop    ss
  41c2b6:	inc    esi
  41c2b7:	mov    ecx,0xc19b5351
  41c2bc:	sbb    bl,BYTE PTR [eax+0x21]
  41c2bf:	fst    DWORD PTR [ebp-0x7e]
  41c2c2:	enter  0xd1e2,0x3d
  41c2c6:	pop    ecx
  41c2c7:	fist   WORD PTR [edi-0x11ac0431]
  41c2cd:	xor    BYTE PTR [edx],bh
  41c2cf:	sbb    bh,BYTE PTR [eax]
  41c2d1:	hlt    
  41c2d2:	lods   al,BYTE PTR ds:[esi]
  41c2d3:	lods   eax,DWORD PTR ds:[esi]
  41c2d5:	in     eax,dx
  41c2d6:	test   DWORD PTR [ebp+eiz*2+0x2d9fa6b1],eax
  41c2dd:	(bad)  
  41c2de:	pcmpgtb mm2,QWORD PTR [esi-0x59a0da39]
  41c2e5:	ja     0x41c2c2
  41c2e7:	dec    edi
  41c2e8:	inc    esp
  41c2e9:	add    BYTE PTR [edx+0x7b1e5678],bh
  41c2ef:	or     BYTE PTR [eax],dh
  41c2f1:	mov    ch,0xff
  41c2f3:	and    bl,BYTE PTR [eax-0x36]
  41c2f6:	mov    ds:0x4f1ecaf5,eax
  41c2fb:	jmp    0x41c2af
  41c2fd:	in     al,0xc9
  41c2ff:	add    BYTE PTR [edi-0x19f65ab1],ch
  41c305:	xchg   ebx,eax
  41c306:	push   ebp
  41c307:	sbb    eax,DWORD PTR [edx+0x3f]
  41c30a:	sub    al,0xeb
  41c30c:	mov    esp,0xbb52e00c
  41c311:	loop   0x41c357
  41c313:	mov    cl,0x2a
  41c315:	or     BYTE PTR [ebp+0x6ae24b6e],cl
  41c31b:	inc    esp
  41c31c:	fnstcw WORD PTR [ecx+0x331db42a]
  41c322:	leave  
  41c323:	ja     0x41c2f5
  41c325:	aas    
  41c326:	enter  0xe90d,0x2b
  41c32a:	idiv   BYTE PTR [ebx]
  41c32c:	repnz loope 0x41c37c
  41c32f:	arpl   WORD PTR [eax],ax
  41c331:	xor    edi,DWORD PTR [edx]
  41c333:	add    ecx,ecx
  41c335:	hlt    
  41c336:	sub    ebx,DWORD PTR [ebp-0x6b]
  41c339:	cwde   
  41c33a:	add    DWORD PTR [ebx],eax
  41c33c:	into   
  41c33d:	cmp    eax,0x9f71b61c
  41c342:	mov    esi,0x56980a7f
  41c347:	xor    BYTE PTR [edx],cl
  41c349:	inc    edx
  41c34a:	add    ah,bh
  41c34c:	xlat   BYTE PTR ds:[ebx]
  41c34d:	mov    al,0xe2
  41c34f:	mov    cl,0xaf
  41c351:	call   0x84b17e1b
  41c356:	int3   
  41c357:	in     eax,dx
  41c358:	nop
  41c359:	xchg   esi,eax
  41c35a:	loop   0x41c2de
  41c35c:	cmc    
  41c35d:	mov    cl,0x54
  41c35f:	js     0x41c368
  41c361:	clc    
  41c362:	xchg   edi,eax
  41c363:	loope  0x41c349
  41c365:	repz aad 0x4
  41c368:	test   DWORD PTR [ebx],0xeb599f32
  41c36e:	fidiv  WORD PTR ds:0x6437584
  41c374:	cmc    
  41c375:	push   0x5f16c6bf
  41c37a:	daa    
  41c37b:	bound  ecx,QWORD PTR [esi]
  41c37d:	mov    cl,0x71
  41c37f:	(bad)  
  41c380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c381:	fisubr WORD PTR [edi]
  41c383:	mov    eax,ds:0x9cddeb9
  41c388:	call   0x138f:0x6ed441fc
  41c38f:	sub    BYTE PTR [edi-0x5e],0x54
  41c393:	push   esp
  41c394:	emms   
  41c396:	pop    ecx
  41c397:	shr    DWORD PTR [edx],1
  41c399:	repnz int 0x86
  41c39c:	fild   QWORD PTR [edi+0xd8371b5]
  41c3a2:	xor    ebp,ebp
  41c3a4:	push   edx
  41c3a5:	outs   dx,BYTE PTR ds:[esi]
  41c3a6:	outs   dx,DWORD PTR ds:[esi]
  41c3a7:	je     0x41c421
  41c3a9:	push   0x9bbd199f
  41c3ae:	add    ecx,DWORD PTR [ecx]
  41c3b0:	popf   
  41c3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3b2:	outs   dx,DWORD PTR ds:[esi]
  41c3b3:	aad    0x3b
  41c3b5:	xchg   ecx,eax
  41c3b6:	push   ds
  41c3b7:	pushw  es
  41c3b9:	cmp    al,bl
  41c3bb:	sub    DWORD PTR [edi-0x6a],eax
  41c3be:	ret    
  41c3bf:	repz scas al,BYTE PTR es:[edi]
  41c3c1:	(bad)  
  41c3c2:	and    eax,edi
  41c3c4:	sub    ebx,esp
  41c3c6:	push   edx
  41c3c7:	test   DWORD PTR [ebx-0x4e3d0114],edx
  41c3cd:	in     al,0xc8
  41c3cf:	ja     0x41c433
  41c3d1:	mov    bh,0xaa
  41c3d3:	jg     0x41c396
  41c3d5:	stc    
  41c3d6:	push   ebx
  41c3d7:	sbb    eax,0x4042b1d3
  41c3dc:	xchg   esi,eax
  41c3dd:	rcl    bh,0xc
  41c3e0:	xor    dh,dh
  41c3e2:	(bad)  
  41c3e3:	gs js  0x41c3cb
  41c3e6:	mov    bl,0x2b
  41c3e8:	push   0xf
  41c3ea:	cmp    BYTE PTR [eax-0x7],dl
  41c3ed:	aad    0xdb
  41c3ef:	setle  ch
  41c3f2:	mov    bh,0x84
  41c3f4:	mov    esp,0x6fb8641
  41c3f9:	fst    DWORD PTR [edx+0x5f]
  41c3fc:	mov    bl,0xd9
  41c3fe:	xor    al,0xd0
  41c400:	popa   
  41c401:	mov    edi,0xbd41db59
  41c406:	jne    0x41c450
  41c408:	xchg   esi,eax
  41c409:	neg    BYTE PTR [edi-0xed0daee]
  41c40f:	xchg   ecx,eax
  41c410:	push   ecx
  41c411:	xchg   ecx,eax
  41c412:	dec    ebp
  41c413:	scas   al,BYTE PTR es:[edi]
  41c414:	aad    0x85
  41c416:	(bad)  
  41c417:	sub    DWORD PTR [esi+0x70],edx
  41c41a:	inc    edi
  41c41b:	test   al,0x59
  41c41d:	jae    0x41c48a
  41c41f:	aas    
  41c420:	frstor [ebp-0x1d]
  41c423:	outs   dx,DWORD PTR ds:[esi]
  41c424:	lds    ebx,FWORD PTR [esi+0x7fae81e7]
  41c42a:	stos   BYTE PTR es:[edi],al
  41c42b:	sbb    edx,esp
  41c42d:	pop    DWORD PTR [ebp+0x9]
  41c430:	or     eax,0xec20f1fb
  41c435:	ss xor eax,0xfa1ee2ac
  41c43b:	xchg   ebx,eax
  41c43c:	fidiv  DWORD PTR [eax]
  41c43e:	(bad)  
  41c43f:	push   edi
  41c440:	cmp    eax,0x97a26f4f
  41c445:	pop    edx
  41c446:	sub    DWORD PTR [edi-0x23fa3c56],ebp
  41c44c:	lahf   
  41c44d:	jle    0x41c4ad
  41c44f:	pop    ecx
  41c450:	jmp    0x4ab9:0xa5452d27
  41c457:	and    BYTE PTR [edx+0x12752661],0x3a
  41c45e:	dec    esi
  41c45f:	inc    eax
  41c460:	cmc    
  41c461:	jg     0x41c47d
  41c463:	jp     0x41c458
  41c465:	push   eax
  41c466:	sub    al,bh
  41c468:	xchg   edi,eax
  41c469:	sub    BYTE PTR [edx+0x3d2e4556],ah
  41c46f:	jmp    0x41c420
  41c471:	cmp    al,0x99
  41c473:	mov    bh,ah
  41c475:	inc    ebx
  41c476:	xor    DWORD PTR [eax],ebp
  41c478:	cs and dl,al
  41c47b:	add    DWORD PTR [ecx-0x64],esp
  41c47e:	sbb    al,0xe4
  41c480:	sub    ah,al
  41c482:	sub    al,BYTE PTR [ebp+0x7ca616ce]
  41c488:	adc    BYTE PTR [esi-0x5c42a6ec],ah
  41c48e:	push   edx
  41c48f:	shr    BYTE PTR ds:0x10f84a5,cl
  41c495:	mov    eax,ds:0x2487ebb4
  41c49a:	enter  0x7c70,0x19
  41c49e:	jp     0x41c499
  41c4a0:	outs   dx,BYTE PTR ds:[esi]
  41c4a1:	xchg   edx,eax
  41c4a2:	sbb    al,0x12
  41c4a4:	shl    BYTE PTR [esi-0x25ca459c],1
  41c4aa:	xchg   edx,eax
  41c4ab:	iret   
  41c4ac:	mov    al,0x72
  41c4ae:	pop    edx
  41c4af:	test   DWORD PTR [edx-0x41],ecx
  41c4b2:	jge    0x41c436
  41c4b4:	js     0x41c4f2
  41c4b6:	retf   0xfe3d
  41c4b9:	(bad)  [esi]
  41c4bb:	xchg   ebp,eax
  41c4bc:	outs   dx,BYTE PTR ds:[esi]
  41c4bd:	sbb    eax,0x3cf64274
  41c4c2:	mov    eax,ds:0xb4ff5753
  41c4c7:	std    
  41c4c8:	adc    BYTE PTR ds:0x53fe3049,bl
  41c4ce:	enter  0x71d6,0xa8
  41c4d2:	pop    ebx
  41c4d3:	and    bh,ah
  41c4d5:	push   ecx
  41c4d6:	sub    bl,BYTE PTR [ebx+0x24fdc325]
  41c4dc:	sub    eax,edx
  41c4de:	out    dx,al
  41c4df:	es mov esi,0x74c17fac
  41c4e5:	mov    ecx,0xb2c38ef8
  41c4ea:	mov    esp,0x1f43986d
  41c4ef:	sub    esp,DWORD PTR [bp+di+0x1ee1]
  41c4f4:	or     DWORD PTR [eax+0x50c7ea3e],ebp
  41c4fa:	inc    edx
  41c4fb:	(bad)  
  41c4fc:	jno    0x41c526
  41c4fe:	outs   dx,BYTE PTR ds:[esi]
  41c4ff:	inc    ebx
  41c500:	cwde   
  41c501:	cmp    DWORD PTR [esi+ecx*8+0xd],0x76
  41c506:	mov    esp,0x35cdb3b1
  41c50b:	lods   eax,DWORD PTR ds:[esi]
  41c50c:	adc    BYTE PTR [ecx+0x51],bl
  41c50f:	outs   dx,BYTE PTR ds:[esi]
  41c510:	dec    edi
  41c511:	ret    
  41c512:	and    DWORD PTR [ebp-0x37],0x7
  41c516:	cs dec eax
  41c518:	xor    DWORD PTR [esi-0x7565a7e],ebx
  41c51e:	xchg   esi,eax
  41c51f:	pushf  
  41c520:	in     eax,0x71
  41c522:	ja     0x41c4d9
  41c524:	push   edi
  41c525:	cwde   
  41c526:	pop    esp
  41c527:	das    
  41c528:	sub    bl,BYTE PTR [esi-0x8d9a84c]
  41c52e:	iret   
  41c52f:	aas    
  41c530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c531:	and    dh,0x31
  41c534:	shl    al,0x5e
  41c537:	sbb    BYTE PTR [ecx-0x40],bl
  41c53a:	in     eax,dx
  41c53b:	out    dx,eax
  41c53c:	mov    esi,0xa5b52394
  41c541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c542:	xor    eax,0x6ddfb823
  41c547:	mov    DWORD PTR [ecx+0x76f18c48],eax
  41c54d:	mov    ebx,0x88438460
  41c552:	lea    edx,[eax-0x49]
  41c555:	jecxz  0x41c5d1
  41c557:	push   cs
  41c558:	(bad)  
  41c559:	and    DWORD PTR [eax+0x304cf13d],eax
  41c55f:	inc    esp
  41c560:	es xchg edi,eax
  41c562:	jbe    0x41c527
  41c564:	xlat   BYTE PTR ds:[ebx]
  41c565:	sbb    BYTE PTR [edi],al
  41c567:	sub    BYTE PTR [esi-0x2f],cl
  41c56a:	and    ecx,ebx
  41c56c:	mov    ebp,0x3bd73702
  41c571:	jae    0x41c52a
  41c573:	gs in  al,dx
  41c575:	or     BYTE PTR [ebx+0x4d],dl
  41c578:	jns    0x41c530
  41c57a:	push   ebx
  41c57b:	sub    BYTE PTR [eax+0x2c874fc7],cl
  41c581:	dec    ebx
  41c582:	sub    DWORD PTR [ecx],0xffffff8c
  41c585:	mov    al,es:0xe5f78d95
  41c58b:	data16 arpl bx,dx
  41c58e:	inc    edi
  41c58f:	jno    0x41c538
  41c591:	and    BYTE PTR [ebx],bl
  41c593:	sti    
  41c594:	dec    edx
  41c595:	data16 and BYTE PTR [eax],dl
  41c598:	popf   
  41c599:	clc    
  41c59a:	mov    cl,0x84
  41c59c:	popa   
  41c59d:	inc    ebx
  41c59e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c59f:	lods   al,BYTE PTR ds:[esi]
  41c5a0:	test   esi,esp
  41c5a2:	sti    
  41c5a3:	ror    DWORD PTR [eax+0x25ff5297],0x17
  41c5aa:	push   ebp
  41c5ab:	dec    ebp
  41c5ac:	xor    edi,eax
  41c5ae:	int    0x7b
  41c5b0:	test   eax,0x46395e18
  41c5b5:	mov    gs,edx
  41c5b7:	adc    DWORD PTR [eax],ecx
  41c5b9:	test   al,0xff
  41c5bb:	mov    al,0x9b
  41c5bd:	xchg   esp,eax
  41c5be:	add    al,0x5c
  41c5c0:	out    0x45,al
  41c5c2:	aad    0xde
  41c5c4:	retf   
  41c5c5:	mov    DWORD PTR ds:0xcf9dbe63,eax
  41c5cb:	xor    bl,BYTE PTR [esi+0x62eb3ece]
  41c5d1:	jno    0x41c557
  41c5d3:	pusha  
  41c5d4:	popa   
  41c5d5:	shl    DWORD PTR [edi],1
  41c5d7:	rol    BYTE PTR [ecx],cl
  41c5d9:	pop    edi
  41c5da:	jmp    0xa18694d4
  41c5df:	jae    0x41c61a
  41c5e1:	fstp   TBYTE PTR [esp+eiz*4]
  41c5e4:	xor    cl,dl
  41c5e6:	add    ebx,DWORD PTR [esi]
  41c5e8:	(bad)  
  41c5e9:	cld    
  41c5ea:	mov    WORD PTR [esi+0x29],fs
  41c5ed:	mov    WORD PTR [esi+0x7d2bc066],es
  41c5f3:	adc    eax,DWORD PTR es:[edi]
  41c5f6:	cs mov ah,0xbb
  41c5f9:	jmp    0x5b9c:0x98689259
  41c600:	jg     0x41c5eb
  41c602:	dec    ebp
  41c603:	mov    eax,0x32c6b86a
  41c608:	das    
  41c609:	pop    esi
  41c60a:	out    0x14,al
  41c60c:	fdivr  QWORD PTR [edi]
  41c60e:	lods   eax,DWORD PTR ds:[esi]
  41c60f:	ins    BYTE PTR es:[edi],dx
  41c610:	in     al,0x74
  41c612:	ret    0x675e
  41c615:	lods   eax,DWORD PTR ds:[esi]
  41c616:	pusha  
  41c617:	out    dx,al
  41c618:	outs   dx,DWORD PTR ds:[esi]
  41c619:	inc    edx
  41c61a:	push   ss
  41c61b:	mov    WORD PTR [eax],cs
  41c61d:	fwait
  41c61e:	dec    edx
  41c61f:	fs stc 
  41c621:	inc    ecx
  41c622:	out    dx,eax
  41c623:	push   ss
  41c624:	xor    al,0xbd
  41c627:	adc    dh,cl
  41c629:	mov    esp,edx
  41c62b:	retf   
  41c62c:	mul    DWORD PTR [edx+0x7781a50d]
  41c632:	or     al,0xec
  41c634:	add    cl,0xfb
  41c637:	and    bl,BYTE PTR [eax-0x373d17c]
  41c63d:	cmp    DWORD PTR [esi+0x72],esp
  41c640:	lods   eax,DWORD PTR ds:[esi]
  41c641:	cs leave 
  41c643:	(bad)  
  41c644:	xor    ch,cl
  41c646:	push   edx
  41c647:	js     0x41c68b
  41c649:	imul   ah
  41c64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c64c:	xor    eax,0x12b943e4
  41c651:	mov    esi,0xc606fae0
  41c656:	lea    ebx,[edx]
  41c658:	in     eax,0x98
  41c65a:	in     al,dx
  41c65b:	out    0x28,al
  41c65d:	ret    
  41c65e:	sub    eax,0x4b3f5c62
  41c663:	pop    edi
  41c664:	pop    eax
  41c665:	jp     0x41c5e9
  41c667:	mov    es,WORD PTR [ecx+0x5]
  41c66a:	std    
  41c66b:	aas    
  41c66c:	xchg   esp,eax
  41c66d:	cwde   
  41c66e:	repz mov ebp,DWORD PTR ds:0xef7c4336
  41c675:	sar    DWORD PTR [edi+0x2fca66b6],1
  41c67b:	fdiv   DWORD PTR [edx+ebp*8-0x20209820]
  41c682:	cmp    ch,BYTE PTR cs:[esi-0x6b1966e0]
  41c689:	jne    0x41c6f1
  41c68b:	je     0x41c67e
  41c68d:	add    al,0x45
  41c68f:	js     0x41c670
  41c691:	xor    bl,BYTE PTR [ebx+0x4c85ab78]
  41c697:	ror    eax,cl
  41c699:	adc    DWORD PTR ds:0x60f98d0a,ebp
  41c69f:	jnp    0x41c663
  41c6a1:	pop    eax
  41c6a2:	lea    esp,[ecx-0xc]
  41c6a5:	mov    bh,0x8
  41c6a7:	mov    BYTE PTR [eax+0x35],bl
  41c6aa:	test   al,0x9e
  41c6ac:	stc    
  41c6ad:	bound  esi,QWORD PTR [eax+eiz*2+0x7c147a8c]
  41c6b4:	aad    0xc0
  41c6b6:	push   esp
  41c6b7:	or     ebp,DWORD PTR [esi+0x34]
  41c6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6bb:	sahf   
  41c6bc:	pusha  
  41c6bd:	mov    eax,0x6585c6c7
  41c6c2:	add    dl,BYTE PTR [edi-0x31]
  41c6c5:	mov    esp,0xaa510b48
  41c6ca:	(bad)  
  41c6cb:	jns    0x41c69d
  41c6cd:	repz sub ah,BYTE PTR [esi+0xdf6bbdd]
  41c6d4:	retf   0x5a2
  41c6d7:	ss jo  0x41c685
  41c6da:	sti    
  41c6db:	jns    0x41c6c3
  41c6dd:	in     al,dx
  41c6de:	xchg   esp,eax
  41c6df:	bound  esi,QWORD PTR [ebx]
  41c6e1:	je     0x41c70f
  41c6e3:	adc    eax,DWORD PTR [ecx]
  41c6e5:	fsubr  st,st(5)
  41c6e7:	mov    edx,0xe5cbc863
  41c6ec:	enter  0x40cf,0x3d
  41c6f0:	push   0xffffffa4
  41c6f2:	mov    cl,0xac
  41c6f4:	ret    0xef7d
  41c6f7:	pop    esi
  41c6f8:	ins    DWORD PTR es:[edi],dx
  41c6f9:	fnstenv [eax+0x56]
  41c6fc:	into   
  41c6fd:	jne    0x41c766
  41c6ff:	cs shr al,0x60
  41c703:	xchg   ecx,eax
  41c704:	lods   eax,DWORD PTR ds:[esi]
  41c705:	mov    dh,0xd9
  41c707:	mov    ah,0xc
  41c709:	gs data16 jo 0x41c766
  41c70d:	or     al,0x99
  41c70f:	pop    es
  41c710:	push   ecx
  41c711:	pop    edi
  41c712:	and    eax,0xb4e90ce2
  41c717:	mov    ebx,ebp
  41c719:	mov    BYTE PTR [ecx-0x4f7090fe],al
  41c71f:	inc    esp
  41c720:	lods   eax,DWORD PTR ds:[esi]
  41c721:	das    
  41c722:	inc    esi
  41c723:	test   al,0x3a
  41c725:	cmp    ebx,DWORD PTR [edi+0x179619a2]
  41c72b:	mov    WORD PTR [edi-0x364039ba],?
  41c731:	pusha  
  41c732:	lods   eax,DWORD PTR ds:[esi]
  41c733:	inc    esp
  41c734:	jns    0x41c791
  41c736:	cmp    al,0x2b
  41c738:	js     0x41c711
  41c73a:	nop
  41c73b:	or     eax,esp
  41c73d:	cwde   
  41c73e:	push   eax
  41c73f:	sbb    edi,DWORD PTR [edx+0x1182933e]
  41c745:	das    
  41c746:	pop    esp
  41c747:	xchg   esp,eax
  41c748:	pop    ds
  41c749:	cdq    
  41c74a:	int    0x59
  41c74c:	push   cs
  41c74d:	lea    edi,[ebp+edx*4-0xa]
  41c751:	push   ds
  41c752:	imul   ebp,DWORD PTR [ecx+0x50],0xffffffa0
  41c756:	jmp    0x8ff27edd
  41c75b:	cli    
  41c75c:	mov    ebx,0x3791f60e
  41c761:	mov    ebp,0x95779cf3
  41c766:	xor    eax,0x8241a3e5
  41c76b:	faddp  st(5),st
  41c76d:	dec    edx
  41c76e:	cmp    al,0x16
  41c770:	push   edx
  41c771:	mov    esp,0xbebfe25
  41c776:	pushf  
  41c777:	mov    bl,0x21
  41c779:	mov    ebx,0x5fef8335
  41c77e:	neg    ebx
  41c780:	mov    cl,0x7f
  41c782:	pusha  
  41c783:	sbb    al,0x47
  41c785:	pop    ds
  41c786:	pop    ebx
  41c787:	les    edi,FWORD PTR [ebx-0x65]
  41c78a:	call   0xb4f7b6dd
  41c78f:	jnp    0x41c7a7
  41c791:	mov    cs,WORD PTR [esp+eiz*4+0x2f920118]
  41c798:	div    DWORD PTR [ebx+0x29f492cf]
  41c79e:	test   DWORD PTR [ecx],ebp
  41c7a0:	in     al,dx
  41c7a1:	xor    ah,BYTE PTR [edi-0xee20a97]
  41c7a7:	(bad)  
  41c7a9:	cmp    DWORD PTR ss:[ebx],esi
  41c7ac:	call   0x6aac:0x3681f9b8
  41c7b3:	or     eax,0x8a8ab8f7
  41c7b8:	jbe    0x41c741
  41c7ba:	xchg   ecx,eax
  41c7bb:	loope  0x41c75d
  41c7bd:	fcmovu st,st(5)
  41c7bf:	dec    esi
  41c7c0:	xor    al,0xa5
  41c7c2:	pop    ss
  41c7c3:	push   0x547f3d54
  41c7c8:	stos   BYTE PTR es:[edi],al
  41c7c9:	adc    ebx,DWORD PTR [edi]
  41c7cb:	aas    
  41c7cc:	gs xor ebx,esp
  41c7cf:	or     BYTE PTR [ebp+0x69],0x48
  41c7d3:	mov    ds:0x9ea5dc50,eax
  41c7d8:	jecxz  0x41c81d
  41c7da:	(bad)  
  41c7db:	and    al,0xd
  41c7dd:	ins    DWORD PTR es:[edi],dx
  41c7de:	xor    esp,DWORD PTR [eax+0x20a09fe7]
  41c7e4:	(bad)  
  41c7e5:	hlt    
  41c7e6:	sahf   
  41c7e7:	and    bl,ah
  41c7e9:	stc    
  41c7ea:	ins    DWORD PTR es:[edi],dx
  41c7eb:	outs   dx,BYTE PTR ds:[esi]
  41c7ec:	loope  0x41c7ce
  41c7ee:	outs   dx,DWORD PTR ds:[esi]
  41c7ef:	push   esp
  41c7f0:	rcl    BYTE PTR [edx],0x29
  41c7f3:	xchg   edx,eax
  41c7f4:	fnsave [esi-0x44]
  41c7f7:	xchg   DWORD PTR [edx+eax*4],esi
  41c7fa:	(bad)  
  41c7fb:	fwait
  41c7fc:	outs   dx,DWORD PTR ds:[esi]
  41c7fd:	xchg   ebp,eax
  41c7fe:	or     ch,BYTE PTR [edi+0x60]
  41c801:	hlt    
  41c802:	idiv   BYTE PTR ds:0xfb681c08
  41c808:	adc    dh,0x34
  41c80b:	in     eax,0x2c
  41c80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c80e:	mov    eax,0x9b9cb21b
  41c813:	ja     0x41c7de
  41c815:	and    dh,dh
  41c817:	cmp    ah,BYTE PTR [edx-0x2403e0b9]
  41c81d:	enter  0xf6c8,0x39
  41c821:	pushf  
  41c822:	mov    bh,BYTE PTR [eax+0x46dbf1ee]
  41c828:	mov    DWORD PTR [esi-0x721a8a72],edx
  41c82e:	das    
  41c82f:	hlt    
  41c830:	stos   BYTE PTR es:[edi],al
  41c831:	add    ecx,ecx
  41c833:	mov    bl,BYTE PTR [edi-0x511a7af9]
  41c839:	jae    0x41c84b
  41c83b:	inc    esi
  41c83c:	out    dx,al
  41c83d:	jb     0x41c816
  41c83f:	mov    ?,WORD PTR [ebx-0x35]
  41c842:	xchg   esi,eax
  41c843:	int    0xda
  41c845:	jmp    DWORD PTR [ecx]
  41c847:	ss int 0x54
  41c84a:	fsub   st,st(5)
  41c84c:	gs mov al,0xdd
  41c84f:	add    al,0xbf
  41c851:	in     eax,0xb0
  41c853:	cmp    al,0x15
  41c855:	push   edx
  41c856:	mov    al,0x10
  41c858:	aas    
  41c859:	out    0x66,al
  41c85b:	jo     0x41c7fb
  41c85d:	mov    ecx,0x834a579
  41c862:	xchg   esi,eax
  41c863:	jmp    0x710568a5
  41c868:	daa    
  41c869:	call   0xc8c29468
  41c86e:	ss push ebp
  41c870:	cmp    DWORD PTR [esi+0x4d],ebp
  41c873:	fucomip st,st(2)
  41c875:	enter  0xc8f1,0x74
  41c879:	sti    
  41c87a:	test   eax,0x5e1d5274
  41c87f:	aam    0x99
  41c881:	imul   edx,DWORD PTR [ebx-0xe],0x108cfed1
  41c888:	pop    edx
  41c889:	xchg   BYTE PTR [ebx+0x0],bh
  41c88c:	mov    ah,0x6
  41c88f:	seta   BYTE PTR [edi+0xd27fc2b]
  41c896:	mov    bh,ah
  41c898:	loope  0x41c8d6
  41c89a:	scas   al,BYTE PTR es:[edi]
  41c89b:	or     al,0x4f
  41c89d:	jnp    0x41c8e5
  41c89f:	add    eax,0xa6afc04e
  41c8a4:	icebp  
  41c8a5:	sub    al,BYTE PTR [ecx+0x3e8fce59]
  41c8ab:	popf   
  41c8ac:	inc    esi
  41c8ad:	push   cs
  41c8ae:	sbb    eax,0x8485a464
  41c8b4:	imul   esp,DWORD PTR [edi*2+0x116a9c7b],0x48
  41c8bc:	push   esp
  41c8bd:	stc    
  41c8be:	push   ebp
  41c8bf:	iret   
  41c8c0:	shl    BYTE PTR [edx-0x6e],0x59
  41c8c4:	clc    
  41c8c5:	lods   al,BYTE PTR ds:[esi]
  41c8c6:	or     al,0x89
  41c8c8:	mov    edx,0x2f300354
  41c8cd:	icebp  
  41c8ce:	ficomp DWORD PTR [edi+0x1832dd0]
  41c8d4:	cmp    bl,BYTE PTR [ecx]
  41c8d6:	test   BYTE PTR [edx-0x1e],0xe8
  41c8da:	les    edi,FWORD PTR [esi-0x2e495420]
  41c8e0:	iret   
  41c8e1:	pop    ds
  41c8e2:	not    BYTE PTR [esi-0x3d]
  41c8e5:	test   DWORD PTR [edi+ebp*1-0x4eb5234b],ebp
  41c8ec:	ins    DWORD PTR es:[edi],dx
  41c8ed:	mov    ebp,0x1baa99b3
  41c8f2:	scas   al,BYTE PTR es:[edi]
  41c8f3:	repz shl DWORD PTR [esi],cl
  41c8f6:	je     0x41c907
  41c8f8:	add    eax,0x2eb4d8d6
  41c8fd:	inc    edi
  41c8fe:	test   al,0x8d
  41c900:	daa    
  41c901:	aam    0xae
  41c903:	call   0x74ff:0xe2fcd31a
  41c90a:	add    eax,0xcab64cbf
  41c90f:	pop    ss
  41c910:	sbb    ch,dh
  41c912:	push   0x7f
  41c914:	repz (bad) 
  41c916:	cmp    cl,BYTE PTR [esi+0x2e]
  41c919:	leave  
  41c91a:	mov    WORD PTR [edi],es
  41c91c:	retf   0x486d
  41c91f:	mov    WORD PTR [edi],?
  41c921:	test   DWORD PTR [ebx-0x3e],edi
  41c924:	fisttp DWORD PTR [edx]
  41c926:	ror    BYTE PTR [ebx],0x6f
  41c929:	dec    eax
  41c92a:	loop   0x41c8d4
  41c92c:	dec    edx
  41c92d:	call   DWORD PTR [edx+0x65ad4251]
  41c933:	and    eax,0xcbdb2584
  41c938:	jmp    0xdf690a99
  41c93d:	(bad)  
  41c93e:	in     al,0x11
  41c940:	dec    esi
  41c941:	jp     0x41c8e7
  41c943:	xor    ebp,eax
  41c945:	aas    
  41c946:	add    DWORD PTR [ecx-0x386cac55],ebx
  41c94c:	or     BYTE PTR [esi-0x5879b012],dh
  41c952:	popa   
  41c953:	push   es
  41c954:	sub    DWORD PTR [edi+0x65e4d3d4],eax
  41c95a:	mov    al,0xe8
  41c95c:	mov    ebp,0x39c1c3
  41c961:	push   esi
  41c962:	ins    BYTE PTR es:[edi],dx
  41c963:	inc    eax
  41c964:	outs   dx,DWORD PTR ds:[esi]
  41c965:	xor    ebx,0x58f7aa0b
  41c96b:	cmp    ch,BYTE PTR [eax]
  41c96d:	mov    dl,0xeb
  41c96f:	mov    ebx,0x3f32703a
  41c974:	in     eax,dx
  41c975:	xlat   BYTE PTR ds:[ebx]
  41c976:	sbb    edx,DWORD PTR [ebx-0x66]
  41c979:	ret    0xbb0b
  41c97c:	outs   dx,DWORD PTR ds:[esi]
  41c97d:	nop
  41c97e:	pop    ds
  41c97f:	ins    DWORD PTR es:[edi],dx
  41c980:	add    ch,BYTE PTR [edx]
  41c982:	pop    DWORD PTR [ebp-0x21ec6485]
  41c988:	jecxz  0x41c979
  41c98a:	cmp    eax,0x1efbcbe5
  41c98f:	xchg   edx,eax
  41c990:	sub    BYTE PTR [esi-0x2],0x33
  41c994:	hlt    
  41c995:	stc    
  41c996:	dec    edx
  41c997:	jae    0x41c970
  41c999:	test   al,0x33
  41c99b:	push   eax
  41c99c:	inc    eax
  41c99d:	(bad)  
  41c99f:	in     eax,dx
  41c9a0:	sbb    BYTE PTR [esi-0xdde7788],al
  41c9a6:	add    al,0x64
  41c9a8:	xchg   edx,eax
  41c9a9:	sub    esi,DWORD PTR [edi+0x24df9b5e]
  41c9af:	ss out dx,eax
  41c9b1:	and    ecx,DWORD PTR [ebx]
  41c9b3:	mov    ebp,ecx
  41c9b5:	iret   
  41c9b6:	or     DWORD PTR [ebx],ebp
  41c9b8:	not    DWORD PTR [edi+ebp*8-0x644fbf3d]
  41c9bf:	xor    BYTE PTR [edx+0x3e],ch
  41c9c2:	ret    
  41c9c3:	ja     0x41ca3a
  41c9c5:	add    dh,ch
  41c9c7:	jns    0x41c9a4
  41c9c9:	imul   ebx,DWORD PTR [esp-0x67],0xec677fc8
  41c9d1:	jne    0x41c9f3
  41c9d3:	sub    DWORD PTR [edi+eax*2+0x3b86a535],ecx
  41c9da:	hlt    
  41c9db:	mov    ebx,0x996a7612
  41c9e0:	push   edi
  41c9e1:	inc    esi
  41c9e2:	sbb    esp,ebp
  41c9e4:	inc    esi
  41c9e5:	ins    BYTE PTR es:[edi],dx
  41c9e6:	push   0xffffffe8
  41c9e8:	stos   DWORD PTR es:[edi],eax
  41c9e9:	in     eax,dx
  41c9ea:	jb     0x41ca14
  41c9ec:	xchg   ebx,eax
  41c9ed:	adc    BYTE PTR [edx-0x62],dh
  41c9f0:	xor    esp,DWORD PTR [esi]
  41c9f2:	aad    0x8
  41c9f4:	pop    ebx
  41c9f5:	dec    eax
  41c9f6:	or     BYTE PTR [eax],bl
  41c9f8:	xor    eax,0xeb435771
  41c9fd:	aas    
  41c9fe:	mov    eax,0xd4246bb
  41ca03:	loope  0x41c9c7
  41ca05:	pop    ecx
  41ca06:	jmp    ebp
  41ca08:	sahf   
  41ca09:	mov    ebp,0x883e3b62
  41ca0e:	mov    ebx,0xe984dd5
  41ca13:	bound  ecx,QWORD PTR [esi]
  41ca15:	stc    
  41ca16:	lods   eax,DWORD PTR ds:[esi]
  41ca17:	push   ss
  41ca18:	push   ebx
  41ca19:	xor    eax,0x386e95bf
  41ca1e:	enter  0x1aff,0xfc
  41ca22:	daa    
  41ca23:	sahf   
  41ca24:	add    DWORD PTR [ebx],esi
  41ca26:	dec    ebx
  41ca27:	mov    ecx,0x238c93c
  41ca2c:	js     0x41c9e3
  41ca2e:	retf   0x1cc0
  41ca31:	pusha  
  41ca32:	mov    ds:0xf9eb47c2,al
  41ca37:	push   ss
  41ca38:	(bad)  
  41ca39:	(bad)  
  41ca3a:	aaa    
  41ca3b:	gs inc edi
  41ca3d:	add    eax,0x16abb63d
  41ca42:	push   0xd9c67fb5
  41ca47:	inc    ebp
  41ca48:	shr    BYTE PTR [eax+0x420ca6ea],1
  41ca4e:	test   DWORD PTR [esi],edi
  41ca50:	and    DWORD PTR [ecx-0x5],edx
  41ca53:	fimul  DWORD PTR [ecx-0x72]
  41ca56:	daa    
  41ca57:	and    DWORD PTR [ecx],esi
  41ca59:	push   ecx
  41ca5a:	pushf  
  41ca5b:	push   cs
  41ca5c:	shl    DWORD PTR [edx-0x35fc3592],cl
  41ca62:	aas    
  41ca63:	cmp    BYTE PTR [eax+ebx*8-0xfabd4b],bl
  41ca6a:	adc    DWORD PTR [esi+0xd0894a6],esp
  41ca70:	dec    ebp
  41ca71:	xchg   ch,bh
  41ca73:	pop    edi
  41ca74:	leave  
  41ca75:	repnz add ebp,DWORD PTR [edi]
  41ca78:	xor    BYTE PTR [eax-0x6a],cl
  41ca7b:	hlt    
  41ca7c:	inc    esp
  41ca7d:	adc    DWORD PTR [edx+eiz*4+0x1],esp
  41ca81:	xchg   edx,eax
  41ca82:	and    eax,0x30b2d8b3
  41ca87:	lds    edx,FWORD PTR [edi+ebp*1-0x42]
  41ca8b:	into   
  41ca8c:	jno    0x41ca65
  41ca8e:	push   cs
  41ca8f:	mov    al,ds:0xc2ff7ba2
  41ca94:	pop    eax
  41ca95:	cmp    BYTE PTR [edi-0x30],dh
  41ca98:	xchg   BYTE PTR [edx],cl
  41ca9a:	push   cs
  41ca9b:	add    BYTE PTR [esi-0x1cd1c0f9],ah
  41caa1:	sbb    DWORD PTR [eax-0x2b],0x5f
  41caa5:	and    edi,DWORD PTR [eax-0xb]
  41caa8:	(bad)  
  41caa9:	xchg   DWORD PTR [ebp+0x21],ebp
  41caac:	fwait
  41caad:	psrad  mm3,QWORD PTR [edi+eiz*8-0x2a]
  41cab2:	imul   ecx,DWORD PTR ds:[esi+0x6244be0e],0xffffffd2
  41caba:	sub    eax,0xa395b6cc
  41cabf:	sub    DWORD PTR [ecx-0x4a60ab99],esi
  41cac5:	sbb    BYTE PTR [edx-0x70],ah
  41cac8:	adc    al,0xb1
  41caca:	fcomp  QWORD PTR [edx]
  41cacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cacd:	mov    ebx,0x6fda7bfb
  41cad2:	scas   eax,DWORD PTR es:[edi]
  41cad3:	xchg   esp,eax
  41cad4:	inc    ecx
  41cad5:	mov    dh,0x29
  41cad7:	arpl   WORD PTR [edx],si
  41cad9:	mov    bh,0x16
  41cadb:	cmp    al,0x21
  41cadd:	or     BYTE PTR [ebx],ch
  41cadf:	aad    0xe1
  41cae1:	pop    ebx
  41cae2:	xchg   edx,eax
  41cae3:	mov    ebx,0x910cf49
  41cae8:	inc    ecx
  41cae9:	std    
  41caea:	jp     0x41caa0
  41caec:	xchg   ebp,eax
  41caed:	dec    edx
  41caee:	test   al,0x17
  41caf0:	(bad)  
  41caf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf3:	fisub  WORD PTR [esi+0x3e4165a6]
  41caf9:	adc    bh,BYTE PTR [ebx+0x6bc6104]
  41caff:	adc    ebp,DWORD PTR [ecx+0x7e]
  41cb02:	xchg   ebx,eax
  41cb03:	fadd   QWORD PTR [eax+0x63]
  41cb06:	pop    esp
  41cb07:	vpcmpgtd xmm1,xmm7,XMMWORD PTR [ebx-0x6668ed04]
  41cb0f:	ror    DWORD PTR [esi-0x2ed9ac73],cl
  41cb15:	dec    esp
  41cb16:	ins    DWORD PTR es:[edi],dx
  41cb17:	popa   
  41cb18:	mov    bh,0x61
  41cb1a:	adc    eax,0x941c2b97
  41cb1f:	das    
  41cb20:	add    ebx,esp
  41cb22:	or     DWORD PTR [eax+eax*1],ebp
  41cb25:	mov    eax,ds:0x24d9f328
  41cb2a:	imul   esi,DWORD PTR [ebx-0x30],0x16
  41cb2e:	adc    DWORD PTR [edi-0x42],ecx
  41cb31:	in     al,0x53
  41cb33:	shr    DWORD PTR [ebx],0x14
  41cb36:	fidiv  DWORD PTR ds:0xa5af4a95
  41cb3c:	sub    BYTE PTR [ebp+0x6ff22382],cl
  41cb42:	push   0x2c
  41cb44:	icebp  
  41cb45:	mov    ch,0x35
  41cb47:	and    DWORD PTR [esi-0x4e40e460],ebp
  41cb4d:	jge    0x41cb13
  41cb4f:	adc    al,0xab
  41cb51:	mov    eax,ds:0xc01f4830
  41cb56:	push   ds
  41cb57:	(bad)  
  41cb58:	das    
  41cb59:	push   ebx
  41cb5a:	(bad)  
  41cb5b:	xchg   esi,eax
  41cb5c:	clc    
  41cb5d:	or     DWORD PTR [edi+0x68],0xcbfdc796
  41cb64:	mov    ch,0xc
  41cb66:	cli    
  41cb67:	in     al,dx
  41cb68:	sub    DWORD PTR [edi],eax
  41cb6a:	stc    
  41cb6b:	ret    0xa728
  41cb6e:	xor    al,bl
  41cb70:	icebp  
  41cb71:	cwde   
  41cb72:	xchg   edx,eax
  41cb73:	pop    esp
  41cb74:	pop    es
  41cb75:	aad    0xcc
  41cb77:	mov    bl,0x8a
  41cb79:	mov    eax,0xf6113915
  41cb7e:	and    BYTE PTR [edx-0x3ce66191],cl
  41cb84:	and    DWORD PTR [edx+ecx*1],ebp
  41cb87:	fidivr DWORD PTR [esi]
  41cb89:	mul    DWORD PTR [edx+0x66]
  41cb8c:	ret    
  41cb8d:	mov    dl,0x5a
  41cb8f:	out    0x8,eax
  41cb91:	int    0xb8
  41cb93:	sbb    BYTE PTR [edx],dl
  41cb95:	inc    dh
  41cb97:	pusha  
  41cb98:	stc    
  41cb99:	push   esi
  41cb9a:	xor    eax,0xa9798b18
  41cb9f:	cmp    al,0xd6
  41cba1:	jns    0x41cb98
  41cba3:	(bad)  
  41cba4:	out    0x3d,al
  41cba6:	out    dx,al
  41cba7:	pop    ebx
  41cba8:	push   edi
  41cba9:	pop    ds
  41cbaa:	cdq    
  41cbab:	sub    eax,0x57cec26f
  41cbb0:	and    ah,BYTE PTR [eax+0x2e29802e]
  41cbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb7:	xchg   DWORD PTR [ecx+ecx*2-0xb],ebp
  41cbbb:	loop   0x41cbd6
  41cbbd:	and    al,0x2b
  41cbbf:	(bad)  
  41cbc1:	sub    DWORD PTR [ecx+0x4b],edi
  41cbc4:	inc    esi
  41cbc5:	and    bh,BYTE PTR [esi+ebp*2+0x4ae3378a]
  41cbcc:	popf   
  41cbcd:	add    edi,eax
  41cbcf:	or     BYTE PTR [ebx+0x4a],al
  41cbd2:	xchg   ecx,eax
  41cbd3:	test   al,0xb3
  41cbd5:	fs mov al,0xef
  41cbd8:	cmp    DWORD PTR [esi+0x1b175e3b],edi
  41cbde:	jb     0x41cbc4
  41cbe0:	pop    es
  41cbe1:	xchg   edi,eax
  41cbe2:	je     0x41cbc5
  41cbe4:	xor    eax,0x197a4aa3
  41cbe9:	cmp    dl,al
  41cbeb:	cmp    eax,esi
  41cbed:	ret    
  41cbee:	push   ebx
  41cbef:	jp     0x41cc4b
  41cbf1:	(bad)  
  41cbf2:	out    dx,eax
  41cbf3:	add    DWORD PTR [esi],ebx
  41cbf5:	mov    eax,ds:0xc03e8366
  41cbfa:	ds push esp
  41cbfc:	cld    
  41cbfd:	lock out dx,eax
  41cbff:	int3   
  41cc00:	xchg   ebx,eax
  41cc01:	repnz xor al,0x56
  41cc04:	mov    WORD PTR ss:[edi],es
  41cc07:	data16 (bad) 
  41cc0a:	sbb    al,0x11
  41cc0c:	push   edx
  41cc0d:	jb     0x41cc55
  41cc0f:	test   al,0x4b
  41cc11:	repz retf 0xbfbb
  41cc15:	and    DWORD PTR [edx-0x4f],ebp
  41cc18:	lock mov ds:0x5c976710,al
  41cc1e:	loop   0x41cbf5
  41cc20:	test   al,0x4c
  41cc22:	or     al,0x44
  41cc24:	ins    BYTE PTR es:[edi],dx
  41cc25:	and    ebp,DWORD PTR [edi+0xf]
  41cc28:	and    eax,0x26e7d66c
  41cc2d:	add    eax,DWORD PTR [ebx-0x21]
  41cc30:	sub    eax,0xf903c8eb
  41cc35:	fwait
  41cc36:	sub    BYTE PTR [ecx],ch
  41cc38:	inc    esp
  41cc39:	and    DWORD PTR [bp+si],ecx
  41cc3c:	imul   ecx,DWORD PTR [eax+0x25],0xffffffc7
  41cc40:	(bad)  
  41cc41:	sbb    al,BYTE PTR [esi]
  41cc43:	xor    al,0x64
  41cc45:	pop    ss
  41cc46:	pushf  
  41cc47:	push   edx
  41cc48:	sti    
  41cc49:	mov    esi,DWORD PTR [edi]
  41cc4b:	mov    es,WORD PTR [ebp*4-0x751cc9c0]
  41cc52:	inc    ebp
  41cc53:	cmc    
  41cc54:	arpl   WORD PTR [eax-0x6d],dx
  41cc57:	call   0xdddfced3
  41cc5c:	add    ch,dh
  41cc5e:	ins    BYTE PTR es:[edi],dx
  41cc5f:	push   ebx
  41cc60:	xor    al,0x2d
  41cc62:	push   edx
  41cc63:	stos   BYTE PTR es:[edi],al
  41cc64:	into   
  41cc65:	iret   
  41cc66:	cmp    esi,DWORD PTR [ebp-0x6f]
  41cc69:	shr    BYTE PTR [esi-0x47538a11],cl
  41cc6f:	mov    al,0xda
  41cc71:	pop    ss
  41cc72:	gs or  ebx,ebx
  41cc75:	and    al,0x79
  41cc77:	xchg   edx,eax
  41cc78:	sub    al,0x88
  41cc7a:	(bad)  
  41cc7c:	pop    es
  41cc7d:	and    ecx,ebp
  41cc7f:	shl    BYTE PTR [ecx+0x74bc48d5],cl
  41cc85:	gs adc eax,0x482babe9
  41cc8b:	call   0xaeaf0737
  41cc90:	mov    edx,0xacba4dbf
  41cc95:	(bad)  
  41cc96:	mov    DWORD PTR [eax+eax*1-0x7753909b],esi
  41cc9d:	in     al,dx
  41cc9e:	add    BYTE PTR [esi+0x797dc3ee],0xbd
  41cca5:	push   edi
  41cca6:	sub    DWORD PTR [esi],edi
  41cca8:	lods   al,BYTE PTR ds:[esi]
  41cca9:	es pop es
  41ccab:	rcl    BYTE PTR [esi-0x1f603c06],cl
  41ccb1:	cli    
  41ccb2:	in     eax,0x40
  41ccb4:	add    DWORD PTR [edx],edi
  41ccb6:	ret    
  41ccb7:	sbb    DWORD PTR [ebx+0x5e],edx
  41ccba:	cld    
  41ccbb:	and    BYTE PTR [edi+ecx*2],ch
  41ccbe:	sbb    ch,BYTE PTR [edx+0x4c]
  41ccc1:	mov    esp,0x730497b
  41ccc6:	leave  
  41ccc7:	aad    0x60
  41ccc9:	push   edx
  41ccca:	pop    es
  41cccb:	into   
  41cccc:	mov    esp,0xd196581b
  41ccd1:	jp     0x41cc53
  41ccd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd4:	cmp    ecx,DWORD PTR [ebp+0x4abf87d0]
  41ccda:	sbb    eax,0xd3e9862
  41ccdf:	enter  0x1c79,0x1f
  41cce3:	icebp  
  41cce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce5:	dec    edx
  41cce6:	mov    esi,0x4aeb954f
  41cceb:	xchg   ebp,eax
  41ccec:	push   esi
  41cced:	xchg   BYTE PTR [ecx+ebx*4-0x5af48ee3],ah
  41ccf4:	mov    ?,ebx
  41ccf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf7:	imul   esp,DWORD PTR [eax+0x5f],0x4e
  41ccfb:	ins    DWORD PTR es:[edi],dx
  41ccfc:	pop    esp
  41ccfd:	inc    ecx
  41ccfe:	adc    al,BYTE PTR [edi-0x50]
  41cd01:	lods   eax,DWORD PTR ds:[esi]
  41cd02:	sbb    al,0x41
  41cd04:	and    al,0xbf
  41cd06:	jmp    0x1735:0x66a0a91c
  41cd0d:	mov    cs,WORD PTR [esi]
  41cd0f:	dec    ebp
  41cd10:	or     esp,ebx
  41cd12:	repz in eax,0x78
  41cd15:	mov    ebx,ebp
  41cd17:	jl     0x41cc9c
  41cd19:	adc    al,0x30
  41cd1b:	or     bh,dl
  41cd1d:	cwde   
  41cd1e:	xor    ah,cl
  41cd20:	dec    edi
  41cd21:	pop    ebx
  41cd22:	sub    ebx,ebp
  41cd24:	sbb    BYTE PTR [edi],bh
  41cd26:	sti    
  41cd27:	mov    esi,0x8b390515
  41cd2c:	call   0x642a:0x30bfe97d
  41cd33:	(bad)  
  41cd34:	jb     0x41cd2c
  41cd36:	mov    edi,DWORD PTR [ecx-0x5d]
  41cd39:	mov    edx,0x1398a64
  41cd3e:	adc    al,0xae
  41cd40:	in     al,0xe7
  41cd42:	int3   
  41cd43:	mov    ch,0xa0
  41cd45:	mov    esp,0xae739ba2
  41cd4a:	ror    DWORD PTR [ecx-0x168cf4a5],1
  41cd50:	loope  0x41cd13
  41cd52:	mov    eax,ds:0x958aa9b
  41cd57:	fistp  DWORD PTR [eax+0x4d]
  41cd5a:	or     cl,bl
  41cd5c:	ins    BYTE PTR es:[edi],dx
  41cd5d:	cmp    BYTE PTR [edx-0x6f],cl
  41cd60:	retf   0x1f91
  41cd63:	mov    ah,0x57
  41cd65:	nop
  41cd66:	sbb    ah,BYTE PTR [ebp+0x250ad1e4]
  41cd6c:	rcl    BYTE PTR [di+0x66cf],1
  41cd71:	aad    0xc7
  41cd73:	push   esi
  41cd74:	or     ch,ah
  41cd76:	outs   dx,BYTE PTR ds:[esi]
  41cd77:	push   0x640e3a74
  41cd7c:	pop    ds
  41cd7d:	stc    
  41cd7e:	nop
  41cd7f:	adc    edi,esp
  41cd81:	nop
  41cd82:	xchg   DWORD PTR [esp+edx*4-0x12],ecx
  41cd86:	xchg   ah,bh
  41cd88:	inc    eax
  41cd89:	jmp    0x4492356b
  41cd8e:	lock or ebp,DWORD PTR ds:0x1aa7bf7b
  41cd95:	dec    edi
  41cd96:	test   al,0xb
  41cd98:	inc    ebx
  41cd99:	mov    edi,0xa61230fe
  41cd9e:	cs mov edx,0xee35430b
  41cda4:	fistp  DWORD PTR [edi+0x78a6ad1a]
  41cdaa:	shl    BYTE PTR [esi],0xb7
  41cdad:	inc    esi
  41cdae:	mov    ebx,0xfffa566b
  41cdb3:	inc    esi
  41cdb4:	xchg   edx,eax
  41cdb5:	inc    edi
  41cdb6:	test   eax,ecx
  41cdb8:	out    0xa7,al
  41cdba:	pop    esi
  41cdbb:	dec    ebx
  41cdbc:	nop
  41cdbd:	sbb    edx,esp
  41cdbf:	pop    es
  41cdc0:	stos   DWORD PTR es:[edi],eax
  41cdc1:	adc    esp,edi
  41cdc3:	in     al,0xbf
  41cdc5:	xor    edx,DWORD PTR ds:0x1ce3b8c4
  41cdcb:	mov    ch,0xb3
  41cdcd:	pop    edx
  41cdce:	and    BYTE PTR [esi],bl
  41cdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd1:	lahf   
  41cdd2:	(bad)
  41cdd6:	cmp    ebp,DWORD PTR [edi-0x71a79e1d]
  41cddc:	add    esi,edi
  41cdde:	les    esp,FWORD PTR [eax+esi*1-0x1130e51]
  41cde5:	aad    0x48
  41cde7:	mov    al,ds:0xd93bf157
  41cdec:	js     0x41cdc0
  41cdee:	bound  eax,QWORD PTR [edi+0x61]
  41cdf1:	inc    eax
  41cdf2:	repz xlat BYTE PTR ds:[ebx]
  41cdf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf5:	sub    BYTE PTR ds:0x302b6735,0x59
  41cdfc:	jns    0x41ce44
  41cdfe:	mov    dh,0x90
  41ce00:	scas   al,BYTE PTR es:[edi]
  41ce01:	jae    0x41ce76
  41ce03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce04:	les    ebp,FWORD PTR [edi-0x7538f4fc]
  41ce0a:	mov    cl,BYTE PTR [ebx+eiz*1-0x6]
  41ce0e:	jb     0x41ce2f
  41ce10:	stc    
  41ce11:	clc    
  41ce12:	ficomp WORD PTR [ebp+0x5386d91f]
  41ce18:	cmc    
  41ce19:	nop
  41ce1a:	scas   eax,DWORD PTR es:[edi]
  41ce1b:	inc    esp
  41ce1c:	pop    esp
  41ce1d:	dec    edx
  41ce1e:	jne    0x41ce3f
  41ce20:	lock jne 0x41ce79
  41ce23:	xchg   DWORD PTR [ebp+0x6],ebp
  41ce26:	loope  0x41ce77
  41ce28:	ja     0x41ce68
  41ce2a:	dec    ecx
  41ce2b:	push   ecx
  41ce2c:	scas   al,BYTE PTR es:[edi]
  41ce2d:	data16 rol BYTE PTR [ebx-0x5b06919e],1
  41ce34:	and    eax,0x8dc9c46f
  41ce39:	stc    
  41ce3a:	fwait
  41ce3b:	sub    esp,0xffffffde
  41ce3e:	test   eax,0x519323af
  41ce43:	ja     0x41ce7c
  41ce45:	loopne 0x41cde1
  41ce47:	or     al,0x89
  41ce49:	(bad)  
  41ce4a:	mov    ah,0x50
  41ce4c:	fxch   st(3)
  41ce4e:	aaa    
  41ce4f:	(bad)  
  41ce50:	div    BYTE PTR [ecx]
  41ce52:	fld    TBYTE PTR [ebx]
  41ce54:	fldcw  WORD PTR [esi+esi*1]
  41ce57:	in     eax,0x62
  41ce59:	push   0x1d
  41ce5b:	jmp    0x7517:0xc6fbf75c
  41ce62:	push   edx
  41ce63:	sbb    DWORD PTR [eax+0x2c995177],esp
  41ce69:	lahf   
  41ce6a:	jno    0x41ce16
  41ce6c:	cld    
  41ce6d:	ja     0x41ce58
  41ce6f:	out    dx,al
  41ce70:	fisub  DWORD PTR [eax+0x76dd36fd]
  41ce76:	xlat   BYTE PTR ds:[ebx]
  41ce77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce78:	adc    BYTE PTR [esi-0x53],ch
  41ce7b:	das    
  41ce7c:	rcl    BYTE PTR [ecx-0x61],0x94
  41ce80:	aaa    
  41ce81:	shr    DWORD PTR [ecx-0x2d8b051f],1
  41ce87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce88:	inc    ecx
  41ce89:	fdivr  DWORD PTR [edx-0x2096239f]
  41ce8f:	inc    esp
  41ce90:	ror    BYTE PTR [esi-0x79],0x7a
  41ce94:	jnp    0x41cf0c
  41ce96:	cmp    edi,DWORD PTR [ecx+0x7c]
  41ce99:	inc    ebx
  41ce9a:	out    dx,eax
  41ce9b:	push   es
  41ce9c:	retf   0xc831
  41ce9f:	ret    
  41cea0:	retf   0xb304
  41cea3:	jns    0x41cea3
  41cea5:	js     0x41ce6a
  41cea7:	xor    al,0x83
  41cea9:	and    BYTE PTR [ebp-0x10],al
  41ceac:	dec    esp
  41cead:	add    ch,bh
  41ceaf:	out    0x95,eax
  41ceb1:	lods   eax,DWORD PTR ds:[esi]
  41ceb2:	loopne 0x41ce59
  41ceb4:	sbb    BYTE PTR [edi+0x581199ec],bh
  41ceba:	and    al,0xa2
  41cebd:	les    esp,FWORD PTR [esi]
  41cebf:	ret    0x3a4d
  41cec2:	xchg   esp,eax
  41cec3:	lea    esi,[ecx+0x32548bcb]
  41cec9:	out    dx,eax
  41ceca:	mov    ah,0x50
  41cecc:	in     al,0x6f
  41cece:	or     ebx,DWORD PTR [ecx+0x445015fd]
  41ced4:	sbb    al,0x96
  41ced6:	adc    bl,BYTE PTR [edi+ebx*8-0x2ea42af]
  41cedd:	test   BYTE PTR [edi+edi*4-0x900eae4],cl
  41cee4:	test   DWORD PTR [edi],0x4579a518
  41ceea:	retf   0x319d
  41ceed:	or     DWORD PTR [eax-0x7909f0e3],0xe9b13796
  41cef7:	adc    BYTE PTR [ebx+0x50884c55],dl
  41cefd:	mov    ecx,0x4f232dfb
  41cf02:	xchg   esi,eax
  41cf03:	jne    0x41ceec
  41cf05:	(bad)  
  41cf06:	dec    esp
  41cf07:	sbb    DWORD PTR [ebp+0x58],0x7097bbca
  41cf0e:	les    ecx,FWORD PTR [eax+ebp*2]
  41cf11:	in     al,0xec
  41cf13:	clc    
  41cf14:	neg    DWORD PTR [ecx]
  41cf16:	cmp    BYTE PTR [esi+0x5d],bh
  41cf19:	jae    0x41cf28
  41cf1b:	mov    DWORD PTR [ebx-0x14],ebp
  41cf1e:	dec    edx
  41cf1f:	mov    dl,0xc8
  41cf21:	int3   
  41cf22:	cmp    DWORD PTR [ebx-0x1680c474],ebx
  41cf28:	mov    ecx,0x90fa3c29
  41cf2d:	jg     0x41ced2
  41cf2f:	js     0x41cf4f
  41cf31:	mov    edi,0x58cbf2d8
  41cf36:	add    cl,BYTE PTR [esi+0xb]
  41cf39:	outs   dx,DWORD PTR ds:[esi]
  41cf3a:	cmp    cl,cl
  41cf3c:	repnz fistp QWORD PTR [esi-0x5c]
  41cf40:	mov    ds:0x838e71fb,al
  41cf45:	clc    
  41cf46:	lds    esp,FWORD PTR [ebx+0x43a93238]
  41cf4c:	daa    
  41cf4d:	pavgb  mm4,mm6
  41cf50:	cmp    DWORD PTR [ebp+esi*8-0x32dd04b],edx
  41cf57:	xchg   ebx,eax
  41cf58:	cmp    DWORD PTR [ebx-0x6761ef92],ebx
  41cf5e:	(bad)
  41cf61:	(bad)  
  41cf62:	stc    
  41cf63:	mov    dl,BYTE PTR [ebx-0x322a79a0]
  41cf69:	pop    edi
  41cf6a:	outs   dx,DWORD PTR ds:[esi]
  41cf6b:	and    DWORD PTR ds:0xc1153290,esi
  41cf72:	xor    esp,DWORD PTR [edx]
  41cf74:	jo     0x41cef8
  41cf76:	xchg   ecx,eax
  41cf77:	mul    cl
  41cf79:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7b:	dec    ecx
  41cf7c:	jge    0x41cf4c
  41cf7e:	leave  
  41cf7f:	add    al,0xfe
  41cf81:	push   esp
  41cf82:	dec    eax
  41cf83:	sbb    esi,esi
  41cf85:	pop    esp
  41cf86:	retf   0x4895
  41cf89:	popf   
  41cf8a:	mov    cl,0x4c
  41cf8c:	push   ebp
  41cf8d:	mov    ebx,DWORD PTR [esi]
  41cf8f:	pop    ebp
  41cf90:	les    ebp,FWORD PTR [ecx+0x85a2d28]
  41cf96:	dec    esp
  41cf97:	out    dx,eax
  41cf98:	fild   WORD PTR [ebp-0x4a23186d]
  41cf9e:	test   al,0xe9
  41cfa0:	out    dx,al
  41cfa1:	test   BYTE PTR [eax+eax*4+0x4d],bh
  41cfa5:	mov    edx,0x46b51ac0
  41cfaa:	adc    edi,DWORD PTR [edx]
  41cfac:	retf   
  41cfad:	mov    ds:0xc07c3d0b,al
  41cfb2:	xchg   ebp,eax
  41cfb3:	fstp   TBYTE PTR [esi-0x4f9c9511]
  41cfb9:	and    ecx,DWORD PTR [ebx]
  41cfbb:	adc    al,0x5f
  41cfbd:	jmp    0x41cf6c
  41cfbf:	pop    ecx
  41cfc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc1:	lods   eax,DWORD PTR ds:[esi]
  41cfc2:	cmp    eax,0x919a0e85
  41cfc7:	or     al,0x5
  41cfc9:	push   ss
  41cfca:	dec    ebx
  41cfcb:	inc    ecx
  41cfcc:	shr    edi,1
  41cfce:	dec    eax
  41cfcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd0:	cmp    DWORD PTR [ebp+0x759a9975],esp
  41cfd6:	jle    0x41d00f
  41cfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd9:	sbb    ebx,DWORD PTR [ecx+0x29]
  41cfdc:	lock ret 0x8575
  41cfe0:	loop   0x41d04a
  41cfe2:	mov    dl,0xd7
  41cfe4:	mov    al,0x86
  41cfe6:	sub    al,0xc1
  41cfe8:	inc    edx
  41cfe9:	jns    0x41d00e
  41cfeb:	mov    esi,0x28a20b57
  41cff0:	push   ecx
  41cff1:	por    mm2,mm6
  41cff4:	outs   dx,DWORD PTR gs:[esi]
  41cff6:	sbb    eax,ecx
  41cff8:	xor    BYTE PTR [edi],0xda
  41cffb:	or     eax,0xe54cb658
  41d000:	or     ebx,DWORD PTR [eax+0x28e58775]
  41d006:	inc    edx
  41d007:	les    ebp,FWORD PTR [ebp+0x71]
  41d00a:	sbb    esp,edx
  41d00c:	mov    cl,0xc2
  41d00e:	pop    edx
  41d00f:	add    al,0x3a
  41d012:	pop    ds
  41d013:	sub    ch,BYTE PTR [esi-0x68]
  41d016:	popa   
  41d017:	test   dh,ch
  41d019:	mov    ebp,0xa27646a9
  41d01e:	sbb    al,0x2e
  41d020:	vorps  ymm6,ymm5,YMMWORD PTR [esi]
  41d024:	xor    DWORD PTR [edi-0x7],edi
  41d027:	retf   0xf56c
  41d02a:	retf   0x3b3
  41d02d:	idiv   ch
  41d02f:	pop    ecx
  41d030:	stos   BYTE PTR es:[edi],al
  41d031:	std    
  41d032:	adc    edi,DWORD PTR [ebx]
  41d034:	(bad)  
  41d035:	std    
  41d036:	pop    edi
  41d037:	dec    ebx
  41d038:	les    esp,FWORD PTR [di]
  41d03b:	ss mov ch,0xc5
  41d03e:	pop    ebx
  41d03f:	fistp  WORD PTR [esi-0x3452e91]
  41d045:	dec    esp
  41d046:	cmc    
  41d047:	pop    esi
  41d048:	mov    es,WORD PTR [esi-0x6a]
  41d04b:	dec    esi
  41d04c:	repnz scas eax,DWORD PTR es:[edi]
  41d04e:	mov    ch,BYTE PTR [ecx-0x1ec69f3d]
  41d054:	mov    ecx,0x78d7ded0
  41d059:	dec    esp
  41d05a:	adc    DWORD PTR [eax+0x37],edx
  41d05d:	loope  0x41d0a5
  41d05f:	sub    eax,0x1c7c0412
  41d064:	in     al,dx
  41d065:	fwait
  41d066:	jg     0x41d07e
  41d068:	hlt    
  41d069:	mov    ds:0xa2862709,al
  41d06e:	repnz imul DWORD PTR [edx]
  41d071:	mov    bl,0x91
  41d073:	mov    ebx,0xa4de21a1
  41d078:	push   esp
  41d079:	jb     0x41d05f
  41d07b:	xor    al,0xd7
  41d07d:	stos   BYTE PTR es:[edi],al
  41d07e:	or     esp,DWORD PTR [eax-0x2241750a]
  41d084:	or     bl,0xdd
  41d087:	loopne 0x41d0c3
  41d089:	das    
  41d08a:	xor    al,0xcc
  41d08c:	cli    
  41d08d:	add    al,0xa2
  41d08f:	fidivr WORD PTR [ecx-0x38]
  41d092:	fcmovnbe st,st(7)
  41d094:	rcl    ecx,0x98
  41d097:	arpl   WORD PTR [ebp+0x50],ax
  41d09a:	mov    edi,0x7847c683
  41d09f:	inc    esp
  41d0a0:	cmp    edx,esp
  41d0a2:	into   
  41d0a3:	std    
  41d0a4:	mov    ebp,0x29c73569
  41d0a9:	mov    ds:0xf30c07b0,al
  41d0ae:	imul   edx,DWORD PTR [ecx+0x2d8c886b],0x8262f8d
  41d0b8:	ss or  bh,ch
  41d0bb:	popa   
  41d0bc:	sbb    ah,ah
  41d0be:	adc    edi,DWORD PTR [ecx]
  41d0c0:	dec    DWORD PTR [ebx]
  41d0c2:	adc    eax,0x49b73209
  41d0c7:	xchg   ebp,eax
  41d0c8:	mov    BYTE PTR [ecx-0xc],bh
  41d0cb:	test   edx,ecx
  41d0cd:	add    BYTE PTR [esi-0x796de957],bh
  41d0d3:	sub    eax,0x5e44f74d
  41d0d8:	jmp    0xbf81:0xe122db57
  41d0df:	push   0xe
  41d0e1:	dec    esp
  41d0e2:	xor    eax,ebx
  41d0e4:	mov    eax,0x4555923f
  41d0e9:	pop    es
  41d0ea:	nop
  41d0eb:	and    DWORD PTR [edx-0x8],ebx
  41d0ee:	sbb    al,0x3e
  41d0f0:	xor    eax,0x99a8f7e9
  41d0f5:	mov    edi,0xdc8da696
  41d0fa:	cmp    ah,BYTE PTR [ecx+ecx*2+0x3d]
  41d0fe:	mov    ?,WORD PTR [edx-0x3d]
  41d101:	pop    esp
  41d102:	and    ebx,DWORD PTR [eax-0xc]
  41d105:	push   ebx
  41d106:	cmp    DWORD PTR [ecx-0x64a7ea7d],eax
  41d10c:	nop
  41d10d:	jno    0x41d0ed
  41d10f:	sbb    DWORD PTR [ecx+ecx*2],ebx
  41d112:	xchg   ebx,eax
  41d113:	xor    eax,0xf717f4d7
  41d118:	xchg   edi,eax
  41d119:	inc    esp
  41d11a:	jp     0x41d148
  41d11c:	ret    0x6a9a
  41d11f:	cmp    eax,0x6daa9d2a
  41d124:	xor    bh,al
  41d126:	retf   
  41d127:	lock aad 0x3c
  41d12a:	jmp    0x41d176
  41d12c:	mov    es,WORD PTR [ecx-0x1]
  41d12f:	test   al,0x3f
  41d131:	loopne 0x41d10f
  41d133:	arpl   WORD PTR [esi-0x2e],bx
  41d136:	sar    BYTE PTR [esi],1
  41d138:	bound  ecx,QWORD PTR [edi-0x39]
  41d13b:	xor    ebx,eax
  41d13d:	rol    ch,0xff
  41d140:	imul   esp,edi,0xffffffa0
  41d143:	adc    ecx,DWORD PTR ds:0x1ab3bca6
  41d149:	jp     0x41d151
  41d14b:	call   0x9f627b80
  41d150:	or     al,0xc1
  41d152:	mov    bh,0xd3
  41d154:	in     eax,0x6d
  41d156:	out    0x6b,al
  41d158:	hlt    
  41d159:	jge    0x41d0f2
  41d15b:	jnp    0x41d13d
  41d15d:	popf   
  41d15e:	push   cs
  41d15f:	pusha  
  41d160:	ja     0x41d1d0
  41d162:	popf   
  41d163:	js     0x41d153
  41d165:	inc    ebx
  41d166:	daa    
  41d167:	loop   0x41d0f0
  41d169:	icebp  
  41d16a:	mov    fs,ebp
  41d16c:	dec    eax
  41d16d:	pop    ds
  41d16e:	mov    es,WORD PTR [edx]
  41d170:	sub    eax,0xcf5a5a70
  41d175:	push   0x9a5910d6
  41d17a:	pop    ebx
  41d17b:	fstp   DWORD PTR [ecx-0x442f5bad]
  41d181:	in     eax,dx
  41d182:	stos   BYTE PTR es:[edi],al
  41d183:	or     BYTE PTR [ebp-0x71acbc99],0x51
  41d18a:	icebp  
  41d18b:	js     0x41d144
  41d18d:	dec    eax
  41d18e:	mov    eax,0x970ba22f
  41d193:	bound  esi,QWORD PTR [esi-0x3a]
  41d196:	adc    DWORD PTR [edx-0x65],eax
  41d199:	retf   
  41d19a:	mov    esi,0x23111ca7
  41d19f:	cmp    eax,0xbb30bdc7
  41d1a4:	adc    ecx,DWORD PTR [ebx+ebp*8+0x58]
  41d1a8:	pop    ebx
  41d1a9:	ficom  DWORD PTR [esi+eiz*1+0x77ba7962]
  41d1b0:	sar    ebx,cl
  41d1b2:	add    BYTE PTR [ecx-0x79],ch
  41d1b5:	inc    ebp
  41d1b6:	inc    esi
  41d1b7:	iret   
  41d1b8:	arpl   WORD PTR [ebp+edx*2-0x3f3bad49],dx
  41d1bf:	(bad)  
  41d1c1:	ja     0x41d196
  41d1c3:	std    
  41d1c4:	xchg   ebp,eax
  41d1c5:	cmc    
  41d1c6:	pop    es
  41d1c7:	retf   0x11d5
  41d1ca:	add    DWORD PTR [ebx],ecx
  41d1cc:	pop    ecx
  41d1cd:	mov    ch,0xcb
  41d1cf:	sub    eax,0xe52f3c0b
  41d1d4:	cmp    eax,0x88ef5f6
  41d1d9:	jne    0x41d1f9
  41d1db:	push   eax
  41d1dc:	in     eax,dx
  41d1dd:	(bad)  
  41d1de:	fimul  DWORD PTR [ebp+eiz*1-0x130dee37]
  41d1e5:	(bad)  
  41d1e6:	cld    
  41d1e7:	jecxz  0x41d1fc
  41d1e9:	in     eax,dx
  41d1ea:	xchg   edi,eax
  41d1eb:	dec    eax
  41d1ec:	mov    bh,0x49
  41d1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ef:	xchg   esp,eax
  41d1f0:	mov    bl,0x72
  41d1f2:	arpl   WORD PTR [edi*8+0x2530179b],si
  41d1f9:	aaa    
  41d1fa:	in     eax,0x5d
  41d1fc:	lahf   
  41d1fd:	sub    al,0xcc
  41d1ff:	aas    
  41d200:	jae    0x41d231
  41d202:	mov    dh,dl
  41d204:	rcl    edi,cl
  41d206:	inc    ecx
  41d207:	push   ecx
  41d208:	mov    bl,ch
  41d20a:	lahf   
  41d20b:	bound  ecx,QWORD PTR [ebx+0x46ed1a62]
  41d211:	or     eax,0x7c6515bd
  41d216:	sbb    eax,0xc6829b05
  41d21b:	add    DWORD PTR [esi+0x32],edx
  41d21e:	adc    BYTE PTR [ebp+0x677eb1cf],bl
  41d224:	repz rol BYTE PTR [ecx],cl
  41d227:	div    al
  41d229:	or     dl,BYTE PTR [eax+0x16a45937]
  41d22f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d230:	repnz loopne 0x41d1f2
  41d233:	std    
  41d234:	jmp    0x835a:0x18c9a731
  41d23b:	fld    DWORD PTR [edi+eax*8-0x1207bf8b]
  41d242:	pop    ecx
  41d243:	les    ebx,FWORD PTR [edi+0x66936245]
  41d249:	in     al,dx
  41d24a:	pop    ebx
  41d24b:	scas   al,BYTE PTR es:[edi]
  41d24c:	and    DWORD PTR [eax+0x7d58610],eax
  41d252:	cs xchg ecx,eax
  41d254:	repnz shl DWORD PTR [eax],0x2e
  41d258:	repnz les eax,FWORD PTR [ebx+ebx*8+0x3d]
  41d25d:	jge    0x41d2a2
  41d25f:	fimul  WORD PTR [ebp+0x7c46819c]
  41d265:	sub    ebp,DWORD PTR [ebp+0x46]
  41d268:	ins    BYTE PTR es:[edi],dx
  41d269:	ror    DWORD PTR [ecx+0x3b49ffb5],0x1e
  41d270:	push   cs
  41d271:	scas   al,BYTE PTR es:[edi]
  41d272:	push   edi
  41d273:	adc    al,0xa0
  41d275:	fstp   DWORD PTR [ecx+eiz*4+0x12a4a47e]
  41d27c:	and    edi,DWORD PTR [eax-0x1e]
  41d27f:	sub    bh,BYTE PTR [ecx]
  41d281:	clc    
  41d282:	ins    DWORD PTR es:[edi],dx
  41d283:	js     0x41d223
  41d285:	xor    al,0xfa
  41d287:	lea    ebx,[ebx]
  41d289:	jmp    DWORD PTR [ecx]
  41d28b:	jbe    0x41d2a6
  41d28d:	pop    ebp
  41d28e:	xchg   ebp,eax
  41d28f:	fcmovnu st,st(1)
  41d291:	sub    DWORD PTR [edi],eax
  41d293:	scas   eax,DWORD PTR es:[edi]
  41d294:	inc    ebx
  41d295:	shl    BYTE PTR [edx+0x6b4a93ce],1
  41d29b:	push   esi
  41d29c:	sbb    eax,0x6755c11f
  41d2a1:	sbb    BYTE PTR [eax+0x626d6876],bh
  41d2a7:	cmp    cl,BYTE PTR [edx]
  41d2a9:	aas    
  41d2aa:	out    dx,eax
  41d2ab:	adc    dh,dl
  41d2ad:	cmp    al,0xe5
  41d2af:	inc    ebp
  41d2b0:	cmp    edi,DWORD PTR [edx-0x5b]
  41d2b3:	sti    
  41d2b4:	and    al,0xe2
  41d2b6:	push   es
  41d2b7:	popa   
  41d2b8:	ins    BYTE PTR es:[edi],dx
  41d2b9:	or     BYTE PTR [edi+edi*8],ch
  41d2bc:	and    DWORD PTR [esi],edx
  41d2be:	and    DWORD PTR [edi+0x1e],0xffffffd3
  41d2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c3:	lods   al,BYTE PTR ds:[esi]
  41d2c4:	mov    edx,DWORD PTR [ecx-0x71f8a5f0]
  41d2ca:	mov    ds:0x1bd324eb,eax
  41d2cf:	mov    esi,0x88a086b4
  41d2d4:	dec    edx
  41d2d5:	pusha  
  41d2d6:	dec    eax
  41d2d7:	data16 std 
  41d2d9:	dec    eax
  41d2da:	lahf   
  41d2db:	sar    DWORD PTR [esp+edx*4+0x9],cl
  41d2df:	fist   WORD PTR [edi+0x4c]
  41d2e2:	xor    BYTE PTR [edx+0x65],al
  41d2e5:	and    BYTE PTR [esi-0x32],0x44
  41d2e9:	jne    0x41d300
  41d2eb:	sbb    al,0xe8
  41d2ed:	xchg   BYTE PTR fs:[ebp-0x46b8c27],ch
  41d2f4:	adc    DWORD PTR [edx],0x27
  41d2f7:	pop    ecx
  41d2f8:	cmp    DWORD PTR gs:0xd5f9c292,edi
  41d2ff:	sti    
  41d300:	mov    esi,0x23003738
  41d305:	(bad)  
  41d307:	test   eax,0xb62c1120
  41d30c:	cmp    eax,0xc59daca2
  41d311:	sti    
  41d312:	stos   DWORD PTR es:[edi],eax
  41d313:	lock xchg ebp,eax
  41d315:	test   BYTE PTR [eax+ebp*2],bh
  41d318:	mov    eax,0xdaa21a78
  41d31d:	test   DWORD PTR [edi-0x5bc122d7],0x48c92d99
  41d327:	sbb    ah,dh
  41d329:	test   eax,0xc7f597ec
  41d32e:	fwait
  41d32f:	outs   dx,BYTE PTR ds:[esi]
  41d330:	dec    ecx
  41d331:	mov    BYTE PTR [esp+eax*2+0x6451c630],0x39
  41d339:	xchg   dh,ch
  41d33b:	or     ch,BYTE PTR [eax-0x4dbd750d]
  41d341:	mov    es,WORD PTR [ecx]
  41d343:	pop    ebx
  41d344:	(bad)  
  41d345:	in     al,0x5d
  41d347:	dec    ecx
  41d348:	push   ecx
  41d349:	push   0x3b
  41d34b:	add    al,0x6b
  41d34d:	js     0x41d324
  41d34f:	adc    BYTE PTR [ebx+0x2],cl
  41d352:	mov    esp,0xda73b09e
  41d357:	mov    bl,0xbc
  41d359:	add    BYTE PTR [ecx+0x33],bl
  41d35c:	jecxz  0x41d2e1
  41d35e:	push   ecx
  41d35f:	cmp    BYTE PTR [esi-0xf],bl
  41d362:	push   eax
  41d363:	inc    edi
  41d364:	jg     0x41d34b
  41d366:	or     esi,DWORD PTR [ecx-0x2073153a]
  41d36c:	xchg   edi,eax
  41d36d:	mov    ah,0xb
  41d36f:	push   ss
  41d370:	retf   
  41d371:	clc    
  41d372:	fstp   QWORD PTR [ecx-0x47eda772]
  41d378:	imul   ebx,DWORD PTR [eax-0x3cfd233e],0x1b9d61c1
  41d382:	rcl    DWORD PTR [esi],0x77
  41d385:	lahf   
  41d386:	(bad)  
  41d387:	int3   
  41d388:	jle    0x41d3c7
  41d38a:	popa   
  41d38b:	pop    es
  41d38c:	packssdw mm2,QWORD PTR [edx]
  41d38f:	sahf   
  41d390:	icebp  
  41d391:	lds    edi,FWORD PTR [ecx-0x53]
  41d394:	ja     0x41d3d8
  41d396:	adc    eax,0xd685c527
  41d39b:	inc    ebx
  41d39c:	cmp    al,0xab
  41d39e:	aam    0x3e
  41d3a0:	add    eax,0x93e7fcba
  41d3a5:	aas    
  41d3a6:	sub    al,0xe
  41d3a8:	out    0x44,eax
  41d3aa:	dec    ebx
  41d3ab:	add    BYTE PTR [edi+0x36],ah
  41d3ae:	imul   edx,DWORD PTR [esp+ebx*1],0xdca5ecd
  41d3b5:	add    esi,DWORD PTR [ecx-0x6349ab61]
  41d3bb:	fild   WORD PTR [esi-0x47442bb0]
  41d3c1:	ja     0x41d3a4
  41d3c3:	(bad)  
  41d3c4:	cmp    BYTE PTR [ebp-0x5d646f8c],al
  41d3ca:	or     DWORD PTR [edx],ebx
  41d3cc:	adc    DWORD PTR [eax+0x43],esi
  41d3cf:	retf   
  41d3d0:	fs cmovb esp,ebp
  41d3d4:	pop    ss
  41d3d5:	pop    esi
  41d3d6:	adc    edx,DWORD PTR [ebp-0x4c]
  41d3d9:	pop    esp
  41d3da:	add    eax,DWORD PTR [eax+0x3b]
  41d3dd:	mov    fs,WORD PTR [edx+ebx*2+0x29]
  41d3e1:	int3   
  41d3e2:	loop   0x41d413
  41d3e4:	(bad)  
  41d3e6:	repz pop ebx
  41d3e8:	loope  0x41d393
  41d3ea:	push   esi
  41d3eb:	(bad)  
  41d3ed:	jo     0x41d400
  41d3ef:	gs int 0x1e
  41d3f2:	xchg   esp,eax
  41d3f3:	dec    eax
  41d3f4:	fcmovne st,st(2)
  41d3f6:	sti    
  41d3f7:	test   al,0xa
  41d3f9:	daa    
  41d3fa:	dec    eax
  41d3fb:	shl    DWORD PTR [edi],0xe8
  41d3fe:	outs   dx,DWORD PTR ds:[esi]
  41d3ff:	(bad)  
  41d400:	sbb    DWORD PTR [ebp+0x68],ebx
  41d403:	push   edx
  41d404:	aam    0x9
  41d406:	sub    DWORD PTR [ebx+0x176b7f1a],ebx
  41d40c:	inc    ebx
  41d40d:	je     0x41d476
  41d40f:	inc    eax
  41d410:	xchg   edx,eax
  41d411:	push   ds
  41d412:	shr    BYTE PTR ds:0x61bedd79,0x46
  41d419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d41a:	sar    BYTE PTR [ebx],0xe7
  41d41d:	das    
  41d41e:	and    eax,0x1d438c94
  41d423:	pusha  
  41d424:	or     bh,BYTE PTR [edx]
  41d426:	push   esi
  41d427:	fsubr  st(2),st
  41d429:	mov    ah,0x72
  41d42b:	pop    ecx
  41d42c:	or     DWORD PTR [esi-0x48],0xd4266213
  41d433:	retf   0x5f4
  41d436:	fist   WORD PTR [eax+0x7f]
  41d439:	(bad)  
  41d43a:	lods   ax,WORD PTR ds:[esi]
  41d43c:	adc    BYTE PTR [esi],dh
  41d43e:	cmp    eax,0x7f574671
  41d443:	inc    edi
  41d444:	or     BYTE PTR [ebx+eax*1+0x44],dl
  41d448:	inc    ecx
  41d449:	push   edx
  41d44a:	jbe    0x41d4ab
  41d44c:	mov    ah,0x5b
  41d44e:	cmp    DWORD PTR [eax+eax*4-0x566c2458],edx
  41d455:	adc    al,0xd2
  41d457:	xchg   ecx,eax
  41d458:	add    esp,DWORD PTR [edx+0x58]
  41d45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d45c:	ss stos BYTE PTR es:[edi],al
  41d45e:	jo     0x41d49a
  41d460:	lds    ebx,FWORD PTR [ecx-0x2c7ebb1b]
  41d466:	add    DWORD PTR [edi+0x7d],ebx
  41d469:	adc    al,0x3b
  41d46b:	pop    ebp
  41d46c:	test   DWORD PTR [edi+esi*1-0x18],0xf639e637
  41d474:	push   0xffffffdc
  41d476:	mov    edi,0xb57874ec
  41d47b:	ud1    ebp,esi
  41d47e:	jns    0x41d4c2
  41d480:	adc    al,0x1c
  41d482:	retf   
  41d483:	pop    esi
  41d484:	enter  0xde04,0x7
  41d488:	daa    
  41d489:	xchg   esi,eax
  41d48a:	add    ebx,DWORD PTR [eax-0x5c]
  41d48d:	mov    ds:0xfcce709d,eax
  41d492:	add    DWORD PTR [edx+0x78],esi
  41d495:	daa    
  41d496:	scas   eax,DWORD PTR es:[edi]
  41d497:	add    BYTE PTR [eax],ah
  41d499:	(bad)  
  41d49b:	jae    0x41d47f
  41d49d:	idiv   BYTE PTR [ebx]
  41d49f:	lea    edi,[edx+edx*4-0x41]
  41d4a3:	in     eax,dx
  41d4a4:	push   esi
  41d4a5:	(bad)
  41d4a8:	outs   dx,BYTE PTR ds:[esi]
  41d4a9:	push   ebx
  41d4aa:	pop    eax
  41d4ab:	fsubr  st(5),st
  41d4ad:	sti    
  41d4ae:	jae    0x41d4d0
  41d4b0:	cs mov bh,0xac
  41d4b3:	cmp    DWORD PTR [ecx],edi
  41d4b5:	mov    dl,bh
  41d4b7:	call   0x2504:0xacc84002
  41d4be:	loopne 0x41d4b6
  41d4c0:	xchg   edi,eax
  41d4c1:	mov    esi,0x284a763e
  41d4c6:	xor    ch,BYTE PTR [ebp-0x58]
  41d4c9:	xchg   ecx,eax
  41d4ca:	xlat   BYTE PTR ds:[ebx]
  41d4cb:	mov    al,0x46
  41d4cd:	push   ecx
  41d4ce:	gs ins DWORD PTR es:[edi],dx
  41d4d0:	jne    0x41d473
  41d4d2:	mov    cs,WORD PTR [edx]
  41d4d4:	dec    ebx
  41d4d5:	cmp    cl,dh
  41d4d7:	pop    ebp
  41d4d8:	dec    esi
  41d4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4da:	gs inc esi
  41d4dc:	sub    BYTE PTR [ecx+0x16],al
  41d4df:	push   edi
  41d4e0:	xor    dl,BYTE PTR [ecx+eiz*1]
  41d4e3:	test   BYTE PTR [edx],ah
  41d4e5:	pushf  
  41d4e6:	lahf   
  41d4e7:	adc    cl,BYTE PTR [ebx-0x395b93bf]
  41d4ed:	fnsave [eax-0x11f72512]
  41d4f3:	int    0x42
  41d4f5:	daa    
  41d4f6:	pop    esp
  41d4f7:	or     ebp,edx
  41d4f9:	aaa    
  41d4fa:	aad    0xdc
  41d4fc:	fwait
  41d4fd:	xchg   DWORD PTR [ecx],eax
  41d4ff:	adc    ebx,esi
  41d501:	fisub  DWORD PTR [edx+0x2a]
  41d504:	adc    eax,0xdd37cb3c
  41d509:	inc    esi
  41d50a:	clc    
  41d50b:	arpl   WORD PTR [esi-0x50],di
  41d50e:	cli    
  41d50f:	jg     0x41d50c
  41d511:	jno    0x41d56d
  41d513:	repnz sbb ebp,DWORD PTR cs:[ebp-0x22]
  41d518:	retf   0xd3a3
  41d51b:	in     eax,0xb6
  41d51d:	jl     0x41d55b
  41d51f:	xchg   ebp,eax
  41d520:	xor    ebp,edx
  41d522:	lods   al,BYTE PTR ds:[esi]
  41d523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d524:	rcr    DWORD PTR [esi+0x2c76f29f],0x9a
  41d52b:	mov    edx,0x5c76e6cf
  41d530:	call   0x61927121
  41d535:	xchg   ebp,eax
  41d536:	inc    edi
  41d537:	xchg   BYTE PTR [esi-0x37],ch
  41d53a:	lods   eax,DWORD PTR ds:[esi]
  41d53b:	mov    dl,0xe
  41d53d:	test   BYTE PTR [esi-0x41],ch
  41d540:	fadd   st,st(4)
  41d542:	sub    DWORD PTR [esi+0xd],0x76
  41d546:	xlat   BYTE PTR ds:[ebx]
  41d547:	dec    esi
  41d548:	pusha  
  41d549:	popf   
  41d54a:	mov    DWORD PTR [ecx-0x2a],edi
  41d54d:	push   edx
  41d54e:	sub    ah,BYTE PTR [ebp+0x62]
  41d551:	dec    eax
  41d552:	sub    DWORD PTR [edx-0x52],esp
  41d555:	pusha  
  41d556:	dec    esp
  41d557:	hlt    
  41d558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d559:	dec    ecx
  41d55a:	sbb    edi,DWORD PTR [ebp-0x31]
  41d55d:	test   DWORD PTR [ebp+0x734fae64],0xdf3bcb87
  41d567:	jmp    0x41d515
  41d569:	iret   
  41d56a:	mov    dh,0x49
  41d56c:	pop    ecx
  41d56d:	dec    eax
  41d56f:	ss sbb al,0x2e
  41d572:	cmp    dl,dl
  41d574:	scas   eax,DWORD PTR es:[edi]
  41d575:	data16 (bad) 
  41d577:	sub    ecx,ebp
  41d579:	aas    
  41d57a:	adc    eax,eax
  41d57c:	dec    edx
  41d57d:	sub    cl,cl
  41d57f:	out    dx,eax
  41d580:	out    0x4f,al
  41d582:	xchg   edi,eax
  41d583:	cs jp  0x41d5fd
  41d586:	inc    ebx
  41d587:	mov    BYTE PTR [eax+eiz*8],al
  41d58a:	mov    ah,0x3b
  41d58c:	out    0x46,al
  41d58e:	retf   
  41d58f:	fisubr DWORD PTR ds:0xc1838b6a
  41d595:	inc    ebp
  41d596:	pop    esp
  41d597:	(bad)  
  41d598:	loope  0x41d5c2
  41d59a:	pop    ebx
  41d59b:	enter  0xc4e6,0x9a
  41d59f:	std    
  41d5a0:	pop    ss
  41d5a1:	and    al,0x7
  41d5a3:	sbb    al,0x2d
  41d5a5:	sub    edx,esi
  41d5a7:	cmc    
  41d5a8:	push   ds
  41d5a9:	inc    ebp
  41d5aa:	sub    DWORD PTR [ebx-0xb6ccb49],0x4b555209
  41d5b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5b5:	out    dx,al
  41d5b6:	aad    0x4
  41d5b8:	mov    ecx,0x35773816
  41d5bd:	fisttp WORD PTR [eax]
  41d5bf:	ror    BYTE PTR [esi+0x59],cl
  41d5c2:	inc    ebp
  41d5c3:	or     eax,ebp
  41d5c5:	mov    dl,0x3e
  41d5c7:	aad    0xfa
  41d5c9:	in     eax,0xa2
  41d5cb:	xor    al,0xe6
  41d5cd:	iret   
  41d5ce:	int3   
  41d5cf:	add    dl,cl
  41d5d1:	push   esp
  41d5d2:	rcr    BYTE PTR [edx],cl
  41d5d4:	push   edx
  41d5d5:	dec    eax
  41d5d6:	rol    BYTE PTR [eax+ebp*8-0x3e8254f7],cl
  41d5dd:	and    al,0xa1
  41d5df:	push   0xffffffc0
  41d5e1:	adc    bl,BYTE PTR [eax-0x1fd2d176]
  41d5e7:	push   DWORD PTR [eax+0x2b]
  41d5ea:	in     eax,dx
  41d5eb:	push   0x20046b15
  41d5f0:	mov    al,ds:0xcabb774a
  41d5f5:	and    esi,ebx
  41d5f7:	fild   QWORD PTR [eax+esi*1+0x64]
  41d5fb:	dec    ebp
  41d5fc:	(bad)  
  41d5fd:	mov    esi,esp
  41d5ff:	loopne 0x41d5f8
  41d601:	fimul  DWORD PTR [edx-0x4b]
  41d604:	adc    ch,BYTE PTR [eax+0x55]
  41d607:	add    esi,eax
  41d609:	or     BYTE PTR [edi],ah
  41d60b:	sub    eax,0x54ede098
  41d610:	jbe    0x41d672
  41d612:	and    eax,0x673ec408
  41d617:	sar    DWORD PTR [edx+ecx*4+0x1a],cl
  41d61b:	data16 rol dl,1
  41d61e:	and    DWORD PTR [edx],0xe
  41d621:	push   edx
  41d622:	stos   DWORD PTR es:[edi],eax
  41d623:	js     0x41d60f
  41d625:	pop    ebp
  41d626:	adc    DWORD PTR [ebp-0xd],ebx
  41d629:	cmc    
  41d62a:	jb     0x41d65b
  41d62c:	jb     0x41d65d
  41d62e:	or     edx,DWORD PTR [edi-0x50]
  41d631:	push   0xffffffe3
  41d633:	mov    ecx,DWORD PTR [esi]
  41d635:	jecxz  0x41d5c3
  41d637:	retf   
  41d638:	div    BYTE PTR [ebp-0x6c98a5aa]
  41d63e:	cmp    edi,0xff3a3ce8
  41d644:	inc    ebx
  41d645:	out    dx,al
  41d646:	adc    BYTE PTR [edi+0x27],ah
  41d649:	popf   
  41d64a:	xchg   BYTE PTR [ebp-0x4e],dl
  41d64d:	inc    edx
  41d64e:	pop    edi
  41d64f:	hlt    
  41d650:	pop    edi
  41d651:	mov    eax,0x550e9e8d
  41d656:	jmp    0xa21aaa18
  41d65b:	pushf  
  41d65c:	bound  ebp,QWORD PTR [edx]
  41d65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65f:	xor    BYTE PTR [ebp+0x46f6bfed],cl
  41d665:	or     bh,BYTE PTR [edi-0x37]
  41d668:	fadd   QWORD PTR [ebx-0x721d67ee]
  41d66e:	daa    
  41d66f:	jmp    DWORD PTR [esi+0x29922e3e]
  41d675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d676:	into   
  41d677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d678:	sub    bh,0x53
  41d67b:	dec    ecx
  41d67c:	inc    edi
  41d67d:	sar    cl,cl
  41d67f:	lds    edi,FWORD PTR [ecx-0x47129e55]
  41d685:	jbe    0x41d683
  41d687:	ror    BYTE PTR ds:[eax],cl
  41d68a:	mov    ebx,0xe04cd73c
  41d68f:	or     eax,0x1ad762a4
  41d694:	sub    dl,0x1f
  41d697:	repz sub al,0xb4
  41d69a:	lds    ecx,FWORD PTR [eax-0x6c]
  41d69d:	and    bl,ah
  41d69f:	pop    esi
  41d6a0:	xor    BYTE PTR [ecx-0x2a45e8d8],ah
  41d6a6:	xor    eax,DWORD PTR [eax+0x7a4aebbb]
  41d6ac:	sbb    bl,BYTE PTR [esi+0x2f]
  41d6af:	sahf   
  41d6b0:	sub    eax,0xbfdc980a
  41d6b5:	inc    ecx
  41d6b6:	add    BYTE PTR [esi],bl
  41d6b8:	les    esp,FWORD PTR [eax+0x7a475ba7]
  41d6be:	push   0x3e
  41d6c0:	inc    ebx
  41d6c1:	add    edi,ebx
  41d6c3:	pop    ds
  41d6c4:	into   
  41d6c5:	mov    bl,BYTE PTR [eax-0x25]
  41d6c8:	(bad)  
  41d6c9:	add    al,0x80
  41d6cb:	adc    esi,esp
  41d6cd:	and    DWORD PTR [esi-0x80],ebp
  41d6d0:	lea    ebp,ds:0x67f50cd
  41d6d6:	cmp    esi,esp
  41d6d8:	xor    dl,BYTE PTR [ebx*4+0x540a119c]
  41d6df:	imul   DWORD PTR [eax]
  41d6e1:	mov    cl,0x25
  41d6e3:	and    dh,dh
  41d6e5:	out    0xdb,al
  41d6e7:	call   0xca70:0x7450d34d
  41d6ee:	pop    ss
  41d6ef:	adc    edx,DWORD PTR ds:0x598b55c2
  41d6f5:	jmp    0xca7d825a
  41d6fa:	xchg   ecx,eax
  41d6fb:	icebp  
  41d6fc:	xor    eax,0x9b11e123
  41d701:	aam    0x2
  41d703:	cli    
  41d704:	out    dx,eax
  41d705:	add    DWORD PTR [edi-0x6a],edi
  41d708:	jb     0x41d6a4
  41d70a:	jl     0x41d777
  41d70c:	or     BYTE PTR [esi],0x44
  41d70f:	scas   eax,DWORD PTR es:[edi]
  41d710:	jg     0x41d721
  41d712:	aad    0xdb
  41d714:	xchg   edi,eax
  41d715:	lods   al,BYTE PTR ds:[esi]
  41d716:	inc    edi
  41d717:	mov    esp,0xee48ec38
  41d71c:	and    eax,0x2e73b7eb
  41d721:	adc    DWORD PTR [ebx-0x585c6312],ebx
  41d727:	(bad)  
  41d728:	dec    BYTE PTR ds:0xc1347b9b
  41d72e:	sub    BYTE PTR [eax+ebp*4],dh
  41d731:	pushf  
  41d732:	jbe    0x41d6d5
  41d734:	imul   dl
  41d736:	in     al,dx
  41d737:	push   ebx
  41d738:	xchg   ebp,eax
  41d739:	or     ebx,DWORD PTR [ebx+0x556170dd]
  41d73f:	scas   al,BYTE PTR es:[edi]
  41d740:	jno    0x41d769
  41d742:	int3   
  41d743:	mov    al,0xff
  41d745:	jae    0x41d6e0
  41d747:	dec    ebp
  41d748:	mov    esp,0x1dbb834a
  41d74d:	inc    edx
  41d74e:	clc    
  41d74f:	jge    0x41d76c
  41d751:	dec    edx
  41d752:	or     esp,DWORD PTR ds:0x40f70251
  41d758:	retf   
  41d759:	nop
  41d75a:	(bad)  
  41d75b:	data16 adc BYTE PTR [edx],dl
  41d75e:	fld    QWORD PTR [edi+0x54bca748]
  41d764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d765:	pop    esi
  41d766:	dec    esp
  41d767:	sahf   
  41d768:	cmp    DWORD PTR [eax+esi*2-0x19d5ddbf],ebx
  41d76f:	out    0x26,eax
  41d771:	and    al,0x8c
  41d773:	push   edx
  41d774:	mov    ebp,0xae7fd39d
  41d779:	cmc    
  41d77a:	cs or  eax,0xac805c83
  41d780:	sub    esp,DWORD PTR [esi-0xbe1de28]
  41d786:	out    0x83,al
  41d788:	sub    DWORD PTR [eax+0x5f78f851],ecx
  41d78e:	mov    dl,0x2f
  41d790:	push   eax
  41d791:	xchg   edi,eax
  41d792:	inc    edx
  41d793:	loopne 0x41d7d6
  41d795:	mov    bl,0x31
  41d797:	sbb    bl,al
  41d799:	cmp    al,0x7
  41d79b:	cmc    
  41d79c:	ins    BYTE PTR es:[edi],dx
  41d79d:	pop    eax
  41d79e:	inc    ebp
  41d79f:	sub    bh,BYTE PTR [eax-0x56]
  41d7a2:	pop    ss
  41d7a3:	sbb    eax,0x1f0f7807
  41d7a8:	mov    al,BYTE PTR [ebx-0x56]
  41d7ab:	push   es
  41d7ac:	fwait
  41d7ad:	jns    0x41d739
  41d7af:	add    ebx,DWORD PTR cs:[esi+0x72]
  41d7b3:	fwait
  41d7b4:	into   
  41d7b5:	stos   BYTE PTR es:[edi],al
  41d7b6:	popa   
  41d7b7:	nop
  41d7b8:	inc    ebp
  41d7b9:	(bad)  [eax]
  41d7bb:	add    eax,0x7968bee4
  41d7c0:	mov    al,ds:0x8cd8b26d
  41d7c5:	js     0x41d7b7
  41d7c7:	ds mov ah,0xdb
  41d7ca:	rcr    DWORD PTR [eax+edx*4-0x6aed86ff],cl
  41d7d1:	ja     0x41d7ad
  41d7d3:	rcr    DWORD PTR [ecx+0x4cd43b5a],1
  41d7d9:	loop   0x41d7bc
  41d7db:	ins    BYTE PTR es:[edi],dx
  41d7dc:	sahf   
  41d7dd:	dec    esi
  41d7de:	(bad)  
  41d7df:	fst    DWORD PTR [esi]
  41d7e1:	mov    WORD PTR [edx],es
  41d7e3:	dec    ebp
  41d7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e5:	mov    ebp,0x431afa22
  41d7ea:	mov    DWORD PTR [eax],ecx
  41d7ec:	pusha  
  41d7ed:	loop   0x41d7ba
  41d7ef:	into   
  41d7f0:	inc    edi
  41d7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7f2:	mov    ebp,0xb4d2fde5
  41d7f7:	out    0xb6,eax
  41d7f9:	cmp    al,0x1f
  41d7fb:	add    ah,BYTE PTR [eax+0x1]
  41d7fe:	jg     0x41d782
  41d800:	rcl    BYTE PTR [ebx+esi*2],0xa
  41d804:	xor    BYTE PTR [ebx-0x6e],ch
  41d807:	(bad)  
  41d808:	inc    esp
  41d809:	xor    eax,0xe3843c40
  41d80e:	push   edi
  41d80f:	ins    DWORD PTR es:[edi],dx
  41d810:	loop   0x41d7e1
  41d812:	sbb    dl,BYTE PTR [esp+edx*4]
  41d815:	ret    0xa024
  41d818:	mov    ds:0x8078bbe5,eax
  41d81d:	pop    ecx
  41d81e:	add    dl,bl
  41d820:	test   BYTE PTR [eax-0x59],al
  41d823:	test   BYTE PTR [ebx-0x36],bh
  41d826:	and    al,0x6
  41d828:	popa   
  41d829:	inc    ebp
  41d82a:	inc    ecx
  41d82b:	outs   dx,BYTE PTR ds:[esi]
  41d82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d82d:	jns    0x41d7d0
  41d82f:	pop    DWORD PTR [ecx+0x9]
  41d832:	mov    esp,0xc097e2b
  41d837:	jge    0x41d7c7
  41d839:	dec    ebp
  41d83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d83b:	hlt    
  41d83c:	test   BYTE PTR [ebx],dl
  41d83e:	int    0x56
  41d840:	mov    edx,0x4acbe527
  41d845:	(bad)  
  41d846:	sbb    DWORD PTR [ebx],edx
  41d848:	jecxz  0x41d81a
  41d84a:	mov    WORD PTR ds:[edx-0x38c2f32d],fs
  41d851:	sbb    al,0x6e
  41d853:	outs   dx,DWORD PTR ds:[esi]
  41d854:	stc    
  41d855:	pop    es
  41d856:	mov    edi,0xdd9a9e7
  41d85b:	and    ebx,DWORD PTR [edx-0x52327c3d]
  41d861:	mov    bl,0xa
  41d863:	ds mov bh,0xc3
  41d866:	mov    DWORD PTR [edx-0x1870c56b],edx
  41d86c:	pushf  
  41d86d:	jbe    0x41d88b
  41d86f:	or     eax,0xd7ad007a
  41d874:	(bad)  
  41d876:	out    dx,al
  41d877:	push   esi
  41d878:	outs   dx,BYTE PTR ds:[esi]
  41d879:	inc    ecx
  41d87a:	inc    esi
  41d87b:	(bad)  
  41d87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d87d:	mov    al,ds:0xe8d3b811
  41d882:	mov    DWORD PTR [esi-0x26],ecx
  41d885:	aaa    
  41d886:	cdq    
  41d887:	sar    bh,1
  41d889:	dec    esi
  41d88a:	fcmovne st,st(3)
  41d88c:	xor    ebp,0xffffffd1
  41d88f:	push   0x3
  41d891:	sub    al,0x62
  41d893:	mov    ebx,0x7b4615e8
  41d898:	(bad)  
  41d899:	pop    ebx
  41d89a:	inc    ecx
  41d89b:	scas   eax,DWORD PTR es:[edi]
  41d89c:	inc    edi
  41d89d:	fs imul esp,eax,0x8cb58b23
  41d8a4:	aad    0x4d
  41d8a6:	mov    esp,0xe2437f76
  41d8ab:	jnp    0x41d87b
  41d8ad:	xchg   ebx,eax
  41d8ae:	xchg   ecx,eax
  41d8af:	shr    DWORD PTR [edx],1
  41d8b1:	mov    ds:0x8873ff89,al
  41d8b6:	out    0xa5,al
  41d8b8:	in     al,0xbf
  41d8ba:	xchg   esp,eax
  41d8bb:	icebp  
  41d8bc:	jge    0x41d907
  41d8be:	scas   al,BYTE PTR es:[edi]
  41d8bf:	mov    esp,0xf618d45a
  41d8c4:	ja     0x41d8a1
  41d8c6:	mov    ebx,0x3eb5c3a
  41d8cb:	mov    eax,ds:0x9da734f2
  41d8d0:	mov    ebx,0x263491f9
  41d8d5:	jns    0x41d85f
  41d8d7:	cmp    edi,DWORD PTR [esi-0x6e3adf64]
  41d8dd:	rcl    BYTE PTR [ebx+0x6d],0x65
  41d8e1:	inc    esp
  41d8e2:	jb     0x41d93c
  41d8e4:	xor    eax,0x97015d42
  41d8e9:	imul   ebp,edx,0x47
  41d8ec:	add    eax,0x76308954
  41d8f1:	push   0x94847890
  41d8f6:	(bad)  
  41d8f8:	(bad)  
  41d8f9:	or     ebx,ebp
  41d8fb:	(bad)  
  41d8fc:	jmp    0x41d896
  41d8fe:	add    cl,BYTE PTR [esi+ebp*8+0x286ce7f6]
  41d905:	leave  
  41d906:	ja     0x41d8db
  41d908:	jp     0x41d8fa
  41d90a:	je     0x41d968
  41d90c:	mov    dl,0x3d
  41d90e:	cmp    dl,bl
  41d910:	pop    ecx
  41d911:	loop   0x41d8d9
  41d913:	and    ecx,esi
  41d915:	xchg   ecx,eax
  41d916:	ins    BYTE PTR es:[edi],dx
  41d917:	mov    al,ds:0xd1e27f64
  41d91c:	push   ecx
  41d91d:	repnz pop eax
  41d91f:	aad    0xa6
  41d921:	int    0x50
  41d923:	mov    edx,0xbf42746b
  41d928:	pusha  
  41d929:	sbb    BYTE PTR [eax+ebp*8-0x1856fdf],ch
  41d930:	push   ebp
  41d931:	loop   0x41d934
  41d933:	pop    eax
  41d934:	xlat   BYTE PTR ds:[ebx]
  41d935:	cmp    BYTE PTR [edx],bl
  41d937:	inc    ebx
  41d938:	adc    cl,bh
  41d93a:	xlat   BYTE PTR ds:[ebx]
  41d93b:	adc    eax,esp
  41d93d:	shl    DWORD PTR [eax+0x13397ae2],1
  41d943:	imul   eax,DWORD PTR [ecx-0x5332a6a7],0x23
  41d94a:	xor    DWORD PTR [eax+0x24],edx
  41d94d:	xchg   ebx,eax
  41d94e:	sbb    bh,dh
  41d950:	imul   edi,ebx,0xffffffb0
  41d953:	jb     0x41d948
  41d955:	cmp    bh,BYTE PTR [ebp+0x4bc069bd]
  41d95b:	cmc    
  41d95c:	add    eax,0x2dd15c22
  41d961:	mov    eax,0xb92c776f
  41d966:	out    0xe3,eax
  41d968:	cs mov ebx,0xe0316212
  41d96e:	das    
  41d96f:	pushf  
  41d970:	push   es
  41d971:	stos   DWORD PTR es:[edi],eax
  41d972:	in     eax,0x5b
  41d974:	ins    DWORD PTR es:[edi],dx
  41d975:	test   BYTE PTR [ecx],cl
  41d977:	xor    eax,0x8c2720b4
  41d97c:	cs es mov al,0x43
  41d980:	ror    DWORD PTR [edx],cl
  41d982:	out    0x6a,eax
  41d984:	rcr    BYTE PTR fs:[ecx-0x1045d8a3],0x6a
  41d98c:	sbb    BYTE PTR [ebx+edi*8+0x23],ah
  41d990:	in     al,0x9f
  41d992:	(bad)  
  41d993:	sub    eax,0x2b80587f
  41d998:	adc    edi,DWORD PTR [ebx]
  41d99a:	and    BYTE PTR [edi],0xfc
  41d99d:	sub    dh,bh
  41d99f:	and    esp,ecx
  41d9a1:	inc    esp
  41d9a2:	outs   dx,DWORD PTR ds:[esi]
  41d9a3:	sub    al,0xe6
  41d9a5:	mov    BYTE PTR [ecx+ebp*4+0x3fe4199e],dh
  41d9ac:	inc    ecx
  41d9ad:	add    al,0xd0
  41d9af:	pop    ecx
  41d9b0:	pop    eax
  41d9b1:	dec    esp
  41d9b2:	xchg   ecx,eax
  41d9b3:	and    DWORD PTR [edx+0x7dbc164b],ebp
  41d9b9:	lock cmc 
  41d9bb:	addr16 adc edi,ebx
  41d9be:	fst    st(4)
  41d9c1:	cmp    DWORD PTR [ebx+0x3],eax
  41d9c4:	stc    
  41d9c5:	imul   esp,DWORD PTR [ebx],0x6a6115d3
  41d9cb:	dec    edi
  41d9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9cd:	dec    esi
  41d9ce:	aam    0x8c
  41d9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d1:	int    0x2b
  41d9d3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d9d5:	xor    al,0x12
  41d9d7:	xor    ebx,DWORD PTR [eax]
  41d9d9:	aaa    
  41d9da:	push   esp
  41d9db:	add    al,0x89
  41d9dd:	sub    eax,0x908ade8d
  41d9e2:	fadd   st,st(1)
  41d9e4:	inc    esp
  41d9e5:	les    ebp,FWORD PTR [ebx+0x1d]
  41d9e8:	fs mov es,WORD PTR cs:[eax-0x6]
  41d9ed:	call   0x387909ef
  41d9f2:	xchg   DWORD PTR [ecx-0x41a6970],ebx
  41d9f8:	xor    eax,0xf8481c9e
  41d9fd:	jge    0x41d9b3
  41d9ff:	adc    DWORD PTR [esi],edx
  41da01:	xchg   edi,eax
  41da02:	mov    al,0xb3
  41da04:	loop   0x41da82
  41da06:	cmp    eax,0x1a0f41b1
  41da0b:	jecxz  0x41d9e2
  41da0d:	add    ch,BYTE PTR [ecx+0x69]
  41da10:	lea    esi,[edx-0xc]
  41da13:	mov    ss,WORD PTR [edx+0x1af04178]
  41da19:	sahf   
  41da1a:	xchg   esp,eax
  41da1b:	call   0xa8a1d9ad
  41da20:	das    
  41da21:	push   0x1e
  41da23:	fldcw  WORD PTR [edx+0x6c]
  41da26:	femms  
  41da28:	jmp    0x41da5e
  41da2a:	mov    bh,0x4f
  41da2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2d:	cmp    BYTE PTR [ebp+0x3d],ch
  41da30:	in     al,0x48
  41da32:	fprem  
  41da34:	jno    0x41da25
  41da36:	mov    esi,0xc0fe418a
  41da3b:	(bad)  
  41da3c:	fst    QWORD PTR ds:0xe0cedebb
  41da42:	iret   
  41da43:	jnp    0x41da09
  41da45:	cmp    BYTE PTR [esi+0x7d1b0292],ah
  41da4b:	mov    ebp,0xc3ce5861
  41da50:	nop
  41da51:	xor    ebx,DWORD PTR ds:0x5dbebcdf
  41da57:	xor    BYTE PTR [ebx+0x2a18c27e],dl
  41da5d:	out    0x49,al
  41da5f:	add    DWORD PTR [ebx],0xffffffdf
  41da62:	shl    DWORD PTR [edx],0xc8
  41da65:	ss and eax,0xecfb1e23
  41da6b:	xchg   edi,eax
  41da6c:	mov    ebx,0xc225c5bc
  41da71:	mov    al,ds:0x5ba7f5eb
  41da76:	in     eax,dx
  41da77:	jb     0x41da6a
  41da79:	fnsave [eax]
  41da7b:	push   edx
  41da7c:	js     0x41daa0
  41da7e:	mov    ah,0xd0
  41da80:	jnp    0x41da61
  41da82:	and    ebp,DWORD PTR [esi+0x50a74251]
  41da88:	xchg   DWORD PTR [edi],ebp
  41da8a:	scas   eax,DWORD PTR es:[edi]
  41da8b:	and    dl,BYTE PTR [ecx]
  41da8d:	hlt    
  41da8e:	dec    edx
  41da8f:	lods   al,BYTE PTR ds:[esi]
  41da90:	add    edx,eax
  41da92:	cdq    
  41da93:	add    eax,0x92b47345
  41da98:	dec    edi
  41da99:	dec    edi
  41da9a:	adc    BYTE PTR [edx-0x61],bh
  41da9d:	adc    al,0xfd
  41da9f:	mov    edi,0x7e3c725
  41daa4:	jae    0x41dacf
  41daa6:	lahf   
  41daa7:	push   ebp
  41daa8:	add    BYTE PTR [edi+0x51],ah
  41daab:	xlat   BYTE PTR ds:[ebx]
  41daac:	js     0x41dab0
  41daae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daaf:	push   ebx
  41dab0:	push   eax
  41dab1:	push   ecx
  41dab2:	fsubr  st(0),st
  41dab4:	leave  
  41dab5:	dec    BYTE PTR [eax-0x6bed25d1]
  41dabb:	rol    BYTE PTR [esi-0x7b],1
  41dabe:	push   esi
  41dabf:	ror    edx,1
  41dac1:	ret    
  41dac2:	fsubr  DWORD PTR [ecx+0x627a3c6]
  41dac8:	add    DWORD PTR [eax+0x1d],ebx
  41dacb:	sbb    esi,DWORD PTR [edi-0x1a]
  41dace:	retf   
  41dacf:	test   eax,0xa2ecaaee
  41dad4:	out    dx,eax
  41dad5:	cmp    al,0xe8
  41dad7:	xchg   esi,eax
  41dad8:	fsub   st(1),st
  41dada:	inc    ebx
  41dadb:	loope  0x41dace
  41dadd:	or     bh,BYTE PTR [ebp-0x3f]
  41dae0:	xor    DWORD PTR [ecx+0x26042bfc],esp
  41dae6:	inc    edx
  41dae7:	int    0xd9
  41dae9:	sti    
  41daea:	mov    esi,0xc4ec6e2d
  41daef:	addr16 dec ecx
  41daf1:	dec    ebx
  41daf2:	aad    0xba
  41daf4:	jne    0x41db17
  41daf6:	setbe  BYTE PTR [esi+0x7e]
  41dafa:	inc    eax
  41dafb:	xchg   esi,eax
  41dafc:	xchg   esp,eax
  41dafd:	cdq    
  41dafe:	ds jb  0x41da99
  41db01:	std    
  41db02:	sahf   
  41db03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db04:	pop    edx
  41db05:	add    eax,0x24813c7f
  41db0a:	ds push eax
  41db0c:	stos   BYTE PTR es:[edi],al
  41db0d:	or     bl,bh
  41db0f:	inc    eax
  41db10:	mov    edi,eax
  41db12:	retf   0x2e65
  41db15:	cli    
  41db16:	pop    edx
  41db17:	adc    ah,dl
  41db19:	mov    al,0xd4
  41db1b:	sahf   
  41db1c:	adc    ecx,DWORD PTR [esi-0x2b]
  41db1f:	xor    ah,dl
  41db21:	jge    0x41db7d
  41db23:	out    dx,eax
  41db24:	stos   DWORD PTR es:[edi],eax
  41db25:	out    0xef,al
  41db27:	mov    al,0x4b
  41db29:	loop   0x41db86
  41db2b:	aad    0x28
  41db2d:	add    esp,DWORD PTR [esi+0x7f]
  41db30:	push   cs
  41db31:	sub    BYTE PTR [edx],0xa3
  41db34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db35:	aaa    
  41db36:	cld    
  41db37:	and    ebx,DWORD PTR [ebx+0x2e80bb50]
  41db3d:	dec    ebx
  41db3e:	ret    
  41db3f:	sbb    dl,dl
  41db41:	jae    0x41dae6
  41db43:	xchg   DWORD PTR [esi-0x15fa2a2d],eax
  41db49:	add    ch,BYTE PTR [edi+0x3]
  41db4c:	ror    BYTE PTR [edi],0x1a
  41db4f:	xchg   edx,eax
  41db50:	adc    eax,0x2e4cca83
  41db55:	cs hlt 
  41db57:	mov    WORD PTR [ecx-0x7a],?
  41db5a:	fimul  WORD PTR [edi]
  41db5c:	in     al,0x68
  41db5e:	fwait
  41db5f:	lods   al,BYTE PTR ds:[esi]
  41db60:	sub    al,ah
  41db62:	add    DWORD PTR [ebp-0x79],ecx
  41db65:	scas   al,BYTE PTR es:[edi]
  41db66:	int3   
  41db67:	sbb    esp,DWORD PTR [esi+eax*4+0x513df714]
  41db6e:	icebp  
  41db6f:	adc    eax,0x49c0c73b
  41db74:	xchg   edi,eax
  41db75:	dec    ebp
  41db76:	scas   al,BYTE PTR es:[edi]
  41db77:	xor    bh,BYTE PTR [esi+esi*2+0x4daed542]
  41db7e:	fcmovne st,st(2)
  41db80:	fs std 
  41db82:	pop    eax
  41db83:	jp     0x41db0e
  41db85:	mov    al,ds:0xd280109a
  41db8a:	loope  0x41dbf7
  41db8c:	xor    BYTE PTR [ebx+ebp*4],cl
  41db8f:	mov    al,ds:0xc29509f6
  41db94:	cmp    BYTE PTR cs:[esi+eiz*1+0x7278a95a],dl
  41db9c:	lods   al,BYTE PTR ds:[esi]
  41db9d:	stc    
  41db9e:	mov    ebx,0x6da4799e
  41dba3:	mov    eax,0xf87df8c2
  41dba8:	jecxz  0x41db82
  41dbaa:	push   ebx
  41dbab:	push   ds
  41dbac:	leave  
  41dbad:	fwait
  41dbae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbaf:	or     BYTE PTR [esi-0x25],0xbc
  41dbb3:	fnstenv [eax-0x30]
  41dbb6:	test   BYTE PTR [ebx],ah
  41dbb8:	sbb    ebx,ecx
  41dbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbbb:	fild   QWORD PTR [esp+ebx*2]
  41dbbe:	repnz std 
  41dbc0:	mov    eax,ds:0xea20bf99
  41dbc5:	(bad)  
  41dbc7:	dec    esi
  41dbc8:	jl     0x41dbc1
  41dbca:	out    dx,eax
  41dbcb:	mov    ss,WORD PTR [ebx+0x582f3a7b]
  41dbd1:	dec    esp
  41dbd2:	ret    0x6bd3
  41dbd5:	pusha  
  41dbd6:	rcl    DWORD PTR [eax+eiz*1+0x8c05493],0xa8
  41dbde:	push   esi
  41dbdf:	repnz mov BYTE PTR ss:[ebp-0x40c2e02],ch
  41dbe7:	push   eax
  41dbe8:	jne    0x41dbc2
  41dbea:	int    0x93
  41dbec:	jmp    0xc74c:0x252afcbc
  41dbf3:	in     eax,dx
  41dbf4:	cmp    DWORD PTR [ebp+0x5e628784],edx
  41dbfa:	inc    edi
  41dbfb:	adc    dh,BYTE PTR [eax]
  41dbfd:	faddp  st(0),st
  41dbff:	std    
  41dc00:	add    ah,BYTE PTR [ebp-0x44bfb73a]
  41dc06:	es jl  0x41dc54
  41dc09:	aad    0xa3
  41dc0b:	xor    dl,BYTE PTR [ebx]
  41dc0d:	add    al,0xa8
  41dc0f:	aam    0xef
  41dc11:	ret    0x1a2d
  41dc14:	int    0x92
  41dc16:	xchg   ecx,eax
  41dc17:	sbb    cl,0x39
  41dc1a:	loopne 0x41dc2c
  41dc1c:	add    eax,0xd5bb6767
  41dc21:	sbb    eax,esi
  41dc23:	mov    bl,0x8b
  41dc25:	mov    bl,0x1c
  41dc27:	int3   
  41dc28:	ds test eax,0x9a457172
  41dc2e:	dec    esp
  41dc2f:	cli    
  41dc30:	in     al,dx
  41dc31:	loop   0x41dc6d
  41dc33:	push   esp
  41dc34:	sbb    dl,BYTE PTR [ebx+0x26e280ab]
  41dc3a:	or     al,0x65
  41dc3c:	lds    eax,FWORD PTR [edx-0x22]
  41dc3f:	push   es
  41dc40:	pop    ecx
  41dc41:	mov    ecx,0x16d37480
  41dc46:	mov    ch,BYTE PTR [esi+0xde0080f]
  41dc4c:	inc    edi
  41dc4d:	or     eax,0x4a3b12a8
  41dc52:	(bad)  
  41dc53:	test   al,0xc6
  41dc55:	push   edx
  41dc56:	dec    esp
  41dc57:	stos   DWORD PTR es:[edi],eax
  41dc58:	sub    DWORD PTR [ecx+0x53],esi
  41dc5b:	mov    esp,0xcfb11298
  41dc60:	dec    esp
  41dc61:	and    al,0x13
  41dc63:	cwde   
  41dc64:	xchg   edx,eax
  41dc65:	aam    0x55
  41dc67:	sbb    DWORD PTR [esi-0x44ed53e1],eax
  41dc6d:	js     0x41dce3
  41dc6f:	xchg   esi,eax
  41dc70:	adc    BYTE PTR [edi-0x2e],bl
  41dc73:	cmp    bh,BYTE PTR [ecx+0x45]
  41dc76:	pop    edi
  41dc77:	pop    edi
  41dc78:	adc    BYTE PTR [ebp-0x44d0c3a2],ch
  41dc7e:	inc    esi
  41dc7f:	stc    
  41dc80:	fsin   
  41dc82:	push   ebp
  41dc83:	jg     0x41dcec
  41dc85:	in     al,0x75
  41dc87:	loope  0x41dc52
  41dc89:	retf   0xb9fb
  41dc8c:	loope  0x41dcb6
  41dc8e:	mov    esp,?
  41dc90:	aas    
  41dc91:	mov    ds:0xe6c58247,eax
  41dc96:	xchg   ebp,eax
  41dc97:	mov    ch,0x88
  41dc99:	cmp    eax,0x5b31ce58
  41dc9e:	pop    esp
  41dc9f:	pop    esp
  41dca0:	call   0x7a03:0x5a8e1b4c
  41dca7:	imul   ebp,ecx,0x80e7fc78
  41dcad:	jecxz  0x41dc9f
  41dcaf:	repnz and eax,0x50fd787d
  41dcb5:	cld    
  41dcb6:	enter  0x6540,0x37
  41dcba:	push   ecx
  41dcbb:	add    DWORD PTR [ecx-0x27de7a8d],edx
  41dcc1:	push   0xffffff93
  41dcc3:	jmp    0x4736:0xc0df1bf7
  41dcca:	jg     0x41dd29
  41dccc:	inc    esp
  41dccd:	aas    
  41dcce:	xor    DWORD PTR [esi-0x35781660],0x54
  41dcd5:	test   eax,0x9f9f5df7
  41dcda:	gs call 0xd4c2:0x4ab3920d
  41dce2:	fcom   QWORD PTR [edx]
  41dce4:	mov    ds:0x4e45e147,eax
  41dce9:	sub    al,0xc4
  41dceb:	mov    al,0x1f
  41dced:	out    0x7b,al
  41dcef:	lods   eax,DWORD PTR ds:[esi]
  41dcf0:	inc    ecx
  41dcf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcf2:	lock inc ecx
  41dcf4:	mov    esi,0xe686d3ed
  41dcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfa:	cmp    bh,0xac
  41dcfd:	(bad)  
  41dcfe:	push   ebx
  41dcff:	ins    BYTE PTR es:[edi],dx
  41dd00:	xchg   edx,eax
  41dd01:	les    edx,FWORD PTR [esi+ebx*8+0xd14d53d]
  41dd08:	inc    ebp
  41dd09:	cld    
  41dd0a:	mov    ds:0x9e81e86f,eax
  41dd0f:	cmp    bh,ah
  41dd11:	pop    es
  41dd12:	push   ds
  41dd13:	mov    ds,WORD PTR [edx-0x2f]
  41dd16:	ret    0xceff
  41dd19:	push   edx
  41dd1a:	pop    esp
  41dd1b:	stos   BYTE PTR es:[edi],al
  41dd1c:	aas    
  41dd1d:	sub    bl,dh
  41dd1f:	mov    dh,0x77
  41dd21:	fwait
  41dd22:	jo     0x41dd07
  41dd24:	shl    esp,0x54
  41dd27:	sbb    eax,0x153647f3
  41dd2c:	mov    ch,BYTE PTR [edi+0x6b]
  41dd2f:	mov    ebp,0xb5f0613d
  41dd34:	add    ah,cl
  41dd36:	mov    eax,DWORD PTR [esi-0x5]
  41dd39:	inc    eax
  41dd3a:	mov    ah,0x43
  41dd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd3d:	stos   BYTE PTR es:[edi],al
  41dd3e:	jecxz  0x41dcd9
  41dd40:	inc    edi
  41dd41:	xor    eax,0xba6ccf45
  41dd46:	sbb    ecx,DWORD PTR [ebx]
  41dd48:	stos   DWORD PTR es:[edi],eax
  41dd49:	cmp    cl,BYTE PTR [ecx]
  41dd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd4c:	gs inc esi
  41dd4e:	jno    0x41dd73
  41dd50:	jmp    FWORD PTR [esi]
  41dd52:	loopne 0x41dd4b
  41dd54:	(bad)  
  41dd55:	dec    ebp
  41dd57:	add    bh,BYTE PTR [eax]
  41dd59:	fistp  WORD PTR [edi+0x7a]
  41dd5c:	test   BYTE PTR [eax+0x65],cl
  41dd5f:	pop    edx
  41dd60:	push   ecx
  41dd61:	dec    ebx
  41dd62:	jae    0x41dcf8
  41dd64:	mov    edx,0x6a75e2cd
  41dd69:	ret    
  41dd6a:	fmul   st(6),st
  41dd6c:	add    BYTE PTR [ecx+0x5b],cl
  41dd6f:	cmp    esi,edi
  41dd71:	cmp    eax,0x69d54bc9
  41dd76:	mov    esp,0x72d646b2
  41dd7b:	rol    BYTE PTR [esi],cl
  41dd7d:	push   0x9e279cc
  41dd82:	jns    0x41dd3c
  41dd84:	add    esp,DWORD PTR [edx+0x21]
  41dd87:	and    al,0x4c
  41dd89:	in     eax,0xa8
  41dd8b:	xchg   esi,eax
  41dd8c:	add    edx,DWORD PTR [edx+0x18]
  41dd8f:	and    BYTE PTR [ebp+0x25],0xe2
  41dd93:	aaa    
  41dd94:	sub    edi,ebp
  41dd96:	cdq    
  41dd97:	mov    ecx,0xbf59ceb3
  41dd9c:	outs   dx,BYTE PTR ds:[esi]
  41dd9d:	jp     0x41dd4f
  41dd9f:	dec    ebx
  41dda0:	pop    esp
  41dda1:	out    0x4e,al
  41dda3:	cmp    dh,BYTE PTR [eax-0x1f6dd8f7]
  41dda9:	push   es
  41ddaa:	dec    edx
  41ddab:	mov    esi,DWORD PTR [edx]
  41ddad:	xchg   ebp,eax
  41ddae:	push   ecx
  41ddaf:	mov    edx,0xfd412aac
  41ddb4:	retf   
  41ddb5:	xor    BYTE PTR [ecx-0x490eb0c9],0xf9
  41ddbc:	pop    esp
  41ddbd:	xchg   esi,eax
  41ddbe:	scas   al,BYTE PTR es:[edi]
  41ddbf:	adc    ch,cl
  41ddc1:	push   esi
  41ddc2:	clc    
  41ddc3:	stos   BYTE PTR es:[edi],al
  41ddc4:	adc    DWORD PTR cs:[esi+eiz*1-0x11d5cc3e],ebp
  41ddcc:	icebp  
  41ddcd:	cmp    DWORD PTR [edi+esi*8+0x49],eax
  41ddd1:	mov    WORD PTR [ecx+0x7b2c9f95],fs
  41ddd7:	idiv   DWORD PTR [eax-0x80]
  41ddda:	mov    cs,WORD PTR ds:0xbc4b9fff
  41dde0:	stos   BYTE PTR es:[edi],al
  41dde1:	out    0x47,eax
  41dde3:	sub    BYTE PTR [ecx+0x2d89a296],ah
  41dde9:	out    dx,al
  41ddea:	mov    ah,BYTE PTR [eax]
  41ddec:	(bad)  
  41dded:	cli    
  41ddee:	sbb    al,0xce
  41ddf0:	xchg   ebx,eax
  41ddf1:	test   BYTE PTR [edi],ah
  41ddf3:	sub    bl,cl
  41ddf5:	mov    ch,0xe8
  41ddf7:	xor    BYTE PTR [edx+0x4ee445cf],dh
  41ddfd:	inc    ecx
  41ddfe:	mov    eax,0x757b4d61
  41de03:	sar    DWORD PTR [esi+0x4f],cl
  41de06:	sbb    eax,0x6c5f916c
  41de0b:	mov    ch,0x3e
  41de0d:	sub    sp,WORD PTR cs:[esi]
  41de11:	(bad)  
  41de12:	loopne 0x41de41
  41de14:	or     eax,0x9bc68e67
  41de19:	imul   esi,DWORD PTR ds:[ecx],0x3c
  41de1d:	ins    DWORD PTR es:[edi],dx
  41de1e:	repz loope 0x41de3a
  41de21:	mov    fs,WORD PTR [esi+eax*2]
  41de24:	into   
  41de25:	dec    edx
  41de26:	mov    edx,0xa708f93e
  41de2b:	ins    BYTE PTR es:[edi],dx
  41de2c:	rol    BYTE PTR [ebx+0x24],0x66
  41de30:	dec    BYTE PTR [esi-0x4b]
  41de33:	out    0x1c,eax
  41de35:	push   cs
  41de36:	inc    edx
  41de37:	(bad)  
  41de39:	test   al,0xb3
  41de3b:	jmp    0x41dea6
  41de3d:	jae    0x41de3e
  41de3f:	push   edx
  41de40:	rol    DWORD PTR [edi],1
  41de42:	xor    edx,esi
  41de44:	push   0xd9628865
  41de49:	fistp  WORD PTR [edi]
  41de4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de4c:	je     0x41de24
  41de4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de4f:	or     al,0xbe
  41de51:	sti    
  41de52:	adc    BYTE PTR [ebx+0x2f],0x69
  41de56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de57:	xchg   ebx,eax
  41de58:	sub    eax,0x79
  41de5b:	mul    BYTE PTR [ebx-0x72]
  41de5e:	mov    eax,ds:0x4e0f5f2
  41de63:	mov    eax,ds:0xa2ec5406
  41de68:	ja     0x41ded4
  41de6a:	sub    eax,0x7eecdaea
  41de6f:	test   ch,dh
  41de71:	jno    0x41dec0
  41de73:	jmp    0xa5c0:0xfb7386eb
  41de7a:	mov    edx,0xa41abd62
  41de7f:	and    edx,ecx
  41de81:	xchg   esi,eax
  41de82:	add    ch,cl
  41de84:	mov    ds:0x60bcbaca,al
  41de89:	popf   
  41de8a:	xchg   edx,eax
  41de8b:	push   ebx
  41de8c:	jge    0x41de3a
  41de8e:	pop    edx
  41de8f:	je     0x41dea8
  41de91:	jecxz  0x41dea4
  41de93:	test   edi,ecx
  41de95:	mov    dh,0x5e
  41de97:	fstp   DWORD PTR [ebx-0x5e75036a]
  41de9d:	repnz repnz out 0xae,al
  41dea1:	dec    ebp
  41dea2:	mov    ?,WORD PTR [edx]
  41dea4:	nop
  41dea5:	inc    ebp
  41dea6:	xor    DWORD PTR [esi],ebp
  41dea8:	sub    DWORD PTR [ebx+0x262ab29c],esi
  41deae:	outs   dx,BYTE PTR ds:[esi]
  41deaf:	stos   DWORD PTR es:[edi],eax
  41deb0:	jle    0x41deb2
  41deb2:	adc    DWORD PTR [edi+0xbee80da],ecx
  41deb8:	adc    al,0xf0
  41deba:	sub    cl,BYTE PTR [eax-0x3d422f5a]
  41dec0:	adc    eax,0x1d9afb76
  41dec5:	outs   dx,DWORD PTR ds:[esi]
  41dec6:	scas   al,BYTE PTR es:[edi]
  41dec7:	bsr    esp,DWORD PTR [edi+0x1b421892]
  41dece:	pusha  
  41decf:	add    eax,0xab88adb5
  41ded4:	add    ch,BYTE PTR [ebp-0x1362452b]
  41deda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dedb:	loop   0x41ded3
  41dedd:	jmp    0x41decf
  41dedf:	pop    ecx
  41dee0:	in     eax,dx
  41dee1:	dec    edx
  41dee2:	sti    
  41dee3:	cmp    esi,edi
  41dee5:	ins    BYTE PTR es:[edi],dx
  41dee6:	(bad)  
  41dee7:	dec    ebp
  41dee8:	lods   al,BYTE PTR ds:[esi]
  41dee9:	loop   0x41df5f
  41deeb:	jmp    0x41df30
  41deed:	and    al,0xb3
  41deef:	sbb    al,0xe8
  41def1:	loopne 0x41de85
  41def3:	stos   BYTE PTR es:[edi],al
  41def4:	xor    DWORD PTR cs:[edx],esi
  41def7:	cli    
  41def8:	mov    BYTE PTR [eax],cl
  41defa:	mov    dl,0x8b
  41defc:	(bad)  
  41defd:	sub    al,0x4
  41deff:	mov    ecx,0xbab24bed
  41df04:	adc    BYTE PTR [edi+0x7f],cl
  41df07:	xchg   edi,eax
  41df08:	or     al,dh
  41df0a:	fcom   DWORD PTR [esi-0x3047813]
  41df10:	test   DWORD PTR [ebp+0x97e8c30],0x164869bc
  41df1a:	jle    0x41deef
  41df1c:	add    bh,BYTE PTR [edx+0x2e]
  41df1f:	imul   ecx,DWORD PTR [edx-0x2c],0x71af2570
  41df26:	test   BYTE PTR ds:0x5005343a,0x4b
  41df2d:	cmp    eax,0xc7a6e8b6
  41df32:	adc    edi,0xcf88d89
  41df38:	not    DWORD PTR [ebp+0x10]
  41df3b:	push   ds
  41df3c:	pop    ebp
  41df3d:	adc    dl,ah
  41df3f:	enter  0xd75d,0x49
  41df43:	cdq    
  41df44:	iret   
  41df45:	jg     0x41df41
  41df47:	pop    es
  41df48:	add    dh,dl
  41df4a:	scas   al,BYTE PTR es:[edi]
  41df4b:	stos   DWORD PTR es:[edi],eax
  41df4c:	mov    eax,0xd683dbef
  41df51:	sbb    ebx,DWORD PTR [eax+0x4a4fe109]
  41df57:	(bad)  
  41df58:	mov    edx,0x6ec4e1d0
  41df5d:	push   esp
  41df5e:	push   0xe47cabc6
  41df63:	bound  edi,QWORD PTR [esi]
  41df65:	ins    DWORD PTR es:[edi],dx
  41df66:	out    dx,eax
  41df67:	mov    eax,0x9fbd5910
  41df6c:	lods   eax,DWORD PTR ds:[esi]
  41df6d:	sbb    edi,DWORD PTR [ebx+0x3dba0dd6]
  41df73:	jp     0x41df56
  41df75:	pop    esi
  41df76:	dec    esp
  41df77:	adc    DWORD PTR [edx],ebp
  41df79:	cmp    ecx,DWORD PTR [ebp-0x14]
  41df7c:	jl     0x41df2c
  41df7e:	mov    ds:0xffd3d297,eax
  41df83:	jb     0x41df22
  41df85:	push   ebx
  41df86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df87:	fadd   QWORD PTR [esi]
  41df89:	loope  0x41df1c
  41df8b:	scas   al,BYTE PTR es:[edi]
  41df8c:	pop    ds
  41df8d:	test   ebp,edx
  41df8f:	pop    es
  41df90:	mov    esi,0x69173d15
  41df95:	nop
  41df96:	xchg   ebp,eax
  41df97:	inc    ebp
  41df98:	in     eax,0x32
  41df9a:	mov    al,ds:0x25498bf8
  41df9f:	xchg   BYTE PTR [edx+0x34],bl
  41dfa2:	pop    ebp
  41dfa3:	ins    BYTE PTR es:[edi],dx
  41dfa4:	or     al,0x8e
  41dfa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa7:	das    
  41dfa8:	sub    BYTE PTR [eax-0x3fc9b10d],0x49
  41dfaf:	jb     0x41dfa7
  41dfb1:	std    
  41dfb2:	rol    BYTE PTR [ecx+0x4d568fcc],cl
  41dfb8:	test   dl,dh
  41dfba:	fdivr  QWORD PTR [ebx-0x74]
  41dfbd:	popa   
  41dfbe:	retf   
  41dfbf:	pop    ds
  41dfc0:	cmp    dl,BYTE PTR [edx+0x2a549f50]
  41dfc6:	ds cmp eax,0xdea42dd9
  41dfcc:	cmp    dh,BYTE PTR [edi-0x3b]
  41dfcf:	(bad)  
  41dfd0:	je     0x41dfea
  41dfd2:	xor    BYTE PTR [ecx+0x4d8b2aa5],0x1e
  41dfd9:	scas   al,BYTE PTR es:[edi]
  41dfda:	std    
  41dfdb:	shl    esp,1
  41dfdd:	mov    dl,0x23
  41dfdf:	mov    ds:0x3f3c0ad5,eax
  41dfe4:	in     al,0xed
  41dfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe7:	jae    0x41dfba
  41dfe9:	jns    0x41e05c
  41dfeb:	ret    
  41dfec:	and    DWORD PTR [edx+0x2c1f6bd0],ebp
  41dff2:	cmp    eax,0x9ffbbb38
  41dff7:	jmp    0x65e2ef8b
  41dffc:	sbb    BYTE PTR [edx-0x3c],ch
  41dfff:	outs   dx,BYTE PTR ds:[esi]
  41e000:	sub    eax,0x8373b049
  41e005:	mov    esi,0x42628eb9
  41e00a:	add    ebx,ebp
  41e00c:	addr16 sub al,0xab
  41e00f:	pop    es
  41e010:	jp     0x41e018
  41e012:	hlt    
  41e013:	dec    edx
  41e014:	push   esi
  41e015:	xchg   esp,eax
  41e016:	jae    0x41dfdc
  41e018:	adc    bh,BYTE PTR [ebp+0x2b8c0c49]
  41e01e:	adc    BYTE PTR [eax-0x3d053d8f],cl
  41e024:	or     al,0x62
  41e026:	(bad)  
  41e027:	stos   BYTE PTR es:[edi],al
  41e028:	jns    0x41dfbc
  41e02a:	pusha  
  41e02b:	(bad)  
  41e02c:	dec    esp
  41e02d:	inc    ebp
  41e02e:	cmp    al,0x82
  41e030:	xor    eax,0x519dc9b9
  41e035:	out    0xc5,eax
  41e037:	arpl   ax,dx
  41e039:	ins    DWORD PTR es:[edi],dx
  41e03a:	sub    BYTE PTR [ebp-0x5f],al
  41e03d:	xor    al,BYTE PTR [ecx-0x503d23d0]
  41e043:	retf   0xf75a
  41e046:	fcmovbe st,st(5)
  41e048:	xlat   BYTE PTR ds:[ebx]
  41e049:	sub    DWORD PTR [esi-0x4aad1df5],eax
  41e04f:	cwde   
  41e050:	in     eax,dx
  41e051:	test   al,0x65
  41e053:	add    eax,0x77a0de4c
  41e058:	rol    BYTE PTR [edi+0x57],0xd0
  41e05c:	dec    esp
  41e05d:	fcom   QWORD PTR [ebx-0x75]
  41e060:	mov    ds,WORD PTR ds:0x6a4d2671
  41e066:	iret   
  41e067:	les    ebp,FWORD PTR [ebp+0x6d40e33e]
  41e06d:	(bad)  
  41e06e:	stc    
  41e06f:	idiv   DWORD PTR [ecx]
  41e071:	aas    
  41e072:	aas    
  41e073:	mov    edi,DWORD PTR [edi]
  41e075:	sahf   
  41e076:	jns    0x41e022
  41e078:	je     0x41e0aa
  41e07a:	jp     0x41e02a
  41e07c:	mov    al,ds:0x150bb328
  41e081:	scas   eax,DWORD PTR es:[edi]
  41e082:	sub    ebx,eax
  41e084:	in     al,dx
  41e085:	mov    ds:0x91792ebb,eax
  41e08a:	lea    ebp,[ebx]
  41e08c:	fcmove st,st(2)
  41e08e:	arpl   sp,bp
  41e090:	jo     0x41e09a
  41e092:	(bad)  
  41e093:	loope  0x41e104
  41e095:	scas   al,BYTE PTR es:[edi]
  41e096:	pop    ss
  41e097:	add    bl,ch
  41e099:	sbb    BYTE PTR [eax],ah
  41e09b:	dec    edi
  41e09c:	add    eax,0x4ad9a170
  41e0a1:	repz fsub DWORD PTR [esi-0x4f2dba83]
  41e0a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0a9:	add    al,0xf
  41e0ab:	sbb    eax,0xf81039a2
  41e0b0:	or     eax,0x92bc4520
  41e0b5:	into   
  41e0b6:	adc    eax,0xd54da2d0
  41e0bb:	mov    cl,0xf3
  41e0bd:	dec    esi
  41e0be:	xchg   BYTE PTR [ebx],al
  41e0c0:	cmp    BYTE PTR [ebx-0x4e0105ee],bl
  41e0c6:	call   DWORD PTR [edx]
  41e0c8:	mov    eax,0xf21920e7
  41e0cd:	fcmovnbe st,st(2)
  41e0cf:	outs   dx,BYTE PTR ds:[esi]
  41e0d0:	jnp    0x41e0ef
  41e0d2:	jg     0x41e0ab
  41e0d4:	outs   dx,BYTE PTR ds:[esi]
  41e0d5:	lods   eax,DWORD PTR ds:[esi]
  41e0d6:	fistp  DWORD PTR [ebx+ebx*8+0x7ee6f879]
  41e0dd:	jl     0x41e0ad
  41e0df:	out    dx,eax
  41e0e0:	leave  
  41e0e1:	test   al,0x5b
  41e0e3:	stc    
  41e0e4:	sar    BYTE PTR [edx],0x5d
  41e0e7:	fcomp  DWORD PTR [ecx-0x6e0bd8f5]
  41e0ed:	std    
  41e0ee:	cmp    DWORD PTR [ecx-0x18],edx
  41e0f1:	jnp    0x41e0f1
  41e0f3:	mov    ecx,0x4ce16538
  41e0f8:	scas   eax,DWORD PTR es:[edi]
  41e0f9:	pop    edi
  41e0fa:	and    DWORD PTR [edi-0x6e],ebp
  41e0fd:	adc    cl,0xb6
  41e100:	aam    0x5
  41e102:	shl    BYTE PTR [ecx-0x40],1
  41e105:	in     eax,0x2b
  41e107:	and    eax,0xbacb7a9a
  41e10c:	ins    BYTE PTR es:[edi],dx
  41e10d:	cs iret 
  41e10f:	cwde   
  41e110:	pop    ss
  41e111:	cmp    DWORD PTR [ecx],esi
  41e113:	mov    al,0x8
  41e115:	dec    edx
  41e116:	call   0x8bfa:0x89e22d6a
  41e11d:	pop    esp
  41e11e:	push   0x49e1522e
  41e123:	rcr    ecx,cl
  41e125:	pop    edi
  41e126:	xor    BYTE PTR [ebp-0x4c10f804],0xb2
  41e12d:	cwde   
  41e12e:	mov    WORD PTR [ebp*4-0x68e8c229],fs
  41e135:	or     al,0x32
  41e137:	xchg   ecx,eax
  41e138:	xchg   esi,eax
  41e139:	sbb    DWORD PTR [edx+0x12c425f4],0x9df62ec
  41e143:	push   ds
  41e144:	je     0x41e1a9
  41e146:	adc    BYTE PTR [edi+0x3efe9ab1],dh
  41e14c:	mov    ds:0x537fad40,eax
  41e151:	dec    esp
  41e152:	mov    ah,0x30
  41e154:	aad    0xeb
  41e156:	sbb    al,0x9c
  41e158:	adc    dl,0x39
  41e15b:	push   0xc5f9d328
  41e160:	cmp    eax,0xa79771ce
  41e165:	push   cs
  41e166:	fs (bad) 
  41e169:	cdq    
  41e16a:	cmp    DWORD PTR [ebx-0x70d24c91],ecx
  41e170:	xor    dl,BYTE PTR [eax]
  41e172:	jl     0x41e1d7
  41e174:	outs   dx,DWORD PTR ds:[esi]
  41e175:	ja     0x41e19c
  41e177:	and    al,0x8a
  41e179:	inc    ebp
  41e17a:	imul   DWORD PTR [ebp+0x2d]
  41e17d:	or     DWORD PTR [esi],edx
  41e17f:	push   eax
  41e180:	or     eax,0x8750d4ec
  41e185:	dec    eax
  41e186:	jg     0x41e176
  41e188:	pop    eax
  41e189:	mov    esp,0x7616af46
  41e18e:	cmp    ecx,DWORD PTR [ecx+0x3]
  41e191:	loop   0x41e17f
  41e193:	push   ss
  41e194:	das    
  41e195:	or     eax,0x2639b301
  41e19a:	stos   BYTE PTR es:[edi],al
  41e19b:	fwait
  41e19c:	pop    esp
  41e19d:	arpl   WORD PTR [ebx-0x6e],sp
  41e1a0:	mov    bh,BYTE PTR [eax-0x20974d5f]
  41e1a6:	sub    bh,BYTE PTR [ebx-0x7c15a860]
  41e1ac:	mov    bl,0x0
  41e1ae:	pop    ecx
  41e1af:	scas   eax,DWORD PTR es:[edi]
  41e1b0:	push   ecx
  41e1b1:	in     al,dx
  41e1b2:	fs aas 
  41e1b4:	sar    BYTE PTR [ebp-0x50d0313c],0x18
  41e1bb:	and    ah,BYTE PTR [eax-0x22]
  41e1be:	dec    edi
  41e1bf:	jnp    0x41e21d
  41e1c1:	hlt    
  41e1c2:	xor    BYTE PTR [edi+0x709b698e],dl
  41e1c8:	sbb    BYTE PTR [esi],ah
  41e1ca:	sub    eax,0x74393c9a
  41e1cf:	xor    eax,0x25bca2cc
  41e1d4:	xor    cl,bh
  41e1d6:	nop
  41e1d7:	js     0x41e173
  41e1d9:	inc    edx
  41e1da:	(bad)  
  41e1db:	push   ss
  41e1dc:	pop    ebp
  41e1dd:	dec    edx
  41e1de:	jae    0x41e217
  41e1e0:	adc    al,0xc6
  41e1e2:	cwde   
  41e1e3:	xchg   ecx,eax
  41e1e4:	mov    dh,0x11
  41e1e6:	(bad)
  41e1e9:	outs   dx,DWORD PTR ds:[esi]
  41e1ea:	mul    BYTE PTR [ebp-0x2c]
  41e1ed:	int    0x74
  41e1ef:	pusha  
  41e1f0:	add    BYTE PTR [ebx+esi*2+0x1],0x50
  41e1f5:	scas   al,BYTE PTR es:[edi]
  41e1f6:	xor    esp,DWORD PTR [eax]
  41e1f8:	ins    DWORD PTR es:[edi],dx
  41e1f9:	pop    edx
  41e1fa:	sub    esp,DWORD PTR [ebx-0x22]
  41e1fd:	outs   dx,DWORD PTR ds:[esi]
  41e1fe:	mov    dh,0x31
  41e200:	aas    
  41e201:	outs   dx,BYTE PTR ds:[esi]
  41e202:	dec    esp
  41e203:	and    DWORD PTR [ecx+eax*4-0x6d],edx
  41e207:	cmp    dl,BYTE PTR [esi-0x4b8aae9b]
  41e20d:	lods   al,BYTE PTR es:[esi]
  41e20f:	out    dx,al
  41e210:	outs   dx,DWORD PTR ds:[esi]
  41e211:	loop   0x41e1c4
  41e213:	(bad)  
  41e214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e215:	lock je 0x41e24f
  41e218:	add    BYTE PTR [ecx],bl
  41e21a:	pop    edx
  41e21b:	adc    dh,BYTE PTR [edi-0x1]
  41e21e:	test   BYTE PTR [edi+0x51],ah
  41e221:	cmp    ecx,DWORD PTR [edi]
  41e223:	mov    dl,0xfe
  41e225:	pop    edi
  41e226:	mov    eax,0x5196fa3
  41e22b:	outs   dx,BYTE PTR ds:[esi]
  41e22c:	ret    0x3dcc
  41e22f:	nop    DWORD PTR ds:0x7d4eb7a0
  41e236:	hlt    
  41e237:	stc    
  41e238:	xchg   edx,eax
  41e239:	sbb    al,0x6
  41e23b:	and    al,0xa6
  41e23d:	and    al,0x38
  41e23f:	mov    dh,0xea
  41e241:	and    DWORD PTR ds:0xf5537072,eax
  41e247:	lea    edi,[edx-0x3ffde20f]
  41e24d:	cdq    
  41e24e:	xchg   ebx,eax
  41e24f:	push   esp
  41e250:	xchg   ebx,eax
  41e251:	or     BYTE PTR [ebx],0x15
  41e254:	xchg   ecx,eax
  41e255:	repz mov ecx,DWORD PTR [ebx-0x618f0cbf]
  41e25c:	popa   
  41e25d:	lods   al,BYTE PTR ds:[esi]
  41e25e:	push   edx
  41e25f:	xor    BYTE PTR ds:0x4ed33365,0xad
  41e266:	sahf   
  41e267:	xlat   BYTE PTR ds:[ebx]
  41e268:	outs   dx,BYTE PTR ds:[esi]
  41e269:	cmp    eax,0x8fb57305
  41e26e:	jbe    0x41e211
  41e270:	push   cs
  41e271:	addr16 dec ebx
  41e273:	jne    0x41e2c2
  41e275:	fldenv [eax]
  41e277:	clc    
  41e278:	outs   dx,BYTE PTR ds:[esi]
  41e279:	inc    eax
  41e27a:	mov    ds:0x428cce01,al
  41e27f:	or     DWORD PTR [ecx],esi
  41e281:	test   BYTE PTR [esi+0x2a7c52a],bl
  41e287:	ret    0x80b5
  41e28a:	rol    BYTE PTR [edx*8+0x16b055f9],cl
  41e291:	xor    ebp,DWORD PTR [edi-0x6]
  41e294:	in     al,dx
  41e295:	stos   DWORD PTR es:[edi],eax
  41e296:	(bad)  
  41e298:	imul   ebx,DWORD PTR [ebp-0x34],0x28b92894
  41e29f:	cmc    
  41e2a0:	lods   eax,DWORD PTR ds:[esi]
  41e2a1:	push   0xffffff9e
  41e2a3:	inc    edx
  41e2a4:	pop    esi
  41e2a5:	mov    ebx,0xc7376b47
  41e2aa:	rcl    BYTE PTR [eax-0x25c7ca31],0x4b
  41e2b1:	push   ecx
  41e2b2:	add    ebp,ebp
  41e2b4:	mov    bl,0xad
  41e2b6:	jno    0x41e2bb
  41e2b8:	fdiv   QWORD PTR [ebp+0x7fc99572]
  41e2be:	inc    ecx
  41e2bf:	cld    
  41e2c0:	xchg   ebx,ecx
  41e2c2:	ret    0xaa86
  41e2c5:	and    BYTE PTR [esi+0x2a8e3db5],0x26
  41e2cc:	cld    
  41e2cd:	dec    ebp
  41e2ce:	sbb    ecx,DWORD PTR [esi+0x1f646285]
  41e2d4:	or     ah,bh
  41e2d6:	in     eax,0x45
  41e2d8:	xlat   BYTE PTR ds:[ebx]
  41e2d9:	ds inc ecx
  41e2db:	adc    esp,edx
  41e2dd:	sbb    al,0x51
  41e2df:	sbb    eax,0xc78d444e
  41e2e4:	iret   
  41e2e5:	hlt    
  41e2e6:	repnz mov WORD PTR [edx+0x538aaff8],gs
  41e2ed:	mov    eax,0x855bc7f6
  41e2f2:	xlat   BYTE PTR ds:[ebx]
  41e2f3:	cmp    bh,bh
  41e2f5:	cdq    
  41e2f6:	mov    cl,0x7f
  41e2f8:	sbb    bh,BYTE PTR [ebx+edx*4-0x33b311a]
  41e2ff:	stos   DWORD PTR es:[edi],eax
  41e300:	(bad)  
  41e301:	mov    ch,0x15
  41e303:	jecxz  0x41e36c
  41e305:	adc    DWORD PTR [ebx-0x132c8667],0x5f
  41e30c:	icebp  
  41e30d:	out    dx,eax
  41e30e:	jbe    0x41e318
  41e310:	aad    0x2b
  41e312:	jecxz  0x41e2f2
  41e314:	pop    esp
  41e315:	outs   dx,DWORD PTR ds:[esi]
  41e316:	ins    DWORD PTR es:[edi],dx
  41e317:	ror    DWORD PTR [edx+0xf],0x7d
  41e31b:	rol    edx,1
  41e31d:	fild   QWORD PTR [edx-0x22]
  41e320:	mov    dl,0xfa
  41e322:	push   edx
  41e323:	jne    0x41e346
  41e325:	jo     0x41e2e5
  41e327:	(bad)  
  41e328:	es scas al,BYTE PTR es:[edi]
  41e32a:	xor    ch,BYTE PTR [eax+0x15932aca]
  41e330:	cdq    
  41e331:	div    DWORD PTR [edx+0x5443dfb1]
  41e337:	pop    ss
  41e338:	stos   BYTE PTR es:[edi],al
  41e339:	lods   eax,DWORD PTR ds:[esi]
  41e33a:	sbb    cl,BYTE PTR [ebp-0x43f569b0]
  41e340:	repz sub eax,0x88f0640b
  41e346:	js     0x41e374
  41e348:	adc    edi,ebp
  41e34a:	(bad)  
  41e34b:	dec    esp
  41e34c:	adc    ch,BYTE PTR [esi-0x7bfaa552]
  41e352:	test   DWORD PTR [edi+0x20],edi
  41e355:	retf   
  41e356:	popa   
  41e357:	fcomp  DWORD PTR [eax+0x2c]
  41e35a:	sbb    dh,bl
  41e35c:	iret   
  41e35d:	and    esp,DWORD PTR [esp+edi*4-0x50]
  41e361:	dec    esi
  41e362:	ds xor eax,0x106f2e4a
  41e368:	ficom  DWORD PTR [ebp+0x43d96d75]
  41e36e:	repnz sub al,BYTE PTR [eax-0x35]
  41e372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e373:	adc    eax,0xfed681ac
  41e378:	push   0xfffffffd
  41e37a:	fdiv   QWORD PTR [ebx+0x207a8a8d]
  41e380:	mov    BYTE PTR [esi-0x31],0x6d
  41e384:	pop    ecx
  41e385:	push   ebp
  41e386:	lock lods eax,DWORD PTR ds:[esi]
  41e388:	dec    esi
  41e389:	scas   al,BYTE PTR es:[edi]
  41e38a:	out    0x62,eax
  41e38c:	iret   
  41e38d:	dec    edx
  41e38e:	mov    bh,0x2a
  41e390:	xchg   ebx,eax
  41e391:	shl    DWORD PTR [ecx-0x507d5c3e],1
  41e397:	push   ecx
  41e398:	jns    0x41e388
  41e39a:	mov    al,0x6
  41e39c:	mov    edx,0x4c18a3c6
  41e3a1:	mov    bh,0x74
  41e3a3:	mov    esi,ebx
  41e3a5:	bound  edx,QWORD PTR ss:[ebx+0x46266d02]
  41e3ac:	or     al,0x8c
  41e3ae:	mov    BYTE PTR [ebx-0xee98cc],bh
  41e3b4:	test   BYTE PTR [edx],bl
  41e3b6:	cmp    al,ch
  41e3b8:	into   
  41e3b9:	jns    0x41e3a8
  41e3bb:	cs stos DWORD PTR es:[edi],eax
  41e3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3bf:	cmp    edi,ebp
  41e3c1:	fdiv   DWORD PTR [esi+0x295b75a8]
  41e3c7:	repnz loop 0x41e3af
  41e3ca:	arpl   WORD PTR [esp+edi*8+0x292a26d1],cx
  41e3d1:	mov    edi,0x3b823721
  41e3d6:	ret    0x82d7
  41e3d9:	add    DWORD PTR [eax+0x4b12e8c1],ebx
  41e3df:	lods   al,BYTE PTR ds:[esi]
  41e3e0:	push   edx
  41e3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3e2:	sbb    BYTE PTR [ecx-0x1f],cl
  41e3e5:	lock push ss
  41e3e7:	repz dec edi
  41e3e9:	inc    ebx
  41e3ea:	std    
  41e3eb:	or     bl,dl
  41e3ed:	push   ss
  41e3ee:	leave  
  41e3ef:	sub    bh,bh
  41e3f1:	std    
  41e3f2:	iret   
  41e3f3:	dec    ecx
  41e3f4:	fdivr  DWORD PTR [eax+0x73]
  41e3f7:	mov    ds:0x176c6d91,eax
  41e3fc:	fadd   QWORD PTR [edx-0x5192be52]
  41e402:	dec    esi
  41e403:	xchg   edi,eax
  41e404:	mov    cl,0xed
  41e406:	mov    ds:0xb4cb30a8,al
  41e40b:	lahf   
  41e40c:	fst    st(2)
  41e40e:	cmp    edx,DWORD PTR [eax]
  41e410:	mov    al,0xba
  41e412:	mov    ecx,0x38ebf2a4
  41e417:	shl    DWORD PTR [ebp-0x2e],cl
  41e41a:	arpl   WORD PTR [edx],cx
  41e41c:	and    dh,ch
  41e41e:	js     0x41e475
  41e420:	xor    cl,BYTE PTR [edi-0x54]
  41e423:	cmp    DWORD PTR [edi+ebp*8],ebx
  41e426:	(bad)  
  41e427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e428:	dec    esi
  41e429:	jns    0x41e4a2
  41e42b:	inc    ebx
  41e42c:	call   0x8ab225d4
  41e431:	popf   
  41e432:	xchg   ebx,eax
  41e433:	and    BYTE PTR [ebp+0x67a41f5f],dh
  41e439:	aam    0x25
  41e43b:	imul   BYTE PTR [ebp+eax*2-0x44f61c5d]
  41e442:	mov    al,ds:0xf47f7cf7
  41e447:	mov    ebx,0xacb60353
  41e44d:	lock pop ebx
  41e44f:	int    0x88
  41e451:	adc    ebp,DWORD PTR [edx+0x4cf02b6c]
  41e457:	dec    edx
  41e458:	push   ecx
  41e459:	js     0x41e438
  41e45b:	jae    0x41e456
  41e45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45e:	pop    eax
  41e45f:	loop   0x41e4c0
  41e461:	dec    edi
  41e462:	loop   0x41e488
  41e464:	lds    edx,FWORD PTR [edx-0x8a54f38]
  41e46a:	dec    eax
  41e46b:	lds    ecx,FWORD PTR [edx-0x7c72bb90]
  41e471:	retf   0x1cff
  41e474:	rcr    DWORD PTR ds:0x38b5a5df,0xc
  41e47b:	or     DWORD PTR [eax+0x68f7561a],ebp
  41e481:	fidiv  DWORD PTR [eax]
  41e483:	clc    
  41e484:	jbe    0x41e49f
  41e486:	shr    BYTE PTR [edi+eiz*4-0x50],1
  41e48a:	xchg   edi,eax
  41e48b:	pop    ebp
  41e48c:	test   BYTE PTR [edx-0x660258cb],ch
  41e492:	les    eax,FWORD PTR [eax+0x1b]
  41e495:	push   edx
  41e496:	and    edi,edi
  41e498:	leave  
  41e499:	fdivr  DWORD PTR [ecx]
  41e49b:	retf   
  41e49c:	(bad)  
  41e49d:	hlt    
  41e49e:	or     edx,edi
  41e4a0:	mov    dh,BYTE PTR [ebx-0x5e]
  41e4a3:	sub    al,0x73
  41e4a5:	jp     0x41e509
  41e4a7:	jge    0x41e475
  41e4a9:	pushf  
  41e4aa:	dec    esi
  41e4ab:	add    eax,0x342cc8de
  41e4b0:	or     al,0x35
  41e4b2:	inc    ebx
  41e4b3:	nop
  41e4b4:	adc    DWORD PTR [edi-0x3e],edi
  41e4b7:	repz inc edx
  41e4b9:	cdq    
  41e4ba:	leave  
  41e4bb:	loopne 0x41e4a7
  41e4bd:	mov    edx,0xecdae582
  41e4c2:	push   esi
  41e4c3:	int    0x8e
  41e4c5:	lds    eax,FWORD PTR [esi-0x18]
  41e4c8:	push   ebp
  41e4c9:	adc    BYTE PTR ds:0x2da883a9,al
  41e4cf:	test   al,0x50
  41e4d1:	(bad)  
  41e4d2:	fld    QWORD PTR [esi]
  41e4d4:	jp     0x41e4be
  41e4d6:	mov    ah,0xe2
  41e4d8:	dec    esi
  41e4d9:	mov    cl,0x25
  41e4db:	inc    eax
  41e4dc:	in     al,dx
  41e4dd:	push   ecx
  41e4de:	sbb    DWORD PTR [edi+0x7688849a],esi
  41e4e4:	push   edx
  41e4e5:	dec    edi
  41e4e6:	cmc    
  41e4e7:	es push ecx
  41e4e9:	fld    st(2)
  41e4eb:	or     eax,0xed8dcc72
  41e4f0:	xchg   ebx,eax
  41e4f1:	popf   
  41e4f2:	mov    cx,0xa03d
  41e4f6:	dec    ebx
  41e4f7:	pop    esp
  41e4f8:	xor    DWORD PTR [ecx-0x69db1dea],edx
  41e4fe:	push   ebx
  41e4ff:	dec    edx
  41e500:	ret    0x89a8
  41e503:	mov    edi,0x2109fe8c
  41e508:	mov    eax,0xd7e9239e
  41e50d:	jecxz  0x41e4e4
  41e50f:	pop    edi
  41e510:	jp     0x41e49c
  41e512:	sub    BYTE PTR ds:0xa346ba1f,bh
  41e518:	(bad)  
  41e519:	retf   
  41e51a:	xchg   edi,eax
  41e51b:	and    eax,0xfd733d5c
  41e520:	jae    0x41e56d
  41e522:	or     eax,0x2c95369c
  41e527:	or     BYTE PTR [eax+0x5bf8d3e8],dh
  41e52d:	dec    edi
  41e52e:	push   ss
  41e52f:	xor    bl,ah
  41e531:	or     al,0xf
  41e533:	and    eax,0x1586280c
  41e538:	bound  esp,QWORD PTR [esi-0x47]
  41e53b:	leave  
  41e53c:	fisub  WORD PTR [edx]
  41e53e:	and    eax,0x555114b7
  41e543:	sub    al,0xc6
  41e545:	pop    esp
  41e546:	mov    ah,0xee
  41e548:	fs pop edi
  41e54a:	repz dec esp
  41e54c:	mov    ds:0xcee40911,eax
  41e551:	ficom  DWORD PTR [esi]
  41e553:	sub    bl,0x21
  41e556:	mov    dh,0xae
  41e558:	ja     0x41e59a
  41e55a:	sbb    al,0xac
  41e55c:	stc    
  41e55d:	jecxz  0x41e5d0
  41e55f:	cmp    eax,0x98fe788a
  41e564:	cs push ebx
  41e566:	and    bl,dl
  41e568:	push   0x54bebe08
  41e56d:	test   DWORD PTR [ebx-0x47],edi
  41e570:	add    DWORD PTR [ebx],ecx
  41e572:	fisttp WORD PTR [eax-0x7ebb16bb]
  41e578:	xor    esi,DWORD PTR [esi-0x6ddbe75e]
  41e57e:	xchg   ecx,eax
  41e57f:	test   bl,dh
  41e581:	add    ebx,DWORD PTR [edx+0x32]
  41e584:	and    esp,edi
  41e586:	aam    0x7a
  41e588:	rol    BYTE PTR [esi+0x22],0x8b
  41e58c:	cwde   
  41e58d:	out    0x26,eax
  41e58f:	icebp  
  41e590:	dec    esi
  41e591:	(bad)  
  41e593:	test   al,0xd3
  41e595:	loope  0x41e578
  41e597:	sar    BYTE PTR [eax-0x7836a09d],cl
  41e59d:	call   DWORD PTR [esi-0x3877be2c]
  41e5a3:	std    
  41e5a4:	and    al,BYTE PTR [edi+ebx*8]
  41e5a7:	fidivr WORD PTR [edi+0x2a]
  41e5aa:	inc    ecx
  41e5ab:	mov    esp,0x17dc68ac
  41e5b0:	mov    DWORD PTR [esi-0x1c],ebx
  41e5b3:	(bad)  
  41e5b4:	pop    edi
  41e5b5:	jecxz  0x41e58e
  41e5b7:	retf   0xf42a
  41e5ba:	aaa    
  41e5bb:	call   0x496a:0x100b6171
  41e5c2:	xor    eax,DWORD PTR [eax]
  41e5c4:	test   al,0x39
  41e5c6:	push   ebx
  41e5c7:	add    BYTE PTR [edx-0x3e9e7486],bh
  41e5cd:	fisub  DWORD PTR [edi+0x45]
  41e5d0:	mov    cl,0x7e
  41e5d2:	inc    esi
  41e5d3:	jl     0x41e628
  41e5d5:	pushf  
  41e5d6:	test   BYTE PTR [eax-0x64b6dcb5],bh
  41e5dc:	mov    edx,0x7276820f
  41e5e1:	sbb    al,BYTE PTR [edx-0x32]
  41e5e4:	test   al,0xf5
  41e5e6:	sbb    al,0xa0
  41e5e8:	sbb    DWORD PTR [eax+ecx*4],esi
  41e5eb:	sbb    BYTE PTR ds:0x7f27baa4,bl
  41e5f1:	mov    al,ds:0x59d4cc4a
  41e5f6:	mov    ecx,0xf82b7fe2
  41e5fb:	sub    DWORD PTR [ecx+0x6e],esi
  41e5fe:	sbb    BYTE PTR [eax+0x0],al
  41e601:	sub    DWORD PTR [ebx-0x2e5f7e29],eax
  41e607:	mov    edi,0xff346860
  41e60c:	fcom   QWORD PTR [edi-0x6851887c]
  41e612:	xchg   ebx,eax
  41e613:	loope  0x41e595
  41e615:	in     eax,dx
  41e616:	pop    edi
  41e617:	adc    eax,ecx
  41e619:	les    esp,FWORD PTR [eax+0x15]
  41e61c:	xchg   ebp,eax
  41e61d:	dec    edi
  41e61e:	adc    dh,BYTE PTR ds:0xc65cb257
  41e624:	sbb    al,0xf7
  41e626:	ret    
  41e627:	ja     0x41e5f8
  41e629:	push   ecx
  41e62a:	mov    ?,esp
  41e62c:	cwde   
  41e62d:	scas   eax,DWORD PTR es:[edi]
  41e62e:	mov    esp,edi
  41e630:	xor    DWORD PTR [ebp-0x18],edx
  41e633:	int3   
  41e634:	mov    cl,0x62
  41e636:	dec    esp
  41e637:	les    esi,FWORD PTR [edx+0x23]
  41e63a:	cmp    ebx,DWORD PTR [ebx+0x35]
  41e63d:	xchg   esi,eax
  41e63e:	retf   0x4734
  41e641:	idiv   DWORD PTR [ebx+0x6d689381]
  41e647:	neg    DWORD PTR [edx+0x1b]
  41e64a:	rcr    DWORD PTR [edi-0x407c7f4c],cl
  41e650:	call   0x40055be
  41e655:	push   esp
  41e656:	sub    al,0xda
  41e658:	xor    ebp,ebp
  41e65a:	fdivr  DWORD PTR [ebp-0x37]
  41e65d:	icebp  
  41e65e:	inc    ebx
  41e65f:	mov    DWORD PTR [ebp+0x64],ecx
  41e662:	int    0x4
  41e664:	dec    ebx
  41e665:	mov    dl,dh
  41e667:	push   es
  41e668:	or     BYTE PTR [ecx+eax*1],0xe4
  41e66c:	xor    DWORD PTR [ecx+esi*8+0x23],eax
  41e670:	popf   
  41e671:	ds or  bh,bh
  41e674:	xchg   cx,ax
  41e676:	in     eax,dx
  41e677:	pop    edx
  41e678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e679:	xor    BYTE PTR [esi+0x47],ch
  41e67c:	push   esi
  41e67d:	add    DWORD PTR [eax-0x28576ae4],ebx
  41e683:	mov    BYTE PTR [ebx],ah
  41e685:	mov    dl,0x22
  41e687:	pop    edi
  41e688:	rcr    DWORD PTR [edi-0x7e5ba730],cl
  41e68e:	repz lea esp,[ebx]
  41e691:	mov    es,WORD PTR [edi+0x28]
  41e694:	fs sti 
  41e696:	inc    esi
  41e697:	xor    al,0xde
  41e699:	stos   BYTE PTR es:[edi],al
  41e69a:	add    BYTE PTR [esi-0x313bc0b8],0xce
  41e6a1:	cmp    al,dl
  41e6a3:	pop    es
  41e6a4:	jno    0x41e636
  41e6a6:	xor    edx,DWORD PTR [esi]
  41e6a8:	loopne 0x41e63b
  41e6aa:	mov    bl,BYTE PTR [eax-0x753df61f]
  41e6b0:	cli    
  41e6b1:	adc    dh,BYTE PTR [esi+ecx*8]
  41e6b4:	mov    ss:0x65e09aeb,al
  41e6ba:	or     BYTE PTR [ebx],dh
  41e6bc:	xchg   esi,eax
  41e6bd:	and    BYTE PTR [ecx+0x1c],dh
  41e6c0:	inc    edx
  41e6c1:	ds icebp 
  41e6c3:	aas    
  41e6c4:	data16 fstp DWORD PTR [ebx+esi*1-0x7854cf4d]
  41e6cc:	mov    esi,0x75cdbb8e
  41e6d1:	sar    DWORD PTR [esi-0x795828be],0xc2
  41e6d8:	and    DWORD PTR [esp+edx*8],0x31b7c535
  41e6df:	repz (bad) 
  41e6e1:	scas   eax,DWORD PTR es:[edi]
  41e6e2:	in     eax,0xd3
  41e6e4:	adc    edi,esp
  41e6e6:	pop    esi
  41e6e7:	push   esp
  41e6e8:	(bad)  
  41e6e9:	dec    ch
  41e6eb:	mov    eax,0x8512f894
  41e6f0:	fs das 
  41e6f2:	add    BYTE PTR [ecx+0x7b],bh
  41e6f5:	sbb    al,0x7b
  41e6f7:	sub    BYTE PTR [edx-0x40],ah
  41e6fa:	je     0x41e716
  41e6fc:	repz pop ebx
  41e6fe:	cwde   
  41e6ff:	scas   al,BYTE PTR es:[edi]
  41e700:	xchg   esp,eax
  41e701:	repnz (bad) 
  41e703:	jge    0x41e762
  41e705:	xor    edi,edx
  41e707:	pop    ebx
  41e708:	in     eax,0x75
  41e70a:	or     DWORD PTR [ecx+0x13ab588b],0xbd90dfa2
  41e714:	in     al,dx
  41e715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e716:	add    DWORD PTR [ebx-0xf],0x3d38037e
  41e71d:	push   esp
  41e71e:	xlat   BYTE PTR ds:[ebx]
  41e71f:	mov    ds:0x1b1cf183,eax
  41e724:	jge    0x41e751
  41e726:	jp     0x41e721
  41e728:	lods   al,BYTE PTR ds:[esi]
  41e729:	nop
  41e72a:	sub    BYTE PTR [ecx-0x5c1dce9f],dl
  41e730:	adc    esp,DWORD PTR [esi]
  41e732:	fdiv   QWORD PTR [eax]
  41e734:	push   edx
  41e735:	add    eax,0x9ddf1164
  41e73a:	sbb    al,0xcc
  41e73c:	call   0x5eaa:0xccc1435b
  41e743:	pop    esp
  41e744:	push   0xffffff86
  41e746:	mov    WORD PTR [eax+0x4209aaac],cs
  41e74c:	pmuludq mm3,QWORD PTR [edi]
  41e74f:	pop    ss
  41e750:	(bad)  
  41e751:	fucom  st(4)
  41e753:	sahf   
  41e754:	sahf   
  41e755:	test   eax,0x981421b7
  41e75a:	mov    eax,ecx
  41e75c:	pushf  
  41e75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e75e:	sub    BYTE PTR [ebx-0x3da42004],0xa5
  41e765:	(bad)  
  41e767:	mov    ah,ch
  41e769:	into   
  41e76a:	retf   
  41e76b:	mov    cl,0xd5
  41e76d:	cld    
  41e76e:	(bad)  
  41e76f:	adc    eax,0x50b77913
  41e774:	add    esp,esp
  41e776:	jno    0x41e770
  41e778:	in     al,dx
  41e779:	jp     0x41e79e
  41e77b:	inc    ecx
  41e77c:	mov    edx,DWORD PTR [ecx-0x512a6090]
  41e782:	mov    ecx,0xd5467fa
  41e787:	push   esp
  41e788:	fs mov ebx,0x414606d1
  41e78e:	mov    edi,0xcbd4f1e9
  41e793:	aam    0x26
  41e795:	add    DWORD PTR [eax+0x74],eax
  41e798:	mov    ch,0x7a
  41e79a:	xchg   edx,eax
  41e79b:	cmp    eax,0x9c62143f
  41e7a0:	mov    ah,0x10
  41e7a2:	mov    eax,ds:0x2bd36000
  41e7a7:	dec    eax
  41e7a8:	push   ss
  41e7a9:	mov    ds:0x681ad328,eax
  41e7ae:	ins    BYTE PTR es:[edi],dx
  41e7af:	mov    ah,0xca
  41e7b1:	adc    ebp,DWORD PTR [edi+0x4aa0ca46]
  41e7b7:	sbb    ebp,DWORD PTR [eax]
  41e7b9:	in     eax,0x26
  41e7bb:	sub    BYTE PTR [eax+esi*4],ah
  41e7be:	sub    ebx,DWORD PTR [esi+ebp*1]
  41e7c1:	cmp    BYTE PTR [ebp-0x1e],ah
  41e7c4:	jnp    0x41e772
  41e7c6:	inc    ebx
  41e7c7:	out    0x1a,al
  41e7c9:	push   ecx
  41e7ca:	push   ds
  41e7cb:	inc    eax
  41e7cc:	dec    esp
  41e7cd:	int    0x52
  41e7cf:	jp     0x41e7a6
  41e7d1:	mov    edx,0x2ea11131
  41e7d6:	cmp    eax,0xed672ed1
  41e7db:	(bad)  
  41e7dc:	int    0x9
  41e7de:	ds test eax,0xd37c2ca4
  41e7e4:	outs   dx,DWORD PTR ds:[esi]
  41e7e5:	jb     0x41e791
  41e7e7:	xor    esp,esi
  41e7e9:	pusha  
  41e7ea:	pop    ebp
  41e7eb:	lahf   
  41e7ec:	push   ebp
  41e7ed:	inc    DWORD PTR [eax+eiz*4]
  41e7f0:	sbb    ebx,DWORD PTR [ebp-0x1856e2ce]
  41e7f6:	ins    BYTE PTR es:[edi],dx
  41e7f7:	sahf   
  41e7f8:	shl    DWORD PTR [ebp-0x405ee92],0x22
  41e7ff:	ja     0x41e81d
  41e801:	ror    DWORD PTR [edi+0x61],1
  41e804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e805:	fwait
  41e806:	mov    dl,0x8a
  41e808:	mov    DWORD PTR [ebp+0x1cf9c0b5],eax
  41e80e:	jp     0x41e79f
  41e810:	push   ebx
  41e811:	and    BYTE PTR [ecx+0x50],0x15
  41e815:	call   0x5b51218a
  41e81a:	jo     0x41e7db
  41e81c:	jmp    0x265e566c
  41e821:	mov    BYTE PTR ds:0x28fef3b9,dh
  41e827:	je     0x41e7b3
  41e829:	aam    0x96
  41e82b:	imul   ebp,DWORD PTR [eax+0x8f90c80],0xcd117e35
  41e835:	(bad)  
  41e836:	clc    
  41e837:	sbb    eax,0xed70af5a
  41e83c:	cmp    al,0xca
  41e83e:	pop    eax
  41e83f:	outs   dx,BYTE PTR ds:[esi]
  41e840:	jg     0x41e825
  41e842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e843:	int3   
  41e844:	lods   eax,DWORD PTR ds:[esi]
  41e845:	iret   
  41e846:	xor    DWORD PTR [ecx-0x4d1f047d],0x5cff8843
  41e850:	sbb    bh,ah
  41e852:	jl     0x41e86c
  41e854:	xchg   edx,eax
  41e855:	xchg   esp,eax
  41e856:	push   ebx
  41e857:	add    BYTE PTR [ecx+0x452b2231],ch
  41e85d:	and    ebx,DWORD PTR [esi*2-0x341482d4]
  41e864:	cmp    al,0x80
  41e866:	push   es
  41e867:	cwde   
  41e868:	jg     0x41e828
  41e86a:	push   eax
  41e86b:	and    esi,DWORD PTR cs:[edx-0xc]
  41e86f:	(bad)  
  41e870:	neg    DWORD PTR [eax-0x1bebe107]
  41e876:	cmc    
  41e877:	lock and BYTE PTR [edx-0x66890dbb],bh
  41e87e:	scas   al,BYTE PTR es:[edi]
  41e87f:	adc    DWORD PTR [ebx-0x3d6a9967],esp
  41e885:	retf   0xc224
  41e888:	jns    0x41e8cc
  41e88a:	test   edx,0x19a0637e
  41e890:	into   
  41e891:	cmc    
  41e892:	pop    esi
  41e893:	mov    ebx,0xa159cf1d
  41e898:	xor    eax,0x5092565b
  41e89d:	imul   ebp,DWORD PTR [ecx-0x4c50396a],0xde433814
  41e8a7:	mov    ah,0x35
  41e8a9:	das    
  41e8aa:	push   edi
  41e8ab:	add    al,BYTE PTR [ebx+0x7b8c9041]
  41e8b1:	ret    0x7ac9
  41e8b4:	rol    DWORD PTR [edx-0x5c],0xca
  41e8b8:	pop    esi
  41e8b9:	dec    esp
  41e8ba:	lds    edi,FWORD PTR [eax+ebp*2+0x6b]
  41e8be:	sub    BYTE PTR [edx+0x4d],cl
  41e8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c2:	std    
  41e8c3:	xchg   esi,eax
  41e8c4:	(bad)  
  41e8c6:	pop    ebx
  41e8c7:	jb     0x41e909
  41e8c9:	push   ebp
  41e8ca:	das    
  41e8cb:	arpl   WORD PTR [ecx-0x47],dx
  41e8ce:	xor    bl,BYTE PTR [ebx+0x4a5ad498]
  41e8d4:	into   
  41e8d5:	ret    0x3f8f
  41e8d8:	icebp  
  41e8d9:	xor    al,bl
  41e8db:	sub    eax,0x3a30cb01
  41e8e0:	gs das 
  41e8e2:	outs   dx,BYTE PTR ds:[esi]
  41e8e3:	cmp    eax,0x9265c621
  41e8e8:	daa    
  41e8e9:	sub    eax,0x19b8bda1
  41e8ee:	test   eax,0x4085ad00
  41e8f3:	pop    ebx
  41e8f4:	sub    esp,DWORD PTR [eax-0x74]
  41e8f7:	sbb    DWORD PTR [edx],esi
  41e8f9:	sbb    DWORD PTR [eax],0xd2274b0c
  41e8ff:	(bad)  
  41e900:	inc    eax
  41e901:	jmp    0x41e972
  41e903:	and    cl,BYTE PTR [ecx+0x7204259a]
  41e909:	and    dh,cl
  41e90b:	sub    cl,BYTE PTR [bp+0x0]
  41e90f:	nop
  41e910:	push   ebp
  41e911:	adc    al,bl
  41e913:	scas   al,BYTE PTR es:[edi]
  41e914:	ds push edi
  41e916:	loopne 0x41e951
  41e918:	std    
  41e919:	xchg   esp,eax
  41e91a:	iret   
  41e91b:	sub    DWORD PTR gs:[ecx-0x4294bf09],ebx
  41e922:	arpl   sp,di
  41e924:	mov    cl,0xc0
  41e926:	or     BYTE PTR [ecx+0x48],cl
  41e929:	adc    eax,0x19630b25
  41e92e:	jno    0x41e96c
  41e930:	jmp    0x41e8e1
  41e932:	dec    cl
  41e934:	mov    al,0xfc
  41e936:	push   edx
  41e937:	inc    edx
  41e938:	arpl   di,sp
  41e93a:	and    BYTE PTR [esi+0x6055b6f0],al
  41e940:	sub    eax,0x17649602
  41e945:	push   cs
  41e946:	shl    BYTE PTR [ebx-0x4279c50f],0xdc
  41e94d:	add    BYTE PTR [ecx-0x111b0121],0xfe
  41e954:	mov    eax,ds:0x5f95b3cc
  41e959:	sub    al,BYTE PTR [edi]
  41e95b:	add    eax,0x403d7e7b
  41e960:	cmp    dh,cl
  41e962:	lods   eax,DWORD PTR ds:[esi]
  41e963:	dec    esi
  41e964:	fcomp  DWORD PTR fs:[esi]
  41e967:	sbb    DWORD PTR [edx-0x14310df4],0x23daf5fe
  41e971:	inc    ebp
  41e972:	fsub   QWORD PTR [ecx-0x7b256e1a]
  41e978:	neg    ebx
  41e97a:	arpl   WORD PTR [eax-0x2b],cx
  41e97d:	sbb    al,0x60
  41e97f:	cmp    eax,0xd6dbd742
  41e984:	or     edx,esp
  41e986:	in     al,0x6a
  41e988:	mov    eax,0x30476dba
  41e98d:	pop    esi
  41e98e:	dec    ebp
  41e98f:	xor    ah,BYTE PTR [esi-0x50d71c88]
  41e995:	xor    DWORD PTR [edi-0x1d211bd4],edi
  41e99b:	pushf  
  41e99c:	and    al,0x32
  41e99e:	jl     0x41e945
  41e9a0:	xchg   ecx,eax
  41e9a1:	(bad)  
  41e9a2:	and    edx,DWORD PTR [edi]
  41e9a4:	dec    eax
  41e9a5:	add    DWORD PTR [edi+0x607fd87b],0xb
  41e9ac:	imul   edi,DWORD PTR [ebx+0x3],0x3c22cba6
  41e9b3:	pop    ebp
  41e9b4:	pop    edi
  41e9b5:	mov    esp,0x3216ecdb
  41e9ba:	cwde   
  41e9bb:	sub    al,0x0
  41e9bd:	retf   
  41e9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9bf:	jns    0x41e9a4
  41e9c1:	add    al,0x64
  41e9c3:	sub    al,0xac
  41e9c5:	outs   dx,DWORD PTR ds:[esi]
  41e9c6:	fst    DWORD PTR [eax]
  41e9c8:	xchg   ebx,eax
  41e9c9:	pop    ecx
  41e9ca:	dec    edi
  41e9cb:	call   0x2f75ff4e
  41e9d0:	or     al,0xb2
  41e9d2:	test   DWORD PTR [edx+0x49],ecx
  41e9d5:	xchg   edi,eax
  41e9d6:	(bad)  
  41e9d7:	inc    ecx
  41e9d9:	pop    esp
  41e9da:	fisubr DWORD PTR [esi-0x334e96ea]
  41e9e0:	mov    ebx,0x131f641e
  41e9e5:	inc    ebx
  41e9e6:	pop    ecx
  41e9e7:	mov    al,ds:0x59abb205
  41e9ec:	repnz add bh,0x9b
  41e9f0:	in     eax,0xbe
  41e9f2:	mov    al,ds:0x7e4a841b
  41e9f7:	lods   eax,DWORD PTR ds:[esi]
  41e9f8:	mov    edx,0xc2c55974
  41e9fd:	je     0x41ea41
  41e9ff:	psrld  mm7,mm1
  41ea02:	lea    esp,[ebx+ebp*8+0x46]
  41ea06:	ror    ebp,cl
  41ea08:	cld    
  41ea09:	in     eax,0x93
  41ea0b:	sub    ebp,DWORD PTR [edi+esi*2+0x1d]
  41ea0f:	mov    edi,0x51c17c34
  41ea14:	pop    esi
  41ea15:	icebp  
  41ea16:	outs   dx,BYTE PTR ds:[esi]
  41ea17:	leave  
  41ea18:	sbb    BYTE PTR ds:0xeafd7672,0x34
  41ea1f:	imul   ebp,DWORD PTR [eax+0x20660df9],0x614b2a2f
  41ea29:	push   0x34
  41ea2b:	cmp    eax,0xf05a5afd
  41ea30:	int    0x4f
  41ea32:	lods   al,BYTE PTR ds:[esi]
  41ea33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea34:	call   0x8146:0xa8c04500
  41ea3b:	xor    DWORD PTR ss:[edx+0x1a23a954],ebx
  41ea42:	cdq    
  41ea43:	add    edx,DWORD PTR [eax+eax*2+0xed73b9a]
  41ea4a:	call   0xe1d2ade6
  41ea4f:	popf   
  41ea50:	stos   DWORD PTR es:[edi],eax
  41ea51:	cmp    ebx,eax
  41ea53:	xchg   DWORD PTR [ecx+0x2d0d8c59],ecx
  41ea59:	(bad)
  41ea5d:	leave  
  41ea5e:	mov    esi,0x38c2143e
  41ea63:	sbb    eax,0x597d1d2e
  41ea68:	xor    bl,BYTE PTR [eax+0x7a1e7ef1]
  41ea6e:	stc    
  41ea6f:	inc    ecx
  41ea71:	into   
  41ea72:	inc    esi
  41ea73:	fist   WORD PTR [ebx-0x3618afa3]
  41ea79:	test   DWORD PTR [ebx+0x4c6d8727],eax
  41ea7f:	adc    BYTE PTR [edi+0x64],bl
  41ea82:	pop    edx
  41ea83:	adc    BYTE PTR [ecx-0x16],bl
  41ea86:	pusha  
  41ea87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea88:	xor    BYTE PTR [ebx-0x2ac81f48],bl
  41ea8e:	out    dx,eax
  41ea8f:	push   ds
  41ea90:	scas   al,BYTE PTR es:[edi]
  41ea91:	call   0xc0d5:0xff84f93b
  41ea98:	xchg   ebx,eax
  41ea99:	cmc    
  41ea9a:	sar    DWORD PTR [ecx+ebx*2+0x72],1
  41ea9e:	xchg   al,cl
  41eaa0:	std    
  41eaa1:	sahf   
  41eaa2:	loop   0x41ea97
  41eaa4:	outs   dx,DWORD PTR ds:[esi]
  41eaa5:	jp     0x41eab3
  41eaa7:	clc    
  41eaa8:	jg     0x41ead9
  41eaaa:	inc    eax
  41eaab:	nop
  41eaac:	test   DWORD PTR [ebp+0x42],0x7c6d90d0
  41eab3:	js     0x41ea92
  41eab5:	push   cs
  41eab6:	clc    
  41eab7:	mov    esp,0xc9a4e544
  41eabc:	fadd   QWORD PTR [edi+0x4d]
  41eabf:	xor    edi,ecx
  41eac1:	pop    ecx
  41eac2:	sahf   
  41eac3:	jno    0x41eaf0
  41eac5:	in     eax,0xc6
  41eac7:	dec    ebp
  41eac8:	outs   dx,BYTE PTR ds:[esi]
  41eac9:	test   DWORD PTR [ecx+edi*8-0x7f],edi
  41eacd:	lods   eax,DWORD PTR ds:[esi]
  41eace:	pop    ecx
  41eacf:	push   esi
  41ead0:	test   DWORD PTR [edx+0x55b7574],ebp
  41ead6:	cmc    
  41ead7:	or     ebx,esi
  41ead9:	test   al,0xa6
  41eadb:	leave  
  41eadc:	mov    bh,0x2
  41eadf:	adc    BYTE PTR [esi+0x4f],cl
  41eae2:	pop    esi
  41eae3:	rcl    cl,1
  41eae5:	add    cl,BYTE PTR [esi+esi*8+0x4a]
  41eae9:	xchg   esp,eax
  41eaea:	dec    esi
  41eaeb:	scas   eax,DWORD PTR es:[edi]
  41eaec:	mov    edi,0x4ba6b0f4
  41eaf1:	sbb    BYTE PTR [ebp-0x52cb2439],dl
  41eaf7:	xchg   esi,eax
  41eaf8:	adc    DWORD PTR [esi+0x0],ebx
  41eafb:	mov    al,BYTE PTR [edi+0x43cbbe34]
  41eb01:	mov    dl,0xd4
  41eb03:	ins    DWORD PTR es:[edi],dx
  41eb04:	xchg   edx,eax
  41eb05:	aas    
  41eb06:	jecxz  0x41eb71
  41eb08:	cmp    BYTE PTR ds:0xb6e8aaff,bh
  41eb0e:	repz icebp 
  41eb10:	dec    esi
  41eb11:	lea    esp,[ecx+0x574510db]
  41eb17:	arpl   bx,ax
  41eb19:	ficom  DWORD PTR [ecx-0x2b96185a]
  41eb1f:	and    cl,BYTE PTR [esi]
  41eb21:	nop
  41eb22:	inc    eax
  41eb23:	ss pop eax
  41eb25:	inc    ebp
  41eb26:	sub    eax,0x933fc09a
  41eb2b:	jbe    0x41eb10
  41eb2d:	iret   
  41eb2e:	xor    edi,DWORD PTR [ebp-0x296ff9a6]
  41eb34:	inc    esi
  41eb35:	and    al,0x39
  41eb37:	(bad)  
  41eb38:	mov    bl,0x6
  41eb3a:	je     0x41eac0
  41eb3c:	pushf  
  41eb3d:	mov    ds:0x5f0fa477,eax
  41eb42:	inc    esi
  41eb44:	ror    DWORD PTR [ebp-0x2b],cl
  41eb47:	push   0x2add479f
  41eb4c:	xchg   ebp,eax
  41eb4d:	xchg   bh,dl
  41eb4f:	jnp    0x41eb6a
  41eb51:	jo     0x41ebc9
  41eb53:	data16 stos BYTE PTR es:[edi],al
  41eb55:	sub    al,0x25
  41eb57:	mov    eax,0x2515e6f9
  41eb5c:	mov    WORD PTR ds:0x91c8a228,gs
  41eb62:	js     0x41eb2c
  41eb64:	sahf   
  41eb65:	xchg   ebp,eax
  41eb66:	(bad)  
  41eb68:	in     eax,dx
  41eb69:	aaa    
  41eb6a:	mov    eax,ds:0x1169e3fe
  41eb6f:	rcr    DWORD PTR [ecx+0x26d5fafb],cl
  41eb75:	adc    dl,dh
  41eb77:	cwde   
  41eb78:	ficomp DWORD PTR [ecx]
  41eb7a:	test   eax,0xefa0861e
  41eb7f:	fwait
  41eb80:	(bad)  
  41eb81:	bound  esp,QWORD PTR [esi+0x70]
  41eb84:	xor    al,0x13
  41eb86:	xor    al,0xff
  41eb88:	pusha  
  41eb89:	frstor [ebp-0x26d80827]
  41eb8f:	je     0x41eb11
  41eb91:	xchg   BYTE PTR [esi],ch
  41eb93:	mov    al,ds:0x146ea18a
  41eb98:	mov    edi,DWORD PTR [esi-0x5509f9]
  41eb9e:	push   cs
  41eb9f:	fdivr  QWORD PTR [esi]
  41eba1:	mov    eax,ds:0x549e4f58
  41eba6:	clc    
  41eba7:	fcmovnu st,st(1)
  41eba9:	add    DWORD PTR [esp+eiz*4+0x5896239a],edx
  41ebb0:	loope  0x41ec26
  41ebb2:	mov    ds:0xd43ba2ba,al
  41ebb7:	mov    al,ds:0x5026783
  41ebbc:	int    0xd1
  41ebbe:	add    ah,BYTE PTR [ebx-0x2]
  41ebc1:	jnp    0x41eb8c
  41ebc3:	mov    edi,0x71c56f8f
  41ebc8:	push   eax
  41ebc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebca:	and    DWORD PTR ds:0x56c20d24,ecx
  41ebd0:	imul   esi,DWORD PTR [esi-0x16],0x64dd516c
  41ebd7:	scas   eax,DWORD PTR es:[edi]
  41ebd8:	xchg   DWORD PTR [edx-0x5aece006],ebx
  41ebde:	or     esi,DWORD PTR ds:0x85514cdc
  41ebe4:	mov    cl,0xd4
  41ebe6:	sub    eax,0xcab6d1a5
  41ebeb:	aam    0x43
  41ebed:	push   esi
  41ebee:	test   BYTE PTR [ebx],dl
  41ebf0:	call   0xeea2267
  41ebf5:	cmovnp esp,DWORD PTR [esi]
  41ebf8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ebfa:	jmp    0xb89d1c95
  41ebff:	call   0x835537a2
  41ec04:	sti    
  41ec05:	xor    DWORD PTR [esi+0x3d3f5510],ebp
  41ec0b:	pusha  
  41ec0c:	add    al,BYTE PTR [ebx+0x26ef92fb]
  41ec12:	cli    
  41ec13:	test   eax,0xb76dfdcc
  41ec18:	mov    ds:0xce3cb92d,al
  41ec1d:	and    ecx,esi
  41ec1f:	xchg   ebx,ecx
  41ec21:	(bad)  
  41ec22:	test   al,0x58
  41ec24:	xor    cl,BYTE PTR [ebx-0x1c]
  41ec27:	out    dx,eax
  41ec28:	lods   al,BYTE PTR ds:[esi]
  41ec29:	pop    ebx
  41ec2a:	retf   0x4ca2
  41ec2d:	mov    dl,0x29
  41ec2f:	push   eax
  41ec30:	xor    ah,ch
  41ec32:	sbb    ah,bh
  41ec34:	addr16 pop esi
  41ec36:	fcmovnb st,st(1)
  41ec38:	sub    edx,DWORD PTR [ebx+edi*2-0x397baac8]
  41ec3f:	pop    es
  41ec40:	loope  0x41ec28
  41ec42:	sgdtd  [ebx+0x68]
  41ec46:	jne    0x41eca0
  41ec48:	fdivr  QWORD PTR [edi-0x2d]
  41ec4b:	and    eax,0xcfae2a23
  41ec50:	mov    gs,WORD PTR [eax]
  41ec52:	push   cs
  41ec53:	pop    esp
  41ec54:	popf   
  41ec55:	in     al,0x86
  41ec57:	inc    esp
  41ec58:	shl    DWORD PTR [esi],0x36
  41ec5b:	out    0x4b,eax
  41ec5d:	jp     0x41ec27
  41ec5f:	gs stos DWORD PTR es:[edi],eax
  41ec61:	inc    ebx
  41ec62:	rcr    DWORD PTR [edi-0x57],0xd9
  41ec66:	jno    0x41ece7
  41ec68:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ec6a:	add    eax,0xfa19d7ac
  41ec6f:	push   eax
  41ec70:	pusha  
  41ec71:	mov    dl,0x6a
  41ec73:	or     DWORD PTR [edx],ebp
  41ec75:	pop    es
  41ec76:	fsub   DWORD PTR [eax+edi*4]
  41ec79:	jg     0x41ec7f
  41ec7b:	nop
  41ec7c:	adc    bl,dh
  41ec7e:	xchg   ecx,eax
  41ec7f:	loope  0x41ecc2
  41ec81:	inc    esi
  41ec82:	ins    BYTE PTR es:[edi],dx
  41ec83:	cmp    eax,0x5940940
  41ec88:	add    BYTE PTR [ebx],bl
  41ec8a:	dec    esi
  41ec8b:	jns    0x41ec13
  41ec8d:	into   
  41ec8e:	dec    eax
  41ec8f:	xchg   edx,eax
  41ec90:	inc    ebx
  41ec91:	cdq    
  41ec92:	fucomp st(7)
  41ec94:	mov    dl,0x2c
  41ec96:	push   edx
  41ec97:	aaa    
  41ec98:	xor    BYTE PTR [ebp-0x7b],dl
  41ec9b:	sub    al,0x38
  41ec9d:	xor    eax,0x56d9f264
  41eca2:	mov    bl,0x91
  41eca4:	in     al,0x28
  41eca6:	popf   
  41eca7:	xor    ebx,esp
  41eca9:	lods   al,BYTE PTR ds:[esi]
  41ecaa:	repnz hlt 
  41ecac:	inc    edx
  41ecad:	mul    BYTE PTR [eax+0x21]
  41ecb0:	es mov ebp,0x231350d0
  41ecb6:	shl    BYTE PTR [edx+0x17ce5d21],1
  41ecbc:	out    0xe9,al
  41ecbe:	stos   BYTE PTR es:[edi],al
  41ecbf:	div    BYTE PTR [ebx-0x27c41a9b]
  41ecc5:	pop    edx
  41ecc6:	sbb    esi,ebp
  41ecc8:	pop    ss
  41ecc9:	and    dh,dl
  41eccb:	addr16 jno 0x41ed05
  41ecce:	fisub  WORD PTR [eax]
  41ecd0:	cmc    
  41ecd1:	pop    edi
  41ecd2:	mov    ds:0xa5aaec99,al
  41ecd7:	das    
  41ecd8:	and    al,0x81
  41ecda:	sub    ch,BYTE PTR [edi+0x11e30c46]
  41ece0:	pop    esp
  41ece1:	or     DWORD PTR ds:0x47df568e,esi
  41ece7:	mov    edi,0x20177f07
  41ecec:	dec    ebp
  41eced:	or     al,0x91
  41ecef:	adc    eax,0x52cd1afc
  41ecf4:	mov    ch,0x0
  41ecf6:	pop    edi
  41ecf7:	xchg   ebx,eax
  41ecf8:	mov    eax,0xe0e108f8
  41ecfd:	add    DWORD PTR [ecx-0x6b2bc0c9],eax
  41ed03:	lods   eax,DWORD PTR ds:[esi]
  41ed04:	mov    bh,0x15
  41ed06:	je     0x41ecdf
  41ed08:	dec    edi
  41ed09:	aam    0xb6
  41ed0b:	idiv   BYTE PTR [eax]
  41ed0d:	jbe    0x41ec9c
  41ed0f:	mov    dh,0xc3
  41ed11:	mov    ebp,0x8c270dc2
  41ed16:	push   eax
  41ed17:	cmp    al,cl
  41ed19:	adc    DWORD PTR [ebp+edx*4+0x4b59d11f],eax
  41ed20:	xchg   esp,eax
  41ed21:	out    0xc6,eax
  41ed23:	mov    edi,0x2e4f151b
  41ed28:	aad    0x1a
  41ed2a:	xor    DWORD PTR [ebx+0x49],ebp
  41ed2d:	or     bh,ah
  41ed2f:	inc    esi
  41ed30:	mov    ds:0x3fedefe7,eax
  41ed35:	jl     0x41ecc3
  41ed37:	pop    ecx
  41ed38:	mov    DWORD PTR [esi-0x65ccf064],0x7fef80a5
  41ed42:	leave  
  41ed43:	loop   0x41edb1
  41ed45:	stos   DWORD PTR es:[edi],eax
  41ed46:	cmp    bl,BYTE PTR [ecx-0x3c7b0205]
  41ed4c:	mov    BYTE PTR [edx-0x56],al
  41ed4f:	pop    eax
  41ed50:	pop    eax
  41ed51:	addps  xmm6,XMMWORD PTR [edi-0x20]
  41ed55:	cs gs dec ecx
  41ed58:	int3   
  41ed59:	arpl   WORD PTR [eax+0x23],si
  41ed5c:	adc    edx,DWORD PTR [esi]
  41ed5e:	inc    esp
  41ed5f:	and    al,BYTE PTR [ebx]
  41ed61:	pop    ds
  41ed62:	mov    bh,0x3b
  41ed64:	mov    dh,0x5c
  41ed66:	aad    0xea
  41ed68:	imul   esi,DWORD PTR [ebp+eiz*1-0x721de652],0xffffff97
  41ed70:	ret    
  41ed71:	and    eax,0xadda7205
  41ed76:	ss cmp eax,0x200ed80a
  41ed7c:	mov    esp,0x5067c482
  41ed81:	dec    ecx
  41ed82:	push   ss
  41ed83:	jge    0x41edf5
  41ed85:	(bad)  
  41ed86:	push   esp
  41ed87:	adc    DWORD PTR [edi-0x3a7af9a4],edx
  41ed8d:	jne    0x41ed43
  41ed8f:	sti    
  41ed90:	sbb    DWORD PTR [edx],eax
  41ed92:	fisttp WORD PTR [ebp+0x5c7ba526]
  41ed98:	inc    edx
  41ed99:	outs   dx,DWORD PTR ds:[esi]
  41ed9a:	mov    ds:0x385ab29f,al
  41ed9f:	and    eax,0x79e36847
  41eda4:	mov    edi,0x85797e77
  41eda9:	and    al,0x68
  41edab:	jb     0x41edd0
  41edad:	inc    esi
  41edae:	out    0x6f,al
  41edb0:	mov    bl,0x54
  41edb2:	ds int 0x66
  41edb5:	pop    esi
  41edb6:	cwde   
  41edb7:	in     eax,dx
  41edb8:	mov    bh,0x55
  41edba:	call   0xe906d664
  41edbf:	cmp    al,0xdc
  41edc1:	jae    0x41ed7f
  41edc3:	jne    0x41ede1
  41edc5:	neg    DWORD PTR [ebp-0x60]
  41edc8:	popf   
  41edc9:	test   DWORD PTR [edi-0x28],0x5f2b0352
  41edd0:	xor    DWORD PTR [edx-0x1a],esp
  41edd3:	idiv   BYTE PTR [ebx-0x40]
  41edd6:	adc    eax,0x4d0bac0f
  41eddb:	out    0x67,al
  41eddd:	addr16 iret 
  41eddf:	aad    0xb0
  41ede1:	xor    BYTE PTR [eax+0x6f216078],dl
  41ede7:	test   eax,0x166bf22a
  41edec:	xchg   BYTE PTR [eax+0x482fa8a2],bl
  41edf2:	inc    edi
  41edf3:	mov    cs,WORD PTR [eax+ebp*8+0x2dfd7a30]
  41edfa:	cwde   
  41edfb:	lea    eax,ds:0xcf0e5d6d
  41ee01:	add    BYTE PTR [edx+0x25],0x31
  41ee05:	push   0x70
  41ee07:	jb     0x41ee2c
  41ee09:	retf   
  41ee0a:	fnstcw WORD PTR [eax]
  41ee0c:	adc    eax,0xc3d95715
  41ee11:	xchg   esi,eax
  41ee12:	and    dl,BYTE PTR [esi+0x6]
  41ee15:	enter  0x8644,0x8b
  41ee19:	cmp    al,0x8
  41ee1b:	mov    ecx,0xed6baac6
  41ee20:	imul   esp,DWORD PTR es:[edi+0x64e536ec],0x27
  41ee28:	fadd   QWORD PTR [edi+0x1965803b]
  41ee2e:	pop    ecx
  41ee2f:	lea    edx,[ebx+0x48315635]
  41ee35:	push   ecx
  41ee36:	or     eax,0x49550a62
  41ee3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee3c:	bound  ebx,QWORD PTR [esi+0xd301181]
  41ee42:	xor    bh,BYTE PTR [edi-0x3eb6816a]
  41ee48:	(bad)  
  41ee49:	and    eax,DWORD PTR ds:0x839977df
  41ee4f:	add    eax,0x903c9191
  41ee54:	fcomp  DWORD PTR [eax-0x15]
  41ee57:	enter  0xa6ea,0xbc
  41ee5b:	ret    0xb215
  41ee5e:	mov    cl,al
  41ee60:	dec    ebx
  41ee61:	scas   al,BYTE PTR es:[edi]
  41ee62:	fisub  DWORD PTR [eax]
  41ee64:	inc    esp
  41ee65:	cmp    edi,esi
  41ee67:	int3   
  41ee68:	jl     0x41eed9
  41ee6a:	test   BYTE PTR [ebp+0x5b41e5db],ch
  41ee70:	movaps XMMWORD PTR ds:0xe50a3f78,xmm2
  41ee77:	cmp    al,0x83
  41ee79:	dec    ecx
  41ee7a:	test   DWORD PTR [eax],ecx
  41ee7c:	pop    ebp
  41ee7d:	test   BYTE PTR [ecx],ah
  41ee7f:	jl     0x41eed5
  41ee81:	ret    
  41ee82:	push   esi
  41ee83:	test   DWORD PTR [ecx-0x21f4e8e0],eax
  41ee89:	mov    ds:0xc160099,al
  41ee8e:	aam    0x97
  41ee90:	int3   
  41ee91:	jge    0x41ee6d
  41ee93:	pop    ecx
  41ee94:	lahf   
  41ee95:	clc    
  41ee96:	adc    eax,0xdb045452
  41ee9b:	mov    esi,0x7b4326a8
  41eea0:	repnz cmc 
  41eea2:	sti    
  41eea3:	ret    0xc79a
  41eea6:	xor    DWORD PTR [edx+0xfcb1a6c],esi
  41eeac:	mov    dl,0xe3
  41eeae:	add    dh,BYTE PTR [esi]
  41eeb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeb1:	fldcw  WORD PTR [eax-0x12]
  41eeb4:	loopne 0x41ee62
  41eeb6:	adc    DWORD PTR [ebp+0x2cf4cd3f],edx
  41eebc:	ja     0x41ef35
  41eebe:	mov    bh,0x68
  41eec0:	push   edi
  41eec1:	jnp    0x41ee72
  41eec3:	imul   edx,esp,0xcd5a4be9
  41eec9:	test   BYTE PTR [ebx-0x13c6a80b],0x29
  41eed0:	add    DWORD PTR [ebp+eax*4-0x22],ecx
  41eed4:	dec    esp
  41eed5:	push   0xffffffbe
  41eed7:	fsubr  st,st(6)
  41eed9:	les    edi,FWORD PTR [eax-0x1e09c742]
  41eedf:	shl    bl,0x61
  41eee2:	fs push esi
  41eee4:	call   0xf7ebc6e9
  41eee9:	mov    ecx,0x264b549
  41eeee:	dec    ecx
  41eeef:	jmp    0x689b:0xbed5be93
  41eef6:	cmp    ah,BYTE PTR [edi+0x3808fcf5]
  41eefc:	cmc    
  41eefd:	retf   0xfde6
  41ef00:	arpl   WORD PTR [esp+ebx*8+0x38],ax
  41ef04:	iret   
  41ef05:	cmp    eax,0xf78e44cf
  41ef0a:	shr    DWORD PTR [ebx-0x56],cl
  41ef0d:	push   ebx
  41ef0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef0f:	icebp  
  41ef10:	dec    ebx
  41ef11:	and    edi,DWORD PTR cs:[edi-0x5c]
  41ef15:	inc    edi
  41ef16:	jnp    0x41eef0
  41ef18:	sbb    al,0xae
  41ef1a:	stos   BYTE PTR es:[edi],al
  41ef1b:	loopne 0x41ef64
  41ef1d:	aad    0xa8
  41ef1f:	jne    0x41eef8
  41ef21:	mov    BYTE PTR [eax-0x1f],dl
  41ef24:	std    
  41ef25:	xor    edi,edx
  41ef27:	sbb    al,0x15
  41ef29:	lock jnp 0x41ef71
  41ef2c:	fimul  WORD PTR es:[ecx+eiz*4]
  41ef30:	mov    dl,0xc4
  41ef32:	mov    ds:0xcfc7c5ab,eax
  41ef37:	xchg   esp,eax
  41ef38:	push   0xada0f56b
  41ef3d:	(bad)  
  41ef3f:	xchg   BYTE PTR [ecx+0x6d],bl
  41ef42:	mov    esp,0xad0a1d15
  41ef47:	xchg   ebp,eax
  41ef48:	sub    BYTE PTR [ebp+0x246bab9f],bl
  41ef4e:	sub    eax,0x1bd41ba6
  41ef53:	mov    eax,ds:0x75a22ac0
  41ef58:	dec    ebp
  41ef59:	mov    cl,BYTE PTR [esi]
  41ef5b:	(bad)  
  41ef5c:	imul   BYTE PTR [edx+ebp*8]
  41ef5f:	outs   dx,DWORD PTR ds:[esi]
  41ef60:	sub    BYTE PTR [ecx+ecx*8],cl
  41ef63:	out    0x78,eax
  41ef65:	cld    
  41ef66:	adc    eax,0x347397d1
  41ef6b:	sub    DWORD PTR [edi+0x44],ebx
  41ef6e:	xor    BYTE PTR [edi+0x57f60a0b],bl
  41ef74:	(bad)  [esi-0x38]
  41ef77:	sbb    eax,0xb824ad91
  41ef7c:	adc    al,0x86
  41ef7e:	mov    ebp,0x597b35bc
  41ef83:	sub    dl,cl
  41ef85:	push   esp
  41ef86:	jle    0x41ef6a
  41ef88:	xchg   ebx,eax
  41ef89:	push   esi
  41ef8a:	ins    BYTE PTR es:[edi],dx
  41ef8b:	or     eax,0xf19a8c06
  41ef90:	fwait
  41ef91:	or     DWORD PTR [ecx+0x2b],edi
  41ef94:	sbb    eax,0x820b431e
  41ef99:	or     eax,0x40e29943
  41ef9e:	mov    edi,0xf1bc2860
  41efa3:	aas    
  41efa4:	sbb    DWORD PTR [ebx],ebx
  41efa6:	or     dh,BYTE PTR [ecx]
  41efa8:	add    ch,BYTE PTR [ecx-0x23]
  41efab:	and    dh,BYTE PTR [esi+0x7561ad79]
  41efb1:	mov    ebx,0xa2e27837
  41efb6:	popa   
  41efb7:	push   edx
  41efb8:	(bad)  
  41efb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efba:	rcl    DWORD PTR [edx+0x4a7529d],cl
  41efc0:	inc    edx
  41efc1:	(bad)  
  41efc2:	into   
  41efc3:	dec    esp
  41efc4:	call   0xbc66:0x19edb476
  41efcb:	mov    BYTE PTR [esi-0x6cedbd5],bl
  41efd1:	scas   eax,DWORD PTR es:[edi]
  41efd2:	gs lahf 
  41efd4:	je     0x41ef9a
  41efd6:	imul   ecx,DWORD PTR [edx+ecx*2],0x64
  41efda:	or     DWORD PTR [edi-0x4481c533],0xffffffac
  41efe1:	pop    ss
  41efe2:	gs mov edi,0xb007e1f4
  41efe8:	nop
  41efe9:	pop    esi
  41efea:	sub    al,0x8a
  41efec:	ror    bh,0xf7
  41efef:	dec    ebx
  41eff0:	xor    ebx,0xffffffb8
  41eff3:	imul   eax,DWORD PTR [eax+eax*1-0x77a3a9d8],0x70
  41effb:	fs add eax,DWORD PTR ss:[eax+edx*1-0x180f96ef]
  41f004:	jge    0x41f084
  41f006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f007:	mov    al,ds:0x6bbf8de3
  41f00c:	jbe    0x41f02b
  41f00e:	in     al,0xbd
  41f010:	rcr    BYTE PTR [edi-0x66],0xf9
  41f014:	xchg   ebx,eax
  41f015:	loope  0x41efe7
  41f017:	call   0xdfa:0x51dd0b61
  41f01e:	scas   al,BYTE PTR es:[edi]
  41f01f:	sahf   
  41f020:	sub    ecx,DWORD PTR [esi]
  41f022:	pop    esp
  41f023:	loopne 0x41f072
  41f025:	inc    esp
  41f026:	xlat   BYTE PTR ds:[ebx]
  41f027:	aaa    
  41f028:	sub    BYTE PTR [edx-0x46c4bcae],dh
  41f02e:	ss je  0x41efcf
  41f031:	in     al,dx
  41f032:	xchg   ebp,eax
  41f033:	jnp    0x41f08b
  41f035:	mov    edx,?
  41f037:	cdq    
  41f038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f039:	test   DWORD PTR [esp+ecx*2],0xb06b7fc9
  41f040:	pop    ebx
  41f041:	or     DWORD PTR [esi+ecx*4],edi
  41f044:	or     esp,DWORD PTR [esi+0x7e8560fe]
  41f04a:	lahf   
  41f04b:	jecxz  0x41efdd
  41f04d:	push   edi
  41f04e:	(bad)  
  41f04f:	loop   0x41f029
  41f051:	or     eax,0xed1cb0da
  41f056:	mov    edx,0xe506e157
  41f05b:	(bad)  
  41f05c:	in     eax,dx
  41f05d:	or     ah,BYTE PTR [ebp-0x66]
  41f060:	xchg   esi,eax
  41f061:	int3   
  41f062:	jp     0x41f09f
  41f064:	jb     0x41f0d3
  41f066:	pop    edx
  41f067:	ss cmc 
  41f069:	aaa    
  41f06a:	cmp    eax,0xcc295129
  41f06f:	mov    al,0xab
  41f071:	call   0x1ad2:0x644ca80e
  41f078:	mov    al,0xcd
  41f07a:	dec    edi
  41f07b:	push   0xdf4beca
  41f080:	popa   
  41f081:	and    DWORD PTR [edx+0x61],0x25
  41f085:	(bad)  
  41f086:	cli    
  41f087:	(bad)  
  41f088:	mov    dl,0xda
  41f08a:	sar    BYTE PTR [ecx+0x3232fb16],cl
  41f090:	sub    bl,dh
  41f092:	push   esp
  41f093:	add    bh,BYTE PTR [edi-0x7e4ad1d5]
  41f099:	mov    cl,0x46
  41f09b:	xor    al,0xbf
  41f09d:	or     al,0xe4
  41f09f:	push   ebx
  41f0a0:	adc    eax,0x67b3e3b3
  41f0a5:	or     ebx,esi
  41f0a7:	aam    0xa3
  41f0a9:	pop    eax
  41f0aa:	jmp    0x1ecb58df
  41f0af:	mov    ebx,0x7a82144c
  41f0b4:	jge    0x41f10d
  41f0b6:	std    
  41f0b7:	icebp  
  41f0b8:	aam    0xe8
  41f0ba:	jmp    0x46a1e6ba
  41f0bf:	leave  
  41f0c0:	scas   al,BYTE PTR es:[edi]
  41f0c1:	lods   eax,DWORD PTR ds:[esi]
  41f0c2:	fisubr WORD PTR [esi]
  41f0c4:	cdq    
  41f0c5:	lods   eax,DWORD PTR ds:[esi]
  41f0c6:	sahf   
  41f0c7:	xor    ch,bh
  41f0c9:	mov    ds:0xbe9a371c,al
  41f0ce:	lock int3 
  41f0d0:	mov    WORD PTR [esi],gs
  41f0d2:	push   eax
  41f0d3:	inc    edx
  41f0d4:	rol    BYTE PTR [edx+esi*2-0x25],0x5f
  41f0d9:	clc    
  41f0da:	shr    eax,0x9b
  41f0dd:	mov    BYTE PTR [esi],dl
  41f0df:	aam    0x73
  41f0e1:	push   eax
  41f0e2:	scas   al,BYTE PTR es:[edi]
  41f0e3:	cli    
  41f0e4:	add    DWORD PTR [edx-0x27],esi
  41f0e7:	std    
  41f0e8:	ror    DWORD PTR [esi+0x7c],1
  41f0eb:	mov    cx,0xb20f
  41f0ef:	xchg   esi,eax
  41f0f0:	enter  0xcc6d,0xcd
  41f0f4:	sbb    edi,DWORD PTR [esi+0x20]
  41f0f7:	ret    0xe8e1
  41f0fa:	je     0x41f080
  41f0fc:	xchg   ecx,eax
  41f0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ff:	aad    0xae
  41f101:	lds    edi,FWORD PTR [esi+0x553d41d6]
  41f107:	mov    ebp,0xb266491e
  41f10c:	pop    eax
  41f10d:	test   ecx,ebp
  41f10f:	scas   eax,DWORD PTR es:[edi]
  41f110:	shl    DWORD PTR [edi],0x97
  41f113:	sbb    ch,BYTE PTR [ebx]
  41f115:	cmovb  edi,ebx
  41f118:	in     eax,dx
  41f119:	mov    ds:0xde8e29b5,eax
  41f11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f11f:	dec    ax
  41f121:	pop    ebx
  41f122:	add    BYTE PTR [edi],al
  41f124:	pop    ebp
  41f125:	arpl   WORD PTR [edx],si
  41f127:	(bad)  
  41f128:	pop    ebp
  41f129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f12a:	nop
  41f12b:	test   DWORD PTR [ebx+0x72603242],esi
  41f131:	add    eax,esp
  41f133:	nop
  41f134:	dec    edx
  41f135:	xchg   edx,eax
  41f136:	xor    DWORD PTR [ebx],edi
  41f138:	push   edi
  41f139:	add    DWORD PTR [edx-0x42b27692],edi
  41f13f:	cmp    al,0x71
  41f141:	pop    fs
  41f143:	call   0x43b1dd71
  41f148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f149:	xor    eax,0x2a79d239
  41f14e:	push   es
  41f14f:	add    BYTE PTR ss:[edi],0xb2
  41f153:	das    
  41f154:	outs   dx,BYTE PTR ds:[esi]
  41f155:	out    0xa,al
  41f157:	jns    0x41f175
  41f159:	inc    edx
  41f15a:	sbb    DWORD PTR [ebx],esi
  41f15c:	int    0x89
  41f15e:	cdq    
  41f15f:	aad    0x6
  41f161:	add    ebp,esi
  41f163:	or     edi,DWORD PTR [ebx-0x3c126a0]
  41f169:	cmp    eax,0xab4aa663
  41f16e:	dec    edx
  41f16f:	mov    eax,0x92f9bfc8
  41f174:	jnp    0x41f1d2
  41f176:	cwde   
  41f177:	or     DWORD PTR [ecx],eax
  41f179:	aad    0x63
  41f17b:	xor    bh,bh
  41f17d:	je     0x41f107
  41f17f:	ret    
  41f180:	inc    edi
  41f181:	cs pop es
  41f183:	outs   dx,BYTE PTR ds:[esi]
  41f184:	cmc    
  41f185:	repz jmp 0xf612c113
  41f18b:	jnp    0x41f1af
  41f18d:	sub    ebx,esi
  41f18f:	pop    ds
  41f190:	retf   0x49f5
  41f193:	mov    ds:0x518a080b,ax
  41f199:	call   0xbb5a:0xe4bc458c
  41f1a0:	add    eax,0xbfecb98d
  41f1a5:	push   edx
  41f1a6:	mov    dl,0xf4
  41f1a8:	dec    esp
  41f1a9:	dec    esi
  41f1aa:	repz add al,0xc5
  41f1ad:	hlt    
  41f1ae:	std    
  41f1af:	out    0xde,eax
  41f1b1:	mov    dh,0x5f
  41f1b3:	dec    edx
  41f1b4:	and    DWORD PTR [ecx],eax
  41f1b6:	and    ecx,ebx
  41f1b8:	add    ebx,DWORD PTR [edx+0x62]
  41f1bb:	lods   ax,WORD PTR ds:[esi]
  41f1bd:	adc    BYTE PTR gs:[eax],dh
  41f1c0:	data16 sbb al,0x4f
  41f1c3:	mov    al,0x99
  41f1c5:	shl    DWORD PTR [edi+ebx*4],1
  41f1c8:	in     eax,dx
  41f1c9:	mov    ecx,gs
  41f1cb:	js     0x41f1ec
  41f1cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ce:	xchg   DWORD PTR [esi+0x719e7917],eax
  41f1d4:	sbb    eax,0x503adf0c
  41f1d9:	into   
  41f1da:	arpl   WORD PTR [eax],si
  41f1dc:	push   edx
  41f1dd:	(bad)  
  41f1de:	fiadd  WORD PTR [ecx+0x13]
  41f1e1:	jno    0x41f22f
  41f1e3:	sub    eax,DWORD PTR [edi]
  41f1e5:	mov    ecx,0x76a292f5
  41f1ea:	and    al,bl
  41f1ec:	scas   al,BYTE PTR es:[edi]
  41f1ed:	push   ebp
  41f1ee:	cmp    al,0xea
  41f1f0:	loopne 0x41f1f9
  41f1f2:	in     eax,dx
  41f1f3:	push   cs
  41f1f4:	fdiv   QWORD PTR [ebx-0x32]
  41f1f7:	fidivr DWORD PTR [eax]
  41f1f9:	push   esi
  41f1fa:	jle    0x41f20f
  41f1fc:	dec    esi
  41f1fd:	aad    0x8
  41f1ff:	lahf   
  41f200:	mov    WORD PTR [edi-0x27ef7b1],?
  41f206:	mov    edx,0x1823bb6a
  41f20b:	call   0x12e67136
  41f210:	and    ah,bh
  41f212:	stc    
  41f213:	add    esi,0x3c
  41f216:	add    al,0xed
  41f218:	cwde   
  41f219:	arpl   WORD PTR [edx-0x2a6a95d6],ax
  41f21f:	jbe    0x41f1c5
  41f221:	adc    edi,esp
  41f223:	jecxz  0x41f227
  41f225:	ret    
  41f226:	lods   al,BYTE PTR ds:[esi]
  41f227:	adc    edx,edi
  41f229:	shl    BYTE PTR [eax+0x38],1
  41f22c:	sti    
  41f22d:	shl    bh,1
  41f22f:	sahf   
  41f230:	stos   DWORD PTR es:[edi],eax
  41f231:	scas   al,BYTE PTR es:[edi]
  41f232:	out    0x84,al
  41f234:	xlat   BYTE PTR ds:[ebx]
  41f235:	stc    
  41f236:	inc    esi
  41f237:	bound  edx,QWORD PTR [eax+ebp*8]
  41f23a:	fcmovnbe st,st(6)
  41f23c:	int    0xfc
  41f23e:	sbb    eax,0x9aca718d
  41f243:	jae    0x41f1eb
  41f245:	mov    WORD PTR [ebx-0x48],?
  41f248:	js     0x41f24f
  41f24a:	stos   BYTE PTR es:[edi],al
  41f24b:	pop    ss
  41f24c:	jg     0x41f2cc
  41f24e:	in     eax,0x37
  41f250:	ins    BYTE PTR es:[edi],dx
  41f251:	shr    BYTE PTR [edi-0x27],0x4e
  41f255:	cmp    edi,ebp
  41f257:	mov    eax,0xdbc279ae
  41f25c:	and    al,0xfb
  41f25e:	sub    DWORD PTR [esi+eiz*1+0xa9f2ebd],ebp
  41f265:	int    0x58
  41f267:	push   ds
  41f268:	outs   dx,DWORD PTR ds:[esi]
  41f269:	div    BYTE PTR [eax-0x50]
  41f26c:	retf   0x4702
  41f26f:	xor    DWORD PTR [edi],eax
  41f271:	out    0x37,al
  41f273:	mov    ds:0x3dbab0d4,al
  41f278:	mov    ah,0x76
  41f27a:	int3   
  41f27b:	xor    ah,BYTE PTR [ebx+0x73a2d859]
  41f281:	and    al,0x46
  41f283:	das    
  41f284:	(bad)  
  41f285:	mov    bh,0x55
  41f287:	cmp    BYTE PTR [ebx+0x7e081530],ah
  41f28d:	stos   BYTE PTR es:[edi],al
  41f28e:	imul   ebx,edi,0x68
  41f291:	pop    ss
  41f292:	mov    ebp,0xa326a422
  41f297:	xchg   DWORD PTR [ebx+esi*4],edx
  41f29a:	neg    BYTE PTR [ebx-0x6]
  41f29d:	aas    
  41f29e:	scas   eax,DWORD PTR es:[edi]
  41f29f:	push   0xffffffdf
  41f2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a2:	(bad)  
  41f2a3:	(bad)  
  41f2a4:	mov    ebp,0xff009c06
  41f2a9:	sbb    BYTE PTR ds:0x7ca0f01c,al
  41f2af:	dec    edi
  41f2b0:	lea    eax,ds:0xd1684ec4
  41f2b6:	dec    eax
  41f2b7:	sbb    BYTE PTR [ecx+0x28],ch
  41f2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2bb:	push   ds
  41f2bc:	call   FWORD PTR [ecx]
  41f2be:	stos   DWORD PTR es:[edi],eax
  41f2bf:	fs mov al,0x88
  41f2c2:	outs   dx,DWORD PTR ds:[esi]
  41f2c3:	(bad)
  41f2c8:	sbb    DWORD PTR [ecx],0xeb54044d
  41f2ce:	or     al,0xd6
  41f2d0:	jb     0x41f30b
  41f2d2:	push   esi
  41f2d3:	data16 mov dh,0x6b
  41f2d6:	mov    edi,0x7e2b1243
  41f2db:	rcl    BYTE PTR [edi-0x71f796a3],cl
  41f2e1:	(bad)  [ebp+0x17]
  41f2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e5:	inc    edx
  41f2e6:	mov    ah,0x3b
  41f2e8:	jmp    0xb7b1:0xcaeef231
  41f2ef:	pop    es
  41f2f0:	inc    ecx
  41f2f1:	mul    BYTE PTR [eax]
  41f2f3:	jg     0x41f361
  41f2f5:	sbb    edx,DWORD PTR [esi]
  41f2f7:	addr16 (bad) 
  41f2f9:	daa    
  41f2fa:	sub    al,0x5e
  41f2fc:	leave  
  41f2fd:	mov    ds:0xbc1fb0ab,eax
  41f302:	sar    BYTE PTR [eax+ebp*4+0x16ed63e2],1
  41f309:	or     al,0xeb
  41f30b:	cld    
  41f30c:	mov    cl,0xec
  41f30e:	(bad)  
  41f30f:	je     0x41f37c
  41f311:	sub    ebp,DWORD PTR [eax]
  41f313:	dec    esi
  41f314:	adc    al,0xb7
  41f316:	(bad)  
  41f317:	popf   
  41f318:	mov    ch,0x8e
  41f31a:	inc    ebp
  41f31b:	jge    0x41f368
  41f31d:	and    esi,DWORD PTR [edi]
  41f31f:	pop    edx
  41f320:	xchg   ebx,eax
  41f321:	mov    ecx,0x24f78d29
  41f326:	add    ebp,DWORD PTR [ecx]
  41f328:	pop    eax
  41f329:	mov    DWORD PTR [eax-0x6b8380c0],eax
  41f32f:	das    
  41f330:	test   BYTE PTR [edi-0x63c9cc4f],ch
  41f336:	pop    es
  41f337:	jo     0x41f397
  41f339:	je     0x41f39b
  41f33b:	arpl   WORD PTR [edx+0x6a],si
  41f33e:	cmp    BYTE PTR [ecx+0x5f],cl
  41f341:	icebp  
  41f342:	sbb    eax,0x13d5e651
  41f347:	xor    BYTE PTR gs:[edx],0x47
  41f34b:	adc    bl,ch
  41f34d:	mov    ss,esp
  41f34f:	mov    ebx,0x2c28c425
  41f354:	std    
  41f355:	leave  
  41f356:	dec    edi
  41f357:	push   ebp
  41f358:	mov    dh,0xb4
  41f35a:	xchg   edi,eax
  41f35b:	add    eax,0xa254a9f3
  41f360:	fsubr  QWORD PTR [edx+0x13]
  41f363:	rcr    BYTE PTR [esi+0x757004c6],0x23
  41f36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f36b:	enter  0x6e43,0x8f
  41f36f:	shr    DWORD PTR [edi-0x78],0xd8
  41f373:	lea    edi,[esi+0x43]
  41f376:	(bad)  
  41f377:	jg     0x41f34a
  41f379:	arpl   WORD PTR [ebp+0x5d],sp
  41f37c:	sub    eax,0xd325b1ea
  41f381:	test   eax,0xd59fc0ee
  41f386:	jb     0x41f30d
  41f388:	aaa    
  41f389:	pop    edx
  41f38a:	cmp    dh,BYTE PTR [bx+si]
  41f38d:	inc    ebp
  41f38e:	ins    BYTE PTR es:[edi],dx
  41f38f:	xchg   ebp,eax
  41f390:	repnz dec ebp
  41f392:	sub    bh,BYTE PTR [ecx]
  41f394:	and    BYTE PTR [eax+0x324a205c],0xfe
  41f39b:	cmp    cl,bl
  41f39d:	push   eax
  41f39e:	fst    QWORD PTR [esp+0x5f355102]
  41f3a5:	dec    edx
  41f3a6:	push   ecx
  41f3a7:	dec    edx
  41f3a8:	adc    al,0x5f
  41f3aa:	inc    ecx
  41f3ab:	rcr    dl,0x20
  41f3ae:	xor    DWORD PTR [ecx],ecx
  41f3b0:	sbb    DWORD PTR [ebp-0x635faac4],eax
  41f3b6:	dec    esi
  41f3b7:	mov    eax,0x641e551c
  41f3bc:	loope  0x41f41b
  41f3be:	and    al,0x38
  41f3c0:	add    ebp,edi
  41f3c2:	fmulp  st(6),st
  41f3c4:	push   ebx
  41f3c5:	repnz cmc 
  41f3c7:	out    0x59,al
  41f3c9:	test   al,0x61
  41f3cb:	sub    edi,ebx
  41f3cd:	mov    dh,BYTE PTR [ebx]
  41f3cf:	sub    al,0xce
  41f3d1:	out    dx,al
  41f3d2:	call   FWORD PTR [eax]
  41f3d4:	pop    ebp
  41f3d5:	and    BYTE PTR [eax],bh
  41f3d7:	jns    0x41f44b
  41f3d9:	xchg   edx,eax
  41f3da:	in     al,0x86
  41f3dc:	or     edi,DWORD PTR [eax+eax*2]
  41f3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3e0:	add    esp,DWORD PTR [eax-0x48514493]
  41f3e6:	sbb    DWORD PTR [edi+0x63],ecx
  41f3e9:	or     eax,0xf31a0304
  41f3ee:	mov    bh,0x5
  41f3f0:	pop    edi
  41f3f1:	lock jns 0x41f3bd
  41f3f4:	imul   eax,DWORD PTR [ecx+0x35],0xffffffdd
  41f3f8:	retf   
  41f3f9:	repz leave 
  41f3fb:	sbb    bl,BYTE PTR [ecx-0x3c]
  41f3fe:	lea    edi,[ebx+0x11]
  41f401:	push   eax
  41f402:	cmp    edi,DWORD PTR [edi+ebp*2+0x2bd3c696]
  41f409:	hlt    
  41f40a:	mov    ds:0x5311bc28,eax
  41f40f:	cmc    
  41f410:	ds jge 0x41f439
  41f413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f414:	dec    esp
  41f415:	xor    eax,esi
  41f417:	sub    al,BYTE PTR [esi-0x5d]
  41f41a:	xor    cl,BYTE PTR [ecx]
  41f41c:	xor    BYTE PTR [edx],al
  41f41e:	mov    esp,esp
  41f420:	sbb    eax,0x4086c5b9
  41f425:	rol    bh,0x29
  41f428:	imul   eax,DWORD PTR [esi+edi*2+0x5e],0x2e85fc97
  41f430:	mov    ds:0x2be205a9,eax
  41f435:	scas   eax,DWORD PTR es:[edi]
  41f436:	add    eax,0xbcab78d
  41f43b:	inc    eax
  41f43c:	push   esp
  41f43d:	lea    ecx,[ebp-0x6e]
  41f440:	hlt    
  41f441:	gs popf 
  41f443:	cli    
  41f444:	pop    ss
  41f445:	mov    ds:0x948ab0e5,eax
  41f44a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f44b:	push   esi
  41f44c:	jne    0x41f495
  41f44e:	into   
  41f44f:	fldenv [ecx-0x6c]
  41f452:	dec    eax
  41f453:	mov    eax,0x6d4826f4
  41f458:	mov    DWORD PTR [edi],edi
  41f45a:	inc    edi
  41f45b:	xor    ebx,ebx
  41f45d:	mov    edi,0x48b02b6a
  41f462:	dec    edx
  41f463:	inc    eax
  41f464:	or     DWORD PTR [edi-0x258b7161],edx
  41f46a:	inc    edx
  41f46b:	lods   eax,DWORD PTR ds:[esi]
  41f46c:	dec    edi
  41f46d:	sub    bh,bh
  41f46f:	imul   cl
  41f471:	sbb    eax,0x8663db8e
  41f476:	mov    dl,0xc2
  41f478:	and    cl,BYTE PTR [ebx-0x22]
  41f47b:	in     al,0x12
  41f47d:	push   ss
  41f47e:	and    bl,al
  41f480:	mov    dh,0x94
  41f482:	mov    ecx,0xb5863588
  41f487:	ins    BYTE PTR es:[edi],dx
  41f488:	clc    
  41f489:	je     0x41f4d3
  41f48b:	fs jp  0x41f43a
  41f48e:	dec    esp
  41f48f:	or     eax,0x437ff85d
  41f494:	ins    DWORD PTR es:[edi],dx
  41f495:	or     edi,DWORD PTR [edx]
  41f497:	push   edx
  41f498:	addr16 pop esi
  41f49a:	sbb    ah,0x97
  41f49d:	xor    DWORD PTR [eax+edx*4],esp
  41f4a0:	in     al,dx
  41f4a1:	add    BYTE PTR [ebx+ecx*2+0x5e8992c3],dh
  41f4a8:	in     eax,0xf3
  41f4aa:	cmp    ebx,ebx
  41f4ac:	and    eax,0xe6c94d21
  41f4b1:	pop    DWORD PTR [ebx+eiz*4-0x4a]
  41f4b5:	push   eax
  41f4b6:	dec    eax
  41f4b7:	xchg   esi,eax
  41f4b8:	or     al,0xec
  41f4ba:	mov    eax,0xeb036327
  41f4bf:	pushf  
  41f4c0:	std    
  41f4c1:	cmp    DWORD PTR [edx],esp
  41f4c3:	not    BYTE PTR es:[ecx]
  41f4c6:	jp     0x41f4ec
  41f4c8:	xor    BYTE PTR gs:[ebx+0x28],ah
  41f4cc:	xchg   edx,eax
  41f4cd:	lock je 0x41f4d5
  41f4d0:	stc    
  41f4d1:	xor    edx,DWORD PTR [eax-0x9b0e776]
  41f4d7:	cld    
  41f4d8:	mov    ds:0x289c3144,al
  41f4dd:	ficomp WORD PTR [edx+0x4c]
  41f4e0:	ins    BYTE PTR es:[edi],dx
  41f4e1:	int    0xd8
  41f4e3:	cmp    eax,0xbf414945
  41f4e8:	push   ebp
  41f4e9:	sbb    ah,BYTE PTR [edx+0xf]
  41f4ec:	in     eax,dx
  41f4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ee:	imul   BYTE PTR [eax+0x56ef9644]
  41f4f4:	sbb    bh,bl
  41f4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f7:	nop
  41f4f8:	lods   al,BYTE PTR ds:[esi]
  41f4f9:	dec    ebp
  41f4fa:	xchg   WORD PTR [edx],dx
  41f4fd:	pop    ebx
  41f4fe:	iret   
  41f4ff:	mov    esp,0x4c05e4b7
  41f504:	jns    0x41f4aa
  41f506:	sub    DWORD PTR [esi],ecx
  41f508:	popf   
  41f509:	adc    BYTE PTR [esi],dh
  41f50b:	pushf  
  41f50c:	jge    0x41f527
  41f50e:	push   eax
  41f50f:	pop    ebx
  41f510:	jecxz  0x41f578
  41f512:	sbb    edx,DWORD PTR [edi+0x1bf303cb]
  41f518:	bnd jo 0x41f4a1
  41f51b:	lods   eax,DWORD PTR ds:[esi]
  41f51c:	cmc    
  41f51d:	sahf   
  41f51e:	mov    ds:0xae4c83e1,eax
  41f523:	add    edi,edi
  41f525:	retf   
  41f526:	cmp    DWORD PTR [esi+0x7c22ed0f],edi
  41f52c:	sbb    al,0xa8
  41f52e:	je     0x41f4e1
  41f530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f531:	std    
  41f532:	ret    0xefeb
  41f535:	cmp    ah,BYTE PTR [ebx]
  41f537:	xchg   ecx,eax
  41f538:	adc    dl,BYTE PTR [ecx+edx*4+0x1544dcaf]
  41f53f:	je     0x41f5b3
  41f541:	loopne 0x41f559
  41f543:	push   0xf5f1c546
  41f548:	lods   al,BYTE PTR ds:[esi]
  41f549:	fistp  WORD PTR [esi+0x3768c2f1]
  41f54f:	pop    ds
  41f550:	lds    esi,FWORD PTR [edi]
  41f552:	jmp    0xee1d:0x4106d8fe
  41f559:	dec    ecx
  41f55a:	retf   0xbdf3
  41f55d:	jmp    0x159e:0x159b773
  41f564:	jg     0x41f5d6
  41f566:	adc    al,0x31
  41f568:	sbb    BYTE PTR [ecx],ah
  41f56a:	das    
  41f56b:	dec    edi
  41f56c:	stos   DWORD PTR es:[edi],eax
  41f56d:	sbb    eax,0x2d0e0445
  41f572:	sub    al,0x1e
  41f574:	inc    edi
  41f575:	push   edx
  41f576:	rol    DWORD PTR [edi-0x21],cl
  41f579:	pop    ebx
  41f57a:	fmul   st,st(7)
  41f57c:	cmp    al,0xb2
  41f57e:	mov    ch,0x32
  41f580:	mov    ch,ah
  41f582:	cmp    al,0x83
  41f584:	cmp    eax,0xcd81b9a5
  41f589:	hlt    
  41f58a:	call   0x36acebf4
  41f58f:	inc    esp
  41f590:	scas   eax,DWORD PTR es:[edi]
  41f591:	inc    esp
  41f592:	pop    esi
  41f593:	fwait
  41f594:	sbb    dh,BYTE PTR cs:0x9c170455
  41f59b:	cmp    BYTE PTR [esi+ebp*4],bh
  41f59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f59f:	dec    ebx
  41f5a0:	push   es
  41f5a1:	push   ss
  41f5a2:	nop
  41f5a3:	stc    
  41f5a4:	loop   0x41f621
  41f5a6:	jae    0x41f595
  41f5a8:	sar    DWORD PTR [esi-0x23],cl
  41f5ab:	pop    es
  41f5ac:	mov    ecx,0xd6b11d3
  41f5b1:	jmp    0x6b4d:0x2a57ff09
  41f5b8:	in     al,0x2c
  41f5ba:	jle    0x41f5f6
  41f5bc:	push   ds
  41f5bd:	jg     0x41f5ff
  41f5bf:	ficom  WORD PTR [ebx+0x37]
  41f5c2:	dec    ebp
  41f5c3:	push   ecx
  41f5c4:	jl     0x41f625
  41f5c6:	mov    al,0x2b
  41f5c8:	in     al,dx
  41f5c9:	jbe    0x41f5f1
  41f5cb:	xchg   esp,eax
  41f5cc:	mov    edi,0x261765e4
  41f5d1:	loopne 0x41f637
  41f5d3:	sahf   
  41f5d4:	jmp    0x41f5fe
  41f5d6:	fst    QWORD PTR [ecx-0x73]
  41f5d9:	stc    
  41f5da:	sbb    ah,BYTE PTR [ecx+0x6c]
  41f5dd:	(bad)  
  41f5df:	adc    al,0x26
  41f5e1:	or     eax,0xfd3db873
  41f5e6:	sahf   
  41f5e7:	jle    0x41f5ab
  41f5e9:	scas   al,BYTE PTR es:[edi]
  41f5ea:	(bad)  
  41f5eb:	jle    0x41f5c4
  41f5ed:	and    BYTE PTR [esp+edx*2+0x18],bl
  41f5f1:	push   0xffffffe4
  41f5f3:	sub    bl,BYTE PTR [edx]
  41f5f5:	cmc    
  41f5f6:	mov    bl,0xcb
  41f5f8:	test   edx,eax
  41f5fa:	fadd   DWORD PTR [esi-0x22]
  41f5fd:	jne    0x41f5bd
  41f5ff:	jns    0x41f63d
  41f601:	pop    esi
  41f602:	nop
  41f603:	jg     0x41f61f
  41f605:	shl    DWORD PTR [ebx],1
  41f607:	lods   eax,DWORD PTR ds:[esi]
  41f608:	cwde   
  41f609:	(bad)  
  41f60a:	dec    esi
  41f60b:	mov    bl,0x17
  41f60d:	mov    edx,0x552b4464
  41f612:	loop   0x41f59a
  41f614:	cmp    al,0xf0
  41f616:	shl    al,cl
  41f618:	push   eax
  41f619:	inc    DWORD PTR [ebx]
  41f61b:	(bad)  
  41f61c:	xor    al,0x48
  41f61e:	cmp    eax,DWORD PTR [eax]
  41f620:	test   eax,0x627a35dd
  41f625:	lds    ebx,FWORD PTR [ecx-0x53]
  41f628:	popa   
  41f629:	test   al,0x59
  41f62b:	bound  esi,QWORD PTR [edi+eiz*2-0x42]
  41f62f:	in     eax,dx
  41f630:	adc    eax,edi
  41f632:	ds pushf 
  41f634:	in     eax,dx
  41f635:	jb     0x41f6a9
  41f637:	mov    dl,0x22
  41f639:	push   ecx
  41f63a:	push   ds
  41f63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f63c:	add    eax,0xe5d44c3d
  41f641:	or     al,0x0
  41f643:	xchg   ebx,eax
  41f644:	sbb    BYTE PTR [ebp+0x6c647bf6],dh
  41f64a:	lds    edx,FWORD PTR [eax+eax*2-0x5e]
  41f64e:	out    0xd9,al
  41f650:	rcr    DWORD PTR [eax],0xfc
  41f653:	jmp    0x41f5dc
  41f655:	out    dx,al
  41f656:	call   0xfe02:0xd366a10e
  41f65d:	mov    al,ds:0xdffecc7f
  41f662:	idiv   BYTE PTR [edi-0x1a]
  41f665:	ja     0x41f6b8
  41f667:	fadd   DWORD PTR [eax+ecx*4-0x317ffeb1]
  41f66e:	mov    bh,dl
  41f670:	jo     0x41f65f
  41f672:	jle    0x41f62d
  41f674:	mov    BYTE PTR [esi],bl
  41f676:	add    al,BYTE PTR [ebx+0x4b]
  41f679:	sub    dl,BYTE PTR [ebx]
  41f67b:	sahf   
  41f67c:	inc    eax
  41f67d:	fisttp DWORD PTR [edi]
  41f67f:	xchg   edx,eax
  41f680:	sti    
  41f681:	pop    ds
  41f682:	icebp  
  41f683:	stos   DWORD PTR es:[edi],eax
  41f684:	adc    ebx,edi
  41f686:	dec    ebx
  41f687:	adc    esp,DWORD PTR ds:0xb98d4bb6
  41f68d:	xlat   BYTE PTR gs:[ebx]
  41f68f:	lock mov ?,WORD PTR [edi]
  41f692:	cmp    ebx,edx
  41f694:	xchg   edi,eax
  41f695:	push   0xffffff80
  41f697:	sub    eax,DWORD PTR [ebx-0x58]
  41f69a:	xchg   edx,eax
  41f69b:	pop    es
  41f69c:	add    esi,DWORD PTR [ebx+edx*4-0x40250481]
  41f6a3:	fsubr  QWORD PTR [eax-0x29]
  41f6a6:	pushf  
  41f6a7:	add    edi,eax
  41f6a9:	sub    BYTE PTR ds:0x2e15c6c8,ah
  41f6af:	inc    edx
  41f6b0:	test   ecx,eax
  41f6b2:	(bad)  
  41f6b3:	aad    0xcb
  41f6b5:	mov    ch,0xd0
  41f6b7:	pop    edi
  41f6b8:	lock int3 
  41f6ba:	xchg   BYTE PTR [edi+ebx*2+0x46ef1832],dh
  41f6c1:	pop    esp
  41f6c2:	adc    dl,BYTE PTR [esi]
  41f6c4:	and    DWORD PTR [edx],ebp
  41f6c6:	repz push ebp
  41f6c8:	in     al,0x5a
  41f6ca:	dec    esi
  41f6cb:	mov    BYTE PTR [esi+0xab133b6],bl
  41f6d1:	in     al,0x52
  41f6d3:	das    
  41f6d4:	adc    ebp,DWORD PTR [ebp+0x72162a7d]
  41f6da:	fmul   QWORD PTR [ebx-0x61b2b97d]
  41f6e0:	mov    eax,0x6627d82f
  41f6e5:	daa    
  41f6e6:	aaa    
  41f6e7:	in     al,dx
  41f6e8:	(bad)  
  41f6e9:	pop    eax
  41f6ea:	or     eax,0xff3b5bd2
  41f6ef:	call   0x28c9f71d
  41f6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f5:	(bad)  
  41f6f6:	jg     0x41f698
  41f6f8:	add    edi,DWORD PTR [ebp-0xa]
  41f6fb:	push   ds
  41f6fc:	bnd jo 0x41f6a4
  41f6ff:	cmp    eax,0x45ec53e8
  41f704:	xor    eax,0xe73894cb
  41f709:	lea    esi,[ebx+0x3d838017]
  41f70f:	mov    cl,0x5a
  41f711:	test   al,0x7e
  41f713:	into   
  41f714:	fdivr  DWORD PTR [ebp+0x55]
  41f717:	jae    0x41f708
  41f719:	mov    esp,0x7f9bcc7f
  41f71e:	xor    BYTE PTR [edx+esi*4+0x3d],ch
  41f722:	(bad)  
  41f724:	ror    BYTE PTR ss:[eax+ecx*1],0x58
  41f729:	mov    edi,0xc56648e8
  41f72e:	xchg   BYTE PTR es:[ebp-0x2a747998],al
  41f735:	add    bl,al
  41f737:	shl    ebp,0xe7
  41f73a:	inc    eax
  41f73b:	test   DWORD PTR [ebx+0x7f],edi
  41f73e:	push   ss
  41f73f:	fucomp st(6)
  41f741:	sub    eax,0x1f67385
  41f746:	ins    DWORD PTR es:[edi],dx
  41f747:	xchg   esp,eax
  41f748:	fs mov esp,0x34d98e1
  41f74e:	push   ebp
  41f74f:	rcl    BYTE PTR [esi],cl
  41f751:	cdq    
  41f752:	mov    edx,0x659e6cd2
  41f757:	add    ebx,DWORD PTR [ebx-0x26]
  41f75a:	ja     0x41f7ab
  41f75c:	imul   ebp,DWORD PTR [esi],0x3
  41f75f:	punpckldq mm6,DWORD PTR [esi+ebx*2-0x6]
  41f764:	loope  0x41f7ad
  41f766:	dec    edx
  41f767:	out    dx,eax
  41f768:	mov    dh,0xab
  41f76a:	gs jae 0x41f75d
  41f76d:	int    0xab
  41f76f:	pop    ebp
  41f770:	ss jae 0x41f70f
  41f773:	push   es
  41f774:	and    esp,ecx
  41f776:	push   eax
  41f777:	fnsave [esp+ebx*1+0x503abe73]
  41f77e:	inc    edx
  41f77f:	(bad)  
  41f780:	(bad)  
  41f781:	jb     0x41f7cb
  41f783:	adc    eax,0x7f2b3eb1
  41f788:	jns    0x41f786
  41f78a:	cmp    al,0x83
  41f78c:	sub    BYTE PTR [eax],ah
  41f78e:	inc    edx
  41f78f:	out    dx,al
  41f790:	pcmpgtd mm4,QWORD PTR [ebx]
  41f793:	push   0xffffff82
  41f795:	push   esp
  41f796:	lahf   
  41f797:	loop   0x41f747
  41f799:	std    
  41f79a:	mov    WORD PTR [edi],gs
  41f79c:	push   ebp
  41f79d:	loopne 0x41f799
  41f79f:	xchg   BYTE PTR [edx+0x8],bh
  41f7a2:	fild   DWORD PTR [edx-0x72]
  41f7a5:	fdivr  DWORD PTR [ebx-0xa7f6df8]
  41f7ab:	jns    0x41f7cf
  41f7ad:	or     dh,dh
  41f7af:	dec    ecx
  41f7b0:	lds    edi,FWORD PTR [ecx]
  41f7b2:	inc    edx
  41f7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b4:	test   eax,0x282c03b6
  41f7b9:	push   cs
  41f7ba:	dec    edx
  41f7bb:	fiadd  DWORD PTR [ebx+0x268214f7]
  41f7c1:	xchg   edx,eax
  41f7c2:	jmp    0x41f7ae
  41f7c4:	lahf   
  41f7c5:	int3   
  41f7c6:	dec    ecx
  41f7c7:	(bad)  [edi-0x7a]
  41f7ca:	shr    BYTE PTR [edx-0x20f97a16],1
  41f7d0:	mov    edx,0x4c4f2432
  41f7d5:	test   BYTE PTR [edx],ch
  41f7d7:	inc    ebp
  41f7d8:	sti    
  41f7d9:	lea    ebp,[edi]
  41f7db:	cmp    DWORD PTR [eax+0x48],eax
  41f7de:	dec    edx
  41f7df:	and    dh,ah
  41f7e1:	(bad)  
  41f7e2:	ret    0x27d0
  41f7e5:	sbb    DWORD PTR [ebp-0x385c88f7],edi
  41f7eb:	je     0x41f85a
  41f7ed:	mov    al,0xcd
  41f7ef:	dec    ecx
  41f7f0:	into   
  41f7f1:	cmp    DWORD PTR [ecx],eax
  41f7f3:	lods   eax,DWORD PTR ds:[esi]
  41f7f4:	sub    al,0xd4
  41f7f6:	push   esi
  41f7f7:	sar    BYTE PTR [esp+edx*2+0x4f12d43d],0x50
  41f7ff:	mov    cs,WORD PTR fs:[ebx+0x142a612b]
  41f806:	aas    
  41f807:	imul   DWORD PTR [ecx+0x601997ed]
  41f80d:	fcmovu st,st(1)
  41f80f:	ds lahf 
  41f811:	xor    eax,0x91e83e08
  41f816:	jl     0x41f87b
  41f818:	sub    eax,0x8434b828
  41f81d:	loope  0x41f7a5
  41f81f:	test   BYTE PTR [ebp-0x246bbcf0],0xfc
  41f826:	rcl    DWORD PTR [ecx+0x4355ce4b],1
  41f82c:	sbb    eax,0x6454a8d3
  41f831:	(bad)  
  41f832:	mul    DWORD PTR [esi]
  41f834:	mov    ?,WORD PTR ds:0xc0c3e52f
  41f83a:	leave  
  41f83b:	mov    ch,BYTE PTR [edi-0x4e]
  41f83e:	test   DWORD PTR [edi-0x3ce3b97a],eax
  41f844:	adc    edi,ebx
  41f846:	mov    bl,0x7c
  41f848:	cmc    
  41f849:	lock ja 0x41f861
  41f84c:	aas    
  41f84d:	imul   edi,DWORD PTR [esi],0xc9901015
  41f853:	outs   dx,DWORD PTR ds:[esi]
  41f854:	cli    
  41f855:	lock sub al,0x6a
  41f858:	xor    al,0x7
  41f85a:	jl     0x41f83b
  41f85c:	jl     0x41f803
  41f85e:	xchg   DWORD PTR [edx+edi*4],ecx
  41f861:	xchg   esi,eax
  41f862:	mov    bl,0xf
  41f864:	jnp    0x41f8b7
  41f866:	mov    bl,0x9e
  41f868:	aad    0xd2
  41f86a:	cli    
  41f86b:	call   0x8728:0x7450bf37
  41f872:	mov    eax,0xeff8fbcc
  41f877:	hlt    
  41f878:	add    cl,BYTE PTR [eax-0x7d65d292]
  41f87e:	sub    eax,0x35abab77
  41f883:	je     0x41f812
  41f885:	jecxz  0x41f8b6
  41f887:	push   es
  41f888:	enter  0xae21,0x2
  41f88c:	test   al,0xb6
  41f88e:	test   al,0x4a
  41f890:	retf   
  41f891:	in     eax,dx
  41f892:	rcl    BYTE PTR [edi],1
  41f894:	and    dl,BYTE PTR [ecx+ecx*4-0x5b]
  41f898:	pop    edi
  41f899:	sbb    BYTE PTR [ebp+0x5165da49],ah
  41f89f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a0:	cmp    BYTE PTR [ecx+0x34521f5],bl
  41f8a6:	push   cs
  41f8a7:	(bad)  
  41f8a8:	(bad)  
  41f8a9:	fiadd  DWORD PTR [edi+0x71906ebc]
  41f8af:	and    al,0xc9
  41f8b1:	popf   
  41f8b2:	sbb    al,BYTE PTR [ebx]
  41f8b4:	adc    al,cl
  41f8b6:	dec    esi
  41f8b7:	mov    al,0xdc
  41f8b9:	xor    eax,0x9f94cdd8
  41f8be:	push   edi
  41f8bf:	out    0xcb,eax
  41f8c1:	iret   
  41f8c2:	inc    ecx
  41f8c3:	aam    0x26
  41f8c5:	xchg   BYTE PTR [ecx+eax*8],ah
  41f8c8:	addr16 out 0x44,eax
  41f8cb:	xlat   BYTE PTR ds:[ebx]
  41f8cc:	aad    0x3
  41f8ce:	inc    eax
  41f8cf:	call   0xa3589190
  41f8d4:	jne    0x41f886
  41f8d6:	pop    ebp
  41f8d7:	push   ds
  41f8d8:	mov    esi,0x66730cab
  41f8dd:	mov    edx,0x94ae8982
  41f8e2:	sub    ebx,DWORD PTR [ecx+ebx*8+0x1c2a7726]
  41f8e9:	mov    bh,BYTE PTR ds:0xe2fc08d5
  41f8ef:	push   es
  41f8f0:	sub    ecx,DWORD PTR [edi]
  41f8f2:	sub    ecx,eax
  41f8f4:	mov    edx,0x5b0dfcc8
  41f8f9:	pop    ebx
  41f8fa:	mov    ecx,DWORD PTR [edi+0x38]
  41f8fd:	pop    esp
  41f8fe:	std    
  41f8ff:	fist   WORD PTR [edx-0x39]
  41f902:	inc    ebp
  41f903:	sbb    BYTE PTR [eax],bh
  41f905:	mov    DWORD PTR [esi-0x2ccd0869],0xb8ee6c0f
  41f90f:	mov    WORD PTR [esi+0x2866f5cc],gs
  41f915:	imul   ebx,ebx,0xfffffffb
  41f918:	loopne 0x41f8a2
  41f91a:	mov    cs,WORD PTR [ebp-0xf]
  41f91d:	or     edx,ecx
  41f91f:	mov    eax,0x77134bf6
  41f924:	(bad)  
  41f925:	inc    ecx
  41f926:	sub    al,0xd
  41f928:	neg    esp
  41f92a:	lds    ebp,FWORD PTR [ecx]
  41f92c:	mov    ch,0x2
  41f92e:	ss (bad) 
  41f930:	sub    BYTE PTR [esi+0xb],dl
  41f933:	pop    eax
  41f934:	sbb    ah,BYTE PTR [ebx]
  41f936:	dec    edx
  41f937:	adc    DWORD PTR [eax],eax
  41f939:	jb     0x41f8d3
  41f93b:	data16 mov al,ss:0xfc94e695
  41f942:	cld    
  41f943:	adc    al,0x23
  41f945:	sahf   
  41f946:	popa   
  41f947:	push   DWORD PTR [edi+0x2399287c]
  41f94d:	xor    edx,ecx
  41f94f:	das    
  41f950:	(bad)  
  41f952:	out    dx,al
  41f953:	lds    edx,FWORD PTR [eax-0x7]
  41f956:	mov    edx,0xbab2f406
  41f95b:	mov    ecx,0x219522ce
  41f960:	inc    edi
  41f961:	pop    esp
  41f962:	leave  
  41f963:	mov    WORD PTR [ebx+0x611a4dd6],es
  41f969:	out    0x31,eax
  41f96b:	(bad)  
  41f96c:	clc    
  41f96d:	shr    DWORD PTR [eax+0x4e3de5ce],cl
  41f973:	nop
  41f974:	clc    
  41f975:	jb     0x41f964
  41f977:	shl    DWORD PTR [esi],0xb8
  41f97a:	push   es
  41f97b:	adc    bl,BYTE PTR [esi-0x495fbef1]
  41f981:	sbb    al,0x11
  41f983:	jp     0x41f992
  41f985:	cli    
  41f986:	xlat   BYTE PTR ds:[ebx]
  41f987:	pop    ebp
  41f988:	arpl   di,di
  41f98a:	cli    
  41f98b:	mov    edi,0x33c47a8b
  41f990:	push   esp
  41f991:	xlat   BYTE PTR ds:[ebx]
  41f992:	lods   eax,DWORD PTR ds:[esi]
  41f993:	jne    0x41f980
  41f995:	push   0xfffffffb
  41f997:	mov    edx,0x4f3c87c1
  41f99c:	adc    BYTE PTR [edi],0x36
  41f99f:	xchg   ecx,eax
  41f9a0:	aaa    
  41f9a1:	jne    0x41f9b8
  41f9a3:	fmul   st(2),st
  41f9a5:	(bad)  
  41f9a7:	jmp    0x2cb2:0x51b80dda
  41f9ae:	dec    ecx
  41f9af:	setns  al
  41f9b2:	push   eax
  41f9b3:	call   0x60e6:0xa6c8b49b
  41f9ba:	retf   0x1d25
  41f9bd:	add    ah,ah
  41f9bf:	jae    0x41f9ec
  41f9c1:	loopne 0x41f9ae
  41f9c3:	fs or  al,0xcf
  41f9c6:	mov    cl,0x61
  41f9c8:	mov    esi,0x83d7fd27
  41f9cd:	aaa    
  41f9ce:	xchg   esi,eax
  41f9cf:	icebp  
  41f9d0:	jbe    0x41f956
  41f9d2:	repnz pop es
  41f9d4:	lods   al,BYTE PTR ds:[esi]
  41f9d5:	and    eax,0xc65b466d
  41f9da:	test   BYTE PTR [edx+0x28],ah
  41f9dd:	fldenv [ebx-0xbac4297]
  41f9e3:	sbb    cl,BYTE PTR [esi]
  41f9e5:	pop    esi
  41f9e6:	or     al,0xf1
  41f9e8:	add    ebx,esi
  41f9ea:	daa    
  41f9eb:	enter  0x95b3,0xe4
  41f9ef:	pop    ebx
  41f9f0:	and    eax,ecx
  41f9f2:	mov    cl,0xac
  41f9f4:	sbb    esp,ebx
  41f9f6:	imul   ebx,ecx,0x54
  41f9f9:	xlat   BYTE PTR ds:[ebx]
  41f9fa:	pop    esi
  41f9fb:	ss xchg esp,eax
  41f9fd:	mov    cl,BYTE PTR [eax]
  41f9ff:	call   0x8702f08d
  41fa04:	mov    edx,0xc019fb59
  41fa09:	outs   dx,DWORD PTR ds:[esi]
  41fa0a:	sub    edx,DWORD PTR [esi+0x29]
  41fa0d:	xchg   dl,al
  41fa0f:	call   0xf1922924
  41fa14:	mov    BYTE PTR [ecx+esi*4],bh
  41fa17:	shr    DWORD PTR [ecx],1
  41fa19:	loop   0x41f9fa
  41fa1b:	fbld   TBYTE PTR [ebx+0x19]
  41fa1e:	xor    dh,dl
  41fa20:	fs jecxz 0x41f9cd
  41fa23:	dec    esi
  41fa24:	dec    edi
  41fa25:	fidiv  WORD PTR [esi]
  41fa27:	push   eax
  41fa28:	add    DWORD PTR [esi+0xae91c56],esi
  41fa2e:	dec    esp
  41fa2f:	fisttp DWORD PTR [edi+0x42]
  41fa32:	push   esi
  41fa33:	mov    ds:0x88fb6d01,eax
  41fa38:	mov    dl,0x8a
  41fa3a:	xchg   ecx,eax
  41fa3b:	dec    ecx
  41fa3c:	out    dx,al
  41fa3d:	sub    DWORD PTR [edi],0xffffffc8
  41fa40:	data16 xlat BYTE PTR fs:[ebx]
  41fa43:	mov    eax,0x8bbde9d3
  41fa48:	out    dx,al
  41fa49:	shl    DWORD PTR [edi],0x8
  41fa4c:	stos   BYTE PTR es:[edi],al
  41fa4d:	in     eax,dx
  41fa4e:	scas   al,BYTE PTR es:[edi]
  41fa4f:	sbb    DWORD PTR [edi+0x7e],ebx
  41fa52:	jmp    0x41f9ea
  41fa54:	jle    0x41fa25
  41fa56:	outs   dx,BYTE PTR ds:[esi]
  41fa57:	dec    ebx
  41fa58:	fsubrp st(0),st
  41fa5a:	ret    0xee1f
  41fa5d:	dec    edi
  41fa5e:	dec    ebx
  41fa5f:	mov    eax,0xa6731ffd
  41fa64:	in     al,dx
  41fa65:	sbb    BYTE PTR [eax-0x4e],ah
  41fa68:	ja     0x41fa61
  41fa6a:	adc    ecx,DWORD PTR [esi+0x54]
  41fa6d:	test   eax,0xbf6a67b3
  41fa72:	neg    DWORD PTR [edi-0x4ea76f19]
  41fa78:	jl     0x41fa7a
  41fa7a:	cmp    al,0xa0
  41fa7c:	or     al,0xb
  41fa7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa7f:	js     0x41faec
  41fa81:	pop    esp
  41fa82:	sub    eax,0x403e3a42
  41fa87:	cmp    DWORD PTR [esi+0x1c2ed540],ebp
  41fa8d:	mov    ds:0x10757d08,al
  41fa92:	fst    DWORD PTR [ecx]
  41fa94:	fsub   QWORD PTR [ebx]
  41fa96:	push   0x69
  41fa98:	mov    ecx,ebx
  41fa9a:	in     eax,dx
  41fa9b:	out    0x38,eax
  41fa9d:	cmp    BYTE PTR [esi+0x7abaebfe],bh
  41faa3:	inc    esp
  41faa4:	scas   eax,DWORD PTR es:[edi]
  41faa5:	repz retf 0x46f2
  41faa9:	scas   eax,DWORD PTR es:[edi]
  41faaa:	mov    al,ds:0x46ba87c1
  41faaf:	fsubrp st(0),st
  41fab1:	xchg   esp,eax
  41fab2:	in     al,dx
  41fab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab4:	mov    al,0xdf
  41fab6:	xor    al,BYTE PTR [edi-0xc]
  41fab9:	ss out dx,al
  41fabb:	mov    edx,0x39090057
  41fac0:	int3   
  41fac1:	in     al,dx
  41fac2:	or     dl,BYTE PTR [ebp-0x762ec5e7]
  41fac8:	dec    edi
  41fac9:	je     0x41fa81
  41facb:	imul   ecx
  41facd:	das    
  41face:	outs   dx,BYTE PTR ds:[esi]
  41facf:	(bad)  
  41fad0:	arpl   WORD PTR [ecx-0x4ab5e485],di
  41fad6:	pop    eax
  41fad7:	in     ax,dx
  41fad9:	push   ss
  41fada:	push   edi
  41fadb:	int3   
  41fadc:	jle    0x41fb43
  41fade:	lods   al,BYTE PTR ds:[esi]
  41fadf:	loopne 0x41fa7f
  41fae1:	aas    
  41fae2:	loope  0x41fb2c
  41fae4:	sub    esp,esp
  41fae6:	sub    eax,DWORD PTR [eax-0x7e]
  41fae9:	cwde   
  41faea:	ror    bl,0x69
  41faed:	jno    0x41fadd
  41faef:	cmp    ah,BYTE PTR [esi]
  41faf1:	fiadd  DWORD PTR [edi]
  41faf3:	cwde   
  41faf4:	das    
  41faf5:	popf   
  41faf6:	(bad)  
  41faf7:	out    0x97,eax
  41faf9:	lea    esi,[ecx+0x639c6aad]
  41faff:	jb     0x41fb57
  41fb01:	imul   esp,DWORD PTR [esi-0x47],0xfffffffe
  41fb05:	(bad)
  41fb09:	lahf   
  41fb0a:	hlt    
  41fb0b:	dec    esi
  41fb0c:	fcmovbe st,st(6)
  41fb0e:	pop    ebp
  41fb0f:	scas   eax,DWORD PTR es:[edi]
  41fb10:	fnsave [ecx]
  41fb12:	push   0x8d38a17f
  41fb17:	loop   0x41fb4f
  41fb19:	jnp    0x41fae7
  41fb1b:	shl    BYTE PTR [edx+0x56e1e36f],1
  41fb21:	aas    
  41fb22:	rcr    esi,1
  41fb24:	mov    edx,0xae1d1db6
  41fb29:	cmp    eax,0x97e0c3dc
  41fb2e:	xor    dh,bh
  41fb30:	fldcw  WORD PTR [ecx-0x72]
  41fb33:	test   eax,0xb97989cb
  41fb38:	popf   
  41fb39:	fwait
  41fb3a:	test   BYTE PTR [edi],dh
  41fb3c:	inc    ebp
  41fb3d:	ficomp WORD PTR [ebx-0x5a]
  41fb40:	or     BYTE PTR ss:[eax],0xe8
  41fb44:	xchg   BYTE PTR [ebp+0x25ca918d],al
  41fb4a:	in     eax,0x93
  41fb4c:	call   0x5ba2:0x4554b1e3
  41fb53:	xlat   BYTE PTR ds:[ebx]
  41fb54:	pop    ss
  41fb55:	popa   
  41fb56:	cmp    edx,0xe9d0ea50
  41fb5c:	jne    0x41fae2
  41fb5e:	test   BYTE PTR [esi],bl
  41fb60:	outs   dx,DWORD PTR ds:[esi]
  41fb61:	lahf   
  41fb62:	ds adc ah,cl
  41fb65:	das    
  41fb66:	test   DWORD PTR ds:0xd94bd2f5,ebx
  41fb6c:	lds    ebp,FWORD PTR [edi+eax*1+0x1d99f7fe]
  41fb73:	aas    
  41fb74:	jbe    0x41fbf2
  41fb76:	inc    esi
  41fb77:	and    dl,BYTE PTR [eax-0x2604f67]
  41fb7d:	ficomp WORD PTR [ecx]
  41fb7f:	xor    al,0xa3
  41fb81:	rcl    BYTE PTR [edx+eiz*2],0x7a
  41fb85:	jbe    0x41fb8e
  41fb87:	imul   DWORD PTR [edx]
  41fb89:	fisub  DWORD PTR [esi-0x66]
  41fb8c:	fistp  DWORD PTR [esi]
  41fb8e:	and    BYTE PTR [ebp+0x32],ch
  41fb91:	push   edi
  41fb92:	dec    ebp
  41fb93:	dec    edi
  41fb94:	cwde   
  41fb95:	inc    ebx
  41fb96:	xor    dh,BYTE PTR [eax+0xd]
  41fb99:	stos   BYTE PTR es:[edi],al
  41fb9a:	enter  0xa6ac,0x8c
  41fb9e:	mov    esp,0x86ebc3a8
  41fba3:	pop    es
  41fba4:	and    eax,0x8c44e44d
  41fba9:	or     dh,ah
  41fbab:	clc    
  41fbac:	repz mov dh,0x97
  41fbaf:	clc    
  41fbb0:	ja     0x41fc22
  41fbb2:	add    BYTE PTR [eax+eiz*8+0x53],dh
  41fbb6:	or     edi,DWORD PTR [esi+0x44e30ec0]
  41fbbc:	push   edi
  41fbbd:	daa    
  41fbbe:	fmul   DWORD PTR [ebx]
  41fbc0:	scas   eax,DWORD PTR es:[edi]
  41fbc1:	cs (bad) 
  41fbc3:	test   al,0xdf
  41fbc5:	cdq    
  41fbc6:	repz mov ebp,0x62bdcfaa
  41fbcc:	mov    al,0xb2
  41fbce:	pop    esp
  41fbcf:	mov    ah,0xbe
  41fbd1:	jle    0x41fb8d
  41fbd3:	inc    ebp
  41fbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbd5:	inc    ebx
  41fbd6:	fist   WORD PTR [edx-0x48]
  41fbd9:	fst    DWORD PTR [eax+eiz*2-0x1fb28c60]
  41fbe0:	sub    eax,0x33c165ba
  41fbe5:	jb     0x41fc38
  41fbe7:	shl    DWORD PTR [edx-0x5776682b],0x84
  41fbee:	xlat   BYTE PTR ds:[ebx]
  41fbef:	inc    ebp
  41fbf0:	jmp    0xa5a4:0x7d33d089
  41fbf7:	jle    0x41fbd7
  41fbf9:	add    eax,0x43db6a47
  41fbfe:	add    eax,ebx
  41fc00:	pop    ss
  41fc01:	sar    DWORD PTR [ebx+0x7bc8431e],0x49
  41fc08:	pop    ecx
  41fc09:	loop   0x41fbaf
  41fc0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc0c:	lock jmp 0x41fc2c
  41fc0f:	fwait
  41fc10:	inc    ecx
  41fc11:	cwde   
  41fc12:	repz inc ebx
  41fc14:	sub    al,BYTE PTR [ecx+0x2]
  41fc17:	fsubr  st(7),st
  41fc19:	sti    
  41fc1a:	mov    edx,0x82a7920b
  41fc1f:	push   ebx
  41fc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc21:	in     eax,0x82
  41fc23:	jo     0x41fc4d
  41fc25:	aam    0x18
  41fc27:	add    ah,al
  41fc29:	loope  0x41fc26
  41fc2b:	fwait
  41fc2c:	pushf  
  41fc2d:	in     al,dx
  41fc2e:	sub    al,0x1f
  41fc30:	pop    ebp
  41fc31:	mov    eax,0xa0e8c9b1
  41fc36:	out    dx,eax
  41fc37:	enter  0x9754,0x6
  41fc3b:	xor    edx,eax
  41fc3d:	jae    0x41fc02
  41fc3f:	xchg   DWORD PTR [ecx-0xe22b104],ebp
  41fc45:	mov    dl,0xe5
  41fc47:	jg     0x41fca7
  41fc49:	aad    0x55
  41fc4b:	jnp    0x41fbe0
  41fc4d:	mov    ebp,0x6149ad2
  41fc52:	mov    ecx,0xe416e4f1
  41fc57:	retf   0x93d0
  41fc5a:	jmp    0x5b5e9667
  41fc5f:	cdq    
  41fc60:	leave  
  41fc61:	loop   0x41fc7d
  41fc63:	std    
  41fc64:	neg    BYTE PTR [ebx+ecx*1+0x7fc0bb55]
  41fc6b:	inc    esp
  41fc6c:	test   BYTE PTR [ecx+ebp*4-0x402074c2],bh
  41fc73:	cmc    
  41fc74:	ins    DWORD PTR es:[edi],dx
  41fc75:	outs   dx,DWORD PTR ds:[esi]
  41fc76:	jp     0x41fc04
  41fc78:	mov    edx,0x1690966d
  41fc7d:	ret    0x22b6
  41fc80:	jns    0x41fc1c
  41fc82:	test   DWORD PTR [edi+0x5f],eax
  41fc85:	ror    BYTE PTR [edx],0xea
  41fc88:	jns    0x41fced
  41fc8a:	sbb    DWORD PTR [edi-0x51],ecx
  41fc8d:	imul   ecx,DWORD PTR [ebp-0x415628ff],0xa77ec76b
  41fc97:	pusha  
  41fc98:	jne    0x41fc7a
  41fc9a:	pop    es
  41fc9b:	sbb    bl,BYTE PTR [ebx]
  41fc9d:	pushf  
  41fc9e:	lods   al,BYTE PTR ds:[esi]
  41fc9f:	jmp    0x117323a7
  41fca4:	fbstp  TBYTE PTR [edx]
  41fca6:	mov    ebp,0x9989858e
  41fcab:	inc    eax
  41fcac:	mov    DWORD PTR [esi+edi*8-0xa],ecx
  41fcb0:	jmp    0x41fc63
  41fcb2:	mov    bl,0xf6
  41fcb4:	(bad)  
  41fcb5:	scas   al,BYTE PTR es:[edi]
  41fcb6:	pop    ebp
  41fcb7:	fist   WORD PTR [ecx]
  41fcb9:	push   ss
  41fcba:	cld    
  41fcbb:	jg     0x41fcd9
  41fcbd:	jmp    0xd8c:0x1a27112
  41fcc4:	shl    ch,cl
  41fcc6:	mov    ebx,DWORD PTR [esp+edx*4-0x41]
  41fcca:	pop    edi
  41fccb:	call   0x4e10482a
  41fcd0:	iret   
  41fcd1:	inc    edx
  41fcd2:	xchg   ebp,eax
  41fcd3:	jmp    0x6512:0x156523a9
  41fcda:	push   ecx
  41fcdb:	in     al,0x19
  41fcdd:	adc    bh,dl
  41fcdf:	sub    BYTE PTR [esi+0xe5736be],ah
  41fce5:	scas   al,BYTE PTR es:[edi]
  41fce6:	leave  
  41fce7:	jecxz  0x41fd3f
  41fce9:	jmp    0x41fcf1
  41fceb:	and    eax,0xd3039e8b
  41fcf0:	daa    
  41fcf1:	xchg   ebx,eax
  41fcf2:	xor    BYTE PTR [ebp+0x6c],bh
  41fcf5:	mov    dl,0x7c
  41fcf7:	sahf   
  41fcf8:	scas   al,BYTE PTR es:[edi]
  41fcf9:	lock sar BYTE PTR [edi],1
  41fcfc:	or     DWORD PTR [esi-0x4],0xffffffca
  41fd00:	jecxz  0x41fcae
  41fd02:	pop    edx
  41fd03:	push   ebp
  41fd04:	xlat   BYTE PTR ds:[ebx]
  41fd05:	lea    eax,[esi]
  41fd07:	dec    esp
  41fd08:	sbb    BYTE PTR [ebp-0x48],bl
  41fd0b:	inc    eax
  41fd0c:	retf   0xbecc
  41fd0f:	sub    eax,0x4a41034c
  41fd14:	xchg   DWORD PTR ds:0x15274129,edi
  41fd1a:	enter  0x3ed8,0x82
  41fd1e:	adc    eax,0x5a84eaf1
  41fd23:	and    BYTE PTR [edx+0x3e],ah
  41fd26:	andnps xmm4,XMMWORD PTR [edi-0xd7a3017]
  41fd2d:	neg    BYTE PTR [esi+ecx*1]
  41fd30:	sahf   
  41fd31:	push   ss
  41fd32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd33:	(bad)
  41fd37:	mov    ds:0x4e4ea495,al
  41fd3c:	inc    ebx
  41fd3d:	in     al,dx
  41fd3e:	out    0x30,eax
  41fd40:	test   DWORD PTR [ebp+0x42],ebx
  41fd43:	rol    DWORD PTR [edx+0xe],0x6e
  41fd47:	sti    
  41fd48:	adc    bh,bl
  41fd4a:	sti    
  41fd4b:	dec    ecx
  41fd4c:	mov    dl,0x1f
  41fd4e:	lock mov al,ds:0xb044e93b
  41fd54:	imul   esi,DWORD PTR [ecx+0x16cfccf5],0xffffffa0
  41fd5b:	dec    esp
  41fd5c:	call   0xf0605d89
  41fd61:	test   edx,esp
  41fd63:	mov    edi,0xae79b2f7
  41fd68:	test   BYTE PTR [edx-0x1e],ah
  41fd6b:	and    esi,DWORD PTR [edi-0x5c]
  41fd6e:	int    0x99
  41fd70:	cwde   
  41fd71:	out    dx,al
  41fd72:	int3   
  41fd73:	imul   esp,DWORD PTR [edx-0x391a2550],0xffffffa7
  41fd7a:	mov    WORD PTR [ebx-0x6320a303],ds
  41fd80:	imul   eax,DWORD PTR [edx+0x0],0xf338581
  41fd87:	in     eax,0x6d
  41fd89:	jbe    0x41fd5c
  41fd8b:	push   es
  41fd8c:	push   edi
  41fd8d:	sbb    esi,DWORD PTR [esi-0x4b]
  41fd90:	ficom  DWORD PTR [ebx+0x475d70d1]
  41fd96:	lock icebp 
  41fd98:	jo     0x41fd88
  41fd9a:	sub    cl,BYTE PTR [ebp+eax*8-0x4d]
  41fd9e:	push   edi
  41fd9f:	ins    BYTE PTR es:[edi],dx
  41fda0:	push   edx
  41fda1:	js     0x41fd4b
  41fda3:	aam    0xdc
  41fda5:	loopne 0x41fd84
  41fda7:	sti    
  41fda8:	cmovnp edx,edx
  41fdab:	es ds dec ebx
  41fdae:	stos   DWORD PTR es:[edi],eax
  41fdaf:	and    al,0x74
  41fdb1:	cli    
  41fdb2:	push   esp
  41fdb3:	pop    ebp
  41fdb4:	add    ah,bl
  41fdb6:	sub    bh,BYTE PTR [ebx+0x58]
  41fdb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdba:	add    eax,DWORD PTR [ecx-0x1]
  41fdbd:	xchg   BYTE PTR [edx-0x23],dh
  41fdc0:	jbe    0x41fe3c
  41fdc2:	ins    BYTE PTR es:[edi],dx
  41fdc3:	aas    
  41fdc4:	and    eax,0x6d9bd1b1
  41fdc9:	in     al,0xf
  41fdcb:	sub    BYTE PTR [esi+esi*4+0x22f151b0],ch
  41fdd2:	icebp  
  41fdd3:	iret   
  41fdd4:	or     BYTE PTR [esi],al
  41fdd6:	mov    bh,BYTE PTR ds:0x2838992a
  41fddc:	lea    ecx,[edi+0x22]
  41fddf:	jae    0x41fe2f
  41fde1:	mov    esp,0x6b769fdc
  41fde6:	(bad)  
  41fde7:	cmp    eax,0x391f0652
  41fdec:	ds xchg ebx,eax
  41fdee:	je     0x41fd9e
  41fdf0:	jo     0x41fdff
  41fdf2:	addr16 into 
  41fdf4:	adc    BYTE PTR [ecx-0x7f4e3f86],ah
  41fdfa:	sub    DWORD PTR [eax],0x32db638b
  41fe00:	mov    bl,0xfe
  41fe02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe03:	aam    0x67
  41fe05:	repz mov bl,0x14
  41fe08:	jae    0x41fdf9
  41fe0a:	stos   BYTE PTR es:[edi],al
  41fe0b:	push   edi
  41fe0c:	add    ah,BYTE PTR [ecx+edi*1-0x7a5f5579]
  41fe13:	cmp    DWORD PTR [eax],esp
  41fe15:	push   ecx
  41fe16:	push   cs
  41fe17:	mov    BYTE PTR ds:0x9559bfd1,ah
  41fe1d:	and    al,0x62
  41fe1f:	push   esi
  41fe20:	bswap  edi
  41fe22:	in     al,dx
  41fe23:	mul    DWORD PTR [ecx]
  41fe25:	lea    esi,[edi+eiz*4-0x46f75eb9]
  41fe2c:	mov    eax,0x9a0a0b43
  41fe31:	addps  xmm1,xmm4
  41fe34:	xlat   BYTE PTR ds:[ebx]
  41fe35:	clc    
  41fe36:	and    edi,esi
  41fe38:	xchg   ch,ch
  41fe3a:	mov    edx,0x8f3965e3
  41fe3f:	jns    0x41fe08
  41fe41:	xor    edi,esp
  41fe43:	inc    edi
  41fe44:	adc    BYTE PTR [ecx+eax*1],cl
  41fe47:	jmp    0xff46459e
  41fe4c:	mov    ds:0xcf871ef0,eax
  41fe51:	cld    
  41fe52:	sbb    esp,edi
  41fe54:	add    DWORD PTR [esi],ecx
  41fe56:	(bad)  
  41fe57:	int3   
  41fe58:	daa    
  41fe59:	sbb    ebx,edx
  41fe5b:	je     0x41fe25
  41fe5d:	add    ebx,ecx
  41fe5f:	ret    
  41fe60:	jg     0x41fdf1
  41fe62:	std    
  41fe63:	popa   
  41fe64:	sub    DWORD PTR [ebx+0x56],edi
  41fe67:	ds inc esi
  41fe69:	pop    edi
  41fe6a:	jecxz  0x41fe76
  41fe6c:	mov    al,ds:0x29eadbfe
  41fe71:	pop    ebp
  41fe72:	sar    BYTE PTR ds:0xd26f2b58,cl
  41fe78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe79:	sub    BYTE PTR [edi+eax*1-0x1],bl
  41fe7d:	pop    eax
  41fe7e:	dec    eax
  41fe7f:	adc    bl,BYTE PTR [ebp+0x4b96afee]
  41fe85:	add    eax,0xd51b1e70
  41fe8a:	mov    bh,0x4e
  41fe8c:	(bad)  
  41fe8d:	ficomp WORD PTR [edi]
  41fe8f:	fist   DWORD PTR [eax+0x65]
  41fe92:	out    0xfb,eax
  41fe94:	lds    ebx,FWORD PTR [esi]
  41fe96:	popf   
  41fe97:	sub    cl,BYTE PTR [bx-0x72]
  41fe9b:	adc    edi,DWORD PTR [ebx]
  41fe9d:	in     eax,0x23
  41fe9f:	retf   
  41fea0:	sub    BYTE PTR [ebx*1-0x20db525c],0xe5
  41fea8:	ja     0x41febf
  41feaa:	xchg   esp,eax
  41feab:	jmp    0xbea5:0xe7e1083c
  41feb2:	pop    ebx
  41feb3:	into   
  41feb4:	mov    ebp,0xd01e7583
  41feb9:	adc    DWORD PTR [eax+0x3f72a16f],eax
  41febf:	push   esi
  41fec0:	pop    esp
  41fec1:	pop    ss
  41fec2:	std    
  41fec3:	mov    al,ds:0x8fd457e9
  41fec8:	pop    ecx
  41fec9:	loopne 0x41ff21
  41fecb:	loop   0x41ff16
  41fecd:	push   0x3
  41fecf:	push   cs
  41fed0:	(bad)  
  41fed1:	sbb    eax,0xe5cf25ae
  41fed6:	(bad)  
  41fed7:	pop    ecx
  41fed8:	inc    esp
  41fed9:	sar    bl,cl
  41fedb:	cwde   
  41fedc:	jl     0x41fe8d
  41fede:	xchg   esp,eax
  41fedf:	push   edi
  41fee0:	push   esp
  41fee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee2:	scas   al,BYTE PTR es:[edi]
  41fee3:	es ss xchg ecx,eax
  41fee6:	(bad)  
  41fee7:	jns    0x41fecd
  41fee9:	cmp    BYTE PTR [eax+edi*4],al
  41feec:	sub    ecx,DWORD PTR [eax-0x930b2a0]
  41fef2:	ins    BYTE PTR es:[edi],dx
  41fef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fef4:	cmp    BYTE PTR [ebx+0x4a],ch
  41fef7:	je     0x41feb1
  41fef9:	dec    DWORD PTR [esi+0xd9ae363]
  41feff:	imul   eax,DWORD PTR [ebp-0x7a3aeb15],0x59c80de3
  41ff09:	pop    esp
  41ff0a:	test   al,0xd2
  41ff0c:	xor    esi,DWORD PTR fs:[esi]
  41ff0f:	out    dx,al
  41ff10:	int    0x60
  41ff12:	int    0x96
  41ff14:	jmp    0x41feca
  41ff16:	and    edi,DWORD PTR [ebx]
  41ff18:	adc    DWORD PTR [esi],esp
  41ff1a:	mov    ebx,0xf499b9e3
  41ff1f:	test   al,0x6d
  41ff21:	sahf   
  41ff22:	xlat   BYTE PTR ds:[ebx]
  41ff23:	sbb    DWORD PTR [edi],eax
  41ff25:	push   ebx
  41ff26:	fdiv   DWORD PTR [edi-0x189f911f]
  41ff2c:	or     DWORD PTR [edx],ecx
  41ff2e:	fcmove st,st(0)
  41ff30:	jnp    0x41ff12
  41ff32:	jp     0x41ff97
  41ff34:	cld    
  41ff35:	repz clc 
  41ff37:	sub    DWORD PTR [edi+edx*8+0x5c],esi
  41ff3b:	jle    0x41ff4e
  41ff3d:	sti    
  41ff3e:	les    ebx,FWORD PTR [edi]
  41ff40:	and    BYTE PTR [edx],0xcc
  41ff43:	loope  0x41ff2d
  41ff45:	jle    0x41ff7b
  41ff47:	push   ebp
  41ff48:	push   edx
  41ff49:	pusha  
  41ff4a:	xor    al,0x66
  41ff4c:	jnp    0x41ff77
  41ff4e:	lea    ebx,[eax]
  41ff50:	aaa    
  41ff51:	fsubr  QWORD PTR [eax]
  41ff53:	or     BYTE PTR [esi],ah
  41ff55:	jle    0x41ff94
  41ff57:	adc    eax,0xf0ddead5
  41ff5c:	into   
  41ff5d:	stc    
  41ff5e:	(bad)  
  41ff5f:	fistp  QWORD PTR [ebp+0x69]
  41ff62:	pop    eax
  41ff63:	shl    esp,0xac
  41ff66:	icebp  
  41ff67:	mov    eax,eax
  41ff69:	clc    
  41ff6a:	or     al,0x6a
  41ff6c:	shl    DWORD PTR [ecx+0xe],0x7d
  41ff70:	test   al,0xd5
  41ff72:	pop    esi
  41ff73:	dec    edx
  41ff74:	sub    edx,eax
  41ff76:	sbb    cl,BYTE PTR [eax]
  41ff78:	dec    edx
  41ff79:	push   esp
  41ff7a:	mov    BYTE PTR [ebx+esi*1+0x7e3a806b],ch
  41ff81:	addr16 ret 
  41ff83:	sbb    al,0x75
  41ff85:	xor    al,0xfc
  41ff87:	sbb    eax,0x8e55d669
  41ff8c:	and    ebx,0x940cf530
  41ff92:	sahf   
  41ff93:	test   DWORD PTR fs:[esi],ecx
  41ff96:	(bad)  
  41ff97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff98:	and    DWORD PTR [ecx],edx
  41ff9a:	retf   0xb7fd
  41ff9d:	in     eax,0xb1
  41ff9f:	cli    
  41ffa0:	out    0xca,eax
  41ffa2:	sub    DWORD PTR [eax+0x6eb48b07],ebx
  41ffa8:	das    
  41ffa9:	ret    0xb288
  41ffac:	fwait
  41ffad:	add    dl,bl
  41ffaf:	add    DWORD PTR [ebx],0xffffff92
  41ffb2:	jae    0x420006
  41ffb4:	ins    BYTE PTR es:[edi],dx
  41ffb5:	and    eax,esi
  41ffb7:	jo     0x41ffd8
  41ffb9:	arpl   si,bx
  41ffbb:	(bad)  
  41ffbc:	mov    ds:0x36bef5fb,eax
  41ffc1:	mov    bh,0x3a
  41ffc3:	test   eax,0x2a45b267
  41ffc8:	inc    ebx
  41ffc9:	dec    esi
  41ffca:	sub    BYTE PTR [edi+0x28],dl
  41ffcd:	add    BYTE PTR [edx-0x5],0x94
  41ffd1:	adc    BYTE PTR [eax],al
  41ffd3:	sbb    DWORD PTR cs:[esi],eax
  41ffd6:	mov    DWORD PTR [eax],edi
  41ffd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffd9:	out    dx,al
  41ffda:	xchg   ebx,eax
  41ffdb:	mov    ah,BYTE PTR [esi+edi*8+0x5620802f]
  41ffe2:	xor    DWORD PTR [eax+ebp*4+0x59e483e3],0x7db65d6f
  41ffed:	aad    0xb6
  41ffef:	mov    edx,0xadc444b7
  41fff4:	or     DWORD PTR [ecx-0x574385c],ebp
  41fffa:	cmp    BYTE PTR [edi],ah
  41fffc:	xchg   esi,eax
  41fffd:	repz enter 0xbf04,0x51
  420002:	jecxz  0x41fff6
  420004:	add    edx,ecx
  420006:	mov    dl,0x35
  420008:	and    edi,DWORD PTR [ecx+0x583140fb]
  42000e:	imul   edi,DWORD PTR [ecx-0x3e],0x37
  420012:	js     0x420070
  420014:	mov    WORD PTR [edi+0x18],ds
  420017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420018:	int3   
  420019:	stc    
  42001a:	icebp  
  42001b:	sti    
  42001c:	out    0x8e,eax
  42001e:	mov    cl,0xc7
  420020:	mov    ds:0x1ecad67d,eax
  420025:	jnp    0x41ffe5
  420027:	gs pop ebp
  420029:	out    0xc1,al
  42002b:	inc    edx
  42002c:	inc    ebp
  42002d:	or     DWORD PTR [ecx-0x28906fd9],eax
  420033:	mov    ah,0x11
  420035:	repnz fimul DWORD PTR [eax-0x41daf0d7]
  42003c:	mov    ebp,0x9c3fa3e0
  420041:	hlt    
  420042:	(bad)  
  420044:	mov    ds:0xfbaf0c95,eax
  420049:	loope  0x41ffd1
  42004b:	nop
  42004c:	fistp  QWORD PTR [edi+0x70]
  42004f:	pop    ss
  420050:	cld    
  420051:	or     eax,0x9c6ce538
  420056:	fdivr  DWORD PTR [ebx+ebx*8]
  420059:	(bad)  [esi+ebp*4]
  42005c:	mov    edi,0x5490081a
  420061:	test   eax,0x5f027842
  420066:	mov    al,ds:0x44dcffc8
  42006b:	jle    0x42009d
  42006d:	ret    0x41d6
  420070:	ja     0x42009b
  420072:	shr    DWORD PTR [edx+0x8dd36a2],0xcb
  420079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42007a:	(bad)
  42007e:	bound  edi,QWORD PTR [ebp-0x7ca6a7e8]
  420084:	inc    edx
  420085:	jno    0x420019
  420087:	aas    
  420088:	les    esi,FWORD PTR [esi-0x107ccfc2]
  42008e:	jge    0x42010a
  420090:	pop    eax
  420091:	push   0x4abdf7dc
  420096:	pop    edi
  420097:	sbb    BYTE PTR [edi],cl
  420099:	test   BYTE PTR [ebp+ecx*2-0x65fd63d3],0x4c
  4200a1:	inc    ebx
  4200a2:	pusha  
  4200a3:	mov    es,WORD PTR [edx+0x1359adee]
  4200a9:	popf   
  4200aa:	mov    ah,BYTE PTR [ebx-0x45]
  4200ad:	call   0x89a6:0x60f89d5f
  4200b4:	xchg   BYTE PTR [edx+0x6c1f5895],ch
  4200ba:	js     0x420055
  4200bc:	mov    DWORD PTR [edx+0x1d8e8dbf],esi
  4200c2:	aad    0x3a
  4200c4:	sti    
  4200c5:	aaa    
  4200c6:	jp     0x420130
  4200c8:	jnp    0x42010f
  4200ca:	in     eax,0xc2
  4200cc:	(bad)  
  4200ce:	jl     0x4200a6
  4200d0:	retf   
  4200d1:	cmp    ecx,ecx
  4200d3:	fwait
  4200d4:	pop    ebp
  4200d5:	jno    0x4200c5
  4200d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200d8:	mov    ebp,DWORD PTR [edi]
  4200da:	aas    
  4200db:	dec    edi
  4200dc:	out    0x33,al
  4200de:	fdivr  st,st(6)
  4200e0:	std    
  4200e1:	int3   
  4200e2:	cmp    bl,BYTE PTR [edi+0x520037ea]
  4200e8:	fnsave [ebx-0x36ba9b6f]
  4200ee:	add    bh,BYTE PTR [esi-0x73]
  4200f1:	inc    eax
  4200f2:	xor    eax,0xfdbc9ae1
  4200f7:	cmp    al,0x99
  4200f9:	cdq    
  4200fa:	xor    al,0x77
  4200fc:	adc    ah,BYTE PTR [esi]
  4200fe:	jno    0x4200bc
  420100:	bound  ebp,QWORD PTR [edx+0x35]
  420103:	sbb    al,0xf4
  420105:	push   edi
  420106:	scas   al,BYTE PTR es:[edi]
  420107:	cmp    BYTE PTR [ebx+0x6b],bl
  42010a:	jne    0x4200bc
  42010c:	nop    ebp
  42010f:	or     eax,0xa8166c71
  420114:	mov    ch,0x89
  420116:	in     eax,dx
  420117:	and    BYTE PTR [ebx-0x23],bh
  42011a:	jns    0x4200a3
  42011c:	cmp    ch,0xde
  42011f:	lods   al,BYTE PTR ds:[esi]
  420120:	cmp    al,BYTE PTR [ebp+0x5]
  420123:	mov    bh,0x85
  420125:	dec    ebx
  420126:	repz adc DWORD PTR [ebp+0x12],edx
  42012a:	js     0x420183
  42012c:	xor    BYTE PTR [edi+0x64ac9b1d],al
  420132:	push   0xfffffffc
  420134:	lds    ebp,FWORD PTR fs:[edx]
  420137:	xlat   BYTE PTR ds:[ebx]
  420138:	mov    ecx,0xe7563545
  42013d:	setnp  BYTE PTR [edx+ebx*4-0x752ec68d]
  420145:	imul   ecx,DWORD PTR [ecx-0xdadcb6b],0x1d18d777
  42014f:	popa   
  420150:	push   ss
  420151:	leave  
  420152:	or     DWORD PTR cs:[edi-0x57ee6530],ecx
  420159:	stos   BYTE PTR es:[edi],al
  42015a:	inc    ebx
  42015b:	shr    DWORD PTR [esi],cl
  42015d:	sbb    ebx,DWORD PTR [ebp-0xec68d10]
  420163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420164:	jl     0x4201cd
  420166:	dec    ebp
  420167:	(bad)  
  420169:	aam    0x30
  42016b:	xchg   ebp,eax
  42016c:	adc    bl,BYTE PTR [ebp-0x2d]
  42016f:	shr    DWORD PTR [esi+edi*1-0x3ba42e98],cl
  420176:	mov    ds,WORD PTR [edx-0x7b]
  420179:	mov    esp,0x463c7d78
  42017e:	pop    ebp
  42017f:	push   ecx
  420180:	pop    eax
  420181:	dec    ebx
  420182:	sub    edi,DWORD PTR [ebp+0x7f]
  420185:	mov    ch,0x46
  420187:	loop   0x420138
  420189:	in     al,dx
  42018a:	loope  0x420164
  42018c:	idiv   DWORD PTR [edx]
  42018e:	push   ecx
  42018f:	add    bh,BYTE PTR [edi+0x14]
  420192:	adc    BYTE PTR [esi-0x15],cl
  420195:	mov    dh,BYTE PTR [ecx]
  420197:	ret    
  420198:	out    dx,al
  420199:	add    BYTE PTR ds:0xfc9ba1a,bl
  42019f:	mov    eax,0xee366aff
  4201a4:	cwde   
  4201a5:	ret    0x6a8b
  4201a8:	and    eax,0xc05d6e97
  4201ad:	jle    0x420196
  4201af:	xor    al,BYTE PTR [esi-0x18]
  4201b2:	mov    cl,0x89
  4201b4:	jbe    0x4201f1
  4201b6:	call   0xb9079891
  4201bb:	sub    BYTE PTR [ecx+0x51],cl
  4201be:	xchg   edx,eax
  4201bf:	mov    bh,0xce
  4201c1:	push   ebp
  4201c2:	jle    0x4201ec
  4201c4:	mov    ebp,0xe1874b39
  4201c9:	mov    ecx,0x66eff17d
  4201ce:	jae    0x42022b
  4201d0:	mov    bl,ch
  4201d2:	push   es
  4201d3:	inc    ebp
  4201d4:	jns    0x4201e1
  4201d6:	fldenv [ecx+0x3f]
  4201d9:	mov    cl,0x4e
  4201db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201dc:	fldcw  WORD PTR [edi]
  4201de:	or     edi,DWORD PTR [ecx+0x55]
  4201e1:	sub    ch,BYTE PTR [eax*2-0x70acb4ab]
  4201e8:	retf   
  4201e9:	clc    
  4201ea:	xor    esi,ebp
  4201ec:	xchg   edi,eax
  4201ed:	push   ecx
  4201ee:	and    dh,BYTE PTR [esi]
  4201f0:	nop
  4201f1:	xor    ch,bl
  4201f3:	cmp    esi,0x725e5849
  4201f9:	cs or  bl,cl
  4201fc:	add    bl,ch
  4201fe:	jae    0x4201cc
  420200:	sbb    dh,BYTE PTR [esi]
  420202:	inc    eax
  420203:	mov    esp,0xffc5167d
  420208:	rol    DWORD PTR [ebp+0x49],1
  42020b:	pop    es
  42020c:	jmp    esi
  42020e:	int3   
  42020f:	xor    eax,0x315d2c07
  420214:	sbb    al,0x1f
  420216:	fisttp DWORD PTR [ebx+0x1c]
  420219:	into   
  42021a:	pushf  
  42021b:	jb     0x420238
  42021d:	sar    bl,0x86
  420220:	in     al,dx
  420221:	and    di,0x70
  420225:	fs std 
  420227:	fst    DWORD PTR [ebp-0x5c]
  42022a:	fidivr WORD PTR [esp+eiz*4]
  42022d:	out    0x1,eax
  42022f:	cmc    
  420230:	addr16 (bad) 
  420232:	jg     0x420255
  420234:	xor    al,0xe5
  420236:	jmp    0x5b248997
  42023b:	inc    edi
  42023c:	inc    esi
  42023d:	aas    
  42023e:	imul   eax,DWORD PTR [edx],0xffffff87
  420241:	in     eax,0x86
  420243:	jb     0x4202ae
  420245:	jo     0x420285
  420247:	pop    ebp
  420248:	cmp    DWORD PTR [ecx+0x20],edx
  42024b:	call   0xa853cb58
  420250:	lsl    edx,WORD PTR [ebx-0x7ed49f58]
  420257:	stos   BYTE PTR es:[edi],al
  420258:	mov    edx,0x9ff83611
  42025d:	pusha  
  42025e:	xor    al,0xcb
  420260:	mov    esp,DWORD PTR [eax]
  420262:	mov    al,ds:0x582c2b3c
  420267:	xchg   ebp,eax
  420268:	fild   DWORD PTR [edx+0x2bb8a5cb]
  42026e:	cmp    bh,BYTE PTR [edi]
  420270:	push   edx
  420271:	(bad)  
  420272:	fnstcw WORD PTR [edx-0x43ea71fd]
  420278:	push   0xe29356bf
  42027d:	add    dl,BYTE PTR [esi+0x20]
  420280:	test   al,0x2c
  420282:	fmul   DWORD PTR [eax-0x7f]
  420285:	xor    DWORD PTR [ebx-0x17b7b7b8],ebp
  42028b:	jmp    0x9ffb:0x9793041e
  420292:	lahf   
  420293:	cmp    esi,DWORD PTR [ebx-0x39]
  420296:	mov    ds:0x40f6fb2b,al
  42029b:	xchg   esp,eax
  42029c:	pop    eax
  42029d:	xchg   DWORD PTR [edi-0x43fe80cb],edi
  4202a3:	and    bl,BYTE PTR [ebx-0x5d3c0373]
  4202a9:	pop    ecx
  4202aa:	add    eax,0x5d332cf7
  4202b0:	jle    0x4202c9
  4202b2:	sub    cl,BYTE PTR [eax-0x20f0fff9]
  4202b8:	nop
  4202b9:	(bad)  
  4202ba:	cmp    dh,BYTE PTR [ebx+0x613c04ff]
  4202c0:	ret    0x1a5e
  4202c3:	int    0xc
  4202c5:	cmp    al,0x89
  4202c7:	mov    bl,0x2e
  4202c9:	int    0x14
  4202cb:	les    edi,FWORD PTR [esp+ecx*4+0x33]
  4202cf:	int    0xc0
  4202d1:	xor    BYTE PTR [ebx+ebx*2],cl
  4202d4:	sbb    DWORD PTR [ebx+0xf],edx
  4202d7:	inc    eax
  4202d8:	test   DWORD PTR [edi],0x8355b034
  4202de:	jno    0x420323
  4202e0:	dec    ecx
  4202e1:	jb     0x4202ec
  4202e3:	or     eax,0xb6fa65e3
  4202e8:	dec    edi
  4202e9:	jecxz  0x42031c
  4202eb:	mov    cl,0x95
  4202ed:	dec    DWORD PTR [esi+0x8]
  4202f0:	inc    esi
  4202f1:	inc    ebp
  4202f2:	or     ah,ch
  4202f4:	sbb    dl,BYTE PTR [edi+0x41]
  4202f7:	or     dh,bl
  4202f9:	pop    ebp
  4202fa:	sub    eax,0x5505a329
  4202ff:	mov    ds:0x44900c59,al
  420304:	push   ebx
  420305:	push   0xc87fa4f8
  42030a:	xor    DWORD PTR [esi],ebx
  42030c:	sbb    DWORD PTR [ecx+eax*2],0xa70afbf0
  420313:	fiadd  WORD PTR [esi]
  420315:	pop    DWORD PTR [esi]
  420317:	idiv   DWORD PTR [esi+0x35]
  42031a:	push   ecx
  42031b:	fstp   QWORD PTR ds:0x92563a0f
  420321:	sub    ebp,DWORD PTR [edx+0x8]
  420324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420325:	popa   
  420326:	mov    eax,ds:0xf4df33ed
  42032b:	pushf  
  42032c:	popa   
  42032d:	std    
  42032e:	pop    edx
  42032f:	retf   0x3e88
  420332:	shl    DWORD PTR [edi+0x24],cl
  420335:	lds    ebx,FWORD PTR [edx]
  420337:	outs   dx,DWORD PTR ds:[esi]
  420338:	retfw  0xa682
  42033c:	cdq    
  42033d:	add    BYTE PTR [ecx],al
  42033f:	(bad)  
  420340:	arpl   WORD PTR [esi+0x27333cc4],cx
  420346:	jmp    0x663b:0x9bd9b98d
  42034d:	jo     0x420306
  42034f:	sub    al,BYTE PTR [ecx+0x55bbf822]
  420355:	mov    cl,0xd6
  420357:	cmp    eax,0xbd54d296
  42035c:	jg     0x4203b4
  42035e:	and    BYTE PTR [ebx+0x4b],dl
  420361:	retf   
  420362:	popa   
  420363:	mov    edi,eax
  420365:	stos   DWORD PTR es:[edi],eax
  420366:	dec    ebx
  420367:	mov    ecx,0xf926346b
  42036c:	cmp    edx,0xe4725bdf
  420372:	in     al,0x1f
  420374:	mov    ch,0x3
  420376:	gs daa 
  420378:	imul   ebx,DWORD PTR [ebx],0xffffffc1
  42037b:	mov    ch,0x50
  42037d:	scas   al,BYTE PTR es:[edi]
  42037e:	int    0x50
  420380:	xchg   edi,eax
  420381:	scas   eax,DWORD PTR es:[edi]
  420382:	jl     0x42039a
  420384:	shl    BYTE PTR [ecx],0xaa
  420387:	jmp    0x84bd:0x436482b4
  42038e:	or     BYTE PTR [edx-0xf9394e7],bh
  420394:	enter  0xcaf5,0x6c
  420398:	push   esi
  420399:	adc    ch,BYTE PTR [ebx-0x14]
  42039c:	xchg   esi,eax
  42039d:	repnz inc edi
  42039f:	or     ecx,DWORD PTR ds:0x4e462edb
  4203a5:	fwait
  4203a6:	mov    eax,0x993279c4
  4203ab:	cmp    BYTE PTR [eax+0x25],bl
  4203ae:	dec    esp
  4203af:	repnz fwait
  4203b1:	push   ds
  4203b2:	ret    
  4203b3:	test   BYTE PTR [edx],cl
  4203b5:	ret    0x23c
  4203b8:	fwait
  4203b9:	call   DWORD PTR [eax]
  4203bb:	jle    0x42042b
  4203bd:	test   eax,0xdc14faca
  4203c2:	mov    bl,0x3a
  4203c4:	sub    dl,BYTE PTR [edi-0x77f90c44]
  4203ca:	outs   dx,BYTE PTR ds:[esi]
  4203cb:	xchg   ebx,eax
  4203cc:	idiv   eax
  4203ce:	sub    DWORD PTR [ebx+0x2],edx
  4203d1:	jnp    0x4203d2
  4203d3:	push   eax
  4203d4:	neg    BYTE PTR cs:[eax]
  4203d7:	push   esi
  4203d8:	cwde   
  4203d9:	mov    cl,0x33
  4203db:	jg     0x420397
  4203dd:	out    0xc2,eax
  4203df:	sbb    al,0x93
  4203e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e2:	call   0x7ed6:0x23235e87
  4203e9:	inc    ebp
  4203ea:	push   ecx
  4203eb:	rcl    DWORD PTR [eax+0x781072e7],cl
  4203f1:	jbe    0x4203eb
  4203f3:	sbb    BYTE PTR cs:[edi+0x7468e26f],bl
  4203fa:	sbb    eax,0xad54079a
  4203ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420400:	call   0x653a:0x16be625c
  420407:	out    dx,al
  420408:	xor    bh,ah
  42040a:	cwde   
  42040b:	inc    esi
  42040c:	inc    ecx
  42040d:	push   esp
  42040e:	out    dx,al
  42040f:	jmp    0x420433
  420411:	mov    ds:0x99d5afdb,al
  420416:	out    0x2,al
  420418:	fcom   DWORD PTR [ebx]
  42041a:	sti    
  42041b:	(bad)  
  42041c:	jmp    0x42047c
  42041e:	icebp  
  42041f:	and    BYTE PTR [ebp+0x54fca591],0x34
  420426:	pop    ss
  420427:	sbb    bh,BYTE PTR [esi+0x270f34fb]
  42042d:	test   eax,0x734eb1d
  420432:	cld    
  420433:	cmp    al,0xc4
  420435:	xlat   BYTE PTR ds:[ebx]
  420436:	dec    esi
  420437:	and    al,0xed
  420439:	cmp    DWORD PTR ds:0xc61e009b,esp
  42043f:	addr16 ds mov eax,0x4864579a
  420446:	jp     0x4204a1
  420448:	jl     0x4204ab
  42044a:	fbld   TBYTE PTR [esp+ecx*2+0x3e7275c0]
  420451:	pop    ecx
  420452:	ret    0x7b94
  420455:	add    ch,dl
  420457:	cwde   
  420458:	pop    edi
  420459:	inc    esp
  42045b:	sub    ebx,DWORD PTR [eax-0x33e023f8]
  420461:	sub    ecx,eax
  420463:	pop    es
  420464:	repz bswap edi
  420467:	xor    DWORD PTR [esi-0x45d7c0cb],edx
  42046d:	pop    edx
  42046e:	pop    eax
  42046f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420470:	addr16 push ds
  420472:	out    0x6,eax
  420474:	jle    0x420471
  420476:	add    al,0xa2
  420478:	xor    al,0x4
  42047a:	fcomp  QWORD PTR [eax]
  42047c:	xor    bl,bl
  42047e:	dec    edi
  42047f:	push   0x1a7e7fc9
  420484:	xchg   esi,eax
  420485:	idiv   BYTE PTR [ebx+0x3ff281e0]
  42048b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42048c:	dec    esi
  42048d:	add    eax,ebp
  42048f:	das    
  420490:	add    eax,0x4339395d
  420495:	pop    edx
  420496:	push   0x18
  420498:	shr    BYTE PTR [esi+ebx*8],cl
  42049b:	clc    
  42049c:	and    BYTE PTR [ebx],ah
  42049e:	call   0xcd9b060a
  4204a3:	add    DWORD PTR [edx-0x385ff850],edx
  4204a9:	out    dx,eax
  4204aa:	push   eax
  4204ab:	jnp    0x420478
  4204ad:	pop    ebp
  4204ae:	nop
  4204af:	dec    ebp
  4204b0:	mov    dh,0xc5
  4204b2:	jo     0x420523
  4204b4:	sub    al,BYTE PTR [edi+0xfe4ea1]
  4204ba:	lods   al,BYTE PTR ds:[esi]
  4204bb:	int3   
  4204bc:	xchg   BYTE PTR [ebp-0x59],ah
  4204bf:	call   0x9cf786c8
  4204c4:	in     eax,0xc6
  4204c6:	adc    BYTE PTR [ebp+0x7b],cl
  4204c9:	inc    esi
  4204ca:	in     eax,0x7e
  4204cc:	adc    BYTE PTR [ecx-0x3993a3d4],bh
  4204d2:	jecxz  0x42049a
  4204d4:	jecxz  0x420532
  4204d6:	lock xor DWORD PTR [edx-0x1cd36003],0x76
  4204de:	enter  0x1d39,0x31
  4204e2:	jb     0x4204a3
  4204e4:	xor    eax,0x65ba120e
  4204e9:	aad    0xfb
  4204eb:	cs cmp eax,0x35414936
  4204f1:	jb     0x42052f
  4204f3:	adc    BYTE PTR [ecx-0x4d],0xe6
  4204f7:	adc    al,0xef
  4204f9:	or     BYTE PTR [ecx+0x157d1975],dl
  4204ff:	mov    ds:0x748a4362,al
  420504:	pop    edi
  420505:	mov    dh,0x15
  420507:	in     al,0x82
  420509:	xor    bl,BYTE PTR [eax]
  42050b:	repz dec ecx
  42050d:	call   0xc434:0x547d9a67
  420514:	adc    ebx,DWORD PTR [ebp-0x4df36649]
  42051a:	xor    DWORD PTR [eax],esp
  42051c:	in     eax,0x6b
  42051e:	lea    eax,[ebx+0x39]
  420521:	push   edi
  420522:	stos   DWORD PTR es:[edi],eax
  420523:	gs fsubr st(0),st
  420526:	sti    
  420527:	(bad)  
  420528:	iret   
  420529:	xor    DWORD PTR [ebp-0x4d6b8dc4],0xd2cebbed
  420533:	push   cs
  420534:	jle    0x4205aa
  420536:	aas    
  420537:	sub    BYTE PTR [esi-0x3a7db937],ah
  42053d:	scas   al,BYTE PTR es:[edi]
  42053e:	gs mov eax,edx
  420541:	gs retf 0xdfa
  420545:	into   
  420546:	stos   BYTE PTR es:[edi],al
  420547:	pop    ss
  420548:	icebp  
  420549:	lods   al,BYTE PTR ds:[esi]
  42054a:	inc    edi
  42054b:	iret   
  42054c:	imul   edi,ecx,0xb9c87b9b
  420552:	dec    esp
  420553:	mov    al,0x31
  420555:	ja     0x4204d8
  420557:	cmp    BYTE PTR [ebx],0x77
  42055a:	pop    ds
  42055b:	shl    DWORD PTR [ebx+ecx*8-0x12],1
  42055f:	xor    al,0x6d
  420561:	mov    DWORD PTR [edx+eax*4],edi
  420564:	fcmovb st,st(5)
  420566:	rol    BYTE PTR [esi-0x15a9e9a2],0xe3
  42056d:	dec    ebx
  42056e:	mov    eax,0x3cc9e01a
  420573:	pushf  
  420574:	loope  0x42053c
  420576:	jp     0x42051b
  420578:	loop   0x42058b
  42057a:	cmc    
  42057b:	fs cmp eax,0xd2fc4550
  420581:	adc    eax,0x52fe78ca
  420586:	sbb    DWORD PTR [ebx-0x1b],edx
  420589:	mov    ecx,0x6979f775
  42058e:	(bad)  
  42058f:	push   cs
  420590:	iret   
  420591:	imul   cl
  420593:	les    ecx,FWORD PTR [edi]
  420595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420596:	sub    DWORD PTR ds:0x61998d9,ebp
  42059c:	gs in  al,0xf2
  42059f:	stc    
  4205a0:	mov    dl,0x99
  4205a2:	ret    0xf7c8
  4205a5:	loop   0x42055d
  4205a7:	int3   
  4205a8:	inc    edx
  4205a9:	mov    eax,0x7236c211
  4205ae:	sbb    al,0xd4
  4205b0:	icebp  
  4205b1:	gs jge 0x42060c
  4205b4:	sbb    DWORD PTR [eax+0x5ed14bba],edx
  4205ba:	out    0x35,al
  4205bc:	arpl   WORD PTR [eax-0x1971b0e3],cx
  4205c2:	inc    edx
  4205c3:	mov    dl,0xc5
  4205c5:	adc    eax,0x4436833f
  4205ca:	push   esp
  4205cb:	aas    
  4205cc:	or     al,0xe9
  4205ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205cf:	jmp    0x420609
  4205d1:	or     BYTE PTR [ebx-0x16],dl
  4205d4:	rcr    BYTE PTR [ebp-0x274a9c56],1
  4205da:	add    esp,ebp
  4205dc:	sar    BYTE PTR [edx-0x437754af],0x4a
  4205e3:	dec    ebp
  4205e4:	aaa    
  4205e5:	dec    ecx
  4205e6:	into   
  4205e7:	fsubr  QWORD PTR [edi]
  4205e9:	sbb    al,0xbc
  4205eb:	mov    dh,0x3c
  4205ed:	loopne 0x4205e9
  4205ef:	dec    edx
  4205f0:	mov    ds:0xadce7ec,eax
  4205f5:	mov    edx,0x7c00f88d
  4205fa:	fbstp  TBYTE PTR [eax-0x1c]
  4205fd:	push   edx
  4205fe:	int    0x9b
  420600:	out    0xf1,eax
  420602:	imul   ebp,DWORD PTR [ebp-0x18],0x5540d7f3
  420609:	mov    eax,0xbb39582a
  42060e:	xchg   esp,eax
  42060f:	inc    ecx
  420610:	or     bl,BYTE PTR [ebx+edx*4+0x19]
  420614:	call   0xac88:0x548c6f1a
  42061b:	xor    eax,0xcb852b63
  420620:	mov    bh,0xf4
  420622:	xchg   ebx,eax
  420623:	add    al,0xc2
  420625:	sub    al,0x3f
  420627:	xchg   esp,eax
  420628:	jmp    0x52db4d24
  42062d:	jae    0x42061a
  42062f:	xchg   DWORD PTR [edi],edx
  420631:	sub    ch,BYTE PTR [esi]
  420633:	pop    eax
  420634:	or     bh,BYTE PTR [ecx]
  420636:	mov    bh,0xe9
  420638:	add    ch,BYTE PTR [esi-0x23]
  42063b:	cld    
  42063c:	dec    ebp
  42063d:	inc    eax
  42063e:	imul   edx,ebp,0x51
  420641:	aaa    
  420642:	out    0xc1,eax
  420644:	pop    ss
  420645:	inc    edi
  420646:	lahf   
  420647:	xchg   esp,eax
  420648:	xor    ah,BYTE PTR [eax-0x46]
  42064b:	test   BYTE PTR [ecx-0x5a],al
  42064e:	in     eax,0xfb
  420650:	out    dx,eax
  420651:	dec    edx
  420652:	les    esi,FWORD PTR [eax-0x52]
  420655:	adc    bl,BYTE PTR ds:0x1ca2b6b3
  42065b:	fcomp  DWORD PTR [edx+edi*4-0x62]
  42065f:	cmp    bl,bl
  420661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420662:	xor    BYTE PTR ds:0x2c0c5b1c,0xf6
  420669:	lods   al,BYTE PTR ds:[esi]
  42066a:	sbb    edx,DWORD PTR [edx]
  42066c:	mov    ds:0x63439a8b,eax
  420671:	sub    DWORD PTR [eax],ebx
  420673:	mov    ah,0x63
  420675:	aas    
  420676:	dec    esp
  420677:	ins    BYTE PTR es:[edi],dx
  420678:	mov    bh,0x30
  42067a:	sbb    eax,0x7dd64243
  42067f:	ret    0x32c8
  420682:	outs   dx,DWORD PTR ds:[esi]
  420683:	aam    0xe9
  420685:	mov    ebp,0xa6bd93b5
  42068a:	push   eax
  42068b:	aaa    
  42068c:	adc    edx,esi
  42068e:	mov    WORD PTR gs:[edx+0x1a986475],gs
  420695:	fistp  QWORD PTR [esi+0x6702a502]
  42069b:	push   cs
  42069c:	lock and BYTE PTR [esi-0x25],0x56
  4206a1:	fisttp QWORD PTR [ebx]
  4206a3:	arpl   WORD PTR [eax+0x468bc5c5],bx
  4206a9:	mov    ss,WORD PTR [ebp+0x6c]
  4206ac:	mov    bh,0x33
  4206ae:	or     cl,BYTE PTR [ebp-0x30]
  4206b1:	cmp    esi,DWORD PTR [eax]
  4206b3:	call   0xe57a079b
  4206b8:	pushf  
  4206b9:	push   esp
  4206ba:	xchg   esi,eax
  4206bb:	mov    bh,dh
  4206bd:	sub    al,0xc6
  4206bf:	mov    dl,0x29
  4206c1:	int3   
  4206c2:	sub    DWORD PTR [eax-0x7b],esi
  4206c5:	jg     0x420674
  4206c7:	fimul  WORD PTR [edx+0x17c7378b]
  4206cd:	mov    bl,0xbc
  4206cf:	scas   al,BYTE PTR es:[edi]
  4206d0:	imul   edx,DWORD PTR [edi-0x5dcbcdf0],0xffffff8f
  4206d7:	das    
  4206d8:	pop    esp
  4206d9:	or     al,0xd4
  4206db:	pop    es
  4206dc:	mov    WORD PTR [esi+0x7a],gs
  4206df:	mov    bh,0xb8
  4206e1:	popa   
  4206e2:	sti    
  4206e3:	push   ebx
  4206e4:	mov    edi,0xfc56968a
  4206e9:	pop    ds
  4206ea:	mov    esp,0xdf6576e4
  4206ef:	mov    edi,0x90e4f449
  4206f4:	scas   eax,DWORD PTR es:[edi]
  4206f5:	int    0x39
  4206f7:	inc    esp
  4206f8:	imul   ebp,DWORD PTR [edi],0x52b8c01b
  4206fe:	cmp    bh,BYTE PTR [eax+0x40caf287]
  420704:	nop
  420705:	aam    0x93
  420707:	mov    edx,0x2612340a
  42070c:	pop    edi
  42070d:	mov    eax,0x73eb8958
  420712:	test   al,0x7d
  420714:	and    DWORD PTR [edi-0x6b9d7695],0x1e78b88e
  42071e:	shl    al,cl
  420720:	and    al,0xf8
  420722:	jmp    0x420755
  420724:	mov    edi,0x1ad9b2ed
  420729:	mov    esp,DWORD PTR [edx-0x5cdf663e]
  42072f:	pop    esi
  420730:	loopne 0x4206bc
  420732:	mov    ecx,0xe44e55e5
  420737:	xchg   ebp,eax
  420738:	(bad)  
  420739:	push   edx
  42073a:	pop    es
  42073b:	sub    eax,0x3192dd51
  420740:	and    edx,DWORD PTR [edx]
  420742:	fcmovnbe st,st(0)
  420744:	jecxz  0x4207af
  420746:	je     0x420799
  420748:	jmp    0x420797
  42074a:	sub    bh,al
  42074c:	jecxz  0x420711
  42074e:	stos   BYTE PTR es:[edi],al
  42074f:	hlt    
  420750:	mov    ebx,0xe2efe3f
  420755:	mov    bh,0x5e
  420757:	inc    esp
  420758:	test   BYTE PTR [esi+ebx*1],bh
  42075b:	scas   eax,DWORD PTR es:[edi]
  42075c:	jns    0x42071c
  42075e:	push   es
  42075f:	gs jge 0x420723
  420762:	or     DWORD PTR [edi],eax
  420764:	repz (bad) 
  420766:	clc    
  420767:	popf   
  420768:	jns    0x4206fd
  42076a:	jmp    0x4207a7
  42076c:	mov    edx,0x73218ab7
  420771:	popa   
  420772:	or     DWORD PTR [ecx-0x2c],edx
  420775:	sub    DWORD PTR [esi+0x2deba24d],0x4ee4d3d4
  42077f:	jl     0x42074b
  420781:	mov    ebx,edi
  420783:	jl     0x420782
  420785:	ins    DWORD PTR es:[edi],dx
  420786:	scas   ax,WORD PTR es:[edi]
  420788:	call   0xad50:0x472ac4d
  42078f:	test   al,0x24
  420791:	repz sub eax,0x73a6efde
  420797:	sti    
  420798:	mov    esi,0x56972ad9
  42079d:	jecxz  0x420760
  42079f:	fsub   QWORD PTR [ebx+ebx*1]
  4207a2:	stos   BYTE PTR es:[edi],al
  4207a3:	fcom   QWORD PTR [ecx+0x2a6de3fe]
  4207a9:	clc    
  4207aa:	mul    eax
  4207ac:	mov    cl,0xa1
  4207ae:	repz fild WORD PTR [eax+0x78]
  4207b2:	pop    DWORD PTR [ebp-0x3b69920a]
  4207b8:	mov    eax,ds:0xc922f8a4
  4207bd:	fbstp  TBYTE PTR [ebp+0x3d]
  4207c0:	dec    esp
  4207c1:	out    0xf1,al
  4207c3:	pop    ds
  4207c4:	cmp    ebx,ebp
  4207c6:	sub    dh,BYTE PTR [ebx]
  4207c8:	or     ebp,ebx
  4207ca:	pop    esi
  4207cb:	mov    ebp,ss
  4207cd:	sti    
  4207ce:	xchg   ecx,eax
  4207cf:	les    esp,FWORD PTR [ebx]
  4207d1:	jnp    0x42079f
  4207d3:	(bad)  [edi+0x11]
  4207d6:	test   eax,0xa24ed23a
  4207db:	adc    ecx,DWORD PTR [edx+0xe]
  4207de:	stos   DWORD PTR es:[edi],eax
  4207df:	pop    eax
  4207e0:	lock xchg ebx,eax
  4207e2:	nop
  4207e3:	xor    ebx,DWORD PTR [esp+edx*2]
  4207e6:	aam    0x44
  4207e8:	xor    ecx,DWORD PTR [ebp+ebp*1-0x5478d6e2]
  4207ef:	repz (bad) 
  4207f1:	jp     0x42086b
  4207f3:	mov    ebp,DWORD PTR [ebx+0x7f]
  4207f6:	dec    eax
  4207f7:	sbb    dl,BYTE PTR [eax]
  4207f9:	and    DWORD PTR [esi],eax
  4207fb:	mov    eax,0x27913418
  420800:	mov    ebx,0x82e8dea0
  420805:	xchg   esp,eax
  420806:	out    0x34,eax
  420808:	push   edx
  420809:	stc    
  42080a:	pop    ecx
  42080b:	xchg   edx,eax
  42080c:	jge    0x4207ca
  42080e:	mov    eax,0xd474c45a
  420813:	cmp    ch,BYTE PTR ds:0xadcdd62a
  420819:	and    al,0x85
  42081b:	adc    esi,DWORD PTR [edx-0x404c0ec9]
  420821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420822:	push   eax
  420823:	test   DWORD PTR [edx],ebp
  420825:	pop    esp
  420826:	jae    0x4207af
  420828:	pop    esp
  420829:	inc    edx
  42082a:	in     eax,dx
  42082b:	in     al,dx
  42082c:	cmp    BYTE PTR [esi-0x743a0345],bh
  420832:	cwde   
  420833:	mul    DWORD PTR [ecx]
  420835:	aam    0xe5
  420837:	ins    BYTE PTR es:[edi],dx
  420838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420839:	cmp    BYTE PTR [edx],bl
  42083b:	xchg   esp,eax
  42083c:	leave  
  42083d:	jl     0x420874
  42083f:	push   ecx
  420840:	imul   esp,DWORD PTR [ebx],0xffffff9d
  420843:	enter  0x89e1,0x7e
  420847:	test   BYTE PTR [esp+ebx*2],bl
  42084a:	sub    al,0xa3
  42084c:	ror    BYTE PTR [eax+0x21],1
  42084f:	imul   esi,DWORD PTR [edx],0xffffff90
  420852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420853:	fdivr  QWORD PTR ds:0xa7790c3e
  420859:	sub    DWORD PTR [edi+0x71],edi
  42085c:	fbld   TBYTE PTR [ecx+0x3d]
  42085f:	dec    edx
  420860:	es inc edx
  420862:	dec    esi
  420863:	rcr    ch,cl
  420865:	fbld   TBYTE PTR [edi-0x50943895]
  42086b:	mov    al,dl
  42086d:	out    0xe1,al
  42086f:	pop    edi
  420870:	xchg   ebp,eax
  420871:	out    dx,eax
  420872:	mov    ds:0x59dca5e3,eax
  420877:	mov    eax,0xf255fd9
  42087c:	into   
  42087d:	rol    BYTE PTR [esi+ecx*2-0x34bd9e20],cl
  420884:	xchg   BYTE PTR [edi+0x12b500dc],al
  42088a:	xor    BYTE PTR es:[esi-0x7c74666e],ch
  420891:	sub    edi,eax
  420893:	cvtps2pd xmm3,xmm0
  420896:	out    0x99,al
  420898:	push   edi
  420899:	jg     0x4208c1
  42089b:	in     eax,0x2b
  42089d:	jg     0x42090e
  42089f:	dec    edx
  4208a0:	sub    al,BYTE PTR [edi+esi*4-0x3716aefe]
  4208a7:	mov    dl,0x35
  4208a9:	inc    ecx
  4208aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208ab:	enter  0xc7be,0xac
  4208af:	mov    ecx,edi
  4208b1:	push   0x821d928d
  4208b6:	fsubr  QWORD PTR [edx-0x564f1634]
  4208bc:	jg     0x420891
  4208be:	cmp    ch,BYTE PTR ds:0xfcfd5cf2
  4208c4:	call   0x6785:0x2c348d59
  4208cb:	or     eax,edi
  4208cd:	xor    DWORD PTR [eax-0x27],ecx
  4208d0:	(bad)  
  4208d1:	dec    esp
  4208d2:	push   cs
  4208d3:	mov    dl,0x4c
  4208d5:	mov    al,ds:0xa20aaa3
  4208da:	xchg   DWORD PTR [esi],ebp
  4208dc:	rol    BYTE PTR [esi-0x50],1
  4208df:	jo     0x4208ed
  4208e1:	jp     0x4208c1
  4208e3:	push   edx
  4208e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208e5:	dec    ebp
  4208e6:	and    BYTE PTR [edi],al
  4208e8:	shl    BYTE PTR [ebp+0x41],cl
  4208eb:	sbb    BYTE PTR [edx+0x43],dl
  4208ee:	sbb    BYTE PTR ds:0x86b2ab7d,ch
  4208f4:	pop    edx
  4208f5:	or     cl,ch
  4208f7:	lock xchg ebx,eax
  4208f9:	fild   WORD PTR [ecx-0x2669b81a]
  4208ff:	inc    eax
  420900:	sub    DWORD PTR [edi+0x96fdf19],ebx
  420906:	dec    ecx
  420907:	sub    dh,cl
  420909:	adc    eax,0x8fa8caef
  42090e:	pop    esp
  42090f:	sbb    BYTE PTR [ecx+0x50fccd1],dl
  420915:	pusha  
  420916:	mov    esi,0x3f8fe69a
  42091b:	xchg   ebp,eax
  42091c:	icebp  
  42091d:	pop    edx
  42091e:	mov    bh,0x52
  420920:	les    edi,FWORD PTR [ecx]
  420922:	mov    eax,ecx
  420924:	xchg   esi,eax
  420925:	stc    
  420926:	mov    ds:0x1cda4de1,eax
  42092b:	std    
  42092c:	ins    DWORD PTR es:[edi],dx
  42092d:	in     eax,dx
  42092e:	sub    al,0x1a
  420930:	nop
  420931:	inc    ebx
  420932:	adc    dh,BYTE PTR [esi-0x29ac3dcc]
  420938:	jb     0x4208c2
  42093a:	hlt    
  42093b:	pop    edi
  42093c:	xor    al,0xa0
  42093e:	stos   BYTE PTR es:[edi],al
  42093f:	rcl    edx,0xa
  420942:	rol    DWORD PTR [eax+0x32],1
  420945:	or     eax,0x4f203b3c
  42094a:	sub    eax,0x8ea6b3d5
  42094f:	popa   
  420950:	addr16 mov ds:0xbde3,al
  420954:	push   ss
  420955:	and    esi,DWORD PTR [eax]
  420957:	mov    bh,0xf4
  420959:	xchg   esp,eax
  42095a:	(bad)  
  42095b:	mov    ecx,0x14cfde8a
  420960:	imul   esi,DWORD PTR [ebx],0x14
  420963:	jae    0x420962
  420965:	or     al,0xa3
  420967:	pop    es
  420968:	stos   BYTE PTR es:[edi],al
  420969:	scas   eax,DWORD PTR es:[edi]
  42096a:	pop    ds
  42096b:	outs   dx,BYTE PTR ds:[esi]
  42096c:	push   eax
  42096d:	or     ebp,DWORD PTR [esi]
  42096f:	mul    DWORD PTR [eax+0x19dc8221]
  420975:	cld    
  420976:	fcom   QWORD PTR [ecx-0x5e]
  420979:	mul    esi
  42097b:	lds    edx,FWORD PTR [ebx]
  42097d:	pop    ds
  42097e:	add    dl,0x5f
  420981:	xchg   edi,eax
  420982:	xchg   ebp,eax
  420983:	pop    eax
  420984:	test   esi,eax
  420986:	cdq    
  420987:	inc    esp
  420988:	not    edi
  42098a:	mov    WORD PTR [edi],gs
  42098c:	(bad)  
  42098d:	pop    ebp
  42098e:	push   edi
  42098f:	mov    al,ds:0xd9f07a8
  420994:	nop
  420995:	and    DWORD PTR ds:0xc6f36986,esi
  42099b:	dec    esp
  42099c:	xchg   DWORD PTR [esi-0x205e05b0],esp
  4209a2:	jno    0x420953
  4209a4:	mov    ebp,0x44620ea1
  4209a9:	test   BYTE PTR [edi+0x41494ed9],al
  4209af:	pop    edi
  4209b0:	mov    edx,0x80e49127
  4209b5:	mov    DWORD PTR [edi+0x85b5130],ebx
  4209bb:	mov    DWORD PTR [esi+0x142886fe],esp
  4209c1:	add    eax,0xa9ed3c3b
  4209c6:	loope  0x420961
  4209c8:	or     bh,0x21
  4209cb:	push   ds
  4209cc:	push   ecx
  4209cd:	jl     0x4209ae
  4209cf:	add    DWORD PTR [eax-0xa],0xf12d9f04
  4209d6:	rcr    DWORD PTR [ecx],0xaa
  4209d9:	jmp    0xa518d12e
  4209de:	pop    esi
  4209df:	xor    ebx,DWORD PTR [eax-0x3e]
  4209e2:	push   bp
  4209e4:	pushf  
  4209e5:	lahf   
  4209e6:	dec    eax
  4209e7:	ret    
  4209e8:	and    eax,DWORD PTR [ecx]
  4209ea:	or     al,0xf9
  4209ec:	mov    BYTE PTR [edx+0x31a04bb8],ah
  4209f2:	xchg   edx,eax
  4209f3:	xor    al,0x82
  4209f5:	pusha  
  4209f6:	lods   al,BYTE PTR ds:[esi]
  4209f7:	adc    DWORD PTR [edx+0x6d0ace96],0xb614878b
  420a01:	loopne 0x4209ca
  420a03:	mov    ebx,0x14aa34f6
  420a08:	jmp    0x6b97de61
  420a0d:	inc    ecx
  420a0e:	sbb    DWORD PTR [ebx-0x857584f],0x4
  420a15:	dec    edx
  420a16:	popa   
  420a17:	lds    edx,FWORD PTR [edx+esi*4]
  420a1a:	add    BYTE PTR [ecx-0x6d105bc6],cl
  420a20:	mov    dh,0x65
  420a22:	inc    ebx
  420a23:	jo     0x4209aa
  420a25:	in     al,dx
  420a26:	leave  
  420a27:	stos   DWORD PTR es:[edi],eax
  420a28:	mov    ds:0x6c49e438,al
  420a2d:	xor    al,0x6
  420a2f:	mov    ebx,0x726d062a
  420a34:	aad    0xc1
  420a36:	lahf   
  420a37:	call   0x69d:0x4d0c074
  420a3e:	mov    DWORD PTR [esi],edi
  420a40:	out    dx,al
  420a41:	or     DWORD PTR [ecx-0x4],esi
  420a44:	rol    BYTE PTR [esi+0x1cff679f],0x55
  420a4b:	xor    BYTE PTR [esi],bh
  420a4d:	sbb    ebx,DWORD PTR [edi+0x79]
  420a50:	stos   BYTE PTR es:[edi],al
  420a51:	xchg   esp,eax
  420a52:	test   al,0x5f
  420a54:	mov    edi,0xffd075d1
  420a59:	dec    DWORD PTR [ebp-0x215478aa]
  420a5f:	push   ebx
  420a60:	xor    bl,ch
  420a62:	dec    ecx
  420a63:	jge    0x420a88
  420a65:	lahf   
  420a66:	aam    0x3b
  420a68:	bound  ebx,QWORD PTR [edx-0x536e5f9a]
  420a6e:	ficomp WORD PTR [eax+0x2f]
  420a71:	loop   0x420a79
  420a73:	cld    
  420a74:	fwait
  420a75:	lock push ebx
  420a77:	sbb    BYTE PTR [ecx+0x5f],dl
  420a7a:	sbb    eax,0xa68ad587
  420a7f:	mov    dl,0xd7
  420a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a82:	pop    esi
  420a83:	fldenv [ecx-0x69]
  420a86:	mov    dh,0xa
  420a88:	int    0x39
  420a8a:	imul   edx,eax,0x2d845d8d
  420a90:	test   DWORD PTR cs:[edi],esp
  420a93:	retf   0xac88
  420a96:	daa    
  420a97:	data16 jno 0x420a29
  420a9a:	add    ch,BYTE PTR [ebx+0x7882b1c8]
  420aa0:	mov    bl,0xd3
  420aa2:	cdq    
  420aa3:	out    0x1a,eax
  420aa5:	fmul   st(5),st
  420aa7:	outs   dx,DWORD PTR ds:[esi]
  420aa8:	jge    0x420ace
  420aaa:	pop    esi
  420aab:	dec    ecx
  420aac:	xchg   ebx,eax
  420aad:	push   cs
  420aae:	mov    esi,0xceb03caf
  420ab3:	scas   al,BYTE PTR es:[edi]
  420ab4:	sub    dl,BYTE PTR [edi-0x77]
  420ab7:	or     edi,DWORD PTR [ecx]
  420ab9:	daa    
  420aba:	adc    edx,esp
  420abc:	loop   0x420aaa
  420abe:	jp     0x420ace
  420ac0:	sti    
  420ac1:	clc    
  420ac2:	mov    eax,DWORD PTR [edx+0x0]
  420ac5:	mov    dh,0x6d
  420ac7:	ja     0x420aba
  420ac9:	xor    BYTE PTR [ecx+0x1ad74903],dl
  420acf:	aaa    
  420ad0:	int3   
  420ad1:	jmp    FWORD PTR [edi+edi*2]
  420ad4:	xor    edi,DWORD PTR [ebp+0x781093a]
  420ada:	add    DWORD PTR [esi],edx
  420adc:	nop
  420add:	mov    ebx,0x9a649e88
  420ae2:	and    BYTE PTR [ebx],dh
  420ae4:	push   cs
  420ae5:	and    al,BYTE PTR [ebx+0x37]
  420ae8:	mov    al,ds:0x2984b367
  420aed:	xor    ch,BYTE PTR [eax-0x62]
  420af0:	xor    BYTE PTR [esi+0x4e],ah
  420af3:	push   ebp
  420af4:	into   
  420af5:	test   al,0x56
  420af7:	and    ebx,edi
  420af9:	mov    al,ds:0xf7d0ca27
  420afe:	sbb    eax,0x5252c2fb
  420b03:	ins    BYTE PTR es:[edi],dx
  420b04:	out    0x52,al
  420b06:	xchg   edx,eax
  420b07:	ins    BYTE PTR es:[edi],dx
  420b08:	pop    ebx
  420b09:	fiadd  DWORD PTR [esi-0x9]
  420b0c:	loopne 0x420b2a
  420b0e:	add    bl,BYTE PTR [bx+si-0x3b63]
  420b13:	ins    DWORD PTR es:[edi],dx
  420b14:	add    esp,DWORD PTR [edi+0x5443068a]
  420b1a:	xchg   esp,eax
  420b1b:	or     dl,BYTE PTR [eax-0x67b185fb]
  420b21:	(bad)  
  420b22:	lahf   
  420b23:	ror    DWORD PTR [ebp+eiz*4+0x6a],1
  420b27:	sub    al,0xd
  420b29:	cdq    
  420b2a:	mov    dh,0xa6
  420b2c:	mov    dh,0x4b
  420b2e:	ret    0x670f
  420b31:	mov    esi,0x39c37ffe
  420b36:	sub    al,BYTE PTR [edx+eax*1]
  420b39:	jmp    0x37ff:0xfa8533d6
  420b40:	scas   al,BYTE PTR es:[edi]
  420b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b42:	jns    0x420b5a
  420b44:	test   DWORD PTR ds:0x1ad3ddd5,ebp
  420b4a:	inc    ecx
  420b4b:	mov    esi,0xea1b36dd
  420b50:	lea    esi,[esi+0x72c4e4b5]
  420b56:	mov    ebp,ebp
  420b58:	push   ecx
  420b59:	mov    eax,gs:0xd4c9e416
  420b5f:	call   0x48a432ce
  420b64:	adc    ebx,DWORD PTR [esi]
  420b66:	jne    0x420be1
  420b68:	pop    esi
  420b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b6a:	ja     0x420af4
  420b6c:	mov    BYTE PTR [eax-0x9ed79b1],0x7c
  420b73:	ss push ds
  420b75:	inc    edx
  420b76:	rcl    ch,1
  420b78:	out    dx,al
  420b79:	cmp    al,0x7b
  420b7b:	daa    
  420b7c:	in     al,dx
  420b7d:	test   BYTE PTR [ebx-0x5ddd411e],al
  420b83:	aam    0xbd
  420b85:	lahf   
  420b86:	cli    
  420b87:	pushf  
  420b88:	push   es
  420b89:	inc    DWORD PTR [eax-0x69d3c2a]
  420b8f:	test   DWORD PTR ds:0xc1b392ea,esi
  420b95:	mov    dl,BYTE PTR [edi+0xf6e438a]
  420b9b:	xchg   edi,eax
  420b9c:	loope  0x420bb2
  420b9e:	jmp    0x420baf
  420ba0:	in     al,0xd
  420ba2:	ss in  al,0xf1
  420ba5:	aaa    
  420ba6:	add    al,0x1d
  420ba8:	fisubr DWORD PTR [ecx]
  420baa:	js     0x420b78
  420bac:	sbb    eax,0xe3c27f0f
  420bb1:	aam    0xfd
  420bb3:	dec    eax
  420bb4:	jmp    0xde25:0xea12aaee
  420bbb:	ret    0x3666
  420bbe:	pushf  
  420bbf:	or     edi,DWORD PTR [esi+0x3b63060b]
  420bc5:	cmc    
  420bc6:	das    
  420bc7:	jecxz  0x420b4d
  420bc9:	jno    0x420bc3
  420bcb:	mov    ebp,0xf97c878f
  420bd0:	sub    eax,ebx
  420bd2:	adc    al,0x60
  420bd4:	lods   eax,DWORD PTR ds:[esi]
  420bd5:	pushf  
  420bd6:	mov    esp,0xea249183
  420bdb:	adc    ebp,eax
  420bdd:	inc    esi
  420bde:	js     0x420b7b
  420be0:	inc    esp
  420be1:	out    dx,al
  420be2:	dec    ebp
  420be3:	mov    ch,BYTE PTR [ecx-0x50]
  420be6:	scas   eax,DWORD PTR es:[edi]
  420be7:	ins    BYTE PTR es:[edi],dx
  420be8:	sbb    ch,BYTE PTR [ebx-0xb]
  420beb:	xchg   edx,eax
  420bec:	inc    esp
  420bed:	jae    0x420b90
  420bef:	out    0x25,eax
  420bf1:	push   0xffffff89
  420bf3:	inc    ebp
  420bf4:	fsubr  DWORD PTR [edi-0x32]
  420bf7:	xor    eax,ebx
  420bf9:	in     eax,dx
  420bfa:	arpl   bp,si
  420bfc:	mov    eax,0x14118a25
  420c01:	icebp  
  420c02:	inc    ebp
  420c03:	mov    ss,WORD PTR [eax-0x6e]
  420c06:	adc    ebx,DWORD PTR [eax]
  420c08:	sar    DWORD PTR [ecx+0x60],1
  420c0b:	adc    DWORD PTR [ecx],0xb5cdd9bd
  420c11:	sub    al,0x3e
  420c13:	xchg   BYTE PTR [ebx+0x62],bl
  420c16:	and    al,0xf4
  420c18:	pop    ecx
  420c19:	push   esi
  420c1a:	(bad)  
  420c1b:	arpl   sp,bx
  420c1d:	test   al,0x14
  420c1f:	push   ebp
  420c20:	and    edx,esi
  420c22:	mov    ebx,0xe962522
  420c27:	popf   
  420c28:	mov    dl,0xd7
  420c2a:	push   cs
  420c2b:	jo     0x420bbd
  420c2d:	mov    eax,ds:0x2e2fe8fe
  420c32:	sub    cl,BYTE PTR [edx+0x6ce9ab85]
  420c38:	add    ebp,DWORD PTR [ebx+0x5c]
  420c3b:	test   BYTE PTR [ecx],dh
  420c3d:	arpl   sp,cx
  420c3f:	push   ds
  420c40:	call   0x2644:0xd534
  420c46:	push   esi
  420c47:	sub    eax,0x12f30664
  420c4c:	fsub   st(5),st
  420c4e:	mov    ah,0xf3
  420c50:	ss stos DWORD PTR es:[edi],eax
  420c52:	xlat   BYTE PTR ds:[ebx]
  420c53:	gs cli 
  420c55:	imul   ebp,DWORD PTR [edx-0x5e],0x45
  420c59:	out    0xd4,al
  420c5b:	fsub   DWORD PTR [ebx+ebx*4-0x27]
  420c5f:	mov    cs,WORD PTR [ecx+0x31]
  420c62:	fdiv   DWORD PTR [edx]
  420c64:	jns    0x420bef
  420c66:	sbb    eax,0xa6e14a32
  420c6b:	out    0x33,eax
  420c6d:	cli    
  420c6e:	cmp    bl,BYTE PTR [ebx-0x51]
  420c71:	les    eax,FWORD PTR [edx-0x4f5449f2]
  420c77:	pop    esi
  420c78:	mov    al,ch
  420c7a:	out    dx,eax
  420c7b:	in     al,dx
  420c7c:	imul   edx,DWORD PTR [ebx+eax*4],0x2c9590db
  420c83:	jp     0x420c61
  420c85:	(bad)  
  420c87:	sbb    BYTE PTR [edi+0x19928598],al
  420c8d:	xchg   esp,eax
  420c8e:	xor    eax,0xca2345cb
  420c93:	xor    bh,BYTE PTR [ebp-0x76]
  420c96:	enter  0xe71d,0xde
  420c9a:	out    dx,al
  420c9b:	xor    DWORD PTR [eax],ebx
  420c9d:	imul   edx,DWORD PTR [ebx-0x22],0x11e21109
  420ca4:	(bad)
  420ca8:	mov    ds:0x4efde25d,eax
  420cad:	push   0x73
  420caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb0:	fidiv  DWORD PTR [ecx+0x13]
  420cb3:	test   BYTE PTR es:[esi+ebp*1-0x1a],al
  420cb8:	or     DWORD PTR [edx+0x21218067],ecx
  420cbe:	jmp    0x7d1c1721
  420cc3:	dec    ebp
  420cc4:	call   0x3b1aa561
  420cc9:	loopne 0x420cfc
  420ccb:	ins    BYTE PTR es:[edi],dx
  420ccc:	cmp    DWORD PTR [ebx],ebx
  420cce:	or     eax,0xfafeefd9
  420cd3:	mov    al,ds:0x5535ad38
  420cd8:	push   ecx
  420cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cda:	dec    ecx
  420cdb:	dec    esp
  420cdc:	dec    esi
  420cdd:	call   0xd0d1:0x4e6a0040
  420ce4:	scas   eax,DWORD PTR es:[edi]
  420ce5:	mov    eax,ds:0xbfae5925
  420cea:	pusha  
  420ceb:	iret   
  420cec:	shr    DWORD PTR [ebx+0x3739a7f2],1
  420cf2:	jle    0x420ccf
  420cf4:	in     al,0xd
  420cf6:	jbe    0x420cff
  420cf8:	shl    BYTE PTR [ebx+0x3f],0x3f
  420cfc:	mov    edi,0x50195219
  420d01:	jbe    0x420d66
  420d03:	lahf   
  420d04:	or     ah,cl
  420d06:	test   al,0x5c
  420d08:	repnz (bad) 
  420d0a:	sbb    eax,0x55975a79
  420d0f:	retf   0x673
  420d12:	pop    esp
  420d13:	mov    eax,ds:0x35727815
  420d18:	fst    DWORD PTR [eax-0x38]
  420d1b:	jne    0x420d3b
  420d1d:	sahf   
  420d1e:	(bad)  
  420d1f:	cmp    eax,0x5dc14fd4
  420d24:	add    ebp,edi
  420d26:	pusha  
  420d27:	in     eax,0x97
  420d29:	js     0x420d62
  420d2b:	xor    BYTE PTR [edx+0x322012ab],ch
  420d31:	adc    eax,0xc905ce60
  420d36:	je     0x420d71
  420d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d39:	in     eax,dx
  420d3a:	addr16 js 0x420cd5
  420d3d:	aam    0x5e
  420d3f:	repnz adc ebx,DWORD PTR [edx+0x7d]
  420d43:	dec    ebp
  420d44:	ds push esi
  420d46:	jno    0x420d9b
  420d48:	inc    esi
  420d49:	xchg   eax,ecx
  420d4b:	popf   
  420d4c:	push   ecx
  420d4d:	dec    esi
  420d4e:	adc    al,0xdc
  420d50:	cli    
  420d51:	mov    ah,0x44
  420d53:	xor    DWORD PTR [edi+0x5d4d6769],ebx
  420d59:	cdq    
  420d5a:	(bad)  
  420d5b:	mov    esp,0x66402a2f
  420d60:	dec    edx
  420d61:	enter  0x8c85,0x2a
  420d65:	xor    DWORD PTR [edx-0x6671b347],edi
  420d6b:	outs   dx,BYTE PTR ds:[esi]
  420d6c:	sub    al,0x8
  420d6e:	jo     0x420cf4
  420d70:	imul   edi,DWORD PTR [edi+0x4b],0x5a13c692
  420d77:	xor    al,0xcf
  420d79:	jecxz  0x420d25
  420d7b:	inc    edx
  420d7c:	pop    esp
  420d7d:	into   
  420d7e:	stc    
  420d7f:	ins    BYTE PTR es:[edi],dx
  420d80:	pop    edi
  420d81:	test   edi,ebx
  420d83:	lds    esp,FWORD PTR [eax-0x7b]
  420d86:	and    BYTE PTR [edx],al
  420d88:	pop    eax
  420d89:	aas    
  420d8a:	jb     0x420d37
  420d8c:	cs pop esi
  420d8e:	pop    ebp
  420d8f:	bound  eax,QWORD PTR [edx-0x53]
  420d92:	sbb    al,0xce
  420d94:	shl    DWORD PTR [ebx-0x71879f56],0xe3
  420d9b:	mov    edi,eax
  420d9d:	pop    eax
  420d9e:	jae    0x420dad
  420da0:	cmp    DWORD PTR [ebx],eax
  420da2:	cs inc eax
  420da4:	adc    al,0x1e
  420da6:	mov    edi,0x3da9dfe2
  420dab:	arpl   WORD PTR [edi+0x5f193769],dx
  420db1:	add    BYTE PTR [esi+edi*1],0x14
  420db5:	popa   
  420db6:	cmc    
  420db7:	jg     0x420d65
  420db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dba:	and    BYTE PTR [edi-0x10fa8a76],bh
  420dc0:	popf   
  420dc1:	sbb    BYTE PTR [edx-0x4ad12bb2],cl
  420dc7:	mov    ah,0xc2
  420dc9:	dec    edx
  420dca:	jl     0x420d8a
  420dcc:	loopne 0x420e28
  420dce:	pusha  
  420dcf:	jp     0x420d8a
  420dd1:	shl    ecx,1
  420dd3:	pop    ss
  420dd4:	aam    0x85
  420dd6:	adc    al,bl
  420dd8:	xor    eax,0x9a543e75
  420ddd:	cwde   
  420dde:	aas    
  420ddf:	jae    0x420da3
  420de1:	or     esi,ebp
  420de3:	xchg   edi,eax
  420de4:	pop    edi
  420de5:	jo     0x420dd7
  420de7:	mov    eax,edx
  420de9:	sub    eax,0xdb0cf4c
  420dee:	sub    edx,ecx
  420df0:	mov    ah,0x17
  420df2:	test   esi,ebp
  420df4:	mov    eax,0xa1886ccc
  420df9:	in     al,dx
  420dfa:	pop    edx
  420dfb:	bound  edx,QWORD PTR [edx+0x76]
  420dfe:	cdq    
  420dff:	into   
  420e00:	fiadd  WORD PTR [ecx+edi*8+0x75c43ff7]
  420e07:	cs leave 
  420e09:	sub    DWORD PTR [edi+eiz*4],esp
  420e0c:	pop    ds
  420e0d:	sar    DWORD PTR [ebp+0xc15bcae],1
  420e13:	jecxz  0x420e75
  420e15:	sub    ah,dl
  420e17:	mov    ebp,DWORD PTR [edi]
  420e19:	cs into 
  420e1b:	pop    esp
  420e1c:	add    al,BYTE PTR [eax]
  420e1e:	retf   
  420e1f:	mov    ecx,0x943f9642
  420e24:	sbb    ebp,DWORD PTR [ecx-0x784298aa]
  420e2a:	repnz pop ss
  420e2c:	inc    ebp
  420e2d:	aad    0x9e
  420e2f:	mov    ds:0x3c52fd79,eax
  420e34:	jmp    0x420e04
  420e36:	inc    edx
  420e37:	adc    DWORD PTR [ebx-0x56dfba7c],edx
  420e3d:	sub    al,0x24
  420e3f:	mov    al,gs:0x418f0019
  420e45:	std    
  420e46:	adc    edx,DWORD PTR [ecx+0x25]
  420e49:	push   es
  420e4a:	int3   
  420e4b:	cmp    bl,cl
  420e4d:	sub    ch,BYTE PTR ds:0xe5d5b3d1
  420e53:	(bad)  
  420e54:	pushf  
  420e55:	pop    esi
  420e56:	mov    eax,ds:0x83d791ca
  420e5b:	ror    BYTE PTR [edi+ecx*2-0x80],1
  420e5f:	stc    
  420e60:	test   eax,0x6bdf56c1
  420e65:	cmp    DWORD PTR [ecx+edi*8-0x4599b511],0x17e97964
  420e70:	(bad)  
  420e71:	ins    BYTE PTR es:[edi],dx
  420e72:	dec    edi
  420e73:	pop    ecx
  420e74:	aad    0x5
  420e76:	enter  0x560d,0xb2
  420e7a:	repz (bad) ss:[ebx]
  420e7e:	pusha  
  420e7f:	lea    ebx,[ebx-0x4]
  420e82:	or     edi,DWORD PTR ss:[ecx]
  420e85:	jmp    0x4154:0xf2b94bd6
  420e8c:	sbb    cl,cl
  420e8e:	cmp    eax,0x3e71a281
  420e93:	jno    0x420e9f
  420e95:	test   DWORD PTR [edx],0x5ab6975b
  420e9b:	adc    dh,al
  420e9d:	fs fwait
  420e9f:	mov    BYTE PTR [edx],ch
  420ea1:	ins    DWORD PTR es:[edi],dx
  420ea2:	push   ds
  420ea3:	ss push edx
  420ea5:	add    BYTE PTR [edx*4+0x31a11909],0xa5
  420ead:	and    cl,ch
  420eaf:	or     ebp,0xffffffa0
  420eb2:	fcomip st,st(2)
  420eb4:	cdq    
  420eb5:	inc    ecx
  420eb6:	sbb    esi,DWORD PTR [eax]
  420eb8:	and    DWORD PTR [edx+edi*8-0x42],ebp
  420ebc:	xchg   esi,eax
  420ebd:	xor    eax,0x51bb8e30
  420ec2:	fcomp  st(1)
  420ec4:	jg     0x420f33
  420ec6:	loop   0x420f1b
  420ec8:	in     al,dx
  420ec9:	aaa    
  420eca:	mov    bh,BYTE PTR [edi+ecx*2]
  420ecd:	aas    
  420ece:	pop    eax
  420ecf:	push   esi
  420ed0:	pop    ebx
  420ed1:	fidiv  WORD PTR [esi]
  420ed3:	sbb    al,0xbe
  420ed5:	pop    edx
  420ed6:	cmp    eax,0xaba31ee2
  420edb:	dec    edx
  420edc:	ficomp DWORD PTR [ebp+0x51]
  420edf:	imul   al
  420ee1:	adc    BYTE PTR [edi+esi*2-0x75931d7c],ah
  420ee8:	ins    BYTE PTR es:[edi],dx
  420ee9:	(bad)  
  420eea:	dec    BYTE PTR [edi-0x7a99d807]
  420ef0:	mov    bh,cl
  420ef2:	stos   BYTE PTR es:[edi],al
  420ef3:	fsubr  QWORD PTR [eax+0x3078da01]
  420ef9:	inc    ebx
  420efa:	ss pop ds
  420efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420efd:	into   
  420efe:	in     al,dx
  420eff:	retf   0x8afc
  420f02:	push   esp
  420f03:	frstor [ebp+edi*4+0x1ddf97c9]
  420f0a:	lds    esi,FWORD PTR [ebp-0x7a709023]
  420f10:	and    dh,BYTE PTR ds:0x39b2b2f7
  420f16:	leave  
  420f17:	or     DWORD PTR [ebp+ebp*4-0x6d],ebx
  420f1b:	mov    ds:0x26b92b15,al
  420f20:	lock call 0x8564:0x85cf45d5
  420f28:	xchg   ebx,eax
  420f29:	in     al,dx
  420f2a:	imul   ecx,DWORD PTR [ecx-0x455f1879],0xfffffff7
  420f31:	sahf   
  420f32:	pop    edi
  420f33:	js     0x420f51
  420f35:	and    al,0xdc
  420f37:	and    DWORD PTR ds:0x3ce0fe4e,edx
  420f3d:	lods   al,BYTE PTR ds:[esi]
  420f3e:	out    dx,al
  420f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f40:	jb     0x420f1d
  420f42:	imul   DWORD PTR [ebp+0x2c7a14d]
  420f48:	or     esi,DWORD PTR [eax]
  420f4a:	sbb    bl,BYTE PTR [eax+edx*1-0x64]
  420f4e:	lock dec ebx
  420f50:	int3   
  420f51:	xchg   ebx,eax
  420f52:	push   ebp
  420f53:	or     al,0x4a
  420f55:	sbb    DWORD PTR [edx-0x22946a9d],ebx
  420f5b:	aam    0xc3
  420f5d:	out    0xf9,al
  420f5f:	cli    
  420f60:	mov    ebp,0xabf1ac54
  420f65:	mov    ebx,0x27a448f0
  420f6a:	rcl    DWORD PTR gs:[ebp+0x7af8b7c9],0x65
  420f72:	dec    esp
  420f73:	in     eax,dx
  420f74:	jb     0x420f6d
  420f76:	inc    ebp
  420f77:	dec    ebp
  420f78:	adc    ch,BYTE PTR [edx+0x37b229be]
  420f7e:	aam    0x92
  420f80:	push   0xffffffe9
  420f82:	(bad)  
  420f84:	shl    DWORD PTR [ecx+0x4aa133c1],1
  420f8a:	cmp    eax,0xce25c3f3
  420f8f:	push   ss
  420f90:	(bad)  
  420f92:	push   0x9c4d5eef
  420f97:	data16 jmp 0x42100c
  420f9a:	mov    edx,0xf8a9bd6a
  420f9f:	sbb    BYTE PTR [bp+si],ch
  420fa2:	imul   ebx,DWORD PTR [ebp-0x17],0xffffffce
  420fa6:	adc    BYTE PTR [ebp+0x44],0xd8
  420faa:	addr16 retf 0x2a92
  420fae:	adc    eax,0xa0b3ca38
  420fb3:	test   eax,0xb000935a
  420fb8:	out    0x34,eax
  420fba:	mov    esp,0x597d564e
  420fbf:	sub    ah,BYTE PTR [eax-0x71]
  420fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fc3:	or     bl,BYTE PTR [ebx+0x17ba30df]
  420fc9:	mov    WORD PTR [edx+0x58ac6d27],es
  420fcf:	ds (bad) 
  420fd2:	stos   BYTE PTR es:[edi],al
  420fd3:	xor    dl,dl
  420fd5:	bound  esp,QWORD PTR [eax]
  420fd7:	mov    bl,0xd9
  420fd9:	fimul  DWORD PTR [esi+eiz*4-0x9092585]
  420fe0:	add    ecx,DWORD PTR ds:0xb0a35794
  420fe6:	dec    ebx
  420fe7:	call   0x4032:0x17da07cf
  420fee:	clc    
  420fef:	adc    al,BYTE PTR [edi+0xa]
  420ff2:	mov    eax,ds:0x2dd510eb
  420ff7:	xchg   edx,eax
  420ff8:	mov    ss,WORD PTR [eax-0x5d45348e]
  420ffe:	scas   eax,DWORD PTR es:[edi]
  420fff:	(bad)  
  421000:	fcomp  QWORD PTR [edx-0x653bdb70]
  421006:	mov    eax,0x4d7d1ffb
  42100b:	pop    esi
  42100c:	jg     0x420fa7
  42100e:	out    dx,al
  42100f:	fidiv  WORD PTR ds:0xa50ca45e
  421015:	adc    eax,ebx
  421017:	fbld   TBYTE PTR [ebp+0x18]
  42101a:	xor    eax,DWORD PTR [ebx]
  42101c:	call   0x7741a843
  421021:	mov    eax,0x17fe4973
  421026:	lea    ebp,gs:[edx]
  421029:	cdq    
  42102a:	(bad)  
  42102b:	ins    BYTE PTR es:[edi],dx
  42102c:	add    eax,0x4bda9a30
  421031:	leave  
  421032:	or     al,0xb9
  421034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421035:	sub    al,0xed
  421038:	mov    bl,0xc4
  42103a:	xchg   ebp,eax
  42103b:	stos   DWORD PTR es:[edi],eax
  42103c:	and    dh,al
  42103e:	inc    ecx
  42103f:	push   esi
  421040:	pop    ebx
  421041:	retf   0x5bf2
  421044:	leave  
  421045:	mov    ebx,0xdb044e17
  42104a:	sbb    DWORD PTR [eax+0x31],esi
  42104d:	rcr    ebx,1
  42104f:	enter  0x9f0f,0x8f
  421053:	sub    BYTE PTR [eax+ebx*4],0x4f
  421057:	clc    
  421058:	retf   0xa89e
  42105b:	ds mov ch,0x9a
  42105e:	clc    
  42105f:	pushf  
  421060:	xchg   esi,eax
  421061:	sub    BYTE PTR [edi+0x2d],0x53
  421065:	aad    0x88
  421067:	push   eax
  421068:	out    dx,al
  421069:	sub    al,0x55
  42106b:	ss (bad) 
  42106d:	mov    cl,0xf3
  42106f:	pop    eax
  421070:	pusha  
  421071:	or     DWORD PTR [ebx],esi
  421073:	push   cs
  421074:	mov    ds:0x1b8e0c2d,eax
  421079:	xchg   ecx,eax
  42107a:	xchg   DWORD PTR [ecx+0x1b],eax
  42107d:	push   eax
  42107e:	mov    esi,0xc94c66d2
  421083:	xor    al,0xf2
  421085:	xor    edx,edx
  421087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421088:	pop    ebp
  421089:	fwait
  42108a:	mov    ch,0x60
  42108c:	add    eax,0x63be42a9
  421091:	leave  
  421092:	test   edx,ebp
  421094:	dec    edi
  421095:	js     0x4210c7
  421097:	jns    0x42101b
  421099:	xor    BYTE PTR [ecx],dh
  42109b:	fs mov esp,gs
  42109e:	int3   
  42109f:	out    dx,al
  4210a0:	add    cl,bh
  4210a2:	sbb    edx,DWORD PTR [ecx]
  4210a4:	xor    BYTE PTR [edi],0xc7
  4210a7:	scas   eax,DWORD PTR es:[edi]
  4210a8:	jno    0x4210aa
  4210aa:	xlat   BYTE PTR ds:[ebx]
  4210ab:	mov    ah,0x53
  4210ad:	push   ss
  4210ae:	hlt    
  4210af:	js     0x421048
  4210b1:	scas   eax,DWORD PTR es:[edi]
  4210b2:	mov    DWORD PTR [edx],esi
  4210b4:	xchg   edi,eax
  4210b5:	mov    bl,0x13
  4210b7:	cli    
  4210b8:	dec    esi
  4210b9:	lahf   
  4210ba:	mov    ds:0xf11d5860,al
  4210bf:	jo     0x4210ca
  4210c1:	ret    0x60d1
  4210c4:	scas   eax,DWORD PTR es:[edi]
  4210c5:	jmp    0x2d66ea05
  4210ca:	adc    al,0xa
  4210cc:	mov    eax,ds:0xd2c47cb9
  4210d1:	je     0x4210b8
  4210d3:	(bad)  
  4210d4:	sub    al,0xe5
  4210d6:	xchg   esi,eax
  4210d7:	(bad)  
  4210d8:	mov    al,ds:0x343bafb9
  4210dd:	aas    
  4210de:	mov    cl,0x40
  4210e0:	and    al,0x1f
  4210e2:	mov    ds:0x269385e,eax
  4210e7:	push   ecx
  4210e8:	fwait
  4210e9:	cmc    
  4210ea:	test   eax,0xc1162612
  4210ef:	lods   eax,DWORD PTR ds:[esi]
  4210f0:	fucomip st,st(4)
  4210f2:	call   0xcb7d:0xf901f25f
  4210f9:	adc    ecx,DWORD PTR [esi]
  4210fb:	xchg   edi,eax
  4210fc:	cli    
  4210fd:	mul    eax
  4210ff:	(bad)  
  421100:	jmp    FWORD PTR [ecx]
  421102:	push   cs
  421103:	into   
  421104:	push   edi
  421105:	pop    ss
  421106:	pop    edx
  421107:	retf   
  421108:	stc    
  421109:	xchg   ebp,eax
  42110a:	sub    edi,esp
  42110c:	mov    bl,0x2
  42110e:	les    ebp,FWORD PTR [ebx-0x477b52a]
  421114:	mov    ch,0x56
  421116:	dec    eax
  421117:	lods   al,BYTE PTR ds:[esi]
  421118:	dec    esi
  421119:	xchg   esi,eax
  42111a:	lea    eax,[ebx]
  42111c:	add    esp,DWORD PTR [ebx+ebx*1]
  42111f:	xor    esp,DWORD PTR [ecx-0x7eadac6a]
  421125:	jp     0x421170
  421127:	neg    BYTE PTR [edx+0x145a11db]
  42112d:	(bad)  
  42112e:	jnp    0x4210ff
  421130:	push   cs
  421131:	cmp    BYTE PTR [esp+ebx*8-0x6c595d77],al
  421138:	mov    BYTE PTR [esi],ch
  42113a:	cmc    
  42113b:	das    
  42113c:	mul    DWORD PTR [edi+0x46]
  42113f:	shl    ah,cl
  421141:	xor    eax,0x1bad9941
  421146:	dec    edi
  421147:	(bad)  
  421148:	mov    cl,0xc0
  42114a:	ret    
  42114b:	fisubr DWORD PTR [ebx]
  42114d:	lds    edi,FWORD PTR [ebx]
  42114f:	lods   al,BYTE PTR ds:[esi]
  421150:	mov    ecx,0xdaa270b2
  421155:	les    esi,FWORD PTR [ebx+eax*2-0x19a57ced]
  42115c:	sbb    ah,al
  42115e:	ins    DWORD PTR es:[edi],dx
  42115f:	cld    
  421160:	mov    eax,0xa2e53904
  421165:	cmc    
  421166:	dec    edi
  421167:	sub    al,BYTE PTR [edi]
  421169:	cwde   
  42116a:	shl    esp,0x4b
  42116d:	adc    edx,DWORD PTR [ecx]
  42116f:	cmp    DWORD PTR [eax+0x49c353ff],esp
  421175:	or     eax,0xf1b0c989
  42117a:	call   0xa756:0x45ab47a4
  421181:	jl     0x42111b
  421183:	cli    
  421184:	ret    0xae8c
  421187:	add    eax,ebp
  421189:	and    BYTE PTR [ecx+0x5c5393ff],0x13
  421190:	leave  
  421191:	sar    DWORD PTR [ebx+esi*4-0x49],cl
  421195:	mov    cl,BYTE PTR [edx]
  421197:	mov    dh,ch
  421199:	lahf   
  42119a:	xchg   ebx,eax
  42119b:	(bad)  
  42119c:	dec    edx
  42119d:	cli    
  42119e:	ficom  WORD PTR [ebp+ebx*2+0x1528ae1a]
  4211a5:	adc    DWORD PTR [esi],edi
  4211a7:	mov    bh,0x2f
  4211a9:	arpl   WORD PTR [eax+0x11931f56],di
  4211af:	out    dx,al
  4211b0:	fstp   DWORD PTR [ecx]
  4211b2:	loop   0x42119b
  4211b4:	push   ebx
  4211b5:	(bad)  
  4211b6:	sub    DWORD PTR [edi+0x7fd35f2d],edi
  4211bc:	xchg   edi,eax
  4211be:	push   cs
  4211bf:	(bad)  
  4211c0:	int3   
  4211c1:	or     BYTE PTR [edx-0x3b],bl
  4211c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211c5:	stos   BYTE PTR es:[edi],al
  4211c6:	aad    0xa
  4211c8:	pop    esp
  4211c9:	cs pop ebp
  4211cb:	sbb    BYTE PTR [edi],dl
  4211cd:	sysret 
  4211cf:	cwde   
  4211d0:	inc    DWORD PTR [ebx+0x58]
  4211d3:	pop    edi
  4211d4:	adc    DWORD PTR [esi+0x899920e],ebx
  4211da:	push   edi
  4211db:	cmp    eax,0x1cacce54
  4211e0:	pop    edx
  4211e1:	in     al,0x58
  4211e3:	nop
  4211e4:	enter  0x1aca,0x81
  4211e8:	fdiv   st(7),st
  4211ea:	jns    0x42116f
  4211ec:	jb     0x421226
  4211ee:	push   es
  4211ef:	push   edi
  4211f0:	xor    eax,0xcd2e13e1
  4211f5:	sub    ah,dl
  4211f7:	pop    ebp
  4211f8:	jne    0x421231
  4211fa:	xor    DWORD PTR [ecx+ebp*1],0xce59d5e8
  421201:	rcl    BYTE PTR [esi],0x20
  421204:	imul   eax,DWORD PTR [eax+0x35b333d3],0x1b0c9e68
  42120e:	adc    eax,0xa1060767
  421213:	mov    cl,0xd0
  421215:	adc    al,0x91
  421217:	in     eax,0xb5
  421219:	pop    ebp
  42121a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42121b:	in     al,dx
  42121c:	pop    ecx
  42121d:	lahf   
  42121e:	pop    ss
  42121f:	hlt    
  421220:	retf   0x1d0d
  421223:	mov    ecx,0x70303c91
  421228:	cli    
  421229:	fnstenv [eax-0x2e4f67cb]
  42122f:	mov    cl,0x2e
  421231:	rol    ah,cl
  421233:	pop    edx
  421234:	in     eax,0x56
  421236:	cli    
  421237:	push   ebx
  421238:	outs   dx,BYTE PTR ds:[esi]
  421239:	and    DWORD PTR [esi],0xb6531b6c
  42123f:	mov    ecx,0x8ea8f508
  421244:	ins    BYTE PTR es:[edi],dx
  421245:	sub    eax,0x63d0441f
  42124a:	sbb    ah,cl
  42124c:	call   0xb88e:0xc3b7987a
  421253:	mov    ecx,0xe55c2fcc
  421258:	mov    ah,0xfc
  42125a:	push   0xcdb23a22
  42125f:	add    BYTE PTR [esi+0x2a],0xbb
  421263:	pop    ss
  421264:	pop    ss
  421265:	out    dx,al
  421266:	mov    esp,0xbfbb889f
  42126b:	lahf   
  42126c:	and    ch,BYTE PTR [ebx+0x6e32cca3]
  421272:	jmp    0x348a72f9
  421277:	fsub   st(1),st
  421279:	sub    al,0x1f
  42127b:	and    eax,0x9e936b1
  421280:	pop    ebx
  421281:	int3   
  421282:	(bad)  
  421283:	test   BYTE PTR [eax],bl
  421285:	push   edi
  421286:	xor    ebp,DWORD PTR [ebx-0x68898078]
  42128c:	pop    esp
  42128d:	pop    ebx
  42128e:	jge    0x42123b
  421290:	xchg   ebp,eax
  421291:	pop    edi
  421292:	sbb    DWORD PTR [eax-0x5],eax
  421295:	mov    bh,0x97
  421297:	stos   BYTE PTR es:[edi],al
  421298:	sub    DWORD PTR [eax-0x73bb5173],eax
  42129e:	and    eax,0xd5fd7437
  4212a3:	int3   
  4212a4:	(bad)  
  4212a5:	mov    edi,0xeb9238e4
  4212aa:	loopne 0x421304
  4212ac:	xor    cl,ah
  4212ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212af:	sbb    ch,0x65
  4212b2:	xchg   ebp,eax
  4212b3:	and    eax,0xf0b4c850
  4212b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b9:	jl     0x42124e
  4212bb:	dec    ecx
  4212bc:	dec    ecx
  4212bd:	addr16 pop es
  4212bf:	and    BYTE PTR [edx],dl
  4212c1:	push   ds
  4212c2:	jmp    0xa79d:0xb0623fe7
  4212c9:	fild   WORD PTR [edx]
  4212cb:	ja     0x4212e0
  4212cd:	test   DWORD PTR [ebp+0x272da2e4],esi
  4212d3:	add    al,BYTE PTR [edx-0x9]
  4212d6:	xchg   ebx,esi
  4212d8:	imul   edi,ebx,0xd60752c5
  4212de:	sahf   
  4212df:	test   eax,0xa03a4500
  4212e4:	out    dx,eax
  4212e5:	clc    
  4212e6:	adc    edi,DWORD PTR [eax]
  4212e8:	mov    ch,0xe1
  4212ea:	retf   
  4212eb:	and    ebp,DWORD PTR [edi+0x27]
  4212ee:	cmc    
  4212ef:	jmp    0xc751:0x753d1bc6
  4212f6:	(bad)  
  4212f7:	fsubr  DWORD PTR ds:0xace1df37
  4212fd:	and    ebp,DWORD PTR [edi+esi*8+0x59]
  421301:	xchg   esp,eax
  421302:	dec    edi
  421303:	fild   WORD PTR [ecx+0x45302996]
  421309:	xchg   ebx,esi
  42130b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42130c:	out    0x8b,al
  42130e:	mov    ds:0x438e5099,eax
  421313:	mov    ds:0x84d5667d,eax
  421318:	push   ebp
  421319:	into   
  42131a:	cmp    al,BYTE PTR [eax+0x4dc3ccbd]
  421320:	mov    ebx,0xe6b96545
  421325:	outs   dx,DWORD PTR ds:[esi]
  421326:	xchg   ebp,eax
  421327:	mov    edi,ebx
  421329:	cwde   
  42132a:	(bad)  
  42132b:	or     al,0x57
  42132d:	das    
  42132e:	aaa    
  42132f:	mov    esi,0x43e05601
  421334:	loope  0x421305
  421336:	mov    eax,ds:0xc310033b
  42133b:	jmp    0x421344
  42133d:	ror    edi,cl
  42133f:	pop    cx
  421341:	jmp    0x35a238d6
  421346:	gs ret 0xc941
  42134a:	inc    eax
  42134b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42134c:	(bad)  
  42134d:	test   al,0x9
  42134f:	out    0x6d,eax
  421351:	mov    ebp,0x6bb444f1
  421356:	call   0xd10:0x5db07a25
  42135d:	sbb    BYTE PTR ss:[ecx+0x26],cl
  421361:	out    dx,eax
  421362:	xchg   ebx,eax
  421363:	arpl   WORD PTR [eax-0x3c06d67a],dx
  421369:	retf   0x30f0
  42136c:	mov    ah,0x85
  42136e:	sbb    BYTE PTR [edi+0x4d867139],bh
  421374:	rcr    DWORD PTR [ebx],1
  421376:	fs mov cl,bh
  421379:	xor    BYTE PTR [ebx],0x81
  42137c:	fucomi st,st(4)
  42137e:	push   eax
  42137f:	and    eax,0xcc2b0b5a
  421384:	mov    ebx,0xb4c0e207
  421389:	xchg   ebx,eax
  42138a:	xchg   esi,eax
  42138b:	int3   
  42138c:	jnp    0x4213eb
  42138e:	enter  0xb80d,0xc9
  421392:	cmc    
  421393:	retf   
  421394:	(bad)  
  421395:	into   
  421396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421397:	in     al,0x47
  421399:	cmp    bh,al
  42139b:	and    al,0xe6
  42139d:	loopne 0x421339
  42139f:	inc    eax
  4213a0:	inc    ebx
  4213a1:	aad    0x3b
  4213a3:	xor    bh,bl
  4213a5:	mov    bl,0x98
  4213a7:	xchg   ebx,eax
  4213a8:	das    
  4213a9:	and    al,0x53
  4213ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ac:	lods   al,BYTE PTR ds:[esi]
  4213ad:	xor    BYTE PTR [edx+0x6f],ch
  4213b0:	dec    edx
  4213b1:	daa    
  4213b2:	push   es
  4213b3:	test   BYTE PTR [edi-0x4594e712],ch
  4213b9:	mov    ds:0x8e36f728,eax
  4213be:	popf   
  4213bf:	daa    
  4213c0:	mov    edx,0x8612806f
  4213c5:	xlat   BYTE PTR ds:[ebx]
  4213c6:	leave  
  4213c7:	mov    esi,0xef7f7598
  4213cc:	lods   eax,DWORD PTR ds:[esi]
  4213cd:	test   DWORD PTR [ebx-0x6e5d1671],ebp
  4213d3:	pop    eax
  4213d4:	or     BYTE PTR [edx-0x7f],dh
  4213d7:	hlt    
  4213d8:	mov    bh,0x5f
  4213da:	xchg   ebp,eax
  4213db:	(bad)  
  4213dc:	mov    bh,0xf7
  4213de:	cmp    eax,0xb916b7ca
  4213e3:	pmovmskb ebx,mm3
  4213e6:	std    
  4213e7:	ins    BYTE PTR es:[edi],dx
  4213e8:	mov    ebx,0x989af05d
  4213ed:	int3   
  4213ee:	push   esp
  4213ef:	and    ah,dh
  4213f1:	popf   
  4213f2:	arpl   dx,si
  4213f4:	inc    eax
  4213f5:	ds call 0xe966d250
  4213fb:	div    BYTE PTR [edx-0x15b925db]
  421401:	inc    esi
  421402:	jnp    0x421464
  421404:	jo     0x4213b8
  421406:	lahf   
  421407:	in     eax,dx
  421408:	(bad)  
  421409:	push   ss
  42140a:	adc    DWORD PTR [eax+0x57],0x3dddcc98
  421411:	pop    DWORD PTR [edx+esi*4]
  421414:	scas   eax,DWORD PTR es:[edi]
  421415:	stos   DWORD PTR es:[edi],eax
  421416:	daa    
  421417:	cmp    edi,DWORD PTR [ebp+0x292faf0f]
  42141d:	xor    eax,0x2eb46bc7
  421422:	jmp    0xd61a:0xdb8dc55b
  421429:	inc    edi
  42142a:	fimul  WORD PTR ds:0x727a8e62
  421430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421431:	outs   dx,DWORD PTR ds:[esi]
  421432:	stc    
  421433:	xchg   edi,eax
  421434:	cmp    bl,BYTE PTR [ebx]
  421436:	mov    es,WORD PTR [esi]
  421438:	int    0xe4
  42143a:	cmp    ebx,0xf78cad
  421440:	fs push ds
  421442:	xor    BYTE PTR [ebp+0x50f036c9],0x49
  421449:	xor    bl,BYTE PTR [ebp-0x3b]
  42144c:	rcr    dl,cl
  42144e:	arpl   WORD PTR [esi+0x36],bp
  421451:	mov    ds:0xc35195e5,eax
  421456:	adc    eax,DWORD PTR [edx+ebp*1-0x30]
  42145a:	call   0x4b34d168
  42145f:	cmp    al,0x42
  421461:	push   0xb739b34e
  421466:	mov    ds:0xb0a51271,al
  42146b:	jo     0x42146e
  42146d:	jae    0x4214c5
  42146f:	es push eax
  421471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421472:	bound  edx,QWORD PTR [ebp-0xeb98107]
  421478:	lds    ebx,FWORD PTR [esi+eax*2+0x7a]
  42147c:	daa    
  42147d:	(bad)  
  42147e:	fdiv   DWORD PTR ds:0xfd610a47
  421484:	ja     0x42142c
  421486:	mov    cl,0x3
  421488:	fnsave [ebp-0x70]
  42148b:	jno    0x4214d4
  42148d:	jnp    0x421468
  42148f:	add    al,0xf7
  421491:	xor    cl,BYTE PTR [ecx]
  421493:	int    0xf8
  421495:	and    cl,BYTE PTR [edx-0x53]
  421498:	outs   dx,BYTE PTR ds:[esi]
  421499:	dec    esp
  42149a:	shl    BYTE PTR [edi-0x561f8fc7],cl
  4214a0:	bound  esi,QWORD PTR [ecx+0x6d33d2ef]
  4214a6:	jo     0x4214f4
  4214a8:	idiv   DWORD PTR gs:[ebp-0x2ac80a46]
  4214af:	sbb    al,0xb7
  4214b1:	std    
  4214b2:	mov    ebx,DWORD PTR ds:0xcf702537
  4214b8:	repz mov ah,BYTE PTR [ebx+esi*2]
  4214bc:	dec    eax
  4214bd:	sysenter 
  4214bf:	mov    ebx,0x7d3168a2
  4214c4:	inc    ebp
  4214c5:	sbb    BYTE PTR [ebp+edi*8-0x3c3fcc10],0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x739e6e26
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xef691c0a
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	dec    DWORD PTR [ecx]
  42182f:	and    eax,0xf8ce194c
  421834:	xor    eax,0x81598875
  421839:	mov    eax,0xdc7fbbfe
  42183e:	mov    eax,ds:0x7535f8cd
  421843:	mov    WORD PTR [ecx-0x7f],ds
  421846:	clc    
  421847:	add    DWORD PTR [edi+edi*2-0x24],eax
  42184b:	sbb    ebp,ecx
  42184d:	clc    
  42184e:	xor    eax,0x81598c75
  421853:	mov    eax,0xdc7f4401
  421858:	sbb    ebp,ecx
  42185a:	clc    
  42185b:	xor    eax,0x81598c75
  421860:	mov    eax,0xdc7f4401
  421865:	sbb    ebp,ecx
  421867:	clc    
  421868:	xor    eax,0x81597475
  42186d:	mov    eax,0xd2c55b0f
  421872:	sbb    DWORD PTR [ecx-0xf],edi
  421875:	clc    
  421876:	push   esp
  421877:	xor    al,0x58
  421879:	int    0x75
  42187b:	and    BYTE PTR [eax],dl
  42187d:	pop    ss
  42187e:	mov    ch,0x6a
  421880:	in     eax,dx
  421881:	mov    BYTE PTR [edi+0x1a],al
  421884:	jmp    0x4218b1
  421886:	loopne 0x42185d
  421888:	and    DWORD PTR [edi],esp
  42188a:	push   ds
  42188b:	mov    dl,0x77
  42188d:	mov    ds:0xe917158c,al
  421892:	jns    0x421887
  421894:	int    0x6f
  421896:	fs push ss
  421898:	mov    dl,0x39
  42189a:	mov    DWORD PTR [edi+0x36e15566],esi
  4218a0:	in     eax,0xdd
  4218a2:	das    
  4218a3:	dec    ecx
  4218a4:	jb     0x42187c
  4218a6:	cmp    eax,0x7535f8cd
  4218ab:	mov    WORD PTR [ecx-0x7f],ds
  4218ae:	mov    edi,0x9f26b898
  4218b3:	loope  0x421914
  4218b5:	bnd jbe 0x421845
  4218b8:	push   ds
  4218b9:	push   ebx
  4218ba:	ret    0x9340
  4218bd:	dec    esi
  4218be:	daa    
  4218bf:	mov    ecx,0xcda7c715
  4218c4:	out    0x86,eax
  4218c6:	add    esp,esp
  4218c8:	or     BYTE PTR [ebx],0x86
  4218cb:	xchg   DWORD PTR [esi+0x13],ecx
  4218ce:	xchg   ebp,eax
  4218cf:	popf   
  4218d0:	or     al,0x7f
  4218d2:	in     al,0xa1
  4218d4:	adc    esi,DWORD PTR [edx-0x29b935d3]
  4218da:	pop    edi
  4218db:	xor    eax,0xc3f3f6a
  4218e0:	dec    eax
  4218e1:	mov    esi,edx
  4218e3:	stc    
  4218e4:	(bad)  
  4218e5:	jne    0x42187d
  4218e7:	cdq    
  4218e8:	int3   
  4218e9:	repnz ins DWORD PTR es:[edi],dx
  4218eb:	lea    ebx,[esi]
  4218ed:	push   ebx
  4218ee:	ret    0x9240
  4218f1:	dec    esi
  4218f2:	push   edi
  4218f3:	and    eax,0xed47c78b
  4218f8:	cmc    
  4218f9:	xchg   BYTE PTR [ecx+edi*2],dl
  4218fc:	sub    cl,BYTE PTR [ebx]
  4218fe:	sbb    al,0x1a
  421900:	loope  0x421915
  421902:	lds    eax,FWORD PTR [eax]
  421904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421905:	jg     0x4218db
  421907:	cmp    al,0x89
  421909:	mov    dl,0x43
  42190b:	mov    esp,0xa841d6ed
  421910:	idiv   DWORD PTR [edi]
  421912:	aaa    
  421913:	je     0x4218e0
  421915:	mov    ebp,edx
  421917:	push   0xe19f1727
  42191c:	pop    edi
  42191d:	repnz xor eax,0x81598c75
  421923:	mov    eax,0x992f4401
  421928:	sbb    ebp,ecx
  42192a:	mov    ah,0x34
  42192c:	ja     0x4218ba
  42192e:	stc    
  42192f:	push   ecx
  421930:	ror    DWORD PTR [esi+0x44],cl
  421933:	jg     0x421911
  421935:	sbb    ebp,ecx
  421937:	clc    
  421938:	xor    eax,0x82596c75
  42193d:	mov    ecx,0xdc75450a
  421942:	sbb    DWORD PTR [ebx],esp
  421944:	cld    
  421945:	xor    eax,0x815f3075
  42194a:	mov    eax,0xcd7f4401
  42194f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421950:	int    0xf8
  421952:	xor    eax,0x81598c65
  421957:	mov    eax,0xdc7f4404
  42195c:	pop    eax
  42195d:	int    0xf8
  42195f:	and    eax,0x83598c75
  421964:	mov    eax,0xdd7f4101
  421969:	sbb    ebp,ecx
  42196b:	clc    
  42196c:	xor    eax,0x80598975
  421971:	mov    eax,0xdc7f4401
  421976:	sbb    DWORD PTR [ebp-0x778aca0c],ebx
  42197c:	pop    ecx
  42197d:	cmp    DWORD PTR [ecx-0x2180be1b],0x3578cd19
  421987:	jne    0x421925
  421989:	pop    ecx
  42198a:	sub    DWORD PTR [eax-0x2380bbff],0x25f8cd09
  421994:	jne    0x421922
  421996:	pop    ecx
  421997:	cmp    DWORD PTR [eax-0x2380abff],0x35f8cd19
  4219a1:	jne    0x42192f
  4219a3:	pop    ecx
  4219a4:	cmp    DWORD PTR [eax-0x238c820b],0x35f8ce70
  4219ae:	jne    0x421a2c
  4219b0:	push   edx
  4219b1:	xor    edi,0xdc7f4448
  4219b7:	sbb    ebp,ecx
  4219b9:	clc    
  4219ba:	xor    eax,0x81598c75
  4219bf:	mov    eax,0xdc7f4401
  4219c4:	sbb    ebp,ecx
  4219c6:	clc    
  4219c7:	xor    eax,0x81598c75
  4219cc:	mov    eax,0xdc7f4401
  4219d1:	sbb    ebp,ecx
  4219d3:	clc    
  4219d4:	xor    eax,0x81598c75
  4219d9:	mov    eax,0xdc7f4401
  4219de:	sbb    ebp,ecx
  4219e0:	clc    
  4219e1:	xor    eax,0x81598c75
  4219e6:	mov    eax,0xdc7f4401
  4219eb:	sbb    ebp,ecx
  4219ed:	clc    
  4219ee:	xor    eax,0x81598c75
  4219f3:	mov    eax,0xdc7f4401
  4219f8:	sbb    ebp,ecx
  4219fa:	clc    
  4219fb:	xor    eax,0x81598c75
  421a00:	mov    eax,0xdc7f4401
  421a05:	sbb    ebp,ecx
  421a07:	clc    
  421a08:	xor    eax,0x81598c75
  421a0d:	mov    eax,0xdc7f4401
  421a12:	sbb    ebp,ecx
  421a14:	clc    
  421a15:	xor    eax,0x81598c75
  421a1a:	mov    eax,0xf27f4401
  421a1f:	ins    DWORD PTR es:[edi],dx
  421a20:	test   al,0x80
  421a22:	inc    ecx
  421a23:	jne    0x4219b1
  421a25:	pop    ecx
  421a26:	sbb    DWORD PTR [eax+0xa],0x19cc7f44
  421a2d:	int    0xf8
  421a2f:	loope  0x421aa2
  421a31:	mov    WORD PTR [ecx-0x7b],ds
  421a34:	mov    eax,0x9f3a1401
  421a39:	sub    ebx,DWORD PTR [ecx-0x738aca49]
  421a3f:	pop    ecx
  421a40:	cmp    DWORD PTR [eax+0x3c7f4421],0x478bbf37
  421a4a:	push   ss
  421a4b:	mov    WORD PTR [ecx-0x7f],ds
  421a4e:	mov    eax,0xdc7f4461
  421a53:	jmp    0x2f78131e
  421a58:	mov    WORD PTR [ecx-0x7f],ds
  421a5b:	pusha  
  421a5c:	add    eax,0x19dc7f44
  421a61:	int    0xf8
  421a63:	xor    eax,0x81598c75
  421a68:	mov    eax,0xdc7f6401
  421a6d:	stc    
  421a6e:	int    0xf8
  421a70:	xor    eax,0x81598c75
  421a75:	mov    eax,0xdc7f4401
  421a7a:	sbb    ebp,ecx
  421a7c:	clc    
  421a7d:	xor    eax,0x81598c75
  421a82:	mov    eax,0xdc7f4401
  421a87:	sbb    ebp,ecx
  421a89:	clc    
  421a8a:	xor    eax,0x81598c75
  421a8f:	mov    eax,0xdc7f4401
  421a94:	sbb    ebp,ecx
  421a96:	clc    
  421a97:	xor    eax,0x81598c75
  421a9c:	mov    eax,0xdc7f4401
  421aa1:	sbb    ebp,ecx
  421aa3:	clc    
  421aa4:	xor    eax,0x81598c75
  421aa9:	mov    eax,0xdc7f4401
  421aae:	sbb    ebp,ecx
  421ab0:	clc    
  421ab1:	xor    eax,0x81598c75
  421ab6:	mov    eax,0xdc7f4401
  421abb:	sbb    ebp,ecx
  421abd:	clc    
  421abe:	xor    eax,0x81598c75
  421ac3:	mov    eax,0xdc7f4401
  421ac8:	sbb    ebp,ecx
  421aca:	clc    
  421acb:	xor    eax,0x81598c75
  421ad0:	mov    eax,0xdc7f4401
  421ad5:	sbb    ebp,ecx
  421ad7:	clc    
  421ad8:	xor    eax,0x81598c75
  421add:	mov    eax,0xdc7f4401
  421ae2:	sbb    ebp,ecx
  421ae4:	clc    
  421ae5:	xor    eax,0x81598c75
  421aea:	mov    eax,0xdc7f4401
  421aef:	sbb    ebp,ecx
  421af1:	clc    
  421af2:	xor    eax,0x81598c75
  421af7:	mov    eax,0xdc7f4401
  421afc:	sbb    ebp,ecx
  421afe:	clc    
  421aff:	xor    eax,0x81598c75
  421b04:	mov    eax,0xdc7f4401
  421b09:	sbb    ebp,ecx
  421b0b:	clc    
  421b0c:	xor    eax,0x81598c75
  421b11:	mov    eax,0xdc7f4401
  421b16:	sbb    ebp,ecx
  421b18:	clc    
  421b19:	xor    eax,0x81598c75
  421b1e:	mov    eax,0xdc7f4401
  421b23:	sbb    ebp,ecx
  421b25:	clc    
  421b26:	xor    eax,0x81598c75
  421b2b:	mov    eax,0xdc7f4401
  421b30:	sbb    ebp,ecx
  421b32:	clc    
  421b33:	xor    eax,0x81598c75
  421b38:	mov    eax,0xdc7f4401
  421b3d:	sbb    ebp,ecx
  421b3f:	clc    
  421b40:	xor    eax,0x81598c75
  421b45:	mov    eax,0xdc7f4401
  421b4a:	sbb    ebp,ecx
  421b4c:	clc    
  421b4d:	xor    eax,0x81598c75
  421b52:	mov    eax,0xdc7f4401
  421b57:	sbb    ebp,ecx
  421b59:	clc    
  421b5a:	xor    eax,0x81598c75
  421b5f:	mov    eax,0xdc7f4401
  421b64:	sbb    ebp,ecx
  421b66:	clc    
  421b67:	xor    eax,0x81598c75
  421b6c:	mov    eax,0xdc7f4401
  421b71:	sbb    ebp,ecx
  421b73:	clc    
  421b74:	xor    eax,0x81598c75
  421b79:	mov    eax,0xdc7f4401
  421b7e:	sbb    ebp,ecx
  421b80:	clc    
  421b81:	xor    eax,0x81598c75
  421b86:	mov    eax,0xdc7f4401
  421b8b:	sbb    ebp,ecx
  421b8d:	clc    
  421b8e:	xor    eax,0x81598c75
  421b93:	mov    eax,0xdc7f4401
  421b98:	sbb    ebp,ecx
  421b9a:	clc    
  421b9b:	xor    eax,0x81598c75
  421ba0:	mov    eax,0xdc7f4401
  421ba5:	sbb    ebp,ecx
  421ba7:	clc    
  421ba8:	xor    eax,0x81598c75
  421bad:	mov    eax,0xdc7f4401
  421bb2:	sbb    ebp,ecx
  421bb4:	clc    
  421bb5:	xor    eax,0x81598c75
  421bba:	mov    eax,0xdc7f4401
  421bbf:	sbb    ebp,ecx
  421bc1:	clc    
  421bc2:	xor    eax,0x81598c75
  421bc7:	mov    eax,0xdc7f4401
  421bcc:	sbb    ebp,ecx
  421bce:	clc    
  421bcf:	xor    eax,0x81598c75
  421bd4:	mov    eax,0xdc7f4401
  421bd9:	sbb    ebp,ecx
  421bdb:	clc    
  421bdc:	xor    eax,0x81598c75
  421be1:	mov    eax,0xdc7f4401
  421be6:	sbb    ebp,ecx
  421be8:	clc    
  421be9:	xor    eax,0x81598c75
  421bee:	mov    eax,0xdc7f4401
  421bf3:	sbb    ebp,ecx
  421bf5:	clc    
  421bf6:	xor    eax,0x81598c75
  421bfb:	mov    eax,0xdc7f4401
  421c00:	sbb    ebp,ecx
  421c02:	clc    
  421c03:	xor    eax,0x81598c75
  421c08:	mov    eax,0xdc7f4401
  421c0d:	sbb    ebp,ecx
  421c0f:	clc    
  421c10:	xor    eax,0x81598c75
  421c15:	mov    eax,0xdc7f4401
  421c1a:	sbb    ebp,ecx
  421c1c:	clc    
  421c1d:	xor    eax,0x81598c75
  421c22:	mov    eax,0xdc7f4401
  421c27:	sbb    ebp,ecx
  421c29:	clc    
  421c2a:	xor    eax,0xee598c75
  421c2f:	adc    BYTE PTR [edx],cl
  421c31:	inc    esp
  421c32:	push   eax
  421c33:	fcomp  QWORD PTR [ecx]
  421c35:	(bad)  
  421c37:	xor    eax,0xf0832e5f
  421c3c:	fdivp  st(6),st
  421c3e:	imul   esp,ecx,0xce20495b
  421c44:	frstor [esi+0x38]
  421c47:	int3   
  421c48:	out    0xc9,eax
  421c4a:	test   DWORD PTR [esi],ebx
  421c4c:	ins    BYTE PTR es:[edi],dx
  421c4d:	ins    DWORD PTR es:[edi],dx
  421c4e:	scas   al,BYTE PTR es:[edi]
  421c4f:	fist   DWORD PTR [ebp-0x60f2002f]
  421c55:	scas   eax,DWORD PTR es:[edi]
  421c56:	ficom  DWORD PTR [ecx+0x56ef467b]
  421c5c:	jl     0x421c4d
  421c5e:	pop    ss
  421c5f:	jne    0x421c0c
  421c61:	dec    BYTE PTR [ecx]
  421c63:	in     eax,dx
  421c64:	push   eax
  421c65:	sub    esi,edx
  421c67:	out    dx,al
  421c68:	and    al,0x10
  421c6a:	in     al,dx
  421c6b:	test   BYTE PTR ds:0x3a58783,dl
  421c71:	dec    ebp
  421c72:	xchg   edi,eax
  421c73:	mov    edx,0xf253e1f3
  421c78:	ficom  DWORD PTR [ecx]
  421c7a:	lods   al,BYTE PTR ds:[esi]
  421c7b:	cli    
  421c7c:	mov    cs,WORD PTR [ecx-0x55]
  421c7f:	imul   edi,DWORD PTR [edx],0xbb9c5fa4
  421c85:	sti    
  421c86:	(bad)  
  421c87:	retf   0xfc70
  421c8a:	and    eax,0xdb9d1e80
  421c8f:	lods   eax,DWORD PTR ds:[esi]
  421c90:	dec    edi
  421c91:	retf   
  421c92:	pop    esi
  421c93:	xchg   ecx,eax
  421c94:	lods   eax,DWORD PTR ds:[esi]
  421c95:	test   eax,0xe26133e0
  421c9a:	imul   esi,eax,0xfffffffe
  421c9d:	data16 sar BYTE PTR [esi-0x6e],1
  421ca1:	mov    bl,0xf9
  421ca3:	call   0x6260:0x39feb3e7
  421caa:	in     al,0xba
  421cac:	sbb    ecx,DWORD PTR [edx+0xf4d68bd]
  421cb2:	push   cs
  421cb3:	sub    bl,ch
  421cb5:	and    BYTE PTR [eax+eiz*8+0x19b170f2],0x10
  421cbd:	push   cs
  421cbe:	mov    esp,DWORD PTR [ebp+0x57]
  421cc1:	or     ebx,DWORD PTR [ebx+0x31]
  421cc4:	(bad)  
  421cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc6:	mov    bl,0xc8
  421cc8:	mov    eax,ds:0x50348bab
  421ccd:	pop    esp
  421cce:	int3   
  421ccf:	fidiv  DWORD PTR [esi-0x3d0f779]
  421cd5:	int3   
  421cd6:	push   ss
  421cd7:	cdq    
  421cd8:	xchg   esp,eax
  421cd9:	mov    bh,0xae
  421cdb:	(bad)  
  421cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cdd:	xor    eax,0x1fba095b
  421ce2:	mov    esp,0x74bfab4c
  421ce7:	das    
  421ce8:	lea    ebp,[edi+eiz*1+0x5f]
  421cec:	cmp    edi,esi
  421cee:	mov    DWORD PTR [ebp-0x2385fcb9],eax
  421cf4:	lock pop esp
  421cf6:	xor    esi,DWORD PTR [esi+0x5dba2912]
  421cfc:	ficom  DWORD PTR [edi+0x3e162c5d]
  421d02:	inc    edx
  421d03:	sub    dl,BYTE PTR [edi]
  421d05:	mov    cl,BYTE PTR [edx*4+0x3cf40766]
  421d0c:	das    
  421d0d:	mov    DWORD PTR [edi+0x22],eax
  421d10:	xor    al,0xee
  421d12:	mov    ch,0xea
  421d14:	jns    0x421d7d
  421d16:	push   0xffffffa7
  421d18:	outs   dx,BYTE PTR ds:[esi]
  421d19:	call   0x3750ea0f
  421d1e:	or     BYTE PTR [ecx],bh
  421d20:	and    al,0xd4
  421d22:	push   ebp
  421d23:	out    dx,al
  421d24:	test   DWORD PTR [eax-0x69f18364],ebx
  421d2a:	loopne 0x421cc6
  421d2c:	adc    eax,0xa2606c3
  421d31:	xor    eax,0xf0a54f56
  421d36:	stc    
  421d37:	jbe    0x421d40
  421d39:	xchg   BYTE PTR [ecx],dh
  421d3b:	stos   DWORD PTR es:[edi],eax
  421d3c:	xor    al,0x4c
  421d3e:	jg     0x421d8f
  421d40:	pop    ds
  421d41:	mov    al,0xe7
  421d43:	add    DWORD PTR [eax+0x43],edi
  421d46:	pop    ebp
  421d47:	add    al,0x3a
  421d49:	imul   edi,DWORD PTR [edi],0x7d21bd5a
  421d4f:	or     DWORD PTR [edx+0x45],ecx
  421d52:	sbb    DWORD PTR [ecx],ebx
  421d54:	stc    
  421d55:	pop    esp
  421d56:	cs pop ebx
  421d58:	test   al,0x16
  421d5a:	mov    bh,0x84
  421d5c:	ds mov ebx,0x7236281d
  421d62:	repz lock int 0x28
  421d66:	xchg   si,ax
  421d68:	fild   DWORD PTR [ebx]
  421d6a:	mov    gs,WORD PTR [ebp-0x20]
  421d6d:	ins    BYTE PTR es:[edi],dx
  421d6e:	jmp    0xad788e6e
  421d73:	hlt    
  421d74:	test   ch,0x70
  421d77:	stos   BYTE PTR es:[edi],al
  421d78:	mov    ecx,ecx
  421d7a:	mov    bl,0xc
  421d7c:	jns    0x421d5d
  421d7e:	mov    ebp,0x394ae8d5
  421d83:	imul   eax,DWORD PTR [edx],0x7b
  421d86:	add    bl,0xd6
  421d89:	add    eax,0x9e84e7dd
  421d8e:	lods   al,BYTE PTR ds:[esi]
  421d8f:	lds    ecx,FWORD PTR [eax]
  421d91:	pop    ebx
  421d92:	cmp    edx,eax
  421d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d95:	imul   DWORD PTR [edx-0x19]
  421d98:	retf   
  421d99:	inc    eax
  421d9a:	jns    0x421d89
  421d9c:	pop    es
  421d9d:	enter  0xf5bc,0xdf
  421da1:	mov    al,ds:0x3316848f
  421da6:	lds    ebp,FWORD PTR [ebx]
  421da8:	lds    ecx,FWORD PTR ds:[ecx]
  421dab:	xor    al,0xe2
  421dad:	outs   dx,DWORD PTR ds:[esi]
  421dae:	ins    BYTE PTR es:[edi],dx
  421daf:	cmp    al,0x4b
  421db1:	and    BYTE PTR [eax+0xf95d50e],ch
  421db7:	int    0xdf
  421db9:	inc    ecx
  421dba:	inc    ebp
  421dbb:	sub    DWORD PTR [si],edi
  421dbe:	jae    0x421d62
  421dc0:	sub    bh,BYTE PTR [esi]
  421dc2:	inc    esi
  421dc3:	jno    0x421dd1
  421dc5:	add    BYTE PTR [edx-0x78],ch
  421dc8:	sub    DWORD PTR [edx+eax*4+0x462bfc7d],0xfffffffe
  421dd0:	add    eax,0x3b770666
  421dd5:	scas   al,BYTE PTR es:[edi]
  421dd6:	loope  0x421df7
  421dd8:	dec    eax
  421dd9:	arpl   WORD PTR [edi-0x3997fe01],di
  421ddf:	je     0x421d7a
  421de1:	jg     0x421d9f
  421de3:	jle    0x421d8c
  421de5:	mov    ah,ch
  421de7:	clc    
  421de8:	sti    
  421de9:	push   esp
  421dea:	xlat   BYTE PTR ds:[ebx]
  421deb:	data16 xor al,0xa1
  421dee:	mov    ebp,DWORD PTR [edi+eiz*8+0x54707b70]
  421df5:	sub    DWORD PTR [esi],esp
  421df7:	mov    eax,DWORD PTR [esi+0x3a]
  421dfa:	dec    esp
  421dfb:	popa   
  421dfc:	int    0xad
  421dfe:	pop    esp
  421dff:	repnz dec eax
  421e01:	(bad)  
  421e02:	mov    al,ds:0x78c9da26
  421e07:	dec    edx
  421e08:	ret    
  421e09:	jp     0x421df9
  421e0b:	gs out dx,al
  421e0d:	xor    ecx,DWORD PTR [edi+0x2c6fbc1c]
  421e13:	lds    esi,FWORD PTR [esi-0x127b680f]
  421e19:	das    
  421e1a:	leave  
  421e1b:	lods   al,BYTE PTR ds:[esi]
  421e1c:	add    BYTE PTR [edi],ah
  421e1e:	push   edx
  421e1f:	ja     0x421da7
  421e21:	ins    DWORD PTR es:[edi],dx
  421e22:	mov    dl,0x81
  421e24:	je     0x421e06
  421e26:	mov    edx,0x90f89bff
  421e2b:	jecxz  0x421e76
  421e2d:	xchg   edx,eax
  421e2e:	inc    ecx
  421e2f:	xchg   ebp,eax
  421e30:	add    ebp,DWORD PTR [ecx]
  421e32:	dec    esi
  421e33:	pop    es
  421e34:	add    al,0x21
  421e36:	or     DWORD PTR [edx+edi*8+0x7d],esi
  421e3a:	mov    dh,0x5c
  421e3c:	cld    
  421e3d:	into   
  421e3e:	xchg   edx,eax
  421e3f:	sar    DWORD PTR [ecx],0x41
  421e42:	inc    esi
  421e43:	mov    dl,0x7e
  421e45:	cmp    BYTE PTR [ebp-0x2b],bl
  421e48:	rcr    dl,0x4b
  421e4b:	xor    bh,BYTE PTR [edx-0x6c8a7837]
  421e51:	test   eax,0x443a0aae
  421e56:	aaa    
  421e57:	cdq    
  421e58:	and    eax,0x47ff4178
  421e5d:	pusha  
  421e5e:	sti    
  421e5f:	or     eax,0xafc09f1f
  421e64:	out    dx,eax
  421e65:	fisttp WORD PTR ds:0x3f18036b
  421e6b:	(bad)  [ebp+0x59]
  421e6e:	imul   al
  421e70:	iret   
  421e71:	pop    edx
  421e72:	daa    
  421e73:	push   0x66
  421e75:	sahf   
  421e76:	pop    ds
  421e77:	push   edi
  421e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e79:	rol    BYTE PTR [eax-0x7747cad2],1
  421e7f:	shl    BYTE PTR [ebx],0x7a
  421e82:	div    edx
  421e84:	rcr    DWORD PTR [esi+0x7f279d75],0x2
  421e8b:	(bad)  
  421e8c:	stc    
  421e8d:	arpl   WORD PTR [ecx-0x77eff980],bp
  421e93:	stos   DWORD PTR es:[edi],eax
  421e94:	and    DWORD PTR [edx-0x1f],esp
  421e97:	pop    edx
  421e98:	xor    eax,0x97433e06
  421e9d:	cmp    bh,BYTE PTR [esi-0x741807a1]
  421ea3:	mov    ds:0x6506b40c,eax
  421ea8:	jb     0x421ebe
  421eaa:	xchg   esi,eax
  421eab:	leave  
  421eac:	pop    ss
  421ead:	fisubr DWORD PTR [esi+0x71e5a013]
  421eb3:	mov    eax,0x52b6a1a4
  421eb8:	cmp    ebp,DWORD PTR [ebx+eiz*4-0x52454cc1]
  421ebf:	mov    ecx,0xc70aa512
  421ec4:	mov    ebx,ecx
  421ec6:	sar    BYTE PTR [ecx+0x73308cc0],0xd2
  421ecd:	jg     0x421f48
  421ecf:	repz ret 
  421ed1:	inc    esi
  421ed2:	jmpw   0x6b82
  421ed6:	jmp    0x5296c3b7
  421edb:	inc    edx
  421edc:	call   DWORD PTR [esi+0x40b183d1]
  421ee2:	lods   al,BYTE PTR ds:[esi]
  421ee3:	push   ebp
  421ee4:	adc    al,0xed
  421ee6:	mov    ?,WORD PTR [ecx-0xa27d972]
  421eec:	mov    cl,0x13
  421eee:	sbb    dh,BYTE PTR [edx+ebx*4]
  421ef1:	retf   
  421ef2:	pusha  
  421ef3:	test   al,0x36
  421ef5:	mov    eax,0x4f149a18
  421efa:	aas    
  421efb:	jmp    0xfaa9:0x4ecf2797
  421f02:	and    al,0xcd
  421f04:	neg    eax
  421f06:	or     bl,BYTE PTR [ebx+edi*8]
  421f09:	push   ebx
  421f0a:	pop    edi
  421f0b:	inc    esi
  421f0c:	fsubr  st(5),st
  421f0e:	and    BYTE PTR [ecx-0x1eb184f1],dh
  421f14:	pop    ss
  421f15:	add    dl,bh
  421f17:	das    
  421f18:	mov    ecx,0xca10ca0a
  421f1d:	xchg   ecx,eax
  421f1e:	push   esi
  421f1f:	pop    esi
  421f20:	call   FWORD PTR [edx]
  421f22:	addr16 push esi
  421f24:	or     ch,BYTE PTR [eax+0x621c93a6]
  421f2a:	not    DWORD PTR [ebx+esi*4]
  421f2d:	pop    edx
  421f2e:	mov    fs,WORD PTR [eax+0x71c297ac]
  421f34:	dec    ebp
  421f35:	in     eax,0x2a
  421f37:	add    ch,bh
  421f39:	mov    cl,0x89
  421f3b:	lahf   
  421f3c:	xchg   ecx,eax
  421f3d:	mov    dl,0xa1
  421f3f:	ins    DWORD PTR es:[edi],dx
  421f40:	xchg   ecx,eax
  421f41:	mov    cl,0x7b
  421f43:	jbe    0x421f9c
  421f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f46:	xor    BYTE PTR ds:0xf55e37b6,0xca
  421f4d:	or     al,0xdf
  421f4f:	ds mov al,0x5d
  421f52:	dec    edi
  421f53:	xchg   edi,eax
  421f54:	sbb    DWORD PTR [edi+0x65],edx
  421f57:	imul   edi,DWORD PTR [ecx+0x30],0xbd873d7c
  421f5e:	test   al,0xdf
  421f60:	repnz out 0x80,al
  421f63:	retf   
  421f64:	sub    dl,BYTE PTR [edx+0x0]
  421f67:	aas    
  421f68:	ret    
  421f69:	xor    ecx,ebp
  421f6b:	xor    dl,BYTE PTR [ecx]
  421f6d:	faddp  st(3),st
  421f6f:	fmul   QWORD PTR fs:[eax]
  421f72:	cmp    DWORD PTR [ebx-0xbc5a207],ecx
  421f78:	xor    BYTE PTR [ecx],0x57
  421f7b:	cmp    esp,edi
  421f7d:	sbb    BYTE PTR [esi+0x2a240a0],dh
  421f83:	aad    0x92
  421f85:	pop    es
  421f86:	int3   
  421f87:	lds    ebp,FWORD PTR [ecx+0x1bca2d6f]
  421f8d:	and    BYTE PTR [edx+esi*1+0x2d9df3e0],dh
  421f94:	push   ecx
  421f95:	mov    cs,WORD PTR [esi]
  421f97:	repz dec edx
  421f99:	add    eax,0x717bc2d4
  421f9e:	mov    BYTE PTR [edx+edi*1+0x4bec315e],bl
  421fa5:	sbb    al,0x0
  421fa7:	outs   dx,BYTE PTR ss:[esi]
  421fa9:	(bad)  
  421faa:	xlat   BYTE PTR ds:[ebx]
  421fab:	test   BYTE PTR [ebx-0x46],cl
  421fae:	mov    BYTE PTR [edx-0x4b],cl
  421fb1:	pop    ebp
  421fb2:	adc    al,0xfd
  421fb4:	xor    esi,eax
  421fb6:	jbe    0x421f6d
  421fb8:	rcl    esi,1
  421fba:	loopne 0x421f7a
  421fbc:	or     ch,BYTE PTR [edi]
  421fbe:	mov    WORD PTR [edx-0x72],ss
  421fc1:	or     al,0x99
  421fc3:	fidiv  WORD PTR [edx+0xb8aa86f]
  421fc9:	loopne 0x421fb0
  421fcb:	loop   0x421fe8
  421fcd:	fimul  WORD PTR [edx-0x9]
  421fd0:	and    al,0x85
  421fd2:	mov    ?,WORD PTR [eax]
  421fd4:	cli    
  421fd5:	retf   0xd50b
  421fd8:	mov    eax,ds:0xf37117f
  421fdd:	push   ss
  421fde:	(bad)  
  421fe1:	cli    
  421fe2:	mov    esp,0x55d26959
  421fe7:	or     al,0x2a
  421fe9:	loope  0x421fc9
  421feb:	sub    edi,DWORD PTR [edi-0x262c2b60]
  421ff1:	mov    al,0xbb
  421ff3:	and    eax,DWORD PTR [edi+0x4276e388]
  421ff9:	les    edx,FWORD PTR [ecx-0x2e]
  421ffc:	shl    ch,1
  421ffe:	sub    al,0x37
  422000:	inc    esp
  422001:	bound  esp,QWORD PTR [ebx+ebp*2]
  422004:	cmp    ch,ch
  422006:	out    dx,eax
  422007:	mov    ds:0x18af1847,eax
  42200c:	out    dx,eax
  42200d:	jecxz  0x422070
  42200f:	sub    BYTE PTR [edx-0xd],dl
  422012:	fisttp WORD PTR [edi]
  422014:	sbb    al,0x5d
  422016:	xor    al,0x92
  422018:	or     ebx,eax
  42201a:	std    
  42201b:	in     eax,dx
  42201c:	jae    0x421faf
  42201e:	pop    esp
  42201f:	pop    ss
  422020:	iret   
  422021:	or     al,0x5a
  422023:	das    
  422024:	mov    ecx,ecx
  422026:	loop   0x421fc2
  422028:	push   esi
  422029:	inc    ebx
  42202a:	add    DWORD PTR [edx+0x3f],edx
  42202d:	jb     0x42209e
  42202f:	fwait
  422030:	inc    eax
  422031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422032:	out    0xcf,eax
  422034:	cmp    cl,BYTE PTR [edi-0x1a]
  422037:	inc    eax
  422038:	shl    BYTE PTR [esi+0x6d],0x22
  42203c:	xchg   ebp,eax
  42203d:	cwde   
  42203e:	jmp    0x42200a
  422040:	xlat   BYTE PTR ds:[ebx]
  422041:	stos   DWORD PTR es:[edi],eax
  422042:	sub    BYTE PTR [edi-0x7e],0xd4
  422046:	adc    cl,dh
  422048:	xor    bl,bl
  42204a:	jg     0x422031
  42204c:	push   ds
  42204d:	cmc    
  42204e:	inc    edx
  42204f:	in     eax,0x2
  422051:	fdiv   DWORD PTR [edx]
  422053:	lods   eax,DWORD PTR ds:[esi]
  422054:	out    dx,eax
  422055:	pusha  
  422056:	test   eax,0x8cd61a3d
  42205b:	push   ecx
  42205c:	xchg   esi,eax
  42205d:	or     al,0xc1
  42205f:	fmul   st,st(6)
  422061:	rcr    BYTE PTR [ecx+eiz*2],0x3a
  422065:	sub    esp,ebx
  422067:	mov    ecx,gs
  422069:	(bad)  
  42206a:	out    0x86,eax
  42206c:	std    
  42206d:	imul   esi,DWORD PTR [edi+0x1fcf853b],0xffffff8c
  422074:	mov    ecx,0x1d876543
  422079:	rcl    BYTE PTR [eax-0x29],cl
  42207c:	das    
  42207d:	cmp    al,0xe
  42207f:	jmp    0x42202d
  422081:	jnp    0x4220d0
  422083:	imul   edx,DWORD PTR [edx-0xb],0x4fbac801
  42208a:	pop    ebx
  42208b:	or     eax,0x682ee29b
  422090:	mov    WORD PTR [ebp-0x21],ds
  422093:	xor    al,0x51
  422095:	sbb    ebx,esi
  422097:	pop    ds
  422098:	test   DWORD PTR [esi],edx
  42209a:	mov    dl,0x6a
  42209c:	xchg   ebx,eax
  42209d:	adc    eax,0xe3627122
  4220a2:	and    DWORD PTR ss:[esi],ebx
  4220a5:	dec    edx
  4220a6:	fst    st(4)
  4220a8:	das    
  4220a9:	cld    
  4220aa:	mov    dl,0x97
  4220ac:	dec    edx
  4220ad:	fnstcw WORD PTR [edi-0x40]
  4220b0:	ss aaa 
  4220b2:	mov    bh,0x2f
  4220b4:	imul   ecx,DWORD PTR [edx-0xf18f083],0xde4527d0
  4220be:	dec    edi
  4220bf:	ins    BYTE PTR es:[edi],dx
  4220c0:	pop    ebx
  4220c1:	pop    ds
  4220c2:	jo     0x4220c6
  4220c4:	ins    DWORD PTR es:[edi],dx
  4220c5:	inc    ebx
  4220c6:	fld    TBYTE PTR [eax+0x2cf8399b]
  4220cc:	std    
  4220cd:	gs ins BYTE PTR es:[edi],dx
  4220cf:	sbb    al,0xbf
  4220d1:	(bad)  
  4220d3:	addr16 cwde 
  4220d5:	popa   
  4220d6:	adc    eax,0x7bb583e6
  4220db:	(bad)  
  4220dc:	out    0x8a,eax
  4220de:	cwde   
  4220df:	test   eax,0xd9f37c35
  4220e4:	add    esp,DWORD PTR [eax+0x75]
  4220e7:	xchg   ebp,eax
  4220e8:	mul    DWORD PTR [ebp+0x782ae07b]
  4220ee:	mov    cl,0xf1
  4220f0:	fcmove st,st(5)
  4220f2:	mov    bl,0x97
  4220f4:	add    eax,0xab7d1cde
  4220f9:	fild   WORD PTR [ecx]
  4220fb:	adc    BYTE PTR [eax+0xb],ch
  4220fe:	pushf  
  4220ff:	lahf   
  422100:	clc    
  422101:	mov    ch,0x35
  422103:	ja     0x42217b
  422105:	imul   edi,DWORD PTR [edi+0x10],0x5720959d
  42210c:	sub    dh,ch
  42210e:	sub    al,0xa2
  422110:	aas    
  422111:	mov    esp,0x19e35fef
  422116:	add    al,0x56
  422118:	ror    BYTE PTR [ecx-0x4c4ff2be],0x70
  42211f:	jbe    0x4220cd
  422121:	ins    BYTE PTR es:[edi],dx
  422122:	mov    ebp,DWORD PTR [esi+0x788c8cc2]
  422128:	or     ebp,DWORD PTR [ecx]
  42212a:	push   0xb53e5295
  42212f:	or     BYTE PTR [ecx+0x33],0x57
  422133:	push   0x7f544d4
  422138:	je     0x42219c
  42213a:	xchg   ebp,eax
  42213b:	dec    edx
  42213c:	dec    ecx
  42213d:	pushf  
  42213e:	and    BYTE PTR [ebx-0x73dbb3eb],al
  422144:	sbb    DWORD PTR [ebx],0x3ba17f70
  42214a:	cmc    
  42214b:	fild   QWORD PTR [edx]
  42214d:	dec    ebx
  42214e:	dec    ebp
  42214f:	dec    eax
  422150:	out    dx,al
  422151:	fstp   TBYTE PTR [edi-0x2e]
  422154:	dec    ebp
  422155:	push   esp
  422156:	mov    ?,ebx
  422158:	sbb    BYTE PTR [eax+0x4d],bh
  42215b:	out    dx,al
  42215c:	sub    BYTE PTR [ecx-0x1a],al
  42215f:	aad    0x73
  422161:	xchg   ecx,eax
  422162:	imul   eax,DWORD PTR [eax+0x5df73cf0],0xffffffec
  422169:	invd   
  42216b:	add    BYTE PTR [edi+0x35],al
  42216e:	mov    eax,ds:0x3a4db206
  422173:	sub    BYTE PTR [ebx-0x5c],bh
  422176:	jg     0x42217f
  422178:	int    0x6c
  42217a:	mov    edx,0x2b5b73be
  42217f:	pusha  
  422180:	int    0x18
  422182:	sbb    al,0x2e
  422184:	or     BYTE PTR [edx-0xc],dh
  422187:	adc    ch,ch
  422189:	out    dx,eax
  42218a:	jo     0x422129
  42218c:	mov    gs,WORD PTR [edi+0x49b6ace9]
  422192:	jmp    0x4bc0:0x692b8225
  422199:	dec    ebp
  42219a:	into   
  42219b:	sbb    DWORD PTR [eax-0x6],esp
  42219e:	stos   BYTE PTR es:[edi],al
  42219f:	inc    edx
  4221a0:	and    cl,BYTE PTR [ecx+eax*1+0x3b]
  4221a4:	(bad)  
  4221a5:	neg    DWORD PTR [esi+0x1d]
  4221a8:	push   0x6c24e589
  4221ad:	add    bh,BYTE PTR [ebx-0x2c]
  4221b0:	xor    al,0x2b
  4221b2:	and    DWORD PTR [esi+0x51f99fe1],esi
  4221b8:	icebp  
  4221b9:	adc    al,0xfc
  4221bb:	test   BYTE PTR [ebp+edx*1-0x27cfe4e0],bh
  4221c2:	lock jne 0x422174
  4221c5:	pandn  mm1,mm0
  4221c8:	imul   ebx,DWORD PTR [edi],0x88734bcf
  4221ce:	sub    DWORD PTR [eax-0x53],esi
  4221d1:	xchg   ebx,eax
  4221d2:	and    cl,0x23
  4221d5:	push   ds
  4221d6:	cmp    cl,BYTE PTR [eax]
  4221d8:	rol    DWORD PTR [edx+0x50ff585],1
  4221de:	pop    ds
  4221df:	lds    ecx,FWORD PTR [edx-0x6a]
  4221e2:	jg     0x4221e7
  4221e4:	push   DWORD PTR [bx-0x7ab4]
  4221e9:	and    al,0xf5
  4221eb:	push   ds
  4221ec:	lods   al,BYTE PTR ds:[esi]
  4221ed:	js     0x4221ae
  4221ef:	push   0x383edc3c
  4221f4:	inc    esi
  4221f5:	lea    edi,[ebp+0x3bec81a]
  4221fb:	cmp    esi,DWORD PTR [ebp+edi*8-0x39]
  4221ff:	stos   DWORD PTR es:[edi],eax
  422200:	pop    esi
  422201:	shr    DWORD PTR [ecx],cl
  422203:	adc    ch,cl
  422205:	xchg   esi,eax
  422206:	mov    ah,BYTE PTR [edi-0x75]
  422209:	push   eax
  42220a:	or     DWORD PTR [esi-0x716ec4a8],0x2d6b4a49
  422214:	sbb    eax,0xa947b5bd
  422219:	mov    eax,ds:0xe00060b1
  42221e:	iret   
  42221f:	sub    DWORD PTR [ebx+0x78],0xffffffb4
  422223:	shl    DWORD PTR [ebp-0x73b881da],cl
  422229:	add    DWORD PTR [edx+0x64],eax
  42222c:	and    al,0x4b
  42222e:	nop
  42222f:	jbe    0x4221b8
  422231:	sub    BYTE PTR [ebx+eax*1],ah
  422234:	jo     0x422259
  422236:	and    esp,DWORD PTR [ecx+0x7]
  422239:	sub    al,0xdc
  42223b:	lds    esi,FWORD PTR ds:0xcf1ea0b4
  422241:	push   esp
  422242:	sbb    bl,ah
  422244:	addr16 (bad) 
  422246:	mov    ds:0x2e06a7b4,eax
  42224b:	fist   DWORD PTR [ebp+edi*2+0x37f1ced0]
  422252:	mov    DWORD PTR [esi+0x41e4dc42],0x77d8c45d
  42225c:	dec    eax
  42225d:	popf   
  42225e:	jl     0x4222d5
  422260:	jl     0x4221f6
  422262:	pop    esp
  422263:	jnp    0x422274
  422265:	xor    eax,0xd16cd7bd
  42226a:	sub    al,0xbc
  42226c:	mov    ah,0xb7
  42226e:	dec    ebx
  42226f:	inc    ebx
  422270:	adc    ebx,ecx
  422272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422273:	sub    dl,al
  422275:	mov    al,ds:0x983407e8
  42227a:	sub    eax,ebx
  42227c:	test   al,0x8
  42227e:	or     eax,0x99eab9af
  422283:	daa    
  422284:	ds or  al,al
  422287:	and    eax,0x740e998d
  42228c:	call   FWORD PTR [ecx-0x2e]
  42228f:	dec    esi
  422290:	leave  
  422291:	and    DWORD PTR [ebx],ebp
  422293:	lods   al,BYTE PTR ds:[esi]
  422294:	fisttp QWORD PTR [ebp-0x71]
  422297:	pop    esp
  422298:	xchg   BYTE PTR ds:0xdd72c4ab,dh
  42229e:	mov    eax,ds:0x7edaae20
  4222a3:	cdq    
  4222a4:	jno    0x4222c4
  4222a6:	in     al,dx
  4222a7:	add    eax,0x443c30f3
  4222ac:	scas   eax,DWORD PTR es:[edi]
  4222ad:	fs aam 0x55
  4222b0:	push   eax
  4222b1:	xor    al,0x2b
  4222b3:	inc    ah
  4222b5:	outs   dx,BYTE PTR ds:[esi]
  4222b6:	into   
  4222b7:	xor    DWORD PTR [ebx-0x1c7a4272],edi
  4222bd:	mov    dh,0x23
  4222bf:	cmp    BYTE PTR [esp+edi*4],al
  4222c2:	fwait
  4222c3:	mov    al,0xcb
  4222c5:	mov    ebx,DWORD PTR [ecx-0x1ea0f342]
  4222cb:	cli    
  4222cc:	in     al,0xf0
  4222ce:	dec    edx
  4222cf:	in     al,dx
  4222d0:	jae    0x4222ba
  4222d2:	stc    
  4222d3:	enter  0x7529,0x22
  4222d7:	sub    DWORD PTR [edx+0x4d7a171b],esi
  4222dd:	xchg   ebx,eax
  4222de:	cld    
  4222df:	das    
  4222e0:	push   ebx
  4222e1:	push   edi
  4222e2:	nop
  4222e3:	ja     0x42227f
  4222e5:	mov    edi,0x936866d1
  4222ea:	add    ah,BYTE PTR [ecx+0x7dd5a9a]
  4222f0:	cld    
  4222f1:	sbb    eax,0x912c7812
  4222f6:	adc    ah,BYTE PTR [ecx+0x30]
  4222f9:	js     0x4222ae
  4222fb:	neg    DWORD PTR [esi]
  4222fd:	dec    esi
  4222fe:	pop    es
  4222ff:	sbb    al,0xd7
  422301:	cdq    
  422302:	xor    al,0xde
  422304:	(bad)  
  422305:	mov    dh,BYTE PTR [edi-0x66]
  422308:	jl     0x422309
  42230a:	repz ffree st(5)
  42230d:	repz in al,0x1d
  422310:	stc    
  422311:	addr16 jmp edx
  422314:	xor    BYTE PTR [ecx+0x4ec7f69f],cl
  42231a:	jno    0x422302
  42231c:	xor    ebx,DWORD PTR [edi-0x14]
  42231f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422320:	sub    bh,BYTE PTR [ebp+0x48]
  422323:	mov    edx,0xe322c64c
  422328:	test   DWORD PTR [edx+0x5a],ecx
  42232b:	aad    0xbc
  42232d:	in     al,0x43
  42232f:	inc    edx
  422330:	push   ds
  422331:	or     DWORD PTR [edx-0x4f949434],esp
  422337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422338:	mov    bl,0x41
  42233a:	adc    ch,dl
  42233c:	add    edx,DWORD PTR [esi+0x5c76eba0]
  422342:	into   
  422343:	mov    edi,ebp
  422345:	jno    0x42234f
  422347:	mov    WORD PTR [esi],?
  422349:	(bad)  
  42234a:	dec    edx
  42234b:	mov    ebx,0xd9802ae9
  422350:	sub    al,0xf3
  422352:	dec    BYTE PTR ds:0xe941dceb
  422358:	sub    al,bl
  42235a:	mov    WORD PTR [edi],?
  42235c:	stc    
  42235d:	push   0x4c609c37
  422362:	add    al,0x9d
  422364:	mov    esi,0xc1408cb6
  422369:	test   DWORD PTR [edx],ecx
  42236b:	sbb    DWORD PTR [ebx-0x441f683c],ebx
  422371:	dec    edi
  422372:	shr    dh,cl
  422374:	bt     DWORD PTR [edi+0x25],esp
  422378:	dec    edi
  422379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42237a:	cwde   
  42237b:	sbb    al,0x25
  42237d:	daa    
  42237e:	fadd   QWORD PTR [edx]
  422380:	js     0x422313
  422382:	jp     0x422400
  422384:	fst    DWORD PTR [ebp+0x28]
  422387:	les    eax,FWORD PTR [edi+edi*1+0x6a]
  42238b:	test   eax,0x4a99461e
  422390:	jae    0x42235a
  422392:	and    ecx,DWORD PTR [ebx]
  422394:	mov    ebp,0x81b52136
  422399:	dec    ebx
  42239a:	addr16 ret 
  42239c:	pop    ecx
  42239d:	jo     0x42236f
  42239f:	xchg   ebx,eax
  4223a0:	pop    esp
  4223a1:	mov    edi,0x8340a199
  4223a6:	lods   eax,DWORD PTR ds:[esi]
  4223a7:	(bad)  
  4223a8:	pop    edi
  4223a9:	rol    ah,0xa0
  4223ac:	lods   al,BYTE PTR ds:[esi]
  4223ad:	lock pop edx
  4223af:	pop    edx
  4223b0:	retf   
  4223b1:	ja     0x422348
  4223b3:	push   esp
  4223b4:	xchg   esp,eax
  4223b5:	mov    esp,DWORD PTR [ebp-0x28]
  4223b8:	pop    ss
  4223b9:	xor    DWORD PTR [eax+edx*2-0x2bed4f15],ecx
  4223c0:	jb     0x4223e2
  4223c2:	dec    ecx
  4223c3:	iret   
  4223c4:	fadd   DWORD PTR ds:[eax+eax*8]
  4223c8:	mov    BYTE PTR [edi-0x59],ch
  4223cb:	push   ebx
  4223cc:	enter  0x225a,0xd5
  4223d0:	stos   DWORD PTR es:[edi],eax
  4223d1:	cmp    cl,bh
  4223d3:	xchg   BYTE PTR [eax+eax*4],ch
  4223d6:	repnz fnstsw WORD PTR [ecx+0x5a]
  4223da:	adc    bh,bl
  4223dc:	pop    esp
  4223dd:	jmp    0x7a70f3f0
  4223e2:	mov    BYTE PTR [ebx+edx*8],cl
  4223e5:	mov    ebx,0xd1768440
  4223ea:	std    
  4223eb:	and    BYTE PTR [ecx+eiz*4],al
  4223ee:	pop    edi
  4223ef:	inc    ebp
  4223f0:	retf   
  4223f1:	hlt    
  4223f2:	xchg   ecx,eax
  4223f3:	int    0x48
  4223f5:	and    al,0x4b
  4223f7:	jp     0x4223dc
  4223f9:	bound  edi,QWORD PTR [esi+eax*4]
  4223fc:	push   0x16
  4223fe:	sbb    DWORD PTR [eax-0x7d95d6fe],ebx
  422404:	add    BYTE PTR [ebx],ch
  422406:	jecxz  0x422454
  422408:	pop    ds
  422409:	jae    0x4223a0
  42240b:	out    dx,eax
  42240c:	int3   
  42240d:	test   BYTE PTR [eax+0x3d],bl
  422410:	mov    gs,esi
  422412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422413:	test   DWORD PTR [esi],ebx
  422415:	dec    ecx
  422416:	pop    ss
  422417:	sbb    DWORD PTR [ebp-0x5f],edi
  42241a:	aam    0x1e
  42241c:	or     esi,DWORD PTR [ebx]
  42241e:	repnz sub esi,DWORD PTR [eax-0x280c599]
  422425:	imul   esp,DWORD PTR [edi],0x1e
  422428:	xor    bh,bh
  42242a:	xor    bh,BYTE PTR [eax]
  42242c:	xchg   ecx,eax
  42242d:	adc    al,0xfa
  42242f:	jb     0x422468
  422431:	repz mov dh,0x19
  422434:	mov    WORD PTR [edx+0x6a],ss
  422437:	and    eax,0x4dff743b
  42243c:	popf   
  42243d:	cli    
  42243e:	ins    BYTE PTR es:[edi],dx
  42243f:	pop    esi
  422440:	imul   eax,esi,0x34779e27
  422446:	hlt    
  422447:	ret    0x7cd1
  42244a:	lods   eax,DWORD PTR ds:[esi]
  42244b:	aam    0xd7
  42244d:	arpl   WORD PTR ss:[ecx-0x3],ax
  422451:	test   eax,0x32254214
  422456:	jno    0x422461
  422458:	add    esi,DWORD PTR [edx-0x6b]
  42245b:	inc    eax
  42245c:	mov    dl,0xd4
  42245e:	dec    ebp
  42245f:	aas    
  422460:	push   edi
  422461:	xor    DWORD PTR [ebp-0x46],0xa
  422465:	cmp    dh,cl
  422467:	cmp    bl,BYTE PTR [esi]
  422469:	pop    esp
  42246a:	pop    edx
  42246b:	mov    edx,DWORD PTR [edx-0x52]
  42246e:	xor    eax,0xfa83338d
  422473:	xchg   DWORD PTR [edi],ecx
  422475:	and    cl,BYTE PTR ds:0x4ca6146
  42247b:	pop    ecx
  42247c:	and    DWORD PTR ds:0x4d1f8fde,0xffffffd9
  422483:	and    DWORD PTR ds:0xa02bee6b,esp
  422489:	cmp    dl,cl
  42248b:	sub    eax,0xc69268d6
  422490:	dec    ebp
  422491:	and    edx,DWORD PTR [eax-0x5f72b430]
  422497:	pop    es
  422498:	loopne 0x42244e
  42249a:	mov    esp,0x86df8d29
  42249f:	sub    al,0xbd
  4224a1:	sbb    ebx,edx
  4224a3:	or     eax,0x9251d580
  4224a8:	inc    ecx
  4224a9:	(bad)  [ecx-0x6de920c]
  4224af:	loope  0x4224a7
  4224b1:	sub    eax,0xa0056ae9
  4224b6:	cld    
  4224b7:	or     ebp,DWORD PTR [ebp+0x7eb9601b]
  4224bd:	mov    al,0x1c
  4224bf:	cwde   
  4224c0:	mov    eax,0x1c2f53cc
  4224c5:	loopne 0x42251b
  4224c7:	test   al,0x3e
  4224c9:	add    DWORD PTR [esi-0x20],0xffffffd4
  4224cd:	push   esi
  4224ce:	(bad)  
  4224cf:	clc    
  4224d0:	imul   esp,DWORD PTR [ecx-0x580b175a],0x61140774
  4224da:	xchg   esp,eax
  4224db:	neg    DWORD PTR [esi-0x5a]
  4224de:	(bad)  
  4224e0:	and    eax,0x5fdce390
  4224e5:	gs (bad) 
  4224e7:	ins    BYTE PTR es:[edi],dx
  4224e8:	lds    edi,FWORD PTR [esi+0x3c]
  4224eb:	outs   dx,DWORD PTR ds:[esi]
  4224ec:	int    0xac
  4224ee:	(bad)  [edi]
  4224f0:	jno    0x42251e
  4224f2:	push   edi
  4224f3:	inc    edi
  4224f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f5:	nop
  4224f6:	and    bh,BYTE PTR [ecx+ebp*4+0x13498103]
  4224fd:	xchg   ebx,eax
  4224fe:	cld    
  4224ff:	jnp    0x4224a7
  422501:	mov    al,ds:0x5c921ca2
  422506:	add    al,0x47
  422508:	adc    ebp,DWORD PTR es:[edi-0xe]
  42250c:	mov    ebx,0xa8156a1a
  422511:	sbb    BYTE PTR [ebx],0xa8
  422514:	ret    
  422515:	mov    edi,0x4bbaf6e0
  42251a:	cdq    
  42251b:	xchg   ecx,eax
  42251c:	push   ds
  42251d:	test   al,0x51
  42251f:	cmp    ebp,0xaaef5110
  422525:	jns    0x4224ad
  422527:	inc    eax
  422528:	push   edx
  422529:	jb     0x42257f
  42252b:	(bad)  
  42252c:	push   0x34b37afa
  422531:	mov    DWORD PTR [ecx+0x25a63709],esi
  422537:	cli    
  422538:	add    eax,0x25fc49f9
  42253d:	adc    eax,0xb0e4f65
  422542:	push   ds
  422543:	push   ss
  422544:	inc    esp
  422545:	(bad)  
  422547:	mov    ebx,0x8feea847
  42254c:	jbe    0x42258a
  42254e:	in     eax,dx
  42254f:	jmp    edi
  422551:	scas   al,BYTE PTR es:[edi]
  422552:	xor    bh,BYTE PTR [edi+0x9625360]
  422558:	push   es
  422559:	and    esi,DWORD PTR gs:[esi+0x54128ee0]
  422560:	inc    ebx
  422561:	lea    edx,[edx-0x19a1830b]
  422567:	(bad)  
  422568:	dec    ebp
  422569:	cmovns eax,edx
  42256c:	(bad)  
  42256d:	mov    edi,0xf0936560
  422572:	mov    esp,0xfe184ac2
  422577:	fdiv   QWORD PTR ds:0xdbc657d2
  42257d:	sbb    ebp,DWORD PTR [ebp-0xd]
  422580:	cmp    esp,DWORD PTR [ecx+0x53fa8990]
  422586:	clc    
  422587:	mov    esp,0x93d1a104
  42258c:	mov    dh,BYTE PTR [edx-0x59]
  42258f:	add    DWORD PTR [edx],esp
  422591:	mov    cl,0x44
  422593:	add    edi,DWORD PTR [edx+0x52af67ed]
  422599:	mov    WORD PTR ds:0x9313df43,gs
  42259f:	cmp    ebp,DWORD PTR [ebp-0x29]
  4225a2:	fstp   QWORD PTR ds:0xf616e332
  4225a8:	sub    edx,DWORD PTR [edi-0x214e6bfa]
  4225ae:	(bad)  
  4225af:	icebp  
  4225b0:	lods   eax,DWORD PTR ds:[esi]
  4225b1:	jl     0x422615
  4225b3:	cmp    al,0x93
  4225b5:	mov    ch,0xf8
  4225b7:	shl    BYTE PTR [eax],0x41
  4225ba:	repz enter 0xb841,0x14
  4225bf:	repz enter 0x64bb,0xca
  4225c4:	mov    es,eax
  4225c6:	xor    eax,0x8cb32b99
  4225cb:	sbb    al,0xe8
  4225cd:	mov    dh,0x16
  4225cf:	dec    ebx
  4225d0:	mov    edx,0x76cb0791
  4225d5:	jb     0x4225e8
  4225d7:	repnz ficomp WORD PTR ds:0xae23069c
  4225de:	loope  0x422657
  4225e0:	ret    
  4225e1:	xchg   ecx,eax
  4225e2:	mov    DWORD PTR [ebx+0x43dd01ae],esi
  4225e8:	add    al,0x18
  4225ea:	xor    eax,0xef742df9
  4225ef:	int    0x3f
  4225f1:	cdq    
  4225f2:	popf   
  4225f3:	in     al,dx
  4225f4:	jmp    0x295b:0x560ae75c
  4225fb:	fdivr  QWORD PTR ss:[ecx]
  4225fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225ff:	xchg   esi,eax
  422600:	jmp    0x6facf354
  422605:	shl    ah,1
  422607:	div    DWORD PTR [edx+0x76]
  42260a:	into   
  42260b:	jne    0x4225ab
  42260d:	aaa    
  42260e:	fadd   QWORD PTR [esi+0x59dcbfce]
  422614:	dec    edi
  422615:	jp     0x422606
  422617:	div    bl
  422619:	lea    esp,[ecx-0x2e]
  42261c:	inc    esp
  42261d:	sub    eax,esp
  42261f:	clc    
  422620:	sub    cl,ch
  422622:	push   ecx
  422623:	sbb    al,0x4e
  422625:	add    eax,0x7aa404d7
  42262a:	aad    0xe5
  42262c:	in     eax,0x2
  42262e:	dec    ebp
  42262f:	lahf   
  422630:	and    cl,BYTE PTR [ebp-0x4a154e74]
  422636:	or     cl,BYTE PTR [ebx+ecx*4]
  422639:	dec    ebp
  42263a:	frstor [esp+edx*2]
  42263d:	and    al,0x9d
  42263f:	fiadd  DWORD PTR [edi-0x214aa1db]
  422645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422646:	std    
  422647:	adc    ah,al
  422649:	jnp    0x422691
  42264b:	push   0x7252b206
  422650:	bound  eax,QWORD PTR [edx+0x5c4e216a]
  422656:	das    
  422657:	into   
  422658:	scas   eax,DWORD PTR es:[edi]
  422659:	xor    BYTE PTR [esi-0x1a],bl
  42265c:	cmp    al,0x8b
  42265e:	pop    edi
  42265f:	outs   dx,BYTE PTR ds:[esi]
  422660:	push   edi
  422661:	add    al,0x6f
  422663:	shr    edx,0x1e
  422666:	outs   dx,BYTE PTR ds:[esi]
  422667:	sub    dh,dl
  422669:	dec    edi
  42266a:	add    al,0xc5
  42266c:	jmp    0x970:0x3abbb3fd
  422673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422674:	sub    eax,0x44104861
  422679:	jmp    0xf29d:0x13637aa8
  422680:	fwait
  422681:	js     0x42264a
  422683:	sub    eax,0x8b717180
  422688:	mov    esp,0x34ee9bd9
  42268d:	stos   DWORD PTR es:[edi],eax
  42268e:	jmp    0xbbd2:0x9aa5e7d4
  422695:	aaa    
  422696:	mov    ds:0x4c3beb5b,eax
  42269b:	pop    ebp
  42269c:	std    
  42269d:	and    cl,ah
  42269f:	sub    DWORD PTR [eax+0xe],0x80a31431
  4226a6:	into   
  4226a7:	cmp    dh,BYTE PTR [eax-0x20b34328]
  4226ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ae:	in     eax,dx
  4226af:	sbb    bh,BYTE PTR [edx-0x4e]
  4226b2:	pushf  
  4226b3:	inc    edi
  4226b4:	mov    ch,BYTE PTR [ebx]
  4226b6:	sbb    edx,ebx
  4226b8:	inc    edi
  4226b9:	xlat   BYTE PTR ds:[ebx]
  4226ba:	cli    
  4226bb:	pop    eax
  4226bc:	sar    ch,1
  4226be:	daa    
  4226bf:	add    BYTE PTR [esp+eax*2-0x25d4249a],ah
  4226c6:	mov    bl,0x65
  4226c8:	in     eax,0xee
  4226ca:	mov    ds:0xdc733840,eax
  4226cf:	mov    edx,0xab989536
  4226d4:	push   esp
  4226d5:	dec    ecx
  4226d6:	mov    ah,0x0
  4226d8:	add    al,0x7b
  4226da:	test   DWORD PTR [esi],ecx
  4226dc:	sbb    BYTE PTR [edx],ch
  4226de:	call   0xab805811
  4226e3:	dec    ebp
  4226e4:	and    eax,0x9a091c42
  4226e9:	fiadd  WORD PTR [edi]
  4226eb:	repnz retf 
  4226ed:	(bad)  
  4226ee:	outs   dx,BYTE PTR ds:[esi]
  4226ef:	test   al,0x77
  4226f1:	pushf  
  4226f2:	cmp    DWORD PTR [esi+esi*1-0x6c],ecx
  4226f6:	sti    
  4226f7:	aaa    
  4226f8:	jmp    0x4226b2
  4226fa:	sbb    esp,DWORD PTR [edx]
  4226fc:	mov    esi,ebx
  4226fe:	xor    DWORD PTR [esi+0x7f],ecx
  422701:	gs jmp 0xc87e:0xc8b4fa5d
  422709:	outs   dx,DWORD PTR ds:[esi]
  42270a:	adc    al,0x30
  42270c:	sub    ecx,DWORD PTR [ecx-0xb]
  42270f:	mov    ds:0xab206147,eax
  422714:	ins    BYTE PTR es:[edi],dx
  422715:	mov    dh,0x89
  422717:	mov    esp,0x28549b70
  42271c:	inc    edi
  42271d:	pushf  
  42271e:	add    BYTE PTR [ebp-0x2486d937],bl
  422724:	mov    ah,0xa3
  422726:	jmp    0x364e:0xccff53ae
  42272d:	les    edx,FWORD PTR [ebx+0x497e948c]
  422733:	or     ebx,DWORD PTR [edi]
  422735:	popa   
  422736:	and    al,0x1
  422738:	sti    
  422739:	xchg   esp,eax
  42273a:	outs   dx,BYTE PTR ds:[esi]
  42273b:	sbb    BYTE PTR [edi-0x4aa39b37],dl
  422741:	and    DWORD PTR [esi-0x5d],edi
  422744:	and    eax,0x66fb93ce
  422749:	sub    esp,ebp
  42274b:	push   ss
  42274c:	es jge 0x42273f
  42274f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422750:	lds    ebp,FWORD PTR [ecx+0x137de08e]
  422756:	push   ebp
  422757:	push   ds
  422758:	fidivr DWORD PTR [ecx+ebx*1-0x2b004dd9]
  42275f:	std    
  422760:	repnz inc ebx
  422762:	cli    
  422763:	daa    
  422764:	adc    al,0xdd
  422766:	inc    edx
  422767:	call   0x1d4c:0x602129ab
  42276e:	ds and eax,ecx
  422771:	icebp  
  422772:	cs dec esp
  422774:	push   cs
  422775:	scas   eax,DWORD PTR es:[edi]
  422776:	sub    eax,0x915bf468
  42277b:	out    0xde,eax
  42277d:	hlt    
  42277e:	xchg   edi,eax
  42277f:	ja     0x422705
  422781:	out    0x4d,eax
  422783:	test   eax,0x38f9ba69
  422788:	test   ebx,edi
  42278a:	cmp    ecx,DWORD PTR [esi+0x34]
  42278d:	bound  ebp,QWORD PTR [edi]
  42278f:	std    
  422790:	sub    edi,DWORD PTR [esi+0x49]
  422793:	mov    esi,0x9d37e971
  422798:	and    eax,0xe301dcc1
  42279d:	hlt    
  42279e:	add    ah,dl
  4227a0:	cmp    cl,0x63
  4227a3:	ins    BYTE PTR es:[edi],dx
  4227a4:	jae    0x422770
  4227a6:	xor    al,0x1d
  4227a8:	cld    
  4227a9:	lock int 0xab
  4227ac:	je     0x42276c
  4227ae:	xor    BYTE PTR [edx-0x58],ah
  4227b1:	and    BYTE PTR [ebp-0x1d],cl
  4227b4:	shl    DWORD PTR [ebp+0x75],0xdd
  4227b8:	jo     0x4227ee
  4227ba:	add    BYTE PTR [eax-0x2d],dh
  4227bd:	xlat   BYTE PTR ds:[ebx]
  4227be:	xchg   edi,eax
  4227bf:	into   
  4227c0:	rcl    DWORD PTR [ebx+0x79],1
  4227c3:	aas    
  4227c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227c5:	in     eax,0x82
  4227c7:	add    BYTE PTR ds:0x29accb9,bh
  4227cd:	inc    ecx
  4227ce:	mov    esi,0x23cf3f65
  4227d3:	jle    0x42278f
  4227d5:	push   ss
  4227d6:	mov    ds:0x1848d76a,eax
  4227db:	aam    0x5c
  4227dd:	aam    0xa2
  4227df:	xlat   BYTE PTR ds:[ebx]
  4227e0:	outs   dx,BYTE PTR ds:[esi]
  4227e1:	scas   eax,DWORD PTR es:[edi]
  4227e2:	das    
  4227e3:	pop    edx
  4227e4:	ds pop ebp
  4227e6:	mov    ?,ebp
  4227e8:	out    0x5,al
  4227ea:	stos   BYTE PTR es:[edi],al
  4227eb:	jne    0x422786
  4227ed:	jmp    0x422783
  4227ef:	aaa    
  4227f0:	xchg   ebx,eax
  4227f1:	jae    0x4227f4
  4227f3:	cwde   
  4227f4:	cwde   
  4227f5:	xchg   esi,eax
  4227f6:	(bad)  
  4227f7:	std    
  4227f8:	pushf  
  4227f9:	mov    al,ds:0x96049f8b
  4227fe:	jg     0x422833
  422800:	pop    ss
  422801:	cli    
  422802:	imul   eax,DWORD PTR [ebx+0x8],0x5b
  422806:	lds    esp,FWORD PTR [esp+eax*1-0x67e50aac]
  42280d:	repnz mov ebp,0x16de85d8
  422813:	sub    al,0x55
  422815:	mov    edx,0xd26f2a6f
  42281a:	loopne 0x422812
  42281c:	rcl    BYTE PTR [esp+esi*8],cl
  42281f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422820:	repnz dec ebp
  422822:	mov    al,0xba
  422824:	jns    0x422837
  422826:	fwait
  422827:	mov    dl,0x20
  422829:	dec    edi
  42282a:	mov    dh,0x4d
  42282c:	test   eax,0xe0487c85
  422831:	sbb    bl,dl
  422833:	and    ch,dh
  422835:	ret    
  422836:	mov    ds:0xa1055e42,al
  42283b:	or     eax,0x948d1fcc
  422840:	imul   DWORD PTR [esi+edx*2+0xb]
  422844:	add    eax,0xf9a05374
  422849:	mov    BYTE PTR [esi+0x66],ah
  42284c:	retfw  0x227d
  422850:	dec    ebx
  422851:	iret   
  422852:	mov    dl,0x7f
  422854:	xor    bl,dl
  422856:	add    dl,ch
  422858:	mov    dh,0x8f
  42285a:	sbb    BYTE PTR [edx],cl
  42285c:	rcr    BYTE PTR [edx],0x3d
  42285f:	popa   
  422860:	push   esp
  422861:	cmp    edi,esp
  422863:	or     ebx,ebx
  422865:	ds addr16 popf 
  422868:	fidiv  WORD PTR [esi+0x11]
  42286b:	add    ah,BYTE PTR [ecx+0xed6355f]
  422871:	sbb    BYTE PTR [edx-0x5f],dh
  422874:	or     bh,BYTE PTR [edx-0x358746af]
  42287a:	hlt    
  42287b:	mov    bl,0xe9
  42287d:	jbe    0x4228b0
  42287f:	cli    
  422880:	(bad)  
  422881:	clc    
  422882:	inc    esi
  422883:	repz sti 
  422885:	sbb    BYTE PTR [ebp+0x4],al
  422888:	push   eax
  422889:	retf   
  42288a:	aad    0xd2
  42288c:	dec    ebp
  42288d:	pop    ebp
  42288e:	pop    ecx
  42288f:	adc    eax,0x26441b61
  422894:	mul    ebx
  422896:	jge    0x42289f
  422898:	jne    0x42285b
  42289a:	mov    ebx,0xcd27ff68
  42289f:	adc    eax,0xe074184c
  4228a4:	test   DWORD PTR [ebp+0x25],0xf26cdf8c
  4228ab:	aaa    
  4228ac:	sub    ah,BYTE PTR [ebp+edx*4+0xa]
  4228b0:	mov    eax,?
  4228b2:	sub    DWORD PTR [esi+edx*2],edx
  4228b5:	shr    ah,cl
  4228b7:	jmp    0xc33a:0x38557e21
  4228be:	rcr    BYTE PTR [ebp-0x139f4bbe],1
  4228c4:	leave  
  4228c5:	es (bad) 
  4228c7:	pushf  
  4228c8:	(bad)  
  4228c9:	add    esi,ebx
  4228cb:	jno    0x4228de
  4228cd:	ret    
  4228ce:	sub    ecx,DWORD PTR [edx+0x42bf3503]
  4228d4:	xchg   ebx,eax
  4228d5:	sub    BYTE PTR [edx],cl
  4228d7:	mov    bl,0xaf
  4228d9:	aad    0x46
  4228db:	(bad)  
  4228dc:	call   0xc4677342
  4228e1:	mov    edx,0x6fcced29
  4228e6:	xchg   ebp,eax
  4228e7:	mov    BYTE PTR [ebx],dh
  4228e9:	aaa    
  4228ea:	mov    bl,0x41
  4228ec:	cdq    
  4228ed:	dec    edx
  4228ee:	outs   dx,DWORD PTR ds:[esi]
  4228ef:	dec    ebx
  4228f0:	lock lds eax,FWORD PTR [eax+0x26bf803c]
  4228f7:	fist   WORD PTR [edx-0x3a]
  4228fa:	push   eax
  4228fb:	jmp    0x422903
  4228fd:	imul   esp,DWORD PTR [edi-0x5a],0x2a
  422901:	pop    esp
  422902:	in     al,dx
  422903:	aad    0x8e
  422905:	outs   dx,DWORD PTR ds:[esi]
  422906:	jae    0x4228e2
  422908:	mov    esp,0x62e73827
  42290d:	inc    ebp
  42290e:	test   al,0x1c
  422910:	add    dl,BYTE PTR [edi-0x10]
  422913:	mov    ds:0xb85ff949,eax
  422918:	imul   esp,edi,0xcb94eb54
  42291e:	sub    esi,esi
  422920:	mov    al,0xa
  422922:	cwde   
  422923:	or     BYTE PTR [edi],ch
  422925:	adc    eax,0x752b8099
  42292a:	mov    al,ds:0xd2a06625
  42292f:	into   
  422930:	es retf 0x3d56
  422934:	fstp   TBYTE PTR [eax]
  422936:	out    dx,al
  422937:	lods   eax,DWORD PTR ds:[esi]
  422938:	sub    BYTE PTR [ebp-0x7f],al
  42293b:	neg    edx
  42293d:	jnp    0x422931
  42293f:	jae    0x422957
  422941:	ret    0x76e8
  422944:	lods   eax,DWORD PTR ds:[esi]
  422945:	mov    bl,0x12
  422947:	in     eax,0x62
  422949:	mov    ebp,0xd23a533d
  42294e:	xchg   ebx,eax
  42294f:	repz and BYTE PTR [esi+0x37],ch
  422953:	lods   eax,DWORD PTR ds:[esi]
  422954:	xor    ah,BYTE PTR [edi-0x23]
  422957:	mov    dh,0xc2
  422959:	loope  0x42298e
  42295b:	rol    BYTE PTR [ebx+0x10c210c4],0x0
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
